refactor maven-artifact: first pass, reduce the usage of setPath()


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163681 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.project.ProjectBuildingException;
+import org.apache.maven.wagon.util.IoUtils;
-        try
-        {
-            List dependencies = null;
+        List dependencies = null;
-            if ( mavenProjectBuilder != null )
+        if ( mavenProjectBuilder != null )
+        {
+            Model model = mavenProjectBuilder.getCachedModel( artifact.getGroupId(), artifact.getArtifactId(),
+                                                              artifact.getVersion() );
+            if ( model != null )
-                Model model = mavenProjectBuilder.getCachedModel( artifact.getGroupId(), artifact.getArtifactId(),
-                                                                  artifact.getVersion() );
-                if ( model != null )
-                {
-                    dependencies = model.getDependencies();
-                }
+                dependencies = model.getDependencies();
+            }
+        }
+
+        if ( dependencies == null )
+        {
+            Artifact metadataArtifact = artifactFactory.createArtifact( artifact.getGroupId(),
+                                                                        artifact.getArtifactId(),
+                                                                        artifact.getVersion(), artifact.getScope(),
+                                                                        "pom", null );
+
+            try
+            {
+                metadataArtifact = artifactResolver.resolve( metadataArtifact, remoteRepositories, localRepository );
+            }
+            catch ( ArtifactResolutionException e )
+            {
+                throw new ArtifactMetadataRetrievalException( "Error while resolving metadata artifact", e );
-            if ( dependencies == null )
+            // [jdcasey/03-Feb-2005]: Replacing with ProjectBuilder, to enable
+            // post-processing and inheritance calculation before retrieving the
+            // associated artifacts. This should improve consistency.
+            if ( mavenProjectBuilder != null )
-                Artifact metadataArtifact = artifactFactory.createArtifact( artifact.getGroupId(),
-                                                                            artifact.getArtifactId(),
-                                                                            artifact.getVersion(), artifact.getScope(),
-                                                                            "pom", null );
-
-                artifactResolver.resolve( metadataArtifact, remoteRepositories, localRepository );
-
-                // [jdcasey/03-Feb-2005]: Replacing with ProjectBuilder, to enable
-                // post-processing and inheritance calculation before retrieving the
-                // associated artifacts. This should improve consistency.
-                    if ( mavenProjectBuilder != null )
-                    {
-                        MavenProject p = mavenProjectBuilder.buildFromRepository( metadataArtifact, localRepository );
-                        dependencies = p.getDependencies();
-                    }
-                    else
-                    {
-                        Model model = reader.read( new FileReader( metadataArtifact.getFile() ) );
-                        dependencies = model.getDependencies();
-                    }
+                    MavenProject p = mavenProjectBuilder.buildFromRepository( metadataArtifact, localRepository );
+                    dependencies = p.getDependencies();
+                }
+                catch ( ProjectBuildingException e )
+                {
+                    throw new ArtifactMetadataRetrievalException( "Unable to read the metadata file", e );
+                }
+            }
+            else
+            {
+                FileReader reader = null;
+                try
+                {
+                    reader = new FileReader( metadataArtifact.getFile() );
+                    Model model = this.reader.read( reader );
+                    dependencies = model.getDependencies();
-                    throw new ArtifactMetadataRetrievalException(
-                        "Cannot read artifact source: " + metadataArtifact.getPath(), e );
+                    throw new ArtifactMetadataRetrievalException( "Unable to read the metadata file", e );
+                }
+                finally
+                {
+                    IoUtils.close( reader );
-            return artifactFactory.createArtifacts( dependencies, localRepository, artifact.getScope() );
-        catch ( ArtifactResolutionException e )
-        {
-            throw new ArtifactMetadataRetrievalException( "Error while resolving metadata artifact", e );
-        }
+        return artifactFactory.createArtifacts( dependencies, localRepository, artifact.getScope() );

INS26 INS26 INS40 INS40 MOV8 MOV60 MOV25 INS25 MOV41 MOV27 MOV8 MOV60 INS54 INS8 MOV12 INS8 INS8 MOV21 INS54 INS60 INS54 INS7 MOV8 INS12 INS43 INS59 MOV8 INS12 INS8 INS42 MOV32 INS44 INS8 INS42 INS42 INS33 INS21 MOV44 INS8 INS21 INS43 INS42 INS53 INS7 INS53 INS32 INS42 INS14 INS42 MOV14 INS14 INS42 INS42 INS42 MOV43 INS45 INS42 INS22 INS42 INS43 INS45 INS42 INS52 INS42 INS42 DEL42 DEL45 DEL32 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL25 DEL8 DEL54 DEL8