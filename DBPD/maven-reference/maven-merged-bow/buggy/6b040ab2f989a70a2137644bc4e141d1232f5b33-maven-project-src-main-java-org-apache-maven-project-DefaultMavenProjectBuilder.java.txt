o remove some superfluous reader creation in the project builder
o remove profile handling from the construction of the super project, there are no profiles in it anymore (and shouldn't be in the future)


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@727267 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.StringReader;
-import org.apache.maven.project.builder.Interpolator;
+import org.apache.maven.project.builder.Interpolator;
+import org.apache.maven.project.builder.PomArtifactResolver;
-import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
-            .buildArtifactRepositories( getSuperProject( config, projectDescriptor, true ).getModel() ), artifactResolver ), config );
+            .buildArtifactRepositories( getSuperModel() ), artifactResolver ), config );
+        
-    // This is used by the RR plugin
+    //!! This is used by the RR plugin
-        artifactRepositories.addAll( mavenTools.buildArtifactRepositories( getSuperProject( config, artifact.getFile(), false ).getModel() ) );
+        artifactRepositories.addAll( mavenTools.buildArtifactRepositories( getSuperModel() ) );
-            throw new ProjectBuildingException(STANDALONE_SUPERPOM_GROUPID + ":" + STANDALONE_SUPERPOM_ARTIFACTID,
-                                                "Interpolation failure:", e);
+            throw new ProjectBuildingException(STANDALONE_SUPERPOM_GROUPID + ":" + STANDALONE_SUPERPOM_ARTIFACTID, "Interpolation failure:", e);
+        
+        
+        
-        projectProfiles.addAll( profileAdvisor.applyActivatedProfiles( project.getModel(), project.getFile(),
-                                                                       isReactorProject, profileActivationContext ) );
-        projectProfiles.addAll( profileAdvisor.applyActivatedExternalProfiles( project.getModel(), project.getFile(),
-                                                                               externalProfileManager ) );
+        
+        projectProfiles.addAll( profileAdvisor.applyActivatedProfiles( project.getModel(), project.getFile(), isReactorProject, profileActivationContext ) );
+        
+        projectProfiles.addAll( profileAdvisor.applyActivatedExternalProfiles( project.getModel(), project.getFile(), externalProfileManager ) );
+        
-    private MavenProject getSuperProject( ProjectBuilderConfiguration config, File projectDescriptor,
-                                          boolean isReactorProject )
-        throws ProjectBuildingException
+    private MavenProject superProject;
+    
+    private MavenProject getSuperProject( ProjectBuilderConfiguration config, File projectDescriptor )
-
-        MavenProject superProject;
+        if ( superProject != null )
+        {
+            return superProject;
+        }
+        
+
-            throw new ProjectBuildingException( STANDALONE_SUPERPOM_GROUPID + ":" + STANDALONE_SUPERPOM_ARTIFACTID,
-                                                "Maven super-POM contains an invalid repository!", e );
+            // Not going to happen as this exception is thrown when checking distributionManagement and the super pom
+            // doesn't have a distributionManagement section.
-        String projectId = safeVersionlessKey( model.getGroupId(), model.getArtifactId() );
-
-        ProfileActivationContext profileActivationContext;
-        ProfileManager externalProfileManager = config.getGlobalProfileManager();
-        if ( externalProfileManager != null )
-        {
-            // used to trigger the caching of SystemProperties in the container context...
-            try
-            {
-                externalProfileManager.getActiveProfiles();
-            }
-            catch ( ProfileActivationException e )
-            {
-                throw new ProjectBuildingException( projectId, "Failed to activate external profiles.",
-                                                    projectDescriptor, e );
-            }
-            profileActivationContext = externalProfileManager.getProfileActivationContext();
-        }
-        else
-        {
-            profileActivationContext = new DefaultProfileActivationContext( config.getExecutionProperties(), false );
-        }
-
-        List<Profile> superProjectProfiles = new ArrayList<Profile>();
-        superProjectProfiles.addAll( profileAdvisor.applyActivatedProfiles( model, projectDescriptor, isReactorProject,
-                                                                            profileActivationContext ) );
-        superProjectProfiles.addAll(
-            profileAdvisor.applyActivatedExternalProfiles( model, projectDescriptor, externalProfileManager ) );
-        superProject.setActiveProfiles( superProjectProfiles );
-
-    }
+    }    
-        throws ProjectBuildingException
-        URL url = DefaultMavenProjectBuilder.class.getResource( "pom-" + MAVEN_MODEL_VERSION + ".xml" );
-        
-        String projectId = safeVersionlessKey( STANDALONE_SUPERPOM_GROUPID, STANDALONE_SUPERPOM_ARTIFACTID );
-
+        
-            reader = ReaderFactory.newXmlReader( url.openStream() );
-            String modelSource = IOUtil.toString( reader );
-
-            if ( modelSource.indexOf( "<modelVersion>" + MAVEN_MODEL_VERSION ) < 0 )
-            {
-                throw new InvalidProjectModelException( projectId, "Not a v" + MAVEN_MODEL_VERSION + " POM.", new File( "." ) );
-            }
-
-            StringReader sReader = new StringReader( modelSource );
-
-            superModel = modelReader.read( sReader, STRICT_MODEL_PARSING );
+            reader = ReaderFactory.newXmlReader( getClass().getResource( "pom-" + MAVEN_MODEL_VERSION + ".xml" ) );
-            return superModel;
+            superModel = modelReader.read( reader, STRICT_MODEL_PARSING );            
-        catch ( XmlPullParserException e )
+        catch ( Exception e )
-            throw new InvalidProjectModelException( projectId, "Parse error reading POM. Reason: " + e.getMessage(),
-                                                    e );
-        }
-        catch ( IOException e )
-        {
-            throw new ProjectBuildingException( projectId, "Failed build model from URL \'" + url.toExternalForm() +
-                "\'\nError: \'" + e.getLocalizedMessage() + "\'", e );
+            // Not going to happen we're reading the super pom embedded in the JAR
-            IOUtil.close( reader );
+            IOUtil.close( reader );            
+        
+        return superModel;        
-    private MavenProject readModelFromLocalPath( String projectId, File projectDescriptor, DefaultPomArtifactResolver resolver,
-                                                 ProjectBuilderConfiguration config )
+    private MavenProject readModelFromLocalPath( String projectId, File projectDescriptor, PomArtifactResolver resolver, ProjectBuilderConfiguration config )
-                                                              Arrays.asList( getSuperProject( config, projectDescriptor, true ).getModel() ), 
+                                                              Arrays.asList( getSuperProject( config, projectDescriptor ).getModel() ), 

MOV26 MOV26 UPD40 INS23 INS83 MOV43 MOV59 MOV25 MOV41 UPD43 INS8 UPD42 UPD42 INS41 INS42 UPD43 UPD42 UPD42 MOV32 UPD42 UPD42 INS32 INS42 DEL40 DEL26 DEL42 DEL42 DEL42 DEL9 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL9 DEL32 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL42 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL9 DEL14 DEL7 DEL21 DEL8 DEL60 DEL42 DEL43 DEL42 DEL45 DEL42 DEL27 DEL45 DEL42 DEL14 DEL53 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL57 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL34 DEL27 DEL42 DEL43 DEL42 DEL45 DEL42 DEL45 DEL27 DEL42 DEL43 DEL45 DEL14 DEL14 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL42 DEL14 DEL53 DEL9