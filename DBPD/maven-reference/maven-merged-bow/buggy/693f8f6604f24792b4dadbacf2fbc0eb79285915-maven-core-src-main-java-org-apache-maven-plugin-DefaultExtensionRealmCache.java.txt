MNG-5677 hooks to allow fine-grained cache management

Also fixed broken cache #flush() and missing #dispose() in
couple of places.

Signed-off-by: Igor Fedorenko <igor@ifedorenko.com>

-import java.util.HashMap;
+import java.util.concurrent.ConcurrentHashMap;
+import org.codehaus.plexus.classworlds.realm.NoSuchRealmException;
+import org.codehaus.plexus.personality.plexus.lifecycle.phase.Disposable;
-    implements ExtensionRealmCache
+    implements ExtensionRealmCache, Disposable
-    private static class CacheKey
+    protected static class CacheKey
+        implements Key
+        @Override
+        public String toString()
+        {
+            return files.toString();
+        }
-    private final Map<CacheKey, CacheRecord> cache = new HashMap<CacheKey, CacheRecord>();
+    protected final Map<Key, CacheRecord> cache = new ConcurrentHashMap<Key, CacheRecord>();
-    public CacheRecord get( List<? extends Artifact> extensionArtifacts )
+    @Override
+    public Key createKey( List<? extends Artifact> extensionArtifacts )
-        return cache.get( new CacheKey( extensionArtifacts ) );
+        return new CacheKey( extensionArtifacts );
-    public CacheRecord put( List<? extends Artifact> extensionArtifacts, ClassRealm extensionRealm,
-                            ExtensionDescriptor extensionDescriptor )
+    public CacheRecord get( Key key )
+    {
+        return cache.get( key );
+    }
+
+    public CacheRecord put( Key key, ClassRealm extensionRealm, ExtensionDescriptor extensionDescriptor )
-        CacheKey key = new CacheKey( extensionArtifacts );
-
-            throw new IllegalStateException( "Duplicate extension realm for extension " + extensionArtifacts );
+            throw new IllegalStateException( "Duplicate extension realm for extension " + key );
+        for ( CacheRecord record : cache.values() )
+        {
+            ClassRealm realm = record.realm;
+            try
+            {
+                realm.getWorld().disposeRealm( realm.getId() );
+            }
+            catch ( NoSuchRealmException e )
+            {
+                // ignore
+            }
+        }
-    public void register( MavenProject project, CacheRecord record )
+    public void register( MavenProject project, Key key, CacheRecord record )
+    public void dispose()
+    {
+        flush();
+    }
+

MOV26 INS26 INS26 UPD40 INS40 INS40 INS43 INS31 INS31 INS42 UPD83 INS43 INS31 UPD83 UPD74 INS78 INS83 INS43 INS42 MOV44 INS8 INS44 INS8 INS44 INS83 INS39 INS42 INS8 INS42 INS78 INS83 INS43 INS42 INS8 UPD43 INS42 INS42 INS41 INS43 INS42 INS43 INS42 INS70 MOV21 INS43 INS42 INS21 INS42 INS42 INS41 UPD42 UPD74 MOV14 UPD42 MOV42 INS42 INS44 INS32 INS8 INS42 INS32 INS32 UPD43 UPD43 INS42 INS43 INS42 INS42 INS42 INS60 INS54 INS42 INS42 INS42 UPD42 UPD42 INS42 INS43 INS59 INS8 INS12 INS42 INS42 INS40 INS21 INS44 INS8 UPD42 INS32 INS43 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL42 DEL42 DEL43 DEL42 DEL14 DEL42 DEL43 DEL42 DEL59 DEL60 DEL8