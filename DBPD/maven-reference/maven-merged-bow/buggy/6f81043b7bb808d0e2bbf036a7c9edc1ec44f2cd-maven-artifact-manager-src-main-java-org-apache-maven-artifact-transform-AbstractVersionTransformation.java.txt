Centralized repository handling in AbstractVersionTransformation, for consistency (should fix MNG-527).

Changed download strategy for plugins.xml metadata to download only when non-existent locally or when plugin prefix cannot be located within local metadata. NOTE: This could lead to local-only installs of plugins having their prefix mappings overwritten.

Next step is to change the maven-plugin-plugin.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219615 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.metadata.AbstractVersionArtifactMetadata;
+import org.apache.maven.wagon.ResourceDoesNotExistException;
-                    VersionArtifactMetadata remoteMetadata = retrieveFromRemoteRepository( artifact, remoteRepository, localMetadata );
-
+                    VersionArtifactMetadata remoteMetadata;
+                    
+                    try
+                    {
+                        remoteMetadata = retrieveFromRemoteRepository( artifact, remoteRepository, localMetadata );
+                    }
+                    catch ( ResourceDoesNotExistException e )
+                    {
+                        getLogger().debug( "Error resolving artifact version from metadata.", e );
+                        
+                        continue;
+                    }
+                    
-
+        
-                if ( !version.equals( artifact.getBaseVersion() ) )
+                if ( version != null && !version.equals( artifact.getBaseVersion() ) )
-    protected abstract VersionArtifactMetadata retrieveFromRemoteRepository( Artifact artifact,
-                                                                             ArtifactRepository remoteRepository,
-                                                                             VersionArtifactMetadata localMetadata )
-        throws ArtifactMetadataRetrievalException;
+    protected VersionArtifactMetadata retrieveFromRemoteRepository( Artifact artifact,
+                                                                    ArtifactRepository remoteRepository,
+                                                                    VersionArtifactMetadata localMetadata )
+        throws ArtifactMetadataRetrievalException, ResourceDoesNotExistException
+    {
+        AbstractVersionArtifactMetadata metadata = createMetadata( artifact );
+        
+        metadata.retrieveFromRemoteRepository( remoteRepository, wagonManager );
+        
+        return metadata;
+    }
+    
+    protected abstract AbstractVersionArtifactMetadata createMetadata( Artifact artifact );
-    protected abstract VersionArtifactMetadata readFromLocalRepository( Artifact artifact,
-                                                                        ArtifactRepository localRepository )
-        throws IOException;
+    private VersionArtifactMetadata readFromLocalRepository( Artifact artifact, ArtifactRepository localRepository )
+        throws IOException
+    {
+        AbstractVersionArtifactMetadata metadata = createMetadata( artifact );
+        metadata.readFromLocalRepository( localRepository );
+        return metadata;
+    }

INS26 INS26 INS40 INS40 INS31 INS43 INS8 INS83 INS83 INS43 INS42 INS44 UPD83 INS8 INS42 INS60 INS21 INS41 INS42 INS43 INS42 INS60 INS21 INS41 INS43 INS59 INS32 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS54 INS27 MOV38 INS8 INS12 INS42 INS33 INS21 INS44 INS8 INS7 INS43 INS42 INS21 INS18 INS42 MOV32 INS42 INS32 INS32 INS42 INS45 INS42 INS42 DEL83 DEL83