o pull from trunky dunk dunk


git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@767707 13f79535-47bb-0310-9956-ffa450edef68

-        setRemoteArtifactRepositories( projectBuilderConfiguration.getRemoteRepositories() );       
+        setRemoteArtifactRepositories( (projectBuilderConfiguration.getRemoteRepositories() != null) ? new ArrayList<ArtifactRepository>(projectBuilderConfiguration.getRemoteRepositories()) : new ArrayList<ArtifactRepository>());
+ 
+        for(Repository r: model.getPluginRepositories())
+		{
+			try {
+				remoteArtifactRepositories.add(repositorySystem.buildArtifactRepository( r ));
+			} catch (InvalidRepositoryException e) {
+
+			}
+		}   
+        for(Repository r: model.getPluginRepositories())
+		{
+			try {
+				remoteArtifactRepositories.add(repositorySystem.buildArtifactRepository( r ));
+			} catch (InvalidRepositoryException e) {
+
+			}
+		}        
+            /*
+             * TODO: This is suboptimal. Without a cache in the project builder, rebuilding the parent chain currently
+             * causes O(n^2) parser invocations for an inheritance hierarchy of depth n.
+             */
-        return remoteArtifactRepositories;
+        return new ArrayList<ArtifactRepository>( remoteArtifactRepositories );
-
+    
-    public void addCompileSourceRoot( String path )
+    private void addPath( List<String> paths, String path )
-            if ( path.length() != 0 )
+            if ( path.length() > 0 )
-                if ( !getCompileSourceRoots().contains( path ) )
+                File file = new File( path );
+                if ( file.isAbsolute() )
-                    getCompileSourceRoots().add( path );
+                    path = file.getAbsolutePath();
+                }
+                else
+                {
+                    path = new File( getBasedir(), path ).getAbsolutePath();
+                }
+
+                if ( !paths.contains( path ) )
+                {
+                    paths.add( path );
+    public void addCompileSourceRoot( String path )
+    {
+        addPath( getCompileSourceRoots(), path );
+    }
+
-        if ( path != null )
-        {
-            path = path.trim();
-            if ( path.length() != 0 )
-            {
-                if ( !getTestCompileSourceRoots().contains( path ) )
-                {
-                    getTestCompileSourceRoots().add( path );
-                }
-            }
-        }
+        addPath( getTestCompileSourceRoots(), path );

INS31 INS31 UPD83 UPD42 INS44 INS44 INS8 MOV83 MOV39 UPD42 MOV42 MOV44 MOV8 INS83 INS39 INS42 MOV44 MOV8 INS70 INS70 INS74 INS42 INS43 INS42 INS25 INS44 INS32 INS8 INS44 INS32 INS8 INS14 INS43 INS43 INS42 MOV27 INS8 MOV32 MOV32 INS16 INS43 INS42 INS42 INS42 INS54 INS43 INS42 INS42 INS42 INS54 INS74 INS42 INS42 INS42 MOV21 MOV25 UPD42 UPD42 INS36 INS14 INS14 INS42 INS8 INS12 INS42 INS8 INS12 INS43 INS43 UPD27 MOV27 INS8 INS27 INS74 MOV32 INS74 INS21 INS44 INS8 INS21 INS44 INS8 INS42 INS42 INS60 INS25 MOV25 INS32 INS33 INS43 INS43 INS43 INS43 INS32 INS43 INS42 INS32 INS43 INS42 INS43 INS59 INS32 INS8 INS8 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS14 INS42 INS42 MOV21 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS7 UPD42 MOV42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 UPD42 UPD42 INS14 UPD42 MOV42 INS43 INS32 INS42 INS42 INS42 DEL42 DEL32 DEL42 DEL33 DEL27 DEL42 DEL32 DEL34 DEL27 DEL8 DEL25 DEL8 DEL8 DEL42 DEL32 DEL42 DEL42 DEL32 DEL38 DEL25 DEL8 DEL25 DEL8 DEL25 DEL8 DEL31