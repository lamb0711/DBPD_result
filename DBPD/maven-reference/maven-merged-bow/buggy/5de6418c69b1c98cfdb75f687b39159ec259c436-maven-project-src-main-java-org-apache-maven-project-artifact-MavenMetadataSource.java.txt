PR: MNG-122
exception clean up phase 1

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@320668 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.ArtifactUtils;
-                        "\' does not appear to be valid. Its will be ignored for artifact resolution.\n\nReason: " + e.getMessage() + "\n\n" );
+                        "\' does not appear to be valid. Its will be ignored for artifact resolution.\n\nReason: " +
+                        e.getMessage() + "\n\n" );
-                    artifacts = project.createArtifacts( artifactFactory, artifact.getScope(),
-                                                         artifact.getDependencyFilter() );
+                    artifacts =
+                        project.createArtifacts( artifactFactory, artifact.getScope(), artifact.getDependencyFilter() );
-                List repositories = aggregateRepositoryLists( remoteRepositories,
-                                                              project.getRemoteArtifactRepositories() );
+                List repositories =
+                    aggregateRepositoryLists( remoteRepositories, project.getRemoteArtifactRepositories() );
-        catch ( InvalidVersionSpecificationException e )
-        {
-            throw new ArtifactMetadataRetrievalException( "Unable to read the metadata file", e );
-        }
+    /**
+     * @todo desperately needs refactoring. It's just here because it's implementation is maven-project specific
+     */
-        throws InvalidVersionSpecificationException
+        throws ProjectBuildingException
-            VersionRange versionRange = VersionRange.createFromVersionSpec( d.getVersion() );
+            VersionRange versionRange;
+            try
+            {
+                versionRange = VersionRange.createFromVersionSpec( d.getVersion() );
+            }
+            catch ( InvalidVersionSpecificationException e )
+            {
+                String projectId = project != null ? ArtifactUtils.versionlessKey( project.getGroupId(),
+                                                                                   project.getArtifactId() )
+                    : "unknown";
+                throw new ProjectBuildingException( projectId, "Unable to parse version '" + d.getVersion() +
+                    "' for dependency '" + d.getManagementKey() + "': " + e.getMessage(), e );
+            }

INS26 INS40 INS29 UPD43 INS65 UPD42 INS66 INS54 INS8 INS12 INS21 MOV44 INS8 INS7 INS60 INS53 INS42 MOV32 INS43 INS59 INS14 INS42 INS42 INS16 INS43 INS42 INS27 INS42 INS27 INS32 INS45 INS42 INS45 INS32 INS45 INS32 INS45 INS32 INS42 INS33 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12