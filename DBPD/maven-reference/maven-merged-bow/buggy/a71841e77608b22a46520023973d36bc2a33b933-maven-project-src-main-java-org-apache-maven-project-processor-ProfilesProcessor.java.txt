Fixed profile activation for profiles in pom. Profile injection was causing double injection of some elements from plugin mng. Partial fix.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@758473 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Arrays;
+import org.apache.maven.model.BuildBase;
+import org.apache.maven.model.Dependency;
+import org.apache.maven.model.Plugin;
+import org.apache.maven.model.PluginExecution;
-import org.apache.maven.project.builder.PomClassicDomainModel;
+import org.apache.maven.model.Resource;
+
+    private static List<Processor> processors =
+        Arrays.<Processor> asList( new BuildProcessor( new ArrayList<Processor>() ), new ModuleProcessor(),
+                                   new PropertiesProcessor(), new ParentProcessor(), new OrganizationProcessor(),
+                                   new MailingListProcessor(), new IssueManagementProcessor(),
+                                   new CiManagementProcessor(), new ReportingProcessor(),
+                                   new RepositoriesProcessor(), new DistributionManagementProcessor(),
+                                   new LicensesProcessor(), new ScmProcessor(), new PrerequisitesProcessor(),
+                                   new ContributorsProcessor(), new DevelopersProcessor());
+    
-        List<Profile> c = (List<Profile>) child;
-        List<PomClassicDomainModel> models = new ArrayList<PomClassicDomainModel>();
-        for(Profile profile : c)
+        List<Profile> profiles = ((Model) child).getProfiles();
+        List<Profile> copies = new ArrayList<Profile>();
+        for(Profile p : profiles)
-           // models.add( new PomClassicDomainModel )
-            //copy(profile, t);
-        }   
-    }
+            copies.add( ProcessorContext.copyOfProfile(p) );
+        }
+        t.setProfiles( copies );
+   
+        //TODO - copy
+    }  
+
+    
+    private static Model attachProfileNodesToModel(Profile profile)
+    {
+        Model model = new Model();
+        model.setModules( new ArrayList<String>(profile.getModules()) );
+        model.setDependencies(new ArrayList<Dependency>(profile.getDependencies()));
+        model.setDependencyManagement( profile.getDependencyManagement());
+        model.setDistributionManagement( profile.getDistributionManagement() );
+        model.setProperties( profile.getProperties() );  
+        model.setModules( new ArrayList<String>(profile.getModules() ) );
+        BuildProcessor proc = new BuildProcessor( new ArrayList<Processor>());
+        proc.processWithProfile( profile.getBuild(), model);
+        return model;
+    }     

MOV26 INS26 INS26 INS26 INS26 INS26 INS40 UPD40 INS40 INS40 INS40 INS40 INS23 INS31 INS83 INS83 UPD74 MOV74 INS59 INS83 INS83 INS43 INS42 MOV44 INS8 UPD43 INS42 INS32 INS21 INS42 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS60 INS21 INS41 UPD42 INS42 INS43 INS42 INS14 INS14 INS14 INS14 INS14 INS14 INS14 INS14 INS14 INS14 INS14 INS14 INS14 INS14 INS14 INS14 MOV74 MOV74 INS44 INS42 INS32 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS43 INS59 INS32 INS42 INS42 INS43 MOV14 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 UPD42 INS32 UPD42 INS14 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 UPD74 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS36 INS42 INS74 INS42 INS32 INS43 INS74 INS32 INS74 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS32 INS43 INS14 INS42 INS42 UPD43 INS11 INS43 INS43 INS42 INS42 INS32 INS42 INS43 INS43 INS42 INS42 INS43 INS43 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS74 UPD42 INS43 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS42 DEL11 DEL42