o Extends AbstractReport to AbstractMojo => we need now to create only one class for a report and a mojo
o Start implementation of internationalization

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@178980 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Locale;
+import org.apache.maven.project.MavenProject;
+import org.codehaus.doxia.site.renderer.SiteRenderer;
+ * @goal javadoc
+ *
+    /**
+     * @parameter expression="${project.build.directory}/site"
+     * @required
+     */
+    private String outputDirectory;
-     * @see org.apache.maven.reporting.AbstractMavenReport#generate(org.codehaus.doxia.sink.Sink)
+     * @parameter expression="${component.org.codehaus.doxia.site.renderer.SiteRenderer}"
+     * @required
+     * @readonly
-    public void generate( Sink sink )
+    private SiteRenderer siteRenderer;
+
+    /**
+     * @parameter expression="${project}"
+     * @required
+     * @readonly
+     */
+    private MavenProject project;
+
+    /**
+     * @see org.apache.maven.reporting.MavenReport#getName()
+     */
+    public String getName()
+    {
+        return "JavaDocs";
+    }
+
+    /**
+     * @see org.apache.maven.reporting.MavenReport#getDescription()
+     */
+    public String getDescription()
+    {
+        return "JavaDoc API documentation.";
+    }
+
+    /**
+     * @see org.apache.maven.reporting.AbstractMavenReport#getOutputDirectory()
+     */
+    protected String getOutputDirectory()
+    {
+        return outputDirectory;
+    }
+
+    /**
+     * @see org.apache.maven.reporting.AbstractMavenReport#getProject()
+     */
+    protected MavenProject getProject()
+    {
+        return project;
+    }
+
+    /**
+     * @see org.apache.maven.reporting.AbstractMavenReport#getSiteRenderer()
+     */
+    protected SiteRenderer getSiteRenderer()
+    {
+        return siteRenderer;
+    }
+
+    /**
+     * @see org.apache.maven.reporting.MavenReport#generate(org.codehaus.doxia.sink.Sink, java.util.Locale)
+     */
+    public void generate( Sink sink, Locale locale )
-        execute();
+        executeReport( locale);
-     * @see org.apache.maven.reporting.AbstractMavenReport#execute()
+     * @see org.apache.maven.reporting.AbstractMavenReport#executeReport(java.util.Locale)
-    protected void execute()
+    protected void executeReport( Locale locale )
-     * @see org.apache.maven.reporting.MavenReport#getDescription()
-     */
-    public String getDescription()
-    {
-        return "JavaDoc API documentation.";
-    }
-
-    /**
-     * @see org.apache.maven.reporting.MavenReport#getName()
-     */
-    public String getName()
-    {
-        return "JavaDocs";
-    }
-
-    /**

INS26 INS26 INS26 MOV31 MOV31 INS40 INS40 INS40 INS23 INS23 INS23 INS31 INS31 INS31 INS65 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS8 INS44 UPD42 INS44 INS66 INS65 INS65 INS42 INS42 INS65 INS65 INS65 INS42 INS42 INS65 INS65 INS65 INS42 INS42 INS65 INS42 INS41 INS65 INS42 INS41 INS65 INS42 INS41 INS43 INS42 INS43 INS42 INS66 INS66 INS66 INS68 INS42 INS68 INS42 INS68 INS42 INS42 INS42 INS40 INS42 INS40 INS42 INS40 INS42 UPD40 INS69 UPD42 INS42 UPD42 INS69 INS43 INS43 INS40 INS40