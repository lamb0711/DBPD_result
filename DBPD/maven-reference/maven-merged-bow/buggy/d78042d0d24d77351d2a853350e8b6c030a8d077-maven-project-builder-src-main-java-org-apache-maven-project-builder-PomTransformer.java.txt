More syncs between PomClassicTransformer and PomTransformer

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@719494 13f79535-47bb-0310-9956-ffa450edef68

+
-        StringBuffer scmUrl = new StringBuffer();
-        StringBuffer scmConnectionUrl = new StringBuffer();
-        StringBuffer scmDeveloperUrl = new StringBuffer();
+        StringBuilder projectUrl = new StringBuilder( 128 );
+        StringBuilder siteUrl = new StringBuilder( 128 );
+        StringBuilder scmUrl = new StringBuilder( 128 );
+        StringBuilder scmConnectionUrl = new StringBuilder( 128 );
+        StringBuilder scmDeveloperUrl = new StringBuilder( 128 );
-            //SCM Rule
-            ModelProperty scmUrlProperty = getPropertyFor( ProjectUri.Scm.url, tmp );
-            if ( scmUrl.length() == 0 && scmUrlProperty != null )
-            {
-                scmUrl.append( scmUrlProperty.getResolvedValue() );
-                for ( String projectName : projectNames )
-                {
-                    scmUrl.append( "/" ).append( projectName );
-                }
-                int index = tmp.indexOf( scmUrlProperty );
-                tmp.remove( index );
-                tmp.add( index, new ModelProperty( ProjectUri.Scm.url, scmUrl.toString() ) );
-            }
-
-            //SCM Connection Rule
-            scmUrlProperty = getPropertyFor( ProjectUri.Scm.connection, tmp );
-            if ( scmConnectionUrl.length() == 0 && scmUrlProperty != null )
-            {
-                scmConnectionUrl.append( scmUrlProperty.getResolvedValue() );
-                for ( String projectName : projectNames )
-                {
-                    scmConnectionUrl.append( "/" ).append( projectName );
-                }
-                int index = tmp.indexOf( scmUrlProperty );
-                tmp.remove( index );
-                tmp.add( index, new ModelProperty( ProjectUri.Scm.connection, scmConnectionUrl.toString() ) );
-            }
-            //SCM Developer Rule
-            scmUrlProperty = getPropertyFor( ProjectUri.Scm.developerConnection, tmp );
-            if ( scmDeveloperUrl.length() == 0 && scmUrlProperty != null )
-            {
-                scmDeveloperUrl.append( scmUrlProperty.getResolvedValue() );
-                for ( String projectName : projectNames )
-                {
-                    scmDeveloperUrl.append( "/" ).append( projectName );
-                }
-                int index = tmp.indexOf( scmUrlProperty );
-                tmp.remove( index );
-                tmp.add( index, new ModelProperty( ProjectUri.Scm.developerConnection, scmDeveloperUrl.toString() ) );
-            }
+            // Project URL Rule
+            adjustUrl( projectUrl, tmp, ProjectUri.url, projectNames );
+            // Site Rule
+            adjustUrl( siteUrl, tmp, ProjectUri.DistributionManagement.Site.url, projectNames );
+            // SCM Rule
+            adjustUrl( scmUrl, tmp, ProjectUri.Scm.url, projectNames );
+            // SCM Connection Rule
+            adjustUrl( scmConnectionUrl, tmp, ProjectUri.Scm.connection, projectNames );
+            // SCM Developer Rule
+            adjustUrl( scmDeveloperUrl, tmp, ProjectUri.Scm.developerConnection, projectNames );
+            //parent.relativePath not inherited rule
-                    uri.equals( ProjectUri.packaging ) || uri.startsWith( ProjectUri.Profiles.xUri ) ) )
+                    uri.equals( ProjectUri.packaging ) || uri.startsWith( ProjectUri.Profiles.xUri ) )
+                        || uri.startsWith( ProjectUri.Parent.relativePath ))
+        //Rule: Build plugin config overrides reporting plugin config
+        ModelDataSource source = new DefaultModelDataSource();
+        source.init( modelProperties, Arrays.asList( new ArtifactModelContainerFactory(), new IdModelContainerFactory() ) );
+
+        List<ModelContainer> reportContainers = source.queryFor( ProjectUri.Reporting.Plugins.Plugin.xUri );
+        for ( ModelContainer pluginContainer : source.queryFor( ProjectUri.Build.Plugins.Plugin.xUri ) )
+        {
+            ModelContainer transformedReportContainer = new ArtifactModelContainerFactory().create(
+                    transformPlugin( pluginContainer.getProperties() ) );
+
+            for(ModelContainer reportContainer : reportContainers) {
+                ModelContainerAction action = transformedReportContainer.containerAction( reportContainer );
+                if ( action.equals( ModelContainerAction.JOIN ) )
+                {
+                    source.join( transformedReportContainer, reportContainer );
+                    break;
+                }
+            }
+        }
+
+        modelProperties = source.getModelProperties();
+    /**
+     * Adjusts an inherited URL to compensate for a child's relation/distance to the parent that defines the URL.
+     *
+     * @param url The buffer for the adjusted URL, must not be {@code null}.
+     * @param properties The model properties to update, must not be {@code null}.
+     * @param uri The URI of the model property defining the URL to adjust, must not be {@code null}.
+     * @param ids The artifact identifiers of the parent projects, starting with the least significant parent, must not
+     *            be {@code null}.
+     */
+    private void adjustUrl( StringBuilder url, List<ModelProperty> properties, String uri, List<String> ids )
+    {
+        if ( url.length() == 0 )
+        {
+            ModelProperty property = getPropertyFor( uri, properties );
+            if ( property != null )
+            {
+                url.append( property.getResolvedValue() );
+                for ( String id : ids )
+                {
+                    if ( url.length() > 0 && url.charAt( url.length() - 1 ) != '/' )
+                    {
+                        url.append( '/' );
+                    }
+                    url.append( id );
+                }
+                int index = properties.indexOf( property );
+                properties.set( index, new ModelProperty( uri, url.toString() ) );
+            }
+        }
+    }
+
-    public static List<ModelProperty> transformPluginManagement( List<ModelProperty> modelProperties )
+    private static List<ModelProperty> transformPluginManagement( List<ModelProperty> modelProperties )
+
+    private static List<ModelProperty> transformPlugin( List<ModelProperty> modelProperties )
+    {
+        List<ModelProperty> transformedProperties = new ArrayList<ModelProperty>();
+        for ( ModelProperty mp : modelProperties )
+        {
+            if ( mp.getUri().startsWith( ProjectUri.Build.Plugins.xUri ) )
+            {   if(mp.getUri().startsWith(ProjectUri.Build.Plugins.Plugin.configuration)
+                    || mp.getUri().equals( ProjectUri.Build.Plugins.Plugin.groupId)
+                    || mp.getUri().equals( ProjectUri.Build.Plugins.Plugin.artifactId)
+                    || mp.getUri().equals( ProjectUri.Build.Plugins.Plugin.version)
+                    || mp.getUri().equals( ProjectUri.Build.Plugins.Plugin.xUri ) )
+                {
+                transformedProperties.add( new ModelProperty(
+                    mp.getUri().replace( ProjectUri.Build.Plugins.xUri, ProjectUri.Reporting.Plugins.xUri ),
+                    mp.getResolvedValue() ) );
+                }
+
+            }
+        }
+        return transformedProperties;
+    }

INS31 INS31 INS29 INS83 INS39 INS42 INS44 INS44 MOV44 INS44 INS8 UPD83 INS83 INS83 INS74 INS42 INS44 INS8 INS60 INS60 INS60 INS21 INS60 INS70 INS21 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS74 INS42 UPD42 INS74 INS42 INS25 INS43 INS43 INS74 INS42 INS60 INS70 INS41 INS43 INS59 INS43 INS59 UPD43 UPD43 UPD43 INS43 INS59 INS32 INS74 INS59 INS44 INS32 INS8 INS7 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS66 INS65 INS66 INS42 INS43 INS43 INS43 MOV43 INS27 INS8 INS42 INS42 INS43 INS43 INS74 INS59 INS44 INS42 INS8 INS42 INS42 INS42 INS14 INS42 INS42 INS14 UPD42 UPD42 UPD42 INS21 MOV21 INS21 MOV21 MOV21 INS42 INS42 INS14 INS42 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS43 INS42 INS42 INS42 INS40 INS60 INS70 INS42 INS32 INS66 INS66 INS66 INS66 INS42 INS42 INS42 INS32 INS34 INS60 INS25 INS42 INS42 INS43 INS43 INS42 INS14 INS43 INS42 INS25 INS43 INS34 INS43 INS34 UPD43 INS34 UPD43 INS34 UPD43 INS34 INS32 INS32 INS43 INS42 INS42 INS14 INS14 INS42 INS42 INS42 INS42 INS40 INS42 INS43 INS59 INS44 INS42 INS8 INS42 INS42 INS42 INS42 MOV43 INS59 INS27 INS8 INS42 INS42 INS74 INS42 INS32 INS8 INS42 INS42 UPD42 UPD42 UPD42 UPD42 MOV42 INS42 MOV42 INS40 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 INS40 UPD42 INS42 UPD42 MOV42 MOV42 INS40 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 INS40 UPD42 UPD42 UPD42 UPD42 INS40 UPD42 MOV42 INS42 INS43 INS43 INS42 INS42 INS32 INS43 INS42 INS60 INS25 INS42 INS32 INS42 INS33 INS21 INS70 INS60 INS21 INS43 MOV43 INS32 INS42 INS40 INS25 INS27 INS42 INS42 INS14 INS42 INS32 INS42 INS43 INS59 INS32 INS8 INS42 INS42 INS42 INS32 MOV44 INS42 INS8 INS39 INS59 INS32 INS42 INS42 INS42 INS27 INS8 MOV27 INS32 INS43 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS40 INS21 INS10 INS42 INS42 INS32 UPD42 INS25 INS21 INS42 INS32 INS42 INS42 INS42 INS14 INS32 INS32 INS32 INS32 INS32 INS21 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS27 INS8 INS32 INS42 INS42 INS42 MOV43 INS42 INS32 INS32 INS42 INS40 INS32 INS42 INS40 INS32 INS42 INS40 INS32 INS42 INS40 INS32 INS42 INS40 INS32 INS42 INS42 INS42 INS42 INS27 INS27 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS32 INS34 INS32 INS13 INS32 MOV43 INS32 INS32 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS13 INS32 INS42 INS40 INS40 INS42 INS42 INS32 INS34 INS42 INS42 INS42 INS42 DEL45 DEL32 DEL45 DEL32 DEL40 DEL42 DEL32 DEL14 DEL42 DEL42 DEL40 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL34 DEL27 DEL42 DEL33 DEL27 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL44 DEL42 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL14 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL40 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL34 DEL27 DEL42 DEL33 DEL27 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL8 DEL70 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL14 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL40 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL34 DEL27 DEL42 DEL33 DEL27 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL8 DEL70 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25