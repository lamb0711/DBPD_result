o Added duplicate check for mojo descriptor Parameters
o changed the exception(s) throws during mojo descriptor extraction to be derivatives of InvalidPluginDescriptorException
o changed PluginConfigurationException in plugin.descriptor to InvalidPluginDescriptorException
o changed all "true".equals(something) to Boolean.valueOf(something).booleanValue()
o added validation of 'modelVersion' back to [Default]ModelValidator
o Fixed/added tests for new 'modelVersion' validation
o changed all requiresXXX in MojoDescriptor to XXXRequired, and getRequiresXXX():boolean to isXXXRequired():boolean to help maintain bean-ness for future use




git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168630 13f79535-47bb-0310-9956-ffa450edef68

-        MavenProject project = build( model, localRepository );
+        MavenProject project = build( projectDescriptor.getAbsolutePath(), model, localRepository );
-        return build( model, localRepository );
+        return build( "Artifact [" + artifact.getId() + "]", model, localRepository );
-    private MavenProject build( Model model, ArtifactRepository localRepository )
+    private MavenProject build( String pomLocation, Model model, ArtifactRepository localRepository )
-            project = processProjectLogic( project, aggregatedRemoteWagonRepositories );
+            project = processProjectLogic( pomLocation, project, aggregatedRemoteWagonRepositories );
-            throw new ProjectBuildingException( "Error building project: " + model.getId(), e );
+            throw new ProjectBuildingException( "Error building project from \'" + pomLocation + "\': " + model.getId(), e );
-    private MavenProject processProjectLogic( MavenProject project, List remoteRepositories )
+    private MavenProject processProjectLogic( String pomLocation, MavenProject project, List remoteRepositories )
-            throw new ProjectBuildingException( "Exception while building project: " + validationResult.toString() );
+            throw new ProjectBuildingException( "Exception while building project from \'" + pomLocation + "\': " + validationResult.toString() );
-            project = processProjectLogic( project, remoteRepositories );
+            project = processProjectLogic( "<Super-POM>", project, remoteRepositories );

INS44 INS44 INS43 INS42 INS43 INS42 INS42 INS42 INS27 INS32 INS45 INS32 INS45 INS42 INS42 INS42 INS42 INS42 UPD45 INS42 INS45 INS45 UPD45 INS42 INS45