fixed errors reported by Checkstyle

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@958295 13f79535-47bb-0310-9956-ffa450edef68

-    static final String DEFAULT_LOCAL_REPO_ID = "local";
-    
-    static final String userHome = System.getProperty( "user.home" );
-    
-    static final File userMavenConfigurationHome = new File( userHome, ".m2" );
-    
-    static final File defaultUserLocalRepository = new File( userMavenConfigurationHome, "repository" );
-    
-    static final String DEFAULT_REMOTE_REPO_ID = "central";
+    final String DEFAULT_LOCAL_REPO_ID = "local";
-    static final String DEFAULT_REMOTE_REPO_URL = "http://repo1.maven.org/maven2";
+    final String userHome = System.getProperty( "user.home" );
+
+    final File userMavenConfigurationHome = new File( userHome, ".m2" );
+
+    final File defaultUserLocalRepository = new File( userMavenConfigurationHome, "repository" );
+
+    final String DEFAULT_REMOTE_REPO_ID = "central";
+
+    final String DEFAULT_REMOTE_REPO_URL = "http://repo1.maven.org/maven2";
-    Artifact createArtifactWithClassifier( String groupId, String artifactId, String version, String type, String classifier );
-    
+    Artifact createArtifactWithClassifier( String groupId, String artifactId, String version, String type,
+                                           String classifier );
+
-    
+
-        
+
-        
+
-        throws InvalidRepositoryException;    
-    
+        throws InvalidRepositoryException;
+
-    
+
-    ArtifactRepository createArtifactRepository( String id, String url, ArtifactRepositoryLayout repositoryLayout, ArtifactRepositoryPolicy snapshots, ArtifactRepositoryPolicy releases );
+    ArtifactRepository createArtifactRepository( String id, String url, ArtifactRepositoryLayout repositoryLayout,
+                                                 ArtifactRepositoryPolicy snapshots, ArtifactRepositoryPolicy releases );
-     * 
+     *
-    List<ArtifactRepository> getEffectiveRepositories( List<ArtifactRepository> repositories );    
+    List<ArtifactRepository> getEffectiveRepositories( List<ArtifactRepository> repositories );
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-    
+
-    
+
-    
+
-    void publish( ArtifactRepository repository, File source, String remotePath, ArtifactTransferListener transferListener )
+    void publish( ArtifactRepository repository, File source, String remotePath,
+                  ArtifactTransferListener transferListener )
-    
-    void retrieve( ArtifactRepository repository, File destination, String remotePath, ArtifactTransferListener transferListener )
-        throws ArtifactTransferFailedException, ArtifactDoesNotExistException; 
+
+    void retrieve( ArtifactRepository repository, File destination, String remotePath,
+                   ArtifactTransferListener transferListener )
+        throws ArtifactTransferFailedException, ArtifactDoesNotExistException;

DEL83 DEL83 DEL83 DEL83 DEL83 DEL83