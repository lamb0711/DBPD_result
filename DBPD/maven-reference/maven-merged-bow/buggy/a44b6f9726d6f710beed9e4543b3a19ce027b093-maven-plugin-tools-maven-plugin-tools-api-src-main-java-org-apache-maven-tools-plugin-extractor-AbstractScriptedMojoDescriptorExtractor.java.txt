flip pom format


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163511 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.Build;
-import org.apache.maven.model.Resource;
-
-    public Set execute( MavenProject project ) throws Exception
+    public Set execute( MavenProject project )
+        throws Exception
-        Build buildSection = project.getBuild();
-
-        List resources = null;
-        if ( buildSection != null )
-        {
-            resources = buildSection.getResources();
-        }
-
-        Map scriptFilesKeyedByBasedir = gatherScriptSourcesByBasedir( resources, getScriptFileExtension() );
+        Map scriptFilesKeyedByBasedir = gatherScriptSourcesByBasedir( project.getScriptSourceRoots(),
+                                                                      getScriptFileExtension() );
-    protected abstract Set extractMojoDescriptors( Map scriptFilesKeyedByBasedir ) throws Exception;
+    protected abstract Set extractMojoDescriptors( Map scriptFilesKeyedByBasedir )
+        throws Exception;
-    protected Map gatherScriptSourcesByBasedir( List resources, String scriptFileExtension )
+    protected Map gatherScriptSourcesByBasedir( List directories, String scriptFileExtension )
-        if ( resources != null )
+        for ( Iterator it = directories.iterator(); it.hasNext(); )
-            for ( Iterator it = resources.iterator(); it.hasNext(); )
+            Set sources = new HashSet();
+
+            String resourceDir = (String) it.next();
+            File dir = new File( resourceDir );
+
+            if ( dir.exists() )
-                Set sources = new HashSet();
+                DirectoryScanner scanner = new DirectoryScanner();
-                Resource resource = (Resource) it.next();
+                scanner.setBasedir( dir );
+                scanner.addDefaultExcludes();
+                scanner.scan();
-                String resourceDir = resource.getDirectory();
-                File dir = new File( resourceDir );
+                String[] relativePaths = scanner.getIncludedFiles();
-                if ( dir.exists() )
+                for ( int i = 0; i < relativePaths.length; i++ )
-                    DirectoryScanner scanner = new DirectoryScanner();
+                    String relativePath = relativePaths[i];
+                    File scriptFile = new File( dir, relativePath );
-                    scanner.setBasedir( dir );
-
-                    List includes = resource.getIncludes();
-
-                    if ( includes != null && !includes.isEmpty() )
+                    if ( scriptFile.isFile() && relativePath.endsWith( scriptFileExtension ) )
-                        scanner.setIncludes( (String[]) includes.toArray( new String[includes.size()] ) );
+                        sources.add( scriptFile );
-
-                    List excludes = resource.getExcludes();
-
-                    if ( excludes != null && !excludes.isEmpty() )
-                    {
-                        scanner.setExcludes( (String[]) excludes.toArray( new String[excludes.size()] ) );
-                    }
-
-                    scanner.addDefaultExcludes();
-                    scanner.scan();
-
-                    String[] relativePaths = scanner.getIncludedFiles();
-
-                    for ( int i = 0; i < relativePaths.length; i++ )
-                    {
-                        String relativePath = relativePaths[i];
-                        File scriptFile = new File( dir, relativePath );
-
-                        if ( scriptFile.isFile() && relativePath.endsWith( scriptFileExtension ) )
-                        {
-                            sources.add( scriptFile );
-                        }
-                    }
-
-                    sourcesByBasedir.put( resourceDir, sources );
+
+                sourcesByBasedir.put( resourceDir, sources );

MOV8 UPD42 MOV60 MOV41 INS32 MOV43 INS42 UPD42 MOV42 UPD42 UPD42 MOV42 UPD42 MOV43 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL42 DEL85 DEL5 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL32 DEL11 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL32 DEL11 DEL32 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL25 DEL8