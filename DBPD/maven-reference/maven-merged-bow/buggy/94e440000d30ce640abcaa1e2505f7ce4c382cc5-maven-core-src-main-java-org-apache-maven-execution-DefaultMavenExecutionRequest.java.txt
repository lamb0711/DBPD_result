o merge of the maven-embedder-refactor branch into the trunk



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@392327 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.repository.ArtifactRepository;
-import org.apache.maven.monitor.event.EventDispatcher;
-import org.apache.maven.profiles.ProfileManager;
+import org.apache.maven.wagon.events.TransferListener;
+import org.apache.maven.artifact.repository.ArtifactRepository;
+import java.util.ArrayList;
+import java.io.File;
+    private File basedir;
+
-    private final ArtifactRepository localRepository;
+    private ArtifactRepository localRepository;
-    private final List goals;
+    private File localRepositoryPath;
+
+    private  List goals;
-    private final EventDispatcher eventDispatcher;
-
-    private final Settings settings;
-
-    private final String baseDirectory;
+    private  Settings settings;
-    private final ProfileManager globalProfileManager;
+    private  Properties properties;
-    private final Properties executionProperties;
+    private  Date startTime;
-    private final Date startTime;
+    private  boolean showErrors;
-    private final boolean showErrors;
+    private List eventMonitors;
-    public DefaultMavenExecutionRequest( ArtifactRepository localRepository, Settings settings,
-                                         EventDispatcher eventDispatcher, List goals, String baseDirectory,
-                                         ProfileManager globalProfileManager, Properties executionProperties,
-                                         boolean showErrors )
+    private List activeProfiles;
+
+    private List inactiveProfiles;
+
+    private boolean interactive;
+
+    private TransferListener transferListener;
+
+    private int loggingLevel;
+
+    private boolean activateDefaultEventMonitor;
+
+    private boolean offline;
+
+    private boolean updateSnapshots;
+
+    private String globalChecksumPolicy;
+
+    // ----------------------------------------------------------------------
+    //
+    // ----------------------------------------------------------------------
+
+    public String getBaseDirectory()
-        this.localRepository = localRepository;
-
-        this.settings = settings;
-
-        this.goals = goals;
-
-        this.eventDispatcher = eventDispatcher;
-
-        this.baseDirectory = baseDirectory;
-
-        this.globalProfileManager = globalProfileManager;
-
-        this.executionProperties = executionProperties;
-
-        this.startTime = new Date();
-
-        this.showErrors = showErrors;
+        return basedir.getAbsolutePath();
-    public String getBaseDirectory()
-    {
-        return baseDirectory;
-    }
-
-    public void setRecursive( boolean recursive )
-    {
-        this.recursive = false;
-    }
-
+    public File getLocalRepositoryPath()
+    {
+        return localRepositoryPath;
+    }
+
-    public Properties getExecutionProperties()
+    public Properties getProperties()
-        return executionProperties;
+        return properties;
-    // ----------------------------------------------------------------------
-    // Putting the session here but it can probably be folded right in here.
-    // ----------------------------------------------------------------------
-
-    public void setSession( MavenSession session )
-    {
-        this.session = session;
-    }
-
-    public void addEventMonitor( EventMonitor monitor )
-    {
-        eventDispatcher.addEventMonitor( monitor );
-    }
-
-    public EventDispatcher getEventDispatcher()
-    {
-        return eventDispatcher;
-    }
-
-    public void setReactorActive( boolean reactorActive )
-    {
-        this.reactorActive = reactorActive;
-    }
-
-    public boolean isReactorActive()
-    {
-        return reactorActive;
-    }
-
-    public void setPomFile( String pomFilename )
-    {
-        this.pomFilename = pomFilename;
-    }
-
-    public void setFailureBehavior( String failureBehavior )
-    {
-        this.failureBehavior = failureBehavior;
-    }
-
-    public ProfileManager getGlobalProfileManager()
-    {
-        return globalProfileManager;
-    }
-
+
+    public boolean isInteractive()
+    {
+        return interactive;
+    }
+
+    public List getEventMonitors()
+    {
+        return eventMonitors;
+    }
+
+    public List getActiveProfiles()
+    {
+        return activeProfiles;
+    }
+
+    public List getInactiveProfiles()
+    {
+        return inactiveProfiles;
+    }
+
+    public TransferListener getTransferListener()
+    {
+        return transferListener;
+    }
+
+    public boolean isDefaultEventMonitorActivated()
+    {
+        return activateDefaultEventMonitor;
+    }
+
+    public int getLoggingLevel()
+    {
+        return loggingLevel;
+    }
+
+    public boolean isDefaultEventMonitorActive()
+    {
+        return activateDefaultEventMonitor;
+    }
+
+    public boolean isOffline()
+    {
+        return offline;
+    }
+
+    public boolean isUpdateSnapshots()
+    {
+        return updateSnapshots;
+    }
+
+    public String getGlobalChecksumPolicy()
+    {
+        return globalChecksumPolicy;
+    }
+
+    // ----------------------------------------------------------------------
+    //
+    // ----------------------------------------------------------------------
+
+    public MavenExecutionRequest setBasedir( File basedir )
+    {
+        this.basedir = basedir;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setStartTime( Date startTime )
+    {
+        this.startTime= startTime;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setShowErrors( boolean showErrors )
+    {
+        this.showErrors = showErrors;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setSettings( Settings settings )
+    {
+        this.settings = settings;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setGoals( List goals )
+    {
+        this.goals = goals;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setLocalRepository( ArtifactRepository localRepository )
+    {
+        this.localRepository = localRepository;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setLocalRepositoryPath( File localRepository )
+    {
+        this.localRepositoryPath = localRepository;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setLocalRepositoryPath( String localRepository )
+    {
+        this.localRepositoryPath = new File( localRepository );
+
+        return this;
+    }
+
+    public MavenExecutionRequest setProperties( Properties properties )
+    {
+        this.properties = properties;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setFailureBehavior( String failureBehavior )
+    {
+        this.failureBehavior = failureBehavior;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setSession( MavenSession session )
+    {
+        this.session = session;
+
+        return this;
+    }
+
+    public MavenExecutionRequest addActiveProfile( String profile )
+    {
+        if ( activeProfiles == null )
+        {
+            activeProfiles = new ArrayList();
+        }
+
+        activeProfiles.add( profile );
+
+        return this;
+    }
+
+    public MavenExecutionRequest addInactiveProfile( String profile )
+    {
+        if ( inactiveProfiles == null )
+        {
+            inactiveProfiles = new ArrayList();
+        }
+
+        inactiveProfiles.add( profile );
+
+        return this;
+    }
+
+    public MavenExecutionRequest addActiveProfiles( List profiles )
+    {
+        if ( activeProfiles == null )
+        {
+            activeProfiles = new ArrayList();
+        }
+
+        activeProfiles.addAll( profiles );
+
+        return this;
+    }
+
+    public MavenExecutionRequest addInactiveProfiles( List profiles )
+    {
+        if ( inactiveProfiles == null )
+        {
+            inactiveProfiles = new ArrayList();
+        }
+
+        inactiveProfiles.addAll( profiles );
+
+        return this;
+    }
+
+
+    public MavenExecutionRequest addEventMonitor( EventMonitor monitor )
+    {
+        if ( eventMonitors == null )
+        {
+            eventMonitors = new ArrayList();
+        }
+
+        eventMonitors.add( monitor );
+
+        return this;
+    }
+
+    public MavenExecutionRequest activateDefaultEventMonitor()
+    {
+        activateDefaultEventMonitor = true;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setReactorActive( boolean reactorActive )
+    {
+        this.reactorActive = reactorActive;
+
+        return this;
+    }
+
+    public boolean isReactorActive()
+    {
+        return reactorActive;
+    }
+
+    public MavenExecutionRequest setPomFile( String pomFilename )
+    {
+        this.pomFilename = pomFilename;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setRecursive( boolean recursive )
+    {
+        this.recursive = recursive;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setInteractive( boolean interactive )
+    {
+        this.interactive = interactive;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setTransferListener( TransferListener transferListener )
+    {
+        this.transferListener = transferListener;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setLoggingLevel( int loggingLevel )
+    {
+        this.loggingLevel = loggingLevel;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setOffline( boolean offline )
+    {
+        this.offline = offline;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setUpdateSnapshots( boolean updateSnapshots )
+    {
+        this.updateSnapshots = updateSnapshots;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setGlobalChecksumPolicy( String globalChecksumPolicy )
+    {
+        this.globalChecksumPolicy = globalChecksumPolicy;
+
+        return this;
+    }

MOV26 MOV26 MOV26 INS26 MOV23 MOV31 MOV31 MOV31 MOV31 MOV31 MOV31 MOV31 MOV31 MOV31 UPD40 INS40 UPD40 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 MOV83 INS43 INS59 UPD83 MOV83 UPD43 MOV43 INS59 INS83 MOV43 INS59 INS83 INS39 MOV59 INS83 INS43 MOV59 INS43 MOV83 INS43 INS59 UPD83 MOV83 INS39 INS59 INS83 UPD43 MOV43 MOV59 MOV83 INS39 INS59 UPD83 MOV83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 MOV59 MOV83 MOV43 INS59 INS83 MOV43 INS42 INS8 INS83 INS43 INS42 INS8 INS83 MOV43 INS42 INS8 INS83 INS39 INS42 INS8 MOV83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 MOV44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 MOV44 INS8 INS83 INS43 INS42 MOV44 INS8 INS83 INS43 INS42 MOV44 INS8 INS83 INS43 INS42 MOV44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 MOV44 INS8 INS83 INS43 INS42 MOV44 INS8 INS43 INS43 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS43 INS83 INS43 INS42 INS8 INS43 INS43 INS43 INS83 INS43 INS42 INS44 INS8 INS43 INS42 INS44 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 UPD43 UPD42 INS44 INS42 INS42 UPD42 INS42 INS42 INS42 UPD42 INS42 UPD42 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 UPD42 INS42 INS41 INS42 INS41 INS41 INS41 INS42 INS41 INS42 INS41 INS42 INS41 UPD42 MOV42 INS41 INS41 INS41 INS41 INS41 INS41 INS42 INS41 INS42 UPD43 UPD42 MOV21 INS41 INS42 MOV43 INS42 MOV21 INS41 INS42 MOV21 INS41 INS42 MOV21 INS41 INS42 MOV21 INS41 INS42 MOV21 INS41 INS42 INS43 INS42 MOV21 INS41 INS42 UPD42 MOV21 INS41 INS42 UPD42 MOV21 INS41 INS42 INS41 INS42 INS41 INS42 INS43 INS42 INS25 INS21 INS41 INS42 INS43 INS42 INS25 INS21 INS41 INS42 INS43 INS42 INS25 INS21 INS41 INS42 INS43 INS42 INS25 INS21 INS41 INS42 INS25 INS41 INS42 INS21 INS41 INS42 INS41 INS42 INS41 INS42 INS41 INS42 INS39 INS42 INS21 INS41 INS42 INS43 INS42 INS21 INS41 INS42 INS39 INS42 INS21 INS41 INS42 INS39 INS42 INS21 INS41 INS42 INS39 INS42 INS21 INS41 UPD42 INS43 INS42 INS21 INS41 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS52 INS52 INS52 INS52 INS52 INS52 INS42 INS52 INS52 INS52 INS52 INS52 INS42 INS27 INS8 INS32 INS52 INS42 INS27 INS8 INS32 INS52 INS42 INS27 INS8 INS32 INS52 INS42 INS27 INS8 INS32 INS52 INS27 INS8 INS52 INS7 INS52 INS52 INS52 INS52 INS7 INS52 UPD42 MOV42 INS7 INS52 INS7 INS52 INS7 INS52 INS7 INS52 INS42 INS7 INS52 INS42 INS42 UPD42 INS42 UPD42 INS14 UPD42 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS33 INS21 UPD42 UPD42 INS42 INS9 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 UPD42 UPD42 UPD42 INS43 INS42 UPD42 INS7 INS7 INS7 INS7 INS7 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS14 INS42 INS14 INS42 INS14 INS42 INS14 INS42 INS14 INS43 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 DEL83 DEL83 DEL23 DEL83 DEL23 DEL23 DEL83 DEL83 DEL83 DEL39 DEL23 DEL42 DEL43 DEL42 DEL44 DEL8 DEL31 DEL14 DEL42 DEL39 DEL39 DEL42 DEL42 DEL41 DEL8 DEL42 DEL42 DEL41 DEL8 DEL39 DEL39 DEL39 DEL39 DEL9 DEL43 DEL42 DEL42 DEL41 DEL42 DEL41