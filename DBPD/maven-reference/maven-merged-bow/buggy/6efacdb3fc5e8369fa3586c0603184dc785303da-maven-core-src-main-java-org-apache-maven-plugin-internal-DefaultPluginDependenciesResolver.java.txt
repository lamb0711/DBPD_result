MNG-5771 user-defined core extensions

read ${maven.projectBasedir}/.mvn/extensions.xml and create core
extensions realms during maven runtime bootstrap. this required
short-lived bootstrap plexus container to resolve extensions.

individual extensions realms are wired to maven.ext realm according
to META-INF/maven/extension.xml exported packages specification

Signed-off-by: Igor Fedorenko <ifedorenko@apache.org>

+    /**
+     * @since 3.2.6
+     */
+    public DependencyNode resolveCoreExtension( Plugin plugin, DependencyFilter dependencyFilter,
+                                                List<RemoteRepository> repositories, RepositorySystemSession session )
+        throws PluginResolutionException
+    {
+        return resolveInternal( plugin, null /* pluginArtifact */, dependencyFilter, null /* transformer */,
+                                repositories, session );
+    }
+
+        DependencyFilter resolutionFilter =
+            new ExclusionsDependencyFilter( artifactFilterManager.getCoreArtifactExcludes() );
+        resolutionFilter = AndDependencyFilter.newInstance( resolutionFilter, dependencyFilter );
+        return resolveInternal( plugin, pluginArtifact, resolutionFilter, new PlexusUtilsInjector(), repositories, session );
+    }
+
+    private DependencyNode resolveInternal( Plugin plugin, Artifact pluginArtifact, DependencyFilter dependencyFilter,
+                                            DependencyGraphTransformer transformer,
+                                            List<RemoteRepository> repositories, RepositorySystemSession session )
+        throws PluginResolutionException
+    {
-
-        DependencyFilter resolutionFilter =
-            new ExclusionsDependencyFilter( artifactFilterManager.getCoreArtifactExcludes() );
-        resolutionFilter = AndDependencyFilter.newInstance( resolutionFilter, dependencyFilter );
-        resolutionFilter = new AndDependencyFilter( collectionFilter, resolutionFilter );
+        DependencyFilter resolutionFilter = AndDependencyFilter.newInstance( collectionFilter, dependencyFilter );
-            DependencyGraphTransformer transformer =
-                ChainedDependencyGraphTransformer.newInstance( session.getDependencyGraphTransformer(),
-                                                               new PlexusUtilsInjector() );
+            transformer =
+                ChainedDependencyGraphTransformer.newInstance( session.getDependencyGraphTransformer(), transformer );

INS31 INS31 INS29 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS43 INS8 UPD83 UPD42 INS44 INS65 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS43 INS42 INS42 INS41 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS43 INS42 INS42 MOV60 MOV21 INS41 MOV43 INS42 INS60 INS66 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS43 INS59 INS42 INS42 INS42 INS42 INS33 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV14 INS42 INS42 INS42 INS42 INS32 INS21 INS42 INS42 INS42 INS42 INS7 INS42 INS32 MOV42 MOV42 MOV32 INS42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL7 DEL21 DEL42 DEL32 DEL59 DEL60