MNG-5575: Separate distinct build strategies into their own new Builder implementation. The interface is not ideal yet, but gives us a cleaner
separation of implementations and gives us a path forward.

-import org.apache.maven.lifecycle.internal.LifecycleWeaveBuilder;
-
-        final String threadConfiguration = commandLine.hasOption( CLIManager.THREADS )
-            ? commandLine.getOptionValue( CLIManager.THREADS )
-            : request.getSystemProperties().getProperty(
-                MavenCli.THREADS_DEPRECATED ); // TODO: Remove this setting. Note that the int-tests use it
-
-        if ( threadConfiguration != null )
-        {
-            request.setPerCoreThreadCount( threadConfiguration.contains( "C" ) );
-            if ( threadConfiguration.contains( "W" ) )
-            {
-                LifecycleWeaveBuilder.setWeaveMode( request.getUserProperties() );
-            }
-            request.setThreadCount( threadConfiguration.replace( "C", "" ).replace( "W", "" ).replace( "auto", "" ) );
-        }
+        
+        // 
+        // Builder, concurrency and parallelism
+        //
+        // We preserve the existing methods for builder selection which is to look for various inputs in the threading
+        // configuration. We don't have an easy way to allow a pluggable builder to provide its own configuration parameters
+        // but this is sufficient for now. Ultimately we want components like Builders to provide a way to extend the command
+        // line to accept its own configuration parameters. 
+        //
+        final String threadConfiguration = commandLine.hasOption( CLIManager.THREADS )
+            ? commandLine.getOptionValue( CLIManager.THREADS )
+            : request.getSystemProperties().getProperty(
+                MavenCli.THREADS_DEPRECATED ); // TODO: Remove this setting. Note that the int-tests use it
+        
+        if ( threadConfiguration != null )
+        {
+            if ( threadConfiguration.contains( "W" ) )
+            {
+                request.setBuilderId( "weave" );
+            }
+            else 
+            {
+                request.setBuilderId( "multithreaded" );
+            }
+            
+            int threads =
+                threadConfiguration.contains( "C" ) ? Integer.valueOf( threadConfiguration.replace( "C", "" ) )
+                    * Runtime.getRuntime().availableProcessors() : Integer.valueOf( threadConfiguration );
+                    
+            request.setDegreeOfConcurrency(threads);
+        }         
+                
+        if ( commandLine.hasOption( CLIManager.BUILDER ) )
+        {          
+            request.setBuilderId( commandLine.getOptionValue( CLIManager.BUILDER ) );
+        }        
+        

MOV60 MOV25 INS25 INS32 INS8 INS25 INS60 INS42 INS42 INS40 INS21 MOV32 INS8 MOV8 INS39 INS59 INS32 MOV21 INS42 INS16 UPD42 UPD42 MOV42 INS42 INS42 INS32 INS32 MOV32 INS27 INS32 INS42 INS42 INS40 UPD42 INS45 MOV42 UPD42 MOV42 INS45 MOV32 MOV32 INS32 INS42 INS42 INS42 UPD42 INS42 INS32 INS42 INS42 INS42 DEL40 DEL26 DEL42 DEL42 DEL32 DEL32 DEL45 DEL45 DEL25 DEL45 DEL45 DEL32