Clean up of the lifecycle executor, simplify configuration and push back into the plugin manager.
This fixed a couple of bugs along the way.

One change that this has brought to bear from the document is you now must specify a goal for it to be bound to the LC
(see it0008)


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191285 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.GoalContainer;
-
-                                        boolean handleAsInheritance )
+                                         boolean handleAsInheritance )
-                if ( !handleAsInheritance || parentInherited == null
-                    || Boolean.valueOf( parentInherited ).booleanValue() )
+                if ( !handleAsInheritance || parentInherited == null ||
+                    Boolean.valueOf( parentInherited ).booleanValue() )
-        ModelUtils.mergeGoalContainerDefinitions( child, parent, handleAsInheritance );
+        ModelUtils.mergeGoalContainerDefinitions( child, parent );
-                        ModelUtils.mergeGoalContainerDefinitions( childExecution, parentExecution, handleAsInheritance );
+                        ModelUtils.mergePluginExecutionDefinitions( childExecution, parentExecution );
-    private static void mergeGoalContainerDefinitions( GoalContainer child, GoalContainer parent,
-                                                      boolean handleAsInheritance )
+    /**
+     * @param child
+     * @param parent
+     * @deprecated
+     */
+    private static void mergeGoalContainerDefinitions( Plugin child, Plugin parent )
-                    String parentInherited = parentGoal.getInherited();
+                    Goal assembledGoal = parentGoal;
-                    if ( !handleAsInheritance || parentInherited == null
-                        || Boolean.valueOf( parentInherited ).booleanValue() )
+                    Goal childGoal = (Goal) childGoals.get( parentGoal.getId() );
+
+                    if ( childGoal != null )
-                        Goal assembledGoal = parentGoal;
+                        Xpp3Dom childGoalConfig = (Xpp3Dom) childGoal.getConfiguration();
+                        Xpp3Dom parentGoalConfig = (Xpp3Dom) parentGoal.getConfiguration();
-                        Goal childGoal = (Goal) childGoals.get( parentGoal.getId() );
+                        childGoalConfig = Xpp3Dom.mergeXpp3Dom( childGoalConfig, parentGoalConfig );
-                        if ( childGoal != null )
-                        {
-                            Xpp3Dom childGoalConfig = (Xpp3Dom) childGoal.getConfiguration();
-                            Xpp3Dom parentGoalConfig = (Xpp3Dom) parentGoal.getConfiguration();
+                        childGoal.setConfiguration( childGoalConfig );
-                            childGoalConfig = Xpp3Dom.mergeXpp3Dom( childGoalConfig, parentGoalConfig );
-
-                            childGoal.setConfiguration( childGoalConfig );
-
-                            assembledGoal = childGoal;
-                        }
-                        else if ( handleAsInheritance && parentInherited == null )
-                        {
-                            assembledGoal.unsetInheritanceApplied();
-                        }
-
-                        assembledGoals.put( assembledGoal.getId(), assembledGoal );
+                        assembledGoal = childGoal;
+
+                    assembledGoals.put( assembledGoal.getId(), assembledGoal );
+    private static void mergePluginExecutionDefinitions( PluginExecution child, PluginExecution parent )
+    {
+        List parentGoals = parent.getGoals();
+
+        // if the supplemental goals are non-existent, then nothing related to goals changes.
+        if ( parentGoals != null && !parentGoals.isEmpty() )
+        {
+            List goals = new ArrayList( parentGoals );
+            if ( child.getGoals() != null )
+            {
+                goals.addAll( child.getGoals() );
+            }
+
+            child.setGoals( goals );
+        }
+
+        Xpp3Dom childConfiguration = (Xpp3Dom) child.getConfiguration();
+        Xpp3Dom parentConfiguration = (Xpp3Dom) parent.getConfiguration();
+
+        childConfiguration = Xpp3Dom.mergeXpp3Dom( childConfiguration, parentConfiguration );
+
+        child.setConfiguration( childConfiguration );
+    }

INS31 INS29 MOV8 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS65 INS65 INS65 UPD43 UPD43 MOV60 INS25 MOV60 MOV60 MOV21 INS43 INS42 INS43 INS42 INS60 INS25 INS60 INS60 INS21 INS21 INS42 INS42 UPD42 UPD42 MOV27 MOV8 UPD43 UPD43 MOV43 INS42 INS42 INS43 INS59 INS27 INS8 INS43 INS59 INS43 INS59 INS7 INS32 MOV60 MOV60 UPD42 UPD42 UPD42 UPD42 MOV42 MOV11 MOV42 MOV42 INS42 INS42 INS32 INS27 INS38 INS60 INS25 INS21 INS42 INS42 INS11 INS42 INS42 INS11 INS42 INS32 INS42 INS42 INS42 MOV27 INS8 MOV43 MOV43 UPD42 MOV42 INS42 INS42 INS42 INS33 INS32 INS43 INS59 INS27 INS8 INS32 INS43 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS24 MOV24 INS21 MOV21 UPD42 MOV42 MOV42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS14 INS32 INS33 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV58 MOV32 MOV8 INS32 INS43 INS42 INS42 INS42 INS32 MOV60 INS60 INS60 UPD42 MOV42 UPD42 MOV42 MOV14 INS42 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS11 UPD42 MOV42 INS43 INS32 INS43 INS32 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL33 DEL27 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL38 DEL42 DEL33 DEL27 DEL27 DEL42 DEL32 DEL32 DEL27 DEL24 DEL39 DEL42 DEL44 DEL25 DEL8 DEL25 DEL8