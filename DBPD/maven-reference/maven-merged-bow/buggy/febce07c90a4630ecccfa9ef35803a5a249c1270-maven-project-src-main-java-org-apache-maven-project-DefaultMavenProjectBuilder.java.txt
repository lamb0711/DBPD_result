Adding more context information to existing exceptions, cleaning up construction in exceptions, and adjusting the inheritance hierarchy for exceptions to make them make a little more sense for error reporting. Also, adding improved (but not complete, yet) reporting for BuildFailureExceptions and ProjectBuildingExceptions, with some tests to make sure pertinent information is in the output.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@592859 13f79535-47bb-0310-9956-ffa450edef68

-import org.codehaus.plexus.util.StringUtils;
+import org.codehaus.plexus.util.StringUtils;
-import java.net.URI;
-import java.net.URISyntaxException;
-                    throw new ProjectBuildingException( projectId, "Unable to parse version '" + d.getVersion() +
-                        "' for dependency '" + d.getManagementKey() + "': " + e.getMessage(), pomFile, e );
+                    throw new InvalidDependencyVersionException( projectId, d, pomFile, e );
-            return readModel( projectId, file.toURI(), reader, strict );
+
+            String modelSource = IOUtil.toString( reader );
+
+            checkModelVersion( modelSource, projectId, file );
+
+            StringReader sReader = new StringReader( modelSource );
+
+            try
+            {
+                return modelReader.read( sReader, strict );
+            }
+            catch ( XmlPullParserException e )
+            {
+                throw new InvalidProjectModelException( projectId, "Parse error reading POM. Reason: " + e.getMessage(),
+                                                        file, e );
+            }
-    private Model readModel( String projectId,
-                             URI pomLocation,
-                             Reader reader,
-                             boolean strict )
-        throws IOException, InvalidProjectModelException
+    private void checkModelVersion( String modelSource,
+                                    String projectId,
+                                    File file )
+        throws InvalidProjectModelException
-        String modelSource = IOUtil.toString( reader );
-
-            throw new InvalidProjectModelException( projectId, "Not a v" + MAVEN_MODEL_VERSION + " POM.", pomLocation );
-        }
-
-        StringReader sReader = new StringReader( modelSource );
-
-        try
-        {
-            return modelReader.read( sReader, strict );
-        }
-        catch ( XmlPullParserException e )
-        {
-            throw new InvalidProjectModelException( projectId, "Parse error reading POM. Reason: " + e.getMessage(),
-                                                    pomLocation, e );
-        }
-    }
-
-    private Model readModel( String projectId,
-                             URL url,
-                             boolean strict )
-        throws ProjectBuildingException
-    {
-        Reader reader = null;
-        URI uri = null;
-        try
-        {
-            uri = new URI( url.toString().replaceAll( " ", "%20" ) );
-            reader = ReaderFactory.newXmlReader( url.openStream() );
-            return readModel( projectId, uri, reader, strict );
-        }
-        catch ( IOException e )
-        {
-            throw new ProjectBuildingException( projectId, "Failed build model from URL \'" + url.toExternalForm() +
-                "\'\nError: \'" + e.getLocalizedMessage() + "\'", uri, e );
-        }
-        catch ( URISyntaxException e )
-        {
-            throw new ProjectBuildingException( projectId, "Failed build model from URL \'" + url.toExternalForm()
-                + "\'\nError: \'" + e.getLocalizedMessage() + "\'", e );
-        }
-        finally
-        {
-            IOUtil.close( reader );
+            throw new InvalidProjectModelException( projectId, "Not a v" + MAVEN_MODEL_VERSION + " POM.", file );
-                                            List extensions, File pomLocation )
+                                            List extensions, File pomFile )
-                    throw new ProjectBuildingException( projectId, "Unable to parse version '" + version +
-                        "' for extension '" + ArtifactUtils.versionlessKey( ext.getGroupId(), ext.getArtifactId() ) +
-                        "': " + e.getMessage(), pomLocation, e );
+                    String key = ArtifactUtils.versionlessKey( ext.getGroupId(), ext.getArtifactId() );
+                    throw new InvalidProjectVersionException( projectId, "extension '" + key,
+                                                              version, pomFile, e );
-        return readModel( projectId, url, STRICT_MODEL_PARSING );
+        Reader reader = null;
+        try
+        {
+            reader = ReaderFactory.newXmlReader( url.openStream() );
+            String modelSource = IOUtil.toString( reader );
+
+            checkModelVersion( modelSource, projectId, null );
+
+            StringReader sReader = new StringReader( modelSource );
+
+            return modelReader.read( sReader, STRICT_MODEL_PARSING );
+        }
+        catch ( XmlPullParserException e )
+        {
+            throw new InvalidProjectModelException( projectId, "Parse error reading POM. Reason: " + e.getMessage(), e );
+        }
+        catch ( IOException e )
+        {
+            throw new ProjectBuildingException( projectId, "Failed build model from URL \'" + url.toExternalForm() +
+                "\'\nError: \'" + e.getLocalizedMessage() + "\'", e );
+        }
+        finally
+        {
+            IOUtil.close( reader );
+        }

MOV26 MOV31 MOV44 INS39 INS42 MOV43 INS42 MOV43 INS8 UPD43 UPD42 UPD43 UPD42 UPD42 MOV60 MOV60 MOV60 INS54 UPD42 UPD42 INS8 MOV12 MOV12 MOV8 MOV60 INS21 MOV60 INS54 MOV21 INS60 INS21 INS60 MOV41 INS44 MOV44 INS32 MOV8 INS12 INS43 INS59 INS32 INS43 INS59 INS43 INS42 INS42 INS42 MOV42 MOV42 MOV44 INS8 UPD42 MOV42 INS42 INS32 INS42 INS42 INS42 INS33 UPD42 MOV42 INS42 INS14 UPD42 UPD42 UPD42 UPD42 INS42 UPD42 MOV42 INS53 INS42 INS42 INS42 INS43 INS42 UPD43 MOV42 INS14 INS42 UPD42 UPD45 MOV43 INS42 MOV27 INS42 INS42 INS60 UPD42 INS43 INS59 UPD43 INS42 INS42 INS42 MOV32 UPD43 UPD42 INS42 UPD42 UPD42 UPD45 INS42 DEL40 DEL26 DEL40 DEL26 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL42 DEL32 DEL42 DEL32 DEL41 DEL42 DEL43 DEL42 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL45 DEL42 DEL45 DEL42 DEL42 DEL32 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL45 DEL45 DEL32 DEL14 DEL7 DEL21 DEL8 DEL54 DEL8 DEL83 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31