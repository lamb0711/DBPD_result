flip pom format


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163511 13f79535-47bb-0310-9956-ffa450edef68

-/* ====================================================================
- *   Copyright 2001-2004 The Apache Software Foundation.
+/*
+ * Copyright 2001-2005 The Apache Software Foundation.
- *   Licensed under the Apache License, Version 2.0 (the "License");
- *   you may not use this file except in compliance with the License.
- *   You may obtain a copy of the License at
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
- *       http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
- *   Unless required by applicable law or agreed to in writing, software
- *   distributed under the License is distributed on an "AS IS" BASIS,
- *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *   See the License for the specific language governing permissions and
- *   limitations under the License.
- * ====================================================================
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
-     * 
+     *
-            ArtifactHandler handler = artifactHandlerManager.getArtifactHandler( session.getProject().getType() );
+            ArtifactHandler handler = artifactHandlerManager.getArtifactHandler( session.getProject().getPackaging() );
-                    processPluginPhases( handler.additionalPlugin(), session );
+                    processPluginPhases( "maven", handler.additionalPlugin(), session );
-    private void processPluginConfiguration( MavenProject project, MavenSession mavenSession ) throws Exception
+    private void processPluginConfiguration( MavenProject project, MavenSession mavenSession )
+        throws Exception
-            // TODO: should this flag be used in verifyPlugin, completely
-            // disabling the plugin?
+            // TODO: should this flag be used in verifyPlugin, completely disabling the plugin?
-                String pluginId = plugin.getId();
-                processPluginPhases( pluginId, mavenSession );
+                processPluginPhases( plugin.getGroupId(), plugin.getArtifactId(), mavenSession );
-    private void processPluginPhases( String pluginId, MavenSession mavenSession ) throws Exception
+    private void processPluginPhases( String groupId, String artifactId, MavenSession mavenSession )
+        throws Exception
-        pluginManager.verifyPlugin( pluginId, mavenSession );
-        PluginDescriptor pluginDescriptor = pluginManager.getPluginDescriptor( pluginId );
+        pluginManager.verifyPlugin( groupId, artifactId, mavenSession );
+        PluginDescriptor pluginDescriptor = pluginManager.getPluginDescriptor( groupId, artifactId );
-    private void processGoalChain( String task, MavenSession session ) throws Exception
+    private void processGoalChain( String task, MavenSession session )
+        throws Exception
-    private void verifyMojoPhase( String task, MavenSession session ) throws Exception
+    private void verifyMojoPhase( String task, MavenSession session )
+        throws Exception
-    protected PluginExecutionResponse executeMojo( String id, MavenSession session ) throws LifecycleExecutionException
+    protected PluginExecutionResponse executeMojo( String id, MavenSession session )
+        throws LifecycleExecutionException
-    public void initialize() throws Exception
+    public void initialize()
+        throws Exception

INS44 UPD42 MOV43 INS42 UPD42 INS42 UPD42 INS42 INS21 INS32 UPD42 INS42 INS32 INS32 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS45 DEL42 DEL32 DEL59 DEL60 DEL32 DEL21