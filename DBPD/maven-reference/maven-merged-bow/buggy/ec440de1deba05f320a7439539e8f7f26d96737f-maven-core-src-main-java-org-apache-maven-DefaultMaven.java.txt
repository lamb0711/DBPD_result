[MNG-2576] Make Like Reactor Mode

o Restored resume-from

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@795062 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.HashMap;
+        Collection<MavenProject> activeProjects = sorter.getSortedProjects();
+
+        File reactorDirectory = request.getPom().getAbsoluteFile().getParentFile();
+
-            File reactorDirectory = request.getPom().getParentFile().getAbsoluteFile();
-
-            Map<File, MavenProject> projectsByFile = new HashMap<File, MavenProject>();
-
-            for ( MavenProject project : sorter.getSortedProjects() )
-            {
-                projectsByFile.put( project.getFile(), project );
-            }
-
-                File pomFile = new File( reactorDirectory, selectedProject );
+                MavenProject project = null;
-                if ( pomFile.isDirectory() )
+                for ( MavenProject activeProject : activeProjects )
-                    pomFile = new File( pomFile, Maven.POMv4 );
+                    if ( isMatchingProject( activeProject, selectedProject, reactorDirectory ) )
+                    {
+                        project = activeProject;
+                        break;
+                    }
-                MavenProject project = projectsByFile.get( pomFile );
-
-                    throw new MavenExecutionException( "Could not find project in reactor: " + selectedProject,
-                                                       request.getPom() );
+                    throw new MavenExecutionException( "Could not find the selected project in the reactor: "
+                        + selectedProject, request.getPom() );
+            activeProjects = selectedProjects;
+
+
-            Collection<MavenProject> makeProjects = new LinkedHashSet<MavenProject>( selectedProjects );
-
+                activeProjects = new LinkedHashSet<MavenProject>( selectedProjects );
+
-                        makeProjects.addAll( graph.getUpstreamProjects( selectedProject, true ) );
+                        activeProjects.addAll( graph.getUpstreamProjects( selectedProject, true ) );
-                        makeProjects.addAll( graph.getDownstreamProjects( selectedProject, true ) );
+                        activeProjects.addAll( graph.getDownstreamProjects( selectedProject, true ) );
+        }
-            // TODO: process resume from
+        if ( StringUtils.isNotEmpty( request.getResumeFrom() ) )
+        {
+            String selectedProject = request.getResumeFrom();
-            graph = new FilteredProjectDependencyGraph( graph, makeProjects );
+            List<MavenProject> projects = new ArrayList<MavenProject>( activeProjects.size() );
+
+            boolean resumed = false;
+
+            for ( MavenProject project : activeProjects )
+            {
+                if ( !resumed && isMatchingProject( project, selectedProject, reactorDirectory ) )
+                {
+                    resumed = true;
+                }
+
+                if ( resumed )
+                {
+                    projects.add( project );
+                }
+            }
+
+            if ( !resumed )
+            {
+                throw new MavenExecutionException( "Could not find project to resume reactor build from: "
+                    + selectedProject + " vs " + activeProjects, request.getPom() );
+            }
+
+            activeProjects = projects;
+        }
+
+        if ( activeProjects.size() != sorter.getSortedProjects().size() )
+        {
+            graph = new FilteredProjectDependencyGraph( graph, activeProjects );
+    private boolean isMatchingProject( MavenProject project, String selector, File reactorDirectory )
+    {
+        File selectedProject = new File( reactorDirectory, selector );
+
+        if ( selectedProject.isFile() )
+        {
+            return selectedProject.equals( project.getFile() );
+        }
+        else
+        {
+            return selectedProject.equals( project.getBasedir() );
+        }
+    }
+

INS31 INS83 INS39 INS42 MOV44 INS44 INS44 INS8 INS60 MOV60 INS25 INS25 INS43 INS42 MOV43 INS42 INS60 INS25 MOV74 INS59 INS32 INS8 INS27 INS8 INS42 MOV43 INS59 INS32 MOV8 INS8 INS42 MOV32 INS21 INS42 INS42 INS32 INS60 INS60 INS60 INS70 INS25 INS21 INS32 INS32 MOV21 INS42 INS14 INS42 INS42 INS41 INS41 UPD42 INS7 INS42 INS42 INS43 INS59 INS74 INS59 INS39 INS59 INS44 INS42 INS8 INS38 INS8 INS7 INS42 INS42 INS32 INS42 MOV43 INS42 INS42 MOV32 INS32 UPD42 INS60 INS70 INS42 INS42 INS21 INS42 INS42 INS32 INS43 MOV43 INS42 INS14 INS42 INS9 INS43 INS42 INS25 INS25 INS42 INS53 INS42 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS32 INS43 INS59 INS44 INS42 INS8 INS7 INS42 INS42 INS42 INS74 INS32 INS42 INS27 INS8 INS42 INS8 INS14 UPD42 INS42 INS42 INS42 UPD42 MOV42 INS33 MOV43 INS42 MOV25 INS42 MOV14 INS43 MOV43 INS42 INS42 INS38 INS32 INS21 INS21 INS43 INS27 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS32 INS42 INS45 INS42 INS45 INS42 INS42 INS42 UPD42 INS42 INS42 UPD42 INS10 INS42 INS9 INS42 INS42 INS42 UPD45 UPD42 INS42 UPD42 UPD42 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL70 DEL42 DEL40 DEL14 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL59 DEL60 DEL42 DEL21