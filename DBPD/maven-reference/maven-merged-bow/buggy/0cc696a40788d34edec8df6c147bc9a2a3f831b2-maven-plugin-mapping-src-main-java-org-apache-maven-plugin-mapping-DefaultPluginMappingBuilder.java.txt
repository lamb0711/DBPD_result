Working on: MNG-576

o Implemented plan from my comments on MNG-576 for looking up lifecycle mappings within plugins.

o Fixed subtle bug in DefaultWagonManager for verifying checksums, where the destination file was being used to verify the checksum rather than the recently download temp destination.

o Fixed the DefaultRepositoryMetadataManager.resolve(..) method to allow the locally-installed metadata to be used if it is newer than the one resolved from the repository.

o Moved the lifecycle mappings for the EJB and WAR plugins out to META-INF/plexus/components.xml in the respective plugin's src/main/resources directory. it0016 and it0017 still pass.

o Changed the distributionManagement repository for maven-plugins/pom.xml to have id of 'central-plugins' and then added a normal artifact repository definition for central-plugins to that pom, to allow locally-installed repository metadata for the plugins to be put in the right place (and these builds should have access to the central plugin repo anyway).

o Changed the DefaultPluginMappingBuilder to only warn when plugins.xml for a particular plugin group is missing.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@216273 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.logging.AbstractLogEnabled;
+import java.util.ArrayList;
+    extends AbstractLogEnabled
-    public PluginMappingManager loadPluginMappings( List pluginGroupIds, List pluginRepositories,
+    public PluginMappingManager loadPluginMappings( List groupIds, List pluginRepositories,
+        List pluginGroupIds = new ArrayList( groupIds );
+        
+        if ( !pluginGroupIds.contains( "org.apache.maven.plugins" ) )
+        {
+            pluginGroupIds.add( "org.apache.maven.plugins" );
+        }
+        
-                File mappingFile = resolveMappingMetadata( groupId, pluginRepositories, localRepository );
-
-                PluginMap pluginMap = readPluginMap( mappingFile );
-                
-                if ( pluginMap != null )
+                try
-                    mappingManager.addPluginMap( pluginMap );
+                    File mappingFile = resolveMappingMetadata( groupId, pluginRepositories, localRepository );
+
+                    PluginMap pluginMap = readPluginMap( mappingFile );
+
+                    if ( pluginMap != null )
+                    {
+                        mappingManager.addPluginMap( pluginMap );
+                    }
+                }
+                catch ( RepositoryMetadataManagementException e )
+                {
+                    getLogger().warn( "Cannot resolve plugin-mapping metadata for groupId: " + groupId + " - IGNORING." );
+                    
+                    getLogger().debug( "Error resolving plugin-mapping metadata for groupId: " + groupId + ".", e );

INS26 INS26 INS40 INS40 INS43 INS42 UPD42 INS60 INS25 INS43 INS59 INS38 INS8 INS42 INS42 INS14 INS32 INS21 INS43 INS42 INS42 INS42 INS45 INS32 INS8 INS42 INS42 INS42 INS45 MOV60 INS54 MOV8 INS12 INS44 INS8 INS43 INS42 INS21 INS21 INS42 INS32 INS32 INS32 INS42 INS27 INS32 INS42 INS27 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45