remove extension from artifact - it is the sole reponsibility of the artifact handler. This prevents the error of plugins getting the extension "maven-plugin"


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163647 13f79535-47bb-0310-9956-ffa450edef68

-    public MavenProject build( File project, ArtifactRepository localRepository ) throws ProjectBuildingException
+    public MavenProject build( File project, ArtifactRepository localRepository )
+        throws ProjectBuildingException
-                               boolean resolveDependencies, boolean sourceProject ) throws ProjectBuildingException
+                                boolean resolveDependencies, boolean sourceProject )
+        throws ProjectBuildingException
-                                             List remoteRepositories, boolean resolveDependencies, boolean sourceProject )
+                                              List remoteRepositories, boolean resolveDependencies,
+                                              boolean sourceProject )
-                project
-                       .setDistributionManagementArtifactRepository( buildDistributionManagementRepository( dm
-                                                                                                              .getRepository() ) );
+                project.setDistributionManagementArtifactRepository(
+                    buildDistributionManagementRepository(
+                        dm.getRepository() ) );
-                                         LinkedList lineage, List aggregatedRemoteWagonRepositories )
+                                          LinkedList lineage, List aggregatedRemoteWagonRepositories )
-                                         List aggregatedRemoteWagonRepositories ) throws ProjectBuildingException
+                                          List aggregatedRemoteWagonRepositories )
+        throws ProjectBuildingException
-            aggregatedRemoteWagonRepositories
-                                             .addAll( buildArtifactRepositories( project.getModel().getRepositories() ) );
+            aggregatedRemoteWagonRepositories.addAll(
+                buildArtifactRepositories( project.getModel().getRepositories() ) );
-    private List buildArtifactRepositories( List repositories ) throws ProjectBuildingException
+    private List buildArtifactRepositories( List repositories )
+        throws ProjectBuildingException
-            throw new ProjectBuildingException( "Cannot find repository layout for: \'" + remoteRepoLayoutId + "\'.", e );
+            throw new ProjectBuildingException( "Cannot find repository layout for: \'" + remoteRepoLayoutId + "\'.",
+                                                e );
-    private List buildPluginRepositories( List pluginRepositories ) throws Exception
+    private List buildPluginRepositories( List pluginRepositories )
+        throws Exception
-        ArtifactRepositoryLayout repositoryLayout = (ArtifactRepositoryLayout) container
-                                                                                        .lookup(
-                                                                                                 ArtifactRepositoryLayout.ROLE,
-                                                                                                 repoLayoutId );
+        ArtifactRepositoryLayout repositoryLayout = (ArtifactRepositoryLayout) container.lookup(
+            ArtifactRepositoryLayout.ROLE, repoLayoutId );
-    private ArtifactRepository buildDistributionManagementRepository( Repository dmRepo ) throws Exception
+    private ArtifactRepository buildDistributionManagementRepository( Repository dmRepo )
+        throws Exception
-        ArtifactRepositoryLayout repositoryLayout = (ArtifactRepositoryLayout) container
-                                                                                        .lookup(
-                                                                                                 ArtifactRepositoryLayout.ROLE,
-                                                                                                 repoLayoutId );
+        ArtifactRepositoryLayout repositoryLayout = (ArtifactRepositoryLayout) container.lookup(
+            ArtifactRepositoryLayout.ROLE, repoLayoutId );
-    private Model readModel( File file ) throws ProjectBuildingException
+    private Model readModel( File file )
+        throws ProjectBuildingException
-                                                "Error while reading model from file '" + file.getAbsolutePath() + "'.",
-                                                e );
+                "Error while reading model from file '" + file.getAbsolutePath() + "'.", e );
-    private Model readModel( URL url ) throws ProjectBuildingException
+    private Model readModel( URL url )
+        throws ProjectBuildingException
-                                                            parent.getVersion(), null, "pom", "pom", null );
+                                                            parent.getVersion(), null, "pom", null );
-            throw new ProjectBuildingException( "Missing parent POM: " + parent.getGroupId() + ":"
-                + parent.getArtifactId() + "-" + parent.getVersion(), e );
+            throw new ProjectBuildingException( "Missing parent POM: " + parent.getGroupId() + ":" +
+                                                parent.getArtifactId() + "-" + parent.getVersion(), e );
-    private Model getSuperModel() throws ProjectBuildingException
+    private Model getSuperModel()
+        throws ProjectBuildingException
-    public void contextualize( Context context ) throws Exception
+    public void contextualize( Context context )
+        throws Exception

DEL45