o no choice but to shunt the ProjectUtils which is used by the remote resources plugin into using the MavenRepositorySystem.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@750324 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.repository.MavenRepositorySystem;
+import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
+// This class needs to stick around because it was exposed the the remote resources plugin started using it instead of
+// getting the repositories from the project.
+
-    public static List buildArtifactRepositories( List repositories,
+    public static List buildArtifactRepositories( List<Repository> repositories,
-        List repos = new ArrayList();
-
-        for ( Iterator i = repositories.iterator(); i.hasNext(); )
+        List<ArtifactRepository> remoteRepositories = new ArrayList<ArtifactRepository>();
+        
+        for ( Repository r : repositories )
-            Repository mavenRepo = (Repository) i.next();
-
-            ArtifactRepository artifactRepo =
-                buildArtifactRepository( mavenRepo, artifactRepositoryFactory, container );
-
-            if ( !repos.contains( artifactRepo ) )
-            {
-                repos.add( artifactRepo );
-            }
+            remoteRepositories.add( buildArtifactRepository( r, artifactRepositoryFactory, container ) );
-        return repos;
+        
+        return rs( container ).getMirrors( remoteRepositories );        
-            return artifactRepositoryFactory.createDeploymentArtifactRepository( id, url, repo.getLayout(),
-                                                                                 repo.isUniqueVersion() );
+            return artifactRepositoryFactory.createDeploymentArtifactRepository( id, url, repo.getLayout(), repo.isUniqueVersion() );
+    private static MavenRepositorySystem rs( PlexusContainer c )
+    {
+        MavenRepositorySystem rs = null;
+        
+        try
+        {
+            rs = c.lookup( MavenRepositorySystem.class );
+        }
+        catch ( ComponentLookupException e )
+        {
+        }
+        
+        return rs;
+    }

INS26 INS26 INS40 INS40 INS31 INS31 MOV83 MOV83 MOV43 MOV42 MOV44 MOV44 MOV44 MOV43 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS74 MOV60 INS70 INS41 INS42 INS43 INS42 INS60 INS54 MOV41 MOV43 MOV43 INS74 INS44 INS42 INS8 INS32 INS42 INS43 INS59 INS8 INS12 UPD42 MOV43 INS43 UPD42 MOV43 INS42 INS21 INS32 INS42 UPD42 MOV42 INS42 INS42 INS33 MOV21 INS44 INS8 INS42 INS74 INS32 UPD42 MOV42 UPD42 MOV42 INS7 INS43 INS42 MOV43 MOV43 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS32 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS57 INS43 INS42 DEL42 DEL43 DEL42 DEL32 DEL59 DEL58 DEL32 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL38 DEL8 DEL25 DEL8 DEL24 DEL8 DEL31 DEL42 DEL32