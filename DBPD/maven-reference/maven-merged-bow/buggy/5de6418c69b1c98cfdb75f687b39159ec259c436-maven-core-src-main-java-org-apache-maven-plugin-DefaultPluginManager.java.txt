PR: MNG-122
exception clean up phase 1

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@320668 13f79535-47bb-0310-9956-ffa450edef68

-        ArtifactNotFoundException
+        ArtifactNotFoundException, InvalidVersionSpecificationException
-        ArtifactResolutionException
+        ArtifactResolutionException, InvalidVersionSpecificationException
-            
-            Artifact pluginArtifact = artifactFactory.createPluginArtifact( plugin.getGroupId(),
-                                                                            plugin.getArtifactId(), versionRange );
-            
+
+            Artifact pluginArtifact =
+                artifactFactory.createPluginArtifact( plugin.getGroupId(), plugin.getArtifactId(), versionRange );
+
-            if ( !pluginArtifact.isResolved() )
-            {
-                throw new PluginContainerException( plugin, "Cannot resolve artifact for plugin." );
-            }
-
-            
+
-            
+
-                getLogger().info( "Reloading plugin container for: " + plugin.getKey() + ". The plugin artifact has changed." );
-                
+                getLogger().info(
+                    "Reloading plugin container for: " + plugin.getKey() + ". The plugin artifact has changed." );
+
-                
+
-                
+
-        catch ( InvalidVersionSpecificationException e )
-        {
-            throw new PluginVersionResolutionException( plugin.getGroupId(), plugin.getArtifactId(),
-                                                        "Invalid version specification", e );
-        }
-        
+
-            MavenProject project = mavenProjectBuilder.buildFromRepository( artifact, remoteRepositories,
-                                                                            localRepository, false );
+            MavenProject project =
+                mavenProjectBuilder.buildFromRepository( artifact, remoteRepositories, localRepository, false );
-                DefaultArtifactVersion requiredVersion = new DefaultArtifactVersion(
-                    project.getPrerequisites().getMaven() );
+                DefaultArtifactVersion requiredVersion =
+                    new DefaultArtifactVersion( project.getPrerequisites().getMaven() );
-            throw new PluginContainerException( plugin, "Failed to create plugin container.", e );
+            throw new PluginManagerException( "Failed to create plugin container for plugin '" + plugin + "'", e );
-            Set artifacts = MavenMetadataSource.createArtifacts( artifactFactory, plugin.getDependencies(), null, null,
-                                                                 project );
+            Set artifacts =
+                MavenMetadataSource.createArtifacts( artifactFactory, plugin.getDependencies(), null, null, project );
+
-        catch ( InvalidVersionSpecificationException e )
+        catch ( ProjectBuildingException e )
-            throw new PluginManagerException( "Unable to get one of the plugins additional dependencies", e );
+            throw new PluginManagerException( "Error getting plugin dependencies", e );
-                resolveTransitiveDependencies( session, artifactResolver,
-                                               mojoDescriptor.isDependencyResolutionRequired(), artifactFactory, p );
+                try
+                {
+                    resolveTransitiveDependencies( session, artifactResolver,
+                                                   mojoDescriptor.isDependencyResolutionRequired(), artifactFactory,
+                                                   p );
+                }
+                catch ( ProjectBuildingException e )
+                {
+                    throw new PluginManagerException( e.getMessage(), e );
+                }
-        ArtifactNotFoundException
+        ArtifactNotFoundException, InvalidVersionSpecificationException
-        
+
-        PlexusConfiguration extractedMojoConfiguration = extractMojoConfiguration( mergedConfiguration,
-                                                                                   mojoDescriptor );
+        PlexusConfiguration extractedMojoConfiguration =
+            extractMojoConfiguration( mergedConfiguration, mojoDescriptor );
-                String resource = "/META-INF/maven/" + artifact.getGroupId() + "/" + artifact.getArtifactId() +
-                    "/pom.xml";
+                String resource =
+                    "/META-INF/maven/" + artifact.getGroupId() + "/" + artifact.getArtifactId() + "/pom.xml";
-                    throw new PluginConfigurationException( goal.getPluginDescriptor(), "Bad expression", e );
+                    throw new PluginConfigurationException( goal.getPluginDescriptor(), e.getMessage(), e );
-                configurator = (ComponentConfigurator) pluginContainer.lookup( ComponentConfigurator.ROLE,
-                                                                               configuratorId );
+                configurator =
+                    (ComponentConfigurator) pluginContainer.lookup( ComponentConfigurator.ROLE, configuratorId );
-        throws ArtifactResolutionException, ArtifactNotFoundException
+        throws ArtifactResolutionException, ArtifactNotFoundException, ProjectBuildingException
-        try
+        // Don't recreate if already created - for effeciency, and because clover plugin adds to it
+        if ( project.getDependencyArtifacts() == null )
-            // Don't recreate if already created - for effeciency, and because clover plugin adds to it
-            if ( project.getDependencyArtifacts() == null )
-            {
-                project.setDependencyArtifacts( project.createArtifacts( artifactFactory, null, null ) );
-            }
-        }
-        catch ( InvalidVersionSpecificationException e )
-        {
-            // TODO: should that exception be derived from ArtifactResolutionException instead?
-            throw new ArtifactResolutionException( e.getMessage(), artifact );
+            project.setDependencyArtifacts( project.createArtifacts( artifactFactory, null, null ) );

MOV43 MOV43 MOV43 INS43 INS42 MOV25 INS43 INS42 INS54 UPD43 INS27 UPD45 INS8 INS12 UPD42 INS45 INS42 INS45 MOV21 INS44 INS8 INS43 INS42 INS53 INS42 INS14 INS43 MOV32 INS42 INS32 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL42 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL45 DEL45 DEL42 DEL8 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54