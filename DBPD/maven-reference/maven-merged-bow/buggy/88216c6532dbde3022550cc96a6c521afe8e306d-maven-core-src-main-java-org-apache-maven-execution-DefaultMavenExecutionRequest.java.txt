o Re-introduced distinction between user properties and system properties. We have use cases like interpolation and SUREFIRE-121 where we would like to handle user-specified props specially so a single properties soup is not up to the job. However, I opted not to follow the approach from 2.x where we also collect both system properties and user properties in a combined set called execution properties. Code that embeds Maven and programmatically creates an execution request should be not required to assemble such a mixed properties instance, it would enable bad behavior from Maven by subtle API misuse. Also, for things like the lifecycle participant that wants to inject properties, it should be cristal clear whether it injects a user or a system property, the semantics of something like getExecutionProperties().setProperty() would be unclear however.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@796900 13f79535-47bb-0310-9956-ffa450edef68

-    private Properties properties;
+    private Properties systemProperties;
+
+    private Properties userProperties;
-        copy.setProperties( original.getProperties() );
+        copy.setSystemProperties( original.getSystemProperties() );
+        copy.setUserProperties( original.getUserProperties() );
-    public Properties getProperties()
+    public Properties getSystemProperties()
-        if ( properties == null )
+        if ( systemProperties == null )
-            properties = new Properties();
+            systemProperties = new Properties();
-        return properties;
+        return systemProperties;
+    }
+
+    public Properties getUserProperties()
+    {
+        if ( userProperties == null )
+        {
+            userProperties = new Properties();
+        }
+
+        return userProperties;
-    public MavenExecutionRequest setProperties( Properties properties )
+    public MavenExecutionRequest setSystemProperties( Properties properties )
-            this.properties = new Properties();
-            this.properties.putAll( properties );
+            this.systemProperties = new Properties();
+            this.systemProperties.putAll( properties );
-            this.properties = null;
+            this.systemProperties = null;
-    public MavenExecutionRequest setProperty( String key, String value )
+    public MavenExecutionRequest setUserProperties( Properties userProperties )
-        getProperties().setProperty( key, value );
+        if ( userProperties != null )
+        {
+            this.userProperties = new Properties();
+            this.userProperties.putAll( userProperties );
+        }
+        else
+        {
+            this.userProperties = null;
+        }
-            projectBuildingRequest.setExecutionProperties( getProperties() );
+            projectBuildingRequest.setSystemProperties( getSystemProperties() );
+            projectBuildingRequest.setUserProperties( getUserProperties() );

INS23 INS31 INS31 INS83 MOV43 INS59 INS43 UPD42 MOV83 INS43 INS42 INS8 UPD42 INS83 MOV43 INS42 MOV44 INS8 INS42 INS42 UPD42 INS21 INS42 INS25 INS41 UPD43 UPD42 INS25 MOV41 INS32 UPD42 INS27 INS8 INS42 UPD42 INS27 INS8 INS8 INS42 INS42 INS32 UPD42 UPD42 INS42 INS33 INS21 INS42 INS33 INS21 MOV21 INS21 INS21 INS42 INS42 UPD42 INS7 INS7 INS7 INS32 UPD42 INS42 INS14 INS22 INS14 INS22 UPD42 UPD42 INS22 INS33 INS42 INS42 INS32 UPD42 INS43 UPD42 UPD42 UPD42 INS52 INS42 INS43 INS52 INS42 INS52 INS42 INS42 UPD42 UPD42 MOV42 INS42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL42 DEL44 DEL8 DEL31