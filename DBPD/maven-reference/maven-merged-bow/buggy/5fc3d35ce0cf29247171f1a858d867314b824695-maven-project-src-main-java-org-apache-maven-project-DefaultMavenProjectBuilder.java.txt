Removing maven-build-context, and replacing it with caching aspects for model-lineage stuff and project instances. Still needs caching for artifact resolution, and I have an aspect for this too, but it's not enabled yet, since it's still buggy.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@595215 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.context.BuildContextManager;
+import org.apache.maven.profiles.activation.DefaultProfileActivationContext;
+import org.apache.maven.profiles.activation.ProfileActivationContext;
-import org.apache.maven.project.build.ProjectBuildCache;
-import org.apache.maven.project.build.ProjectBuildContext;
-import org.codehaus.plexus.logging.AbstractLogEnabled;
+import org.codehaus.plexus.logging.LogEnabled;
+import org.codehaus.plexus.logging.Logger;
-    extends AbstractLogEnabled
-    Initializable
+    Initializable, LogEnabled
-    private BuildContextManager buildContextManager;
-
+    @Deprecated
-        ProjectBuildCache projectBuildCache = ProjectBuildCache.read( buildContextManager );
-
-        MavenProject project = projectBuildCache.getCachedProject( artifact );
-
-        if ( project != null )
-        {
-            return project;
-        }
-
-        return buildInternal( artifact.getFile(), model, localRepository, remoteArtifactRepositories, null, null,
-                              false, false );
+        return buildInternal( model, localRepository, remoteArtifactRepositories, artifact.getFile(), null,
+                              false, false, false );
+    private Logger logger;
+
-        /*
-        // TODO: Remove this once we have build-context stuff working...
-        if ( !container.getContext().contains( "SystemProperties" ) )
-        {
-            container.addContextValue( "SystemProperties", System.getProperties() );
-        }
-        */
-
-        MavenProject project = buildInternal( projectDescriptor,
-            model,
+        MavenProject project = buildInternal( model,
+            true,
-    private MavenProject buildInternal( File pomLocation,
-                                        Model model,
+    private MavenProject buildInternal( Model model,
-                                        boolean strict, boolean validProfilesXmlLocation )
+                                        boolean strict, boolean validProfilesXmlLocation,
+                                        boolean fromSourceTree )
+        // FIXME: Find a way to pass in this context, so it's never null!
+        ProfileActivationContext profileActivationContext;
+
+
+            profileActivationContext = externalProfileManager.getProfileActivationContext();
+
+            profileActivationContext = new DefaultProfileActivationContext( System.getProperties(), false );
-        superProject.setActiveProfiles( profileAdvisor.applyActivatedProfiles( superModel, projectDescriptor, explicitlyActive, explicitlyInactive, validProfilesXmlLocation ) );
+        superProject.setActiveProfiles( profileAdvisor.applyActivatedProfiles( superModel, projectDescriptor, explicitlyActive, explicitlyInactive, validProfilesXmlLocation, profileActivationContext ) );
-            validProfilesXmlLocation );
+            validProfilesXmlLocation,
+            profileActivationContext );
-            project = processProjectLogic( pomLocation, project, projectDescriptor, strict );
+            project = processProjectLogic( project, projectDescriptor, strict );
-            throw new InvalidProjectModelException( projectId, e.getMessage(), pomLocation, e );
+            throw new InvalidProjectModelException( projectId, e.getMessage(), projectDescriptor, e );
-            throw new InvalidProjectModelException( projectId, e.getMessage(), pomLocation, e );
+            throw new InvalidProjectModelException( projectId, e.getMessage(), projectDescriptor, e );
-        ProjectBuildCache projectBuildCache = ProjectBuildCache.read( buildContextManager );
-
-        projectBuildCache.cacheProject( project );
-
-        projectBuildCache.store( buildContextManager );
-
-        if ( projectDescriptor != null )
+        if ( fromSourceTree )
+            getLogger().debug( "Aligning project: " + project.getId() + " to base directory: " + projectDescriptor.getParentFile() );
-        MavenProject rawParent = project.getParent();
-
-        if ( rawParent != null )
-        {
-            MavenProject processedParent = projectBuildCache.getCachedProject( rawParent );
-
-            // yeah, this null check might be a bit paranoid, but better safe than sorry...
-            if ( processedParent != null )
-            {
-                project.setParent( processedParent );
-            }
-        }
-
-                                                      boolean validProfilesXmlLocation )
+                                                      boolean validProfilesXmlLocation,
+                                                      ProfileActivationContext profileActivationContext )
-        collectInitialRepositoriesFromModel( collected, model, pomFile, explicitlyActive, explicitlyInactive, validProfilesXmlLocation );
+        collectInitialRepositoriesFromModel( collected, model, pomFile, explicitlyActive, explicitlyInactive, validProfilesXmlLocation, profileActivationContext );
-        collectInitialRepositoriesFromModel( collected, superModel, null, explicitlyActive, explicitlyInactive, validProfilesXmlLocation );
+        collectInitialRepositoriesFromModel( collected, superModel, null, explicitlyActive, explicitlyInactive, validProfilesXmlLocation, profileActivationContext );
-                                                      boolean validProfilesXmlLocation )
+                                                      boolean validProfilesXmlLocation,
+                                                      ProfileActivationContext profileActivationContext )
-        Set reposFromProfiles = profileAdvisor.getArtifactRepositoriesFromActiveProfiles( model, pomFile, explicitlyActive, explicitlyInactive, validProfilesXmlLocation );
+        Set reposFromProfiles = profileAdvisor.getArtifactRepositoriesFromActiveProfiles( model, pomFile, explicitlyActive, explicitlyInactive, validProfilesXmlLocation, profileActivationContext );
-    private MavenProject processProjectLogic( File pomLocation,
-                                              MavenProject project,
+    private MavenProject processProjectLogic( MavenProject project,
-            throw new InvalidProjectModelException( projectId, "Failed to validate POM", pomLocation,
+            throw new InvalidProjectModelException( projectId, "Failed to validate POM", pomFile,
-        project.setPluginArtifacts( createPluginArtifacts( projectId, project.getBuildPlugins(), pomLocation ) );
+        project.setPluginArtifacts( createPluginArtifacts( projectId, project.getBuildPlugins(), pomFile ) );
-        project.setReportArtifacts( createReportArtifacts( projectId, project.getReportPlugins(), pomLocation ) );
+        project.setReportArtifacts( createReportArtifacts( projectId, project.getReportPlugins(), pomFile ) );
-        project.setExtensionArtifacts( createExtensionArtifacts( projectId, project.getBuildExtensions(), pomLocation ) );
+        project.setExtensionArtifacts( createExtensionArtifacts( projectId, project.getBuildExtensions(), pomFile ) );
-        ProjectBuildContext projectContext = ProjectBuildContext.getProjectBuildContext( buildContextManager, true );
-
-        projectContext.setModelLineage( modelLineage );
-
-        projectContext.store( buildContextManager );
-
+        // FIXME: Find a way to pass in this context, so it's never null!
+        ProfileActivationContext profileActivationContext;
+
+
+            profileActivationContext = externalProfileManager.getProfileActivationContext();
+            profileActivationContext = new DefaultProfileActivationContext( System.getProperties(), false );
-            projectContext.setCurrentProject( project );
-            projectContext.store( buildContextManager );
-
-            project.setActiveProfiles( profileAdvisor.applyActivatedProfiles( currentModel, currentPom, explicitlyActive,
-                explicitlyInactive, validProfilesXmlLocation ) );
-
+                project = lastProject.getParent();
+            // NOTE: the caching aspect may replace the parent project instance, so we apply profiles here.
+            // TODO: Review this...is that a good idea, to allow application of profiles when other profiles could have been applied already?
+            project.setActiveProfiles( profileAdvisor.applyActivatedProfiles( project.getModel(), project.getFile(), explicitlyActive,
+                                                                              explicitlyInactive, validProfilesXmlLocation, profileActivationContext ) );
+
+    @Deprecated
+    @Deprecated
+    @Deprecated
+
+    protected Logger getLogger()
+    {
+        return logger;
+    }
+
+    public void enableLogging( Logger logger )
+    {
+        this.logger = logger;
+    }

MOV26 MOV26 MOV26 MOV43 MOV23 UPD40 UPD40 UPD40 UPD40 UPD43 MOV44 INS31 INS31 UPD42 INS78 UPD43 INS44 INS44 MOV60 INS78 INS78 INS78 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS42 UPD42 UPD42 INS39 INS42 INS60 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS41 INS43 INS42 INS21 MOV32 INS43 INS59 INS42 INS42 INS42 UPD43 MOV21 INS42 INS42 INS7 INS9 INS42 INS42 INS21 INS21 INS21 INS42 INS42 UPD42 UPD42 INS21 INS21 INS22 INS42 INS9 INS7 INS7 INS42 INS42 INS32 INS42 UPD42 UPD42 UPD42 INS7 INS7 INS52 INS42 INS42 INS32 INS42 INS14 INS32 INS42 INS27 UPD42 INS42 INS32 INS42 INS14 INS21 INS42 INS42 INS43 INS32 INS9 UPD42 UPD42 INS42 INS45 INS32 INS45 INS32 INS42 INS42 INS43 INS32 INS9 INS7 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL41 DEL8 DEL25 DEL33 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL9 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21