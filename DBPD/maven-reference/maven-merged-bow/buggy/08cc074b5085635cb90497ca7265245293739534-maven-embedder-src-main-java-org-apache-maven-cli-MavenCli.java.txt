[MNG-4335] [regression] <settings><offline>true</offline</settings> is not honored

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@811352 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.IOException;
+import org.apache.maven.embedder.execution.MavenExecutionRequestPopulator;
+import org.apache.maven.execution.DefaultMavenExecutionRequest;
+import org.apache.maven.settings.MavenSettingsBuilder;
+import org.apache.maven.settings.Settings;
+import org.codehaus.plexus.component.repository.exception.ComponentLifecycleException;
+import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
+import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
-        MavenExecutionRequest request = CLIRequestUtils.buildRequest( commandLine, debug, quiet, showErrors );
-
-        Configuration configuration = buildEmbedderConfiguration( request, commandLine, classWorld );
+        Configuration configuration = buildEmbedderConfiguration( commandLine, classWorld );
+        MavenEmbedder mavenEmbedder;
+
+        try
+        {
+            mavenEmbedder = new MavenEmbedder( configuration );
+        }
+        catch ( MavenEmbedderException e )
+        {
+            CLIReportingUtils.showError( logger, "Unable to start the embedder: ", e, showErrors );
+
+            return 1;
+        }
+
+        MavenExecutionRequest request = new DefaultMavenExecutionRequest();
+
+        request.setGlobalSettingsFile( configuration.getGlobalSettingsFile() );
+        request.setUserSettingsFile( configuration.getUserSettingsFile() );
+
+        CLIRequestUtils.populateProperties( request, commandLine );
+
+        Settings settings;
+
+        try
+        {
+            MavenSettingsBuilder settingsBuilder =
+                mavenEmbedder.getPlexusContainer().lookup( MavenSettingsBuilder.class );
+
+            try
+            {
+                settings = settingsBuilder.buildSettings( request );
+            }
+            finally
+            {
+                try
+                {
+                    mavenEmbedder.getPlexusContainer().release( settingsBuilder );
+                }
+                catch ( ComponentLifecycleException e )
+                {
+                    logger.debug( "Failed to release component: " + e.getMessage(), e );
+                }
+            }
+        }
+        catch ( ComponentLookupException e )
+        {
+            CLIReportingUtils.showError( logger, "Unable to lookup settings builder: ", e, showErrors );
+
+            return 1;
+        }
+        catch ( IOException e )
+        {
+            CLIReportingUtils.showError( logger, "Failed to read settings: ", e, showErrors );
+
+            return 1;
+        }
+        catch ( XmlPullParserException e )
+        {
+            CLIReportingUtils.showError( logger, "Failed to parse settings: ", e, showErrors );
+
+            return 1;
+        }
+
+        try
+        {
+            MavenExecutionRequestPopulator requestPopulator =
+                mavenEmbedder.getPlexusContainer().lookup( MavenExecutionRequestPopulator.class );
+
+            try
+            {
+                requestPopulator.populateFromSettings( request, settings );
+            }
+            finally
+            {
+                try
+                {
+                    mavenEmbedder.getPlexusContainer().release( requestPopulator );
+                }
+                catch ( ComponentLifecycleException e )
+                {
+                    logger.debug( "Failed to release component: " + e.getMessage(), e );
+                }
+            }
+        }
+        catch ( ComponentLookupException e )
+        {
+            CLIReportingUtils.showError( logger, "Unable to lookup execution request populator: ", e, showErrors );
+
+            return 1;
+        }
+        catch ( MavenEmbedderException e )
+        {
+            CLIReportingUtils.showError( logger, "Failed to process settings: ", e, showErrors );
+
+            return 1;
+        }
+
+        CLIRequestUtils.populateRequest( request, commandLine, debug, quiet, showErrors );
+
-        MavenEmbedder mavenEmbedder;
-
-        try
-        {
-            mavenEmbedder = new MavenEmbedder( configuration );
-        }
-        catch ( MavenEmbedderException e )
-        {
-            CLIReportingUtils.showError( logger, "Unable to start the embedder: ", e, showErrors );
-
-            return 1;
-        }
-
-    private Configuration buildEmbedderConfiguration( MavenExecutionRequest request, CommandLine commandLine, ClassWorld classWorld )
+    private Configuration buildEmbedderConfiguration( CommandLine commandLine, ClassWorld classWorld )
-            File logFile = new File( request.getBaseDirectory(), commandLine.getOptionValue( CLIManager.LOG_FILE ) );
+            File logFile = new File( commandLine.getOptionValue( CLIManager.LOG_FILE ) ).getAbsoluteFile();
-        String localRepoProperty = request.getUserProperties().getProperty( LOCAL_REPO_PROPERTY );
-
-        if ( localRepoProperty != null )
-        {
-            configuration.setLocalRepository( new File( localRepoProperty ) );
-        }
-

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 MOV60 MOV54 INS60 INS60 INS21 INS21 INS21 INS60 INS54 INS54 INS21 MOV43 INS59 MOV43 INS59 INS32 INS32 INS32 INS43 INS59 INS8 INS12 INS12 INS12 INS8 INS12 INS12 INS32 INS42 INS32 MOV42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 MOV42 INS42 UPD42 MOV42 MOV42 INS42 INS42 INS60 INS54 INS44 INS8 INS44 INS8 INS44 INS8 INS60 INS54 INS44 INS8 INS44 INS8 UPD42 MOV42 INS42 MOV42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS43 INS59 INS8 INS8 INS43 INS42 INS21 INS41 INS43 INS42 INS21 INS41 INS43 INS42 INS21 INS41 INS43 INS59 INS8 INS8 INS43 INS42 INS21 INS41 INS43 INS42 INS21 INS41 INS42 INS42 INS42 INS32 INS21 INS54 INS42 INS32 INS34 INS42 INS32 INS34 INS42 INS32 INS34 INS42 INS42 INS32 INS21 INS54 INS42 INS32 INS34 INS42 INS32 INS34 INS32 INS32 INS42 INS57 INS7 INS8 INS12 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS57 INS32 INS8 INS12 INS42 INS42 INS42 INS45 INS42 MOV42 INS42 INS42 INS42 INS45 INS42 INS42 MOV14 INS42 INS42 INS42 INS43 INS42 INS32 INS21 INS44 INS8 INS42 INS42 INS43 INS42 INS42 UPD42 MOV42 INS42 INS21 INS44 INS8 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS21 INS42 INS32 INS43 INS42 INS21 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 MOV42 INS27 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS45 INS32 INS45 INS32 INS42 INS42 INS42 INS42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL43 DEL42 DEL14 DEL32 DEL21 DEL8 DEL25