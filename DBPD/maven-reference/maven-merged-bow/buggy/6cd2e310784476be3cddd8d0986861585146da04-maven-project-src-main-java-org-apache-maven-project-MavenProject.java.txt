refactoring of the resolveTransitiveDependencies call. 
simplified by removing a bunch of duplicated code in addArtifacts - no need to merge, you have the full list. 
separated the original artifacts (dependency artifacts) from the resolved artifacts (getArtifacts)


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191667 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.factory.ArtifactFactory;
-import java.util.Collection;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Map;
+    private Set dependencyArtifacts;
+
-        this.artifacts = Collections.unmodifiableSet( project.artifacts );
+        this.dependencyArtifacts = Collections.unmodifiableSet( project.dependencyArtifacts );
+        if ( project.artifacts != null )
+        {
+            this.artifacts = Collections.unmodifiableSet( project.artifacts );
+        }
-    public void addArtifacts( Collection newArtifacts, ArtifactFactory artifactFactory )
-    {
-        //        project.getArtifacts().addAll( result.getArtifacts().values() );
-        // We need to override the scope if one declared it higher
-        // TODO: could surely be more efficient, and use the scope handler, be part of maven-artifact...
-        Map artifacts = new HashMap();
-        for ( Iterator i = getArtifacts().iterator(); i.hasNext(); )
-        {
-            Artifact a = (Artifact) i.next();
-            artifacts.put( a.getId(), a );
-        }
-        for ( Iterator i = newArtifacts.iterator(); i.hasNext(); )
-        {
-            Artifact a = (Artifact) i.next();
-            String id = a.getId();
-            if ( artifacts.containsKey( id ) )
-            {
-                Artifact existing = (Artifact) artifacts.get( id );
-                boolean updateScope = false;
-                if ( Artifact.SCOPE_RUNTIME.equals( a.getScope() ) &&
-                    Artifact.SCOPE_TEST.equals( existing.getScope() ) )
-                {
-                    updateScope = true;
-                }
-
-                if ( Artifact.SCOPE_COMPILE.equals( a.getScope() ) &&
-                    !Artifact.SCOPE_COMPILE.equals( existing.getScope() ) )
-                {
-                    updateScope = true;
-                }
-
-                if ( updateScope )
-                {
-                    // TODO: Artifact factory?
-                    // TODO: [jc] Is this a better way to centralize artifact construction here?
-                    Artifact artifact = artifactFactory.createArtifact( existing.getGroupId(), existing.getArtifactId(),
-                                                                        existing.getVersion(), a.getScope(), existing
-                        .getType() );
-
-                    artifact.setFile( existing.getFile() );
-                    artifact.setBaseVersion( existing.getBaseVersion() );
-
-                    artifacts.put( id, artifact );
-                }
-            }
-            else
-            {
-                artifacts.put( id, a );
-            }
-        }
-        setArtifacts( new HashSet( artifacts.values() ) );
-    }
-
+
+    public Set getDependencyArtifacts()
+    {
+        return dependencyArtifacts;
+    }
+
+    public void setDependencyArtifacts( Set dependencyArtifacts )
+    {
+        this.dependencyArtifacts = dependencyArtifacts;
+    }

INS23 INS31 INS31 INS83 INS43 INS59 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 UPD42 MOV42 UPD42 MOV42 INS21 INS25 UPD42 MOV42 INS41 INS43 INS42 MOV21 INS7 INS27 INS8 INS42 UPD42 MOV42 INS7 INS22 INS32 INS40 INS33 MOV21 INS22 INS42 INS52 INS42 INS42 INS42 INS40 INS52 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL39 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL14 DEL59 DEL60 DEL43 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL24 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL40 DEL42 DEL42 DEL42 DEL32 DEL32 DEL40 DEL42 DEL42 DEL42 DEL32 DEL32 DEL27 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL40 DEL42 DEL42 DEL42 DEL32 DEL32 DEL40 DEL42 DEL42 DEL42 DEL32 DEL32 DEL38 DEL27 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL8 DEL25 DEL8 DEL24 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL32 DEL21 DEL8 DEL31 DEL42 DEL42 DEL42 DEL42 DEL32