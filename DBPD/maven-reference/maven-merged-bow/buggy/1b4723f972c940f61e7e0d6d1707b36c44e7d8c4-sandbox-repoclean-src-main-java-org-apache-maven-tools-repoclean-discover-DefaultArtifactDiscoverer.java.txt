o Added more filters on the excludes.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163671 13f79535-47bb-0310-9956-ffa450edef68

-/* ====================================================================
- *   Copyright 2001-2004 The Apache Software Foundation.
- *
- *   Licensed under the Apache License, Version 2.0 (the "License");
- *   you may not use this file except in compliance with the License.
- *   You may obtain a copy of the License at
- *
- *       http://www.apache.org/licenses/LICENSE-2.0
- *
- *   Unless required by applicable law or agreed to in writing, software
- *   distributed under the License is distributed on an "AS IS" BASIS,
- *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *   See the License for the specific language governing permissions and
- *   limitations under the License.
- * ====================================================================
+/*
+ * ==================================================================== Copyright 2001-2004 The
+ * Apache Software Foundation.
+ * 
+ * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
+ * in compliance with the License. You may obtain a copy of the License at
+ * 
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License. ====================================================================
-    public List discoverArtifacts( File repositoryBase, Reporter reporter ) throws Exception
+    public List discoverArtifacts( File repositoryBase, Reporter reporter )
+        throws Exception
-        scanner.setExcludes( new String[] { "**/*.pom", "**/*.md5" } );
+        scanner.setExcludes( new String[] {
+            "bin/**",
+            "reports/**",
+            ".maven/**",
+            "**/*.pom",
+            "**/*.md5",
+            "**/*snapshot-version",
+            "*/website/**",
+            "*/licenses/**",
+            "**/.htaccess",
+            "**/REPOSITORY-V*.txt" } );
-            
-            if(artifact != null)
+
+            if ( artifact != null )
-    private Artifact buildArtifact( File repositoryBase, String path, Reporter reporter ) throws Exception
+    private Artifact buildArtifact( File repositoryBase, String path, Reporter reporter )
+        throws Exception
-        
-        int lastDot = path.lastIndexOf('.');
-        
-        if(lastDot < 0)
+
+        int lastDot = path.lastIndexOf( '.' );
+
+        if ( lastDot < 0 )
-            reporter.error( "Found potential artifact file with invalid name. Path: \'" + path + "\' doesn't seem to contain a file extension." );
+            reporter.error( "Found potential artifact file with invalid name. Path: \'" + path
+                + "\' doesn't seem to contain a file extension." );
-            String pomPath = path.substring(0, lastDot) + ".pom";
-            
-            File pomFile = new File(repositoryBase, pomPath);
-            if(pomFile.exists())
+            String pomPath = path.substring( 0, lastDot ) + ".pom";
+
+            File pomFile = new File( repositoryBase, pomPath );
+            if ( pomFile.exists() )
-                    pomReader = new FileReader(pomFile);
+                    pomReader = new FileReader( pomFile );
-                    
-                    Model model = modelReader.read(pomReader);
-                    
+
+                    Model model = modelReader.read( pomReader );
+
-                    IOUtil.close(pomReader);
+                    IOUtil.close( pomReader );
-        
+
-}
+}

INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45