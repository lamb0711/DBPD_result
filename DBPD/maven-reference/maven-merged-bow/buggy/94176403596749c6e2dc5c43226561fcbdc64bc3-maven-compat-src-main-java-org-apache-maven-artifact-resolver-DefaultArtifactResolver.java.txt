[MNG-4432] reimplement parallel artifacts download

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@900982 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.Executor;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.LinkedBlockingQueue;
+import java.util.concurrent.ThreadPoolExecutor;
+import java.util.concurrent.TimeUnit;
+    private final Executor executor;
+
+    public DefaultArtifactResolver()
+    {
+        int threads = Integer.getInteger( "maven.artifact.threads", 5 ).intValue();
+        if ( threads <= 1 )
+        {
+            executor = new Executor()
+            {
+                public void execute( Runnable command )
+                {
+                    command.run();
+                }
+            };
+        }
+        else
+        {
+            executor =
+                new ThreadPoolExecutor( threads, threads, 3, TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>() );
+        }
+    }
+
+    @Override
+    protected void finalize()
+        throws Throwable
+    {
+        if ( executor instanceof ExecutorService )
+        {
+            ( (ExecutorService) executor ).shutdown();
+        }
+    }
+
-                
+
-            ArtifactResolutionRequest childRequest = new ArtifactResolutionRequest( request );
+            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
+
+            CountDownLatch latch = new CountDownLatch( result.getArtifactResolutionNodes().size() );
-                try
+                if ( resolutionFilter == null || resolutionFilter.include( artifact ) )
-                    if ( resolutionFilter == null || resolutionFilter.include( artifact ) )
-                    {
-                        childRequest.setRemoteRepositories( node.getRemoteRepositories() );
+                    ArtifactResolutionRequest childRequest = new ArtifactResolutionRequest( request );
+                    childRequest.setRemoteRepositories( node.getRemoteRepositories() );
-                        resolve( artifact, childRequest, transferListener, false );
-                    }
+                    executor.execute( new ResolveTask( classLoader, latch, artifact, transferListener, childRequest,
+                                                       result ) );
-                catch ( ArtifactNotFoundException anfe )
+                else
-                    // These are cases where the artifact just isn't present in any of the remote repositories
-                    // because it wasn't deployed, or it was deployed in the wrong place.
-
-                    result.addMissingArtifact( artifact );
-                }
-                catch ( ArtifactResolutionException e )
-                {
-                    // This is really a wagon TransferFailedException so something went wrong after we successfully
-                    // retrieved the metadata.
-
-                    result.addErrorArtifactException( e );
+                    latch.countDown();
+            try
+            {
+                latch.await();
+            }
+            catch ( InterruptedException e )
+            {
+                result.addErrorArtifactException( new ArtifactResolutionException( "Resolution interrupted",
+                                                                                   rootArtifact, e ) );
+            }
-                
+
+
+    private class ResolveTask
+        implements Runnable
+    {
+
+        private final ClassLoader classLoader;
+
+        private final CountDownLatch latch;
+
+        private final Artifact artifact;
+
+        private final TransferListener transferListener;
+
+        private final ArtifactResolutionRequest request;
+
+        private final ArtifactResolutionResult result;
+
+        public ResolveTask( ClassLoader classLoader, CountDownLatch latch, Artifact artifact, TransferListener transferListener,
+                            ArtifactResolutionRequest request, ArtifactResolutionResult result )
+        {
+            this.classLoader = classLoader;
+            this.latch = latch;
+            this.artifact = artifact;
+            this.transferListener = transferListener;
+            this.request = request;
+            this.result = result;
+        }
+
+        public void run()
+        {
+            try
+            {
+                Thread.currentThread().setContextClassLoader( classLoader );
+                resolve( artifact, request, transferListener, false );
+            }
+            catch ( ArtifactNotFoundException anfe )
+            {
+                // These are cases where the artifact just isn't present in any of the remote repositories
+                // because it wasn't deployed, or it was deployed in the wrong place.
+
+                synchronized ( result )
+                {
+                    result.addMissingArtifact( artifact );
+                }
+            }
+            catch ( ArtifactResolutionException e )
+            {
+                // This is really a wagon TransferFailedException so something went wrong after we successfully
+                // retrieved the metadata.
+
+                synchronized ( result )
+                {
+                    result.addErrorArtifactException( e );
+                }
+            }
+            finally
+            {
+                latch.countDown();
+            }
+        }
+
+    }
+

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS31 INS55 INS83 INS83 INS43 INS59 INS83 INS42 INS8 INS78 INS83 INS39 INS42 INS43 INS8 INS83 INS42 INS43 INS23 INS23 INS23 INS23 INS23 INS23 INS31 INS31 INS42 INS42 INS60 INS25 INS42 INS42 INS25 INS42 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS8 INS83 INS39 INS42 MOV8 INS39 INS59 INS27 INS8 INS8 INS62 INS8 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS21 INS21 INS21 INS21 INS21 INS21 INS42 INS32 INS42 INS34 INS21 INS21 INS42 INS43 INS21 INS60 INS60 MOV70 INS54 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS7 INS7 INS7 INS7 INS8 INS8 INS32 INS42 INS7 INS7 INS42 INS32 INS43 INS59 INS43 INS59 INS8 INS8 INS12 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS21 MOV21 INS8 INS8 INS21 INS42 INS42 INS45 INS34 INS42 INS14 INS42 INS14 INS36 INS42 INS42 INS42 INS32 INS42 INS42 INS14 MOV60 INS25 INS21 INS44 INS8 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS32 INS51 INS51 INS32 INS43 INS1 INS43 INS42 INS42 INS34 INS40 INS14 INS11 INS32 INS42 INS43 INS32 MOV27 INS8 INS8 INS32 INS43 INS42 INS21 INS32 INS42 INS42 UPD42 INS42 MOV8 INS42 MOV8 INS42 INS42 INS42 INS31 INS42 INS74 INS43 INS42 INS42 INS42 INS42 INS32 INS42 MOV60 MOV21 INS21 INS21 INS42 INS42 INS42 INS32 INS42 INS42 INS83 INS39 INS42 INS44 INS8 INS43 INS43 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS14 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS43 INS45 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL8 DEL8 DEL25 DEL8