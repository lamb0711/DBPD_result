o Fix html generation
o Categorize reports in "Project Info" and "Project Reports"
o Generate overview page for "Project Info" and "Project Reports" pages

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@169372 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+    private List projectInfos = new ArrayList();
+    private List projectReports = new ArrayList();
+
+            categorizeReports();
+
+            //Generate reports
-            siteRenderer.render( siteDirectory, generatedSiteDirectory, outputDirectory, flavour,
-                                 getSiteDescriptor() );
+            //Generate overview pages
+            if ( projectInfos.size() > 0 )
+            {
+                try
+                {
+                    generateProjectInfoPage( getSiteDescriptor() );
+                }
+                catch ( Exception e )
+                {
+                    e.printStackTrace();
+                    throw new MojoExecutionException( "An error is occurred in project info page generation.", e );
+                }
+            }
+
+            if ( projectReports.size() > 0 )
+            {
+                try
+                {
+                    generateProjectReportsPage( getSiteDescriptor() );
+                }
+                catch ( Exception e )
+                {
+                    e.printStackTrace();
+                    throw new MojoExecutionException( "An error is occurred in project reports page generation.", e );
+                }
+            }
+
+            //Generate static site
+            siteRenderer.render( siteDirectory, generatedSiteDirectory, outputDirectory, flavour, getSiteDescriptor() );
+    private void categorizeReports()
+        throws MojoExecutionException
+    {
+        for ( Iterator i = reports.values().iterator(); i.hasNext(); )
+        {
+            MavenReport report = (MavenReport) i.next();
+            if ( MavenReport.CATEGORY_PROJECT_INFORMATION.equals( report.getCategoryName() ) )
+            {
+                projectInfos.add( report );
+            }
+            else if ( MavenReport.CATEGORY_PROJECT_REPORTS.equals( report.getCategoryName() ) )
+            {
+                projectReports.add( report );
+            }
+            else
+            {
+                throw new MojoExecutionException( "'" + report.getCategoryName() + "' category define for " +
+                                                  report.getName() + " mojo isn't valid." );
+            }
+        }
+    }
+
+        throws MojoExecutionException
-        buffer.append( "    <item name=\"Project reports\" href=\"/maven-reports.html\" collapse=\"true\">\n" );
-        for ( Iterator i = reports.keySet().iterator(); i.hasNext(); )
+        if ( projectInfos.size() > 0 )
-            String reportKey = (String) i.next();
-            buffer.append( "        <item name=\"" + reportKey + "\" href=\"/" + reportKey + ".html\"/>\n" );
+            buffer.append( "    <item name=\"" + MavenReport.CATEGORY_PROJECT_INFORMATION +
+                           "\" href=\"/project-info.html\" collapse=\"true\">\n" );
+
+            for ( Iterator i = projectInfos.iterator(); i.hasNext(); )
+            {
+                MavenReport report = (MavenReport) i.next();
+                buffer.append( "        <item name=\"" + report.getName() + "\" href=\"/" +
+                               report.getOutputName() + ".html\"/>\n" );
+            }
+
+            buffer.append( "    </item>\n" );
-        buffer.append( "    </item>\n" );
+        if ( projectReports.size() > 0 )
+        {
+            buffer.append( "    <item name=\"" + MavenReport.CATEGORY_PROJECT_REPORTS +
+                           "\" href=\"/maven-reports.html\" collapse=\"true\">\n" );
+
+            for ( Iterator i = projectReports.iterator(); i.hasNext(); )
+            {
+                MavenReport report = (MavenReport) i.next();
+                buffer.append( "        <item name=\"" + report.getName() + "\" href=\"/" +
+                               report.getOutputName() + ".html\"/>\n" );
+            }
+
+            buffer.append( "    </item>\n" );
+        }
+
+
-
+        
+
+    private void generateProjectInfoPage( InputStream siteDescriptor )
+        throws Exception
+    {
+        XhtmlSink sink = siteRenderer.createSink( new File( siteDirectory ), siteDirectory,
+                                                  "project-info.html",
+                                                  outputDirectory, siteDescriptor, flavour );
+
+        String title = "General Project Information";
+
+        sink.head();
+        sink.title();
+        sink.text( title );
+        sink.title_();
+        sink.head_();
+        sink.body();
+
+        sink.section1();
+        sink.sectionTitle1();
+        sink.text( title );
+        sink.sectionTitle1_();
+
+        sink.paragraph();
+        sink.text( "This document provides an overview of the various documents and links that are part " +
+                   "of this project's general information. All of this content is automatically generated by ");
+        sink.link( "http://maven.apache.org" );
+        sink.text( "Maven" );
+        sink.link_();
+        sink.text( " on behalf of the project." );
+        sink.paragraph_();
+
+        sink.section2();
+
+        sink.sectionTitle2();
+        sink.text( "Overview" );
+        sink.sectionTitle2_();
+
+        sink.table();
+
+        sink.tableRow();
+        sink.tableHeaderCell();
+        sink.text( "Document" );
+        sink.tableHeaderCell_();
+        sink.tableHeaderCell();
+        sink.text( "Description" );
+        sink.tableHeaderCell_();
+        sink.tableRow_();
+
+        for ( Iterator i = projectInfos.iterator(); i.hasNext(); )
+        {
+            MavenReport report = (MavenReport) i.next();
+
+            sink.tableRow();
+            sink.tableCell();
+            sink.link( report.getOutputName() + ".html" );
+            sink.text( report.getName() );
+            sink.link_();
+            sink.tableCell_();
+            sink.tableCell();
+            sink.text( report.getDescription() );
+            sink.tableCell_();
+            sink.tableRow_();
+        }
+
+        sink.table_();
+        
+        sink.section2_();
+
+        sink.section1_();
+
+        sink.body_();
+    }
+
+    private void generateProjectReportsPage( InputStream siteDescriptor)
+        throws Exception
+    {
+        XhtmlSink sink = siteRenderer.createSink( new File( siteDirectory ), siteDirectory,
+                                                  "maven-reports.html",
+                                                  outputDirectory, siteDescriptor, flavour );
+
+        String title = "Maven Generated Reports";
+
+        sink.head();
+        sink.title();
+        sink.text( title );
+        sink.title_();
+        sink.head_();
+        sink.body();
+
+        sink.section1();
+        sink.sectionTitle1();
+        sink.text( title );
+        sink.sectionTitle1_();
+
+        sink.paragraph();
+        sink.text( "This document provides an overview of the various reports that are automatically generated by " );
+        sink.link( "http://maven.apache.org" );
+        sink.text( "Maven" );
+        sink.link_();
+        sink.text( ". Each report is briefly described below." );
+        sink.paragraph_();
+
+        sink.section2();
+
+        sink.sectionTitle2();
+        sink.text( "Overview" );
+        sink.sectionTitle2_();
+
+        sink.table();
+
+        sink.tableRow();
+        sink.tableHeaderCell();
+        sink.text( "Document" );
+        sink.tableHeaderCell_();
+        sink.tableHeaderCell();
+        sink.text( "Description" );
+        sink.tableHeaderCell_();
+        sink.tableRow_();
+
+        for ( Iterator i = projectReports.iterator(); i.hasNext(); )
+        {
+            MavenReport report = (MavenReport) i.next();
+
+            sink.tableRow();
+            sink.tableCell();
+            sink.link( report.getOutputName() + ".html" );
+            sink.text( report.getName() );
+            sink.link_();
+            sink.tableCell_();
+            sink.tableCell();
+            sink.text( report.getDescription() );
+            sink.tableCell_();
+            sink.tableRow_();
+        }
+
+        sink.table_();
+        
+        sink.section2_();
+
+        sink.section1_();
+
+        sink.body_();
+    }

INS26 INS40 INS23 INS23 INS31 INS31 INS31 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS39 INS42 INS43 INS8 INS43 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS24 INS42 MOV60 MOV21 MOV21 INS25 INS25 MOV21 MOV41 INS43 INS42 INS42 INS60 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS24 INS21 INS21 INS21 INS21 INS43 INS42 INS42 INS60 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS24 INS21 INS21 INS21 INS21 INS43 INS43 INS58 MOV32 INS8 INS27 INS8 INS27 INS8 INS42 INS43 INS59 MOV43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS58 INS32 INS8 INS32 INS32 INS32 INS32 INS42 INS43 INS59 MOV43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS58 INS32 INS8 INS32 INS32 INS32 INS32 INS42 INS42 INS21 INS25 INS25 MOV43 INS59 MOV60 INS25 INS32 INS34 INS21 INS24 MOV21 INS32 INS34 MOV21 MOV24 INS21 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS43 INS59 INS42 INS42 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS43 INS59 INS42 INS42 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS27 INS8 INS27 INS8 INS42 INS32 INS43 INS32 INS8 INS25 INS42 INS42 INS32 INS58 INS32 INS8 INS42 INS42 INS32 INS32 INS42 INS42 INS14 INS42 INS45 INS42 INS42 INS42 INS45 INS45 INS42 INS42 INS32 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS14 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS32 INS34 INS54 INS32 INS34 INS54 INS32 INS42 INS42 UPD42 INS40 INS42 INS32 INS21 INS32 INS8 INS8 INS42 INS42 INS27 INS43 INS59 INS42 INS42 INS60 INS21 INS27 INS43 INS42 INS42 INS60 INS42 INS42 INS45 INS43 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS8 INS12 INS42 INS42 INS8 INS12 INS42 INS42 INS43 INS42 INS42 INS32 INS40 INS42 INS32 INS21 INS53 INS45 INS40 INS45 INS42 INS42 INS32 INS43 INS59 INS32 INS45 INS40 INS45 INS42 INS43 INS59 INS42 INS43 INS32 INS32 INS45 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS32 INS45 INS42 INS42 INS42 INS42 INS21 INS44 INS8 INS21 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS14 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS27 UPD42 MOV42 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS21 INS53 INS32 INS43 INS42 INS21 INS53 INS42 INS42 INS42 INS43 INS27 INS43 INS32 INS45 INS32 INS45 INS32 INS45 INS43 INS32 INS32 INS32 INS42 INS32 INS42 INS32 INS14 INS42 INS32 INS42 INS32 INS14 INS42 INS45 INS32 INS45 INS32 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS45 INS42 INS42 INS42 INS42 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL45 DEL42 DEL32 DEL42 DEL42 DEL8