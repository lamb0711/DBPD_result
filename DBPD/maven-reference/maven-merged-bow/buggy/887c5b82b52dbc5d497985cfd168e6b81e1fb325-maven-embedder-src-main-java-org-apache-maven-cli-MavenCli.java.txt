[MNG-4936] Allow to better monitor and adjust a Maven build during CI

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1050096 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.BuildAbort;
+import org.apache.maven.eventspy.internal.EventSpyDispatcher;
+import org.codehaus.plexus.classworlds.realm.ClassRealm;
+    private static final String EXT_CLASS_PATH = "maven.ext.class.path";
+
+    private EventSpyDispatcher eventSpyDispatcher;
+
+        catch ( BuildAbort e )
+        {
+            CLIReportingUtils.showError( logger, "ABORTED", e, cliRequest.showErrors );
+
+            return 2;
+        }
+                .setRealm( setupContainerRealm( cliRequest ) )
+        Thread.currentThread().setContextClassLoader( container.getContainerRealm() );
+
+        eventSpyDispatcher = container.lookup( EventSpyDispatcher.class );
+
+        DefaultEventSpyContext eventSpyContext = new DefaultEventSpyContext();
+        Map<String, Object> data = eventSpyContext.getData();
+        data.put( "plexus", container );
+        data.put( "workingDirectory", cliRequest.workingDirectory );
+        data.put( "systemProperties", cliRequest.systemProperties );
+        data.put( "userProperties", cliRequest.userProperties );
+        data.put( "versionProperties", CLIReportingUtils.getBuildProperties() );
+        eventSpyDispatcher.init( eventSpyContext );
+
+        // refresh logger in case container got customized by spy
+        logger = container.getLoggerManager().getLoggerForComponent( MavenCli.class.getName(), null );
+
+        logger.setThreshold( cliRequest.request.getLoggingLevel() );
+
+    private ClassRealm setupContainerRealm( CliRequest cliRequest )
+        throws Exception
+    {
+        ClassRealm containerRealm = null;
+
+        String extClassPath = cliRequest.userProperties.getProperty( EXT_CLASS_PATH );
+        if ( extClassPath == null )
+        {
+            extClassPath = cliRequest.systemProperties.getProperty( EXT_CLASS_PATH );
+        }
+
+        if ( StringUtils.isNotEmpty( extClassPath ) )
+        {
+            String[] jars = StringUtils.split( extClassPath, File.pathSeparator );
+
+            if ( jars.length > 0 )
+            {
+                ClassRealm coreRealm = cliRequest.classWorld.getClassRealm( "plexus.core" );
+                if ( coreRealm == null )
+                {
+                    coreRealm = (ClassRealm) cliRequest.classWorld.getRealms().iterator().next();
+                }
+
+                ClassRealm extRealm = cliRequest.classWorld.newRealm( "maven.ext", null );
+
+                logger.debug( "Populating class realm " + extRealm.getId() );
+
+                for ( String jar : jars )
+                {
+                    File file = resolveFile( new File( jar ), cliRequest.workingDirectory );
+
+                    logger.debug( "  Included " + file );
+
+                    extRealm.addURL( file.toURI().toURL() );
+                }
+
+                extRealm.setParentRealm( coreRealm );
+
+                containerRealm = extRealm;
+            }
+        }
+
+        return containerRealm;
+    }
+
+        eventSpyDispatcher.onEvent( cliRequest.request );
+
+        eventSpyDispatcher.onEvent( result );
+
+        eventSpyDispatcher.close();
+
+        eventSpyDispatcher.onEvent( settingsRequest );
+
+        eventSpyDispatcher.onEvent( settingsResult );
+
+        executionListener = eventSpyDispatcher.chainListener( executionListener );

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS42 INS44 INS43 INS8 INS42 INS42 INS45 INS42 INS42 INS21 INS21 INS60 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS42 INS43 INS42 INS42 INS60 INS60 INS25 INS25 INS41 INS21 INS21 INS21 INS21 INS21 INS21 INS12 INS32 INS7 INS43 INS59 INS74 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS7 INS32 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS32 INS8 INS42 INS32 INS32 INS32 INS32 INS32 INS7 INS44 INS8 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS14 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS40 INS42 INS42 INS45 INS40 INS42 INS42 INS45 INS40 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS33 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS42 INS60 INS25 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS21 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS57 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS33 INS40 INS42 INS40 INS42 INS42 INS7 INS5 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS32 INS34 INS32 INS43 INS42 INS42 INS42 INS57 INS42 INS42 INS32 INS43 INS85 INS42 INS32 INS40 INS34 INS60 INS25 INS60 INS21 INS70 INS21 INS21 INS42 INS42 INS42 INS45 INS42 INS40 MOV32 INS42 INS45 INS42 INS43 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS43 INS59 INS27 INS8 INS43 INS59 INS32 INS44 INS42 INS8 INS32 INS7 UPD42 INS32 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS42 INS27 INS43 INS42 INS60 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS45 INS7 INS40 INS42 INS45 INS33 INS45 INS32 INS42 INS43 INS59 INS32 INS32 INS42 INS11 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS32 INS43 INS32 INS42 INS14 INS40 INS45 INS42 INS32 INS42 INS42 INS32 INS42 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS40 INS42 DEL45