Added support for hierarchical model inheritance.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@755131 13f79535-47bb-0310-9956-ffa450edef68

-            Dependency targetDependency = new Dependency();
-            copy( (Dependency) child, targetDependency );
-            t.add( targetDependency );
+            boolean isAdd = true;
+            Dependency targetDependency = contains((Dependency) child, t);
+            if(targetDependency == null)
+            {
+                targetDependency = new Dependency();    
+            }
+            else
+            {
+                isAdd = false;
+            }
+            //Dependency targetDependency = new Dependency();
+            copy( (Dependency) child, targetDependency, false );
+            if(isAdd) t.add( targetDependency );
-            Dependency targetDependency = new Dependency();
-            copy( (Dependency) parent, targetDependency );
-            t.add( targetDependency );
+            boolean isAdd = true;
+            Dependency targetDependency = contains((Dependency) parent, t);
+            if(targetDependency == null)
+            {
+                targetDependency = new Dependency();    
+            }
+            else
+            {
+                isAdd = false;
+            }
+            //Dependency targetDependency = new Dependency();
+            copy( (Dependency) parent, targetDependency, true );
+            if(isAdd) t.add( targetDependency );
-           Dependency targetDependency = new Dependency();
-                copy( (Dependency) child, targetDependency );
-                copy( (Dependency) parent, targetDependency );
-                t.add( targetDependency );               
-
+            Dependency targetDependency = new Dependency();
+            copy( (Dependency) child, targetDependency, false );
+            copy( (Dependency) parent, targetDependency, true );
+            t.add( targetDependency );               
-
-    private static void copy( Dependency dependency, Dependency targetDependency )
+    
+    private Dependency contains(Dependency d1, List<Dependency> dependencies)
-        if ( targetDependency.getArtifactId() == null )
+        for(Dependency d : dependencies)
-            targetDependency.setArtifactId( dependency.getArtifactId() );
+            if( match(d, d1))
+            {
+                return d;
+            }
+        }
+        return null;
+    }
+    
+    private boolean match( Dependency d1, Dependency d2 )
+    {
+        // TODO: Version ranges ?
+        return getId( d1 ).equals( getId( d2 ) );
+   
+    }
+
+    private String getId( Dependency d )
+    {
+        StringBuilder sb = new StringBuilder();
+        
+        sb.append( d.getGroupId() ).append( ":" ).append( d.getArtifactId() );
+        sb.append( ":" ).append(
+                                d.getType() == null ? "jar"
+                                                : d.getType() ).append(
+                                                               ":" ).append(
+                                                                             d.getClassifier() );
+        
+        return sb.toString();
+    }
+    private static void copy( Dependency source, Dependency targetDependency, boolean isParent )
+    {
+        //IF target exists and is parent, don't override
+        if ( source.getArtifactId() != null && (targetDependency.getArtifactId() == null || !isParent) )
+        {
+            targetDependency.setArtifactId( source.getArtifactId() );
-        if ( targetDependency.getClassifier() == null )
+        if ( source.getClassifier() != null )
-            targetDependency.setClassifier( dependency.getClassifier() );
+            targetDependency.setClassifier( source.getClassifier() );
-        if ( targetDependency.getGroupId() == null )
+        if ( source.getGroupId() != null )
-            targetDependency.setGroupId( dependency.getGroupId() );
+            targetDependency.setGroupId( source.getGroupId() );
-        if ( targetDependency.getScope() == null )
+        if ( source.getScope() != null && (targetDependency.getScope() == null || !isParent) )
-            targetDependency.setScope( dependency.getScope() );
+            targetDependency.setScope( source.getScope() );
-        if ( targetDependency.getSystemPath() == null )
+        if ( source.getSystemPath() != null )
-            targetDependency.setSystemPath( dependency.getSystemPath() );
+            targetDependency.setSystemPath( source.getSystemPath() );
-        if ( targetDependency.getType() == null )
+        if ( source.getType() != null && (targetDependency.getScope() == null || !isParent))
-            targetDependency.setType( dependency.getType() );
+            targetDependency.setType( source.getType() );
-        if ( targetDependency.getVersion() == null )
+        if ( source.getVersion() != null && (targetDependency.getVersion() == null || !isParent)  )
-            targetDependency.setVersion( dependency.getVersion() );
+            targetDependency.setVersion( source.getVersion() );
-        if ( !dependency.getExclusions().isEmpty() )
+        if ( !source.getExclusions().isEmpty() )
-            for ( Exclusion e : dependency.getExclusions() )
+            for ( Exclusion e : source.getExclusions() )

INS31 INS31 INS31 INS83 INS43 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS44 INS42 INS43 INS42 INS74 INS42 INS70 INS41 INS43 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS60 INS21 INS21 INS41 UPD42 INS39 INS42 INS42 INS43 INS43 INS44 INS42 INS8 INS33 INS42 INS42 INS32 INS42 INS43 INS59 INS32 INS32 INS32 INS27 UPD27 UPD27 INS27 UPD27 INS27 INS27 INS42 INS42 INS43 INS42 INS25 INS32 INS42 INS32 INS42 INS42 INS14 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS27 INS36 INS27 INS36 INS27 INS36 INS27 INS36 INS60 INS60 INS25 MOV21 INS25 INS42 INS32 INS8 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS45 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS32 INS33 INS27 UPD42 UPD42 INS32 INS33 INS27 UPD42 INS32 INS33 INS27 INS32 INS33 INS27 INS39 INS59 MOV43 INS59 INS27 INS8 INS8 INS42 MOV21 INS60 INS60 INS25 INS25 INS21 INS42 INS42 INS42 INS41 INS42 INS42 INS42 INS32 INS32 INS42 INS16 INS42 INS42 MOV27 INS38 INS42 INS42 MOV27 INS38 INS42 INS42 INS27 INS38 INS42 INS42 MOV27 INS38 UPD42 UPD42 INS42 INS9 MOV42 MOV32 INS42 INS33 INS21 MOV21 INS9 INS39 INS59 MOV43 INS59 INS27 INS8 INS8 INS42 MOV21 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS45 INS27 INS45 INS32 INS42 UPD42 UPD42 UPD42 INS42 UPD42 UPD42 MOV32 MOV33 INS42 UPD42 INS42 UPD42 UPD42 UPD42 INS7 INS7 INS42 INS9 MOV42 MOV32 INS42 INS33 INS21 INS21 INS9 INS42 INS11 INS42 INS9 INS42 INS11 INS42 INS9 INS32 INS33 INS42 INS42 UPD42 INS42 INS14 INS42 INS9 UPD42 UPD42 INS7 INS7 INS43 INS42 INS43 INS42 INS42 INS42 MOV43 INS42 INS14 INS42 INS9 INS42 INS42 MOV43 DEL14 DEL59 DEL60 DEL14 DEL59 DEL60 DEL27