[MNG-3043] Allow 'mvn test' to work with test-jar dependencies in a reactor

o Revised to consider reactor state

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@800294 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.execution.BuildSuccess;
+import org.apache.maven.execution.MavenExecutionResult;
+import org.apache.maven.execution.MavenSession;
+    private MavenExecutionResult executionResult;
+
-    public ReactorArtifactRepository( Map<String, MavenProject> reactorProjects )
+    public ReactorArtifactRepository( Map<String, MavenProject> reactorProjects, MavenSession session )
+        this.executionResult = ( session != null ) ? session.getResult() : null;
-// TODO: The code below supports MNG-3043 & MNG-2871 but in its current form causes MNG-4269. 
-//       We need to consider the state of the reactor before handing out directories.
-//                else
-//                {
-//                    File classesDir;
-//
-//                    if ( isTestArtifact( artifact ) )
-//                    {
-//                        classesDir = new File( project.getBuild().getTestOutputDirectory() );
-//                    }
-//                    else
-//                    {
-//                        classesDir = new File( project.getBuild().getOutputDirectory() );
-//                    }
-//
-//                    if ( classesDir.isDirectory() )
-//                    {
-//                        artifact.setFile( classesDir );
-//
-//                        artifact.setResolved( true );
-//                    }
-//                }
+                else if ( isProjectOutputValid( project ) )
+                {
+                    File classesDir;
+
+                    if ( isTestArtifact( artifact ) )
+                    {
+                        classesDir = new File( project.getBuild().getTestOutputDirectory() );
+                    }
+                    else
+                    {
+                        classesDir = new File( project.getBuild().getOutputDirectory() );
+                    }
+
+                    if ( classesDir.isDirectory() )
+                    {
+                        artifact.setFile( classesDir );
+
+                        artifact.setResolved( true );
+                    }
+                }
+     * Determines whether the output directories of the specified project have valid contents and can be used for
+     * artifact resolution.
+     * 
+     * @param project The project to check, must not be {@code null}.
+     * @return {@code true} if the output directories are valid, {@code false} otherwise.
+     */
+    private boolean isProjectOutputValid( MavenProject project )
+    {
+        return executionResult != null && executionResult.getBuildSummary( project ) instanceof BuildSuccess;
+    }
+
+    /**

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS31 INS83 INS43 INS59 INS44 INS29 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS43 INS42 INS21 INS65 INS65 INS65 INS43 INS42 INS41 INS42 INS7 INS66 INS66 INS42 INS66 INS65 INS66 INS66 INS65 INS66 INS65 INS66 INS42 INS27 INS22 INS16 INS66 INS66 INS66 INS27 INS62 INS52 INS42 INS36 INS32 INS33 INS42 INS33 INS32 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS25 INS32 INS8 INS42 INS42 INS60 INS25 INS25 INS43 INS59 INS32 INS8 INS8 INS32 INS8 INS42 INS42 INS42 INS42 INS21 INS21 INS42 INS42 INS21 INS21 INS7 INS7 INS32 INS32 INS42 INS14 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS9 INS43 INS32 INS43 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42