o Improved logging

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@805351 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.execution.MavenSession;
+
-            logger.info( chars( '-', LINE_LENGTH ) );
-            logger.info( "Reactor Summary:" );
-            logger.info( chars( '-', LINE_LENGTH ) );
-
-            MavenExecutionResult result = event.getSession().getResult();
-
-            for ( MavenProject project : event.getSession().getProjects() )
+            if ( event.getSession().getProjects().size() > 1 )
-                StringBuilder buffer = new StringBuilder( 128 );
-
-                buffer.append( project.getName() );
-
-                while ( buffer.length() < LINE_LENGTH - 22 )
-                {
-                    buffer.append( '.' );
-                }
-
-                BuildSummary buildSummary = result.getBuildSummary( project );
-
-                if ( buildSummary == null )
-                {
-                    buffer.append( "SKIPPED" );
-                }
-                else if ( buildSummary instanceof BuildSuccess )
-                {
-                    buffer.append( "SUCCESS [" );
-                    buffer.append( getFormattedTime( buildSummary.getTime() ) );
-                    buffer.append( "]" );
-                }
-                else if ( buildSummary instanceof BuildFailure )
-                {
-                    buffer.append( "FAILURE [" );
-                    buffer.append( getFormattedTime( buildSummary.getTime() ) );
-                    buffer.append( "]" );
-                }
-
-                logger.info( buffer.toString() );
+                logReactorSummary( event.getSession() );
+            logResult( event.getSession() );
+
+            logStats( event.getSession() );
+
+    private void logReactorSummary( MavenSession session )
+    {
+        logger.info( chars( '-', LINE_LENGTH ) );
+        logger.info( "Reactor Summary:" );
+        logger.info( chars( '-', LINE_LENGTH ) );
+
+        MavenExecutionResult result = session.getResult();
+
+        for ( MavenProject project : session.getProjects() )
+        {
+            StringBuilder buffer = new StringBuilder( 128 );
+
+            buffer.append( project.getName() );
+
+            buffer.append( ' ' );
+            while ( buffer.length() < LINE_LENGTH - 21 )
+            {
+                buffer.append( '.' );
+            }
+            buffer.append( ' ' );
+
+            BuildSummary buildSummary = result.getBuildSummary( project );
+
+            if ( buildSummary == null )
+            {
+                buffer.append( "SKIPPED" );
+            }
+            else if ( buildSummary instanceof BuildSuccess )
+            {
+                buffer.append( "SUCCESS [" );
+                buffer.append( getFormattedTime( buildSummary.getTime() ) );
+                buffer.append( "]" );
+            }
+            else if ( buildSummary instanceof BuildFailure )
+            {
+                buffer.append( "FAILURE [" );
+                buffer.append( getFormattedTime( buildSummary.getTime() ) );
+                buffer.append( "]" );
+            }
+
+            logger.info( buffer.toString() );
+        }
+    }
+
+    private void logResult( MavenSession session )
+    {
+        logger.info( chars( '-', LINE_LENGTH ) );
+
+        if ( session.getResult().hasExceptions() )
+        {
+            logger.info( "BUILD FAILURE" );
+        }
+        else
+        {
+            logger.info( "BUILD SUCCESS" );
+        }
+    }
+
+    private void logStats( MavenSession session )
+    {
+        logger.info( chars( '-', LINE_LENGTH ) );
+
+        Date finish = new Date();
+
+        long time = finish.getTime() - session.getRequest().getStartTime().getTime();
+
+        logger.info( "Total time: " + getFormattedTime( time ) );
+
+        logger.info( "Finished at: " + finish );
+
+        System.gc();
+
+        Runtime r = Runtime.getRuntime();
+
+        long MB = 1024 * 1024;
+
+        logger.info( "Final Memory: " + ( r.totalMemory() - r.freeMemory() ) / MB + "M/" + r.totalMemory() / MB + "M" );
+    }
+
+            logger.info( chars( '-', LINE_LENGTH ) );
+            logger.info( chars( '-', LINE_LENGTH ) );

INS26 INS40 INS31 INS31 INS31 MOV78 INS83 INS39 INS42 MOV44 INS8 UPD83 INS42 INS44 MOV8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS25 INS43 INS42 INS43 INS42 INS21 INS25 INS43 INS42 INS21 INS60 INS60 INS21 INS21 INS21 INS60 INS60 INS21 MOV32 INS8 INS42 INS32 INS42 INS32 INS32 INS8 INS8 INS42 INS32 INS43 INS59 INS39 INS59 INS32 INS32 INS32 INS43 INS59 INS39 INS59 INS32 INS25 INS21 INS21 MOV21 INS32 INS42 INS42 INS21 INS21 INS42 INS42 INS32 INS32 INS42 INS21 INS21 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS32 INS42 INS27 INS42 INS42 INS27 INS21 INS21 INS27 INS8 INS32 MOV32 MOV32 INS42 INS42 INS32 INS32 INS42 INS13 INS42 INS42 INS42 INS32 INS32 INS42 INS13 INS42 INS43 INS32 INS32 INS45 INS32 INS45 INS42 INS42 INS42 INS34 INS34 INS27 INS45 INS32 INS32 INS32 INS34 INS21 INS42 INS32 UPD42 INS42 INS42 INS13 INS42 INS42 INS13 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS27 INS27 INS42 INS42 INS32 INS42 INS42 INS32 MOV32 INS42 INS32 INS42 INS42 UPD34 INS32 INS42 INS27 INS45 INS32 INS42 INS42 INS13 INS42 INS42 INS13 INS42 INS42 INS32 INS42 INS42 INS45 INS27 INS42 INS42 INS42 INS42 INS36 INS42 INS27 INS32 INS32 INS42 INS42 INS42 INS42 DEL42 DEL25 DEL8