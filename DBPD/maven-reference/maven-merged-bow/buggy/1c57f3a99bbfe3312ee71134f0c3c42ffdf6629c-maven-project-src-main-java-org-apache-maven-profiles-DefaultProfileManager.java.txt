Collapsed the ProfileContext into the ProfileManager - serves similar function.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@761629 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.project.ProjectBuilderConfiguration;
+    
+    private static final ProfileMatcher defaultMatcher = new DefaultMatcher();
+
+    private static final List<ProfileMatcher> matchers =
+        Collections.unmodifiableList( Arrays.asList( new DefaultMatcher(), new PropertyMatcher() ) );    
+    public static List<Profile> getActiveProfilesFrom(ProjectBuilderConfiguration config, Model model, PlexusContainer container)
+		throws ProfileActivationException
+	{
+	    List<Profile> projectProfiles = new ArrayList<Profile>();
+	    ProfileManager externalProfileManager = config.getGlobalProfileManager();
+	    
+	    ProfileActivationContext profileActivationContext = (externalProfileManager == null) ? new ProfileActivationContext( config.getExecutionProperties(), false ):
+	        externalProfileManager.getProfileActivationContext();
+	 
+	    if(externalProfileManager != null)
+	    {           
+	    	projectProfiles.addAll( externalProfileManager.getActiveProfiles() );    
+	    }
+	
+	    ProfileManager profileManager = new DefaultProfileManager( container, profileActivationContext );
+	    profileManager.addProfiles( model.getProfiles() );
+	    projectProfiles.addAll( profileManager.getActiveProfiles() ); 
+	    return projectProfiles;
+	}   
+ 
+    public static Collection<Profile> getActiveProfiles(List<Profile> profiles, ProfileManagerInfo profileContextInfo)
+    {
+        List<InterpolatorProperty> properties = profileContextInfo.getInterpolatorProperties();
+        Collection<String> activeProfileIds = profileContextInfo.getActiveProfileIds();
+        Collection<String> inactiveProfileIds = profileContextInfo.getInactiveProfileIds();
+        
+        List<Profile> matchedProfiles = new ArrayList<Profile>();
+        List<Profile> defaultProfiles = new ArrayList<Profile>();
+        for ( Profile profile : profiles )
+        {
+            String profileId = profile.getId();
+
+            if ( !inactiveProfileIds.contains( profileId ) )
+            {
+                if ( activeProfileIds.contains( profileId ) )
+                {
+                    matchedProfiles.add( profile );
+                }
+                else if ( defaultMatcher.isMatch( profile, properties ) )
+                {
+                    defaultProfiles.add( profile );
+                }
+                else
+                {
+                    for ( ProfileMatcher matcher : matchers )
+                    {
+                        if ( matcher.isMatch( profile, properties ) )
+                        {
+                            matchedProfiles.add( profile );
+                            break;
+                        }
+                    }
+                }
+            }
+        }
+
+        if ( matchedProfiles.isEmpty() )
+        {
+            matchedProfiles = defaultProfiles;
+        }
+
+        return matchedProfiles;
+    }    
+
+    /* (non-Javadoc)
+     * @see org.apache.maven.project.ProfileManager#addProfiles(java.util.List)
+     */
+    public void addProfiles( List<Profile> profiles )
+    {
+        for ( Iterator it = profiles.iterator(); it.hasNext(); )
+        {
+            Profile profile = (Profile) it.next();
+
+            addProfile( profile );
+        }
+    }   
+    
-    private static List<ProfileMatcher> matchers = Arrays.asList( (ProfileMatcher) new DefaultMatcher(),
-        (ProfileMatcher) new PropertyMatcher());
-
-    /* (non-Javadoc)
-     * @see org.apache.maven.project.ProfileManager#addProfiles(java.util.List)
-     */
-    public void addProfiles( List<Profile> profiles )
-    {
-        for ( Iterator it = profiles.iterator(); it.hasNext(); )
-        {
-            Profile profile = (Profile) it.next();
-
-            addProfile( profile );
-        }
-    }
-

INS26 MOV23 MOV31 INS40 INS23 INS31 INS31 INS83 INS83 INS83 MOV43 INS59 INS83 INS83 INS83 INS74 INS42 INS44 INS44 INS44 INS43 INS8 INS83 INS83 INS74 INS42 INS44 INS44 INS8 INS42 MOV14 INS32 INS43 INS43 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS60 INS60 INS25 INS60 INS21 INS21 INS41 INS43 INS43 INS74 INS42 INS43 INS42 INS60 INS60 INS60 INS60 INS60 INS70 INS25 INS41 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS43 INS59 INS43 INS59 INS27 INS8 INS43 INS59 INS32 INS32 INS42 INS42 INS42 INS43 INS43 INS42 INS74 INS59 INS74 INS59 INS74 INS59 INS74 INS59 INS74 INS59 INS44 INS42 INS8 INS32 INS8 INS42 MOV42 MOV42 INS14 MOV14 INS43 INS43 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS16 INS42 INS33 INS21 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS14 INS43 INS43 INS42 INS14 INS43 INS42 INS60 INS25 INS42 INS42 INS21 INS43 INS42 INS42 INS74 INS42 INS42 INS36 INS14 INS32 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS74 INS42 INS43 INS59 INS38 INS8 INS7 INS42 INS43 INS43 INS27 INS43 INS32 INS9 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS43 INS43 INS43 INS42 INS42 INS32 INS32 INS25 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS8 INS25 INS42 INS42 INS42 INS21 INS32 INS8 INS8 INS32 INS42 INS42 INS42 INS42 INS21 INS70 INS42 INS42 INS42 INS32 INS44 INS42 INS8 INS42 INS42 INS42 MOV43 INS42 INS25 INS32 INS8 INS42 INS42 INS42 INS42 INS21 INS10 INS32 INS42 INS42 INS42 DEL11 DEL11 DEL32