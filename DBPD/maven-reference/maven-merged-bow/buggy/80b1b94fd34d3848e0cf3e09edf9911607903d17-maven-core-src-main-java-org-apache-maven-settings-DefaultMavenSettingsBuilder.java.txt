o Moving the logging statement to initialize() to make the component less
  verbose.
o Moving the default settings path value to plexus.xml (and components.xml).
o Setting the correct license and adding @version tags.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163707 13f79535-47bb-0310-9956-ffa450edef68

-/* ====================================================================
- *   Copyright 2001-2004 The Apache Software Foundation.
+/*
+ * Copyright 2001-2005 The Apache Software Foundation.
- *   Licensed under the Apache License, Version 2.0 (the "License");
- *   you may not use this file except in compliance with the License.
- *   You may obtain a copy of the License at
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
- *       http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
- *   Unless required by applicable law or agreed to in writing, software
- *   distributed under the License is distributed on an "AS IS" BASIS,
- *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *   See the License for the specific language governing permissions and
- *   limitations under the License.
- * ====================================================================
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
-import org.apache.maven.settings.io.xpp3.SettingsXpp3Reader;
-import org.codehaus.plexus.logging.AbstractLogEnabled;
-
-import java.io.IOException;
+
+import org.apache.maven.settings.io.xpp3.SettingsXpp3Reader;
+
+import org.codehaus.plexus.logging.AbstractLogEnabled;
+import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
+import org.codehaus.plexus.util.IOUtil;
+ * @version $Id$
-    implements MavenSettingsBuilder
+    implements MavenSettingsBuilder, Initializable
+    /** @configuration */
+    private String settingsPath;
-    private static final String DEFAULT_SETTINGS_PATH = "${user.home}/.m2/settings.xml";
-    
-    private String settingsPath = DEFAULT_SETTINGS_PATH;
+    private File settingsFile;
+
+    // ----------------------------------------------------------------------
+    // Component Lifecycle
+    // ----------------------------------------------------------------------
+
+    public void initialize()
+        throws Exception
+    {
+        settingsFile = getSettingsFile();
+
+        getLogger().debug( "Building Maven settings from: '" + settingsFile.getAbsolutePath() + "'" );
+    }
+
+    // ----------------------------------------------------------------------
+    // MavenSettingsBuilder Implementation
+    // ----------------------------------------------------------------------
-    public MavenSettings buildSettings() throws Exception
+    public MavenSettings buildSettings()
+        throws Exception
-        MavenSettings settings = null;
-        
-        File modelFile = getSettingsFile();
-        if ( modelFile.exists() && modelFile.isFile() )
+        if ( settingsFile.exists() && settingsFile.isFile() )
-            SettingsXpp3Reader modelReader = new SettingsXpp3Reader();
-                reader = new FileReader( modelFile );
+                reader = new FileReader( settingsFile );
+
+                SettingsXpp3Reader modelReader = new SettingsXpp3Reader();
-                settings = new MavenSettings( model );
+
+                return new MavenSettings( model );
-                if ( reader != null )
-                {
-                    try
-                    {
-                        reader.close();
-                    }
-                    catch ( IOException e )
-                    {
-                    }
-                }
+                IOUtil.close( reader );
-
-        if ( settings == null )
+        else
-            settings = new MavenSettings();
-        }
-        return settings;
+            return new MavenSettings();
+        }
-        String userDir = System.getProperty( "user.home" );
-        userDir = userDir.replaceAll( "\\\\", "/" );
-        
-        
-        path = path.replaceAll( "\\$\\{user.home\\}", userDir );
+
+        // TODO: This replacing shouldn't be necessary as user.home should be in the
+        // context of the container and thus the value would be interpolated by Plexus
+        String userHome = System.getProperty( "user.home" );
+
+        path = path.replaceAll( "\\$\\{user.home\\}", userHome );
-        File userModelFile = new File( path );
-        
-        getLogger().debug( "Using userModel configured from: " + userModelFile );
-        
-        return userModelFile;
+        return new File( path );
-

MOV26 MOV26 INS26 INS40 UPD40 INS43 INS23 INS31 INS65 INS42 INS29 MOV83 MOV43 INS59 INS83 INS39 INS42 INS43 INS8 MOV60 INS66 INS65 UPD42 INS42 UPD42 MOV42 INS21 INS21 INS66 INS7 INS32 INS8 MOV14 INS42 MOV32 MOV32 INS42 INS27 MOV21 INS41 UPD42 INS45 INS32 INS45 UPD42 UPD42 MOV8 MOV14 UPD42 INS42 INS42 MOV60 INS41 MOV14 UPD42 INS42 UPD42 DEL83 DEL83 DEL45 DEL43 DEL42 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL59 DEL60 DEL42 DEL7 DEL21 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL8 DEL25 DEL8 DEL42 DEL33 DEL27 DEL42 DEL7 DEL21 DEL8 DEL25 DEL42 DEL41 DEL42 DEL42 DEL42 DEL45 DEL45 DEL32 DEL7 DEL21 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42