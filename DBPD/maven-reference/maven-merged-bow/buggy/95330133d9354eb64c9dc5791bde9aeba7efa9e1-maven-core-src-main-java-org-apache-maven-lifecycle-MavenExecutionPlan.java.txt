[MNG-4633] Fixed weave mode bug when building m3 itself in weave mode.

Updated testcase for MEP.

Also removed all unused/unecessar code from weave mode.

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@934201 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.lifecycle.internal.ExecutionPlanItem;
+import org.apache.maven.plugin.MojoExecution;
+
-import org.apache.maven.lifecycle.internal.ExecutionPlanItem;
-import org.apache.maven.plugin.MojoExecution;
-import org.apache.maven.plugin.descriptor.MojoDescriptor;
-
+
-    /** For project dependency resolution, the scopes of resolution required if any. */
+
+    /**
+     * For project dependency resolution, the scopes of resolution required if any.
+     */
-    /** For project dependency collection, the scopes of collection required if any. */
+    /**
+     * For project dependency collection, the scopes of collection required if any.
+     */
-    private final Map<String, ExecutionPlanItem> lastInPhase;
-    private final List<String> phasesInOrder;
+    private final Map<String, ExecutionPlanItem> lastMojoExecutionForAllPhases;
+
+
+    final List<String> phases;
-                               Set<String> requiredDependencyCollectionScopes, List<ExecutionPlanItem> planItem )
+                               Set<String> requiredDependencyCollectionScopes, List<ExecutionPlanItem> planItem,
+                               DefaultLifecycles defaultLifecycles )
-        lastInPhase = new HashMap<String, ExecutionPlanItem>();
-        phasesInOrder = new ArrayList<String>();
+        lastMojoExecutionForAllPhases = new HashMap<String, ExecutionPlanItem>();
+
+        String firstPhasePreset = getFirstPhasePresentInPlan();
+
+        List<String> phases = null;
+        if ( defaultLifecycles != null )
+        {
+            final Lifecycle lifecycle = defaultLifecycles.get( firstPhasePreset );
+            if ( lifecycle != null )
+            {
+                phases = lifecycle.getPhases();
+            }
+        }
+        this.phases = phases;
+
+        Map<String, ExecutionPlanItem> lastInExistingPhases = new HashMap<String, ExecutionPlanItem>();
-            final String phaseName = getPhase( executionPlanItem );
-            if ( !lastInPhase.containsKey( phaseName ) )
+            final String phaseName = executionPlanItem.getLifecyclePhase();
+            if ( phaseName != null )
-                phasesInOrder.add( phaseName );
+                lastInExistingPhases.put( phaseName, executionPlanItem );
-            lastInPhase.put( phaseName, executionPlanItem );
+
+        ExecutionPlanItem lastSeenExecutionPlanItem = null;
+        ExecutionPlanItem forThis;
+
+        if ( phases != null )
+        {
+            for ( String phase : phases )
+            {
+                forThis = lastInExistingPhases.get( phase );
+                if ( forThis != null )
+                {
+                    lastSeenExecutionPlanItem = forThis;
+                }
+                lastMojoExecutionForAllPhases.put( phase, lastSeenExecutionPlanItem );
+
+            }
+        }
+
-    private String getPhase( ExecutionPlanItem executionPlanItem )
+    private String getFirstPhasePresentInPlan()
-        final MojoExecution mojoExecution = executionPlanItem.getMojoExecution();
-        final MojoDescriptor mojoDescriptor = mojoExecution.getMojoDescriptor();
-        return mojoDescriptor.getPhase();
-
+        for ( ExecutionPlanItem executionPlanItem : getExecutionPlanItems() )
+        {
+            final String phase = executionPlanItem.getLifecyclePhase();
+            if ( phase != null )
+            {
+                return phase;
+            }
+        }
+        return null;
+
-     * the closest upstream item will be returned.
-     * @param executionPlanItem The execution plan item
+     * the closest executionPlanItem from an earlier phase item will be returned.
+     *
+     * @param requestedPhase the requested phase
+     *                       The execution plan item
-    public ExecutionPlanItem findLastInPhase( ExecutionPlanItem executionPlanItem )
+    public ExecutionPlanItem findLastInPhase( String requestedPhase )
-        ExecutionPlanItem executionPlanItem1 = lastInPhase.get( getPhase( executionPlanItem ) );
-        return executionPlanItem1;
+        ExecutionPlanItem result = lastMojoExecutionForAllPhases.get( requestedPhase );
+        int i = phases.indexOf( requestedPhase );
+        while ( result == null && i > 0 )
+        {
+            final String previousPhase = phases.get( --i );
+            result = lastMojoExecutionForAllPhases.get( previousPhase );
+
+        }
+        return result;
+    // Used by m2e but will be removed, really. 
+    @SuppressWarnings({"UnusedDeclaration"})

MOV26 MOV26 INS44 MOV43 UPD42 INS79 UPD42 UPD42 INS43 INS42 INS60 INS60 INS25 INS21 INS60 INS70 INS60 INS60 INS25 INS70 INS41 UPD43 UPD42 INS60 INS61 INS42 INS4 UPD66 UPD66 INS42 INS43 INS59 INS74 INS59 INS27 INS8 INS7 INS74 INS59 MOV44 MOV32 INS8 INS43 INS59 MOV43 INS59 INS27 INS8 MOV44 INS32 INS8 INS33 UPD66 UPD42 INS66 UPD66 UPD42 INS43 INS39 INS59 INS27 INS8 UPD42 INS45 UPD42 INS42 INS42 INS32 UPD43 MOV43 INS43 INS42 INS33 INS42 INS33 INS60 INS25 INS22 INS42 INS43 INS43 INS43 INS42 INS14 MOV60 INS25 INS42 INS42 INS33 INS42 INS42 INS33 INS70 UPD42 MOV42 MOV60 INS25 INS42 UPD42 INS42 INS32 INS27 INS27 INS60 INS21 INS42 UPD42 INS42 INS83 INS43 INS59 INS27 INS8 INS52 INS42 INS42 INS42 INS42 INS74 MOV43 INS27 INS8 INS44 INS42 INS8 MOV43 INS27 INS8 UPD42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS33 INS42 INS34 INS83 INS43 INS59 INS7 INS42 INS42 INS32 INS42 INS33 INS21 INS43 INS43 INS43 INS42 INS33 INS21 INS43 INS42 MOV21 INS25 MOV21 UPD42 INS42 INS33 INS41 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS32 INS42 INS7 INS27 INS8 UPD42 UPD42 INS42 INS42 INS42 INS38 INS42 INS42 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS42 INS32 INS42 INS33 INS21 UPD42 UPD42 UPD42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS7 INS42 INS42 DEL40 DEL26 DEL83 DEL42 DEL32 DEL42 DEL74 DEL14 DEL7 DEL21 DEL32 DEL38 DEL8 DEL25 DEL8 DEL70 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL41 DEL42 DEL32