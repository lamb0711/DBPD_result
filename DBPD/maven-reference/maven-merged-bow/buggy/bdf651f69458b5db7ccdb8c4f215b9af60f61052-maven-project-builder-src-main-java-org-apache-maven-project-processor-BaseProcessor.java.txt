[MNG-2006] - Module SCM URL resolution -relative path. Brought scm path behavior inline with Maven 2

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@759354 13f79535-47bb-0310-9956-ffa450edef68

+
+import java.net.URI;
+import java.net.URISyntaxException;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+
+import org.apache.maven.model.Model;
+    
+    private List<Model> parentModels;
+
+        parentModels = new ArrayList<Model>();
+    }
+    
+    /**
+     * Ordered from least specialized to most specialized.
+     */
+    public List<Model> getParentModels()
+    {
+    	return parentModels;
-        this.processors = new ArrayList<Processor>();
+        this(new ArrayList<Processor>());
-
+        if(parent instanceof Model)
+        {
+        	parentModels.add( (Model) parent );
+        }
+    
+    protected String normalizeUri(String u, String artifactId, Model parent)
+    {
+    	if(u == null)
+    	{
+    		return null;
+    	}
+		try 
+		{
+			String slashes = getSlashes(new URI(u).getRawSchemeSpecificPart());
+			URI uri = new URI(u + "/"
+					+ getModulePathAdjustment(parent, artifactId));
+
+			String normalized = uri.normalize().toString();
+			if("file".equals(uri.getScheme()))//UNC Paths
+			{
+				normalized = normalized.replaceFirst("/", slashes);
+			}
+			return normalized;   
+		} 
+		catch (URISyntaxException e) {
+
+		}  
+		return null;
+    }
+    
+    private static String getSlashes(String uri)
+    {
+    	StringBuilder sb = new StringBuilder();
+    	for(byte b : uri.getBytes())
+    	{
+    		if(b == 47)
+    		{
+    			sb.append("/");
+    		}
+        	else
+        	{
+        		break;
+        	}
+    	}
+    	return sb.toString();
+    }    
+    
+    private String getModulePathAdjustment(Model moduleProject,
+			String artifactId) {
+
+		Map<String, String> moduleAdjustments = new HashMap<String, String>();
+		List<String> modules = moduleProject.getModules();
+		if (modules != null) {
+			for (Iterator<String> it = modules.iterator(); it.hasNext();) {
+				String modulePath = (String) it.next();
+				String moduleName = modulePath;
+
+				if (moduleName.endsWith("/") || moduleName.endsWith("\\")) {
+					moduleName = moduleName.substring(0,
+							moduleName.length() - 1);
+				}
+
+				int lastSlash = moduleName.lastIndexOf('/');
+
+				if (lastSlash < 0) {
+					lastSlash = moduleName.lastIndexOf('\\');
+				}
+
+				String adjustment = null;
+
+				if (lastSlash > -1) {
+					moduleName = moduleName.substring(lastSlash + 1);
+					adjustment = modulePath.substring(0, lastSlash);
+				}
+
+				moduleAdjustments.put(moduleName, adjustment);
+			}
+		}
+		String adjust = moduleAdjustments.get(artifactId);
+		return (adjust != null) ? adjust + "/" + artifactId :  "/" + artifactId;
+	}      

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS31 INS31 INS31 INS83 INS74 INS59 INS29 INS83 INS74 INS42 INS8 INS83 INS43 INS42 INS44 INS44 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS44 INS8 INS43 INS43 INS42 INS21 INS65 INS43 INS43 INS41 INS17 INS25 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS25 INS54 INS41 INS42 INS43 INS42 INS60 INS70 INS41 INS42 INS43 INS42 INS43 INS42 INS60 INS60 INS25 INS60 INS41 INS42 INS42 INS7 INS66 INS42 INS42 INS42 MOV14 INS62 INS8 INS42 INS42 INS42 INS27 INS8 INS8 INS12 INS33 INS42 INS43 INS59 INS44 INS32 INS8 INS32 INS42 INS42 INS74 INS59 INS74 INS59 INS27 INS8 INS43 INS59 INS16 INS42 INS14 INS42 INS43 INS21 INS42 INS33 INS41 INS60 INS60 INS60 INS25 INS41 INS44 INS8 INS42 INS42 INS14 INS39 INS42 INS42 INS42 INS25 INS42 INS42 INS43 INS43 INS43 INS42 INS14 INS43 INS43 INS42 INS32 INS42 INS33 INS24 INS42 INS42 INS32 INS36 INS27 INS27 INS74 INS42 INS32 INS33 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS8 INS42 INS43 INS42 INS43 INS27 INS8 INS8 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS58 INS32 INS8 INS42 INS42 INS42 INS27 INS42 INS45 INS42 INS45 INS42 INS43 INS43 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS45 INS42 INS32 INS21 INS42 INS42 INS42 INS34 INS21 INS10 INS43 INS43 INS43 INS74 INS59 INS42 INS42 INS60 INS60 INS25 INS60 INS25 INS60 INS25 INS21 INS42 INS33 INS42 INS42 INS43 INS42 INS42 INS32 INS43 INS27 INS32 INS42 INS42 INS42 INS7 INS32 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS43 INS59 INS43 INS59 INS27 INS8 INS39 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS32 INS42 INS14 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS32 INS32 INS21 INS42 INS32 INS42 INS34 INS21 INS42 INS42 INS33 INS42 INS38 INS21 INS21 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS43 INS32 INS42 INS42 INS45 INS42 INS42 INS45 INS7 INS42 INS42 INS13 INS7 INS34 INS7 INS7 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS34 INS27 INS42 INS42 INS13 INS42 INS42 INS27 INS42 INS42 INS34 INS42 INS32 INS34 INS42 INS34 INS42 INS42 DEL52 DEL42 DEL22 DEL7 DEL21