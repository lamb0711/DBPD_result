[MNG-4633] Reactor artifact resolution in weave mode

Resolves artifacts from within reactor build.
No longer requires artifacts to be present in local repository before building weave mode ;)

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@935334 13f79535-47bb-0310-9956-ffa450edef68

-                                     MavenSession sessionForThisModule, MavenExecutionPlan executionPlan )
+                                     MavenSession sessionForThisModule, MavenExecutionPlan executionPlan,
+                                     Set<Artifact> projectArtifacts )
-        resolveDependencies( aggregating, sessionForThisModule, executionPlan, projectsToResolve );
+        resolveDependencies( aggregating, sessionForThisModule, executionPlan, projectsToResolve, projectArtifacts );
-                                        dependenctContext.getScopesToResolve(), session,
-                                        dependenctContext.isAggregating() );
+                                         dependenctContext.getScopesToResolve(), session,
+                                         dependenctContext.isAggregating(), new HashSet<Artifact>() );
-                                      List<MavenProject> projectsToResolve )
+                                       List<MavenProject> projectsToResolve, Set<Artifact> projectArtifacts )
-            resolveDependencies( project, aggregating, session, executionPlan );
+            resolveProjectDependencies( project, executionPlan.getRequiredCollectionScopes(),
+                                         executionPlan.getRequiredResolutionScopes(), session, aggregating,
+                                         projectArtifacts );
-    private void resolveDependencies( MavenProject project, boolean aggregating, MavenSession session,
-                                      MavenExecutionPlan executionPlan )
-        throws LifecycleExecutionException
-    {
-        resolveProjectDependencies( project, executionPlan.getRequiredCollectionScopes(),
-                                    executionPlan.getRequiredResolutionScopes(), session, aggregating );
-    }
-
-                                             Collection<String> scopesToResolve, MavenSession session,
-                                             boolean aggregating )
+                                              Collection<String> scopesToResolve, MavenSession session,
+                                              boolean aggregating, Set<Artifact> projectArtifacts )
-            getProjectDependencies( project, scopesToCollect, scopesToResolve, session, aggregating );
+            getProjectDependencies( project, scopesToCollect, scopesToResolve, session, aggregating,
+                                    projectArtifacts );
-                                                  boolean aggregating )
+                                                  boolean aggregating, Set<Artifact> projectArtifacts )
-                artifacts = projectDependenciesResolver.resolve( project, scopesToCollect, scopesToResolve, session );
+                artifacts = projectDependenciesResolver.resolve( project , scopesToCollect,
+                                                                 scopesToResolve, session, projectArtifacts );
-                if ( aggregating && areAllArtifactsInReactor( session.getProjects(), e.getMissingArtifacts() ) )
-                {
-                    logger.warn( "The following artifacts could not be resolved at this point of the build" +
-                        " but seem to be part of the reactor:" );
-
-                    for ( Artifact artifact : e.getMissingArtifacts() )
-                    {
-                        logger.warn( "o " + artifact.getId() );
-                    }
-
-                    logger.warn( "Try running the build up to the lifecycle phase \"package\"" );
-
-                    artifacts = new LinkedHashSet<Artifact>( e.getResolvedArtifacts() );
-                }
-                else
-                {
-                    throw e;
-                }
+                artifacts = handleException( session, aggregating, e );
+    private Set<Artifact> handleException( MavenSession session, boolean aggregating,
+                                           MultipleArtifactsNotFoundException e )
+        throws MultipleArtifactsNotFoundException
+    {
+        Set<Artifact> artifacts;/*
+        * MNG-2277, the check below compensates for our bad plugin support where we ended up with aggregator
+        * plugins that require dependency resolution although they usually run in phases of the build where project
+        * artifacts haven't been assembled yet. The prime example of this is "mvn release:prepare".
+        */
+        if ( aggregating && areAllArtifactsInReactor( session.getProjects(), e.getMissingArtifacts() ) )
+        {
+            logger.warn( "The following artifacts could not be resolved at this point of the build" +
+                " but seem to be part of the reactor:" );
+
+            for ( Artifact artifact : e.getMissingArtifacts() )
+            {
+                logger.warn( "o " + artifact.getId() );
+            }
+
+            logger.warn( "Try running the build up to the lifecycle phase \"package\"" );
+
+            artifacts = new LinkedHashSet<Artifact>( e.getResolvedArtifacts() );
+        }
+        else
+        {
+            throw e;
+        }
+        return artifacts;
+    }
+

INS31 INS31 INS44 MOV83 MOV39 MOV42 MOV44 MOV44 MOV44 MOV44 INS44 MOV43 INS8 INS44 INS83 INS74 INS42 MOV44 MOV44 MOV44 MOV44 MOV44 INS44 MOV43 INS8 INS42 MOV44 INS43 MOV8 INS74 INS42 INS74 UPD42 MOV42 INS70 INS74 INS42 INS43 INS43 INS74 INS42 INS60 INS54 INS42 MOV60 MOV41 INS43 INS43 INS43 INS43 MOV44 MOV42 MOV8 INS43 INS43 INS42 INS42 INS43 INS43 INS74 INS59 INS8 MOV12 MOV12 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS54 INS41 INS42 INS42 INS42 INS8 INS12 INS42 INS14 INS42 MOV21 INS44 INS8 INS74 INS7 UPD43 MOV43 UPD42 MOV42 INS21 INS43 INS43 INS42 INS32 UPD42 INS7 INS42 INS42 UPD42 MOV42 INS42 MOV42 UPD42 MOV42 INS42 MOV42 UPD42 MOV42 INS42 INS32 INS42 INS42 INS42 INS42 DEL43 DEL44 DEL8 DEL70 DEL8 DEL31 DEL83 DEL39 DEL42 DEL44 DEL42 DEL43 DEL31 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL12 DEL54 DEL8 DEL54 DEL8