[MNG-3616] Null Pointer Exception when mirrorOf missing from mirror in settings.xml

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@929083 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.settings.Mirror;
+import org.apache.maven.settings.Server;
+import org.codehaus.plexus.util.StringUtils;
+    private static final String ID_REGEX = "[A-Za-z0-9_\\-.]+";
+
+        if ( settings.isUsePluginRegistry() )
+        {
+            addWarn( problems, "'usePluginRegistry' is deprecated and has no effect." );
+        }
+
+        List<String> pluginGroups = settings.getPluginGroups();
+
+        if ( pluginGroups != null )
+        {
+            for ( int i = 0; i < pluginGroups.size(); i++ )
+            {
+                String pluginGroup = pluginGroups.get( i ).trim();
+
+                if ( StringUtils.isBlank( pluginGroup ) )
+                {
+                    addError( problems, "'pluginGroups.pluginGroup[" + i + "]' must not be empty." );
+                }
+                else if ( !pluginGroup.matches( ID_REGEX ) )
+                {
+                    addError( problems, "'pluginGroups.pluginGroup[" + i
+                        + "]' must denote a valid group id and match the pattern " + ID_REGEX );
+                }
+            }
+        }
+
+        List<Server> servers = settings.getServers();
+
+        if ( servers != null )
+        {
+            for ( int i = 0; i < servers.size(); i++ )
+            {
+                Server server = servers.get( i );
+
+                validateStringNotEmpty( problems, "servers.server[" + i + "].id", server.getId(), null );
+            }
+        }
+
+        List<Mirror> mirrors = settings.getMirrors();
+
+        if ( mirrors != null )
+        {
+            for ( Mirror mirror : mirrors )
+            {
+                validateStringNotEmpty( problems, "mirrors.mirror.id", mirror.getId(), mirror.getUrl() );
+
+                validateStringNotEmpty( problems, "mirrors.mirror.url", mirror.getUrl(), mirror.getId() );
+
+                validateStringNotEmpty( problems, "mirrors.mirror.mirrorOf", mirror.getMirrorOf(), mirror.getId() );
+            }
+        }
+
-            for ( Profile prof : profiles )
+            for ( Profile profile : profiles )
-                validateRepositories( problems, prof.getRepositories(), "repositories.repository" );
-                validateRepositories( problems, prof.getPluginRepositories(), "pluginRepositories.pluginRepository" );
+                validateRepositories( problems, profile.getRepositories(), "repositories.repository" );
+                validateRepositories( problems, profile.getPluginRepositories(), "pluginRepositories.pluginRepository" );
-            validateStringNotEmpty( problems, prefix + ".id", repository.getId() );
+            validateStringNotEmpty( problems, prefix + ".id", repository.getId(), repository.getUrl() );
-            validateStringNotEmpty( problems, prefix + ".url", repository.getUrl() );
+            validateStringNotEmpty( problems, prefix + ".url", repository.getUrl(), repository.getId() );
+
+            if ( "legacy".equals( repository.getLayout() ) )
+            {
+                addWarn( problems, "'" + prefix + ".layout' for " + repository.getId()
+                    + " uses the deprecated value 'legacy'." );
+            }
-    private boolean validateStringNotEmpty( SettingsProblemCollector problems, String fieldName, String string )
-    {
-        return validateStringNotEmpty( problems, fieldName, string, null );
-    }
-
+    private void addWarn( SettingsProblemCollector problems, String msg )
+    {
+        problems.add( SettingsProblem.Severity.WARNING, msg, -1, -1, null );
+    }
+

INS26 INS26 INS26 MOV31 INS40 INS40 INS40 INS23 INS83 INS83 INS83 INS43 INS59 UPD39 UPD42 INS42 INS42 INS45 INS25 INS60 INS25 INS60 INS25 INS60 INS25 UPD42 INS21 INS32 INS8 INS74 INS59 INS27 INS8 INS74 INS59 INS27 INS8 INS74 INS59 INS27 INS8 INS32 INS42 INS42 INS21 INS43 INS43 INS42 INS32 INS42 INS33 INS24 INS43 INS43 INS42 INS32 INS42 INS33 INS24 INS43 INS43 INS42 INS32 INS42 INS33 INS70 INS25 MOV42 UPD42 MOV42 INS40 UPD42 MOV42 INS38 INS38 MOV33 INS32 INS42 INS42 INS42 INS42 INS58 INS27 INS37 INS8 INS42 INS42 INS42 INS42 INS58 INS27 INS37 INS8 INS42 INS42 INS42 INS42 INS44 INS42 INS8 INS32 INS8 INS34 INS34 INS42 INS42 INS45 INS39 INS59 INS42 INS32 INS42 INS60 INS25 INS39 INS59 INS42 INS32 INS42 INS60 INS21 INS43 INS42 INS21 INS21 INS21 UPD42 INS32 INS32 INS45 INS42 INS32 INS21 INS42 INS34 INS42 INS42 MOV43 INS59 INS32 INS8 INS25 INS42 INS34 INS42 INS42 INS43 INS59 INS32 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS21 INS38 INS8 INS42 INS42 INS32 INS42 INS42 INS27 INS32 INS33 INS42 INS42 INS45 INS32 INS32 INS42 INS42 INS45 INS32 INS32 INS42 INS42 INS45 INS32 INS32 INS42 INS42 INS27 INS32 INS42 INS32 INS32 INS21 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS45 INS42 INS45 INS32 INS45 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS45 INS42 INS42 INS27 INS45 INS42 INS45 INS42 DEL42 DEL44 DEL42 DEL32 DEL41