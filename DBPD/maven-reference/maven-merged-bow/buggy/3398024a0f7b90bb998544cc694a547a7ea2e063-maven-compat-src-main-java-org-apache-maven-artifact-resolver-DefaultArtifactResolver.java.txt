o delegating local repository implementation that chains the reactor and user local repository
o removal of more state from the WagonManager and pushing it into the request in an attempt to bridge the way for Mercury



git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@773456 13f79535-47bb-0310-9956-ffa450edef68

-
-    private boolean online = true;
-
-    // ----------------------------------------------------------------------
-    // Components
-    // ----------------------------------------------------------------------
-
-    //@Requirement 
-    private ArtifactMetadataSource metadataSource;
-    
-    // ----------------------------------------------------------------------
-    // Implementation
-    // ----------------------------------------------------------------------
-
-    public void setOnline( boolean online )
-    {
-        this.online = online;
-    }
-
-    public boolean isOnline()
-    {
-        return online;
-    }
-
+        
+            
+            return;
-        else if ( !artifact.isResolved() )
+        
+        if ( !artifact.isResolved() )
-            String localPath = localRepository.pathOf( artifact );
+            artifact = localRepository.find( artifact );
+            
+            if ( artifact.isFromAuthoritativeRepository() )
+            {
+                return;
+            }
+            
+            if ( artifact.isSnapshot() && artifact.isResolved() )
+            {
+                return;
+            }
+            
+            //String localPath = localRepository.pathOf( artifact );
-            artifact.setFile( new File( localRepository.getBasedir(), localPath ) );
+            //artifact.setFile( new File( localRepository.getBasedir(), localPath ) );
-            // TODO: Should it matter whether it's a locally installed snapshot??
-            if ( force || !destination.exists() || ( artifact.isSnapshot() && !localCopy && isOnline() ) )
+            if ( force || !destination.exists() || ( artifact.isSnapshot() && !localCopy ) )
-                if ( !isOnline() )
-                {
-                    throw new ArtifactResolutionException( "The repository system is offline and the artifact "
-                        + artifact + " is not available in the local repository.", artifact );
-                }
-
-                // locally resolved...no need to hit the remote repo.
-
+                                        
+            // 1.0-SNAPSHOT
+            //
+            // 1)         pom = 1.0-SoNAPSHOT
+            // 2)         pom = 1.0-yyyymmdd.hhmmss
+            // 3) baseVersion = 1.0-SNAPSHOT
+                // 1.0-SNAPSHOT
+                // Make a file with a 1.0-SNAPSHOT format
-
+                
+                // if the timestamped version was resolved or the copy doesn't exist then copy a version
+                // of the file like 1.0-SNAPSHOT. Even if there is a timestamped version the non-timestamped
+                // version will be created.
+                // We are only going to use the 1.0-SNAPSHOT version
+                // Set the version to the 1.0-SNAPSHOT version
-
+        
-                Set<Artifact> directArtifacts =
-                    source.retrieve( rootArtifact, localRepository, remoteRepositories ).getArtifacts();
+                Set<Artifact> directArtifacts = source.retrieve( rootArtifact, localRepository, remoteRepositories ).getArtifacts();
-        result = artifactCollector.collect( artifacts, rootArtifact, managedVersions, localRepository, remoteRepositories, source, filter, listeners );
+        result = artifactCollector.collect( artifacts, rootArtifact, managedVersions, localRepository, remoteRepositories, source, filter, listeners, null );

MOV25 INS41 INS21 INS25 INS25 INS7 INS32 INS8 INS27 INS8 INS33 INS42 INS32 MOV42 UPD42 MOV42 INS41 INS32 INS32 INS41 MOV42 UPD42 MOV42 MOV42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL32 DEL42 DEL14 DEL32 DEL21 DEL42 DEL32 DEL42 DEL32 DEL38 DEL42 DEL43 DEL45 DEL42 DEL45 DEL27 DEL42 DEL14 DEL53 DEL8 DEL25