o Refactored the MavenSettings code into the settings.mdo/Settings class.

o Added code to cache the active proxy and profile inside the Settings instance for quicker lookup.

o Added a method to initialize a new active profile for a Settings instance in the event one didn't exist.

o Started adding offline mode. So far, I've implemented:

  - Warning when a mojo declares a requirement for connectivity, but we're offline.

  - INFO message stating when maven is running in offline mode.

  - Addition to the Profile class in o.a.m.settings package to allow specification of offline mode by declaring: <offline>true</offline>


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163969 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.settings.MavenSettings;
+import org.apache.maven.settings.Settings;
+    
+    protected WagonManager wagonManager;
+        
+        if( request.getSettings().getActiveProfile().isOffline() )
+        {
+            getLogger().info( "Maven is running in offline mode." );
+        }
+        
+     * 
+     * @todo [JC] we should at least provide a mapping of protocol-to-proxy for
+     * the wagons, shouldn't we?
-        MavenSettings settings = request.getSettings();
+        Settings settings = request.getSettings();

UPD40 INS23 INS83 INS43 INS59 INS42 INS42 INS25 INS65 INS32 INS8 INS66 INS66 UPD43 INS32 INS42 INS21 UPD42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS45 INS42