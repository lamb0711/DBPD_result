PR: MNG-435

add a <artifact:setProperty property|ref="..." expression="project.*" pomRefId="..." /> tag for exposing the pom as variables



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@189505 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.settings.Mirror;
-import org.apache.maven.settings.Mirror;
+import org.apache.maven.project.MavenProjectBuilder;
-    private Embedder embedder;
-
-    protected ArtifactRepository createLocalArtifactRepository( LocalRepository repository )
+    private Embedder embedder;
+
+    private Pom pom;
+
+    private String pomRefId;
+
+    private LocalRepository localRepository;
+
+    protected ArtifactRepository createLocalArtifactRepository()
+        if ( localRepository == null )
+        {
+            localRepository = getDefaultLocalRepository();
+        }
+
-                                                                                       repository.getLayout() );
+                                                                                       localRepository.getLayout() );
-        manager.setLocalRepository( repository.getLocation() );
+        manager.setLocalRepository( localRepository.getLocation() );
-        return new ArtifactRepository( "local", "file://" + repository.getLocation(), repositoryLayout );
+        return new ArtifactRepository( "local", "file://" + localRepository.getLocation(), repositoryLayout );
-    protected Object lookup( String role )
-    {
-        try
-        {
-            return getEmbedder().lookup( role );
-        }
-        catch ( ComponentLookupException e )
-        {
-            throw new BuildException( "Unable to find component: " + role, e );
-        }
-    }
-
-    private Object lookup( String role, String roleHint )
-    {
-        try
-        {
-            return getEmbedder().lookup( role, roleHint );
-        }
-        catch ( ComponentLookupException e )
-        {
-            throw new BuildException( "Unable to find component: " + role + "[" + roleHint + "]", e );
-        }
-    }
-
-    private synchronized Embedder getEmbedder()
-    {
-        if ( embedder == null )
-        {
-            embedder = (Embedder) getProject().getReference( Embedder.class.getName() );
-
-            if ( embedder == null )
-            {
-                embedder = new Embedder();
-                try
-                {
-                    embedder.start();
-                }
-                catch ( PlexusContainerException e )
-                {
-                    throw new BuildException( "Unable to start embedder", e );
-                }
-                getProject().addReference( Embedder.class.getName(), embedder );
-            }
-        }
-        return embedder;
-    }
-
+
+    protected Object lookup( String role )
+    {
+        try
+        {
+            return getEmbedder().lookup( role );
+        }
+        catch ( ComponentLookupException e )
+        {
+            throw new BuildException( "Unable to find component: " + role, e );
+        }
+    }
+
+    protected Object lookup( String role, String roleHint )
+    {
+        try
+        {
+            return getEmbedder().lookup( role, roleHint );
+        }
+        catch ( ComponentLookupException e )
+        {
+            throw new BuildException( "Unable to find component: " + role + "[" + roleHint + "]", e );
+        }
+    }
+
+    private synchronized Embedder getEmbedder()
+    {
+        if ( embedder == null )
+        {
+            embedder = (Embedder) getProject().getReference( Embedder.class.getName() );
+
+            if ( embedder == null )
+            {
+                embedder = new Embedder();
+                try
+                {
+                    embedder.start();
+                }
+                catch ( PlexusContainerException e )
+                {
+                    throw new BuildException( "Unable to start embedder", e );
+                }
+                getProject().addReference( Embedder.class.getName(), embedder );
+            }
+        }
+        return embedder;
+    }
+
+    public Pom buildPom( MavenProjectBuilder projectBuilder, ArtifactRepository localArtifactRepository )
+    {
+        if ( pomRefId != null && pom != null )
+        {
+            throw new BuildException( "You cannot specify both a POM element and a pomrefid element" );
+        }
+
+        Pom pom = this.pom;
+        if ( pomRefId != null )
+        {
+            pom = (Pom) getProject().getReference( pomRefId );
+            if ( pom == null )
+            {
+                throw new BuildException( "Reference '" + pomRefId + "' was not found." );
+            }
+        }
+
+        if ( pom != null )
+        {
+            pom.initialise( projectBuilder, localArtifactRepository );
+        }
+        return pom;
+    }
+
+    public void addPom( Pom pom )
+    {
+        this.pom = pom;
+    }
+
+    public String getPomRefId()
+    {
+        return pomRefId;
+    }
+
+    public void setPomRefId( String pomRefId )
+    {
+        this.pomRefId = pomRefId;
+    }
+
+    public LocalRepository getLocalRepository()
+    {
+        return localRepository;
+    }
+
+    public void addLocalRepository( LocalRepository localRepository )
+    {
+        this.localRepository = localRepository;
+    }

MOV26 INS26 MOV23 MOV31 MOV31 MOV31 INS40 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 UPD83 INS83 INS43 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 MOV44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS25 INS42 INS43 INS42 INS43 INS42 INS25 INS60 INS25 INS25 INS41 INS43 INS42 INS21 INS42 INS41 INS43 INS42 INS21 INS42 INS41 UPD42 INS21 INS27 INS8 MOV43 INS42 INS42 INS27 INS8 INS43 INS59 INS27 INS8 INS27 INS8 INS42 INS42 INS7 INS42 INS42 INS7 INS42 INS7 INS42 INS33 INS21 INS27 INS27 INS53 INS42 INS42 INS22 INS42 INS33 INS21 INS25 INS42 INS33 INS21 INS22 INS42 INS22 INS42 INS22 INS42 INS7 MOV43 UPD42 INS42 INS33 INS42 INS33 INS14 INS52 INS42 INS7 INS27 INS8 INS32 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS32 UPD42 INS43 INS45 INS42 INS11 INS42 INS33 INS53 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS43 INS32 INS14 INS42 INS32 INS42 INS42 INS43 INS27 INS42 INS42 INS45 INS42 INS45