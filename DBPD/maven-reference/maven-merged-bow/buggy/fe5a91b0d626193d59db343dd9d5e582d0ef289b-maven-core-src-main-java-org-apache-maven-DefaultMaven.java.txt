Working on: MNG-483

Fixing profile application to separate profiles discovered in and around POM from those in settings.xml, and apply them separately in the order: 

for-each-project-in-inheritance:{POM, profiles.xml}, settings.xml

Added common interface for accumulating, explicitly activating and deactivating, and retrieving profiles to be applied to a given project. This manager interface (ProfileManager) is general enough to be applicable to both the project-level and settings-level profiles.

Added 'performRelease'-keyed profile to super-POM which will be used by the release plugin and anyone using a parallel process, and which will enable '-DupdateReleaseInfo=true' for the deploy mojo, along with enabling the source attachment for the project.

Added 'attach' parameter to JarSourceMojo to allow local POM to turn off source attachments, overriding release profile in super-pom.

Updated the release:perform mojo to use '-DperformRelease=true' for switching on the new release profile, rather than just using '-DupdateReleaseInfo=true'...



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@233013 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.profiles.AlwaysOnActivation;
-import org.apache.maven.profiles.MavenProfilesBuilder;
-import org.apache.maven.profiles.ProfilesConversionUtils;
-import org.apache.maven.profiles.ProfilesRoot;
+import org.apache.maven.profiles.ProfileManager;
+import org.apache.maven.profiles.activation.ProfileActivationException;
-import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
-
+    
-    protected MavenProfilesBuilder profilesBuilder;
-
+        ProfileManager globalProfileManager = request.getGlobalProfileManager();
+        
+            loadSettingsProfiles( globalProfileManager, request.getSettings() );
+
-                                        request.getSettings() );
+                                        request.getSettings(), globalProfileManager );
-                List externalProfiles = getActiveExternalProfiles( null, request.getSettings() );
-
-                MavenProject superProject = projectBuilder.buildStandaloneSuperProject( request.getLocalRepository(),
-                                                                              externalProfiles );
+                MavenProject superProject = projectBuilder.buildStandaloneSuperProject( request.getLocalRepository() );
+        catch ( ProfileActivationException e )
+        {
+            return dispatchErrorResponse( dispatcher, event, request.getBaseDirectory(), e );
+        }
-    private List collectProjects( List files, ArtifactRepository localRepository, boolean recursive, Settings settings )
-        throws ProjectBuildingException, ReactorException, IOException, ArtifactResolutionException
+    private List collectProjects( List files, ArtifactRepository localRepository, boolean recursive, Settings settings,
+                                 ProfileManager globalProfileManager )
+        throws ProjectBuildingException, ReactorException, IOException, ArtifactResolutionException, ProfileActivationException
-            MavenProject project = getProject( file, localRepository, settings );
+            MavenProject project = getProject( file, localRepository, settings, globalProfileManager );
-                List collectedProjects = collectProjects( moduleFiles, localRepository, recursive, settings );
+                List collectedProjects = collectProjects( moduleFiles, localRepository, recursive, settings, globalProfileManager );
-    public MavenProject getProject( File pom, ArtifactRepository localRepository, Settings settings )
-        throws ProjectBuildingException, ArtifactResolutionException
+    public MavenProject getProject( File pom, ArtifactRepository localRepository, Settings settings,
+                                   ProfileManager globalProfileManager )
+        throws ProjectBuildingException, ArtifactResolutionException, ProfileActivationException
-        List externalProfiles = getActiveExternalProfiles( pom, settings );
-
-        return projectBuilder.build( pom, localRepository, externalProfiles );
+        return projectBuilder.build( pom, localRepository, globalProfileManager );
-    private List getActiveExternalProfiles( File pom, Settings settings )
-        throws ProjectBuildingException
+    private void loadSettingsProfiles( ProfileManager profileManager, Settings settings )
-        // TODO: apply profiles.xml and settings.xml Profiles here.
-        List externalProfiles = new ArrayList();
-
+            
+            profileManager.explicitlyActivate( settingsActiveProfileIds );
-                if ( settingsActiveProfileIds.contains( rawProfile.getId() ) )
-                {
-                    profile.setActivation( new AlwaysOnActivation() );
-                }
-
-                externalProfiles.add( profile );
+                profileManager.addProfile( profile );
-
-        if ( pom != null )
-        {
-            try
-            {
-                ProfilesRoot root = profilesBuilder.buildProfiles( pom.getParentFile() );
-
-                if ( root != null )
-                {
-                    for ( Iterator it = root.getProfiles().iterator(); it.hasNext(); )
-                    {
-                        org.apache.maven.profiles.Profile rawProfile = (org.apache.maven.profiles.Profile) it.next();
-
-                        externalProfiles.add( ProfilesConversionUtils.convertFromProfileXmlProfile( rawProfile ) );
-                    }
-                }
-            }
-            catch ( IOException e )
-            {
-                throw new ProjectBuildingException( "Cannot read profiles.xml resource for pom: " + pom, e );
-            }
-            catch ( XmlPullParserException e )
-            {
-                throw new ProjectBuildingException( "Cannot parse profiles.xml resource for pom: " + pom, e );
-            }
-        }
-
-        return externalProfiles;
+        
-
+    

UPD40 UPD40 INS44 INS43 INS44 INS43 INS39 UPD42 INS60 INS43 INS42 INS42 INS43 INS42 INS42 UPD43 UPD42 INS43 INS59 INS12 INS42 INS42 UPD42 INS42 INS42 INS32 INS21 INS44 INS8 UPD42 INS21 INS42 INS42 MOV32 INS43 INS42 INS41 INS32 UPD42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 UPD42 UPD42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL33 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL43 DEL14 DEL32 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL25 DEL42 DEL41