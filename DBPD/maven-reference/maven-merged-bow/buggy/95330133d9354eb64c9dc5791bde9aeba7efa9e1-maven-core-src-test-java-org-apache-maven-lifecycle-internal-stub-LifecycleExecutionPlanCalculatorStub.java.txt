[MNG-4633] Fixed weave mode bug when building m3 itself in weave mode.

Updated testcase for MEP.

Also removed all unused/unecessar code from weave mode.

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@934201 13f79535-47bb-0310-9956-ffa450edef68

+    // clean
+    public final static MojoDescriptor PRE_CLEAN = createMojoDescriptor( "pre-clean" );
+    public final static MojoDescriptor POST_CLEAN = createMojoDescriptor( "post-clean" );
+    // default (or at least some of them)
+    public final static MojoDescriptor INITIALIZE = createMojoDescriptor( "initialize" );
+    
+
+    // site
+    public final static MojoDescriptor PRE_SITE = createMojoDescriptor( "pre-site" );
+    public final static MojoDescriptor SITE = createMojoDescriptor( "site" );
+    public final static MojoDescriptor POST_SITE = createMojoDescriptor( "post-site" );
+    public final static MojoDescriptor SITE_DEPLOY = createMojoDescriptor( "site-deploy" );
+
+
+
-        return new MavenExecutionPlan( getScopes(), getScopes(),
-                                       DefaultLifecyclesStub.createDefaultLifeCycles().createExecutionPlanItem( project,
-                                                                                                                me ) );
+        return createExecutionPlan( project, me );
-        me.add( createMojoExecution( new Plugin(), "enforce", "enforce-versions", VALIDATE ) );
+        me.add( createMojoExecution( new Plugin(), "initialize", "default-initialize", INITIALIZE ) ); 
-        final List<ExecutionPlanItem> executionPlanItem =
-            DefaultLifecyclesStub.createDefaultLifeCycles().createExecutionPlanItem(
-                ProjectDependencyGraphStub.A.getExecutionProject(), me );
-        return new MavenExecutionPlan( getScopes(), getScopes(), executionPlanItem );
+        return createExecutionPlan( ProjectDependencyGraphStub.A.getExecutionProject(), me );
+
-        final List<ExecutionPlanItem> planItem =
-            DefaultLifecyclesStub.createDefaultLifeCycles().createExecutionPlanItem(
-                ProjectDependencyGraphStub.B.getExecutionProject(), me );
-        return new MavenExecutionPlan( getScopes(), getScopes(), planItem );
+        return createExecutionPlan( ProjectDependencyGraphStub.B.getExecutionProject(), me );
+    }
+
+
+    private static MavenExecutionPlan createExecutionPlan( MavenProject project, List<MojoExecution> mojoExecutions )
+        throws InvalidPluginDescriptorException, PluginVersionResolutionException, PluginDescriptorParsingException,
+        NoPluginFoundForPrefixException, MojoNotFoundException, PluginNotFoundException, PluginResolutionException,
+        LifecyclePhaseNotFoundException, LifecycleNotFoundException
+    {
+        final List<ExecutionPlanItem> planItemList =
+            DefaultLifecyclesStub.createDefaultLifeCycles().createExecutionPlanItem( project, mojoExecutions );
+        return new MavenExecutionPlan( getScopes(), getScopes(), planItemList,
+                                       DefaultLifecyclesStub.createDefaultLifeCycles() );

INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 MOV43 INS42 INS44 INS44 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS41 INS43 INS42 INS74 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV60 MOV41 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS32 MOV32 MOV32 INS42 INS43 INS43 UPD42 MOV42 MOV42 MOV42 UPD42 UPD42 INS42 INS42 UPD42 INS32 UPD42 MOV32 UPD45 UPD45 UPD42 MOV32 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL14 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL59 DEL60 DEL42 DEL32 DEL42 DEL32 DEL42 DEL14