[MNG-5014] [regression] MavenProject.getParent().isExecutionRoot() not properly set

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1070242 13f79535-47bb-0310-9956-ffa450edef68

-                initProject( project, result, new HashMap<File, Boolean>() );
+                initProject( project, Collections.<String, MavenProject> emptyMap(), result,
+                             new HashMap<File, Boolean>() );
+        Map<String, MavenProject> projectIndex = new HashMap<String, MavenProject>( 256 );
+
-            build( results, interimResults, pomFiles, new LinkedHashSet<File>(), true, recursive, config, modelPool,
-                   modelCache );
+            build( results, interimResults, projectIndex, pomFiles, new LinkedHashSet<File>(), true, recursive, config,
+                   modelPool, modelCache );
-                build( results, new ArrayList<MavenProject>(), interimResults, config, new HashMap<File, Boolean>() )
-                    && noErrors;
+                build( results, new ArrayList<MavenProject>(), projectIndex, interimResults, config,
+                       new HashMap<File, Boolean>() ) && noErrors;
-                           List<File> pomFiles, Set<File> aggregatorFiles, boolean isRoot, boolean recursive,
-                           ProjectBuildingRequest config, ReactorModelPool reactorModelPool,
-                           ReactorModelCache modelCache )
+                           Map<String, MavenProject> projectIndex, List<File> pomFiles, Set<File> aggregatorFiles,
+                           boolean isRoot, boolean recursive, ProjectBuildingRequest config,
+                           ReactorModelPool reactorModelPool, ReactorModelCache modelCache )
-            if ( !build( results, interimResults, pomFile, aggregatorFiles, isRoot, recursive, config,
+            if ( !build( results, interimResults, projectIndex, pomFile, aggregatorFiles, isRoot, recursive, config,
-    private boolean build( List<ProjectBuildingResult> results, List<InterimResult> interimResults, File pomFile,
-                           Set<File> aggregatorFiles, boolean isRoot, boolean recursive, ProjectBuildingRequest config,
+    private boolean build( List<ProjectBuildingResult> results, List<InterimResult> interimResults,
+                           Map<String, MavenProject> projectIndex, File pomFile, Set<File> aggregatorFiles,
+                           boolean isRoot, boolean recursive, ProjectBuildingRequest config,
+            projectIndex.put( result.getModelIds().get( 0 ), project );
+
-                if ( !build( results, interimResult.modules, moduleFiles, aggregatorFiles, false, recursive, config,
-                             reactorModelPool, modelCache ) )
+                if ( !build( results, interimResult.modules, projectIndex, moduleFiles, aggregatorFiles, false,
+                             recursive, config, reactorModelPool, modelCache ) )
-                           List<InterimResult> interimResults, ProjectBuildingRequest config, Map<File, Boolean> profilesXmls )
+                           Map<String, MavenProject> projectIndex, List<InterimResult> interimResults,
+                           ProjectBuildingRequest config, Map<File, Boolean> profilesXmls )
-                initProject( project, result, profilesXmls );
+                initProject( project, projectIndex, result, profilesXmls );
-                noErrors = build( results, modules, interimResult.modules, config, profilesXmls ) && noErrors;
+                noErrors =
+                    build( results, modules, projectIndex, interimResult.modules, config, profilesXmls ) && noErrors;
-    private void initProject( MavenProject project, ModelBuildingResult result, Map<File, Boolean> profilesXmls )
+    private void initProject( MavenProject project, Map<String, MavenProject> projects, ModelBuildingResult result,
+                              Map<File, Boolean> profilesXmls )
+        project.setParent( projects.get( result.getModelIds().get( 1 ) ) );
+

INS44 INS44 INS44 INS44 INS60 INS74 INS42 INS74 INS42 INS74 INS42 INS74 INS42 INS21 INS74 INS59 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS32 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS74 INS34 INS42 INS32 INS42 INS42 INS32 INS43 INS43 INS43 INS42 INS42 INS32 INS42 INS32 INS42 INS34 INS42 INS42 INS42 INS42 INS32 INS42 INS34 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS42