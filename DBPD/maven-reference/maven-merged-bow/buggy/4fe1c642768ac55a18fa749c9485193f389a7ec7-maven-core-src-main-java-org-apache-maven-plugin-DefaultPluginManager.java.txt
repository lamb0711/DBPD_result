clean up exception handling


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163978 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.ArtifactEnabledContainerException;
+import org.codehaus.plexus.component.repository.exception.ComponentLifecycleException;
+    private ArtifactFactory artifactFactory;
+
-    // TODO: don't throw Exception
-        throws Exception
+        throws PluginNotFoundException, PluginManagerException
-    // TODO: don't throw Exception
-        throws Exception
+        throws PluginNotFoundException, PluginManagerException
-            ArtifactFactory artifactFactory = null;
+            MavenProject project = session.getProject();
+
+            org.apache.maven.model.Plugin pluginConfig = null;
+
+            for ( Iterator it = project.getPlugins().iterator(); it.hasNext(); )
+            {
+                org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) it.next();
+
+                if ( groupId.equals( plugin.getGroupId() ) && artifactId.equals( plugin.getArtifactId() ) )
+                {
+                    pluginConfig = plugin;
+
+                    break;
+                }
+            }
+
+            String version = null;
+
+            if ( pluginConfig != null )
+            {
+                if ( StringUtils.isEmpty( pluginConfig.getVersion() ) )
+                {
+                    // The model/project builder should have validated this already
+                    String message = "The maven plugin with groupId: '" + groupId + "' and artifactId: '" + artifactId +
+                        "' which was configured for use in this project does not have a version associated with it.";
+                    throw new IllegalStateException( message );
+                }
+                else
+                {
+                    version = pluginConfig.getVersion();
+                }
+            }
+
-                MavenProject project = session.getProject();
-
-                org.apache.maven.model.Plugin pluginConfig = null;
-
-                for ( Iterator it = project.getPlugins().iterator(); it.hasNext(); )
-                {
-                    org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) it.next();
-
-                    if ( groupId.equals( plugin.getGroupId() ) && artifactId.equals( plugin.getArtifactId() ) )
-                    {
-                        pluginConfig = plugin;
-
-                        break;
-                    }
-                }
-
-                String version = null;
-
-                if ( pluginConfig != null )
-                {
-                    if ( StringUtils.isEmpty( pluginConfig.getVersion() ) )
-                    {
-                        throw new PluginVersionNotConfiguredException( groupId, artifactId );
-                    }
-                    else
-                    {
-                        version = pluginConfig.getVersion();
-                    }
-                }
-
-                // TODO: Default over to a sensible value (is 1.0-SNAPSHOT right?) Hardcoging of group ID also
-                if ( StringUtils.isEmpty( version ) )
-                {
-                    version = "1.0-SNAPSHOT";
-                }
-
-                artifactFactory = (ArtifactFactory) container.lookup( ArtifactFactory.ROLE );
-
+            catch ( ArtifactEnabledContainerException e )
+            {
+                throw new PluginManagerException( "Error occurred in the artifact container attempting to download plugin " +
+                                                  groupId + ":" + artifactId, e );
+            }
+            catch ( ArtifactResolutionException e )
+            {
+                throw new PluginNotFoundException( groupId, artifactId, version, e );
+            }
+            catch ( ComponentLookupException e )
+            {
+                throw new PluginManagerException( "Internal configuration error while retrieving " + groupId + ":" + artifactId, e );
+            }
-                    container.release( artifactFactory );
+                    try
+                    {
+                        container.release( artifactFactory );
+                    }
+                    catch ( ComponentLifecycleException e )
+                    {
+                        getLogger().error( "Error releasing component - ignoring", e );
+                    }
-    // TODO: don't throw Exception
-        throws Exception
+        throws ArtifactEnabledContainerException, ArtifactResolutionException, ComponentLookupException
-            // TODO: watch out for the exceptions being thrown
-                container.release( artifactResolver );
+                try
+                {
+                    container.release( artifactResolver );
+                }
+                catch ( ComponentLifecycleException e )
+                {
+                    getLogger().error( "Error releasing component - ignoring", e );
+                }
-                container.release( mavenProjectBuilder );
+                try
+                {
+                    container.release( mavenProjectBuilder );
+                }
+                catch ( ComponentLifecycleException e )
+                {
+                    getLogger().error( "Error releasing component - ignoring", e );
+                }
-        throws PluginExecutionException
+        throws PluginExecutionException, PluginNotFoundException
-                    Map map = getPluginConfigurationFromExpressions( mojoDescriptor, configuration, session,
+                    Map map = getPluginConfigurationFromExpressions( mojoDescriptor, configuration,
-                    Map map = getPluginConfigurationFromExpressions( mojoDescriptor, configuration, session,
+                    Map map = getPluginConfigurationFromExpressions( mojoDescriptor, configuration,
-                                                       MavenSession session, ExpressionEvaluator expressionEvaluator )
+                                                       ExpressionEvaluator expressionEvaluator )
-        
+

INS26 INS26 INS40 INS40 INS23 INS83 MOV43 INS59 INS43 UPD43 INS43 UPD43 MOV8 INS43 INS43 UPD43 INS43 INS42 INS42 UPD42 INS42 UPD42 MOV25 INS42 INS42 UPD42 INS42 MOV38 MOV8 INS54 INS8 INS12 INS12 INS12 INS8 INS8 INS8 MOV60 MOV21 INS44 INS8 INS44 INS8 INS44 INS8 INS25 INS54 INS54 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 MOV27 INS8 MOV8 INS12 MOV8 INS12 INS60 INS53 INS42 INS14 INS42 INS14 INS42 INS14 INS54 INS44 INS8 INS44 INS8 INS43 INS59 INS14 INS43 INS27 INS42 INS43 INS42 INS42 INS42 INS42 INS43 INS27 INS42 MOV8 INS12 INS43 INS42 INS21 INS43 INS42 INS21 MOV43 MOV43 UPD42 MOV42 INS42 INS27 INS43 INS42 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS44 INS8 INS42 INS32 INS42 INS32 INS45 INS42 INS45 INS42 INS45 INS42 INS43 INS42 INS21 INS32 INS42 INS45 INS42 INS32 INS42 INS45 INS42 UPD42 MOV42 INS32 INS42 INS42 INS32 UPD42 MOV42 INS45 INS42 UPD42 MOV42 DEL43 DEL42 DEL42 DEL14 DEL53 DEL42 DEL42 DEL42 DEL32 DEL42 DEL45 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL40 DEL32 DEL11 DEL7 DEL21 DEL42 DEL33 DEL59 DEL60 DEL8 DEL54 DEL25 DEL8 DEL42 DEL42 DEL42 DEL43 DEL42 DEL44