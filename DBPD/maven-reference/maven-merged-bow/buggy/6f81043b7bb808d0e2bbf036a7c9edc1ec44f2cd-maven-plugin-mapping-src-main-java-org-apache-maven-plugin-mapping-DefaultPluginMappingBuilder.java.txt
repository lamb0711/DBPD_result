Centralized repository handling in AbstractVersionTransformation, for consistency (should fix MNG-527).

Changed download strategy for plugins.xml metadata to download only when non-existent locally or when plugin prefix cannot be located within local metadata. NOTE: This could lead to local-only installs of plugins having their prefix mappings overwritten.

Next step is to change the maven-plugin-plugin.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219615 13f79535-47bb-0310-9956-ffa450edef68

-        List pluginGroupIds = new ArrayList( groupIds );
+        return loadPluginMappings( groupIds, pluginRepositories, localRepository, new PluginMappingManager() );
+    }
+
+    public PluginMappingManager refreshPluginMappingManager( PluginMappingManager mappingManager, List pluginRepositories,
+                                                             ArtifactRepository localRepository )
+        throws RepositoryMetadataManagementException, PluginMappingManagementException
+    {
+        // prevent performance drag from abuse of this method.
+        if ( mappingManager.isRefreshed() )
+        {
+            throw new PluginMappingManagementException( "Plugin-mappings have already been refreshed. Cannot re-refresh." );
+        }
+        getLogger().info( "Refreshing plugin-mapping metadata..." );
+        
+        List groupIds = new ArrayList();
+        
+        for ( Iterator it = mappingManager.getPluginMaps().iterator(); it.hasNext(); )
+        {
+            PluginMap map = (PluginMap) it.next();
+            
+            String groupId = map.getGroupId();
+            
+            groupIds.add( groupId );
+            
+            repositoryMetadataManager.purgeLocalCopy( new PluginMappingMetadata( groupId ), localRepository );
+        }
+        
+        mappingManager.markRefreshed();
+        
+        return loadPluginMappings(groupIds, pluginRepositories, localRepository, mappingManager);
+    }
+
+    private PluginMappingManager loadPluginMappings( List groupIds, List pluginRepositories,
+                                                    ArtifactRepository localRepository,
+                                                    PluginMappingManager mappingManager )
+        throws RepositoryMetadataManagementException, PluginMappingManagementException
+    {
+        List pluginGroupIds = new ArrayList( groupIds );
+
-        
-        PluginMappingManager mappingManager = new PluginMappingManager();
-                    getLogger().warn( "Cannot resolve plugin-mapping metadata for groupId: " + groupId + " - IGNORING." );
-                    
+                    getLogger()
+                        .warn( "Cannot resolve plugin-mapping metadata for groupId: " + groupId + " - IGNORING." );
+
-    private PluginMap readPluginMap( File mappingFile ) throws PluginMappingManagementException
+    private PluginMap readPluginMap( File mappingFile )
+        throws PluginMappingManagementException
-        if( mappingFile.exists() )
+        if ( mappingFile.exists() )
-                
-                return mappingReader.read(fileReader);
+
+                return mappingReader.read( fileReader );
-                
+

INS31 INS31 INS83 MOV43 INS42 INS44 INS44 INS44 INS43 INS43 INS8 INS83 INS43 INS42 INS44 INS44 INS44 INS43 INS43 INS8 UPD83 INS44 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS41 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS25 INS21 INS60 INS24 INS21 INS41 INS43 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS8 INS32 INS43 INS59 INS58 INS32 INS8 INS32 INS32 INS42 INS42 INS42 INS42 INS42 MOV14 INS42 INS42 INS53 INS32 INS42 INS45 INS42 INS42 INS14 INS43 INS59 INS42 INS42 INS60 INS60 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS43 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS32 INS32 INS43 INS45 INS42 INS32 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 DEL42 DEL59 DEL60