MNG-5214: Dependency resolution substitutes g:a:v:jar for j:a:v:something-else when something-else isn't in the reactor
o rework to takine MNG-4065 back on board. We need to allow test-jar and jar to dosi-do even if we can't be having with
wsdl and jar changing places.


git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1212720 13f79535-47bb-0310-9956-ffa450edef68

+     * 
+     * Note that this 
-                if ( requestedArtifact.getProperty ( "type", "" ).equals( attachedArtifact.getType() )
-                     && classifierComparison ( requestedArtifact.getClassifier(), attachedArtifact.getClassifier() )                                
-                     && requestedRepositoryConflictId.equals( getConflictId( attachedArtifact ) ) )
+                /*
+                 * Don't use the conflict ids, use a customized comparison that takes various ideas into account.
+                 */
+                if ( attachedArtifactComparison ( requestedArtifact, attachedArtifact ) )
-    private boolean classifierComparison ( String c1, String c2 )
+    /**
+     * Try to satisfy both MNG-4065 and MNG-5214. Consider jar and test-jar equivalent.
+     * @param requestedType
+     * @param artifactType
+     * @return
+     */
+    private boolean attachedArtifactComparison ( Artifact requestedArtifact, org.apache.maven.artifact.Artifact attachedArtifact )
-        return c1 == null && c2 == null
-                        || ((c1 != null) && c1.equals(c2));
+        if ( ! requestedArtifact.getGroupId().equals ( attachedArtifact.getGroupId() ) ) 
+        { 
+            return false;
+        }
+        if ( ! requestedArtifact.getArtifactId().equals ( attachedArtifact.getArtifactId() ) ) 
+        { 
+            return false;
+        }
+        String requestedExtension = requestedArtifact.getExtension();
+        String attachedExtension = null;
+        if ( attachedArtifact.getArtifactHandler() != null ) 
+            {
+                attachedExtension = attachedArtifact.getArtifactHandler().getExtension();
+            }
+        String requestedType = requestedArtifact.getProperty ( "type", "" );
+        String attachedType = attachedArtifact.getType();
+        boolean typeOk = false;
+        
+        if ( requestedExtension.equals ( attachedExtension ) )
+        {
+            // the ideal case.
+            typeOk = true;
+        }
+        else if ( requestedType.equals( attachedType ) )
+        {
+            typeOk = true;
+        }
+        else if ( "test-jar".equals ( requestedType ) && "jar".equals( attachedType ) )
+        {
+            typeOk = true;
+        }
+        else if ( "jar".equals ( requestedType ) && "test-jar".equals( attachedType ) )
+        {
+            typeOk = true;
+        }
+        
+        if ( !typeOk )
+        {
+            return false;
+        }
+        return requestedArtifact.getClassifier().equals ( attachedArtifact.getClassifier() );
-
+    

INS29 UPD42 INS65 INS65 INS65 INS65 INS43 INS42 INS43 UPD42 INS25 INS25 INS60 INS60 INS25 INS60 INS60 INS60 INS25 INS25 INS41 INS66 INS66 INS42 INS42 INS42 INS40 INS38 INS8 INS38 INS8 MOV43 INS59 MOV43 INS59 INS27 INS8 INS43 INS59 INS43 INS59 INS39 INS59 INS32 INS8 INS25 INS38 INS8 MOV32 MOV42 INS32 INS41 INS32 INS41 INS42 INS32 INS42 INS33 INS32 MOV33 INS21 INS42 INS42 MOV32 INS42 INS42 MOV32 INS42 INS9 INS42 INS42 INS42 INS21 INS32 INS8 INS25 INS42 INS41 UPD42 INS32 INS42 INS32 INS9 INS32 INS42 INS32 INS9 INS42 INS42 INS42 INS42 INS7 INS7 INS42 INS42 INS42 INS21 INS27 INS8 INS25 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS9 INS7 INS32 INS32 INS21 INS27 INS8 INS32 INS32 INS42 INS42 INS9 INS45 INS42 UPD42 MOV42 INS45 MOV42 UPD42 MOV42 INS7 INS32 INS32 INS21 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS42 INS42 INS9 INS45 INS42 INS42 INS45 INS42 INS42 INS7 INS42 INS9 DEL42 DEL32 DEL42 DEL32 DEL32 DEL27 DEL42 DEL42 DEL33 DEL27 DEL42 DEL27 DEL27 DEL42 DEL33 DEL27 DEL36 DEL32 DEL27 DEL36 DEL27 DEL41