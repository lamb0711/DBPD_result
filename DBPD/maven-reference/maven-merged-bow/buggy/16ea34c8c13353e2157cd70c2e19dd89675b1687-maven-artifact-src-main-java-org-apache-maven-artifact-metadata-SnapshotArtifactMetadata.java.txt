snapshot resolution working, with glitches. committing working copy that is only enabled by a sys property until other features are in place.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163705 13f79535-47bb-0310-9956-ffa450edef68

-    private static final String SNAPSHOT_VERSION_LOCAL_FILE = "version-local.txt";
-
-    private SnapshotArtifactMetadata( Artifact artifact, String filename )
+    public SnapshotArtifactMetadata( Artifact artifact )
-        super( artifact, filename );
+        super( artifact, artifact.getArtifactId() + "-" + artifact.getBaseVersion() + "." + SNAPSHOT_VERSION_FILE );
-    public static SnapshotArtifactMetadata readLocalSnapshotMetadata( Artifact artifact,
-                                                                      ArtifactRepository localRepository )
+    public static SnapshotArtifactMetadata readFromLocalRepository( Artifact artifact,
+                                                                    ArtifactRepository localRepository )
-        SnapshotArtifactMetadata metadata = new SnapshotArtifactMetadata( artifact, SNAPSHOT_VERSION_LOCAL_FILE );
+        SnapshotArtifactMetadata metadata = new SnapshotArtifactMetadata( artifact );
-    public static SnapshotArtifactMetadata createLocalSnapshotMetadata( Artifact artifact )
-    {
-        return new SnapshotArtifactMetadata( artifact, SNAPSHOT_VERSION_LOCAL_FILE );
-    }
-
-    public static SnapshotArtifactMetadata createRemoteSnapshotMetadata( Artifact artifact )
-    {
-        return new SnapshotArtifactMetadata( artifact, SNAPSHOT_VERSION_FILE );
-    }
-
-            FileUtils.fileWrite( path, getVersion() );
+            FileUtils.fileWrite( path, constructVersion() );
-    public String getVersion()
+    public String constructVersion()
-        String version = artifact.getVersion();
+        String version = artifact.getBaseVersion();
+            String newVersion = timestamp + "-" + buildNumber;
-                version = StringUtils.replace( version, "SNAPSHOT", timestamp ) + "-" + buildNumber;
+                version = StringUtils.replace( version, "SNAPSHOT", newVersion );
-                version = timestamp + "-" + buildNumber;
+                version = newVersion;
-    public void retrieveFromRemoteRepository( ArtifactRepository remoteRepository, WagonManager wagonManager )
+    /**
+     * Retrieve the metadata from the remote repository into the local repository.
+     *
+     * @param remoteRepository the remote repository
+     * @param wagonManager     the wagon manager to use to retrieve the metadata
+     */
+    public static SnapshotArtifactMetadata retrieveFromRemoteRepository( Artifact artifact,
+                                                                         ArtifactRepository remoteRepository,
+                                                                         WagonManager wagonManager )
+        SnapshotArtifactMetadata snapshotMetadata = new SnapshotArtifactMetadata( artifact );
+
-                wagonManager.getArtifactMetadata( this, remoteRepository, destination );
+                wagonManager.getArtifactMetadata( snapshotMetadata, remoteRepository, destination );
+
+                snapshotMetadata.readFromFile( destination );
-                return;
-
-            readFromFile( destination );
+
+        return snapshotMetadata;

INS31 INS83 MOV42 MOV44 INS8 UPD42 UPD42 INS29 INS83 MOV43 MOV44 INS46 INS65 INS65 INS65 INS60 INS41 MOV42 INS27 MOV43 MOV43 INS66 INS42 INS66 INS42 INS66 MOV43 INS59 INS42 INS32 INS45 INS32 INS45 INS42 INS60 INS42 MOV14 INS54 INS42 INS42 INS42 INS42 MOV43 UPD42 MOV43 INS59 INS8 MOV12 INS42 MOV27 MOV21 MOV21 UPD42 INS32 INS42 INS42 INS42 MOV42 MOV42 MOV42 MOV45 UPD42 MOV42 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL42 DEL44 DEL42 DEL46 DEL8 DEL31 DEL42 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL41 DEL8 DEL31 DEL83 DEL83 DEL42 DEL42 DEL42 DEL14 DEL41 DEL8 DEL31 DEL32 DEL45 DEL42 DEL27 DEL39 DEL42 DEL52 DEL41 DEL8 DEL54