[MNG-4756] Aether integration


git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@988749 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.ArrayList;
+import java.util.Collections;
-import org.apache.maven.artifact.repository.ArtifactRepository;
-import org.apache.maven.artifact.repository.DefaultRepositoryRequest;
-import org.apache.maven.artifact.repository.RepositoryCache;
-import org.apache.maven.artifact.repository.RepositoryRequest;
-import org.apache.maven.repository.ArtifactTransferListener;
+import org.sonatype.aether.RepositorySystemSession;
+import org.sonatype.aether.repository.RemoteRepository;
-    private List<String> pluginGroups;
+    private List<String> pluginGroups = Collections.emptyList();
-    private RepositoryRequest repositoryRequest;
+    private List<RemoteRepository> repositories = Collections.emptyList();
+
+    private RepositorySystemSession session;
-        repositoryRequest = new DefaultRepositoryRequest();
-    }
-
-    /**
-     * Creates a request by copying settings from the specified repository request.
-     * 
-     * @param repositoryRequest The repository request to copy from, must not be {@code null}.
-     */
-    public DefaultPluginPrefixRequest( RepositoryRequest repositoryRequest )
-    {
-        this.repositoryRequest = new DefaultRepositoryRequest( repositoryRequest );
-     * configure repository settings. If the session has a current project, its plugin artifact repositories and model
-     * will be used as well.
+     * configure repository settings. If the session has a current project, its plugin repositories and model will be
+     * used as well.
-        this.repositoryRequest = new DefaultRepositoryRequest();
-
-        setCache( session.getRepositoryCache() );
-        setLocalRepository( session.getLocalRepository() );
-        setOffline( session.isOffline() );
-        setForceUpdate( session.getRequest().isUpdateSnapshots() );
-        setTransferListener( session.getRequest().getTransferListener() );
+        setRepositorySession( session.getRepositorySession() );
-            setRemoteRepositories( project.getPluginArtifactRepositories() );
+            setRepositories( project.getRemotePluginRepositories() );
-        if ( pluginGroups == null )
-        {
-            pluginGroups = new ArrayList<String>();
-        }
-
-        this.pluginGroups = pluginGroups;
+        if ( pluginGroups != null )
+        {
+            this.pluginGroups = pluginGroups;
+        }
+        else
+        {
+            this.pluginGroups = Collections.emptyList();
+        }
-    public RepositoryCache getCache()
+    public List<RemoteRepository> getRepositories()
-        return repositoryRequest.getCache();
+        return repositories;
-    public DefaultPluginPrefixRequest setCache( RepositoryCache cache )
+    public DefaultPluginPrefixRequest setRepositories( List<RemoteRepository> repositories )
-        repositoryRequest.setCache( cache );
+        if ( repositories != null )
+        {
+            this.repositories = repositories;
+        }
+        else
+        {
+            this.repositories = Collections.emptyList();
+        }
-    public ArtifactRepository getLocalRepository()
+    public RepositorySystemSession getRepositorySession()
-        return repositoryRequest.getLocalRepository();
+        return session;
-    public DefaultPluginPrefixRequest setLocalRepository( ArtifactRepository localRepository )
+    public DefaultPluginPrefixRequest setRepositorySession( RepositorySystemSession session )
-        repositoryRequest.setLocalRepository( localRepository );
-
-        return this;
-    }
-
-    public List<ArtifactRepository> getRemoteRepositories()
-    {
-        return repositoryRequest.getRemoteRepositories();
-    }
-
-    public DefaultPluginPrefixRequest setRemoteRepositories( List<ArtifactRepository> remoteRepositories )
-    {
-        repositoryRequest.setRemoteRepositories( remoteRepositories );
-
-        return this;
-    }
-
-    public boolean isOffline()
-    {
-        return repositoryRequest.isOffline();
-    }
-
-    public DefaultPluginPrefixRequest setOffline( boolean offline )
-    {
-        repositoryRequest.setOffline( offline );
-
-        return this;
-    }
-
-    public boolean isForceUpdate()
-    {
-        return repositoryRequest.isForceUpdate();
-    }
-
-    public DefaultPluginPrefixRequest setForceUpdate( boolean forceUpdate )
-    {
-        repositoryRequest.setForceUpdate( forceUpdate );
-
-        return this;
-    }
-
-    public ArtifactTransferListener getTransferListener()
-    {
-        return repositoryRequest.getTransferListener();
-    }
-
-    public DefaultPluginPrefixRequest setTransferListener( ArtifactTransferListener transferListener )
-    {
-        repositoryRequest.setTransferListener( transferListener );
+        this.session = session;

MOV26 MOV26 MOV31 MOV31 UPD40 UPD40 UPD40 INS23 INS23 INS31 MOV83 INS74 INS59 INS83 INS43 INS59 MOV29 INS42 MOV74 UPD42 INS8 UPD74 MOV74 UPD42 MOV83 MOV43 UPD42 MOV42 MOV44 INS8 UPD43 UPD42 MOV43 UPD42 INS32 UPD43 MOV43 UPD43 MOV43 INS42 INS32 UPD42 MOV42 INS42 MOV41 INS25 MOV41 UPD43 UPD74 MOV74 UPD42 INS25 MOV41 UPD42 UPD43 UPD42 MOV41 INS42 INS42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD66 UPD66 INS27 MOV8 INS8 UPD42 INS42 UPD43 INS27 INS8 INS8 INS42 UPD42 INS7 UPD42 INS42 INS33 INS21 UPD42 INS42 INS33 MOV21 MOV21 INS22 INS42 UPD42 INS7 INS7 INS7 INS52 INS42 UPD42 INS22 INS32 INS22 INS42 INS22 INS32 UPD42 INS52 INS42 INS42 INS42 INS52 INS42 INS52 INS42 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL41 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL8 DEL31 DEL52 DEL42 DEL22 DEL42 DEL43 DEL14 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL83 DEL42 DEL42 DEL33 DEL27 DEL42 DEL74 DEL14 DEL7 DEL21 DEL8 DEL25 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL21 DEL52 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL39 DEL42 DEL44 DEL52 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL39 DEL42 DEL44 DEL52 DEL41 DEL8 DEL31 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL52 DEL41