[MNG-3906] - Project-level plugin dependencies order. Fixed a lot of problems with ordering of elements. We need to assume that the processors always get the parent model first, then the child, down the line.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@757936 13f79535-47bb-0310-9956-ffa450edef68

+    private boolean isDependencyManagement;
+    
+    public DependenciesProcessor() {}
+    
+    public DependenciesProcessor(boolean isDependencyManagement) {
+        this.isDependencyManagement = isDependencyManagement;
+    }
-        DependencyProcessor processor = new DependencyProcessor();
+        DependencyProcessor processor = new DependencyProcessor(isDependencyManagement);
-                List<Dependency> childDependencies = new ArrayList<Dependency>();
-                for ( Dependency childDependency : c)
+
+                for ( Dependency parentDependency : p )
-                    for ( Dependency parentDependency : p)
-                    {
-                        processor.process( null, childDependency, dependencies, isChildMostSpecialized );
-                        childDependencies.add( parentDependency );
-                    }
+                    processor.process( parentDependency, null, dependencies, isChildMostSpecialized );
+                }
+                
+                int length = dependencies.size();
+                
+                for ( Dependency childDependency : c )
+                {
+                    processor.process( null, childDependency, dependencies, isChildMostSpecialized );
-                for ( Dependency d2 : childDependencies )
-                {
-                    processor.process( d2, null, dependencies, isChildMostSpecialized );
-                }
+                //Move elements so child dependencies are first
+                List<Dependency> childDependencies = 
+                    new ArrayList<Dependency>(dependencies.subList( length - 1 , dependencies.size() ) );
+                dependencies.removeAll( childDependencies );
+                dependencies.addAll( 0, childDependencies );

INS23 INS31 INS31 INS83 INS39 INS59 INS83 INS42 INS8 INS83 INS42 INS44 INS8 INS42 INS39 INS42 INS21 INS7 MOV43 INS22 INS42 INS52 INS42 MOV43 INS42 MOV60 INS60 MOV70 INS21 INS21 MOV44 INS42 INS39 INS59 MOV44 UPD42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS32 UPD42 INS42 INS42 INS27 INS32 INS42 INS34 INS42 INS42 DEL42 DEL8 DEL70 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21