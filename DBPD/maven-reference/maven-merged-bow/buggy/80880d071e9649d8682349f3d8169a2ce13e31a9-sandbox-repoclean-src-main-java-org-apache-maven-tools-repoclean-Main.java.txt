o Fixed a configuration issue for the DefaultRepositoryLayout in components.xml...it needed a requirement on the ArtifactHandlerManager.
o Fixed a formatting issue for the layout in DefaultRepositoryLayout relating to groupId's.
o Revamped the repoclean tool to use an Artifact-centric approach to converting, cleaning, and reporting on repositories.
o Added the ability for repoclean to report on the health of an existing v3 or v4 repository, using a DefaultArtifactDiscoverer (Default* being the prefix given to the new repo layout going forward) and a V4PomRewriter implementation.
o Tested repoclean by converting my local m1 repository to a m2 repository.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163669 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.util.IOUtil;
+
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.util.Properties;
-    public static void main( String[] inputArgs )
+    public static void main( String[] args )
+        if ( args.length < 1 )
+        {
+            printUsage();
+            System.exit( 0 );
+        }
+        else if ( "-h".equals( args[0].toLowerCase() ) )
+        {
+            printHelp();
+            System.exit( 0 );
+        }
+        else if( "-template".equals( args[0] ) )
+        {
+            printTemplate();
+            System.exit( 0 );
+        }
+
-            String[] args = inputArgs;
-
-            if ( args.length < 2 )
-            {
-                printUsage();
-                System.exit( 0 );
-            }
-
-            boolean reportOnly = false;
-            if ( args.length > 2 )
-            {
-                reportOnly = Boolean.valueOf( args[2] ).booleanValue();
-            }
+            RepositoryCleanerConfiguration config = buildConfig(args[0]);
-                cleaner.cleanRepository( args[0], args[1], reportOnly );
+                cleaner.cleanRepository( config );
+    private static RepositoryCleanerConfiguration buildConfig( String configPath ) throws IOException
+    {
+        Properties props = new Properties();
+        FileInputStream input = null;
+        try
+        {
+            input = new FileInputStream(configPath);
+            props.load(input);
+        }
+        finally
+        {
+            IOUtil.close(input);
+        }
+        
+        RepositoryCleanerConfiguration config = new RepositoryCleanerConfiguration();
+        config.setSourceRepositoryPath(props.getProperty("sourceRepositoryPath"));
+        config.setSourceRepositoryLayout(props.getProperty("sourceRepositoryLayout", "legacy"));
+        config.setSourcePomVersion(props.getProperty("sourcePomVersion", "v3"));
+        config.setTargetRepositoryPath(props.getProperty("targetRepositoryPath"));
+        config.setTargetRepositoryLayout(props.getProperty("targetRepositoryLayout", "default"));
+        config.setReportsPath(props.getProperty("reportsPath"));
+        config.setReportOnly(Boolean.valueOf(props.getProperty("reportOnly")).booleanValue());
+        
+        return config;
+    }
+
+    private static void printHelp()
+    {
+        System.out.println("repoclean: Repository Cleaner/Converter.\n\n" +
+                "Usage: repoclean -h|-template|<configuration-properties-file>\n\n" +
+                "Where the configuration properfies file can contain the following options:\n" +
+                "---------------------------------------------------------------------------\n" +
+                "sourceRepositoryPath=/path/to/repository/root #[REQUIRED]\n" +
+                "sourceRepositoryLayout=[legacy|default] #[DEFAULT: legacy]\n" +
+                "sourcePomType=[v3|v4] #[DEFAULT: v3]\n" +
+                "targetRepositoryPath=/path/to/repository/root #[REQUIRED]\n" +
+                "targetRepositoryLayout=[legacy|default] #[DEFAULT: default]\n" +
+                "reportsPath=/path/to/reports/directory #[REQUIRED]\n" +
+                "reportOnly=[true|false] #[REQUIRED]\n" +
+                "\n");
+    }
+
+    private static void printTemplate()
+    {
+        System.out.println(
+                "# ---------------------------------------------------------------------------\n" +
+                "# repoclean: Repository Cleaner/Converter.\n" +
+                "# This configuration auto-generated on: " + new java.util.Date() + "\n" +
+                "# ---------------------------------------------------------------------------\n\n" +
+                "# [REQUIRED OPTIONS]\n" +
+                "sourceRepositoryPath=/path/to/repository/root\n" +
+                "targetRepositoryPath=/path/to/repository/root\n" +
+                "reportsPath=/path/to/reports/directory\n" +
+                "reportOnly=[true|false]\n\n" +
+                "# [DEFAULT VALUE: legacy]\n" +
+                "#sourceRepositoryLayout=[legacy|default]\n\n" +
+                "# [DEFAULT VALUE: v3]\n" +
+                "#sourcePomType=[v3|v4]\n\n" +
+                "# [DEFAULT VALUE: default]\n" +
+                "#targetRepositoryLayout=[legacy|default]\n" +
+                "\n");
+    }
+
-        System.out.println( "No repository directory specified.\n\n" + "Usage:\n"
+        System.out.println( "Required input is missing.\n\n" + "Usage:\n"
-            + "repoclean <repository-path> <reports-path> [<report-only (use true|false)>]\n" );
+            + "repoclean -h|-template|<configuration-properties-file>\n" );

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS83 INS83 INS43 INS42 INS44 INS43 INS8 INS83 INS83 INS39 INS42 INS8 INS83 INS83 INS39 INS42 INS8 UPD42 INS25 INS42 INS43 INS42 INS42 INS60 INS60 INS54 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS41 INS21 INS21 INS27 MOV8 INS25 INS42 INS43 INS59 INS43 INS59 INS8 INS8 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS32 INS32 INS40 INS34 INS32 INS8 INS25 INS60 INS42 INS42 INS14 INS42 INS42 INS33 INS21 INS21 INS21 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS40 INS42 INS27 INS40 INS42 INS27 INS45 INS42 INS32 INS21 INS21 INS32 INS8 INS43 INS59 INS43 INS7 INS32 INS32 INS43 INS42 INS42 INS45 INS42 INS42 INS45 INS45 INS42 INS42 INS45 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS45 INS42 INS42 INS45 INS32 INS42 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS27 INS14 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 UPD45 UPD45 INS2 INS42 INS32 INS32 INS45 INS42 MOV2 INS21 INS21 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS45 INS45 INS45 INS43 INS42 INS34 INS42 INS42 INS42 INS34 INS32 INS32 UPD42 MOV42 MOV2 INS43 INS42 INS42 INS42 INS45 INS40 INS42 INS42 INS42 INS34 UPD34 INS42 INS42 DEL43 DEL85 DEL5 DEL42 DEL59 DEL60 DEL40 DEL34 DEL27 DEL25 DEL39 DEL42 DEL9 DEL59 DEL60 DEL40 DEL34 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL34 DEL2 DEL42