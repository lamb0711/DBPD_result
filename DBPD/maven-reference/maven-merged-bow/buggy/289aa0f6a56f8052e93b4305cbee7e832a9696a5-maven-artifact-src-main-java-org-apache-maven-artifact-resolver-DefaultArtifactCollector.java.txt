PR: MNG-505
enable version ranges in resolution (only default conflict resolution - nearest suggested version, fail if over-constrained)

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219844 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.versioning.OverConstrainedVersionException;
+import org.apache.maven.artifact.versioning.VersionRange;
-        root.addDependencies( artifacts, remoteRepositories, filter );
-        recurse( root, resolvedArtifacts, managedVersions, localRepository, remoteRepositories, source, filter,
-                 artifactFactory, listeners );
-
-        Set set = new HashSet();
-
-        for ( Iterator i = resolvedArtifacts.values().iterator(); i.hasNext(); )
+        try
-            ResolutionNode node = (ResolutionNode) i.next();
-            if ( !node.equals( root ) )
+            root.addDependencies( artifacts, remoteRepositories, filter );
+
+            recurse( root, resolvedArtifacts, managedVersions, localRepository, remoteRepositories, source, filter,
+                     artifactFactory, listeners );
+
+            Set set = new HashSet();
+
+            for ( Iterator i = resolvedArtifacts.values().iterator(); i.hasNext(); )
-                Artifact artifact = node.getArtifact();
+                ResolutionNode node = (ResolutionNode) i.next();
+                if ( !node.equals( root ) )
+                {
+                    Artifact artifact = node.getArtifact();
-                artifact.setDependencyTrail( node.getDependencyTrail() );
+                    artifact.setDependencyTrail( node.getDependencyTrail() );
-                set.add( node );
+                    set.add( node );
+                }
+
+            ArtifactResolutionResult result = new ArtifactResolutionResult();
+            result.setArtifactResolutionNodes( set );
+            return result;
-
-        ArtifactResolutionResult result = new ArtifactResolutionResult();
-
-        result.setArtifactResolutionNodes( set );
-
-        return result;
+        catch ( OverConstrainedVersionException e )
+        {
+            throw new ArtifactResolutionException( "Unable to mediate dependency", e );
+        }
-        throws CyclicDependencyException, TransitiveArtifactResolutionException
+        throws CyclicDependencyException, TransitiveArtifactResolutionException, OverConstrainedVersionException
-        // TODO: conflict resolvers, shouldn't be munging original artifact perhaps?
+        // TODO: use as a conflict resolver
+            VersionRange previousRange = previous.getArtifact().getVersionRange();
+            VersionRange currentRange = node.getArtifact().getVersionRange();
+
+            if ( previousRange == null )
+            {
+                // version was already resolved
+                node.getArtifact().setVersion( previous.getArtifact().getVersion() );
+            }
+            else if ( currentRange == null )
+            {
+                // version was already resolved
+                previous.getArtifact().setVersion( node.getArtifact().getVersion() );
+            }
+            else
+            {
+                VersionRange newRange = previousRange.restrict( currentRange );
+                previous.getArtifact().setVersionRange( newRange );
+                node.getArtifact().setVersionRange( newRange );
+            }
+                Artifact artifact = child.getArtifact();
-                    ResolutionGroup rGroup = source.retrieve( child.getArtifact(), localRepository,
-                                                              remoteRepositories );
+                    if ( artifact.getVersion() == null )
+                    {
+                        // set the recommended version
+                        VersionRange versionRange = artifact.getVersionRange();
+                        String version = versionRange.getSelectedVersion().toString();
+                        artifact.selectVersion( version );
+                    }
+
+                    ResolutionGroup rGroup = source.retrieve( artifact, localRepository, remoteRepositories );
-                    child.getArtifact().setDependencyTrail( node.getDependencyTrail() );
-                    throw new TransitiveArtifactResolutionException( e.getMessage(), child.getArtifact(),
-                                                                     remoteRepositories, e );
+                    artifact.setDependencyTrail( node.getDependencyTrail() );
+                    throw new TransitiveArtifactResolutionException( e.getMessage(), artifact, remoteRepositories, e );

INS26 INS26 INS40 INS40 INS43 INS54 INS42 INS8 INS12 MOV21 MOV21 MOV60 MOV24 MOV60 MOV21 MOV41 INS44 INS8 INS60 INS60 INS25 INS43 INS42 INS53 INS43 INS59 INS43 INS59 INS27 INS8 INS25 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS27 INS8 INS8 INS60 INS43 INS45 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS33 INS21 INS60 INS21 INS21 INS43 INS59 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS43 INS59 INS32 INS32 INS42 INS42 MOV32 INS25 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS27 INS8 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS33 INS60 INS60 INS21 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 DEL42 DEL32 DEL42 DEL32