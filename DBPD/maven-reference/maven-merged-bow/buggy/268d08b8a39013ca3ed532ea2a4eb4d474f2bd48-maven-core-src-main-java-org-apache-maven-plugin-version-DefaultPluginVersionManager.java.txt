[MNG-3372] Improve error handling where a mojo is referenced but the plugin doesn't contain it (in direct-invocation cases), and fix plugin-version discovery where a plugin pom gives a maven prereq.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@614708 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.versioning.DefaultArtifactVersion;
+import org.apache.maven.artifact.versioning.Restriction;
-                    DefaultArtifactVersion requiredVersion =
-                        new DefaultArtifactVersion( pluginProject.getPrerequisites().getMaven() );
+                    String mavenVersion = pluginProject.getPrerequisites().getMaven();
-                    if ( runtimeInformation.getApplicationVersion().compareTo( requiredVersion ) != 0 )
+                    VersionRange mavenRange = null;
+                    try
+                    {
+                        mavenRange = VersionRange.createFromVersionSpec( mavenVersion );
+
+                        List restrictions = mavenRange.getRestrictions();
+                        if ( ( restrictions.size() == 1 ) && Restriction.EVERYTHING.equals( restrictions.get( 0 ) ) )
+                        {
+                            String range = "[" + mavenVersion + ",]";
+
+                            getLogger().debug( "Plugin: "
+                                               + pluginProject.getId()
+                                               + " specifies a simple prerequisite Maven version of: "
+                                               + mavenVersion
+                                               + ". This version has been translated into the range: "
+                                               + range + " for plugin-version resolution purposes." );
+
+                            mavenRange = VersionRange.createFromVersionSpec( range );
+                        }
+                    }
+                    catch ( InvalidVersionSpecificationException e )
+                    {
+                        getLogger().debug( "Invalid prerequisite Maven version: " + mavenVersion + " for plugin: " + pluginProject.getId() +
+                                                                        e.getMessage() );
+                    }
+
+                    if ( ( mavenRange != null ) && !mavenRange.containsVersion( runtimeInformation.getApplicationVersion() ) )
-                            " for: " + groupId + ":" + artifactId + " as it requires Maven version " + requiredVersion );
+                            " for: " + groupId + ":" + artifactId + " as it requires Maven version matching: " + mavenVersion );

MOV26 UPD40 INS60 INS54 UPD43 INS43 INS59 INS8 INS12 UPD27 UPD42 UPD42 MOV32 INS42 INS42 INS33 INS21 INS60 INS25 INS44 INS8 INS36 INS38 INS7 INS43 INS59 INS27 INS8 INS43 INS42 INS21 INS27 MOV32 MOV32 INS42 INS32 INS42 INS42 INS32 INS36 INS32 INS60 INS21 INS21 INS42 INS32 INS42 INS33 UPD42 UPD42 INS32 INS42 INS42 INS42 INS42 INS42 INS27 INS40 INS42 INS32 INS43 INS59 INS32 INS7 INS32 INS42 INS27 INS42 UPD45 UPD42 INS32 INS34 INS42 INS42 INS34 INS42 INS42 INS27 MOV32 INS42 INS27 INS42 INS32 INS42 INS45 INS42 INS45 INS32 INS32 INS42 INS42 INS45 INS42 INS45 INS45 INS32 INS45 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL43 DEL14 DEL34