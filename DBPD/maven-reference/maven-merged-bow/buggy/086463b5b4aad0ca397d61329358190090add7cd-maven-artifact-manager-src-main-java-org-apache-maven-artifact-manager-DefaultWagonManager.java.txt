PR: MNG-456
allow separate snapshot and release repositories
deprecate existing snapshotPolicy and checksumPolicy in favour of updatePolicy and checksumPolicy within the <releases> and <snapshots> elements in the <repository> element.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@224707 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;
-        getRemoteFile( repository, destination, remotePath, downloadMonitor );
+        ArtifactRepositoryPolicy policy = artifact.isSnapshot() ? repository.getSnapshots() : repository.getReleases();
+
+        if ( policy.isEnabled() )
+        {
+            getRemoteFile( repository, destination, remotePath, downloadMonitor, policy.getUpdatePolicy() );
+        }
+        else
+        {
+            getLogger().info( "Skipping disabled repository " + repository.getId() );
+        }
-    public void getArtifactMetadata( ArtifactMetadata metadata, ArtifactRepository remoteRepository, File destination )
+    public void getArtifactMetadata( ArtifactMetadata metadata, ArtifactRepository repository, File destination,
+                                     String updatePolicy )
-        String remotePath = remoteRepository.pathOfMetadata( metadata );
+        String remotePath = repository.pathOfMetadata( metadata );
-        getRemoteFile( remoteRepository, destination, remotePath, null );
+        getRemoteFile( repository, destination, remotePath, null, updatePolicy );
-        getRemoteFile( remoteRepository, destination, remotePath, null );
+        getRemoteFile( remoteRepository, destination, remotePath, null, ArtifactRepositoryPolicy.CHECKSUM_POLICY_WARN );
-                                TransferListener downloadMonitor )
+                                TransferListener downloadMonitor, String updatePolicy )
-            repository = mirror;
+            repository = new DefaultArtifactRepository( mirror.getId(), mirror.getUrl(), repository.getLayout(),
+                                                        repository.getSnapshots(), repository.getReleases() );
-                        handleChecksumFailure( repository, e.getMessage(), e.getCause() );
+                        handleChecksumFailure( updatePolicy, e.getMessage(), e.getCause() );
-                            handleChecksumFailure( repository, e.getMessage(), e.getCause() );
+                            handleChecksumFailure( updatePolicy, e.getMessage(), e.getCause() );
-                        handleChecksumFailure( repository, "Error retrieving checksum file for " + remotePath,
+                        handleChecksumFailure( updatePolicy, "Error retrieving checksum file for " + remotePath,
-    private void handleChecksumFailure( ArtifactRepository repository, String message, Throwable cause )
+    private void handleChecksumFailure( String updatePolicy, String message, Throwable cause )
-        if ( repository.failOnChecksumMismatch() )
+        if ( ArtifactRepositoryPolicy.CHECKSUM_POLICY_FAIL.equals( updatePolicy ) )

INS26 INS40 INS8 INS44 INS44 MOV8 MOV60 INS60 INS25 UPD42 MOV43 INS42 UPD43 MOV43 UPD42 MOV42 MOV60 MOV60 INS25 MOV60 MOV54 MOV25 MOV60 MOV60 MOV54 MOV60 MOV21 MOV25 MOV25 UPD43 UPD42 INS43 INS59 INS32 INS8 INS8 INS43 UPD42 MOV27 INS8 INS8 MOV12 MOV12 MOV12 MOV8 UPD42 INS42 INS42 INS16 INS42 INS42 MOV21 INS21 INS42 UPD42 INS42 INS40 INS21 MOV21 MOV60 MOV60 INS61 INS40 UPD42 UPD42 INS32 INS32 INS32 INS32 UPD42 INS7 MOV27 MOV8 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS27 INS42 INS14 MOV21 MOV21 MOV25 MOV25 MOV21 INS42 MOV21 INS42 INS42 INS42 INS45 INS32 INS43 INS32 INS32 INS32 INS32 INS32 MOV8 INS12 UPD42 MOV42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV44 INS8 INS42 INS21 UPD42 MOV42 UPD42 MOV42 MOV21 INS54 INS32 MOV8 MOV12 MOV12 INS42 INS42 INS42 UPD42 UPD42 UPD42 DEL8 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25 DEL61 DEL8 DEL54 DEL8