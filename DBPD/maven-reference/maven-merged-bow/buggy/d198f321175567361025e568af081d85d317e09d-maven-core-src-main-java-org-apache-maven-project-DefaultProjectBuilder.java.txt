o Refactored project builder to support better error reporting

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@803598 13f79535-47bb-0310-9956-ffa450edef68

-    public MavenProject build( File pomFile, ProjectBuildingRequest configuration )
+    public ProjectBuildingResult build( File pomFile, ProjectBuildingRequest configuration )
-        return build( pomFile, true, configuration );
+        return build( pomFile, true, configuration, false );
-    private MavenProject build( File pomFile, boolean localProject, ProjectBuildingRequest configuration )
+    private DefaultProjectBuildingResult build( File pomFile, boolean localProject,
+                                                ProjectBuildingRequest configuration, boolean resolveDependencies )
-            return project;
+            ArtifactResolutionResult artifactResult = null;
+
+            if ( resolveDependencies )
+            {
+                Artifact artifact = new ProjectArtifact( project );
+
+                ArtifactResolutionRequest artifactRequest = new ArtifactResolutionRequest()
+                    .setArtifact( artifact )
+                    .setResolveRoot( false )
+                    .setResolveTransitively( true )
+                    .setCache( configuration.getRepositoryCache() )
+                    .setLocalRepository( configuration.getLocalRepository() )
+                    .setRemoteRepositories( project.getRemoteArtifactRepositories() )
+                    .setOffline( configuration.isOffline() )
+                    .setManagedVersionMap( project.getManagedVersionMap() );
+                // FIXME setTransferListener
+
+                artifactResult = repositorySystem.resolve( artifactRequest );
+
+                project.setArtifacts( artifactResult.getArtifacts() );
+            }
+
+            return new DefaultProjectBuildingResult( project, result.getProblems(), artifactResult );
-    public MavenProject build( Artifact artifact, ProjectBuildingRequest configuration )
+    public ProjectBuildingResult build( Artifact artifact, ProjectBuildingRequest configuration )
-        return build( artifact.getFile(), false, configuration );
+        return build( artifact.getFile(), false, configuration, false );
-    public MavenProject buildStandaloneSuperProject( ProjectBuildingRequest config )
+    public ProjectBuildingResult buildStandaloneSuperProject( ProjectBuildingRequest config )
-        return standaloneProject;
+        return new DefaultProjectBuildingResult( standaloneProject, result.getProblems(), null );
-    public MavenProjectBuildingResult buildProjectWithDependencies( File pomFile, ProjectBuildingRequest request )
+    public ProjectBuildingResult buildProjectWithDependencies( File pomFile, ProjectBuildingRequest request )
-        MavenProject project = build( pomFile, request );
-
-        Artifact artifact = new ProjectArtifact( project );                     
-        
-        ArtifactResolutionRequest artifactRequest = new ArtifactResolutionRequest()
-            .setArtifact( artifact )
-            .setResolveRoot( false )
-            .setResolveTransitively( true )
-            .setCache( request.getRepositoryCache() )
-            .setLocalRepository( request.getLocalRepository() )
-            .setRemoteRepositories( project.getRemoteArtifactRepositories() )
-            .setOffline( request.isOffline() )
-            .setManagedVersionMap( project.getManagedVersionMap() );
-        // FIXME setTransferListener
-        ArtifactResolutionResult result;
-
-        ClassLoader oldContextClassLoader = Thread.currentThread().getContextClassLoader();
-
-        try
-        {
-            if ( project.getClassRealm() != null )
-            {
-                Thread.currentThread().setContextClassLoader( project.getClassRealm() );
-            }
-
-            result = repositorySystem.resolve( artifactRequest );
-        }
-        finally
-        {
-            Thread.currentThread().setContextClassLoader( oldContextClassLoader );
-        }
-
-        if ( result.hasExceptions() )
-        {
-            Exception e = result.getExceptions().get( 0 );
-
-            throw new ProjectBuildingException( safeVersionlessKey( project.getGroupId(), project.getArtifactId() ), "Unable to build project due to an invalid dependency version: " + e.getMessage(),
-                                                pomFile, e );
-        }
-
-        project.setArtifacts( result.getArtifacts() );
-        
-        return new MavenProjectBuildingResult( project, result );
+        return build( pomFile, true, request, true );
-                    results.add( new DefaultProjectBuildingResult( project, result.getProblems() ) );
+                    results.add( new DefaultProjectBuildingResult( project, result.getProblems(), null ) );

UPD43 UPD43 INS44 UPD43 UPD43 UPD43 UPD42 UPD42 INS39 INS42 UPD42 UPD42 UPD42 INS41 INS14 INS32 INS9 INS60 INS25 INS9 INS43 INS42 INS32 INS33 MOV42 MOV42 UPD9 MOV9 UPD42 MOV42 MOV9 MOV43 INS59 INS42 INS8 INS14 INS42 INS42 INS42 INS42 INS33 MOV60 INS60 INS21 INS21 INS43 INS42 INS32 INS42 MOV43 INS59 INS7 INS32 INS42 INS42 INS42 INS42 INS32 INS42 MOV32 INS42 INS42 INS32 INS32 INS42 MOV32 INS42 INS42 INS32 INS42 INS32 INS32 INS42 MOV32 INS42 INS42 INS33 INS32 INS42 INS32 MOV32 INS42 INS32 INS42 INS42 INS42 INS9 INS42 INS42 INS9 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL7 DEL21 DEL8 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL34 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL14 DEL41