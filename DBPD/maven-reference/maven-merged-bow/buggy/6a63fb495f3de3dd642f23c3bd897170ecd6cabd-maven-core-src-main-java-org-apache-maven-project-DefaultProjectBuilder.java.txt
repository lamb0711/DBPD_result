o Removed super POM handling from project builder and did a proper call to the model builder instead

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@786853 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.IOException;
-import org.apache.maven.model.io.ModelReader;
+import org.apache.maven.model.UrlModelSource;
-    private ModelReader modelReader;
-
-    @Requirement
-    private MavenProject superProject;
+    private MavenProject standaloneProject;
-        ModelResolver resolver =
-            new RepositoryModelResolver( repositorySystem, resolutionErrorHandler, configuration.getLocalRepository(),
-                                         configuration.getRemoteRepositories() );
-
-        ModelBuildingRequest request = new DefaultModelBuildingRequest();
-        request.setLenientValidation( configuration.istLenientValidation() );
-        request.setProcessPlugins( configuration.isProcessPlugins() );
-        request.setProfiles( configuration.getProfiles() );
-        request.setActiveProfileIds( configuration.getActiveProfileIds() );
-        request.setInactiveProfileIds( configuration.getInactiveProfileIds() );
-        request.setExecutionProperties( configuration.getExecutionProperties() );
-        request.setBuildStartTime( configuration.getBuildStartTime() );
-        request.setModelResolver( resolver );
+        ModelBuildingRequest request = getModelBuildingRequest( configuration );
+    private ModelBuildingRequest getModelBuildingRequest( ProjectBuildingRequest configuration )
+    {
+        ModelResolver resolver =
+            new RepositoryModelResolver( repositorySystem, resolutionErrorHandler, configuration.getLocalRepository(),
+                                         configuration.getRemoteRepositories() );
+
+        ModelBuildingRequest request = new DefaultModelBuildingRequest();
+        request.setLenientValidation( configuration.istLenientValidation() );
+        request.setProcessPlugins( configuration.isProcessPlugins() );
+        request.setProfiles( configuration.getProfiles() );
+        request.setActiveProfileIds( configuration.getActiveProfileIds() );
+        request.setInactiveProfileIds( configuration.getInactiveProfileIds() );
+        request.setExecutionProperties( configuration.getExecutionProperties() );
+        request.setBuildStartTime( configuration.getBuildStartTime() );
+        request.setModelResolver( resolver );
+
+        return request;
+    }
+
-        if ( superProject != null )
+        if ( standaloneProject != null )
-            return superProject;
+            return standaloneProject;
-        Model superModel = getSuperModel();
+        ModelBuildingRequest request = getModelBuildingRequest( config );
+
+        ModelBuildingResult result;
+        try
+        {
+            result = modelBuilder.build( new UrlModelSource( getClass().getResource( "standalone.xml" ) ), request );
+        }
+        catch ( ModelBuildingException e )
+        {
+            throw new ProjectBuildingException( "[standalone]", "Failed to build standalone project", e );
+        }
-            superProject = new MavenProject( superModel, repositorySystem, this, config );
+            standaloneProject = new MavenProject( result.getEffectiveModel(), repositorySystem, this, config );
-        superProject.setExecutionRoot( true );
+        standaloneProject.setExecutionRoot( true );
-        return superProject;
+        return standaloneProject;
-    // Super Model Handling
-
-    private static final String MAVEN_MODEL_VERSION = "4.0.0";
-
-    private Model superModel;
-
-    protected Model getSuperModel()
-    {
-        if ( superModel != null )
-        {
-            return superModel;
-        }
-
-        String superPomResource = "/org/apache/maven/project/pom-" + MAVEN_MODEL_VERSION + ".xml";
-
-        try
-        {
-            superModel = modelReader.read( getClass().getResourceAsStream( superPomResource ), null );
-        }
-        catch ( IOException e )
-        {
-            throw new IllegalStateException( "The super POM is damaged"
-                + ", please verify the integrity of your Maven installation", e );
-        }
-
-        return superModel;
-    }
-

MOV31 MOV31 UPD40 UPD83 INS43 INS42 INS44 INS8 MOV29 UPD83 MOV43 UPD42 MOV44 MOV43 UPD42 INS60 UPD42 MOV42 INS43 INS42 MOV60 MOV60 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 MOV41 INS60 INS54 INS21 INS43 INS59 INS42 UPD42 UPD43 INS43 INS59 INS8 MOV12 INS32 UPD42 INS42 INS42 INS32 UPD42 UPD42 UPD42 INS32 INS42 INS42 INS21 INS42 INS42 INS9 INS42 INS42 UPD42 INS42 INS42 UPD43 INS7 UPD42 UPD42 INS42 INS14 UPD42 INS42 INS14 UPD42 UPD43 INS45 INS45 MOV43 INS32 INS42 INS52 INS42 INS43 MOV32 UPD42 INS42 INS42 INS42 UPD42 INS45 DEL40 DEL26 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL42 DEL33 DEL27 DEL42 DEL41 DEL8 DEL25 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL52 DEL42 DEL14 DEL7 DEL21 DEL8 DEL54 DEL42 DEL42 DEL9 DEL32 DEL21 DEL8 DEL42 DEL43 DEL45 DEL42 DEL45 DEL27 DEL42 DEL33 DEL45 DEL45 DEL27 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23