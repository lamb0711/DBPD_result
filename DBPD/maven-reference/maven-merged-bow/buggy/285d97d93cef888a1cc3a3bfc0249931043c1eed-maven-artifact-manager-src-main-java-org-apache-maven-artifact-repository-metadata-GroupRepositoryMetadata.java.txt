PR: MNG-847
merge metadata if it is duplicated

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@280086 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.repository.ArtifactRepository;
-import org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Reader;
-import org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Writer;
-import org.codehaus.plexus.util.IOUtil;
-import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
-
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.FileReader;
-import java.io.FileWriter;
-import java.io.IOException;
-import java.io.Reader;
-import java.io.Writer;
-import java.util.HashMap;
-import java.util.Map;
+import java.util.List;
-    private Map pluginMappings = new HashMap();
-
+        super( new Metadata() );
-    public String toString()
-    {
-        return "repository metadata for group: \'" + groupId + "\'";
-    }
-
-        pluginMappings.put( goalPrefix, artifactId );
-    }
-
-    protected void updateRepositoryMetadata( ArtifactRepository localRepository, ArtifactRepository remoteRepository )
-        throws IOException
-    {
-        MetadataXpp3Reader mappingReader = new MetadataXpp3Reader();
-
-        Metadata pluginMap = null;
-
-        File metadataFile = new File( localRepository.getBasedir(),
-                                      localRepository.pathOfLocalRepositoryMetadata( this, remoteRepository ) );
-
-        if ( metadataFile.exists() )
+        List plugins = getMetadata().getPlugins();
+        boolean found = false;
+        for ( Iterator i = plugins.iterator(); i.hasNext() && !found; )
-            Reader reader = null;
-
-            try
+            Plugin plugin = (Plugin) i.next();
+            if ( plugin.getPrefix().equals( goalPrefix ) )
-                reader = new FileReader( metadataFile );
-
-                pluginMap = mappingReader.read( reader );
-            }
-            catch ( FileNotFoundException e )
-            {
-                // TODO: Log a warning
-            }
-            catch ( IOException e )
-            {
-                // TODO: Log a warning
-            }
-            catch ( XmlPullParserException e )
-            {
-                // TODO: Log a warning
-            }
-            finally
-            {
-                IOUtil.close( reader );
+                found = true;
-
-        boolean changed = false;
-
-        // If file could not be found or was not valid, start from scratch
-        if ( pluginMap == null )
+        if ( !found )
-            pluginMap = new Metadata();
+            Plugin plugin = new Plugin();
+            plugin.setPrefix( goalPrefix );
+            plugin.setArtifactId( artifactId );
-            pluginMap.setGroupId( groupId );
-
-            changed = true;
-        }
-
-        for ( Iterator i = pluginMappings.keySet().iterator(); i.hasNext(); )
-        {
-            String prefix = (String) i.next();
-            boolean found = false;
-
-            for ( Iterator it = pluginMap.getPlugins().iterator(); it.hasNext() && !found; )
-            {
-                Plugin preExisting = (Plugin) it.next();
-
-                if ( preExisting.getPrefix().equals( prefix ) )
-                {
-                    // TODO: log
-//                    getLog().info( "Plugin-mapping metadata for prefix: " + prefix + " already exists. Skipping." );
-
-                    found = true;
-                }
-            }
-
-            if ( !found )
-            {
-                Plugin mappedPlugin = new Plugin();
-
-                mappedPlugin.setArtifactId( (String) pluginMappings.get( prefix ) );
-
-                mappedPlugin.setPrefix( prefix );
-
-                pluginMap.addPlugin( mappedPlugin );
-
-                changed = true;
-            }
-        }
-
-        if ( changed )
-        {
-            Writer writer = null;
-            try
-            {
-                writer = new FileWriter( metadataFile );
-
-                MetadataXpp3Writer mappingWriter = new MetadataXpp3Writer();
-
-                mappingWriter.write( writer, pluginMap );
-            }
-            finally
-            {
-                IOUtil.close( writer );
-            }
-        }
-        else
-        {
-            metadataFile.setLastModified( System.currentTimeMillis() );
+            getMetadata().addPlugin( plugin );

UPD40 INS31 MOV83 MOV39 MOV42 MOV44 MOV44 MOV8 INS46 MOV60 MOV24 MOV25 MOV14 UPD43 UPD42 UPD42 INS32 MOV43 MOV32 MOV60 INS32 UPD42 MOV42 UPD42 UPD43 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 MOV42 UPD42 UPD42 UPD42 INS32 UPD42 UPD43 UPD42 UPD42 MOV42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL42 DEL43 DEL42 DEL45 DEL42 DEL45 DEL27 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL52 DEL32 DEL14 DEL42 DEL43 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL42 DEL9 DEL7 DEL21 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8 DEL25 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL8 DEL24 DEL42 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL83 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL31