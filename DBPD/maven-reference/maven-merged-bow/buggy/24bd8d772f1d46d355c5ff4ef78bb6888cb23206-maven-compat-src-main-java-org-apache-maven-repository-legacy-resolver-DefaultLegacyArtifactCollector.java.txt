o Introduced RepositoryRequest to hold the bare minimum of items required for repo accesses
o Added cache for metadata.xml

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@803059 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.repository.DefaultRepositoryRequest;
+import org.apache.maven.artifact.repository.RepositoryRequest;
+import org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest;
+import org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest;
+        RepositoryRequest request = new DefaultRepositoryRequest();
+        request.setLocalRepository( localRepository );
+        request.setRemoteRepositories( remoteRepositories );
+        return collect( artifacts, originatingArtifact, managedVersions, request, source, filter, listeners,
+                        conflictResolvers );
+    }
+
+    public ArtifactResolutionResult collect( Set<Artifact> artifacts, 
+                                             Artifact originatingArtifact,
+                                             Map managedVersions, 
+                                             RepositoryRequest repositoryRequest,
+                                             ArtifactMetadataSource source, 
+                                             ArtifactFilter filter,
+                                             List<ResolutionListener> listeners,
+                                             List<ConflictResolver> conflictResolvers )
+    {
-        ResolutionNode root = new ResolutionNode( originatingArtifact, remoteRepositories );
+        ResolutionNode root = new ResolutionNode( originatingArtifact, repositoryRequest.getRemoteRepositories() );
-            root.addDependencies( artifacts, remoteRepositories, filter );
+            root.addDependencies( artifacts, repositoryRequest.getRemoteRepositories(), filter );
-            recurse( result, root, resolvedArtifacts, versionMap, localRepository, remoteRepositories, source, filter, listeners, conflictResolvers );
+            recurse( result, root, resolvedArtifacts, versionMap, repositoryRequest, source, filter, listeners, conflictResolvers );
-                          ArtifactRepository localRepository, 
-                          List<ArtifactRepository> remoteRepositories,
+                          RepositoryRequest request,
-                                            versions = source.retrieveAvailableVersions( resetArtifact, localRepository, remoteRepositories );
+                                            MetadataResolutionRequest metadataRequest =
+                                                new DefaultMetadataResolutionRequest( request );
+                                            metadataRequest.setArtifact( resetArtifact );
+                                            versions = source.retrieveAvailableVersions( metadataRequest );
-                                            throw new ArtifactResolutionException( "Unable to get dependency information: " + e.getMessage(), resetArtifact, remoteRepositories, e );
+                                            throw new ArtifactResolutionException( "Unable to get dependency information: " + e.getMessage(), resetArtifact, request.getRemoteRepositories(), e );
+                        MetadataResolutionRequest metadataRequest =
+                            new DefaultMetadataResolutionRequest( request );
+                        metadataRequest.setArtifact( artifact );
+                        metadataRequest.setRemoteRepositories( childRemoteRepositories );
+
-                                            versions = source.retrieveAvailableVersions( artifact, localRepository, childRemoteRepositories );
+                                            versions = source.retrieveAvailableVersions( metadataRequest );
-                                rGroup = source.retrieve( artifact, localRepository, childRemoteRepositories );
+                                rGroup = source.retrieve( metadataRequest );
+                                    metadataRequest.setArtifact( artifact );
-                        recurse( result, child, resolvedArtifacts, managedVersions, localRepository,
-                                 childRemoteRepositories, source, filter, listeners, conflictResolvers );
+                        recurse( result, child, resolvedArtifacts, managedVersions, metadataRequest, source, filter,
+                                 listeners, conflictResolvers );

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS83 INS43 INS42 INS44 INS44 INS44 MOV44 MOV44 INS44 INS44 INS44 INS44 INS8 INS44 INS42 INS74 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS74 INS42 INS60 INS21 INS21 INS41 INS43 INS42 INS43 UPD42 INS43 INS43 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS43 INS43 INS59 INS32 INS32 INS32 INS42 MOV43 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 MOV43 INS32 INS42 INS42 INS42 INS32 UPD42 INS42 UPD42 MOV42 INS60 INS21 INS21 INS43 INS59 INS32 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS43 INS42 INS42 INS21 UPD42 INS32 INS42 INS42 INS42 INS60 INS21 INS43 INS59 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS43 INS42 UPD42 INS32 UPD42 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42