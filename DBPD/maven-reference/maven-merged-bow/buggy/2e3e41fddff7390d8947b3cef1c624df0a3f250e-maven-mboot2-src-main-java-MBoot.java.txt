transitive deps in mboot. Will now proceed to trim up the POMs. Still need to trim ~/maven2/lib also.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163764 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collection;
-        ModelReader reader = new ModelReader( localRepository );
-
-            downloader = new ArtifactDownloader( localRepository, reader.getRemoteRepositories() );
+            downloader = new ArtifactDownloader( localRepository, Collections.EMPTY_LIST );
-        reader = new ModelReader( localRepository );
+        ModelReader reader = new ModelReader( downloader, true );
-        reader = new ModelReader( localRepository );
+        reader = new ModelReader( downloader, true );
-        reader = new ModelReader( localRepository );
+        reader = new ModelReader( downloader, true );
-        List coreDeps = null;
+        Collection coreDeps = null;
-        reader = new ModelReader( localRepository );
+        reader = new ModelReader( downloader, true );
+        // TODO: check this - we are transitively including in /lib...
-            else
+            else if ( !d.getScope().equals( SCOPE_TEST ) && !d.getArtifactId().equals( "plexus-utils" ) )
+                // only compile and runtime
-        ModelReader reader = new ModelReader( localRepository );
+        ModelReader reader = new ModelReader( downloader, true );
-        String generatedDocs = new File( basedir, GENERATED_DOCS ).getAbsolutePath();
-
-            generateSources( model.getAbsolutePath(), "xdoc", generatedDocs, modelVersion, "false", classLoader );
-        List testDependencies = reader.getDependencies();
+        Collection testDependencies = reader.getDependencies();
-    private IsolatedClassLoader createClassloaderFromDependencies( List dependencies, ClassLoader parent,
+    private IsolatedClassLoader createClassloaderFromDependencies( Collection dependencies, ClassLoader parent,
-        ModelReader reader = new ModelReader( localRepository );
+        ModelReader reader = new ModelReader( downloader, false );
-    private List classpath( List dependencies, String extraClasspath, String scope, Repository localRepository )
+    private List classpath( Collection dependencies, String extraClasspath, String scope, Repository localRepository )
-        for ( int i = 0; i < dependencies.size(); i++ )
+        for ( Iterator i = dependencies.iterator(); i.hasNext(); )
-            Dependency d = (Dependency) dependencies.get( i );
+            Dependency d = (Dependency) i.next();
-    private void compile( List dependencies, String sourceDirectory, String outputDirectory, String extraClasspath,
-                          String generatedSources, String scope, Repository localRepository )
+    private void compile( Collection dependencies, String sourceDirectory, String outputDirectory,
+                          String extraClasspath, String generatedSources, String scope, Repository localRepository )
-
-

INS26 INS40 MOV60 UPD43 UPD43 UPD43 MOV43 UPD43 MOV43 UPD43 UPD42 MOV43 UPD42 INS58 INS32 UPD42 MOV14 UPD42 UPD42 INS43 INS59 INS42 INS42 UPD42 INS9 UPD42 INS9 UPD42 INS9 UPD42 INS9 MOV43 UPD42 INS9 MOV43 UPD42 INS9 INS42 INS42 INS32 INS25 MOV42 UPD42 MOV42 INS40 INS27 MOV8 INS38 INS38 UPD42 UPD42 INS32 INS32 INS32 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL14 DEL42 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL32 DEL27 DEL42 DEL37 DEL42