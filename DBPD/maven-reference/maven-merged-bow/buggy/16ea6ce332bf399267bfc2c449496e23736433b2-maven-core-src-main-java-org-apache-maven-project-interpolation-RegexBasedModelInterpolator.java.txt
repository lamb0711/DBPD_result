o Fixing a NullPointerException in the value extractor if the specified getter
  didn't exists. The value extractor will now return null if the getter doesn't
  exists.
o Properly implemented the method caching in the value exctrator.
o Changed the RegexBasedModelInterpolator so it would properly handle null
  values. It used to convert null to "null" and then insert that, now it will
  leave the expression as is.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163696 13f79535-47bb-0310-9956-ffa450edef68

-/* ====================================================================
- *   Copyright 2001-2004 The Apache Software Foundation.
+/*
+ * Copyright 2001-2005 The Apache Software Foundation.
- *   Licensed under the Apache License, Version 2.0 (the "License");
- *   you may not use this file except in compliance with the License.
- *   You may obtain a copy of the License at
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
- *       http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
- *   Unless required by applicable law or agreed to in writing, software
- *   distributed under the License is distributed on an "AS IS" BASIS,
- *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *   See the License for the specific language governing permissions and
- *   limitations under the License.
- * ====================================================================
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ * @version $Id$
-
-            String value = null;
+            Object value = null;
+
-                value = String.valueOf( ReflectionValueExtractor.evaluate( realExpr, model ) );
+                value = ReflectionValueExtractor.evaluate( realExpr, model );
-                result = StringUtils.replace( result, wholeExpr, value );
+                result = StringUtils.replace( result, wholeExpr, String.valueOf( value ) );
-                // result = matcher.replaceFirst( value );
-                // but this could result in multiple lookups of value, and replaceAll is not correct behaviour 
+                // result = matcher.replaceFirst( stringValue );
+                // but this could result in multiple lookups of stringValue, and replaceAll is not correct behaviour
-

INS65 INS66 UPD43 UPD42 MOV32 INS32 INS42 INS42 MOV42 DEL42 DEL42 DEL32