o Extended model builder to report the ids of the models from the lineage and used these ids as keys to pull infos from the building result

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@786838 13f79535-47bb-0310-9956-ffa450edef68

-        result.setActiveExternalProfiles( activeExternalProfiles );
+        Model inputModel = readModel( modelSource, pomFile, request, problems );
-        Model model = readModel( modelSource, pomFile, request, problems );
+        ModelData resultData = new ModelData( inputModel );
-        List<Model> rawModels = new ArrayList<Model>();
-        List<Model> resultModels = new ArrayList<Model>();
+        List<ModelData> lineage = new ArrayList<ModelData>();
-        for ( Model current = model; current != null; current = readParent( current, request, problems ) )
+        for ( ModelData currentData = resultData; currentData != null; )
-            Model resultModel = current;
-            resultModels.add( resultModel );
+            lineage.add( currentData );
-            Model rawModel = ModelUtils.cloneModel( current );
-            rawModels.add( rawModel );
+            Model tmpModel = currentData.getModel();
-            modelNormalizer.mergeDuplicates( resultModel, request );
+            Model rawModel = ModelUtils.cloneModel( tmpModel );
+            currentData.setRawModel( rawModel );
+
+            modelNormalizer.mergeDuplicates( tmpModel, request );
-
-            result.setActivePomProfiles( rawModel, activePomProfiles );
+            currentData.setActiveProfiles( activePomProfiles );
-                profileInjector.injectProfile( resultModel, activeProfile, request );
+                profileInjector.injectProfile( tmpModel, activeProfile, request );
-            if ( current == model )
+            if ( currentData == resultData )
-                    profileInjector.injectProfile( resultModel, activeProfile, request );
+                    profileInjector.injectProfile( tmpModel, activeProfile, request );
-            configureResolver( request.getModelResolver(), resultModel, problems );
+            configureResolver( request.getModelResolver(), tmpModel, problems );
+
+            currentData = readParent( tmpModel, request, problems );
-        Model superModel = getSuperModel();
-        rawModels.add( superModel );
-        resultModels.add( superModel );
+        ModelData superData = new ModelData( getSuperModel() );
+        superData.setRawModel( superData.getModel() );
+        superData.setActiveProfiles( Collections.<Profile> emptyList() );
+        lineage.add( superData );
-        result.setRawModels( rawModels );
+        assembleInheritance( lineage, request );
-        assembleInheritance( resultModels, request );
-
-        Model resultModel = resultModels.get( 0 );
+        Model resultModel = resultData.getModel();
-        resultModels.set( 0, resultModel );
+        resultData.setModel( resultModel );
+        resultData.setGroupId( resultModel.getGroupId() );
+        resultData.setArtifactId( resultModel.getArtifactId() );
+        resultData.setVersion( resultModel.getVersion() );
+
+        result.setActiveExternalProfiles( activeExternalProfiles );
+
+        for ( ModelData currentData : lineage )
+        {
+            String modelId = ( currentData != superData ) ? currentData.getId() : "";
+
+            result.addModelId( modelId );
+            result.setActivePomProfiles( modelId, currentData.getActiveProfiles() );
+            result.setRawModel( modelId, currentData.getRawModel() );
+        }
+
-    private void assembleInheritance( List<Model> models, ModelBuildingRequest request )
+    private void assembleInheritance( List<ModelData> lineage, ModelBuildingRequest request )
-        for ( int i = models.size() - 2; i >= 0; i-- )
+        for ( int i = lineage.size() - 2; i >= 0; i-- )
-            Model parent = models.get( i + 1 );
-            Model child = models.get( i );
+            Model parent = lineage.get( i + 1 ).getModel();
+            Model child = lineage.get( i ).getModel();
-    private Model readParent( Model childModel, ModelBuildingRequest request, List<ModelProblem> problems )
+    private ModelData readParent( Model childModel, ModelBuildingRequest request, List<ModelProblem> problems )
-        Model parentModel;
+        ModelData parentData;
-            parentModel = readParentLocally( childModel, request, problems );
+            parentData = readParentLocally( childModel, request, problems );
-            if ( parentModel == null )
+            if ( parentData == null )
-                parentModel = readParentExternally( childModel, request, problems );
+                parentData = readParentExternally( childModel, request, problems );
-            parentModel = null;
+            parentData = null;
-        return parentModel;
+        return parentData;
-    private Model readParentLocally( Model childModel, ModelBuildingRequest request, List<ModelProblem> problems )
+    private ModelData readParentLocally( Model childModel, ModelBuildingRequest request, List<ModelProblem> problems )
-        return candidateModel;
+        ModelData parentData = new ModelData( candidateModel, groupId, artifactId, version );
+
+        return parentData;
-    private Model readParentExternally( Model childModel, ModelBuildingRequest request, List<ModelProblem> problems )
+    private ModelData readParentExternally( Model childModel, ModelBuildingRequest request, List<ModelProblem> problems )
-        return readModel( modelSource, null, request, problems );
+        Model parentModel = readModel( modelSource, null, request, problems );
+
+        ModelData parentData =
+            new ModelData( parentModel, parent.getGroupId(), parent.getArtifactId(), parent.getVersion() );
+
+        return parentData;

MOV21 MOV60 UPD43 UPD43 INS43 INS21 INS21 INS21 INS70 UPD74 UPD42 UPD42 UPD42 INS60 INS41 INS42 INS60 INS60 INS43 UPD74 INS8 UPD43 INS32 INS32 INS32 INS32 INS44 INS42 INS8 UPD43 UPD43 UPD42 INS43 INS59 INS42 MOV43 INS59 INS43 INS59 INS42 UPD42 UPD42 MOV42 UPD42 UPD43 UPD42 INS43 UPD42 INS21 MOV60 MOV60 MOV21 MOV21 MOV60 MOV21 MOV70 MOV25 MOV21 INS21 UPD42 UPD42 INS14 INS42 UPD42 INS32 INS42 INS42 INS32 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS42 INS60 INS21 INS21 INS21 UPD42 UPD42 UPD42 INS42 INS42 INS14 INS42 MOV32 INS42 INS42 INS14 INS43 INS42 UPD42 UPD74 INS42 UPD42 UPD42 INS32 MOV43 MOV43 MOV44 INS7 INS43 MOV32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS43 UPD42 MOV42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS32 INS32 INS43 INS42 INS42 INS42 INS42 INS43 INS42 INS32 INS32 INS32 UPD42 MOV42 UPD43 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 INS32 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS32 INS42 INS42 INS42 INS42 INS16 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS32 INS32 UPD42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 UPD42 MOV44 INS42 INS42 INS42 INS42 INS36 INS32 INS45 INS42 INS42 INS42 INS42 UPD42 MOV32 INS42 INS32 INS42 UPD42 INS27 INS42 INS42 UPD42 UPD42 MOV42 MOV42 MOV42 UPD42 INS42 INS42 UPD42 DEL42 DEL43 DEL43 DEL74 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL7 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL32 DEL34 DEL34 DEL32 DEL42 DEL41