PR: MNG-505
artifact refactoring to facilitate version ranges



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219616 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.versioning.VersionRange;
-        ArtifactMetadataSource source = new MavenMetadataSource( artifactResolver, this, artifactFactory );
+        ArtifactMetadataSource source = new MavenMetadataSource( this, artifactFactory );
-        
+
-                Artifact artifact = artifactFactory.createArtifact( d.getGroupId(), d.getArtifactId(), d.getVersion(),
-                                                                    d.getScope(), d.getType(), null );
+                Artifact artifact = artifactFactory.createDependencyArtifact( d.getGroupId(), d.getArtifactId(),
+                                                                              new VersionRange( d.getVersion() ),
+                                                                              d.getType(), d.getScope() );
-        MavenProject project = build( projectDescriptor.getAbsolutePath(), model, localRepository, Collections.EMPTY_LIST, externalProfiles );
+        MavenProject project = build( projectDescriptor.getAbsolutePath(), model, localRepository,
+                                      Collections.EMPTY_LIST, externalProfiles );
-        return build( "Artifact [" + artifact.getId() + "]", model, localRepository, remoteArtifactRepositories, Collections.EMPTY_LIST );
+        return build( "Artifact [" + artifact.getId() + "]", model, localRepository, remoteArtifactRepositories,
+                      Collections.EMPTY_LIST );
-                                                                                       artifactRepositoryFactory,
-                                                                                       container );
+                                                                                        artifactRepositoryFactory,
+                                                                                        container );
-        
+
-        
+
-        Artifact projectArtifact = artifactFactory.createArtifact( project.getGroupId(), project.getArtifactId(),
-                                                                   project.getVersion(), null, project.getPackaging() );
-        
+        Artifact projectArtifact = artifactFactory.createBuildArtifact( project.getGroupId(), project.getArtifactId(),
+                                                                        project.getVersion(), project.getPackaging() );
+
-        project.setPluginArtifactRepositories(
-            ProjectUtils.buildArtifactRepositories( model.getPluginRepositories(), artifactRepositoryFactory,
-                                                    container ) );
+        project.setPluginArtifactRepositories( ProjectUtils.buildArtifactRepositories( model.getPluginRepositories(),
+                                                                                       artifactRepositoryFactory,
+                                                                                       container ) );
-            Artifact parentArtifact = artifactFactory.createArtifact( parentProject.getGroupId(),
-                                                                      parentProject.getArtifactId(),
-                                                                      parentProject.getVersion(), null, "pom" );
+            Artifact parentArtifact = artifactFactory.createProjectArtifact( parentProject.getGroupId(),
+                                                                             parentProject.getArtifactId(),
+                                                                             parentProject.getVersion() );
-            throw new ProjectBuildingException(
-                "Failed to validate POM for \'" + pomLocation + "\'.\n\n  Reason(s):\n" +
-                    validationResult.render( "  " ) );
+            throw new ProjectBuildingException( "Failed to validate POM for \'" + pomLocation +
+                "\'.\n\n  Reason(s):\n" + validationResult.render( "  " ) );
-            
+
-                
+
-            Artifact artifact = artifactFactory.createArtifact( parentModel.getGroupId(), parentModel.getArtifactId(),
-                                                                parentModel.getVersion(), null, "pom" );
+            Artifact artifact = artifactFactory.createParentArtifact( parentModel.getGroupId(),
+                                                                      parentModel.getArtifactId(),
+                                                                      parentModel.getVersion() );
-            throw new ProjectBuildingException(
-                "Failed to build model from file '" + file.getAbsolutePath() + "'.\nError: \'" +
-                    e.getLocalizedMessage() + "\'", e );
+            throw new ProjectBuildingException( "Failed to build model from file '" + file.getAbsolutePath() +
+                "'.\nError: \'" + e.getLocalizedMessage() + "\'", e );
-            throw new ProjectBuildingException(
-                "Failed to parse model from file '" + file.getAbsolutePath() + "'.\nError: \'" +
-                    e.getLocalizedMessage() + "\'", e );
+            throw new ProjectBuildingException( "Failed to parse model from file '" + file.getAbsolutePath() +
+                "'.\nError: \'" + e.getLocalizedMessage() + "\'", e );
-            throw new ProjectBuildingException(
-                "Failed build model from URL \'" + url.toExternalForm() + "\'\nError: \'" + e.getLocalizedMessage() +
-                    "\'", e );
+            throw new ProjectBuildingException( "Failed build model from URL \'" + url.toExternalForm() +
+                "\'\nError: \'" + e.getLocalizedMessage() + "\'", e );
-            throw new ProjectBuildingException(
-                "Failed to parse model from URL \'" + url.toExternalForm() + "\'\nError: \'" + e.getLocalizedMessage() +
-                    "\'", e );
+            throw new ProjectBuildingException( "Failed to parse model from URL \'" + url.toExternalForm() +
+                "\'\nError: \'" + e.getLocalizedMessage() + "\'", e );
-            Artifact artifact = artifactFactory.createArtifact( p.getGroupId(), p.getArtifactId(), version, null,
-                                                                "maven-plugin" );
+            Artifact artifact = artifactFactory.createPluginArtifact( p.getGroupId(), p.getArtifactId(),
+                                                                      new VersionRange( version ) );

INS26 INS40 UPD42 UPD42 UPD42 UPD42 INS14 MOV32 INS43 INS42 UPD42 INS14 INS42 INS43 MOV32 INS42 DEL42 DEL33 DEL33 DEL33 DEL45 DEL33 DEL45 DEL42 DEL33 DEL45