Replaced the old profile injector code with new profile code. Merged project builders.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@748609 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+import java.util.Collections;
-public interface ProfileActivationContext
+public class ProfileActivationContext
-    List getExplicitlyActiveProfileIds();
+    private boolean isCustomActivatorFailureSuppressed;
-    List getExplicitlyInactiveProfileIds();
+    private final Properties executionProperties;
-    Properties getExecutionProperties();
+    List explicitlyActive;
-    boolean isCustomActivatorFailureSuppressed();
+    List explicitlyInactive;
-    void setCustomActivatorFailureSuppressed( boolean suppressed );
+    private List activeByDefault;
-    void setExplicitlyActiveProfileIds( List inactive );
+    public ProfileActivationContext( Properties executionProperties, boolean isCustomActivatorFailureSuppressed )
+    {
+        this.executionProperties = executionProperties;
+        this.isCustomActivatorFailureSuppressed = isCustomActivatorFailureSuppressed;
+    }
-    void setExplicitlyInactiveProfileIds( List inactive );
+    public Properties getExecutionProperties()
+    {
+        return executionProperties;
+    }
-    void setActive( String profileId );
+    public boolean isCustomActivatorFailureSuppressed()
+    {
+        return isCustomActivatorFailureSuppressed;
+    }
-    void setInactive( String profileId );
+    public void setCustomActivatorFailureSuppressed( boolean suppressed )
+    {
+        isCustomActivatorFailureSuppressed = suppressed;
+    }
-    boolean isExplicitlyActive( String profileId );
+    public List getExplicitlyActiveProfileIds()
+    {
+        if ( explicitlyActive == null )
+        {
+            return Collections.EMPTY_LIST;
+        }
-    boolean isExplicitlyInactive( String profileId );
+        return explicitlyActive;
+    }
-    List getActiveByDefaultProfileIds();
+    public void setExplicitlyActiveProfileIds( List active )
+    {
+        explicitlyActive = active;
+    }
-    void setActiveByDefaultProfileIds( List activeByDefault );
+    public List getExplicitlyInactiveProfileIds()
+    {
+        if ( explicitlyInactive == null )
+        {
+            return Collections.EMPTY_LIST;
+        }
-    void setActiveByDefault( String profileId );
+        return explicitlyInactive;
+    }
-    boolean isActiveByDefault( String profileId );
+    public void setExplicitlyInactiveProfileIds( List inactive )
+    {
+        explicitlyInactive = inactive;
+    }
+
+    public void setActive( String profileId )
+    {
+        if ( explicitlyActive == null )
+        {
+            explicitlyActive = new ArrayList();
+        }
+
+        explicitlyActive.add( profileId );
+    }
+
+    public void setInactive( String profileId )
+    {
+        if ( explicitlyInactive == null )
+        {
+            explicitlyInactive = new ArrayList();
+        }
+
+        explicitlyInactive.add( profileId );
+    }
+
+    public boolean isExplicitlyActive( String profileId )
+    {
+        return ( explicitlyActive != null ) && explicitlyActive.contains( profileId );
+    }
+
+    public boolean isExplicitlyInactive( String profileId )
+    {
+        return ( explicitlyInactive != null ) && explicitlyInactive.contains( profileId );
+    }
+
+    public List getActiveByDefaultProfileIds()
+    {
+        if ( activeByDefault == null )
+        {
+            return Collections.EMPTY_LIST;
+        }
+
+        return activeByDefault;
+    }
+
+    public boolean isActiveByDefault( String profileId )
+    {
+        return ( activeByDefault != null ) && activeByDefault.contains( profileId );
+    }
+
+    public void setActiveByDefault( String profileId )
+    {
+        if ( activeByDefault == null )
+        {
+            activeByDefault = new ArrayList();
+        }
+
+        activeByDefault.add( profileId );
+    }
+
+    public void setActiveByDefaultProfileIds( List activeByDefault )
+    {
+        this.activeByDefault = activeByDefault;
+    }

INS26 INS26 INS40 INS40 INS23 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS83 INS39 INS59 INS83 INS83 INS43 INS59 MOV43 INS59 MOV43 INS59 INS83 INS43 INS59 INS83 UPD42 INS44 INS44 INS8 INS83 INS43 INS8 INS83 INS8 INS83 INS8 INS83 INS43 INS42 INS8 INS83 MOV39 MOV42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS8 INS83 MOV44 INS8 INS83 MOV44 INS8 INS83 MOV44 INS8 INS83 MOV44 INS8 INS83 INS43 INS8 INS83 UPD39 UPD42 MOV44 INS8 INS83 MOV44 INS8 INS83 UPD39 INS42 MOV44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV43 INS42 INS39 INS42 INS21 INS21 INS42 INS41 INS41 INS21 INS42 INS25 INS41 MOV43 INS42 INS21 MOV42 INS25 INS41 INS21 INS25 INS21 INS25 INS21 INS41 INS41 INS42 INS25 INS41 INS41 INS25 INS21 INS21 INS7 INS7 INS42 INS42 INS7 INS27 INS8 INS42 INS7 INS27 INS8 INS42 INS7 INS27 INS8 INS32 INS27 INS8 INS32 INS27 INS27 INS27 INS8 INS42 INS27 INS27 INS8 INS32 INS7 INS22 INS42 INS22 INS42 INS42 INS42 INS42 INS33 INS41 INS42 INS42 INS42 INS33 INS41 INS42 INS42 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS33 INS21 INS42 INS42 INS42 INS36 INS32 INS36 INS32 INS42 INS33 INS41 INS36 INS32 INS42 INS33 INS21 INS42 INS42 INS42 INS22 INS42 INS52 INS42 INS52 INS42 INS40 INS40 INS7 INS7 INS27 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS40 INS27 INS42 INS42 INS42 INS7 INS52 INS42 INS42 INS14 INS42 INS14 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS14 INS43 INS43 INS43 INS42 INS42 INS42 DEL42 DEL31 DEL43 DEL42 DEL44 DEL31 DEL42