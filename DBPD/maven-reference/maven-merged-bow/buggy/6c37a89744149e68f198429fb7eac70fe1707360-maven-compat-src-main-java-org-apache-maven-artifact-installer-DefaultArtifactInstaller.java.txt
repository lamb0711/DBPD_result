[MNG-4756] Aether integration


git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@988749 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.IOException;
+import org.apache.maven.RepositoryUtils;
-import org.apache.maven.artifact.repository.metadata.RepositoryMetadataInstallationException;
-import org.apache.maven.artifact.repository.metadata.RepositoryMetadataManager;
-import org.apache.maven.repository.DefaultLocalRepositoryMaintainerEvent;
-import org.apache.maven.repository.LocalRepositoryMaintainer;
-import org.apache.maven.repository.LocalRepositoryMaintainerEvent;
-import org.apache.maven.repository.legacy.resolver.transform.ArtifactTransformationManager;
+import org.apache.maven.artifact.repository.metadata.ArtifactRepositoryMetadata;
+import org.apache.maven.artifact.repository.metadata.MetadataBridge;
+import org.apache.maven.artifact.repository.metadata.Snapshot;
+import org.apache.maven.artifact.repository.metadata.SnapshotArtifactRepositoryMetadata;
+import org.apache.maven.artifact.repository.metadata.Versioning;
+import org.apache.maven.plugin.LegacySupport;
+import org.apache.maven.project.artifact.ProjectArtifactMetadata;
-import org.codehaus.plexus.util.FileUtils;
+import org.sonatype.aether.RepositorySystem;
+import org.sonatype.aether.installation.InstallRequest;
+import org.sonatype.aether.installation.InstallationException;
+import org.sonatype.aether.repository.LocalRepository;
+import org.sonatype.aether.util.DefaultRepositorySystemSession;
+import org.sonatype.aether.util.artifact.SubArtifact;
-    @Requirement
-    private ArtifactTransformationManager transformationManager;
-    private RepositoryMetadataManager repositoryMetadataManager;
-
-    @Requirement( optional = true )
-    private LocalRepositoryMaintainer localRepositoryMaintainer;
-
+    private RepositorySystem repoSystem;
+    
+    @Requirement
+    private LegacySupport legacySupport;
+    
-        try
+        DefaultRepositorySystemSession session =
+            new DefaultRepositorySystemSession( legacySupport.getRepositorySession() );
+        LocalRepository localRepo = new LocalRepository( localRepository.getBasedir() );
+        session.setLocalRepositoryManager( repoSystem.newLocalRepositoryManager( localRepo ) );
+
+        InstallRequest request = new InstallRequest();
+
+        org.sonatype.aether.artifact.Artifact mainArtifact = RepositoryUtils.toArtifact( artifact );
+        mainArtifact = mainArtifact.setFile( source );
+        request.addArtifact( mainArtifact );
+
+        for ( ArtifactMetadata metadata : artifact.getMetadataList() )
-            transformationManager.transformForInstall( artifact, localRepository );
-
-            String localPath = localRepository.pathOf( artifact );
-
-            // TODO: use a file: wagon and the wagon manager?
-            File destination = new File( localRepository.getBasedir(), localPath );
-            if ( !destination.getParentFile().exists() )
+            if ( metadata instanceof ProjectArtifactMetadata )
-                destination.getParentFile().mkdirs();
+                org.sonatype.aether.artifact.Artifact pomArtifact = new SubArtifact( mainArtifact, "", "pom" );
+                pomArtifact = pomArtifact.setFile( ( (ProjectArtifactMetadata) metadata ).getFile() );
+                request.addArtifact( pomArtifact );
-
-            boolean copy =
-                !destination.exists() || "pom".equals( artifact.getType() )
-                    || source.lastModified() != destination.lastModified() || source.length() != destination.length();
-
-            if ( copy )
+            else if ( metadata instanceof SnapshotArtifactRepositoryMetadata
+                || metadata instanceof ArtifactRepositoryMetadata )
-                getLogger().info( "Installing " + source + " to " + destination );
-
-                FileUtils.copyFile( source, destination );
-                destination.setLastModified( source.lastModified() );
+                // eaten, handled by repo system
-                getLogger().info( "Skipped re-installing " + source + " to " + destination + ", seems unchanged" );
+                request.addMetadata( new MetadataBridge( metadata ) );
+        }
-            // must be after the artifact is installed
-            for ( ArtifactMetadata metadata : artifact.getMetadataList() )
-            {
-                repositoryMetadataManager.install( metadata, localRepository );
-            }
-            // TODO: would like to flush this, but the plugin metadata is added in advance, not as an install/deploy
-            // transformation
-            // This would avoid the need to merge and clear out the state during deployment
-            // artifact.getMetadataList().clear();
+        try
+        {
+            repoSystem.install( session, request );
+        }
+        catch ( InstallationException e )
+        {
+            throw new ArtifactInstallationException( e.getMessage(), e );
+        }
-            if ( localRepositoryMaintainer != null )
-            {
-                LocalRepositoryMaintainerEvent event =
-                    new DefaultLocalRepositoryMaintainerEvent( localRepository, artifact, destination );
-                localRepositoryMaintainer.artifactInstalled( event );
-            }
-        }
-        catch ( IOException e )
+        /*
+         * NOTE: Not used by Maven core, only here to provide backward-compat with plugins like the Install Plugin.
+         */
+
+        if ( artifact.isSnapshot() )
-            throw new ArtifactInstallationException( "Error installing artifact: " + e.getMessage(), e );
+            Snapshot snapshot = new Snapshot();
+            snapshot.setLocalCopy( true );
+            artifact.addMetadata( new SnapshotArtifactRepositoryMetadata( artifact, snapshot ) );
-        catch ( RepositoryMetadataInstallationException e )
+
+        Versioning versioning = new Versioning();
+        versioning.updateTimestamp();
+        versioning.addVersion( artifact.getBaseVersion() );
+        if ( artifact.isRelease() )
-            throw new ArtifactInstallationException( "Error installing artifact's metadata: " + e.getMessage(), e );
+            versioning.setRelease( artifact.getBaseVersion() );
+        artifact.addMetadata( new ArtifactRepositoryMetadata( artifact, versioning ) );
-}
+
+}

INS26 INS26 INS26 INS26 INS26 INS26 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 UPD43 MOV78 UPD43 UPD42 UPD42 UPD42 UPD42 INS60 MOV60 MOV21 INS60 INS60 INS21 MOV21 INS70 INS54 INS25 INS60 INS21 INS21 INS25 INS21 INS43 INS59 UPD43 UPD43 MOV43 INS59 INS43 MOV59 INS7 MOV44 MOV32 INS8 INS8 MOV12 INS32 INS8 UPD43 MOV43 INS59 INS32 INS32 INS32 INS8 INS32 INS42 INS42 INS14 UPD42 UPD42 INS42 UPD42 INS32 UPD42 INS42 INS14 INS40 UPD42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 INS25 MOV21 UPD42 MOV42 UPD42 MOV42 INS60 MOV21 MOV21 UPD42 UPD42 MOV42 INS14 INS42 INS42 INS42 INS42 INS32 INS42 INS42 MOV21 INS42 INS42 INS14 INS43 INS32 UPD43 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS43 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS62 INS8 INS25 UPD43 INS43 INS59 UPD43 MOV43 INS42 INS42 UPD43 MOV43 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 INS43 INS60 INS21 INS21 INS27 INS8 INS8 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS14 INS42 INS42 INS9 UPD42 UPD42 INS14 UPD42 UPD42 INS42 INS32 UPD42 INS42 INS43 INS59 INS7 INS32 INS62 INS62 MOV21 MOV32 INS43 INS43 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS40 INS42 INS14 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS43 INS42 INS45 INS45 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS42 UPD42 MOV42 UPD42 INS14 INS42 INS36 INS42 INS43 INS42 INS11 INS42 INS43 INS42 INS42 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL42 DEL9 DEL80 DEL77 DEL42 DEL32 DEL32 DEL45 DEL42 DEL45 DEL42 DEL27 DEL45 DEL27 DEL42 DEL32 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL27 DEL42 DEL42 DEL60 DEL32 DEL32 DEL38 DEL8 DEL25 DEL39 DEL42 DEL42 DEL42 DEL32 DEL38 DEL45 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL32 DEL27 DEL27 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL27 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL8 DEL25 DEL8 DEL70 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL14 DEL59 DEL60 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL45 DEL42 DEL42 DEL32 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54