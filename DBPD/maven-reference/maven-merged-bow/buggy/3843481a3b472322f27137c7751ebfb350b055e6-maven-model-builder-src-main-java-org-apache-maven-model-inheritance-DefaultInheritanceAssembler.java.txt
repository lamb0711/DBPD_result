o Fixed order of inherited plugins

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@785644 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.LinkedHashMap;
+import java.util.List;
+import org.apache.maven.model.Plugin;
+import org.apache.maven.model.PluginContainer;
+import org.apache.maven.model.ReportPlugin;
+import org.apache.maven.model.Reporting;
-    private MavenModelMerger merger = new MavenModelMerger();
+    private InheritanceModelMerger merger = new InheritanceModelMerger();
+    private static class InheritanceModelMerger
+        extends MavenModelMerger
+    {
+
+        @Override
+        protected void mergePluginContainer_Plugins( PluginContainer target, PluginContainer source,
+                                                     boolean sourceDominant, Map<Object, Object> context )
+        {
+            List<Plugin> src = source.getPlugins();
+            if ( !src.isEmpty() )
+            {
+                List<Plugin> tgt = target.getPlugins();
+                Map<Object, Plugin> merged = new LinkedHashMap<Object, Plugin>( ( src.size() + tgt.size() ) * 2 );
+
+                for ( Iterator<Plugin> it = src.iterator(); it.hasNext(); )
+                {
+                    Plugin element = it.next();
+                    Object key = getPluginKey( element );
+                    if ( element.isInherited() )
+                    {
+                        // NOTE: Enforce recursive merge to trigger merging/inheritance logic for executions as well
+                        Plugin plugin = new Plugin();
+                        plugin.setGroupId( element.getGroupId() );
+                        plugin.setArtifactId( element.getArtifactId() );
+                        mergePlugin( plugin, element, sourceDominant, context );
+
+                        merged.put( key, plugin );
+                    }
+                }
+
+                for ( Iterator<Plugin> it = tgt.iterator(); it.hasNext(); )
+                {
+                    Plugin element = it.next();
+                    Object key = getPluginKey( element );
+                    Plugin existing = merged.get( key );
+                    if ( existing != null )
+                    {
+                        mergePlugin( element, existing, sourceDominant, context );
+                    }
+                    merged.put( key, element );
+                }
+
+                target.setPlugins( new ArrayList<Plugin>( merged.values() ) );
+            }
+        }
+
+        @Override
+        protected void mergeReporting_Plugins( Reporting target, Reporting source, boolean sourceDominant,
+                                               Map<Object, Object> context )
+        {
+            List<ReportPlugin> src = source.getPlugins();
+            if ( !src.isEmpty() )
+            {
+                List<ReportPlugin> tgt = target.getPlugins();
+                Map<Object, ReportPlugin> merged =
+                    new LinkedHashMap<Object, ReportPlugin>( ( src.size() + tgt.size() ) * 2 );
+
+                for ( Iterator<ReportPlugin> it = src.iterator(); it.hasNext(); )
+                {
+                    ReportPlugin element = it.next();
+                    Object key = getReportPluginKey( element );
+                    if ( element.isInherited() )
+                    {
+                        // NOTE: Enforce recursive merge to trigger merging/inheritance logic for executions as well
+                        ReportPlugin plugin = new ReportPlugin();
+                        plugin.setGroupId( element.getGroupId() );
+                        plugin.setArtifactId( element.getArtifactId() );
+                        mergeReportPlugin( plugin, element, sourceDominant, context );
+
+                        merged.put( key, plugin );
+                    }
+                }
+
+                for ( Iterator<ReportPlugin> it = tgt.iterator(); it.hasNext(); )
+                {
+                    ReportPlugin element = it.next();
+                    Object key = getReportPluginKey( element );
+                    ReportPlugin existing = merged.get( key );
+                    if ( existing != null )
+                    {
+                        mergeReportPlugin( element, existing, sourceDominant, context );
+                    }
+                    merged.put( key, element );
+                }
+
+                target.setPlugins( new ArrayList<ReportPlugin>( merged.values() ) );
+            }
+        }
+    }
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS55 INS43 INS83 INS83 INS42 MOV43 INS31 INS31 INS42 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS8 UPD43 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS74 INS42 INS60 INS25 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS74 INS42 INS60 INS25 UPD42 INS42 INS42 INS43 INS43 INS43 INS74 INS59 INS38 INS8 INS42 INS42 INS43 INS43 INS43 INS74 INS59 INS38 INS8 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS32 INS60 INS60 INS24 INS24 INS21 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS32 INS60 INS60 INS24 INS24 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS74 INS59 INS58 INS32 INS8 INS58 INS32 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS74 INS59 INS58 INS32 INS8 INS58 INS32 INS8 INS32 INS43 INS43 INS42 INS32 INS43 INS43 INS43 INS42 INS14 INS74 INS59 INS42 INS42 INS60 INS60 INS25 INS74 INS59 INS42 INS42 INS60 INS60 INS60 INS25 INS21 INS42 INS42 INS14 INS43 INS43 INS42 INS32 INS43 INS43 INS43 INS42 INS14 INS74 INS59 INS42 INS42 INS60 INS60 INS25 INS74 INS59 INS42 INS42 INS60 INS60 INS60 INS25 INS21 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS27 INS43 INS43 INS42 INS32 INS43 INS59 INS43 INS59 INS32 INS8 INS43 INS43 INS42 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS27 INS8 INS32 INS74 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS27 INS43 INS43 INS42 INS32 INS43 INS59 INS43 INS59 INS32 INS8 INS43 INS43 INS42 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS27 INS8 INS32 INS74 INS32 INS43 INS43 INS43 INS36 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS60 INS21 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS43 INS43 INS43 INS36 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS60 INS21 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42