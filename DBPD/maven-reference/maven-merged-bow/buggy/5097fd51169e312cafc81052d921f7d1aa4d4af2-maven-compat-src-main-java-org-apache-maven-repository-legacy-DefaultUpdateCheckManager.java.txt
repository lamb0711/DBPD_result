[MNG-4343] maven always checks missing release artifacts

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@816563 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.repository.Authentication;
-        // Update intervals are never used for release artifacts. These intervals
-        // only exist on the release section of the repository definition in the POM for one reason:
-        // to specify how often artifact METADATA is checked. Here, we simply shortcut for non-snapshot
-        // artifacts.
-        if ( !artifact.isSnapshot() )
+        File file = artifact.getFile();
+
+        ArtifactRepositoryPolicy policy = artifact.isSnapshot() ? repository.getSnapshots() : repository.getReleases();
+
+        if ( !policy.isEnabled() )
-            getLogger().debug( "Skipping update check for non-snapshot artifact " + artifact );
+            if ( getLogger().isDebugEnabled() )
+            {
+                getLogger().debug(
+                                   "Skipping update check for " + artifact + " (" + file + ") from "
+                                       + repository.getId() + " (" + repository.getUrl() + ")" );
+            }
+
-        // we can safely assume that we're calculating based on the snapshot policy here if we've made it past the
-        // release-artifact short circuit above.
-        ArtifactRepositoryPolicy policy = repository.getSnapshots();
-
-        return isUpdateRequired( artifact, repository, policy );
-    }
-
-    private boolean isUpdateRequired( Artifact artifact, ArtifactRepository repository, ArtifactRepositoryPolicy policy )
-    {
-        File file = artifact.getFile();
-
-                               "Determining update check for " + artifact + " (" + file + ") from " + repository
-                                   + " (enabled = " + policy.isEnabled() + ")" );
-        }
-
-        if ( !policy.isEnabled() )
-        {
-            return false;
+                               "Determining update check for " + artifact + " (" + file + ") from "
+                                   + repository.getId() + " (" + repository.getUrl() + ")" );
-            lastCheckDate = readLastUpdated( touchfile, repository.getId() );
+            lastCheckDate = readLastUpdated( touchfile, getRepositoryKey( repository ) );
+        if ( !policy.isEnabled() )
+        {
+            if ( getLogger().isDebugEnabled() )
+            {
+                getLogger().debug(
+                                   "Skipping update check for " + metadata.getKey() + " (" + file + ") from "
+                                       + repository.getId() + " (" + repository.getUrl() + ")" );
+            }
+
+            return false;
+        }
+
-                               "Determining update check for " + metadata + " (" + file + ") from " + repository
-                                   + " (snapshot = " + metadata.isSnapshot() + ", enabled = " + policy.isEnabled()
-                                   + ")" );
-        }
-
-        if ( !policy.isEnabled() )
-        {
-            return false;
+                               "Determining update check for " + metadata.getKey() + " (" + file + ") from "
+                                   + repository.getId() + " (" + repository.getUrl() + ")" );
-    public Date readLastUpdated( RepositoryMetadata metadata, ArtifactRepository repository, File file )
+    private Date readLastUpdated( RepositoryMetadata metadata, ArtifactRepository repository, File file )
-            writeLastUpdated( touchfile, repository.getId() );
+            writeLastUpdated( touchfile, getRepositoryKey( repository ) );
-
-    public String getMetadataKey( ArtifactRepository repository, File file )
+    String getMetadataKey( ArtifactRepository repository, File file )
-        return repository.getId() + "." + file.getName() + LAST_UPDATE_TAG;
+        return repository.getId() + '.' + file.getName() + LAST_UPDATE_TAG;
+    }
+
+    String getRepositoryKey( ArtifactRepository repository )
+    {
+        StringBuilder buffer = new StringBuilder( 256 );
+
+        // consider the username&password because a repo manager might block artifacts depending on authorization
+        Authentication auth = repository.getAuthentication();
+        if ( auth != null )
+        {
+            int hash = ( auth.getUsername() + auth.getPassword() ).hashCode();
+            buffer.append( hash ).append( '@' );
+        }
+
+        // consider the URL (instead of the id) as this most closely relates to the contents in the repo
+        buffer.append( repository.getUrl() );
+
+        return buffer.toString();
-    public File getTouchfile( Artifact artifact )
+    File getTouchfile( Artifact artifact )
-        StringBuilder sb = new StringBuilder();
+        StringBuilder sb = new StringBuilder( 128 );
-    public File getTouchfile( RepositoryMetadata metadata, File file )
+    File getTouchfile( RepositoryMetadata metadata, File file )
-    public boolean isPomUpdateRequired( Artifact artifact, ArtifactRepository repository )
-    {
-        return isUpdateRequired( artifact, repository, repository.getReleases() );
-    }
-

INS26 INS40 INS31 UPD83 UPD83 INS43 INS42 MOV44 INS8 MOV60 INS25 INS25 INS42 INS60 INS60 INS25 INS21 INS41 MOV38 INS8 MOV32 MOV38 INS8 INS32 INS43 INS59 INS43 INS59 INS27 INS8 INS32 INS32 MOV43 INS16 MOV25 MOV41 INS21 MOV25 MOV41 INS32 INS42 INS21 INS13 INS42 INS42 INS14 UPD42 MOV42 INS42 INS32 UPD42 MOV42 INS33 INS60 INS21 UPD42 MOV42 UPD42 MOV42 MOV32 INS42 INS42 MOV32 MOV32 INS32 INS32 INS32 INS42 INS32 INS43 INS34 UPD42 MOV42 INS42 INS39 INS59 INS32 UPD42 MOV43 INS34 INS42 INS42 INS32 INS42 MOV32 INS42 INS27 INS32 INS42 INS27 INS42 INS42 INS32 INS32 INS42 INS13 INS42 INS45 INS42 INS45 INS42 INS45 MOV32 INS45 INS32 INS45 INS32 INS42 INS45 INS32 INS45 INS42 INS45 INS32 INS45 INS32 INS45 UPD42 UPD42 INS36 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 UPD45 INS32 UPD45 UPD45 INS32 INS32 UPD45 INS32 INS32 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 UPD42 MOV42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 DEL83 DEL39 DEL42 DEL43 DEL42 DEL44 DEL38 DEL45 DEL27 DEL32 DEL21 DEL8 DEL25 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL44 DEL42 DEL9 DEL41 DEL42 DEL42 DEL45 DEL42 DEL32 DEL83 DEL45 DEL83 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL32 DEL41 DEL8 DEL31