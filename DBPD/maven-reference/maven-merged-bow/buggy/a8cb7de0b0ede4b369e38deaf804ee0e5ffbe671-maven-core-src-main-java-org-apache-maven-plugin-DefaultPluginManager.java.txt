o Added plugin version management/enforcement through the POM's build section.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163525 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.util.StringUtils;
-    public void processPluginDescriptor( MavenPluginDescriptor mavenPluginDescriptor )
-        throws CycleDetectedException
+    public void processPluginDescriptor( MavenPluginDescriptor mavenPluginDescriptor ) throws CycleDetectedException
-    public void verifyPluginForGoal( String goalName, MavenSession session )
-        throws Exception
+    public void verifyPluginForGoal( String goalName, MavenSession session ) throws Exception
-    public void verifyPlugin( String groupId, String artifactId, MavenSession session )
-        throws Exception
+    public void verifyPlugin( String groupId, String artifactId, MavenSession session ) throws Exception
-            //   we definitely need better version extraction support.
-
-            String version = "1.0-SNAPSHOT";
+                MavenProject project = session.getProject();
+
+                List projectPlugins = project.getPlugins();
+
+                org.apache.maven.model.Plugin pluginConfig = null;
+
+                for ( Iterator it = project.getPlugins().iterator(); it.hasNext(); )
+                {
+                    org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) it.next();
+
+                    if ( groupId.equals( plugin.getGroupId() ) && artifactId.equals( plugin.getArtifactId() ) )
+                    {
+                        pluginConfig = plugin;
+                        break;
+                    }
+                }
+
+                String version = null;
+
+                if ( pluginConfig != null )
+                {
+                    if ( StringUtils.isEmpty( pluginConfig.getVersion() ) )
+                    {
+                        throw new PluginVersionNotConfiguredException( groupId, artifactId );
+                    }
+                    else
+                    {
+                        version = pluginConfig.getVersion();
+                    }
+                }
+
+                // TODO: Default over to a sensible value (is 1.0-SNAPSHOT right?)
+                if ( StringUtils.isEmpty( version ) )
+                {
+                    version = "1.0-SNAPSHOT";
+                }
+
-    protected void addPlugin( Artifact pluginArtifact, MavenSession session )
-        throws Exception
+    protected void addPlugin( Artifact pluginArtifact, MavenSession session ) throws Exception
-    public PluginExecutionResponse executeMojo( MavenSession session, String goalName )
-        throws GoalExecutionException
+    public PluginExecutionResponse executeMojo( MavenSession session, String goalName ) throws GoalExecutionException
-    private void releaseComponents( MojoDescriptor goal, PluginExecutionRequest request )
-        throws Exception
+    private void releaseComponents( MojoDescriptor goal, PluginExecutionRequest request ) throws Exception
-    public static Map createParameters( MojoDescriptor goal, MavenSession session )
-        throws PluginConfigurationException
+    public static Map createParameters( MojoDescriptor goal, MavenSession session ) throws PluginConfigurationException
-        message.append( "The '" + parameter.getName() ).append( "' parameter is required for the execution of the " ).append(
-            mojo.getId() ).append( " mojo and cannot be null." );
+        message.append( "The '" + parameter.getName() ).append( "' parameter is required for the execution of the " )
+               .append( mojo.getId() ).append( " mojo and cannot be null." );
-    public void contextualize( Context context )
-        throws ContextException
+    public void contextualize( Context context ) throws ContextException
-        artifactFilter = new ExclusionSetFilter( new String[]{"maven-core", "maven-artifact", "maven-model",
-                                                              "maven-monitor", "maven-plugin", "plexus-container-api",
-                                                              "plexus-container-default", "plexus-artifact-container",
-                                                              "wagon-provider-api", "classworlds"} );
+        artifactFilter = new ExclusionSetFilter( new String[] {
+            "maven-core",
+            "maven-artifact",
+            "maven-model",
+            "maven-monitor",
+            "maven-plugin",
+            "plexus-container-api",
+            "plexus-container-default",
+            "plexus-artifact-container",
+            "wagon-provider-api",
+            "classworlds" } );
-                                                MavenProjectBuilder mavenProjectBuilder )
+                                               MavenProjectBuilder mavenProjectBuilder )

INS26 INS40 INS8 MOV60 INS54 INS8 MOV8 INS60 INS60 INS60 INS24 MOV60 INS25 INS25 MOV21 MOV60 MOV21 INS43 INS59 INS43 INS59 INS43 INS59 INS58 INS32 INS8 INS27 INS8 INS32 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS40 INS42 INS33 INS43 INS59 INS42 INS42 INS60 INS25 INS33 INS42 INS33 INS25 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS27 INS8 INS32 INS8 INS8 INS7 INS32 INS42 INS40 INS42 INS11 INS32 INS32 INS21 INS10 INS42 INS42 INS32 INS53 INS21 INS42 INS45 INS42 INS42 INS43 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS7 INS42 INS42 INS14 INS7 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS42 DEL45 DEL8 DEL54 DEL8