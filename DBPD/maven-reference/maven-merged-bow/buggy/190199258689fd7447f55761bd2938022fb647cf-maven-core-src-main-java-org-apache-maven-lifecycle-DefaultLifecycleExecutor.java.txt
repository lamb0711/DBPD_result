PR: MNG-122
exception clean up phase 2

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@320675 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.plugin.InvalidPluginException;
+import org.apache.maven.plugin.PluginConfigurationException;
+import org.apache.maven.project.artifact.InvalidDependencyVersionException;
+        catch ( InvalidDependencyVersionException e )
+        {
+            // TODO: should be dispatchFailure?
+            dispatcher.dispatchError( event, target, e );
+
+            handleExecutionFailure( rm, project, e, task, buildStartTime );
+        }
-        ArtifactResolutionException, MojoFailureException
+        ArtifactResolutionException, MojoFailureException, InvalidDependencyVersionException
-        ArtifactNotFoundException
+        ArtifactNotFoundException, InvalidDependencyVersionException
-        ArtifactNotFoundException
+        ArtifactNotFoundException, InvalidDependencyVersionException
-        ArtifactNotFoundException
+        ArtifactNotFoundException, InvalidDependencyVersionException
-                throw new LifecycleExecutionException(
-                    "Internal error in the plugin manager executing goal '" + mojoDescriptor.getId(), e );
+                throw new LifecycleExecutionException( "Internal error in the plugin manager executing goal '" +
+                    mojoDescriptor.getId() + "': " + e.getMessage(), e );
+                        "Error getting reports from the plugin '" + reportPlugin.getKey() + "': " + e.getMessage(), e );
+                }
+                catch ( PluginConfigurationException e )
+                {
+                    throw new LifecycleExecutionException(
-        ArtifactNotFoundException
+        ArtifactNotFoundException, InvalidDependencyVersionException
-        ArtifactNotFoundException
+        ArtifactNotFoundException, InvalidDependencyVersionException
-        for ( Iterator i = project.getBuildPlugins().iterator(); i.hasNext(); )
+        Object pluginComponent = null;
+
+        for ( Iterator i = project.getBuildPlugins().iterator(); i.hasNext() && pluginComponent == null; )
-                    return pluginManager.getPluginComponent( plugin, role, roleHint );
+                    pluginComponent = pluginManager.getPluginComponent( plugin, role, roleHint );
-                        "Error getting extensions from the plugin '" + plugin.getKey() + "'", e );
+                        "Error getting extensions from the plugin '" + plugin.getKey() + "': " + e.getMessage(), e );
-        return null;
+        return pluginComponent;
-                    throw new LifecycleExecutionException( "Error looking up available components from a plugin", e );
+                    throw new LifecycleExecutionException( "Error looking up available components from plugin '" +
+                        plugin.getKey() + "': " + e.getMessage(), e );
-            throw new LifecycleExecutionException( "Internal error in the plugin manager", e );
+            throw new LifecycleExecutionException(
+                "Internal error in the plugin manager getting plugin '" + plugin.getKey() + "': " + e.getMessage(), e );
+        catch ( InvalidPluginException e )
+        {
+            throw new LifecycleExecutionException( "Error resolving plugin version", e );
+        }
-            throw new LifecycleExecutionException( "Internal error in the plugin manager", e );
+            throw new LifecycleExecutionException(
+                "Internal error in the plugin manager getting report '" + plugin.getKey() + "': " + e.getMessage(), e );
+        catch ( InvalidPluginException e )
+        {
+            throw new LifecycleExecutionException( "Error resolving plugin version", e );
+        }
-                try
-                {
-                    plugin = pluginManager.getPluginDefinitionForPrefix( prefix, session, project );
-                }
-                catch ( PluginManagerException e )
-                {
-                    throw new LifecycleExecutionException(
-                        "Cannot resolve plugin-prefix: \'" + prefix + "\' from plugin mappings metadata.", e );
-                }
+                plugin = pluginManager.getPluginDefinitionForPrefix( prefix, session, project );

INS26 INS26 INS26 INS40 INS40 INS40 INS43 INS43 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS60 INS41 MOV12 INS12 INS43 INS59 INS27 INS42 INS12 INS12 INS44 INS8 INS42 INS42 INS33 MOV32 INS27 INS44 INS8 MOV44 INS44 INS8 INS43 INS42 INS21 INS21 INS42 INS33 INS43 INS42 INS53 UPD43 MOV43 INS43 INS42 INS53 MOV8 INS42 INS32 INS32 INS42 INS14 UPD42 MOV42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS12 INS43 INS27 INS42 UPD45 INS27 INS42 MOV43 INS45 INS42 MOV44 INS8 INS44 INS21 INS42 INS45 INS32 INS45 INS32 INS45 INS32 INS45 INS32 INS53 INS43 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS14 INS42 INS42 MOV32 INS42 INS42 INS43 INS27 INS42 MOV43 MOV43 INS27 INS42 INS42 INS45 INS32 INS45 INS32 UPD45 INS32 INS45 INS32 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL41 DEL33 DEL41 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8