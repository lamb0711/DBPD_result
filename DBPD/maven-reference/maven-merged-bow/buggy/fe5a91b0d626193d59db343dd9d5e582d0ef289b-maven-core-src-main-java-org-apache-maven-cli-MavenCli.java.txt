Working on: MNG-483

Fixing profile application to separate profiles discovered in and around POM from those in settings.xml, and apply them separately in the order: 

for-each-project-in-inheritance:{POM, profiles.xml}, settings.xml

Added common interface for accumulating, explicitly activating and deactivating, and retrieving profiles to be applied to a given project. This manager interface (ProfileManager) is general enough to be applicable to both the project-level and settings-level profiles.

Added 'performRelease'-keyed profile to super-POM which will be used by the release plugin and anyone using a parallel process, and which will enable '-DupdateReleaseInfo=true' for the deploy mojo, along with enabling the source attachment for the project.

Added 'attach' parameter to JarSourceMojo to allow local POM to turn off source attachments, overriding release profile in super-pom.

Updated the release:perform mojo to use '-DperformRelease=true' for switching on the new release profile, rather than just using '-DupdateReleaseInfo=true'...



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@233013 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.profiles.activation.ProfileActivationUtils;
+import org.apache.maven.profiles.DefaultProfileManager;
+import org.apache.maven.profiles.ProfileManager;
+import java.util.StringTokenizer;
-        if ( commandLine.hasOption( CLIManager.ACTIVATE_PROFILES ) )
-        {
-            System.setProperty( ProfileActivationUtils.ACTIVE_PROFILE_IDS,
-                                commandLine.getOptionValue( CLIManager.ACTIVATE_PROFILES ) );
-        }
-
-        LoggerManager manager = null;
+        LoggerManager loggerManager = null;
-            manager = (LoggerManager) embedder.lookup( LoggerManager.ROLE );
+            loggerManager = (LoggerManager) embedder.lookup( LoggerManager.ROLE );
-                manager.setThreshold( Logger.LEVEL_DEBUG );
+                loggerManager.setThreshold( Logger.LEVEL_DEBUG );
+            }
+            
+            ProfileManager profileManager = new DefaultProfileManager( embedder.getContainer() );
+            
+            if ( commandLine.hasOption( CLIManager.ACTIVATE_PROFILES ) )
+            {
+                String profilesLine = commandLine.getOptionValue( CLIManager.ACTIVATE_PROFILES );
+                
+                StringTokenizer profileTokens = new StringTokenizer( profilesLine, "," );
+                
+                while( profileTokens.hasMoreTokens() )
+                {
+                    String profileAction = profileTokens.nextToken().trim();
+                    
+                    if ( profileAction.startsWith( "-" ) )
+                    {
+                        profileManager.explicitlyDeactivate( profileAction.substring( 1 ) );
+                    }
+                    else if ( profileAction.startsWith( "+" ) )
+                    {
+                        profileManager.explicitlyActivate(profileAction.substring( 1 ) );
+                    }
+                    else
+                    {
+                        // TODO: deprecate this eventually!
+                        profileManager.explicitlyActivate( profileAction );
+                    }
+                }
-            request = createRequest( embedder, commandLine, settings, eventDispatcher, manager );
+            request = createRequest( embedder, commandLine, settings, eventDispatcher, loggerManager, profileManager );
-            if ( manager != null )
+            if ( loggerManager != null )
-                    embedder.release( manager );
+                    embedder.release( loggerManager );
-                                                        LoggerManager manager )
+                                                        LoggerManager loggerManager, ProfileManager profileManager )
-                                                    commandLine.getArgList(), userDir.getPath() );
+                                                    commandLine.getArgList(), userDir.getPath(), profileManager );
-        Logger logger = manager.getLoggerForComponent( Mojo.ROLE );
+        Logger logger = loggerManager.getLoggerForComponent( Mojo.ROLE );

INS26 INS26 INS40 UPD40 INS40 INS44 UPD42 INS43 INS42 INS42 UPD42 INS60 INS25 INS43 INS59 MOV32 INS8 INS42 UPD42 UPD42 INS42 INS42 INS14 INS60 INS60 INS61 UPD42 INS43 INS32 INS43 INS59 INS43 INS59 INS32 INS8 UPD42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS14 INS42 INS42 INS60 INS25 INS43 INS42 INS45 INS43 INS59 INS32 INS8 INS25 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS21 INS32 INS8 INS8 UPD42 INS32 INS42 INS32 INS42 INS42 INS45 INS21 INS21 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS34 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS34 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL25