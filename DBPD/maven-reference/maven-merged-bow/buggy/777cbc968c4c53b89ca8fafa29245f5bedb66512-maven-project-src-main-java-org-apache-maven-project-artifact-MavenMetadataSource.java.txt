ensure failed artifact path is passed through to all resolution exceptions

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191953 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.resolver.ArtifactResolutionException;
-import org.apache.maven.model.Model;
-import org.codehaus.plexus.util.IOUtil;
-import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.FileReader;
-import java.io.IOException;
-    public MavenMetadataSource( ArtifactResolver artifactResolver, ArtifactFactory artifactFactory )
-    {
-        this.artifactResolver = artifactResolver;
-        this.mavenProjectBuilder = null;
-        this.artifactFactory = artifactFactory;
-    }
-
-        throws ArtifactMetadataRetrievalException, ArtifactResolutionException
+        throws ArtifactMetadataRetrievalException
+        // TODO: this a very thin wrapper around a project builder - is it needed?
-        if ( mavenProjectBuilder != null )
+        try
-            try
-            {
-                MavenProject p = mavenProjectBuilder.buildFromRepository( pomArtifact, remoteRepositories,
-                                                                          localRepository );
-                dependencies = p.getDependencies();
-                artifact.setDownloadUrl( pomArtifact.getDownloadUrl() );
-            }
-            catch ( ProjectBuildingException e )
-            {
-                throw new ArtifactMetadataRetrievalException( "Unable to read the metadata file", e );
-            }
+            MavenProject p = mavenProjectBuilder.buildFromRepository( pomArtifact, remoteRepositories,
+                                                                      localRepository );
+            dependencies = p.getDependencies();
+            artifact.setDownloadUrl( pomArtifact.getDownloadUrl() );
-        else
+        catch ( ProjectBuildingException e )
-            // there is code in plexus that uses this (though it shouldn't) so we
-            // need to be able to not have a project builder
-            // TODO: remove - which then makes this a very thin wrapper around a project builder - is it needed?
-
-            artifactResolver.resolve( pomArtifact, remoteRepositories, localRepository );
-
-            FileReader reader = null;
-            try
-            {
-//                String path = localRepository.pathOfMetadata( new ProjectArtifactMetadata( artifact, null ) );
-//                File file = new File( localRepository.getBasedir(), path );
-                File file = pomArtifact.getFile();
-                reader = new FileReader( file );
-                Model model = this.reader.read( reader );
-                dependencies = model.getDependencies();
-            }
-            catch ( FileNotFoundException e )
-            {
-                throw new ArtifactMetadataRetrievalException( "Unable to find the metadata file", e );
-            }
-            catch ( IOException e )
-            {
-                throw new ArtifactMetadataRetrievalException( "Unable to read the metadata file", e );
-            }
-            catch ( XmlPullParserException e )
-            {
-                throw new ArtifactMetadataRetrievalException( "Unable to parse the metadata file", e );
-            }
-            finally
-            {
-                IOUtil.close( reader );
-            }
+            throw new ArtifactMetadataRetrievalException( "Unable to read the metadata file", e );

MOV8 MOV60 MOV60 MOV41 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL33 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL42 DEL43 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8 DEL25 DEL8