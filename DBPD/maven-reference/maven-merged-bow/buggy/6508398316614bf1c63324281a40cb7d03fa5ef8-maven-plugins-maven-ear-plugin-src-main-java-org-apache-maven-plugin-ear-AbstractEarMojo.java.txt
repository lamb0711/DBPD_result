o Bumped version of plexus-container-default to 1.0-alpha-6-SNAPSHOT

o Committed changes to the EAR plugin on behalf of Stephane Nicoll,
  awaiting his commit privileges.
  Resolves MNG-621 and MNG-622.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@227088 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.plugin.ear.module.EarModule;
-import org.apache.maven.plugin.ear.module.EarModuleFactory;
+import org.apache.maven.plugin.MojoExecutionException;
+import java.util.Arrays;
-     * @description "the maven project to use"
+     * The ear modules configuration.
+     *
+     * @parameter
+     */
+    private EarModule[] modules;
+
+    /**
-    private String earDirectory;
+    private String workDirectory;
-    private List modules;
+    private List earModules;
-    protected List getModules()
+    public void execute()
+        throws MojoExecutionException
-        if ( modules == null )
+        getLog().debug( "Resolving ear modules ..." );
+
+        if ( modules != null && modules.length > 0 )
-            // Gather modules and copy them
-            modules = new ArrayList();
-            Set artifacts = project.getArtifacts();
-            for ( Iterator iter = artifacts.iterator(); iter.hasNext(); )
+
+            // Let's validate user-defined modules
+            EarModule module = null;
+            try
-                Artifact artifact = (Artifact) iter.next();
-                if ( !Artifact.SCOPE_TEST.equals( artifact.getScope())  ||
-                    !Artifact.SCOPE_PROVIDED.equals( artifact.getScope()) )
+                for ( int i = 0; i < modules.length; i++ )
-                    EarModule module = EarModuleFactory.newEarModule( artifact );
-                    modules.add( module );
+                    module = (EarModule) modules[i];
+                    getLog().debug( "Resolving ear module[" + module + "]" );
+                    module.resolveArtifact( project.getArtifacts() );
+            catch ( EarPluginException e )
+            {
+                throw new MojoExecutionException( "Failed to initialize ear modules", e );
+            }
+            earModules = new ArrayList( Arrays.asList( modules ) );
-        return modules;
+        else
+        {
+            earModules = new ArrayList();
+        }
+
+        // Let's add other modules
+        Set artifacts = project.getArtifacts();
+        for ( Iterator iter = artifacts.iterator(); iter.hasNext(); )
+        {
+            Artifact artifact = (Artifact) iter.next();
+
+            // Artifact is not yet registered and it has neither test, nor a
+            // provided scope
+            if ( !isArtifactRegistered( artifact, earModules ) && (
+                !Artifact.SCOPE_TEST.equals( artifact.getScope() ) ||
+                    !Artifact.SCOPE_PROVIDED.equals( artifact.getScope() ) ) )
+            {
+                EarModule module = EarModuleFactory.newEarModule( artifact );
+                earModules.add( module );
+            }
+        }
+
+    }
+
+    protected List getModules()
+    {
+        if ( earModules == null )
+        {
+            throw new IllegalStateException( "Ear modules have not been initialized" );
+        }
+        return earModules;
-            buildDir = new File( earDirectory );
+            buildDir = new File( workDirectory );
-    protected String getEarDirectory()
+    protected String getWorkDirectory()
-        return earDirectory;
+        return workDirectory;
+    }
+
+    private static boolean isArtifactRegistered( Artifact a, List currentList )
+    {
+        Iterator i = currentList.iterator();
+        while ( i.hasNext() )
+        {
+            EarModule em = (EarModule) i.next();
+            if ( em.getArtifact().equals( a ) )
+            {
+                return true;
+            }
+        }
+        return false;

MOV26 MOV23 UPD40 UPD40 INS23 INS31 INS31 INS29 INS5 INS83 MOV43 INS59 UPD83 INS39 UPD42 INS43 MOV8 INS83 MOV43 INS42 INS8 UPD42 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS65 INS65 INS43 INS85 UPD42 INS42 INS42 INS21 INS25 INS25 INS41 INS43 INS42 INS43 INS42 INS60 INS61 INS41 INS66 INS42 INS32 INS27 INS8 INS8 INS27 INS8 INS42 UPD42 INS42 INS42 INS43 INS59 INS32 INS8 INS9 INS32 INS42 INS45 INS27 INS27 INS60 INS54 INS21 MOV21 INS42 INS33 INS53 INS42 INS42 INS32 INS42 INS42 INS60 INS25 INS42 INS42 INS33 INS40 INS34 INS43 INS59 INS8 INS12 INS7 INS27 INS14 INS42 INS42 INS43 INS59 INS32 INS8 INS42 INS42 INS33 INS24 INS44 INS8 INS42 INS14 UPD42 INS38 INS36 INS43 INS45 INS42 INS42 INS11 INS32 INS42 INS42 INS41 INS58 INS27 INS37 INS8 INS43 INS42 INS53 INS43 INS32 INS32 MOV27 INS42 UPD42 INS43 INS32 INS42 INS42 INS9 INS39 INS59 INS42 INS40 INS42 INS21 INS21 INS21 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 INS34 INS7 INS32 INS32 INS43 INS45 INS42 INS42 INS11 INS32 INS42 INS27 INS42 INS42 INS32 INS42 INS43 INS2 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS42 DEL66 DEL65 DEL42 DEL33 DEL27 DEL25 DEL42 DEL41 DEL8