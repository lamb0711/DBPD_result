Rollback changes generalizing exception ctors; this destroys traceability in the code for which combinations of exceptions are used in the system to produce an error.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@587638 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
-import java.net.URI;
+import org.apache.maven.artifact.InvalidRepositoryException;
+import org.apache.maven.artifact.resolver.ArtifactNotFoundException;
+import org.apache.maven.artifact.resolver.ArtifactResolutionException;
+import org.apache.maven.artifact.versioning.InvalidVersionSpecificationException;
+import org.apache.maven.profiles.activation.ProfileActivationException;
+import org.apache.maven.project.artifact.InvalidDependencyVersionException;
+import org.apache.maven.project.interpolation.ModelInterpolationException;
+import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
+
+import java.io.IOException;
-    private URI pomUri;
+    private String pomLocation;
-    public ProjectBuildingException( String projectId, String message )
+    public ProjectBuildingException( String projectId,
+                                     String message )
-        this( message, projectId, (File) null );
+        super( message );
+        this.projectId = projectId;
-    /**
-     * @deprecated use {@link #ProjectBuildingException(String, String, File)}
-     * @param projectId
-     * @param message
-     * @param pomLocation absolute path of the pom file
-     */
-    protected ProjectBuildingException( String projectId, String message, String pomLocation )
+    protected ProjectBuildingException( String projectId,
+                                        String message,
+                                        String pomLocation )
-        this( projectId, message, pomLocation, null );
+        super( message );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
-    /**
-     * @deprecated use {@link #ProjectBuildingException(String, String, File, Throwable)}
-     * @param projectId
-     * @param message
-     * @param pomLocation absolute path of the pom file
-     * @param cause
-     */
-    public ProjectBuildingException( String projectId, String message, String pomLocation, Throwable cause )
-    {
-        this( projectId, message, new File( pomLocation ), null );
-    }
-
-    /**
-     * 
-     * @param projectId
-     * @param message
-     * @param pomFile pom file location
-     */
-    public ProjectBuildingException( String projectId, String message, File pomFile )
-    {
-        this( projectId, message, pomFile, null );
-    }
-
-    /**
-     * 
-     * @param projectId
-     * @param message
-     * @param cause
-     */
-    public ProjectBuildingException( String projectId, String message, Throwable cause )
-    {
-        this( projectId, message, (URI) null, cause );
-    }
-
-    /**
-     * @param projectId
-     * @param message
-     * @param pomFile pom file location
-     * @param cause
-     */
-    public ProjectBuildingException( String projectId, String message, File pomFile, Throwable cause )
-    {
-        this( projectId, message, pomFile.toURI(), cause );
-    }
-
-    /**
-     * Equivalent to new ProjectBuildingException(projectId, message, pomUri, null)
-     * @see #ProjectBuildingException(String, String, URI, Throwable)
-     */
-    public ProjectBuildingException( String projectId, String message, URI pomUri )
-    {
-        this( projectId, message, pomUri, null );
-    }
-
-    /**
-     * @param projectId
-     * @param message
-     * @param pomUri location of the pom
-     * @param cause
-     */
-    public ProjectBuildingException( String projectId, String message, URI pomUri, Throwable cause )
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     String pomLocation,
+                                     ProfileActivationException cause )
-        this.pomUri = pomUri;
+        this.pomLocation = pomLocation;
-    public URI getPomUri()
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     String pomLocation,
+                                     IOException cause )
-        return pomUri;
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
-    /**
-     * @deprecated use {@link #getPomUri()}
-     */
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     String pomLocation,
+                                     XmlPullParserException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
+    }
+
+    protected ProjectBuildingException( String projectId,
+                                     String message,
+                                     XmlPullParserException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     String pomLocation,
+                                     InvalidRepositoryException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     InvalidRepositoryException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     ArtifactResolutionException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     ArtifactNotFoundException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     String pomLocation,
+                                     ArtifactResolutionException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     String pomLocation,
+                                     ArtifactNotFoundException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     String pomLocation,
+                                     InvalidVersionSpecificationException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     String pomLocation,
+                                     InvalidDependencyVersionException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
+    }
+
+    protected ProjectBuildingException( String projectId,
+                                        String message,
+                                        String pomLocation,
+                                        ModelInterpolationException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
+    }
+
-        if ( "file".equals( getPomUri().getScheme() ) )
-        {
-            return new File( getPomUri() ).getAbsolutePath();
-        }
-        return getPomUri().toString();
+        return pomLocation;
-            + ( ( getPomUri() == null ? "" : " at " + getPomLocation() ) );
+               + ( ( pomLocation == null ? "" : " at " + pomLocation ) );
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 UPD40 INS40 INS40 INS40 UPD40 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 MOV43 INS83 INS42 MOV44 MOV44 MOV44 INS8 INS83 INS42 INS44 INS44 INS44 INS44 INS83 INS42 MOV44 MOV44 MOV44 INS44 INS8 MOV83 MOV42 MOV44 MOV44 INS44 MOV44 MOV8 INS83 INS42 MOV44 MOV44 INS44 INS8 MOV83 MOV42 MOV44 MOV44 MOV44 INS44 MOV8 INS83 INS42 MOV44 MOV44 INS44 INS8 MOV83 MOV42 MOV44 MOV44 MOV44 MOV8 INS83 INS42 INS44 INS44 INS44 MOV8 MOV83 MOV42 INS44 INS44 MOV44 MOV44 MOV8 INS83 INS42 INS44 INS44 INS44 INS83 INS42 INS44 INS44 INS44 INS44 INS8 MOV83 MOV42 INS44 INS44 MOV44 MOV44 INS8 UPD83 MOV83 INS42 INS44 INS44 INS44 INS44 INS8 INS83 MOV43 INS42 INS8 UPD42 INS46 INS21 INS46 INS21 INS21 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS46 INS21 INS21 INS43 INS42 INS46 INS21 INS21 INS43 INS42 UPD43 INS46 INS21 INS21 INS43 INS42 INS46 INS21 UPD43 UPD42 INS43 INS42 INS46 INS21 INS21 INS43 INS42 INS46 INS21 UPD43 INS46 INS21 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 UPD43 UPD42 UPD43 INS46 INS21 INS21 INS43 INS42 INS43 INS42 INS43 INS42 UPD43 UPD42 INS46 INS21 INS21 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS46 INS21 INS21 INS43 INS42 INS43 INS42 UPD43 UPD42 UPD43 INS46 INS21 INS21 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS46 INS21 INS21 INS41 INS42 INS7 INS42 INS7 INS7 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS7 INS7 UPD42 MOV42 INS42 INS42 INS7 INS7 INS42 UPD42 INS42 INS42 INS7 INS7 INS42 INS42 INS42 INS7 UPD42 INS42 INS42 INS42 INS7 INS7 INS42 INS42 INS42 INS7 UPD42 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS7 INS7 MOV42 MOV42 UPD42 MOV42 UPD42 INS42 INS42 INS7 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS42 INS42 UPD42 UPD42 INS42 INS42 INS7 INS7 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL43 DEL33 DEL11 DEL17 DEL66 DEL42 DEL69 DEL43 DEL69 DEL43 DEL69 DEL68 DEL65 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL42 DEL42 DEL42 DEL42 DEL33 DEL17 DEL42 DEL42 DEL42 DEL43 DEL42 DEL14 DEL33 DEL17 DEL42 DEL42 DEL42 DEL33 DEL17 DEL42 DEL42 DEL42 DEL43 DEL33 DEL11 DEL42 DEL17 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL17 DEL66 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL66 DEL65 DEL42 DEL65 DEL29 DEL31 DEL42 DEL65 DEL42 DEL65 DEL42 DEL66 DEL65 DEL29 DEL31 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL29 DEL31 DEL42 DEL65 DEL42 DEL65 DEL42 DEL66 DEL65 DEL42 DEL65 DEL29 DEL31 DEL66 DEL65 DEL42 DEL43 DEL69 DEL43 DEL69 DEL42 DEL43 DEL69 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL42 DEL42 DEL42 DEL42 DEL33 DEL17 DEL42 DEL65 DEL42 DEL65 DEL42 DEL66 DEL65 DEL42 DEL65 DEL29 DEL31 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL66 DEL42 DEL68 DEL65 DEL65 DEL29 DEL83 DEL42 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL42 DEL43 DEL42 DEL32 DEL14 DEL42 DEL32 DEL41 DEL8 DEL25 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL32 DEL42 DEL32