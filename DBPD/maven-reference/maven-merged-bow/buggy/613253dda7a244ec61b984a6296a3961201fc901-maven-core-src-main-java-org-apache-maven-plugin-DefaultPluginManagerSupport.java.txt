o trying to use the request/result pattern everywhere
o remove another use of ResolutionGroup in the core
o remove all the deprecated methods in the resolver, we'll see what breaks and we'll restore in maven-compat


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@749407 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+import java.util.List;
+
-import org.apache.maven.artifact.factory.ArtifactFactory;
-import org.apache.maven.artifact.resolver.ArtifactResolver;
+import org.apache.maven.artifact.resolver.ArtifactResolutionRequest;
-import org.apache.maven.artifact.versioning.InvalidVersionSpecificationException;
-import org.apache.maven.artifact.versioning.VersionRange;
+import org.apache.maven.repository.MavenRepositorySystem;
+import org.apache.maven.repository.VersionNotFoundException;
-import java.util.ArrayList;
-import java.util.List;
-
-    private ArtifactResolver artifactResolver;
-    
-    @Requirement
-    private ArtifactFactory artifactFactory;
-    
+    private MavenRepositorySystem repositorySystem;
+        
-        VersionRange versionRange;
-        try
-        {
-            versionRange = VersionRange.createFromVersionSpec( plugin.getVersion() );
-        }
-        catch ( InvalidVersionSpecificationException e )
-        {
-            throw new PluginManagerException( plugin, e );
-        }
-
-        Artifact pluginArtifact = artifactFactory.createPluginArtifact( plugin.getGroupId(),
-                                                                        plugin.getArtifactId(),
-                                                                        versionRange );
+        Artifact pluginArtifact = repositorySystem.createPluginArtifact( plugin.getGroupId(), plugin.getArtifactId(), plugin.getVersion() );
-        artifactResolver.resolve( pluginArtifact, remoteRepositories, localRepository );
+        repositorySystem.resolve( new ArtifactResolutionRequest( pluginArtifact, localRepository, remoteRepositories ) );
-    public MavenProject buildPluginProject( Plugin plugin,
-                                            ArtifactRepository localRepository,
-                                            List remoteRepositories )
+    public MavenProject buildPluginProject( Plugin plugin, ArtifactRepository localRepository, List remoteRepositories )
-        Artifact artifact = artifactFactory.createProjectArtifact( plugin.getGroupId(),
-                                                                   plugin.getArtifactId(),
-                                                                   plugin.getVersion() );
+        Artifact artifact = repositorySystem.createProjectArtifact( plugin.getGroupId(), plugin.getArtifactId(), plugin.getVersion() );
-    public void checkPluginDependencySpec( Plugin plugin,
-                                           MavenProject pluginProject )
+    public void checkPluginDependencySpec( Plugin plugin, MavenProject pluginProject )
-            pluginProject.createArtifacts( artifactFactory, null, filter );
+            repositorySystem.createArtifacts( pluginProject.getDependencies(), null, filter, pluginProject );
-        catch ( InvalidDependencyVersionException e )
+        catch ( VersionNotFoundException e )
-            throw new InvalidPluginException( "Plugin: " + plugin.getKey()
-                                              + " has a dependency with an invalid version.", e );
+            throw new InvalidPluginException( "Plugin: " + plugin.getKey() + " has a dependency with an invalid version." );

MOV26 MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 MOV78 UPD43 UPD42 UPD42 INS60 MOV60 UPD43 MOV43 INS59 MOV42 UPD42 MOV42 INS32 UPD42 INS14 UPD42 INS42 UPD42 MOV42 MOV32 MOV32 MOV32 INS43 INS42 INS42 INS42 UPD42 UPD42 MOV32 UPD43 INS42 UPD42 INS32 INS42 UPD42 UPD42 MOV42 INS42 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL78 DEL59 DEL60 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42