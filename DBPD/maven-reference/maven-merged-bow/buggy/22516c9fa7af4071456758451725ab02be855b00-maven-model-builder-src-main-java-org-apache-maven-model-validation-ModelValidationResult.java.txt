o Extended model validation to support distinction between warnings and errors

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@790131 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Collections;
- * @author <a href="mailto:trygvis@inamo.no">Trygve Laugst&oslash;l</a>
- * @version $Id$
+ * Collects the warnings and errors from the model validator.
+ * 
+ * @author Benjamin Bentmann
-    /** */
-    private final static String NEWLINE = System.getProperty( "line.separator" );
-    /** */
-    private List<String> messages;
+    private List<String> warnings;
+    private List<String> errors;
+
+    /**
+     * Creates a new validation result.
+     */
-        messages = new ArrayList<String>();
+        warnings = new ArrayList<String>();
+        errors = new ArrayList<String>();
-    public int getMessageCount()
+    /**
+     * Gets the warnings from the validator.
+     * 
+     * @return The warnings from the validator, can be empty but never {@code null}.
+     */
+    public List<String> getWarnings()
-        return messages.size();
+        return warnings;
-    public String getMessage( int i )
+    /**
+     * Records the specified warning.
+     * 
+     * @param message The detail message about the validation warning.
+     */
+    public void addWarning( String message )
-        return messages.get( i );
+        warnings.add( message );
-    public List<String> getMessages()
+    /**
+     * Gets the errors from the validator.
+     * 
+     * @return The errors from the validator, can be empty but never {@code null}.
+     */
+    public List<String> getErrors()
-        return Collections.unmodifiableList( messages );
+        return errors;
-    public void addMessage( String message )
+    /**
+     * Records the specified error.
+     * 
+     * @param message The detail message about the validation error.
+     */
+    public void addError( String message )
-        messages.add( message );
+        errors.add( message );
-    public String toString()
-    {
-        return render( "" );
-    }
-
-    public String render( String indentation )
-    {
-        if ( messages.size() == 0 )
-        {
-            return indentation + "There were no validation errors.";
-        }
-
-        StringBuffer message = new StringBuffer();
-
-//        if ( messages.size() == 1 )
-//        {
-//            message.append( "There was 1 validation error: " );
-//        }
-//        else
-//        {
-//            message.append( "There was " + messages.size() + " validation errors: " + NEWLINE );
-//        }
-//
-        for ( int i = 0; i < messages.size(); i++ )
-        {
-            message.append( indentation + "[" + i + "]  " + messages.get( i ).toString() + NEWLINE );
-        }
-
-        return message.toString();
-    }

INS31 UPD65 UPD65 INS74 MOV74 INS29 INS29 MOV74 UPD42 INS29 MOV83 MOV39 UPD42 MOV42 MOV44 MOV8 INS29 INS74 UPD42 INS29 INS39 UPD42 INS8 UPD66 UPD66 INS43 INS43 UPD42 UPD42 INS65 INS21 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS43 INS65 INS65 UPD42 MOV21 INS42 MOV42 INS66 INS7 INS66 INS66 INS65 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS65 INS66 INS42 MOV42 INS42 INS66 INS42 INS66 UPD42 INS42 INS14 INS66 UPD42 INS66 UPD42 UPD42 UPD42 MOV42 INS74 INS43 INS43 INS42 INS42 DEL40 DEL26 DEL29 DEL83 DEL83 DEL43 DEL42 DEL42 DEL45 DEL32 DEL29 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL43 DEL39 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL83 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL31 DEL43 DEL42 DEL45 DEL32 DEL42 DEL43 DEL42 DEL45 DEL42 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL27 DEL42 DEL42 DEL32 DEL34 DEL27 DEL42 DEL45 DEL27 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL8 DEL24 DEL42 DEL42 DEL32 DEL41 DEL8