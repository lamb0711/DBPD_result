[MNG-2931] DefaultArtifactCollector changes the version of the originatingArtifact if it's in the dependencyManagement with another version

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@526004 13f79535-47bb-0310-9956-ffa450edef68

-        ManagedVersionMap versionMap = (managedVersions != null && managedVersions instanceof ManagedVersionMap) ?
-            (ManagedVersionMap)managedVersions : new ManagedVersionMap(managedVersions);
+        ManagedVersionMap versionMap = getManagedVersionsMap( originatingArtifact, managedVersions );
+    /**
+     * Get the map of managed versions, removing the originating artifact if it is also in managed versions
+     * @param originatingArtifact artifact we are processing
+     * @param managedVersions original managed versions
+     */
+    private ManagedVersionMap getManagedVersionsMap( Artifact originatingArtifact, Map managedVersions )
+    {
+        ManagedVersionMap versionMap;
+        if ( managedVersions != null && managedVersions instanceof ManagedVersionMap )
+        {
+            versionMap = (ManagedVersionMap) managedVersions;
+        }
+        else
+        {
+            versionMap = new ManagedVersionMap( managedVersions );
+        }
+
+        /* remove the originating artifact if it is also in managed versions to avoid being modified during resolution */
+        Artifact managedOriginatingArtifact = (Artifact) versionMap.get( originatingArtifact.getDependencyConflictId() );
+        if ( managedOriginatingArtifact != null )
+        {
+            String managedVersion = managedOriginatingArtifact.getVersion();
+            String version = originatingArtifact.getVersion();
+            if ( !managedVersion.equals( version ) )
+            {
+                // TODO we probably want to warn the user that he is building and artifact with a
+                // different version than in dependencyManagement 
+                if ( managedVersions instanceof ManagedVersionMap )
+                {
+                    /* avoid modifying the managedVersions parameter creating a new map */
+                    versionMap = new ManagedVersionMap( managedVersions );
+                }
+                versionMap.remove( originatingArtifact.getDependencyConflictId() );
+            }
+        }
+
+        return versionMap;
+    }
+

INS31 INS29 INS83 MOV43 INS42 INS44 INS44 INS8 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS60 INS25 INS60 INS25 INS41 INS43 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS43 INS59 MOV27 INS8 INS8 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS21 INS21 INS42 INS42 INS11 INS42 INS33 INS60 INS60 INS25 INS42 INS42 INS42 INS7 INS7 INS43 INS32 INS43 INS59 INS43 INS59 INS38 INS8 INS42 MOV11 INS42 MOV14 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS25 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS62 INS8 INS32 INS42 INS43 INS21 INS42 INS42 INS32 INS42 INS7 INS42 INS42 INS42 INS14 INS43 INS42 INS42 DEL36 DEL16