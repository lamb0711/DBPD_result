o pushing up the dependency downloading logic into the lifecycle executor


git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@773662 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.Artifact;
+import org.apache.maven.artifact.resolver.ArtifactNotFoundException;
+import org.apache.maven.artifact.resolver.ArtifactResolutionException;
+import org.apache.maven.artifact.resolver.ArtifactResolutionRequest;
+import org.apache.maven.artifact.resolver.ArtifactResolutionResult;
+import org.apache.maven.artifact.resolver.ResolutionErrorHandler;
+import org.apache.maven.artifact.resolver.filter.ArtifactFilter;
+import org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter;
+import org.apache.maven.project.artifact.InvalidDependencyVersionException;
+import org.apache.maven.repository.RepositorySystem;
+    @Requirement
+    protected RepositorySystem repositorySystem;
+
+    @Requirement
+    private ResolutionErrorHandler resolutionErrorHandler;
+    
-                {
-                    
+                {                    
-                    // the project dependencies. Having it happen in the plugin manager is a tangled mess.
+                    // the project dependencies. Having it happen in the plugin manager is a tangled mess. We can optimize this
+                    // later by looking at the build plan. Would be better to just batch download everything required by the reactor.
+                    
+                    // mojoDescriptor.isDependencyResolutionRequired() is actually the scope of the dependency resolution required, not a boolean ... yah.
+                    try
+                    {
+                        downloadProjectDependencies( session, Artifact.SCOPE_COMPILE /**mojoDescriptor.isDependencyResolutionRequired()*/ );
+                    }
+                    catch ( ArtifactResolutionException e )
+                    {
+                    }
+                    catch ( ArtifactNotFoundException e )
+                    {
+                    }
-                            System.out.println( execution.getPhase() + "?????????????");
+    
+    // This can ultimately be moved up to the Maven component
+    
+    private void downloadProjectDependencies( MavenSession session, String scope )
+        throws ArtifactResolutionException, ArtifactNotFoundException
+    {
+        MavenProject project = session.getCurrentProject();
+
+        Artifact artifact = repositorySystem.createArtifact( project.getGroupId(), project.getArtifactId(), project.getVersion(), null, project.getPackaging() );
+
+        ArtifactFilter filter = new ScopeArtifactFilter( scope );
+
+        ArtifactResolutionRequest request = new ArtifactResolutionRequest().setArtifact( artifact )
+            // Here the root is not resolved because we are presumably working with a project locally.
+            .setResolveRoot( false )
+            .setResolveTransitively( true )
+            //.setArtifactDependencies( project.getDependencyArtifacts() )
+            .setLocalRepository( session.getLocalRepository() )
+            .setRemoteRepostories( project.getRemoteArtifactRepositories() )
+            .setManagedVersionMap( project.getManagedVersionMap() )
+            .setFilter( filter );
+
+        ArtifactResolutionResult result = repositorySystem.resolve( request );
+
+        resolutionErrorHandler.throwErrors( request, result );
+
+        //TODO: this is wrong
+        project.setArtifacts( result.getArtifacts() );
+
+        ArtifactRepository localRepository = session.getLocalRepository();
+        List<ArtifactRepository> remoteArtifactRepositories = session.getCurrentProject().getRemoteArtifactRepositories();
+
+        for ( Artifact projectArtifact : session.getCurrentProject().getArtifacts() )
+        {
+            repositorySystem.resolve( new ArtifactResolutionRequest( projectArtifact, localRepository, remoteArtifactRepositories ) );
+        }
+    }    

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS31 INS78 INS83 INS43 INS59 INS78 INS83 INS43 INS59 INS83 INS39 INS42 INS44 INS44 INS43 INS43 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS60 INS60 INS60 INS60 INS60 INS21 INS21 INS60 INS60 INS70 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS32 INS43 INS59 INS74 INS59 INS44 INS32 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS43 INS42 INS32 INS42 INS21 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS33 INS32 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS14 INS32 INS42 INS32 INS42 INS42 INS43 INS42 INS42 INS42 INS54 INS32 INS42 INS32 INS42 INS42 INS42 INS8 INS12 INS12 INS32 INS42 INS9 INS42 INS42 INS21 INS44 INS8 INS44 INS8 INS32 INS42 INS9 INS32 INS43 INS42 INS43 INS42 INS14 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS43 INS42 DEL40 DEL42 DEL42 DEL42 DEL32 DEL45 DEL27 DEL32 DEL21