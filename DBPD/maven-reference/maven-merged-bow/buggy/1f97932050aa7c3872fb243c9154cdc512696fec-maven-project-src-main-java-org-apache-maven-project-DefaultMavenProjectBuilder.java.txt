PR: MNG-122
cleanup artifact/plugin not found exception

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@320704 13f79535-47bb-0310-9956-ffa450edef68

-                // TODO: how can this not be true?
-                if ( projectArtifact.isResolved() )
+                model = readModel( projectId, file );
+
+                String downloadUrl = null;
+                ArtifactStatus status = ArtifactStatus.NONE;
+
+                DistributionManagement distributionManagement = model.getDistributionManagement();
+                if ( distributionManagement != null )
-                    model = readModel( projectId, file );
+                    downloadUrl = distributionManagement.getDownloadUrl();
-                    String downloadUrl = null;
-                    ArtifactStatus status = ArtifactStatus.NONE;
-
-                    DistributionManagement distributionManagement = model.getDistributionManagement();
-                    if ( distributionManagement != null )
-                    {
-                        downloadUrl = distributionManagement.getDownloadUrl();
-
-                        status = ArtifactStatus.valueOf( distributionManagement.getStatus() );
-                    }
-
-                    // TODO: configurable actions dependant on status
-                    if ( !projectArtifact.isSnapshot() && status.compareTo( ArtifactStatus.DEPLOYED ) < 0 )
-                    {
-                        // use default policy (enabled, daily update, warn on bad checksum)
-                        ArtifactRepositoryPolicy policy = new ArtifactRepositoryPolicy();
-                        // TODO: re-enable [MNG-798/865]
-                        policy.setUpdatePolicy( ArtifactRepositoryPolicy.UPDATE_POLICY_NEVER );
-
-                        if ( policy.checkOutOfDate( new Date( file.lastModified() ) ) )
-                        {
-                            getLogger().info( projectArtifact.getArtifactId() +
-                                ": updating metadata due to status of '" + status + "'" );
-                            try
-                            {
-                                projectArtifact.setResolved( false );
-                                artifactResolver.resolveAlways( projectArtifact, remoteArtifactRepositories,
-                                                                localRepository );
-                            }
-                            catch ( ArtifactResolutionException e )
-                            {
-                                getLogger().warn( "Error updating POM - using existing version" );
-                                getLogger().debug( "Cause", e );
-                            }
-                            catch ( ArtifactNotFoundException e )
-                            {
-                                getLogger().warn( "Error updating POM - not found. Removing local copy." );
-                                getLogger().debug( "Cause", e );
-                                file.delete();
-                                throw e;
-                            }
-                        }
-                    }
-
-                    // TODO: this is gross. Would like to give it the whole model, but maven-artifact shouldn't depend on that
-                    // Can a maven-core implementation of the Artifact interface store it, and be used in the exceptions?
-                    if ( downloadUrl != null )
-                    {
-                        projectArtifact.setDownloadUrl( downloadUrl );
-                    }
-                    else
-                    {
-                        projectArtifact.setDownloadUrl( model.getUrl() );
-                    }
+                    status = ArtifactStatus.valueOf( distributionManagement.getStatus() );
-                else if ( allowStubModel )
+
+                checkStatusAndUpdate( projectArtifact, status, file, remoteArtifactRepositories, localRepository );
+
+                // TODO: this is gross. Would like to give it the whole model, but maven-artifact shouldn't depend on that
+                // Can a maven-core implementation of the Artifact interface store it, and be used in the exceptions?
+                if ( downloadUrl != null )
-                    model = createStubModel( projectArtifact );
+                    projectArtifact.setDownloadUrl( downloadUrl );
-                    throw new ProjectBuildingException( projectId, "POM could not be resolved from the repository" );
+                    projectArtifact.setDownloadUrl( model.getUrl() );
+                    getLogger().debug( "Artifact not found - using stub model: " + e.getMessage() );
+    private void checkStatusAndUpdate( Artifact projectArtifact, ArtifactStatus status, File file,
+                                       List remoteArtifactRepositories, ArtifactRepository localRepository )
+        throws ArtifactNotFoundException
+    {
+        // TODO: configurable actions dependant on status
+        if ( !projectArtifact.isSnapshot() && status.compareTo( ArtifactStatus.DEPLOYED ) < 0 )
+        {
+            // use default policy (enabled, daily update, warn on bad checksum)
+            ArtifactRepositoryPolicy policy = new ArtifactRepositoryPolicy();
+            // TODO: re-enable [MNG-798/865]
+            policy.setUpdatePolicy( ArtifactRepositoryPolicy.UPDATE_POLICY_NEVER );
+
+            if ( policy.checkOutOfDate( new Date( file.lastModified() ) ) )
+            {
+                getLogger().info(
+                    projectArtifact.getArtifactId() + ": updating metadata due to status of '" + status + "'" );
+                try
+                {
+                    projectArtifact.setResolved( false );
+                    artifactResolver.resolveAlways( projectArtifact, remoteArtifactRepositories, localRepository );
+                }
+                catch ( ArtifactResolutionException e )
+                {
+                    getLogger().warn( "Error updating POM - using existing version" );
+                    getLogger().debug( "Cause", e );
+                }
+                catch ( ArtifactNotFoundException e )
+                {
+                    getLogger().warn( "Error updating POM - not found. Removing local copy." );
+                    getLogger().debug( "Cause", e );
+                    file.delete();
+                    throw e;
+                }
+            }
+        }
+    }
+

INS31 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS43 MOV8 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV21 MOV60 MOV60 MOV60 MOV25 INS21 MOV25 INS32 INS42 MOV42 UPD42 MOV42 INS42 INS42 INS42 MOV8 INS21 INS32 INS32 INS42 INS27 INS42 INS45 INS32 INS42 INS42 DEL32 DEL42 DEL42 DEL43 DEL42 DEL45 DEL14 DEL53 DEL8 DEL25 DEL25 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8