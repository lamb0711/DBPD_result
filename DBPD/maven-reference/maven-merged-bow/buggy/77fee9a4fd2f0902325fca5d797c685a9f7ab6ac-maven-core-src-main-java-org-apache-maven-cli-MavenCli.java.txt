add unique short options so that all are recognised


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219605 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.repository.DefaultArtifactRepository;
-import org.apache.maven.artifact.repository.ArtifactRepositoryFactory;
+import org.apache.maven.artifact.repository.ArtifactRepositoryFactory;
+import org.apache.maven.artifact.repository.DefaultArtifactRepository;
-        if( commandLine.hasOption( CLIManager.ACTIVATE_PROFILES ) )
+        if ( commandLine.hasOption( CLIManager.ACTIVATE_PROFILES ) )
-            System.setProperty(ProfileActivationUtils.ACTIVE_PROFILE_IDS, commandLine.getOptionValue( CLIManager.ACTIVATE_PROFILES ) );
+            System.setProperty( ProfileActivationUtils.ACTIVE_PROFILE_IDS,
+                                commandLine.getOptionValue( CLIManager.ACTIVATE_PROFILES ) );
-        if ( commandLine.hasOption( CLIManager.FORCE_PLUGIN_UPDATES )
-            || commandLine.hasOption( CLIManager.FORCE_PLUGIN_UPDATES2 ) )
+        if ( commandLine.hasOption( CLIManager.FORCE_PLUGIN_UPDATES ) ||
+            commandLine.hasOption( CLIManager.FORCE_PLUGIN_UPDATES2 ) )
-        
+
-        
+
-    private static MavenExecutionRequest createRequest( List files, Embedder embedder,
-                                                        CommandLine commandLine, Settings settings,
-                                                        EventDispatcher eventDispatcher, LoggerManager manager )
+    private static MavenExecutionRequest createRequest( List files, Embedder embedder, CommandLine commandLine,
+                                                        Settings settings, EventDispatcher eventDispatcher,
+                                                        LoggerManager manager )
-            System.out.println( "+ Enabling strict checksum verification on all artifact downloads.");
+            System.out.println( "+ Enabling strict checksum verification on all artifact downloads." );
-            System.out.println( "+ Disabling strict checksum verification on all artifact downloads.");
+            System.out.println( "+ Disabling strict checksum verification on all artifact downloads." );
-        // TODO: [jc] Is there a better switch than '-e' for this?
-//        public static final char LIST_GOALS = 'g';
-
-        
+
-        
+
-        
+
-        
+
-            options.addOption( OptionBuilder.withLongOpt( "define" ).hasArg().withDescription(
-                "Define a system property" ).create( SET_SYSTEM_PROPERTY ) );
-            options.addOption( OptionBuilder.withLongOpt( "offline" ).withDescription( "Work offline" ).create(
-                OFFLINE ) );
+            options.addOption(
+                OptionBuilder.withLongOpt( "define" ).hasArg().withDescription( "Define a system property" ).create(
+                    SET_SYSTEM_PROPERTY ) );
+            options.addOption(
+                OptionBuilder.withLongOpt( "offline" ).withDescription( "Work offline" ).create( OFFLINE ) );
-            options.addOption( OptionBuilder.withLongOpt( "help" ).withDescription( "Display help information" ).create(
-                HELP ) );
-            options.addOption( OptionBuilder.withLongOpt( "version" ).withDescription( "Display version information" ).create(
-                VERSION ) );
-            options.addOption( OptionBuilder.withLongOpt( "debug" ).withDescription( "Produce execution debug output" ).create(
-                DEBUG ) );
-            options.addOption( OptionBuilder.withLongOpt( "errors" ).withDescription(
-                "Produce execution error messages" ).create( ERRORS ) );
+            options.addOption(
+                OptionBuilder.withLongOpt( "help" ).withDescription( "Display help information" ).create( HELP ) );
+            options.addOption(
+                OptionBuilder.withLongOpt( "version" ).withDescription( "Display version information" ).create(
+                    VERSION ) );
+            options.addOption(
+                OptionBuilder.withLongOpt( "debug" ).withDescription( "Produce execution debug output" ).create(
+                    DEBUG ) );
+            options.addOption(
+                OptionBuilder.withLongOpt( "errors" ).withDescription( "Produce execution error messages" ).create(
+                    ERRORS ) );
-                "Comma-delimited list of profiles to activate").hasArg().create( ACTIVATE_PROFILES ) );
-            
-            options.addOption( OptionBuilder.withLongOpt( "batch-mode" ).withDescription( "Run in non-interactive (batch) mode" ).create( BATCH_MODE ) );
-            
-            options.addOption( OptionBuilder.withLongOpt( FORCE_PLUGIN_UPDATES ).withDescription( "Force upToDate check for any relevant registered plugins" ).create() );
-            options.addOption( OptionBuilder.withLongOpt( FORCE_PLUGIN_UPDATES2 ).withDescription( "Synonym for " + FORCE_PLUGIN_UPDATES ).create() );
-            options.addOption( OptionBuilder.withLongOpt( SUPPRESS_PLUGIN_UPDATES ).withDescription( "Suppress upToDate check for any relevant registered plugins" ).create() );
-            options.addOption( OptionBuilder.withLongOpt( FORCE_PLUGIN_LATEST_CHECK ).withDescription( "Force checking of LATEST metadata for plugin versions" ).create() );
-            options.addOption( OptionBuilder.withLongOpt( SUPPRESS_PLUGIN_LATEST_CHECK ).withDescription( "Suppress checking of LATEST metadata for plugin versions" ).create() );
-            
-            options.addOption( OptionBuilder.withLongOpt( SUPPRESS_PLUGIN_REGISTRY ).withDescription( "Don't use ~/.m2/plugin-registry.xml for plugin versions" ).create() );
-            
-            options.addOption( OptionBuilder.withLongOpt( "strict-checksums" ).withDescription( "Fail the build if checksums don't match" ).create( CHECKSUM_FAILURE_POLICY ) );
-            options.addOption( OptionBuilder.withLongOpt( "lax-checksums" ).withDescription( "Warn if checksums don't match" ).create( CHECKSUM_WARNING_POLICY ) );
+                "Comma-delimited list of profiles to activate" ).hasArg().create( ACTIVATE_PROFILES ) );
+
+            options.addOption( OptionBuilder.withLongOpt( "batch-mode" ).withDescription(
+                "Run in non-interactive (batch) mode" ).create( BATCH_MODE ) );
+
+            options.addOption( OptionBuilder.withLongOpt( FORCE_PLUGIN_UPDATES ).withDescription(
+                "Force upToDate check for any relevant registered plugins" ).create( "cpu" ) );
+            options.addOption( OptionBuilder.withLongOpt( FORCE_PLUGIN_UPDATES2 ).withDescription(
+                "Synonym for " + FORCE_PLUGIN_UPDATES ).create( "up" ) );
+            options.addOption( OptionBuilder.withLongOpt( SUPPRESS_PLUGIN_UPDATES ).withDescription(
+                "Suppress upToDate check for any relevant registered plugins" ).create( "npu" ) );
+            options.addOption( OptionBuilder.withLongOpt( FORCE_PLUGIN_LATEST_CHECK ).withDescription(
+                "Force checking of LATEST metadata for plugin versions" ).create( "cpl" ) );
+            options.addOption( OptionBuilder.withLongOpt( SUPPRESS_PLUGIN_LATEST_CHECK ).withDescription(
+                "Suppress checking of LATEST metadata for plugin versions" ).create( "npl" ) );
+
+            options.addOption( OptionBuilder.withLongOpt( SUPPRESS_PLUGIN_REGISTRY ).withDescription(
+                "Don't use ~/.m2/plugin-registry.xml for plugin versions" ).create( "npr" ) );
+
+            options.addOption( OptionBuilder.withLongOpt( "strict-checksums" ).withDescription(
+                "Fail the build if checksums don't match" ).create( CHECKSUM_FAILURE_POLICY ) );
+            options.addOption(
+                OptionBuilder.withLongOpt( "lax-checksums" ).withDescription( "Warn if checksums don't match" ).create(
+                    CHECKSUM_WARNING_POLICY ) );

MOV26 MOV26 INS45 INS45 INS45 INS45 INS45 INS45