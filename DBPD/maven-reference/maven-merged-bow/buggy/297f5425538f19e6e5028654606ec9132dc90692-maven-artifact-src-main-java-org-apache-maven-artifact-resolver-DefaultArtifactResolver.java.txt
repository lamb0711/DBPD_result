remove extension from artifact - it is the sole reponsibility of the artifact handler. This prevents the error of plugins getting the extension "maven-plugin"


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163647 13f79535-47bb-0310-9956-ffa450edef68

-            logger.debug( "Resolving: " + artifact.getId() + " from:\n" + "{localRepository: " + localRepository
-                + "}\n" + "{remoteRepositories: " + remoteRepositories + "}" );
+            logger.debug( "Resolving: " + artifact.getId() + " from:\n" + "{localRepository: " + localRepository +
+                          "}\n" + "{remoteRepositories: " + remoteRepositories + "}" );
-        sb.append( "The artifact is not present locally as:" ).append( LS ).append( LS ).append( artifact.getPath() )
-          .append( LS ).append( LS ).append( "or in any of the specified remote repositories:" ).append( LS )
-          .append( LS );
+        sb.append( "The artifact is not present locally as:" ).append( LS ).append( LS ).append( artifact.getPath() ).append(
+            LS ).append( LS ).append( "or in any of the specified remote repositories:" ).append( LS ).append( LS );
-                                                        ArtifactRepository localRepository,
-                                                        ArtifactMetadataSource source, ArtifactFilter filter )
+                                                         ArtifactRepository localRepository,
+                                                         ArtifactMetadataSource source, ArtifactFilter filter )
-                                                        ArtifactRepository localRepository,
-                                                        ArtifactMetadataSource source )
+                                                         ArtifactRepository localRepository,
+                                                         ArtifactMetadataSource source )
-                                                        ArtifactRepository localRepository,
-                                                        ArtifactMetadataSource source )
+                                                         ArtifactRepository localRepository,
+                                                         ArtifactMetadataSource source )
-                                             List remoteRepositories, ArtifactMetadataSource source,
-                                             ArtifactFilter filter ) throws TransitiveArtifactResolutionException
+                                              List remoteRepositories, ArtifactMetadataSource source,
+                                              ArtifactFilter filter )
+        throws TransitiveArtifactResolutionException
-                    if ( Artifact.SCOPE_RUNTIME.equals( newArtifact.getScope() )
-                        && Artifact.SCOPE_TEST.equals( knownArtifact.getScope() ) )
+                    if ( Artifact.SCOPE_RUNTIME.equals( newArtifact.getScope() ) &&
+                        Artifact.SCOPE_TEST.equals( knownArtifact.getScope() ) )
-                    if ( Artifact.SCOPE_COMPILE.equals( newArtifact.getScope() )
-                        && !Artifact.SCOPE_COMPILE.equals( knownArtifact.getScope() ) )
+                    if ( Artifact.SCOPE_COMPILE.equals( newArtifact.getScope() ) &&
+                        !Artifact.SCOPE_COMPILE.equals( knownArtifact.getScope() ) )
-                                                                                        knownArtifact.getType(),
-                                                                                        knownArtifact.getExtension() );
+                                                                                        knownArtifact.getType() );
-                        throw new TransitiveArtifactResolutionException( "Error retrieving metadata [" + newArtifact
-                            + "] : ", e );
+                        throw new TransitiveArtifactResolutionException( "Error retrieving metadata [" + newArtifact +
+                                                                         "] : ", e );

DEL42 DEL42 DEL32