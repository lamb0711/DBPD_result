change the plugin execution response to be an exception instead since it only handled failures.
any returns from success will be conveyed by the request, soon to be converted into fields on the plugin. These will eventually be extracted using OGNL, but this is all post alpha-1 work


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163621 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.plugin.PluginExecutionResponse;
+import org.apache.maven.plugin.PluginExecutionException;
+        throws LifecycleExecutionException
-                    executePhase( task, session, response, phaseMap );
+                    executePhase( task, session, phaseMap );
-                    PluginExecutionResponse pluginResponse = executeMojo( task, session );
-
-                    if ( pluginResponse.isExecutionFailure() )
-                    {
-                        response.setExecutionFailure( task, pluginResponse.getFailureResponse() );
-                    }
-                }
-                if ( response.isExecutionFailure() )
-                {
-                    break;
+                    executeMojo( task, session );
-        catch ( Exception e )
+        catch ( PluginExecutionException e )
+        catch ( Exception e )
+        {
+            throw new LifecycleExecutionException( "Error during lifecycle execution", e );
+        }
-    // TODO: don't throw Exception
-    private void executePhase( String phase, MavenSession session, MavenExecutionResponse response, Map phaseMap )
-        throws LifecycleExecutionException
+    private void executePhase( String phase, MavenSession session, Map phaseMap )
+        throws PluginExecutionException
-                        PluginExecutionResponse pluginResponse = executeMojo( goal, session );
-
-                        if ( pluginResponse.isExecutionFailure() )
-                        {
-                            response.setExecutionFailure( goal, pluginResponse.getFailureResponse() );
-
-                            return;
-                        }
+                        executeMojo( goal, session );
-
-                dispatcher.dispatchEnd( event, p.getId() );
-            catch ( LifecycleExecutionException e )
+            catch ( PluginExecutionException e )
-
-            // End event monitoring.
+
+            dispatcher.dispatchEnd( event, p.getId() );
-    protected PluginExecutionResponse executeMojo( String id, MavenSession session )
-        throws LifecycleExecutionException
+    protected void executeMojo( String id, MavenSession session )
+        throws PluginExecutionException
-        try
-        {
-            Logger logger = getLogger();
-            logger.debug( "Resolving artifacts from:\n" + "\t{localRepository: " + session.getLocalRepository() +
-                          "}\n" + "\t{remoteRepositories: " + session.getRemoteRepositories() + "}" );
+        Logger logger = getLogger();
+        logger.debug( "Resolving artifacts from:" );
+        logger.debug( "\t{localRepository: " + session.getLocalRepository() + "}" );
+        logger.debug( "\t{remoteRepositories: " + session.getRemoteRepositories() + "}" );
-            return pluginManager.executeMojo( session, id );
-        }
-        catch ( GoalExecutionException e )
-        {
-            throw new LifecycleExecutionException( "Problem executing " + id, e );
-        }
+        pluginManager.executeMojo( session, id );

UPD40 INS43 UPD43 INS39 INS43 MOV8 INS42 UPD42 UPD42 MOV42 INS21 INS21 INS21 INS21 INS12 INS32 INS32 INS32 MOV32 INS44 MOV44 INS8 MOV21 MOV42 MOV42 INS45 INS42 INS42 INS27 INS42 INS42 INS27 INS43 INS42 INS53 MOV45 MOV32 UPD45 MOV45 MOV45 MOV32 MOV45 INS42 INS14 MOV8 INS43 INS45 INS42 UPD43 INS42 UPD42 MOV32 MOV21 MOV32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL25 DEL8 DEL42 DEL42 DEL32 DEL10 DEL8 DEL25 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL42 DEL43 DEL45 DEL27 DEL27 DEL32 DEL21 DEL41 DEL42 DEL43 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8