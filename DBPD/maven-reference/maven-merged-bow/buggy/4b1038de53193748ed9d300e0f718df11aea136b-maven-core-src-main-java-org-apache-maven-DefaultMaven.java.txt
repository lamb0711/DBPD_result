Working on: MNG-607

o Added '-f' CLI option, to allow use of non-standard pom files, or spawning of a build from outside of the project dir.
o Added preferential processing of release-pom.xml over pom.xml if it exists (assumes that the current checkout is a release of the software)
o Moved all file discovery from MavenCli to DefaultMaven, to allow embedders to have access to this logic.
o Modified MavenExecutionRequest to add a flag for reactor-activation and the name of a non-standard pom to use, if appropriate.
o Removed getFiles() and getProjectFiles() from MavenExecutionRequest, since file discovery is now done in the DefaultMaven.
o Added integration tests to check preference of release-pom.xml in standalone and '-r' mode
o Added integration tests to check usage of '-f' option within and outside of the project directory
o Added processing for cli-options.txt to maven-core-it-verifier (Verifier.java) to allow specification of '-f' and '-r' in tests


NOTE: the release plugin still doesn't correctly remove the release-pom.xml from HEAD/trunk, since I don't have access to the SCM remove command from maven-scm. I'm waiting for Emmanuel to finish some API changes before moving to the new maven-scm version, and implementing this final step.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@225226 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.util.FileUtils;
+import java.util.Collections;
+    public static File userDir = new File( System.getProperty( "user.dir" ) );
+
-            projects = collectProjects( request.getFiles(), request.getLocalRepository(), request.isRecursive(),
+            List files = getProjectFiles( request );
+            
+            projects = collectProjects( files, request.getLocalRepository(), request.isRecursive(),
+            if ( RELEASE_POMv4.equals( file.getName() ) )
+            {
+                getLogger().info( "NOTE: Using release-pom: " + file + " in reactor build." );
+            }
+            
+    
+    private List getProjectFiles( MavenExecutionRequest request )
+        throws IOException
+    {
+        List files = Collections.EMPTY_LIST;
+        
+        if ( request.isReactorActive() )
+        {
+            // TODO: should we now include the pom.xml in the current directory?
+//            String includes = System.getProperty( "maven.reactor.includes", "**/" + POMv4 );
+//            String excludes = System.getProperty( "maven.reactor.excludes", POMv4 );
+
+            String includes = System.getProperty( "maven.reactor.includes", "**/" + POMv4 + ",**/" + RELEASE_POMv4 );
+            String excludes = System.getProperty( "maven.reactor.excludes", POMv4 + "," + RELEASE_POMv4 );
+            
+            files = FileUtils.getFiles( userDir, includes, excludes );
+            
+            filterOneProjectFilePerDirectory( files );
+
+            // make sure there is consistent ordering on all platforms, rather than using the filesystem ordering
+            Collections.sort( files );
+        }
+        else if ( request.getPomFile() != null )
+        {
+            File projectFile = new File( request.getPomFile() ).getAbsoluteFile();
+
+            if ( projectFile.exists() )
+            {
+                files = Collections.singletonList( projectFile );
+            }
+        }
+        else
+        {
+            File projectFile = new File( userDir, RELEASE_POMv4 );
+
+            if ( !projectFile.exists() )
+            {
+                projectFile = new File( userDir, POMv4 );
+            }
+
+            if ( projectFile.exists() )
+            {
+                files = Collections.singletonList( projectFile );
+            }
+        }
+        return files;
+    }
+
+    private void filterOneProjectFilePerDirectory( List files )
+    {
+        List releaseDirs = new ArrayList();
+        
+        for ( Iterator it = files.iterator(); it.hasNext(); )
+        {
+            File projectFile = (File) it.next();
+            
+            if ( RELEASE_POMv4.equals( projectFile.getName() ) )
+            {
+                releaseDirs.add( projectFile.getParentFile() );
+            }
+        }
+        
+        for ( Iterator it = files.iterator(); it.hasNext(); )
+        {
+            File projectFile = (File) it.next();
+            
+            // remove pom.xml files where there is a sibling release-pom.xml file...
+            if ( !RELEASE_POMv4.equals( projectFile.getName() ) && releaseDirs.contains( projectFile.getParentFile() ) )
+            {
+                it.remove();
+            }
+        }
+    }

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS83 INS83 INS43 INS59 INS83 INS43 INS42 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS14 INS42 INS43 INS42 INS42 INS60 INS25 INS41 INS43 INS42 INS60 INS24 INS24 INS43 INS32 INS42 INS43 INS59 INS32 INS8 INS25 INS42 INS42 INS43 INS59 INS58 INS32 INS8 INS58 INS32 INS8 INS42 INS42 INS42 INS45 INS60 INS25 INS42 INS42 INS40 INS42 INS42 INS60 INS60 INS21 INS21 INS21 INS27 INS8 INS8 INS42 INS42 INS14 INS43 INS59 INS42 INS42 INS60 INS25 INS43 INS59 INS42 INS42 INS60 INS25 INS43 INS59 INS32 INS8 INS43 INS59 INS43 INS59 INS7 INS32 INS32 INS32 INS33 INS60 INS25 INS60 INS25 INS25 INS43 INS42 INS42 INS32 INS43 INS59 INS32 INS8 INS42 INS42 INS32 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS8 INS43 INS59 INS38 INS8 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS21 INS42 INS42 INS42 INS42 INS11 INS38 INS32 INS21 INS42 INS42 UPD42 MOV42 INS42 INS42 INS32 INS42 INS42 INS45 INS27 INS42 INS42 INS45 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS21 INS42 INS42 INS14 INS32 INS21 INS42 INS42 INS21 INS43 INS32 INS42 INS42 INS32 INS43 INS32 INS32 INS42 INS42 INS32 INS32 INS32 INS42 INS27 INS45 INS42 INS45 INS42 INS42 INS45 INS42 INS14 INS42 INS7 INS43 INS42 INS42 INS42 INS42 INS7 INS7 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS43 INS32 INS42 INS32 INS42 INS42 INS14 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL32