refactor duplicate code

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219990 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.ReportPlugin;
-    /** Patterns which should be excluded by default. */
-    private static final String[] DEFAULT_EXCLUDES = new String[] {
+    /**
+     * Patterns which should be excluded by default.
+     */
+    private static final String[] DEFAULT_EXCLUDES = new String[]{
-        "**/.DS_Store" };
-    
+        "**/.DS_Store"};
+
-                throw new MojoExecutionException( templateDirectory + " isn't a valid URL." );
+                throw new MojoExecutionException( templateDirectory + " isn't a valid URL.", e );
-                    siteRenderer.render( generatedSiteFile, localeOutputDirectory,
-                                         getSiteDescriptor( reports, locale ), template, attributes, locale );
+                    siteRenderer.render( generatedSiteFile, localeOutputDirectory, getSiteDescriptor( reports, locale ),
+                                         template, attributes, locale );
-                
+
-                if ( !indexExists( siteDirectoryFile ) ) 
+                if ( !indexExists( siteDirectoryFile ) )
-                
-                siteRenderer.render( siteDirectoryFile, localeOutputDirectory,
-                                     getSiteDescriptor( reports, locale ), template, attributes, locale );
-                siteRenderer.render( siteDirectoryFile, localeOutputDirectory,
-                                     getSiteDescriptor( reports, locale ), template, attributes, locale );
+                siteRenderer.render( siteDirectoryFile, localeOutputDirectory, getSiteDescriptor( reports, locale ),
+                                     template, attributes, locale );
+
+                siteRenderer.render( siteDirectoryFile, localeOutputDirectory, getSiteDescriptor( reports, locale ),
+                                     template, attributes, locale );
-                throw new MojoExecutionException(
-                    "'" + report.getCategoryName() + "' category define for " + report.getName( defaultLocale ) +
-                        " mojo isn't valid." );
+                throw new MojoExecutionException( "'" + report.getCategoryName() + "' category define for " +
+                    report.getName( defaultLocale ) + " mojo isn't valid." );
-        buffer.append(
-            "    <item name=\"" + i18n.getString( "site-plugin", locale, "report.menu.about" ) + " " +
-                project.getName() + "\" href=\"/index.html\"/>\n" );
+        buffer.append( "    <item name=\"" );
+        buffer.append( i18n.getString( "site-plugin", locale, "report.menu.about" ) );
+        buffer.append( " " );
+        buffer.append( project.getName() );
+        buffer.append( "\" href=\"/index.html\"/>\n" );
-        if ( projectInfos.size() > 0 )
-        {
-            buffer.append(
-                "    <item name=\"" + i18n.getString( "site-plugin", locale, "report.menu.projectinformation" ) +
-                    "\" href=\"/project-info.html\" collapse=\"true\">\n" );
-
-            for ( Iterator i = projectInfos.iterator(); i.hasNext(); )
-            {
-                MavenReport report = (MavenReport) i.next();
-                buffer.append(
-                    "        <item name=\"" + report.getName( locale ) + "\" href=\"/" + report.getOutputName() +
-                        ".html\"/>\n" );
-            }
-
-            buffer.append( "    </item>\n" );
-        }
-
-        if ( projectReports.size() > 0 )
-        {
-            buffer.append(
-                "    <item name=\"" + i18n.getString( "site-plugin", locale, "report.menu.projectreports" ) +
-                    "\" href=\"/maven-reports.html\" collapse=\"true\">\n" );
-
-            for ( Iterator i = projectReports.iterator(); i.hasNext(); )
-            {
-                MavenReport report = (MavenReport) i.next();
-                buffer.append(
-                    "        <item name=\"" + report.getName( locale ) + "\" href=\"/" + report.getOutputName() +
-                        ".html\"/>\n" );
-            }
-
-            buffer.append( "    </item>\n" );
-        }
+        writeReportSubMenu( projectInfos, buffer, locale, "report.menu.projectinformation", "project-info.html" );
+        writeReportSubMenu( projectReports, buffer, locale, "report.menu.projectreports", "maven-reports.html" );
+    private void writeReportSubMenu( List reports, StringBuffer buffer, Locale locale, String key, String indexFilename )
+    {
+        if ( reports.size() > 0 )
+        {
+            buffer.append( "    <item name=\"" );
+            buffer.append( i18n.getString( "site-plugin", locale, key ) );
+            buffer.append( "\" href=\"/" );
+            buffer.append( indexFilename );
+            buffer.append( "\" collapse=\"true\">\n" );
+
+            for ( Iterator i = reports.iterator(); i.hasNext(); )
+            {
+                MavenReport report = (MavenReport) i.next();
+                buffer.append( "        <item name=\"" );
+                buffer.append( report.getName( locale ) );
+                buffer.append( "\" href=\"/" );
+                buffer.append( report.getOutputName() );
+                buffer.append( ".html\"/>\n" );
+            }
+
+            buffer.append( "    </item>\n" );
+        }
+    }
+
-        String siteDescriptorContent = "";
+        String siteDescriptorContent;
-                
+
-     * 
+     *
-        File[] directories = siteDirectoryFile.listFiles( new FileFilter() {
-            public boolean accept(File file) {
-                for ( int i = 0; i < DEFAULT_EXCLUDES.length; i++) {
-                    if ( SelectorUtils.matchPath( DEFAULT_EXCLUDES[i], file.getName() ) ) {
+        File[] directories = siteDirectoryFile.listFiles( new FileFilter()
+        {
+            public boolean accept( File file )
+            {
+                for ( int i = 0; i < DEFAULT_EXCLUDES.length; i++ )
+                {
+                    if ( SelectorUtils.matchPath( DEFAULT_EXCLUDES[i], file.getName() ) )
+                    {
-        });
-        
-        if ( ( directories == null ) || ( directories.length  == 0 ) )
+        } );
+
+        if ( directories == null || directories.length == 0 )
-        
+
-            
-            if ( indexes.size() > 1 ) 
+
+            if ( indexes.size() > 1 )
-                getLog().warn( "More than one index file exists in this directory [" + directories[i].getAbsolutePath() + "]." );
+                getLog().warn(
+                    "More than one index file exists in this directory [" + directories[i].getAbsolutePath() + "]." );
-            if ( indexes.size() == 1 ) 
+            if ( indexes.size() == 1 )
-                getLog().debug( "Found [" + indexes.get(0) + "]" );
+                getLog().debug( "Found [" + indexes.get( 0 ) + "]" );
-                indexFound.add(indexes.get(0));
+                indexFound.add( indexes.get( 0 ) );
-        if ( indexFound.size() > 1 ) 
+        if ( indexFound.size() > 1 )
-        if ( indexFound.size() == 1 ) 
+        if ( indexFound.size() == 1 )
-        
+
-    
+
-     * 
-     * @param siteDescriptor 
-     * @param locale 
-     * @throws Exception 
+     *
+     * @param siteDescriptor
+     * @param locale
+     * @throws Exception
-    
+
-                org.apache.maven.model.ReportPlugin reportPlugin = (org.apache.maven.model.ReportPlugin) it.next();
+                ReportPlugin reportPlugin = (ReportPlugin) it.next();
-                        reportsList = pluginManager.getReports( reportPlugin,
-                                                                null,
-                                                                project,
-                                                                session,
-                                                                localRepository );
+                        reportsList = pluginManager.getReports( reportPlugin, null, project, session, localRepository );
-                            reportsList = pluginManager.getReports( reportPlugin,
-                                                                    reportSet,
-                                                                    project,
-                                                                    session,
+                            reportsList = pluginManager.getReports( reportPlugin, reportSet, project, session,

INS26 INS40 INS31 INS31 MOV83 MOV43 MOV42 MOV44 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS8 MOV60 MOV21 INS21 MOV21 INS21 INS21 INS21 INS21 INS21 MOV21 MOV41 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 MOV25 UPD66 INS32 INS32 INS32 INS32 INS32 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS45 MOV32 MOV42 MOV42 INS45 UPD42 MOV42 UPD42 MOV42 MOV32 INS42 INS42 UPD45 MOV45 INS42 INS42 INS42 MOV42 MOV45 INS45 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS45 INS45 INS21 INS21 INS21 INS21 INS21 MOV27 MOV27 UPD42 INS32 INS32 INS32 INS32 INS32 MOV42 MOV42 INS45 INS42 INS42 INS32 INS42 INS42 UPD45 MOV45 INS42 INS42 INS42 INS42 INS42 INS45 INS21 INS21 INS21 INS21 INS21 MOV42 MOV42 MOV45 MOV42 INS42 INS32 INS32 INS32 INS32 INS32 UPD43 UPD42 MOV42 MOV42 INS45 INS42 INS42 MOV32 INS42 INS42 INS45 INS42 INS42 MOV32 INS42 INS42 INS45 INS42 INS42 UPD43 INS42 DEL45 DEL45 DEL45 DEL27 DEL45 DEL32 DEL45 DEL27 DEL32 DEL21 DEL45 DEL45 DEL45 DEL27 DEL32 DEL21 DEL32 DEL34 DEL27 DEL45 DEL32 DEL45 DEL27 DEL32 DEL21 DEL42 DEL43 DEL42 DEL32 DEL59 DEL58 DEL42 DEL32 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL45 DEL36 DEL36 DEL66 DEL66 DEL66 DEL40 DEL40