o Introduced RepositoryRequest to hold the bare minimum of items required for repo accesses
o Added cache for metadata.xml

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@803059 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.repository.DefaultRepositoryRequest;
+import org.apache.maven.artifact.repository.RepositoryRequest;
+        RepositoryRequest repositoryRequest = new DefaultRepositoryRequest();
+        repositoryRequest.setLocalRepository( session.getLocalRepository() );
+        repositoryRequest.setCache( session.getRepositoryCache() );
+
-                projectDependenciesResolver.resolve( currentProject, executionPlan.getRequiredResolutionScopes(), session.getLocalRepository(), currentProject.getRemoteArtifactRepositories() );
+                repositoryRequest.setRemoteRepositories( currentProject.getRemoteArtifactRepositories() );
+                projectDependenciesResolver.resolve( currentProject, executionPlan.getRequiredResolutionScopes(), repositoryRequest );
-                                                     session.getLocalRepository(),
-                                                     project.getPluginArtifactRepositories() );
+                                                     getRepositoryRequest( session, project ) );
+    private RepositoryRequest getRepositoryRequest( MavenSession session, MavenProject project )
+    {
+        RepositoryRequest request = new DefaultRepositoryRequest();
+
+        request.setCache( session.getRepositoryCache() );
+        request.setLocalRepository( session.getLocalRepository() );
+        request.setRemoteRepositories( project.getPluginArtifactRepositories() );
+
+        return request;
+    }
-                            pluginManager.getMojoDescriptor( plugin, goal, session.getLocalRepository(),
-                                                             project.getPluginArtifactRepositories() );
+                            pluginManager.getMojoDescriptor( plugin, goal, getRepositoryRequest( session, project ) );
-                                                             session.getLocalRepository(),
-                                                             project.getPluginArtifactRepositories() );
+                                                             getRepositoryRequest( session, project ) );
+        RepositoryRequest repositoryRequest = getRepositoryRequest( session, project );
+
-            resolvePluginVersion( plugin, session.getLocalRepository(), project.getPluginArtifactRepositories() );
+            resolvePluginVersion( plugin, repositoryRequest );
-        
-        return pluginManager.getMojoDescriptor( plugin, goal, session.getLocalRepository(), project.getPluginArtifactRepositories() );
+
+        return pluginManager.getMojoDescriptor( plugin, goal, repositoryRequest );
-    private void resolvePluginVersion( Plugin plugin, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories )
+    private void resolvePluginVersion( Plugin plugin, RepositoryRequest repositoryRequest )
+        ArtifactRepository localRepository = repositoryRequest.getLocalRepository();
+
-        for ( ArtifactRepository repository : remoteRepositories )
+        for ( ArtifactRepository repository : repositoryRequest.getRemoteRepositories() )
-            throw new PluginNotFoundException( plugin, remoteRepositories );
+            throw new PluginNotFoundException( plugin, repositoryRequest.getRemoteRepositories() );
-    private void populateDefaultConfigurationForPlugin( Plugin plugin, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories ) 
+    private void populateDefaultConfigurationForPlugin( Plugin plugin, RepositoryRequest repositoryRequest ) 
-                resolvePluginVersion( plugin, localRepository, remoteRepositories );
+                resolvePluginVersion( plugin, repositoryRequest );
-                Xpp3Dom dom = getDefaultPluginConfiguration( plugin, goal, localRepository, remoteRepositories );
+                Xpp3Dom dom = getDefaultPluginConfiguration( plugin, goal, repositoryRequest );
-    public void populateDefaultConfigurationForPlugins( Collection<Plugin> plugins, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories ) 
+    public void populateDefaultConfigurationForPlugins( Collection<Plugin> plugins, RepositoryRequest repositoryRequest ) 
-            populateDefaultConfigurationForPlugin( plugin, localRepository, remoteRepositories );
+            populateDefaultConfigurationForPlugin( plugin, repositoryRequest );
-    private Xpp3Dom getDefaultPluginConfiguration( Plugin plugin, String goal, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories ) 
+    private Xpp3Dom getDefaultPluginConfiguration( Plugin plugin, String goal, RepositoryRequest repositoryRequest ) 
-            mojoDescriptor = pluginManager.getMojoDescriptor( plugin, goal, localRepository, remoteRepositories );
+            mojoDescriptor = pluginManager.getMojoDescriptor( plugin, goal, repositoryRequest );
+            RepositoryRequest repositoryRequest = getRepositoryRequest( session, project );
+
-                    PluginDescriptor pluginDescriptor =
-                        pluginManager.loadPlugin( buildPlugin, session.getLocalRepository(),
-                                                  project.getPluginArtifactRepositories() );
+                    PluginDescriptor pluginDescriptor = pluginManager.loadPlugin( buildPlugin, repositoryRequest );

INS26 INS26 INS40 INS40 INS31 INS31 UPD83 MOV83 INS43 INS42 MOV44 INS44 MOV8 INS83 INS39 INS42 MOV44 INS44 MOV43 MOV8 INS60 INS21 INS21 INS42 UPD43 UPD42 INS43 INS42 INS60 INS21 INS21 INS41 INS60 INS43 UPD42 INS60 INS43 UPD42 INS43 UPD42 MOV42 INS43 UPD42 INS43 INS59 INS32 INS32 UPD42 UPD42 MOV42 INS43 INS59 INS32 INS32 INS42 INS43 INS59 INS8 UPD42 MOV42 MOV43 INS59 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS14 INS42 INS42 MOV32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS32 UPD42 UPD42 INS42 INS42 MOV32 INS42 INS42 INS32 INS21 UPD42 MOV42 INS42 INS32 INS42 INS42 INS60 INS43 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS59 INS42 INS21 INS42 INS42 INS42 INS42 INS32 UPD42 INS42 INS42 INS32 INS32 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 MOV32 UPD42 MOV42 UPD42 UPD42 INS42 UPD42 UPD42 MOV42 INS42 UPD42 INS42 UPD42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL44 DEL42 DEL43 DEL43 DEL74 DEL42 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL43 DEL74 DEL42 DEL42 DEL42 DEL39 DEL42 DEL43 DEL43 DEL74 DEL44 DEL31 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32