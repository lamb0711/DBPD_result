MNG-3937 - goals inheritance.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@736233 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.Comparator;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
+import java.util.*;
-import org.apache.maven.shared.model.DomainModel;
-import org.apache.maven.shared.model.DomainModelFactory;
-import org.apache.maven.shared.model.InterpolatorProperty;
-import org.apache.maven.shared.model.ModelContainer;
-import org.apache.maven.shared.model.ModelContainerAction;
-import org.apache.maven.shared.model.ModelContainerFactory;
-import org.apache.maven.shared.model.ModelDataSource;
-import org.apache.maven.shared.model.ModelEventListener;
-import org.apache.maven.shared.model.ModelProperty;
-import org.apache.maven.shared.model.ModelTransformer;
-import org.apache.maven.shared.model.ModelTransformerContext;
+import org.apache.maven.shared.model.*;
+import org.apache.maven.project.builder.rules.ExecutionRule;
-    
+
+    private static Collection<ModelContainerInfo> goals_infos = Arrays.asList(
+             ModelContainerInfo.Factory.createModelContainerInfo(
+                    new AlwaysJoinModelContainerFactory(), new ExecutionRule(), null)
+            );
+
+    private static Collection<ModelContainerInfo> plugin_executions = Arrays.asList(
+            ModelContainerInfo.Factory.createModelContainerInfo(
+                    new IdModelContainerFactory(ProjectUri.Build.Plugins.Plugin.Executions.Execution.xUri),
+                     null, goals_infos)
+            );
+
+
+    public static final Collection<ModelContainerInfo> MODEL_CONTAINER_INFOS = Arrays.asList(
+            ModelContainerInfo.Factory.createModelContainerInfo(
+                    new ArtifactModelContainerFactory(), null, plugin_executions),
+            ModelContainerInfo.Factory.createModelContainerInfo(
+                    new IdModelContainerFactory(ProjectUri.PluginRepositories.PluginRepository.xUri), null, null),
+            ModelContainerInfo.Factory.createModelContainerInfo(
+                    new IdModelContainerFactory(ProjectUri.Repositories.Repository.xUri), null, null),
+            ModelContainerInfo.Factory.createModelContainerInfo(
+                    new IdModelContainerFactory(ProjectUri.Reporting.Plugins.Plugin.ReportSets.ReportSet.xUri), null, null),
+            ModelContainerInfo.Factory.createModelContainerInfo(
+                    new IdModelContainerFactory(ProjectUri.Profiles.Profile.xUri), null, null)
+    );
+
+                                                                          ProjectUri.Build.PluginManagement.Plugins.Plugin.Executions.xUri,
+                                                                          ProjectUri.Build.PluginManagement.Plugins.Plugin.Executions.Execution.Goals.xURI,
-                                                                          ProjectUri.Profiles.Profile.Build.PluginManagement.Plugins.Plugin.Executions.xUri,
+                                                                        //  ProjectUri.Profiles.Profile.Build.PluginManagement.Plugins.Plugin.Executions.xUri,
+                                                                        //  ProjectUri.Profiles.Profile.Build.PluginManagement.Plugins.Plugin.Executions.Execution.Goals.xURI,
-        ModelDataSource source = new DefaultModelDataSource();
-        source.init( props, PomTransformer.MODEL_CONTAINER_FACTORIES  );
+        ModelDataSource source = new DefaultModelDataSource( props, PomTransformer.MODEL_CONTAINER_FACTORIES );
-
+        List<ModelProperty> foobar = new ArrayList<ModelProperty>();
-                    ModelDataSource pluginDatasource = new DefaultModelDataSource();
-                    pluginDatasource.init( pluginContainer.getProperties(), PomTransformer.MODEL_CONTAINER_FACTORIES );
-
-                    ModelDataSource managementDatasource = new DefaultModelDataSource();
-                    managementDatasource.init( managementContainer.getProperties(), PomTransformer.MODEL_CONTAINER_FACTORIES );
+                    ModelDataSource pluginDatasource = new DefaultModelDataSource(  pluginContainer.getProperties(), PomTransformer.MODEL_CONTAINER_FACTORIES );
+                    ModelDataSource managementDatasource = new DefaultModelDataSource( managementContainer.getProperties(), PomTransformer.MODEL_CONTAINER_FACTORIES );
-
+                    //THIS JOIN REVERSES ORDER
-                            if(b.containerAction(c).equals(ModelContainerAction.JOIN))
+                            if(b.containerAction(c).equals(ModelContainerAction.JOIN)) //----
+                                //MNG-3995 - property lost here
-                                joinedExecutionContainers.add(a);
+                                foobar.addAll(b.getProperties());
+                                foobar.addAll(c.getProperties());
+                                //REVERSE ORDER HERE
+                                joinedExecutionContainers.add(a);//-----
-        ModelDataSource dataSource = new DefaultModelDataSource();
-        
-        dataSource.init( props, PomTransformer.MODEL_CONTAINER_FACTORIES );
-        
+        ModelDataSource dataSource = new DefaultModelDataSource( props, PomTransformer.MODEL_CONTAINER_FACTORIES );
+
-            ModelDataSource executionSource = new DefaultModelDataSource();
-            
-            executionSource.init( pluginContainer.getProperties(),
-                                  Arrays.asList( new ArtifactModelContainerFactory(), new PluginExecutionIdModelContainerFactory() ) );
+            ModelDataSource executionSource = new DefaultModelDataSource( pluginContainer.getProperties(),
+                                  Arrays.asList( new ArtifactModelContainerFactory(), new PluginExecutionIdModelContainerFactory() ));
+        //Execution Rule - extension for this needs to be pushed into model-builder
+
+        dataSource = new DefaultModelDataSource( props, PomTransformer.MODEL_CONTAINER_FACTORIES );
+
+        for(ModelContainer mc : dataSource.queryFor( ProjectUri.Build.Plugins.Plugin.xUri ))
+        {
+            ModelDataSource executionSource =
+                    new DefaultModelDataSource(mc.getProperties(),
+                            Arrays.asList(new IdModelContainerFactory(ProjectUri.Build.Plugins.Plugin.Executions.Execution.xUri),
+                                    new AlwaysJoinModelContainerFactory()));
+            for(ModelContainer es : executionSource.queryFor( ProjectUri.Build.Plugins.Plugin.Executions.Execution.xUri )) {
+                ModelContainerRule rule = new ExecutionRule();
+                //List<ModelProperty> x = rule.execute(es.getProperties());
+                List<ModelProperty> x = (!foobar.containsAll(es.getProperties())) ? rule.execute(es.getProperties()) :
+                        ModelTransformerContext.sort(rule.execute(es.getProperties()),
+                                ProjectUri.Build.Plugins.Plugin.Executions.Execution.xUri);
+                dataSource.replace(es, es.createNewInstance(x));
+            }
+        }
+
+        props = dataSource.getModelProperties();
+       
-            ModelDataSource ds = new DefaultModelDataSource();
-            ds.init( props, listener.getModelContainerFactories() );
+            ModelDataSource ds = new DefaultModelDataSource( props, listener.getModelContainerFactories() );
-
+//       for(ModelProperty mp : props) {
+//           if(mp.getUri().startsWith(ProjectUri.Build.Plugins.Plugin.Executions.Execution.configuration)) {
+//               System.out.println(mp);
+//           }
+//       }
-            ModelDataSource s = new DefaultModelDataSource();
-            s.init( tmp, Arrays.asList( new ArtifactModelContainerFactory()) );
+            ModelDataSource s = new DefaultModelDataSource( tmp, Arrays.asList( new ArtifactModelContainerFactory()) );
-                ModelDataSource source = new DefaultModelDataSource();
-                source.init( tmp, Arrays.asList( new ArtifactModelContainerFactory(), new PluginExecutionIdModelContainerFactory() ) );
+                ModelDataSource source = new DefaultModelDataSource( tmp, Arrays.asList( new ArtifactModelContainerFactory(), new PluginExecutionIdModelContainerFactory() ));
-                ModelDataSource source = new DefaultModelDataSource();
-                source.init( tmp, PomTransformer.MODEL_CONTAINER_FACTORIES );
+                ModelDataSource source = new DefaultModelDataSource( tmp, PomTransformer.MODEL_CONTAINER_FACTORIES );
-        ModelDataSource source = new DefaultModelDataSource();
-        source.init( modelProperties, PomTransformer.MODEL_CONTAINER_FACTORIES );
+        ModelDataSource source = new DefaultModelDataSource( modelProperties, PomTransformer.MODEL_CONTAINER_FACTORIES );
+

MOV26 UPD40 UPD40 UPD40 INS23 INS23 INS23 INS83 INS83 INS74 INS59 INS83 INS83 INS74 INS59 INS83 INS83 INS83 INS74 INS59 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS32 INS60 MOV60 INS21 INS70 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS32 INS32 INS74 INS59 INS7 INS44 INS32 INS8 INS7 INS40 INS42 INS14 INS14 INS33 INS40 INS42 INS14 INS33 INS42 INS40 INS42 INS14 INS33 INS42 INS40 INS42 INS14 INS33 INS33 INS40 INS42 INS14 INS33 INS33 INS40 INS42 INS14 INS33 INS33 INS40 INS42 INS14 INS33 INS33 INS43 INS43 INS42 INS14 UPD42 INS60 INS42 MOV14 INS43 INS42 INS42 INS42 INS40 INS60 INS70 INS42 INS32 INS43 INS43 INS43 INS40 INS43 INS43 INS40 INS43 INS40 INS43 INS40 INS43 INS40 INS40 INS40 INS42 INS40 INS42 INS42 INS74 INS42 INS40 INS43 INS59 INS42 INS40 INS42 MOV43 INS59 INS44 INS32 INS8 INS42 INS42 MOV43 MOV43 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS14 INS42 INS14 INS43 INS42 INS42 INS42 INS40 MOV60 INS60 MOV21 MOV42 INS60 INS60 INS42 INS42 MOV60 INS43 MOV32 MOV32 INS43 INS32 INS32 INS42 INS43 INS74 INS59 MOV43 INS42 MOV32 MOV43 INS42 MOV32 INS43 INS59 MOV43 INS59 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS14 INS14 INS42 UPD42 INS14 INS43 INS43 INS42 INS16 UPD42 UPD42 INS32 MOV42 INS42 INS42 INS14 MOV42 INS14 INS43 INS40 INS43 INS43 INS42 INS42 INS36 INS32 INS32 INS42 INS42 INS42 INS43 INS42 MOV32 MOV43 INS42 INS40 UPD42 UPD42 INS42 INS42 INS42 INS38 INS42 INS42 INS32 INS42 INS42 INS32 INS40 INS42 MOV32 INS40 MOV32 INS40 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS21 INS21 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL40 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL42 DEL40 DEL32 DEL21