Upgraded to java7 language features

-        Map<Object, Object> context = new HashMap<Object, Object>();
+        Map<Object, Object> context = new HashMap<>();
-            Map<Object, License> merged = new LinkedHashMap<Object, License>( ( src.size() + tgt.size() ) * 2 );
+            Map<Object, License> merged = new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setLicenses( new ArrayList<License>( merged.values() ) );
+            target.setLicenses( new ArrayList<>( merged.values() ) );
-            Map<Object, MailingList> merged = new LinkedHashMap<Object, MailingList>( ( src.size() + tgt.size() ) * 2 );
+            Map<Object, MailingList> merged = new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setMailingLists( new ArrayList<MailingList>( merged.values() ) );
+            target.setMailingLists( new ArrayList<>( merged.values() ) );
-            Map<Object, Developer> merged = new LinkedHashMap<Object, Developer>( ( src.size() + tgt.size() ) * 2 );
+            Map<Object, Developer> merged = new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setDevelopers( new ArrayList<Developer>( merged.values() ) );
+            target.setDevelopers( new ArrayList<>( merged.values() ) );
-            Map<Object, Contributor> merged = new LinkedHashMap<Object, Contributor>( ( src.size() + tgt.size() ) * 2 );
+            Map<Object, Contributor> merged = new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setContributors( new ArrayList<Contributor>( merged.values() ) );
+            target.setContributors( new ArrayList<>( merged.values() ) );
-            Map<Object, Profile> merged = new LinkedHashMap<Object, Profile>( ( src.size() + tgt.size() ) * 2 );
+            Map<Object, Profile> merged = new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setProfiles( new ArrayList<Profile>( merged.values() ) );
+            target.setProfiles( new ArrayList<>( merged.values() ) );
-            List<String> merged = new ArrayList<String>( tgt.size() + src.size() );
+            List<String> merged = new ArrayList<>( tgt.size() + src.size() );
-            Map<Object, Dependency> merged = new LinkedHashMap<Object, Dependency>( ( src.size() + tgt.size() ) * 2 );
+            Map<Object, Dependency> merged = new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setDependencies( new ArrayList<Dependency>( merged.values() ) );
+            target.setDependencies( new ArrayList<>( merged.values() ) );
-            Map<Object, Repository> merged = new LinkedHashMap<Object, Repository>( ( src.size() + tgt.size() ) * 2 );
+            Map<Object, Repository> merged = new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setRepositories( new ArrayList<Repository>( merged.values() ) );
+            target.setRepositories( new ArrayList<>( merged.values() ) );
-            Map<Object, Repository> merged = new LinkedHashMap<Object, Repository>( ( src.size() + tgt.size() ) * 2 );
+            Map<Object, Repository> merged = new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setPluginRepositories( new ArrayList<Repository>( merged.values() ) );
+            target.setPluginRepositories( new ArrayList<>( merged.values() ) );
-            Map<Object, Exclusion> merged = new LinkedHashMap<Object, Exclusion>( ( src.size() + tgt.size() ) * 2 );
+            Map<Object, Exclusion> merged = new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setExclusions( new ArrayList<Exclusion>( merged.values() ) );
+            target.setExclusions( new ArrayList<>( merged.values() ) );
-                new LinkedHashMap<Object, ReportPlugin>( ( src.size() + tgt.size() ) * 2 );
+                new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setPlugins( new ArrayList<ReportPlugin>( merged.values() ) );
+            target.setPlugins( new ArrayList<>( merged.values() ) );
-            Map<Object, ReportSet> merged = new LinkedHashMap<Object, ReportSet>( ( src.size() + tgt.size() ) * 2 );
+            Map<Object, ReportSet> merged = new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setReportSets( new ArrayList<ReportSet>( merged.values() ) );
+            target.setReportSets( new ArrayList<>( merged.values() ) );
-            List<String> merged = new ArrayList<String>( tgt.size() + src.size() );
+            List<String> merged = new ArrayList<>( tgt.size() + src.size() );
-            Map<Object, Dependency> merged = new LinkedHashMap<Object, Dependency>( ( src.size() + tgt.size() ) * 2 );
+            Map<Object, Dependency> merged = new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setDependencies( new ArrayList<Dependency>( merged.values() ) );
+            target.setDependencies( new ArrayList<>( merged.values() ) );
-            List<String> merged = new ArrayList<String>( tgt.size() + src.size() );
+            List<String> merged = new ArrayList<>( tgt.size() + src.size() );
-            List<String> merged = new ArrayList<String>( tgt.size() + src.size() );
+            List<String> merged = new ArrayList<>( tgt.size() + src.size() );
-            Map<Object, Notifier> merged = new LinkedHashMap<Object, Notifier>( ( src.size() + tgt.size() ) * 2 );
+            Map<Object, Notifier> merged = new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setNotifiers( new ArrayList<Notifier>( merged.values() ) );
+            target.setNotifiers( new ArrayList<>( merged.values() ) );
-            Map<Object, Extension> merged = new LinkedHashMap<Object, Extension>( ( src.size() + tgt.size() ) * 2 );
+            Map<Object, Extension> merged = new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setExtensions( new ArrayList<Extension>( merged.values() ) );
+            target.setExtensions( new ArrayList<>( merged.values() ) );
-            List<String> merged = new ArrayList<String>( tgt.size() + src.size() );
+            List<String> merged = new ArrayList<>( tgt.size() + src.size() );
-            Map<Object, Resource> merged = new LinkedHashMap<Object, Resource>( ( src.size() + tgt.size() ) * 2 );
+            Map<Object, Resource> merged = new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setResources( new ArrayList<Resource>( merged.values() ) );
+            target.setResources( new ArrayList<>( merged.values() ) );
-            Map<Object, Resource> merged = new LinkedHashMap<Object, Resource>( ( src.size() + tgt.size() ) * 2 );
+            Map<Object, Resource> merged = new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setTestResources( new ArrayList<Resource>( merged.values() ) );
+            target.setTestResources( new ArrayList<>( merged.values() ) );
-            Map<Object, Plugin> merged = new LinkedHashMap<Object, Plugin>( ( src.size() + tgt.size() ) * 2 );
+            Map<Object, Plugin> merged = new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setPlugins( new ArrayList<Plugin>( merged.values() ) );
+            target.setPlugins( new ArrayList<>( merged.values() ) );
-            Map<Object, Dependency> merged = new LinkedHashMap<Object, Dependency>( ( src.size() + tgt.size() ) * 2 );
+            Map<Object, Dependency> merged = new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setDependencies( new ArrayList<Dependency>( merged.values() ) );
+            target.setDependencies( new ArrayList<>( merged.values() ) );
-                new LinkedHashMap<Object, PluginExecution>( ( src.size() + tgt.size() ) * 2 );
+                new LinkedHashMap<>( ( src.size() + tgt.size() ) * 2 );
-            target.setExecutions( new ArrayList<PluginExecution>( merged.values() ) );
+            target.setExecutions( new ArrayList<>( merged.values() ) );
-            List<String> merged = new ArrayList<String>( tgt.size() + src.size() );
+            List<String> merged = new ArrayList<>( tgt.size() + src.size() );
-            List<String> merged = new ArrayList<String>( tgt.size() + src.size() );
+            List<String> merged = new ArrayList<>( tgt.size() + src.size() );
-            List<String> merged = new ArrayList<String>( tgt.size() + src.size() );
+            List<String> merged = new ArrayList<>( tgt.size() + src.size() );

INS60 INS21 MOV60 MOV21 INS60 INS21 MOV60 MOV21 INS60 MOV60 UPD74 MOV74 INS59 INS32 MOV74 INS59 INS32 MOV74 MOV74 INS59 INS42 INS14 INS42 INS42 INS14 UPD42 INS42 INS14 INS42 INS42 INS14 UPD42 INS42 INS14 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 INS74 INS74 MOV27 UPD74 MOV74 MOV32 UPD74 UPD74 UPD74 UPD74 INS74 MOV27 INS74 MOV32 UPD74 UPD74 UPD74 INS74 MOV27 UPD74 MOV43 MOV43 MOV43 MOV43 MOV43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL43 DEL74 DEL14 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL43 DEL74 DEL14 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60