[MNG-4186] Provide an exact pointer to documentation specific to each known exception that can occur

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@827792 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.LinkedHashMap;
+import java.util.Map;
+import org.apache.maven.exception.DefaultExceptionHandler;
+import org.apache.maven.exception.ExceptionHandler;
-import org.apache.maven.model.locator.ModelLocator;
-            if ( result.hasExceptions() )
-            {
-                ExceptionSummary es = result.getExceptionSummary();
-
-                if ( es == null )
-                {
-                    logger.error( "", result.getExceptions().get( 0 ) );
-                }
-                else
-                {
-                    if ( showErrors )
-                    {
-                        logger.error( es.getMessage(), es.getException() );
-                    }
-                    else
-                    {
-                        logger.error( es.getMessage() );
-                        logger.error( "To see the full stack trace of the error, re-run Maven with the -e switch." );
-                    }
-
-                    logger.error( "Re-run Maven using the -X switch to enable full debug logging." );
-
-                    if ( StringUtils.isNotEmpty( es.getReference() ) )
-                    {
-                        logger.error( "" );
-                        logger.error( "For more information about the error and possible solutions"
-                            + ", please try the following article:" );
-                        logger.error( "  " + es.getReference() );
-                    }
-                }
-
-                if ( MavenExecutionRequest.REACTOR_FAIL_NEVER.equals( request.getReactorFailureBehavior() ) )
-                {
-                    logger.info( "Build failures were ignored." );
-
-                    return 0;
-                }
-                else
-                {
-                    return 1;
-                }
-            }
-            else
-            {
-                return 0;
-            }
+            return processResult( request, result, showErrors );
+    private int processResult( MavenExecutionRequest request, MavenExecutionResult result, boolean showErrors )
+    {
+        if ( result.hasExceptions() )
+        {
+            ExceptionHandler handler = new DefaultExceptionHandler();
+
+            Map<String, String> references = new LinkedHashMap<String, String>();
+
+            for ( Throwable exception : result.getExceptions() )
+            {
+                ExceptionSummary summary = handler.handleException( exception );
+
+                logSummary( summary, references, "", showErrors );
+            }
+
+            logger.error( "" );
+
+            if ( !showErrors )
+            {
+                logger.error( "To see the full stack trace of the errors, re-run Maven with the -e switch." );
+            }
+            if ( !logger.isDebugEnabled() )
+            {
+                logger.error( "Re-run Maven using the -X switch to enable full debug logging." );
+            }
+
+            if ( !references.isEmpty() )
+            {
+                logger.error( "" );
+                logger.error( "For more information about the errors and possible solutions"
+                    + ", please read the following articles:" );
+
+                for ( Map.Entry<String, String> entry : references.entrySet() )
+                {
+                    logger.error( entry.getValue() + " " + entry.getKey() );
+                }
+            }
+
+            if ( MavenExecutionRequest.REACTOR_FAIL_NEVER.equals( request.getReactorFailureBehavior() ) )
+            {
+                logger.info( "Build failures were ignored." );
+
+                return 0;
+            }
+            else
+            {
+                return 1;
+            }
+        }
+        else
+        {
+            return 0;
+        }
+    }
+
+    private void logSummary( ExceptionSummary summary, Map<String, String> references, String indent, boolean showErrors )
+    {
+        String referenceKey = "";
+
+        if ( StringUtils.isNotEmpty( summary.getReference() ) )
+        {
+            referenceKey = references.get( summary.getReference() );
+            if ( referenceKey == null )
+            {
+                referenceKey = "[" + references.size() + "]";
+                references.put( summary.getReference(), referenceKey );
+            }
+        }
+
+        if ( showErrors )
+        {
+            logger.error( indent + referenceKey, summary.getException() );
+        }
+        else
+        {
+            logger.error( indent + summary.getMessage() + " " + referenceKey );
+        }
+
+        indent += "  ";
+
+        for ( ExceptionSummary child : summary.getChildren() )
+        {
+            logSummary( child, references, indent, showErrors );
+        }
+    }
+

MOV26 INS26 INS26 INS26 INS40 INS40 INS40 UPD40 INS31 INS31 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS8 INS43 INS42 INS43 INS42 INS39 INS42 INS25 INS43 INS42 INS74 INS42 INS43 INS42 INS39 INS42 INS60 INS25 INS25 INS21 INS70 INS8 INS42 INS42 MOV32 INS8 MOV8 INS42 INS43 INS43 INS43 INS42 INS43 INS59 INS32 INS8 INS42 INS8 INS8 INS7 INS44 INS32 INS8 INS41 INS60 INS60 INS70 INS21 INS25 INS25 INS25 MOV25 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS21 INS25 INS21 INS21 INS42 INS45 INS43 INS42 INS42 INS42 INS21 INS32 INS43 INS59 INS74 INS59 INS44 MOV32 INS8 INS32 INS38 INS8 INS38 INS8 INS38 INS8 INS42 INS42 INS7 INS27 INS8 INS32 INS32 INS42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS14 INS43 INS43 INS43 INS42 INS14 INS43 INS42 INS60 INS21 INS42 INS42 INS45 INS42 INS21 INS32 MOV21 INS32 MOV21 INS21 INS70 INS42 INS32 INS42 INS33 INS21 INS21 INS42 INS42 INS27 INS32 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS74 INS42 MOV43 INS59 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS44 INS32 INS8 INS42 INS42 INS32 INS7 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS45 INS42 INS42 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS27 INS74 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS45 INS43 INS43 INS43 INS32 INS45 INS32 INS45 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS32 INS45 INS32 INS42 INS42 INS42 INS42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL45 DEL34 DEL32 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL45 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL25 DEL8