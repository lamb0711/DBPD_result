PR: MNG-257

refactor artifact creation to all go through the factory, and assign the type handler from there.
Attach EJB client to the EJB artifact so that it is installed/deployed along with it.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191096 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.metadata.ArtifactMetadataRetrievalException;
-import org.apache.maven.artifact.repository.layout.ArtifactPathFormatException;
+import org.apache.maven.artifact.handler.ArtifactHandler;
-    /**
-     * !!! WARNING !!! Never put <classifier/> in the POM. It is for mojo use
-     * only. Classifier is for specifying derived artifacts, like ejb-client.
-     */
+    private final ArtifactHandler artifactHandler;
+
+    // TODO: direct all through the artifact factory
-                            String classifier )
+                            String classifier,
+                            ArtifactHandler artifactHandler )
-        this.type = type;
+        this.artifactHandler = artifactHandler;
+        this.type = type;
+
-        
+
-    public DefaultArtifact( String groupId, String artifactId, String version, String scope, String type )
-    {
-        this( groupId, artifactId, version, scope, type, null );
-    }
-
-    public DefaultArtifact( String groupId, String artifactId, String version, String type )
-    {
-        this( groupId, artifactId, version, null, type, null );
-    }
-
-        return getConflictId() + ( hasClassifier() ? ( ":" + getClassifier() ) : "" ) + ":" + getBaseVersion();
+        return getDependencyConflictId() + ( hasClassifier() ? ( ":" + getClassifier() ) : "" ) + ":" + getBaseVersion();
-    public String getConflictId()
+    public String getDependencyConflictId()
-        throws ArtifactMetadataRetrievalException
-        try
-        {
-            setFile( new File( localRepository.getBasedir(), localRepository.pathOf( this ) ) );
-        }
-        catch ( ArtifactPathFormatException e )
-        {
-            throw new ArtifactMetadataRetrievalException( "Error reading local metadata", e );
-        }
+        setFile( new File( localRepository.getBasedir(), localRepository.pathOf( this ) ) );
+
+    public ArtifactHandler getArtifactHandler()
+    {
+        return artifactHandler;
+    }

MOV26 MOV31 UPD40 INS23 INS83 INS83 INS43 INS59 INS44 MOV21 UPD42 MOV8 INS43 INS42 UPD42 MOV42 INS42 INS43 INS42 INS21 MOV21 UPD42 MOV42 INS41 INS42 INS7 INS42 INS22 INS42 INS52 INS42 UPD42 DEL40 DEL26 DEL66 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL33 DEL17 DEL8 DEL31 DEL42 DEL43 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL33 DEL42 DEL33 DEL17