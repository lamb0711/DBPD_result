PR: MNG-505
use comparable versions in ranges

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219630 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.versioning.InvalidVersionSpecificationException;
-    
+
-    
-    public Plugin getPluginDefinitionForPrefix( String prefix, MavenSession session, MavenProject project ) throws PluginManagerException
+
+    public Plugin getPluginDefinitionForPrefix( String prefix, MavenSession session, MavenProject project )
+        throws PluginManagerException
-        
+
-            getLogger().info( "Refreshing plugin mapping metadata; looking for plugin with prefix: \'" + prefix + "\'." );
-            
+            getLogger().info(
+                "Refreshing plugin mapping metadata; looking for plugin with prefix: \'" + prefix + "\'." );
+
-            
+
-        
+
-                VersionRange versionRange = new VersionRange( plugin.getVersion() );
+                VersionRange versionRange = VersionRange.createFromVersionSpec( plugin.getVersion() );
-                if ( ( groupId == null || artifactId == null || version == null || ( groupId.equals( e.getGroupId() ) &&
-                    artifactId.equals( e.getArtifactId() ) && version.equals( e.getVersion() ) ) ) &&
-                    "maven-plugin".equals( e.getType() ) )
+                if ( groupId == null || artifactId == null || version == null )
+                {
+                    throw new PluginNotFoundException( e );
+                }
+                else if ( groupId.equals( e.getGroupId() ) && artifactId.equals( e.getArtifactId() ) &&
+                    version.equals( e.getVersion() ) && "maven-plugin".equals( e.getType() ) )
+            catch ( InvalidVersionSpecificationException e )
+            {
+                throw new PluginVersionResolutionException( plugin.getGroupId(), plugin.getArtifactId(),
+                                                            "Invalid version specification", e );
+            }
-        Mojo plugin = null;
+        Mojo plugin;
-                    if ( artifact != pluginArtifact )
+                    if ( !artifact.equals( pluginArtifact ) )
-                extractedConfiguration.addChild( DefaultPluginManager.copyConfiguration( child ) );
+                extractedConfiguration.addChild( copyConfiguration( child ) );
-            PlexusConfiguration childDom = (XmlPlexusConfiguration) dominant.getChild( child.getName(), false );
+            PlexusConfiguration childDom = dominant.getChild( child.getName(), false );
-        try
+        Field field = null;
+
+        while ( field == null )
-            return clazz.getDeclaredField( key );
-        }
-        catch ( NoSuchFieldException e )
-        {
-            Class superclass = clazz.getSuperclass();
-            if ( superclass != Object.class )
+            try
-                return findPluginField( superclass, key );
+                field = clazz.getDeclaredField( key );
-            else
+            catch ( NoSuchFieldException e )
-                throw e;
+                clazz = clazz.getSuperclass();
+                if ( clazz.equals( Object.class ) )
+                {
+                    throw e;
+                }
+        return field;
-    private PluginMappingManager getPluginMappingManager( MavenSession session, MavenProject project ) 
-    throws PluginManagerException
-{
-    PluginMappingManager mappingManager = session.getPluginMappingManager();
-
-    // don't reassemble the plugin mappings if the session has already been configured with them.
-    if ( mappingManager == null )
+    private PluginMappingManager getPluginMappingManager( MavenSession session, MavenProject project )
+        throws PluginManagerException
-        try
-        {
-            List pluginGroupIds = session.getSettings().getPluginGroups();
-            List pluginRepositories = project.getPluginArtifactRepositories();
-            ArtifactRepository localRepository = session.getLocalRepository();
+        PluginMappingManager mappingManager = session.getPluginMappingManager();
-            mappingManager = pluginMappingBuilder.loadPluginMappings( pluginGroupIds, pluginRepositories,
-                                                                      localRepository );
+        // don't reassemble the plugin mappings if the session has already been configured with them.
+        if ( mappingManager == null )
+        {
+            try
+            {
+                List pluginGroupIds = session.getSettings().getPluginGroups();
+                List pluginRepositories = project.getPluginArtifactRepositories();
+                ArtifactRepository localRepository = session.getLocalRepository();
-            // lazily configure this on the session.
-            session.setPluginMappingManager( mappingManager );
+                mappingManager = pluginMappingBuilder.loadPluginMappings( pluginGroupIds, pluginRepositories,
+                                                                          localRepository );
+
+                // lazily configure this on the session.
+                session.setPluginMappingManager( mappingManager );
+            }
+            catch ( RepositoryMetadataManagementException e )
+            {
+                throw new PluginManagerException( "Cannot load plugin mappings.", e );
+            }
+            catch ( PluginMappingManagementException e )
+            {
+                throw new PluginManagerException( "Cannot load plugin mappings.", e );
+            }
-        catch ( RepositoryMetadataManagementException e )
-        {
-            throw new PluginManagerException( "Cannot load plugin mappings.", e );
-        }
-        catch ( PluginMappingManagementException e )
-        {
-            throw new PluginManagerException( "Cannot load plugin mappings.", e );
-        }
+
+        return mappingManager;
-    
-    return mappingManager;
-}

INS26 INS40 INS8 INS60 INS61 INS41 INS43 INS59 INS27 MOV8 INS42 INS42 INS42 INS33 INS42 INS33 INS12 INS44 INS8 MOV32 INS21 MOV43 INS59 INS43 INS42 INS53 INS7 INS21 INS42 INS32 MOV27 INS25 INS42 INS14 INS42 MOV32 INS7 INS32 INS42 INS42 MOV32 MOV27 INS8 MOV8 INS43 INS32 INS32 INS45 INS42 INS38 INS42 MOV32 UPD42 MOV42 UPD42 MOV42 MOV57 MOV32 INS53 INS42 INS42 INS42 INS42 INS42 INS32 INS14 INS42 INS42 INS42 INS43 INS42 INS42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL36 DEL27 DEL36 DEL27 DEL33 DEL42 DEL42 DEL27 DEL42 DEL42 DEL43 DEL11 DEL41 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL27 DEL42 DEL32 DEL41 DEL8