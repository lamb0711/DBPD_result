PR: MNG-847
merge metadata if it is duplicated

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@280086 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.repository.ArtifactRepository;
-import org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Reader;
-import org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Writer;
-import org.codehaus.plexus.util.IOUtil;
-import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
-
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.FileReader;
-import java.io.FileWriter;
-import java.io.IOException;
-import java.io.Reader;
-import java.io.Writer;
-import java.util.Iterator;
-    private Versioning versioning;
-
-        this.artifact = artifact;
+        this( artifact, null );
-        this.versioning = versioning;
+        super( createMetadata( artifact, versioning ) );
-    public String toString()
-    {
-        return "repository metadata for: \'" + getKey() + "\'";
-    }
-
+        // Don't want the artifact's version in here, as this is stored in the directory above that
-    protected void updateRepositoryMetadata( ArtifactRepository localRepository, ArtifactRepository remoteRepository )
-        throws IOException
-    {
-        MetadataXpp3Reader mappingReader = new MetadataXpp3Reader();
-
-        Metadata metadata = null;
-
-        File metadataFile = new File( localRepository.getBasedir(),
-                                      localRepository.pathOfLocalRepositoryMetadata( this, remoteRepository ) );
-
-        if ( metadataFile.exists() )
-        {
-            Reader reader = null;
-
-            try
-            {
-                reader = new FileReader( metadataFile );
-
-                metadata = mappingReader.read( reader );
-            }
-            catch ( FileNotFoundException e )
-            {
-                // TODO: Log a warning
-            }
-            catch ( IOException e )
-            {
-                // TODO: Log a warning
-            }
-            catch ( XmlPullParserException e )
-            {
-                // TODO: Log a warning
-            }
-            finally
-            {
-                IOUtil.close( reader );
-            }
-        }
-
-        boolean changed = false;
-
-        // If file could not be found or was not valid, start from scratch
-        if ( metadata == null )
-        {
-            metadata = new Metadata();
-
-            metadata.setGroupId( artifact.getGroupId() );
-            metadata.setArtifactId( artifact.getArtifactId() );
-            changed = true;
-        }
-
-        if ( versioning != null )
-        {
-            Versioning v = metadata.getVersioning();
-            if ( v != null )
-            {
-                if ( versioning.getRelease() != null )
-                {
-                    changed = true;
-                    v.setRelease( versioning.getRelease() );
-                }
-                if ( versioning.getLatest() != null )
-                {
-                    changed = true;
-                    v.setLatest( versioning.getLatest() );
-                }
-                for ( Iterator i = versioning.getVersions().iterator(); i.hasNext(); )
-                {
-                    String version = (String) i.next();
-                    if ( !v.getVersions().contains( version ) )
-                    {
-                        changed = true;
-                        v.getVersions().add( version );
-                    }
-                }
-            }
-            else
-            {
-                metadata.setVersioning( versioning );
-                changed = true;
-            }
-        }
-
-        if ( changed )
-        {
-            Writer writer = null;
-            try
-            {
-                metadataFile.getParentFile().mkdirs();
-                writer = new FileWriter( metadataFile );
-
-                MetadataXpp3Writer mappingWriter = new MetadataXpp3Writer();
-
-                mappingWriter.write( writer, metadata );
-            }
-            finally
-            {
-                IOUtil.close( writer );
-            }
-        }
-        else
-        {
-            metadataFile.setLastModified( System.currentTimeMillis() );
-        }
-    }
-
-        return artifact.getGroupId() + ":" + artifact.getArtifactId();
+        return "artifact " + artifact.getGroupId() + ":" + artifact.getArtifactId();
-        return artifact.isSnapshot();
-    }
-
-    public Snapshot getSnapshot()
-    {
-        return null;
+        // Don't consider the artifact's version in here, as this is stored in the directory above that
+        return false;

INS17 INS46 INS42 INS33 INS32 INS9 INS42 INS42 INS42 INS45 MOV32 MOV32 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL83 DEL42 DEL43 DEL42 DEL45 DEL42 DEL32 DEL45 DEL27 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL52 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8 DEL25 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL9 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL9 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL38 DEL42 DEL9 DEL7 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL83 DEL42 DEL43 DEL42 DEL33 DEL41 DEL8 DEL31