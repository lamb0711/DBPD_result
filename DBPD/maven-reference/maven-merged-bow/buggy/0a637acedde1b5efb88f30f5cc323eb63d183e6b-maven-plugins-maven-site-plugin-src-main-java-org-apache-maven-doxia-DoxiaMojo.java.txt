rollback last set of changes, and fix the bug in the existing revision by storing the filenames in a list rather than the identical keys in a set

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@227282 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collection;
-import java.util.HashSet;
-import java.util.Set;
-            Locale locale;
-                locale = (Locale) iterator.next();
+                Locale locale = (Locale) iterator.next();
-                    MavenReport report;
-                        report = (MavenReport) j.next();
+                        MavenReport report = (MavenReport) j.next();
-                    Map.Entry entry;
+
-                        entry = (Map.Entry) it.next();
-                        Set values = (Set) entry.getValue();
+                        Map.Entry entry = (Map.Entry) it.next();
+                        Collection values = (Collection) entry.getValue();
-     * @todo should only be needed once
-     * 
-     * @param reports  a list of reports
+     * @param reports a list of reports
-     * @return the inpustream 
-     * @throws MojoExecutionException is any 
+     * @return the inpustream
+     * @throws MojoExecutionException is any
+     * @todo should only be needed once
-            ReportPlugin reportPlugin;
-                reportPlugin = (ReportPlugin) it.next();
+                ReportPlugin reportPlugin = (ReportPlugin) it.next();
-                        ReportSet reportSet;
-                            reportSet = (ReportSet) j.next();
+                            ReportSet reportSet = (ReportSet) j.next();
-        
-        List siteFileNames = FileUtils.getFileNames( directory, null, defaultExcludes, false );
-
-        String currentFileName;
-        for ( Iterator it = siteFileNames.iterator(); it.hasNext(); )
+        List siteFiles = FileUtils.getFileNames( directory, null, defaultExcludes, false );
+        for ( Iterator it = siteFiles.iterator(); it.hasNext(); )
-            currentFileName = (String) it.next();
+            String currentFile = (String) it.next();
-            if ( currentFileName.lastIndexOf( File.separator ) == -1 )
+            if ( currentFile.lastIndexOf( File.separator ) == -1 )
-            if ( currentFileName.lastIndexOf( "." ) == -1 )
+            if ( currentFile.lastIndexOf( "." ) == -1 )
-            String key = currentFileName.substring( currentFileName.indexOf( File.separator ) + 1,
-                                                currentFileName.lastIndexOf( "." ) );
+            String key = currentFile.substring( currentFile.indexOf( File.separator ) + 1,
+                                                currentFile.lastIndexOf( "." ) );
-            String filePattern = "**/" + key + ".*";
-
-            List duplicateFileNames = FileUtils.getFileNames( directory, filePattern, defaultExcludes, false );
-            Set duplicatedFileNamesSet = (Set) duplicate.get( key.toLowerCase() );
-            if ( duplicatedFileNamesSet == null )
+            List tmp = (List) duplicate.get( key.toLowerCase() );
+            if ( tmp == null )
-                duplicatedFileNamesSet = new HashSet();
+                tmp = new ArrayList();
+                duplicate.put( key.toLowerCase(), tmp );
-
-            String tmp;
-            for ( Iterator it2 = duplicateFileNames.iterator(); it2.hasNext(); )
-            {
-                tmp = (String) it2.next();
-                if ( tmp.lastIndexOf( File.separator ) == -1 )
-                {
-                    // ignore files directly in the directory
-                    continue;
-                }
-
-                duplicatedFileNamesSet.add( directory.getAbsolutePath() + File.separator + tmp );
-            }
-            duplicate.put( key.toLowerCase(), duplicatedFileNamesSet );
+            tmp.add( currentFile );

MOV26 UPD40 MOV65 UPD66 UPD66 UPD66 UPD42 INS60 MOV21 MOV43 INS59 MOV8 MOV8 UPD43 INS60 INS60 UPD42 INS42 MOV11 MOV38 MOV38 UPD42 UPD42 UPD42 MOV21 UPD42 UPD42 MOV42 MOV43 INS59 MOV43 INS59 UPD42 UPD42 UPD42 MOV43 INS42 MOV11 INS42 MOV11 UPD42 UPD42 UPD42 UPD42 UPD43 INS60 INS60 UPD42 MOV43 INS59 MOV43 INS59 UPD43 INS42 MOV11 INS42 MOV11 UPD42 INS60 UPD43 MOV43 INS59 UPD42 INS42 MOV11 DEL40 DEL26 DEL42 DEL59 DEL60 DEL42 DEL7 DEL21 DEL42 DEL59 DEL60 DEL42 DEL7 DEL21 DEL42 DEL59 DEL60 DEL42 DEL7 DEL21 DEL42 DEL59 DEL60 DEL42 DEL7 DEL21 DEL42 DEL59 DEL60 DEL42 DEL7 DEL21 DEL42 DEL59 DEL60 DEL42 DEL7 DEL21 DEL42 DEL43 DEL42 DEL45 DEL42 DEL45 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL9 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL32 DEL40 DEL42 DEL27 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL7 DEL21 DEL42 DEL42 DEL40 DEL32 DEL34 DEL38 DEL27 DEL18 DEL8 DEL25 DEL8 DEL24