implement snapshot policies: default is to only check once a day (after crossing midnight), or if --update-snapshots (-U) is specified on the command line


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163711 13f79535-47bb-0310-9956-ffa450edef68

-    public static int main( String[] args, ClassWorld classWorld ) throws Exception
+    public static int main( String[] args, ClassWorld classWorld )
+        throws Exception
-        ArtifactRepositoryFactory artifactRepositoryFactory = (ArtifactRepositoryFactory) embedder
-                                                                                                  .lookup( ArtifactRepositoryFactory.ROLE );
+        ArtifactRepositoryFactory artifactRepositoryFactory = (ArtifactRepositoryFactory) embedder.lookup(
+            ArtifactRepositoryFactory.ROLE );
+
+        if ( commandLine.hasOption( CLIManager.UPDATE_SNAPSHOTS ) )
+        {
+            artifactRepositoryFactory.setGlobalSnapshotPolicy( ArtifactRepository.SNAPSHOT_POLICY_ALWAYS );
+        }
-        ArtifactRepositoryLayout repositoryLayout = (ArtifactRepositoryLayout) embedder
-                                                                                       .lookup(
-                                                                                                ArtifactRepositoryLayout.ROLE,
-                                                                                                repoLayoutId );
+        ArtifactRepositoryLayout repositoryLayout = (ArtifactRepositoryLayout) embedder.lookup(
+            ArtifactRepositoryLayout.ROLE, repoLayoutId );
+        public static final char UPDATE_SNAPSHOTS = 'U';
+
-            options.addOption( OptionBuilder.withLongOpt( "nobanner" ).withDescription( "Suppress logo banner" )
-                                            .create( NO_BANNER ) );
-            options
-                   .addOption( OptionBuilder.withLongOpt( "define" ).hasArg()
-                                            .withDescription( "Define a system property" ).create( SET_SYSTEM_PROPERTY ) );
-            options.addOption( OptionBuilder.withLongOpt( "offline" ).hasArg().withDescription( "Work offline" )
-                                            .create( WORK_OFFLINE ) );
-            options
-                   .addOption( OptionBuilder.withLongOpt( "mojoDescriptors" )
-                                            .withDescription( "Display available mojoDescriptors" ).create( LIST_GOALS ) );
-            options.addOption( OptionBuilder.withLongOpt( "help" ).withDescription( "Display help information" )
-                                            .create( HELP ) );
-            options.addOption( OptionBuilder.withLongOpt( "offline" ).withDescription( "Build is happening offline" )
-                                            .create( WORK_OFFLINE ) );
-            options.addOption( OptionBuilder.withLongOpt( "version" ).withDescription( "Display version information" )
-                                            .create( VERSION ) );
-            options.addOption( OptionBuilder.withLongOpt( "debug" ).withDescription( "Produce execution debug output" )
-                                            .create( DEBUG ) );
-            options.addOption( OptionBuilder.withLongOpt( "reactor" )
-                                            .withDescription( "Execute goals for project found in the reactor" )
-                                            .create( REACTOR ) );
-            options.addOption( OptionBuilder.withLongOpt( "non-recursive" )
-                                            .withDescription( "Do not recurse into sub-projects" )
-                                            .create( NON_RECURSIVE ) );
-            options.addOption( OptionBuilder.withLongOpt( "v1-local-repository" )
-                                            .withDescription( "Use legacy layout for local artifact repository" )
-                                            .create( VERSION_1_REPO ) );
+            options.addOption( OptionBuilder.withLongOpt( "nobanner" ).withDescription( "Suppress logo banner" ).create(
+                NO_BANNER ) );
+            options.addOption( OptionBuilder.withLongOpt( "define" ).hasArg().withDescription(
+                "Define a system property" ).create( SET_SYSTEM_PROPERTY ) );
+            options.addOption( OptionBuilder.withLongOpt( "offline" ).hasArg().withDescription( "Work offline" ).create(
+                WORK_OFFLINE ) );
+            options.addOption( OptionBuilder.withLongOpt( "mojoDescriptors" ).withDescription(
+                "Display available mojoDescriptors" ).create( LIST_GOALS ) );
+            options.addOption( OptionBuilder.withLongOpt( "help" ).withDescription( "Display help information" ).create(
+                HELP ) );
+            options.addOption( OptionBuilder.withLongOpt( "offline" ).withDescription( "Build is happening offline" ).create(
+                WORK_OFFLINE ) );
+            options.addOption( OptionBuilder.withLongOpt( "version" ).withDescription( "Display version information" ).create(
+                VERSION ) );
+            options.addOption( OptionBuilder.withLongOpt( "debug" ).withDescription( "Produce execution debug output" ).create(
+                DEBUG ) );
+            options.addOption( OptionBuilder.withLongOpt( "reactor" ).withDescription(
+                "Execute goals for project found in the reactor" ).create( REACTOR ) );
+            options.addOption( OptionBuilder.withLongOpt( "non-recursive" ).withDescription(
+                "Do not recurse into sub-projects" ).create( NON_RECURSIVE ) );
+            options.addOption( OptionBuilder.withLongOpt( "v1-local-repository" ).withDescription(
+                "Use legacy layout for local artifact repository" ).create( VERSION_1_REPO ) );
-            options.addOption( OptionBuilder.withLongOpt( "v2-local-repository" )
-                                            .withDescription( "Use new layout for local artifact repository" )
-                                            .create( VERSION_2_REPO ) );
+            options.addOption( OptionBuilder.withLongOpt( "v2-local-repository" ).withDescription(
+                "Use new layout for local artifact repository" ).create( VERSION_2_REPO ) );
+            options.addOption( OptionBuilder.withLongOpt( "update-snapshots" ).withDescription(
+                "Update all snapshots regardless of repository policies" ).create( UPDATE_SNAPSHOTS ) );
-        public CommandLine parse( String[] args ) throws ParseException
+        public CommandLine parse( String[] args )
+            throws ParseException
-                                                           ArtifactRepositoryFactory repoFactory,
-                                                           ArtifactRepositoryLayout repositoryLayout ) throws Exception
+                                                            ArtifactRepositoryFactory repoFactory,
+                                                            ArtifactRepositoryLayout repositoryLayout )
+        throws Exception
-            localRepository = new File( userConfigurationDirectory, MavenConstants.MAVEN_REPOSITORY ).getAbsolutePath();
+            localRepository =
+                new File( userConfigurationDirectory, MavenConstants.MAVEN_REPOSITORY ).getAbsolutePath();

INS23 INS25 INS83 INS83 INS83 INS39 INS59 INS32 INS8 INS42 INS13 INS21 INS42 INS42 INS40 INS21 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS45