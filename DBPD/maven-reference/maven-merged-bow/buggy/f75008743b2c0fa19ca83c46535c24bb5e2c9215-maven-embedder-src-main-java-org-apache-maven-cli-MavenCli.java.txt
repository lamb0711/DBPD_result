[MNG-5754] Toolchains should be read during initialization
MavenExecutionRequest has been extended with toolchains, which is filled by MavenCli
Interfaces have been extended with new methods, assuming only Maven provides implementations

+import org.apache.maven.building.FileSource;
+import org.apache.maven.building.Problem;
+import org.apache.maven.toolchain.MisconfiguredToolchainException;
+import org.apache.maven.toolchain.building.DefaultToolchainsBuildingRequest;
+import org.apache.maven.toolchain.building.ToolchainsBuildingException;
+import org.apache.maven.toolchain.building.ToolchainsBuildingResult;
+        toolchainsBuilder = container.lookup( ToolchainsBuilder.class );
+
-        
-        // Unlike settings, the toolchains aren't built here. 
-        // That's done by the maven-toolchains-plugin, by calling it from the project with the proper configuration
+
+        DefaultToolchainsBuildingRequest toolchainsRequest = new DefaultToolchainsBuildingRequest();
+        if ( globalToolchainsFile.isFile() )
+        {
+            toolchainsRequest.setGlobalToolchainsSource( new FileSource( globalToolchainsFile ) );
+        }
+        if ( userToolchainsFile.isFile() )
+        {
+            toolchainsRequest.setUserToolchainsSource( new FileSource( userToolchainsFile ) );
+        }
+
+        eventSpyDispatcher.onEvent( toolchainsRequest );
+
+        slf4jLogger.debug( "Reading global toolchains from "
+            + getLocation( toolchainsRequest.getGlobalToolchainsSource(), globalToolchainsFile ) );
+        slf4jLogger.debug( "Reading user toolchains from "
+            + getLocation( toolchainsRequest.getUserToolchainsSource(), userToolchainsFile ) );
+
+        ToolchainsBuildingResult toolchainsResult;
+        try
+        {
+            toolchainsResult = toolchainsBuilder.build( toolchainsRequest );
+        }
+        catch ( ToolchainsBuildingException e )
+        {
+            throw new MisconfiguredToolchainException( e.getMessage(), e );
+        }
+
+        eventSpyDispatcher.onEvent( toolchainsRequest );
+
+        executionRequestPopulator.populateFromToolchains( cliRequest.request,
+                                                          toolchainsResult.getEffectiveToolchains() );
+
+        if ( !toolchainsResult.getProblems().isEmpty() && slf4jLogger.isWarnEnabled() )
+        {
+            slf4jLogger.warn( "" );
+            slf4jLogger.warn( "Some problems were encountered while building the effective toolchains" );
+
+            for ( Problem problem : toolchainsResult.getProblems() )
+            {
+                slf4jLogger.warn( problem.getMessage() + " @ " + problem.getLocation() );
+            }
+
+            slf4jLogger.warn( "" );
+        }
-    private Object getLocation( Source source, File file )
+    private Object getLocation( Source source, File defaultLocation )
-        return file;
+        return defaultLocation;

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS21 INS60 INS25 INS25 INS21 INS21 INS21 INS60 INS54 INS21 INS21 INS25 UPD42 INS7 INS43 INS59 INS32 INS8 INS32 INS8 INS32 INS32 INS32 INS43 INS59 INS8 INS12 INS32 INS32 INS27 INS8 UPD42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS21 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS21 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS40 INS32 INS38 INS32 INS21 INS21 INS70 INS21 INS42 INS42 INS57 INS43 INS32 INS32 INS45 INS32 INS45 INS32 INS7 INS43 INS42 INS53 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS44 INS32 INS8 INS32 INS43 INS42 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS14 INS32 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS43 INS42 INS42 INS42 INS21 INS42 INS42 INS45 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS32 INS45 INS32 INS42 INS42 INS42 INS42