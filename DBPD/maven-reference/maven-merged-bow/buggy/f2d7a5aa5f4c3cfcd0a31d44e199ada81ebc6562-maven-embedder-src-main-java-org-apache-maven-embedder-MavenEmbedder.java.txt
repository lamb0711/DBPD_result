Fine-tuning an error reporting pointcut, and also adding a method to the embedder to allow a third party access to the build plan for a specific project, given a set of goals to be invoked.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@616825 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.lifecycle.LifecycleException;
+import org.apache.maven.lifecycle.plan.BuildPlan;
+import org.apache.maven.lifecycle.plan.BuildPlanner;
+import org.apache.maven.monitor.event.DefaultEventDispatcher;
+import org.apache.maven.monitor.event.EventDispatcher;
+import org.apache.maven.project.DuplicateProjectException;
+import org.codehaus.plexus.util.StringUtils;
+import org.codehaus.plexus.util.dag.CycleDetectedException;
+import java.util.Collections;
+    private BuildPlanner buildPlanner;
+
+    public BuildPlan getBuildPlan( List goals,
+                                   MavenProject project )
+        throws MavenEmbedderException
+    {
+        MavenExecutionRequest req = new DefaultMavenExecutionRequest( request );
+        req.setGoals( goals );
+
+        EventDispatcher dispatcher = new DefaultEventDispatcher( req.getEventMonitors() );
+
+        ReactorManager rm;
+
+        try
+        {
+            rm = new ReactorManager( Collections.singletonList( project ), ReactorManager.FAIL_FAST );
+        }
+        catch ( CycleDetectedException e )
+        {
+            // impossible, only one project.
+            throw new MavenEmbedderException( "Cycle detected in single-project reactor manager during build-plan lookup.", e );
+        }
+        catch ( DuplicateProjectException e )
+        {
+            // impossible, only one project.
+            throw new MavenEmbedderException( "Duplicate project detected in single-project reactor manager during build-plan lookup.", e );
+        }
+
+        MavenSession session = new MavenSession( container, request, dispatcher, rm );
+
+        try
+        {
+            return buildPlanner.constructBuildPlan( goals, project, session );
+        }
+        catch ( LifecycleException e )
+        {
+            throw new MavenEmbedderException( "Failed to construct build-plan for project: "
+                                              + project.getId() + " using goals: '"
+                                              + StringUtils.join( goals.iterator(), ", " ) + "'", e );
+        }
+    }
+
+            buildPlanner = (BuildPlanner) container.lookup( BuildPlanner.class );
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS83 INS43 INS59 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS21 INS60 INS60 INS54 INS60 INS54 INS42 INS42 INS43 INS59 INS32 INS43 INS59 INS43 INS59 INS8 INS12 INS12 INS43 INS59 INS8 INS12 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS21 INS44 INS8 INS44 INS8 INS42 INS42 INS14 INS41 INS44 INS8 INS21 INS43 INS42 INS43 INS32 INS7 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS53 INS7 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS14 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS11 INS43 INS32 INS40 INS43 INS45 INS42 INS43 INS45 INS42 INS43 INS27 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS45 INS32 INS45 INS42 INS42 INS42 INS57 INS42 INS42 INS42 INS42 INS32 INS45 INS43 INS42 INS42 INS42