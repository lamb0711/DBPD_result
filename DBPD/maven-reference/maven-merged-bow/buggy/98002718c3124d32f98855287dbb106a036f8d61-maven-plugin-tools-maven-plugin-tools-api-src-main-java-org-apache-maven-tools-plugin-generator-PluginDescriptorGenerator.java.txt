o Refactored mojo/plugin generation, extraction, etc. to accommodate multiple mojo languages.
o Tested with java mojos, mboot to verify nothing broken by refactor.
o TODO: Add marmalade support tests...currently only java-mojos are supported in mboot2, so this isn't going to interrupt things.
o TODO: Once marmalade support is tested, add to the list of artifacts built by mboot2.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163369 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.maven.plugin.generator;
+package org.apache.maven.tools.plugin.generator;
-import org.apache.maven.plugin.descriptor.Parameter;
+import org.apache.maven.plugin.MavenMojoDescriptor;
-import org.codehaus.plexus.util.xml.Xpp3Dom;
-import org.codehaus.plexus.util.xml.XMLWriter;
+import org.apache.maven.plugin.descriptor.Parameter;
+import org.apache.maven.project.MavenProject;
+import org.apache.maven.tools.plugin.util.PluginUtils;
+import org.codehaus.plexus.util.xml.XMLWriter;
+import java.util.Iterator;
+import java.util.Set;
- * @todo need to add validation directives so that systems embedding
- * maven2 can get validation directives to help users in IDEs.
+ * @todo need to add validation directives so that systems embedding maven2 can
+ *       get validation directives to help users in IDEs.
-    extends AbstractGenerator
+    implements Generator
-    protected void processPluginDescriptors( MojoDescriptor[] pluginDescriptors, String destinationDirectory, Xpp3Dom pomDom )
-        throws Exception
+    public void execute( String destinationDirectory, Set mavenMojoDescriptors, MavenProject project ) throws Exception
-        element( w, "id", pluginId( pomDom ) );
+        element( w, "id", PluginUtils.pluginId( project ) );
-        for ( int i = 0; i < pluginDescriptors.length; i++ )
+        for ( Iterator it = mavenMojoDescriptors.iterator(); it.hasNext(); )
-            processPluginDescriptor( pluginDescriptors[i], w, pomDom );
+            MavenMojoDescriptor descriptor = (MavenMojoDescriptor) it.next();
+            processPluginDescriptor( descriptor, w, project );
-        writeDependencies( w, pomDom );
+        PluginUtils.writeDependencies( w, project );
-    protected void processPluginDescriptor( MojoDescriptor mojoDescriptor, XMLWriter w, Xpp3Dom pomDom )
+    protected void processPluginDescriptor( MavenMojoDescriptor mavenMojoDescriptor, XMLWriter w, MavenProject project )
+        MojoDescriptor mojoDescriptor = mavenMojoDescriptor.getMojoDescriptor();
+
-        
+
-        // Strategy for handling repeated reference to mojo in 
-        // the calculated (decorated, resolved) execution stack 
+        // Strategy for handling repeated reference to mojo in
+        // the calculated (decorated, resolved) execution stack
-        
+
-        
+
-        if ( prereqs.size() > 0 )
+        if ( prereqs != null && prereqs.size() > 0 )
-    public void writeDependencies( XMLWriter w, Xpp3Dom pomDom )
-        throws Exception
-    {
-
-        w.startElement( "dependencies" );
-
-        Xpp3Dom deps = pomDom.getChild( "dependencies" );
-
-        if ( deps != null )
-        {
-            Xpp3Dom dependencies[] = deps.getChildren( "dependency" );
-    
-            for ( int i = 0; i < dependencies.length; i++ )
-            {
-                writeDependencyElement( dependencies[i], w );
-            }
-        }
-
-        w.endElement();
-    }
-
-    private void writeDependencyElement( Xpp3Dom dependency, XMLWriter w )
-        throws Exception
-    {
-        w.startElement( "dependency" );
-
-        Xpp3Dom groupId = dependency.getChild( "groupId" );
-
-        if ( groupId == null )
-        {
-            throw new Exception( "Missing dependency: 'groupId'." );
-        }
-
-        element( w, "groupId", groupId.getValue() );
-
-        Xpp3Dom artifactId = dependency.getChild( "artifactId" );
-
-        if ( artifactId == null )
-        {
-            throw new Exception( "Missing dependency: 'artifactId'." );
-        }
-
-        element( w, "artifactId", artifactId.getValue() );
-
-        Xpp3Dom type = dependency.getChild( "type" );
-
-        if ( type != null )
-        {
-            element( w, "type", type.getValue() );
-        }
-
-        Xpp3Dom version = dependency.getChild( "version" );
-
-        if ( version == null )
-        {
-            throw new Exception( "Missing dependency: 'version'." );
-        }
-
-        element( w, "version", version.getValue() );
-
-        w.endElement();
-    }
-

MOV26 MOV26 INS26 INS26 INS26 INS26 UPD40 INS40 INS40 UPD40 INS40 INS40 UPD43 MOV44 UPD42 UPD83 UPD42 UPD66 UPD66 INS43 UPD42 UPD43 UPD42 INS43 UPD42 UPD43 UPD42 INS60 UPD42 MOV42 UPD42 INS32 INS42 UPD42 MOV43 INS59 INS27 INS43 INS42 INS42 INS60 INS42 UPD42 INS42 INS32 INS27 MOV27 INS42 UPD42 INS42 UPD42 INS32 INS43 INS59 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS11 INS42 UPD42 INS43 INS32 INS42 INS42 INS42 DEL43 DEL85 DEL5 DEL39 DEL34 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL85 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL2 DEL42 DEL32 DEL21 DEL8 DEL24 DEL8 DEL25 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31