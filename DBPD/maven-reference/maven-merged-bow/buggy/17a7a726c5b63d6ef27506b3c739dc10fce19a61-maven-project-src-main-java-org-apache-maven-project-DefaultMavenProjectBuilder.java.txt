MNG-2868 The behavior in MNG-1577 is now available on the trunk                                                                   


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@520923 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.resolver.filter.ExcludesArtifactFilter;
+import org.apache.maven.artifact.versioning.ManagedVersionMap;
+import org.apache.maven.model.Exclusion;
+        
+        project.setManagedVersionMap(createManagedVersionMap(projectId, superModel.getDependencyManagement(), null));
-        Map managedVersions = createManagedVersionMap( projectId, project.getDependencyManagement() );
+        Map managedVersions = project.getManagedVersionMap();
-    private Map createManagedVersionMap( String projectId, DependencyManagement dependencyManagement )
+    private Map createManagedVersionMap( String projectId, DependencyManagement dependencyManagement, MavenProject parent )
-        Map map;
-        if ( dependencyManagement != null && dependencyManagement.getDependencies() != null )
+        Map map = null;
+        List deps;
+        if ( dependencyManagement != null && (deps = dependencyManagement.getDependencies()) != null && deps.size() > 0)
-            map = new HashMap();
+            map = new ManagedVersionMap( map );
+
+            if ( getLogger().isDebugEnabled() )
+            {
+                getLogger().debug( "Adding managed depedendencies for " + projectId );
+            }
+
+                    if ( getLogger().isDebugEnabled() )
+                    {
+                        getLogger().debug( "  " + artifact );
+                    }
+
+                    // If the dependencyManagement section listed exclusions,
+                    // add them to the managed artifacts here so that transitive
+                    // dependencies will be excluded if necessary.
+                    if ( null != d.getExclusions() && !d.getExclusions().isEmpty() )
+                    {
+                        List exclusions = new ArrayList();
+                        Iterator exclItr = d.getExclusions().iterator();
+                        while ( exclItr.hasNext() )
+                        {
+                            Exclusion e = (Exclusion) exclItr.next();
+                            exclusions.add( e.getGroupId() + ":" + e.getArtifactId() );
+                        }
+                        ExcludesArtifactFilter eaf = new ExcludesArtifactFilter( exclusions );
+                        artifact.setDependencyFilter( eaf );
+                    }
+                    else
+                    {
+                        artifact.setDependencyFilter( null );
+                    }
-        else
+        else if ( map == null )
+        project.setManagedVersionMap( createManagedVersionMap( projectId, project.getDependencyManagement(),
+                                                               project.getParent() ) );
+

INS26 INS26 INS26 INS40 INS40 INS40 INS44 INS21 INS43 INS42 INS60 INS21 INS32 INS42 INS43 INS59 INS27 INS25 INS32 INS42 INS42 INS32 INS32 INS33 INS42 INS42 MOV27 INS27 INS25 INS27 MOV8 INS42 INS42 MOV32 INS42 INS42 INS32 INS33 INS42 INS42 INS32 INS34 INS32 INS8 INS42 INS33 INS32 INS42 INS42 INS36 INS42 INS42 INS32 INS42 INS21 INS42 INS42 INS7 UPD43 INS42 INS42 INS32 INS42 MOV32 UPD42 INS32 INS42 INS27 INS25 INS25 INS42 INS45 INS42 INS32 INS8 INS27 INS8 INS8 INS32 INS42 INS21 INS27 INS38 INS60 INS60 INS61 INS60 INS21 INS21 INS42 INS32 INS33 INS32 INS32 INS43 INS59 INS43 INS59 INS32 INS8 INS43 INS59 INS32 INS32 INS32 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS60 INS21 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS45 INS42 INS42 INS42 INS43 INS32 INS42 INS43 INS59 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS27 INS42 INS43 INS32 INS32 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42