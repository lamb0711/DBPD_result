o Changed the repository to test.maven.codehaus.org for testing of the new repository and layout.
o Added <layout/> element to <repository/> elements in the maven.mdo
o Added pluginRepository configuration to the super-POM.
o Tested it all.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163791 13f79535-47bb-0310-9956-ffa450edef68

-
+            
-
+            
-        // TODO: Replace with repository layout detection. This is a nasty hack.
-        String remoteRepoLayoutId = "legacy";
-
-        ArtifactRepositoryLayout remoteRepoLayout = null;
-        try
-        {
-            remoteRepoLayout = (ArtifactRepositoryLayout) container.lookup( ArtifactRepositoryLayout.ROLE,
-                                                                            remoteRepoLayoutId );
-        }
-        catch ( ComponentLookupException e )
-        {
-            throw new ProjectBuildingException( "Cannot find repository layout for: \'" + remoteRepoLayoutId + "\'.",
-                                                e );
-        }
+            String layout = mavenRepo.getLayout();
+
+            ArtifactRepositoryLayout remoteRepoLayout = null;
+            try
+            {
+                remoteRepoLayout = (ArtifactRepositoryLayout) container.lookup( ArtifactRepositoryLayout.ROLE,
+                                                                                layout );
+            }
+            catch ( ComponentLookupException e )
+            {
+                throw new ProjectBuildingException( "Cannot find layout implementation corresponding to: \'" + layout + "\' for remote repository with id: \'" + mavenRepo.getId() + "\'.",
+                                                    e );
+            }
+            
-
-        // TODO: needs to be configured from the POM element
-
+        
-        Repository pluginRepo = new Repository();
-        pluginRepo.setId( "plugin-repository" );
-        pluginRepo.setUrl( "http://repo1.maven.org/maven2" );
+        for ( Iterator it = pluginRepositories.iterator(); it.hasNext(); )
+        {
+            Repository mavenRepo = (Repository) it.next();
+            
+            String layout = mavenRepo.getLayout();
-        // TODO: [jc] change this to detect the repository layout type somehow...
-        String repoLayoutId = "legacy";
+            ArtifactRepositoryLayout repositoryLayout = null;
+            try
+            {
+                repositoryLayout = (ArtifactRepositoryLayout) container.lookup( ArtifactRepositoryLayout.ROLE,
+                                                                                layout );
+            }
+            catch ( ComponentLookupException e )
+            {
+                throw new ProjectBuildingException( "Cannot find layout implementation corresponding to: \'" + layout + "\' for remote repository with id: \'" + mavenRepo.getId() + "\'.",
+                                                    e );
+            }
+            
+            ArtifactRepository pluginRepository = artifactRepositoryFactory.createArtifactRepository( mavenRepo, settings,
+                                                                                                      repositoryLayout );
-        ArtifactRepositoryLayout repositoryLayout = (ArtifactRepositoryLayout) container.lookup(
-            ArtifactRepositoryLayout.ROLE, repoLayoutId );
+            remotePluginRepositories.add( pluginRepository );
-        ArtifactRepository pluginRepository = artifactRepositoryFactory.createArtifactRepository( pluginRepo, settings,
-                                                                                                  repositoryLayout );
-
-        remotePluginRepositories.add( pluginRepository );
-
+        }
+        
-        // TODO: needs to be configured from the POM element
-
+        if(dmRepo == null)
+        {
+            return null;
+        }
+        
-        // TODO: [jc] change this to detect the repository layout type somehow...
-        String repoLayoutId = "legacy";
+        String repoLayoutId = dmRepo.getLayout();

INS24 INS25 INS58 INS32 INS8 INS27 INS8 INS60 MOV60 INS54 INS43 INS59 UPD42 MOV42 UPD42 MOV42 MOV60 MOV60 INS60 INS54 MOV60 MOV21 INS42 INS33 INS41 INS32 MOV43 INS59 INS8 INS12 INS42 INS42 INS32 MOV43 MOV43 INS59 INS8 INS12 INS33 INS42 INS42 INS42 INS32 INS21 MOV44 INS8 UPD42 MOV42 UPD42 MOV42 UPD42 INS11 INS42 INS32 MOV42 INS33 INS21 INS44 INS8 INS42 INS42 INS7 INS53 MOV43 INS32 INS42 INS42 INS7 INS43 INS42 INS53 UPD42 INS42 INS11 INS14 INS42 INS42 INS42 INS11 INS42 INS14 MOV43 INS32 MOV43 INS27 INS42 MOV43 MOV32 INS43 INS27 INS42 INS42 INS42 INS40 INS42 INS45 INS42 INS45 INS32 INS45 UPD42 INS42 INS45 INS42 INS45 INS32 INS45 INS42 INS42 INS42 INS42 DEL42 DEL45 DEL59 DEL60 DEL42 DEL42 DEL42 DEL40 DEL42 DEL32 DEL11 DEL7 DEL21 DEL8 DEL45 DEL42 DEL45 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL14 DEL42 DEL45 DEL45 DEL32 DEL21 DEL45 DEL32 DEL21 DEL11 DEL59 DEL60 DEL45