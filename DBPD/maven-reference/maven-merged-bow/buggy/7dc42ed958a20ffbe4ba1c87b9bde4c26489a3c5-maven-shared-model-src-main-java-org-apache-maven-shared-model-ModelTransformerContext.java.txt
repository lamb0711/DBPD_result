Replaced interpolator code.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@694907 13f79535-47bb-0310-9956-ffa450edef68

+    private final static List<InterpolatorProperty> environmentInterpolatorProperties =
+        new ArrayList<InterpolatorProperty>();
+
-            systemInterpolatorProperties.add( new InterpolatorProperty( "${env." + e.getKey() + "}", e.getValue() ) );
+            environmentInterpolatorProperties.add( new InterpolatorProperty( "${env." + e.getKey() + "}", e.getValue() ) );
+    public static List<InterpolatorProperty> createInterpolatorProperties(List<ModelProperty> modelProperties,
+                                                                      String baseUriForModel,
+                                                                      Map<String, String> aliases,
+                                                                      boolean includeSystemProperties,
+                                                                      boolean includeEnvironmentProperties)
+    {
+        if(modelProperties == null)
+        {
+            throw new IllegalArgumentException("modelProperties: null");
+        }
+
+        if(baseUriForModel == null)
+        {
+            throw new IllegalArgumentException( "baseUriForModel: null");
+        }
+
+        List<InterpolatorProperty> interpolatorProperties
+                = new ArrayList<InterpolatorProperty>( );
+
+        if( includeSystemProperties )
+        {
+            interpolatorProperties.addAll( systemInterpolatorProperties );
+        }
+
+        if( includeEnvironmentProperties )
+        {
+            interpolatorProperties.addAll( environmentInterpolatorProperties );
+        }
+
+        for ( ModelProperty mp : modelProperties )
+        {
+            InterpolatorProperty ip = mp.asInterpolatorProperty( baseUriForModel );
+            if ( ip != null )
+            {
+                interpolatorProperties.add( ip );
+                for ( Map.Entry<String, String> a : aliases.entrySet() )
+                {
+                    interpolatorProperties.add( new InterpolatorProperty(
+                            ip.getKey().replaceAll( a.getKey(), a.getValue()),
+                            ip.getValue().replaceAll( a.getKey(), a.getValue()) ) );
+                }
+            }
+        }
+        return interpolatorProperties;
+    }
+
+    public static void interpolateModelProperties(List<ModelProperty> modelProperties, 
+                                                  List<InterpolatorProperty> interpolatorProperties )
+    {
+
+        List<ModelProperty> unresolvedProperties = new ArrayList<ModelProperty>();
+        for ( ModelProperty mp : modelProperties )
+        {
+            if ( !mp.isResolved() )
+            {
+                unresolvedProperties.add( mp );
+            }
+        }
+
+        for ( InterpolatorProperty ip : interpolatorProperties )
+        {
+            for ( ModelProperty mp : unresolvedProperties )
+            {
+                  mp.resolveWith(ip);
+            }
+        }
+
+
+        for ( InterpolatorProperty ip : interpolatorProperties )
+        {
+            for ( ModelProperty mp : unresolvedProperties )
+            {
+                  mp.resolveWith(ip);
+            }
+        }
+    }
+
+
-                                 Collection<ImportModel> importModels, Collection<InterpolatorProperty> interpolatorProperties)
+                                 Collection<ImportModel> importModels, List<InterpolatorProperty> interpolatorProperties)
-        List<InterpolatorProperty> properties = new ArrayList<InterpolatorProperty>( interpolatorProperties );
-                importModelProperties(importModels, fromModelTransformer.transformToModelProperties( domainModels ));
+                importModelProperties(importModels, fromModelTransformer.transformToModelProperties( domainModels, interpolatorProperties ));
-        //interpolator
+
-
-        for ( ModelProperty mp : mps )
-        {
-            InterpolatorProperty ip = mp.asInterpolatorProperty( baseUriForModel );
-            if ( ip != null )
-            {
-                properties.add( ip );
-            }
-        }
-
-        List<ModelProperty> unresolvedProperties = new ArrayList<ModelProperty>();
-        for ( ModelProperty mp : mps )
-        {
-            if ( !mp.isResolved() )
-            {
-                unresolvedProperties.add( mp );
-            }
-        }
-
-        /*
-        for ( InterpolatorProperty ip : properties )
-        {
-            for ( ModelProperty mp : unresolvedProperties )
-            {
-                  mp.resolveWith(ip);
-                  System.out.println(mp);
-                 System.out.println("-------------------");
-            }
-        }
-        */
+        //interpolateModelProperties( mps, baseUriForModel );
-                    if(im.getId().equals(mp.getValue())) {
+                    if(im.getId().equals(mp.getResolvedValue())) {
-            if(mp.getValue() != null && mp.getValue().trim().equals("") && isLeafNode( mp, modelProperties) )
+            if(mp.getResolvedValue() != null && mp.getResolvedValue().trim().equals("") && isLeafNode( mp, modelProperties) )

INS23 INS31 INS31 INS83 INS83 INS83 INS74 INS59 INS83 INS83 INS74 INS42 INS44 INS44 INS44 INS44 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS43 INS43 INS42 INS14 INS43 INS43 INS74 INS42 INS43 INS42 INS74 INS42 INS39 INS42 INS39 INS42 INS25 INS25 MOV60 INS25 INS25 INS70 INS41 INS74 INS42 MOV74 INS42 MOV60 MOV70 INS70 INS70 UPD74 INS42 INS42 INS74 INS42 INS42 INS43 INS43 INS42 INS43 INS43 INS43 INS27 INS8 INS27 INS8 INS74 INS42 INS8 INS42 INS8 MOV44 INS42 INS8 INS42 INS43 INS43 UPD42 INS44 INS42 INS8 INS44 INS42 INS8 UPD43 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS53 INS42 INS33 INS53 INS43 INS43 UPD42 INS21 INS21 MOV60 INS25 INS42 INS42 INS43 INS42 INS70 INS43 INS42 INS70 UPD42 INS42 INS42 INS42 INS14 INS14 INS42 INS42 INS32 INS32 MOV27 INS8 INS42 INS44 INS42 INS8 INS42 INS44 INS42 INS8 UPD42 INS43 INS45 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS70 INS43 INS42 INS21 INS43 INS42 INS21 INS42 INS42 INS42 INS32 INS44 INS32 INS8 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS32 UPD42 INS40 INS42 INS42 INS42 INS42 INS14 UPD42 MOV43 INS32 INS32 UPD42 INS32 INS42 INS32 INS32 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL70