o Added creation of SHA1 digests alongside MD5's
o Modified digest-file creation to be text files, not binaries.

PR: MNG-311, MNG-287


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163975 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.FileOutputStream;
+import java.io.FileWriter;
-import java.io.OutputStream;
+import java.io.Writer;
-        if(artifactFile.exists() && digestFile.exists())
+        if ( artifactFile.exists() && digestFile.exists() )
-            
+
-                
+
-                
+
-                
+
-                    if(currentIdx >= digestLen || read != generatedDigest[currentIdx])
+                    if ( currentIdx >= digestLen || read != generatedDigest[currentIdx] )
-                throw new ArtifactDigestException("Cannot verify digest for artifact file: \'" + artifactFile + "\' against digest file: \'" + digestFile + "\' using algorithm: \'" + algorithm + "\'", e);
+                throw new ArtifactDigestException( "Cannot verify digest for artifact file: \'" + artifactFile
+                    + "\' against digest file: \'" + digestFile + "\' using algorithm: \'" + algorithm + "\'", e );
-            
+
-        
+
-    
-    private byte[] generateArtifactDigest( File artifactFile, String algorithm ) throws ArtifactDigestException
+
+    public byte[] generateArtifactDigest( File artifactFile, String algorithm )
+        throws ArtifactDigestException
-                digest.update(buffer, 0, read);
+                digest.update( buffer, 0, read );
-    private void writeDigestFile( File digestFile, byte[] digestData ) throws IOException
+    private void writeDigestFile( File digestFile, byte[] digestData )
+        throws IOException
-        OutputStream out = null;
+        Writer out = null;
-            out = new FileOutputStream( digestFile );
-            out.write( digestData );
-            out.flush();
+            out = new FileWriter( digestFile );
+            for ( int i = 0; i < digestData.length; i++ )
+            {
+                out.write( Integer.toHexString( digestData[i] ) );
+            }

UPD40 UPD40 UPD83 UPD43 UPD42 INS24 INS58 INS27 INS37 INS8 INS39 INS59 INS42 INS40 INS42 MOV21 UPD43 INS42 INS34 UPD42 INS32 INS42 INS42 INS2 INS42 INS42 DEL42 DEL42 DEL42 DEL32 DEL21