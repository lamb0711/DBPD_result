clean up integration tests, make them repository independent


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163758 13f79535-47bb-0310-9956-ffa450edef68

-
+import java.util.StringTokenizer;
+    // TODO: needs to be configurable
+    private static String localRepoLayout = "legacy";
+
-                line = replace( line, "${localRepository}", localRepo );
+
+                line = replaceArtifacts( line );
+    private static String replaceArtifacts( String line )
+    {
+        String MARKER = "${artifact:";
+        int index = line.indexOf( MARKER );
+        if ( index >= 0 )
+        {
+            String newLine = line.substring( 0, index );
+            index = line.indexOf( "}", index );
+            if ( index < 0 )
+            {
+                throw new IllegalArgumentException( "line does not contain ending artifact marker: '" + line + "'" );
+            }
+            String artifact = line.substring( newLine.length() + MARKER.length(), index );
+
+            newLine += convertArtifact( artifact );
+            newLine += line.substring( index + 1 );
+
+            line = replaceArtifacts( newLine );
+        }
+        return line;
+    }
+
+    private static String convertArtifact( String artifact )
+    {
+        StringTokenizer tok = new StringTokenizer( artifact, ":" );
+        if ( tok.countTokens() != 4 )
+        {
+            throw new IllegalArgumentException( "Artifact must have 4 tokens: '" + artifact + "'" );
+        }
+
+        String[] a = new String[4];
+        for ( int i = 0; i < 4; i++ )
+        {
+            a[i] = tok.nextToken();
+        }
+
+        String ext = a[3];
+        if ( a[3].equals( "maven-plugin" ) )
+        {
+            ext = "jar";
+        }
+
+        String repositoryPath;
+        if ( "legacy".equals( localRepoLayout ) )
+        {
+            repositoryPath = a[0] + "/" + a[3] + "s/" + a[1] + "-" + a[2] + "." + ext;
+        }
+        else if ( "default".equals( localRepoLayout ) )
+        {
+            String pathGroup = a[0].replace( '.', '/' );
+            repositoryPath = pathGroup + "/" + a[1] + "/" + a[2];
+            repositoryPath = repositoryPath + "/" + a[1] + "-" + a[2] + "." + ext;
+        }
+        else
+        {
+            throw new IllegalStateException( "Unknown layout: " + localRepoLayout );
+        }
+
+        return localRepo + "/" + repositoryPath;
+    }
+
-    public static String replaceOnce( String text, String repl, String with )
-    {
-        return replace( text, repl, with, 1 );
-    }
-
-    public static String replace( String text, String repl, String with )
-    {
-        return replace( text, repl, with, -1 );
-    }
-
-    public static String replace( String text, String repl, String with, int max )
-    {
-        if ( text == null || repl == null || with == null || repl.length() == 0 )
-        {
-            return text;
-        }
-
-        StringBuffer buf = new StringBuffer( text.length() );
-
-        int start = 0, end = 0;
-
-        while ( ( end = text.indexOf( repl, start ) ) != -1 )
-        {
-            buf.append( text.substring( start, end ) ).append( with );
-
-            start = end + repl.length();
-
-            if ( --max == 0 )
-            {
-                break;
-            }
-        }
-
-        buf.append( text.substring( start ) );
-
-        return buf.toString();
-    }
-

INS26 INS40 INS23 INS31 INS31 INS83 INS83 MOV43 INS59 INS83 MOV83 MOV43 UPD42 MOV42 MOV44 INS8 INS83 INS83 MOV43 INS42 MOV44 INS8 INS42 INS45 INS43 INS42 INS60 INS60 INS25 MOV41 UPD42 MOV60 INS25 INS60 INS24 INS60 INS25 INS60 INS25 MOV41 INS42 MOV43 INS59 INS39 INS59 INS27 INS8 UPD42 UPD43 INS27 INS8 INS5 INS59 INS58 INS27 INS37 INS8 MOV43 MOV59 INS32 INS8 MOV43 INS59 INS32 INS8 INS25 INS27 INS42 INS45 INS42 INS32 INS42 INS34 INS60 INS21 INS25 INS60 INS21 INS21 INS21 UPD42 UPD42 INS32 INS34 INS53 MOV43 INS85 INS42 INS3 INS39 INS59 INS42 INS34 INS42 INS21 UPD42 INS2 INS2 INS42 INS45 INS21 INS42 INS45 INS42 INS42 INS21 INS32 INS8 INS8 INS42 INS45 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV43 INS59 INS7 INS27 INS8 MOV43 INS59 INS7 INS7 INS7 UPD43 INS42 INS45 INS42 INS42 INS14 INS5 INS34 UPD42 MOV42 MOV34 INS7 INS42 INS34 INS42 INS34 INS7 INS7 INS45 UPD42 MOV42 UPD42 MOV42 INS60 MOV21 INS21 INS53 INS42 INS32 INS42 INS32 INS42 INS34 INS53 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 UPD42 INS43 INS27 MOV43 INS85 INS2 INS32 INS42 INS45 INS42 INS27 MOV43 INS59 INS7 INS14 INS42 INS42 INS34 INS42 UPD42 MOV42 UPD42 MOV42 INS45 UPD42 MOV42 INS14 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS27 UPD42 MOV42 UPD42 MOV42 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS2 INS45 INS2 INS45 INS2 INS45 INS2 INS45 INS42 INS42 INS32 UPD42 INS42 INS27 INS43 INS27 INS43 INS27 INS32 INS32 UPD42 MOV42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS2 UPD42 MOV42 INS13 INS13 UPD42 INS45 INS2 INS45 INS2 INS42 INS45 INS2 INS45 INS2 INS45 INS42 INS42 INS45 INS42 UPD42 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 DEL45 DEL42 DEL42 DEL42 DEL42 DEL32 DEL34 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL83 DEL42 DEL44 DEL42 DEL44 DEL42 DEL34 DEL32 DEL41 DEL8 DEL31 DEL83 DEL83 DEL42 DEL42 DEL44 DEL42 DEL44 DEL42 DEL34 DEL38 DEL32 DEL41 DEL8 DEL31 DEL83 DEL83 DEL42 DEL42 DEL44 DEL42 DEL44 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL33 DEL27 DEL33 DEL27 DEL27 DEL42 DEL33 DEL27 DEL27 DEL32 DEL34 DEL27 DEL27 DEL8 DEL25 DEL39 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL36 DEL34 DEL38 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL32 DEL21 DEL42 DEL38 DEL34 DEL27 DEL10 DEL8 DEL25 DEL8 DEL61 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL31