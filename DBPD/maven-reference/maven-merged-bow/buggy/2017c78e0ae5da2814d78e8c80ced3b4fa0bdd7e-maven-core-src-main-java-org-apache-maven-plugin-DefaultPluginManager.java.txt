MNG-1323 making extensions work inside a reactor
Submitted by: Piotr Tabor


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@575987 13f79535-47bb-0310-9956-ffa450edef68

+    
+    protected PluginRealmManager pluginRealmManager;
-        ClassRealm pluginRealm = container.getComponentRealm( projectPlugin.getKey() );
-        if ( ( pluginRealm != null ) && ( pluginRealm != container.getContainerRealm() ) )
-        {
-            getLogger().debug(
-                               "Realm already exists for: " + projectPlugin.getKey()
-                                               + ". Skipping addition..." );
-            // we've already discovered this plugin, and configured it, so skip it this time.
+    	ClassRealm componentRealm = pluginRealmManager.getOrCreateRealm(projectPlugin, pluginArtifact, artifacts);
+    	
+//        ClassRealm pluginRealm = container.getComponentRealm( projectPlugin.getKey()+":"+projectPlugin.getVersion() );
-            return;
-        }
-
-        // ----------------------------------------------------------------------------
-        // Realm creation for a plugin
-        // ----------------------------------------------------------------------------
-
-        ClassRealm componentRealm = null;
-
-        try
-        {
-            List jars = new ArrayList();
-
-            for ( Iterator i = artifacts.iterator(); i.hasNext(); )
-            {
-                Artifact artifact = (Artifact) i.next();
-
-                jars.add( artifact.getFile() );
-            }
-
-            jars.add( pluginArtifact.getFile() );
-
-            // Now here we need the artifact coreArtifactFilter stuff
-
-            componentRealm = container.createComponentRealm( projectPlugin.getKey(), jars );
-
-            // adding for MNG-3012 to try to work around problems with Xpp3Dom (from plexus-utils)
-            // spawning a ClassCastException when a mojo calls plugin.getConfiguration() from maven-model...
-            componentRealm.importFrom( componentRealm.getParentRealm().getId(),
-                                       Xpp3Dom.class.getName() );
-            componentRealm.importFrom( componentRealm.getParentRealm().getId(),
-                                       "org.codehaus.plexus.util.xml.pull" );
-
-            // Adding for MNG-2878, since maven-reporting-impl was removed from the
-            // internal list of artifacts managed by maven, the classloader is different
-            // between maven-reporting-impl and maven-reporting-api...so this resource
-            // is not available from the AbstractMavenReport since it uses:
-            // getClass().getResourceAsStream( "/default-report.xml" )
-            // (maven-reporting-impl version 2.0; line 134; affects: checkstyle plugin, and probably others)
-            componentRealm.importFrom( componentRealm.getParentRealm().getId(), "/default-report.xml" );
-        }
-        catch ( PlexusContainerException e )
-        {
-            throw new PluginManagerException( "Failed to create realm for plugin '" + projectPlugin
-                                              + ".", e );
-        }
-        catch ( NoSuchRealmException e )
-        {
-            throw new PluginManagerException(
-                                              "Failed to import Xpp3Dom from parent realm for plugin: '"
-                                                              + projectPlugin + ".", e );
-        }
+//        if ( ( pluginRealm != null ) && ( pluginRealm != container.getContainerRealm() ) )
+//        {
+//            getLogger().debug(
+//                               "Realm already exists for: " + projectPlugin.getKey()
+//                                               + ". Skipping addition..." );
+//            // we've already discovered this plugin, and configured it, so skip it this time.
+//
+//            return;
+//        }
+//
+//        // ----------------------------------------------------------------------------
+//        // Realm creation for a plugin
+//        // ----------------------------------------------------------------------------
+//
+//        ClassRealm componentRealm = null;
+//
+//        try
+//        {
+//            List jars = new ArrayList();
+//
+//            for ( Iterator i = artifacts.iterator(); i.hasNext(); )
+//            {
+//                Artifact artifact = (Artifact) i.next();
+//
+//                jars.add( artifact.getFile() );
+//            }
+//
+//            jars.add( pluginArtifact.getFile() );
+//
+//            // Now here we need the artifact coreArtifactFilter stuff
+//
+//            componentRealm = container.createComponentRealm( projectPlugin.getKey()+projectPlugin.getVersion(), jars );
+//
+//            // adding for MNG-3012 to try to work around problems with Xpp3Dom (from plexus-utils)
+//            // spawning a ClassCastException when a mojo calls plugin.getConfiguration() from maven-model...
+//            componentRealm.importFrom( componentRealm.getParentRealm().getId(),
+//                                       Xpp3Dom.class.getName() );
+//            componentRealm.importFrom( componentRealm.getParentRealm().getId(),
+//                                       "org.codehaus.plexus.util.xml.pull" );
+//
+//            // Adding for MNG-2878, since maven-reporting-impl was removed from the
+//            // internal list of artifacts managed by maven, the classloader is different
+//            // between maven-reporting-impl and maven-reporting-api...so this resource
+//            // is not available from the AbstractMavenReport since it uses:
+//            // getClass().getResourceAsStream( "/default-report.xml" )
+//            // (maven-reporting-impl version 2.0; line 134; affects: checkstyle plugin, and probably others)
+//            componentRealm.importFrom( componentRealm.getParentRealm().getId(), "/default-report.xml" );
+//        }
+//        catch ( PlexusContainerException e )
+//        {
+//            throw new PluginManagerException( "Failed to create realm for plugin '" + projectPlugin
+//                                              + ".", e );
+//        }
+//        catch ( NoSuchRealmException e )
+//        {
+//            throw new PluginManagerException(
+//                                              "Failed to import Xpp3Dom from parent realm for plugin: '"
+//                                                              + projectPlugin + ".", e );
+//        }

INS23 INS83 INS43 INS59 INS42 INS42 INS60 MOV43 INS59 INS42 INS32 INS42 UPD42 MOV42 MOV42 INS42 INS42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL36 DEL42 DEL42 DEL32 DEL27 DEL36 DEL27 DEL42 DEL32 DEL42 DEL45 DEL42 DEL32 DEL45 DEL27 DEL32 DEL21 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL43 DEL57 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL45 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL45 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL45 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54