PR: MNG-249
also recognise transitive projects



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@225780 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Map;
-        MavenProject p;
+        MavenProject project;
-                p = mavenProjectBuilder.buildFromRepository( pomArtifact, remoteRepositories, localRepository );
+                project = mavenProjectBuilder.buildFromRepository( pomArtifact, remoteRepositories, localRepository );
-            DistributionManagement distMgmt = p.getDistributionManagement();
+            DistributionManagement distMgmt = project.getDistributionManagement();
-            // TODO: we could possibly use p.getDependencyArtifacts instead, but they haven't been filtered or used the
-            // scope (should that be passed to the buildFromRepository method above?
-            Set artifacts = createArtifacts( artifactFactory, p.getDependencies(), artifact.getScope(),
-                                             artifact.getDependencyFilter() );
+            // TODO: we could possibly use p.getDependencyArtifacts instead of this call, but they haven't been filtered
+            // or used the inherited scope (should that be passed to the buildFromRepository method above?)
+            Set artifacts = project.createArtifacts( artifactFactory, artifact.getScope(),
+                                                     artifact.getDependencyFilter() );
-            return new ResolutionGroup( pomArtifact, artifacts, p.getRemoteArtifactRepositories() );
+            return new ResolutionGroup( pomArtifact, artifacts, project.getRemoteArtifactRepositories() );
-                                       ArtifactFilter dependencyFilter )
+                                       ArtifactFilter dependencyFilter, Map projectReferences )
-        Set projectArtifacts = new HashSet();
+        Set projectArtifacts = new HashSet( dependencies.size() );
+                if ( projectReferences != null )
+                {
+                    // TODO: use MavenProject getProjectReferenceId
+                    String refId = d.getGroupId() + ":" + d.getArtifactId();
+                    MavenProject project = (MavenProject) projectReferences.get( refId );
+                    if ( project != null && project.getArtifact() != null )
+                    {
+                        artifact = new ActiveProjectArtifact( project, artifact );
+                    }
+                }
+

INS26 INS40 INS44 INS43 INS42 INS42 UPD42 INS32 INS42 INS42 INS25 UPD42 INS42 UPD42 INS27 INS8 UPD42 INS42 INS33 INS60 INS60 INS25 INS43 INS59 INS43 INS59 INS27 INS8 INS42 INS42 INS27 INS42 INS42 INS11 INS27 INS27 INS21 INS32 INS45 INS32 INS43 INS32 INS42 INS33 INS32 INS33 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS43 INS42 INS42 INS42 DEL42 DEL42 DEL32