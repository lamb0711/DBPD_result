flip pom format


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163511 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.IOException;
-import java.io.File;
-import java.util.Iterator;
-import java.util.Set;
-
-
+import java.io.File;
+import java.io.IOException;
+import java.util.Iterator;
+import java.util.Set;
+
- * @goal war
- * @phase package
- *
- * @description build a war/webapp
- *
- * @parameter
- *  name="warName"
- *  type="String"
- *  required="true"
- *  validator=""
- *  expression="#project.build.finalName"
- *  description=""
- * @parameter
- *  name="compress"
- *  type="String"
- *  required="false"
- *  validator=""
- *  expression="#maven.jar.compress"
- *  default="true"
- *  description=""
- * @parameter
- *  name="index"
- *  type="String"
- *  required="false"
- *  validator=""
- *  expression="#maven.jar.index"
- *  default="false"
- *  description=""
- * @parameter
- *  name="manifest"
- *  type="String"
- *  required="false"
- *  validator=""
- *  expression="#maven.jar.manifest"
- *  description=""
- * @parameter
- *  name="addExtensions"
- *  type="String"
- *  required="false"
- *  validator=""
- *  expression="#maven.jar.addExtensions"
- *  default="false"
- *  description=""
- * @parameter
- *  name="warSourceDirectory"
- *  type="String"
- *  required="true"
- *  validator=""
- *  expression="#maven.war.src"
- *  default="#basedir/src/main/webapp"
- *  description=""
- * @parameter
- *  name="warSourceIncludes"
- *  type="String"
- *  required="false"
- *  validator=""
- *  expression="#maven.war.src.includes"
- *  default="**"
- *  description=""
- * @parameter
- *  name="warSourceExcludes"
- *  type="String"
- *  required="false"
- *  validator=""
- *  expression="#maven.war.src.excludes"
- *  description=""
- * @parameter
- *  name="webXml"
- *  type="String"
- *  required="false"
- *  validator=""
- *  expression="#maven.war.webxml"
- *  description=""
- * @parameter
- *  name="webappDirectory"
- *  type="String"
- *  required="true"
- *  validator=""
- *  expression="#maven.war.webapp.dir"
- *  default="#project.build.directory/#project.build.finalName"
- *  description=""
- * @parameter
- *  name="mode"
- *  type="String"
- *  required="true"
- *  validator=""
- *  expression="#maven.war.mode"
- *  default="war"
- *  description=""
- * @parameter
- *  name="classesDirectory"
- *  type="String"
- *  required="true"
- *  validator=""
- *  expression="#project.build.output"
- *  description=""
- * @parameter
- *  name="outputDirectory"
- *  type="String"
- *  required="true"
- *  validator=""
- *  expression="#maven.war.build.dir"
- *  default="#project.build.directory"
- *  description=""
- * @parameter
- *  name="basedir"
- *  type="String"
- *  required="true"
- *  validator=""
- *  expression="#project.build.directory"
- *  description=""
- * @parameter
- *  name="project"
- *  type="org.apache.maven.project.MavenProject"
- *  required="true"
- *  validator=""
- *  expression="#project"
- *  description="current MavenProject instance"
- *
+ * @goal war
+ * @phase package
+ * @description build a war/webapp
+ * @parameter name="warName"
+ * type="String"
+ * required="true"
+ * validator=""
+ * expression="#project.build.finalName"
+ * description=""
+ * @parameter name="compress"
+ * type="String"
+ * required="false"
+ * validator=""
+ * expression="#maven.jar.compress"
+ * default="true"
+ * description=""
+ * @parameter name="index"
+ * type="String"
+ * required="false"
+ * validator=""
+ * expression="#maven.jar.index"
+ * default="false"
+ * description=""
+ * @parameter name="manifest"
+ * type="String"
+ * required="false"
+ * validator=""
+ * expression="#maven.jar.manifest"
+ * description=""
+ * @parameter name="addExtensions"
+ * type="String"
+ * required="false"
+ * validator=""
+ * expression="#maven.jar.addExtensions"
+ * default="false"
+ * description=""
+ * @parameter name="warSourceDirectory"
+ * type="String"
+ * required="true"
+ * validator=""
+ * expression="#maven.war.src"
+ * default="#basedir/src/main/webapp"
+ * description=""
+ * @parameter name="warSourceIncludes"
+ * type="String"
+ * required="false"
+ * validator=""
+ * expression="#maven.war.src.includes"
+ * default="**"
+ * description=""
+ * @parameter name="warSourceExcludes"
+ * type="String"
+ * required="false"
+ * validator=""
+ * expression="#maven.war.src.excludes"
+ * description=""
+ * @parameter name="webXml"
+ * type="String"
+ * required="false"
+ * validator=""
+ * expression="#maven.war.webxml"
+ * description=""
+ * @parameter name="webappDirectory"
+ * type="String"
+ * required="true"
+ * validator=""
+ * expression="#maven.war.webapp.dir"
+ * default="#project.build.directory/#project.build.finalName"
+ * description=""
+ * @parameter name="mode"
+ * type="String"
+ * required="true"
+ * validator=""
+ * expression="#maven.war.mode"
+ * default="war"
+ * description=""
+ * @parameter name="classesDirectory"
+ * type="String"
+ * required="true"
+ * validator=""
+ * expression="#project.build.outputDirectory"
+ * description=""
+ * @parameter name="outputDirectory"
+ * type="String"
+ * required="true"
+ * validator=""
+ * expression="#maven.war.build.dir"
+ * default="#project.build.directory"
+ * description=""
+ * @parameter name="basedir"
+ * type="String"
+ * required="true"
+ * validator=""
+ * expression="#project.build.directory"
+ * description=""
+ * @parameter name="project"
+ * type="org.apache.maven.project.MavenProject"
+ * required="true"
+ * validator=""
+ * expression="#project"
+ * description="current MavenProject instance"
-    public void copyResources( File sourceDirectory, File webappDirectory, String includes, String excludes, String webXml )
+    public void copyResources( File sourceDirectory, File webappDirectory, String includes, String excludes,
+                               String webXml )
-            if ( webXml != null && ! "".equals( webXml ) )
+            if ( webXml != null && !"".equals( webXml ) )
-        request.getLog().info( "Assembling webapp " + project.getArtifactId() + " in " + webappDirectory.getAbsolutePath() );
+        request.getLog().info(
+            "Assembling webapp " + project.getArtifactId() + " in " + webappDirectory.getAbsolutePath() );
-                FileUtils.copyFileToDirectory( artifact.getFile() , libDirectory );
+                FileUtils.copyFileToDirectory( artifact.getFile(), libDirectory );
-                FileUtils.copyFileToDirectory( artifact.getFile() , tldDirectory );
+                FileUtils.copyFileToDirectory( artifact.getFile(), tldDirectory );
-            if ( ! "exploded".equals( mode ) )
+            if ( !"exploded".equals( mode ) )
-                warArchiver.addDirectory( webappDirectory, new String[] { "**/**" }, new String[] { "**/WEB-INF/web.xml" } );
+                warArchiver.addDirectory( webappDirectory, new String[]{"**/**"}, new String[]{"**/WEB-INF/web.xml"} );

MOV26 MOV26 MOV26 MOV26 MOV65 MOV65 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66