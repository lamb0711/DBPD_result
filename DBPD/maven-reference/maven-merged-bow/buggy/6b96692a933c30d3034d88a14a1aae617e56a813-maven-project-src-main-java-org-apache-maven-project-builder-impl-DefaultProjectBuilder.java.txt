Merge of sisbell-maven-2.1-profile branch. Removes use of project lineage from builder.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@693332 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.MavenTools;
+import org.apache.maven.artifact.InvalidRepositoryException;
+import org.apache.maven.project.ProjectBuilderConfiguration;
+import org.apache.maven.project.RepositoryHelper;
+import org.apache.maven.shared.model.ImportModel;
-import java.io.FileInputStream;
+    private MavenTools mavenTools;
+
+    private RepositoryHelper repositoryHelper;
+
-     * @see ProjectBuilder#buildFromLocalPath(java.io.InputStream, java.util.List, java.util.Collection, org.apache.maven.project.builder.PomArtifactResolver, java.io.File)
+     * @see ProjectBuilder#buildFromLocalPath(java.io.InputStream, java.util.List, java.util.Collection, java.util.Collection, org.apache.maven.project.builder.PomArtifactResolver, java.io.File, org.apache.maven.project.ProjectBuilderConfiguration)
+                                            Collection<ImportModel> importModels,
-                                            PomArtifactResolver resolver, File projectDirectory )
+                                            PomArtifactResolver resolver, File projectDirectory,
+                                            ProjectBuilderConfiguration projectBuilderConfiguration )
+        File parentFile = null;
+            List<DomainModel> mavenParents;
-                domainModels.addAll( getDomainModelParentsFromLocalPath( domainModel, resolver, projectDirectory ) );
+                mavenParents = getDomainModelParentsFromLocalPath( domainModel, resolver, projectDirectory );
-                domainModels.addAll( getDomainModelParentsFromRepository( domainModel, resolver ) );
+                mavenParents = getDomainModelParentsFromRepository( domainModel, resolver );
+
+            if ( mavenParents.size() > 0 )
+            {
+                PomClassicDomainModel dm = (PomClassicDomainModel) mavenParents.get( 0 );
+                parentFile = dm.getFile();
+                domainModel.setParentFile( parentFile );
+                // mavenParent = buildFromLocalPath( dm.getInputStream(), inheritedModels,
+                //        importModels, interpolatorProperties, resolver, projectDirectory);
+                // mavenParent.setFile(dm.getFile());
+            }
+
+            domainModels.addAll( mavenParents );
-        PomClassicTransformer transformer = new PomClassicTransformer();
+        PomClassicTransformer transformer = new PomClassicTransformer( null );
-        PomClassicDomainModel transformedDomainModel =
-            ( (PomClassicDomainModel) ctx.transform( domainModels, transformer, transformer, null, properties ) );
-        Model model = transformedDomainModel.getModel();
-        return new MavenProject( model );
+        PomClassicDomainModel transformedDomainModel = ( (PomClassicDomainModel) ctx.transform( domainModels,
+                                                                                                transformer,
+                                                                                                transformer,
+                                                                                                importModels,
+                                                                                                properties ) );
+        // System.out.println(transformedDomainModel.asString());
+        try
+        {
+            MavenProject mavenProject = new MavenProject( transformedDomainModel.getModel(), artifactFactory,
+                                                          mavenTools, repositoryHelper, null,
+                                                          projectBuilderConfiguration );
+            mavenProject.setParentFile( parentFile );
+            return mavenProject;
+        }
+        catch ( InvalidRepositoryException e )
+        {
+            throw new IOException( e.getMessage() );
+        }
+    /**
+     * Returns true if the relative path of the specified parent references a pom, otherwise returns false.
+     *
+     * @param parent           the parent model info
+     * @param projectDirectory the project directory of the child pom
+     * @return true if the relative path of the specified parent references a pom, otherwise returns fals
+     */
-        PomClassicDomainModel parentDomainModel =
-            new PomClassicDomainModel( new FileInputStream( artifactParent.getFile() ) );
+        PomClassicDomainModel parentDomainModel = new PomClassicDomainModel( artifactParent.getFile() );
-            logger.warn( "Parent pom ids do not match: File = " + artifactParent.getFile().getAbsolutePath() );
+            logger.warn( "Parent pom ids do not match: Parent File = " + artifactParent.getFile().getAbsolutePath() +
+                ": Child ID = " + domainModel.getModel().getId() );
-
+    /**
+     * Returns list of domain model parents of the specified domain model. The parent domain models are part
+     *
+     * @param domainModel
+     * @param artifactResolver
+     * @param projectDirectory
+     * @return
+     * @throws IOException
+     */
-            throw new IOException( "File does not exist: File =" + parentFile.getAbsolutePath() );
+            throw new IOException( "File does not exist: File = " + parentFile.getAbsolutePath() );
-        PomClassicDomainModel parentDomainModel = new PomClassicDomainModel( new FileInputStream( parentFile ) );
+        PomClassicDomainModel parentDomainModel = new PomClassicDomainModel( parentFile );
-            logger.warn( "Parent pom ids do not match: File = " + parentFile.getAbsolutePath() );
+            logger.warn( "Parent pom ids do not match: Parent File = " + parentFile.getAbsolutePath() +
+                ": Child ID = " + domainModel.getModel().getId() );
-
-

MOV26 INS26 INS26 INS26 INS26 UPD40 INS40 INS40 INS40 INS40 INS23 INS23 INS83 INS43 INS59 INS83 INS43 INS59 INS44 INS44 INS29 INS29 INS42 INS42 INS42 INS42 INS74 INS42 INS43 INS42 INS60 INS54 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS43 INS42 INS43 INS59 INS8 MOV43 INS8 INS12 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS42 INS42 INS42 MOV8 MOV43 INS8 INS69 INS69 INS42 INS42 INS42 INS42 INS33 INS60 MOV25 INS25 INS21 MOV60 INS21 MOV41 INS44 INS8 MOV14 INS53 INS14 INS21 INS43 INS43 INS74 INS59 INS27 MOV8 INS32 MOV43 INS33 MOV43 INS59 INS32 INS42 INS43 INS42 INS53 MOV43 INS14 MOV43 MOV42 INS32 INS40 INS40 INS43 INS43 INS42 INS32 INS34 INS60 INS21 INS21 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS14 MOV43 MOV27 INS42 INS42 INS27 INS42 INS42 INS7 INS7 INS42 INS42 INS43 INS59 INS7 INS32 INS42 INS43 MOV32 INS42 INS42 INS42 INS33 INS42 INS43 INS32 UPD45 INS45 INS32 UPD45 INS45 MOV32 INS45 INS32 INS42 MOV32 INS42 MOV32 INS42 INS42 INS11 INS42 INS32 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL33 DEL43 DEL42 DEL59 DEL42 DEL14 DEL42 DEL43 DEL14 DEL42 DEL42 DEL32 DEL21 DEL45 DEL27 DEL14 DEL53 DEL8 DEL42 DEL43 DEL14 DEL14