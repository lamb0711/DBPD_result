o first push of a plug point for repository/transport in maven


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@746285 13f79535-47bb-0310-9956-ffa450edef68

-    implements WagonManager, Contextualizable
+    implements WagonManager
-    private static final String WILDCARD = "*";
-
-    private static final String EXTERNAL_WILDCARD = "external:*";
-
-
-    private static final String MAVEN_ARTIFACT_PROPERTIES = "META-INF/maven/org.apache.maven.artifact/maven-artifact/pom.properties";
-
-    private static int anonymousMirrorIdSeed = 0;
+    @Requirement
-    /** encapsulates access to Server credentials */
+    //@Requirement
+        
+        
-        wagon.setInteractive( interactive );
-
-        failIfNotOnline();
-
-                if ( serverPermissionsMap.containsKey( repository.getId() ) )
-                {
-                    RepositoryPermissions perms = serverPermissionsMap.get( repository.getId() );
-
-                    getLogger().debug(
-                        "adding permissions to wagon connection: " + perms.getFileMode() + " " + perms.getDirectoryMode() );
-
-                    artifactRepository.setPermissions( perms );
-                }
-                else
-                {
-                    getLogger().debug( "not adding permissions to wagon connection" );
-                }
-
-                getRemoteFile( getMirrorRepository( repository ), artifact.getFile(), remotePath, downloadMonitor,
-                               policy.getChecksumPolicy(), false );
+                getRemoteFile( repository, artifact.getFile(), remotePath, downloadMonitor, policy.getChecksumPolicy(), false );
-                    getRemoteFile( getMirrorRepository( repository ), artifact.getFile(), remotePath, downloadMonitor,
-                                   policy.getChecksumPolicy(), false );
+                    getRemoteFile( repository, artifact.getFile(), remotePath, downloadMonitor, policy.getChecksumPolicy(), false );
-            getRemoteFile( getMirrorRepository( repository ), artifact.getFile(), remotePath, downloadMonitor, policy.getChecksumPolicy(), false );
+            getRemoteFile( repository, artifact.getFile(), remotePath, downloadMonitor, policy.getChecksumPolicy(), false );
-        getRemoteFile( getMirrorRepository( repository ), destination, remotePath, null, checksumPolicy, true );
+        getRemoteFile( repository, destination, remotePath, null, checksumPolicy, true );
-        // TODO: better excetpions - transfer failed is not enough?
-
-        failIfNotOnline();
-
-    public ArtifactRepository getMirrorRepository( ArtifactRepository repository )
-    {
-        ArtifactRepository mirror = getMirror( repository );
-        if ( mirror != null )
-        {
-            String id = mirror.getId();
-            if ( id == null )
-            {
-                // TODO: this should be illegal in settings.xml
-                id = repository.getId();
-            }
-
-            getLogger().debug( "Using mirror: " + mirror.getId() + " for repository: " + repository.getId() + "\n(mirror url: " + mirror.getUrl() + ")" );
-            repository = repositoryFactory.createArtifactRepository( id, mirror.getUrl(),
-                                                                     repository.getLayout(), repository.getSnapshots(),
-                                                                     repository.getReleases() );
-        }
-        return repository;
-    }
-
-    private void failIfNotOnline()
-        throws TransferFailedException
-    {
-        if ( !isOnline() )
-        {
-            throw new TransferFailedException( "System is offline." );
-        }
-    }
-
-
+    
-        return credentialsDataSource == null
-            ? authenticationInfoMap.get( id )
-            : credentialsDataSource.get( id );
-    }
-
-    /**
-     * This method finds a matching mirror for the selected repository. If there is an exact match, this will be used.
-     * If there is no exact match, then the list of mirrors is examined to see if a pattern applies.
-     *
-     * @param originalRepository See if there is a mirror for this repository.
-     * @return the selected mirror or null if none are found.
-     */
-    public ArtifactRepository getMirror( ArtifactRepository originalRepository )
-    {
-        ArtifactRepository selectedMirror = mirrors.get( originalRepository.getId() );
-        if ( null == selectedMirror )
-        {
-            // Process the patterns in order. First one that matches wins.
-            Set<String> keySet = mirrors.keySet();
-            if ( keySet != null )
-            {
-                for (String pattern : keySet) 
-                {
-                    if (matchPattern(originalRepository, pattern)) 
-                    {
-                        selectedMirror = mirrors.get(pattern);
-                        break;
-                    }
-                }
-            }
-
-        }
-        return selectedMirror;
-    }
-
-    /**
-     * This method checks if the pattern matches the originalRepository.
-     * Valid patterns:
-     * * = everything
-     * external:* = everything not on the localhost and not file based.
-     * repo,repo1 = repo or repo1
-     * *,!repo1 = everything except repo1
-     *
-     * @param originalRepository to compare for a match.
-     * @param pattern used for match. Currently only '*' is supported.
-     * @return true if the repository is a match to this pattern.
-     */
-    public boolean matchPattern( ArtifactRepository originalRepository, String pattern )
-    {
-        boolean result = false;
-        String originalId = originalRepository.getId();
-
-        // simple checks first to short circuit processing below.
-        if ( WILDCARD.equals( pattern ) || pattern.equals( originalId ) )
-        {
-            result = true;
-        }
-        else
-        {
-            // process the list
-            String[] repos = pattern.split( "," );
-            for (String repo : repos) {
-                // see if this is a negative match
-                if (repo.length() > 1 && repo.startsWith("!")) {
-                    if (originalId.equals(repo.substring(1))) {
-                        // explicitly exclude. Set result and stop processing.
-                        result = false;
-                        break;
-                    }
-                }
-                // check for exact match
-                else if (originalId.equals(repo)) {
-                    result = true;
-                    break;
-                }
-                // check for external:*
-                else if (EXTERNAL_WILDCARD.equals(repo) && isExternalRepo(originalRepository)) {
-                    result = true;
-                    // don't stop processing in case a future segment explicitly excludes this repo
-                } else if (WILDCARD.equals(repo)) {
-                    result = true;
-                    // don't stop processing in case a future segment explicitly excludes this repo
-                }
-            }
-        }
-        return result;
+        return authenticationInfoMap.get( id );
-    public void contextualize( Context context )
-        throws ContextException
-    {
-        container = (PlexusContainer) context.get( PlexusConstants.PLEXUS_KEY );
-    }
-
-    /** @todo I'd rather not be setting this explicitly. */
-    public void setDownloadMonitor( TransferListener downloadMonitor )
-    {
-        this.downloadMonitor = downloadMonitor;
-    }
-
-    // This is the new way of handling authentication that will allow us to help users setup
-    // authentication requirements.
-    public void addAuthenticationCredentials( String repositoryId,
-                                              String username,
-                                              String password,
-                                              String privateKey,
-                                              String passphrase
-    )
-        throws CredentialsDataSourceException
-    {
-        AuthenticationInfo authInfo = new AuthenticationInfo();
-        authInfo.setUserName( username );
-        authInfo.setPassword( password );
-        authInfo.setPrivateKey( privateKey );
-        authInfo.setPassphrase( passphrase );
-
-        if ( credentialsDataSource == null )
-        {
-            authenticationInfoMap.put( repositoryId, authInfo );
-        }
-        else
-        {
-            credentialsDataSource.set( new CredentialsChangeRequest( repositoryId, authInfo, null ) );
-        }
-    }
-
-    public void addMirror( String id,
-                           String mirrorOf,
-                           String url )
-    {
-        if ( id == null )
-        {
-            id = "mirror-" + anonymousMirrorIdSeed++;
-            getLogger().warn( "You are using a mirror that doesn't declare an <id/> element. Using \'" + id + "\' instead:\nId: " + id + "\nmirrorOf: " + mirrorOf + "\nurl: " + url + "\n" );
-        }
-        
-        ArtifactRepository mirror = new DefaultArtifactRepository( id, url, null );
-
-        //to preserve first wins, don't add repeated mirrors.
-        if (!mirrors.containsKey( mirrorOf ))
-        {
-            mirrors.put( mirrorOf, mirror );
-        }
-    }
-
-    public void setOnline( boolean online )
-    {
-        this.online = online;
-    }
-
-    public boolean isOnline()
-    {
-        return online;
-    }
-
-    private void configureWagon( Wagon wagon,
-                                 ArtifactRepository repository )
+    private void configureWagon( Wagon wagon, ArtifactRepository repository )
-    private void configureWagon( Wagon wagon,
-                                 String repositoryId,
-                                 String protocol )
+    private void configureWagon( Wagon wagon, String repositoryId, String protocol )
-        if ( protocol.startsWith( "http" ) || protocol.startsWith( "dav" ) )
-        {
-            config = updateUserAgentForHttp( wagon, config );
-        }
-
-    private PlexusConfiguration updateUserAgentForHttp( Wagon wagon, PlexusConfiguration config )
-    {
-        if ( config == null )
-        {
-            config = new XmlPlexusConfiguration( "configuration" );
-        }
-
-        XmlPlexusConfiguration propertyConfig = new XmlPlexusConfiguration( "property" );
-        PlexusConfiguration headerConfig = config.getChild( "httpHeaders", true );
-        headerConfig.addChild( propertyConfig );
-        
-        XmlPlexusConfiguration nameConfig = new XmlPlexusConfiguration( "name" );
-        nameConfig.setValue( "User-Agent" );
-        propertyConfig.addChild( nameConfig );
-        
-        XmlPlexusConfiguration versionConfig = new XmlPlexusConfiguration( "value" );
-        versionConfig.setValue( httpUserAgent );
-        propertyConfig.addChild( versionConfig );
-                
-        return config;
-    }
-
-    public void addConfiguration( String repositoryId,
-                                  Xpp3Dom configuration )
-    {
-        if ( ( repositoryId == null ) || ( configuration == null ) )
-        {
-            throw new IllegalArgumentException( "arguments can't be null" );
-        }
-
-        final XmlPlexusConfiguration xmlConf = new XmlPlexusConfiguration( configuration );
-
-        serverConfigurationMap.put( repositoryId, xmlConf );
-    }
-
-    public void setDefaultRepositoryPermissions( RepositoryPermissions defaultRepositoryPermissions )
-    {
-        this.defaultRepositoryPermissions = defaultRepositoryPermissions;
-    }
-
-    public void registerCredentialsDataSource( CredentialsDataSource cds )
-    {
-        credentialsDataSource = cds;
-    }
-
-    public void setUpdateCheckManager( UpdateCheckManager updateCheckManager )
-    {
-        this.updateCheckManager = updateCheckManager;        
-    }
+    
+    // Things to remove
+    
+    public void setDownloadMonitor( TransferListener listener )
+    {
+        this.downloadMonitor = listener;
+    }

MOV31 INS78 INS42 UPD42 MOV32 MOV42 UPD42 INS54 INS8 MOV8 MOV8 INS21 MOV21 MOV21 MOV21 INS32 MOV54 INS42 INS42 MOV32 INS42 INS42 MOV32 INS9 MOV12 MOV42 MOV42 DEL42 DEL43 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL66 DEL65 DEL29 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL32 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL42 DEL32 DEL54 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL9 DEL32 DEL21 DEL8 DEL42 DEL32 DEL42 DEL32 DEL21 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL32 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL32 DEL38 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL8 DEL31 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL16 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL33 DEL42 DEL27 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL10 DEL8 DEL25 DEL8 DEL70 DEL8 DEL25 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL34 DEL27 DEL42 DEL42 DEL45 DEL32 DEL27 DEL42 DEL42 DEL42 DEL42 DEL34 DEL32 DEL32 DEL42 DEL9 DEL7 DEL21 DEL10 DEL8 DEL25 DEL8 DEL42 DEL42 DEL42 DEL32 DEL42 DEL9 DEL7 DEL21 DEL10 DEL8 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL27 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL25 DEL25 DEL25 DEL8 DEL70 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL40 DEL32 DEL11 DEL7 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL33 DEL14 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL45 DEL42 DEL37 DEL27 DEL7 DEL21 DEL42 DEL32 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL33 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL45 DEL32 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL42 DEL43 DEL45 DEL14 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL9 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL36 DEL42 DEL33 DEL27 DEL36 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL66 DEL65 DEL29