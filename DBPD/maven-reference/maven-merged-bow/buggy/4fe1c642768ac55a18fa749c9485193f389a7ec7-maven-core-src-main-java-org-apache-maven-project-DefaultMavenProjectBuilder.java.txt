clean up exception handling


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163978 13f79535-47bb-0310-9956-ffa450edef68

-        Settings settings = null;
-
-        try
-        {
-            settings = mavenSettingsBuilder.buildSettings();
-        }
-        catch ( Exception e )
-        {
-            throw new ProjectBuildingException( "Cannot read settings.", e );
-        }
+        Settings settings = readSettings();
-    public MavenProject buildFromRepository( Artifact artifact, List remoteArtifactRepositories,
-                                             ArtifactRepository localRepository )
+    /**
+     * @return
+     * @throws ProjectBuildingException
+     * @todo shouldn't be re-reading all the time - perhaps cache, but check a timestamp so you can detect and reload on
+     * changes in a long running process
+     */
+    private Settings readSettings()
+        return settings;
+    }
+
+    public MavenProject buildFromRepository( Artifact artifact, List remoteArtifactRepositories,
+                                             ArtifactRepository localRepository )
+        throws ProjectBuildingException
+    {
+        Settings settings = readSettings();
-            Settings settings;
-            try
-            {
-                settings = mavenSettingsBuilder.buildSettings();
-            }
-            catch ( Exception e )
-            {
-                throw new ProjectBuildingException( "Cannot read settings.", e );
-            }
-
-        Settings settings = null;
-
-        try
-        {
-            settings = mavenSettingsBuilder.buildSettings();
-        }
-        catch ( Exception e )
-        {
-            throw new ProjectBuildingException( "Cannot read settings.", e );
-        }
+        Settings settings = readSettings();
-            String layout = mavenRepo.getLayout();
-
-            ArtifactRepositoryLayout remoteRepoLayout = null;
-            try
-            {
-                remoteRepoLayout =
-                    (ArtifactRepositoryLayout) container.lookup( ArtifactRepositoryLayout.ROLE, layout );
-            }
-            catch ( ComponentLookupException e )
-            {
-                throw new ProjectBuildingException( "Cannot find layout implementation corresponding to: \'" + layout +
-                                                    "\' for remote repository with id: \'" + mavenRepo.getId() + "\'.",
-                                                    e );
-            }
+            ArtifactRepositoryLayout remoteRepoLayout = getRepositoryLayout( mavenRepo );
-        throws Exception
+        throws ProjectBuildingException
-        Settings settings = mavenSettingsBuilder.buildSettings();
+        Settings settings = readSettings();
-            String layout = mavenRepo.getLayout();
-
-            ArtifactRepositoryLayout repositoryLayout = null;
-            try
-            {
-                repositoryLayout =
-                    (ArtifactRepositoryLayout) container.lookup( ArtifactRepositoryLayout.ROLE, layout );
-            }
-            catch ( ComponentLookupException e )
-            {
-                throw new ProjectBuildingException( "Cannot find layout implementation corresponding to: \'" + layout +
-                                                    "\' for remote repository with id: \'" + mavenRepo.getId() + "\'.",
-                                                    e );
-            }
+            ArtifactRepositoryLayout repositoryLayout = getRepositoryLayout( mavenRepo );
+    private ArtifactRepositoryLayout getRepositoryLayout( Repository mavenRepo )
+        throws ProjectBuildingException
+    {
+        String layout = mavenRepo.getLayout();
+
+        ArtifactRepositoryLayout repositoryLayout = null;
+        try
+        {
+            repositoryLayout = (ArtifactRepositoryLayout) container.lookup( ArtifactRepositoryLayout.ROLE, layout );
+        }
+        catch ( ComponentLookupException e )
+        {
+            throw new ProjectBuildingException( "Cannot find layout implementation corresponding to: \'" + layout +
+                                                "\' for remote repository with id: \'" + mavenRepo.getId() + "\'.", e );
+        }
+        return repositoryLayout;
+    }
+
-        throws Exception
+        throws ProjectBuildingException
-        Settings settings = mavenSettingsBuilder.buildSettings();
+        Settings settings = readSettings();
-        String repoLayoutId = dmRepo.getLayout();
-
-        ArtifactRepositoryLayout repositoryLayout = (ArtifactRepositoryLayout) container.lookup(
-            ArtifactRepositoryLayout.ROLE, repoLayoutId );
+        ArtifactRepositoryLayout repositoryLayout = getRepositoryLayout( dmRepo );

INS31 INS31 INS29 INS83 INS43 INS42 INS43 MOV8 INS8 MOV43 INS83 MOV43 INS42 INS44 INS43 MOV8 UPD43 INS60 INS65 INS65 INS65 INS42 INS42 INS41 INS60 MOV60 MOV41 INS60 INS43 INS42 INS42 INS41 UPD42 MOV43 INS59 INS42 INS66 INS66 INS42 INS43 INS59 MOV43 INS59 INS8 INS42 INS42 MOV42 INS32 INS42 INS42 INS32 INS42 INS32 MOV60 INS60 MOV60 MOV21 INS32 UPD42 MOV42 INS42 UPD42 MOV42 MOV43 UPD42 MOV43 INS59 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 INS42 INS32 UPD42 UPD42 INS42 INS42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL42 DEL40 DEL42 DEL32 DEL11 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL45 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL40 DEL32 DEL11