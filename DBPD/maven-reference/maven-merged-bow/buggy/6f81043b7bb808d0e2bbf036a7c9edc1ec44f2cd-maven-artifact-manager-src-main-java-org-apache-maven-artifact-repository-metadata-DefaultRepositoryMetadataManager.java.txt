Centralized repository handling in AbstractVersionTransformation, for consistency (should fix MNG-527).

Changed download strategy for plugins.xml metadata to download only when non-existent locally or when plugin prefix cannot be located within local metadata. NOTE: This could lead to local-only installs of plugins having their prefix mappings overwritten.

Next step is to change the maven-plugin-plugin.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219615 13f79535-47bb-0310-9956-ffa450edef68

+    public void resolveLocally( RepositoryMetadata metadata, ArtifactRepository local )
+        throws RepositoryMetadataManagementException
+    {
+        resolve( metadata, null, local );
+    }
+    
-            metadataFile = constructLocalRepositoryFile( metadata, local, remote.getId() );
+            metadataFile = constructLocalRepositoryFile( metadata, local );
-            if ( remote == null )
-            {
-                throw new RepositoryMetadataManagementException( metadata,
-                                                                 "Cannot retrieve repository metadata from null repository." );
-            }
-            else
+            if ( !metadataFile.exists() && remote != null )
-                    
+
-                        
-                        if( !metadataFile.exists() || ( metadataFile.lastModified() <= tempMetadataFile.lastModified() ) )
+
+                        if ( !metadataFile.exists()
+                            || ( metadataFile.lastModified() <= tempMetadataFile.lastModified() ) )
-                                
+
-                            throw new RepositoryMetadataManagementException( metadata, "Remote repository metadata not found.",
-                                                                             e );
+                            throw new RepositoryMetadataManagementException( metadata,
+                                                                             "Remote repository metadata not found.", e );
-                            
+
-                            
+
-                    
-                    metadata.setFile( metadataFile );
-                    throw new RepositoryMetadataManagementException( metadata, "Error constructing temporary metadata download file.", e );
+                    throw new RepositoryMetadataManagementException(
+                                                                     metadata,
+                                                                     "Error constructing temporary metadata download file.",
+                                                                     e );
+            else
+            {
+                getLogger().info( "Using local copy of " + metadata + " from: " + metadataFile );
+            }
+
+            metadata.setFile( metadataFile );
-        String realignedPath = local.formatAsFile( metadata.getRepositoryPath() );
-
-        realignedPath = realignedPath.replace( File.separatorChar, '/' );
-
-        if ( !realignedPath.startsWith( "/" ) )
-        {
-            realignedPath = "/" + realignedPath;
-        }
-
-        realignedPath = "/REPOSITORY-INF/" + remoteRepositoryId + realignedPath;
-
-        File metadataFile = new File( local.getBasedir(), realignedPath ).getAbsoluteFile();
+        File metadataFile = constructLocalRepositoryFile( metadata, local );
-    private File constructLocalRepositoryFile( RepositoryMetadata metadata, ArtifactRepository local, String remoteId )
+    public void purgeLocalCopy( RepositoryMetadata metadata, ArtifactRepository local )
+        throws RepositoryMetadataManagementException
+    {
+        File metadataFile = constructLocalRepositoryFile( metadata, local );
+        
+        if ( metadataFile.exists() )
+        {
+            if ( !metadataFile.delete() )
+            {
+                throw new RepositoryMetadataManagementException( metadata, "Failed to purge local copy from: " + metadataFile );
+            }
+        }
+    }
+
+    private File constructLocalRepositoryFile( RepositoryMetadata metadata, ArtifactRepository local )
-        String realignedPath = metadataPath.replace( File.separatorChar, '/' );
+        metadataPath = metadataPath.replace( File.separatorChar, '/' );
-        if ( !realignedPath.startsWith( "/" ) )
-        {
-            realignedPath = "/" + realignedPath;
-        }
-
-        realignedPath = "/REPOSITORY-INF/" + remoteId + realignedPath;
-
-        return new File( local.getBasedir(), realignedPath );
+        return new File( local.getBasedir(), metadataPath );

INS31 INS31 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS43 INS42 INS43 INS42 INS42 INS21 INS43 INS42 INS43 INS42 INS42 INS60 INS25 MOV21 INS42 INS42 INS32 MOV43 INS42 INS42 MOV43 INS59 INS32 INS8 INS42 INS42 INS33 INS42 MOV8 MOV21 UPD42 INS42 INS32 INS42 INS42 INS25 UPD42 MOV32 UPD42 INS27 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS38 INS8 INS38 INS27 INS21 INS32 INS53 INS32 MOV42 MOV33 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS27 MOV43 INS42 INS27 INS42 INS45 INS42 INS45 INS42 INS45 INS42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL45 DEL14 DEL53 DEL42 DEL43 DEL42 DEL32 DEL42 DEL42 DEL42 DEL40 DEL13 DEL32 DEL7 DEL21 DEL42 DEL42 DEL45 DEL32 DEL38 DEL42 DEL45 DEL42 DEL27 DEL7 DEL21 DEL8 DEL25 DEL42 DEL45 DEL42 DEL42 DEL27 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL42 DEL14 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL45 DEL42 DEL27 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL38 DEL8 DEL25 DEL42 DEL45 DEL42 DEL42 DEL27 DEL7 DEL21