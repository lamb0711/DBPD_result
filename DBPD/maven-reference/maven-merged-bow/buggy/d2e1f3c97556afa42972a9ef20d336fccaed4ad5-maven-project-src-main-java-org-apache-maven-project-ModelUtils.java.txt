o Adding support for <executions/>, which means multiple runs of the same goal/set-of-goals with different configs.
o Adding @phase declarations for those mojos that seem to be part of the main build, just for completeness
o Added two ITs, to test that <executions/> doesn't mess up the normal operation, and to test multi-execution for a goal.

Should resolve: MNG-172.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@190335 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.GoalContainer;
+import org.apache.maven.model.PluginExecution;
-        if( childContainer == null || parentContainer == null )
+        if ( childContainer == null || parentContainer == null )
-        
+
-                
+
-                    
+
-            
+
-        if( child == null || parent == null )
+        if ( child == null || parent == null )
-        
+
+        // merge the lists of goals that are not attached to an <execution/>
+        ModelUtils.mergeGoalContainerDefinitions( child, parent, handleAsInheritance );
+
+        // from here to the end of the method is dealing with merging of the <executions/> section.
+        String parentInherited = parent.getInherited();
+
+        boolean parentIsInherited = parentInherited == null || Boolean.valueOf( parentInherited ).booleanValue();
+
+        List parentExecutions = parent.getExecutions();
+
+        if ( parentExecutions != null && !parentExecutions.isEmpty() )
+        {
+            Map assembledExecutions = new TreeMap();
+
+            Map childExecutions = child.getExecutionsAsMap();
+
+            for ( Iterator it = parentExecutions.iterator(); it.hasNext(); )
+            {
+                PluginExecution parentExecution = (PluginExecution) it.next();
+
+                if ( !handleAsInheritance || parentIsInherited )
+                {
+                    PluginExecution assembled = parentExecution;
+
+                    PluginExecution childExecution = (PluginExecution) childExecutions.get( parentExecution.getId() );
+
+                    if ( childExecution != null )
+                    {
+                        ModelUtils.mergeGoalContainerDefinitions( childExecution, parentExecution, handleAsInheritance );
+
+                        assembled = childExecution;
+                    }
+                    else if ( handleAsInheritance && parentInherited == null )
+                    {
+                        parentExecution.unsetInheritanceApplied();
+                    }
+
+                    assembledExecutions.put( assembled.getId(), assembled );
+                }
+            }
+
+            for ( Iterator it = childExecutions.entrySet().iterator(); it.hasNext(); )
+            {
+                Map.Entry entry = (Map.Entry) it.next();
+
+                String id = (String) entry.getKey();
+
+                if ( !assembledExecutions.containsKey( id ) )
+                {
+                    assembledExecutions.put( id, entry.getValue() );
+                }
+            }
+
+            child.setExecutions( new ArrayList( assembledExecutions.values() ) );
+
+            child.flushExecutionMap();
+        }
+
+    }
+
+    private static void mergeGoalContainerDefinitions( GoalContainer child, GoalContainer parent,
+                                                      boolean handleAsInheritance )
+    {
-
-                        if ( handleAsInheritance && parentInherited == null )
+                        else if ( handleAsInheritance && parentInherited == null )

INS26 INS26 INS40 INS40 INS31 INS83 INS83 INS39 INS42 MOV44 MOV44 INS44 INS8 UPD83 UPD42 INS44 INS44 INS39 INS42 MOV25 MOV25 INS21 INS60 INS60 INS60 INS25 INS43 INS42 INS43 INS42 INS32 INS43 INS59 INS39 INS59 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS27 INS42 INS42 INS32 INS27 INS38 INS60 INS60 INS24 INS24 INS21 INS21 INS42 INS42 INS27 INS32 INS42 INS42 INS42 INS33 INS32 INS43 INS59 INS43 INS59 INS58 INS32 INS8 INS58 INS32 INS8 INS32 INS32 INS42 INS33 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS43 INS59 INS42 INS42 INS60 INS25 INS43 INS59 INS42 INS42 INS60 INS60 INS25 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS38 INS8 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS11 INS38 INS42 INS60 INS60 INS25 INS21 INS32 INS42 INS40 INS42 INS11 INS42 INS42 INS11 INS32 INS21 INS42 INS42 INS42 INS43 INS32 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS25 INS32 INS42 INS42 INS43 INS32 INS43 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS33 INS21 INS21 INS27 INS8 INS42 INS42 INS32 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS32 INS32 INS7 INS42 INS27 INS21 INS42 INS42 INS42 INS42 MOV25 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS42 INS42 INS42 INS42