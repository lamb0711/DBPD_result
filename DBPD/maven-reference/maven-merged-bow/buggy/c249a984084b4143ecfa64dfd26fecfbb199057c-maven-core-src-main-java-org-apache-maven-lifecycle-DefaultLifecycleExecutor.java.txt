[MNG-4345] [regression] Plugin executions contributed by default lifecycle mapping execute after other plugin executions bound to the same phase

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@812467 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.TreeMap;
-        Map<String, List<MojoExecution>> lifecycleMappings = new LinkedHashMap<String, List<MojoExecution>>();
+        Map<String, Map<Integer, List<MojoExecution>>> mappings =
+            new LinkedHashMap<String, Map<Integer, List<MojoExecution>>>();
-            List<MojoExecution> mojoExecutions = new ArrayList<MojoExecution>();
+            Map<Integer, List<MojoExecution>> phaseBindings = new TreeMap<Integer, List<MojoExecution>>();
-            lifecycleMappings.put( phase, mojoExecutions );
+            mappings.put( phase, phaseBindings );
-                    List<MojoExecution> mojoExecutions = lifecycleMappings.get( execution.getPhase() );
-                    if ( mojoExecutions != null )
+                    Map<Integer, List<MojoExecution>> phaseBindings = mappings.get( execution.getPhase() );
+                    if ( phaseBindings != null )
-                            mojoExecutions.add( mojoExecution );
+                            addMojoExecution( phaseBindings, mojoExecution, execution.getPriority() );
-                        List<MojoExecution> mojoExecutions = lifecycleMappings.get( mojoDescriptor.getPhase() );
-                        if ( mojoExecutions != null )
+                        Map<Integer, List<MojoExecution>> phaseBindings = mappings.get( mojoDescriptor.getPhase() );
+                        if ( phaseBindings != null )
-                            mojoExecutions.add( mojoExecution );
+                            addMojoExecution( phaseBindings, mojoExecution, execution.getPriority() );
+        Map<String, List<MojoExecution>> lifecycleMappings = new LinkedHashMap<String, List<MojoExecution>>();
+
+        for ( Map.Entry<String, Map<Integer, List<MojoExecution>>> entry : mappings.entrySet() )
+        {
+            List<MojoExecution> mojoExecutions = new ArrayList<MojoExecution>();
+
+            for ( List<MojoExecution> executions : entry.getValue().values() )
+            {
+                mojoExecutions.addAll( executions );
+            }
+
+            lifecycleMappings.put( entry.getKey(), mojoExecutions );
+        }
+
+    private void addMojoExecution( Map<Integer, List<MojoExecution>> phaseBindings, MojoExecution mojoExecution,
+                                   int priority )
+    {
+        List<MojoExecution> mojoExecutions = phaseBindings.get( priority );
+
+        if ( mojoExecutions == null )
+        {
+            mojoExecutions = new ArrayList<MojoExecution>();
+            phaseBindings.put( priority, mojoExecutions );
+        }
+
+        mojoExecutions.add( mojoExecution );
+    }
+
+            execution.setPriority( -1 );

INS26 INS40 INS31 MOV70 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS60 INS70 INS74 INS42 INS43 INS42 INS39 INS42 INS60 INS25 MOV21 INS74 INS59 MOV44 MOV32 INS8 INS44 INS32 INS43 INS43 INS74 INS42 MOV74 INS59 INS27 INS8 INS43 INS43 INS74 INS42 INS14 INS60 INS21 MOV25 INS74 INS42 INS42 INS42 INS70 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS33 INS21 INS21 INS21 INS42 INS42 INS43 INS43 INS74 INS74 INS74 INS59 INS32 INS43 INS43 INS74 INS44 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS7 INS32 INS32 INS42 INS42 INS43 INS43 INS43 INS43 INS74 INS43 INS43 INS74 INS42 INS14 INS42 INS42 INS42 INS42 INS40 INS42 INS43 INS43 INS74 MOV74 INS42 INS32 INS42 INS21 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS38 INS42 INS42 INS42 INS42 INS43 INS43 INS74 INS42 INS42 INS43 INS43 INS74 INS42 INS42 INS43 INS43 INS42 INS42 INS32 UPD42 MOV42 INS42 INS74 INS34 INS42 INS42 INS43 INS43 INS42 INS42 INS43 INS43 INS74 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS43 INS43 INS74 INS42 INS42 INS42 INS42 INS43 INS43 INS74 UPD42 UPD42 INS42 INS42 INS43 INS43 UPD42 INS74 INS42 INS42 INS43 INS43 INS74 UPD42 UPD42 INS21 INS42 INS42 INS43 INS43 UPD42 INS32 UPD42 UPD42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42