Working on issue: MNG-379
Added specified stop-gap patch for issue: MNG-473 (affects settings-builder and registry-builder)

Today I've made the following progress on this so far:

- Added a new project, called maven-plugin-registry, to house the model for this new file.

- Developed/debugged/tested PluginVersionManager/DefaultPluginVersionManager to isolate the plugin-version checks/management code away from the PluginManager

- Added interactiveMode (<interactiveMode>true|false</interactiveMode> directly under the root element of settings.xml, or -B short CLI option or --batch-mode CLI option, where the CLI options turn OFF interactiveMode). This will allow things like the maven-plugins build to register new plugins (and, for now, new versions of plugins) automatically.

- Added user input handler for when interactiveMode = true, to get a yes/no on whether to use the discovered version over the installed version and/or no version at all. If there is no installed version, and the user selects 'n', then the discovered version is used FOR THAT SESSION ONLY, and won't be recorded in the registry.

- Added checks/recording rejected versions against the registry, before attempting to use the discovered version.

Pending:

- Still need to add update-policies, to determine two things:

  1. how often to check for updates
  2. what to do when updates are found (autoUpdate, etc.)



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@190854 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.transform.ReleaseArtifactTransformation;
-import org.apache.maven.model.Plugin;
+import org.apache.maven.plugin.version.PluginVersionManager;
+import org.apache.maven.plugin.version.PluginVersionResolutionException;
-                                         ArtifactRepository localRepository )
-        throws ArtifactResolutionException, PluginManagerException
+                                         ArtifactRepository localRepository, boolean interactiveMode )
+        throws ArtifactResolutionException, PluginManagerException, PluginVersionResolutionException
-
+        // [HTTP-301] All version-resolution logic has been moved to DefaultPluginVersionManager. :)
-            Plugin pluginConfig = null;
+            PluginVersionManager pluginVersionManager = null;
-            for ( Iterator it = project.getBuildPlugins().iterator(); it.hasNext(); )
+            try
-                Plugin plugin = (Plugin) it.next();
+                pluginVersionManager = (PluginVersionManager) container.lookup( PluginVersionManager.ROLE );
-                if ( groupId.equals( plugin.getGroupId() ) && artifactId.equals( plugin.getArtifactId() ) )
-                {
-                    pluginConfig = plugin;
-
-                    break;
-                }
+                version = pluginVersionManager.resolvePluginVersion( groupId, artifactId, project, localRepository,
+                                                                     interactiveMode );
-
-            if ( project.getReports() != null )
+            catch ( ComponentLookupException e )
-                for ( Iterator it = project.getReports().getPlugins().iterator(); it.hasNext(); )
-                {
-                    Plugin plugin = (Plugin) it.next();
-
-                    if ( groupId.equals( plugin.getGroupId() ) && artifactId.equals( plugin.getArtifactId() ) )
-                    {
-                        pluginConfig = plugin;
-
-                        break;
-                    }
-                }
+                throw new PluginVersionResolutionException( groupId, artifactId,
+                                                            "Cannot retrieve an instance of the PluginVersionManager",
+                                                            e );
-
-            if ( pluginConfig != null )
+            finally
-                if ( StringUtils.isEmpty( pluginConfig.getVersion() ) )
-                {
-                    version = ReleaseArtifactTransformation.RELEASE_VERSION;
-                }
-                else
-                {
-                    version = pluginConfig.getVersion();
-                }
+                releaseComponent( pluginVersionManager );
-                if ( groupId.equals( e.getGroupId() ) && artifactId.equals( e.getArtifactId() )
-                    && version.equals( e.getVersion() ) && "maven-plugin".equals( e.getType() ) )
+                if ( ( groupId == null || artifactId == null || version == null || ( groupId.equals( e.getGroupId() )
+                    && artifactId.equals( e.getArtifactId() ) && version.equals( e.getVersion() ) ) )
+                    && "maven-plugin".equals( e.getType() ) )
-            
+
-            
+
-            
+
-            
+
-                
+
+                    getLogger().debug( "Failed to release plugin container - ignoring." );

MOV26 MOV26 UPD40 UPD40 INS44 INS43 INS39 INS42 INS42 INS54 UPD43 INS8 INS12 INS8 UPD42 UPD42 INS21 INS21 INS44 INS8 MOV21 INS7 INS7 INS43 INS42 INS53 INS32 INS42 INS11 INS42 INS32 UPD42 MOV42 INS14 UPD42 MOV42 UPD42 MOV42 INS27 UPD43 MOV43 MOV32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS43 INS42 INS42 INS45 INS42 INS36 MOV32 INS21 UPD42 UPD42 UPD42 INS40 UPD42 MOV42 INS27 INS32 INS27 INS36 INS32 INS42 INS45 INS27 INS27 MOV27 INS42 INS27 INS27 INS42 INS33 INS42 INS33 INS42 INS33 DEL42 DEL32 DEL7 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL32 DEL32 DEL42 DEL32 DEL32 DEL27 DEL42 DEL42 DEL7 DEL21 DEL10 DEL8 DEL25 DEL8 DEL24 DEL42 DEL42 DEL32 DEL33 DEL27 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL27 DEL42 DEL42 DEL7 DEL21 DEL10 DEL8 DEL25 DEL8 DEL24 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL40 DEL7 DEL21 DEL8 DEL8 DEL25 DEL8 DEL25