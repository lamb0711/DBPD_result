Adding system scope...uses scope == 'system' and systemPath in dependency. SystemPath was chosen over mappings inside the setings.xml for scalability, heritability, and injectability (via managed deps).



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@264960 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.File;
-        MavenProject project;
+        MavenProject project = null;
-            try
+            if ( Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ) )
-                project = mavenProjectBuilder.buildFromRepository( pomArtifact, remoteRepositories, localRepository );
+                done = true;
-            catch ( InvalidModelException e )
+            else
-                getLogger().warn( "POM for: \'" + pomArtifact.getId() + "\' does not appear to be valid. Its will be ignored for artifact resolution." );
-                
-                project = null;
-            }
-            catch ( ProjectBuildingException e )
-            {
-                throw new ArtifactMetadataRetrievalException( "Unable to read the metadata file", e );
-            }
-
-            if ( project != null )
-            {
-                Relocation relocation = null;
-
-                DistributionManagement distMgmt = project.getDistributionManagement();
-                if ( distMgmt != null )
+                try
-                    relocation = distMgmt.getRelocation();
+                    project = mavenProjectBuilder
+                        .buildFromRepository( pomArtifact, remoteRepositories, localRepository );
+                }
+                catch ( InvalidModelException e )
+                {
+                    getLogger()
+                        .warn(
+                               "POM for: \'" + pomArtifact.getId()
+                                   + "\' does not appear to be valid. Its will be ignored for artifact resolution." );
+
+                    project = null;
+                }
+                catch ( ProjectBuildingException e )
+                {
+                    throw new ArtifactMetadataRetrievalException( "Unable to read the metadata file", e );
-                if ( relocation != null )
+                if ( project != null )
-                    if ( relocation.getGroupId() != null )
+                    Relocation relocation = null;
+
+                    DistributionManagement distMgmt = project.getDistributionManagement();
+                    if ( distMgmt != null )
-                        artifact.setGroupId( relocation.getGroupId() );
-                    }
-                    if ( relocation.getArtifactId() != null )
-                    {
-                        artifact.setArtifactId( relocation.getArtifactId() );
-                    }
-                    if ( relocation.getVersion() != null )
-                    {
-                        artifact.setVersion( relocation.getVersion() );
+                        relocation = distMgmt.getRelocation();
-                    String message = "\n  This artifact has been relocated to " + artifact.getGroupId() + ":"
-                        + artifact.getArtifactId() + ":" + artifact.getVersion() + ".\n";
-
-                    if ( relocation.getMessage() != null )
+                    if ( relocation != null )
-                        message += "  " + relocation.getMessage() + "\n";
-                    }
+                        if ( relocation.getGroupId() != null )
+                        {
+                            artifact.setGroupId( relocation.getGroupId() );
+                        }
+                        if ( relocation.getArtifactId() != null )
+                        {
+                            artifact.setArtifactId( relocation.getArtifactId() );
+                        }
+                        if ( relocation.getVersion() != null )
+                        {
+                            artifact.setVersion( relocation.getVersion() );
+                        }
-                    getLogger().warn( message + "\n" );
+                        String message = "\n  This artifact has been relocated to " + artifact.getGroupId() + ":"
+                            + artifact.getArtifactId() + ":" + artifact.getVersion() + ".\n";
+
+                        if ( relocation.getMessage() != null )
+                        {
+                            message += "  " + relocation.getMessage() + "\n";
+                        }
+
+                        getLogger().warn( message + "\n" );
+                    }
+                    else
+                    {
+                        done = true;
+                    }
-            else
-            {
-                done = true;
-            }
+            
+            if ( Artifact.SCOPE_SYSTEM.equals( scope ) )
+            {
+                artifact.setFile( new File( d.getSystemPath() ) );
+            }

INS26 INS40 INS33 INS25 INS25 INS32 INS8 INS8 INS32 INS8 INS40 INS42 INS32 INS21 MOV54 MOV25 INS40 INS42 INS42 INS21 INS42 INS42 INS7 INS32 INS42 INS9 INS42 INS42 INS14 INS43 INS32 INS42 INS42 INS42