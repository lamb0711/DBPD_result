PR: MNG-74
remove maven.properties use everywhere except classworlds conf


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163024 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Properties;
-    private Properties properties;
-
-        File mavenPropertiesFile = new File( System.getProperty( "user.home" ), "maven.properties" );
+        File userPomFile = new File( System.getProperty( "user.home" ), ".m2/pom.xml" );
-        if ( !mavenPropertiesFile.exists() )
+        reader = new ModelReader();
+        if ( !reader.parse( userPomFile ) )
-            System.out.println( "You must have a ~/maven.properties file and must contain the following entries:" );
-
-            System.out.println( "maven.home = /path/to/m2/installation" );
-
-            System.out.println( "maven.repo.local = /path/to/m2/repository" );
+            System.out.println( "You must have a ~/.m2/pom.xml file and must contain the following entries:" );
+            System.out.println( "<local>\n" );
+            System.out.println( "  <repository>/path/to/m2/repository</repository> (required)\n" );
+            System.out.println( "  <online>true</online> (optional)\n" );
+            System.out.println( "</local>" );
+        String mavenHome = null;
+
+        if ( args.length == 1 )
+        {
+            mavenHome = args[0];
+        }
+        else
+        {
+            mavenHome = System.getProperty( "maven.home" );
+
+            if ( mavenHome == null )
+            {
+                mavenHome = new File( System.getProperty( "user.home" ), "m2" ).getAbsolutePath();
+            }
+        }
+
+        File dist = new File( mavenHome );
+
+        System.out.println( "Maven installation directory: " + dist );
+
-        properties = loadProperties( mavenPropertiesFile );
-
-        // Make the system properties override maven.properties
-        properties.putAll( System.getProperties() );
-
-        for ( Iterator i = properties.keySet().iterator(); i.hasNext(); )
-        {
-            String key = (String) i.next();
-
-            // TODO: the namespace should be "properties" itself to support variables within the same file,
-            //       however, StringUtils would need to support recursive replacement
-            properties.setProperty( key, StringUtils.interpolate( properties.getProperty( key ), System.getProperties() ) );
-        }
-
-        String onlineProperty = properties.getProperty( "maven.online" );
+        String onlineProperty = System.getProperty( "maven.online", reader.getLocal().getOnline() );
-        downloader = new ArtifactDownloader( properties );
+        String mavenRepoLocal = System.getProperty( "maven.repo.local", reader.getLocal().getRepository() );
+
+        downloader = new ArtifactDownloader( mavenRepoLocal, reader.getRemoteRepositories() );
-        String mavenHome;
-
-        if ( args.length == 1 )
-        {
-            mavenHome = args[0];
-        }
-        else
-        {
-            mavenHome = properties.getProperty( "maven.home" );
-
-            if ( mavenHome == null )
-            {
-                mavenHome = new File( System.getProperty( "user.home" ), "m2" ).getAbsolutePath();
-            }
-        }
-
-        File dist = new File( mavenHome );
-
-                d.artifactId.equals( "maven-artifact" ) )
+                d.artifactId.equals( "maven-artifact" ) 
+)
-    private Properties loadProperties( File file )
-    {
-        try
-        {
-            return loadProperties( new FileInputStream( file ) );
-        }
-        catch ( Exception e )
-        {
-            // ignore
-        }
-
-        return new Properties();
-    }
-
-    private static Properties loadProperties( InputStream is )
-    {
-        Properties properties = new Properties();
-
-        try
-        {
-            if ( is != null )
-            {
-                properties.load( is );
-            }
-        }
-        catch ( IOException e )
-        {
-            // ignore
-        }
-        finally
-        {
-            try
-            {
-                if ( is != null )
-                {
-                    is.close();
-                }
-            }
-            catch ( IOException e )
-            {
-                // ignore
-            }
-        }
-
-        return properties;
-    }
-
+        private List remoteRepositories = new ArrayList();
+
+        private Local local = new Local();
+
+        private boolean insideLocal = false;
+
+        private boolean insideRepository = false;
+
+        public List getRemoteRepositories()
+        {
+            return remoteRepositories;
+        }
+
+        public Local getLocal()
+        {
+            return local;
+        }
+
+            else if ( rawName.equals( "repository" ) && !insideLocal )
+            {
+                insideRepository = true;
+            }
+            else if ( rawName.equals( "local" ) )
+            {
+                insideLocal = true;
+            }
+            else if ( rawName.equals( "local" ) )
+            {
+                insideLocal = false;
+            }
+            else if ( rawName.equals( "repository" ) )
+            {
+                if ( insideLocal )
+                {
+                    local.repository = getBodyText();
+                }
+                else 
+                {
+                    insideRepository = false;
+                }
+            }
+            else if ( insideRepository )
+            {
+                if ( rawName.equals( "url" ) )
+                {
+                    remoteRepositories.add( getBodyText() );
+                }
+            }
+
+    public static class Local
+        implements Serializable
+    {
+        private String repository;
+
+        private String online;
+
+        public String getRepository()
+        {
+            return this.repository;
+        }
+
+        public void setRepository( String repository )
+        {
+            this.repository = repository;
+        }   
+    
+        public String getOnline()
+        {
+            return this.online;
+        }
+
+        public void setOnline( String online )
+        {
+            this.online = online;
+        }   
+    }

INS55 MOV60 MOV25 MOV60 INS23 INS23 INS23 INS23 INS31 INS31 INS83 INS83 INS42 INS43 MOV23 INS23 INS31 INS31 INS31 INS31 INS21 INS25 INS60 INS21 INS60 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS42 UPD43 INS83 INS43 INS59 INS83 INS43 INS42 INS8 UPD83 MOV83 INS39 INS42 MOV44 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS7 MOV38 INS8 MOV43 INS59 INS32 MOV43 INS59 MOV43 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS9 INS42 INS9 INS42 INS41 INS42 INS41 INS25 UPD42 UPD42 UPD42 MOV42 INS42 UPD42 MOV42 MOV41 MOV43 INS42 INS21 UPD42 MOV42 INS41 UPD43 MOV43 UPD42 MOV42 MOV21 UPD42 INS42 INS14 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 UPD42 MOV42 INS33 INS40 UPD42 MOV42 INS27 UPD42 MOV42 INS32 UPD42 INS43 INS43 INS42 INS42 MOV32 MOV8 INS25 INS25 INS22 INS7 INS22 UPD42 INS7 UPD45 INS43 INS42 UPD42 UPD42 INS32 INS45 INS42 UPD42 MOV42 UPD42 MOV42 INS45 MOV32 UPD42 UPD45 INS32 INS42 INS32 INS42 INS42 INS27 INS8 MOV25 INS32 INS8 MOV25 INS52 INS42 INS22 INS42 INS52 INS42 INS22 INS42 INS42 UPD45 UPD45 UPD45 INS40 UPD42 MOV42 INS45 INS40 UPD42 INS45 UPD42 MOV42 INS32 INS42 INS42 INS42 INS32 INS38 INS21 INS32 INS8 INS42 INS42 INS45 INS21 INS52 INS42 INS52 INS42 UPD42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS45 INS42 INS7 INS42 INS42 INS45 INS21 INS7 INS42 INS9 INS7 INS42 INS9 INS42 INS9 INS25 MOV32 MOV8 INS25 INS32 INS8 INS25 INS42 INS42 INS45 INS25 INS42 INS8 INS42 INS8 INS8 INS25 INS21 INS21 INS32 INS8 INS7 INS7 INS42 INS42 INS45 INS21 INS40 INS32 INS42 INS9 INS32 INS42 INS42 INS42 INS32 INS42 DEL40 DEL26 DEL42 DEL42 DEL32 DEL7 DEL42 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL32 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL59 DEL60 DEL83 DEL43 DEL42 DEL43 DEL42 DEL44 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL42 DEL43 DEL14 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL44 DEL8 DEL12 DEL42 DEL33 DEL27 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL8 DEL54 DEL42 DEL41 DEL8 DEL31 DEL25 DEL42 DEL42 DEL43 DEL42 DEL14 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32