Upgraded to java7 language features

-import java.util.Collection;
-import java.util.Iterator;
-                Map<String, Dependency> mappedChildDeps = new TreeMap<String, Dependency>();
+                Map<String, Dependency> mappedChildDeps = new TreeMap<>();
-            Map<String, ReportPlugin> assembledPlugins = new TreeMap<String, ReportPlugin>();
+            Map<String, ReportPlugin> assembledPlugins = new TreeMap<>();
-            child.setPlugins( new ArrayList<ReportPlugin>( assembledPlugins.values() ) );
+            child.setPlugins( new ArrayList<>( assembledPlugins.values() ) );
-        List<String> reports = new ArrayList<String>();
+        List<String> reports = new ArrayList<>();
-            Map<String, ReportSet> assembledReportSets = new TreeMap<String, ReportSet>();
+            Map<String, ReportSet> assembledReportSets = new TreeMap<>();
-            child.setReportSets( new ArrayList<ReportSet>( assembledReportSets.values() ) );
+            child.setReportSets( new ArrayList<>( assembledReportSets.values() ) );
-        Map<String, Dependency> depsMap = new LinkedHashMap<String, Dependency>();
+        Map<String, Dependency> depsMap = new LinkedHashMap<>();
-        child.setDependencies( new ArrayList<Dependency>( depsMap.values() ) );
+        child.setDependencies( new ArrayList<>( depsMap.values() ) );
-        LinkedList<String> pathElements = new LinkedList<String>();
+        LinkedList<String> pathElements = new LinkedList<>();
-            if ( token.equals( "" ) )
+            switch ( token )
-                // Empty path entry ("...//.."), remove.
-            }
-            else if ( token.equals( ".." ) )
-            {
-                if ( pathElements.isEmpty() )
-                {
-                    // FIXME: somehow report to the user
-                    // that there are too many '..' elements.
-                    // For now, ignore the extra '..'.
-                }
-                else
-                {
-                    pathElements.removeLast();
-                }
-            }
-            else
-            {
-                pathElements.addLast( token );
+                case "":
+                    // Empty path entry ("...//.."), remove.
+                    break;
+                case "..":
+                    if ( pathElements.isEmpty() )
+                    {
+                        // FIXME: somehow report to the user
+                        // that there are too many '..' elements.
+                        // For now, ignore the extra '..'.
+                    }
+                    else
+                    {
+                        pathElements.removeLast();
+                    }
+                    break;
+                default:
+                    pathElements.addLast( token );
+                    break;

MOV8 MOV60 INS50 UPD74 UPD74 UPD74 UPD74 INS42 INS49 INS10 INS49 MOV25 INS10 INS49 MOV21 INS10 INS45 INS45 UPD74 UPD74 UPD74 UPD74 UPD74 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL45 DEL32 DEL8 DEL42 DEL42 DEL45 DEL32 DEL8 DEL25 DEL25 DEL8