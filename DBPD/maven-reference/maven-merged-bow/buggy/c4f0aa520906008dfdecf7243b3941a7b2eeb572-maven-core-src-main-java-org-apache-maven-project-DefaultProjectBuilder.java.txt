o Refactored code

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1073926 13f79535-47bb-0310-9956-ffa450edef68

-import org.sonatype.aether.impl.ArtifactResolver;
+import org.sonatype.aether.RepositorySystemSession;
+import org.sonatype.aether.repository.RemoteRepository;
-@Component(role = ProjectBuilder.class)
+@Component( role = ProjectBuilder.class )
-    private ArtifactResolver artifactResolver;
+    private org.sonatype.aether.RepositorySystem repoSystem;
-    public ProjectBuildingResult build( File pomFile, ProjectBuildingRequest configuration )
+    public ProjectBuildingResult build( File pomFile, ProjectBuildingRequest request )
-        return build( pomFile, new FileModelSource( pomFile ), configuration );
+        return build( pomFile, new FileModelSource( pomFile ), new InternalConfig( request, null, null ) );
-    public ProjectBuildingResult build( ModelSource modelSource, ProjectBuildingRequest configuration )
+    public ProjectBuildingResult build( ModelSource modelSource, ProjectBuildingRequest request )
-        return build( null, modelSource, configuration );
+        return build( null, modelSource, new InternalConfig( request, null, null ) );
-    private ProjectBuildingResult build( File pomFile, ModelSource modelSource, ProjectBuildingRequest configuration )
+    private ProjectBuildingResult build( File pomFile, ModelSource modelSource, InternalConfig config )
+            ProjectBuildingRequest configuration = config.request;
+
-                ModelBuildingRequest request = getModelBuildingRequest( configuration, null );
+                ModelBuildingRequest request = getModelBuildingRequest( config );
-    
+
-    
+
-    private ModelBuildingRequest getModelBuildingRequest( ProjectBuildingRequest configuration,
-                                                          ReactorModelPool modelPool )
+    private ModelBuildingRequest getModelBuildingRequest( InternalConfig config )
+        ProjectBuildingRequest configuration = config.request;
+
-            new ProjectModelResolver( configuration.getRepositorySession(), artifactResolver, repositoryManager,
-                                      RepositoryUtils.toRepos( configuration.getRemoteRepositories() ),
-                                      configuration.getRepositoryMerging(), modelPool );
+            new ProjectModelResolver( config.session, repoSystem, repositoryManager, config.repositories,
+                                      configuration.getRepositoryMerging(), config.modelPool );
+        request.setModelCache( config.modelCache );
-    public ProjectBuildingResult build( Artifact artifact, ProjectBuildingRequest configuration )
+    public ProjectBuildingResult build( Artifact artifact, ProjectBuildingRequest request )
-        return build( artifact, false, configuration );
+        return build( artifact, false, request );
-    public ProjectBuildingResult build( Artifact artifact, boolean allowStubModel, ProjectBuildingRequest configuration )
+    public ProjectBuildingResult build( Artifact artifact, boolean allowStubModel, ProjectBuildingRequest request )
-        ArtifactResult result;
+        InternalConfig config = new InternalConfig( request, null, null );
+
+        boolean localProject;
+
-            ArtifactRequest request = new ArtifactRequest();
-            request.setArtifact( pomArtifact );
-            request.setRepositories( RepositoryUtils.toRepos( configuration.getRemoteRepositories() ) );
-            result = artifactResolver.resolveArtifact( configuration.getRepositorySession(), request );
-            pomArtifact = result.getArtifact();
+            ArtifactRequest pomRequest = new ArtifactRequest();
+            pomRequest.setArtifact( pomArtifact );
+            pomRequest.setRepositories( config.repositories );
+            ArtifactResult pomResult = repoSystem.resolveArtifact( config.session, pomRequest );
+
+            pomArtifact = pomResult.getArtifact();
+            localProject = pomResult.getRepository() instanceof WorkspaceRepository;
-                return build( null, createStubModelSource( artifact ), configuration );
+                return build( null, createStubModelSource( artifact ), config );
-        boolean localProject = result.getRepository() instanceof WorkspaceRepository;
-
-        return build( localProject ? pomFile : null, new FileModelSource( pomFile ), configuration );
+        return build( localProject ? pomFile : null, new FileModelSource( pomFile ), config );
-    public List<ProjectBuildingResult> build( List<File> pomFiles, boolean recursive, ProjectBuildingRequest config )
+    public List<ProjectBuildingResult> build( List<File> pomFiles, boolean recursive, ProjectBuildingRequest request )
+        InternalConfig config = new InternalConfig( request, modelPool, modelCache );
+
-            build( results, interimResults, projectIndex, pomFiles, new LinkedHashSet<File>(), true, recursive, config,
-                   modelPool, modelCache );
+            build( results, interimResults, projectIndex, pomFiles, new LinkedHashSet<File>(), true, recursive, config );
-                build( results, new ArrayList<MavenProject>(), projectIndex, interimResults, config,
+                build( results, new ArrayList<MavenProject>(), projectIndex, interimResults, request,
-                           boolean isRoot, boolean recursive, ProjectBuildingRequest config,
-                           ReactorModelPool reactorModelPool, ReactorModelCache modelCache )
+                           boolean isRoot, boolean recursive, InternalConfig config )
-            if ( !build( results, interimResults, projectIndex, pomFile, aggregatorFiles, isRoot, recursive, config,
-                         reactorModelPool, modelCache ) )
+            if ( !build( results, interimResults, projectIndex, pomFile, aggregatorFiles, isRoot, recursive, config ) )
-                           boolean isRoot, boolean recursive, ProjectBuildingRequest config,
-                           ReactorModelPool reactorModelPool, ReactorModelCache modelCache )
+                           boolean isRoot, boolean recursive, InternalConfig config )
-        ModelBuildingRequest request = getModelBuildingRequest( config, reactorModelPool );
+        ModelBuildingRequest request = getModelBuildingRequest( config );
-        MavenProject project = new MavenProject( repositorySystem, this, config, logger );
+        MavenProject project = new MavenProject( repositorySystem, this, config.request, logger );
-        request.setModelCache( modelCache );
-            new DefaultModelBuildingListener( project, projectBuildingHelper, config );
+            new DefaultModelBuildingListener( project, projectBuildingHelper, config.request );
-                             recursive, config, reactorModelPool, modelCache ) )
+                             recursive, config ) )
-                           ProjectBuildingRequest config, Map<File, Boolean> profilesXmls )
+                           ProjectBuildingRequest request, Map<File, Boolean> profilesXmls )
-                    build( results, modules, projectIndex, interimResult.modules, config, profilesXmls ) && noErrors;
+                    build( results, modules, projectIndex, interimResult.modules, request, profilesXmls ) && noErrors;
+    class InternalConfig
+    {
+
+        public final ProjectBuildingRequest request;
+
+        public final RepositorySystemSession session;
+
+        public final List<RemoteRepository> repositories;
+
+        public final ReactorModelPool modelPool;
+
+        public final ReactorModelCache modelCache;
+
+        public InternalConfig( ProjectBuildingRequest request, ReactorModelPool modelPool, ReactorModelCache modelCache )
+        {
+            this.request = request;
+            this.modelPool = modelPool;
+            this.modelCache = modelCache;
+            session = request.getRepositorySession();
+            repositories = RepositoryUtils.toRepos( request.getRemoteRepositories() );
+        }
+
+    }
+

INS26 UPD40 INS40 INS55 UPD43 MOV44 MOV44 MOV54 INS42 INS23 INS23 INS23 INS23 INS23 INS31 INS40 UPD42 UPD42 UPD42 INS43 UPD42 INS43 UPD42 INS60 INS60 INS21 UPD42 UPD42 UPD42 INS60 UPD43 UPD42 INS43 INS42 UPD42 INS83 INS83 MOV43 INS59 INS83 INS83 INS43 INS59 INS83 INS83 INS74 INS59 INS83 INS83 MOV43 INS59 INS83 INS83 INS43 INS59 INS83 INS42 MOV44 MOV44 MOV44 INS8 INS42 INS42 MOV43 INS59 MOV43 INS59 INS32 INS43 INS43 INS59 UPD42 INS42 MOV43 MOV43 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS42 UPD42 INS21 INS21 INS21 INS21 INS21 INS14 INS14 INS60 INS42 INS40 INS42 INS14 UPD42 MOV42 UPD42 MOV42 INS40 UPD42 INS42 INS42 INS14 INS21 INS60 UPD42 INS42 INS42 INS14 INS42 INS42 INS7 INS7 INS7 INS7 INS7 INS43 INS42 INS33 INS33 INS43 INS42 INS33 INS33 MOV43 INS59 MOV43 INS40 UPD42 MOV42 INS42 INS40 MOV32 INS40 INS43 INS42 INS33 INS33 INS32 MOV43 INS59 INS43 INS42 INS42 INS42 MOV43 INS40 MOV43 INS40 INS22 INS42 INS22 INS42 INS22 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS40 INS42 UPD42 UPD42 UPD42 MOV42 MOV42 INS40 INS42 INS32 INS42 INS32 UPD42 INS62 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS40 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 MOV43 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 UPD42 UPD42 DEL42 DEL42 DEL42 DEL33 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL62 DEL42 DEL32 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42