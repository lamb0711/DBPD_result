transform deployment of SNAPSHOT.
Currently, the POM and artifact are deployed separately, causing an inconsistent version to be written out.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163684 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.DefaultArtifact;
+import org.apache.maven.artifact.manager.WagonManager;
+import org.apache.maven.artifact.metadata.ArtifactMetadataRetrievalException;
+    private WagonManager wagonManager;
+
-    public Artifact transformLocalArtifact( Artifact artifact, ArtifactRepository localRepository )
+    public Artifact transformForResolve( Artifact artifact )
-        if ( shouldProcessArtifact( artifact ) )
+        // TODO: implement
+        return artifact;
+    }
+
+    public Artifact transformForInstall( Artifact artifact, ArtifactRepository localRepository )
+    {
+        if ( isSnapshot( artifact ) )
-    public Artifact transformRemoteArtifact( Artifact artifact, ArtifactRepository remoteRepository )
+    public Artifact transformForDeployment( Artifact artifact, ArtifactRepository remoteRepository )
+        throws ArtifactMetadataRetrievalException
-        if ( shouldProcessArtifact( artifact ) )
+        if ( isSnapshot( artifact ) )
-            ArtifactMetadata metadata = SnapshotArtifactMetadata.createRemoteSnapshotMetadata( artifact );
-//            wagonManager.getMetadata( metadata, remoteRepository, localRepository );
+            SnapshotArtifactMetadata metadata = SnapshotArtifactMetadata.createRemoteSnapshotMetadata( artifact );
+            metadata.retrieveFromRemoteRepository( remoteRepository, wagonManager );
+            metadata.update();
-            // TODO: implement
+            // TODO: note, we could currently transform this in place, as it is only used through the deploy mojo,
+            //   which creates the artifact and then disposes of it
+            artifact = new DefaultArtifact( artifact.getGroupId(), artifact.getArtifactId(), metadata.getVersion(),
+                                            artifact.getScope(), artifact.getType(), artifact.getClassifier() );
+            artifact.addMetadata( metadata );
-    private static boolean shouldProcessArtifact( Artifact artifact )
-    {
-        return isSnapshot( artifact ) && "pom".equals( artifact.getType() );
-    }
-

INS26 INS26 INS26 MOV31 INS40 INS40 INS40 INS23 INS83 INS43 INS59 INS43 INS42 MOV44 INS8 UPD42 UPD83 MOV43 INS42 MOV44 MOV44 INS43 INS8 INS42 INS42 INS42 INS41 INS42 INS25 MOV41 INS42 MOV32 INS8 UPD42 MOV60 INS21 INS21 INS21 INS21 UPD43 INS32 INS32 INS7 INS32 UPD42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS43 INS32 INS32 INS32 INS32 MOV32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL32 DEL8 DEL25 DEL8 DEL83 DEL39 DEL42 DEL45 DEL32 DEL27 DEL41 DEL8