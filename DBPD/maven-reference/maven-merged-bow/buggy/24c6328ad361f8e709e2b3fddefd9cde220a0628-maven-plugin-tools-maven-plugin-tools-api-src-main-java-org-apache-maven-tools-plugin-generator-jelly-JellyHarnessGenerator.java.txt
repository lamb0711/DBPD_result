declare the desired "prefix" inside the plugin descriptor instead of pulling apart the artifact ID (though that is how the default is created).
Currently, the reverse is not handled in anyway, so a non-default prefix may not work, but this makes the code easier to isolate.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168099 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.plugin.descriptor.PluginDescriptor;
+import org.codehaus.plexus.util.IOUtil;
+import java.io.IOException;
-    public void execute( String destinationDirectory, Set mojoDescriptors, MavenProject project )
-        throws Exception
+    public void execute( String destinationDirectory, Set mojoDescriptors, MavenProject project, String goalPrefix )
+        throws IOException
-        FileWriter writer = new FileWriter( new File( destinationDirectory, "plugin.jelly" ) );
+        FileWriter writer = null;
+        PrettyPrintXMLWriter w;
+        try
+        {
+            writer = new FileWriter( new File( destinationDirectory, "plugin.jelly" ) );
-        PrettyPrintXMLWriter w = new PrettyPrintXMLWriter( writer );
+            w = new PrettyPrintXMLWriter( writer );
-        String pluginId = PluginDescriptor.getPluginIdFromArtifactId( project.getArtifactId() );
+            writePluginFile( w, goalPrefix, mojoDescriptors, project );
+
+            writer.flush();
+        }
+        finally
+        {
+            IOUtil.close( writer );
+        }
-        //
+        // project.xml
+        writer = null;
+        try
+        {
+            writer = new FileWriter( new File( destinationDirectory, "project.xml" ) );
+
+            w = new PrettyPrintXMLWriter( writer );
+
+            writeProjectFile( w, project );
+
+            writer.flush();
+        }
+        finally
+        {
+            IOUtil.close( writer );
+        }
+    }
+
+    private void writePluginFile( PrettyPrintXMLWriter w, String goalPrefix, Set mojoDescriptors, MavenProject project )
+    {
-        w.addAttribute( "xmlns:" + pluginId, pluginId );
+        w.addAttribute( "xmlns:" + goalPrefix, goalPrefix );
-        w.addAttribute( "uri", pluginId );
+        w.addAttribute( "uri", goalPrefix );
+    }
-        // ----------------------------------------------------------------------
-        //
-        // ----------------------------------------------------------------------
-
-        writer.flush();
-
-        writer.close();
-
-        // ----------------------------------------------------------------------
-        // project.xml
-        // ----------------------------------------------------------------------
-
-        writer = new FileWriter( new File( destinationDirectory, "project.xml" ) );
-
-        w = new PrettyPrintXMLWriter( writer );
-
+    private void writeProjectFile( PrettyPrintXMLWriter w, MavenProject project )
+    {
-
-        writer.flush();
-
-        writer.close();
-
-        throws Exception
-        String pluginId = PluginDescriptor.getPluginIdFromArtifactId( project.getArtifactId() );
-
-        w.startElement( pluginId + ":" + goalName + "Bean" );
+        w.startElement( mojoDescriptor.getFullGoalName() + "Bean" );
-            
-            if( StringUtils.isEmpty( paramName ) )
+
+            if ( StringUtils.isEmpty( paramName ) )
-            
+
-        String id = mojoDescriptor.getId();
-
-        w.addAttribute( "name", id + ":" + mojoDescriptor.getGoal() );
+        w.addAttribute( "name", mojoDescriptor.getFullGoalName() );
-        w.startElement( id + ":" + mojoDescriptor.getGoal() + "Bean" );
+        w.startElement( mojoDescriptor.getFullGoalName() + "Bean" );
-            if ( expression.startsWith( "#" ) )
-            {
-                expression = "${" + expression.substring( 1 ) + "}";
-            }
-

MOV26 INS26 UPD40 INS40 INS31 INS31 INS83 INS39 INS42 MOV44 INS44 INS44 INS44 INS43 INS8 UPD83 UPD42 INS44 INS44 MOV21 MOV24 INS83 INS39 INS42 INS44 INS44 INS8 MOV21 MOV21 INS43 INS42 INS43 INS42 MOV43 INS42 INS42 INS60 INS60 INS54 INS21 INS54 MOV43 INS42 MOV43 INS42 INS43 INS42 INS43 INS42 MOV21 MOV21 MOV21 MOV21 MOV21 INS42 INS42 MOV43 INS59 MOV43 INS59 INS8 INS8 INS7 INS8 INS8 INS42 INS42 INS42 INS33 INS42 INS21 INS21 INS21 MOV21 INS21 INS42 INS33 MOV21 MOV21 INS21 MOV21 INS21 UPD42 UPD42 INS32 INS7 INS7 INS32 INS32 INS32 INS32 UPD42 INS32 MOV42 UPD42 MOV42 INS42 MOV14 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS43 INS42 INS42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL45 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL45 DEL32 DEL27 DEL42 DEL45 DEL42 DEL42 DEL45 DEL32 DEL42 DEL45 DEL42 DEL42 DEL34 DEL32 DEL45 DEL27 DEL7 DEL21 DEL8 DEL25