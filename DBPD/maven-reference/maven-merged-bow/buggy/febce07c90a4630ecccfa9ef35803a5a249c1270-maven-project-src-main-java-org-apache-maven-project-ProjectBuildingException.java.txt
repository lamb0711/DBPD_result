Adding more context information to existing exceptions, cleaning up construction in exceptions, and adjusting the inheritance hierarchy for exceptions to make them make a little more sense for error reporting. Also, adding improved (but not complete, yet) reporting for BuildFailureExceptions and ProjectBuildingExceptions, with some tests to make sure pertinent information is in the output.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@592859 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
-import java.io.IOException;
-import java.net.URI;
-import java.net.URISyntaxException;
-
+import java.io.File;
+import java.io.IOException;
+
-    private URI pomUri;
+    private File pomFile;
-        this( projectId, message, (URI) null );
+        super( message );
+        this.projectId = projectId;
-     * @deprecated use {@link File} or {@link URI} constructors for pomLocation
+     * @deprecated use {@link File} constructor for pomLocation
-        this( projectId, message, pomLocation, (Throwable) null );
+        super( message );
+        this.projectId = projectId;
+        pomFile = new File( pomLocation );
-     * @deprecated use {@link File} or {@link URI} constructors for pomLocation
-     * @param projectId
-     * @param message
-     * @param pomLocation absolute path of the pom file
-     * @param cause
-     */
-    private ProjectBuildingException( String projectId, String message, String pomLocation, Throwable cause )
-    {
-        this( projectId, message, new File( pomLocation ), cause );
-    }
-
-    /**
-     * 
+     *
-        this( projectId, message, pomFile, (Throwable) null );
-    }
-
-    /**
-     * 
-     * @param projectId
-     * @param message
-     * @param cause
-     */
-    private ProjectBuildingException( String projectId, String message, Throwable cause )
-    {
-        this( projectId, message, (URI) null, cause );
-    }
-
-    public ProjectBuildingException( String projectId, String message, URISyntaxException cause )
-    {
-        this( projectId, message, (Throwable) cause );
+        super( message );
+        this.projectId = projectId;
+        this.pomFile = pomFile;
-    public ProjectBuildingException( String projectId, String message, File pomFile, Throwable cause )
+    protected ProjectBuildingException( String projectId, String message, File pomFile, Throwable cause )
-        this( projectId, message, pomFile.toURI(), cause );
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomFile = pomFile;
-     * Equivalent to new ProjectBuildingException(projectId, message, pomUri, null)
-     * 
-     * @see #ProjectBuildingException(String, String, URI, Throwable)
-     */
-    public ProjectBuildingException( String projectId, String message, URI pomUri )
-    {
-        this( projectId, message, pomUri, (Throwable) null );
-    }
-
-    /**
-     * @deprecated use {@link File} or {@link URI} constructors for pomLocation
+     * @deprecated use {@link File} constructor for pomLocation
-        this( projectId, message, new File( pomLocation ), cause );
+        super( message, cause );
+        this.projectId = projectId;
+        pomFile = new File( pomLocation );
-    public ProjectBuildingException( String projectId, String message, File pomLocation,
+    public ProjectBuildingException( String projectId, String message, File pomFile,
-        this( projectId, message, pomLocation, (Throwable) cause );
-    }
-
-    /**
-     * @param projectId
-     * @param message
-     * @param pomUri location of the pom
-     * @param cause
-     */
-    private ProjectBuildingException( String projectId, String message, URI pomUri, Throwable cause )
-    {
-        this.pomUri = pomUri;
+        this.pomFile = pomFile;
-     * @deprecated use {@link File} or {@link URI} constructors for pomLocation
+     * @deprecated use {@link File} constructor for pomLocation
-        this( projectId, message, new File( pomLocation ), cause );
+        super( message, cause );
+        this.projectId = projectId;
+        pomFile = new File( pomLocation );
-    public ProjectBuildingException( String projectId, String message, URI pomLocation, IOException cause )
+    public ProjectBuildingException( String projectId, String message, File pomFile, IOException cause )
-        this( projectId, message, pomLocation, (Throwable) cause );
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomFile = pomFile;
+    }
+
+    // for super-POM building.
+    public ProjectBuildingException( String projectId, String message, IOException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
-     * @deprecated use {@link File} or {@link URI} constructors for pomLocation
+     * @deprecated use {@link File} constructor for pomLocation
-        this( projectId, message, new File( pomLocation ), cause );
+        super( message, cause );
+        this.projectId = projectId;
+        pomFile = new File( pomLocation );
-    public ProjectBuildingException( String projectId, String message, URI pomLocation, XmlPullParserException cause )
+    public ProjectBuildingException( String projectId, String message, File pomFile, XmlPullParserException cause )
-        this( message, projectId, pomLocation, (Throwable) cause );
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomFile = pomFile;
-        this( message, projectId, (URI) null, cause );
+        super( message, cause );
+        this.projectId = projectId;
-        this( projectId, message, (Throwable) cause );
+        super( message, cause );
+        this.projectId = projectId;
-        this( projectId, message, (Throwable) cause );
+        super( message, cause );
+        this.projectId = projectId;
+    }
+
+    public ProjectBuildingException( String projectId, String message, File pomFile, InvalidRepositoryException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomFile = pomFile;
-        this( projectId, message, (Throwable) cause );
+        super( message, cause );
+        this.projectId = projectId;
-    public ProjectBuildingException( String projectId, String message, File pomLocation,
+    public ProjectBuildingException( String projectId, String message, File pomFile,
-        this( projectId, message, pomLocation, (Throwable) cause );
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomFile = pomFile;
-     * @deprecated use {@link File} or {@link URI} constructors for pomLocation
+     * @deprecated use {@link File} constructor for pomLocation
-        this( projectId, message, pomLocation, (Throwable) cause );
+        super( message, cause );
+        this.projectId = projectId;
+        pomFile = new File( pomLocation );
-    public ProjectBuildingException( String projectId, String message, File pomLocation, ArtifactNotFoundException cause )
+    public ProjectBuildingException( String projectId, String message, File pomFile, ArtifactNotFoundException cause )
-        this( projectId, message, pomLocation, (Throwable) cause );
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomFile = pomFile;
-     * @deprecated use {@link File} or {@link URI} constructors for pomLocation
+     * @deprecated use {@link File} constructor for pomLocation
-        this( projectId, message, pomLocation, (Throwable) cause );
+        super( message, cause );
+        this.projectId = projectId;
+        pomFile = new File( pomLocation );
-    public ProjectBuildingException( String projectId, String message, File pomLocation,
+    public ProjectBuildingException( String projectId, String message, File pomFile,
-        this( projectId, message, pomLocation, (Throwable) cause );
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomFile = pomFile;
-     * @deprecated use {@link File} or {@link URI} constructors for pomLocation
+     * @deprecated use {@link File} constructor for pomLocation
-        this( projectId, message, pomLocation, (Throwable) cause );
+        super( message, cause );
+        this.projectId = projectId;
+        pomFile = new File( pomLocation );
-    public ProjectBuildingException( String projectId, String message, File pomLocation,
+    public ProjectBuildingException( String projectId, String message, File pomFile,
-        this( projectId, message, pomLocation, (Throwable) cause );
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomFile = pomFile;
-     * @deprecated use {@link File} or {@link URI} constructors for pomLocation
+     * @deprecated use {@link File} constructor for pomLocation
-        this( projectId, message, pomLocation, (Throwable) cause );
+        super( message, cause );
+        this.projectId = projectId;
+        pomFile = new File( pomLocation );
-    protected ProjectBuildingException( String projectId, String message, File pomLocation,
+    protected ProjectBuildingException( String projectId, String message, File pomFile,
-        this( projectId, message, pomLocation, (Throwable) cause );
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomFile = pomFile;
-     * @deprecated use {@link File} or {@link URI} constructors for pomLocation
+     * @deprecated use {@link File} constructor for pomLocation
-        this( projectId, message, pomLocation, (Throwable) cause );
+        super( message, cause );
+        this.projectId = projectId;
+        pomFile = new File ( pomLocation );
-    public URI getPomUri()
+    public File getPomFile()
-        return pomUri;
+        return pomFile;
-     * @deprecated use {@link #getPomUri()}
+     * @deprecated use {@link #getPomFile()}
-        if ( getPomUri() != null )
+        if ( getPomFile() != null )
-            if ( "file".equals( getPomUri().getScheme() ) )
-            {
-                return new File( getPomUri() ).getAbsolutePath();
-            }
-            return getPomUri().toString();
+            return getPomFile().getAbsolutePath();
-            + ( ( getPomUri() == null ? "" : " at " + getPomLocation() ) );
+            + ( ( getPomFile() == null ? "" : " at " + getPomFile().getAbsolutePath() ) );

MOV26 MOV26 MOV31 MOV31 MOV31 INS31 INS31 MOV43 UPD83 UPD83 MOV44 MOV44 MOV44 INS8 UPD83 MOV83 MOV42 MOV44 MOV44 MOV44 MOV44 INS8 MOV29 MOV83 MOV42 MOV44 MOV44 MOV44 MOV44 INS8 MOV44 MOV44 MOV44 INS8 MOV44 MOV44 UPD83 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 INS44 INS44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 INS8 MOV44 MOV44 MOV43 UPD42 UPD42 INS46 INS21 INS46 INS21 INS21 INS46 INS21 INS21 INS46 INS21 INS21 INS46 INS21 INS21 UPD43 UPD42 INS46 INS21 INS21 INS46 INS21 INS21 UPD43 UPD42 INS46 INS21 INS21 UPD43 UPD42 INS46 INS21 INS65 UPD43 UPD43 UPD42 INS46 INS21 INS21 INS46 INS21 INS46 INS21 INS46 INS21 INS43 INS42 INS43 INS42 INS46 INS21 INS21 INS46 INS21 UPD43 UPD42 INS46 INS21 INS21 UPD43 INS46 INS21 INS21 UPD42 INS46 INS21 INS21 INS46 INS21 INS21 UPD42 INS46 INS21 INS21 INS46 INS21 INS21 UPD42 INS46 INS21 INS21 INS46 INS21 INS21 UPD42 INS46 INS21 INS21 INS46 INS21 INS21 INS42 INS7 UPD66 INS42 INS7 INS7 INS42 INS7 INS7 INS42 INS42 INS7 INS7 UPD66 INS42 INS42 INS7 INS7 UPD42 INS42 INS42 INS7 INS7 UPD66 INS42 INS42 INS7 INS7 UPD42 INS42 INS42 INS7 INS7 UPD42 INS42 INS42 INS7 INS66 MOV65 UPD66 MOV66 UPD42 UPD42 INS42 INS42 INS7 INS7 INS42 INS42 INS7 INS42 INS42 INS7 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS7 INS7 INS42 INS42 INS7 UPD42 INS42 INS42 INS7 INS7 UPD66 UPD42 INS42 INS42 INS7 INS7 INS42 INS42 INS7 INS7 MOV65 UPD66 INS42 INS42 INS7 INS7 INS42 INS42 INS7 INS7 MOV65 UPD66 INS42 INS42 INS7 INS7 INS42 INS42 INS7 INS7 UPD66 INS42 INS42 INS7 INS7 INS42 INS42 INS7 INS7 UPD66 INS42 INS42 INS7 INS7 UPD42 MOV8 INS22 INS42 INS22 INS42 INS42 MOV14 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS42 INS14 INS22 INS42 INS22 INS42 INS22 INS42 INS42 MOV14 INS22 INS42 INS22 INS42 INS22 INS42 UPD42 MOV42 INS42 MOV14 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS42 MOV14 INS22 INS42 INS22 INS42 INS22 INS42 INS42 INS14 INS22 INS42 INS22 INS42 INS22 INS42 INS42 INS14 INS22 INS42 INS22 INS42 INS22 INS42 INS42 INS14 INS22 INS42 INS22 INS42 INS22 INS42 INS42 INS14 INS52 INS42 INS52 INS42 INS43 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 MOV43 MOV42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS43 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS43 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS43 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS43 INS42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 INS32 UPD42 INS32 INS42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL42 DEL43 DEL33 DEL11 DEL17 DEL66 DEL42 DEL65 DEL42 DEL42 DEL42 DEL43 DEL33 DEL11 DEL17 DEL42 DEL42 DEL42 DEL42 DEL43 DEL33 DEL11 DEL17 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL29 DEL42 DEL42 DEL42 DEL43 DEL33 DEL11 DEL42 DEL17 DEL8 DEL31 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL17 DEL8 DEL31 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL17 DEL66 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL66 DEL65 DEL42 DEL65 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL17 DEL8 DEL66 DEL42 DEL65 DEL66 DEL65 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL43 DEL33 DEL11 DEL17 DEL8 DEL31 DEL42 DEL42 DEL42 DEL17 DEL8 DEL31 DEL83 DEL42 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL17 DEL8 DEL31 DEL66 DEL66 DEL42 DEL65 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL17 DEL8 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL17 DEL42 DEL65 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL17 DEL42 DEL42 DEL42 DEL43 DEL33 DEL11 DEL42 DEL17 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL17 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL17 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL17 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL17 DEL66 DEL66 DEL42 DEL65 DEL66 DEL65 DEL29 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL17 DEL66 DEL42 DEL65 DEL42 DEL42 DEL42 DEL17 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL17 DEL66 DEL42 DEL65 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL17 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL17 DEL42 DEL65 DEL66 DEL42 DEL65 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL17 DEL8 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL17 DEL66 DEL42 DEL65 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL17 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL17 DEL66 DEL42 DEL65 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL17 DEL42 DEL43 DEL32 DEL14 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL25 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL32