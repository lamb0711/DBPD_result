o i can now in a simple way get the lifecycle plan for a particular task
o the tests need to be simplified, possibly use the jxpath technique to make the test more concise
o the API still needs some work, and we still need to be able to adapt the lifecycle in context -- my particular use case is running inside eclipse and essentially disabling all but what is required to run inside eclipse. we don't need to compile, test or package for example 


git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@757922 13f79535-47bb-0310-9956-ffa450edef68

+    
+    private void executeGoal( String task, MavenSession session, MavenProject project )
+        throws LifecycleExecutionException, BuildFailureException
+    {
+        List<MojoDescriptor> lifecyclePlan = calculateLifecyclePlan( task, session );        
+        
+        for( MojoDescriptor md : lifecyclePlan )
+        {
+            System.out.println( md.getFullGoalName() );
+        }        
+        
+        /*
+        for ( MojoExecution mojoExecution : goals )
+         {
+             MojoDescriptor mojoDescriptor = mojoExecution.getMojoDescriptor();
+
+             try
+             {
+                 pluginManager.executeMojo( project, mojoExecution, session );
+             }
+             catch ( PluginManagerException e )
+             {
+                 throw new LifecycleExecutionException( "Internal error in the plugin manager executing goal '" + mojoDescriptor.getId() + "': " + e.getMessage(), e );
+             }
+             catch ( MojoFailureException e )
+             {
+                 throw new BuildFailureException( e.getMessage(), e );
+             }
+             catch ( PluginConfigurationException e )
+             {
+                 throw new LifecycleExecutionException( e.getMessage(), e );
+             }
+         }         
+          */
+
+    }
-    private void executeGoal( String task, MavenSession session, MavenProject project )
-        throws LifecycleExecutionException, BuildFailureException
+    public List<MojoDescriptor> calculateLifecyclePlan( String task, MavenSession session )
+        throws LifecycleExecutionException
+        // Extract the project from the session
+        MavenProject project = session.getCurrentProject();
+        
-                       
+               
+        List<MojoDescriptor> lifecyclePlan = new ArrayList<MojoDescriptor>(); 
+        
-                System.out.println( ">> " + mojo );
+                // These are bits that look like this:
+                //
+                // org.apache.maven.plugins:maven-remote-resources-plugin:1.0:process
+                //
+                lifecyclePlan.add( getMojoDescriptor( mojo, session, project ) );
-        }       
+        }  
-        /*
-       for ( MojoExecution mojoExecution : goals )
-        {
-            MojoDescriptor mojoDescriptor = mojoExecution.getMojoDescriptor();
-
-            try
-            {
-                pluginManager.executeMojo( project, mojoExecution, session );
-            }
-            catch ( PluginManagerException e )
-            {
-                throw new LifecycleExecutionException( "Internal error in the plugin manager executing goal '" + mojoDescriptor.getId() + "': " + e.getMessage(), e );
-            }
-            catch ( MojoFailureException e )
-            {
-                throw new BuildFailureException( e.getMessage(), e );
-            }
-            catch ( PluginConfigurationException e )
-            {
-                throw new LifecycleExecutionException( e.getMessage(), e );
-            }
-        }         
-         */
+        return lifecyclePlan;
+        

INS31 INS83 INS39 INS42 INS44 INS44 MOV44 INS43 MOV43 INS8 UPD83 INS74 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS70 INS43 INS43 INS60 INS60 INS41 INS42 INS42 INS74 INS59 INS44 INS42 INS8 INS42 INS42 INS43 INS59 INS74 INS59 INS42 INS43 INS43 INS42 INS32 INS43 INS42 INS21 INS42 INS42 INS32 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS74 INS40 INS42 INS32 INS43 INS43 INS42 INS42 INS42 INS42 UPD42 INS42 INS32 INS42 INS42 INS42 INS42 DEL39 DEL42 DEL40 DEL45 DEL42 DEL27