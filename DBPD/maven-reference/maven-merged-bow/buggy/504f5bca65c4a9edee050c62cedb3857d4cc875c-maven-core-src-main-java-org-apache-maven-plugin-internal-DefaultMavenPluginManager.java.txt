[MNG-4186] Provide an exact pointer to documentation specific to each known exception that can occur

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@827792 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.ByteArrayOutputStream;
+import java.io.PrintStream;
-import org.apache.maven.plugin.PluginManagerException;
-        throws PluginResolutionException, PluginManagerException
+        throws PluginResolutionException, PluginContainerException
-                                  List<String> imports )
-        throws PluginResolutionException, PluginManagerException
+                                    List<String> imports )
+        throws PluginResolutionException, PluginContainerException
-            throw new PluginManagerException( plugin, "Error in component graph of plugin " + plugin.getId() + ": "
-                + e.getMessage(), e );
+            throw new PluginContainerException( plugin, pluginRealm, "Error in component graph of plugin "
+                + plugin.getId() + ": " + e.getMessage(), e );
-            throw new PluginManagerException( plugin, "Error in component graph of plugin " + plugin.getId() + ": "
-                + e.getMessage(), e );
+            throw new PluginContainerException( plugin, pluginRealm, "Error in component graph of plugin "
+                + plugin.getId() + ": " + e.getMessage(), e );
-                    throw new PluginContainerException( mojoDescriptor, pluginRealm, "Unable to load the mojo '"
-                        + mojoDescriptor.getGoal() + "' in the plugin '" + pluginDescriptor.getId()
-                        + "'. A required class is missing: " + cause.getMessage(), e );
+                    ByteArrayOutputStream os = new ByteArrayOutputStream( 1024 );
+                    PrintStream ps = new PrintStream( os );
+                    ps.println( "Unable to load the mojo '" + mojoDescriptor.getGoal() + "' in the plugin '"
+                        + pluginDescriptor.getId() + "'. A required class is missing: " + cause.getMessage() );
+                    pluginRealm.display( ps );
+
+                    throw new PluginContainerException( mojoDescriptor, pluginRealm, os.toString(), cause );
+                }
+                else if ( cause instanceof LinkageError )
+                {
+                    ByteArrayOutputStream os = new ByteArrayOutputStream( 1024 );
+                    PrintStream ps = new PrintStream( os );
+                    ps.println( "Unable to load the mojo '" + mojoDescriptor.getGoal() + "' in the plugin '"
+                        + pluginDescriptor.getId() + "' due to an API incompatibility: " + e.getClass().getName()
+                        + ": " + cause.getMessage() );
+                    pluginRealm.display( ps );
+
+                    throw new PluginContainerException( mojoDescriptor, pluginRealm, os.toString(), cause );
-                throw new PluginContainerException( mojoDescriptor, pluginRealm, "Unable to find the mojo '"
-                    + mojoDescriptor.getGoal() + "' (or one of its required components) in the plugin '"
+                throw new PluginContainerException( mojoDescriptor, pluginRealm, "Unable to load the mojo '"
+                    + mojoDescriptor.getGoal() + "' (or one of its required components) from the plugin '"
-            throw new PluginConfigurationException( mojoDescriptor.getPluginDescriptor(),
-                                                    "A required class was missing during configuration of mojo "
-                                                        + mojoDescriptor.getId() + ": " + e.getMessage(), e );
+            ByteArrayOutputStream os = new ByteArrayOutputStream( 1024 );
+            PrintStream ps = new PrintStream( os );
+            ps.println( "A required class was missing during configuration of mojo " + mojoDescriptor.getId() + ": "
+                + e.getMessage() );
+            pluginRealm.display( ps );
+
+            throw new PluginConfigurationException( mojoDescriptor.getPluginDescriptor(), os.toString(), e );
-            if ( logger.isFatalErrorEnabled() )
-            {
-                logger.fatalError( configurator.getClass().getName()
-                    + "#configureComponent(...) caused a linkage error (" + e.getClass().getName()
-                    + ") and may be out-of-date. Check the realms:" );
+            ByteArrayOutputStream os = new ByteArrayOutputStream( 1024 );
+            PrintStream ps = new PrintStream( os );
+            ps.println( "An API incompatibility was encountered during configuration of mojo " + mojoDescriptor.getId()
+                + ": " + e.getClass().getName() + ": " + e.getMessage() );
+            pluginRealm.display( ps );
-                StringBuilder sb = new StringBuilder();
-                sb.append( "Plugin realm = " + pluginRealm.getId() ).append( '\n' );
-                for ( int i = 0; i < pluginRealm.getURLs().length; i++ )
-                {
-                    sb.append( "urls[" + i + "] = " + pluginRealm.getURLs()[i] );
-                    if ( i != ( pluginRealm.getURLs().length - 1 ) )
-                    {
-                        sb.append( '\n' );
-                    }
-                }
-                logger.fatalError( sb.toString() );
-
-                ClassRealm containerRealm = container.getContainerRealm();
-                sb = new StringBuilder();
-                sb.append( "Container realm = " + containerRealm.getId() ).append( '\n' );
-                for ( int i = 0; i < containerRealm.getURLs().length; i++ )
-                {
-                    sb.append( "urls[" + i + "] = " + containerRealm.getURLs()[i] );
-                    if ( i != ( containerRealm.getURLs().length - 1 ) )
-                    {
-                        sb.append( '\n' );
-                    }
-                }
-                logger.fatalError( sb.toString() );
-            }
-
-            throw new PluginConfigurationException( mojoDescriptor.getPluginDescriptor(), e.getClass().getName() + ": "
-                + e.getMessage(), new ComponentConfigurationException( e ) );
+            throw new PluginConfigurationException( mojoDescriptor.getPluginDescriptor(), os.toString(), e );

MOV26 INS26 UPD40 INS40 UPD43 UPD43 UPD42 UPD42 INS60 INS60 INS21 INS21 MOV60 MOV60 MOV21 MOV21 INS53 INS43 INS59 INS43 INS59 INS32 INS32 UPD43 UPD43 INS32 INS14 UPD43 INS42 UPD43 INS42 INS25 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 MOV27 INS42 INS42 INS42 INS32 UPD42 UPD42 UPD42 UPD42 INS14 UPD42 MOV42 UPD42 MOV42 MOV27 MOV32 UPD42 MOV42 UPD42 MOV42 INS42 MOV43 MOV32 INS32 MOV42 UPD42 UPD42 MOV27 INS8 INS25 INS43 INS34 INS43 INS42 INS42 INS42 UPD43 INS34 INS43 INS42 INS45 INS32 INS45 UPD42 MOV42 MOV42 INS60 INS60 INS21 INS21 INS53 INS62 MOV8 INS43 INS42 INS42 UPD42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS32 INS32 INS14 INS42 INS43 INS60 INS60 INS21 INS21 INS42 UPD45 INS32 UPD45 INS32 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 MOV27 INS42 INS42 INS42 MOV43 INS42 INS42 INS32 INS42 INS42 INS43 INS59 INS43 INS59 INS32 INS32 INS42 INS42 INS42 INS42 INS43 INS34 INS43 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS27 INS42 INS42 INS42 INS32 UPD42 INS42 INS42 INS43 INS34 INS43 INS42 INS45 MOV32 INS45 MOV32 INS45 MOV32 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL32 DEL27 DEL32 DEL42 DEL13 DEL32 DEL42 DEL42 DEL45 DEL42 DEL45 DEL32 DEL42 DEL2 DEL27 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL45 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL42 DEL13 DEL32 DEL21 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL42 DEL22 DEL27 DEL42 DEL37 DEL42 DEL42 DEL45 DEL42 DEL45 DEL42 DEL42 DEL32 DEL42 DEL2 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL42 DEL22 DEL34 DEL27 DEL36 DEL27 DEL42 DEL42 DEL13 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL42 DEL22 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL32 DEL42 DEL22 DEL34 DEL27 DEL36 DEL27 DEL42 DEL42 DEL13 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL14 DEL14 DEL53