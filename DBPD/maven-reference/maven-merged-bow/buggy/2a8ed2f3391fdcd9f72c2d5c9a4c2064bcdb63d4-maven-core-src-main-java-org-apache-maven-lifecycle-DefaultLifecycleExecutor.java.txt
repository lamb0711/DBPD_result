PR: MNG-154
Define the lifecycle according to packaging.
Some more work on the structure of this is required.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@189871 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.handler.ArtifactHandler;
-import org.apache.maven.artifact.handler.manager.ArtifactHandlerManager;
-import org.apache.maven.artifact.handler.manager.ArtifactHandlerNotFoundException;
+import org.apache.maven.lifecycle.mapping.LifecycleMapping;
+import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
-    private ArtifactHandlerManager artifactHandlerManager;
-
+    private Map defaultPhases;
+
-        catch ( ArtifactHandlerNotFoundException e )
-        {
-            response.setException( e );
-        }
-        throws ArtifactHandlerNotFoundException, LifecycleExecutionException, PluginNotFoundException,
-        MojoExecutionException, ArtifactResolutionException
+        throws LifecycleExecutionException, PluginNotFoundException, MojoExecutionException,
+        ArtifactResolutionException
-            Phase p = (Phase) i.next();
+            String p = (String) i.next();
-            phaseMap.put( p.getId(), new Phase( p ) );
+            phaseMap.put( p, new ArrayList() );
-        ArtifactHandler artifactHandler = artifactHandlerManager.getArtifactHandler( project.getPackaging() );
-
-        if ( artifactHandler != null )
+        Map mappings;
+        try
-            if ( artifactHandler.packageGoal() != null )
+            LifecycleMapping m = (LifecycleMapping) session.lookup( LifecycleMapping.ROLE, project.getPackaging() );
+            mappings = m.getPhases();
+        }
+        catch ( ComponentLookupException e )
+        {
+            getLogger().error( "No lifecycle mapping for type '" + project.getPackaging() + "': using defaults" );
+            mappings = defaultPhases;
+        }
+
+        for ( Iterator i = mappings.keySet().iterator(); i.hasNext(); )
+        {
+            String phase = (String) i.next();
+            String task = (String) mappings.get( phase );
+            MojoDescriptor mojoDescriptor = configureMojo( task, session, phaseMap );
+            List goals = (List) phaseMap.get( phase );
+            if ( !goals.contains( mojoDescriptor.getId() ) )
-                // TODO: need to inject plugin configuration here
-                configureMojo( artifactHandler.packageGoal(), session, phaseMap );
-            }
-
-            if ( artifactHandler.additionalPlugin() != null )
-            {
-                String additionalPluginGroupId = PluginDescriptor.getDefaultPluginGroupId();
-
-                String additionalPluginArtifactId = PluginDescriptor.getDefaultPluginArtifactId(
-                    artifactHandler.additionalPlugin() );
-
-                injectHandlerPluginConfiguration( project, additionalPluginGroupId, additionalPluginArtifactId, null );
+                goals.add( mojoDescriptor.getId() );
-                Phase phase = (Phase) phaseMap.get( mojoDescriptor.getPhase() );
+                List goals = (List) phaseMap.get( mojoDescriptor.getPhase() );
-                if ( phase == null )
+                if ( goals == null )
-                phase.getGoals().add( mojoDescriptor.getId() );
+                if ( !goals.contains( mojoDescriptor.getId() ) )
+                {
+                    goals.add( mojoDescriptor.getId() );
+                }
-            int index = phases.indexOf( phaseMap.get( task ) );
+            int index = phases.indexOf( task );
-                // TODO: phases should just be strings...
-                Phase p = (Phase) phases.get( j );
+                String p = (String) phases.get( j );
-                p = (Phase) phaseMap.get( p.getId() );
+                List phaseGoals = (List) phaseMap.get( p );
-                if ( p.getGoals() != null )
+                if ( phaseGoals != null )
-                    for ( Iterator k = p.getGoals().iterator(); k.hasNext(); )
+                    for ( Iterator k = phaseGoals.iterator(); k.hasNext(); )
-                pluginDescriptor =
-                    pluginManager.verifyPlugin( groupId, artifactId, version, session.getProject(),
-                                                session.getLocalRepository() );
+                pluginDescriptor = pluginManager.verifyPlugin( groupId, artifactId, version, session.getProject(),
+                                                               session.getLocalRepository() );

MOV26 MOV26 MOV23 UPD40 UPD40 UPD43 UPD42 UPD42 INS60 INS54 INS24 INS43 INS59 INS8 INS12 INS58 INS32 INS8 INS42 INS42 MOV60 INS21 INS44 INS8 INS43 INS59 INS42 INS42 INS60 MOV60 MOV60 INS60 INS25 UPD43 UPD43 INS7 INS43 INS42 INS21 INS21 INS42 INS42 INS32 MOV43 INS59 INS43 INS43 INS43 INS59 INS38 INS8 UPD42 MOV42 UPD42 UPD42 INS11 INS42 INS32 INS42 INS32 INS7 INS32 INS42 INS42 INS11 INS42 UPD42 INS11 INS42 UPD42 INS42 INS42 INS11 INS32 MOV21 INS25 INS60 UPD43 UPD43 INS43 MOV32 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS27 INS42 INS42 UPD42 MOV42 UPD42 MOV42 MOV43 INS32 INS43 INS32 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 INS43 INS32 INS42 INS42 INS32 UPD43 INS38 INS8 MOV42 UPD43 INS43 INS59 UPD42 UPD42 INS42 UPD42 UPD42 INS40 UPD42 MOV42 INS45 INS32 INS45 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS32 UPD42 UPD42 UPD42 MOV32 MOV21 UPD42 INS42 INS42 INS11 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD43 UPD42 MOV42 UPD42 INS32 UPD43 UPD43 MOV43 MOV32 UPD42 INS42 INS42 INS32 UPD42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 DEL40 DEL26 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL42 DEL43 DEL42 DEL32 DEL42 DEL32 DEL32 DEL33 DEL42 DEL33 DEL27 DEL32 DEL33 DEL27 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL32 DEL33 DEL27 DEL8 DEL25 DEL8 DEL25 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL11 DEL7 DEL21 DEL42 DEL42 DEL32 DEL42 DEL32