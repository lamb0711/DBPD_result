o get rid of the reactor manager to make way for a real reactor that can be a local repository implementation which will prevent the pollution in the metadata source for dealing with projects that are in the current build
o clean up the project sorter
o push the information that was in the reactor manager into the session


git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@772039 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.execution.ReactorManager;
-        // TODO: This is dangerous, particularly when it's just a collection of loose-leaf projects being built
-        // within the same reactor (using an inclusion pattern to gather them up)...
-        MavenProject rootProject = session.getReactorManager().getTopLevelProject();
+        MavenProject rootProject = session.getTopLevelProject();
-            if ( !session.getReactorManager().isBlackListed( currentProject ) )
+            logger.info( "Building " + currentProject.getName() );
+
+            long buildStartTime = System.currentTimeMillis();
+
+            try
-                logger.info( "Building " + currentProject.getName() );
+                session.setCurrentProject( currentProject );
-                long buildStartTime = System.currentTimeMillis();
-
-                try
+                for ( String goal : goals )
-                    session.setCurrentProject( currentProject );
-
-                    for ( String goal : goals )
-                    {
-                        String target = currentProject.getId() + " ( " + goal + " )";
-                        executeGoalAndHandleFailures( goal, session, currentProject, buildStartTime, target );
-                    }
+                    String target = currentProject.getId() + " ( " + goal + " )";
+                    executeGoalAndHandleFailures( goal, session, currentProject, buildStartTime, target );
-                finally
-                {
-                    session.setCurrentProject( null );
-                }
-
-                session.getReactorManager().registerBuildSuccess( currentProject, System.currentTimeMillis() - buildStartTime );
+            }
+            finally
+            {
+                session.setCurrentProject( null );
-            if ( handleExecutionFailure( session, project, e, task, buildStartTime ) )
-            {
-                throw e;
-            }
+            //TODO: Look at the reactor manager failure behavior
+            throw e;
-
-    private boolean handleExecutionFailure( MavenSession session, MavenProject project, Exception e, String task, long buildStartTime )
-    {
-        //TODO: we shouldn't be registering build failures with the reactor manager, it should be in the session.
-        ReactorManager rm = session.getReactorManager();
-        
-        rm.registerBuildFailure( project, e, task, System.currentTimeMillis() - buildStartTime );
-
-        if ( ReactorManager.FAIL_FAST.equals( rm.getFailureBehavior() ) )
-        {
-            return true;
-        }
-        else if ( ReactorManager.FAIL_AT_END.equals( rm.getFailureBehavior() ) )
-        {
-            rm.blackList( project );
-        }
-        // if NEVER, don't blacklist
-        return false;
-    }

MOV8 INS60 MOV60 MOV25 MOV25 INS70 MOV43 INS59 MOV44 MOV32 MOV8 INS42 INS32 MOV8 MOV42 UPD42 MOV42 DEL40 DEL26 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL27 DEL32 DEL21 DEL42 DEL32 DEL42 DEL32 DEL38 DEL25 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL70 DEL8 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL25 DEL8 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL27 DEL32 DEL21 DEL40 DEL42 DEL42 DEL42 DEL32 DEL32 DEL9 DEL41 DEL8 DEL40 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL25 DEL9 DEL41 DEL8 DEL31