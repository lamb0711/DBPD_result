MNG-5805: Custom packaging types: configuring DefaultLifecycleMapping mojo executions

Signed-off-by: Jason van Zyl <jason@tesla.io>

+import org.apache.maven.lifecycle.mapping.LifecycleMojo;
+import org.apache.maven.lifecycle.mapping.LifecyclePhase;
-            Map<String, String> phaseToGoalMapping = null;
+            Map<String, LifecyclePhase> phaseToGoalMapping = null;
-                // These are of the form:
-                //
-                // compile -> org.apache.maven.plugins:maven-compiler-plugin:compile[,gid:aid:goal,...]
-                //
-                for ( Map.Entry<String, String> goalsForLifecyclePhase : phaseToGoalMapping.entrySet() )
+                for ( Map.Entry<String, LifecyclePhase> goalsForLifecyclePhase : phaseToGoalMapping.entrySet() )
-                    String goals = goalsForLifecyclePhase.getValue();
+                    LifecyclePhase goals = goalsForLifecyclePhase.getValue();
-    private void parseLifecyclePhaseDefinitions( Map<Plugin, Plugin> plugins, String phase, String goals )
+    private void parseLifecyclePhaseDefinitions( Map<Plugin, Plugin> plugins, String phase, LifecyclePhase goals )
-        String[] mojos = StringUtils.split( goals, "," );
-
-        for ( int i = 0; i < mojos.length; i++ )
+        List<LifecycleMojo> mojos = goals.getMojos();
+        if ( mojos != null )
-            GoalSpec gs = parseGoalSpec( mojos[i].trim() );
-
-            if ( gs == null )
+            
+            for ( int i = 0; i < mojos.size(); i++ )
-                logger.warn( "Ignored invalid goal specification '" + mojos[i] + "' from lifecycle mapping for phase "
-                    + phase );
-                continue;
-            }
-
-            Plugin plugin = new Plugin();
-            plugin.setGroupId( gs.groupId );
-            plugin.setArtifactId( gs.artifactId );
-            plugin.setVersion( gs.version );
-
-            Plugin existing = plugins.get( plugin );
-            if ( existing != null )
-            {
-                if ( existing.getVersion() == null )
+                LifecycleMojo mojo = mojos.get( i );
+                
+                GoalSpec gs = parseGoalSpec( mojo.getGoal() );
+    
+                if ( gs == null )
-                    existing.setVersion( plugin.getVersion() );
+                    logger.warn( "Ignored invalid goal specification '" + mojo.getGoal()
+                            + "' from lifecycle mapping for phase " + phase );
+                    continue;
-                plugin = existing;
+    
+                Plugin plugin = new Plugin();
+                plugin.setGroupId( gs.groupId );
+                plugin.setArtifactId( gs.artifactId );
+                plugin.setVersion( gs.version );
+    
+                Plugin existing = plugins.get( plugin );
+                if ( existing != null )
+                {
+                    if ( existing.getVersion() == null )
+                    {
+                        existing.setVersion( plugin.getVersion() );
+                    }
+                    plugin = existing;
+                }
+                else
+                {
+                    plugins.put( plugin, plugin );
+                }
+    
+                PluginExecution execution = new PluginExecution();
+                execution.setId( getExecutionId( plugin, gs.goal ) );
+                execution.setPhase( phase );
+                execution.setPriority( i - mojos.size() );
+                execution.getGoals().add( gs.goal );
+                execution.setConfiguration( mojo.getConfiguration() );
+                
+                plugin.setDependencies( mojo.getDependencies() );
+                plugin.getExecutions().add( execution );
-            else
-            {
-                plugins.put( plugin, plugin );
-            }
-
-            PluginExecution execution = new PluginExecution();
-            execution.setId( getExecutionId( plugin, gs.goal ) );
-            execution.setPhase( phase );
-            execution.setPriority( i - mojos.length );
-            execution.getGoals().add( gs.goal );
-
-            plugin.getExecutions().add( execution );

INS26 INS26 INS40 INS40 INS8 UPD43 INS60 INS25 UPD42 INS74 INS59 INS27 MOV8 INS43 INS43 INS42 INS32 INS42 INS33 UPD74 INS42 INS42 INS42 INS42 UPD43 INS32 INS60 INS21 INS21 UPD42 INS42 INS42 INS43 INS59 INS32 INS32 UPD74 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 UPD43 UPD43 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL40 DEL42 DEL42 DEL2 DEL42 DEL42 DEL42 DEL2 DEL40