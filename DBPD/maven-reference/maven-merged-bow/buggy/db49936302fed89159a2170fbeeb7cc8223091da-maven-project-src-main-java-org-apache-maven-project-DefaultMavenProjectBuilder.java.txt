Separated out the interpolation from the build.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@761609 13f79535-47bb-0310-9956-ffa450edef68

+    	//Do inheritance
-     
-        MavenProject project = buildWithProfiles( domainModel, configuration, pomFile );
+
+		//Profiles
+        List<Profile> projectProfiles;
+        try
+        {
+        	projectProfiles = ProfileContext.getActiveProfilesFrom(configuration, domainModel.getModel(), container);
+        }
+        catch ( ProfileActivationException e )
+        {
+            throw new ProjectBuildingException( "", "Failed to activate pom profiles.");
+        }   
+        catch(IOException e)
+        {
+        	throw new ProjectBuildingException( "", "Failed to activate pom profiles.");	
+        }
+        
+        try
+        {
+            domainModel = ProcessorContext.mergeProfilesIntoModel( projectProfiles, domainModel );
+        }
+        catch ( IOException e )
+        {
+            throw new ProjectBuildingException("", "");
+        }  		
+		//Interpolation
+        MavenProject project = interpolateDomainModel( domainModel, configuration, pomFile );
+        project.setActiveProfiles( projectProfiles );
+        
+        if(configuration.getRemoteRepositories() == null)
+        {
+        	throw new IllegalArgumentException("configuration.getRemoteRepositories(): null");
+        }
-
-        project = buildWithProfiles( domainModel, configuration, artifact.getFile() );
+        List<Profile> projectProfiles;
+        try
+        {
+        	projectProfiles = ProfileContext.getActiveProfilesFrom(configuration, domainModel.getModel(), container);
+        }
+        catch ( ProfileActivationException e )
+        {
+            throw new ProjectBuildingException( "", "Failed to activate pom profiles.");
+        }   
+        catch(IOException e)
+        {
+        	throw new ProjectBuildingException( "", "Failed to activate pom profiles.");	
+        }
+        
+        try
+        {
+            domainModel = ProcessorContext.mergeProfilesIntoModel( projectProfiles, domainModel );
+        }
+        catch ( IOException e )
+        {
+            throw new ProjectBuildingException("", "");
+        }
+        project = interpolateDomainModel( domainModel, configuration, artifact.getFile() );
+        project.setActiveProfiles( projectProfiles );
+    	if(remoteRepositories == null)
+    	{
+    		throw new IllegalArgumentException("repositories: null");
+    	}
-
-    private MavenProject buildWithProfiles( PomClassicDomainModel domainModel, ProjectBuilderConfiguration config, File projectDescriptor )
+    
+    private MavenProject interpolateDomainModel( PomClassicDomainModel domainModel, ProjectBuilderConfiguration config, File projectDescriptor )
-		File parentDescriptor = domainModel.getParentFile();
-
-        List<Profile> projectProfiles;
-        try
-        {
-        	projectProfiles = ProfileContext.getActiveProfilesFrom(config, model, container);
-        }
-        catch ( ProfileActivationException e )
-        {
-            throw new ProjectBuildingException( projectId, "Failed to activate pom profiles.", projectDescriptor,
-                                                e );
-        }
-        }
-
-        try
-        {
-            PomClassicDomainModel dm = ProcessorContext.mergeProfilesIntoModel( projectProfiles, domainModel );
-            List<ModelProperty> mps = dm.getModelProperties();
-            ProcessorContext.interpolateModelProperties( mps, interpolatorProperties, dm );
-            if ( dm.getProjectDirectory() != null )
+        }      
+            try
-                mps = ProcessorContext.alignPaths( mps, dm.getProjectDirectory() );
-            }
-            dm = new PomClassicDomainModel( mps, false );
-            model = dm.getModel();
-        }
-        catch ( IOException e )
-        {
+            	List<ModelProperty> mps = domainModel.getModelProperties();
+            	ProcessorContext.interpolateModelProperties( mps, interpolatorProperties, domainModel );
+            	if ( domainModel.getProjectDirectory() != null )
+            	{
+            		mps = ProcessorContext.alignPaths( mps, domainModel.getProjectDirectory() );
+            	}
+            	File f = domainModel.getParentFile();
+            	domainModel = new PomClassicDomainModel( mps, false );
+            	domainModel.setParentFile(f);
+            	model = domainModel.getModel();
-            throw new ProjectBuildingException( projectId, "", projectDescriptor, e );
-        }   
+            }
+            catch ( IOException e )
+            {
+
+                throw new ProjectBuildingException(projectId, "", projectDescriptor, e);
+            }   
-            project.setParentFile( parentDescriptor );
+            project.setParentFile( domainModel.getParentFile() );
-        project.setActiveProfiles( projectProfiles );
-
-            			profileModels.add(ProcessorContext.mergeProfilesIntoModel( profileContext1.getActiveProfiles(), dm ));  
+            			profileModels.add(ProcessorContext.mergeProfilesIntoModel( profiles, dm ));  

UPD42 MOV60 INS54 INS54 INS21 INS25 INS60 INS54 INS54 MOV21 INS25 INS8 INS12 INS12 INS8 INS12 INS32 INS27 INS8 INS74 INS59 INS8 INS12 INS12 INS8 INS12 INS27 INS8 INS21 INS44 INS8 INS44 INS8 INS21 INS44 INS8 INS42 INS42 INS42 INS32 INS33 INS53 INS43 INS43 INS42 INS21 MOV44 INS8 INS44 INS8 INS21 INS44 INS8 INS42 INS33 INS53 MOV60 INS21 INS7 INS43 INS42 INS53 INS43 INS42 INS53 INS7 INS43 INS42 INS53 UPD42 INS42 INS42 INS14 INS42 INS42 INS7 INS53 INS43 INS42 INS53 INS7 INS43 INS42 INS53 UPD42 INS14 INS32 INS42 INS32 INS42 INS14 INS42 INS14 INS42 INS32 INS42 INS14 INS43 INS45 INS42 INS32 INS14 INS42 INS14 INS42 MOV32 INS42 INS14 INS43 INS45 UPD42 UPD42 UPD42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS43 INS45 INS45 INS43 INS45 INS45 INS42 INS42 INS42 INS42 INS43 INS45 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS45 INS45 INS43 INS45 INS45 MOV43 INS45 INS45 INS42 UPD42 UPD42 UPD42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 MOV42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL45 DEL42 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL32