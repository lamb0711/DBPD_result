Merge of sisbell-maven-2.1-profile branch. Removes use of project lineage from builder.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@693332 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.DefaultArtifact;
+import org.apache.maven.artifact.InvalidArtifactRTException;
+import org.apache.maven.artifact.metadata.ArtifactMetadata;
+import org.apache.maven.artifact.repository.ArtifactRepository;
+import org.apache.maven.artifact.versioning.VersionRange;
-import org.apache.maven.project.artifact.AttachedArtifact;
+import java.util.Collection;
+import java.util.Collections;
-    public void attachArtifact( MavenProject project, String artifactType, String artifactClassifier, File artifactFile )
+    public void attachArtifact( MavenProject project, String artifactType, String artifactClassifier,
+                                File artifactFile )
-        attachArtifact(project, artifact);
+        attachArtifact( project, artifact );
-        attachArtifact(project, artifact);
+        attachArtifact( project, artifact );
-        Artifact artifact = new AttachedArtifact( projectArtifact, projectArtifact.getType(), artifactClassifier, projectArtifact.getArtifactHandler() );
+        Artifact artifact = new AttachedArtifact( projectArtifact, projectArtifact.getType(), artifactClassifier,
+                                                  projectArtifact.getArtifactHandler() );
-        attachArtifact(project, artifact);
+        attachArtifact( project, artifact );
-    public void attachArtifact(MavenProject project, Artifact artifact)
+    public void attachArtifact( MavenProject project, Artifact artifact )
-        	project.addAttachedArtifact( artifact );
+            project.addAttachedArtifact( artifact );
-        catch (DuplicateArtifactAttachmentException dae)
+        catch ( DuplicateArtifactAttachmentException dae )
-        	getLogger().warn(dae.getMessage());
+            getLogger().warn( dae.getMessage() );
-        	// We can throw this because it's unchecked, and won't change the MavenProjectHelper API, which would break backward compat if it did.
-        	throw dae;
+            // We can throw this because it's unchecked, and won't change the MavenProjectHelper API, which would break backward compat if it did.
+            throw dae;
+    private static class AttachedArtifact
+        extends DefaultArtifact
+    {
+
+        private final Artifact parent;
+
+        public AttachedArtifact( Artifact parent, String type, String classifier, ArtifactHandler artifactHandler )
+        {
+            super( parent.getGroupId(), parent.getArtifactId(), parent.getVersionRange(), parent.getScope(), type,
+                   classifier, artifactHandler, parent.isOptional() );
+
+            setDependencyTrail( Collections.singletonList( parent.getId() ) );
+
+            this.parent = parent;
+
+            if ( getId().equals( parent.getId() ) )
+            {
+                throw new InvalidArtifactRTException( parent.getGroupId(), parent.getArtifactId(), parent.getVersion(),
+                                                      parent.getType(),
+                                                      "An attached artifact must have a different ID than its corresponding main artifact." );
+            }
+        }
+
+        public AttachedArtifact( Artifact parent, String type, ArtifactHandler artifactHandler )
+        {
+            this( parent, type, null, artifactHandler );
+        }
+
+        public void setArtifactId( String artifactId )
+        {
+            // ignore this. We should ALWAYS use the information from the parent artifact.
+        }
+
+        public List getAvailableVersions()
+        {
+            return parent.getAvailableVersions();
+        }
+
+        public void setAvailableVersions( List availableVersions )
+        {
+            // ignore this. We should ALWAYS use the information from the parent artifact.
+        }
+
+        public String getBaseVersion()
+        {
+            return parent.getBaseVersion();
+        }
+
+        public void setBaseVersion( String baseVersion )
+        {
+            // ignore this. We should ALWAYS use the information from the parent artifact.
+        }
+
+        public String getDownloadUrl()
+        {
+            return parent.getDownloadUrl();
+        }
+
+        public void setDownloadUrl( String downloadUrl )
+        {
+            // ignore this. We should ALWAYS use the information from the parent artifact.
+        }
+
+        public void setGroupId( String groupId )
+        {
+            // ignore this. We should ALWAYS use the information from the parent artifact.
+        }
+
+        public ArtifactRepository getRepository()
+        {
+            return parent.getRepository();
+        }
+
+        public void setRepository( ArtifactRepository repository )
+        {
+            // ignore this. We should ALWAYS use the information from the parent artifact.
+        }
+
+        public String getScope()
+        {
+            return parent.getScope();
+        }
+
+        public void setScope( String scope )
+        {
+            // ignore this. We should ALWAYS use the information from the parent artifact.
+        }
+
+        public String getVersion()
+        {
+            return parent.getVersion();
+        }
+
+        public void setVersion( String version )
+        {
+            // ignore this. We should ALWAYS use the information from the parent artifact.
+        }
+
+        public VersionRange getVersionRange()
+        {
+            return parent.getVersionRange();
+        }
+
+        public void setVersionRange( VersionRange range )
+        {
+            // ignore this. We should ALWAYS use the information from the parent artifact.
+        }
+
+        public boolean isRelease()
+        {
+            return parent.isRelease();
+        }
+
+        public void setRelease( boolean release )
+        {
+            // ignore this. We should ALWAYS use the information from the parent artifact.
+        }
+
+        public boolean isSnapshot()
+        {
+            return parent.isSnapshot();
+        }
+
+        public void addMetadata( ArtifactMetadata metadata )
+        {
+            // ignore. The parent artifact will handle metadata.
+            // we must fail silently here to avoid problems with the artifact transformers.
+        }
+
+        public Collection getMetadataList()
+        {
+            return Collections.EMPTY_LIST;
+        }
+
+    }
+

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 INS55 INS83 INS83 INS42 INS43 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS42 INS83 INS83 INS43 INS59 INS83 INS42 INS44 INS44 INS44 INS44 INS8 INS83 INS42 INS44 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS46 INS21 INS21 INS25 INS43 INS42 INS43 INS42 INS43 INS42 INS17 INS43 INS42 INS42 INS41 INS43 INS42 INS42 INS41 INS43 INS42 INS42 INS41 INS43 INS42 INS43 INS42 INS42 INS41 INS43 INS42 INS42 INS41 INS43 INS42 INS42 INS41 INS43 INS42 INS42 INS41 INS43 INS42 INS41 INS39 INS42 INS41 INS43 INS42 INS42 INS41 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS32 INS32 INS7 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS32 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS22 INS42 INS32 INS42 INS32 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS52 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS43 INS32 INS32 INS32 INS32 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42