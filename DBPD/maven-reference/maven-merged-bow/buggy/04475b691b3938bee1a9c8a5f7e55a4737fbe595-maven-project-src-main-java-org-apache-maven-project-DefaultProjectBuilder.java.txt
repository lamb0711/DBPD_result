Cleaned up rules. Removed mercury dependencies.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@747378 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.mercury.PomProcessor;
-import org.apache.maven.mercury.PomProcessorException;
-import org.apache.maven.mercury.MavenDomainModel;
-import org.apache.maven.mercury.MavenDomainModelFactory;
-import org.apache.maven.mercury.builder.api.MetadataReader;
-import org.apache.maven.mercury.builder.api.MetadataReaderException;
-import org.apache.maven.mercury.artifact.ArtifactBasicMetadata;
-import org.apache.maven.artifact.factory.ArtifactFactory;
-    implements ProjectBuilder, PomProcessor, LogEnabled
+    implements ProjectBuilder, LogEnabled
-    public List<ModelProperty> getRawPom(ArtifactBasicMetadata bmd, MetadataReader mdReader, Map system, Map user)
-            throws MetadataReaderException, PomProcessorException {
-        if ( bmd == null )
-        {
-            throw new IllegalArgumentException( "bmd: null" );
-        }
-
-        if ( mdReader == null )
-        {
-            throw new IllegalArgumentException( "mdReader: null" );
-        }
-
-        List<InterpolatorProperty> interpolatorProperties = new ArrayList<InterpolatorProperty>();
-        interpolatorProperties.add( new InterpolatorProperty( "${mavenVersion}", "3.0-SNAPSHOT",
-                                                              PomInterpolatorTag.EXECUTION_PROPERTIES.name() ) );
-
-        if ( system != null )
-        {
-            interpolatorProperties.addAll(
-                InterpolatorProperty.toInterpolatorProperties( system, PomInterpolatorTag.EXECUTION_PROPERTIES.name() ) );
-        }
-        if ( user != null )
-        {
-            interpolatorProperties.addAll(
-                InterpolatorProperty.toInterpolatorProperties( user, PomInterpolatorTag.USER_PROPERTIES.name() ) );
-        }
-
-       List<DomainModel> domainModels = new ArrayList<DomainModel>();
-        try
-        {
-            // MavenDomainModel superPom =
-            //     new MavenDomainModel(MavenDependencyProcessor.class.getResourceAsStream( "pom-4.0.0.xml" ));
-            // domainModels.add(superPom);
-
-            byte[] superBytes = mdReader.readMetadata( bmd );
-
-            if ( superBytes == null || superBytes.length < 1 )
-                throw new PomProcessorException( "cannot read metadata for " + bmd.getGAV() );
-
-            MavenDomainModel domainModel = new MavenDomainModel( superBytes );
-            domainModels.add( domainModel );
-
-            Collection<ModelContainer> activeProfiles = domainModel.getActiveProfileContainers( interpolatorProperties );
-
-            for ( ModelContainer mc : activeProfiles )
-            {
-                domainModels.add( new MavenDomainModel( transformProfiles( mc.getProperties() ) ) );
-            }
-
-            List<DomainModel> parentModels = getParentsOfDomainModel( domainModel, mdReader );
-
-            if( parentModels == null )
-                throw new PomProcessorException( "cannot read parent for " + bmd.getGAV() );
-
-            domainModels.addAll( parentModels );
-        }
-        catch ( IOException e )
-        {
-            throw new MetadataReaderException( "Failed to create domain model. Message = " + e.getMessage() );
-        }
-
-        PomTransformer transformer = new PomTransformer( new MavenDomainModelFactory() );
-        ModelTransformerContext ctx =
-            new ModelTransformerContext( PomTransformer.MODEL_CONTAINER_INFOS );
-
-        try
-        {
-            MavenDomainModel model =
-                ( (MavenDomainModel) ctx.transform( domainModels, transformer, transformer, null,
-                                                    interpolatorProperties, null ) );
-            return model.getModelProperties();
-        }
-        catch ( IOException e )
-        {
-            throw new MetadataReaderException( "Unable to transform model" );
-        }
-    }
-
-        return superDomainModel;
+        return ((PomClassicDomainModel) superDomainModel).createCopy();
-
-    private static List<DomainModel> getParentsOfDomainModel( MavenDomainModel domainModel, MetadataReader mdReader )
-        throws IOException, MetadataReaderException, PomProcessorException
-    {
-        List<DomainModel> domainModels = new ArrayList<DomainModel>();
-        if ( domainModel.hasParent() )
-        {
-            byte[] b = mdReader.readMetadata( domainModel.getParentMetadata() );
-
-            if ( b == null || b.length < 1 )
-                throw new PomProcessorException( "cannot read metadata for " + domainModel.getParentMetadata() );
-
-            MavenDomainModel parentDomainModel =
-                new MavenDomainModel( b );
-            domainModels.add( parentDomainModel );
-            domainModels.addAll( getParentsOfDomainModel( parentDomainModel, mdReader ) );
-        }
-        return domainModels;
-    }
-
-    private static List<ModelProperty> transformProfiles( List<ModelProperty> modelProperties )
-    {
-        List<ModelProperty> properties = new ArrayList<ModelProperty>();
-        for ( ModelProperty mp : modelProperties )
-        {
-            if ( mp.getUri().startsWith( ProjectUri.Profiles.Profile.xUri )
-                && !mp.getUri().equals( ProjectUri.Profiles.Profile.id )
-                && !mp.getUri().startsWith( ProjectUri.Profiles.Profile.Activation.xUri ) )
-            {
-                properties.add( new ModelProperty( mp.getUri().replace( ProjectUri.Profiles.Profile.xUri,
-                                                                        ProjectUri.xUri ), mp.getResolvedValue() ) );
-            }
-        }
-        return properties;
-    }

INS32 INS36 INS42 INS11 INS43 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL33 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL43 DEL45 DEL45 DEL40 DEL42 DEL32 DEL14 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL40 DEL42 DEL32 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL40 DEL42 DEL32 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL39 DEL85 DEL5 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL40 DEL34 DEL27 DEL27 DEL42 DEL43 DEL45 DEL42 DEL42 DEL32 DEL27 DEL14 DEL53 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL32 DEL14 DEL32 DEL21 DEL8 DEL70 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL45 DEL42 DEL42 DEL32 DEL27 DEL14 DEL53 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL42 DEL32 DEL27 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL14 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL40 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL33 DEL42 DEL33 DEL32 DEL11 DEL36 DEL59 DEL60 DEL42 DEL42 DEL32 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL31 DEL42 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL39 DEL85 DEL5 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL40 DEL34 DEL27 DEL27 DEL42 DEL43 DEL45 DEL42 DEL42 DEL32 DEL27 DEL14 DEL53 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL38 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL38 DEL27 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL40 DEL40 DEL32 DEL42 DEL42 DEL32 DEL14 DEL32 DEL21 DEL8 DEL25 DEL8 DEL70 DEL42 DEL41 DEL8 DEL31