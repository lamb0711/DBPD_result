o Refactored management injection to allow for proper extension loading

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@793578 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.HashMap;
-import org.apache.maven.model.Dependency;
-import org.apache.maven.model.DependencyManagement;
-import org.apache.maven.model.Exclusion;
- * Handles injection of plugin/dependency management into the model.
+ * Handles injection of plugin management into the model.
-@Component( role = ManagementInjector.class )
-public class DefaultManagementInjector
-    implements ManagementInjector
+@Component( role = PluginManagementInjector.class )
+public class DefaultPluginManagementInjector
+    implements PluginManagementInjector
-        merger.mergeManagedDependencies( model );
-        merger.mergeManagedBuildPlugins( model );
+        merger.mergeManagedBuildPlugins( model, false );
+    }
+
+    public void injectBasicManagement( Model model, ModelBuildingRequest request )
+    {
+        merger.mergeManagedBuildPlugins( model, true );
-        public void mergeManagedBuildPlugins( Model model )
+        public void mergeManagedBuildPlugins( Model model, boolean basic )
-                    mergePluginContainer_Plugins( build, pluginManagement, false, Collections.emptyMap() );
+                    mergePluginContainer_Plugins( build, pluginManagement, basic );
-        @Override
-        protected void mergePluginContainer_Plugins( PluginContainer target, PluginContainer source,
-                                                     boolean sourceDominant, Map<Object, Object> context )
+        private void mergePluginContainer_Plugins( PluginContainer target, PluginContainer source, boolean basic )
+                Map<Object, Object> context = Collections.emptyMap();
+
-                        mergePlugin( element, managedPlugin, sourceDominant, context );
+                        if ( basic )
+                        {
+                            mergePlugin_Version( element, managedPlugin, false, context );
+                            mergePlugin_Extensions( element, managedPlugin, false, context );
+                        }
+                        else
+                        {
+                            mergePlugin( element, managedPlugin, false, context );
+                        }
-        public void mergeManagedDependencies( Model model )
-        {
-            DependencyManagement dependencyManagement = model.getDependencyManagement();
-            if ( dependencyManagement != null )
-            {
-                Map<Object, Dependency> dependencies = new HashMap<Object, Dependency>();
-                Map<Object, Object> context = Collections.emptyMap();
-
-                for ( Dependency dependency : model.getDependencies() )
-                {
-                    Object key = getDependencyKey( dependency );
-                    dependencies.put( key, dependency );
-                }
-
-                for ( Dependency managedDependency : dependencyManagement.getDependencies() )
-                {
-                    Object key = getDependencyKey( managedDependency );
-                    Dependency dependency = dependencies.get( key );
-                    if ( dependency != null )
-                    {
-                        mergeDependency( dependency, managedDependency, false, context );
-                    }
-                }
-            }
-        }
-
-        @Override
-        protected void mergeDependency_Exclusions( Dependency target, Dependency source, boolean sourceDominant,
-                                                   Map<Object, Object> context )
-        {
-            List<Exclusion> tgt = target.getExclusions();
-            if ( tgt.isEmpty() )
-            {
-                List<Exclusion> src = source.getExclusions();
-
-                for ( Iterator<Exclusion> it = src.iterator(); it.hasNext(); )
-                {
-                    Exclusion element = it.next();
-                    Exclusion clone = new Exclusion();
-                    mergeExclusion( clone, element, true, context );
-                    target.addExclusion( clone );
-                }
-            }
-        }
-

UPD42 UPD43 INS31 INS31 UPD42 MOV83 MOV39 MOV42 MOV44 MOV44 INS8 INS83 INS39 INS42 MOV44 INS44 INS8 UPD66 MOV21 INS43 INS42 MOV21 INS44 UPD83 UPD43 INS42 INS39 INS42 UPD42 UPD42 UPD42 INS9 INS9 MOV60 INS25 MOV27 INS8 UPD42 MOV42 MOV25 INS42 INS8 INS21 INS21 INS32 INS32 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS9 INS42 INS9 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL8 DEL31 DEL9 DEL42 DEL32 DEL42 DEL78 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL9 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL70 DEL8 DEL25 DEL8 DEL31 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL9 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL8 DEL25 DEL8 DEL31