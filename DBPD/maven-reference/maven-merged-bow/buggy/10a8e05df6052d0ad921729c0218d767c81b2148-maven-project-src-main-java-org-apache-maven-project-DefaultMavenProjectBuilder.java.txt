clean up project exception handling

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@314994 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.InvalidRepositoryException;
-        Map managedVersions = createManagedVersionMap( project.getId(), project.getDependencyManagement() );
+        String projectId = safeVersionlessKey( project.getGroupId(), project.getArtifactId() );
+
+        Map managedVersions = createManagedVersionMap( projectId, project.getDependencyManagement() );
-            throw new ProjectBuildingException( project.getId(), "Error in dependency version", e );
+            throw new ProjectBuildingException( projectId, "Error in dependency version", e );
-                throw new ProjectBuildingException( "all", "Cannot lookup metadata source for building the project.", e );
+                throw new ProjectBuildingException( "all", "Cannot lookup metadata source for building the project.",
+                                                    e );
-                                              ProfileManager profileManager,
-                                              boolean checkDistributionManagementStatus )
+                                              ProfileManager profileManager, boolean checkDistributionManagementStatus )
-            if ( project.getDistributionManagement() != null && project.getDistributionManagement().getStatus() != null )
+            if ( project.getDistributionManagement() != null &&
+                project.getDistributionManagement().getStatus() != null )
-                throw new ProjectBuildingException( project.getId(), 
-                    "Invalid project file: distribution status must not be specified for a project outside of the repository" );
+                String projectId = safeVersionlessKey( project.getGroupId(), project.getArtifactId() );
+
+                throw new ProjectBuildingException( projectId,
+                                                    "Invalid project file: distribution status must not be specified for a project outside of the repository" );
-            
+
-        
+
-                ArtifactRepository artifactRepo = ProjectUtils.buildArtifactRepository( mavenRepo,
-                                                                                        artifactRepositoryFactory,
-                                                                                        container );
+                ArtifactRepository artifactRepo = null;
+                try
+                {
+                    artifactRepo =
+                        ProjectUtils.buildArtifactRepository( mavenRepo, artifactRepositoryFactory, container );
+                }
+                catch ( InvalidRepositoryException e )
+                {
+                    throw new ProjectBuildingException( projectId, e.getMessage(), e );
+                }
-        MavenProject project = assembleLineage( model, lineage, localRepository, projectDir, parentSearchRepositories,
-                                                aggregatedRemoteWagonRepositories, externalProfileManager );
+        MavenProject project = null;
+        try
+        {
+            project = assembleLineage( model, lineage, localRepository, projectDir, parentSearchRepositories,
+                                       aggregatedRemoteWagonRepositories, externalProfileManager );
+        }
+        catch ( InvalidRepositoryException e )
+        {
+            throw new ProjectBuildingException( projectId, e.getMessage(), e );
+        }
-            throw new ProjectBuildingException( project.getId(), "Error building project from \'" + pomLocation + "\': " + model.getId(),
-                                                e );
+            throw new InvalidProjectModelException( projectId, pomLocation, e.getMessage(), e );
+        }
+        catch ( InvalidRepositoryException e )
+        {
+            throw new InvalidProjectModelException( projectId, pomLocation, e.getMessage(), e );
-        
+
-        
+
-        
+
-        
+
-        return ProjectUtils.buildArtifactRepositories( model.getRepositories(), artifactRepositoryFactory, container );
+        try
+        {
+            return ProjectUtils.buildArtifactRepositories( model.getRepositories(), artifactRepositoryFactory,
+                                                           container );
+        }
+        catch ( InvalidRepositoryException e )
+        {
+            String projectId = safeVersionlessKey( model.getGroupId(), model.getArtifactId() );
+
+            throw new ProjectBuildingException( projectId, e.getMessage(), e );
+        }
-        throws ProjectBuildingException, ModelInterpolationException
+        throws ProjectBuildingException, ModelInterpolationException, InvalidRepositoryException
+        String projectId = safeVersionlessKey( model.getGroupId(), model.getArtifactId() );
+
-            throw new InvalidProjectModelException( project.getId(), pomLocation, "Failed to validate POM", validationResult );
+            throw new InvalidProjectModelException( projectId, pomLocation, "Failed to validate POM",
+                                                    validationResult );
-        project.setPluginArtifacts( createPluginArtifacts( project.getId(), project.getBuildPlugins() ) );
-        project.setReportArtifacts( createReportArtifacts( project.getId(), project.getReportPlugins() ) );
-        project.setExtensionArtifacts( createExtensionArtifacts( project.getId(), project.getBuildExtensions() ) );
+        project.setPluginArtifacts( createPluginArtifacts( projectId, project.getBuildPlugins() ) );
+        project.setReportArtifacts( createReportArtifacts( projectId, project.getReportPlugins() ) );
+        project.setExtensionArtifacts( createExtensionArtifacts( projectId, project.getBuildExtensions() ) );
-        throws ProjectBuildingException
+        throws ProjectBuildingException, InvalidRepositoryException
-            
-            throw new ProjectBuildingException( projectId, "Failed to activate local (project-level) build profiles.", e );
+
+            throw new ProjectBuildingException( projectId, "Failed to activate local (project-level) build profiles: " +
+                e.getMessage(), e );
-            
+
-            MavenProject p = getCachedProject( parentModel.getGroupId(), parentModel.getArtifactId(),
-                                               parentModel.getVersion() );
+            MavenProject p =
+                getCachedProject( parentModel.getGroupId(), parentModel.getArtifactId(), parentModel.getVersion() );
-                
-                throw new ProjectBuildingException( projectId, "Failed to calculate active build profiles.", e );
+
+                throw new ProjectBuildingException( projectId, e.getMessage(), e );
-            throw new ProjectBuildingException( projectId, "Could not find the model file '" + file.getAbsolutePath() + "'.", e );
+            throw new ProjectBuildingException( projectId,
+                                                "Could not find the model file '" + file.getAbsolutePath() + "'.", e );
-            throw new ProjectBuildingException( projectId, "Failed to build model from file '" + file.getAbsolutePath() +
-                "'.\nError: \'" + e.getLocalizedMessage() + "\'", e );
-        }
-        catch ( XmlPullParserException e )
-        {
-            throw new ProjectBuildingException( projectId, "Failed to parse model from file '" + file.getAbsolutePath() +
-                "'.\nError: \'" + e.getLocalizedMessage() + "\'", e );
+            throw new ProjectBuildingException( projectId, "Failed to build model from file '" +
+                file.getAbsolutePath() + "'.\nError: \'" + e.getLocalizedMessage() + "\'", e );
-        throws IOException, XmlPullParserException, InvalidProjectModelException
+        throws IOException, InvalidProjectModelException
-        return modelReader.read( sReader );
+        try
+        {
+            return modelReader.read( sReader );
+        }
+        catch ( XmlPullParserException e )
+        {
+            throw new InvalidProjectModelException( projectId, pomLocation, "Parse error reading POM", e );
+        }
-        catch ( XmlPullParserException e )
-        {
-            throw new ProjectBuildingException( projectId, "Failed to parse model from URL \'" + url.toExternalForm() +
-                "\'\nError: \'" + e.getLocalizedMessage() + "\'", e );
-        }
+        String projectId = safeVersionlessKey( STANDALONE_SUPERPOM_GROUPID, STANDALONE_SUPERPOM_ARTIFACTID );
+
-            // TODO: remove - confirm this was a correct decision
-//            project.setFile( new File( ".", "pom.xml" ) );
-
-            String projectId = safeVersionlessKey( STANDALONE_SUPERPOM_GROUPID, STANDALONE_SUPERPOM_ARTIFACTID );
-            
-            throw new ProjectBuildingException( projectId, "Error building super-project", e );
+            throw new ProjectBuildingException( projectId, e.getMessage(), e );
+        }
+        catch ( InvalidRepositoryException e )
+        {
+            throw new ProjectBuildingException( projectId, e.getMessage(), e );
-        
+

INS26 INS40 INS8 INS43 INS43 INS60 INS54 INS54 INS42 INS60 INS42 INS54 MOV60 INS43 INS59 INS8 INS12 INS12 MOV8 INS12 INS43 INS59 INS8 INS12 INS12 INS42 INS42 INS32 INS33 INS21 INS44 INS8 INS44 INS8 INS44 INS8 INS42 INS42 INS32 MOV41 MOV44 INS8 INS44 INS8 INS42 INS32 INS32 UPD42 MOV42 INS7 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS60 INS53 INS42 INS32 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS53 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS60 INS53 INS54 INS42 MOV32 INS42 INS14 INS42 INS14 INS42 INS43 INS59 INS14 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS14 INS42 INS43 INS59 INS14 INS8 INS12 MOV43 INS42 INS32 INS42 INS43 INS42 INS42 INS32 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS32 MOV43 INS42 INS32 INS42 INS27 INS42 INS43 INS42 INS42 INS45 INS42 INS32 INS42 MOV43 INS42 INS32 INS42 INS42 INS42 INS32 MOV43 INS42 MOV45 INS33 INS21 INS44 INS8 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS7 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 MOV42 UPD42 MOV42 INS42 MOV32 INS42 INS14 INS42 INS42 INS43 INS42 INS32 INS42 INS42 INS42 INS42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL14 DEL53 DEL42 DEL42 DEL32 DEL45 DEL42 DEL45 DEL32 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL45 DEL42 DEL45 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL45 DEL42