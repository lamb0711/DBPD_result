pre-process plugins


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163420 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.plugin.descriptor.MojoDescriptor;
-import java.util.HashSet;
-import java.util.Set;
-        Set seenPhases = new HashSet();
+            preProcessPlugins( tasks, session );
+
-        catch ( LifecycleExecutionException e )
+        catch ( Exception e )
-    protected void executePhase( String phase, MavenSession session, MavenExecutionResponse response )
+    private void preProcessPlugins( List tasks, MavenSession session )
+        throws Exception
+    {
+        for ( Iterator i = tasks.iterator(); i.hasNext(); )
+        {
+            String task = (String) i.next();
+
+            PluginExecutionResponse pluginResponse;
+
+            if ( phaseMap.containsKey( task ) )
+            {
+                // only execute up to the given phase
+                int index = phases.indexOf( phaseMap.get( task ) );
+
+                for ( int j = 0; j <= index; j++ )
+                {
+                    Phase p = (Phase) phases.get( j );
+
+                    if ( p.getGoals() != null )
+                    {
+                        for ( Iterator k = p.getGoals().iterator(); k.hasNext(); )
+                        {
+                            String goal = (String) k.next();
+
+                            verifyMojoPhase( goal, session );
+                        }
+                    }
+                }
+            }
+            else
+            {
+                verifyMojoPhase( task, session );
+            }
+        }
+    }
+
+    private void verifyMojoPhase( String task, MavenSession session )
+        throws Exception
+    {
+        MojoDescriptor mojoDescriptor = pluginManager.getMojoDescriptor( task );
+        if ( mojoDescriptor == null )
+        {
+            pluginManager.verifyPluginForGoal( task, session );
+            mojoDescriptor = pluginManager.getMojoDescriptor( task );
+            if ( mojoDescriptor.getPhase() != null )
+            {
+                Phase phase = (Phase) phaseMap.get( mojoDescriptor.getPhase() );
+                phase.getGoals().add( task );
+            }
+        }
+    }
+
+    private void executePhase( String phase, MavenSession session, MavenExecutionResponse response )

MOV26 UPD40 INS31 INS31 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS43 INS8 UPD83 INS43 INS42 INS43 INS42 INS42 INS24 INS43 INS42 INS43 INS42 INS42 INS60 INS25 INS42 INS42 INS58 INS32 INS8 INS42 INS42 INS43 INS59 INS27 INS8 INS21 INS43 INS59 INS42 INS42 INS60 INS60 INS25 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS25 INS32 UPD43 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS32 INS8 INS8 INS42 INS42 INS42 INS32 INS7 INS27 INS8 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS42 INS60 INS24 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS33 INS60 INS21 INS43 INS32 INS39 INS59 INS58 INS27 INS37 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS32 INS39 INS59 INS42 INS42 INS42 INS60 INS25 INS42 INS42 INS42 INS42 INS42 INS11 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS34 INS43 INS59 INS27 INS8 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS32 INS33 INS24 INS42 INS42 INS42 INS32 INS43 INS32 INS42 INS42 INS58 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS42 INS42 INS60 INS21 INS42 INS42 INS32 INS43 INS59 INS32 INS32 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS42 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60