Resolving: MNG-709...scrubbing caller from forked lifecycle, and letting it run in the main lifecycle after the fork returns.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@233259 13f79535-47bb-0310-9956-ffa450edef68

-        String task = mojoDescriptor.getExecutePhase();
+        String targetPhase = mojoDescriptor.getExecutePhase();
-        Map lifecycleMappings = constructLifecycleMappings( session, task, project );
+        Map lifecycleMappings = constructLifecycleMappings( session, targetPhase, project );
-        String mojoPhase = findFirstPhaseBindingForMojo( mojoDescriptor, lifecycleMappings );
+        removeFromLifecycle( mojoDescriptor, lifecycleMappings );
-        int mojoPhaseIdx = phases.indexOf( mojoPhase );
-        int execPhaseIdx = phases.indexOf( task );
-        
-        if ( mojoPhaseIdx > -1 && mojoPhaseIdx <= execPhaseIdx )
-        {
-            throw new LifecycleExecutionException( "Infinite loop detected in build process. Mojo: \'"
-                + mojoDescriptor.getGoal() + "\' declares executePhase of: \'" + task
-                + "\' but is itself bound to phase: \'" + mojoPhase
-                + "\'. This will result in infinite forking of build execution." );
-        }
-
-        executeGoalWithLifecycle( task, session, lifecycleMappings, executionProject );
+        executeGoalWithLifecycle( targetPhase, session, lifecycleMappings, executionProject );
+        
-    private String findFirstPhaseBindingForMojo( MojoDescriptor mojoDescriptor, Map lifecycleMappings )
+    private void removeFromLifecycle( MojoDescriptor mojoDescriptor, Map lifecycleMappings )
-        for ( Iterator it = lifecycleMappings.entrySet().iterator(); it.hasNext(); )
+        for ( Iterator it = lifecycleMappings.values().iterator(); it.hasNext(); )
-            Map.Entry entry = (Map.Entry) it.next();
+            List tasks = (List) it.next();
-            String phase = (String) entry.getKey();
-            List tasks = (List) entry.getValue();
-            
-            if ( tasks.contains( mojoIdWithVersion ) || tasks.contains( mojoIdWithoutVersion ) )
-            {
-                return phase;
-            }
+            tasks.remove( mojoIdWithVersion );
+            tasks.remove( mojoIdWithoutVersion );
-        
-        return null;

INS39 INS42 INS21 INS32 UPD42 UPD42 MOV42 MOV42 MOV42 UPD42 INS21 INS21 UPD42 UPD43 INS32 INS32 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV43 DEL42 DEL43 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL34 DEL38 DEL27 DEL42 DEL42 DEL27 DEL27 DEL42 DEL43 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL45 DEL42 DEL45 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL40 DEL40 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL32 DEL32 DEL27 DEL42 DEL41 DEL8 DEL25 DEL33 DEL41