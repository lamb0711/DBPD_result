PR: MNG-140

split artifact impl from api so that dep resolution can be used independently of wagon
only the first step in making maven-artifact more useful as a public api - more changes to be made


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191634 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.ChecksumFailedException;
+import org.apache.maven.artifact.repository.DefaultArtifactRepository;
-            throw new UnsupportedProtocolException( "Cannot find wagon which supports the requested protocol: "
-                + protocol, e );
+            throw new UnsupportedProtocolException(
+                "Cannot find wagon which supports the requested protocol: " + protocol, e );
-                               TransferListener downloadMonitor )
+                                TransferListener downloadMonitor )
-            wagon.connect( repository, getAuthenticationInfo( repository.getId() ), getProxy( protocol ) );
+            wagon.connect( new Repository( repository.getId(), repository.getUrl() ),
+                           getAuthenticationInfo( repository.getId() ), getProxy( protocol ) );
-                               TransferListener downloadMonitor )
+                                TransferListener downloadMonitor )
-        Repository mirror = getMirror( repository.getId() );
+        ArtifactRepository mirror = getMirror( repository.getId() );
-            repository = repository.createMirror( mirror );
+            repository = mirror;
-            wagon.connect( repository, getAuthenticationInfo( repository.getId() ), getProxy( protocol ) );
+            wagon.connect( new Repository( repository.getId(), repository.getUrl() ),
+                           getAuthenticationInfo( repository.getId() ), getProxy( protocol ) );
-            
+
-            while( firstRun || retry )
+            while ( firstRun || retry )
-                
+
-                
+
-                        if( firstRun )
+                        if ( firstRun )
-                            handleChecksumFailure( repository, sha1TryException.getMessage(), sha1TryException.getCause() );
+                            handleChecksumFailure( repository, sha1TryException.getMessage(),
+                                                   sha1TryException.getCause() );
-                            if( md5TryException instanceof ChecksumFailedException )
+                            if ( md5TryException instanceof ChecksumFailedException )
-                                if( firstRun )
+                                if ( firstRun )
-                                    handleChecksumFailure( repository, md5TryException.getMessage(), md5TryException.getCause() );
+                                    handleChecksumFailure( repository, md5TryException.getMessage(),
+                                                           md5TryException.getCause() );
-                                handleChecksumFailure( repository, "Error retrieving checksum file for " + destination, md5TryException );
+                                handleChecksumFailure( repository, "Error retrieving checksum file for " + destination,
+                                                       md5TryException );
-                    
+
-        if( ArtifactRepository.CHECKSUM_POLICY_FAIL.equals( repository.getChecksumPolicy() ) )
+        if ( ArtifactRepository.CHECKSUM_POLICY_FAIL.equals( repository.getChecksumPolicy() ) )
-                                String checksumFileExtension, Wagon wagon )
+                                 String checksumFileExtension, Wagon wagon )
-            File checksumFile = new File( destination + ".sha1" );
-            wagon.get( remotePath + ".sha1", checksumFile );
+            File checksumFile = new File( destination + checksumFileExtension );
+            wagon.get( remotePath + checksumFileExtension, checksumFile );
-                throw new ChecksumFailedException( "Checksum failed on download: local = '" + actualChecksum
-                    + "'; remote = '" + expectedChecksum + "'" );
+                throw new ChecksumFailedException(
+                    "Checksum failed on download: local = '" + actualChecksum + "'; remote = '" + expectedChecksum +
+                        "'" );
-            throw new TransferFailedException( "Invalid SHA-1 checksum file", e );
+            throw new TransferFailedException( "Invalid checksum file", e );
-    public Repository getMirror( String mirrorOf )
+    public ArtifactRepository getMirror( String mirrorOf )
-        return (Repository) mirrors.get( mirrorOf );
+        return (ArtifactRepository) mirrors.get( mirrorOf );
-    public void addProxy( String protocol, String host, int port, String username, String password, String nonProxyHosts )
+    public void addProxy( String protocol, String host, int port, String username, String password,
+                          String nonProxyHosts )
-                                      String passphrase )
+                                       String passphrase )
-        Repository mirror = new Repository( id, url );
+        ArtifactRepository mirror = new DefaultArtifactRepository( id, url, null );

MOV26 UPD40 UPD43 UPD42 INS43 UPD43 INS42 UPD43 UPD42 MOV43 UPD42 UPD43 INS33 INS14 INS42 INS14 UPD42 INS43 INS32 INS32 MOV43 INS32 INS32 MOV43 INS42 UPD45 INS42 MOV42 INS42 INS42 INS42 MOV42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL32 DEL45 DEL45