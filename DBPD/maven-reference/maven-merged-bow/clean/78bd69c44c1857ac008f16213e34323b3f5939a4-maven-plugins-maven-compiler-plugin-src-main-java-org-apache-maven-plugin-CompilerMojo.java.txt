Resolving: MNG-643

o Added includes/excludes for compile and testCompile
o added integration tests for single execution of compile and testCompile with excludes
o Added integration test for multiple execution of compile in different phases per Dan Tran's request

The bulk of this commit is KrisBravo's work (I think that's who Corridor Software Developer is??). Thanks for the help.




git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@239272 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.compiler.util.scan.SimpleSourceInclusionScanner;
+import org.codehaus.plexus.compiler.util.scan.SourceInclusionScanner;
+import org.codehaus.plexus.compiler.util.scan.StaleSourceScanner;
+import java.util.Collections;
+import java.util.HashSet;
+import java.util.Set;
+    /**
+     * A list of inclusion filters for the compiler.
+     * @parameter
+     */
+    private Set includes = new HashSet();
+
+    /**
+     * A list of exclusion filters for the compiler.
+     * @parameter
+     */
+    private Set excludes = new HashSet();
+
+
+    protected SourceInclusionScanner getSourceInclusionScanner( int staleMillis )
+    {
+        SourceInclusionScanner scanner = null;
+
+        if ( includes.isEmpty() && excludes.isEmpty() )
+        {
+            scanner = new StaleSourceScanner( staleMillis );
+        }
+        else
+        {
+            if ( includes.isEmpty() )
+            {
+                includes.add( "**/*.java" );
+            }
+            scanner = new StaleSourceScanner( staleMillis, includes, excludes );
+        }
+
+        return scanner;
+    }
+
+    protected SourceInclusionScanner getSourceInclusionScanner( String inputFileEnding )
+    {
+        SourceInclusionScanner scanner = null;
+
+        if ( includes.isEmpty() && excludes.isEmpty() )
+        {
+            includes = Collections.singleton( "**/*." + inputFileEnding );
+            scanner = new SimpleSourceInclusionScanner( includes, Collections.EMPTY_SET );
+        }
+        else
+        {
+            if ( includes.isEmpty() )
+            {
+                includes.add( "**/*." + inputFileEnding );
+            }
+            scanner = new SimpleSourceInclusionScanner( excludes, excludes );
+        }
+
+        return scanner;
+    }
+

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS31 INS31 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS65 INS65 INS42 INS42 INS14 INS65 INS65 INS42 INS42 INS14 INS42 INS39 INS42 INS60 INS25 INS41 INS42 INS43 INS42 INS60 INS25 INS41 INS66 INS43 INS66 INS43 INS43 INS59 INS27 INS8 INS8 INS42 INS42 INS43 INS59 INS27 INS8 INS8 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS32 INS21 INS25 INS21 INS42 INS42 INS33 INS32 INS32 INS21 INS21 INS25 INS21 INS42 INS42 INS42 INS42 INS7 INS32 INS8 INS7 INS42 INS42 INS42 INS42 INS7 INS7 INS32 INS8 INS7 INS42 INS14 INS42 INS42 INS21 INS42 INS14 INS42 INS32 INS42 INS14 INS42 INS42 INS21 INS42 INS14 INS43 INS42 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS27 INS43 INS42 INS40 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS27 INS42 INS45 INS42