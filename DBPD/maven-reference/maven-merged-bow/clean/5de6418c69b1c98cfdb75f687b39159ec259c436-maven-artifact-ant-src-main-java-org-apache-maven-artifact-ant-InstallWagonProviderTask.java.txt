PR: MNG-122
exception clean up phase 1

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@320668 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.ArtifactUtils;
+    private static final String WAGON_GROUP_ID = "org.apache.maven.wagon";
+
-    public void execute()
+    public void doExecute()
+        MavenMetadataSource metadataSource = (MavenMetadataSource) lookup( ArtifactMetadataSource.ROLE );
+
+        ArtifactResolver resolver = (ArtifactResolver) lookup( ArtifactResolver.ROLE );
+        ArtifactRepository artifactRepository = createRemoteArtifactRepository( getDefaultRemoteRepository() );
+        List remoteRepositories = Collections.singletonList( artifactRepository );
+
+        VersionRange versionRange;
-            MavenMetadataSource metadataSource = (MavenMetadataSource) lookup( ArtifactMetadataSource.ROLE );
-
-            ArtifactResolver resolver = (ArtifactResolver) lookup( ArtifactResolver.ROLE );
-            ArtifactRepository artifactRepository = createRemoteArtifactRepository( getDefaultRemoteRepository() );
-            List remoteRepositories = Collections.singletonList( artifactRepository );
-            try
-            {
-                ArtifactFactory factory = (ArtifactFactory) lookup( ArtifactFactory.ROLE );
-                VersionRange versionRange = VersionRange.createFromVersionSpec( version );
-                Artifact providerArtifact = factory.createExtensionArtifact( "org.apache.maven.wagon", artifactId,
-                                                                             versionRange );
-                ArtifactResolutionResult result = resolver.resolveTransitively( Collections
-                    .singleton( providerArtifact ), createArtifact( createDummyPom() ),
-                                                                                createLocalArtifactRepository(),
-                                                                                remoteRepositories, metadataSource,
-                                                                                null );
-
-                log( "Installing provider: " + providerArtifact );
-
-                for ( Iterator i = result.getArtifacts().iterator(); i.hasNext(); )
-                {
-                    Artifact a = (Artifact) i.next();
-                    getEmbedder().getContainer().addJarResource( a.getFile() );
-                }
-            }
-            catch ( ArtifactResolutionException e )
-            {
-                throw new BuildException( "Unable to locate wagon provider in remote repository", e );
-            }
-            catch ( PlexusContainerException e )
-            {
-                throw new BuildException( "Unable to locate wagon provider in remote repository", e );
-            }
-            catch ( InvalidVersionSpecificationException e )
-            {
-                throw new BuildException( "Unable to locate wagon provider in remote repository", e );
-            }
-            catch ( ArtifactNotFoundException e )
-            {
-                throw new BuildException( "Unable to locate wagon provider in remote repository", e );
-            }
+            versionRange = VersionRange.createFromVersionSpec( version );
-        catch ( BuildException e )
+        catch ( InvalidVersionSpecificationException e )
-            diagnoseError( e );
-            
-            throw e;
+            throw new BuildException( "Unable to get extension '" +
+                ArtifactUtils.versionlessKey( WAGON_GROUP_ID, artifactId ) + "' because version '" + version +
+                " is invalid: " + e.getMessage(), e );
+        ArtifactFactory factory = (ArtifactFactory) lookup( ArtifactFactory.ROLE );
+        Artifact providerArtifact = factory.createExtensionArtifact( WAGON_GROUP_ID, artifactId, versionRange );
+
+        ArtifactResolutionResult result;
+        try
+        {
+            result = resolver.resolveTransitively( Collections.singleton( providerArtifact ),
+                                                   createArtifact( createDummyPom() ), createLocalArtifactRepository(),
+                                                   remoteRepositories, metadataSource, null );
+        }
+        catch ( ArtifactResolutionException e )
+        {
+            throw new BuildException( "Unable to locate wagon provider in remote repository", e );
+        }
+        catch ( ArtifactNotFoundException e )
+        {
+            throw new BuildException( "Unable to locate wagon provider in remote repository", e );
+        }
+
+        log( "Installing provider: " + providerArtifact );
+
+        try
+        {
+            for ( Iterator i = result.getArtifacts().iterator(); i.hasNext(); )
+            {
+                Artifact a = (Artifact) i.next();
+                getEmbedder().getContainer().addJarResource( a.getFile() );
+            }
+        }
+        catch ( PlexusContainerException e )
+        {
+            throw new BuildException( "Unable to locate wagon provider in remote repository", e );
+        }
+

INS26 INS40 INS23 INS83 INS83 INS83 INS43 INS59 UPD42 MOV8 INS42 INS42 INS45 INS60 INS54 MOV60 INS60 INS60 INS54 MOV21 MOV43 INS59 INS8 INS12 MOV43 INS59 MOV43 INS59 INS8 MOV12 MOV12 INS42 INS21 MOV44 INS8 INS42 INS32 INS42 INS21 INS7 INS53 INS42 INS42 INS42 INS42 INS42 INS7 INS42 MOV32 INS14 INS42 MOV32 MOV43 INS27 INS42 INS45 INS32 INS45 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL59 DEL60 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL42 DEL53 DEL8 DEL12 DEL54 DEL8