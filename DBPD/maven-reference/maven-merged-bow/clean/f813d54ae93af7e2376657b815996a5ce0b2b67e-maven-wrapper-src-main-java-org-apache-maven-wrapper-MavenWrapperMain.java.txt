[MNG-5937] Optimize code for Java 8

-import java.io.File;
+import java.io.IOException;
+import java.nio.file.Path;
+import java.nio.file.Paths;
+    private static final String POM_PROPERTIES = "/META-INF/maven/org.apache.maven/maven-wrapper/pom.properties";
+    
-    public static final String MVN_VERSION = "3.6.3";
-
-        "org/apache/maven/apache-maven/" + MVN_VERSION + "/apache-maven-" + MVN_VERSION + "-bin.zip";
+        "org/apache/maven/apache-maven/" + wrapperVersion() + "/apache-maven-" + wrapperVersion() + "-bin.zip";
-        File wrapperJar = wrapperJar();
-        File propertiesFile = wrapperProperties( wrapperJar );
+        Path wrapperJar = wrapperJar();
+        Path propertiesFile = wrapperProperties( wrapperJar );
-        WrapperExecutor wrapperExecutor = WrapperExecutor.forWrapperPropertiesFile( propertiesFile, System.out );
+        WrapperExecutor wrapperExecutor = WrapperExecutor.forWrapperPropertiesFile( propertiesFile );
-    private static File wrapperProperties( File wrapperJar )
+    private static Path wrapperProperties( Path wrapperJar ) throws URISyntaxException
-        return new File( wrapperJar.getParent(), wrapperJar.getName().replaceFirst( "\\.jar$", ".properties" ) );
+        return wrapperJar().resolveSibling( wrapperJar.getFileName().toString().replaceFirst( "\\.jar$",
+                                                                                              ".properties" ) );
-    private static File wrapperJar()
+    private static Path wrapperJar() throws URISyntaxException
-        URI location;
-        try
-        {
-            location = MavenWrapperMain.class.getProtectionDomain().getCodeSource().getLocation().toURI();
-        }
-        catch ( URISyntaxException e )
-        {
-            throw new RuntimeException( e );
-        }
-        if ( !location.getScheme().equals( "file" ) )
-        {
-            throw new RuntimeException( String.format( "Cannot determine classpath for wrapper Jar from codebase '%s'.",
-                                                       location ) );
-        }
-        return new File( location.getPath() );
+        URI location = MavenWrapperMain.class.getProtectionDomain().getCodeSource().getLocation().toURI();
+
+        return Paths.get( location );
-        try
+        try ( InputStream resourceAsStream = MavenWrapperMain.class.getResourceAsStream( POM_PROPERTIES ) )
-            InputStream resourceAsStream =
-                MavenWrapperMain.class.getResourceAsStream( "/META-INF/maven/io.takari/maven-wrapper/pom.properties" );
-                throw new RuntimeException( "No maven properties found." );
+                throw new IllegalStateException( POM_PROPERTIES + " not found." );
-            try
+            mavenProperties.load( resourceAsStream );
+            String version = mavenProperties.getProperty( "version" );
+            if ( version == null )
-                mavenProperties.load( resourceAsStream );
-                String version = mavenProperties.getProperty( "version" );
-                if ( version == null )
-                {
-                    throw new RuntimeException( "No version number specified in build receipt resource." );
-                }
-                return version;
+                throw new NullPointerException( "No version specified in " + POM_PROPERTIES );
-            finally
-            {
-                resourceAsStream.close();
-            }
+            return version;
-        catch ( Exception e )
+        catch ( IOException e )
-    private static File mavenUserHome()
+    private static Path mavenUserHome()
-            return new File( mavenUserHome );
+            return Paths.get( mavenUserHome );
-        if ( mavenUserHome != null )
+        if ( mavenUserHome  != null )
-            return new File( mavenUserHome );
+            return Paths.get( mavenUserHome );
-            return new File( DEFAULT_MAVEN_USER_HOME );
+            return Paths.get( DEFAULT_MAVEN_USER_HOME );

INS26 INS26 MOV23 UPD40 INS40 INS40 UPD83 UPD43 INS43 INS8 UPD43 MOV43 MOV8 MOV8 UPD43 UPD42 UPD45 UPD42 UPD43 UPD42 MOV42 INS41 UPD42 INS60 INS41 UPD42 INS32 INS32 UPD43 UPD43 UPD42 INS32 MOV43 INS59 INS32 INS58 INS12 MOV27 MOV27 INS42 INS42 UPD42 UPD42 INS32 UPD42 MOV42 INS32 INS42 MOV32 INS42 INS42 INS42 MOV43 MOV59 INS25 MOV60 INS44 MOV8 MOV42 INS32 MOV42 MOV45 MOV45 MOV27 INS8 INS43 INS42 INS32 INS32 INS32 MOV32 INS42 INS42 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS14 INS43 INS27 UPD43 INS27 INS42 INS42 INS45 UPD42 INS45 INS42 DEL42 DEL42 DEL40 DEL43 DEL32 DEL32 DEL14 DEL41 DEL8 DEL42 DEL7 DEL21 DEL42 DEL59 DEL60 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL38 DEL42 DEL43 DEL42 DEL42 DEL45 DEL42 DEL32 DEL14 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL41 DEL8 DEL60 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL45 DEL45 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL12 DEL54 DEL8 DEL42 DEL43 DEL42 DEL14 DEL42 DEL43 DEL42 DEL14 DEL42 DEL43 DEL42 DEL14