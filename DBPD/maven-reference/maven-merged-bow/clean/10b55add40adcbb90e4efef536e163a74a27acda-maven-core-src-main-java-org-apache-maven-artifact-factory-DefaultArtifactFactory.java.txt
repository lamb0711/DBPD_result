o Created non-abstract base class for DefaultArtifactFactory to extend, called ArtifactConstructionSupport, which provides centralized means for constructing artifacts consistently without all the maven-core specific methods. These maven-core specifics not delegate to the generic methods provided in this new class.
o Adjusted the maven-archetype stuff to work with the new artifact creation/resolution/etc. methods in maven-artifact and maven-core.
o Removed all direct construction of DefaultArtifact and replaced with ArtifactConstructionSupport where it would have involved putting the DefaultArtifactFactory in the plexus.xml, and where the code doesn't need dependency-oriented methods.
o Archetype works now, using the example provided in plexus/plexus-site/src/site/apt/building-plexus-applications.apt


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163615 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.DefaultArtifact;
+import org.apache.maven.artifact.construction.ArtifactConstructionSupport;
+    extends ArtifactConstructionSupport
-    public Artifact createArtifact( String groupId, String artifactId, String version, String scope, String type,
-                                    String extension, String inheritedScope )
-    {
-        // TODO: can refactor, use scope handler
-
-        // if this artifact is test, and the dependency is test, don't transitively create
-        if ( Artifact.SCOPE_TEST.equals( inheritedScope ) && Artifact.SCOPE_TEST.equals( scope ) )
-        {
-            return null;
-        }
-
-        // TODO: localRepository not used (should be used here to resolve path?
-        String desiredScope = Artifact.SCOPE_RUNTIME;
-        if ( Artifact.SCOPE_COMPILE.equals( scope ) && inheritedScope == null )
-        {
-            desiredScope = Artifact.SCOPE_COMPILE;
-        }
-
-        // vvv added to retain compile scope. Remove if you want compile inherited as runtime
-        else if ( Artifact.SCOPE_COMPILE.equals( scope ) && Artifact.SCOPE_COMPILE.equals( inheritedScope ) )
-        {
-            desiredScope = Artifact.SCOPE_COMPILE;
-        }
-        // ^^^ added to retain compile scope. Remove if you want compile inherited as runtime
-
-        if ( Artifact.SCOPE_TEST.equals( scope ) || Artifact.SCOPE_TEST.equals( inheritedScope ) )
-        {
-            desiredScope = Artifact.SCOPE_TEST;
-        }
-        return new DefaultArtifact( groupId, artifactId, version, desiredScope, type, extension );
-    }

UPD40 INS43 UPD42 MOV42 DEL83 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL40 DEL42 DEL42 DEL32 DEL40 DEL42 DEL42 DEL32 DEL27 DEL33 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL40 DEL59 DEL60 DEL40 DEL42 DEL42 DEL32 DEL42 DEL33 DEL27 DEL27 DEL42 DEL40 DEL7 DEL21 DEL8 DEL40 DEL42 DEL42 DEL32 DEL40 DEL42 DEL42 DEL32 DEL27 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL25 DEL40 DEL42 DEL42 DEL32 DEL40 DEL42 DEL42 DEL32 DEL27 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL14 DEL41 DEL8 DEL31