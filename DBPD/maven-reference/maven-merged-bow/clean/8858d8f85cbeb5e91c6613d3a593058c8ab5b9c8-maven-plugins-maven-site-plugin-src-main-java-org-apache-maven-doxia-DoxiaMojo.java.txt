PR: MNG-629
preparing for executing the lifecycle by passing reports into the site plugin, rather than extracting them from the plugin manager

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@290634 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.resolver.ArtifactResolutionException;
-import org.apache.maven.execution.MavenSession;
-import org.apache.maven.model.ReportPlugin;
-import org.apache.maven.model.ReportSet;
-import org.apache.maven.plugin.PluginConfigurationException;
-import org.apache.maven.plugin.PluginManager;
-import org.apache.maven.plugin.PluginManagerException;
-import org.apache.maven.plugin.version.PluginVersionResolutionException;
-    private String siteDirectory;
+    private File siteDirectory;
-    private String generatedSiteDirectory;
+    private File generatedSiteDirectory;
-    private String outputDirectory;
+    private File outputDirectory;
-     * @parameter expression="${templateDirectory}
+     * @parameter expression="${templateDirectory}"
-     * @parameter expression="${template}
+     * @parameter expression="${template}"
-     * @parameter expression="${attributes}
+     * @parameter expression="${attributes}"
-     * @parameter expression="${locales}
+     * @parameter expression="${locales}"
-     * @parameter expression="${component.org.apache.maven.plugin.PluginManager}"
+     * @parameter expression="${reports}"
-    private PluginManager pluginManager;
-
-    /**
-     * @parameter expression="${session}"
-     * @required
-     * @readonly
-     */
-    private MavenSession session;
+    private List reports;
+        Map categories = categorizeReports( reports );
+
+        List projectInfos = (List) categories.get( MavenReport.CATEGORY_PROJECT_INFORMATION );
+        List projectReports = (List) categories.get( MavenReport.CATEGORY_PROJECT_REPORTS );
+
+        if ( projectInfos == null )
+        {
+            projectInfos = Collections.EMPTY_LIST;
+        }
+
+        if ( projectReports == null )
+        {
+            projectReports = Collections.EMPTY_LIST;
+        }
+
-                File siteDirectoryFile = new File( siteDirectory );
+                File siteDirectoryFile = siteDirectory;
-                File generatedSiteFile = new File( generatedSiteDirectory );
-
-                if ( generatedSiteFile.exists() )
+                if ( generatedSiteDirectory.exists() )
-                    tryToFindDuplicates( generatedSiteFile, duplicate );
+                    tryToFindDuplicates( generatedSiteDirectory, duplicate );
-                List reports = getReports();
-
-                Map categories = categorizeReports( reports );
-
-                List projectInfos = (List) categories.get( MavenReport.CATEGORY_PROJECT_INFORMATION );
-                List projectReports = (List) categories.get( MavenReport.CATEGORY_PROJECT_REPORTS );
-
-                if ( projectInfos == null )
-                {
-                    projectInfos = Collections.EMPTY_LIST;
-                }
-
-                if ( projectReports == null )
-                {
-                    projectReports = Collections.EMPTY_LIST;
-                }
-
-                if ( generatedSiteFile.exists() )
+                if ( generatedSiteDirectory.exists() )
-                    siteRenderer.render( generatedSiteFile, outputDirectory, siteDescriptor, template, attributes,
+                    siteRenderer.render( generatedSiteDirectory, outputDirectory, siteDescriptor, template, attributes,
+
-        SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName, siteDescriptor );
+        SiteRendererSink sink = siteRenderer.createSink( siteDirectory, outputFileName, siteDescriptor );
-            SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName,
-                                                             siteDescriptor );
+            SiteRendererSink sink = siteRenderer.createSink( siteDirectory, outputFileName, siteDescriptor );
-        SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName, siteDescriptor );
+        SiteRendererSink sink = siteRenderer.createSink( siteDirectory, outputFileName, siteDescriptor );
-        SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName, siteDescriptor );
+        SiteRendererSink sink = siteRenderer.createSink( siteDirectory, outputFileName, siteDescriptor );
-            return new File( outputDirectory );
+            return outputDirectory;
-    private List getReports()
-        throws MojoExecutionException
-    {
-        // TODO: not the best solution. Perhaps a mojo tag that causes the plugin manager to populate project reports instead?
-
-        List reportPlugins = project.getReportPlugins();
-
-        if ( project.getModel().getReports() != null )
-        {
-            getLog().error(
-                "DEPRECATED: Plugin contains a <reports/> section: this is IGNORED - please use <reporting/> instead." );
-        }
-
-        List reports = new ArrayList();
-        if ( reportPlugins != null )
-        {
-            for ( Iterator it = reportPlugins.iterator(); it.hasNext(); )
-            {
-                ReportPlugin reportPlugin = (ReportPlugin) it.next();
-
-                try
-                {
-                    List reportSets = reportPlugin.getReportSets();
-
-                    List reportsList = new ArrayList();
-
-                    if ( reportSets == null || reportSets.isEmpty() )
-                    {
-                        reportsList = pluginManager.getReports( reportPlugin, null, project, session );
-
-                    }
-                    else
-                    {
-                        for ( Iterator j = reportSets.iterator(); j.hasNext(); )
-                        {
-                            ReportSet reportSet = (ReportSet) j.next();
-
-                            reportsList = pluginManager.getReports( reportPlugin, reportSet, project, session );
-                        }
-                    }
-
-                    reports.addAll( reportsList );
-                }
-                catch ( PluginManagerException e )
-                {
-                    throw new MojoExecutionException( "Error getting reports", e );
-                }
-                catch ( PluginVersionResolutionException e )
-                {
-                    throw new MojoExecutionException( "Error getting reports", e );
-                }
-                catch ( PluginConfigurationException e )
-                {
-                    throw new MojoExecutionException( "Error getting reports", e );
-                }
-                catch ( ArtifactResolutionException e )
-                {
-                    throw new MojoExecutionException( "Cannot find report plugin", e );
-                }
-            }
-        }
-        return reports;
-    }
-

MOV43 MOV43 MOV43 MOV43 UPD42 MOV42 UPD42 MOV42 UPD42 MOV60 MOV60 MOV60 MOV25 MOV25 UPD66 UPD66 UPD66 UPD66 UPD66 INS42 INS42 INS42 INS42 MOV43 INS42 INS42 UPD42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL65 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL14 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL14 DEL42 DEL43 DEL42 DEL14 DEL42 DEL43 DEL42 DEL14 DEL42 DEL43 DEL42 DEL14 DEL42 DEL43 DEL42 DEL14 DEL83 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL27 DEL42 DEL32 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL42 DEL42 DEL33 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL24 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL24 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31