o using mojo executions as the placeholders in the lifecycle instead of string representations


git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@777120 13f79535-47bb-0310-9956-ffa450edef68

-        List<String> phasesWithMojosToExecute = new ArrayList<String>();
+        List<MojoExecution> phasesWithMojosToExecute = new ArrayList<MojoExecution>();
-                MojoExecution mojoExecution = getMojoExecution( project, mojoDescriptor );
+                MojoExecution mojoExecution = new MojoExecution( mojoDescriptor );
+                
+                populateMojoExecutionConfiguration( project, mojoExecution );
-                Map<String, List<String>> phaseToMojoMapping = new LinkedHashMap<String, List<String>>();
+                Map<String, List<MojoExecution>> phaseToMojoMapping = new LinkedHashMap<String, List<MojoExecution>>();
-                    List<String> mojos = new ArrayList<String>();
+                    List<MojoExecution> mojos = new ArrayList<MojoExecution>();
+                    //TODO: remove hard coding
-                        mojos.add( "org.apache.maven.plugins:maven-clean-plugin:clean" );
+                        mojos.add( new MojoExecution( "org.apache.maven.plugins", "maven-clean-plugin", "2.3", "clean", null ) );
-                                    phaseToMojoMapping.put( execution.getPhase(), new ArrayList<String>() );
+                                    phaseToMojoMapping.put( execution.getPhase(), new ArrayList<MojoExecution>() );
-                                phaseToMojoMapping.get( execution.getPhase() ).add( s );
+                                MojoExecution mojoExecution = new MojoExecution( plugin.getGroupId(), plugin.getArtifactId(), plugin.getVersion(), goal, execution.getId() );
+                                phaseToMojoMapping.get( execution.getPhase() ).add( mojoExecution );
-                                    phaseToMojoMapping.get( mojoDescriptor.getPhase() ).add( s );
+                                    MojoExecution mojoExecution = new MojoExecution( plugin.getGroupId(), plugin.getArtifactId(), plugin.getVersion(), goal, execution.getId() );
+                                    phaseToMojoMapping.get( mojoDescriptor.getPhase() ).add( mojoExecution );
-
-
-        for ( String mojo : phasesWithMojosToExecute )
+        //TODO: just used a hollowed out MojoExecution
+        for ( MojoExecution mojoExecution : phasesWithMojosToExecute )
-            //
+            //                        
+            MojoDescriptor mojoDescriptor = pluginManager.getMojoDescriptor( 
+                mojoExecution.getGroupId(), mojoExecution.getArtifactId(), mojoExecution.getVersion(), mojoExecution.getGoal(), session.getLocalRepository(), project.getRemoteArtifactRepositories() );
-            MojoDescriptor mojoDescriptor = getMojoDescriptor( mojo, session );
-
-            MojoExecution mojoExecution = getMojoExecution( project, mojoDescriptor );
+            mojoExecution.setMojoDescriptor( mojoDescriptor );
+            
+            populateMojoExecutionConfiguration( project, mojoExecution );
-    private MojoExecution getMojoExecution( MavenProject project, MojoDescriptor mojoDescriptor )
-    {
-        MojoExecution mojoExecution = new MojoExecution( mojoDescriptor );
-                
-        String g = mojoDescriptor.getPluginDescriptor().getGroupId();
+    //this will get the wrong configuration because it's only matching the goal not the execution id
+    
+    private void populateMojoExecutionConfiguration( MavenProject project, MojoExecution mojoExecution )
+    {                
+        String g = mojoExecution.getGroupId();
-        String a = mojoDescriptor.getPluginDescriptor().getArtifactId();
+        String a = mojoExecution.getArtifactId();
-                if ( mojoDescriptor.getGoal().equals( goal ) )
+                if ( mojoExecution.getGoal().equals( goal ) )
-                    Xpp3Dom mojoConfiguration = extractMojoConfiguration( executionConfiguration, mojoDescriptor );
+                    Xpp3Dom mojoConfiguration = extractMojoConfiguration( executionConfiguration, mojoExecution.getMojoDescriptor() );
-        
-        return mojoExecution;        

INS39 INS42 UPD43 UPD42 UPD74 UPD42 MOV43 MOV43 UPD43 UPD43 UPD42 INS21 INS21 UPD42 UPD74 UPD42 INS32 INS32 UPD42 MOV42 UPD42 MOV42 UPD43 MOV60 INS21 INS42 INS42 INS42 UPD42 MOV42 MOV42 UPD42 MOV42 UPD42 MOV59 INS32 UPD74 INS42 INS32 INS32 INS32 INS32 INS32 INS32 MOV14 INS42 INS42 INS42 UPD74 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV42 INS42 INS42 INS42 UPD43 UPD74 UPD74 UPD42 UPD42 UPD74 UPD43 UPD43 UPD42 UPD74 INS32 UPD42 UPD43 INS14 INS42 UPD42 MOV42 UPD42 MOV43 INS45 INS45 INS45 INS45 INS33 INS60 INS43 INS59 INS42 INS42 INS14 UPD42 INS60 INS43 INS32 INS32 INS32 INS42 INS32 INS43 INS59 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 UPD42 UPD74 MOV43 INS32 INS32 INS32 INS42 INS32 UPD43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV42 DEL42 DEL42 DEL42 DEL32 DEL45 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL41