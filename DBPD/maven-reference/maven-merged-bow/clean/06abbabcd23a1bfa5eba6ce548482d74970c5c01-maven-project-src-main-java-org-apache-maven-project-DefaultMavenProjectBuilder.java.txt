Some fixes for adding properties from active profiles to the interpolation list.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@696299 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.project.builder.PomArtifactResolver;
-import org.apache.maven.project.builder.ProjectBuilder;
-import org.apache.maven.project.builder.PomInterpolatorTag;
-import org.apache.maven.project.builder.PomClassicTransformer;
+import org.apache.maven.project.builder.*;
+            List<Profile> activeProfiles;
+            try
+            {
+                activeProfiles = getActiveProfilesFromModel(new PomClassicDomainModel(
+                        new FileInputStream( projectDescriptor )).getModel(), config, projectDescriptor, true);
+            } catch (IOException e)
+            {
+                throw new ProjectBuildingException("", e.getMessage());
+            }
+
+            Properties activeProfileProperties = new Properties();
+            for(Profile profile : activeProfiles)
+            {
+                activeProfileProperties.putAll(profile.getProperties());
+            }
+
-                getSuperProject( config, projectDescriptor, true ).getModel() ), artifactResolver ), config );
+                getSuperProject( config, projectDescriptor, true ).getModel() ), artifactResolver ), config,
+                    activeProfileProperties );
-            project = buildInternal( project.getModel(), config, projectDescriptor, project.getParentFile(), true );
+
+            project = buildMavenProject( project.getModel(), config, projectDescriptor, project.getParentFile(), activeProfiles);
+
+            List<Profile> activeProfiles;
+            try
+            {
+                activeProfiles = this.getActiveProfilesFromModel(new PomClassicDomainModel( 
+                        new FileInputStream( artifact.getFile())).getModel(), config, artifact.getFile(), true);
+            } catch (IOException e)
+            {
+                throw new ProjectBuildingException("", e.getMessage());
+            }
+
+            Properties activeProfileProperties = new Properties();
+            for(Profile profile : activeProfiles)
+            {
+                activeProfileProperties.putAll(profile.getProperties());
+            }
+
-                config.getLocalRepository(), artifactRepositories, artifactResolver ), config );
-            project = buildInternal( project.getModel(), config, artifact.getFile(), project.getParentFile(), false );
+                config.getLocalRepository(), artifactRepositories, artifactResolver ), config, activeProfileProperties );
+            project = buildMavenProject( project.getModel(), config, artifact.getFile(), project.getParentFile(),
+                    activeProfiles);
-    private MavenProject buildInternal( Model model, ProjectBuilderConfiguration config, File projectDescriptor,
-                                        File parentDescriptor, boolean isReactorProject )
-        throws ProjectBuildingException
+    private List<Profile> getActiveProfilesFromModel(Model model, ProjectBuilderConfiguration config,
+                                                     File projectDescriptor, boolean isReactorProject)
+                    throws ProjectBuildingException
+
+        List<Profile> projectProfiles = new ArrayList<Profile>();
+        projectProfiles.addAll( profileAdvisor.applyActivatedProfiles( model, projectDescriptor,
+                                                                       isReactorProject, profileActivationContext ) );
+        projectProfiles.addAll( profileAdvisor.applyActivatedExternalProfiles( model, projectDescriptor,
+                                                                               externalProfileManager ) );
+        return projectProfiles;
+    }
+
+    private MavenProject buildMavenProject( Model model, ProjectBuilderConfiguration config, File projectDescriptor,
+                                        File parentDescriptor, List<Profile> projectProfiles )
+        throws ProjectBuildingException
+    {
+        String projectId = safeVersionlessKey( model.getGroupId(), model.getArtifactId() );
+
-        List<Profile> projectProfiles = new ArrayList<Profile>();
-        projectProfiles.addAll( profileAdvisor.applyActivatedProfiles( project.getModel(), project.getFile(),
-                                                                       isReactorProject, profileActivationContext ) );
-        projectProfiles.addAll( profileAdvisor.applyActivatedExternalProfiles( project.getModel(), project.getFile(),
-                                                                               externalProfileManager ) );
-        String projectId = safeVersionlessKey( model.getGroupId(), model.getArtifactId() );
-
-        ProfileActivationContext profileActivationContext;
-        ProfileManager externalProfileManager = config.getGlobalProfileManager();
-        if ( externalProfileManager != null )
-        {
-            // used to trigger the caching of SystemProperties in the container context...
-            try
-            {
-                externalProfileManager.getActiveProfiles();
-            }
-            catch ( ProfileActivationException e )
-            {
-                throw new ProjectBuildingException( projectId, "Failed to activate external profiles.",
-                                                    projectDescriptor, e );
-            }
-            profileActivationContext = externalProfileManager.getProfileActivationContext();
-        }
-        else
-        {
-            profileActivationContext = new DefaultProfileActivationContext( config.getExecutionProperties(), false );
-        }
-
-        List<Profile> superProjectProfiles = new ArrayList<Profile>();
-        superProjectProfiles.addAll( profileAdvisor.applyActivatedProfiles( model, projectDescriptor, isReactorProject,
-                                                                            profileActivationContext ) );
-        superProjectProfiles.addAll(
-            profileAdvisor.applyActivatedExternalProfiles( model, projectDescriptor, externalProfileManager ) );
-        superProject.setActiveProfiles( superProjectProfiles );
+        superProject.setActiveProfiles( getActiveProfilesFromModel(model, config, projectDescriptor, isReactorProject) );
-                                                 ProjectBuilderConfiguration config )
+                                                 ProjectBuilderConfiguration config, Properties profileProperties )
+        if(profileProperties != null)
+        {
+            interpolatorProperties.addAll(InterpolatorProperty.toInterpolatorProperties( profileProperties,
+                    PomInterpolatorTag.SYSTEM_PROPERTIES.name()));
+        }
-
+        mavenProject.getProperties().putAll(profileProperties);

UPD40 INS31 INS83 INS74 INS42 INS44 INS44 INS44 MOV44 INS43 INS8 UPD42 INS44 INS44 INS43 INS43 INS43 INS42 INS43 INS42 INS43 INS42 INS42 MOV60 MOV60 MOV60 MOV25 MOV60 MOV21 MOV21 INS41 MOV74 INS42 INS21 INS43 INS42 INS25 INS21 MOV21 MOV21 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS27 INS8 INS32 INS60 INS54 INS60 INS70 INS60 INS54 INS60 INS70 UPD42 UPD42 INS42 INS42 INS32 INS42 INS33 INS21 INS32 INS42 INS42 INS74 INS59 INS8 INS12 INS43 INS59 INS44 INS42 INS8 INS74 INS59 INS8 INS12 INS43 INS59 INS44 INS42 INS8 INS42 INS42 MOV42 INS42 UPD42 MOV42 INS32 INS42 INS42 INS43 INS43 INS42 INS21 INS44 INS8 INS42 INS42 INS14 INS43 INS42 INS21 INS43 INS43 INS42 INS21 INS44 INS8 INS42 INS42 INS14 MOV43 INS42 INS21 INS42 INS42 INS32 INS42 INS42 INS7 INS43 INS42 INS53 INS43 INS42 INS32 INS42 UPD42 INS42 INS42 INS42 INS7 INS43 INS42 INS53 INS43 INS32 INS42 UPD42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS32 INS40 INS42 INS42 INS32 INS42 INS42 INS9 INS43 INS45 INS32 INS42 INS42 INS52 INS42 INS32 INS42 INS32 INS9 INS43 INS45 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS14 INS43 INS14 INS42 INS43 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL9 DEL9 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL42 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL9 DEL14 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21