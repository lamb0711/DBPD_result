also delete .wtpmodules files + some code cleanup

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@315062 13f79535-47bb-0310-9956-ffa450edef68

- * 
+ *
- * 
+ *
- * 
+ *
-
+import java.text.MessageFormat;
+
-
- * A Maven2 plugin to delete the .project and .classpath files needed for Eclipse
+ * A Maven2 plugin to delete the .project, .classpath and .wtpmodules files needed for Eclipse.
-public class EclipseCleanMojo extends AbstractMojo
+public class EclipseCleanMojo
+    extends AbstractMojo
-    private String basedir;
-    
-    public void execute() throws MojoExecutionException
+    private File basedir;
+
+    public void execute()
+        throws MojoExecutionException
-        File f = new File( basedir, ".project" );
-        
-        getLog().info( "Deleting project file..." );
-        if ( f.exists() )
-        {
-            if ( !f.delete() )
-            {
-                throw new MojoExecutionException( "Failed to delete project file: " + f.getAbsolutePath() );
-            }
-        }
-        else
-            getLog().info( "No .project file found." );
-        
-        f = new File( basedir, ".classpath" );
-        
-        getLog().info( "Deleting classpath file..." );
-        if ( f.exists() )
-        {
-            if ( !f.delete() )
-            {
-                throw new MojoExecutionException( "Failed to delete classpath file: " + f.getAbsolutePath() );
-            }
-        }
-        else
-            getLog().info( "No .classpath file found." );
+        delete( new File( basedir, ".project" ) );
+        delete( new File( basedir, ".classpath" ) );
+        delete( new File( basedir, ".wtpmodules" ) );
+
+    /**
+     * Delete a file, handling log messages and exceptions
+     * @param f File to be deleted
+     * @throws MojoExecutionException only if a file exists and can't be deleted
+     */
+    private void delete( File f )
+        throws MojoExecutionException
+    {
+        getLog().info( MessageFormat.format( "Deleting {0} file...", new Object[] { f.getName() } ) );
+
+        if ( f.exists() )
+        {
+            if ( !f.delete() )
+            {
+                throw new MojoExecutionException( MessageFormat.format( "Failed to delete {0} file: {0}", new Object[] {
+                    f.getName(),
+                    f.getAbsolutePath() } ) )
+                {
+                };
+            }
+        }
+        else
+        {
+            getLog().info( MessageFormat.format( "No {0} file found", new Object[] { f.getName() } ) );
+        }
+    }
+

INS26 INS40 INS31 INS31 UPD43 MOV83 MOV39 MOV42 MOV43 INS8 INS29 INS83 INS39 INS42 INS44 MOV43 INS8 UPD66 UPD42 INS21 MOV21 MOV21 INS65 INS65 INS65 INS43 INS42 INS21 MOV25 INS32 INS32 INS66 INS42 INS66 INS42 INS66 INS42 INS32 INS8 INS42 MOV14 INS42 MOV14 UPD42 MOV42 INS14 MOV32 UPD42 MOV42 INS32 INS21 MOV43 INS42 INS45 UPD42 MOV42 UPD42 MOV42 UPD45 MOV45 INS3 MOV32 INS5 INS4 INS32 INS43 INS85 INS32 INS42 INS42 UPD45 MOV45 INS3 INS42 UPD42 MOV42 INS42 INS32 INS1 INS5 INS4 INS42 INS42 INS45 INS3 INS43 INS85 INS32 INS5 INS4 INS42 INS42 INS42 INS43 INS85 INS32 MOV32 INS42 INS42 INS42 DEL42 DEL7 DEL32 DEL42 DEL45 DEL45 DEL27 DEL21 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL38 DEL45 DEL42 DEL32 DEL27 DEL14 DEL53 DEL8 DEL25 DEL8 DEL32 DEL32 DEL21 DEL25 DEL45 DEL32 DEL21 DEL8 DEL31