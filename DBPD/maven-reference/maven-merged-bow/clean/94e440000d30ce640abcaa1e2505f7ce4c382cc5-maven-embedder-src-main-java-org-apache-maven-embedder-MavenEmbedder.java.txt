o merge of the maven-embedder-refactor branch into the trunk



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@392327 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.BuildFailureException;
+import org.apache.maven.Maven;
+import org.apache.maven.MavenTools;
+import org.apache.maven.SettingsConfigurationException;
-import org.apache.maven.execution.MavenSession;
-import org.apache.maven.execution.ReactorManager;
-import org.apache.maven.lifecycle.LifecycleExecutionException;
+import org.apache.maven.execution.MavenExecutionRequest;
-import org.apache.maven.monitor.event.DefaultEventDispatcher;
-import org.apache.maven.monitor.event.EventDispatcher;
-import org.apache.maven.monitor.event.EventMonitor;
-import org.apache.maven.project.DuplicateProjectException;
+import org.apache.maven.reactor.MavenExecutionException;
-import org.apache.maven.settings.RuntimeInfo;
-import org.codehaus.plexus.util.dag.CycleDetectedException;
-import java.util.Collections;
-import java.util.Date;
-import java.util.Properties;
+    //
+    // ----------------------------------------------------------------------
+
+    private Maven maven;
+
+    private MavenTools mavenTools;
+
+    // ----------------------------------------------------------------------
+    private ClassWorld classWorld;
+
+    public void setClassWorld( ClassWorld classWorld )
+    {
+        this.classWorld = classWorld;
+    }
+
+    public ClassWorld getClassWorld()
+    {
+        return classWorld;
+    }
+
-    // TODO: should we allow the passing in of a settings object so that everything can be taken from the client env
-    // TODO: transfer listener
-    // TODO: logger
-
-    public void execute( MavenProject project,
-                         List goals,
-                         EventMonitor eventMonitor,
-                         TransferListener transferListener,
-                         Properties properties,
-                         File executionRootDirectory )
-        throws CycleDetectedException, LifecycleExecutionException, BuildFailureException, DuplicateProjectException
-    {
-        execute( Collections.singletonList( project ), goals, eventMonitor, transferListener, properties, executionRootDirectory );
-    }
-
-    public void execute( List projects,
-                         List goals,
-                         EventMonitor eventMonitor,
-                         TransferListener transferListener,
-                         Properties properties,
-                         File executionRootDirectory )
-        throws CycleDetectedException, LifecycleExecutionException, BuildFailureException, DuplicateProjectException
-    {
-        ReactorManager rm = new ReactorManager( projects );
-
-        EventDispatcher eventDispatcher = new DefaultEventDispatcher();
-
-        eventDispatcher.addEventMonitor( eventMonitor );
-
-        // If this option is set the exception seems to be hidden ...
-
-        //rm.setFailureBehavior( ReactorManager.FAIL_AT_END );
-
-        rm.setFailureBehavior( ReactorManager.FAIL_FAST );
-
-        MavenSession session = new MavenSession( embedder.getContainer(),
-                                                 settings,
-                                                 localRepository,
-                                                 eventDispatcher,
-                                                 rm,
-                                                 goals,
-                                                 executionRootDirectory.getAbsolutePath(),
-                                                 properties,
-                                                 new Date() );
-
-        session.setUsingPOMsFromFilesystem( true );
-
-        if ( transferListener != null )
-        {
-            wagonManager.setDownloadMonitor( transferListener );
-        }
-
-        // ----------------------------------------------------------------------
-        // Maven should not be using system properties internally but because
-        // it does for now I'll just take properties that are handed to me
-        // and set them so that the plugin expression evaluator will work
-        // as expected.
-        // ----------------------------------------------------------------------
-
-        if ( properties != null )
-        {
-            for ( Iterator i = properties.keySet().iterator(); i.hasNext(); )
-            {
-                String key = (String) i.next();
-
-                String value = properties.getProperty( key );
-
-                System.setProperty( key, value );
-            }
-        }
-
-        lifecycleExecutor.execute( session, rm, session.getEventDispatcher() );
-    }
-
-        throws ComponentLookupException
-        throws ComponentLookupException
-        throws ComponentLookupException
-    private RuntimeInfo createRuntimeInfo( Settings settings )
-    {
-        RuntimeInfo runtimeInfo = new RuntimeInfo( settings );
-
-        runtimeInfo.setPluginUpdateOverride( Boolean.FALSE );
-
-        return runtimeInfo;
-    }
-
-        if ( classLoader == null )
+        if ( classWorld == null && classLoader == null )
-            throw new IllegalStateException( "A classloader must be specified using setClassLoader(ClassLoader)." );
+            throw new IllegalStateException( "A classWorld or classloader must be specified using setClassLoader|World(ClassLoader)." );
-            ClassWorld classWorld = new ClassWorld();
+            if ( classWorld == null )
+            {
+                classWorld = new ClassWorld();
-            classWorld.newRealm( "plexus.core", classLoader );
+                classWorld.newRealm( "plexus.core", classLoader );
+            }
+            maven = (Maven) embedder.lookup( Maven.ROLE );
+
+            mavenTools = (MavenTools) embedder.lookup( MavenTools.ROLE );
+
-            createMavenSettings();
-
-
-            localRepository = createLocalRepository( settings );
-    /**
-     * Create the Settings that will be used with the embedder. If we are aligning with the user
-     * installation then we lookup the standard settings builder and use that to create our
-     * settings. Otherwise we constructs a settings object and populate the information
-     * ourselves.
-     *
-     * @throws MavenEmbedderException
-     * @throws ComponentLookupException
-     */
-    private void createMavenSettings()
-        throws MavenEmbedderException, ComponentLookupException
-    {
-        if ( alignWithUserInstallation )
-        {
-            // ----------------------------------------------------------------------
-            // We will use the standard method for creating the settings. This
-            // method reproduces the method of building the settings from the CLI
-            // mode of operation.
-            // ----------------------------------------------------------------------
-
-            settingsBuilder = (MavenSettingsBuilder) embedder.lookup( MavenSettingsBuilder.ROLE );
-
-            try
-            {
-                settings = settingsBuilder.buildSettings();
-            }
-            catch ( IOException e )
-            {
-                throw new MavenEmbedderException( "Error creating settings.", e );
-            }
-            catch ( XmlPullParserException e )
-            {
-                throw new MavenEmbedderException( "Error creating settings.", e );
-            }
-        }
-        else
-        {
-            if ( localRepository == null )
-            {
-                throw new IllegalArgumentException( "When not aligning with a user install you must specify a local repository location using the setLocalRepositoryDirectory( File ) method." );
-            }
-
-            settings = new Settings();
-
-            settings.setLocalRepository( localRepositoryDirectory.getAbsolutePath() );
-
-            settings.setRuntimeInfo( createRuntimeInfo( settings ) );
-
-            settings.setOffline( offline );
-
-            settings.setInteractiveMode( interactiveMode );
-        }
-    }
-
+
+    // ----------------------------------------------------------------------
+    // Start of new embedder API
+    // ----------------------------------------------------------------------
+
+    public void execute( MavenExecutionRequest request )
+        throws MavenExecutionException
+    {
+        maven.execute(  request );
+    }
+
+    public Settings buildSettings( File userSettingsPath,
+                                   File globalSettingsPath,
+                                   boolean interactive,
+                                   boolean offline,
+                                   boolean usePluginRegistry,
+                                   Boolean pluginUpdateOverride )
+        throws SettingsConfigurationException
+    {
+        return mavenTools.buildSettings( userSettingsPath,
+                                                 globalSettingsPath,
+                                                 interactive,
+                                                 offline,
+                                                 usePluginRegistry,
+                                                 pluginUpdateOverride );
+    }
+
+    public File getUserSettingsPath( String optionalSettingsPath )
+    {
+        return mavenTools.getUserSettingsPath( optionalSettingsPath );
+    }
+
+    public File getGlobalSettingsPath()
+    {
+        return mavenTools.getGlobalSettingsPath();
+    }
+
+    public String getLocalRepositoryPath( Settings settings )
+    {
+        return mavenTools.getLocalRepositoryPath( settings );
+    }

MOV26 MOV26 MOV26 MOV26 MOV31 MOV31 UPD40 UPD40 UPD40 UPD40 UPD40 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS39 INS42 MOV44 INS8 INS83 UPD43 MOV43 INS42 MOV8 MOV83 MOV39 MOV42 MOV44 UPD43 MOV43 INS8 INS83 MOV43 INS42 MOV44 MOV44 INS44 INS44 INS44 INS44 INS43 INS8 INS83 INS43 INS42 INS44 INS8 UPD83 UPD43 UPD42 UPD83 MOV43 INS42 MOV44 INS8 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 MOV43 INS42 INS21 UPD42 INS41 UPD43 UPD42 UPD42 MOV21 UPD42 UPD42 INS39 INS42 INS39 INS42 INS39 INS42 INS43 INS42 INS42 INS41 UPD42 MOV42 MOV43 INS42 INS41 UPD42 INS41 INS41 INS7 INS42 INS27 MOV21 MOV21 UPD42 UPD42 MOV42 INS32 INS32 INS32 INS32 INS22 INS42 INS27 MOV27 INS25 UPD42 UPD42 UPD42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 INS52 INS42 INS42 INS33 INS27 INS8 INS7 UPD45 INS42 INS33 INS21 MOV21 INS42 INS11 UPD42 INS11 INS7 INS43 INS32 INS43 INS32 INS42 MOV14 INS42 UPD42 MOV42 INS42 INS40 INS42 UPD42 MOV42 UPD42 MOV42 INS40 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL83 DEL39 DEL42 DEL43 DEL42 DEL44 DEL43 DEL42 DEL44 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL31 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL14 DEL14 DEL59 DEL60 DEL42 DEL42 DEL9 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL31 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL59 DEL60 DEL32 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL40 DEL32 DEL21 DEL42 DEL41 DEL66 DEL66 DEL66 DEL66 DEL65 DEL42 DEL65 DEL42 DEL65 DEL29 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL40 DEL32 DEL11 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL33 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL14 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8