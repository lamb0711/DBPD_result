Applying partial patch for MNG-266. Thanks Andreas.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@216282 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.handler.ArtifactHandler;
+import org.apache.maven.artifact.handler.manager.ArtifactHandlerManager;
+import org.codehaus.plexus.util.introspection.ReflectionValueExtractor;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+    /**
+     * Handler to get the file extension matching a given artifactType
+     *
+     * @parameter expression="${component.org.apache.maven.artifact.handler.manager.ArtifactHandlerManager}"
+     * @required
+     */
+    private ArtifactHandlerManager artifactHandlerManager;
+ 
-        throws ArchiverException, IOException
+        throws ArchiverException, IOException, Exception
-            DependencySet depedencySet = (DependencySet) i.next();
-            String output = depedencySet.getOutputDirectory();
+            DependencySet dependencySet = (DependencySet) i.next();
+            String output = dependencySet.getOutputDirectory();
-            filter.add( new ScopeArtifactFilter( depedencySet.getScope() ) );
-            if ( !depedencySet.getIncludes().isEmpty() )
+            filter.add( new ScopeArtifactFilter( dependencySet.getScope() ) );
+            if ( !dependencySet.getIncludes().isEmpty() )
-                filter.add( new IncludesArtifactFilter( depedencySet.getIncludes() ) );
+                filter.add( new IncludesArtifactFilter( dependencySet.getIncludes() ) );
-            if ( !depedencySet.getExcludes().isEmpty() )
+            if ( !dependencySet.getExcludes().isEmpty() )
-                filter.add( new ExcludesArtifactFilter( depedencySet.getExcludes() ) );
+                filter.add( new ExcludesArtifactFilter( dependencySet.getExcludes() ) );
-                    if ( depedencySet.isUnpack() )
+                    if ( dependencySet.isUnpack() )
-                        archiver.addFile( artifact.getFile(), output + name );
-                    }
+                        archiver.addFile( artifact.getFile(), output + evaluateFileNameMapping( dependencySet.getOutputFileNameMapping(), artifact ));
+                    }                    
+    private String evaluateFileNameMapping( String expression, Artifact artifact ) 
+        throws Exception
+    {
+        // this matches the last ${...} string
+        Pattern pat = Pattern.compile( "^(.*)\\$\\{([^\\}]+)\\}(.*)$" );
+        Matcher mat = pat.matcher(expression);
+
+        String left,right;
+        Object middle;
+
+        if ( mat.matches() ) 
+        {
+            left   = evaluateFileNameMapping( mat.group(1), artifact );
+            middle = ReflectionValueExtractor.evaluate( "dep." + mat.group(2), artifact );
+            right  = mat.group(3);
+
+            if ( middle == null )
+            {
+                // TODO: There should be a more generic way dealing with that. Having magic words is not good at all.
+                // probe for magic word
+                if ( mat.group(2).trim().equals( "extension" ))  
+                {
+                    ArtifactHandler artifactHandler  = artifactHandlerManager.getArtifactHandler( artifact.getType() );
+                    middle = artifactHandler.getExtension();
+                }
+                else
+                {
+                    middle = "${" + mat.group(2) + "}";
+                }
+            }
+           
+            return left + middle + right;
+        }
+
+        return expression;
+    }
+

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS29 INS83 INS43 INS59 INS43 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS65 INS65 INS65 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS60 INS60 INS60 INS25 INS41 INS66 INS66 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS59 INS43 INS59 INS32 INS8 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS21 INS21 INS25 INS41 INS42 INS42 INS45 INS42 INS42 INS42 INS7 INS7 INS7 INS27 INS8 INS27 UPD42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS33 INS25 INS42 INS42 INS42 UPD42 INS42 INS32 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS34 INS32 INS8 INS8 UPD42 UPD42 UPD42 INS42 INS42 INS34 INS45 INS32 INS32 INS42 INS45 INS60 INS21 INS21 INS42 INS42 INS34 INS32 INS42 INS43 INS59 INS7 INS7 UPD42 UPD42 UPD42 INS42 INS42 INS34 INS42 INS42 INS32 INS42 INS32 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS45 INS32 INS45 INS42 INS42 INS42 INS42 INS34 INS32 INS42 INS32 INS42 INS42 INS42 DEL42