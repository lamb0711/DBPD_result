Resolving: MNG-397

o Added ResolutionGroup class which contains a set of artifacts and a list of repositories to resolve them.
o Made the ResolutionNode a standalone class, and added the remote repositories to it
o Changed ArtifactMetadataSource.retrieve(..) to return ResolutionGroup rather than Set, in order to help keep track of the repositories which should be used to resolve the retrieved artifacts.

We need some tests for this...


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219276 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.metadata.ResolutionGroup;
+import org.apache.maven.artifact.repository.ArtifactRepositoryFactory;
+import org.codehaus.plexus.PlexusConstants;
+import org.codehaus.plexus.PlexusContainer;
+import org.codehaus.plexus.context.Context;
+import org.codehaus.plexus.context.ContextException;
+import org.codehaus.plexus.personality.plexus.lifecycle.phase.Contextualizable;
+    implements Contextualizable
+    private ArtifactRepositoryFactory repositoryFactory;
+    private PlexusContainer container;
+
+        private final ArtifactRepositoryFactory repositoryFactory;
+        private final PlexusContainer container;
-        public Source( ArtifactFactory artifactFactory )
+        public Source( ArtifactFactory artifactFactory, ArtifactRepositoryFactory repositoryFactory, PlexusContainer container )
+            this.repositoryFactory = repositoryFactory;
+            this.container = container;
-        public Set retrieve( Artifact artifact, ArtifactRepository localRepository, List remoteRepositories )
+        public ResolutionGroup retrieve( Artifact artifact, ArtifactRepository localRepository, List remoteRepositories )
-            return createArtifacts( model.getDependencies(), artifact.getScope() );
+            
+            Set artifacts = createArtifacts( model.getDependencies(), artifact.getScope() );
+            
+            List artifactRepositories;
+            try
+            {
+                artifactRepositories = ProjectUtils.buildArtifactRepositories( model.getRepositories(), repositoryFactory, container );
+            }
+            catch ( ProjectBuildingException e )
+            {
+                throw new ArtifactMetadataRetrievalException( e );
+            }
+            
+            return new ResolutionGroup( artifacts, artifactRepositories );
-
+    
-                                          new Source( artifactFactory ), filter );
+                                          new Source( artifactFactory, repositoryFactory, container ), filter );
-                                          new Source( artifactFactory ) );
+                                          new Source( artifactFactory, repositoryFactory, container ) );
+    }
+
+    public void contextualize( Context context )
+        throws ContextException
+    {
+        this.container = (PlexusContainer) context.get( PlexusConstants.PLEXUS_KEY );

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS43 INS23 INS23 INS31 INS42 INS83 INS43 INS59 INS83 INS43 INS59 INS23 INS23 INS83 INS39 INS42 INS44 INS43 INS8 INS42 INS42 INS42 INS42 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS44 INS44 INS43 INS43 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS21 INS21 INS42 INS60 INS60 INS54 INS42 INS7 INS42 INS42 INS7 INS7 MOV43 INS59 INS43 INS59 INS8 INS12 INS14 INS14 MOV14 INS22 INS11 INS22 INS42 INS22 INS42 INS42 MOV32 INS42 INS42 INS21 INS44 INS8 INS43 INS42 INS42 MOV43 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS43 INS32 INS52 INS42 INS52 INS42 INS7 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS40 INS42 INS32 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS43 INS42 INS42 INS42 INS42 DEL42 DEL14