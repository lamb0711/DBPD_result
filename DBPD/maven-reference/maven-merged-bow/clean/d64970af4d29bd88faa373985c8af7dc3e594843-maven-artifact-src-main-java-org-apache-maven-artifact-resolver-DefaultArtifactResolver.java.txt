propogate more ArtifactResolutionExceptions directly

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@169557 13f79535-47bb-0310-9956-ffa450edef68

-                throw new ArtifactResolutionException( e.getMessage(), e );
+                throw new ArtifactResolutionException( e.getMessage(), artifact, remoteRepositories, e );
-                throw new ArtifactResolutionException( artifactNotFound( localPath, remoteRepositories ), artifact, e );
+                throw new ArtifactResolutionException( e.getMessage(), artifact, remoteRepositories, e );
-                throw new ArtifactResolutionException( e.getMessage(), artifact, e );
+                throw new ArtifactResolutionException( e.getMessage(), artifact, remoteRepositories, e );
-                throw new ArtifactResolutionException( "Error downloading artifact " + artifact, e );
+                throw new ArtifactResolutionException( e.getMessage(), artifact, remoteRepositories, e );
-    private static final String LS = System.getProperty( "line.separator" );
-
-    private String artifactNotFound( String path, List remoteRepositories )
-    {
-        StringBuffer sb = new StringBuffer();
-
-        sb.append( "The artifact is not present locally as:" );
-        sb.append( LS );
-        sb.append( LS );
-        sb.append( path );
-        sb.append( LS );
-        sb.append( LS );
-        sb.append( "or in any of the specified remote repositories:" );
-        sb.append( LS );
-        sb.append( LS );
-
-        for ( Iterator i = remoteRepositories.iterator(); i.hasNext(); )
-        {
-            ArtifactRepository remoteRepository = (ArtifactRepository) i.next();
-
-            sb.append( remoteRepository.getUrl() );
-            if ( i.hasNext() )
-            {
-                sb.append( ", " );
-            }
-        }
-
-        return sb.toString();
-    }
-
-        try
-        {
-            artifactResolutionResult = collect( artifacts, localRepository, remoteRepositories, source, filter );
-        }
-        catch ( TransitiveArtifactResolutionException e )
-        {
-            throw new ArtifactResolutionException( "Error transitively resolving artifacts: ", e );
-        }
+        artifactResolutionResult = collect( artifacts, localRepository, remoteRepositories, source, filter );
-        throws TransitiveArtifactResolutionException
+        throws ArtifactResolutionException
-                        throw new TransitiveArtifactResolutionException( "Error retrieving metadata [" + newArtifact +
-                                                                         "] : ", e );
+                        throw new TransitiveArtifactResolutionException( e.getMessage(), newArtifact,
+                                                                         remoteRepositories, e );

MOV43 MOV21 INS42 INS42 INS42 INS42 INS32 INS42 INS42 UPD42 UPD42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 DEL42 DEL45 DEL42 DEL27 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL8 DEL42 DEL43 DEL42 DEL44 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL45 DEL42 DEL45 DEL27