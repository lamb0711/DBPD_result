Cleaning up exception wrapping to allow better reporting of errors to end users. Also implementing the beginnings of a new error reporter, and bumping the version of plexus-container-default up to 1.0-alpha-33-SNAPSHOT to improve the accessibility to ClassRealm info for ComponentLookupException.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@584343 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.PlexusConstants;
+import org.codehaus.plexus.PlexusContainer;
+import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
+import org.codehaus.plexus.context.Context;
+import org.codehaus.plexus.context.ContextException;
+import org.codehaus.plexus.personality.plexus.lifecycle.phase.Contextualizable;
-    implements ArtifactMetadataSource
+    implements ArtifactMetadataSource, Contextualizable
-    
+
+    private PlexusContainer container;
+
+        try
+        {
+            loadProjectBuilder();
+        }
+        catch ( ComponentLookupException e )
+        {
+            throw new ArtifactMetadataRetrievalException( "Cannot lookup MavenProjectBuilder component instance: " + e.getMessage(), e );
+        }
+
-        
+
-                
+
-                            
+
-                
+
-                        
+
-                        if ( artifact.getDependencyFilter() != null &&
+                        if ( ( artifact.getDependencyFilter() != null ) &&
-                        if ( artifact.getDependencyTrail() != null && artifact.getDependencyTrail().size() == 1 )
+                        if ( ( artifact.getDependencyTrail() != null ) && ( artifact.getDependencyTrail().size() == 1 ) )
-        }        
-        
+        }
+
+    private void loadProjectBuilder()
+        throws ComponentLookupException
+    {
+        if ( mavenProjectBuilder == null )
+        {
+            mavenProjectBuilder = (MavenProjectBuilder) container.lookup( MavenProjectBuilder.class );
+        }
+    }
+
-                // if the repository exists in the list and was introduced by another POM's super-pom, 
+                // if the repository exists in the list and was introduced by another POM's super-pom,
-            
-            if ( artifact != null && ( artifactFilter == null || artifactFilter.include( artifact ) ) )
+
+            if ( ( artifact != null ) && ( ( artifactFilter == null ) || artifactFilter.include( artifact ) ) )
-                if ( d.getExclusions() != null && !d.getExclusions().isEmpty() )
+                if ( ( d.getExclusions() != null ) && !d.getExclusions().isEmpty() )
-        if ( repoMetadata != null && repoMetadata.getVersioning() != null )
+        if ( ( repoMetadata != null ) && ( repoMetadata.getVersioning() != null ) )
+
+    public void contextualize( Context context )
+        throws ContextException
+    {
+        container = (PlexusContainer) context.get( PlexusConstants.PLEXUS_KEY );
+    }

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS43 INS23 INS31 INS31 INS42 INS83 INS43 INS59 INS83 INS39 INS42 INS43 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS42 INS42 INS54 INS42 INS25 INS43 INS42 INS42 INS21 INS8 INS12 INS27 INS8 INS42 INS7 INS21 INS44 INS8 INS42 INS33 INS21 INS36 INS36 INS42 INS11 INS32 INS43 INS42 INS53 INS7 MOV27 MOV27 INS43 INS32 INS42 INS42 INS14 INS42 INS11 INS36 INS42 INS42 INS42 INS40 INS43 INS27 INS42 INS43 INS32 MOV27 INS42 INS45 INS32 INS42 INS42 INS42 INS57 INS36 INS36 INS42 INS42 INS43 MOV27 MOV27 INS42 INS36 INS36 INS36 MOV27 MOV27 MOV27