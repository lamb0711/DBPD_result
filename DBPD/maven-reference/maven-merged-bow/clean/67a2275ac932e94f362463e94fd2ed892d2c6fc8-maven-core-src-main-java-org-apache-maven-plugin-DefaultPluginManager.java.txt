[MNG-4274] Plugins with an undeclared but transitive dependency on plexus-utils via a core artifact get wrong version of p-u

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@800087 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.resolver.filter.AndArtifactFilter;
+import org.apache.maven.artifact.resolver.filter.ArtifactFilter;
+    /**
+     * Gets all artifacts required for the class realm of the specified plugin. An artifact in the result list that has
+     * no file set is meant to be excluded from the plugin realm in favor of the equivalent library from the current
+     * core distro.
+     */
-        AndArtifactFilter filter = new AndArtifactFilter();
-        filter.add( coreArtifactFilterManager.getCoreArtifactFilter() );
-        filter.add( new ScopeArtifactFilter( Artifact.SCOPE_RUNTIME_PLUS_SYSTEM ) );
+        ArtifactFilter filter = new ScopeArtifactFilter( Artifact.SCOPE_RUNTIME_PLUS_SYSTEM );
+            .setResolveRoot( true )
-            //.setResolveRoot( false );
-        ArtifactResolutionResult result = repositorySystem.resolve( request );
+        ArtifactResolutionResult result = repositorySystem.collect( request );
-        logger.debug( "Using the following artifacts for classpath of: " + pluginArtifact.getId() + ":\n\n" + result.getArtifacts().toString().replace( ',', '\n' ) );
+        List<Artifact> pluginArtifacts = new ArrayList<Artifact>( result.getArtifacts() );
-        return new ArrayList<Artifact>( result.getArtifacts() );
+        request.setResolveRoot( true ).setResolveTransitively( false ).setArtifactDependencies( null );
+
+        filter = coreArtifactFilterManager.getCoreArtifactFilter();
+
+        for ( Artifact artifact : pluginArtifacts )
+        {
+            if ( filter.include( artifact ) )
+            {
+                result = repositorySystem.resolve( request.setArtifact( artifact ) );
+                resolutionErrorHandler.throwErrors( request, result );
+            }
+            else
+            {
+                artifact.setFile( null );
+            }
+        }
+
+        return pluginArtifacts;
+        if ( logger.isDebugEnabled() )
+        {
+            logger.debug( "Populating plugin realm for " + constructPluginKey( plugin ) );
+        }
+
-            try
+            if ( a.getFile() != null )
-                pluginRealm.addURL( a.getFile().toURI().toURL() );
+                if ( logger.isDebugEnabled() )
+                {
+                    logger.debug( "  Included: " + a.getId() );
+                }
+
+                try
+                {
+                    pluginRealm.addURL( a.getFile().toURI().toURL() );
+                }
+                catch ( MalformedURLException e )
+                {
+                    // Not going to happen
+                }
-            catch ( MalformedURLException e )
+            else
-                // Not going to happen
+                if ( logger.isDebugEnabled() )
+                {
+                    logger.debug( "  Excluded: " + a.getId() );
+                }

UPD40 INS29 MOV21 INS65 INS60 INS60 INS60 INS21 INS70 INS25 INS66 INS66 INS66 UPD43 MOV43 INS59 MOV43 INS59 INS74 INS59 INS32 INS7 INS44 INS42 INS8 INS42 INS32 INS8 INS8 UPD42 MOV42 MOV14 INS32 INS42 INS32 INS43 INS43 INS42 MOV14 INS32 INS42 INS33 INS42 MOV32 INS43 INS42 INS25 INS42 INS42 INS21 INS25 MOV32 INS42 INS9 INS42 INS42 INS42 INS42 UPD42 MOV42 INS32 INS42 INS9 INS42 INS32 INS8 INS8 INS32 INS27 MOV8 INS8 UPD42 INS42 INS42 INS9 MOV42 INS42 UPD42 MOV42 INS21 INS21 INS21 INS42 INS42 INS27 INS32 INS33 INS25 INS25 INS7 INS32 INS32 INS45 INS32 INS42 INS42 INS32 INS8 INS32 INS8 INS42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 INS33 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS21 MOV42 MOV42 INS32 INS32 INS32 MOV42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS45 INS32 INS45 INS32 INS42 INS42 INS42 INS42 DEL43 DEL14 DEL59 DEL60 DEL32 DEL21 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL45 DEL42 DEL32 DEL45 DEL32 DEL42 DEL32 DEL13 DEL13 DEL32 DEL27 DEL32 DEL21