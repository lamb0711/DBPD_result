flesh out assemble mojo


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163603 13f79535-47bb-0310-9956-ffa450edef68

-                                        //"plexus/jars/plexus-container-api-1.0-alpha-1-SNAPSHOT.jar",
-                                        //"plexus/jars/plexus-utils-1.0-alpha-1-SNAPSHOT.jar",
-    String[] builds = new String[]{"maven-model", "maven-settings", "maven-monitor", "maven-plugin",
-                                   "maven-artifact", "maven-script/maven-script-marmalade", "maven-core",
-                                   "maven-archiver", "maven-plugin-tools/maven-plugin-tools-api",
+    String[] builds = new String[]{"maven-model", "maven-settings", "maven-monitor", "maven-plugin", "maven-artifact",
+                                   "maven-script/maven-script-marmalade", "maven-core", "maven-archiver",
+                                   "maven-plugin-tools/maven-plugin-tools-api",
-                                   "maven-plugin-tools/maven-plugin-tools-marmalade", 
-                                   "maven-core-it-verifier"};
+                                   "maven-plugin-tools/maven-plugin-tools-marmalade", "maven-core-it-verifier"};
-    String[] pluginBuilds = new String[]{"maven-plugins/maven-clean-plugin", "maven-plugins/maven-compiler-plugin",
-                                         "maven-plugins/maven-deploy-plugin", "maven-plugins/maven-ejb-plugin",
-                                         "maven-plugins/maven-install-plugin", "maven-plugins/maven-jar-plugin",
-                                         "maven-plugins/maven-plugin-plugin", "maven-plugins/maven-pom-plugin",
-                                         "maven-plugins/maven-resources-plugin", "maven-plugins/maven-surefire-plugin",
-                                         "maven-plugins/maven-war-plugin"};
+    String[] pluginBuilds = new String[]{"maven-plugins/maven-assemble-plugin", "maven-plugins/maven-clean-plugin",
+                                         "maven-plugins/maven-compiler-plugin", "maven-plugins/maven-deploy-plugin",
+                                         "maven-plugins/maven-ejb-plugin", "maven-plugins/maven-install-plugin",
+                                         "maven-plugins/maven-jar-plugin", "maven-plugins/maven-plugin-plugin",
+                                         "maven-plugins/maven-pom-plugin", "maven-plugins/maven-resources-plugin",
+                                         "maven-plugins/maven-surefire-plugin", "maven-plugins/maven-war-plugin"};
+        targetVersions.put( "maven-plugins/maven-assemble-plugin", "1.0.0" );
+        modelFiles.put( "maven-plugins/maven-assemble-plugin", "src/main/mdo/descriptor.mdo" );
-            System.out.println( "You SHOULD have a ~/.m2/settings.xml file and must contain at least the following information:\n" );
+            System.out.println(
+                "You SHOULD have a ~/.m2/settings.xml file and must contain at least the following information:" );
+            System.out.println();
-            System.out.println( "<settings>\n" + "  <profiles>\n" + "    <profile>\n"
-                + "      <active>true</active>\n"
-                + "      <localRepository>/path/to/your/repository</localRepository>\n"
-                + "    </profile>\n" + "  </profiles>\n"
-                + "</settings>\n" );
+            System.out.println( "<settings>" );
+            System.out.println( "  <profiles>" );
+            System.out.println( "    <profile>" );
+            System.out.println( "      <active>true</active>" );
+            System.out.println( "      <localRepository>/path/to/your/repository</localRepository>" );
+            System.out.println( "    </profile>" );
+            System.out.println( "  </profiles>" );
+            System.out.println( "</settings>" );
-            System.out.println( "HOWEVER, since you did not specify a repository path, maven will use: "
-                + repoDir.getAbsolutePath() + " to store artifacts locally." );
+            System.out.println( "HOWEVER, since you did not specify a repository path, maven will use: " +
+                                repoDir.getAbsolutePath() + " to store artifacts locally." );
-                throw new FileNotFoundException( "Missing dependency: " + dependency +
-                                                 ( !online
-                                                   ? "; run again online"
-                                                   : "; there was a problem downloading it earlier" ) );
+                throw new FileNotFoundException(
+                    "Missing dependency: " + dependency +
+                    ( !online ? "; run again online" : "; there was a problem downloading it earlier" ) );
-                throw new FileNotFoundException( "Missing dependency: " + dependency +
-                                                 ( !online
-                                                   ? "; run again online"
-                                                   : "; there was a problem downloading it earlier" ) );
+                throw new FileNotFoundException(
+                    "Missing dependency: " + dependency +
+                    ( !online ? "; run again online" : "; there was a problem downloading it earlier" ) );
-                throw new FileNotFoundException( "Missing dependency: " + dependency +
-                                                 ( !online
-                                                   ? "; run again online"
-                                                   : "; there was a problem downloading it earlier" ) );
+                throw new FileNotFoundException(
+                    "Missing dependency: " + dependency +
+                    ( !online ? "; run again online" : "; there was a problem downloading it earlier" ) );
-        
-        String reportsDir = new File(basedir, "target/test-reports").getAbsolutePath();
-        
+
+        String reportsDir = new File( basedir, "target/test-reports" ).getAbsolutePath();
+
-                    currentProfile.setActive( Boolean.valueOf(currentBody.toString().trim()).booleanValue() );
+                    currentProfile.setActive( Boolean.valueOf( currentBody.toString().trim() ).booleanValue() );
-                    throw new SAXException( "Invalid proxy entry. Missing one or more " +
-                                            "fields: {host, port}." );
+                    throw new SAXException( "Invalid proxy entry. Missing one or more " + "fields: {host, port}." );
-                    currentProxy.setActive( Boolean.valueOf(currentBody.toString().trim()).booleanValue() );
+                    currentProxy.setActive( Boolean.valueOf( currentBody.toString().trim() ).booleanValue() );
-                if( profiles.size() == 1 )
+                if ( profiles.size() == 1 )
-                    activeProfile = (Profile) profiles.get(0);
+                    activeProfile = (Profile) profiles.get( 0 );
-                        if( profile.isActive() )
+                        if ( profile.isActive() )
-                        if( proxy.isActive() )
+                        if ( proxy.isActive() )

INS21 INS21 INS32 INS32 MOV21 INS45 INS42 INS42 INS45 INS45 INS42 INS42 INS45 INS45 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 UPD45 MOV40 MOV42 INS45 INS40 INS42 INS45 INS40 INS42 INS45 INS40 INS42 INS45 INS40 INS42 INS45 INS40 INS42 INS45 INS40 INS42 INS45 INS40 INS42 INS45 INS40 INS42 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL27 DEL32 DEL21