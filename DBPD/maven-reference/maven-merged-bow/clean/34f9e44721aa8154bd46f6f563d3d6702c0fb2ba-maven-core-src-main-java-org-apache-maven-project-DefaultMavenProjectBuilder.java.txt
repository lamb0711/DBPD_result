Commented out use of cached model in MavenMetadataSource, as this is causing problems with projects that depend on other projects which use managed dependencies.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163847 13f79535-47bb-0310-9956-ffa450edef68

-        String key = createCacheKey( model.getGroupId(), model.getArtifactId(), model.getVersion() );
-        Model cachedModel = (Model) modelCache.get( key );
+        
+        String cacheKey = createCacheKey( model.getGroupId(), model.getArtifactId(), model.getVersion() );
+        
+        // [jc] This needs to be moved below the interpolation and defaults
+        // injection steps, especially since the interpolator returns a different
+        // instance of the Model. HOWEVER, I cannot move this caching step to
+        // the appropriate place, since it results in inconsistent artifact 
+        // naming between the jar:jar and install:install steps for some reason.
+        // 
+        // So, instead I'm commenting out the part of the MavenMetadataSource
+        // that looks up the cached model, and leaving this caching step right
+        // here...at least until I have more time to look at why this cannot be
+        // moved down.
+        Model cachedModel = (Model) modelCache.get( cacheKey );
-            modelCache.put( key, model );
+            modelCache.put( cacheKey, model );

UPD42 UPD42 UPD42