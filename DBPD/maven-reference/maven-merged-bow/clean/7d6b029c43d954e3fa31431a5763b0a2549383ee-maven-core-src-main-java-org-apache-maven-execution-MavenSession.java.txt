some clean up of components and artifact repository factory

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@164181 13f79535-47bb-0310-9956-ffa450edef68

-import org.codehaus.plexus.util.dag.CycleDetectedException;
-import org.codehaus.plexus.util.dag.TopologicalSorter;
-import org.codehaus.plexus.util.dag.Vertex;
-import java.util.Map;
-    private PluginManager pluginManager;
-
-    private DAG dag;
-
-    private Map preGoalMappings;
-
-    private Map postGoalMappings;
-
+    // TODO: make this the central one, get rid of build settings...
-    public MavenSession( MavenProject project, PlexusContainer container, PluginManager pluginManager,
-                        Settings settings, ArtifactRepository localRepository, EventDispatcher eventDispatcher,
-                        Log log, List goals )
+    public MavenSession( MavenProject project, PlexusContainer container, Settings settings,
+                         ArtifactRepository localRepository, EventDispatcher eventDispatcher, Log log, List goals )
-        this.pluginManager = pluginManager;
-
-        this.dag = new DAG();
-
-    public PluginManager getPluginManager()
-    {
-        return pluginManager;
-    }
-
-    public Object lookup( String role ) throws ComponentLookupException
+    public Object lookup( String role )
+        throws ComponentLookupException
-    public Object lookup( String role, String roleHint ) throws ComponentLookupException
+    public Object lookup( String role, String roleHint )
+        throws ComponentLookupException
-    public void addImpliedExecution( String goal, String implied ) throws CycleDetectedException
-    {
-        dag.addEdge( goal, implied );
-    }
-
-    public void addSingleExecution( String goal )
-    {
-        dag.addVertex( goal );
-    }
-
-    public List getExecutionChain( String goal )
-    {
-        Vertex vertex = dag.getVertex( goal );
-
-        List sorted = TopologicalSorter.sort( vertex );
-
-        int goalIndex = sorted.indexOf( goal );
-
-        List chainToHere = sorted.subList( 0, goalIndex + 1 );
-
-        return chainToHere;
-    }
-

DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL43 DEL14 DEL7 DEL21 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL34 DEL42 DEL34 DEL27 DEL32 DEL59 DEL60 DEL42 DEL41 DEL8 DEL31