[MNG-6656] Introduce base for build/consumer pom

+import java.nio.file.Path;
+import org.apache.maven.feature.Features;
+import org.apache.maven.model.building.ArtifactModelSource;
+import org.apache.maven.model.building.TransformerContext;
+        request.setTransformerContext( (TransformerContext) config.session.getData().get( TransformerContext.KEY ) );
-        return build( localProject ? pomFile : null, new FileModelSource( pomFile ), config );
+        if ( localProject )
+        {
+            return build( pomFile, new FileModelSource( pomFile ), config );
+        }
+        else
+        {
+            return build( null, new ArtifactModelSource( pomFile, artifact.getGroupId(), artifact.getArtifactId(),
+                                                         artifact.getVersion() ),
+                          config );
+        }
-        ReactorModelPool modelPool = new ReactorModelPool();
+        ReactorModelPool.Builder poolBuilder = new ReactorModelPool.Builder();
+        final ReactorModelPool modelPool = poolBuilder.build();
+        
+        if ( Features.buildConsumer().isActive() )
+        {
+            final TransformerContext context = new TransformerContext()
+            {
+                @Override
+                public String getUserProperty( String key )
+                {
+                    return request.getUserProperties().getProperty( key );
+                }
+    
+                @Override
+                public Model getRawModel( Path p )
+                {
+                    return modelPool.get( p );
+                }
+    
+                @Override
+                public Model getRawModel( String groupId, String artifactId )
+                {
+                    return modelPool.get( groupId, artifactId, null );
+                }
+            };
+            request.getRepositorySession().getData().set( TransformerContext.KEY, context );
+        }
-                   config );
-
-        populateReactorModelPool( modelPool, interimResults );
+                   config, poolBuilder );
-                           boolean isRoot, boolean recursive, InternalConfig config )
+                           boolean root, boolean recursive, InternalConfig config,
+                           ReactorModelPool.Builder poolBuilder )
-            if ( !build( results, interimResults, projectIndex, pomFile, aggregatorFiles, isRoot, recursive, config ) )
+            if ( !build( results, interimResults, projectIndex, pomFile, aggregatorFiles, root, recursive, config,
+                         poolBuilder ) )
-                           boolean isRoot, boolean recursive, InternalConfig config )
+                           boolean isRoot, boolean recursive, InternalConfig config,
+                           ReactorModelPool.Builder poolBuilder )
+        
+        poolBuilder.put( model.getPomFile().toPath(),  result.getRawModel() );
+        
-                         recursive, config ) )
+                         recursive, config, poolBuilder ) )
-    private void populateReactorModelPool( ReactorModelPool reactorModelPool, List<InterimResult> interimResults )
-    {
-        for ( InterimResult interimResult : interimResults )
-        {
-            Model model = interimResult.result.getEffectiveModel();
-            reactorModelPool.put( model.getGroupId(), model.getArtifactId(), model.getVersion(), model.getPomFile() );
-
-            populateReactorModelPool( reactorModelPool, interimResult.modules );
-        }
-    }
-
-                    ArtifactRepository repo = repositorySystem.buildArtifactRepository( r );
+                    ArtifactRepository repo = MavenRepositorySystem.buildArtifactRepository( r );
-                    ArtifactRepository repo = repositorySystem.buildArtifactRepository( r );
+                    ArtifactRepository repo = MavenRepositorySystem.buildArtifactRepository( r );

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS44 INS44 INS21 INS25 INS60 INS60 INS25 UPD42 INS43 INS42 INS43 INS42 INS21 INS32 INS42 INS8 INS8 INS43 INS59 INS83 MOV43 INS59 INS32 INS8 INS40 INS40 INS32 INS42 INS42 INS11 MOV41 INS41 INS40 INS42 INS14 INS42 INS32 INS32 INS42 MOV60 INS21 INS42 INS42 INS32 INS32 INS43 INS32 INS32 INS43 INS42 INS42 INS42 INS42 INS83 UPD43 INS32 INS42 MOV32 INS42 INS42 INS42 INS42 INS32 INS42 INS40 INS42 INS42 INS33 INS14 INS42 INS40 UPD42 INS42 INS14 INS32 INS42 INS40 INS42 INS40 INS42 INS43 INS42 INS32 INS32 INS32 INS43 INS1 INS32 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS31 INS31 INS31 INS42 INS42 INS78 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS44 INS8 INS78 INS83 MOV43 INS42 INS44 INS44 INS8 MOV43 MOV43 INS42 INS42 INS43 INS42 INS41 INS42 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS32 INS42 INS32 INS42 INS42 INS32 UPD42 UPD42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 DEL42 DEL42 DEL33 DEL16 DEL42 DEL14 DEL42 DEL42 DEL42 DEL32 DEL21 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL40 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL70 DEL8 DEL31