switched to mercury-alpha-7-SN dependency to enable managed version maps, the lifecycle UTs pass

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@763438 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+import java.util.Map;
+import java.util.Set;
+import org.apache.maven.artifact.Artifact;
+import org.apache.maven.artifact.resolver.ArtifactNotFoundException;
+        
+        Map<String, ArtifactMetadata> versionMap = MercuryAdaptor.toMercuryVersionMap( (Map<String,Artifact>)request.getManagedVersionMap() );
-            org.apache.maven.artifact.Artifact mavenRootArtifact = request.getArtifact();
-            org.apache.maven.artifact.Artifact mavenPluginArtifact = mavenRootArtifact;
+
+            org.apache.maven.artifact.Artifact rootArtifact = request.getArtifact();
-            boolean isPlugin = "maven-plugin".equals( mavenRootArtifact.getType() ); 
+            org.apache.maven.artifact.Artifact mavenPluginArtifact = rootArtifact;
-            ArtifactScopeEnum scope = MercuryAdaptor.extractScope( mavenRootArtifact, isPlugin, request.getFilter() );
+            Set<Artifact> artifacts = request.getArtifactDependencies();
+            
+            boolean isPlugin = "maven-plugin".equals( rootArtifact.getType() ); 
+            
+            ArtifactScopeEnum scope = MercuryAdaptor.extractScope( rootArtifact, isPlugin, request.getFilter() );
-                mavenRootArtifact = createArtifact( mavenRootArtifact.getGroupId()
-                                                    , mavenRootArtifact.getArtifactId()
-                                                    , mavenRootArtifact.getVersion()
-                                                    , mavenRootArtifact.getScope()
+                rootArtifact = createArtifact( rootArtifact.getGroupId()
+                                                    , rootArtifact.getArtifactId()
+                                                    , rootArtifact.getVersion()
+                                                    , rootArtifact.getScope()
-            ArtifactMetadata rootMd = MercuryAdaptor.toMercuryMetadata( mavenRootArtifact );
+            ArtifactMetadata rootMd = MercuryAdaptor.toMercuryMetadata( rootArtifact );
+
+            org.apache.maven.artifact.Artifact root = null;
+
+            // copied from artifact resolver 
+            if ( request.isResolveRoot() && rootArtifact.getFile() == null && Util.isEmpty( artifacts ) )
+            {
+                try
+                {
+                    List<ArtifactMetadata> mercuryMetadataList = new ArrayList<ArtifactMetadata>(1);
+                    
+                    mercuryMetadataList.add( rootMd );
+                    
+                    List<org.apache.maven.mercury.artifact.Artifact> mercuryArtifactList =
+                        _mercury.read( repos, mercuryMetadataList );
+                    
+                    if( Util.isEmpty( mercuryArtifactList ) )
+                    {
+                        result.addErrorArtifactException( new ArtifactResolutionException( "scope="+scope, rootArtifact) );
+                        return result;
+                    }
+
+                    root = isPlugin ? mavenPluginArtifact : rootArtifact;
+                    
+                    org.apache.maven.mercury.artifact.Artifact a = mercuryArtifactList.get( 0 );
+                    
+                    root.setFile( a.getFile() );
+                    root.setResolved( true );
+                    root.setResolvedVersion( a.getVersion() );
+                    
+                    result.addArtifact( rootArtifact );
+                    result.addRequestedArtifact( rootArtifact );
+                }
+                catch ( Exception e )
+                {
+                    result.addMissingArtifact( request.getArtifact() );
+                    return result;
+                }
+            }
+
+            if ( Util.isEmpty( artifacts ) )
+            {
+                return result;
+            } 
-            List<ArtifactMetadata> mercuryMetadataList = _mercury.resolve( repos, scope,  rootMd );
+            List<ArtifactMetadata> mercuryMetadataList = null;
+
+            if ( Util.isEmpty( artifacts ) )
+                mercuryMetadataList = _mercury.resolve( repos, scope,  rootMd );
+            else
+            {
+                List<ArtifactMetadata> query = new ArrayList<ArtifactMetadata>( artifacts.size() + 1 );
+                
+                query.add( rootMd );
+                
+                for( Artifact a : artifacts )
+                    query.add( MercuryAdaptor.toMercuryMetadata( a ) );
+
+                mercuryMetadataList = _mercury.resolve( repos, scope, new ArtifactQueryList(query), null, null, versionMap );
+            }
-
-            org.apache.maven.artifact.Artifact root = null;
-                        root = isPlugin ? mavenPluginArtifact : mavenRootArtifact;
+                        root = isPlugin ? mavenPluginArtifact : rootArtifact;
+                        result.addRequestedArtifact( root );
-                        result.addArtifact( MercuryAdaptor.toMavenArtifact( _artifactFactory, a ) );
+                        Artifact ma = MercuryAdaptor.toMavenArtifact( _artifactFactory, a );
+                        
+                        result.addArtifact( ma );
+                        result.addRequestedArtifact( ma );
+//for( Artifact a: result.getArtifacts() )
+//System.out.println("mercury dependency: "+a+" as file "+a.getFile() );
-                result.addMissingArtifact( mavenRootArtifact );
-System.out.println("mercury: missing artifact("+diff+") "+mavenRootArtifact+"("+scope+")" );
+                result.addMissingArtifact( rootArtifact );
+System.out.println("mercury: missing artifact("+diff+") "+rootArtifact+"("+scope+")" );

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS60 INS74 INS59 MOV60 INS43 INS43 INS43 INS42 INS32 INS60 INS25 INS25 INS60 INS25 INS42 INS42 INS42 INS42 INS42 INS11 MOV43 MOV43 INS59 INS74 INS27 INS8 INS32 INS8 INS74 INS59 INS32 INS21 INS8 INS74 INS32 UPD42 INS42 INS42 INS43 INS43 UPD42 INS32 INS27 INS32 INS54 INS42 INS42 INS42 INS41 INS43 INS43 INS42 INS33 INS42 INS42 INS42 INS7 INS60 INS21 INS70 INS21 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 INS32 INS27 INS42 INS42 INS42 INS8 INS12 INS42 INS42 INS42 INS42 MOV32 INS74 INS59 INS32 INS44 INS42 INS21 INS7 INS42 INS42 INS42 UPD42 INS42 INS42 INS32 INS33 MOV60 INS21 INS60 INS25 INS21 INS60 INS21 INS21 INS21 INS21 INS21 INS44 INS8 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS43 INS42 INS32 INS42 INS32 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS32 INS74 INS59 INS32 INS8 INS7 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS43 INS42 INS21 INS41 INS42 INS42 INS74 INS27 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS14 INS33 INS33 INS42 UPD42 INS14 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS21 INS41 INS42 INS16 INS40 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS43 INS32 INS34 INS42 INS42 INS42 INS43 INS42 INS21 INS60 INS21 INS74 INS34 INS42 INS40 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS32 INS43 INS43 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS27 INS42 UPD42 INS42 INS45 INS42 DEL42