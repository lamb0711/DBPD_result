o swapping the branch to trunk


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@779660 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.maven.project.validation;
+package org.apache.maven.model.validation;
-import org.apache.maven.artifact.Artifact;
+import java.io.File;
+import java.util.List;
+
-import java.io.File;
-import java.util.Iterator;
-import java.util.List;
-
-    public ModelValidationResult validate( Model model )
+    public ModelValidationResult validateRawModel( Model model, boolean lenient )
+    {
+        ModelValidationResult result = new ModelValidationResult();
+
+        Parent parent = model.getParent();
+        if ( parent != null )
+        {
+            validateStringNotEmpty( "parent.groupId", result, parent.getGroupId() );
+
+            validateStringNotEmpty( "parent.artifactId", result, parent.getArtifactId() );
+
+            validateStringNotEmpty( "parent.version", result, parent.getVersion() );
+
+            if ( parent.getGroupId().equals( model.getGroupId() )
+                && parent.getArtifactId().equals( model.getArtifactId() ) )
+            {
+                result.addMessage( "The parent element cannot have the same ID as the project." );
+            }
+        }
+
+        return result;
+    }
+
+    public ModelValidationResult validateEffectiveModel( Model model, boolean lenient )
-        for ( Iterator it = model.getDependencies().iterator(); it.hasNext(); )
+        for ( Dependency d : model.getDependencies() )
-            Dependency d = (Dependency) it.next();
-
-            if ( Artifact.SCOPE_SYSTEM.equals( d.getScope() ) )
+            if ( "system".equals( d.getScope() ) )
-            for ( Iterator it = mgmt.getDependencies().iterator(); it.hasNext(); )
+            for ( Dependency d : mgmt.getDependencies() )
-                Dependency d = (Dependency) it.next();
-
-                if ( Artifact.SCOPE_SYSTEM.equals( d.getScope() ) )
+                if ( "system".equals( d.getScope() ) )
-        Build build = model.getBuild();
-        if ( build != null )
+        if ( !lenient )
-            for ( Iterator it = build.getPlugins().iterator(); it.hasNext(); )
+            Build build = model.getBuild();
+            if ( build != null )
-                Plugin p = (Plugin) it.next();
+                for ( Plugin p : build.getPlugins() )
+                {
+                    validateStringNotEmpty( "build.plugins.plugin.artifactId", result, p.getArtifactId() );
-                validateStringNotEmpty( "build.plugins.plugin.artifactId", result, p.getArtifactId() );
+                    validateStringNotEmpty( "build.plugins.plugin.groupId", result, p.getGroupId() );
-                validateStringNotEmpty( "build.plugins.plugin.groupId", result, p.getGroupId() );
+                    validateStringNotEmpty( "build.plugins.plugin.version", result, p.getVersion(), p.getKey() );
+                }
+
+                for ( Resource r : build.getResources() )
+                {
+                    validateStringNotEmpty( "build.resources.resource.directory", result, r.getDirectory() );
+                }
+
+                for ( Resource r : build.getTestResources() )
+                {
+                    validateStringNotEmpty( "build.testResources.testResource.directory", result, r.getDirectory() );
+                }
-            for ( Iterator it = build.getResources().iterator(); it.hasNext(); )
+            Reporting reporting = model.getReporting();
+            if ( reporting != null )
-                Resource r = (Resource) it.next();
+                for ( ReportPlugin p : reporting.getPlugins() )
+                {
+                    validateStringNotEmpty( "reporting.plugins.plugin.artifactId", result, p.getArtifactId() );
-                validateStringNotEmpty( "build.resources.resource.directory", result, r.getDirectory() );
+                    validateStringNotEmpty( "reporting.plugins.plugin.groupId", result, p.getGroupId() );
+
+                    validateStringNotEmpty( "reporting.plugins.plugin.version", result, p.getVersion(), p.getKey() );
+                }
-            for ( Iterator it = build.getTestResources().iterator(); it.hasNext(); )
-            {
-                Resource r = (Resource) it.next();
+            validateRepositories( result, model.getRepositories(), "repositories.repository" );
-                validateStringNotEmpty( "build.testResources.testResource.directory", result, r.getDirectory() );
-            }
+            // validateRepositories( result, model.getPluginRepositories(), "pluginRepositories.pluginRepository" );
+
+            forcePluginExecutionIdCollision( model, result );
-        Reporting reporting = model.getReporting();
-        if ( reporting != null )
-        {
-            for ( Iterator it = reporting.getPlugins().iterator(); it.hasNext(); )
-            {
-                ReportPlugin p = (ReportPlugin) it.next();
-
-                validateStringNotEmpty( "reporting.plugins.plugin.artifactId", result, p.getArtifactId() );
-
-                validateStringNotEmpty( "reporting.plugins.plugin.groupId", result, p.getGroupId() );
-            }
-        }
-
-        validateRepositories( result, model.getRepositories(), "repositories.repository" );
-
-//        validateRepositories( result, model.getPluginRepositories(), "pluginRepositories.pluginRepository" );
-
-        forcePluginExecutionIdCollision( model, result );
-
-    private void validateRepositories( ModelValidationResult result, List repositories, String prefix )
+    private void validateRepositories( ModelValidationResult result, List<Repository> repositories, String prefix )
-        for ( Iterator it = repositories.iterator(); it.hasNext(); )
+        for ( Repository repository :  repositories )
-            Repository repository = (Repository) it.next();
-
-            List plugins = build.getPlugins();
+            List<Plugin> plugins = build.getPlugins();
-                for ( Iterator it = plugins.iterator(); it.hasNext(); )
+                for ( Plugin plugin : plugins )
-                    Plugin plugin = (Plugin) it.next();
-
+

MOV26 MOV26 UPD40 INS31 INS83 INS43 INS42 INS44 INS44 INS8 UPD42 INS44 INS42 INS43 INS42 INS39 INS42 INS60 INS60 INS25 INS41 INS39 INS42 INS70 INS25 INS74 INS70 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS42 INS44 MOV32 MOV8 INS38 INS8 MOV43 MOV43 INS44 INS42 MOV8 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS21 INS25 MOV43 INS42 INS70 INS42 MOV60 MOV25 MOV60 MOV25 MOV21 MOV21 MOV43 INS42 INS43 INS42 INS42 INS32 INS32 INS32 INS27 INS8 INS44 MOV32 MOV8 INS74 INS42 INS42 INS45 INS42 INS32 INS42 INS45 INS42 INS32 INS42 INS45 INS42 INS32 INS32 INS32 INS21 INS45 MOV43 INS42 INS70 INS70 INS70 INS70 MOV43 MOV43 INS70 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS32 INS44 MOV32 MOV8 INS44 MOV32 MOV8 INS44 MOV32 MOV8 INS44 MOV32 MOV8 INS44 INS42 MOV8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS45 MOV43 INS42 INS21 MOV43 INS42 MOV43 INS42 MOV43 INS42 INS21 MOV43 INS42 INS32 INS32 INS42 INS45 INS42 INS32 INS32 INS42 INS45 INS42 INS32 INS32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL40 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL40 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL43 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL42 DEL43 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24