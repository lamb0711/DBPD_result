o Resurrected the path translator component (on this occasion, splitting it to separate the single path translation from the model translation)

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@780698 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.Build;
-import org.apache.maven.model.Reporting;
-import org.apache.maven.model.Resource;
+import org.apache.maven.model.path.ModelPathTranslator;
+    @Requirement
+    private ModelPathTranslator modelPathTranslator;
+
-            if ( projectDirectory != null )
-            {
-                alignPaths( m, projectDirectory );
-            }
+            modelPathTranslator.alignToBaseDirectory( m, projectDirectory );
-    /**
-     * Post-processes the paths of build directories by aligning relative paths to the project
-     * directory and normalizing file separators to the platform-specific separator.
-     * 
-     * @param model The model to process, must not be {@code null}.
-     * @param basedir The project directory, must not be {@code null}.
-     */
-    private static void alignPaths( Model model, File basedir )
-    {
-        Build build = model.getBuild();
-        if ( build != null )
-        {
-            build.setDirectory( getAlignedPathFor( build.getDirectory(), basedir ) );
-            build.setOutputDirectory( getAlignedPathFor( build.getOutputDirectory(), basedir ) );
-            build.setTestOutputDirectory( getAlignedPathFor( build.getTestOutputDirectory(), basedir ) );
-            build.setSourceDirectory( getAlignedPathFor( build.getSourceDirectory(), basedir ) );
-            build.setTestSourceDirectory( getAlignedPathFor( build.getTestSourceDirectory(), basedir ) );
-            build.setScriptSourceDirectory( getAlignedPathFor( build.getScriptSourceDirectory(), basedir ) );
-
-            for ( Resource r : build.getResources() )
-            {
-                r.setDirectory( getAlignedPathFor( r.getDirectory(), basedir ) );
-            }
-
-            for ( Resource r : build.getTestResources() )
-            {
-                r.setDirectory( getAlignedPathFor( r.getDirectory(), basedir ) );
-            }
-
-            List<String> filters = new ArrayList<String>();
-            for ( String f : build.getFilters() )
-            {
-                filters.add( getAlignedPathFor( f, basedir ) );
-            }
-            build.setFilters( filters );
-        }
-
-        Reporting reporting = model.getReporting();
-        if ( reporting != null )
-        {
-            reporting.setOutputDirectory( getAlignedPathFor( reporting.getOutputDirectory(), basedir ) );
-        }
-
-    }
-
-    private static String getAlignedPathFor( String path, File basedir )
-    {
-        if ( path != null )
-        {
-            File file = new File( path );
-            if ( file.isAbsolute() )
-            {
-                // path was already absolute, just normalize file separator and we're done
-                path = file.getPath();
-            }
-            else if ( file.getPath().startsWith( File.separator ) )
-            {
-                // drive-relative Windows path, don't align with project directory but with drive root
-                path = file.getAbsolutePath();
-            }
-            else
-            {
-                // an ordinary relative path, align with project directory
-                path = new File( new File( basedir, path ).toURI().normalize() ).getAbsolutePath();
-            }
-        }
-        return path;
-    }
-

MOV26 UPD40 INS23 INS78 INS83 INS43 INS59 INS42 UPD42 MOV42 INS42 MOV21 INS42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL33 DEL27 DEL8 DEL25 DEL66 DEL66 DEL65 DEL42 DEL66 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL14 DEL42 DEL32 DEL42 DEL32 DEL14 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL25 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31