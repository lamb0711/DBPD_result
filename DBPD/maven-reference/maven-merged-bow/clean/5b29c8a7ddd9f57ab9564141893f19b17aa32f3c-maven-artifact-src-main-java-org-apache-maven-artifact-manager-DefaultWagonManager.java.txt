update licenses and reformat


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163668 13f79535-47bb-0310-9956-ffa450edef68

- * ====================================================================
- * Copyright 2001-2004 The Apache Software Foundation. Licensed under the Apache
- * License, Version 2.0 (the "License"); you may not use this file except in
- * compliance with the License. You may obtain a copy of the License at
- * http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law
- * or agreed to in writing, software distributed under the License is
- * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the specific language
- * governing permissions and limitations under the License.
- * ====================================================================
+ * Copyright 2001-2005 The Apache Software Foundation.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
-    public Wagon getWagon( String protocol ) throws UnsupportedProtocolException
+    public Wagon getWagon( String protocol )
+        throws UnsupportedProtocolException
-            throw new UnsupportedProtocolException( "Cannot find wagon which supports the requested protocol: "
-                + protocol, e );
+            throw new UnsupportedProtocolException( "Cannot find wagon which supports the requested protocol: " +
+                                                    protocol, e );
-    public void releaseWagon( Wagon wagon ) throws Exception
+    public void releaseWagon( Wagon wagon )
+        throws Exception
-    public void put( File source, Artifact artifact, ArtifactRepository repository ) throws Exception
+    public void put( File source, Artifact artifact, ArtifactRepository repository )
+        throws Exception
-     *       Simply if artifact was downloaded but it was rejected by
-     *       validator(s) the loop should continue. Some of the validators can
-     *       be feeded directly using events so number of i/o operation could be
-     *       limited. <p/>If we won't plug validation process here the question
-     *       is what we can do afterwards? We don't know from which
-     *       ArtifactRepository artifact was fetched and where we should
-     *       restart. We should be also fetching md5 sums and such from the same
-     *       exact directory then artifacts <p/>
+     * Simply if artifact was downloaded but it was rejected by
+     * validator(s) the loop should continue. Some of the validators can
+     * be feeded directly using events so number of i/o operation could be
+     * limited. <p/>If we won't plug validation process here the question
+     * is what we can do afterwards? We don't know from which
+     * ArtifactRepository artifact was fetched and where we should
+     * restart. We should be also fetching md5 sums and such from the same
+     * exact directory then artifacts <p/>
-    public void get( Artifact artifact, File destination, List repositories ) throws TransferFailedException
+    public void get( Artifact artifact, File destination, List repositories )
+        throws TransferFailedException
-     * 
+     *
+     * @param protocol      the protocol (required)
+     * @param host          the proxy host name (required)
+     * @param port          the proxy port (required)
+     * @param username      the username for the proxy, or null if there is none
+     * @param password      the password for the proxy, or null if there is none
+     * @param nonProxyHosts the set of hosts not to use the proxy for. Follows Java system
+     *                      property format: <code>*.foo.com|localhost</code>.
-     * @param protocol
-     *            the protocol (required)
-     * @param host
-     *            the proxy host name (required)
-     * @param port
-     *            the proxy port (required)
-     * @param username
-     *            the username for the proxy, or null if there is none
-     * @param password
-     *            the password for the proxy, or null if there is none
-     * @param nonProxyHosts
-     *            the set of hosts not to use the proxy for. Follows Java system
-     *            property format: <code>*.foo.com|localhost</code>.
-    public void setProxy( String protocol, String host, int port, String username, String password, String nonProxyHosts )
+    public void setProxy( String protocol, String host, int port, String username, String password,
+                          String nonProxyHosts )
-    public void contextualize( Context context ) throws ContextException
+    public void contextualize( Context context )
+        throws ContextException
-    /** @todo I'd rather not be setting this explicitly. */
+    /**
+     * @todo I'd rather not be setting this explicitly.
+     */

MOV65 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66