o pull from trunky dunk dunk


git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@767707 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Collection;
-import org.apache.maven.project.builder.PomInterpolatorTag;
-import org.apache.maven.project.builder.PomTransformer;
-import org.apache.maven.project.builder.ProjectUri;
-import org.apache.maven.shared.model.DomainModel;
-import org.apache.maven.shared.model.InterpolatorProperty;
-import org.apache.maven.shared.model.ModelContainer;
-import org.apache.maven.shared.model.ModelProperty;
-import org.apache.maven.shared.model.ModelTransformerContext;
+import org.apache.maven.model.DomainModel;
+import org.apache.maven.model.ProcessorContext;
+import org.apache.maven.model.interpolator.DefaultInterpolator;
+import org.apache.maven.model.interpolator.InterpolatorProperty;
+import org.apache.maven.model.interpolator.PomInterpolatorTag;
-public final class MavenDependencyProcessor
+public class MavenDependencyProcessor
+    
+	/**
+	 * Over-ride this method to change how dependencies are obtained
+	 */
-        List<InterpolatorProperty> interpolatorProperties = new ArrayList<InterpolatorProperty>();
-        interpolatorProperties.add( new InterpolatorProperty( "${mavenVersion}", "3.0-SNAPSHOT",
-                                                              PomInterpolatorTag.EXECUTION_PROPERTIES.name() ) );
-
-        if ( system != null )
-        {
-            interpolatorProperties.addAll(
-                InterpolatorProperty.toInterpolatorProperties( system, PomInterpolatorTag.EXECUTION_PROPERTIES.name() ) );
-        }
-        if ( user != null )
-        {
-            interpolatorProperties.addAll(
-                InterpolatorProperty.toInterpolatorProperties( user, PomInterpolatorTag.USER_PROPERTIES.name() ) );
-        }
+        List<InterpolatorProperty> interpolatorProperties = createInterpolatorProperties(system, user);
-
+/*TODO: Profiles
-
+*/
-        PomTransformer transformer = new PomTransformer( new MavenDomainModelFactory() );
-        ModelTransformerContext ctx =
-            new ModelTransformerContext( PomTransformer.MODEL_CONTAINER_INFOS );
+        try {
+			return new MavenDomainModel(new DefaultInterpolator().interpolateDomainModel(ProcessorContext.build(domainModels, null), 
+					interpolatorProperties)).getDependencyMetadata();
+		} catch (IOException e) {
+			throw new DependencyProcessorException();
+		}
-        try
+    }
+    
+    protected final List<InterpolatorProperty> createInterpolatorProperties(Map system, Map user)
+    {
+        List<InterpolatorProperty> interpolatorProperties = new ArrayList<InterpolatorProperty>();
+        interpolatorProperties.add( new InterpolatorProperty( "${mavenVersion}", "3.0-SNAPSHOT",
+                                                              PomInterpolatorTag.EXECUTION_PROPERTIES.name() ) );
+
+        if ( system != null )
-            MavenDomainModel model =
-                ( (MavenDomainModel) ctx.transform( domainModels, transformer, transformer, null,
-                                                    interpolatorProperties, null ) );
-            return model.getDependencyMetadata();
+            interpolatorProperties.addAll(
+                InterpolatorProperty.toInterpolatorProperties( system, PomInterpolatorTag.EXECUTION_PROPERTIES.name() ) );
-        catch ( IOException e )
+        if ( user != null )
-            throw new MetadataReaderException( "Unable to transform model", e );
+            interpolatorProperties.addAll(
+                InterpolatorProperty.toInterpolatorProperties( user, PomInterpolatorTag.USER_PROPERTIES.name() ) );
+        return interpolatorProperties;
-    private static List<DomainModel> getParentsOfDomainModel( MavenDomainModel domainModel, MetadataReader mdReader )
+    protected final List<DomainModel> getParentsOfDomainModel( MavenDomainModel domainModel, MetadataReader mdReader )
-
-    private static List<ModelProperty> transformProfiles( List<ModelProperty> modelProperties )
-    {
-        List<ModelProperty> properties = new ArrayList<ModelProperty>();
-        for ( ModelProperty mp : modelProperties )
-        {
-            if ( mp.getUri().startsWith( ProjectUri.Profiles.Profile.xUri )
-                && !mp.getUri().equals( ProjectUri.Profiles.Profile.id )
-                && !mp.getUri().startsWith( ProjectUri.Profiles.Profile.Activation.xUri ) )
-            {
-                properties.add( new ModelProperty( mp.getUri().replace( ProjectUri.Profiles.Profile.xUri,
-                                                                        ProjectUri.xUri ), mp.getResolvedValue() ) );
-            }
-        }
-        return properties;
-    }

MOV31 UPD40 UPD40 UPD40 UPD40 UPD40 INS29 UPD83 UPD83 UPD74 UPD42 INS44 INS8 UPD83 UPD83 INS65 INS60 UPD43 INS43 UPD42 UPD43 MOV43 UPD42 MOV42 MOV60 MOV21 MOV25 MOV25 INS41 INS66 INS74 INS59 UPD42 UPD42 MOV42 UPD42 INS42 MOV43 INS43 INS42 INS32 INS41 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS32 INS14 MOV42 MOV43 INS32 UPD43 INS14 INS42 INS32 MOV42 UPD42 INS43 UPD42 MOV42 UPD42 MOV42 MOV42 MOV33 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL14 DEL32 DEL21 DEL8 DEL70 DEL43 DEL42 DEL43 DEL42 DEL43 DEL14 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL40 DEL14 DEL59 DEL60 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL33 DEL32 DEL11 DEL36 DEL59 DEL60 DEL42 DEL32 DEL41 DEL45 DEL42 DEL43 DEL74 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL38 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL38 DEL27 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL40 DEL40 DEL32 DEL42 DEL42 DEL32 DEL14 DEL32 DEL21 DEL8 DEL25 DEL8 DEL70 DEL42 DEL41 DEL8