add basic auth support

-import java.io.BufferedOutputStream;
-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.InputStream;
-import java.io.OutputStream;
-import java.net.Authenticator;
-import java.net.PasswordAuthentication;
-import java.net.URI;
-import java.net.URL;
-import java.net.URLConnection;
+import java.io.*;
+import java.lang.reflect.Method;
+import java.net.*;
+      addBasicAuthentication(address, conn);
+  private void addBasicAuthentication(URI address, URLConnection connection) throws IOException {
+    String userInfo = calculateUserInfo(address);
+    if (userInfo == null) {
+        return;
+    }
+    if (!"https".equals(address.getScheme())) {
+       Logger.info("WARNING Using HTTP Basic Authentication over an insecure connection to download the Gradle distribution. Please consider using HTTPS.");
+    }
+    connection.setRequestProperty("Authorization", "Basic " + base64Encode(userInfo));
+  }
+
+  /**
+     * Base64 encode user info for HTTP Basic Authentication.
+     *
+     * Try to use {@literal java.util.Base64} encoder which is available starting with Java 8.
+     * Fallback to {@literal javax.xml.bind.DatatypeConverter} from JAXB which is available starting with Java 6 but is not anymore in Java 9.
+     * Fortunately, both of these two Base64 encoders implement the right Base64 flavor, the one that does not split the output in multiple lines.
+     *
+     * @param userInfo user info
+     * @return Base64 encoded user info
+     * @throws RuntimeException if no public Base64 encoder is available on this JVM
+     */
+    private String base64Encode(String userInfo) {
+      ClassLoader loader = getClass().getClassLoader();
+      try {
+          Method getEncoderMethod = loader.loadClass("java.util.Base64").getMethod("getEncoder");
+          Method encodeMethod = loader.loadClass("java.util.Base64$Encoder").getMethod("encodeToString", byte[].class);
+          Object encoder = getEncoderMethod.invoke(null);
+          return (String) encodeMethod.invoke(encoder, new Object[]{userInfo.getBytes("UTF-8")});
+      } catch (Exception java7OrEarlier) {
+          try {
+              Method encodeMethod = loader.loadClass("javax.xml.bind.DatatypeConverter").getMethod("printBase64Binary", byte[].class);
+              return (String) encodeMethod.invoke(null, new Object[]{userInfo.getBytes("UTF-8")});
+          } catch (Exception java5OrEarlier) {
+              throw new RuntimeException("Downloading Gradle distributions with HTTP Basic Authentication is not supported on your JVM.", java5OrEarlier);
+          }
+      }
+  }
+
+  private String calculateUserInfo(URI uri) {
+    String username = System.getProperty("maven.wrapperUser");
+    String password = System.getProperty("maven.wrapperPassword");
+    if (username != null && password != null) {
+        return username + ':' + password;
+    }
+    return uri.getUserInfo();
+}
+

UPD40 UPD40 UPD40 INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS29 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS43 INS42 INS43 INS42 INS42 INS60 INS25 INS25 INS21 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS60 INS54 INS42 INS43 INS42 INS60 INS60 INS25 INS41 INS42 INS42 INS43 INS59 INS27 INS8 INS38 INS8 INS32 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS43 INS59 INS8 INS12 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS32 INS21 INS42 INS42 INS32 INS42 INS33 INS41 INS32 INS21 INS42 INS42 INS45 INS27 INS66 INS66 INS42 INS42 INS32 INS60 INS60 INS60 INS41 INS44 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS27 INS27 INS41 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS32 INS32 INS45 INS32 INS32 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS11 INS43 INS42 INS54 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS33 INS42 INS33 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS32 INS42 INS8 INS12 INS42 INS13 INS42 INS32 INS42 INS45 INS32 INS42 INS45 INS57 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS3 INS60 INS41 INS44 INS8 INS42 INS42 INS45 INS42 INS42 INS45 INS5 INS5 INS4 INS43 INS59 INS11 INS43 INS42 INS53 INS39 INS85 INS43 INS85 INS32 INS42 INS42 INS32 INS43 INS32 INS42 INS14 INS42 INS42 INS42 INS45 INS32 INS42 INS45 INS57 INS42 INS42 INS42 INS33 INS3 INS43 INS45 INS42 INS42 INS42 INS45 INS5 INS5 INS4 INS42 INS39 INS85 INS43 INS85 INS32 INS42 INS42 INS42 INS45 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26