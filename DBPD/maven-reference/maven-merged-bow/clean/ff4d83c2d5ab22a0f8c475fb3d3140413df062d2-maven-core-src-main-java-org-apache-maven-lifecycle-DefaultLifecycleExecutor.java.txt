o Renamed new plugin manager to make room for the legacy impl that will provide backward-compat with existing plugins
o Extracted plugin version resolution into a dedicated component

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@805962 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.plugin.PluginManager;
+import org.apache.maven.plugin.BuildPluginManager;
+import org.apache.maven.plugin.version.DefaultPluginVersionRequest;
+import org.apache.maven.plugin.version.PluginVersionRequest;
+import org.apache.maven.plugin.version.PluginVersionResolutionException;
+import org.apache.maven.plugin.version.PluginVersionResolver;
-    private PluginManager pluginManager;
+    private BuildPluginManager pluginManager;
+
+    @Requirement
+    private PluginVersionResolver pluginVersionResolver;
-        LifecycleNotFoundException
+        LifecycleNotFoundException, PluginVersionResolutionException
-        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException, CycleDetectedInPluginGraphException, MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException
+        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException, CycleDetectedInPluginGraphException, MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException, PluginVersionResolutionException
-        InvalidPluginDescriptorException, LifecyclePhaseNotFoundException, LifecycleNotFoundException
+        InvalidPluginDescriptorException, LifecyclePhaseNotFoundException, LifecycleNotFoundException, PluginVersionResolutionException
-        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException, CycleDetectedInPluginGraphException, MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException
+        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException, CycleDetectedInPluginGraphException, MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException, PluginVersionResolutionException
-    public void resolvePluginVersion( Plugin plugin, RepositoryRequest repositoryRequest )
-        throws PluginNotFoundException
+    private void resolvePluginVersion( Plugin plugin, RepositoryRequest repositoryRequest )
+        throws PluginVersionResolutionException
-        ArtifactRepository localRepository = repositoryRequest.getLocalRepository();
-
-        File artifactMetadataFile = null;
-        
-        String localPath; 
-        
-        // Search in remote repositories for a (released) version.
-        //
-        // maven-metadata-{central|nexus|...}.xml 
-        //
-        //TODO: we should cycle through the repositories but take the repository which actually
-        // satisfied the prefix.
-        for ( ArtifactRepository repository : repositoryRequest.getRemoteRepositories() )
-        {
-            localPath = plugin.getGroupId().replace( '.', '/' ) + "/" + plugin.getArtifactId() + "/maven-metadata-" + repository.getId() + ".xml";
-
-            artifactMetadataFile = new File( localRepository.getBasedir(), localPath );
-
-            if ( !artifactMetadataFile.exists() /* || user requests snapshot updates */)
-            {
-                try
-                {
-                    String remotePath = plugin.getGroupId().replace( '.', '/' ) + "/" + plugin.getArtifactId() + "/maven-metadata.xml";
-
-                    repositorySystem.retrieve( repository, artifactMetadataFile, remotePath, null );
-                }
-                catch ( TransferFailedException e )
-                {
-                    continue;
-                }
-                catch ( ResourceDoesNotExistException e )
-                {
-                    continue;
-                }
-            }
-
-            break;
-        }
-
-        // Search in the local repositiory for a (development) version
-        //
-        // maven-metadata-local.xml
-        //
-        if ( artifactMetadataFile == null || !artifactMetadataFile.exists() )
-        {
-            localPath =
-                plugin.getGroupId().replace( '.', '/' ) + "/" + plugin.getArtifactId() + "/maven-metadata-"
-                    + localRepository.getId() + ".xml";
-
-            artifactMetadataFile = new File( localRepository.getBasedir(), localPath );
-        }
-
-        if ( artifactMetadataFile.exists() )
-        {
-            logger.debug( "Extracting version for plugin " + plugin.getKey() + " from " + artifactMetadataFile );
-
-            try
-            {
-                Metadata pluginMetadata = readMetadata( artifactMetadataFile );
-
-                if ( pluginMetadata.getVersioning() != null )
-                {
-                    String release = pluginMetadata.getVersioning().getRelease();
-
-                    if ( StringUtils.isNotEmpty( release ) )
-                    {
-                        plugin.setVersion( release );
-                    }
-                    else
-                    {
-                        String latest = pluginMetadata.getVersioning().getLatest();
-
-                        if ( StringUtils.isNotEmpty( latest ) )
-                        {
-                            plugin.setVersion( latest );
-                        }
-                    }
-                }
-            }
-            catch ( RepositoryMetadataReadException e )
-            {
-                logger.warn( "Error reading plugin metadata: ", e );
-            }
-        }
-
-        if ( StringUtils.isEmpty( plugin.getVersion() ) )
-        {
-            throw new PluginNotFoundException( plugin, repositoryRequest.getRemoteRepositories() );
-        }
+        PluginVersionRequest versionRequest = new DefaultPluginVersionRequest( plugin, repositoryRequest );
+        plugin.setVersion( pluginVersionResolver.resolve( versionRequest ).getVersion() );
-            catch ( PluginNotFoundException e )
+            catch ( PluginVersionResolutionException e )

INS26 INS26 INS26 INS26 UPD40 INS40 INS40 INS40 INS40 INS23 UPD43 INS78 INS83 INS43 INS59 INS43 INS43 INS43 INS43 UPD83 UPD43 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV60 INS21 UPD43 INS32 UPD42 UPD42 INS14 MOV42 MOV42 INS32 INS43 INS42 INS42 INS32 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD43 UPD42 DEL42 DEL42 DEL32 DEL42 DEL13 DEL13 DEL32 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL13 DEL13 DEL32 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL7 DEL21 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL14 DEL7 DEL21 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL42 DEL42 DEL33 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL18 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL18 DEL8 DEL12 DEL54 DEL8 DEL25 DEL10 DEL8 DEL70 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL42 DEL32 DEL42 DEL13 DEL13 DEL32 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL7 DEL21 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL14 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL25