*** empty log message ***


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@162881 13f79535-47bb-0310-9956-ffa450edef68

+        File mavenPropertiesFile =  new File( System.getProperty( "user.home" ), "maven.properties" );
+
+        if ( !mavenPropertiesFile.exists() )
+        {
+            System.out.println( "You must have a ~/maven.properties file and must contain the following entries:" );
+
+            System.out.println( "maven.home = /path/to/m2/installtion" );
+
+            System.out.println( "maven.repo.local = /path/to/m2/repository" );
+
+            System.exit( 1 );
+        }
+
-        properties = loadProperties( new File( System.getProperty( "user.home" ), "build.properties" ) );
+        properties = loadProperties( mavenPropertiesFile );
+
+        for ( Iterator i = properties.keySet().iterator(); i.hasNext(); )
+        {
+            String key = (String) i.next();
+
+            properties.setProperty( key, StringUtils.interpolate( properties.getProperty(key), System.getProperties() ) );
+        }
-        if ( !reader.parse( new File( basedir, "pom.xml" ) ) )
-        {
-            System.err.println( "Could not parse pom.xml" );
+        // Install maven-components POM
+        installPomFile( repoLocal,  new File( basedir, "pom.xml" ) );
-            System.exit( 1 );
-        }
-
-        installPom( basedir, repoLocal );
-
-        reader.reset();
+        // Install plugin-parent POM
+        installPomFile( repoLocal,  new File( basedir, "maven-plugins/pom.xml" ) );
-            mavenHome = System.getProperty( "M2_HOME" );
-
-            System.out.println( "mavenHome = " + mavenHome );
+            mavenHome = properties.getProperty( "maven.home" );
+    private void installPomFile( String repoLocal, File pomIn )
+        throws Exception
+    {
+        if ( !reader.parse( pomIn ) )
+        {
+            System.err.println( "Could not parse pom.xml" );
+
+            System.exit( 1 );
+        }
+
+        String artifactId = reader.artifactId;
+
+        String version = reader.version;
+
+        String groupId = reader.groupId;
+
+        File pom = new File( repoLocal, "/" + groupId + "/poms/" + artifactId + "-" + version + ".pom" );
+
+        System.out.println( "Installing POM: " + pom );
+
+        FileUtils.copyFile( pomIn, pom );
+
+        reader.reset();
+    }
+
-        FileUtils.copyFile( new File( basedir, BUILD_DIR + "/" + artifactId + "-" + version + ".jar" ),
-                            new File( repoLocal, "/" + groupId + "/jars/" + artifactId + "-" + version + ".jar" ) );
+        File jar = new File( repoLocal, "/" + groupId + "/jars/" + artifactId + "-" + version + ".jar" );
+
+        System.out.println( "Installing JAR: " + jar );
+
+        FileUtils.copyFile( new File( basedir, BUILD_DIR + "/" + artifactId + "-" + version + ".jar" ), jar );

INS31 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS60 INS25 INS24 INS21 INS43 INS42 INS43 INS42 INS42 MOV25 INS60 INS60 INS60 INS60 INS21 INS21 MOV21 INS60 INS21 INS43 INS59 INS38 INS8 INS58 INS32 INS8 MOV32 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS32 INS43 INS59 INS32 INS42 INS42 MOV14 INS32 INS21 INS21 INS21 INS21 INS43 INS59 INS42 INS42 INS60 INS21 UPD42 UPD42 UPD42 INS42 INS14 INS32 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS14 INS40 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 MOV14 INS40 INS42 INS27 INS42 UPD45 INS42 INS42 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS32 INS43 INS59 INS32 INS43 INS42 INS45 INS42 INS42 INS42 INS43 INS42 INS27 INS45 INS42 INS45 INS42 INS40 INS42 INS45 INS40 INS42 INS45 INS40 INS42 INS45 INS42 INS42 INS34 INS32 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS42 INS43 INS32 INS42 INS42 INS32 INS32 UPD42 UPD45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21