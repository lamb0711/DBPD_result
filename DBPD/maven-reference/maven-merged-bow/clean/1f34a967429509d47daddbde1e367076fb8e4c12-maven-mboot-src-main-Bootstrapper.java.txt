Complete refactoring of mboot. We can now add easily tests execution with includes and excludes


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@162541 13f79535-47bb-0310-9956-ffa450edef68

-    public static final String SNAPSHOT_SIGNATURE = "-SNAPSHOT";
-
+    private ArtifactDownloader downloader;
-    private File mavenRepoLocal;
-
-    private boolean useTimestamp = true;
-
-    private boolean ignoreErrors = true;
-
-    private List remoteRepos = new ArrayList();
-
-    private String proxyHost;
-
-    private String proxyPort;
-
-    private String proxyUserName;
-
-    private String proxyPassword;
-
-
-        Properties properties = loadProperties( new File( System.getProperty( "user.home" ), "build.properties" ) );
-
-        setRemoteRepo( properties.getProperty( "maven.repo.remote" ) );
-
-        String mavenRepoLocalProperty = properties.getProperty( "maven.repo.local" );
-
-        if ( mavenRepoLocalProperty == null )
-        {
-            mavenRepoLocalProperty = System.getProperty( "user.home" ) + "/.maven/repository";
-        }
-
-        mavenRepoLocal = new File( mavenRepoLocalProperty );
-
-        if ( !mavenRepoLocal.exists() )
-        {
-            if ( !mavenRepoLocal.mkdirs() )
-            {
-                System.err.println( "Cannot create the specified maven.repo.local: " + mavenRepoLocal );
-
-                System.exit( 1 );
-            }
-        }
-
-        if ( !mavenRepoLocal.canWrite() )
-        {
-            System.err.println( "Can't write to " + mavenRepoLocal.getAbsolutePath() );
-
-            System.exit( 1 );
-        }
-
-        System.out.println( "Using the following for your maven.repo.local: " + mavenRepoLocal );
+        
+        downloader = new ArtifactDownloader();
-        downloadDependencies( list );
+        downloader.downloadDependencies( list );
-            classPath.append( mavenRepoLocal + "/" + getArtifactPath( d, "/" ) + ":" );
+            classPath.append( downloader.getMavenRepoLocal() + "/" + getArtifactPath( d, "/" ) + ":" );
-            libs.append( mavenRepoLocal + "/" + getArtifactPath( d, "/" ) + "\n" );
+            libs.append( downloader.getMavenRepoLocal() + "/" + getArtifactPath( d, "/" ) + "\n" );
-        writeFile( "bootstrap.repo", mavenRepoLocal.getPath() );
+        writeFile( "bootstrap.repo", downloader.getMavenRepoLocal().getPath() );
-    private void downloadDependencies( List files )
-        throws Exception
-    {
-        for ( Iterator j = files.iterator(); j.hasNext(); )
-        {
-            try
-            {
-                String file = (String) j.next();
-
-                File destinationFile = new File( mavenRepoLocal, file );
-
-                // The directory structure for this project may
-                // not exists so create it if missing.
-                File directory = destinationFile.getParentFile();
-
-                if ( directory.exists() == false )
-                {
-                    directory.mkdirs();
-                }
-
-                if ( destinationFile.exists() && !file.endsWith( SNAPSHOT_SIGNATURE ) )
-                {
-                    continue;
-                }
-
-                log( "Downloading dependency: " + file );
-
-                getRemoteArtifact( file, destinationFile );
-
-                if ( !destinationFile.exists() )
-                {
-                    throw new Exception( "Failed to download " + file );
-                }
-            }
-            catch ( Exception e )
-            {
-                throw new Exception( e );
-            }
-        }
-    }
-
-    private void setRemoteRepo( String repos )
-    {
-        remoteRepos = new ArrayList();
-
-        if ( repos == null )
-        {
-            remoteRepos.add( "http://www.ibiblio.org/maven/" );
-            return;
-        }
-
-        StringTokenizer st = new StringTokenizer( repos, "," );
-        while ( st.hasMoreTokens() )
-        {
-            remoteRepos.add( st.nextToken().trim() );
-        }
-    }
-
-    private List getRemoteRepo()
-    {
-        return remoteRepos;
-    }
-
-    private boolean getRemoteArtifact( String file, File destinationFile )
-    {
-        boolean fileFound = false;
-
-        for ( Iterator i = getRemoteRepo().iterator(); i.hasNext(); )
-        {
-            String remoteRepo = (String) i.next();
-
-            // The username and password parameters are not being
-            // used here. Those are the "" parameters you see below.
-            String url = remoteRepo + "/" + file;
-
-            if ( !url.startsWith( "file" ) )
-            {
-                url = replace( url, "//", "/" );
-                if ( url.startsWith( "https" ) )
-                {
-                    url = replace( url, "https:/", "https://" );
-                }
-                else
-                {
-                    url = replace( url, "http:/", "http://" );
-                }
-            }
-
-            // Attempt to retrieve the artifact and set the checksum if retrieval
-            // of the checksum file was successful.
-            try
-            {
-                HttpUtils.getFile( url,
-                                   destinationFile,
-                                   ignoreErrors,
-                                   useTimestamp,
-                                   proxyHost,
-                                   proxyPort,
-                                   proxyUserName,
-                                   proxyPassword,
-                                   true );
-
-                // Artifact was found, continue checking additional remote repos (if any)
-                // in case there is a newer version (i.e. snapshots) in another repo
-                fileFound = true;
-            }
-            catch ( FileNotFoundException e )
-            {
-                // Ignore
-            }
-            catch ( Exception e )
-            {
-                // If there are additional remote repos, then ignore exception
-                // as artifact may be found in another remote repo. If there
-                // are no more remote repos to check and the artifact wasn't found in
-                // a previous remote repo, then artifactFound is false indicating
-                // that the artifact could not be found in any of the remote repos
-                //
-                // arguably, we need to give the user better control (another command-
-                // line switch perhaps) of what to do in this case? Maven already has
-                // a command-line switch to work in offline mode, but what about when
-                // one of two or more remote repos is unavailable? There may be multiple
-                // remote repos for redundancy, in which case you probably want the build
-                // to continue. There may however be multiple remote repos because some
-                // artifacts are on one, and some are on another. In this case, you may
-                // want the build to break.
-                //
-                // print a warning, in any case, so user catches on to mistyped
-                // hostnames, or other snafus
-                log( "Error retrieving artifact from [" + url + "]: " );
-            }
-        }
-
-        return fileFound;
-    }
-
-    /**
-     * <p>Replaces all occurrences of a String within another String.</p>
-     *
-     * This methods comes from Commons Lang
-     *
-     * <p>A <code>null</code> reference passed to this method is a no-op.</p>
-     *
-     * <pre>
-     * StringUtils.replace(null, *, *)        = null
-     * StringUtils.replace("", *, *)          = ""
-     * StringUtils.replace("any", null, *)    = "any"
-     * StringUtils.replace("any", *, null)    = "any"
-     * StringUtils.replace("any", "", *)      = "any"
-     * StringUtils.replace("aba", "a", null)  = "aba"
-     * StringUtils.replace("aba", "a", "")    = "b"
-     * StringUtils.replace("aba", "a", "z")   = "zbz"
-     * </pre>
-     *
-     * @param text  text to search and replace in, may be null
-     * @param repl  the String to search for, may be null
-     * @param with  the String to replace with, may be null
-     * @return the text with any replacements processed,
-     *  <code>null</code> if null String input
-     */
-    private String replace( String text, String repl, String with )
-    {
-        StringBuffer buf = new StringBuffer( text.length() );
-        int start = 0, end = 0;
-        while ( ( end = text.indexOf( repl, start ) ) != -1 )
-        {
-            buf.append( text.substring( start, end ) ).append( with );
-            start = end + repl.length();
-        }
-        buf.append( text.substring( start ) );
-        return buf.toString();
-    }
-
-    private void log( String message )
-    {
-        System.out.println( message );
-    }
-
-    private Properties loadProperties( File file )
-    {
-        try
-        {
-            return loadProperties( new FileInputStream( file ) );
-        }
-        catch ( Exception e )
-        {
-            // ignore
-        }
-
-        return new Properties();
-    }
-
-    private static Properties loadProperties( InputStream is )
-    {
-        Properties properties = new Properties();
-
-        try
-        {
-            if ( is != null )
-            {
-                properties.load( is );
-            }
-        }
-        catch ( IOException e )
-        {
-            // ignore
-        }
-        finally
-        {
-            try
-            {
-                if ( is != null )
-                {
-                    is.close();
-                }
-            }
-            catch ( IOException e )
-            {
-                // ignore
-            }
-        }
-
-        return properties;
-    }
-

MOV23 UPD43 UPD42 UPD42 MOV21 UPD42 INS42 UPD43 INS32 UPD42 UPD42 UPD42 INS42 UPD42 MOV42 INS32 UPD45 INS32 UPD45 INS42 INS42 INS42 INS42 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL45 DEL32 DEL45 DEL14 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL45 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL45 DEL32 DEL45 DEL27 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL32 DEL38 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL42 DEL32 DEL38 DEL40 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL21 DEL8 DEL25 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL9 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL38 DEL27 DEL18 DEL8 DEL25 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL24 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL45 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL8 DEL61 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL45 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL38 DEL42 DEL42 DEL42 DEL45 DEL45 DEL32 DEL7 DEL21 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL45 DEL45 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL45 DEL45 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL9 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL24 DEL42 DEL41 DEL8 DEL31 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL42 DEL34 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL36 DEL34 DEL38 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL27 DEL7 DEL21 DEL8 DEL61 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL40 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL42 DEL14 DEL32 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL42 DEL43 DEL14 DEL41 DEL8 DEL31 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL8 DEL54 DEL42 DEL41 DEL8 DEL31