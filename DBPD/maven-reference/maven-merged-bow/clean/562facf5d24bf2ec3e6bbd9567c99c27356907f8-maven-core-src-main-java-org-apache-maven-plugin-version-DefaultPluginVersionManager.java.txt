PR: MNG-122
cleanup artifact metadata retrieval exceptions

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@320701 13f79535-47bb-0310-9956-ffa450edef68

-                throw new PluginVersionResolutionException( groupId, artifactId, "Cannot read plugin registry", e );
+                throw new PluginVersionResolutionException( groupId, artifactId,
+                                                            "Error readin plugin registry: " + e.getMessage(), e );
-                throw new PluginVersionResolutionException( groupId, artifactId, "Cannot parse plugin registry", e );
+                throw new PluginVersionResolutionException( groupId, artifactId,
+                                                            "Error parsing plugin registry: " + e.getMessage(), e );
+        // This takes the spec version and resolves a real version
-
-            // make sure this artifact was actually resolved to a file in the repo...
-            if ( artifact.getFile() != null )
-            {
-                MavenProject pluginProject = mavenProjectBuilder.buildFromRepository( artifact, project
-                    .getPluginArtifactRepositories(), localRepository, false );
-
-                boolean pluginValid = true;
-
-                // if we don't have the required Maven version, then ignore an update
-                if ( pluginProject.getPrerequisites() != null && pluginProject.getPrerequisites().getMaven() != null )
-                {
-                    DefaultArtifactVersion requiredVersion =
-                        new DefaultArtifactVersion( pluginProject.getPrerequisites().getMaven() );
-
-                    if ( runtimeInformation.getApplicationVersion().compareTo( requiredVersion ) < 0 )
-                    {
-                        getLogger().info( "Ignoring available plugin update: " + artifact.getVersion() +
-                            " as it requires Maven version " + requiredVersion );
-                        pluginValid = false;
-                    }
-                }
-
-                String artifactVersion = artifact.getVersion();
-
-                if ( pluginValid && !metaVersionId.equals( artifactVersion ) )
-                {
-                    version = artifactVersion;
-                }
-            }
-            getLogger().debug( "Failed to resolve " + metaVersionId + " version", e );
+            throw new PluginVersionResolutionException( groupId, artifactId, e.getMessage(), e );
-        catch ( ProjectBuildingException e )
+
+        // make sure this artifact was actually resolved to a file in the repo...
+        if ( artifact.getFile() != null )
-            throw new PluginVersionResolutionException( groupId, artifactId,
-                                                        "Unable to build resolve plugin project information", e );
+            MavenProject pluginProject;
+            try
+            {
+                pluginProject = mavenProjectBuilder.buildFromRepository( artifact,
+                                                                         project.getPluginArtifactRepositories(),
+                                                                         localRepository, false );
+            }
+            catch ( ProjectBuildingException e )
+            {
+                throw new PluginVersionResolutionException( groupId, artifactId,
+                                                            "Unable to build resolve plugin project information", e );
+            }
+
+            boolean pluginValid = true;
+
+            // if we don't have the required Maven version, then ignore an update
+            if ( pluginProject.getPrerequisites() != null && pluginProject.getPrerequisites().getMaven() != null )
+            {
+                DefaultArtifactVersion requiredVersion =
+                    new DefaultArtifactVersion( pluginProject.getPrerequisites().getMaven() );
+
+                if ( runtimeInformation.getApplicationVersion().compareTo( requiredVersion ) < 0 )
+                {
+                    getLogger().info( "Ignoring available plugin update: " + artifact.getVersion() +
+                        " as it requires Maven version " + requiredVersion );
+                    pluginValid = false;
+                }
+            }
+
+            String artifactVersion = artifact.getVersion();
+
+            if ( pluginValid && !metaVersionId.equals( artifactVersion ) )
+            {
+                version = artifactVersion;
+            }

MOV8 MOV60 MOV60 INS54 MOV41 INS8 INS12 MOV60 MOV21 MOV44 INS8 INS54 INS53 INS8 MOV12 INS14 INS21 INS43 INS42 INS42 INS32 INS42 INS7 INS42 INS42 INS42 INS42 MOV32 INS27 INS42 INS27 INS42 INS45 INS32 INS45 INS32 INS42 INS42 INS42 INS42 DEL45 DEL42 DEL45 DEL42 DEL42 DEL32 DEL42 DEL45 DEL42 DEL45 DEL27 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8