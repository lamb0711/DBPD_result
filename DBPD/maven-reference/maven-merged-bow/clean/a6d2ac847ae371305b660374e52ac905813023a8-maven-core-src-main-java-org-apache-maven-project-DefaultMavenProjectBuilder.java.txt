Having a DomainModel interface doesn't makes sense in the current context. We no longer have general transforms.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@769836 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.PomClassicDomainModel;
+import org.apache.maven.model.DomainModel;
-        PomClassicDomainModel domainModel;
+        DomainModel domainModel;
-        PomClassicDomainModel domainModel;
+        DomainModel domainModel;
-    private Model interpolateDomainModel( PomClassicDomainModel domainModel, ProjectBuilderConfiguration config, File projectDescriptor )
+    private Model interpolateDomainModel( DomainModel domainModel, ProjectBuilderConfiguration config, File projectDescriptor )
-    private PomClassicDomainModel build( String projectId, File pomFile, ProjectBuilderConfiguration projectBuilderConfiguration )
+    private DomainModel build( String projectId, File pomFile, ProjectBuilderConfiguration projectBuilderConfiguration )
-            PomClassicDomainModel domainModel = new PomClassicDomainModel( pomFile );
+            DomainModel domainModel = new DomainModel( pomFile );
-            		PomClassicDomainModel dm = (PomClassicDomainModel) mavenParents.get( 0 );
+            		DomainModel dm = (DomainModel) mavenParents.get( 0 );
-            domainModels.add( new PomClassicDomainModel( getSuperModel(), false ) );
+            domainModels.add( new DomainModel( getSuperModel(), false ) );
-            	PomClassicDomainModel dm = (PomClassicDomainModel) domain;
+            	DomainModel dm = (DomainModel) domain;
-            PomClassicDomainModel transformedDomainModel = ProcessorContext.build(profileModels, listeners);
+            DomainModel transformedDomainModel = ProcessorContext.build(profileModels, listeners);
-    private static boolean useTopLevelProjectForParent(PomClassicDomainModel currentModel, MavenProject topProject) throws IOException
+    private static boolean useTopLevelProjectForParent(DomainModel currentModel, MavenProject topProject) throws IOException
-    private List<DomainModel> getDomainModelParentsFromRepository(  PomClassicDomainModel domainModel, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories )
+    private List<DomainModel> getDomainModelParentsFromRepository(  DomainModel domainModel, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories )
-        PomClassicDomainModel parentDomainModel = new PomClassicDomainModel( artifactParent.getFile() );
+        DomainModel parentDomainModel = new DomainModel( artifactParent.getFile() );
-    private List<DomainModel> getDomainModelParentsFromLocalPath( PomClassicDomainModel domainModel, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories,
+    private List<DomainModel> getDomainModelParentsFromLocalPath( DomainModel domainModel, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories,
-    	PomClassicDomainModel parentDomainModel = null;
+    	DomainModel parentDomainModel = null;
-        	parentDomainModel = new PomClassicDomainModel( parentFile );
+        	parentDomainModel = new DomainModel( parentFile );
-        	parentDomainModel = new PomClassicDomainModel(projectBuilderConfiguration.getTopLevelProjectFromReactor().getFile());
+        	parentDomainModel = new DomainModel(projectBuilderConfiguration.getTopLevelProjectFromReactor().getFile());

UPD40 UPD43 UPD43 UPD42 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 UPD43 UPD43 UPD42 UPD42 UPD43 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42