Add tests run to mboot.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@162542 13f79535-47bb-0310-9956-ffa450edef68

+    
+    private UnitTests unitTests;
+        
+        unitTests = bootstrapPomParser.getUnitTests();
+        
+        StringBuffer tests = new StringBuffer();
+        
+        tests.append(unitTests.getDirectory());
+        
+        tests.append("@");
+        
+        int size = unitTests.getIncludes().size();
+
+        // If there are no includes specified then we want it all.
+        if ( size == 0 )
+        {
+            tests.append( "'*'" );
+        }
+
+        for ( int j = 0; j < size; j++ )
+        {
+            String include = (String) unitTests.getIncludes().get( j );
+
+            tests.append( include );
+
+            if ( j != size - 1 )
+            {
+                tests.append( "," );
+            }
+        }
+
+        tests.append( "\n" );
+        
+        writeFile( "bootstrap.tests.includes", tests.toString() );
+
+        tests = new StringBuffer();
+        
+        tests.append(unitTests.getDirectory());
+        
+        tests.append("@");
+        
+        size = unitTests.getExcludes().size();
+
+        for ( int j = 0; j < size; j++ )
+        {
+            String exclude = (String) unitTests.getExcludes().get( j );
+
+            tests.append( exclude );
+
+            if ( j != size - 1 )
+            {
+                tests.append( "," );
+            }
+        }
+
+        tests.append( "\n" );
+        
+        writeFile( "bootstrap.tests.excludes", tests.toString() );
-            int size = r.getIncludes().size();
+            size = r.getIncludes().size();
+        
+        private UnitTests unitTests;
+        
+        public UnitTests getUnitTests()
+        {
+            return unitTests;
+        }
+            else if ( rawName.equals( "unitTestSourceDirectory" ) )
+            {
+                unitTests = new UnitTests();
+            }
+                unitTests = new UnitTests();
+            else if ( rawName.equals( "unitTestSourceDirectory" ) )
+            {
+                unitTests.setDirectory(getBodyText());
+            }
+            else if ( insideUnitTest )
+            {
+                if ( rawName.equals( "include" ) )
+                {
+                    unitTests.addInclude( getBodyText() );
+                }
+                else if ( rawName.equals( "exclude" ) )
+                {
+                    unitTests.addExclude( getBodyText() );
+                }
+            }
+    
+    public static class UnitTests
+        implements Serializable
+    {
+        private String directory;
+
+        private List includes = new ArrayList();
+
+        private List excludes = new ArrayList();
+
+        public void addInclude( String pattern )
+        {
+            this.includes.add( pattern );
+        }
+
+        public void addExclude( String pattern )
+        {
+            this.excludes.add( pattern );
+        }
+
+        public List getIncludes()
+        {
+            return this.includes;
+        }
+
+        public List getExcludes()
+        {
+            return this.excludes;
+        }
+
+        public void setDirectory( String directory )
+        {
+            this.directory = directory;
+        }
+
+        public String getDirectory()
+        {
+            return this.directory;
+        }
+    }

INS23 INS55 INS83 INS43 INS59 INS23 INS31 INS83 INS83 INS42 INS43 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS42 INS42 INS21 INS60 INS21 INS21 INS60 INS25 INS24 INS21 INS21 INS21 INS21 INS21 INS21 INS24 INS21 INS21 INS83 INS43 INS59 INS83 INS43 INS42 INS8 INS42 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS7 INS43 INS59 INS32 INS32 INS39 INS59 INS27 INS8 INS58 INS27 INS37 INS8 INS32 INS32 INS7 INS32 INS32 INS7 INS58 INS27 INS37 INS8 INS32 INS32 INS42 INS42 INS42 INS41 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS14 INS43 INS42 INS21 INS43 INS42 INS21 INS42 INS41 INS42 INS41 INS43 INS42 INS21 INS42 INS41 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS32 INS42 INS34 INS21 INS39 INS59 INS42 INS42 INS42 INS60 INS21 INS25 INS42 INS42 INS45 INS42 INS45 INS32 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS32 INS39 INS59 INS42 INS42 INS42 INS60 INS21 INS25 INS42 INS42 INS45 INS42 INS45 INS32 INS21 INS42 INS25 INS25 INS43 INS43 INS42 INS32 INS42 INS32 INS22 INS22 INS42 INS7 INS22 INS42 INS42 INS43 INS42 INS42 INS32 INS42 INS32 INS42 INS34 INS43 INS59 INS32 INS27 INS8 INS42 INS42 INS43 INS42 INS42 INS32 INS42 INS42 INS34 INS43 INS59 INS32 INS27 INS8 INS42 INS42 INS7 INS32 INS8 MOV25 INS32 INS8 MOV25 INS42 INS42 INS22 INS42 INS42 INS22 INS42 INS42 INS52 INS42 INS52 INS42 INS22 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS27 INS21 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS27 INS21 INS42 MOV32 INS42 INS42 INS45 INS21 INS42 INS42 INS45 INS21 INS52 INS42 INS52 INS42 INS52 INS42 INS43 INS32 INS42 INS34 INS32 INS43 INS32 INS42 INS34 INS32 INS7 INS21 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS42 INS42 INS45 INS42 INS14 INS7 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS42 INS14 INS42 INS25 INS42 INS43 INS42 INS8 MOV25 INS42 INS25 INS32 INS8 INS25 INS42 INS42 INS45 INS21 INS32 INS8 INS32 INS42 INS42 INS45 INS21 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 DEL39 DEL42 DEL59 DEL60