prepare provides before configuration, to follown descriptor logic
- *
+ * JDK toolchain factory.
+ * 
-    public DefaultJavaToolchainFactory()
-    {
-    }
-
+
+
+        // populate the provides section
+        Properties provides = model.getProvides(); 
+        for ( Entry<Object, Object> provide : provides.entrySet() )
+        {
+            String key = (String) provide.getKey();
+            String value = (String) provide.getValue();
+
+            if ( value == null )
+            {
+                throw new MisconfiguredToolchainException(
+                    "Provides token '" + key + "' doesn't have any value configured." );
+            }
+
+            if ( "version".equals( key ) )
+            {
+                jtc.addProvideToken( key, RequirementMatcherFactory.createVersionMatcher( value ) );
+            }
+            else
+            {
+                jtc.addProvideToken( key, RequirementMatcherFactory.createExactMatcher( value ) );
+            }
+        }
+
+        // populate the configuration section
-        //now populate the provides section.
-        Properties provides = model.getProvides(); 
-        for ( Entry<Object, Object> provide : provides.entrySet() )
-        {
-            String key = (String) provide.getKey();
-            String value = (String) provide.getValue();
-            if ( value == null )
-            {
-                throw new MisconfiguredToolchainException(
-                    "Provides token '" + key + "' doesn't have any value configured." );
-            }
-            if ( "version".equals( key ) )
-            {
-                jtc.addProvideToken( key, RequirementMatcherFactory.createVersionMatcher( value ) );
-            }
-            else
-            {
-                jtc.addProvideToken( key, RequirementMatcherFactory.createExactMatcher( value ) );
-            }
-        }

INS65 MOV60 MOV70 INS66 DEL83 DEL42 DEL8 DEL31