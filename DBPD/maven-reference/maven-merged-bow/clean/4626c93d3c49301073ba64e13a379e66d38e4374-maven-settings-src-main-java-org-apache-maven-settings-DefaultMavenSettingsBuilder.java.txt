OPEN - issue MNG-2577: Allow interpolation of Properties in settings.xml 
http://jira.codehaus.org/browse/MNG-2577

Modifying to use request properties (embeddable system properties), and organizing this with the existing use of envars. NOT allowing profile-property interpolation, as these could influence profiles in a recursive manner and make their values hard to determine...besides, model-interpolation will pickup profile properties before POMs are interpolated, so the only thing this will miss is profile/properties -> servers, etc. inside the settings itself.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@545283 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.context.BuildContextManager;
+import org.apache.maven.context.SystemBuildContext;
+import org.apache.maven.settings.io.xpp3.SettingsXpp3Writer;
+import org.codehaus.plexus.util.interpolation.PropertiesBasedValueSource;
+    private BuildContextManager manager;
+
-        if ( globalSettingsFile == null && userSettingsFile == null )
+        if ( ( globalSettingsFile == null ) && ( userSettingsFile == null ) )
-        
+
-        
+
+        userSettings = interpolate( userSettings );
+
+    private Settings interpolate( Settings settings )
+        throws IOException
+    {
+        List activeProfiles = settings.getActiveProfiles();
+
+        StringWriter writer = new StringWriter();
+        new SettingsXpp3Writer().write( writer, settings );
+
+        String serializedSettings = writer.toString();
+
+        SystemBuildContext sysContext = SystemBuildContext.getSystemBuildContext( manager, true );
+
+        RegexBasedInterpolator interpolator = new RegexBasedInterpolator();
+
+        interpolator.addValueSource( new PropertiesBasedValueSource( sysContext.getSystemProperties() ) );
+        interpolator.addValueSource( new EnvarBasedValueSource() );
+
+        serializedSettings = interpolator.interpolate( serializedSettings, "settings" );
+
+        Settings result;
+        try
+        {
+            result = new SettingsXpp3Reader().read( new StringReader( serializedSettings ) );
+
+            result.setActiveProfiles( activeProfiles );
+        }
+        catch ( XmlPullParserException e )
+        {
+            IOException error = new IOException( "Failed to parse interpolated settings: " + e.getMessage() );
+            error.initCause( e );
+
+            throw error;
+        }
+
+        return result;
+    }
+
-            
+
-                StringWriter sWriter = new StringWriter();
-
-                IOUtil.copy( reader, sWriter );
-
-                String rawInput = sWriter.toString();
-
-                try
-                {
-                    RegexBasedInterpolator interpolator = new RegexBasedInterpolator();
-
-                    interpolator.addValueSource( new EnvarBasedValueSource() );
-
-                    rawInput = interpolator.interpolate( rawInput, "settings" );
-                }
-                catch ( Exception e )
-                {
-                    getLogger().warn(
-                                      "Failed to initialize environment variable resolver. Skipping environment substitution in settings." );
-                    
-                    getLogger().debug( "Failed to initialize envar resolver. Skipping resolution.", e );
-                }
-
-                StringReader sReader = new StringReader( rawInput );
-
-                settings = modelReader.read( sReader );
+                settings = modelReader.read( reader );
-                
+
-                
+
-            if ( profile.getActivation() != null && profile.getActivation().isActiveByDefault()
+            if ( ( profile.getActivation() != null ) && profile.getActivation().isActiveByDefault()

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS31 INS83 INS43 INS59 INS83 INS43 INS42 INS44 INS43 INS8 INS42 INS42 INS21 INS42 INS43 INS42 INS42 INS60 MOV60 INS21 INS60 INS60 MOV60 INS21 MOV21 INS21 INS60 INS54 INS41 INS7 INS42 INS43 INS59 INS32 MOV43 INS59 INS43 INS59 INS32 INS7 INS43 INS59 INS8 INS12 INS42 INS36 INS36 INS42 INS32 INS42 INS42 INS32 UPD42 INS14 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS32 INS42 INS42 INS21 INS21 INS44 INS8 MOV27 MOV27 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS9 INS43 INS32 INS42 INS42 INS42 INS45 INS7 INS32 INS43 INS42 INS60 INS21 INS53 MOV27 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS42 INS36 MOV38 INS14 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS42 MOV27 INS43 MOV43 INS42 INS43 INS27 INS42 INS42 INS45 INS32 UPD42 INS42 INS42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL32 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL27