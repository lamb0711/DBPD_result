o Added mavenHomeLocal as a argument to the project builder. The project
  builder should now completly obey mavenHomeLocal.
o Made mavenHome and mavenHomeLocal Files instead of Strings.
o Adding licenses to some files missing license.
o Silencing some eclipse warnings.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163188 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.FileReader;
+import java.io.InputStreamReader;
+import java.io.Reader;
+import java.io.StringReader;
+import java.io.StringWriter;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+
+
+import org.codehaus.plexus.util.IOUtil;
-import java.io.File;
-import java.io.FileReader;
-import java.io.IOException;
-import java.io.InputStreamReader;
-import java.io.Reader;
-import java.io.StringReader;
-import java.io.StringWriter;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.Iterator;
-import java.util.LinkedList;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-
-    private Model superModel;
-
-    public MavenProject build( File projectDescriptor )
+    // ----------------------------------------------------------------------
+    // MavenProjectBuilder Implementation
+    // ----------------------------------------------------------------------
+
+    public MavenProject build( File mavenLocalHome, File projectDescriptor )
-        return build( projectDescriptor, false );
+        return build( mavenLocalHome, projectDescriptor, false );
-    public MavenProject build( File projectDescriptor, boolean resolveDependencies )
+    public MavenProject build( File mavenLocalHome, File projectDescriptor, boolean resolveDependencies )
-        String localRepositoryValue = null;
+        ArtifactRepository localRepository = getLocalRepository( mavenLocalHome );
-            // TODO: rename to super-pom.xml so it is not used by the reactor
-            superModel = modelReader.read( new InputStreamReader( DefaultMavenProjectBuilder.class.getResourceAsStream( "pom-4.0.0.xml" ) ) );
-
-            Model userModel = null;
-            // TODO: use maven home local instead of user.home/.m2
-            File userModelFile = new File( System.getProperty( "user.home" ) + "/.m2", "override.xml" );
-            if ( userModelFile.exists() )
-            {
-                userModel = modelReader.read( new FileReader( userModelFile ) );
-                if ( userModel.getParent() != null )
-                {
-                    throw new ProjectBuildingException( "Inheritence not supported in the user override POM" );
-                }
-
-                if ( userModel.getLocal() != null && userModel.getLocal().getRepository() != null )
-                {
-                    localRepositoryValue = userModel.getLocal().getRepository();
-                }
-                superModel.getRepositories().addAll( userModel.getRepositories() );
-            }
-
-            if ( localRepositoryValue == null && superModel.getLocal() != null && superModel.getLocal().getRepository() != null )
-            {
-                localRepositoryValue = superModel.getLocal().getRepository();
-            }
-
-            localRepositoryValue = System.getProperty( "maven.repo.local", localRepositoryValue );
-            System.setProperty( "maven.repo.local", localRepositoryValue );
-
-            ArtifactRepository localRepository = null;
-            if ( localRepositoryValue != null )
-            {
-                localRepository = RepositoryUtils.localRepositoryToWagonRepository( localRepositoryValue );
-            }
-            else
-            {
-                throw new ProjectBuildingException( "A local repository must be specified" );
-            }
+            Model superModel = getSuperModel();
+            Model userModel = getUserOverrideModel( superModel, mavenLocalHome );
+
-            if ( isEmpty( parentModel.getGroupId() ) )
+            if ( StringUtils.isEmpty( parentModel.getGroupId() ) )
-            else if ( isEmpty( parentModel.getArtifactId() ) )
+            else if ( StringUtils.isEmpty( parentModel.getArtifactId() ) )
-            else if ( isEmpty( parentModel.getVersion() ) )
+            else if ( StringUtils.isEmpty( parentModel.getVersion() ) )
-        throws Exception
+        throws ProjectBuildingException
-        Reader reader = null;
-
-            reader = new FileReader( projectDescriptor );
+            return readModel( new FileReader( projectDescriptor ) );
+        }
+        catch( FileNotFoundException ex )
+        {
+            throw new ProjectBuildingException( "Error while building model.", ex );
+        }
+    }
-            Model model = modelReader.read( reader );
-
-            reader.close();
-
-            return model;
+    private Model readModel( Reader reader )
+        throws ProjectBuildingException
+    {
+        try
+        {
+            return modelReader.read( reader );
+        }
+        catch( Exception ex )
+        {
+            throw new ProjectBuildingException( "Error while building model.", ex );
-            if ( reader != null )
-            {
-                try
-                {
-                    reader.close();
-                }
-                catch ( IOException e )
-                {
-                    // ignore
-                }
-            }
+            IOUtil.close( reader );
-    private boolean isEmpty( String string )
+    // ----------------------------------------------------------------------
+    //
+    // ----------------------------------------------------------------------
+
+    /**
+     * Locate the local repository.
+     * 
+     * <ol>
+     *  <li>Try ${maven.repo.local}
+     *  <li>Look in mavenHomeLocal/override.xml
+     *  <li>Set to the default value (${user.home}/.m2/repository).
+     * </ol>
+     * 
+     * @param mavenHomeLocal The maven local home directory
+     * @return Returns the local repository
+     * @throws ProjectBuildingException
+     */
+    protected ArtifactRepository getLocalRepository( File mavenHomeLocal )
+        throws ProjectBuildingException
-        return string == null || string.trim().length() == 0;
+        String localRepository = System.getProperty( "maven.repo.local" );
+
+        Model superModel = getSuperModel();
+
+        if ( !StringUtils.isEmpty( localRepository ) )
+        {
+            return RepositoryUtils.localRepositoryToWagonRepository( localRepository );
+        }
+
+        if ( superModel.getLocal() != null && superModel.getLocal().getRepository() != null )
+        {
+            localRepository = superModel.getLocal().getRepository();
+        }
+
+        Model userModel = getUserOverrideModel( superModel, mavenHomeLocal );
+
+        if ( userModel != null && userModel.getLocal() != null && userModel.getLocal().getRepository() != null )
+        {
+            localRepository = userModel.getLocal().getRepository();
+        }
+
+        if ( localRepository == null )
+        {
+            String userHome = System.getProperty( "user.home" );
+
+            localRepository = new File( userHome, ".m2/repository" ).getAbsolutePath();
+        }
+
+        return RepositoryUtils.localRepositoryToWagonRepository( localRepository );
+    }
+
+    private Model getSuperModel()
+        throws ProjectBuildingException
+    {
+        return readModel( new InputStreamReader( DefaultMavenProjectBuilder.class.getResourceAsStream( "pom-4.0.0.xml" ) ) );
+    }
+
+    private Model getUserOverrideModel( Model superModel, File mavenHomeLocal )
+        throws ProjectBuildingException
+    {
+        File userModelFile = new File( mavenHomeLocal, "override.xml" );
+
+        if ( !userModelFile.exists() )
+        {
+            return null;
+        }
+
+        Model model = readModel( userModelFile );
+
+        if ( model.getParent() != null )
+        {
+            throw new ProjectBuildingException( "Inheritence not supported in the user override POM" );
+        }
+
+        superModel.getRepositories().addAll( model.getRepositories() );
+
+        return model;

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 UPD40 INS40 INS31 INS31 INS31 INS31 INS44 INS43 INS44 MOV83 MOV43 MOV42 MOV44 MOV43 INS8 INS83 MOV43 INS42 INS44 INS43 INS8 INS29 INS83 INS43 INS42 INS44 INS43 INS8 INS83 MOV43 INS42 INS43 INS8 INS43 INS42 INS44 INS43 MOV43 INS42 INS42 MOV43 INS42 INS54 MOV43 INS42 INS42 INS54 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS42 INS60 MOV60 INS25 MOV25 INS60 MOV25 INS25 INS41 UPD42 MOV42 INS41 INS42 UPD43 UPD42 INS43 INS42 INS42 INS60 INS25 INS60 MOV25 INS21 MOV41 MOV43 INS8 INS12 INS8 INS12 INS8 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS42 MOV43 INS59 INS43 INS38 INS8 MOV27 INS43 INS59 UPD27 MOV27 INS8 INS32 MOV32 UPD42 INS42 INS43 INS59 INS38 INS8 INS43 INS59 INS32 INS42 UPD42 INS32 INS60 INS41 INS44 MOV8 INS41 INS44 INS8 MOV21 INS42 INS32 INS42 UPD42 INS32 INS32 INS41 MOV27 INS42 INS42 INS32 INS27 UPD42 MOV60 MOV21 INS42 INS42 INS42 UPD42 INS42 INS42 INS14 MOV32 INS41 INS42 INS42 INS32 MOV32 UPD42 MOV42 INS32 INS42 INS42 INS43 INS59 INS32 INS43 INS42 MOV32 MOV43 INS42 INS53 INS32 INS42 INS42 INS45 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS32 INS42 INS42 INS42 INS27 MOV27 INS43 INS7 INS43 INS42 INS45 INS33 UPD42 MOV42 UPD42 MOV42 UPD42 INS42 INS42 UPD42 INS32 UPD42 MOV42 INS42 INS32 INS42 INS42 MOV14 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS33 UPD42 INS42 UPD42 MOV32 INS42 INS32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 UPD45 INS42 INS43 INS45 INS42 INS14 INS42 INS42 INS42 INS43 INS42 INS45 INS42 DEL83 DEL42 DEL59 DEL23 DEL33 DEL42 DEL7 DEL21 DEL33 DEL42 DEL42 DEL42 DEL43 DEL42 DEL14 DEL32 DEL7 DEL21 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL45 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL33 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL7 DEL42 DEL33 DEL59 DEL60 DEL32 DEL21 DEL8 DEL8 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL8 DEL25 DEL8 DEL54 DEL8 DEL31 DEL42 DEL27 DEL45 DEL27 DEL45 DEL14 DEL42 DEL42 DEL32 DEL42 DEL39 DEL42 DEL42 DEL33 DEL27 DEL32 DEL32 DEL34 DEL27 DEL27 DEL41