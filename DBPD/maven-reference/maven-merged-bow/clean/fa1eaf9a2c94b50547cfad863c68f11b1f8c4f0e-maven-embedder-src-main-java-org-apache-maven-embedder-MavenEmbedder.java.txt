o provide the phases in the lifecycle by extracting the component descriptor
  and pull them out of the configuration.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@292380 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.configuration.PlexusConfiguration;
+import org.codehaus.plexus.component.repository.ComponentDescriptor;
-    private File mavenHome;
-
-    public File getMavenHome()
-    {
-        return mavenHome;
-    }
-
-    public void setMavenHome( File mavenHome )
-    {
-        this.mavenHome = mavenHome;
-    }
-
+    // Lifecycle information
+    // ----------------------------------------------------------------------
+
+    public List getLifecyclePhases()
+        throws MavenEmbedderException
+    {
+        List phases = new ArrayList();
+
+        ComponentDescriptor descriptor = embedder.getContainer().getComponentDescriptor( LifecycleExecutor.ROLE );
+
+        PlexusConfiguration configuration = descriptor.getConfiguration();
+
+        PlexusConfiguration[] phasesConfigurations = configuration.getChild( "phases" ).getChildren( "phase" );
+
+        try
+        {
+            for ( int i = 0; i < phasesConfigurations.length; i++ )
+            {
+                phases.add( phasesConfigurations[i].getValue() );
+            }
+        }
+        catch ( PlexusConfigurationException e )
+        {
+             throw new MavenEmbedderException( "Cannot retrieve default lifecycle phasesConfigurations.", e );
+        }
+
+        return phases;
+    }
+
+    // ----------------------------------------------------------------------
-        // TODO: create a maven.home discovery method.
-
-        if ( mavenHome == null )
-        {
-            mavenHome = new File( userHome, "m2" );
-
-            if ( !mavenHome.exists() )
-            {
-                if ( !mavenHome.mkdirs() )
-                {
-                    throw new IllegalStateException( "A maven home directory does not exist and cannot be created." );
-                }
-            }
-
-            System.setProperty( "maven.home", mavenHome.getAbsolutePath() );
-        }
-

INS26 INS26 INS40 INS40 INS31 INS83 INS43 INS42 INS43 INS8 UPD42 MOV42 INS42 INS60 INS60 INS60 INS60 INS54 INS41 INS43 INS59 INS43 INS59 INS43 INS59 INS5 INS59 INS8 INS12 INS42 INS42 UPD42 MOV42 INS14 UPD42 MOV42 INS42 INS32 INS42 INS42 INS32 INS43 INS85 INS42 INS32 INS24 INS44 INS8 INS43 INS32 INS42 INS40 INS42 INS42 INS42 INS32 INS42 INS45 INS58 INS27 INS37 INS8 UPD43 MOV43 UPD42 MOV42 INS53 INS42 INS42 INS42 INS42 INS42 INS45 INS39 INS59 INS42 INS40 INS42 INS21 UPD42 INS14 INS42 INS34 INS32 INS43 INS45 INS42 INS42 INS42 INS32 INS42 INS2 INS42 INS42 INS42 DEL83 DEL43 DEL59 DEL23 DEL83 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL42 DEL33 DEL27 DEL42 DEL42 DEL43 DEL42 DEL45 DEL14 DEL7 DEL21 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL8 DEL25 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25