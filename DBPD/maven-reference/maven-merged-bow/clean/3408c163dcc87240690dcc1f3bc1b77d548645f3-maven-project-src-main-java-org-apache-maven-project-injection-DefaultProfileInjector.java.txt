o Removed it0048, and replaced it with a unit test for the DefaultProfileInjector.
o Reverted the logic of the DefaultProfileInjector to merge-and-override the model, with the profile being dominant
o Added merging for distributionManagement and modules (conditionally, based on flag) in the modelBase merge
o Refactored the override logic into a couple of methods in ModelUtils to make it easier to understand what's going on here.
o Verified that both the build and the model itself are being merged correctly during profile injection, with profile dominance, but persistence of changes to the model.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@231481 13f79535-47bb-0310-9956-ffa450edef68

-        ModelUtils.mergeModelBases( model, profile );
-
+        // [jc 11-aug-2005] NOTE: the following merge-then-override procedure is used to preserve proper dominance 
+        // (profile wins), while ensuring that any changes are pushed to the model.
+        ModelUtils.mergeModelBases( profile, model, true );
+        
+        ModelUtils.overrideModelBase( model, profile );
+        
+        
-            modelBuild.setDefaultGoal( profileBuild.getDefaultGoal() );
-            modelBuild.setFinalName( profileBuild.getFinalName() );
-            modelBuild.setPluginManagement( profileBuild.getPluginManagement() );
-            
-            modelBuild.setPlugins( profileBuild.getPlugins() );
-            modelBuild.flushPluginMap();
-            
-            modelBuild.setResources( profileBuild.getResources() );
-            modelBuild.setTestResources( profileBuild.getTestResources() );
+            ModelUtils.overrideBuildBase( modelBuild, profileBuild );

MOV21 INS25 MOV27 INS8 INS42 INS9 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 MOV21 MOV60 MOV21 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25