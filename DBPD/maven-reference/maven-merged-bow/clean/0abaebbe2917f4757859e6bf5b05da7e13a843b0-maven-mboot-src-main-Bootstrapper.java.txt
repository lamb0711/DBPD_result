o general cleanup
o add the ability to deal with test resources


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@162551 13f79535-47bb-0310-9956-ffa450edef68

-
-        String basedir = args[0];
-
+        downloadDependencies();
+
+        writeClasspath();
+
+        writeUnitTest();
+
+        writeResources( bootstrapPomParser.getResources(), "bootstrap.resources" );
+
+        writeFile( "bootstrap.repo", downloader.getMavenRepoLocal().getPath() );
+    }
+
+    private void downloadDependencies()
+        throws Exception
+    {
+    }
+    private void writeClasspath()
+        throws Exception
+    {
+    }
+    private void writeUnitTest()
+        throws Exception
+    {
-            tests.append( unitTests.getDirectory() );
+            tests.append( "target/test-classes" );
-            // If there are no includes specified then we want it all.
+            // If there are no unitTestIncludes specified then we want it all.
-            tests.append( unitTests.getDirectory() );
+            tests.append( "target/test-classes" );
+
+            writeResources( unitTests.getResources(), "bootstrap.test.resources" );
+    }
-        resources = bootstrapPomParser.getResources();
-
+    private void writeResources( List resources, String file )
+        throws Exception
+    {
+        int size;
+
-            // If there are no includes specified then we want it all.
+            // If there are no unitTestIncludes specified then we want it all.
-        writeFile( "bootstrap.resources", res.toString() );
-
-        writeFile( "bootstrap.repo", downloader.getMavenRepoLocal().getPath() );
+        writeFile( file, res.toString() );
-            if ( insideUnitTest )
-            {
-                return;
-            }
-            else if ( rawName.equals( "unitTestSourceDirectory" ) )
+            if ( rawName.equals( "unitTest" ) )
-            }
-            else if ( rawName.equals( "unitTest" ) )
-            {
-                unitTests = new UnitTests();
+
-            else if ( rawName.equals( "unitTestSourceDirectory" ) )
-            {
-                unitTests.setDirectory( getBodyText() );
-            }
-                resources.add( currentResource );
+                if ( insideUnitTest )
+                {
+                    unitTests.addResource( currentResource );
+                }
+                else
+                {
+                    resources.add( currentResource );
+                }
-
-            }
-            else if ( insideUnitTest )
-            {
-                if ( rawName.equals( "include" ) )
-                {
-                    unitTests.addInclude( getBodyText() );
-                }
-                else if ( rawName.equals( "exclude" ) )
-                {
-                    unitTests.addExclude( getBodyText() );
-                }
+            else if ( ! insideResource && insideUnitTest )
+            {
+                if ( rawName.equals( "include" ) )
+                {
+                    unitTests.addInclude( getBodyText() );
+                }
+                else if ( rawName.equals( "exclude" ) )
+                {
+                    unitTests.addExclude( getBodyText() );
+                }
+            }
-                // We have something like:
-                //
-                // <dependency>
-                //   <groupId>commons-jelly</groupId>
-                //   <artifactId>commons-jelly-tags-velocity</artifactId>
-                //   <version>SNAPSHOT</version>
-                //  </dependency>
-
-        private List includes = new ArrayList();
+        private List unitTestIncludes = new ArrayList();
-        private List excludes = new ArrayList();
+        private List unitTestExcludes = new ArrayList();
+
+        private List unitTestResources = new ArrayList();
-            this.includes.add( pattern );
+            unitTestIncludes.add( pattern );
-            this.excludes.add( pattern );
+            unitTestExcludes.add( pattern );
+        }
+
+        public void addResource( Resource resource )
+        {
+            unitTestResources.add( resource );
-            return this.includes;
+            return unitTestIncludes;
-            return this.excludes;
+            return unitTestExcludes;
+        }
+
+        public List getResources()
+        {
+            return unitTestResources;

INS31 INS31 INS31 INS31 MOV23 INS83 INS39 INS42 MOV44 INS43 INS8 INS83 INS39 INS42 INS43 INS8 INS83 INS39 INS42 INS43 INS8 UPD83 UPD42 INS43 INS83 INS39 INS42 INS44 INS44 MOV43 INS8 INS23 INS31 INS31 INS42 MOV21 MOV21 MOV21 MOV21 INS21 INS21 INS21 MOV21 MOV21 INS42 MOV60 MOV24 MOV21 INS42 MOV60 MOV60 MOV24 MOV21 MOV21 INS42 INS43 INS42 MOV43 INS42 MOV60 MOV60 MOV24 MOV21 INS43 INS83 MOV43 INS59 MOV44 MOV44 INS83 INS39 INS42 INS44 INS8 MOV43 INS83 INS43 INS42 INS8 INS32 INS32 INS32 INS32 INS39 MOV21 INS42 MOV25 MOV25 UPD42 INS42 UPD42 INS42 INS14 INS43 INS42 INS21 INS42 INS41 INS42 INS42 INS42 INS42 MOV32 INS45 UPD42 INS21 INS21 INS42 MOV32 MOV8 INS43 INS42 INS32 INS42 INS42 INS42 INS32 INS32 MOV32 MOV8 INS42 INS42 INS42 INS42 INS42 INS42 MOV42 MOV42 INS45 UPD42 MOV42 UPD42 MOV42 INS45 UPD42 INS45 MOV32 MOV8 UPD42 MOV32 INS8 INS25 MOV21 UPD42 MOV8 UPD42 MOV42 INS8 MOV8 INS42 INS25 INS21 INS27 MOV8 INS32 INS38 INS42 INS42 INS42 INS42 INS42 DEL42 DEL7 DEL42 DEL34 DEL2 DEL32 DEL32 DEL21 DEL42 DEL45 DEL42 DEL41 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL8 DEL25 DEL25 DEL42 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL25 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22