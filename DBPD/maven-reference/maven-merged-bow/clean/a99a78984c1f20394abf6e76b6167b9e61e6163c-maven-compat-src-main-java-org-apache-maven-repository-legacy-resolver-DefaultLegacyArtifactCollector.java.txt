o Updated to remove errors reported by Checkstyle.
+
-                                             Map<String, Artifact> managedVersions, ArtifactResolutionRequest repositoryRequest,
+                                             Map<String, Artifact> managedVersions,
+                                             ArtifactResolutionRequest repositoryRequest,
-    private ManagedVersionMap getManagedVersionsMap( Artifact originatingArtifact, Map<String,Artifact> managedVersions )
+    private ManagedVersionMap getManagedVersionsMap( Artifact originatingArtifact,
+                                                     Map<String, Artifact> managedVersions )
-        /* remove the originating artifact if it is also in managed versions to avoid being modified during resolution */
+        // remove the originating artifact if it is also in managed versions to avoid being modified during resolution
-                            ResolutionNode[] resetNodes = { previous, node };
+                            ResolutionNode[] resetNodes =
+                            {
+                                previous, node
+                            };
+
-                                                                                   "Unable to get dependency information: "
-                                                                                       + e.getMessage(), resetArtifact,
-                                                                                   request.getRemoteRepositories(), e );
+                                                "Unable to get dependency information: "
+                                                    + e.getMessage(), resetArtifact, request.getRemoteRepositories(),
+                                                e );
+
-                                    ArtifactVersion selectedVersion =
-                                        resetArtifact.getVersionRange().matchVersion( resetArtifact.getAvailableVersions() );
+                                    ArtifactVersion selectedVersion = resetArtifact.getVersionRange().
+                                        matchVersion( resetArtifact.getAvailableVersions() );
+
-                                        throw new OverConstrainedVersionException( " Unable to find a version in "
-                                            + resetArtifact.getAvailableVersions() + " to match the range "
-                                            + resetArtifact.getVersionRange(), resetArtifact );
+                                        throw new OverConstrainedVersionException(
+                                            "Unable to find a version in " + resetArtifact.getAvailableVersions()
+                                                + " to match the range " + resetArtifact.getVersionRange(),
+                                            resetArtifact );
+
-                        for ( Iterator<ConflictResolver> j = conflictResolvers.iterator(); ( resolved == null ) && j.hasNext(); )
+                        for ( Iterator<ConflictResolver> j = conflictResolvers.iterator();
+                              resolved == null && j.hasNext(); )
-                                    + previous.getArtifact().getVersion() + " and " + node.getArtifact().getVersion(),
+                                                                     + previous.getArtifact().getVersion() + " and "
+                                                                     + node.getArtifact().getVersion(),
+
-                                                                                              "Conflict resolver returned unknown resolution node: ",
-                                                                                              resolved.getArtifact() ) );
+                                "Conflict resolver returned unknown resolution node: ",
+                                resolved.getArtifact() ) );
+
-                                                                                           "No versions are present in the repository for the artifact with a range "
-                                                                                               + versionRange,
-                                                                                           artifact,
-                                                                                           childRemoteRepositories );
+                                                    "No versions are present in the repository for the artifact"
+                                                        + " with a range " + versionRange, artifact,
+                                                    childRemoteRepositories );
+
-                                            throw new OverConstrainedVersionException( "Couldn't find a version in "
-                                                + versions + " to match range " + versionRange, artifact,
-                                                childRemoteRepositories );
+                                            throw new OverConstrainedVersionException(
+                                                "Couldn't find a version in " + versions + " to match range "
+                                                    + versionRange, artifact, childRemoteRepositories );
+
-                            while( !childKey.equals( child.getKey() ) );
+                            while ( !childKey.equals( child.getKey() ) );
-                                && !parentArtifact.getDependencyFilter().include( artifact ) )
+                                     && !parentArtifact.getDependencyFilter().include( artifact ) )
-                                + artifact.getId() + ": " + e.getMessage(), artifact, childRemoteRepositories, e );
+                                                                       + artifact.getId() + ": " + e.getMessage(),
+                                                                   artifact, childRemoteRepositories, e );
+
+
-
-            && ( !node.isChildOfRootNode() || node.getArtifact().getVersion() == null ) )
+                 && ( !node.isChildOfRootNode() || node.getArtifact().getVersion() == null ) )
-            && ( artifact.getFile() != null ) )
+                 && ( artifact.getFile() != null ) )
-            && ( Artifact.SCOPE_TEST.equals( nearestArtifact.getScope() )
-                            || Artifact.SCOPE_PROVIDED.equals( nearestArtifact.getScope() ) ) )
+                 && ( Artifact.SCOPE_TEST.equals( nearestArtifact.getScope() )
+                      || Artifact.SCOPE_PROVIDED.equals( nearestArtifact.getScope() ) ) )
-            && !Artifact.SCOPE_COMPILE.equals( nearestArtifact.getScope() ) )
+                 && !Artifact.SCOPE_COMPILE.equals( nearestArtifact.getScope() ) )
-                        || replacement.getVersionRange().hasRestrictions() )
+                             || replacement.getVersionRange().hasRestrictions() )

MOV27 UPD45 UPD45 INS45 DEL36