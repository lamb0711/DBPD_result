o Refactored the MavenSettings code into the settings.mdo/Settings class.

o Added code to cache the active proxy and profile inside the Settings instance for quicker lookup.

o Added a method to initialize a new active profile for a Settings instance in the event one didn't exist.

o Started adding offline mode. So far, I've implemented:

  - Warning when a mojo declares a requirement for connectivity, but we're offline.

  - INFO message stating when maven is running in offline mode.

  - Addition to the Profile class in o.a.m.settings package to allow specification of offline mode by declaring: <offline>true</offline>


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163969 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.settings.MavenSettings;
+import org.apache.maven.settings.Settings;
-    private final MavenSettings settings;
+    private final Settings settings;
-    public DefaultMavenExecutionRequest( ArtifactRepository localRepository, MavenSettings settings,
+    public DefaultMavenExecutionRequest( ArtifactRepository localRepository, Settings settings,
-    public MavenSettings getSettings()
+    public Settings getSettings()

UPD40 UPD43 UPD43 UPD42 UPD43 UPD42 UPD42