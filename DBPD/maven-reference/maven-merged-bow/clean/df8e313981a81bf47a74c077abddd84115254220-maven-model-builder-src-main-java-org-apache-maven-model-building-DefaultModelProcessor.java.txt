o Cleaned up code

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@930689 13f79535-47bb-0310-9956-ffa450edef68

+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
-import org.apache.maven.model.io.ModelParseException;
-import org.apache.maven.model.io.xpp3.MavenXpp3Reader;
+import org.apache.maven.model.io.ModelReader;
+import org.apache.maven.model.locator.ModelLocator;
-import org.codehaus.plexus.util.IOUtil;
-import org.codehaus.plexus.util.ReaderFactory;
-import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
+import org.codehaus.plexus.component.annotations.Requirement;
-@Component(role = ModelProcessor.class)
+@Component( role = ModelProcessor.class )
+
+    @Requirement
+    private ModelLocator locator;
+
+    @Requirement
+    private ModelReader reader;
+
-        return new File( projectDirectory, "pom.xml" );
+        return locator.locatePom( projectDirectory );
-        if ( input == null )
-        {
-            throw new IllegalArgumentException( "input file missing" );
-        }
-
-        Model model = read( ReaderFactory.newXmlReader( input ), options );
-
-        model.setPomFile( input );
-
-        return model;
+        return reader.read( input, options );
-        if ( input == null )
-        {
-            throw new IllegalArgumentException( "input reader missing" );
-        }
-
-        try
-        {
-            MavenXpp3Reader r = new MavenXpp3Reader();
-            return r.read( input, isStrict( options ) );
-        }
-        catch ( XmlPullParserException e )
-        {
-            throw new ModelParseException( e.getMessage(), e.getLineNumber(), e.getColumnNumber(), e );
-        }
-        finally
-        {
-            IOUtil.close( input );
-        }
+        return reader.read( input, options );
-        if ( input == null )
-        {
-            throw new IllegalArgumentException( "input stream missing" );
-        }
-
-        try
-        {
-            MavenXpp3Reader r = new MavenXpp3Reader();
-            return r.read( input, isStrict( options ) );
-        }
-        catch ( XmlPullParserException e )
-        {
-            throw new ModelParseException( e.getMessage(), e.getLineNumber(), e.getColumnNumber(), e );
-        }
-        finally
-        {
-            IOUtil.close( input );
-        }
+        return reader.read( input, options );
-    private boolean isStrict( Map<String, ?> options )
-    {
-        Object value = ( options != null ) ? options.get( IS_STRICT ) : null;
-        return value == null || Boolean.parseBoolean( value.toString() );
-    }

UPD40 UPD40 UPD40 INS23 INS23 INS31 INS78 INS83 INS43 INS59 INS78 INS83 INS43 INS59 INS83 MOV43 INS42 MOV44 INS8 MOV43 MOV44 MOV44 MOV43 INS8 MOV43 MOV44 MOV44 MOV43 INS8 UPD83 MOV43 UPD42 MOV44 MOV44 MOV43 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS41 MOV41 MOV41 INS32 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL42 DEL43 DEL42 DEL45 DEL14 DEL41 DEL8 DEL31 DEL83 DEL42 DEL42 DEL33 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL42 DEL32 DEL42 DEL33 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8 DEL42 DEL32 DEL42 DEL33 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8 DEL39 DEL42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL33 DEL27 DEL36 DEL42 DEL42 DEL42 DEL32 DEL33 DEL16 DEL59 DEL60 DEL42 DEL33 DEL27 DEL32 DEL32 DEL27