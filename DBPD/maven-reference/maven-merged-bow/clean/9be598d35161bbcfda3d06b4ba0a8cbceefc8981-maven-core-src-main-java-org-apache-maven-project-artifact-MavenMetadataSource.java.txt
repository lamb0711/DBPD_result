o injecting the metadata sources results in having to do some trickery to break the circular dependency between the components, this
  is visible now in the metadata source which shows we need to do some work there as circular deps are pretty sure sign of poor design
o the ProjectClasspathTest has little stub components so I'm not even sure if it's a decent test but it requires a bunch of custom
  implementations as i tried to get rid of the hand written descriptor and have only annotated tests implementations but somewhere
  an incorrect implementations is being injected.

I'll work on breaking the circular dependency and we need a nicer way to inject test implementations, the way the Module works in
Guice is the way to go. We'll bridge the gap until we can switch over to Guice.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@776529 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.repository.RepositorySystem;
+import org.codehaus.plexus.PlexusContainer;
+import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
+import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
+import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
+    //TODO: this will also cause a cycle so we need to refactor some code
-    private RepositorySystem repositorySystem;
+    private ArtifactFactory repositorySystem;
-    @Requirement
+    //TODO: This prevents a cycle in the composition which shows us another problem we need to deal with. 
+    //@Requirement
+    private PlexusContainer container;
+    
+    @Requirement
-            project = projectBuilder.buildFromRepository( pomArtifact, configuration );
+            project = getProjectBuilder().buildFromRepository( pomArtifact, configuration );
+    
+    public MavenProjectBuilder getProjectBuilder()
+    {
+        if ( projectBuilder != null )
+        {
+            return projectBuilder;
+        }
+        
+        try
+        {
+            projectBuilder = container.lookup( MavenProjectBuilder.class );
+        }
+        catch ( ComponentLookupException e )
+        {
+            // Won't happen
+        }
+        
+        return projectBuilder;
+    }    

MOV26 INS26 INS26 INS26 INS40 UPD40 INS40 INS40 INS23 INS31 UPD43 MOV78 INS83 INS43 INS59 INS83 INS43 INS42 INS8 UPD42 INS42 INS42 INS42 INS25 INS54 INS41 INS27 INS8 INS8 INS12 INS42 INS42 INS33 INS41 INS21 INS44 INS8 INS42 INS7 INS43 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS57 UPD42 MOV42 INS43 INS42