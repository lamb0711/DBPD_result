change resolve() methods to not return Artifact - but instead modify the original. Artifact is immutable except for version so it is safe - but will it cost flexibility later. Currently, this makes it much simpler as less copying vigilance is required.
This has ironed out most wrinkles. Still need to implement the snapshot checking cache, and special case the use of installed snapshots over deployed ones.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163706 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.DefaultArtifact;
-import org.apache.maven.artifact.metadata.ArtifactMetadata;
-    public Artifact transformForResolve( Artifact artifact, List remoteRepositories,
-                                         ArtifactRepository localRepository )
+    public void transformForResolve( Artifact artifact, List remoteRepositories, ArtifactRepository localRepository )
-            //  - poms and jars are different, so both are checked individually
-            //  - when a pom is downloaded, it prevents the JAR getting downloaded because of the timestamp
-            //  - need to gather first, group them all up by groupId/artifactId, then go after them
-            //  - alternatively, keep the timestamp when downloading (as is done here), and use the SNAPSHOT file for install
-            //  - however, there is no mechanism to flip back and forward, and presently it keeps looking for 2.0-TIMESTAMP-0 instead as that is in the build file
+
+                resolvedArtifactCache.add( getCacheKey( artifact ) );
-
-            artifact = createArtifactCopy( artifact, localMetadata );
-
-            resolvedArtifactCache.add( getCacheKey( artifact ) );
+            artifact.setVersion( localMetadata.constructVersion() );
-        return artifact;
-    public Artifact transformForInstall( Artifact artifact, ArtifactRepository localRepository )
+    public void transformForInstall( Artifact artifact, ArtifactRepository localRepository )
-        return artifact;
-    public Artifact transformForDeployment( Artifact artifact, ArtifactRepository remoteRepository )
+    public void transformForDeployment( Artifact artifact, ArtifactRepository remoteRepository )
-            // TODO: note, we could currently transform this in place, as it is only used through the deploy mojo,
-            //   which creates the artifact and then disposes of it
-            artifact = createArtifactCopy( artifact, metadata );
+            artifact.setVersion( metadata.constructVersion() );
+
-        return artifact;
-    }
-
-    private Artifact createArtifactCopy( Artifact artifact, SnapshotArtifactMetadata metadata )
-    {
-        Artifact newArtifact = new DefaultArtifact( artifact.getGroupId(), artifact.getArtifactId(),
-                                                    metadata.constructVersion(), artifact.getScope(),
-                                                    artifact.getType(), artifact.getClassifier() );
-        newArtifact.setBaseVersion( artifact.getBaseVersion() );
-
-        for ( Iterator i = artifact.getMetadataList().iterator(); i.hasNext(); )
-        {
-            ArtifactMetadata m = (ArtifactMetadata) i.next();
-            m.setArtifact( newArtifact );
-            newArtifact.addMetadata( m );
-        }
-
-        newArtifact.setRepository( artifact.getRepository() );
-
-        return newArtifact;

INS39 INS39 INS39 INS32 INS21 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 MOV32 INS32 UPD42 UPD42 INS42 INS42 INS32 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL41 DEL42 DEL43 DEL42 DEL41 DEL42 DEL43 DEL42 DEL32 DEL7 DEL42 DEL41 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31