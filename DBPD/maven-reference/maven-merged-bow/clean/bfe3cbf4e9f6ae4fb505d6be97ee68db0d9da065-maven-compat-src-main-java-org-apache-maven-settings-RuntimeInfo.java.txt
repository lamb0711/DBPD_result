o the release plugin manages to somehow get its own instance of a Settings so the SettingsAdapter which I use everywhere else gets used except in the release plugin so I have to jack back in the hardcoded RuntimeInfo until I figure out why. not a big deal, i'll list it in the compatibility notes. on another note if you start the release process using release:prepare and it fails, you make code changes, it will happily let you continue and not check the status again.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@731273 13f79535-47bb-0310-9956-ffa450edef68

+    public static final String userHome = System.getProperty( "user.home" );
+
+    public static final File userMavenConfigurationHome = new File( userHome, ".m2" );
+
+    public static final File DEFAULT_USER_SETTINGS_FILE = new File( userMavenConfigurationHome, "settings.xml" );
+    
-            
+
+    public RuntimeInfo()
+    {
+        this.settings = DEFAULT_USER_SETTINGS_FILE;
+    }
+    

INS23 INS23 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS42 INS8 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS14 INS21 INS42 INS42 INS45 INS43 INS42 INS45 INS43 INS42 INS45 INS7 INS42 INS42 INS22 INS42 INS52 INS42