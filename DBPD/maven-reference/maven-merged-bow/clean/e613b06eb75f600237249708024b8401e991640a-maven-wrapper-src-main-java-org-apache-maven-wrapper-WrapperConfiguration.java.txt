[MNG-5937] Split wrapper jar from assemblies
Remove unused cli package
Reformat code

-public class WrapperConfiguration {
-  public static final String ALWAYS_UNPACK_ENV = "MAVEN_WRAPPER_ALWAYS_UNPACK";
+/**
+ * The Wrapper Configuration
+ */
+public class WrapperConfiguration
+{
+    public static final String ALWAYS_UNPACK_ENV = "MAVEN_WRAPPER_ALWAYS_UNPACK";
-  public static final String ALWAYS_DOWNLOAD_ENV = "MAVEN_WRAPPER_ALWAYS_DOWNLOAD";
+    public static final String ALWAYS_DOWNLOAD_ENV = "MAVEN_WRAPPER_ALWAYS_DOWNLOAD";
-  private boolean alwaysUnpack = Boolean.parseBoolean(System.getenv(ALWAYS_UNPACK_ENV));
+    private boolean alwaysUnpack = Boolean.parseBoolean( System.getenv( ALWAYS_UNPACK_ENV ) );
-  private boolean alwaysDownload = Boolean.parseBoolean(System.getenv(ALWAYS_DOWNLOAD_ENV));
+    private boolean alwaysDownload = Boolean.parseBoolean( System.getenv( ALWAYS_DOWNLOAD_ENV ) );
-  private URI distribution;
+    private URI distribution;
-  private String distributionBase = PathAssembler.MAVEN_USER_HOME_STRING;
+    private String distributionBase = PathAssembler.MAVEN_USER_HOME_STRING;
-  private String distributionPath = Installer.DEFAULT_DISTRIBUTION_PATH;
+    private String distributionPath = Installer.DEFAULT_DISTRIBUTION_PATH;
-  private String zipBase = PathAssembler.MAVEN_USER_HOME_STRING;
+    private String zipBase = PathAssembler.MAVEN_USER_HOME_STRING;
-  private String zipPath = Installer.DEFAULT_DISTRIBUTION_PATH;
+    private String zipPath = Installer.DEFAULT_DISTRIBUTION_PATH;
-  public boolean isAlwaysDownload() {
-    return alwaysDownload;
-  }
+    public boolean isAlwaysDownload()
+    {
+        return alwaysDownload;
+    }
-  public void setAlwaysDownload(boolean alwaysDownload) {
-    this.alwaysDownload = alwaysDownload;
-  }
+    public void setAlwaysDownload( boolean alwaysDownload )
+    {
+        this.alwaysDownload = alwaysDownload;
+    }
-  public boolean isAlwaysUnpack() {
-    return alwaysUnpack;
-  }
+    public boolean isAlwaysUnpack()
+    {
+        return alwaysUnpack;
+    }
-  public void setAlwaysUnpack(boolean alwaysUnpack) {
-    this.alwaysUnpack = alwaysUnpack;
-  }
+    public void setAlwaysUnpack( boolean alwaysUnpack )
+    {
+        this.alwaysUnpack = alwaysUnpack;
+    }
-  public URI getDistribution() {
-    return distribution;
-  }
+    public URI getDistribution()
+    {
+        return distribution;
+    }
-  public void setDistribution(URI distribution) {
-    this.distribution = distribution;
-  }
+    public void setDistribution( URI distribution )
+    {
+        this.distribution = distribution;
+    }
-  public String getDistributionBase() {
-    return distributionBase;
-  }
+    public String getDistributionBase()
+    {
+        return distributionBase;
+    }
-  public void setDistributionBase(String distributionBase) {
-    this.distributionBase = distributionBase;
-  }
+    public void setDistributionBase( String distributionBase )
+    {
+        this.distributionBase = distributionBase;
+    }
-  public String getDistributionPath() {
-    return distributionPath;
-  }
+    public String getDistributionPath()
+    {
+        return distributionPath;
+    }
-  public void setDistributionPath(String distributionPath) {
-    this.distributionPath = distributionPath;
-  }
+    public void setDistributionPath( String distributionPath )
+    {
+        this.distributionPath = distributionPath;
+    }
-  public String getZipBase() {
-    return zipBase;
-  }
+    public String getZipBase()
+    {
+        return zipBase;
+    }
-  public void setZipBase(String zipBase) {
-    this.zipBase = zipBase;
-  }
+    public void setZipBase( String zipBase )
+    {
+        this.zipBase = zipBase;
+    }
-  public String getZipPath() {
-    return zipPath;
-  }
+    public String getZipPath()
+    {
+        return zipPath;
+    }
-  public void setZipPath(String zipPath) {
-    this.zipPath = zipPath;
-  }
+    public void setZipPath( String zipPath )
+    {
+        this.zipPath = zipPath;
+    }

INS29 INS65 INS66