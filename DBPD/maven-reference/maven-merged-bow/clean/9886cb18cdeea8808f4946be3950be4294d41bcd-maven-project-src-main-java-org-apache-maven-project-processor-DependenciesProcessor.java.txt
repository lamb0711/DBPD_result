Fixed plugin dependency ordering.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@757526 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.Model;
-import org.apache.maven.project.builder.ProjectUri;
-import org.apache.maven.shared.model.ModelContainerAction;
+
-                        /*
-                        if ( match( childDependency, parentDependency ) )
-                        {
-                            processor.process( null, childDependency, dependencies, isChildMostSpecialized );
-                            childDependencies.add( parentDependency );
-                        }
-                        else
-                        {
-                        */
-                            processor.process( null, childDependency, dependencies, isChildMostSpecialized );
-                            childDependencies.add( parentDependency );
-    
+                        processor.process( null, childDependency, dependencies, isChildMostSpecialized );
+                        childDependencies.add( parentDependency );
-        }
-        
-        //Cleanup duplicates
-        List<Dependency> ordered = new ArrayList<Dependency>(dependencies);
-       // Collections.reverse( ordered );
-        for(Dependency dependency : ordered)
-        {
-            for(int i = ordered.indexOf( dependency ) + 1; i < ordered.size(); i++)
-            {
-                Dependency d1 = ordered.get( i );
-                if(match1(d1, dependency))
-                {
-                   // System.out.println("REMOVE:" + d1.getManagementKey() + ":" + d1.getVersion());
-                 //   dependencies.remove( d1 );    
-                }
-            }
-        }
-        
-    }
-
-    private static boolean contains(Dependency dependency, List<Dependency> dependencies)
-    {     
-        return false;
-    }
-
-    private boolean match1(Dependency d1, Dependency d2)
-    {
-         return getId( d1 ).equals( getId( d2 ) );
-    }
-
-    /*
-    private boolean match(Dependency d1, Dependency d2)
-    {
-        if(isManagement)
-        {
-            return d1.getGroupId().equals( d2.getGroupId() ) && d1.getArtifactId().equals( d2.getArtifactId() );
-        }
-        else
-        {
-            return d1.getGroupId().equals( d2.getGroupId() ) && d1.getArtifactId().equals( d2.getArtifactId() ) && d2.getVersion().equals(d1.getVersion());
-        }
-    }
-    */
-    private boolean match( Dependency d1, Dependency d2 )
-    {
-        // TODO: Version ranges ?
-        if ( getId( d1 ).equals( getId( d2 ) ) )
-        {
-            return ( d1.getVersion() == null ? "" : d1.getVersion() ).equals( d2.getVersion() == null ? ""
-                            : d2.getVersion() );
-        }
-        return false;
-    }
-
-    private String getId( Dependency d )
-    {
-        StringBuilder sb = new StringBuilder();
-        
-        sb.append( d.getGroupId() ).append( ":" ).append( d.getArtifactId() );
-        sb.append( ":" ).append(
-                                     d.getType() == null ? "jar"
-                                                     : "" ).append(
-                                                                    ":" ).append(
-                                                                                  d.getClassifier() );
-        
-        return sb.toString();
+        }      

DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL34 DEL27 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL8 DEL25 DEL8 DEL24 DEL8 DEL70 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL9 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL33 DEL27 DEL45 DEL42 DEL42 DEL32 DEL16 DEL36 DEL42 DEL42 DEL42 DEL32 DEL33 DEL27 DEL45 DEL42 DEL42 DEL32 DEL16 DEL32 DEL41 DEL8 DEL25 DEL9 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL33 DEL27 DEL45 DEL45 DEL16 DEL32 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31