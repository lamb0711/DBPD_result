Fixing problem with new extensions manager code where custom lifecycle definitions are not used in build planning. Unit tests included.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@600792 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.PlexusConstants;
+import org.codehaus.plexus.PlexusContainer;
+import org.codehaus.plexus.context.Context;
+import org.codehaus.plexus.context.ContextException;
+import org.codehaus.plexus.personality.plexus.lifecycle.phase.Contextualizable;
-    implements LifecycleBindingManager, LogEnabled
+    implements LifecycleBindingManager, LogEnabled, Contextualizable
+    // contextualized, used for setting lookup realm before retrieving lifecycle bindings for packaging.
+    private PlexusContainer container;
+
-    public LifecycleBindings getBindingsForPackaging( final MavenProject project )
+    public LifecycleBindings getBindingsForPackaging( final MavenProject project, final MavenSession session )
-        LifecycleBindingLoader loader = (LifecycleBindingLoader) bindingsByPackaging.get( packaging );
-        if ( loader != null )
-        {
-            bindings = loader.getBindings();
-        }
+        ClassRealm projectRealm = session.getRealmManager().getProjectRealm( project.getGroupId(), project.getArtifactId(), project.getVersion() );
-        // TODO: Remove this once we no longer have to support legacy-style lifecycle mappings
-        if ( bindings == null )
+        ClassRealm oldRealm = container.setLookupRealm( projectRealm );
+
+        try
-            LifecycleMapping mapping = (LifecycleMapping) legacyMappingsByPackaging.get( packaging );
-            if ( mapping != null )
+            LifecycleBindingLoader loader = (LifecycleBindingLoader) bindingsByPackaging.get( packaging );
+            if ( loader != null )
-                bindings = legacyLifecycleMappingParser.parseMappings( mapping, packaging );
+                bindings = loader.getBindings();
+
+            // TODO: Remove this once we no longer have to support legacy-style lifecycle mappings
+            if ( bindings == null )
+            {
+                LifecycleMapping mapping = (LifecycleMapping) legacyMappingsByPackaging.get( packaging );
+                if ( mapping != null )
+                {
+                    bindings = legacyLifecycleMappingParser.parseMappings( mapping, packaging );
+                }
+            }
+        }
+        finally
+        {
+            container.setLookupRealm( oldRealm );
+    public void contextualize( Context ctx )
+        throws ContextException
+    {
+        container = (PlexusContainer) ctx.get( PlexusConstants.PLEXUS_KEY );
+    }
+

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS43 INS23 INS31 INS42 INS83 INS43 INS59 INS44 INS83 INS39 INS42 INS44 INS43 INS8 INS42 INS42 INS83 INS43 INS42 INS60 INS60 INS54 INS43 INS42 INS42 INS21 INS42 INS43 INS59 INS43 INS59 INS8 INS8 INS42 INS7 INS42 INS42 INS32 INS42 INS42 INS32 MOV60 MOV25 MOV25 INS21 INS42 INS11 INS32 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40