roll back r332220 as it broke it0063


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@332234 13f79535-47bb-0310-9956-ffa450edef68

-                            if ( Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ) )
+                            // set the recommended version
+                            // TODO: maybe its better to just pass the range through to retrieval and use a transformation?
+                            ArtifactVersion version;
+                            if ( !artifact.isSelectedVersionKnown() )
-                                String selectedVersion = "unknown";
-                                VersionRange versionRange = artifact.getVersionRange();
-                                
-                                if ( versionRange != null )
+                                List versions = artifact.getAvailableVersions();
+                                if ( versions == null )
-                                    ArtifactVersion version = ( versionRange != null ) ? ( versionRange.getRecommendedVersion() ) : null;
-                                    
-                                    if ( version != null )
+                                    versions = source.retrieveAvailableVersions( artifact, localRepository,
+                                                                                 remoteRepositories );
+                                    artifact.setAvailableVersions( versions );
+                                }
+
+                                VersionRange versionRange = artifact.getVersionRange();
+
+                                version = versionRange.matchVersion( versions );
+
+                                if ( version == null )
+                                {
+                                    if ( versions.isEmpty() )
-                                        selectedVersion = version.toString();
+                                        throw new OverConstrainedVersionException(
+                                            "No versions are present in the repository for the artifact with a range " +
+                                                versionRange, artifact, remoteRepositories );
+                                    }
+                                    else
+                                    {
+                                        throw new OverConstrainedVersionException( "Couldn't find a version in " +
+                                            versions + " to match range " + versionRange, artifact,
+                                                                                          remoteRepositories );
-                                
-                                artifact.selectVersion( selectedVersion );
-                                // set the recommended version
-                                // TODO: maybe its better to just pass the range through to retrieval and use a transformation?
-                                ArtifactVersion version;
-                                if ( !artifact.isSelectedVersionKnown() )
-                                {
-                                    List versions = artifact.getAvailableVersions();
-                                    if ( versions == null )
-                                    {
-                                        versions = source.retrieveAvailableVersions( artifact, localRepository,
-                                                                                     remoteRepositories );
-                                        artifact.setAvailableVersions( versions );
-                                    }
-
-                                    VersionRange versionRange = artifact.getVersionRange();
-
-                                    version = versionRange.matchVersion( versions );
-
-                                    if ( version == null )
-                                    {
-                                        if ( versions.isEmpty() )
-                                        {
-                                            throw new OverConstrainedVersionException(
-                                                                                       "No versions are present in the repository for the artifact with a range "
-                                                                                           + versionRange, artifact,
-                                                                                       remoteRepositories );
-                                        }
-                                        else
-                                        {
-                                            throw new OverConstrainedVersionException( "Couldn't find a version in "
-                                                + versions + " to match range " + versionRange, artifact,
-                                                                                       remoteRepositories );
-                                        }
-                                    }
-                                }
-                                else
-                                {
-                                    version = artifact.getSelectedVersion();
-                                }
-
-                                artifact.selectVersion( version.toString() );
-                                fireEvent( ResolutionListener.SELECT_VERSION_FROM_RANGE, listeners, child );
+                                version = artifact.getSelectedVersion();
+
+                            artifact.selectVersion( version.toString() );
+                            fireEvent( ResolutionListener.SELECT_VERSION_FROM_RANGE, listeners, child );
-                    // don't pull in the transitive deps of a system-scoped dependency.
-                    if ( !Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ) )
-                    {
-                        recurse( child, resolvedArtifacts, managedVersions, localRepository, remoteRepositories,
-                                 source, filter, listeners );
-                    }
+                    recurse( child, resolvedArtifacts, managedVersions, localRepository, remoteRepositories, source,
+                             filter, listeners );

MOV8 MOV21 MOV60 MOV25 MOV60 MOV25 MOV21 MOV21 MOV32 MOV21 INS24 MOV21 MOV58 MOV32 MOV8 MOV32 MOV60 MOV42 MOV42 MOV27 INS8 MOV60 INS54 MOV21 MOV8 MOV12 MOV12 MOV60 MOV25 MOV21 MOV27 INS21 INS32 INS42 INS40 INS42 MOV14 DEL40 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL33 DEL27 DEL36 DEL42 DEL42 DEL32 DEL36 DEL33 DEL16 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL40 DEL42 DEL42 DEL42 DEL32 DEL32 DEL38 DEL8 DEL25 DEL24 DEL8 DEL25 DEL8