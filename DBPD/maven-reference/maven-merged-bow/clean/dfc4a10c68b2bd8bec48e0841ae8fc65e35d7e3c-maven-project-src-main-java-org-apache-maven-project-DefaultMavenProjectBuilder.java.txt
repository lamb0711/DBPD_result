Adding the notion of a build-context, and several build-context classes that can be used: ProjectBuildContext, which contains lineage and current-project info, ExecutionBuildContext, which contains the information in the original MavenExecutionRequest, and SystemBuildContext, which contains things like System properties...these use the BuildContextManager to store and retrieve their info from the core container's Context object.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@497911 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.context.BuildContextManager;
-import org.apache.maven.model.Profile;
-import org.apache.maven.profiles.ProfilesConversionUtils;
-import org.apache.maven.profiles.ProfilesRoot;
+import org.apache.maven.project.build.ProjectBuildContext;
-    private ProfileInjector profileInjector;
-
-    private ArtifactRepositoryFactory artifactRepositoryFactory;
-    
+    
+    private BuildContextManager buildContextManager;
-
-        List activeProfiles;
-
-        profileManager.addProfiles( superModel.getProfiles() );
-
+        MavenProject project = new MavenProject( superModel );
+        
+        ProjectBuildContext projectContext = ProjectBuildContext.getProjectBuildContext( buildContextManager, true );
+        
+        projectContext.setCurrentProject( project );
+        projectContext.store( buildContextManager );
+        
-        activeProfiles = injectActiveProfiles( profileManager, superModel );
+        List activeProfiles = profileAdvisor.applyActivatedProfiles( superModel, null, profileManager.getExplicitlyActivatedIds(), profileManager.getExplicitlyDeactivatedIds() );
+        List activeExternalProfiles = profileAdvisor.applyActivatedExternalProfiles( superModel, null, profileManager );
+        
+        LinkedHashSet profiles = new LinkedHashSet();
+        
+        if ( activeProfiles != null && !activeProfiles.isEmpty() )
+        {
+            profiles.addAll( activeProfiles );
+        }
+        
+        if ( activeExternalProfiles != null && !activeExternalProfiles.isEmpty() )
+        {
+            profiles.addAll( activeExternalProfiles );
+        }
-        MavenProject project = new MavenProject( superModel );
-
-        project.setActiveProfiles( activeProfiles );
+        project.setActiveProfiles( new ArrayList( profiles ) );
+
+        ProjectBuildContext projectContext = ProjectBuildContext.getProjectBuildContext( buildContextManager, true );
+        
+        projectContext.setModelLineage( modelLineage );
+        projectContext.store( buildContextManager );
+        
+            
+            projectContext.setCurrentProject( project );
+            projectContext.store( buildContextManager );
-    private List injectActiveProfiles( ProfileManager profileManager, Model model )
-        throws ProjectBuildingException
-    {
-        List activeProfiles;
-
-        if ( profileManager != null )
-        {
-            try
-            {
-                activeProfiles = profileManager.getActiveProfiles();
-            }
-            catch ( ProfileActivationException e )
-            {
-                String projectId = safeVersionlessKey( model.getGroupId(), model.getArtifactId() );
-
-                throw new ProjectBuildingException( projectId, e.getMessage(), e );
-            }
-
-            for ( Iterator it = activeProfiles.iterator(); it.hasNext(); )
-            {
-                Profile profile = (Profile) it.next();
-
-                profileInjector.inject( profile, model );
-            }
-        }
-        else
-        {
-            activeProfiles = Collections.EMPTY_LIST;
-        }
-
-        return activeProfiles;
-    }
-
-    private void loadProjectExternalProfiles( ProfileManager profileManager, File projectDir )
-        throws ProfileActivationException
-    {
-        if ( projectDir != null )
-        {
-            try
-            {
-                ProfilesRoot root = profilesBuilder.buildProfiles( projectDir );
-
-                if ( root != null )
-                {
-                    List active = root.getActiveProfiles();
-
-                    if ( active != null && !active.isEmpty() )
-                    {
-                        profileManager.explicitlyActivate( root.getActiveProfiles() );
-                    }
-
-                    for ( Iterator it = root.getProfiles().iterator(); it.hasNext(); )
-                    {
-                        org.apache.maven.profiles.Profile rawProfile = (org.apache.maven.profiles.Profile) it.next();
-
-                        Profile converted = ProfilesConversionUtils.convertFromProfileXmlProfile( rawProfile );
-
-                        profileManager.addProfile( converted );
-                    }
-                }
-            }
-            catch ( IOException e )
-            {
-                throw new ProfileActivationException( "Cannot read profiles.xml resource from directory: " + projectDir,
-                                                      e );
-            }
-            catch ( XmlPullParserException e )
-            {
-                throw new ProfileActivationException(
-                    "Cannot parse profiles.xml resource from directory: " + projectDir, e );
-            }
-        }
-    }
-

MOV26 MOV26 MOV23 UPD40 UPD40 UPD43 MOV60 MOV60 UPD42 UPD42 INS60 INS21 INS21 INS60 INS60 INS25 INS25 INS60 INS21 INS21 INS43 INS59 INS32 INS32 MOV43 INS59 INS43 INS59 INS27 INS8 INS27 INS8 INS43 INS59 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS14 INS27 INS38 INS21 INS27 INS38 INS21 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS21 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS33 INS32 INS32 UPD42 MOV42 UPD42 MOV42 MOV42 INS33 UPD42 MOV42 INS43 INS42 INS33 INS32 INS32 INS42 INS33 INS32 INS32 INS43 INS42 INS42 INS42 INS42 INS9 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL32 DEL32 DEL21 DEL42 DEL32 DEL7 DEL21 DEL42 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL8 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL25 DEL8 DEL31