improve the structure of the lifecycle execution code


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168041 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
-            processGoalChain( task, session, phaseMap );
+            List goals = processGoalChain( task, session, phaseMap );
-            try
+            for ( Iterator j = goals.iterator(); j.hasNext(); )
-                if ( phaseMap.containsKey( task ) )
+                MojoDescriptor mojo = (MojoDescriptor) j.next();
+
+                if ( mojo.getExecutePhase() != null )
-                    executePhase( task, session, phaseMap );
+                    // TODO: is this too broad to execute?
+                    execute( Collections.singletonList( mojo.getExecutePhase() ), session );
-                else
+
+                try
-                    executeMojo( task, session );
+                    pluginManager.executeMojo( session, mojo );
-            }
-            catch ( PluginManagerException e )
-            {
-                throw new LifecycleExecutionException( "Internal error in the plugin manager", e );
+                catch ( PluginManagerException e )
+                {
+                    throw new LifecycleExecutionException( "Internal error in the plugin manager", e );
+                }
-                throw new LifecycleExecutionException( "The plugin " + artifactId + " was built with an older version of Maven" );
+                throw new LifecycleExecutionException(
+                    "The plugin " + artifactId + " was built with an older version of Maven" );
-    private void processGoalChain( String task, MavenSession session, Map phaseMap )
+    private List processGoalChain( String task, MavenSession session, Map phaseMap )
+        List goals = new ArrayList();
+
-                        configureMojo( goal, session, phaseMap );
+                        goals.add( configureMojo( goal, session, phaseMap ) );
+
-            configureMojo( task, session, phaseMap );
+            goals.add( configureMojo( task, session, phaseMap ) );
+        return goals;
-    private void configureMojo( String task, MavenSession session, Map phaseMap )
+    private MojoDescriptor configureMojo( String task, MavenSession session, Map phaseMap )
+
+        return mojoDescriptor;
-    private void executePhase( String phase, MavenSession session, Map phaseMap )
-        throws MojoExecutionException, PluginNotFoundException, PluginManagerException, ArtifactResolutionException,
-        LifecycleExecutionException
-    {
-        // only execute up to the given phase
-        int index = phases.indexOf( phaseMap.get( phase ) );
-
-        EventDispatcher dispatcher = session.getEventDispatcher();
-
-        for ( int j = 0; j <= index; j++ )
-        {
-            Phase p = (Phase) phases.get( j );
-
-            p = (Phase) phaseMap.get( p.getId() );
-
-            String event = MavenEvents.PHASE_EXECUTION;
-
-            // !! This is ripe for refactoring to an aspect.
-            // Event monitoring.
-            dispatcher.dispatchStart( event, p.getId() );
-            try
-            {
-                if ( p.getGoals() != null )
-                {
-                    for ( Iterator i = p.getGoals().iterator(); i.hasNext(); )
-                    {
-                        String goal = (String) i.next();
-
-                        executeMojo( goal, session );
-                    }
-                }
-            }
-            catch ( MojoExecutionException e )
-            {
-                dispatcher.dispatchError( event, p.getId(), e );
-                throw e;
-            }
-            catch ( PluginManagerException e )
-            {
-                dispatcher.dispatchError( event, p.getId(), e );
-                throw e;
-            }
-            catch ( ArtifactResolutionException e )
-            {
-                dispatcher.dispatchError( event, p.getId(), e );
-                throw e;
-            }
-
-            dispatcher.dispatchEnd( event, p.getId() );
-        }
-    }
-
-    protected void executeMojo( String id, MavenSession session )
-        throws MojoExecutionException, PluginNotFoundException, PluginManagerException, ArtifactResolutionException,
-        LifecycleExecutionException
-    {
-        Logger logger = getLogger();
-        logger.debug( "Resolving artifacts from:" );
-        logger.debug( "\t{localRepository: " + session.getLocalRepository() + "}" );
-        logger.debug( "\t{remoteRepositories: " + session.getRemoteRepositories() + "}" );
-
-        pluginManager.verifyPluginForGoal( id, session );
-
-        MojoDescriptor mojoDescriptor = pluginManager.getMojoDescriptor( id );
-
-        if ( mojoDescriptor == null )
-        {
-            throw new MojoExecutionException( "Unable to find goal: " + id );
-        }
-
-        if ( mojoDescriptor.getExecutePhase() != null )
-        {
-            // TODO: is this too broad to execute?
-            execute( Collections.singletonList( mojoDescriptor.getExecutePhase() ), session );
-        }
-
-        pluginManager.executeMojo( session, mojoDescriptor );
-    }
-
-    // ----------------------------------------------------------------------
-    //
-    // ----------------------------------------------------------------------
-

INS26 INS40 INS43 INS43 INS42 INS60 INS41 INS42 INS41 INS43 INS59 INS42 INS42 INS60 INS24 INS42 INS42 INS14 INS43 INS59 INS58 INS32 INS8 INS43 INS32 INS42 INS42 MOV32 MOV43 INS59 INS42 INS42 INS60 INS25 MOV54 INS42 INS42 INS42 MOV32 INS42 INS32 INS43 INS59 INS27 INS8 INS8 INS42 INS42 INS42 INS42 INS11 INS32 INS33 MOV21 MOV21 MOV43 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 UPD42 UPD42 UPD42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 MOV32 DEL42 DEL42 DEL42 DEL32 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL39 DEL39 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL39 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL11 DEL7 DEL21 DEL42 DEL43 DEL42 DEL40 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31