PR: MNG-145
add mirror notation to settings, introduce to bootstrap

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168282 13f79535-47bb-0310-9956-ffa450edef68

-        Repository localRepository = new Repository( mavenRepoLocal, Repository.LAYOUT_DEFAULT );
+        Repository localRepository = new Repository( "local", mavenRepoLocal, Repository.LAYOUT_DEFAULT );
-            downloader = new ArtifactDownloader( localRepository, Collections.EMPTY_LIST );
+            downloader = new ArtifactDownloader( localRepository );
+
+            List remoteRepos = downloader.getRemoteRepositories();
+            List newRemoteRepos = new ArrayList();
+
+            for ( Iterator i = remoteRepos.iterator(); i.hasNext(); )
+            {
+                Repository repo = (Repository) i.next();
+
+                boolean foundMirror = false;
+                for ( Iterator j = userModelReader.getMirrors().iterator(); j.hasNext() && !foundMirror; )
+                {
+                    Mirror m = (Mirror) j.next();
+                    if ( m.getMirrorOf().equals( repo.getId() ) )
+                    {
+                        newRemoteRepos.add( new Repository( m.getId(), m.getUrl(), repo.getLayout() ) );
+                        foundMirror = true;
+                    }
+                }
+                if ( !foundMirror )
+                {
+                    newRemoteRepos.add( repo );
+                }
+            }
+
+            downloader.setRemoteRepositories( newRemoteRepos );
+
+            System.out.println( "Using the following for your local repository: " + localRepository );
+            System.out.println( "Using the following for your remote repository: " + newRemoteRepos );
+        private List mirrors = new ArrayList();
+
+        private Mirror currentMirror;
+
-                    throw new SAXException( "Invalid proxy entry. Missing one or more " + "fields: {host, port}." );
+                    throw new SAXException( "Invalid proxy entry. Missing one or more fields: {host, port}." );
+            else if ( "mirror".equals( rawName ) )
+            {
+                if ( notEmpty( currentMirror.getId() ) && notEmpty( currentMirror.getMirrorOf() ) &&
+                    notEmpty( currentMirror.getUrl() ) )
+                {
+                    mirrors.add( currentMirror );
+                    currentMirror = null;
+                }
+                else
+                {
+                    throw new SAXException( "Invalid mirror entry. Missing one or more fields: {id, mirrorOf, url}." );
+                }
+            }
+            else if ( currentMirror != null )
+            {
+                if ( "id".equals( rawName ) )
+                {
+                    currentMirror.setId( currentBody.toString().trim() );
+                }
+                else if ( "mirrorOf".equals( rawName ) )
+                {
+                    currentMirror.setMirrorOf( currentBody.toString().trim() );
+                }
+                else if ( "url".equals( rawName ) )
+                {
+                    currentMirror.setUrl( currentBody.toString().trim() );
+                }
+                else if ( "name".equals( rawName ) )
+                {
+                }
+                else
+                {
+                    throw new SAXException( "Illegal element inside proxy: \'" + rawName + "\'" );
+                }
+            }
+            else if ( "mirror".equals( rawName ) )
+            {
+                currentMirror = new Mirror();
+            }
+            this.currentMirror = null;
+            this.mirrors.clear();
+        }
+
+        public List getMirrors()
+        {
+            return mirrors;
-    public class Proxy
+    public static class Proxy
+    public static class Mirror
+    {
+        private String id;
+
+        private String mirrorOf;
+
+        private String url;
+
+        public String getId()
+        {
+            return id;
+        }
+
+        public void setId( String id )
+        {
+            this.id = id;
+        }
+
+        public void setMirrorOf( String mirrorOf )
+        {
+            this.mirrorOf = mirrorOf;
+        }
+
+        public void setUrl( String url )
+        {
+            this.url = url;
+        }
+
+        public String getMirrorOf()
+        {
+            return mirrorOf;
+        }
+
+        public String getUrl()
+        {
+            return url;
+        }
+    }

INS55 INS23 INS23 INS31 INS83 INS83 INS83 INS42 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS42 INS8 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS8 INS42 INS42 INS14 INS42 INS42 INS21 INS21 INS42 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS41 INS43 INS42 INS21 INS43 INS42 INS21 INS43 INS42 INS21 INS42 INS41 INS42 INS41 MOV21 MOV25 INS60 INS60 INS24 INS21 INS21 INS21 INS43 INS7 INS32 INS42 INS42 INS42 INS7 INS42 INS7 INS42 INS7 INS42 INS42 INS45 INS43 INS59 INS43 INS59 INS58 INS32 INS8 INS32 INS32 INS32 INS42 INS25 INS22 INS33 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS42 INS42 INS32 INS42 INS42 INS14 INS43 INS59 INS42 INS42 INS60 INS60 INS24 INS25 INS42 INS42 INS42 INS40 INS42 INS27 INS40 INS42 INS27 INS32 INS8 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS43 INS42 INS42 INS32 INS43 INS59 INS39 INS59 INS58 INS27 INS8 INS38 INS8 INS45 INS42 INS45 INS42 INS25 INS45 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS9 INS43 INS59 INS32 INS38 INS60 INS25 INS42 INS21 INS32 INS8 INS25 INS7 INS43 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS59 INS32 MOV8 INS32 INS45 INS42 INS42 INS25 INS27 INS8 MOV25 INS42 INS14 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS11 INS32 INS42 INS32 INS21 INS21 INS42 INS42 INS42 INS27 INS8 INS8 INS42 INS33 INS25 INS43 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS32 INS7 INS45 INS32 INS32 INS32 INS21 INS21 INS53 INS32 INS8 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS9 INS42 INS32 INS42 INS32 INS42 INS32 INS32 INS7 INS14 INS45 INS42 INS42 INS21 INS32 INS8 INS25 INS43 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS43 INS45 INS32 INS45 INS42 INS42 INS21 INS32 INS8 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS45 INS42 INS42 INS21 INS32 INS8 INS8 INS32 INS42 INS42 INS42 INS32 INS32 INS45 INS42 INS42 INS53 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS14 INS42 INS42 INS32 INS42 INS43 INS27 INS42 INS42 INS42 INS45 INS42 INS45 DEL40 DEL45 DEL45 DEL27