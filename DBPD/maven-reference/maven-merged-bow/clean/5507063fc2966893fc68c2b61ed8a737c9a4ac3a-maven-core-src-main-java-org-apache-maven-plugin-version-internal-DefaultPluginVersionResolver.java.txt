o Aligned version resolver with prefix resolver and made it support a model as additional input

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@927604 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.List;
+import org.apache.maven.model.Build;
+import org.apache.maven.model.Plugin;
+        PluginVersionResult result = resolveFromProject( request );
+
+        if ( result == null )
+        {
+            result = resolveFromRepository( request );
+
+            if ( StringUtils.isEmpty( result.getVersion() ) )
+            {
+                throw new PluginVersionResolutionException( request.getGroupId(), request.getArtifactId(),
+                                                            request.getLocalRepository(),
+                                                            request.getRemoteRepositories(),
+                                                            "Plugin not found in any plugin repository" );
+            }
+            else if ( logger.isDebugEnabled() )
+            {
+                logger.debug( "Resolved plugin version for " + request.getGroupId() + ":" + request.getArtifactId()
+                    + " to " + result.getVersion() + " from repository "
+                    + ( result.getRepository() != null ? result.getRepository().getId() : "null" ) );
+            }
+        }
+        else if ( logger.isDebugEnabled() )
+        {
+            logger.debug( "Resolved plugin version for " + request.getGroupId() + ":" + request.getArtifactId()
+                + " to " + result.getVersion() + " from POM " + request.getPom() );
+        }
+
+        return result;
+    }
+
+    private PluginVersionResult resolveFromRepository( PluginVersionRequest request )
+        throws PluginVersionResolutionException
+    {
-        if ( logger.isDebugEnabled() )
-        {
-            logger.debug( "Resolved plugin version for " + request.getGroupId() + ":" + request.getArtifactId()
-                + " to " + result.getVersion() + " from repository "
-                + ( result.getRepository() != null ? result.getRepository().getId() : "null" ) );
-        }
-
+    private PluginVersionResult resolveFromProject( PluginVersionRequest request )
+    {
+        PluginVersionResult result = null;
+
+        if ( request.getPom() != null && request.getPom().getBuild() != null )
+        {
+            Build build = request.getPom().getBuild();
+
+            result = resolveFromProject( request, build.getPlugins() );
+
+            if ( result == null && build.getPluginManagement() != null )
+            {
+                result = resolveFromProject( request, build.getPluginManagement().getPlugins() );
+            }
+        }
+
+        return result;
+    }
+
+    private PluginVersionResult resolveFromProject( PluginVersionRequest request, List<Plugin> plugins )
+    {
+        for ( Plugin plugin : plugins )
+        {
+            if ( request.getGroupId().equals( plugin.getGroupId() )
+                && request.getArtifactId().equals( plugin.getArtifactId() ) )
+            {
+                if ( plugin.getVersion() != null )
+                {
+                    return new DefaultPluginVersionResult( plugin.getVersion() );
+                }
+                else
+                {
+                    return null;
+                }
+            }
+        }
+        return null;
+    }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS31 INS83 INS43 INS42 INS44 INS43 INS8 UPD83 UPD42 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS44 INS8 INS42 INS43 INS42 INS42 MOV21 INS60 INS25 INS41 INS42 INS43 INS42 INS60 INS25 INS41 INS42 INS43 INS42 INS74 INS42 INS70 INS41 INS42 INS43 INS59 INS27 INS8 INS25 INS42 INS42 INS43 INS59 INS27 INS8 INS42 INS42 INS43 INS43 INS44 INS42 INS8 INS33 INS42 INS42 INS32 INS42 INS33 INS21 INS25 INS32 INS8 INS42 INS42 INS33 INS27 INS27 INS60 INS21 INS25 INS42 INS42 INS43 INS42 INS25 INS42 INS42 INS7 INS32 INS8 MOV25 INS42 INS42 INS21 INS32 INS33 INS32 INS33 INS43 INS59 INS7 INS27 INS8 INS42 INS27 INS8 INS42 INS32 INS42 INS42 INS32 INS53 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS27 INS27 INS21 INS32 INS32 INS25 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS33 INS32 INS33 INS7 INS32 INS42 INS32 INS32 INS42 INS32 INS27 INS8 INS8 INS43 INS32 INS32 INS32 INS32 INS45 INS45 INS32 INS45 INS32 INS45 INS32 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS33 INS41 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS14 INS33 INS32 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42