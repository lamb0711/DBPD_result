Working on issue: MNG-379
Added specified stop-gap patch for issue: MNG-473 (affects settings-builder and registry-builder)

Today I've made the following progress on this so far:

- Added a new project, called maven-plugin-registry, to house the model for this new file.

- Developed/debugged/tested PluginVersionManager/DefaultPluginVersionManager to isolate the plugin-version checks/management code away from the PluginManager

- Added interactiveMode (<interactiveMode>true|false</interactiveMode> directly under the root element of settings.xml, or -B short CLI option or --batch-mode CLI option, where the CLI options turn OFF interactiveMode). This will allow things like the maven-plugins build to register new plugins (and, for now, new versions of plugins) automatically.

- Added user input handler for when interactiveMode = true, to get a yes/no on whether to use the discovered version over the installed version and/or no version at all. If there is no installed version, and the user selects 'n', then the discovered version is used FOR THAT SESSION ONLY, and won't be recorded in the registry.

- Added checks/recording rejected versions against the registry, before attempting to use the discovered version.

Pending:

- Still need to add update-policies, to determine two things:

  1. how often to check for updates
  2. what to do when updates are found (autoUpdate, etc.)



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@190854 13f79535-47bb-0310-9956-ffa450edef68

+        // don't allow construction.
-    
+
-        
+
-                
+
-            
+
-        shallowMergePluginUpdates( dominant, recessive.getPluginUpdates(), recessiveSourceLevel );
-    }
-    
-    private static void shallowMergePluginUpdates( Settings dominant, List recessive, String recessiveSourceLevel )
-    {
-        Map dominantByKey = dominant.getPluginUpdatesByKey();
-        
-        List dominantPluginUpdates = dominant.getPluginUpdates();
-        
-        for ( Iterator it = recessive.iterator(); it.hasNext(); )
-        {
-            PluginUpdate recessivePluginUpdate = (PluginUpdate) it.next();
-            
-            if( !dominantByKey.containsKey( recessivePluginUpdate.getKey() ) )
-            {
-                recessivePluginUpdate.setSourceLevel( recessiveSourceLevel );
-                
-                dominantPluginUpdates.add( recessivePluginUpdate );
-            }
-        }
-        
-        dominant.flushPluginUpdatesByKey();
-        
+
-            
-            if( !dominantById.containsKey(identifiable.getId()))
+
+            if ( !dominantById.containsKey( identifiable.getId() ) )
-                
+
-    
+
-        
+
-            
+
-        
+

DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL38 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31