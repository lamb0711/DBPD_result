MNG-2199: Version ranges not supported for parent artifacts
Fixes #21
Signed-off-by: Jason van Zyl <jason@tesla.io>

+import org.apache.maven.model.Parent;
+import org.eclipse.aether.resolution.VersionRangeRequest;
+import org.eclipse.aether.resolution.VersionRangeResolutionException;
+import org.eclipse.aether.resolution.VersionRangeResult;
+    public ModelSource resolveModel( Parent parent )
+        throws UnresolvableModelException
+    {
+        Artifact artifact = new DefaultArtifact( parent.getGroupId(), parent.getArtifactId(), "", "pom",
+                                                 parent.getVersion() );
+
+        VersionRangeRequest versionRangeRequest = new VersionRangeRequest( artifact, repositories, context );
+        versionRangeRequest.setTrace( trace );
+
+        try
+        {
+            VersionRangeResult versionRangeResult = resolver.resolveVersionRange( session, versionRangeRequest );
+
+            if ( versionRangeResult.getHighestVersion() == null )
+            {
+                throw new UnresolvableModelException( "No versions matched the requested range '" + parent.getVersion()
+                                                          + "'", parent.getGroupId(), parent.getArtifactId(),
+                                                      parent.getVersion() );
+
+            }
+
+            if ( versionRangeResult.getVersionConstraint() != null
+                     && versionRangeResult.getVersionConstraint().getRange() != null
+                     && versionRangeResult.getVersionConstraint().getRange().getUpperBound() == null )
+            {
+                throw new UnresolvableModelException( "The requested version range '" + parent.getVersion()
+                                                          + "' does not specify an upper bound", parent.getGroupId(),
+                                                      parent.getArtifactId(), parent.getVersion() );
+
+            }
+
+            parent.setVersion( versionRangeResult.getHighestVersion().toString() );
+        }
+        catch ( VersionRangeResolutionException e )
+        {
+            throw new UnresolvableModelException( e.getMessage(), parent.getGroupId(), parent.getArtifactId(),
+                                                  parent.getVersion(), e );
+
+        }
+
+        return resolveModel( parent.getGroupId(), parent.getArtifactId(), parent.getVersion() );
+    }

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS83 INS43 INS42 INS44 INS43 INS8 INS42 INS43 INS42 INS42 INS60 INS60 INS21 INS54 INS41 INS42 INS43 INS59 INS43 INS59 INS32 INS8 INS12 INS32 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS42 INS60 INS25 INS25 INS21 INS44 INS8 INS42 INS32 INS32 INS32 INS43 INS32 INS32 INS45 INS45 INS32 INS43 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS27 INS8 INS32 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS33 INS53 INS27 INS27 INS53 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS27 INS27 INS32 INS33 INS14 INS32 INS42 INS43 INS32 INS32 INS32 INS32 INS42 INS43 INS27 INS32 INS32 INS32 INS32 INS33 INS32 INS33 INS32 INS42 INS43 INS27 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS45 INS32 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42