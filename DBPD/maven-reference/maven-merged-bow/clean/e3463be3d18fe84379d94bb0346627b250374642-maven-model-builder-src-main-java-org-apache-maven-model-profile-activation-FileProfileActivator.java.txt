[MNG-2363] <profile><activation><file><exists/> does not work in a multi-project build

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@788334 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.path.PathTranslator;
+import org.codehaus.plexus.component.annotations.Requirement;
+import org.codehaus.plexus.interpolation.AbstractValueSource;
+    @Requirement
+    private PathTranslator pathTranslator;
+
-        boolean active = false;
-
-        if ( activation != null )
+        if ( activation == null )
-            ActivationFile file = activation.getFile();
-
-            if ( file != null )
-            {
-                RegexBasedInterpolator interpolator = new RegexBasedInterpolator();
-                interpolator.addValueSource( new MapBasedValueSource( context.getExecutionProperties() ) );
-
-                String existingPath = file.getExists();
-                String missingPath = file.getMissing();
-
-                if ( StringUtils.isNotEmpty( existingPath ) )
-                {
-                    try
-                    {
-                        existingPath = StringUtils.replace( interpolator.interpolate( existingPath, "" ), "\\", "/" );
-                    }
-                    catch ( Exception e )
-                    {
-                        throw new ProfileActivationException( "Failed to interpolate file location for profile "
-                            + profile.getId() + ": " + existingPath, profile );
-                    }
-                    active = new File( existingPath ).exists();
-                }
-                else if ( StringUtils.isNotEmpty( missingPath ) )
-                {
-                    try
-                    {
-                        missingPath = StringUtils.replace( interpolator.interpolate( missingPath, "" ), "\\", "/" );
-                    }
-                    catch ( Exception e )
-                    {
-                        throw new ProfileActivationException( "Failed to interpolate file location for profile "
-                            + profile.getId() + ": " + existingPath, profile );
-                    }
-                    active = !new File( missingPath ).exists();
-                }
-
-            }
+            return false;
-        return active;
+        ActivationFile file = activation.getFile();
+
+        if ( file == null )
+        {
+            return false;
+        }
+
+        String path;
+        boolean missing;
+
+        if ( StringUtils.isNotEmpty( file.getExists() ) )
+        {
+            path = file.getExists();
+            missing = false;
+        }
+        else if ( StringUtils.isNotEmpty( file.getMissing() ) )
+        {
+            path = file.getMissing();
+            missing = true;
+        }
+        else
+        {
+            return false;
+        }
+
+        RegexBasedInterpolator interpolator = new RegexBasedInterpolator();
+
+        final File basedir = context.getProjectDirectory();
+
+        if ( basedir != null )
+        {
+            interpolator.addValueSource( new AbstractValueSource( false )
+            {
+                public Object getValue( String expression )
+                {
+                    /*
+                     * NOTE: We intentionally only support ${basedir} and not ${project.basedir} as the latter form
+                     * would suggest that other project.* expressions can be used which is however beyond the design.
+                     */
+                    if ( "basedir".equals( expression ) )
+                    {
+                        return basedir.getAbsolutePath();
+                    }
+                    return null;
+                }
+            } );
+        }
+        else if ( path.indexOf( "${basedir}" ) >= 0 )
+        {
+            return false;
+        }
+
+        interpolator.addValueSource( new MapBasedValueSource( context.getExecutionProperties() ) );
+
+        try
+        {
+            path = interpolator.interpolate( path, "" );
+        }
+        catch ( Exception e )
+        {
+            throw new ProfileActivationException( "Failed to interpolate file location " + path + " for profile "
+                + profile.getId() + ": " + e.getMessage(), profile, e );
+        }
+
+        path = pathTranslator.alignToBaseDirectory( path, basedir );
+
+        File f = new File( path );
+
+        if ( !f.isAbsolute() )
+        {
+            return false;
+        }
+
+        boolean fileExists = f.exists();
+
+        return missing ? !fileExists : fileExists;

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS78 INS83 INS43 INS59 INS42 INS42 INS42 INS25 MOV60 INS25 MOV60 MOV60 INS25 MOV60 INS60 INS25 MOV21 MOV54 MOV21 INS60 INS25 INS60 UPD27 MOV27 INS8 UPD27 MOV27 INS8 INS39 MOV32 INS8 INS25 INS83 INS43 INS59 INS27 INS8 INS25 MOV43 INS59 INS38 INS8 INS39 INS59 INS16 INS41 INS41 UPD42 UPD42 INS32 INS21 INS21 INS32 INS8 INS8 UPD42 MOV42 INS42 INS32 INS42 INS33 INS21 INS27 INS8 UPD42 INS42 MOV14 INS32 INS41 INS42 INS32 INS42 INS38 INS42 INS9 INS9 INS42 UPD42 MOV42 INS7 INS7 MOV42 UPD42 MOV42 MOV32 INS21 INS21 INS41 INS42 INS42 INS32 INS32 INS34 INS41 UPD42 INS42 INS42 INS42 UPD42 UPD42 MOV42 UPD42 MOV42 INS9 INS42 MOV42 INS42 UPD42 MOV42 MOV32 INS42 INS9 UPD42 UPD42 INS7 INS7 INS9 INS42 INS42 INS14 INS42 INS42 INS45 INS9 UPD42 INS32 INS42 MOV32 INS42 INS9 UPD43 MOV43 INS9 INS1 MOV42 MOV42 UPD42 MOV42 MOV45 INS42 UPD42 INS31 UPD45 INS42 INS45 INS32 INS83 INS43 INS42 INS44 INS8 INS42 INS42 INS42 MOV43 INS42 INS25 INS41 INS32 INS8 INS33 INS45 INS42 INS42 INS41 INS32 INS42 INS42 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL45 DEL32 DEL42 DEL45 DEL45 DEL32 DEL7 DEL21 DEL8 DEL43 DEL42 DEL44 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL32 DEL42 DEL42 DEL14 DEL32 DEL38 DEL7 DEL21 DEL8 DEL25 DEL25 DEL8 DEL25 DEL8 DEL25 DEL42