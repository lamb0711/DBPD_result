PR: MNG-619
make clover a compile time dependency of the project after instrumentation

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219894 13f79535-47bb-0310-9956-ffa450edef68

+package org.apache.maven.plugin.clover;
+
- * Copyright 2005 The Apache Software Foundation.
+ * Copyright 2001-2005 The Apache Software Foundation.
-package org.apache.maven.plugin.clover;
-import java.util.ArrayList;
-import java.util.Iterator;
-import java.util.List;
-import java.io.File;
-
+import com.cenqua.clover.CloverInstr;
-import org.apache.maven.plugin.AbstractMojo;
-import com.cenqua.clover.CloverInstr;
+import java.io.File;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Set;
+ * Instrument source roots.
+ *
+ * @author <a href="mailto:vmassol@apache.org">Vincent Massol</a>
+ * @version $Id$
- * @description Instrument source roots
- * 
- * @author <a href="mailto:vmassol@apache.org">Vincent Massol</a>
- * @version $Id$
-public class CloverInstrumentMojo extends AbstractCloverMojo
+public class CloverInstrumentMojo
+    extends AbstractCloverMojo
-	private String cloverOutputDirectory;
+    private String cloverOutputDirectory;
-	private String cloverDatabase;
+    private String cloverDatabase;
-        new File(this.cloverOutputDirectory).mkdirs();
+        new File( this.cloverOutputDirectory ).mkdirs();
-        this.cloverOutputSourceDirectory = new File(this.cloverOutputDirectory, "src").getPath();
+        this.cloverOutputSourceDirectory = new File( this.cloverOutputDirectory, "src" ).getPath();
-    public void execute() throws MojoExecutionException
+    public void execute()
+        throws MojoExecutionException
-        
-        int result = CloverInstr.mainImpl(createCliArgs());
-	    if (result != 0)
-		{
-			throw new MojoExecutionException("Clover has failed to instrument the source files");
-		}
-	    addGeneratedSourcesToCompileRoots();
-//	    addCloverDependencyToCompileClasspath();
+        int result = CloverInstr.mainImpl( createCliArgs() );
+        if ( result != 0 )
+        {
+            throw new MojoExecutionException( "Clover has failed to instrument the source files" );
+        }
+
+        addGeneratedSourcesToCompileRoots();
+        addCloverDependencyToCompileClasspath();
-        this.project.getBuild().setDirectory(this.cloverOutputDirectory);
-        this.project.getBuild().setOutputDirectory(new File(this.cloverOutputDirectory, "classes").getPath());
-        this.project.getBuild().setTestOutputDirectory(new File(this.cloverOutputDirectory, "test-classes").getPath());
+        this.project.getBuild().setDirectory( this.cloverOutputDirectory );
+        this.project.getBuild().setOutputDirectory( new File( this.cloverOutputDirectory, "classes" ).getPath() );
+        this.project.getBuild().setTestOutputDirectory(
+            new File( this.cloverOutputDirectory, "test-classes" ).getPath() );
-        this.project.getCompileSourceRoots().remove(0);
-        this.project.addCompileSourceRoot(this.cloverOutputSourceDirectory);
+        this.project.getCompileSourceRoots().remove( 0 );
+        this.project.addCompileSourceRoot( this.cloverOutputSourceDirectory );
-/*
+
+        throws MojoExecutionException
-        while (artifacts.hasNext())
+        while ( artifacts.hasNext() && cloverArtifact == null )
-            if (artifact.getArtifactId().equalsIgnoreCase("clover"))
+            if ( "clover".equalsIgnoreCase( artifact.getArtifactId() ) )
-                break;
-        List artifactsToAdd = new ArrayList();
-        artifactsToAdd.add(cloverArtifact);
-        
-        this.project.addArtifacts(artifactsToAdd, this.factory); 
+        if ( cloverArtifact == null )
+        {
+            throw new MojoExecutionException( "Couldn't find 'clover' artifact in plugin dependencies" );
+        }
+
+        cloverArtifact = factory.createArtifact( cloverArtifact.getGroupId(), cloverArtifact.getArtifactId(),
+                                                 cloverArtifact.getVersion(), Artifact.SCOPE_COMPILE,
+                                                 cloverArtifact.getType() );
+
+        // TODO: use addArtifacts
+        Set set = new HashSet( project.getDependencyArtifacts() );
+        set.add( cloverArtifact );
+        project.setDependencyArtifacts( set );
-*/
-	/**
-	 * @return the CLI args to be passed to CloverInstr
-	 * @todo handle multiple source roots. At the moment only the first source root is instrumented
-	 */
-	private String[] createCliArgs()
-	{
-		String [] cliArgs = {
-
-            // TODO: Temporary while we wait for surefire to be able to fork unit tests. See
-            // http://jira.codehaus.org/browse/MNG-441
-            "-p", "threaded",
-            "-f", "100",
-            
-            "-i", this.cloverDatabase, 
-            "-s", (String) this.project.getCompileSourceRoots().get(0),
-            "-d", this.cloverOutputSourceDirectory };
-
-		return cliArgs; 
-	}
+    /**
+     * @return the CLI args to be passed to CloverInstr
+     * @todo handle multiple source roots. At the moment only the first source root is instrumented
+     */
+    private String[] createCliArgs()
+    {
+        // TODO: Temporary while we wait for surefire to be able to fork unit tests. See
+        // http://jira.codehaus.org/browse/MNG-441
+        return new String[]{"-p", "threaded", "-f", "100", "-i", this.cloverDatabase, "-s",
+            (String) this.project.getCompileSourceRoots().get( 0 ), "-d", this.cloverOutputSourceDirectory};
+    }

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 UPD40 MOV65 MOV65 MOV65 INS31 UPD65 INS83 INS39 INS42 INS43 INS8 UPD66 INS21 INS42 INS60 INS60 INS61 INS25 INS21 INS60 INS21 INS21 INS32 INS43 INS59 INS43 INS59 INS27 INS8 INS27 INS8 INS7 INS43 INS59 INS32 INS32 INS3 INS42 INS42 INS42 INS33 INS42 INS42 INS32 INS32 INS27 INS60 INS25 INS42 INS33 INS53 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 MOV5 MOV4 INS22 INS42 INS42 INS42 INS42 INS33 INS43 INS59 INS32 INS8 INS14 INS42 INS42 INS32 INS32 INS32 INS40 INS32 INS43 INS32 INS52 INS42 INS42 INS42 INS11 INS45 INS42 INS32 INS21 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL59 DEL60 DEL42