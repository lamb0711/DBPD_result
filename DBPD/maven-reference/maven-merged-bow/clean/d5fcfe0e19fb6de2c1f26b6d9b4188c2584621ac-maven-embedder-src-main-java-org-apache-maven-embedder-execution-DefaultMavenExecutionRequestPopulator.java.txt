o swapping the branch to trunk


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@779660 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.IOException;
-import java.util.Iterator;
-import java.util.Properties;
-import org.apache.maven.errors.DefaultCoreErrorReporter;
-import org.apache.maven.model.Model;
-import org.apache.maven.model.Profile;
-import org.apache.maven.model.Repository;
-import org.apache.maven.model.RepositoryPolicy;
-import org.apache.maven.monitor.event.DefaultEventMonitor;
-import org.apache.maven.monitor.event.EventMonitor;
-import org.apache.maven.profiles.DefaultProfileManager;
-import org.apache.maven.profiles.ProfileActivationContext;
-import org.apache.maven.profiles.ProfileActivationException;
-import org.apache.maven.profiles.ProfileManager;
-import org.apache.maven.realm.DefaultMavenRealmManager;
-import org.apache.maven.settings.Proxy;
-import org.apache.maven.settings.Server;
-import org.codehaus.plexus.PlexusContainer;
-import org.sonatype.plexus.components.sec.dispatcher.SecDispatcher;
-import org.sonatype.plexus.components.sec.dispatcher.SecDispatcherException;
-/**
- * Things that we deal with in this populator to ensure that we have a valid
- * {@MavenExecutionRequest}
- * <p/>
- * - POM - Settings - Local Repository - Snapshot update policies - Repository checksum policies -
- * Artifact transfer mechanism configuration - Eventing/Logging configuration - Profile manager
- * configuration
- */
-    @Requirement
-    private PlexusContainer container;
-
+    //TODO: this needs to be pushed up to the front-end
-    // 2009-03-05 Oleg: this component is defined sub-classed in this package
-    @Requirement(hint = "maven")
-    private SecDispatcher securityDispatcher;
-
-        eventing( request, configuration );
+        // copy configuration to request
+        if ( request.getSettings() == null )
+        {
+            if ( configuration.getGlobalSettingsFile() != null )
+            {
+                request.setGlobalSettingsFile( configuration.getGlobalSettingsFile() );
+            }
+    
+            if ( configuration.getUserSettingsFile() != null )
+            {
+                request.setUserSettingsFile( configuration.getUserSettingsFile() );
+            }
+        }
-        reporter( request, configuration );
+        String localRepositoryPath = null;
-        executionProperties( request, configuration );
+        if ( request.getLocalRepositoryPath() != null )
+        {
+            localRepositoryPath = request.getLocalRepositoryPath().getAbsolutePath();
+        }
-        pom( request, configuration );
+        if ( StringUtils.isEmpty( localRepositoryPath ) && ( configuration.getLocalRepository() != null ) )
+        {
+            localRepositoryPath = configuration.getLocalRepository().getAbsolutePath();
+        }
-        settings( request, configuration );
+        if ( !StringUtils.isEmpty( localRepositoryPath ) )
+        {
+            request.setLocalRepositoryPath( localRepositoryPath );
+        }
-        localRepository( request, configuration );
+        // populate the defaults
-        toolchains( request, configuration );
-
-        artifactTransferMechanism( request, configuration );
-
-        realmManager( request, configuration );
-
-        profileManager( request, configuration );
-
-        processSettings( request, configuration );
-
-        return request;
+        return populateDefaults( request );
-    private void reporter( MavenExecutionRequest request, Configuration configuration )
+    private void pom( MavenExecutionRequest request )
-        if ( request.getErrorReporter() == null )
+        // ------------------------------------------------------------------------
+        // POM
+        //
+        // If we are not given a specific POM file, but passed a base directory
+        // then we will use a release POM in the directory provided, and then
+        // look for the standard POM.
+        // ------------------------------------------------------------------------
+
+        if ( request.getPom() != null && !request.getPom().isAbsolute() )
-            if ( configuration.getErrorReporter() != null )
-            {
-                request.setErrorReporter( configuration.getErrorReporter() );
-            }
-            else
-            {
-                request.setErrorReporter( new DefaultCoreErrorReporter() );
-            }
+            request.setPom( request.getPom().getAbsoluteFile() );
+        }
+
+        if ( ( request.getPom() != null ) && ( request.getPom().getParentFile() != null ) )
+        {
+            request.setBaseDirectory( request.getPom().getParentFile() );
+        }
+        else if ( ( request.getPom() == null ) && ( request.getBaseDirectory() != null ) )
+        {
+            File pom = new File( request.getBaseDirectory(), Maven.POMv4 );
+
+            request.setPom( pom );
+        }
+        // TODO: Is this correct?
+        else if ( request.getBaseDirectory() == null )
+        {
+            request.setBaseDirectory( new File( System.getProperty( "user.dir" ) ) );
-
-    private void executionProperties( MavenExecutionRequest request, Configuration configuration )
+        
+    private void populateDefaultPluginGroups( MavenExecutionRequest request )
-        Properties requestProperties = request.getProperties();
-
-        if ( requestProperties == null )
-        {
-            requestProperties = configuration.getSystemProperties();
-            if ( requestProperties == null )
-            {
-                requestProperties = System.getProperties();
-            }
-
-            request.setProperties( requestProperties );
-        }
-
-        Properties userProperties = request.getUserProperties();
-        if ( userProperties != null )
-        {
-            for ( Iterator<?> it = userProperties.keySet().iterator(); it.hasNext(); )
-            {
-                String key = (String) it.next();
-                if ( !requestProperties.containsKey( key ) )
-                {
-                    requestProperties.setProperty( key, userProperties.getProperty( key ) );
-                }
-            }
-        }
+        request.addPluginGroup( "org.apache.maven.plugins" );
+        request.addPluginGroup( "org.codehaus.mojo" );
-
-    private void realmManager( MavenExecutionRequest request, Configuration configuration )
-    {
-        if ( request.getRealmManager() == null )
-        {
-            if ( configuration.getRealmManager() == null )
-            {
-                request.setRealmManager( new DefaultMavenRealmManager( container, getLogger() ) );
-            }
-            else
-            {
-                request.setRealmManager( configuration.getRealmManager() );
-            }
-        }
-    }
-
-    private void processSettings( MavenExecutionRequest request, Configuration configuration )
+    
+    // Process plugin groups
+    // Get profile models
+    // Get active profiles
+    private void processSettings( MavenExecutionRequest request )
-        ProfileManager profileManager = request.getProfileManager();
-
+        
+        request.addPluginGroups( settings.getPluginGroups() );
-        request.setPluginGroups( settings.getPluginGroups() );
-
+        populateDefaultPluginGroups( request );
+        
-        List<String> settingsActiveProfileIds = settings.getActiveProfiles();
-
-        if ( settingsActiveProfileIds != null )
-        {
-            for ( String profileId : settingsActiveProfileIds )
-            {
-                profileManager.getProfileActivationContext().setActive( profileId );
-            }
-        }
-
+        // We just need to keep track of what profiles are being activated by the settings. We don't need to process
+        // them here. This should be taken care of by the project builder.
+        //
+        request.addActiveProfiles( settings.getActiveProfiles() );        
+        
+        // We only need to take the profiles and make sure they are available when the calculation of the active profiles
+        // is determined.
+        //
-                Profile profile = SettingsUtils.convertFromSettingsProfile( rawProfile );
-
-                profileManager.addProfile( profile );
-            }
-
-            // We need to convert profile repositories to artifact repositories
-            try
-            {
-                for ( Profile profile : profileManager.getActiveProfiles() )
-                {
-                    for ( Repository r : profile.getRepositories() )
-                    {
-                        try
-                        {
-                            request.addRemoteRepository( repositorySystem.buildArtifactRepository( r ) );
-                        }
-                        catch ( InvalidRepositoryException e )
-                        {
-                            throw new MavenEmbedderException( "Cannot create remote repository " + r.getId(), e );
-                        }
-                    }
-                    for ( Repository r : profile.getPluginRepositories() )
-                    {
-                        try
-                        {
-                            request.addRemoteRepository( repositorySystem.buildArtifactRepository( r ) );
-                        }
-                        catch ( InvalidRepositoryException e )
-                        {
-                            throw new MavenEmbedderException( "Cannot create remote repository " + r.getId(), e );
-                        }
-                    }                    
-                }
-            }
-            catch ( ProfileActivationException e )
-            {
-                throw new MavenEmbedderException( "Cannot determine active profiles", e );
+                request.addProfile( SettingsUtils.convertFromSettingsProfile( rawProfile ) );                
-
+        
-        processRepositoriesInSettings( request, configuration );
+        processRepositoriesInSettings( request );
-        if ( !definedRepositories.contains( "central" ) )
-        {
-            Repository repo = new Repository();
-            repo.setId( "central" );
-            repo.setUrl( "http://repo1.maven.org/maven2" );
-            repo.setName( "Maven Repository Switchboard" );
-            RepositoryPolicy snapshotPolicy = new RepositoryPolicy();
-            snapshotPolicy.setEnabled( false );
-            repo.setSnapshots( snapshotPolicy );
+        if ( !definedRepositories.contains( RepositorySystem.DEFAULT_REMOTE_REPO_ID ) )
+        {            
-                ArtifactRepository ar = repositorySystem.buildArtifactRepository( repo );
-                request.addRemoteRepository( ar );
+                request.addRemoteRepository( repositorySystem.createDefaultRemoteRepository() );
-                throw new MavenEmbedderException( "Cannot create remote repository " + repo.getId(), e );
+                throw new MavenEmbedderException( "Cannot create default remote repository.", e );
-    private void processRepositoriesInSettings( MavenExecutionRequest request, Configuration configuration )
+    private void processRepositoriesInSettings( MavenExecutionRequest request )
+        /*
+        */
-    // POM
-    // ------------------------------------------------------------------------
-
-    private void pom( MavenExecutionRequest request, Configuration configuration )
-    {
-        // ------------------------------------------------------------------------
-        // POM
-        //
-        // If we are not given a specific POM file, but passed a base directory
-        // then we will use a release POM in the directory provide, or and then
-        // look for the standard POM.
-        // ------------------------------------------------------------------------
-
-        if ( ( request.getPom() != null ) && ( request.getPom().getParentFile() != null ) )
-        {
-            request.setBaseDirectory( request.getPom().getParentFile() );
-        }
-        else if ( ( request.getPom() == null ) && ( request.getBaseDirectory() != null ) )
-        {
-            // Look for a release POM
-            File pom = new File( request.getBaseDirectory(), Maven.RELEASE_POMv4 );
-
-            if ( !pom.exists() )
-            {
-                pom = new File( request.getBaseDirectory(), Maven.POMv4 );
-            }
-
-            request.setPom( pom );
-        }
-        // TODO: Is this correct?
-        else if ( request.getBaseDirectory() == null )
-        {
-            request.setBaseDirectory( new File( System.getProperty( "user.dir" ) ) );
-        }
-    }
-
-    // ------------------------------------------------------------------------
-    private void settings( MavenExecutionRequest request, Configuration configuration )
+    private void settings( MavenExecutionRequest request )
-            if ( configuration.getGlobalSettingsFile() != null )
+            if ( request.getGlobalSettingsFile() == null )
-                request.setGlobalSettingsFile( configuration.getGlobalSettingsFile() );
+                request.setGlobalSettingsFile( MavenEmbedder.DEFAULT_GLOBAL_SETTINGS_FILE );
-            if ( configuration.getUserSettingsFile() != null )
+            if ( request.getUserSettingsFile() == null )
-                request.setUserSettingsFile( configuration.getUserSettingsFile() );
+                request.setUserSettingsFile( MavenEmbedder.DEFAULT_USER_SETTINGS_FILE );
-    private void localRepository( MavenExecutionRequest request, Configuration configuration )
+    private void localRepository( MavenExecutionRequest request )
-            request.setLocalRepository( createLocalRepository( request, request.getSettings(), configuration ) );
+            request.setLocalRepository( createLocalRepository( request, request.getSettings() ) );
-    private void artifactTransferMechanism( MavenExecutionRequest request, Configuration configuration )
-        throws MavenEmbedderException
-    {
-        // ------------------------------------------------------------------------
-        // Artifact Transfer Mechanism
-        // ------------------------------------------------------------------------
-
-        if ( request.isOffline() )
-        {
-            repositorySystem.setOnline( false );
-        }
-        else if ( ( request.getSettings() != null ) && request.getSettings().isOffline() )
-        {
-            repositorySystem.setOnline( false );
-        }
-        else
-        {
-            repositorySystem.setOnline( true );
-        }
-    }
-
-    public ArtifactRepository createLocalRepository( MavenExecutionRequest request, Settings settings, Configuration configuration )
+    public ArtifactRepository createLocalRepository( MavenExecutionRequest request, Settings settings )
-        if ( StringUtils.isEmpty( localRepositoryPath ) && ( configuration.getLocalRepository() != null ) )
-        {
-            localRepositoryPath = configuration.getLocalRepository().getAbsolutePath();
-        }
-
-            localRepositoryPath = MavenEmbedder.defaultUserLocalRepository.getAbsolutePath();
+            localRepositoryPath = RepositorySystem.defaultUserLocalRepository.getAbsolutePath();
-            return repositorySystem.createLocalRepository( localRepositoryPath, MavenEmbedder.DEFAULT_LOCAL_REPO_ID );
+            return repositorySystem.createLocalRepository( new File( localRepositoryPath ) );
-        catch ( IOException e )
+        catch ( InvalidRepositoryException e )
-    // ------------------------------------------------------------------------
-    // Eventing
-    // ------------------------------------------------------------------------
-
-    private void eventing( MavenExecutionRequest request, Configuration configuration )
+    private void toolchains( MavenExecutionRequest request )
-        // ------------------------------------------------------------------------
-        // Event Monitor/Logging
-        //
-        //
-        // ------------------------------------------------------------------------
-
-        if ( ( request.getEventMonitors() == null ) || request.getEventMonitors().isEmpty() )
-        {
-            request.addEventMonitor( new DefaultEventMonitor( getLogger() ) );
-        }
-
-        // Now, add in any event monitors from the Configuration instance.
-        List<EventMonitor> configEventMonitors = configuration.getEventMonitors();
-
-        if ( ( configEventMonitors != null ) && !configEventMonitors.isEmpty() )
-        {
-            for ( EventMonitor monitor : configEventMonitors )
-            {
-                request.addEventMonitor( monitor );
-            }
-        }
-    }
-
-    // ------------------------------------------------------------------------
-    // Profile Manager
-    // ------------------------------------------------------------------------
-
-    private void profileManager( MavenExecutionRequest request, Configuration configuration )
-    {
-        // ------------------------------------------------------------------------
-        // Profile Manager
-        // ------------------------------------------------------------------------
-
-        ProfileActivationContext activationContext = request.getProfileActivationContext();
-        if ( activationContext == null )
-        {
-            activationContext = new ProfileActivationContext( request.getProperties(), false );
-        }
-
-        activationContext.setExplicitlyActiveProfileIds( request.getActiveProfiles() );
-        activationContext.setExplicitlyInactiveProfileIds( request.getInactiveProfiles() );
-
-        ProfileManager globalProfileManager = new DefaultProfileManager( activationContext );
-
-        request.setProfileManager( globalProfileManager );
-        request.setProfileActivationContext( activationContext );
-    }
-
-    private void toolchains( MavenExecutionRequest request, Configuration configuration )
-    {
+        // FIXME individual requests must not change global state
+    public MavenExecutionRequest populateDefaults( MavenExecutionRequest request )
+        throws MavenEmbedderException
+    {
+        pom( request );
+        
+        settings( request );
+
+        localRepository( request );
+
+        toolchains( request );
+
+        processSettings( request );
+                
+        return request;
+    }

MOV31 MOV31 INS31 MOV83 INS43 INS42 MOV44 MOV44 MOV43 INS8 UPD42 MOV44 INS8 INS8 UPD83 MOV43 UPD42 MOV44 MOV43 UPD42 MOV42 MOV25 MOV60 MOV25 MOV25 MOV25 INS41 INS25 MOV21 MOV21 MOV21 MOV21 INS25 MOV60 MOV70 MOV21 MOV21 MOV41 MOV8 UPD43 INS27 MOV8 INS32 INS27 INS8 INS32 MOV27 INS8 MOV8 INS8 INS32 UPD42 UPD42 INS33 INS32 MOV33 INS42 INS42 INS27 INS38 INS21 MOV8 UPD42 INS45 UPD42 INS45 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV32 MOV70 INS25 INS25 MOV54 MOV44 INS42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 UPD42 INS32 INS33 INS32 INS32 INS60 INS40 INS27 INS8 INS27 INS8 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 MOV43 INS59 MOV32 INS32 INS33 INS21 INS32 INS33 INS21 INS14 INS32 UPD42 INS42 INS42 INS32 INS42 INS42 MOV14 INS42 INS42 INS32 INS42 INS42 INS32 UPD40 MOV43 INS42 UPD42 MOV42 INS42 INS42 INS42 UPD42 MOV32 INS42 INS42 INS40 INS42 INS42 INS40 UPD42 INS45 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL66 DEL66 DEL66 DEL66 DEL65 DEL29 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL43 DEL14 DEL32 DEL21 DEL8 DEL25 DEL8 DEL42 DEL42 DEL32 DEL42 DEL33 DEL27 DEL42 DEL32 DEL7 DEL21 DEL42 DEL27 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL44 DEL42 DEL7 DEL42 DEL42 DEL42 DEL32 DEL40 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL38 DEL25 DEL8 DEL42 DEL42 DEL45 DEL80 DEL77 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL76 DEL74 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL8 DEL24 DEL8 DEL25 DEL8 DEL31 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL32 DEL33 DEL27 DEL8 DEL8 DEL25 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL44 DEL42 DEL8 DEL70 DEL8 DEL25 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL70 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL42 DEL32 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL70 DEL8 DEL70 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL25 DEL42 DEL45 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL9 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL45 DEL42 DEL42 DEL32 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL9 DEL32 DEL21 DEL8 DEL42 DEL42 DEL32 DEL33 DEL27 DEL36 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL42 DEL42 DEL9 DEL32 DEL21 DEL8 DEL42 DEL42 DEL9 DEL32 DEL21 DEL8 DEL25 DEL25 DEL8 DEL31 DEL42 DEL43 DEL42 DEL44 DEL42 DEL40 DEL42 DEL43 DEL42 DEL44 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL33 DEL27 DEL36 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL42 DEL42 DEL42 DEL43 DEL42 DEL32 DEL14 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL36 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL8 DEL25 DEL8 DEL31 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL42 DEL32 DEL9 DEL14 DEL7 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42