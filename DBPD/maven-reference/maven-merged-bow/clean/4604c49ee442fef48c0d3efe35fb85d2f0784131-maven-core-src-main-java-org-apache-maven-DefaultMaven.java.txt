[MNG-6092] warn if prerequisites.maven is used for non-plugin projects

+import org.apache.maven.model.Prerequisites;
-            //TODO Hack to make the cycle detection the same for the new graph builder
+            // TODO Hack to make the cycle detection the same for the new graph builder
-    {        
+    {
-            for ( AbstractMavenLifecycleParticipant listener : getLifecycleParticipants( Collections
-                .<MavenProject>emptyList() ) )
+            // CHECKSTYLE_OFF: LineLength
+            for ( AbstractMavenLifecycleParticipant listener : getLifecycleParticipants( Collections.<MavenProject>emptyList() ) )
+            // CHECKSTYLE_ON: LineLength
-        
+
-            return addExceptionToResult( result,
-                                         Iterables.toArray( graphResult.getProblems(), ModelProblem.class )[0]
-                                             .getException() );
+            return addExceptionToResult( result, Iterables.toArray( graphResult.getProblems(),
+                                                                    ModelProblem.class )[0].getException() );
-        
+
-        
+
-            return addExceptionToResult( result,
-                                         Iterables.toArray( graphResult.getProblems(), ModelProblem.class )[0]
-                                             .getException() );
+            return addExceptionToResult( result, Iterables.toArray( graphResult.getProblems(),
+                                                                    ModelProblem.class )[0].getException() );
+            validatePrerequisitesForNonMavenPluginProjects( session.getProjects() );
+
-    
+
-        Collection<AbstractMavenLifecycleParticipant> lifecycleListeners =
-            new LinkedHashSet<>();
+        Collection<AbstractMavenLifecycleParticipant> lifecycleListeners = new LinkedHashSet<>();
+    private void validatePrerequisitesForNonMavenPluginProjects( List<MavenProject> projects )
+    {
+        for ( MavenProject mavenProject : projects )
+        {
+            if ( !"maven-plugin".equals( mavenProject.getPackaging() ) )
+            {
+                Prerequisites prerequisites = mavenProject.getPrerequisites();
+                if ( prerequisites != null && prerequisites.getMaven() != null )
+                {
+                    logger.warn( "The project " + mavenProject.getId() + " uses prerequisites"
+                        + " which is only intended for maven-plugin projects "
+                        + "but not for non maven-plugin projects. "
+                        + "For such purposes you should use the maven-enforcer-plugin. "
+                        + "See https://maven.apache.org/enforcer/enforcer-rules/requireMavenVersion.html" );
+                }
+            }
+        }
+    }
+
-    private Result<? extends ProjectDependencyGraph> buildGraph( MavenSession session, MavenExecutionResult result ) 
+    private Result<? extends ProjectDependencyGraph> buildGraph( MavenSession session, MavenExecutionResult result )
-            session.setProjectDependencyGraph( projectDependencyGraph );                
+            session.setProjectDependencyGraph( projectDependencyGraph );
-        
-        return graphResult;        
+
+        return graphResult;
-    
+

INS26 INS40 INS31 INS83 INS39 INS42 INS44 INS8 INS74 INS42 INS70 INS43 INS43 INS44 INS42 INS8 INS21 INS42 INS42 INS43 INS42 INS25 INS32 INS42 INS38 INS8 INS42 INS32 INS32 INS60 INS25 INS42 INS42 INS45 INS42 INS32 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS32 INS27 INS27 INS21 INS42 INS42 INS42 INS33 INS32 INS33 INS32 INS42 INS42 INS42 INS42 INS27 INS45 INS32 INS45 INS45 INS45 INS45 INS45 INS42 INS42