PR: MNG-122
exception clean up phase 1

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@320668 13f79535-47bb-0310-9956-ffa450edef68

+/*
+ * Copyright 2001-2005 The Apache Software Foundation.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import org.apache.maven.artifact.versioning.InvalidVersionSpecificationException;
- * 
+ *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * The plugin artifactId to describe. 
+     * The plugin artifactId to describe.
-     * 
+     *
-     * The plugin version to describe. 
+     * The plugin version to describe.
-     * 
+     *
-     * be described, rather than the whole plugin.  
-     * 
+     * be described, rather than the whole plugin.
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * The current user system settings for use in Maven. This is used for 
+     * The current user system settings for use in Maven. This is used for
-     * 
+     *
-     * The current build session instance. This is used for 
+     * The current build session instance. This is used for
-     * 
+     *
-     * 
+     *
-     * 
+     *
-    
+
-     * 
+     *
-        
+
-        
+
-        
+
-    private void writeDescription( StringBuffer descriptionBuffer ) throws MojoExecutionException
+    private void writeDescription( StringBuffer descriptionBuffer )
+        throws MojoExecutionException
-                
+
-            
+
-    private PluginDescriptor lookupPluginDescriptor( PluginInfo pi ) throws MojoExecutionException, MojoFailureException
+    private PluginDescriptor lookupPluginDescriptor( PluginInfo pi )
+        throws MojoExecutionException, MojoFailureException
-        
+
-        
+
-            
+
-            
+
-            throw new MojoFailureException("You must either specify \'groupId\' and \'artifactId\', or a valid \'plugin\' parameter." );
+            throw new MojoFailureException(
+                "You must either specify \'groupId\' and \'artifactId\', or a valid \'plugin\' parameter." );
-        
+
-                throw new MojoExecutionException( "Error retrieving plugin descriptor for:\n\ngroupId: \'" + groupId
-                    + "\'\nartifactId: \'" + artifactId + "\'\nversion: \'" + version + "\'\n\n", e );
+                throw new MojoExecutionException( "Error retrieving plugin descriptor for:\n\ngroupId: \'" + groupId +
+                    "\'\nartifactId: \'" + artifactId + "\'\nversion: \'" + version + "\'\n\n", e );
-                throw new MojoExecutionException( "Error retrieving plugin descriptor for:\n\ngroupId: \'" + groupId
-                    + "\'\nartifactId: \'" + artifactId + "\'\nversion: \'" + version + "\'\n\n", e );
+                throw new MojoExecutionException( "Error retrieving plugin descriptor for:\n\ngroupId: \'" + groupId +
+                    "\'\nartifactId: \'" + artifactId + "\'\nversion: \'" + version + "\'\n\n", e );
-                throw new MojoExecutionException( "Error retrieving plugin descriptor for:\n\ngroupId: \'" + groupId
-                    + "\'\nartifactId: \'" + artifactId + "\'\nversion: \'" + version + "\'\n\n", e );
+                throw new MojoExecutionException( "Error retrieving plugin descriptor for:\n\ngroupId: \'" + groupId +
+                    "\'\nartifactId: \'" + artifactId + "\'\nversion: \'" + version + "\'\n\n", e );
-                throw new MojoExecutionException( "Error retrieving plugin descriptor for:\n\ngroupId: \'" + groupId
-                                                  + "\'\nartifactId: \'" + artifactId + "\'\nversion: \'" + version + "\'\n\n", e );
+                throw new MojoExecutionException( "Error retrieving plugin descriptor for:\n\ngroupId: \'" + groupId +
+                    "\'\nartifactId: \'" + artifactId + "\'\nversion: \'" + version + "\'\n\n", e );
+            }
+            catch ( InvalidVersionSpecificationException e )
+            {
+                throw new MojoExecutionException( "Error retrieving plugin descriptor for:\n\ngroupId: \'" + groupId +
+                    "\'\nartifactId: \'" + artifactId + "\'\nversion: \'" + version + "\'\n\n", e );
-        
+
-    private void parsePluginLookupInfo( PluginInfo pi ) throws MojoFailureException
+    private void parsePluginLookupInfo( PluginInfo pi )
+        throws MojoFailureException
-                        throw new MojoFailureException("plugin parameter must be a plugin prefix, or conform to: 'groupId:artifactId[:version]." );
+                        throw new MojoFailureException(
+                            "plugin parameter must be a plugin prefix, or conform to: 'groupId:artifactId[:version]." );
-        
+
-        
+
-        
+
-            
+
-                
+
-                
+
-        
+
-        
-        result = result.replaceAll(" ?\\<p\\> ?", "" );
-        result = result.replaceAll(" ?\\</p\\> ?", "\n\n" );
-        
+
+        result = result.replaceAll( " ?\\<p\\> ?", "" );
+        result = result.replaceAll( " ?\\</p\\> ?", "\n\n" );
+
-        
+
-        
+
-        
+
-        
+
-        
+
-        
+
-        
+
-            
+
-            
+
-            for ( Iterator it = reqs.iterator(); it.hasNext(); )
+            for ( Iterator it = reqs.iterator(); it.hasNext(); idx++ )
-                
+
-                
-                buffer.append( "\n[" ).append( idx++ ).append( "] " );
+
+                buffer.append( "\n[" ).append( idx ).append( "] " );
-                
+
-                
+
-            
+
-        
+
-        
+
-            
+
-            
+
-                
+
-                
+
-                
+
-                
+
-                
+
-                
+
-                
+
-                
+
-                
+
-                
+
-            
+
-    
+
+
+
+
+
-        
+
+

INS26 INS40 UPD66 UPD66 UPD66 UPD66 UPD66 INS12 MOV37 INS44 INS8 INS43 INS42 INS53 INS42 INS14 INS43 INS27 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45