better exception handling


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@293232 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.plugin.MojoFailureException;
+import java.io.FileNotFoundException;
- * 
- * @goal assembly
- * @description Assemble an application bundle or distribution from an assembly descriptor.
+ *
+ * @goal assembly
+ * @description Assemble an application bundle or distribution from an assembly descriptor.
- * @aggregator 
+ * @aggregator
-     * @parameter expression="${maven.assembly.descriptorId}"
+     * @parameter expression="${descriptorId}"
-     * @parameter expression="${maven.assembly.descriptor}"
+     * @parameter expression="${descriptor}"
-     * @parameter expression="${component.org.apache.maven.project.MavenProjectHelper}"
-     * @required
-     * @readonly
+     * @component
-        throws MojoExecutionException
+        throws MojoExecutionException, MojoFailureException
-        try
-        {
-            doExecute();
-        }
-        catch ( Exception e )
-        {
-            // TODO: don't catch exception
-            throw new MojoExecutionException( "Error creating assembly", e );
-        }
+        doExecute();
-        throws ArchiverException, IOException, MojoExecutionException, XmlPullParserException
+        throws MojoExecutionException, MojoFailureException
-            r = new FileReader( descriptor );
+            try
+            {
+                r = new FileReader( descriptor );
+            }
+            catch ( FileNotFoundException e )
+            {
+                throw new MojoFailureException( "Unable to find descriptor: " + e.getMessage() );
+            }
-            // TODO: better exception
-            throw new MojoExecutionException( "You must specify descriptor or descriptorId" );
+            throw new MojoFailureException( "You must specify descriptor or descriptorId" );
+        Assembly assembly;
-            Assembly assembly = reader.read( r );
+            assembly = reader.read( r );
+        }
+        catch ( IOException e )
+        {
+            throw new MojoExecutionException( "Error reading descriptor", e );
+        }
+        catch ( XmlPullParserException e )
+        {
+            throw new MojoExecutionException( "Error reading descriptor", e );
+        }
+        finally
+        {
+            IOUtil.close( r );
+        }
-            // TODO: include dependencies marked for distribution under certain formats
-            // TODO: how, might we plug this into an installer, such as NSIS?
-            // TODO: allow file mode specifications?
+        // TODO: include dependencies marked for distribution under certain formats
+        // TODO: how, might we plug this into an installer, such as NSIS?
+        // TODO: allow file mode specifications?
-            String fullName = finalName + "-" + assembly.getId();
+        String fullName = finalName + "-" + assembly.getId();
-            for ( Iterator i = assembly.getFormats().iterator(); i.hasNext(); )
+        for ( Iterator i = assembly.getFormats().iterator(); i.hasNext(); )
+        {
+            String format = (String) i.next();
+
+            String filename = fullName + "." + format;
+
+            File destFile = null;
+            try
-                String format = (String) i.next();
-
-                String filename = fullName + "." + format;
-
-                File destFile = new File( outputDirectory, filename );
+                destFile = new File( outputDirectory, filename );
-
-                projectHelper.attachArtifact( project, format, format + "-assembly", destFile );
-        }
-        finally
-        {
-            IOUtil.close( r );
+            catch ( ArchiverException e )
+            {
+                throw new MojoExecutionException( "Error creating assembly", e );
+            }
+            catch ( IOException e )
+            {
+                throw new MojoExecutionException( "Error creating assembly", e );
+            }
+
+            projectHelper.attachArtifact( project, format, format + "-assembly", destFile );

INS26 INS26 INS40 INS40 MOV65 MOV65 MOV43 INS43 MOV8 UPD43 MOV8 UPD65 INS42 UPD42 MOV60 MOV25 INS54 UPD66 UPD66 INS8 INS8 INS12 INS12 MOV8 INS54 INS8 MOV60 INS21 INS44 MOV8 INS44 INS8 INS54 MOV8 INS12 INS53 INS7 MOV43 INS42 MOV43 INS42 INS53 INS8 MOV12 INS12 INS44 INS8 INS14 INS42 MOV32 INS14 INS33 MOV60 MOV21 MOV21 INS21 MOV21 MOV21 INS44 INS8 INS43 INS42 INS53 INS43 INS45 UPD45 INS42 INS43 INS45 INS42 INS7 UPD43 INS43 INS42 INS53 INS42 INS14 INS42 INS42 INS42 MOV14 UPD42 INS42 INS14 INS43 INS27 INS43 INS45 INS42 INS42 INS45 INS32 INS42 INS42 INS42 DEL66 DEL66 DEL65 DEL65 DEL54 DEL8 DEL54 DEL8