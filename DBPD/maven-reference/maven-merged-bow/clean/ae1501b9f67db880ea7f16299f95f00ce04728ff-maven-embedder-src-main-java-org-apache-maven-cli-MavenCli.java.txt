o collecting all logging/eventing into the core. i posted a list of possible errors that can occur in the core, the stuff we had was only
  partially being use and we problems being emitted with messages like:

  NOTE: One or more purely derived expression elements were detected in this expression. 
  If you continue to get this error after any other expression elements are specified correctly
  please report this issue to the Maven development team.

  I think we have to make a very concerted effort to make useful messages because I'm tired of standing behind Maven
  users and being embarrassed when they look at me and ask "what does that mean?". "i actually have no idea."


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@572456 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.plugin.MojoFailureException;
-import org.codehaus.plexus.logging.Logger;
-            showError( (Exception) result.getExceptions().get( 0 ), showErrors );
-
-            logger.close();
-
-
-        logger.close();
-
-        return 0;
+        else
+        {
+            return 0;
+        }
-        // TODO: should all the logging be left to the CLI?
-        logSuccess( reactorManager );
+        if ( result.hasExceptions() )
+        {
+            for ( Iterator i = result.getExceptions().iterator(); i.hasNext(); )
+            {
+                Exception e = (Exception) i.next();
-        stats( request.getStartTime() );
+                showError( e.getMessage(), e, request.isShowErrors() );
+            }
+        }
+        else
+        {
+            line();
-        line();
+            getLogger().info( "BUILD SUCCESSFUL" );
+
+            line();
+
+            stats( request.getStartTime() );
+
+            line();
+        }
+
+        logger.close();
-
-                logTrace(
-                    buildFailure.getCause(),
-                    showErrors );
-    private static void showError( Exception e,
-                                   boolean show )
-    {
-        showError( e.getMessage(), e, show );
-    }
-
-    
-    private void logTrace( Throwable t,
-                           boolean showErrors )
-    {
-        if ( getLogger().isDebugEnabled() )
-        {
-            getLogger().debug(
-                "Trace",
-                t );
-
-            line();
-        }
-        else if ( showErrors )
-        {
-            getLogger().info(
-                "Trace",
-                t );
-
-            line();
-        }
-    }
-
-    private void logSuccess( ReactorManager rm )
-    {
-        line();
-
-        getLogger().info( "BUILD SUCCESSFUL" );
-
-        line();
-    }

MOV26 UPD40 INS25 MOV21 INS8 INS32 INS8 INS8 MOV41 INS42 INS42 INS24 MOV21 MOV21 MOV21 MOV21 MOV21 INS58 INS32 INS8 INS43 INS59 INS42 INS42 INS60 MOV21 INS42 INS42 MOV32 MOV43 INS59 UPD42 INS42 INS11 INS42 MOV32 INS42 INS32 MOV43 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 DEL42 DEL11 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL34 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL83 DEL83 DEL39 DEL42 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL32 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL32 DEL21 DEL8 DEL25 DEL25 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL8 DEL31