upgrade plexus utils to 1.0.4-SNAPSHOT.
The group ID has changed, so add a bunch of exclusions to ensure the old is not picked up
fix bugs in mboot that wasn't honoring excludes.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@307294 13f79535-47bb-0310-9956-ffa450edef68

+    private final Set excluded;
+
+    private final List chain;
+
+        this( downloader, resolveTransitiveDependencies, Collections.EMPTY_SET, Collections.EMPTY_LIST );
+    }
+
+    public ModelReader( ArtifactDownloader downloader, boolean resolveTransitiveDependencies, Set excluded, List chain )
+    {
+
+        this.excluded = excluded;
+
+        this.chain = chain;
-            currentDependency = new Dependency();
+            List chain = Collections.singletonList(
+                new Dependency( groupId, artifactId, version, packaging, this.chain ) );
+            currentDependency = new Dependency( chain );
-            ModelReader p = retrievePom( parentGroupId, parentArtifactId, parentVersion, "pom", false );
+            ModelReader p = retrievePom( parentGroupId, parentArtifactId, parentVersion, "pom", false,
+                                         excluded, Collections.EMPTY_LIST );
-            addDependencies( p.getDependencies(), parentDependencies, null, Collections.EMPTY_SET );
+            addDependencies( p.getDependencies(), parentDependencies, null, excluded );
-            if ( dependency.getVersion() == null )
+            if ( !excluded.contains( dependency.getConflictId() ) )
-                Dependency managedDependency = (Dependency) managedDependencies.get( dependency.getConflictId() );
-                if ( managedDependency == null )
+                if ( dependency.getVersion() == null )
-                    throw new NullPointerException( "[" + groupId + ":" + artifactId + ":" + packaging + ":" + version +
-                        "] " + "Dependency " + dependency.getConflictId() +
-                        " is missing a version, and nothing is found in dependencyManagement. " );
+                    Dependency managedDependency = (Dependency) managedDependencies.get( dependency.getConflictId() );
+                    if ( managedDependency == null )
+                    {
+                        throw new NullPointerException( "[" + groupId + ":" + artifactId + ":" + packaging + ":" +
+                            version + "] " + "Dependency " + dependency.getConflictId() +
+                            " is missing a version, and nothing is found in dependencyManagement. " );
+                    }
+                    dependency.setVersion( managedDependency.getVersion() );
-                dependency.setVersion( managedDependency.getVersion() );
-            }
-            if ( resolveTransitiveDependencies )
-            {
-                ModelReader p = retrievePom( dependency.getGroupId(), dependency.getArtifactId(),
-                                             dependency.getVersion(), dependency.getType(),
-                                             resolveTransitiveDependencies );
+                if ( resolveTransitiveDependencies )
+                {
+                    Set excluded = new HashSet( this.excluded );
+                    excluded.addAll( dependency.getExclusions() );
-                addDependencies( p.getDependencies(), transitiveDependencies, dependency.getScope(),
-                                 dependency.getExclusions() );
+                    ModelReader p = retrievePom( dependency.getGroupId(), dependency.getArtifactId(),
+                                                 dependency.getVersion(), dependency.getType(),
+                                                 resolveTransitiveDependencies, excluded, dependency.getChain() );
+
+                    addDependencies( p.getDependencies(), transitiveDependencies, dependency.getScope(), excluded );
+                }
+                if ( "plexus".equals( d.getGroupId() ) && ( "plexus-utils".equals( d.getArtifactId() ) ||
+                    "plexus-container-default".equals( d.getArtifactId() ) ) )
+                {
+                    throw new IllegalStateException( d.getConflictId() + " found in chain " + d.getChain() );
+                }
-                                     boolean resolveTransitiveDependencies )
+                                     boolean resolveTransitiveDependencies, Set excluded, List chain )
-        ModelReader p = new ModelReader( downloader, resolveTransitiveDependencies );
+        ModelReader p = new ModelReader( downloader, resolveTransitiveDependencies, excluded, chain );
-            Dependency pom = new Dependency( groupId, artifactId, version, type );
+            Dependency pom = new Dependency( groupId, artifactId, version, type, chain );

INS23 INS23 INS31 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS42 INS44 INS44 INS8 INS44 INS44 INS44 INS44 INS42 INS42 INS42 INS42 INS43 INS42 INS39 INS42 INS17 INS43 INS42 INS43 INS42 INS21 INS21 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS7 INS7 INS42 INS42 MOV43 INS22 INS42 INS22 INS42 INS25 INS52 INS42 INS52 INS42 INS38 INS8 INS8 MOV43 INS42 INS42 MOV43 INS60 INS42 INS32 MOV25 MOV25 INS25 MOV21 INS43 INS59 INS42 INS40 INS42 INS42 INS32 INS27 MOV8 MOV43 INS42 INS42 INS42 INS32 INS42 INS42 INS60 INS21 INS32 INS36 INS53 INS42 INS42 INS14 INS43 INS42 INS43 INS59 INS32 INS45 INS42 INS32 INS27 INS14 MOV43 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS14 INS42 INS42 MOV32 INS42 INS42 INS42 INS32 INS32 INS43 INS27 INS52 INS42 INS43 INS22 INS42 INS32 INS45 INS42 INS32 INS45 INS42 INS32 INS42 INS32 INS45 INS32 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL40