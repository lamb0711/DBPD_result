Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/maven

-            validateStringNotEmpty( "parent.groupId", problems, Severity.FATAL, Version.BASE, parent.getGroupId(), parent );
+            validateStringNotEmpty( "parent.groupId", problems, Severity.FATAL, Version.BASE, parent.getGroupId(),
+                                    parent );
-            validateStringNotEmpty( "parent.artifactId", problems, Severity.FATAL, Version.BASE, parent.getArtifactId(), parent );
+            validateStringNotEmpty( "parent.artifactId", problems, Severity.FATAL, Version.BASE,
+                                    parent.getArtifactId(), parent );
-            validateStringNotEmpty( "parent.version", problems, Severity.FATAL, Version.BASE, parent.getVersion(), parent );
+            validateStringNotEmpty( "parent.version", problems, Severity.FATAL, Version.BASE, parent.getVersion(),
+                                    parent );
-            validateEnum( "modelVersion", problems, Severity.ERROR, Version.V20, model.getModelVersion(), null, model, "4.0.0" );
+            validateEnum( "modelVersion", problems, Severity.ERROR, Version.V20, model.getModelVersion(), null, model,
+                          "4.0.0" );
-            validateStringNoExpression( "artifactId", problems, Severity.WARNING, Version.V20, model.getArtifactId(), model );
+            validateStringNoExpression( "artifactId", problems, Severity.WARNING, Version.V20, model.getArtifactId(),
+                                        model );
-                                      "dependencyManagement.dependencies.dependency", request );
+                                           "dependencyManagement.dependencies.dependency", request );
-                                  request );
+                                     request );
-                    validate20RawPlugins( problems, mngt.getPlugins(), "build.pluginManagement.plugins.plugin",
-                                        request );
+                    validate20RawPlugins( problems, mngt.getPlugins(), "build.pluginManagement.plugins.plugin", request );
-    private boolean validateVersionNoExpression(String fieldName, ModelProblemCollector problems, Severity severity, Version version, 
-                                                String string, InputLocationTracker tracker) 
+    private boolean validateVersionNoExpression( String fieldName, ModelProblemCollector problems, Severity severity,
+                                                 Version version, String string, InputLocationTracker tracker )
-      
-      if ( !hasExpression( string ) ) 
-      {
-          return true;
-      }
-  
-      //
-      // Acceptable versions for continuous delivery
-      //
-      // changelist
-      // revision
-      // sha1
-      //
-      if( string.trim().contains("${changelist}") || string.trim().contains("${revision}") || string.trim().contains("${sha1}") ) 
-      {
-          return true;  
-      }
-      
-      addViolation(problems, severity, version, fieldName, null, "contains an expression but should be a constant.", tracker);
-  
-      return false;
-    }    
-    
+
+        if ( !hasExpression( string ) )
+        {
+            return true;
+        }
+
+        //
+        // Acceptable versions for continuous delivery
+        //
+        // changelist
+        // revision
+        // sha1
+        //
+        if ( string.trim().contains( "${changelist}" ) || string.trim().contains( "${revision}" )
+            || string.trim().contains( "${sha1}" ) )
+        {
+            return true;
+        }
+
+        addViolation( problems, severity, version, fieldName, null, "contains an expression but should be a constant.",
+                      tracker );
+
+        return false;
+    }
+
-    private boolean validateBoolean( String fieldName, ModelProblemCollector problems, Severity severity, Version version,
-                                     String string, String sourceHint, InputLocationTracker tracker )
+    private boolean validateBoolean( String fieldName, ModelProblemCollector problems, Severity severity,
+                                     Version version, String string, String sourceHint, InputLocationTracker tracker )
-        addViolation( problems, severity, version, fieldName, sourceHint, "must be 'true' or 'false' but is '" + string + "'.",
-                      tracker );
+        addViolation( problems, severity, version, fieldName, sourceHint, "must be 'true' or 'false' but is '" + string
+            + "'.", tracker );
-    private boolean validateEnum( String fieldName, ModelProblemCollector problems, Severity severity, Version version, String string,
-                                  String sourceHint, InputLocationTracker tracker, String... validValues )
+    private boolean validateEnum( String fieldName, ModelProblemCollector problems, Severity severity, Version version,
+                                  String string, String sourceHint, InputLocationTracker tracker, String... validValues )
-    private boolean validateBannedCharacters( String fieldName, ModelProblemCollector problems, Severity severity, Version version, 
-                                              String string, String sourceHint, InputLocationTracker tracker,
-                                              String banned )
+    private boolean validateBannedCharacters( String fieldName, ModelProblemCollector problems, Severity severity,
+                                              Version version, String string, String sourceHint,
+                                              InputLocationTracker tracker, String banned )
-    private boolean validateVersion( String fieldName, ModelProblemCollector problems, Severity severity, Version version,
-                                     String string, String sourceHint, InputLocationTracker tracker )
+    private boolean validateVersion( String fieldName, ModelProblemCollector problems, Severity severity,
+                                     Version version, String string, String sourceHint, InputLocationTracker tracker )
-    private boolean validate20ProperSnapshotVersion( String fieldName, ModelProblemCollector problems, Severity severity, Version version,
-                                                   String string, String sourceHint, InputLocationTracker tracker )
+    private boolean validate20ProperSnapshotVersion( String fieldName, ModelProblemCollector problems,
+                                                     Severity severity, Version version, String string,
+                                                     String sourceHint, InputLocationTracker tracker )
-            addViolation( problems, severity, version, fieldName, sourceHint, "uses an unsupported snapshot version format"
-                + ", should be '*-SNAPSHOT' instead.", tracker );
+            addViolation( problems, severity, version, fieldName, sourceHint,
+                          "uses an unsupported snapshot version format" + ", should be '*-SNAPSHOT' instead.", tracker );
-                                           String sourceHint, InputLocationTracker tracker,
-                                           ModelBuildingRequest request )
+                                             String sourceHint, InputLocationTracker tracker,
+                                             ModelBuildingRequest request )
-            addViolation( problems, errOn30, Version.V20, fieldName, sourceHint, "must be a valid version but is '" + string + "'.",
-                          tracker );
+            addViolation( problems, errOn30, Version.V20, fieldName, sourceHint, "must be a valid version but is '"
+                + string + "'.", tracker );
-    private static void addViolation( ModelProblemCollector problems, Severity severity, Version version, String fieldName,
-                                      String sourceHint, String message, InputLocationTracker tracker )
+    private static void addViolation( ModelProblemCollector problems, Severity severity, Version version,
+                                      String fieldName, String sourceHint, String message, InputLocationTracker tracker )

