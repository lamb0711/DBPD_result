
JIRA issues fixed:

MRM-1
MRM-7
MRM-3
MRM-5
o Pipelining all logging through a single Reporter now, to repository.report.txt
o Disabled WARNING reports by default, add 'reportWarnings=true' to config file to enable them.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@189629 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.tools.repoclean.report.FileReporter;
+import java.net.MalformedURLException;
-        throws Exception
+        throws ReportWriteException
-        File sourceBase = new File( new URL( sourceRepo.getUrl() ).getPath() );
+        File sourceBase = null;
+        try
+        {
+            sourceBase = new File( new URL( sourceRepo.getUrl() ).getPath() );
+        }
+        catch ( MalformedURLException e )
+        {
+            repoReporter.error( "Cannot construct source repository base File for: " + sourceRepo, e );
-        File targetBase = new File( new URL( targetRepo.getUrl() ).getPath() );
+            return null;
+        }
+
+        File targetBase = null;
+        try
+        {
+            targetBase = new File( new URL( targetRepo.getUrl() ).getPath() );
+        }
+        catch ( MalformedURLException e )
+        {
+            repoReporter.error( "Cannot construct target repository base File for: " + targetRepo, e );
+
+            return null;
+        }
-
+            
-            FileReporter artifactReporter = null;
-                artifactReporter = new FileReporter( reportsBase, artifactReportPath );
-
-                    try
+                    if ( !configuration.reportOnly() )
-                        if ( !configuration.reportOnly() )
+                        if ( logger.isDebugEnabled() )
-                            if ( logger.isDebugEnabled() )
-                            {
-                                logger.debug( "sourceRepo basedir is: \'" + sourceRepo.getBasedir() + "\'" );
-                                logger.debug( "targetRepo basedir is: \'" + targetRepo.getBasedir() + "\'" );
-                            }
-
-                            File targetParent = artifactTarget.getParentFile();
-                            if ( !targetParent.exists() )
-                            {
-                                targetParent.mkdirs();
-                            }
-
-                            if ( logger.isDebugEnabled() )
-                            {
-                                logger.debug( "Copying artifact[" + artifact.getId() + "] from \'" + artifactSource
-                                    + "\' to \'" + artifactTarget + "\'." );
-                            }
-
-                            copyArtifact( artifact, artifactTarget, artifactReporter );
+                            logger.debug( "sourceRepo basedir is: \'" + sourceRepo.getBasedir() + "\'" );
+                            logger.debug( "targetRepo basedir is: \'" + targetRepo.getBasedir() + "\'" );
-                    }
-                    catch ( Exception e )
-                    {
-                        repoReporter.error( "Error transferring artifact[" + artifact.getId()
-                            + "] to the target repository.", e );
-                        throw e;
+                        File targetParent = artifactTarget.getParentFile();
+                        if ( !targetParent.exists() )
+                        {
+                            targetParent.mkdirs();
+                        }
+
+                        if ( logger.isDebugEnabled() )
+                        {
+                            logger.debug( "Copying artifact[" + artifact.getId() + "] from \'" + artifactSource
+                                + "\' to \'" + artifactTarget + "\'." );
+                        }
+
+                        copyArtifact( artifact, artifactTarget, repoReporter );
-                    try
-                    {
-                        digestVerifier.verifyDigest( artifactSource, artifactTarget, transaction, artifactReporter,
-                                                     configuration.reportOnly() );
-                    }
-                    catch ( Exception e )
-                    {
-                        repoReporter.error( "Error verifying digest for artifact[" + artifact.getId() + "]", e );
+                    digestVerifier.verifyDigest( artifactSource, artifactTarget, transaction, repoReporter,
+                                                 configuration.reportOnly() );
-                        throw e;
-                    }
-
-                    try
-                    {
-                        rewriteMetadata( artifact, transaction, sourceBase, sourceRepo, targetBase, targetRepo,
-                                         artifactReporter, configuration.reportOnly() );
-                    }
-                    catch ( Exception e )
-                    {
-                        repoReporter.error( "Error rewriting POM for artifact[" + artifact.getId()
-                            + "] into the target repository.\n Error message: " + e.getMessage() );
-
-                        throw e;
-                    }
-
+                    rewriteMetadata( artifact, transaction, sourceBase, sourceRepo, targetBase, targetRepo,
+                                     repoReporter, configuration.reportOnly() );
+                    
-                    artifactReporter.warn( "Target file for artifact is present and not stale. (Artifact: \'"
+                    repoReporter.warn( "Target file for artifact is present and not stale. (Artifact: \'"
-                    artifactReporter.error( "Cannot find source file for artifact: \'" + artifact.getId()
+                    repoReporter.error( "Cannot find source file for artifact: \'" + artifact.getId()
-                if ( artifactReporter.hasError() )
+                if ( repoReporter.hasError() )
-                artifactReporter.error( "Error while rewriting file or POM for artifact: \'" + artifact.getId()
-                    + "\'. See report at: \'" + artifactReportPath + "\'.", e );
-            }
-            finally
-            {
-                if ( artifactReporter != null )
-                {
-                    artifactReporter.close();
-                }
+                repoReporter.error( "Error while rewriting file or POM for artifact: \'" + artifact.getId()
+                    + "\'.", e );
+                File targetPomParent = targetPom.getParentFile();
+                if ( !targetPomParent.exists() )
+                {
+                    targetPomParent.mkdirs();
+                }
+
+                FileWriter to = null;
-                    File targetPomParent = targetPom.getParentFile();
-                    if ( !targetPomParent.exists() )
+                    StringReader from = null;
+                    if ( pomContents != null )
-                        targetPomParent.mkdirs();
+                        from = new StringReader( pomContents );
-                    FileWriter to = null;
-                    try
-                    {
-                        StringReader from = null;
-                        if ( pomContents != null )
-                        {
-                            from = new StringReader( pomContents );
-                        }
+                    to = new FileWriter( targetPom );
-                        to = new FileWriter( targetPom );
-
-                        artifactPomRewriter.rewrite( artifact, from, to, artifactReporter, reportOnly );
-                    }
-                    finally
-                    {
-                        IOUtil.close( to );
-                    }
-
-                    boolean wroteBridge = bridgePomLocations( pom, targetPom, bridgedTargetPom, artifactReporter,
-                                                              transaction, reportOnly );
-
-                    digestVerifier.verifyDigest( sourcePom, targetPom, transaction, artifactReporter, reportOnly );
-
-                    if ( wroteBridge )
-                    {
-                        digestVerifier.verifyDigest( sourcePom, bridgedTargetPom, transaction, artifactReporter,
-                                                     reportOnly );
-                    }
-
+                    artifactPomRewriter.rewrite( artifact, from, to, artifactReporter, reportOnly );
-                catch ( Exception e )
+                finally
-                    throw e;
+                    IOUtil.close( to );
+                }
+
+                boolean wroteBridge = bridgePomLocations( pom, targetPom, bridgedTargetPom, artifactReporter,
+                                                          transaction, reportOnly );
+
+                digestVerifier.verifyDigest( sourcePom, targetPom, transaction, artifactReporter, reportOnly );
+
+                if ( wroteBridge )
+                {
+                    digestVerifier.verifyDigest( sourcePom, bridgedTargetPom, transaction, artifactReporter,
+                                                 reportOnly );
-    private void copyArtifact( Artifact artifact, File artifactTarget, FileReporter reporter )
+    private void copyArtifact( Artifact artifact, File artifactTarget, Reporter reporter )

MOV26 UPD40 UPD43 MOV8 MOV8 UPD42 MOV60 MOV60 INS54 INS60 MOV54 INS24 MOV21 MOV41 MOV60 MOV60 MOV60 MOV21 MOV60 MOV60 MOV60 MOV21 MOV60 MOV60 MOV60 MOV60 MOV60 MOV25 MOV25 UPD43 MOV43 INS8 INS12 MOV43 INS59 MOV58 MOV32 MOV8 MOV32 INS42 MOV8 UPD42 UPD42 INS21 MOV44 INS8 INS42 INS33 MOV60 MOV60 MOV60 INS54 UPD42 MOV42 MOV27 MOV60 INS7 UPD43 MOV21 INS41 INS7 UPD43 UPD42 INS41 MOV8 INS12 UPD45 MOV32 UPD45 MOV36 MOV45 MOV8 INS42 MOV14 UPD42 INS33 INS42 MOV14 UPD42 INS33 MOV60 MOV60 MOV60 MOV21 MOV21 MOV60 INS25 INS25 INS44 INS8 UPD42 MOV42 MOV21 MOV21 MOV60 MOV21 INS25 UPD42 INS42 INS27 UPD42 MOV27 MOV8 INS25 INS32 MOV8 INS43 INS42 MOV25 MOV21 MOV27 MOV8 UPD45 UPD42 INS45 INS42 MOV21 MOV25 INS21 INS21 MOV21 INS38 MOV8 INS8 UPD42 MOV42 UPD42 MOV42 MOV21 UPD42 MOV42 MOV38 MOV8 INS8 INS32 INS32 MOV42 MOV21 MOV32 INS21 INS54 MOV21 UPD42 INS42 MOV12 INS21 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 UPD42 INS32 INS8 INS12 UPD45 UPD45 MOV44 INS32 INS42 UPD42 UPD42 UPD45 UPD45 UPD42 MOV42 MOV42 INS27 INS21 INS44 INS8 MOV42 MOV42 MOV42 UPD42 INS42 INS42 INS27 UPD45 MOV32 UPD45 MOV42 MOV45 MOV42 MOV45 UPD45 MOV45 MOV42 UPD45 UPD45 MOV45 INS42 MOV32 INS43 INS42 INS21 MOV45 MOV42 UPD45 INS45 INS32 INS45 MOV32 INS45 MOV42 MOV42 UPD42 MOV42 INS42 INS32 INS42 INS42 INS42 INS42 MOV45 INS42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL42 DEL32 DEL21 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL53 DEL8 DEL12 DEL54 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL14 DEL7 DEL21 DEL25 DEL25 DEL42 DEL42 DEL32 DEL25 DEL42 DEL42 DEL8 DEL12 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL54 DEL42 DEL59 DEL60 DEL42 DEL59 DEL60 DEL24 DEL8 DEL42 DEL53 DEL54 DEL42 DEL25 DEL8