Fixing a problem where parent POMs that are not found during model-lineage discovery were not previously stubbed out, and caused the build to fail where it didn't in 2.0.7

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@564299 13f79535-47bb-0310-9956-ffa450edef68

-    
+
-        this.artifactResolver = resolver;
+        artifactResolver = resolver;
-        
+
-        File pomFile = pom;
-        while ( pomFile != null )
-        {
-            Model model = readModel( pomFile, projectBuildCache );
+        ModelAndFile current = new ModelAndFile( readModel( pom, projectBuildCache ), pom );
+        while ( current != null )
+        {
-                lineage.setOrigin( model, pomFile, currentRemoteRepositories );
+                lineage.setOrigin( current.model, current.file, currentRemoteRepositories );
-                lineage.addParent( model, pomFile, currentRemoteRepositories );
+                lineage.addParent( current.model, current.file, currentRemoteRepositories );
-            currentRemoteRepositories = updateRepositorySet( model, currentRemoteRepositories, pomFile, profileManager );
+            currentRemoteRepositories = updateRepositorySet( current.model, currentRemoteRepositories, current.file, profileManager );
-            pomFile = resolveParentPom( model, currentRemoteRepositories, localRepository, pomFile,
-                                        projectBuildCache );
+            current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache );
-        
-        File pomFile = lineage.getDeepestFile();
+
-        Model model = lineage.getDeepestModel();
+        ModelAndFile current = new ModelAndFile( lineage.getDeepestModel(), lineage.getDeepestFile() );
-        pomFile = resolveParentPom( model, currentRemoteRepositories, localRepository, pomFile, projectBuildCache );
+        current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache );
-        while ( pomFile != null )
+        while ( current != null )
-            model = readModel( pomFile, projectBuildCache );
-
-                lineage.setOrigin( model, pomFile, currentRemoteRepositories );
+                lineage.setOrigin( current.model, current.file, currentRemoteRepositories );
-                lineage.addParent( model, pomFile, currentRemoteRepositories );
+                lineage.addParent( current.model, current.file, currentRemoteRepositories );
-            currentRemoteRepositories = updateRepositorySet( model, currentRemoteRepositories, pomFile, profileManager );
+            currentRemoteRepositories = updateRepositorySet( current.model, currentRemoteRepositories, current.file, profileManager );
-            pomFile = resolveParentPom( model, currentRemoteRepositories, localRepository, pomFile,
-                                        projectBuildCache );
+            current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache );
-     * Read the Model instance from the given POM file, and cache it in the given Map before 
+     * Read the Model instance from the given POM file, and cache it in the given Map before
-        
+
-     * Update the remote repository set used to resolve parent POMs, by adding those declared in 
+     * Update the remote repository set used to resolve parent POMs, by adding those declared in
-     * @param profileManager 
+     * @param profileManager
-        loadActiveProfileRepositories( repositories, model, externalProfileManager, pomFile.getParentFile() );
+        File projectDir = pomFile == null ? null : pomFile.getParentFile();
+
+        loadActiveProfileRepositories( repositories, model, externalProfileManager, projectDir );
-     * @param projectBuildCache 
+     * @param projectBuildCache
-    private File resolveParentPom( Model model, List remoteRepositories, ArtifactRepository localRepository,
-                                   File modelPomFile, ProjectBuildCache projectBuildCache )
+    private ModelAndFile resolveParentPom( ModelAndFile child, List remoteRepositories, ArtifactRepository localRepository,
+                                   ProjectBuildCache projectBuildCache )
+        Model model = child.model;
+        File modelPomFile = child.file;
+
-        File pomFile = null;
+        ModelAndFile result = null;
-            
-            pomFile = (File) projectBuildCache.getCachedModelFile( modelParent );
-            if ( pomFile == null )
+            File parentPomFile = projectBuildCache.getCachedModelFile( modelParent );
+
+            if ( parentPomFile == null )
-                pomFile = resolveParentWithRelativePath( modelParent, modelPomFile );
+                parentPomFile = resolveParentWithRelativePath( modelParent, modelPomFile );
-            if ( pomFile == null )
+            if ( parentPomFile == null )
-                pomFile = resolveParentFromRepositories( modelParent, localRepository, remoteRepositories, modelPomFile );
+                parentPomFile = resolveParentFromRepositories( modelParent, localRepository, remoteRepositories, modelPomFile );
+
+            Model parent;
+            if ( parentPomFile == null )
+            {
+                getLogger().warn( "Cannot find parent POM: " + modelParent.getId() + " for child: " + model.getId() + ". Using stub model instead." );
+
+                parent = new Model();
+
+                parent.setGroupId( modelParent.getGroupId() );
+                parent.setArtifactId( modelParent.getArtifactId() );
+                parent.setVersion( modelParent.getVersion() );
+            }
+            else
+            {
+                parent = readModel( parentPomFile );
+            }
+
+            result = new ModelAndFile( parent, parentPomFile );
-        return pomFile;
+        return result;
-            boolean groupsMatch = parentModel.getGroupId() == null
+            boolean groupsMatch = ( parentModel.getGroupId() == null )
-            boolean versionsMatch = parentModel.getVersion() == null
+            boolean versionsMatch = ( parentModel.getVersion() == null )
+    private static final class ModelAndFile
+    {
+        private final Model model;
+        private final File file;
+
+        ModelAndFile( Model model, File file )
+        {
+            this.model = model;
+            this.file = file;
+        }
+    }
+

MOV44 INS55 MOV60 INS43 INS83 INS83 INS83 INS42 INS23 INS23 INS31 INS60 INS60 INS42 UPD43 UPD42 INS60 INS60 INS83 INS83 INS43 INS59 INS83 INS83 MOV43 INS59 INS42 MOV44 INS44 INS8 INS43 INS43 MOV59 UPD66 UPD66 MOV43 INS59 UPD42 MOV43 INS59 MOV43 INS59 INS43 UPD42 INS42 INS42 INS42 MOV43 INS42 INS21 INS21 INS42 INS42 INS42 INS14 UPD42 INS42 INS42 INS14 UPD42 UPD42 INS42 INS16 INS42 INS42 INS40 INS42 INS40 INS42 UPD42 INS60 INS60 INS25 INS21 INS7 INS7 INS43 INS32 INS42 INS43 MOV32 MOV32 UPD42 INS27 INS33 MOV32 MOV43 INS59 MOV43 INS59 INS27 INS8 INS8 INS7 INS22 INS42 INS22 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 UPD42 INS42 INS33 INS42 MOV32 UPD42 UPD42 INS42 INS42 INS33 INS21 INS21 INS21 INS21 INS21 MOV21 INS42 INS14 INS52 INS42 INS52 INS42 INS40 INS40 UPD42 INS40 INS40 UPD42 INS32 INS7 INS32 INS32 INS32 INS43 INS42 INS42 INS36 INS36 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD42 UPD42 INS32 INS42 INS27 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 MOV27 MOV27 INS42 INS45 INS32 INS45 INS32 INS45 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL59 DEL60 DEL42 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL66 DEL66 DEL42 DEL11