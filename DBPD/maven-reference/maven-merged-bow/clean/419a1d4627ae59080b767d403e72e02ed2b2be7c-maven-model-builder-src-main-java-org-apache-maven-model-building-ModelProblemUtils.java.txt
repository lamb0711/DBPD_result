o Refactored code

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@934861 13f79535-47bb-0310-9956-ffa450edef68

- * Assists in the creation of model problems.
+ * Assists in the handling of model problems.
-class ModelProblemUtils
+public class ModelProblemUtils
-    public static String toSourceHint( Model model )
+    static String toSourceHint( Model model )
-    public static String toPath( Model model )
+    static String toPath( Model model )
-    public static String toId( Model model )
+    static String toId( Model model )
-    public static String toId( String groupId, String artifactId, String version )
+    static String toId( String groupId, String artifactId, String version )
+    /**
+     * Creates a string with all location details for the specified model problem. If the project identifier is
+     * provided, the generated location will omit the model id and source information and only give line/column
+     * information for problems originating directly from this POM.
+     * 
+     * @param problem The problem whose location should be formatted, must not be {@code null}.
+     * @param projectId The {@code <groupId>:<artifactId>:<version>} of the corresponding project, may be {@code null}
+     *            to force output of model id and source.
+     * @return The formatted problem location or an empty string if unknown, never {@code null}.
+     */
+    public static String formatLocation( ModelProblem problem, String projectId )
+    {
+        StringBuilder buffer = new StringBuilder( 256 );
+
+        if ( !problem.getModelId().equals( projectId ) )
+        {
+            buffer.append( problem.getModelId() );
+
+            if ( problem.getSource().length() > 0 )
+            {
+                if ( buffer.length() > 0 )
+                {
+                    buffer.append( ", " );
+                }
+                buffer.append( problem.getSource() );
+            }
+        }
+
+        if ( problem.getLineNumber() > 0 )
+        {
+            if ( buffer.length() > 0 )
+            {
+                buffer.append( ", " );
+            }
+            buffer.append( "line " ).append( problem.getLineNumber() );
+        }
+
+        if ( problem.getColumnNumber() > 0 )
+        {
+            if ( buffer.length() > 0 )
+            {
+                buffer.append( ", " );
+            }
+            buffer.append( "column " ).append( problem.getColumnNumber() );
+        }
+
+        return buffer.toString();
+    }
+

INS83 INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS8 UPD66 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS60 INS25 INS25 INS25 INS41 INS66 INS66 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS65 INS66 INS66 INS65 INS66 INS42 INS42 INS43 INS59 INS38 INS8 INS27 INS8 INS27 INS8 INS32 INS66 INS66 INS66 INS66 INS42 INS42 INS14 INS32 INS21 INS25 INS32 INS34 INS25 INS21 INS32 INS34 INS25 INS21 INS42 INS42 INS43 INS34 INS32 INS42 INS42 INS32 INS27 INS8 INS42 INS42 INS27 INS8 INS32 INS42 INS42 INS27 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS34 INS25 INS21 INS32 INS34 INS21 INS32 INS42 INS32 INS32 INS34 INS21 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS27 INS8 INS32 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS32 INS34 INS21 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS45 DEL83 DEL83 DEL83 DEL83