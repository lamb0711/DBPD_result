o Changed array to atomicreference since arrays are not thread-safe

+import java.util.concurrent.atomic.AtomicReference;
+
-    private static final ThreadLocal<MavenSession[]> session = new InheritableThreadLocal<MavenSession[]>();
+    private static final ThreadLocal<AtomicReference<MavenSession>> session = new InheritableThreadLocal<AtomicReference<MavenSession>>();
-            MavenSession[] oldSession = DefaultLegacySupport.session.get();
+            AtomicReference<MavenSession> oldSession = DefaultLegacySupport.session.get();
-                oldSession[0] = null;
+                oldSession.set( null);
-            DefaultLegacySupport.session.set( new MavenSession[] { session } );
+            DefaultLegacySupport.session.set( new AtomicReference<MavenSession>( session ));
-        MavenSession[] currentSession = DefaultLegacySupport.session.get();
-        return currentSession != null ? currentSession[0] : null;
+        AtomicReference<MavenSession> currentSession = DefaultLegacySupport.session.get();
+        return currentSession != null ? currentSession.get() : null;

INS26 INS40 UPD74 INS74 INS43 MOV43 UPD74 INS74 INS42 INS74 INS43 MOV43 INS32 INS43 MOV43 INS74 INS42 INS42 INS42 INS42 INS43 MOV43 INS14 INS42 INS32 INS74 INS42 INS42 INS42 INS33 INS43 MOV43 INS42 DEL85 DEL5 DEL85 DEL5 DEL85 DEL5 DEL42 DEL34 DEL2 DEL33 DEL7 DEL85 DEL5 DEL42 DEL4 DEL3 DEL85 DEL5 DEL42 DEL34 DEL2