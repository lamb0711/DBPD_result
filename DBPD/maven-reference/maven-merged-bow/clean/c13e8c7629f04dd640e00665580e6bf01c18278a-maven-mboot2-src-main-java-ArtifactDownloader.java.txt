PR: MNG-74
remove maven.properties use everywhere except classworlds conf


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163024 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Properties;
-    private boolean ignoreErrors = true;
+    private boolean ignoreErrors = false;
-    public ArtifactDownloader( Properties properties )
+    public ArtifactDownloader( String localRepository, List remoteRepositories )
-        setRemoteRepo( properties.getProperty( "maven.repo.remote" ) );
+        setRemoteRepos( remoteRepositories );
-        String mavenRepoLocalProperty = properties.getProperty( "maven.repo.local" );
-        if ( mavenRepoLocalProperty == null )
+        if ( localRepository == null )
-            System.err.println( "maven.repo.local not specified in ~/maven.properties" );
+            System.err.println( "local repository not specified" );
-        mavenRepoLocal = new File( mavenRepoLocalProperty );
+        mavenRepoLocal = new File( localRepository );
-                System.err.println( "Cannot create the specified maven.repo.local: " + mavenRepoLocal );
+                System.err.println( "Cannot create the specified local repository: " + mavenRepoLocal );
-        System.out.println( "Using the following for your maven.repo.local: " + mavenRepoLocal );
+        System.out.println( "Using the following for your local repository: " + mavenRepoLocal );
+        System.out.println( "Using the following for your remote repositories: " + remoteRepos );
-            try
-            {
-                String file = (String) j.next();
+            String file = (String) j.next();
-                if ( !downloadedArtifacts.contains( file ) )
+            if ( !downloadedArtifacts.contains( file ) )
+            {
+                File destinationFile = new File( mavenRepoLocal, file );
+                // The directory structure for this project may
+                // not exists so create it if missing.
+                File directory = destinationFile.getParentFile();
+
+                if ( directory.exists() == false )
-                    File destinationFile = new File( mavenRepoLocal, file );
-                    // The directory structure for this project may
-                    // not exists so create it if missing.
-                    File directory = destinationFile.getParentFile();
-
-                    if ( directory.exists() == false )
-                    {
-                        directory.mkdirs();
-                    }
-
-                    if ( destinationFile.exists() && file.indexOf( SNAPSHOT_SIGNATURE ) < 0 )
-                    {
-                        continue;
-                    }
-
-                    getRemoteArtifact( file, destinationFile );
-
-                    if ( !destinationFile.exists() )
-                    {
-                        throw new Exception( "Failed to download " + file );
-                    }
-
-                    downloadedArtifacts.add( file );
+                    directory.mkdirs();
-            }
-            catch ( Exception e )
-            {
-                throw new Exception( e );
+
+                if ( destinationFile.exists() && file.indexOf( SNAPSHOT_SIGNATURE ) < 0 )
+                {
+                    continue;
+                }
+
+                getRemoteArtifact( file, destinationFile );
+
+                if ( !destinationFile.exists() )
+                {
+                    throw new Exception( "Failed to download " + file );
+                }
+
+                downloadedArtifacts.add( file );
-    private void setRemoteRepo( String repos )
+    private void setRemoteRepos( List repositories )
-        if ( repos == null )
+        if ( repositories != null )
-            remoteRepos.add( "http://www.ibiblio.org/maven/" );
-            return;
+            remoteRepos.addAll( repositories );
-        StringTokenizer st = new StringTokenizer( repos, "," );
-        while ( st.hasMoreTokens() )
+        if ( repositories.isEmpty() )
-            remoteRepos.add( st.nextToken().trim() );
+            remoteRepos.add( "http://www.ibiblio.org/maven/" );
-    private List getRemoteRepo()
+    private List getRemoteRepos()
-        for ( Iterator i = getRemoteRepo().iterator(); i.hasNext(); )
+        for ( Iterator i = getRemoteRepos().iterator(); i.hasNext(); )
+            else 
+            {
+                // THe JDK URL for file: should have one or no / instead of // for some reason
+                url = replace( url, "file://", "file:" );
+            }
+                log( "Downloading " + url );
+                log( "Artifact not found at [" + url + "]" );
-                log( "Error retrieving artifact from [" + url + "]: " );
+                log( "Error retrieving artifact from [" + url + "]: " + e );

INS44 MOV8 UPD42 UPD42 UPD9 MOV43 INS42 UPD43 UPD42 INS21 INS24 UPD43 UPD42 INS25 UPD42 INS32 MOV58 MOV32 MOV8 UPD42 INS27 INS8 INS32 UPD42 UPD42 MOV42 UPD42 INS40 UPD42 MOV42 INS27 INS42 INS33 MOV21 INS42 INS42 UPD42 INS45 INS42 UPD45 UPD42 INS8 UPD45 UPD42 UPD42 MOV42 INS21 INS21 UPD42 INS7 INS32 INS21 INS42 INS32 INS42 INS27 INS32 UPD45 INS42 INS42 INS45 INS45 INS45 INS42 INS42 INS27 INS45 INS42 INS45 INS42 DEL40 DEL26 DEL42 DEL45 DEL32 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL24 DEL8 DEL42 DEL32 DEL42 DEL32 DEL42 DEL33 DEL27 DEL41 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL45 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL8 DEL61