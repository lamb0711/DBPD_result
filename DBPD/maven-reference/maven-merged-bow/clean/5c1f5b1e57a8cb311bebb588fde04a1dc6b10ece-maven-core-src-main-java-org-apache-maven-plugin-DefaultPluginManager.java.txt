PR: MNG-52
change type of maven plugins to "maven-plugin" instead of plugin.
This should allow other products to have different plugin types, if necessary.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163562 13f79535-47bb-0310-9956-ffa450edef68

-    
+
-    
+
-    public void processPluginDescriptor( MavenPluginDescriptor mavenPluginDescriptor ) throws CycleDetectedException
+    public void processPluginDescriptor( MavenPluginDescriptor mavenPluginDescriptor )
+        throws CycleDetectedException
-    public void verifyPluginForGoal( String goalName, MavenSession session ) throws Exception
+    public void verifyPluginForGoal( String goalName, MavenSession session )
+        throws Exception
-    public void verifyPlugin( String groupId, String artifactId, MavenSession session ) throws Exception
+    public void verifyPlugin( String groupId, String artifactId, MavenSession session )
+        throws Exception
-                Artifact pluginArtifact = artifactFactory.createArtifact( "maven", artifactId, version, null, "plugin",
-                                                                          "jar", null );
+                // TODO: more hard coding here...
+                Artifact pluginArtifact = artifactFactory.createArtifact( "maven", artifactId, version, null,
+                                                                          "maven-plugin", "jar", null );
-    protected void addPlugin( Artifact pluginArtifact, MavenSession session ) throws Exception
+    protected void addPlugin( Artifact pluginArtifact, MavenSession session )
+        throws Exception
-    private void releaseComponents( MojoDescriptor goal, PluginExecutionRequest request ) throws Exception
+    private void releaseComponents( MojoDescriptor goal, PluginExecutionRequest request )
+        throws Exception
-                
-                getLogger().debug("Evaluated mojo parameter expression: \'" + expression + "\' to: " + value);
+
+                getLogger().debug( "Evaluated mojo parameter expression: \'" + expression + "\' to: " + value );
-                    value = pathTranslator.alignToBaseDirectory( (String)value,
+                    value = pathTranslator.alignToBaseDirectory( (String) value,
-        message.append( "The '" + parameter.getName() ).append( "' parameter is required for the execution of the " )
-               .append( mojo.getId() ).append( " mojo and cannot be null." );
+        message.append( "The '" + parameter.getName() ).append( "' parameter is required for the execution of the " ).append(
+            mojo.getId() ).append( " mojo and cannot be null." );
-    public void contextualize( Context context ) throws ContextException
+    public void contextualize( Context context )
+        throws ContextException
-        artifactFilter = new ExclusionSetFilter( new String[] {
-            "maven-core",
-            "maven-artifact",
-            "maven-model",
-            "maven-user-model",
-            "maven-monitor",
-            "maven-plugin",
-            "plexus-container-api",
-            "plexus-container-default",
-            "plexus-artifact-container",
-            "wagon-provider-api",
-            "classworlds" } );
+        artifactFilter = new ExclusionSetFilter( new String[]{"maven-core", "maven-artifact", "maven-model",
+                                                              "maven-user-model", "maven-monitor", "maven-plugin",
+                                                              "plexus-container-api", "plexus-container-default",
+                                                              "plexus-artifact-container", "wagon-provider-api",
+                                                              "classworlds"} );
-        
+
-        
-        ArtifactRepository pluginRepository = artifactRepositoryFactory.createArtifactRepository( pluginRepo, userModel );
-        
+
+        ArtifactRepository pluginRepository = artifactRepositoryFactory.createArtifactRepository( pluginRepo,
+                                                                                                  userModel );
+
-                                               MavenProjectBuilder mavenProjectBuilder )
+                                                MavenProjectBuilder mavenProjectBuilder )

UPD45