Resolving: MNG-1032, MNG-1033

o Improved the error diagnostics related to artifact resolution errors.

o Added xml-based documentation of supported plugin parameter expressions, including info about how to affect them ('-o' for example), how to specify them (<distributionManagement><repository/> for example in ${project.distributionManagementArtifactRepository}), and what the expressions are actually used for. This can also serve as a basis for creating documentation for plugin parameter expressions on the website.

o Improved the error diagnostics for plugin configuration errors.

o Added a couple of ITs in the 1000 series to test these two error conditions.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@292750 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.usability.plugin.ExpressionDocumenter;
+import org.apache.maven.usability.plugin.ExpressionDocumentationException;
+import org.apache.maven.usability.plugin.ExpressionDocumentation;
+import java.io.PrintWriter;
+import java.io.StringWriter;
+import java.util.Map;
+        exprs.add( "project" );
+        exprs.add( "session" );
+        exprs.add( "plugin" );
-        return error instanceof PluginConfigurationException;
+        return DiagnosisUtils.containsInCausality(error, PluginConfigurationException.class );
-        if ( error instanceof PluginParameterException )
+        PluginConfigurationException pce = (PluginConfigurationException) DiagnosisUtils.getFromCausality(error, PluginConfigurationException.class );
+        
+        if ( pce instanceof PluginParameterException )
-            PluginParameterException exception = (PluginParameterException) error;
+            PluginParameterException exception = (PluginParameterException) pce;
-        else if( DiagnosisUtils.containsInCausality(error, ComponentConfigurationException.class ) )
+        else if( DiagnosisUtils.containsInCausality(pce, ComponentConfigurationException.class ) )
-            ComponentConfigurationException cce = (ComponentConfigurationException) DiagnosisUtils.getFromCausality( error, ComponentConfigurationException.class );
+            ComponentConfigurationException cce = (ComponentConfigurationException) DiagnosisUtils.getFromCausality( pce, ComponentConfigurationException.class );
-            return error.getMessage();
+            return pce.getMessage();
-
+            
-            messageBuffer.append( "specify configuration for <" + param.getName() + ">VALUE</" + param.getName() + ">" );
+            messageBuffer.append( "inside the definition for plugin: \'" + mojo.getPluginDescriptor().getArtifactId() + "\'specify the following:\n\n<configuration>\n  ...\n  <" + param.getName() + ">VALUE</" + param.getName() + ">\n</configuration>" );
-                messageBuffer.append( " (aliased as: <" + alias + ">VALUE</" + alias + ">)" );
+                messageBuffer.append( "\n\n-OR-\n\n<configuration>\n  ...\n  <" + alias + ">VALUE</" + alias + ">\n</configuration>\n" );
-
-            messageBuffer.append( "\n    inside the <configuration/> section for " +
-                                  mojo.getPluginDescriptor().getArtifactId() );
-                expressionMessageBuffer.append( ", or\n    " );
+                expressionMessageBuffer.append( "\n\n-OR-\n\n" );
-                if ( "project".equals( firstPart ) && expressionParts.hasMoreTokens() )
+                if ( expressionParts.hasMoreTokens() && ( "project".equals( firstPart ) || "settings".equals( firstPart ) ) )
-                    appendProjectSection( expressionParts, expressionMessageBuffer );
-                }
-                else if ( "reports".equals( firstPart ) )
-                {
-                    expressionMessageBuffer.append(
-                        "make sure the <reports/> section of the pom.xml contains valid report names\n" );
+                    addParameterConfigDocumentation( firstPart, exprMatcher.group( 0 ), subExpression, expressionMessageBuffer );
-                    expressionMessageBuffer.append( "Please provide the system property: " ).append( subExpression ).append(
-                        "\n    (specified as \'-D" + subExpression + "=VALUE\' on the command line)\n" );
+                    expressionMessageBuffer.append( "on the command line, specify: \'-D" ).append( subExpression ).append("=VALUE\'" );
-    private void appendProjectSection( StringTokenizer expressionParts, StringBuffer messageBuffer )
+    private void addParameterConfigDocumentation( String firstPart, String wholeExpression, String subExpression, StringBuffer expressionMessageBuffer )
-        messageBuffer.append( "check that the following section of the pom.xml is present and correct:\n\n" );
-
-        Stack nestedParts = new Stack();
-
-        String indentation = "      ";
-
-        messageBuffer.append( indentation ).append( "<project>\n" );
-
-        nestedParts.push( "project" );
-
-        indentation += "  ";
-
-        while ( expressionParts.hasMoreTokens() )
+        try
-            String nextPart = expressionParts.nextToken();
+            Map expressionDoco = ExpressionDocumenter.load();
-            messageBuffer.append( indentation ).append( "<" ).append( nextPart );
+            ExpressionDocumentation info = (ExpressionDocumentation) expressionDoco.get( subExpression );
-            if ( expressionParts.hasMoreTokens() )
+            if ( info != null )
-                messageBuffer.append( ">\n" );
+                expressionMessageBuffer.append( "check that the following section of " );
+                if ( "project".equals( firstPart ) )
+                {
+                    expressionMessageBuffer.append( "the pom.xml " );
+                }
+                else if ( "settings".equals( firstPart ) )
+                {
+                    expressionMessageBuffer.append( "your ~/.m2/settings.xml file " );
+                }
-                indentation += "  ";
-
-                nestedParts.push( nextPart );
+                expressionMessageBuffer.append( "is present and correct:\n\n" );
+                
+                String message = info.getOrigin();
+                
+                if ( message == null )
+                {
+                    message = info.getUsage();
+                }
+                
+                expressionMessageBuffer.append( message );
+                
+                String addendum = info.getAddendum();
+                
+                if ( addendum != null )
+                {
+                    expressionMessageBuffer.append("\n\n").append( addendum );
+                }
-                messageBuffer.append( "/>\n" );
-
-                indentation = indentation.substring( 2 );
+                expressionMessageBuffer.append( "ensure that the expression: \'"
+                    + wholeExpression + "\' is satisfied" );
+
-
-        if ( !nestedParts.isEmpty() )
+        catch ( ExpressionDocumentationException e )
-            while ( nestedParts.size() > 0 )
-            {
-                String prevPart = (String) nestedParts.pop();
+            expressionMessageBuffer.append( "\n\nERROR!! Failed to load expression documentation!" );
-                messageBuffer.append( indentation ).append( "</" ).append( prevPart ).append( ">\n" );
+            StringWriter sWriter = new StringWriter();
+            PrintWriter pWriter = new PrintWriter( sWriter );
-                indentation = indentation.substring( 2 );
-            }
+            e.printStackTrace( pWriter );
+
+            expressionMessageBuffer.append( "\n\nException:\n\n" ).append( sWriter.toString() );

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 UPD42 INS44 INS44 INS21 INS21 INS21 INS60 MOV43 INS42 UPD43 UPD42 MOV43 INS42 UPD42 INS54 INS32 INS32 INS32 INS32 INS43 INS59 UPD42 INS8 INS12 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS57 INS42 INS42 INS11 UPD42 MOV32 INS60 MOV60 INS25 INS44 INS8 MOV43 INS43 INS32 MOV43 UPD42 UPD42 INS43 INS59 UPD43 INS27 INS8 INS8 INS43 INS42 MOV21 INS60 INS60 INS21 MOV21 INS42 INS42 INS42 INS42 INS57 MOV43 MOV32 MOV45 INS42 INS42 INS32 UPD42 UPD42 INS11 INS42 INS33 MOV21 INS25 INS21 MOV60 INS25 INS21 INS60 INS25 MOV21 INS42 INS43 INS59 INS43 INS59 INS32 INS43 MOV43 UPD42 UPD42 INS45 MOV32 UPD45 UPD45 INS27 INS8 MOV25 UPD42 MOV42 UPD42 MOV42 INS43 INS32 INS32 INS8 INS25 INS32 MOV43 INS27 INS8 INS32 MOV43 INS59 INS27 INS8 INS32 UPD42 UPD45 INS42 INS42 INS14 INS42 INS42 INS14 INS42 UPD42 MOV42 UPD42 MOV42 MOV32 MOV42 INS32 INS42 MOV43 MOV32 UPD45 MOV32 INS36 INS21 UPD42 MOV42 INS42 INS42 INS42 UPD42 MOV42 MOV42 UPD45 INS45 INS42 INS42 MOV21 INS32 INS8 UPD42 MOV42 UPD42 MOV42 INS45 UPD42 INS42 INS33 INS21 INS42 MOV42 UPD42 MOV42 INS42 INS32 INS42 INS33 MOV21 INS42 INS42 INS27 INS43 INS43 INS42 UPD42 MOV42 MOV42 UPD45 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 UPD45 UPD45 MOV42 UPD42 MOV42 UPD27 MOV27 INS32 INS45 INS42 INS42 MOV21 UPD42 UPD42 INS7 UPD42 MOV42 UPD42 MOV42 INS32 INS45 INS42 INS45 INS42 INS42 UPD42 MOV42 MOV42 INS32 INS42 INS42 UPD42 UPD42 UPD45 INS32 INS42 INS32 INS32 INS42 INS42 INS45 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 INS34 INS45 INS42 INS42 INS45 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD45 MOV45 UPD45 DEL42 DEL62 DEL42 DEL42 DEL45 DEL27 DEL32 DEL21 DEL45 DEL42 DEL45 DEL27 DEL42 DEL32 DEL21 DEL8 DEL45 DEL32 DEL45 DEL32 DEL21 DEL8 DEL25 DEL43 DEL14 DEL42 DEL32 DEL42 DEL42 DEL45 DEL7 DEL32 DEL42 DEL45 DEL7 DEL42 DEL32 DEL42 DEL32 DEL45 DEL45 DEL32 DEL21 DEL42 DEL45 DEL59 DEL60 DEL42 DEL42 DEL32 DEL45 DEL32 DEL32 DEL21 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL34 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL61 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL32 DEL34 DEL27 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL34 DEL32 DEL7 DEL21 DEL8 DEL61 DEL8 DEL25