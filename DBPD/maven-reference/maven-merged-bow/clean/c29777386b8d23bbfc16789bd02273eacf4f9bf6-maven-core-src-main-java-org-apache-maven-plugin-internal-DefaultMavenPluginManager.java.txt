[MNG-6867] extract methods, apply SLA
-            ExtensionRealmCache.CacheRecord extensionRecord;
-            try
-            {
-                RepositorySystemSession repositorySession = session.getRepositorySession();
-                extensionRecord = setupExtensionsRealm( project, plugin, repositorySession );
-            }
-            catch ( PluginManagerException e )
-            {
-                // extensions realm is expected to be fully setup at this point
-                // any exception means a problem in maven code, not a user error
-                throw new IllegalStateException( e );
-            }
-
-            ClassRealm pluginRealm = extensionRecord.getRealm();
-            List<Artifact> pluginArtifacts = extensionRecord.getArtifacts();
-
-            for ( ComponentDescriptor<?> componentDescriptor : pluginDescriptor.getComponents() )
-            {
-                componentDescriptor.setRealm( pluginRealm );
-            }
-
-            pluginDescriptor.setClassRealm( pluginRealm );
-            pluginDescriptor.setArtifacts( pluginArtifacts );
+            setupPluginDescriptor( pluginDescriptor, session );
-            PluginRealmCache.Key cacheKey = pluginRealmCache.createKey( plugin, parent, foreignImports, filter,
-                                                                        project.getRemotePluginRepositories(),
-                                                                        session.getRepositorySession() );
+            PluginRealmCache.Key cacheKey =
+                pluginRealmCache.createKey( plugin, parent, foreignImports, filter,
+                                            project.getRemotePluginRepositories(), session.getRepositorySession() );
+    private void setupPluginDescriptor( PluginDescriptor pluginDescriptor, MavenSession session )
+    {
+        setupPluginDescriptor( pluginDescriptor,
+                               setupExtensionsRealmInternal( session.getCurrentProject(), pluginDescriptor.getPlugin(),
+                                                             session.getRepositorySession() ) );
+    }
+
+    private void setupPluginDescriptor( PluginDescriptor pluginDescriptor,
+                                        ExtensionRealmCache.CacheRecord extensionRecord )
+    {
+        setupComponentDescriptors( extensionRecord, pluginDescriptor.getComponents() );
+        pluginDescriptor.setClassRealm( extensionRecord.getRealm() );
+        pluginDescriptor.setArtifacts( extensionRecord.getArtifacts() );
+    }
+
+    private void setupComponentDescriptors( ExtensionRealmCache.CacheRecord extensionRecord,
+                                            List<ComponentDescriptor<?>> components )
+    {
+        components.stream().forEach( descriptor -> descriptor.setRealm( extensionRecord.getRealm() ) );
+    }
+
+    /**
+     * For internal usage. It is assumed that the prerequisites are met so a setup of the extensions realm can be
+     * processed without any error. Any exception thrown indicates a programming error, not a user error!
+     */
+    private ExtensionRealmCache.CacheRecord setupExtensionsRealmInternal( MavenProject project, Plugin plugin,
+                                                                          RepositorySystemSession repositorySystemSession )
+    {
+        try
+        {
+            return setupExtensionsRealm( project, plugin, repositorySystemSession );
+        }
+        catch ( PluginManagerException e )
+        {
+            throw new IllegalStateException( e );
+        }
+    }
+

INS31 INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 MOV44 INS8 INS29 INS83 INS43 INS42 INS44 INS44 INS44 INS8 INS43 INS42 INS43 INS42 INS21 INS43 INS42 MOV43 INS42 INS21 INS21 INS21 INS43 INS42 INS74 UPD42 INS21 INS65 INS40 INS43 INS42 INS43 INS42 MOV43 INS42 MOV54 INS42 INS42 INS32 INS42 INS32 INS32 INS32 INS40 MOV43 MOV74 INS32 INS66 INS66 INS42 INS42 INS42 INS42 INS32 INS42 INS42 MOV32 INS42 INS42 MOV32 INS42 INS42 MOV32 INS32 INS42 INS86 INS41 INS42 INS32 INS32 MOV32 INS42 INS42 INS59 INS32 INS32 UPD42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 MOV42 MOV42 MOV42 UPD42 MOV42 INS42 INS42 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL74 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL59 DEL60 DEL42 DEL32 DEL7 DEL21