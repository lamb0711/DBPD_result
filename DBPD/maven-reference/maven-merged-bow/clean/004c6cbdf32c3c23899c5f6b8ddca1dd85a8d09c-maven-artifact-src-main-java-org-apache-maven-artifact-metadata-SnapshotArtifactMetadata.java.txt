snapshot resolution. commented out due to issues surrounding pom/artifact pairing


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163692 13f79535-47bb-0310-9956-ffa450edef68

+    implements Comparable
+    public static SnapshotArtifactMetadata readLocalSnapshotMetadata( Artifact artifact,
+                                                                      ArtifactRepository localRepository )
+        throws ArtifactPathFormatException, IOException
+    {
+        SnapshotArtifactMetadata metadata = new SnapshotArtifactMetadata( artifact, SNAPSHOT_VERSION_LOCAL_FILE );
+        File f = metadata.getLocalRepositoryLocation( localRepository );
+        if ( f.exists() )
+        {
+            metadata.readFromFile( f );
+        }
+        return metadata;
+    }
+
-            String path = new File( localRepository.getBasedir(), localRepository.pathOfMetadata( this ) ).getPath();
+            String path = getLocalRepositoryLocation( localRepository ).getPath();
+    private File getLocalRepositoryLocation( ArtifactRepository localRepository )
+        throws ArtifactPathFormatException
+    {
+        return new File( localRepository.getBasedir(), localRepository.pathOfMetadata( this ) );
+    }
+
-            String version = FileUtils.fileRead( destination );
-
-            int index = version.lastIndexOf( "-" );
-            timestamp = version.substring( 0, index );
-            buildNumber = Integer.valueOf( version.substring( index + 1 ) ).intValue();
-            index = version.indexOf( "-" );
-            if ( index >= 0 )
-            {
-                // ignore starting version part, will be prepended later
-                timestamp = timestamp.substring( index + 1 );
-            }
+            readFromFile( destination );
+    private void readFromFile( File destination )
+        throws IOException
+    {
+        String version = FileUtils.fileRead( destination );
+
+        int index = version.lastIndexOf( "-" );
+        timestamp = version.substring( 0, index );
+        buildNumber = Integer.valueOf( version.substring( index + 1 ) ).intValue();
+        index = version.indexOf( "-" );
+        if ( index >= 0 )
+        {
+            // ignore starting version part, will be prepended later
+            timestamp = timestamp.substring( index + 1 );
+        }
+    }
+
+
+
+    public int compareTo( Object o )
+    {
+        SnapshotArtifactMetadata metadata = (SnapshotArtifactMetadata) o;
+
+        if ( buildNumber > metadata.buildNumber )
+        {
+            return 1;
+        }
+        else if ( timestamp == null )
+        {
+            return -1;
+        }
+        else
+        {
+            return timestamp.compareTo( metadata.timestamp );
+        }
+    }

INS43 INS31 INS31 INS31 INS31 INS42 INS83 INS83 INS43 INS42 INS44 INS44 INS43 INS43 INS8 INS83 INS43 INS42 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS43 MOV8 INS83 INS39 INS42 INS44 INS8 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS60 INS60 INS25 INS41 INS42 INS43 INS42 INS42 INS41 INS43 INS42 INS42 INS43 INS42 INS60 INS25 INS42 INS42 INS43 INS59 INS43 INS59 INS32 INS8 INS42 INS42 MOV14 INS8 INS42 INS42 INS43 INS59 INS27 INS8 INS25 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS21 MOV60 MOV21 MOV54 INS21 INS42 INS42 INS11 INS42 INS40 INS41 INS27 INS8 INS8 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS43 INS42 INS34 INS42 INS33 INS41 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS38 INS32 INS32 INS34 INS42 INS42 INS40 INS42 INS42