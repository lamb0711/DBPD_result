Update MBoot compiler relative to changes in plexus-compiler.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163914 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.ArrayList;
+import java.util.HashSet;
- *
- *
- * @author <a href="mailto:jason@maven.org">Jason van Zyl</a>
- * @author <a href="mailto:michal.maczka@dimatics.com">Michal Maczka</a>
- *
+ * @author <a href="mailto:jason@maven.org">Jason van Zyl </a>
+ * @author <a href="mailto:michal.maczka@dimatics.com">Michal Maczka </a>
+    
+    /**
+     * @deprecated Use getPathString(..) instead.
+     */
+    public String getClasspathString( List pathElements ) throws Exception
+    {
+        return getPathString( pathElements );
+    }
-    public String getClasspathString( List classpathElements )
+    public String getPathString( List pathElements )
-        for ( Iterator it = classpathElements.iterator(); it.hasNext(); )
+        for ( Iterator it = pathElements.iterator(); it.hasNext(); )
-            
+
-        List sources = new ArrayList();
+        Set sources = new HashSet();
-        for ( Iterator it = config.getSourceLocations().iterator(); it.hasNext(); )
+        Set sourceFiles = config.getSourceFiles();
+        if ( sourceFiles != null && !sourceFiles.isEmpty() )
-            String sourceLocation = (String) it.next();
-            
-            DirectoryScanner scanner = new DirectoryScanner();
-
-            scanner.setBasedir( sourceLocation );
-
-            Set includes = config.getIncludes();
-            if(includes != null && !includes.isEmpty()) {
-                String[] inclStrs = (String[])includes.toArray(new String[includes.size()]);
-                scanner.setIncludes( inclStrs );
-            }
-            else {
-                scanner.setIncludes(new String[] {"**/*.java"});
-            }
-
-            Set excludes = config.getIncludes();
-            if(excludes != null && !excludes.isEmpty()) {
-                String[] exclStrs = (String[])excludes.toArray(new String[excludes.size()]);
-                scanner.setIncludes( exclStrs );
-            }
-
-            scanner.scan();
-
-            String[] sourceDirectorySources = scanner.getIncludedFiles();
-
-            for ( int j = 0; j < sourceDirectorySources.length; j++ )
+            for ( Iterator it = sourceFiles.iterator(); it.hasNext(); )
-                File f =  new File( sourceLocation, sourceDirectorySources[j] );
+                File sourceFile = (File) it.next();
+                sources.add( sourceFile.getAbsolutePath() );
+            }
+        }
+        else
+        {
+            for ( Iterator it = config.getSourceLocations().iterator(); it.hasNext(); )
+            {
+                String sourceLocation = (String) it.next();
-                sources.add( f.getPath() );
+                DirectoryScanner scanner = new DirectoryScanner();
+
+                scanner.setBasedir( sourceLocation );
+
+                Set includes = config.getIncludes();
+                if ( includes != null && !includes.isEmpty() )
+                {
+                    String[] inclStrs = (String[]) includes.toArray( new String[includes.size()] );
+                    scanner.setIncludes( inclStrs );
+                }
+                else
+                {
+                    scanner.setIncludes( new String[] { "**/*.java" } );
+                }
+
+                Set excludes = config.getExcludes();
+                if ( excludes != null && !excludes.isEmpty() )
+                {
+                    String[] exclStrs = (String[]) excludes.toArray( new String[excludes.size()] );
+                    scanner.setIncludes( exclStrs );
+                }
+
+                scanner.scan();
+
+                String[] sourceDirectorySources = scanner.getIncludedFiles();
+
+                for ( int j = 0; j < sourceDirectorySources.length; j++ )
+                {
+                    File f = new File( sourceLocation, sourceDirectorySources[j] );
+
+                    sources.add( f.getPath() );
+                }
-        String[] sourceArray = new String[sources.size()];
+        String[] result = null;
-        return (String[]) sources.toArray( sourceArray );
+        if ( sources.isEmpty() )
+        {
+            result = new String[0];
+        }
+        else
+        {
+            result = (String[]) sources.toArray( new String[sources.size()] );
+        }
+
+        return result;
-            String prefix =
-                new File( sourceDir ).getCanonicalPath().replace( '\\', '/' );
+            String prefix = new File( sourceDir ).getCanonicalPath().replace( '\\', '/' );
-}
+}

UPD40 INS31 INS29 INS83 INS43 INS42 MOV44 INS43 INS8 UPD42 INS44 INS8 UPD66 UPD66 INS65 INS42 UPD42 INS42 INS41 MOV43 INS42 INS60 INS60 INS25 INS60 INS25 INS41 INS66 INS32 INS43 INS59 INS43 INS59 INS27 INS8 MOV8 MOV5 INS59 INS32 INS8 INS8 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS27 INS38 INS24 INS42 INS33 INS42 INS42 INS21 INS21 INS43 INS42 INS42 INS42 INS33 INS32 INS58 INS32 INS8 INS7 INS7 UPD42 INS42 INS42 INS42 INS43 INS59 INS42 INS42 INS60 INS21 INS42 INS3 INS42 INS11 INS42 INS42 INS32 INS43 INS59 INS32 INS5 INS34 MOV5 INS32 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS43 INS85 INS42 INS42 MOV3 INS43 INS32 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL11 DEL41