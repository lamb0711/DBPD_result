[MNG-2096] allow <configuration> with <execution> in a lifecycle overlay, like a plugin allows

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@379491 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.util.StringUtils;
-import org.codehaus.plexus.util.StringUtils;
-    
+
-    private void executeTaskSegments( List taskSegments,
-                                      ReactorManager rm,
-                                      MavenSession session,
-                                      MavenProject rootProject,
-                                      EventDispatcher dispatcher )
+    private void executeTaskSegments( List taskSegments, ReactorManager rm, MavenSession session,
+                                      MavenProject rootProject, EventDispatcher dispatcher )
-                        executeGoalAndHandleFailures( task, session, rootProject, dispatcher, event, rm, buildStartTime,target );
+                        executeGoalAndHandleFailures( task, session, rootProject, dispatcher, event, rm, buildStartTime,
+                                                      target );
-                    getLogger().info("This project has been banned from further executions due to previous failures." );
+                    getLogger().info(
+                        "This project has been banned from further executions due to previous failures." );
-                        getLogger().info( "This project has been banned from further executions due to previous failures." );
+                        getLogger().info(
+                            "This project has been banned from further executions due to previous failures." );
-    private void executeGoalAndHandleFailures( String task,
-                                               MavenSession session,
-                                               MavenProject project,
-                                               EventDispatcher dispatcher,
-                                               String event,
-                                               ReactorManager rm,
-                                               long buildStartTime,
-                                               String target )
+    private void executeGoalAndHandleFailures( String task, MavenSession session, MavenProject project,
+                                               EventDispatcher dispatcher, String event, ReactorManager rm,
+                                               long buildStartTime, String target )
+                            Xpp3Dom configuration = (Xpp3Dom) exec.getConfiguration();
+                            if ( phase.getConfiguration() != null )
+                            {
+                                configuration = Xpp3Dom.mergeXpp3Dom( new Xpp3Dom( (Xpp3Dom) phase.getConfiguration() ),
+                                                                      configuration );
+                            }
+
-                            MojoExecution mojoExecution = new MojoExecution( desc, (Xpp3Dom) exec.getConfiguration() );
+                            MojoExecution mojoExecution = new MojoExecution( desc, configuration );
+
+                    if ( phase.getConfiguration() != null )
+                    {
+                        // Merge in general configuration for a phase.
+                        // TODO: this is all kind of backwards from the POMM. Let's align it all under 2.1.
+                        //   We should create a new lifecycle executor for modelVersion >5.0.0
+                        for ( Iterator j = lifecycleMappings.values().iterator(); j.hasNext(); )
+                        {
+                            List tasks = (List) j.next();
+
+                            for ( Iterator k = tasks.iterator(); k.hasNext(); )
+                            {
+                                MojoExecution exec = (MojoExecution) k.next();
+
+                                Xpp3Dom configuration = Xpp3Dom.mergeXpp3Dom(
+                                    new Xpp3Dom( (Xpp3Dom) phase.getConfiguration() ), exec.getConfiguration() );
+
+                                exec.setConfiguration( configuration );
+                            }
+                        }
+                    }
+
-        
+
-        
+
-                    MojoDescriptor mojoDescriptor = getMojoDescriptor( goal, session, project, selectedPhase, false, optionalMojos.contains( goal ) );
-                    
+                    MojoDescriptor mojoDescriptor = getMojoDescriptor( goal, session, project, selectedPhase, false,
+                                                                       optionalMojos.contains( goal ) );
+
-        
+
-                getLogger().debug( "Error looking up lifecycle mapping to retrieve optional mojos. Lifecycle ID: " + lifecycle.getId() + ". Error: " + e.getMessage(), e );
+                getLogger().debug( "Error looking up lifecycle mapping to retrieve optional mojos. Lifecycle ID: " +
+                    lifecycle.getId() + ". Error: " + e.getMessage(), e );
-        
+
-                    String msg = "Mapped-prefix lookup of mojos are only supported from direct invocation. "
-                        + "Please use specification of the form groupId:artifactId[:version]:goal instead. "
-                        + "(Offending mojo: \'" + task + "\', invoked via: \'" + invokedVia + "\')";
+                    String msg = "Mapped-prefix lookup of mojos are only supported from direct invocation. " +
+                        "Please use specification of the form groupId:artifactId[:version]:goal instead. " +
+                        "(Offending mojo: \'" + task + "\', invoked via: \'" + invokedVia + "\')";
-                String message = "Invalid task '" + task + "': you must specify a valid lifecycle phase, or"
-                    + " a goal in the format plugin:goal or pluginGroupId:pluginArtifactId:pluginVersion:goal";
+                String message = "Invalid task '" + task + "': you must specify a valid lifecycle phase, or" +
+                    " a goal in the format plugin:goal or pluginGroupId:pluginArtifactId:pluginVersion:goal";
-        
+

MOV26 INS25 INS27 INS8 INS32 INS33 INS24 MOV60 INS42 INS42 INS58 INS32 INS8 INS25 INS60 INS43 INS59 INS42 INS42 INS60 INS24 INS43 INS27 INS8 MOV43 INS59 INS42 INS42 INS32 INS43 INS59 INS58 INS32 INS8 INS42 UPD42 MOV11 INS32 INS33 INS21 INS42 INS14 INS32 INS42 INS42 INS42 INS11 INS43 INS59 INS42 INS42 INS60 INS60 INS21 INS42 INS42 INS7 MOV43 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS43 INS32 INS42 INS42 INS14 INS32 INS43 INS11 INS42 INS42 INS42 INS43 INS11 INS42 INS42 INS42 INS43 INS32 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL14