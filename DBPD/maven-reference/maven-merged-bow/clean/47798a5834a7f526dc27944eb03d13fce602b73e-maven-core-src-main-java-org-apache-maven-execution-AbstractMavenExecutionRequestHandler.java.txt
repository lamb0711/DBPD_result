*** empty log message ***


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163260 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Date;
+
+
+    // ----------------------------------------------------------------------
+    // Reporting / Logging
+    // ----------------------------------------------------------------------
+
+    protected void logError( MavenExecutionResponse r )
+    {
+        line();
+
+        getLogger().error( "BUILD ERROR" );
+
+        line();
+
+        getLogger().error( "Cause: ", r.getException() );
+
+        line();
+
+        stats( r.getStart(), r.getFinish() );
+
+        line();
+    }
+
+    protected void logFailure( MavenExecutionResponse r )
+    {
+        line();
+
+        getLogger().info( "BUILD FAILURE" );
+
+        line();
+
+        getLogger().info( "Reason: " + r.getFailureResponse().shortMessage() );
+
+        line();
+
+        getLogger().info( r.getFailureResponse().longMessage() );
+
+        line();
+
+        stats( r.getStart(), r.getFinish() );
+
+        line();
+    }
+
+    protected void logSuccess( MavenExecutionResponse r )
+    {
+        line();
+
+        getLogger().info( "BUILD SUCCESSFUL" );
+
+        line();
+
+        stats( r.getStart(), r.getFinish() );
+
+        line();
+    }
+
+    protected void stats( Date start, Date finish )
+    {
+        long time = finish.getTime() - start.getTime();
+
+        getLogger().info( "Total time: " + formatTime( time ) );
+
+        getLogger().info( "Finished at: " + finish );
+
+        final long mb = 1024 * 1024;
+
+        System.gc();
+
+        Runtime r = Runtime.getRuntime();
+
+        getLogger().info( "Final Memory: " + ( ( r.totalMemory() - r.freeMemory() ) / mb ) + "M/" + ( r.totalMemory() / mb ) + "M" );
+    }
+
+    protected void line()
+    {
+        getLogger().info( "----------------------------------------------------------------------------" );
+    }
+
+    protected static String formatTime( long ms )
+    {
+        long secs = ms / 1000;
+
+        long min = secs / 60;
+
+        secs = secs % 60;
+
+        if ( min > 0 )
+        {
+            return min + " minutes " + secs + " seconds";
+        }
+        else
+        {
+            return secs + " seconds";
+        }
+    }

INS26 INS40 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS43 INS42 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS43 INS42 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS43 INS42 INS21 INS21 INS21 INS21 INS21 INS43 INS42 INS43 INS42 INS60 INS21 INS21 INS60 INS21 INS60 INS21 INS21 INS42 INS39 INS42 INS60 INS60 INS21 INS25 INS42 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS39 INS59 INS32 INS32 INS83 INS39 INS59 INS32 INS43 INS59 INS32 INS32 INS39 INS59 INS39 INS59 INS7 INS27 INS8 INS8 INS42 INS32 INS42 INS45 INS42 INS32 INS42 INS45 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS45 INS42 INS32 INS42 INS27 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS32 INS32 INS42 INS42 INS27 INS32 INS42 INS27 INS32 INS42 INS27 INS42 INS27 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS27 INS32 INS42 INS45 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS34 INS41 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS45 INS32 INS42 INS45 INS42 INS34 INS34 INS42 INS42 INS42 INS45 INS36 INS45 INS36 INS45 INS42 INS42 INS34 INS42 INS34 INS42 INS34 INS27 INS27 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS27 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS42 INS36 INS42 INS32 INS42 INS27 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42