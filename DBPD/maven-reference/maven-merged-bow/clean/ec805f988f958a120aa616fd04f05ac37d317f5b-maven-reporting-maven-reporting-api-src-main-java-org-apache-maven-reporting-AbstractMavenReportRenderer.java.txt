PR: MNG-411
Submitted By: Vincent Siveton
Reviewed By:  Brett Porter
clean up the mailing list report


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@179174 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.commons.validator.EmailValidator;
+import org.apache.commons.validator.UrlValidator;
+ * @author <a href="mailto:vincent.siveton@gmail.com">Vincent Siveton</a>
+    /**
+     * Create a cell with a potential link.
+     *
+     * @param text the text
+     * @param href the href
+     */
+    protected void tableCellWithLink( String text, String href )
+    {
+        sink.tableCell();
+
+        if ( text != null )
+        {
+            if ( href != null )
+            {
+                String[] schemes = {"http", "https"};
+                UrlValidator urlValidator = new UrlValidator( schemes );
+
+                if ( EmailValidator.getInstance().isValid( href ) )
+                {
+                    link( "mailto:" + href, text );
+                }
+                else if ( href.toLowerCase().startsWith( "mailto:" ) )
+                {
+                    link( href, text );
+                }
+                else if ( urlValidator.isValid( href ) )
+                {
+                    link( href, text );
+                }
+                else
+                {
+                    sink.text( text );
+                }
+            }
+            else
+            {
+                sink.text( text );
+            }
+        }
+        else
+        {
+            sink.nonBreakingSpace();
+        }
+
+        sink.tableCell_();
+    }
+
+    /**
+     * Create a new row : each cell could have a link.
+     * <br>
+     * The arrays should have the same size.
+     *
+     * @param texts an array of text
+     * @param hrefs an array of href
+     */
+    protected void tableRowWithLink( String[] texts, String[] hrefs )
+    {
+        if ( hrefs.length != texts.length )
+        {
+            throw new IllegalArgumentException( "The arrays should have the same size" );
+        }
+
+        sink.tableRow();
+
+        for ( int i = 0; i < texts.length; i++ )
+        {
+            tableCellWithLink( texts[i], hrefs[i] );
+        }
+
+        sink.tableRow_();
+    }
+
-    public abstract String getTitle();
-
-    protected abstract void renderBody();
-
+
+    protected void link( String href, String name )
+    {
+        sink.link( href );
+
+        sink.text( name );
+
+        sink.link_();
+    }
+
+    public abstract String getTitle();
+
+    protected abstract void renderBody();

INS26 INS26 MOV31 MOV31 INS40 INS40 INS31 INS31 INS31 INS65 INS29 INS83 INS39 INS42 INS44 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS66 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS21 INS25 INS21 INS65 INS65 INS65 INS5 INS42 INS5 INS42 INS25 INS21 INS24 INS21 INS43 INS42 INS43 INS42 INS21 INS21 INS21 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS32 INS27 INS8 INS8 INS32 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS43 INS85 INS43 INS85 INS27 INS8 INS32 INS58 INS27 INS37 INS8 INS32 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS33 INS25 INS21 INS42 INS42 INS42 INS42 INS40 INS40 INS53 INS42 INS42 INS39 INS59 INS42 INS40 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS8 INS8 INS32 INS14 INS42 INS34 INS32 INS42 INS33 INS60 INS60 INS25 INS21 INS42 INS42 INS43 INS45 INS42 INS2 INS2 INS5 INS59 INS43 INS59 INS32 INS8 INS25 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS42 INS4 INS42 INS42 INS14 INS32 INS42 INS42 INS21 INS32 INS8 INS25 INS42 INS42 INS42 INS42 INS45 INS45 INS43 INS42 INS42 INS42 INS32 INS32 INS42 INS45 INS21 INS32 INS8 INS8 INS42 INS42 INS27 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS21 INS21 INS45 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42