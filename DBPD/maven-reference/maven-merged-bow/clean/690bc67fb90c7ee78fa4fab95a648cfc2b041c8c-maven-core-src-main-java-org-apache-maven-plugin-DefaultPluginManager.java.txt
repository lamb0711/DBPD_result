Added marmalade support back in...it's currently still using the libraries-shovelled-into-core method, but it now uses the new mojo mechanism that uses plexus ComponentConfigurators...had to make the lookup for configurators dynamic for the DefaultPluginManager, too.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168064 13f79535-47bb-0310-9956-ffa450edef68

-    protected ComponentConfigurator configurator;
-
-            plugin = (Mojo) container.lookup( Mojo.ROLE, goalName );
+            plugin = (Mojo) container.lookup( Mojo.ROLE, mojoDescriptor.getRoleHint() );
-                    populatePluginFields( plugin, pomConfiguration, expressionEvaluator );
+                    populatePluginFields( plugin, mojoDescriptor, mergedConfiguration, expressionEvaluator );
-    private void populatePluginFields( Mojo plugin, PlexusConfiguration configuration,
-                                       ExpressionEvaluator expressionEvaluator )
+    private void populatePluginFields( Mojo plugin, MojoDescriptor mojoDescriptor, PlexusConfiguration configuration,
+                                      ExpressionEvaluator expressionEvaluator )
+        ComponentConfigurator configurator = null;
+
+            String configuratorId = mojoDescriptor.getComponentConfigurator();
+
+            if ( StringUtils.isNotEmpty( configuratorId ) )
+            {
+                configurator = (ComponentConfigurator) container.lookup( ComponentConfigurator.ROLE, configuratorId );
+            }
+            else
+            {
+                configurator = (ComponentConfigurator) container.lookup( ComponentConfigurator.ROLE );
+            }
+
+
+        catch ( ComponentLookupException e )
+        {
+            throw new PluginConfigurationException(
+                                                    "Unable to retrieve component configurator for plugin configuration",
+                                                    e );
+        }
+        finally
+        {
+            if ( configurator != null )
+            {
+                try
+                {
+                    container.release( configurator );
+                }
+                catch ( ComponentLifecycleException e )
+                {
+                }
+            }
+        }
-                                                              "wagon-provider-api", "classworlds", "maven-plugin"} );
+                                                              "wagon-provider-api", "classworlds", "maven-plugin",
+                                                              "plexus-marmalade-factory", "maven-script-marmalade",
+                                                              "marmalade-core"} );

INS44 INS8 INS43 INS42 INS60 INS54 INS42 MOV43 INS59 INS8 MOV12 INS12 INS8 INS42 INS33 INS60 INS25 MOV21 INS44 INS8 INS25 INS43 INS59 INS32 INS8 INS8 INS43 INS42 INS53 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS42 INS21 INS21 INS42 INS14 INS42 INS33 MOV54 INS42 INS42 INS7 INS7 INS43 INS45 INS42 INS12 INS45 INS45 INS45 INS32 INS42 INS11 INS42 INS11 INS42 INS21 INS44 INS8 INS42 UPD42 MOV42 INS43 INS32 INS43 INS32 INS32 INS43 INS42 INS42 UPD42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 DEL83 DEL42 DEL59 DEL23 DEL8