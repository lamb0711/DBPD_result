[MNG-5760] Add `-r/--resume` to automatically resume from the last failure point

Author: Martin Kanters <mkanters93@gmail.com>

+import org.apache.maven.execution.BuildResumptionAnalyzer;
+import org.apache.maven.execution.BuildResumptionDataRepository;
+import org.apache.maven.execution.BuildResumptionPersistenceException;
+import org.apache.maven.lifecycle.LifecycleExecutionException;
+    @Inject
+    private BuildResumptionAnalyzer buildResumptionAnalyzer;
+
+    @Inject
+    private BuildResumptionDataRepository buildResumptionDataRepository;
+
-                return addExceptionToResult( result, session.getResult().getExceptions().get( 0 ) );
+                addExceptionToResult( result, session.getResult().getExceptions().get( 0 ) );
+                persistResumptionData( result, session );
+                return result;
+            }
+            else
+            {
+                session.getAllProjects().stream()
+                        .filter( MavenProject::isExecutionRoot )
+                        .findFirst()
+                        .ifPresent( buildResumptionDataRepository::removeResumptionData );
+    private void persistResumptionData( MavenExecutionResult result, MavenSession session )
+    {
+        boolean hasLifecycleExecutionExceptions = result.getExceptions().stream()
+                .anyMatch( LifecycleExecutionException.class::isInstance );
+
+        if ( hasLifecycleExecutionExceptions )
+        {
+            MavenProject rootProject = session.getAllProjects().stream()
+                    .filter( MavenProject::isExecutionRoot )
+                    .findFirst()
+                    .orElseThrow( () -> new IllegalStateException( "No project in the session is execution root" ) );
+
+            buildResumptionAnalyzer.determineBuildResumptionData( result ).ifPresent( resumption ->
+            {
+                try
+                {
+                    buildResumptionDataRepository.persistResumptionData( rootProject, resumption );
+                    result.setCanResume( true );
+                }
+                catch ( BuildResumptionPersistenceException e )
+                {
+                    logger.warn( "Could not persist build resumption data", e );
+                }
+            } );
+        }
+    }
+

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS23 INS31 INS78 INS83 INS43 INS59 INS78 INS83 INS43 INS59 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS60 INS25 INS42 INS42 INS39 INS59 INS42 INS8 INS42 INS32 INS60 INS21 INS8 INS32 INS42 INS90 INS43 INS59 INS32 INS21 INS21 INS21 INS32 INS42 INS57 INS42 INS42 INS42 INS32 INS32 INS42 INS86 MOV32 INS32 INS42 INS32 INS42 INS42 INS43 INS32 INS42 INS86 INS42 INS42 INS42 INS59 INS8 INS42 INS42 INS42 INS32 INS42 INS90 INS42 INS32 INS42 INS14 INS42 INS54 INS32 INS42 INS42 INS42 INS32 INS42 INS90 INS43 INS45 INS8 INS12 INS32 INS42 INS90 INS32 INS42 INS42 INS42 INS42 INS21 INS21 INS44 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS32 INS42 INS42 INS45 INS42