o Use SLF4J for logging

Conflicts:

	pom.xml

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1396842 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.OutputStream;
-import java.text.DateFormat;
-import java.util.TimeZone;
-import org.codehaus.plexus.logging.Logger;
+import org.slf4j.Logger;
-    public static void showVersion( PrintStream stdout )
+    public static String showVersion()
+        String LS = System.getProperty("line.separator");
-        stdout.println( createMavenVersionString( properties ) );
-        String shortName = reduce( properties.getProperty( "distributionShortName" ) );
-
-        stdout.println( shortName + " home: " + System.getProperty( "maven.home", "<unknown maven home>" ) );
-
-        stdout.println( "Java version: " + System.getProperty( "java.version", "<unknown java version>" )
-            + ", vendor: " + System.getProperty( "java.vendor", "<unknown vendor>" ) );
-
-        stdout.println( "Java home: " + System.getProperty( "java.home", "<unknown java home>" ) );
-
-        stdout.println( "Default locale: " + Locale.getDefault() + ", platform encoding: "
-            + System.getProperty( "file.encoding", "<unknown encoding>" ) );
-
-        stdout.println( "OS name: \"" + Os.OS_NAME + "\", version: \"" + Os.OS_VERSION + "\", arch: \"" + Os.OS_ARCH
-            + "\", family: \"" + Os.OS_FAMILY + "\"" );
+        StringBuffer version = new StringBuffer();
+        version.append( createMavenVersionString( properties ) ).append( LS );
+        version.append( reduce( properties.getProperty( "distributionShortName" ) + " home: " + System.getProperty( "maven.home", "<unknown maven home>" ) ) ).append( LS );
+        version.append( "Java version: " + System.getProperty( "java.version", "<unknown java version>" ) + ", vendor: " + System.getProperty( "java.vendor", "<unknown vendor>" ) ).append( LS );
+        version.append( "Java home: " + System.getProperty( "java.home", "<unknown java home>" ) ).append( LS );
+        version.append( "Default locale: " + Locale.getDefault() + ", platform encoding: " + System.getProperty( "file.encoding", "<unknown encoding>" ) ).append( LS );
+        version.append( "OS name: \"" + Os.OS_NAME + "\", version: \"" + Os.OS_VERSION + "\", arch: \"" + Os.OS_ARCH + "\", family: \"" + Os.OS_FAMILY + "\"" );
+        return version.toString();
-
-    private static void stats( Date start, Logger logger )
-    {
-        Date finish = new Date();
-
-        long time = finish.getTime() - start.getTime();
-
-        logger.info( "Total time: " + formatTime( time ) );
-
-        logger.info( "Finished at: " + finish );
-
-        //noinspection CallToSystemGC
-        System.gc();
-
-        Runtime r = Runtime.getRuntime();
-
-        logger.info( "Final Memory: " + ( r.totalMemory() - r.freeMemory() ) / MB + "M/" + r.totalMemory() / MB + "M" );
-    }
-
-    private static String formatTime( long ms )
-    {
-        long secs = ms / MS_PER_SEC;
-
-        long min = secs / SEC_PER_MIN;
-
-        secs = secs % SEC_PER_MIN;
-
-        String msg = "";
-
-        if ( min > 1 )
-        {
-            msg = min + " minutes ";
-        }
-        else if ( min == 1 )
-        {
-            msg = "1 minute ";
-        }
-
-        if ( secs > 1 )
-        {
-            msg += secs + " seconds";
-        }
-        else if ( secs == 1 )
-        {
-            msg += "1 second";
-        }
-        else if ( min == 0 )
-        {
-            msg += "< 1 second";
-        }
-        return msg;
-    }
-
-    private static String getFormattedTime( long time )
-    {
-        String pattern = "s.SSS's'";
-        if ( time / 60000L > 0 )
-        {
-            pattern = "m:s" + pattern;
-            if ( time / 3600000L > 0 )
-            {
-                pattern = "H:m" + pattern;
-            }
-        }
-        DateFormat fmt = new SimpleDateFormat( pattern );
-        fmt.setTimeZone( TimeZone.getTimeZone( "UTC" ) );
-        return fmt.format( new Date( time ) );
-    }
-
-        if ( logger == null )
-        {
-            logger = new PrintStreamLogger( System.out );
-        }
-

MOV26 MOV26 UPD40 UPD40 MOV43 INS42 MOV60 UPD42 MOV42 INS60 INS21 INS41 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 UPD42 INS32 INS42 INS42 INS14 MOV32 INS42 INS42 INS32 INS42 INS42 MOV32 INS42 INS42 MOV32 INS42 INS42 MOV32 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS45 INS43 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 MOV32 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS27 MOV32 INS45 MOV32 INS42 INS42 DEL40 DEL26 DEL39 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL45 DEL27 DEL32 DEL21 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL27 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL27 DEL36 DEL42 DEL27 DEL27 DEL45 DEL27 DEL42 DEL42 DEL32 DEL42 DEL27 DEL27 DEL45 DEL27 DEL32 DEL21 DEL8 DEL31 DEL83 DEL83 DEL42 DEL39 DEL42 DEL44 DEL39 DEL42 DEL42 DEL42 DEL27 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL27 DEL7 DEL21 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL34 DEL27 DEL42 DEL42 DEL45 DEL27 DEL7 DEL21 DEL8 DEL42 DEL34 DEL27 DEL42 DEL45 DEL7 DEL21 DEL8 DEL25 DEL25 DEL42 DEL34 DEL27 DEL42 DEL42 DEL45 DEL27 DEL7 DEL21 DEL8 DEL42 DEL34 DEL27 DEL42 DEL45 DEL7 DEL21 DEL8 DEL42 DEL34 DEL27 DEL42 DEL45 DEL7 DEL21 DEL8 DEL25 DEL25 DEL25 DEL42 DEL41 DEL8 DEL31 DEL83 DEL83 DEL42 DEL43 DEL42 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL34 DEL27 DEL34 DEL27 DEL42 DEL45 DEL42 DEL27 DEL7 DEL21 DEL42 DEL34 DEL27 DEL34 DEL27 DEL42 DEL45 DEL42 DEL27 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL43 DEL42 DEL14 DEL32 DEL41 DEL8 DEL31 DEL42 DEL33 DEL27 DEL42 DEL42 DEL43 DEL40 DEL14 DEL7 DEL21 DEL8 DEL25