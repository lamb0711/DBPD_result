various straightening up

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@220244 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.wagon.WagonException;
-    throws TransferFailedException
+        throws TransferFailedException
-        
+
-        Wagon wagon = null;
+        Wagon wagon;
-    public void getRepositoryMetadata( RepositoryMetadata metadata, ArtifactRepository remoteRepository, File destination )
-    throws TransferFailedException, ResourceDoesNotExistException
+    public void getRepositoryMetadata( RepositoryMetadata metadata, ArtifactRepository remoteRepository,
+                                       File destination )
+        throws TransferFailedException, ResourceDoesNotExistException
-    
+
-        
+
-            boolean retry = false;
+            boolean retry = true;
-                catch ( WagonException sha1TryException )
+                catch ( ChecksumFailedException e )
-                    if ( sha1TryException instanceof ChecksumFailedException )
+                    if ( firstRun )
-                        // if this is the second try, handle the problem...otherwise, let it try again.
+                        retry = true;
+                    }
+                    else
+                    {
+                        handleChecksumFailure( repository, e.getMessage(), e.getCause() );
+                    }
+                }
+                catch ( ResourceDoesNotExistException sha1TryException )
+                {
+                    getLogger().debug( "SHA1 not found, trying MD5", sha1TryException );
+
+                    // if this IS NOT a ChecksumFailedException, it was a problem with transfer/read of the checksum
+                    // file...we'll try again with the MD5 checksum.
+                    try
+                    {
+                        verifyChecksum( md5ChecksumObserver, temp, remotePath, ".md5", wagon );
+                    }
+                    catch ( ChecksumFailedException e )
+                    {
+                        // if we also fail to verify based on the MD5 checksum, and the checksum transfer/read
+                        // succeeded, then we need to determine whether to retry or handle it as a failure.
-                            handleChecksumFailure( repository, sha1TryException.getMessage(),
-                                                   sha1TryException.getCause() );
+                            handleChecksumFailure( repository, e.getMessage(), e.getCause() );
-                    // if this IS NOT a ChecksumFailedException, it was a problem with transfer/read of the checksum
-                    // file...we'll try again with the MD5 checksum.
-                    else
+                    catch ( ResourceDoesNotExistException md5TryException )
-                        try
-                        {
-                            verifyChecksum( md5ChecksumObserver, temp, remotePath, ".md5", wagon );
-                        }
-                        catch ( WagonException md5TryException )
-                        {
-                            // if we also fail to verify based on the MD5 checksum, and the checksum transfer/read
-                            // succeeded, then we need to determine whether to retry or handle it as a failure.
-                            if ( md5TryException instanceof ChecksumFailedException )
-                            {
-                                // only retry once.
-                                if ( firstRun )
-                                {
-                                    retry = true;
-                                }
-                                else
-                                {
-                                    handleChecksumFailure( repository, md5TryException.getMessage(),
-                                                           md5TryException.getCause() );
-                                }
-                            }
-                            // otherwise, this was a failed transfer, and we don't want to retry.
-                            else
-                            {
-                                handleChecksumFailure( repository, "Error retrieving checksum file for " + remotePath,
-                                                       md5TryException );
-                            }
-                        }
+                        // this was a failed transfer, and we don't want to retry.
+                        handleChecksumFailure( repository, "Error retrieving checksum file for " + remotePath,
+                                               md5TryException );
-                finally
-                {
-                    // reinstate the download monitor...
-                    if ( downloadMonitor != null )
-                    {
-                        wagon.addTransferListener( downloadMonitor );
-                    }
-                    // unset the firstRun flag, so we don't get caught in an infinite loop...
-                    firstRun = false;
+                // reinstate the download monitor...
+                if ( downloadMonitor != null )
+                {
+                    wagon.addTransferListener( downloadMonitor );
+
+                // unset the firstRun flag, so we don't get caught in an infinite loop...
+                firstRun = false;
-        throws WagonException
+        throws ResourceDoesNotExistException, TransferFailedException, AuthorizationException
-                //                getLogger().warn(
-                //                    "*** CHECKSUM MISMATCH - currently disabled fail due to bad repository checksums ***" );
-
-                throw new ChecksumFailedException(
-                    "Checksum failed on download: local = '" + actualChecksum + "'; remote = '" + expectedChecksum +
-                        "'" );
+                throw new ChecksumFailedException( "Checksum failed on download: local = '" + actualChecksum +
+                    "'; remote = '" + expectedChecksum + "'" );

MOV8 INS43 INS43 UPD43 MOV60 MOV60 MOV25 MOV60 MOV54 MOV25 MOV60 MOV60 MOV54 MOV60 MOV21 MOV54 MOV25 MOV25 INS42 INS42 UPD42 INS8 MOV12 MOV12 MOV8 MOV21 MOV60 INS60 INS61 MOV8 MOV21 MOV21 INS39 INS59 MOV27 MOV8 UPD43 UPD42 MOV32 INS42 INS9 MOV21 MOV21 MOV25 INS54 MOV25 INS21 MOV42 UPD42 UPD42 MOV8 INS12 INS12 MOV7 INS44 INS8 INS44 MOV8 INS21 MOV43 INS42 MOV25 INS43 INS42 INS21 INS32 INS42 INS32 INS12 INS42 INS42 MOV42 INS32 INS42 INS45 INS42 INS8 INS44 MOV8 INS42 MOV43 INS42 MOV25 INS43 INS42 INS42 UPD42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL33 DEL42 DEL43 DEL42 DEL42 DEL62 DEL8 DEL25 DEL8 DEL42 DEL62 DEL8 DEL25 DEL8 DEL39 DEL42 DEL9 DEL59 DEL60 DEL8 DEL61 DEL54 DEL8