o trying to use the request/result pattern everywhere
o remove another use of ResolutionGroup in the core
o remove all the deprecated methods in the resolver, we'll see what breaks and we'll restore in maven-compat


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@749407 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.Artifact;
-import org.apache.maven.artifact.metadata.ArtifactMetadataSource;
-import org.apache.maven.artifact.repository.ArtifactRepository;
-import org.apache.maven.artifact.resolver.filter.ArtifactFilter;
-import org.apache.maven.artifact.resolver.conflict.ConflictResolver;
-
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-
- * I want to use it for hidding the fact that sometime artifact must be
- * downloaded. I am just asking LocalRepository for given artifact and I don't
- * care if it is alredy there or how it will get there.
- *
- * @author Michal Maczka
- * @version $Id$
-    String ROLE = ArtifactResolver.class.getName();
-
-    /** @deprecated use {@link #resolve(ArtifactResolutionRequest)} */
-    @Deprecated
-    void resolve( Artifact artifact,
-                  List<ArtifactRepository> remoteRepositories,
-                  ArtifactRepository localRepository )
-        throws ArtifactResolutionException, ArtifactNotFoundException;
-
-    /** @deprecated use {@link #resolve(ArtifactResolutionRequest)} */
-    @Deprecated
-    ArtifactResolutionResult resolveTransitively( Set<Artifact> artifacts,
-                                                  Artifact originatingArtifact,
-                                                  List<ArtifactRepository> remoteRepositories,
-                                                  ArtifactRepository localRepository,
-                                                  ArtifactMetadataSource source )
-        throws ArtifactResolutionException, ArtifactNotFoundException;
-
-    /** @deprecated use {@link #resolve(ArtifactResolutionRequest)} */
-    @Deprecated
-    ArtifactResolutionResult resolveTransitively( Set<Artifact> artifacts,
-                                                  Artifact originatingArtifact,
-                                                  List<ArtifactRepository> remoteRepositories,
-                                                  ArtifactRepository localRepository,
-                                                  ArtifactMetadataSource source,
-                                                  List<ResolutionListener> listeners )
-        throws ArtifactResolutionException, ArtifactNotFoundException;
-
-    /** @deprecated use {@link #resolve(ArtifactResolutionRequest)} */
-    @Deprecated
-    ArtifactResolutionResult resolveTransitively( Set<Artifact> artifacts,
-                                                  Artifact originatingArtifact,
-                                                  ArtifactRepository localRepository,
-                                                  List<ArtifactRepository> remoteRepositories,
-                                                  ArtifactMetadataSource source,
-                                                  ArtifactFilter filter )
-        throws ArtifactResolutionException, ArtifactNotFoundException;
-
-    /** @deprecated use {@link #resolve(ArtifactResolutionRequest)} */
-    @Deprecated
-    ArtifactResolutionResult resolveTransitively( Set<Artifact> artifacts,
-                                                  Artifact originatingArtifact,
-                                                  Map managedVersions,
-                                                  ArtifactRepository localRepository,
-                                                  List<ArtifactRepository> remoteRepositories,
-                                                  ArtifactMetadataSource source )
-        throws ArtifactResolutionException, ArtifactNotFoundException;
-
-    /** @deprecated use {@link #resolve(ArtifactResolutionRequest)} */
-    @Deprecated
-    ArtifactResolutionResult resolveTransitively( Set<Artifact> artifacts,
-                                                  Artifact originatingArtifact,
-                                                  Map managedVersions,
-                                                  ArtifactRepository localRepository,
-                                                  List<ArtifactRepository> remoteRepositories,
-                                                  ArtifactMetadataSource source,
-                                                  ArtifactFilter filter )
-        throws ArtifactResolutionException, ArtifactNotFoundException;
-
-    /** @deprecated use {@link #resolve(ArtifactResolutionRequest)} */
-    @Deprecated
-    ArtifactResolutionResult resolveTransitively( Set<Artifact> artifacts,
-                                                  Artifact originatingArtifact,
-                                                  Map managedVersions,
-                                                  ArtifactRepository localRepository,
-                                                  List<ArtifactRepository> remoteRepositories,
-                                                  ArtifactMetadataSource source,
-                                                  ArtifactFilter filter,
-                                                  List<ResolutionListener> listeners )
-        throws ArtifactResolutionException, ArtifactNotFoundException;
-
-    /**
-     * @since 3.0
-     * @deprecated use {@link #resolve(ArtifactResolutionRequest)}
-     */
-    @Deprecated
-    ArtifactResolutionResult resolveTransitively( Set<Artifact> artifacts,
-                                                  Artifact originatingArtifact,
-                                                  Map managedVersions,
-                                                  ArtifactRepository localRepository,
-                                                  List<ArtifactRepository> remoteRepositories,
-                                                  ArtifactMetadataSource source,
-                                                  ArtifactFilter filter,
-                                                  List<ResolutionListener> listeners,
-                                                  List<ConflictResolver> conflictResolvers )
-        throws ArtifactResolutionException, ArtifactNotFoundException;
-
-    /** @deprecated use {@link #resolve(ArtifactResolutionRequest)} */
-    @Deprecated
-    void resolveAlways( Artifact artifact,
-                        List<ArtifactRepository> remoteRepositories,
-                        ArtifactRepository localRepository )
-        throws ArtifactResolutionException, ArtifactNotFoundException;
-
-    // New API
-
-    /** @since 3.0 */
+    
+    ArtifactResolutionResult resolveWithExceptions( ArtifactResolutionRequest request )
+        throws ArtifactResolutionException, ArtifactNotFoundException;

MOV43 INS42 INS44 MOV43 INS42 MOV44 MOV43 MOV43 INS43 INS42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL66 DEL66 DEL65 DEL66 DEL65 DEL66 DEL65 DEL42 DEL43 DEL42 DEL42 DEL43 DEL57 DEL42 DEL32 DEL59 DEL23 DEL66 DEL42 DEL43 DEL69 DEL68 DEL65 DEL66 DEL65 DEL29 DEL42 DEL78 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL66 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL66 DEL65 DEL29 DEL42 DEL78 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL66 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL66 DEL65 DEL29 DEL42 DEL78 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL31 DEL66 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL66 DEL65 DEL29 DEL42 DEL78 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL31 DEL66 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL66 DEL65 DEL29 DEL42 DEL78 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL31 DEL66 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL66 DEL65 DEL29 DEL42 DEL78 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL31 DEL66 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL66 DEL65 DEL29 DEL42 DEL78 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL31 DEL66 DEL65 DEL66 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL65 DEL29 DEL42 DEL78 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL31 DEL66 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL66 DEL65 DEL29 DEL42 DEL78 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL31 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42 DEL31