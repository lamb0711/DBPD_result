PR: MNG-471

implemented cloned lifecycle, project and tests. update mojos accordingly


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191476 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.util.IOUtil;
+import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
+import org.codehaus.classworlds.ClassRealm;
+import org.apache.maven.plugin.lifecycle.LifecycleConfiguration;
+import org.apache.maven.plugin.lifecycle.Lifecycle;
+import org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Reader;
+import java.util.Map;
+import java.util.HashMap;
+import java.io.InputStreamReader;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.FileNotFoundException;
+    private Map lifecycleMappings;
+
+    private ClassRealm classRealm;
+
+
+    public Lifecycle getLifecycleMapping( String lifecycle )
+        throws IOException, XmlPullParserException
+    {
+        if ( lifecycleMappings == null )
+        {
+            LifecycleMappingsXpp3Reader reader = new LifecycleMappingsXpp3Reader();
+            InputStreamReader r = null;
+            LifecycleConfiguration config;
+
+            try
+            {
+                InputStream resourceAsStream = classRealm.getResourceAsStream( "/META-INF/maven/lifecycle.xml" );
+                if ( resourceAsStream == null )
+                {
+                    throw new FileNotFoundException( "Unable to find /META-INF/maven/lifecycle.xml in the plugin" );
+                }
+                r = new InputStreamReader( resourceAsStream );
+                config = reader.read( r );
+            }
+            finally
+            {
+                IOUtil.close( r );
+            }
+
+            Map map = new HashMap();
+
+            for ( Iterator i = config.getLifecycles().iterator(); i.hasNext(); )
+            {
+                Lifecycle l = (Lifecycle) i.next();
+                map.put( l.getId(), l );
+            }
+
+            lifecycleMappings = map;
+        }
+        return (Lifecycle) lifecycleMappings.get( lifecycle );
+    }
+
+    public void setClassRealm( ClassRealm classRealm )
+    {
+        this.classRealm = classRealm;
+    }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS31 INS31 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS42 INS44 INS43 INS43 INS8 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS25 INS41 INS43 INS42 INS21 INS42 INS27 INS8 INS11 INS42 INS7 INS42 INS33 INS60 INS60 INS60 INS54 INS60 INS24 INS21 INS43 INS32 INS22 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS8 INS8 INS43 INS59 INS58 INS32 INS8 INS7 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS14 INS42 INS42 INS33 INS42 INS42 INS60 INS25 INS21 INS21 INS21 INS42 INS42 INS14 INS43 INS59 INS42 INS42 INS60 INS21 INS42 INS42 INS43 INS43 INS59 INS27 INS8 INS7 INS7 INS32 INS43 INS42 INS42 INS32 INS43 INS59 INS32 INS42 INS42 INS42 INS32 INS42 INS33 INS53 INS42 INS14 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS14 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS43 INS45 INS42 INS42 INS42 INS42 INS42