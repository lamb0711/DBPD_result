o Allowed build extensions to contribute lifecycle participants

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@820374 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collections;
+import java.util.HashSet;
-            for ( AbstractMavenLifecycleParticipant listener : getLifecycleParticipants() )
+            for ( AbstractMavenLifecycleParticipant listener : getLifecycleParticipants( Collections.<MavenProject> emptyList() ) )
+        ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader();
-            for ( AbstractMavenLifecycleParticipant listener : getLifecycleParticipants() )
+            for ( AbstractMavenLifecycleParticipant listener : getLifecycleParticipants( projects ) )
+                Thread.currentThread().setContextClassLoader( listener.getClass().getClassLoader() );
+
+        finally
+        {
+            Thread.currentThread().setContextClassLoader( originalClassLoader );
+        }
-    private List<AbstractMavenLifecycleParticipant> getLifecycleParticipants()
+    private Collection<AbstractMavenLifecycleParticipant> getLifecycleParticipants( Collection<MavenProject> projects )
-        // TODO injection of component lists does not work
-        List<AbstractMavenLifecycleParticipant> lifecycleListeners;
+        Collection<AbstractMavenLifecycleParticipant> lifecycleListeners =
+            new LinkedHashSet<AbstractMavenLifecycleParticipant>();
+
+        ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader();
-            lifecycleListeners = container.lookupList( AbstractMavenLifecycleParticipant.class );
+            try
+            {
+                lifecycleListeners.addAll( container.lookupList( AbstractMavenLifecycleParticipant.class ) );
+            }
+            catch ( ComponentLookupException e )
+            {
+                // this is just silly, lookupList should return an empty list!
+                logger.warn( "Failed to lookup lifecycle participants: " + e.getMessage() );
+            }
+
+            Collection<ClassLoader> scannedRealms = new HashSet<ClassLoader>();
+
+            for ( MavenProject project : projects )
+            {
+                ClassLoader projectRealm = project.getClassRealm();
+
+                if ( projectRealm != null && scannedRealms.add( projectRealm ) )
+                {
+                    Thread.currentThread().setContextClassLoader( projectRealm );
+
+                    try
+                    {
+                        lifecycleListeners.addAll( container.lookupList( AbstractMavenLifecycleParticipant.class ) );
+                    }
+                    catch ( ComponentLookupException e )
+                    {
+                        // this is just silly, lookupList should return an empty list!
+                        logger.warn( "Failed to lookup lifecycle participants: " + e.getMessage() );
+                    }
+                }
+            }
-        catch ( ComponentLookupException e1 )
+        finally
-            // this is just silly, lookupList should return an empty list!
-            lifecycleListeners = new ArrayList<AbstractMavenLifecycleParticipant>();
+            Thread.currentThread().setContextClassLoader( originalClassLoader );
+

INS26 INS26 INS40 INS40 UPD74 MOV74 INS44 INS8 INS60 UPD43 INS74 INS42 MOV60 INS60 INS54 MOV41 INS43 INS59 INS8 UPD42 INS43 INS43 UPD74 INS43 INS59 INS8 INS8 INS42 INS42 INS32 INS21 INS42 INS42 UPD43 INS14 INS42 INS42 INS32 MOV54 INS60 INS70 INS21 INS32 INS42 INS32 UPD42 UPD74 MOV74 INS32 INS42 INS74 INS59 INS44 INS42 INS8 INS32 INS32 INS42 INS42 INS42 INS21 INS32 INS42 INS42 UPD43 INS42 INS42 INS43 INS43 INS42 INS14 INS43 INS42 INS60 INS25 INS32 INS42 INS42 INS42 INS43 INS42 INS32 INS42 INS42 UPD42 INS32 UPD42 INS42 INS42 INS74 INS42 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 MOV32 INS32 INS43 INS43 INS42 INS42 INS32 INS27 INS32 INS21 INS54 INS42 INS42 INS32 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS32 INS8 INS12 INS42 INS42 INS45 INS32 INS32 INS42 INS42 INS21 INS44 INS8 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS21 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS57 INS42 INS42 INS27 INS43 INS45 INS32 INS42 INS42 INS42 DEL42 DEL7 DEL42 DEL14 DEL7 DEL8