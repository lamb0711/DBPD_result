generics

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1243037 13f79535-47bb-0310-9956-ffa450edef68

-        List parentPlugins = parentContainer.getPlugins();
+        List<Plugin> parentPlugins = parentContainer.getPlugins();
-            parentPlugins = new ArrayList( parentPlugins );
+            parentPlugins = new ArrayList<Plugin>( parentPlugins );
-                for ( Iterator it = parentPlugins.iterator(); it.hasNext(); )
+                for ( Iterator<Plugin> it = parentPlugins.iterator(); it.hasNext(); )
-                    Plugin plugin = (Plugin) it.next();
+                    Plugin plugin = it.next();
-            List assembledPlugins = new ArrayList();
+            List<Plugin> assembledPlugins = new ArrayList<Plugin>();
-            Map childPlugins = childContainer.getPluginsAsMap();
+            Map<String, Plugin> childPlugins = childContainer.getPluginsAsMap();
-            for ( Iterator it = parentPlugins.iterator(); it.hasNext(); )
+            for ( Plugin parentPlugin : parentPlugins )
-                Plugin parentPlugin = (Plugin) it.next();
-
-                List results =
+                List<Plugin> results =
-    public static List orderAfterMerge( List merged, List highPrioritySource, List lowPrioritySource )
+    public static List<Plugin> orderAfterMerge( List<Plugin> merged, List<Plugin> highPrioritySource,
+                                                List<Plugin> lowPrioritySource )
-        List results = new ArrayList();
+        List<Plugin> results = new ArrayList<Plugin>();
-        List missingFromResults = new ArrayList();
+        List<Plugin> missingFromResults = new ArrayList<Plugin>();
-        List sources = new ArrayList();
+        List<List<Plugin>> sources = new ArrayList<List<Plugin>>();
-        for ( Iterator sourceIterator = sources.iterator(); sourceIterator.hasNext(); )
+        for ( List<Plugin> source : sources )
-            List source = (List) sourceIterator.next();
-
-            for ( Iterator it = source.iterator(); it.hasNext(); )
+            for ( Plugin item : source )
-                Object item = it.next();
-
-        List parentExecutions = parent.getExecutions();
+        List<PluginExecution> parentExecutions = parent.getExecutions();
-            List mergedExecutions = new ArrayList();
+            List<PluginExecution> mergedExecutions = new ArrayList<PluginExecution>();
-            Map assembledExecutions = new TreeMap();
+            Map<String, PluginExecution> assembledExecutions = new TreeMap<String, PluginExecution>();
-            Map childExecutions = child.getExecutionsAsMap();
+            Map<String, PluginExecution> childExecutions = child.getExecutionsAsMap();
-            for ( Iterator it = parentExecutions.iterator(); it.hasNext(); )
+            for ( PluginExecution parentExecution : parentExecutions )
-                PluginExecution parentExecution = (PluginExecution) it.next();
-
-                    PluginExecution childExecution = (PluginExecution) childExecutions.get( parentExecution.getId() );
+                    PluginExecution childExecution = childExecutions.get( parentExecution.getId() );
-            for ( Iterator it = child.getExecutions().iterator(); it.hasNext(); )
+            for ( PluginExecution childExecution : child.getExecutions() )
-                PluginExecution childExecution = (PluginExecution) it.next();
-
-        List parentGoals = parent.getGoals();
-        List childGoals = child.getGoals();
+        List<String> parentGoals = parent.getGoals();
+        List<String> childGoals = child.getGoals();
-        List goals = new ArrayList();
+        List<String> goals = new ArrayList<String>();
-            for ( Iterator goalIterator = parentGoals.iterator(); goalIterator.hasNext(); )
+            for (  String goal : parentGoals )
-                String goal = (String) goalIterator.next();
-
-    public static List mergeRepositoryLists( List dominant, List recessive )
+    public static List<Repository> mergeRepositoryLists( List<Repository> dominant, List<Repository> recessive )
-        List repositories = new ArrayList();
+        List<Repository> repositories = new ArrayList<Repository>();
-        for ( Iterator it = dominant.iterator(); it.hasNext(); )
+        for ( Repository repository : dominant )
-            Repository repository = (Repository) it.next();
-
-        for ( Iterator it = recessive.iterator(); it.hasNext(); )
+        for ( Repository repository : recessive )
-            Repository repository = (Repository) it.next();
-
-    public static void mergeFilterLists( List childFilters, List parentFilters )
+    public static void mergeFilterLists( List<String> childFilters, List<String> parentFilters )
-        for ( Iterator i = parentFilters.iterator(); i.hasNext(); )
+        for ( String f : parentFilters )
-            String f = (String) i.next();
-    private static List mergeDependencyList( List child, List parent )
+    private static List<Dependency> mergeDependencyList( List<Dependency> child, List<Dependency> parent )
-        Map depsMap = new LinkedHashMap();
+        Map<String, Dependency> depsMap = new LinkedHashMap<String, Dependency>();
-            for ( Iterator it = parent.iterator(); it.hasNext(); )
+            for ( Dependency dependency : parent )
-                Dependency dependency = (Dependency) it.next();
-            for ( Iterator it = child.iterator(); it.hasNext(); )
+            for ( Dependency dependency : child )
-                Dependency dependency = (Dependency) it.next();
-        return new ArrayList( depsMap.values() );
+        return new ArrayList<Dependency>( depsMap.values() );

INS74 MOV60 MOV25 INS74 INS74 MOV43 INS43 INS74 INS74 INS74 INS70 MOV43 INS43 INS74 INS74 INS70 INS70 INS74 INS74 INS70 MOV43 INS43 INS74 INS74 INS25 INS74 INS42 MOV43 INS43 MOV43 INS43 MOV43 INS43 INS74 INS74 INS74 INS44 INS42 MOV8 INS74 INS74 INS74 INS74 INS42 MOV43 INS43 MOV43 INS43 INS74 INS44 INS42 MOV8 INS44 INS42 MOV8 MOV43 INS43 MOV43 INS43 INS44 INS42 MOV8 INS42 MOV43 INS43 MOV43 MOV43 INS74 MOV27 MOV27 MOV8 MOV43 INS43 INS70 INS42 INS42 INS42 MOV43 INS43 UPD42 MOV43 INS43 UPD42 MOV43 INS74 UPD42 INS74 INS42 INS70 MOV43 MOV43 INS60 INS70 INS70 MOV43 INS43 MOV43 INS43 MOV43 INS43 INS70 INS42 INS42 MOV43 MOV43 MOV43 INS42 MOV43 INS42 INS42 INS42 MOV43 INS42 INS42 MOV43 MOV43 INS43 INS70 INS70 INS74 INS42 INS74 INS74 INS44 INS42 MOV8 INS42 INS74 INS42 INS74 MOV43 INS43 INS74 INS43 INS43 INS44 INS42 MOV8 INS42 INS74 INS74 INS59 INS74 INS44 INS42 MOV8 INS44 MOV32 MOV8 INS42 INS42 INS42 INS74 INS44 INS42 MOV8 INS74 INS42 INS74 INS44 INS42 MOV8 INS44 INS42 MOV8 MOV43 MOV43 MOV43 INS43 MOV43 INS43 INS43 MOV43 INS42 MOV43 INS43 MOV43 INS43 INS42 MOV43 INS74 UPD42 MOV42 INS42 MOV43 INS42 MOV43 MOV43 MOV43 INS43 INS43 INS42 INS14 MOV43 INS43 INS43 MOV43 INS42 MOV43 INS42 MOV43 INS43 MOV43 INS42 MOV43 MOV43 MOV43 MOV43 INS43 MOV43 INS42 MOV43 INS42 INS74 INS42 INS74 INS42 INS42 INS74 INS42 INS42 MOV43 INS43 UPD42 MOV42 INS74 INS42 UPD42 MOV42 INS74 INS42 INS42 INS42 INS42 MOV43 INS43 INS74 MOV43 INS43 MOV43 INS43 INS42 MOV43 MOV43 MOV43 INS43 INS43 INS42 MOV43 MOV43 MOV43 INS42 INS42 INS42 UPD42 MOV42 MOV43 MOV32 MOV32 DEL11 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL11 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL43 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL25 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24