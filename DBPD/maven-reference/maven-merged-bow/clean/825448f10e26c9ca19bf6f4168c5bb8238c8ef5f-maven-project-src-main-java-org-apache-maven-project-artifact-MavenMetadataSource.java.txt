[MARTIFACT-6] The deployer should detect previous deployments of the same version and die
This corrects the test case and implementation, utilising the previous changes made to ensure mirrors
and other repository metadata are not consulted for metadata


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@669227 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.versioning.ArtifactVersion;
-    public List retrieveAvailableVersions( Artifact artifact, ArtifactRepository localRepository,
-                                           List remoteRepositories )
+    public List<ArtifactVersion> retrieveAvailableVersions( Artifact artifact, ArtifactRepository localRepository,
+                                                            List<ArtifactRepository> remoteRepositories )
-        List versions;
-        Metadata repoMetadata = metadata.getMetadata();
+        return retrieveAvailableVersionsFromMetadata( metadata.getMetadata() );
+    }
+
+    public List<ArtifactVersion> retrieveAvailableVersionsFromDeploymentRepository(
+                                                                                    Artifact artifact,
+                                                                                    ArtifactRepository localRepository,
+                                                                                    ArtifactRepository deploymentRepository )
+        throws ArtifactMetadataRetrievalException
+    {
+        RepositoryMetadata metadata = new ArtifactRepositoryMetadata( artifact );
+        try
+        {
+            repositoryMetadataManager.resolveAlways( metadata, localRepository, deploymentRepository );
+        }
+        catch ( RepositoryMetadataResolutionException e )
+        {
+            throw new ArtifactMetadataRetrievalException( e.getMessage(), e );
+        }
+
+        return retrieveAvailableVersionsFromMetadata( metadata.getMetadata() );
+    }
+
+    private List<ArtifactVersion> retrieveAvailableVersionsFromMetadata( Metadata repoMetadata )
+    {
+        List<ArtifactVersion> versions;
-            List metadataVersions = repoMetadata.getVersioning().getVersions();
-            versions = new ArrayList( metadataVersions.size() );
-            for ( Iterator i = metadataVersions.iterator(); i.hasNext(); )
+            List<String> metadataVersions = repoMetadata.getVersioning().getVersions();
+            versions = new ArrayList<ArtifactVersion>( metadataVersions.size() );
+            for ( String version : metadataVersions )
-                String version = (String) i.next();
-            versions = Collections.EMPTY_LIST;
+            versions = Collections.<ArtifactVersion> emptyList();

INS26 INS40 INS31 INS31 INS83 INS74 INS42 MOV44 MOV44 INS44 MOV43 INS8 INS83 INS74 INS42 INS44 INS44 INS44 INS43 INS8 UPD83 INS74 UPD42 MOV43 INS43 INS74 INS42 MOV60 MOV54 INS41 MOV43 INS43 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS54 INS41 MOV43 INS43 MOV43 UPD42 INS42 MOV43 INS43 INS32 INS42 INS42 INS42 INS42 INS43 INS59 INS8 INS12 INS32 INS42 INS74 MOV59 INS42 INS42 MOV32 INS42 INS42 INS14 INS21 INS44 INS8 INS42 INS32 INS43 INS43 INS70 INS43 INS42 INS32 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS74 INS44 INS42 MOV8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS43 MOV43 MOV43 INS42 INS32 INS43 INS32 INS42 INS42 INS74 INS42 INS43 INS42 INS42 INS42 INS42 MOV43 INS43 INS42 INS42 DEL60 DEL42 DEL59 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL24 DEL40