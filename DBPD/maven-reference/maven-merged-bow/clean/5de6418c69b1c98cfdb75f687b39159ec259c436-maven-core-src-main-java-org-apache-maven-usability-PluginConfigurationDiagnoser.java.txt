PR: MNG-122
exception clean up phase 1

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@320668 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.plugin.descriptor.MojoDescriptor;
-import org.apache.maven.plugin.descriptor.Parameter;
-import org.apache.maven.plugin.descriptor.PluginDescriptor;
-import org.apache.maven.usability.plugin.Expression;
-import org.apache.maven.usability.plugin.ExpressionDocumentationException;
-import org.apache.maven.usability.plugin.ExpressionDocumenter;
-import org.codehaus.plexus.configuration.PlexusConfiguration;
-import org.codehaus.plexus.util.StringUtils;
-
-import java.io.PrintWriter;
-import java.io.StringWriter;
-import java.util.ArrayList;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Properties;
-import java.util.StringTokenizer;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-    private static final List UNMODIFIABLE_EXPRESSIONS;
-
-    static
-    {
-        List exprs = new ArrayList();
-
-        exprs.add( "localRepository" );
-        exprs.add( "reactorProjects" );
-        exprs.add( "settings" );
-        exprs.add( "project" );
-        exprs.add( "session" );
-        exprs.add( "plugin" );
-        exprs.add( "basedir" );
-
-        UNMODIFIABLE_EXPRESSIONS = exprs;
-    }
-
-        PluginConfigurationException pce = (PluginConfigurationException) DiagnosisUtils
-            .getFromCausality( error, PluginConfigurationException.class );
+        PluginConfigurationException pce =
+            (PluginConfigurationException) DiagnosisUtils.getFromCausality( error, PluginConfigurationException.class );
-            return buildParameterDiagnosticMessage( exception );
+            return exception.buildDiagnosticMessage();
-            ComponentConfigurationException cce = (ComponentConfigurationException) DiagnosisUtils
-                .getFromCausality( pce, ComponentConfigurationException.class );
-            
-            return buildConfigurationDiagnosticMessage( pce, cce );
+            ComponentConfigurationException cce = (ComponentConfigurationException) DiagnosisUtils.getFromCausality(
+                pce, ComponentConfigurationException.class );
+
+            return pce.buildConfigurationDiagnosticMessage( cce );
-
-    private String buildConfigurationDiagnosticMessage( PluginConfigurationException pce, ComponentConfigurationException cce )
-    {
-        StringBuffer message = new StringBuffer();
-        
-        PluginDescriptor descriptor = pce.getPluginDescriptor();
-
-        PlexusConfiguration failedConfiguration = cce.getFailedConfiguration();
-        
-        message.append( "Failed to configure plugin parameters for: " + descriptor.getId() + "\n\n" );
-        
-        if ( failedConfiguration != null )
-        {
-            String value = failedConfiguration.getValue( null );
-            addParameterUsageInfo( value, message );
-        }
-        
-        message.append( "Reason: " ).append( cce.getMessage() ).append( "\n" );
-        
-        Throwable root = DiagnosisUtils.getRootCause( cce );
-        
-        message.append( "Root Cause: " ).append( root.getMessage() ).append( "\n\n" );
-
-        return message.toString();
-    }
-
-    private String buildParameterDiagnosticMessage( PluginParameterException exception )
-    {
-        StringBuffer messageBuffer = new StringBuffer();
-
-        List params = exception.getParameters();
-        MojoDescriptor mojo = exception.getMojoDescriptor();
-
-        messageBuffer.append( "One or more required plugin parameters are invalid/missing for \'" )
-            .append( mojo.getPluginDescriptor().getGoalPrefix() ).append( ":" ).append( mojo.getGoal() )
-            .append( "\'\n" );
-
-        int idx = 0;
-        for ( Iterator it = params.iterator(); it.hasNext(); )
-        {
-            Parameter param = (Parameter) it.next();
-
-            messageBuffer.append( "\n[" ).append( idx++ ).append( "] " );
-
-            decomposeParameterIntoUserInstructions( mojo, param, messageBuffer );
-
-            messageBuffer.append( "\n" );
-        }
-
-        return messageBuffer.toString();
-    }
-
-    private void decomposeParameterIntoUserInstructions( MojoDescriptor mojo, Parameter param,
-                                                        StringBuffer messageBuffer )
-    {
-        String expression = param.getExpression();
-
-        if ( param.isEditable() )
-        {
-            messageBuffer.append( "inside the definition for plugin: \'" + mojo.getPluginDescriptor().getArtifactId()
-                + "\'specify the following:\n\n<configuration>\n  ...\n  <" + param.getName() + ">VALUE</"
-                + param.getName() + ">\n</configuration>" );
-
-            String alias = param.getAlias();
-            if ( StringUtils.isNotEmpty( alias ) )
-            {
-                messageBuffer.append( "\n\n-OR-\n\n<configuration>\n  ...\n  <" + alias + ">VALUE</" + alias
-                    + ">\n</configuration>\n" );
-            }
-        }
-
-        if ( StringUtils.isEmpty( expression ) )
-        {
-            messageBuffer.append( "." );
-        }
-        else
-        {
-            if ( param.isEditable() )
-            {
-                messageBuffer.append( "\n\n-OR-\n\n" );
-            }
-            
-            addParameterUsageInfo( expression, messageBuffer );
-        }
-    }
-
-    private void addParameterUsageInfo( String expression, StringBuffer messageBuffer )
-    {
-        StringBuffer expressionMessageBuffer = new StringBuffer();
-        
-        Matcher exprMatcher = Pattern.compile( "\\$\\{(.+)\\}" ).matcher( expression );
-
-        boolean unmodifiableElementsFound = false;
-        boolean activeElementsFound = false;
-
-        int elementCount = 0;
-
-        while ( exprMatcher.find() )
-        {
-            elementCount++;
-
-            activeElementsFound = true;
-
-            String subExpression = exprMatcher.group( 1 );
-
-            StringTokenizer expressionParts = new StringTokenizer( subExpression, "." );
-
-            String firstPart = expressionParts.nextToken();
-
-            try
-            {
-                Map expressions = ExpressionDocumenter.load();
-                Expression expr = (Expression) expressions.get( subExpression );
-
-                if ( expr != null )
-                {
-                    if ( !expr.isEditable() )
-                    {
-                        unmodifiableElementsFound = true;
-                    }
-                    else
-                    {
-                        addParameterConfigDocumentation( firstPart, exprMatcher.group( 0 ), subExpression,
-                                                         expressionMessageBuffer );
-                    }
-                }
-                else if ( UNMODIFIABLE_EXPRESSIONS.contains( subExpression ) )
-                {
-                    unmodifiableElementsFound = true;
-                }
-                else
-                {
-                    expressionMessageBuffer.append( "on the command line, specify: \'-D" ).append( subExpression )
-                        .append( "=VALUE\'" );
-                }
-            }
-            catch ( ExpressionDocumentationException e )
-            {
-                expressionMessageBuffer.append( "\n\nERROR!! Failed to load expression documentation!" );
-
-                StringWriter sWriter = new StringWriter();
-                PrintWriter pWriter = new PrintWriter( sWriter );
-
-                e.printStackTrace( pWriter );
-
-                expressionMessageBuffer.append( "\n\nException:\n\n" ).append( sWriter.toString() );
-            }
-        }
-
-        if ( activeElementsFound )
-        {
-            messageBuffer.append( expressionMessageBuffer );
-        }
-        else
-        {
-            messageBuffer.append( "    (found static expression: \'" + expression
-                + "\' which may act as a default value).\n" );
-        }
-
-        if ( unmodifiableElementsFound )
-        {
-            if ( elementCount > 1 )
-            {
-                messageBuffer.append( "    " );
-            }
-
-            messageBuffer
-                .append( "NOTE: One or more purely derived expression elements were detected in \'"
-                    + expression
-                    + "\'.\n    If you continue to get this error after any other expression elements are specified correctly,"
-                    + "\n    please report this issue to the Maven development team.\n" );
-        }
-    }
-
-    private void addParameterConfigDocumentation( String firstPart, String wholeExpression, String subExpression,
-                                                 StringBuffer expressionMessageBuffer )
-        throws ExpressionDocumentationException
-    {
-        Map expressionDoco = ExpressionDocumenter.load();
-
-        Expression expr = (Expression) expressionDoco.get( subExpression );
-
-        if ( expr != null )
-        {
-            expressionMessageBuffer.append( "check that the following section of " );
-            if ( "project".equals( firstPart ) )
-            {
-                expressionMessageBuffer.append( "the pom.xml " );
-            }
-            else if ( "settings".equals( firstPart ) )
-            {
-                expressionMessageBuffer.append( "your ~/.m2/settings.xml file " );
-            }
-
-            expressionMessageBuffer.append( "is present and correct:\n\n" );
-
-            String message = expr.getConfiguration();
-
-            if ( message == null )
-            {
-                message = expr.getDescription();
-            }
-
-            expressionMessageBuffer.append( message );
-
-            Properties cliConfig = expr.getCliOptions();
-
-            if ( cliConfig != null && !cliConfig.isEmpty() )
-            {
-                expressionMessageBuffer.append( "\n\n-OR-\n\nUse the following command-line switches:\n" );
-
-                prettyPrintCommandLineSwitches( cliConfig, '.', expressionMessageBuffer );
-            }
-        }
-        else
-        {
-            expressionMessageBuffer.append( "ensure that the expression: \'" + wholeExpression + "\' is satisfied" );
-        }
-    }
-
-    private void prettyPrintCommandLineSwitches( Properties switches, char filler, StringBuffer expressionMessageBuffer )
-    {
-        int maxKeyLen = 0;
-
-        for ( Iterator it = switches.entrySet().iterator(); it.hasNext(); )
-        {
-            Map.Entry entry = (Map.Entry) it.next();
-
-            String key = (String) entry.getKey();
-
-            int keyLen = key.length();
-            if ( keyLen > maxKeyLen )
-            {
-                maxKeyLen = keyLen;
-            }
-        }
-
-        final int minFillerCount = 4;
-
-        for ( Iterator it = switches.entrySet().iterator(); it.hasNext(); )
-        {
-            Map.Entry entry = (Map.Entry) it.next();
-
-            String key = (String) entry.getKey();
-
-            int keyLen = key.length();
-
-            int fillerCount = maxKeyLen - keyLen + minFillerCount;
-
-            expressionMessageBuffer.append( '\n' ).append( key ).append( ' ' );
-
-            for ( int i = 0; i < fillerCount; i++ )
-            {
-                expressionMessageBuffer.append( filler );
-            }
-
-            expressionMessageBuffer.append( ' ' ).append( entry.getValue() );
-        }
-
-        expressionMessageBuffer.append( '\n' );
-    }
-

INS42 UPD42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL7 DEL21 DEL8 DEL28 DEL42 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL33 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL21 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL37 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL37 DEL21 DEL42 DEL9 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL34 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL45 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL38 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL42 DEL34 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL42 DEL42 DEL42 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL61 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL34 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL45 DEL42 DEL45 DEL45 DEL27 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL45 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL45 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL25 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL13 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL42 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL27 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25 DEL8 DEL24 DEL83 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL27 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL13 DEL32 DEL42 DEL42 DEL32 DEL42 DEL13 DEL32 DEL21 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL13 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL13 DEL32 DEL21 DEL8 DEL31