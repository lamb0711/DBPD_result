PR: MNG-693
added tests for reporting inheritence to mirror plugin inheritence, cleanup and utilise executions element

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@240197 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.ReportPlugin;
+import org.apache.maven.model.ReportSet;
+import org.apache.maven.model.Reporting;
-                        ModelUtils.mergePluginDefinitions( childPlugin, parentPlugin, handleAsInheritance );
+                        mergePluginDefinitions( childPlugin, parentPlugin, handleAsInheritance );
+    public static void mergeReportPluginLists( Reporting child, Reporting parent, boolean handleAsInheritance )
+    {
+        if ( child == null || parent == null )
+        {
+            // nothing to do.
+            return;
+        }
+
+        List parentPlugins = parent.getPlugins();
+
+        if ( parentPlugins != null && !parentPlugins.isEmpty() )
+        {
+            Map assembledPlugins = new TreeMap();
+
+            Map childPlugins = child.getReportPluginsAsMap();
+
+            for ( Iterator it = parentPlugins.iterator(); it.hasNext(); )
+            {
+                ReportPlugin parentPlugin = (ReportPlugin) it.next();
+
+                String parentInherited = parentPlugin.getInherited();
+
+                if ( !handleAsInheritance || parentInherited == null ||
+                    Boolean.valueOf( parentInherited ).booleanValue() )
+                {
+
+                    ReportPlugin assembledPlugin = parentPlugin;
+
+                    ReportPlugin childPlugin = (ReportPlugin) childPlugins.get( parentPlugin.getKey() );
+
+                    if ( childPlugin != null )
+                    {
+                        assembledPlugin = childPlugin;
+
+                        mergeReportPluginDefinitions( childPlugin, parentPlugin, handleAsInheritance );
+                    }
+
+                    if ( handleAsInheritance && parentInherited == null )
+                    {
+                        assembledPlugin.unsetInheritanceApplied();
+                    }
+
+                    assembledPlugins.put( assembledPlugin.getKey(), assembledPlugin );
+                }
+            }
+
+            for ( Iterator it = childPlugins.values().iterator(); it.hasNext(); )
+            {
+                ReportPlugin childPlugin = (ReportPlugin) it.next();
+
+                if ( !assembledPlugins.containsKey( childPlugin.getKey() ) )
+                {
+                    assembledPlugins.put( childPlugin.getKey(), childPlugin );
+                }
+            }
+
+            child.setPlugins( new ArrayList( assembledPlugins.values() ) );
+
+            child.flushReportPluginMap();
+        }
+    }
+
-        ModelUtils.mergeGoalContainerDefinitions( child, parent );
+        mergeGoalContainerDefinitions( child, parent );
-                        ModelUtils.mergePluginExecutionDefinitions( childExecution, parentExecution );
+                        mergePluginExecutionDefinitions( childExecution, parentExecution );
+    public static void mergeReportPluginDefinitions( ReportPlugin child, ReportPlugin parent,
+                                                     boolean handleAsInheritance )
+    {
+        if ( child == null || parent == null )
+        {
+            // nothing to do.
+            return;
+        }
+
+        if ( child.getVersion() == null && parent.getVersion() != null )
+        {
+            child.setVersion( parent.getVersion() );
+        }
+
+        // from here to the end of the method is dealing with merging of the <executions/> section.
+        String parentInherited = parent.getInherited();
+
+        boolean parentIsInherited = parentInherited == null || Boolean.valueOf( parentInherited ).booleanValue();
+
+        List parentReportSets = parent.getReportSets();
+
+        if ( parentReportSets != null && !parentReportSets.isEmpty() )
+        {
+            Map assembledReportSets = new TreeMap();
+
+            Map childReportSets = child.getReportSetsAsMap();
+
+            for ( Iterator it = parentReportSets.iterator(); it.hasNext(); )
+            {
+                ReportSet parentReportSet = (ReportSet) it.next();
+
+                if ( !handleAsInheritance || parentIsInherited )
+                {
+                    ReportSet assembledReportSet = parentReportSet;
+
+                    ReportSet childReportSet = (ReportSet) childReportSets.get( parentReportSet.getId() );
+
+                    if ( childReportSet != null )
+                    {
+                        mergeReportSetDefinitions( childReportSet, parentReportSet );
+
+                        assembledReportSet = childReportSet;
+                    }
+                    else if ( handleAsInheritance && parentInherited == null )
+                    {
+                        parentReportSet.unsetInheritanceApplied();
+                    }
+
+                    assembledReportSets.put( assembledReportSet.getId(), assembledReportSet );
+                }
+            }
+
+            for ( Iterator it = childReportSets.entrySet().iterator(); it.hasNext(); )
+            {
+                Map.Entry entry = (Map.Entry) it.next();
+
+                String id = (String) entry.getKey();
+
+                if ( !assembledReportSets.containsKey( id ) )
+                {
+                    assembledReportSets.put( id, entry.getValue() );
+                }
+            }
+
+            child.setReportSets( new ArrayList( assembledReportSets.values() ) );
+
+            child.flushReportSetMap();
+        }
+
+    }
+
-        
+
-        
+
-        
+
-        
+
-                
+
-        
+
+    private static void mergeReportSetDefinitions( ReportSet child, ReportSet parent )
+    {
+        List parentReports = parent.getReports();
+        List childReports = child.getReports();
+
+        List reports = new ArrayList();
+
+        if ( childReports != null && !childReports.isEmpty() )
+        {
+            reports.addAll( childReports );
+        }
+
+        if ( parentReports != null )
+        {
+            for ( Iterator i = parentReports.iterator(); i.hasNext(); )
+            {
+                String report = (String) i.next();
+
+                if ( !reports.contains( report ) )
+                {
+                    reports.add( report );
+                }
+            }
+        }
+
+        child.setReports( reports );
+
+        Xpp3Dom childConfiguration = (Xpp3Dom) child.getConfiguration();
+        Xpp3Dom parentConfiguration = (Xpp3Dom) parent.getConfiguration();
+
+        childConfiguration = Xpp3Dom.mergeXpp3Dom( childConfiguration, parentConfiguration );
+
+        child.setConfiguration( childConfiguration );
+    }
+
-        
+
-            
+
-        
+
-            
+
-        
+

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS31 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS43 INS42 INS43 INS42 INS39 INS42 INS25 INS60 INS25 INS43 INS42 INS43 INS42 INS39 INS42 INS25 INS25 INS60 INS60 INS60 INS25 INS43 INS42 INS43 INS42 INS60 INS60 INS60 INS25 INS25 INS21 INS60 INS60 INS21 INS21 INS42 INS42 INS27 INS8 INS43 INS59 INS27 INS8 INS42 INS42 INS27 INS8 INS27 INS8 INS43 INS59 INS39 INS59 INS43 INS59 INS27 INS8 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS27 INS8 INS27 INS8 INS32 INS43 INS59 INS43 INS59 INS7 INS32 INS27 INS27 INS41 INS42 INS42 INS32 INS27 INS38 INS60 INS60 INS24 INS24 INS21 INS21 INS27 INS27 INS41 INS27 INS27 INS21 INS42 INS42 INS32 INS42 INS27 INS42 INS42 INS32 INS27 INS38 INS60 INS60 INS24 INS24 INS21 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS27 INS38 INS21 INS42 INS33 INS24 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS11 INS42 INS32 INS42 INS42 INS42 INS42 INS33 INS42 INS33 INS42 INS42 INS42 INS33 INS32 INS43 INS59 INS43 INS59 INS58 INS32 INS8 INS58 INS32 INS8 INS32 INS32 INS42 INS33 INS42 INS33 INS32 INS33 INS32 INS33 INS32 INS42 INS42 INS27 INS32 INS42 INS42 INS42 INS33 INS32 INS43 INS59 INS43 INS59 INS58 INS32 INS8 INS58 INS32 INS8 INS32 INS32 INS42 INS42 INS42 INS42 INS43 INS42 INS33 INS32 INS32 INS58 INS32 INS8 INS43 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS43 INS59 INS42 INS42 INS60 INS60 INS25 INS43 INS59 INS42 INS42 INS60 INS25 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS43 INS59 INS42 INS42 INS60 INS25 INS43 INS59 INS42 INS42 INS60 INS60 INS25 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS42 INS42 INS60 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS43 INS59 INS38 INS8 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS38 INS8 INS43 INS32 INS42 INS42 INS32 INS43 INS59 INS38 INS8 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS27 INS32 INS60 INS60 INS25 INS25 INS21 INS32 INS42 INS42 INS42 INS11 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS38 INS42 INS60 INS60 INS25 INS21 INS32 INS42 INS40 INS42 INS11 INS42 INS42 INS11 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS32 INS21 INS43 INS32 INS42 INS42 INS38 INS27 INS32 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS27 INS8 INS32 INS42 INS42 INS43 INS32 INS42 INS42 INS32 INS32 INS43 INS32 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS25 INS32 INS42 INS42 INS43 INS32 INS43 INS32 INS42 INS42 INS42 INS32 INS43 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS33 INS21 INS21 INS42 INS27 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS33 INS21 INS21 INS27 INS8 INS42 INS42 INS32 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS7 INS32 INS42 INS33 INS32 INS42 INS42 INS42 INS42 INS43 INS32 INS32 INS7 INS42 INS27 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL42