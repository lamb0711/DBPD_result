o if there was no metadata resolved then don't try to resolve artifacts


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@749535 13f79535-47bb-0310-9956-ffa450edef68

-@Component(role=ArtifactResolver.class)
+@Component(role = ArtifactResolver.class)
-    
+
-    private void resolve( Artifact artifact, List<ArtifactRepository> remoteRepositories,
-                          ArtifactRepository localRepository, boolean force )
+    private void resolve( Artifact artifact, List<ArtifactRepository> remoteRepositories, ArtifactRepository localRepository, boolean force )
-                throw new ArtifactNotFoundException( "System artifact: " + artifact + " not found in path: "
-                    + systemFile, artifact );
+                throw new ArtifactNotFoundException( "System artifact: " + artifact + " not found in path: " + systemFile, artifact );
-                throw new ArtifactNotFoundException( "System artifact: " + artifact + " is not a file: " + systemFile,
-                                                     artifact );
+                throw new ArtifactNotFoundException( "System artifact: " + artifact + " is not a file: " + systemFile, artifact );
-                             
+
-                        throw new ArtifactResolutionException(
-                                                               "Failed to resolve artifact, possibly due to a repository list that is not appropriately equipped for this artifact's metadata.",
+                        throw new ArtifactResolutionException( "Failed to resolve artifact, possibly due to a repository list that is not appropriately equipped for this artifact's metadata.",
-                        throw new ArtifactResolutionException( "Unable to copy resolved artifact for local use: "
-                            + e.getMessage(), artifact, remoteRepositories, e );
+                        throw new ArtifactResolutionException( "Unable to copy resolved artifact for local use: " + e.getMessage(), artifact, remoteRepositories, e );
-                                                          List<ArtifactRepository> remoteRepositories, ArtifactMetadataSource source, ArtifactFilter filter, List<ResolutionListener> listeners,
-                                                          List<ConflictResolver> conflictResolvers )
+                                                         List<ArtifactRepository> remoteRepositories, ArtifactMetadataSource source, ArtifactFilter filter, List<ResolutionListener> listeners,
+                                                         List<ConflictResolver> conflictResolvers )
-        ArtifactResolutionRequest request = new ArtifactResolutionRequest()
-        .setArtifact( originatingArtifact )
-        .setArtifactDependencies( artifacts )
-        .setManagedVersionMap( managedVersions )
-        .setLocalRepository( localRepository )
-        .setRemoteRepostories( remoteRepositories )
-        .setMetadataSource( source )
-        .setFilter( filter )
-        .setListeners( listeners );
-        
+        ArtifactResolutionRequest request = new ArtifactResolutionRequest().setArtifact( originatingArtifact ).setArtifactDependencies( artifacts ).setManagedVersionMap( managedVersions )
+            .setLocalRepository( localRepository ).setRemoteRepostories( remoteRepositories ).setMetadataSource( source ).setFilter( filter ).setListeners( listeners );
+
-    
+
-    {            
+    {
-            
+
-                
+
-            
+
-                
+
-            
+
-        
+
-        for ( Artifact requestedArtifact : result.getRequestedArtifacts() )
+        if ( result.getArtifacts() != null )
-            try
+            for ( Artifact artifact : result.getArtifacts() )
-                resolve( requestedArtifact, remoteRepositories, localRepository );
-                
-                result.addArtifact( requestedArtifact );
-            }
-            catch ( ArtifactNotFoundException anfe )
-            {
-                // These are cases where the artifact just isn't present in any of the remote repositories
-                // because it wasn't deployed, or it was deployed in the wrong place.
+                try
+                {
+                    resolve( artifact, remoteRepositories, localRepository );
-                result.addMissingArtifact( requestedArtifact );                               
-            }
-            catch ( ArtifactResolutionException e )
-            {
-                // This is really a wagon TransferFailedException so something went wrong after we successfully
-                // retrieved the metadata.
+                    result.addArtifact( artifact );
+                }
+                catch ( ArtifactNotFoundException anfe )
+                {
+                    // These are cases where the artifact just isn't present in any of the remote repositories
+                    // because it wasn't deployed, or it was deployed in the wrong place.
-                result.addErrorArtifactException( e );
+                    result.addMissingArtifact( artifact );
+                }
+                catch ( ArtifactResolutionException e )
+                {
+                    // This is really a wagon TransferFailedException so something went wrong after we successfully
+                    // retrieved the metadata.
+
+                    result.addErrorArtifactException( e );
+                }

INS25 INS27 INS8 INS32 INS33 MOV70 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42