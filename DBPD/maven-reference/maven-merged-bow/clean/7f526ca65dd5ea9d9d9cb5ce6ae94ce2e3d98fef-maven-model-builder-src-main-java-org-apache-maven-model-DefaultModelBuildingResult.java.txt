o Extended model builder to report the ids of the models from the lineage and used these ids as keys to pull infos from the building result

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@786838 13f79535-47bb-0310-9956-ffa450edef68

-public class DefaultModelBuildingResult
+class DefaultModelBuildingResult
-    private Model model;
+    private Model effectiveModel;
-    private List<Model> rawModels;
+    private List<String> modelIds;
-    private Map<Model, List<Profile>> activePomProfiles;
+    private Map<String, Model> rawModels;
+
+    private Map<String, List<Profile>> activePomProfiles;
-        rawModels = new ArrayList<Model>();
-        activePomProfiles = new HashMap<Model, List<Profile>>();
+        modelIds = new ArrayList<String>();
+        rawModels = new HashMap<String, Model>();
+        activePomProfiles = new HashMap<String, List<Profile>>();
-        return model;
+        return effectiveModel;
-        this.model = model;
+        this.effectiveModel = model;
+
+        return this;
+    }
+
+    public List<String> getModelIds()
+    {
+        return Collections.unmodifiableList( modelIds );
+    }
+
+    public DefaultModelBuildingResult addModelId( String modelId )
+    {
+        if ( modelId == null )
+        {
+            throw new IllegalArgumentException( "no model identifier specified" );
+        }
+
+        modelIds.add( modelId );
-        return rawModels.get( 0 );
+        return rawModels.get( modelIds.get( 0 ) );
-    public List<Model> getRawModels()
+    public Model getRawModel( String modelId )
-        return Collections.unmodifiableList( rawModels );
+        return rawModels.get( modelId );
-    public DefaultModelBuildingResult setRawModels( List<Model> rawModels )
+    public DefaultModelBuildingResult setRawModel( String modelId, Model rawModel )
-        this.rawModels.clear();
-        if ( rawModels != null )
+        if ( modelId == null )
-            this.rawModels.addAll( rawModels );
+            throw new IllegalArgumentException( "no model identifier specified" );
+        rawModels.put( modelId, rawModel );
+
-    public List<Profile> getActivePomProfiles( Model rawModel )
+    public List<Profile> getActivePomProfiles( String modelId )
-        List<Profile> profiles = this.activePomProfiles.get( rawModel );
-        return ( profiles == null ) ? Collections.<Profile> emptyList() : Collections.unmodifiableList( profiles );
+        List<Profile> profiles = this.activePomProfiles.get( modelId );
+        return ( profiles != null ) ? Collections.unmodifiableList( profiles ) : null;
-    public DefaultModelBuildingResult setActivePomProfiles( Model rawModel, List<Profile> activeProfiles )
+    public DefaultModelBuildingResult setActivePomProfiles( String modelId, List<Profile> activeProfiles )
-        if ( rawModel == null )
+        if ( modelId == null )
-            throw new IllegalArgumentException( "no model specified" );
+            throw new IllegalArgumentException( "no model identifier specified" );
-            this.activePomProfiles.put( rawModel, new ArrayList<Profile>( activeProfiles ) );
+            this.activePomProfiles.put( modelId, new ArrayList<Profile>( activeProfiles ) );
-            this.activePomProfiles.remove( rawModel );
+            this.activePomProfiles.remove( modelId );
-    public DefaultModelBuildingResult addActivePomProfiles( Model rawModel, List<Profile> activeProfiles )
-    {
-        if ( rawModel == null )
-        {
-            throw new IllegalArgumentException( "no model specified" );
-        }
-
-        List<Profile> currentProfiles = this.activePomProfiles.get( rawModel );
-        if ( currentProfiles == null )
-        {
-            currentProfiles = new ArrayList<Profile>( activeProfiles.size() );
-            this.activePomProfiles.put( rawModel, currentProfiles );
-        }
-        currentProfiles.addAll( activeProfiles );
-
-        return this;
-    }
-
+

MOV31 INS23 INS31 INS31 INS31 UPD74 INS59 INS83 INS74 MOV59 UPD74 UPD42 UPD74 MOV74 UPD42 UPD42 MOV43 INS42 MOV83 MOV43 INS42 MOV44 INS8 INS83 MOV43 INS42 INS44 MOV44 INS8 INS83 MOV74 INS42 INS44 INS8 INS44 UPD42 UPD43 INS42 MOV43 INS43 MOV43 INS43 INS43 INS21 INS43 INS43 UPD42 INS25 MOV21 INS41 INS43 INS42 INS41 INS43 INS42 MOV25 MOV21 MOV41 INS43 INS42 INS60 INS41 INS43 INS42 INS25 UPD42 UPD42 MOV42 INS42 INS42 INS7 INS42 INS42 INS42 UPD27 MOV27 INS8 INS32 UPD42 MOV42 INS32 UPD42 MOV42 INS42 MOV74 INS59 INS16 INS42 INS27 INS8 UPD42 INS42 INS14 UPD42 UPD42 INS53 INS42 UPD42 UPD42 INS42 MOV42 INS32 INS42 MOV42 UPD42 MOV42 UPD42 INS42 UPD42 UPD42 INS42 MOV32 INS36 MOV32 INS33 INS42 INS33 INS53 UPD74 INS74 UPD74 UPD42 INS14 UPD42 MOV42 UPD42 MOV42 INS34 UPD42 UPD42 INS27 INS14 INS32 UPD43 MOV43 INS43 MOV43 UPD43 INS43 INS43 INS45 UPD45 INS42 INS33 MOV43 INS45 UPD42 MOV22 INS42 INS42 UPD42 INS42 INS42 UPD42 INS42 INS42 DEL83 DEL83 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42 DEL42 DEL34 DEL32 DEL42 DEL43 DEL74 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL36 DEL42 DEL43 DEL32 DEL16 DEL41 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL52 DEL42 DEL22 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL32 DEL14 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31