o updating for changes in components


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@162924 13f79535-47bb-0310-9956-ffa450edef68

-    // 
+    //
-        "qdox/jars/qdox-1.2.jar",
-        "maven/jars/maven-plugin-2.0-SNAPSHOT.jar"
+        "qdox/jars/qdox-1.2.jar"
+    };
+
+    String[] plexusDeps = new String[]
+    {
+        "classworlds/jars/classworlds-1.1-SNAPSHOT.jar",
+        "plexus/jars/plexus-0.16-SNAPSHOT.jar",
+        "xpp3/jars/xpp3-1.1.3.3.jar",
+        "xstream/jars/xstream-1.0-SNAPSHOT.jar",
+        "maven/jars/maven-artifact-2.0-SNAPSHOT.jar",
+        "maven/jars/wagon-api-1.0-alpha-1-SNAPSHOT.jar",
+        "maven/jars/wagon-http-lightweight-1.0-alpha-1-SNAPSHOT.jar"
-        "maven-artifact",
-        "maven-core",
+        "maven-plugin-tools",
+        "maven-artifact",
+        "maven-core"
+    };
+
+    String[] pluginBuilds = new String[]
+    {
-    
+
+
+        createToolsClassLoader();
+
+        cl.addURL( new File( repoLocal, "maven/jars/maven-plugin-2.0-SNAPSHOT.jar" ).toURL() );
+
+        cl.addURL( new File( repoLocal, "maven/jars/maven-plugin-tools-2.0-SNAPSHOT.jar" ).toURL() );
+
+
+        for ( int i = 0; i < pluginBuilds.length; i++ )
+        {
+            String directory = new File( basedir, pluginBuilds[i] ).getAbsolutePath();
+
+            System.out.println( "Building project in " + directory + " ..." );
+
+            System.out.println( "--------------------------------------------------------------------" );
+
+            System.setProperty( "basedir", directory );
+
+            buildProject( directory );
+
+            reader.reset();
+
+            System.out.println( "--------------------------------------------------------------------" );
+        }
+
+
-        FileUtils.copyFileToDirectory( repoLocal + "/classworlds/jars/classworlds-1.1-SNAPSHOT.jar", core );
-
-        FileUtils.copyFileToDirectory( repoLocal + "/plexus/jars/plexus-0.14-SNAPSHOT.jar", core );
-
-        FileUtils.copyFileToDirectory( repoLocal + "/xpp3/jars/xpp3-1.1.3.3.jar", core );
-
-        FileUtils.copyFileToDirectory( repoLocal + "/xstream/jars/xstream-1.0-SNAPSHOT.jar", core );
+        for ( int i = 0; i < plexusDeps.length; i++ )
+        {
+            FileUtils.copyFileToDirectory( repoLocal + "/" + plexusDeps[i], core );
+        }
-                d.artifactId.equals( "xpp3" ) )
+                d.artifactId.equals( "xpp3" ) ||
+                d.artifactId.equals( "junit" ) ||
+                d.artifactId.equals( "wagon-api" ) ||
+                d.artifactId.equals( "maven-artifact" ) )
-        // ----------------------------------------------------------------------
-        // plugins
-        // ----------------------------------------------------------------------
-
-        String plugins = new File( dist, "plugins" ).getAbsolutePath();
-
-        FileUtils.mkdir( new File( plugins ).getPath() );
-
-        List libs = FileUtils.getFiles( new File( basedir, "maven-plugins" ), "**/target/*.jar", null );
-
-        for ( Iterator i = libs.iterator(); i.hasNext(); )
-        {
-            File f = (File) i.next();
-
-            FileUtils.copyFileToDirectory( f.getAbsolutePath(), plugins );
-        }
-
-        installJar( basedir, repoLocal );
+        if ( !reader.artifactId.equals( "maven-plugin" ) && reader.artifactId.endsWith( "plugin" ) )
+        {
+            installPlugin( basedir, repoLocal );
+        }
+        else
+        {
+            installJar( basedir, repoLocal );
+        }
-    private void generatePluginDescriptor( String sourceDirectory, String outputDirectory, String pom )
+    IsolatedClassLoader cl;
+
+    private void createToolsClassLoader()
-        IsolatedClassLoader cl = new IsolatedClassLoader();
+        cl = new IsolatedClassLoader();
+    }
+    private void generatePluginDescriptor( String sourceDirectory, String outputDirectory, String pom )
+        throws Exception
+    {
-        IsolatedClassLoader cl = new IsolatedClassLoader();
-
-        for ( Iterator i = mbootDependencies.iterator(); i.hasNext(); )
-        {
-            String dependency = (String) i.next();
-
-            File f = new File( repoLocal, dependency );
-
-            cl.addURL( f.toURL() );
-        }
-
+    private void installPlugin( String basedir, String repoLocal )
+        throws Exception
+    {
+        String artifactId = reader.artifactId;
+
+        String version = reader.version;
+
+        String groupId = reader.groupId;
+
+        File jar = new File( repoLocal, "/" + groupId + "/plugins/" + artifactId + "-" + version + ".jar" );
+
+        System.out.println( "Installing Plugin: " + jar );
+
+        FileUtils.copyFile( new File( basedir, BUILD_DIR + "/" + artifactId + "-" + version + ".jar" ), jar );
+    }
+

INS23 INS23 INS23 INS23 INS31 INS31 MOV5 INS59 INS5 INS59 INS5 INS59 MOV21 MOV24 MOV43 INS59 INS83 INS39 INS42 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS42 INS3 INS43 INS85 MOV42 INS3 INS43 INS85 INS42 INS3 INS21 INS21 INS24 INS25 INS42 INS42 INS21 MOV24 INS43 INS42 INS43 INS42 INS42 INS60 INS60 INS60 INS60 INS21 INS21 MOV5 INS4 INS42 INS5 INS4 INS42 INS5 INS4 INS32 INS32 INS58 INS27 INS37 INS8 INS27 INS37 INS8 INS27 INS8 INS8 INS7 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 MOV43 INS59 INS32 INS32 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS43 INS85 MOV45 UPD45 MOV45 UPD45 MOV45 INS45 MOV45 INS43 INS85 MOV45 MOV45 MOV45 MOV45 MOV45 MOV45 MOV45 MOV45 UPD42 MOV42 UPD42 MOV42 INS42 MOV32 MOV42 UPD42 UPD42 INS39 INS59 UPD42 MOV42 INS40 INS42 INS60 MOV21 INS21 MOV21 INS21 INS21 INS21 INS39 INS42 INS40 INS42 MOV21 INS38 INS32 INS21 MOV21 INS42 MOV14 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS14 INS40 INS42 INS27 INS42 INS42 INS14 INS42 INS42 INS42 UPD42 UPD42 INS42 INS34 MOV43 INS59 INS32 INS32 INS32 INS32 INS34 INS32 INS40 INS42 INS45 INS32 MOV43 INS42 INS27 INS45 INS42 INS43 INS42 INS27 UPD42 UPD45 UPD42 INS45 INS42 INS32 INS40 UPD42 INS40 INS42 INS45 UPD42 UPD42 INS45 UPD42 INS42 INS42 UPD42 MOV42 INS42 INS40 INS42 INS45 INS27 INS42 INS32 INS32 INS32 INS40 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS14 UPD42 MOV42 INS45 UPD42 UPD45 INS42 INS45 INS2 INS40 INS42 INS45 INS40 INS42 INS45 INS40 INS42 INS45 MOV43 INS42 INS2 INS42 INS42 INS42 INS42 DEL45 DEL4 DEL3 DEL59 DEL23 DEL42 DEL45 DEL33 DEL42 DEL42 DEL42 DEL45 DEL27 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL8 DEL45 DEL27 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL45 DEL14 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24