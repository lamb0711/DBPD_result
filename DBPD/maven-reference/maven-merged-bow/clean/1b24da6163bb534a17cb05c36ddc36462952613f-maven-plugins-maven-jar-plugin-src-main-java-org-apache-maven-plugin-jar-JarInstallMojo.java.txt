added jar:install goal - needs more testing


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@162778 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.project.MavenProject;
+import org.apache.maven.artifact.installer.ArtifactInstaller;
- * @goalXX install
+ * @goal jar:install
+ *
- *  name="outputDirectory"
- *  type="String"
+ *   name="outputDirectory"
+ *   type="String"
+ *   required="true"
+ *   validator=""
+ *   expression="#maven.build.dir"
+ *   description=""
+ *
+ * @parameter
+ *  name="project"
+ *  type="org.apache.maven.project.MavenProject"
- *  expression="#project.build.directory"
+ *  expression="#project"
+ *
- *  name="basedir"
- *  type="String"
+ *  name="installer"
+ *  type="org.apache.maven.artifact.installer.ArtifactInstaller"
- *  expression="#project.build.directory"
+ *  expression="#component.org.apache.maven.artifact.installer.ArtifactInstaller"
- * @parameter
- *  name="groupId"
- *  type="String"
- *  required="true"
- *  validator=""
- *  expression="#project.groupId"
- *  description=""
- * @parameter
- *  name="artifactId"
- *  type="String"
- *  required="true"
- *  validator=""
- *  expression="#project.artifactId"
- *  description=""
- * @parameter
- *  name="version"
- *  type="String"
- *  required="true"
- *  validator=""
- *  expression="#project.version"
- *  description=""
- * @parameter
- *  name="localRepository"
- *  type="String"
- *  required="true"
- *  validator=""
- *  expression="#project.localRepository"
- *  description=""
- * @parameter
- *  name="pomFile"
- *  type="java.io.File"
- *  required="true"
- *  validator=""
- *  expression="#project.file"
- *  description=""
+ *
-        // ----------------------------------------------------------------------
-        //
-        // ----------------------------------------------------------------------
-        String groupId = ( String ) request.getParameter( "groupId" );
+        File jarFile = new File( outputDirectory , jarName + ".jar" );
-        String artifactId = ( String ) request.getParameter( "artifactId" );
+        MavenProject project = ( MavenProject ) request.getParameter( "project"  );
-        //@todo if we have SNAPSHOT version should we do something special?
+        ArtifactInstaller artifactInstaller = ( ArtifactInstaller ) request.getParameter( "component.org.apache.maven.artifact.installer.ArtifactInstaller"  );
-        String version = ( String ) request.getParameter( "version" );
-
-        File pomFile = ( File ) request.getParameter( "pomFile" );
-
-        String localRepository = ( String ) request.getParameter( "localRepository" );
-
-        File jarFile = new File( outputDirectory, jarName + ".jar" );
-
-        try
-        {
-            String jarPath = groupId + "/poms/" + artifactId + "-" + version + ".pom";
-
-            //here I imagine that also something like this can be made
-            //
-            //  Dependecy = new Dependecy();
-            //  dependecy.setGroupid( groupId )
-            //     ....
-            // MavenArtifact artifact = artifactFactory.createArtifact( dependecy )
-            //
-            // so maven artifact factory will be centralized service for creating
-            // repository paths
-            //
-            // I am not sure if this is good option but it is something which might be considered  
-            installArtifact( jarPath, jarFile, localRepository );
-
-        }
-        catch ( Exception e )
-        {
-            response.setException( e );
-
-            return;
-        }
-
-        try
-        {
-            String pomPath = groupId + "/poms/" + artifactId + "-" + version + ".pom";
-
-            installArtifact( pomPath, pomFile, localRepository );
-        }
-        catch ( Exception e )
-        {
-            // @todo what shall we do when jar was installed but we failed to install pom?
-
-            // response.setException ( e );
-
-        }
-
+        artifactInstaller.install( jarFile, "jar", project );
-    //@todo do we need to crate md5 checksums in local repsitory?
-    //I think it would be nice if any local repository could be
-    // and at any moment in time used as remote repository
-    // so content of both repositories should be symetrical
-    private void installArtifact( String path, File source, String localRepository ) throws Exception
-    {
-
-        File destination = new File( localRepository, path );
-
-
-        // @todo should we use plexus classes?
-        FileUtils.fileCopy( source.getPath(), destination.getPath() );
-
-        // @todo we can use as well file wagon here.
-
-//        FileWagon wagon = new FileWagon();
-//
-//        TransferObserver observer = new ChecksumObserver()
-//
-//        wagon.addTransferObserver( observer );
-//
-//        Repository repository = new Repository( "file://xxxx" );
-//
-//        wagon.connect( repository );
-//
-//        wagon.put( path, file );
-
-        // and wagon has also built-in support for <<artifacts>> which is not used
-    }
-
-

INS26 INS26 INS40 INS40 UPD65 MOV60 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS21 UPD43 UPD43 INS32 UPD42 UPD42 UPD42 UPD42 INS42 UPD42 MOV42 MOV42 INS45 UPD42 MOV42 UPD43 UPD43 UPD42 UPD45 UPD42 UPD45 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL45 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL45 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL45 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL27 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL41 DEL8 DEL12 DEL54 DEL42 DEL43 DEL42 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL31