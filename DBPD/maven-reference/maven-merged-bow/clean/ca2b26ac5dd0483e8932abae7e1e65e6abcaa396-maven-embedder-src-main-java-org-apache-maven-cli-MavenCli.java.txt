fix a lot of checkstyle violations for future m-checkstyle-p 2.13, as
proof of concept for misc violations suppressions strategies
+    @SuppressWarnings( "checkstyle:constantname" )
+    @SuppressWarnings( "checkstyle:constantname" )
-        // Parsing errors can happen during the processing of the arguments and we prefer not having to check if the logger is null
-        // and construct this so we can use an SLF4J logger everywhere.
+        // Parsing errors can happen during the processing of the arguments and we prefer not having to check if
+        // the logger is null and construct this so we can use an SLF4J logger everywhere.
-                Console cons;
-                char[] password;
-                if ( ( cons = System.console() ) != null
-                    && ( password = cons.readPassword( "Master password: " ) ) != null )
+                Console cons = System.console();
+                char[] password = ( cons == null ) ? null : cons.readPassword( "Master password: " );
+                if ( password != null )
-            System.out.println( cipher.encryptAndDecorate( passwd, DefaultSecDispatcher.SYSTEM_PROPERTY_SEC_LOCATION ) );
+            System.out.println( cipher.encryptAndDecorate( passwd,
+                                                           DefaultSecDispatcher.SYSTEM_PROPERTY_SEC_LOCATION ) );
-                Console cons;
-                char[] password;
-                if ( ( cons = System.console() ) != null
-                    && ( password = cons.readPassword( "Password: " ) ) != null )
+                Console cons = System.console();
+                char[] password = ( cons == null ) ? null : cons.readPassword( "Password: " );
+                if ( password != null )
-        if ( cliRequest.commandLine.hasOption( CLIManager.LEGACY_LOCAL_REPOSITORY ) || Boolean.getBoolean( "maven.legacyLocalRepo" ) )
+        if ( cliRequest.commandLine.hasOption( CLIManager.LEGACY_LOCAL_REPOSITORY )
+            || Boolean.getBoolean( "maven.legacyLocalRepo" ) )
-            if ( i == lines.length - 1 && ( showErrors || ( summary.getException() instanceof InternalErrorException ) ) )
+            if ( ( i == lines.length - 1 )
+                && ( showErrors || ( summary.getException() instanceof InternalErrorException ) ) )
+    @SuppressWarnings( "checkstyle:methodlength" )
-            + getSettingsLocation( settingsRequest.getGlobalSettingsSource(), settingsRequest.getGlobalSettingsFile() ) );
+            + getSettingsLocation( settingsRequest.getGlobalSettingsSource(),
+                                   settingsRequest.getGlobalSettingsFile() ) );
-        // configuration. We don't have an easy way to allow a pluggable builder to provide its own configuration parameters
-        // but this is sufficient for now. Ultimately we want components like Builders to provide a way to extend the command
-        // line to accept its own configuration parameters. 
+        // configuration. We don't have an easy way to allow a pluggable builder to provide its own configuration
+        // parameters but this is sufficient for now. Ultimately we want components like Builders to provide a way to
+        // extend the command line to accept its own configuration parameters. 

INS79 INS79 INS79 INS42 INS45 INS42 INS45 INS42 INS45 INS36 INS27 MOV27 MOV32 INS16 INS42 MOV33 INS27 INS36 INS33 MOV32 MOV32 INS16 INS42 MOV33 INS27 INS36 INS33 MOV32 INS42 INS33 INS27 INS42 INS33 DEL42 DEL7 DEL36 DEL33 DEL27 DEL42 DEL7 DEL36 DEL27 DEL27 DEL42 DEL7 DEL36 DEL33 DEL27 DEL42 DEL7 DEL36 DEL27 DEL27