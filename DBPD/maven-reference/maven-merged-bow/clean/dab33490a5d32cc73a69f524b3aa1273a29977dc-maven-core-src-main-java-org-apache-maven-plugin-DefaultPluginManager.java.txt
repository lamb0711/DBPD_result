most basic of field based plugins


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163627 13f79535-47bb-0310-9956-ffa450edef68

+import java.lang.reflect.Field;
-                // TODO: construct request
+                populateParameters( plugin, mojoDescriptor, session );
+    private void populateParameters( Plugin plugin, MojoDescriptor mojoDescriptor, MavenSession session )
+        throws PluginConfigurationException
+    {
+        // TODO: merge eventually, just to avoid reuse
+        // TODO: probably want to use the plexus component configurator... then do the additional processing in
+        //  createParameters afterwards. Not sure how we might find files that are nested in other objects... perhaps
+        //  we add a "needs translation" to the mojo so such types can be translated (implementing some interface) and
+        //  address their own file objects
+        Map values = createParameters( mojoDescriptor, session );
+
+        List parameters = mojoDescriptor.getParameters();
+
+        for ( Iterator i = parameters.iterator(); i.hasNext(); )
+        {
+            Parameter param = (Parameter) i.next();
+            String name = param.getName();
+            Object value = values.get( name );
+
+            Class clazz = plugin.getClass();
+            try
+            {
+                Field f = clazz.getDeclaredField( name );
+                boolean accessible = f.isAccessible();
+                if ( !accessible )
+                {
+                    f.setAccessible( true );
+                }
+
+                f.set( plugin, value );
+
+                if ( !accessible )
+                {
+                    f.setAccessible( false );
+                }
+            }
+            catch ( NoSuchFieldException e )
+            {
+                throw new PluginConfigurationException( "Unable to set field '" + name + "' on '" + clazz + "'" );
+            }
+            catch ( IllegalAccessException e )
+            {
+                throw new PluginConfigurationException( "Unable to set field '" + name + "' on '" + clazz + "'" );
+            }
+        }
+    }
+
-            for ( Iterator it = context.getProject().getArtifacts().iterator(); it.hasNext(); )
-            {
-                Artifact artifact = (Artifact) it.next();
+        for ( Iterator it = context.getProject().getArtifacts().iterator(); it.hasNext(); )
+        {
+            Artifact artifact = (Artifact) it.next();
-                artifactResolver.resolve( artifact, context.getRemoteRepositories(), context.getLocalRepository() );
-            }
+            artifactResolver.resolve( artifact, context.getRemoteRepositories(), context.getLocalRepository() );
+        }

INS26 INS40 INS31 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS60 INS24 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS58 INS32 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS59 INS42 INS42 INS60 INS60 INS60 INS60 INS54 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS8 INS12 INS12 INS21 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS60 INS60 INS25 INS21 INS25 INS44 INS8 INS44 INS8 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS39 INS59 INS38 INS8 INS32 INS38 INS8 INS43 INS42 INS53 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS21 INS42 INS14 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS43 INS27 INS43 INS27 INS42 INS42 INS9 INS42 INS42 INS9 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45