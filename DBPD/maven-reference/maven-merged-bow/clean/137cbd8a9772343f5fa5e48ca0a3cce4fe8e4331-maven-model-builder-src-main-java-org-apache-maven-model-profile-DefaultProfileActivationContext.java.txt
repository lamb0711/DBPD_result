Merge branch 'trunk' into eclipse-aether

Conflicts:
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultArtifactDescriptorReader.java
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionRangeResolver.java
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java
	maven-aether-provider/src/test/java/org/apache/maven/repository/internal/AbstractRepositoryTestCase.java
	maven-aether-provider/src/test/java/org/apache/maven/repository/internal/DefaultVersionResolverTest.java
	maven-core/src/main/java/org/apache/maven/DefaultMaven.java
	maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultLegacySupport.java
	maven-core/src/main/java/org/apache/maven/plugin/prefix/PluginPrefixResult.java
	maven-embedder/src/main/java/org/apache/maven/cli/transfer/Slf4jMavenTransferListener.java
	pom.xml
	src/site/site.xml

+import java.util.Enumeration;
+import java.util.HashMap;
- * 
+ *
+    private Map<String, String> projectProperties = Collections.emptyMap();
+
-     * 
+     *
-     * 
+     *
-     * 
+     *
-    @SuppressWarnings( "unchecked" )
+    @SuppressWarnings("unchecked")
-     * 
+     *
-     * 
+     *
-    @SuppressWarnings( "unchecked" )
+    @SuppressWarnings("unchecked")
-     * 
+     *
-     * 
+     *
-     *            happens in the context of metadata retrieval rather than project building.
+     *                         happens in the context of metadata retrieval rather than project building.
+    public Map<String, String> getProjectProperties()
+    {
+        return projectProperties;
+    }
+
+    public DefaultProfileActivationContext setProjectProperties( Properties projectProperties )
+    {
+        if ( projectProperties != null )
+        {
+
+            this.projectProperties = Collections.unmodifiableMap( toMap( projectProperties ) );
+        }
+        else
+        {
+            this.projectProperties = Collections.emptyMap();
+        }
+
+        return this;
+    }
+
+    private Map<String, String> toMap( Properties properties )
+    {
+        if ( properties == null )
+        {
+            return Collections.emptyMap();
+        }
+        Map<String, String> map = new HashMap<String, String>();
+        Enumeration keys = properties.keys();
+        while ( keys.hasMoreElements() )
+        {
+            String key = (String) keys.nextElement();
+            map.put( key, properties.getProperty( key ) );
+        }
+        return map;
+    }

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS31 INS83 INS74 INS59 INS83 INS74 INS42 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS74 INS42 INS44 INS8 INS43 INS43 INS43 INS42 INS32 INS43 INS43 INS43 INS41 INS42 INS43 INS42 INS25 INS41 INS43 INS43 INS43 INS43 INS42 INS25 INS60 INS60 INS61 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS8 INS8 INS52 INS42 INS42 INS42 INS42 INS27 INS8 INS74 INS59 INS43 INS59 INS32 INS8 INS42 INS42 INS33 INS21 INS21 INS42 INS33 INS41 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS60 INS21 INS7 INS7 INS32 INS42 INS42 INS42 INS74 INS42 INS42 INS43 INS59 INS32 INS22 INS32 INS22 INS32 INS42 INS42 INS43 INS43 INS43 INS42 INS42 INS11 INS42 INS42 INS42 INS32 INS52 INS42 INS42 INS42 INS32 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42