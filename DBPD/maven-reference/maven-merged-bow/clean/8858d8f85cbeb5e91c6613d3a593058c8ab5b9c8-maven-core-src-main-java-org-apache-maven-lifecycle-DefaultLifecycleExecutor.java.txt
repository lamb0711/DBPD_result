PR: MNG-629
preparing for executing the lifecycle by passing reports into the site plugin, rather than extracting them from the plugin manager

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@290634 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.ReportPlugin;
+import org.apache.maven.model.ReportSet;
+import org.apache.maven.reporting.MavenReport;
+            if ( mojoDescriptor.isRequiresReports() )
+            {
+                List reports = getReports( project, mojoExecution, session );
+
+                mojoExecution.setReports( reports );
+            }
+
+    private List getReports( MavenProject project, MojoExecution mojoExecution, MavenSession session )
+        throws ArtifactResolutionException, LifecycleExecutionException
+    {
+        List reportPlugins = project.getReportPlugins();
+
+        if ( project.getModel().getReports() != null )
+        {
+            getLogger().error(
+                "DEPRECATED: Plugin contains a <reports/> section: this is IGNORED - please use <reporting/> instead." );
+        }
+
+        List reports = new ArrayList();
+        if ( reportPlugins != null )
+        {
+            for ( Iterator it = reportPlugins.iterator(); it.hasNext(); )
+            {
+                ReportPlugin reportPlugin = (ReportPlugin) it.next();
+
+                List reportSets = reportPlugin.getReportSets();
+
+                try
+                {
+                    if ( reportSets == null || reportSets.isEmpty() )
+                    {
+                        reports.addAll( getReports( reportPlugin, null, project, session, mojoExecution ) );
+                    }
+                    else
+                    {
+                        for ( Iterator j = reportSets.iterator(); j.hasNext(); )
+                        {
+                            ReportSet reportSet = (ReportSet) j.next();
+
+                            reports.addAll( getReports( reportPlugin, reportSet, project, session, mojoExecution ) );
+                        }
+                    }
+                }
+                catch ( PluginManagerException e )
+                {
+                    throw new LifecycleExecutionException( "Error getting reports", e );
+                }
+                catch ( PluginVersionResolutionException e )
+                {
+                    throw new LifecycleExecutionException( "Error getting reports", e );
+                }
+            }
+        }
+        return reports;
+    }
+
+    private List getReports( ReportPlugin reportPlugin, ReportSet reportSet, MavenProject project, MavenSession session,
+                             MojoExecution mojoExecution )
+        throws PluginManagerException, PluginVersionResolutionException, ArtifactResolutionException
+    {
+        PluginDescriptor pluginDescriptor = pluginManager.verifyReportPlugin( reportPlugin, project, session );
+
+        List reports = new ArrayList();
+        for ( Iterator i = pluginDescriptor.getMojos().iterator(); i.hasNext(); )
+        {
+            MojoDescriptor mojoDescriptor = (MojoDescriptor) i.next();
+
+            // TODO: check ID is correct for reports
+            // if the POM configured no reports, give all from plugin
+            if ( reportSet == null || reportSet.getReports().contains( mojoDescriptor.getGoal() ) )
+            {
+                String id = null;
+                if ( reportSet != null )
+                {
+                    id = reportSet.getId();
+                }
+
+                MojoExecution reportExecution = new MojoExecution( mojoDescriptor, id );
+
+                MavenReport reportMojo = pluginManager.getReport( project, reportExecution, session );
+
+                // Comes back null if it was a plugin, not a report - these are mojos in the reporting plugins that are not reports
+                if ( reportMojo != null )
+                {
+                    reports.add( reportMojo );
+                    mojoExecution.addMojoExecution( reportExecution );
+                }
+            }
+        }
+        return reports;
+    }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS83 INS43 INS42 INS44 INS44 INS44 INS43 INS43 INS8 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS43 INS43 INS43 INS8 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS60 INS25 INS60 INS25 INS41 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS60 INS60 INS24 INS41 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS58 INS32 INS8 INS42 INS25 INS42 INS42 INS32 INS32 INS33 INS21 INS42 INS42 INS14 INS42 INS33 INS24 INS42 INS42 INS32 INS42 INS42 INS14 INS43 INS59 INS42 INS42 INS60 INS25 INS32 INS8 INS42 INS42 INS32 INS42 INS32 INS43 INS58 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS32 INS43 INS59 INS27 INS8 INS42 INS42 INS60 INS21 INS42 INS42 INS32 INS42 INS45 INS42 INS43 INS59 INS42 INS42 INS60 INS60 INS54 INS42 INS32 INS42 INS42 INS42 INS11 INS27 INS32 INS60 INS25 INS60 INS60 INS25 INS43 INS59 INS32 INS42 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS8 INS12 INS12 INS42 INS42 INS43 INS32 INS42 INS33 INS32 INS42 INS32 INS43 INS59 INS27 INS8 INS43 INS59 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS25 INS44 INS8 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS33 INS21 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS27 INS8 INS8 INS43 INS42 INS53 INS43 INS42 INS53 INS7 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS27 INS32 INS21 INS24 INS42 INS14 INS42 INS14 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS32 INS58 INS32 INS8 INS43 INS45 INS42 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS42 INS42 INS60 INS21 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42