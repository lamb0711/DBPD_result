let bootstrap handle exclusions

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@289409 13f79535-47bb-0310-9956-ffa450edef68

+    private boolean insideExclusion;
+
+    private Exclusion currentExclusion;
+
-            addDependencies( p.getDependencies(), parentDependencies, null );
+            addDependencies( p.getDependencies(), parentDependencies, null, Collections.EMPTY_SET );
-            addDependencies( p.getManagedDependencies(), managedDependencies, null );
+            addDependencies( p.getManagedDependencies(), managedDependencies, null, Collections.EMPTY_SET );
+        else if ( rawName.equals( "exclusion" ) )
+        {
+            currentDependency.addExclusion( currentExclusion );
+            insideExclusion = false;
+        }
-            if ( rawName.equals( "id" ) )
+            if ( insideExclusion )
+            {
+                if ( rawName.equals( "groupId" ) )
+                {
+                    currentExclusion.setGroupId( getBodyText() );
+                }
+                else if ( rawName.equals( "artifactId" ) )
+                {
+                    currentExclusion.setArtifactId( getBodyText() );
+                }
+            }
+            else if ( rawName.equals( "id" ) )
+            else if ( rawName.equals( "exclusion" ) )
+            {
+                insideExclusion = true;
+
+                currentExclusion = new Exclusion();
+            }
-                    throw new NullPointerException( "[" + groupId + ":" + artifactId +":" + packaging + ":" + version + "] " +
-                            "Dependency " + dependency.getConflictId() + " is missing a version, and nothing is found in dependencyManagement. ");
+                    throw new NullPointerException( "[" + groupId + ":" + artifactId + ":" + packaging + ":" + version +
+                        "] " + "Dependency " + dependency.getConflictId() +
+                        " is missing a version, and nothing is found in dependencyManagement. " );
-                addDependencies( p.getDependencies(), transitiveDependencies, dependency.getScope() );
+                addDependencies( p.getDependencies(), transitiveDependencies, dependency.getScope(),
+                                 dependency.getExclusions() );
-    private void addDependencies( Collection dependencies, Map target, String inheritedScope )
+    private void addDependencies( Collection dependencies, Map target, String inheritedScope, Set excluded )
-            if ( !hasDependency( d, target ) )
+            if ( !hasDependency( d, target ) && !excluded.contains( d.getConflictId() ) )

INS23 INS23 INS83 INS39 INS59 INS83 INS43 INS59 INS44 INS42 INS42 INS42 INS43 INS42 INS42 INS25 INS32 INS8 MOV25 INS27 INS40 INS40 INS42 INS42 INS45 INS21 INS21 MOV38 INS38 INS32 INS7 INS32 INS42 INS42 INS42 INS42 INS9 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS25 INS42 INS8 MOV25 INS25 INS32 INS8 INS25 INS42 INS42 INS45 INS21 INS32 INS8 INS32 INS42 INS42 INS45 INS21 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS25 INS32 INS8 INS42 INS42 INS45 INS21 INS21 INS7 INS7 INS42 INS9 INS42 INS14 INS43 INS42