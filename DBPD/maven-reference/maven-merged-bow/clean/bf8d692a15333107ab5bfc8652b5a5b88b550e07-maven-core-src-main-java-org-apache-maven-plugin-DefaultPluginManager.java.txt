o reverting fix for MNG-1323, breaks trunk horribly when everything is clean. I ran the ITs after Piotr did but doing so with everything clean  doesn't work. Time for Hudson.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@578582 13f79535-47bb-0310-9956-ffa450edef68

-    
-    protected PluginRealmManager pluginRealmManager;
+        ClassRealm pluginRealm = container.getComponentRealm( projectPlugin.getKey() );
-    	ClassRealm componentRealm = pluginRealmManager.getOrCreateRealm(projectPlugin, pluginArtifact, artifacts);
-    	
-//        ClassRealm pluginRealm = container.getComponentRealm( projectPlugin.getKey()+":"+projectPlugin.getVersion() );
+        if ( ( pluginRealm != null ) && ( pluginRealm != container.getContainerRealm() ) )
+        {
+            getLogger().debug(
+                               "Realm already exists for: " + projectPlugin.getKey()
+                                               + ". Skipping addition..." );
+            // we've already discovered this plugin, and configured it, so skip it this time.
-//        if ( ( pluginRealm != null ) && ( pluginRealm != container.getContainerRealm() ) )
-//        {
-//            getLogger().debug(
-//                               "Realm already exists for: " + projectPlugin.getKey()
-//                                               + ". Skipping addition..." );
-//            // we've already discovered this plugin, and configured it, so skip it this time.
-//
-//            return;
-//        }
-//
-//        // ----------------------------------------------------------------------------
-//        // Realm creation for a plugin
-//        // ----------------------------------------------------------------------------
-//
-//        ClassRealm componentRealm = null;
-//
-//        try
-//        {
-//            List jars = new ArrayList();
-//
-//            for ( Iterator i = artifacts.iterator(); i.hasNext(); )
-//            {
-//                Artifact artifact = (Artifact) i.next();
-//
-//                jars.add( artifact.getFile() );
-//            }
-//
-//            jars.add( pluginArtifact.getFile() );
-//
-//            // Now here we need the artifact coreArtifactFilter stuff
-//
-//            componentRealm = container.createComponentRealm( projectPlugin.getKey()+projectPlugin.getVersion(), jars );
-//
-//            // adding for MNG-3012 to try to work around problems with Xpp3Dom (from plexus-utils)
-//            // spawning a ClassCastException when a mojo calls plugin.getConfiguration() from maven-model...
-//            componentRealm.importFrom( componentRealm.getParentRealm().getId(),
-//                                       Xpp3Dom.class.getName() );
-//            componentRealm.importFrom( componentRealm.getParentRealm().getId(),
-//                                       "org.codehaus.plexus.util.xml.pull" );
-//
-//            // Adding for MNG-2878, since maven-reporting-impl was removed from the
-//            // internal list of artifacts managed by maven, the classloader is different
-//            // between maven-reporting-impl and maven-reporting-api...so this resource
-//            // is not available from the AbstractMavenReport since it uses:
-//            // getClass().getResourceAsStream( "/default-report.xml" )
-//            // (maven-reporting-impl version 2.0; line 134; affects: checkstyle plugin, and probably others)
-//            componentRealm.importFrom( componentRealm.getParentRealm().getId(), "/default-report.xml" );
-//        }
-//        catch ( PlexusContainerException e )
-//        {
-//            throw new PluginManagerException( "Failed to create realm for plugin '" + projectPlugin
-//                                              + ".", e );
-//        }
-//        catch ( NoSuchRealmException e )
-//        {
-//            throw new PluginManagerException(
-//                                              "Failed to import Xpp3Dom from parent realm for plugin: '"
-//                                                              + projectPlugin + ".", e );
-//        }
+            return;
+        }
+
+        // ----------------------------------------------------------------------------
+        // Realm creation for a plugin
+        // ----------------------------------------------------------------------------
+
+        ClassRealm componentRealm = null;
+
+        try
+        {
+            List jars = new ArrayList();
+
+            for ( Iterator i = artifacts.iterator(); i.hasNext(); )
+            {
+                Artifact artifact = (Artifact) i.next();
+
+                jars.add( artifact.getFile() );
+            }
+
+            jars.add( pluginArtifact.getFile() );
+
+            // Now here we need the artifact coreArtifactFilter stuff
+
+            componentRealm = container.createComponentRealm( projectPlugin.getKey(), jars );
+
+            // adding for MNG-3012 to try to work around problems with Xpp3Dom (from plexus-utils)
+            // spawning a ClassCastException when a mojo calls plugin.getConfiguration() from maven-model...
+            componentRealm.importFrom( componentRealm.getParentRealm().getId(),
+                                       Xpp3Dom.class.getName() );
+            componentRealm.importFrom( componentRealm.getParentRealm().getId(),
+                                       "org.codehaus.plexus.util.xml.pull" );
+
+            // Adding for MNG-2878, since maven-reporting-impl was removed from the
+            // internal list of artifacts managed by maven, the classloader is different
+            // between maven-reporting-impl and maven-reporting-api...so this resource
+            // is not available from the AbstractMavenReport since it uses:
+            // getClass().getResourceAsStream( "/default-report.xml" )
+            // (maven-reporting-impl version 2.0; line 134; affects: checkstyle plugin, and probably others)
+            componentRealm.importFrom( componentRealm.getParentRealm().getId(), "/default-report.xml" );
+        }
+        catch ( PlexusContainerException e )
+        {
+            throw new PluginManagerException( "Failed to create realm for plugin '" + projectPlugin
+                                              + ".", e );
+        }
+        catch ( NoSuchRealmException e )
+        {
+            throw new PluginManagerException(
+                                              "Failed to import Xpp3Dom from parent realm for plugin: '"
+                                                              + projectPlugin + ".", e );
+        }

INS60 INS25 INS60 INS54 MOV43 INS59 INS27 INS8 INS43 INS59 INS8 INS12 INS12 INS42 INS32 INS36 INS36 INS21 INS41 INS42 INS42 INS33 INS60 INS24 INS21 INS21 INS21 INS21 INS21 INS44 INS8 INS44 INS8 INS42 INS42 INS32 INS27 INS27 INS32 INS43 INS59 INS58 INS32 INS8 INS32 INS7 INS32 INS32 INS32 INS43 INS42 INS53 INS43 INS42 INS53 INS42 INS42 INS42 INS33 INS42 INS32 INS32 INS42 INS27 INS42 INS42 INS14 INS43 INS59 INS42 INS42 INS60 INS21 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS45 INS42 INS42 INS32 INS45 INS42 INS14 INS42 INS14 INS42 UPD42 MOV42 INS42 INS45 INS32 INS45 INS43 INS42 INS42 INS32 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS57 INS42 INS32 INS42 INS32 INS42 INS43 INS27 INS42 INS43 INS27 INS42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60