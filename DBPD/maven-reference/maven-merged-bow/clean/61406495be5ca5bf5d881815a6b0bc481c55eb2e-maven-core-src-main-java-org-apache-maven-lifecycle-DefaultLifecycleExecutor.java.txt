o Refactored the MavenSettings code into the settings.mdo/Settings class.

o Added code to cache the active proxy and profile inside the Settings instance for quicker lookup.

o Added a method to initialize a new active profile for a Settings instance in the event one didn't exist.

o Started adding offline mode. So far, I've implemented:

  - Warning when a mojo declares a requirement for connectivity, but we're offline.

  - INFO message stating when maven is running in offline mode.

  - Addition to the Profile class in o.a.m.settings package to allow specification of offline mode by declaring: <offline>true</offline>


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163969 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.settings.Settings;
-     * @param mavenSession
+     * @param session
-    private void processPluginPhases( Plugin plugin, MavenSession mavenSession, Map phaseMap )
+    private void processPluginPhases( Plugin plugin, MavenSession session, Map phaseMap )
-        pluginManager.verifyPlugin( groupId, artifactId, mavenSession );
+        pluginManager.verifyPlugin( groupId, artifactId, session );
-                configureMojo( mojoDescriptor, phaseMap );
+                configureMojo( mojoDescriptor, phaseMap, session.getSettings() );
-                configureMojo( mojoDescriptor, phaseMap );
+                configureMojo( mojoDescriptor, phaseMap, session.getSettings() );
-    private void configureMojo( MojoDescriptor mojoDescriptor, Map phaseMap )
+    private void configureMojo( MojoDescriptor mojoDescriptor, Map phaseMap, Settings settings )
-        if ( mojoDescriptor.getPhase() != null )
+        if( settings.getActiveProfile().isOffline() && mojoDescriptor.requiresOnline() )
-            Phase phase = (Phase) phaseMap.get( mojoDescriptor.getPhase() );
+            String goal = mojoDescriptor.getGoal();
+            getLogger().warn( goal + " requires online mode, but maven is currently offline. Disabling " + goal + "." );
+        }
+        else
+        {
+            if ( mojoDescriptor.getPhase() != null )
+            {
+                Phase phase = (Phase) phaseMap.get( mojoDescriptor.getPhase() );
-            phase.getGoals().add( mojoDescriptor.getId() );
+                phase.getGoals().add( mojoDescriptor.getId() );
+            }
-        configureMojo( mojoDescriptor, phaseMap );
+        configureMojo( mojoDescriptor, phaseMap, session.getSettings() );

INS26 INS40 INS44 INS8 UPD42 INS43 INS42 INS25 UPD42 INS42 INS27 INS8 MOV8 UPD42 INS32 INS32 INS60 INS21 INS32 INS32 INS42 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS27 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS32 INS32 INS42 INS42 INS42 INS42