o fixed conditions under which error emails should be sent
o fixed emailing to contain a link to the report
o reformatted using IDEA
o removed directory tracking from transactions, b/c undo order is too tricky for now
o adjusted code to maven-artifact (post maven-project creation) changes.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@164705 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.construction.ArtifactConstructionSupport;
-import org.apache.maven.model.Model;
-import org.apache.maven.model.io.xpp3.MavenXpp3Reader;
+import org.apache.maven.artifact.factory.ArtifactFactory;
-import org.codehaus.plexus.util.IOUtil;
-import java.io.FileReader;
+import java.util.Collections;
+import java.util.Iterator;
+import java.util.StringTokenizer;
- * 
+ *
- * 
+ *
- * 
+ *
-public class DefaultArtifactDiscoverer
-    extends AbstractArtifactDiscoverer
+public class DefaultArtifactDiscoverer extends AbstractArtifactDiscoverer
-    private ArtifactConstructionSupport artifactConstructionSupport = new ArtifactConstructionSupport();
+    private ArtifactFactory artifactFactory;
-    public List discoverArtifacts( File repositoryBase, Reporter reporter, String blacklistedPatterns, PathLister excludeLister, PathLister kickoutLister )
+    public List discoverArtifacts( File repositoryBase, Reporter reporter, String blacklistedPatterns,
+                                   PathLister excludeLister, PathLister kickoutLister )
-        
+
-        int lastDot = path.lastIndexOf( '.' );
-
-        if ( lastDot < 0 )
+        List pathParts = new ArrayList();
+        StringTokenizer st = new StringTokenizer( path, "/" );
+        while ( st.hasMoreTokens() )
-            kickoutLister.addPath(path);
+            pathParts.add( st.nextToken() );
-        else
+
+        Collections.reverse( pathParts );
+
+        int currentPart = 0;
+
+        //discard the actual artifact filename.
+        pathParts.remove( 0 );
+
+        // the next one is the version.
+        String version = (String) pathParts.get( 0 );
+        pathParts.remove( 0 );
+
+        // the next one is the artifactId.
+        String artifactId = (String) pathParts.get( 0 );
+        pathParts.remove( 0 );
+
+        // the remaining are the groupId.
+        StringBuffer groupBuffer = new StringBuffer();
+
+        boolean firstPart = true;
+        for ( Iterator it = pathParts.iterator(); it.hasNext(); )
-            String pomPath = path.substring( 0, lastDot ) + ".pom";
+            String part = (String) it.next();
-            File pomFile = new File( repositoryBase, pomPath );
-            if ( pomFile.exists() )
+            groupBuffer.append( part );
+
+            if ( firstPart )
-                FileReader pomReader = null;
-                try
-                {
-                    pomReader = new FileReader( pomFile );
-                    MavenXpp3Reader modelReader = new MavenXpp3Reader();
-
-                    Model model = modelReader.read( pomReader );
-
-                    result = artifactConstructionSupport.createArtifact( model.getGroupId(), model.getArtifactId(),
-                                                                         model.getVersion(), Artifact.SCOPE_RUNTIME,
-                                                                         model.getPackaging() );
-                }
-                finally
-                {
-                    IOUtil.close( pomReader );
-                }
+                firstPart = false;
-            else
+            else if ( it.hasNext() )
-                kickoutLister.addPath(path);
+                groupBuffer.append( "." );
+        result = artifactFactory.createArtifact( groupBuffer.toString(), artifactId, version, Artifact.SCOPE_RUNTIME,
+                                                 "jar" );
+

MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 UPD40 UPD43 UPD42 UPD42 INS60 INS61 INS21 INS60 INS21 MOV60 INS21 MOV60 MOV21 MOV60 INS60 INS24 MOV21 INS43 INS59 INS43 INS32 INS8 INS32 INS39 INS59 INS32 MOV43 INS32 UPD43 INS32 UPD43 INS39 INS59 INS58 INS32 INS8 INS7 INS42 INS42 INS14 INS42 UPD42 INS14 INS42 INS42 MOV21 INS42 INS42 INS42 INS42 INS34 UPD42 MOV42 UPD42 MOV42 MOV34 UPD42 INS11 UPD42 MOV42 UPD42 MOV42 INS34 UPD42 INS42 INS11 INS42 INS42 INS34 UPD42 UPD42 INS42 INS9 INS43 INS59 INS42 INS42 INS60 INS21 INS25 INS42 INS32 INS43 INS43 INS42 INS45 INS43 INS32 INS43 INS32 UPD43 UPD42 MOV42 UPD42 MOV42 MOV32 INS43 INS59 INS32 INS42 INS8 INS25 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS40 INS45 INS42 INS42 UPD42 UPD42 INS32 UPD42 MOV42 INS42 INS42 INS34 INS42 INS42 INS42 INS34 UPD42 UPD42 UPD42 INS42 INS42 INS11 UPD42 MOV42 UPD42 MOV42 INS42 INS21 INS32 INS8 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS43 INS32 INS7 UPD42 MOV42 UPD42 MOV42 MOV21 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS9 UPD42 UPD42 INS45 DEL40 DEL26 DEL42 DEL43 DEL14 DEL39 DEL42 DEL42 DEL13 DEL32 DEL42 DEL43 DEL43 DEL42 DEL42 DEL14 DEL42 DEL33 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL42 DEL42 DEL32 DEL42 DEL34 DEL27 DEL8 DEL42 DEL42 DEL32 DEL45 DEL27 DEL59 DEL60 DEL32 DEL43 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL40 DEL32 DEL32 DEL7 DEL21 DEL8 DEL8 DEL54 DEL8 DEL8 DEL25 DEL8 DEL25