partially fixing problem with plugin-dependency loading...now, we're including maven-plugin-api in the plugin realm somehow, which means the standard artifact filter isn't working.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@497696 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.ArtifactUtils;
+import java.util.LinkedHashSet;
+        getLogger().debug( "Realm for plugin: " + plugin.getKey() + ":\n" + componentRealm );
+        
-        Set resolved = result.getArtifacts();
-
+        List resolved = new ArrayList( result.getArtifacts() );
+        
+        getLogger().info( "Main plugin artifacts: " + resolved );
+        
-
+        
+        getLogger().info( "After adding project-level plugin dependencies: " + resolved );
+        
-        List allResolved = new ArrayList( resolved.size() + unresolved.size() );
+        Set allResolved = new LinkedHashSet( resolved.size() + unresolved.size() );
+        
+        Set seenVersionlessKeys = new HashSet();
+        
+        for ( Iterator it = resolved.iterator(); it.hasNext(); )
+        {
+            Artifact resolvedArtifact = (Artifact) it.next();
+            
+            String versionlessKey = ArtifactUtils.versionlessKey( resolvedArtifact );
+            if ( !seenVersionlessKeys.contains( versionlessKey ) )
+            {
+                allResolved.add( resolvedArtifact );
+                seenVersionlessKeys.add( versionlessKey );
+            }
+            else
+            {
+                getLogger().info( "NOT including: " + resolvedArtifact.getId() + " in plugin dependencies." );
+            }
+        }
+        
+        for ( Iterator it = unresolved.iterator(); it.hasNext(); )
+        {
+            Artifact unresolvedArtifact = (Artifact) it.next();
+            
+            String versionlessKey = ArtifactUtils.versionlessKey( unresolvedArtifact );
+            if ( !seenVersionlessKeys.contains( versionlessKey ) )
+            {
+                allResolved.add( unresolvedArtifact );
+                seenVersionlessKeys.add( versionlessKey );
+            }
+            else
+            {
+                getLogger().info( "NOT including: " + unresolvedArtifact.getId() + " in plugin dependencies." );
+            }
+        }
+        
+        getLogger().info( "Using the following artifacts for classpath of: " + pluginArtifact.getId() + ":\n\n" + allResolved.toString().replace( ',', '\n' ) );
-        allResolved.addAll( resolved );
-
-        allResolved.addAll( unresolved );
-
-        return resolved;
+        return allResolved;
-            plugin = (Mojo) container.lookup( Mojo.ROLE, mojoDescriptor.getRoleHint() );
+            plugin = (Mojo) container.lookup( Mojo.ROLE, mojoDescriptor.getRoleHint(), realm );

INS26 INS26 INS40 INS40 INS21 INS21 INS21 INS60 INS24 INS24 INS21 INS32 MOV43 INS32 INS32 MOV43 INS43 INS59 INS58 INS32 INS8 INS58 INS32 INS8 INS32 UPD42 INS32 INS42 INS27 INS14 INS32 INS42 INS27 INS32 INS42 INS27 INS42 INS42 INS14 INS43 INS59 INS42 INS42 INS60 INS60 INS25 INS43 INS59 INS42 INS42 INS60 INS60 INS25 INS32 INS42 INS27 INS42 INS45 INS32 INS45 INS42 INS43 MOV32 INS42 INS45 INS42 INS42 INS45 INS42 UPD43 INS43 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS38 INS8 INS8 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS38 INS8 INS8 INS42 INS45 INS32 INS45 INS32 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS32 MOV21 INS21 INS21 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS32 MOV21 INS21 INS21 INS42 INS42 INS32 INS42 INS13 INS13 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS32 INS42 INS27 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS32 INS42 INS27 INS42 INS42 INS45 INS32 INS45 INS42 INS45 INS32 INS45 INS42 INS42 INS42 INS42