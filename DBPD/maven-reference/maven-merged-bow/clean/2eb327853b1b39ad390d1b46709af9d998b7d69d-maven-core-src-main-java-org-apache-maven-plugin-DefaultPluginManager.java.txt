we do not currently support concurrent versions of a plugin a build as there is no access to the resolved version outside of the artifact container

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@169398 13f79535-47bb-0310-9956-ffa450edef68

+    private Set pluginsInProcess = new HashSet();
+
-    private PluginDescriptor getPluginDescriptor( String groupId, String artifactId, String version )
-    {
-        return (PluginDescriptor) pluginDescriptors.get(
-            PluginDescriptor.constructPluginKey( groupId, artifactId, version ) );
-    }
-
-    private PluginDescriptor getPluginDescriptor( String prefix )
-    {
-        return (PluginDescriptor) pluginDescriptorsByPrefix.get( prefix );
-    }
-
-    // ----------------------------------------------------------------------
-    //
-    // ----------------------------------------------------------------------
-
-    private Set pluginsInProcess = new HashSet();
-
-            String key = pluginDescriptor.getId();
+//            String key = pluginDescriptor.getId();
+            // TODO: see comment in getPluginDescriptor
+            String key = pluginDescriptor.getGroupId() + ":" + pluginDescriptor.getArtifactId();
+    private PluginDescriptor getPluginDescriptor( String groupId, String artifactId, String version )
+    {
+//        String key = PluginDescriptor.constructPluginKey( groupId, artifactId, version );
+        // TODO: include version, but can't do this in the plugin manager as it is not resolved to the right version
+        // at that point. Instead, move the duplication check to the artifact container, or store it locally based on
+        // the unresolved version?
+        String key = groupId + ":" + artifactId;
+        return (PluginDescriptor) pluginDescriptors.get( key );
+    }
+
+    private PluginDescriptor getPluginDescriptor( String prefix )
+    {
+        return (PluginDescriptor) pluginDescriptorsByPrefix.get( prefix );
+    }
+
-        return pluginDescriptors.containsKey( PluginDescriptor.constructPluginKey( groupId, artifactId, version ) );
+//        String key = PluginDescriptor.constructPluginKey( groupId, artifactId, version );
+        // TODO: see comment in getPluginDescriptor
+        String key = groupId + ":" + artifactId;
+        return pluginDescriptors.containsKey( key );

MOV23 MOV31 INS60 INS60 INS41 INS43 INS59 INS43 INS59 INS32 INS42 INS42 INS27 INS42 INS42 INS27 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS45 INS42 UPD42 MOV42 INS42 INS45 INS42 INS27 INS32 INS45 INS32 INS42 INS42 MOV42 UPD42 MOV42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL41