o the introduction of the lifecycle stuff we've been chatting about so you
  can now do things like:

  m2 package

  which makes the jar

  m2 install

  which installs the jar

  m2 test

  You can also execute individual goals still like:

  clean:clean
  pom:install
  idea:idea

  Execution of goals this way will still have the dependency resolution
  flag obeyed but they are run in isolation in that pre/post goals don't
  exist anymore. You need to slot your mojos into the lifecycle.

  I will add the mechanism whereby configuring a plugin will push
  the mojo into the lifecycle.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163359 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.execution.MavenSession;
+import org.apache.maven.plugin.DefaultPluginManager;
+import org.apache.maven.plugin.PluginManager;
-        PluginExecutionRequest request;
-
-            MojoDescriptor mojoDescriptor = context.getMojoDescriptor( goalName );
+            response = context.getSession().getPluginManager().executeMojo( context.getSession(), goalName );
-            getLogger().info( "[" + mojoDescriptor.getId() + "]" );
-
-            try
+            if ( response.isExecutionFailure() )
-                request = new PluginExecutionRequest( createParameters( mojoDescriptor, context ) );
-            }
-            catch ( PluginConfigurationException e )
-            {
-                throw new GoalExecutionException( "Error configuring plugin for execution.", e );
-            }
+                context.setExecutionFailure( goalName, response.getFailureResponse() );
-            response = new PluginExecutionResponse();
-
-            Plugin plugin = null;
-
-            try
-            {
-                String roleHint = context.getPluginId( mojoDescriptor );
-
-                plugin = (Plugin) context.lookup( Plugin.ROLE, roleHint );
-
-                plugin.execute( request, response );
-
-                if ( response.isExecutionFailure() )
-                {
-                    context.setExecutionFailure( mojoDescriptor.getId(), response.getFailureResponse() );
-
-                    break;
-                }
-            }
-            catch ( ComponentLookupException e )
-            {
-                throw new GoalExecutionException( "Error looking up plugin: ", e );
-            }
-            catch ( Exception e )
-            {
-                throw new GoalExecutionException( "Error executing plugin: ", e );
-            }
-            finally
-            {
-                releaseComponents( mojoDescriptor, request, context );
-
-                context.release( plugin );
-            }
-        }
-    }
-
-    private Map createParameters( MojoDescriptor goal, MavenGoalExecutionContext context )
-        throws PluginConfigurationException
-    {
-        Map map = null;
-
-        List parameters = goal.getParameters();
-
-        if ( parameters != null )
-        {
-            map = new HashMap();
-
-            for ( int i = 0; i < parameters.size(); i++ )
-            {
-                Parameter parameter = (Parameter) parameters.get( i );
-
-                String key = parameter.getName();
-
-                String expression = parameter.getExpression();
-
-                Object value = PluginParameterExpressionEvaluator.evaluate( expression, context );
-
-                if ( value == null )
-                {
-                    if ( parameter.getDefaultValue() != null )
-                    {
-                        value = parameter.getDefaultValue();
-                    }
-                }
-
-                map.put( key, value );
-            }
-
-            if ( context.getProject() != null )
-            {
-                map = mergeProjectDefinedPluginConfiguration( context.getProject(), goal.getId(), map );
-            }
-        }
-
-        for ( int i = 0; i < parameters.size(); i++ )
-        {
-            Parameter parameter = (Parameter) parameters.get( i );
-
-            String key = parameter.getName();
-
-            Object value = map.get( key );
-
-            // ----------------------------------------------------------------------
-            // We will perform a basic check here for parameters values that are
-            // required. Required parameters can't be null so we throw an
-            // Exception in the case where they are. We probably want some pluggable
-            // mechanism here but this will catch the most obvious of
-            // misconfigurations.
-            // ----------------------------------------------------------------------
-
-            if ( value == null && parameter.isRequired() )
-            {
-                throw new PluginConfigurationException( createPluginParameterRequiredMessage( goal, parameter ) );
-            }
-        }
-
-        return map;
-    }
-
-    private Map mergeProjectDefinedPluginConfiguration( MavenProject project, String goalId, Map map )
-    {
-        // ----------------------------------------------------------------------
-        // I would like to be able to lookup the Plugin object using a key but
-        // we have a limitation in modello that will be remedied shortly. So
-        // for now I have to iterate through and see what we have.
-        // ----------------------------------------------------------------------
-
-        if ( project.getPlugins() != null )
-        {
-            String pluginId = goalId.substring( 0, goalId.indexOf( ":" ) );
-
-            for ( Iterator iterator = project.getPlugins().iterator(); iterator.hasNext(); )
-            {
-                org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) iterator.next();
-
-                if ( pluginId.equals( plugin.getId() ) )
-                {
-                    return CollectionUtils.mergeMaps( plugin.getConfiguration(), map );
-                }
-            }
-        }
-
-        return map;
-    }
-
-    private String createPluginParameterRequiredMessage( MojoDescriptor mojo, Parameter parameter )
-    {
-        StringBuffer message = new StringBuffer();
-
-        message.append( "The '" + parameter.getName() ).
-            append( "' parameter is required for the execution of the " ).
-            append( mojo.getId() ).
-            append( " mojo and cannot be null." );
-
-        return message.toString();
-    }
-
-    private void releaseComponents( MojoDescriptor goal, PluginExecutionRequest request, MavenGoalExecutionContext context )
-    {
-        if ( request != null && request.getParameters() != null )
-        {
-            for ( Iterator iterator = goal.getParameters().iterator(); iterator.hasNext(); )
-            {
-                Parameter parameter = (Parameter) iterator.next();
-
-                String key = parameter.getName();
-
-                String expression = parameter.getExpression();
-
-                if ( expression != null & expression.startsWith( "#component" ) )
-                {
-                    Object component = request.getParameter( key );
-
-                    context.release( component );
-                }
+                break;

INS26 INS26 INS26 INS40 INS40 INS40 INS21 MOV25 INS7 MOV42 INS32 INS32 INS42 INS32 UPD42 MOV42 INS32 INS42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL14 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL43 DEL14 DEL7 DEL21 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL43 DEL40 DEL42 DEL32 DEL11 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL25 DEL8 DEL24 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL34 DEL42 DEL42 DEL45 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL25 DEL8 DEL24 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL33 DEL27 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL45 DEL32 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL8 DEL25 DEL8 DEL31