add an overview page, fix formatting error

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@169790 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Map;
-        // TODO: write an overview page
+        writeOverview( destinationDirectory, pluginDescriptor );
-        String id = mojoDescriptor.getGoal();
-
-            writer = new FileWriter( new File( destinationDirectory, id + "-mojo.xml" ) );
+            writer = new FileWriter( new File( destinationDirectory, getMojoFilename( mojoDescriptor, "xml" ) ) );
-            writeBody( writer, id, mojoDescriptor );
+            writeBody( writer, mojoDescriptor );
-    private void writeBody( FileWriter writer, String id, MojoDescriptor mojoDescriptor )
+    private String getMojoFilename( MojoDescriptor mojo, String ext )
+    {
+        return mojo.getGoal() + "-mojo." + ext;
+    }
+
+    private void writeOverview( File destinationDirectory, PluginDescriptor pluginDescriptor )
+        throws IOException
+    {
+        FileWriter writer = null;
+        try
+        {
+            writer = new FileWriter( new File( destinationDirectory, "index.xml" ) );
+
+            writeOverview( writer, pluginDescriptor );
+
+            writer.flush();
+        }
+        finally
+        {
+            IOUtil.close( writer );
+        }
+    }
+
+    private void writeOverview( FileWriter writer, PluginDescriptor pluginDescriptor )
+    {
+        XMLWriter w = new PrettyPrintXMLWriter( writer );
+
+        w.startElement( "document" );
+
+        // ----------------------------------------------------------------------
+        //
+        // ----------------------------------------------------------------------
+
+        w.startElement( "properties" );
+
+        w.startElement( "title" );
+
+        // TODO: need a friendly name for a plugin
+        w.writeText( pluginDescriptor.getArtifactId() + " - Overview" );
+
+        w.endElement();
+
+        w.endElement();
+
+        // ----------------------------------------------------------------------
+        //
+        // ----------------------------------------------------------------------
+
+        w.startElement( "body" );
+
+        w.startElement( "section" );
+
+        // TODO: need a friendly name for a plugin
+        w.addAttribute( "name", pluginDescriptor.getArtifactId() );
+
+        // TODO: description of plugin, examples?
+
+        w.startElement( "p" );
+
+        w.writeText( "Goals available: " );
+
+        w.endElement();
+
+        writeGoalTable( pluginDescriptor, w );
+
+        w.endElement();
+
+        w.endElement();
+    }
+
+    private void writeGoalTable( PluginDescriptor pluginDescriptor, XMLWriter w )
+    {
+        w.startElement( "table" );
+
+        w.startElement( "tr" );
+
+        w.startElement( "th" );
+
+        w.writeText( "Goal" );
+
+        w.endElement();
+
+        w.startElement( "th" );
+
+        w.writeText( "Description" );
+
+        w.endElement();
+
+        w.endElement();
+
+        List mojos = pluginDescriptor.getMojos();
+
+        for ( Iterator i = mojos.iterator(); i.hasNext(); )
+        {
+            MojoDescriptor mojo = (MojoDescriptor) i.next();
+
+            w.startElement( "tr" );
+
+            // ----------------------------------------------------------------------
+            //
+            // ----------------------------------------------------------------------
+
+            w.startElement( "td" );
+
+            String paramName = mojo.getFullGoalName();
+
+            w.startElement( "a" );
+
+            w.addAttribute( "href", getMojoFilename( mojo, "html" ) );
+
+            w.startElement( "code" );
+
+            w.writeText( paramName );
+
+            w.endElement();
+
+            w.endElement();
+
+            w.endElement();
+
+            // ----------------------------------------------------------------------
+            //
+            // ----------------------------------------------------------------------
+
+            w.startElement( "td" );
+
+            if ( StringUtils.isNotEmpty( mojo.getDescription() ) )
+            {
+                w.writeMarkup( mojo.getDescription() );
+            }
+            else
+            {
+                w.writeText( "No description." );
+            }
+
+            String deprecationWarning = mojo.getDeprecated();
+            if ( deprecationWarning != null )
+            {
+                w.writeMarkup( "<br/><b>Deprecated:</b> " );
+                w.writeMarkup( deprecationWarning );
+                if ( deprecationWarning.length() == 0 )
+                {
+                    w.writeText( "No reason given." );
+                }
+
+                w.endElement();
+            }
+
+            w.endElement();
+
+            w.endElement();
+        }
+
+        w.endElement();
+
+        w.endElement();
+    }
+
+    private void writeBody( FileWriter writer, MojoDescriptor mojoDescriptor )
+        w.startElement( "body" );
+
-                w.writeMarkup( " <i>(Optional)</i>");
+                w.writeMarkup( " <i>(Optional)</i>" );
+            }
+
+            if ( parameter.getExpression() != null && parameter.getExpression().startsWith( "${component." ) )
+            {
+                w.writeMarkup( " <i>(Discovered)</i>" );
-            w.writeText( parameter.getType() );
+            w.addAttribute( "title", parameter.getType() );
+
+            int index = parameter.getType().lastIndexOf( "." );
+            if ( index >= 0 )
+            {
+                w.writeText( parameter.getType().substring( index + 1 ) );
+            }
+            else
+            {
+                w.writeText( parameter.getType() );
+            }
-            if ( StringUtils.isNotEmpty( parameter.getExpression() ) )
+            if ( StringUtils.isNotEmpty( parameter.getExpression() ) &&
+                !parameter.getExpression().startsWith( "${component." ) )
-                w.writeMarkup( "<br/><b>Deprecated:</b> ");
+                w.writeMarkup( "<br/><b>Deprecated:</b> " );
+
+        w.endElement();

INS31 INS31 INS31 INS31 INS83 INS43 INS42 INS44 MOV44 INS8 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 MOV21 MOV21 INS21 INS42 INS43 INS42 UPD42 INS41 INS43 INS42 INS43 INS42 INS42 INS60 INS54 INS43 INS42 INS43 INS42 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS43 INS42 INS43 INS42 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS60 INS24 INS21 INS21 INS21 INS21 INS32 INS42 INS27 INS42 INS42 INS43 INS59 INS8 INS8 INS42 INS42 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS43 INS59 INS58 INS32 INS8 INS32 INS32 INS32 MOV21 MOV21 MOV21 MOV21 MOV21 INS32 INS42 INS42 INS42 INS32 INS45 INS42 INS42 INS42 INS33 INS21 INS21 INS21 INS21 INS42 INS42 INS14 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS32 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS42 INS42 INS60 INS21 INS21 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS25 INS60 INS25 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS25 INS21 INS60 INS25 INS42 INS42 INS42 INS42 INS7 INS32 INS32 INS32 INS43 INS42 INS32 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS32 INS32 MOV43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS8 INS8 INS43 INS59 INS27 INS8 INS32 INS32 INS27 INS8 INS32 INS39 INS59 INS27 INS8 INS8 INS27 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS45 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS21 INS21 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS25 INS21 INS42 INS42 INS42 INS42 INS27 INS32 INS21 INS42 INS42 INS45 INS32 INS42 INS32 INS42 INS34 INS21 MOV21 MOV32 INS38 INS43 INS14 INS43 INS32 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 INS27 INS8 INS32 INS32 INS33 INS32 INS42 INS45 INS32 INS42 INS42 INS32 INS42 INS45 INS32 INS32 INS32 INS42 INS43 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS34 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS27 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS34 DEL40 DEL26 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL45 DEL27 DEL42