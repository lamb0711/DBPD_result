Fixing a few problems with the model-lineage builder, where it was stubbing models inappropriately and other minor logical problems.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@564761 13f79535-47bb-0310-9956-ffa450edef68

-                                           ProfileManager profileManager )
+                                           ProfileManager profileManager, boolean allowStubs )
-        while ( current != null )
+        do
-            current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache );
+            current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache, allowStubs );
+        while ( current != null );
-                                            ProfileManager profileManager )
+                                            ProfileManager profileManager, boolean allowStubs )
+        if ( lineage.size() == 0 )
+        {
+            throw new ProjectBuildingException( "unknown", "Cannot resume a ModelLineage that doesn't contain at least one Model instance." );
+        }
+
-        List currentRemoteRepositories = lineage.getDeepestArtifactRepositoryList();
+        List currentRemoteRepositories = lineage.getDeepestAncestorArtifactRepositoryList();
-        ModelAndFile current = new ModelAndFile( lineage.getDeepestModel(), lineage.getDeepestFile() );
+        ModelAndFile current = new ModelAndFile( lineage.getDeepestAncestorModel(), lineage.getDeepestAncestorFile() );
-        current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache );
+        current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache, allowStubs );
-            if ( lineage.size() == 0 )
-            {
-                lineage.setOrigin( current.model, current.file, currentRemoteRepositories );
-            }
-            else
-            {
-                lineage.addParent( current.model, current.file, currentRemoteRepositories );
-            }
+            lineage.addParent( current.model, current.file, currentRemoteRepositories );
-            current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache );
+            current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache, allowStubs );
+     * @param allowStubs
-                                   ProjectBuildCache projectBuildCache )
+                                   ProjectBuildCache projectBuildCache, boolean allowStubs )
-            validateParentDeclaration( modelParent, model );
-
-//            getLogger().debug( "Looking for cached parent POM under: " + cacheKey );
+              validateParentDeclaration( modelParent, model );
-                parentPomFile = resolveParentFromRepositories( modelParent, localRepository, remoteRepositories, modelPomFile );
+                try
+                {
+                    parentPomFile = resolveParentFromRepositories( modelParent, localRepository, remoteRepositories, modelPomFile );
+                }
+                catch( ProjectBuildingException e )
+                {
+                    if ( allowStubs )
+                    {
+                        getLogger().debug( "DISREGARDING the error encountered while resolving artifact for: " + modelParent.getId() + ", building a stub model in its place.", e );
+                        parentPomFile = null;
+                    }
+                    else
+                    {
+                        throw e;
+                    }
+                }
-            Model parent;
-                getLogger().warn( "Cannot find parent POM: " + modelParent.getId() + " for child: " + model.getId() + ". Using stub model instead." );
+                if ( allowStubs )
+                {
+                    getLogger().warn( "Cannot find parent POM: " + modelParent.getId() + " for child: " + model.getId() + ". Using stub model instead." );
-                parent = new Model();
+                    Model parent = new Model();
-                parent.setGroupId( modelParent.getGroupId() );
-                parent.setArtifactId( modelParent.getArtifactId() );
-                parent.setVersion( modelParent.getVersion() );
+                    parent.setGroupId( modelParent.getGroupId() );
+                    parent.setArtifactId( modelParent.getArtifactId() );
+                    parent.setVersion( modelParent.getVersion() );
+
+                    result = new ModelAndFile( parent, parentPomFile );
+                }
+                else
+                {
+                    getLogger().error( "Cannot find parent POM: " + modelParent.getId() );
+                }
-                parent = readModel( parentPomFile );
+                Model parent = readModel( parentPomFile );
+                result = new ModelAndFile( parent, parentPomFile );
-
-            result = new ModelAndFile( parent, parentPomFile );

INS44 INS44 INS44 INS39 INS42 INS19 INS39 INS42 INS25 INS65 INS39 INS42 MOV8 MOV27 INS27 INS8 MOV43 INS42 INS32 INS34 INS53 MOV21 INS25 INS42 INS42 INS14 UPD42 MOV43 INS42 INS8 MOV27 INS8 INS8 INS43 INS45 INS45 UPD42 UPD42 INS54 MOV25 MOV60 MOV21 INS42 INS42 INS42 MOV8 INS12 INS42 MOV21 INS43 INS44 INS8 INS60 INS42 MOV32 INS43 INS42 INS25 MOV43 INS59 INS32 INS42 INS42 INS8 INS8 INS42 MOV14 INS42 INS14 INS32 INS42 INS27 INS21 INS21 INS53 INS43 INS42 INS42 INS42 INS45 INS32 INS32 INS7 INS42 INS42 INS42 INS42 INS32 INS42 INS27 INS42 INS42 INS33 INS42 INS45 INS32 INS45 INS42 INS42 DEL61 DEL42 DEL42 DEL32 DEL34 DEL27 DEL42 DEL42 DEL40 DEL40 DEL42 DEL32 DEL21 DEL8 DEL8 DEL25 DEL42 DEL42 DEL7