[MNG-515]. Each language can have their own site descriptor (site.xml for default language, site_fr.xml for french menu)
Each i18n site must be under site directory:
src
  site
    apt <= default language
    xdoc
    fr
      apt <= french content
      xdoc

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@201584 13f79535-47bb-0310-9956-ffa450edef68

-                        getLog().info( "Generate " + report.getName( locale ) + " report." );
+                        getLog().info( "Generate \"" + report.getName( locale ) + "\" report." );
-                siteRenderer.render( new File( siteDirectory ), localeOutputDirectory,
-                                     getSiteDescriptor( reports, locale ), template, attributes );
-                siteRenderer.render( new File( generatedSiteDirectory ), localeOutputDirectory,
-                                     getSiteDescriptor( reports, locale ), template, attributes );
+                File siteDirectoryFile;
+
+                Locale firstLocale = (Locale) localesList.get( 0 );
+
+                if ( locale.equals( firstLocale ) )
+                {
+                    siteDirectoryFile = new File( siteDirectory );
+                }
+                else
+                {
+                    siteDirectoryFile = new File( siteDirectory, locale.getLanguage() );
+                }
+
+                siteRenderer.render( siteDirectoryFile, localeOutputDirectory,
+                                     getSiteDescriptor( reports, locale ), template, attributes, locale );
+
+                siteRenderer.render( siteDirectoryFile, localeOutputDirectory,
+                                     getSiteDescriptor( reports, locale ), template, attributes, locale );
-        File siteDescriptor = new File( siteDirectory, "site.xml" );
+        File siteDescriptor = new File( siteDirectory, "site_" + locale.getLanguage() + ".xml" );
-                siteDescriptorContent = IOUtil.toString( getClass().getResourceAsStream( "/default-site.xml" ) );
+                siteDescriptor = new File( siteDirectory, "site.xml" );
+                
+                if ( siteDescriptor.exists() )
+                {
+                    siteDescriptorContent = FileUtils.fileRead( siteDescriptor );
+                }
+                else
+                {
+                    siteDescriptorContent = IOUtil.toString( getClass().getResourceAsStream( "/default-site.xml" ) );
+                }

INS8 INS14 INS25 INS43 INS42 INS27 INS32 INS8 MOV8 INS60 INS60 INS25 INS42 INS45 INS32 INS45 INS42 INS42 INS21 INS21 INS43 INS59 INS43 INS59 INS32 INS8 INS8 INS42 INS42 INS7 INS7 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS21 INS21 INS42 MOV32 INS42 INS42 MOV32 INS42 INS42 INS32 INS42 MOV14 INS43 INS32 INS7 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS42 MOV14 INS42 INS14 MOV43 INS42 INS32 INS42 INS42 UPD45 UPD45 DEL42 DEL14