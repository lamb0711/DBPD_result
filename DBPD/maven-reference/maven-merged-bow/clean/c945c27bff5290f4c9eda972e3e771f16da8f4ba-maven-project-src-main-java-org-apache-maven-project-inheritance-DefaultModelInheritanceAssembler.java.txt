PR: MNG-693
added tests for reporting inheritence to mirror plugin inheritence, cleanup and utilise executions element

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@240197 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.ReportPlugin;
-import org.apache.maven.model.ReportSet;
-import org.codehaus.plexus.util.xml.Xpp3Dom;
-        assembleBuildInheritance( child, parent.getBuild() );
-        
+        assembleBuildInheritance( child, parent );
+
-        child.setPluginRepositories( ModelUtils.mergeRepositoryLists( child.getPluginRepositories(), parent.getPluginRepositories() ) );
-        
+        child.setPluginRepositories(
+            ModelUtils.mergeRepositoryLists( child.getPluginRepositories(), parent.getPluginRepositories() ) );
+
-        
+
-        
+
-        
+
-            
+
-            
+
-            
+
-            
+
-            
+
-        if ( childReporting != null && parentReporting != null )
+        if ( parentReporting != null )
+            if ( childReporting == null )
+            {
+                childReporting = new Reporting();
+                child.setReporting( childReporting );
+            }
+
-            Map mergedReportPlugins = new HashMap();
-
-            Map childReportersByKey = childReporting.getReportPluginsAsMap();
-
-            List parentReportPlugins = parentReporting.getPlugins();
-
-            if ( parentReportPlugins != null )
-            {
-                for ( Iterator it = parentReportPlugins.iterator(); it.hasNext(); )
-                {
-                    ReportPlugin parentReportPlugin = (ReportPlugin) it.next();
-
-                    String inherited = parentReportPlugin.getInherited();
-
-                    if ( StringUtils.isEmpty( inherited ) || Boolean.valueOf( inherited ).booleanValue() )
-                    {
-                        ReportPlugin childReportPlugin = (ReportPlugin) childReportersByKey.get(
-                            parentReportPlugin.getKey() );
-
-                        ReportPlugin mergedReportPlugin = parentReportPlugin;
-
-                        if ( childReportPlugin != null )
-                        {
-                            mergedReportPlugin = childReportPlugin;
-
-                            mergeReportPlugins( childReportPlugin, parentReportPlugin );
-                        }
-                        else if ( StringUtils.isEmpty( inherited ) )
-                        {
-                            mergedReportPlugin.unsetInheritanceApplied();
-                        }
-
-                        mergedReportPlugins.put( mergedReportPlugin.getKey(), mergedReportPlugin );
-                    }
-                }
-            }
-
-            for ( Iterator it = childReportersByKey.entrySet().iterator(); it.hasNext(); )
-            {
-                Map.Entry entry = (Map.Entry) it.next();
-
-                String key = (String) entry.getKey();
-
-                if ( !mergedReportPlugins.containsKey( key ) )
-                {
-                    mergedReportPlugins.put( key, entry.getValue() );
-                }
-            }
-
-            childReporting.setPlugins( new ArrayList( mergedReportPlugins.values() ) );
-
-            childReporting.flushReportPluginMap();
+            ModelUtils.mergeReportPluginLists( childReporting, parentReporting, true );
-    private void mergeReportPlugins( ReportPlugin childReportPlugin, ReportPlugin parentReportPlugin )
-    {
-          if ( StringUtils.isEmpty( childReportPlugin.getVersion() ) )
-          {
-              childReportPlugin.setVersion( parentReportPlugin.getVersion() );
-          }
-  
-          Xpp3Dom childConfig = (Xpp3Dom) childReportPlugin.getConfiguration();
-          Xpp3Dom parentConfig = (Xpp3Dom) parentReportPlugin.getConfiguration();
-  
-          childReportPlugin.setConfiguration( Xpp3Dom.mergeXpp3Dom( childConfig, parentConfig ) );
-  
-          Map mergedReportSets = new HashMap();
-  
-          Map childReportSetsById = childReportPlugin.getReportSetsAsMap();
-  
-          for ( Iterator it = parentReportPlugin.getReportSets().iterator(); it.hasNext(); )
-          {
-              ReportSet parentReportSet = (ReportSet) it.next();
-  
-              String inherited = parentReportSet.getInherited();
-  
-              if ( StringUtils.isEmpty( inherited ) || Boolean.valueOf( inherited ).booleanValue() )
-              {
-                  ReportSet childReportSet = (ReportSet) childReportSetsById.get( parentReportSet.getId() );
-  
-                  ReportSet merged = parentReportSet;
-  
-                  if ( childReportSet != null )
-                  {
-                      merged = childReportSet;
-  
-                      Xpp3Dom parentRSConfig = (Xpp3Dom) parentReportSet.getConfiguration();
-                      Xpp3Dom mergedRSConfig = (Xpp3Dom) merged.getConfiguration();
-  
-                      merged.setConfiguration( Xpp3Dom.mergeXpp3Dom( mergedRSConfig, parentRSConfig ) );
-  
-                      List mergedReports = merged.getReports();
-  
-                      if ( mergedReports == null )
-                      {
-                          mergedReports = new ArrayList();
-  
-                          merged.setReports( mergedReports );
-                      }
-  
-                      List parentRSReports = parentReportSet.getReports();
-  
-                      if ( parentRSReports != null )
-                      {
-                          for ( Iterator reportIterator = parentRSReports.iterator(); reportIterator.hasNext(); )
-                          {
-                              String report = (String) reportIterator.next();
-  
-                              if ( !mergedReports.contains( report ) )
-                              {
-                                  mergedReports.add( report );
-                              }
-                          }
-                      }
-                  }
-                  else if ( StringUtils.isEmpty( inherited ) )
-                  {
-                      merged.unsetInheritanceApplied();
-                  }
-  
-                  mergedReportSets.put( merged.getId(), merged );
-              }
-          }
-  
-          for ( Iterator rsIterator = childReportSetsById.entrySet().iterator(); rsIterator.hasNext(); )
-          {
-              Map.Entry entry = (Map.Entry) rsIterator.next();
-  
-              String key = (String) entry.getKey();
-  
-              if ( !mergedReportSets.containsKey( key ) )
-              {
-                  mergedReportSets.put( key, entry.getValue() );
-              }
-          }
-  
-          childReportPlugin.setReportSets( new ArrayList( mergedReportSets.values() ) );
-  
-          childReportPlugin.flushReportSetMap();
-    }
-
-        
+
-        
+
-        
+
-        
+
-        
+
-    private void assembleBuildInheritance( Model child, Build parentBuild )
+    private void assembleBuildInheritance( Model child, Model parent )
+        Build parentBuild = parent.getBuild();

UPD42 MOV44 MOV44 INS8 MOV60 MOV60 MOV25 INS43 UPD42 INS60 MOV27 INS42 MOV43 INS59 INS42 MOV25 MOV25 INS42 MOV32 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 INS9 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL39 DEL42 DEL42 DEL33 DEL27 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL8 DEL25 DEL8 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL25 DEL42 DEL32 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL24 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8