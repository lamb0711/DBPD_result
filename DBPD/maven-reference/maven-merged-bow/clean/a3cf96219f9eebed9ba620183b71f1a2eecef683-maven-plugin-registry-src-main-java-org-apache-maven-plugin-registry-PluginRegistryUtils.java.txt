Resolving issue: MNG-379

o Added support for update-all and update-none when prompting the user.

o Added --update-plugins/-F option to force an update of the plugins used in the project.

o Added autoUpdate setting for the plugin registry. This is used when in non-interactive mode, to determine whether to register plugin updates

o Added updateInterval to determine when/how often to check for updates to registered plugins. Supports three syntaxes:

  - 'never'
  - 'always'
  - 'interval:XXX' (where XXX can be a combination of weeks, days, hours, and minutes in the syntax: 1w1d1h1m)
         > this renders the interval syntax similar to 'interval:1w' to check every week.

  NOTE: update intervals are calculated from the time a particular plugin was last checked.

o Added lastChecked attribute for registered plugins, to use as a basis for calculating update-check interval

o Added RuntimeInfo classes for maven-settings and maven-plugin-registry, to help in tracking the file each instance comes from, in addition to merging info which is useful when extracting the user-level instance from the merged instance (for persisting changes to the user instance, f.e.).

o Changed verifyPlugin(..) to take an instance of Settings, to allow persistent decisions across the session (like update-all, update-none in the plugin version manager)

This should take care of outstanding issues with this new feature. I'm closing the JIRA issue now, and we'll deal with any bugs/shortcomings as separate issues.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191021 13f79535-47bb-0310-9956-ffa450edef68

-        // can't merge into something that doesn't exist...
-        if ( dominant == null )
+        // nothing to merge...
+        if ( dominant == null || recessive == null )
+        RuntimeInfo dominantRtInfo = dominant.getRuntimeInfo();
+
+        String dominantUpdateInterval = dominant.getUpdateInterval();
+
+        if ( dominantUpdateInterval == null )
+        {
+            String recessiveUpdateInterval = recessive.getUpdateInterval();
+
+            if ( recessiveUpdateInterval != null )
+            {
+                dominant.setUpdateInterval( recessiveUpdateInterval );
+                dominantRtInfo.setUpdateIntervalSourceLevel( recessiveSourceLevel );
+            }
+        }
+
+        String dominantAutoUpdate = dominant.getAutoUpdate();
+
+        if ( dominantAutoUpdate == null )
+        {
+            String recessiveAutoUpdate = recessive.getAutoUpdate();
+
+            if ( recessiveAutoUpdate != null )
+            {
+                dominant.setAutoUpdate( recessiveAutoUpdate );
+                dominantRtInfo.setAutoUpdateSourceLevel( recessiveSourceLevel );
+            }
+        }
+
-        
-        if(recessive != null)
+
+        if ( recessive != null )
-        
+
+            RuntimeInfo rtInfo = new RuntimeInfo( userRegistry );
+
+            userRegistry.setRuntimeInfo( rtInfo );
+
+            RuntimeInfo oldRtInfo = pluginRegistry.getRuntimeInfo();
+
+            if ( TrackableBase.USER_LEVEL.equals( oldRtInfo.getAutoUpdateSourceLevel() ) )
+            {
+                userRegistry.setAutoUpdate( pluginRegistry.getAutoUpdate() );
+            }
+
+            if ( TrackableBase.USER_LEVEL.equals( oldRtInfo.getUpdateIntervalSourceLevel() ) )
+            {
+                userRegistry.setUpdateInterval( pluginRegistry.getUpdateInterval() );
+            }
+
-            userRegistry.setFile( pluginRegistry.getFile() );
+            rtInfo.setFile( pluginRegistry.getRuntimeInfo().getFile() );

INS8 MOV25 INS60 INS60 INS25 INS60 INS25 MOV60 MOV25 MOV21 INS27 INS43 INS59 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 MOV27 INS27 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS60 INS25 INS42 INS42 INS32 INS42 INS33 INS60 INS25 INS60 INS21 INS60 INS25 INS25 INS42 INS33 INS42 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS42 INS42 INS43 INS59 INS27 INS8 INS43 INS59 INS32 INS43 INS59 INS32 INS8 INS32 INS8 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS32 INS40 INS42 INS32 INS21 INS40 INS42 INS32 INS21 UPD42 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 MOV42 INS42 INS42 INS42 INS42 INS42 DEL8