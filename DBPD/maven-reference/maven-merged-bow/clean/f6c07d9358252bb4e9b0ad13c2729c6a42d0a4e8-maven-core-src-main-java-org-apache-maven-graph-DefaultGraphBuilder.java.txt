[MNG-6863] --also-make is being ignored when calling --resume-from

[MNG-6676] Resume reactor build after skipped project using -pl !X -rf X combination

Co-authored-by: Martin Kanters <Martin.Kanters@infosupport.com>
+        activeProjects = trimResumedProjects( activeProjects, projectDependencyGraph, session.getRequest() );
-        activeProjects = trimResumedProjects( activeProjects, session.getRequest() );
+            result = new ArrayList<>( projects.size() );
+
-            boolean makeUpstream = false;
-            boolean makeDownstream = false;
+            result.addAll( selectedProjects );
-            if ( MavenExecutionRequest.REACTOR_MAKE_UPSTREAM.equals( request.getMakeBehavior() ) )
+            result = includeAlsoMakeTransitively( result, request, graph );
+        }
+
+        return result;
+    }
+
+    private List<MavenProject> trimResumedProjects( List<MavenProject> projects, ProjectDependencyGraph graph,
+                                                    MavenExecutionRequest request )
+            throws MavenExecutionException
+    {
+        List<MavenProject> result = projects;
+
+        if ( StringUtils.isNotEmpty( request.getResumeFrom() ) )
+        {
+            File reactorDirectory = null;
+            if ( request.getBaseDirectory() != null )
-                makeUpstream = true;
-            }
-            else if ( MavenExecutionRequest.REACTOR_MAKE_DOWNSTREAM.equals( request.getMakeBehavior() ) )
-            {
-                makeDownstream = true;
-            }
-            else if ( MavenExecutionRequest.REACTOR_MAKE_BOTH.equals( request.getMakeBehavior() ) )
-            {
-                makeUpstream = true;
-                makeDownstream = true;
-            }
-            else if ( StringUtils.isNotEmpty( request.getMakeBehavior() ) )
-            {
-                throw new MavenExecutionException( "Invalid reactor make behavior: " + request.getMakeBehavior(),
-                                                   request.getPom() );
+                reactorDirectory = new File( request.getBaseDirectory() );
-            if ( makeUpstream || makeDownstream )
-            {
-                for ( MavenProject selectedProject : new ArrayList<>( selectedProjects ) )
-                {
-                    if ( makeUpstream )
-                    {
-                        selectedProjects.addAll( graph.getUpstreamProjects( selectedProject, true ) );
-                    }
-                    if ( makeDownstream )
-                    {
-                        selectedProjects.addAll( graph.getDownstreamProjects( selectedProject, true ) );
-                    }
-                }
-            }
+            String selector = request.getResumeFrom();
-            result = new ArrayList<>( selectedProjects.size() );
+            result = new ArrayList<>( projects.size() );
+
+            boolean resumed = false;
-                if ( selectedProjects.contains( project ) )
+                if ( !resumed && isMatchingProject( project, selector, reactorDirectory ) )
+                {
+                    resumed = true;
+                }
+
+                if ( resumed )
+
+            if ( !resumed )
+            {
+                throw new MavenExecutionException( "Could not find project to resume reactor build from: " + selector
+                        + " vs " + formatProjects( projects ), request.getPom() );
+            }
+
+            result = includeAlsoMakeTransitively( result, request, graph );
-    private List<MavenProject> trimResumedProjects( List<MavenProject> projects, MavenExecutionRequest request )
-        throws MavenExecutionException
+    private List<MavenProject> includeAlsoMakeTransitively( List<MavenProject> projects, MavenExecutionRequest request,
+                                                            ProjectDependencyGraph graph )
+            throws MavenExecutionException
-        List<MavenProject> result = projects;
+        List<MavenProject> result;
-        if ( StringUtils.isNotEmpty( request.getResumeFrom() ) )
+        boolean makeUpstream = false;
+        boolean makeDownstream = false;
+
+        if ( MavenExecutionRequest.REACTOR_MAKE_UPSTREAM.equals( request.getMakeBehavior() ) )
-            File reactorDirectory = null;
-            if ( request.getBaseDirectory() != null )
+            makeUpstream = true;
+        }
+        else if ( MavenExecutionRequest.REACTOR_MAKE_DOWNSTREAM.equals( request.getMakeBehavior() ) )
+        {
+            makeDownstream = true;
+        }
+        else if ( MavenExecutionRequest.REACTOR_MAKE_BOTH.equals( request.getMakeBehavior() ) )
+        {
+            makeUpstream = true;
+            makeDownstream = true;
+        }
+        else if ( StringUtils.isNotEmpty( request.getMakeBehavior() ) )
+        {
+            throw new MavenExecutionException( "Invalid reactor make behavior: " + request.getMakeBehavior(),
+                    request.getPom() );
+        }
+
+        if ( makeUpstream || makeDownstream )
+        {
+
+            for ( MavenProject project : new ArrayList<>( projects ) )
-                reactorDirectory = new File( request.getBaseDirectory() );
-            }
-
-            String selector = request.getResumeFrom();
-
-            result = new ArrayList<>( projects.size() );
-
-            boolean resumed = false;
-
-            for ( MavenProject project : projects )
-            {
-                if ( !resumed && isMatchingProject( project, selector, reactorDirectory ) )
+                if ( makeUpstream )
-                    resumed = true;
+                    projects.addAll( graph.getUpstreamProjects( project, true ) );
-
-                if ( resumed )
+                if ( makeDownstream )
-                    result.add( project );
+                    projects.addAll( graph.getDownstreamProjects( project, true ) );
+        }
-            if ( !resumed )
+        result = new ArrayList<>( projects.size() );
+
+        for ( MavenProject project : graph.getSortedProjects() )
+        {
+            if ( projects.contains( project ) )
-                throw new MavenExecutionException( "Could not find project to resume reactor build from: " + selector
-                    + " vs " + formatProjects( projects ), request.getPom() );
+                result.add( project );

MOV31 INS31 MOV21 INS44 INS83 INS74 INS42 INS44 INS44 INS44 INS43 INS8 INS43 INS42 INS43 INS43 INS74 INS42 INS43 INS42 INS43 INS42 INS42 INS60 MOV60 MOV60 MOV25 INS25 INS21 MOV70 INS41 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS74 INS59 MOV27 INS8 INS7 INS32 INS42 INS21 MOV21 INS21 INS42 INS42 INS43 INS43 INS42 INS70 INS42 INS14 INS42 INS42 INS42 INS7 INS7 INS42 INS42 INS44 MOV14 INS8 INS74 INS32 INS42 INS14 UPD42 UPD42 MOV42 INS32 INS42 INS32 INS43 INS42 INS42 INS25 INS25 INS43 INS42 INS42 UPD42 MOV74 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS8 INS42 INS8 INS42 UPD42 MOV42 UPD42 MOV42 INS21 INS21 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS9 DEL42 DEL42 DEL9 DEL32 DEL42 DEL43 DEL42 DEL44 DEL42 DEL14 DEL42 DEL42 DEL42 DEL42 DEL9 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL8 DEL25 DEL8 DEL70 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42