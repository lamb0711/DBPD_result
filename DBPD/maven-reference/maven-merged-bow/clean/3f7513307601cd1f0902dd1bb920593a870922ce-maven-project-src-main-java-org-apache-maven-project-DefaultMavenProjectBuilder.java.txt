[MNG-3482][MNG-3391]

1. Moving the mergeManagedDependencies(..) call INSIDE of processProjectLogic(..), to just AFTER interpolation but BEFORE injection of managed-dependency information into the main dependencies information, and also ahead of model validation. This allows expressions in imported-POM specifications to be interpolated before these are merged to the current project.

2. Restricting the mergeManagedDependencies(..) logic to only happen when type == pom (which was already there) AND scope == import (which is new). 

ALSO related to [MNG-3483].

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@641662 13f79535-47bb-0310-9956-ffa450edef68

-            processProjectLogic( project, null, true );
+            processProjectLogic( project, null, null, null, true, false );
-        // TODO: [jdcasey] This line appears to be part of the problem for MNG-3391...
-        // the same line is in 2.0.x, so this is related to caching changes too...need to figure out how the two interact.
-        mergeManagedDependencies(project.getModel(), localRepository, repositories);
-
-            project = processProjectLogic( project, projectDescriptor, strict );
+            project = processProjectLogic( project, projectDescriptor, localRepository, repositories, strict, false );
-                                              boolean strict )
+                                              ArtifactRepository localRepository,
+                                              List remoteRepositories,
+                                              boolean strict,
+                                              boolean superPom )
+        // We must inject any imported dependencyManagement information ahead of the defaults injection.
+        if ( !superPom )
+        {
+            // TODO: [jdcasey] This line appears to be part of the problem for MNG-3391...
+            // the same line is in 2.0.x, so this is related to caching changes too...need to figure out how the two interact.
+            mergeManagedDependencies( model, localRepository, remoteRepositories );
+        }
+
-                // FIXME: Add scope-check for 'import'
-                if (dep.getType().equals("pom"))
+                // MNG-3391: SEE BELOW.
+                if (dep.getType().equals("pom") && Artifact.SCOPE_IMPORT.equals( dep.getScope() ) )
-                    // FIXME: Add scope-check for 'import'
-                    if (dep.getType().equals("pom"))
+                    // MNG-3391: The check for scope == 'import' to limit the StackOverflowExceptions caused
+                    // when importing from the parent and the import-target is a module that declares the
+                    // current pom as a parent.
+                    //
+                    // Also, dependencies with type == 'pom' are the best way we currently have to
+                    // aggregate multiple other dependencies without messing with the issues caused by using
+                    // an assembly (ClassCastException if a second-level dep is also part of the maven core,
+                    // for instance)
+                    if (dep.getType().equals("pom") && Artifact.SCOPE_IMPORT.equals( dep.getScope() ) )

INS44 INS44 INS44 INS43 INS42 INS43 INS42 INS39 INS42 INS25 INS42 INS42 INS38 INS8 INS42 INS21 INS32 INS33 INS33 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS27 MOV32 INS32 INS40 INS42 INS32 INS27 INS42 INS42 MOV32 INS32 INS40 INS42 INS32 INS42 INS42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21