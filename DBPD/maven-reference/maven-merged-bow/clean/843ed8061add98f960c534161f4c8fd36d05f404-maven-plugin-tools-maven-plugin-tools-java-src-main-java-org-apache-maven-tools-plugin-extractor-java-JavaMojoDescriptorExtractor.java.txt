o allowing the specification of the bean property that should be used for
  reading/writing configuration values. I briefly discussed this with John but
  is up for discussion. We felt the most "bean" like way would be to allow
  something like the following:
  
  @parameter property="project"
  
  Which would mean that for that particular field to read/write it a
  getProject() and setProject(Project) method would be present.
  


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@279997 13f79535-47bb-0310-9956-ffa450edef68

+    /**
+     * This indicates the base name of the bean properties used to read/write this parameter's value.
+     * So:
+     *
+     * @parameter property="project"
+     *
+     * Would say there is a getProject() method and a setProject(Project) method. Here the field
+     * name would not be the basis for the parameter's name. This mode of operation will allow the
+     * mojos to be usable as beans and will be the promoted form of use.
+     *
+     **/
+    public static final String PARAMETER_PROPERTY = "property";
+
+
+
+
+
+
-            String paramName = (String) entry.getKey();
-            pd.setName( paramName );
-
+
+
+
+
+                pd.setName( (String) entry.getKey() );
+                // ----------------------------------------------------------------------
+                // We will look for a property name here first and use that if present
+                // i.e:
+                //
+                // @parameter property="project"
+                //
+                // Which will become the name used for the configuration element which
+                // will in turn will allow plexus to use the corresponding setter.
+                // ----------------------------------------------------------------------
+
+                String property = parameter.getNamedParameter( PARAMETER_PROPERTY );
+
+                if ( !StringUtils.isEmpty( property ) )
+                {
+                    pd.setName( property );
+                }
+                else
+                {
+                    pd.setName( (String) entry.getKey() );
+                }
+
+
+

INS23 INS29 INS83 INS83 INS83 INS43 INS59 INS65 INS65 INS42 INS42 INS45 INS66 INS66 INS66 INS66 INS66 INS66 INS21 INS60 INS25 INS32 MOV43 INS59 INS38 INS8 INS8 INS42 INS42 MOV11 INS42 INS32 INS32 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS11 INS43 INS32 INS42 INS42 INS42 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21