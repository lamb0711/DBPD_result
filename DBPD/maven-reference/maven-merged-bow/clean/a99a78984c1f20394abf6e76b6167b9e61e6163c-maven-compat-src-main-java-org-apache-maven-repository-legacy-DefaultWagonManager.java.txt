o Updated to remove errors reported by Checkstyle.
-    private static final String[] CHECKSUM_IDS = { "md5", "sha1" };
-    /** have to match the CHECKSUM_IDS */
-    private static final String[] CHECKSUM_ALGORITHMS = { "MD5", "SHA-1" };
+    private static final String[] CHECKSUM_IDS =
+    {
+        "md5", "sha1"
+    };
+
+    /**
+     * have to match the CHECKSUM_IDS
+     */
+    private static final String[] CHECKSUM_ALGORITHMS =
+    {
+        "MD5", "SHA-1"
+    };
-
-                + artifact.getId() );
+                              + artifact.getId() );
+
-                    + " from " + remotePath );
+                                  + " from " + remotePath );
-                    throw new TransferFailedException( "Failure to resolve " + remotePath + " from "
-                        + repository.getUrl() + " was cached in the local repository. "
-                        + "Resolution will not be reattempted until the update interval of " + repository.getId()
-                        + " has elapsed or updates are forced. Original error: " + error );
+                    throw new TransferFailedException(
+                        "Failure to resolve " + remotePath + " from " + repository.getUrl()
+                            + " was cached in the local repository. "
+                            + "Resolution will not be reattempted until the update interval of "
+                            + repository.getId() + " has elapsed or updates are forced. Original error: " + error );
+
-                    throw new ResourceDoesNotExistException( "Failure to resolve " + remotePath + " from "
-                        + repository.getUrl() + " was cached in the local repository. "
-                        + "Resolution will not be reattempted until the update interval of " + repository.getId()
-                        + " has elapsed or updates are forced." );
+                    throw new ResourceDoesNotExistException(
+                        "Failure to resolve " + remotePath + " from " + repository.getUrl()
+                            + " was cached in the local repository. "
+                            + "Resolution will not be reattempted until the update interval of "
+                            + repository.getId() + " has elapsed or updates are forced." );
+
-                    + " (" + repository.getUrl() + ")", e );
+                                  + " (" + repository.getUrl() + ")", e );
+
+
+     *
-        if( legacySupport.getRepositorySession() != null )
+        if ( legacySupport.getRepositorySession() != null )
-            String userAgent = ConfigUtils.getString( legacySupport.getRepositorySession(), null, ConfigurationProperties.USER_AGENT );
-            if( userAgent == null)
+            String userAgent = ConfigUtils.getString( legacySupport.getRepositorySession(), null,
+                                                      ConfigurationProperties.USER_AGENT );
+
+            if ( userAgent == null )
-                    
+
-                + " for " + repository.getUrl() );
+                              + " for " + repository.getUrl() );
+
+
+
-                        // if we catch a ChecksumFailedException, it means the transfer/read succeeded, but the checksum
-                        // doesn't match. This could be a problem with the server (ibiblio HTTP-200 error page), so we'll
-                        // try this up to two times. On the second try, we'll handle it as a bona-fide error, based on the
-                        // repository's checksum checking policy.
+                        // if we catch a ChecksumFailedException, it means the transfer/read succeeded, but the 
+                        // checksum doesn't match. This could be a problem with the server (ibiblio HTTP-200 error
+                        // page), so we'll try this up to two times. On the second try, we'll handle it as a bona-fide
+                        // error, based on the repository's checksum checking policy.
-
-                        + e.getMessage(), e );
+                                                           + e.getMessage(), e );
+
-            for ( String aCHECKSUM_IDS : CHECKSUM_IDS )
+            for ( String id : CHECKSUM_IDS )
-                TransferListener checksumListener = checksums.get( aCHECKSUM_IDS );
+                TransferListener checksumListener = checksums.get( id );
-                || expectedChecksum.regionMatches( true, 0, "SHA", 0, 3 ) )
+                     || expectedChecksum.regionMatches( true, 0, "SHA", 0, 3 ) )
-                    + "'; remote = '" + expectedChecksum + "'" );
+                                                       + "'; remote = '" + expectedChecksum + "'" );
+
-                + protocol, e );
+                                                        + protocol, e );
+

UPD66 UPD42 UPD42