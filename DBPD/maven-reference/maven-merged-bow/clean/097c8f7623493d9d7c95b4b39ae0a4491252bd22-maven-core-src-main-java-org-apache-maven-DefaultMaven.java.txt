o started building up the code that we will use for the session lifecycle
  -> bascially the mechanism is the same as the one we use for the goal
     execution lifecycle

  This first cut is so John can see as we're discussing the session stuff
  at the moment and I need to get this working in order to push all notions
  of artifact handling out of MavenProject.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@162969 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.lifecycle.session.MavenSession;
+        MavenSession session = new MavenSession( container,
+                                                 pluginManager,
+                                                 project,
+                                                 getLocalRepository() );
+
-            /*
-
-            //!! This needs to be thrown later because we may need to download the plugin first
-
-            if ( !getMojoDescriptors().containsKey( goal ) )
-            {
-                throw new GoalNotFoundException( goal );
-            }
-            */
-
-                //!! we may not know anything about the plugin at this point.
-
-                context = new MavenGoalExecutionContext( container,
-                                                     project,
-                                                     getMojoDescriptor( goal ),
-                                                     getLocalRepository() );
+                context = new MavenGoalExecutionContext( session, getMojoDescriptor( goal ) );
-        getLogger().info( "Final Memory: " + ((r.totalMemory() - r.freeMemory()) / mb) + "M/" + (r.totalMemory() / mb) + "M");
+        getLogger().info( "Final Memory: " + ( ( r.totalMemory() - r.freeMemory() ) / mb ) + "M/" + ( r.totalMemory() / mb ) + "M" );

INS26 INS40 INS60 INS43 INS59 INS42 INS42 INS14 INS43 INS42 INS42 INS42 MOV32 INS42 UPD42 DEL42