extracted ArtifactDescriptorReaderDelegate

Signed-off-by: Igor Fedorenko <ifedorenko@apache.org>

-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.LinkedHashMap;
-import java.util.List;
+
-import org.apache.maven.model.DependencyManagement;
+
-import org.apache.maven.model.License;
-import org.apache.maven.model.Prerequisites;
-import org.apache.maven.model.Repository;
-import org.eclipse.aether.artifact.ArtifactProperties;
-import org.eclipse.aether.artifact.ArtifactType;
-import org.eclipse.aether.artifact.ArtifactTypeRegistry;
-import org.eclipse.aether.artifact.DefaultArtifact;
-import org.eclipse.aether.artifact.DefaultArtifactType;
-import org.eclipse.aether.graph.Dependency;
-import org.eclipse.aether.graph.Exclusion;
-            ArtifactTypeRegistry stereotypes = session.getArtifactTypeRegistry();
+            Map<String, Object> config = session.getConfigProperties();
+            ArtifactDescriptorReaderDelegate delegate =
+                (ArtifactDescriptorReaderDelegate) config.get( ArtifactDescriptorReaderDelegate.class.getName() );
-            for ( Repository r : model.getRepositories() )
+            if ( delegate == null )
-                result.addRepository( ArtifactDescriptorUtils.toRemoteRepository( r ) );
+                delegate = new ArtifactDescriptorReaderDelegate();
-            for ( org.apache.maven.model.Dependency dependency : model.getDependencies() )
-            {
-                result.addDependency( convert( dependency, stereotypes ) );
-            }
-
-            DependencyManagement mngt = model.getDependencyManagement();
-            if ( mngt != null )
-            {
-                for ( org.apache.maven.model.Dependency dependency : mngt.getDependencies() )
-                {
-                    result.addManagedDependency( convert( dependency, stereotypes ) );
-                }
-            }
-
-            Map<String, Object> properties = new LinkedHashMap<String, Object>();
-
-            Prerequisites prerequisites = model.getPrerequisites();
-            if ( prerequisites != null )
-            {
-                properties.put( "prerequisites.maven", prerequisites.getMaven() );
-            }
-
-            List<License> licenses = model.getLicenses();
-            properties.put( "license.count", licenses.size() );
-            for ( int i = 0; i < licenses.size(); i++ )
-            {
-                License license = licenses.get( i );
-                properties.put( "license." + i + ".name", license.getName() );
-                properties.put( "license." + i + ".url", license.getUrl() );
-                properties.put( "license." + i + ".comments", license.getComments() );
-                properties.put( "license." + i + ".distribution", license.getDistribution() );
-            }
-
-            result.setProperties( properties );
-
-            setArtifactProperties( result, model );
+            delegate.populateResult( session, result, model );
-    private void setArtifactProperties( ArtifactDescriptorResult result, Model model )
-    {
-        String downloadUrl = null;
-        DistributionManagement distMngt = model.getDistributionManagement();
-        if ( distMngt != null )
-        {
-            downloadUrl = distMngt.getDownloadUrl();
-        }
-        if ( downloadUrl != null && downloadUrl.length() > 0 )
-        {
-            Artifact artifact = result.getArtifact();
-            Map<String, String> props = new HashMap<String, String>( artifact.getProperties() );
-            props.put( ArtifactProperties.DOWNLOAD_URL, downloadUrl );
-            result.setArtifact( artifact.setProperties( props ) );
-        }
-    }
-
-    private Dependency convert( org.apache.maven.model.Dependency dependency, ArtifactTypeRegistry stereotypes )
-    {
-        ArtifactType stereotype = stereotypes.get( dependency.getType() );
-        if ( stereotype == null )
-        {
-            stereotype = new DefaultArtifactType( dependency.getType() );
-        }
-
-        boolean system = dependency.getSystemPath() != null && dependency.getSystemPath().length() > 0;
-
-        Map<String, String> props = null;
-        if ( system )
-        {
-            props = Collections.singletonMap( ArtifactProperties.LOCAL_PATH, dependency.getSystemPath() );
-        }
-
-        Artifact artifact =
-            new DefaultArtifact( dependency.getGroupId(), dependency.getArtifactId(), dependency.getClassifier(), null,
-                                 dependency.getVersion(), props, stereotype );
-
-        List<Exclusion> exclusions = new ArrayList<Exclusion>( dependency.getExclusions().size() );
-        for ( org.apache.maven.model.Exclusion exclusion : dependency.getExclusions() )
-        {
-            exclusions.add( convert( exclusion ) );
-        }
-
-        Dependency result = new Dependency( artifact, dependency.getScope(), dependency.isOptional(), exclusions );
-
-        return result;
-    }
-
-    private Exclusion convert( org.apache.maven.model.Exclusion exclusion )
-    {
-        return new Exclusion( exclusion.getGroupId(), exclusion.getArtifactId(), "*", "*" );
-    }
-

INS31 MOV83 MOV43 MOV42 MOV44 MOV44 MOV43 INS8 MOV60 MOV60 INS25 MOV41 MOV27 INS8 MOV60 INS60 MOV25 INS21 INS43 INS59 INS32 UPD42 INS32 UPD42 MOV42 INS42 INS11 UPD42 UPD42 MOV42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS43 INS32 UPD42 MOV42 UPD42 MOV42 MOV42 MOV32 UPD42 INS57 UPD42 UPD43 INS43 UPD42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL40 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL40 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL32 DEL21 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL45 DEL27 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL45 DEL27 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL45 DEL27 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL45 DEL27 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL83 DEL39 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL34 DEL27 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL42 DEL40 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL40 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL43 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL34 DEL27 DEL27 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL33 DEL42 DEL42 DEL32 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL32 DEL42 DEL32 DEL14 DEL59 DEL60 DEL40 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL14 DEL59 DEL60 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL40 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL45 DEL45 DEL14 DEL41 DEL8 DEL31