o Refactored the plugin extractors to accept a MavenProject only, and pull the information they need from it in order to extract the mojos they're responsible for.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163435 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.project.MavenProject;
-import org.apache.maven.tools.plugin.extractor.MojoDescriptorExtractor;
-import org.apache.maven.tools.plugin.util.PluginUtils;
+import org.apache.maven.tools.plugin.extractor.AbstractScriptedMojoDescriptorExtractor;
+import java.util.Iterator;
-    implements MojoDescriptorExtractor
+    extends AbstractScriptedMojoDescriptorExtractor
+    
+    protected String getScriptFileExtension()
+    {
+        return ".mmld";
+    }
-    public Set execute( String sourceDir, MavenProject project ) throws Exception
+    protected Set extractMojoDescriptors( Map sourceFilesKeyedByBasedir ) throws Exception
-            String[] files = PluginUtils.findSources( sourceDir, "**/*.mmld" );
-
-
-            File dir = new File( sourceDir );
-            for ( int i = 0; i < files.length; i++ )
+            
+            for ( Iterator mapIterator = sourceFilesKeyedByBasedir.entrySet().iterator(); mapIterator.hasNext(); )
-                String file = files[i];
-
-                File scriptFile = new File( dir, file );
+                Map.Entry entry = (Map.Entry) mapIterator.next();
-                MarmaladeScript script = parse(scriptFile);
+                String basedir = (String)entry.getKey();
+                Set scriptFiles = (Set)entry.getValue();
-                MarmaladeTag rootTag = script.getRoot();
-                if(rootTag instanceof MojoTag)
+                for ( Iterator it = scriptFiles.iterator(); it.hasNext(); )
-                    Map contextMap = new TreeMap();
-                    contextMap.put( MarmaladeMojoExecutionDirectives.SCRIPT_BASEPATH_INVAR, sourceDir );
+                    File scriptFile = (File) it.next();
-                    MarmaladeExecutionContext context = new DefaultContext(contextMap);
+                    MarmaladeScript script = parse(scriptFile);
-                    script.execute(context);
-                    
-                    contextMap = context.getExternalizedVariables();
-
-                    MojoDescriptor descriptor = (MojoDescriptor) contextMap.get( MarmaladeMojoExecutionDirectives.METADATA_OUTVAR );
-
-                    descriptors.add( descriptor );
-                }
-                else
-                {
-                    System.out.println("This script is not a mojo. Its root tag is {element: " + rootTag.getTagInfo().getElement() + ", class: " + rootTag.getClass().getName() + "}");
+                    MarmaladeTag rootTag = script.getRoot();
+                    if(rootTag instanceof MojoTag)
+                    {
+                        Map contextMap = new TreeMap();
+                        contextMap.put( MarmaladeMojoExecutionDirectives.SCRIPT_BASEPATH_INVAR, basedir );
+                        
+                        MarmaladeExecutionContext context = new DefaultContext(contextMap);
+                        
+                        script.execute(context);
+                        
+                        contextMap = context.getExternalizedVariables();
+    
+                        MojoDescriptor descriptor = (MojoDescriptor) contextMap.get( MarmaladeMojoExecutionDirectives.METADATA_OUTVAR );
+    
+                        descriptors.add( descriptor );
+                    }
+                    else
+                    {
+                        System.out.println("This script is not a mojo. Its root tag is {element: " + rootTag.getTagInfo().getElement() + ", class: " + rootTag.getClass().getName() + "}");
+                    }

MOV26 UPD40 UPD40 UPD43 INS31 UPD42 INS83 MOV43 INS42 INS8 UPD83 UPD42 INS41 UPD43 UPD42 INS45 UPD42 INS24 INS58 INS32 INS8 INS43 INS59 INS42 INS42 INS60 INS60 MOV60 MOV24 INS42 UPD42 MOV42 MOV32 INS43 INS59 MOV43 INS59 UPD43 INS32 INS32 UPD42 INS40 INS42 INS11 INS42 INS11 UPD42 UPD42 INS11 INS43 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS43 INS32 MOV43 INS32 INS43 INS32 INS42 UPD42 INS32 MOV43 INS40 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS11 MOV43 INS32 INS42 INS42 UPD42 DEL40 DEL26 DEL42 DEL44 DEL85 DEL5 DEL59 DEL60 DEL45 DEL43 DEL42 DEL14 DEL39 DEL34 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL2 DEL59 DEL60 DEL42 DEL42 DEL14