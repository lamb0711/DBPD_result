MNG-1884 - the wagon manager needs to be injects the proxy/mirror info, otherwise the readProject() calls don't get through the firewalls.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@434079 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.settings.Mirror;
+import org.apache.maven.settings.Proxy;
+import org.apache.maven.settings.Server;
+import org.codehaus.plexus.util.xml.Xpp3Dom;
+            
+            resolveParameters( settings );
+        } 
+    }
+    
+    /**
+     * MKLEINT: copied from DefaultMaven. the wagonManager was not injected with proxy info
+     * when called in non-execute mode..
+     * 
+     * @todo [BP] this might not be required if there is a better way to pass
+     * them in. It doesn't feel quite right.
+     * @todo [JC] we should at least provide a mapping of protocol-to-proxy for
+     * the wagons, shouldn't we?
+     */
+    private void resolveParameters( Settings settings )
+        throws SettingsConfigurationException
+    {
+        
+        Proxy proxy = settings.getActiveProxy();
+        
+        if ( proxy != null ) 
+        {
+            if ( proxy.getHost() == null ) 
+            {
+                throw new SettingsConfigurationException( "Proxy in settings.xml has no host" );
+            }
+            System.out.println("setting proxy to=" + proxy.getHost());
+            wagonManager.addProxy( proxy.getProtocol(), proxy.getHost(), proxy.getPort(), proxy.getUsername(),
+                    proxy.getPassword(), proxy.getNonProxyHosts() );
+        }
+        
+        for ( Iterator i = settings.getServers().iterator(); i.hasNext(); ) 
+        {
+            Server server = (Server) i.next();
+            
+            wagonManager.addAuthenticationInfo( server.getId(), server.getUsername(), server.getPassword(),
+                    server.getPrivateKey(), server.getPassphrase() );
+            
+            wagonManager.addPermissionInfo( server.getId(), server.getFilePermissions(),
+                    server.getDirectoryPermissions() );
+            
+            if ( server.getConfiguration() != null ) 
+            {
+                wagonManager.addConfiguration( server.getId(), (Xpp3Dom) server.getConfiguration() );
+            }
+        }
+        
+        for ( Iterator i = settings.getMirrors().iterator(); i.hasNext(); ) 
+        {
+            Mirror mirror = (Mirror) i.next();
+            
+            wagonManager.addMirror( mirror.getId(), mirror.getMirrorOf(), mirror.getUrl() );
+    

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS65 INS65 INS65 INS43 INS42 INS42 INS60 INS25 INS24 INS24 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS43 INS59 INS27 INS8 INS58 INS32 INS8 INS58 INS32 INS8 INS21 INS42 INS42 INS32 INS42 INS33 INS25 INS21 INS21 INS43 INS59 INS42 INS42 INS60 INS21 INS21 INS25 INS43 INS59 INS42 INS42 INS60 INS21 INS32 INS42 INS42 INS27 INS8 INS32 INS32 INS42 INS42 INS32 INS43 INS59 INS32 INS32 INS27 INS8 INS42 INS42 INS32 INS43 INS59 INS32 INS42 INS42 INS32 INS33 INS53 INS40 INS42 INS27 INS42 INS42 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS32 INS32 INS32 INS32 INS33 INS21 INS32 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS14 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS11 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS42