fixed errors reported by Checkstyle
-import java.util.Iterator;
-            if ( path.length() != 0 )
+            if ( path.length() != 0 && !getScriptSourceRoots().contains( path ) )
-                if ( !getScriptSourceRoots().contains( path ) )
-                {
-                    getScriptSourceRoots().add( path );
-                }
+                getScriptSourceRoots().add( path );
-            if ( a.getArtifactHandler().isAddedToClasspath() )
+            if ( a.getArtifactHandler().isAddedToClasspath()
+            // TODO: let the scope handler deal with this
+                && ( Artifact.SCOPE_COMPILE.equals( a.getScope() ) || Artifact.SCOPE_PROVIDED.equals( a.getScope() ) || Artifact.SCOPE_SYSTEM.equals( a.getScope() ) ) )
-                // TODO: let the scope handler deal with this
-                if ( Artifact.SCOPE_COMPILE.equals( a.getScope() ) || Artifact.SCOPE_PROVIDED.equals( a.getScope() ) || Artifact.SCOPE_SYSTEM.equals( a.getScope() ) )
-                {
-                    addArtifactPath( a, list );
-                }
+                addArtifactPath( a, list );
-            if ( a.getArtifactHandler().isAddedToClasspath() )
+            if ( a.getArtifactHandler().isAddedToClasspath()
+            // TODO: let the scope handler deal with this
+                && ( Artifact.SCOPE_COMPILE.equals( a.getScope() ) || Artifact.SCOPE_PROVIDED.equals( a.getScope() ) || Artifact.SCOPE_SYSTEM.equals( a.getScope() ) ) )
-                // TODO: let the scope handler deal with this
-                if ( Artifact.SCOPE_COMPILE.equals( a.getScope() ) || Artifact.SCOPE_PROVIDED.equals( a.getScope() ) || Artifact.SCOPE_SYSTEM.equals( a.getScope() ) )
-                {
-                    list.add( a );
-                }
+                list.add( a );
-            if ( a.getArtifactHandler().isAddedToClasspath() )
+            if ( a.getArtifactHandler().isAddedToClasspath()
+            // TODO: let the scope handler deal with this
+                && ( Artifact.SCOPE_COMPILE.equals( a.getScope() ) || Artifact.SCOPE_RUNTIME.equals( a.getScope() ) ) )
-                // TODO: let the scope handler deal with this
-                if ( Artifact.SCOPE_COMPILE.equals( a.getScope() ) || Artifact.SCOPE_RUNTIME.equals( a.getScope() ) )
-                {
-                    addArtifactPath( a, list );
-                }
+                addArtifactPath( a, list );
-            if ( a.getArtifactHandler().isAddedToClasspath() )
+            if ( a.getArtifactHandler().isAddedToClasspath()
+            // TODO: let the scope handler deal with this
+                && ( Artifact.SCOPE_COMPILE.equals( a.getScope() ) || Artifact.SCOPE_RUNTIME.equals( a.getScope() ) ) )
-                // TODO: let the scope handler deal with this
-                if ( Artifact.SCOPE_COMPILE.equals( a.getScope() ) || Artifact.SCOPE_RUNTIME.equals( a.getScope() ) )
-                {
-                    list.add( a );
-                }
+                list.add( a );
-            if ( a.getArtifactHandler().isAddedToClasspath() )
+            if ( a.getArtifactHandler().isAddedToClasspath()
+            // TODO: let the scope handler deal with this
+                && Artifact.SCOPE_SYSTEM.equals( a.getScope() ) )
-                // TODO: let the scope handler deal with this
-                if ( Artifact.SCOPE_SYSTEM.equals( a.getScope() ) )
-                {
-                    addArtifactPath( a, list );
-                }
+                addArtifactPath( a, list );
-            if ( a.getArtifactHandler().isAddedToClasspath() )
+            if ( a.getArtifactHandler().isAddedToClasspath()
+            // TODO: let the scope handler deal with this
+                && Artifact.SCOPE_SYSTEM.equals( a.getScope() ) )
-                // TODO: let the scope handler deal with this
-                if ( Artifact.SCOPE_SYSTEM.equals( a.getScope() ) )
-                {
-                    list.add( a );
-                }
+                list.add( a );
-        if ( releaseArtifactRepository == null )
+        if ( releaseArtifactRepository == null && getDistributionManagement() != null
+            && getDistributionManagement().getRepository() != null )
-            if ( getDistributionManagement() != null && getDistributionManagement().getRepository() != null )
+            checkProjectBuildingRequest();
+            try
-                checkProjectBuildingRequest();
-                try
-                {
-                    ArtifactRepository repo =
-                        repositorySystem.buildArtifactRepository( getDistributionManagement().getRepository() );
-                    repositorySystem.injectProxy( projectBuilderConfiguration.getRepositorySession(),
-                                                  Arrays.asList( repo ) );
-                    repositorySystem.injectAuthentication( projectBuilderConfiguration.getRepositorySession(),
-                                                           Arrays.asList( repo ) );
-                    setReleaseArtifactRepository( repo );
-                }
-                catch ( InvalidRepositoryException e )
-                {
-                    throw new IllegalStateException( "Failed to create release distribution repository for " + getId(),
-                                                     e );
-                }
+                ArtifactRepository repo =
+                    repositorySystem.buildArtifactRepository( getDistributionManagement().getRepository() );
+                repositorySystem.injectProxy( projectBuilderConfiguration.getRepositorySession(), Arrays.asList( repo ) );
+                repositorySystem.injectAuthentication( projectBuilderConfiguration.getRepositorySession(),
+                                                       Arrays.asList( repo ) );
+                setReleaseArtifactRepository( repo );
+            }
+            catch ( InvalidRepositoryException e )
+            {
+                throw new IllegalStateException( "Failed to create release distribution repository for " + getId(), e );
-        if ( snapshotArtifactRepository == null )
+        if ( snapshotArtifactRepository == null && getDistributionManagement() != null
+            && getDistributionManagement().getSnapshotRepository() != null )
-            if ( getDistributionManagement() != null && getDistributionManagement().getSnapshotRepository() != null )
+            checkProjectBuildingRequest();
+            try
-                checkProjectBuildingRequest();
-                try
-                {
-                    ArtifactRepository repo =
-                        repositorySystem.buildArtifactRepository( getDistributionManagement().getSnapshotRepository() );
-                    repositorySystem.injectProxy( projectBuilderConfiguration.getRepositorySession(),
-                                                  Arrays.asList( repo ) );
-                    repositorySystem.injectAuthentication( projectBuilderConfiguration.getRepositorySession(),
-                                                           Arrays.asList( repo ) );
-                    setSnapshotArtifactRepository( repo );
-                }
-                catch ( InvalidRepositoryException e )
-                {
-                    throw new IllegalStateException(
-                                                     "Failed to create snapshot distribution repository for " + getId(),
-                                                     e );
-                }
+                ArtifactRepository repo =
+                    repositorySystem.buildArtifactRepository( getDistributionManagement().getSnapshotRepository() );
+                repositorySystem.injectProxy( projectBuilderConfiguration.getRepositorySession(), Arrays.asList( repo ) );
+                repositorySystem.injectAuthentication( projectBuilderConfiguration.getRepositorySession(),
+                                                       Arrays.asList( repo ) );
+                setSnapshotArtifactRepository( repo );
+            }
+            catch ( InvalidRepositoryException e )
+            {
+                throw new IllegalStateException( "Failed to create snapshot distribution repository for " + getId(), e );

MOV8 MOV8 MOV8 MOV8 MOV8 MOV8 MOV8 MOV8 MOV60 MOV60 MOV25 INS70 MOV41 MOV60 INS70 MOV41 MOV60 MOV60 MOV25 INS70 MOV41 MOV60 INS70 MOV41 MOV60 INS70 MOV41 MOV41 MOV41 MOV27 MOV44 MOV32 MOV8 MOV44 MOV32 MOV8 MOV44 MOV32 MOV8 MOV44 MOV32 MOV8 MOV8 MOV44 MOV32 MOV8 MOV21 INS27 INS27 INS27 INS27 INS27 INS27 INS27 INS27 INS27 MOV27 MOV27 MOV27 MOV27 MOV27 MOV38 MOV32 INS36 MOV32 INS36 MOV32 INS36 MOV32 INS36 MOV32 MOV32 MOV32 MOV32 MOV27 MOV27 MOV27 MOV27 DEL40 DEL26 DEL25 DEL8 DEL25 DEL70 DEL8 DEL25 DEL70 DEL8 DEL25 DEL70 DEL8 DEL25 DEL70 DEL8 DEL25 DEL8 DEL25 DEL70 DEL8 DEL25 DEL8 DEL25 DEL8