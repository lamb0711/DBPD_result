o remove standalone property


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@726579 13f79535-47bb-0310-9956-ffa450edef68

-        if ( requestProperties.getProperty( MavenEmbedder.STANDALONE_MODE ) == null )
-        {
-            // TODO: Remove this!
-            System.setProperty( MavenEmbedder.STANDALONE_MODE, "true" );
-            requestProperties.setProperty( MavenEmbedder.STANDALONE_MODE, "true" );
-        }
-
-    private void realmManager( MavenExecutionRequest request,
-                               Configuration configuration )
+    private void realmManager( MavenExecutionRequest request, Configuration configuration )
-    private void processSettings( MavenExecutionRequest request,
-                                  Configuration configuration )
+    private void processSettings( MavenExecutionRequest request, Configuration configuration )
-    private void pom( MavenExecutionRequest request,
-                      Configuration configuration )
+    private void pom( MavenExecutionRequest request, Configuration configuration )
-    private void settings( MavenExecutionRequest request,
-                           Configuration configuration )
+    private void settings( MavenExecutionRequest request, Configuration configuration )
-        // ------------------------------------------------------------------------
-        // Repository Checksum Policies
-        //
-        // We take the checksum passed in via the request.
-        // ------------------------------------------------------------------------
-
-    private void artifactTransferMechanism( MavenExecutionRequest request,
-                                            Configuration configuration )
+    private void artifactTransferMechanism( MavenExecutionRequest request, Configuration configuration )
-        //
-        //
-            throw new MavenEmbedderException(
-                "Unable to configure Maven for execution",
-                e );
+            throw new MavenEmbedderException( "Unable to configure Maven for execution", e );
-                wagonManager.addProxy(
-                    proxy.getProtocol(),
-                    proxy.getHost(),
-                    proxy.getPort(),
-                    proxy.getUsername(),
-                    proxy.getPassword(),
-                    proxy.getNonProxyHosts() );
+                wagonManager.addProxy( proxy.getProtocol(), proxy.getHost(), proxy.getPort(), proxy.getUsername(), proxy.getPassword(), proxy.getNonProxyHosts() );
-                wagonManager.addAuthenticationInfo(
-                    server.getId(),
-                    server.getUsername(),
-                    server.getPassword(),
-                    server.getPrivateKey(),
-                    server.getPassphrase() );
+                wagonManager.addAuthenticationInfo( server.getId(), server.getUsername(), server.getPassword(), server.getPrivateKey(), server.getPassphrase() );
-                wagonManager.addPermissionInfo(
-                    server.getId(),
-                    server.getFilePermissions(),
-                    server.getDirectoryPermissions() );
+                wagonManager.addPermissionInfo( server.getId(), server.getFilePermissions(), server.getDirectoryPermissions() );
-                    wagonManager.addConfiguration(
-                        server.getId(),
-                        (Xpp3Dom) server.getConfiguration() );
+                    wagonManager.addConfiguration( server.getId(), (Xpp3Dom) server.getConfiguration() );
-                wagonManager.addMirror(
-                    mirror.getId(),
-                    mirror.getMirrorOf(),
-                    mirror.getUrl() );
+                wagonManager.addMirror( mirror.getId(), mirror.getMirrorOf(), mirror.getUrl() );
-    public ArtifactRepository createLocalRepository( MavenExecutionRequest request,
-                                                     Settings settings,
-                                                     Configuration configuration ) 
+    public ArtifactRepository createLocalRepository( MavenExecutionRequest request, Settings settings, Configuration configuration ) 
-    private void profileManager( MavenExecutionRequest request,
-                                 Configuration configuration )
+    private void profileManager( MavenExecutionRequest request, Configuration configuration )

DEL42 DEL42 DEL40 DEL32 DEL33 DEL27 DEL42 DEL42 DEL40 DEL45 DEL32 DEL21 DEL42 DEL42 DEL40 DEL45 DEL32 DEL21 DEL8 DEL25