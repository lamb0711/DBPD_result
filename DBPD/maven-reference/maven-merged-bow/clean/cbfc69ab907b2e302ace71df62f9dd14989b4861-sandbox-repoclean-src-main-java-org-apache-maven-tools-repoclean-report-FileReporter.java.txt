refactor reporter

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@290070 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.PrintWriter;
-import java.io.StringWriter;
-import java.util.ArrayList;
-import java.util.Iterator;
-import java.util.List;
-    implements Reporter
+    extends AbstractReporter
-
-    private static final String WARN_LEVEL = "[WARNING] ";
-
-    private static final String ERROR_LEVEL = "[ERROR] ";
-
-    private List messages = new ArrayList();
-
-    private boolean hasError = false;
-
-    private boolean hasWarning = false;
-
-    private final boolean warningsEnabled;
-
-        this.warningsEnabled = warningsEnabled;
+        super( warningsEnabled );
-    private void write( Object message )
+    protected void write( String message )
-            if ( message instanceof List )
-            {
-                writer.write( format( (List) message ).toString() );
-            }
-            else
-            {
-                writer.write( String.valueOf( message ) );
-            }
+            writer.write( message );
-    public boolean hasWarning()
-    {
-        return hasWarning;
-    }
-
-    public boolean hasError()
-    {
-        return hasError;
-    }
-
-    public void warn( String message )
-        throws ReportWriteException
-    {
-        if ( warningsEnabled )
-        {
-            hasWarning = true;
-            String source = getSourceLine();
-            write( new AppendingList( 3 ).append( WARN_LEVEL ).append( source ).append( message ) );
-        }
-    }
-
-    public void error( String message, Throwable error )
-        throws ReportWriteException
-    {
-        hasError = true;
-        String source = getSourceLine();
-        write( new AppendingList( 4 ).append( ERROR_LEVEL ).append( source ).append( message ).append( error ) );
-    }
-
-    public void error( String message )
-        throws ReportWriteException
-    {
-        hasError = true;
-        String source = getSourceLine();
-        write( new AppendingList( 3 ).append( ERROR_LEVEL ).append( source ).append( message ) );
-    }
-
-    private String getSourceLine()
-    {
-        NullPointerException npe = new NullPointerException();
-
-        StackTraceElement element = npe.getStackTrace()[2];
-
-        return " Reported from: (" + element.getClassName() + "." + element.getMethodName() + "(..):" +
-            element.getLineNumber() + ")\n";
-    }
-
-    private CharSequence format( List messageParts )
-    {
-        StringBuffer buffer = new StringBuffer();
-        for ( Iterator it = messageParts.iterator(); it.hasNext(); )
-        {
-            Object part = it.next();
-            if ( part instanceof Throwable )
-            {
-                part = formatThrowable( (Throwable) part );
-            }
-
-            buffer.append( part );
-        }
-
-        return buffer;
-    }
-
-    private String formatThrowable( Throwable throwable )
-    {
-        StringWriter sWriter = new StringWriter();
-        PrintWriter pWriter = new PrintWriter( sWriter );
-
-        throwable.printStackTrace( pWriter );
-
-        return sWriter.toString();
-    }
-
-    private static class AppendingList
-        extends ArrayList
-    {
-        public AppendingList()
-        {
-        }
-
-        public AppendingList( int size )
-        {
-            super( size );
-        }
-
-        public AppendingList append( Object item )
-        {
-            super.add( item );
-            return this;
-        }
-    }
-

UPD43 UPD42 UPD83 MOV44 INS46 UPD43 MOV43 MOV42 INS42 UPD42 MOV21 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL43 DEL42 DEL11 DEL32 DEL42 DEL32 DEL42 DEL42 DEL43 DEL62 DEL8 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL83 DEL39 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL42 DEL9 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL43 DEL34 DEL14 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL9 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL43 DEL34 DEL14 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL9 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL43 DEL34 DEL14 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL34 DEL2 DEL59 DEL60 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL83 DEL42 DEL42 DEL43 DEL83 DEL42 DEL8 DEL31 DEL83 DEL42 DEL39 DEL42 DEL44 DEL42 DEL46 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL48 DEL21 DEL52 DEL41 DEL8 DEL31 DEL55