[MNG-3260] 2.1: aggregating plugins in submodules of the reactor return all projects causing a chicken/egg issue

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@808394 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.Artifact;
+import org.apache.maven.artifact.ArtifactUtils;
+import org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException;
-                    projectDependenciesResolver.resolve( project, executionPlan.getRequiredResolutionScopes(),
-                                                         repositoryRequest );
+
+                    try
+                    {
+                        projectDependenciesResolver.resolve( project, executionPlan.getRequiredResolutionScopes(),
+                                                             repositoryRequest );
+                    }
+                    catch ( MultipleArtifactsNotFoundException e )
+                    {
+                        /*
+                         * MNG-2277, the check below compensates for our bad plugin support where we ended up with
+                         * aggregator plugins that require dependency resolution although they usually run in phases of
+                         * the build where project artifacts haven't been assembled yet. The prime example of this is
+                         * "mvn release:prepare".
+                         */
+                        if ( projectBuild.taskSegment.aggregating
+                            && areAllArtifactsInReactor( session.getProjects(), e.getMissingArtifacts() ) )
+                        {
+                            logger.warn( "The following artifacts could not be resolved at this point of the build"
+                                + " but seem to be part of the reactor:" );
+                            for ( Artifact artifact : e.getMissingArtifacts() )
+                            {
+                                logger.warn( "o " + artifact.getId() );
+                            }
+                            logger.warn( "Try running the build up to the lifecycle phase \"package\"" );
+                        }
+                        else
+                        {
+                            throw e;
+                        }
+                    }
+    private boolean areAllArtifactsInReactor( Collection<MavenProject> projects, Collection<Artifact> artifacts )
+    {
+        Set<String> projectKeys = new HashSet<String>( projects.size() * 2 );
+        for ( MavenProject project : projects )
+        {
+            String key = ArtifactUtils.key( project.getGroupId(), project.getArtifactId(), project.getVersion() );
+            projectKeys.add( key );
+        }
+
+        for ( Artifact artifact : artifacts )
+        {
+            String key = ArtifactUtils.key( artifact );
+            if ( !projectKeys.contains( key ) )
+            {
+                return false;
+            }
+        }
+
+        return true;
+    }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS83 INS39 INS42 INS44 INS44 INS8 INS74 INS42 INS74 INS42 INS60 INS70 INS70 INS41 INS43 INS43 INS43 INS43 INS74 INS59 INS44 INS42 INS8 INS44 INS42 INS8 INS9 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS14 INS43 INS42 INS60 INS21 INS43 INS42 INS60 INS25 INS42 INS42 INS74 INS27 INS42 INS43 INS59 INS32 INS42 INS43 INS59 INS38 INS8 INS43 INS43 INS32 INS34 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS41 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS9 MOV21 INS54 INS42 INS42 INS42 INS42 INS42 INS42 MOV8 INS12 INS44 INS8 INS43 INS42 INS25 INS42 INS27 INS8 INS8 INS40 INS32 INS21 INS70 INS21 INS53 INS42 INS32 INS32 INS32 INS44 INS32 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS43 INS42 INS42 INS42 INS21 INS42 INS42 INS45 INS45 INS45 INS42 INS32 INS42 INS42 INS27 INS45 INS32 INS42 INS42