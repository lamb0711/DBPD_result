[MNG-5937] Optimize code for Java 8

-import java.io.File;
-import java.math.BigInteger;
-import java.security.MessageDigest;
+import java.nio.file.Path;
+import java.nio.file.Paths;
-    private File mavenUserHome;
+    private Path mavenUserHome;
-    public PathAssembler( File mavenUserHome )
+    public PathAssembler( Path mavenUserHome )
-        String distName = removeExtension( baseName );
-        String rootDirName = rootDirName( distName, configuration );
-        File distDir = new File( getBaseDir( configuration.getDistributionBase() ),
-                                 configuration.getDistributionPath() + "/" + rootDirName );
-        File distZip = new File( getBaseDir( configuration.getZipBase() ),
-                                 configuration.getZipPath() + "/" + rootDirName + "/" + baseName );
+        String rootDirName = removeExtension( baseName );
+        Path distDir = getBaseDir( configuration.getDistributionBase() )
+                        .resolve( configuration.getDistributionPath() )
+                        .resolve( rootDirName );
+        Path distZip = getBaseDir( configuration.getZipBase() )
+                        .resolve( configuration.getZipPath() )
+                        .resolve( rootDirName )
+                        .resolve( baseName );
-    private String rootDirName( String distName, WrapperConfiguration configuration )
-    {
-        String urlHash = getMd5Hash( configuration.getDistribution().toString() );
-        return String.format( "%s/%s", distName, urlHash );
-    }
-
-    private String getMd5Hash( String string )
-    {
-        try
-        {
-            MessageDigest messageDigest = MessageDigest.getInstance( "MD5" );
-            byte[] bytes = string.getBytes();
-            messageDigest.update( bytes );
-            return new BigInteger( 1, messageDigest.digest() ).toString( 32 );
-        }
-        catch ( Exception e )
-        {
-            throw new RuntimeException( "Could not hash input string.", e );
-        }
-    }
-
-    private File getBaseDir( String base )
+    private Path getBaseDir( String base )
-        if ( base.equals( MAVEN_USER_HOME_STRING ) )
+        if ( MAVEN_USER_HOME_STRING.equals( base ) )
-        else if ( base.equals( PROJECT_STRING ) )
+        else if ( PROJECT_STRING.equals( base ) )
-            return new File( System.getProperty( "user.dir" ) );
+            return Paths.get( System.getProperty( "user.dir" ) );
-            throw new RuntimeException( "Base: " + base + " is unknown" );
+            throw new IllegalArgumentException( "Base: " + base + " is unknown" );
-        private final File distZip;
+        private final Path distZip;
-        private final File distDir;
+        private final Path distDir;
-        public LocalDistribution( File distDir, File distZip )
+        public LocalDistribution( Path distDir, Path distZip )
-        public File getDistributionDir()
+        public Path getDistributionDir()
-        public File getZipFile()
+        public Path getZipFile()

MOV26 UPD40 UPD40 UPD43 UPD43 UPD42 UPD43 UPD42 UPD43 UPD43 UPD43 UPD43 UPD42 UPD43 UPD43 UPD42 UPD42 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 INS32 UPD42 INS32 UPD42 UPD42 UPD42 UPD42 INS32 INS42 INS42 INS32 INS42 INS42 UPD42 UPD42 MOV32 INS42 MOV32 INS32 INS42 INS42 INS32 MOV32 INS42 MOV32 INS42 INS42 MOV32 UPD43 UPD42 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL42 DEL43 DEL45 DEL42 DEL45 DEL42 DEL27 DEL14 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL39 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL34 DEL42 DEL42 DEL32 DEL14 DEL42 DEL34 DEL32 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL31 DEL42 DEL43 DEL14