Adding methods for backward compat, and deprecating them...and adding a few debug log statements.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@498044 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.settings.Settings;
-import java.io.File;
-import java.net.URL;
-import java.util.HashMap;
-    private Map resolvedCoreArtifactFiles = new HashMap();
-
+    /**
+     * @deprecated use {@link PluginManager#verifyPlugin(Plugin, MavenProject, Settings)}
+     */
+    public PluginDescriptor verifyPlugin( Plugin plugin, MavenProject project, Settings settings,
+                                          ArtifactRepository localRepository )
+        throws ArtifactResolutionException, PluginVersionResolutionException, ArtifactNotFoundException,
+        InvalidVersionSpecificationException, InvalidPluginException, PluginManagerException, PluginNotFoundException,
+        PluginVersionNotFoundException
+    {
+        // TODO: this should be possibly outside
+        // All version-resolution logic has been moved to DefaultPluginVersionManager.
+        if ( plugin.getVersion() == null )
+        {
+            String version = pluginVersionManager.resolvePluginVersion( plugin.getGroupId(), plugin.getArtifactId(),
+                                                                        project, settings, localRepository );
+            plugin.setVersion( version );
+        }
+
+        return verifyVersionedPlugin( plugin, project, localRepository );
+    }
+    
+        
+        return verifyVersionedPlugin( plugin, project, localRepository );
+    }
+    
+    private PluginDescriptor verifyVersionedPlugin( Plugin plugin, MavenProject project,
+                                                    ArtifactRepository localRepository )
+        throws PluginVersionResolutionException, ArtifactNotFoundException, ArtifactResolutionException,
+        InvalidVersionSpecificationException, InvalidPluginException, PluginManagerException, PluginNotFoundException
+    {
-                addPlugin( plugin, pluginArtifact, project, session );
+                addPlugin( plugin, pluginArtifact, project, localRepository );
+                              ArtifactRepository localRepository )
+        throws ArtifactNotFoundException, ArtifactResolutionException, PluginManagerException, InvalidPluginException
+    {
+        // ----------------------------------------------------------------------------
+        // Get the dependencies for the Plugin
+        // ----------------------------------------------------------------------------
+
+        // the only Plugin instance which will have dependencies is the one specified in the project.
+        // We need to look for a Plugin instance there, in case the instance we're using didn't come from
+        // the project.
+        Plugin projectPlugin = (Plugin) project.getBuild().getPluginsAsMap().get( plugin.getKey() );
+
+        if ( projectPlugin == null )
+        {
+            projectPlugin = plugin;
+        }
+
+        Set artifacts = getPluginArtifacts( pluginArtifact, projectPlugin, project, localRepository );
+        
+        addPlugin( plugin, projectPlugin, pluginArtifact, artifacts );
+    }
+    
+    protected void addPlugin( Plugin plugin,
+                              Artifact pluginArtifact,
+                              MavenProject project,
-        Set artifacts = getPluginArtifacts( pluginArtifact, projectPlugin, project, session );
+        Set artifacts = getPluginArtifacts( pluginArtifact, projectPlugin, project, session.getLocalRepository() );
+        
+        addPlugin( plugin, projectPlugin, pluginArtifact, artifacts );
+    }
+    
+    private void addPlugin( Plugin plugin, Plugin projectPlugin, Artifact pluginArtifact, Set artifacts )
+        throws ArtifactNotFoundException, ArtifactResolutionException, PluginManagerException, InvalidPluginException
+    {
+        getLogger().debug( "Checking for plugin descriptor for: " + plugin.getKey() + " in collector: " + pluginCollector );
+        
-        getLogger().debug( "Realm for plugin: " + plugin.getKey() + ":\n" + componentRealm );
+        getLogger().info( "Realm for plugin: " + plugin.getKey() + ":\n" + componentRealm );
-    private Set getPluginArtifacts( Artifact pluginArtifact,
-                                    Plugin plugin,
-                                    MavenProject project,
-                                    MavenSession session )
+    private Set getPluginArtifacts( Artifact pluginArtifact, Plugin plugin, MavenProject project,
+                                    ArtifactRepository localRepository )
+
-        ArtifactRepository localRepository = session.getLocalRepository();
-
-            plugin = (Mojo) container.lookup( Mojo.ROLE, mojoDescriptor.getRoleHint(), realm );
+            if ( realm != null )
+            {
+                plugin = (Mojo) container.lookup( Mojo.ROLE, mojoDescriptor.getRoleHint(), realm );
+            }
+            else
+            {
+                plugin = (Mojo) container.lookup( Mojo.ROLE, mojoDescriptor.getRoleHint() );
+            }

MOV26 UPD40 INS31 INS31 INS31 INS31 MOV44 INS29 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS8 INS83 INS43 INS42 INS44 INS44 MOV44 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS8 INS44 INS83 INS39 INS42 INS44 INS44 MOV44 INS44 INS43 INS43 INS43 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS44 MOV44 INS43 INS43 INS43 INS43 INS8 UPD83 INS44 INS44 INS65 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS25 INS41 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV60 INS41 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS42 MOV60 MOV25 INS60 INS21 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS60 INS25 INS60 INS21 UPD43 UPD42 INS43 INS42 INS21 INS43 INS42 INS66 INS65 INS42 INS42 INS42 INS42 INS27 INS8 INS32 INS42 UPD42 MOV42 INS32 INS42 INS42 INS42 INS42 MOV43 INS59 INS32 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS43 INS59 INS32 UPD42 INS42 INS32 INS42 INS68 INS32 INS33 INS60 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS11 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 MOV42 INS27 UPD42 INS25 INS42 INS42 INS69 INS69 INS69 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS7 INS42 INS42 INS42 INS42 INS32 UPD42 MOV42 INS45 INS32 INS45 INS42 INS27 INS8 INS8 INS43 INS43 INS43 INS42 INS42 INS32 INS42 INS42 INS42 UPD42 MOV42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS33 MOV21 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 INS11 INS43 INS32 INS42 INS42 INS42 INS40 INS32 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL83 DEL43 DEL43 DEL14 DEL59 DEL23 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60