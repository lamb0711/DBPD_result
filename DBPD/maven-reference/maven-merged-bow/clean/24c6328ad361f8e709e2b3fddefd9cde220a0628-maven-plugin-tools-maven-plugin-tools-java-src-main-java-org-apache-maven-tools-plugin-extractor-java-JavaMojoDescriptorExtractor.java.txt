declare the desired "prefix" inside the plugin descriptor instead of pulling apart the artifact ID (though that is how the default is created).
Currently, the reverse is not handled in anyway, so a non-default prefix may not work, but this makes the code easier to isolate.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168099 13f79535-47bb-0310-9956-ffa450edef68

+import com.thoughtworks.qdox.JavaDocBuilder;
+import com.thoughtworks.qdox.model.DocletTag;
+import com.thoughtworks.qdox.model.JavaClass;
+import com.thoughtworks.qdox.model.JavaField;
+import com.thoughtworks.qdox.model.JavaSource;
+import org.apache.maven.tools.plugin.PluginToolsException;
-import com.thoughtworks.qdox.JavaDocBuilder;
-import com.thoughtworks.qdox.model.DocletTag;
-import com.thoughtworks.qdox.model.JavaClass;
-import com.thoughtworks.qdox.model.JavaField;
-import com.thoughtworks.qdox.model.JavaSource;
-
+import java.util.Map.Entry;
-import java.util.Map.Entry;
-    private MojoDescriptor createMojoDescriptor( JavaSource javaSource, MavenProject project )
+    private MojoDescriptor createMojoDescriptor( JavaSource javaSource, PluginDescriptor pluginDescriptor )
+        mojoDescriptor.setPluginDescriptor( pluginDescriptor );
-        String pluginId = PluginDescriptor.getPluginIdFromArtifactId( project.getArtifactId() );
-
-        mojoDescriptor.setId( pluginId );
-
-    public Set execute( MavenProject project )
-        throws Exception
+    public Set execute( MavenProject project, PluginDescriptor pluginDescriptor )
+        throws InvalidParameterException
-                MojoDescriptor mojoDescriptor = createMojoDescriptor( javaSources[i], project );
+                MojoDescriptor mojoDescriptor = createMojoDescriptor( javaSources[i], pluginDescriptor );

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS40 MOV21 INS44 UPD43 UPD43 UPD42 INS43 INS42 UPD42 UPD42 INS42 UPD42 UPD42 UPD42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60