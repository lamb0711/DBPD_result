Try to assume that a plugin bound in the POM but not resolved during build-plan-building will be resolvable later.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@545558 13f79535-47bb-0310-9956-ffa450edef68

-                                            throw new LifecycleLoaderException( "Failed to load plugin: " + plugin
-                                                            + ". Reason: " + e.getMessage(), e );
+                                            mojoBinding.setLateBound( true );
+
+                                            String message = "Failed to load plugin descriptor for: "
+                                                             + plugin
+                                                             + ". Assigning this plugin to be resolved again just prior to its execution. "
+                                                             + "NOTE, This may affect assignment of the mojo: "
+                                                             + mojoBinding.getGoal()
+                                                             + " if its default phase (given in the plugin descriptor) is used.";
+
+                                            if ( logger.isDebugEnabled() )
+                                            {
+                                                logger.debug( message, e );
+                                            }
+                                            else
+                                            {
+                                                logger.warn( message + " Check debug output (-X) for more information." );
+                                            }
-                                    if ( pluginDescriptor.getMojos() == null )
+                                    if ( pluginDescriptor != null )
-                                        logger.error( "Somehow, the PluginDescriptor for plugin: " + plugin.getKey()
-                                                        + " contains no mojos. This is highly irregular. Ignoring..." );
-                                        continue;
-                                    }
+                                        if ( pluginDescriptor.getMojos() == null )
+                                        {
+                                            logger.error( "Somehow, the PluginDescriptor for plugin: " + plugin.getKey()
+                                                            + " contains no mojos. This is highly irregular. Ignoring..." );
+                                            continue;
+                                        }
-                                    MojoDescriptor mojoDescriptor = pluginDescriptor.getMojo( goal );
-                                    phase = mojoDescriptor.getPhase();
+                                        MojoDescriptor mojoDescriptor = pluginDescriptor.getMojo( goal );
+                                        phase = mojoDescriptor.getPhase();
+                                    }

INS25 INS27 INS8 INS42 INS33 MOV25 MOV60 MOV21 INS21 INS60 INS25 INS32 INS43 INS59 INS32 INS8 INS8 INS42 INS42 INS9 UPD42 MOV42 INS42 INS27 INS42 INS42 INS21 INS21 UPD45 MOV45 MOV42 INS45 UPD45 MOV45 MOV32 INS45 INS32 INS32 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS45 DEL43 DEL27 DEL42 DEL14 DEL53