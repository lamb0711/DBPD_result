Updated to use latest model-builder. Now detect most specialized model through method, not order of domain model list.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@749870 13f79535-47bb-0310-9956-ffa450edef68

-            transformedDomainModel = ( (PomClassicDomainModel) ctx.transform( Arrays.asList(  new PomClassicDomainModel(transformed), convertToDomainModel(model)),
+            transformedDomainModel = ( (PomClassicDomainModel) ctx.transform( Arrays.asList(  new PomClassicDomainModel(transformed, false), convertToDomainModel(model, true)),
+        domainModel.setMostSpecialized(true);
+        
-        domainModels.add( domainModel );
+
-            domainModels.add(new PomClassicDomainModel(transformed));
+            domainModels.add(new PomClassicDomainModel(transformed, false));
-
+        domainModels.add( domainModel );
+        
-        domainModels.add( convertToDomainModel( getSuperModel() ) );
+        domainModels.add( convertToDomainModel( getSuperModel() , false ));
-    private PomClassicDomainModel convertToDomainModel(Model model) throws IOException
+    private PomClassicDomainModel convertToDomainModel(Model model, boolean isMostSpecialized) throws IOException
-        return new PomClassicDomainModel(new ByteArrayInputStream(baos.toByteArray()));
+        return new PomClassicDomainModel(new ByteArrayInputStream(baos.toByteArray()), isMostSpecialized);

MOV21 INS44 INS21 INS39 INS42 INS32 INS42 INS42 INS9 INS42 INS9 INS9 INS9 INS9