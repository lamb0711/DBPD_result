o get rid of the reactor manager to make way for a real reactor that can be a local repository implementation which will prevent the pollution in the metadata source for dealing with projects that are in the current build
o clean up the project sorter
o push the information that was in the reactor manager into the session


git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@772039 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.PrintWriter;
-import java.io.StringWriter;
-import java.util.Iterator;
-import org.apache.maven.ProjectBuildFailureException;
-import org.apache.maven.embedder.MavenEmbedderConsoleLogger;
-import org.apache.maven.execution.MavenExecutionRequest;
-import org.apache.maven.execution.MavenExecutionResult;
-import org.apache.maven.execution.ReactorManager;
-import org.apache.maven.lifecycle.LifecycleExecutionException;
-import org.apache.maven.plugin.MojoFailureException;
-import org.apache.maven.project.MavenProject;
-import org.apache.maven.project.ProjectBuildingException;
-import org.apache.maven.reactor.MavenExecutionException;
-    private CLIReportingUtils()
-    {
-    }
-
-    /**
-     * Logs result of the executed build.
-     * 
-     * @param request - build parameters
-     * @param result - result of build
-     * @param logger - the logger to use
-     */
-    public static void logResult( MavenExecutionRequest request, MavenExecutionResult result, MavenEmbedderLogger logger )
-    {
-        ReactorManager reactorManager = result.getReactorManager();
-
-        logReactorSummary( reactorManager, logger );
-
-        boolean printSuccess = true;
-        if ( result.hasExceptions() )
-        {
-            for ( Iterator i = result.getExceptions().iterator(); i.hasNext(); )
-            {
-                Exception e = (Exception) i.next();
-                
-                showError( e, request.isShowErrors(), logger );
-            }
-
-            line( logger );
-            if ( !request.isShowErrors() )
-            {
-                logger.info( "For more information, run with the -e flag" );
-                line( logger );
-            }
-
-            if ( !ReactorManager.FAIL_NEVER.equals( request.getReactorFailureBehavior() ) )
-            {
-                logger.info( "BUILD FAILED" );
-
-                line( logger );
-
-                stats( request.getStartTime(), logger );
-
-                line( logger );
-
-                printSuccess = false;
-            }
-            else
-            {
-                logger.info( " + Ignoring build failures" );
-            }
-        }
-
-        if ( printSuccess )
-        {
-            line( logger );
-
-            logger.info( "BUILD SUCCESSFUL" );
-
-            line( logger );
-
-            stats( request.getStartTime(), logger );
-
-            line( logger );
-        }
-
-        logger.close();
-    }
-
-    static void showError( String message, Exception e, boolean showErrors )
-    {
-        MavenEmbedderLogger logger = new MavenEmbedderConsoleLogger();
-
-        showError( message, e, showErrors, logger );
-
-        if ( !showErrors )
-        {
-            logger.info( "For more information, run with the -e flag" );
-        }
-    }
-
-    private static void showError( Exception e, boolean show, MavenEmbedderLogger logger )
-    {
-        showError( null, e, show, logger );
-    }
-
-    /**
-     * Format the exception and output it through the logger.
-     * 
-     * @param message - error message
-     * @param e - exception that was thrown
-     * @param showStackTraces
-     * @param logger
-     */
-    //mkleint: public because used in netbeans integration
-    public static void showError( String message, Exception e, boolean showStackTraces, MavenEmbedderLogger logger )
-    {
-        StringWriter writer = new StringWriter();
-
-        writer.write( NEWLINE );
-
-        if ( message != null )
-        {
-            writer.write( message );
-            writer.write( NEWLINE );
-        }
-
-        buildErrorMessage( e, showStackTraces, writer );
-
-        writer.write( NEWLINE );
-
-        if ( showStackTraces )
-        {
-            writer.write( "Error stacktrace:" );
-            writer.write( NEWLINE );
-            e.printStackTrace( new PrintWriter( writer ) );
-
-        }
-
-        logger.error( writer.toString() );
-    }
-
-    public static void buildErrorMessage( Exception e, boolean showStackTraces, StringWriter writer )
-    {                
-        boolean handled = false;
-
-        if ( e instanceof ProjectBuildingException )
-        {
-            handled = handleProjectBuildingException( (ProjectBuildingException) e, showStackTraces, writer );
-        }
-        if ( e instanceof ProjectBuildFailureException )
-        {
-            handled = handleBuildFailureException( (ProjectBuildFailureException) e, showStackTraces, writer );
-        }
-        else if ( e instanceof LifecycleExecutionException )
-        {
-            handled = handleLifecycleExecutionException( (LifecycleExecutionException) e, showStackTraces, writer );
-        }
-        else if ( e instanceof MavenExecutionException )
-        {
-
-            handled = handleMavenExecutionException( (MavenExecutionException) e, showStackTraces, writer );
-        }
-
-        if ( !handled )
-        {
-            handleGenericException( e, showStackTraces, writer );
-        }
-    }
-
-    private static boolean handleMavenExecutionException( MavenExecutionException e, boolean showStackTraces, StringWriter writer )
-    {
-        handleGenericException( e, showStackTraces, writer );
-
-        if ( e.getPomFile() != null )
-        {
-            writer.write( NEWLINE );
-            writer.write( NEWLINE );
-            writer.write( "POM File: " );
-            writer.write( e.getPomFile().getAbsolutePath() );
-            writer.write( NEWLINE );
-            writer.write( NEWLINE );
-        }
-
-        return true;
-    }
-
-    private static void handleGenericException( Throwable exception, boolean showStackTraces, StringWriter writer )
-    {
-        writer.write( exception.getMessage() );
-        writer.write( NEWLINE );
-    }
-
-    private static boolean handleBuildFailureException( ProjectBuildFailureException e, boolean showStackTraces, StringWriter writer )
-    {
-        MojoFailureException mojoFailureException = e.getMojoFailureException();
-        writer.write( mojoFailureException.getMessage() );
-        writer.write( mojoFailureException.getLongMessage() );        
-        return true;
-    }
-    
-    private static boolean handleLifecycleExecutionException( LifecycleExecutionException e, boolean showStackTraces, StringWriter writer )
-    {
-        handleGenericException( e, showStackTraces, writer );
-
-        MavenProject project = e.getProject();
-        
-        if(project != null)
-        {
-            writer.write( NEWLINE );
-            writer.write( "While building project with id: " );
-            writer.write( project.getId() );
-            writer.write( NEWLINE );
-            if ( project.getFile() != null )
-            {
-                writer.write( "Project File: " );
-                writer.write( project.getFile().getAbsolutePath() );
-            }
-            writer.write( NEWLINE );
-        }
-        
-        return true;
-    }
-
-    private static boolean handleProjectBuildingException( ProjectBuildingException e, boolean showStackTraces, StringWriter writer )
-    {
-        handleGenericException( e, showStackTraces, writer );
-
-        writer.write( NEWLINE );
-        writer.write( "Failing project's id: " );
-        writer.write( e.getProjectId() );
-        writer.write( NEWLINE );
-        if ( e.getPomFile() == null )
-        {
-            writer.write( "Source: Super POM (implied root ancestor of all Maven POMs)" );
-        }
-        else
-        {
-            writer.write( "Project File: " );
-            writer.write( e.getPomFile().getAbsolutePath() );
-        }
-        writer.write( NEWLINE );
-
-        return true;
-    }
-
-    private static void logReactorSummary( ReactorManager rm, MavenEmbedderLogger logger )
-    {
-        if ( ( rm != null ) && rm.hasMultipleProjects() && rm.executedMultipleProjects() )
-        {
-            logger.info( "" );
-            logger.info( "" );
-
-            // -------------------------
-            // Reactor Summary:
-            // -------------------------
-            // o project-name...........FAILED
-            // o project2-name..........SKIPPED (dependency build failed or was skipped)
-            // o project-3-name.........SUCCESS
-
-            line( logger );
-            logger.info( "Reactor Summary:" );
-            line( logger );
-
-            for ( Iterator it = rm.getSortedProjects().iterator(); it.hasNext(); )
-            {
-                MavenProject project = (MavenProject) it.next();
-
-                if ( rm.hasBuildFailure( project ) )
-                {
-                    logReactorSummaryLine( project.getName(), "FAILED", rm.getBuildFailure( project ).getTime(), logger );
-                }
-                else if ( rm.isBlackListed( project ) )
-                {
-                    logReactorSummaryLine( project.getName(), "SKIPPED (dependency build failed or was skipped)", logger );
-                }
-                else if ( rm.hasBuildSuccess( project ) )
-                {
-                    logReactorSummaryLine( project.getName(), "SUCCESS", rm.getBuildSuccess( project ).getTime(), logger );
-                }
-                else
-                {
-                    logReactorSummaryLine( project.getName(), "NOT BUILT", logger );
-                }
-            }
-            line( logger );
-        }
-    }
-
-    private static void line( MavenEmbedderLogger logger )
-    {
-        logger.info( "------------------------------------------------------------------------" );
-    }
-
-    private static void logReactorSummaryLine( String name, String status, MavenEmbedderLogger logger )
-    {
-        logReactorSummaryLine( name, status, -1, logger );
-    }
-
-    private static void logReactorSummaryLine( String name, String status, long time, MavenEmbedderLogger logger )
-    {
-        StringBuffer messageBuffer = new StringBuffer();
-
-        messageBuffer.append( name );
-
-        int dotCount = 54;
-
-        dotCount -= name.length();
-
-        messageBuffer.append( " " );
-
-        for ( int i = 0; i < dotCount; i++ )
-        {
-            messageBuffer.append( '.' );
-        }
-
-        messageBuffer.append( " " );
-
-        messageBuffer.append( status );
-
-        if ( time >= 0 )
-        {
-            messageBuffer.append( " [" );
-
-            messageBuffer.append( getFormattedTime( time ) );
-
-            messageBuffer.append( "]" );
-        }
-
-        logger.info( messageBuffer.toString() );
-    }
-

DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL40 DEL42 DEL42 DEL42 DEL32 DEL32 DEL38 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL38 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL65 DEL42 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL43 DEL42 DEL14 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL25 DEL25 DEL42 DEL38 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL9 DEL41 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL9 DEL41 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL9 DEL41 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL9 DEL41 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL36 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL45 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL45 DEL42 DEL32 DEL21 DEL8 DEL25 DEL25 DEL25 DEL8 DEL24 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL34 DEL38 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL42 DEL13 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL34 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL31