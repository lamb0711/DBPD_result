PR: MNG-1233
corrected handling of scope based exclusions

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@326363 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.versioning.VersionRange;
+    private List trail;
+
-                if ( filter == null || filter.include( a ) )
+                if ( parents.contains( a.getDependencyConflictId() ) )
-                    if ( parents.contains( a.getDependencyConflictId() ) )
-                    {
-                        a.setDependencyTrail( getDependencyTrail() );
+                    a.setDependencyTrail( getDependencyTrail() );
-                        throw new CyclicDependencyException( "A dependency has introduced a cycle", a );
-                    }
-
-                    children.add( new ResolutionNode( a, remoteRepositories, this ) );
+                    throw new CyclicDependencyException( "A dependency has introduced a cycle", a );
+
+                children.add( new ResolutionNode( a, remoteRepositories, this ) );
+        trail = null;
-        List path = new LinkedList();
-        ResolutionNode node = this;
-        while ( node != null )
-        {
-            Artifact artifact = node.getArtifact();
-            if ( artifact.getVersion() == null )
-            {
-                // set the recommended version
-                VersionRange versionRange = artifact.getVersionRange();
-                String version = artifact.getSelectedVersion().toString();
-                artifact.selectVersion( version );
-            }
+        List trial = getTrail();
-            path.add( 0, artifact.getId() );
-            node = node.parent;
+        List ret = new ArrayList( trial.size() );
+        for ( Iterator i = trial.iterator(); i.hasNext(); )
+        {
+            Artifact artifact = (Artifact) i.next();
+            ret.add( artifact.getId() );
-        return path;
+        return ret;
+    }
+
+    private List getTrail()
+        throws OverConstrainedVersionException
+    {
+        if ( trail == null )
+        {
+            List ids = new LinkedList();
+            ResolutionNode node = this;
+            while ( node != null )
+            {
+                Artifact artifact = node.getArtifact();
+                if ( artifact.getVersion() == null )
+                {
+                    // set the recommended version
+                    String version = artifact.getSelectedVersion().toString();
+                    artifact.selectVersion( version );
+                }
+
+                ids.add( 0, artifact );
+                node = node.parent;
+            }
+            trail = ids;
+        }
+        return trail;
+
+    public boolean filterTrail( ArtifactFilter filter )
+        throws OverConstrainedVersionException
+    {
+        boolean success = true;
+        if ( filter != null )
+        {
+            for ( Iterator i = getTrail().iterator(); i.hasNext() && success; )
+            {
+                Artifact artifact = (Artifact) i.next();
+                if ( !filter.include( artifact ) )
+                {
+                    success = false;
+                }
+            }
+        }
+        return success;
+    }

INS23 INS31 INS31 INS83 INS43 INS59 MOV8 INS83 INS43 INS42 INS43 INS8 UPD83 UPD42 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS42 INS42 INS21 INS42 INS42 INS60 INS60 INS24 INS41 INS25 INS41 INS43 INS42 INS42 INS60 INS25 INS41 MOV38 INS8 MOV8 INS7 INS43 INS59 INS43 INS59 INS58 INS32 INS8 INS42 INS27 MOV8 INS42 INS42 INS39 INS59 INS27 INS8 INS42 MOV21 INS24 INS42 INS33 INS42 INS42 INS32 INS42 INS42 INS14 INS43 INS59 INS42 INS42 INS60 MOV21 INS42 INS33 INS21 INS42 INS9 INS42 INS33 INS24 MOV58 MOV32 MOV8 INS42 INS43 INS32 INS42 INS42 INS32 INS43 INS59 INS7 INS58 INS27 INS8 MOV60 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 UPD42 UPD42 INS21 INS42 INS42 INS43 INS59 INS32 INS42 INS60 INS25 INS43 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS43 INS59 INS38 INS8 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS32 INS42 INS42 INS42 INS11 INS32 INS21 INS42 INS43 INS32 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS9 DEL40 DEL26 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL27 DEL24 DEL8 DEL25 DEL8 DEL34 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL41