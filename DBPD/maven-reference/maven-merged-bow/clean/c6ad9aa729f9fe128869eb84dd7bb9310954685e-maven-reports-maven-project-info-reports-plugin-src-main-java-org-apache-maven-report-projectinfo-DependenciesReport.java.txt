MNG-411: all transitive dependencies report

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219261 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.Artifact;
-import org.apache.maven.model.Model;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Set;
+ * Generates the dependencies report.
+ * 
+ * @author <a href="mailto:vincent.siveton@gmail.com">Vincent Siveton</a>
-            DependenciesRenderer r = new DependenciesRenderer( getSink(), getProject().getModel(), locale );
+            DependenciesRenderer r = new DependenciesRenderer( getSink(), getProject(), locale );
-        private Model model;
+        private MavenProject project;
-        public DependenciesRenderer( Sink sink, Model model, Locale locale )
+        public DependenciesRenderer( Sink sink, MavenProject project, Locale locale )
-            this.model = model;
+            this.project = project;
-        // How to i18n these ...
-            if ( model.getDependencies().isEmpty() )
+            // Dependencies report
+            List dependencies = project.getDependencies();
+            
+            if ( dependencies.isEmpty() )
-
-
-                for ( Iterator i = model.getDependencies().iterator(); i.hasNext(); )
+                for ( Iterator i = dependencies.iterator(); i.hasNext(); )
-
+            
+
+            // Transitive dependencies
+            if ( !dependencies.isEmpty() )
+            {
+                Set artifacts = getTransitiveDependencies( project );
+                
+                startSection( getBundle( locale ).getString( "report.transitivedependencies.title" ) );
+    
+                if ( artifacts.isEmpty() )
+                {
+                    // TODO: should the report just be excluded?
+                    paragraph( getBundle( locale ).getString( "report.transitivedependencies.nolist" ) );
+                }
+                else
+                {
+                    startTable();
+    
+                    tableCaption( getBundle( locale ).getString( "report.transitivedependencies.intro" ) );
+    
+                    String groupId = getBundle( locale ).getString( "report.transitivedependencies.column.groupId" );
+                    String artifactId = getBundle( locale ).getString( "report.transitivedependencies.column.artifactId" );
+                    String version = getBundle( locale ).getString( "report.transitivedependencies.column.version" );
+    
+                    tableHeader( new String[]{groupId, artifactId, version} );
+    
+                    for ( Iterator i = artifacts.iterator(); i.hasNext(); )
+                    {
+                        Artifact artifact = (Artifact) i.next();
+    
+                        tableRow( new String[]{artifact.getGroupId(), artifact.getArtifactId(), artifact.getVersion()} );
+                    }
+    
+                    endTable();
+                }
+
+                endSection();
+            }
+
+        }
+
+        /**
+         * Return a set of artifact which are not already present in the dependencies list.
+         *  
+         * @param project a Maven project
+         * @return a set of transitive dependencies
+         */
+        private Set getTransitiveDependencies( MavenProject project ) 
+        {            
+            Set result = new HashSet();
+
+            if ( ( project.getDependencies() == null ) ||
+                    ( project.getArtifacts() == null ) )
+            {
+                return result;
+            }
+            
+            List dependencies = project.getDependencies();
+            Set artifacts = project.getArtifacts();
+
+            for ( Iterator j = artifacts.iterator(); j.hasNext(); )
+            {
+                Artifact artifact = (Artifact)j.next();
+
+                boolean toadd = true;
+                for ( Iterator i = dependencies.iterator(); i.hasNext(); )
+                {
+                    Dependency dependency = (Dependency) i.next();
+                    if ( ( artifact.getArtifactId().equals( dependency.getArtifactId() ) ) && 
+                            ( artifact.getGroupId().equals( dependency.getGroupId() ) )  && 
+                            ( artifact.getVersion().equals( dependency.getVersion() ) ) )
+                    {
+                        toadd = false;
+                        break;
+                    }
+                }
+                
+                if ( toadd )
+                {
+                    result.add( artifact );
+                }
+            }
+            
+            return result;

MOV26 INS26 INS26 INS26 UPD40 INS40 INS40 INS40 INS65 INS65 INS31 INS66 INS66 UPD43 INS29 INS83 INS43 INS42 INS44 INS8 UPD42 UPD42 UPD43 UPD42 INS60 INS25 INS65 INS65 INS65 INS42 INS43 INS42 INS60 INS25 INS60 INS60 INS24 INS41 UPD42 INS43 INS59 INS38 INS8 INS66 INS42 INS66 INS66 INS42 INS43 INS59 INS27 INS8 INS43 INS59 INS43 INS59 INS58 INS32 INS8 INS42 UPD42 INS42 INS42 INS32 UPD42 MOV42 INS32 INS60 INS21 INS25 INS21 INS42 INS42 INS14 INS36 INS36 INS41 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS59 INS42 INS42 INS60 INS60 INS24 INS25 UPD42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS32 INS8 INS8 INS32 INS43 INS27 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS39 INS59 INS58 INS32 INS8 INS42 INS8 MOV32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS21 INS21 INS21 INS60 INS60 INS60 INS21 INS24 INS21 INS42 INS42 INS32 INS33 INS32 INS33 INS42 INS42 INS42 INS42 INS11 INS42 INS9 INS43 INS59 INS42 INS42 INS60 INS25 INS21 INS42 INS42 INS32 INS42 INS45 INS32 INS32 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS58 INS32 INS8 INS32 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS32 INS43 INS59 INS27 INS8 INS32 UPD42 MOV42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS3 INS43 INS59 INS42 INS42 INS60 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS36 INS36 INS36 INS21 INS10 INS42 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS5 INS4 INS42 INS42 INS32 INS43 INS59 INS32 INS43 INS32 INS32 INS32 INS32 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS3 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS9 INS42 INS43 INS32 INS5 INS4 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32