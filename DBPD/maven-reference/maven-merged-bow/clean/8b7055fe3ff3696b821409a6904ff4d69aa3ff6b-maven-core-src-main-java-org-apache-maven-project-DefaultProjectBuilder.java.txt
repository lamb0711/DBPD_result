[MNG-6533] Prefer passing the interim project in ProjectBuildingResult

Initialize the interim project with "simple" items (ie do not build
not reference parent if it's not yet in the projectIndex) and returns
it when installation fails further.
This give a partial validation of the file, pretty convenient in IDEs.
-                initProject( project, Collections.<String, MavenProject>emptyMap(), result,
-                             new HashMap<File, Boolean>(), projectBuildingRequest );
+                initProject( project, Collections.<String, MavenProject>emptyMap(), true,
+                             result, new HashMap<File, Boolean>(), projectBuildingRequest );
+        project.setFile( pomFile );
-            results.add( new DefaultProjectBuildingResult( e.getModelId(), pomFile, e.getProblems() ) );
+            result = e.getResult();
+            if ( result == null || result.getEffectiveModel() == null )
+            {
+                 results.add( new DefaultProjectBuildingResult( e.getModelId(), pomFile, e.getProblems() ) );
-            return false;
+                 return false;
+            }
+            // validation error, continue project building and delay failing to help IDEs
+            // result.getProblems().addAll(e.getProblems()) ?
+            noErrors = false;
+        // first pass: build without building parent.
+        initProject( project, projectIndex, false, result, new HashMap<File, Boolean>( 0 ), config.request );
+            MavenProject project = interimResult.listener.getProject();
-                MavenProject project = interimResult.listener.getProject();
-                initProject( project, projectIndex, result, profilesXmls, request );
+                // 2nd pass of initialization: resolve and build parent if necessary
+                initProject( project, projectIndex, true, result, profilesXmls, request );
-                results.add( new DefaultProjectBuildingResult( e.getModelId(), interimResult.pomFile,
-                                                               e.getProblems() ) );
+                DefaultProjectBuildingResult result = null;
+                if ( project == null )
+                {
+                    result = new DefaultProjectBuildingResult( e.getModelId(), interimResult.pomFile, e.getProblems() );
+                }
+                else
+                {
+                    result = new DefaultProjectBuildingResult( project, e.getProblems(), null );
+                }
+                results.add( result );
-    private void initProject( MavenProject project, Map<String, MavenProject> projects, ModelBuildingResult result,
+    private void initProject( MavenProject project, Map<String, MavenProject> projects,
+                              boolean buildParentIfNotExisting, ModelBuildingResult result,
-        initParent( project, projects, result, projectBuildingRequest );
+        initParent( project, projects, buildParentIfNotExisting, result, projectBuildingRequest );
-    private void initParent( MavenProject project, Map<String, MavenProject> projects, ModelBuildingResult result,
-                             ProjectBuildingRequest projectBuildingRequest )
+    private void initParent( MavenProject project, Map<String, MavenProject> projects, boolean buildParentIfNotExisting,
+                             ModelBuildingResult result, ProjectBuildingRequest projectBuildingRequest )
-            if ( parent == null )
+            if ( parent == null && buildParentIfNotExisting )

INS44 INS44 INS21 INS21 INS39 INS42 INS39 INS42 INS32 INS32 INS42 INS42 INS42 INS8 INS42 INS42 INS42 INS9 INS42 INS14 INS40 MOV60 INS42 INS21 INS25 INS21 INS74 INS34 INS27 INS7 INS27 MOV8 INS7 INS43 INS43 INS43 INS8 MOV27 INS42 INS42 INS32 INS27 INS27 INS42 INS9 INS42 INS42 INS42 INS60 INS25 INS21 MOV21 INS9 INS42 INS42 INS42 INS33 INS32 INS33 INS9 INS43 INS59 INS27 MOV8 INS8 INS32 INS42 INS42 INS42 INS42 INS33 INS42 INS33 INS21 INS42 INS42 INS42 INS7 INS7 INS42 MOV14 INS42 INS14 INS43 INS42 INS32 INS33 INS42 INS42 INS42 DEL42 DEL42 DEL32