clean up code a little before attempting a bugfix

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@226476 13f79535-47bb-0310-9956-ffa450edef68

-    /** OutputName of all project info report files generated by Maven */ 
-    private static final String[] PROJECT_INFO_FILES = new String[] { "integration",
-        "dependencies",
-        "issue-tracking",
-        "license",
-        "mail-lists",
-        "source-repository",
-        "team-list" };
-    
+    /**
+     * OutputName of all project info report files generated by Maven
+     */
+    private static final String[] PROJECT_INFO_FILES = new String[]{"integration", "dependencies", "issue-tracking",
+        "license", "mail-lists", "source-repository", "team-list"};
+
-     *            default-value="true"
+     * default-value="true"
-    
+
-        
+
-                // Exception if a file is duplicate 
-                if ( ( duplicate.entrySet() != null ) && ( duplicate.entrySet().size() > 0 ) )
+                // Exception if a file is duplicate
+                if ( duplicate.size() > 0 )
-                                sb = new StringBuffer( "Some files are duplicates in the site directory or in the generated-site directory. "
-                                                  + "Review the following files:" );
+                                sb = new StringBuffer(
+                                    "Some files are duplicates in the site directory or in the generated-site directory. " +
+                                        "Review the following files:" );
-                // Log if a user override a project info report file 
-                for ( int i = 0; i < PROJECT_INFO_FILES.length; i++)
+                // Log if a user override a project info report file
+                for ( int i = 0; i < PROJECT_INFO_FILES.length; i++ )
-                
+
-                        File parentSiteDir = new File( parentProject.getBasedir(), parentProject.getBuild().getDirectory()
-                            + File.separator + "site" + File.separator + project.getArtifactId() );
-    
+                        File parentSiteDir = new File( parentProject.getBasedir(),
+                                                       parentProject.getBuild().getDirectory() + File.separator +
+                                                           "site" + File.separator + project.getArtifactId() );
+
-    
+
-    private void writeReportSubMenu( List reports, StringBuffer buffer, Locale locale, String key, String indexFilename )
+    private void writeReportSubMenu( List reports, StringBuffer buffer, Locale locale, String key,
+                                     String indexFilename )
-     * 
+     *
-            for (Iterator it = modules.iterator(); it.hasNext();)
+            for ( Iterator it = modules.iterator(); it.hasNext(); )
-                String module = (String)it.next();
-                
+                String module = (String) it.next();
+
-                buffer.append( "\" href=\"" + module + "/index.html\"/>\n" );
+                buffer.append( "\" href=\"" );
+                buffer.append( module );
+                buffer.append( "/index.html\"/>\n" );
-        
+
-     * 
+     *
-  
+
-        
+
-    
+
-        
+
-            if ( ( project.getModules() != null ) && ( project.getModules().size() > 0 ) )
+            if ( project.getModules() != null && project.getModules().size() > 0 )
-    
+
-     * Convenience method that try to find duplicate files in a given directory. 
+     * Convenience method that try to find duplicate files in a given directory.
-     * 
+     *
-     **/
+     */
-        
-        // The pattern as comma separated  
-        StringBuffer excludePattern = new StringBuffer();
-        for ( int i = 0; i < DEFAULT_EXCLUDES.length; i++ )
-        {
-            excludePattern.append( DEFAULT_EXCLUDES[i] ).append( "," );
-        }
-        excludePattern.deleteCharAt( excludePattern.length() - 1 );
-        List siteFiles = FileUtils.getFileNames( directory, null, excludePattern.toString(), false );
+        String defaultExcludes = StringUtils.join( DEFAULT_EXCLUDES, "," );
+        List siteFiles = FileUtils.getFileNames( directory, null, defaultExcludes, false );
-            String currentFile = ( (String) it.next() );
+            String currentFile = (String) it.next();
-                // ignore files directly in the directory 
+                // ignore files directly in the directory
-            String key = currentFile.substring( currentFile.indexOf( File.separator ) + 1, 
+            String key = currentFile.substring( currentFile.indexOf( File.separator ) + 1,
-            List files = FileUtils.getFileNames( directory, filePattern, excludePattern.toString(), true );
-            if ( ( files != null ) && ( files.size() > 0 ) )
+            List files = FileUtils.getFileNames( directory, filePattern, defaultExcludes, true );
+            if ( files != null && files.size() > 0 )

INS60 UPD66 UPD66 UPD43 MOV43 INS59 UPD42 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 INS42 MOV45 UPD42 MOV42 INS21 INS21 INS21 MOV27 MOV27 MOV11 MOV27 MOV27 INS27 INS32 INS32 INS32 UPD42 MOV42 MOV32 MOV34 MOV42 MOV42 INS45 INS42 INS42 INS42 INS42 INS42 INS45 MOV42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL33 DEL27 DEL36 DEL27 DEL36 DEL27 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL36 DEL36 DEL42 DEL43 DEL14 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL32 DEL42 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL42 DEL42 DEL32 DEL34 DEL27 DEL32 DEL21 DEL42 DEL32 DEL36 DEL42 DEL32 DEL36 DEL36