MNG-796: Added a download report

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@322514 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.util.StringUtils;
-        String fullName = finalName + "-" + assembly.getId();
+        String fullName = getDistributionName( assembly );
-                throw new MojoExecutionException( "Error creating assembly", e );
+                throw new MojoExecutionException( "Error creating assembly: " + e.getMessage(), e );
-                throw new MojoExecutionException( "Error creating assembly", e );
+                throw new MojoExecutionException( "Error creating assembly: " + e.getMessage(), e );
+    /**
+     * Get the full name of the distribution artifact
+     *
+     * @param assembly
+     * @return the distribution name
+     */
+    protected String getDistributionName( Assembly assembly )
+    {
+        if ( StringUtils.isEmpty( assembly.getId() ) )
+        {
+            return finalName;
+        }
+
+        return finalName + "-" + assembly.getId();
+    }
+
-            getLog().debug( "DependencySet[" + output + "]" + " dir perms: " +
-                Integer.toString( archiver.getDefaultDirectoryMode(), 8 ) + " file perms: " +
-                Integer.toString( archiver.getDefaultFileMode(), 8 ) );
+            getLog().debug(
+                            "DependencySet[" + output + "]" + " dir perms: "
+                                + Integer.toString( archiver.getDefaultDirectoryMode(), 8 ) + " file perms: "
+                                + Integer.toString( archiver.getDefaultFileMode(), 8 ) );
-//                        archiver.addJar(  )
+                        //                        archiver.addJar(  )
-                                throw new MojoExecutionException(
-                                    "Unable to obtain unarchiver for file '" + artifact.getFile() + "'" );
+                                throw new MojoExecutionException( "Unable to obtain unarchiver for file '"
+                                    + artifact.getFile() + "'" );
-                        archiver.addFile( artifact.getFile(), output +
-                            evaluateFileNameMapping( dependencySet.getOutputFileNameMapping(), artifact ) );
+                        archiver.addFile( artifact.getFile(), output
+                            + evaluateFileNameMapping( dependencySet.getOutputFileNameMapping(), artifact ) );
-            getLog().debug( "FileSet[" + output + "]" + " dir perms: " +
-                Integer.toString( archiver.getDefaultDirectoryMode(), 8 ) + " file perms: " +
-                Integer.toString( archiver.getDefaultFileMode(), 8 ) +
-                ( fileSet.getLineEnding() == null ? "" : " lineEndings: " + fileSet.getLineEnding() ) );
+            getLog()
+                .debug(
+                        "FileSet[" + output + "]" + " dir perms: "
+                            + Integer.toString( archiver.getDefaultDirectoryMode(), 8 ) + " file perms: "
+                            + Integer.toString( archiver.getDefaultFileMode(), 8 )
+                            + ( fileSet.getLineEnding() == null ? "" : " lineEndings: " + fileSet.getLineEnding() ) );
+     * @throws MojoExecutionException
+     * @throws NoSuchArchiverException
-
-                                              String lineEnding )
+                                             String lineEnding )
-        String [] dirs = scanner.getIncludedDirectories();
+        String[] dirs = scanner.getIncludedDirectories();
-        for ( int j = 0; j < dirs.length; j ++ )
+        for ( int j = 0; j < dirs.length; j++ )
-        String [] files = scanner.getIncludedFiles();
+        String[] files = scanner.getIncludedFiles();
-        for ( int j = 0; j < files.length; j ++ )
+        for ( int j = 0; j < files.length; j++ )
-                "site did not exist in the target directory - please run site:site before creating the assembly" );
+                                              "site did not exist in the target directory - please run site:site before creating the assembly" );

INS26 INS40 INS31 INS29 INS83 MOV43 INS42 INS44 INS8 INS65 INS65 INS65 INS43 INS42 INS25 INS41 INS65 INS65 INS43 INS66 INS42 INS66 INS42 INS32 INS8 MOV27 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS41 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS27 INS42 INS45 INS32 INS45 INS32 INS42 INS42 INS42 INS42 DEL45 DEL42 DEL45 DEL42