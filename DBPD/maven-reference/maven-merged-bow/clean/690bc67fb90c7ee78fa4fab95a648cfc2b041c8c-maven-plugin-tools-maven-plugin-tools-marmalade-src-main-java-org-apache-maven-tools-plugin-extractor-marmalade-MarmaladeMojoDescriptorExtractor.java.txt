Added marmalade support back in...it's currently still using the libraries-shovelled-into-core method, but it now uses the new mojo mechanism that uses plexus ComponentConfigurators...had to make the lookup for configurators dynamic for the DefaultPluginManager, too.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168064 13f79535-47bb-0310-9956-ffa450edef68

-import org.codehaus.marmalade.metamodel.ScriptBuilder;
+import org.codehaus.marmalade.launch.MarmaladeLauncher;
-import org.codehaus.marmalade.parsing.DefaultParsingContext;
-import org.codehaus.marmalade.parsing.MarmaladeParsingContext;
-import org.codehaus.marmalade.parsing.ScriptParser;
-import org.codehaus.plexus.util.IOUtil;
+import org.codehaus.plexus.component.factory.marmalade.PlexusIntegratedLog;
+import org.codehaus.plexus.logging.Logger;
-import java.io.BufferedReader;
-import java.io.FileReader;
-                    MarmaladeScript script = parse( scriptFile );
+                    MarmaladeLauncher launcher = new MarmaladeLauncher().withInputFile( scriptFile );
+
+                    Logger logger = getLogger();
+
+                    if ( logger != null )
+                    {
+                        PlexusIntegratedLog log = new PlexusIntegratedLog();
+
+                        log.enableLogging( logger );
+
+                        launcher = launcher.withLog( log );
+                    }
+
+                    MarmaladeScript script = launcher.getMarmaladeScript();
-                        MojoDescriptor descriptor = (MojoDescriptor) contextMap.get(
-                            MarmaladeMojoExecutionDirectives.METADATA_OUTVAR );
+                        MojoDescriptor descriptor = (MojoDescriptor) contextMap
+                            .get( MarmaladeMojoExecutionDirectives.METADATA_OUTVAR );
-                        System.out.println( "This script is not a mojo. Its root tag is {element: " +
-                                            rootTag.getTagInfo().getElement() + ", class: " + rootTag.getClass().getName() + "}" );
+                        System.out.println( "This script is not a mojo. Its root tag is {element: "
+                            + rootTag.getTagInfo().getElement() + ", class: " + rootTag.getClass().getName() + "}" );
-    private MarmaladeScript parse( File scriptFile )
-        throws Exception
-    {
-        BufferedReader reader = null;
-
-        try
-        {
-            reader = new BufferedReader( new FileReader( scriptFile ) );
-
-            MarmaladeParsingContext parsingContext = new DefaultParsingContext();
-
-            parsingContext.setInputLocation( scriptFile.getPath() );
-            parsingContext.setInput( reader );
-
-            ScriptParser parser = new ScriptParser();
-
-            ScriptBuilder builder = parser.parse( parsingContext );
-
-            MarmaladeScript script = builder.build();
-
-            return script;
-        }
-        finally
-        {
-            IOUtil.close( reader );
-        }
-    }
-

MOV26 MOV26 UPD40 UPD40 UPD40 INS60 INS60 INS25 INS43 INS59 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS60 INS21 INS21 INS14 INS42 INS42 INS42 INS43 INS59 INS32 INS7 UPD42 UPD42 INS43 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL14 DEL14 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL41 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8 DEL31