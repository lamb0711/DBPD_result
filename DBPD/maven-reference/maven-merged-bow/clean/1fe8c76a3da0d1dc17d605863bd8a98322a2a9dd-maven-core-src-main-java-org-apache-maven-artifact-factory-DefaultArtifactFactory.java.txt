move all artifact creation to artifact factory - further refactoring planned


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163499 13f79535-47bb-0310-9956-ffa450edef68

-/* ====================================================================
- *   Copyright 2001-2004 The Apache Software Foundation.
+/*
+ * Copyright 2001-2005 The Apache Software Foundation.
- *   Licensed under the Apache License, Version 2.0 (the "License");
- *   you may not use this file except in compliance with the License.
- *   You may obtain a copy of the License at
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
- *       http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
- *   Unless required by applicable law or agreed to in writing, software
- *   distributed under the License is distributed on an "AS IS" BASIS,
- *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *   See the License for the specific language governing permissions and
- *   limitations under the License.
- * ====================================================================
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
-    public Set createArtifacts( List dependencies, ArtifactRepository localRepository )
+    public Set createArtifacts( List dependencies, ArtifactRepository localRepository, String inheritedScope )
-            Artifact artifact = createArtifact( d, localRepository );
-
-            projectArtifacts.add( artifact );
+            Artifact artifact = createArtifact( d, localRepository, inheritedScope );
+            if ( artifact != null )
+            {
+                projectArtifacts.add( artifact );
+            }
-    public Artifact createArtifact( Dependency dependency, ArtifactRepository localRepository )
+    public Artifact createArtifact( Dependency dependency, ArtifactRepository localRepository, String inheritedScope )
-        Artifact artifact = new DefaultArtifact( dependency.getGroupId(),
-                                                 dependency.getArtifactId(),
-                                                 dependency.getVersion(),
-                                                 dependency.getScope(),
-                                                 dependency.getType(),
-                                                 dependency.getType() );
+        return createArtifact( dependency.getGroupId(), dependency.getArtifactId(), dependency.getVersion(),
+                               dependency.getScope(), dependency.getType(), dependency.getType(), inheritedScope );
+    }
-        return artifact;
+    public Artifact createArtifact( String groupId, String artifactId, String version, String scope, String type,
+                                    String extension, String inheritedScope )
+    {
+        // TODO: can refactor, use scope handler
+
+        // if this artifact is test, and the dependency is test, don't transitively create
+        if ( Artifact.SCOPE_TEST.equals( inheritedScope ) && Artifact.SCOPE_TEST.equals( scope ) )
+        {
+            return null;
+        }
+
+        // TODO: localRepository not used (should be used here to resolve path?
+        String desiredScope = Artifact.SCOPE_RUNTIME;
+        if ( Artifact.SCOPE_COMPILE.equals( scope ) && inheritedScope == null )
+        {
+            desiredScope = Artifact.SCOPE_COMPILE;
+        }
+
+        if ( Artifact.SCOPE_TEST.equals( scope ) || Artifact.SCOPE_TEST.equals( inheritedScope ) )
+        {
+            desiredScope = Artifact.SCOPE_TEST;
+        }
+        return new DefaultArtifact( groupId, artifactId, version, desiredScope, type, extension );

INS31 INS44 INS44 INS83 MOV43 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS8 INS43 INS42 INS43 INS42 INS41 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS25 INS60 INS25 INS25 INS41 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS8 INS43 INS59 INS27 INS8 INS27 INS8 INS14 INS25 INS42 MOV32 MOV32 MOV32 MOV32 MOV32 MOV32 INS42 INS32 INS32 INS41 INS42 INS42 INS40 INS32 INS27 INS21 INS32 INS32 INS21 MOV43 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS8 INS40 INS42 INS42 INS40 INS42 INS42 INS33 INS40 INS42 INS42 INS42 INS33 INS7 INS40 INS42 INS42 INS40 INS42 INS42 INS7 INS42 INS33 MOV21 INS42 INS40 INS42 INS40 INS42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL41