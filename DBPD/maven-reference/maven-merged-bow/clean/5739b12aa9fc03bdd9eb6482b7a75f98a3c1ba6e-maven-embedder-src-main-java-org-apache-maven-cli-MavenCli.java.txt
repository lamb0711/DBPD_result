Resume from generates misleading hint when multiple projects fail.

Log the topologically sorted first failed project instead of the chronologically first failed project.
Resume from generates misleading hint when multiple projects fail.
Fixed a checkstyle finding.
Removed a trailing space in the -r hint

+import static java.util.Comparator.comparing;
-            MavenProject project = null;
+            List<MavenProject> failedProjects = new ArrayList<>();
-                if ( project == null && exception instanceof LifecycleExecutionException )
+                if ( exception instanceof LifecycleExecutionException )
-                    LifecycleExecutionException lifecycleExecutionException = (LifecycleExecutionException) exception;
-                    project = lifecycleExecutionException.getProject();
+                    failedProjects.add ( ( (LifecycleExecutionException) exception ).getProject() );
-            List<MavenProject> sortedProjects = result.getTopologicallySortedProjects();
-                logBuildResumeHint( "mvn <args> -r " );
+                logBuildResumeHint( "mvn <args> -r" );
-            else if ( project != null && !project.equals( sortedProjects.get( 0 ) ) )
+            else if ( !failedProjects.isEmpty() )
-                String resumeFromSelector = getResumeFromSelector( sortedProjects, project );
-                logBuildResumeHint( "mvn <args> -rf " + resumeFromSelector );
+                List<MavenProject> sortedProjects = result.getTopologicallySortedProjects();
+
+                // Sort the failedProjects list in the topologically sorted order.
+                failedProjects.sort( comparing( sortedProjects::indexOf ) );
+
+                MavenProject firstFailedProject = failedProjects.get( 0 );
+                if ( !firstFailedProject.equals( sortedProjects.get( 0 ) ) )
+                {
+                    String resumeFromSelector = getResumeFromSelector( sortedProjects, firstFailedProject );
+                    logBuildResumeHint( "mvn <args> -rf " + resumeFromSelector );
+                }
-     * @param failedProject Project which has failed.
+     * @param firstFailedProject The first project which has failed.
-    String getResumeFromSelector( List<MavenProject> mavenProjects, MavenProject failedProject )
+    String getResumeFromSelector( List<MavenProject> mavenProjects, MavenProject firstFailedProject )
-                .filter( project -> failedProject.getArtifactId().equals( project.getArtifactId() ) )
+                .filter( project -> firstFailedProject.getArtifactId().equals( project.getArtifactId() ) )
-            return failedProject.getGroupId() + ":" + failedProject.getArtifactId();
+            return firstFailedProject.getGroupId() + ":" + firstFailedProject.getArtifactId();
-        return ":" + failedProject.getArtifactId();
+        return ":" + firstFailedProject.getArtifactId();

INS26 INS40 UPD42 UPD42 UPD66 INS74 INS25 UPD42 INS43 INS43 UPD42 INS14 INS38 INS8 INS42 INS42 INS74 MOV62 INS32 MOV60 INS21 INS60 MOV25 UPD42 UPD42 INS43 UPD45 INS42 INS42 INS32 MOV43 INS59 MOV38 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 UPD42 MOV42 INS32 INS42 INS90 INS42 INS42 INS34 UPD42 UPD42 INS36 MOV42 INS42 INS42 MOV11 UPD42 DEL33 DEL42 DEL33 DEL27 DEL27 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL32 DEL7 DEL42 DEL33 DEL27 DEL27