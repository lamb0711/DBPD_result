[MNG-5760] Add `-r/--resume` to automatically resume from the last failure point

Author: Martin Kanters <mkanters93@gmail.com>

+import org.apache.maven.execution.BuildResumptionDataRepository;
+    private BuildResumptionDataRepository buildResumptionDataRepository;
+
+        buildResumptionDataRepository = container.lookup( BuildResumptionDataRepository.class );
+
-                    project = ( (LifecycleExecutionException) exception ).getProject();
+                    LifecycleExecutionException lifecycleExecutionException = (LifecycleExecutionException) exception;
+                    project = lifecycleExecutionException.getProject();
-            if ( project != null && !project.equals( result.getTopologicallySortedProjects().get( 0 ) ) )
+            List<MavenProject> sortedProjects = result.getTopologicallySortedProjects();
+            if ( result.canResume() )
-                slf4jLogger.error( "" );
-                slf4jLogger.error( "After correcting the problems, you can resume the build with the command" );
-                slf4jLogger.error( buffer().a( "  " ).strong( "mvn <args> -rf "
-                    + getResumeFrom( result.getTopologicallySortedProjects(), project ) ).toString() );
+                logBuildResumeHint( "mvn <args> -r " );
+            }
+            else if ( project != null && !project.equals( sortedProjects.get( 0 ) ) )
+            {
+                String resumeFromSelector = getResumeFromSelector( sortedProjects, project );
+                logBuildResumeHint( "mvn <args> -rf " + resumeFromSelector );
+    private void logBuildResumeHint( String resumeBuildHint )
+    {
+        slf4jLogger.error( "" );
+        slf4jLogger.error( "After correcting the problems, you can resume the build with the command" );
+        slf4jLogger.error( buffer().a( "  " ).strong( resumeBuildHint ).toString() );
+    }
+
-     * A helper method to determine the value to resume the build with {@code -rf} taking into account the
-     * edge case where multiple modules in the reactor have the same artifactId.
+     * A helper method to determine the value to resume the build with {@code -rf} taking into account the edge case
+     *   where multiple modules in the reactor have the same artifactId.
-     * {@code -rf :artifactId} will pick up the first module which matches, but when multiple modules in the
-     * reactor have the same artifactId, effective failed module might be later in build reactor.
-     * This means that developer will either have to type groupId or wait for build execution of all modules
-     * which were fine, but they are still before one which reported errors.
+     * {@code -rf :artifactId} will pick up the first module which matches, but when multiple modules in the reactor
+     *   have the same artifactId, effective failed module might be later in build reactor.
+     * This means that developer will either have to type groupId or wait for build execution of all modules which
+     *   were fine, but they are still before one which reported errors.
+     * This method is made package-private for testing purposes.
-     * @return Value for -rf flag to resume build exactly from place where it failed ({@code :artifactId} in
-     *    general and {@code groupId:artifactId} when there is a name clash).
+     * @return Value for -rf flag to resume build exactly from place where it failed ({@code :artifactId} in general
+     * and {@code groupId:artifactId} when there is a name clash).
-    private String getResumeFrom( List<MavenProject> mavenProjects, MavenProject failedProject )
+    String getResumeFromSelector( List<MavenProject> mavenProjects, MavenProject failedProject )
-        for ( MavenProject buildProject : mavenProjects )
+        boolean hasOverlappingArtifactId = mavenProjects.stream()
+                .filter( project -> failedProject.getArtifactId().equals( project.getArtifactId() ) )
+                .count() > 1;
+
+        if ( hasOverlappingArtifactId )
-            if ( failedProject.getArtifactId().equals( buildProject.getArtifactId() ) && !failedProject.equals(
-                    buildProject ) )
-            {
-                return failedProject.getGroupId() + ":" + failedProject.getArtifactId();
-            }
+            return failedProject.getGroupId() + ":" + failedProject.getArtifactId();
+
+        if ( commandLine.hasOption( CLIManager.RESUME ) )
+        {
+            request.setResume();
+        }
+

INS26 INS40 INS23 INS31 INS83 INS43 INS59 INS83 INS39 INS42 INS44 MOV8 UPD42 INS42 INS42 INS21 INS43 INS42 INS60 MOV25 INS25 INS7 INS42 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS66 UPD66 UPD66 INS39 INS59 INS42 INS32 INS8 INS42 INS32 INS60 INS25 INS42 INS27 INS42 INS42 INS40 INS21 INS42 INS42 INS57 INS74 INS59 INS32 INS8 INS25 INS32 INS34 INS32 INS43 INS43 MOV43 INS42 MOV32 INS42 INS42 INS21 MOV27 INS8 UPD42 MOV42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS60 INS21 INS32 INS42 INS86 INS60 INS42 INS45 INS43 INS59 INS32 INS42 INS42 INS59 INS32 INS43 INS59 INS42 INS42 INS32 INS42 INS27 INS42 MOV32 INS42 INS32 INS42 INS42 MOV11 UPD42 MOV42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 DEL36 DEL42 DEL32 DEL25 DEL45 DEL42 DEL32 DEL27 DEL83 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL44 DEL42 DEL8 DEL70