o checking in so that oleg and shane can see the changes, there are three failing tests. i'm fixing in the plane and will check in when i land



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@746850 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.*;
+import java.io.File;
+import java.io.IOException;
-import org.apache.maven.RepositorySystem;
-import org.apache.maven.artifact.factory.ArtifactFactory;
-import org.apache.maven.artifact.metadata.ArtifactMetadataSource;
-import org.apache.maven.artifact.resolver.ArtifactResolver;
-import org.apache.maven.project.builder.*;
+import org.apache.maven.project.builder.PomInterpolatorTag;
+import org.apache.maven.repository.MavenRepositorySystem;
-    private RepositorySystem mavenTools;
+    private MavenRepositorySystem repositorySystem;
-    @Requirement
-    protected ArtifactResolver artifactResolver;
-
-    @Requirement
-    protected ArtifactMetadataSource artifactMetadataSource;
-
-    @Requirement
-    private ArtifactFactory artifactFactory;    
-
-       artifactRepositories.addAll( mavenTools.buildArtifactRepositories( projectBuilder.getSuperModel() ) );
+       artifactRepositories.addAll( repositorySystem.buildArtifactRepositories( projectBuilder.getSuperModel() ) );
-                                                                                       artifactRepositories, artifactResolver ), config );
+                                                                                       artifactRepositories, repositorySystem ), config );
-        artifactRepositories.addAll( mavenTools.buildArtifactRepositories( projectBuilder.getSuperModel() ) );
+        artifactRepositories.addAll( repositorySystem.buildArtifactRepositories( projectBuilder.getSuperModel() ) );
-        mavenTools.findModelFromRepository( artifact, artifactRepositories, localRepository );
+        repositorySystem.findModelFromRepository( artifact, artifactRepositories, localRepository );
-        project = readModelFromLocalPath( "unknown", artifact.getFile(), new DefaultPomArtifactResolver( config.getLocalRepository(), artifactRepositories, artifactResolver ), config );
+        project = readModelFromLocalPath( "unknown", artifact.getFile(), new DefaultPomArtifactResolver( config.getLocalRepository(), artifactRepositories, repositorySystem ), config );
-            project = new MavenProject( superModel, artifactFactory, mavenTools, this, config );
+            project = new MavenProject( superModel, repositorySystem, this, config );
-            project.setRemoteArtifactRepositories( mavenTools.buildArtifactRepositories( superModel.getRepositories() ) );
-            project.setPluginArtifactRepositories( mavenTools.buildArtifactRepositories( superModel.getRepositories() ) );
+            project.setRemoteArtifactRepositories( repositorySystem.buildArtifactRepositories( superModel.getRepositories() ) );
+            project.setPluginArtifactRepositories( repositorySystem.buildArtifactRepositories( superModel.getRepositories() ) );
-            project.setDependencyArtifacts( project.createArtifacts( artifactFactory, null, null ) );
+            project.setDependencyArtifacts( repositorySystem.createArtifacts( project.getDependencies(), null, null, project ) );
-            .setMetadataSource( artifactMetadataSource );
+            .setMetadataSource( repositorySystem );
-        ArtifactResolutionResult result = artifactResolver.resolve( request );
+        ArtifactResolutionResult result = repositorySystem.resolve( request );
-            project = new MavenProject( model, artifactFactory, mavenTools, this, config );
+            project = new MavenProject( model, repositorySystem, this, config );
-            Artifact projectArtifact = artifactFactory.createBuildArtifact( project.getGroupId(), project.getArtifactId(),
-                                                                            project.getVersion(), project.getPackaging() );
+            Artifact projectArtifact = repositorySystem.createBuildArtifact( project.getGroupId(), project.getArtifactId(), project.getVersion(), project.getPackaging() );
-            mavenProject = projectBuilder.buildFromLocalPath( projectDescriptor,
-                    interpolatorProperties,
-                                                              resolver,
-                                                              config,
-                                                              this);
+            mavenProject = projectBuilder.buildFromLocalPath( projectDescriptor, interpolatorProperties, resolver, config, this );

MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 UPD40 UPD43 UPD42 UPD42 MOV12 MOV21 MOV12 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS32 INS42 UPD42 UPD42 UPD42 MOV42 INS42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL42