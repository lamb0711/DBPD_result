PR: MNG-629
preparing for executing the lifecycle by passing reports into the site plugin, rather than extracting them from the plugin manager

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@290634 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.ArtifactUtils;
-import org.apache.maven.model.ReportSet;
+        return verifyVersionedPlugin( plugin, project, localRepository );
+    }
+
+    private PluginDescriptor verifyVersionedPlugin( Plugin plugin, MavenProject project,
+                                                    ArtifactRepository localRepository )
+        throws PluginVersionResolutionException, PluginManagerException, ArtifactResolutionException
+    {
-            plugin = getConfiguredMojo( mojoDescriptor, session, dom, project, false );
+            plugin = getConfiguredMojo( session, dom, project, false, mojoExecution );
-    public List getReports( ReportPlugin reportPlugin, ReportSet reportSet, MavenProject project, MavenSession session )
-        throws PluginManagerException, PluginVersionResolutionException, PluginConfigurationException,
-        ArtifactResolutionException
+    public MavenReport getReport( MavenProject project, MojoExecution mojoExecution, MavenSession session )
+        throws PluginManagerException
-        Plugin forLookup = new Plugin();
+        MojoDescriptor mojoDescriptor = mojoExecution.getMojoDescriptor();
+        PluginDescriptor descriptor = mojoDescriptor.getPluginDescriptor();
+        Xpp3Dom dom = project.getReportConfiguration( descriptor.getGroupId(), descriptor.getArtifactId(),
+                                                      mojoExecution.getExecutionId() );
+        if ( mojoExecution.getConfiguration() != null )
+        {
+            dom = Xpp3Dom.mergeXpp3Dom( dom, mojoExecution.getConfiguration() );
+        }
-        String groupId = reportPlugin.getGroupId();
-        String artifactId = reportPlugin.getArtifactId();
+        MavenReport reportMojo;
+        try
+        {
+            reportMojo = (MavenReport) getConfiguredMojo( session, dom, project, true, mojoExecution );
+        }
+        catch ( ComponentLookupException e )
+        {
+            throw new PluginManagerException( "Error looking up report: ", e );
+        }
+        catch ( PluginConfigurationException e )
+        {
+            throw new PluginManagerException( "Error configuring report: ", e );
+        }
+        return reportMojo;
+    }
-        forLookup.setGroupId( groupId );
-        forLookup.setArtifactId( artifactId );
-
+    public PluginDescriptor verifyReportPlugin( ReportPlugin reportPlugin, MavenProject project, MavenSession session )
+        throws PluginVersionResolutionException, ArtifactResolutionException, PluginManagerException
+    {
-        Artifact existingPluginArtifact = (Artifact) project.getReportArtifactMap().get( reportPlugin.getKey() );
-
-        if ( existingPluginArtifact == null ||
-            !reportPlugin.getKey().equals( ArtifactUtils.versionlessKey( existingPluginArtifact ) ) || version == null )
+        if ( version == null )
-            version = pluginVersionManager.resolvePluginVersion( groupId, artifactId, project, session.getSettings(),
-                                                                 session.getLocalRepository(), true );
+            version = pluginVersionManager.resolveReportPluginVersion( reportPlugin.getGroupId(),
+                                                                       reportPlugin.getArtifactId(), project,
+                                                                       session.getSettings(),
+                                                                       session.getLocalRepository() );
+            reportPlugin.setVersion( version );
+        Plugin forLookup = new Plugin();
+
+        forLookup.setGroupId( reportPlugin.getGroupId() );
+        forLookup.setArtifactId( reportPlugin.getArtifactId() );
-        PluginDescriptor pluginDescriptor = verifyPlugin( forLookup, project, session
-            .getSettings(), session.getLocalRepository() );
-
-        List reports = new ArrayList();
-        for ( Iterator i = pluginDescriptor.getMojos().iterator(); i.hasNext(); )
-        {
-            MojoDescriptor mojoDescriptor = (MojoDescriptor) i.next();
-
-            // TODO: check ID is correct for reports
-            // if the POM configured no reports, give all from plugin
-            if ( reportSet == null || reportSet.getReports().contains( mojoDescriptor.getGoal() ) )
-            {
-                try
-                {
-                    String id = null;
-                    if ( reportSet != null )
-                    {
-                        id = reportSet.getId();
-                    }
-                    MojoExecution mojoExecution = new MojoExecution( mojoDescriptor, id );
-
-                    String executionId = mojoExecution.getExecutionId();
-                    Xpp3Dom dom = project.getReportConfiguration( reportPlugin.getGroupId(),
-                                                                  reportPlugin.getArtifactId(), executionId );
-
-                    Mojo reportMojo = getConfiguredMojo( mojoDescriptor, session, dom, project, true );
-                    if ( reportMojo != null )
-                    {
-                        reports.add( reportMojo );
-                    }
-                }
-                catch ( ComponentLookupException e )
-                {
-                    throw new PluginManagerException( "Error looking up plugin: ", e );
-                }
-            }
-        }
-        return reports;
+        return verifyVersionedPlugin( forLookup, project, session.getLocalRepository() );
-    private Mojo getConfiguredMojo( MojoDescriptor mojoDescriptor, MavenSession session, Xpp3Dom dom,
-                                    MavenProject project, boolean report )
+    private Mojo getConfiguredMojo( MavenSession session, Xpp3Dom dom, MavenProject project, boolean report,
+                                    MojoExecution mojoExecution )
+        MojoDescriptor mojoDescriptor = mojoExecution.getMojoDescriptor();
+
-        ExpressionEvaluator expressionEvaluator = new PluginParameterExpressionEvaluator( session, mojoDescriptor,
+        ExpressionEvaluator expressionEvaluator = new PluginParameterExpressionEvaluator( session, mojoExecution,
-            configurator.configureComponent( plugin, configuration, expressionEvaluator, pluginContainer
-                .getContainerRealm() );
+            configurator.configureComponent( plugin, configuration, expressionEvaluator,
+                                             pluginContainer.getContainerRealm() );

INS31 MOV43 MOV43 INS31 INS31 MOV44 MOV83 UPD43 MOV43 UPD42 MOV42 MOV44 INS44 MOV44 INS44 INS43 INS43 INS43 INS8 UPD83 UPD42 INS83 INS43 INS42 INS44 INS44 INS44 INS43 INS8 INS83 INS43 INS42 MOV44 MOV44 MOV44 MOV43 MOV43 MOV43 INS8 UPD42 UPD43 UPD42 INS43 INS42 INS43 INS42 UPD42 MOV42 INS42 INS42 MOV25 INS41 INS42 INS43 INS42 INS43 INS42 INS43 INS42 UPD42 MOV42 INS60 INS60 INS60 MOV25 MOV60 INS54 INS41 INS42 MOV60 INS25 MOV60 MOV21 INS21 MOV21 MOV41 UPD43 UPD42 INS60 UPD42 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS42 UPD42 MOV42 INS43 INS59 MOV43 INS59 MOV43 INS59 UPD43 INS8 INS12 MOV12 INS42 MOV27 INS8 INS32 INS32 UPD42 INS43 INS59 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS32 INS42 INS32 INS32 UPD42 INS42 INS21 MOV44 INS8 INS44 INS21 INS21 UPD42 UPD42 MOV32 INS42 INS42 MOV32 INS42 INS42 INS42 MOV32 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 INS42 MOV32 MOV32 INS32 INS42 INS42 INS7 INS53 MOV43 INS42 INS7 INS32 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 UPD42 INS32 INS42 INS11 INS14 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS32 INS43 INS45 INS42 UPD45 UPD42 MOV42 INS42 MOV32 MOV32 MOV42 MOV32 MOV32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 MOV42 INS9 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL42 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL11 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL38 DEL27 DEL27 DEL42 DEL42 DEL9 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL43 DEL42 DEL43 DEL14 DEL59 DEL60 DEL43 DEL32 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL32 DEL27 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL59 DEL60 DEL43 DEL42 DEL42 DEL42 DEL42 DEL9 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL8 DEL25 DEL8 DEL54 DEL8 DEL25 DEL8 DEL24 DEL8 DEL31