First pass at fixing MNG-1136. This is still not working as the jdk config property is not passed by the check mojo. Thus the jdk property is always null

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@327233 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
-    private String[] createCliArgs()
+    private String[] createCliArgs() throws MojoExecutionException
-        // TODO: Temporary while we wait for surefire to be able to fork unit tests. See
-        // http://jira.codehaus.org/browse/MNG-441
-        return new String[]{"-p", "threaded", "-f", "100", "-i", this.cloverDatabase, "-s",
-            (String) this.project.getCompileSourceRoots().get( 0 ), "-d", this.cloverOutputSourceDirectory};
+        List parameters = new ArrayList();
+     
+        // TODO: The usage of the threaded flushpolicy model and a flush policy is temporary while 
+        // we wait for surefire to be able to fork unit tests. See http://jira.codehaus.org/browse/MNG-441
+
+        parameters.add( "-p" );
+        parameters.add( "threaded" );
+        parameters.add( "-f" );
+        parameters.add( "100" );
+
+        parameters.add( "-i" );
+        parameters.add( this.cloverDatabase );
+        parameters.add( "-s" );
+
+        // TODO: Allow support for several source roots in the future.
+        parameters.add( (String) this.project.getCompileSourceRoots().get( 0 ) );
+
+        parameters.add( "-d" );
+        parameters.add( this.cloverOutputSourceDirectory );
+
+        if ( this.jdk != null )
+        {
+            if ( this.jdk.equals( "1.4" ) )
+            {
+                parameters.add( "-jdk14" );
+            }
+            else if ( this.jdk.equals( "1.5" ) )
+            {
+                parameters.add( "-jdk15" );
+            }
+            else
+            {
+                throw new MojoExecutionException("Unsupported jdk version [" + this.jdk 
+                    + "]. Valid values are [1.4] and [1.5]");
+            }
+        }
+        
+        getLog().debug( "Instrumenting using parameters [" + parameters.toString() + "]");
+        
+        return (String[]) parameters.toArray(new String[0]);

INS26 INS40 INS43 INS42 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS25 INS21 INS41 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS27 INS8 INS32 INS11 INS42 INS42 INS14 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 MOV22 INS42 INS42 INS45 INS42 INS42 MOV11 INS42 INS42 INS45 INS42 INS42 MOV22 INS22 INS33 INS25 INS32 INS42 INS27 MOV5 INS32 INS43 INS52 INS42 INS32 INS8 INS25 INS42 INS45 INS32 INS45 INS42 INS42 INS3 INS42 INS22 INS42 INS45 INS21 INS32 INS8 INS8 INS42 INS42 INS5 INS34 INS52 INS42 INS32 INS22 INS42 INS45 INS21 INS53 INS43 INS85 INS42 INS42 INS45 INS52 INS42 INS32 INS14 INS42 INS42 INS42 INS45 INS43 INS27 INS42 INS45 INS22 INS45 INS52 INS42 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL4 DEL3 DEL41