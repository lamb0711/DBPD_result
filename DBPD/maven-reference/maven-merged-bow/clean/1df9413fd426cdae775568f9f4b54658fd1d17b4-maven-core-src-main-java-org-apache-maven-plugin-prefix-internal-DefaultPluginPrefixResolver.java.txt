[MNG-4554] [regression] plugin updates are requested on every build regardless of policies

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@905424 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+        logger.debug( "Resolving plugin prefix " + request.getPrefix() + " from " + request.getPluginGroups() );
+
+            else if ( logger.isDebugEnabled() )
+            {
+                logger.debug( "Resolved plugin prefix " + request.getPrefix() + " to " + result.getGroupId() + ":"
+                    + result.getArtifactId() + " from repository "
+                    + ( result.getRepository() != null ? result.getRepository().getId() : "null" ) );
+            }
+        }
+        else if ( logger.isDebugEnabled() )
+        {
+            logger.debug( "Resolved plugin prefix " + request.getPrefix() + " to " + result.getGroupId() + ":"
+                + result.getArtifactId() + " from POM " + request.getPom() );
-            String localPath =
-                pluginGroup.replace( '.', '/' ) + "/" + "maven-metadata-" + localRepository.getId() + ".xml";
+            String localPath = getLocalMetadataPath( pluginGroup, localRepository );
-            File destination = new File( localRepository.getBasedir(), localPath );
+            File groupMetadataFile = new File( localRepository.getBasedir(), localPath );
-            PluginPrefixResult result = resolveFromRepository( request, pluginGroup, destination, localRepository );
+            PluginPrefixResult result =
+                resolveFromRepository( request, pluginGroup, groupMetadataFile, localRepository );
+        List<ArtifactRepository> recheck = new ArrayList<ArtifactRepository>();
+
-                String localPath =
-                    pluginGroup.replace( '.', '/' ) + "/" + "maven-metadata-" + repository.getId() + ".xml";
+                String localPath = getLocalMetadataPath( pluginGroup, repository );
-                File destination = new File( localRepository.getBasedir(), localPath );
+                File groupMetadataFile = new File( localRepository.getBasedir(), localPath );
-                if ( !request.isOffline() )
+                if ( !request.isOffline() && ( !groupMetadataFile.exists() || request.isForceUpdate() ) )
-                    String remotePath = pluginGroup.replace( '.', '/' ) + "/" + "maven-metadata.xml";
+                    String remotePath = getRemoteMetadataPath( pluginGroup, repository );
-                        repositorySystem.retrieve( repository, destination, remotePath, request.getTransferListener() );
+                        repositorySystem.retrieve( repository, groupMetadataFile, remotePath,
+                                                   request.getTransferListener() );
+                else if ( !request.isOffline() && !request.isForceUpdate() )
+                {
+                    recheck.add( repository );
+                }
-                PluginPrefixResult result = resolveFromRepository( request, pluginGroup, destination, repository );
+                PluginPrefixResult result = resolveFromRepository( request, pluginGroup, groupMetadataFile, repository );
+
+                if ( result != null )
+                {
+                    return result;
+                }
+            }
+        }
+
+        // Retry the remote repositories for which we previously only consulted the possibly outdated local cache.
+        //
+        for ( String pluginGroup : request.getPluginGroups() )
+        {
+            for ( ArtifactRepository repository : recheck )
+            {
+                String localPath = getLocalMetadataPath( pluginGroup, repository );
+
+                File groupMetadataFile = new File( localRepository.getBasedir(), localPath );
+
+                String remotePath = getRemoteMetadataPath( pluginGroup, repository );
+
+                try
+                {
+                    repositorySystem.retrieve( repository, groupMetadataFile, remotePath, request.getTransferListener() );
+                }
+                catch ( ArtifactTransferFailedException e )
+                {
+                    if ( logger.isDebugEnabled() )
+                    {
+                        logger.warn( "Failed to retrieve " + remotePath + ": " + e.getMessage(), e );
+                    }
+                    else
+                    {
+                        logger.warn( "Failed to retrieve " + remotePath + ": " + e.getMessage() );
+                    }
+                }
+                catch ( ArtifactDoesNotExistException e )
+                {
+                    continue;
+                }
+
+                PluginPrefixResult result = resolveFromRepository( request, pluginGroup, groupMetadataFile, repository );
+    private String getLocalMetadataPath( String groupId, ArtifactRepository repository )
+    {
+        return groupId.replace( '.', '/' ) + "/" + "maven-metadata-" + repository.getId() + ".xml";
+    }
+
+    private String getRemoteMetadataPath( String groupId, ArtifactRepository repository )
+    {
+        return groupId.replace( '.', '/' ) + "/" + "maven-metadata.xml";
+    }
+

INS26 INS40 INS31 INS31 INS83 MOV43 INS42 INS44 INS44 INS8 INS83 INS43 INS42 INS44 INS44 INS8 INS21 INS70 INS60 INS70 INS43 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS43 INS42 INS41 INS32 INS25 MOV44 MOV32 INS8 INS74 INS59 INS44 INS32 INS8 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS32 INS8 INS60 MOV60 INS60 MOV25 INS43 INS43 INS42 INS14 INS43 INS42 INS42 INS42 MOV70 INS32 INS45 INS45 MOV32 INS45 INS32 INS45 INS45 INS45 INS32 INS45 INS32 INS25 INS42 INS42 INS21 MOV43 INS59 MOV43 INS59 INS42 INS42 INS74 INS42 INS44 INS42 INS42 INS42 INS13 INS13 INS42 INS42 INS13 INS13 INS42 INS42 INS42 INS42 INS32 INS8 INS32 INS42 INS32 UPD42 INS42 INS32 INS43 INS43 MOV60 INS43 INS42 INS60 INS60 INS60 INS54 INS25 INS42 INS42 INS21 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV43 INS27 INS25 MOV43 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS8 INS12 INS12 INS43 INS27 INS8 INS32 INS45 INS32 INS45 INS32 INS45 INS32 INS45 INS32 INS32 UPD42 MOV38 INS36 INS27 INS8 INS42 MOV42 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS21 INS44 INS8 INS44 INS8 INS42 INS42 INS33 INS41 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV42 UPD42 MOV42 INS27 INS43 INS38 INS38 INS21 UPD42 INS42 MOV42 UPD42 MOV42 INS43 INS32 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS25 INS43 INS42 INS18 UPD42 UPD42 INS42 INS45 INS32 INS45 INS32 INS45 INS32 INS45 INS36 INS38 INS32 INS42 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS8 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS16 INS32 INS42 INS42 INS42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS21 INS27 INS32 INS45 INS42 INS42 UPD42 INS32 INS32 INS32 INS33 INS32 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 UPD45 MOV45 INS42 UPD45 MOV45 MOV32 INS45 INS42 UPD45 MOV45 INS32 UPD42 UPD42 INS42 INS42 DEL13 DEL13 DEL32 DEL45 DEL45 DEL45 DEL27 DEL13 DEL13 DEL32 DEL45 DEL45 DEL27 DEL13 DEL13 DEL32 DEL27 DEL59 DEL60