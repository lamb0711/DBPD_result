fixed errors reported by Checkstyle

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@958295 13f79535-47bb-0310-9956-ffa450edef68

-@Component(role = ModelValidator.class )
+@Component( role = ModelValidator.class )
-            validateRepositories( problems, model.getPluginRepositories(), "pluginRepositories.pluginRepository", request );
+            validateRepositories( problems, model.getPluginRepositories(), "pluginRepositories.pluginRepository",
+                                  request );
-                    validateRawPlugins( problems, mngt.getPlugins(), "build.pluginManagement.plugins.plugin", request );
+                    validateRawPlugins( problems, mngt.getPlugins(), "build.pluginManagement.plugins.plugin",
+                                        request );
-                validateRepositories( problems, profile.getRepositories(), prefix + ".repositories.repository", request );
+                validateRepositories( problems, profile.getRepositories(), prefix + ".repositories.repository",
+                                      request );
-                    validateStringNotEmpty( "build.plugins.plugin.groupId", problems, Severity.ERROR, p.getGroupId(), p );
+                    validateStringNotEmpty( "build.plugins.plugin.groupId", problems, Severity.ERROR, p.getGroupId(),
+                                            p );
-                     * TODO: Extensions like Flex Mojos use custom scopes like "merged", "internal", "external", etc. In
-                     * order to don't break backward-compat with those, only warn but don't error out.
+                     * TODO: Extensions like Flex Mojos use custom scopes like "merged", "internal", "external", etc.
+                     * In order to don't break backward-compat with those, only warn but don't error out.
-                addViolation( problems, Severity.ERROR, prefix + "systemPath", d.getManagementKey(), "is missing.", d );
+                addViolation( problems, Severity.ERROR, prefix + "systemPath", d.getManagementKey(), "is missing.",
+                              d );
-    private void validateResources( ModelProblemCollector problems, List<Resource> resources, String prefix, ModelBuildingRequest request )
+    private void validateResources( ModelProblemCollector problems, List<Resource> resources, String prefix,
+                                    ModelBuildingRequest request )
-            validateStringNotEmpty( prefix + ".directory", problems, Severity.ERROR, resource.getDirectory(), resource );
+            validateStringNotEmpty( prefix + ".directory", problems, Severity.ERROR, resource.getDirectory(),
+                                    resource );
-    private boolean validateId( String fieldName, ModelProblemCollector problems, String id, InputLocationTracker tracker )
+    private boolean validateId( String fieldName, ModelProblemCollector problems, String id,
+                                InputLocationTracker tracker )
-        addViolation( problems, severity, fieldName, null, "contains an expression but should be a constant.", tracker );
+        addViolation( problems, severity, fieldName, null, "contains an expression but should be a constant.",
+                      tracker );
-    private boolean validateBoolean( String fieldName, ModelProblemCollector problems, Severity severity, String string,
-                                     String sourceHint, InputLocationTracker tracker )
+    private boolean validateBoolean( String fieldName, ModelProblemCollector problems, Severity severity,
+                                     String string, String sourceHint, InputLocationTracker tracker )
-    private boolean validateVersion( String fieldName, ModelProblemCollector problems, Severity severity, String string,
-                                     String sourceHint, InputLocationTracker tracker )
+    private boolean validateVersion( String fieldName, ModelProblemCollector problems, Severity severity,
+                                     String string, String sourceHint, InputLocationTracker tracker )
-                                           String sourceHint, InputLocationTracker tracker, ModelBuildingRequest request )
+                                           String sourceHint, InputLocationTracker tracker,
+                                           ModelBuildingRequest request )
-        buffer.append(' ').append( message );
+        buffer.append( ' ' ).append( message );

