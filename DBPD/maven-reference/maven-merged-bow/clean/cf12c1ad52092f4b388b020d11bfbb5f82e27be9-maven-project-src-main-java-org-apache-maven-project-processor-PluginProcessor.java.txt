Added support for hierarchical model inheritance.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@755131 13f79535-47bb-0310-9956-ffa450edef68

-        {
-            Plugin targetPlugin = new Plugin();
-            copy( (Plugin) child, targetPlugin );
-            t.add( targetPlugin );
+        {//Plugin targetPlugin = new Plugin();
+            
+            boolean isAdd = true;
+            Plugin targetPlugin = find((Plugin) child, t);
+            if(targetPlugin == null) 
+            {
+                targetPlugin = new Plugin();
+            }
+            else
+            {
+                isAdd = false;
+            }
+            
+            copy( (Plugin) child, targetPlugin, isChildMostSpecialized );
+            if(isAdd) t.add( targetPlugin );
-            Plugin targetPlugin = new Plugin();
-            copy( (Plugin) parent, targetPlugin );
-            t.add( targetPlugin );
+            //Plugin targetPlugin = new Plugin();
+            
+            boolean isAdd = true;
+            Plugin targetPlugin = find((Plugin) parent, t);
+            if(targetPlugin == null) 
+            {
+                targetPlugin = new Plugin();
+            }
+            else
+            {
+                isAdd = false;
+            }
+            
+            copy( (Plugin) parent, targetPlugin, false );
+            if(isAdd) t.add( targetPlugin );
-        {
-            Plugin  targetDependency = new Plugin();
-            copy( (Plugin) child, targetDependency );
-            copy( (Plugin) parent, targetDependency );
-            t.add( targetDependency );
+        {          
+            if( match( (Plugin) parent, (Plugin) child) )
+            {
+                boolean isAdd = true;
+                Plugin targetPlugin = find((Plugin) parent, t);
+                if(targetPlugin == null) 
+                {
+                    targetPlugin = new Plugin();
+                }
+                else
+                {
+                    isAdd = false;
+                }                 
+                copy( (Plugin) parent, targetPlugin, false );
+                copy( (Plugin) child, targetPlugin, isChildMostSpecialized );
+                if(isAdd) t.add( targetPlugin ); 
+            } 
+            else
+            {
+                Plugin targetPlugin = new Plugin();
+                copy( (Plugin) parent, targetPlugin, false );
+                copy( (Plugin) child, targetPlugin, isChildMostSpecialized );
+                t.add( targetPlugin );    
+            }  
-    private static void copy(Plugin source, Plugin target)
+    private static Plugin find(Plugin p1, List<Plugin> plugins)
-        if(target.getArtifactId() == null)
+        for(Plugin t : plugins)
+        {
+            if(match(p1, t)){
+                return t;
+            }
+        }
+        
+        return null;
+    }
+    
+    private static boolean match( Plugin d1, Plugin d2 )
+    {
+        return getId( d1 ).equals( getId( d2 ));
+    }   
+    
+    private static String getId( Plugin d )
+    {
+        StringBuilder sb = new StringBuilder();
+        sb.append( d.getGroupId() ).append( ":" ).append( d.getArtifactId() ).append( ":" );
+        return sb.toString();
+    }       
+    
+    private static void copy(Plugin source, Plugin target, boolean isChild)
+    {
+        if(!isChild && source.getInherited() != null && !source.getInherited().equalsIgnoreCase( "true" ))
+        {
+            return;
+        }
+        
+        if(source.getArtifactId() != null)
-        if(target.getInherited() == null)
+        if(source.getInherited() != null)
-        if(target.getVersion() == null)
+        if(source.getVersion() != null)
-               copyPluginExecution(pe, idMatch);    
+               copyPluginExecution(pe, idMatch, isChild);    
-                copyPluginExecution(pe, targetPe); 
+                copyPluginExecution(pe, targetPe, isChild); 
-    private static void copyPluginExecution(PluginExecution source, PluginExecution target)
+    private static void copyPluginExecution(PluginExecution source, PluginExecution target, boolean isChild)
-        
+        if(!isChild && source.getInherited() != null && !source.getInherited().equalsIgnoreCase( "true" ))
+        {
+            return;
+        }            
-        if(target.getInherited() == null)
+        if(isChild && source.getInherited() != null)
-        
-        if(target.getPhase() == null)
+           
+        if(source.getPhase() != null)
-        if(target.getConfiguration() != null)
+        if(source.getConfiguration() != null)
-            target.setConfiguration( Xpp3Dom.mergeXpp3Dom( (Xpp3Dom) source.getConfiguration(), (Xpp3Dom) target.getConfiguration() ));     
+            if(target.getConfiguration() != null)
+            {
+                target.setConfiguration( Xpp3Dom.mergeXpp3Dom( (Xpp3Dom) source.getConfiguration(), (Xpp3Dom) target.getConfiguration() ));     
+            }
+            else
+            {
+                target.setConfiguration( source.getConfiguration() );
+            }            
-        else
-        {
-            target.setConfiguration( source.getConfiguration() );
-        }       
+      

INS31 INS31 INS31 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS44 INS44 MOV21 INS42 INS43 INS42 INS74 INS42 INS70 INS41 INS43 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS60 INS21 INS41 INS39 INS42 INS25 INS25 INS39 INS42 MOV25 INS25 INS42 INS43 INS43 INS44 INS42 INS8 INS33 INS42 INS42 INS32 INS42 INS43 INS59 INS32 INS32 INS27 INS8 UPD27 INS27 MOV8 UPD27 INS27 INS8 INS27 UPD27 INS27 INS8 INS25 INS42 INS42 INS43 INS42 INS25 INS32 INS42 INS32 INS42 INS42 INS14 INS32 INS42 INS45 INS42 INS42 INS27 INS38 INS41 INS32 INS33 INS27 INS38 INS41 INS42 INS27 INS32 INS33 MOV25 INS60 INS60 INS25 MOV21 INS25 MOV27 INS8 INS8 INS42 INS32 INS8 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS32 INS38 INS27 INS32 UPD42 INS42 INS42 UPD42 INS38 INS27 INS32 MOV32 MOV33 UPD42 INS42 INS42 INS39 INS59 MOV43 INS59 INS27 INS8 INS8 INS42 MOV21 INS60 INS60 INS25 MOV21 INS25 INS25 INS42 INS42 INS42 INS41 INS42 INS32 INS42 INS45 INS42 INS42 INS42 INS32 INS33 INS32 INS42 INS45 INS32 INS42 MOV32 MOV33 MOV32 INS42 INS45 UPD42 INS42 INS9 MOV42 MOV32 INS42 INS33 INS21 MOV21 UPD42 INS42 INS39 INS59 MOV43 INS59 INS27 INS8 INS8 INS42 INS21 INS32 MOV8 MOV8 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 INS7 INS7 INS42 INS9 INS42 MOV32 INS42 INS33 INS21 INS21 INS9 INS32 INS42 INS11 INS11 INS60 INS25 INS21 INS21 INS25 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS9 UPD42 UPD42 INS7 INS7 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS39 INS59 INS43 INS27 INS8 INS8 INS32 INS32 INS42 INS21 INS32 INS32 MOV43 INS42 MOV14 INS42 INS9 INS42 INS42 INS42 INS9 INS42 UPD42 INS32 INS42 INS33 MOV21 INS21 INS42 INS11 INS42 INS9 INS42 INS11 INS42 INS42 MOV32 INS42 INS11 INS42 INS9 INS42 INS11 INS42 INS42 INS42 INS11 INS42 INS7 INS7 INS43 INS42 INS43 INS42 UPD42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS14 INS42 INS9 INS42 INS42 INS42 INS42 INS42 INS43 INS42 DEL14 DEL59 DEL60 DEL21 DEL25 DEL27 DEL27