apply some inspections

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219826 13f79535-47bb-0310-9956-ffa450edef68

+ * @author <a href="mailto:evenisse@apache.org">Emmanuel Venisse</a>
+ * @author <a href="mailto:jason@maven.org">Jason van Zyl</a>
+ * @version $Id: DoxiaMojo.java 169372 2005-05-09 22:47:34Z evenisse $
- *
- * @author <a href="mailto:evenisse@apache.org">Emmanuel Venisse</a>
- * @author <a href="mailto:jason@maven.org>Jason van Zyl</a>
- * @version $Id: DoxiaMojo.java 169372 2005-05-09 22:47:34Z evenisse $
+ * @todo check how this works with version ranges
-    
+
-            if ( f.getPath().equals( "pom.xml.backup" ) ||
-                 f.getPath().equals( RELEASE_PROPS ) )
+            if ( f.getPath().equals( "pom.xml.backup" ) || f.getPath().equals( RELEASE_PROPS ) )
-            throw new MojoExecutionException( "Cannot prepare the release because you have local modifications : \n" + message.toString() );
+            throw new MojoExecutionException(
+                "Cannot prepare the release because you have local modifications : \n" + message.toString() );
-            throw new MojoExecutionException( "Can't release project due to non released dependencies :\n"
-                + message.toString() );
+            throw new MojoExecutionException(
+                "Can't release project due to non released dependencies :\n" + message.toString() );
-            model.getScm().setDeveloperConnection( rewriteScmConnection( model.getScm().getDeveloperConnection(),
-                                                                         getTagLabel() ) );
+            model.getScm().setDeveloperConnection(
+                rewriteScmConnection( model.getScm().getDeveloperConnection(), getTagLabel() ) );
-                    if ( artifact.getGroupId().equals( dependency.getGroupId() )
-                        && artifact.getArtifactId().equals( dependency.getArtifactId() )
-                        && artifact.getBaseVersion().equals( dependency.getVersion() )
-                        && artifact.getType().equals( dependency.getType() ) )
+                    if ( artifact.getGroupId().equals( dependency.getGroupId() ) &&
+                        artifact.getArtifactId().equals( dependency.getArtifactId() ) &&
+                        artifact.getBaseVersion().equals( dependency.getVersion() ) &&
+                        artifact.getType().equals( dependency.getType() ) )
-                    if ( artifact.getGroupId().equals( plugin.getGroupId() )
-                        && artifact.getArtifactId().equals( plugin.getArtifactId() ) )
+                    if ( artifact.getGroupId().equals( plugin.getGroupId() ) &&
+                        artifact.getArtifactId().equals( plugin.getArtifactId() ) )
-            transformer.setUpdatedModel ( model );
+            transformer.setUpdatedModel( model );
-            projectVersion = projectVersion.substring( 0, projectVersion.lastIndexOf( "-" ) + 1 ) + nextVersionString + SNAPSHOT;
+            projectVersion = projectVersion.substring( 0, projectVersion.lastIndexOf( "-" ) + 1 ) + nextVersionString +
+                SNAPSHOT;
-            transformer.setUpdatedModel ( model );
+            transformer.setUpdatedModel( model );
-                if ( scmConnection.endsWith( "trunk/") )
+                if ( scmConnection.endsWith( "trunk/" ) )
-                if ( scmConnection.endsWith( "branches/") )
+                if ( scmConnection.endsWith( "branches/" ) )

MOV65 MOV65 INS65 UPD66 INS66