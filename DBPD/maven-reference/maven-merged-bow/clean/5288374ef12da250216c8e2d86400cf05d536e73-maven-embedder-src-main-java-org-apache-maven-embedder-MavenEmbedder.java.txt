o fixes to the embedder for finding settings and cleaning up embedder initialization
  Submitted by: Eugene Kuleshov


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@505612 13f79535-47bb-0310-9956-ffa450edef68

+
+
-        this.classWorld = classWorld;
-
-        this.logger = logger;
-
-        // ----------------------------------------------------------------------------
-        // Don't override any existing SecurityManager if one has been installed. Our
-        // SecurityManager just checks to make sure
-        // ----------------------------------------------------------------------------
-
-        try
-        {
-            if ( System.getSecurityManager() == null && activateSystemManager )
-            {
-                System.setSecurityManager( new MavenEmbedderSecurityManager() );
-            }
-        }
-        catch ( RuntimeException e )
-        {
-            logger.warn( "Error trying to set the SecurityManager: " + e.getMessage() );
-        }
-
-        start();
+        this( new DefaultMavenEmbedRequest().setClassWorld( classWorld ).setMavenEmbedderLogger( logger ) );
+    public MavenEmbedder( MavenEmbedRequest req )
+        throws MavenEmbedderException
+    {
+        start( req );
+    }
+
-    
+
-     *  from remote repositories (if they prohibit by default on project loading)
-     */ 
-    protected void verifyPlugin( Plugin plugin, MavenProject project ) 
-            throws ComponentLookupException, 
-                   ArtifactResolutionException, 
-                   PluginVersionResolutionException, 
-                   ArtifactNotFoundException, 
-                   InvalidVersionSpecificationException, 
-                   InvalidPluginException, 
-                   PluginManagerException, 
-                   PluginNotFoundException, 
-                   PluginVersionNotFoundException 
+     * from remote repositories (if they prohibit by default on project loading)
+     */
+    protected void verifyPlugin( Plugin plugin,
+                                 MavenProject project )
+        throws ComponentLookupException, ArtifactResolutionException, PluginVersionResolutionException,
+        ArtifactNotFoundException, InvalidVersionSpecificationException, InvalidPluginException, PluginManagerException,
+        PluginNotFoundException, PluginVersionNotFoundException
-        pluginManager.verifyPlugin(plugin, project, settings, localRepository);
+        pluginManager.verifyPlugin( plugin, project, settings, localRepository );
-    
-    /**
-     * protected for tests only..
-     */
-    protected Map getPluginExtensionComponents(Plugin plugin) throws PluginManagerException 
+
+    /** protected for tests only.. */
+    protected Map getPluginExtensionComponents( Plugin plugin )
+        throws PluginManagerException
-    
+
-     * 
+     *
-     * 
-            
+
-                verifyPlugin( plugin, project);
-                map.putAll( getPluginExtensionComponents(plugin));
-
+                verifyPlugin( plugin, project );
+                map.putAll( getPluginExtensionComponents( plugin ) );
-    
+
-        
-            project = readProject( new File (request.getPomFile()) );
+
+            project = readProject( new File( request.getPomFile() ) );
-            
+
-        catch (PluginManagerException e) 
+        catch ( PluginManagerException e )
-        catch (Exception e) 
+        catch ( Exception e )
-    private void start()
+    private void start( MavenEmbedRequest req )
-        start( new DefaultMavenEmbedRequest() );
-    }
+        this.classWorld = req.getClassWorld();
-    public void start( MavenEmbedRequest req )
-        throws MavenEmbedderException
-    {
+        this.logger = req.getMavenEmbedderLogger();
+
+        // ----------------------------------------------------------------------------
+        // Don't override any existing SecurityManager if one has been installed. Our
+        // SecurityManager just checks to make sure
+        // ----------------------------------------------------------------------------
+
+        try
+        {
+            if ( System.getSecurityManager() == null && activateSystemManager )
+            {
+                System.setSecurityManager( new MavenEmbedderSecurityManager() );
+            }
+        }
+        catch ( RuntimeException e )
+        {
+            logger.warn( "Error trying to set the SecurityManager: " + e.getMessage() );
+        }
+
-        
+
-            
+

MOV31 INS31 INS83 INS42 MOV44 MOV44 MOV43 MOV8 INS44 MOV43 UPD83 INS17 INS43 INS42 MOV21 MOV21 MOV54 INS32 INS42 UPD66 MOV32 MOV42 INS42 INS42 INS42 INS32 INS32 UPD42 INS42 INS42 INS42 INS42 INS42 DEL21 DEL83 DEL39 DEL42 DEL31 DEL42 DEL42