Remove Google Guava usage (move to Java7)
-import static com.google.common.base.Predicates.in;
-import static com.google.common.collect.Iterables.any;
-import static com.google.common.collect.Iterables.concat;
-import static com.google.common.collect.Iterables.transform;
-import static java.util.EnumSet.of;
-import java.util.Arrays;
+import java.util.ArrayList;
+import java.util.Collection;
-
-import org.apache.maven.model.building.ModelProblem.Severity;
-
-import com.google.common.base.Function;
-import com.google.common.base.Predicates;
-import com.google.common.collect.Iterables;
+import java.util.List;
-        return success( model, Iterables.concat( Iterables.transform( Arrays.asList( results ), GET_PROBLEMS ) ) );
+        final List<ModelProblem> problemsList = new ArrayList<>();
+
+        for ( Result<?> result1 : results )
+        {
+            for ( ModelProblem modelProblem : result1.getProblems() )
+            {
+                problemsList.add( modelProblem );
+            }
+        }
+
+        return success( model, problemsList );
-        return error( Iterables.concat( Iterables.transform( Arrays.asList( results ), GET_PROBLEMS ) ) );
+        final List<ModelProblem> problemsList = new ArrayList<>( );
+
+        for ( Result<?> result1 : results )
+        {
+            for ( ModelProblem modelProblem : result1.getProblems( ) )
+            {
+                problemsList.add( modelProblem );
+            }
+        }
+
+        return error( problemsList );
-        return new Result<>( result.hasErrors() || hasErrors( problems ), result.get(), concat( result.getProblems(),
-                                                                                                 problems ) );
+        Collection<ModelProblem> list = new ArrayList<>();
+        for ( ModelProblem item : problems )
+        {
+            list.add( item );
+        }
+        for ( ModelProblem item : result.getProblems() )
+        {
+            list.add( item );
+        }
+        return new Result<>( result.hasErrors() || hasErrors( problems ), result.get(), list );
-        return addProblems( result, Iterables.concat( Iterables.transform( Arrays.asList( results ), GET_PROBLEMS ) ) );
+        final List<ModelProblem> problemsList = new ArrayList<>();
+
+        for ( Result<?> result1 : results )
+        {
+            for ( ModelProblem modelProblem : result1.getProblems( ) )
+            {
+                problemsList.add( modelProblem );
+            }
+        }
+        return addProblems( result, problemsList );
-        final boolean hasErrors = any( transform( results, new Function<Result<?>, Boolean>()
+        boolean hasErrors = false;
+        List<T> modelsList = new ArrayList<>();
+        List<ModelProblem> problemsList = new ArrayList<>();
+
+        for ( Result<? extends T> result : results )
-            @Override
-            public Boolean apply( Result<?> input )
+            modelsList.add( result.get() );
+
+            for ( ModelProblem modelProblem : result.getProblems() )
-                return input.hasErrors();
+                problemsList.add( modelProblem );
-        } ), Predicates.equalTo( true ) );
-        final Iterable<T> models = transform( results, new Function<Result<? extends T>, T>()
-        {
-            @Override
-            public T apply( Result<? extends T> input )
+
+            if ( result.hasErrors() )
-                return input.get();
+                hasErrors = true;
-        } );
-        final Iterable<ModelProblem> problems = concat( transform( results, GET_PROBLEMS ) );
-        return new Result<>( hasErrors, models, problems );
+        }
+        return new Result<>( hasErrors, ( Iterable<T> ) modelsList, problemsList );
-        return any( transform( problems, new Function<ModelProblem, Severity>()
+        for ( ModelProblem input : problems )
-            @Override
-            public Severity apply( ModelProblem input )
+            if ( input.getSeverity().equals( ERROR ) || input.getSeverity().equals( FATAL ) )
-                return input.getSeverity();
+                return true;
-        } ), in( of( ERROR, FATAL ) ) );
+        }
+        return false;
-
-    private static final Function<Result<?>, Iterable<? extends ModelProblem>> GET_PROBLEMS =
-        new Function<Result<?>, Iterable<? extends ModelProblem>>()
-        {
-            @Override
-            public Iterable<? extends ModelProblem> apply( Result<?> input )
-            {
-                return input.getProblems();
-            }
-        };

MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 INS60 INS70 INS41 INS60 INS70 INS41 INS60 INS70 INS70 INS60 INS70 INS41 INS60 INS60 INS60 INS70 INS70 INS41 INS83 INS74 INS59 INS44 INS42 INS8 INS32 INS83 INS74 INS59 MOV44 INS42 INS8 INS32 INS74 INS59 INS44 INS42 INS8 INS44 MOV32 INS8 INS83 UPD74 MOV74 INS59 MOV44 INS42 INS8 INS32 MOV39 INS59 INS74 INS59 INS74 INS59 MOV44 INS42 INS8 MOV44 INS42 INS8 INS9 INS43 INS43 INS42 INS14 MOV74 INS42 INS70 UPD42 MOV42 INS42 INS42 INS43 INS43 INS42 INS14 UPD42 INS70 UPD42 MOV42 INS42 INS43 INS43 INS42 INS14 INS43 INS42 INS21 MOV43 INS42 INS21 INS42 UPD43 INS42 INS14 UPD42 INS70 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 INS9 INS43 MOV43 INS42 INS14 UPD43 MOV43 MOV43 INS42 INS14 UPD42 INS21 INS70 INS25 INS11 UPD42 INS25 INS42 INS42 INS74 INS44 INS32 INS8 INS42 INS42 INS74 INS44 INS32 INS8 INS42 INS42 INS74 INS42 INS32 INS32 UPD42 INS74 INS44 INS32 INS8 INS42 INS74 UPD42 INS74 INS32 INS44 INS32 INS8 INS32 INS8 MOV74 INS42 INS27 INS8 INS43 INS43 INS42 INS42 INS42 INS21 INS43 INS43 INS42 INS42 INS42 INS21 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS43 MOV43 INS42 UPD42 MOV42 UPD42 MOV42 INS21 INS43 INS43 UPD42 MOV42 UPD42 MOV42 MOV32 MOV43 INS42 UPD42 MOV42 INS42 INS21 UPD42 MOV42 UPD42 MOV42 INS21 INS32 INS32 INS41 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 UPD42 MOV42 UPD42 UPD42 INS32 INS7 MOV32 UPD42 MOV42 INS42 INS32 UPD42 MOV42 MOV42 INS9 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS9 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL32 DEL41 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL32 DEL41 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL32 DEL41 DEL9 DEL83 DEL42 DEL42 DEL42 DEL42 DEL43 DEL74 DEL42 DEL78 DEL83 DEL43 DEL42 DEL32 DEL41 DEL8 DEL31 DEL1 DEL14 DEL32 DEL32 DEL59 DEL60 DEL83 DEL42 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL42 DEL43 DEL74 DEL42 DEL78 DEL83 DEL42 DEL32 DEL41 DEL8 DEL31 DEL1 DEL14 DEL32 DEL59 DEL60 DEL83 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL41 DEL8 DEL31 DEL1 DEL14 DEL32 DEL32 DEL32 DEL32 DEL41 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL42 DEL43 DEL76 DEL74 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL42 DEL43 DEL76 DEL74 DEL74 DEL42 DEL78 DEL83 DEL42 DEL43 DEL76 DEL74 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL1 DEL14 DEL59 DEL23