Fixing plugin manager/plugin version manager for use with the help plugin...restoring backward compat.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@536027 13f79535-47bb-0310-9956-ffa450edef68

-            PluginDescriptor pluginDescriptor;
-            try
-            {
-                pluginDescriptor = pluginLoader.loadPlugin( mojoBinding, project );
-            }
-            catch ( PluginLoaderException e )
-            {
-                throw new LifecyclePlannerException( e.getMessage(), e );
-            }
-
-            MojoDescriptor mojoDescriptor = pluginDescriptor.getMojo( mojoBinding.getGoal() );
-            if ( mojoDescriptor == null )
-            {
-                throw new LifecyclePlannerException( "Mojo: " + mojoBinding.getGoal() + " does not exist in plugin: "
-                    + pluginDescriptor.getId() + "." );
-            }
-
-            findForkModifiers( mojoBinding, pluginDescriptor, planElement, lifecycleBindings, project, new LinkedList(), tasks );
+            findForkModifiers( mojoBinding, planElement, lifecycleBindings, project );
+    private void findForkModifiers( MojoBinding mojoBinding, ModifiablePlanElement planElement,
+                                    LifecycleBindings lifecycleBindings, MavenProject project )
+        throws LifecyclePlannerException, LifecycleSpecificationException, LifecycleLoaderException
+    {
+        PluginDescriptor pluginDescriptor;
+        try
+        {
+            pluginDescriptor = pluginLoader.loadPlugin( mojoBinding, project );
+        }
+        catch ( PluginLoaderException e )
+        {
+            throw new LifecyclePlannerException( e.getMessage(), e );
+        }
+
+        MojoDescriptor mojoDescriptor = pluginDescriptor.getMojo( mojoBinding.getGoal() );
+        if ( mojoDescriptor == null )
+        {
+            throw new LifecyclePlannerException( "Mojo: " + mojoBinding.getGoal() + " does not exist in plugin: "
+                + pluginDescriptor.getId() + "." );
+        }
+
+        findForkModifiers( mojoBinding, pluginDescriptor, planElement, lifecycleBindings, project, new LinkedList() );
+    }
+
+                // findForkModifiers( mojoBinding, pluginDescriptor, planElement, lifecycleBindings, 
+                //                    project, forkingBindings, tasks );
+                for ( Iterator reportBindingIt = reportBindings.iterator(); reportBindingIt.hasNext(); )
+                {
+                    MojoBinding reportBinding = (MojoBinding) reportBindingIt.next();
+                    
+                    PluginDescriptor pd;
+                    try
+                    {
+                        pd = pluginLoader.loadReportPlugin( mojoBinding, project );
+                    }
+                    catch ( PluginLoaderException e )
+                    {
+                        throw new LifecyclePlannerException( "Failed to load report-plugin descriptor for: "
+                            + MojoBindingUtils.toString( reportBinding ) + ". Reason: " + e.getMessage(), e );
+                    }
+
+//                    findForkModifiers( reportBinding, planElement, lifecycleBindings, project );
+                }
+
-                
+
-                        ((DirectInvocationOriginElement) planElement).addDirectInvocationModifier( modder );
+                        ( (DirectInvocationOriginElement) planElement ).addDirectInvocationModifier( modder );
-                                    LinkedList forkingBindings, List tasks )
+                                    LinkedList forkingBindings )
-                recurseSingleMojoFork( mojoBinding, pluginDescriptor, planElement, mergedBindings, project, forkingBindings,
-                                       tasks );
+                recurseSingleMojoFork( mojoBinding, pluginDescriptor, planElement, mergedBindings, project, forkingBindings );
-                recursePhaseMojoFork( mojoBinding, pluginDescriptor, planElement, mergedBindings, project, forkingBindings, tasks );
+                recursePhaseMojoFork( mojoBinding, pluginDescriptor, planElement, mergedBindings, project, forkingBindings );
-                                                           LinkedList forkingBindings, List tasks )
+                                                           LinkedList forkingBindings )
-            
+
-            
+
-                findForkModifiers( invokedBinding, pluginDescriptor, forkedPlan, forkedBindings, project,
-                                   forkingBindings, tasks );
+                findForkModifiers( invokedBinding, pluginDescriptor, forkedPlan, forkedBindings, project, forkingBindings );
-            
+
-                                                    MavenProject project, LinkedList forkingBindings, List tasks )
+                                                    MavenProject project, LinkedList forkingBindings )
-            findForkModifiers( forkedBinding, forkedPluginDescriptor, mpe, bindings, project, forkingBindings, tasks );
+            findForkModifiers( forkedBinding, forkedPluginDescriptor, mpe, bindings, project, forkingBindings );
-            List planMojoBindings = ((BuildPlan) mpe).getPlanMojoBindings( project, lifecycleBindingManager );
-            
+            List planMojoBindings = ( (BuildPlan) mpe ).getPlanMojoBindings( project, lifecycleBindingManager );
+
-            
+
-                                       LinkedList forkingBindings, List tasks )
+                                       LinkedList forkingBindings )
-        modifyBuildPlanForForkedLifecycle( mojoBinding, pluginDescriptor, planElement, cloned, project, forkingBindings, tasks );
+        modifyBuildPlanForForkedLifecycle( mojoBinding, pluginDescriptor, planElement, cloned, project, forkingBindings );
-                                        MavenProject project, LinkedList forkingBindings, List tasks )
+                                        MavenProject project, LinkedList forkingBindings )
-                                                      project, forkingBindings, tasks );
+                                                      project, forkingBindings );

INS31 MOV29 INS83 INS39 INS42 MOV44 MOV44 MOV44 MOV44 MOV43 MOV43 MOV43 INS8 UPD42 INS44 INS44 INS44 INS44 INS43 INS43 INS43 MOV8 MOV60 INS24 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 MOV58 MOV32 INS8 INS42 INS42 INS42 INS42 MOV60 INS21 INS32 INS42 INS42 INS42 INS42 INS42 INS24 INS58 INS32 INS8 INS43 INS59 INS42 INS42 INS60 INS60 INS54 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS8 INS12 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS21 INS44 INS8 INS43 INS32 INS7 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS45 INS32 INS45 INS32 INS42 INS42 INS42 INS42 INS42 DEL42 DEL24 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42