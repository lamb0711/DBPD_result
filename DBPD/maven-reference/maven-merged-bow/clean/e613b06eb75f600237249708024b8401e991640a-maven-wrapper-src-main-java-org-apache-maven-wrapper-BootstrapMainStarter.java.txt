[MNG-5937] Split wrapper jar from assemblies
Remove unused cli package
Reformat code

-public class BootstrapMainStarter {
-  public void start(String[] args, File mavenHome) throws Exception {
-    File mavenJar = findLauncherJar(mavenHome);
-    URLClassLoader contextClassLoader = new URLClassLoader(new URL[] {
-      mavenJar.toURI().toURL()
-    }, ClassLoader.getSystemClassLoader().getParent());
-    Thread.currentThread().setContextClassLoader(contextClassLoader);
-    Class<?> mainClass = contextClassLoader.loadClass("org.codehaus.plexus.classworlds.launcher.Launcher");
+public class BootstrapMainStarter
+{
+    public void start( String[] args, File mavenHome )
+        throws Exception
+    {
+        File mavenJar = findLauncherJar( mavenHome );
+        URLClassLoader contextClassLoader = new URLClassLoader( new URL[] { mavenJar.toURI().toURL() },
+                                                                ClassLoader.getSystemClassLoader().getParent() );
+        Thread.currentThread().setContextClassLoader( contextClassLoader );
+        Class<?> mainClass = contextClassLoader.loadClass( "org.codehaus.plexus.classworlds.launcher.Launcher" );
-    System.setProperty("maven.home", mavenHome.getAbsolutePath());
-    System.setProperty("classworlds.conf", new File(mavenHome, "/bin/m2.conf").getAbsolutePath());
+        System.setProperty( "maven.home", mavenHome.getAbsolutePath() );
+        System.setProperty( "classworlds.conf", new File( mavenHome, "/bin/m2.conf" ).getAbsolutePath() );
-    Method mainMethod = mainClass.getMethod("main", String[].class);
-    mainMethod.invoke(null, new Object[] {
-      args
-    });
-  }
-
-  private File findLauncherJar(File mavenHome) {
-    for (File file : new File(mavenHome, "boot").listFiles()) {
-      if (file.getName().matches("plexus-classworlds-.*\\.jar")) {
-        return file;
-      }
+        Method mainMethod = mainClass.getMethod( "main", String[].class );
+        mainMethod.invoke( null, new Object[] { args } );
-    throw new RuntimeException(String.format("Could not locate the Maven launcher JAR in Maven distribution '%s'.", mavenHome));
-  }  
+
+    private File findLauncherJar( File mavenHome )
+    {
+        for ( File file : new File( mavenHome, "boot" ).listFiles() )
+        {
+            if ( file.getName().matches( "plexus-classworlds-.*\\.jar" ) )
+            {
+                return file;
+            }
+        }
+        throw new RuntimeException( 
+                   String.format( "Could not locate the Maven launcher JAR in Maven distribution '%s'.", mavenHome ) );
+    }

