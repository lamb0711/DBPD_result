o Removed GoalDecorationPhase, since goal decoration is now a part of the model
o Removed PluginDownloadPhase, since plugin resolution/download has to be a part of the prereq and pre/postGoal resolution, too
o Changed DefaultMaven to execute the session lifecycle, and the component wiring to likewise wire the DefaultMaven with a session lifecycle manager
o Removed the org.apache.maven.decoration package and its contents, since this is all in the model now
o Fixed the GoalResolutionPhase to verify each goal's plugin in turn as it resolves prereqs, preGoals and postGoals
o Fixed the GoalResolutionPhaseTest to work with the new resolution model
o Added a new createGoalExecutionContext to the MavenTestCase base class, to allow me to inject a MavenProject directly rather than a pom file
o Fixed the MavenLifecycleManagerTest to only expect 4 lifecycle phases, now than the plugin resolution and goal decoration phases are obsoleted
o All builds on local machine, but will depend on plexus-0.17.jar/pom and plexus-artifact-container-1.0-alpha-1.jar/pom to build on beaver
o I uploaded plexus-artifact-container-1.0-alpha-1.jar to ${plexus.home}/dist, but cannot upload POMs due to priveleges problem in poms dir.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163007 13f79535-47bb-0310-9956-ffa450edef68

- * @author <a href="mailto:jason@maven.org">Jason van Zyl</a>
- * @version $Id$
+ * @author <a href="mailto:jason@maven.org">Jason van Zyl </a>
+ * @version $Id: DefaultArtifactHandlerManager.java,v 1.1.1.1 2004/08/09
+ *          18:37:32 jvanzyl Exp $
-    public ArtifactHandler getArtifactHandler( String type )
-        throws ArtifactHandlerNotFoundException
+    public ArtifactHandler getArtifactHandler( String type ) throws ArtifactHandlerNotFoundException
-            throw new ArtifactHandlerNotFoundException(
-                "Artifact handler for type '" + type + "' cannot be found." );
+            throw new ArtifactHandlerNotFoundException( "Artifact handler for type '" + type + "' cannot be found." );
-        return interpolateLayout( artifact.getGroupId(),
-                                  artifact.getArtifactId(),
-                                  artifact.getVersion(),
-                                  handler.directory(),
-                                  handler.extension() );
+        return interpolateLayout( artifact.getGroupId(), artifact.getArtifactId(), artifact.getVersion(), handler
+            .directory(), handler.extension() );
-    private String interpolateLayout( String groupId,
-                                      String artifactId,
-                                      String version,
-                                      String directory,
-                                      String extension )
+    private String interpolateLayout( String groupId, String artifactId, String version, String directory,
+        String extension )
-}
+}

UPD66 UPD66 INS66