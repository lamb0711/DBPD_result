Various model processors.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@751882 13f79535-47bb-0310-9956-ffa450edef68

-public class DependencyProcessor extends BaseProcessor
+public class DependencyProcessor
+    extends BaseProcessor
-        
-        if (parent == null && child == null)
+
+        if ( parent == null && child == null )
-        else if(parent == null && child != null)
+        else if ( parent == null && child != null )
-            copy( (Dependency) child, targetDependency);
-            t.add( targetDependency );    
-        } 
-        else if( parent != null && child == null)
-        {
-            Dependency targetDependency = new Dependency();
-            copy( (Dependency) parent, targetDependency);
+            copy( (Dependency) child, targetDependency );
-        else //JOIN
+        else if ( parent != null && child == null )
-            copy( (Dependency) child, targetDependency);
-            copy( (Dependency) parent, targetDependency);
+            copy( (Dependency) parent, targetDependency );
+            t.add( targetDependency );
+        }
+        else
+        // JOIN
+        {
+            Dependency targetDependency = new Dependency();
+            copy( (Dependency) child, targetDependency );
+            copy( (Dependency) parent, targetDependency );
-    
-    private static void copy(Dependency dependency, Dependency targetDependency)
+
+    private static void copy( Dependency dependency, Dependency targetDependency )
-        if(targetDependency.getArtifactId() == null)
+        if ( targetDependency.getArtifactId() == null )
-        
-        if(targetDependency.getClassifier() == null)
+
+        if ( targetDependency.getClassifier() == null )
-        
-        if(targetDependency.getGroupId() == null)
+
+        if ( targetDependency.getGroupId() == null )
-            targetDependency.setGroupId(dependency.getGroupId());
+            targetDependency.setGroupId( dependency.getGroupId() );
-        
-        if( targetDependency.getScope() == null)
+
+        if ( targetDependency.getScope() == null )
-        
-        if(targetDependency.getSystemPath() == null)
+
+        if ( targetDependency.getSystemPath() == null )
-        
-        if( targetDependency.getType() == null )
+
+        if ( targetDependency.getType() == null )
-        
-        if(targetDependency.getVersion() == null)
+
+        if ( targetDependency.getVersion() == null )
-        
-        if(!dependency.getExclusions().isEmpty())
+
+        if ( !dependency.getExclusions().isEmpty() )
-            for(Exclusion e : dependency.getExclusions())
+            for ( Exclusion e : dependency.getExclusions() )
-                if(!containsExclusion(e, targetExclusions))
+                if ( !containsExclusion( e, targetExclusions ) )
-    
-    private static boolean containsExclusion(Exclusion exclusion, List<Exclusion> exclusions)
+
+    private static boolean containsExclusion( Exclusion exclusion, List<Exclusion> exclusions )
-        for(Exclusion e :exclusions)
+        for ( Exclusion e : exclusions )
-            if(e.getGroupId().equals( exclusion.getGroupId() ) && e.getArtifactId().equals( exclusion.getArtifactId() ))
+            if ( e.getGroupId().equals( exclusion.getGroupId() )
+                && e.getArtifactId().equals( exclusion.getArtifactId() ) )
-        } 
+        }

