o Included forked executions in dump of execution plan

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@808339 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Iterator;
+    private void debugReactorPlan( List<ProjectBuild> projectBuilds )
+    {
+        logger.debug( "=== REACTOR BUILD PLAN ================================================" );
+
+        for ( Iterator<ProjectBuild> it = projectBuilds.iterator(); it.hasNext(); )
+        {
+            ProjectBuild projectBuild = it.next();
+
+            logger.debug( "Project: " + projectBuild.project.getId() );
+            logger.debug( "Tasks:   " + projectBuild.taskSegment.tasks );
+            logger.debug( "Style:   " + ( projectBuild.taskSegment.aggregating ? "Aggregating" : "Regular" ) );
+
+            if ( it.hasNext() )
+            {
+                logger.debug( "-----------------------------------------------------------------------" );
+            }
+        }
+
+        logger.debug( "=======================================================================" );
+    }
+
+    private void debugProjectPlan( MavenProject currentProject, MavenExecutionPlan executionPlan )
+    {
+        logger.debug( "=== PROJECT BUILD PLAN ================================================" );
+        logger.debug( "Project:       " + getKey( currentProject ) );
+
+        for ( MojoExecution mojoExecution : executionPlan.getExecutions() )
+        {
+            debugMojoExecution( mojoExecution );
+        }
+
+        logger.debug( "=======================================================================" );
+    }
+
+    private void debugMojoExecution( MojoExecution mojoExecution )
+    {
+        String mojoExecId =
+            mojoExecution.getGroupId() + ':' + mojoExecution.getArtifactId() + ':' + mojoExecution.getVersion() + ':'
+                + mojoExecution.getGoal() + " (" + mojoExecution.getExecutionId() + ')';
+
+        Map<String, List<MojoExecution>> forkedExecutions = mojoExecution.getForkedExecutions();
+        if ( !forkedExecutions.isEmpty() )
+        {
+            for ( Map.Entry<String, List<MojoExecution>> fork : forkedExecutions.entrySet() )
+            {
+                logger.debug( "--- init fork of " + fork.getKey() + " for " + mojoExecId + " ---" );
+
+                for ( MojoExecution forkedExecution : fork.getValue() )
+                {
+                    debugMojoExecution( forkedExecution );
+                }
+
+                logger.debug( "--- exit fork of " + fork.getKey() + " for " + mojoExecId + " ---" );
+            }
+        }
+
+        logger.debug( "-----------------------------------------------------------------------" );
+        logger.debug( "Goal:          " + mojoExecId );
+        logger.debug( "Style:         "
+            + ( isAggregatorMojo( mojoExecution.getMojoDescriptor() ) ? "Aggregating" : "Regular" ) );
+        logger.debug( "Configuration: " + mojoExecution.getConfiguration() );
+    }
+
-            logger.debug( "=== REACTOR BUILD PLAN ===" );
-
-            for ( ProjectBuild projectBuild : projectBuilds )
-            {
-                logger.debug( "------------------" );
-                logger.debug( "Project: " + projectBuild.project.getId() );
-                logger.debug( "Tasks:   " + projectBuild.taskSegment.tasks );
-            }
-
-            logger.debug( "==========================" );
+            debugReactorPlan( projectBuilds );
-                    logger.debug( "=== PROJECT BUILD PLAN ===" );
-                    logger.debug( "Project:       " + currentProject );
-
-                    for ( MojoExecution mojoExecution : executionPlan.getExecutions() )
-                    {
-                        logger.debug( "------------------" );
-                        logger.debug( "Goal:          " + mojoExecution.getGroupId() + ':'
-                            + mojoExecution.getArtifactId() + ':' + mojoExecution.getVersion() + ':'
-                            + mojoExecution.getGoal() + ':' + mojoExecution.getExecutionId() );
-                        logger.debug( "Configuration: " + String.valueOf( mojoExecution.getConfiguration() ) );
-                    }
-
-                    logger.debug( "==========================" );
+                    debugProjectPlan( currentProject, executionPlan );

INS26 INS40 INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS74 INS42 INS21 INS24 INS21 INS43 INS42 INS43 INS42 INS21 INS21 INS70 INS21 INS43 INS42 INS60 INS60 INS25 INS21 INS21 INS21 MOV21 INS43 INS43 INS32 INS58 INS32 MOV8 INS32 INS42 INS42 INS32 INS32 MOV44 MOV32 INS8 INS32 INS42 INS43 INS59 INS74 INS59 INS38 INS8 INS32 INS32 INS32 MOV32 MOV32 INS42 INS42 INS42 INS42 INS45 INS74 INS59 INS42 INS42 INS60 INS21 INS25 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS27 INS21 INS42 INS42 INS45 INS42 INS42 MOV27 MOV13 INS43 INS43 INS74 INS42 INS32 INS32 INS70 INS42 INS42 INS45 INS42 INS42 INS27 INS42 INS42 INS27 UPD42 UPD42 INS27 INS43 INS43 INS42 INS32 INS43 INS59 INS32 INS32 INS8 INS45 INS32 INS32 INS45 UPD13 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS44 INS32 INS8 INS45 INS42 INS45 INS36 INS45 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS42 MOV21 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS21 INS70 INS21 INS16 UPD42 UPD42 INS42 INS42 INS45 INS36 INS43 INS43 INS74 INS32 INS44 INS32 INS8 INS32 INS32 INS45 INS45 MOV32 INS16 UPD45 INS40 INS42 INS43 INS43 INS42 INS42 INS27 INS43 INS42 INS42 INS42 INS21 INS42 INS42 INS27 INS42 INS32 INS40 INS45 INS45 INS42 INS42 INS45 INS32 INS45 INS42 INS45 INS42 INS32 INS45 INS32 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 DEL45 DEL42 DEL42 DEL45 DEL27 DEL32 DEL45 DEL42 DEL43 DEL42 DEL44 DEL42 DEL70 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL45 DEL42 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL42 DEL42 DEL45 DEL32 DEL21