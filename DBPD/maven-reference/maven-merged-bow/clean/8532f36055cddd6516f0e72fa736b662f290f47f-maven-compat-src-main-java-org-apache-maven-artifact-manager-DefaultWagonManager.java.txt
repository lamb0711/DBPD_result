o set the header to 3.0-alpha-1, we'll wire this in with mercury in alpha-2


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@721770 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.InputStream;
-import java.util.Properties;
-import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
-import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
-import org.codehaus.plexus.util.IOUtil;
-    implements WagonManager, Contextualizable, Initializable
+    implements WagonManager, Contextualizable
-    private String httpUserAgent;
+    private String httpUserAgent = "Apache-Maven/3.0-alpha-1";
-    // TODO: Remove this, once the maven-shade-plugin 1.2 release is out, allowing configuration of httpHeaders in the components.xml
+
+        XmlPlexusConfiguration propertyConfig = new XmlPlexusConfiguration( "property" );
+        PlexusConfiguration headerConfig = config.getChild( "httpHeaders", true );
+        headerConfig.addChild( propertyConfig );
-        if ( httpUserAgent != null )
-        {
-            try
-            {
-                wagon.getClass().getMethod( "setHttpHeaders", new Class[]{ Properties.class } );
+        XmlPlexusConfiguration nameConfig = new XmlPlexusConfiguration( "name" );
+        nameConfig.setValue( "User-Agent" );
+        propertyConfig.addChild( nameConfig );
+        
+        XmlPlexusConfiguration versionConfig = new XmlPlexusConfiguration( "value" );
+        versionConfig.setValue( httpUserAgent );
+        propertyConfig.addChild( versionConfig );
-                PlexusConfiguration headerConfig = config.getChild( "httpHeaders", true );
-                PlexusConfiguration[] children = headerConfig.getChildren( "property" );
-                boolean found = false;
-                for ( int i = 0; i < children.length; i++ )
-                {
-                    PlexusConfiguration c = children[i].getChild( "name", false );
-                    if ( c != null && "User-Agent".equals( c.getValue( null ) ) )
-                    {
-                        found = true;
-                        break;
-                    }
-                }
-                if ( !found )
-                {
-                    XmlPlexusConfiguration propertyConfig = new XmlPlexusConfiguration( "property" );
-                    headerConfig.addChild( propertyConfig );
-                    
-                    XmlPlexusConfiguration nameConfig = new XmlPlexusConfiguration( "name" );
-                    nameConfig.setValue( "User-Agent" );
-                    propertyConfig.addChild( nameConfig );
-                    
-                    XmlPlexusConfiguration versionConfig = new XmlPlexusConfiguration( "value" );
-                    versionConfig.setValue( httpUserAgent );
-                    propertyConfig.addChild( versionConfig );
-                }
-            }
-            catch ( SecurityException e )
-            {
-                // forget it. this method is public, if it exists.
-            }
-            catch ( NoSuchMethodException e )
-            {
-                // forget it.
-            }
-        }
-        
-
-    // TODO: Remove this, once the maven-shade-plugin 1.2 release is out, allowing configuration of httpHeaders in the components.xml
-    public void initialize()
-        throws InitializationException
-    {
-        if ( httpUserAgent == null )
-        {
-            InputStream resourceAsStream = null;
-            try
-            {
-                Properties properties = new Properties();
-                resourceAsStream = getClass().getClassLoader().getResourceAsStream( MAVEN_ARTIFACT_PROPERTIES );
-
-                if ( resourceAsStream != null )
-                {
-                    try
-                    {
-                        properties.load( resourceAsStream );
-
-                        httpUserAgent =
-                            "maven-artifact/" + properties.getProperty( "version" ) + " (Java "
-                                + System.getProperty( "java.version" ) + "; " + System.getProperty( "os.name" ) + " "
-                                + System.getProperty( "os.version" ) + ")";
-                    }
-                    catch ( IOException e )
-                    {
-                        getLogger().warn(
-                                          "Failed to load Maven artifact properties from:\n" + MAVEN_ARTIFACT_PROPERTIES
-                                              + "\n\nUser-Agent HTTP header may be incorrect for artifact resolution." );
-                    }
-                }
-            }
-            finally
-            {
-                IOUtil.close( resourceAsStream );
-            }
-        }
-    }

MOV8 INS45 MOV25 MOV60 MOV41 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL42 DEL45 DEL42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL57 DEL4 DEL3 DEL32 DEL21 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL43 DEL42 DEL42 DEL42 DEL2 DEL42 DEL45 DEL9 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL45 DEL42 DEL42 DEL42 DEL33 DEL32 DEL32 DEL27 DEL42 DEL9 DEL7 DEL21 DEL10 DEL8 DEL25 DEL8 DEL24 DEL42 DEL38 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL8 DEL25 DEL8 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL45 DEL42 DEL42 DEL45 DEL32 DEL45 DEL42 DEL42 DEL45 DEL32 DEL45 DEL42 DEL42 DEL45 DEL32 DEL45 DEL42 DEL42 DEL45 DEL32 DEL45 DEL27 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL32 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL25 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8 DEL25 DEL8 DEL31