[MNG-6168] Fix unclosed streams

-import org.codehaus.plexus.util.IOUtil;
+
+import java.io.InputStream;
-
-        FileInputStream fis = null;
-
-                        fis = new FileInputStream( metadata.getFile() );
-                        org.apache.maven.artifact.repository.metadata.Metadata m =
-                            new MetadataXpp3Reader().read( fis, false );
-                        versioning = m.getVersioning();
-
-                        /*
-                         * NOTE: Users occasionally misuse the id "local" for remote repos which screws up the metadata
-                         * of the local repository. This is especially troublesome during snapshot resolution so we try
-                         * to handle that gracefully.
-                         */
-                        if ( versioning != null && repository instanceof LocalRepository )
+                        try ( final InputStream in = new FileInputStream( metadata.getFile() ) )
-                            if ( versioning.getSnapshot() != null && versioning.getSnapshot().getBuildNumber() > 0 )
-                            {
-                                Versioning repaired = new Versioning();
-                                repaired.setLastUpdated( versioning.getLastUpdated() );
-                                Snapshot snapshot = new Snapshot();
-                                snapshot.setLocalCopy( true );
-                                repaired.setSnapshot( snapshot );
-                                versioning = repaired;
+                            versioning = new MetadataXpp3Reader().read( in, false ).getVersioning();
+                            /*
+                            NOTE: Users occasionally misuse the id "local" for remote repos which screws up the metadata
+                            of the local repository. This is especially troublesome during snapshot resolution so we try
+                            to handle that gracefully.
+                             */
+                            if ( versioning != null && repository instanceof LocalRepository
+                                     && versioning.getSnapshot() != null
+                                     && versioning.getSnapshot().getBuildNumber() > 0 )
+                            {
+                                final Versioning repaired = new Versioning();
+                                repaired.setLastUpdated( versioning.getLastUpdated() );
+                                repaired.setSnapshot( new Snapshot() );
+                                repaired.getSnapshot().setLocalCopy( true );
+                                versioning = repaired;
+
-        finally
-        {
-            IOUtil.close( fis );
-        }

MOV26 UPD40 MOV8 MOV60 MOV41 MOV12 MOV27 INS8 INS54 MOV58 MOV8 MOV21 MOV27 INS8 INS54 INS58 MOV8 INS83 INS43 INS59 INS21 INS42 INS42 MOV14 INS7 INS42 INS32 INS27 MOV32 INS42 MOV27 MOV27 INS83 UPD42 UPD42 UPD42 MOV14 INS32 UPD42 INS9 MOV42 UPD42 MOV42 DEL42 DEL7 DEL21 DEL40 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL43 DEL42 DEL59 DEL60 DEL9 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL25 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8