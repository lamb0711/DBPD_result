o remove another set of methods from the repository system interface and now ResolutionGroup is gone from Maven internals.                      


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@751083 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.Dependency;
-
-        ResolutionGroup resolutionGroup;
-
-        try
-        {
-            resolutionGroup = repositorySystem.retrieve( pluginArtifact, localRepository, project.getRemoteArtifactRepositories() );
-        }
-        catch ( ArtifactMetadataRetrievalException e )
-        {
-            throw new ArtifactResolutionException( "Unable to download metadata from repository for plugin '" + pluginArtifact.getId() + "': " + e.getMessage(), pluginArtifact, e );
-        }
-
+        
+        
+        // This is really crappy that we have to do this. The repository system should deal with this. The retrieval of the transitive dependencies.
+        
+        List<Artifact> pluginArtifacts = new ArrayList<Artifact>();
+        
-            MavenProject pluginProject = mavenProjectBuilder.buildFromRepository( pluginArtifact, project.getRemoteArtifactRepositories(), localRepository );
-
+            Artifact pluginPomArtifact = repositorySystem.createProjectArtifact( pluginArtifact.getGroupId(), pluginArtifact.getArtifactId(), pluginArtifact.getVersion() );
+            
+            // This does not populate the artifacts of the dependenct projects
+            MavenProject pluginProject = mavenProjectBuilder.buildFromRepository( pluginPomArtifact, project.getRemoteArtifactRepositories(), localRepository );
+            
+            // This needs to be changed so that the resolver deals with this
+            for ( Dependency d : pluginProject.getDependencies() )
+            {
+                pluginArtifacts.add( repositorySystem.createArtifact( d.getGroupId(), d.getArtifactId(), d.getVersion(), d.getScope(), d.getType() ) );
+            }
+                        
-            // this can't happen, it would have blowed up at artifactMetadataSource.retrieve()
+            throw new InvalidPluginException( "Error resolving plugin POM " + e.getMessage() );
-        dependencies.addAll( resolutionGroup.getArtifacts() );
+        dependencies.addAll( pluginArtifacts );
-        String key = artifact.getDependencyConflictId();
-
-        // This takes the spec version and resolves a real version
-        try
-        {
-            ResolutionGroup resolutionGroup = repositorySystem.retrieve( artifact, localRepository, project.getRemoteArtifactRepositories() );
-
-            // switching this out with the actual resolved artifact instance, since the MMSource re-creates the pom
-            // artifact.
-            artifact = resolutionGroup.getPomArtifact();
-        }
-        catch ( ArtifactMetadataRetrievalException e )
-        {
-            throw new PluginVersionResolutionException( groupId, artifactId, e.getMessage(), e );
-        }
-
+                
+                

INS26 INS40 INS60 INS54 INS74 INS59 INS8 MOV12 INS43 INS43 INS42 INS14 INS60 MOV60 INS70 MOV25 UPD42 MOV42 UPD42 MOV42 INS42 INS74 INS43 INS59 INS44 INS32 INS8 INS53 INS43 INS43 UPD42 MOV42 INS42 INS32 INS43 INS42 INS42 INS42 INS21 INS14 INS42 INS42 INS42 INS42 INS32 INS32 INS32 UPD42 INS42 INS32 INS43 INS27 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS32 INS42 INS45 MOV32 INS42 INS42 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL32 DEL45 DEL32 DEL27 DEL42 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL54 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54