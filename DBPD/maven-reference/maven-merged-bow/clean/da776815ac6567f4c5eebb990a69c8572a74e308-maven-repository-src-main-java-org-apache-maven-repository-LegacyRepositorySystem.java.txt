o a test which demonstrates the difficulting in testing the execution of a single mojo, indicates some work to isolate the system and make it easier
  for people to reuse this code. igor had to jump through these same hoops to get isolated mojo execution working in m2e. needs some love.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@751582 13f79535-47bb-0310-9956-ffa450edef68

+import java.net.MalformedURLException;
-    
+
-     * @todo desperately needs refactoring. It's just here because it's implementation is maven-project specific
+     * @todo desperately needs refactoring. It's just here because it's implementation is
+     *       maven-project specific
-    public Set<Artifact> createArtifacts( List<Dependency> dependencies, String inheritedScope,
-                                          ArtifactFilter dependencyFilter, MavenRepositoryWrapper reactor )
+    public Set<Artifact> createArtifacts( List<Dependency> dependencies, String inheritedScope, ArtifactFilter dependencyFilter, MavenRepositoryWrapper reactor )
-    public static Set<Artifact> createArtifacts( ArtifactFactory artifactFactory,List<Dependency> dependencies, String inheritedScope, ArtifactFilter dependencyFilter, MavenRepositoryWrapper reactor )
+    public static Set<Artifact> createArtifacts( ArtifactFactory artifactFactory, List<Dependency> dependencies, String inheritedScope, ArtifactFilter dependencyFilter, MavenRepositoryWrapper reactor )
-            Artifact artifact = artifactFactory.createDependencyArtifact( d.getGroupId(), d.getArtifactId(),
-                                                                          versionRange, d.getType(), d.getClassifier(),
-                                                                          scope, inheritedScope, d.isOptional() );
+            Artifact artifact = artifactFactory.createDependencyArtifact( d.getGroupId(), d.getArtifactId(), versionRange, d.getType(), d.getClassifier(), scope, inheritedScope, d.isOptional() );
-    }    
-    
+    }
+
+    public ArtifactRepository createLocalRepository( File localRepository )
+        throws InvalidRepositoryException
+    {
+        try
+        {
+            return createRepository( localRepository.toURI().toURL().toString(), "maven.repo.local" );
+        }
+        catch ( MalformedURLException e )
+        {
+            throw new InvalidRepositoryException( "Error creating local repository.", "maven.repo.local", e );
+        }
+    }
+
-    {                        
+    {
-    public void addAuthenticationInfo( String repositoryId, String username, String password, String privateKey,
-                                       String passphrase )
+    public void addAuthenticationInfo( String repositoryId, String username, String password, String privateKey, String passphrase )
-    
+
-    
+
-    
+

INS26 INS40 INS31 INS83 INS43 INS42 INS44 INS43 INS8 INS42 INS43 INS42 INS42 INS54 UPD66 INS66 INS42 INS8 INS12 INS41 INS44 INS8 INS32 INS43 INS42 INS53 INS42 INS32 INS45 INS42 INS14 INS32 INS42 INS43 INS45 INS45 INS42 INS32 INS42 INS42 INS42 INS42