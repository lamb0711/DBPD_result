cache POMs within the reactor


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163571 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.HashSet;
-import java.util.Iterator;
+        // TODO: remove, then remove those null checks
-        Set artifacts;
-        Artifact metadataArtifact = artifactFactory.createArtifact( artifact.getGroupId(), artifact.getArtifactId(),
-                                                                    artifact.getVersion(), artifact.getScope(), "pom",
-                                                                    "pom", null );
-            artifactResolver.resolve( metadataArtifact, remoteRepositories, localRepository );
+            List dependencies = null;
-            // [jdcasey/03-Feb-2005]: Replacing with ProjectBuilder, to enable
-            // post-processing and inheritance calculation before retrieving the 
-            // associated artifacts. This should improve consistency.
-                MavenProject project = mavenProjectBuilder.build( metadataArtifact.getFile(), localRepository );
-                artifacts =
-                    artifactFactory.createArtifacts( project.getDependencies(), localRepository, artifact.getScope() );
+                MavenProject project = mavenProjectBuilder.getCachedProject( artifact.getGroupId(),
+                                                                             artifact.getArtifactId(),
+                                                                             artifact.getVersion() );
+                if ( project != null )
+                {
+                    dependencies = project.getDependencies();
+                }
-            else
+
+            if ( dependencies == null )
-                Model model = reader.read( new FileReader( metadataArtifact.getFile() ) );
-                artifacts =
-                    artifactFactory.createArtifacts( model.getDependencies(), localRepository, artifact.getScope() );
+                Artifact metadataArtifact = artifactFactory.createArtifact( artifact.getGroupId(),
+                                                                            artifact.getArtifactId(),
+                                                                            artifact.getVersion(), artifact.getScope(),
+                                                                            "pom", "pom", null );
+
+                artifactResolver.resolve( metadataArtifact, remoteRepositories, localRepository );
+
+                // [jdcasey/03-Feb-2005]: Replacing with ProjectBuilder, to enable
+                // post-processing and inheritance calculation before retrieving the
+                // associated artifacts. This should improve consistency.
+                try
+                {
+                    if ( mavenProjectBuilder != null )
+                    {
+                        MavenProject p = mavenProjectBuilder.build( metadataArtifact.getFile(), localRepository );
+                        dependencies = p.getDependencies();
+                    }
+                    else
+                    {
+                        Model model = reader.read( new FileReader( metadataArtifact.getFile() ) );
+                        dependencies = model.getDependencies();
+                    }
+                }
+                catch ( Exception e )
+                {
+                    throw new ArtifactMetadataRetrievalException(
+                        "Cannot read artifact source: " + metadataArtifact.getPath(), e );
+                }
+            return artifactFactory.createArtifacts( dependencies, localRepository, artifact.getScope() );
-        catch ( Exception e )
-        {
-            throw new ArtifactMetadataRetrievalException( "Cannot read artifact source: " + metadataArtifact.getPath(),
-                                                          e );
-        }
-        return artifacts;

INS8 INS54 INS8 MOV12 INS60 INS25 INS25 INS41 INS43 INS59 INS27 INS8 INS27 MOV8 INS32 INS42 INS42 INS33 INS42 INS33 INS60 INS25 INS42 INS33 MOV21 INS42 INS42 INS42 INS42 MOV32 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS32 INS32 INS32 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 UPD42 UPD42 INS32 UPD42 MOV32 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL41