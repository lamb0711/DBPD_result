Fixes MNG-5663 - a regression introduced in 3.2.2 by MNG-5639 that prevents nested import POMs from resolving their dependencies.

The cuplrit was the resetRepositories method in tandem with the repository
list instances being shared between ModelResolvers.

- The copy constructor for the ModelResolvers now creates new lists.
- The resetRepositories method has been removed. Instead there is a
'replace' parameter on the addRepository method that allows the
ïœˆdesired parameter replacement of MNG-5639 to take place.

Signed-off-by: Jason van Zyl <jason@tesla.io>

+import com.google.common.base.Predicate;
+import com.google.common.collect.Iterables;
-        this.pomRepositories = original.pomRepositories;
+        this.pomRepositories = new ArrayList<RemoteRepository>(original.pomRepositories);
-        this.repositories = original.repositories;
+        this.repositories = new ArrayList<RemoteRepository>(original.repositories);
-        if ( !repositoryIds.add( repository.getId() ) )
-        {
-            return;
+         addRepository( repository, false );
+    }
+
+    @Override
+    public void addRepository(final Repository repository, boolean replace) throws InvalidRepositoryException {
+        if ( !repositoryIds.add( repository.getId() ) ) {
+            if ( !replace ) {
+                return;
+            }
+
+            //Remove any previous repository with this Id
+            removeMatchingRepository(repositories, repository.getId());
+            removeMatchingRepository(pomRepositories, repository.getId());
-    @Override
-    public void resetRepositories()
-    {
-        this.repositoryIds.clear();
-        this.pomRepositories.clear();
-        this.repositories.clear();
-        this.repositories.addAll(externalRepositories);
+    private static void removeMatchingRepository(Iterable<RemoteRepository> repositories, final String id) {
+        Iterables.removeIf(repositories, new Predicate<RemoteRepository>() {
+            @Override
+            public boolean apply(RemoteRepository remoteRepository) {
+                return remoteRepository.getId().equals(id);
+            }
+        });

INS26 INS26 INS40 INS40 INS31 INS31 MOV83 MOV39 UPD42 MOV42 MOV44 INS43 INS8 MOV78 INS44 INS44 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS42 MOV21 INS83 INS43 INS42 INS39 INS42 INS74 INS42 INS83 INS43 INS42 MOV21 INS42 INS8 INS43 INS43 INS42 INS14 INS14 INS42 UPD42 INS9 INS25 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS14 INS74 INS40 INS74 INS40 INS38 MOV8 INS32 INS32 INS74 INS1 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS43 INS31 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS78 INS83 INS39 INS42 INS44 INS8 INS42 INS43 INS42 INS41 INS42 INS32 INS32 INS42 INS42 INS42 INS42 DEL40 DEL40 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL21 DEL52 DEL42 DEL22 DEL42 DEL32 DEL21 DEL8 DEL31