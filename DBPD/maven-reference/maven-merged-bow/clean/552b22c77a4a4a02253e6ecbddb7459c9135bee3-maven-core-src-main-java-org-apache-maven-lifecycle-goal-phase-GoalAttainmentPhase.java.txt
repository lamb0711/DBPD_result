o the first phase of merging plugin configuration as defined in the POM
  with defaults and user defined values.

  After a chat with emmanuel we decided that we would allow for plugin
  wide configuration and mojo/goal specific configuration with the more
  specific mojo/goal configuration winning in the event a parameter is
  defined in both places. Currently only plugin wide parameters are
  being considered: I still need to update the model for mojo/goal
  specific parameters and then update the parameter merging code.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163181 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.project.MavenProject;
+import org.codehaus.plexus.util.CollectionUtils;
-                // ----------------------------------------------------------------------
-                // We will perform a basic check here for parameters values that are
-                // required. Required parameters can't be null so we throw an
-                // Exception in the case where they are. We probably want some pluggable
-                // mechanism here but this will catch the most obvious of
-                // misconfigurations.
-                // ----------------------------------------------------------------------
-
-                if ( value == null && parameter.isRequired() )
-                {
-                    throw new PluginConfigurationException( createPluginParameterRequiredMessage( goal, parameter ) );
-                }
-
+
+            map = mergeProjectDefinedPluginConfiguration( context.getProject(), goal.getId(), map );
+        }
+
+        for ( int i = 0; i < parameters.size(); i++ )
+        {
+            Parameter parameter = (Parameter) parameters.get( i );
+
+            String key = parameter.getName();
+
+            Object value = map.get( key );
+
+            // ----------------------------------------------------------------------
+            // We will perform a basic check here for parameters values that are
+            // required. Required parameters can't be null so we throw an
+            // Exception in the case where they are. We probably want some pluggable
+            // mechanism here but this will catch the most obvious of
+            // misconfigurations.
+            // ----------------------------------------------------------------------
+
+            if ( value == null && parameter.isRequired() )
+            {
+                throw new PluginConfigurationException( createPluginParameterRequiredMessage( goal, parameter ) );
+            }
+        }
+
+        return map;
+    }
+
+    private Map mergeProjectDefinedPluginConfiguration( MavenProject project, String goalId, Map map )
+    {
+        // ----------------------------------------------------------------------
+        // I would like to be able to lookup the Plugin object using a key but
+        // we have a limitation in modello that will be remedied shortly. So
+        // for now I have to iterate through and see what we have.
+        // ----------------------------------------------------------------------
+
+        if ( project.getPlugins() != null )
+        {
+            String pluginId = goalId.substring( 0, goalId.indexOf( ":" ) );
+
+            for ( Iterator iterator = project.getPlugins().iterator(); iterator.hasNext(); )
+            {
+                org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) iterator.next();
+
+                if ( pluginId.equals( plugin.getId() ) )
+                {
+                    return CollectionUtils.mergeMaps( plugin.getConfiguration(), map );
+                }
+            }
-                append( "' parameter is required for the execution of the " ).
-                append( mojo.getId() ).
-                append( " mojo and cannot be null." );
+            append( "' parameter is required for the execution of the " ).
+            append( mojo.getId() ).
+            append( " mojo and cannot be null." );

INS26 INS26 INS40 INS40 INS31 INS83 INS43 INS42 INS44 INS44 INS44 INS8 INS24 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS25 INS41 INS58 INS27 INS37 INS8 INS42 INS42 INS42 INS27 INS8 INS42 INS21 INS39 INS59 INS42 INS32 INS42 INS60 INS60 INS60 MOV25 INS32 INS33 INS60 INS24 INS7 INS42 INS34 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS42 INS42 INS43 INS59 INS58 INS32 INS8 INS42 INS32 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS59 INS42 INS42 INS60 INS25 INS42 INS32 INS32 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS32 INS42 INS42 INS32 INS43 INS59 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS40 INS42 INS11 INS42 INS42 INS32 INS41 INS42 INS42 INS43 INS32 INS42 INS42 INS32 INS40 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42