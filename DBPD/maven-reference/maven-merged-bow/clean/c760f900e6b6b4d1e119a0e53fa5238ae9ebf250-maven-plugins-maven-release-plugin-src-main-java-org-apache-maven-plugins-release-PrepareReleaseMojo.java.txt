cleanup tags, and only use batch mode when it was what was originally used to run maven

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@314814 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
-import java.io.FileWriter;
-import java.io.IOException;
-import java.io.Writer;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Properties;
-import java.util.Set;
-
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.io.Writer;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Properties;
+import java.util.Set;
+
-     * @component role="org.apache.maven.artifact.metadata.ArtifactMetadataSource"
+     * @component
-     * @component role="org.apache.maven.plugin.version.PluginVersionManager"
+     * @component
-                    getReleaseProgress().checkpoint( basedir.getAbsolutePath(), ReleaseProgressTracker.CP_POM_TRANSFORMED_FOR_RELEASE );
+                    getReleaseProgress().checkpoint( basedir.getAbsolutePath(),
+                                                     ReleaseProgressTracker.CP_POM_TRANSFORMED_FOR_RELEASE );
-                getReleaseProgress().checkpoint( basedir.getAbsolutePath(), ReleaseProgressTracker.CP_PREPARED_RELEASE );
+                getReleaseProgress().checkpoint( basedir.getAbsolutePath(),
+                                                 ReleaseProgressTracker.CP_PREPARED_RELEASE );
-                getLog().warn( "Cannot read existing release progress file from directory: " + basedir.getAbsolutePath() + "." );
+                getLog().warn(
+                    "Cannot read existing release progress file from directory: " + basedir.getAbsolutePath() + "." );
-                getReleaseProgress().checkpoint( basedir.getAbsolutePath(), ReleaseProgressTracker.CP_LOCAL_MODIFICATIONS_CHECKED );
+                getReleaseProgress().checkpoint( basedir.getAbsolutePath(),
+                                                 ReleaseProgressTracker.CP_LOCAL_MODIFICATIONS_CHECKED );
-            String artifactVersion = getVersionResolver().getResolvedVersion( artifact.getGroupId(),
-                                                                              artifact.getArtifactId() );
+            String artifactVersion =
+                getVersionResolver().getResolvedVersion( artifact.getGroupId(), artifact.getArtifactId() );
-            String artifactVersion = getVersionResolver().getResolvedVersion( artifact.getGroupId(),
-                                                                              artifact.getArtifactId() );
+            String artifactVersion =
+                getVersionResolver().getResolvedVersion( artifact.getGroupId(), artifact.getArtifactId() );
-                    String resolvedVersion = getVersionResolver().getResolvedVersion( dep.getGroupId(),
-                                                                                      dep.getArtifactId() );
+                    String resolvedVersion =
+                        getVersionResolver().getResolvedVersion( dep.getGroupId(), dep.getArtifactId() );
-                    String resolvedVersion = getVersionResolver().getResolvedVersion( dep.getGroupId(),
-                                                                                      dep.getArtifactId() );
+                    String resolvedVersion =
+                        getVersionResolver().getResolvedVersion( dep.getGroupId(), dep.getArtifactId() );
-                        String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),
-                                                                                          plugin.getArtifactId() );
+                        String resolvedVersion =
+                            getVersionResolver().getResolvedVersion( plugin.getGroupId(), plugin.getArtifactId() );
-                        String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),
-                                                                                          plugin.getArtifactId() );
+                        String resolvedVersion =
+                            getVersionResolver().getResolvedVersion( plugin.getGroupId(), plugin.getArtifactId() );
-                String resolvedVersion = getVersionResolver().getResolvedVersion( ext.getGroupId(),
-                                                                                  ext.getArtifactId() );
+                String resolvedVersion =
+                    getVersionResolver().getResolvedVersion( ext.getGroupId(), ext.getArtifactId() );
-                String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),
-                                                                                  plugin.getArtifactId() );
+                String resolvedVersion =
+                    getVersionResolver().getResolvedVersion( plugin.getGroupId(), plugin.getArtifactId() );
-                    projectVersion = getVersionResolver().getResolvedVersion( project.getGroupId(),
-                                                                              project.getArtifactId() );
+                    projectVersion =
+                        getVersionResolver().getResolvedVersion( project.getGroupId(), project.getArtifactId() );
-                        String version = resolveVersion( artifact, "extension",
-                                                         releaseProject.getPluginArtifactRepositories() );
+                        String version =
+                            resolveVersion( artifact, "extension", releaseProject.getPluginArtifactRepositories() );
-                    getReleaseProgress().checkpoint( basedir.getAbsolutePath(), ReleaseProgressTracker.CP_GENERATED_RELEASE_POM );
+                    getReleaseProgress().checkpoint( basedir.getAbsolutePath(),
+                                                     ReleaseProgressTracker.CP_GENERATED_RELEASE_POM );
-        String resolvedVersion = getVersionResolver().getResolvedVersion( artifact.getGroupId(),
-                                                                          artifact.getArtifactId() );
+        String resolvedVersion =
+            getVersionResolver().getResolvedVersion( artifact.getGroupId(), artifact.getArtifactId() );
-                getReleaseProgress().checkpoint( basedir.getAbsolutePath(), ReleaseProgressTracker.CP_CHECKED_IN_RELEASE_VERSION );
+                getReleaseProgress().checkpoint( basedir.getAbsolutePath(),
+                                                 ReleaseProgressTracker.CP_CHECKED_IN_RELEASE_VERSION );
-                getReleaseProgress().checkpoint( basedir.getAbsolutePath(), ReleaseProgressTracker.CP_REMOVED_RELEASE_POM );
+                getReleaseProgress().checkpoint( basedir.getAbsolutePath(),
+                                                 ReleaseProgressTracker.CP_REMOVED_RELEASE_POM );
-                getReleaseProgress().checkpoint( basedir.getAbsolutePath(), ReleaseProgressTracker.CP_CHECKED_IN_DEVELOPMENT_VERSION );
+                getReleaseProgress().checkpoint( basedir.getAbsolutePath(),
+                                                 ReleaseProgressTracker.CP_CHECKED_IN_DEVELOPMENT_VERSION );

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 DEL66 DEL66