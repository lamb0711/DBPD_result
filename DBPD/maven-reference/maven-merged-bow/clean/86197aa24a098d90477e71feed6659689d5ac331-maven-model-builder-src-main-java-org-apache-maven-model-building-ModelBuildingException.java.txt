[MNG-5073] ProjectBuilder.build(File,ProjectBuildingRequest) returns null project if dependency version info is missing

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1176414 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.ArrayList;
+import java.util.Collections;
-    private final Model model;
-
-    private final String modelId;
-
-    private final List<ModelProblem> problems;
+    private final ModelBuildingResult result;
+     * @deprecated Use {@link #ModelBuildingException(ModelBuildingResult)} instead.
+    @Deprecated
-        this.model = model;
-        this.modelId = ( modelId != null ) ? modelId : "";
-
-        this.problems = new ArrayList<ModelProblem>();
-        if ( problems != null )
+        if ( model != null )
-            this.problems.addAll( problems );
+            DefaultModelBuildingResult tmp = new DefaultModelBuildingResult();
+            if ( modelId == null )
+            {
+                modelId = "";
+            }
+            tmp.addModelId( modelId );
+            tmp.setRawModel( modelId, model );
+            tmp.setProblems( problems );
+            result = tmp;
+        else
+        {
+            result = null;
+        }
+    }
+
+    /**
+     * Creates a new exception from the specified interim result and its associated problems.
+     * 
+     * @param result The interim result, may be {@code null}.
+     */
+    public ModelBuildingException( ModelBuildingResult result )
+    {
+        super( toMessage( result ) );
+        this.result = result;
+    }
+
+    /**
+     * Gets the interim result of the model building up to the point where it failed.
+     * 
+     * @return The interim model building result or {@code null} if not available.
+     */
+    public ModelBuildingResult getResult()
+    {
+        return result;
-        return model;
+        if ( result == null )
+        {
+            return null;
+        }
+        if ( result.getEffectiveModel() != null )
+        {
+            return result.getEffectiveModel();
+        }
+        return result.getRawModel();
-        return modelId;
+        if ( result == null || result.getModelIds().isEmpty() )
+        {
+            return "";
+        }
+        return result.getModelIds().get( 0 );
-        return problems;
+        if ( result == null )
+        {
+            return Collections.emptyList();
+        }
+        return result.getProblems();
+    }
+
+    private static String toMessage( ModelBuildingResult result )
+    {
+        if ( result != null && !result.getModelIds().isEmpty() )
+        {
+            return toMessage( result.getModelIds().get( 0 ), result.getProblems() );
+        }
+        return null;

MOV31 UPD40 INS31 INS31 INS31 INS31 UPD43 MOV29 INS78 INS83 INS42 MOV44 MOV44 MOV44 INS8 INS29 INS83 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS8 MOV29 INS83 MOV43 INS42 INS8 INS83 UPD83 MOV43 INS42 INS44 INS8 UPD42 UPD42 INS65 INS42 MOV46 INS25 INS65 INS65 INS43 INS42 INS46 MOV21 INS65 INS65 INS42 INS41 INS25 MOV25 INS41 INS25 INS25 INS43 INS42 INS25 INS41 INS66 INS65 INS66 INS27 INS8 INS8 INS66 INS42 INS66 INS65 INS66 INS42 INS32 INS66 INS66 INS65 INS66 INS42 INS27 INS8 INS32 INS27 INS8 INS32 INS27 INS8 INS32 INS42 INS27 INS8 INS33 INS68 INS42 INS33 INS60 INS25 INS21 INS21 INS21 MOV21 MOV21 INS66 INS42 INS42 INS42 INS66 INS42 INS33 INS41 INS32 INS41 INS42 INS42 INS27 INS32 INS41 INS32 INS42 INS34 INS42 INS33 INS41 INS42 INS42 INS27 INS38 MOV41 INS42 INS69 INS43 INS59 INS27 INS8 INS32 INS32 INS32 UPD42 INS33 INS42 INS42 INS32 INS42 INS33 INS32 INS42 INS45 INS42 INS42 INS32 INS42 INS33 INS32 INS32 INS43 UPD42 MOV42 INS42 INS14 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS33 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS43 INS7 INS42 INS42 INS32 INS42 INS34 INS42 INS42 UPD42 MOV42 INS42 INS45 INS42 INS42 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL33 DEL27 DEL36 DEL42 DEL45 DEL16 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL21 DEL83 DEL83 DEL42 DEL59 DEL23 DEL83 DEL83 DEL43 DEL43 DEL74 DEL42 DEL59 DEL23 DEL83 DEL42 DEL8 DEL31 DEL42 DEL42 DEL42 DEL42 DEL8