[MNG-3885] [MNG-4009] : Fixed problem of profile info in parents not being applied.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@741282 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.profiles.activation.ProfileActivationContext;
+import org.apache.maven.project.builder.profile.ProfileContext;
+import org.apache.maven.project.builder.profile.ProfileUri;
-        return buildModel( pom, null, interpolatorProperties, resolver );        
+        return buildModel( pom, null, interpolatorProperties, null, resolver );
-    public PomClassicDomainModel buildModel( File pom, 
+    private PomClassicDomainModel buildModel( File pom,
+                                             Collection<String> activeProfileIds,
+        if(activeProfileIds == null)
+        {
+            activeProfileIds = new ArrayList<String>();
+        }
+
+        ProfileContext profileContext = new ProfileContext(new DefaultModelDataSource(domainModel.getModelProperties(),
+                PomTransformer.MODEL_CONTAINER_FACTORIES), activeProfileIds, properties);
+        Collection<ModelContainer> profileContainers = profileContext.getActiveProfiles();
+        //get mixin
+
-                mavenParents = getDomainModelParentsFromLocalPath( domainModel, resolver, pom.getParentFile() );
+                mavenParents = getDomainModelParentsFromLocalPath( domainModel, resolver, pom.getParentFile(), properties, activeProfileIds );
-                mavenParents = getDomainModelParentsFromRepository( domainModel, resolver );
+                mavenParents = getDomainModelParentsFromRepository( domainModel, resolver, properties, activeProfileIds );
+
+       List<String> profileIds = (projectBuilderConfiguration != null &&
+                projectBuilderConfiguration.getGlobalProfileManager() != null &&
+                projectBuilderConfiguration.getGlobalProfileManager().getProfileActivationContext() != null) ?
+               projectBuilderConfiguration.getGlobalProfileManager().getProfileActivationContext().getExplicitlyActiveProfileIds() : new ArrayList<String>();
+
+
-                                                        interpolatorProperties, 
+                                                        interpolatorProperties,
+                                                        profileIds,
-                                                                   PomArtifactResolver artifactResolver )
+                                                                   PomArtifactResolver artifactResolver,
+                                                                   List<InterpolatorProperty> properties,
+                                                                   Collection<String> activeProfileIds)
-        domainModels.addAll( getDomainModelParentsFromRepository( parentDomainModel, artifactResolver ) );
+
+         ProfileContext profileContext = new ProfileContext(new DefaultModelDataSource(parentDomainModel.getModelProperties(),
+                PomTransformer.MODEL_CONTAINER_FACTORIES), activeProfileIds, properties);
+        Collection<ModelContainer> profileContainers = profileContext.getActiveProfiles();
+
+        for(ModelContainer mc : profileContainers)
+        {
+            List<ModelProperty> transformed = new ArrayList<ModelProperty>();
+            transformed.add(new ModelProperty(ProjectUri.xUri, null));
+            for(ModelProperty mp : mc.getProperties())
+            {
+                if(mp.getUri().startsWith(ProjectUri.Profiles.Profile.xUri) && !mp.getUri().equals(ProjectUri.Profiles.Profile.id)
+                        && !mp.getUri().startsWith(ProjectUri.Profiles.Profile.Activation.xUri) )
+                {
+                    transformed.add(new ModelProperty(mp.getUri().replace(ProjectUri.Profiles.Profile.xUri, ProjectUri.xUri),
+                            mp.getResolvedValue()));
+                }
+            }
+
+            domainModels.add(new PomClassicDomainModel(transformed));
+        }        
+
+        domainModels.addAll( getDomainModelParentsFromRepository( parentDomainModel, artifactResolver, properties, activeProfileIds ) );
-                                                                  File projectDirectory )
+                                                                  File projectDirectory,
+                                                                  List<InterpolatorProperty> properties,
+                                                                  Collection<String> activeProfileIds)
+         ProfileContext profileContext = new ProfileContext(new DefaultModelDataSource(parentDomainModel.getModelProperties(),
+                PomTransformer.MODEL_CONTAINER_FACTORIES), activeProfileIds, properties);
+        Collection<ModelContainer> profileContainers = profileContext.getActiveProfiles();
+
+        for(ModelContainer mc : profileContainers)
+        {
+            List<ModelProperty> transformed = new ArrayList<ModelProperty>();
+            transformed.add(new ModelProperty(ProjectUri.xUri, null));
+            for(ModelProperty mp : mc.getProperties())
+            {
+                if(mp.getUri().startsWith(ProjectUri.Profiles.Profile.xUri) && !mp.getUri().equals(ProjectUri.Profiles.Profile.id)
+                    && !mp.getUri().startsWith(ProjectUri.Profiles.Profile.Activation.xUri))
+                {
+                    transformed.add(new ModelProperty(mp.getUri().replace(ProjectUri.Profiles.Profile.xUri, ProjectUri.xUri),
+                            mp.getResolvedValue()));
+                }
+            }
+            domainModels.add(new PomClassicDomainModel(transformed));
+        }
-            List<DomainModel> parentDomainModels = getDomainModelParentsFromRepository( domainModel, artifactResolver );
+            List<DomainModel> parentDomainModels = getDomainModelParentsFromRepository( domainModel, artifactResolver, properties, activeProfileIds );
-                                                                         parentFile.getParentFile() ) );
+                                                                         parentFile.getParentFile(), properties, activeProfileIds ) );
-                domainModels.addAll( getDomainModelParentsFromRepository( parentDomainModel, artifactResolver ) );
+                domainModels.addAll( getDomainModelParentsFromRepository( parentDomainModel, artifactResolver, properties, activeProfileIds ) );

INS26 INS26 INS26 INS40 INS40 INS40 UPD83 INS44 INS44 INS44 INS44 INS44 INS74 INS42 INS25 INS60 INS60 INS60 INS74 INS42 INS74 INS42 INS60 INS60 INS70 INS74 INS42 INS74 INS42 INS60 INS60 INS70 INS43 INS43 INS27 INS8 INS43 INS59 INS74 INS59 INS74 INS59 INS43 INS43 INS43 INS43 INS43 INS59 INS74 INS59 INS44 INS42 INS8 INS43 INS43 INS43 INS43 INS43 INS59 INS74 INS59 INS44 INS42 INS8 INS33 INS42 INS42 INS42 INS33 INS21 INS42 INS42 INS14 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS16 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS43 INS43 INS42 INS32 INS43 INS42 INS60 INS21 INS70 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS43 INS43 INS42 INS32 INS43 INS42 INS60 INS21 INS70 INS21 INS7 INS43 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS36 INS32 INS14 INS42 INS43 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS32 INS44 INS32 INS8 INS32 INS42 INS42 INS43 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS32 INS44 INS32 INS8 INS32 INS42 INS14 INS42 INS43 INS32 INS40 INS27 INS32 INS42 INS74 INS42 INS43 INS32 INS40 INS43 INS43 INS42 INS14 INS42 INS42 INS14 INS43 INS42 INS42 INS42 INS25 INS42 INS42 INS14 INS42 INS43 INS32 INS40 INS43 INS43 INS42 INS14 INS42 INS42 INS14 INS43 INS42 INS42 INS42 INS25 INS42 INS42 INS14 INS74 INS42 INS42 INS42 INS27 INS27 INS32 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS74 INS43 INS40 INS33 INS42 INS27 INS8 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS43 INS40 INS33 INS42 INS27 INS8 INS43 INS42 INS42 INS42 INS43 INS43 INS27 INS27 INS32 INS33 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS38 INS38 INS21 INS42 INS43 INS43 INS42 INS32 INS38 INS38 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS33 INS32 INS42 INS42 INS42 INS32 INS42 INS40 INS32 INS32 INS32 INS42 INS42 INS32 INS42 INS40 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS40 INS32 INS42 INS40 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS40 INS32 INS42 INS40 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS43 INS32 INS32 INS42 INS42 INS42 INS42 INS43 INS32 INS32 INS42 INS32 INS42 INS40 INS40 INS42 INS42 INS42 INS32 INS42 INS40 INS40 INS42 INS42 INS42 INS42 INS42 INS42