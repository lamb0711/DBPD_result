Fixing MNG-478: "war:war warSourceExcludes parameter not used when set in the
                POM".
Patch created by Greg Case, thanks for your work!


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@233048 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.util.DirectoryScanner;
-     * @todo Convert to File
-    private String classesDirectory;
+    private File classesDirectory;
-     * @todo Convert to File
-    private String webappDirectory;
+    private File webappDirectory;
-     * @todo Convert to File
-    private String warSourceDirectory;
+    private File warSourceDirectory;
-    public void copyResources( File sourceDirectory, File webappDirectory, String includes, String excludes,
-                               String webXml )
+    public void copyResources( File sourceDirectory, File webappDirectory, String webXml )
-            if ( new File( warSourceDirectory ).exists() )
+            if ( warSourceDirectory.exists() )
-                //TODO : Use includes and excludes
-                FileUtils.copyDirectoryStructure( sourceDirectory, webappDirectory );
+                String[] fileNames = getWarFiles( sourceDirectory );
+                for (int i = 0; i < fileNames.length; i++)
+                {
+                    FileUtils.copyFile(new File( sourceDirectory, fileNames[i] ), new File( webappDirectory, fileNames[i] ) );
+                }
-                FileUtils.copyFileToDirectory( new File( webXml ), new File( webappDirectory, WEB_INF ) );
+                //rename to web.xml
+                File webinfDir = new File( webappDirectory, WEB_INF );
+                FileUtils.copyFile( new File( webXml ), new File( webinfDir, "/web.xml" ) );
-        File classesDirectory = new File( this.classesDirectory );
-        File webappDirectory = new File( this.webappDirectory );
-        copyResources( new File( warSourceDirectory ), webappDirectory, warSourceIncludes, warSourceExcludes, webXml );
+        copyResources( warSourceDirectory, webappDirectory, webXml );
-                String[] excludes = (String[]) getDefaultExcludes().toArray( EMPTY_STRING_ARRAY );
-                warArchiver.addDirectory( new File( webappDirectory ), null, excludes );
+                warArchiver.addDirectory( webappDirectory, getIncludes(), getExcludes() );
-        // Special one for WARs
-        defaultExcludes.add( "**/" + WEB_INF + "/web.xml" );
+        // Windows Thumbs
+        defaultExcludes.add( "**/Thumbs.db" );
+
+    /**
+     * Returns a list of filenames that should be copied over to the destination
+     * directory
+     *
+     * @param sourceDir the directory to be scanned
+     * @return the array of filenames, relative to the sourceDir
+     */
+    private String[] getWarFiles( File sourceDir )
+    {
+        DirectoryScanner scanner = new DirectoryScanner();
+        scanner.setBasedir( sourceDir );
+        scanner.setExcludes( getExcludes() );
+        scanner.addDefaultExcludes();
+
+        scanner.setIncludes( getIncludes() );
+
+        scanner.scan();
+
+        return scanner.getIncludedFiles();
+    }
+
+    /**
+     * Returns an a string array of the excludes to be used when assembling/copy the war
+     */
+    private String[] getExcludes()
+    {
+        List excludeList = getDefaultExcludes();
+        if ( warSourceExcludes != null && !"".equals( warSourceExcludes ) )
+        {
+            excludeList.add( warSourceExcludes );
+        }
+
+        // if webXML is specified, omit the one in the source directory
+        if ( webXml != null && !"".equals( webXml ) )
+        {
+            excludeList.add( "**/" + WEB_INF + "/web.xml" );
+        }
+
+        return (String[]) excludeList.toArray( EMPTY_STRING_ARRAY );
+    }
+
+    /**
+     * Returns an a string array of the includes to be used when assembling/copy the
+     * war
+     */
+    private String[] getIncludes()
+    {
+        return new String[] { warSourceIncludes };
+    }

INS26 INS40 INS23 INS31 INS31 INS31 INS29 INS83 MOV43 MOV59 MOV43 UPD43 INS29 INS83 INS5 INS42 INS44 INS8 INS29 INS83 INS5 INS42 INS8 INS29 INS83 INS5 INS42 INS8 MOV65 INS65 INS65 UPD42 MOV42 MOV42 INS21 UPD65 MOV65 UPD65 MOV65 UPD65 MOV65 INS43 INS85 MOV43 INS42 INS60 INS21 INS21 INS21 INS21 INS21 INS41 INS65 INS43 INS85 INS60 INS25 INS25 INS41 INS65 INS43 INS85 INS41 INS32 UPD66 INS66 INS42 INS66 INS66 MOV42 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS66 INS42 INS43 INS59 INS27 INS8 INS27 INS8 MOV11 INS66 INS66 INS42 INS3 INS42 INS42 INS42 INS45 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS27 INS38 INS21 INS27 INS38 MOV21 MOV5 INS4 INS8 INS43 INS42 INS42 INS42 INS33 INS32 INS32 INS42 INS33 INS32 INS42 INS42 INS42 INS60 INS24 INS60 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 UPD42 INS5 INS59 INS58 INS27 INS37 INS8 INS43 INS59 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 MOV21 INS42 INS42 INS14 UPD42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS34 INS43 INS42 INS42 MOV43 UPD42 INS45 INS42 UPD42 MOV42 UPD42 INS14 INS14 INS42 MOV43 INS42 INS2 MOV43 INS42 INS2 INS42 INS42 INS42 INS42 DEL29 DEL83 DEL43 DEL23 DEL66 DEL65 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL14 DEL42 DEL42 DEL8 DEL42 DEL42 DEL52 DEL42 DEL22 DEL14 DEL59 DEL60 DEL42 DEL52 DEL42 DEL22 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL14 DEL42 DEL42 DEL42 DEL59 DEL60 DEL42 DEL14 DEL33