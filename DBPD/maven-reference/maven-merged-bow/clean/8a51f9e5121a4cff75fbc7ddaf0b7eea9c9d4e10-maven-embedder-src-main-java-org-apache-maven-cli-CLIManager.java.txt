[MNG-5681] Properties on command line with leading or trailing quotes are stripped
Refactored out cleanArgs method from CLIManager into separate class
and added appropriate tests which proves the solution
of the issue.

-import java.util.ArrayList;
-import java.util.List;
-        String[] cleanArgs = cleanArgs( args );
+        String[] cleanArgs = CleanArgument.cleanArgs( args );
-    private String[] cleanArgs( String[] args )
-    {
-        List<String> cleaned = new ArrayList<>();
-
-        StringBuilder currentArg = null;
-
-        for ( String arg : args )
-        {
-            boolean addedToBuffer = false;
-
-            if ( arg.startsWith( "\"" ) )
-            {
-                // if we're in the process of building up another arg, push it and start over.
-                // this is for the case: "-Dfoo=bar "-Dfoo2=bar two" (note the first unterminated quote)
-                if ( currentArg != null )
-                {
-                    cleaned.add( currentArg.toString() );
-                }
-
-                // start building an argument here.
-                currentArg = new StringBuilder( arg.substring( 1 ) );
-                addedToBuffer = true;
-            }
-
-            // this has to be a separate "if" statement, to capture the case of: "-Dfoo=bar"
-            if ( arg.endsWith( "\"" ) )
-            {
-                String cleanArgPart = arg.substring( 0, arg.length() - 1 );
-
-                // if we're building an argument, keep doing so.
-                if ( currentArg != null )
-                {
-                    // if this is the case of "-Dfoo=bar", then we need to adjust the buffer.
-                    if ( addedToBuffer )
-                    {
-                        currentArg.setLength( currentArg.length() - 1 );
-                    }
-                    // otherwise, we trim the trailing " and append to the buffer.
-                    else
-                    {
-                        // TODO: introducing a space here...not sure what else to do but collapse whitespace
-                        currentArg.append( ' ' ).append( cleanArgPart );
-                    }
-
-                    cleaned.add( currentArg.toString() );
-                }
-                else
-                {
-                    cleaned.add( cleanArgPart );
-                }
-
-                currentArg = null;
-
-                continue;
-            }
-
-            // if we haven't added this arg to the buffer, and we ARE building an argument
-            // buffer, then append it with a preceding space...again, not sure what else to
-            // do other than collapse whitespace.
-            // NOTE: The case of a trailing quote is handled by nullifying the arg buffer.
-            if ( !addedToBuffer )
-            {
-                if ( currentArg != null )
-                {
-                    currentArg.append( ' ' ).append( arg );
-                }
-                else
-                {
-                    cleaned.add( arg );
-                }
-            }
-        }
-
-        if ( currentArg != null )
-        {
-            cleaned.add( currentArg.toString() );
-        }
-
-        int cleanedSz = cleaned.size();
-
-        String[] cleanArgs;
-
-        if ( cleanedSz == 0 )
-        {
-            cleanArgs = args;
-        }
-        else
-        {
-            cleanArgs = cleaned.toArray( new String[cleanedSz] );
-        }
-
-        return cleanArgs;
-    }
-

INS42 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL43 DEL42 DEL42 DEL34 DEL32 DEL14 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL45 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL34 DEL42 DEL42 DEL32 DEL34 DEL27 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL34 DEL27 DEL32 DEL21 DEL8 DEL42 DEL42 DEL13 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL33 DEL7 DEL21 DEL18 DEL8 DEL25 DEL42 DEL38 DEL42 DEL33 DEL27 DEL42 DEL42 DEL13 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL70 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL85 DEL5 DEL42 DEL59 DEL60 DEL42 DEL34 DEL27 DEL42 DEL42 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL3 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31