Adding more context information to existing exceptions, cleaning up construction in exceptions, and adjusting the inheritance hierarchy for exceptions to make them make a little more sense for error reporting. Also, adding improved (but not complete, yet) reporting for BuildFailureExceptions and ProjectBuildingExceptions, with some tests to make sure pertinent information is in the output.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@592859 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.InvalidTaskException;
+import org.apache.maven.plugin.loader.PluginLoaderException;
+
-    private Throwable cause;
-
+    private Throwable cause;
+
-    public TaskValidationResult( String invalidTask, String message )
+    public TaskValidationResult( String invalidTask,
+                                 String message,
+                                 PluginLoaderException cause )
-    }
-
-    public TaskValidationResult( String invalidTask, String message, Throwable cause )
-    {
-        this.message = message;
+    }
+
+    public TaskValidationResult( String invalidTask,
+                                 String message,
+                                 LifecycleSpecificationException cause )
+    {
+        this.message = message;
+        this.cause = cause;
+    }
+
+    public TaskValidationResult( String invalidTask,
+                                 String message,
+                                 LifecycleLoaderException cause )
+    {
+        this.invalidTask = invalidTask;
+        this.message = message;
+        this.cause = cause;
+
+    public InvalidTaskException generateInvalidTaskException()
+    {
+        InvalidTaskException e = null;
+        if ( cause instanceof LifecycleLoaderException )
+        {
+            e = new InvalidTaskException( this, (LifecycleLoaderException)cause );
+        }
+        else if ( cause instanceof LifecycleSpecificationException )
+        {
+            e = new InvalidTaskException( this, (LifecycleSpecificationException)cause );
+        }
+        else if ( cause instanceof PluginLoaderException )
+        {
+            e = new InvalidTaskException( this, (PluginLoaderException)cause );
+        }
+        else
+        {
+            throw new IllegalStateException( "No matching constructor in InvalidTaskException for TaskValidationResult cause: " + cause + " ( invalid task: " + invalidTask + ")" );
+        }
+
+        return e;
+    }

INS26 INS26 MOV23 INS40 INS40 INS31 INS31 INS44 MOV21 INS83 INS42 INS44 INS44 INS44 INS8 INS83 INS43 INS42 INS8 INS43 INS42 INS21 UPD43 INS43 INS42 INS43 INS42 INS43 INS42 INS21 INS21 INS21 INS42 INS60 INS25 INS41 INS42 INS7 UPD42 INS42 INS42 INS42 INS7 INS7 INS7 INS43 INS59 INS62 INS8 INS25 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS42 INS42 INS33 INS42 INS43 INS21 INS62 INS8 INS25 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS7 INS42 INS43 INS21 INS62 INS8 INS8 INS42 INS14 INS42 INS7 INS42 INS43 INS21 INS53 INS43 INS52 INS11 INS42 INS14 INS42 INS7 INS14 INS42 INS43 INS42 INS43 INS52 INS11 INS42 INS14 INS43 INS27 INS42 INS42 INS43 INS42 INS43 INS52 INS11 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS42 INS43 INS42 INS42