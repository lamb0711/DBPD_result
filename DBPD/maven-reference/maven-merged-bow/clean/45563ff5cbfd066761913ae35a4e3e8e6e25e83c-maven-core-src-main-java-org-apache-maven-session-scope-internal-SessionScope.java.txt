mechanism to carryover session scope seeds from one thread to another

Signed-off-by: Igor Fedorenko <ifedorenko@apache.org>

+import java.util.Collections;
+import com.google.common.collect.ImmutableMap;
+    /**
+     * @since 3.2.6
+     */
+    public static class Memento
+    {
+        final Map<Key<?>, Provider<?>> seeded;
+
+        Memento( final Map<Key<?>, Provider<?>> seeded )
+        {
+            this.seeded = ImmutableMap.copyOf( seeded );
+        }
+    }
+
+    /**
+     * @since 3.2.6
+     */
+    public void enter( Memento memento )
+    {
+        enter();
+        getScopeState().seeded.putAll( memento.seeded );
+    }
+
+    /**
+     * @since 3.2.6
+     */
+    public Memento memento()
+    {
+        LinkedList<ScopeState> stack = values.get();
+        return new Memento( stack != null ? stack.getFirst().seeded : Collections.<Key<?>, Provider<?>>emptyMap() );
+    }
+

INS26 INS26 INS40 INS40 INS55 INS31 INS31 INS29 INS83 INS83 INS42 INS23 INS31 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS8 INS65 INS83 INS74 INS59 INS42 INS44 INS8 INS65 INS43 INS42 INS21 INS21 INS65 INS42 INS60 INS41 INS66 INS43 INS74 INS74 INS42 INS83 INS74 INS42 INS21 INS66 INS42 INS32 INS32 INS66 INS74 INS59 INS14 INS42 INS43 INS76 INS43 INS76 INS43 INS74 INS74 INS7 INS42 INS22 INS42 INS40 INS43 INS43 INS42 INS32 INS43 INS16 INS42 INS42 INS42 INS43 INS76 INS43 INS76 INS22 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS22 INS32 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS42 INS42 INS74 INS74 INS42 INS42 INS42 INS43 INS76 INS43 INS76 INS42 INS42