Lazy loading of model input stream.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@764661 13f79535-47bb-0310-9956-ffa450edef68

-
-        ByteArrayOutputStream baos = new ByteArrayOutputStream();
-        Writer out = null;
-        MavenXpp3Writer writer = new MavenXpp3Writer();
-        try
-        {
-            out = WriterFactory.newXmlWriter( baos );
-            writer.write( out, model );
-        }
-        finally
-        {
-            if ( out != null )
-            {
-                out.close();
-            }
-        }
+
-        inputBytes = baos.toByteArray();
+        
-    public String asString()
+    public String asString() throws IOException
-        try
-        {
-            return IOUtil.toString( ReaderFactory.newXmlReader( new ByteArrayInputStream( inputBytes ) ) );
-        }
-        catch ( IOException ioe )
-        {
-            // should not occur: everything is in-memory
-            return "";
-        }
+    	if(inputBytes == null)
+    	{
+            ByteArrayOutputStream baos = new ByteArrayOutputStream();
+            Writer out = null;
+            MavenXpp3Writer writer = new MavenXpp3Writer();
+            try
+            {
+                out = WriterFactory.newXmlWriter( baos );
+                writer.write( out, model );
+            }
+            finally
+            {
+                if ( out != null )
+                {
+                    out.close();
+                }
+            }
+            inputBytes = baos.toByteArray();		
+    	}
+
+	    return IOUtil.toString( ReaderFactory.newXmlReader( new ByteArrayInputStream( inputBytes ) ) );
-    public InputStream getInputStream()
+    public InputStream getInputStream() throws IOException
-        byte[] copy = new byte[inputBytes.length];
-        System.arraycopy( inputBytes, 0, copy, 0, inputBytes.length );
-        return new ByteArrayInputStream( copy );
+    	if(inputBytes != null)
+    	{
+            byte[] copy = new byte[inputBytes.length];
+            System.arraycopy( inputBytes, 0, copy, 0, inputBytes.length );
+            return new ByteArrayInputStream( copy );    		
+    	}
+    	else
+    	{
+            ByteArrayOutputStream baos = new ByteArrayOutputStream();
+            Writer out = null;
+            MavenXpp3Writer writer = new MavenXpp3Writer();
+            try
+            {
+                out = WriterFactory.newXmlWriter( baos );
+                writer.write( out, model );
+            }
+            finally
+            {
+                if ( out != null )
+                {
+                    out.close();
+                }
+            }
+            inputBytes = baos.toByteArray();
+            return new ByteArrayInputStream(inputBytes);
+    	}

MOV31 MOV31 INS42 MOV44 MOV44 MOV43 INS8 MOV29 MOV43 INS42 INS43 INS8 MOV43 INS8 MOV21 MOV21 MOV21 INS42 INS25 MOV41 INS25 INS27 MOV8 INS27 MOV8 INS8 INS42 INS33 INS42 INS33 INS60 INS60 INS60 INS54 INS21 INS41 INS43 INS59 INS43 INS59 INS43 INS59 INS8 INS8 INS7 INS14 INS42 INS42 INS14 INS42 INS42 INS33 INS42 INS42 INS14 INS21 INS21 INS25 INS42 INS32 INS43 INS42 INS43 INS43 INS7 INS32 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS33 INS21 INS42 INS42 INS42 INS32 INS42 INS42 DEL42 DEL8 DEL42 DEL44 DEL45 DEL41 DEL8 DEL12 DEL54 DEL8 DEL42