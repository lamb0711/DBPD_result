MNG-5767 .mvn/ for project specific jvm options and maven parameters

Signed-off-by: Igor Fedorenko <ifedorenko@apache.org>

+import java.io.IOException;
+import java.util.Arrays;
+import com.google.common.base.Charsets;
+import com.google.common.io.Files;
+    public static final String PROJECT_BASEDIR = "maven.projectBasedir";
+
-    private void initialize( CliRequest cliRequest )
+    void initialize( CliRequest cliRequest )
+        if ( cliRequest.projectBaseDirectory == null )
+        {
+            String basedirProperty = System.getProperty( PROJECT_BASEDIR );
+            File basedir = basedirProperty != null ? new File( basedirProperty ) : new File( "" );
+            try
+            {
+                cliRequest.projectBaseDirectory = basedir.getCanonicalFile();
+            }
+            catch ( IOException e )
+            {
+                cliRequest.projectBaseDirectory = basedir.getAbsoluteFile();
+            }
+        }
+
-    private void cli( CliRequest cliRequest )
+    void cli( CliRequest cliRequest )
+        List<String> args = new ArrayList<String>();
+
-            cliRequest.commandLine = cliManager.parse( cliRequest.args );
+            File configFile = new File( cliRequest.projectBaseDirectory, ".mvn/maven.config" );
+
+            if ( configFile.isFile() )
+            {
+                for ( String arg : Files.toString( configFile, Charsets.UTF_8 ).split( "\\s+" ) )
+                {
+                    args.add( arg );
+                }
+
+                CommandLine config = cliManager.parse( args.toArray( new String[args.size()] ) );
+                List<?> unrecongized = config.getArgList();
+                if ( !unrecongized.isEmpty() )
+                {
+                    throw new ParseException( "Unrecognized maven.config entries: " + unrecongized );
+                }
+            }
+        }
+        catch ( ParseException e )
+        {
+            System.err.println( "Unable to parse maven.config: " + e.getMessage() );
+            cliManager.displayHelp( System.out );
+            throw e;
+        }
+
+        try
+        {
+            args.addAll( 0, Arrays.asList( cliRequest.args ) );
+            cliRequest.commandLine = cliManager.parse( args.toArray( new String[args.size()] ) );
+            .setProjectBaseDirectory( cliRequest.projectBaseDirectory )
+        File projectBaseDirectory;

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS83 INS83 INS83 INS43 INS59 INS23 INS42 INS42 INS45 INS25 INS60 INS54 INS43 INS59 INS27 INS8 INS74 INS59 INS8 INS12 INS32 INS42 INS42 INS40 INS33 INS60 INS60 INS54 INS43 INS43 INS42 INS14 INS60 INS25 INS44 INS8 INS21 MOV32 INS42 INS40 INS43 INS59 INS43 INS59 INS8 INS12 INS42 INS42 INS74 INS43 INS59 INS32 INS8 INS43 INS42 INS21 INS21 INS53 INS32 INS42 INS42 INS32 INS42 INS42 INS16 INS21 INS44 INS8 INS43 INS43 INS42 INS42 INS14 INS42 INS42 INS70 INS60 INS60 INS25 INS42 INS32 INS32 INS42 INS42 INS42 INS34 INS32 INS42 INS42 INS42 INS27 INS14 INS14 INS7 INS43 INS42 INS21 INS42 INS42 INS43 INS40 INS45 INS44 INS32 INS8 INS43 INS59 INS74 INS59 INS38 INS8 INS40 INS42 INS27 INS42 INS42 INS40 INS42 INS42 INS40 INS32 INS42 INS33 INS43 INS42 INS43 INS45 INS40 INS32 INS42 INS7 INS42 INS43 INS42 INS32 INS42 INS45 INS21 INS42 INS42 INS32 INS43 INS76 INS42 INS32 INS32 INS53 INS45 INS32 INS42 INS42 INS3 INS42 INS42 INS42 INS42 INS40 INS32 INS42 INS42 INS42 INS42 INS40 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS5 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS3 INS43 INS27 INS43 INS85 INS42 INS42 INS5 INS32 INS42 INS45 INS42 INS42 INS43 INS85 INS42 INS42 INS42 DEL83 DEL83 DEL40