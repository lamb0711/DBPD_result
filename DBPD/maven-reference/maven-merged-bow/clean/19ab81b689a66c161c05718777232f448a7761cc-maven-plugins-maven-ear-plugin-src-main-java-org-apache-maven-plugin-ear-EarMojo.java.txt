- MNG-1461: custom application.xml can now be specified properly. Overrides any other file found in the source directories
- MNG-1444: added directory scanner to exclude common directories (subversion, CVS files, etc). Added earSourceIncludes and earSourceExcludes properties to specify the list of tokens to include and exclude respectively.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@332123 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.util.DirectoryScanner;
+import java.util.ArrayList;
+import java.util.List;
+     * The comma separated list of tokens to include in the EAR.
+     * Default is '**'.
+     *
+     * @parameter alias="includes"
+     */
+    private String earSourceIncludes = "**";
+
+    /**
+     * The comma separated list of tokens to exclude from the EAR.
+     *
+     * @parameter alias="excludes"
+     */
+    private String earSourceExcludes;
+
+    private static final String[] EMPTY_STRING_ARRAY = {};
+
+    /**
-     * The location of the application.xml file to be used within the ear file.
+     * The location of a custom application.xml file to be used
+     * within the ear file.
-     * @parameter expression="${basedir}/src/main/application/META-INF/application.xml"
+     * @parameter
-    private File applicationXmlFile;
+    private String applicationXml;
-        getLog().debug( "applicationXmlLocation[" + applicationXmlFile + "]" );
+        getLog().debug( "applicationXml[" + getApplicationXml() + "]" );
-                FileUtils.copyDirectoryStructure( earSourceDir, getWorkDirectory() );
+                String[] fileNames = getEarFiles( earSourceDir );
+                for ( int i = 0; i < fileNames.length; i++ )
+                {
+                    FileUtils.copyFile( new File( earSourceDir, fileNames[i] ),
+                                        new File( getWorkDirectory(), fileNames[i] ) );
+                }
+
+            if ( applicationXml != null && !"".equals( applicationXml ) )
+            {
+                //rename to application.xml
+                getLog().info( "Including custom application.xml[" + applicationXml + "]" );
+                File metaInfDir = new File( getWorkDirectory(), META_INF );
+                FileUtils.copyFile( new File( applicationXml ), new File( metaInfDir, "/application.xml" ) );
+            }
+
-                FileUtils.copyDirectoryStructure( resourcesDir, getWorkDirectory() );
+                String[] fileNames = getEarFiles( resourcesDir );
+                for ( int i = 0; i < fileNames.length; i++ )
+                {
+                    FileUtils.copyFile( new File( resourcesDir, fileNames[i] ),
+                                        new File( getWorkDirectory(), fileNames[i] ) );
+                }
+    public String getApplicationXml()
+    {
+        return applicationXml;
+    }
+
+    public void setApplicationXml( String applicationXml )
+    {
+        this.applicationXml = applicationXml;
+    }
+
+    /**
+     * Returns a string array of the excludes to be used
+     * when assembling/copying the ear.
+     *
+     * @return an array of tokens to exclude
+     */
+    protected String[] getExcludes()
+    {
+        List excludeList = new ArrayList( FileUtils.getDefaultExcludesAsList() );
+        if ( earSourceExcludes != null && !"".equals( earSourceExcludes ) )
+        {
+            excludeList.add( earSourceExcludes );
+        }
+
+        // if applicationXml is specified, omit the one in the source directory
+        if ( getApplicationXml() != null && !"".equals( getApplicationXml() ) )
+        {
+            excludeList.add( "**/" + META_INF + "/application.xml" );
+        }
+
+        return (String[]) excludeList.toArray( EMPTY_STRING_ARRAY );
+    }
+
+    /**
+     * Returns a string array of the includes to be used
+     * when assembling/copying the ear.
+     *
+     * @return an array of tokens to include
+     */
+    protected String[] getIncludes()
+    {
+        return new String[]{earSourceIncludes};
+    }
+
+
+    /**
+     * Returns a list of filenames that should be copied
+     * over to the destination directory.
+     *
+     * @param sourceDir the directory to be scanned
+     * @return the array of filenames, relative to the sourceDir
+     */
+    private String[] getEarFiles( File sourceDir )
+    {
+        DirectoryScanner scanner = new DirectoryScanner();
+        scanner.setBasedir( sourceDir );
+        scanner.setExcludes( getExcludes() );
+        scanner.addDefaultExcludes();
+
+        scanner.setIncludes( getIncludes() );
+
+        scanner.scan();
+
+        return scanner.getIncludedFiles();
+    }

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS83 INS83 INS83 INS5 INS59 INS43 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS5 INS42 INS8 INS29 INS83 INS5 INS42 INS8 INS29 INS83 INS5 INS42 INS44 INS8 INS65 INS65 INS42 INS42 INS45 INS65 INS65 INS42 INS42 INS43 INS85 INS42 INS4 INS42 UPD42 INS42 INS41 INS43 INS42 INS21 INS65 INS65 INS43 INS85 INS60 INS25 INS25 INS41 INS65 INS65 INS43 INS85 INS41 INS65 INS65 INS65 INS43 INS85 INS43 INS42 INS60 INS21 INS21 INS21 INS21 INS21 INS41 INS66 INS66 INS66 INS66 INS66 INS42 UPD66 INS66 INS42 INS42 INS7 INS66 INS66 INS66 INS42 INS43 INS59 INS27 INS8 INS27 INS8 INS11 INS66 INS66 INS66 INS42 INS3 INS66 INS66 INS42 INS66 INS66 INS42 INS42 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS25 INS22 INS42 INS42 INS42 INS14 INS27 INS38 INS21 INS27 INS38 INS21 INS5 INS32 INS5 INS4 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 UPD45 INS32 INS8 INS27 INS8 INS8 INS52 INS42 INS43 INS32 INS42 INS33 INS32 INS32 INS32 INS33 INS32 INS32 INS43 INS85 INS42 INS42 INS42 INS43 INS85 INS42 INS43 INS42 INS42 INS42 MOV21 INS60 INS24 INS27 INS38 INS21 INS60 INS21 MOV21 INS60 INS24 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS42 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS33 INS32 INS32 INS43 INS59 INS32 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS45 INS42 INS45 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 MOV21 INS45 INS42 INS42 INS32 INS42 INS27 INS42 INS42 INS14 INS42 INS42 INS14 INS14 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 MOV21 INS42 INS42 INS42 INS42 INS34 INS42 INS45 INS42 INS45 INS43 MOV32 INS42 INS43 INS42 INS43 INS42 INS45 INS42 INS42 INS42 INS42 INS34 UPD42 INS14 INS14 INS42 INS42 INS42 UPD42 INS14 INS14 MOV43 INS42 INS2 INS43 MOV32 INS2 INS43 INS42 INS2 INS43 INS32 INS2 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL66 DEL42 DEL42 DEL8 DEL42 DEL8