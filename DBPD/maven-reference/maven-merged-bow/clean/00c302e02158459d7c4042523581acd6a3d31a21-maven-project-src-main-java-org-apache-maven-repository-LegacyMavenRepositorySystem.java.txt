o checking in so that oleg and shane can see the changes, there are three failing tests. i'm fixing in the plane and will check in when i land



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@746850 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.maven;
+package org.apache.maven.repository;
+import org.apache.maven.artifact.resolver.ArtifactResolutionRequest;
+import org.apache.maven.artifact.versioning.VersionRange;
-@Component(role = RepositorySystem.class)
-public class LegacyRepositorySystem
-    implements RepositorySystem, LogEnabled
+@Component(role = MavenRepositorySystem.class)
+public class LegacyMavenRepositorySystem
+    implements MavenRepositorySystem, LogEnabled
+
+    public Artifact createDependencyArtifact( String groupId, String artifactId, VersionRange versionRange, String type, String classifier, String scope, boolean optional )
+    {
+        return artifactFactory.createDependencyArtifact( groupId, artifactId, versionRange, type, classifier, scope );        
+    }
+
+    public Artifact createDependencyArtifact( String groupId, String artifactId, VersionRange versionRange, String type, String classifier, String scope, String inheritedScope )
+    {
+        return artifactFactory.createDependencyArtifact( groupId, artifactId, versionRange, type, classifier, scope, inheritedScope );        
+    }
+    
+    public Artifact createExtensionArtifact( String groupId, String artifactId, VersionRange versionRange )
+    {
+        return artifactFactory.createExtensionArtifact( groupId, artifactId, versionRange );
+    }
+
+    public Artifact createParentArtifact( String groupId, String artifactId, String version )
+    {
+        return artifactFactory.createParentArtifact( groupId, artifactId, version );
+    }
+    
+    public Artifact createPluginArtifact( String groupId, String artifactId, VersionRange versionRange )
+    {
+        return artifactFactory.createPluginArtifact( groupId, artifactId, versionRange );
+    }
+    
+    public Set<Artifact> createArtifacts( List<Dependency> dependencies, String inheritedScope, ArtifactFilter dependencyFilter, MavenProject project )
+        throws InvalidDependencyVersionException
+    {
+        return MavenMetadataSource.createArtifacts( artifactFactory, dependencies, inheritedScope, dependencyFilter, project );
+    }
+    
+    //
-        return artifactResolver.resolveTransitively( artifacts, originatingArtifact, localRepository,
-                                                     remoteRepositories, artifactMetadataSource, filter );
-    }
-
-    public Set<Artifact> createArtifacts(
-			List<Dependency> dependencies, String inheritedScope,
-			ArtifactFilter dependencyFilter, MavenProject project) 
-        throws InvalidDependencyVersionException
-
-	{
-		return MavenMetadataSource.createArtifacts(artifactFactory,
-				dependencies, inheritedScope, dependencyFilter, project);
+    	return artifactResolver.resolveTransitively(artifacts, originatingArtifact, remoteRepositories, localRepository, artifactMetadataSource );    	
-        // FIXME: Not sure whether this is just intermediate code but the call belows wrecks havoc on system dependencies
+    }
+
+    public ArtifactResolutionResult resolve( ArtifactResolutionRequest request )
+    {
+        return artifactResolver.resolve( request );
+    }
+
+    // These two methods are here so that the ArtifactMetadataSource is implemented so that I can pass this into an ArtifactResolutionRequest.
+    // Intermediate measure before separating the RepositorySystem out into its own module.
+    
+    public List<ArtifactVersion> retrieveAvailableVersionsFromDeploymentRepository( Artifact artifact, ArtifactRepository localRepository, ArtifactRepository remoteRepository )
+        throws ArtifactMetadataRetrievalException
+    {
+        return artifactMetadataSource.retrieveAvailableVersionsFromDeploymentRepository( artifact, localRepository, remoteRepository );
+    }
+
+    public Artifact retrieveRelocatedArtifact( Artifact artifact, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories )
+        throws ArtifactMetadataRetrievalException
+    {
+        return artifactMetadataSource.retrieveRelocatedArtifact( artifact, localRepository, remoteRepositories );

INS26 INS26 MOV31 UPD40 INS40 INS40 UPD42 UPD43 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 UPD42 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS8 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS8 INS83 INS43 INS42 INS44 INS44 INS44 INS8 INS83 INS43 INS42 INS44 INS44 INS44 INS8 INS83 INS43 INS42 INS44 INS44 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS74 INS42 INS44 INS44 INS44 INS43 INS8 INS83 INS43 INS42 INS44 INS44 INS44 INS43 INS8 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS41 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS41 INS43 INS43 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS41 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS42 INS41 UPD43 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS43 INS32 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42