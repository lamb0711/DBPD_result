o inject a logger, remove AbstractLogEnabled 

git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@751458 13f79535-47bb-0310-9956-ffa450edef68

-import org.codehaus.plexus.logging.AbstractLogEnabled;
+import org.codehaus.plexus.logging.Logger;
- * @author <a href="mailto:jason@maven.org">Jason van Zyl</a>
+ * @author Jason van Zyl
- * @version $Id$
- * @todo because of aggregation, we ended up with cli-ish stuff in here (like line() and the project
- *       logging, without much of the event handling)
-    extends AbstractLogEnabled
-{    
-    the plugin configuration from the pom is not taken at all, just grab it and then optimize it 
+{
+    @Requirement
+    private Logger logger;
-                    getLogger().info( "Building " + rootProject.getName() );
+                    logger.info( "Building " + rootProject.getName() );
-                    getLogger().info( "  " + segment );
+                    logger.info( "  " + segment );
-                    getLogger().info( "SKIPPING " + rootProject.getName() );
+                    logger.info( "SKIPPING " + rootProject.getName() );
-                    getLogger().info( "  " + segment );
+                    logger.info( "  " + segment );
-                    getLogger().info( "This project has been banned from further executions due to previous failures." );
+                    logger.info( "This project has been banned from further executions due to previous failures." );
-                        getLogger().info( "Building " + currentProject.getName() );
+                        logger.info( "Building " + currentProject.getName() );
-                        getLogger().info( "  " + segment );
+                        logger.info( "  " + segment );
-                        getLogger().info( "SKIPPING " + currentProject.getName() );
+                        logger.info( "SKIPPING " + currentProject.getName() );
-                        getLogger().info( "  " + segment );
+                        logger.info( "  " + segment );
-                        getLogger().info( "This project has been banned from further executions due to previous failures." );
+                        logger.info( "This project has been banned from further executions due to previous failures." );
-            getLogger().info( "No goals needed for project - skipping" );
+            logger.info( "No goals needed for project - skipping" );
-            getLogger().error( "Plugin contains a <reports/> section: this is IGNORED - please use <reporting/> instead." );
+            logger.error( "Plugin contains a <reports/> section: this is IGNORED - please use <reporting/> instead." );
-                    getLogger().warn( "Invalid default report ignored: '" + report + "' (must be groupId:artifactId[:version])" );
+                    logger.warn( "Invalid default report ignored: '" + report + "' (must be groupId:artifactId[:version])" );
-                getLogger().debug( "Omitting report: " + mojoDescriptor.getFullGoalName() + " from reports list. It initiated part of the fork currently executing." );
+                logger.debug( "Omitting report: " + mojoDescriptor.getFullGoalName() + " from reports list. It initiated part of the fork currently executing." );
-        getLogger().info( "Preparing " + pluginDescriptor.getGoalPrefix() + ":" + mojoDescriptor.getGoal() );
+        logger.info( "Preparing " + pluginDescriptor.getGoalPrefix() + ":" + mojoDescriptor.getGoal() );
-                getLogger().info( "Building " + reactorProject.getName() );
+                logger.info( "Building " + reactorProject.getName() );
-                    getLogger().warn( "Removing: " + execution.getMojoDescriptor().getGoal() + " from forked lifecycle, to prevent recursive invocation." );
+                    logger.warn( "Removing: " + execution.getMojoDescriptor().getGoal() + " from forked lifecycle, to prevent recursive invocation." );
-                getLogger().debug( "Error looking up lifecycle mapping to retrieve optional mojos. Lifecycle ID: " + lifecycle.getId() + ". Error: " + e.getMessage(), e );
+                logger.debug( "Error looking up lifecycle mapping to retrieve optional mojos. Lifecycle ID: " + lifecycle.getId() + ". Error: " + e.getMessage(), e );
-                    getLogger().error( "Plugin contains a <goals/> section: this is IGNORED - please use <executions/> instead." );
+                    logger.error( "Plugin contains a <goals/> section: this is IGNORED - please use <executions/> instead." );
-            getLogger().warn( goal + " requires online mode, but maven is currently offline. Disabling " + goal + "." );
+            logger.warn( goal + " requires online mode, but maven is currently offline. Disabling " + goal + "." );
-                getLogger().info( "Skipping missing optional mojo: " + task );
+                logger.info( "Skipping missing optional mojo: " + task );
-        getLogger().info( "------------------------------------------------------------------------" );
+        logger.info( "------------------------------------------------------------------------" );

UPD40 INS23 INS78 INS83 UPD43 MOV43 MOV59 UPD66 INS42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS21 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 MOV27 UPD42 MOV42 MOV21 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 DEL66 DEL65 DEL66 DEL66 DEL65 DEL42 DEL43 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL59 DEL23 DEL23 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL59 DEL23 DEL32 DEL32 DEL32 DEL32 DEL32 DEL32 DEL42 DEL32 DEL42 DEL32 DEL21 DEL32 DEL32 DEL32 DEL32 DEL32 DEL32 DEL32 DEL32 DEL32 DEL32 DEL32 DEL32 DEL32 DEL32 DEL32