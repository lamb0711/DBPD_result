o Removed the parsing of ~/.m2/pom.xml using unix tools to extract the local repo
o Added the ability to specify -Dmaven.repo.local=xxx to the it shell script, and the Verifier class
o Added to the Verifier class the ability to parse ~/.m2/pom.xml and retrieve the local repo location in the event ${maven.repo.local} is unspecified


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163029 13f79535-47bb-0310-9956-ffa450edef68

+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.parsers.DocumentBuilderFactory;
+import javax.xml.parsers.ParserConfigurationException;
+
+import org.apache.xml.utils.DOMBuilder;
+import org.apache.xpath.XPathAPI;
+import org.w3c.dom.Document;
+
- * @author <a href="mailto:jason@maven.org">Jason van Zyl</a>
+ * @author <a href="mailto:jason@maven.org">Jason van Zyl </a>
-    private String mavenRepoLocal;
+    private File homeDir;
-    public Verifier( String basedir, String mavenRepoLocal )
+    private String localRepo;
+
+    public Verifier( String basedir, String homeDir )
-        this.mavenRepoLocal = mavenRepoLocal;
+        this.homeDir = new File( homeDir );
-    public void verify()
-        throws VerificationException
+    public void verify() throws VerificationException
+            retrieveLocalRepo();
+
-            while ( ( line = reader.readLine() ) != null )
+            while ( (line = reader.readLine()) != null )
-        System.out.println( "-----------------------------------------------------------------------------------> OK" );        
+        System.out.println( "-----------------------------------------------------------------------------------> OK" );
-    private void verifyExpectedResult( String line )
-        throws VerificationException
+    private void retrieveLocalRepo() throws Exception
-        line = replace( line, "${localRepository}", mavenRepoLocal );
+        localRepo = System.getProperty( "maven.repo.local" );
+        if ( localRepo == null )
+        {
+            // parse ~/.m2/pom.xml for it...
+            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
+            DocumentBuilder builder = factory.newDocumentBuilder();
+
+            File pom = new File( homeDir, ".m2/pom.xml" );
+            Document dom = builder.parse( pom );
+
+            localRepo = XPathAPI.selectSingleNode( dom, "/project/local/repository/text()" ).getNodeValue();
+        }
+    }
+
+    private void verifyExpectedResult( String line ) throws VerificationException
+    {
+        line = replace( line, "${localRepository}", localRepo );
-        while ( ( end = text.indexOf( repl, start ) ) != -1 )
+        while ( (end = text.indexOf( repl, start )) != -1 )
-
-}
+}

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS83 INS43 INS59 INS83 INS39 INS42 INS43 INS8 UPD66 INS42 INS42 UPD42 UPD42 INS42 INS21 INS25 INS7 INS27 INS8 INS14 INS21 INS42 INS32 INS42 INS33 INS60 INS60 INS60 INS60 INS21 UPD42 INS43 INS42 INS32 INS42 INS42 INS45 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS7 UPD42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS45 DEL42