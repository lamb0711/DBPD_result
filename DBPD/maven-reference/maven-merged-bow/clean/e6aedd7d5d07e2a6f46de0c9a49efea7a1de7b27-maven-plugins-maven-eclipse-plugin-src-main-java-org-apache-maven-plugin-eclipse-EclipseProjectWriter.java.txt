Fixing a couple of issues actually reported against the m1/m2 plugin:
MPECLIPSE-102 Running 'maven:eclipse' turns CheckStyle off for the project.
MPECLIPSE-106 Eclipse loses Sysdeo "Is Tomcat Project" setting after mvn eclipse:eclipse

existing .project files are parsed and additional natures/builders are preserved. Running eclipse:clean will remove existing settings and start from scratch

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@332376 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.File;
+import java.io.FileReader;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.util.Iterator;
+import java.util.LinkedHashSet;
+import java.util.List;
+import java.util.Set;
+
-
-import java.io.File;
-import java.io.FileWriter;
-import java.io.IOException;
-import java.util.Iterator;
-import java.util.List;
+import org.codehaus.plexus.util.xml.Xpp3Dom;
+import org.codehaus.plexus.util.xml.Xpp3DomBuilder;
+import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
-                          List reactorArtifacts, List projectnatures, List buildCommands )
+                         List reactorArtifacts, List addedProjectnatures, List addedBuildCommands )
+
+        Set projectnatures = new LinkedHashSet();
+        Set buildCommands = new LinkedHashSet();
+
+        File dotProject = new File( basedir, ".project" );
+
+        if ( dotProject.exists() )
+        {
+
+            log.info( Messages.getString( "EclipsePlugin.keepexisting", dotProject.getAbsolutePath() ) ); //$NON-NLS-1$
+
+            // parse existing file in order to keep manually-added entries
+            FileReader reader = null;
+            try
+            {
+                reader = new FileReader( dotProject );
+                Xpp3Dom dom = Xpp3DomBuilder.build( reader );
+
+                Xpp3Dom naturesElement = dom.getChild( "natures" );
+                if ( naturesElement != null )
+                {
+                    Xpp3Dom[] existingNatures = naturesElement.getChildren( "nature" );
+                    for ( int j = 0; j < existingNatures.length; j++ )
+                    {
+                        // adds all the existing natures
+                        projectnatures.add( existingNatures[j].getValue() );
+                    }
+                }
+
+                Xpp3Dom buildSpec = dom.getChild( "buildSpec" );
+                if ( buildSpec != null )
+                {
+                    Xpp3Dom[] existingBuildCommands = buildSpec.getChildren( "buildCommand" );
+                    for ( int j = 0; j < existingBuildCommands.length; j++ )
+                    {
+                        Xpp3Dom buildCommandName = existingBuildCommands[j].getChild( "name" );
+                        if ( buildCommandName != null )
+                        {
+                            buildCommands.add( buildCommandName.getValue() );
+                        }
+                    }
+                }
+            }
+            catch ( XmlPullParserException e )
+            {
+                log.warn( Messages.getString( "EclipsePlugin.cantparseexisting", dotProject.getAbsolutePath() ) ); //$NON-NLS-1$
+            }
+            catch ( IOException e )
+            {
+                log.warn( Messages.getString( "EclipsePlugin.cantparseexisting", dotProject.getAbsolutePath() ) ); //$NON-NLS-1$
+            }
+            finally
+            {
+                IOUtil.close( reader );
+            }
+        }
+
+        // adds new entries after the existing ones
+        for ( Iterator iter = addedProjectnatures.iterator(); iter.hasNext(); )
+        {
+            projectnatures.add( iter.next() );
+        }
+        for ( Iterator iter = addedBuildCommands.iterator(); iter.hasNext(); )
+        {
+            buildCommands.add( iter.next() );
+        }
+
-            w = new FileWriter( new File( basedir, ".project" ) ); //$NON-NLS-1$
+            w = new FileWriter( dotProject ); //$NON-NLS-1$
-            throw new MojoExecutionException( Messages.getString( "EclipsePlugin.erroropeningfile" ),
-                                              ex ); //$NON-NLS-1$
+            throw new MojoExecutionException( Messages.getString( "EclipsePlugin.erroropeningfile" ), ex ); //$NON-NLS-1$

MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 MOV44 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 UPD42 UPD42 INS60 INS60 INS60 INS25 INS24 INS24 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS8 INS58 INS32 INS8 INS58 INS32 INS8 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 MOV14 INS42 INS42 INS21 INS60 INS54 INS43 INS59 INS42 INS42 INS21 INS43 INS59 INS42 INS42 INS21 INS43 INS43 INS32 INS43 INS59 INS8 INS12 INS12 INS8 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS33 INS21 INS60 INS60 INS25 INS60 INS25 INS44 INS8 INS44 INS8 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS32 INS7 INS43 INS59 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS43 INS42 INS21 INS43 INS42 INS21 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS60 INS24 INS42 INS42 INS32 INS42 INS33 INS60 INS24 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS42 INS45 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS21 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS60 INS25 INS42 INS42 INS45 INS32 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS45 INS42 INS34 INS32 INS42 INS42 INS42 INS45 INS42 INS34 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS2 INS42 INS2 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42