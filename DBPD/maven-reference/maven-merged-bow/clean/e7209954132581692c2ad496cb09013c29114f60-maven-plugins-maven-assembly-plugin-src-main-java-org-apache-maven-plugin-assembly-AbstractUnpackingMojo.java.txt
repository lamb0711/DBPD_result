PR: MNG-1206
Submitted by: Edwin Punzalan
include all dependencies in reactor projects in the generated assembly

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@327855 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import org.apache.maven.artifact.Artifact;
+import org.apache.maven.project.MavenProject;
-     * Project dependencies.
-     *
-     * @parameter expression="${project.artifacts}"
-     * @readonly
-     */
-    protected Set dependencies;
-
-    /**
-
+    /**
+     * Contains the full list of projects in the reactor.
+     *
+     * @parameter expression="${reactorProjects}"
+     * @required
+     * @readonly
+     */
+    private List reactorProjects;
+
+    /**
+     * Creates a Map of artifacts within the reactor using the groupId:artifactId:version as key
+     *
+     * @return a HashMap of all artifacts available in the reactor
+     */
+    protected Map getMappedReactorArtifacts()
+    {
+        Map mappedReactorArtifacts = new HashMap();
+
+        for ( Iterator i = reactorProjects.iterator(); i.hasNext(); )
+        {
+            MavenProject reactorProject = (MavenProject) i.next();
+
+            String key = reactorProject.getGroupId() + ":" + reactorProject.getArtifactId() + ":"
+                + reactorProject.getVersion();
+
+            mappedReactorArtifacts.put( key, reactorProject.getArtifact() );
+        }
+
+        return mappedReactorArtifacts;
+    }
+
+    /**
+     * Retrieves all artifact dependencies within the reactor
+     *
+     * @return A HashSet of artifacts
+     */
+    protected Set getDependencies()
+    {
+        Map reactorArtifacts = getMappedReactorArtifacts();
+
+        Map dependencies = new HashMap();
+
+        for ( Iterator i = reactorProjects.iterator(); i.hasNext(); )
+        {
+            MavenProject reactorProject = (MavenProject) i.next();
+
+            for ( Iterator j = reactorProject.getArtifacts().iterator(); j.hasNext(); )
+            {
+                Artifact artifact = (Artifact) j.next();
+
+                String key = artifact.getGroupId() + ":" + artifact.getArtifactId() + ":" + artifact.getVersion();
+
+                if ( !reactorArtifacts.containsKey( key ) && !dependencies.containsKey( key ) )
+                {
+                    dependencies.put( key, artifact );
+                }
+            }
+        }
+
+        return new HashSet( dependencies.values() );
+    }
-

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS31 MOV29 INS83 INS43 INS59 INS29 INS83 INS43 INS42 INS8 INS29 INS83 MOV43 INS42 INS8 INS65 INS42 INS42 INS65 INS65 INS42 INS60 INS24 INS41 INS65 INS65 INS60 INS60 INS24 INS41 UPD66 UPD66 INS66 INS66 INS43 INS59 INS58 INS32 INS8 INS42 INS66 INS66 INS43 INS59 INS43 INS59 INS58 INS32 INS8 INS14 INS42 INS42 INS14 INS43 INS59 INS42 INS42 INS60 INS60 INS21 INS42 INS42 INS32 INS42 MOV42 INS14 INS43 INS59 INS42 INS42 INS60 INS24 INS43 INS32 INS43 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS32 INS42 INS43 INS42 INS42 INS32 INS43 INS59 INS58 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS27 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS11 INS43 INS59 INS42 INS42 INS60 INS60 INS25 INS43 INS32 INS32 INS45 INS32 INS45 INS32 INS42 INS42 INS43 INS32 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS11 INS42 INS42 INS27 INS38 INS38 INS21 INS42 INS42 INS43 INS32 INS32 INS45 INS32 INS45 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL83 DEL59 DEL23