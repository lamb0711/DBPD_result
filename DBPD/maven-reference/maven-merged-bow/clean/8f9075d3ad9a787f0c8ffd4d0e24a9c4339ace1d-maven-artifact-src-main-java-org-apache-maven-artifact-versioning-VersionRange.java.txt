[MNG-6571] cache VersionRange instances, they are immutable
+import java.util.Map;
+import java.util.WeakHashMap;
+    private static final Map<String, VersionRange> CACHE =
+        Collections.<String, VersionRange>synchronizedMap( new WeakHashMap<String, VersionRange>() );
+
+    /**
+     * @deprecated VersionRange is immutable, cloning is not useful and even more an issue against the cache 
+     * @return a clone
+     */
+    @Deprecated
+        VersionRange cached = CACHE.get( spec );
+        if ( cached != null )
+        {
+            return cached;
+        }
+
-        return new VersionRange( version, restrictions );
+        cached = new VersionRange( version, restrictions );
+        CACHE.put( spec, cached );
+        return cached;
-        List<Restriction> restrictions = Collections.emptyList();
-        return new VersionRange( new DefaultArtifactVersion( version ), restrictions );
+        VersionRange cached = CACHE.get( version );
+        if ( cached == null )
+        {
+            List<Restriction> restrictions = Collections.emptyList();
+            cached = new VersionRange( new DefaultArtifactVersion( version ), restrictions );
+        }
+        return cached;

INS26 INS26 INS40 INS40 INS23 INS83 INS83 INS83 INS74 INS59 INS29 INS78 INS8 INS43 INS43 INS43 INS42 INS32 INS65 INS65 INS42 INS60 INS25 INS21 INS21 INS41 INS60 INS25 INS41 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS14 INS66 INS66 INS43 INS59 INS27 INS8 INS7 INS32 INS42 INS43 INS59 INS27 MOV8 INS42 INS42 INS42 INS74 INS42 INS42 INS32 INS42 INS33 MOV41 INS42 MOV14 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS42 MOV14 DEL41