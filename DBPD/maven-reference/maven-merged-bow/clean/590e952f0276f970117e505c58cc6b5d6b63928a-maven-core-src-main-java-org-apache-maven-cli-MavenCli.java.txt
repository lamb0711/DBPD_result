CHANGES
------------------------

o Factored the layout for a repository into a separate set of components in o.a.m.a.repository.layout

o Added new DefaultRepositoryLayout that uses the repo layout in http://docs.codehaus.org/pages/viewpage.action?pageId=22230 (it is not used by default until we get the repo1 conversion done)

o Added command-line switches to force legacy local-repo or new format (-a/-A, I know, but try to find something that makes more sense!)

o Added path formatting to the repository itself, which is now constructed with a ArtifactRepositoryLayout instance (since layout should be tied to the repository)

o Removed path formatting altogether from the DefaultArtifactHandlerManager.

o Changed the AbstractArtifactBasedComponent (or whatever it's called) to use the repository formatting in the path() and localPath() methods.

o Moved the plugin repo construction (still intact as a hard-coded singleton list) into the DefaultMavenProjectBuilder, where it will eventually build from POM info.

o Added a new method to build an artifact repository for a <distributionManagement/> section, if possible. This reduced the strain on mojos to construct an ArtifactRepository on demand.

o Refactored all *DeployMojo to use #project.distributionManagementArtifactRepository instead of the #settings, #component..ArtifactRepositoryFactory, ... that it used to require. This is a big simplifying step.

o Removed remote artifact repository construction from DefaultMaven, and changed the MavenSession to delegate to MavenProject for remoteArtifactRepositories, just as it does for pluginRepositories.

o Added remoteArtifactRepositories, pluginArtifactRepositories, distributionManagementArtifactRepository to MavenProject as a cache for the higher-level repos used throughout the system. This is project info, so it belongs here.

o Fixed all the tests in maven-core and maven-artifact which I broke. :)

o Dropped what is probably a big format-bomb, since the Eclipse formatter doesn't really handle 'throws Exception' wrapping the right way.

o Added MavenProject to the MavenSession constructor, since there should always be a MavenProject associated with a build, even if it's just the super-pom.

TODO:
--------------------------

- Write an integration/unit test to ensure that the new repo format works with $classifier (was: $extra) and $groupId[0]/../$groupId[n]. This is a simple adaptation of the old layout, but still needs testing.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163638 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout;
-    public static int main( String[] args, ClassWorld classWorld )
-        throws Exception
+    public static int main( String[] args, ClassWorld classWorld ) throws Exception
-        
-        MavenSettings settings = settingsBuilder.buildSettings();
-        
-        ArtifactRepositoryFactory artifactRepositoryFactory = (ArtifactRepositoryFactory) embedder.lookup( ArtifactRepositoryFactory.ROLE );
-        ArtifactRepository localRepository = getLocalRepository( settings, artifactRepositoryFactory );
+        MavenSettings settings = settingsBuilder.buildSettings();
+
+        ArtifactRepositoryFactory artifactRepositoryFactory = (ArtifactRepositoryFactory) embedder
+                                                                                                  .lookup( ArtifactRepositoryFactory.ROLE );
+
+        // TODO: Switch the default repository layout id to "default" when the
+        // conversion is done.
+        String repoLayoutId = "legacy";
+
+        if ( commandLine.hasOption( CLIManager.VERSION_1_REPO ) )
+        {
+            repoLayoutId = "legacy";
+        }
+
+        if ( commandLine.hasOption( CLIManager.VERSION_2_REPO ) )
+        {
+            repoLayoutId = "default";
+        }
+
+        ArtifactRepositoryLayout repositoryLayout = (ArtifactRepositoryLayout) embedder
+                                                                                       .lookup(
+                                                                                                ArtifactRepositoryLayout.ROLE,
+                                                                                                repoLayoutId );
+
+        ArtifactRepository localRepository = getLocalRepository( settings, artifactRepositoryFactory, repositoryLayout );
-            request =
-                new DefaultMavenExecutionRequest( localRepository, settings, eventDispatcher,
-                                                  commandLine.getArgList(),
-                                                  FileUtils.getFiles( userDir, includes, excludes ), userDir.getPath() );
+            request = new DefaultMavenExecutionRequest( localRepository, settings, eventDispatcher,
+                                                        commandLine.getArgList(), FileUtils.getFiles( userDir,
+                                                                                                      includes,
+                                                                                                      excludes ),
+                                                        userDir.getPath() );
-// ----------------------------------------------------------------------
-// System properties handling
-// ----------------------------------------------------------------------
+    // ----------------------------------------------------------------------
+    // System properties handling
+    // ----------------------------------------------------------------------
-// ----------------------------------------------------------------------
-// Command line manager
-// ----------------------------------------------------------------------
+    // ----------------------------------------------------------------------
+    // Command line manager
+    // ----------------------------------------------------------------------
+        public static final char VERSION_1_REPO = 'A';
+
+        // TODO: this is a hack until we can get the main repo converted...
+        public static final char VERSION_2_REPO = 'a';
+
-            options.addOption( OptionBuilder.withLongOpt( "nobanner" ).withDescription( "Suppress logo banner" ).create(
-                NO_BANNER ) );
-            options.addOption( OptionBuilder.withLongOpt( "define" ).hasArg().withDescription(
-                "Define a system property" ).create( SET_SYSTEM_PROPERTY ) );
-            options.addOption( OptionBuilder.withLongOpt( "offline" ).hasArg().withDescription( "Work offline" ).create(
-                WORK_OFFLINE ) );
-            options.addOption( OptionBuilder.withLongOpt( "mojoDescriptors" ).withDescription(
-                "Display available mojoDescriptors" ).create( LIST_GOALS ) );
-            options.addOption( OptionBuilder.withLongOpt( "help" ).withDescription( "Display help information" ).create(
-                HELP ) );
-            options.addOption( OptionBuilder.withLongOpt( "offline" ).withDescription( "Build is happening offline" ).create(
-                WORK_OFFLINE ) );
-            options.addOption( OptionBuilder.withLongOpt( "version" ).withDescription( "Display version information" ).create(
-                VERSION ) );
-            options.addOption( OptionBuilder.withLongOpt( "debug" ).withDescription( "Produce execution debug output" ).create(
-                DEBUG ) );
-            options.addOption( OptionBuilder.withLongOpt( "reactor" ).withDescription(
-                "Execute goals for project found in the reactor" ).create( REACTOR ) );
-            options.addOption( OptionBuilder.withLongOpt( "non-recursive" ).withDescription(
-                "Do not recurse into sub-projects" ).create( NON_RECURSIVE ) );
+            options.addOption( OptionBuilder.withLongOpt( "nobanner" ).withDescription( "Suppress logo banner" )
+                                            .create( NO_BANNER ) );
+            options
+                   .addOption( OptionBuilder.withLongOpt( "define" ).hasArg()
+                                            .withDescription( "Define a system property" ).create( SET_SYSTEM_PROPERTY ) );
+            options.addOption( OptionBuilder.withLongOpt( "offline" ).hasArg().withDescription( "Work offline" )
+                                            .create( WORK_OFFLINE ) );
+            options
+                   .addOption( OptionBuilder.withLongOpt( "mojoDescriptors" )
+                                            .withDescription( "Display available mojoDescriptors" ).create( LIST_GOALS ) );
+            options.addOption( OptionBuilder.withLongOpt( "help" ).withDescription( "Display help information" )
+                                            .create( HELP ) );
+            options.addOption( OptionBuilder.withLongOpt( "offline" ).withDescription( "Build is happening offline" )
+                                            .create( WORK_OFFLINE ) );
+            options.addOption( OptionBuilder.withLongOpt( "version" ).withDescription( "Display version information" )
+                                            .create( VERSION ) );
+            options.addOption( OptionBuilder.withLongOpt( "debug" ).withDescription( "Produce execution debug output" )
+                                            .create( DEBUG ) );
+            options.addOption( OptionBuilder.withLongOpt( "reactor" )
+                                            .withDescription( "Execute goals for project found in the reactor" )
+                                            .create( REACTOR ) );
+            options.addOption( OptionBuilder.withLongOpt( "non-recursive" )
+                                            .withDescription( "Do not recurse into sub-projects" )
+                                            .create( NON_RECURSIVE ) );
+            options.addOption( OptionBuilder.withLongOpt( "v1-local-repository" )
+                                            .withDescription( "Use legacy layout for local artifact repository" )
+                                            .create( VERSION_1_REPO ) );
+
+            options.addOption( OptionBuilder.withLongOpt( "v2-local-repository" )
+                                            .withDescription( "Use new layout for local artifact repository" )
+                                            .create( VERSION_2_REPO ) );
-        public CommandLine parse( String[] args )
-            throws ParseException
+        public CommandLine parse( String[] args ) throws ParseException
-// ----------------------------------------------------------------------
-//
-// ----------------------------------------------------------------------
+    // ----------------------------------------------------------------------
+    //
+    // ----------------------------------------------------------------------
-//throw a configuration exception
+                //throw a configuration exception
-    protected static ArtifactRepository getLocalRepository( MavenSettings settings, ArtifactRepositoryFactory repoFactory )
-        throws Exception
+    protected static ArtifactRepository getLocalRepository( MavenSettings settings,
+                                                           ArtifactRepositoryFactory repoFactory,
+                                                           ArtifactRepositoryLayout repositoryLayout ) throws Exception
-            localRepository =
-                new File( userConfigurationDirectory, MavenConstants.MAVEN_REPOSITORY ).getAbsolutePath();
+            localRepository = new File( userConfigurationDirectory, MavenConstants.MAVEN_REPOSITORY ).getAbsolutePath();
-// TODO [BP]: this should not be necessary - grep for and remove
+        // TODO [BP]: this should not be necessary - grep for and remove
-        return repoFactory.createArtifactRepository( repo, settings );
+        return repoFactory.createArtifactRepository( repo, settings, repositoryLayout );

INS26 INS40 INS23 INS23 INS44 INS60 INS25 INS25 INS60 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 INS43 INS42 INS43 INS59 INS32 INS8 INS32 INS8 INS43 INS59 INS42 INS13 INS42 INS13 INS21 INS21 INS42 INS42 INS42 INS45 INS42 INS42 INS40 INS21 INS42 INS42 INS40 INS21 INS42 INS42 INS11 INS32 INS32 INS42 INS7 INS7 INS43 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS40 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45