o Re-introduced distinction between user properties and system properties. We have use cases like interpolation and SUREFIRE-121 where we would like to handle user-specified props specially so a single properties soup is not up to the job. However, I opted not to follow the approach from 2.x where we also collect both system properties and user properties in a combined set called execution properties. Code that embeds Maven and programmatically creates an execution request should be not required to assemble such a mixed properties instance, it would enable bad behavior from Maven by subtle API misuse. Also, for things like the lifecycle participant that wants to inject properties, it should be cristal clear whether it injects a user or a system property, the semantics of something like getExecutionProperties().setProperty() would be unclear however.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@796900 13f79535-47bb-0310-9956-ffa450edef68

-        Properties executionProperties = new Properties();
+        Properties systemProperties = new Properties();
-        populateProperties( commandLine, executionProperties, userProperties );
+        populateProperties( commandLine, systemProperties, userProperties );
-            .setProperties( executionProperties ) // optional
+            .setSystemProperties( systemProperties )
+            .setUserProperties( userProperties )
-        String localRepoProperty = request.getProperties().getProperty( MavenCli.LOCAL_REPO_PROPERTY );
+        String localRepoProperty = request.getUserProperties().getProperty( MavenCli.LOCAL_REPO_PROPERTY );
+
+        if ( localRepoProperty == null )
+        {
+            localRepoProperty = request.getSystemProperties().getProperty( MavenCli.LOCAL_REPO_PROPERTY );
+        }
-    static void populateProperties( CommandLine commandLine, Properties executionProperties, Properties userProperties )
+    static void populateProperties( CommandLine commandLine, Properties systemProperties, Properties userProperties )
-                executionProperties.setProperty( "env." + e.getKey().toString(), e.getValue().toString() );
+                systemProperties.setProperty( "env." + e.getKey().toString(), e.getValue().toString() );
-
-            executionProperties.putAll( userProperties );
-        executionProperties.putAll( System.getProperties() );
+        systemProperties.putAll( System.getProperties() );
-    private static void setCliProperty( String property, Properties executionProperties )
+    private static void setCliProperty( String property, Properties properties )
-        executionProperties.setProperty( name, value );
+        properties.setProperty( name, value );

INS25 UPD42 UPD42 INS27 INS8 UPD42 UPD42 INS32 INS42 INS33 INS21 UPD42 UPD42 MOV32 INS42 INS42 INS7 UPD42 UPD42 UPD42 INS42 INS32 UPD42 UPD42 INS32 INS42 INS40 UPD42 UPD42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL42 DEL42 DEL42 DEL32 DEL21