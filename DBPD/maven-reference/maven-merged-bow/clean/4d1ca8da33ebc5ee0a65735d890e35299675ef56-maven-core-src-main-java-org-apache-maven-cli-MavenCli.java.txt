o Removed AuthenticationInfoProvider stuff
o Added ArtifactRepositoryFactory stuff to construct with AuthenticationInfo if possible.
o Added UserModelBuilder stuff for componentizing UserModel construction.
  -> DefaultUserModelBuilder has a configuration point 'userModelPath' which can redirect where it reads user.xml from (${user.home} is substitutable here).
o Added warning message to deployment plugin when deployment repo has no authentication info available.
o Added warning message for repos with null <id/> (auth info cannot be assigned here).
o Added a couple of debug-level messages for aid in debugging repo- and userModel-related problems.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163558 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.repository.ArtifactRepositoryFactory;
+import org.apache.maven.model.Repository;
+import org.apache.maven.model.user.UserModelBuilder;
+import org.apache.maven.model.user.UserModelUtils;
-import org.apache.maven.util.UserModelUtils;
-        ArtifactRepository localRepository = getLocalRepository();
-
-        UserModel userModel = UserModelUtils.getUserModel();
+        // ----------------------------------------------------------------------
+        // Now that we have everything that we need we will fire up plexus and
+        // bring the maven component to life for use.
+        // ----------------------------------------------------------------------
+
+        ArtifactEnabledEmbedder embedder = new ArtifactEnabledEmbedder();
+
+        embedder.start( classWorld );
+
+        UserModelBuilder userModelBuilder = (UserModelBuilder) embedder.lookup( UserModelBuilder.ROLE );
+        
+        UserModel userModel = userModelBuilder.buildUserModel();
+        
+        ArtifactRepositoryFactory artifactRepositoryFactory = (ArtifactRepositoryFactory) embedder
+                                                                                                  .lookup( ArtifactRepositoryFactory.ROLE );
+
+        ArtifactRepository localRepository = getLocalRepository( userModel, artifactRepositoryFactory );
-        // ----------------------------------------------------------------------
-        // Now that we have everything that we need we will fire up plexus and
-        // bring the maven component to life for use.
-        // ----------------------------------------------------------------------
-
-        ArtifactEnabledEmbedder embedder = new ArtifactEnabledEmbedder();
-
-        embedder.start( classWorld );
-
-    protected static ArtifactRepository getLocalRepository()
+    protected static ArtifactRepository getLocalRepository( UserModel userModel, ArtifactRepositoryFactory repoFactory )
-        UserModel userModel = UserModelUtils.getUserModel();
-        return new ArtifactRepository( "local", "file://" + localRepository );
+        
+        Repository repo = new Repository();
+
+        repo.setId( "local" );
+
+        repo.setUrl( "file://" + localRepository );
+
+        return repoFactory.createArtifactRepository( repo, userModel );

MOV26 INS26 INS26 INS26 INS40 INS40 INS40 UPD40 MOV60 MOV60 MOV25 INS44 INS44 INS60 INS60 MOV43 INS42 INS43 INS42 INS60 INS21 INS21 INS41 INS43 INS43 INS59 MOV43 INS59 INS42 INS43 INS59 INS32 INS32 INS32 INS42 UPD42 INS11 INS42 INS42 INS11 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS45 INS42 INS42 MOV27 INS42 INS42 INS42 INS42 INS43 INS32 UPD42 UPD42 INS43 INS32 INS42 INS42 INS42 UPD43 MOV43 INS42 UPD42 MOV42 INS42 INS40 INS42 INS42 INS42 INS40 UPD42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL45 DEL14 DEL41