add metadata for new artifact

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@290084 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.repository.metadata.Snapshot;
+import org.apache.maven.artifact.repository.metadata.Versioning;
+import org.apache.maven.tools.repoclean.digest.Digestor;
+import java.security.NoSuchAlgorithmException;
+    private Digestor artifactDigestor;
+
-        mergeMetadata( metadataSource, metadataTarget, transaction, artifactReporter, reportOnly );
+        Metadata sourceMetadata = readMetadata( metadataSource, artifact );
+        if ( sourceMetadata.getVersioning() == null )
+        {
+            sourceMetadata.setVersioning( new Versioning() );
+        }
+        if ( !sourceMetadata.getVersioning().getVersions().contains( artifact.getBaseVersion() ) )
+        {
+            sourceMetadata.getVersioning().addVersion( artifact.getBaseVersion() );
+        }
+        mergeMetadata( sourceMetadata, metadataTarget, reportOnly );
-        mergeMetadata( metadataSource, metadataTarget, transaction, artifactReporter, reportOnly );
+        sourceMetadata = readMetadata( metadataSource, artifact );
+        if ( artifact.isSnapshot() )
+        {
+            if ( sourceMetadata.getVersioning() == null )
+            {
+                sourceMetadata.setVersioning( new Versioning() );
+            }
+            if ( sourceMetadata.getVersioning().getSnapshot() == null )
+            {
+                sourceMetadata.getVersioning().setSnapshot( new Snapshot() );
+            }
+
+            int i = artifact.getVersion().indexOf( '-' );
+            if ( i >= 0 )
+            {
+                Snapshot snapshot = sourceMetadata.getVersioning().getSnapshot();
+                snapshot.setTimestamp( artifact.getVersion().substring( 0, i ) );
+                snapshot.setBuildNumber( Integer.valueOf( artifact.getVersion().substring( i + 1 ) ).intValue() );
+            }
+        }
+        mergeMetadata( sourceMetadata, metadataTarget, reportOnly );
-    private void mergeMetadata( File source, File target, RewriteTransaction transaction, Reporter artifactReporter,
-                                boolean reportOnly )
-        throws IOException, DigestException, ReportWriteException, XmlPullParserException
+    private void mergeMetadata( Metadata sourceMetadata, File target, boolean reportOnly )
+        throws IOException, DigestException, XmlPullParserException, NoSuchAlgorithmException
-        if ( source.exists() )
+        if ( target.exists() )
-            if ( !target.exists() )
+            Metadata targetMetadata = null;
+
+            Reader reader = null;
+
+            try
-                copyMetadata( source, target, transaction, artifactReporter, reportOnly );
-            }
-            else
-            {
+                reader = new FileReader( target );
+
-                Metadata sourceMetadata = null;
+                targetMetadata = mappingReader.read( reader );
+            }
+            finally
+            {
+                IOUtil.close( reader );
+            }
-                Reader reader = null;
+            boolean changed = targetMetadata.merge( sourceMetadata );
+            if ( changed )
+            {
+                Writer writer = null;
-                    reader = new FileReader( source );
+                    target.getParentFile().mkdirs();
+                    writer = new FileWriter( target );
-                    sourceMetadata = mappingReader.read( reader );
+                    MetadataXpp3Writer mappingWriter = new MetadataXpp3Writer();
+
+                    mappingWriter.write( writer, targetMetadata );
+
+                    if ( !reportOnly )
+                    {
+                        File digestFile = artifactDigestor.getDigestFile( target, Digestor.MD5 );
+                        artifactDigestor.createArtifactDigest( target, digestFile, Digestor.MD5 );
+                        digestFile = artifactDigestor.getDigestFile( target, Digestor.SHA );
+                        artifactDigestor.createArtifactDigest( target, digestFile, Digestor.SHA );
+                    }
-                    IOUtil.close( reader );
-                    reader = null;
+                    IOUtil.close( writer );
-
-                Metadata targetMetadata = null;
-
-                try
-                {
-                    reader = new FileReader( target );
-
-                    targetMetadata = mappingReader.read( reader );
-                }
-                finally
-                {
-                    IOUtil.close( reader );
-                }
-
-                boolean changed = false;
-
-                changed |= targetMetadata.merge( sourceMetadata );
-
-                if ( changed )
-                {
-                    Writer writer = null;
-                    try
-                    {
-                        target.getParentFile().mkdirs();
-                        writer = new FileWriter( target );
-
-                        MetadataXpp3Writer mappingWriter = new MetadataXpp3Writer();
-
-                        mappingWriter.write( writer, targetMetadata );
-                    }
-                    finally
-                    {
-                        IOUtil.close( writer );
-                    }
-                }
-
-                digestVerifier.verifyDigest( source, target, transaction, artifactReporter, reportOnly );
+    private Metadata readMetadata( File source, Artifact artifact )
+        throws IOException, XmlPullParserException
+    {
+        Metadata sourceMetadata = null;
+
+        if ( source.exists() )
+        {
+            Reader reader = null;
+
+            try
+            {
+                reader = new FileReader( source );
+
+                MetadataXpp3Reader mappingReader = new MetadataXpp3Reader();
+
+                sourceMetadata = mappingReader.read( reader );
+            }
+            finally
+            {
+                IOUtil.close( reader );
+            }
+        }
+
+        if ( sourceMetadata == null )
+        {
+            sourceMetadata = new Metadata();
+
+            sourceMetadata.setGroupId( artifact.getGroupId() );
+            sourceMetadata.setArtifactId( artifact.getArtifactId() );
+            sourceMetadata.setVersion( artifact.getBaseVersion() );
+        }
+        return sourceMetadata;
+    }
+

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 MOV44 MOV43 INS31 INS83 INS43 INS59 UPD43 MOV8 INS83 INS43 INS42 MOV44 INS44 INS43 INS43 INS8 INS42 INS42 INS60 INS25 INS25 INS21 INS21 INS25 INS21 UPD43 UPD42 UPD42 INS42 INS43 INS42 INS42 INS42 MOV60 INS25 INS25 INS41 INS43 INS59 INS27 INS8 INS38 INS8 INS32 INS7 INS32 INS8 INS32 UPD42 MOV32 MOV60 INS42 MOV32 INS8 INS27 INS8 INS42 INS42 INS42 INS32 INS32 INS33 INS21 INS32 INS21 INS42 INS42 INS42 MOV42 INS42 INS32 INS42 INS42 INS25 INS25 INS60 INS25 INS42 INS42 INS42 MOV42 INS60 MOV54 INS42 INS33 INS21 INS21 INS21 INS21 INS42 MOV42 INS42 UPD42 MOV42 INS42 INS32 INS32 INS42 INS32 INS32 INS42 MOV42 INS42 INS27 INS8 INS27 INS8 INS39 INS59 INS27 INS8 INS43 INS59 INS7 INS32 INS32 INS32 INS42 INS42 INS14 INS32 INS42 INS42 INS42 INS32 UPD42 MOV42 INS32 INS32 INS33 INS21 INS32 INS33 INS21 INS42 INS32 INS42 INS34 INS60 INS21 INS21 MOV60 MOV32 INS42 INS42 INS33 INS60 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS13 INS43 INS59 INS32 INS32 INS43 INS59 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS14 INS42 UPD42 MOV42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS25 INS42 INS42 INS14 INS42 INS43 INS42 INS42 INS43 INS32 INS42 INS32 INS42 INS34 INS42 INS32 INS42 INS38 INS8 INS43 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS32 INS42 INS60 INS21 INS21 INS21 INS42 INS32 INS42 INS27 INS43 INS59 INS32 INS7 INS32 INS42 INS42 INS42 INS34 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS40 INS42 INS32 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS40 DEL42 DEL32 DEL21 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL44 DEL38 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL9 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL25 DEL8 DEL42 DEL33 DEL7 DEL21