o Migrated from StAX to XPP to have us focus on a single XML parser for now

git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@772013 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.Reader;
-import javax.xml.stream.XMLInputFactory;
-import javax.xml.stream.XMLStreamConstants;
-import javax.xml.stream.XMLStreamException;
-import javax.xml.stream.XMLStreamReader;
-
+import org.codehaus.plexus.util.IOUtil;
+import org.codehaus.plexus.util.ReaderFactory;
+import org.codehaus.plexus.util.xml.pull.MXParser;
+import org.codehaus.plexus.util.xml.pull.XmlPullParser;
+import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
-        XMLInputFactory xmlInputFactory = new com.ctc.wstx.stax.WstxInputFactory();
-        xmlInputFactory.setProperty( XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, Boolean.FALSE );
-        xmlInputFactory.setProperty( XMLInputFactory.IS_NAMESPACE_AWARE, Boolean.FALSE );
-        XMLStreamReader xmlStreamReader = null;
+        Reader reader = null;
-            xmlStreamReader = xmlInputFactory.createXMLStreamReader( inputStream );
+            reader = ReaderFactory.newXmlReader( inputStream );
+
+            XmlPullParser parser = new MXParser();
+            parser.setInput( reader );
-            for ( ;; xmlStreamReader.next() )
+            for ( int type = parser.getEventType();; type = parser.next() )
-                int type = xmlStreamReader.getEventType();
-
-                    case XMLStreamConstants.CDATA:
-                    case XMLStreamConstants.CHARACTERS:
+                    case XmlPullParser.TEXT:
-                            tagValue.append( xmlStreamReader.getTextCharacters(), xmlStreamReader.getTextStart(), xmlStreamReader.getTextLength() );
+                            tagValue.append( parser.getText() );
-
-                    case XMLStreamConstants.START_ELEMENT:
+                    case XmlPullParser.START_TAG:
-                        tagName = uri.getUriFor( xmlStreamReader.getName().getLocalPart(), depth );
+                        tagName = uri.getUriFor( parser.getName(), depth );
-                            uri.addTag( xmlStreamReader.getName().getLocalPart() + "#collection" );
+                            uri.addTag( parser.getName() + "#collection" );
-                            uri.addTag( xmlStreamReader.getName().getLocalPart() + "#set" );
+                            uri.addTag( parser.getName() + "#set" );
-                            uri.addTag( xmlStreamReader.getName().getLocalPart() );
+                            uri.addTag( parser.getName() );
-                    }
-                    case XMLStreamConstants.ATTRIBUTE:
-                    {
-                        for ( int i = 0; i < xmlStreamReader.getAttributeCount(); i++ )
+
+                        for ( int i = 0; i < parser.getAttributeCount(); i++ )
-                            attributes.put( tagName + "#property/" + xmlStreamReader.getAttributeName( i ).getLocalPart(), xmlStreamReader.getAttributeValue( i ) );
+                            attributes.put( tagName + "#property/" + parser.getAttributeName( i ),
+                                            parser.getAttributeValue( i ) );
-                    case XMLStreamConstants.END_ELEMENT:
+                    case XmlPullParser.END_TAG:
-                    case XMLStreamConstants.END_DOCUMENT:
+                    case XmlPullParser.END_DOCUMENT:
-                            attributes.clear();
+
-        catch ( XMLStreamException e )
+        catch ( XmlPullParserException e )
-            throw new IOException( ":" + e.toString() );
+            throw (IOException) new IOException( "Failed to parser POM:" + e.toString() ).initCause( e );
-            if ( xmlStreamReader != null )
-            {
-                try
-                {
-                    xmlStreamReader.close();
-                }
-                catch ( XMLStreamException e )
-                {
-                    e.printStackTrace();
-                }
-            }
-            try
-            {
-                inputStream.close();
-            }
-            catch ( IOException e )
-            {
-
-            }
+            IOUtil.close( reader );

MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS40 INS40 UPD40 UPD40 UPD40 UPD40 UPD43 MOV8 UPD42 UPD42 INS60 INS21 INS43 INS59 INS32 INS58 INS7 UPD43 UPD42 INS42 INS42 INS14 INS42 INS42 INS42 INS39 INS59 INS42 INS32 UPD42 INS11 UPD42 INS42 UPD42 UPD42 INS43 INS42 INS32 UPD42 MOV42 MOV42 MOV43 INS32 INS42 INS42 INS42 UPD40 UPD40 INS24 INS10 UPD40 UPD40 MOV14 INS42 INS42 MOV58 INS27 MOV37 INS8 INS42 INS32 INS21 UPD45 MOV32 INS42 INS42 INS32 UPD42 INS42 INS42 INS27 INS32 UPD42 UPD42 INS32 MOV32 INS42 INS45 INS32 INS42 INS42 INS42 UPD42 MOV42 MOV42 INS32 UPD42 INS42 INS42 INS42 UPD42 MOV42 MOV42 DEL42 DEL43 DEL42 DEL40 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL40 DEL40 DEL32 DEL21 DEL42 DEL42 DEL40 DEL40 DEL32 DEL21 DEL32 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL40 DEL49 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL42 DEL32 DEL32 DEL42 DEL32 DEL42 DEL32 DEL40 DEL49 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL42 DEL45 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL10 DEL8 DEL42 DEL42 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL25 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL44 DEL8 DEL12 DEL54 DEL8