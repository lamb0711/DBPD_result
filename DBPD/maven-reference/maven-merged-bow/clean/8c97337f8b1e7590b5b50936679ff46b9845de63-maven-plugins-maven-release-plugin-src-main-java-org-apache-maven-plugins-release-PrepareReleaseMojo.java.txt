release plugin bugfixes

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@279051 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.DependencyManagement;
+import org.apache.maven.model.PluginManagement;
-    private boolean interactive = true;
+    private boolean interactive;
-
-            
+
-                if ( f.getPath().equals( "pom.xml.backup" ) || f.getPath().equals( releaseProgressFilename ) )
+                if ( "pom.xml.backup".equals( f.getPath() ) || f.getPath().equals( releaseProgressFilename ) )
-                throw new MojoExecutionException( "The project " + project.getGroupId() + ":" + project.getArtifactId() + " isn't a snapshot (" + project.getVersion() + ")." );
+                throw new MojoExecutionException( "The project " + project.getGroupId() + ":" +
+                    project.getArtifactId() + " isn't a snapshot (" + project.getVersion() + ")." );
-            if ( project.hasParent() )
+            if ( model.getParent() != null )
-            Map artifactMap = project.getArtifactMap();
-
-                    String conflictId = ArtifactUtils.artifactId( dep.getGroupId(), dep.getArtifactId(), dep.getType(),
-                                                                  dep.getClassifier(), dep.getVersion() );
+                    // Avoid in dep mgmt
+                    if ( dep.getVersion() != null )
+                    {
+                        String resolvedVersion = getVersionResolver().getResolvedVersion( dep.getGroupId(),
+                                                                                          dep.getArtifactId() );
-                    Artifact artifact = (Artifact) artifactMap.get( conflictId );
+                        if ( resolvedVersion != null )
+                        {
+                            dep.setVersion( resolvedVersion );
+                        }
+                    }
+                }
+            }
-                    String version = resolveVersion( artifact, "dependency", project );
+            DependencyManagement dependencyManagement = model.getDependencyManagement();
+            dependencies = dependencyManagement != null ? dependencyManagement.getDependencies() : null;
-                    dep.setVersion( version );
+            if ( dependencies != null )
+            {
+                for ( Iterator i = dependencies.iterator(); i.hasNext(); )
+                {
+                    Dependency dep = (Dependency) i.next();
+
+                    if ( dep.getVersion() != null )
+                    {
+                        String resolvedVersion = getVersionResolver().getResolvedVersion( dep.getGroupId(),
+                                                                                          dep.getArtifactId() );
+
+                        if ( resolvedVersion != null )
+                        {
+                            dep.setVersion( resolvedVersion );
+                        }
+                    }
-                Map pluginArtifactMap = project.getPluginArtifactMap();
-
-                for ( Iterator i = plugins.iterator(); i.hasNext(); )
+                if ( plugins != null )
-                    Plugin plugin = (Plugin) i.next();
+                    for ( Iterator i = plugins.iterator(); i.hasNext(); )
+                    {
+                        Plugin plugin = (Plugin) i.next();
-                    String pluginId = plugin.getKey();
+                        // Avoid in plugin mgmt
+                        if ( plugin.getVersion() != null )
+                        {
+                            String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),
+                                                                                              plugin.getArtifactId() );
-                    Artifact artifact = (Artifact) pluginArtifactMap.get( pluginId );
+                            if ( resolvedVersion != null )
+                            {
+                                plugin.setVersion( resolvedVersion );
+                            }
+                        }
+                    }
+                }
-                    String version = resolveVersion( artifact, "plugin", project );
+                PluginManagement pluginManagement = build.getPluginManagement();
+                plugins = pluginManagement != null ? pluginManagement.getPlugins() : null;
-                    plugin.setVersion( version );
+                if ( plugins != null )
+                {
+                    for ( Iterator i = plugins.iterator(); i.hasNext(); )
+                    {
+                        Plugin plugin = (Plugin) i.next();
+
+                        if ( plugin.getVersion() != null )
+                        {
+                            String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),
+                                                                                              plugin.getArtifactId() );
+
+                            if ( resolvedVersion != null )
+                            {
+                                plugin.setVersion( resolvedVersion );
+                            }
+                        }
+                    }
-                Map extensionArtifactMap = project.getExtensionArtifactMap();
-
-                    String pluginId = ArtifactUtils.versionlessKey( ext.getGroupId(), ext.getArtifactId() );
+                    String resolvedVersion = getVersionResolver().getResolvedVersion( ext.getGroupId(),
+                                                                                      ext.getArtifactId() );
-                    Artifact artifact = (Artifact) extensionArtifactMap.get( pluginId );
-
-                    String version = resolveVersion( artifact, "extension", project );
-
-                    ext.setVersion( version );
+                    if ( resolvedVersion != null )
+                    {
+                        ext.setVersion( resolvedVersion );
+                    }
-                Map reportArtifactMap = project.getReportArtifactMap();
-
-                    String pluginId = plugin.getKey();
+                    String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),
+                                                                                      plugin.getArtifactId() );
-                    Artifact artifact = (Artifact) reportArtifactMap.get( pluginId );
-
-                    String version = resolveVersion( artifact, "report", project );
-
-                    plugin.setVersion( version );
+                    if ( resolvedVersion != null )
+                    {
+                        plugin.setVersion( resolvedVersion );
+                    }
-                
+
-                List plugins = releaseProject.getBuildPlugins();
+                // Use original - don't want the lifecycle introduced ones
+                // TODO: but is it the right settings?
+                Build originalModel = releaseProject.getOriginalModel().getBuild();
+                List plugins = originalModel != null ? originalModel.getPlugins() : null;
-                    
-                    releasePomPath = releasePomPath.substring( canonicalBasedir.length() );
-                    
+
+                    releasePomPath = releasePomPath.substring( canonicalBasedir.length() + 1 );
+
-        path.replace( File.separatorChar, '/' );
+        path = path.replace( File.separatorChar, '/' );

INS26 INS26 INS40 INS40 MOV60 INS7 INS21 INS25 INS25 INS42 MOV32 INS27 UPD43 INS7 INS27 INS8 MOV27 INS8 INS32 INS33 UPD42 UPD42 INS42 INS16 INS42 INS33 INS24 MOV60 INS25 MOV60 INS21 INS25 MOV60 MOV24 INS24 INS60 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 INS27 INS32 INS33 INS58 MOV32 INS8 INS27 INS8 UPD43 INS7 INS27 INS8 MOV58 MOV32 INS8 INS43 INS59 MOV32 INS25 INS42 INS33 INS42 INS42 INS43 INS59 MOV60 INS25 INS42 INS33 INS24 UPD42 UPD42 INS42 INS16 INS42 INS33 INS24 INS25 MOV60 INS60 INS25 INS42 INS42 INS32 INS16 INS45 INS27 INS8 INS42 INS42 INS32 UPD43 INS27 INS8 MOV58 INS32 INS8 UPD42 UPD42 INS27 INS32 INS33 INS58 INS32 INS8 INS27 INS8 MOV43 INS59 INS27 INS8 INS32 INS42 INS27 INS32 INS33 MOV32 INS33 MOV60 INS25 INS42 INS42 UPD42 UPD42 INS11 INS32 INS33 MOV60 INS25 INS42 UPD42 MOV42 MOV60 INS25 INS42 INS33 INS42 INS42 INS43 INS59 INS42 INS42 INS60 INS25 UPD42 INS42 INS33 MOV21 UPD42 MOV42 INS32 INS42 INS33 MOV21 INS42 INS42 INS42 INS33 UPD42 MOV42 UPD42 MOV42 INS27 INS8 INS43 INS32 INS42 INS42 INS27 INS8 INS27 INS8 INS42 INS42 INS32 INS43 INS59 INS27 INS8 INS32 UPD42 INS32 INS42 INS32 INS32 INS27 UPD42 MOV32 INS42 INS33 MOV21 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS32 INS42 INS33 INS21 INS32 INS33 MOV60 INS25 INS42 INS42 INS42 INS42 INS11 INS32 INS33 INS60 INS25 UPD42 MOV42 UPD42 UPD42 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV32 INS34 UPD42 MOV42 INS32 INS42 INS32 INS32 INS32 UPD42 MOV42 INS42 INS27 INS8 INS43 INS32 INS42 INS42 MOV43 INS59 INS27 INS8 UPD42 UPD42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 UPD42 INS42 INS33 MOV21 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS32 UPD42 INS32 INS32 INS32 INS42 INS32 INS32 INS32 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL9 DEL45 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL42 DEL32 DEL59 DEL60 DEL32 DEL42 DEL32 DEL45 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL32 DEL11 DEL59 DEL60 DEL8 DEL24 DEL8 DEL25 DEL42 DEL43 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL45 DEL42 DEL32 DEL59 DEL60 DEL8 DEL24 DEL32