o Avoided creation of interpolation value sources that only apply to local builds when we have no project directory

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@783831 13f79535-47bb-0310-9956-ffa450edef68

-        String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;
-
-        if ( modelProperties != null )
-        {
-            timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );
-        }
-        ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false ){
-            public Object getValue( String expression )
-            {
-                if ( projectDir != null && "basedir".equals( expression ) )
-                {
-                    return projectDir.getAbsolutePath();
-                }
-                return null;
-            }
-        },
-        PROJECT_PREFIXES, true );
-        ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false ){
-            public Object getValue( String expression )
-            {
-                if ( projectDir != null && "baseUri".equals( expression ) )
-                {
-                    return projectDir.getAbsoluteFile().toURI().toString();
-                }
-                return null;
-            }
-        },
-        PROJECT_PREFIXES, false );
-        
-        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );
-        
-        valueSources.add( basedirValueSource );
-        valueSources.add( baseUriValueSource );
-        valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );
+        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );
+
+        if ( projectDir != null )
+        {
+            ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )
+            {
+                public Object getValue( String expression )
+                {
+                    if ( "basedir".equals( expression ) )
+                    {
+                        return projectDir.getAbsolutePath();
+                    }
+                    return null;
+                }
+            }, PROJECT_PREFIXES, true );
+            valueSources.add( basedirValueSource );
+
+            ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )
+            {
+                public Object getValue( String expression )
+                {
+                    if ( "baseUri".equals( expression ) )
+                    {
+                        return projectDir.getAbsoluteFile().toURI().toString();
+                    }
+                    return null;
+                }
+            }, PROJECT_PREFIXES, false );
+            valueSources.add( baseUriValueSource );
+
+            String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;
+            if ( modelProperties != null )
+            {
+                timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );
+            }
+            valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );
+        }
+
+
+
+
+
-        
+

INS25 MOV27 INS8 MOV60 MOV21 MOV60 MOV21 MOV60 MOV25 MOV21 MOV32 MOV32 DEL27 DEL42 DEL33 DEL27 DEL27