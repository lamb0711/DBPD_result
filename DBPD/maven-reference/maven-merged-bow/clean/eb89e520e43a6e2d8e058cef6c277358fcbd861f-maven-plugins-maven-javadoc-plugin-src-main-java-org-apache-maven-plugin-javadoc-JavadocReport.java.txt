MNG-891(Javadoc fails to include libraries): Readded cmd.createArgument().setValue( ... ) for all elements in the arguments list; Formatted code.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@280832 13f79535-47bb-0310-9956-ffa450edef68

- * Generates documentation for the Java code in the project using the standard 
+ * Generates documentation for the Java code in the project using the standard
- * 
+ *
- * 
+ *
- * 
+ *
- * 
+ *
-     * Specifies the destination directory where javadoc saves the generated HTML files. 
+     * Specifies the destination directory where javadoc saves the generated HTML files.
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * Specifies the maximum Java heap size to be used when launching the javadoc executable. 
+     * Specifies the maximum Java heap size to be used when launching the javadoc executable.
-     * 
+     *
-     * Specifies the minimum Java heap size to be used when launching the javadoc executable. 
+     * Specifies the minimum Java heap size to be used when launching the javadoc executable.
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * Specifies the title to be placed near the top of the overview summary file. 
+     * Specifies the title to be placed near the top of the overview summary file.
-     * 
+     *
-     * Excludes any "doc-files" subdirectories with the given names. 
+     * Excludes any "doc-files" subdirectories with the given names.
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * Omits the class/interface hierarchy pages from the generated docs. 
+     * Omits the class/interface hierarchy pages from the generated docs.
-     * 
+     *
-     * 
+     *
-     * Splits the index file into multiple files, alphabetically, one file per letter, plus a file for any index entries that 
-     * start with non-alphabetical characters. 
+     * Splits the index file into multiple files, alphabetically, one file per letter, plus a file for any index entries that
+     * start with non-alphabetical characters.
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * Specifies the title to be placed in the HTML title tag. 
+     * Specifies the title to be placed in the HTML title tag.
-     * 
+     *
+
-            
-            if ( ! javadocDirectory.equals( getOutputDirectory() ) )
+
+            if ( !javadocDirectory.equals( getOutputDirectory() ) )
-            	// we're in site-embedded report mode, so Doxia has set the
-            	// reportOutputDirectory to the basedir of the site.
-            	// Append 'apidocs'.
-            	javadocDirectory = new File( javadocDirectory, "apidocs" );
+                // we're in site-embedded report mode, so Doxia has set the
+                // reportOutputDirectory to the basedir of the site.
+                // Append 'apidocs'.
+                javadocDirectory = new File( javadocDirectory, "apidocs" );
-            
+
-                    if ( ( NumberUtils.isDigits( minmemory.substring( 0, minmemory.length() - 1 ) ) ) && ( minmemory.toLowerCase().endsWith( "m" ) ) )
+                    if ( ( NumberUtils.isDigits( minmemory.substring( 0, minmemory.length() - 1 ) ) )
+                        && ( minmemory.toLowerCase().endsWith( "m" ) ) )
-                    if ( ( model.getOrganization() != null ) && ( !StringUtils.isEmpty( model.getOrganization().getName() ) ) )
+                    if ( ( model.getOrganization() != null )
+                        && ( !StringUtils.isEmpty( model.getOrganization().getName() ) ) )
-                
+
-                    windowtitle = ( model.getName() == null ? model.getArtifactId() : model.getName() ) + " " + model.getVersion() + " API";
+                    windowtitle = ( model.getName() == null ? model.getArtifactId() : model.getName() ) + " "
+                        + model.getVersion() + " API";
+            for ( Iterator it = arguments.iterator(); it.hasNext(); )
+            {
+                String current = (String) it.next();
+                cmd.createArgument().setValue( current );
+            }
+
-     * 
+     *
-            javadocExe = new File( SystemUtils .getJavaHome() + "/../bin", javadocCommand );
+            javadocExe = new File( SystemUtils.getJavaHome() + "/../bin", javadocCommand );
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-            StringTokenizer token = new StringTokenizer( value, ",", false );
+            StringTokenizer token = new StringTokenizer( value, "," );
-     * 
+     *
-     * 
+     *
-     * 
+     *
-     * 
+     *
-    private void addArgIfNotEmpty( List arguments, String key, String value, float requiredJavaVersion, boolean repeatKey )
+    private void addArgIfNotEmpty( List arguments, String key, String value, float requiredJavaVersion,
+                                  boolean repeatKey )
-     * 
+     *
-     * Convenience method that copy the <code>DEFAULT_STYLESHEET_NAME</code> file from the current class 
+     * Convenience method that copy the <code>DEFAULT_STYLESHEET_NAME</code> file from the current class
-     * 
+     *
-     * 
+     *

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS24 INS58 INS32 INS8 MOV43 INS43 INS59 INS42 INS42 INS60 INS21 INS42 INS42 INS32 INS43 INS59 INS32 MOV43 INS42 INS42 INS42 INS42 INS11 INS32 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42 DEL9