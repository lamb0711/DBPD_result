refactor mboot
- model reading separated
- define mboot dependencies in its own POM


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163745 13f79535-47bb-0310-9956-ffa450edef68

+import model.Dependency;
+import model.ModelReader;
-import org.xml.sax.InputSource;
-import org.xml.sax.SAXParseException;
-import org.xml.sax.helpers.DefaultHandler;
+import util.AbstractReader;
-import javax.xml.parsers.SAXParser;
-import javax.xml.parsers.SAXParserFactory;
-import java.io.FileInputStream;
-import java.io.Serializable;
-    // ----------------------------------------------------------------------
-    // These are the bootstrap processes' dependencies
-    // ----------------------------------------------------------------------
-
-    String[] bootstrapDeps = new String[]{"junit/jars/junit-3.8.1.jar",
-                                          "org.codehaus.modello/jars/modello-core-1.0-alpha-1.jar",
-                                          "org.codehaus.modello/jars/modello-xdoc-plugin-1.0-alpha-1.jar",
-                                          "org.codehaus.modello/jars/modello-xml-plugin-1.0-alpha-1.jar",
-                                          "org.codehaus.modello/jars/modello-xpp3-plugin-1.0-alpha-1.jar",
-                                          "plexus/jars/plexus-utils-1.0-alpha-2.jar",
-                                          "surefire/jars/surefire-booter-1.2.jar", "surefire/jars/surefire-1.2.jar",
-                                          "qdox/jars/qdox-1.2.jar"};
-
-    // ----------------------------------------------------------------------
-    // These are plexus' runtime dependencies
-    // ----------------------------------------------------------------------
-
-    String[] plexusDeps = new String[]{"classworlds/jars/classworlds-1.1-alpha-1.jar",
-                                       "plexus/jars/plexus-container-default-1.0-alpha-2.jar"};
-
-                                         "maven-plugins/maven-idea-plugin", "maven-plugins/maven-install-plugin",
-                                         "maven-plugins/maven-jar-plugin", "maven-plugins/maven-plugin-plugin",
-                                         "maven-plugins/maven-resources-plugin", "maven-plugins/maven-surefire-plugin"};
-
-    String[] modelloDeps = new String[]{"classworlds/jars/classworlds-1.1-alpha-1.jar",
-                                        "plexus/jars/plexus-container-default-1.0-alpha-2.jar",
-                                        "org.codehaus.modello/jars/modello-core-1.0-alpha-1.jar",
-                                        "org.codehaus.modello/jars/modello-xdoc-plugin-1.0-alpha-1.jar",
-                                        "org.codehaus.modello/jars/modello-xml-plugin-1.0-alpha-1.jar",
-                                        "org.codehaus.modello/jars/modello-xpp3-plugin-1.0-alpha-1.jar"};
+                                         "maven-plugins/maven-install-plugin", "maven-plugins/maven-jar-plugin",
+                                         "maven-plugins/maven-plugin-plugin", "maven-plugins/maven-resources-plugin",
+                                         "maven-plugins/maven-surefire-plugin"};
-    private List mbootDependencies;
-
+    private IsolatedClassLoader bootstrapClassLoader;
+
-        ModelReader reader = new ModelReader();
+        ModelReader reader = new ModelReader( downloader );
+        repoLocal = mavenRepoLocal;
-        downloader = new ArtifactDownloader( mavenRepoLocal, reader.getRemoteRepositories() );
-        if ( userModelReader.getActiveProxy() != null )
+        if ( online )
-            Proxy proxy = userModelReader.getActiveProxy();
-            downloader.setProxy( proxy.getHost(), proxy.getPort(), proxy.getUserName(), proxy.getPassword() );
+            downloader = new ArtifactDownloader( repoLocal, reader.getRemoteRepositories() );
+            if ( userModelReader.getActiveProxy() != null )
+            {
+                Proxy proxy = userModelReader.getActiveProxy();
+                downloader.setProxy( proxy.getHost(), proxy.getPort(), proxy.getUserName(), proxy.getPassword() );
+            }
-        repoLocal = downloader.getMavenRepoLocal().getPath();
-
-        reader = new ModelReader();
+        reader = new ModelReader( downloader );
-        mbootDependencies = Arrays.asList( bootstrapDeps );
+        reader.parse( new File( basedir, "maven-mboot2/pom.xml" ) );
+        bootstrapClassLoader = createClassloaderFromDependencies( reader.getDependencies() );
-        if ( online )
-        {
-            checkMBootDeps();
-            checkModelloDeps();
-        }
+        reader = new ModelReader( downloader );
-        createToolsClassLoader();
-
-            if ( reader.artifactId.equals( "maven-core" ) )
+            if ( reader.getArtifactId().equals( "maven-core" ) )
-        addPluginGeneratorDependencies();
+        addPluginGeneratorDependencies( bootstrapClassLoader );
-        String core = new File( dist, "core" ).getAbsolutePath();
+        File core = new File( dist, "core" );
-        FileUtils.mkdir( new File( core ).getPath() );
+        core.mkdirs();
-        String boot = new File( dist, "core/boot" ).getAbsolutePath();
+        File boot = new File( dist, "core/boot" );
-        FileUtils.mkdir( new File( boot ).getPath() );
-
-        for ( int i = 0; i < plexusDeps.length; i++ )
-        {
-            if ( plexusDeps[i].startsWith( "classworlds" ) )
-            {
-                FileUtils.copyFileToDirectory( repoLocal + "/" + plexusDeps[i], boot );
-            }
-            else
-            {
-                FileUtils.copyFileToDirectory( repoLocal + "/" + plexusDeps[i], core );
-            }
-        }
+        boot.mkdirs();
-        String lib = new File( dist, "lib" ).getAbsolutePath();
+        File lib = new File( dist, "lib" );
-        FileUtils.mkdir( new File( lib ).getPath() );
+        lib.mkdirs();
-            if ( d.getArtifactId().equals( "classworlds" ) || //d.artifactId.equals( "plexus-container-api" ) ||
-                d.artifactId.equals( "plexus-container-default" ) || //d.artifactId.equals( "plexus-utils" ) ||
-                d.artifactId.equals( "junit" ) )
+            File source = new File( repoLocal, d.getRepositoryPath() );
+            if ( d.getArtifactId().equals( "classworlds" ) )
-                continue;
+                FileUtils.copyFileToDirectory( source, boot );
-
-            FileUtils.copyFileToDirectory( repoLocal + "/" + getArtifactPath( d, "/" ), lib );
+            else if ( d.getArtifactId().equals( "plexus-container-default" ) )
+            {
+                FileUtils.copyFileToDirectory( source, core );
+            }
+            else
+            {
+                FileUtils.copyFileToDirectory( source, lib );
+            }
-        FileUtils.copyFileToDirectory( repoLocal + "/org.apache.maven/jars/maven-core-2.0-SNAPSHOT.jar", lib );
+        // TODO: create a dependency object
+        FileUtils.copyFileToDirectory( new File( repoLocal, "org.apache.maven/jars/maven-core-2.0-SNAPSHOT.jar" ), lib );
-        ModelReader reader = new ModelReader();
+        ModelReader reader = new ModelReader( downloader );
-            downloadDependencies( reader.getDependencies() );
+            downloader.downloadDependencies( reader.getDependencies() );
-            generateSources( model.getAbsolutePath(), "java", generatedSources, modelVersion, "false" );
-
-            //generateSources( model.getAbsolutePath(), "java",
-            // generatedSources, "3.0.0", "true" );
-
-            generateSources( model.getAbsolutePath(), "xpp3-reader", generatedSources, modelVersion, "false" );
-
-            //generateSources( model.getAbsolutePath(), "xpp3-reader",
-            // generatedSources, "3.0.0", "true" );
-
-            generateSources( model.getAbsolutePath(), "xpp3-writer", generatedSources, modelVersion, "false" );
-
-            //generateSources( model.getAbsolutePath(), "xpp3-writer",
-            // generatedSources, "3.0.0", "true" );
-
-            generateSources( model.getAbsolutePath(), "xdoc", generatedDocs, modelVersion, "false" );
-
-            //generateSources( model.getAbsolutePath(), "xdoc", generatedDocs,
-            // "3.0.0", "true" );
+            generateSources( model.getAbsolutePath(), "java", generatedSources, modelVersion, "false",
+                             bootstrapClassLoader );
+            generateSources( model.getAbsolutePath(), "xpp3-reader", generatedSources, modelVersion, "false",
+                             bootstrapClassLoader );
+            generateSources( model.getAbsolutePath(), "xpp3-writer", generatedSources, modelVersion, "false",
+                             bootstrapClassLoader );
+            generateSources( model.getAbsolutePath(), "xdoc", generatedDocs, modelVersion, "false",
+                             bootstrapClassLoader );
-        if ( reader.type != null && reader.type.equals( "maven-plugin" ) )
+        if ( reader.getPackaging().equals( "maven-plugin" ) )
-                                      new File( basedir, "pom.xml" ).getAbsolutePath() );
+                                      new File( basedir, "pom.xml" ).getAbsolutePath(), bootstrapClassLoader );
-        if ( !reader.artifactId.equals( "maven-plugin" ) && reader.artifactId.endsWith( "plugin" ) )
+        String artifactId = reader.getArtifactId();
+
+        if ( !artifactId.equals( "maven-plugin" ) && artifactId.endsWith( "plugin" ) )
-    IsolatedClassLoader cl;
-
-    private void createToolsClassLoader()
+    private void addPluginGeneratorDependencies( IsolatedClassLoader cl )
-        cl = new IsolatedClassLoader();
+        // TODO: create a separate class loader
-        for ( Iterator i = mbootDependencies.iterator(); i.hasNext(); )
-        {
-            String dependency = (String) i.next();
-
-            File f = new File( repoLocal, dependency );
-            if ( !f.exists() )
-            {
-                throw new FileNotFoundException( "Missing dependency: " + dependency +
-                                                 ( !online
-                                                   ? "; run again online"
-                                                   : "; there was a problem downloading it earlier" ) );
-            }
-
-            cl.addURL( f.toURL() );
-        }
-    }
-
-    private void addPluginGeneratorDependencies()
-        throws Exception
-    {
-    private void generatePluginDescriptor( String sourceDirectory, String outputDirectory, String pom )
+    private void generatePluginDescriptor( String sourceDirectory, String outputDirectory, String pom, ClassLoader cl )
-                                  String packageWithVersion )
+                                  String packageWithVersion, ClassLoader modelloClassLoader )
-        IsolatedClassLoader modelloClassLoader = new IsolatedClassLoader();
-
-        for ( Iterator i = Arrays.asList( modelloDeps ).iterator(); i.hasNext(); )
-        {
-            String dependency = (String) i.next();
-
-            File f = new File( repoLocal, dependency );
-            if ( !f.exists() )
-            {
-                String msg = ( !online ? "; run again online" : "; there was a problem downloading it earlier" );
-                throw new FileNotFoundException( "Missing dependency: " + dependency + msg );
-            }
-
-            modelloClassLoader.addURL( f.toURL() );
-        }
-
-    private void checkMBootDeps()
+    private IsolatedClassLoader createClassloaderFromDependencies( List dependencies )
-        System.out.println( "Checking for MBoot's dependencies ..." );
+        if ( online )
+        {
+            System.out.println( "Checking for dependencies ..." );
-        downloader.downloadDependencies( mbootDependencies );
-    }
+            downloader.downloadDependencies( dependencies );
+        }
-    private void checkModelloDeps()
-        throws Exception
-    {
-        System.out.println( "Checking for Modello's dependencies ..." );
+        IsolatedClassLoader modelloClassLoader = new IsolatedClassLoader();
-        downloader.downloadDependencies( Arrays.asList( modelloDeps ) );
+        for ( Iterator i = dependencies.iterator(); i.hasNext(); )
+        {
+            Dependency dependency = (Dependency) i.next();
+
+            File f = new File( repoLocal, dependency.getRepositoryPath() );
+            if ( !f.exists() )
+            {
+                String msg = ( !online ? "; run again online" : "; there was a problem downloading it earlier" );
+                throw new FileNotFoundException( "Missing dependency: " + dependency + msg );
+            }
+
+            modelloClassLoader.addURL( f.toURL() );
+        }
+
+        return modelloClassLoader;
-        String artifactId = reader.artifactId;
+        String artifactId = reader.getArtifactId();
-        String version = reader.version;
+        String version = reader.getVersion();
-        ModelReader reader = new ModelReader();
+        ModelReader reader = new ModelReader( downloader );
-        String artifactId = reader.artifactId;
+        String artifactId = reader.getArtifactId();
-        String version = reader.version;
+        String version = reader.getVersion();
-        String groupId = reader.groupId;
-
-        if ( groupId == null )
-        {
-            groupId = reader.parentGroupId;
-        }
-
-        if ( version == null )
-        {
-            version = reader.parentVersion;
-        }
+        String groupId = reader.getGroupId();
-        String artifactId = reader.artifactId;
+        String artifactId = reader.getArtifactId();
-        String version = reader.version;
+        String version = reader.getVersion();
-        String groupId = reader.groupId;
-
-        if ( groupId == null )
-        {
-            groupId = reader.parentGroupId;
-        }
-
-        if ( version == null )
-        {
-            version = reader.parentVersion;
-        }
+        String groupId = reader.getGroupId();
-        String artifactId = reader.artifactId;
+        String artifactId = reader.getArtifactId();
-        String version = reader.version;
+        String version = reader.getVersion();
-        String groupId = reader.groupId;
-
-        if ( groupId == null )
-        {
-            groupId = reader.parentGroupId;
-        }
-
-        if ( version == null )
-        {
-            version = reader.parentVersion;
-        }
+        String groupId = reader.getGroupId();
-    // Download dependencies
-    // ----------------------------------------------------------------------
-
-    private void downloadDependencies( List dependencies )
-        throws Exception
-    {
-        List list = new ArrayList();
-
-        for ( Iterator i = dependencies.iterator(); i.hasNext(); )
-        {
-            Dependency d = (Dependency) i.next();
-
-            list.add( getArtifactPath( d, "/" ) );
-        }
-
-        downloader.downloadDependencies( list );
-    }
-
-    // ----------------------------------------------------------------------
-            classpath[i] = repoLocal + "/" + getArtifactPath( d, "/" );
+            classpath[i] = repoLocal + "/" + d.getRepositoryPath();
-    // Resource copying
+    // model.Resource copying
-    private String getArtifactPath( Dependency d, String pathSeparator )
-    {
-        return d.getArtifactDirectory() + pathSeparator + d.getPackaging() + "s" + pathSeparator + d.getArtifact();
-    }
-
-    abstract class AbstractReader
-        extends DefaultHandler
-    {
-        private SAXParserFactory saxFactory;
-
-        public boolean parse( File file )
-        {
-            try
-            {
-                saxFactory = SAXParserFactory.newInstance();
-
-                SAXParser parser = saxFactory.newSAXParser();
-
-                InputSource is = new InputSource( new FileInputStream( file ) );
-
-                parser.parse( is, this );
-
-                return true;
-            }
-            catch ( Exception e )
-            {
-                e.printStackTrace();
-
-                return false;
-            }
-        }
-
-        public void warning( SAXParseException spe )
-        {
-            printParseError( "Warning", spe );
-        }
-
-        public void error( SAXParseException spe )
-        {
-            printParseError( "Error", spe );
-        }
-
-        public void fatalError( SAXParseException spe )
-        {
-            printParseError( "Fatal Error", spe );
-        }
-
-        private final void printParseError( String type, SAXParseException spe )
-        {
-            System.err.println( type + " [line " + spe.getLineNumber() + ", row " + spe.getColumnNumber() + "]: " +
-                                spe.getMessage() );
-        }
-    }
-
-    class ModelReader
-        extends AbstractReader
-    {
-        int depth = 0;
-
-        String artifactId;
-
-        String version;
-
-        String groupId;
-
-        String type;
-
-        private String parentGroupId;
-
-        private String parentArtifactId;
-
-        private String parentVersion;
-
-        private List dependencies = new ArrayList();
-
-        private List remoteRepositories = new ArrayList();
-
-        private List resources = new ArrayList();
-
-        private List testResources = new ArrayList();
-
-        private Dependency currentDependency;
-
-        private Resource currentResource;
-
-        private boolean insideParent = false;
-
-        private boolean insideDependency = false;
-
-        private boolean insideResource = false;
-
-        private boolean insideRepository = false;
-
-        private StringBuffer bodyText = new StringBuffer();
-
-        public List getRemoteRepositories()
-        {
-            return remoteRepositories;
-        }
-
-        public List getDependencies()
-        {
-            return dependencies;
-        }
-
-        public List getResources()
-        {
-            return resources;
-        }
-
-        public void startElement( String uri, String localName, String rawName, Attributes attributes )
-        {
-            if ( rawName.equals( "parent" ) )
-            {
-                insideParent = true;
-            }
-            else if ( rawName.equals( "repository" ) )
-            {
-                insideRepository = true;
-            }
-            else if ( rawName.equals( "dependency" ) )
-            {
-                currentDependency = new Dependency();
-
-                insideDependency = true;
-            }
-            else if ( rawName.equals( "resource" ) )
-            {
-                currentResource = new Resource();
-
-                insideResource = true;
-            }
-            else if ( rawName.equals( "testResource" ) )
-            {
-                currentResource = new Resource();
-
-                insideResource = true;
-            }
-            depth++;
-        }
-
-        public void characters( char buffer[], int start, int length )
-        {
-            bodyText.append( buffer, start, length );
-        }
-
-        private String getBodyText()
-        {
-            return bodyText.toString().trim();
-        }
-
-        public void endElement( String uri, String localName, String rawName )
-            throws SAXException
-        {
-            // support both v3 <extend> and v4 <parent>
-            if ( rawName.equals( "parent" ) )
-            {
-                File f;
-
-                if ( parentArtifactId == null || parentArtifactId.trim().length() == 0 )
-                {
-                    throw new SAXException( "Missing required element in <parent>: artifactId." );
-                }
-
-                if ( parentGroupId == null || parentGroupId.trim().length() == 0 )
-                {
-                    throw new SAXException( "Missing required element in <parent>: groupId." );
-                }
-
-                if ( parentVersion == null || parentVersion.trim().length() == 0 )
-                {
-                    throw new SAXException( "Missing required element in <parent>: version." );
-                }
-
-                f = new File( downloader.getMavenRepoLocal(), parentGroupId + "/poms/" + parentArtifactId + "-" +
-                                                              parentVersion + ".pom" );
-
-                ModelReader p = new ModelReader();
-
-                if ( !p.parse( f ) )
-                {
-                    throw new SAXException( "Could not parse parent pom.xml" );
-                }
-
-                dependencies.addAll( p.getDependencies() );
-
-                resources.addAll( p.getResources() );
-
-                insideParent = false;
-            }
-            else if ( rawName.equals( "dependency" ) )
-            {
-                dependencies.add( currentDependency );
-
-                insideDependency = false;
-            }
-            else if ( rawName.equals( "resource" ) )
-            {
-                resources.add( currentResource );
-
-                insideResource = false;
-            }
-            else if ( rawName.equals( "testResource" ) )
-            {
-                testResources.add( currentResource );
-
-                insideResource = false;
-            }
-            else if ( insideParent )
-            {
-                if ( rawName.equals( "groupId" ) )
-                {
-                    parentGroupId = getBodyText();
-                }
-                else if ( rawName.equals( "artifactId" ) )
-                {
-                    parentArtifactId = getBodyText();
-                }
-                else if ( rawName.equals( "version" ) )
-                {
-                    parentVersion = getBodyText();
-                }
-            }
-            else if ( insideDependency )
-            {
-                if ( rawName.equals( "id" ) )
-                {
-                    currentDependency.setId( getBodyText() );
-                }
-                else if ( rawName.equals( "version" ) )
-                {
-                    currentDependency.setVersion( getBodyText() );
-                }
-                else if ( rawName.equals( "jar" ) )
-                {
-                    currentDependency.setJar( getBodyText() );
-                }
-                else if ( rawName.equals( "packaging" ) )
-                {
-                    currentDependency.setPackaging( getBodyText() );
-                }
-                else if ( rawName.equals( "groupId" ) )
-                {
-                    currentDependency.setGroupId( getBodyText() );
-                }
-                else if ( rawName.equals( "artifactId" ) )
-                {
-                    currentDependency.setArtifactId( getBodyText() );
-                }
-            }
-            else if ( insideResource )
-            {
-                if ( rawName.equals( "directory" ) )
-                {
-                    currentResource.setDirectory( getBodyText() );
-                }
-                else if ( rawName.equals( "include" ) )
-                {
-                    currentResource.addInclude( getBodyText() );
-                }
-                else if ( rawName.equals( "exclude" ) )
-                {
-                    currentResource.addExclude( getBodyText() );
-                }
-            }
-            else if ( depth == 2 )
-            {
-                if ( rawName.equals( "artifactId" ) )
-                {
-                    artifactId = getBodyText();
-                }
-                else if ( rawName.equals( "version" ) )
-                {
-                    version = getBodyText();
-                }
-                else if ( rawName.equals( "groupId" ) )
-                {
-                    groupId = getBodyText();
-                }
-                else if ( rawName.equals( "packaging" ) )
-                {
-                    type = getBodyText();
-                }
-                else if ( rawName.equals( "repository" ) )
-                {
-                    insideRepository = false;
-                }
-            }
-            else if ( insideRepository )
-            {
-                if ( rawName.equals( "url" ) )
-                {
-                    remoteRepositories.add( getBodyText() );
-                }
-            }
-
-            bodyText = new StringBuffer();
-
-            depth--;
-        }
-    }
-
-    public static class Dependency
-    {
-        private String id;
-
-        private String version;
-
-        private String url;
-
-        private String jar;
-
-        private String artifactId;
-
-        private String groupId;
-
-        private String packaging = "jar";
-
-        public Dependency()
-        {
-        }
-
-        public void setId( String id )
-        {
-            this.id = id;
-        }
-
-        public String getId()
-        {
-            if ( isValid( getGroupId() ) && isValid( getArtifactId() ) )
-            {
-                return getGroupId() + ":" + getArtifactId();
-            }
-
-            return id;
-        }
-
-        public void setGroupId( String groupId )
-        {
-            this.groupId = groupId;
-        }
-
-        public String getGroupId()
-        {
-            return groupId;
-        }
-
-        public String getArtifactDirectory()
-        {
-            if ( isValid( getGroupId() ) )
-            {
-                return getGroupId();
-            }
-
-            return getId();
-        }
-
-        public String getArtifactId()
-        {
-            return artifactId;
-        }
-
-        public void setArtifactId( String artifactId )
-        {
-            this.artifactId = artifactId;
-        }
-
-        public String getArtifact()
-        {
-            // If the jar name has been explicty set then use that. This
-            // is when the <jar/> element is explicity used in the POM.
-            if ( jar != null )
-            {
-                return jar;
-            }
-
-            String artifact;
-
-            if ( isValid( getArtifactId() ) )
-            {
-                artifact = getArtifactId() + "-" + getVersion() + ".";
-            }
-            else
-            {
-                artifact = getId() + "-" + getVersion() + ".";
-            }
-
-            if ( "jar".equals( getPackaging() ) || "maven-plugin".equals( getPackaging() ) )
-            {
-                artifact += "jar";
-            }
-            else
-            {
-                artifact += getPackaging();
-            }
-            return artifact;
-        }
-
-        public void setVersion( String version )
-        {
-            this.version = version;
-        }
-
-        public String getVersion()
-        {
-            return version;
-        }
-
-        public void setJar( String jar )
-        {
-            // This is a check we need because of the jelly interpolation
-            // process. If we don't check an empty string will be set and
-            // screw up getArtifact() above.
-            if ( jar.trim().length() == 0 )
-            {
-                return;
-            }
-
-            this.jar = jar;
-        }
-
-        public String getJar()
-        {
-            return jar;
-        }
-
-        public void setUrl( String url )
-        {
-            this.url = url;
-        }
-
-        public String getUrl()
-        {
-            return url;
-        }
-
-        public String getPackaging()
-        {
-            return packaging;
-        }
-
-        public void setPackaging( String packaging )
-        {
-            this.packaging = packaging;
-        }
-
-        private boolean isValid( String value )
-        {
-            if ( value != null && value.trim().equals( "" ) == false )
-            {
-                return true;
-            }
-
-            return false;
-        }
-    }
-
-    public static class Resource
-        implements Serializable
-    {
-        private String directory;
-
-        private List includes = new ArrayList();
-
-        private List excludes = new ArrayList();
-
-        public void addInclude( String pattern )
-        {
-            this.includes.add( pattern );
-        }
-
-        public void addExclude( String pattern )
-        {
-            this.excludes.add( pattern );
-        }
-
-        public List getIncludes()
-        {
-            return this.includes;
-        }
-
-        public List getExcludes()
-        {
-            return this.excludes;
-        }
-
-        public void setDirectory( String directory )
-        {
-            this.directory = directory;
-        }
-
-        public String getDirectory()
-        {
-            return this.directory;
-        }
-    }

MOV26 MOV26 MOV26 MOV23 MOV23 UPD40 UPD40 UPD40 INS31 MOV5 UPD43 MOV21 MOV21 MOV60 MOV21 MOV21 MOV21 MOV21 INS44 INS44 INS44 MOV83 MOV43 INS42 MOV44 MOV43 INS8 UPD42 UPD42 UPD42 INS25 INS21 INS21 INS21 INS24 INS60 MOV43 INS42 INS43 INS42 INS43 INS42 INS25 MOV60 MOV24 MOV41 INS60 INS60 INS60 MOV5 MOV43 INS42 INS8 INS32 INS7 MOV43 INS32 MOV43 INS32 MOV43 INS32 MOV58 MOV32 INS8 MOV32 MOV14 MOV43 INS32 MOV43 INS59 INS42 INS42 INS42 INS8 UPD42 MOV43 MOV43 MOV43 MOV43 MOV43 MOV43 INS59 MOV43 MOV43 INS59 MOV43 MOV43 MOV43 INS59 UPD45 UPD45 INS45 INS45 INS45 INS45 INS45 INS42 MOV21 MOV25 UPD42 INS14 INS42 INS42 INS14 INS42 INS32 INS42 MOV14 INS42 UPD42 MOV42 MOV14 INS42 INS42 MOV14 INS42 INS42 MOV60 INS60 INS25 UPD42 INS42 INS42 INS32 MOV42 MOV45 INS42 INS32 MOV21 MOV21 MOV43 INS32 INS32 INS32 INS32 INS42 INS32 INS32 INS32 MOV42 INS32 INS32 INS32 MOV42 INS32 MOV43 INS42 MOV43 INS42 MOV43 INS42 INS45 UPD42 MOV42 INS32 INS42 MOV43 INS59 MOV32 MOV8 INS25 UPD42 INS45 MOV43 INS42 INS42 INS42 INS42 INS42 INS42 MOV42 MOV43 MOV43 INS42 INS42 INS42 INS42 MOV43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS14 INS32 INS8 INS8 INS42 MOV32 INS42 MOV32 INS42 MOV32 INS42 MOV32 INS42 INS42 INS42 UPD45 UPD42 MOV42 MOV42 UPD42 INS42 INS42 MOV43 INS42 INS32 MOV32 MOV42 MOV45 MOV21 MOV21 MOV43 MOV43 INS32 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL4 DEL3 DEL59 DEL23 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL4 DEL3 DEL59 DEL23 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL4 DEL3 DEL59 DEL23 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL32 DEL21 DEL8 DEL25 DEL40 DEL42 DEL32 DEL42 DEL42 DEL42 DEL14 DEL32 DEL32 DEL42 DEL32 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL45 DEL42 DEL42 DEL2 DEL27 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL24 DEL42 DEL32 DEL42 DEL45 DEL42 DEL42 DEL2 DEL27 DEL42 DEL42 DEL14 DEL42 DEL45 DEL42 DEL45 DEL32 DEL27 DEL42 DEL42 DEL45 DEL27 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL40 DEL32 DEL40 DEL42 DEL45 DEL32 DEL27 DEL18 DEL8 DEL25 DEL8 DEL24 DEL40 DEL33 DEL27 DEL40 DEL32 DEL27 DEL40 DEL40 DEL42 DEL59 DEL23 DEL39 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL45 DEL42 DEL42 DEL38 DEL45 DEL45 DEL16 DEL36 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL24 DEL8 DEL31 DEL42 DEL42 DEL32 DEL42 DEL83 DEL39 DEL42 DEL42 DEL43 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL40 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL31 DEL40 DEL40 DEL40 DEL40 DEL42 DEL40 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL40 DEL40 DEL40 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL40 DEL42 DEL43 DEL40 DEL42 DEL43 DEL40 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL32 DEL21 DEL8 DEL24 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL42 DEL45 DEL83 DEL42 DEL43 DEL42 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL42 DEL32 DEL27 DEL41 DEL8 DEL31 DEL83 DEL42 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL14 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL52 DEL32 DEL21 DEL9 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL9 DEL41 DEL8 DEL12 DEL54 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL40 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL31 DEL55 DEL42 DEL42 DEL43 DEL39 DEL42 DEL34 DEL59 DEL23 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL14 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL42 DEL37 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL42 DEL85 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL45 DEL32 DEL42 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL34 DEL27 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL34 DEL27 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL34 DEL27 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL27 DEL14 DEL7 DEL21 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL25 DEL25 DEL8 DEL42 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL8 DEL42 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL25 DEL25 DEL8 DEL42 DEL34 DEL27 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL8 DEL42 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL42 DEL37 DEL21 DEL8 DEL31 DEL55 DEL83 DEL83 DEL42 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL42 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL32 DEL27 DEL42 DEL32 DEL45 DEL42 DEL32 DEL27 DEL41 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL32 DEL41 DEL8 DEL25 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL33 DEL27 DEL8 DEL25 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL45 DEL42 DEL32 DEL45 DEL27 DEL7 DEL21 DEL8 DEL42 DEL42 DEL32 DEL45 DEL42 DEL32 DEL45 DEL27 DEL7 DEL21 DEL8 DEL25 DEL45 DEL42 DEL42 DEL32 DEL32 DEL45 DEL42 DEL42 DEL32 DEL32 DEL27 DEL42 DEL45 DEL7 DEL21 DEL8 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL32 DEL34 DEL27 DEL41 DEL8 DEL25 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL9 DEL27 DEL27 DEL9 DEL41 DEL8 DEL25 DEL9 DEL41 DEL8 DEL31 DEL55 DEL83 DEL83 DEL42 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL41 DEL8 DEL31 DEL55