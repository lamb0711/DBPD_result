[MNG-6173] MavenSession.getAllProjects() should return all projects in the reactor

This commit removes the initialization of the MavenSession object from the
DefaultGraphBuilder. The GraphBuilder implementation should only build the
graph and should not touch the MavenSession object passed into it.

To allow complete initialization of the MavenSession the ProjectDependencyGraph
interface got enhanced so that GraphBuilder implementations can communicate all
collected projects in addition to the processed list of projects.

This closes #105

+import com.google.common.collect.Lists;
-import org.apache.maven.execution.MavenExecutionResult;
+import org.apache.maven.project.DuplicateProjectException;
-import com.google.common.collect.Lists;
-
+
-        if ( session.getProjectDependencyGraph() != null )
-        {
-            return dependencyGraph( session, session.getProjects(), false );
-        }
-        
-        List<MavenProject> projects = session.getProjects();
-
-        if ( projects == null )
-        {
-            try
-            {
-                projects = getProjectsForMavenReactor( session );
-            }
-            catch ( ProjectBuildingException e )
-            {
-                return Result.error( Lists.newArrayList( new DefaultModelProblem( null, null, null, null, 0, 0, e ) ) );
-            }
-
-            validateProjects( projects );
-
-            return dependencyGraph( session, projects, true );
-        }
-        else
-        {
-            return dependencyGraph( session, projects, false );
-        }
-    }
-    
-    private Result<ProjectDependencyGraph> dependencyGraph( MavenSession session, List<MavenProject> projects,
-                                                            boolean applyMakeBehaviour )
-    {
-        MavenExecutionRequest request = session.getRequest();
-
-        ProjectDependencyGraph projectDependencyGraph = null;
-
-            projectDependencyGraph = new DefaultProjectDependencyGraph( projects );
+            Result<ProjectDependencyGraph> result = sessionDependencyGraph( session );
-            if ( applyMakeBehaviour )
+            if ( result == null )
-                List<MavenProject> activeProjects = projectDependencyGraph.getSortedProjects();
-
-                activeProjects = trimSelectedProjects( activeProjects, projectDependencyGraph, request );
-                activeProjects = trimExcludedProjects( activeProjects, request );
-                activeProjects = trimResumedProjects( activeProjects, request );
-
-                if ( activeProjects.size() != projectDependencyGraph.getSortedProjects().size() )
-                {
-                    projectDependencyGraph =
-                        new FilteredProjectDependencyGraph( projectDependencyGraph, activeProjects );
-                }
+                final List<MavenProject> projects = getProjectsForMavenReactor( session );
+                validateProjects( projects );
+                result = reactorDependencyGraph( session, projects );
+
+            return result;
-        catch ( CycleDetectedException e )
+        catch ( final ProjectBuildingException e )
+        {
+            return Result.error( Lists.newArrayList( new DefaultModelProblem( null, null, null, null, 0, 0, e ) ) );
+        }
+        catch ( final CycleDetectedException e )
-        catch ( org.apache.maven.project.DuplicateProjectException e )
+        catch ( final DuplicateProjectException e )
-        catch ( MavenExecutionException e )
+        catch ( final MavenExecutionException e )
+    }
+
+    private Result<ProjectDependencyGraph> sessionDependencyGraph( final MavenSession session )
+        throws CycleDetectedException, DuplicateProjectException
+    {
+        Result<ProjectDependencyGraph> result = null;
+
+        if ( session.getProjectDependencyGraph() != null || session.getProjects() != null )
+        {
+            final ProjectDependencyGraph graph =
+                new DefaultProjectDependencyGraph( session.getAllProjects(), session.getProjects() );
+
+            result = Result.success( graph );
+        }
-        session.setProjects( projectDependencyGraph.getSortedProjects() );
-        session.setProjectDependencyGraph( projectDependencyGraph );
+        return result;
+    }
+
+    private Result<ProjectDependencyGraph> reactorDependencyGraph( MavenSession session, List<MavenProject> projects )
+        throws CycleDetectedException, DuplicateProjectException, MavenExecutionException
+    {
+        ProjectDependencyGraph projectDependencyGraph = new DefaultProjectDependencyGraph( projects );
+        List<MavenProject> activeProjects = projectDependencyGraph.getSortedProjects();
+        activeProjects = trimSelectedProjects( activeProjects, projectDependencyGraph, session.getRequest() );
+        activeProjects = trimExcludedProjects( activeProjects, session.getRequest() );
+        activeProjects = trimResumedProjects( activeProjects, session.getRequest() );
+
+        if ( activeProjects.size() != projectDependencyGraph.getSortedProjects().size() )
+        {
+            projectDependencyGraph = new FilteredProjectDependencyGraph( projectDependencyGraph, activeProjects );
+        }
-    private MavenExecutionResult addExceptionToResult( MavenExecutionResult result, Throwable e )
-    {
-        if ( !result.getExceptions().contains( e ) )
-        {
-            result.addException( e );
-        }
-
-        return result;
-    }
-

MOV26 MOV26 UPD40 INS31 INS31 MOV78 MOV83 MOV74 MOV42 MOV44 MOV8 INS83 INS74 INS42 INS44 INS43 UPD43 MOV43 INS8 UPD42 INS43 INS43 INS43 MOV8 MOV12 INS43 INS43 INS83 INS43 INS42 INS42 UPD42 INS60 INS25 MOV41 INS42 INS42 INS42 INS60 MOV41 MOV12 INS42 INS42 INS42 INS74 INS59 INS27 INS8 MOV43 INS59 INS60 INS25 INS41 INS43 INS43 INS42 INS33 MOV27 INS27 INS60 INS21 INS42 MOV14 INS74 INS59 INS27 INS8 INS42 INS83 INS83 INS83 UPD43 INS83 UPD43 INS42 UPD42 MOV42 MOV32 INS33 INS83 INS43 INS59 INS7 INS32 MOV32 INS32 INS43 INS43 INS42 INS32 INS42 INS33 MOV60 MOV21 MOV21 UPD42 INS42 UPD42 MOV42 INS42 INS14 INS42 INS32 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS83 INS43 INS32 MOV32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV32 INS42 INS32 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL25 DEL40 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL9 DEL32 DEL41 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL7 DEL21 DEL8 DEL54 DEL42 DEL42 DEL42 DEL9 DEL32 DEL41 DEL8 DEL42 DEL42 DEL42 DEL9 DEL32 DEL41 DEL8 DEL25 DEL8 DEL31 DEL42 DEL39 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL44 DEL43 DEL42 DEL44 DEL32 DEL42 DEL42 DEL32 DEL38 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31