allow passing of integration test numbers to run from the CLI

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@225235 13f79535-47bb-0310-9956-ffa450edef68

-
+import java.text.DecimalFormat;
+import java.text.NumberFormat;
-        FileInputStream fis = null;
+        FileInputStream fis;
-              File propertiesFile = new File( basedir, filename );
+            File propertiesFile = new File( basedir, filename );
-        if ( a[3].equals( "maven-plugin" ) )
+        if ( "maven-plugin".equals( a[3] ) )
-        if ( cmd.equals( "rm" ) )
+        if ( "rm".equals( cmd ) )
+            InputStream is = null;
-                InputStream is = url.openStream();
+                is = url.openStream();
-
-                is.close();
+            finally
+            {
+                if ( is != null )
+                {
+                    try
+                    {
+                        is.close();
+                    }
+                    catch ( IOException e )
+                    {
+                    }
+                }
+            }
-        int ret = 0;
+        int ret;
-//            cli.createArgument().setValue( "-X" );
+        throws VerificationException
-        try
+        if ( args.length == 0 )
-            tests = loadFile( basedir, "integration-tests.txt" );
+            try
+            {
+                tests = loadFile( basedir, "integration-tests.txt" );
+            }
+            catch ( VerificationException e )
+            {
+                System.err.println( "Unable to load integration tests file" );
+
+                System.err.println( e.getMessage() );
+
+                System.exit( 2 );
+            }
-        catch ( VerificationException e )
+        else
-            System.err.println( "Unable to load integration tests file" );
-
-            System.err.println( e.getMessage() );
-
-            System.exit( 2 );
+            tests = new ArrayList( args.length );
+            NumberFormat fmt = new DecimalFormat( "0000" );
+            for ( int i = 0; i < args.length; i++ )
+            {
+                String test = args[i];
+                if ( !test.startsWith( "it" ) )
+                {
+                    test = "it" + fmt.format( Integer.valueOf( test ) );
+                }
+                tests.add( test );
+            }
-            Verifier verifier = new Verifier( basedir + "/" + test );
+            String dir = basedir + "/" + test;
+
+            if ( !new File( dir, "pom.xml" ).exists() )
+            {
+                System.err.println( "Test " + test + " in " + dir + " does not exist" );
+
+                System.exit( 2 );
+            }
+
+            Verifier verifier = new Verifier( dir );
-                boolean chokeOnErrorOutput = Boolean.valueOf( controlProperties.getProperty( "failOnErrorOutput", "true" ) ).booleanValue();
+                boolean chokeOnErrorOutput = Boolean.valueOf(
+                    controlProperties.getProperty( "failOnErrorOutput", "true" ) ).booleanValue();
-                System.out.println("*** Verifying: fail when [ERROR] detected? " + chokeOnErrorOutput + " ***");
-                
+                System.out.println( "*** Verifying: fail when [ERROR] detected? " + chokeOnErrorOutput + " ***" );
+
-                System.out.println(">>>>>> Error Stacktrace:");
-                e.printStackTrace(System.out);
-                System.out.println("<<<<<< Error Stacktrace");
+                System.out.println( ">>>>>> Error Stacktrace:" );
+                e.printStackTrace( System.out );
+                System.out.println( "<<<<<< Error Stacktrace" );
-
-        
+
-            System.err.println( type + " [line " + spe.getLineNumber() + ", row " + spe.getColumnNumber() + "]: " +
-                                spe.getMessage() );
+            System.err.println(
+                type + " [line " + spe.getLineNumber() + ", row " + spe.getColumnNumber() + "]: " + spe.getMessage() );
-                    throw new SAXException( "Invalid mavenProfile entry. Missing one or more " +
-                                            "fields: {localRepository}." );
+                    throw new SAXException(
+                        "Invalid mavenProfile entry. Missing one or more " + "fields: {localRepository}." );

INS26 INS26 INS40 INS40 INS43 INS42 INS25 MOV2 INS27 INS8 INS8 INS45 INS45 INS42 INS60 INS40 INS34 MOV54 INS21 INS60 INS24 INS25 INS60 MOV43 INS59 INS8 INS7 INS43 INS59 INS58 INS27 INS37 INS8 INS43 INS38 INS8 MOV43 INS59 INS42 INS33 INS21 INS25 INS42 INS14 INS42 INS42 INS14 INS39 INS59 INS42 INS40 INS42 INS60 INS25 INS21 INS42 UPD42 MOV27 INS32 INS21 INS21 INS42 INS14 INS7 INS27 INS8 INS43 INS40 INS43 INS45 INS42 INS34 INS43 INS59 INS38 INS8 INS32 INS14 INS42 INS32 INS32 MOV43 INS42 INS42 MOV32 INS42 INS33 INS54 INS42 INS42 INS42 INS42 INS2 INS32 INS21 INS42 INS42 INS42 INS43 INS42 INS45 INS40 INS42 INS27 INS42 INS42 INS34 INS8 INS12 INS42 INS42 INS42 INS42 INS45 INS7 INS42 INS45 INS42 INS45 INS42 INS45 MOV21 INS44 INS8 INS42 INS27 INS43 INS42 INS45 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 DEL33 DEL45 DEL42 DEL45 DEL42 DEL59 DEL60 DEL34 DEL14