o http://jira.codehaus.org/browse/MNG-1361

  When the version or type are missing from a dependency a g:a string will
  be displayed so you can easily find the problematic dependency in question.
  


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@329419 13f79535-47bb-0310-9956-ffa450edef68

-            validateStringNotEmpty( "dependencies.dependency.type", result, d.getType() );
+            validateStringNotEmpty( "dependencies.dependency.type", result, d.getType(), dependencySourceHint( d ) );
-            validateStringNotEmpty( "dependencies.dependency.version", result, d.getVersion() );
+            validateStringNotEmpty( "dependencies.dependency.version", result, d.getVersion(), dependencySourceHint( d ) );
-    ///////////////////////////////////////////////////////////////////////////
-    // Field validator
+
+    // ----------------------------------------------------------------------
+    // Field validation
+    // ----------------------------------------------------------------------
+
+    /**
+     * Create a hint string consisting of the groupId and artifactId for user validation
+     * messages. For example when the version or type information is missing from a
+     * dependency.
+     *
+     * @param d The dependency from which to make the hint.
+     * @return String of the form g:a.
+     */
+    private String dependencySourceHint( Dependency d )
+    {
+        return d.getGroupId() + ":" + d.getArtifactId();
+    }
+
+    private boolean validateStringNotEmpty( String fieldName, ModelValidationResult result, String string )
+    {
+        return validateStringNotEmpty( fieldName, result, string, null );
+    }
-    private boolean validateStringNotEmpty( String fieldName, ModelValidationResult result, String string )
+    private boolean validateStringNotEmpty( String fieldName, ModelValidationResult result, String string, String sourceHint )
-        if ( !validateNotNull( fieldName, result, string ) )
+        if ( !validateNotNull( fieldName, result, string, sourceHint ) )
-        result.addMessage( "'" + fieldName + "' is missing." );
+        if ( sourceHint != null )
+        {
+            result.addMessage( "'" + fieldName + "' is missing for " + sourceHint );
+        }
+        else
+        {
+            result.addMessage( "'" + fieldName + "' is missing." );
+        }
+
-    private boolean validateNotNull( String fieldName, ModelValidationResult result, Object object )
+    private boolean validateNotNull( String fieldName, ModelValidationResult result, Object object, String sourceHint )
-        result.addMessage( "'" + fieldName + "' is missing." );
+        if ( sourceHint != null )
+        {
+            result.addMessage( "'" + fieldName + "' is missing for " + sourceHint );
+        }
+        else
+        {
+            result.addMessage( "'" + fieldName + "' is missing." );
+        }

INS31 INS31 INS29 INS83 INS43 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS44 INS44 INS8 INS65 INS65 INS65 INS42 INS43 INS42 INS41 INS43 INS42 INS43 INS42 INS43 INS42 INS41 INS43 INS42 INS25 INS43 INS42 MOV25 INS25 MOV41 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS27 INS42 INS42 INS42 INS32 INS42 INS27 INS8 INS8 INS42 INS27 INS8 INS8 INS32 INS45 INS32 INS42 INS42 INS42 INS42 INS33 INS42 INS33 INS21 INS21 INS42 INS33 MOV21 MOV21 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS32 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 UPD45 INS42 DEL8