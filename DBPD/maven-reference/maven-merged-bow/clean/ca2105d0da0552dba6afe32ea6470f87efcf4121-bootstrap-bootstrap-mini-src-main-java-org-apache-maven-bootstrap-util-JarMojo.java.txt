clean up jar mojo


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@345030 13f79535-47bb-0310-9956-ffa450edef68

-     * Create the jar file specified and include the listed files.
-     *
-     * @param jarFile the jar file to create
-     * @param includes a Map<String, File>of items to include; the key is the jar entry name
-     * @throws IOException if there is a problem writing the archive or reading the sources
-     */
-    protected void createJar( File jarFile, Map includes )
-        throws IOException
-    {
-        File parentJarFile = jarFile.getParentFile();
-        if ( !parentJarFile.exists() )
-        {
-            parentJarFile.mkdirs();
-        }
-        JarOutputStream jos = createJar( jarFile, includes.containsKey( "META-INF/MANIFEST.MF" ) );
-        try
-        {
-            addEntries( jos, includes );
-        }
-        finally
-        {
-            jos.close();
-        }
-    }
-
-    /**
-     * Create the specified jar file and return a JarOutputStream to it
+     * Create the jar file specified and include the listed files.
-     * @param manifestIncluded if the manifest is included
-     * @return a JarOutputStream that can be used to write to that file
-     * @throws IOException if there was a problem opening the file
+     * @param includes a Map<String, File>of items to include; the key is the jar entry name
+     * @throws IOException if there is a problem writing the archive or reading the sources
-    protected JarOutputStream createJar( File jarFile, boolean manifestIncluded )
+    protected void createJar( File jarFile, Map includes )
+        JarOutputStream jos = null;
-            if ( manifestIncluded )
+            if ( includes.containsKey( MF ) )
-                return new JarOutputStream( fos );
+                jos = new JarOutputStream( fos );
-                return new JarOutputStream( fos, createManifest() );
+                jos = new JarOutputStream( fos, createManifest() );
+            addEntries( jos, includes );
-        catch ( IOException e )
+        finally
-            try
-            {
-                fos.close();
-                jarFile.delete();
-            }
-            catch ( IOException e1 )
-            {
-                // ignore
-            }
-            throw e;
+            IOUtil.close( jos );
+            IOUtil.close( fos );

MOV29 INS39 MOV44 INS60 MOV54 MOV43 INS59 MOV8 INS42 INS33 MOV21 INS32 INS42 INS42 INS42 INS21 INS21 UPD42 INS42 UPD42 UPD42 INS42 INS7 INS7 INS42 MOV14 INS42 MOV14 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL32 DEL59 DEL60 DEL8 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL42 DEL43 DEL39 DEL42 DEL44 DEL42 DEL41 DEL41 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL53 DEL8 DEL12 DEL54