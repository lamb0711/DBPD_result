PR: MNG-122
exception clean up phase 1

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@320668 13f79535-47bb-0310-9956-ffa450edef68

-    public void execute()
+    protected void doExecute()
-        try
+        ArtifactRepository localRepo = createLocalArtifactRepository();
+        MavenProjectBuilder builder = (MavenProjectBuilder) lookup( MavenProjectBuilder.ROLE );
+
+        Pom pom = buildPom( builder, localRepo );
+
+        if ( pom == null )
-            ArtifactRepository localRepo = createLocalArtifactRepository();
-            MavenProjectBuilder builder = (MavenProjectBuilder) lookup( MavenProjectBuilder.ROLE );
+            throw new BuildException( "A POM element is required to deploy to the repository" );
+        }
-            Pom pom = buildPom( builder, localRepo );
+        Artifact artifact = createArtifact( pom );
-            if ( pom == null )
+        DistributionManagement distributionManagement = pom.getDistributionManagement();
+
+        if ( remoteSnapshotRepository == null && remoteRepository == null )
+        {
+            if ( distributionManagement != null )
-                throw new BuildException( "A POM element is required to deploy to the repository" );
-            }
-
-            Artifact artifact = createArtifact( pom );
-
-            DistributionManagement distributionManagement = pom.getDistributionManagement();
-
-            if ( remoteSnapshotRepository == null && remoteRepository == null )
-            {
-                if ( distributionManagement != null )
+                if ( distributionManagement.getSnapshotRepository() != null )
-                    if ( distributionManagement.getSnapshotRepository() != null )
-                    {
-                        remoteSnapshotRepository = createAntRemoteRepositoryBase( distributionManagement
-                            .getSnapshotRepository() );
-                    }
-                    if ( distributionManagement.getRepository() != null )
-                    {
-                        remoteRepository = createAntRemoteRepositoryBase( distributionManagement.getRepository() );
-                    }
+                    remoteSnapshotRepository = createAntRemoteRepositoryBase( distributionManagement
+                        .getSnapshotRepository() );
+                }
+                if ( distributionManagement.getRepository() != null )
+                {
+                    remoteRepository = createAntRemoteRepositoryBase( distributionManagement.getRepository() );
+        }
-            if ( remoteSnapshotRepository == null )
-            {
-                remoteSnapshotRepository = remoteRepository;
-            }
+        if ( remoteSnapshotRepository == null )
+        {
+            remoteSnapshotRepository = remoteRepository;
+        }
-            ArtifactRepository deploymentRepository = null;
-            if ( artifact.isSnapshot() && remoteSnapshotRepository != null )
+        ArtifactRepository deploymentRepository;
+        if ( artifact.isSnapshot() && remoteSnapshotRepository != null )
+        {
+            deploymentRepository = createRemoteArtifactRepository( remoteSnapshotRepository );
+        }
+        else if ( remoteRepository != null )
+        {
+            deploymentRepository = createRemoteArtifactRepository( remoteRepository );
+        }
+        else
+        {
+            throw new BuildException(
+                "A distributionManagement element or remoteRepository element is required to deploy" );
+        }
+
+        // Deploy the POM
+        boolean isPomArtifact = "pom".equals( pom.getPackaging() );
+        if ( !isPomArtifact )
+        {
+            ArtifactMetadata metadata = new ProjectArtifactMetadata( artifact, pom.getFile() );
+            artifact.addMetadata( metadata );
+        }
+
+        log( "Deploying to " + deploymentRepository.getUrl() );
+        ArtifactDeployer deployer = (ArtifactDeployer) lookup( ArtifactDeployer.ROLE );
+        try
+        {
+            if ( !isPomArtifact )
-                deploymentRepository = createRemoteArtifactRepository( remoteSnapshotRepository );
-            }
-            else if ( remoteRepository != null )
-            {
-                deploymentRepository = createRemoteArtifactRepository( remoteRepository );
+                deployer.deploy( file, artifact, deploymentRepository, localRepo );
-                throw new BuildException(
-                                          "A distributionManagement element or remoteRepository element is required to deploy" );
-            }
-
-            // Deploy the POM
-            boolean isPomArtifact = "pom".equals( pom.getPackaging() );
-            if ( !isPomArtifact )
-            {
-                ArtifactMetadata metadata = new ProjectArtifactMetadata( artifact, pom.getFile() );
-                artifact.addMetadata( metadata );
-            }
-
-            log( "Deploying to " + deploymentRepository.getUrl() );
-            ArtifactDeployer deployer = (ArtifactDeployer) lookup( ArtifactDeployer.ROLE );
-            try
-            {
-                if ( !isPomArtifact )
-                {
-                    deployer.deploy( file, artifact, deploymentRepository, localRepo );
-                }
-                else
-                {
-                    deployer.deploy( pom.getFile(), artifact, deploymentRepository, localRepo );
-                }
-            }
-            catch ( ArtifactDeploymentException e )
-            {
-                // TODO: deployment exception that does not give a trace
-                throw new BuildException( "Error deploying artifact", e );
+                deployer.deploy( pom.getFile(), artifact, deploymentRepository, localRepo );
-        catch ( BuildException e )
+        catch ( ArtifactDeploymentException e )
-            diagnoseError( e );
-            
-            throw e;
+            // TODO: deployment exception that does not give a trace
+            throw new BuildException( "Error deploying artifact", e );

UPD83 UPD42 MOV8 DEL33 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL42 DEL53 DEL8 DEL12 DEL54 DEL8