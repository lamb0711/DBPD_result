PR: MNG-471, MNG-489
- refactor project out of MavenSession so that it can be cloned
- refactor lifecycle construction out so we can clone the existing one and pass it into a new execution
- only resolve plugins that are executed (MNG-489)



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191413 13f79535-47bb-0310-9956-ffa450edef68

-    protected Map pluginDescriptorsByPrefix;
+    protected Map pluginIdsByPrefix;
-        pluginDescriptorsByPrefix = new HashMap();
+        pluginIdsByPrefix = new HashMap();
-                if ( !pluginDescriptorsByPrefix.containsKey( pluginDescriptor.getGoalPrefix() ) )
+                // we also need to deal with multiple versions somehow - currently, first wins
+                if ( !pluginIdsByPrefix.containsKey( pluginDescriptor.getGoalPrefix() ) )
-                    pluginDescriptorsByPrefix.put( pluginDescriptor.getGoalPrefix(), pluginDescriptor );
+                    pluginIdsByPrefix.put( pluginDescriptor.getGoalPrefix(), pluginDescriptor.getId() );
-    private PluginDescriptor getPluginDescriptor( String prefix )
-    {
-        return (PluginDescriptor) pluginDescriptorsByPrefix.get( prefix );
-    }
-
-        return pluginDescriptorsByPrefix.containsKey( prefix );
+        return pluginIdsByPrefix.containsKey( prefix );
-    public PluginDescriptor verifyPlugin( String prefix )
+    public String getPluginIdFromPrefix( String prefix )
-        return getPluginDescriptor( prefix );
+        return (String) pluginIdsByPrefix.get( prefix );
-    public void executeMojo( MojoExecution mojoExecution, MavenSession session )
+    public void executeMojo( MavenProject project, MojoExecution mojoExecution, MavenSession session )
-                    .isDependencyResolutionRequired(), artifactFactory );
-                downloadDependencies( session, artifactResolver );
+                    .isDependencyResolutionRequired(), artifactFactory, project );
+                downloadDependencies( project, session, artifactResolver );
-            Xpp3Dom dom = session.getProject().getGoalConfiguration( groupId, artifactId, executionId, goalId );
-            Xpp3Dom reportDom = session.getProject().getReportConfiguration( groupId, artifactId, executionId );
+            Xpp3Dom dom = project.getGoalConfiguration( groupId, artifactId, executionId, goalId );
+            Xpp3Dom reportDom = project.getReportConfiguration( groupId, artifactId, executionId );
-            plugin = getConfiguredMojo( pluginContainer, mojoDescriptor, session, dom );
+            plugin = getConfiguredMojo( pluginContainer, mojoDescriptor, session, dom, project );
-                            MavenSession session )
+                            MavenSession session, MavenProject project )
-                    Xpp3Dom dom = session.getProject().getReportConfiguration( groupId, artifactId, executionId );
+                    Xpp3Dom dom = project.getReportConfiguration( groupId, artifactId, executionId );
-                    reports.add( getConfiguredMojo( pluginContainer, mojoDescriptor, session, dom ) );
+                    reports.add( getConfiguredMojo( pluginContainer, mojoDescriptor, session, dom, project ) );
-                                    MavenSession session, Xpp3Dom dom )
+                                    MavenSession session, Xpp3Dom dom, MavenProject project )
-                                                                                          pathTranslator, getLogger() );
+                                                                                          pathTranslator, getLogger(),
+                                                                                          project );
-                                                ArtifactFactory artifactFactory )
+                                                ArtifactFactory artifactFactory, MavenProject project )
-        MavenProject project = context.getProject();
-
-    private void downloadDependencies( MavenSession context, ArtifactResolver artifactResolver )
+    private void downloadDependencies( MavenProject project, MavenSession context, ArtifactResolver artifactResolver )
-        for ( Iterator it = context.getProject().getArtifacts().iterator(); it.hasNext(); )
+        for ( Iterator it = project.getArtifacts().iterator(); it.hasNext(); )
-        for ( Iterator it = context.getProject().getPluginArtifacts().iterator(); it.hasNext(); )
+        for ( Iterator it = project.getPluginArtifacts().iterator(); it.hasNext(); )
-        context.getProject().setPluginArtifacts( pluginArtifacts );
+        project.setPluginArtifacts( pluginArtifacts );
-        artifactResolver.resolve( context.getProject().getParentArtifact(), context.getRemoteRepositories(), context
+        artifactResolver.resolve( project.getParentArtifact(), context.getRemoteRepositories(), context

MOV44 UPD43 UPD42 INS44 INS44 INS44 INS44 INS44 UPD42 UPD42 INS43 INS42 INS43 INS42 INS43 INS42 MOV43 INS42 INS43 INS42 INS11 INS42 INS42 INS42 INS42 UPD42 UPD42 INS43 INS32 UPD42 MOV42 INS42 INS42 UPD42 MOV42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD42 UPD42 INS32 MOV42 INS42 UPD42 MOV42 INS42 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL11 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL44 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32