Fix: mng3746 - Implemented proper ordering of system, user and model properties used in interpolation. this required creating a tag value, which could be used for comparing and ordering of InterpolatorProperty.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@695196 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collection;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
+import java.util.*;
-                        false, false));
+                        PomInterpolatorTag.PROJECT_PROPERTIES.name(), false, false));
-            standardInterpolatorProperties.add(new InterpolatorProperty("${project.basedir}", basedir ));
-            standardInterpolatorProperties.add(new InterpolatorProperty("${basedir}", basedir ));
-            standardInterpolatorProperties.add(new InterpolatorProperty("${pom.basedir}", basedir ));
+            standardInterpolatorProperties.add(new InterpolatorProperty("${project.basedir}", basedir,
+                    PomInterpolatorTag.PROJECT_PROPERTIES.name() ));
+            standardInterpolatorProperties.add(new InterpolatorProperty("${basedir}", basedir,
+                    PomInterpolatorTag.PROJECT_PROPERTIES.name() ));
+            standardInterpolatorProperties.add(new InterpolatorProperty("${pom.basedir}", basedir,
+                    PomInterpolatorTag.PROJECT_PROPERTIES.name() ));
-                        uri.length() ) + "}", mp.getValue() ) );
+                        uri.length() ) + "}", mp.getValue(), PomInterpolatorTag.PROJECT_PROPERTIES.name() ) );
-        ips1.addAll(ModelTransformerContext.createInterpolatorProperties(firstPassModelProperties, ProjectUri.baseUri, aliases,
-                        false, false));
+        ips1.addAll(ModelTransformerContext.createInterpolatorProperties(firstPassModelProperties, ProjectUri.baseUri, aliases,
+                        PomInterpolatorTag.PROJECT_PROPERTIES.name(), false, false));
+        Collections.sort(ips1, new Comparator<InterpolatorProperty>()
+        {
+            public int compare(InterpolatorProperty o, InterpolatorProperty o1) {
+                return PomInterpolatorTag.valueOf(o.getTag()).compareTo(PomInterpolatorTag.valueOf(o1.getTag()));
+            }
+        });
+        ips2.addAll(standardInterpolatorProperties);        
-                        false, false));
-        ips2.addAll(standardInterpolatorProperties);
+                        PomInterpolatorTag.PROJECT_PROPERTIES.name(), false, false));
+        ips2.addAll(interpolatorProperties);
+        Collections.sort(ips2, new Comparator<InterpolatorProperty>()
+        {
+            public int compare(InterpolatorProperty o, InterpolatorProperty o1) {
+                return PomInterpolatorTag.valueOf(o.getTag()).compareTo(PomInterpolatorTag.valueOf(o1.getTag()));
+            }
+        });

UPD40 MOV21 MOV21 INS21 INS21 INS21 INS32 INS32 INS32 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS32 INS32 INS74 INS1 INS32 INS74 INS1 INS40 INS42 INS40 INS42 INS43 INS43 INS31 INS40 INS42 INS43 INS43 INS31 MOV43 INS32 MOV43 INS32 MOV43 INS32 INS42 INS42 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS42 INS83 INS39 INS42 INS44 INS44 INS8 INS40 INS42 INS40 INS42 INS40 INS42 INS43 INS42 INS43 INS42 INS41 INS43 INS42 INS43 INS42 INS41 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS40 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26