PR: MNG-122
final exception cleanup - reduce the noise in the lifecycle executor, get rid of response object in favour of exception handling from DefaultMaven.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@320797 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.plugin.InvalidPluginException;
+import org.apache.maven.plugin.version.PluginVersionNotFoundException;
-                            getLog().debug( "Error resolving plugin version", e );
-                            throw new MojoFailureException(
-                                "Cannot resolve version for plugin '" + plugin.getKey() + "': " + e.getMessage() );
+                            throw new MojoExecutionException(
+                                "Cannot resolve version for plugin '" + plugin.getKey() + "': " + e.getMessage(), e );
+                        }
+                        catch ( InvalidPluginException e )
+                        {
+                            throw new MojoExecutionException(
+                                "Cannot resolve version for plugin '" + plugin.getKey() + "': " + e.getMessage(), e );
+                        }
+                        catch ( PluginVersionNotFoundException e )
+                        {
+                            throw new MojoFailureException( e.getMessage() );
-                            getLog().debug( "Error resolving report version", e );
-                            throw new MojoFailureException(
-                                "Cannot resolve version for report '" + plugin.getKey() + "': " + e.getMessage() );
+                            throw new MojoExecutionException(
+                                "Cannot resolve version for report '" + plugin.getKey() + "': " + e.getMessage(), e );
+                        }
+                        catch ( InvalidPluginException e )
+                        {
+                            throw new MojoExecutionException(
+                                "Cannot resolve version for plugin '" + plugin.getKey() + "': " + e.getMessage(), e );
+                        }
+                        catch ( PluginVersionNotFoundException e )
+                        {
+                            throw new MojoFailureException( e.getMessage() );
