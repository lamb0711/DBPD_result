o Refactored the MavenSettings code into the settings.mdo/Settings class.

o Added code to cache the active proxy and profile inside the Settings instance for quicker lookup.

o Added a method to initialize a new active profile for a Settings instance in the event one didn't exist.

o Started adding offline mode. So far, I've implemented:

  - Warning when a mojo declares a requirement for connectivity, but we're offline.

  - INFO message stating when maven is running in offline mode.

  - Addition to the Profile class in o.a.m.settings package to allow specification of offline mode by declaring: <offline>true</offline>


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163969 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.settings.MavenSettings;
+import org.apache.maven.settings.Settings;
+        
+        Settings settings = null;
+        
+        try
+        {
+            settings = mavenSettingsBuilder.buildSettings();
+        }
+        catch ( Exception e )
+        {
+            throw new ProjectBuildingException( "Cannot read settings.", e );
+        }
+        
+        boolean systemOnline = !settings.getActiveProfile().isOffline();
+        Settings settings = null;
+        
+        try
+        {
+            settings = mavenSettingsBuilder.buildSettings();
+        }
+        catch ( Exception e )
+        {
+            throw new ProjectBuildingException( "Cannot read settings.", e );
+        }
+        
+            Settings settings;
+            try
+            {
+                settings = mavenSettingsBuilder.buildSettings();
+            }
+            catch ( Exception e )
+            {
+                throw new ProjectBuildingException( "Cannot read settings.", e );
+            }
+            
-        MavenSettings settings = null;
+        Settings settings = null;
-        MavenSettings settings = mavenSettingsBuilder.buildSettings();
+        Settings settings = mavenSettingsBuilder.buildSettings();
-        MavenSettings settings = mavenSettingsBuilder.buildSettings();
+        Settings settings = mavenSettingsBuilder.buildSettings();
