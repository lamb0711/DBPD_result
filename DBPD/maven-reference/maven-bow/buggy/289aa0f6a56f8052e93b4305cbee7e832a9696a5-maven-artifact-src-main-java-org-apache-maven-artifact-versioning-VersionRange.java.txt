PR: MNG-505
enable version ranges in resolution (only default conflict resolution - nearest suggested version, fail if over-constrained)

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219844 13f79535-47bb-0310-9956-ffa450edef68

+    private final ArtifactVersion RELEASE = new DefaultArtifactVersion( "RELEASE" );
+
+
+    public ArtifactVersion getSelectedVersion()
+        throws OverConstrainedVersionException
+    {
+        ArtifactVersion version;
+        if ( recommendedVersion != null )
+        {
+            version = recommendedVersion;
+        }
+        else
+        {
+            if ( restrictions.size() == 0 )
+            {
+                throw new OverConstrainedVersionException( "The artifact has no valid ranges" );
+            }
+            else
+            {
+                Restriction restriction = (Restriction) restrictions.get( restrictions.size() - 1 );
+                // TODO: how can we find the latest release before something to facilitate ) at the end?
+                version = restriction.getUpperBound();
+                if ( version == null )
+                {
+                    version = RELEASE;
+                }
+            }
+        }
+        return version;
+    }
+
+    public String toString()
+    {
+        if ( recommendedVersion != null )
+        {
+            return recommendedVersion.toString();
+        }
+        else
+        {
+            StringBuffer buf = new StringBuffer();
+            for ( Iterator i = restrictions.iterator(); i.hasNext(); )
+            {
+                Restriction r = (Restriction) i.next();
+
+                buf.append( r.isLowerBoundInclusive() ? "[" : "(" );
+                if ( r.getLowerBound() != null )
+                {
+                    buf.append( r.getLowerBound().toString() );
+                }
+                buf.append( "," );
+                if ( r.getUpperBound() != null )
+                {
+                    buf.append( r.getUpperBound().toString() );
+                }
+                buf.append( r.isUpperBoundInclusive() ? "]" : ")" );
+
+                if ( i.hasNext() )
+                {
+                    buf.append( "," );
+                }
+            }
+            return buf.toString();
+        }
+    }
