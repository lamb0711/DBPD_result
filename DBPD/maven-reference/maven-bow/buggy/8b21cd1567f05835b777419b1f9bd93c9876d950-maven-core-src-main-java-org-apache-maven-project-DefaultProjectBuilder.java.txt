[MNG-4450] [regression] Stub project for missing dependency POMs is not properly created

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@881563 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.building.ModelSource;
+import org.apache.maven.model.building.StringModelSource;
-        return build( pomFile, true, configuration );
+        return build( pomFile, new FileModelSource( pomFile ), configuration );
-    private ProjectBuildingResult build( File pomFile, boolean localProject, ProjectBuildingRequest configuration )
+    private ProjectBuildingResult build( File pomFile, ModelSource modelSource, ProjectBuildingRequest configuration )
-
-                if ( localProject )
-                {
-                    request.setPomFile( pomFile );
-                }
-                else
-                {
-                    request.setModelSource( new FileModelSource( pomFile ) );
-                }
+                request.setPomFile( pomFile );
+                request.setModelSource( modelSource );
+        return build( artifact, false, configuration );
+    }
+
+    public ProjectBuildingResult build( Artifact artifact, boolean allowStubModel, ProjectBuildingRequest configuration )
+        throws ProjectBuildingException
+    {
+        if ( result.hasMissingArtifacts() && allowStubModel )
+        {
+            return build( null, createStubModelSource( artifact ), configuration );
+        }
+
-        return build( artifact.getFile(), localProject, configuration );
+        File pomFile = artifact.getFile();
+
+        return build( localProject ? pomFile : null, new FileModelSource( pomFile ), configuration );
+    }
+
+    private ModelSource createStubModelSource( Artifact artifact )
+    {
+        StringBuilder buffer = new StringBuilder( 1024 );
+
+        buffer.append( "<?xml version='1.0'?>" );
+        buffer.append( "<project>" );
+        buffer.append( "<modelVersion>4.0.0</modelVersion>" );
+        buffer.append( "<groupId>" ).append( artifact.getGroupId() ).append( "</groupId>" );
+        buffer.append( "<artifactId>" ).append( artifact.getArtifactId() ).append( "</artifactId>" );
+        buffer.append( "<version>" ).append( artifact.getBaseVersion() ).append( "</version>" );
+        buffer.append( "<packaging>" ).append( artifact.getType() ).append( "</packaging>" );
+        buffer.append( "</project>" );
+
+        return new StringModelSource( buffer, artifact.getId() );
-        ModelBuildingRequest request = getModelBuildingRequest( config, null );
-
-        MavenProject standaloneProject = new MavenProject( repositorySystem, this, config );
-
-        DefaultModelBuildingListener listener =
-            new DefaultModelBuildingListener( standaloneProject, projectBuildingHelper, config );
-        request.setModelBuildingListener( listener );
-
-        request.setModelSource( new UrlModelSource( getClass().getResource( "standalone.xml" ) ) );
-
-        ModelBuildingResult result;
-        try
-        {
-            result = modelBuilder.build( request );
-        }
-        catch ( ModelBuildingException e )
-        {
-            throw new ProjectBuildingException( "[standalone]", "Failed to build standalone project", e );
-        }
-
-        standaloneProject.setModel( result.getEffectiveModel() );
-        standaloneProject.setOriginalModel( result.getRawModel() );
-
-        standaloneProject.setActiveProfiles( result.getActiveExternalProfiles() );
-        standaloneProject.setInjectedProfileIds( "external", getProfileIds( result.getActiveExternalProfiles() ) );
-
-        standaloneProject.setExecutionRoot( true );
-
-        return new DefaultProjectBuildingResult( standaloneProject, result.getProblems(), null );
+        ProjectBuildingResult result =
+            build( null, new UrlModelSource( getClass().getResource( "standalone.xml" ) ), config );
+        result.getProject().setExecutionRoot( true );
+        return result;
-        Build build = project.getBuild();
-        project.addScriptSourceRoot( build.getScriptSourceDirectory() );
-        project.addCompileSourceRoot( build.getSourceDirectory() );
-        project.addTestCompileSourceRoot( build.getTestSourceDirectory() );
+        if ( project.getFile() != null )
+        {
+            Build build = project.getBuild();
+            project.addScriptSourceRoot( build.getScriptSourceDirectory() );
+            project.addCompileSourceRoot( build.getSourceDirectory() );
+            project.addTestCompileSourceRoot( build.getTestSourceDirectory() );
+        }
