Report generate directly xhtml file

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@169076 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.doxia.module.xhtml.XhtmlSink;
+import java.io.InputStream;
+import java.io.IOException;
+     * @parameter expression="${basedir}"
+     * @required
+     */
+    private String basedir;
+
+    /**
-                    report.generate();
+                    XhtmlSink sink = siteRenderer.createSink( new File( siteDirectory ), siteDirectory,
+                                                              report.getOutputName() + ".html",
+                                                              outputDirectory, getSiteDescriptor(), flavour );
+
+                    report.generate( sink );
-            File siteDescriptor = new File( siteDirectory, "site.xml" );
-            if ( !siteDescriptor.exists() )
-            {
-                throw new MojoExecutionException( "The site descriptor is not present!" );
-            }
-            String siteDescriptorContent = FileUtils.fileRead( siteDescriptor );
-            Map props = new HashMap();
-            if ( reports != null )
-            {
-                props.put( "reports", getReportsMenu() );
-            }
-            siteDescriptorContent = StringUtils.interpolate( siteDescriptorContent, props );
-            StringInputStream siteDescriptorStream = new StringInputStream( siteDescriptorContent );
-
-                                 siteDescriptorStream );
+                                 getSiteDescriptor() );
+
+
+    private InputStream getSiteDescriptor()
+        throws MojoExecutionException
+    {
+        File siteDescriptor = new File( siteDirectory, "site.xml" );
+
+        if ( !siteDescriptor.exists() )
+        {
+            throw new MojoExecutionException( "The site descriptor is not present!" );
+        }
+
+        String siteDescriptorContent = "";
+
+        try
+        {
+            siteDescriptorContent = FileUtils.fileRead( siteDescriptor );
+        }
+        catch( IOException e )
+        {
+            throw new MojoExecutionException( "The site descriptor cannot be read!", e );
+        }
+
+        Map props = new HashMap();
+
+        if ( reports != null )
+        {
+            props.put( "reports", getReportsMenu() );
+        }
+
+        siteDescriptorContent = StringUtils.interpolate( siteDescriptorContent, props );
+
+        return new StringInputStream( siteDescriptorContent );
+    }
