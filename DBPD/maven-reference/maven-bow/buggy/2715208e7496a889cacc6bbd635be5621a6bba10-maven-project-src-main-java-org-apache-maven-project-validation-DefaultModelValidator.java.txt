PR: MNG-801
validate ids in model

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@307314 13f79535-47bb-0310-9956-ffa450edef68

+    private static final String ID_REGEX = "[A-Za-z0-9_\\-.]+";
+
-        validateStringNotEmpty( "groupId", result, model.getGroupId() );
+        validateId( "groupId", result, model.getGroupId() );
-        validateStringNotEmpty( "artifactId", result, model.getArtifactId() );
+        validateId( "artifactId", result, model.getArtifactId() );
-            validateSubElementStringNotEmpty( d, "dependencies.dependency.artifactId", result, d.getArtifactId() );
+            validateId( "dependencies.dependency.artifactId", result, d.getArtifactId() );
-            validateSubElementStringNotEmpty( d, "dependencies.dependency.groupId", result, d.getGroupId() );
+            validateId( "dependencies.dependency.groupId", result, d.getGroupId() );
-            validateSubElementStringNotEmpty( d, "dependencies.dependency.type", result, d.getType() );
+            validateStringNotEmpty( "dependencies.dependency.type", result, d.getType() );
-            validateSubElementStringNotEmpty( d, "dependencies.dependency.version", result, d.getVersion() );
+            validateStringNotEmpty( "dependencies.dependency.version", result, d.getVersion() );
+    private boolean validateId( String fieldName, ModelValidationResult result, String id )
+    {
+        if ( !validateStringNotEmpty( fieldName, result, id ) )
+        {
+            return false;
+        }
+        else
+        {
+            boolean match = id.matches( ID_REGEX );
+            if ( !match )
+            {
+                result.addMessage( "'" + fieldName + "' with value '" + id + "' does not match a valid id pattern." );
+            }
+            return match;
+        }
+    }
+
