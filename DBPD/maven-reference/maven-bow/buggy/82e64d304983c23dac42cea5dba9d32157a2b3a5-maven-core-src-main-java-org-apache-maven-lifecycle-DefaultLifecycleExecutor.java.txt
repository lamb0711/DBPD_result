o Restored compat with Maven 2.x regarding order of mojo parameters

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@800767 13f79535-47bb-0310-9956-ffa450edef68

+            if ( logger.isDebugEnabled() )
+            {
+                logger.debug( "Forking execution for " + mojoExecution.getMojoDescriptor().getId() );
+            }
+
+
+            if ( logger.isDebugEnabled() )
+            {
+                logger.debug( "Completed forked execution for " + mojoExecution.getMojoDescriptor().getId() );
+            }
+            extractMojoConfiguration( mojoExecution );
+
-                                Xpp3Dom executionConfiguration = forkedExecution.getConfiguration();
+                                Xpp3Dom forkedConfiguration = forkedExecution.getConfiguration();
-                                Xpp3Dom mergedConfiguration =
-                                    Xpp3Dom.mergeXpp3Dom( phaseConfiguration, executionConfiguration );
+                                forkedConfiguration = Xpp3Dom.mergeXpp3Dom( phaseConfiguration, forkedConfiguration );
-                                forkedExecution.setConfiguration( mergedConfiguration );
+                                forkedExecution.setConfiguration( forkedConfiguration );
+                    extractMojoConfiguration( forkedExecution );
+
+            extractMojoConfiguration( forkedExecution );
+
-                    Xpp3Dom mojoConfiguration = extractMojoConfiguration( executionConfiguration, mojoDescriptor );
+                    Xpp3Dom mojoConfiguration = new Xpp3Dom( executionConfiguration );
-                pluginConfiguration = extractMojoConfiguration( pluginConfiguration, mojoDescriptor );
+                pluginConfiguration = new Xpp3Dom( pluginConfiguration );
+    private void extractMojoConfiguration( MojoExecution mojoExecution )
+    {
+        Xpp3Dom configuration = mojoExecution.getConfiguration();
+
+        configuration = extractMojoConfiguration( configuration, mojoExecution.getMojoDescriptor() );
+
+        mojoExecution.setConfiguration( configuration );
+    }
+
-     * @param executionConfiguration The configuration from the plugin execution, must not be {@code null}.
+     * @param executionConfiguration The configuration from the plugin execution, may be {@code null}.
-        Xpp3Dom mojoConfiguration = new Xpp3Dom( executionConfiguration.getName() );
+        Xpp3Dom mojoConfiguration = null;
-        Map<String, Parameter> mojoParameters = mojoDescriptor.getParameterMap();
-
-        Map<String, String> aliases = new HashMap<String, String>();
-        if ( mojoDescriptor.getParameters() != null )
+        if ( executionConfiguration != null )
-            for ( Parameter parameter : mojoDescriptor.getParameters() )
+            mojoConfiguration = new Xpp3Dom( executionConfiguration.getName() );
+
+            if ( mojoDescriptor.getParameters() != null )
-                String alias = parameter.getAlias();
-                if ( StringUtils.isNotEmpty( alias ) )
+                for ( Parameter parameter : mojoDescriptor.getParameters() )
-                    aliases.put( alias, parameter.getName() );
+                    Xpp3Dom parameterConfiguration = executionConfiguration.getChild( parameter.getName() );
+
+                    if ( parameterConfiguration == null )
+                    {
+                        parameterConfiguration = executionConfiguration.getChild( parameter.getAlias() );
+                    }
+
+                    if ( parameterConfiguration != null )
+                    {
+                        parameterConfiguration = new Xpp3Dom( parameterConfiguration, parameter.getName() );
+
+                        if ( StringUtils.isNotEmpty( parameter.getImplementation() ) )
+                        {
+                            parameterConfiguration.setAttribute( "implementation", parameter.getImplementation() );
+                        }
+
+                        mojoConfiguration.addChild( parameterConfiguration );
+                    }
-        for ( int i = 0; i < executionConfiguration.getChildCount(); i++ )
-        {
-            Xpp3Dom executionDom = executionConfiguration.getChild( i );
-            String paramName = executionDom.getName();
-
-            Xpp3Dom mojoDom;
-
-            if ( mojoParameters.containsKey( paramName ) )
-            {
-                mojoDom = new Xpp3Dom( executionDom );
-            }
-            else if ( aliases.containsKey( paramName ) )
-            {
-                mojoDom = new Xpp3Dom( executionDom, aliases.get( paramName ) );
-            }
-            else
-            {
-                continue;
-            }
-
-            String implementation = mojoParameters.get( mojoDom.getName() ).getImplementation();
-            if ( StringUtils.isNotEmpty( implementation ) )
-            {
-                mojoDom.setAttribute( "implementation", implementation );
-            }
-
-            mojoConfiguration.addChild( mojoDom );
-        }
-
