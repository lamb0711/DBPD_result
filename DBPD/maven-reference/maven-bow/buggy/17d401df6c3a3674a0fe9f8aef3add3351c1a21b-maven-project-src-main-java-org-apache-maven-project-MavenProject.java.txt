[MNG-3400] MavenProject is not extensible

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@627670 13f79535-47bb-0310-9956-ffa450edef68

-        this.model = model;
+        this.setModel( model );
-        this.model = model;
+        this.setModel( model );
+    /**
+     * @deprecated use {@link #clone()}
+     */
-        file = project.file;
+        setFile( project.getFile() );
-        // don't need a deep copy, they don't get modified or added/removed to/from - but make them unmodifiable to be sure!
-        if ( project.dependencyArtifacts != null )
+        // don't need a deep copy, they don't get modified or added/removed to/from - but make them unmodifiable to be
+        // sure!
+        if ( project.getDependencyArtifacts() != null )
-            dependencyArtifacts = Collections.unmodifiableSet( project.dependencyArtifacts );
+            setDependencyArtifacts( Collections.unmodifiableSet( project.getDependencyArtifacts() ) );
-        if ( project.artifacts != null )
+        if ( project.getArtifacts() != null )
-            artifacts = Collections.unmodifiableSet( project.artifacts );
+            setArtifacts( Collections.unmodifiableSet( project.getArtifacts() ) );
-        if ( project.pluginArtifacts != null )
+        if ( project.getPluginArtifacts() != null )
-            pluginArtifacts = Collections.unmodifiableSet( project.pluginArtifacts );
+            setPluginArtifacts( Collections.unmodifiableSet( project.getPluginArtifacts() ) );
-        if ( project.reportArtifacts != null )
+        if ( project.getReportArtifacts() != null )
-            reportArtifacts = Collections.unmodifiableSet( project.reportArtifacts );
+            setReportArtifacts( Collections.unmodifiableSet( project.getReportArtifacts() ) );
-        if ( project.extensionArtifacts != null )
+        if ( project.getExtensionArtifacts() != null )
-            extensionArtifacts = Collections.unmodifiableSet( project.extensionArtifacts );
+            setExtensionArtifacts( Collections.unmodifiableSet( project.getExtensionArtifacts() ) );
-        parentArtifact = project.parentArtifact;
+        setParentArtifact( ( project.getParentArtifact() ) );
-        if ( project.remoteArtifactRepositories != null )
+        if ( project.getRemoteArtifactRepositories() != null )
-            remoteArtifactRepositories = Collections.unmodifiableList( project.remoteArtifactRepositories );
+            setRemoteArtifactRepositories( Collections.unmodifiableList( project.getRemoteArtifactRepositories() ) );
-        if ( project.pluginArtifactRepositories != null )
+        if ( project.getPluginArtifactRepositories() != null )
-            pluginArtifactRepositories = Collections.unmodifiableList( project.pluginArtifactRepositories );
+            setPluginArtifactRepositories( ( Collections.unmodifiableList( project.getPluginArtifactRepositories() ) ) );
-        if ( project.collectedProjects != null )
+        if ( project.getCollectedProjects() != null )
-            collectedProjects = Collections.unmodifiableList( project.collectedProjects );
+            setCollectedProjects( ( Collections.unmodifiableList( project.getCollectedProjects() ) ) );
-        if ( project.activeProfiles != null )
+        if ( project.getActiveProfiles() != null )
-            activeProfiles = Collections.unmodifiableList( project.activeProfiles );
+            setActiveProfiles( ( Collections.unmodifiableList( project.getActiveProfiles() ) ) );
-            attachedArtifacts = new ArrayList( project.getAttachedArtifacts() );
+            setAttachedArtifacts( new ArrayList( project.getAttachedArtifacts() ) );
-        if ( project.compileSourceRoots != null )
+        if ( project.getCompileSourceRoots() != null )
-            compileSourceRoots = new ArrayList( project.compileSourceRoots );
+            setCompileSourceRoots( ( new ArrayList( project.getCompileSourceRoots() ) ) );
-        if ( project.testCompileSourceRoots != null )
+        if ( project.getTestCompileSourceRoots() != null )
-            testCompileSourceRoots = new ArrayList( project.testCompileSourceRoots );
+            setTestCompileSourceRoots( ( new ArrayList( project.getTestCompileSourceRoots() ) ) );
-        if ( project.scriptSourceRoots != null )
+        if ( project.getScriptSourceRoots() != null )
-            scriptSourceRoots = new ArrayList( project.scriptSourceRoots );
+            setScriptSourceRoots( ( new ArrayList( project.getScriptSourceRoots() ) ) );
-        model = ModelUtils.cloneModel( project.model );
+        setModel( ( ModelUtils.cloneModel( project.getModel() ) ) );
-        if ( project.originalModel != null )
+        if ( project.getOriginalModel() != null )
-            originalModel = ModelUtils.cloneModel( project.originalModel );
+            setOriginalModel( ( ModelUtils.cloneModel( project.getOriginalModel() ) ) );
-        executionRoot = project.executionRoot;
+        setExecutionRoot( project.isExecutionRoot() );
-        if ( project.artifact != null )
+        if ( project.getArtifact() != null )
-            artifact = ArtifactUtils.copyArtifact( project.artifact );
+            setArtifact( ArtifactUtils.copyArtifact( project.getArtifact() ) );
-        if ( project.releaseArtifactRepository != null )
+        if ( project.getReleaseArtifactRepository() != null )
-            releaseArtifactRepository = project.releaseArtifactRepository;
+            setReleaseArtifactRepository( project.getReleaseArtifactRepository() );
-        if ( project.snapshotArtifactRepository != null )
+        if ( project.getSnapshotArtifactRepository() != null )
-            snapshotArtifactRepository = project.snapshotArtifactRepository;
+            setSnapshotArtifactRepository( project.getSnapshotArtifactRepository() );
-        model.setDependencies( dependencies );
+        getModel().setDependencies( dependencies );
-        return model.getDependencies();
+        return getModel().getDependencies();
-        return model.getDependencyManagement();
+        return getModel().getDependencyManagement();
-                if ( !compileSourceRoots.contains( path ) )
+                if ( !getCompileSourceRoots().contains( path ) )
-                    compileSourceRoots.add( path );
+                    getCompileSourceRoots().add( path );
-                if ( !scriptSourceRoots.contains( path ) )
+                if ( !getScriptSourceRoots().contains( path ) )
-                    scriptSourceRoots.add( path );
+                    getScriptSourceRoots().add( path );
-                if ( !testCompileSourceRoots.contains( path ) )
+                if ( !getTestCompileSourceRoots().contains( path ) )
-                    testCompileSourceRoots.add( path );
+                    getTestCompileSourceRoots().add( path );
-        model.setModelVersion( pomVersion );
+        getModel().setModelVersion( pomVersion );
-        return model.getModelVersion();
+        return getModel().getModelVersion();
-        return model.getId();
+        return getModel().getId();
-        model.setGroupId( groupId );
+        getModel().setGroupId( groupId );
-        String groupId = model.getGroupId();
+        String groupId = getModel().getGroupId();
-        if ( ( groupId == null ) && ( model.getParent() != null ) )
+        if ( ( groupId == null ) && ( getModel().getParent() != null ) )
-            groupId = model.getParent().getGroupId();
+            groupId = getModel().getParent().getGroupId();
-        model.setArtifactId( artifactId );
+        getModel().setArtifactId( artifactId );
-        return model.getArtifactId();
+        return getModel().getArtifactId();
-        model.setName( name );
+        getModel().setName( name );
-        if ( model.getName() != null )
+        if ( getModel().getName() != null )
-            return model.getName();
+            return getModel().getName();
-        model.setVersion( version );
+        getModel().setVersion( version );
-        String version = model.getVersion();
+        String version = getModel().getVersion();
-        if ( ( version == null ) && ( model.getParent() != null ) )
+        if ( ( version == null ) && ( getModel().getParent() != null ) )
-            version = model.getParent().getVersion();
+            version = getModel().getParent().getVersion();
-        return model.getPackaging();
+        return getModel().getPackaging();
-        model.setPackaging( packaging );
+        getModel().setPackaging( packaging );
-        model.setInceptionYear( inceptionYear );
+        getModel().setInceptionYear( inceptionYear );
-        return model.getInceptionYear();
+        return getModel().getInceptionYear();
-        model.setUrl( url );
+        getModel().setUrl( url );
-        return model.getUrl();
+        return getModel().getUrl();
-        return model.getPrerequisites();
+        return getModel().getPrerequisites();
-        model.setIssueManagement( issueManagement );
+        getModel().setIssueManagement( issueManagement );
-        return model.getCiManagement();
+        return getModel().getCiManagement();
-        model.setCiManagement( ciManagement );
+        getModel().setCiManagement( ciManagement );
-        return model.getIssueManagement();
+        return getModel().getIssueManagement();
-        model.setDistributionManagement( distributionManagement );
+        getModel().setDistributionManagement( distributionManagement );
-        return model.getDistributionManagement();
+        return getModel().getDistributionManagement();
-        model.setDescription( description );
+        getModel().setDescription( description );
-        return model.getDescription();
+        return getModel().getDescription();
-        model.setOrganization( organization );
+        getModel().setOrganization( organization );
-        return model.getOrganization();
+        return getModel().getOrganization();
-        model.setScm( scm );
+        getModel().setScm( scm );
-        return model.getScm();
+        return getModel().getScm();
-        model.setMailingLists( mailingLists );
+        getModel().setMailingLists( mailingLists );
-        return model.getMailingLists();
+        return getModel().getMailingLists();
-        model.addMailingList( mailingList );
+        getModel().addMailingList( mailingList );
-        model.setDevelopers( developers );
+        getModel().setDevelopers( developers );
-        return model.getDevelopers();
+        return getModel().getDevelopers();
-        model.addDeveloper( developer );
+        getModel().addDeveloper( developer );
-        model.setContributors( contributors );
+        getModel().setContributors( contributors );
-        return model.getContributors();
+        return getModel().getContributors();
-        model.addContributor( contributor );
+        getModel().addContributor( contributor );
-        model.setBuild( build );
+        getModel().setBuild( build );
-        model.setReporting( reporting );
+        getModel().setReporting( reporting );
-        return model.getReporting();
+        return getModel().getReporting();
-        model.setLicenses( licenses );
+        getModel().setLicenses( licenses );
-        return model.getLicenses();
+        return getModel().getLicenses();
-        model.addLicense( license );
+        getModel().addLicense( license );
-        return model.getRepositories();
+        return getModel().getRepositories();
-        if ( model.getReporting() == null )
+        if ( getModel().getReporting() == null )
-        return model.getReporting().getPlugins();
+        return getModel().getReporting().getPlugins();
-        if ( model.getBuild() == null )
+        if ( getModel().getBuild() == null )
-        return model.getBuild().getPlugins();
+        return getModel().getBuild().getPlugins();
-        return model.getModules();
+        return getModel().getModules();
-        Build build = model.getBuild();
+        Build build = getModel().getBuild();
-        Build build = model.getBuild();
+        Build build = getModel().getBuild();
-            model.setBuild( build );
+            getModel().setBuild( build );
-        return getArtifact().isSnapshot() && ( snapshotArtifactRepository != null ) ? snapshotArtifactRepository
-            : releaseArtifactRepository;
+        return getArtifact().isSnapshot() && ( getSnapshotArtifactRepository() != null ) ? getSnapshotArtifactRepository()
+            : getReleaseArtifactRepository();
-        return model.getRepositories();
+        return getModel().getRepositories();
+
+    protected void setModel( Model model )
+    {
+        this.model = model;
+    }
+
+    protected void setAttachedArtifacts( List attachedArtifacts )
+    {
+        this.attachedArtifacts = attachedArtifacts;
+    }
+
+    protected void setCompileSourceRoots( List compileSourceRoots )
+    {
+        this.compileSourceRoots = compileSourceRoots;
+    }
+
+    protected void setTestCompileSourceRoots( List testCompileSourceRoots )
+    {
+        this.testCompileSourceRoots = testCompileSourceRoots;
+    }
+
+    protected void setScriptSourceRoots( List scriptSourceRoots )
+    {
+        this.scriptSourceRoots = scriptSourceRoots;
+    }
+
+    protected ArtifactRepository getReleaseArtifactRepository()
+    {
+        return releaseArtifactRepository;
+    }
+
+    protected ArtifactRepository getSnapshotArtifactRepository()
+    {
+        return snapshotArtifactRepository;
+    }
+
+    /**
+     * @since 2.0.9
+     */
+    public Object clone()
+    {
+        return new MavenProject( this );
+    }
+
