o Extended metadata resolution group to also hold managed version map. This can save us another trip through the project builder when transitively resolving say plugin dependencies. We already need to build the project to grab the direct dependencies so we can as well grab the managed ones while we're there

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@801738 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.metadata.ResolutionGroup;
+import org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest;
+import org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest;
+            MetadataResolutionRequest metadataRequest = new DefaultMetadataResolutionRequest();
+
+            metadataRequest.setArtifact( rootArtifact );
+            metadataRequest.setLocalRepository( localRepository );
+            metadataRequest.setRemoteRepositories( remoteRepositories );
+            metadataRequest.setResolveManagedVersions( managedVersions == null );
+
-                Set<Artifact> directArtifacts = source.retrieve( rootArtifact, localRepository, remoteRepositories ).getArtifacts();
+                ResolutionGroup resolutionGroup = source.retrieve( metadataRequest );
+
+                if ( managedVersions == null )
+                {
+                    managedVersions = resolutionGroup.getManagedVersions();
+                }
+
+                Set<Artifact> directArtifacts = resolutionGroup.getArtifacts();
