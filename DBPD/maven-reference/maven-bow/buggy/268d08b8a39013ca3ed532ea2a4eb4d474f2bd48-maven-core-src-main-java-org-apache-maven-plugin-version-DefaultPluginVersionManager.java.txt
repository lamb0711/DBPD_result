[MNG-3372] Improve error handling where a mojo is referenced but the plugin doesn't contain it (in direct-invocation cases), and fix plugin-version discovery where a plugin pom gives a maven prereq.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@614708 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.versioning.DefaultArtifactVersion;
+import org.apache.maven.artifact.versioning.Restriction;
-                    DefaultArtifactVersion requiredVersion =
-                        new DefaultArtifactVersion( pluginProject.getPrerequisites().getMaven() );
+                    String mavenVersion = pluginProject.getPrerequisites().getMaven();
-                    if ( runtimeInformation.getApplicationVersion().compareTo( requiredVersion ) != 0 )
+                    VersionRange mavenRange = null;
+                    try
+                    {
+                        mavenRange = VersionRange.createFromVersionSpec( mavenVersion );
+
+                        List restrictions = mavenRange.getRestrictions();
+                        if ( ( restrictions.size() == 1 ) && Restriction.EVERYTHING.equals( restrictions.get( 0 ) ) )
+                        {
+                            String range = "[" + mavenVersion + ",]";
+
+                            getLogger().debug( "Plugin: "
+                                               + pluginProject.getId()
+                                               + " specifies a simple prerequisite Maven version of: "
+                                               + mavenVersion
+                                               + ". This version has been translated into the range: "
+                                               + range + " for plugin-version resolution purposes." );
+
+                            mavenRange = VersionRange.createFromVersionSpec( range );
+                        }
+                    }
+                    catch ( InvalidVersionSpecificationException e )
+                    {
+                        getLogger().debug( "Invalid prerequisite Maven version: " + mavenVersion + " for plugin: " + pluginProject.getId() +
+                                                                        e.getMessage() );
+                    }
+
+                    if ( ( mavenRange != null ) && !mavenRange.containsVersion( runtimeInformation.getApplicationVersion() ) )
-                            " for: " + groupId + ":" + artifactId + " as it requires Maven version " + requiredVersion );
+                            " for: " + groupId + ":" + artifactId + " as it requires Maven version matching: " + mavenVersion );
