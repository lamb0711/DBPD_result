o Changed maven-user-model/UserModel/UserModelBuilder to maven-settings/MavenSettings/MavenSettingsBuilder.

  This supports a change to a simpler local configuration file (~/.m2/settings.xml by default), which has the general format of:

<settings>
  <profiles>
    <profile>
      <active>true</active> <!-- not needed if this is the only profile -->
      <localRepository>/path/to/repo</localRepository>
    </profile>
    .
    .
    .
  </profiles>
  <servers>
    <server>
      <id>myserver</id>
      <username>me</username>
      <password>mypass</password>
      <privateKey>/path/to/key</privateKey>
      <passphrase>key-passphrase</passphrase>
    </server>
    .
    .
    .
  </servers>
  <proxies>
    <proxy>
      <active>true</active> <!-- not needed if this is the only proxy -->
      .
      .
      .
    </proxy>
    .
    .
    .
  </proxies>
</settings>

o Added special parameter named '#settings' which simply injects the current MavenSettings from the MavenSession into the request parameters.
o Adjusted the it-verifier and mboot2 accordingly.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163578 13f79535-47bb-0310-9956-ffa450edef68

-    String[] builds = new String[]{"maven-model", "maven-user-model", "maven-monitor", "maven-plugin",
+    String[] builds = new String[]{"maven-model", "maven-settings", "maven-monitor", "maven-plugin",
-        targetVersions.put( "maven-user-model", "1.0.0" );
+        targetVersions.put( "maven-settings", "1.0.0" );
-        modelFiles.put( "maven-user-model", "maven-user.mdo" );
+        modelFiles.put( "maven-settings", "settings.mdo" );
-            UserModelReader userModelReader = new UserModelReader();
+            SettingsReader userModelReader = new SettingsReader();
-                File userXml = new File( userHome, ".m2/user.xml" );
+                File settingsXml = new File( userHome, ".m2/settings.xml" );
-                if ( userXml.exists() )
+                if ( settingsXml.exists() )
-                    userModelReader.parse( userXml );
+                    userModelReader.parse( settingsXml );
-                    MavenProfile activeProfile = userModelReader.getActiveMavenProfile();
+                    Profile activeProfile = userModelReader.getActiveMavenProfile();
-                      .println( "You SHOULD have a ~/.m2/user.xml file and must contain at least the following information:\n" );
+                      .println( "You SHOULD have a ~/.m2/settings.xml file and must contain at least the following information:\n" );
-            System.out.println( "<userModel>\n  " + "<mavenProfiles>\n    " + "<mavenProfile>\n      "
-                + "<id>someId</id>\n      " + "<localRepository>/path/to/your/repository</localRepository>\n    "
-                + "</mavenProfile>\n  " + "</mavenProfiles>\n  " + "<defaultProfiles>\n    "
-                + "<mavenProfileId>someId</mavenProfileId>\n  " + "</defaultProfiles>\n" + "</userModel>\n" );
-
-            System.out.println( "where \'someId\' is just an id for matching within the file." );
+            System.out.println( "<settings>\n  " + "<profiles>\n    " + "<profile>\n      "
+                + "<localRepository>/path/to/your/repository</localRepository>\n    "
+                + "</profile>\n  " + "</profiles>\n"
+                + "</settings>\n" );
-    class UserModelReader
+    class SettingsReader
-        private Map mavenProfiles = new TreeMap();
+        private List profiles = new ArrayList();
-        private MavenProfile currentProfile = null;
+        private Profile currentProfile = null;
-        private String activeProfileId = null;
+        private Profile activeMavenProfile = null;
-        private MavenProfile activeMavenProfile = null;
-
-        public MavenProfile getActiveMavenProfile()
+        public Profile getActiveMavenProfile()
-            if ( "mavenProfile".equals( rawName ) )
+            if ( "profile".equals( rawName ) )
-                if ( notEmpty( currentProfile.getId() ) && notEmpty( currentProfile.getLocalRepo() ) )
+                if ( notEmpty( currentProfile.getLocalRepo() ) )
-                    mavenProfiles.put( currentProfile.getId(), currentProfile );
+                    profiles.add( currentProfile );
-                    throw new SAXException( "Invalid mavenProfile entry. Missing one or more " +
-                                            "fields: {id,localRepository}." );
+                    throw new SAXException( "Invalid profile entry. Missing one or more " +
+                                            "fields: {localRepository}." );
-                if ( "id".equals( rawName ) )
+                if ( "active".equals( rawName ) )
-                    currentProfile.setId( currentBody.toString().trim() );
+                    currentProfile.setActive( Boolean.valueOf(currentBody.toString().trim()).booleanValue() );
-                    throw new SAXException( "Illegal element inside mavenProfile: \'" + rawName + "\'" );
+                    throw new SAXException( "Illegal element inside profile: \'" + rawName + "\'" );
-            else if ( "userModel".equals( rawName ) )
+            else if ( "settings".equals( rawName ) )
-                this.activeMavenProfile = (MavenProfile) mavenProfiles.get( activeProfileId );
-            }
-            else if ( "mavenProfileId".equals( rawName ) )
-            {
-                this.activeProfileId = currentBody.toString().trim();
+                if(profiles.size() == 1)
+                {
+                    activeMavenProfile = (Profile) profiles.get(0);
+                }
+                else
+                {
+                    for ( Iterator it = profiles.iterator(); it.hasNext(); )
+                    {
+                        Profile profile = (Profile) it.next();
+                        if(profile.isActive())
+                        {
+                            activeMavenProfile = profile;
+                        }
+                    }
+                }
-            if ( "mavenProfile".equals( rawName ) )
+            if ( "profile".equals( rawName ) )
-                currentProfile = new MavenProfile();
+                currentProfile = new Profile();
-            this.activeProfileId = null;
-            this.mavenProfiles.clear();
+            this.profiles.clear();
-    public static class MavenProfile
+    public static class Profile
-        private String id;
+        private boolean active = false;
+        public boolean isActive()
+        {
+            return active;
+        }
+
+        public void setActive( boolean active )
+        {
+            this.active = active;
+        }
+
-        public void setId( String id )
-        {
-            this.id = id;
-        }
-
-        public String getId()
-        {
-            return id;
-        }
-
