o Distinguished different severity levels of model problems, allowing warnings to be collected but still have the build request succeed

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@790109 13f79535-47bb-0310-9956-ffa450edef68

- * or a simple string message. In addition, a problem carries a hint about its source, e.g. the POM file that could not
- * be processed.
+ * or a simple string message. In addition, a problem carries a hint about its source, e.g. the POM file that exhibits
+ * the problem.
+    /**
+     * The different severity levels for a problem, in decreasing order.
+     */
+    public enum Severity
+    {
+
+        FATAL, //
+        ERROR, //
+        WARNING, //
+
+    }
+
+    private Severity severity;
+
+     * @param severity The severity level of the problem, may be {@code null} to default to {@link Severity#ERROR}.
-    public ModelProblem( String message, String source )
+    public ModelProblem( String message, Severity severity, String source )
+        this.severity = ( severity != null ) ? severity : Severity.ERROR;
+     * @param severity The severity level of the problem, may be {@code null} to default to {@link Severity#ERROR}.
-    public ModelProblem( String message, String source, Exception exception )
+    public ModelProblem( String message, Severity severity, String source, Exception exception )
+        this.severity = ( severity != null ) ? severity : Severity.ERROR;
+    /**
+     * Gets the severity level of this problem.
+     * 
+     * @return The severity level of this problem, never {@code null}.
+     */
+    public Severity getSeverity()
+    {
+        return severity;
+    }
+
-        return getSource() + ": " + getMessage();
+        StringBuilder buffer = new StringBuilder( 128 );
+
+        buffer.append( "[" ).append( getSeverity() ).append( "] " );
+        buffer.append( getSource() ).append( ": " ).append( getMessage() );
+
+        return buffer.toString();
