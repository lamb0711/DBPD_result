Updated model processors.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@752990 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Arrays;
+import java.util.HashSet;
+import java.util.List;
+import java.util.SortedSet;
+import java.util.TreeSet;
+import org.apache.maven.model.Plugin;
+import org.apache.maven.model.PluginManagement;
+        PluginsProcessor pluginsProcessor = new PluginsProcessor();
-            copy(p.getBuild(), t.getBuild());     
+            copy(p.getBuild(), t.getBuild());   
+            pluginsProcessor.process( p.getBuild().getPlugins(), null, t.getBuild().getPlugins(), isChildMostSpecialized );  
+            inheritManagement(p.getBuild().getPluginManagement(), null, t.getBuild());
+
+            pluginsProcessor.process( p.getBuild().getPlugins(), c.getBuild().getPlugins(), t.getBuild().getPlugins(), isChildMostSpecialized );  
+            inheritManagement(p.getBuild().getPluginManagement(), c.getBuild().getPluginManagement(), t.getBuild());
+            pluginsProcessor.process( null, c.getBuild().getPlugins(), t.getBuild().getPlugins(), isChildMostSpecialized ); 
+            inheritManagement(null, c.getBuild().getPluginManagement(), t.getBuild());
+    private static void inheritManagement(PluginManagement parent, PluginManagement child, Build target)
+    {  
+        PluginsProcessor proc = new PluginsProcessor();
+        List<Plugin> p = (parent == null) ? new ArrayList<Plugin>() : parent.getPlugins();
+        List<Plugin> c = (child == null) ? new ArrayList<Plugin>() : child.getPlugins();
+        
+        if(c !=null || p!= null)
+        {
+            if(target.getPluginManagement() == null)
+            {
+                target.setPluginManagement( new PluginManagement() );
+            }
+        }
+        proc.process( p, c, target.getPluginManagement().getPlugins(), false );
+    }
+    
-            target.setOutputDirectory( target.getOutputDirectory() );    
+            target.setOutputDirectory( source.getOutputDirectory() );    
-            target.setTestSourceDirectory( source.getTestSourceDirectory() );   
-        }
+            target.setTestSourceDirectory( source.getTestSourceDirectory() );    
+        }        
-        target.getFilters().addAll( new ArrayList<String>(source.getFilters()) );
+
+        List<String> filters = new ArrayList<String>(target.getFilters());
+        for(String filter : source.getFilters())
+        {
+            if(!filters.contains( filter ))
+            {
+                filters.add( filter );
+            }
+        }
+
+       // SortedSet<String> s = new TreeSet<String>( new ArrayList<String>( target.getFilters() ) );
+       // s.addAll( source.getFilters() );
+       // List<String> l = Arrays.asList(s.toArray( new String[s.size()]) );
+        
+        target.setFilters( filters );
-        }        
+        }     
