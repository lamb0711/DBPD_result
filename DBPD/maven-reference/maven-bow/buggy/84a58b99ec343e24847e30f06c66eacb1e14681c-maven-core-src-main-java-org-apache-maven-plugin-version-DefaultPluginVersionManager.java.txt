cleanup, reformat

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219586 13f79535-47bb-0310-9956-ffa450edef68

-
-                                       ArtifactRepository localRepository )
+                                        ArtifactRepository localRepository )
-                if ( Boolean.TRUE.equals( pluginUpdateOverride )
-                    || ( !Boolean.FALSE.equals( pluginUpdateOverride ) && shouldCheckForUpdates( groupId, artifactId ) ) )
+                if ( Boolean.TRUE.equals( pluginUpdateOverride ) ||
+                    ( !Boolean.FALSE.equals( pluginUpdateOverride ) && shouldCheckForUpdates( groupId, artifactId ) ) )
-                                                         localRepository, ReleaseArtifactTransformation.RELEASE_VERSION );
+                                                         localRepository,
+                                                         ReleaseArtifactTransformation.RELEASE_VERSION );
-                                              "Plugin \'" + constructPluginKey( groupId, artifactId )
-                                                  + "\' has updates." );
+                                "Plugin \'" + constructPluginKey( groupId, artifactId ) + "\' has updates." );
-        boolean checkLatestMetadata = Boolean.TRUE.equals( rtCheckLatest )
-            || ( !Boolean.FALSE.equals( rtCheckLatest ) && Boolean.valueOf( pluginRegistry.getCheckLatest() )
+        boolean checkLatestMetadata = Boolean.TRUE.equals( rtCheckLatest ) ||
+            ( !Boolean.FALSE.equals( rtCheckLatest ) && Boolean.valueOf( pluginRegistry.getCheckLatest() )
-            version = resolveMetaVersion( groupId, artifactId, project.getPluginArtifactRepositories(),
-                                          localRepository, LatestArtifactTransformation.LATEST_VERSION );
+            version = resolveMetaVersion( groupId, artifactId, project.getPluginArtifactRepositories(), localRepository,
+                                          LatestArtifactTransformation.LATEST_VERSION );
-            version = resolveMetaVersion( groupId, artifactId, project.getPluginArtifactRepositories(),
-                                          localRepository, ReleaseArtifactTransformation.RELEASE_VERSION );
+            version = resolveMetaVersion( groupId, artifactId, project.getPluginArtifactRepositories(), localRepository,
+                                          ReleaseArtifactTransformation.RELEASE_VERSION );
-            boolean persistUpdate = forcePersist
-                || ( promptToPersist && !Boolean.FALSE.equals( pluginUpdateOverride ) && ( inInteractiveMode || autoUpdate ) );
+            boolean persistUpdate = forcePersist || ( promptToPersist &&
+                !Boolean.FALSE.equals( pluginUpdateOverride ) && ( inInteractiveMode || autoUpdate ) );
-            promptToPersist = promptToPersist && pluginUpdateOverride == null && applyToAll == null
-                && inInteractiveMode;
+            promptToPersist = promptToPersist && pluginUpdateOverride == null && applyToAll == null &&
+                inInteractiveMode;
-                                                                org.apache.maven.plugin.registry.Plugin.LAST_CHECKED_DATE_FORMAT );
+                    org.apache.maven.plugin.registry.Plugin.LAST_CHECKED_DATE_FORMAT );
-                    getLogger().warn(
-                                      "Last-checked date for plugin {" + constructPluginKey( groupId, artifactId )
-                                          + "} is invalid. Checking for updates." );
+                    getLogger().warn( "Last-checked date for plugin {" + constructPluginKey( groupId, artifactId ) +
+                        "} is invalid. Checking for updates." );
-                                                String artifactId, Settings settings )
+                                                 String artifactId, Settings settings )
-            getLogger().warn(
-                              "Plugin version: " + rejectedVersion + " added to your rejectedVersions list.\n"
-                                  + "You will not be prompted for this version again.\n\nPlugin: " + pluginKey );
+            getLogger().warn( "Plugin version: " + rejectedVersion + " added to your rejectedVersions list.\n" +
+                "You will not be prompted for this version again.\n\nPlugin: " + pluginKey );
-            getLogger().warn( "Cannot add rejectedVersion entry for: " + rejectedVersion + ".\n\nPlugin: " + pluginKey );
+            getLogger().warn(
+                "Cannot add rejectedVersion entry for: " + rejectedVersion + ".\n\nPlugin: " + pluginKey );
-                                                              PluginRegistry pluginRegistry )
+                                                               PluginRegistry pluginRegistry )
-                getLogger().warn(
-                                  "Cannot update registered version for plugin {" + groupId + ":" + artifactId
-                                      + "}; it is specified in the global registry." );
+                getLogger().warn( "Cannot update registered version for plugin {" + groupId + ":" + artifactId +
+                    "}; it is specified in the global registry." );
-                                                                org.apache.maven.plugin.registry.Plugin.LAST_CHECKED_DATE_FORMAT );
+                    org.apache.maven.plugin.registry.Plugin.LAST_CHECKED_DATE_FORMAT );
-                throw new PluginVersionResolutionException(
-                                                            groupId,
-                                                            artifactId,
+                throw new PluginVersionResolutionException( groupId, artifactId,
-                                      ArtifactRepository localRepository, String metaVersionId )
-        throws PluginVersionResolutionException
+                                       ArtifactRepository localRepository, String metaVersionId )
-        MavenMetadataSource metadataSource = new MavenMetadataSource( artifactResolver, projectBuilder, artifactFactory );
+        MavenMetadataSource metadataSource = new MavenMetadataSource( artifactResolver, projectBuilder,
+                                                                      artifactFactory );
