Working on: MNG-576

o Implemented plan from my comments on MNG-576 for looking up lifecycle mappings within plugins.

o Fixed subtle bug in DefaultWagonManager for verifying checksums, where the destination file was being used to verify the checksum rather than the recently download temp destination.

o Fixed the DefaultRepositoryMetadataManager.resolve(..) method to allow the locally-installed metadata to be used if it is newer than the one resolved from the repository.

o Moved the lifecycle mappings for the EJB and WAR plugins out to META-INF/plexus/components.xml in the respective plugin's src/main/resources directory. it0016 and it0017 still pass.

o Changed the distributionManagement repository for maven-plugins/pom.xml to have id of 'central-plugins' and then added a normal artifact repository definition for central-plugins to that pom, to allow locally-installed repository metadata for the plugins to be put in the right place (and these builds should have access to the central plugin repo anyway).

o Changed the DefaultPluginMappingBuilder to only warn when plugins.xml for a particular plugin group is missing.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@216273 13f79535-47bb-0310-9956-ffa450edef68

+    private Map pluginDefinitionsByPackaging = new HashMap();
+        pluginDefinitionsByPackaging = null;
+    public Plugin getByPackaging( String packaging )
+    {
+        synchronized ( this )
+        {
+            if ( pluginDefinitionsByPackaging == null )
+            {
+                calculatePluginDefinitionsByPackaging();
+            }
+        }
+
+        return (Plugin) pluginDefinitionsByPackaging.get( packaging );
+    }
+
+    private void calculatePluginDefinitionsByPackaging()
+    {
+        pluginDefinitionsByPackaging = new HashMap();
+
+        for ( Iterator it = mappings.iterator(); it.hasNext(); )
+        {
+            PluginMap pluginMap = (PluginMap) it.next();
+
+            String groupId = pluginMap.getGroupId();
+
+            for ( Iterator pluginIterator = pluginMap.getPlugins().iterator(); pluginIterator.hasNext(); )
+            {
+                MappedPlugin mapping = (MappedPlugin) pluginIterator.next();
+
+                String artifactId = mapping.getArtifactId();
+
+                Plugin plugin = new Plugin();
+
+                plugin.setGroupId( groupId );
+
+                plugin.setArtifactId( artifactId );
+
+                for ( Iterator packagingIterator = mapping.getPackagingHandlers().iterator(); packagingIterator.hasNext(); )
+                {
+                    String packaging = (String) packagingIterator.next();
+                    
+                    pluginDefinitionsByPackaging.put( packaging, plugin );
+                }
+            }
+        }
+    }
+
