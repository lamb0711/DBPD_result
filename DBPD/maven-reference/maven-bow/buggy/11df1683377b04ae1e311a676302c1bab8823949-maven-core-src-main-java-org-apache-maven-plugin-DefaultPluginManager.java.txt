PR: MNG-122
final exception cleanup - reduce the noise in the lifecycle executor, get rid of response object in favour of exception handling from DefaultMaven.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@320797 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.plugin.version.PluginVersionNotFoundException;
-        InvalidVersionSpecificationException, InvalidPluginException, PluginManagerException, PluginNotFoundException
+        InvalidVersionSpecificationException, InvalidPluginException, PluginManagerException, PluginNotFoundException,
+        PluginVersionNotFoundException
-        throws PluginVersionResolutionException
+        throws PluginVersionResolutionException, InvalidPluginException
-            throw new PluginVersionResolutionException( plugin.getGroupId(), plugin.getArtifactId(),
-                                                        "Unable to build project for plugin", e );
+            throw new InvalidPluginException(
+                "Unable to build project for plugin '" + plugin.getKey() + "': " + e.getMessage(), e );
-        InvalidDependencyVersionException, PluginManagerException
+        InvalidDependencyVersionException, PluginManagerException, PluginConfigurationException
-        try
+        PluginDescriptor pluginDescriptor = mojoDescriptor.getPluginDescriptor();
+        String goalId = mojoDescriptor.getGoal();
+        String groupId = pluginDescriptor.getGroupId();
+        String artifactId = pluginDescriptor.getArtifactId();
+        String executionId = mojoExecution.getExecutionId();
+        Xpp3Dom dom = project.getGoalConfiguration( groupId, artifactId, executionId, goalId );
+        Xpp3Dom reportDom = project.getReportConfiguration( groupId, artifactId, executionId );
+        dom = Xpp3Dom.mergeXpp3Dom( dom, reportDom );
+        if ( mojoExecution.getConfiguration() != null )
-            PluginDescriptor pluginDescriptor = mojoDescriptor.getPluginDescriptor();
-            String goalId = mojoDescriptor.getGoal();
-            String groupId = pluginDescriptor.getGroupId();
-            String artifactId = pluginDescriptor.getArtifactId();
-            String executionId = mojoExecution.getExecutionId();
-            Xpp3Dom dom = project.getGoalConfiguration( groupId, artifactId, executionId, goalId );
-            Xpp3Dom reportDom = project.getReportConfiguration( groupId, artifactId, executionId );
-            dom = Xpp3Dom.mergeXpp3Dom( dom, reportDom );
-            if ( mojoExecution.getConfiguration() != null )
-            {
-                dom = Xpp3Dom.mergeXpp3Dom( dom, mojoExecution.getConfiguration() );
-            }
+            dom = Xpp3Dom.mergeXpp3Dom( dom, mojoExecution.getConfiguration() );
+        }
-            plugin = getConfiguredMojo( session, dom, project, false, mojoExecution );
-        }
-        catch ( PluginConfigurationException e )
-        {
-            String msg = "Error configuring plugin for execution of '" + goalName + "'.";
-            throw new MojoExecutionException( msg, e );
-        }
+        plugin = getConfiguredMojo( session, dom, project, false, mojoExecution );
-        InvalidVersionSpecificationException, InvalidPluginException, PluginManagerException, PluginNotFoundException
+        InvalidVersionSpecificationException, InvalidPluginException, PluginManagerException, PluginNotFoundException,
+        PluginVersionNotFoundException
