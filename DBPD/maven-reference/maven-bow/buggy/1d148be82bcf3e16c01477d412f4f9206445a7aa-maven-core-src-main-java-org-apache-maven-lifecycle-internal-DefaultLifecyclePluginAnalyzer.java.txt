MNG-5805: Custom packaging types: configuring DefaultLifecycleMapping mojo executions

Signed-off-by: Jason van Zyl <jason@tesla.io>

+import org.apache.maven.lifecycle.mapping.LifecycleMojo;
+import org.apache.maven.lifecycle.mapping.LifecyclePhase;
-            Map<String, String> phaseToGoalMapping = null;
+            Map<String, LifecyclePhase> phaseToGoalMapping = null;
-                // These are of the form:
-                //
-                // compile -> org.apache.maven.plugins:maven-compiler-plugin:compile[,gid:aid:goal,...]
-                //
-                for ( Map.Entry<String, String> goalsForLifecyclePhase : phaseToGoalMapping.entrySet() )
+                for ( Map.Entry<String, LifecyclePhase> goalsForLifecyclePhase : phaseToGoalMapping.entrySet() )
-                    String goals = goalsForLifecyclePhase.getValue();
+                    LifecyclePhase goals = goalsForLifecyclePhase.getValue();
-    private void parseLifecyclePhaseDefinitions( Map<Plugin, Plugin> plugins, String phase, String goals )
+    private void parseLifecyclePhaseDefinitions( Map<Plugin, Plugin> plugins, String phase, LifecyclePhase goals )
-        String[] mojos = StringUtils.split( goals, "," );
-
-        for ( int i = 0; i < mojos.length; i++ )
+        List<LifecycleMojo> mojos = goals.getMojos();
+        if ( mojos != null )
-            GoalSpec gs = parseGoalSpec( mojos[i].trim() );
-
-            if ( gs == null )
+            
+            for ( int i = 0; i < mojos.size(); i++ )
-                logger.warn( "Ignored invalid goal specification '" + mojos[i] + "' from lifecycle mapping for phase "
-                    + phase );
-                continue;
-            }
-
-            Plugin plugin = new Plugin();
-            plugin.setGroupId( gs.groupId );
-            plugin.setArtifactId( gs.artifactId );
-            plugin.setVersion( gs.version );
-
-            Plugin existing = plugins.get( plugin );
-            if ( existing != null )
-            {
-                if ( existing.getVersion() == null )
+                LifecycleMojo mojo = mojos.get( i );
+                
+                GoalSpec gs = parseGoalSpec( mojo.getGoal() );
+    
+                if ( gs == null )
-                    existing.setVersion( plugin.getVersion() );
+                    logger.warn( "Ignored invalid goal specification '" + mojo.getGoal()
+                            + "' from lifecycle mapping for phase " + phase );
+                    continue;
-                plugin = existing;
+    
+                Plugin plugin = new Plugin();
+                plugin.setGroupId( gs.groupId );
+                plugin.setArtifactId( gs.artifactId );
+                plugin.setVersion( gs.version );
+    
+                Plugin existing = plugins.get( plugin );
+                if ( existing != null )
+                {
+                    if ( existing.getVersion() == null )
+                    {
+                        existing.setVersion( plugin.getVersion() );
+                    }
+                    plugin = existing;
+                }
+                else
+                {
+                    plugins.put( plugin, plugin );
+                }
+    
+                PluginExecution execution = new PluginExecution();
+                execution.setId( getExecutionId( plugin, gs.goal ) );
+                execution.setPhase( phase );
+                execution.setPriority( i - mojos.size() );
+                execution.getGoals().add( gs.goal );
+                execution.setConfiguration( mojo.getConfiguration() );
+                
+                plugin.setDependencies( mojo.getDependencies() );
+                plugin.getExecutions().add( execution );
-            else
-            {
-                plugins.put( plugin, plugin );
-            }
-
-            PluginExecution execution = new PluginExecution();
-            execution.setId( getExecutionId( plugin, gs.goal ) );
-            execution.setPhase( phase );
-            execution.setPriority( i - mojos.length );
-            execution.getGoals().add( gs.goal );
-
-            plugin.getExecutions().add( execution );
