o Fixed a configuration issue for the DefaultRepositoryLayout in components.xml...it needed a requirement on the ArtifactHandlerManager.
o Fixed a formatting issue for the layout in DefaultRepositoryLayout relating to groupId's.
o Revamped the repoclean tool to use an Artifact-centric approach to converting, cleaning, and reporting on repositories.
o Added the ability for repoclean to report on the health of an existing v3 or v4 repository, using a DefaultArtifactDiscoverer (Default* being the prefix given to the new repo layout going forward) and a V4PomRewriter implementation.
o Tested repoclean by converting my local m1 repository to a m2 repository.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163669 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Arrays;
+        byte[] digestData = generateArtifactDigest( artifactFile, algorithm );
+
+        try
+        {
+            writeDigestFile( digestFile, digestData );
+        }
+        catch ( IOException e )
+        {
+            throw new ArtifactDigestException( "Cannot write digest to file: \'" + digestFile + "\'", e );
+        }
+    }
+
+    public boolean verifyArtifactDigest( File artifactFile, File digestFile, String algorithm )
+        throws ArtifactDigestException
+    {
+        boolean result = false;
+        
+        if(artifactFile.exists() && digestFile.exists())
+        {
+            byte[] generatedDigest = generateArtifactDigest( artifactFile, algorithm );
+            byte[] digestFromFile = null;
+    
+            try
+            {
+                digestFromFile = readFile( digestFile );
+            }
+            catch ( Exception e )
+            {
+                throw new ArtifactDigestException( "Cannot read digest from file: \'" + digestFile + "\'", e );
+            }
+    
+            result = Arrays.equals( generatedDigest, digestFromFile );
+        }
+        
+        return result;
+    }
+    
+    private byte[] generateArtifactDigest( File artifactFile, String algorithm ) throws ArtifactDigestException
+    {
-            data = readArtifactFile( artifactFile );
+            data = readFile( artifactFile );
-        byte[] digestData = digest.digest();
-
-        try
-        {
-            writeDigestFile( digestFile, digestData );
-        }
-        catch ( IOException e )
-        {
-            throw new ArtifactDigestException( "Cannot write digest to file: \'" + digestFile + "\'", e );
-        }
+        
+        return digest.digest();
-    private byte[] readArtifactFile( File artifactFile ) throws IOException
+    private byte[] readFile( File artifactFile ) throws IOException
+
