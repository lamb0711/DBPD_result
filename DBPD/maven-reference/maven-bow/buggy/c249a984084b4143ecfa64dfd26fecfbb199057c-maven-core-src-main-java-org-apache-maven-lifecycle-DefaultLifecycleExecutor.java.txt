[MNG-4345] [regression] Plugin executions contributed by default lifecycle mapping execute after other plugin executions bound to the same phase

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@812467 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.TreeMap;
-        Map<String, List<MojoExecution>> lifecycleMappings = new LinkedHashMap<String, List<MojoExecution>>();
+        Map<String, Map<Integer, List<MojoExecution>>> mappings =
+            new LinkedHashMap<String, Map<Integer, List<MojoExecution>>>();
-            List<MojoExecution> mojoExecutions = new ArrayList<MojoExecution>();
+            Map<Integer, List<MojoExecution>> phaseBindings = new TreeMap<Integer, List<MojoExecution>>();
-            lifecycleMappings.put( phase, mojoExecutions );
+            mappings.put( phase, phaseBindings );
-                    List<MojoExecution> mojoExecutions = lifecycleMappings.get( execution.getPhase() );
-                    if ( mojoExecutions != null )
+                    Map<Integer, List<MojoExecution>> phaseBindings = mappings.get( execution.getPhase() );
+                    if ( phaseBindings != null )
-                            mojoExecutions.add( mojoExecution );
+                            addMojoExecution( phaseBindings, mojoExecution, execution.getPriority() );
-                        List<MojoExecution> mojoExecutions = lifecycleMappings.get( mojoDescriptor.getPhase() );
-                        if ( mojoExecutions != null )
+                        Map<Integer, List<MojoExecution>> phaseBindings = mappings.get( mojoDescriptor.getPhase() );
+                        if ( phaseBindings != null )
-                            mojoExecutions.add( mojoExecution );
+                            addMojoExecution( phaseBindings, mojoExecution, execution.getPriority() );
+        Map<String, List<MojoExecution>> lifecycleMappings = new LinkedHashMap<String, List<MojoExecution>>();
+
+        for ( Map.Entry<String, Map<Integer, List<MojoExecution>>> entry : mappings.entrySet() )
+        {
+            List<MojoExecution> mojoExecutions = new ArrayList<MojoExecution>();
+
+            for ( List<MojoExecution> executions : entry.getValue().values() )
+            {
+                mojoExecutions.addAll( executions );
+            }
+
+            lifecycleMappings.put( entry.getKey(), mojoExecutions );
+        }
+
+    private void addMojoExecution( Map<Integer, List<MojoExecution>> phaseBindings, MojoExecution mojoExecution,
+                                   int priority )
+    {
+        List<MojoExecution> mojoExecutions = phaseBindings.get( priority );
+
+        if ( mojoExecutions == null )
+        {
+            mojoExecutions = new ArrayList<MojoExecution>();
+            phaseBindings.put( priority, mojoExecutions );
+        }
+
+        mojoExecutions.add( mojoExecution );
+    }
+
+            execution.setPriority( -1 );
