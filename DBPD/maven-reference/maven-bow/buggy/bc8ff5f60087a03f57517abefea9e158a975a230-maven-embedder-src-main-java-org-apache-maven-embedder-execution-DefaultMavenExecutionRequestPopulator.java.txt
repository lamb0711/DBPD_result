o removing the configuration from the populator
Submitted by: Igor Fedorenko


git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@777713 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.embedder.MavenEmbedder;
-        pom( request, configuration );
+        // copy configuration to request
-        settings( request, configuration );
+        if ( configuration.getGlobalSettingsFile() != null )
+        {
+            request.setGlobalSettingsFile( configuration.getGlobalSettingsFile() );
+        }
-        localRepository( request, configuration );
+        if ( configuration.getUserSettingsFile() != null )
+        {
+            request.setUserSettingsFile( configuration.getUserSettingsFile() );
+        }
-        toolchains( request, configuration );
+        String localRepositoryPath = null;
-        processSettings( request, configuration );
-                
-        return request;
+        if ( request.getLocalRepositoryPath() != null )
+        {
+            localRepositoryPath = request.getLocalRepositoryPath().getAbsolutePath();
+        }
+
+        if ( StringUtils.isEmpty( localRepositoryPath ) && ( configuration.getLocalRepository() != null ) )
+        {
+            localRepositoryPath = configuration.getLocalRepository().getAbsolutePath();
+        }
+        
+        // populate the defaults
+
+        return populateDefaults( request );
-    
-    private void pom( MavenExecutionRequest request, Configuration configuration )
+
+    private void pom( MavenExecutionRequest request )
-    private void populateDefaultPluginGroups( MavenExecutionRequest request, Configuration configuration )
+    private void populateDefaultPluginGroups( MavenExecutionRequest request )
-    private void processSettings( MavenExecutionRequest request, Configuration configuration )
+    private void processSettings( MavenExecutionRequest request )
-        populateDefaultPluginGroups( request, configuration );
+        populateDefaultPluginGroups( request );
-        processRepositoriesInSettings( request, configuration );
+        processRepositoriesInSettings( request );
-    private void processRepositoriesInSettings( MavenExecutionRequest request, Configuration configuration )
+    private void processRepositoriesInSettings( MavenExecutionRequest request )
-    private void settings( MavenExecutionRequest request, Configuration configuration )
+    private void settings( MavenExecutionRequest request )
-            if ( configuration.getGlobalSettingsFile() != null )
+            if ( request.getGlobalSettingsFile() == null )
-                request.setGlobalSettingsFile( configuration.getGlobalSettingsFile() );
+                request.setGlobalSettingsFile( MavenEmbedder.DEFAULT_GLOBAL_SETTINGS_FILE );
-            if ( configuration.getUserSettingsFile() != null )
+            if ( request.getUserSettingsFile() == null )
-                request.setUserSettingsFile( configuration.getUserSettingsFile() );
+                request.setUserSettingsFile( MavenEmbedder.DEFAULT_USER_SETTINGS_FILE );
-    private void localRepository( MavenExecutionRequest request, Configuration configuration )
+    private void localRepository( MavenExecutionRequest request )
-            request.setLocalRepository( createLocalRepository( request, request.getSettings(), configuration ) );
+            request.setLocalRepository( createLocalRepository( request, request.getSettings() ) );
-    public ArtifactRepository createLocalRepository( MavenExecutionRequest request, Settings settings, Configuration configuration )
+    public ArtifactRepository createLocalRepository( MavenExecutionRequest request, Settings settings )
-        if ( StringUtils.isEmpty( localRepositoryPath ) && ( configuration.getLocalRepository() != null ) )
-        {
-            localRepositoryPath = configuration.getLocalRepository().getAbsolutePath();
-        }
-
-    private void toolchains( MavenExecutionRequest request, Configuration configuration )
+    private void toolchains( MavenExecutionRequest request )
+        // FIXME individual requests must not change global state
+    public MavenExecutionRequest populateDefaults( MavenExecutionRequest request )
+        throws MavenEmbedderException
+    {
+        pom( request );
+        
+        settings( request );
+
+        localRepository( request );
+
+        toolchains( request );
+
+        processSettings( request );
+                
+        return request;
+    }
