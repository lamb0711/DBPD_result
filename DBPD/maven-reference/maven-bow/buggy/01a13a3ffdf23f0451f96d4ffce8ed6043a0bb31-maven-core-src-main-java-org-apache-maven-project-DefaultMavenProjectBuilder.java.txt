o remove the profile manager and profile activation context from public view


git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@775281 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Properties;
+import org.apache.maven.profiles.ProfileActivationContext;
+        ProfileActivationContext profileActivationContext = new ProfileActivationContext( configuration.getExecutionProperties(), true );
+        profileActivationContext.setExplicitlyActiveProfileIds( configuration.getActiveProfileIds() );
+        if (configuration.getExecutionProperties() != null )
+        {
+            profileActivationContext.getExecutionProperties().putAll( configuration.getExecutionProperties() );
+        }
+        ProfileManager profileManager = new DefaultProfileManager( profileActivationContext );
+        
-            domainModel = build( "unknown", pomFile, configuration );
+            domainModel = build( "unknown", pomFile, profileManager, configuration );
+        //
+        // Active profiles can be contributed to the MavenExecutionRequest as well as from the POM
-        Properties props = new Properties();
-        props.putAll( configuration.getExecutionProperties() );
-            projectProfiles = DefaultProfileManager.getActiveProfilesFrom( configuration.getGlobalProfileManager(), props, domainModel.getModel() );
+            projectProfiles = new ArrayList<Profile>();            
+            profileManager.addProfiles( domainModel.getModel().getProfiles() );
+            if ( configuration.getProfiles() != null )
+            {
+                profileManager.addProfiles( configuration.getProfiles() );
+            }
+            projectProfiles.addAll( profileManager.getActiveProfiles() );                         
-            .setLocalRepository( localRepository )
-            .setGlobalProfileManager( profileManager );
+            .setLocalRepository( localRepository );
-    private DomainModel build( String projectId, File pomFile, ProjectBuilderConfiguration projectBuilderConfiguration )
+    private DomainModel build( String projectId, File pomFile, ProfileManager profileManager, ProjectBuilderConfiguration projectBuilderConfiguration )
-        List<String> activeProfileIds = ( projectBuilderConfiguration != null && projectBuilderConfiguration.getGlobalProfileManager() != null && projectBuilderConfiguration.getGlobalProfileManager()
-            .getProfileActivationContext() != null ) ? projectBuilderConfiguration.getGlobalProfileManager().getProfileActivationContext().getExplicitlyActiveProfileIds() : new ArrayList<String>();
+        List<String> activeProfileIds = ( projectBuilderConfiguration != null && profileManager != null && profileManager.getProfileActivationContext() != null ) ? profileManager
+            .getProfileActivationContext().getExplicitlyActiveProfileIds() : new ArrayList<String>();
-        List<String> inactiveProfileIds = ( projectBuilderConfiguration != null && projectBuilderConfiguration.getGlobalProfileManager() != null && projectBuilderConfiguration
-            .getGlobalProfileManager().getProfileActivationContext() != null ) ? projectBuilderConfiguration.getGlobalProfileManager().getProfileActivationContext().getExplicitlyInactiveProfileIds()
-                                                                              : new ArrayList<String>();
+        List<String> inactiveProfileIds = ( projectBuilderConfiguration != null && profileManager != null && profileManager.getProfileActivationContext() != null ) ? profileManager
+            .getProfileActivationContext().getExplicitlyInactiveProfileIds() : new ArrayList<String>();
-        MavenProject topProject = projectBuilderConfiguration.getTopLevelProjectFromReactor();
-        
