Fixed profile activation for profiles in pom. Profile injection was causing double injection of some elements from plugin mng. Partial fix.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@758473 13f79535-47bb-0310-9956-ffa450edef68

-
+        
-        ProfileActivationContext profileActivationContext;
-
-
-        if ( externalProfileManager != null )
+        
+        ProfileActivationContext profileActivationContext = (externalProfileManager == null) ? new ProfileActivationContext( config.getExecutionProperties(), false ):
+            externalProfileManager.getProfileActivationContext();
+     
+        if(externalProfileManager != null)
-                throw new ProjectBuildingException( projectId, "Failed to activate external profiles.", projectDescriptor, e );
-            }
-            profileActivationContext = externalProfileManager.getProfileActivationContext();
+                throw new ProjectBuildingException( projectId, "Failed to activate external profiles.", projectDescriptor,
+                                                    e );
+            }         
-        else
-        {
-            profileActivationContext = new ProfileActivationContext( config.getExecutionProperties(), false );
-            ProfileManager profileManager = new DefaultProfileManager( container, profileActivationContext );
-            profileManager.addProfiles( model.getProfiles() );
-            try
-            {
-                projectProfiles.addAll( profileManager.getActiveProfiles( model ) );
-            }
-            catch ( ProfileActivationException e )
-            {
-                throw new ProjectBuildingException( projectId, "Failed to activate external profiles.", projectDescriptor, e );
-            }
+        ProfileManager profileManager = new DefaultProfileManager( container, profileActivationContext );
+        profileManager.addProfiles( model.getProfiles() );
+        
+        try
+        {
+            projectProfiles.addAll( profileManager.getActiveProfiles( model ) );
+        catch ( ProfileActivationException e )
+        {
+            throw new ProjectBuildingException( projectId, "Failed to activate pom profiles.", projectDescriptor,
+                                                e );
+        }
+
+            /*
+            for(Profile p : projectProfiles)
+            {
+                System.out.print( "Profile ID  = " + p.getId() );
+            }
+            */
-                 profileModels.add(ProcessorContext.mergeProfilesIntoModel( profileContext1.getActiveProfiles(), dm.getModel(), 
-                                                                           dm.isMostSpecialized() ));               
+                 Collection<Profile> profiles = profileContext1.getActiveProfiles();
+                 if(!profiles.isEmpty())
+                 {
+                    profileModels.add(ProcessorContext.mergeProfilesIntoModel( profileContext1.getActiveProfiles(), dm.getModel(), 
+                                                                                dm.isMostSpecialized() ));  
+                 }
+                 else
+                 {
+                     profileModels.add( dm );   
+                 }
-            return domainModels;
+           // return domainModels;
