PR: MNG-613
make repository metadata behave more like snapshots with daily updates.
next step is to move the version checking to use that instead and fallback to the old files

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@266298 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.metadata.ArtifactMetadata;
+        ArtifactMetadata localMetadata = resolveMetadata( artifact, localRepository, remoteRepositories );
+
+        String version;
+
+        if ( localMetadata == null )
+        {
+            version = artifact.getVersion();
+        }
+        else
+        {
+            VersionArtifactMetadata versionMetadata = (VersionArtifactMetadata) localMetadata;
+            version = versionMetadata.constructVersion();
+        }
+
+        // TODO: also do this logging for other metadata?
+        if ( getLogger().isDebugEnabled() )
+        {
+            if ( version != null && !version.equals( artifact.getBaseVersion() ) )
+            {
+                String message = artifact.getArtifactId() + ": resolved to version " + version;
+                if ( artifact.getRepository() != null )
+                {
+                    message += " from repository " + artifact.getRepository().getId();
+                }
+                else
+                {
+                    message += " from local repository";
+                }
+                getLogger().debug( message );
+            }
+        }
+        return version;
+    }
+
+    /**
+     * @param artifact
+     * @param localRepository
+     * @param remoteRepositories
+     * @return
+     * @throws ArtifactMetadataRetrievalException
+     * @todo share with DefaultRepositoryMetadataManager
+     */
+    private ArtifactMetadata resolveMetadata( Artifact artifact, ArtifactRepository localRepository,
+                                              List remoteRepositories )
+        throws ArtifactMetadataRetrievalException
+    {
-            // touch the file if it was checked for updates, but don't create it if it doesn't exist to avoid
+            // touch the file if it was checked for updates, but don't create it if it doesn't exist remotely to avoid
-            if ( checkedUpdates && localMetadata.exists() )
+            if ( checkedUpdates && localMetadata.getLastModified().getTime() > 0 )
-        String version = localMetadata.constructVersion();
-
-        if ( !artifact.getFile().exists() || localMetadata.newerThanFile( artifact.getFile() ) )
+        if ( artifact.getFile().exists() && !localMetadata.newerThanFile( artifact.getFile() ) )
-            if ( getLogger().isInfoEnabled() && !alreadyResolved )
-            {
-                if ( version != null && !version.equals( artifact.getBaseVersion() ) )
-                {
-                    String message = artifact.getArtifactId() + ": resolved to version " + version;
-                    if ( artifact.getRepository() != null )
-                    {
-                        message += " from repository " + artifact.getRepository().getId();
-                    }
-                    else
-                    {
-                        message += " from local repository";
-                    }
-                    getLogger().info( message );
-                }
-            }
-
-            return version;
-        }
-        else
-        {
-            if ( getLogger().isInfoEnabled() && !alreadyResolved )
+            if ( getLogger().isDebugEnabled() && !alreadyResolved )
-                getLogger().info( artifact.getArtifactId() + ": using locally installed snapshot" );
+                getLogger().debug( artifact.getArtifactId() + ": using locally installed snapshot" );
-            return artifact.getVersion();
+            localMetadata = null;
+        return localMetadata;
-                                                                    VersionArtifactMetadata localMetadata,
+                                                                    ArtifactMetadata localMetadata,
