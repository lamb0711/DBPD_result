PR: MNG-140

split artifact impl from api so that dep resolution can be used independently of wagon
only the first step in making maven-artifact more useful as a public api - more changes to be made


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191634 13f79535-47bb-0310-9956-ffa450edef68

-
-    String[] builds = new String[]{"maven-model", "maven-monitor", "maven-plugin-api",
-                                   "maven-plugin-descriptor", "maven-artifact", "maven-script/maven-script-marmalade",
-                                   "maven-script/maven-script-beanshell", "maven-project",
-                                   "maven-settings", "maven-profile", "maven-plugin-registry",
-                                   "maven-reporting/maven-reporting-api", "maven-core", "maven-archiver",
-                                   "maven-plugin-tools/maven-plugin-tools-api",
-                                   "maven-plugin-tools/maven-plugin-tools-java",
-                                   "maven-plugin-tools/maven-plugin-tools-beanshell",
-                                   "maven-plugin-tools/maven-plugin-tools-pluggy",
-                                   "maven-plugin-tools/maven-plugin-tools-marmalade", "maven-core-it-verifier"};
+    String[] builds = new String[]{"maven-model", "maven-monitor", "maven-plugin-api", "maven-plugin-descriptor",
+        "maven-artifact", "maven-artifact-manager", "maven-artifact-test", "maven-script/maven-script-marmalade",
+        "maven-script/maven-script-beanshell", "maven-project", "maven-settings", "maven-profile",
+        "maven-plugin-registry", "maven-reporting/maven-reporting-api", "maven-core", "maven-archiver",
+        "maven-plugin-tools/maven-plugin-tools-api", "maven-plugin-tools/maven-plugin-tools-java",
+        "maven-plugin-tools/maven-plugin-tools-beanshell", "maven-plugin-tools/maven-plugin-tools-pluggy",
+        "maven-plugin-tools/maven-plugin-tools-marmalade", "maven-core-it-verifier"};
-                                         "maven-plugins/maven-install-plugin", "maven-plugins/maven-jar-plugin",
-                                         "maven-plugins/maven-plugin-plugin", "maven-plugins/maven-resources-plugin",
-                                         "maven-plugins/maven-surefire-plugin"};
+        "maven-plugins/maven-install-plugin", "maven-plugins/maven-jar-plugin", "maven-plugins/maven-plugin-plugin", 
+        "maven-plugins/maven-resources-plugin", "maven-plugins/maven-surefire-plugin"};
-    static
-    {
+    static {
-            System.out.println( "HOWEVER, since you did not specify a repository path, maven will use: " +
-                                repoDir.getAbsolutePath() + " to store artifacts locally." );
+            System.out.println(
+                "HOWEVER, since you did not specify a repository path, maven will use: " + repoDir.getAbsolutePath() +
+                    " to store artifacts locally." );
-                System.err.println( "The directory given to install Maven in already exists, but does not contain a Maven installation" );
+                System.err.println(
+                    "The directory given to install Maven in already exists, but does not contain a Maven installation" );
-                System.err.println( "If you really mean to install Maven to this location, please delete the directory first" );
+                System.err.println(
+                    "If you really mean to install Maven to this location, please delete the directory first" );
-            else if ( d.getArtifactId().equals( "plexus-container-default" ) 
-                || d.getArtifactId().equals( "plexus-utils" ) )
+            else if ( d.getArtifactId().equals( "plexus-container-default" ) ||
+                d.getArtifactId().equals( "plexus-utils" ) )
-            compile( reader.getDependencies(), sources, classes, null, null, Dependency.SCOPE_COMPILE, localRepository );
+            compile( reader.getDependencies(), sources, classes, null, null, Dependency.SCOPE_COMPILE,
+                     localRepository );
-    private void generateSources( String model, String mode, String dir, String modelVersion,
-                                  String packageWithVersion, ClassLoader modelloClassLoader )
+    private void generateSources( String model, String mode, String dir, String modelVersion, String packageWithVersion,
+                                  ClassLoader modelloClassLoader )
-                if ( d.getScope().equals( Dependency.SCOPE_COMPILE ) || d.getScope().equals( Dependency.SCOPE_RUNTIME ) )
+                if ( d.getScope().equals( Dependency.SCOPE_COMPILE ) ||
+                    d.getScope().equals( Dependency.SCOPE_RUNTIME ) )
-        
+
-        
+
-                    throw new SAXException( "Invalid profile entry. Missing one or more " +
-                                            "fields: {localRepository}." );
+                    throw new SAXException(
+                        "Invalid profile entry. Missing one or more " + "fields: {localRepository}." );
