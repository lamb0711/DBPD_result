o Extended validation

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@801987 13f79535-47bb-0310-9956-ffa450edef68

+        boolean warnOnBadBoolean = request.getValidationLevel() < ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_0;
+
+
+            if ( request.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )
+            {
+                validateBoolean( "dependencies.dependency.optional", problems, warnOnBadBoolean, d.getOptional(),
+                                 d.getManagementKey() );
+            }
+
+                if ( request.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )
+                {
+                    validateBoolean( "dependencyManagement.dependencies.dependency.optional", problems,
+                                     warnOnBadBoolean, d.getOptional(), d.getManagementKey() );
+                }
+
+                    validateBoolean( "build.plugins.plugin.inherited", problems, warnOnBadBoolean, p.getInherited(),
+                                     p.getKey() );
+
+                    validateBoolean( "build.plugins.plugin.extensions", problems, warnOnBadBoolean, p.getExtensions(),
+                                     p.getKey() );
-                validateResources( problems, build.getResources(), "build.resources.resource" );
+                validateResources( problems, build.getResources(), "build.resources.resource", request );
-                validateResources( problems, build.getTestResources(), "build.testResources.testResource" );
+                validateResources( problems, build.getTestResources(), "build.testResources.testResource", request );
-    private void validateResources( ModelProblemCollector problems, List<Resource> resources, String prefix )
+    private void validateResources( ModelProblemCollector problems, List<Resource> resources, String prefix, ModelBuildingRequest request )
+        boolean warnOnBadBoolean = request.getValidationLevel() < ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_0;
+
+
+            validateBoolean( prefix + ".filtering", problems, warnOnBadBoolean, resource.getFiltering(),
+                             resource.getDirectory() );
-            addViolation( problems, false, "'" + fieldName + "' is missing for " + sourceHint );
+            addViolation( problems, warning, "'" + fieldName + "' is missing for " + sourceHint );
-            addViolation( problems, false, "'" + fieldName + "' is missing." );
+            addViolation( problems, warning, "'" + fieldName + "' is missing." );
+    private boolean validateBoolean( String fieldName, ModelProblemCollector problems, boolean warning, String string,
+                                     String sourceHint )
+    {
+        if ( string == null || string.length() <= 0 )
+        {
+            return true;
+        }
+
+        if ( "true".equalsIgnoreCase( string ) || "false".equalsIgnoreCase( string ) )
+        {
+            return true;
+        }
+
+        if ( sourceHint != null )
+        {
+            addViolation( problems, warning, "'" + fieldName + "' must be 'true' or 'false' for " + sourceHint );
+        }
+        else
+        {
+            addViolation( problems, warning, "'" + fieldName + "' must be 'true' or 'false'." );
+        }
+
+        return false;
+    }
+
