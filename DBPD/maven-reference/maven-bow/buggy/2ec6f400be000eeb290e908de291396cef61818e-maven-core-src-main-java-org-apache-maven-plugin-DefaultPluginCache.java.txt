[MNG-4041] embedder returns stale maven project state
Submitted by: Igor Fedorenko

o Applied extension to initial patch

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@782776 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.PluginExecution;
-    private static class CacheKey
+    protected static class CacheKey
-            return pluginEquals( plugin, other.plugin );
+            return pluginEquals( plugin, other.plugin ) && eq(repositories, other.repositories);
-    private final Map<CacheKey, PluginDescriptor> descriptorsCache = new HashMap<CacheKey, PluginDescriptor>();
+    protected final Map<CacheKey, PluginDescriptor> descriptorsCache = new HashMap<CacheKey, PluginDescriptor>();
-    private final Map<CacheKey, CacheRecord> cache = new HashMap<CacheKey, CacheRecord>();
+    protected final Map<CacheKey, CacheRecord> cache = new HashMap<CacheKey, CacheRecord>();
+
+        if ( cache.containsKey( key ) )
+        {
+            throw new IllegalStateException( "Duplicate plugin realm for plugin " + plugin );
+        }
+
-        /*
-         * Must consider executions because each execution ends up as separate plexus component, with its own
-         * configuration, etc.
-         */
-        for ( PluginExecution execution : plugin.getExecutions() )
-        {
-            hash = hash * 31 + execution.getId().hashCode();
-            hash = hash * 31 + ( execution.getInherited() != null ? execution.getInherited().hashCode() : 0 );
-            hash = hash * 31 + ( execution.getPhase() != null ? execution.getPhase().hashCode() : 0); 
-            hash = hash * 31 + ( execution.getConfiguration() != null ? execution.getConfiguration().hashCode() : 0 );
-            hash = hash * 31 + execution.getGoals().hashCode();
-        }
-
-            && pluginExecutionsEquals( a.getExecutions(), b.getExecutions() ) //
-    protected static boolean pluginExecutionsEquals( List<PluginExecution> a, List<PluginExecution> b )
-    {
-        if ( a.size() != b.size() )
-        {
-            return false;
-        }
-
-        Iterator<PluginExecution> aI = a.iterator();
-        Iterator<PluginExecution> bI = b.iterator();
-
-        while ( aI.hasNext() )
-        {
-            PluginExecution aD = aI.next();
-            PluginExecution bD = bI.next();
-
-            boolean r = eq( aD.getId(), bD.getId() ) //
-                && eq( aD.getInherited(), bD.getInherited() ) //
-                && eq( aD.getPhase(), bD.getPhase() ) // 
-                && eq( aD.getConfiguration(), bD.getConfiguration() ) //
-                && eq( aD.getGoals(), bD.getGoals() );
-
-            if ( !r )
-            {
-                return false;
-            }
-        }
-
-        return true;
-    }
-
