Cleaning up exception wrapping to allow better reporting of errors to end users. Also implementing the beginnings of a new error reporter, and bumping the version of plexus-container-default up to 1.0-alpha-33-SNAPSHOT to improve the accessibility to ClassRealm info for ComponentLookupException.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@584343 13f79535-47bb-0310-9956-ffa450edef68

-        options.addOption( OptionBuilder.withLongOpt( "file" ).hasArg().withDescription(
-            "Force the use of an alternate POM file." ).create( ALTERNATE_POM_FILE ) );
+        options.addOption( OptionBuilder.hasArg( true ).create( ALTERNATE_POM_FILE ) );
-            OptionBuilder.withLongOpt( "define" ).hasArg().withDescription( "Define a system property" ).create(
+            OptionBuilder.hasArg( true ).create(
-            OptionBuilder.withLongOpt( "offline" ).withDescription( "Work offline" ).create( OFFLINE ) );
+            OptionBuilder.create( OFFLINE ) );
-            OptionBuilder.withLongOpt( "help" ).withDescription( "Display help information" ).create( HELP ) );
+            OptionBuilder.create( HELP ) );
-            OptionBuilder.withLongOpt( "version" ).withDescription( "Display version information" ).create(
+            OptionBuilder.create(
-            OptionBuilder.withLongOpt( "quiet" ).withDescription( "Quiet output - only show errors" ).create(
+            OptionBuilder.create(
-            OptionBuilder.withLongOpt( "debug" ).withDescription( "Produce execution debug output" ).create(
+            OptionBuilder.create(
-            OptionBuilder.withLongOpt( "errors" ).withDescription( "Produce execution error messages" ).create(
+            OptionBuilder.create(
-        options.addOption( OptionBuilder.withLongOpt( "reactor" ).withDescription(
-            "Execute goals for project found in the reactor" ).create( REACTOR ) );
-        options.addOption( OptionBuilder.withLongOpt( "non-recursive" ).withDescription(
-            "Do not recurse into sub-projects" ).create( NON_RECURSIVE ) );
-        options.addOption( OptionBuilder.withLongOpt( "update-snapshots" ).withDescription(
-            "Forces a check for updated releases and snapshots on remote repositories" ).create( UPDATE_SNAPSHOTS ) );
-        options.addOption( OptionBuilder.withLongOpt( "activate-profiles" ).withDescription(
-            "Comma-delimited list of profiles to activate" ).hasArg().create( ACTIVATE_PROFILES ) );
+        options.addOption( OptionBuilder.create( REACTOR ) );
+        options.addOption( OptionBuilder.create( NON_RECURSIVE ) );
+        options.addOption( OptionBuilder.create( UPDATE_SNAPSHOTS ) );
+        options.addOption( OptionBuilder.hasArg( true ).create( ACTIVATE_PROFILES ) );
-        options.addOption( OptionBuilder.withLongOpt( "batch-mode" ).withDescription(
-            "Run in non-interactive (batch) mode" ).create( BATCH_MODE ) );
+        options.addOption( OptionBuilder.create( BATCH_MODE ) );
-        options.addOption( OptionBuilder.withLongOpt( "check-plugin-updates" ).withDescription(
-            "Force upToDate check for any relevant registered plugins" ).create( FORCE_PLUGIN_UPDATES ) );
-        options.addOption( OptionBuilder.withLongOpt( "update-plugins" ).withDescription(
-            "Synonym for " + FORCE_PLUGIN_UPDATES ).create( FORCE_PLUGIN_UPDATES2 ) );
-        options.addOption( OptionBuilder.withLongOpt( "no-plugin-updates" ).withDescription(
-            "Suppress upToDate check for any relevant registered plugins" ).create( SUPPRESS_PLUGIN_UPDATES ) );
+        options.addOption( OptionBuilder.create( FORCE_PLUGIN_UPDATES ) );
+        options.addOption( OptionBuilder.create( FORCE_PLUGIN_UPDATES2 ) );
+        options.addOption( OptionBuilder.create( SUPPRESS_PLUGIN_UPDATES ) );
-        options.addOption(OptionBuilder.withLongOpt("no-snapshot-updates")
-                .withDescription("Supress SNAPSHOT updates")
+        options.addOption(OptionBuilder
-        options.addOption( OptionBuilder.withLongOpt( "no-plugin-registry" ).withDescription(
-            "Don't use ~/.m2/plugin-registry.xml for plugin versions" ).create( SUPPRESS_PLUGIN_REGISTRY ) );
+        options.addOption( OptionBuilder.create( SUPPRESS_PLUGIN_REGISTRY ) );
-        options.addOption( OptionBuilder.withLongOpt( "strict-checksums" ).withDescription(
-            "Fail the build if checksums don't match" ).create( CHECKSUM_FAILURE_POLICY ) );
+        options.addOption( OptionBuilder.create( CHECKSUM_FAILURE_POLICY ) );
-            OptionBuilder.withLongOpt( "lax-checksums" ).withDescription( "Warn if checksums don't match" ).create(
+            OptionBuilder.create(
-        options.addOption( OptionBuilder.withLongOpt( "settings" )
-            .withDescription( "Alternate path for the user settings file" ).hasArg()
+        options.addOption( OptionBuilder.hasArg( true )
-        options.addOption( OptionBuilder.withLongOpt( "fail-fast" ).withDescription(
-            "Stop at first failure in reactorized builds" ).create( FAIL_FAST ) );
+        options.addOption( OptionBuilder.create( FAIL_FAST ) );
