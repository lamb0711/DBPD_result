Initial version of reporting integration

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@165071 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.repository.ArtifactRepository;
+import org.apache.maven.reporting.MavenReportConfiguration;
+import org.apache.maven.reporting.manager.MavenReportManager;
+import java.util.Iterator;
+import java.util.List;
+
- * expression="#basedir/src/site"
+ * expression="${basedir}/src/site"
- * expression="#project.build.directory/site-generated"
+ * expression="${project.build.directory}/site-generated"
- * expression="#project.build.directory/site"
+ * expression="${project.build.directory}/site"
+ * description=""
+ * @parameter name="flavour"
+ * type="String"
+ * required=""
+ * validator=""
+ * expression="maven"
- * expression="#project"
+ * expression="${project}"
+ * description=""
+ * @parameter name="localRepository"
+ * type="org.apache.maven.artifact.ArtifactRepository"
+ * required="true"
+ * validator=""
+ * expression="#localRepository"
+ * description=""
+ * @parameter name="remoteRepositories"
+ * type="java.util.List"
+ * required="true"
+ * validator=""
+ * expression="#project.remoteArtifactRepositories"
- * expression="#component.org.codehaus.doxia.site.renderer.SiteRenderer"
+ * expression="${component.org.codehaus.doxia.site.renderer.SiteRenderer}"
- * @parameterx name="reportManager"
+ * @parameter name="reportManager"
- * expression="#component.org.apache.maven.reporting.MavenReportManager"
+ * expression="${component.org.apache.maven.reporting.manager.MavenReportManager}"
+    private String flavour;
+
+    private MavenReportManager reportManager;
+
+    private ArtifactRepository localRepository;
+
+    private List remoteRepositories;
+
-            /*
-            for ( Iterator i = project.getReports().iterator(); i.hasNext(); )
+            MavenReportConfiguration config = new MavenReportConfiguration();
+
+            config.setModel( project.getModel() );
+
+            if ( project.getReports() != null )
-                String name = (String) i.next();
+                reportManager.addReports( project.getReports(), localRepository, remoteRepositories );
-                reportManager.executeReport( name, project.getModel(), siteRenderer, outputDirectory );
+                for ( Iterator i = project.getReports().getPlugins().iterator(); i.hasNext(); )
+                {
+                    org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) i.next();
+
+                    reportManager.executeReport( plugin.getArtifactId(), config, outputDirectory );
+                }
-            */
-            siteRenderer.render( siteDirectory, generatedSiteDirectory, outputDirectory );
+            siteRenderer.render( siteDirectory, generatedSiteDirectory, outputDirectory, flavour );
