project cache repairs - must not cache models that are already interpolated, translated, etc.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163581 13f79535-47bb-0310-9956-ffa450edef68

-    private final Map projectCache = new HashMap();
+    private final Map modelCache = new HashMap();
-        Model model = modelInterpolator.interpolate( project.getModel() );
+        Model model = project.getModel();
+        String key = createCacheKey( model.getGroupId(), model.getArtifactId(), model.getVersion() );
+        Model cachedModel = (Model) modelCache.get( key );
+        if ( cachedModel == null || sourceProject )
+        {
+            modelCache.put( key, model );
+        }
+
+        model = modelInterpolator.interpolate( model );
-        String key = createCacheKey( project.getGroupId(), project.getArtifactId(), project.getVersion() );
-        MavenProject cachedProject = (MavenProject) projectCache.get( key );
-        if ( cachedProject == null || sourceProject )
-        {
-            projectCache.put( key, project );
-        }
-
-        ModelValidationResult validationResult = validator.validate( project.getModel() );
+        ModelValidationResult validationResult = validator.validate( model );
+        MavenProject project = assembleLineage( model, localRepository, lineage, aggregatedRemoteWagonRepositories );
+        project.setFile( projectDescriptor );
+        return project;
+
+    }
+
+    private MavenProject assembleLineage( Model model, ArtifactRepository localRepository, LinkedList lineage,
+                                          List aggregatedRemoteWagonRepositories )
+        throws ProjectBuildingException
+    {
-        project.setFile( projectDescriptor );
-
-        Parent parentModel = model.getParent();
+        Parent parentModel = project.getModel().getParent();
-            aggregatedRemoteWagonRepositories.addAll( buildArtifactRepositories( model.getRepositories() ) );
+            aggregatedRemoteWagonRepositories.addAll(
+                buildArtifactRepositories( project.getModel().getRepositories() ) );
-            MavenProject parent = getCachedProject( parentModel.getGroupId(), parentModel.getArtifactId(),
-                                                    parentModel.getVersion() );
-            if ( parent == null )
+            MavenProject parent;
+            Model cachedModel = getCachedModel( parentModel.getGroupId(), parentModel.getArtifactId(),
+                                                parentModel.getVersion() );
+            if ( cachedModel == null )
+            else
+            {
+                parent = assembleLineage( cachedModel, localRepository, lineage, aggregatedRemoteWagonRepositories );
+            }
-    public MavenProject getCachedProject( String groupId, String artifactId, String version )
+    public Model getCachedModel( String groupId, String artifactId, String version )
-        return (MavenProject) projectCache.get( createCacheKey( groupId, artifactId, version ) );
+        return (Model) modelCache.get( createCacheKey( groupId, artifactId, version ) );
