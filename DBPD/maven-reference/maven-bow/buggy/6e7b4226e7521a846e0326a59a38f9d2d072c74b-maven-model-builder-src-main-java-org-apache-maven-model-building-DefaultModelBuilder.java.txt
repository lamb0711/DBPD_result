[MNG-1803] Provide line number information when there are errors processing a pom.xml

o Merged feature branch

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@949708 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.InputLocation;
+import org.apache.maven.model.InputSource;
-                problems.add( ModelProblem.Severity.FATAL, message, null );
+                problems.add( ModelProblem.Severity.FATAL, message, null, null );
+            InputSource source = request.isLocationTracking() ? new InputSource() : null;
+            options.put( ModelProcessor.INPUT_SOURCE, source );
-                                  e );
+                                  null, e );
-                        + e.getMessage(), e );
+                        + e.getMessage(), null, e );
+
+            if ( source != null )
+            {
+                source.setModelId( ModelProblemUtils.toId( model ) );
+                source.setLocation( pomFile != null ? pomFile.getAbsolutePath() : null );
+            }
-            problems.add( Severity.FATAL, "Non-parseable POM " + modelSource.getLocation() + ": " + e.getMessage(), e );
+            problems.add( Severity.FATAL, "Non-parseable POM " + modelSource.getLocation() + ": " + e.getMessage(), null, e );
-            problems.add( Severity.FATAL, "Non-readable POM " + modelSource.getLocation() + ": " + msg, e );
+            problems.add( Severity.FATAL, "Non-readable POM " + modelSource.getLocation() + ": " + msg, null, e );
-                problems.add( Severity.ERROR, "Invalid repository " + repository.getId() + ": " + e.getMessage(), e );
+                problems.add( Severity.ERROR, "Invalid repository " + repository.getId() + ": " + e.getMessage(),
+                              repository.getLocation( "" ), e );
+        Map<String, Plugin> plugins = new HashMap<String, Plugin>();
-        for ( int i = 0, n = lineage.size() - 1; i < n; i++ )
+        for ( int i = lineage.size() - 1; i >= 0; i-- )
+                        plugins.put( key, plugin );
-                problems.add( Severity.WARNING, "'build.plugins.plugin.version' for " + key + " is missing.", null );
+                InputLocation location = plugins.get( key ).getLocation( "" );
+                problems.add( Severity.WARNING, "'build.plugins.plugin.version' for " + key + " is missing.", location,
+                              null );
-                    + parentModel.getPackaging() + "\"", null );
+                    + parentModel.getPackaging() + "\"", parentModel.getLocation( "packaging" ), null );
-                + ", please verify your project structure", null );
+                + ", please verify your project structure", childModel.getLocation( "parent" ), null );
-                + ModelProblemUtils.toId( childModel ) + ": " + e.getMessage(), e );
+                + ModelProblemUtils.toId( childModel ) + ": " + e.getMessage(), childModel.getLocation( "parent" ), e );
-                problems.add( Severity.ERROR, message, null );
+                problems.add( Severity.ERROR, message, null, null );
-                        + ModelProblemUtils.toId( groupId, artifactId, version ) + ": " + e.getMessage(), e );
+                        + ModelProblemUtils.toId( groupId, artifactId, version ) + ": " + e.getMessage(),
+                                  dependency.getLocation( "" ), e );
