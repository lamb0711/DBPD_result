[MNG-2228] put extensions in a child container. This guarantees separation avoiding root classloader pollution that was causing plugins such as the release plugin to fail when using wagon-webdav.
Merged from: r492068, maven-2.0.x branch


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@492071 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.manager.WagonManager;
-import org.apache.maven.artifact.resolver.filter.ExcludesArtifactFilter;
-import org.apache.maven.plugin.PluginManager;
+import org.apache.maven.wagon.Wagon;
+import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
+import org.codehaus.plexus.logging.AbstractLogEnabled;
-import java.util.List;
-import java.util.ArrayList;
+import java.util.Map;
+    extends AbstractLogEnabled
-    private PluginManager pluginManager;
-
+    private WagonManager wagonManager;
+
+    private static final String CONTAINER_NAME = "extensions";
+
+        getLogger().debug( "Initialising extension: " + extensionId );
+
-            List excludedArtifacts = new ArrayList( result.getArtifacts().size() );
+            // create a child container for the extension
+            // TODO: this could surely be simpler/different on trunk with the new classworlds
+            PlexusContainer extensionContainer = getExtensionContainer();
+            if ( extensionContainer == null )
+            {
+                extensionContainer = container.createChildContainer( CONTAINER_NAME,
+                                                                     Collections.singletonList( artifact.getFile() ),
+                                                                     Collections.EMPTY_MAP );
+            }
+
-                excludedArtifacts.add( ArtifactUtils.versionlessKey( a ) );
-
-                container.addJarResource( a.getFile() );
+                getLogger().debug( "Adding to extension classpath: " + a.getFile() );
+
+                extensionContainer.addJarResource( a.getFile() );
-            pluginManager.addToArtifactFilter( new ExcludesArtifactFilter( excludedArtifacts )  );
+    public void registerWagons()
+    {
+        PlexusContainer extensionContainer = getExtensionContainer();
+        if ( extensionContainer != null )
+        {
+            try
+            {
+                Map wagons = extensionContainer.lookupMap( Wagon.ROLE );
+                wagonManager.registerWagons( wagons.keySet(), extensionContainer );
+            }
+            catch ( ComponentLookupException e )
+            {
+                // now wagons found in the extension
+            }
+        }
+    }
+
+    private PlexusContainer getExtensionContainer()
+    {
+        // note: ideally extensions would live in their own realm, but this would mean that things like wagon-scm would
+        // have no way to obtain SCM extensions
+        return container.getChildContainer( CONTAINER_NAME );
+    }
+
