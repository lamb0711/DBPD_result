PR: MNG-753
correct ordering of repositories in POM (also fixed problem of not correctly overriding "central" - properly this time!)
took note of a simpler way to ensure this is correct in future

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@240204 13f79535-47bb-0310-9956-ffa450edef68

-    
+
-    public MavenProject buildWithDependencies( File projectDescriptor, ArtifactRepository localRepository, ProfileManager profileManager )
+    public MavenProject buildWithDependencies( File projectDescriptor, ArtifactRepository localRepository,
+                                               ProfileManager profileManager )
-    
+
-        
+
-                
+
-                
+
-        
+
-    public MavenProject build( File projectDescriptor, ArtifactRepository localRepository, ProfileManager profileManager )
+    public MavenProject build( File projectDescriptor, ArtifactRepository localRepository,
+                               ProfileManager profileManager )
-    private MavenProject buildFromSourceFile( File projectDescriptor, ArtifactRepository localRepository, ProfileManager profileManager )
+    private MavenProject buildFromSourceFile( File projectDescriptor, ArtifactRepository localRepository,
+                                              ProfileManager profileManager )
-                                      Collections.EMPTY_LIST, projectDescriptor.getAbsoluteFile().getParentFile(), profileManager );
+                                      Collections.EMPTY_LIST, projectDescriptor.getAbsoluteFile().getParentFile(),
+                                      profileManager );
-        return build( "Artifact [" + artifact.getId() + "]", model, localRepository, remoteArtifactRepositories,
-                      null, null );
+        return build( "Artifact [" + artifact.getId() + "]", model, localRepository, remoteArtifactRepositories, null,
+                      null );
-        
+
-        
+
-        
+
-        
+
-        
+
+        // TODO: the aRWR can get out of sync with project.model.repositories. We should do all the processing of
+        // profiles, etc on the models then recreate the aggregated sets at the end from the project repositories (they
+        // must still be created along the way so that parent poms can be discovered, however)
-        aggregatedRemoteWagonRepositories.addAll( ProjectUtils.buildArtifactRepositories( superModel.getRepositories(),
-                                                                                          artifactRepositoryFactory,
-                                                                                          container ) );
-
-        
+
+        // only add the super repository if it wasn't overridden by a profile or project
+        List repositories = new ArrayList( aggregatedRemoteWagonRepositories );
+        List superRepositories = ProjectUtils.buildArtifactRepositories( superModel.getRepositories(),
+                                                                         artifactRepositoryFactory, container );
+        for ( Iterator i = superRepositories.iterator(); i.hasNext(); )
+        {
+            ArtifactRepository repository = (ArtifactRepository) i.next();
+            if ( !repositories.contains( repository ) )
+            {
+                repositories.add( repository );
+            }
+        }
+
-            project = processProjectLogic( pomLocation, project, new ArrayList( aggregatedRemoteWagonRepositories ), profileManager );
+            project = processProjectLogic( pomLocation, project, repositories, profileManager );
-    private MavenProject processProjectLogic( String pomLocation, MavenProject project, List remoteRepositories, ProfileManager profileMgr )
+    private MavenProject processProjectLogic( String pomLocation, MavenProject project, List remoteRepositories,
+                                              ProfileManager profileMgr )
-        
+
-        
+
-        
+
-        
+
-        
+
-        
+
-        
+
-        
+
-        
+
-        
+
-        
+
-        
+
-            project.setSnapshotDeploymentVersion( transformationManager.getSnapshotDeploymentVersion( projectArtifact ) );
-            
-            project.setSnapshotDeploymentBuildNumber( transformationManager.getSnapshotDeploymentBuildNumber( projectArtifact ) );
+            project.setSnapshotDeploymentVersion(
+                transformationManager.getSnapshotDeploymentVersion( projectArtifact ) );
+
+            project.setSnapshotDeploymentBuildNumber(
+                transformationManager.getSnapshotDeploymentBuildNumber( projectArtifact ) );
-        
+
-        
+
-            
+
-            
+
-        
+
-            MavenProject parent = assembleLineage( model, lineage, localRepository, parentProjectDir, parentSearchRepositories, 
-                                                   aggregatedRemoteWagonRepositories );
+            MavenProject parent = assembleLineage( model, lineage, localRepository, parentProjectDir,
+                                                   parentSearchRepositories, aggregatedRemoteWagonRepositories );
-    private List injectActiveProfiles( ProfileManager profileManager, Model model, Properties profileProperties ) 
+    private List injectActiveProfiles( ProfileManager profileManager, Model model, Properties profileProperties )
-        
+
-        
+
-                throw new ProfileActivationException( "Cannot read profiles.xml resource from directory: " + projectDir, e );
+                throw new ProfileActivationException( "Cannot read profiles.xml resource from directory: " + projectDir,
+                                                      e );
-                throw new ProfileActivationException( "Cannot parse profiles.xml resource from directory: " + projectDir, e );
+                throw new ProfileActivationException(
+                    "Cannot parse profiles.xml resource from directory: " + projectDir, e );
-    
-    private Model readModel( Reader reader ) throws IOException, XmlPullParserException, InvalidModelException
+
+    private Model readModel( Reader reader )
+        throws IOException, XmlPullParserException, InvalidModelException
-        
+
-        
+
-        
+
-        
+
-        
+
-        
+
-        
+
-        
+
-        
+
