added ability to mail out the repository-level report contents in the event an error occurs...also the ability to configure the email options using the config properties file.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163821 13f79535-47bb-0310-9956-ffa450edef68

-    
+
-        
+
-                    artifactDiscoverer = (ArtifactDiscoverer) container.lookup( ArtifactDiscoverer.ROLE,
+                    artifactDiscoverer = (ArtifactDiscoverer) container.lookup(
+                                                                                ArtifactDiscoverer.ROLE,
-                    
+
-                        
+
-                
-                if(repoReporter.hasError())
+
+                if ( repoReporter.hasError() )
-                if(repoReporter != null)
+                if ( repoReporter != null )
-            
-            if(mailReport)
+
+            if ( mailReport && configuration.mailErrorReport() )
-                String reportContents = readReportFile(repoReporter.getReportFile());
-                
+                String reportContents = readReportFile( repoReporter.getReportFile() );
+
-                message.setContent(reportContents);
-                message.setSubject("[REPOCLEAN] Error converting repository.");
-                message.setFromName("Repoclean");
-                message.setFromAddress("jdcasey@codehaus.org");
-                message.setSendDate(new Date());
-                message.addTo("Maven-2 Developers List", "m2-dev@maven.apache.org");
-                
-                mailSender.send(message);
+                message.setContent( reportContents );
+                message.setSubject( configuration.getErrorReportSubject() );
+                message.setFromName( configuration.getErrorReportFromName() );
+                message.setFromAddress( configuration.getErrorReportFromAddress() );
+                message.setSendDate( new Date() );
+                message.addTo( configuration.getErrorReportToName(), configuration.getErrorReportToAddress() );
+
+                mailSender.setSmtpHost( configuration.getErrorReportSmtpHost() );
+
+                mailSender.send( message );
-        
+
-    private String readReportFile( File reportFile ) throws IOException
+    private String readReportFile( File reportFile )
+        throws IOException
-            reader = new FileReader(reportFile);
-            
+            reader = new FileReader( reportFile );
+
-            
-            while((read = reader.read(buffer)) > -1)
+
+            while ( ( read = reader.read( buffer ) ) > -1 )
-                reportContent.append(buffer, 0, read);
+                reportContent.append( buffer, 0, read );
-            
+
-            IOUtil.close(reader);
+            IOUtil.close( reader );
-            logger.info("Rewriting " + artifacts.size() + " artifacts (Should be " + (artifacts.size() * 2) + " rewrites including POMs).");
+            logger.info( "Rewriting " + artifacts.size() + " artifacts (Should be " + ( artifacts.size() * 2 )
+                + " rewrites including POMs)." );
-                String artifactReportPath = buildArtifactReportPath(artifact);
-                
+                String artifactReportPath = buildArtifactReportPath( artifact );
+
-                    
-                    boolean targetMissingOrOlder = !artifactTarget.exists() || artifactTarget.lastModified() < artifactSource.lastModified();
-                    
-                    if(artifactSource.exists() && targetMissingOrOlder)
+
+                    boolean targetMissingOrOlder = !artifactTarget.exists()
+                        || artifactTarget.lastModified() < artifactSource.lastModified();
+
+                    if ( artifactSource.exists() && targetMissingOrOlder )
-                        
+
-                                if(logger.isDebugEnabled())
+                                if ( logger.isDebugEnabled() )
-                                logger.debug( "working on digest for artifact[" + artifact.getId() + "] with groupId: \'"
-                                    + artifact.getGroupId() + "\'" );
+                                logger.debug( "working on digest for artifact[" + artifact.getId()
+                                    + "] with groupId: \'" + artifact.getGroupId() + "\'" );
-                            
-                            artifactPomRewriter = (ArtifactPomRewriter) container.lookup( ArtifactPomRewriter.ROLE,
+
+                            artifactPomRewriter = (ArtifactPomRewriter) container.lookup(
+                                                                                          ArtifactPomRewriter.ROLE,
-                        artifactReporter.error("Cannot find source file for artifact: \'" + artifact.getId() + "\' under path: \'" + artifactSource + "\'");
+                        artifactReporter.error( "Cannot find source file for artifact: \'" + artifact.getId()
+                            + "\' under path: \'" + artifactSource + "\'" );
-                    
+
-                catch(Exception e)
+                catch ( Exception e )
-                    artifactReporter.error("Error while rewriting file or POM for artifact: \'" + artifact.getId() + "\'. See report at: \'" + artifactReportPath + "\'.", e);
+                    artifactReporter.error( "Error while rewriting file or POM for artifact: \'" + artifact.getId()
+                        + "\'. See report at: \'" + artifactReportPath + "\'.", e );
-        
-        return artifact.getGroupId().replace('.', '/') + "/" + artifact.getArtifactId() + "/" + artifact.getType() + "/" + ((classifier != null)?(classifier + "-"):("")) + artifact.getVersion() + ".report.txt";
+
+        return artifact.getGroupId().replace( '.', '/' ) + "/" + artifact.getArtifactId() + "/" + artifact.getType()
+            + "/" + ( ( classifier != null ) ? ( classifier + "-" ) : ( "" ) ) + artifact.getVersion() + ".report.txt";
-        
+
