Mercury repo system impl does return a resolved tree as a graph. UT works

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@760981 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.mercury.artifact.ArtifactQueryList;
+import org.apache.maven.mercury.artifact.ArtifactScopeEnum;
+import org.apache.maven.mercury.artifact.MetadataTreeNode;
+import org.apache.maven.repository.MetadataGraph;
+import org.omg.CORBA._PolicyStub;
-        MetadataResolutionResult res = null;
+        if ( request == null )
+            throw new IllegalArgumentException( LANG.getMessage( "null.request" ) );
+
+        if ( request.getArtifactMetadata() == null )
+            throw new IllegalArgumentException( LANG.getMessage( "null.request.artifact" ) );
+
+        List<Repository> repos =
+            MercuryAdaptor.toMercuryRepos( request.getLocalRepository()
+                                           , request.getRemoteRepostories()
+                                           , _dependencyProcessor
+                                         );
+
+        MetadataResolutionResult res = new MetadataResolutionResult();
+        
+        ArtifactMetadata md = MercuryAdaptor.toMercuryArtifactMetadata( request.getArtifactMetadata() );
+        
+        try
+        {
+            MetadataTreeNode root = _mercury.resolveAsTree( repos, ArtifactScopeEnum.valueOf( request.getScope() ), new ArtifactQueryList(md), null, null );
+            if( root != null )
+            {
+                MetadataGraph resTree = MercuryAdaptor.resolvedTreeToGraph( root );
+                
+                res.setResolvedTree( resTree );
+            }
+        }
+        catch ( RepositoryException e )
+        {
+            res.addError( e );
+        }
