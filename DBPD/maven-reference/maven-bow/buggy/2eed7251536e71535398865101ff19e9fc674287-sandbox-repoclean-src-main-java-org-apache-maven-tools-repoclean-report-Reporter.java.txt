o Reworked the artifact parsing code for the legacy artifact discoverer.
o Getting OutOfMemoryError when running against ibiblio-v1.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163732 13f79535-47bb-0310-9956-ffa450edef68

-import org.codehaus.plexus.util.IOUtil;
-
-import java.io.BufferedWriter;
-import java.io.File;
-import java.io.FileWriter;
-import java.io.IOException;
-import java.io.PrintWriter;
-import java.io.StringWriter;
-import java.util.ArrayList;
-import java.util.Iterator;
-import java.util.List;
-
+import org.codehaus.plexus.util.IOUtil;
+
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.io.PrintWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+
+    private Writer writer;
+
+        throws IOException
+
+        open();
-    public void writeReport() throws IOException
+    private void open()
+        throws IOException
-        BufferedWriter writer = null;
+        this.writer = new FileWriter( reportsFile );
+    }
-        try
+    public void close()
+    {
+        IOUtil.close( writer );
+    }
+
+    private void write( Object message )
+        throws IOException
+    {
+        if ( writer == null )
-            writer = new BufferedWriter( new FileWriter( reportsFile ) );
-
-            for ( Iterator it = messages.iterator(); it.hasNext(); )
-            {
-                Object message = it.next();
-
-                if ( message instanceof List )
-                {
-                    writer.write( format( (List) message ).toString() );
-                }
-                else
-                {
-                    writer.write( String.valueOf( message ) );
-                }
-
-                writer.newLine();
-            }
+            throw new IOException( "BufferedWriter instance in reporter: \'" + this
+                + "\' is null. Cannot write message." );
-        finally
+
+        if ( message instanceof List )
-            IOUtil.close( writer );
+            writer.write( format( (List) message ).toString() );
+        else
+        {
+            writer.write( String.valueOf( message ) );
+        }
+
+        writer.write( '\n' );
+        
+        writer.flush();
+        throws IOException
-        messages.add( new AppendingList( 2 ).append( WARN_LEVEL ).append( message ) );
+        write( new AppendingList( 2 ).append( WARN_LEVEL ).append( message ) );
+        throws IOException
-        messages.add( new AppendingList( 2 ).append( INFO_LEVEL ).append( message ) );
+        write( new AppendingList( 2 ).append( INFO_LEVEL ).append( message ) );
+        throws IOException
-        messages.add( new AppendingList( 3 ).append( ERROR_LEVEL ).append( message ).append( error ) );
+        write( new AppendingList( 3 ).append( ERROR_LEVEL ).append( message ).append( error ) );
+        throws IOException
-        messages.add( new AppendingList( 2 ).append( ERROR_LEVEL ).append( message ) );
+        write( new AppendingList( 2 ).append( ERROR_LEVEL ).append( message ) );
