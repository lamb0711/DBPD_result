o Refactored model validator to use problem collector

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@800451 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.validation.ModelValidationResult;
-        Model inputModel = readModel( request.getModelSource(), request.getPomFile(), request, problems.getProblems() );
+        Model inputModel = readModel( request.getModelSource(), request.getPomFile(), request, problems );
-            currentData = readParent( tmpModel, request, problems.getProblems() );
+            currentData = readParent( tmpModel, request, problems );
-        ModelValidationResult validationResult = modelValidator.validateEffectiveModel( resultModel, request );
-        addProblems( resultModel, validationResult, problems.getProblems() );
+        modelValidator.validateEffectiveModel( resultModel, request, problems );
-                             List<ModelProblem> problems )
+                             DefaultModelProblemCollector problems )
-            throw new ModelBuildingException( problems );
+            throw new ModelBuildingException( problems.getProblems() );
-            throw new ModelBuildingException( problems );
+            throw new ModelBuildingException( problems.getProblems() );
-        ModelValidationResult validationResult = modelValidator.validateRawModel( model, request );
-        addProblems( model, validationResult, problems );
+        modelValidator.validateRawModel( model, request, problems );
-    private void addProblems( Model model, ModelValidationResult result, List<ModelProblem> problems )
-    {
-        if ( !result.getWarnings().isEmpty() || !result.getErrors().isEmpty() )
-        {
-            String source = ModelProblemUtils.toSourceHint( model );
-
-            for ( String message : result.getWarnings() )
-            {
-                problems.add( new ModelProblem( "Invalid POM " + source + ": " + message,
-                                                ModelProblem.Severity.WARNING, source ) );
-            }
-
-            for ( String message : result.getErrors() )
-            {
-                problems.add( new ModelProblem( "Invalid POM " + source + ": " + message, ModelProblem.Severity.ERROR,
-                                                source ) );
-            }
-        }
-    }
-
-    private ModelData readParent( Model childModel, ModelBuildingRequest request, List<ModelProblem> problems )
+    private ModelData readParent( Model childModel, ModelBuildingRequest request, DefaultModelProblemCollector problems )
-    private ModelData readParentLocally( Model childModel, ModelBuildingRequest request, List<ModelProblem> problems )
+    private ModelData readParentLocally( Model childModel, ModelBuildingRequest request,
+                                         DefaultModelProblemCollector problems )
-    private ModelData readParentExternally( Model childModel, ModelBuildingRequest request, List<ModelProblem> problems )
+    private ModelData readParentExternally( Model childModel, ModelBuildingRequest request,
+                                            DefaultModelProblemCollector problems )
-            throw new ModelBuildingException( problems );
+            throw new ModelBuildingException( problems.getProblems() );
