Working on issue: MNG-469

o Changed <reports/> in the Model to <reporting/>, to accommodate the <reports/> inside of <reportSet/>.

o Changed the report-plugin class <plugins/> inside of <report[ing]/> to <reporters/>, which means using a new class called Reporter (this is meant to be a Plugin-like model for reports, with reportSets rather than executions...)

o Changed the MavenProject to reflect these two model changes

o Added support to the inheritance assembler to perform deep inheritance of the reporting model (complete with calculations based on the <inherit/> attributes on Reporter and ReportSet).

o Updated DoxiaMojo, Pom, and DefaultPluginVersionManager to reflect the new model classes and MavenProject methods.

This is only round one of the changes for this issue. The next step is to start binding report configuration to the plugin manager via the lifecycle executor (it will traverse the reporting section, and verifyPlugin() to enable direct calls to the report's mojo).



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191239 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.Goal;
-import org.apache.maven.model.Reports;
+import org.apache.maven.model.Reporting;
-import org.codehaus.plexus.util.xml.Xpp3Dom;
-    public void setReports( Reports reports )
+    public void setReporting( Reporting reporting )
-        model.setReports( reports );
+        model.setReporting( reporting );
-    public Reports getReports()
+    public Reporting getReporting()
-        return model.getReports();
+        return model.getReporting();
-    public List getReportPlugins()
+    public List getReporters()
-        if ( model.getReports() == null )
+        if ( model.getReporting() == null )
-        return model.getReports().getPlugins();
+        return model.getReporting().getReporters();
-    public Xpp3Dom getGoalConfiguration( String pluginGroupId, String pluginArtifactId, String goalId )
-    {
-        Xpp3Dom dom = null;
-
-        // ----------------------------------------------------------------------
-        // I would like to be able to lookup the Mojo object using a key but
-        // we have a limitation in modello that will be remedied shortly. So
-        // for now I have to iterate through and see what we have.
-        // ----------------------------------------------------------------------
-
-        if ( getBuildPlugins() != null )
-        {
-            for ( Iterator iterator = getBuildPlugins().iterator(); iterator.hasNext(); )
-            {
-                Plugin plugin = (Plugin) iterator.next();
-
-                if ( pluginGroupId.equals( plugin.getGroupId() ) && pluginArtifactId.equals( plugin.getArtifactId() ) )
-                {
-                    dom = (Xpp3Dom) plugin.getConfiguration();
-
-                    if ( goalId != null )
-                    {
-                        Goal goal = (Goal) plugin.getGoalsAsMap().get( goalId );
-                        if ( goal != null )
-                        {
-                            Xpp3Dom goalConfiguration = (Xpp3Dom) goal.getConfiguration();
-                            if ( goalConfiguration != null )
-                            {
-                                Xpp3Dom newDom = new Xpp3Dom( goalConfiguration );
-                                dom = Xpp3Dom.mergeXpp3Dom( newDom, dom );
-                            }
-                        }
-                    }
-                    break;
-                }
-            }
-        }
-
-        if ( dom != null )
-        {
-            // make a copy so the original in the POM doesn't get messed with
-            dom = new Xpp3Dom( dom );
-        }
-
-        return dom;
-    }
-
