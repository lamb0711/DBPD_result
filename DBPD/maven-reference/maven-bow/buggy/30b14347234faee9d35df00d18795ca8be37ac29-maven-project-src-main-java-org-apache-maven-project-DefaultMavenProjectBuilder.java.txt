Resolving: MNG-421

o External profiles (from settings.xml, profiles.xml) are now available before the main MavenProject is constructed, which allows repositories defined in external profiles to be used to resolve project parents and dependencies.

NOTE: I need to double-check whether the profile-defined repos are actually used to resolve the parent project(s)...there may be another commit following on the heels of this one.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@189667 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+import java.util.Collections;
-                                               ArtifactMetadataSource artifactMetadataSource )
+                                               ArtifactMetadataSource artifactMetadataSource, List externalProfiles )
-        MavenProject project = buildFromSourceFile( projectDescriptor, localRepository );
+        MavenProject project = buildFromSourceFile( projectDescriptor, localRepository, externalProfiles );
-    public MavenProject build( File projectDescriptor, ArtifactRepository localRepository )
+    public MavenProject build( File projectDescriptor, ArtifactRepository localRepository, List externalProfiles )
-        return buildFromSourceFile( projectDescriptor, localRepository );
+        return buildFromSourceFile( projectDescriptor, localRepository, externalProfiles );
-    private MavenProject buildFromSourceFile( File projectDescriptor, ArtifactRepository localRepository )
+    private MavenProject buildFromSourceFile( File projectDescriptor, ArtifactRepository localRepository, List externalProfiles )
-        MavenProject project = build( projectDescriptor.getAbsolutePath(), model, localRepository );
+        MavenProject project = build( projectDescriptor.getAbsolutePath(), model, localRepository, externalProfiles );
-        return build( "Artifact [" + artifact.getId() + "]", model, localRepository );
+        return build( "Artifact [" + artifact.getId() + "]", model, localRepository, Collections.EMPTY_LIST );
-    private MavenProject build( String pomLocation, Model model, ArtifactRepository localRepository )
+    private MavenProject build( String pomLocation, Model model, ArtifactRepository localRepository, List externalProfiles )
-            project = processProjectLogic( pomLocation, project, aggregatedRemoteWagonRepositories );
+            project = processProjectLogic( pomLocation, project, aggregatedRemoteWagonRepositories, externalProfiles );
-    private MavenProject processProjectLogic( String pomLocation, MavenProject project, List remoteRepositories )
+    private MavenProject processProjectLogic( String pomLocation, MavenProject project, List remoteRepositories, List externalProfiles )
+        List activeProfiles = new ArrayList( externalProfiles );
+        
-        for ( Iterator it = activePomProfiles.iterator(); it.hasNext(); )
+        
+        activeProfiles.addAll( activePomProfiles );
+        
+        for ( Iterator it = activeProfiles.iterator(); it.hasNext(); )
-    public MavenProject buildStandaloneSuperProject( ArtifactRepository localRepository )
+    public MavenProject buildStandaloneSuperProject( ArtifactRepository localRepository, List externalProfiles )
-            project = processProjectLogic( "<Super-POM>", project, remoteRepositories );
+            project = processProjectLogic( "<Super-POM>", project, remoteRepositories, externalProfiles );
