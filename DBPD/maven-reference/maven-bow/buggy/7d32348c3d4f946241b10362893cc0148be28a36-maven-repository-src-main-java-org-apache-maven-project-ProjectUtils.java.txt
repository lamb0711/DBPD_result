o no choice but to shunt the ProjectUtils which is used by the remote resources plugin into using the MavenRepositorySystem.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@750324 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.repository.MavenRepositorySystem;
+import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
+// This class needs to stick around because it was exposed the the remote resources plugin started using it instead of
+// getting the repositories from the project.
+
-    public static List buildArtifactRepositories( List repositories,
+    public static List buildArtifactRepositories( List<Repository> repositories,
-        List repos = new ArrayList();
-
-        for ( Iterator i = repositories.iterator(); i.hasNext(); )
+        List<ArtifactRepository> remoteRepositories = new ArrayList<ArtifactRepository>();
+        
+        for ( Repository r : repositories )
-            Repository mavenRepo = (Repository) i.next();
-
-            ArtifactRepository artifactRepo =
-                buildArtifactRepository( mavenRepo, artifactRepositoryFactory, container );
-
-            if ( !repos.contains( artifactRepo ) )
-            {
-                repos.add( artifactRepo );
-            }
+            remoteRepositories.add( buildArtifactRepository( r, artifactRepositoryFactory, container ) );
-        return repos;
+        
+        return rs( container ).getMirrors( remoteRepositories );        
-            return artifactRepositoryFactory.createDeploymentArtifactRepository( id, url, repo.getLayout(),
-                                                                                 repo.isUniqueVersion() );
+            return artifactRepositoryFactory.createDeploymentArtifactRepository( id, url, repo.getLayout(), repo.isUniqueVersion() );
+    private static MavenRepositorySystem rs( PlexusContainer c )
+    {
+        MavenRepositorySystem rs = null;
+        
+        try
+        {
+            rs = c.lookup( MavenRepositorySystem.class );
+        }
+        catch ( ComponentLookupException e )
+        {
+        }
+        
+        return rs;
+    }
