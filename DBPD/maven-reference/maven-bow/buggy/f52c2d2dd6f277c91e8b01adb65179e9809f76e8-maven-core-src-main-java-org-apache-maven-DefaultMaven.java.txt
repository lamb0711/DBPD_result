o Configured proper user agent

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@989902 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.IOException;
+import java.io.InputStream;
+import java.util.Properties;
+import org.codehaus.plexus.util.IOUtil;
+import org.sonatype.aether.ConfigurationProperties;
-        session.setConfigProps( request.getSystemProperties() );
+        Map<Object, Object> configProps = new LinkedHashMap<Object, Object>();
+        configProps.put( ConfigurationProperties.USER_AGENT, getUserAgent() );
+        configProps.putAll( request.getSystemProperties() );
+        configProps.putAll( request.getUserProperties() );
+        session.setConfigProps( configProps );
+    private String getUserAgent()
+    {
+        StringBuilder buffer = new StringBuilder( 128 );
+
+        buffer.append( "Apache-Maven/" ).append( getMavenVersion() );
+        buffer.append( " (" );
+        buffer.append( "Java " ).append( System.getProperty( "java.version" ) );
+        buffer.append( "; " );
+        buffer.append( System.getProperty( "os.name" ) ).append( " " ).append( System.getProperty( "os.version" ) );
+        buffer.append( ")" );
+
+        return buffer.toString();
+    }
+
+    private String getMavenVersion()
+    {
+        Properties props = new Properties();
+
+        InputStream is = getClass().getResourceAsStream( "/META-INF/maven/org.apache.maven/maven-core/pom.properties" );
+        if ( is != null )
+        {
+            try
+            {
+                props.load( is );
+            }
+            catch ( IOException e )
+            {
+                logger.debug( "Failed to read Maven version", e );
+            }
+            IOUtil.close( is );
+        }
+
+        return props.getProperty( "version", "unknown-version" );
+    }
+
