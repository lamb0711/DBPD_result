refactoring of the resolveTransitiveDependencies call. 
simplified by removing a bunch of duplicated code in addArtifacts - no need to merge, you have the full list. 
separated the original artifacts (dependency artifacts) from the resolved artifacts (getArtifacts)


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191667 13f79535-47bb-0310-9956-ffa450edef68

+                                               List externalProfiles )
+        throws ProjectBuildingException, ArtifactResolutionException
+    {
+        ArtifactMetadataSource source = new MavenMetadataSource( artifactResolver, this, artifactFactory );
+        return buildWithDependencies( projectDescriptor, localRepository, source, externalProfiles );
+    }
+
+    public MavenProject buildWithDependencies( File projectDescriptor, ArtifactRepository localRepository,
-        ArtifactResolutionResult result = artifactResolver.resolveTransitively( project.getArtifacts(),
+        // TODO: such a call in MavenMetadataSource too - packaging not really the intention of type
+        Artifact artifact = artifactFactory.createArtifact( project.getGroupId(), project.getArtifactId(),
+                                                            project.getVersion(), null, project.getPackaging() );
+
+        ArtifactResolutionResult result = artifactResolver.resolveTransitively( project.getDependencyArtifacts(),
+                                                                                artifact,
-        project.addArtifacts( result.getArtifacts().values(), artifactFactory );
+        project.setArtifacts( new HashSet( result.getArtifacts().values() ) );
-        
+
-        
+
-        
+
-            
+
-                    
+
-    
+
-        project.setArtifacts( createArtifacts( project.getDependencies() ) );
+        project.setDependencyArtifacts( createArtifacts( project.getDependencies() ) );
-        
+
