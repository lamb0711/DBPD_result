[MNG-5073] ProjectBuilder.build(File,ProjectBuildingRequest) returns null project if dependency version info is missing

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1176414 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.ArrayList;
+import java.util.Collections;
-    private final Model model;
-
-    private final String modelId;
-
-    private final List<ModelProblem> problems;
+    private final ModelBuildingResult result;
+     * @deprecated Use {@link #ModelBuildingException(ModelBuildingResult)} instead.
+    @Deprecated
-        this.model = model;
-        this.modelId = ( modelId != null ) ? modelId : "";
-
-        this.problems = new ArrayList<ModelProblem>();
-        if ( problems != null )
+        if ( model != null )
-            this.problems.addAll( problems );
+            DefaultModelBuildingResult tmp = new DefaultModelBuildingResult();
+            if ( modelId == null )
+            {
+                modelId = "";
+            }
+            tmp.addModelId( modelId );
+            tmp.setRawModel( modelId, model );
+            tmp.setProblems( problems );
+            result = tmp;
+        else
+        {
+            result = null;
+        }
+    }
+
+    /**
+     * Creates a new exception from the specified interim result and its associated problems.
+     * 
+     * @param result The interim result, may be {@code null}.
+     */
+    public ModelBuildingException( ModelBuildingResult result )
+    {
+        super( toMessage( result ) );
+        this.result = result;
+    }
+
+    /**
+     * Gets the interim result of the model building up to the point where it failed.
+     * 
+     * @return The interim model building result or {@code null} if not available.
+     */
+    public ModelBuildingResult getResult()
+    {
+        return result;
-        return model;
+        if ( result == null )
+        {
+            return null;
+        }
+        if ( result.getEffectiveModel() != null )
+        {
+            return result.getEffectiveModel();
+        }
+        return result.getRawModel();
-        return modelId;
+        if ( result == null || result.getModelIds().isEmpty() )
+        {
+            return "";
+        }
+        return result.getModelIds().get( 0 );
-        return problems;
+        if ( result == null )
+        {
+            return Collections.emptyList();
+        }
+        return result.getProblems();
+    }
+
+    private static String toMessage( ModelBuildingResult result )
+    {
+        if ( result != null && !result.getModelIds().isEmpty() )
+        {
+            return toMessage( result.getModelIds().get( 0 ), result.getProblems() );
+        }
+        return null;
