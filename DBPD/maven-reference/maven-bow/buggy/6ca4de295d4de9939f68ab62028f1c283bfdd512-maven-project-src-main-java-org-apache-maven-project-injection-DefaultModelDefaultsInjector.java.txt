Added inheritance of Plugins according to the rules we decided upon. This consists of:

- inheritanceApplied flag on Plugin and Goal (NOT fields, just a code-only flag)
- flushGoalMap/flushPluginMap to clear caching of these calculated attributes
- ModelUtils.mergePluginLists() and ModelUtils.mergePluginDefinitions() for use in both
    * DefaultModelInheritanceAssembler (Plugin/PluginManagement lists)
    * DefaultModelDefaultsInjector (PluginManagement -> Plugin merges)

- Also added a few unit tests for basic Plugin inheritance stuff. This could be more thoroughly tested...

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@178825 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.Goal;
-import org.apache.maven.model.PluginManagement;
-import org.codehaus.plexus.util.xml.Xpp3Dom;
-            injectPluginDefaults( model.getBuild().getPluginsAsMap(), model.getBuild().getPluginManagement() );
-        }
-    }
-
-    private void injectPluginDefaults( Map pluginMap, PluginManagement pluginManagement )
-    {
-        if ( pluginManagement != null )
-        {
-            // a given project's plugins should be smaller than the
-            // group-defined defaults set...
-            // in other words, the project's plugins will probably be a subset
-            // of
-            // those specified in defaults.
-
-            List managedPlugins = pluginManagement.getPlugins();
-
-            for ( Iterator it = managedPlugins.iterator(); it.hasNext(); )
-            {
-                Plugin def = (Plugin) it.next();
-
-                Plugin plugin = (Plugin) pluginMap.get( def.getKey() );
-                if ( plugin != null )
-                {
-                    mergePluginWithDefaults( plugin, def );
-                }
-            }
+            ModelUtils.mergePluginLists( model.getBuild(), model.getBuild().getPluginManagement(), false );
-        ModelUtils.mergeSupplementalPluginDefinition( plugin, def );
+        ModelUtils.mergePluginDefinitions( plugin, def, false );
