o Simplified the ResourcesMojo to eliminate the need for a ResourceEntry class, which is easily replaced by usage of a TreeMap (avoid the NoClassDefFoundError from before SEE MNG-243)
o Changed the references to repo1.maven.org for central repository to repo1.maven.org/maven2 in preparation for switchover to ibiblio.org

    This will allow us to transparently switch between redirects and CNAME changes for referencing ibiblio.org, since ibiblio will not allow a
    vhost for m2 or a rewrite rule...switching the URL for the repo will allow changes to the CNAME (satisfy ibiblio's pathing) while at the same
    time allowing the use of redirects (redirect can be at /maven2/index.html rather than /index.html, f.e.).


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163772 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Map;
+import java.util.TreeMap;
+import java.util.Map.Entry;
-            for ( Iterator i = getJarResources( resources ).iterator(); i.hasNext(); )
+            for ( Iterator i = getJarResources( resources ).entrySet().iterator(); i.hasNext(); )
-                ResourceEntry resourceEntry = (ResourceEntry) i.next();
-
-                File destinationFile = new File( outputDirectory, resourceEntry.getDestination() );
+                Map.Entry entry = (Entry) i.next();
+                String source = (String) entry.getKey();
+                String destination = (String) entry.getValue();
+                
+                File destinationFile = new File( outputDirectory, destination );
-                fileCopy( resourceEntry.getSource(), destinationFile.getPath() );
+                fileCopy( source, destinationFile.getPath() );
-    private List getJarResources( List resources )
+    private Map getJarResources( List resources )
-        List resourceEntries = new ArrayList();
+        Map resourceEntries = new TreeMap();
-                ResourceEntry je = new ResourceEntry( new File( resource.getDirectory(), name ).getPath(), entryName );
+                String resourcePath = new File( resource.getDirectory(), name ).getPath();
-                resourceEntries.add( je );
+                resourceEntries.put( resourcePath, entryName );
-    class ResourceEntry
-    {
-        private String source;
-
-        private String destination;
-
-        public ResourceEntry( String source, String entry )
-        {
-            this.source = source;
-
-            this.destination = entry;
-        }
-
-        public String getSource()
-        {
-            return source;
-        }
-
-        public String getDestination()
-        {
-            return destination;
-        }
-    }
