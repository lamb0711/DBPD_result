[MNG-4842] [regression] Repositories discovered in dependency POMs override repositories configured for original resolution request of POM

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1002852 13f79535-47bb-0310-9956-ffa450edef68

-        List<ArtifactRepository> artifactRepositories = new ArrayList<ArtifactRepository>();
-        Collection<String> repoIds = new HashSet<String>();
+        List<ArtifactRepository> internalRepositories = new ArrayList<ArtifactRepository>();
-            artifactRepositories.add( repositorySystem.buildArtifactRepository( repository ) );
-            repoIds.add( repository.getId() );
+            internalRepositories.add( repositorySystem.buildArtifactRepository( repository ) );
-        repositorySystem.injectMirror( request.getRepositorySession(), artifactRepositories );
+        repositorySystem.injectMirror( request.getRepositorySession(), internalRepositories );
-        repositorySystem.injectProxy( request.getRepositorySession(), artifactRepositories );
+        repositorySystem.injectProxy( request.getRepositorySession(), internalRepositories );
-        repositorySystem.injectAuthentication( request.getRepositorySession(), artifactRepositories );
+        repositorySystem.injectAuthentication( request.getRepositorySession(), internalRepositories );
-        if ( externalRepositories != null )
+        List<ArtifactRepository> dominantRepositories;
+        List<ArtifactRepository> recessiveRepositories;
+
+        if ( ProjectBuildingRequest.RepositoryMerging.REQUEST_DOMINANT.equals( request.getRepositoryMerging() ) )
-            for ( ArtifactRepository repository : externalRepositories )
+            dominantRepositories = externalRepositories;
+            recessiveRepositories = internalRepositories;
+        }
+        else
+        {
+            dominantRepositories = internalRepositories;
+            recessiveRepositories = externalRepositories;
+        }
+
+        List<ArtifactRepository> artifactRepositories = new ArrayList<ArtifactRepository>();
+        Collection<String> repoIds = new HashSet<String>();
+
+        if ( dominantRepositories != null )
+        {
+            for ( ArtifactRepository repository : dominantRepositories )
+            {
+                repoIds.add( repository.getId() );
+                artifactRepositories.add( repository );
+            }
+        }
+
+        if ( recessiveRepositories != null )
+        {
+            for ( ArtifactRepository repository : recessiveRepositories )
