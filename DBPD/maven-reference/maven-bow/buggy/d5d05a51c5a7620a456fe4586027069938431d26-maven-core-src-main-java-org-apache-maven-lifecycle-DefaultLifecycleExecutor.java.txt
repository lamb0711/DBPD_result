start to enhance the lifecycle. Need to pre-process plugins as currently goals are only executed if added to a phase after the current goal. Also need plugin configuration to activate these changes.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163419 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashSet;
+import java.util.Set;
+        Set seenPhases = new HashSet();
-        int i = phases.indexOf( phaseMap.get( phase ) );
+        // only execute up to the given phase
+        int index = phases.indexOf( phaseMap.get( phase ) );
-        for ( int j = 0; j <= i; j++ )
+        for ( int j = 0; j <= index; j++ )
-            if ( p.getGoal() != null )
+            if ( p.getGoals() != null )
-                PluginExecutionResponse pluginResponse = executeMojo( p.getGoal(), session );
-
-                if ( pluginResponse.isExecutionFailure() )
+                for ( Iterator i = p.getGoals().iterator(); i.hasNext(); )
-                    response.setExecutionFailure( p.getGoal(), pluginResponse.getFailureResponse() );
-                    break;
+                    String goal = (String) i.next();
+
+                    PluginExecutionResponse pluginResponse = executeMojo( goal, session );
+
+                    if ( pluginResponse.isExecutionFailure() )
+                    {
+                        response.setExecutionFailure( goal, pluginResponse.getFailureResponse() );
+                        break;
+                    }
+    public Phase getPhase( String id )
+    {
+        return (Phase) phaseMap.get( id );
+    }
+
