PR: MNG-507
implement repository relocation of an artifact


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@220220 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.repository.ArtifactRepository;
+import org.apache.maven.artifact.repository.ArtifactRepository;
-import org.apache.maven.reporting.AbstractMavenReportRenderer;
+import org.apache.maven.reporting.AbstractMavenReportRenderer;
-import java.io.IOException;
- * 
- * @goal dependencies
- * 
+ *
+ * @goal dependencies
-                                    MavenProjectBuilder mavenProjectBuilder, ArtifactFactory artifactFactory,
-                                    ArtifactRepository localRepository )
+                                     MavenProjectBuilder mavenProjectBuilder, ArtifactFactory artifactFactory,
+                                     ArtifactRepository localRepository )
-            tableHeader( new String[] { groupId, artifactId, version, description, url } );
+            tableHeader( new String[]{groupId, artifactId, version, description, url} );
-                Artifact artifact = artifactFactory.createArtifact( dependency.getGroupId(),
-                                                                    dependency.getArtifactId(),
+                Artifact artifact = artifactFactory.createArtifact( dependency.getGroupId(), dependency.getArtifactId(),
-                MavenProject artifactProject = null;
+                MavenProject artifactProject;
+                    // TODO: can we use @requiresDependencyResolution instead, and capture the depth of artifacts in the artifact itself?
-                                                        "Can't find a valid Maven project in the repository for the artifact ["
-                                                            + artifact + "]." );
+                        "Can't find a valid Maven project in the repository for the artifact [" + artifact + "]." );
-                tableRow( new String[] {
-                    dependency.getGroupId(),
-                    dependency.getArtifactId(),
-                    dependency.getVersion(),
+                tableRow( new String[]{dependency.getGroupId(), dependency.getArtifactId(), dependency.getVersion(),
-                    createLinkPatternedText( artifactProject.getUrl(), artifactProject.getUrl() ) } );
+                    createLinkPatternedText( artifactProject.getUrl(), artifactProject.getUrl() )} );
-                tableHeader( new String[] { groupId, artifactId, version, description, url } );
+                tableHeader( new String[]{groupId, artifactId, version, description, url} );
-                    MavenProject artifactProject = null;
+                    MavenProject artifactProject;
-                                                            "Can't find a valid Maven project in the repository for the artifact ["
-                                                                + artifact + "]." );
+                            "Can't find a valid Maven project in the repository for the artifact [" + artifact + "]." );
-                    tableRow( new String[] {
-                        artifact.getGroupId(),
-                        artifact.getArtifactId(),
-                        artifact.getVersion(),
+                    tableRow( new String[]{artifact.getGroupId(), artifact.getArtifactId(), artifact.getVersion(),
-                        createLinkPatternedText( artifactProject.getUrl(), artifactProject.getUrl() ) } );
+                        createLinkPatternedText( artifactProject.getUrl(), artifactProject.getUrl() )} );
-         * 
-         * @param project
-         *            a Maven project
+         *
+         * @param project a Maven project
-                Artifact artifact = artifactFactory.createArtifact( dependency.getGroupId(),
-                                                                    dependency.getArtifactId(),
+                Artifact artifact = artifactFactory.createArtifact( dependency.getGroupId(), dependency.getArtifactId(),
-         * @param artifact
-         *            an artifact
+         * @param artifact an artifact
-         * @throws org.apache.maven.project.ProjectBuildingException
-         *             if any
+         * @throws org.apache.maven.project.ProjectBuildingException if any
+            // TODO: we should use the MavenMetadataSource instead
