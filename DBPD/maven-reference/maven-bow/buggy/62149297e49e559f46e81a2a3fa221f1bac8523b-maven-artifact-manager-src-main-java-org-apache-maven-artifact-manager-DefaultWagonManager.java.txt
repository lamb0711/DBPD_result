Resolving: MNG-1150

Applied patch for configuring Wagon instances via DefaultWagonManager. I reworked the configuration exception to be a derivative of TransferFailedException, since it pertains to the WagonManager usage of maven-wagon.

Thanks to Juan Codagnone for the patch.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@320827 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.component.configurator.ComponentConfigurationException;
+import org.codehaus.plexus.component.configurator.ComponentConfigurator;
+import org.codehaus.plexus.configuration.PlexusConfiguration;
+import org.codehaus.plexus.configuration.xml.XmlPlexusConfiguration;
+import org.codehaus.plexus.util.xml.Xpp3Dom;
+    
+    private Map serverConfigurationMap = new HashMap();
+            
+            configureWagon( wagon, repository );
-
+        
+    
+
+    /**
+     * Applies the server configuration to the wagon
+     * 
+     * @param wagon the wagon to configure
+     * @param repository the repository that has the configuration
+     * @throws ConfigurationException if the wagon can't be configured
+     */
+    private void configureWagon( Wagon wagon, ArtifactRepository repository )
+        throws WagonConfigurationException
+    {
+
+        final String repositoryId = repository.getId();
+
+        if ( serverConfigurationMap.containsKey( repositoryId ) )
+        {
+            ComponentConfigurator componentConfigurator = null;
+            try
+            {
+                componentConfigurator = (ComponentConfigurator) container.lookup( ComponentConfigurator.ROLE );
+                componentConfigurator.configureComponent( wagon, (PlexusConfiguration) serverConfigurationMap
+                    .get( repositoryId ), container.getContainerRealm() );
+                System.out.println( "done" );
+            }
+            catch ( final ComponentLookupException e )
+            {
+                throw new WagonConfigurationException( repositoryId, "Unable to lookup wagon configurator. Wagon configuration cannot be applied.", e );
+            }
+            catch ( ComponentConfigurationException e )
+            {
+                throw new WagonConfigurationException( repositoryId, "Unable to apply wagon configuration.", e );
+            }
+            finally
+            {
+                if ( componentConfigurator != null )
+                {
+                    try
+                    {
+                        container.release( componentConfigurator );
+                    }
+                    catch ( ComponentLifecycleException e )
+                    {
+                        getLogger().error( "Problem releasing configurator - ignoring: " + e.getMessage() );
+                    }
+                }
+
+            }
+        }
+    }
+    
+
+    public void addConfiguration( String repositoryId, Xpp3Dom configuration )
+    {
+
+        if ( repositoryId == null || configuration == null )
+        {
+            throw new IllegalArgumentException( "arguments can't be null" );
+        }
+
+        final XmlPlexusConfiguration xmlConf = ( configuration == null ) ? new XmlPlexusConfiguration( "configuration" )
+                                                                        : new XmlPlexusConfiguration( configuration );
+
+        serverConfigurationMap.put( repositoryId, xmlConf );
+    }
