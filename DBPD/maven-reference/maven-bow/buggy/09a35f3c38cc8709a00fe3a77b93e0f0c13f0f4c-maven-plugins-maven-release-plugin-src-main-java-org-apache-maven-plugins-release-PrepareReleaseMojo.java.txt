PR: MNG-1060
fix basedir translation on windows

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@293190 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.Resource;
+import org.apache.maven.project.ModelUtils;
+import org.apache.maven.project.path.PathTranslator;
+    /**
+     * @component
+     */
+    private PathTranslator pathTranslator;
+
-                    MavenProject clonedProject = new MavenProject( project );
-
-                    Model model = clonedProject.getOriginalModel();
+                    Model model = ModelUtils.cloneModel( project.getOriginalModel() );
-                    // TODO: use clone model instead... (requires beta-3)
-                    project = new MavenProject( project );
-
-                    Model model = project.getOriginalModel();
+                    Model model = ModelUtils.cloneModel( project.getOriginalModel() );
-                try
-                {
-                    relativizeBuildPaths( releaseProject.getModel().getBuild(),
-                                          project.getFile().getParentFile().getCanonicalPath() );
-                }
-                catch ( IOException e )
-                {
-                    throw new MojoExecutionException( "Cannot relativize build paths for: " + project.getId(), e );
-                }
+                pathTranslator.unalignFromBaseDirectory( releaseProject.getModel(), project.getFile().getParentFile() );
-    private void relativizeBuildPaths( Build build, String canonicalBasedir )
-    {
-        int basePathLength = canonicalBasedir.length() + 1;
-
-        String directory = build.getDirectory();
-        if ( directory.startsWith( canonicalBasedir ) )
-        {
-            build.setDirectory( directory.substring( basePathLength ) );
-        }
-
-        String outDir = build.getOutputDirectory();
-        if ( outDir.startsWith( canonicalBasedir ) )
-        {
-            build.setOutputDirectory( outDir.substring( basePathLength ) );
-        }
-
-        String testOutDir = build.getTestOutputDirectory();
-        if ( testOutDir.startsWith( canonicalBasedir ) )
-        {
-            build.setTestOutputDirectory( testOutDir.substring( basePathLength ) );
-        }
-
-        String srcDir = build.getSourceDirectory();
-        if ( srcDir.startsWith( canonicalBasedir ) )
-        {
-            build.setSourceDirectory( srcDir.substring( basePathLength ) );
-        }
-
-        String scriptSrcDir = build.getScriptSourceDirectory();
-        if ( scriptSrcDir.startsWith( canonicalBasedir ) )
-        {
-            build.setScriptSourceDirectory( scriptSrcDir.substring( basePathLength ) );
-        }
-
-        String testSrcDir = build.getTestSourceDirectory();
-        if ( testSrcDir.startsWith( canonicalBasedir ) )
-        {
-            build.setTestSourceDirectory( testSrcDir.substring( basePathLength ) );
-        }
-
-        List resources = build.getResources();
-        if ( resources != null )
-        {
-            for ( Iterator it = resources.iterator(); it.hasNext(); )
-            {
-                Resource resource = (Resource) it.next();
-
-                String dir = resource.getDirectory();
-                if ( dir.startsWith( canonicalBasedir ) )
-                {
-                    resource.setDirectory( dir.substring( basePathLength ) );
-                }
-            }
-        }
-
-        List testResources = build.getTestResources();
-        if ( testResources != null )
-        {
-            for ( Iterator it = testResources.iterator(); it.hasNext(); )
-            {
-                Resource resource = (Resource) it.next();
-
-                String dir = resource.getDirectory();
-                if ( dir.startsWith( canonicalBasedir ) )
-                {
-                    resource.setDirectory( dir.substring( basePathLength ) );
-                }
-            }
-        }
-    }
-
