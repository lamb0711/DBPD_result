o cleaning up the project builder, deprecating maven 1.x repository support, it will be 3 years by the time this is actually released
  so tough noogies for people still trying to use Maven 1.x repositories with Maven 2.x.

  The next series of refactoring I will be doing with GIT.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@580609 13f79535-47bb-0310-9956-ffa450edef68

+
-            buildExtensionScanner.scanForBuildExtensions(
-                files,
-                request.getLocalRepository(),
-                request.getProfileManager() );
+            buildExtensionScanner.scanForBuildExtensions( files, request.getLocalRepository(), request.getProfileManager() );
-            throw new MavenExecutionException(
-                "Error scanning for extensions: " + e.getMessage(),
-                e );
+            throw new MavenExecutionException( "Error scanning for extensions: " + e.getMessage(), e );
-            projects = collectProjects(
-                files,
-                request.getLocalRepository(),
-                request.isRecursive(),
-                request.getProfileManager(),
-                !request.useReactor() );
+            projects = collectProjects( files, request.getLocalRepository(), request.isRecursive(), request.getProfileManager(), !request.useReactor() );
-            throw new MavenExecutionException(
-                e.getMessage(),
-                e );
+            throw new MavenExecutionException( e.getMessage(), e );
-            throw new MavenExecutionException(
-                e.getMessage(),
-                e );
+            throw new MavenExecutionException( e.getMessage(), e );
-            throw new MavenExecutionException(
-                e.getMessage(),
-                e );
+            throw new MavenExecutionException( e.getMessage(), e );
-            MavenProject project = projectBuilder.build(
-                file,
-                localRepository,
-                globalProfileManager );
+            MavenProject project = projectBuilder.build( file, localRepository, globalProfileManager );
+
+
-                        getLogger().warn(
-                            "Empty module detected. Please check you don't have any empty module definitions in your POM." );
+                        getLogger().warn( "Empty module detected. Please check you don't have any empty module definitions in your POM." );
-                        moduleFile = new File(
-                            basedir,
-                            name + "/" + Maven.RELEASE_POMv4 );
+                        moduleFile = new File( basedir, name + "/" + Maven.RELEASE_POMv4 );
-                        moduleFile = new File(
-                            basedir,
-                            name + "/" + Maven.POMv4 );
+                        moduleFile = new File( basedir, name + "/" + Maven.POMv4 );
-                            throw new MavenExecutionException(
-                                "Unable to canonicalize file name " + moduleFile,
-                                e );
+                            throw new MavenExecutionException( "Unable to canonicalize file name " + moduleFile, e );
-            String includes = System.getProperty(
-                "maven.reactor.includes",
-                "**/" + POMv4 + ",**/" + RELEASE_POMv4 );
-            String excludes = System.getProperty(
-                "maven.reactor.excludes",
-                POMv4 + "," + RELEASE_POMv4 );
+            String includes = System.getProperty( "maven.reactor.includes", "**/" + POMv4 + ",**/" + RELEASE_POMv4 );
-            files = FileUtils.getFiles(
-                userDir,
-                includes,
-                excludes );
+            String excludes = System.getProperty( "maven.reactor.excludes", POMv4 + "," + RELEASE_POMv4 );
+
+            files = FileUtils.getFiles( userDir, includes, excludes );
-            File projectFile = new File(
-                userDir,
-                RELEASE_POMv4 );
+            File projectFile = new File( userDir, RELEASE_POMv4 );
-                projectFile = new File(
-                    userDir,
-                    POMv4 );
+                projectFile = new File( userDir, POMv4 );
