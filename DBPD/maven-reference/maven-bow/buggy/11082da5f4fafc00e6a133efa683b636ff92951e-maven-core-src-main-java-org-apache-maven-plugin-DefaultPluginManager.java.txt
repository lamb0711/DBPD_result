Fixing bootstrap.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219807 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.resolver.filter.InversionArtifactFilter;
+import java.io.File;
+import java.net.URL;
+import java.util.HashMap;
-                // TODO: this is probably overkill as it is rarely used - can we use a mojo tag to signal this will be
-                // used or check its configuration? Also, when it is used, perhaps it is more effecient to resolve
-                // everything at once and apply the exclusion filter when constructing the plugin container above.
-                // Check this out with yourkit
-                ArtifactFilter distroProvidedFilter = new InversionArtifactFilter( artifactFilter );
+                List unresolved = new ArrayList( dependencies );
+                
+                unresolved.removeAll( resolved );
+                
+                resolveCoreArtifacts( unresolved );
-                ArtifactResolutionResult distroProvidedResult = artifactResolver
-                    .resolveTransitively( dependencies, pluginArtifact, localRepository, remoteRepositories,
-                                          metadataSource, distroProvidedFilter );
+                List allResolved = new ArrayList( resolved.size() + unresolved.size() );
+                
+                allResolved.addAll( resolved );
+                allResolved.addAll( unresolved );
-                Set distroProvided = distroProvidedResult.getArtifacts();
-
-                List unfilteredArtifactList = new ArrayList( resolved.size() + distroProvided.size() );
-
-                unfilteredArtifactList.addAll( resolved );
-                unfilteredArtifactList.addAll( distroProvided );
-
-                pluginDescriptor.setArtifacts( unfilteredArtifactList );
+                pluginDescriptor.setArtifacts( allResolved );
+    private Map resolvedCoreArtifactFiles = new HashMap();
+    
+    private void resolveCoreArtifacts( List unresolved )
+        throws PluginConfigurationException
+    {
+        for ( Iterator it = unresolved.iterator(); it.hasNext(); )
+        {
+            Artifact artifact = (Artifact) it.next();
+            
+            File artifactFile = (File) resolvedCoreArtifactFiles.get( artifact.getId() );
+            
+            if ( artifactFile == null )
+            {
+                String resource = "/META-INF/maven/" + artifact.getGroupId() + "/" + artifact.getArtifactId() + "/pom.xml";
+                
+                URL resourceUrl = container.getContainerRealm().getResource( resource );
+                
+                if ( resourceUrl == null )
+                {
+                    throw new PluginConfigurationException( "Cannot resolve core artifact: " + artifact.getId() );
+                }
+                
+                String artifactPath = resourceUrl.getPath();
+                
+                artifactPath = artifactPath.substring( 0, artifactPath.length() - resource.length() );
+                
+                artifactFile = new File( artifactPath );
+                
+                resolvedCoreArtifactFiles.put( artifact.getId(), artifactFile );
+            }
+            
+            artifact.setFile( artifactFile );
+        }
+    }
+
+        artifacts.add( "maven-plugin-mapping" );
+        artifacts.add( "maven-plugin-registry" );
