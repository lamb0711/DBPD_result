[MNG-3507] added color to Maven execution output messages
+import static org.apache.maven.shared.utils.logging.MessageUtils.buffer;
+import org.apache.maven.shared.utils.logging.MessageBuilder;
+    private void infoLine( char c )
+    {
+        infoMain( chars( c, LINE_LENGTH ) );
+    }
+
+    private void infoMain( String msg )
+    {
+        logger.info( buffer().strong( msg ).toString() );
+    }
+
-            logger.info( chars( '-', LINE_LENGTH ) );
+            infoLine( '-' );
-            logger.info( "Reactor Build Order:" );
+            infoMain( "Reactor Build Order:" );
-            logger.info( chars( '-', LINE_LENGTH ) );
+            infoLine( '-' );
-        logger.info( chars( '-', LINE_LENGTH ) );
+        infoLine( '-' );
-        logger.info( "Reactor Summary:" );
+        infoMain( "Reactor Summary:" );
-                buffer.append( "SKIPPED" );
+                buffer.append( buffer().warning( "SKIPPED" ) );
-                buffer.append( "SUCCESS [" );
+                buffer.append( buffer().success( "SUCCESS" ) );
+                buffer.append( " [" );
-                buffer.append( "FAILURE [" );
+                buffer.append( buffer().failure( "FAILURE" ) );
+                buffer.append( " [" );
-        logger.info( chars( '-', LINE_LENGTH ) );
+        infoLine( '-' );
+        MessageBuilder buffer = buffer();
-            logger.info( "BUILD FAILURE" );
+            buffer.failure( "BUILD FAILURE" );
-            logger.info( "BUILD SUCCESS" );
+            buffer.success( "BUILD SUCCESS" );
+        logger.info( buffer.toString() );
-        logger.info( chars( '-', LINE_LENGTH ) );
+        infoLine( '-' );
-            logger.info( chars( ' ', LINE_LENGTH ) );
-            logger.info( chars( '-', LINE_LENGTH ) );
+            logger.info( "" );
+            infoLine( '-' );
-            logger.info( "Skipping " + event.getProject().getName() );
+            infoMain( "Skipping " + event.getProject().getName() );
-            logger.info( chars( '-', LINE_LENGTH ) );
+            infoLine( '-' );
-            logger.info( chars( ' ', LINE_LENGTH ) );
-            logger.info( chars( '-', LINE_LENGTH ) );
+            logger.info( "" );
+            infoLine( '-' );
-            logger.info( "Building " + event.getProject().getName() + " " + event.getProject().getVersion() );
+            infoMain( "Building " + event.getProject().getName() + " " + event.getProject().getVersion() );
-            logger.info( chars( '-', LINE_LENGTH ) );
+            infoLine( '-' );
-            StringBuilder buffer = new StringBuilder( 128 );
+            logger.info( "" );
-            buffer.append( "--- " );
+            MessageBuilder buffer = buffer().strong( "--- " );
-            buffer.append( " ---" );
+            buffer.strong( " ---" );
-            logger.info( "" );
-            StringBuilder buffer = new StringBuilder( 128 );
+            logger.info( "" );
-            buffer.append( ">>> " );
+            MessageBuilder buffer = buffer().strong( ">>> " );
-            buffer.append( " > " );
+            buffer.strong( " > " );
-            buffer.append( " >>>" );
+            buffer.strong( " >>>" );
-            logger.info( "" );
-            StringBuilder buffer = new StringBuilder( 128 );
+            logger.info( "" );
-            buffer.append( "<<< " );
+            MessageBuilder buffer = buffer().strong( "<<< " );
-            buffer.append( " < " );
+            buffer.strong( " < " );
-            buffer.append( " <<<" );
+            buffer.strong( " <<<" );
-            logger.info( "" );
-    private void append( StringBuilder buffer, MojoExecution me )
+    private void append( MessageBuilder buffer, MojoExecution me )
-        buffer.append( me.getArtifactId() ).append( ':' ).append( me.getVersion() );
-        buffer.append( ':' ).append( me.getGoal() );
+        buffer.mojo( me.getArtifactId() + ':' + me.getVersion() + ':' + me.getGoal() );
-            buffer.append( " (" ).append( me.getExecutionId() ).append( ')' );
+            buffer.a( ' ' ).strong( '(' + me.getExecutionId() + ')' );
-    private void appendForkInfo( StringBuilder buffer, MojoDescriptor md )
+    private void appendForkInfo( MessageBuilder buffer, MojoDescriptor md )
+        StringBuilder buff = new StringBuilder();
-                buffer.append( '[' );
-                buffer.append( md.getExecuteLifecycle() );
-                buffer.append( ']' );
+                buff.append( '[' );
+                buff.append( md.getExecuteLifecycle() );
+                buff.append( ']' );
-            buffer.append( md.getExecutePhase() );
+            buff.append( md.getExecutePhase() );
-            buffer.append( ':' );
-            buffer.append( md.getExecuteGoal() );
+            buff.append( ':' );
+            buff.append( md.getExecuteGoal() );
+        buffer.strong( buff.toString() );
-    private void append( StringBuilder buffer, MavenProject project )
+    private void append( MessageBuilder buffer, MavenProject project )
-        buffer.append( " @ " ).append( project.getArtifactId() );
+        buffer.a( " @ " ).project( project.getArtifactId() );
-            logger.info( chars( ' ', LINE_LENGTH ) );
-            logger.info( chars( '>', LINE_LENGTH ) );
+            logger.info( "" );
+            infoLine( '>' );
-            logger.info( "Forking " + event.getProject().getName() + " " + event.getProject().getVersion() );
+            infoMain( "Forking " + event.getProject().getName() + " " + event.getProject().getVersion() );
-            logger.info( chars( '>', LINE_LENGTH ) );
+            infoLine( '>' );
-
