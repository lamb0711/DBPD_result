propogate more ArtifactResolutionExceptions directly

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@169557 13f79535-47bb-0310-9956-ffa450edef68

-                throw new ArtifactResolutionException( e.getMessage(), e );
+                throw new ArtifactResolutionException( e.getMessage(), artifact, remoteRepositories, e );
-                throw new ArtifactResolutionException( artifactNotFound( localPath, remoteRepositories ), artifact, e );
+                throw new ArtifactResolutionException( e.getMessage(), artifact, remoteRepositories, e );
-                throw new ArtifactResolutionException( e.getMessage(), artifact, e );
+                throw new ArtifactResolutionException( e.getMessage(), artifact, remoteRepositories, e );
-                throw new ArtifactResolutionException( "Error downloading artifact " + artifact, e );
+                throw new ArtifactResolutionException( e.getMessage(), artifact, remoteRepositories, e );
-    private static final String LS = System.getProperty( "line.separator" );
-
-    private String artifactNotFound( String path, List remoteRepositories )
-    {
-        StringBuffer sb = new StringBuffer();
-
-        sb.append( "The artifact is not present locally as:" );
-        sb.append( LS );
-        sb.append( LS );
-        sb.append( path );
-        sb.append( LS );
-        sb.append( LS );
-        sb.append( "or in any of the specified remote repositories:" );
-        sb.append( LS );
-        sb.append( LS );
-
-        for ( Iterator i = remoteRepositories.iterator(); i.hasNext(); )
-        {
-            ArtifactRepository remoteRepository = (ArtifactRepository) i.next();
-
-            sb.append( remoteRepository.getUrl() );
-            if ( i.hasNext() )
-            {
-                sb.append( ", " );
-            }
-        }
-
-        return sb.toString();
-    }
-
-        try
-        {
-            artifactResolutionResult = collect( artifacts, localRepository, remoteRepositories, source, filter );
-        }
-        catch ( TransitiveArtifactResolutionException e )
-        {
-            throw new ArtifactResolutionException( "Error transitively resolving artifacts: ", e );
-        }
+        artifactResolutionResult = collect( artifacts, localRepository, remoteRepositories, source, filter );
-        throws TransitiveArtifactResolutionException
+        throws ArtifactResolutionException
-                        throw new TransitiveArtifactResolutionException( "Error retrieving metadata [" + newArtifact +
-                                                                         "] : ", e );
+                        throw new TransitiveArtifactResolutionException( e.getMessage(), newArtifact,
+                                                                         remoteRepositories, e );
