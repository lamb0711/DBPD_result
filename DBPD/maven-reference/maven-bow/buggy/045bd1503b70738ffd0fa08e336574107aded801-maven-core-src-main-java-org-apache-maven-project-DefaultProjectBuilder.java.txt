MNG-2199: Version ranges not supported for parent artifacts
Fixes #21
Signed-off-by: Jason van Zyl <jason@tesla.io>

+import org.eclipse.aether.resolution.VersionRangeRequest;
+import org.eclipse.aether.resolution.VersionRangeResolutionException;
+import org.eclipse.aether.resolution.VersionRangeResult;
+        if ( request.isResolveVersionRanges() )
+        {
+            VersionRangeRequest versionRangeRequest = new VersionRangeRequest( pomArtifact, config.repositories, null );
+
+            try
+            {
+                VersionRangeResult versionRangeResult =
+                    repoSystem.resolveVersionRange( config.session, versionRangeRequest );
+
+                if ( versionRangeResult.getHighestVersion() == null )
+                {
+                    throw new ProjectBuildingException(
+                        artifact.getId(), "Error resolving project artifact: No versions matched the requested range",
+                        (Throwable) null );
+
+                }
+
+                if ( versionRangeResult.getVersionConstraint() != null
+                         && versionRangeResult.getVersionConstraint().getRange() != null
+                         && versionRangeResult.getVersionConstraint().getRange().getUpperBound() == null )
+                {
+                    throw new ProjectBuildingException(
+                        artifact.getId(),
+                        "Error resolving project artifact: The requested version range does not specify an upper bound",
+                        (Throwable) null );
+
+                }
+
+                pomArtifact = pomArtifact.setVersion( versionRangeResult.getHighestVersion().toString() );
+            }
+            catch ( VersionRangeResolutionException e )
+            {
+                throw new ProjectBuildingException(
+                    artifact.getId(), "Error resolving project artifact: " + e.getMessage(), e );
+
+            }
+        }
+
