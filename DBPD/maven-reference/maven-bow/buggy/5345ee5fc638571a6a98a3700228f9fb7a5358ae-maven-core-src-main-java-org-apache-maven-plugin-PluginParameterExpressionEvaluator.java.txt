Removed backward compat for plugin class-level parameter annotations and '#' expressions.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168070 13f79535-47bb-0310-9956-ffa450edef68

-        if ( expression.startsWith( "component" ) )
-        {
-            context.getLog().warn( "WARNING: plugin is using deprecated expression " + expression );
-
-            // TODO: deprecated... and can remove the lookup method in context afterwards
-            String role = expression.substring( 10 );
-
-            try
-            {
-                value = context.lookup( role );
-            }
-            catch ( ComponentLookupException e )
-            {
-                throw new ExpressionEvaluationException( "Cannot lookup component: " + role + ".", e );
-            }
-        }
-        else if (expression.equals( "reports" ) )
+        if (expression.equals( "reports" ) )
-        else if ( expression.equals( "maven.final.name" ) )
-        {
-            // TODO: remove this alias
-            value = context.getProject().getBuild().getFinalName();
-        }
-            int sharpSeparator = val.indexOf( "#" );
-            if ( sharpSeparator < 0 )
-            {
-                sharpSeparator = val.indexOf( "${" );
-            }
+            
+            int exprStartDelimiter = val.indexOf( "${" );
-            if ( sharpSeparator >= 0 )
+            if ( exprStartDelimiter >= 0 )
-                if ( sharpSeparator > 0 )
+                if ( exprStartDelimiter > 0 )
-                    value = val.substring( 0, sharpSeparator ) + evaluate( val.substring( sharpSeparator ) );
+                    value = val.substring( 0, exprStartDelimiter ) + evaluate( val.substring( exprStartDelimiter ) );
-                    value = evaluate( val.substring( sharpSeparator ) );
+                    value = evaluate( val.substring( exprStartDelimiter ) );
-        if ( expr.startsWith( "#" ) )
-        {
-            context.getLog().warn( "DEPRECATED: use ${} to delimit expressions instead of # for '" + expr + "'" );
-            expr = expr.substring( 1 );
-        }
-        else if ( expr.startsWith( "${" ) && expr.indexOf( "}" ) == expr.length() - 1 )
+        if ( expr.startsWith( "${" ) && expr.indexOf( "}" ) == expr.length() - 1 )
