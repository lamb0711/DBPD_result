merge change from alpha-1


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163866 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.Model;
+import org.apache.maven.model.io.xpp3.MavenXpp3Reader;
+import org.apache.maven.project.DefaultMavenProjectBuilder;
+import org.apache.maven.project.ProjectBuildingException;
+import org.apache.maven.MavenConstants;
+import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
+import java.io.InputStreamReader;
+import java.io.IOException;
+import java.net.URL;
-    implements LifecycleExecutor
+    implements LifecycleExecutor, Initializable
+    // TODO: remove
+    private Model superModel;
+
-
-                    Plugin plugin = new Plugin();
-
-                    plugin.setGroupId( additionalPluginGroupId );
-
-                    plugin.setArtifactId( additionalPluginArtifactId );
-
-                    processPluginPhases( plugin, session, phaseMap );
-        PluginManagement pluginManagement = project.getPluginManagement();
+        // TODO: this is a bit of a hack to get the version from plugin management - please fix
-        if ( pluginManagement != null )
+        Plugin plugin = findPlugin( project.getPlugins(), groupId, artifactId );
+
+        if ( plugin == null )
-            List pluginList = pluginManagement.getPlugins();
+            plugin = new Plugin();
+            plugin.setGroupId( groupId );
+            plugin.setArtifactId( artifactId );
+            project.addPlugin( plugin );
+        }
-            Plugin handlerPlugin = null;
-
-            for ( Iterator it = pluginList.iterator(); it.hasNext(); )
+        if ( plugin.getVersion() == null )
+        {
+            while ( project != null )
-                Plugin plugin = (Plugin) it.next();
+                PluginManagement pluginManagement = project.getPluginManagement();
-                if ( groupId.equals( plugin.getGroupId() ) && artifactId.equals( plugin.getArtifactId() ) )
+                if ( pluginManagement != null )
-                    handlerPlugin = plugin;
+                    Plugin management = findPlugin( pluginManagement.getPlugins(), groupId, artifactId );
+                    if ( management != null && management.getVersion() != null )
+                    {
+                        plugin.setVersion( management.getVersion() );
+                        break;
+                    }
+                }
+                project = project.getParent();
+            }
-                    break;
+            if ( plugin.getVersion() == null )
+            {
+                PluginManagement pluginManagement = superModel.getBuild().getPluginManagement();
+
+                if ( pluginManagement != null )
+                {
+                    Plugin management = findPlugin( pluginManagement.getPlugins(), groupId, artifactId );
+                    if ( management != null && management.getVersion() != null )
+                    {
+                        plugin.setVersion( management.getVersion() );
+                    }
-            if ( handlerPlugin != null )
+            if ( plugin.getVersion() == null )
-                project.addPlugin( handlerPlugin );
+                // TODO: this has probably supplanted the default in the plugin manager
+                plugin.setVersion( "1.0-SNAPSHOT" );
+    private static Plugin findPlugin( List plugins, String groupId, String artifactId )
+    {
+        Plugin plugin = null;
+
+        for ( Iterator i = plugins.iterator(); i.hasNext() && plugin == null; )
+        {
+            Plugin p = (Plugin) i.next();
+            if ( groupId.equals( p.getGroupId() ) && artifactId.equals( p.getArtifactId() ) )
+            {
+                plugin = p;
+            }
+        }
+        return plugin;
+    }
+
+            String groupId = AbstractPlugin.getDefaultPluginGroupId();
+
+            String pluginId = task;
+
+            if ( pluginId.indexOf( ":" ) > 0 )
+            {
+                pluginId = pluginId.substring( 0, pluginId.indexOf( ":" ) );
+            }
+
+            String artifactId = AbstractPlugin.getDefaultPluginArtifactId( pluginId );
+
+            injectHandlerPluginConfiguration( session.getProject(), groupId, artifactId );
+
+
+    public void initialize()
+        throws Exception
+    {
+        // TODO: get rid of this and the interface...
+        URL url = DefaultMavenProjectBuilder.class.getResource( "pom-" + MavenConstants.MAVEN_MODEL_VERSION + ".xml" );
+        superModel = new MavenXpp3Reader().read( new InputStreamReader( url.openStream() ) );
+    }
