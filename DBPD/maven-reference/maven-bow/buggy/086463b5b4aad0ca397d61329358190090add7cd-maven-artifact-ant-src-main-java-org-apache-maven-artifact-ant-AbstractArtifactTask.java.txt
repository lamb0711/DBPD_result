PR: MNG-456
allow separate snapshot and release repositories
deprecate existing snapshotPolicy and checksumPolicy in favour of updatePolicy and checksumPolicy within the <releases> and <snapshots> elements in the <repository> element.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@224707 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;
-import org.codehaus.classworlds.ClassRealm;
-            String snapshotPolicy = repository.getSnapshotPolicy();
-            String checksumPolicy = repository.getChecksumPolicy();
+            ArtifactRepositoryPolicy snapshots = buildArtifactRepositoryPolicy( repository.getSnapshots(),
+                                                                                repository.getSnapshotPolicy(),
+                                                                                repository.getChecksumPolicy() );
+            ArtifactRepositoryPolicy releases = buildArtifactRepositoryPolicy( repository.getReleases(),
+                                                                               repository.getSnapshotPolicy(),
+                                                                               repository.getChecksumPolicy() );
-                                                                             repositoryLayout, snapshotPolicy,
-                                                                             checksumPolicy );
+                                                                             repositoryLayout, snapshots, releases );
+    private static ArtifactRepositoryPolicy buildArtifactRepositoryPolicy(
+        RepositoryPolicy policy, String defaultUpdatePolicy, String defaultChecksumPolicy )
+    {
+        boolean enabled = true;
+        String updatePolicy = defaultUpdatePolicy;
+        String checksumPolicy = defaultChecksumPolicy;
+
+        if ( policy != null )
+        {
+            enabled = policy.isEnabled();
+            if ( policy.getUpdatePolicy() != null )
+            {
+                updatePolicy = policy.getUpdatePolicy();
+            }
+            if ( policy.getChecksumPolicy() != null )
+            {
+                checksumPolicy = policy.getChecksumPolicy();
+            }
+        }
+
+        return new ArtifactRepositoryPolicy( enabled, updatePolicy, checksumPolicy );
+    }
+
+        RemoteRepository r = createAntRemoteRepositoryBase( pomRepository );
+
+        r.setSnapshotPolicy( pomRepository.getSnapshotPolicy() );
+
+        if ( pomRepository.getSnapshots() != null )
+        {
+            r.setSnapshots( convertRepositoryPolicy( pomRepository.getSnapshots() ) );
+        }
+        if ( pomRepository.getReleases() != null )
+        {
+            r.setReleases( convertRepositoryPolicy( pomRepository.getReleases() ) );
+        }
+
+        return r;
+    }
+
+    protected RemoteRepository createAntRemoteRepositoryBase( org.apache.maven.model.RepositoryBase pomRepository )
+    {
-        // As is, this could potentially cause a problem with 2 remote repositories with different authentication info  
+        // As is, this could potentially cause a problem with 2 remote repositories with different authentication info
-        r.setSnapshotPolicy( pomRepository.getSnapshotPolicy() );
-
-        return factory.createBuildArtifact( pom.getGroupId(), pom.getArtifactId(), pom.getVersion(), pom.getPackaging() );
+        return factory.createBuildArtifact( pom.getGroupId(), pom.getArtifactId(), pom.getVersion(),
+                                            pom.getPackaging() );
+    }
+
+    private static RepositoryPolicy convertRepositoryPolicy( org.apache.maven.model.RepositoryPolicy pomRepoPolicy )
+    {
+        RepositoryPolicy policy = new RepositoryPolicy();
+        policy.setEnabled( pomRepoPolicy.isEnabled() );
+        policy.setUpdatePolicy( pomRepoPolicy.getUpdatePolicy() );
+        return policy;
