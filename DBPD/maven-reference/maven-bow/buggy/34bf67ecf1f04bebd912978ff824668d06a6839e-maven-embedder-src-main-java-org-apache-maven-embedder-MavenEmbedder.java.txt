Merging revIds: 515814:520600 from 2.1-lifecycle-refactor branch to trunk.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@520609 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.lifecycle.LifecycleExecutor;
+import org.apache.maven.lifecycle.LifecycleUtils;
-import org.codehaus.plexus.PlexusContainerException;
+import org.codehaus.plexus.PlexusContainerException;
-import org.codehaus.plexus.component.repository.ComponentDescriptor;
-import org.codehaus.plexus.configuration.PlexusConfiguration;
-import java.util.ArrayList;
-import java.util.Arrays;
-    // Lifecycle information
+    // LegacyLifecycle information
-        throws MavenEmbedderException
-        List phases = new ArrayList();
+        return getBuildLifecyclePhases();
+    }
+    
+    public List getAllLifecyclePhases()
+    {
+        return LifecycleUtils.getValidPhaseNames();
+    }
+    
+    public List getDefaultLifecyclePhases()
+    {
+        return getBuildLifecyclePhases();
+    }
+    
+    public List getBuildLifecyclePhases()
+    {
+        return LifecycleUtils.getValidBuildPhaseNames();
+    }
-        ComponentDescriptor descriptor = container.getComponentDescriptor( LifecycleExecutor.ROLE );
+    public List getCleanLifecyclePhases()
+    {
+        return LifecycleUtils.getValidCleanPhaseNames();
+    }
-        PlexusConfiguration configuration = descriptor.getConfiguration();
-
-        PlexusConfiguration[] phasesConfigurations =
-            configuration.getChild( "lifecycles" ).getChild( 0 ).getChild( "phases" ).getChildren( "phase" );
-
-        try
-        {
-            for ( int i = 0; i < phasesConfigurations.length; i++ )
-            {
-                phases.add( phasesConfigurations[i].getValue() );
-            }
-        }
-        catch ( PlexusConfigurationException e )
-        {
-            throw new MavenEmbedderException( "Cannot retrieve default lifecycle phasesConfigurations.", e );
-        }
-
-        return phases;
+    public List getSiteLifecyclePhases()
+    {
+        return LifecycleUtils.getValidSitePhaseNames();
-    //  Lifecycle
+    //  LegacyLifecycle
-    // Lifecycle
+    // LegacyLifecycle
