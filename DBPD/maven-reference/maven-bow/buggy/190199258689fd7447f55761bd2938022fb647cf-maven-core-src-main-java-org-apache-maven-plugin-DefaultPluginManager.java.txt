PR: MNG-122
exception clean up phase 2

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@320675 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.project.artifact.InvalidDependencyVersionException;
-import java.io.IOException;
-        throws PluginManagerException
-        throws ArtifactResolutionException, PluginManagerException, PluginVersionResolutionException,
-        ArtifactNotFoundException, InvalidVersionSpecificationException
+        throws ArtifactResolutionException, PluginVersionResolutionException, ArtifactNotFoundException,
+        InvalidVersionSpecificationException, InvalidPluginException, PluginManagerException
-        throws PluginVersionResolutionException, PluginManagerException, ArtifactNotFoundException,
-        ArtifactResolutionException, InvalidVersionSpecificationException
+        throws PluginVersionResolutionException, ArtifactNotFoundException, ArtifactResolutionException,
+        InvalidVersionSpecificationException, InvalidPluginException, PluginManagerException
-        throws PluginVersionResolutionException, PluginManagerException
+        throws PluginVersionResolutionException
-        catch ( IOException e )
-        {
-            throw new PluginManagerException( "Unable to determine Maven version for comparison", e );
-        }
-        throws ArtifactResolutionException, PluginManagerException, ArtifactNotFoundException
+        throws PluginManagerException, InvalidPluginException
-            throw new PluginManagerException( "Failed to create plugin container for plugin '" + plugin + "'", e );
+            throw new PluginManagerException(
+                "Failed to create plugin container for plugin '" + plugin + "': " + e.getMessage(), e );
-        catch ( ProjectBuildingException e )
+        catch ( InvalidDependencyVersionException e )
-            throw new PluginManagerException( "Error getting plugin dependencies", e );
+            throw new InvalidPluginException( "Plugin '" + plugin + "' is invalid: " + e.getMessage(), e );
-        throws ArtifactResolutionException, PluginManagerException, MojoExecutionException, MojoFailureException,
-        ArtifactNotFoundException
+        throws ArtifactResolutionException, MojoExecutionException, MojoFailureException, ArtifactNotFoundException,
+        InvalidDependencyVersionException, PluginManagerException
-                try
-                {
-                    resolveTransitiveDependencies( session, artifactResolver,
-                                                   mojoDescriptor.isDependencyResolutionRequired(), artifactFactory,
-                                                   p );
-                }
-                catch ( ProjectBuildingException e )
-                {
-                    throw new PluginManagerException( e.getMessage(), e );
-                }
+                resolveTransitiveDependencies( session, artifactResolver,
+                                               mojoDescriptor.isDependencyResolutionRequired(), artifactFactory, p );
-        catch ( ComponentLookupException e )
-        {
-            throw new MojoExecutionException( "Error looking up mojo: " + goalName, e );
-        }
-        throws PluginManagerException, ArtifactNotFoundException
+        throws ArtifactNotFoundException, PluginConfigurationException, PluginManagerException
-        MavenReport reportMojo;
-        try
-        {
-            reportMojo = (MavenReport) getConfiguredMojo( session, dom, project, true, mojoExecution );
-        }
-        catch ( ComponentLookupException e )
-        {
-            throw new PluginManagerException( "Error looking up report: ", e );
-        }
-        catch ( PluginConfigurationException e )
-        {
-            throw new PluginManagerException( "Error configuring report: ", e );
-        }
-        return reportMojo;
+        return (MavenReport) getConfiguredMojo( session, dom, project, true, mojoExecution );
-        throws PluginVersionResolutionException, ArtifactResolutionException, PluginManagerException,
-        ArtifactNotFoundException, InvalidVersionSpecificationException
+        throws PluginVersionResolutionException, ArtifactResolutionException, ArtifactNotFoundException,
+        InvalidVersionSpecificationException, InvalidPluginException, PluginManagerException
-            throw new PluginManagerException( "Cannot find PlexusContainer for plugin: " + pluginKey );
+            throw new PluginManagerException( "Cannot find Plexus container for plugin: " + pluginKey );
-        throws ComponentLookupException, PluginConfigurationException, PluginManagerException, ArtifactNotFoundException
+        throws PluginConfigurationException, ArtifactNotFoundException, PluginManagerException
-        Mojo plugin = (Mojo) pluginContainer.lookup( Mojo.ROLE, mojoDescriptor.getRoleHint() );
-        if ( report && !( plugin instanceof MavenReport ) )
+        Mojo plugin;
+        try
-            // TODO: the mojoDescriptor should actually capture this information so we don't get this far
-            return null;
+            plugin = (Mojo) pluginContainer.lookup( Mojo.ROLE, mojoDescriptor.getRoleHint() );
+            if ( report && !( plugin instanceof MavenReport ) )
+            {
+                // TODO: the mojoDescriptor should actually capture this information so we don't get this far
+                return null;
+            }
+        }
+        catch ( ComponentLookupException e )
+        {
+            throw new PluginManagerException( "Unable to find the mojo '" + mojoDescriptor.getRoleHint() +
+                "' in the plugin '" + pluginDescriptor.getPluginLookupKey() + "'", e );
-        throws ArtifactResolutionException, ArtifactNotFoundException, ProjectBuildingException
+        throws ArtifactResolutionException, ArtifactNotFoundException, InvalidDependencyVersionException
-        throws ComponentLookupException, PluginManagerException
+        throws PluginManagerException, ComponentLookupException
