use consistent ordering for reactored projects

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168569 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.settings.Mirror;
-import org.apache.maven.settings.Mirror;
-import org.codehaus.plexus.util.FileUtils;
-import org.codehaus.plexus.util.StringUtils;
-                String includes = StringUtils.join( project.getModules().iterator(), "/pom.xml," ) + "/pom.xml";
+                File basedir = file.getParentFile();
-                if ( includes.indexOf( ".." ) >= 0 )
+                // Initial ordering is as declared in the modules section
+                List moduleFiles = new ArrayList( project.getModules().size() );
+                for ( Iterator i = project.getModules().iterator(); i.hasNext(); )
-                    throw new ProjectBuildingException( "Modules may not include '..'" );
+                    String name = (String) i.next();
+                    if ( name.indexOf( '/' ) >= 0 )
+                    {
+                        String message = "Illegal module name: " + name + " (cannot contain path characters)";
+                        throw new ReactorException( message );
+                    }
+                    moduleFiles.add( new File( basedir, name + "/pom.xml" ) );
-                List moduleFiles = FileUtils.getFiles( project.getFile().getParentFile(), includes, null );
-                throw new ProjectBuildingException( i18n.format( "empty.descriptor.error", pom.getName() ) );
+                throw new ProjectBuildingException( i18n.format( "empty.descriptor.error", pom ) );
