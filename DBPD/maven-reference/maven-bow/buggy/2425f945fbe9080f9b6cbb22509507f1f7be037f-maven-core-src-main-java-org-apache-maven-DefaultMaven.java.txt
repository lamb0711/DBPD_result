o adding a validation method to the lifecycle executor so that I can tell users what is wrong before actually trying
  to execute the lifecycle. Trying to do this validation shows in detail how tangled some of our code is as I need
  to create the dispatcher in order to create the session which is required to make the reactorManager which 
  is required to get the project required to validate the goal name ... yah.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@572214 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.lifecycle.LifecycleUtils;
+import org.apache.maven.lifecycle.TaskValidationResult;
-        initializeBuildContext( request );
+        MavenExecutionResult result = new DefaultMavenExecutionResult();
+
+        ReactorManager reactorManager = createReactorManager(
+            request,
+            result );
+
+        if ( result.hasExceptions() )
+        {
+            return result;
+        }
-        MavenExecutionResult result = new DefaultMavenExecutionResult();
+        MavenSession session = createSession(
+            request,
+            reactorManager,
+            dispatcher );
+
+        for ( Iterator i = request.getGoals().iterator(); i.hasNext(); )
+        {
+            String goal = (String) i.next();
+
+            TaskValidationResult tvr = lifecycleExecutor.isTaskValid( goal, session, reactorManager.getTopLevelProject() );
+
+            if ( !tvr.isTaskValid() )
+            {
+                result.addException( new BuildFailureException( tvr.getMessage() ) );
+
+                return result;
+            }
+        }
-        ReactorManager reactorManager = createReactorManager(
-            request,
-            result );
-
-        // Check and make sure the creation of the reactor manager didn't cause a problem.
-
-        if ( result.hasExceptions() )
-        {
-            return result;
-        }
-
-        MavenSession session = createSession(
-            request,
-            reactorManager,
-            dispatcher );
+        initializeBuildContext( request );
