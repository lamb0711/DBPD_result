

git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@774079 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashMap;
+import org.apache.maven.plugin.descriptor.PluginDescriptor;
+    private MavenExecutionResult result;
+    
-    public MavenSession( PlexusContainer container, MavenExecutionRequest request, MavenProject project )
+    public MavenSession( PlexusContainer container, MavenExecutionRequest request, MavenExecutionResult result, MavenProject project )
-        this( container, request, Arrays.asList( new MavenProject[]{ project } ) );        
+        this( container, request, result, Arrays.asList( new MavenProject[]{ project } ) );        
-    public MavenSession( PlexusContainer container, MavenExecutionRequest request, List<MavenProject> projects )
+    public MavenSession( PlexusContainer container, MavenExecutionRequest request, MavenExecutionResult result, List<MavenProject> projects )
+        this.result = result;
+
+    public MavenExecutionResult getResult()
+    {
+        return result;
+    }        
+    
+    // Backward compat
+    public Map<String,Map<String,Object>> getPluginContext( PluginDescriptor pluginDescriptor, MavenProject project )
+    {
+        return new HashMap<String,Map<String,Object>>();
+    }    
+
+    /*
+    private Map pluginContextsByProjectAndPluginKey = new HashMap();
+    
+    public Map getPluginContext( PluginDescriptor plugin, MavenProject project )
+    {
+        Map pluginContextsByKey = (Map) pluginContextsByProjectAndPluginKey.get( project.getId() );
+
+        if ( pluginContextsByKey == null )
+        {
+            pluginContextsByKey = new HashMap();
+
+            pluginContextsByProjectAndPluginKey.put( project.getId(), pluginContextsByKey );
+        }
+
+        Map pluginContext = (Map) pluginContextsByKey.get( plugin.getPluginLookupKey() );
+
+        if ( pluginContext == null )
+        {
+            pluginContext = new HashMap();
+            pluginContextsByKey.put( plugin.getPluginLookupKey(), pluginContext );
+        }
+
+        return pluginContext;
+    }
+    */
+    
