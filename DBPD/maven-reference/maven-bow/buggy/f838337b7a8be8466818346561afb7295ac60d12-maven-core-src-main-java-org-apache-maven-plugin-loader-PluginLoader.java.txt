Refactor the artifact-scanning logic from the realm manager and the plugin-artifact resolution logic in the plugin manager into two separate classes, one a component and one a static class, to allow the new PluginPrefixLoader to reuse some of both and create a lighter-weight approach to grabbing the PluginDescriptor for build-planning purposes...also avoids some needless error messages during build planning.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@617293 13f79535-47bb-0310-9956-ffa450edef68

-    /**
-     * Determine the appropriate {@link PluginDescriptor} instance for use with the specified plugin
-     * prefix, using the following strategies (in order):
-     * <br/>
-     * <ol>
-     *   <li>Search for a plugin that has already been loaded with the specified prefix</li>
-     *   <li>Search for a plugin configured in the POM that has a matching prefix</li>
-     *   <li>Search the pluginGroups specified in the settings.xml for a matching plugin</li>
-     *   <li>Use groupId == org.apache.maven.plugins, and artifactId == maven-&lt;prefix&gt;-plugin,
-     *         and try to resolve based on that.</li>
-     * </ol>
-     */
-    PluginDescriptor findPluginForPrefix( String prefix, MavenProject project, MavenSession session )
-        throws PluginLoaderException;
-
