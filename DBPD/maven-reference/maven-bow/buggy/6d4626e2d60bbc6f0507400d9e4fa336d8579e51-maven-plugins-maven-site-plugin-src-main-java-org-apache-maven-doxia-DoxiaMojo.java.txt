o Fix copy of resources directory for exclude all "default" files
o Fix xhtml for conformance with standard

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@179320 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.util.DirectoryScanner;
+import java.util.Arrays;
+    private static final String[] DEFAULT_EXCLUDES = {// Miscellaneous typical temporary files
+    "**/*~", "**/#*#", "**/.#*", "**/%*%", "**/._*",
+
+    // CVS
+        "**/CVS", "**/CVS/**", "**/.cvsignore",
+
+        // SCCS
+        "**/SCCS", "**/SCCS/**",
+
+        // Visual SourceSafe
+        "**/vssver.scc",
+
+        // Subversion
+        "**/.svn", "**/.svn/**",
+
+        // Mac
+        "**/.DS_Store" };
+
-        siteRenderer.setTemplateClassLoader( DoxiaMojo.class.getClassLoader() );        
-        
+        siteRenderer.setTemplateClassLoader( DoxiaMojo.class.getClassLoader() );
+
-                FileUtils.copyDirectory( cssDirectory, new File( outputDirectory, "css" ) );
+                copyDirectory( cssDirectory, new File( outputDirectory, "css" ) );
-                FileUtils.copyDirectory( imagesDirectory, new File( outputDirectory, "images" ) );
+                copyDirectory( imagesDirectory, new File( outputDirectory, "images" ) );
-                FileUtils.copyDirectory( resourcesDirectory, new File( outputDirectory ) );
+                copyDirectory( resourcesDirectory, new File( outputDirectory ) );
-            
+
-                    throw new IOException( "The resource " + line + " doesn't exists in " + DEFAULT_TEMPLATE + " template." );
+                    throw new IOException( "The resource " + line + " doesn't exists in " + DEFAULT_TEMPLATE
+                                           + " template." );
+
+    private void copyDirectory( File source, File destination )
+        throws IOException
+    {
+        DirectoryScanner scanner = new DirectoryScanner();
+
+        String[] includedResources = { "**/**" };
+
+        scanner.setIncludes( includedResources );
+
+        scanner.addDefaultExcludes();
+
+        scanner.setBasedir( source );
+
+        scanner.scan();
+
+        List includedFiles = Arrays.asList( scanner.getIncludedFiles() );
+
+        for ( Iterator j = includedFiles.iterator(); j.hasNext(); )
+        {
+            String name = (String) j.next();
+
+            File sourceFile = new File( source, name );
+
+            File destinationFile = new File( destination, name );
+
+            FileUtils.copyFile( sourceFile, destinationFile );
+        }
+    }
