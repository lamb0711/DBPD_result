o Fixed critical performance regression introduced in r801648. The relocation is now grabbed alongside the direct dependencies when we get the resolution group, these bits are stored in the same file and so we can as well process them in one go.
Issue id: o


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@802251 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.ArtifactUtils;
+        Artifact relocatedArtifact = null;
+
+                relocatedArtifact = rel.relocatedArtifact;
+
-        ResolutionGroup result = new ResolutionGroup( pomArtifact, artifacts, managedVersions, remoteRepositories );
+        ResolutionGroup result =
+            new ResolutionGroup( pomArtifact, relocatedArtifact, artifacts, managedVersions, remoteRepositories );
-    public Artifact retrieveRelocatedArtifact( Artifact artifact, ArtifactRepository localRepository,
-                                               List<ArtifactRepository> remoteRepositories )
-        throws ArtifactMetadataRetrievalException
-    {
-
-        ProjectRelocation rel = retrieveRelocatedProject( artifact, localRepository, remoteRepositories );
-
-        if ( rel == null )
-        {
-            return artifact;
-        }
-
-        MavenProject project = rel.project;
-        if ( project == null || getRelocationKey( artifact ).equals( getRelocationKey( project.getArtifact() ) ) )
-        {
-            return artifact;
-        }
-
-        // NOTE: Using artifact information here, since some POMs are deployed
-        // to central with one version in the filename, but another in the <version> string!
-        // Case in point: org.apache.ws.commons:XmlSchema:1.1:pom.
-        //
-        // Since relocation triggers a reconfiguration of the artifact's information
-        // in retrieveRelocatedProject(..), this is safe to do.
-        Artifact result = null;
-        if ( artifact.getClassifier() != null )
-        {
-            result =
-                repositorySystem.createArtifactWithClassifier( artifact.getGroupId(), artifact.getArtifactId(),
-                                                               artifact.getVersion(), artifact.getType(),
-                                                               artifact.getClassifier() );
-        }
-        else
-        {
-            result =
-                repositorySystem.createArtifact( artifact.getGroupId(), artifact.getArtifactId(),
-                                                 artifact.getVersion(), artifact.getScope(), artifact.getType() );
-        }
-
-        result.setResolved( artifact.isResolved() );
-        result.setFile( artifact.getFile() );
-
-        result.setScope( artifact.getScope() );
-        result.setArtifactHandler( artifact.getArtifactHandler() );
-        result.setDependencyFilter( artifact.getDependencyFilter() );
-        result.setDependencyTrail( artifact.getDependencyTrail() );
-        result.setOptional( artifact.isOptional() );
-        result.setRelease( artifact.isRelease() );
-
-        return result;
-    }
-
-    private String getRelocationKey( Artifact artifact )
-    {
-        return artifact.getGroupId() + ':' + artifact.getArtifactId() + ':' + artifact.getVersion();
-    }
-
+        Artifact relocatedArtifact = artifact;
-            // TODO: can we just modify the original?
-                repositorySystem.createProjectArtifact( artifact.getGroupId(), artifact.getArtifactId(),
-                                                        artifact.getVersion(), artifact.getScope() );
+                repositorySystem.createProjectArtifact( relocatedArtifact.getGroupId(),
+                                                        relocatedArtifact.getArtifactId(),
+                                                        relocatedArtifact.getVersion(), relocatedArtifact.getScope() );
-            if ( "pom".equals( artifact.getType() ) )
+            if ( "pom".equals( relocatedArtifact.getType() ) )
-                pomArtifact.setFile( artifact.getFile() );
+                pomArtifact.setFile( relocatedArtifact.getFile() );
-            if ( Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ) )
+            if ( Artifact.SCOPE_SYSTEM.equals( relocatedArtifact.getScope() ) )
-
-                        artifact.setDownloadUrl( distMgmt.getDownloadUrl() );
+                        relocatedArtifact.setDownloadUrl( distMgmt.getDownloadUrl() );
+                        if ( relocatedArtifact == artifact )
+                        {
+                            relocatedArtifact = ArtifactUtils.copyArtifact( artifact );
+                        }
+
-                            artifact.setGroupId( relocation.getGroupId() );
+                            relocatedArtifact.setGroupId( relocation.getGroupId() );
-                            artifact.setArtifactId( relocation.getArtifactId() );
+                            relocatedArtifact.setArtifactId( relocation.getArtifactId() );
-                            artifact.setVersionRange( VersionRange.createFromVersion( relocation.getVersion() ) );
+                            relocatedArtifact.setVersionRange( VersionRange.createFromVersion( relocation.getVersion() ) );
-                            && !artifact.getDependencyFilter().include( artifact ) )
+                            && !artifact.getDependencyFilter().include( relocatedArtifact ) )
-                            artifact.setAvailableVersions( retrieveAvailableVersions( artifact, localRepository,
-                                                                                      remoteRepositories ) );
-
+                            available =
+                                retrieveAvailableVersions( relocatedArtifact, localRepository, remoteRepositories );
+                            relocatedArtifact.setAvailableVersions( available );
-                            "\n  This artifact has been relocated to " + artifact.getGroupId() + ":"
-                                + artifact.getArtifactId() + ":" + artifact.getVersion() + ".\n";
+                            "\n  This artifact has been relocated to " + relocatedArtifact.getGroupId() + ":"
+                                + relocatedArtifact.getArtifactId() + ":" + relocatedArtifact.getVersion() + ".\n";
+        rel.relocatedArtifact = ( relocatedArtifact == artifact ) ? null : relocatedArtifact;
+
+        private Artifact relocatedArtifact;
