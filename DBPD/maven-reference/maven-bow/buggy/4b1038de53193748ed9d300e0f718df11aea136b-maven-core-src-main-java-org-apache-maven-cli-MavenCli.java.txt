Working on: MNG-607

o Added '-f' CLI option, to allow use of non-standard pom files, or spawning of a build from outside of the project dir.
o Added preferential processing of release-pom.xml over pom.xml if it exists (assumes that the current checkout is a release of the software)
o Moved all file discovery from MavenCli to DefaultMaven, to allow embedders to have access to this logic.
o Modified MavenExecutionRequest to add a flag for reactor-activation and the name of a non-standard pom to use, if appropriate.
o Removed getFiles() and getProjectFiles() from MavenExecutionRequest, since file discovery is now done in the DefaultMaven.
o Added integration tests to check preference of release-pom.xml in standalone and '-r' mode
o Added integration tests to check usage of '-f' option within and outside of the project directory
o Added processing for cli-options.txt to maven-core-it-verifier (Verifier.java) to allow specification of '-f' and '-r' in tests


NOTE: the release plugin still doesn't correctly remove the release-pom.xml from HEAD/trunk, since I don't have access to the SCM remove command from maven-scm. I'm waiting for Emmanuel to finish some API changes before moving to the new maven-scm version, and implementing this final step.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@225226 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.repository.DefaultArtifactRepository;
+import org.apache.maven.artifact.repository.DefaultArtifactRepository;
-import org.codehaus.plexus.util.FileUtils;
-import java.util.Collections;
-import java.util.List;
-    public static final String POMv4 = "pom.xml";
-
-        List projectFiles = null;
-        try
-        {
-            projectFiles = getProjectFiles( commandLine );
-        }
-        catch ( IOException e )
-        {
-            showFatalError( "Error locating project files for reactor execution", e, showErrors );
-            return 1;
-        }
-
-            request = createRequest( projectFiles, embedder, commandLine, settings, eventDispatcher, manager );
+            request = createRequest( embedder, commandLine, settings, eventDispatcher, manager );
+            
+            setProjectFileOptions( commandLine, request );
-    private static MavenExecutionRequest createRequest( List files, Embedder embedder, CommandLine commandLine,
+    private static MavenExecutionRequest createRequest( Embedder embedder, CommandLine commandLine,
-                                                    commandLine.getArgList(), files, userDir.getPath() );
+                                                    commandLine.getArgList(), userDir.getPath() );
-    private static List getProjectFiles( CommandLine commandLine )
-        throws IOException
+    private static void setProjectFileOptions( CommandLine commandLine, MavenExecutionRequest request )
-        List files = Collections.EMPTY_LIST;
-            // TODO: should we now include the pom.xml in the current directory?
-            String includes = System.getProperty( "maven.reactor.includes", "**/" + POMv4 );
-
-            String excludes = System.getProperty( "maven.reactor.excludes", POMv4 );
-
-            files = FileUtils.getFiles( userDir, includes, excludes );
-
-            // make sure there is consistent ordering on all platforms, rather than using the filesystem ordering
-            Collections.sort( files );
+            request.setReactorActive( true );
-        else
+        else if ( commandLine.hasOption( CLIManager.ALTERNATE_POM_FILE ) )
-            File projectFile = new File( userDir, POMv4 );
-
-            if ( projectFile.exists() )
-            {
-                files = Collections.singletonList( projectFile );
-            }
+            request.setPomFile( commandLine.getOptionValue( CLIManager.ALTERNATE_POM_FILE ) );
-        return files;
+        public static final char ALTERNATE_POM_FILE = 'f';
+        
+            
+            options.addOption( OptionBuilder.withLongOpt( "file").hasArg().withDescription( "Force the use of an alternate POM file." ).create( ALTERNATE_POM_FILE ) );
+            
