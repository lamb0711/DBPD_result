o Splitted plugin manager: One general component for any kind of Maven plugin, one specifically tailored for execution of build plugins. The generic plugin manager is meant to be reused by the new Site Plugin, the other plugin manager is private to the core.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@805826 13f79535-47bb-0310-9956-ffa450edef68

-    private ClassRealm createRealm( String baseRealmId )
+    /**
+     * Creates a new class realm with the specified parent and imports.
+     * 
+     * @param baseRealmId The base id to use for the new realm, must not be {@code null}.
+     * @param parent The parent realm for the new realm, may be {@code null} to use the Maven core realm.
+     * @param imports The packages/types to import from the parent realm, may be {@code null}.
+     * @return The created class realm, never {@code null}.
+     */
+    private ClassRealm createRealm( String baseRealmId, ClassLoader parent, List<String> imports )
-            classRealm.setParentRealm( container.getContainerRealm() );
+            if ( parent != null )
+            {
+                classRealm.setParentClassLoader( parent );
+            }
+            else
+            {
+                classRealm.setParentRealm( container.getContainerRealm() );
+                importMavenApi( classRealm );
+            }
-            importMavenApi( classRealm );
+            if ( imports != null && !imports.isEmpty() )
+            {
+                ClassLoader importedRealm = classRealm.getParentClassLoader();
+
+                for ( String imp : imports )
+                {
+                    classRealm.importFrom( importedRealm, imp );
+                }
+            }
-        return createRealm( getKey( model ) );
+        return createRealm( getKey( model ), null, null );
-        return createRealm( getKey( plugin ) );
+        return createRealm( getKey( plugin ), null, null );
+    }
+
+    public ClassRealm createPluginRealm( Plugin plugin, ClassLoader parent, List<String> imports )
+    {
+        if ( plugin == null )
+        {
+            throw new IllegalArgumentException( "plugin missing" );
+        }
+
+        return createRealm( getKey( plugin ), parent, imports );
