o Fixed tracking of extension realms in cache

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@819596 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.resolver.filter.ArtifactFilter;
-import org.codehaus.plexus.classworlds.realm.ClassRealm;
+    private MavenProject project;
+
-    private ClassRealm projectRealm;
-
-    private ArtifactFilter extensionArtifactFilter;
-
-    public DefaultModelBuildingListener( ProjectBuildingHelper projectBuildingHelper,
+    public DefaultModelBuildingListener( MavenProject project, ProjectBuildingHelper projectBuildingHelper,
+        if ( project == null )
+        {
+            throw new IllegalArgumentException( "project missing" );
+        }
+        this.project = project;
+
-            throw new IllegalArgumentException( "project realm manager missing" );
+            throw new IllegalArgumentException( "project building helper missing" );
-     * Gets the project realm that hosts the build extensions.
+     * Gets the project whose model is being built.
-     * @return The project realm or {@code null} if the project requires no extensions.
+     * @return The project, never {@code null}.
-    public ClassRealm getProjectRealm()
+    public MavenProject getProject()
-        return projectRealm;
-    }
-
-    /**
-     * Gets the artifact filter to exclude extension artifacts from plugin realms.
-     * 
-     * @return The extension artifact filter or {@code null} if none.
-     */
-    public ArtifactFilter getExtentionArtifactFilter()
-    {
-        return extensionArtifactFilter;
-    }
-
-    /**
-     * Gets the effective remote artifact repositories for the project. The repository list is created from the
-     * repositories given by {@link ProjectBuildingRequest#getRemoteRepositories()} and the repositories given in the
-     * POM, i.e. {@link Model#getRepositories()}. The POM repositories themselves also contain any repositories
-     * contributed by external profiles as specified in {@link ProjectBuildingRequest#getProfiles()}. Furthermore, the
-     * repositories have already been mirrored.
-     * 
-     * @return The remote artifact repositories for the project.
-     */
-    public List<ArtifactRepository> getRemoteRepositories()
-    {
-        return remoteRepositories;
-    }
-
-    /**
-     * Gets the effective remote plugin repositories for the project. The repository list is created from the
-     * repositories given by {@link ProjectBuildingRequest#getPluginArtifactRepositories()} and the repositories given
-     * in the POM, i.e. {@link Model#getPluginRepositories()}. The POM repositories themselves also contain any
-     * repositories contributed by external profiles as specified in {@link ProjectBuildingRequest#getProfiles()}.
-     * Furthermore, the repositories have already been mirrored.
-     * 
-     * @return The remote plugin repositories for the project.
-     */
-    public List<ArtifactRepository> getPluginRepositories()
-    {
-        return pluginRepositories;
+        return project;
+        project.setPluginArtifactRepositories( pluginRepositories );
-                    projectBuildingHelper.createProjectRealm( model, repositoryRequest );
+                    projectBuildingHelper.createProjectRealm( project, model, repositoryRequest );
-                projectRealm = record.realm;
-                extensionArtifactFilter = record.extensionArtifactFilter;
+                project.setClassRealm( record.realm );
+                project.setExtensionArtifactFilter( record.extensionArtifactFilter );
-            if ( projectRealm != null )
+            if ( project.getClassRealm() != null )
-                Thread.currentThread().setContextClassLoader( projectRealm );
+                Thread.currentThread().setContextClassLoader( project.getClassRealm() );
+        project.setRemoteArtifactRepositories( remoteRepositories );
