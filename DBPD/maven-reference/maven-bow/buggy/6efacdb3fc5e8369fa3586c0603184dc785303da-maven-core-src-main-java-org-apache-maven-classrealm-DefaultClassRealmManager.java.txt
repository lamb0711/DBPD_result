MNG-5771 user-defined core extensions

read ${maven.projectBasedir}/.mvn/extensions.xml and create core
extensions realms during maven runtime bootstrap. this required
short-lived bootstrap plexus container to resolve extensions.

individual extensions realms are wired to maven.ext realm according
to META-INF/maven/extension.xml exported packages specification

Signed-off-by: Igor Fedorenko <ifedorenko@apache.org>

-import java.util.HashMap;
-import org.apache.maven.extension.internal.DefaultCoreExports;
+import org.apache.maven.extension.internal.CoreExportsProvider;
-import com.google.common.collect.ImmutableMap;
-
+    public static final String API_REALMID = "maven.api";
-    private final Map<String, ClassLoader> coreImports;
-
-    private ClassRealm mavenRealm;
+    private final ClassRealm mavenApiRealm;
-                                     List<ClassRealmManagerDelegate> delegates, DefaultCoreExports coreExtensions )
+                                     List<ClassRealmManagerDelegate> delegates, CoreExportsProvider exports )
-        Map<String, ClassLoader> coreImports = new HashMap<String, ClassLoader>();
-        for ( String corePackage : coreExtensions.getExportedPackages() )
-        {
-            coreImports.put( corePackage, containerRealm );
-        }
-        this.coreImports = ImmutableMap.copyOf( coreImports );
+        Map<String, ClassLoader> foreignImports = exports.get().getExportedPackages();
+
+        this.mavenApiRealm =
+            createRealm( API_REALMID, RealmType.Core, null /* parent */, null /* parentImports */, 
+                         foreignImports, null /* artifacts */ );
-    public synchronized ClassRealm getMavenApiRealm()
+    public ClassRealm getMavenApiRealm()
-        if ( mavenRealm == null )
-        {
-            mavenRealm = newRealm( "maven.api" );
-
-            List<ClassRealmConstituent> constituents = new ArrayList<ClassRealmConstituent>();
-
-            List<String> parentImports = new ArrayList<String>();
-
-            Map<String, ClassLoader> foreignImports = new HashMap<String, ClassLoader>( coreImports );
-
-            callDelegates( mavenRealm, RealmType.Core, mavenRealm.getParentClassLoader(), parentImports,
-                           foreignImports, constituents );
-
-            wireRealm( mavenRealm, parentImports, foreignImports );
-
-            populateRealm( mavenRealm, constituents );
-        }
-
-        return mavenRealm;
+        return mavenApiRealm;
