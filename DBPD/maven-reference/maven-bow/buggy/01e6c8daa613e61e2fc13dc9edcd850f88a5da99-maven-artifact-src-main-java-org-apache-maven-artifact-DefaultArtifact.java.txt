PR: MNG-257

refactor artifact creation to all go through the factory, and assign the type handler from there.
Attach EJB client to the EJB artifact so that it is installed/deployed along with it.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191096 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.metadata.ArtifactMetadataRetrievalException;
-import org.apache.maven.artifact.repository.layout.ArtifactPathFormatException;
+import org.apache.maven.artifact.handler.ArtifactHandler;
-    /**
-     * !!! WARNING !!! Never put <classifier/> in the POM. It is for mojo use
-     * only. Classifier is for specifying derived artifacts, like ejb-client.
-     */
+    private final ArtifactHandler artifactHandler;
+
+    // TODO: direct all through the artifact factory
-                            String classifier )
+                            String classifier,
+                            ArtifactHandler artifactHandler )
-        this.type = type;
+        this.artifactHandler = artifactHandler;
+        this.type = type;
+
-        
+
-    public DefaultArtifact( String groupId, String artifactId, String version, String scope, String type )
-    {
-        this( groupId, artifactId, version, scope, type, null );
-    }
-
-    public DefaultArtifact( String groupId, String artifactId, String version, String type )
-    {
-        this( groupId, artifactId, version, null, type, null );
-    }
-
-        return getConflictId() + ( hasClassifier() ? ( ":" + getClassifier() ) : "" ) + ":" + getBaseVersion();
+        return getDependencyConflictId() + ( hasClassifier() ? ( ":" + getClassifier() ) : "" ) + ":" + getBaseVersion();
-    public String getConflictId()
+    public String getDependencyConflictId()
-        throws ArtifactMetadataRetrievalException
-        try
-        {
-            setFile( new File( localRepository.getBasedir(), localRepository.pathOf( this ) ) );
-        }
-        catch ( ArtifactPathFormatException e )
-        {
-            throw new ArtifactMetadataRetrievalException( "Error reading local metadata", e );
-        }
+        setFile( new File( localRepository.getBasedir(), localRepository.pathOf( this ) ) );
+
+    public ArtifactHandler getArtifactHandler()
+    {
+        return artifactHandler;
+    }
