Removed backward compat for plugin class-level parameter annotations and '#' expressions.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168070 13f79535-47bb-0310-9956-ffa450edef68

-import org.codehaus.plexus.logging.Logger;
-        // for backward compat, we'll toss on the params declared at the class level.
-        DocletTag[] classLevelParams = javaClass.getTagsByName( PARAMETER );
-        if ( classLevelParams != null )
-        {
-            for ( int i = 0; i < classLevelParams.length; i++ )
-            {
-                DocletTag tag = classLevelParams[i];
-
-                String message = "DEPRECATED: Use field-level annotations "
-                    + "for parameters instead of class-level annotations. (parameter \'"
-                    + tag.getNamedParameter( "name" ) + "\'; class \'" + javaClass.getFullyQualifiedName() + ")";
-
-                Logger logger = getLogger();
-                if ( logger != null )
-                {
-                    logger.warn( message );
-                }
-                else
-                {
-                    // we're being used from pluggy, so this is okay...
-                    System.err.println( message );
-                }
-
-                rawParams.put( tag.getNamedParameter( "name" ), tag );
-            }
-        }
-
-            Object val = entry.getValue();
+            JavaField field = (JavaField) entry.getValue();
-            JavaField field = null;
-            DocletTag parameter = null;
-
-            // FIXME: ICK! This is only here for backward compatibility to the class-level annotations of params.
-            if ( val instanceof JavaField )
-            {
-                field = (JavaField) val;
-
-                parameter = field.getTagByName( PARAMETER );
-            }
-            else
-            {
-                parameter = (DocletTag) val;
-            }
+            DocletTag parameter = field.getTagByName( PARAMETER );
-            // if the field is null, then we're using a deprecated annotation pattern...
-            // TODO: remove when backward compatibility is no longer an issue.
-            if ( field == null )
+            pd.setName( paramName );
+
+            pd.setType( field.getType().getValue() );
+
+            pd.setDescription( field.getComment() );
+
+            pd.setRequired( field.getTagByName( REQUIRED ) != null );
+
+            pd.setEditable( field.getTagByName( READONLY ) == null );
+
+            DocletTag deprecationTag = field.getTagByName( DEPRECATED );
+            if ( deprecationTag != null )
-                pd.setName( paramName );
-
-                pd.setType( parameter.getNamedParameter( "type" ) );
-
-                pd.setDescription( parameter.getNamedParameter( "description" ) );
-
-                pd.setRequired( parameter.getNamedParameter( REQUIRED ).equals( "true" ) ? true : false );
-
-                pd.setDeprecated( parameter.getNamedParameter( DEPRECATED ) );
-
-                pd.setDefaultValue( parameter.getNamedParameter( "default" ) );
-            }
-            else
-            {
-                pd.setName( paramName );
-
-                pd.setType( field.getType().getValue() );
-
-                pd.setDescription( field.getComment() );
-
-                pd.setRequired( field.getTagByName( REQUIRED ) != null );
-
-                pd.setEditable( field.getTagByName( READONLY ) == null );
-
-                DocletTag deprecationTag = field.getTagByName( DEPRECATED );
-                if ( deprecationTag != null )
-                {
-                    pd.setDeprecated( deprecationTag.getValue() );
-                }
+                pd.setDeprecated( deprecationTag.getValue() );
