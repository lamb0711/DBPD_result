snapshot resolution working, with glitches. committing working copy that is only enabled by a sys property until other features are in place.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163705 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.repository.layout.ArtifactPathFormatException;
+import java.io.IOException;
-        if ( isSnapshot( artifact ) )
+        // TODO: remove hack
+        if ( isSnapshot( artifact ) &&
+            !Boolean.valueOf( System.getProperty( "maven.debug.snapshot.disabled", "true" ) ).booleanValue() )
-
-/*
-                localMetadata = SnapshotArtifactMetadata.readLocalSnapshotMetadata( artifact, localRepository );
+                localMetadata = SnapshotArtifactMetadata.readFromLocalRepository( artifact, localRepository );
-                    SnapshotArtifactMetadata remoteMetadata = SnapshotArtifactMetadata.createRemoteSnapshotMetadata(
-                        artifact );
-                    remoteMetadata.retrieveFromRemoteRepository( remoteRepository, wagonManager );
+                    SnapshotArtifactMetadata remoteMetadata = SnapshotArtifactMetadata.retrieveFromRemoteRepository(
+                        artifact, remoteRepository, wagonManager );
-*/
-        return artifact.getConflictId();
+        // No type - one per POM
+        return artifact.getGroupId() + ":" + artifact.getArtifactId();
+        // Nothing to do
+/* TODO: remove
+*/
-            SnapshotArtifactMetadata metadata = SnapshotArtifactMetadata.createRemoteSnapshotMetadata( artifact );
-            metadata.retrieveFromRemoteRepository( remoteRepository, wagonManager );
+            SnapshotArtifactMetadata metadata = SnapshotArtifactMetadata.retrieveFromRemoteRepository( artifact,
+                                                                                                       remoteRepository,
+                                                                                                       wagonManager );
-        ArtifactRepository oldRepository = artifact.getRepository();
-        List list = artifact.getMetadataList();
+        Artifact newArtifact = new DefaultArtifact( artifact.getGroupId(), artifact.getArtifactId(),
+                                                    metadata.constructVersion(), artifact.getScope(),
+                                                    artifact.getType(), artifact.getClassifier() );
+        newArtifact.setBaseVersion( artifact.getBaseVersion() );
-        artifact = new DefaultArtifact( artifact.getGroupId(), artifact.getArtifactId(), metadata.getVersion(),
-                                        artifact.getScope(), artifact.getType(), artifact.getClassifier() );
-
-        for ( Iterator i = list.iterator(); i.hasNext(); )
+        for ( Iterator i = artifact.getMetadataList().iterator(); i.hasNext(); )
-            m.setArtifact( artifact );
-            artifact.addMetadata( m );
+            m.setArtifact( newArtifact );
+            newArtifact.addMetadata( m );
-        artifact.setRepository( oldRepository );
+        newArtifact.setRepository( artifact.getRepository() );
-        return artifact;
+        return newArtifact;
