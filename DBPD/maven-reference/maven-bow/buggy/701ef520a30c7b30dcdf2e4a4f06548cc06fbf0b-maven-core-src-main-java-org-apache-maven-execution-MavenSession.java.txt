Working on MNG-607

o Changed MavenMetadataSource to a component, to avoid having to lookup artifactFactory and projectBuilder in order to 
  construct it.

o Added add(..) method to ScmBean in the release plugin to allow addition of release-pom.xml

o Changed the PrepareReleaseMojo to resolve ONLY version and parent-version for the normal pom.xml, and fully resolve all
  artifacts used in the release-pom.xml, including version, parent-version, dependency closure (given by project.getArtifacts()), plugins, and reports. It will then add the release-pom.xml, and (attempt to) delete it before performing the final commit for next development version.

o Added some mapping methods to ArtifactUtils, to key by artifact.getId, and to create an Artifact.getId()-compatible string from parameters.

o Added TestProjectBuilder to remove the requirement in ProjectClasspathTest to modify the fields of the project builder directly.

o Cleaned up the AbstractReleaseMojo and PrepareReleaseMojo to avoid container lookups...they're now mojo parameters with the 'component.' prefix.

NOTE: Next step is to figure out how to use maven-scm to remove an SCM resource, to enable the prepare mojo to take the release-pom.xml back out of HEAD after the tag is complete.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@224413 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.project.MavenProject;
-import org.codehaus.plexus.context.Context;
-    private MavenProject project;
-
-    public MavenSession( MavenProject project, PlexusContainer container, Settings settings,
-                         ArtifactRepository localRepository, EventDispatcher eventDispatcher, List goals )
-    {
-        this.project = project;
+    private List sortedProjects;
+    private final String executionRootDir;
+
+    public MavenSession( PlexusContainer container, Settings settings,
+                         ArtifactRepository localRepository, EventDispatcher eventDispatcher, List sortedProjects, 
+                         List goals, String executionRootDir )
+    {
+        
+        this.sortedProjects = sortedProjects;
-        // TODO: Go back to this when we get the container ready to configure mojos...
-        // NOTE: [jc] This is a possible way to add project, etc. to the container context to allow container-injected 
-        // mojo configuration.
-//        initializeContainerContext();
-    }
-
-    private void initializeContainerContext()
-    {
-        Context context = container.getContext();
-
-        context.put( "project", project );
-        context.put( "settings", settings );
-        context.put( "basedir", project.getBasedir().getAbsolutePath() );
-        context.put( "localRepository", localRepository );
-        
-        // TODO: remove this alias...change to ${project.build.finalName}
-        context.put( "maven.final.name", project.getBuild().getFinalName() );
+        this.executionRootDir = executionRootDir;
+    
+    public List getSortedProjects()
+    {
+        return sortedProjects;
+    }
+    
+    public String getExecutionRootDirectory()
+    {
+        return executionRootDir;
+    }
