fixed errors reported by Checkstyle

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@958295 13f79535-47bb-0310-9956-ffa450edef68

-//TODO: rmeove hardcoding of checksum logic
-@Component(role = WagonManager.class)
+//TODO: remove hardcoding of checksum logic
+@Component( role = WagonManager.class )
-    //   
-    public void getArtifact( Artifact artifact, ArtifactRepository repository, TransferListener downloadMonitor, boolean force )
+    //
+    public void getArtifact( Artifact artifact, ArtifactRepository repository, TransferListener downloadMonitor,
+                             boolean force )
-    public void getArtifact( Artifact artifact, List<ArtifactRepository> remoteRepositories, TransferListener downloadMonitor, boolean force )
+    public void getArtifact( Artifact artifact, List<ArtifactRepository> remoteRepositories,
+                             TransferListener downloadMonitor, boolean force )
-    public void getArtifactMetadata( ArtifactMetadata metadata, ArtifactRepository repository, File destination, String checksumPolicy )
+    public void getArtifactMetadata( ArtifactMetadata metadata, ArtifactRepository repository, File destination,
+                                     String checksumPolicy )
-    public void getArtifactMetadataFromDeploymentRepository( ArtifactMetadata metadata, ArtifactRepository repository, File destination, String checksumPolicy )
+    public void getArtifactMetadataFromDeploymentRepository( ArtifactMetadata metadata, ArtifactRepository repository,
+                                                             File destination, String checksumPolicy )
-     * 
+     *
-    private void connectWagon( Wagon wagon, ArtifactRepository repository ) 
+    private void connectWagon( Wagon wagon, ArtifactRepository repository )
-            wagon.connect( new Repository( repository.getId(), repository.getUrl() ), authenticationInfo( repository ) );
+            wagon.connect( new Repository( repository.getId(), repository.getUrl() ),
+                           authenticationInfo( repository ) );
-    }    
-    
+    }
+
-        return ai;        
+        return ai;
-    
+
-        proxyInfo.setPassword( repository.getProxy().getPassword() );            
+        proxyInfo.setPassword( repository.getProxy().getPassword() );
-    
-    public void getRemoteFile( ArtifactRepository repository, File destination, String remotePath, TransferListener downloadMonitor, String checksumPolicy, boolean force )
+
+    public void getRemoteFile( ArtifactRepository repository, File destination, String remotePath,
+                               TransferListener downloadMonitor, String checksumPolicy, boolean force )
-            
+
-                            handleChecksumFailure( checksumPolicy, "Error retrieving checksum file for " + remotePath, md5TryException );
+                            handleChecksumFailure( checksumPolicy, "Error retrieving checksum file for " + remotePath,
+                                                   md5TryException );
-                    throw new TransferFailedException( "Error copying temporary file to the final destination: " + e.getMessage(), e );
+                    throw new TransferFailedException( "Error copying temporary file to the final destination: "
+                        + e.getMessage(), e );
-    //    
-    public void putArtifact( File source, Artifact artifact, ArtifactRepository deploymentRepository, TransferListener downloadMonitor )
+    //
+    public void putArtifact( File source, Artifact artifact, ArtifactRepository deploymentRepository,
+                             TransferListener downloadMonitor )
-    public void putRemoteFile( ArtifactRepository repository, File source, String remotePath, TransferListener downloadMonitor )
+    public void putRemoteFile( ArtifactRepository repository, File source, String remotePath,
+                               TransferListener downloadMonitor )
-        
+
-            
+
-    private void cleanupTemporaryFiles(List<File> files)
+    private void cleanupTemporaryFiles( List<File> files )
-       
+
-    
+
-    private void verifyChecksum( ChecksumObserver checksumObserver, File destination, File tempDestination, String remotePath, String checksumFileExtension, Wagon wagon )
+    private void verifyChecksum( ChecksumObserver checksumObserver, File destination, File tempDestination,
+                                 String remotePath, String checksumFileExtension, Wagon wagon )
-            if ( expectedChecksum.regionMatches( true, 0, "MD", 0, 2 ) || expectedChecksum.regionMatches( true, 0, "SHA", 0, 3 ) )
+            if ( expectedChecksum.regionMatches( true, 0, "MD", 0, 2 )
+                || expectedChecksum.regionMatches( true, 0, "SHA", 0, 3 ) )
-                throw new ChecksumFailedException( "Checksum failed on download: local = '" + actualChecksum + "'; remote = '" + expectedChecksum + "'" );
+                throw new ChecksumFailedException( "Checksum failed on download: local = '" + actualChecksum
+                    + "'; remote = '" + expectedChecksum + "'" );
-    }    
-    
+    }
+
-   
+
