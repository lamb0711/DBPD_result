o make sure all the same repository processing logic is used, shunt all calls from ProjectUtils to the MavenRepositorySystem interface.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@751009 13f79535-47bb-0310-9956-ffa450edef68

+    static MavenRepositorySystem rs;
+        
-    public static List<ArtifactRepository> buildArtifactRepositories( List<Repository> repositories, ArtifactRepositoryFactory artifactRepositoryFactory, PlexusContainer container )
+    public static List<ArtifactRepository> buildArtifactRepositories( List<Repository> repositories, ArtifactRepositoryFactory artifactRepositoryFactory, PlexusContainer c )
-            remoteRepositories.add( buildArtifactRepository( r, artifactRepositoryFactory, container ) );
+            remoteRepositories.add( buildArtifactRepository( r, artifactRepositoryFactory, c ) );
-        remoteRepositories = rs( container ).getMirrors( remoteRepositories );
+        remoteRepositories = rs( c ).getMirrors( remoteRepositories );
-    public static ArtifactRepository buildDeploymentArtifactRepository( DeploymentRepository repo,
-                                                                        ArtifactRepositoryFactory artifactRepositoryFactory,
-                                                                        PlexusContainer container )
+    public static ArtifactRepository buildDeploymentArtifactRepository( DeploymentRepository repo, ArtifactRepositoryFactory artifactRepositoryFactory, PlexusContainer c )
-        if ( repo != null )
-        {
-            String id = repo.getId();
-            String url = repo.getUrl();
-
-            return artifactRepositoryFactory.createDeploymentArtifactRepository( id, url, repo.getLayout(), repo.isUniqueVersion() );
-        }
-        else
-        {
-            return null;
-        }
+        return rs( c ).buildArtifactRepository( repo );
-    public static ArtifactRepository buildArtifactRepository( Repository repo,
-                                                              ArtifactRepositoryFactory artifactRepositoryFactory,
-                                                              PlexusContainer container )
+    public static ArtifactRepository buildArtifactRepository( Repository repo, ArtifactRepositoryFactory artifactRepositoryFactory, PlexusContainer c )
-        if ( repo != null )
-        {
-            String id = repo.getId();
-            String url = repo.getUrl();
-
-            if ( id == null || id.trim().length() < 1 )
-            {
-                throw new MissingRepositoryElementException( "Repository ID must not be empty (URL is: " + url + ")." );
-            }
-
-            if ( url == null || url.trim().length() < 1 )
-            {
-                throw new MissingRepositoryElementException( "Repository URL must not be empty (ID is: " + id + ").",
-                                                             id );
-            }
-
-            ArtifactRepositoryPolicy snapshots = buildArtifactRepositoryPolicy( repo.getSnapshots() );
-            ArtifactRepositoryPolicy releases = buildArtifactRepositoryPolicy( repo.getReleases() );
-
-            return artifactRepositoryFactory.createArtifactRepository( id, url, repo.getLayout(), snapshots, releases );
-        }
-        else
-        {
-            return null;
-        }
-    }
-
-    private static ArtifactRepositoryPolicy buildArtifactRepositoryPolicy( RepositoryPolicy policy )
-    {
-        boolean enabled = true;
-        String updatePolicy = null;
-        String checksumPolicy = null;
-
-        if ( policy != null )
-        {
-            enabled = policy.isEnabled();
-            if ( policy.getUpdatePolicy() != null )
-            {
-                updatePolicy = policy.getUpdatePolicy();
-            }
-            if ( policy.getChecksumPolicy() != null )
-            {
-                checksumPolicy = policy.getChecksumPolicy();
-            }
-        }
-
-        return new ArtifactRepositoryPolicy( enabled, updatePolicy, checksumPolicy );
+        return rs( c  ).buildArtifactRepository( repo );        
-        MavenRepositorySystem rs = null;
-        
