PR: MNG-456
allow separate snapshot and release repositories
deprecate existing snapshotPolicy and checksumPolicy in favour of updatePolicy and checksumPolicy within the <releases> and <snapshots> elements in the <repository> element.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@224707 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;
-        getRemoteFile( repository, destination, remotePath, downloadMonitor );
+        ArtifactRepositoryPolicy policy = artifact.isSnapshot() ? repository.getSnapshots() : repository.getReleases();
+
+        if ( policy.isEnabled() )
+        {
+            getRemoteFile( repository, destination, remotePath, downloadMonitor, policy.getUpdatePolicy() );
+        }
+        else
+        {
+            getLogger().info( "Skipping disabled repository " + repository.getId() );
+        }
-    public void getArtifactMetadata( ArtifactMetadata metadata, ArtifactRepository remoteRepository, File destination )
+    public void getArtifactMetadata( ArtifactMetadata metadata, ArtifactRepository repository, File destination,
+                                     String updatePolicy )
-        String remotePath = remoteRepository.pathOfMetadata( metadata );
+        String remotePath = repository.pathOfMetadata( metadata );
-        getRemoteFile( remoteRepository, destination, remotePath, null );
+        getRemoteFile( repository, destination, remotePath, null, updatePolicy );
-        getRemoteFile( remoteRepository, destination, remotePath, null );
+        getRemoteFile( remoteRepository, destination, remotePath, null, ArtifactRepositoryPolicy.CHECKSUM_POLICY_WARN );
-                                TransferListener downloadMonitor )
+                                TransferListener downloadMonitor, String updatePolicy )
-            repository = mirror;
+            repository = new DefaultArtifactRepository( mirror.getId(), mirror.getUrl(), repository.getLayout(),
+                                                        repository.getSnapshots(), repository.getReleases() );
-                        handleChecksumFailure( repository, e.getMessage(), e.getCause() );
+                        handleChecksumFailure( updatePolicy, e.getMessage(), e.getCause() );
-                            handleChecksumFailure( repository, e.getMessage(), e.getCause() );
+                            handleChecksumFailure( updatePolicy, e.getMessage(), e.getCause() );
-                        handleChecksumFailure( repository, "Error retrieving checksum file for " + remotePath,
+                        handleChecksumFailure( updatePolicy, "Error retrieving checksum file for " + remotePath,
-    private void handleChecksumFailure( ArtifactRepository repository, String message, Throwable cause )
+    private void handleChecksumFailure( String updatePolicy, String message, Throwable cause )
-        if ( repository.failOnChecksumMismatch() )
+        if ( ArtifactRepositoryPolicy.CHECKSUM_POLICY_FAIL.equals( updatePolicy ) )
