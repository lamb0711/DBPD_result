[MNG-3832] Allow wildcards in dependency exclusions
Already supported since M3.0, now adjust warnings

+    private static final Pattern ID_WITH_WILDCARDS_REGEX = Pattern.compile( "[A-Za-z0-9_\\-.?*]+" );
+
-                validateId( prefix + "exclusions.exclusion.groupId", problems, Severity.WARNING, Version.V20,
-                            exclusion.getGroupId(), d.getManagementKey(), exclusion );
+                if ( request.getValidationLevel() < ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_0 )
+                {
+                    validateId( prefix + "exclusions.exclusion.groupId", problems, Severity.WARNING, Version.V20,
+                                exclusion.getGroupId(), d.getManagementKey(), exclusion );
-                validateId( prefix + "exclusions.exclusion.artifactId", problems, Severity.WARNING, Version.V20,
-                            exclusion.getArtifactId(), d.getManagementKey(), exclusion );
+                    validateId( prefix + "exclusions.exclusion.artifactId", problems, Severity.WARNING, Version.V20,
+                                exclusion.getArtifactId(), d.getManagementKey(), exclusion );
+                }
+                else
+                {
+                    validateIdWithWildcards( prefix + "exclusions.exclusion.groupId", problems, Severity.WARNING, Version.V30,
+                                exclusion.getGroupId(), d.getManagementKey(), exclusion );
+
+                    validateIdWithWildcards( prefix + "exclusions.exclusion.artifactId", problems, Severity.WARNING, Version.V30,
+                                exclusion.getArtifactId(), d.getManagementKey(), exclusion );
+                }
+    private boolean validateIdWithWildcards( String fieldName, ModelProblemCollector problems, Severity severity, Version version, String id,
+                                String sourceHint, InputLocationTracker tracker )
+    {
+        if ( !validateStringNotEmpty( fieldName, problems, severity, version, id, sourceHint, tracker ) )
+        {
+            return false;
+        }
+        else
+        {
+            boolean match = ID_WITH_WILDCARDS_REGEX.matcher( id ).matches();
+            if ( !match )
+            {
+                addViolation( problems, severity, version, fieldName, sourceHint, "with value '" + id
+                    + "' does not match a valid id pattern.", tracker );
+            }
+            return match;
+        }
+    }
+
+    
