MNG-2199: Version ranges not supported for parent artifacts
Fixes #21
Signed-off-by: Jason van Zyl <jason@tesla.io>

+import java.util.HashMap;
-import java.util.HashMap;
-        parentIds.add( ModelProblemUtils.toId( inputModel ) );
-
-            currentData = readParent( tmpModel, currentData.getSource(), request, problems );
+            ModelData parentData = readParent( tmpModel, currentData.getSource(), request, problems );
-            if ( currentData == null )
+            if ( parentData == null )
-            else if ( !parentIds.add( currentData.getId() ) )
+            else if ( currentData == resultData )
+            { // First iteration - add initial parent id after version resolution.
+                currentData.setGroupId( currentData.getRawModel().getGroupId() == null
+                                            ? parentData.getGroupId()
+                                            : currentData.getRawModel().getGroupId() );
+
+                currentData.setVersion( currentData.getRawModel().getVersion() == null
+                                            ? parentData.getVersion()
+                                            : currentData.getRawModel().getVersion() );
+
+                currentData.setArtifactId( currentData.getRawModel().getArtifactId() );
+                parentIds.add( currentData.getId() );
+                // Reset - only needed for 'getId'.
+                currentData.setGroupId( null );
+                currentData.setArtifactId( null );
+                currentData.setVersion( null );
+                currentData = parentData;
+            }
+            else if ( !parentIds.add( parentData.getId() ) )
-                message += currentData.getId();
+                message += parentData.getId();
-                problems.add( new ModelProblemCollectorRequest( ModelProblem.Severity.FATAL, ModelProblem.Version.BASE ).setMessage( message ) );
+                problems.add(
+                    new ModelProblemCollectorRequest( ModelProblem.Severity.FATAL, ModelProblem.Version.BASE ).
+                    setMessage( message ) );
+
+            else
+            {
+                currentData = parentData;
+            }
-        Parent parent = childModel.getParent();
+        Parent parent = childModel.getParent().clone();
-            modelSource = modelResolver.resolveModel( groupId, artifactId, version );
+            modelSource = modelResolver.resolveModel( parent );
-        ModelData parentData = new ModelData( modelSource, parentModel, groupId, artifactId, version );
+        if ( !parent.getVersion().equals( version ) )
+        {
+            if ( childModel.getVersion() == null )
+            {
+                problems.add( new ModelProblemCollectorRequest( Severity.FATAL, Version.V31 ).
+                    setMessage( "Version must be a constant" ).
+                    setLocation( childModel.getLocation( "" ) ) );
+
+            }
+            else
+            {
+                if ( childModel.getVersion().indexOf( "${" ) > -1 )
+                {
+                    problems.add( new ModelProblemCollectorRequest( Severity.FATAL, Version.V31 ).
+                        setMessage( "Version must be a constant" ).
+                        setLocation( childModel.getLocation( "version" ) ) );
+
+                }
+            }
+
+            // MNG-2199: What else to check here ?
+        }
+
+        ModelData parentData = new ModelData( modelSource, parentModel, parent.getGroupId(), parent.getArtifactId(),
+                                              parent.getVersion() );
