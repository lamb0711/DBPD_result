refactoring:
- use an expression in the suport POM to set up finalName
- have interpolator and injector deal only with model


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163380 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.project.injection.ProjectDefaultsInjector;
-import org.apache.maven.project.interpolation.ProjectInterpolator;
+import org.apache.maven.project.injection.ModelDefaultsInjector;
+import org.apache.maven.project.interpolation.ModelInterpolator;
-    private ProjectDefaultsInjector projectDefaultsInjector;
+    private ModelDefaultsInjector modelDefaultsInjector;
-    private ProjectInterpolator projectInterpolator;
+    private ModelInterpolator modelInterpolator;
-            project = projectInterpolator.interpolate( project );
+            Model model = modelInterpolator.interpolate( project.getModel() );
-            projectDefaultsInjector.injectDefaults( project );
+            // interpolation is before injection, because interpolation is off-limits in the injected variables
+            modelDefaultsInjector.injectDefaults( model );
+            MavenProject parentProject = project.getParent();
+
+            project = new MavenProject( model );
+            project.setFile( projectDescriptor );
+            project.setParent( parentProject );
-            // @todo this should be in the super POM when interpolation works
-            setupMavenFinalName( project );
-
-    private void setupMavenFinalName( MavenProject project )
-    {
-        if ( project.getModel().getBuild().getFinalName() == null )
-        {
-            project.getModel().getBuild().setFinalName( project.getArtifactId() + "-" + project.getVersion() );
-        }
-    }
-
