PR: MNG-836
rolled back rev #239243


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@278895 13f79535-47bb-0310-9956-ffa450edef68

-    // lazily instantiated and cached.
-    private MavenProject superProject;
-
-                    getLogger()
-                        .warn(
-                               "POM for: \'" + pomArtifact.getId()
-                                   + "\' does not appear to be valid. Its will be ignored for artifact resolution." );
+                    getLogger().warn( "POM for: \'" + pomArtifact.getId() +
+                        "\' does not appear to be valid. Its will be ignored for artifact resolution." );
-                        String message = "\n  This artifact has been relocated to " + artifact.getGroupId() + ":"
-                            + artifact.getArtifactId() + ":" + artifact.getVersion() + ".\n";
+                        String message = "\n  This artifact has been relocated to " + artifact.getGroupId() + ":" +
+                            artifact.getArtifactId() + ":" + artifact.getVersion() + ".\n";
-            
+
-                                                     artifact.getDependencyFilter() );
-                
-                List repositories = aggregateRepositoryLists( remoteRepositories, project.getRemoteArtifactRepositories() );
-                
-                result = new ResolutionGroup( pomArtifact, artifacts, repositories );
+                                                         artifact.getDependencyFilter() );
+
+                result = new ResolutionGroup( pomArtifact, artifacts, project.getRemoteArtifactRepositories() );
-            
+
-        catch ( ProjectBuildingException e )
-        {
-            throw new ArtifactMetadataRetrievalException( "Unable to read the metadata file", e );
-        }
-    }
-
-    private List aggregateRepositoryLists( List remoteRepositories, List remoteArtifactRepositories )
-        throws ProjectBuildingException
-    {
-        if ( superProject == null )
-        {
-            superProject = mavenProjectBuilder.buildStandaloneSuperProject( null );
-        }
-
-        List repositories = new ArrayList();
-
-        repositories.addAll( remoteRepositories );
-
-        // ensure that these are defined
-        for ( Iterator it = superProject.getRemoteArtifactRepositories().iterator(); it.hasNext(); )
-        {
-            ArtifactRepository superRepo = (ArtifactRepository) it.next();
-
-            for ( Iterator aggregatedIterator = repositories.iterator(); aggregatedIterator.hasNext(); )
-            {
-                ArtifactRepository repo = (ArtifactRepository) aggregatedIterator.next();
-
-                // if the repository exists in the list and was introduced by another POM's super-pom, 
-                // remove it...the repository definitions from the super-POM should only be at the end of
-                // the list.
-                // if the repository has been redefined, leave it.
-                if ( repo.getId().equals( superRepo.getId() ) && repo.getUrl().equals( superRepo.getUrl() ) )
-                {
-                    aggregatedIterator.remove();
-                }
-            }
-        }
-
-        // this list should contain the super-POM repositories, so we don't have to explicitly add them back.
-        for ( Iterator it = remoteArtifactRepositories.iterator(); it.hasNext(); )
-        {
-            ArtifactRepository repository = (ArtifactRepository) it.next();
-
-            if ( !repositories.contains( repository ) )
-            {
-                repositories.add( repository );
-            }
-        }
-
-        return repositories;
-            
+
-            
+
-                
+
-            
+
