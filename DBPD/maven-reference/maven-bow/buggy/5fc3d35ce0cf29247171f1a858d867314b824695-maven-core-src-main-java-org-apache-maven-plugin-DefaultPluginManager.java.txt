Removing maven-build-context, and replacing it with caching aspects for model-lineage stuff and project instances. Still needs caching for artifact resolution, and I have an aspect for this too, but it's not enabled yet, since it's still buggy.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@595215 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.context.BuildContextManager;
-import org.apache.maven.lifecycle.LifecycleExecutionContext;
-    private BuildContextManager buildContextManager;
-
+        getLogger().debug( "Got plugin artifacts:\n\n" + artifacts );
+
-        ClassRealm pluginRealm = realmManager.getPluginRealm( projectPlugin );;
+        ClassRealm pluginRealm = realmManager.getPluginRealm( projectPlugin );
+        else
+        {
+            List managedPluginArtifacts = realmManager.getPluginArtifacts( projectPlugin );
+
+            if ( ( managedPluginArtifacts == null ) || ( managedPluginArtifacts.isEmpty() && !artifacts.isEmpty() ) )
+            {
+                realmManager.setPluginArtifacts( projectPlugin, artifacts );
+            }
+        }
-                LifecycleExecutionContext ctx = LifecycleExecutionContext.read( buildContextManager );
-                if ( ctx == null )
-                {
-                    ctx = new LifecycleExecutionContext( project );
-                }
-
-                ctx.addReport( mojoDescriptor, (MavenReport) mojo );
-                ctx.store( buildContextManager );
+                session.addReport( mojoDescriptor, (MavenReport) mojo );
-        // NEW: Pass in the LifecycleExecutionContext so we have access to the current project,
-        // forked project stack (future), and reports.
-        LifecycleExecutionContext ctx = LifecycleExecutionContext.read( buildContextManager );
-        if ( ctx == null )
-        {
-            ctx = new LifecycleExecutionContext( project );
-        }
-
-                                                                                          ctx,
