[MNG-4331] Add new mojo annotation @requiresDependencyCollection to grab dependency tree without files

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@809431 13f79535-47bb-0310-9956-ffa450edef68

-            artifacts = projectDependenciesResolver.resolve( project, scopesToResolve, session );
+            Collection<String> scopesToCollect = executionPlan.getRequiredCollectionScopes();
+
+            artifacts = projectDependenciesResolver.resolve( project, scopesToCollect, scopesToResolve, session );
+        Set<String> requiredDependencyCollectionScopes = new TreeSet<String>();
+
-            collectDependencyResolutionScopes( requiredDependencyResolutionScopes, mojoExecution );
+            collectDependencyRequirements( requiredDependencyResolutionScopes, requiredDependencyCollectionScopes,
+                                           mojoExecution );
-        return new MavenExecutionPlan( mojoExecutions, requiredDependencyResolutionScopes );
+        return new MavenExecutionPlan( mojoExecutions, requiredDependencyResolutionScopes,
+                                       requiredDependencyCollectionScopes );
-    private void collectDependencyResolutionScopes( Collection<String> requiredDependencyResolutionScopes,
+    private void collectDependencyRequirements( Collection<String> requiredDependencyResolutionScopes,
+                                                    Collection<String> requiredDependencyCollectionScopes,
-        String requiredDependencyResolutionScope = mojoExecution.getMojoDescriptor().isDependencyResolutionRequired();
+        MojoDescriptor mojoDescriptor = mojoExecution.getMojoDescriptor();
+
+        String requiredDependencyResolutionScope = mojoDescriptor.getDependencyResolutionRequired();
+        String requiredDependencyCollectionScope = mojoDescriptor.getDependencyCollectionRequired();
+
+        if ( StringUtils.isNotEmpty( requiredDependencyCollectionScope ) )
+        {
+            requiredDependencyCollectionScopes.add( requiredDependencyCollectionScope );
+        }
+
-                collectDependencyResolutionScopes( requiredDependencyResolutionScopes, forkedExecution );
+                collectDependencyRequirements( requiredDependencyResolutionScopes,
+                                                   requiredDependencyCollectionScopes, forkedExecution );
