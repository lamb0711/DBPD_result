o Refactored mojo/plugin generation, extraction, etc. to accommodate multiple mojo languages.
o Tested with java mojos, mboot to verify nothing broken by refactor.
o TODO: Add marmalade support tests...currently only java-mojos are supported in mboot2, so this isn't going to interrupt things.
o TODO: Once marmalade support is tested, add to the list of artifacts built by mboot2.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163369 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.maven.plugin.generator.jelly;
+package org.apache.maven.tools.plugin.generator.jelly;
-import org.apache.maven.plugin.descriptor.Parameter;
+import org.apache.maven.plugin.MavenMojoDescriptor;
-import org.apache.maven.plugin.generator.AbstractGenerator;
-import org.codehaus.plexus.util.xml.Xpp3Dom;
+import org.apache.maven.plugin.descriptor.Parameter;
+import org.apache.maven.project.MavenProject;
+import org.apache.maven.tools.plugin.generator.Generator;
+import org.apache.maven.tools.plugin.util.PluginUtils;
+import java.util.Iterator;
+import java.util.Set;
-    extends AbstractGenerator
+    implements Generator
-    protected void processPluginDescriptors( MojoDescriptor[] mojoDescriptors, String destinationDirectory, Xpp3Dom pomDom )
+    public void execute( String destinationDirectory, Set mavenMojoDescriptors, MavenProject project)
-        String pluginId = pluginId( pomDom );
+        String pluginId = PluginUtils.pluginId( project );
-
-        for ( int i = 0; i < mojoDescriptors.length; i++ )
+        
+        for ( Iterator it = mavenMojoDescriptors.iterator(); it.hasNext(); )
-            processPluginDescriptor( mojoDescriptors[i], w, pomDom );
+            MavenMojoDescriptor descriptor = (MavenMojoDescriptor) it.next();
+            processPluginDescriptor(descriptor, w, project);
-        for ( int i = 0; i < mojoDescriptors.length; i++ )
+        for ( Iterator it = mavenMojoDescriptors.iterator(); it.hasNext(); )
-            writeGoals( mojoDescriptors[i], w );
+            MavenMojoDescriptor descriptor = (MavenMojoDescriptor) it.next();
+            writeGoals(descriptor, w);
-        writeDependencies( w, pomDom );
+        PluginUtils.writeDependencies( w, project );
-    protected void processPluginDescriptor( MojoDescriptor mojoDescriptor, XMLWriter w, Xpp3Dom pomDom )
+    protected void processPluginDescriptor( MavenMojoDescriptor descriptor, XMLWriter w, MavenProject project)
-        String pluginId = pluginId( pomDom );
+        MojoDescriptor mojoDescriptor = descriptor.getMojoDescriptor();
+        
+        String pluginId = PluginUtils.pluginId( project );
-    private void writeGoals( MojoDescriptor mojoDescriptor, XMLWriter w )
+    private void writeGoals( MavenMojoDescriptor descriptor, XMLWriter w )
+        MojoDescriptor mojoDescriptor = descriptor.getMojoDescriptor();
+        
-    protected void writeDependencies( XMLWriter w, Xpp3Dom pomDom )
-    {
-        writeDependency( w, "maven", "maven-plugin", "2.0-SNAPSHOT" );
-
-        Xpp3Dom depElement = pomDom.getChild( "dependencies" );
-
-        if ( depElement != null )
-        {
-            Xpp3Dom[] deps = depElement.getChildren( "dependency" );
-
-            for ( int i = 0; i < deps.length; i++ )
-            {
-                Xpp3Dom dep = deps[i];
-
-                String groupId = dep.getChild( "artifactId" ).getValue();
-
-                String artifactId = dep.getChild( "groupId" ).getValue();
-
-                String version = dep.getChild( "version" ).getValue();
-
-                writeDependency( w, groupId, artifactId, version );
-            }
-        }
-    }
-
-    protected void writeDependency( XMLWriter w, String groupId, String artifactId, String version )
-    {
-        w.startElement( "dependency" );
-
-        w.startElement( "groupId" );
-
-        w.writeText( groupId );
-
-        w.endElement();
-
-        w.startElement( "artifactId" );
-
-        w.writeText( artifactId );
-
-        w.endElement();
-
-        w.startElement( "version" );
-
-        w.writeText( version );
-
-        w.endElement();
-
-        w.endElement();
-    }
-
