Made buildTopDownMergedConfiguration really recursive - in most cases it didn't.

Fixed a merge problem where only direct children of <configuration> in the POM
appeared in the merged configuration.

(like maven-antrun-plugin, the 'tasks' configuration tag didn't have any
value, but has children. After the merge, the children were gone,
and it was marked as having no value, and hence the field was not updated.)


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@232281 13f79535-47bb-0310-9956-ffa450edef68

-		// FIXME: need to find out how a plugin gets marked as 'installed'
-		// and no ChildContainer exists. The check for that below fixes
-		// the 'Can't find plexus container for plugin: xxx' error.
+        // FIXME: need to find out how a plugin gets marked as 'installed'
+        // and no ChildContainer exists. The check for that below fixes
+        // the 'Can't find plexus container for plugin: xxx' error.
-                if ( fieldValue == null )
+                // only mark as invalid if there are no child nodes
+                if ( fieldValue == null && (value == null || value.getChildCount() == 0 ) )
-            
+
-            
+
-            
+
-                
+
-                
+                // TODO: recessive seems to be dominant here?
-            
-            mergeConfiguration( result, recessive );
-        
+
+        PlexusConfiguration[] children = dominant.getChildren();
+
+        for ( int i = 0; i < children.length; i++ )
+        {
+            PlexusConfiguration childDom = children[i];
+            PlexusConfiguration childRec = recessive == null ? null : recessive.getChild( childDom.getName(), false );
+
+            if ( childRec != null )
+            {
+                result.addChild( buildTopDownMergedConfiguration( childDom, childRec ) );
+            }
+            else
+            {   // FIXME: copy, or use reference?
+                result.addChild( copyConfiguration( childDom ) );
+            }
+        }
+    
