o Changed maven-user-model/UserModel/UserModelBuilder to maven-settings/MavenSettings/MavenSettingsBuilder.

  This supports a change to a simpler local configuration file (~/.m2/settings.xml by default), which has the general format of:

<settings>
  <profiles>
    <profile>
      <active>true</active> <!-- not needed if this is the only profile -->
      <localRepository>/path/to/repo</localRepository>
    </profile>
    .
    .
    .
  </profiles>
  <servers>
    <server>
      <id>myserver</id>
      <username>me</username>
      <password>mypass</password>
      <privateKey>/path/to/key</privateKey>
      <passphrase>key-passphrase</passphrase>
    </server>
    .
    .
    .
  </servers>
  <proxies>
    <proxy>
      <active>true</active> <!-- not needed if this is the only proxy -->
      .
      .
      .
    </proxy>
    .
    .
    .
  </proxies>
</settings>

o Added special parameter named '#settings' which simply injects the current MavenSettings from the MavenSession into the request parameters.
o Adjusted the it-verifier and mboot2 accordingly.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163578 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.user.MavenProfile;
-import org.apache.maven.model.user.UserModel;
-import org.apache.maven.model.user.UserModelBuilder;
-import org.apache.maven.model.user.UserModelUtils;
+import org.apache.maven.settings.MavenSettings;
+import org.apache.maven.settings.MavenSettingsBuilder;
+import org.apache.maven.settings.Profile;
-        UserModelBuilder userModelBuilder = (UserModelBuilder) embedder.lookup( UserModelBuilder.ROLE );
+        MavenSettingsBuilder settingsBuilder = (MavenSettingsBuilder) embedder.lookup( MavenSettingsBuilder.ROLE );
+        
+        MavenSettings settings = settingsBuilder.buildSettings();
+        
+        ArtifactRepositoryFactory artifactRepositoryFactory = (ArtifactRepositoryFactory) embedder.lookup( ArtifactRepositoryFactory.ROLE );
-        UserModel userModel = userModelBuilder.buildUserModel();
-
-        ArtifactRepositoryFactory artifactRepositoryFactory = (ArtifactRepositoryFactory) embedder.lookup(
-            ArtifactRepositoryFactory.ROLE );
-
-        ArtifactRepository localRepository = getLocalRepository( userModel, artifactRepositoryFactory );
+        ArtifactRepository localRepository = getLocalRepository( settings, artifactRepositoryFactory );
-                new DefaultMavenExecutionRequest( localRepository, userModel, eventDispatcher,
+                new DefaultMavenExecutionRequest( localRepository, settings, eventDispatcher,
-            request = new DefaultMavenExecutionRequest( localRepository, userModel, eventDispatcher,
+            request = new DefaultMavenExecutionRequest( localRepository, settings, eventDispatcher,
-    protected static ArtifactRepository getLocalRepository( UserModel userModel, ArtifactRepositoryFactory repoFactory )
+    protected static ArtifactRepository getLocalRepository( MavenSettings settings, ArtifactRepositoryFactory repoFactory )
-        MavenProfile mavenProfile = UserModelUtils.getActiveMavenProfile( userModel );
+        Profile profile = settings.getActiveProfile();
-        if ( mavenProfile != null )
+        if ( profile != null )
-            localRepository = mavenProfile.getLocalRepository();
+            localRepository = profile.getLocalRepository();
-        return repoFactory.createArtifactRepository( repo, userModel );
+        return repoFactory.createArtifactRepository( repo, settings );
