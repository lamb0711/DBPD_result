o Added --force CLI support
o Added blacklistedPatterns to configuration file, to enhance the exclusion filter during artifact discovery with a set of non-copy-able files.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163997 13f79535-47bb-0310-9956-ffa450edef68

-    
+
-    
+
-                    artifactDiscoverer = (ArtifactDiscoverer) container.lookup(
-                                                                                ArtifactDiscoverer.ROLE,
-                                                                                configuration.getSourceRepositoryLayout() );
+                    artifactDiscoverer = (ArtifactDiscoverer) container.lookup( ArtifactDiscoverer.ROLE, configuration
+                        .getSourceRepositoryLayout() );
-                        artifacts = artifactDiscoverer.discoverArtifacts( sourceRepositoryBase, repoReporter );
+                        artifacts = artifactDiscoverer.discoverArtifacts( sourceRepositoryBase, repoReporter,
+                                                                          configuration.getBlacklistedPatterns() );
-                        sourceLayout = (ArtifactRepositoryLayout) container.lookup(
-                                                                                    ArtifactRepositoryLayout.ROLE,
-                                                                                    configuration.getSourceRepositoryLayout() );
+                        sourceLayout = (ArtifactRepositoryLayout) container.lookup( ArtifactRepositoryLayout.ROLE,
+                                                                                    configuration
+                                                                                        .getSourceRepositoryLayout() );
-                        targetLayout = (ArtifactRepositoryLayout) container.lookup(
-                                                                                    ArtifactRepositoryLayout.ROLE,
-                                                                                    configuration.getTargetRepositoryLayout() );
+                        targetLayout = (ArtifactRepositoryLayout) container.lookup( ArtifactRepositoryLayout.ROLE,
+                                                                                    configuration
+                                                                                        .getTargetRepositoryLayout() );
-                        
+
-                    logger.warn( "Warning encountered while rewriting one or more artifacts from source repository to target repository." );
+                    logger
+                        .warn( "Warning encountered while rewriting one or more artifacts from source repository to target repository." );
-        
+
-            
+
-                    if ( artifactSource.exists() && targetMissingOrOlder )
+                    if ( artifactSource.exists() && ( configuration.force() || targetMissingOrOlder ) )
-                        
+
-                            artifactPomRewriter = (ArtifactPomRewriter) container.lookup(
-                                                                                          ArtifactPomRewriter.ROLE,
-                                                                                          configuration.getSourcePomVersion() );
+                            artifactPomRewriter = (ArtifactPomRewriter) container.lookup( ArtifactPomRewriter.ROLE,
+                                                                                          configuration
+                                                                                              .getSourcePomVersion() );
-                            
+
-                                
+
-                    else if( !targetMissingOrOlder )
+                    else if ( !targetMissingOrOlder )
-                        artifactReporter.warn( "Target file for artifact is present and not stale. (Artifact: \'" + artifact.getId()
-                                                + "\' in path: \'" + artifactSource + "\' with target path: " + artifactTarget + ")." );
+                        artifactReporter.warn( "Target file for artifact is present and not stale. (Artifact: \'"
+                            + artifact.getId() + "\' in path: \'" + artifactSource + "\' with target path: "
+                            + artifactTarget + ")." );
-            
-            logger.info("Actual number of artifacts rewritten: " + actualRewriteCount + " (" + (actualRewriteCount * 2) + " including POMs).");
+
+            logger.info( "Actual number of artifacts rewritten: " + actualRewriteCount + " ("
+                + ( actualRewriteCount * 2 ) + " including POMs)." );
-    private void bridgePomLocations( File targetPom, File bridgedTargetPom, Reporter reporter ) throws IOException, ReportWriteException
+    private void bridgePomLocations( File targetPom, File bridgedTargetPom, Reporter reporter )
+        throws IOException, ReportWriteException
-        if(targetPom.equals(bridgedTargetPom))
+        if ( targetPom.equals( bridgedTargetPom ) )
-            reporter.warn("Cannot create legacy-compatible copy of POM at: " + targetPom + "; legacy-compatible path is the same as the converted POM itself."); 
+            reporter.warn( "Cannot create legacy-compatible copy of POM at: " + targetPom
+                + "; legacy-compatible path is the same as the converted POM itself." );
-        
+
-        
+
-            in = new FileInputStream(targetPom);
-            out = new FileOutputStream(bridgedTargetPom);
-            
-            IOUtil.copy(in, out);
+            in = new FileInputStream( targetPom );
+            out = new FileOutputStream( bridgedTargetPom );
+
+            IOUtil.copy( in, out );
-            IOUtil.close(in);
-            IOUtil.close(out);
+            IOUtil.close( in );
+            IOUtil.close( out );
-    public void contextualize( Context context ) throws ContextException
+    public void contextualize( Context context )
+        throws ContextException
