PR: MNG-276
Submitted by: Rahul Thakur
Reviewed by:  Brett Porter

improve output during archetype creation



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@189679 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.logging.AbstractLogEnabled;
+import java.util.Set;
+    extends AbstractLogEnabled
-    public void createArchetype( String archetypeGroupId,
-                                 String archetypeArtifactId,
-                                 String archetypeVersion,
-                                 ArtifactRepository localRepository,
-                                 List remoteRepositories,
-                                 Map parameters )
+    public void createArchetype( String archetypeGroupId, String archetypeArtifactId, String archetypeVersion,
+                                 ArtifactRepository localRepository, List remoteRepositories, Map parameters )
-        Artifact archetypeArtifact = artifactFactory.createArtifact( archetypeGroupId,
-                                                                     archetypeArtifactId,
-                                                                     archetypeVersion,
-                                                                     Artifact.SCOPE_RUNTIME,
-                                                                     "jar" );
+        Artifact archetypeArtifact = artifactFactory.createArtifact( archetypeGroupId, archetypeArtifactId,
+                                                                     archetypeVersion, Artifact.SCOPE_RUNTIME, "jar" );
+        // ---------------------------------------------------------------------
+        // Get Logger and display all parameters used 
+        // ---------------------------------------------------------------------
+        if ( getLogger().isInfoEnabled() )
+        {
+
+            if ( !parameters.isEmpty() )
+            {
+
+                getLogger().info( "----------------------------------------------------------------------------" );
+
+                getLogger().info( "Using following parameters for creating Archetype: " + archetypeArtifactId + ":" + archetypeVersion );
+
+                getLogger().info( "----------------------------------------------------------------------------" );
+
+                Set keys = parameters.keySet();
+
+                Iterator it = keys.iterator();
+
+                while ( it.hasNext() )
+                {
+
+                    String parameterName = (String) it.next();
+
+                    String parameterValue = (String) parameters.get( parameterName );
+
+                    getLogger().info( "Parameter: " + parameterName + ", Value: " + parameterValue );
+
+                }
+
+            }
+            else
+            {
+
+                getLogger().info( "No Parameters found for creating Archetype" );
+
+            }
+
+        }
+        
+        
-                throw new ArchetypeDescriptorException( "The " + ARCHETYPE_DESCRIPTOR +
-                                                        " descriptor cannot be found." );
+                throw new ArchetypeDescriptorException( "The " + ARCHETYPE_DESCRIPTOR + " descriptor cannot be found." );
+        
+        // ----------------------------------------------------------------------
+        // Log message on Archetype creation
+        // ----------------------------------------------------------------------
+        if ( getLogger().isInfoEnabled() )
+        {
+            getLogger().info( "Archetype created in dir: " + outputDirectory );
+        }
+
-    protected void processTemplate( String outputDirectory,
-                                    Context context,
-                                    String template,
-                                    boolean packageInFileName,
-                                    String packageName )
+    protected void processTemplate( String outputDirectory, Context context, String template,
+                                    boolean packageInFileName, String packageName )
