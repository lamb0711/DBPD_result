o Fixed a configuration issue for the DefaultRepositoryLayout in components.xml...it needed a requirement on the ArtifactHandlerManager.
o Fixed a formatting issue for the layout in DefaultRepositoryLayout relating to groupId's.
o Revamped the repoclean tool to use an Artifact-centric approach to converting, cleaning, and reporting on repositories.
o Added the ability for repoclean to report on the health of an existing v3 or v4 repository, using a DefaultArtifactDiscoverer (Default* being the prefix given to the new repo layout going forward) and a V4PomRewriter implementation.
o Tested repoclean by converting my local m1 repository to a m2 repository.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163669 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.util.IOUtil;
+
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.util.Properties;
-    public static void main( String[] inputArgs )
+    public static void main( String[] args )
+        if ( args.length < 1 )
+        {
+            printUsage();
+            System.exit( 0 );
+        }
+        else if ( "-h".equals( args[0].toLowerCase() ) )
+        {
+            printHelp();
+            System.exit( 0 );
+        }
+        else if( "-template".equals( args[0] ) )
+        {
+            printTemplate();
+            System.exit( 0 );
+        }
+
-            String[] args = inputArgs;
-
-            if ( args.length < 2 )
-            {
-                printUsage();
-                System.exit( 0 );
-            }
-
-            boolean reportOnly = false;
-            if ( args.length > 2 )
-            {
-                reportOnly = Boolean.valueOf( args[2] ).booleanValue();
-            }
+            RepositoryCleanerConfiguration config = buildConfig(args[0]);
-                cleaner.cleanRepository( args[0], args[1], reportOnly );
+                cleaner.cleanRepository( config );
+    private static RepositoryCleanerConfiguration buildConfig( String configPath ) throws IOException
+    {
+        Properties props = new Properties();
+        FileInputStream input = null;
+        try
+        {
+            input = new FileInputStream(configPath);
+            props.load(input);
+        }
+        finally
+        {
+            IOUtil.close(input);
+        }
+        
+        RepositoryCleanerConfiguration config = new RepositoryCleanerConfiguration();
+        config.setSourceRepositoryPath(props.getProperty("sourceRepositoryPath"));
+        config.setSourceRepositoryLayout(props.getProperty("sourceRepositoryLayout", "legacy"));
+        config.setSourcePomVersion(props.getProperty("sourcePomVersion", "v3"));
+        config.setTargetRepositoryPath(props.getProperty("targetRepositoryPath"));
+        config.setTargetRepositoryLayout(props.getProperty("targetRepositoryLayout", "default"));
+        config.setReportsPath(props.getProperty("reportsPath"));
+        config.setReportOnly(Boolean.valueOf(props.getProperty("reportOnly")).booleanValue());
+        
+        return config;
+    }
+
+    private static void printHelp()
+    {
+        System.out.println("repoclean: Repository Cleaner/Converter.\n\n" +
+                "Usage: repoclean -h|-template|<configuration-properties-file>\n\n" +
+                "Where the configuration properfies file can contain the following options:\n" +
+                "---------------------------------------------------------------------------\n" +
+                "sourceRepositoryPath=/path/to/repository/root #[REQUIRED]\n" +
+                "sourceRepositoryLayout=[legacy|default] #[DEFAULT: legacy]\n" +
+                "sourcePomType=[v3|v4] #[DEFAULT: v3]\n" +
+                "targetRepositoryPath=/path/to/repository/root #[REQUIRED]\n" +
+                "targetRepositoryLayout=[legacy|default] #[DEFAULT: default]\n" +
+                "reportsPath=/path/to/reports/directory #[REQUIRED]\n" +
+                "reportOnly=[true|false] #[REQUIRED]\n" +
+                "\n");
+    }
+
+    private static void printTemplate()
+    {
+        System.out.println(
+                "# ---------------------------------------------------------------------------\n" +
+                "# repoclean: Repository Cleaner/Converter.\n" +
+                "# This configuration auto-generated on: " + new java.util.Date() + "\n" +
+                "# ---------------------------------------------------------------------------\n\n" +
+                "# [REQUIRED OPTIONS]\n" +
+                "sourceRepositoryPath=/path/to/repository/root\n" +
+                "targetRepositoryPath=/path/to/repository/root\n" +
+                "reportsPath=/path/to/reports/directory\n" +
+                "reportOnly=[true|false]\n\n" +
+                "# [DEFAULT VALUE: legacy]\n" +
+                "#sourceRepositoryLayout=[legacy|default]\n\n" +
+                "# [DEFAULT VALUE: v3]\n" +
+                "#sourcePomType=[v3|v4]\n\n" +
+                "# [DEFAULT VALUE: default]\n" +
+                "#targetRepositoryLayout=[legacy|default]\n" +
+                "\n");
+    }
+
-        System.out.println( "No repository directory specified.\n\n" + "Usage:\n"
+        System.out.println( "Required input is missing.\n\n" + "Usage:\n"
-            + "repoclean <repository-path> <reports-path> [<report-only (use true|false)>]\n" );
+            + "repoclean -h|-template|<configuration-properties-file>\n" );
