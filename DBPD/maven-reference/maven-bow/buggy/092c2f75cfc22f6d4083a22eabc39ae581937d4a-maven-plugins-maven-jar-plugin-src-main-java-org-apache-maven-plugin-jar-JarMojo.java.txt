convert archive mojos to new execute(). More work is required to reuse the common fields.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163659 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.plugin.PluginExecutionRequest;
-import org.apache.maven.plugin.PluginExecutionResponse;
+import org.apache.maven.plugin.PluginExecutionException;
+import org.apache.maven.project.MavenProject;
+import org.codehaus.plexus.archiver.jar.Manifest;
- * @parameter name="package"
+ * @parameter name="packageName"
+     * @todo File
+     */
+    private String basedir;
+
+    private String jarName;
+
+    private String outputDirectory;
+
+    private static final String[] DEFAULT_EXCLUDES = new String[]{"**/package.html"};
+
+    private static final String[] DEFAULT_INCLUDES = new String[]{"**/**"};
+
+    private MavenProject project;
+
+    private String manifest;
+
+    private String mainClass;
+
+    private String packageName;
+
+    /**
+     * @todo boolean instead
+     */
+    private String addClasspath;
+
+    /**
+     * @todo boolean instead
+     */
+    private String addExtensions;
+
+    /**
+     * @todo boolean instead
+     */
+    private String index;
+
+    /**
+     * @todo boolean instead
+     */
+    private String compress;
+
+    /**
-    public void execute( PluginExecutionRequest request, PluginExecutionResponse response )
-        throws Exception
+    public void execute()
+        throws PluginExecutionException
-        // ----------------------------------------------------------------------
-        //
-        // ----------------------------------------------------------------------
-
-        File basedir = new File( (String) request.getParameter( "basedir" ) );
-
-        String outputDirectory = (String) request.getParameter( "outputDirectory" );
-
-        String jarName = (String) request.getParameter( "jarName" );
-
-        // ----------------------------------------------------------------------
-        //
-        // ----------------------------------------------------------------------
-
-        archiver.getArchiver().addDirectory( new File( outputDirectory ), new String[]{"**/**"},
-                                             new String[]{"**/package.html"} );
+        try
+        {
+            archiver.getArchiver().addDirectory( new File( outputDirectory ), DEFAULT_INCLUDES, DEFAULT_EXCLUDES );
-        // create archive
-        archiver.createArchive( request );
+            // create archive
+            Manifest configuredManifest = archiver.getManifest( project, mainClass, packageName,
+                                                                convertBoolean( addClasspath ),
+                                                                convertBoolean( addExtensions ) );
+            archiver.createArchive( project, manifest, convertBoolean( compress ), convertBoolean( index ),
+                                    configuredManifest );
+        }
+        catch ( Exception e )
+        {
+            // TODO: improve error handling
+            throw new PluginExecutionException( "Error assembling EJB", e );
+        }
+    }
+
+    private static boolean convertBoolean( String s )
+    {
+        return Boolean.valueOf( s ).booleanValue();
