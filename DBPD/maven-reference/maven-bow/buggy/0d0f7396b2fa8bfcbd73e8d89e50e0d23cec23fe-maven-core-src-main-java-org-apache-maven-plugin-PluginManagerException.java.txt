Cleaning up exception wrapping to allow better reporting of errors to end users. Also implementing the beginnings of a new error reporter, and bumping the version of plexus-container-default up to 1.0-alpha-33-SNAPSHOT to improve the accessibility to ClassRealm info for ComponentLookupException.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@584343 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.versioning.InvalidVersionSpecificationException;
+import org.apache.maven.model.Plugin;
+import org.apache.maven.plugin.descriptor.MojoDescriptor;
+import org.codehaus.plexus.PlexusContainerException;
+import org.codehaus.plexus.classworlds.realm.NoSuchRealmException;
+import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
+
-    public PluginManagerException( String message )
+
+    private final String pluginGroupId;
+
+    private final String pluginArtifactId;
+
+    private final String pluginVersion;
+
+    private String goal;
+
+    protected PluginManagerException( Plugin plugin,
+                                   String message,
+                                   PlexusContainerException cause )
-        super( message );
+        super( message, cause );
+
+        pluginGroupId = plugin.getGroupId();
+        pluginArtifactId = plugin.getArtifactId();
+        pluginVersion = plugin.getVersion();
-    public PluginManagerException( String message, Exception e )
+    protected PluginManagerException( Plugin plugin, String message,
+                                   NoSuchRealmException cause )
-        super( message, e );
+        super( message, cause );
+
+        pluginGroupId = plugin.getGroupId();
+        pluginArtifactId = plugin.getArtifactId();
+        pluginVersion = plugin.getVersion();
+    }
+
+    protected PluginManagerException( MojoDescriptor mojoDescriptor,
+                                   String message,
+                                   ComponentLookupException cause )
+    {
+        super( message, cause );
+        pluginGroupId = mojoDescriptor.getPluginDescriptor().getGroupId();
+        pluginArtifactId = mojoDescriptor.getPluginDescriptor().getArtifactId();
+        pluginVersion = mojoDescriptor.getPluginDescriptor().getVersion();
+        goal = mojoDescriptor.getGoal();
+    }
+
+    public PluginManagerException( Plugin plugin,
+                                   InvalidVersionSpecificationException cause )
+    {
+        super( cause );
+
+        pluginGroupId = plugin.getGroupId();
+        pluginArtifactId = plugin.getArtifactId();
+        pluginVersion = plugin.getVersion();
+    }
+
+    public String getPluginGroupId()
+    {
+        return pluginGroupId;
+    }
+
+    public String getPluginArtifactId()
+    {
+        return pluginArtifactId;
+    }
+
+    public String getPluginVersion()
+    {
+        return pluginVersion;
+    }
+
+    public String getGoal()
+    {
+        return goal;
