PR: MNG-613
reorganise in preparation for generalised repository metadata

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@264091 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.repository.metadata.RepositoryMetadata;
+    private static final char PATH_SEPARATOR = '/';
+
+    private static final char GROUP_SEPARATOR = '.';
+
+    private static final char ARTIFACT_SEPARATOR = '-';
-        path.append( formatAsDirectory( artifact.getGroupId() ) ).append( '/' );
-        path.append( artifact.getArtifactId() ).append( '/' );
-        path.append( artifact.getBaseVersion() ).append( '/' );
-        path.append( artifact.getArtifactId() ).append( '-' ).append( artifact.getVersion() );
+        path.append( formatAsDirectory( artifact.getGroupId() ) ).append( PATH_SEPARATOR );
+        path.append( artifact.getArtifactId() ).append( PATH_SEPARATOR );
+        path.append( artifact.getBaseVersion() ).append( PATH_SEPARATOR );
+        path.append( artifact.getArtifactId() ).append( ARTIFACT_SEPARATOR ).append( artifact.getVersion() );
-            path.append( '-' ).append( artifact.getClassifier() );
+            path.append( ARTIFACT_SEPARATOR ).append( artifact.getClassifier() );
-            path.append( '.' ).append( artifactHandler.getExtension() );
+            path.append( GROUP_SEPARATOR ).append( artifactHandler.getExtension() );
-    public String pathOfMetadata( ArtifactMetadata metadata )
+    public String pathOfArtifactMetadata( ArtifactMetadata metadata )
-        path.append( formatAsDirectory( metadata.getGroupId() ) ).append( '/' );
-        path.append( metadata.getArtifactId() ).append( '/' );
+        path.append( formatAsDirectory( metadata.getGroupId() ) ).append( PATH_SEPARATOR );
+        path.append( metadata.getArtifactId() ).append( PATH_SEPARATOR );
-            path.append( metadata.getBaseVersion() ).append( '/' );
+            path.append( metadata.getBaseVersion() ).append( PATH_SEPARATOR );
-    public String formatAsDirectory( String directory )
+    public String pathOfRepositoryMetadata( RepositoryMetadata metadata )
-        return directory.replace( '.', '/' );
-    }
-    
-    public String formatAsFile( String file )
-    {
-        int lastSlash = file.lastIndexOf('/');
-        
-        if( lastSlash > -1 )
+        String file = metadata.getRepositoryPath();
+
+        String result;
+        int lastSlash = file.lastIndexOf( PATH_SEPARATOR );
+
+        if ( lastSlash > -1 )
-            
+
-            
-            return dirPart.replace('.', '/') + filePart;
+
+            result = formatAsDirectory( dirPart ) + filePart;
-            return file;
+            result = file;
+        return result;
+
+    private String formatAsDirectory( String directory )
+    {
+        return directory.replace( GROUP_SEPARATOR, PATH_SEPARATOR );
+    }
+
