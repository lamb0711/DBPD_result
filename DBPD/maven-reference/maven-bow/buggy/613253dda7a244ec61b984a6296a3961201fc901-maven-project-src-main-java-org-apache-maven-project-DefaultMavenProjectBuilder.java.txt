o trying to use the request/result pattern everywhere
o remove another use of ResolutionGroup in the core
o remove all the deprecated methods in the resolver, we'll see what breaks and we'll restore in maven-compat


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@749407 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.*;
-import java.text.SimpleDateFormat;
-import java.util.*;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.Reader;
+import java.io.StringWriter;
+import java.io.Writer;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
-import org.apache.maven.model.io.xpp3.MavenXpp3Writer;
-import org.apache.maven.project.ProfileManager;
-import org.apache.maven.project.DefaultProfileManager;
-import org.apache.maven.project.ProfileActivationContext;
-import org.apache.maven.project.ProfileActivationException;
+import org.apache.maven.model.io.xpp3.MavenXpp3Writer;
-import org.apache.maven.project.builder.*;
+import org.apache.maven.project.builder.PomClassicDomainModel;
+import org.apache.maven.project.builder.PomClassicDomainModelFactory;
+import org.apache.maven.project.builder.PomInterpolatorTag;
+import org.apache.maven.project.builder.PomTransformer;
+import org.apache.maven.project.builder.ProjectUri;
-import org.apache.maven.shared.model.*;
+import org.apache.maven.shared.model.DomainModel;
+import org.apache.maven.shared.model.InterpolatorProperty;
+import org.apache.maven.shared.model.ModelContainer;
+import org.apache.maven.shared.model.ModelEventListener;
+import org.apache.maven.shared.model.ModelMarshaller;
+import org.apache.maven.shared.model.ModelProperty;
+import org.apache.maven.shared.model.ModelTransformerContext;
+import org.codehaus.plexus.PlexusContainer;
+import org.codehaus.plexus.util.IOUtil;
+import org.codehaus.plexus.util.ReaderFactory;
-import org.codehaus.plexus.util.ReaderFactory;
-import org.codehaus.plexus.util.IOUtil;
+import org.codehaus.plexus.util.xml.pull.MXSerializer;
-import org.codehaus.plexus.util.xml.pull.MXSerializer;
-import org.codehaus.plexus.PlexusContainer;
-    private MavenProject buildWithProfiles( Model model, ProjectBuilderConfiguration config, File projectDescriptor,
-                                        File parentDescriptor )
+    private MavenProject buildWithProfiles( Model model, ProjectBuilderConfiguration config, File projectDescriptor, File parentDescriptor )
-    private void resolve( Artifact artifact, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories )
-        throws IOException
-    {
-        if(localRepository == null || remoteRepositories == null)
-        {
-            throw new IOException("LocalRepository or RemoteRepositories: null");
-        }
-
-        File artifactFile = new File( localRepository.getBasedir(), localRepository.pathOf( artifact ) );
-        artifact.setFile( artifactFile );
-
-        try
-        {
-            repositorySystem.resolve( artifact, localRepository, remoteRepositories );
-        }
-        catch ( ArtifactResolutionException e )
-        {
-            throw new IOException( e.getMessage() );
-        }
-        catch ( ArtifactNotFoundException e )
-        {
-            throw new IOException( e.getMessage() );
-        }
-    }
-
-        resolve( artifactParent, localRepository, remoteRepositories );
+        ArtifactResolutionResult result = repositorySystem.resolve( new ArtifactResolutionRequest( artifactParent, localRepository, remoteRepositories ) );
-            logger.debug( "Parent pom ids do not match: Parent File = " + artifactParent.getFile().getAbsolutePath() +
-                ": Child ID = " + domainModel.getId() );
+            //shane: what does this mean exactly and why does it occur
+            logger.debug( "Parent pom ids do not match: Parent File = " + artifactParent.getFile().getAbsolutePath() + ": Child ID = " + domainModel.getId() );
+            
