Centralized repository handling in AbstractVersionTransformation, for consistency (should fix MNG-527).

Changed download strategy for plugins.xml metadata to download only when non-existent locally or when plugin prefix cannot be located within local metadata. NOTE: This could lead to local-only installs of plugins having their prefix mappings overwritten.

Next step is to change the maven-plugin-plugin.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219615 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.metadata.AbstractVersionArtifactMetadata;
-import org.apache.maven.artifact.metadata.VersionArtifactMetadata;
-import java.io.IOException;
-            metadata = (SnapshotArtifactMetadata) retrieveFromRemoteRepository( artifact, remoteRepository, null );
+            
+            try
+            {
+                metadata = (SnapshotArtifactMetadata) retrieveFromRemoteRepository( artifact, remoteRepository, null );
+            }
+            catch ( ResourceDoesNotExistException e )
+            {
+                // ignore. We'll be creating this metadata if it doesn't exist...
+            }
+
-    protected VersionArtifactMetadata retrieveFromRemoteRepository( Artifact artifact,
-                                                                    ArtifactRepository remoteRepository,
-                                                                    VersionArtifactMetadata localMetadata )
-        throws ArtifactMetadataRetrievalException
+    protected AbstractVersionArtifactMetadata createMetadata( Artifact artifact )
-        SnapshotArtifactMetadata metadata = new SnapshotArtifactMetadata( artifact );
-        try
-        {
-            metadata.retrieveFromRemoteRepository( remoteRepository, wagonManager );
-        }
-        catch ( ResourceDoesNotExistException e )
-        {
-            // No problem...
-            // this just means that there is no snapshot version file, so we keep timestamp = null, build = 0
-        }
-        return metadata;
+        return new SnapshotArtifactMetadata( artifact );
-    protected VersionArtifactMetadata readFromLocalRepository( Artifact artifact, ArtifactRepository localRepository )
-        throws IOException
-    {
-        SnapshotArtifactMetadata metadata = new SnapshotArtifactMetadata( artifact );
-        metadata.readFromLocalRepository( localRepository );
-        return metadata;
-    }
