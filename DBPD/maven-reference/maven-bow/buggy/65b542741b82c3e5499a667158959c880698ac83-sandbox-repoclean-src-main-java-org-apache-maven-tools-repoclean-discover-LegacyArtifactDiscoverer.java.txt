o Added --force CLI support
o Added blacklistedPatterns to configuration file, to enhance the exclusion filter during artifact discovery with a set of non-copy-able files.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163997 13f79535-47bb-0310-9956-ffa450edef68

-    public List discoverArtifacts( File repositoryBase, FileReporter reporter )
+    public List discoverArtifacts( File repositoryBase, FileReporter reporter, String blacklistedPatterns )
+        String[] blacklisted = null;
+        if ( blacklistedPatterns != null && blacklistedPatterns.length() > 0 )
+        {
+            blacklisted = blacklistedPatterns.split( "," );
+        }
+        else
+        {
+            blacklisted = new String[0];
+        }
+        
+        String[] allExcludes = null;
+
+        if ( blacklisted != null && blacklisted.length > 0 )
+        {
+            allExcludes = new String[STANDARD_DISCOVERY_EXCLUDES.length + blacklisted.length ];
+
+            System.arraycopy( STANDARD_DISCOVERY_EXCLUDES, 0, allExcludes, 0, STANDARD_DISCOVERY_EXCLUDES.length );
+            System.arraycopy( blacklisted, 0, allExcludes, STANDARD_DISCOVERY_EXCLUDES.length, blacklisted.length );
+        }
+        else
+        {
+            allExcludes = STANDARD_DISCOVERY_EXCLUDES;
+        }
+        
-        scanner.setExcludes( STANDARD_DISCOVERY_EXCLUDES );
+        scanner.setExcludes( allExcludes );
-        
-        getLogger().debug("After parsing loop, state of buffers:\no  Version Buffer: \'" + versionBuffer + "\'\no  Classifier Buffer: \'" + classifierBuffer + "\'\no Number of Tokens Iterated: " + tokensIterated);
+
+        getLogger().debug(
+                           "After parsing loop, state of buffers:\no  Version Buffer: \'" + versionBuffer
+                               + "\'\no  Classifier Buffer: \'" + classifierBuffer
+                               + "\'\no Number of Tokens Iterated: " + tokensIterated );
-        
-        getLogger().debug("Before repairing bad version and/or cleaning up used tokens, avce token list is:\n" + avceTokenList);
-        
+
+        getLogger().debug(
+                           "Before repairing bad version and/or cleaning up used tokens, avce token list is:\n"
+                               + avceTokenList );
+
-            
+
-            getLogger().debug("Removing " + tokensIterated + " tokens from avce token list.");
-            
+            getLogger().debug( "Removing " + tokensIterated + " tokens from avce token list." );
+
-        
-        getLogger().debug("Now, remainder of avce token list is:\n" + avceTokenList);
+
+        getLogger().debug( "Now, remainder of avce token list is:\n" + avceTokenList );
-                          "Extracted artifact information from path:\n" + "groupId: \'" + groupId + "\'\n"
-                              + "artifactId: \'" + artifactId + "\'\n" + "type: \'" + type + "\'\n" + "version: \'"
-                              + version + "\'\n" + "classifier: \'" + classifierBuffer.toString() + "\'" );
+                           "Extracted artifact information from path:\n" + "groupId: \'" + groupId + "\'\n"
+                               + "artifactId: \'" + artifactId + "\'\n" + "type: \'" + type + "\'\n" + "version: \'"
+                               + version + "\'\n" + "classifier: \'" + classifierBuffer.toString() + "\'" );
-            getLogger().debug("Creating artifact with classifier.");
-            
+            getLogger().debug( "Creating artifact with classifier." );
+
-        getLogger().debug( "Resulting artifact is: " + result.getId() + " and has classifier of: " + result.getClassifier() + "\n\n" );
+        getLogger().debug(
+                           "Resulting artifact is: " + result.getId() + " and has classifier of: "
+                               + result.getClassifier() + "\n\n" );
