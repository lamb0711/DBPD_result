PR: MNG-366
reverse the reference. DoxiaMojo depends on maven-core instead of maven-core depending on the reporting api + doxia

This is not a great solution, but it gets us closer. It is currently not possible, as before, to get the correct set of reports as they are all loaded into the one container and then everything found is returned.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@188690 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.resolver.ArtifactResolutionException;
-import org.apache.maven.reporting.MavenReport;
-import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-        if ( expression.equals( "reports" ) )
-        {
-            String role = PluginManager.ROLE;
-            try
-            {
-                PluginManager pluginManager = (PluginManager) context.lookup( role );
-                List reportPlugins = context.getProject().getReportPlugins();
-                if ( reportPlugins != null )
-                {
-                    for ( Iterator it = reportPlugins.iterator(); it.hasNext(); )
-                    {
-                        org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) it.next();
-                        pluginManager.verifyPlugin( plugin.getGroupId(), plugin.getArtifactId(), plugin.getVersion(),
-                                                    context );
-                    }
-                }
-            }
-            catch ( ComponentLookupException cle )
-            {
-                throw new ExpressionEvaluationException( "Cannot lookup component: " + role + ".", cle );
-            }
-            catch ( ArtifactResolutionException are )
-            {
-                throw new ExpressionEvaluationException( "Cannot resolve component: " + role + ".", are );
-            }
-            catch ( PluginManagerException pme )
-            {
-                throw new ExpressionEvaluationException( "Cannot verify component: " + role + ".", pme );
-            }
-
-            role = MavenReport.ROLE;
-            try
-            {
-                value = context.lookupMap( role );
-                for ( Iterator i = ( (Map) value ).keySet().iterator(); i.hasNext(); )
-                {
-                    String key = (String) i.next();
-                    logger.debug( key + " report is found." );
-                }
-            }
-            catch ( ComponentLookupException cle )
-            {
-                throw new ExpressionEvaluationException( "Cannot lookup component: " + role + ".", cle );
-            }
-        }
-        else if ( expression.equals( "localRepository" ) )
+        if ( expression.equals( "localRepository" ) )
