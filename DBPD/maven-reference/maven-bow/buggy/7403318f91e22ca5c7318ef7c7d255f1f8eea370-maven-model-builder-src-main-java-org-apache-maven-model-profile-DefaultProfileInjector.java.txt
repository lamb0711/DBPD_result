[MNG-4975] [regression] plugin executions injected from profile run before instead of after existing executions in the POM

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1059192 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.PluginExecution;
+import org.apache.maven.model.ReportSet;
- *
+ * 
+        protected void mergePlugin_Executions( Plugin target, Plugin source, boolean sourceDominant,
+                                               Map<Object, Object> context )
+        {
+            List<PluginExecution> src = source.getExecutions();
+            if ( !src.isEmpty() )
+            {
+                List<PluginExecution> tgt = target.getExecutions();
+                Map<Object, PluginExecution> merged =
+                    new LinkedHashMap<Object, PluginExecution>( ( src.size() + tgt.size() ) * 2 );
+
+                for ( PluginExecution element : tgt )
+                {
+                    Object key = getPluginExecutionKey( element );
+                    merged.put( key, element );
+                }
+
+                for ( PluginExecution element : src )
+                {
+                    Object key = getPluginExecutionKey( element );
+                    PluginExecution existing = merged.get( key );
+                    if ( existing != null )
+                    {
+                        mergePluginExecution( existing, element, sourceDominant, context );
+                    }
+                    else
+                    {
+                        merged.put( key, element );
+                    }
+                }
+
+                target.setExecutions( new ArrayList<PluginExecution>( merged.values() ) );
+            }
+        }
+
+        @Override
+        @Override
+        protected void mergeReportPlugin_ReportSets( ReportPlugin target, ReportPlugin source, boolean sourceDominant,
+                                                     Map<Object, Object> context )
+        {
+            List<ReportSet> src = source.getReportSets();
+            if ( !src.isEmpty() )
+            {
+                List<ReportSet> tgt = target.getReportSets();
+                Map<Object, ReportSet> merged = new LinkedHashMap<Object, ReportSet>( ( src.size() + tgt.size() ) * 2 );
+
+                for ( ReportSet element : tgt )
+                {
+                    Object key = getReportSetKey( element );
+                    merged.put( key, element );
+                }
+
+                for ( ReportSet element : src )
+                {
+                    Object key = getReportSetKey( element );
+                    ReportSet existing = merged.get( key );
+                    if ( existing != null )
+                    {
+                        mergeReportSet( existing, element, sourceDominant, context );
+                    }
+                    else
+                    {
+                        merged.put( key, element );
+                    }
+                }
+
+                target.setReportSets( new ArrayList<ReportSet>( merged.values() ) );
+            }
+        }
+
