Adding the notion of a build-context, and several build-context classes that can be used: ProjectBuildContext, which contains lineage and current-project info, ExecutionBuildContext, which contains the information in the original MavenExecutionRequest, and SystemBuildContext, which contains things like System properties...these use the BuildContextManager to store and retrieve their info from the core container's Context object.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@497911 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Properties;
+import org.apache.maven.context.SystemBuildContext;
-import org.codehaus.plexus.context.Context;
-import org.codehaus.plexus.context.ContextException;
-import org.codehaus.plexus.personality.plexus.lifecycle.phase.Contextualizable;
-    extends DetectedProfileActivator implements Contextualizable, LogEnabled
+    extends DetectedProfileActivator 
+    implements LogEnabled
-    private Context context;
-    public void contextualize(Context context) throws ContextException 
-    {
-        this.context = context;
-    }
-    
-        Properties properties = null;
-        if ( context.contains( "SystemProperties" ) )
-        {
-            try
-            {
-                properties = (Properties) context.get("SystemProperties");
-            }
-            catch ( ContextException e )
-            {
-                getLogger().debug( "Failed to get system properties cache from context.", e );
-            }
-        }
-        
-        if ( properties == null )
-        {
-            properties = System.getProperties();
-        }
-        
+            SystemBuildContext systemBuildContext = SystemBuildContext.getSystemBuildContext( getBuildContextManager(), true );
+            
-            String sysValue = properties != null ? properties.getProperty( name ) : null;
+            String sysValue = systemBuildContext.getSystemProperty( name );
