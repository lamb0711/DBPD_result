PR: MNG-613
reorganise in preparation for generalised repository metadata

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@264091 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.plugin.mapping.MavenPluginMappingBuilder;
-import org.apache.maven.plugin.mapping.PluginMappingManagementException;
-import org.apache.maven.plugin.mapping.PluginMappingManager;
-    protected MavenPluginMappingBuilder pluginMappingBuilder;
-
+
+    protected PluginMappingManager pluginMappingManager;
+
-        PluginMappingManager mappingManager = getPluginMappingManager( session, project );
-
-        Plugin plugin = mappingManager.getByPrefix( prefix );
-
-        if ( plugin == null && !mappingManager.isRefreshed() )
+        // TODO: since this is only used in the lifecycle executor, maybe it should be moved there? There is no other
+        // use for the mapping manager in here
+        try
-            getLogger().info(
-                "Refreshing plugin mapping metadata; looking for plugin with prefix: \'" + prefix + "\'." );
-
-            try
-            {
-                mappingManager = pluginMappingBuilder.refreshPluginMappingManager( session.getPluginMappingManager(),
-                                                                                   project.getPluginArtifactRepositories(),
-                                                                                   session.getLocalRepository() );
-            }
-            catch ( RepositoryMetadataManagementException e )
-            {
-                throw new PluginManagerException( "Error refreshing plugin mappings.", e );
-            }
-            catch ( PluginMappingManagementException e )
-            {
-                throw new PluginManagerException( "Error refreshing plugin mappings.", e );
-            }
-
-            plugin = mappingManager.getByPrefix( prefix );
+            return pluginMappingManager.getByPrefix( prefix, session.getSettings().getPluginGroups(),
+                                                     project.getPluginArtifactRepositories(),
+                                                     session.getLocalRepository() );
-
-        return plugin;
+        catch ( RepositoryMetadataManagementException e )
+        {
+            throw new PluginManagerException( "Error getting plugin prefix", e );
+        }
-        artifacts.add( "maven-plugin-mapping" );
+        artifacts.add( "maven-repository-metadata" );
-    private PluginMappingManager getPluginMappingManager( MavenSession session, MavenProject project )
-        throws PluginManagerException
-    {
-        PluginMappingManager mappingManager = session.getPluginMappingManager();
-
-        // don't reassemble the plugin mappings if the session has already been configured with them.
-        if ( mappingManager == null )
-        {
-            try
-            {
-                List pluginGroupIds = session.getSettings().getPluginGroups();
-                List pluginRepositories = project.getPluginArtifactRepositories();
-                ArtifactRepository localRepository = session.getLocalRepository();
-
-                mappingManager = pluginMappingBuilder.loadPluginMappings( pluginGroupIds, pluginRepositories,
-                                                                          localRepository );
-
-                // lazily configure this on the session.
-                session.setPluginMappingManager( mappingManager );
-            }
-            catch ( RepositoryMetadataManagementException e )
-            {
-                throw new PluginManagerException( "Cannot load plugin mappings.", e );
-            }
-            catch ( PluginMappingManagementException e )
-            {
-                throw new PluginManagerException( "Cannot load plugin mappings.", e );
-            }
-        }
-
-        return mappingManager;
-    }
