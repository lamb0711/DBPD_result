Cleaning up exception wrapping to allow better reporting of errors to end users. Also implementing the beginnings of a new error reporter, and bumping the version of plexus-container-default up to 1.0-alpha-33-SNAPSHOT to improve the accessibility to ClassRealm info for ComponentLookupException.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@584343 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.InvalidRepositoryException;
+import org.apache.maven.artifact.resolver.ArtifactNotFoundException;
+import org.apache.maven.artifact.resolver.ArtifactResolutionException;
+import org.apache.maven.artifact.versioning.InvalidVersionSpecificationException;
+import org.apache.maven.profiles.activation.ProfileActivationException;
+import org.apache.maven.project.artifact.InvalidDependencyVersionException;
+import org.apache.maven.project.interpolation.ModelInterpolationException;
+import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
+
+import java.io.IOException;
+
-    public ProjectBuildingException( String projectId, String message )
+    private String pomLocation;
+
+    public ProjectBuildingException( String projectId,
+                                     String message )
-    public ProjectBuildingException( String projectId, String message, Throwable cause )
+    protected ProjectBuildingException( String projectId,
+                                        String message,
+                                        String pomLocation )
+    {
+        super( message );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     String pomLocation,
+                                     ProfileActivationException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     String pomLocation,
+                                     IOException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     String pomLocation,
+                                     XmlPullParserException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
+    }
+
+    protected ProjectBuildingException( String projectId,
+                                     String message,
+                                     XmlPullParserException cause )
-    
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     String pomLocation,
+                                     InvalidRepositoryException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     InvalidRepositoryException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     ArtifactResolutionException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     ArtifactNotFoundException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     String pomLocation,
+                                     ArtifactResolutionException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     String pomLocation,
+                                     ArtifactNotFoundException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     String pomLocation,
+                                     InvalidVersionSpecificationException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
+    }
+
+    public ProjectBuildingException( String projectId,
+                                     String message,
+                                     String pomLocation,
+                                     InvalidDependencyVersionException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
+    }
+
+    protected ProjectBuildingException( String projectId,
+                                        String message,
+                                        String pomLocation,
+                                        ModelInterpolationException cause )
+    {
+        super( message, cause );
+        this.projectId = projectId;
+        this.pomLocation = pomLocation;
+    }
+
+    public String getPomLocation()
+    {
+        return pomLocation;
+    }
+
-    public String getMessage() 
+    public String getMessage()
-        return super.getMessage() + " for project " + this.projectId;
+        return super.getMessage() + " for project " + projectId
+               + ( ( pomLocation == null ? "" : " at " + pomLocation ) );
+
