o Introduced ModelBuilder component that now hosts most of the logic from the project builder to construct the effective model. With maven-model-builder we now should have a rather slim module that tools can re-use for building models. The project builder is simply layered on top of the model builder.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@780627 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.DefaultModelBuildingRequest;
+import org.apache.maven.model.ModelBuildingRequest;
-    
-    private Properties executionProperties;
-    
-    private boolean processPlugins = true;
-    private boolean lenientValidation;
+    private ModelBuildingRequest modelBuildingRequest = new DefaultModelBuildingRequest().setProcessPlugins( true );
-    private List<String> activeProfileIds;
-    
-    private List<String> inactiveProfileIds;
-    
-    private List<Profile> profiles;
-        
-        if ( executionProperties == null )
-        {
-            executionProperties = new Properties();
-        }
-        return executionProperties;
+        return modelBuildingRequest.getExecutionProperties();
-        this.executionProperties = executionProperties;
+        modelBuildingRequest.setExecutionProperties( executionProperties );
-        return processPlugins;
+        return modelBuildingRequest.isProcessPlugins();
-        this.processPlugins = processPlugins;
+        modelBuildingRequest.setProcessPlugins( processPlugins );
-        this.lenientValidation = lenientValidation;
+        modelBuildingRequest.setLenientValidation( lenientValidation );
-        return lenientValidation;
+        return modelBuildingRequest.istLenientValidation();
-        if ( activeProfileIds == null )
-        {
-            activeProfileIds = new ArrayList<String>();
-        }
-        return activeProfileIds;        
+        return modelBuildingRequest.getActiveProfileIds();
-        this.activeProfileIds = activeProfileIds;      
+        modelBuildingRequest.setActiveProfileIds( activeProfileIds );
-        if ( inactiveProfileIds == null )
-        {
-            inactiveProfileIds = new ArrayList<String>();
-        }
-        return inactiveProfileIds;
+        return modelBuildingRequest.getInactiveProfileIds();
-        this.inactiveProfileIds = inactiveProfileIds;
+        modelBuildingRequest.setInactiveProfileIds( inactiveProfileIds );
-        this.profiles = profiles;
+        modelBuildingRequest.setProfiles( profiles );
-        if ( profiles == null )
-        {
-            profiles = new ArrayList<Profile>();
-        }
-        
-        profiles.add( profile );
+        modelBuildingRequest.getProfiles().add(profile);
-        if ( profiles == null )
-        {
-            profiles = new ArrayList<Profile>();
-        }
-        return profiles;
+        return modelBuildingRequest.getProfiles();
+    }
+
+    public ModelBuildingRequest getModelBuildingRequest()
+    {
+        return modelBuildingRequest;
