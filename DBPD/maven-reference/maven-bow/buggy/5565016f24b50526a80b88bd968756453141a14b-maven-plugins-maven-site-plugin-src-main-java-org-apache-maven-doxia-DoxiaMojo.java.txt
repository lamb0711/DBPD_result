refactor duplicate code

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219990 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.ReportPlugin;
-    /** Patterns which should be excluded by default. */
-    private static final String[] DEFAULT_EXCLUDES = new String[] {
+    /**
+     * Patterns which should be excluded by default.
+     */
+    private static final String[] DEFAULT_EXCLUDES = new String[]{
-        "**/.DS_Store" };
-    
+        "**/.DS_Store"};
+
-                throw new MojoExecutionException( templateDirectory + " isn't a valid URL." );
+                throw new MojoExecutionException( templateDirectory + " isn't a valid URL.", e );
-                    siteRenderer.render( generatedSiteFile, localeOutputDirectory,
-                                         getSiteDescriptor( reports, locale ), template, attributes, locale );
+                    siteRenderer.render( generatedSiteFile, localeOutputDirectory, getSiteDescriptor( reports, locale ),
+                                         template, attributes, locale );
-                
+
-                if ( !indexExists( siteDirectoryFile ) ) 
+                if ( !indexExists( siteDirectoryFile ) )
-                
-                siteRenderer.render( siteDirectoryFile, localeOutputDirectory,
-                                     getSiteDescriptor( reports, locale ), template, attributes, locale );
-                siteRenderer.render( siteDirectoryFile, localeOutputDirectory,
-                                     getSiteDescriptor( reports, locale ), template, attributes, locale );
+                siteRenderer.render( siteDirectoryFile, localeOutputDirectory, getSiteDescriptor( reports, locale ),
+                                     template, attributes, locale );
+
+                siteRenderer.render( siteDirectoryFile, localeOutputDirectory, getSiteDescriptor( reports, locale ),
+                                     template, attributes, locale );
-                throw new MojoExecutionException(
-                    "'" + report.getCategoryName() + "' category define for " + report.getName( defaultLocale ) +
-                        " mojo isn't valid." );
+                throw new MojoExecutionException( "'" + report.getCategoryName() + "' category define for " +
+                    report.getName( defaultLocale ) + " mojo isn't valid." );
-        buffer.append(
-            "    <item name=\"" + i18n.getString( "site-plugin", locale, "report.menu.about" ) + " " +
-                project.getName() + "\" href=\"/index.html\"/>\n" );
+        buffer.append( "    <item name=\"" );
+        buffer.append( i18n.getString( "site-plugin", locale, "report.menu.about" ) );
+        buffer.append( " " );
+        buffer.append( project.getName() );
+        buffer.append( "\" href=\"/index.html\"/>\n" );
-        if ( projectInfos.size() > 0 )
-        {
-            buffer.append(
-                "    <item name=\"" + i18n.getString( "site-plugin", locale, "report.menu.projectinformation" ) +
-                    "\" href=\"/project-info.html\" collapse=\"true\">\n" );
-
-            for ( Iterator i = projectInfos.iterator(); i.hasNext(); )
-            {
-                MavenReport report = (MavenReport) i.next();
-                buffer.append(
-                    "        <item name=\"" + report.getName( locale ) + "\" href=\"/" + report.getOutputName() +
-                        ".html\"/>\n" );
-            }
-
-            buffer.append( "    </item>\n" );
-        }
-
-        if ( projectReports.size() > 0 )
-        {
-            buffer.append(
-                "    <item name=\"" + i18n.getString( "site-plugin", locale, "report.menu.projectreports" ) +
-                    "\" href=\"/maven-reports.html\" collapse=\"true\">\n" );
-
-            for ( Iterator i = projectReports.iterator(); i.hasNext(); )
-            {
-                MavenReport report = (MavenReport) i.next();
-                buffer.append(
-                    "        <item name=\"" + report.getName( locale ) + "\" href=\"/" + report.getOutputName() +
-                        ".html\"/>\n" );
-            }
-
-            buffer.append( "    </item>\n" );
-        }
+        writeReportSubMenu( projectInfos, buffer, locale, "report.menu.projectinformation", "project-info.html" );
+        writeReportSubMenu( projectReports, buffer, locale, "report.menu.projectreports", "maven-reports.html" );
+    private void writeReportSubMenu( List reports, StringBuffer buffer, Locale locale, String key, String indexFilename )
+    {
+        if ( reports.size() > 0 )
+        {
+            buffer.append( "    <item name=\"" );
+            buffer.append( i18n.getString( "site-plugin", locale, key ) );
+            buffer.append( "\" href=\"/" );
+            buffer.append( indexFilename );
+            buffer.append( "\" collapse=\"true\">\n" );
+
+            for ( Iterator i = reports.iterator(); i.hasNext(); )
+            {
+                MavenReport report = (MavenReport) i.next();
+                buffer.append( "        <item name=\"" );
+                buffer.append( report.getName( locale ) );
+                buffer.append( "\" href=\"/" );
+                buffer.append( report.getOutputName() );
+                buffer.append( ".html\"/>\n" );
+            }
+
+            buffer.append( "    </item>\n" );
+        }
+    }
+
-        String siteDescriptorContent = "";
+        String siteDescriptorContent;
-                
+
-     * 
+     *
-        File[] directories = siteDirectoryFile.listFiles( new FileFilter() {
-            public boolean accept(File file) {
-                for ( int i = 0; i < DEFAULT_EXCLUDES.length; i++) {
-                    if ( SelectorUtils.matchPath( DEFAULT_EXCLUDES[i], file.getName() ) ) {
+        File[] directories = siteDirectoryFile.listFiles( new FileFilter()
+        {
+            public boolean accept( File file )
+            {
+                for ( int i = 0; i < DEFAULT_EXCLUDES.length; i++ )
+                {
+                    if ( SelectorUtils.matchPath( DEFAULT_EXCLUDES[i], file.getName() ) )
+                    {
-        });
-        
-        if ( ( directories == null ) || ( directories.length  == 0 ) )
+        } );
+
+        if ( directories == null || directories.length == 0 )
-        
+
-            
-            if ( indexes.size() > 1 ) 
+
+            if ( indexes.size() > 1 )
-                getLog().warn( "More than one index file exists in this directory [" + directories[i].getAbsolutePath() + "]." );
+                getLog().warn(
+                    "More than one index file exists in this directory [" + directories[i].getAbsolutePath() + "]." );
-            if ( indexes.size() == 1 ) 
+            if ( indexes.size() == 1 )
-                getLog().debug( "Found [" + indexes.get(0) + "]" );
+                getLog().debug( "Found [" + indexes.get( 0 ) + "]" );
-                indexFound.add(indexes.get(0));
+                indexFound.add( indexes.get( 0 ) );
-        if ( indexFound.size() > 1 ) 
+        if ( indexFound.size() > 1 )
-        if ( indexFound.size() == 1 ) 
+        if ( indexFound.size() == 1 )
-        
+
-    
+
-     * 
-     * @param siteDescriptor 
-     * @param locale 
-     * @throws Exception 
+     *
+     * @param siteDescriptor
+     * @param locale
+     * @throws Exception
-    
+
-                org.apache.maven.model.ReportPlugin reportPlugin = (org.apache.maven.model.ReportPlugin) it.next();
+                ReportPlugin reportPlugin = (ReportPlugin) it.next();
-                        reportsList = pluginManager.getReports( reportPlugin,
-                                                                null,
-                                                                project,
-                                                                session,
-                                                                localRepository );
+                        reportsList = pluginManager.getReports( reportPlugin, null, project, session, localRepository );
-                            reportsList = pluginManager.getReports( reportPlugin,
-                                                                    reportSet,
-                                                                    project,
-                                                                    session,
+                            reportsList = pluginManager.getReports( reportPlugin, reportSet, project, session,
