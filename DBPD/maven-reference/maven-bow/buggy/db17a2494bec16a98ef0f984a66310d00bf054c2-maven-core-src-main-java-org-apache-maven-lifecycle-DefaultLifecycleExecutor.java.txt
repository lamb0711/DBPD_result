o adding capability to the lifecycle executor to merge in executions which contain
  configurations for external plugins. in this particular i've made the adjustments
  so that the corbertura plugin can tell the surefire plugin to fork. not ideal, but
  it will work until we figure out a more elegant solution.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@356065 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.util.StringUtils;
-                
+
-                
+
-                        
+
-                        
+
-        
+
-                            MojoDescriptor desc = getMojoDescriptor( pluginDescriptor, goal );
+                            PluginDescriptor lifecyclePluginDescriptor;
+                            String lifecycleGoal;
+
+                            // Here we are looking to see if we have a mojo from an external plugin.
+                            // If we do then we need to lookup the plugin descriptor for the externally
+                            // referenced plugin so that we can overly the execution into the lifecycle.
+                            // An example of this is the corbertura plugin that needs to call the surefire
+                            // plugin in forking mode.
+                            //
+                            //<phase>
+                            //  <id>test</id>
+                            //  <executions>
+                            //    <execution>
+                            //      <goals>
+                            //        <goal>org.apache.maven.plugins:maven-surefire-plugin:test</goal>
+                            //      </goals>
+                            //      <configuration>
+                            //        <classesDirectory>${project.build.directory}/generated-classes/cobertura</classesDirectory>
+                            //        <ignoreFailures>true</ignoreFailures>
+                            //        <forkMode>once</forkMode>
+                            //      </configuration>
+                            //    </execution>
+                            //  </executions>
+                            //</phase>
+
+                            // ----------------------------------------------------------------------
+                            //
+                            // ----------------------------------------------------------------------
+
+                            if ( goal.indexOf( ":" ) > 0 )
+                            {
+                                String[] s = StringUtils.split( goal, ":" );
+
+                                String groupId = s[0];
+                                String artifactId = s[1];
+                                String externalGoal = s[2];
+                                lifecycleGoal = externalGoal;
+
+                                try
+                                {
+                                    lifecyclePluginDescriptor = pluginManager.getPluginDescriptor( groupId,
+                                                                                                   artifactId,
+                                                                                                   project,
+                                                                                                   session.getSettings(),
+                                                                                                   session.getLocalRepository() );
+                                }
+                                catch ( Exception ex )
+                                {
+                                    throw new LifecycleExecutionException( ex );
+                                }
+                            }
+                            else
+                            {
+                                lifecyclePluginDescriptor = pluginDescriptor;
+                                lifecycleGoal = goal;
+                            }
+
+                            MojoDescriptor desc = getMojoDescriptor( lifecyclePluginDescriptor, lifecycleGoal );
-                            addToLifecycleMappings( lifecycleMappings, phase.getId(), mojoExecution,
-                                                    session.getSettings() );
+                            addToLifecycleMappings( lifecycleMappings, phase.getId(), mojoExecution, session.getSettings() );
-            
+
-                
+
-                    
+
-                
+
-    private void addToLifecycleMappings( Map lifecycleMappings, String phase, MojoExecution mojoExecution,
-                                         Settings settings )
+    private void addToLifecycleMappings( Map lifecycleMappings, String phase, MojoExecution mojoExecution, Settings settings )
-        
+
