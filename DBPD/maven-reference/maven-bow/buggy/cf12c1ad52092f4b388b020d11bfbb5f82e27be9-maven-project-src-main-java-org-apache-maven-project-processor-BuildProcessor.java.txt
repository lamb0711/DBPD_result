Added support for hierarchical model inheritance.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@755131 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.BuildBase;
+    
+    public void processWithProfile( BuildBase build, Model target )    
+    {
+        processBuild(null, build, target, false, true );   
+    }
+    
+    private void processBuild(Model p, BuildBase build, Model t, boolean isChildMostSpecialized, boolean isProfile)
+    {
+
+        if(t.getBuild() == null)
+        {
+            t.setBuild( new Build() );
+        }    
+        
+        PluginsProcessor pluginsProcessor = new PluginsProcessor();
+        if(build == null && !( p == null || p.getBuild() == null))
+        {
+            copy(p.getBuild(), t.getBuild(), isProfile);   
+            pluginsProcessor.process( p.getBuild().getPlugins(), null, t.getBuild().getPlugins(), isChildMostSpecialized );  
+            inheritManagement(p.getBuild().getPluginManagement(), null, t.getBuild());
+        }
+        else if(build != null && !( p == null || p.getBuild() == null))
+        {
+            copy(build, t.getBuild(), isProfile);
+            copy(p.getBuild(), t.getBuild(), isProfile); 
+
+            pluginsProcessor.process( p.getBuild().getPlugins(), build.getPlugins(), t.getBuild().getPlugins(), isChildMostSpecialized );  
+            inheritManagement(p.getBuild().getPluginManagement(), build.getPluginManagement(), t.getBuild());
+        } 
+        else if(build != null )
+        {
+            copy(build, t.getBuild(), isProfile);
+            pluginsProcessor.process( null, build.getPlugins(), t.getBuild().getPlugins(), isChildMostSpecialized ); 
+            inheritManagement(null, build.getPluginManagement(), t.getBuild());
+        }           
+    }
-        
-        if(t.getBuild() == null)
-        {
-            t.setBuild( new Build() );
-        }
-        
-        PluginsProcessor pluginsProcessor = new PluginsProcessor();
-        if(c.getBuild() == null && !( p == null || p.getBuild() == null))
-        {
-            copy(p.getBuild(), t.getBuild());   
-            pluginsProcessor.process( p.getBuild().getPlugins(), null, t.getBuild().getPlugins(), isChildMostSpecialized );  
-            inheritManagement(p.getBuild().getPluginManagement(), null, t.getBuild());
-        }
-        else if(c.getBuild() != null && !( p == null || p.getBuild() == null))
-        {
-            copy(c.getBuild(), t.getBuild());
-            copy(p.getBuild(), t.getBuild()); 
-
-            pluginsProcessor.process( p.getBuild().getPlugins(), c.getBuild().getPlugins(), t.getBuild().getPlugins(), isChildMostSpecialized );  
-            inheritManagement(p.getBuild().getPluginManagement(), c.getBuild().getPluginManagement(), t.getBuild());
-        } 
-        else if(c.getBuild() != null )
-        {
-            copy(c.getBuild(), t.getBuild());
-            pluginsProcessor.process( null, c.getBuild().getPlugins(), t.getBuild().getPlugins(), isChildMostSpecialized ); 
-            inheritManagement(null, c.getBuild().getPluginManagement(), t.getBuild());
-        }    
+       
+        processBuild(p, c.getBuild(), t, isChildMostSpecialized, false );
-        if(c !=null || p!= null)
+        if(!c.isEmpty() || !p.isEmpty())
-        }
-        proc.process( p, c, target.getPluginManagement().getPlugins(), false );
+            proc.process( p, c, target.getPluginManagement().getPlugins(), false );
+        } 
+        
-    
-    private static void copy(Build source, Build target)
+
+    private static void copy(BuildBase source, Build target, boolean isProfile)    
-        }
+        }    
-        if(target.getOutputDirectory() == null)
-        {
-            target.setOutputDirectory( source.getOutputDirectory() );    
-        }
-        
-        if(target.getScriptSourceDirectory() == null)
-        {
-            target.setScriptSourceDirectory( source.getScriptSourceDirectory() );    
-        }
-        
-        if(target.getSourceDirectory() == null)
-        {
-            target.setSourceDirectory( source.getSourceDirectory() );    
-        }
-        
-        if(target.getTestOutputDirectory() == null)
-        {
-            target.setTestOutputDirectory( source.getTestOutputDirectory() );    
-        }
-        
-        if(target.getTestSourceDirectory() == null)
-        {
-            target.setTestSourceDirectory( source.getTestSourceDirectory() );    
-        }        
-        
-
-        
-        for(Extension extension : source.getExtensions())
-        {
-            Extension e = new Extension();
-            e.setArtifactId( extension.getArtifactId() );
-            e.setGroupId( extension.getGroupId() );
-            e.setVersion( extension.getVersion() );
-            target.addExtension( e );
-        }
-        
+             
-        }     
+        }    
+        if(!isProfile)
+        {
+            copyBuild((Build) source, target);
+        }
+    }
+    
+    private static void copyBuild(Build source, Build target)
+    {
+        if(target.getOutputDirectory() == null)
+        {
+            target.setOutputDirectory( source.getOutputDirectory() );    
+        }
+        
+        if(target.getScriptSourceDirectory() == null)
+        {
+            target.setScriptSourceDirectory( source.getScriptSourceDirectory() );    
+        }
+        
+        if(target.getSourceDirectory() == null)
+        {
+            target.setSourceDirectory( source.getSourceDirectory() );    
+        }
+        
+        if(target.getTestOutputDirectory() == null)
+        {
+            target.setTestOutputDirectory( source.getTestOutputDirectory() );    
+        }
+        
+        if(target.getTestSourceDirectory() == null)
+        {
+            target.setTestSourceDirectory( source.getTestSourceDirectory() );    
+        }        
+          
+        for(Extension extension : source.getExtensions())
+        {
+            Extension e = new Extension();
+            e.setArtifactId( extension.getArtifactId() );
+            e.setGroupId( extension.getGroupId() );
+            e.setVersion( extension.getVersion() );
+            target.addExtension( e );
+        }
