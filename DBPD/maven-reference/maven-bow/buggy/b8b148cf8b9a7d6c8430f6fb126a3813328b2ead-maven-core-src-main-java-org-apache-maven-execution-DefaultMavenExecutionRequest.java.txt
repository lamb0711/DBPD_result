o Collected repo settings in request

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@810174 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.settings.Mirror;
+import org.apache.maven.settings.Proxy;
+import org.apache.maven.settings.Server;
-    private List proxies;
+    private List<Proxy> proxies;
-    private List servers;
+    private List<Server> servers;
-    private List mirrors;
+    private List<Mirror> mirrors;
-    public List getProxies()
+    public List<Proxy> getProxies()
-            proxies = new ArrayList();
+            proxies = new ArrayList<Proxy>();
-    public MavenExecutionRequest setProxies( List proxies )
+    public MavenExecutionRequest setProxies( List<Proxy> proxies )
-            this.proxies = new ArrayList( proxies );
+            this.proxies = new ArrayList<Proxy>( proxies );
-    public List getServers()
+    public MavenExecutionRequest addProxy( Proxy proxy )
+    {
+        if ( proxy == null )
+        {
+            throw new IllegalArgumentException( "proxy missing" );
+        }
+
+        for ( Proxy p : getProxies() )
+        {
+            if ( p.getId() != null && p.getId().equals( proxy.getId() ) )
+            {
+                return this;
+            }
+        }
+
+        getProxies().add( proxy );
+
+        return this;
+    }
+
+    public List<Server> getServers()
-            servers = new ArrayList();
+            servers = new ArrayList<Server>();
-    public MavenExecutionRequest setServers( List servers )
+    public MavenExecutionRequest setServers( List<Server> servers )
-            this.servers = new ArrayList( servers );
+            this.servers = new ArrayList<Server>( servers );
-    public List getMirrors()
+    public MavenExecutionRequest addServer( Server server )
+    {
+        if ( server == null )
+        {
+            throw new IllegalArgumentException( "server missing" );
+        }
+
+        for ( Server p : getServers() )
+        {
+            if ( p.getId() != null && p.getId().equals( server.getId() ) )
+            {
+                return this;
+            }
+        }
+
+        getServers().add( server );
+
+        return this;
+    }
+
+    public List<Mirror> getMirrors()
-            mirrors = new ArrayList();
+            mirrors = new ArrayList<Mirror>();
-    public MavenExecutionRequest setMirrors( List mirrors )
+    public MavenExecutionRequest setMirrors( List<Mirror> mirrors )
-            this.mirrors = new ArrayList( mirrors );
+            this.mirrors = new ArrayList<Mirror>( mirrors );
+    public MavenExecutionRequest addMirror( Mirror mirror )
+    {
+        if ( mirror == null )
+        {
+            throw new IllegalArgumentException( "mirror missing" );
+        }
+
+        for ( Mirror p : getMirrors() )
+        {
+            if ( p.getId() != null && p.getId().equals( mirror.getId() ) )
+            {
+                return this;
+            }
+        }
+
+        getMirrors().add( mirror );
+
+        return this;
+    }
+
