[MNG-5176] Print build times in an ISO 8601-style manner

+import java.util.TimeZone;
-    public static final int MS_PER_SEC = 1000;
+    private static final long ONE_SECOND = 1000L;
+    private static final long ONE_MINUTE = 60 * ONE_SECOND;
+    private static final long ONE_HOUR = 60 * ONE_MINUTE;
+    private static final long ONE_DAY = 24 * ONE_HOUR;
-    public static final int SEC_PER_MIN = 60;
-    
-     * 
+     *
-                SimpleDateFormat fmt = new SimpleDateFormat( "yyyy-MM-dd HH:mm:ssZ" );
-                String ts = fmt.format( new Date( Long.valueOf( timestamp ) ) );
+                String ts = formatTimestamp( Long.valueOf( timestamp ) );
+    public static String formatTimestamp( long timestamp )
+    {
+        // Manual construction of the tz offset because only Java 7 understands 'ZZ' replacement
+        TimeZone tz = TimeZone.getDefault();
+        int offset = tz.getRawOffset();
+
+        long m = Math.abs( ( offset / ONE_MINUTE ) % 60 );
+        long h = Math.abs( ( offset / ONE_HOUR ) % 24 );
+
+        int offsetDir = (int) Math.signum( (float) offset );
+        char offsetSign = offsetDir >= 0 ? '+' : '-';
+        return String.format( "%tFT%<tT%s%02d:%02d", timestamp, offsetSign, h, m );
+    }
+
+    public static String formatDuration( long duration )
+    {
+        long ms = duration % 1000;
+        long s = ( duration / ONE_SECOND ) % 60;
+        long m = ( duration / ONE_MINUTE ) % 60;
+        long h = ( duration / ONE_HOUR ) % 24;
+        long d = duration / ONE_DAY;
+
+        String format;
+        if ( d > 0 )
+        {
+            format = "%d d %02d:%02d h";
+        }
+        else if ( h > 0 )
+        {
+            format = "%2$02d:%3$02d h";
+        }
+        else if ( m > 0 )
+        {
+            format = "%3$02d:%4$02d min";
+        }
+        else
+        {
+            format = "%4$d.%5$03d s";
+        }
+
+        return String.format( format, d, h, m, s, ms );
+    }
+
