o put all of the path functions back into the artifact handler manager - that class likely needs a rename.
o Removed AbstractArtifactComponent as it was simply delegating to the class and prevented other inheritence for the resolver which seems more appropriate.
o fixed test failure in ProjectClasspathTest due to incorrectly constructed component - using plexus even though still working around the problem with a hack


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163675 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.Artifact;
+import org.apache.maven.artifact.repository.ArtifactRepository;
+import org.apache.maven.artifact.repository.layout.ArtifactPathFormatException;
+import org.apache.maven.artifact.transform.ArtifactTransformation;
+import java.util.Iterator;
+import java.util.List;
+    private List artifactTransformations;
+
-    // ----------------------------------------------------------------------
-    //
-    // ----------------------------------------------------------------------
+    public String getRemoteRepositoryArtifactPath( Artifact artifact, ArtifactRepository remoteRepository )
+        throws ArtifactPathFormatException
+    {
+        for ( Iterator i = artifactTransformations.iterator(); i.hasNext(); )
+        {
+            ArtifactTransformation transform = (ArtifactTransformation) i.next();
+            // TODO: perform transformation
+        }
-    //    public String localRepositoryPath( Artifact artifact, ArtifactRepository localRepository )
-    //        throws ArtifactHandlerNotFoundException
-    //    {
-    //        return localRepository.getBasedir() + "/" + path( artifact );
-    //    }
-    //
-    //    public String artifactUrl( Artifact artifact, ArtifactRepository remoteRepository )
-    //        throws ArtifactHandlerNotFoundException
-    //    {
-    //        return remoteRepository.getUrl() + "/" + path( artifact );
-    //    }
-    //
-    //    public String path( Artifact artifact )
-    //        throws ArtifactHandlerNotFoundException
-    //    {
-    //        if ( artifact.getType() == null )
-    //        {
-    //            throw new ArtifactHandlerNotFoundException( "Artifact handler is null for artifact " + artifact );
-    //        }
-    //
-    //        ArtifactHandler handler = getArtifactHandler( artifact.getType() );
-    //
-    //        return artifactRepositoryLayout.pathOf( artifact, handler );
-    //    }
+        return remoteRepository.pathOf( artifact );
+    }
+    public String getLocalRepositoryArtifactPath( Artifact artifact, ArtifactRepository localRepository )
+        throws ArtifactPathFormatException
+    {
+        for ( Iterator i = artifactTransformations.iterator(); i.hasNext(); )
+        {
+            ArtifactTransformation transform = (ArtifactTransformation) i.next();
+            artifact = transform.transformLocalArtifact( artifact, localRepository );
+            // TODO: perform transformation
+        }
+
+        String artifactPath = localRepository.getBasedir() + "/" + localRepository.pathOf( artifact );
+        return artifactPath;
+    }
