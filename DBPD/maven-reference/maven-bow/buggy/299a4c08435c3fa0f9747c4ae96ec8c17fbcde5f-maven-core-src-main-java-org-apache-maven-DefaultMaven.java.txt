[MNG-4052] import scope dependencies prefer to download pom rather than find it in the current project

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@798221 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.IOException;
+import org.apache.maven.project.ProjectBuildingResult;
-import org.codehaus.plexus.util.Os;
-        for ( File file : files )
+        List<ProjectBuildingResult> results =
+            projectBuilder.build( files, request.isRecursive(), request.getProjectBuildingRequest() );
+
+        for ( ProjectBuildingResult result : results )
-            MavenProject project = projectBuilder.build( file, request.getProjectBuildingRequest() );
-
-            projects.add( project );
-            
-            if ( ( project.getModules() != null ) && !project.getModules().isEmpty() && request.isRecursive() )
-            {
-                File basedir = file.getParentFile();
-
-                List<File> moduleFiles = new ArrayList<File>();
-                
-                for ( String name : project.getModules() )
-                {
-                    if ( StringUtils.isEmpty( StringUtils.trim( name ) ) )
-                    {
-                        continue;
-                    }
-
-                    File moduleFile = new File( basedir, name );
-                    
-                    if ( !moduleFile.exists() )
-                    {
-                        throw new MissingModuleException( name, moduleFile, file );
-                    }
-                    else if ( moduleFile.isDirectory() )
-                    {
-                        moduleFile = new File( basedir, name + "/" + Maven.POMv4 );
-                    }
-
-                    if ( Os.isFamily( Os.FAMILY_WINDOWS ) )
-                    {
-                        // we don't canonicalize on unix to avoid interfering with symlinks
-                        try
-                        {
-                            moduleFile = moduleFile.getCanonicalFile();
-                        }
-                        catch ( IOException e )
-                        {
-                            throw new MavenExecutionException( "Unable to canonicalize file name " + moduleFile, e );
-                        }
-                    }
-                    else
-                    {
-                        moduleFile = new File( moduleFile.toURI().normalize() );
-                    }
-
-                    moduleFiles.add( moduleFile );
-                }
-
-                collectProjects( projects, moduleFiles, request );
-            }
+            projects.add( result.getProject() );
