o Removed AuthenticationInfoProvider stuff
o Added ArtifactRepositoryFactory stuff to construct with AuthenticationInfo if possible.
o Added UserModelBuilder stuff for componentizing UserModel construction.
  -> DefaultUserModelBuilder has a configuration point 'userModelPath' which can redirect where it reads user.xml from (${user.home} is substitutable here).
o Added warning message to deployment plugin when deployment repo has no authentication info available.
o Added warning message for repos with null <id/> (auth info cannot be assigned here).
o Added a couple of debug-level messages for aid in debugging repo- and userModel-related problems.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163558 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.repository.ArtifactRepositoryFactory;
+import org.apache.maven.model.Repository;
+import org.apache.maven.model.user.UserModelBuilder;
+import org.apache.maven.model.user.UserModelUtils;
-import org.apache.maven.util.UserModelUtils;
-        ArtifactRepository localRepository = getLocalRepository();
-
-        UserModel userModel = UserModelUtils.getUserModel();
+        // ----------------------------------------------------------------------
+        // Now that we have everything that we need we will fire up plexus and
+        // bring the maven component to life for use.
+        // ----------------------------------------------------------------------
+
+        ArtifactEnabledEmbedder embedder = new ArtifactEnabledEmbedder();
+
+        embedder.start( classWorld );
+
+        UserModelBuilder userModelBuilder = (UserModelBuilder) embedder.lookup( UserModelBuilder.ROLE );
+        
+        UserModel userModel = userModelBuilder.buildUserModel();
+        
+        ArtifactRepositoryFactory artifactRepositoryFactory = (ArtifactRepositoryFactory) embedder
+                                                                                                  .lookup( ArtifactRepositoryFactory.ROLE );
+
+        ArtifactRepository localRepository = getLocalRepository( userModel, artifactRepositoryFactory );
-        // ----------------------------------------------------------------------
-        // Now that we have everything that we need we will fire up plexus and
-        // bring the maven component to life for use.
-        // ----------------------------------------------------------------------
-
-        ArtifactEnabledEmbedder embedder = new ArtifactEnabledEmbedder();
-
-        embedder.start( classWorld );
-
-    protected static ArtifactRepository getLocalRepository()
+    protected static ArtifactRepository getLocalRepository( UserModel userModel, ArtifactRepositoryFactory repoFactory )
-        UserModel userModel = UserModelUtils.getUserModel();
-        return new ArtifactRepository( "local", "file://" + localRepository );
+        
+        Repository repo = new Repository();
+
+        repo.setId( "local" );
+
+        repo.setUrl( "file://" + localRepository );
+
+        return repoFactory.createArtifactRepository( repo, userModel );
