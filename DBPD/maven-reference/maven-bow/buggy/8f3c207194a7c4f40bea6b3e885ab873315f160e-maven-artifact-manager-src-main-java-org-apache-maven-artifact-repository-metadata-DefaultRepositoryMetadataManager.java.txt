PR: MNG-613
changes versioning to use repository metadata

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@278881 13f79535-47bb-0310-9956-ffa450edef68

-                if ( policy == null || !policy.isEnabled() )
+                if ( !policy.isEnabled() )
-                    // TODO: should be able to calculate this less often
-
-                        try
-                        {
-                            wagonManager.getArtifactMetadata( metadata, repository, file, policy.getChecksumPolicy() );
+                        resolveAlways( metadata, repository, file, policy.getChecksumPolicy() );
+                    }
-                            // TODO: ???
-//                            metadata.setRepository( repository );
-
-                            // touch file so that this is not checked again until interval has passed
-                            if ( file.exists() )
-                            {
-                                file.setLastModified( System.currentTimeMillis() );
-                            }
-                        }
-                        catch ( ResourceDoesNotExistException e )
-                        {
-                            getLogger().info( "Repository metadata " + metadata +
-                                " could not be found on repository: " + repository.getId() );
-                            getLogger().debug( "Cause", e );
-                        }
-                        catch ( TransferFailedException e )
-                        {
-                            throw new ArtifactMetadataRetrievalException( "Unable to retrieve metadata", e );
-                        }
+                    // touch file so that this is not checked again until interval has passed
+                    if ( file.exists() )
+                    {
+                        file.setLastModified( System.currentTimeMillis() );
+                    }
+                    else
+                    {
+                        metadata.storeInLocalRepository( localRepository, repository );
+    public void resolveAlways( ArtifactMetadata metadata, ArtifactRepository localRepository,
+                               ArtifactRepository remoteRepository )
+        throws ArtifactMetadataRetrievalException
+    {
+        File file = new File( localRepository.getBasedir(),
+                              localRepository.pathOfLocalRepositoryMetadata( metadata, remoteRepository ) );
+
+        resolveAlways( metadata, localRepository, file, ArtifactRepositoryPolicy.CHECKSUM_POLICY_WARN );
+    }
+
+    private void resolveAlways( ArtifactMetadata metadata, ArtifactRepository repository, File file,
+                                String checksumPolicy )
+        throws ArtifactMetadataRetrievalException
+    {
+        try
+        {
+            wagonManager.getArtifactMetadata( metadata, repository, file, checksumPolicy );
+        }
+        catch ( ResourceDoesNotExistException e )
+        {
+            getLogger().debug( metadata + " could not be found on repository: " + repository.getId() );
+
+            // delete the local copy so the old details aren't used.
+            if ( file.exists() )
+            {
+                file.delete();
+            }
+        }
+        catch ( TransferFailedException e )
+        {
+            throw new ArtifactMetadataRetrievalException( "Unable to retrieve metadata", e );
+        }
+    }
+
