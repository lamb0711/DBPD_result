Centralized repository handling in AbstractVersionTransformation, for consistency (should fix MNG-527).

Changed download strategy for plugins.xml metadata to download only when non-existent locally or when plugin prefix cannot be located within local metadata. NOTE: This could lead to local-only installs of plugins having their prefix mappings overwritten.

Next step is to change the maven-plugin-plugin.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219615 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.metadata.VersionArtifactMetadata;
-import org.apache.maven.wagon.ResourceDoesNotExistException;
-import java.io.IOException;
-            if ( !version.equals( artifact.getVersion() ) )
+            if ( version != null && !version.equals( artifact.getVersion() ) )
-    protected VersionArtifactMetadata retrieveFromRemoteRepository( Artifact artifact,
-                                                                    ArtifactRepository remoteRepository,
-                                                                    VersionArtifactMetadata localMetadata )
-        throws ArtifactMetadataRetrievalException
+    protected AbstractVersionArtifactMetadata createMetadata( Artifact artifact )
-        AbstractVersionArtifactMetadata metadata = new LatestArtifactMetadata( artifact );
-        try
-        {
-            metadata.retrieveFromRemoteRepository( remoteRepository, wagonManager );
-        }
-        catch ( ResourceDoesNotExistException e )
-        {
-            if ( localMetadata.constructVersion() == null )
-            {
-                throw new ArtifactMetadataRetrievalException( "Unable to find latest version for plugin artifact " + artifact, e );
-            }
-            // otherwise, ignore - use the local one
-        }
-        return metadata;
+        return new LatestArtifactMetadata( artifact );
-    protected VersionArtifactMetadata readFromLocalRepository( Artifact artifact, ArtifactRepository localRepository )
-        throws IOException
-    {
-        AbstractVersionArtifactMetadata metadata = new LatestArtifactMetadata( artifact );
-        metadata.readFromLocalRepository( localRepository );
-        return metadata;
-    }
