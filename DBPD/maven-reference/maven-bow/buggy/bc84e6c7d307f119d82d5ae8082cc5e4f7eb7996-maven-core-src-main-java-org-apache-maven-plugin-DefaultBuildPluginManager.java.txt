MNG-5549 introduced MojoExecutionListener and ProjectExecutionListener

Signed-off-by: Igor Fedorenko <ifedorenko@apache.org>

+import org.apache.maven.execution.MojoExecutionListener;
+    private MojoExecutionListener mojoExecutionListener;
+
+    // this tricks plexus-component-metadata generate required metadata
+    @Requirement( role = MojoExecutionListener.class )
+    private List<MojoExecutionListener> mojoExecutionListeners;
+
+    public void setMojoExecutionListeners( final List<MojoExecutionListener> listeners )
+    {
+        this.mojoExecutionListeners = listeners;
+        this.mojoExecutionListener = new CompoundMojoExecutionListener( listeners );
+    }
+
+                mojoExecutionListener.beforeMojoExecution( oldSession, project, mojoExecution, mojo );
+
-                scope.afterExecutionSuccess();
+                mojoExecutionListener.afterMojoExecutionSuccess( oldSession, project, mojoExecution, mojo );
+            mojoExecutionListener.afterExecutionFailure( oldSession, project, mojoExecution, mojo, e );
+
+            mojoExecutionListener.afterExecutionFailure( oldSession, project, mojoExecution, mojo, e );
+
+            mojoExecutionListener.afterExecutionFailure( oldSession, project, mojoExecution, mojo, e );
+
+            mojoExecutionListener.afterExecutionFailure( oldSession, project, mojoExecution, mojo, e );
+
+        catch ( RuntimeException e )
+        {
+            mojoExecutionListener.afterExecutionFailure( oldSession, project, mojoExecution, mojo, e );
+
+            throw e;
+        }
-            scope.afterExecutionAlways();
-
