o pull from trunky dunk dunk


git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@767707 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Collection;
-import org.apache.maven.project.builder.factories.ArtifactModelContainerFactory;
-import org.apache.maven.project.builder.ProjectUri;
-import org.apache.maven.shared.model.DataSourceException;
-import org.apache.maven.shared.model.ModelContainer;
-import org.apache.maven.shared.model.ModelContainerFactory;
-import org.apache.maven.shared.model.ModelProperty;
+import org.apache.maven.model.Extension;
+import org.apache.maven.model.Model;
+import org.apache.maven.model.ProjectUri;
-    private List<BuildExtension> buildExtensions = new ArrayList<BuildExtension>();
-    
-    public void fire(List<? extends ModelContainer> modelContainers) 
-        throws DataSourceException     
-    {        
-        if ( !inBuild )
-        {
-            return;
-        }
-
-        for ( ModelContainer mc : modelContainers )
-        {
-            if ( hasExtension( mc ) )
-            {
-                buildExtensions.add( new BuildExtension( mc.getProperties() ) );
-            }
-        }
+    private List<Extension> buildExtensions = new ArrayList<Extension>();
+     
+    public void fire(Model model)
+    {
+    	buildExtensions.addAll(new ArrayList<Extension>(model.getBuild().getExtensions()));
-
-    public Collection<ModelContainerFactory> getModelContainerFactories()
-    {
-        return Arrays.asList( (ModelContainerFactory) new ArtifactModelContainerFactory() );
-    }
-
-    private static boolean hasExtension( ModelContainer container )
-    {
-        for ( ModelProperty mp : container.getProperties() )
-        {
-            if ( mp.getUri().equals( ProjectUri.Build.Extensions.Extension.xUri ) )
-            {
-                return true;
-            }
-        }
-        return false;
-    }
-
-    private static class BuildExtension
-    {
-        private String groupId;
-
-        private String artifactId;
-
-        private String version;
-        
-        public BuildExtension( String groupId, String artifactId, String version )
-        {
-            this.groupId = groupId;
-            this.artifactId = artifactId;
-            this.version = version;
-        }
-
-        BuildExtension( List<ModelProperty> modelProperties )
-        {
-            for ( ModelProperty mp : modelProperties )
-            {
-                if ( mp.getUri().equals( ProjectUri.Build.Extensions.Extension.groupId ) )
-                {
-                    groupId = mp.getValue();
-                }
-                else if ( mp.getUri().equals( ProjectUri.Build.Extensions.Extension.artifactId ) )
-                {
-                    artifactId = mp.getValue();
-                }
-                else if ( mp.getUri().equals( ProjectUri.Build.Extensions.Extension.version ) )
-                {
-                    version = mp.getValue();
-                }
-            }
-        }
-    }   
-    {       
-        for ( BuildExtension be : buildExtensions )
+    {    
+    	if(!inBuild)
+    	{
+    		return;
+    	}
+    	
+        for ( Extension be : buildExtensions )
-                .setPluginMetadata( new PluginMetadata( be.groupId, be.artifactId, be.version ) )
+                .setPluginMetadata( new PluginMetadata( be.getGroupId(), be.getArtifactId(), be.getVersion() ) )
