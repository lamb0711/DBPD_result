o convert as much as i can in maven-core to use the annotation processor. it revealed a bug where given certain circumstances
  if a component was a requirement it prevents the actual component descriptor for that requirement to be output. worked
  around that by using the javadoc annotations on 5 problem classes. i'll fix the processor before converting the rest.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@721606 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.component.annotations.Component;
+import org.codehaus.plexus.component.annotations.Requirement;
+@Component(role = LifecycleBindingManager.class)
-    implements LifecycleBindingManager, LogEnabled, Contextualizable
+    implements LifecycleBindingManager, LogEnabled
-    private Map bindingsByPackaging;
-
-    private Map legacyMappingsByPackaging;
-
+    @Requirement
+    @Requirement
+    @Requirement
+    private PlexusContainer container;
+
+    @Requirement
+    
+    private Map bindingsByPackaging;
+
+    private Map legacyMappingsByPackaging;
-
-    // contextualized, used for setting lookup realm before retrieving lifecycle bindings for packaging.
-    private PlexusContainer container;
-    public void contextualize( Context ctx )
-        throws ContextException
-    {
-        container = (PlexusContainer) ctx.get( PlexusConstants.PLEXUS_KEY );
-    }
-
