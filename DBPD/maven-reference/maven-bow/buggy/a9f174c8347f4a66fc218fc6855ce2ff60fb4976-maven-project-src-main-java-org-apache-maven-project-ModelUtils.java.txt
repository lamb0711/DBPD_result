Clean up of the lifecycle executor, simplify configuration and push back into the plugin manager.
This fixed a couple of bugs along the way.

One change that this has brought to bear from the document is you now must specify a goal for it to be bound to the LC
(see it0008)


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191285 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.GoalContainer;
-
-                                        boolean handleAsInheritance )
+                                         boolean handleAsInheritance )
-                if ( !handleAsInheritance || parentInherited == null
-                    || Boolean.valueOf( parentInherited ).booleanValue() )
+                if ( !handleAsInheritance || parentInherited == null ||
+                    Boolean.valueOf( parentInherited ).booleanValue() )
-        ModelUtils.mergeGoalContainerDefinitions( child, parent, handleAsInheritance );
+        ModelUtils.mergeGoalContainerDefinitions( child, parent );
-                        ModelUtils.mergeGoalContainerDefinitions( childExecution, parentExecution, handleAsInheritance );
+                        ModelUtils.mergePluginExecutionDefinitions( childExecution, parentExecution );
-    private static void mergeGoalContainerDefinitions( GoalContainer child, GoalContainer parent,
-                                                      boolean handleAsInheritance )
+    /**
+     * @param child
+     * @param parent
+     * @deprecated
+     */
+    private static void mergeGoalContainerDefinitions( Plugin child, Plugin parent )
-                    String parentInherited = parentGoal.getInherited();
+                    Goal assembledGoal = parentGoal;
-                    if ( !handleAsInheritance || parentInherited == null
-                        || Boolean.valueOf( parentInherited ).booleanValue() )
+                    Goal childGoal = (Goal) childGoals.get( parentGoal.getId() );
+
+                    if ( childGoal != null )
-                        Goal assembledGoal = parentGoal;
+                        Xpp3Dom childGoalConfig = (Xpp3Dom) childGoal.getConfiguration();
+                        Xpp3Dom parentGoalConfig = (Xpp3Dom) parentGoal.getConfiguration();
-                        Goal childGoal = (Goal) childGoals.get( parentGoal.getId() );
+                        childGoalConfig = Xpp3Dom.mergeXpp3Dom( childGoalConfig, parentGoalConfig );
-                        if ( childGoal != null )
-                        {
-                            Xpp3Dom childGoalConfig = (Xpp3Dom) childGoal.getConfiguration();
-                            Xpp3Dom parentGoalConfig = (Xpp3Dom) parentGoal.getConfiguration();
+                        childGoal.setConfiguration( childGoalConfig );
-                            childGoalConfig = Xpp3Dom.mergeXpp3Dom( childGoalConfig, parentGoalConfig );
-
-                            childGoal.setConfiguration( childGoalConfig );
-
-                            assembledGoal = childGoal;
-                        }
-                        else if ( handleAsInheritance && parentInherited == null )
-                        {
-                            assembledGoal.unsetInheritanceApplied();
-                        }
-
-                        assembledGoals.put( assembledGoal.getId(), assembledGoal );
+                        assembledGoal = childGoal;
+
+                    assembledGoals.put( assembledGoal.getId(), assembledGoal );
+    private static void mergePluginExecutionDefinitions( PluginExecution child, PluginExecution parent )
+    {
+        List parentGoals = parent.getGoals();
+
+        // if the supplemental goals are non-existent, then nothing related to goals changes.
+        if ( parentGoals != null && !parentGoals.isEmpty() )
+        {
+            List goals = new ArrayList( parentGoals );
+            if ( child.getGoals() != null )
+            {
+                goals.addAll( child.getGoals() );
+            }
+
+            child.setGoals( goals );
+        }
+
+        Xpp3Dom childConfiguration = (Xpp3Dom) child.getConfiguration();
+        Xpp3Dom parentConfiguration = (Xpp3Dom) parent.getConfiguration();
+
+        childConfiguration = Xpp3Dom.mergeXpp3Dom( childConfiguration, parentConfiguration );
+
+        child.setConfiguration( childConfiguration );
+    }
