o Re-introduced distinction between user properties and system properties. We have use cases like interpolation and SUREFIRE-121 where we would like to handle user-specified props specially so a single properties soup is not up to the job. However, I opted not to follow the approach from 2.x where we also collect both system properties and user properties in a combined set called execution properties. Code that embeds Maven and programmatically creates an execution request should be not required to assemble such a mixed properties instance, it would enable bad behavior from Maven by subtle API misuse. Also, for things like the lifecycle participant that wants to inject properties, it should be cristal clear whether it injects a user or a system property, the semantics of something like getExecutionProperties().setProperty() would be unclear however.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@796900 13f79535-47bb-0310-9956-ffa450edef68

-    private Properties executionProperties;
+    private Properties systemProperties;
+
+    private Properties userProperties;
-        executionProperties = new Properties();
+        systemProperties = new Properties();
+        userProperties = new Properties();
-    public Properties getExecutionProperties()
+    public Properties getSystemProperties()
-        return executionProperties;
+        return systemProperties;
-    public ProjectBuildingRequest setExecutionProperties( Properties executionProperties )
+    public ProjectBuildingRequest setSystemProperties( Properties systemProperties )
-        if ( executionProperties != null )
+        if ( systemProperties != null )
-            this.executionProperties = new Properties();
-            this.executionProperties.putAll( executionProperties );
+            this.systemProperties = new Properties();
+            this.systemProperties.putAll( systemProperties );
-            this.executionProperties.clear();
+            this.systemProperties.clear();
+        }
+
+        return this;
+    }
+
+    public Properties getUserProperties()
+    {
+        return userProperties;
+    }
+
+    public ProjectBuildingRequest setUserProperties( Properties userProperties )
+    {
+        if ( userProperties != null )
+        {
+            this.userProperties = new Properties();
+            this.userProperties.putAll( userProperties );
+        }
+        else
+        {
+            this.userProperties.clear();
