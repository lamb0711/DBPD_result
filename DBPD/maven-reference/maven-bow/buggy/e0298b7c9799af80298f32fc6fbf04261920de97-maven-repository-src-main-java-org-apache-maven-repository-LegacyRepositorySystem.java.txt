o first pass at setting up error handling for each possible error condition
 - this resulted in cleaning up some exceptions in plexus so that they might message could be surfaced in Maven
o move the plugin prefix searching to the lifecycle executor and get it out of the plugin manager
o add capability to the RepositorySystem to get plain resources from a repository. I'm going simple with the repository group
  metadata and I will just get the file directly as the only implementation is the plugin group metadata. the system is 
  not easily or generally extensible so i'll just take what I need



git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@776412 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.manager.WagonManager;
+import org.apache.maven.wagon.ResourceDoesNotExistException;
+import org.apache.maven.wagon.TransferFailedException;
+import org.apache.maven.wagon.events.TransferListener;
+    @Requirement
+    private WagonManager wagonManager;
+    
+
+    public void retrieve( ArtifactRepository repository, File destination, String remotePath, TransferListener downloadMonitor )
+        throws TransferFailedException, ResourceDoesNotExistException
+    {
+        wagonManager.getRemoteFile( repository, destination, remotePath, downloadMonitor, ArtifactRepositoryPolicy.CHECKSUM_POLICY_WARN, true );
+    }
+
+    public void publish( ArtifactRepository repository, File source, String remotePath, TransferListener downloadMonitor )
+        throws TransferFailedException
+    {
+        wagonManager.putRemoteFile( repository, source, remotePath, downloadMonitor );
+    }
