o adjusting the request to hold the upfront repositories that can be taken out of profiles


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@582071 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.Repository;
- *
+ * <p/>
+        processSettings( request, configuration );
+
+    private void processSettings( MavenExecutionRequest request,
+                                  Configuration configuration )
+    {
+        ProfileManager profileManager = request.getProfileManager();
+
+        Settings settings = request.getSettings();
+
+        List settingsProfiles = settings.getProfiles();
+
+        if ( settingsProfiles != null && !settingsProfiles.isEmpty() )
+        {
+            List settingsActiveProfileIds = settings.getActiveProfiles();
+
+            profileManager.explicitlyActivate( settingsActiveProfileIds );
+
+            for ( Iterator it = settings.getProfiles().iterator(); it.hasNext(); )
+            {
+                org.apache.maven.settings.Profile rawProfile = (org.apache.maven.settings.Profile) it.next();
+
+                Profile profile = SettingsUtils.convertFromSettingsProfile( rawProfile );
+
+                profileManager.addProfile( profile );
+
+                // We need to convert profile repositories to artifact repositories
+
+                for ( Iterator j = profile.getRepositories().iterator(); j.hasNext(); )
+                {
+                    Repository r = (Repository) j.next();
+
+                    ArtifactRepositoryPolicy releases = new ArtifactRepositoryPolicy();
+
+                    if ( r.getReleases() != null )
+                    {
+                        releases.setChecksumPolicy( r.getReleases().getChecksumPolicy() );
+
+                        releases.setUpdatePolicy( r.getReleases().getUpdatePolicy() );
+                    }
+                    else
+                    {
+                        releases.setChecksumPolicy( ArtifactRepositoryPolicy.UPDATE_POLICY_DAILY );
+
+                        releases.setUpdatePolicy( ArtifactRepositoryPolicy.CHECKSUM_POLICY_WARN );
+                    }
+
+                    ArtifactRepositoryPolicy snapshots = new ArtifactRepositoryPolicy();
+
+                    if ( r.getSnapshots() != null )
+                    {
+                        snapshots.setChecksumPolicy( r.getSnapshots().getChecksumPolicy() );
+
+                        snapshots.setUpdatePolicy( r.getSnapshots().getUpdatePolicy() );
+                    }
+                    else
+                    {
+                        snapshots.setChecksumPolicy( ArtifactRepositoryPolicy.UPDATE_POLICY_DAILY );
+
+                        snapshots.setUpdatePolicy( ArtifactRepositoryPolicy.CHECKSUM_POLICY_WARN );
+                    }
+
+                    ArtifactRepository ar = artifactRepositoryFactory.createArtifactRepository( r.getId(), r.getUrl(),
+                        defaultArtifactRepositoryLayout, snapshots, releases );
+
+                    request.addRemoteRepository( ar );
+                }
+            }
+        }
+    }
+
-    private void pom( MavenExecutionRequest request, Configuration configuration )
+    private void pom( MavenExecutionRequest request,
+                      Configuration configuration )
-                pom = new File( request.getBaseDirectory(), Maven.POMv4 );                                
+                pom = new File( request.getBaseDirectory(), Maven.POMv4 );
-    private void settings( MavenExecutionRequest request, Configuration configuration )
+    private void settings( MavenExecutionRequest request,
+                           Configuration configuration )
-    private void localRepository( MavenExecutionRequest request, Configuration configuration )
+    private void localRepository( MavenExecutionRequest request,
+                                  Configuration configuration )
-    public ArtifactRepository createLocalRepository( Settings settings, Configuration configuration )
+    public ArtifactRepository createLocalRepository( Settings settings,
+                                                     Configuration configuration )
-    private void snapshotPolicy( MavenExecutionRequest request, Configuration configuration )
+    private void snapshotPolicy( MavenExecutionRequest request,
+                                 Configuration configuration )
-    private void checksumPolicy( MavenExecutionRequest request, Configuration configuration )
+    private void checksumPolicy( MavenExecutionRequest request,
+                                 Configuration configuration )
-    private void artifactTransferMechanism( MavenExecutionRequest request, Configuration configuration )
+    private void artifactTransferMechanism( MavenExecutionRequest request,
+                                            Configuration configuration )
-    private void eventing( MavenExecutionRequest request, Configuration configuration )
+    private void eventing( MavenExecutionRequest request,
+                           Configuration configuration )
-    private void profileManager( MavenExecutionRequest request, Configuration configuration )
+    private void profileManager( MavenExecutionRequest request,
+                                 Configuration configuration )
-        loadSettingsProfiles(
-            globalProfileManager,
-            request.getSettings() );
-
-
-    public void loadSettingsProfiles( ProfileManager profileManager,
-                                      Settings settings )
-    {
-        List settingsProfiles = settings.getProfiles();
-
-        if ( settingsProfiles != null && !settingsProfiles.isEmpty() )
-        {
-            List settingsActiveProfileIds = settings.getActiveProfiles();
-
-            profileManager.explicitlyActivate( settingsActiveProfileIds );
-
-            for ( Iterator it = settings.getProfiles().iterator(); it.hasNext(); )
-            {
-                org.apache.maven.settings.Profile rawProfile = (org.apache.maven.settings.Profile) it.next();
-
-                Profile profile = SettingsUtils.convertFromSettingsProfile( rawProfile );
-
-                profileManager.addProfile( profile );
-            }
-        }
-    }
