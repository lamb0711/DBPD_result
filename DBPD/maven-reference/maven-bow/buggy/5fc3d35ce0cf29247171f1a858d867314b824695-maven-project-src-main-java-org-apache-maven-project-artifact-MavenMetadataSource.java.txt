Removing maven-build-context, and replacing it with caching aspects for model-lineage stuff and project instances. Still needs caching for artifact resolution, and I have an aspect for this too, but it's not enabled yet, since it's still buggy.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@595215 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.context.BuildContextManager;
-import org.apache.maven.project.build.ProjectBuildCache;
-    private BuildContextManager buildContextManager;
-
-        ProjectBuildCache cache = ProjectBuildCache.read( buildContextManager );
-
-        
+
-                project = cache.getCachedProject( artifact );
-
-                if ( project == null )
+                try
-                    try
-                    {
-                        project = mavenProjectBuilder.buildFromRepository( pomArtifact, remoteRepositories, localRepository );
-                    }
-                    catch ( InvalidProjectModelException e )
-                    {
-                        getLogger().warn( "POM for \'" + pomArtifact +
-                            "\' is invalid. It will be ignored for artifact resolution. Reason: " + e.getMessage() );
+                    project = mavenProjectBuilder.buildFromRepository( pomArtifact, remoteRepositories, localRepository );
+                }
+                catch ( InvalidProjectModelException e )
+                {
+                    getLogger().warn( "POM for \'" + pomArtifact +
+                        "\' is invalid. It will be ignored for artifact resolution. Reason: " + e.getMessage() );
-                        if ( getLogger().isDebugEnabled() )
+                    if ( getLogger().isDebugEnabled() )
+                    {
+                        getLogger().debug( "Reason: " + e.getMessage() );
+
+                        ModelValidationResult validationResult = e.getValidationResult();
+
+                        if ( validationResult != null )
-                            getLogger().debug( "Reason: " + e.getMessage() );
-
-                            ModelValidationResult validationResult = e.getValidationResult();
-
-                            if ( validationResult != null )
+                            getLogger().debug( "\nValidation Errors:" );
+                            for ( Iterator i = validationResult.getMessages().iterator(); i.hasNext(); )
-                                getLogger().debug( "\nValidation Errors:" );
-                                for ( Iterator i = validationResult.getMessages().iterator(); i.hasNext(); )
-                                {
-                                    getLogger().debug( i.next().toString() );
-                                }
-                                getLogger().debug( "\n" );
+                                getLogger().debug( i.next().toString() );
+                            getLogger().debug( "\n" );
-
-                        project = null;
-                    catch ( ProjectBuildingException e )
+
+                    project = null;
+                }
+                catch ( ProjectBuildingException e )
+                {
+                    if ( strictlyEnforceThePresenceOfAValidMavenPOM )
-                        if ( strictlyEnforceThePresenceOfAValidMavenPOM )
-                        {
-                            throw new ArtifactMetadataRetrievalException( "Unable to read the metadata file for artifact '" +
-                                artifact.getDependencyConflictId() + "': " + e.getMessage(), e, artifact );
-                        }
+                        throw new ArtifactMetadataRetrievalException( "Unable to read the metadata file for artifact '" +
+                            artifact.getDependencyConflictId() + "': " + e.getMessage(), e, artifact );
