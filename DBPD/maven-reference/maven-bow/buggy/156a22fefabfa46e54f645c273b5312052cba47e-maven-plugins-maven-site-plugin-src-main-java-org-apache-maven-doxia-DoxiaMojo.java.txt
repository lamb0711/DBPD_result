more cleanup of site plugin

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@290603 13f79535-47bb-0310-9956-ffa450edef68

-     * OutputName of all reports files generated by Maven
-     */
-    private static List generatedReportsFileName = new ArrayList();
-
-    /**
-        List reports = getReports();
-
-            List projectInfos = new ArrayList();
-            List projectReports = new ArrayList();
-            categorizeReports( reports, defaultLocale, projectInfos, projectReports );
-
-                String siteDescriptor = getSiteDescriptor( reports, locale, projectInfos, projectReports );
-
-                // Handle the GeneratedSite Directory
-                File generatedSiteFile = new File( generatedSiteDirectory );
-                if ( generatedSiteFile.exists() )
-                {
-                    siteRenderer.render( generatedSiteFile, outputDirectory, siteDescriptor, template, attributes,
-                                         locale );
-                }
-
+
+                // Handle the GeneratedSite Directory
+                File generatedSiteFile = new File( generatedSiteDirectory );
+
+                List reports = getReports();
+
+                Map categories = categorizeReports( reports );
+
+                List projectInfos = (List) categories.get( MavenReport.CATEGORY_PROJECT_INFORMATION );
+                List projectReports = (List) categories.get( MavenReport.CATEGORY_PROJECT_REPORTS );
+
+                if ( projectInfos == null )
+                {
+                    projectInfos = Collections.EMPTY_LIST;
+                }
+
+                if ( projectReports == null )
+                {
+                    projectReports = Collections.EMPTY_LIST;
+                }
+
+                String siteDescriptor = getSiteDescriptor( reports, locale, projectInfos, projectReports );
+
+                if ( generatedSiteFile.exists() )
+                {
+                    siteRenderer.render( generatedSiteFile, outputDirectory, siteDescriptor, template, attributes,
+                                         locale );
+                }
+
+                List generatedReportsFileName = Collections.EMPTY_LIST;
-                    generateReportsPages( reports, locale, outputDirectory, defaultLocale, siteDescriptor );
+                    generatedReportsFileName = generateReportsPages( reports, locale, outputDirectory, defaultLocale,
+                                                                     siteDescriptor );
-    private void categorizeReports( List reports, Locale defaultLocale, List projectInfos, List projectReports )
-        throws MojoExecutionException
+    private Map categorizeReports( List reports )
+        Map categories = new HashMap();
+
-            if ( MavenReport.CATEGORY_PROJECT_INFORMATION.equals( report.getCategoryName() ) )
+
+            List category = (List) categories.get( report.getCategoryName() );
+            if ( category == null )
-                projectInfos.add( report );
+                category = new ArrayList();
+                categories.put( report.getCategoryName(), category );
-            else if ( MavenReport.CATEGORY_PROJECT_REPORTS.equals( report.getCategoryName() ) )
-            {
-                projectReports.add( report );
-            }
-            else
-            {
-                throw new MojoExecutionException( "'" + report.getCategoryName() + "' category define for " +
-                    report.getName( defaultLocale ) + " mojo isn't valid." );
-            }
+            category.add( report );
+        return categories;
-    private void generateReportsPages( List reports, Locale locale, File localeOutputDirectory, Locale defaultLocale,
+    private List generateReportsPages( List reports, Locale locale, File localeOutputDirectory, Locale defaultLocale,
+        List generatedReportsFileName = new ArrayList();
+
+        return generatedReportsFileName;
