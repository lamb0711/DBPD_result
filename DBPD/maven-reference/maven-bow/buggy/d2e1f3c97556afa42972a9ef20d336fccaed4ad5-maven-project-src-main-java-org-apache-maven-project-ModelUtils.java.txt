o Adding support for <executions/>, which means multiple runs of the same goal/set-of-goals with different configs.
o Adding @phase declarations for those mojos that seem to be part of the main build, just for completeness
o Added two ITs, to test that <executions/> doesn't mess up the normal operation, and to test multi-execution for a goal.

Should resolve: MNG-172.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@190335 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.GoalContainer;
+import org.apache.maven.model.PluginExecution;
-        if( childContainer == null || parentContainer == null )
+        if ( childContainer == null || parentContainer == null )
-        
+
-                
+
-                    
+
-            
+
-        if( child == null || parent == null )
+        if ( child == null || parent == null )
-        
+
+        // merge the lists of goals that are not attached to an <execution/>
+        ModelUtils.mergeGoalContainerDefinitions( child, parent, handleAsInheritance );
+
+        // from here to the end of the method is dealing with merging of the <executions/> section.
+        String parentInherited = parent.getInherited();
+
+        boolean parentIsInherited = parentInherited == null || Boolean.valueOf( parentInherited ).booleanValue();
+
+        List parentExecutions = parent.getExecutions();
+
+        if ( parentExecutions != null && !parentExecutions.isEmpty() )
+        {
+            Map assembledExecutions = new TreeMap();
+
+            Map childExecutions = child.getExecutionsAsMap();
+
+            for ( Iterator it = parentExecutions.iterator(); it.hasNext(); )
+            {
+                PluginExecution parentExecution = (PluginExecution) it.next();
+
+                if ( !handleAsInheritance || parentIsInherited )
+                {
+                    PluginExecution assembled = parentExecution;
+
+                    PluginExecution childExecution = (PluginExecution) childExecutions.get( parentExecution.getId() );
+
+                    if ( childExecution != null )
+                    {
+                        ModelUtils.mergeGoalContainerDefinitions( childExecution, parentExecution, handleAsInheritance );
+
+                        assembled = childExecution;
+                    }
+                    else if ( handleAsInheritance && parentInherited == null )
+                    {
+                        parentExecution.unsetInheritanceApplied();
+                    }
+
+                    assembledExecutions.put( assembled.getId(), assembled );
+                }
+            }
+
+            for ( Iterator it = childExecutions.entrySet().iterator(); it.hasNext(); )
+            {
+                Map.Entry entry = (Map.Entry) it.next();
+
+                String id = (String) entry.getKey();
+
+                if ( !assembledExecutions.containsKey( id ) )
+                {
+                    assembledExecutions.put( id, entry.getValue() );
+                }
+            }
+
+            child.setExecutions( new ArrayList( assembledExecutions.values() ) );
+
+            child.flushExecutionMap();
+        }
+
+    }
+
+    private static void mergeGoalContainerDefinitions( GoalContainer child, GoalContainer parent,
+                                                      boolean handleAsInheritance )
+    {
-
-                        if ( handleAsInheritance && parentInherited == null )
+                        else if ( handleAsInheritance && parentInherited == null )
