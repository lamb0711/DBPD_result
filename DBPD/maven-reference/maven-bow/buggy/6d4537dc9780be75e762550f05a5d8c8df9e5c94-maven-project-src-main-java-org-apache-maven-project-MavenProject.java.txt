Adding POM-level properties.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@279572 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Stack;
-    private Properties profileProperties = new Properties();
-
-        this.profileProperties = new Properties( project.profileProperties );
-
+    public List getSystemClasspathElements()
+        throws DependencyResolutionRequiredException
+    {
+        List list = new ArrayList( getArtifacts().size() );
+
+        list.add( getBuild().getOutputDirectory() );
+
+        for ( Iterator i = getArtifacts().iterator(); i.hasNext(); )
+        {
+            Artifact a = (Artifact) i.next();
+
+            if ( isAddedToClasspath( a ) )
+            {
+                // TODO: let the scope handler deal with this
+                if ( Artifact.SCOPE_SYSTEM.equals( a.getScope() ) )
+                {
+                    String refId = getProjectReferenceId( a.getGroupId(), a.getArtifactId() );
+                    MavenProject project = (MavenProject) projectReferences.get( refId );
+                    if ( project != null )
+                    {
+                        list.add( project.getBuild().getOutputDirectory() );
+                    }
+                    else
+                    {
+                        File file = a.getFile();
+                        if ( file == null )
+                        {
+                            throw new DependencyResolutionRequiredException( a );
+                        }
+                        list.add( file.getPath() );
+                    }
+                }
+            }
+        }
+        return list;
+    }
+
+    public List getSystemArtifacts()
+    {
+        List list = new ArrayList( getArtifacts().size() );
+
+        for ( Iterator i = getArtifacts().iterator(); i.hasNext(); )
+        {
+            Artifact a = (Artifact) i.next();
+
+            // TODO: classpath check doesn't belong here - that's the other method
+            if ( isAddedToClasspath( a ) )
+            {
+                // TODO: let the scope handler deal with this
+                if ( Artifact.SCOPE_SYSTEM.equals( a.getScope() ) )
+                {
+                    list.add( a );
+                }
+            }
+        }
+        return list;
+    }
+
+    public List getSystemDependencies()
+    {
+        Set artifacts = getArtifacts();
+
+        if ( artifacts == null || artifacts.isEmpty() )
+        {
+            return Collections.EMPTY_LIST;
+        }
+
+        List list = new ArrayList( artifacts.size() );
+
+        for ( Iterator i = getArtifacts().iterator(); i.hasNext(); )
+        {
+            Artifact a = (Artifact) i.next();
+
+            // TODO: let the scope handler deal with this
+            if ( Artifact.SCOPE_SYSTEM.equals( a.getScope() ) )
+            {
+                Dependency dependency = new Dependency();
+
+                dependency.setArtifactId( a.getArtifactId() );
+                dependency.setGroupId( a.getGroupId() );
+                dependency.setVersion( a.getVersion() );
+                dependency.setScope( a.getScope() );
+                dependency.setType( a.getType() );
+                dependency.setClassifier( a.getClassifier() );
+
+                list.add( dependency );
+            }
+        }
+        return list;
+    }
+
+    /**
+     * @deprecated use getProperties() instead
+     */
-        return profileProperties;
+        return getProperties();
+    /**
+     * @deprecated should add properties to the model instead
+     */
-        this.profileProperties.putAll( profileConfiguration );
+        getProperties().putAll( profileConfiguration );
-    public void assembleProfilePropertiesInheritance()
-    {
-        Stack propertyStack = new Stack();
-
-        MavenProject current = this;
-        while ( current != null )
-        {
-            Properties toAdd = current.profileProperties;
-
-            if ( toAdd != null && !toAdd.isEmpty() )
-            {
-                propertyStack.push( toAdd );
-            }
-
-            current = current.getParent();
-        }
-
-        Properties newProfilesProperties = new Properties();
-
-        while ( !propertyStack.isEmpty() )
-        {
-            newProfilesProperties.putAll( (Properties) propertyStack.pop() );
-        }
-
-        this.profileProperties = newProfilesProperties;
-    }
-
+    public Properties getProperties()
+    {
+        return getModel().getProperties();
+    }
+
