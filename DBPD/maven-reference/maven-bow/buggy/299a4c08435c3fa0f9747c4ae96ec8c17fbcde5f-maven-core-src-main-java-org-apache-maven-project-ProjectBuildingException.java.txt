[MNG-4052] import scope dependencies prefer to download pom rather than find it in the current project

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@798221 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.PrintWriter;
+import java.io.StringWriter;
+import java.util.List;
+import org.apache.maven.model.building.ModelProblem;
+    private List<ProjectBuildingResult> results;
+
-        super( message, cause );
+        super( createMessage( message, projectId, null ), cause );
-        super( message );
+        super( createMessage( message, projectId, new File( pomLocation ) ) );
-        super( message );
+        super( createMessage( message, projectId, pomFile ) );
-        super( message, cause );
+        super( createMessage( message, projectId, pomFile ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, new File( pomLocation ) ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, pomFile ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, new File( pomLocation ) ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, pomFile ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, null ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, new File( pomLocation ) ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, pomFile ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, null ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, null ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, null ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, pomFile ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, null ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, pomFile ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, new File( pomLocation ) ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, pomFile ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, new File( pomLocation ) ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, pomFile ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, new File( pomLocation ) ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, pomFile ), cause );
-        super( message, cause );
+        super( createMessage( message, projectId, new File( pomLocation ) ), cause );
+    public ProjectBuildingException( List<ProjectBuildingResult> results )
+    {
+        super( createMessage( results ) );
+        this.projectId = "";
+        this.results = results;
+    }
-    public String getMessage()
+    public List<ProjectBuildingResult> getResults()
-        return super.getMessage() + " for project " + projectId +
-            ( ( getPomFile() == null ? "" : " at " + getPomFile().getAbsolutePath() ) );
+        return results;
+
+    private static String createMessage( String message, String projectId, File pomFile )
+    {
+        StringBuilder buffer = new StringBuilder( 256 );
+        buffer.append( message );
+        buffer.append( " for project " ).append( projectId );
+        if ( pomFile != null )
+        {
+            buffer.append( " at " ).append( pomFile.getAbsolutePath() );
+        }
+        return buffer.toString();
+    }
+
+    private static String createMessage( List<ProjectBuildingResult> results )
+    {
+        StringWriter buffer = new StringWriter( 1024 );
+
+        PrintWriter writer = new PrintWriter( buffer );
+        writer.println( "Some problems were encountered while processing the POMs:" );
+        for ( ProjectBuildingResult result : results )
+        {
+            for ( ModelProblem problem : result.getProblems() )
+            {
+                writer.print( "o " );
+                writer.println( problem.getMessage() );
+            }
+        }
+        writer.close();
+
+        return buffer.toString();
+    }
+
