Resolving: MNG-715

PluginParameterExpressionEvaluator now has two static final Maps - BANNED_EXPRESSIONS and DEPRECATED_EXPRESSIONS, each of which contain mappings of restricted expressions to the preferred alternative.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@232200 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.plugin.descriptor.MojoDescriptor;
+import java.util.HashMap;
+import java.util.Map;
+    private static final Map BANNED_EXPRESSIONS;
+
+    private static final Map DEPRECATED_EXPRESSIONS;
+
+    static
+    {
+        Map deprecated = new HashMap();
+
+        deprecated.put( "project.build.resources", "project.resources" );
+        deprecated.put( "project.build.testResources", "project.testResources" );
+
+        DEPRECATED_EXPRESSIONS = deprecated;
+
+        Map banned = new HashMap();
+
+        BANNED_EXPRESSIONS = banned;
+    }
+
-    private final PluginDescriptor pluginDescriptor;
+    private final MojoDescriptor mojoDescriptor;
-    public PluginParameterExpressionEvaluator( MavenSession context, PluginDescriptor pluginDescriptor,
-                                               PathTranslator pathTranslator, Logger logger, MavenProject project )
+    public PluginParameterExpressionEvaluator( MavenSession context, MojoDescriptor mojoDescriptor,
+                                              PathTranslator pathTranslator, Logger logger, MavenProject project )
-        this.pluginDescriptor = pluginDescriptor;
+        this.mojoDescriptor = mojoDescriptor;
+        if ( BANNED_EXPRESSIONS.containsKey( expression ) )
+        {
+            throw new ExpressionEvaluationException( "The parameter expression: \'" + expression
+                + "\' used in mojo: \'" + mojoDescriptor.getGoal() + "\' is banned. Use \'"
+                + BANNED_EXPRESSIONS.get( expression ) + "\' instead." );
+        }
+        else if ( DEPRECATED_EXPRESSIONS.containsKey( expression ) )
+        {
+            logger.warn( "The parameter expression: \'" + expression + "\' used in mojo: \'" + mojoDescriptor.getGoal()
+                + "\' has been deprecated. Use \'" + DEPRECATED_EXPRESSIONS.get( expression ) + "\' instead." );
+        }
+        
+                PluginDescriptor pluginDescriptor = mojoDescriptor.getPluginDescriptor();
+
-
