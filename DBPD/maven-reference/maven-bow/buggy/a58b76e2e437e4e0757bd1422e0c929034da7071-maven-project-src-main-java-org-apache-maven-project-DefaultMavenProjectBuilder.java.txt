Adding profiles.xml and settings.xml support for profiles, along with integration tests for each.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@189510 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout;
-import org.apache.maven.model.Repository;
+import org.apache.maven.project.artifact.MavenMetadataSource;
-import org.apache.maven.project.artifact.MavenMetadataSource;
-import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
-import java.util.ArrayList;
-        List aggregatedRemoteWagonRepositories = buildArtifactRepositories( superModel.getRepositories() );
+        List aggregatedRemoteWagonRepositories = ProjectUtils.buildArtifactRepositories( superModel.getRepositories(), artifactRepositoryFactory, container );
-        project.setPluginArtifactRepositories( buildArtifactRepositories( model.getPluginRepositories() ) );
+        project.setPluginArtifactRepositories( ProjectUtils.buildArtifactRepositories( model.getPluginRepositories(), artifactRepositoryFactory, container ) );
-            project.setDistributionManagementArtifactRepository( buildArtifactRepository( dm.getRepository() ) );
+            project.setDistributionManagementArtifactRepository( ProjectUtils.buildArtifactRepository( dm.getRepository(), artifactRepositoryFactory, container ) );
-        aggregatedRemoteWagonRepositories.addAll( buildArtifactRepositories( model.getRepositories() ) );
+        aggregatedRemoteWagonRepositories.addAll( ProjectUtils.buildArtifactRepositories( model.getRepositories(), artifactRepositoryFactory, container ) );
-    private List buildArtifactRepositories( List repositories )
-        throws ProjectBuildingException
-    {
-
-        List repos = new ArrayList();
-
-        for ( Iterator i = repositories.iterator(); i.hasNext(); )
-        {
-            Repository mavenRepo = (Repository) i.next();
-
-            ArtifactRepository artifactRepo = buildArtifactRepository( mavenRepo );
-
-            if ( !repos.contains( artifactRepo ) )
-            {
-                repos.add( artifactRepo );
-            }
-        }
-        return repos;
-    }
-
-    private ArtifactRepositoryLayout getRepositoryLayout( Repository mavenRepo )
-        throws ProjectBuildingException
-    {
-        String layout = mavenRepo.getLayout();
-
-        ArtifactRepositoryLayout repositoryLayout = null;
-        try
-        {
-            repositoryLayout = (ArtifactRepositoryLayout) container.lookup( ArtifactRepositoryLayout.ROLE, layout );
-        }
-        catch ( ComponentLookupException e )
-        {
-            throw new ProjectBuildingException( "Cannot find layout implementation corresponding to: \'" + layout +
-                                                "\' for remote repository with id: \'" + mavenRepo.getId() + "\'.", e );
-        }
-        return repositoryLayout;
-    }
-
-    private ArtifactRepository buildArtifactRepository( Repository repo )
-        throws ProjectBuildingException
-    {
-        if ( repo != null )
-        {
-            String id = repo.getId();
-            String url = repo.getUrl();
-            String snapshotPolicy = repo.getSnapshotPolicy();
-            // TODO: make this a map inside the factory instead, so no lookup needed
-            ArtifactRepositoryLayout layout = getRepositoryLayout( repo );
-            return artifactRepositoryFactory.createArtifactRepository( id, url, layout, snapshotPolicy );
-        }
-        else
-        {
-            return null;
-        }
-    }
-
-            List remoteRepositories = buildArtifactRepositories( superModel.getRepositories() );
+            List remoteRepositories = ProjectUtils.buildArtifactRepositories( superModel.getRepositories(), artifactRepositoryFactory, container );
