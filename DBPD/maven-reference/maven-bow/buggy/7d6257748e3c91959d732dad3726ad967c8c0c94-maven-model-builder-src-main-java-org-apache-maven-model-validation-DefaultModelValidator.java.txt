o Polished model validation messages

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@829625 13f79535-47bb-0310-9956-ffa450edef68

-            validateId( "dependencies.dependency.artifactId", problems, d.getArtifactId() );
+            validateId( "dependencies.dependency.artifactId", problems, d.getArtifactId(), d.getManagementKey() );
-            validateId( "dependencies.dependency.groupId", problems, d.getGroupId() );
+            validateId( "dependencies.dependency.groupId", problems, d.getGroupId(), d.getManagementKey() );
-                    addViolation( problems, false, "For dependency " + d + ": system-scoped dependency must specify systemPath." );
+                    addViolation( problems, false, "For dependency " + d.getManagementKey()
+                        + ": system-scoped dependency must specify systemPath." );
-                        addViolation( problems, false, "For dependency " + d + ": system-scoped dependency must "
-                            + "specify an absolute path systemPath." );
+                        addViolation( problems, false, "For dependency " + d.getManagementKey()
+                            + ": system-scoped dependency must specify an absolute systemPath but is " + systemPath );
-                addViolation( problems, false,
-                    "For dependency " + d + ": only dependency with system scope can specify systemPath." );
+                addViolation( problems, false, "For dependency " + d.getManagementKey()
+                    + ": only dependency with system scope can specify systemPath." );
-                validateSubElementStringNotEmpty( d, "dependencyManagement.dependencies.dependency.artifactId", problems,
-                                                  d.getArtifactId() );
+                validateStringNotEmpty( "dependencyManagement.dependencies.dependency.artifactId", problems, false,
+                                        d.getArtifactId(), d.getManagementKey() );
-                validateSubElementStringNotEmpty( d, "dependencyManagement.dependencies.dependency.groupId", problems,
-                                                  d.getGroupId() );
+                validateStringNotEmpty( "dependencyManagement.dependencies.dependency.groupId", problems, false,
+                                        d.getGroupId(), d.getManagementKey() );
-                        addViolation( problems, false,
-                            "For managed dependency " + d + ": system-scoped dependency must specify systemPath." );
+                        addViolation( problems, false, "For managed dependency " + d.getManagementKey()
+                            + ": system-scoped dependency must specify systemPath." );
-                            addViolation( problems, false, "For managed dependency " + d + ": system-scoped dependency must "
-                                + "specify an absolute path systemPath." );
+                            addViolation( problems, false, "For managed dependency " + d.getManagementKey()
+                                + ": system-scoped dependency must specify an absolute systemPath but is "
+                                + systemPath );
-                    addViolation( problems, false,
-                        "For managed dependency " + d + ": only dependency with system scope can specify systemPath." );
+                    addViolation( problems, false, "For managed dependency " + d.getManagementKey()
+                        + ": only dependency with system scope can specify systemPath." );
-        if ( !validateStringNotEmpty( fieldName, problems, false, id ) )
+        return validateId( fieldName, problems, id, null );
+    }
+
+    private boolean validateId( String fieldName, ModelProblemCollector problems, String id, String sourceHint )
+    {
+        if ( !validateStringNotEmpty( fieldName, problems, false, id, sourceHint ) )
-                addViolation( problems, false, "'" + fieldName + "' with value '" + id + "' does not match a valid id pattern." );
+                addViolation( problems, false, "'" + fieldName + "'"
+                    + ( sourceHint != null ? " for " + sourceHint : "" ) + " with value '" + id
+                    + "' does not match a valid id pattern." );
-     * <li><code>string.length > 0</code>
-     * </ul>
-     */
-    private boolean validateSubElementStringNotEmpty( Object subElementInstance, String fieldName,
-                                                      ModelProblemCollector problems, String string )
-    {
-        if ( !validateSubElementNotNull( subElementInstance, fieldName, problems, string ) )
-        {
-            return false;
-        }
-
-        if ( string.length() > 0 )
-        {
-            return true;
-        }
-
-        addViolation( problems, false, "In " + subElementInstance + ":\n\n       -> '" + fieldName + "' is missing." );
-
-        return false;
-    }
-
-    /**
-     * Asserts:
-     * <p/>
-     * <ul>
-     * <li><code>string != null</code>
-    /**
-     * Asserts:
-     * <p/>
-     * <ul>
-     * <li><code>string != null</code>
-     * </ul>
-     */
-    private boolean validateSubElementNotNull( Object subElementInstance, String fieldName,
-                                               ModelProblemCollector problems, Object object )
-    {
-        if ( object != null )
-        {
-            return true;
-        }
-
-        addViolation( problems, false, "In " + subElementInstance + ":\n\n       -> '" + fieldName + "' is missing." );
-
-        return false;
-    }
-
