PR: MNG-1110
differentiate between an artifact that is not found, and failure to obtain an artifact

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@307034 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.resolver.ArtifactNotFoundException;
-    
-    
+
+
-    public void createArchetype( String archetypeGroupId,
-                                 String archetypeArtifactId,
-                                 String archetypeVersion,
-                                 ArtifactRepository localRepository,
-                                 List remoteRepositories,
-                                 Map parameters )
+    public void createArchetype( String archetypeGroupId, String archetypeArtifactId, String archetypeVersion,
+                                 ArtifactRepository localRepository, List remoteRepositories, Map parameters )
+            // TODO: this is an error now, not "not found"
+            throw new ArchetypeNotFoundException( "Cannot download archetype.", e );
+        }
+        catch ( ArtifactNotFoundException e )
+        {
-                getLogger().info( "Using following parameters for creating Archetype: " + archetypeArtifactId + ":" + archetypeVersion );
+                getLogger().info( "Using following parameters for creating Archetype: " + archetypeArtifactId + ":" +
+                    archetypeVersion );
-                throw new ArchetypeDescriptorException( "The " + ARCHETYPE_DESCRIPTOR + " descriptor cannot be found." );
+                throw new ArchetypeDescriptorException(
+                    "The " + ARCHETYPE_DESCRIPTOR + " descriptor cannot be found." );
-                throw new ArchetypeTemplateProcessingException( outputDirectoryFile.getName() + " already exists - please run from a clean directory" );
+                throw new ArchetypeTemplateProcessingException(
+                    outputDirectoryFile.getName() + " already exists - please run from a clean directory" );
-                getLogger().debug( "********************* Debug info for resources created from generated Model ***********************" );
+                getLogger().debug(
+                    "********************* Debug info for resources created from generated Model ***********************" );
-            
+
-                FileUtils.mkdir( outputDirectory + ( srcDirectory.startsWith( "/" ) ? srcDirectory : ( "/" + srcDirectory ) ) );
+                FileUtils.mkdir(
+                    outputDirectory + ( srcDirectory.startsWith( "/" ) ? srcDirectory : ( "/" + srcDirectory ) ) );
-                                                               : ( "/" + scriptSourceDirectory ) ) );
+                    : ( "/" + scriptSourceDirectory ) ) );
-                    FileUtils.mkdir( outputDirectory + ( resourceDirectory.startsWith( "/" ) ? resourceDirectory : ( "/" + resourceDirectory ) ) );
+                    FileUtils.mkdir( outputDirectory +
+                        ( resourceDirectory.startsWith( "/" ) ? resourceDirectory : ( "/" + resourceDirectory ) ) );
-                FileUtils.mkdir( outputDirectory + ( testDirectory.startsWith( "/" ) ? testDirectory : ( "/" + testDirectory ) ) );
+                FileUtils.mkdir(
+                    outputDirectory + ( testDirectory.startsWith( "/" ) ? testDirectory : ( "/" + testDirectory ) ) );
-                                                                   : ( "/" + testResourceDirectory ) ) );
+                        : ( "/" + testResourceDirectory ) ) );
-            getLogger().info( "********************* End of debug info from resources from generated POM ***********************" );
+            getLogger().info(
+                "********************* End of debug info from resources from generated POM ***********************" );
-    protected void processTemplate( String outputDirectory, Context context, String template,
-                                   boolean packageInFileName, String packageName )
+    protected void processTemplate( String outputDirectory, Context context, String template, boolean packageInFileName,
+                                    String packageName )
