PR: MNG-613
make sure versions are aggregated

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@278961 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.metadata.SnapshotArtifactMetadata;
+import org.apache.maven.artifact.repository.metadata.Versioning;
-        if ( artifact.isSnapshot() )
+        if ( !artifact.isSnapshot() )
-        ArtifactMetadata localMetadata = null;
+        Versioning versioning = null;
-            localMetadata = loadVersioningInformation( metadata, repository, localRepository, artifact );
-            if ( localMetadata != null )
+            versioning = loadVersioningInformation( metadata, repository, localRepository, artifact );
+            if ( versioning != null )
-        ArtifactMetadata m = loadVersioningInformation( metadata, localRepository, localRepository, artifact );
-        if ( m != null )
+        Versioning v = loadVersioningInformation( metadata, localRepository, localRepository, artifact );
+        if ( v != null )
-            localMetadata = m;
+            versioning = v;
-        if ( localMetadata != null )
+        if ( versioning != null )
-            version = constructVersion( localMetadata );
+            version = constructVersion( versioning, artifact.getBaseVersion() );
-    protected int resolveLatestSnapshotBuildNumber( Artifact artifact, ArtifactRepository localRepository,
-                                                    ArtifactRepository remoteRepository )
-        throws ArtifactMetadataRetrievalException
-    {
-        // TODO: can we improve on this?
-        ArtifactMetadata metadata = new SnapshotArtifactRepositoryMetadata( artifact );
-
-        getLogger().info( "Retrieving previous build number from " + remoteRepository.getId() );
-        repositoryMetadataManager.resolveAlways( metadata, localRepository, remoteRepository );
-
-        ArtifactMetadata m = loadVersioningInformation( metadata, remoteRepository, localRepository, artifact );
-        int buildNumber = 0;
-        if ( m == null )
-        {
-            try
-            {
-                SnapshotArtifactMetadata snapshotMetadata = new SnapshotArtifactMetadata( artifact );
-                snapshotMetadata.retrieveFromRemoteRepository( remoteRepository, wagonManager,
-                                                               ArtifactRepositoryPolicy.CHECKSUM_POLICY_WARN );
-                getLogger().warn( "Using old-style versioning metadata from remote repo for " + artifact );
-
-                buildNumber = snapshotMetadata.getBuildNumber();
-            }
-            catch ( ResourceDoesNotExistException e1 )
-            {
-                // safe to ignore, use default snapshot data
-                getLogger().debug( "Unable to find legacy metadata - ignoring" );
-            }
-        }
-        else
-        {
-            buildNumber = m.getBuildNumber();
-        }
-        return buildNumber;
-    }
-
-    protected abstract String constructVersion( ArtifactMetadata metadata );
+    protected abstract String constructVersion( Versioning versioning, String baseVersion );
-    private ArtifactMetadata loadVersioningInformation( ArtifactMetadata repoMetadata,
-                                                        ArtifactRepository remoteRepository,
-                                                        ArtifactRepository localRepository, Artifact artifact )
+    protected Versioning loadVersioningInformation( ArtifactMetadata repoMetadata, ArtifactRepository remoteRepository,
+                                                    ArtifactRepository localRepository, Artifact artifact )
-        ArtifactMetadata newMetadata = null;
+        Versioning versioning = null;
-            if ( metadata.getVersioning() != null )
-            {
-                if ( artifact.isSnapshot() )
-                {
-                    if ( metadata.getVersioning().getSnapshot() != null )
-                    {
-                        newMetadata = new SnapshotArtifactRepositoryMetadata( artifact,
-                                                                              metadata.getVersioning().getSnapshot() );
-                    }
-                }
-                else
-                {
-                    newMetadata = new ArtifactRepositoryMetadata( artifact, metadata.getVersioning() );
-                }
-            }
+            versioning = metadata.getVersioning();
-        return newMetadata;
+        return versioning;
