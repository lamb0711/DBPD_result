PR: MNG-649
add classifier to dependency. it becomes part of the dependency key along with type when not null

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@225524 13f79535-47bb-0310-9956-ffa450edef68

-    
+
-    
+
-        
+
-            project.setDependencyArtifacts( MavenProject.createArtifacts( artifactFactory, project.getDependencies() ) );
+            project.setDependencyArtifacts(
+                MavenProject.createArtifacts( artifactFactory, project.getDependencies() ) );
-    
-    private void ensureMetadataSourceIsInitialized() 
+
+    private void ensureMetadataSourceIsInitialized()
-                                                                                  d.getScope() );
+                                                                                  d.getClassifier(), d.getScope() );
-                                      Collections.EMPTY_LIST, externalProfiles, projectDescriptor.getAbsoluteFile().getParentFile() );
+                                      Collections.EMPTY_LIST, externalProfiles,
+                                      projectDescriptor.getAbsoluteFile().getParentFile() );
-        
+
-        
-        MavenProject project = assembleLineage( model, lineage, repositories, localRepository, externalProfiles, projectDir );
+
+        MavenProject project = assembleLineage( model, lineage, repositories, localRepository, externalProfiles,
+                                                projectDir );
-    /** @noinspection CollectionDeclaredAsConcreteClass*/
+    /**
+     * @noinspection CollectionDeclaredAsConcreteClass
+     */
-            
+
-            
+
-            
+
-            
+
-            if ( model == null && projectDir != null && StringUtils.isNotEmpty(parentRelativePath) )
+            if ( model == null && projectDir != null && StringUtils.isNotEmpty( parentRelativePath ) )
-                
+
-                    
+
-                
+
-                    
+
-                    if ( parentModel.getGroupId().equals( candidateParent.getGroupId() )
-                        && parentModel.getArtifactId().equals( candidateParent.getArtifactId() )
-                        && ( parentModel.getVersion().equals( candidateParent.getVersion() ) 
-                            || ( candidateParent.getParent() != null 
-                                && parentModel.getVersion().equals(candidateParent.getParent().getVersion() ) ) ) )
+                    if ( parentModel.getGroupId().equals( candidateParent.getGroupId() ) &&
+                        parentModel.getArtifactId().equals( candidateParent.getArtifactId() ) && (
+                        parentModel.getVersion().equals( candidateParent.getVersion() ) || (
+                            candidateParent.getParent() != null &&
+                                parentModel.getVersion().equals( candidateParent.getParent().getVersion() ) ) ) )
-                        
+
-                        
-                        getLogger().debug( "Using parent-POM from the project hierarchy at: \'" + parentModel.getRelativePath() + "\' for project: " + project.getId() );
+
+                        getLogger().debug( "Using parent-POM from the project hierarchy at: \'" +
+                            parentModel.getRelativePath() + "\' for project: " + project.getId() );
-                        getLogger().debug("Invalid parent-POM referenced by relative path: \'" + parentModel.getRelativePath() + "\'. It did not match parent specification in " + project.getId() );
+                        getLogger().debug( "Invalid parent-POM referenced by relative path: \'" +
+                            parentModel.getRelativePath() + "\'. It did not match parent specification in " +
+                            project.getId() );
-            
+
-            MavenProject parent = assembleLineage( model, lineage, aggregatedRemoteWagonRepositories, localRepository, externalProfiles, parentProjectDir );
+            MavenProject parent = assembleLineage( model, lineage, aggregatedRemoteWagonRepositories, localRepository,
+                                                   externalProfiles, parentProjectDir );
-    throws ProjectBuildingException
+        throws ProjectBuildingException
-        
+
