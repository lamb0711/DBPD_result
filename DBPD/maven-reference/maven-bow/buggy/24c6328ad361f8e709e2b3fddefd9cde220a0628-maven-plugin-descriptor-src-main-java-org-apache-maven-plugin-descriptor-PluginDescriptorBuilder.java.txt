declare the desired "prefix" inside the plugin descriptor instead of pulling apart the artifact ID (though that is how the default is created).
Currently, the reverse is not handled in anyway, so a non-default prefix may not work, but this makes the code easier to isolate.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168099 13f79535-47bb-0310-9956-ffa450edef68

-        String id = c.getChild( "id" ).getValue();
-        if ( id != null )
-        {
-            // TODO: remove. This is old style mojos (alpha-1)
-            pluginDescriptor.setGroupId( PluginDescriptor.getDefaultPluginGroupId() );
-            pluginDescriptor.setArtifactId( PluginDescriptor.getDefaultPluginArtifactId( id ) );
-        }
-        else
-        {
-            pluginDescriptor.setGroupId( c.getChild( "groupId" ).getValue() );
-            pluginDescriptor.setArtifactId( c.getChild( "artifactId" ).getValue() );
-        }
+        pluginDescriptor.setGroupId( c.getChild( "groupId" ).getValue() );
+        pluginDescriptor.setArtifactId( c.getChild( "artifactId" ).getValue() );
+        pluginDescriptor.setGoalPrefix( c.getChild( "goalPrefix" ).getValue() );
-            mojos.add( buildComponentDescriptor( component ) );
+            mojos.add( buildComponentDescriptor( component, pluginDescriptor ) );
-    public MojoDescriptor buildComponentDescriptor( PlexusConfiguration c )
+    public MojoDescriptor buildComponentDescriptor( PlexusConfiguration c, PluginDescriptor pluginDescriptor )
-
-        mojo.setId( c.getChild( "id" ).getValue() );
+        mojo.setPluginDescriptor( pluginDescriptor );
