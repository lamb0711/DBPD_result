Adding error reporting for most project errors via aspects that collect the context information and format a nice message (the aspect just binds to the errors API in org.apache.maven.project.error.*).

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@598748 13f79535-47bb-0310-9956-ffa450edef68

+        validateModel( model, pomFile );
+
+        project.setRemoteArtifactRepositories(
+            mavenTools.buildArtifactRepositories( model.getRepositories() ) );
+
+        String projectId = safeVersionlessKey( model.getGroupId(), model.getArtifactId() );
+
+        // TODO: these aren't taking active project artifacts into consideration in the reactor
+        project.setPluginArtifacts( createPluginArtifacts( projectId, project.getBuildPlugins(), pomFile ) );
+
+        project.setReportArtifacts( createReportArtifacts( projectId, project.getReportPlugins(), pomFile ) );
+
+        project.setExtensionArtifacts( createExtensionArtifacts( projectId, project.getBuildExtensions(), pomFile ) );
+
+        return project;
+    }
+
+    private void validateModel( Model model,
+                                File pomFile )
+        throws InvalidProjectModelException
+    {
-
-        project.setRemoteArtifactRepositories(
-            mavenTools.buildArtifactRepositories( model.getRepositories() ) );
-
-        // TODO: these aren't taking active project artifacts into consideration in the reactor
-        project.setPluginArtifacts( createPluginArtifacts( projectId, project.getBuildPlugins(), pomFile ) );
-
-        project.setReportArtifacts( createReportArtifacts( projectId, project.getReportPlugins(), pomFile ) );
-
-        project.setExtensionArtifacts( createExtensionArtifacts( projectId, project.getBuildExtensions(), pomFile ) );
-
-        return project;
-                throw new ProjectBuildingException( projectId, "Unable to parse version '" + version +
-                    "' for plugin '" + ArtifactUtils.versionlessKey( p.getGroupId(), p.getArtifactId() ) + "': " +
-                    e.getMessage(), pomLocation, e );
+                throw new InvalidProjectVersionException( projectId, "Plugin: " + p.getKey(), version, pomLocation, e );
-                    throw new ProjectBuildingException( projectId, "Unable to parse version '" + version +
-                        "' for report '" + ArtifactUtils.versionlessKey( p.getGroupId(), p.getArtifactId() ) + "': " +
-                        e.getMessage(), pomLocation, e );
+                    throw new InvalidProjectVersionException( projectId, "Report plugin: " + p.getKey(), version, pomLocation, e );
-                    throw new InvalidProjectVersionException( projectId, "extension '" + key,
+                    throw new InvalidProjectVersionException( projectId, "Extension: " + key,
