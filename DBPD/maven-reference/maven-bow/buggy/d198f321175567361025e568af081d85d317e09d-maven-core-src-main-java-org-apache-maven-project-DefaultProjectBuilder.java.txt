o Refactored project builder to support better error reporting

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@803598 13f79535-47bb-0310-9956-ffa450edef68

-    public MavenProject build( File pomFile, ProjectBuildingRequest configuration )
+    public ProjectBuildingResult build( File pomFile, ProjectBuildingRequest configuration )
-        return build( pomFile, true, configuration );
+        return build( pomFile, true, configuration, false );
-    private MavenProject build( File pomFile, boolean localProject, ProjectBuildingRequest configuration )
+    private DefaultProjectBuildingResult build( File pomFile, boolean localProject,
+                                                ProjectBuildingRequest configuration, boolean resolveDependencies )
-            return project;
+            ArtifactResolutionResult artifactResult = null;
+
+            if ( resolveDependencies )
+            {
+                Artifact artifact = new ProjectArtifact( project );
+
+                ArtifactResolutionRequest artifactRequest = new ArtifactResolutionRequest()
+                    .setArtifact( artifact )
+                    .setResolveRoot( false )
+                    .setResolveTransitively( true )
+                    .setCache( configuration.getRepositoryCache() )
+                    .setLocalRepository( configuration.getLocalRepository() )
+                    .setRemoteRepositories( project.getRemoteArtifactRepositories() )
+                    .setOffline( configuration.isOffline() )
+                    .setManagedVersionMap( project.getManagedVersionMap() );
+                // FIXME setTransferListener
+
+                artifactResult = repositorySystem.resolve( artifactRequest );
+
+                project.setArtifacts( artifactResult.getArtifacts() );
+            }
+
+            return new DefaultProjectBuildingResult( project, result.getProblems(), artifactResult );
-    public MavenProject build( Artifact artifact, ProjectBuildingRequest configuration )
+    public ProjectBuildingResult build( Artifact artifact, ProjectBuildingRequest configuration )
-        return build( artifact.getFile(), false, configuration );
+        return build( artifact.getFile(), false, configuration, false );
-    public MavenProject buildStandaloneSuperProject( ProjectBuildingRequest config )
+    public ProjectBuildingResult buildStandaloneSuperProject( ProjectBuildingRequest config )
-        return standaloneProject;
+        return new DefaultProjectBuildingResult( standaloneProject, result.getProblems(), null );
-    public MavenProjectBuildingResult buildProjectWithDependencies( File pomFile, ProjectBuildingRequest request )
+    public ProjectBuildingResult buildProjectWithDependencies( File pomFile, ProjectBuildingRequest request )
-        MavenProject project = build( pomFile, request );
-
-        Artifact artifact = new ProjectArtifact( project );                     
-        
-        ArtifactResolutionRequest artifactRequest = new ArtifactResolutionRequest()
-            .setArtifact( artifact )
-            .setResolveRoot( false )
-            .setResolveTransitively( true )
-            .setCache( request.getRepositoryCache() )
-            .setLocalRepository( request.getLocalRepository() )
-            .setRemoteRepositories( project.getRemoteArtifactRepositories() )
-            .setOffline( request.isOffline() )
-            .setManagedVersionMap( project.getManagedVersionMap() );
-        // FIXME setTransferListener
-        ArtifactResolutionResult result;
-
-        ClassLoader oldContextClassLoader = Thread.currentThread().getContextClassLoader();
-
-        try
-        {
-            if ( project.getClassRealm() != null )
-            {
-                Thread.currentThread().setContextClassLoader( project.getClassRealm() );
-            }
-
-            result = repositorySystem.resolve( artifactRequest );
-        }
-        finally
-        {
-            Thread.currentThread().setContextClassLoader( oldContextClassLoader );
-        }
-
-        if ( result.hasExceptions() )
-        {
-            Exception e = result.getExceptions().get( 0 );
-
-            throw new ProjectBuildingException( safeVersionlessKey( project.getGroupId(), project.getArtifactId() ), "Unable to build project due to an invalid dependency version: " + e.getMessage(),
-                                                pomFile, e );
-        }
-
-        project.setArtifacts( result.getArtifacts() );
-        
-        return new MavenProjectBuildingResult( project, result );
+        return build( pomFile, true, request, true );
-                    results.add( new DefaultProjectBuildingResult( project, result.getProblems() ) );
+                    results.add( new DefaultProjectBuildingResult( project, result.getProblems(), null ) );
