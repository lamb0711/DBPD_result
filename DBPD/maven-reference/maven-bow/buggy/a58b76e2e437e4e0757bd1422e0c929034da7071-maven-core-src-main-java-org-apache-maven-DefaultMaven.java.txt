Adding profiles.xml and settings.xml support for profiles, along with integration tests for each.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@189510 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.ModelNormalizationUtils;
+import org.apache.maven.model.Profile;
+import org.apache.maven.profile.AlwaysOnActivation;
+import org.apache.maven.profiles.MavenProfilesBuilder;
+import org.apache.maven.profiles.ProfilesRoot;
+import org.apache.maven.project.ExternalProfileInjector;
+import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
+    
+    protected MavenProfilesBuilder profilesBuilder;
+    
+    protected ExternalProfileInjector externalProfileInjector;
-            projects = collectProjects( request.getFiles(), request.getLocalRepository(), request.isRecursive() );
+            projects = collectProjects( request.getFiles(), request.getLocalRepository(), request.isRecursive(), request.getSettings() );
-    private List collectProjects( List files, ArtifactRepository localRepository, boolean recursive )
+    private List collectProjects( List files, ArtifactRepository localRepository, boolean recursive, Settings settings )
-            MavenProject project = getProject( file, localRepository );
+            MavenProject project = getProject( file, localRepository, settings );
-                List collectedProjects = collectProjects( moduleFiles, localRepository, recursive );
+                List collectedProjects = collectProjects( moduleFiles, localRepository, recursive, settings );
-    public MavenProject getProject( File pom, ArtifactRepository localRepository )
+    public MavenProject getProject( File pom, ArtifactRepository localRepository, Settings settings )
-        return projectBuilder.build( pom, localRepository );
+        MavenProject project = projectBuilder.build( pom, localRepository );
+        
+        // TODO: apply profiles.xml and settings.xml Profiles here.
+        List settingsProfiles = settings.getProfiles();
+        
+        if(settingsProfiles != null && !settingsProfiles.isEmpty())
+        {
+            List profiles = new ArrayList();
+            
+            List settingsActiveProfileIds = settings.getActiveProfiles();
+            
+            for ( Iterator it = settings.getProfiles().iterator(); it.hasNext(); )
+            {
+                org.apache.maven.settings.Profile rawProfile = (org.apache.maven.settings.Profile) it.next();
+                
+                Profile profile = ModelNormalizationUtils.convertFromSettingsProfile( rawProfile );
+                
+                if( settingsActiveProfileIds.contains( rawProfile.getId() ) )
+                {
+                    profile.setActivation( new AlwaysOnActivation() );
+                }
+                
+                profiles.add( profile );
+            }
+            
+            externalProfileInjector.injectExternalProfiles( project, profiles );
+        }
+        
+        try
+        {
+            ProfilesRoot root = profilesBuilder.buildProfiles( pom.getParentFile() );
+            
+            if( root != null )
+            {
+                List profiles = new ArrayList();
+                
+                for ( Iterator it = root.getProfiles().iterator(); it.hasNext(); )
+                {
+                    org.apache.maven.profiles.Profile rawProfile = (org.apache.maven.profiles.Profile) it.next();
+                    
+                    profiles.add( ModelNormalizationUtils.convertFromProfileXmlProfile( rawProfile ) );
+                }
+                
+                externalProfileInjector.injectExternalProfiles( project, profiles );
+            }
+        }
+        catch ( IOException e )
+        {
+            throw new ProjectBuildingException( "Cannot read profiles.xml resource for pom: " + pom, e );
+        }
+        catch ( XmlPullParserException e )
+        {
+            throw new ProjectBuildingException( "Cannot parse profiles.xml resource for pom: " + pom, e );
+        }
+        
+        return project;
