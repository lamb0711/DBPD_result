o Revised error handling

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@807736 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.Plugin;
-            try
+            if ( configuration.isProcessPlugins() && configuration.isProcessPluginConfiguration() )
-                if ( configuration.isProcessPlugins() && configuration.isProcessPluginConfiguration() )
+                RepositoryRequest repositoryRequest = new DefaultRepositoryRequest();
+                repositoryRequest.setLocalRepository( configuration.getLocalRepository() );
+                repositoryRequest.setRemoteRepositories( project.getPluginArtifactRepositories() );
+                repositoryRequest.setCache( configuration.getRepositoryCache() );
+                repositoryRequest.setOffline( configuration.isOffline() );
+
+                for ( Plugin plugin : project.getBuildPlugins() )
-                    RepositoryRequest repositoryRequest = new DefaultRepositoryRequest();
-                    repositoryRequest.setLocalRepository( configuration.getLocalRepository() );
-                    repositoryRequest.setRemoteRepositories( project.getPluginArtifactRepositories() );
-                    repositoryRequest.setCache( configuration.getRepositoryCache() );
-                    repositoryRequest.setOffline( configuration.isOffline() );
-            
-                    lifecycle.populateDefaultConfigurationForPlugins( project.getModel().getBuild().getPlugins(), repositoryRequest );
+                    try
+                    {
+                        lifecycle.populateDefaultConfigurationForPlugin( plugin, repositoryRequest );
+                    }
+                    catch ( LifecycleExecutionException e )
+                    {
+                        if ( modelProblems == null )
+                        {
+                            modelProblems = new ArrayList<ModelProblem>();
+                        }
+
+                        modelProblems.add( new DefaultModelProblem( e.getMessage(), ModelProblem.Severity.WARNING,
+                                                                    project.getModel(), e ) );
+                    }
-            catch ( LifecycleExecutionException e )
-            {
-                throw new ProjectBuildingException( project.getId(), e.getMessage(), e );
-            }
-        throws ProjectBuildingException
