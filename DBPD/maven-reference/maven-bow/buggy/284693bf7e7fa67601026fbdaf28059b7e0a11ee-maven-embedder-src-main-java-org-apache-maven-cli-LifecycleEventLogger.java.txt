o Improved logging

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@805351 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.execution.MavenSession;
+
-            logger.info( chars( '-', LINE_LENGTH ) );
-            logger.info( "Reactor Summary:" );
-            logger.info( chars( '-', LINE_LENGTH ) );
-
-            MavenExecutionResult result = event.getSession().getResult();
-
-            for ( MavenProject project : event.getSession().getProjects() )
+            if ( event.getSession().getProjects().size() > 1 )
-                StringBuilder buffer = new StringBuilder( 128 );
-
-                buffer.append( project.getName() );
-
-                while ( buffer.length() < LINE_LENGTH - 22 )
-                {
-                    buffer.append( '.' );
-                }
-
-                BuildSummary buildSummary = result.getBuildSummary( project );
-
-                if ( buildSummary == null )
-                {
-                    buffer.append( "SKIPPED" );
-                }
-                else if ( buildSummary instanceof BuildSuccess )
-                {
-                    buffer.append( "SUCCESS [" );
-                    buffer.append( getFormattedTime( buildSummary.getTime() ) );
-                    buffer.append( "]" );
-                }
-                else if ( buildSummary instanceof BuildFailure )
-                {
-                    buffer.append( "FAILURE [" );
-                    buffer.append( getFormattedTime( buildSummary.getTime() ) );
-                    buffer.append( "]" );
-                }
-
-                logger.info( buffer.toString() );
+                logReactorSummary( event.getSession() );
+            logResult( event.getSession() );
+
+            logStats( event.getSession() );
+
+    private void logReactorSummary( MavenSession session )
+    {
+        logger.info( chars( '-', LINE_LENGTH ) );
+        logger.info( "Reactor Summary:" );
+        logger.info( chars( '-', LINE_LENGTH ) );
+
+        MavenExecutionResult result = session.getResult();
+
+        for ( MavenProject project : session.getProjects() )
+        {
+            StringBuilder buffer = new StringBuilder( 128 );
+
+            buffer.append( project.getName() );
+
+            buffer.append( ' ' );
+            while ( buffer.length() < LINE_LENGTH - 21 )
+            {
+                buffer.append( '.' );
+            }
+            buffer.append( ' ' );
+
+            BuildSummary buildSummary = result.getBuildSummary( project );
+
+            if ( buildSummary == null )
+            {
+                buffer.append( "SKIPPED" );
+            }
+            else if ( buildSummary instanceof BuildSuccess )
+            {
+                buffer.append( "SUCCESS [" );
+                buffer.append( getFormattedTime( buildSummary.getTime() ) );
+                buffer.append( "]" );
+            }
+            else if ( buildSummary instanceof BuildFailure )
+            {
+                buffer.append( "FAILURE [" );
+                buffer.append( getFormattedTime( buildSummary.getTime() ) );
+                buffer.append( "]" );
+            }
+
+            logger.info( buffer.toString() );
+        }
+    }
+
+    private void logResult( MavenSession session )
+    {
+        logger.info( chars( '-', LINE_LENGTH ) );
+
+        if ( session.getResult().hasExceptions() )
+        {
+            logger.info( "BUILD FAILURE" );
+        }
+        else
+        {
+            logger.info( "BUILD SUCCESS" );
+        }
+    }
+
+    private void logStats( MavenSession session )
+    {
+        logger.info( chars( '-', LINE_LENGTH ) );
+
+        Date finish = new Date();
+
+        long time = finish.getTime() - session.getRequest().getStartTime().getTime();
+
+        logger.info( "Total time: " + getFormattedTime( time ) );
+
+        logger.info( "Finished at: " + finish );
+
+        System.gc();
+
+        Runtime r = Runtime.getRuntime();
+
+        long MB = 1024 * 1024;
+
+        logger.info( "Final Memory: " + ( r.totalMemory() - r.freeMemory() ) / MB + "M/" + r.totalMemory() / MB + "M" );
+    }
+
+            logger.info( chars( '-', LINE_LENGTH ) );
+            logger.info( chars( '-', LINE_LENGTH ) );
