[MNG-2186] correct the regression of MNG-1927 from the solution of MNG-2124
The interpolator was only working based on an incorrect assumption for a limited set of expressions. This assumption is
guaranteed by the solution in the interim, until it can be properly reconsidered. The proper solution would be to not
cache an interpolated model, and to apply path translation and then interpolation after retrieving the cached model. However,
this will require some other related changes and should be planned for 2.1.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@390098 13f79535-47bb-0310-9956-ffa450edef68

-        
+
-//        System.out.println( "Assembling inheritance..." );
-        
-//            System.out.println( "Assembling inheritance: " + previousProject.getId() + "(" + previousProject.getName() + ")" + " <- " + currentProject.getId() + "(" + currentProject.getName() + ")" );
-            
+
-            
+
-            
-//            System.out.println( "New parent project is: " + previousProject.getId() + "(" + previousProject.getName() + ")" );
+        // TODO: this is a hack to ensure MNG-2124 can be satisfied without triggering MNG-1927
+        //  MNG-1927 relies on the false assumption that ${project.build.*} evaluates to null, which occurs before
+        //  MNG-2124 is fixed. The null value would leave it uninterpolated, to be handled after path translation.
+        //  Until these steps are correctly sequenced, we guarantee these fields remain uninterpolated.
+        context.put( "build.directory", null );
+        context.put( "build.outputDirectory", null );
+        context.put( "build.testOutputDirectory", null );
+        context.put( "build.sourceDirectory", null );
+        context.put( "build.testSourceDirectory", null );
+
-            
+
-                
+
-            
+
-                
+
-                        
+
-                
+
-                
+
-            
+
-            
+
