reintroduce execution failures


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163412 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.execution.MavenExecutionResponse;
+import org.apache.maven.plugin.PluginExecutionResponse;
+import java.util.Date;
-     * @throws LifecycleExecutionException
-    public void execute( List tasks, MavenSession session )
-        throws LifecycleExecutionException
+    public MavenExecutionResponse execute( List tasks, MavenSession session )
-        for ( Iterator i = tasks.iterator(); i.hasNext(); )
-        {
-            String task = (String) i.next();
+        MavenExecutionResponse response = new MavenExecutionResponse();
-            if ( phaseMap.containsKey( task ) )
+        response.setStart( new Date() );
+
+        try
+        {
+            for ( Iterator i = tasks.iterator(); i.hasNext(); )
-                executePhase( task, session );
-            }
-            else
-            {
-                executeMojo( task, session );
+                String task = (String) i.next();
+
+                PluginExecutionResponse pluginResponse;
+
+                if ( phaseMap.containsKey( task ) )
+                {
+                    executePhase( task, session, response );
+                }
+                else
+                {
+                    pluginResponse = executeMojo( task, session );
+
+                    if ( pluginResponse.isExecutionFailure() )
+                    {
+                        response.setExecutionFailure( task, pluginResponse.getFailureResponse() );
+                        break;
+                    }
+                }
+        catch ( LifecycleExecutionException e )
+        {
+            response.setException( e );
+        }
+        finally
+        {
+            response.setFinish( new Date() );
+        }
+
+        return response;
-    protected void executePhase( String phase, MavenSession session )
+    protected void executePhase( String phase, MavenSession session, MavenExecutionResponse response )
-                executeMojo( p.getGoal(), session );
+                PluginExecutionResponse pluginResponse = executeMojo( p.getGoal(), session );
+
+                if ( pluginResponse.isExecutionFailure() )
+                {
+                    response.setExecutionFailure( p.getGoal(), pluginResponse.getFailureResponse() );
+                    break;
+                }
-    protected void executeMojo( String id, MavenSession session )
+    protected PluginExecutionResponse executeMojo( String id, MavenSession session )
-            pluginManager.executeMojo( session, id );
+            return pluginManager.executeMojo( session, id );
