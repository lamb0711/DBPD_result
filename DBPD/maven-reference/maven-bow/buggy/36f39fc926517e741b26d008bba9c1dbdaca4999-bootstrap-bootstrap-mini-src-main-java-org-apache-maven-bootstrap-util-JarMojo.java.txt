split bootstrap into two stages


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@344329 13f79535-47bb-0310-9956-ffa450edef68

+    private static final String MF = "META-INF/MANIFEST.MF";
+
-     * @param baseDir  the directory to add
+     * @param baseDir the directory to add
-    protected void addDirectory( Map includes, File baseDir ) throws IOException
+    protected void addDirectory( Map includes, File baseDir )
+        throws IOException
-     * @param prefix   value to be added to the front of jar entry names
-     * @param baseDir  the directory to add
+     * @param prefix value to be added to the front of jar entry names
+     * @param baseDir the directory to add
-    protected void addDirectory( Map includes, String prefix, File baseDir ) throws IOException
+    protected void addDirectory( Map includes, String prefix, File baseDir )
+        throws IOException
-     * @param includes        a map <String, File> of items to be include in the outpur
+     * @param includes a map <String, File> of items to be include in the outpur
-     * @param prefix          value to be added to the front of jar entry names
-     * @param baseDir         the directory to add
+     * @param prefix value to be added to the front of jar entry names
+     * @param baseDir the directory to add
-    protected void addDirectory( Map includes, String includesPattern, String excludesPattern, String prefix, File baseDir )
+    protected void addDirectory( Map includes, String includesPattern, String excludesPattern, String prefix,
+                                 File baseDir )
-     * @param jarFile  the jar file to create
+     * @param jarFile the jar file to create
-    protected void createJar( File jarFile, Map includes ) throws IOException
+    protected void createJar( File jarFile, Map includes )
+        throws IOException
-        JarOutputStream jos = createJar( jarFile, createManifest() );
+        JarOutputStream jos = createJar( jarFile, includes.containsKey( "META-INF/MANIFEST.MF" ) );
-        attrs.putValue( "Created-By", "2.0 (Apache Maven)" );
+        attrs.putValue( "Created-By", "Apache Maven Bootstrap Mini" );
-     * @param mf      the manifest to use
+     * @param manifestIncluded if the manifest is included
-    protected JarOutputStream createJar( File jarFile, Manifest mf ) throws IOException
+    protected JarOutputStream createJar( File jarFile, boolean manifestIncluded )
+        throws IOException
-            return new JarOutputStream( fos, mf );
+            if ( manifestIncluded )
+            {
+                return new JarOutputStream( fos );
+            }
+            else
+            {
+                return new JarOutputStream( fos, createManifest() );
+            }
-     * @param jos      a JarOutputStream that can be used to write to the jar
+     * @param jos a JarOutputStream that can be used to write to the jar
-    protected void addEntries( JarOutputStream jos, Map includes ) throws IOException
+    protected void addEntries( JarOutputStream jos, Map includes )
+        throws IOException
-     * @param jos    a JarOutputStream that can be used to write to the jar
-     * @param name   the entry name to use; must be '/' delimited
+     * @param jos a JarOutputStream that can be used to write to the jar
+     * @param name the entry name to use; must be '/' delimited
-    protected void addEntry( JarOutputStream jos, String name, File source ) throws IOException
+    protected void addEntry( JarOutputStream jos, String name, File source )
+        throws IOException
