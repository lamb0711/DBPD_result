Fixed profile activation for profiles in pom. Profile injection was causing double injection of some elements from plugin mng. Partial fix.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@758473 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Arrays;
+import org.apache.maven.model.BuildBase;
+import org.apache.maven.model.Dependency;
+import org.apache.maven.model.Plugin;
+import org.apache.maven.model.PluginExecution;
-import org.apache.maven.project.builder.PomClassicDomainModel;
+import org.apache.maven.model.Resource;
+
+    private static List<Processor> processors =
+        Arrays.<Processor> asList( new BuildProcessor( new ArrayList<Processor>() ), new ModuleProcessor(),
+                                   new PropertiesProcessor(), new ParentProcessor(), new OrganizationProcessor(),
+                                   new MailingListProcessor(), new IssueManagementProcessor(),
+                                   new CiManagementProcessor(), new ReportingProcessor(),
+                                   new RepositoriesProcessor(), new DistributionManagementProcessor(),
+                                   new LicensesProcessor(), new ScmProcessor(), new PrerequisitesProcessor(),
+                                   new ContributorsProcessor(), new DevelopersProcessor());
+    
-        List<Profile> c = (List<Profile>) child;
-        List<PomClassicDomainModel> models = new ArrayList<PomClassicDomainModel>();
-        for(Profile profile : c)
+        List<Profile> profiles = ((Model) child).getProfiles();
+        List<Profile> copies = new ArrayList<Profile>();
+        for(Profile p : profiles)
-           // models.add( new PomClassicDomainModel )
-            //copy(profile, t);
-        }   
-    }
+            copies.add( ProcessorContext.copyOfProfile(p) );
+        }
+        t.setProfiles( copies );
+   
+        //TODO - copy
+    }  
+
+    
+    private static Model attachProfileNodesToModel(Profile profile)
+    {
+        Model model = new Model();
+        model.setModules( new ArrayList<String>(profile.getModules()) );
+        model.setDependencies(new ArrayList<Dependency>(profile.getDependencies()));
+        model.setDependencyManagement( profile.getDependencyManagement());
+        model.setDistributionManagement( profile.getDistributionManagement() );
+        model.setProperties( profile.getProperties() );  
+        model.setModules( new ArrayList<String>(profile.getModules() ) );
+        BuildProcessor proc = new BuildProcessor( new ArrayList<Processor>());
+        proc.processWithProfile( profile.getBuild(), model);
+        return model;
+    }     
