o update the deps to the new releases of wagon wheels and plexus


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@486535 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.resolver.filter.AndArtifactFilter;
-import org.apache.maven.artifact.resolver.filter.AndArtifactFilter;
+import org.codehaus.plexus.classworlds.realm.ClassRealm;
-import org.codehaus.plexus.classworlds.realm.ClassRealm;
-    implements PluginManager,
-    Initializable,
-    Contextualizable
+    implements PluginManager, Initializable, Contextualizable
+
+
-            PlexusContainer pluginContainer = container.getChildContainer( plugin.getKey() );
-
-            File pluginFile = pluginArtifact.getFile();
-
-            if ( !pluginCollector.isPluginInstalled( plugin ) || pluginContainer == null )
+            if ( !pluginCollector.isPluginInstalled( plugin ) )
-            else if ( pluginFile.lastModified() > pluginContainer.getCreationDate().getTime() )
-            {
-                getLogger().info(
-                    "Reloading plugin container for: " + plugin.getKey() + ". The plugin artifact has changed." );
-
-                pluginContainer.dispose();
-
-                pluginCollector.flushPluginDescriptor( plugin );
-
-                addPlugin( plugin, pluginArtifact, project, localRepository );
-            }
+
+
+
+        // ----------------------------------------------------------------------------
+        // Realm creation for a plugin
+        // ----------------------------------------------------------------------------
+
-            throw new PluginManagerException(
-                "Failed to create realm for plugin '" + plugin + ".", e );
+            throw new PluginManagerException( "Failed to create realm for plugin '" + plugin + ".", e );
-        // this plugin's descriptor should have been discovered in the child creation, so we should be able to
-        // circle around and set the artifacts and class realm
+        // ----------------------------------------------------------------------------
+        // The PluginCollector will now know about the plugin we are trying to load
+        // ----------------------------------------------------------------------------
+
-        //pluginDescriptor.setClassRealm( child.getContainerRealm() );
+        // ----------------------------------------------------------------------------
+        // Get the dependencies for the Plugin
+        // ----------------------------------------------------------------------------                
+
-        
+
-
-            /*
-            try
-            {
-                PlexusContainer pluginContainer = getPluginContainer( mojoDescriptor.getPluginDescriptor() );
-
-                pluginContainer.release( plugin );
-            }
-            catch ( ComponentLifecycleException e )
-            {
-                if ( getLogger().isErrorEnabled() )
-                {
-                    getLogger().error( "Error releasing plugin - ignoring.", e );
-                }
-            }
-            */
-    private PlexusContainer getPluginContainer( PluginDescriptor pluginDescriptor )
-        throws PluginManagerException
-    {
-        return container;
-
-        /*
-        String pluginKey = pluginDescriptor.getPluginLookupKey();
-
-        PlexusContainer pluginContainer = container.getChildContainer( pluginKey );
-
-        if ( pluginContainer == null )
-        {
-            throw new PluginManagerException( "Cannot find Plexus container for plugin: " + pluginKey );
-        }
-
-        return pluginContainer;
-        */
-    }
-
-        PlexusContainer pluginContainer = getPluginContainer( pluginDescriptor );
-
-        ensurePluginContainerIsComplete( pluginDescriptor, pluginContainer, project, session );
+        ensurePluginContainerIsComplete( pluginDescriptor, container, project, session );
+
-            plugin = (Mojo) pluginContainer.lookup( Mojo.ROLE, mojoDescriptor.getRoleHint() );
+            plugin = (Mojo) container.lookup( Mojo.ROLE, mojoDescriptor.getRoleHint() );
+
+
+
-        populatePluginFields( plugin, mojoDescriptor, extractedMojoConfiguration, pluginContainer,
-                              expressionEvaluator );
+        populatePluginFields( plugin, mojoDescriptor, extractedMojoConfiguration, container, expressionEvaluator );
+
-            
+
+
+            // This needs to be able to use methods
+
-        PluginDescriptor pluginDescriptor = pluginCollector.getPluginDescriptor( plugin );
-
-        PlexusContainer pluginContainer = getPluginContainer( pluginDescriptor );
-
-        return pluginContainer.lookup( role, roleHint );
+        return container.lookup( role, roleHint );
-        PluginDescriptor pluginDescriptor = pluginCollector.getPluginDescriptor( plugin );
-
-        PlexusContainer pluginContainer = getPluginContainer( pluginDescriptor );
-
-        return pluginContainer.lookupMap( role );
+        return container.lookupMap( role );
