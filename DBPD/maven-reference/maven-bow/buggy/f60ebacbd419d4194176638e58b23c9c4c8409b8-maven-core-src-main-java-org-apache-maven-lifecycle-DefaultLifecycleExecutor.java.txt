o Fixed parsing of lifecycle mappings

git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@774886 13f79535-47bb-0310-9956-ffa450edef68

-                // org.apache.maven.plugins:maven-compiler-plugin:compile
+                // compile -> org.apache.maven.plugins:maven-compiler-plugin:compile[,gid:aid:goal,...]
-                parseLifecyclePhaseDefinitions( plugins, lifecyclePhasesForPackaging.values() );
+                for ( Map.Entry<String, String> goalsForLifecyclePhase : lifecyclePhasesForPackaging.entrySet() )
+                {
+                    String phase = goalsForLifecyclePhase.getKey();
+                    String goals = goalsForLifecyclePhase.getValue();
+                    parseLifecyclePhaseDefinitions( plugins, phase, goals );
+                }
-                parseLifecyclePhaseDefinitions( plugins, lifecycle.getDefaultPhases() );
+                for ( String goals : lifecycle.getDefaultPhases() )
+                {
+                    parseLifecyclePhaseDefinitions( plugins, null, goals );
+                }
-    private void parseLifecyclePhaseDefinitions( Map<Plugin, Plugin> plugins,
-                                                 Collection<String> lifecyclePhaseDefinitions )
+    private void parseLifecyclePhaseDefinitions( Map<Plugin, Plugin> plugins, String phase, String goals )
-        for ( String lifecyclePhaseDefinition : lifecyclePhaseDefinitions )
+        for ( StringTokenizer tok = new StringTokenizer( goals, "," ); tok.hasMoreTokens(); )
-            Plugin plugin = populatePluginWithInformationSpecifiedInLifecyclePhaseDefinition( lifecyclePhaseDefinition );
+            String goal = tok.nextToken().trim();
+            String[] p = StringUtils.split( goal, ":" );
+
+            PluginExecution execution = new PluginExecution();
+            // FIXME: Find a better execution id
+            execution.setId( "default-" + p[2] );
+            execution.setPhase( phase );
+            execution.getGoals().add( p[2] );
+
+            Plugin plugin = new Plugin();
+            plugin.setGroupId( p[0] );
+            plugin.setArtifactId( p[1] );
+
-                existing.getExecutions().addAll( plugin.getExecutions() );
+                plugin = existing;
+
+            plugin.getExecutions().add( execution );
-    private Plugin populatePluginWithInformationSpecifiedInLifecyclePhaseDefinition( String lifecyclePhaseDefinition )
-    {
-        String[] p = StringUtils.split( lifecyclePhaseDefinition, ":" );
-        Plugin plugin = new Plugin();
-        plugin.setGroupId( p[0] );
-        plugin.setArtifactId( p[1] );
-        PluginExecution execution = new PluginExecution();
-        // FIXME: Find a better execution id
-        execution.setId( "default-" + p[2] );
-        execution.setGoals( new ArrayList<String>( Arrays.asList( new String[] { p[2] } ) ) );
-        plugin.setExecutions( new ArrayList<PluginExecution>( Arrays.asList( new PluginExecution[] { execution } ) ) );
-        return plugin;
-    }
-    
-    public Xpp3Dom convert( MojoDescriptor mojoDescriptor  )
-    {        
+    Xpp3Dom convert( MojoDescriptor mojoDescriptor  )
+    {
-                
+
-        
-        for( PlexusConfiguration ce : ces )
-        {            
-            String defaultValue = ce.getAttribute( "default-value", null );
-            if ( ce.getValue( null ) != null || defaultValue != null )
+
+        if ( ces != null )
+        {
+            for ( PlexusConfiguration ce : ces )
-                Xpp3Dom e = new Xpp3Dom( ce.getName() );
-                e.setValue( ce.getValue( null ) );
-                if ( defaultValue != null )
+                String value = ce.getValue( null );
+                String defaultValue = ce.getAttribute( "default-value", null );
+                if ( value != null || defaultValue != null )
-                    e.setAttribute( "default-value", defaultValue );
+                    Xpp3Dom e = new Xpp3Dom( ce.getName() );
+                    e.setValue( value );
+                    if ( defaultValue != null )
+                    {
+                        e.setAttribute( "default-value", defaultValue );
+                    }
+                    dom.addChild( e );
-                dom.addChild( e );
