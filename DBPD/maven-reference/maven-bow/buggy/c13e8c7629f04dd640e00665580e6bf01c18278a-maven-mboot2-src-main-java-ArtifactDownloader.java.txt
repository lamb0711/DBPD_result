PR: MNG-74
remove maven.properties use everywhere except classworlds conf


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163024 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Properties;
-    private boolean ignoreErrors = true;
+    private boolean ignoreErrors = false;
-    public ArtifactDownloader( Properties properties )
+    public ArtifactDownloader( String localRepository, List remoteRepositories )
-        setRemoteRepo( properties.getProperty( "maven.repo.remote" ) );
+        setRemoteRepos( remoteRepositories );
-        String mavenRepoLocalProperty = properties.getProperty( "maven.repo.local" );
-        if ( mavenRepoLocalProperty == null )
+        if ( localRepository == null )
-            System.err.println( "maven.repo.local not specified in ~/maven.properties" );
+            System.err.println( "local repository not specified" );
-        mavenRepoLocal = new File( mavenRepoLocalProperty );
+        mavenRepoLocal = new File( localRepository );
-                System.err.println( "Cannot create the specified maven.repo.local: " + mavenRepoLocal );
+                System.err.println( "Cannot create the specified local repository: " + mavenRepoLocal );
-        System.out.println( "Using the following for your maven.repo.local: " + mavenRepoLocal );
+        System.out.println( "Using the following for your local repository: " + mavenRepoLocal );
+        System.out.println( "Using the following for your remote repositories: " + remoteRepos );
-            try
-            {
-                String file = (String) j.next();
+            String file = (String) j.next();
-                if ( !downloadedArtifacts.contains( file ) )
+            if ( !downloadedArtifacts.contains( file ) )
+            {
+                File destinationFile = new File( mavenRepoLocal, file );
+                // The directory structure for this project may
+                // not exists so create it if missing.
+                File directory = destinationFile.getParentFile();
+
+                if ( directory.exists() == false )
-                    File destinationFile = new File( mavenRepoLocal, file );
-                    // The directory structure for this project may
-                    // not exists so create it if missing.
-                    File directory = destinationFile.getParentFile();
-
-                    if ( directory.exists() == false )
-                    {
-                        directory.mkdirs();
-                    }
-
-                    if ( destinationFile.exists() && file.indexOf( SNAPSHOT_SIGNATURE ) < 0 )
-                    {
-                        continue;
-                    }
-
-                    getRemoteArtifact( file, destinationFile );
-
-                    if ( !destinationFile.exists() )
-                    {
-                        throw new Exception( "Failed to download " + file );
-                    }
-
-                    downloadedArtifacts.add( file );
+                    directory.mkdirs();
-            }
-            catch ( Exception e )
-            {
-                throw new Exception( e );
+
+                if ( destinationFile.exists() && file.indexOf( SNAPSHOT_SIGNATURE ) < 0 )
+                {
+                    continue;
+                }
+
+                getRemoteArtifact( file, destinationFile );
+
+                if ( !destinationFile.exists() )
+                {
+                    throw new Exception( "Failed to download " + file );
+                }
+
+                downloadedArtifacts.add( file );
-    private void setRemoteRepo( String repos )
+    private void setRemoteRepos( List repositories )
-        if ( repos == null )
+        if ( repositories != null )
-            remoteRepos.add( "http://www.ibiblio.org/maven/" );
-            return;
+            remoteRepos.addAll( repositories );
-        StringTokenizer st = new StringTokenizer( repos, "," );
-        while ( st.hasMoreTokens() )
+        if ( repositories.isEmpty() )
-            remoteRepos.add( st.nextToken().trim() );
+            remoteRepos.add( "http://www.ibiblio.org/maven/" );
-    private List getRemoteRepo()
+    private List getRemoteRepos()
-        for ( Iterator i = getRemoteRepo().iterator(); i.hasNext(); )
+        for ( Iterator i = getRemoteRepos().iterator(); i.hasNext(); )
+            else 
+            {
+                // THe JDK URL for file: should have one or no / instead of // for some reason
+                url = replace( url, "file://", "file:" );
+            }
+                log( "Downloading " + url );
+                log( "Artifact not found at [" + url + "]" );
-                log( "Error retrieving artifact from [" + url + "]: " );
+                log( "Error retrieving artifact from [" + url + "]: " + e );
