refactoring to simplify - taking notes of potential clean up after lifecycle is completed


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163410 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.resolver.ArtifactResolutionException;
+import org.apache.maven.artifact.resolver.ArtifactResolutionResult;
-            e.printStackTrace();
+            throw new GoalExecutionException( "Unable to execute goal: " + goalName, e );
-        MojoDescriptor mojoDescriptor = getMojoDescriptor( goalName );;
+        MojoDescriptor mojoDescriptor = getMojoDescriptor( goalName );
+
+        if ( mojoDescriptor.requiresDependencyResolution() )
+        {
+            resolveTransitiveDependencies( session );
+
+            downloadDependencies( session );
+        }
+
+    // ----------------------------------------------------------------------
+    // Artifact resolution
+    // ----------------------------------------------------------------------
+
+    private void resolveTransitiveDependencies( MavenSession context )
+        throws GoalExecutionException
+    {
+        MavenProject project = context.getProject();
+
+        try
+        {
+            MavenMetadataSource sourceReader = new MavenMetadataSource( artifactResolver, mavenProjectBuilder );
+
+            ArtifactResolutionResult result = artifactResolver.resolveTransitively( project.getArtifacts(),
+                                                                                    context.getRemoteRepositories(),
+                                                                                    context.getLocalRepository(),
+                                                                                    sourceReader );
+
+            project.getArtifacts().addAll( result.getArtifacts().values() );
+
+        }
+        catch ( Exception e )
+        {
+            throw new GoalExecutionException( "Error resolving transitive dependencies.", e );
+        }
+    }
+
+    // ----------------------------------------------------------------------
+    // Artifact downloading
+    // ----------------------------------------------------------------------
+
+    private void downloadDependencies( MavenSession context )
+        throws GoalExecutionException
+    {
+        try
+        {
+            for ( Iterator it = context.getProject().getArtifacts().iterator(); it.hasNext(); )
+            {
+                Artifact artifact = (Artifact) it.next();
+
+                artifactResolver.resolve( artifact,
+                                          context.getRemoteRepositories(),
+                                          context.getLocalRepository() );
+            }
+        }
+        catch ( ArtifactResolutionException e )
+        {
+            throw new GoalExecutionException( "Can't resolve artifact: ", e );
+        }
+    }
+
