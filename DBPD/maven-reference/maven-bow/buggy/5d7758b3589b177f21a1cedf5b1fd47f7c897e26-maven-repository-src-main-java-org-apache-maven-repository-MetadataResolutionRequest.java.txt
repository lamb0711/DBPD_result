o pull from trunky dunk dunk


git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@767707 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.resolver.ArtifactResolutionRequest;
-    private Artifact artifact;
+    private MavenArtifactMetadata mad;
+
+    private String scope;
-    // Not sure what to do with this?
-    // Scope
-    // Lock down lists
-    private ArtifactFilter filter;
-
-    // Needs to go away
-    private List<ResolutionListener> listeners = new ArrayList<ResolutionListener>();
-
-    // This should not be in here, it's a component
-    private ArtifactMetadataSource metadataSource;
-
-    private boolean resolveRoot = true;
+    /** result type - flat list; the default */
+    private boolean asList = true;
+    
+    /** result type - dirty tree */
+    private boolean asDirtyTree = false;
+    
+    /** result type - resolved tree */
+    private boolean asResolvedTree = false;
+    
+    /** result type - graph */
+    private boolean asGraph = false;
-    public MetadataResolutionRequest( Artifact artifact, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories )    
+    public MetadataResolutionRequest( MavenArtifactMetadata md, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories )    
-        this.artifact = artifact;
+        this.mad = md;
-    public Artifact getArtifact()
+    public MavenArtifactMetadata getArtifactMetadata()
-        return artifact;
+        return mad;
-    public MetadataResolutionRequest setArtifact( Artifact artifact )
+    public MetadataResolutionRequest setArtifactMetadata( MavenArtifactMetadata md )
-        this.artifact = artifact;
+        this.mad = md;
-    public ArtifactFilter getFilter()
-    {
-        return filter;
-    }
-
-    public MetadataResolutionRequest setFilter( ArtifactFilter filter )
-    {
-        this.filter = filter;
-
-        return this;
-    }
-
-    public List<ResolutionListener> getListeners()
-    {
-        return listeners;
-    }
-
-    public MetadataResolutionRequest setListeners( List<ResolutionListener> listeners )
-    {        
-        this.listeners = listeners;
-        
-        return this;
-    }
-    
-    public MetadataResolutionRequest addListener( ResolutionListener listener )
-    {
-        listeners.add( listener );
-
-        return this;
-    }
-
-    // ------------------------------------------------------------------------
-    //
-    // ------------------------------------------------------------------------
-
-    public ArtifactMetadataSource getMetadataSource()
-    {
-        return metadataSource;
-    }
-
-    public MetadataResolutionRequest setMetadataSource( ArtifactMetadataSource metadataSource )
-    {
-        this.metadataSource = metadataSource;
-
-        return this;
-    }
-
-    public MetadataResolutionRequest setResolveRoot( boolean resolveRoot )
-    {
-        this.resolveRoot = resolveRoot;
-        
-        return this;
-    }
-    
-    public boolean isResolveRoot()
-    {
-        return resolveRoot;
-    }
-    
-                .append( "artifact: " ).append( artifact ).append(  "\n" )
+                .append( "artifact: " ).append( mad ).append(  "\n" )
-                .append( "metadataSource: " ).append(  metadataSource ).append(  "\n" );
+                ;
+
+    public boolean isAsList()
+    {
+        return asList;
+    }
+
+    public MetadataResolutionRequest setAsList( boolean asList )
+    {
+        this.asList = asList;
+        return this;
+    }
+
+    public boolean isAsDirtyTree()
+    {
+        return asDirtyTree;
+    }
+
+    public MetadataResolutionRequest setAsDirtyTree( boolean asDirtyTree )
+    {
+        this.asDirtyTree = asDirtyTree;
+        return this;
+    }
+
+    public boolean isAsResolvedTree()
+    {
+        return asResolvedTree;
+    }
+
+    public MetadataResolutionRequest setAsResolvedTree( boolean asResolvedTree )
+    {
+        this.asResolvedTree = asResolvedTree;
+        return this;
+    }
+
+    public boolean isAsGraph()
+    {
+        return asGraph;
+    }
+
+    public MetadataResolutionRequest setAsGraph( boolean asGraph )
+    {
+        this.asGraph = asGraph;
+        return this;
+    }
+
+    public MetadataResolutionRequest setScope( String scope )
+    {
+        this.scope = scope;
+        return this;
+    }
+
+    public String getScope()
+    {
+        return scope;
+    }
