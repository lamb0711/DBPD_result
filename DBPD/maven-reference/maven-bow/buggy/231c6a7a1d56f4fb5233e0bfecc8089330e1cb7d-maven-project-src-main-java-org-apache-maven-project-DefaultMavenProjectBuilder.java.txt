PR: MNG-615
implement repository confidence levels. currently updates poms daily if they are not deployed or verified

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@225714 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.ArtifactStatus;
+import org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;
+import java.util.Date;
+        if ( project.getDistributionManagement() != null && project.getDistributionManagement().getStatus() != null )
+        {
+            throw new ProjectBuildingException(
+                "Invalid project file: distribution status must not be specified for a project outside of the repository" );
+        }
+
+
+                String downloadUrl = null;
+                ArtifactStatus status = ArtifactStatus.NONE;
+
+                DistributionManagement distributionManagement = model.getDistributionManagement();
+                if ( distributionManagement != null )
+                {
+                    downloadUrl = distributionManagement.getDownloadUrl();
+
+                    status = ArtifactStatus.valueOf( distributionManagement.getStatus() );
+                }
+
+                // TODO: configurable actions dependant on status
+                if ( status.compareTo( ArtifactStatus.VERIFIED ) < 0 )
+                {
+                    // use default policy (enabled, daily update, warn on bad checksum)
+                    ArtifactRepositoryPolicy policy = new ArtifactRepositoryPolicy();
+
+                    if ( policy.checkOutOfDate( new Date( file.lastModified() ) ) )
+                    {
+                        getLogger().info(
+                            artifact.getArtifactId() + ": updating metadata due to status of '" + status + "'" );
+                        try
+                        {
+                            artifactResolver.resolveAlways( artifact, remoteArtifactRepositories, localRepository );
+                        }
+                        catch ( ArtifactResolutionException e )
+                        {
+                            getLogger().warn( "Error updating POM - using existing version", e );
+                        }
+                    }
+                }
+
+                // TODO: this is gross. Would like to give it the whole model, but maven-artifact shouldn't depend on that
+                // Can a maven-core implementation of the Artifact interface store it, and be used in the exceptions?
+                if ( downloadUrl != null )
+                {
+                    artifact.setDownloadUrl( downloadUrl );
+                }
+                else
+                {
+                    artifact.setDownloadUrl( model.getUrl() );
+                }
+
-            }
-        }
-        // TODO: this is gross. Would like to give it the whole model, but maven-artifact shouldn't depend on that
-        // Can a maven-core implementation of the Artifact interface store it, and be used in the exceptions?
-        String downloadUrl = null;
-        if ( model.getDistributionManagement() != null )
-        {
-            downloadUrl = model.getDistributionManagement().getDownloadUrl();
-        }
-        if ( downloadUrl != null )
-        {
-            artifact.setDownloadUrl( downloadUrl );
-        }
-        else
-        {
-            artifact.setDownloadUrl( model.getUrl() );
+                // TODO: save to disk with a "generated" status
+            }
-            Artifact parentArtifact = artifactFactory.createProjectArtifact( parentProject.getGroupId(),
-                                                                             parentProject.getArtifactId(),
-                                                                             parentProject.getVersion() );
+            Artifact parentArtifact = artifactFactory.createParentArtifact( parentProject.getGroupId(),
+                                                                            parentProject.getArtifactId(),
+                                                                            parentProject.getVersion() );
