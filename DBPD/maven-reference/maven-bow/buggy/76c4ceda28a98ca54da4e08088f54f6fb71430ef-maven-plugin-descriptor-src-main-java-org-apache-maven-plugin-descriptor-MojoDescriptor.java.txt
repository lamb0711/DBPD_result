o Added duplicate check for mojo descriptor Parameters
o changed the exception(s) throws during mojo descriptor extraction to be derivatives of InvalidPluginDescriptorException
o changed PluginConfigurationException in plugin.descriptor to InvalidPluginDescriptorException
o changed all "true".equals(something) to Boolean.valueOf(something).booleanValue()
o added validation of 'modelVersion' back to [Default]ModelValidator
o Fixed/added tests for new 'modelVersion' validation
o changed all requiresXXX in MojoDescriptor to XXXRequired, and getRequiresXXX():boolean to isXXXRequired():boolean to help maintain bean-ness for future use




git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168630 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.LinkedList;
-    private String requiresDependencyResolution = null;
+    private String dependencyResolutionRequired = null;
-    private boolean requiresProject = true;
+    private boolean projectRequired = true;
-    private boolean requiresOnline = false;
+    private boolean onlineRequired = false;
+        throws DuplicateParameterException
-        this.parameters = parameters;
+        for ( Iterator it = parameters.iterator(); it.hasNext(); )
+        {
+            Parameter parameter = (Parameter) it.next();
+            addParameter( parameter );
+        }
+    }
+    
+    public void addParameter( Parameter parameter )
+        throws DuplicateParameterException
+    {
+        if ( parameters != null && parameters.contains( parameter ) )
+        {
+            throw new DuplicateParameterException( parameter.getName()
+                + " has been declared multiple times in mojo with goal: " + getGoal() + " (implementation: "
+                + getImplementation() + ")" );
+        }
+        else
+        {
+            if ( parameters == null )
+            {
+                parameters = new LinkedList();
+            }
+
+            parameters.add( parameter );
+        }
-    public void setRequiresDependencyResolution( String requiresDependencyResolution )
+    public void setDependencyResolutionRequired( String requiresDependencyResolution )
-        this.requiresDependencyResolution = requiresDependencyResolution;
+        this.dependencyResolutionRequired = requiresDependencyResolution;
-    public String getRequiresDependencyResolution()
+    public String isDependencyResolutionRequired()
-        return requiresDependencyResolution;
+        return dependencyResolutionRequired;
-    public void setRequiresProject( boolean requiresProject )
+    public void setProjectRequired( boolean requiresProject )
-        this.requiresProject = requiresProject;
+        this.projectRequired = requiresProject;
-    public boolean getRequiresProject()
+    public boolean isProjectRequired()
-        return requiresProject;
+        return projectRequired;
-    public void setRequiresOnline( boolean requiresOnline )
+    public void setOnlineRequired( boolean requiresOnline )
-        this.requiresOnline = requiresOnline;
+        this.onlineRequired = requiresOnline;
-    public boolean isRequiresOnline()
+    public boolean isOnlineRequired()
-        return requiresOnline;
+        return onlineRequired;
-        return requiresOnline;
+        return onlineRequired;
