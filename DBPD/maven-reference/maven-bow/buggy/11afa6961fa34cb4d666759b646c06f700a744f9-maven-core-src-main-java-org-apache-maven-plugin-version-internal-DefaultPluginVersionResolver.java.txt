o Fixed repo logging to go consistently through listener

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@998715 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
+import org.sonatype.aether.RepositoryListener;
+import org.sonatype.aether.RepositorySystemSession;
-import org.sonatype.aether.transfer.MetadataNotFoundException;
+import org.sonatype.aether.util.listener.DefaultRepositoryEvent;
-            if ( res.getException() != null )
+            ArtifactRepository repository = res.getRequest().getRepository();
+            if ( repository == null )
-                if ( res.getException() instanceof MetadataNotFoundException )
-                {
-                    logger.debug( "Could not find " + res.getRequest().getMetadata() + " in "
-                        + res.getRequest().getRepository() );
-                }
-                else if ( logger.isDebugEnabled() )
-                {
-                    logger.warn( "Could not retrieve " + res.getRequest().getMetadata() + " from "
-                        + res.getRequest().getRepository() + ": " + res.getException().getMessage(), res.getException() );
-                }
-                else
-                {
-                    logger.warn( "Could not retrieve " + res.getRequest().getMetadata() + " from "
-                        + res.getRequest().getRepository() + ": " + res.getException().getMessage() );
-                }
+                repository = request.getRepositorySession().getLocalRepository();
-            if ( res.getMetadata() != null )
-            {
-                mergeMetadata( versions, res.getMetadata().getFile(), res.getRequest().getRepository() );
-            }
+            mergeMetadata( request.getRepositorySession(), versions, res.getMetadata(), repository );
-    private void mergeMetadata( Versions versions, File metadataFile, ArtifactRepository repository )
+    private void mergeMetadata( RepositorySystemSession session, Versions versions,
+                                org.sonatype.aether.metadata.Metadata metadata, ArtifactRepository repository )
-        if ( metadataFile != null && metadataFile.isFile() )
+        if ( metadata != null && metadata.getFile() != null && metadata.getFile().isFile() )
-                Metadata repoMetadata = metadataReader.read( metadataFile, options );
+                Metadata repoMetadata = metadataReader.read( metadata.getFile(), options );
-                if ( logger.isDebugEnabled() )
-                {
-                    logger.warn( "Failed to read metadata " + metadataFile + ": " + e.getMessage(), e );
-                }
-                else
-                {
-                    logger.warn( "Failed to read metadata " + metadataFile + ": " + e.getMessage() );
-                }
+                invalidMetadata( session, metadata, repository, e );
+    private void invalidMetadata( RepositorySystemSession session, org.sonatype.aether.metadata.Metadata metadata,
+                                  ArtifactRepository repository, Exception exception )
+    {
+        RepositoryListener listener = session.getRepositoryListener();
+        if ( listener != null )
+        {
+            DefaultRepositoryEvent event = new DefaultRepositoryEvent( session, metadata );
+            event.setException( exception );
+            event.setRepository( repository );
+            listener.metadataInvalid( event );
+        }
+    }
+
