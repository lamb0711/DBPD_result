pre-process plugins


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163420 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.plugin.descriptor.MojoDescriptor;
-import java.util.HashSet;
-import java.util.Set;
-        Set seenPhases = new HashSet();
+            preProcessPlugins( tasks, session );
+
-        catch ( LifecycleExecutionException e )
+        catch ( Exception e )
-    protected void executePhase( String phase, MavenSession session, MavenExecutionResponse response )
+    private void preProcessPlugins( List tasks, MavenSession session )
+        throws Exception
+    {
+        for ( Iterator i = tasks.iterator(); i.hasNext(); )
+        {
+            String task = (String) i.next();
+
+            PluginExecutionResponse pluginResponse;
+
+            if ( phaseMap.containsKey( task ) )
+            {
+                // only execute up to the given phase
+                int index = phases.indexOf( phaseMap.get( task ) );
+
+                for ( int j = 0; j <= index; j++ )
+                {
+                    Phase p = (Phase) phases.get( j );
+
+                    if ( p.getGoals() != null )
+                    {
+                        for ( Iterator k = p.getGoals().iterator(); k.hasNext(); )
+                        {
+                            String goal = (String) k.next();
+
+                            verifyMojoPhase( goal, session );
+                        }
+                    }
+                }
+            }
+            else
+            {
+                verifyMojoPhase( task, session );
+            }
+        }
+    }
+
+    private void verifyMojoPhase( String task, MavenSession session )
+        throws Exception
+    {
+        MojoDescriptor mojoDescriptor = pluginManager.getMojoDescriptor( task );
+        if ( mojoDescriptor == null )
+        {
+            pluginManager.verifyPluginForGoal( task, session );
+            mojoDescriptor = pluginManager.getMojoDescriptor( task );
+            if ( mojoDescriptor.getPhase() != null )
+            {
+                Phase phase = (Phase) phaseMap.get( mojoDescriptor.getPhase() );
+                phase.getGoals().add( task );
+            }
+        }
+    }
+
+    private void executePhase( String phase, MavenSession session, MavenExecutionResponse response )
