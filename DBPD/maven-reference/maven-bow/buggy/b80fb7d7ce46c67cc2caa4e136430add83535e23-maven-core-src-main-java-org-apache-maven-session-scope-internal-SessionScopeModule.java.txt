MNG-5695 fixed inconsistent/incomplete custom guice scope bindings

MojoExecution scope was only available for maven plugins and could not
be used for components defined in maven core or maven code extensions.

Session scope was only available for maven core and core extensions
but did not work for components from maven plugins.

Made both custom scopes available available in all realms.

Signed-off-by: Igor Fedorenko <ifedorenko@apache.org>

-package org.apache.maven;
+package org.apache.maven.session.scope.internal;
+import javax.inject.Inject;
+import org.apache.maven.SessionScoped;
+import org.codehaus.plexus.PlexusContainer;
+import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
-public class SessionModule extends AbstractModule
-{            
+public class SessionScopeModule
+    extends AbstractModule
+{
+    private final SessionScope scope;
+
+    @Inject
+    public SessionScopeModule()
+    {
+        this( new SessionScope() );
+    }
+
+    public SessionScopeModule( PlexusContainer container )
+        throws ComponentLookupException
+    {
+        this( container.lookup( SessionScope.class ) );
+    }
+
+    private SessionScopeModule( SessionScope scope )
+    {
+        this.scope = scope;
+    }
+
-        SessionScope scope = new SessionScope();
-        bind( MavenSession.class ).toProvider( SessionScope.<MavenSession>seededKeyProvider() ).in( scope );
+
+        bind( MavenSession.class ).toProvider( SessionScope.<MavenSession> seededKeyProvider() ).in( scope );
