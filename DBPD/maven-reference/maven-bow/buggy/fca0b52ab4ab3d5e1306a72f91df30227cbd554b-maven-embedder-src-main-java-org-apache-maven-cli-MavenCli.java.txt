o Restored support for IT execution using embedded Maven

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@830178 13f79535-47bb-0310-9956-ffa450edef68

+    private ClassWorld classWorld;
+
+    // Per-instance container supports fast embedded execution of core ITs
+    private DefaultPlexusContainer container;
+
+    public MavenCli()
+    {
+        this( null );
+    }
+
+    // This supports painless invocation by the Verifier during embedded execution of the core ITs
+    public MavenCli( ClassWorld classWorld )
+    {
+        this.classWorld = classWorld;
+    }
+
+    // This supports painless invocation by the Verifier during embedded execution of the core ITs
+    public int doMain( String[] args, String workingDirectory, PrintStream stdout, PrintStream stderr )
+    {
+        CliRequest cliRequest = new CliRequest( args, classWorld );
+        cliRequest.workingDirectory = workingDirectory;
+        cliRequest.stdout = stdout;
+        cliRequest.stderr = stderr;
+
+        return doMain( cliRequest );
+    }
+
-        
-        logger = new PrintStreamLogger( cliRequest.stdout );
+
+        if ( logger == null )
+        {
+            logger = new PrintStreamLogger( cliRequest.stdout );
+        }
+        else
+        {
+            logger.setStream( cliRequest.stdout );
+        }
-        ContainerConfiguration cc = new DefaultContainerConfiguration()
-            .setClassWorld( cliRequest.classWorld )
-            .setName( "maven" );
+        DefaultPlexusContainer container = this.container;
-        DefaultPlexusContainer container = new DefaultPlexusContainer( cc );
+        if ( container == null )
+        {
+            ContainerConfiguration cc = new DefaultContainerConfiguration()
+                .setClassWorld( cliRequest.classWorld )
+                .setName( "maven" );
-        container.setLoggerManager( new MavenLoggerManager( logger ) );
+            container = new DefaultPlexusContainer( cc );
-        container.getLoggerManager().setThresholds( cliRequest.request.getLoggingLevel() );
-        
-        customizeContainer( container );
+            container.setLoggerManager( new MavenLoggerManager( logger ) );
+
+            container.getLoggerManager().setThresholds( cliRequest.request.getLoggingLevel() );
+
+            customizeContainer( container );
+
+            if ( cliRequest.classWorld == classWorld )
+            {
+                this.container = container;
+            }
+        }
