fixed errors reported by Checkstyle

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@958295 13f79535-47bb-0310-9956-ffa450edef68

-        public static final int INTEGER_ITEM = 0;
-        public static final int STRING_ITEM = 1;
-        public static final int LIST_ITEM = 2;
+        final int INTEGER_ITEM = 0;
+        final int STRING_ITEM = 1;
+        final int LIST_ITEM = 2;
-        public int compareTo( Item item );
+        int compareTo( Item item );
-        public int getType();
+        int getType();
-        public boolean isNull();
+        boolean isNull();
-        	this.value = BigInteger_ZERO;
+            this.value = BigInteger_ZERO;
-        private final static String[] QUALIFIERS = { "alpha", "beta", "milestone", "rc", "snapshot", "", "sp" };
+        private static final String[] QUALIFIERS = { "alpha", "beta", "milestone", "rc", "snapshot", "", "sp" };
-        private final static List<String> _QUALIFIERS = Arrays.asList( QUALIFIERS );
+        private static final List<String> _QUALIFIERS = Arrays.asList( QUALIFIERS );
-        private final static Properties ALIASES = new Properties();
-        static {
+        private static final Properties ALIASES = new Properties();
+        static
+        {
+
-         * A comparable value for the empty-string qualifier. This one is used to determine if a given qualifier makes the
-         * version older than one without a qualifier, or more recent.
+         * A comparable value for the empty-string qualifier. This one is used to determine if a given qualifier makes
+         * the version older than one without a qualifier, or more recent.
-        private static String RELEASE_VERSION_INDEX = String.valueOf( _QUALIFIERS.indexOf( "" ) );
+        private static final String RELEASE_VERSION_INDEX = String.valueOf( _QUALIFIERS.indexOf( "" ) );
-                Item first = (Item) get(0);
+                Item first = get( 0 );
-                        Item l = left.hasNext() ? (Item) left.next() : null;
-                        Item r = right.hasNext() ? (Item) right.next() : null;
+                        Item l = left.hasNext() ? left.next() : null;
+                        Item r = right.hasNext() ? right.next() : null;
-        return ( o instanceof ComparableVersion ) && canonical.equals( ( ( ComparableVersion )o ).canonical );
+        return ( o instanceof ComparableVersion ) && canonical.equals( ( (ComparableVersion) o ).canonical );
