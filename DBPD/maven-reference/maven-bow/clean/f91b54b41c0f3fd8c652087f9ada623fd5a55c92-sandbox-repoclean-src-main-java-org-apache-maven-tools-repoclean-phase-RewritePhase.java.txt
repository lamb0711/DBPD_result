enable repo clean for new metadata

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@290069 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.metadata.ReleaseArtifactMetadata;
-import org.apache.maven.artifact.metadata.SnapshotArtifactMetadata;
+import org.apache.maven.artifact.repository.metadata.ArtifactRepositoryMetadata;
+import org.apache.maven.artifact.repository.metadata.Metadata;
+import org.apache.maven.artifact.repository.metadata.SnapshotArtifactRepositoryMetadata;
+import org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Reader;
+import org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Writer;
+import org.apache.maven.project.artifact.ProjectArtifactMetadata;
-import org.apache.maven.tools.repoclean.artifact.metadata.ProjectMetadata;
+import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
+import java.io.Reader;
+import java.io.Writer;
-        // SNAPSHOT metadata
-        ArtifactMetadata snapshot = new SnapshotArtifactMetadata( artifact );
+        ArtifactMetadata metadata = new ArtifactRepositoryMetadata( artifact );
-        File snapshotSource = new File( sourceBase, sourceRepo.pathOfArtifactMetadata( snapshot ) );
-        File snapshotTarget = new File( targetBase, targetRepo.pathOfArtifactMetadata( snapshot ) );
+        File metadataSource = new File( sourceBase, sourceRepo.pathOfRemoteRepositoryMetadata( metadata ) );
+        File metadataTarget = new File( targetBase, targetRepo.pathOfRemoteRepositoryMetadata( metadata ) );
-        freshenSupplementalMetadata( snapshotSource, snapshotTarget, transaction, artifactReporter, reportOnly );
+        mergeMetadata( metadataSource, metadataTarget, transaction, artifactReporter, reportOnly );
-        // RELEASE metadata
-        ArtifactMetadata release = new ReleaseArtifactMetadata( artifact );
+        metadata = new SnapshotArtifactRepositoryMetadata( artifact );
-        File releaseSource = new File( sourceBase, sourceRepo.pathOfArtifactMetadata( release ) );
-        File releaseTarget = new File( targetBase, targetRepo.pathOfArtifactMetadata( release ) );
+        metadataSource = new File( sourceBase, sourceRepo.pathOfRemoteRepositoryMetadata( metadata ) );
+        metadataTarget = new File( targetBase, targetRepo.pathOfRemoteRepositoryMetadata( metadata ) );
-        freshenSupplementalMetadata( releaseSource, releaseTarget, transaction, artifactReporter, reportOnly );
+        mergeMetadata( metadataSource, metadataTarget, transaction, artifactReporter, reportOnly );
-        ArtifactMetadata pom = new ProjectMetadata( artifact );
+        ArtifactMetadata pom = new ProjectArtifactMetadata( artifact, null );
-        File sourcePom = new File( sourceBase, sourceRepo.pathOfArtifactMetadata( pom ) );
-        File targetPom = new File( targetBase, targetRepo.pathOfArtifactMetadata( pom ).replace( '+', '-' ) );
+        File sourcePom = new File( sourceBase, sourceRepo.pathOfRemoteRepositoryMetadata( pom ) );
+        File targetPom = new File( targetBase, targetRepo.pathOfRemoteRepositoryMetadata( pom ).replace( '+', '-' ) );
-                freshenSupplementalMetadata( sourcePom, targetPom, transaction, artifactReporter, reportOnly );
+                copyMetadata( sourcePom, targetPom, transaction, artifactReporter, reportOnly );
-                                             bridgingLayout.pathOfArtifactMetadata( pom ).replace( '+', '-' ) );
+                                             bridgingLayout.pathOfRemoteRepositoryMetadata( pom ).replace( '+', '-' ) );
-    private void freshenSupplementalMetadata( File source, File target, RewriteTransaction transaction,
-                                              Reporter artifactReporter, boolean reportOnly )
+    private void mergeMetadata( File source, File target, RewriteTransaction transaction, Reporter artifactReporter,
+                                boolean reportOnly )
+        throws IOException, DigestException, ReportWriteException, XmlPullParserException
+    {
+        if ( source.exists() )
+        {
+            if ( !target.exists() )
+            {
+                copyMetadata( source, target, transaction, artifactReporter, reportOnly );
+            }
+            else
+            {
+                MetadataXpp3Reader mappingReader = new MetadataXpp3Reader();
+
+                Metadata sourceMetadata = null;
+
+                Reader reader = null;
+
+                try
+                {
+                    reader = new FileReader( source );
+
+                    sourceMetadata = mappingReader.read( reader );
+                }
+                finally
+                {
+                    IOUtil.close( reader );
+                    reader = null;
+                }
+
+                Metadata targetMetadata = null;
+
+                try
+                {
+                    reader = new FileReader( target );
+
+                    targetMetadata = mappingReader.read( reader );
+                }
+                finally
+                {
+                    IOUtil.close( reader );
+                }
+
+                boolean changed = false;
+
+                changed |= targetMetadata.merge( sourceMetadata );
+
+                if ( changed )
+                {
+                    Writer writer = null;
+                    try
+                    {
+                        target.getParentFile().mkdirs();
+                        writer = new FileWriter( target );
+
+                        MetadataXpp3Writer mappingWriter = new MetadataXpp3Writer();
+
+                        mappingWriter.write( writer, targetMetadata );
+                    }
+                    finally
+                    {
+                        IOUtil.close( writer );
+                    }
+                }
+
+                digestVerifier.verifyDigest( source, target, transaction, artifactReporter, reportOnly );
+            }
+        }
+    }
+
+    private void copyMetadata( File source, File target, RewriteTransaction transaction, Reporter artifactReporter,
+                               boolean reportOnly )
-        freshenSupplementalMetadata( targetPom, bridgedTargetPom, transaction, reporter, reportOnly );
+        copyMetadata( targetPom, bridgedTargetPom, transaction, reporter, reportOnly );
