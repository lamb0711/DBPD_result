Removing leftover lifecycle binding for ValidatePomMojo in the maven-plugin-plugin (removed that last night).

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219716 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.repository.metadata.RepositoryMetadataManager;
-import org.apache.maven.plugin.AbstractMojo;
-import org.apache.maven.project.MavenProject;
-
-import java.io.File;
-    extends AbstractMojo
+    extends AbstractPluginMappingMojo
-    /**
-     * @parameter expression="${project}"
-     * @required
-     * @readonly
-     */
-    private MavenProject project;
-
-    /**
-     * @parameter expression="${component.org.apache.maven.artifact.repository.metadata.RepositoryMetadataManager}"
-     * @required
-     * @readonly
-     */
-    private RepositoryMetadataManager repositoryMetadataManager;
-
-    /**
-     * @parameter expression="${project.build.directory}/repository-metadata"
-     * @required
-     * @readonly
-     */
-    private String outputDirectory;
-
-        ArtifactRepository distributionRepository = project.getDistributionManagementArtifactRepository();
+        RepositoryMetadata metadata = new PluginMappingMetadata( getProject().getGroupId() );
-        RepositoryMetadata metadata = new PluginMappingMetadata( project.getGroupId() );
-
-        File updatedMetadataFile = new File( outputDirectory, metadata.getRepositoryPath() ).getAbsoluteFile();
+        ArtifactRepository distributionRepository = getProject().getDistributionManagementArtifactRepository();
-        if ( !updatedMetadataFile.exists() )
+        if ( distributionRepository == null )
-            throw new MojoExecutionException( "Cannot find updated " + metadata + " in file: \'" + updatedMetadataFile + "\'. This seems to indicate that the 'package' lifecycle phase didn't succeed." );
+            throw new MojoExecutionException( "No distribution repository specified. You must specify a <distributionManagement/> section with a valid <repository/> specified within." );
-        
-        metadata.setFile( updatedMetadataFile );
-        
+
-            repositoryMetadataManager.deploy( metadata, distributionRepository );
+            getRepositoryMetadataManager().resolve( metadata, distributionRepository, getLocalRepository() );
+
+            updatePluginMap( metadata );
+
+            getRepositoryMetadataManager().deploy( metadata, distributionRepository );
-            throw new MojoExecutionException( "Error updating plugin-mapping metadata.", e );
+            throw new MojoExecutionException( "Failed to install " + metadata, e );
