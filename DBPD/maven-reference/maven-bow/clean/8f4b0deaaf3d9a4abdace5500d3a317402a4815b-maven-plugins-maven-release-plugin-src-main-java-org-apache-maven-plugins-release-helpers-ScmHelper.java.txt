Working on: MNG-662

o Moved release.properties management to a helper class
o Created a helper class for caching/prompting for project-versions
o Created a helper class for managing SCM info updates during the release:prepare process
o Moved as many of the shared fields out of AbstractReleaseMojo as possible, given the refactor to reactorized processing
o Refactored the PrepareReleaseMojo to process a list of projects, and resolve inter-dependencies during transforms, etc.
o Refactored the PerformReleaseMojo to adjust to the new helper classes.
o Removed the old transformers, since MavenProject.writeOriginalModel() can be used instead, using the modello writer
o Bumped the maven-scm versions up to 1.0-alpha-2-SNAPSHOT, and added maven-scm-manager-plexus.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@227148 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.maven.plugin.scm;
+package org.apache.maven.plugins.release.helpers;
+import org.apache.maven.scm.manager.ScmManager;
+import org.apache.maven.scm.command.remove.RemoveScmResult;
-import org.apache.maven.scm.manager.ScmManager;
- * @version $Id: DoxiaMojo.java 169372 2005-05-09 22:47:34Z evenisse $
+ * @version $Id$
-public class ScmBean
+public class ScmHelper
-        catch( Exception e )
+        catch ( Exception e )
-        CheckOutScmResult result = getScmManager().checkOut( repository, new ScmFileSet( checkoutDirectory ), tag );
+        CheckOutScmResult result = getScmManager().getProviderByRepository( repository )
+            .checkOut( repository, new ScmFileSet( checkoutDirectory ), tag );
-        UpdateScmResult result = getScmManager().update( repository, new ScmFileSet( new File( workingDirectory ) ), tag );
+        UpdateScmResult result = getScmManager().getProviderByRepository( repository )
+            .update( repository, new ScmFileSet( new File( workingDirectory ) ), tag );
-        StatusScmResult result = getScmManager().status( repository, new ScmFileSet( new File( workingDirectory ) ) );
+        StatusScmResult result = getScmManager().getProviderByRepository( repository )
+            .status( repository, new ScmFileSet( new File( workingDirectory ) ) );
-    
-    public void add( String file ) throws ScmException, IOException
+
+    public void add( String file )
+        throws ScmException, IOException
-        
+
-        
-        AddScmResult result = getScmManager().add(repository, fs);
+
+        AddScmResult result = getScmManager().getProviderByRepository( repository ).add( repository, fs );
+
+        checkResult( result );
+    }
+
+    public void remove( String message, String file )
+        throws ScmException, IOException
+    {
+        ScmRepository repository = getScmRepository();
+
+        ScmFileSet fs = new ScmFileSet( new File( workingDirectory ), file, null );
+
+        RemoveScmResult result = getScmManager().getProviderByRepository( repository ).remove( repository, fs, message );
-        CheckInScmResult result = getScmManager().checkIn( repository,
-                                                           new ScmFileSet( new File( workingDirectory ), includes, excludes ),
-                                                           tag,
-                                                           message );
+        CheckInScmResult result = getScmManager().getProviderByRepository( repository )
+            .checkIn( repository, new ScmFileSet( new File( workingDirectory ), includes, excludes ), tag, message );
-        TagScmResult result = getScmManager().tag( repository, new ScmFileSet( new File( workingDirectory ) ), tag );
+        TagScmResult result = getScmManager().getProviderByRepository( repository )
+            .tag( repository, new ScmFileSet( new File( workingDirectory ) ), tag );
-
