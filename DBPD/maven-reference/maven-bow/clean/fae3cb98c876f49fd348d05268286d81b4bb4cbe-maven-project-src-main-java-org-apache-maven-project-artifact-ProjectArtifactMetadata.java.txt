MNG-2820 Leave the POM intact which means no interpolating and no license header whacking


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@506108 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.ArtifactStatus;
-import org.apache.maven.model.DistributionManagement;
-import org.apache.maven.model.Model;
-import org.apache.maven.model.io.xpp3.MavenXpp3Reader;
-import org.apache.maven.model.io.xpp3.MavenXpp3Writer;
-import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
+import org.codehaus.plexus.util.FileUtils;
-import java.io.StringReader;
-import java.io.StringWriter;
+import java.io.Reader;
+import java.io.Writer;
-    public ProjectArtifactMetadata( Artifact artifact, File file )
+    public ProjectArtifactMetadata( Artifact artifact,
+                                    File file )
-    public void storeInLocalRepository( ArtifactRepository localRepository, ArtifactRepository remoteRepository )
+    public void storeInLocalRepository( ArtifactRepository localRepository,
+                                        ArtifactRepository remoteRepository )
-        destination.getParentFile().mkdirs();
+        // ----------------------------------------------------------------------------
+        // I'm fully aware that the file could just be moved using File.rename but
+        // there are bugs in various JVM that have problems doing this across
+        // different filesystem. So we'll incur the small hit to actually copy
+        // here and be safe. jvz.
+        // ----------------------------------------------------------------------------
-        FileReader reader = null;
-        FileWriter writer = null;
+        Reader reader = null;
+
+        Writer writer = null;
+
-            StringWriter sWriter = new StringWriter();
-            IOUtil.copy( reader, sWriter );
-            
-            String modelSrc = sWriter.toString().replaceAll( "\\$\\{(pom\\.|project\\.)?version\\}", artifact.getBaseVersion() );
-            
-            StringReader sReader = new StringReader( modelSrc );
-            
+
-            MavenXpp3Reader modelReader = new MavenXpp3Reader();
-            Model model = modelReader.read( sReader, false );
-            model.setVersion( artifact.getVersion() );
-
-            DistributionManagement distributionManagement = model.getDistributionManagement();
-            if ( distributionManagement == null )
-            {
-                distributionManagement = new DistributionManagement();
-                model.setDistributionManagement( distributionManagement );
-            }
-            distributionManagement.setStatus( ArtifactStatus.DEPLOYED.toString() );
-
-            MavenXpp3Writer modelWriter = new MavenXpp3Writer();
-            modelWriter.write( writer, model );
+            IOUtil.copy( reader, writer );
-        catch ( XmlPullParserException e )
-        {
-            throw new RepositoryMetadataStoreException( "Error rewriting POM", e );
-        }
+
