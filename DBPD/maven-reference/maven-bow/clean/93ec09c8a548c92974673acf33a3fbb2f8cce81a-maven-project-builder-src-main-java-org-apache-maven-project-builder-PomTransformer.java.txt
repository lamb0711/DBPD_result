MNG-4010: Remove duplicate dependency exclusions.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@738256 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.project.builder.rules.DependencyRule;
+    private static Collection<ModelContainerInfo> dependency_exclusions = Arrays.asList(
+            ModelContainerInfo.Factory.createModelContainerInfo(
+                    new IdModelContainerFactory(ProjectUri.DependencyManagement.Dependencies.Dependency.Exclusions.Exclusion.xUri),
+                     new DependencyRule(), null)
+            );
+
-           // ModelContainerInfo.Factory.createModelContainerInfo(
-           //         new IdModelContainerFactory(ProjectUri.Reporting.Plugins.Plugin.ReportSets.ReportSet.xUri), null, null),
+            ModelContainerInfo.Factory.createModelContainerInfo(
+                    new ArtifactModelContainerFactory(), null, dependency_exclusions),
-                                                                          ProjectUri.Dependencies.Dependency.Exclusions.xUri,
+                                                                      //    ProjectUri.Dependencies.Dependency.Exclusions.xUri,
-                                                                          ProjectUri.DependencyManagement.Dependencies.Dependency.Exclusions.xUri,
+                                                                       //   ProjectUri.DependencyManagement.Dependencies.Dependency.Exclusions.xUri,
-                                                                          ProjectUri.Profiles.Profile.Dependencies.Dependency.Exclusions.xUri,
+                                                                         // ProjectUri.Profiles.Profile.Dependencies.Dependency.Exclusions.xUri,
-                                                                          ProjectUri.Profiles.Profile.DependencyManagement.Dependencies.Dependency.Exclusions.xUri,
+                                                                        //  ProjectUri.Profiles.Profile.DependencyManagement.Dependencies.Dependency.Exclusions.xUri,
-                                                                          ProjectUri.Profiles.Profile.Build.PluginManagement.Plugins.Plugin.Dependencies.Dependency.Exclusions.xUri,
+                                                                       //   ProjectUri.Profiles.Profile.Build.PluginManagement.Plugins.Plugin.Dependencies.Dependency.Exclusions.xUri,
+                //Join Duplicate Exclusions Rule (MNG-4010)
+                ModelDataSource exclusionSource = new DefaultModelDataSource(managementContainer.getProperties(),
+                        Collections.unmodifiableList(Arrays.asList(new ArtifactModelContainerFactory(ProjectUri.DependencyManagement.Dependencies.Dependency.Exclusions.Exclusion.xUri))));
+                List<ModelContainer> exclusionContainers =
+                        exclusionSource.queryFor(ProjectUri.DependencyManagement.Dependencies.Dependency.Exclusions.Exclusion.xUri);
+
+                for(ModelContainer mc : exclusionContainers)
+                {
+                    for(ModelContainer mc1 : exclusionContainers)
+                    {
+                        if(!mc.equals(mc1)  && mc.containerAction(mc1).equals(ModelContainerAction.JOIN))
+                        {
+                            exclusionSource.joinWithOriginalOrder(mc, mc1);       
+                        }
+                    }
+                }
+                
-                    transformDependencyManagement( managementContainer.getProperties() ) );
+                    transformDependencyManagement( exclusionSource.getModelProperties() ) );
-                    //THIS JOIN REVERSES ORDER
+
-              // ExecutionRule rule = new ExecutionRule();
-               // List<ModelProperty> x = rule.execute(d.getProperties());
-               // List<ModelProperty> x = (!joinedContainer) ? rule.execute(es.getProperties()) :
-               //         ModelTransformerContext.sort(rule.execute(es.getProperties()),
-               //                 ProjectUri.Build.Plugins.Plugin.Executions.Execution.xUri);
-
-             //   source.replace(d, d.createNewInstance(x));
-                                //REVERSE ORDER HERE
