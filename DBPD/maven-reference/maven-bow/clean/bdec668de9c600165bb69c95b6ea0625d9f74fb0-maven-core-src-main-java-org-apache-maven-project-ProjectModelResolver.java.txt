[MNG-6656] Introduce base for build/consumer pom

-import java.io.File;
+import org.apache.maven.model.Model;
+import org.apache.maven.model.building.ArtifactModelSource;
-        Iterator iterator = repositories.iterator( );
+        Iterator<RemoteRepository> iterator = repositories.iterator( );
-            RemoteRepository next =  ( RemoteRepository ) iterator.next();
+            RemoteRepository next = iterator.next();
-        File pomFile = null;
+        Artifact pomArtifact = new DefaultArtifact( groupId, artifactId, "", "pom", version );
-        if ( modelPool != null )
+        try
-            pomFile = modelPool.get( groupId, artifactId, version );
+            ArtifactRequest request = new ArtifactRequest( pomArtifact, repositories, context );
+            request.setTrace( trace );
+            pomArtifact = resolver.resolveArtifact( session, request ).getArtifact();
+        }
+        catch ( ArtifactResolutionException e )
+        {
+            throw new UnresolvableModelException( e.getMessage(), groupId, artifactId, version, e );
-        if ( pomFile == null )
-        {
-            Artifact pomArtifact = new DefaultArtifact( groupId, artifactId, "", "pom", version );
-
-            try
-            {
-                ArtifactRequest request = new ArtifactRequest( pomArtifact, repositories, context );
-                request.setTrace( trace );
-                pomArtifact = resolver.resolveArtifact( session, request ).getArtifact();
-            }
-            catch ( ArtifactResolutionException e )
-            {
-                throw new UnresolvableModelException( e.getMessage(), groupId, artifactId, version, e );
-            }
-
-            pomFile = pomArtifact.getFile();
-        }
-
-        return new FileModelSource( pomFile );
+        return new ArtifactModelSource( pomArtifact.getFile(), groupId, artifactId, version );
+            
+            if ( modelPool != null )
+            {
+                Model model =
+                    modelPool.get( dependency.getGroupId(), dependency.getArtifactId(), dependency.getVersion() );
+
+                if ( model != null )
+                {
+                    return new FileModelSource( model.getPomFile() );
+                }
+            }
