Resume from generates misleading hint when multiple projects fail.

Log the topologically sorted first failed project instead of the chronologically first failed project.
Resume from generates misleading hint when multiple projects fail.
Fixed a checkstyle finding.
Removed a trailing space in the -r hint

+import static java.util.Comparator.comparing;
-            MavenProject project = null;
+            List<MavenProject> failedProjects = new ArrayList<>();
-                if ( project == null && exception instanceof LifecycleExecutionException )
+                if ( exception instanceof LifecycleExecutionException )
-                    LifecycleExecutionException lifecycleExecutionException = (LifecycleExecutionException) exception;
-                    project = lifecycleExecutionException.getProject();
+                    failedProjects.add ( ( (LifecycleExecutionException) exception ).getProject() );
-            List<MavenProject> sortedProjects = result.getTopologicallySortedProjects();
-                logBuildResumeHint( "mvn <args> -r " );
+                logBuildResumeHint( "mvn <args> -r" );
-            else if ( project != null && !project.equals( sortedProjects.get( 0 ) ) )
+            else if ( !failedProjects.isEmpty() )
-                String resumeFromSelector = getResumeFromSelector( sortedProjects, project );
-                logBuildResumeHint( "mvn <args> -rf " + resumeFromSelector );
+                List<MavenProject> sortedProjects = result.getTopologicallySortedProjects();
+
+                // Sort the failedProjects list in the topologically sorted order.
+                failedProjects.sort( comparing( sortedProjects::indexOf ) );
+
+                MavenProject firstFailedProject = failedProjects.get( 0 );
+                if ( !firstFailedProject.equals( sortedProjects.get( 0 ) ) )
+                {
+                    String resumeFromSelector = getResumeFromSelector( sortedProjects, firstFailedProject );
+                    logBuildResumeHint( "mvn <args> -rf " + resumeFromSelector );
+                }
-     * @param failedProject Project which has failed.
+     * @param firstFailedProject The first project which has failed.
-    String getResumeFromSelector( List<MavenProject> mavenProjects, MavenProject failedProject )
+    String getResumeFromSelector( List<MavenProject> mavenProjects, MavenProject firstFailedProject )
-                .filter( project -> failedProject.getArtifactId().equals( project.getArtifactId() ) )
+                .filter( project -> firstFailedProject.getArtifactId().equals( project.getArtifactId() ) )
-            return failedProject.getGroupId() + ":" + failedProject.getArtifactId();
+            return firstFailedProject.getGroupId() + ":" + firstFailedProject.getArtifactId();
-        return ":" + failedProject.getArtifactId();
+        return ":" + firstFailedProject.getArtifactId();
