[MNG-3862] Remove all plugin configuration manipulation from the plugin manager.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@743225 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.util.xml.Xpp3Dom;
-        List<DomainModel> domainModels = new ArrayList<DomainModel>();
-        domainModels.add( new PluginMixin(plugin) );
+        List<DomainModel> domainModels = new ArrayList<DomainModel>();       
+        domainModels.add( new PluginMixin(plugin) );
-    public PlexusConfiguration mixPluginAndReturnConfig(Plugin plugin, Model model) throws IOException
+    public PlexusConfiguration mixPluginAndReturnConfig(Plugin plugin, Xpp3Dom dom, Model model, List<InterpolatorProperty> props)
+            throws IOException,  XmlPullParserException
-        List<ModelProperty> mps = mixPluginAndReturnConfigAsProperties(plugin, model);
-        return !mps.isEmpty() ?
-            new XmlPlexusConfiguration(ModelMarshaller.unmarshalModelPropertiesToXml(mps, ProjectUri.Build.Plugins.Plugin.xUri)) : null;
-    }
+        List<ModelProperty> mps = mixPluginAndReturnConfigAsProperties(plugin, dom, model, null);
+        return !mps.isEmpty() ?
+            new XmlPlexusConfiguration(Xpp3DomBuilder.build(
+                    new StringReader(ModelMarshaller.unmarshalModelPropertiesToXml(mps, ProjectUri.Build.Plugins.Plugin.xUri))) ) : null;
+    }
+   
-       List<ModelProperty> mps = mixPluginAndReturnConfigAsProperties(plugin, model);
+       List<ModelProperty> mps = mixPluginAndReturnConfigAsProperties(plugin, null, model, null);
-   private List<ModelProperty> mixPluginAndReturnConfigAsProperties(Plugin plugin, Model model) throws IOException
+   private List<ModelProperty> mixPluginAndReturnConfigAsProperties(Plugin plugin, Xpp3Dom dom, Model model,
+                                                                    List<InterpolatorProperty> props) throws IOException
-        List<DomainModel> domainModels = new ArrayList<DomainModel>();
-        domainModels.add( new PluginMixin(plugin) );
-        domainModels.add( new PomClassicDomainModel(model) );
+       List<DomainModel> domainModels = new ArrayList<DomainModel>();
+       domainModels.add(new PomClassicDomainModel(model));
+       domainModels.add(new PluginMixin(plugin));
+
+       if (dom != null)
+       {
+           Plugin p = new Plugin();
+           p.setGroupId(plugin.getGroupId());
+           p.setArtifactId(plugin.getArtifactId());
+           p.setVersion(p.getVersion());
+           p.setConfiguration(dom);
+           domainModels.add(new PluginMixin(p));
+       }
-                                                                                                null,
+                                                                                                props,
-        return getValueByUri(ProjectUri.Build.Plugins.Plugin.groupId, props).equals(plugin.getGroupId())
-                && getValueByUri(ProjectUri.Build.Plugins.Plugin.artifactId, props).equals(plugin.getArtifactId())
+
+        return //getValueByUri(ProjectUri.Build.Plugins.Plugin.groupId, props).equals(plugin.getGroupId())
+                getValueByUri(ProjectUri.Build.Plugins.Plugin.artifactId, props).equals(plugin.getArtifactId())
