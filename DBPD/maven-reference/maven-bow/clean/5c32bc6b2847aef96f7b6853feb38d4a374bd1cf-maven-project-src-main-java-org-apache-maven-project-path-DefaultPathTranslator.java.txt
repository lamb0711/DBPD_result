All tests pass on my localhost...committing to see how it works on hudson.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@672782 13f79535-47bb-0310-9956-ffa450edef68

+    private static final String[] BASEDIR_EXPRESSIONS = {
+        "${basedir}",
+        "${pom.basedir}",
+        "${project.basedir}"
+    };
+
-        String basedirExpr = "${basedir}";
-
-            s = s.trim();
+            String basedirExpr = null;
+            for ( int i = 0; i < BASEDIR_EXPRESSIONS.length; i++ )
+            {
+                basedirExpr = BASEDIR_EXPRESSIONS[i];
+                if ( s.startsWith( basedirExpr ) )
+                {
+                    break;
+                }
+                else
+                {
+                    basedirExpr = null;
+                }
+            }
-            if ( s.startsWith( basedirExpr ) )
+            if ( basedirExpr != null )
-                    // Take out ${basedir} and the leading slash
-                    s = s.substring( basedirExpr.length() + 1 );
+                    // Take out basedir expression and the leading slash
+                    s = chopLeadingFileSeparator( s.substring( basedirExpr.length() ) );
+    /**
+     * Removes the leading directory separator from the specified filesystem path (if any). For platform-independent
+     * behavior, this method accepts both the forward slash and the backward slash as separator.
+     *
+     * @param path The filesystem path, may be <code>null</code>.
+     * @return The altered filesystem path or <code>null</code> if the input path was <code>null</code>.
+     */
+    private String chopLeadingFileSeparator( String path )
+    {
+        if ( path != null )
+        {
+            if ( path.startsWith( "/" ) || path.startsWith( "\\" ) )
+            {
+                path = path.substring( 1 );
+            }
+        }
+        return path;
+    }
+
