MNG-5655 deduplicate WeakMojoExecutionListener instances

Signed-off-by: Igor Fedorenko <ifedorenko@apache.org>

+import java.util.Collection;
+import java.util.IdentityHashMap;
-        for ( Object provided : getScopeState().provided.values() )
+        for ( WeakMojoExecutionListener provided : getProvidedListeners() )
-            if ( provided instanceof WeakMojoExecutionListener )
-            {
-                ( (WeakMojoExecutionListener) provided ).beforeMojoExecution( event );
-            }
+            provided.beforeMojoExecution( event );
-        for ( Object provided : getScopeState().provided.values() )
+        for ( WeakMojoExecutionListener provided : getProvidedListeners() )
-            if ( provided instanceof WeakMojoExecutionListener )
-            {
-                ( (WeakMojoExecutionListener) provided ).afterMojoExecutionSuccess( event );
-            }
+            provided.afterMojoExecutionSuccess( event );
+        for ( WeakMojoExecutionListener provided : getProvidedListeners() )
+        {
+            provided.afterExecutionFailure( event );
+        }
+    }
+
+    private Collection<WeakMojoExecutionListener> getProvidedListeners()
+    {
+        // the same instance can be provided multiple times under different Key's
+        // deduplicate instances to avoid redundant beforeXXX/afterXXX callbacks
+        IdentityHashMap<WeakMojoExecutionListener, Object> listeners =
+            new IdentityHashMap<WeakMojoExecutionListener, Object>();
-                ( (WeakMojoExecutionListener) provided ).afterExecutionFailure( event );
+                listeners.put( (WeakMojoExecutionListener) provided, null );
+        return listeners.keySet();
-
