[MNG-4615] [regression] @required plugin parameters are not validated

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@983050 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collection;
+import org.apache.maven.plugin.PluginParameterException;
+import org.apache.maven.plugin.descriptor.Parameter;
+import org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException;
+            ValidatingConfigurationListener validator =
+                new ValidatingConfigurationListener( mojo, mojoDescriptor, listener );
+
-            configurator.configureComponent( mojo, configuration, expressionEvaluator, pluginRealm, listener );
+            configurator.configureComponent( mojo, configuration, expressionEvaluator, pluginRealm, validator );
+
+            Collection<Parameter> missingParameters = validator.getMissingParameters();
+            if ( !missingParameters.isEmpty() )
+            {
+                if ( "basic".equals( configuratorId ) )
+                {
+                    throw new PluginParameterException( mojoDescriptor, new ArrayList<Parameter>( missingParameters ) );
+                }
+                else
+                {
+                    /*
+                     * NOTE: Other configurators like the map-oriented one don't call into the listener, so do it the
+                     * hard way.
+                     */
+                    validateParameters( mojoDescriptor, configuration, expressionEvaluator );
+                }
+            }
+    private void validateParameters( MojoDescriptor mojoDescriptor, PlexusConfiguration configuration,
+                                     ExpressionEvaluator expressionEvaluator )
+        throws ComponentConfigurationException, PluginParameterException
+    {
+        if ( mojoDescriptor.getParameters() == null )
+        {
+            return;
+        }
+
+        List<Parameter> invalidParameters = new ArrayList<Parameter>();
+
+        for ( Parameter parameter : mojoDescriptor.getParameters() )
+        {
+            if ( !parameter.isRequired() )
+            {
+                continue;
+            }
+
+            Object value = null;
+
+            PlexusConfiguration config = configuration.getChild( parameter.getName(), false );
+            if ( config != null )
+            {
+                String expression = config.getValue( null );
+
+                try
+                {
+                    value = expressionEvaluator.evaluate( expression );
+
+                    if ( value == null )
+                    {
+                        value = config.getAttribute( "default-value", null );
+                    }
+                }
+                catch ( ExpressionEvaluationException e )
+                {
+                    String msg =
+                        "Error evaluating the expression '" + expression + "' for configuration value '"
+                            + configuration.getName() + "'";
+                    throw new ComponentConfigurationException( configuration, msg, e );
+                }
+            }
+
+            if ( value == null && ( config == null || config.getChildCount() <= 0 ) )
+            {
+                invalidParameters.add( parameter );
+            }
+        }
+
+        if ( !invalidParameters.isEmpty() )
+        {
+            throw new PluginParameterException( mojoDescriptor, invalidParameters );
+        }
+    }
+
