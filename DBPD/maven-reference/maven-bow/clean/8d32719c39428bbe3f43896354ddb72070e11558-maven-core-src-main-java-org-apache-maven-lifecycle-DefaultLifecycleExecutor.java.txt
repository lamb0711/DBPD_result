o convert as much as i can in maven-core to use the annotation processor. it revealed a bug where given certain circumstances
  if a component was a requirement it prevents the actual component descriptor for that requirement to be output. worked
  around that by using the javadoc annotations on 5 problem classes. i'll fix the processor before converting the rest.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@721606 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.component.annotations.Component;
+import org.codehaus.plexus.component.annotations.Requirement;
+@Component(role = LifecycleExecutor.class)
-    implements LifecycleExecutor, Contextualizable
+    implements LifecycleExecutor
-    // ----------------------------------------------------------------------
-    // Components
-    // ----------------------------------------------------------------------
-
+    @Requirement
+    @Requirement
+    @Requirement
+    @Requirement
+    @Requirement
-
-    // this is needed for setting the lookup realm before we start building a project.
+    
+    @Requirement
-
-    public void contextualize( Context context )
-        throws ContextException
-    {
-        container = (PlexusContainer) context.get( PlexusConstants.PLEXUS_KEY );
-    }
