o nuke another big chunk of the old code, looking for available versions is used internally and once all the methods are shed we'll supply a pure metadata resolution for clients, like IDEs, that need to nicely show versions. we'll also provide a graph too so people aren't going to have to  do all the extra crap to get decent information.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@751036 13f79535-47bb-0310-9956-ffa450edef68

-    /*
-    private List aggregateRepositoryLists( List remoteRepositories, List remoteArtifactRepositories )
-        throws ArtifactMetadataRetrievalException
-    {
-        if ( superProject == null )
-        {
-            try
-            {
-                superProject = mavenProjectBuilder.buildStandaloneSuperProject( new DefaultProjectBuilderConfiguration() );
-            }
-            catch ( ProjectBuildingException e )
-            {
-                throw new ArtifactMetadataRetrievalException(
-                    "Unable to parse the Maven built-in model: " + e.getMessage(), e );
-            }
-        }
-
-        List repositories = new ArrayList();
-
-        repositories.addAll( remoteRepositories );
-
-        // ensure that these are defined
-        for ( Iterator it = superProject.getRemoteArtifactRepositories().iterator(); it.hasNext(); )
-        {
-            ArtifactRepository superRepo = (ArtifactRepository) it.next();
-
-            for ( Iterator aggregatedIterator = repositories.iterator(); aggregatedIterator.hasNext(); )
-            {
-                ArtifactRepository repo = (ArtifactRepository) aggregatedIterator.next();
-
-                // if the repository exists in the list and was introduced by another POM's super-pom,
-                // remove it...the repository definitions from the super-POM should only be at the end of
-                // the list.
-                // if the repository has been redefined, leave it.
-                if ( repo.getId().equals( superRepo.getId() ) && repo.getUrl().equals( superRepo.getUrl() ) )
-                {
-                    aggregatedIterator.remove();
-                }
-            }
-        }
-
-        if ( remoteArtifactRepositories != null )
-        {
-            // this list should contain the super-POM repositories, so we don't have to explicitly add them back.
-            for ( Iterator it = remoteArtifactRepositories.iterator(); it.hasNext(); )
-            {
-                ArtifactRepository repository = (ArtifactRepository) it.next();
-
-                if ( !repositories.contains( repository ) )
-                {
-                    repositories.add( repository );
-                }
-            }
-        }
-
-        return repositories;
-    }
-    */
-
