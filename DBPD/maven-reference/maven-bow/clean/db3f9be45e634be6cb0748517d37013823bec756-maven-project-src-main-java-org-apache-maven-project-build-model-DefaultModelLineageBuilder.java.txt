Fixing a problem where parent POMs that are not found during model-lineage discovery were not previously stubbed out, and caused the build to fail where it didn't in 2.0.7

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@564299 13f79535-47bb-0310-9956-ffa450edef68

-    
+
-        this.artifactResolver = resolver;
+        artifactResolver = resolver;
-        
+
-        File pomFile = pom;
-        while ( pomFile != null )
-        {
-            Model model = readModel( pomFile, projectBuildCache );
+        ModelAndFile current = new ModelAndFile( readModel( pom, projectBuildCache ), pom );
+        while ( current != null )
+        {
-                lineage.setOrigin( model, pomFile, currentRemoteRepositories );
+                lineage.setOrigin( current.model, current.file, currentRemoteRepositories );
-                lineage.addParent( model, pomFile, currentRemoteRepositories );
+                lineage.addParent( current.model, current.file, currentRemoteRepositories );
-            currentRemoteRepositories = updateRepositorySet( model, currentRemoteRepositories, pomFile, profileManager );
+            currentRemoteRepositories = updateRepositorySet( current.model, currentRemoteRepositories, current.file, profileManager );
-            pomFile = resolveParentPom( model, currentRemoteRepositories, localRepository, pomFile,
-                                        projectBuildCache );
+            current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache );
-        
-        File pomFile = lineage.getDeepestFile();
+
-        Model model = lineage.getDeepestModel();
+        ModelAndFile current = new ModelAndFile( lineage.getDeepestModel(), lineage.getDeepestFile() );
-        pomFile = resolveParentPom( model, currentRemoteRepositories, localRepository, pomFile, projectBuildCache );
+        current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache );
-        while ( pomFile != null )
+        while ( current != null )
-            model = readModel( pomFile, projectBuildCache );
-
-                lineage.setOrigin( model, pomFile, currentRemoteRepositories );
+                lineage.setOrigin( current.model, current.file, currentRemoteRepositories );
-                lineage.addParent( model, pomFile, currentRemoteRepositories );
+                lineage.addParent( current.model, current.file, currentRemoteRepositories );
-            currentRemoteRepositories = updateRepositorySet( model, currentRemoteRepositories, pomFile, profileManager );
+            currentRemoteRepositories = updateRepositorySet( current.model, currentRemoteRepositories, current.file, profileManager );
-            pomFile = resolveParentPom( model, currentRemoteRepositories, localRepository, pomFile,
-                                        projectBuildCache );
+            current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache );
-     * Read the Model instance from the given POM file, and cache it in the given Map before 
+     * Read the Model instance from the given POM file, and cache it in the given Map before
-        
+
-     * Update the remote repository set used to resolve parent POMs, by adding those declared in 
+     * Update the remote repository set used to resolve parent POMs, by adding those declared in
-     * @param profileManager 
+     * @param profileManager
-        loadActiveProfileRepositories( repositories, model, externalProfileManager, pomFile.getParentFile() );
+        File projectDir = pomFile == null ? null : pomFile.getParentFile();
+
+        loadActiveProfileRepositories( repositories, model, externalProfileManager, projectDir );
-     * @param projectBuildCache 
+     * @param projectBuildCache
-    private File resolveParentPom( Model model, List remoteRepositories, ArtifactRepository localRepository,
-                                   File modelPomFile, ProjectBuildCache projectBuildCache )
+    private ModelAndFile resolveParentPom( ModelAndFile child, List remoteRepositories, ArtifactRepository localRepository,
+                                   ProjectBuildCache projectBuildCache )
+        Model model = child.model;
+        File modelPomFile = child.file;
+
-        File pomFile = null;
+        ModelAndFile result = null;
-            
-            pomFile = (File) projectBuildCache.getCachedModelFile( modelParent );
-            if ( pomFile == null )
+            File parentPomFile = projectBuildCache.getCachedModelFile( modelParent );
+
+            if ( parentPomFile == null )
-                pomFile = resolveParentWithRelativePath( modelParent, modelPomFile );
+                parentPomFile = resolveParentWithRelativePath( modelParent, modelPomFile );
-            if ( pomFile == null )
+            if ( parentPomFile == null )
-                pomFile = resolveParentFromRepositories( modelParent, localRepository, remoteRepositories, modelPomFile );
+                parentPomFile = resolveParentFromRepositories( modelParent, localRepository, remoteRepositories, modelPomFile );
+
+            Model parent;
+            if ( parentPomFile == null )
+            {
+                getLogger().warn( "Cannot find parent POM: " + modelParent.getId() + " for child: " + model.getId() + ". Using stub model instead." );
+
+                parent = new Model();
+
+                parent.setGroupId( modelParent.getGroupId() );
+                parent.setArtifactId( modelParent.getArtifactId() );
+                parent.setVersion( modelParent.getVersion() );
+            }
+            else
+            {
+                parent = readModel( parentPomFile );
+            }
+
+            result = new ModelAndFile( parent, parentPomFile );
-        return pomFile;
+        return result;
-            boolean groupsMatch = parentModel.getGroupId() == null
+            boolean groupsMatch = ( parentModel.getGroupId() == null )
-            boolean versionsMatch = parentModel.getVersion() == null
+            boolean versionsMatch = ( parentModel.getVersion() == null )
+    private static final class ModelAndFile
+    {
+        private final Model model;
+        private final File file;
+
+        ModelAndFile( Model model, File file )
+        {
+            this.model = model;
+            this.file = file;
+        }
+    }
+
