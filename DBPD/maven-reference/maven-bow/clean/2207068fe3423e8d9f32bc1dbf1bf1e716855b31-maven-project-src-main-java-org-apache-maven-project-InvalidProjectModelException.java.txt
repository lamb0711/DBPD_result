Keep backwards compatibility by deprecating old methods

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@587567 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.InvalidRepositoryException;
-import org.apache.maven.project.interpolation.ModelInterpolationException;
+import java.io.File;
+import java.net.URI;
+
-import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
+    /**
+     * 
+     * @param projectId
+     * @param message
+     * @param pomFile pom file
+     * @param cause
+     */
-                                         String pomLocation,
-                                         ModelInterpolationException cause )
+                                         File pomFile,
+                                         Throwable cause )
+    {
+        super( projectId, message, pomFile, cause );
+    }
+
+    /**
+     * 
+     * @param projectId
+     * @param message
+     * @param pomLocation pom location
+     * @param cause
+     */
+    public InvalidProjectModelException( String projectId,
+                                         String message,
+                                         URI pomLocation,
+                                         Throwable cause )
+    /**
+     * 
+     * @param projectId
+     * @param message
+     * @param pomLocation pom location
+     */
+    public InvalidProjectModelException( String projectId,
+                                         String message,
+                                         URI pomLocation )
+    {
+        super( projectId, message, pomLocation );
+    }
+
+    /**
+     * @deprecated use {@link #InvalidProjectModelException(String, String, File, Throwable)}
+     * @param projectId
+     * @param pomLocation absolute path of the pom file
+     * @param message
+     * @param cause
+     */
-                                         InvalidRepositoryException cause )
+                                         Throwable cause )
-        super( projectId, message, pomLocation, cause );
+        super( projectId, message, new File( pomLocation ), cause );
+    /**
+     * @deprecated use {@link #InvalidProjectModelException(String, String, File, ModelValidationResult)}
+     * @param projectId
+     * @param pomLocation absolute path of the pom file
+     * @param message
+     * @param validationResult
+     */
-        super( projectId, message, pomLocation );
+        this( projectId, message, new File( pomLocation ), validationResult );
+    }
+
+    public InvalidProjectModelException( String projectId,
+                                         String message,
+                                         File pomFile,
+                                         ModelValidationResult validationResult )
+    {
+        super( projectId, message, pomFile );
-                                         String pomLocation,
-                                         String message )
+                                         String message,
+                                         File pomLocation )
+    /**
+     * @deprecated use {@link #InvalidProjectModelException(String, String, File)}
+     * @param projectId
+     * @param pomLocation absolute path of the pom file
+     * @param message
+     */
-                                         String message,
-                                         XmlPullParserException cause )
+                                         String message )
-        super( projectId, message, pomLocation, cause );
+        super( projectId, message, new File( pomLocation ) );
