Fixing issues with reports used from the site plugin, where the reports' classloaders had been disconnected from the project/core parent realms, and so couldn't use maven libraries.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@604685 13f79535-47bb-0310-9956-ffa450edef68

-        setDescriptorClassAndArtifactInfo( pluginDescriptor, project, session );
+        setDescriptorClassAndArtifactInfo( pluginDescriptor, project, session, new ArrayList() );
-        ClassRealm projectRealm = session.getRealmManager().getProjectRealm( project.getGroupId(), project.getArtifactId(), project.getVersion() );
+        List realmActions = new ArrayList();
-            mojo = getConfiguredMojo( session, dom, project, false, mojoExecution );
+            mojo = getConfiguredMojo( session, dom, project, false, mojoExecution, realmActions );
-            if ( ( pluginRealm != null ) && ( pluginRealm != container.getContainerRealm() )
-                 && ( pluginRealm != projectRealm ) )
+            for ( Iterator it = realmActions.iterator(); it.hasNext(); )
-                pluginRealm.setParentRealm( null );
+                PluginRealmAction action = (PluginRealmAction) it.next();
+                action.undo();
-        return (MavenReport) getConfiguredMojo( session, dom, project, true, mojoExecution );
+        return (MavenReport) getConfiguredMojo( session, dom, project, true, mojoExecution, new ArrayList() );
-                                    MojoExecution mojoExecution )
+                                    MojoExecution mojoExecution,
+                                    List realmActions )
-        setDescriptorClassAndArtifactInfo( pluginDescriptor, project, session );
+        setDescriptorClassAndArtifactInfo( pluginDescriptor, project, session, realmActions );
+        if ( mojoDescriptor.isRequiresReports() )
+        {
+            Set reportDescriptors = session.getReportMojoDescriptors();
+
+            if ( ( reportDescriptors != null ) && !reportDescriptors.isEmpty() )
+            {
+                for ( Iterator it = reportDescriptors.iterator(); it.hasNext(); )
+                {
+                    MojoDescriptor reportDescriptor = (MojoDescriptor) it.next();
+                    setDescriptorClassAndArtifactInfo( reportDescriptor.getPluginDescriptor(), project, session, realmActions );
+                }
+            }
+        }
+
-
-                                                    MavenSession session )
+                                                    MavenSession session,
+                                                    List realmActions )
+            realmActions.add( new PluginRealmAction( pluginDescriptor ) );
+            realmActions.add( new PluginRealmAction( pluginDescriptor, pluginRealm ) );
+
+    private static final class PluginRealmAction
+    {
+        private final PluginDescriptor pluginDescriptor;
+        private final ClassRealm realmWithTransientParent;
+
+        PluginRealmAction( PluginDescriptor pluginDescriptor )
+        {
+            this.pluginDescriptor = pluginDescriptor;
+            realmWithTransientParent = null;
+        }
+
+        PluginRealmAction( PluginDescriptor pluginDescriptor, ClassRealm realmWithTransientParent )
+        {
+            this.pluginDescriptor = pluginDescriptor;
+            this.realmWithTransientParent = realmWithTransientParent;
+        }
+
+        void undo()
+        {
+            pluginDescriptor.setArtifacts( null );
+            pluginDescriptor.setClassRealm( null );
+
+            if ( realmWithTransientParent != null )
+            {
+                realmWithTransientParent.setParentRealm( null );
+            }
+        }
+    }
