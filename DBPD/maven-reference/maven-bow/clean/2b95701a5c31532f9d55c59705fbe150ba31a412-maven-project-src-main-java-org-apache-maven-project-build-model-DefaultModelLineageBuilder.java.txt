Rearranging project-builder caching so it's done externally and available for use in the model-lineage builder and during artifact resolution as well.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@509692 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.context.BuildContextManager;
+import org.apache.maven.project.build.ProjectBuildCache;
-import java.util.Map;
+    
+    private BuildContextManager buildContextManager;
-    public DefaultModelLineageBuilder( ArtifactResolver resolver, ArtifactFactory artifactFactory )
+    public DefaultModelLineageBuilder( ArtifactResolver resolver, ArtifactFactory artifactFactory, BuildContextManager buildContextManager )
+        this.buildContextManager = buildContextManager;
-                                           ProfileManager profileManager, Map cachedPomFilesByModelId )
+                                           ProfileManager profileManager )
+        ProjectBuildCache projectBuildCache = ProjectBuildCache.read( buildContextManager );
+        
-            Model model = readModel( pomFile, cachedPomFilesByModelId );
+            Model model = readModel( pomFile, projectBuildCache );
-                                        cachedPomFilesByModelId );
+                                        projectBuildCache );
-                                            ProfileManager profileManager, Map cachedPomFilesByModelId )
+                                            ProfileManager profileManager )
+        ProjectBuildCache projectBuildCache = ProjectBuildCache.read( buildContextManager );
+        
-        pomFile = resolveParentPom( model, currentRemoteRepositories, localRepository, pomFile, cachedPomFilesByModelId );
+        pomFile = resolveParentPom( model, currentRemoteRepositories, localRepository, pomFile, projectBuildCache );
-            model = readModel( pomFile, cachedPomFilesByModelId );
+            model = readModel( pomFile, projectBuildCache );
-                                        cachedPomFilesByModelId );
+                                        projectBuildCache );
-    private Model readModel( File pomFile, Map cachedPomFilesByModelId )
+    private Model readModel( File pomFile, ProjectBuildCache projectBuildCache )
-        return readModel( pomFile, cachedPomFilesByModelId, false );
+        return readModel( pomFile, projectBuildCache, false );
-    private Model readModel( File pom, Map cachedPomFilesByModelId, boolean skipCache )
+    private Model readModel( File pom, ProjectBuildCache projectBuildCache, boolean skipCache )
-            cachedPomFilesByModelId.put( createCacheKey( model, pomFile ), pomFile );
+            projectBuildCache.cacheModelFileForModel( pomFile, model );
+            projectBuildCache.store( buildContextManager );
-     * @param cachedModelsById 
+     * @param projectBuildCache 
-                                   File modelPomFile, Map cachedModelsById )
+                                   File modelPomFile, ProjectBuildCache projectBuildCache )
-            String cacheKey = createCacheKey( modelParent );
-            
-            pomFile = (File) cachedModelsById.get( cacheKey );
+            pomFile = (File) projectBuildCache.getCachedModelFile( modelParent );
-    private String createCacheKey( Parent modelParent )
-    {
-        return modelParent.getGroupId() + ":" + modelParent.getArtifactId() + ":" + modelParent.getVersion();
-    }
-
-    private String createCacheKey( Model model, File pomFile )
-        throws ProjectBuildingException
-    {
-        Parent modelParent = model.getParent();
-
-        String groupId = model.getGroupId();
-
-        if ( groupId == null && modelParent != null )
-        {
-            groupId = modelParent.getGroupId();
-        }
-
-        String artifactId = model.getArtifactId();
-
-        String version = model.getVersion();
-
-        if ( version == null && modelParent != null )
-        {
-            version = modelParent.getVersion();
-        }
-
-        if ( groupId == null || version == null )
-        {
-            throw new ProjectBuildingException( model.getId(),
-                                                "Invalid model. Must either specify groupId and version directly, or specify a parent groupId and version.\nIn POM: "
-                                                    + pomFile );
-        }
-
-        return groupId + ":" + artifactId + ":" + version;
-    }
-
