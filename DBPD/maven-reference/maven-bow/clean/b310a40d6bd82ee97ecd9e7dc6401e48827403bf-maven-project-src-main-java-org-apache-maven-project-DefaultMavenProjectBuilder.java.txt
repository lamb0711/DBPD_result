Fixing super-pom building to allow injection of external profiles (again). Also, removing use of pluginRepositories and improving error reporting just a tad.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@599658 13f79535-47bb-0310-9956-ffa450edef68

-    private MavenProject superProject;
-
+    // what is using this externally? jvz.
-        if ( superProject != null )
-        {
-            return superProject;
-        }
+        //TODO mkleint - use the (Container, Properties) constructor to make system properties embeddable
+        return buildStandaloneSuperProject( null );
+    }
+    public MavenProject buildStandaloneSuperProject( ProfileManager profileManager )
+        throws ProjectBuildingException
+    {
-        superProject = new MavenProject( superModel );
+        List activeProfiles;
+        if ( profileManager != null )
+        {
+            activeProfiles = profileAdvisor.applyActivatedExternalProfiles( superModel, null, profileManager );
+        }
+        else
+        {
+            activeProfiles = Collections.EMPTY_LIST;
+        }
+
+        MavenProject project = new MavenProject( superModel );
+
+        String projectId = safeVersionlessKey( STANDALONE_SUPERPOM_GROUPID, STANDALONE_SUPERPOM_ARTIFACTID );
+
+        project.setManagedVersionMap(
+            createManagedVersionMap( projectId, superModel.getDependencyManagement(), null ) );
+
+        project.setActiveProfiles( activeProfiles );
-            superProject.setRemoteArtifactRepositories( mavenTools.buildArtifactRepositories( superModel.getRepositories() ) );
+            project.setRemoteArtifactRepositories( mavenTools.buildArtifactRepositories( superModel.getRepositories() ) );
-            superProject.setPluginArtifactRepositories( mavenTools.buildArtifactRepositories( superModel.getRepositories() ) );
+            project.setPluginArtifactRepositories( mavenTools.buildArtifactRepositories( superModel.getRepositories() ) );
-        superProject.setOriginalModel( superModel );
+        project.setOriginalModel( superModel );
-        superProject.setExecutionRoot( true );
+        project.setExecutionRoot( true );
-        return superProject;
+        return project;
-        project.setPluginArtifactRepositories( mavenTools.buildArtifactRepositories( model.getPluginRepositories() ) );
+//        project.setPluginArtifactRepositories( mavenTools.buildArtifactRepositories( model.getPluginRepositories() ) );
+    private Model superModel;
+
+        if ( superModel != null )
+        {
+            return superModel;
+        }
+
