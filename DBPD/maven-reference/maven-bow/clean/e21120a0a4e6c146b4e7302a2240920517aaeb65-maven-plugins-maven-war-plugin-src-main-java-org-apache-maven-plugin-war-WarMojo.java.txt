Fixing MNG-478: "war:war warSourceExcludes parameter not used when set in the
                POM".
Patch created by Greg Case, thanks for your work!


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@233048 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.util.DirectoryScanner;
-     * @todo Convert to File
-    private String classesDirectory;
+    private File classesDirectory;
-     * @todo Convert to File
-    private String webappDirectory;
+    private File webappDirectory;
-     * @todo Convert to File
-    private String warSourceDirectory;
+    private File warSourceDirectory;
-    public void copyResources( File sourceDirectory, File webappDirectory, String includes, String excludes,
-                               String webXml )
+    public void copyResources( File sourceDirectory, File webappDirectory, String webXml )
-            if ( new File( warSourceDirectory ).exists() )
+            if ( warSourceDirectory.exists() )
-                //TODO : Use includes and excludes
-                FileUtils.copyDirectoryStructure( sourceDirectory, webappDirectory );
+                String[] fileNames = getWarFiles( sourceDirectory );
+                for (int i = 0; i < fileNames.length; i++)
+                {
+                    FileUtils.copyFile(new File( sourceDirectory, fileNames[i] ), new File( webappDirectory, fileNames[i] ) );
+                }
-                FileUtils.copyFileToDirectory( new File( webXml ), new File( webappDirectory, WEB_INF ) );
+                //rename to web.xml
+                File webinfDir = new File( webappDirectory, WEB_INF );
+                FileUtils.copyFile( new File( webXml ), new File( webinfDir, "/web.xml" ) );
-        File classesDirectory = new File( this.classesDirectory );
-        File webappDirectory = new File( this.webappDirectory );
-        copyResources( new File( warSourceDirectory ), webappDirectory, warSourceIncludes, warSourceExcludes, webXml );
+        copyResources( warSourceDirectory, webappDirectory, webXml );
-                String[] excludes = (String[]) getDefaultExcludes().toArray( EMPTY_STRING_ARRAY );
-                warArchiver.addDirectory( new File( webappDirectory ), null, excludes );
+                warArchiver.addDirectory( webappDirectory, getIncludes(), getExcludes() );
-        // Special one for WARs
-        defaultExcludes.add( "**/" + WEB_INF + "/web.xml" );
+        // Windows Thumbs
+        defaultExcludes.add( "**/Thumbs.db" );
+
+    /**
+     * Returns a list of filenames that should be copied over to the destination
+     * directory
+     *
+     * @param sourceDir the directory to be scanned
+     * @return the array of filenames, relative to the sourceDir
+     */
+    private String[] getWarFiles( File sourceDir )
+    {
+        DirectoryScanner scanner = new DirectoryScanner();
+        scanner.setBasedir( sourceDir );
+        scanner.setExcludes( getExcludes() );
+        scanner.addDefaultExcludes();
+
+        scanner.setIncludes( getIncludes() );
+
+        scanner.scan();
+
+        return scanner.getIncludedFiles();
+    }
+
+    /**
+     * Returns an a string array of the excludes to be used when assembling/copy the war
+     */
+    private String[] getExcludes()
+    {
+        List excludeList = getDefaultExcludes();
+        if ( warSourceExcludes != null && !"".equals( warSourceExcludes ) )
+        {
+            excludeList.add( warSourceExcludes );
+        }
+
+        // if webXML is specified, omit the one in the source directory
+        if ( webXml != null && !"".equals( webXml ) )
+        {
+            excludeList.add( "**/" + WEB_INF + "/web.xml" );
+        }
+
+        return (String[]) excludeList.toArray( EMPTY_STRING_ARRAY );
+    }
+
+    /**
+     * Returns an a string array of the includes to be used when assembling/copy the
+     * war
+     */
+    private String[] getIncludes()
+    {
+        return new String[] { warSourceIncludes };
+    }
