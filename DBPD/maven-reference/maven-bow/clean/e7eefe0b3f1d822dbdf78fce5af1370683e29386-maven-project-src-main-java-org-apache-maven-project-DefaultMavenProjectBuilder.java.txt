Pushing project workspace usage out of ProjectCacheAspect into DefaultMavenProjectBuilder and DefaultModelLineageBuilder, to make it easier to understand how these critical pieces of logic execute relative to other pieces of the project-building process, such as managed-dependency merging.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@636023 13f79535-47bb-0310-9956-ffa450edef68

-        Model model = findModelFromRepository( artifact, remoteArtifactRepositories, localRepository );
+        String artifactKey = artifact.getId();
-        return buildInternal( model, localRepository, remoteArtifactRepositories, artifact.getFile(), null,
-                              false, false, false );
+        MavenProject project = null;
+        if ( !Artifact.LATEST_VERSION.equals( artifact.getVersion() ) && !Artifact.RELEASE_VERSION.equals( artifact.getVersion() ) )
+        {
+            getLogger().debug( "Checking cache for project (in buildFromRepository): " + artifactKey );
+            project = projectWorkspace.getProject( artifact.getGroupId(), artifact.getArtifactId(), artifact.getVersion() );
+        }
+
+        if ( project == null )
+        {
+            getLogger().debug( "Allowing buildFromRepository to proceed for: " + artifactKey );
+
+            Model model = findModelFromRepository( artifact, remoteArtifactRepositories, localRepository );
+
+            project = buildInternal( model, localRepository, remoteArtifactRepositories, artifact.getFile(), null,
+                                  false, false, false );
+        }
+        else
+        {
+            getLogger().debug( "Returning cached project: " + project );
+        }
+
+        return project;
-        Model model = readModel( "unknown", projectDescriptor, STRICT_MODEL_PARSING );
+        getLogger().debug( "Checking cache-hit on project (in build*): " + projectDescriptor );
-        MavenProject project = buildInternal( model,
-            localRepository,
-            buildArtifactRepositories( getSuperModel() ),
-            projectDescriptor,
-            profileManager,
-            STRICT_MODEL_PARSING,
-            true,
-            true );
+        MavenProject project = projectWorkspace.getProject( projectDescriptor );
+
+        if ( project == null )
+        {
+            getLogger().debug( "Allowing project-build to proceed for: " + projectDescriptor );
+
+            Model model = readModel( "unknown", projectDescriptor, STRICT_MODEL_PARSING );
+
+            project = buildInternal( model,
+                localRepository,
+                buildArtifactRepositories( getSuperModel() ),
+                projectDescriptor,
+                profileManager,
+                STRICT_MODEL_PARSING,
+                true,
+                true );
+        }
+        else
+        {
+            getLogger().debug( "Returning cached project: " + project );
+        }
+        getLogger().debug( "Caching project: " + project.getId() + " (also keyed by file: " + project.getFile() + ")" );
+
+        projectWorkspace.storeProjectByCoordinate( project );
+        projectWorkspace.storeProjectByFile( project );
+
