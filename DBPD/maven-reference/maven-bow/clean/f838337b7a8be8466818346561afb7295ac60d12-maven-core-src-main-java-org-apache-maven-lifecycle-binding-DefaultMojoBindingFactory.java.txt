Refactor the artifact-scanning logic from the realm manager and the plugin-artifact resolution logic in the plugin manager into two separate classes, one a component and one a static class, to allow the new PluginPrefixLoader to reuse some of both and create a lighter-weight approach to grabbing the PluginDescriptor for build-planning purposes...also avoids some needless error messages during build planning.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@617293 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.plugin.descriptor.PluginDescriptor;
+import org.apache.maven.model.Plugin;
+import org.apache.maven.plugin.loader.PluginPrefixLoader;
-    PluginLoader pluginLoader;
+    PluginPrefixLoader pluginPrefixLoader;
-            PluginDescriptor pluginDescriptor;
+            Plugin plugin;
-                pluginDescriptor = pluginLoader.findPluginForPrefix( prefix, project, session );
+                plugin = pluginPrefixLoader.findPluginForPrefix( prefix, project, session );
-            binding = createMojoBinding( pluginDescriptor.getGroupId(), pluginDescriptor.getArtifactId(),
-                                         pluginDescriptor.getVersion(), tok.nextToken(), project );
+            binding = createMojoBinding( plugin.getGroupId(), plugin.getArtifactId(),
+                                         plugin.getVersion(), tok.nextToken(), project );
