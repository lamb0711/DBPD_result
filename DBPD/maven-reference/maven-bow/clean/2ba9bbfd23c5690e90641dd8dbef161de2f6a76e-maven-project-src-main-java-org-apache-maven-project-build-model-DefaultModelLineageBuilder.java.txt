Fixing it0112 and it0115, and cleaning up extension isolation further. Also, adding a flag to tell whether an accompanying profiles.xml file is valid for any given POM file...when loaded from a repository (or stubbed), this flag should always be false.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@586061 13f79535-47bb-0310-9956-ffa450edef68

-                                           ProfileManager profileManager, boolean allowStubs )
+                                           ProfileManager profileManager, boolean allowStubs, boolean validProfilesXmlLocation )
-        ModelAndFile current = new ModelAndFile( readModel( pom, projectBuildCache ), pom );
+        ModelAndFile current = new ModelAndFile( readModel( pom, projectBuildCache ), pom, validProfilesXmlLocation );
-                lineage.setOrigin( current.model, current.file, currentRemoteRepositories );
+                lineage.setOrigin( current.model, current.file, currentRemoteRepositories, current.validProfilesXmlLocation );
-                lineage.addParent( current.model, current.file, currentRemoteRepositories );
+                lineage.addParent( current.model, current.file, currentRemoteRepositories, current.validProfilesXmlLocation );
-            currentRemoteRepositories = updateRepositorySet( current.model, currentRemoteRepositories, current.file, profileManager );
+            currentRemoteRepositories = updateRepositorySet( current.model, currentRemoteRepositories, current.file, profileManager, current.validProfilesXmlLocation );
-        ModelAndFile current = new ModelAndFile( lineage.getDeepestAncestorModel(), lineage.getDeepestAncestorFile() );
+        ModelAndFile current = new ModelAndFile( lineage.getDeepestAncestorModel(), lineage.getDeepestAncestorFile(), lineage.isDeepestAncestorUsingProfilesXml() );
-            lineage.addParent( current.model, current.file, currentRemoteRepositories );
+            lineage.addParent( current.model, current.file, currentRemoteRepositories, current.validProfilesXmlLocation );
-            currentRemoteRepositories = updateRepositorySet( current.model, currentRemoteRepositories, current.file, profileManager );
+            currentRemoteRepositories = updateRepositorySet( current.model, currentRemoteRepositories, current.file, profileManager, current.validProfilesXmlLocation );
-                                      ProfileManager externalProfileManager )
+                                      ProfileManager externalProfileManager, boolean useProfilesXml )
-                loadActiveProfileRepositories( remoteRepos, model, externalProfileManager, projectDir );
+                loadActiveProfileRepositories( remoteRepos, model, externalProfileManager, projectDir, useProfilesXml );
-                                                File pomFile )
+                                                File pomFile, boolean useProfilesXml )
-                                                                                               explicitlyInactive ) );
+                                                                                               explicitlyInactive,
+                                                                                               useProfilesXml ) );
+            boolean isResolved = false;
+
+                    isResolved = true;
-                    result = new ModelAndFile( parent, parentPomFile );
+                    // we act as if the POM was resolved from the repository,
+                    // for the purposes of external profiles.xml files...
+                    // that's what the last parameter is about.
+                    result = new ModelAndFile( parent, parentPomFile, false );
-                result = new ModelAndFile( parent, parentPomFile );
+                result = new ModelAndFile( parent, parentPomFile, !isResolved );
+        private final boolean validProfilesXmlLocation;
-        ModelAndFile( Model model, File file )
+        ModelAndFile( Model model, File file, boolean validProfilesXmlLocation )
+            this.validProfilesXmlLocation = validProfilesXmlLocation;
