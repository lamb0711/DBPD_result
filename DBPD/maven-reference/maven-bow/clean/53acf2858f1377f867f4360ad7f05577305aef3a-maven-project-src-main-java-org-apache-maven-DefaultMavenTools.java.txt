[MNG-2943] Avoid using package names used in other artifacts: org.apache.maven

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@543670 13f79535-47bb-0310-9956-ffa450edef68

- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *  http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for additional information regarding
+ * copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance with the License. You may obtain a
+ * copy of the License at
+ * 
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software distributed under the License
+ * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
+ * or implied. See the License for the specific language governing permissions and limitations under
+ * the License.
+import java.util.List;
+
-import org.apache.maven.artifact.repository.ArtifactRepositoryFactory;
-import org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;
-import org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout;
-import org.apache.maven.model.RepositoryBase;
-import org.apache.maven.model.RepositoryPolicy;
-import org.codehaus.plexus.PlexusConstants;
-import org.codehaus.plexus.PlexusContainer;
-import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
-import org.codehaus.plexus.context.Context;
-import org.codehaus.plexus.context.ContextException;
-import org.codehaus.plexus.personality.plexus.lifecycle.phase.Contextualizable;
-import java.util.ArrayList;
-import java.util.Iterator;
-import java.util.List;
-
-/** @author Jason van Zyl */
+/**
+ * @deprecated use {@link org.apache.maven.project.DefaultMavenTools}
+ * @author Jason van Zyl
+ */
-    implements MavenTools, Contextualizable
+    extends org.apache.maven.project.DefaultMavenTools
+    implements MavenTools
-    private ArtifactRepositoryLayout repositoryLayout;
+    private org.apache.maven.project.MavenTools mavenTools;
-    private ArtifactRepositoryFactory artifactRepositoryFactory;
-
-    private PlexusContainer container;
-
-    // ----------------------------------------------------------------------------
-    // Code snagged from ProjectUtils: this will have to be moved somewhere else
-    // but just trying to collect it all in one place right now.
-    // ----------------------------------------------------------------------------
-
+    /**
+     * @see org.apache.maven.project.MavenTools#buildArtifactRepositories(java.util.List)
+     */
-        List repos = new ArrayList();
-
-        for ( Iterator i = repositories.iterator(); i.hasNext(); )
-        {
-            Repository mavenRepo = (Repository) i.next();
-
-            ArtifactRepository artifactRepo = buildArtifactRepository( mavenRepo );
-
-            if ( !repos.contains( artifactRepo ) )
-            {
-                repos.add( artifactRepo );
-            }
-        }
-        return repos;
+        return getMavenTools().buildArtifactRepositories( repositories );
-    public ArtifactRepository buildDeploymentArtifactRepository( DeploymentRepository repo )
-        throws InvalidRepositoryException
-    {
-        if ( repo != null )
-        {
-            String id = repo.getId();
-            String url = repo.getUrl();
-
-            // TODO: make this a map inside the factory instead, so no lookup needed
-            ArtifactRepositoryLayout layout = getRepositoryLayout( repo );
-
-            return artifactRepositoryFactory.createDeploymentArtifactRepository( id, url, layout,
-                                                                                 repo.isUniqueVersion() );
-        }
-        else
-        {
-            return null;
-        }
-    }
-
+    /**
+     * @see org.apache.maven.project.MavenTools#buildArtifactRepository(org.apache.maven.model.Repository)
+     */
-        if ( repo != null )
-        {
-            String id = repo.getId();
-            String url = repo.getUrl();
-
-            // TODO: make this a map inside the factory instead, so no lookup needed
-            ArtifactRepositoryLayout layout = getRepositoryLayout( repo );
-
-            ArtifactRepositoryPolicy snapshots = buildArtifactRepositoryPolicy( repo.getSnapshots() );
-
-            ArtifactRepositoryPolicy releases = buildArtifactRepositoryPolicy( repo.getReleases() );
-
-            return artifactRepositoryFactory.createArtifactRepository( id, url, layout, snapshots, releases );
-        }
-        else
-        {
-            return null;
-        }
+        return getMavenTools().buildArtifactRepository( repo );
-    public ArtifactRepositoryPolicy buildArtifactRepositoryPolicy( RepositoryPolicy policy )
-    {
-        boolean enabled = true;
-
-        String updatePolicy = null;
-
-        String checksumPolicy = null;
-
-        if ( policy != null )
-        {
-            enabled = policy.isEnabled();
-
-            if ( policy.getUpdatePolicy() != null )
-            {
-                updatePolicy = policy.getUpdatePolicy();
-            }
-            if ( policy.getChecksumPolicy() != null )
-            {
-                checksumPolicy = policy.getChecksumPolicy();
-            }
-        }
-
-        return new ArtifactRepositoryPolicy( enabled, updatePolicy, checksumPolicy );
-    }
-
-    private ArtifactRepositoryLayout getRepositoryLayout( RepositoryBase mavenRepo )
+    /**
+     * @see org.apache.maven.project.MavenTools#buildDeploymentArtifactRepository(org.apache.maven.model.DeploymentRepository)
+     */
+    public ArtifactRepository buildDeploymentArtifactRepository( DeploymentRepository repo )
-        String layout = mavenRepo.getLayout();
-
-        ArtifactRepositoryLayout repositoryLayout;
-        try
-        {
-            repositoryLayout = (ArtifactRepositoryLayout) container.lookup( ArtifactRepositoryLayout.ROLE, layout );
-        }
-        catch ( ComponentLookupException e )
-        {
-            throw new InvalidRepositoryException( "Cannot find layout implementation corresponding to: \'" + layout +
-                "\' for remote repository with id: \'" + mavenRepo.getId() + "\'.", e );
-        }
-        return repositoryLayout;
+        return getMavenTools().buildDeploymentArtifactRepository( repo );
-    // ----------------------------------------------------------------------------
-    // Lifecycle
-    // ----------------------------------------------------------------------------
-
-    public void contextualize( Context context )
-        throws ContextException
+    private org.apache.maven.project.MavenTools getMavenTools()
-        container = (PlexusContainer) context.get( PlexusConstants.PLEXUS_KEY );
+        if ( mavenTools == null )
+        {
+            mavenTools = new org.apache.maven.project.DefaultMavenTools();
+        }
+        return mavenTools;
