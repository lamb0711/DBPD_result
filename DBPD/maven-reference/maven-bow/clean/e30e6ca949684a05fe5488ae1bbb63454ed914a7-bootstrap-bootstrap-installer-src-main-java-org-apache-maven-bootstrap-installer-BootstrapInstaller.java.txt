fix bootstrap on Windows



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@345178 13f79535-47bb-0310-9956-ffa450edef68

-    private Properties getEnvVars()
-        throws Exception
-    {
-        // TODO : put this method in Commandline class
-        Process p = null;
-
-        Properties envVars = new Properties();
-
-        Runtime r = Runtime.getRuntime();
-
-        String os = System.getProperty( "os.name" ).toLowerCase();
-
-        //If this is windows set the shell to command.com or cmd.exe with correct arguments.
-        if ( os.indexOf( "Windows" ) != -1 )
-        {
-            if (os.indexOf("95") != -1 || os.indexOf("98") != -1 || os.indexOf("Me") != -1)
-            {
-                p = r.exec( "command.com /c set" );
-            }
-            else
-            {
-                p = r.exec( "cmd.exe /c set" );
-            }
-        }
-        else
-        {
-            p = r.exec( "env" );
-        }
-
-        BufferedReader br = new BufferedReader( new InputStreamReader( p.getInputStream() ) );
-
-        String line;
-
-        while( ( line = br.readLine() ) != null )
-        {
-            int idx = line.indexOf( '=' );
-
-            String key = line.substring( 0, idx );
-
-            String value = line.substring( idx + 1 );
-
-            envVars.setProperty( key, value );
-            // System.out.println( key + " = " + value );
-        }
-
-        return envVars;
-    }
-
-        // we need to add actual environment variable, because they don't added in commandline when
-        //we add new environment variables
-        Properties envVars = getEnvVars();
-
-        for ( Iterator i = envVars.keySet().iterator(); i.hasNext(); )
-        {
-            String key = (String) i.next();
-
-            cli.addEnvironment( key, envVars.getProperty( key ) );
-        }
-
-        // TODO: should we just remove this from the equation?
-        cli.addEnvironment( "M2_HOME", installation.getAbsolutePath() );
-        // No env is passed through
-        cli.addEnvironment( "JAVA_HOME", System.getProperty( "java.home" ) );
-
+            File artifactFile = bootstrapper.getArtifactFile( dep );
-                FileUtils.copyFileToDirectory( bootstrapper.getArtifactFile( dep ), bootDirectory );
+                FileUtils.copyFileToDirectory( artifactFile, bootDirectory );
-                FileUtils.copyFileToDirectory( bootstrapper.getArtifactFile( dep ), coreDirectory );
+                FileUtils.copyFileToDirectory( artifactFile, coreDirectory );
-                FileUtils.copyFileToDirectory( bootstrapper.getArtifactFile( dep ), libDirectory );
+                FileUtils.copyFileToDirectory( artifactFile, libDirectory );
