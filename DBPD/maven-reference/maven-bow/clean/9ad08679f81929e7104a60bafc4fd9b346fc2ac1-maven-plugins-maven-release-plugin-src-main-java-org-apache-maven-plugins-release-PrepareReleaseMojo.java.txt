PR: MNG-829
Submitted by: Johnny R. Ruiz III
Reviewed by:  Brett Porter
use File for basedir aligned parameters in various plugins

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@312877 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.io.Writer;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Properties;
+import java.util.Set;
+
-import java.io.File;
-import java.io.FileWriter;
-import java.io.IOException;
-import java.io.Writer;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Properties;
-import java.util.Set;
-
-    private String basedir;
+    private File basedir;
-            getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_INITIALIZED );
+            getReleaseProgress().checkpoint( basedir.getAbsolutePath(), ReleaseProgressTracker.CP_INITIALIZED );
-                    getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_POM_TRANSFORMED_FOR_RELEASE );
+                    getReleaseProgress().checkpoint( basedir.getAbsolutePath(), ReleaseProgressTracker.CP_POM_TRANSFORMED_FOR_RELEASE );
-                    getReleaseProgress().checkpoint( basedir,
+                    getReleaseProgress().checkpoint( basedir.getAbsolutePath(),
-                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_PREPARED_RELEASE );
+                getReleaseProgress().checkpoint( basedir.getAbsolutePath(), ReleaseProgressTracker.CP_PREPARED_RELEASE );
-                releaseProgress = ReleaseProgressTracker.loadOrCreate( basedir );
+                releaseProgress = ReleaseProgressTracker.loadOrCreate( basedir.getAbsolutePath() );
-                getLog().warn( "Cannot read existing release progress file from directory: " + basedir + "." );
+                getLog().warn( "Cannot read existing release progress file from directory: " + basedir.getAbsolutePath() + "." );
-                ScmHelper scm = getScm( basedir );
+                ScmHelper scm = getScm( basedir.getAbsolutePath() );
-                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_LOCAL_MODIFICATIONS_CHECKED );
+                getReleaseProgress().checkpoint( basedir.getAbsolutePath(), ReleaseProgressTracker.CP_LOCAL_MODIFICATIONS_CHECKED );
-                canonicalBasedir = trimPathForScmCalculation( new File( basedir ) );
+                canonicalBasedir = trimPathForScmCalculation( basedir );
-                throw new MojoExecutionException( "Cannot canonicalize basedir: " + basedir, e );
+                throw new MojoExecutionException( "Cannot canonicalize basedir: " + basedir.getAbsolutePath(), e );
-                    ScmHelper scm = getScm( basedir );
+                    ScmHelper scm = getScm( basedir.getAbsolutePath() );
-                    getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_GENERATED_RELEASE_POM );
+                    getReleaseProgress().checkpoint( basedir.getAbsolutePath(), ReleaseProgressTracker.CP_GENERATED_RELEASE_POM );
-                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_CHECKED_IN_RELEASE_VERSION );
+                getReleaseProgress().checkpoint( basedir.getAbsolutePath(), ReleaseProgressTracker.CP_CHECKED_IN_RELEASE_VERSION );
-                String canonicalBasedir = trimPathForScmCalculation( new File( basedir ) );
+                String canonicalBasedir = trimPathForScmCalculation( basedir );
-                    ScmHelper scm = getScm( basedir );
+                    ScmHelper scm = getScm( basedir.getAbsolutePath() );
-                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_REMOVED_RELEASE_POM );
+                getReleaseProgress().checkpoint( basedir.getAbsolutePath(), ReleaseProgressTracker.CP_REMOVED_RELEASE_POM );
-                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_CHECKED_IN_DEVELOPMENT_VERSION );
+                getReleaseProgress().checkpoint( basedir.getAbsolutePath(), ReleaseProgressTracker.CP_CHECKED_IN_DEVELOPMENT_VERSION );
-        ScmHelper scm = getScm( basedir );
+        ScmHelper scm = getScm( basedir.getAbsolutePath() );
-                ScmHelper scm = getScm( basedir );
+                ScmHelper scm = getScm( basedir.getAbsolutePath() );
-                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_TAGGED_RELEASE );
+                getReleaseProgress().checkpoint( basedir.getAbsolutePath(), ReleaseProgressTracker.CP_TAGGED_RELEASE );
