updating to new apis

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@322531 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.resolver.ArtifactNotFoundException;
-import org.apache.maven.execution.MavenExecutionResponse;
+import org.apache.maven.BuildFailureException;
+import java.util.Date;
-        throws ProjectBuildingException, ArtifactResolutionException
+        throws ProjectBuildingException, ArtifactResolutionException, ArtifactNotFoundException
-        throws ProjectBuildingException, ArtifactResolutionException
+        throws ProjectBuildingException, ArtifactResolutionException, ArtifactNotFoundException
-        throws CycleDetectedException, LifecycleExecutionException, MojoExecutionException
+        throws CycleDetectedException, LifecycleExecutionException, BuildFailureException
-        throws CycleDetectedException, LifecycleExecutionException, MojoExecutionException
+        throws CycleDetectedException, LifecycleExecutionException, BuildFailureException
-                                                 properties);
+                                                 properties,
+                                                 new Date() );
-        MavenExecutionResponse response = lifecycleExecutor.execute( session,
-                                                                     rm,
-                                                                     session.getEventDispatcher() );
-
-        if ( response.isExecutionFailure() )
-        {
-            throw new MojoExecutionException( "Project failed to build.", response.getException() );
-        }
+        lifecycleExecutor.execute( session, rm, session.getEventDispatcher() );
-        PlexusConfiguration[] phasesConfigurations = configuration.getChild( "phases" ).getChildren( "phase" );
+        PlexusConfiguration[] phasesConfigurations = configuration.getChild( "lifecycles" ).getChild( 0 ).getChild( "phases" ).getChildren( "phase" );        
-        if ( checkLatestPluginVersion )
-        {
-            runtimeInfo.setCheckLatestPluginVersion( Boolean.TRUE );
-        }
-        else
-        {
-            runtimeInfo.setCheckLatestPluginVersion( Boolean.FALSE );
-        }
-
