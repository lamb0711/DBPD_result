Fixing it0112 and it0115, and cleaning up extension isolation further. Also, adding a flag to tell whether an accompanying profiles.xml file is valid for any given POM file...when loaded from a repository (or stubbed), this flag should always be false.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@586061 13f79535-47bb-0310-9956-ffa450edef68

-        ClassRealm pluginRealm;
+        ClassRealm pluginRealm = null;
-            pluginRealm = projectSession.getComponentRealm( key );
+            try
+            {
+                pluginRealm = projectSession.getPluginRealm( projectPlugin );
+            }
+            catch ( NoSuchRealmException e )
+            {
+                getLogger().debug( "Plugin realm is missing for: " + projectPlugin.getKey() + ". New realm will be created." );
+            }
-        ClassRealm componentRealm = null;
+        getLogger().debug( "Creating a ClassRealm instance for plugin: " + projectPlugin.getKey() + " for project: " + project.getId() );
-                componentRealm = projectSession.createPluginRealm( projectPlugin );
+                pluginRealm = projectSession.createPluginRealm( projectPlugin );
-                    componentRealm.addURL( pluginArtifact.getFile().toURI().toURL() );
+                    pluginRealm.addURL( pluginArtifact.getFile().toURI().toURL() );
-                    throw new PluginContainerException( plugin, componentRealm, "Error rendering plugin artifact: " + pluginArtifact.getId() + " as URL.", e );
+                    throw new PluginContainerException( plugin, pluginRealm, "Error rendering plugin artifact: " + pluginArtifact.getId() + " as URL.", e );
-                        componentRealm.addURL( artifact.getFile().toURI().toURL() );
+                        pluginRealm.addURL( artifact.getFile().toURI().toURL() );
-                        throw new PluginContainerException( plugin, componentRealm, "Error rendering plugin artifact: " + artifact.getId() + " as URL.", e );
+                        throw new PluginContainerException( plugin, pluginRealm, "Error rendering plugin artifact: " + artifact.getId() + " as URL.", e );
-                    getLogger().debug( "Discovering components in realm: " + componentRealm );
-                    container.discoverComponents( componentRealm, false );
+                    getLogger().debug( "Discovering components in realm: " + pluginRealm );
+                    container.discoverComponents( pluginRealm, false );
-                    throw new PluginContainerException( plugin, componentRealm, "Error re-scanning project realm for components.", e );
+                    throw new PluginContainerException( plugin, pluginRealm, "Error re-scanning project realm for components.", e );
-                    throw new PluginContainerException( plugin, componentRealm, "Error re-scanning project realm for components.", e );
+                    throw new PluginContainerException( plugin, pluginRealm, "Error re-scanning project realm for components.", e );
-                componentRealm = container.createComponentRealm( key, jars );
+                pluginRealm = container.createComponentRealm( key, jars );
-            throw new PluginContainerException( plugin, componentRealm, "Failed to create realm for plugin '" + projectPlugin
+            throw new PluginContainerException( plugin, pluginRealm, "Failed to create realm for plugin '" + projectPlugin
-            throw new PluginContainerException( plugin, componentRealm, "Failed to create project-specific realm for plugin '" + projectPlugin
+            throw new PluginContainerException( plugin, pluginRealm, "Failed to create project-specific realm for plugin '" + projectPlugin
-            componentRealm.importFrom( parentRealmId, Xpp3Dom.class.getName() );
-            componentRealm.importFrom( parentRealmId, "org.codehaus.plexus.util.xml.pull" );
+            pluginRealm.importFrom( parentRealmId, Xpp3Dom.class.getName() );
+            pluginRealm.importFrom( parentRealmId, "org.codehaus.plexus.util.xml.pull" );
-            componentRealm.importFrom( parentRealmId, "/default-report.xml" );
+            pluginRealm.importFrom( parentRealmId, "/default-report.xml" );
-            throw new PluginContainerException( plugin, componentRealm,
+            throw new PluginContainerException( plugin, pluginRealm,
-        getLogger().debug( "Realm for plugin: " + plugin.getKey() + ":\n" + componentRealm );
+        getLogger().debug( "Realm for plugin: " + plugin.getKey() + ":\n" + pluginRealm );
-        pluginDescriptor.setClassRealm( componentRealm );
+        pluginDescriptor.setClassRealm( pluginRealm );
