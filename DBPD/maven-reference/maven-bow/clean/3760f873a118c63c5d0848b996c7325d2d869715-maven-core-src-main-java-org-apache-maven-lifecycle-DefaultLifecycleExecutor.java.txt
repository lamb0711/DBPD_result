PR: MNG-167
Add the ability for a mojo to "fork" a phase execution, in a separate iteration of the lifecycle.
Add @executePhase generate-sources to idea:idea


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@164930 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collections;
+ * @todo there is some duplication between this and the plugin manager
-        throws PluginExecutionException, PluginNotFoundException, PluginManagerException, ArtifactResolutionException
+        throws PluginExecutionException, PluginNotFoundException, PluginManagerException, ArtifactResolutionException,
+        LifecycleExecutionException
-        throws PluginExecutionException, PluginNotFoundException, PluginManagerException, ArtifactResolutionException
+        throws PluginExecutionException, PluginNotFoundException, PluginManagerException, ArtifactResolutionException,
+        LifecycleExecutionException
-        pluginManager.executeMojo( session, id );
+        pluginManager.verifyPluginForGoal( id, session );
+
+        MojoDescriptor mojoDescriptor = pluginManager.getMojoDescriptor( id );
+
+        if ( mojoDescriptor == null )
+        {
+            throw new PluginExecutionException( "Unable to find goal: " + id );
+        }
+
+        if ( mojoDescriptor.getExecutePhase() != null )
+        {
+            // TODO: is this too broad to execute?
+            execute( Collections.singletonList( mojoDescriptor.getExecutePhase() ), session );
+        }
+
+        pluginManager.executeMojo( session, mojoDescriptor );
