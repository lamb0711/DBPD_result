Cleaning up exception wrapping to allow better reporting of errors to end users. Also implementing the beginnings of a new error reporter, and bumping the version of plexus-container-default up to 1.0-alpha-33-SNAPSHOT to improve the accessibility to ClassRealm info for ComponentLookupException.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@584343 13f79535-47bb-0310-9956-ffa450edef68

-    public List applyActivatedProfiles( Model model, File projectDir, List explicitlyActiveIds, List explicitlyInactiveIds )
+    public List applyActivatedProfiles( Model model, File pomFile, List explicitlyActiveIds, List explicitlyInactiveIds )
-        ProfileManager profileManager = buildProfileManager( model, projectDir, explicitlyActiveIds, explicitlyInactiveIds );
+        ProfileManager profileManager = buildProfileManager( model, pomFile, explicitlyActiveIds, explicitlyInactiveIds );
-        return applyActivatedProfiles( model, projectDir, profileManager );
+        return applyActivatedProfiles( model, pomFile, profileManager );
-    private List applyActivatedProfiles( Model model, File projectDir, ProfileManager profileManager )
+    private List applyActivatedProfiles( Model model, File pomFile, ProfileManager profileManager )
-                throw new ProjectBuildingException( projectId, e.getMessage(), e );
+                throw new ProjectBuildingException( projectId, e.getMessage(), pomFile.getAbsolutePath(), e );
-    private ProfileManager buildProfileManager( Model model, File projectDir, List explicitlyActiveIds, List explicitlyInactiveIds )
+    private ProfileManager buildProfileManager( Model model, File pomFile, List explicitlyActiveIds, List explicitlyInactiveIds )
-        if ( projectDir != null )
+        if ( pomFile != null )
-            loadExternalProjectProfiles( profileManager, model, projectDir );
+            File projectDir = pomFile.getParentFile();
+            if ( projectDir != null )
+            {
+                loadExternalProjectProfiles( profileManager, model, projectDir );
+            }
+                                                                    File pomFile,
-                                                    "Failed to compute active profiles for repository aggregation.", e );
+                                                    "Failed to compute active profiles for repository aggregation.", pomFile.getAbsolutePath(), e );
-    public LinkedHashSet getArtifactRepositoriesFromActiveProfiles( Model model, File projectDir,
+    public LinkedHashSet getArtifactRepositoriesFromActiveProfiles( Model model, File pomFile,
-        ProfileManager profileManager = buildProfileManager( model, projectDir, explicitlyActiveIds, explicitlyInactiveIds );
+        ProfileManager profileManager = buildProfileManager( model, pomFile, explicitlyActiveIds, explicitlyInactiveIds );
-        return getArtifactRepositoriesFromActiveProfiles( profileManager, model.getId() );
+        return getArtifactRepositoriesFromActiveProfiles( profileManager, pomFile, model.getId() );
-    private void loadExternalProjectProfiles( ProfileManager profileManager, Model model, File projectDir )
+    private void loadExternalProjectProfiles( ProfileManager profileManager, Model model, File pomFile )
-        if ( projectDir != null )
+        if ( pomFile != null )
+            File projectDir = pomFile.getParentFile();
-                    + projectDir, e );
+                    + projectDir, pomFile.getAbsolutePath(), e );
-                                                    e );
+                                                    pomFile.getAbsolutePath(), e );
