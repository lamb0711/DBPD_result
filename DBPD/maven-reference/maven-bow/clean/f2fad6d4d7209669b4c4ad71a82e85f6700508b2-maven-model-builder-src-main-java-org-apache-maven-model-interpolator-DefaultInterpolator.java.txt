o Decoupled interpolator from DomainModel

git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@778449 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.ByteArrayOutputStream;
-import java.io.Writer;
+import java.io.StringReader;
+import java.io.StringWriter;
-import org.apache.maven.model.DomainModel;
-import org.apache.maven.model.io.xpp3.MavenXpp3Writer;
+import org.apache.maven.model.io.ModelReader;
+import org.apache.maven.model.io.ModelWriter;
+import org.codehaus.plexus.component.annotations.Requirement;
-import org.codehaus.plexus.util.WriterFactory;
+
+    @Requirement
+    private ModelReader modelReader;
+
+    @Requirement
+    private ModelWriter modelWriter;
+
-            Model m = new DomainModel( new ByteArrayInputStream( xml.getBytes( "UTF-8" ) ) ).getModel();
+            Model m = modelReader.read( new StringReader( xml ), null );
-    private static List<ModelProperty> getModelProperties( Model model )
+    private List<ModelProperty> getModelProperties( Model model )
-    	
-        ByteArrayOutputStream baos = new ByteArrayOutputStream();
-        Writer out = null;
-        MavenXpp3Writer writer = new MavenXpp3Writer();
-        try
-        {
-            out = WriterFactory.newXmlWriter( baos );
-            writer.write( out, model );
-        }
-        finally
-        {
-            if ( out != null )
-            {
-                out.close();
-            }
-        }
+        StringWriter writer = new StringWriter();
+        modelWriter.write( writer, null, model );
-        return new ArrayList<ModelProperty>( marshallXmlToModelProperties(  new ByteArrayInputStream(baos.toByteArray()), ProjectUri.baseUri, s ) );
+        return new ArrayList<ModelProperty>( marshallXmlToModelProperties( new ByteArrayInputStream(writer.toString().getBytes( "UTF-8" )), ProjectUri.baseUri, s ) );
