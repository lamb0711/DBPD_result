restore display of two build properties (as in 2.x) :
- svn rev 
- build timestamp

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@784274 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.IOException;
+import java.io.InputStream;
+import java.util.Properties;
+import org.codehaus.plexus.util.IOUtil;
-    static void showVersion()
+    public static void showVersion()
-        ApplicationInformation ai =
-            DefaultRuntimeInformation.getVersion( MavenCli.class.getClassLoader(), "org.apache.maven", "maven-core" );
+        Properties properties = getBuildProperties();
-        System.out.println( "Maven version: " + ai.getVersion() + " built on " + ai.getBuiltOn() );
+        String timestamp = reduce( properties.getProperty( "timestamp" ) );
+        String version = reduce( properties.getProperty( "version" ) );
+        String rev = reduce( properties.getProperty( "buildNumber" ) );
+
+        String msg = "Apache Maven ";
+        msg += ( version != null ? version : "<version unknown>" );
+        if ( rev != null || timestamp != null )
+        {
+            msg += " (";
+            msg += ( rev != null ? "r" + rev : "" );
+            if ( timestamp != null )
+            {
+                SimpleDateFormat fmt = new SimpleDateFormat( "yyyy-MM-dd HH:mm:ssZ" );
+                String ts = fmt.format( new Date( Long.valueOf( timestamp ).longValue() ) );
+                msg += ( rev != null ? "; " : "" ) + ts;
+            }
+            msg += ")";
+        }
+
+        System.out.println( msg );
-            + System.getProperty( "file.encoding", "<unknown encoding>" ) );
+                            + System.getProperty( "file.encoding", "<unknown encoding>" ) );
-        System.out.println( "OS name: \"" + Os.OS_NAME + "\" version: \"" + Os.OS_VERSION + "\" arch: \"" + Os.OS_ARCH
-            + "\" family: \"" + Os.OS_FAMILY + "\"" );
+        System.out.println( "OS name: \"" + Os.OS_NAME + "\" version: \"" + Os.OS_VERSION +
+                            "\" arch: \"" + Os.OS_ARCH + "\" Family: \"" + Os.OS_FAMILY + "\"" );
+    private static String reduce( String s )
+    {
+        return ( s != null ? ( s.startsWith( "${" ) && s.endsWith( "}" ) ? null : s ) : null );
+    }
+
+    
+    
+    static Properties getBuildProperties()
+    {
+        Properties properties = new Properties();
+        InputStream resourceAsStream = null;
+        try
+        {
+            resourceAsStream = MavenCli.class.getClassLoader().getResourceAsStream( "org/apache/maven/messages/build.properties" );
+
+            if ( resourceAsStream != null )
+            {
+                properties.load( resourceAsStream );
+            }
+        }
+        catch ( IOException e )
+        {
+            System.err.println( "Unable determine version from JAR file: " + e.getMessage() );
+        }
+        finally
+        {
+            IOUtil.close( resourceAsStream );
+        }
+
+        return properties;
+    }
+    
