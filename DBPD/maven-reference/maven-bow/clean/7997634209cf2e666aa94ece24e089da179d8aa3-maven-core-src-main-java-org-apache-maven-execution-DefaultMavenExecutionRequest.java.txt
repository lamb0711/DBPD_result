MNG-5774 Provide an extension point for alternate CLI configuration source

+import org.apache.maven.eventspy.internal.EventSpyDispatcher;
+import com.google.common.collect.Maps;
+
+    private EventSpyDispatcher eventSpyDispatcher;
+    
+    private Map<String, Object> data;
+    
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Deprecated
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+    @Override
+        
+    @Override
+    public MavenExecutionRequest setEventSpyDispatcher( EventSpyDispatcher eventSpyDispatcher )
+    {
+        this.eventSpyDispatcher = eventSpyDispatcher;
+        return this;
+    }
+
+    @Override
+    public EventSpyDispatcher getEventSpyDispatcher()
+    {
+        return eventSpyDispatcher;
+    }
+    
+    @Override
+    public Map<String, Object> getData()
+    {
+        if ( data == null )
+        {
+            data = Maps.newHashMap();
+        }
+
+        return data;
+    }
