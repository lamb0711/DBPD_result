[MNG-4633] Added ThreadLockedArtifact, Implemented locking algorithm
    
    Fix affects weave mode only.
    
    Solves 3 different known problematic cases where downstream reactor
    modules access the file of the upstream module's artifact before it
    is ready (seem in ant-plugin, ear plugin and reported on issue).
    
    The basic premise of this fix is that only a few selected phases
    actually need access to the classes variant of artifact.getFile()
    which is set by the compiler plugin.


git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@967190 13f79535-47bb-0310-9956-ffa450edef68

+            for ( MavenProject mavenProject : session.getProjects() )
+            {
+                if ( !( mavenProject.getArtifact() instanceof ThreadLockedArtifact ) )
+                {
+                    ThreadLockedArtifact threadLockedArtifact = new ThreadLockedArtifact( mavenProject.getArtifact() );
+                    mavenProject.setArtifact( threadLockedArtifact );
+                }
+            }
+
+                ThreadLockedArtifact threadLockedArtifact = (ThreadLockedArtifact)projectBuild.getProject().getArtifact();
+                threadLockedArtifact.attachToThread();
+    private static boolean isThreadLockedAndEmpty(Artifact artifact){
+        return artifact instanceof  ThreadLockedArtifact && !((ThreadLockedArtifact) artifact).hasReal();
+    }
+
-        if ( upStreamArtifact == null )
+        if ( upStreamArtifact == null || isThreadLockedAndEmpty(upStreamArtifact))
+        CurrentPhaseForThread.setPhase(  node.getLifecyclePhase() );
+
