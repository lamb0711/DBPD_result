o remove another set of methods from the repository system interface and now ResolutionGroup is gone from Maven internals.                      


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@751083 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.Dependency;
-
-        ResolutionGroup resolutionGroup;
-
-        try
-        {
-            resolutionGroup = repositorySystem.retrieve( pluginArtifact, localRepository, project.getRemoteArtifactRepositories() );
-        }
-        catch ( ArtifactMetadataRetrievalException e )
-        {
-            throw new ArtifactResolutionException( "Unable to download metadata from repository for plugin '" + pluginArtifact.getId() + "': " + e.getMessage(), pluginArtifact, e );
-        }
-
+        
+        
+        // This is really crappy that we have to do this. The repository system should deal with this. The retrieval of the transitive dependencies.
+        
+        List<Artifact> pluginArtifacts = new ArrayList<Artifact>();
+        
-            MavenProject pluginProject = mavenProjectBuilder.buildFromRepository( pluginArtifact, project.getRemoteArtifactRepositories(), localRepository );
-
+            Artifact pluginPomArtifact = repositorySystem.createProjectArtifact( pluginArtifact.getGroupId(), pluginArtifact.getArtifactId(), pluginArtifact.getVersion() );
+            
+            // This does not populate the artifacts of the dependenct projects
+            MavenProject pluginProject = mavenProjectBuilder.buildFromRepository( pluginPomArtifact, project.getRemoteArtifactRepositories(), localRepository );
+            
+            // This needs to be changed so that the resolver deals with this
+            for ( Dependency d : pluginProject.getDependencies() )
+            {
+                pluginArtifacts.add( repositorySystem.createArtifact( d.getGroupId(), d.getArtifactId(), d.getVersion(), d.getScope(), d.getType() ) );
+            }
+                        
-            // this can't happen, it would have blowed up at artifactMetadataSource.retrieve()
+            throw new InvalidPluginException( "Error resolving plugin POM " + e.getMessage() );
-        dependencies.addAll( resolutionGroup.getArtifacts() );
+        dependencies.addAll( pluginArtifacts );
-        String key = artifact.getDependencyConflictId();
-
-        // This takes the spec version and resolves a real version
-        try
-        {
-            ResolutionGroup resolutionGroup = repositorySystem.retrieve( artifact, localRepository, project.getRemoteArtifactRepositories() );
-
-            // switching this out with the actual resolved artifact instance, since the MMSource re-creates the pom
-            // artifact.
-            artifact = resolutionGroup.getPomArtifact();
-        }
-        catch ( ArtifactMetadataRetrievalException e )
-        {
-            throw new PluginVersionResolutionException( groupId, artifactId, e.getMessage(), e );
-        }
-
+                
+                
