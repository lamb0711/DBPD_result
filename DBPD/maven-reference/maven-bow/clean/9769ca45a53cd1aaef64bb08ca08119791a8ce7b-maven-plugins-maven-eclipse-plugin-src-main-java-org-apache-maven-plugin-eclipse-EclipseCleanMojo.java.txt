also delete .wtpmodules files + some code cleanup

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@315062 13f79535-47bb-0310-9956-ffa450edef68

- * 
+ *
- * 
+ *
- * 
+ *
-
+import java.text.MessageFormat;
+
-
- * A Maven2 plugin to delete the .project and .classpath files needed for Eclipse
+ * A Maven2 plugin to delete the .project, .classpath and .wtpmodules files needed for Eclipse.
-public class EclipseCleanMojo extends AbstractMojo
+public class EclipseCleanMojo
+    extends AbstractMojo
-    private String basedir;
-    
-    public void execute() throws MojoExecutionException
+    private File basedir;
+
+    public void execute()
+        throws MojoExecutionException
-        File f = new File( basedir, ".project" );
-        
-        getLog().info( "Deleting project file..." );
-        if ( f.exists() )
-        {
-            if ( !f.delete() )
-            {
-                throw new MojoExecutionException( "Failed to delete project file: " + f.getAbsolutePath() );
-            }
-        }
-        else
-            getLog().info( "No .project file found." );
-        
-        f = new File( basedir, ".classpath" );
-        
-        getLog().info( "Deleting classpath file..." );
-        if ( f.exists() )
-        {
-            if ( !f.delete() )
-            {
-                throw new MojoExecutionException( "Failed to delete classpath file: " + f.getAbsolutePath() );
-            }
-        }
-        else
-            getLog().info( "No .classpath file found." );
+        delete( new File( basedir, ".project" ) );
+        delete( new File( basedir, ".classpath" ) );
+        delete( new File( basedir, ".wtpmodules" ) );
+
+    /**
+     * Delete a file, handling log messages and exceptions
+     * @param f File to be deleted
+     * @throws MojoExecutionException only if a file exists and can't be deleted
+     */
+    private void delete( File f )
+        throws MojoExecutionException
+    {
+        getLog().info( MessageFormat.format( "Deleting {0} file...", new Object[] { f.getName() } ) );
+
+        if ( f.exists() )
+        {
+            if ( !f.delete() )
+            {
+                throw new MojoExecutionException( MessageFormat.format( "Failed to delete {0} file: {0}", new Object[] {
+                    f.getName(),
+                    f.getAbsolutePath() } ) )
+                {
+                };
+            }
+        }
+        else
+        {
+            getLog().info( MessageFormat.format( "No {0} file found", new Object[] { f.getName() } ) );
+        }
+    }
+
