MNG-5871 refactoring: put url extrapolation algorithm in inheritance
model merger
-    private static final String ARTIFACT_ID = "artifact-id";
+    public static final String ARTIFACT_ID = "artifact-id";
-                target.setUrl( appendPath( src, context ) );
+                target.setUrl( extrapolateChildUrl( src, context ) );
-                target.setUrl( appendPath( src, context ) );
+                target.setUrl( extrapolateChildUrl( src, context ) );
-                target.setUrl( appendPath( src, context ) );
+                target.setUrl( extrapolateChildUrl( src, context ) );
-                target.setConnection( appendPath( src, context ) );
+                target.setConnection( extrapolateChildUrl( src, context ) );
-                target.setDeveloperConnection( appendPath( src, context ) );
+                target.setDeveloperConnection( extrapolateChildUrl( src, context ) );
-    private String appendPath( String parentPath, Map<Object, Object> context )
+    protected String extrapolateChildUrl( String parentUrl, Map<Object, Object> context )
-        Object artifactId = context.get( ARTIFACT_ID );
-        Object childPathAdjustment = context.get( CHILD_PATH_ADJUSTMENT );
-
-        if ( artifactId != null && childPathAdjustment != null )
-        {
-            return appendPath( parentPath, artifactId.toString(), childPathAdjustment.toString() );
-        }
-        else
-        {
-            return parentPath;
-        }
-    }
-
-    private String appendPath( String parentPath, String childPath, String pathAdjustment )
-    {
-        String path = parentPath;
-        path = concatPath( path, pathAdjustment );
-        path = concatPath( path, childPath );
-        return path;
-    }
-
-    private String concatPath( String base, String path )
-    {
-        String result = base;
-
-        if ( path != null && path.length() > 0 )
-        {
-            if ( ( result.endsWith( "/" ) && !path.startsWith( "/" ) )
-                || ( !result.endsWith( "/" ) && path.startsWith( "/" ) ) )
-            {
-                result += path;
-            }
-            else if ( result.endsWith( "/" ) && path.startsWith( "/" ) )
-            {
-                result += path.substring( 1 );
-            }
-            else
-            {
-                result += '/';
-                result += path;
-            }
-            if ( base.endsWith( "/" ) && !result.endsWith( "/" ) )
-            {
-                result += '/';
-            }
-        }
-
-        return result;
+        return parentUrl;
