Support for build extensions. Updated maven-mercury to use latest project builder code. Dumped all references to model-builder.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@765684 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Collection;
+import org.apache.maven.project.builder.DomainModel;
+import org.apache.maven.project.builder.InterpolatorProperty;
+import org.apache.maven.project.builder.PomClassicDomainModel;
-import org.apache.maven.project.builder.ProjectUri;
-import org.apache.maven.project.builder.legacy.PomTransformer;
-import org.apache.maven.shared.model.DomainModel;
-import org.apache.maven.shared.model.InterpolatorProperty;
-import org.apache.maven.shared.model.ModelContainer;
-import org.apache.maven.shared.model.ModelProperty;
-import org.apache.maven.shared.model.ModelTransformerContext;
+import org.apache.maven.project.builder.ProcessorContext;
+    
-
+/*TODO: Profiles
-
+*/
-        PomTransformer transformer = new PomTransformer( new MavenDomainModelFactory() );
-        ModelTransformerContext ctx =
-            new ModelTransformerContext( PomTransformer.MODEL_CONTAINER_INFOS );
+        try {
+			return new MavenDomainModel(ProcessorContext.interpolateDomainModel(ProcessorContext.build(domainModels, null), 
+					interpolatorProperties)).getDependencyMetadata();
+		} catch (IOException e) {
+			throw new DependencyProcessorException();
+		}
-        try
-        {
-            MavenDomainModel model =
-                ( (MavenDomainModel) ctx.transform( domainModels, transformer, transformer, null,
-                                                    interpolatorProperties, null ) );
-            return model.getDependencyMetadata();
-        }
-        catch ( IOException e )
-        {
-            throw new MetadataReaderException( "Unable to transform model", e );
-        }
-
-    private static List<ModelProperty> transformProfiles( List<ModelProperty> modelProperties )
-    {
-        List<ModelProperty> properties = new ArrayList<ModelProperty>();
-        for ( ModelProperty mp : modelProperties )
-        {
-            if ( mp.getUri().startsWith( ProjectUri.Profiles.Profile.xUri )
-                && !mp.getUri().equals( ProjectUri.Profiles.Profile.id )
-                && !mp.getUri().startsWith( ProjectUri.Profiles.Profile.Activation.xUri ) )
-            {
-                properties.add( new ModelProperty( mp.getUri().replace( ProjectUri.Profiles.Profile.xUri,
-                                                                        ProjectUri.xUri ), mp.getResolvedValue() ) );
-            }
-        }
-        return properties;
-    }
