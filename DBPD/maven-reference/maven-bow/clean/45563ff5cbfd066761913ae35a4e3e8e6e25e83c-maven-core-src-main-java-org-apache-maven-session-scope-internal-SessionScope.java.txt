mechanism to carryover session scope seeds from one thread to another

Signed-off-by: Igor Fedorenko <ifedorenko@apache.org>

+import java.util.Collections;
+import com.google.common.collect.ImmutableMap;
+    /**
+     * @since 3.2.6
+     */
+    public static class Memento
+    {
+        final Map<Key<?>, Provider<?>> seeded;
+
+        Memento( final Map<Key<?>, Provider<?>> seeded )
+        {
+            this.seeded = ImmutableMap.copyOf( seeded );
+        }
+    }
+
+    /**
+     * @since 3.2.6
+     */
+    public void enter( Memento memento )
+    {
+        enter();
+        getScopeState().seeded.putAll( memento.seeded );
+    }
+
+    /**
+     * @since 3.2.6
+     */
+    public Memento memento()
+    {
+        LinkedList<ScopeState> stack = values.get();
+        return new Memento( stack != null ? stack.getFirst().seeded : Collections.<Key<?>, Provider<?>>emptyMap() );
+    }
+
