PR: MNG-833
Submitted by: Christoph Sturm
Reviewed by: Brett Porter
o fix NPE
o allow linking of projects in the reactor as modules

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@267532 13f79535-47bb-0310-9956-ffa450edef68

+        File projectFile = new File( project.getBasedir(), project.getArtifactId() + ".ipr" );
-            File projectFile = new File( project.getBasedir(), project.getArtifactId() + ".ipr" );
-                String modulePath = new File( project.getBasedir(), project.getArtifactId() + ".iml" ).getAbsolutePath();
+                String modulePath = new File( project.getBasedir(),
+                                              project.getArtifactId() + ".iml" ).getAbsolutePath();
-            throw new MojoExecutionException( "Error parsing existing IML file", e );
+            throw new MojoExecutionException( "Error parsing existing IPR file: " + projectFile.getAbsolutePath(), e );
-            throw new MojoExecutionException( "Error parsing existing IML file", e );
+            throw new MojoExecutionException( "Error parsing existing IPR file: " + projectFile.getAbsolutePath(), e );
+        File moduleFile = new File( project.getBasedir(), project.getArtifactId() + ".iml" );
-            File moduleFile = new File( project.getBasedir(), project.getArtifactId() + ".iml" );
-            if ( project.getPackaging().equals( "war" ) )
+            if ( "war".equals( project.getPackaging() ) )
-            else if ( project.getPackaging().equals( "ejb" ) )
+            else if ( "ejb".equals( project.getPackaging() ) )
-                // TODO: resolve projects in reactor as references
-
-                dep.setAttribute( "type", "module-library" );
-                dep = createElement( dep, "library" );
-                dep.setAttribute( "name", a.getArtifactId() );
+                if ( a.getFile() != null )
+                {
+                    dep.setAttribute( "type", "module-library" );
+                    dep = createElement( dep, "library" );
+                    dep.setAttribute( "name", a.getArtifactId() );
-                Xpp3Dom el = createElement( dep, "CLASSES" );
-                el = createElement( el, "root" );
-                el.setAttribute( "url", "jar://" + a.getFile().getAbsolutePath().replace( '\\', '/' ) + "!/" );
+                    Xpp3Dom el = createElement( dep, "CLASSES" );
+                    el = createElement( el, "root" );
+                    File file = a.getFile();
+                    el.setAttribute( "url", "jar://" + file.getAbsolutePath().replace( '\\', '/' ) + "!/" );
-                createElement( dep, "JAVADOC" );
-                createElement( dep, "SOURCES" );
+                    createElement( dep, "JAVADOC" );
+                    createElement( dep, "SOURCES" );
+                }
+                else
+                {
+                    dep.setAttribute( "type", "module" );
+                    dep.setAttribute( "module-name", a.getArtifactId() );
+                }
-            throw new MojoExecutionException( "Error parsing existing IML file", e );
+            throw new MojoExecutionException( "Error parsing existing IML file " + moduleFile.getAbsolutePath(), e );
-            throw new MojoExecutionException( "Error parsing existing IML file", e );
+            throw new MojoExecutionException( "Error parsing existing IML file " + moduleFile.getAbsolutePath(), e );
-            if ( child.getName().equals( "orderEntry" ) && child.getAttribute( "type" ).equals( "module-library" ) )
+            if ( "orderEntry".equals( child.getName() ) && "module-library".equals( child.getAttribute( "type" ) ) )
