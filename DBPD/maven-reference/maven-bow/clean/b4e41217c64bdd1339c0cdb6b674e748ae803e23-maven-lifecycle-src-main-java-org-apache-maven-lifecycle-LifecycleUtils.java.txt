Improve phase-tracking, event dispatching, and align build headers as events dispatched to the default event monitor...also, add debug-level enter/exit phase output in the default event monitor. Finally, refactored code that actually renders the build plan and executes the mojos for each task-segment in the lifecycle executor, to eliminate all the duplication.

This lays the ground work for improving cache management, since I also added event types for embedder control (keep in mind that event monitors can be used to control when the project/model cache is flushed, for example).


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@631455 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.LinkedHashMap;
+import java.util.Map.Entry;
+    public static void setupTrackingInfo( final LifecycleBindings bindings )
+    {
+        for ( Iterator bindingIt = bindings.getBindingList().iterator(); bindingIt.hasNext(); )
+        {
+            LifecycleBinding binding = (LifecycleBinding) bindingIt.next();
+
+            if ( binding == null )
+            {
+                continue;
+            }
+
+            LinkedHashMap phaseMap = binding.getOrderedPhaseMapping();
+            for ( Iterator phaseIt = phaseMap.entrySet().iterator(); phaseIt.hasNext(); )
+            {
+                Map.Entry entry = (Entry) phaseIt.next();
+                Phase phase = (Phase) entry.getValue();
+
+                String phaseName = (String) entry.getKey();
+
+                if ( phase != null )
+                {
+                    phase.setLifecycleInfo( phaseName, binding );
+                }
+            }
+        }
+    }
+
