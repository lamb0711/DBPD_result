Centralized repository handling in AbstractVersionTransformation, for consistency (should fix MNG-527).

Changed download strategy for plugins.xml metadata to download only when non-existent locally or when plugin prefix cannot be located within local metadata. NOTE: This could lead to local-only installs of plugins having their prefix mappings overwritten.

Next step is to change the maven-plugin-plugin.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219615 13f79535-47bb-0310-9956-ffa450edef68

-        List pluginGroupIds = new ArrayList( groupIds );
+        return loadPluginMappings( groupIds, pluginRepositories, localRepository, new PluginMappingManager() );
+    }
+
+    public PluginMappingManager refreshPluginMappingManager( PluginMappingManager mappingManager, List pluginRepositories,
+                                                             ArtifactRepository localRepository )
+        throws RepositoryMetadataManagementException, PluginMappingManagementException
+    {
+        // prevent performance drag from abuse of this method.
+        if ( mappingManager.isRefreshed() )
+        {
+            throw new PluginMappingManagementException( "Plugin-mappings have already been refreshed. Cannot re-refresh." );
+        }
+        getLogger().info( "Refreshing plugin-mapping metadata..." );
+        
+        List groupIds = new ArrayList();
+        
+        for ( Iterator it = mappingManager.getPluginMaps().iterator(); it.hasNext(); )
+        {
+            PluginMap map = (PluginMap) it.next();
+            
+            String groupId = map.getGroupId();
+            
+            groupIds.add( groupId );
+            
+            repositoryMetadataManager.purgeLocalCopy( new PluginMappingMetadata( groupId ), localRepository );
+        }
+        
+        mappingManager.markRefreshed();
+        
+        return loadPluginMappings(groupIds, pluginRepositories, localRepository, mappingManager);
+    }
+
+    private PluginMappingManager loadPluginMappings( List groupIds, List pluginRepositories,
+                                                    ArtifactRepository localRepository,
+                                                    PluginMappingManager mappingManager )
+        throws RepositoryMetadataManagementException, PluginMappingManagementException
+    {
+        List pluginGroupIds = new ArrayList( groupIds );
+
-        
-        PluginMappingManager mappingManager = new PluginMappingManager();
-                    getLogger().warn( "Cannot resolve plugin-mapping metadata for groupId: " + groupId + " - IGNORING." );
-                    
+                    getLogger()
+                        .warn( "Cannot resolve plugin-mapping metadata for groupId: " + groupId + " - IGNORING." );
+
-    private PluginMap readPluginMap( File mappingFile ) throws PluginMappingManagementException
+    private PluginMap readPluginMap( File mappingFile )
+        throws PluginMappingManagementException
-        if( mappingFile.exists() )
+        if ( mappingFile.exists() )
-                
-                return mappingReader.read(fileReader);
+
+                return mappingReader.read( fileReader );
-                
+
