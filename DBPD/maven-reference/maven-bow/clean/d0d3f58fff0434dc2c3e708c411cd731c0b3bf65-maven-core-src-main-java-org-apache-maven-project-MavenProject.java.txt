[MNG-4526] [regression] Shade plugin includes too much (relative to 2.2.1)

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@904309 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.LinkedHashSet;
+    private Set<Artifact> resolvedArtifacts;
+
+    private ArtifactFilter artifactFilter;
+
-        return artifacts == null ? Collections.<Artifact> emptySet() : artifacts;
+        if ( artifacts == null )
+        {
+            if ( artifactFilter == null )
+            {
+                artifacts = new LinkedHashSet<Artifact>();
+            }
+            else
+            {
+                artifacts = new LinkedHashSet<Artifact>( resolvedArtifacts.size() * 2 );
+                for ( Artifact artifact : resolvedArtifacts )
+                {
+                    if ( artifactFilter.include( artifact ) )
+                    {
+                        artifacts.add( artifact );
+                    }
+                }
+            }
+        }
+        return artifacts;
+    /**
+     * Sets the transitive dependency artifacts that have been resolved/collected for this project.
+     * <strong>Warning:</strong> This is an internal utility method that is only public for technical reasons, it is not
+     * part of the public API. In particular, this method can be changed or deleted without prior notice and must not be
+     * used by plugins.
+     * 
+     * @param artifacts The set of artifacts, may be {@code null}.
+     */
+    public void setResolvedArtifacts( Set<Artifact> artifacts )
+    {
+        this.resolvedArtifacts = ( artifacts != null ) ? artifacts : Collections.<Artifact> emptySet();
+        this.artifacts = null;
+        this.artifactMap = null;
+    }
+
+    /**
+     * Sets the scope filter to select the artifacts being exposed to the currently executed mojo.
+     * <strong>Warning:</strong> This is an internal utility method that is only public for technical reasons, it is not
+     * part of the public API. In particular, this method can be changed or deleted without prior notice and must not be
+     * used by plugins.
+     * 
+     * @param artifactFilter The artifact filter, may be {@code null} to exclude all artifacts.
+     */
+    public void setArtifactFilter( ArtifactFilter artifactFilter )
+    {
+        this.artifactFilter = artifactFilter;
+        this.artifacts = null;
+        this.artifactMap = null;
+    }
+
