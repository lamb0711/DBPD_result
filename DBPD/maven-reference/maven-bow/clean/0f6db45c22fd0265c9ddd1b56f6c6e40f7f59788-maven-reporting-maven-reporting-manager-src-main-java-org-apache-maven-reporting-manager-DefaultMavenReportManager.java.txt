o check if plugin version is defined
o refactor the report execution, it use only the MavenReportConfiguration
o obtain reports list via reportManager.getReports

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@165232 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.util.StringUtils;
-            if ( version == null )
-            {
-                throw new ReportManagerException( "The version of " + groupId + ":" + artifactId + " can not be empty" );
+            if ( pluginReport != null && StringUtils.isEmpty( version ) )
+                {
+                    // The model/project builder should have validated this already
+                    String message = "The maven plugin with groupId: '" + groupId + "' and artifactId: '" + artifactId +
+                        "' which was configured for use in this project does not have a version associated with it.";
+                    throw new IllegalStateException( message );
-                                                                          pluginReport.getVersion(),
+                                                                          version,
+    public Map getReports()
+    {
+        try
+        {
+            mavenReports = container.lookupMap( MavenReport.ROLE );
+        }
+        catch(ComponentLookupException e)
+        {
+            e.printStackTrace();
+        }
+System.out.println("nb reports=" + mavenReports.keySet().size() );
+        return mavenReports;
+    }
+
-    public void executeReport( String name, MavenReportConfiguration config, String outputDirectory )
+    public void executeReport( String name, MavenReportConfiguration config )
-            report.execute( config );
+            report.setConfiguration( config );
+
+            report.generate();
