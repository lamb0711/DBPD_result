o Refactored the goal/plugin resolution part of the lifecycle.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163132 13f79535-47bb-0310-9956-ffa450edef68

-    protected DAG dag;
-
-        dag = new DAG();
-
-    //
-    // ----------------------------------------------------------------------
-
-    public List getGoals( String goal )
-    {
-        return TopologicalSorter.sort( dag.getVertex( goal ) );
-    }
-
-    // ----------------------------------------------------------------------
-
-            if ( mojoDescriptor.getPrereqs() != null )
-            {
-                for ( Iterator k = mojoDescriptor.getPrereqs().iterator(); k.hasNext(); )
-                {
-                    String prereq = (String) k.next();
-
-                    if ( !processEdge( mojoDescriptor.getId(), prereq ) )
-                    {
-                        continue;
-                    }
-                }
-            }
-            else
-            {
-                dag.addVertex( mojoDescriptor.getId() );
-            }
-
+            
-    private boolean processEdge( String mojoId, String prereq ) throws CycleDetectedException
-    {
-        dag.addEdge( mojoId, prereq );
-
-        // We don't want to verify a plugin that we are already in the process
-        // of verifying.
-        String prereqPlugin = getPluginId( prereq );
-
-        String goalPlugin = getPluginId( mojoId );
-
-        if ( isPluginInstalled( prereqPlugin ) )
-        {
-            return false;
-        }
-
-        if ( !goalPlugin.equals( prereqPlugin ) )
-        {
-            try
-            {
-                verifyPluginForGoal( prereq );
-            }
-            catch ( Exception e )
-            {
-                e.printStackTrace();
-            }
-        }
-
-        return true;
-    }
-
