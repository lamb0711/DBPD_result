Fix MNG-508: make mboot use dependencyManagement. 


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@227079 13f79535-47bb-0310-9956-ffa450edef68

+    private Map managedDependencies = new HashMap();
+
+    public Collection getManagedDependencies()
+    {
+        Map m = new HashMap();
+        m.putAll( managedDependencies );
+        return m.values();
+    }
+
-            if ( !insideDependencyManagement )
-            {
-                currentDependency = new Dependency();
+            currentDependency = new Dependency();
-                insideDependency = true;
-            }
+            insideDependency = true;
+            addDependencies( p.getManagedDependencies(), managedDependencies, null );
+
-            if ( !hasDependency( currentDependency, dependencies ) )
+            if ( insideDependencyManagement )
-                if ( resolveTransitiveDependencies )
-                {
-                    ModelReader p = retrievePom( currentDependency.getGroupId(), currentDependency.getArtifactId(),
-                                                 currentDependency.getVersion(), currentDependency.getType(),
-                                                 resolveTransitiveDependencies );
-
-                    addDependencies( p.getDependencies(), transitiveDependencies, currentDependency.getScope() );
-                }
+                managedDependencies.put( currentDependency.getConflictId(), currentDependency );
-            dependencies.put( currentDependency.getConflictId(), currentDependency );
+            else
+            {
+                dependencies.put( currentDependency.getConflictId(), currentDependency );
+            }
+        else if ( depth == 1 ) // model / project
+        {
+            resolveDependencies();
+        }
+    private void resolveDependencies()
+        throws SAXException
+    {
+        for ( Iterator it = dependencies.values().iterator(); it.hasNext(); )
+        {
+            Dependency dependency = (Dependency) it.next();
+
+            if ( dependency.getVersion() == null )
+            {
+                Dependency managedDependency = (Dependency) managedDependencies.get( dependency.getConflictId() );
+                if ( managedDependency == null )
+                {
+                    throw new NullPointerException( "[" + groupId + ":" + artifactId +":" + packaging + ":" + version + "] " +
+                            "Dependency " + dependency.getConflictId() + " is missing a version, and nothing is found in dependencyManagement. ");
+                }
+                dependency.setVersion( managedDependency.getVersion() );
+            }
+
+            if ( resolveTransitiveDependencies )
+            {
+                ModelReader p = retrievePom( dependency.getGroupId(), dependency.getArtifactId(),
+                                             dependency.getVersion(), dependency.getType(),
+                                             resolveTransitiveDependencies );
+
+                addDependencies( p.getDependencies(), transitiveDependencies, dependency.getScope() );
+            }
+        }
+    }
+
