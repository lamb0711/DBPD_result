[MNG-4633] Re-added configurable phase synchronization wrt upstream phase
           Made execution plan calculation parallel in weave mode

Existing weave mode would only phase-lock to the same phase upstream.
Execution plan calculation made parallel at high-level, still looking
into reducing blocking in DefaultMavenPluginManager to cash in on this.

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@941474 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.concurrent.ExecutorCompletionService;
+import java.util.concurrent.ExecutorService;
-                       MavenSession session, CompletionService<ProjectSegment> service,
-                       ReactorBuildStatus reactorBuildStatus )
+                       MavenSession session, ExecutorService executoru, ReactorBuildStatus reactorBuildStatus )
+        CompletionService<ProjectSegment> service = new ExecutorCompletionService<ProjectSegment>( executoru );
+
+            final Map<ProjectSegment, Future<MavenExecutionPlan>> plans =
+                new HashMap<ProjectSegment, Future<MavenExecutionPlan>>();
+                    plans.put( projectBuild, executoru.submit( createEPFuture( projectBuild, projectArtifacts ) ) );
+                }
+
+                for ( ProjectSegment projectSegment : plans.keySet() )
+                {
+                    executionPlans.put( projectSegment.getProject(), plans.get( projectSegment ).get() );
+
+                }
+                for ( ProjectSegment projectBuild : segmentChunks )
+                {
-                        MavenExecutionPlan executionPlan =
-                            builderCommon.resolveBuildPlan( projectBuild.getSession(), projectBuild.getProject(),
-                                                            projectBuild.getTaskSegment(), projectArtifacts );
-
-                        executionPlans.put( projectBuild.getProject(), executionPlan );
+                        final MavenExecutionPlan executionPlan = plans.get( projectBuild ).get();
+    private Callable<MavenExecutionPlan> createEPFuture( final ProjectSegment projectSegment,
+                                                         final Set<Artifact> projectArtifacts )
+    {
+        return new Callable<MavenExecutionPlan>()
+        {
+            public MavenExecutionPlan call()
+                throws Exception
+            {
+                return builderCommon.resolveBuildPlan( projectSegment.getSession(), projectSegment.getProject(),
+                                                       projectSegment.getTaskSegment(), projectArtifacts );
+            }
+        };
+    }
+
+
-                                waitForAppropriateUpstreamExecutionsToFinish( builtLogItem, nextPlanItem,
-                                                                              projectBuild );
+                                waitForAppropriateUpstreamExecutionsToFinish( builtLogItem, nextPlanItem, projectBuild,
+                                                                              scheduleOfNext );
-                                                               ProjectSegment projectBuild )
+                                                               ProjectSegment projectBuild, Schedule scheduleOfNext )
-            final String nextPhase = nextPlanItem.getLifecyclePhase();
+            final String nextPhase = scheduleOfNext != null && scheduleOfNext.hasUpstreamPhaseDefined()
+                ? scheduleOfNext.getUpstreamPhase()
+                : nextPlanItem.getLifecyclePhase();
