o more reduction of the repository interface
o cleaning up the project builder


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@750677 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.ArtifactUtils;
-import org.apache.maven.artifact.resolver.ArtifactNotFoundException;
-import org.apache.maven.artifact.resolver.ArtifactResolutionException;
-    private boolean interactive = true;
-
-    private static HashMap<String, Artifact> cache = new HashMap<String, Artifact>();
-
-    // ----------------------------------------------------------------------------
-    // Code snagged from ProjectUtils: this will have to be moved somewhere else
-    // but just trying to collect it all in one place right now.
-    // ----------------------------------------------------------------------------
-
-    public List<ArtifactRepository> buildArtifactRepositories( List<Repository> repositories )
-        throws InvalidRepositoryException
-    {
-        List<ArtifactRepository> repos = new ArrayList<ArtifactRepository>();
-
-        for ( Repository mavenRepo : repositories )
-        {
-            ArtifactRepository artifactRepo = buildArtifactRepository( mavenRepo );
-
-            if ( !repos.contains( artifactRepo ) )
-            {
-                repos.add( artifactRepo );
-            }
-        }
-
-        return repos;
-    }
-
-    // Taken from RepositoryHelper
-
-    public void findModelFromRepository( Artifact artifact, List remoteArtifactRepositories, ArtifactRepository localRepository )
-        throws InvalidRepositoryException, ArtifactResolutionException, ArtifactNotFoundException    
-    {        
-        if ( cache.containsKey( artifact.getId() ) )
-        {
-            artifact.setFile( cache.get( artifact.getId() ).getFile() );
-        }
-        
-        // if the artifact is not a POM, we need to construct a POM artifact based on the artifact parameter given.
-        /*
-        if ( "pom".equals( artifact.getType() ) )
-        {
-            projectArtifact = artifact;
-        }
-        else
-        {
-            logger.debug( "Attempting to build MavenProject instance for Artifact (" + artifact.getGroupId() + ":" + artifact.getArtifactId() + ":" + artifact.getVersion() + ") of type: "
-                + artifact.getType() + "; constructing POM artifact instead." );
-
-            projectArtifact = artifactFactory.createProjectArtifact( artifact.getGroupId(), artifact.getArtifactId(), artifact.getVersion(), artifact.getScope() );
-        }
-        */
-        
-        ArtifactResolutionRequest request = new ArtifactResolutionRequest( artifact, localRepository, remoteArtifactRepositories );
-        ArtifactResolutionResult result = resolve( request );
-        resolutionErrorHandler.throwErrors( request, result );
-        
-        cache.put( artifact.getId(), artifact );
-    }
-
-    private String safeVersionlessKey( String groupId, String artifactId )
-    {
-        String gid = groupId;
-
-        if ( StringUtils.isEmpty( gid ) )
-        {
-            gid = "unknown";
-        }
-
-        String aid = artifactId;
-
-        if ( StringUtils.isEmpty( aid ) )
-        {
-            aid = "unknown";
-        }
-
-        return ArtifactUtils.versionlessKey( gid, aid );
-    }
-
-    public void setInteractive( boolean interactive )
-    {
-        this.interactive = interactive;
-    }
-
-    public ArtifactRepository getMirror( ArtifactRepository repository )
-    {
-        return mirrorBuilder.getMirror( repository );
-    }
-
