Use for each

+import java.util.Collection;
-        List parentPlugins = parent.getPlugins();
+        List<ReportPlugin> parentPlugins = parent.getPlugins();
-            Map assembledPlugins = new TreeMap();
+            Map<String, ReportPlugin> assembledPlugins = new TreeMap<String, ReportPlugin>();
-            Map childPlugins = child.getReportPluginsAsMap();
+            Map<String, ReportPlugin> childPlugins = child.getReportPluginsAsMap();
-            for ( Object parentPlugin1 : parentPlugins )
+            for ( ReportPlugin parentPlugin : parentPlugins )
-                ReportPlugin parentPlugin = (ReportPlugin) parentPlugin1;
-
-                    ReportPlugin childPlugin = (ReportPlugin) childPlugins.get( parentPlugin.getKey() );
+                    ReportPlugin childPlugin = childPlugins.get( parentPlugin.getKey() );
-            for ( Iterator it = childPlugins.values().iterator(); it.hasNext(); )
+            for ( ReportPlugin childPlugin : childPlugins.values() )
-                ReportPlugin childPlugin = (ReportPlugin) it.next();
-
-            child.setPlugins( new ArrayList( assembledPlugins.values() ) );
+            child.setPlugins( new ArrayList<ReportPlugin>( assembledPlugins.values() ) );
-        List parentReports = parent.getReports();
-        List childReports = child.getReports();
+        List<String> parentReports = parent.getReports();
+        List<String> childReports = child.getReports();
-        List reports = new ArrayList();
+        List<String> reports = new ArrayList<String>();
-            for ( Iterator i = parentReports.iterator(); i.hasNext(); )
+            for ( String report : parentReports )
-                String report = (String) i.next();
-
-        List parentReportSets = parent.getReportSets();
+        List<ReportSet> parentReportSets = parent.getReportSets();
-            Map assembledReportSets = new TreeMap();
+            Map<String, ReportSet> assembledReportSets = new TreeMap<String, ReportSet>();
-            Map childReportSets = child.getReportSetsAsMap();
+            Map<String, ReportSet> childReportSets = child.getReportSetsAsMap();
-            for ( Iterator it = parentReportSets.iterator(); it.hasNext(); )
+            for ( Object parentReportSet1 : parentReportSets )
-                ReportSet parentReportSet = (ReportSet) it.next();
+                ReportSet parentReportSet = (ReportSet) parentReportSet1;
-                    ReportSet childReportSet = (ReportSet) childReportSets.get( parentReportSet.getId() );
+                    ReportSet childReportSet = childReportSets.get( parentReportSet.getId() );
-            for ( Iterator it = childReportSets.entrySet().iterator(); it.hasNext(); )
+            for ( Map.Entry<String, ReportSet> entry : childReportSets.entrySet() )
-                Map.Entry entry = (Map.Entry) it.next();
-
-                String id = (String) entry.getKey();
+                String id = entry.getKey();
-            child.setReportSets( new ArrayList( assembledReportSets.values() ) );
+            child.setReportSets( new ArrayList<ReportSet>( assembledReportSets.values() ) );
