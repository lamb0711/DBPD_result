o Moved expansion of plugin configuration into component

git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@773692 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.plugin.PluginConfigurationExpander;
+    private PluginConfigurationExpander pluginConfigurationExpander;
+
+    @Requirement
-            {            
-                Collection<Plugin> pluginsFromProject = project.getModel().getBuild().getPlugins();
+            {
+                pluginConfigurationExpander.expandPluginConfiguration( project.getModel() );
-                // Merge the various sources for mojo configuration:
-                // 1. default values from mojo descriptor
-                // 2. POM values from per-plugin configuration
-                // 3. POM values from per-execution configuration
-                // These configuration sources are given in increasing order of dominance.
-
-                // push plugin configuration down to executions
-                for ( Plugin buildPlugin : pluginsFromProject )
-                {
-                    Xpp3Dom dom = (Xpp3Dom) buildPlugin.getConfiguration();
-
-                    if ( dom != null )
-                    {
-                        for ( PluginExecution e : buildPlugin.getExecutions() )
-                        {
-                            Xpp3Dom dom1 = Xpp3Dom.mergeXpp3Dom( (Xpp3Dom) e.getConfiguration(), new Xpp3Dom( dom ) );
-                            e.setConfiguration( dom1 );
-                        }
-                    }
-                }
-
-                // merge in default values from mojo descriptor
-                lifecycle.populateDefaultConfigurationForPlugins( pluginsFromProject, project, configuration.getLocalRepository() );
-
-                project.getModel().getBuild().setPlugins( new ArrayList<Plugin>( pluginsFromProject ) );
+                lifecycle.populateDefaultConfigurationForPlugins( project.getModel().getBuild().getPlugins(), project,
+                                                                  configuration.getLocalRepository() );
