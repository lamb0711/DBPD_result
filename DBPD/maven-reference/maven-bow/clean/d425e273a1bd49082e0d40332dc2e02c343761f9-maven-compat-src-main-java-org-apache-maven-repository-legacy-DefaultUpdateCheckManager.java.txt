[MNG-3470] Build does not fail on corrupted POM even with checksumPolicy=fail

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@929985 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.repository.Proxy;
+
+    private static final String ERROR_KEY_SUFFIX = ".error";
+
-    public void touch( Artifact artifact, ArtifactRepository repository )
+    public String getError( Artifact artifact, ArtifactRepository repository )
+    {
+        File touchFile = getTouchfile( artifact );
+        return getError( touchFile, getRepositoryKey( repository ) );
+    }
+
+    public void touch( Artifact artifact, ArtifactRepository repository, String error )
-            writeLastUpdated( touchfile, getRepositoryKey( repository ) );
+            writeLastUpdated( touchfile, getRepositoryKey( repository ), error );
-        writeLastUpdated( touchfile, key );
+        writeLastUpdated( touchfile, key, null );
+        Proxy proxy = repository.getProxy();
+        if ( proxy != null )
+        {
+            if ( proxy.getUserName() != null )
+            {
+                int hash = ( proxy.getUserName() + proxy.getPassword() ).hashCode();
+                buffer.append( hash ).append( '@' );
+            }
+            buffer.append( proxy.getHost() ).append( ':' ).append( proxy.getPort() ).append( '>' );
+        }
+
-    private void writeLastUpdated( File touchfile, String key )
+    private void writeLastUpdated( File touchfile, String key, String error )
+                if ( error != null )
+                {
+                    props.setProperty( key + ERROR_KEY_SUFFIX, error );
+                }
+                else
+                {
+                    props.remove( key + ERROR_KEY_SUFFIX );
+                }
+
-    public Date readLastUpdated( File touchfile, String key )
+    Date readLastUpdated( File touchfile, String key )
+    {
+        getLogger().debug( "Searching for " + key + " in resolution tracking file." );
+
+        Properties props = read( touchfile );
+        if ( props != null )
+        {
+            String rawVal = props.getProperty( key );
+            if ( rawVal != null )
+            {
+                try
+                {
+                    return new Date( Long.parseLong( rawVal ) );
+                }
+                catch ( NumberFormatException e )
+                {
+                    getLogger().debug( "Cannot parse lastUpdated date: \'" + rawVal + "\'. Ignoring.", e );
+                }
+            }
+        }
+        return null;
+    }
+
+    private String getError( File touchFile, String key )
+    {
+        Properties props = read( touchFile );
+        if ( props != null )
+        {
+            return props.getProperty( key + ERROR_KEY_SUFFIX );
+        }
+        return null;
+    }
+
+    private Properties read( File touchfile )
-            getLogger().debug( "Skipped unreadable touchfile " + touchfile + " for key " + key );
+            getLogger().debug( "Skipped unreadable resolution tracking file " + touchfile );
-            getLogger().debug( "Searching for: " + key + " in touchfile." );
-
-            Date result = null;
-                String rawVal = props.getProperty( key );
-                if ( rawVal != null )
-                {
-                    try
-                    {
-                        result = new Date( Long.parseLong( rawVal ) );
-                    }
-                    catch ( NumberFormatException e )
-                    {
-                        getLogger().debug( "Cannot parse lastUpdated date: \'" + rawVal + "\'. Ignoring.", e );
-                        result = null;
-                    }
-                }
+                return props;
-                getLogger().debug( "Failed to read lastUpdated information.\nFile: "
-                                       + touchfile.toString() + "; key: " + key, e );
+                getLogger().debug( "Failed to read resolution tracking file " + touchfile, e );
+
+                return null;
-                        getLogger().debug( "Error releasing shared lock for resolution tracking file: "
-                                               + touchfile, e );
+                        getLogger().debug( "Error releasing shared lock for resolution tracking file: " + touchfile, e );
-                        getLogger().debug( "Error closing FileChannel for resolution tracking file: "
-                                           + touchfile, e );
+                        getLogger().debug( "Error closing FileChannel for resolution tracking file: " + touchfile, e );
-
-            return result;
