o removing MavenProject from the public signature of the plugin manager to enforce the concern of the plugin manager which is simply to execute plugins. all configuration and processing of configuration happens before the plugin manager. the only thing left is the expression evaluator which has the mixed concern of configuration and componnent injection.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@774361 13f79535-47bb-0310-9956-ffa450edef68

-    public Plugin findPluginForPrefix( String prefix, MavenProject project )
+    public Plugin findPluginForPrefix( String prefix, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories )
-    public PluginDescriptor loadPlugin( Plugin plugin, MavenProject project, ArtifactRepository localRepository )
+    public PluginDescriptor loadPlugin( Plugin plugin, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories )
-            return addPlugin( plugin, project, localRepository );
+            return addPlugin( plugin, localRepository, remoteRepositories );
-    protected PluginDescriptor addPlugin( Plugin plugin, MavenProject project, ArtifactRepository localRepository )
+    protected PluginDescriptor addPlugin( Plugin plugin, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories )
-            .setRemoteRepostories( project.getRemoteArtifactRepositories() );
+            .setRemoteRepostories( remoteRepositories );
-        Set<Artifact> pluginArtifacts = getPluginArtifacts( pluginArtifact, plugin, project, localRepository );
+        Set<Artifact> pluginArtifacts = getPluginArtifacts( pluginArtifact, plugin, localRepository, remoteRepositories );
-    private Set<Artifact> getPluginArtifacts( Artifact pluginArtifact, Plugin pluginAsSpecifiedinPom, MavenProject project, ArtifactRepository localRepository )
+    private Set<Artifact> getPluginArtifacts( Artifact pluginArtifact, Plugin pluginAsSpecifiedinPom, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories )
-            .setRemoteRepostories( project.getRemoteArtifactRepositories() )
+            .setRemoteRepostories( remoteRepositories )
-    public MojoDescriptor getMojoDescriptor( Plugin plugin, String goal, MavenProject project, ArtifactRepository localRepository )
+    public MojoDescriptor getMojoDescriptor( Plugin plugin, String goal, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories )
-        PluginDescriptor pluginDescriptor = loadPlugin( plugin, project, localRepository );
+        PluginDescriptor pluginDescriptor = loadPlugin( plugin, localRepository, remoteRepositories );
