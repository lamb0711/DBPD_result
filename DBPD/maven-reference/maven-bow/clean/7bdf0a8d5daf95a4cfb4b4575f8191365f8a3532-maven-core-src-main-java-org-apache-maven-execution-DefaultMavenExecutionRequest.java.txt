o have very much simplified the use of settings use so the settings advice is not required as it is the job
  of the client using the embedder to decide the semantics of use. some uses may have only one settings file, some may have five and
  some may have none. trying to move away from hardwired usage patterns for the embedder. the cli is now responsible for dealing with what
  is now standard insofar as user and global settings.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@512544 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.settings.Settings;
-import org.apache.maven.settings.SettingsBuilderAdvice;
+import org.apache.maven.settings.Settings;
-    // ----------------------------------------------------------------------------
-    // Settings equivalents
-    // ----------------------------------------------------------------------------
-
-    private Settings settings;
-
-    private String settingsFile;
-
-    private SettingsBuilderAdvice advice;
-
-    // ----------------------------------------------------------------------
-    //
-    // ----------------------------------------------------------------------
-
-    public String getSettingsFile()
-    {
-        return settingsFile;
-    }
-
-    public MavenExecutionRequest setSettingsFile( String settingsFile )
-    {
-        this.settingsFile = settingsFile;
-
-        return this;
-    }
-
-    public Settings getSettings()
-    {
-        return settings;
-    }
-
-    public MavenExecutionRequest setSettings( Settings settings )
-    {
-        this.settings = settings;
-
-        return this;
-    }
-
-    //
-
-    public SettingsBuilderAdvice getSettingsBuilderAdvice()
-    {
-        return advice;
-    }
+    private Settings settings;
-    public MavenExecutionRequest setSettingsBuilderAdvice( SettingsBuilderAdvice advice )
+    public MavenExecutionRequest setSettings( Settings settings )
-        this.advice = advice;
-        
+        this.settings = settings;
+
+    public Settings getSettings()
+    {
+        return settings;
+    }
