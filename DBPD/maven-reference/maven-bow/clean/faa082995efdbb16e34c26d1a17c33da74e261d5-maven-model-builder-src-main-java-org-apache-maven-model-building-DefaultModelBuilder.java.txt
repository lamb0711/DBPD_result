o Introduced model building listener

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@793842 13f79535-47bb-0310-9956-ffa450edef68

+        fireBuildExtensionsAssembled( resultModel, request, problems );
+
-    private ProfileActivationContext getProfileActivationContext( File pomFile, ModelBuildingRequest request )
-    {
-        ProfileActivationContext context = new DefaultProfileActivationContext();
-
-        context.setActiveProfileIds( request.getActiveProfileIds() );
-        context.setInactiveProfileIds( request.getInactiveProfileIds() );
-        context.setExecutionProperties( request.getExecutionProperties() );
-        context.setProjectDirectory( ( pomFile != null ) ? pomFile.getParentFile() : null );
-
-        return context;
-    }
-
+    private ProfileActivationContext getProfileActivationContext( File pomFile, ModelBuildingRequest request )
+    {
+        ProfileActivationContext context = new DefaultProfileActivationContext();
+
+        context.setActiveProfileIds( request.getActiveProfileIds() );
+        context.setInactiveProfileIds( request.getInactiveProfileIds() );
+        context.setExecutionProperties( request.getExecutionProperties() );
+        context.setProjectDirectory( ( pomFile != null ) ? pomFile.getParentFile() : null );
+
+        return context;
+    }
+
+    private void fireBuildExtensionsAssembled( Model model, ModelBuildingRequest request, List<ModelProblem> problems )
+        throws ModelBuildingException
+    {
+        if ( request.getModelBuildingListeners().isEmpty() )
+        {
+            return;
+        }
+
+        ModelBuildingEvent event = new DefaultModelBuildingEvent( model, request );
+
+        for ( ModelBuildingListener listener : request.getModelBuildingListeners() )
+        {
+            try
+            {
+                listener.buildExtensionsAssembled( event );
+            }
+            catch ( Exception e )
+            {
+                problems.add( new ModelProblem( "Invalid build extensions: " + e.getMessage(),
+                                                ModelProblem.Severity.ERROR, toSourceHint( model ), e ) );
+            }
+        }
+    }
+
