Adding more context information to existing exceptions, cleaning up construction in exceptions, and adjusting the inheritance hierarchy for exceptions to make them make a little more sense for error reporting. Also, adding improved (but not complete, yet) reporting for BuildFailureExceptions and ProjectBuildingExceptions, with some tests to make sure pertinent information is in the output.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@592859 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.InvalidTaskException;
+import org.apache.maven.plugin.loader.PluginLoaderException;
+
-    private Throwable cause;
-
+    private Throwable cause;
+
-    public TaskValidationResult( String invalidTask, String message )
+    public TaskValidationResult( String invalidTask,
+                                 String message,
+                                 PluginLoaderException cause )
-    }
-
-    public TaskValidationResult( String invalidTask, String message, Throwable cause )
-    {
-        this.message = message;
+    }
+
+    public TaskValidationResult( String invalidTask,
+                                 String message,
+                                 LifecycleSpecificationException cause )
+    {
+        this.message = message;
+        this.cause = cause;
+    }
+
+    public TaskValidationResult( String invalidTask,
+                                 String message,
+                                 LifecycleLoaderException cause )
+    {
+        this.invalidTask = invalidTask;
+        this.message = message;
+        this.cause = cause;
+
+    public InvalidTaskException generateInvalidTaskException()
+    {
+        InvalidTaskException e = null;
+        if ( cause instanceof LifecycleLoaderException )
+        {
+            e = new InvalidTaskException( this, (LifecycleLoaderException)cause );
+        }
+        else if ( cause instanceof LifecycleSpecificationException )
+        {
+            e = new InvalidTaskException( this, (LifecycleSpecificationException)cause );
+        }
+        else if ( cause instanceof PluginLoaderException )
+        {
+            e = new InvalidTaskException( this, (PluginLoaderException)cause );
+        }
+        else
+        {
+            throw new IllegalStateException( "No matching constructor in InvalidTaskException for TaskValidationResult cause: " + cause + " ( invalid task: " + invalidTask + ")" );
+        }
+
+        return e;
+    }
