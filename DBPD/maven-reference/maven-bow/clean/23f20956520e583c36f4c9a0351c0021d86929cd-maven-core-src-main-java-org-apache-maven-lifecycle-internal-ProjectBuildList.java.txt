fixed errors reported by Checkstyle

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@958295 13f79535-47bb-0310-9956-ffa450edef68

-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
- * agreements. See the NOTICE file distributed with this work for additional information regarding
- * copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance with the License. You may obtain a
- * copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software distributed under the License
- * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
- * or implied. See the License for the specific language governing permissions and limitations under
- * the License.
- */
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *  http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+
-import java.util.*;
-
-
-
-
-    public ProjectBuildList getByTaskSegment(TaskSegment taskSegment)
+    public ProjectBuildList getByTaskSegment( TaskSegment taskSegment )
-            if ( taskSegment == projectBuild.getTaskSegment()){ // NOTE: There's no notion of taskSegment equality.
+            if ( taskSegment == projectBuild.getTaskSegment() )
+            { // NOTE: There's no notion of taskSegment equality.
-    
-    public Map<MavenProject, ProjectSegment> selectSegment(TaskSegment taskSegment)
+
+    public Map<MavenProject, ProjectSegment> selectSegment( TaskSegment taskSegment )
-        Map<MavenProject, ProjectSegment> result = new HashMap<MavenProject, ProjectSegment>( );
+        Map<MavenProject, ProjectSegment> result = new HashMap<MavenProject, ProjectSegment>();
-            if ( taskSegment == projectBuild.getTaskSegment()){ // NOTE: There's no notion of taskSegment equality.
-                result.put(  projectBuild.getProject(), projectBuild );
+            if ( taskSegment == projectBuild.getTaskSegment() )
+            { // NOTE: There's no notion of taskSegment equality.
+                result.put( projectBuild.getProject(), projectBuild );
-    public ProjectSegment findByMavenProject(MavenProject mavenProject)
+    public ProjectSegment findByMavenProject( MavenProject mavenProject )
-            if ( mavenProject.equals( projectBuild.getProject() )){
+            if ( mavenProject.equals( projectBuild.getProject() ) )
+            {
