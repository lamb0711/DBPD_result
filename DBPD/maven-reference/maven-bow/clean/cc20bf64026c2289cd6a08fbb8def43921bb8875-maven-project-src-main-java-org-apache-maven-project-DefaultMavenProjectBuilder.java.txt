merge from branch maven-2.0.x @ rev 367900


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@367902 13f79535-47bb-0310-9956-ffa450edef68

-        MavenProject p = new MavenProject( model );
-        p.setFile( projectDescriptor );
+        CachedModel cachedModel = new CachedModel( projectDescriptor, model );
-        modelCache.put( modelKey, p );
+        modelCache.put( modelKey, cachedModel );
-        MavenProject project = getCachedProject( projectArtifact.getGroupId(), projectArtifact.getArtifactId(),
-                                                 projectArtifact.getVersion() );
+        CachedModel cachedModel = getCachedProject( projectArtifact.getGroupId(), projectArtifact.getArtifactId(),
+                                                    projectArtifact.getVersion() );
-        if ( project == null )
+        if ( cachedModel == null )
-            model = project.getModel();
+            model = cachedModel.getModel();
-            MavenProject p = new MavenProject( ModelUtils.cloneModel( model ) );
-            p.setFile( project.getFile() );
-            modelCache.put( key, p );
+            CachedModel cachedModel = new CachedModel( project.getFile(), ModelUtils.cloneModel( model ) );
+            modelCache.put( key, cachedModel );
-            MavenProject p =
+            CachedModel cachedModel =
-            if ( p != null )
+            if ( cachedModel != null )
-                model = p.getModel();
-                parentDescriptor = p.getFile();
+                model = cachedModel.getModel();
+                parentDescriptor = cachedModel.getDescriptor();
-    private MavenProject getCachedProject( String groupId, String artifactId, String version )
+    private CachedModel getCachedProject( String groupId, String artifactId, String version )
-        return (MavenProject) modelCache.get( createCacheKey( groupId, artifactId, version ) );
+        return (CachedModel) modelCache.get( createCacheKey( groupId, artifactId, version ) );
+
+    private static class CachedModel
+    {
+        private File descriptor;
+
+        private Model model;
+
+        public CachedModel( File descriptor, Model model )
+        {
+            this.descriptor = descriptor;
+            this.model = model;
+        }
+
+        public File getDescriptor()
+        {
+            return descriptor;
+        }
+
+        public Model getModel()
+        {
+            return model;
+        }
+    }
