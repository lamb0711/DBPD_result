- Rewriting of jar mojo with Plexus Archiver.
- Added full features of m1 plugin


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163421 13f79535-47bb-0310-9956-ffa450edef68

- * Copyright 2001-2004 The Apache Software Foundation.
+ * Copyright 2001-2005 The Apache Software Foundation.
+import org.codehaus.plexus.archiver.jar.JarArchiver;
+
-import java.util.LinkedHashMap;
-import java.util.Map;
- * @prereq surefire:test
- * @prereq resources:resources
- *
- *  expression="#maven.final.name"
+ *  expression="#project.build.finalName"
+ *  description=""
+ * @parameter
+ *  name="compress"
+ *  type="String"
+ *  required="false"
+ *  validator=""
+ *  expression="#maven.jar.compress"
+ *  default="true"
+ *  description=""
+ * @parameter
+ *  name="index"
+ *  type="String"
+ *  required="false"
+ *  validator=""
+ *  expression="#maven.jar.index"
+ *  default="false"
+ *  description=""
+ * @parameter
+ *  name="manifest"
+ *  type="String"
+ *  required="false"
+ *  validator=""
+ *  expression="#maven.jar.manifest"
+ *  description=""
+ * @parameter
+ *  name="mainClass"
+ *  type="String"
+ *  required="false"
+ *  validator=""
+ *  expression="#maven.jar.mainClass"
+ *  description=""
+ * @parameter
+ *  name="addClasspath"
+ *  type="String"
+ *  required="false"
+ *  validator=""
+ *  expression="#maven.jar.addClasspath"
+ *  default="false"
+ *  description=""
+ * @parameter
+ *  name="addExtensions"
+ *  type="String"
+ *  required="false"
+ *  validator=""
+ *  expression="#maven.jar.addExtensions"
+ *  default="false"
- * @author <a href="michal@codehaus">Michal Maczka</a>
+ * @author <a href="evenisse@apache.org">Emmanuel Venisse</a>
+    /**
+     * @todo Add license files in META-INF directory.
+     */
+        MavenProject project = (MavenProject)request.getParameter("project");
+
+        String manifest = (String) request.getParameter( "manifest" );
+
+        boolean compress = new Boolean( (String) request.getParameter( "compress" ) ).booleanValue();
+
+        boolean index = new Boolean( (String) request.getParameter( "index" ) ).booleanValue();
+
-        Map includes = new LinkedHashMap();
-        
-        addDirectory(includes, "**/**", "**/package.html", "", new File( outputDirectory ) );
-        
-        MavenProject project = (MavenProject)request.getParameter("project");
-        includes.put("META-INF/maven/pom.xml", project.getFile());
-        
-        createJar( jarFile, includes );
+        JarArchiver archiver = new JarArchiver();
+        archiver.addDirectory( new File( outputDirectory ), new String[] { "**/**" }, new String[] { "**/package.html" } );
+        archiver.addFile( project.getFile(), "META-INF/maven/pom.xml" );
+
+        if (manifest != null && ! "".equals( manifest ) )
+        {
+            File manifestFile = new File( manifest );
+            archiver.setManifest( manifestFile );
+        }
+
+        // Configure the jar
+        archiver.addConfiguredManifest( getManifest( request ) );
+
+        archiver.setCompress( compress );
+        archiver.setIndex( index );
+        archiver.setDestFile( jarFile );
+
+        // create archive
+        archiver.createArchive();
