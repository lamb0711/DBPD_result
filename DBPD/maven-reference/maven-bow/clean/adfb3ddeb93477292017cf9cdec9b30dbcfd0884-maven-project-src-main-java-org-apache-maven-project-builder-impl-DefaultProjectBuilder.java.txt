Tests for MNG-1943 - interpolation in parent pom and MNG-3567 - pluginManagement inherited. Added additional methods to maven embedder for querying of plugin configs.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@740395 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.StringReader;
+import org.apache.maven.project.MavenProjectBuilder;
+import org.apache.maven.project.builder.ProjectUri;
+import org.codehaus.plexus.util.xml.Xpp3DomBuilder;
+import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
+import org.apache.commons.jxpath.JXPathContext;
-       
+
-                                            ProjectBuilderConfiguration projectBuilderConfiguration )
+                                            ProjectBuilderConfiguration projectBuilderConfiguration,
+                                            MavenProjectBuilder mavenProjectBuilder)
-                                                          null, 
+                                                          mavenProjectBuilder, 
-      //  List<ModelProperty> pluginProperties = ModelMarshaller.marshallXmlToModelProperties(
-      //          (new PluginMixin(plugin)).getInputStream(), ProjectUri.Build.Plugins.xUri, null);
+        List<ModelProperty> mps = mixPluginAndReturnConfigAsProperties(plugin, model);
+        return !mps.isEmpty() ?
+            new XmlPlexusConfiguration(ModelMarshaller.unmarshalModelPropertiesToXml(mps, ProjectUri.Build.Plugins.Plugin.xUri)) : null;
+    }
+
+   public Object mixPluginAndReturnConfigAsDom(Plugin plugin, Model model) throws IOException, XmlPullParserException
+   {
+       List<ModelProperty> mps = mixPluginAndReturnConfigAsProperties(plugin, model);
+       return  !mps.isEmpty() ? Xpp3DomBuilder.build(
+               new StringReader(ModelMarshaller.unmarshalModelPropertiesToXml(mps, ProjectUri.Build.Plugins.Plugin.xUri) ) ) : null;
+   }
+
+   public Object mixPluginAndReturnConfigAsDom(Plugin plugin, Model model, String xpathExpression) throws IOException,
+           XmlPullParserException
+   {
+       Object dom = mixPluginAndReturnConfigAsDom(plugin, model);
+       if(dom == null)
+       {
+           return null;
+       }
+       return JXPathContext.newContext( dom ).getValue(xpathExpression);
+   }
+
+   private List<ModelProperty> mixPluginAndReturnConfigAsProperties(Plugin plugin, Model model) throws IOException
+   {
-                return new XmlPlexusConfiguration(ModelMarshaller.unmarshalModelPropertiesToXml(config, ProjectUri.Build.Plugins.Plugin.xUri));
+                return config;
-        return null;       
-    }
+        return new ArrayList<ModelProperty>();
+   }
