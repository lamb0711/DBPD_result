

git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@757141 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.lifecycle.mapping.LifecycleMapping;
-import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
+    @Requirement
+    private Map<String,LifecycleMapping> lifecycleMappings;
+    
-        List optionalMojos = findOptionalMojosForLifecycle( session, project, lifecycle );
-
-            try
-            {
-                m = (LifecycleMapping) session.lookup( LifecycleMapping.ROLE, packaging );
-                mappings = m.getPhases( lifecycle.getId() );
-            }
-            catch ( ComponentLookupException e )
-            {
-                if ( defaultMappings == null )
-                {
-                    throw new LifecycleExecutionException( "Cannot find lifecycle mapping for packaging: \'" + packaging + "\'.", e );
-                }
-            }
+            m = lifecycleMappings.get( packaging );
+                        
+            mappings = m.getPhases( lifecycle.getId() );                    
-    private List findOptionalMojosForLifecycle( MavenSession session, MavenProject project, Lifecycle lifecycle )
-        throws LifecycleExecutionException, PluginNotFoundException
-    {
-        String packaging = project.getPackaging();
-        List optionalMojos = null;
-
-        LifecycleMapping m;
-
-        if ( optionalMojos == null )
-        {
-            try
-            {
-                m = (LifecycleMapping) session.lookup( LifecycleMapping.ROLE, packaging );
-                optionalMojos = m.getOptionalMojos( lifecycle.getId() );
-            }
-            catch ( ComponentLookupException e )
-            {
-                getLogger().debug( "Error looking up lifecycle mapping to retrieve optional mojos. Lifecycle ID: " + lifecycle.getId() + ". Error: " + e.getMessage(), e );
-            }
-        }
-
-        if ( optionalMojos == null )
-        {
-            optionalMojos = Collections.EMPTY_LIST;
-        }
-
-        return optionalMojos;
-    }
-
