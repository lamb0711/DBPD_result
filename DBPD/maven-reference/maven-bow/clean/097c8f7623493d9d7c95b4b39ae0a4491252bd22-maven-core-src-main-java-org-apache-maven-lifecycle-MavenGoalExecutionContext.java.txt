o started building up the code that we will use for the session lifecycle
  -> bascially the mechanism is the same as the one we use for the goal
     execution lifecycle

  This first cut is so John can see as we're discussing the session stuff
  at the moment and I need to get this working in order to push all notions
  of artifact handling out of MavenProject.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@162969 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.lifecycle.session.MavenSession;
-import org.apache.maven.plugin.PluginManager;
-import org.apache.maven.repository.RepositoryUtils;
-import org.codehaus.plexus.PlexusContainer;
-import java.util.HashSet;
+    private MavenSession session;
+
-    private PlexusContainer container;
-
-    private MavenProject project;
-
-    private PluginManager pluginManager;
-
-    private Set pluginDependencies;
-
-    private ArtifactRepository localRepository;
-
-    private Set remoteRepositories;
-
-    public MavenGoalExecutionContext( PlexusContainer container,
-                                  MavenProject project,
-                                  MojoDescriptor goal,
-                                  ArtifactRepository localRepository )
-        throws Exception
+    public MavenGoalExecutionContext( MavenSession session, MojoDescriptor goal )
-        this.container = container;
-
-        this.project = project;
+        this.session  = session;
+    }
-        this.localRepository = localRepository;
-
-        pluginManager = (PluginManager) lookup( PluginManager.ROLE );
-
-        pluginDependencies = new HashSet();
+    public MavenSession getSession()
+    {
+        return session;
-    // Provide an easy way to lookup plexus components
+    // Delegation to the session
+
+    public MavenProject getProject()
+    {
+        return session.getProject();
+    }
+
+    public ArtifactRepository getLocalRepository()
+    {
+        return session.getLocalRepository();
+    }
+
+    public Set getRemoteRepositories()
+    {
+        return session.getRemoteRepositories();
+    }
+
-        return container.lookup( role );
+        return session.lookup( role );
-    public Object lookup( String role, String roleHint )
+    public Object lookup( String role, String hint )
-        return container.lookup( role, roleHint );
+        return session.lookup( role, hint );
-        if ( component != null )
-        {
-            try
-            {
-                container.release( component );
-            }
-            catch ( Exception e )
-            {
-                //@todo what to do here?
-            }
-        }
+        session.release( component );
-    //
-    // ----------------------------------------------------------------------
+
-    // ----------------------------------------------------------------------
-    //
-    // ----------------------------------------------------------------------
-    public PlexusContainer getContainer()
-    {
-        return container;
-    }
-
-    public MavenProject getProject()
-    {
-        return project;
-    }
-
-    // ----------------------------------------------------------------------
-    // Resolved MojoDescriptors
-    // ----------------------------------------------------------------------
-    // ----------------------------------------------------------------------
-    // Delegation to the plugin manager
-    // ----------------------------------------------------------------------
-        return pluginManager.getMojoDescriptor( mojoDescriptorName );
+        return session.getPluginManager().getMojoDescriptor( mojoDescriptorName );
-    // ----------------------------------------------------------------------
-    // Execution failure
-    // ----------------------------------------------------------------------
-    public Set getPluginDependencies()
-    {
-        return pluginDependencies;
-    }
-
-    public void setPluginDependencies( Set pluginDependencies )
-    {
-        this.pluginDependencies = pluginDependencies;
-    }
-
-    // ----------------------------------------------------------------------
-    // Local repository
-    // ----------------------------------------------------------------------
-
-    public ArtifactRepository getLocalRepository()
-    {
-        return localRepository;
-    }
-
-    public Set getRemoteRepositories()
-    {
-        if ( remoteRepositories == null )
-        {
-            remoteRepositories = RepositoryUtils.mavenToWagon( project.getRepositories() );
-        }
-
-        return remoteRepositories;
-    }
-
