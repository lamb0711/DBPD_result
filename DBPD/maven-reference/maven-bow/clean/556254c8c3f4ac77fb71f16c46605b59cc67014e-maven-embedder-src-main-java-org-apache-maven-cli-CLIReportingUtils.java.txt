MNG-3653/MNG-3677: restored property file nabbing from the core JAR, and reworked the runtime component to be more general and used it from the CLI



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@701264 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.execution.ApplicationInformation;
+import org.apache.maven.execution.DefaultRuntimeInformation;
- *
+ * 
- *
+ * 
-        InputStream resourceAsStream;
-        try
-        {
-            Properties properties = new Properties();
-            resourceAsStream = MavenCli.class.getClassLoader()
-                                             .getResourceAsStream( "META-INF/maven/org.apache.maven/maven-core/pom.properties" );
+        ApplicationInformation ai = DefaultRuntimeInformation.getVersion( MavenCli.class.getClassLoader(), "org.apache.maven", "maven-core" );
-            if ( resourceAsStream != null )
-            {
-                properties.load( resourceAsStream );
-
-                if ( properties.getProperty( "builtOn" ) != null )
-                {
-                    System.out.println( "Maven version: "
-                                        + properties.getProperty( "version", "unknown" ) + " built on "
-                                        + properties.getProperty( "builtOn" ) );
-                }
-                else
-                {
-                    System.out.println( "Maven version: "
-                                        + properties.getProperty( "version", "unknown" ) );
-                }
-            }
-            else
-            {
-                System.out.println( "Maven version: unknown" );
-            }
-
-            System.out.println( "Java version: "
-                                + System.getProperty( "java.version", "<unknown java version>" ) );
-
-            System.out.println( "Default locale: " + Locale.getDefault() + ", platform encoding: "
-                                + System.getProperty( "file.encoding", "<unknown encoding>" ) );
-
-            System.out.println( "OS name: \"" + Os.OS_NAME + "\" version: \"" + Os.OS_VERSION +
-                                "\" arch: \"" + Os.OS_ARCH + "\" family: \"" + Os.OS_FAMILY + "\"" );
-        }
-        catch ( IOException e )
-        {
-            System.err.println( "Unable determine version from JAR file: " + e.getMessage() );
-        }
+        System.out.println( "Maven version: " + ai.getVersion() + " built on " + ai.getBuiltOn() );
+        System.out.println( "Java version: " + System.getProperty( "java.version", "<unknown java version>" ) );
+        System.out.println( "Default locale: " + Locale.getDefault() + ", platform encoding: " + System.getProperty( "file.encoding", "<unknown encoding>" ) );
+        System.out.println( "OS name: \"" + Os.OS_NAME + "\" version: \"" + Os.OS_VERSION + "\" arch: \"" + Os.OS_ARCH + "\" family: \"" + Os.OS_FAMILY + "\"" );
+     * 
-    public static void logResult( MavenExecutionRequest request,
-                           MavenExecutionResult result,
-                           MavenEmbedderLogger logger )
+    public static void logResult( MavenExecutionRequest request, MavenExecutionResult result, MavenEmbedderLogger logger )
-                
+
-    static void showError( String message,
-                           Exception e,
-                           boolean showErrors )
+    static void showError( String message, Exception e, boolean showErrors )
-    private static void showError( Exception e,
-                           boolean show,
-                           CoreErrorReporter reporter,
-                           MavenEmbedderLogger logger )
+    private static void showError( Exception e, boolean show, CoreErrorReporter reporter, MavenEmbedderLogger logger )
+     * 
-    public static void showError( String message,
-                           Exception e,
-                           boolean showStackTraces,
-                           CoreErrorReporter reporter,
-                           MavenEmbedderLogger logger )
+    public static void showError( String message, Exception e, boolean showStackTraces, CoreErrorReporter reporter, MavenEmbedderLogger logger )
-    public static void buildErrorMessage( Exception e,
-                                           boolean showStackTraces,
-                                           CoreErrorReporter reporter,
-                                           StringWriter writer )
+    public static void buildErrorMessage( Exception e, boolean showStackTraces, CoreErrorReporter reporter, StringWriter writer )
-            handled = handleProjectBuildingException( (ProjectBuildingException) e,
-                                                      showStackTraces,
-                                                      writer );
+            handled = handleProjectBuildingException( (ProjectBuildingException) e, showStackTraces, writer );
-            handled = handleLifecycleExecutionException( (LifecycleExecutionException) e,
-                                                         showStackTraces,
-                                                         writer );
+            handled = handleLifecycleExecutionException( (LifecycleExecutionException) e, showStackTraces, writer );
-            handled = handleMavenExecutionException( (MavenExecutionException) e,
-                                                     showStackTraces,
-                                                     writer );
+            handled = handleMavenExecutionException( (MavenExecutionException) e, showStackTraces, writer );
-    private static boolean handleMavenExecutionException( MavenExecutionException e,
-                                                          boolean showStackTraces,
-                                                          StringWriter writer )
+    private static boolean handleMavenExecutionException( MavenExecutionException e, boolean showStackTraces, StringWriter writer )
-    private static void handleGenericException( Throwable exception,
-                                                boolean showStackTraces,
-                                                StringWriter writer )
+    private static void handleGenericException( Throwable exception, boolean showStackTraces, StringWriter writer )
-    private static boolean handleLifecycleExecutionException( LifecycleExecutionException e,
-                                                              boolean showStackTraces,
-                                                              StringWriter writer )
+    private static boolean handleLifecycleExecutionException( LifecycleExecutionException e, boolean showStackTraces, StringWriter writer )
-    private static boolean handleProjectBuildingException( ProjectBuildingException e,
-                                                           boolean showStackTraces,
-                                                           StringWriter writer )
+    private static boolean handleProjectBuildingException( ProjectBuildingException e, boolean showStackTraces, StringWriter writer )
-    private static void logReactorSummary( ReactorManager rm,
-                                           MavenEmbedderLogger logger )
+    private static void logReactorSummary( ReactorManager rm, MavenEmbedderLogger logger )
-                    logReactorSummaryLine( project.getName(),
-                                           "FAILED",
-                                           rm.getBuildFailure( project ).getTime(),
-                                           logger );
+                    logReactorSummaryLine( project.getName(), "FAILED", rm.getBuildFailure( project ).getTime(), logger );
-                    logReactorSummaryLine( project.getName(),
-                                           "SKIPPED (dependency build failed or was skipped)",
-                                           logger );
+                    logReactorSummaryLine( project.getName(), "SKIPPED (dependency build failed or was skipped)", logger );
-                    logReactorSummaryLine( project.getName(),
-                                           "SUCCESS",
-                                           rm.getBuildSuccess( project ).getTime(),
-                                           logger );
+                    logReactorSummaryLine( project.getName(), "SUCCESS", rm.getBuildSuccess( project ).getTime(), logger );
-    private static void stats( Date start,
-                               MavenEmbedderLogger logger )
+    private static void stats( Date start, MavenEmbedderLogger logger )
-        logger.info( "Final Memory: " + ( r.totalMemory() - r.freeMemory() ) / MB + "M/"
-                     + r.totalMemory() / MB + "M" );
+        logger.info( "Final Memory: " + ( r.totalMemory() - r.freeMemory() ) / MB + "M/" + r.totalMemory() / MB + "M" );
-    private static void logReactorSummaryLine( String name,
-                                               String status,
-                                               MavenEmbedderLogger logger )
+    private static void logReactorSummaryLine( String name, String status, MavenEmbedderLogger logger )
-    private static void logReactorSummaryLine( String name,
-                                               String status,
-                                               long time,
-                                               MavenEmbedderLogger logger )
+    private static void logReactorSummaryLine( String name, String status, long time, MavenEmbedderLogger logger )
