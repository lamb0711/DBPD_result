o Moved injection of default plugin executions defined by lifecycle bindings into dedicated component and decoupled from processors

git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@773402 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.HashSet;
+import org.apache.maven.model.lifecycle.LifecycleBindingsInjector;
+    private LifecycleBindingsInjector lifecycleBindingsInjector;
+
+    @Requirement
-            Set<Plugin> plugins = lifecycle.getPluginsBoundByDefaultToAllLifecycles( model.getPackaging() );
-
-            addPluginsToModel( model, plugins );
+            lifecycleBindingsInjector.injectLifecycleBindings( model );
-    public static void addPluginsToModel( Model target, Set<Plugin> plugins )
-    {
-        List<Plugin> mngPlugins = ( target.getBuild().getPluginManagement() != null ) ? target.getBuild().getPluginManagement().getPlugins() : new ArrayList<Plugin>();
-
-        List<Plugin> pomPlugins = new ArrayList<Plugin>( target.getBuild().getPlugins() );
-
-        List<Plugin> lifecyclePlugins = new ArrayList<Plugin>();
-
-        for ( Plugin p : plugins )
-        {
-            //Go ahead and add version if exists in pluginManagement - don't use default version
-            Plugin mngPlugin = containsPlugin( p, mngPlugins );
-            if ( mngPlugin != null && mngPlugin.getVersion() != null )
-            {
-                //System.out.println("Set version:" + p.getVersion() + ": To = " + mngPlugin.getVersion());
-                p.setVersion( mngPlugin.getVersion() );
-            }
-
-            Plugin pomPlugin = containsPlugin( p, pomPlugins );
-            if ( pomPlugin == null )
-            {
-                lifecyclePlugins.add( p );
-            }
-            else
-            {
-                PluginProcessor.copy2( p, pomPlugin, true );
-                if ( p.getConfiguration() != null )
-                {
-                    System.out.println( Xpp3Dom.mergeXpp3Dom( (Xpp3Dom) p.getConfiguration(), (Xpp3Dom) pomPlugin.getConfiguration() ) );
-                }
-            }
-        }
-        pomPlugins.addAll( lifecyclePlugins );
-        target.getBuild().setPlugins( pomPlugins );
-
-    }
-
-                DomainModel dm = (DomainModel) mavenParents.get( 0 );
+                DomainModel dm = mavenParents.get( 0 );
-            DomainModel dm = (DomainModel) domain;
+            DomainModel dm = domain;
