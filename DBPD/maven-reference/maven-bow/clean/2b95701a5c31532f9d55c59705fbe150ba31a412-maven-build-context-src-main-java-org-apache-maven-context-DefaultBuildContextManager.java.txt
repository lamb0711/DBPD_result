Rearranging project-builder caching so it's done externally and available for use in the model-lineage builder and during artifact resolution as well.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@509692 13f79535-47bb-0310-9956-ffa450edef68

-import org.codehaus.plexus.context.ContextException;
-import org.codehaus.plexus.personality.plexus.lifecycle.phase.Contextualizable;
-    implements BuildContextManager, Contextualizable
+    implements BuildContextManager
-    private Context context;
+    private InheritableThreadLocal tl = new InheritableThreadLocal();
+    /**
+     * @deprecated Using ThreadLocal now, not container context, for thread safety.
+     */
-        this.context = context;
+        // obsolete, does nothing...
-        clearContextContainerMap();
+        tl.set( null );
-        if ( !create && contextMap == null )
+        if ( contextMap == null && !create )
-            this.context.put( BUILD_CONTEXT_MAP_KEY, ((DefaultBuildContext)context).getContextMap() );
+            tl.set( ((DefaultBuildContext)context).getContextMap() );
-        Map containerMap = null;
+        Map containerMap = (Map) tl.get();
-        if ( context.contains( BUILD_CONTEXT_MAP_KEY ) )
-        {
-            try
-            {
-                containerMap = (Map) context.get( BUILD_CONTEXT_MAP_KEY );
-            }
-            catch ( ContextException e )
-            {
-                throw new IllegalStateException( "Failed to retrieve BuildAdvisor "
-                                + "serialization map from context, though the context claims it exists. Error: "
-                                + e.getMessage() );
-            }
-        }
-        else if ( create )
+        if ( containerMap == null && create )
-            context.put( BUILD_CONTEXT_MAP_KEY, containerMap );
+            tl.set( containerMap );
-     * Retrieve the container context for storing the BuildContext data.
+     * @deprecated Using ThreadLocal now, not container context, for thread safety.
-    public void contextualize( Context context )
-        throws ContextException
-    {
-        this.context = context;
-    }
-
-        Context oldContext = this.context;
-        this.context = context;
-        
-        return oldContext;
+        // obsolete, does nothing...
+        return context;
