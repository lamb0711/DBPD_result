*** empty log message ***


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163260 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Date;
+
+
+    // ----------------------------------------------------------------------
+    // Reporting / Logging
+    // ----------------------------------------------------------------------
+
+    protected void logError( MavenExecutionResponse r )
+    {
+        line();
+
+        getLogger().error( "BUILD ERROR" );
+
+        line();
+
+        getLogger().error( "Cause: ", r.getException() );
+
+        line();
+
+        stats( r.getStart(), r.getFinish() );
+
+        line();
+    }
+
+    protected void logFailure( MavenExecutionResponse r )
+    {
+        line();
+
+        getLogger().info( "BUILD FAILURE" );
+
+        line();
+
+        getLogger().info( "Reason: " + r.getFailureResponse().shortMessage() );
+
+        line();
+
+        getLogger().info( r.getFailureResponse().longMessage() );
+
+        line();
+
+        stats( r.getStart(), r.getFinish() );
+
+        line();
+    }
+
+    protected void logSuccess( MavenExecutionResponse r )
+    {
+        line();
+
+        getLogger().info( "BUILD SUCCESSFUL" );
+
+        line();
+
+        stats( r.getStart(), r.getFinish() );
+
+        line();
+    }
+
+    protected void stats( Date start, Date finish )
+    {
+        long time = finish.getTime() - start.getTime();
+
+        getLogger().info( "Total time: " + formatTime( time ) );
+
+        getLogger().info( "Finished at: " + finish );
+
+        final long mb = 1024 * 1024;
+
+        System.gc();
+
+        Runtime r = Runtime.getRuntime();
+
+        getLogger().info( "Final Memory: " + ( ( r.totalMemory() - r.freeMemory() ) / mb ) + "M/" + ( r.totalMemory() / mb ) + "M" );
+    }
+
+    protected void line()
+    {
+        getLogger().info( "----------------------------------------------------------------------------" );
+    }
+
+    protected static String formatTime( long ms )
+    {
+        long secs = ms / 1000;
+
+        long min = secs / 60;
+
+        secs = secs % 60;
+
+        if ( min > 0 )
+        {
+            return min + " minutes " + secs + " seconds";
+        }
+        else
+        {
+            return secs + " seconds";
+        }
+    }
