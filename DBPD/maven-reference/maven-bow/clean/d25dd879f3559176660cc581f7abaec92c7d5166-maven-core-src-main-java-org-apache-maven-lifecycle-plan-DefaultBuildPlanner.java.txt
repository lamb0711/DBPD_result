OPEN - issue MNG-3027: forked execution does not get configuration from the POM 
http://jira.codehaus.org/browse/MNG-3027

Adding reporting section to sources of plugin configuration when mojos are forked from a report mojo. Also, improving detection/addition of report mojos from a plugin, when no report-set is defined.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@543308 13f79535-47bb-0310-9956-ffa450edef68

- * 
+ *
- * 
+ *
-                MojoBinding binding = mojoBindingFactory.parseMojoBinding( task, project, true );
+                logger.warn( "Assuming that mojo: \'" + task + "\' does NOT need configuration from the <reporting /> section of the POM." );
+
+                MojoBinding binding = mojoBindingFactory.parseMojoBinding( task, project, true, false );
-        findForkModifiers( mojoBinding, pluginDescriptor, plan, project );
+        findForkModifiers( mojoBinding, pluginDescriptor, plan, project, false );
-                            findForkModifiers( reportBinding, pd, plan, project );
+                            findForkModifiers( reportBinding, pd, plan, project, true );
-                                    final BuildPlan plan, final MavenProject project )
+                                    final BuildPlan plan, final MavenProject project, final boolean includeReportConfig )
-            recurseSingleMojoFork( mojoBinding, pluginDescriptor, plan, project );
+            recurseSingleMojoFork( mojoBinding, pluginDescriptor, plan, project, includeReportConfig );
-            recursePhaseMojoFork( mojoBinding, pluginDescriptor, plan, project );
+            recursePhaseMojoFork( mojoBinding, pluginDescriptor, plan, project, includeReportConfig );
-     * 
+     *
-                                       final BuildPlan plan, final MavenProject project )
+                                       final BuildPlan plan, final MavenProject project,
+                                       final boolean includeReportConfig )
-                    lifecycleBindingManager.getPluginLifecycleOverlay( pluginDescriptor, executeLifecycle, project );
+                    lifecycleBindingManager.getPluginLifecycleOverlay( pluginDescriptor, executeLifecycle, project, includeReportConfig );
-                                        final BuildPlan plan, final MavenProject project )
+                                        final BuildPlan plan, final MavenProject project, final boolean includeReportConfig )
-                                                  pluginDescriptor.getVersion(), executeGoal, project );
+                                                  pluginDescriptor.getVersion(), executeGoal, project, includeReportConfig );
