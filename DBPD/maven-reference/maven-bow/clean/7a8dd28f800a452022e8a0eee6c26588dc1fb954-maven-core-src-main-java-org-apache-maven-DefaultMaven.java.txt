reformat before patch

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@567948 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.execution.*;
+import org.apache.maven.execution.BuildFailure;
+import org.apache.maven.execution.DefaultMavenExecutionResult;
+import org.apache.maven.execution.ExecutionBuildContext;
+import org.apache.maven.execution.MavenExecutionRequest;
+import org.apache.maven.execution.MavenExecutionResult;
+import org.apache.maven.execution.MavenSession;
+import org.apache.maven.execution.ReactorManager;
+import org.apache.maven.execution.RuntimeInformation;
+import org.apache.maven.execution.SessionContext;
-import java.util.*;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Date;
+import java.util.Iterator;
+import java.util.List;
+import java.util.TimeZone;
-    
+
-        
+
-        
+
-                return new DefaultMavenExecutionResult( Collections.singletonList( new MavenExecutionException( "Some builds failed" ) ) );
+                return new DefaultMavenExecutionResult(
+                    Collections.singletonList( new MavenExecutionException( "Some builds failed" ) ) );
-     * other Maven components (including custom components that need more information about the 
+     * other Maven components (including custom components that need more information about the
-        
+
-        
+
-    private void logErrors( ReactorManager rm,
-                            boolean showErrors )
+    private void logErrors( ReactorManager rm, boolean showErrors )
-    private MavenExecutionResult doExecute( MavenExecutionRequest request,
-                                            EventDispatcher dispatcher )
+    private MavenExecutionResult doExecute( MavenExecutionRequest request, EventDispatcher dispatcher )
-        {                        
+        {
-    private List getProjects( MavenExecutionRequest request,
-                              ProfileManager globalProfileManager )
+    private List getProjects( MavenExecutionRequest request, ProfileManager globalProfileManager )
-        
+
-        
+
-        
+
-    private void logReactorSummaryLine( String name,
-                                        String status )
+    private void logReactorSummaryLine( String name, String status )
-    private void logReactorSummaryLine( String name,
-                                        String status,
-                                        long time )
+    private void logReactorSummaryLine( String name, String status, long time )
-    private List collectProjects( List files,
-                                  ArtifactRepository localRepository,
-                                  boolean recursive,
-                                  Settings settings,
-                                  ProfileManager globalProfileManager,
-                                  boolean isRoot )
+    private List collectProjects( List files, ArtifactRepository localRepository, boolean recursive, Settings settings,
+                                  ProfileManager globalProfileManager, boolean isRoot )
-                        getLogger().warn( "Empty module detected. Please check you don't have any empty module definitions in your POM." );
+                        getLogger().warn(
+                            "Empty module detected. Please check you don't have any empty module definitions in your POM." );
-                    
+
-    public MavenProject getProject( File pom,
-                                    ArtifactRepository localRepository,
-                                    Settings settings,
+    public MavenProject getProject( File pom, ArtifactRepository localRepository, Settings settings,
-    protected MavenSession createSession( MavenExecutionRequest request,
-                                          ReactorManager rpm,
+    protected MavenSession createSession( MavenExecutionRequest request, ReactorManager rpm,
-    {        
+    {
-        
+
-        
+
-    protected void logError( Exception e,
-                             boolean showErrors )
+    protected void logError( Exception e, boolean showErrors )
-    protected void logFailure( BuildFailureException e,
-                               boolean showErrors )
+    protected void logFailure( BuildFailureException e, boolean showErrors )
-    private void logTrace( Throwable t,
-                           boolean showErrors )
+    private void logTrace( Throwable t, boolean showErrors )
