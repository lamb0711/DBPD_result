o aligning the plugin parameter expression evaluator with the new test code


git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@760975 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.project.path.PathTranslator;
-import org.codehaus.plexus.logging.Logger;
- * @version $Id$
- * @todo belong in MavenSession, so it only gets created once?
-    private final PathTranslator pathTranslator;
+    private MavenSession session;
-    private final MavenSession context;
+    private MojoExecution mojoExecution;
-    private final Logger logger;
+    private MavenProject project;
-    private final MojoExecution mojoExecution;
+    private String basedir;
-    private final MavenProject project;
-
-    private final String basedir;
-
-    private final Properties properties;
-
-    public PluginParameterExpressionEvaluator( MavenSession context,
-                                               MojoExecution mojoExecution,
-                                               PathTranslator pathTranslator,
-                                               Logger logger,
-                                               Properties properties )
+    private Properties properties;    
+    
+    public PluginParameterExpressionEvaluator( MavenSession session, MojoExecution mojoExecution )
-        this.context = context;
+        this.session = session;
-        this.pathTranslator = pathTranslator;
-        this.logger = logger;
-        this.properties = properties;
-        project = context.getCurrentProject();
+        this.properties = session.getExecutionProperties();
+        project = session.getCurrentProject();
-        if ( ( basedir == null ) && ( context != null ) )
+        if ( ( basedir == null ) && ( session != null ) )
-            basedir = context.getExecutionRootDirectory();
-        }
-
-        if ( basedir == null )
-        {
-            basedir = System.getProperty( "user.dir" );
-        }
-
-        this.basedir = basedir;
-    }
-
-    /**
-     * @deprecated Use {@link PluginParameterExpressionEvaluator#PluginParameterExpressionEvaluator(MavenSession, MojoExecution, PathTranslator, LifecycleExecutionContext, Logger, Properties)}
-     * instead.
-     */
-    @Deprecated
-    public PluginParameterExpressionEvaluator( MavenSession context,
-                                               MojoExecution mojoExecution,
-                                               PathTranslator pathTranslator,
-                                               Logger logger,
-                                               MavenProject project,
-                                               Properties properties )
-    {
-        this.context = context;
-        this.mojoExecution = mojoExecution;
-        this.pathTranslator = pathTranslator;
-        this.logger = logger;
-        this.properties = properties;
-
-        this.project = project;
-
-        String basedir = null;
-
-        if ( project != null )
-        {
-            File projectFile = project.getFile();
-
-            // this should always be the case for non-super POM instances...
-            if ( projectFile != null )
-            {
-                basedir = projectFile.getParentFile().getAbsolutePath();
-            }
+            basedir = session.getExecutionRootDirectory();
-            value = context.getLocalRepository();
+            value = session.getLocalRepository();
-            value = context;
+            value = session;
-            value = context.getSortedProjects();
+            value = session.getSortedProjects();
-            value = context.getSettings();
+            value = session.getSettings();
-                    value = ReflectionValueExtractor.evaluate( pathExpression, context.getSettings() );
+                    value = ReflectionValueExtractor.evaluate( pathExpression, session.getSettings() );
-                    value = ReflectionValueExtractor.evaluate( expression.substring( 1 ), context.getSettings() );
+                    value = ReflectionValueExtractor.evaluate( expression.substring( 1 ), session.getSettings() );
-            else
-            {
-                logger.error( "Got expression '" + expression + "' that was not recognised" );
-            }
-        File basedir;
-
-        if ( ( project != null ) && ( project.getFile() != null ) )
-        {
-            basedir = project.getFile().getParentFile();
-        }
-        else if ( ( context != null ) && ( context.getExecutionRootDirectory() != null ) )
-        {
-            basedir = new File( context.getExecutionRootDirectory() ).getAbsoluteFile();
-        }
-        else
-        {
-            basedir = new File( "." ).getAbsoluteFile().getParentFile();
-        }
-
-        return new File( pathTranslator.alignToBaseDirectory( file.getPath(), basedir ) );
+        return file;
-
