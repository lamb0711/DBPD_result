Final pass on cleaning up the mojo api...collapsed MavenPluginDescriptor and PluginDescriptor in the same way as MavenMojoDescriptor/MojoDescriptor had been; eliminated the need for plugin.descriptor.Dependency and MavenPluginDependency (using ComponentDependencies instead); adjusted the MojoExtractors (name?) to return Lists instead of Sets; added duplicate checking to a new addMojo(MojoDescriptor) method on PluginDescriptor, so we catch it on all sides; changed the Generators to use execute(outputDirectory, pluginDescriptor) rather than the myriad pluginDescriptor-derived values; added an IT for checking that the build for a plugin will fail if multiple mojos are detected with the same goal; and, added a special case to PluginDescriptor.getGoalPrefixFromArtifactId() to handle maven-plugin-plugin. That should be about it. I'm not sure that I've gotten the IT for that failure test added to svn yet, so that may follow.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168481 13f79535-47bb-0310-9956-ffa450edef68

-import com.thoughtworks.qdox.JavaDocBuilder;
-import com.thoughtworks.qdox.model.DocletTag;
-import com.thoughtworks.qdox.model.JavaClass;
-import com.thoughtworks.qdox.model.JavaField;
-import com.thoughtworks.qdox.model.JavaSource;
-import org.apache.maven.tools.plugin.PluginToolsException;
+import com.thoughtworks.qdox.JavaDocBuilder;
+import com.thoughtworks.qdox.model.DocletTag;
+import com.thoughtworks.qdox.model.JavaClass;
+import com.thoughtworks.qdox.model.JavaField;
+import com.thoughtworks.qdox.model.JavaSource;
+
-import java.util.Map.Entry;
+import java.util.Map.Entry;
-    public Set execute( MavenProject project, PluginDescriptor pluginDescriptor )
+    public List execute( MavenProject project, PluginDescriptor pluginDescriptor )
-        System.out.println( "Project basedir: " + basedir );
-
-        System.out.println( "Source directory for java mojo extraction: " + project.getCompileSourceRoots() );
-
-        Set descriptors = new HashSet();
+        List descriptors = new ArrayList();
-                for ( int j = 0; j < parameters.size(); j++ )
+                if ( parameters != null )
-                    validateParameter( (Parameter) parameters.get( j ), j );
+                    for ( int j = 0; j < parameters.size(); j++ )
+                    {
+                        validateParameter( (Parameter) parameters.get( j ), j );
+                    }
