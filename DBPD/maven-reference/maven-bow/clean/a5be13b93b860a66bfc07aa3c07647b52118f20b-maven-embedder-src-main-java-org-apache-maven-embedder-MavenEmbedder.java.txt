o removing many old embedder tests that are performing what is now done far better by the underlying components
o remove ties to the Configuration class in the populator which means it can be moved back to the core


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@794919 13f79535-47bb-0310-9956-ffa450edef68

-    private MavenExecutionRequest request;
+    //private MavenExecutionRequest request;
+    /*
+    */
+    /*
+    */
-    // Project
-    // ----------------------------------------------------------------------
-
-    public MavenProject readProject( File mavenProject )
-        throws ProjectBuildingException, MavenExecutionException
-    {
-        return readProject( mavenProject, request );
-    }
-
-    private MavenProject readProject( File mavenProject, MavenExecutionRequest request )
-        throws ProjectBuildingException, MissingModuleException
-    {
-        getLogger().debug( "Building MavenProject instance: " + mavenProject );
-
-        return projectBuilder.build( mavenProject, request.getProjectBuildingRequest() );
-    }
-
-    /**
-     * This method is used to grab the list of dependencies that belong to a project so that a UI
-     * can be populated. For example, a list of libraries that are used by an Eclipse, Netbeans, or
-     * IntelliJ project.
-     */
-    
-    // currently in m2eclipse each project is read read a single project for dependencies
-    // Project
-    // Exceptions
-    // explicit for exceptions where coordinate are involved.
-    // m2eclipse is not using the topological sorting at all because it keeps track itself.
-    
-    public MavenExecutionResult readProjectWithDependencies( MavenExecutionRequest request )
-    {
-        MavenExecutionResult result = new DefaultMavenExecutionResult();
-
-        try
-        {
-            request = populator.populateDefaults( request, configuration );
-        }
-        catch ( MavenEmbedderException e )
-        {
-            return result.addException( e );
-        }
-
-        try
-        {
-            MavenProjectBuildingResult projectBuildingResult = projectBuilder.buildProjectWithDependencies( request.getPom(), request.getProjectBuildingRequest() );
-            
-            result.setProject( projectBuildingResult.getProject() );
-
-            result.setArtifactResolutionResult( projectBuildingResult.getArtifactResolutionResult() );
-
-            return result;
-        }
-        catch ( ProjectBuildingException e )
-        {
-            return result.addException( e );
-        }
-    }
-
-    // ----------------------------------------------------------------------
-            request = new DefaultMavenExecutionRequest();
-
-            populator.populateDefaults( request, configuration );
+            //request = new DefaultMavenExecutionRequest();
+            //
+            //populator.populateDefaults( request, configuration );
-    // ----------------------------------------------------------------------
-    // Start of new embedder API
-    // ----------------------------------------------------------------------
-
-    public boolean isOffline( MavenExecutionRequest request )
-        throws MavenEmbedderException
-    {
-        request = populator.populateDefaults( request, configuration );
-
-        return request.isOffline();
-    }
-
-                request = populator.populateDefaults( request, configuration );
+                request = populator.populateDefaults( request );
