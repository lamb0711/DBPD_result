gone back to test dependencies not being transitive at all, as reversed in rev1.3 of ProjectClasspathTest. This enables the execution of "m2 test" not to pull in all and sundry test dependencies, eg from wagon. Find a valid use case before re-instating, and look into alternatives for the download issues.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163783 13f79535-47bb-0310-9956-ffa450edef68

-    public Artifact createArtifactWithClassifier( String groupId, String artifactId, String version, String scope, String type, 
-                                    String classifier )
+    public Artifact createArtifactWithClassifier( String groupId, String artifactId, String version, String scope,
+                                                  String type, String classifier )
-        return createArtifact(groupId, artifactId, version, scope, type, null, inheritedScope);
+        return createArtifact( groupId, artifactId, version, scope, type, null, inheritedScope );
-    
+
-        // if this artifact is test, and the dependency is test, don't transitively create
-        if ( Artifact.SCOPE_TEST.equals( inheritedScope ) && Artifact.SCOPE_TEST.equals( scope ) )
+        // re-instate this if test deps are propogated
+//        if ( Artifact.SCOPE_TEST.equals( inheritedScope ) && Artifact.SCOPE_TEST.equals( scope ) )
+        if ( Artifact.SCOPE_TEST.equals( inheritedScope ) )
-        if ( Artifact.SCOPE_TEST.equals( scope ) || Artifact.SCOPE_TEST.equals( inheritedScope ) )
+        // re-instate this if test deps are propogated
+//        if ( Artifact.SCOPE_TEST.equals( scope ) || Artifact.SCOPE_TEST.equals( inheritedScope ) )
+        if ( Artifact.SCOPE_TEST.equals( scope ) )
