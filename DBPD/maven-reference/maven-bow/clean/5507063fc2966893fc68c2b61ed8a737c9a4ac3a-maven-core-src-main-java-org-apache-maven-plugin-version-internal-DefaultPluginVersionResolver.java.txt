o Aligned version resolver with prefix resolver and made it support a model as additional input

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@927604 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.List;
+import org.apache.maven.model.Build;
+import org.apache.maven.model.Plugin;
+        PluginVersionResult result = resolveFromProject( request );
+
+        if ( result == null )
+        {
+            result = resolveFromRepository( request );
+
+            if ( StringUtils.isEmpty( result.getVersion() ) )
+            {
+                throw new PluginVersionResolutionException( request.getGroupId(), request.getArtifactId(),
+                                                            request.getLocalRepository(),
+                                                            request.getRemoteRepositories(),
+                                                            "Plugin not found in any plugin repository" );
+            }
+            else if ( logger.isDebugEnabled() )
+            {
+                logger.debug( "Resolved plugin version for " + request.getGroupId() + ":" + request.getArtifactId()
+                    + " to " + result.getVersion() + " from repository "
+                    + ( result.getRepository() != null ? result.getRepository().getId() : "null" ) );
+            }
+        }
+        else if ( logger.isDebugEnabled() )
+        {
+            logger.debug( "Resolved plugin version for " + request.getGroupId() + ":" + request.getArtifactId()
+                + " to " + result.getVersion() + " from POM " + request.getPom() );
+        }
+
+        return result;
+    }
+
+    private PluginVersionResult resolveFromRepository( PluginVersionRequest request )
+        throws PluginVersionResolutionException
+    {
-        if ( logger.isDebugEnabled() )
-        {
-            logger.debug( "Resolved plugin version for " + request.getGroupId() + ":" + request.getArtifactId()
-                + " to " + result.getVersion() + " from repository "
-                + ( result.getRepository() != null ? result.getRepository().getId() : "null" ) );
-        }
-
+    private PluginVersionResult resolveFromProject( PluginVersionRequest request )
+    {
+        PluginVersionResult result = null;
+
+        if ( request.getPom() != null && request.getPom().getBuild() != null )
+        {
+            Build build = request.getPom().getBuild();
+
+            result = resolveFromProject( request, build.getPlugins() );
+
+            if ( result == null && build.getPluginManagement() != null )
+            {
+                result = resolveFromProject( request, build.getPluginManagement().getPlugins() );
+            }
+        }
+
+        return result;
+    }
+
+    private PluginVersionResult resolveFromProject( PluginVersionRequest request, List<Plugin> plugins )
+    {
+        for ( Plugin plugin : plugins )
+        {
+            if ( request.getGroupId().equals( plugin.getGroupId() )
+                && request.getArtifactId().equals( plugin.getArtifactId() ) )
+            {
+                if ( plugin.getVersion() != null )
+                {
+                    return new DefaultPluginVersionResult( plugin.getVersion() );
+                }
+                else
+                {
+                    return null;
+                }
+            }
+        }
+        return null;
+    }
+
