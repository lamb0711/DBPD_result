[MNG-4554] [regression] plugin updates are requested on every build regardless of policies

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@905424 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+        logger.debug( "Resolving plugin prefix " + request.getPrefix() + " from " + request.getPluginGroups() );
+
+            else if ( logger.isDebugEnabled() )
+            {
+                logger.debug( "Resolved plugin prefix " + request.getPrefix() + " to " + result.getGroupId() + ":"
+                    + result.getArtifactId() + " from repository "
+                    + ( result.getRepository() != null ? result.getRepository().getId() : "null" ) );
+            }
+        }
+        else if ( logger.isDebugEnabled() )
+        {
+            logger.debug( "Resolved plugin prefix " + request.getPrefix() + " to " + result.getGroupId() + ":"
+                + result.getArtifactId() + " from POM " + request.getPom() );
-            String localPath =
-                pluginGroup.replace( '.', '/' ) + "/" + "maven-metadata-" + localRepository.getId() + ".xml";
+            String localPath = getLocalMetadataPath( pluginGroup, localRepository );
-            File destination = new File( localRepository.getBasedir(), localPath );
+            File groupMetadataFile = new File( localRepository.getBasedir(), localPath );
-            PluginPrefixResult result = resolveFromRepository( request, pluginGroup, destination, localRepository );
+            PluginPrefixResult result =
+                resolveFromRepository( request, pluginGroup, groupMetadataFile, localRepository );
+        List<ArtifactRepository> recheck = new ArrayList<ArtifactRepository>();
+
-                String localPath =
-                    pluginGroup.replace( '.', '/' ) + "/" + "maven-metadata-" + repository.getId() + ".xml";
+                String localPath = getLocalMetadataPath( pluginGroup, repository );
-                File destination = new File( localRepository.getBasedir(), localPath );
+                File groupMetadataFile = new File( localRepository.getBasedir(), localPath );
-                if ( !request.isOffline() )
+                if ( !request.isOffline() && ( !groupMetadataFile.exists() || request.isForceUpdate() ) )
-                    String remotePath = pluginGroup.replace( '.', '/' ) + "/" + "maven-metadata.xml";
+                    String remotePath = getRemoteMetadataPath( pluginGroup, repository );
-                        repositorySystem.retrieve( repository, destination, remotePath, request.getTransferListener() );
+                        repositorySystem.retrieve( repository, groupMetadataFile, remotePath,
+                                                   request.getTransferListener() );
+                else if ( !request.isOffline() && !request.isForceUpdate() )
+                {
+                    recheck.add( repository );
+                }
-                PluginPrefixResult result = resolveFromRepository( request, pluginGroup, destination, repository );
+                PluginPrefixResult result = resolveFromRepository( request, pluginGroup, groupMetadataFile, repository );
+
+                if ( result != null )
+                {
+                    return result;
+                }
+            }
+        }
+
+        // Retry the remote repositories for which we previously only consulted the possibly outdated local cache.
+        //
+        for ( String pluginGroup : request.getPluginGroups() )
+        {
+            for ( ArtifactRepository repository : recheck )
+            {
+                String localPath = getLocalMetadataPath( pluginGroup, repository );
+
+                File groupMetadataFile = new File( localRepository.getBasedir(), localPath );
+
+                String remotePath = getRemoteMetadataPath( pluginGroup, repository );
+
+                try
+                {
+                    repositorySystem.retrieve( repository, groupMetadataFile, remotePath, request.getTransferListener() );
+                }
+                catch ( ArtifactTransferFailedException e )
+                {
+                    if ( logger.isDebugEnabled() )
+                    {
+                        logger.warn( "Failed to retrieve " + remotePath + ": " + e.getMessage(), e );
+                    }
+                    else
+                    {
+                        logger.warn( "Failed to retrieve " + remotePath + ": " + e.getMessage() );
+                    }
+                }
+                catch ( ArtifactDoesNotExistException e )
+                {
+                    continue;
+                }
+
+                PluginPrefixResult result = resolveFromRepository( request, pluginGroup, groupMetadataFile, repository );
+    private String getLocalMetadataPath( String groupId, ArtifactRepository repository )
+    {
+        return groupId.replace( '.', '/' ) + "/" + "maven-metadata-" + repository.getId() + ".xml";
+    }
+
+    private String getRemoteMetadataPath( String groupId, ArtifactRepository repository )
+    {
+        return groupId.replace( '.', '/' ) + "/" + "maven-metadata.xml";
+    }
+
