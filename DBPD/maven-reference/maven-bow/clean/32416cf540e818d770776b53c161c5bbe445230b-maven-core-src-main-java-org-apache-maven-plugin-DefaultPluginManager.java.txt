check super classes for fields to set


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163655 13f79535-47bb-0310-9956-ffa450edef68

-            boolean newMojoTechnique = false;
-            try
-            {
-                plugin.getClass().getDeclaredMethod( "execute", new Class[0] );
-                newMojoTechnique = true;
-            }
-            catch ( NoSuchMethodException e )
-            {
-                // intentionally ignored
-            }
+            boolean newMojoTechnique = checkMojoTechnique( plugin.getClass() );
+    /**
+     * @deprecated
+     */
+    private static boolean checkMojoTechnique( Class aClass )
+    {
+        boolean newMojoTechnique = false;
+        try
+        {
+            aClass.getDeclaredMethod( "execute", new Class[0] );
+            newMojoTechnique = true;
+        }
+        catch ( NoSuchMethodException e )
+        {
+            // intentionally ignored
+
+            Class superclass = aClass.getSuperclass();
+            if ( superclass != AbstractPlugin.class )
+            {
+                return checkMojoTechnique( superclass );
+            }
+        }
+        return newMojoTechnique;
+    }
+
-        // TODO: we don't have converters, so something things that -are- strings are not configured properly (eg String -> File from an expression)
+        // TODO: we don't have converters, so "primitives" that -are- strings are not configured properly (eg String -> File from an expression)
-                Field f = clazz.getDeclaredField( key );
+                Field f = findPluginField( clazz, key );
-            catch ( NoSuchFieldException e1 )
+            catch ( NoSuchFieldException e )
-            catch ( IllegalAccessException e11 )
+            catch ( IllegalAccessException e )
+    private Field findPluginField( Class clazz, String key )
+        throws NoSuchFieldException
+    {
+        try
+        {
+            return clazz.getDeclaredField( key );
+        }
+        catch ( NoSuchFieldException e )
+        {
+            Class superclass = clazz.getSuperclass();
+            if ( superclass != Object.class )
+            {
+                return findPluginField( superclass, key );
+            }
+            else
+            {
+                throw e;
+            }
+        }
+    }
+
