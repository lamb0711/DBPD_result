Fixing it0103, which in this case had to do with when to use the relativePath to lookup the parent model from the project workspace.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@644767 13f79535-47bb-0310-9956-ffa450edef68

-                                           boolean validProfilesXmlLocation )
+                                           boolean isReactorProject )
-            current = new ModelAndFile( readModel( pom ), pom, validProfilesXmlLocation );
+            current = new ModelAndFile( readModel( pom ), pom, isReactorProject );
-                                        allowStubs );
+                                        allowStubs,
+                                        isReactorProject );
-                                            boolean allowStubs )
+                                            boolean allowStubs,
+                                            boolean isReactorProject )
-                                    allowStubs );
+                                    allowStubs,
+                                    isReactorProject);
-                                        allowStubs );
+                                        allowStubs,
+                                        isReactorProject );
-        File projectDir = pomFile == null ? null : pomFile.getParentFile();
-
-                                               projectDir,
+                                               pomFile,
+     * @param childIsReactorProject
-                                           boolean allowStubs )
+                                           boolean allowStubs,
+                                           boolean childIsReactorProject )
-            getLogger().debug( "Checking cache for parent model-and-file instance: " + key );
-            result = projectWorkspace.getModelAndFile( modelParent.getGroupId(), modelParent.getArtifactId(), modelParent.getVersion() );
+            File parentPomFile = null;
+
+            if ( childIsReactorProject && modelPomFile != null )
+            {
+                getLogger().debug( "Attempting to locate parent model using relativePath and local filesystem; child is a reactor project." );
+
+                // if the child isn't a reactor project, don't resolve the parent from the local filesystem...use the repository.
+                String relativePath = modelParent.getRelativePath();
+                File modelDir = modelPomFile.getParentFile();
+
+                parentPomFile = new File( modelDir, relativePath );
+
+                if ( parentPomFile.isDirectory() )
+                {
+                    parentPomFile = new File( parentPomFile, "pom.xml" );
+                }
+
+                getLogger().debug( "Checking cache for parent model-and-file instance: " + key + " using file: " + parentPomFile );
+
+                result = projectWorkspace.getModelAndFile( parentPomFile );
+                if ( result != null && !parentModelMatches( modelParent, result.getModel() ) )
+                {
+                    result = null;
+                }
+            }
+
+            if ( result == null )
+            {
+                getLogger().debug( "Checking cache for parent model-and-file instance: " + key + " using project groupId:artifactId:version." );
+
+                result = projectWorkspace.getModelAndFile( modelParent.getGroupId(), modelParent.getArtifactId(), modelParent.getVersion() );
+            }
-            File parentPomFile = null;
-
-            if ( ( modelPomFile != null ) )
+            if ( parentPomFile != null && parentPomFile.exists() )
-                parentPomFile = resolveParentWithRelativePath( modelParent, modelPomFile );
+                Model parentModel = readModel( parentPomFile );
+                if ( !parentModelMatches( modelParent, parentModel ) )
+                {
+                    parentPomFile = null;
+                }
+    private boolean parentModelMatches( Parent modelParent, Model parentModel )
+    {
+
+        boolean groupsMatch = ( parentModel.getGroupId() == null )
+                              || parentModel.getGroupId().equals( modelParent.getGroupId() );
+        boolean versionsMatch = ( parentModel.getVersion() == null )
+                                || parentModel.getVersion().equals( modelParent.getVersion() );
+
+        if ( groupsMatch && !versionsMatch
+             && parentModel.getArtifactId().equals( modelParent.getArtifactId() ) )
+        {
+            return true;
+        }
+
+        return false;
+    }
+
-    private File resolveParentWithRelativePath( Parent modelParent,
-                                                File modelPomFile )
-        throws ProjectBuildingException
-    {
-        String relativePath = modelParent.getRelativePath();
-        File modelDir = modelPomFile.getParentFile();
-
-        File parentPomFile = new File( modelDir, relativePath );
-
-        if ( parentPomFile.isDirectory() )
-        {
-//            getLogger().debug( "Parent relative-path is a directory; assuming \'pom.xml\' file exists within." );
-            parentPomFile = new File( parentPomFile, "pom.xml" );
-        }
-
-//        getLogger().debug( "Looking for parent: " + modelParent.getId() + " in: " + parentPomFile );
-
-        if ( parentPomFile.exists() )
-        {
-            Model parentModel = readModel( parentPomFile );
-
-            boolean groupsMatch = ( parentModel.getGroupId() == null )
-                                  || parentModel.getGroupId().equals( modelParent.getGroupId() );
-            boolean versionsMatch = ( parentModel.getVersion() == null )
-                                    || parentModel.getVersion().equals( modelParent.getVersion() );
-
-            if ( groupsMatch && versionsMatch
-                 && parentModel.getArtifactId().equals( modelParent.getArtifactId() ) )
-            {
-                return parentPomFile;
-            }
-        }
-
-        return null;
-    }
-
