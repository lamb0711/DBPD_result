*** empty log message ***


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163260 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.execution.initialize.MavenInitializingExecutionRequest;
+import java.util.Date;
-        // Create the execution request/response
+        // We will ultimately not require a flag to indicate the reactor as
+        // we should take this from the execution context i.e. what the type
+        // is stated as in the POM.
-        if ( commandLine.hasOption( CLIManager.REACTOR ) )
+        File projectFile = new File( userDir, POMv4 );
+
+        if ( projectFile.exists() )
-            String includes = System.getProperty( "maven.reactor.includes", "**/" + POMv4 );
+            if ( commandLine.hasOption( CLIManager.REACTOR ) )
+            {
+                String includes = System.getProperty( "maven.reactor.includes", "**/" + POMv4 );
-            String excludes = System.getProperty( "maven.reactor.excludes", POMv4 );
+                String excludes = System.getProperty( "maven.reactor.excludes", POMv4 );
-            request = new MavenReactorExecutionRequest( localRepository,
-                                                        commandLine.getArgList(),
-                                                        includes,
-                                                        excludes,
-                                                        userDir );
+                request = new MavenReactorExecutionRequest( localRepository, commandLine.getArgList(), includes, excludes, userDir );
+            }
+            else
+            {
+                request = new MavenProjectExecutionRequest( localRepository, commandLine.getArgList(), projectFile );
+            }
-            File projectFile = new File( userDir, POMv4 );
-
-            if ( !projectFile.exists() )
-            {
-                    System.err.println( "Could not find a project descriptor." );
-
-                    return 1;
-            }
-
-            request = new MavenProjectExecutionRequest( localRepository,
-                                                        commandLine.getArgList(),
-                                                        projectFile );
+            request = new MavenInitializingExecutionRequest( localRepository, commandLine.getArgList() );
-    protected static ArtifactRepository getLocalRepository( Properties mavenProperties, File mavenHomeLocal )
+    protected static ArtifactRepository getLocalRepository( Properties mavenProperties, File userConfigurationDirectory )
-            localRepository = new File( mavenHomeLocal, MavenConstants.MAVEN_REPOSITORY ).getAbsolutePath();
+            localRepository = new File( userConfigurationDirectory, MavenConstants.MAVEN_REPOSITORY ).getAbsolutePath();
