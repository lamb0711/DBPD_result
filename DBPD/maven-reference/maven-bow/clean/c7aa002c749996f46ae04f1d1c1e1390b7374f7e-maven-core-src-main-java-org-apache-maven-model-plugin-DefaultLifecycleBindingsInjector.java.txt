Merge remote-tracking branch 'remotes/origin/MNG-6562'

-import java.util.HashMap;
-            merger.merge( model, lifecycleModel, problems );
+            merger.merge( model, lifecycleModel );
-        private static final String NO_VERSION_PLUGINS = "no-version-plugins";
-        public void merge( Model target, Model source, ModelProblemCollector problems )
+        public void merge( Model target, Model source )
-            Map<Object, Object> context = new HashMap<Object, Object>();
-            context.put( PLUGIN_MANAGEMENT, target.getBuild().getPluginManagement() );
+            Map<Object, Object> context =
+                Collections.<Object, Object>singletonMap( PLUGIN_MANAGEMENT, target.getBuild().getPluginManagement() );
-
-            @SuppressWarnings( "unchecked" )
-            Collection<Plugin> defaultVersionPlugins = (Collection<Plugin>) context.get( NO_VERSION_PLUGINS );
-            if ( defaultVersionPlugins != null )
-            {
-                List<String> plugins = new ArrayList<>( defaultVersionPlugins.size() );
-                for ( Plugin p : defaultVersionPlugins )
-                {
-                    plugins.add( p.getArtifactId() );
-                }
-
-                problems.add( new ModelProblemCollectorRequest( Severity.WARNING, Version.BASE )
-                              .setMessage( "Version not locked for default bindings plugins " + plugins
-                                           + ", you should define versions in pluginManagement section of your "
-                                           + "pom.xml or parent" )
-                              .setLocation( target.getLocation( "packaging" ) ) );
-            }
-                            Plugin addedPlugin = // remove plugin only if managedPlugin defines version
-                                ( managedPlugin.getVersion() == null ) ? added.get( key ) : added.remove( key );
+                            Plugin addedPlugin = added.get( key );
-
-                    if ( !added.isEmpty() )
-                    {
-                        // some plugins added with default version from bindings
-                        context.put( NO_VERSION_PLUGINS, added.values() );
-                    }
