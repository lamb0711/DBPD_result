Formatting

-public abstract class AbstractCommandLineConverter<T>
-    implements CommandLineConverter<T>
-{
-    public T convert( Iterable<String> args )
-        throws CommandLineArgumentException
-    {
-        CommandLineParser parser = new CommandLineParser();
-        configure( parser );
-        return convert( parser.parse( args ) );
-    }
+public abstract class AbstractCommandLineConverter<T> implements CommandLineConverter<T> {
+  public T convert(Iterable<String> args) throws CommandLineArgumentException {
+    CommandLineParser parser = new CommandLineParser();
+    configure(parser);
+    return convert(parser.parse(args));
+  }
-    public T convert( ParsedCommandLine args )
-        throws CommandLineArgumentException
-    {
-        return convert( args, newInstance() );
-    }
+  public T convert(ParsedCommandLine args) throws CommandLineArgumentException {
+    return convert(args, newInstance());
+  }
-    public T convert( Iterable<String> args, T target )
-        throws CommandLineArgumentException
-    {
-        CommandLineParser parser = new CommandLineParser();
-        configure( parser );
-        return convert( parser.parse( args ), target );
-    }
+  public T convert(Iterable<String> args, T target) throws CommandLineArgumentException {
+    CommandLineParser parser = new CommandLineParser();
+    configure(parser);
+    return convert(parser.parse(args), target);
+  }
-    protected abstract T newInstance();
+  protected abstract T newInstance();
