MNG-3905 First pass at collecting all the repository related code and started to decouple from maven-artifact


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@726383 13f79535-47bb-0310-9956-ffa450edef68

-    protected ArtifactResolver artifactResolver;
-
-    @Requirement
-    protected ArtifactMetadataSource artifactMetadataSource;
-
-    @Requirement
-    private ArtifactFactory artifactFactory;
-
-    @Requirement
+    
+    @Requirement
+    protected ArtifactResolver artifactResolver;
+
+    @Requirement
+    protected ArtifactMetadataSource artifactMetadataSource;
+
+    @Requirement
+    private ArtifactFactory artifactFactory;    
-            MavenProject project = readModelFromLocalPath( "unknown", projectDescriptor, new PomArtifactResolver(
-                config.getLocalRepository(), repositoryHelper.buildArtifactRepositories(
-                getSuperProject( config, projectDescriptor, true ).getModel() ), artifactResolver ), config );
+        MavenProject project = readModelFromLocalPath( "unknown", projectDescriptor, new PomArtifactResolver( config.getLocalRepository(), repositoryHelper
+            .buildArtifactRepositories( getSuperProject( config, projectDescriptor, true ).getModel() ), artifactResolver ), config );
-            project.setFile( projectDescriptor );
-            project = buildWithProfiles( project.getModel(), config, projectDescriptor, project.getParentFile(), true );
+        project.setFile( projectDescriptor );
+        project = buildWithProfiles( project.getModel(), config, projectDescriptor, project.getParentFile(), true );
-            Build build = project.getBuild();
-            // NOTE: setting this script-source root before path translation, because
-            // the plugin tools compose basedir and scriptSourceRoot into a single file.
-            project.addScriptSourceRoot( build.getScriptSourceDirectory() );
-            project.addCompileSourceRoot( build.getSourceDirectory() );
-            project.addTestCompileSourceRoot( build.getTestSourceDirectory() );
-            project.setFile( projectDescriptor );
+        Build build = project.getBuild();
+        // NOTE: setting this script-source root before path translation, because
+        // the plugin tools compose basedir and scriptSourceRoot into a single file.
+        project.addScriptSourceRoot( build.getScriptSourceDirectory() );
+        project.addCompileSourceRoot( build.getSourceDirectory() );
+        project.addTestCompileSourceRoot( build.getTestSourceDirectory() );
+        project.setFile( projectDescriptor );
-            setBuildOutputDirectoryOnParent( project );
+        setBuildOutputDirectoryOnParent( project );
-        File f = (artifact.getFile() != null) ? artifact.getFile() :
-                new File( localRepository.getBasedir(), localRepository.pathOf( artifact ) );;
+        File f = (artifact.getFile() != null) ? artifact.getFile() : new File( localRepository.getBasedir(), localRepository.pathOf( artifact ) );
-     //   project = readModelFromLocalPath( "unknown", artifact.getFile(), new PomArtifactResolver( config.getLocalRepository(), artifactRepositories, artifactResolver ), config );
+        
+        
+        
-                throw new InvalidProjectModelException( projectId, "Not a v" + MAVEN_MODEL_VERSION + " POM.",
-                                                        new File( "." ) );
+                throw new InvalidProjectModelException( projectId, "Not a v" + MAVEN_MODEL_VERSION + " POM.", new File( "." ) );
+            
-        if ( projectBuilder == null )
-        {
-            throw new IllegalArgumentException( "projectBuilder: not initialized" );
-        }
-
+        
+        
+        
+        
-            mavenProject = projectBuilder.buildFromLocalPath( new FileInputStream( projectDescriptor ), Arrays.asList(
-                getSuperProject( config, projectDescriptor, true ).getModel() ), null, interpolatorProperties, resolver,
-                                                                                 projectDescriptor.getParentFile(),
-                                                                                 config );
+            mavenProject = projectBuilder.buildFromLocalPath( new FileInputStream( projectDescriptor ), 
+                                                              Arrays.asList(
+                                                                            getSuperProject( config, projectDescriptor, true ).getModel() ), 
+                                                                            null, 
+                                                                            interpolatorProperties, 
+                                                                            resolver,
+                                                                            projectDescriptor.getParentFile(),
+                                                                            config );
