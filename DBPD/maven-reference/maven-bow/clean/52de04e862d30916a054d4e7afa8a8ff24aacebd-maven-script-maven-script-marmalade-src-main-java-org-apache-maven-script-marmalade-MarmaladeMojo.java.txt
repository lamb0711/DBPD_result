Retrying commit after updating maven-core to HEAD.

o Fixed problems with plugin-plugin (had to do with refactored plugin-tools stuff)
o Added marmalade-mojo support, although without an integration test (verified it doesn't get in the way of 'normal' functionality, though)
o Added code in mboot2 to copy marmalade-mojo support libs to ${maven.home}/lib


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163405 13f79535-47bb-0310-9956-ffa450edef68

-/* Created on Aug 9, 2004 */
+/*
+ * Copyright 2001-2004 The Apache Software Foundation.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import java.util.Iterator;
+import java.util.Map;
+
-public class MarmaladeMojo extends AbstractPlugin {
-    
+public class MarmaladeMojo
+    extends AbstractPlugin
+{
+
-    public MarmaladeMojo(MarmaladeScript script) {
+    public MarmaladeMojo( MarmaladeScript script )
+    {
-    public void execute(PluginExecutionRequest request,
-            PluginExecutionResponse response) throws Exception {
-        
+    public void execute( PluginExecutionRequest request, PluginExecutionResponse response ) throws Exception
+    {
+
-        
-        context.setVariable(MarmaladeMojoExecutionDirectives.REQUEST_INVAR, request);
-        context.setVariable(MarmaladeMojoExecutionDirectives.RESPONSE_INVAR, response);
-        
+
+        context.setVariable( MarmaladeMojoExecutionDirectives.REQUEST_INVAR, request );
+        context.setVariable( MarmaladeMojoExecutionDirectives.RESPONSE_INVAR, response );
+
-        catch( MarmaladeExecutionException e )
+        catch ( MarmaladeExecutionException e )
-            FailureResponse failure = new MarmaladeMojoFailureResponse(script.getLocation(), e);            
-            response.setExecutionFailure(true, failure);
+            FailureResponse failure = new MarmaladeMojoFailureResponse( script.getLocation(), e );
+            response.setExecutionFailure( true, failure );
+        }
+
+        Map externalizedVars = context.getExternalizedVariables();
+        for ( Iterator it = externalizedVars.entrySet().iterator(); it.hasNext(); )
+        {
+            Map.Entry entry = (Map.Entry) it.next();
+            request.addContextValue( entry.getKey(), entry.getValue() );
-}
+}
