[MNG-1751] merging metadata doesn't fail when timestamp is in the future

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@932406 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.Writer;
+import org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Writer;
+import org.codehaus.plexus.util.WriterFactory;
-    protected static Metadata readMetadata( File mappingFile )
+    protected Metadata readMetadata( File mappingFile )
+
+    /**
+     * Ensures the last updated timestamp of the specified metadata does not refer to the future and fixes the local metadata if necessary to allow
+     * proper merging/updating of metadata during deployment.
+     */
+    private void fixTimestamp( File metadataFile, Metadata metadata, Metadata reference )
+    {
+        boolean changed = false;
+
+        if ( metadata != null && reference != null )
+        {
+            Versioning versioning = metadata.getVersioning();
+            Versioning versioningRef = reference.getVersioning();
+            if ( versioning != null && versioningRef != null )
+            {
+                String lastUpdated = versioning.getLastUpdated();
+                String now = versioningRef.getLastUpdated();
+                if ( lastUpdated != null && now != null && now.compareTo( lastUpdated ) < 0 )
+                {
+                    getLogger().warn(
+                                      "The last updated timestamp in " + metadataFile + " refers to the future (now = "
+                                          + now + ", lastUpdated = " + lastUpdated
+                                          + "). Please verify that the clocks of all"
+                                          + " deploying machines are reasonably synchronized." );
+                    versioning.setLastUpdated( now );
+                    changed = true;
+                }
+            }
+        }
+
+        if ( changed )
+        {
+            getLogger().debug( "Repairing metadata in " + metadataFile );
+
+            Writer writer = null;
+            try
+            {
+                writer = WriterFactory.newXmlWriter( metadataFile );
+                new MetadataXpp3Writer().write( writer, metadata );
+            }
+            catch ( IOException e )
+            {
+                String msg = "Could not write fixed metadata to " + metadataFile + ": " + e.getMessage();
+                if ( getLogger().isDebugEnabled() )
+                {
+                    getLogger().warn( msg, e );
+                }
+                else
+                {
+                    getLogger().warn( msg );
+                }
+            }
+            finally
+            {
+                IOUtil.close( writer );
+            }
+        }
+    }
+
+
+            if ( file.isFile() )
+            {
+                try
+                {
+                    fixTimestamp( file, readMetadata( file ), ( (RepositoryMetadata) metadata ).getMetadata() );
+                }
+                catch ( RepositoryMetadataReadException e )
+                {
+                    // will be reported via storeInlocalRepository
+                }
+            }
