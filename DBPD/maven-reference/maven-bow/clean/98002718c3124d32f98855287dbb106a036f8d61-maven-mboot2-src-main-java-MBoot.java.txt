o Refactored mojo/plugin generation, extraction, etc. to accommodate multiple mojo languages.
o Tested with java mojos, mboot to verify nothing broken by refactor.
o TODO: Add marmalade support tests...currently only java-mojos are supported in mboot2, so this isn't going to interrupt things.
o TODO: Once marmalade support is tested, add to the list of artifacts built by mboot2.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163369 13f79535-47bb-0310-9956-ffa450edef68

+    
+    String[] pluginGeneratorDeps = new String[]{
+        "plexus/jars/plexus-container-default-1.0-alpha-2-SNAPSHOT.jar",
+        "classworlds/jars/classworlds-1.1-alpha-1.jar",
+        "maven/jars/maven-artifact-2.0-SNAPSHOT.jar",
+        "maven/jars/maven-core-2.0-SNAPSHOT.jar",
+        "maven/jars/maven-model-2.0-SNAPSHOT.jar",
+        "maven/jars/maven-plugin-2.0-SNAPSHOT.jar",
+        "maven/jars/maven-plugin-tools-api-2.0-SNAPSHOT.jar",
+        "maven/jars/maven-plugin-tools-java-2.0-SNAPSHOT.jar",
+        "maven/jars/maven-plugin-tools-pluggy-2.0-SNAPSHOT.jar",
+        "maven/jars/wagon-provider-api-1.0-alpha-2-SNAPSHOT.jar",
+        "maven/jars/wagon-file-1.0-alpha-2-SNAPSHOT.jar",
+        "maven/jars/wagon-http-lightweight-1.0-alpha-2-SNAPSHOT.jar"
+    };
-        "maven-plugin-tools",
+//        "maven-script/maven-script-marmalade",
+        "maven-plugin-tools/maven-plugin-tools-api",
+        "maven-plugin-tools/maven-plugin-tools-java",
+        "maven-plugin-tools/maven-plugin-tools-pluggy",
+//        "maven-plugin-tools/maven-plugin-tools-marmalade",
-        cl.addURL( new File( repoLocal, "maven/jars/maven-plugin-2.0-SNAPSHOT.jar" ).toURL() );
-
-        cl.addURL( new File( repoLocal, "maven/jars/maven-plugin-tools-2.0-SNAPSHOT.jar" ).toURL() );
-
-
+        addPluginGeneratorDependencies();
+        
+    
+    private void addPluginGeneratorDependencies() throws Exception
+    {
+        for ( int i=0; i<pluginGeneratorDeps.length; i++ )
+        {
+            String dependency = pluginGeneratorDeps[i];
+
+            File f = new File( repoLocal, dependency );
+            if ( !f.exists() )
+            {
+                throw new FileNotFoundException( "Missing dependency: " + dependency +
+                                                 ( !online ? "; run again online" : "; there was a problem downloading it earlier" ) );
+            }
+
+            cl.addURL( f.toURL() );
+        }
+    }
-        Class c = cl.loadClass( "org.apache.maven.plugin.generator.PluginDescriptorGenerator" );
-
-        Object generator = c.newInstance();
-
-        Method m = c.getMethod( "execute", new Class[]{String.class, String.class, String.class} );
-
-        m.invoke( generator, new Object[]{sourceDirectory, outputDirectory, pom} );
+        Class cls = cl.loadClass("org.apache.maven.tools.plugin.pluggy.Main");
+        
+        Method m = cls.getMethod( "main", new Class[]{String[].class} );
+        
+        String[] args = {
+            "descriptor", sourceDirectory, outputDirectory, pom, repoLocal
+        };
+        
+        m.invoke( null, new Object[]{args} );
