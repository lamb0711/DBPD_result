compile based on source roots


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163423 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
- *  name="sourceDirectory"
- *  type="String"
+ *  name="compileSourceRootsList"
+ *  type="java.util.List"
- *  expression="#project.build.sourceDirectory"
+ *  expression="#project.compileSourceRootsList"
- * @todo use compile source roots and not the pom.build.sourceDirectory so that any
- *       sort of preprocessing and/or source generation can be taken into consideration.
-        String sourceDirectory = (String) request.getParameter( "sourceDirectory" );
+        List compileSourceRootsList = (List) request.getParameter( "compileSourceRootsList" );
-        
-        if ( ! new File( sourceDirectory ).exists() )
+
+        compileSourceRootsList = removeEmptyCompileSourceRoots( compileSourceRootsList );
+        if ( compileSourceRootsList.isEmpty() )
-        
+
-        compilerConfiguration.setSourceLocations(Arrays.asList(new String[] {sourceDirectory}));
+        compilerConfiguration.setSourceLocations( compileSourceRootsList );
+
+    /** @todo also in ant plugin. This should be resolved at some point so that it does not need to be calculated continuously - or should the plugins accept empty source roots as is? */
+    private static List removeEmptyCompileSourceRoots( List compileSourceRootsList )
+    {
+        List newCompileSourceRootsList = new ArrayList();
+        if ( compileSourceRootsList != null )
+        {
+            // copy as I may be modifying it
+            for ( Iterator i = compileSourceRootsList.iterator(); i.hasNext(); )
+            {
+                String srcDir = (String) i.next();
+                if ( !newCompileSourceRootsList.contains( srcDir ) && new File( srcDir ).exists() )
+                {
+                    newCompileSourceRootsList.add( srcDir );
+                }
+            }
+        }
+        return newCompileSourceRootsList;
+    }
