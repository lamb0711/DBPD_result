transitive test dependencies should be ignored


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163488 13f79535-47bb-0310-9956-ffa450edef68

-public class MavenMetadataSource
-    implements ArtifactMetadataSource
+public class MavenMetadataSource implements ArtifactMetadataSource
-    /** @todo remove. */
+    /**
+     * @todo remove.
+     */
-        Artifact metadataArtifact = new DefaultArtifact( artifact.getGroupId(),
-                                                         artifact.getArtifactId(),
-                                                         artifact.getVersion(),
-                                                         "pom" );
+        Artifact metadataArtifact = new DefaultArtifact( artifact.getGroupId(), artifact.getArtifactId(),
+                                                         artifact.getVersion(), "pom" );
-            projectArtifacts.add( artifact );
+            if ( artifact != null )
+            {
+                projectArtifacts.add( artifact );
+            }
-        // TODO: duplicated with the ArtifactFactory, localRepository not used (should be used here to resolve path?
-        Artifact artifact = new DefaultArtifact( dependency.getGroupId(),
-                                                 dependency.getArtifactId(),
-                                                 dependency.getVersion(),
-                                                 transitiveScope( dependency.getScope(), scope ),
-                                                 dependency.getType(),
-                                                 dependency.getType() );
-        return artifact;
-    }
+        // TODO: can refactor
+        if ( Artifact.SCOPE_TEST.equals( scope ) )
+        {
+            return null;
+        }
-    private String transitiveScope( String desiredScope, String artifactScope )
-    {
+        // TODO: duplicated with the ArtifactFactory, localRepository not used (should be used here to resolve path?
-        if ( Artifact.SCOPE_TEST.equals( artifactScope ) || Artifact.SCOPE_TEST.equals( desiredScope ) )
+        String desiredScope = Artifact.SCOPE_RUNTIME;
+        if ( Artifact.SCOPE_TEST.equals( dependency.getScope() ) )
-            return Artifact.SCOPE_TEST;
+            desiredScope = Artifact.SCOPE_TEST;
-        else
-        {
-            return Artifact.SCOPE_RUNTIME;
-        }
+        return new DefaultArtifact( dependency.getGroupId(), dependency.getArtifactId(), dependency.getVersion(),
+                                    desiredScope, dependency.getType(), dependency.getType() );
