PR: MNG-1206
Submitted by: Edwin Punzalan
include all dependencies in reactor projects in the generated assembly

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@327855 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import org.apache.maven.artifact.Artifact;
+import org.apache.maven.project.MavenProject;
-     * Project dependencies.
-     *
-     * @parameter expression="${project.artifacts}"
-     * @readonly
-     */
-    protected Set dependencies;
-
-    /**
-
+    /**
+     * Contains the full list of projects in the reactor.
+     *
+     * @parameter expression="${reactorProjects}"
+     * @required
+     * @readonly
+     */
+    private List reactorProjects;
+
+    /**
+     * Creates a Map of artifacts within the reactor using the groupId:artifactId:version as key
+     *
+     * @return a HashMap of all artifacts available in the reactor
+     */
+    protected Map getMappedReactorArtifacts()
+    {
+        Map mappedReactorArtifacts = new HashMap();
+
+        for ( Iterator i = reactorProjects.iterator(); i.hasNext(); )
+        {
+            MavenProject reactorProject = (MavenProject) i.next();
+
+            String key = reactorProject.getGroupId() + ":" + reactorProject.getArtifactId() + ":"
+                + reactorProject.getVersion();
+
+            mappedReactorArtifacts.put( key, reactorProject.getArtifact() );
+        }
+
+        return mappedReactorArtifacts;
+    }
+
+    /**
+     * Retrieves all artifact dependencies within the reactor
+     *
+     * @return A HashSet of artifacts
+     */
+    protected Set getDependencies()
+    {
+        Map reactorArtifacts = getMappedReactorArtifacts();
+
+        Map dependencies = new HashMap();
+
+        for ( Iterator i = reactorProjects.iterator(); i.hasNext(); )
+        {
+            MavenProject reactorProject = (MavenProject) i.next();
+
+            for ( Iterator j = reactorProject.getArtifacts().iterator(); j.hasNext(); )
+            {
+                Artifact artifact = (Artifact) j.next();
+
+                String key = artifact.getGroupId() + ":" + artifact.getArtifactId() + ":" + artifact.getVersion();
+
+                if ( !reactorArtifacts.containsKey( key ) && !dependencies.containsKey( key ) )
+                {
+                    dependencies.put( key, artifact );
+                }
+            }
+        }
+
+        return new HashSet( dependencies.values() );
+    }
-
