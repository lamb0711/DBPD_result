[MNG-0051] - This test was broken due to an unrelated issue on plugin management inheritance. Fixed it and added some unit tests.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@767266 13f79535-47bb-0310-9956-ffa450edef68

-           // copyDependencies( (Plugin) parent, targetPlugin, false );
+ 
+    public void process( Plugin parent,  List<Plugin> t, boolean isChildMostSpecialized )
+    {
+        if (parent == null) {
+			return;
+		}
+
+		boolean isAdd = true;
+		Plugin targetPlugin = find((Plugin) parent, t);
+		if (targetPlugin == null) {
+			targetPlugin = new Plugin();
+		} else {
+			isAdd = false;
+		}
+
+		copy2((Plugin) parent, targetPlugin, false);
+		copyDependencies(new ArrayList<Dependency>(((Plugin) parent)
+				.getDependencies()), new ArrayList<Dependency>(), targetPlugin,
+				true);
+		if (isAdd)
+			t.add(targetPlugin);
+    }    
-        sb.append( d.getGroupId() ).append( ":" ).append( d.getArtifactId() ).append( ":" );
+        sb.append( (d.getGroupId() != null) ? d.getGroupId() : "org.apache.maven.plugins").append( ":" ).append( d.getArtifactId() ).append( ":" );
-    }    
+    }      
-    
+ 
+    /**
+     * Don't overwrite values
+     * 
+     * @param source
+     * @param target
+     * @param isChild
+     */
+    private static void copy2(Plugin source, Plugin target, boolean isChild)
+    {
+        if(!isChild && source.getInherited() != null && !source.getInherited().equalsIgnoreCase( "true" ))
+        {
+            return;
+        }
+        
+        if(target.getArtifactId() == null)
+        {
+            target.setArtifactId( source.getArtifactId() );   
+        }
+        
+        if(target.getGroupId() == null)
+        {
+            target.setGroupId( source.getGroupId() );           	
+        }
+        
+        if(target.getInherited() == null)
+        {
+            target.setInherited( source.getInherited() );    
+        }
+        
+        if(target.getVersion() == null)
+        {
+            target.setVersion( source.getVersion() );    
+        }
+               
+        for( PluginExecution pe : source.getExecutions())
+        {
+            PluginExecution idMatch = contains(pe, target.getExecutions());
+            if(idMatch != null)//Join
+            {
+               copyPluginExecution(pe, idMatch, isChild);    
+            }
+            else 
+            {
+                PluginExecution targetPe = new PluginExecution();
+                copyPluginExecution(pe, targetPe, isChild); 
+                target.addExecution( targetPe );
+            }
+            
+        }
+        
+        if(source.getConfiguration() != null)
+        {
+            //TODO: Not copying
+            if(target.getConfiguration() != null)
+            {
+                target.setConfiguration( Xpp3Dom.mergeXpp3Dom( (Xpp3Dom) source.getConfiguration(), (Xpp3Dom) target.getConfiguration() )); 
+            }
+            else
+            {
+                target.setConfiguration( source.getConfiguration() );
+            }
+                
+        }
+       
+       // p2.setConfiguration( configuration ) merge nodes
+        //Goals
+        target.setExtensions(source.isExtensions()); 
+        
+    }    
