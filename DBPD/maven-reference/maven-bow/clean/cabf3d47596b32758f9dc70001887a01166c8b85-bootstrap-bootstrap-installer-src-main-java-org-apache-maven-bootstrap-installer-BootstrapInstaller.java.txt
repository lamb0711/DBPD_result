rnu integration tests


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@344908 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.bootstrap.Bootstrap;
-import org.apache.maven.bootstrap.Bootstrap;
-import org.codehaus.plexus.util.cli.Commandline;
+import org.codehaus.plexus.util.Expand;
-import org.codehaus.plexus.util.cli.StreamConsumer;
+import org.codehaus.plexus.util.cli.Commandline;
+import java.io.FileInputStream;
+import java.util.zip.ZipInputStream;
+        // TODO: use parameters instead, and use --prefix
+        String mavenHome = System.getProperty( "maven.home" );
+        if ( mavenHome == null )
+        {
+            throw new Exception( "maven.home system property is required" );
+        }
+
+        ModelReader mavenCoreModel = bootstrapper.getCachedModel( "org.apache.maven", "maven-core" );
+
-        createInstallation( installation );
+        createInstallation( installation, mavenCoreModel );
-        runMaven( installation, new File( basedir, "maven-core" ), new String[]{"clean", "assembly:assembly"} );
+        File mavenCoreDir = mavenCoreModel.getProjectFile().getParentFile();
+        runMaven( installation, mavenCoreDir, new String[]{"clean", "assembly:assembly"} );
+
+        File file = new File( mavenCoreDir, "target/maven-" + mavenCoreModel.getVersion() + "-bin.zip" );
+
+        FileUtils.deleteDirectory( mavenHome );
+
+        Expand expand = new Expand();
+        expand.setSrc( file );
+        File prefix = new File( mavenHome ).getParentFile();
+        expand.setDest( prefix );
+        expand.execute();
+
+        fixScriptPermissions( new File( prefix, "maven-" + mavenCoreModel.getVersion() + "/bin" ) );
+    private static void fixScriptPermissions( File binDirectory )
+        throws InterruptedException, CommandLineException
+    {
+        if ( Os.isFamily( "unix" ) )
+        {
+            Commandline cli = new Commandline();
+
+            cli.setExecutable( "chmod" );
+
+            cli.createArgument().setValue( "+x" );
+
+            cli.createArgument().setValue( new File( binDirectory, "mvn" ).getAbsolutePath() );
+
+            cli.createArgument().setValue( new File( binDirectory, "m2" ).getAbsolutePath() );
+
+            cli.execute().waitFor();
+        }
+    }
+
+        // TODO: should we just remove this from the equation?
+        cli.addEnvironment( "M2_HOME", installation.getAbsolutePath() );
+        // No env is passed through
+        cli.addEnvironment( "JAVA_HOME", System.getProperty( "java.home" ) );
+
-    private void createInstallation( File dir )
+    private void createInstallation( File dir, ModelReader mavenCoreModel )
-        ModelReader reader = bootstrapper.getCachedModel( "org.apache.maven", "maven-core" );
-
-        for ( Iterator i = reader.getDependencies().iterator(); i.hasNext(); )
+        for ( Iterator i = mavenCoreModel.getDependencies().iterator(); i.hasNext(); )
-        Dependency coreAsDep = new Dependency( reader.getGroupId(), reader.getArtifactId(), reader.getVersion(),
-                                               reader.getPackaging(), Collections.EMPTY_LIST );
+        Dependency coreAsDep = new Dependency( mavenCoreModel.getGroupId(), mavenCoreModel.getArtifactId(),
+                                               mavenCoreModel.getVersion(), mavenCoreModel.getPackaging(),
+                                               Collections.EMPTY_LIST );
-        File srcBinDirectory = new File( reader.getProjectFile().getParentFile(), "src/bin" );
+        File srcBinDirectory = new File( mavenCoreModel.getProjectFile().getParentFile(), "src/bin" );
-        if ( Os.isFamily( "unix" ) )
-        {
-            Commandline cli = new Commandline();
-
-            cli.setExecutable( "chmod" );
-
-            cli.createArgument().setValue( "+x" );
-
-            cli.createArgument().setValue( new File( binDirectory, "mvn" ).getAbsolutePath() );
-
-            cli.execute().waitFor();
-        }
+        fixScriptPermissions( binDirectory );
