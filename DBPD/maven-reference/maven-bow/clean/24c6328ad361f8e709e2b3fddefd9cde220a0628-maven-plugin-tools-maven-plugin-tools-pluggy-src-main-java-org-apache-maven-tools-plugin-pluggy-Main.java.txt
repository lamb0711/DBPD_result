declare the desired "prefix" inside the plugin descriptor instead of pulling apart the artifact ID (though that is how the default is created).
Currently, the reverse is not handled in anyway, so a non-default prefix may not work, but this makes the code easier to isolate.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168099 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.plugin.descriptor.PluginDescriptor;
-import java.net.URL;
-            System.err.println( "Usage: pluggy <mode> <source directory> <output directory> <pom> <local-repo>" );
+            System.err.println( "Usage: pluggy <mode> <source directory> <output directory> <pom>" );
-        String localRepo = args[4];
-        
-        File repoPath = new File( localRepo );
-        URL repoUrl = repoPath.toURL();
-        Set descriptors = scanner.execute( project );
+        PluginDescriptor pluginDescriptor = new PluginDescriptor();
+        // TODO: should read this from the pom...
+        pluginDescriptor.setGoalPrefix( PluginDescriptor.getGoalPrefixFromArtifactId( project.getArtifactId() ) );
+        Set descriptors = scanner.execute( project, pluginDescriptor );
-        generator.execute( outputDirectory, descriptors, project );
+        generator.execute( outputDirectory, descriptors, project, pluginDescriptor.getGoalPrefix() );
