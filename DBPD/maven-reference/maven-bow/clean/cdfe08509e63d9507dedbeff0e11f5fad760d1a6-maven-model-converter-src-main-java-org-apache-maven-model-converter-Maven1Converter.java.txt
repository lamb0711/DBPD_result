o load all pluginRelocators with plexus
o auto-generate components.xml

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@423516 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.converter.plugins.PCCChangelog;
-import org.apache.maven.model.converter.plugins.PCCChanges;
-import org.apache.maven.model.converter.plugins.PCCCheckstyle;
-import org.apache.maven.model.converter.plugins.PCCCompiler;
-import org.apache.maven.model.converter.plugins.PCCJar;
-import org.apache.maven.model.converter.plugins.PCCJavadoc;
-import org.apache.maven.model.converter.plugins.PCCMultiproject;
-import org.apache.maven.model.converter.plugins.PCCPmd;
-import org.apache.maven.model.converter.plugins.PCCSurefire;
-import org.apache.maven.model.converter.plugins.PCCTaglist;
-import org.apache.maven.model.converter.plugins.PCCWar;
+import java.util.List;
+ * @plexus.component role="org.apache.maven.model.converter.Maven1Converter"
+     *
+     * @plexus.requirement role="org.apache.maven.model.converter.plugins.PluginConfigurationConverter"
-    private PluginConfigurationConverter[] converters = new PluginConfigurationConverter[]{new PCCChangelog(),
-        new PCCChanges(), new PCCCheckstyle(), new PCCCompiler(), new PCCJar(), new PCCJavadoc(), new PCCMultiproject(),
-        new PCCPmd(), new PCCSurefire(), new PCCTaglist(), new PCCWar()};
+    private List converters;
-        for ( int j = 0; j < converters.length; j++ )
+        for ( Iterator i = converters.iterator(); i.hasNext(); )
-            converters[j].convertConfiguration( v4Model, v3Model, properties );
+            PluginConfigurationConverter converter = (PluginConfigurationConverter) i.next();
+            converter.convertConfiguration( v4Model, v3Model, properties );
