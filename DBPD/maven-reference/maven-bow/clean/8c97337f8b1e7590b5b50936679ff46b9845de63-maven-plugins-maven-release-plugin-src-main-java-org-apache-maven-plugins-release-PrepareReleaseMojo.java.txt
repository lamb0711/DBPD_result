release plugin bugfixes

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@279051 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.DependencyManagement;
+import org.apache.maven.model.PluginManagement;
-    private boolean interactive = true;
+    private boolean interactive;
-
-            
+
-                if ( f.getPath().equals( "pom.xml.backup" ) || f.getPath().equals( releaseProgressFilename ) )
+                if ( "pom.xml.backup".equals( f.getPath() ) || f.getPath().equals( releaseProgressFilename ) )
-                throw new MojoExecutionException( "The project " + project.getGroupId() + ":" + project.getArtifactId() + " isn't a snapshot (" + project.getVersion() + ")." );
+                throw new MojoExecutionException( "The project " + project.getGroupId() + ":" +
+                    project.getArtifactId() + " isn't a snapshot (" + project.getVersion() + ")." );
-            if ( project.hasParent() )
+            if ( model.getParent() != null )
-            Map artifactMap = project.getArtifactMap();
-
-                    String conflictId = ArtifactUtils.artifactId( dep.getGroupId(), dep.getArtifactId(), dep.getType(),
-                                                                  dep.getClassifier(), dep.getVersion() );
+                    // Avoid in dep mgmt
+                    if ( dep.getVersion() != null )
+                    {
+                        String resolvedVersion = getVersionResolver().getResolvedVersion( dep.getGroupId(),
+                                                                                          dep.getArtifactId() );
-                    Artifact artifact = (Artifact) artifactMap.get( conflictId );
+                        if ( resolvedVersion != null )
+                        {
+                            dep.setVersion( resolvedVersion );
+                        }
+                    }
+                }
+            }
-                    String version = resolveVersion( artifact, "dependency", project );
+            DependencyManagement dependencyManagement = model.getDependencyManagement();
+            dependencies = dependencyManagement != null ? dependencyManagement.getDependencies() : null;
-                    dep.setVersion( version );
+            if ( dependencies != null )
+            {
+                for ( Iterator i = dependencies.iterator(); i.hasNext(); )
+                {
+                    Dependency dep = (Dependency) i.next();
+
+                    if ( dep.getVersion() != null )
+                    {
+                        String resolvedVersion = getVersionResolver().getResolvedVersion( dep.getGroupId(),
+                                                                                          dep.getArtifactId() );
+
+                        if ( resolvedVersion != null )
+                        {
+                            dep.setVersion( resolvedVersion );
+                        }
+                    }
-                Map pluginArtifactMap = project.getPluginArtifactMap();
-
-                for ( Iterator i = plugins.iterator(); i.hasNext(); )
+                if ( plugins != null )
-                    Plugin plugin = (Plugin) i.next();
+                    for ( Iterator i = plugins.iterator(); i.hasNext(); )
+                    {
+                        Plugin plugin = (Plugin) i.next();
-                    String pluginId = plugin.getKey();
+                        // Avoid in plugin mgmt
+                        if ( plugin.getVersion() != null )
+                        {
+                            String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),
+                                                                                              plugin.getArtifactId() );
-                    Artifact artifact = (Artifact) pluginArtifactMap.get( pluginId );
+                            if ( resolvedVersion != null )
+                            {
+                                plugin.setVersion( resolvedVersion );
+                            }
+                        }
+                    }
+                }
-                    String version = resolveVersion( artifact, "plugin", project );
+                PluginManagement pluginManagement = build.getPluginManagement();
+                plugins = pluginManagement != null ? pluginManagement.getPlugins() : null;
-                    plugin.setVersion( version );
+                if ( plugins != null )
+                {
+                    for ( Iterator i = plugins.iterator(); i.hasNext(); )
+                    {
+                        Plugin plugin = (Plugin) i.next();
+
+                        if ( plugin.getVersion() != null )
+                        {
+                            String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),
+                                                                                              plugin.getArtifactId() );
+
+                            if ( resolvedVersion != null )
+                            {
+                                plugin.setVersion( resolvedVersion );
+                            }
+                        }
+                    }
-                Map extensionArtifactMap = project.getExtensionArtifactMap();
-
-                    String pluginId = ArtifactUtils.versionlessKey( ext.getGroupId(), ext.getArtifactId() );
+                    String resolvedVersion = getVersionResolver().getResolvedVersion( ext.getGroupId(),
+                                                                                      ext.getArtifactId() );
-                    Artifact artifact = (Artifact) extensionArtifactMap.get( pluginId );
-
-                    String version = resolveVersion( artifact, "extension", project );
-
-                    ext.setVersion( version );
+                    if ( resolvedVersion != null )
+                    {
+                        ext.setVersion( resolvedVersion );
+                    }
-                Map reportArtifactMap = project.getReportArtifactMap();
-
-                    String pluginId = plugin.getKey();
+                    String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),
+                                                                                      plugin.getArtifactId() );
-                    Artifact artifact = (Artifact) reportArtifactMap.get( pluginId );
-
-                    String version = resolveVersion( artifact, "report", project );
-
-                    plugin.setVersion( version );
+                    if ( resolvedVersion != null )
+                    {
+                        plugin.setVersion( resolvedVersion );
+                    }
-                
+
-                List plugins = releaseProject.getBuildPlugins();
+                // Use original - don't want the lifecycle introduced ones
+                // TODO: but is it the right settings?
+                Build originalModel = releaseProject.getOriginalModel().getBuild();
+                List plugins = originalModel != null ? originalModel.getPlugins() : null;
-                    
-                    releasePomPath = releasePomPath.substring( canonicalBasedir.length() );
-                    
+
+                    releasePomPath = releasePomPath.substring( canonicalBasedir.length() + 1 );
+
-        path.replace( File.separatorChar, '/' );
+        path = path.replace( File.separatorChar, '/' );
