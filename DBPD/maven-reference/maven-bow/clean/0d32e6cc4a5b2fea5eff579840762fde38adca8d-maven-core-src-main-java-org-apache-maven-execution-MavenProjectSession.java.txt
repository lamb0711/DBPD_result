some documentation for new extension and project-level session stuff, and trying a fix for the extension manager test that may help things on windows where forceDelete(..) fails.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@586543 13f79535-47bb-0310-9956-ffa450edef68

+/**
+ * Project-level session that stores extension and plugin realms for the project
+ * with the specified projectId (groupId, artifactId, and version). The projectId
+ * is the key here, not the project instance, since this session may be constructed
+ * before the MavenProject instance has been created, in order to pre-scan for
+ * extensions that may alter the project instance when it is constructed (using
+ * custom profile activators, for instance).
+ *
+ * The {@link MavenProjectSession#getProjectRealm()} method is used in many cases
+ * as the lookup realm when the project associated with this session is active,
+ * as in the lifecycle executor. In other cases, where a plugin itself is being
+ * executed, the {@link MavenProjectSession#getPluginRealm(Plugin)} and
+ * {@link MavenProjectSession#getPluginRealm(PluginDescriptor)} methods allow for
+ * retrieval of the {@link ClassRealm} instance - linked to this project - which
+ * contains the plugin classes...in these cases, the plugin realm is used as
+ * the lookupRealm.
+ *
+ * @author jdcasey
+ *
+ */
-    public boolean containsRealm( Plugin plugin )
+    public boolean containsPluginRealm( Plugin plugin )
+    /**
+     * Creates a new ClassRealm for the given extension artifact. This realm
+     * will be a child realm of the container passed to this instance in the
+     * constructor, and does not inherit from the project realm. This is important,
+     * since the project realm will eventually import certain extension
+     * component classes from the realm resulting from this call.
+     *
+     * @param extensionArtifact
+     * @return
+     * @throws DuplicateRealmException
+     */
+    /**
+     * Create a projectId for use in the {@link MavenProjectSession} constructor
+     * and lookup (from inside {@link MavenSession} currently). This method provides
+     * a standard way of forming that id.
+     *
+     * @param groupId
+     * @param artifactId
+     * @param version
+     * @return
+     */
