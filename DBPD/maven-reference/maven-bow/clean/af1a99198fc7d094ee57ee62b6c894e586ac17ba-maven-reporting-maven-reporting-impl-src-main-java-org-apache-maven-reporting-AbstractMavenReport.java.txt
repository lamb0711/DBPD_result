merge from branch maven-2.0.x, up to rev 365776


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@365790 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.doxia.sink.Sink;
+import org.apache.maven.doxia.siterenderer.Renderer;
+import org.apache.maven.doxia.siterenderer.RendererException;
+import org.apache.maven.doxia.siterenderer.sink.SiteRendererSink;
-import org.codehaus.doxia.module.xhtml.XhtmlSink;
-import org.codehaus.doxia.sink.Sink;
-import org.codehaus.doxia.site.renderer.SiteRenderer;
-import org.codehaus.plexus.util.IOUtil;
-import org.codehaus.plexus.util.StringInputStream;
-import org.codehaus.plexus.util.StringUtils;
-import java.io.InputStream;
-import java.util.HashMap;
-import java.util.Map;
-
-    protected abstract SiteRenderer getSiteRenderer();
+    protected abstract Renderer getSiteRenderer();
-            XhtmlSink sink = new XhtmlSink( getSiteRenderer().createSink( new File( outputDirectory ), getOutputName() + ".html",
-                                                           outputDirectory, getSiteDescriptor(), "maven" ) );
+            SiteRendererSink sink =
+                getSiteRenderer().createSink( new File( outputDirectory ), getOutputName() + ".html" );
-            generate( sink, Locale.ENGLISH );
+            generate( sink, Locale.getDefault() );
-            getSiteRenderer().copyResources( outputDirectory, "maven" );
+            // TODO: add back when skinning support is in the site renderer
+//            getSiteRenderer().copyResources( outputDirectory, "maven" );
-        catch ( Exception e )
+        catch ( RendererException e )
-            throw new MojoExecutionException( "An error has occurred in " + getName( locale ) + " report generation.", e );
+            throw new MojoExecutionException( "An error has occurred in " + getName( locale ) + " report generation.",
+                                              e );
+        }
+        catch ( IOException e )
+        {
+            throw new MojoExecutionException( "An error has occurred in " + getName( locale ) + " report generation.",
+                                              e );
+        }
+        catch ( MavenReportException e )
+        {
+            throw new MojoExecutionException( "An error has occurred in " + getName( locale ) + " report generation.",
+                                              e );
-    public void generate( Sink sink, Locale locale )
+    public void generate( org.codehaus.doxia.sink.Sink sink, Locale locale )
-        else
-        {
-            this.sink = sink;
-        }
+
+        this.sink = sink;
-    private String getReportsMenu()
-    {
-        StringBuffer buffer = new StringBuffer();
-        buffer.append( "<menu name=\"Project Documentation\">\n" );
-
-        buffer.append( "  <item name=\"" + getName( locale ) + "\" href=\"/" + getOutputName() + ".html\"/>\n" );
-
-        buffer.append( "</menu>\n" );
-
-        return buffer.toString();
-    }
-
-    private InputStream getSiteDescriptor()
-        throws MojoExecutionException
-    {
-        String siteDescriptorContent = "";
-
-        try
-        {
-            siteDescriptorContent = IOUtil.toString( getClass().getResourceAsStream( "/default-report.xml" ) );
-        }
-        catch ( IOException e )
-        {
-            throw new MojoExecutionException( "The site descriptor cannot be read!", e );
-        }
-
-        Map props = new HashMap();
-
-        props.put( "reports", getReportsMenu() );
-
-        // TODO: interpolate ${project.*} in general
-
-        if ( getProject().getName() != null )
-        {
-            props.put( "project.name", getProject().getName() );
-        }
-        else
-        {
-            props.put( "project.name", "NO_PROJECT_NAME_SET" );
-        }
-
-        if ( getProject().getUrl() != null )
-        {
-            props.put( "project.url", getProject().getUrl() );
-        }
-        else
-        {
-            props.put( "project.url", "NO_PROJECT_URL_SET" );
-        }
-
-        siteDescriptorContent = StringUtils.interpolate( siteDescriptorContent, props );
-
-        return new StringInputStream( siteDescriptorContent );
-    }
-
