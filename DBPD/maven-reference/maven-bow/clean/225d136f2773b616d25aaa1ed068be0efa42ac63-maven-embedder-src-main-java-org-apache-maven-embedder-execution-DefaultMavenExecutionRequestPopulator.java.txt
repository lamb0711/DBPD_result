o removing the profile manager and profile activation context from the embedder code, it can all be handled in the core having the active/inactive profile ids on hand along with all the profiles that are available from any external sources like the settings.xml

git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@775200 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.Profile;
-import org.apache.maven.model.Repository;
-import org.apache.maven.profiles.DefaultProfileManager;
-import org.apache.maven.profiles.ProfileActivationContext;
-import org.apache.maven.profiles.ProfileActivationException;
-import org.apache.maven.profiles.ProfileManager;
-        profileManager( request, configuration );
-
-
+    // Process plugin groups
+    // Get profile models
+    // Get active profiles
-        ProfileManager profileManager = request.getProfileManager();
-
-        List<String> settingsActiveProfileIds = settings.getActiveProfiles();
-
-        if ( settingsActiveProfileIds != null )
-        {
-            for ( String profileId : settingsActiveProfileIds )
-            {
-                profileManager.getProfileActivationContext().setActive( profileId );
-            }
-        }
-
+        // We just need to keep track of what profiles are being activated by the settings. We don't need to process
+        // them here. This should be taken care of by the project builder.
+        //
+        request.addActiveProfiles( settings.getActiveProfiles() );        
+        
+        // We only need to take the profiles and make sure they are available when the calculation of the active profiles
+        // is determined.
+        //
-                Profile profile = SettingsUtils.convertFromSettingsProfile( rawProfile );
-
-                profileManager.addProfile( profile );
-            }
-
-            // We need to convert profile repositories to artifact repositories
-            try
-            {
-                for ( Profile profile : profileManager.getActiveProfiles() )
-                {
-                    for ( Repository r : profile.getRepositories() )
-                    {
-                        try
-                        {
-                            request.addRemoteRepository( repositorySystem.buildArtifactRepository( r ) );
-                        }
-                        catch ( InvalidRepositoryException e )
-                        {
-                            throw new MavenEmbedderException( "Cannot create remote repository " + r.getId(), e );
-                        }
-                    }
-                    for ( Repository r : profile.getPluginRepositories() )
-                    {
-                        try
-                        {
-                            request.addRemoteRepository( repositorySystem.buildArtifactRepository( r ) );
-                        }
-                        catch ( InvalidRepositoryException e )
-                        {
-                            throw new MavenEmbedderException( "Cannot create remote repository " + r.getId(), e );
-                        }
-                    }                    
-                }
-            }
-            catch ( ProfileActivationException e )
-            {
-                throw new MavenEmbedderException( "Cannot determine active profiles", e );
+                request.addProfile( SettingsUtils.convertFromSettingsProfile( rawProfile ) );                
-
+        
-    // ------------------------------------------------------------------------
-    // Profile Manager
-    // ------------------------------------------------------------------------
-
-    private void profileManager( MavenExecutionRequest request, Configuration configuration )
-    {
-        // ------------------------------------------------------------------------
-        // Profile Manager
-        // ------------------------------------------------------------------------
-
-        ProfileActivationContext activationContext = request.getProfileActivationContext();
-        if ( activationContext == null )
-        {
-            activationContext = new ProfileActivationContext( request.getProperties(), false );
-        }
-
-        activationContext.setExplicitlyActiveProfileIds( request.getActiveProfiles() );
-        activationContext.setExplicitlyInactiveProfileIds( request.getInactiveProfiles() );
-
-        ProfileManager globalProfileManager = new DefaultProfileManager( activationContext );
-
-        request.setProfileManager( globalProfileManager );
-        request.setProfileActivationContext( activationContext );
-    }
-
