Working on: MNG-607

o Added '-f' CLI option, to allow use of non-standard pom files, or spawning of a build from outside of the project dir.
o Added preferential processing of release-pom.xml over pom.xml if it exists (assumes that the current checkout is a release of the software)
o Moved all file discovery from MavenCli to DefaultMaven, to allow embedders to have access to this logic.
o Modified MavenExecutionRequest to add a flag for reactor-activation and the name of a non-standard pom to use, if appropriate.
o Removed getFiles() and getProjectFiles() from MavenExecutionRequest, since file discovery is now done in the DefaultMaven.
o Added integration tests to check preference of release-pom.xml in standalone and '-r' mode
o Added integration tests to check usage of '-f' option within and outside of the project directory
o Added processing for cli-options.txt to maven-core-it-verifier (Verifier.java) to allow specification of '-f' and '-r' in tests


NOTE: the release plugin still doesn't correctly remove the release-pom.xml from HEAD/trunk, since I don't have access to the SCM remove command from maven-scm. I'm waiting for Emmanuel to finish some API changes before moving to the new maven-scm version, and implementing this final step.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@225226 13f79535-47bb-0310-9956-ffa450edef68

-        try
+        if ( file.exists() )
-            BufferedReader reader = new BufferedReader( new FileReader( file ) );
-
-            String line = "";
-
-            while ( ( line = reader.readLine() ) != null )
+            try
-                line = line.trim();
+                BufferedReader reader = new BufferedReader( new FileReader( file ) );
-                if ( line.startsWith( "#" ) || line.length() == 0 )
+                String line = "";
+
+                while ( ( line = reader.readLine() ) != null )
-                    continue;
+                    line = line.trim();
+
+                    if ( line.startsWith( "#" ) || line.length() == 0 )
+                    {
+                        continue;
+                    }
+
+                    lines.addAll( replaceArtifacts( line ) );
-                lines.addAll( replaceArtifacts( line ) );
+                reader.close();
-
-            reader.close();
+            catch ( Exception e )
+            {
+                throw new VerificationException( e );
+            }
-        catch ( Exception e )
-        {
-            throw new VerificationException( e );
-        }
+        
+        
+        List cliOptions = loadFile( basedir, "cli-options.txt" );
+            for ( Iterator it = cliOptions.iterator(); it.hasNext(); )
+            {
+                String key = (String) it.next();
+                cli.createArgument().setValue(key);
+            }
+
-
+            
-
+                
