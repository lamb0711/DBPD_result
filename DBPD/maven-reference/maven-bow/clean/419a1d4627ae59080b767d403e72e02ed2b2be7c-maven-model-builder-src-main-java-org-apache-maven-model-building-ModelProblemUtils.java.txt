o Refactored code

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@934861 13f79535-47bb-0310-9956-ffa450edef68

- * Assists in the creation of model problems.
+ * Assists in the handling of model problems.
-class ModelProblemUtils
+public class ModelProblemUtils
-    public static String toSourceHint( Model model )
+    static String toSourceHint( Model model )
-    public static String toPath( Model model )
+    static String toPath( Model model )
-    public static String toId( Model model )
+    static String toId( Model model )
-    public static String toId( String groupId, String artifactId, String version )
+    static String toId( String groupId, String artifactId, String version )
+    /**
+     * Creates a string with all location details for the specified model problem. If the project identifier is
+     * provided, the generated location will omit the model id and source information and only give line/column
+     * information for problems originating directly from this POM.
+     * 
+     * @param problem The problem whose location should be formatted, must not be {@code null}.
+     * @param projectId The {@code <groupId>:<artifactId>:<version>} of the corresponding project, may be {@code null}
+     *            to force output of model id and source.
+     * @return The formatted problem location or an empty string if unknown, never {@code null}.
+     */
+    public static String formatLocation( ModelProblem problem, String projectId )
+    {
+        StringBuilder buffer = new StringBuilder( 256 );
+
+        if ( !problem.getModelId().equals( projectId ) )
+        {
+            buffer.append( problem.getModelId() );
+
+            if ( problem.getSource().length() > 0 )
+            {
+                if ( buffer.length() > 0 )
+                {
+                    buffer.append( ", " );
+                }
+                buffer.append( problem.getSource() );
+            }
+        }
+
+        if ( problem.getLineNumber() > 0 )
+        {
+            if ( buffer.length() > 0 )
+            {
+                buffer.append( ", " );
+            }
+            buffer.append( "line " ).append( problem.getLineNumber() );
+        }
+
+        if ( problem.getColumnNumber() > 0 )
+        {
+            if ( buffer.length() > 0 )
+            {
+                buffer.append( ", " );
+            }
+            buffer.append( "column " ).append( problem.getColumnNumber() );
+        }
+
+        return buffer.toString();
+    }
+
