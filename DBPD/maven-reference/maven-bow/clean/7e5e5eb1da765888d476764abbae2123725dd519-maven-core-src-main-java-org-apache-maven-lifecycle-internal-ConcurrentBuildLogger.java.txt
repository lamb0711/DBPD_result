[MNG-4633] Weave mode operational.

Replaced approximation-based algorithm for detecting upstream-mojo dependencies with
a proper phase based solution. Revised re-resolution strategy of reactor artifacts

There are a few minor performance inefficiencies (only in weave mode), that will be
sorted for beta-2.

Improved logging, and also added initial graphviz-format log output support

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@934425 13f79535-47bb-0310-9956-ffa450edef68

+import com.google.common.collect.ArrayListMultimap;
+import com.google.common.collect.Multimap;
+import java.util.Collection;
-    List<BuiltLogItem> items = Collections.synchronizedList( new ArrayList<BuiltLogItem>() );
+    List<BuildLogItem> items = Collections.synchronizedList( new ArrayList<BuildLogItem>() );
-    public BuiltLogItem createBuildLogItem( MavenProject project, ExecutionPlanItem current )
+    public BuildLogItem createBuildLogItem( MavenProject project, ExecutionPlanItem current )
-        BuiltLogItem result = new BuiltLogItem( project, current );
+        BuildLogItem result = new BuildLogItem( project, current );
-        for ( BuiltLogItem builtLogItem : items )
+        for ( BuildLogItem builtLogItem : items )
+
+    public String toGraph()
+    {
+        StringBuilder result = new StringBuilder();
+
+        Multimap<MavenProject, BuildLogItem> multiMap = ArrayListMultimap.create();
+        for ( BuildLogItem builtLogItem : items )
+        {
+            multiMap.put( builtLogItem.getProject(), builtLogItem );
+        }
+
+        result.append( "digraph build" );
+        result.append( " {\n " );
+
+        for ( MavenProject mavenProject : multiMap.keySet() )
+        {
+            final Collection<BuildLogItem> builtLogItems = multiMap.get( mavenProject );
+            result.append( "   subgraph " );
+            result.append( mavenProject.getArtifactId() );
+            result.append( "   {\n" );
+
+            for ( BuildLogItem builtLogItem : builtLogItems )
+            {
+                result.append( builtLogItem.toGraph( startTime ) );
+            }
+
+            result.append( "\n   }\n" );
+        }
+
+        result.append( "\n}\n " );
+        return result.toString();
+    }
+
