o general cleanup
o add the ability to deal with test resources


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@162551 13f79535-47bb-0310-9956-ffa450edef68

-
-        String basedir = args[0];
-
+        downloadDependencies();
+
+        writeClasspath();
+
+        writeUnitTest();
+
+        writeResources( bootstrapPomParser.getResources(), "bootstrap.resources" );
+
+        writeFile( "bootstrap.repo", downloader.getMavenRepoLocal().getPath() );
+    }
+
+    private void downloadDependencies()
+        throws Exception
+    {
+    }
+    private void writeClasspath()
+        throws Exception
+    {
+    }
+    private void writeUnitTest()
+        throws Exception
+    {
-            tests.append( unitTests.getDirectory() );
+            tests.append( "target/test-classes" );
-            // If there are no includes specified then we want it all.
+            // If there are no unitTestIncludes specified then we want it all.
-            tests.append( unitTests.getDirectory() );
+            tests.append( "target/test-classes" );
+
+            writeResources( unitTests.getResources(), "bootstrap.test.resources" );
+    }
-        resources = bootstrapPomParser.getResources();
-
+    private void writeResources( List resources, String file )
+        throws Exception
+    {
+        int size;
+
-            // If there are no includes specified then we want it all.
+            // If there are no unitTestIncludes specified then we want it all.
-        writeFile( "bootstrap.resources", res.toString() );
-
-        writeFile( "bootstrap.repo", downloader.getMavenRepoLocal().getPath() );
+        writeFile( file, res.toString() );
-            if ( insideUnitTest )
-            {
-                return;
-            }
-            else if ( rawName.equals( "unitTestSourceDirectory" ) )
+            if ( rawName.equals( "unitTest" ) )
-            }
-            else if ( rawName.equals( "unitTest" ) )
-            {
-                unitTests = new UnitTests();
+
-            else if ( rawName.equals( "unitTestSourceDirectory" ) )
-            {
-                unitTests.setDirectory( getBodyText() );
-            }
-                resources.add( currentResource );
+                if ( insideUnitTest )
+                {
+                    unitTests.addResource( currentResource );
+                }
+                else
+                {
+                    resources.add( currentResource );
+                }
-
-            }
-            else if ( insideUnitTest )
-            {
-                if ( rawName.equals( "include" ) )
-                {
-                    unitTests.addInclude( getBodyText() );
-                }
-                else if ( rawName.equals( "exclude" ) )
-                {
-                    unitTests.addExclude( getBodyText() );
-                }
+            else if ( ! insideResource && insideUnitTest )
+            {
+                if ( rawName.equals( "include" ) )
+                {
+                    unitTests.addInclude( getBodyText() );
+                }
+                else if ( rawName.equals( "exclude" ) )
+                {
+                    unitTests.addExclude( getBodyText() );
+                }
+            }
-                // We have something like:
-                //
-                // <dependency>
-                //   <groupId>commons-jelly</groupId>
-                //   <artifactId>commons-jelly-tags-velocity</artifactId>
-                //   <version>SNAPSHOT</version>
-                //  </dependency>
-
-        private List includes = new ArrayList();
+        private List unitTestIncludes = new ArrayList();
-        private List excludes = new ArrayList();
+        private List unitTestExcludes = new ArrayList();
+
+        private List unitTestResources = new ArrayList();
-            this.includes.add( pattern );
+            unitTestIncludes.add( pattern );
-            this.excludes.add( pattern );
+            unitTestExcludes.add( pattern );
+        }
+
+        public void addResource( Resource resource )
+        {
+            unitTestResources.add( resource );
-            return this.includes;
+            return unitTestIncludes;
-            return this.excludes;
+            return unitTestExcludes;
+        }
+
+        public List getResources()
+        {
+            return unitTestResources;
