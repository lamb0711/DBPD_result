use resources directory instead


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@178561 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.util.IOUtil;
-import org.codehaus.plexus.util.IOUtil;
-import java.util.ArrayList;
-import java.io.InputStream;
+import java.io.InputStream;
+import java.util.ArrayList;
- * @goal site
- * @description Doxia plugin
- *
+ * @goal site
+ * @description Doxia plugin
+     * @parameter expression="${basedir}/src/site/resources"
+     * @required
+     */
+    private File resourcesDirectory;
+
+    /**
-    private  SiteRenderer siteRenderer;
+    private SiteRenderer siteRenderer;
+
-                    XhtmlSink sink = siteRenderer.createSink( new File( siteDirectory ), siteDirectory,
-                                                              report.getOutputName() + ".html",
-                                                              outputDirectory, getSiteDescriptor(), flavour );
+                    XhtmlSink sink = siteRenderer.createSink( new File( siteDirectory ),
+                                                              report.getOutputName() + ".html", outputDirectory,
+                                                              getSiteDescriptor(), flavour );
+            File cssDirectory = new File( siteDirectory, "css" );
+            File imagesDirectory = new File( siteDirectory, "images" );
+
+            // special case for backwards compatibility
+            if ( cssDirectory.exists() || imagesDirectory.exists() )
+            {
+                getLog().warn( "DEPRECATED: the css and images directories are deprecated, please use resources" );
+
+                FileUtils.copyDirectory( cssDirectory, new File( outputDirectory, "css" ) );
+
+                FileUtils.copyDirectory( imagesDirectory, new File( outputDirectory, "images" ) );
+            }
+
-            siteRenderer.render( siteDirectory, generatedSiteDirectory, outputDirectory, flavour, getSiteDescriptor() );
+            siteRenderer.render( siteDirectory, generatedSiteDirectory, outputDirectory, flavour, getSiteDescriptor(),
+                                 resourcesDirectory );
-        buffer.append( "    <item name=\"About " + project.getName() + "\" href=\"/index.html\"/>\n");
+        buffer.append( "    <item name=\"About " + project.getName() + "\" href=\"/index.html\"/>\n" );
-                buffer.append( "        <item name=\"" + report.getName() + "\" href=\"/" +
-                               report.getOutputName() + ".html\"/>\n" );
+                buffer.append(
+                    "        <item name=\"" + report.getName() + "\" href=\"/" + report.getOutputName() +
+                    ".html\"/>\n" );
-                buffer.append( "        <item name=\"" + report.getName() + "\" href=\"/" +
-                               report.getOutputName() + ".html\"/>\n" );
+                buffer.append(
+                    "        <item name=\"" + report.getName() + "\" href=\"/" + report.getOutputName() +
+                    ".html\"/>\n" );
-        catch( IOException e )
+        catch ( IOException e )
-        XhtmlSink sink = siteRenderer.createSink( new File( siteDirectory ), siteDirectory,
-                                                  "project-info.html",
-                                                  outputDirectory, siteDescriptor, flavour );
+        XhtmlSink sink = siteRenderer.createSink( new File( siteDirectory ), "project-info.html", outputDirectory,
+                                                  siteDescriptor, flavour );
-                   "of this project's general information. All of this content is automatically generated by ");
+                   "of this project's general information. All of this content is automatically generated by " );
-        
+
-    private void generateProjectReportsPage( InputStream siteDescriptor)
+    private void generateProjectReportsPage( InputStream siteDescriptor )
-        XhtmlSink sink = siteRenderer.createSink( new File( siteDirectory ), siteDirectory,
-                                                  "maven-reports.html",
-                                                  outputDirectory, siteDescriptor, flavour );
+        XhtmlSink sink = siteRenderer.createSink( new File( siteDirectory ), "maven-reports.html", outputDirectory,
+                                                  siteDescriptor, flavour );
-        
+
