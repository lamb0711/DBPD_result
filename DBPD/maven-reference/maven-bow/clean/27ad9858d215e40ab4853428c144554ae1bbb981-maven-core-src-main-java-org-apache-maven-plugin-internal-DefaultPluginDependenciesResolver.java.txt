Merge branch 'aether' of github.com:bentmann/maven-3 into eclipse-aether

Conflicts:
	.gitignore
	apache-maven/pom.xml
	maven-aether-provider/pom.xml
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultArtifactDescriptorReader.java
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionRangeResolver.java
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadataGenerator.java
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/MavenRepositorySystemSession.java
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/MavenServiceLocator.java
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadataGenerator.java
	maven-artifact/pom.xml
	maven-compat/pom.xml
	maven-compat/src/test/java/org/apache/maven/project/AbstractMavenProjectTestCase.java
	maven-compat/src/test/java/org/apache/maven/project/LegacyLocalRepositoryManager.java
	maven-core/pom.xml
	maven-core/src/main/java/org/apache/maven/DefaultMaven.java
	maven-core/src/main/java/org/apache/maven/ReactorReader.java
	maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginRealmCache.java
	maven-core/src/main/java/org/apache/maven/project/DefaultProjectDependenciesResolver.java
	maven-core/src/main/resources/META-INF/plexus/artifact-handlers.xml
	maven-core/src/test/java/org/apache/maven/AbstractCoreMavenComponentTestCase.java
	maven-core/src/test/java/org/apache/maven/project/AbstractMavenProjectTestCase.java
	maven-core/src/test/java/org/apache/maven/project/LegacyLocalRepositoryManager.java
	maven-core/src/test/java/org/apache/maven/project/PomConstructionTest.java
	maven-core/src/test/java/org/apache/maven/repository/TestRepositoryConnector.java
	maven-core/src/test/java/org/apache/maven/settings/PomConstructionWithSettingsTest.java
	maven-embedder/pom.xml
	maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java
	maven-model-builder/pom.xml
	maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java
	maven-model/pom.xml
	maven-plugin-api/pom.xml
	maven-plugin-api/src/main/mdo/plugin.mdo
	maven-plugin-api/src/site/apt/index.apt
	maven-repository-metadata/pom.xml
	maven-settings-builder/pom.xml
	maven-settings/pom.xml
	pom.xml
	src/site/site.xml

-import org.sonatype.aether.RepositorySystem;
-import org.sonatype.aether.RepositorySystemSession;
-import org.sonatype.aether.RequestTrace;
-import org.sonatype.aether.artifact.Artifact;
-import org.sonatype.aether.collection.CollectRequest;
-import org.sonatype.aether.collection.DependencyCollectionException;
-import org.sonatype.aether.collection.DependencyGraphTransformer;
-import org.sonatype.aether.collection.DependencySelector;
-import org.sonatype.aether.graph.DependencyFilter;
-import org.sonatype.aether.graph.DependencyNode;
-import org.sonatype.aether.graph.DependencyVisitor;
-import org.sonatype.aether.repository.RemoteRepository;
-import org.sonatype.aether.resolution.ArtifactDescriptorException;
-import org.sonatype.aether.resolution.ArtifactDescriptorRequest;
-import org.sonatype.aether.resolution.ArtifactDescriptorResult;
-import org.sonatype.aether.resolution.ArtifactRequest;
-import org.sonatype.aether.resolution.ArtifactResolutionException;
-import org.sonatype.aether.resolution.DependencyRequest;
-import org.sonatype.aether.resolution.DependencyResolutionException;
-import org.sonatype.aether.util.DefaultRepositorySystemSession;
-import org.sonatype.aether.util.DefaultRequestTrace;
-import org.sonatype.aether.util.FilterRepositorySystemSession;
-import org.sonatype.aether.util.artifact.DefaultArtifact;
-import org.sonatype.aether.util.artifact.JavaScopes;
-import org.sonatype.aether.util.filter.AndDependencyFilter;
-import org.sonatype.aether.util.filter.ExclusionsDependencyFilter;
-import org.sonatype.aether.util.filter.ScopeDependencyFilter;
-import org.sonatype.aether.util.graph.selector.AndDependencySelector;
-import org.sonatype.aether.util.graph.transformer.ChainedDependencyGraphTransformer;
+import org.eclipse.aether.DefaultRepositorySystemSession;
+import org.eclipse.aether.RepositorySystem;
+import org.eclipse.aether.RepositorySystemSession;
+import org.eclipse.aether.RequestTrace;
+import org.eclipse.aether.artifact.Artifact;
+import org.eclipse.aether.artifact.DefaultArtifact;
+import org.eclipse.aether.collection.CollectRequest;
+import org.eclipse.aether.collection.DependencyCollectionException;
+import org.eclipse.aether.collection.DependencyGraphTransformer;
+import org.eclipse.aether.collection.DependencySelector;
+import org.eclipse.aether.graph.DependencyFilter;
+import org.eclipse.aether.graph.DependencyNode;
+import org.eclipse.aether.graph.DependencyVisitor;
+import org.eclipse.aether.repository.RemoteRepository;
+import org.eclipse.aether.resolution.ArtifactDescriptorException;
+import org.eclipse.aether.resolution.ArtifactDescriptorRequest;
+import org.eclipse.aether.resolution.ArtifactDescriptorResult;
+import org.eclipse.aether.resolution.ArtifactRequest;
+import org.eclipse.aether.resolution.ArtifactResolutionException;
+import org.eclipse.aether.resolution.DependencyRequest;
+import org.eclipse.aether.resolution.DependencyResolutionException;
+import org.eclipse.aether.util.artifact.JavaScopes;
+import org.eclipse.aether.util.filter.AndDependencyFilter;
+import org.eclipse.aether.util.filter.ExclusionsDependencyFilter;
+import org.eclipse.aether.util.filter.ScopeDependencyFilter;
+import org.eclipse.aether.util.graph.selector.AndDependencySelector;
+import org.eclipse.aether.util.graph.transformer.ChainedDependencyGraphTransformer;
+import org.eclipse.aether.util.repository.SimpleArtifactDescriptorPolicy;
-        RequestTrace trace = DefaultRequestTrace.newChild( null, plugin );
+        RequestTrace trace = RequestTrace.newChild( null, plugin );
-            RepositorySystemSession pluginSession = new FilterRepositorySystemSession( session )
-            {
-                @Override
-                public boolean isIgnoreMissingArtifactDescriptor()
-                {
-                    return false;
-                }
-            };
+            DefaultRepositorySystemSession pluginSession = new DefaultRepositorySystemSession( session );
+            pluginSession.setArtifactDescriptorPolicy( new SimpleArtifactDescriptorPolicy( true, false ) );
-        RequestTrace trace = DefaultRequestTrace.newChild( null, plugin );
+        RequestTrace trace = RequestTrace.newChild( null, plugin );
-            request.setRoot( new org.sonatype.aether.graph.Dependency( pluginArtifact, null ) );
+            request.setRoot( new org.eclipse.aether.graph.Dependency( pluginArtifact, null ) );
-                org.sonatype.aether.graph.Dependency pluginDep =
+                org.eclipse.aether.graph.Dependency pluginDep =
-            request.setTrace( DefaultRequestTrace.newChild( trace, depRequest ) );
+            request.setTrace( RequestTrace.newChild( trace, depRequest ) );
-            org.sonatype.aether.graph.Dependency dep = node.getDependency();
+            org.eclipse.aether.graph.Dependency dep = node.getDependency();
-                org.sonatype.aether.artifact.Artifact art = dep.getArtifact();
+                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();
-
-                if ( node.getPremanagedScope() != null && !node.getPremanagedScope().equals( dep.getScope() ) )
-                {
-                    buffer.append( " (scope managed from " ).append( node.getPremanagedScope() ).append( ")" );
-                }
-
-                if ( node.getPremanagedVersion() != null && !node.getPremanagedVersion().equals( art.getVersion() ) )
-                {
-                    buffer.append( " (version managed from " ).append( node.getPremanagedVersion() ).append( ")" );
-                }
