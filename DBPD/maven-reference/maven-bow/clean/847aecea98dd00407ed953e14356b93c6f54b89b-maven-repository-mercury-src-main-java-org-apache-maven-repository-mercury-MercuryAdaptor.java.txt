working on MercuryRepositorySystem - oprimized Adapter

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@762576 13f79535-47bb-0310-9956-ffa450edef68

+import java.net.URI;
+import java.net.URISyntaxException;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Map;
+    
+    private static Map<String, Repository> _repos = Collections.synchronizedMap(  new HashMap<String, Repository>() );
+    
-                                                   DependencyProcessor dependencyProcessor )
+                                                   DependencyProcessor dependencyProcessor
+                                                 )
-            LocalRepositoryM2 lr =
-                new LocalRepositoryM2( localRepository.getId(), new File( localRepository.getUrl() ),
-                                       dependencyProcessor );
+            String url = localRepository.getUrl();
+            
+            LocalRepositoryM2 lr = (LocalRepositoryM2) _repos.get( url );
+            
+            if( lr == null )
+                try
+                {
+                    URI rootURI = new URI( url );
+                    
+                    File localRepoDir =  new File( rootURI );
+                    
+                    lr = new LocalRepositoryM2( localRepository.getId(), localRepoDir, dependencyProcessor );
+                    
+                    _repos.put( url, lr );
+                }
+                catch ( URISyntaxException e )
+                {
+                    throw new IllegalArgumentException( e );
+                }
-                Server server;
-                try
+                String url = ar.getUrl();
+                
+                RemoteRepositoryM2 rr = (RemoteRepositoryM2) _repos.get( url );
+                
+                if( rr == null )
-                    server = new Server( ar.getId(), new URL( ar.getUrl() ) );
+                    Server server;
+                    try
+                    {
+                        server = new Server( ar.getId(), new URL( url ) );
+                    }
+                    catch ( MalformedURLException e )
+                    {
+                        throw new IllegalArgumentException( e );
+                    }
+                    rr = new RemoteRepositoryM2( server, dependencyProcessor );
+                    _repos.put( url, rr );
-                catch ( MalformedURLException e )
-                {
-                    throw new IllegalArgumentException( e );
-                }
-                RemoteRepositoryM2 rr = new RemoteRepositoryM2( server, dependencyProcessor );
