put classpath in an external file


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@291370 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.io.InputStream;
-import java.util.Calendar;
-import java.util.Iterator;
-import java.util.Locale;
-import java.util.StringTokenizer;
-import java.util.List;
-import java.util.ArrayList;
-
+import org.apache.maven.model.Model;
-import org.apache.maven.model.Model;
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Locale;
+import java.util.StringTokenizer;
+
+ * @author <a href="mailto:evenisse@apache.org">Emmanuel Venisse</a>
+ * @author <a href="mailto:vincent.siveton@gmail.com">Vincent Siveton</a>
+ * @version $Id: DependenciesReport.java,v 1.2 2005/02/23 00:08:02 brett Exp $
- *
- * @author <a href="mailto:evenisse@apache.org">Emmanuel Venisse</a>
- * @author <a href="mailto:vincent.siveton@gmail.com">Vincent Siveton</a>
- *
- * @version $Id: DependenciesReport.java,v 1.2 2005/02/23 00:08:02 brett Exp $
- *
-    /** The current class directory */
+    /**
+     * The current class directory
+     */
-    /** Default location for css */
+    /**
+     * Default location for css
+     */
-    /** Default bottom */
+
+    /**
+     * Default bottom
+     */
-    /** Default doctitle */
+    /**
+     * Default doctitle
+     */
-    /** Default organization name */
+    /**
+     * Default organization name
+     */
-    /** Default window title */
+    /**
+     * Default window title
+     */
-     * @parameter expression="${component.org.codehaus.doxia.site.renderer.SiteRenderer}"
-     * @required
-     * @readonly
+     * @component
+
+
+            if ( classpath.length() > 0 )
+            {
+                classpath.insert( 0, "-classpath " );
+            }
-            String[] fileList = new String[1];
+            StringBuffer files = new StringBuffer();
-                fileList = FileUtils.getFilesFromExtension( sourceDirectory, new String[] { "java" } );
+                String[] fileList = FileUtils.getFilesFromExtension( sourceDirectory, new String[]{"java"} );
+                if ( fileList != null && fileList.length != 0 )
+                {
+                    for ( int j = 0; j < fileList.length; j++ )
+                    {
+                        files.append( fileList[j] );
+                        files.append( "\n" );
+                    }
+                }
+
+            if ( files.length() == 0 )
+            {
+                return;
+            }
+
+            javadocDirectory.mkdirs();
-            if ( fileList != null && fileList.length != 0 )
-            {
-                StringBuffer files = new StringBuffer();
-                for ( int i = 0; i < fileList.length; i++ )
-                {
-                    files.append( fileList[i] );
-                    files.append( "\n" );
-                }
-                javadocDirectory.mkdirs();
-                FileUtils.fileWrite( new File( javadocDirectory, "files" ).getAbsolutePath(), files.toString() );
-            }
-            else
-            {
-                return;
-            }
+            File file = new File( javadocDirectory, "files" );
+            file.deleteOnExit();
+            FileUtils.fileWrite( file.getAbsolutePath(), files.toString() );
-                    if ( ( NumberUtils.isDigits( maxmemory.substring( 0, maxmemory.length() - 1 ) ) )
-                        && ( maxmemory.toLowerCase().endsWith( "m" ) ) )
+                    if ( ( NumberUtils.isDigits( maxmemory.substring( 0, maxmemory.length() - 1 ) ) ) &&
+                        ( maxmemory.toLowerCase().endsWith( "m" ) ) )
-                        getLog().error( "The maxmemory '" + maxmemory + "' is not a valid number. Ignore this option." );
+                        getLog().error(
+                            "The maxmemory '" + maxmemory + "' is not a valid number. Ignore this option." );
-                    if ( ( NumberUtils.isDigits( minmemory.substring( 0, minmemory.length() - 1 ) ) )
-                        && ( minmemory.toLowerCase().endsWith( "m" ) ) )
+                    if ( ( NumberUtils.isDigits( minmemory.substring( 0, minmemory.length() - 1 ) ) ) &&
+                        ( minmemory.toLowerCase().endsWith( "m" ) ) )
-                        getLog().error( "The minmemory '" + minmemory + "' is not a valid number. Ignore this option." );
+                        getLog().error(
+                            "The minmemory '" + minmemory + "' is not a valid number. Ignore this option." );
-            addArgIfNotEmpty( arguments, "-classpath", classpath.toString() );
+            if ( classpath.length() > 0 )
+            {
+                file = new File( javadocDirectory, "classpath" );
+                file.deleteOnExit();
+                FileUtils.fileWrite( file.getAbsolutePath(), classpath.toString() );
+                cmd.createArgument().setValue( "@classpath" );
+            }
-                    if ( ( model.getOrganization() != null )
-                        && ( !StringUtils.isEmpty( model.getOrganization().getName() ) ) )
+                    if ( ( model.getOrganization() != null ) &&
+                        ( !StringUtils.isEmpty( model.getOrganization().getName() ) ) )
-                    windowtitle = ( model.getName() == null ? model.getArtifactId() : model.getName() ) + " "
-                        + model.getVersion() + " API";
+                    windowtitle = ( model.getName() == null ? model.getArtifactId() : model.getName() ) + " " +
+                        model.getVersion() + " API";
-     * @see #addArgIf(java.util.List,boolean,String)
-     * @see <a href="http://jakarta.apache.org/commons/lang/api/org/apache/commons/lang/SystemUtils.html#isJavaVersionAtLeast(float)">SystemUtils.html#isJavaVersionAtLeast(float)</a>
-     *
+     * @see #addArgIf(java.util.List,boolean,String)
+     * @see <a href="http://jakarta.apache.org/commons/lang/api/org/apache/commons/lang/SystemUtils.html#isJavaVersionAtLeast(float)">SystemUtils.html#isJavaVersionAtLeast(float)</a>
-     * @see #addArgIfNotEmpty(java.util.List,String,String,boolean)
-     *
+     * @see #addArgIfNotEmpty(java.util.List,String,String,boolean)
-     * @see #addArgIfNotEmpty(List, String, String, float, boolean)
-     *
+     * @see #addArgIfNotEmpty(List, String, String, float, boolean)
-     * @see #addArgIfNotEmpty(java.util.List,String,String)
-     * @see <a href="http://jakarta.apache.org/commons/lang/api/org/apache/commons/lang/SystemUtils.html#isJavaVersionAtLeast(float)">SystemUtils.html#isJavaVersionAtLeast(float)</a>
-     *
+     * @see #addArgIfNotEmpty(java.util.List,String,String)
+     * @see <a href="http://jakarta.apache.org/commons/lang/api/org/apache/commons/lang/SystemUtils.html#isJavaVersionAtLeast(float)">SystemUtils.html#isJavaVersionAtLeast(float)</a>
-                                  boolean repeatKey )
+                                   boolean repeatKey )
-     *            if the resource could not be found
+     *         if the resource could not be found
-     * @see #DEFAULT_CSS_NAME
-     *
+     * @see #DEFAULT_CSS_NAME
