o more plugin manager refactoring


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@750343 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.ArrayList;
-import org.codehaus.plexus.logging.LogEnabled;
-    implements PluginManagerSupport, LogEnabled, Contextualizable
+    implements PluginManagerSupport, Contextualizable
-    //@Requirement
+    @Requirement
-        List remoteRepositories = new ArrayList();
+        MavenProject pluginProject = buildPluginProject( plugin, localRepository, project.getRemoteArtifactRepositories() );
-        remoteRepositories.addAll( project.getRemoteArtifactRepositories() );
-
-        MavenProject pluginProject = null;
-        for(MavenProject mp : (List<MavenProject>) session.getSortedProjects())
-        {
-            if(mp.getId().equals(project.getId()))
-            {
-                pluginProject = mp;
-                break;
-            }
-        }
-
-        if(pluginProject == null)
-        {
-            pluginProject = buildPluginProject( plugin, localRepository, remoteRepositories );
-        }
-
-        checkRequiredMavenVersion( plugin, pluginProject, localRepository, remoteRepositories );
+        checkRequiredMavenVersion( plugin, pluginProject, localRepository, project.getRemoteArtifactRepositories() );
-        ArtifactResolutionRequest request = new ArtifactResolutionRequest( pluginArtifact, localRepository, remoteRepositories );
+        ArtifactResolutionRequest request = new ArtifactResolutionRequest( pluginArtifact, localRepository, project.getRemoteArtifactRepositories() );
+        
+        
-    public void checkRequiredMavenVersion( Plugin plugin,
-                                           MavenProject pluginProject,
-                                           ArtifactRepository localRepository,
-                                           List remoteRepositories )
+    public void checkRequiredMavenVersion( Plugin plugin, MavenProject pluginProject, ArtifactRepository localRepository, List remoteRepositories )
-        if ( ( pluginProject.getPrerequisites() != null )
-             && ( pluginProject.getPrerequisites().getMaven() != null ) )
+        if ( ( pluginProject.getPrerequisites() != null ) && ( pluginProject.getPrerequisites().getMaven() != null ) )
-            DefaultArtifactVersion requiredVersion = new DefaultArtifactVersion(
-                                                                                 pluginProject.getPrerequisites()
-                                                                                              .getMaven() );
+            DefaultArtifactVersion requiredVersion = new DefaultArtifactVersion( pluginProject.getPrerequisites().getMaven() );
-                throw new PluginVersionResolutionException( plugin.getGroupId(),
-                                                            plugin.getArtifactId(),
-                                                            "Plugin requires Maven version "
-                                                                            + requiredVersion );
+                throw new PluginVersionResolutionException( plugin.getGroupId(), plugin.getArtifactId(), "Plugin requires Maven version " + requiredVersion );
-    public PluginDescriptor loadIsolatedPluginDescriptor( Plugin plugin,
-                                                          MavenProject project,
-                                                          MavenSession session )
+    public PluginDescriptor loadIsolatedPluginDescriptor( Plugin plugin, MavenProject project, MavenSession session )
-                plugin.setVersion( pluginVersionManager.resolvePluginVersion( plugin.getGroupId(),
-                                                                              plugin.getArtifactId(),
-                                                                              project,
-                                                                              session ) );
+                plugin.setVersion( pluginVersionManager.resolvePluginVersion( plugin.getGroupId(), plugin.getArtifactId(), project, session ) );
-            List componentSetDescriptors = RealmScanningUtils.scanForComponentSetDescriptors( artifact,
-                                                                                              discoverer,
-                                                                                              containerContext,
-                                                                                              "Plugin: "
-                                                                                                              + plugin.getKey() );
+            List componentSetDescriptors = RealmScanningUtils.scanForComponentSetDescriptors( artifact, discoverer, containerContext, "Plugin: " + plugin.getKey() );
-    public void enableLogging( Logger logger )
-    {
-        this.logger = logger;
-    }
-
