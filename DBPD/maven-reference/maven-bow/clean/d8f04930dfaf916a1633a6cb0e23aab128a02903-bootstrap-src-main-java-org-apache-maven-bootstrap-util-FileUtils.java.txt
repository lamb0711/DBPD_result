update to latest version

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@344117 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Arrays;
- * <p/>
+ *
- * <p/>
+ *
- * <p/>
+ *
- * <p/>
+ * <p>
- * <p/>
+ *
- * <p/>
+ *
+    public static String[] getDefaultExcludes()
+    {
+        return DirectoryScanner.DEFAULTEXCLUDES;
+    }
+
+    public static List getDefaultExcludesAsList()
+    {
+        return Arrays.asList( getDefaultExcludes() );
+    }
+
+     * Appends data to a file. The file will be created if it does not exist.
+     *
+     * @param fileName The name of the file to write.
+     * @param data The content to write to the file.
+     */
+    public static void fileAppend( String fileName, String data )
+        throws IOException
+    {
+        FileOutputStream out = new FileOutputStream( fileName, true );
+        out.write( data.getBytes() );
+        out.close();
+    }
+
+    /**
-     * <p/>
+     *
+     * TODO Should an ignore list be passed in?
+     * TODO Should a recurse flag be passed in?
+     *
-     * <p/>
+     *
+        // FIXME: I'm almost certain this // removal is unnecessary, as getAbsoluteFile() strips
+        // them. However, I'm not sure about this UNC stuff. (JT)
-        if ( !file.exists() )
+        if ( ! file.exists() )
-        if ( !file.exists() )
+        if ( ! file.exists() )
-                final String message = "File " + file + " exists and is " +
-                    "not a directory. Unable to create directory.";
+                final String message =
+                    "File " + file + " exists and is " + "not a directory. Unable to create directory.";
+    /**
+     * Return a list of files as String depending options.
+     * This method use case sensitive file name.
+     *
+     * @param directory the directory to scan
+     * @param includes the includes pattern, comma separated
+     * @param excludes the excludes pattern, comma separated
+     * @param includeBasedir true to include the base dir in each String of file
+     * @return a list of files as String
+     * @throws IOException
+     */
+        return getFileNames( directory, includes, excludes, includeBasedir, true );
+    }
+
+    /**
+     * Return a list of files as String depending options.
+     *
+     * @param directory the directory to scan
+     * @param includes the includes pattern, comma separated
+     * @param excludes the excludes pattern, comma separated
+     * @param includeBasedir true to include the base dir in each String of file
+     * @param isCaseSensitive true if case sensitive
+     * @return a list of files as String
+     */
+    public static List getFileNames( File directory, String includes, String excludes, boolean includeBasedir,
+                                     boolean isCaseSensitive )
+    {
+        scanner.setCaseSensitive( isCaseSensitive );
+
-                list.add( directory + FS + files[i] );
+                list.add( directory + FileUtils.FS + files[i] );
-        if ( !sourceDirectory.exists() )
+        if ( ! sourceDirectory.exists() )
-     * <p/>
+     *
-     * <p/>
+     *
-     * <p/>
+     *
-     * <p/>
+     * <p>
