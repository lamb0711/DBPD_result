fix for MNG-1324 "System" dependencies path non correctly added to eclipse buildpath
path is fixed by overwriting artifact file with the path returned by dependency.getSystemPath()

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@329851 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collection;
+import org.apache.maven.model.Dependency;
-    
-    
-    public static EclipseSourceDir[] buildDirectoryList( MavenProject project, File basedir, Log log, String outputDirectory )
+    public static EclipseSourceDir[] buildDirectoryList( MavenProject project, File basedir, Log log,
+                                                        String outputDirectory )
-        EclipseUtils.extractSourceDirs( directories, project.getCompileSourceRoots(), basedir, projectBaseDir, false, null );
+        EclipseUtils.extractSourceDirs( directories, project.getCompileSourceRoots(), basedir, projectBaseDir, false,
+                                        null );
-        EclipseUtils.extractResourceDirs( directories, project.getBuild().getResources(), project, basedir, projectBaseDir, false,
-                             null, log );
+        EclipseUtils.extractResourceDirs( directories, project.getBuild().getResources(), project, basedir,
+                                          projectBaseDir, false, null, log );
-        String testOutput = outputDirectory.equals( project.getBuild().getOutputDirectory() ) ?  
-                EclipseUtils.toRelativeAndFixSeparator( projectBaseDir, project.getBuild().getTestOutputDirectory(), false ) :
-                null;
-        
-        EclipseUtils.extractSourceDirs( directories, project.getTestCompileSourceRoots(), basedir, projectBaseDir, true,
-                testOutput );
+        String testOutput = outputDirectory.equals( project.getBuild().getOutputDirectory() ) ? EclipseUtils
+            .toRelativeAndFixSeparator( projectBaseDir, project.getBuild().getTestOutputDirectory(), false ) : null;
-        EclipseUtils.extractResourceDirs( directories, project.getBuild().getTestResources(), project, basedir, projectBaseDir,
-                             true, testOutput, log );
+        EclipseUtils.extractSourceDirs( directories, project.getTestCompileSourceRoots(), basedir, projectBaseDir,
+                                        true, testOutput );
+
+        EclipseUtils.extractResourceDirs( directories, project.getBuild().getTestResources(), project, basedir,
+                                          projectBaseDir, true, testOutput, log );
-
-
-    private static void extractSourceDirs( Set directories, List sourceRoots, File basedir, File projectBaseDir, boolean test,
-                                   String output )
+    private static void extractSourceDirs( Set directories, List sourceRoots, File basedir, File projectBaseDir,
+                                          boolean test, String output )
-                                     File projectBaseDir, boolean test, String output, Log log )
+                                            File projectBaseDir, boolean test, String output, Log log )
-    
-    
-    
+    public static void fixSystemScopeArtifacts( Collection artifacts, Collection dependencies )
+    {
+        // fix path for system dependencies.Artifact.getFile() returns a wrong path in mvn 2.0
+        for ( Iterator iter = artifacts.iterator(); iter.hasNext(); )
+        {
+            Artifact artifact = (Artifact) iter.next();
+            if ( Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ) )
+            {
+                String groupid = artifact.getGroupId();
+                String artifactId = artifact.getArtifactId();
+
+                for ( Iterator depIt = dependencies.iterator(); depIt.hasNext(); )
+                {
+                    Dependency dep = (Dependency) depIt.next();
+                    if ( Artifact.SCOPE_SYSTEM.equals( dep.getScope() ) && groupid.equals( dep.getGroupId() )
+                        && artifactId.equals( dep.getArtifactId() ) )
+                    {
+                        artifact.setFile( new File( dep.getSystemPath() ) );
+                        break;
+                    }
+                }
+            }
+        }
+    }
+
