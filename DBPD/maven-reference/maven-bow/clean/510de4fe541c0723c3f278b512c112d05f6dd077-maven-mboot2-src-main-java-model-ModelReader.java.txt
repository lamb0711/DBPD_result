upgrade plexus utils to 1.0.4-SNAPSHOT.
The group ID has changed, so add a bunch of exclusions to ensure the old is not picked up
fix bugs in mboot that wasn't honoring excludes.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@307294 13f79535-47bb-0310-9956-ffa450edef68

+    private final Set excluded;
+
+    private final List chain;
+
+        this( downloader, resolveTransitiveDependencies, Collections.EMPTY_SET, Collections.EMPTY_LIST );
+    }
+
+    public ModelReader( ArtifactDownloader downloader, boolean resolveTransitiveDependencies, Set excluded, List chain )
+    {
+
+        this.excluded = excluded;
+
+        this.chain = chain;
-            currentDependency = new Dependency();
+            List chain = Collections.singletonList(
+                new Dependency( groupId, artifactId, version, packaging, this.chain ) );
+            currentDependency = new Dependency( chain );
-            ModelReader p = retrievePom( parentGroupId, parentArtifactId, parentVersion, "pom", false );
+            ModelReader p = retrievePom( parentGroupId, parentArtifactId, parentVersion, "pom", false,
+                                         excluded, Collections.EMPTY_LIST );
-            addDependencies( p.getDependencies(), parentDependencies, null, Collections.EMPTY_SET );
+            addDependencies( p.getDependencies(), parentDependencies, null, excluded );
-            if ( dependency.getVersion() == null )
+            if ( !excluded.contains( dependency.getConflictId() ) )
-                Dependency managedDependency = (Dependency) managedDependencies.get( dependency.getConflictId() );
-                if ( managedDependency == null )
+                if ( dependency.getVersion() == null )
-                    throw new NullPointerException( "[" + groupId + ":" + artifactId + ":" + packaging + ":" + version +
-                        "] " + "Dependency " + dependency.getConflictId() +
-                        " is missing a version, and nothing is found in dependencyManagement. " );
+                    Dependency managedDependency = (Dependency) managedDependencies.get( dependency.getConflictId() );
+                    if ( managedDependency == null )
+                    {
+                        throw new NullPointerException( "[" + groupId + ":" + artifactId + ":" + packaging + ":" +
+                            version + "] " + "Dependency " + dependency.getConflictId() +
+                            " is missing a version, and nothing is found in dependencyManagement. " );
+                    }
+                    dependency.setVersion( managedDependency.getVersion() );
-                dependency.setVersion( managedDependency.getVersion() );
-            }
-            if ( resolveTransitiveDependencies )
-            {
-                ModelReader p = retrievePom( dependency.getGroupId(), dependency.getArtifactId(),
-                                             dependency.getVersion(), dependency.getType(),
-                                             resolveTransitiveDependencies );
+                if ( resolveTransitiveDependencies )
+                {
+                    Set excluded = new HashSet( this.excluded );
+                    excluded.addAll( dependency.getExclusions() );
-                addDependencies( p.getDependencies(), transitiveDependencies, dependency.getScope(),
-                                 dependency.getExclusions() );
+                    ModelReader p = retrievePom( dependency.getGroupId(), dependency.getArtifactId(),
+                                                 dependency.getVersion(), dependency.getType(),
+                                                 resolveTransitiveDependencies, excluded, dependency.getChain() );
+
+                    addDependencies( p.getDependencies(), transitiveDependencies, dependency.getScope(), excluded );
+                }
+                if ( "plexus".equals( d.getGroupId() ) && ( "plexus-utils".equals( d.getArtifactId() ) ||
+                    "plexus-container-default".equals( d.getArtifactId() ) ) )
+                {
+                    throw new IllegalStateException( d.getConflictId() + " found in chain " + d.getChain() );
+                }
-                                     boolean resolveTransitiveDependencies )
+                                     boolean resolveTransitiveDependencies, Set excluded, List chain )
-        ModelReader p = new ModelReader( downloader, resolveTransitiveDependencies );
+        ModelReader p = new ModelReader( downloader, resolveTransitiveDependencies, excluded, chain );
-            Dependency pom = new Dependency( groupId, artifactId, version, type );
+            Dependency pom = new Dependency( groupId, artifactId, version, type, chain );
