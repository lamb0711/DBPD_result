

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@750354 13f79535-47bb-0310-9956-ffa450edef68

-public class DefaultPluginContext implements PluginContext {
-
+public class DefaultPluginContext
+    implements PluginContext
+{
-    public Collection<MojoExecution> getMojoExecutionsForGoal(String goal) throws Exception
+    public Collection<MojoExecution> getMojoExecutionsForGoal( String goal )
+        throws Exception
-        for(PluginDescriptor descriptor : pluginCollector.getPluginDescriptors())
+        for ( PluginDescriptor descriptor : pluginCollector.getPluginDescriptors() )
-            MojoDescriptor mojoDescriptor = descriptor.getMojo(goal);
-            if(mojoDescriptor != null)
+            MojoDescriptor mojoDescriptor = descriptor.getMojo( goal );
+
+            if ( mojoDescriptor != null )
-                MojoExecution mojoExecution = new MojoExecution( mojoDescriptor ); 
-                mojoExecution.setConfiguration(
-                        Xpp3DomBuilder.build( new StringReader( mojoDescriptor.getMojoConfiguration().toString() ) ) );
-                mojoExecutions.add(mojoExecution);
+                MojoExecution mojoExecution = new MojoExecution( mojoDescriptor );
+                mojoExecution.setConfiguration( Xpp3DomBuilder.build( new StringReader( mojoDescriptor.getMojoConfiguration().toString() ) ) );
+                mojoExecutions.add( mojoExecution );
-        
+
-    public Object getMojoParameterFor(MojoExecution mojoExecution, String xPath) throws Exception {
-        Xpp3Dom mojoDescriptorConfiguration =
-                Xpp3DomBuilder.build( new StringReader(mojoExecution.getMojoDescriptor().getMojoConfiguration().toString()));
+    public Object getMojoParameterFor( MojoExecution mojoExecution, String xPath )
+        throws Exception
+    {
+        Xpp3Dom mojoDescriptorConfiguration = Xpp3DomBuilder.build( new StringReader( mojoExecution.getMojoDescriptor().getMojoConfiguration().toString() ) );
+        
-    public void executeMojo( MojoExecution mojoExecution, MavenSession session ) throws Exception
+    public void executeMojo( MojoExecution mojoExecution, MavenSession session )
+        throws Exception
-        pluginManager.executeMojo(session.getCurrentProject(), mojoExecution, session);
+        pluginManager.executeMojo( session.getCurrentProject(), mojoExecution, session );
