Improve phase-tracking, event dispatching, and align build headers as events dispatched to the default event monitor...also, add debug-level enter/exit phase output in the default event monitor. Finally, refactored code that actually renders the build plan and executes the mojos for each task-segment in the lifecycle executor, to eliminate all the duplication.

This lays the ground work for improving cache management, since I also added event types for embedder control (keep in mind that event monitors can be used to control when the project/model cache is flushed, for example).


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@631455 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.monitor.event.DefaultEventDispatcher;
+import org.apache.maven.monitor.event.DeprecationEventDispatcher;
-        EventDispatcher dispatcher = new DefaultEventDispatcher( request.getEventMonitors() );
+        EventDispatcher dispatcher = new DeprecationEventDispatcher( MavenEvents.DEPRECATIONS, request.getEventMonitors() );
-        String event = MavenEvents.REACTOR_EXECUTION;
+        String event = MavenEvents.MAVEN_EXECUTION;
-                    result.addException( tvr.generateInvalidTaskException() );
+                    Exception e = tvr.generateInvalidTaskException();
+                    result.addException( e );
+                    dispatcher.dispatchError( event, request.getBaseDirectory(), e );
+            dispatcher.dispatchError( event, request.getBaseDirectory(), e );
+
+            dispatcher.dispatchError( event, request.getBaseDirectory(), e );
+
+        dispatcher.dispatchEnd( event, request.getBaseDirectory() );
+
