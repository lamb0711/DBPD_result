Moved over the profile code to maven-project-builder. Centralizing more of the model building.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@765802 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.project.ProjectBuilderConfiguration;
-import org.codehaus.plexus.PlexusContainer;
-import org.codehaus.plexus.MutablePlexusContainer;
-    private MutablePlexusContainer container;
-    public DefaultProfileManager( PlexusContainer container, ProfileActivationContext profileActivationContext )
+    public DefaultProfileManager( ProfileActivationContext profileActivationContext )
-        this.container = (MutablePlexusContainer) container;
-    // TODO: Remove this, if possible. It uses system properties, which are not safe for IDE and other embedded environments.
-    /**
-     * @deprecated Using this is dangerous when extensions or non-global system properties are in play.
-     */
-    public DefaultProfileManager( PlexusContainer container )
-    {
-        this.container = (MutablePlexusContainer) container;
-
-        profileActivationContext = createDefaultActivationContext();
-    }
-
-            container.getLogger().warn( "Overriding profile: \'" + profileId + "\' (source: " + existing.getSource() +
+            System.out.println( "Overriding profile: \'" + profileId + "\' (source: " + existing.getSource() +
-    public static List<Profile> getActiveProfilesFrom(ProjectBuilderConfiguration config, Model model, PlexusContainer container)
+    public static List<Profile> getActiveProfilesFrom(ProfileManager globalProfileManager, Properties properties, Model model)
-	    ProfileManager externalProfileManager = config.getGlobalProfileManager();
-	    Properties props = new Properties();
-	    props.putAll(config.getExecutionProperties());
-	    props.putAll(config.getUserProperties());
+	    ProfileActivationContext profileActivationContext = (globalProfileManager == null) ? new ProfileActivationContext( new Properties(), false ):
+	        globalProfileManager.getProfileActivationContext();
+	    profileActivationContext.getExecutionProperties().putAll(properties);
-	    ProfileActivationContext profileActivationContext = (externalProfileManager == null) ? new ProfileActivationContext( new Properties(), false ):
-	        externalProfileManager.getProfileActivationContext();
-	    profileActivationContext.getExecutionProperties().putAll(props);
-	    
-	    if(externalProfileManager != null)
+	    if(globalProfileManager != null)
-	    	projectProfiles.addAll( externalProfileManager.getActiveProfiles() );    
+	    	projectProfiles.addAll( globalProfileManager.getActiveProfiles() );    
-	    ProfileManager profileManager = new DefaultProfileManager( container, profileActivationContext );
+	    ProfileManager profileManager = new DefaultProfileManager( profileActivationContext );
