some minor cleanups

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@226729 13f79535-47bb-0310-9956-ffa450edef68

-                        RepositoryCleanerConfiguration configuration, File reportsBase, Reporter repoReporter )
+                         RepositoryCleanerConfiguration configuration, File reportsBase, Reporter repoReporter )
-        File sourceBase = null;
+        File sourceBase;
-        File targetBase = null;
+        File targetBase;
-            
-            RewriteTransaction transaction = new RewriteTransaction( artifact );
-            String artifactReportPath = buildArtifactReportPath( artifact );
+            RewriteTransaction transaction = new RewriteTransaction( artifact );
-                boolean errorOccurred = false;
-
-                File artifactTarget = new File( targetRepo.getBasedir(), targetRepo.pathOf( artifact ).replace( '+',
-                                                                                                                '-' ) );
+                File artifactTarget = new File( targetRepo.getBasedir(),
+                                                targetRepo.pathOf( artifact ).replace( '+', '-' ) );
-                boolean targetMissingOrOlder = !artifactTarget.exists()
-                    || artifactTarget.lastModified() < artifactSource.lastModified();
+                boolean targetMissingOrOlder = !artifactTarget.exists() ||
+                    artifactTarget.lastModified() < artifactSource.lastModified();
-                            logger.debug( "Copying artifact[" + artifact.getId() + "] from \'" + artifactSource
-                                + "\' to \'" + artifactTarget + "\'." );
+                            logger.debug( "Copying artifact[" + artifact.getId() + "] from \'" + artifactSource +
+                                "\' to \'" + artifactTarget + "\'." );
-                        copyArtifact( artifact, artifactTarget, repoReporter );
+                        copyArtifact( artifact, artifactTarget );
-                        logger.debug( "working on digest for artifact[" + artifact.getId() + "] with groupId: \'"
-                            + artifact.getGroupId() + "\'" );
+                        logger.debug( "working on digest for artifact[" + artifact.getId() + "] with groupId: \'" +
+                            artifact.getGroupId() + "\'" );
-                    
+
-                    repoReporter.warn( "Target file for artifact is present and not stale. (Artifact: \'"
-                        + artifact.getId() + "\' in path: \'" + artifactSource + "\' with target path: "
-                        + artifactTarget + ")...SKIPPING" );
+                    repoReporter.warn( "Target file for artifact is present and not stale. (Artifact: \'" +
+                        artifact.getId() + "\' in path: \'" + artifactSource + "\' with target path: " +
+                        artifactTarget + ")...SKIPPING" );
-                    repoReporter.warn( "Cannot find source file for artifact: \'" + artifact.getId()
-                        + "\' under path: \'" + artifactSource + "\'...SKIPPING" );
+                    repoReporter.warn( "Cannot find source file for artifact: \'" + artifact.getId() +
+                        "\' under path: \'" + artifactSource + "\'...SKIPPING" );
-                        repoReporter.error( "Error rolling back conversion transaction (artifact: " + artifact.getId() + ").", re );
+                        repoReporter.error(
+                            "Error rolling back conversion transaction (artifact: " + artifact.getId() + ").", re );
-                repoReporter.error( "Error while rewriting file or POM for artifact: \'" + artifact.getId()
-                    + "\'.", e );
+                repoReporter.error( "Error while rewriting file or POM for artifact: \'" + artifact.getId() + "\'.",
+                                    e );
-        logger.info( "Actual number of artifacts rewritten: " + rewritten.size() + " (" + ( rewritten.size() * 2 )
-            + " including POMs)." );
+        logger.info( "Actual number of artifacts rewritten: " + rewritten.size() + " (" + rewritten.size() * 2 +
+            " including POMs)." );
-                                 ArtifactRepository sourceRepo, File targetBase, ArtifactRepository targetRepo,
-                                 Reporter artifactReporter, boolean reportOnly )
+                                  ArtifactRepository sourceRepo, File targetBase, ArtifactRepository targetRepo,
+                                  Reporter artifactReporter, boolean reportOnly )
-        freshenSupplementalMetadata( snapshot, snapshotSource, snapshotTarget, transaction, artifactReporter,
-                                     reportOnly );
+        freshenSupplementalMetadata( snapshotSource, snapshotTarget, transaction, artifactReporter, reportOnly );
-        freshenSupplementalMetadata( release, releaseSource, releaseTarget, transaction, artifactReporter, reportOnly );
+        freshenSupplementalMetadata( releaseSource, releaseTarget, transaction, artifactReporter, reportOnly );
-                freshenSupplementalMetadata( pom, sourcePom, targetPom, transaction, artifactReporter, reportOnly );
+                freshenSupplementalMetadata( sourcePom, targetPom, transaction, artifactReporter, reportOnly );
-        else if( targetPom.exists() )
+        else if ( targetPom.exists() )
-        
+
-        
+
-                wroteBridge = bridgePomLocations( pom, targetPom, bridgedTargetPom, artifactReporter,
-                                                          transaction, reportOnly );
+                wroteBridge = bridgePomLocations( targetPom, bridgedTargetPom, artifactReporter, transaction,
+                                                  reportOnly );
-        
+
-            digestVerifier.verifyDigest( sourcePom, bridgedTargetPom, transaction, artifactReporter,
-                                         reportOnly );
+            digestVerifier.verifyDigest( sourcePom, bridgedTargetPom, transaction, artifactReporter, reportOnly );
-    private void freshenSupplementalMetadata( ArtifactMetadata metadata, File source, File target,
-                                             RewriteTransaction transaction, Reporter artifactReporter,
-                                             boolean reportOnly )
+    private void freshenSupplementalMetadata( File source, File target, RewriteTransaction transaction,
+                                              Reporter artifactReporter, boolean reportOnly )
-    private String buildArtifactReportPath( Artifact artifact )
-    {
-        String classifier = artifact.getClassifier();
-        String groupId = artifact.getGroupId().replace( '.', '/' );
-        String artifactId = artifact.getArtifactId();
-        String type = artifact.getType();
-        String version = artifact.getVersion();
-
-        return groupId + "/" + artifactId + "/" + type + "/"
-            + ( ( classifier != null ) ? ( classifier + "-" ) : ( "" ) ) + version + ".report.txt";
-    }
-
-    private void copyArtifact( Artifact artifact, File artifactTarget, Reporter reporter )
+    private void copyArtifact( Artifact artifact, File artifactTarget )
-    private boolean bridgePomLocations( ArtifactMetadata pom, File targetPom, File bridgedTargetPom, Reporter reporter,
-                                       RewriteTransaction transaction, boolean reportOnly )
+    private boolean bridgePomLocations( File targetPom, File bridgedTargetPom, Reporter reporter,
+                                        RewriteTransaction transaction, boolean reportOnly )
-            reporter.warn( "Cannot create legacy-compatible copy of POM at: " + targetPom
-                + "; legacy-compatible path is the same as the converted POM itself." );
+            reporter.warn( "Cannot create legacy-compatible copy of POM at: " + targetPom +
+                "; legacy-compatible path is the same as the converted POM itself." );
-        freshenSupplementalMetadata( pom, targetPom, bridgedTargetPom, transaction, reporter, reportOnly );
+        freshenSupplementalMetadata( targetPom, bridgedTargetPom, transaction, reporter, reportOnly );
