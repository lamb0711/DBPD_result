Working on cleaning up exceptions and reporting (these changes are from before the break I took to work on memory profiling in maven and plexus).

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@593294 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.Plugin;
+import org.apache.maven.plugin.version.PluginVersionNotFoundException;
+import org.apache.maven.plugin.version.PluginVersionResolutionException;
+        // LifecycleExecutionException(String, MavenProject, InvalidDependencyVersionException)
+        // LifecycleExecutionException(String, MavenProject, InvalidVersionSpecificationException)
+        // LifecycleExecutionException(String, MavenProject, ArtifactNotFoundException)
+        // LifecycleExecutionException(String, MavenProject, ArtifactResolutionException)
+        // LifecycleExecutionException(String, MavenProject, PluginVersionNotFoundException)
+        // LifecycleExecutionException(String, MavenProject, PluginVersionResolutionException)
-        // LifecycleExecutionException(String, MavenProject, ArtifactNotFoundException)
-        // LifecycleExecutionException(String, MavenProject, ArtifactResolutionException)
-        // LifecycleExecutionException(String, MavenProject, InvalidDependencyVersionException)
-        // LifecycleExecutionException(String, MavenProject, InvalidVersionSpecificationException)
-        // LifecycleExecutionException(String, MavenProject, MojoExecutionException)
-        // LifecycleExecutionException(String, MavenProject, PlexusContainerException)
-        // LifecycleExecutionException(String, MavenProject, PluginVersionNotFoundException)
-        // LifecycleExecutionException(String, MavenProject, PluginVersionResolutionException)
+        //    ...this includes PluginExecutionException, which wraps MojoExecutionException
+        //    with MojoExecution and MavenProject context info.
+
+        boolean result = false;
-//                Plugin plugin = ( (PluginNotFoundException) cause ).getPlugin();
-
+                Plugin plugin = ( (PluginNotFoundException) cause ).getPlugin();
+                writer.write( "Maven cannot find a plugin required by your build:" );
+                writer.write( NEWLINE );
+                writer.write( "Group-Id: " );
+                writer.write( plugin.getGroupId() );
+                writer.write( NEWLINE );
+                writer.write( "Artifact-Id: " );
+                writer.write( plugin.getArtifactId() );
+                writer.write( NEWLINE );
+                writer.write( "Version: " );
+                writer.write( plugin.getVersion() );
+                writer.write( NEWLINE );
-                return true;
+                writer.write( NEWLINE );
+                writer.write( NEWLINE );
+                writer.write( "NOTE: If the above Group-Id or Artifact-Id are incorrect," );
+                writer.write( NEWLINE );
+                writer.write( "check that the corresponding <plugin/> section in your POM is correct." );
+                writer.write( NEWLINE );
+                writer.write( "If you specified this plugin directly using something like 'javadoc:javadoc'," );
+                writer.write( NEWLINE );
+                writer.write( "check that the <pluginGroups/> section in your $HOME/.m2/settings.xml contains the" );
+                writer.write( NEWLINE );
+                writer.write( "proper groupId for the plugin you are trying to use (each groupId goes in a separate" );
+                writer.write( NEWLINE );
+                writer.write( "<pluginGroup/> element within the <pluginGroups/> section." );
+                writer.write( NEWLINE );
+
+                result = true;
+            }
+            else if ( cause instanceof ProjectBuildingException )
+            {
+                result = handleProjectBuildingException( (ProjectBuildingException) cause, showStackTraces, writer );
+            }
+            else if ( cause instanceof ArtifactNotFoundException )
+            {
+                writer.write( NEWLINE );
+                writer.write( "One or more project dependency artifacts are missing." );
+                writer.write( NEWLINE );
+                writer.write( NEWLINE );
+                writer.write( "Reason: " );
+                writer.write( cause.getMessage() );
+                writer.write( NEWLINE );
+
+                result = true;
+            }
+            else if ( cause instanceof ArtifactNotFoundException )
+            {
+                writer.write( NEWLINE );
+                writer.write( "Maven encountered an error while resolving one or more project dependency artifacts." );
+                writer.write( NEWLINE );
+                writer.write( NEWLINE );
+                writer.write( "Reason: " );
+                writer.write( cause.getMessage() );
+                writer.write( NEWLINE );
+
+                result = true;
+            }
+            else if ( cause instanceof PluginVersionNotFoundException )
+            {
+                writer.write( NEWLINE );
+                writer.write( "Cannot find a valid version for plugin: " );
+                writer.write( NEWLINE );
+                writer.write( "Group-Id: " );
+                writer.write( ((PluginVersionNotFoundException)cause).getGroupId() );
+                writer.write( NEWLINE );
+                writer.write( "Artifact-Id: " );
+                writer.write( ((PluginVersionNotFoundException)cause).getArtifactId() );
+                writer.write( NEWLINE );
+                writer.write( NEWLINE );
+                writer.write( "Reason: " );
+                writer.write( cause.getMessage() );
+                writer.write( NEWLINE );
+                writer.write( NEWLINE );
+                writer.write( "Please ensure that your proxy information is specified correctly in $HOME/.m2/settings.xml." );
+                writer.write( NEWLINE );
+
+                result = true;
+            }
+            else if ( cause instanceof PluginVersionResolutionException )
+            {
+                writer.write( NEWLINE );
+                writer.write( "Maven encountered an error while trying to resolve a valid version for plugin: " );
+                writer.write( NEWLINE );
+                writer.write( "Group-Id: " );
+                writer.write( ((PluginVersionNotFoundException)cause).getGroupId() );
+                writer.write( NEWLINE );
+                writer.write( "Artifact-Id: " );
+                writer.write( ((PluginVersionNotFoundException)cause).getArtifactId() );
+                writer.write( NEWLINE );
+                writer.write( NEWLINE );
+                writer.write( "Reason: " );
+                writer.write( cause.getMessage() );
+                writer.write( NEWLINE );
+                writer.write( NEWLINE );
+                writer.write( "Please ensure that your proxy information is specified correctly in $HOME/.m2/settings.xml." );
+                writer.write( NEWLINE );
+
+                result = true;
-        return false;
+        MavenProject project = e.getProject();
+
+        writer.write( NEWLINE );
+        writer.write( "While building project with id: " );
+        writer.write( project.getId() );
+        writer.write( NEWLINE );
+        if ( project.getFile() != null )
+        {
+            writer.write( "Project File: " );
+            writer.write( project.getFile().getAbsolutePath() );
+        }
+        writer.write( NEWLINE );
+
+        return result;
-        writer.write( "Project Id: " );
+        writer.write( "Failing project's id: " );
