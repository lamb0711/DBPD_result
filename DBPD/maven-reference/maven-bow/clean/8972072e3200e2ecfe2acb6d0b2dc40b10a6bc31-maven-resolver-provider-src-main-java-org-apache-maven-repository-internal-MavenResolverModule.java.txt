[MNG-6110] renamed 'maven-aether-provider' to 'maven-resolver-provider'
-
-
+import com.google.inject.AbstractModule;
+import com.google.inject.Provides;
+import com.google.inject.name.Names;
-import org.eclipse.aether.impl.AetherModule;
+import org.eclipse.aether.impl.guice.AetherModule;
-import com.google.inject.AbstractModule;
-import com.google.inject.Provides;
-import com.google.inject.name.Names;
-
-public final class MavenAetherModule
+public final class MavenResolverModule
-        bind( ArtifactDescriptorReader.class ) //
-        .to( DefaultArtifactDescriptorReader.class ).in( Singleton.class );
-        bind( VersionResolver.class ) //
-        .to( DefaultVersionResolver.class ).in( Singleton.class );
-        bind( VersionRangeResolver.class ) //
-        .to( DefaultVersionRangeResolver.class ).in( Singleton.class );
-        bind( MetadataGeneratorFactory.class ).annotatedWith( Names.named( "snapshot" ) ) //
-        .to( SnapshotMetadataGeneratorFactory.class ).in( Singleton.class );
-        bind( MetadataGeneratorFactory.class ).annotatedWith( Names.named( "versions" ) ) //
-        .to( VersionsMetadataGeneratorFactory.class ).in( Singleton.class );
-        bind( ModelBuilder.class ) //
-        .toInstance( new DefaultModelBuilderFactory().newInstance() );
+        bind( ArtifactDescriptorReader.class ).to( DefaultArtifactDescriptorReader.class ).in( Singleton.class );
+        bind( VersionResolver.class ).to( DefaultVersionResolver.class ).in( Singleton.class );
+        bind( VersionRangeResolver.class ).to( DefaultVersionRangeResolver.class ).in( Singleton.class );
+        bind( MetadataGeneratorFactory.class ).annotatedWith( Names.named( "snapshot" ) )
+            .to( SnapshotMetadataGeneratorFactory.class ).in( Singleton.class );
+
+        bind( MetadataGeneratorFactory.class ).annotatedWith( Names.named( "versions" ) )
+            .to( VersionsMetadataGeneratorFactory.class ).in( Singleton.class );
+
+        bind( ModelBuilder.class ).toInstance( new DefaultModelBuilderFactory().newInstance() );
-    Set<MetadataGeneratorFactory> provideMetadataGeneratorFactories( @Named( "snapshot" )
-                                                                     MetadataGeneratorFactory snapshot,
-                                                                     @Named( "versions" )
-                                                                     MetadataGeneratorFactory versions )
+    Set<MetadataGeneratorFactory> provideMetadataGeneratorFactories(
+        @Named( "snapshot" ) MetadataGeneratorFactory snapshot,
+        @Named( "versions" ) MetadataGeneratorFactory versions )
-        Set<MetadataGeneratorFactory> factories = new HashSet<>();
+        Set<MetadataGeneratorFactory> factories = new HashSet<>( 2 );
