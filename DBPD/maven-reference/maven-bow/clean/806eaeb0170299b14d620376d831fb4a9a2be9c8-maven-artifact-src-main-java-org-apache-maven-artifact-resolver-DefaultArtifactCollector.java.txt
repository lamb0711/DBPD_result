[MNG-1895] merge changes from branch


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@379650 13f79535-47bb-0310-9956-ffa450edef68

-                        // If it was optional and not a direct dependency, 
+                        // If it was optional and not a direct dependency,
-                    // TODO: why do we force the version on it? what if they don't match?
-                    if ( previousRange == null )
-                    {
-                        // version was already resolved
-                        node.getArtifact().setVersion( previous.getArtifact().getVersion() );
-                    }
-                    else if ( currentRange == null )
-                    {
-                        // version was already resolved
-                        previous.getArtifact().setVersion( node.getArtifact().getVersion() );
-                    }
-                    else
+                    if ( previousRange != null && currentRange != null )
-                    ResolutionNode nearest, farthest;
+                    ResolutionNode nearest;
+                    ResolutionNode farthest;
-                    /* if we need to update scope of nearest to use farthest scope */
-                        fireEvent( ResolutionListener.UPDATE_SCOPE, listeners, nearest, farthest.getArtifact() );
-                        /* we need nearest version but farthest scope */
+                        // if we need to update scope of nearest to use farthest scope, use the nearest version, but farthest scope
-     * Check if the scope of the nearest needs to be updated with the scope of the farthest.
+     * Check if the scope needs to be updated.
-     * @param farthest farthest resolution node
-     * @param nearest nearest resolution node
+     *
+     * @param farthest  farthest resolution node
+     * @param nearest   nearest resolution node
-    private boolean checkScopeUpdate( ResolutionNode farthest, ResolutionNode nearest, List listeners )
+    boolean checkScopeUpdate( ResolutionNode farthest, ResolutionNode nearest, List listeners )
+        if ( updateScope )
+        {
+            fireEvent( ResolutionListener.UPDATE_SCOPE, listeners, nearest, farthestArtifact );
+
+            // previously we cloned the artifact, but it is more effecient to just update the scope
+            // if problems are later discovered that the original object needs its original scope value, cloning may
+            // again be appropriate
+            nearestArtifact.setScope( farthestArtifact.getScope() );
+        }
+
