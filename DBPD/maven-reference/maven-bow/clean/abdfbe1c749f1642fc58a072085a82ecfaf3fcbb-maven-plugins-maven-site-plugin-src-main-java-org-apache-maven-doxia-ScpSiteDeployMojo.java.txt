o store temp file in temp directory, not target which may not exist
o error out if site doesn't exist to copy.
o clean up

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@290565 13f79535-47bb-0310-9956-ffa450edef68

-/*
- * Copyright (c) 2005 Your Corporation. All Rights Reserved.
- */
+/*
+ * Copyright 2001-2005 The Apache Software Foundation.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
-
+ *
-    private String inputDirectory;
-
-    /**
-     * @parameter expression="${project.build.directory}"
-     * @required
-     */
-    private String workingDirectory;
+    private File inputDirectory;
-        File baseDir = new File( inputDirectory );
+        if ( !inputDirectory.exists() )
+        {
+            throw new MojoExecutionException( "The site does not exist, please run site:site first" );
+        }
-            zipFile = File.createTempFile( "site", ".zip", new File( workingDirectory ) );
+            zipFile = File.createTempFile( "site", ".zip" );
+        DistributionManagement distributionManagement = project.getDistributionManagement();
+
+        if ( distributionManagement == null )
+        {
+            throw new MojoExecutionException( "Missing distribution management information in the project" );
+        }
+
+        Site site = distributionManagement.getSite();
+
+        if ( site == null )
+        {
+            throw new MojoExecutionException(
+                "Missing site information in the distribution management element in the project.." );
+        }
+
+        String url = site.getUrl();
+
+        String id = site.getId();
+
+        if ( url == null )
+        {
+            throw new MojoExecutionException( "The URL to the site is missing in the project descriptor." );
+        }
+
+        Repository repository = new Repository( id, url );
+
+        if ( !"scp".equals( repository.getProtocol() ) )
+        {
+            throw new MojoExecutionException(
+                "The deploy mojo currently only supports site deployment using the 'scp' protocol." );
+        }
+
+
-            DistributionManagement distributionManagement = project.getDistributionManagement();
-
-            if ( distributionManagement == null )
-            {
-                throw new MojoExecutionException( "Missing distribution management information in the project" );
-            }
-
-            Site site = distributionManagement.getSite();
-
-            if ( site == null )
-            {
-                throw new MojoExecutionException( "Missing site information in the distribution management element in the project.." );
-            }
-
-            String url = site.getUrl();
-
-            String id = site.getId();
-
-            if ( url == null )
-            {
-                throw new MojoExecutionException( "The URL to the site is missing in the project descriptor." );
-            }
-
-            Repository repository = new Repository( id, url );
-
-            if ( !"scp".equals( repository.getProtocol() ) )
-            {
-                throw new MojoExecutionException( "The deploy mojo currently only supports site deployment using the 'scp' protocol." );
-            }
-
-            List files = FileUtils.getFileNames( baseDir, "**/**", "", false );
+            List files = FileUtils.getFileNames( inputDirectory, "**/**", "", false );
-            createZip( files, zipFile, baseDir );
+            createZip( files, zipFile, inputDirectory );
-
