- Externalize archiver methods
- Update JarMojo
- Implements WarMojo (Not tested yet)


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163458 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.archiver.MavenArchiver;
-import org.codehaus.plexus.archiver.jar.JarArchiver;
-        MavenProject project = (MavenProject)request.getParameter("project");
-
-        String manifest = (String) request.getParameter( "manifest" );
-
-        boolean compress = new Boolean( (String) request.getParameter( "compress" ) ).booleanValue();
-
-        boolean index = new Boolean( (String) request.getParameter( "index" ) ).booleanValue();
-
-
-        JarArchiver archiver = new JarArchiver();
-        archiver.addDirectory( new File( outputDirectory ), new String[] { "**/**" }, new String[] { "**/package.html" } );
-        archiver.addFile( project.getFile(), "META-INF/maven/pom.xml" );
+        MavenArchiver archiver = new MavenArchiver();
-        if (manifest != null && ! "".equals( manifest ) )
-        {
-            File manifestFile = new File( manifest );
-            archiver.setManifest( manifestFile );
-        }
+        archiver.setOutputFile( jarFile );
-        // Configure the jar
-        archiver.addConfiguredManifest( getManifest( request ) );
-
-        archiver.setCompress( compress );
-        archiver.setIndex( index );
-        archiver.setDestFile( jarFile );
+        archiver.getArchiver().addDirectory( new File( outputDirectory ), new String[] { "**/**" }, new String[] { "**/package.html" } );
-        archiver.createArchive();
+        archiver.createArchive( request );
