o move some shared execution request handling code to the super class
o cleanup the plugin manager interface, we don't need to set the local
  repository as that information is in the request and session.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163259 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.lifecycle.session.MavenSession;
+import org.apache.maven.lifecycle.session.MavenSessionPhaseManager;
+import org.apache.maven.plugin.PluginManager;
+import org.apache.maven.project.MavenProject;
+import org.apache.maven.project.MavenProjectBuilder;
+import org.codehaus.plexus.PlexusConstants;
+import org.codehaus.plexus.PlexusContainer;
+import org.codehaus.plexus.context.Context;
+import org.codehaus.plexus.context.ContextException;
+import org.codehaus.plexus.i18n.I18N;
+import org.codehaus.plexus.personality.plexus.lifecycle.phase.Contextualizable;
-public class AbstractMavenExecutionRequestHandler
+public abstract class AbstractMavenExecutionRequestHandler
+    implements MavenExecutionRequestHandler, Contextualizable
+    // ----------------------------------------------------------------------
+    // Components
+    // ----------------------------------------------------------------------
+
+    protected MavenProjectBuilder projectBuilder;
+
+    protected PluginManager pluginManager;
+
+    protected PlexusContainer container;
+
+    protected MavenSessionPhaseManager lifecycleManager;
+
+    protected I18N i18n;
+
+    // ----------------------------------------------------------------------
+    // Methods used by all execution request handlers
+    // ----------------------------------------------------------------------
+
+    //!! We should probably have the execution request handler create the session as
+    // the session type would be specific to the request i.e. having a project
+    // or not.
+
+    protected MavenSession createSession( MavenExecutionRequest request, MavenProject project )
+    {
+        MavenSession session = new MavenSession( container,
+                                                 pluginManager,
+                                                 project,
+                                                 request.getLocalRepository(),
+                                                 request.getGoals() );
+
+        return session;
+    }
+
+    // ----------------------------------------------------------------------
+    // Lifecylce Management
+    // ----------------------------------------------------------------------
+
+    public void contextualize( Context context ) throws ContextException
+    {
+        container = (PlexusContainer) context.get( PlexusConstants.PLEXUS_KEY );
+    }
