Working on MNG-607

o Changed MavenMetadataSource to a component, to avoid having to lookup artifactFactory and projectBuilder in order to 
  construct it.

o Added add(..) method to ScmBean in the release plugin to allow addition of release-pom.xml

o Changed the PrepareReleaseMojo to resolve ONLY version and parent-version for the normal pom.xml, and fully resolve all
  artifacts used in the release-pom.xml, including version, parent-version, dependency closure (given by project.getArtifacts()), plugins, and reports. It will then add the release-pom.xml, and (attempt to) delete it before performing the final commit for next development version.

o Added some mapping methods to ArtifactUtils, to key by artifact.getId, and to create an Artifact.getId()-compatible string from parameters.

o Added TestProjectBuilder to remove the requirement in ProjectClasspathTest to modify the fields of the project builder directly.

o Cleaned up the AbstractReleaseMojo and PrepareReleaseMojo to avoid container lookups...they're now mojo parameters with the 'component.' prefix.

NOTE: Next step is to figure out how to use maven-scm to remove an SCM resource, to enable the prepare mojo to take the release-pom.xml back out of HEAD after the tag is complete.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@224413 13f79535-47bb-0310-9956-ffa450edef68

-import org.codehaus.plexus.PlexusConstants;
-import org.codehaus.plexus.PlexusContainer;
-import org.codehaus.plexus.context.Context;
-import org.codehaus.plexus.context.ContextException;
-import org.codehaus.plexus.personality.plexus.lifecycle.phase.Contextualizable;
-import java.util.Properties;
+import java.io.File;
-import java.io.File;
+import java.util.Properties;
-    implements Contextualizable
-    private PlexusContainer container;
-
+    /**
+     * @parameter expression="${org.apache.maven.scm.manager.ScmManager}"
+     * @required
+     * @readonly
+     */
-    public PlexusContainer getContainer()
-    {
-        return container;
-    }
-
-            initScmManager();
-
-        try
-        {
-            executeTask();
-        }
-        finally
-        {
-            releaseScmManager();
-        }
+        executeTask();
-    private void initScmManager()
-        throws Exception
-    {
-        scmManager = (ScmManager) container.lookup( ScmManager.ROLE );
-    }
-
-    private void releaseScmManager()
-    {
-        try
-        {
-            container.release( scmManager );
-        }
-        catch ( Exception e )
-        {
-            getLog().warn( "Error releasing component - ignoring", e );
-        }
-    }
-
-    public void contextualize( Context context )
-        throws ContextException
-    {
-        container = (PlexusContainer) context.get( PlexusConstants.PLEXUS_KEY );
-    }
