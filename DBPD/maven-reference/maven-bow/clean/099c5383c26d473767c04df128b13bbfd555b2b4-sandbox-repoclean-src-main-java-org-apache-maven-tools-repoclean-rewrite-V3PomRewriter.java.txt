o Refactored RepositoryCleaner to use DiscoveryPhase and RewritePhase.
o Added the ability to read a pom and figure out whether it's a v4 pom (based on presence of modelVersion)
o Added a more accurate counter for artifacts that are actually rewritten successfully, rather than just the ones that enter the rewriting process.
o Probably need to add the phases still...


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@169041 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.tools.repoclean.report.FileReporter;
+import org.apache.maven.tools.repoclean.report.Reporter;
-import org.codehaus.plexus.util.IOUtil;
-import java.io.File;
-import java.io.FileReader;
-import java.io.FileWriter;
+import java.io.Reader;
+import java.io.Writer;
-public class V3PomRewriter implements ArtifactPomRewriter
+public class V3PomRewriter
+    implements ArtifactPomRewriter
-    public void rewrite( Artifact artifact, File from, File to, FileReporter reporter, boolean reportOnly )
+    public void rewrite( Artifact artifact, Reader from, Writer to, Reporter reporter, boolean reportOnly )
-        if ( from.exists() )
+        if( from != null )
-            FileReader fromReader = null;
+            org.apache.maven.model.v3_0_0.Model v3Model = null;
-                org.apache.maven.model.v3_0_0.Model v3Model = null;
-                try
-                {
-                    fromReader = new FileReader( from );
+                MavenXpp3Reader v3Reader = new MavenXpp3Reader();
-                    MavenXpp3Reader v3Reader = new MavenXpp3Reader();
-
-                    v3Model = v3Reader.read( fromReader );
-                }
-                catch ( Exception e )
-                {
-                    reporter.error( "Invalid v3 POM at: \'" + from + "\'. Cannot read.", e );
-
-                    throw e;
-                }
-
-                if ( v3Model != null )
-                {
-                    v4Model = translator.translate( v3Model, reporter );
-                }
+                v3Model = v3Reader.read( from );
-            finally
+            catch ( Exception e )
-                IOUtil.close( fromReader );
+                reporter.error( "Invalid v3 POM at: \'" + from + "\'. Cannot read.", e );
+
+                throw e;
+            }
+            
+            if ( v3Model != null )
+            {
+                v4Model = translator.translate( v3Model, reporter );
-            reporter.warn( "POM for artifact[" + artifact.getId() +
-                           "] does not exist in source repository. We will create a skeletal one here." );
-
-                File toParent = to.getParentFile();
-                if ( !toParent.exists() )
-                {
-                    toParent.mkdirs();
-                }
-
-                FileWriter toWriter = null;
-                try
-                {
-                    toWriter = new FileWriter( to );
-                    MavenXpp3Writer v4Writer = new MavenXpp3Writer();
-                    v4Writer.write( toWriter, v4Model );
-                }
-                finally
-                {
-                    IOUtil.close( toWriter );
-                }
+                MavenXpp3Writer v4Writer = new MavenXpp3Writer();
+                v4Writer.write( to, v4Model );
-    private void validateV4Basics( Model model, Artifact artifact, FileReporter reporter )
+    private void validateV4Basics( Model model, Artifact artifact, Reporter reporter )
