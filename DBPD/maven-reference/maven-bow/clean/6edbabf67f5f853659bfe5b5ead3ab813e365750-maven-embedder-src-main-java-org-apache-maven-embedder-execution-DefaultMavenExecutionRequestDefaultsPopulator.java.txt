o we'll use the embedder now for some default values because we still have an asymmetry for many of the methods that 
  don't use an execution request, or configuration, but require direct use of things like settings and the local repository. an
  example being the profile manager.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@512541 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.embedder.MavenEmbedderConfiguration;
+import org.apache.maven.artifact.repository.ArtifactRepository;
+import org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout;
+import org.apache.maven.embedder.configuration.Configuration;
+import org.apache.maven.embedder.MavenEmbedder;
+import org.codehaus.plexus.util.StringUtils;
-    private MavenTools mavenTools;
-
+    private ArtifactRepositoryLayout defaultArtifactRepositoryLayout;
+
-    public MavenExecutionRequest populateDefaults( MavenExecutionRequest request, MavenEmbedderConfiguration embedderConfiguration )
+    public MavenExecutionRequest populateDefaults( MavenExecutionRequest request, MavenEmbedder embedder )
-        // Settings
-
-            // A local repository set in the request should win over what's in a settings.xml file.
-            String userSettingsLocation = request.getSettingsFile();
-            if ( userSettingsLocation == null )
-            {
-                File userSettingsFile = embedderConfiguration.getUserSettingsFile();
-                if ( userSettingsFile != null )
-                {
-                    userSettingsLocation = userSettingsFile.getAbsolutePath();
-                }
-            }
-
-            File userSettingsPath = null; //mavenTools.getUserSettingsPath( userSettingsLocation );
-            if ( userSettingsLocation != null )
-            {
-                userSettingsPath = new File( userSettingsLocation );
-            }
-
-            File globalSettingsFile = null; //mavenTools.getGlobalSettingsPath();
-            
-            File configGlobalSettings = embedderConfiguration.getGlobalSettingsFile();
-            if ( configGlobalSettings != null )
-            {
-                globalSettingsFile = configGlobalSettings;
-            }
-
-            try
-            {
-                request.setSettings( mavenTools.buildSettings( userSettingsPath, globalSettingsFile, request
-                    .isInteractiveMode(), request.isOffline(), request.isUsePluginRegistry(), request
-                    .isUsePluginUpdateOverride(), request.getSettingsBuilderAdvice() ) );
-            }
-            catch ( SettingsConfigurationException e )
-            {
-                throw new MavenEmbedderException( "Error processing settings.xml.", e );
-            }
+            request.setSettings( embedder.getSettings() );
-        // Local repository
-
-            String localRepositoryPath = mavenTools.getLocalRepositoryPath( request.getSettings() );
-
-            if ( request.getLocalRepository() == null )
-            {
-                request.setLocalRepository( mavenTools.createLocalRepository( new File( localRepositoryPath ) ) );
-            }
+            request.setLocalRepository( embedder.getLocalRepository() );
-        if ( request.getSettings().isOffline() )
+        if ( request.isOffline() )
