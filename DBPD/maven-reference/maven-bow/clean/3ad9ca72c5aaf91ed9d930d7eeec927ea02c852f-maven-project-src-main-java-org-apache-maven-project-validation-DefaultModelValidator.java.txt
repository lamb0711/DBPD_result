validate repositories in the POM

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@307035 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.Repository;
-            
+
-                result.addMessage( "For dependency " + d + ": only dependency with system scope can specify systemPath." );
+                result.addMessage(
+                    "For dependency " + d + ": only dependency with system scope can specify systemPath." );
-                                        d.getArtifactId() );
+                                                  d.getArtifactId() );
-                                        d.getGroupId() );
-                
+                                                  d.getGroupId() );
+
-                    result.addMessage( "For managed dependency " + d + ": system-scoped dependency must specify systemPath." );
+                    result.addMessage(
+                        "For managed dependency " + d + ": system-scoped dependency must specify systemPath." );
-                    result.addMessage( "For managed dependency " + d + ": only dependency with system scope can specify systemPath." );
+                    result.addMessage(
+                        "For managed dependency " + d + ": only dependency with system scope can specify systemPath." );
+        validateRepositories( result, model.getRepositories(), "repositories.repository" );
+
+        validateRepositories( result, model.getPluginRepositories(), "pluginRepositories.pluginRepository" );
+
+    private void validateRepositories( ModelValidationResult result, List repositories, String prefix )
+    {
+        for ( Iterator it = repositories.iterator(); it.hasNext(); )
+        {
+            Repository repository = (Repository) it.next();
+
+            validateStringNotEmpty( prefix + ".id", result, repository.getId() );
+
+            validateStringNotEmpty( prefix + ".url", result, repository.getUrl() );
+        }
+    }
+
-    private boolean validateSubElementStringNotEmpty( Object subElementInstance, String fieldName, ModelValidationResult result, String string )
+    private boolean validateSubElementStringNotEmpty( Object subElementInstance, String fieldName,
+                                                      ModelValidationResult result, String string )
-    
+
-    private boolean validateSubElementNotNull( Object subElementInstance, String fieldName, ModelValidationResult result, Object object )
+    private boolean validateSubElementNotNull( Object subElementInstance, String fieldName,
+                                               ModelValidationResult result, Object object )
