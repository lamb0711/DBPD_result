*** empty log message ***


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163260 13f79535-47bb-0310-9956-ffa450edef68

-    private boolean logResults = true;
-
-        MavenProject project = getProject( ((MavenProjectExecutionRequest) request).getPom(), request.getLocalRepository() );
+        Date start = null;
-        Date fullStop;
-
-        Date fullStart = new Date();
+        Date finish = null;
+            MavenProject project = getProject( ( (MavenProjectExecutionRequest) request ).getPom(), request.getLocalRepository() );
+
+            start = new Date();
+
+            finish = new Date();
+
-            if ( logResults )
-            {
-                line();
+            response.setStart( start );
-                getLogger().error( "BUILD ERROR" );
+            response.setFinish( finish );
-                line();
-
-                getLogger().error( "Cause: ", e );
-
-                line();
-
-                stats( fullStart, new Date() );
-
-                line();
-            }
+            logError( response );
-        fullStop = new Date();
+        finish = new Date();
-        if ( logResults )
+        response.setStart( start );
+
+        response.setFinish( finish );
+
+        if ( response.isExecutionFailure() )
-            if ( response.isExecutionFailure() )
-            {
-                line();
-
-                getLogger().info( "BUILD FAILURE" );
-
-                line();
-
-                getLogger().info( "Reason: " + response.getFailureResponse().shortMessage() );
-
-                line();
-
-                getLogger().info( response.getFailureResponse().longMessage() );
-
-                line();
-
-                stats( fullStart, fullStop );
-
-                line();
-            }
-            else
-            {
-                line();
-
-                getLogger().info( "BUILD SUCCESSFUL" );
-
-                line();
-
-                stats( fullStart, fullStop );
-
-                line();
-            }
-        }
-    }
-
-    protected void stats( Date fullStart, Date fullStop )
-    {
-        long fullDiff = fullStop.getTime() - fullStart.getTime();
-
-        getLogger().info( "Total time: " + formatTime( fullDiff ) );
-
-        getLogger().info( "Finished at: " + fullStop );
-
-        final long mb = 1024 * 1024;
-
-        System.gc();
-
-        Runtime r = Runtime.getRuntime();
-
-        getLogger().info( "Final Memory: " + ( ( r.totalMemory() - r.freeMemory() ) / mb ) + "M/" + ( r.totalMemory() / mb ) + "M" );
-    }
-
-    protected void line()
-    {
-        getLogger().info( "----------------------------------------------------------------------------" );
-    }
-
-    protected static String formatTime( long ms )
-    {
-        long secs = ms / 1000;
-
-        long min = secs / 60;
-
-        secs = secs % 60;
-
-        if ( min > 0 )
-        {
-            return min + " minutes " + secs + " seconds";
+            logFailure( response );
-            return secs + " seconds";
+            logSuccess( response );
