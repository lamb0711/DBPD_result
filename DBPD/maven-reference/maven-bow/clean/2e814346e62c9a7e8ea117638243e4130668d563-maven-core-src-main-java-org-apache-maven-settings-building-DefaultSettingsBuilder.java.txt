o Refactored settings validation to support more extensive problem descriptor

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@928934 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.ArrayList;
-import org.apache.maven.settings.validation.SettingsValidationResult;
-        List<SettingsProblem> problems = new ArrayList<SettingsProblem>();
+        DefaultSettingsProblemCollector problems = new DefaultSettingsProblemCollector( null );
+        problems.setSource( "" );
+
-        if ( hasErrors( problems ) )
+        if ( hasErrors( problems.getProblems() ) )
-            throw new SettingsBuildingException( problems );
+            throw new SettingsBuildingException( problems.getProblems() );
-        return new DefaultSettingsBuildingResult( userSettings, problems );
+        return new DefaultSettingsBuildingResult( userSettings, problems.getProblems() );
-    private Settings readSettings( File settingsFile, SettingsBuildingRequest request, List<SettingsProblem> problems )
+    private Settings readSettings( File settingsFile, SettingsBuildingRequest request,
+                                   DefaultSettingsProblemCollector problems )
+        problems.setSource( settingsFile.getAbsolutePath() );
+
-                problems.add( new DefaultSettingsProblem( e.getMessage(), SettingsProblem.Severity.WARNING,
-                                                          settingsFile.getAbsolutePath(), e.getLineNumber(),
-                                                          e.getColumnNumber(), e ) );
+                problems.add( SettingsProblem.Severity.WARNING, e.getMessage(), e.getLineNumber(), e.getColumnNumber(),
+                              e );
-            problems.add( new DefaultSettingsProblem( "Non-parseable settings " + settingsFile + ": " + e.getMessage(),
-                                                      SettingsProblem.Severity.FATAL, settingsFile.getAbsolutePath(),
-                                                      e.getLineNumber(), e.getColumnNumber(), e ) );
+            problems.add( SettingsProblem.Severity.FATAL, "Non-parseable settings " + settingsFile + ": "
+                + e.getMessage(), e.getLineNumber(), e.getColumnNumber(), e );
-            problems.add( new DefaultSettingsProblem( "Non-readable settings " + settingsFile + ": " + e.getMessage(),
-                                                      SettingsProblem.Severity.FATAL, settingsFile.getAbsolutePath(),
-                                                      -1, -1, e ) );
+            problems.add( SettingsProblem.Severity.FATAL, "Non-readable settings " + settingsFile + ": "
+                + e.getMessage(), -1, -1, e );
-        SettingsValidationResult result = settingsValidator.validate( settings );
-
-        for ( String error : result.getMessages() )
-        {
-            problems.add( new DefaultSettingsProblem( error, SettingsProblem.Severity.ERROR,
-                                                      settingsFile.getAbsolutePath(), -1, -1, null ) );
-        }
+        settingsValidator.validate( settings, problems );
-    private Settings interpolate( Settings settings, SettingsBuildingRequest request, List<SettingsProblem> problems )
+    private Settings interpolate( Settings settings, SettingsBuildingRequest request, SettingsProblemCollector problems )
-            problems.add( new DefaultSettingsProblem( "Failed to use environment variables for interpolation: "
-                + e.getMessage(), SettingsProblem.Severity.WARNING, "", -1, -1, e ) );
+            problems.add( SettingsProblem.Severity.WARNING, "Failed to use environment variables for interpolation: "
+                + e.getMessage(), -1, -1, e );
-            problems.add( new DefaultSettingsProblem( "Failed to interpolate settings: " + e.getMessage(),
-                                                      SettingsProblem.Severity.ERROR, "", -1, -1, e ) );
+            problems.add( SettingsProblem.Severity.ERROR, "Failed to interpolate settings: " + e.getMessage(), -1, -1,
+                          e );
-            problems.add( new DefaultSettingsProblem( "Failed to interpolate settings: " + e.getMessage(),
-                                                      SettingsProblem.Severity.ERROR, "", -1, -1, e ) );
+            problems.add( SettingsProblem.Severity.ERROR, "Failed to interpolate settings: " + e.getMessage(), -1, -1,
+                          e );
