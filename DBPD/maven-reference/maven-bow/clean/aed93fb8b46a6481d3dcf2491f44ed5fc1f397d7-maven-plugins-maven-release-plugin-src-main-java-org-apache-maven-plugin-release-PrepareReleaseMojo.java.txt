o still a work in progress but i can release using the plugin, have released
  several components now and have worked out most of the kinks. there some
  debugging info but by the time i go through the continuum release i'll
  know what's what.
  


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@171270 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.io.xpp3.MavenXpp3Writer;
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.util.Properties;
-    /**
-     * @parameter expression="${project}"
-     * @required
-     * @readonly
-     */
-    private MavenProject project;
-
+    private Model model;
+
+        model = project.getModel();
+
-        transformPom();
+        transformPomToReleaseVersionPom();
+
+        transformPomToSnapshotVersionPom();
+
+        checkInSnapshotVersionPom();
-    private void transformPom()
+    private void transformPomToReleaseVersionPom()
-        Model model = project.getModel();
-
+        try
+        {
+            Properties releaseProperties = new Properties();
+
+            releaseProperties.setProperty( "version", projectVersion );
+
+            releaseProperties.setProperty( USERNAME, username );
+
+            releaseProperties.setProperty( TAG, getTagLabel() );
+
+            releaseProperties.setProperty( SCM_URL, urlScm );
+
+            FileOutputStream os = new FileOutputStream( new File( project.getFile().getParentFile(), RELEASE_PROPS ) );
+
+            releaseProperties.store( os, "maven release plugin info" );
+
+            os.close();
+        }
+        catch ( IOException e )
+        {
+            throw new MojoExecutionException( "Cannote write release-version file.", e );
+        }
+
-            throw new MojoExecutionException( "Can't update pom.", e );
+            throw new MojoExecutionException( "Can't transform pom to its release version form.", e );
+    private void transformPomToSnapshotVersionPom()
+        throws MojoExecutionException
+    {
+        // TODO: we will need to incorporate versioning strategies here because it is unlikely
+        // that everyone will be able to agree on a standard.
+
+        // releaseVersion = 1.0-beta-4
+        // snapshotVersion = 1.0-beta-5-SNAPSHOT
+
+        String nextVersionString = projectVersion.substring( projectVersion.lastIndexOf( "-" ) + 1 );
+
+        try
+        {
+            System.out.println( "nextVersionString = " + nextVersionString );
+
+            nextVersionString = Integer.toString( Integer.parseInt( nextVersionString ) + 1 );
+
+            System.out.println( "nextVersionString = " + nextVersionString );
+
+            projectVersion = projectVersion.substring( 0, projectVersion.lastIndexOf( "-" ) + 1 ) + nextVersionString + SNAPSHOT;
+        }
+        catch ( NumberFormatException e )
+        {
+            projectVersion = "";
+        }
+
+        try
+        {
+            getLog().info( "What is the new version? [" + projectVersion + "]" );
+
+            InputHandler handler = (InputHandler) getContainer().lookup( InputHandler.ROLE );
+
+            String inputVersion = handler.readLine();
+
+            if ( !StringUtils.isEmpty( inputVersion ) )
+            {
+                projectVersion = inputVersion;
+            }
+
+            model.setVersion( projectVersion );
+
+            PomTransformer transformer = new VersionTransformer();
+
+            transformer.setOutputFile( project.getFile() );
+
+            transformer.setProject( project.getFile() );
+
+            transformer.setUpdatedModel ( model );
+
+            transformer.transformNodes();
+
+            transformer.write();
+        }
+        catch ( Exception e )
+        {
+            throw new MojoExecutionException( "Can't transform pom to its snapshot version form.", e );
+        }
+    }
+
+
+        checkInPom( "[maven-release-plugin] prepare release " + projectVersion );
+    }
+
+    private void checkInSnapshotVersionPom()
+        throws MojoExecutionException
+    {
+        checkInPom( "[maven-release-plugin] prepare release " + projectVersion );
+    }
+
+    private void checkInPom( String message )
+        throws MojoExecutionException
+    {
-            scm.checkin( "[maven-release-plugin] prepare release " + projectVersion, "pom.xml", null );
+            scm.checkin( message, "pom.xml", null );
+    private String getTagLabel()
+    {
+        String tag = project.getArtifactId().toUpperCase() + "_" + projectVersion.toUpperCase();
+
+        tag = tag.replace( '-', '_' );
+
+        tag = tag.replace( '.', '_' );
+
+        return tag;
+    }
+
-
-        String tag = project.getArtifactId().toUpperCase() + "_" + projectVersion.toUpperCase();
-
-        tag = tag.replace( '-', '_' );
-
-        tag = tag.replace( '.', '_' );
+        String tag = getTagLabel();
