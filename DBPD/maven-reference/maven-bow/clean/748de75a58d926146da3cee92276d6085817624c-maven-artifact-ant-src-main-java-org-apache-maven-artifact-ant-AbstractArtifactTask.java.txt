Resolving issue: MNG-467 (patch from Kenney Westerhof applied, with minor formatting modifications)
Resolving issue: MNG-503 (another patch from Kenney Westerhof applied)

o Tracked down the potential NPE when using a list of dependencies in the DependencyTask (it needs a Pom in order to create an originating artifact)...creating a dummy Pom instance when the list of dependencies is supplied, since I assume the originatingArtifact is used for tracking/graphing purposes. This new method, called createDummyPom() is in AbstractArtifactTask, so it's available for use in InstallTask and DeployTask if necessary...

Thanks, Kenney!



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191744 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.Model;
+import org.apache.maven.project.MavenProject;
+import org.codehaus.classworlds.ClassRealm;
+import org.codehaus.classworlds.ClassWorld;
+import org.codehaus.classworlds.DuplicateRealmException;
+
-                    embedder.start();
+                    ClassWorld classWorld = new ClassWorld();
+                    
+                    ClassRealm classRealm = classWorld.newRealm( "plexus.core", getClass().getClassLoader() );
+                    
+                    embedder.start( classWorld );
+                catch ( DuplicateRealmException e )
+                {
+                    throw new BuildException( "Unable to create embedder ClassRealm", e );
+                }
+                
+    protected Pom createDummyPom()
+    {
+        Model mavenModel = new Model();
+        
+        mavenModel.setGroupId( "unspecified" );
+        mavenModel.setArtifactId( "unspecified" );
+        mavenModel.setVersion( "0.0" );
+        mavenModel.setPackaging( "jar" );
+        
+        MavenProject mavenProject = new MavenProject( mavenModel );
+        
+        Pom pom = new Pom();
+        
+        pom.setMavenProject( mavenProject );
+        
+        return pom;
+    }
+
