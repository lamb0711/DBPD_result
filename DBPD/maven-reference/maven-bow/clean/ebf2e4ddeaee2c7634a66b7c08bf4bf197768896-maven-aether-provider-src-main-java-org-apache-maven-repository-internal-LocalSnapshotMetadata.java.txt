Merge branch 'eclipse-aether' of github.com:tesla/tesla-build into eclipse-aether

Conflicts:
	.gitignore
	pom.xml

+import java.util.Collection;
-import org.sonatype.aether.artifact.Artifact;
+import org.eclipse.aether.artifact.Artifact;
-    extends MavenSnapshotMetadata
+    extends MavenMetadata
+    private final Collection<Artifact> artifacts = new ArrayList<Artifact>();
+
+    private final boolean legacyFormat;
+
-        super( createLocalMetadata( artifact, legacyFormat ), null, legacyFormat );
+        super( createMetadata( artifact, legacyFormat ), null );
+        this.legacyFormat = legacyFormat;
-        super( metadata, file, legacyFormat );
+        super( metadata, file );
+        this.legacyFormat = legacyFormat;
-    private static Metadata createLocalMetadata( Artifact artifact, boolean legacyFormat )
+    private static Metadata createMetadata( Artifact artifact, boolean legacyFormat )
-        Metadata metadata = createRepositoryMetadata( artifact, legacyFormat );
-
+        Metadata metadata = new Metadata();
+        metadata.setGroupId( artifact.getGroupId() );
+        metadata.setArtifactId( artifact.getArtifactId() );
+        metadata.setVersion( artifact.getBaseVersion() );
+
+        if ( !legacyFormat )
+        {
+            metadata.setModelVersion( "1.1.0" );
+        }
+    public void bind( Artifact artifact )
+    {
+        artifacts.add( artifact );
+    }
+
+    public Object getKey()
+    {
+        return getGroupId() + ':' + getArtifactId() + ':' + getVersion();
+    }
+
+    public static Object getKey( Artifact artifact )
+    {
+        return artifact.getGroupId() + ':' + artifact.getArtifactId() + ':' + artifact.getBaseVersion();
+    }
+
-}
+    private String getKey( String classifier, String extension )
+    {
+        return classifier + ':' + extension;
+    }
+
+    public String getGroupId()
+    {
+        return metadata.getGroupId();
+    }
+
+    public String getArtifactId()
+    {
+        return metadata.getArtifactId();
+    }
+
+    public String getVersion()
+    {
+        return metadata.getVersion();
+    }
+
+    public Nature getNature()
+    {
+        return Nature.SNAPSHOT;
+    }
+
+}
