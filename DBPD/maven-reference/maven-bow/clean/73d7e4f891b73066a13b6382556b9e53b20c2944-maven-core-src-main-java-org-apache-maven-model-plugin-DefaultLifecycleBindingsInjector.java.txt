[MNG-4344] [regression] Managed executions of plugins introduced by default lifecycle bindings execute before explicitly defined plugins

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@812550 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.HashMap;
-                Map<Object, Plugin> merged = new LinkedHashMap<Object, Plugin>( src.size() * 2 );
+                Map<Object, Plugin> merged = new LinkedHashMap<Object, Plugin>( ( src.size() + tgt.size() ) * 2 );
-                for ( Iterator<Plugin> it = src.iterator(); it.hasNext(); )
+                for ( Iterator<Plugin> it = tgt.iterator(); it.hasNext(); )
-                Map<Object, Plugin> unmanaged = new LinkedHashMap<Object, Plugin>( merged );
+                Map<Object, Plugin> unmanaged = new LinkedHashMap<Object, Plugin>();
-                Map<Object, List<Plugin>> predecessors = new HashMap<Object, List<Plugin>>();
-
-                List<Plugin> pending = new ArrayList<Plugin>( tgt.size() );
-
-                for ( Iterator<Plugin> it = tgt.iterator(); it.hasNext(); )
+                for ( Iterator<Plugin> it = src.iterator(); it.hasNext(); )
-                        mergePlugin( element, existing, sourceDominant, context );
-                        unmanaged.remove( key );
-                        merged.put( key, element );
-
-                        if ( !pending.isEmpty() )
-                        {
-                            predecessors.put( key, pending );
-                            pending = new ArrayList<Plugin>();
-                        }
+                        mergePlugin( existing, element, sourceDominant, context );
-                        pending.add( element );
+                        merged.put( key, element );
+                        unmanaged.put( key, element );
-                List<Plugin> result = new ArrayList<Plugin>( src.size() + tgt.size() );
-
-                for ( Map.Entry<Object, Plugin> entry : merged.entrySet() )
-                {
-                    List<Plugin> pre = predecessors.get( entry.getKey() );
-
-                    if ( pre != null )
-                    {
-                        result.addAll( pre );
-                    }
-
-                    result.add( entry.getValue() );
-                }
-
-                result.addAll( pending );
+                List<Plugin> result = new ArrayList<Plugin>( merged.values() );
