o Refactored RepositoryCleaner to use DiscoveryPhase and RewritePhase.
o Added the ability to read a pom and figure out whether it's a v4 pom (based on presence of modelVersion)
o Added a more accurate counter for artifacts that are actually rewritten successfully, rather than just the ones that enter the rewriting process.
o Probably need to add the phases still...


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@169041 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.tools.repoclean.report.FileReporter;
-import org.codehaus.plexus.util.IOUtil;
+import org.apache.maven.tools.repoclean.report.Reporter;
-import java.io.File;
-import java.io.FileReader;
-import java.io.FileWriter;
+import java.io.Reader;
+import java.io.Writer;
-public class V4PomRewriter implements ArtifactPomRewriter
+public class V4PomRewriter
+    implements ArtifactPomRewriter
-    public void rewrite( Artifact artifact, File from, File to, FileReporter reporter, boolean reportOnly )
+    public void rewrite( Artifact artifact, Reader from, Writer to, Reporter reporter, boolean reportOnly )
-        if ( from.exists() )
+        if( from != null )
-            FileReader fromReader = null;
+            MavenXpp3Reader reader = new MavenXpp3Reader();
+
-                fromReader = new FileReader( from );
-
-                MavenXpp3Reader reader = new MavenXpp3Reader();
-
-                try
-                {
-                    model = reader.read( fromReader );
-                }
-                catch ( Exception e )
-                {
-                    reporter.error( "Invalid v4 POM at \'" + from + "\'. Cannot read.", e );
-                }
+                model = reader.read( from );
-            finally
+            catch ( Exception e )
-                IOUtil.close( fromReader );
+                reporter.error( "Invalid v4 POM at \'" + from + "\'. Cannot read.", e );
-            reporter.error( "POM for artifact[" + artifact.getId() + "] does not exist in source repository!" );
+            model = new Model();
-                File toParent = to.getParentFile();
-                if ( !toParent.exists() )
-                {
-                    toParent.mkdirs();
-                }
-
-                FileWriter toWriter = null;
-                try
-                {
-                    toWriter = new FileWriter( to );
-                    MavenXpp3Writer writer = new MavenXpp3Writer();
-                    writer.write( toWriter, model );
-                }
-                finally
-                {
-                    IOUtil.close( toWriter );
-                }
+                MavenXpp3Writer writer = new MavenXpp3Writer();
+                writer.write( to, model );
-    private void validateBasics( Model model, Artifact artifact, FileReporter reporter )
+    private void validateBasics( Model model, Artifact artifact, Reporter reporter )
