o Changed the repository to test.maven.codehaus.org for testing of the new repository and layout.
o Added <layout/> element to <repository/> elements in the maven.mdo
o Added pluginRepository configuration to the super-POM.
o Tested it all.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163791 13f79535-47bb-0310-9956-ffa450edef68

-
+            
-
+            
-        // TODO: Replace with repository layout detection. This is a nasty hack.
-        String remoteRepoLayoutId = "legacy";
-
-        ArtifactRepositoryLayout remoteRepoLayout = null;
-        try
-        {
-            remoteRepoLayout = (ArtifactRepositoryLayout) container.lookup( ArtifactRepositoryLayout.ROLE,
-                                                                            remoteRepoLayoutId );
-        }
-        catch ( ComponentLookupException e )
-        {
-            throw new ProjectBuildingException( "Cannot find repository layout for: \'" + remoteRepoLayoutId + "\'.",
-                                                e );
-        }
+            String layout = mavenRepo.getLayout();
+
+            ArtifactRepositoryLayout remoteRepoLayout = null;
+            try
+            {
+                remoteRepoLayout = (ArtifactRepositoryLayout) container.lookup( ArtifactRepositoryLayout.ROLE,
+                                                                                layout );
+            }
+            catch ( ComponentLookupException e )
+            {
+                throw new ProjectBuildingException( "Cannot find layout implementation corresponding to: \'" + layout + "\' for remote repository with id: \'" + mavenRepo.getId() + "\'.",
+                                                    e );
+            }
+            
-
-        // TODO: needs to be configured from the POM element
-
+        
-        Repository pluginRepo = new Repository();
-        pluginRepo.setId( "plugin-repository" );
-        pluginRepo.setUrl( "http://repo1.maven.org/maven2" );
+        for ( Iterator it = pluginRepositories.iterator(); it.hasNext(); )
+        {
+            Repository mavenRepo = (Repository) it.next();
+            
+            String layout = mavenRepo.getLayout();
-        // TODO: [jc] change this to detect the repository layout type somehow...
-        String repoLayoutId = "legacy";
+            ArtifactRepositoryLayout repositoryLayout = null;
+            try
+            {
+                repositoryLayout = (ArtifactRepositoryLayout) container.lookup( ArtifactRepositoryLayout.ROLE,
+                                                                                layout );
+            }
+            catch ( ComponentLookupException e )
+            {
+                throw new ProjectBuildingException( "Cannot find layout implementation corresponding to: \'" + layout + "\' for remote repository with id: \'" + mavenRepo.getId() + "\'.",
+                                                    e );
+            }
+            
+            ArtifactRepository pluginRepository = artifactRepositoryFactory.createArtifactRepository( mavenRepo, settings,
+                                                                                                      repositoryLayout );
-        ArtifactRepositoryLayout repositoryLayout = (ArtifactRepositoryLayout) container.lookup(
-            ArtifactRepositoryLayout.ROLE, repoLayoutId );
+            remotePluginRepositories.add( pluginRepository );
-        ArtifactRepository pluginRepository = artifactRepositoryFactory.createArtifactRepository( pluginRepo, settings,
-                                                                                                  repositoryLayout );
-
-        remotePluginRepositories.add( pluginRepository );
-
+        }
+        
-        // TODO: needs to be configured from the POM element
-
+        if(dmRepo == null)
+        {
+            return null;
+        }
+        
-        // TODO: [jc] change this to detect the repository layout type somehow...
-        String repoLayoutId = "legacy";
+        String repoLayoutId = dmRepo.getLayout();
