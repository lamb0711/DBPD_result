MNG-5306 : introduce ModelProblemCollectorRequest and a new ModelProblem property - version which denotes on which validation level the error/warning applies. Additionally move the logic on failing the ModelBuilding from ModelProblemCollector to ModelBuilder's protected method to allow overriding. Default maven behaviour should stay the same.

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1357589 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.building.ModelProblem.Version;
-    implements ModelProblemCollector
+    implements ModelProblemCollectorExt
-    public void add( Severity severity, String message, InputLocation location, Exception cause )
+    public void add( ModelProblemCollectorRequest req )
-        if ( location != null )
+        if ( req.getLocation() != null )
-            line = location.getLineNumber();
-            column = location.getColumnNumber();
-            if ( location.getSource() != null )
+            line = req.getLocation().getLineNumber();
+            column = req.getLocation().getColumnNumber();
+            if ( req.getLocation().getSource() != null )
-                modelId = location.getSource().getModelId();
-                source = location.getSource().getLocation();
+                modelId = req.getLocation().getSource().getModelId();
+                source = req.getLocation().getSource().getLocation();
-        if ( line <= 0 && column <= 0 && cause instanceof ModelParseException )
+        if ( line <= 0 && column <= 0 && req.getException() instanceof ModelParseException )
-            ModelParseException e = (ModelParseException) cause;
+            ModelParseException e = (ModelParseException) req.getException();
-        ModelProblem problem = new DefaultModelProblem( message, severity, source, line, column, modelId, cause );
+        ModelProblem problem = new DefaultModelProblem( req.getMessage(), req.getSeverity(), req.getVersion(), source, line, column, modelId, req.getException() );
