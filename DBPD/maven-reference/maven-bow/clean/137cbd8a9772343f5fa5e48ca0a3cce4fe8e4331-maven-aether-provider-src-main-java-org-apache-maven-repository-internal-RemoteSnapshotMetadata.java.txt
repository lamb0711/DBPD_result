Merge branch 'trunk' into eclipse-aether

Conflicts:
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultArtifactDescriptorReader.java
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionRangeResolver.java
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java
	maven-aether-provider/src/test/java/org/apache/maven/repository/internal/AbstractRepositoryTestCase.java
	maven-aether-provider/src/test/java/org/apache/maven/repository/internal/DefaultVersionResolverTest.java
	maven-core/src/main/java/org/apache/maven/DefaultMaven.java
	maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultLegacySupport.java
	maven-core/src/main/java/org/apache/maven/plugin/prefix/PluginPrefixResult.java
	maven-embedder/src/main/java/org/apache/maven/cli/transfer/Slf4jMavenTransferListener.java
	pom.xml
	src/site/site.xml

-import java.util.Collection;
-    extends MavenMetadata
+    extends MavenSnapshotMetadata
-    private static final String SNAPSHOT = "SNAPSHOT";
-
-    private final Collection<Artifact> artifacts = new ArrayList<Artifact>();
-
-    private final boolean legacyFormat;
-
-        super( createMetadata( artifact, legacyFormat ), null );
-        this.legacyFormat = legacyFormat;
+        super( createRepositoryMetadata( artifact, legacyFormat ), null, legacyFormat );
-        super( metadata, file );
-        this.legacyFormat = legacyFormat;
-    }
-
-    private static Metadata createMetadata( Artifact artifact, boolean legacyFormat )
-    {
-        Metadata metadata = new Metadata();
-        if ( !legacyFormat )
-        {
-            metadata.setModelVersion( "1.1.0" );
-        }
-        metadata.setGroupId( artifact.getGroupId() );
-        metadata.setArtifactId( artifact.getArtifactId() );
-        metadata.setVersion( artifact.getBaseVersion() );
-
-        return metadata;
-    }
-
-    public void bind( Artifact artifact )
-    {
-        artifacts.add( artifact );
+        super( metadata, file, legacyFormat );
-    public Object getKey()
-    {
-        return getGroupId() + ':' + getArtifactId() + ':' + getVersion();
-    }
-
-    public static Object getKey( Artifact artifact )
-    {
-        return artifact.getGroupId() + ':' + artifact.getArtifactId() + ':' + artifact.getBaseVersion();
-    }
-
-                String qualifier = snapshot.getTimestamp() + "-" + snapshot.getBuildNumber();
+                String qualifier = snapshot.getTimestamp() + '-' + snapshot.getBuildNumber();
+
-    private String getKey( String classifier, String extension )
-    {
-        return classifier + ':' + extension;
-    }
-
-    public String getGroupId()
-    {
-        return metadata.getGroupId();
-    }
-
-    public String getArtifactId()
-    {
-        return metadata.getArtifactId();
-    }
-
-    public String getVersion()
-    {
-        return metadata.getVersion();
-    }
-
-    public Nature getNature()
-    {
-        return Nature.SNAPSHOT;
-    }
-
