change @requiresDependencyResolution to take a scope (default is "runtime" if no scope specified, none if tag not specified at all).
This still means ALL tests get the test dependencies of their compile time dependencies. Check if there is really a valid use case for that.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163780 13f79535-47bb-0310-9956-ffa450edef68

- * @requiresDependencyResolution
+ * @requiresDependencyResolution compile
- *            expression="#project.compileSourceRoots" description=""
+ * expression="#project.compileSourceRoots" description=""
- *            expression="#project.build.outputDirectory" description=""
+ * expression="#project.build.outputDirectory" description=""
- *            expression="#project.compileClasspathElements" description=""
+ * expression="#project.compileClasspathElements" description=""
- *            expression="#maven.compiler.debug" description="Whether to include debugging
- *            information in the compiled class files; the default value is false"
+ * expression="#maven.compiler.debug" description="Whether to include debugging
+ * information in the compiled class files; the default value is false"
- *            description="The -source argument for the Java compiler"
+ * description="The -source argument for the Java compiler"
- *            description="The -target argument for the Java compiler"
+ * description="The -target argument for the Java compiler"
- *            validator="" description="The granularity in milliseconds of the last modification
- *            date for testing whether a source needs recompilation"
+ * validator="" description="The granularity in milliseconds of the last modification
+ * date for testing whether a source needs recompilation"
-                throw new PluginExecutionException( "Invalid staleMillis plugin parameter value: \'" + staleMillis
-                    + "\'", e );
+                throw new PluginExecutionException( "Invalid staleMillis plugin parameter value: \'" + staleMillis +
+                                                    "\'", e );
-                throw new PluginExecutionException( "Error scanning source root: \'" + sourceRoot
-                    + "\' for stale files to recompile.", e );
+                throw new PluginExecutionException( "Error scanning source root: \'" + sourceRoot +
+                                                    "\' for stale files to recompile.", e );
-     *       be calculated continuously - or should the plugins accept empty source roots as is?
+     * be calculated continuously - or should the plugins accept empty source roots as is?
