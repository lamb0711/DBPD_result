o Moved settings building into separate module

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@964730 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.Map;
-import org.codehaus.plexus.util.StringUtils;
+import org.apache.maven.settings.merge.MavenSettingsMerger;
+
-        if ( dominant == null || recessive == null )
-        {
-            return;
-        }
-
-        recessive.setSourceLevel( recessiveSourceLevel );
-
-        List<String> dominantActiveProfiles = dominant.getActiveProfiles();
-        List<String> recessiveActiveProfiles = recessive.getActiveProfiles();
-
-        if ( recessiveActiveProfiles != null )
-        {
-            if ( dominantActiveProfiles == null )
-            {
-                dominantActiveProfiles = new ArrayList<String>();
-                dominant.setActiveProfiles( dominantActiveProfiles );
-            }
-
-            for ( String profileId : recessiveActiveProfiles )
-            {
-                if ( !dominantActiveProfiles.contains( profileId ) )
-                {
-                    dominantActiveProfiles.add( profileId );
-                }
-            }
-        }
-
-        List<String> dominantPluginGroupIds = dominant.getPluginGroups();
-
-        List<String> recessivePluginGroupIds = recessive.getPluginGroups();
-
-        if ( recessivePluginGroupIds != null )
-        {
-            if ( dominantPluginGroupIds == null )
-            {
-                dominantPluginGroupIds = new ArrayList<String>();
-                dominant.setPluginGroups( dominantPluginGroupIds );
-            }
-
-            for ( String pluginGroupId : recessivePluginGroupIds )
-            {
-                if ( !dominantPluginGroupIds.contains( pluginGroupId ) )
-                {
-                    dominantPluginGroupIds.add( pluginGroupId );
-                }
-            }
-        }
-
-        if ( StringUtils.isEmpty( dominant.getLocalRepository() ) )
-        {
-            dominant.setLocalRepository( recessive.getLocalRepository() );
-        }
-
-        shallowMergeById( dominant.getMirrors(), recessive.getMirrors(), recessiveSourceLevel );
-        shallowMergeById( dominant.getServers(), recessive.getServers(), recessiveSourceLevel );
-        shallowMergeById( dominant.getProxies(), recessive.getProxies(), recessiveSourceLevel );
-        shallowMergeById( dominant.getProfiles(), recessive.getProfiles(), recessiveSourceLevel );
-
-    }
-
-    /**
-     * @param dominant
-     * @param recessive
-     * @param recessiveSourceLevel
-     */
-    private static <T extends IdentifiableBase> void shallowMergeById( List<T> dominant, List<T> recessive,
-                                                                       String recessiveSourceLevel )
-    {
-        Map<String, T> dominantById = mapById( dominant );
-
-        for ( T identifiable : recessive )
-        {
-            if ( !dominantById.containsKey( identifiable.getId() ) )
-            {
-                identifiable.setSourceLevel( recessiveSourceLevel );
-
-                dominant.add( identifiable );
-            }
-        }
-    }
-
-    /**
-     * @param identifiables
-     * @return a map
-     */
-    private static <T extends IdentifiableBase> Map<String, T> mapById( List<T> identifiables )
-    {
-        Map<String, T> byId = new HashMap<String, T>();
-
-        for ( T identifiable : identifiables )
-        {
-            byId.put( identifiable.getId(), identifiable );
-        }
-
-        return byId;
+        new MavenSettingsMerger().merge( dominant, recessive, recessiveSourceLevel );
