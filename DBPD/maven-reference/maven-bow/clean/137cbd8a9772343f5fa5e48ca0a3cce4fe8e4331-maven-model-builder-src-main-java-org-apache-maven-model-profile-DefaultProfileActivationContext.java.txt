Merge branch 'trunk' into eclipse-aether

Conflicts:
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultArtifactDescriptorReader.java
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionRangeResolver.java
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java
	maven-aether-provider/src/test/java/org/apache/maven/repository/internal/AbstractRepositoryTestCase.java
	maven-aether-provider/src/test/java/org/apache/maven/repository/internal/DefaultVersionResolverTest.java
	maven-core/src/main/java/org/apache/maven/DefaultMaven.java
	maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultLegacySupport.java
	maven-core/src/main/java/org/apache/maven/plugin/prefix/PluginPrefixResult.java
	maven-embedder/src/main/java/org/apache/maven/cli/transfer/Slf4jMavenTransferListener.java
	pom.xml
	src/site/site.xml

+import java.util.Enumeration;
+import java.util.HashMap;
- * 
+ *
+    private Map<String, String> projectProperties = Collections.emptyMap();
+
-     * 
+     *
-     * 
+     *
-     * 
+     *
-    @SuppressWarnings( "unchecked" )
+    @SuppressWarnings("unchecked")
-     * 
+     *
-     * 
+     *
-    @SuppressWarnings( "unchecked" )
+    @SuppressWarnings("unchecked")
-     * 
+     *
-     * 
+     *
-     *            happens in the context of metadata retrieval rather than project building.
+     *                         happens in the context of metadata retrieval rather than project building.
+    public Map<String, String> getProjectProperties()
+    {
+        return projectProperties;
+    }
+
+    public DefaultProfileActivationContext setProjectProperties( Properties projectProperties )
+    {
+        if ( projectProperties != null )
+        {
+
+            this.projectProperties = Collections.unmodifiableMap( toMap( projectProperties ) );
+        }
+        else
+        {
+            this.projectProperties = Collections.emptyMap();
+        }
+
+        return this;
+    }
+
+    private Map<String, String> toMap( Properties properties )
+    {
+        if ( properties == null )
+        {
+            return Collections.emptyMap();
+        }
+        Map<String, String> map = new HashMap<String, String>();
+        Enumeration keys = properties.keys();
+        while ( keys.hasMoreElements() )
+        {
+            String key = (String) keys.nextElement();
+            map.put( key, properties.getProperty( key ) );
+        }
+        return map;
+    }
