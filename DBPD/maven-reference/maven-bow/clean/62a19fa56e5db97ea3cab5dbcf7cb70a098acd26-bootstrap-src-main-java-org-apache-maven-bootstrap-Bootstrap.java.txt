create a bootstrap installation

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@344122 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Map;
-import java.util.HashMap;
-import java.util.Map;
+    private Map modelCache = new HashMap();
+
+        createInstallation( new File( basedir, "target/installation" ), resolver );
+
+    private void createInstallation( File dir, ArtifactResolver resolver )
+        throws IOException
+    {
+        FileUtils.deleteDirectory( dir );
+
+        dir.mkdirs();
+
+        File libDirectory = new File( dir, "lib" );
+        libDirectory.mkdir();
+
+        File binDirectory = new File( dir, "bin" );
+
+        File coreDirectory = new File( dir, "core" );
+        coreDirectory.mkdir();
+
+        File bootDirectory = new File( coreDirectory, "boot" );
+        bootDirectory.mkdir();
+
+        ModelReader reader = (ModelReader) modelCache.get( "org.apache.maven:maven-core" );
+
+        for ( Iterator i = reader.getDependencies().iterator(); i.hasNext(); )
+        {
+            Dependency dep = (Dependency) i.next();
+
+            if ( dep.getArtifactId().equals( "classworlds" ) )
+            {
+                FileUtils.copyFileToDirectory( resolver.getArtifactFile( dep ), bootDirectory );
+            }
+            else if ( dep.getArtifactId().equals( "plexus-container-default" ) ||
+                dep.getArtifactId().equals( "plexus-utils" ) )
+            {
+                FileUtils.copyFileToDirectory( resolver.getArtifactFile( dep ), coreDirectory );
+            }
+            else
+            {
+                FileUtils.copyFileToDirectory( resolver.getArtifactFile( dep ), libDirectory );
+            }
+        }
+
+        Dependency coreAsDep = new Dependency( reader.getGroupId(), reader.getArtifactId(), reader.getVersion(),
+                                               reader.getPackaging(), Collections.EMPTY_LIST );
+
+        FileUtils.copyFileToDirectory( resolver.getArtifactFile( coreAsDep ), libDirectory );
+
+        File srcBinDirectory = (File) modelFileCache.get( "org.apache.maven:maven-core" );
+        srcBinDirectory = new File( srcBinDirectory.getParentFile(), "src/bin" );
+
+        FileUtils.copyDirectory( srcBinDirectory, binDirectory, null, "**/.svn/**" );
+    }
+
-        modelFileCache.put( reader.getGroupId() + ":" + reader.getArtifactId(), file );
+        String id = reader.getGroupId() + ":" + reader.getArtifactId();
+        modelFileCache.put( id, file );
+
+        modelCache.put( id, reader );
