Moved over interpolation into it's own class.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@765793 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.ByteArrayInputStream;
+import org.apache.maven.project.builder.DefaultInterpolator;
-                String interpolatedDom = interpolateXmlString( String.valueOf( dom ), interpolatorProperties );
+                String interpolatedDom = new DefaultInterpolator().interpolateXmlString( String.valueOf( dom ), interpolatorProperties );
-    private static String interpolateXmlString( String xml, List<InterpolatorProperty> interpolatorProperties )
-        throws IOException
-    {
-        List<ModelProperty> modelProperties = ProcessorContext.marshallXmlToModelProperties( new ByteArrayInputStream( xml.getBytes() ), ProjectUri.baseUri, ProcessorContext.URIS );
-
-        Map<String, String> aliases = new HashMap<String, String>();
-        aliases.put( "project.", "pom." );
-
-        List<InterpolatorProperty> ips = new ArrayList<InterpolatorProperty>( interpolatorProperties );
-        ips.addAll( ProcessorContext.createInterpolatorProperties( modelProperties, ProjectUri.baseUri, aliases, PomInterpolatorTag.PROJECT_PROPERTIES.name()) );
-
-        for ( ModelProperty mp : modelProperties )
-        {
-            if ( mp.getUri().startsWith( ProjectUri.properties ) && mp.getValue() != null )
-            {
-                String uri = mp.getUri();
-                ips.add( new InterpolatorProperty( "${" + uri.substring( uri.lastIndexOf( "/" ) + 1, uri.length() ) + "}", mp.getValue() ) );
-            }
-        }
-
-        ProcessorContext.interpolateModelProperties( modelProperties, ips );
-        return ProcessorContext.unmarshalModelPropertiesToXml( modelProperties, ProjectUri.baseUri );
-    }
-
