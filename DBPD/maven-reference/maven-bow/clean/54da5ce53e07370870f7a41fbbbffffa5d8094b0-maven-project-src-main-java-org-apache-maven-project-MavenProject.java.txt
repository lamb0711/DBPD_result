o omit the creation of deployment specific repositories, and uniqueVersion = false isn't going to matter in 3.x. everything will be unique to match an osgi versioning scheme. the dichotomy between unique sometimes, and no versions locally is a mess.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@747652 13f79535-47bb-0310-9956-ffa450edef68

-     * @param mavenTools - may not be null
+     * @param repositorySystem - may not be null
-    public MavenProject( Model model, MavenRepositorySystem mavenTools, MavenProjectBuilder mavenProjectBuilder, ProjectBuilderConfiguration projectBuilderConfiguration )
+    public MavenProject( Model model, MavenRepositorySystem repositorySystem, MavenProjectBuilder mavenProjectBuilder, ProjectBuilderConfiguration projectBuilderConfiguration )
-        if(mavenTools == null)
+        if(repositorySystem == null)
-        this.repositorySystem = mavenTools;
+        this.repositorySystem = repositorySystem;
-            ArtifactRepository repo = mavenTools.buildDeploymentArtifactRepository( dm.getRepository() );
+            ArtifactRepository repo = repositorySystem.buildArtifactRepository( dm.getRepository() );
-                repo = mavenTools.buildDeploymentArtifactRepository( dm.getSnapshotRepository() );
+                repo = repositorySystem.buildArtifactRepository( dm.getSnapshotRepository() );
-            setRemoteArtifactRepositories( mavenTools.buildArtifactRepositories( new ArrayList<Repository>( repoSet ) ) );
+            setRemoteArtifactRepositories( repositorySystem.buildArtifactRepositories( new ArrayList<Repository>( repoSet ) ) );
