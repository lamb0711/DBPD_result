Removing maven-build-context, and replacing it with caching aspects for model-lineage stuff and project instances. Still needs caching for artifact resolution, and I have an aspect for this too, but it's not enabled yet, since it's still buggy.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@595215 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.execution.MavenSession;
-    public BuildPlan constructBuildPlan( final List tasks, final MavenProject project )
+    public BuildPlan constructBuildPlan( final List tasks, final MavenProject project, final MavenSession session )
-        LifecycleBindings projectBindings = lifecycleBindingManager.getProjectCustomBindings( project );
+        LifecycleBindings projectBindings = lifecycleBindingManager.getProjectCustomBindings( project, session );
-        initializeDirectInvocations( plan, project );
+        initializeDirectInvocations( plan, project, session );
-        addForkedLifecycleModifiers( plan, project, new LinkedList() );
-        addReportingLifecycleModifiers( plan, project, new LinkedList() );
+        addForkedLifecycleModifiers( plan, project, session, new LinkedList() );
+        addReportingLifecycleModifiers( plan, project, session, new LinkedList() );
-    private void initializeDirectInvocations( final BuildPlan plan, final MavenProject project )
+    private void initializeDirectInvocations( final BuildPlan plan, final MavenProject project, final MavenSession session )
-                MojoBinding binding = mojoBindingFactory.parseMojoBinding( task, project, true );
+                MojoBinding binding = mojoBindingFactory.parseMojoBinding( task, project, session, true );
-    private void addForkedLifecycleModifiers( final BuildPlan plan, final MavenProject project, LinkedList callStack )
+    private void addForkedLifecycleModifiers( final BuildPlan plan, final MavenProject project, MavenSession session, LinkedList callStack )
-            findForkModifiers( mojoBinding, plan, project, callStack );
+            findForkModifiers( mojoBinding, plan, project, session, callStack );
-    private void findForkModifiers( final MojoBinding mojoBinding, final BuildPlan plan, final MavenProject project, LinkedList callStack )
+    private void findForkModifiers( final MojoBinding mojoBinding, final BuildPlan plan, final MavenProject project, MavenSession session, LinkedList callStack )
-        PluginDescriptor pluginDescriptor = loadPluginDescriptor( mojoBinding, plan, project );
+        PluginDescriptor pluginDescriptor = loadPluginDescriptor( mojoBinding, plan, project, session );
-        findForkModifiers( mojoBinding, pluginDescriptor, plan, project, false, callStack );
+        findForkModifiers( mojoBinding, pluginDescriptor, plan, project, session, false, callStack );
+     * @param session
-    private void addReportingLifecycleModifiers( final BuildPlan plan, final MavenProject project, LinkedList callStack )
+    private void addReportingLifecycleModifiers( final BuildPlan plan, final MavenProject project, MavenSession session, LinkedList callStack )
-            PluginDescriptor pluginDescriptor = loadPluginDescriptor( mojoBinding, plan, project );
+            PluginDescriptor pluginDescriptor = loadPluginDescriptor( mojoBinding, plan, project, session );
-                List reportBindings = lifecycleBindingManager.getReportBindings( project );
+                List reportBindings = lifecycleBindingManager.getReportBindings( project, session );
-                        PluginDescriptor pd = loadPluginDescriptor( reportBinding, plan, project );
+                        PluginDescriptor pd = loadPluginDescriptor( reportBinding, plan, project, session );
-                            findForkModifiers( reportBinding, pd, plan, project, true, callStack );
+                            findForkModifiers( reportBinding, pd, plan, project, session, true, callStack );
-                                                   final MavenProject project )
+                                                   final MavenProject project, final MavenSession session )
-            pluginDescriptor = pluginLoader.loadPlugin( mojoBinding, project );
+            pluginDescriptor = pluginLoader.loadPlugin( mojoBinding, project, session );
-                                    final BuildPlan plan, final MavenProject project, final boolean includeReportConfig, LinkedList callStack )
+                                    final BuildPlan plan, final MavenProject project, final MavenSession session,
+                                    final boolean includeReportConfig, LinkedList callStack )
-            recursePhaseMojoFork( mojoBinding, pluginDescriptor, plan, project, includeReportConfig, callStack );
+            recursePhaseMojoFork( mojoBinding, pluginDescriptor, plan, project, session, includeReportConfig, callStack );
+     * @param session
-                                       final BuildPlan plan, final MavenProject project,
+                                       final BuildPlan plan, final MavenProject project, final MavenSession session,
-            addForkedLifecycleModifiers( clonedPlan, project, callStack );
+            addForkedLifecycleModifiers( clonedPlan, project, session, callStack );
