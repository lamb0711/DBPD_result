fixed discrepency between plugin.mdo (which is pure documentation) and corresponding hand-written code

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1339651 13f79535-47bb-0310-9956-ffa450edef68

-    /** The goal name of the Mojo */
+    /**
+     * The goal name for the Mojo, that users will reference from the command line to execute the Mojo directly, or
+     * inside a POM in order to provide Mojo-specific configuration.
+     */
-    /** Reference the binded phase name of the Mojo */
+    /**
+     * Defines a default phase to bind a mojo execution to if the user does not explicitly set a phase in the POM.
+     * <i>Note:</i> This will not automagically make a mojo run when the plugin declaration is added to the POM. It
+     * merely enables the user to omit the <code>&lt;phase&gt;</code> element from the surrounding
+     * <code>&lt;execution&gt;</code> element.
+     */
-    /** Reference the invocation phase of the Mojo */
+    /** Reference the invocation phase of the Mojo. */
-    /** Reference the invocation goal of the Mojo */
+    /** Reference the invocation goal of the Mojo. */
-    /** Reference the invocation lifecycle of the Mojo */
+    /** Reference the invocation lifecycle of the Mojo. */
-    /** Specify the version when the Mojo was deprecated to the API. Similar to Javadoc deprecated. */
+    /**
+     * Specify the version when the Mojo was deprecated to the API. Similar to Javadoc deprecated. This will trigger a
+     * warning when a user tries to configure a parameter marked as deprecated.
+     */
-    /** By default, no need to aggregate the Maven project and its child modules */
+    /**
+     * Flags this Mojo to run it in a multi module way, i.e. aggregate the build with the set of projects listed as
+     * modules. By default, no need to aggregate the Maven project and its child modules
+     */
-    /**  By default, the Mojo could not be invoke directly */
+    /**  By default, the Mojo cannot be invoked directly */
-     * resolution, this does not include the download of the files for the dependency artifacts.
-     *
+     * resolution, this does not include the download of the files for the dependency artifacts. It is meant for mojos
+     * that only want to analyze the set of transitive dependencies, in particular during early lifecycle phases where
+     * full dependency resolution might fail due to projects which haven't been built yet.
+     * 
-     * @return <code>true</code> if the Mojo could not be invoke directly, <code>false</code> otherwise.
+     * @return <code>true</code> if the Mojo cannot be invoked directly, <code>false</code> otherwise.
-     * @param directInvocationOnly <code>true</code> if the Mojo could not be invoke directly,
+     * @param directInvocationOnly <code>true</code> if the Mojo cannot be invoked directly,
