Worked on MNG-309 and subtasks...

o Added digest creation/verification for POMs

o Added separate logging of kickouts and exclusions for ArtifactDiscoverer to keep it from polluting the repository.report.txt

o Added transactional behavior for each artifact conversion: if the artifact, its POM and all the myriad supporting files cannot be converted/created, then all files associated with that artifact are backed out of the target repo.

  NOTE: This WILL NOT happen if "--force" is used.

o Translating '+' characters to '-' in legacy artifact paths (not in v4 source repo paths, since we'll assume those are valid for use in m2). This is taking place inside the V3PomRewriter currently.

Validated all of this on localhost using a test repo. Next step is to validate on beaver with production source and test target repos, and fix anything that's outstanding (also add test cases to the test repo as needed).



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@164116 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.Artifact;
+import org.apache.maven.tools.repoclean.transaction.RewriteTransaction;
-public class ArtifactDigestVerifier
+public class DigestVerifier
-    public static final String ROLE = ArtifactDigestVerifier.class.getName();
+    public static final String ROLE = DigestVerifier.class.getName();
-    private ArtifactDigestor artifactDigestor;
+    private Digestor artifactDigestor;
-    public void setArtifactDigestor(ArtifactDigestor artifactDigestor)
+    public void setArtifactDigestor(Digestor artifactDigestor)
-    public void verifyDigest( Artifact artifact, File artifactTarget, Reporter reporter, boolean reportOnly )
-        throws ArtifactDigestException, ReportWriteException, IOException
+    public void verifyDigest( File source, File target, RewriteTransaction transaction, Reporter reporter, boolean reportOnly )
+        throws DigestException, ReportWriteException, IOException
-        verifyDigestFile( artifact, artifactTarget, reporter, reportOnly, ".md5", ArtifactDigestor.MD5 );
+        verifyDigestFile( source, target, transaction, reporter, reportOnly, ".md5", Digestor.MD5 );
-        verifyDigestFile( artifact, artifactTarget, reporter, reportOnly, ".sha1", ArtifactDigestor.SHA );
+        verifyDigestFile( source, target, transaction, reporter, reportOnly, ".sha1", Digestor.SHA );
-    private void verifyDigestFile( Artifact artifact, File artifactTarget, Reporter reporter, boolean reportOnly,
+    private void verifyDigestFile( File artifactSource, File artifactTarget, RewriteTransaction transaction, Reporter reporter, boolean reportOnly,
-        throws ArtifactDigestException, ReportWriteException, IOException
+        throws DigestException, ReportWriteException, IOException
-        File digestSourceFile = new File( artifact.getFile() + digestExt );
+        File digestSourceFile = new File( artifactSource + digestExt );
+        
+        transaction.addFile( digestTargetFile );
-                        reporter.error( "Cannot copy digest file for artifact[" + artifact.getId()
+                        reporter.error( "Cannot copy digest file for path [" + artifactSource
-                reporter.warn( digestExt + " for artifact[" + artifact.getId() + "] in target repository is wrong." );
+                reporter.warn( digestExt + " for path [" + artifactSource + "] in target repository is wrong." );
-            reporter.warn( digestExt + " for artifact[" + artifact.getId() + "] is missing in source repository." );
+            reporter.warn( digestExt + " for path [" + artifactSource + "] is missing in source repository." );
