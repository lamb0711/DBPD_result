PR: MNG-1101

Fixed dependency-exclusion propagation to the release-pom.xml, and changed the pom-file handling for release:perform to allow non-standard POM filenames, and to prompt in the case where the POM being used is the release-pom.xml.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@329946 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.Maven;
+import org.codehaus.plexus.util.StringUtils;
+    
+    /**
+     * @parameter expression="${releasePom}"
+     */
+    private String releasePom;
+        if ( StringUtils.isEmpty( releasePom ) )
+        {
+            File pomFile = project.getFile();
+
+            releasePom = pomFile.getName();
+        }
+        
+        if ( releasePom.equals( Maven.RELEASE_POMv4 ) && interactive )
+        {
+            StringBuffer warning = new StringBuffer();
+            warning.append( "\n*******************************************************************************\n" );
+            warning.append( "\nYou have chosen to use the fully resolved release-POM to deploy this project." );
+            warning.append( "\n" );
+            warning.append( "\nNOTE: Deploying artifacts using the fully resolved release-POM " );
+            warning.append( "\nwill result in loss of any version ranges specified for your");
+            warning.append( "\nproject's dependencies." );
+            warning.append( "\n" );
+            warning.append( "\nAre you sure you want to do this?" );
+            warning.append( "\n" );
+            warning.append( "\n*******************************************************************************\n" );
+            
+            getLog().warn( warning );
+            
+            getLog().info( "Enter the POM filename to use for deployment: [" + releasePom + "] " );
+
+            try
+            {
+                String input = getInputHandler().readLine();
+
+                if ( !StringUtils.isEmpty( input ) )
+                {
+                    releasePom = input;
+                }
+            }
+            catch ( IOException e )
+            {
+                throw new MojoExecutionException( "An error has occurred while reading the pom file location.", e );
+            }
+        }
+        
+        getLog().info( "Releasing project based on POM: " + releasePom + " in working directory: " + workingDirectory );
+        
+        cl.createArgument().setLine( "-f " + releasePom );
+        
