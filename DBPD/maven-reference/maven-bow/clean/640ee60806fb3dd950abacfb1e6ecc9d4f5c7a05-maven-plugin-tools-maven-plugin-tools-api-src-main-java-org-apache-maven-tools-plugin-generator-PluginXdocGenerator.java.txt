remove more deprecated stuff, improve plugin xdoc generation

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@169734 13f79535-47bb-0310-9956-ffa450edef68

- * @todo need to add validation directives so that systems embedding maven2 can
- *       get validation directives to help users in IDEs.
-    public void execute( String destinationDirectory, PluginDescriptor pluginDescriptor )
+    public void execute( File destinationDirectory, PluginDescriptor pluginDescriptor )
+        // TODO: write an overview page
+
-            processPluginDescriptor( descriptor, destinationDirectory );
+            processMojoDescriptor( descriptor, destinationDirectory );
-    protected void processPluginDescriptor( MojoDescriptor mojoDescriptor, String destinationDirectory )
+    protected void processMojoDescriptor( MojoDescriptor mojoDescriptor, File destinationDirectory )
-            writer = new FileWriter( new File( destinationDirectory, id + "-plugin.xml" ) );
+            writer = new FileWriter( new File( destinationDirectory, id + "-mojo.xml" ) );
-        w.writeText( "Documentation for the " + id + " plugin." );
-
-        w.endElement();
-
-        w.startElement( "author" );
-
-        w.addAttribute( "email", "dev@maven.apache.org" );
-
-        w.writeText( "Maven development team." );
+        // TODO: need a friendly name for a plugin
+        w.writeText( mojoDescriptor.getPluginDescriptor().getArtifactId() + " - " + mojoDescriptor.getFullGoalName() );
-        w.addAttribute( "name", "Goals" );
+        w.addAttribute( "name", mojoDescriptor.getFullGoalName() );
-        w.writeText( "The goals for the " + id + " are as follows:" );
-
-        w.endElement();
-
-        // ----------------------------------------------------------------------
-        //
-        // ----------------------------------------------------------------------
-
-        w.startElement( "subsection" );
-
-        w.addAttribute( "name", mojoDescriptor.getGoal() );
-
-            w.startElement( "p" );
-
-            w.writeText( mojoDescriptor.getDescription() );
-
-            w.endElement();
+            w.writeMarkup( mojoDescriptor.getDescription() );
+        else
+        {
+            w.writeText( "No description." );
+        }
+
+        w.endElement();
-        w.writeText( "These parameters for this goal: " );
+        w.writeText( "Parameters for the goal: " );
-        // ----------------------------------------------------------------------
-        //
-        // ----------------------------------------------------------------------
-
-        w.endElement();
-
-        // ----------------------------------------------------------------------
-        //
-        // ----------------------------------------------------------------------
-
-        w.startElement( "p" );
-
-        w.startElement( "th" );
-
-        w.writeText( "Required?" );
-
-        w.endElement();
-
-        w.startElement( "th" );
-
-        w.writeText( "Deprecated?" );
-
-        w.endElement();
-
-        Map parameterMap = mojoDescriptor.getParameterMap();
-
+            w.startElement( "code" );
+
+            if ( !parameter.isRequired() )
+            {
+                w.writeMarkup( " <i>(Optional)</i>");
+            }
+
+            w.endElement();
+
+            w.startElement( "code" );
+
+            w.endElement();
+
-            w.writeText( parameter.getExpression() );
+            w.startElement( "code" );
+
+            if ( StringUtils.isNotEmpty( parameter.getExpression() ) )
+            {
+                w.writeText( parameter.getExpression() );
+            }
+            else
+            {
+                w.writeText( "-" );
+            }
+
+            w.endElement();
-            w.writeText( parameter.getDescription() );
-
-            w.endElement();
-
-            // ----------------------------------------------------------------------
-            //
-            // ----------------------------------------------------------------------
-
-            w.startElement( "td" );
-
-            w.writeText( Boolean.toString( parameter.isRequired() ) );
-
-            w.endElement();
-
-            // ----------------------------------------------------------------------
-            //
-            // ----------------------------------------------------------------------
+            if ( StringUtils.isNotEmpty( parameter.getDescription() ) )
+            {
+                w.writeMarkup( parameter.getDescription() );
+            }
+            else
+            {
+                w.writeText( "No description." );
+            }
-            if ( StringUtils.isNotEmpty( deprecationWarning ) )
+            if ( deprecationWarning != null )
-                w.startElement( "td" );
-
-                w.writeText( deprecationWarning );
+                w.writeMarkup( "<br/><b>Deprecated:</b> ");
+                w.writeMarkup( deprecationWarning );
+                if ( deprecationWarning.length() == 0 )
+                {
+                    w.writeText( "No reason given." );
+                }
-        }
-        w.endElement();
+            w.endElement();
+        }
