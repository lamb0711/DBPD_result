o Revised ModelProblem to provide more detailed information about problem location

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@814330 13f79535-47bb-0310-9956-ffa450edef68

+    private final int lineNumber;
+
+    private final int columnNumber;
+
+    private final String modelId;
+
-     * Creates a new problem with the specified message.
+     * Creates a new problem with the specified message and exception.
+     * @param lineNumber The one-based index of the line containing the error or {@code -1} if unknown.
+     * @param columnNumber The one-based index of the column containing the error or {@code -1} if unknown.
+     * @param exception The exception that caused this problem, may be {@code null}.
-    public DefaultModelProblem( String message, Severity severity, Model source )
+    public DefaultModelProblem( String message, Severity severity, Model source, int lineNumber, int columnNumber,
+                                Exception exception )
-        this( message, severity, source, null );
+        this( message, severity, ModelProblemUtils.toPath( source ), lineNumber, columnNumber,
+              ModelProblemUtils.toId( source ), exception );
-     * @param source The source of the problem, may be {@code null}.
+     * @param source A hint about the source of the problem like a file path, may be {@code null}.
+     * @param lineNumber The one-based index of the line containing the problem or {@code -1} if unknown.
+     * @param columnNumber The one-based index of the column containing the problem or {@code -1} if unknown.
+     * @param modelId The identifier of the model that exhibits the problem, may be {@code null}.
-    public DefaultModelProblem( String message, Severity severity, Model source, Exception exception )
-    {
-        this( message, severity, ModelProblemUtils.toSourceHint( source ), exception );
-    }
-
-    /**
-     * Creates a new problem with the specified message.
-     * 
-     * @param message The message describing the problem, may be {@code null}.
-     * @param severity The severity level of the problem, may be {@code null} to default to {@link Severity#ERROR}.
-     * @param source A hint about the source of the problem, may be {@code null}.
-     */
-    public DefaultModelProblem( String message, Severity severity, String source )
-    {
-        this( message, severity, source, null );
-    }
-
-    /**
-     * Creates a new problem with the specified message and exception.
-     * 
-     * @param message The message describing the problem, may be {@code null}.
-     * @param severity The severity level of the problem, may be {@code null} to default to {@link Severity#ERROR}.
-     * @param source A hint about the source of the problem, may be {@code null}.
-     * @param exception The exception that caused this problem, may be {@code null}.
-     */
-    public DefaultModelProblem( String message, Severity severity, String source, Exception exception )
+    public DefaultModelProblem( String message, Severity severity, String source, int lineNumber, int columnNumber,
+                                String modelId, Exception exception )
+        this.lineNumber = lineNumber;
+        this.columnNumber = columnNumber;
+        this.modelId = ( modelId != null ) ? modelId : "";
+    public int getLineNumber()
+    {
+        return lineNumber;
+    }
+
+    public int getColumnNumber()
+    {
+        return columnNumber;
+    }
+
+    public String getModelId()
+    {
+        return modelId;
+    }
+
+    public String getLocation()
+    {
+        StringBuilder buffer = new StringBuilder( 256 );
+
+        buffer.append( getModelId() );
+
+        if ( getSource().length() > 0 )
+        {
+            if ( buffer.length() > 0 )
+            {
+                buffer.append( ", " );
+            }
+            buffer.append( getSource() );
+        }
+
+        if ( getLineNumber() > 0 )
+        {
+            if ( buffer.length() > 0 )
+            {
+                buffer.append( ", " );
+            }
+            buffer.append( "line " ).append( getLineNumber() );
+        }
+
+        if ( getColumnNumber() > 0 )
+        {
+            if ( buffer.length() > 0 )
+            {
+                buffer.append( ", " );
+            }
+            buffer.append( "column " ).append( getColumnNumber() );
+        }
+
+        return buffer.toString();
+    }
+
-        buffer.append( getSource() ).append( ": " ).append( getMessage() );
+        buffer.append( getMessage() );
+        buffer.append( " @ " ).append( getLocation() );
