o debugging configuration merging


git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@771096 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.File;
+import org.apache.maven.plugin.PluginParameterExpressionEvaluator;
+import org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException;
+import org.codehaus.plexus.component.configurator.expression.ExpressionEvaluator;
-            {
+            {                
+                System.out.println( "!!!");
-
+    
-                MojoDescriptor mojoDescriptor = getMojoDescriptor( mojo, project, session.getLocalRepository() ); 
+                MojoDescriptor mojoDescriptor = getMojoDescriptor( mojo, project, session.getLocalRepository() );                                
-                
+                                
+        //return new Xpp3Dom( "configuration" );
+    
-    {
-        Map<String,Parameter> parameters = mojoDescriptor.getParameterMap();
-        
+    {        
-        {
-            Xpp3Dom e = new Xpp3Dom( ce.getName() );
-            e.setValue( ce.getValue( ce.getAttribute( "default-value", null ) ) );
-            dom.addChild( e );
+        {            
+            if ( ce.getValue( null ) != null )
+            {
+                Xpp3Dom e = new Xpp3Dom( ce.getName() );
+                e.setValue( ce.getValue( null ) );
+                dom.addChild( e );                
+            }
+    // assign all values
+    // validate everything is fine
+    private Xpp3Dom processConfiguration( MavenSession session, MojoExecution mojoExecution )
+    {
+        ExpressionEvaluator expressionEvaluator = new PluginParameterExpressionEvaluator( session, mojoExecution );
+
+        MojoDescriptor mojoDescriptor = mojoExecution.getMojoDescriptor();
+        
+        Map<String,Parameter> parameters = mojoDescriptor.getParameterMap();
+
+        Xpp3Dom configuration = mojoExecution.getConfiguration();
+        
+        for( Xpp3Dom c : configuration.getChildren() )
+        {
+            String configurationName = c.getName();
+            
+            Parameter parameter = parameters.get( configurationName );
+            
+            // Read-only
+            
+            if ( !parameter.isEditable() )
+            {
+                
+            }
+            
+            
+            
+            try
+            {
+                Object value = expressionEvaluator.evaluate( c.getValue() );
+                if ( value == null )
+                {
+                    String e = c.getAttribute( "default-value" );
+                    if ( e != null )
+                    {
+                        System.out.println( ">> " + e );
+                        value = expressionEvaluator.evaluate( e );
+                    }                    
+                }
+                
+                if ( value instanceof String || value instanceof File )
+                c.setValue( value.toString() );
+            }
+            catch ( ExpressionEvaluationException e )
+            {
+                // do nothing
+            }
+        }
+        
+        return mojoExecution.getConfiguration();
+    }
+    
+    
