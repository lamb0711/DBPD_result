PR: MNG-122
cleanup artifact metadata retrieval exceptions

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@320701 13f79535-47bb-0310-9956-ffa450edef68

-                throw new PluginVersionResolutionException( groupId, artifactId, "Cannot read plugin registry", e );
+                throw new PluginVersionResolutionException( groupId, artifactId,
+                                                            "Error readin plugin registry: " + e.getMessage(), e );
-                throw new PluginVersionResolutionException( groupId, artifactId, "Cannot parse plugin registry", e );
+                throw new PluginVersionResolutionException( groupId, artifactId,
+                                                            "Error parsing plugin registry: " + e.getMessage(), e );
+        // This takes the spec version and resolves a real version
-
-            // make sure this artifact was actually resolved to a file in the repo...
-            if ( artifact.getFile() != null )
-            {
-                MavenProject pluginProject = mavenProjectBuilder.buildFromRepository( artifact, project
-                    .getPluginArtifactRepositories(), localRepository, false );
-
-                boolean pluginValid = true;
-
-                // if we don't have the required Maven version, then ignore an update
-                if ( pluginProject.getPrerequisites() != null && pluginProject.getPrerequisites().getMaven() != null )
-                {
-                    DefaultArtifactVersion requiredVersion =
-                        new DefaultArtifactVersion( pluginProject.getPrerequisites().getMaven() );
-
-                    if ( runtimeInformation.getApplicationVersion().compareTo( requiredVersion ) < 0 )
-                    {
-                        getLogger().info( "Ignoring available plugin update: " + artifact.getVersion() +
-                            " as it requires Maven version " + requiredVersion );
-                        pluginValid = false;
-                    }
-                }
-
-                String artifactVersion = artifact.getVersion();
-
-                if ( pluginValid && !metaVersionId.equals( artifactVersion ) )
-                {
-                    version = artifactVersion;
-                }
-            }
-            getLogger().debug( "Failed to resolve " + metaVersionId + " version", e );
+            throw new PluginVersionResolutionException( groupId, artifactId, e.getMessage(), e );
-        catch ( ProjectBuildingException e )
+
+        // make sure this artifact was actually resolved to a file in the repo...
+        if ( artifact.getFile() != null )
-            throw new PluginVersionResolutionException( groupId, artifactId,
-                                                        "Unable to build resolve plugin project information", e );
+            MavenProject pluginProject;
+            try
+            {
+                pluginProject = mavenProjectBuilder.buildFromRepository( artifact,
+                                                                         project.getPluginArtifactRepositories(),
+                                                                         localRepository, false );
+            }
+            catch ( ProjectBuildingException e )
+            {
+                throw new PluginVersionResolutionException( groupId, artifactId,
+                                                            "Unable to build resolve plugin project information", e );
+            }
+
+            boolean pluginValid = true;
+
+            // if we don't have the required Maven version, then ignore an update
+            if ( pluginProject.getPrerequisites() != null && pluginProject.getPrerequisites().getMaven() != null )
+            {
+                DefaultArtifactVersion requiredVersion =
+                    new DefaultArtifactVersion( pluginProject.getPrerequisites().getMaven() );
+
+                if ( runtimeInformation.getApplicationVersion().compareTo( requiredVersion ) < 0 )
+                {
+                    getLogger().info( "Ignoring available plugin update: " + artifact.getVersion() +
+                        " as it requires Maven version " + requiredVersion );
+                    pluginValid = false;
+                }
+            }
+
+            String artifactVersion = artifact.getVersion();
+
+            if ( pluginValid && !metaVersionId.equals( artifactVersion ) )
+            {
+                version = artifactVersion;
+            }
