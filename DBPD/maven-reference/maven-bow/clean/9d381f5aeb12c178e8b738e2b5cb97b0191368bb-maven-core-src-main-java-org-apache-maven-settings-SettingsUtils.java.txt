use Java 5 generics

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@804537 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Iterator;
-        List dominantActiveProfiles = dominant.getActiveProfiles();
-        List recessiveActiveProfiles = recessive.getActiveProfiles();
+        List<String> dominantActiveProfiles = dominant.getActiveProfiles();
+        List<String> recessiveActiveProfiles = recessive.getActiveProfiles();
-                dominantActiveProfiles = new ArrayList();
+                dominantActiveProfiles = new ArrayList<String>();
-            for ( Iterator it = recessiveActiveProfiles.iterator(); it.hasNext(); )
+            for ( String profileId : recessiveActiveProfiles )
-                String profileId = (String) it.next();
-
-        List dominantPluginGroupIds = dominant.getPluginGroups();
+        List<String> dominantPluginGroupIds = dominant.getPluginGroups();
-        List recessivePluginGroupIds = recessive.getPluginGroups();
+        List<String> recessivePluginGroupIds = recessive.getPluginGroups();
-                dominantPluginGroupIds = new ArrayList();
+                dominantPluginGroupIds = new ArrayList<String>();
-            for ( Iterator it = recessivePluginGroupIds.iterator(); it.hasNext(); )
+            for ( String pluginGroupId : recessivePluginGroupIds )
-                String pluginGroupId = (String) it.next();
-
-    private static void shallowMergeById( List dominant, List recessive, String recessiveSourceLevel )
+    private static <T extends IdentifiableBase> void shallowMergeById( List<T> dominant, List<T> recessive,
+                                                                       String recessiveSourceLevel )
-        Map dominantById = mapById( dominant );
+        Map<String, T> dominantById = mapById( dominant );
-        for ( Iterator it = recessive.iterator(); it.hasNext(); )
+        for ( T identifiable : recessive )
-            IdentifiableBase identifiable = (IdentifiableBase) it.next();
-
-    private static Map mapById( List identifiables )
+    private static <T extends IdentifiableBase> Map<String, T> mapById( List<T> identifiables )
-        Map byId = new HashMap();
+        Map<String, T> byId = new HashMap<String, T>();
-        for ( Iterator it = identifiables.iterator(); it.hasNext(); )
+        for ( T identifiable : identifiables )
-            IdentifiableBase identifiable = (IdentifiableBase) it.next();
-
-        List repos = settingsProfile.getRepositories();
+        List<Repository> repos = settingsProfile.getRepositories();
-            for ( Iterator it = repos.iterator(); it.hasNext(); )
+            for ( Repository repo : repos )
-                profile.addRepository( convertFromSettingsRepository( (Repository) it.next() ) );
+                profile.addRepository( convertFromSettingsRepository( repo ) );
-        List pluginRepos = settingsProfile.getPluginRepositories();
+        List<Repository> pluginRepos = settingsProfile.getPluginRepositories();
-            for ( Iterator it = pluginRepos.iterator(); it.hasNext(); )
+            for ( Repository pluginRepo : pluginRepos )
-                profile.addPluginRepository( convertFromSettingsRepository( (Repository) it.next() ) );
+                profile.addPluginRepository( convertFromSettingsRepository( pluginRepo ) );
