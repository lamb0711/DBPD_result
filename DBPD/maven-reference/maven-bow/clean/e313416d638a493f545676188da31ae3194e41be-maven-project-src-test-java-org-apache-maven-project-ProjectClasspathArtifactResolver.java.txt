separate maven-project code

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@164217 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.MavenMetadataSource;
-import org.apache.maven.artifact.resolver.ArtifactResolver;
+import org.apache.maven.model.Dependency;
+import java.util.HashSet;
+import java.util.Iterator;
-    private static class Source
-        extends MavenMetadataSource
+    public static class Source
+        implements ArtifactMetadataSource
-        public Source( ArtifactResolver artifactResolver )
+        public Source()
-            super( artifactResolver );
+
+        protected Set createArtifacts( List dependencies, String inheritedScope )
+        {
+            Set projectArtifacts = new HashSet();
+
+            for ( Iterator i = dependencies.iterator(); i.hasNext(); )
+            {
+                Dependency d = (Dependency) i.next();
+
+                Artifact artifact = artifactFactory.createArtifact( d.getGroupId(), d.getArtifactId(), d.getVersion(),
+                                                                    d.getScope(), d.getType(), inheritedScope );
+                if ( artifact != null )
+                {
+                    projectArtifacts.add( artifact );
+                }
+            }
+
+            return projectArtifacts;
+        }
-        return super.resolveTransitively( artifacts, remoteRepositories, localRepository, new Source( this ), filter );
+        return super.resolveTransitively( artifacts, remoteRepositories, localRepository, new Source(), filter );
-        return super.resolveTransitively( artifacts, remoteRepositories, localRepository, new Source( this ) );
+        return super.resolveTransitively( artifacts, remoteRepositories, localRepository, new Source() );
-        return super.resolveTransitively( artifact, remoteRepositories, localRepository, new Source( this ) );
+        return super.resolveTransitively( artifact, remoteRepositories, localRepository, new Source() );
