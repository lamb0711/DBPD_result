o merging in my changes from the refactored embedder branch

  milos, this has some stuff that we worked on so i've tried to unify everythign in trunk
  now


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@483655 13f79535-47bb-0310-9956-ffa450edef68

-    private File basedir;
+    // ----------------------------------------------------------------------------
+    // Settings equivalents
+    // ----------------------------------------------------------------------------
-    /**
-     * @todo [BP] is this required? This hands off to MavenSession, but could be passed through the handler.handle function (+ createSession).
-     */
-
+    
-    private  List goals;
+    private boolean offline;
-    protected MavenSession session;
+    private boolean interactiveMode;
-    private  Settings settings;
+    private List proxies;
-    private boolean recursive = true;
+    private List servers;
-    private boolean reactorActive;
+    private List mirrors;
-    private String pomFilename;
+    private List profiles;
-    private String failureBehavior;
+    private List pluginGroups;
-    private  Properties properties;
+    private boolean usePluginRegistry;
-    private  Date startTime;
+    // ----------------------------------------------------------------------------
+    // Request
+    // ----------------------------------------------------------------------------
-    private  boolean showErrors;
+    private File basedir;
+
+    private List goals;
+
+    private Settings settings;
+
+    private boolean useReactor;
+
+    private String pomFile;
+
+    private String reactorFailureBehavior;
+
+    private Properties properties;
+
+    private Date startTime;
+
+    private boolean showErrors;
-    private boolean interactive;
-
-    private boolean activateDefaultEventMonitor;
-
-    private boolean offline;
-
+    private boolean recursive;
+
-    public boolean isRecursive()
-    {
-        return recursive;
-    }
-
-    public MavenSession getSession()
-    {
-        return session;
-    }
-
-        return pomFilename;
+        return pomFile;
-    public String getFailureBehavior()
+    public String getReactorFailureBehavior()
-        return failureBehavior;
+        return reactorFailureBehavior;
-    public boolean isInteractive()
+    public boolean isInteractiveMode()
-        return interactive;
+        return interactiveMode;
-    public boolean isDefaultEventMonitorActivated()
-    {
-        return activateDefaultEventMonitor;
-    }
-
-    public boolean isDefaultEventMonitorActive()
-    {
-        return activateDefaultEventMonitor;
-    }
-
+    public boolean isRecursive()
+    {
+        return recursive;
+    }
+
-        this.startTime= startTime;
+        this.startTime = startTime;
-    public MavenExecutionRequest setFailureBehavior( String failureBehavior )
+    public MavenExecutionRequest setReactorFailureBehavior( String failureBehavior )
-        this.failureBehavior = failureBehavior;
-
-        return this;
-    }
-
-    public MavenExecutionRequest setSession( MavenSession session )
-    {
-        this.session = session;
+        this.reactorFailureBehavior = failureBehavior;
-
-    public MavenExecutionRequest activateDefaultEventMonitor()
+    public MavenExecutionRequest setUseReactor( boolean reactorActive )
-        activateDefaultEventMonitor = true;
+        this.useReactor = reactorActive;
-    public MavenExecutionRequest setReactorActive( boolean reactorActive )
+    public boolean useReactor()
-        this.reactorActive = reactorActive;
-
-        return this;
-    }
-
-    public boolean isReactorActive()
-    {
-        return reactorActive;
+        return useReactor;
-        this.pomFilename = pomFilename;
+        this.pomFile = pomFilename;
-    public MavenExecutionRequest setRecursive( boolean recursive )
+    public MavenExecutionRequest setInteractiveMode( boolean interactive )
-        this.recursive = recursive;
-
-        return this;
-    }
-
-    public MavenExecutionRequest setInteractive( boolean interactive )
-    {
-        this.interactive = interactive;
+        this.interactiveMode = interactive;
+
+    // ----------------------------------------------------------------------------
+    // Settings equivalents 
+    // ----------------------------------------------------------------------------
+
+    public List getProxies()
+    {
+        return proxies;
+    }
+
+    public MavenExecutionRequest setProxies( List proxies )
+    {
+        this.proxies = proxies;
+
+        return this;
+    }
+
+    public List getServers()
+    {
+        return servers;
+    }
+
+    public MavenExecutionRequest setServers( List servers )
+    {
+        this.servers = servers;
+
+        return this;
+    }
+
+    public List getMirrors()
+    {
+        return mirrors;
+    }
+
+    public MavenExecutionRequest setMirrors( List mirrors )
+    {
+        this.mirrors = mirrors;
+
+        return this;
+    }
+
+    public List getProfiles()
+    {
+        return profiles;
+    }
+
+    public MavenExecutionRequest setProfiles( List profiles )
+    {
+        this.profiles = profiles;
+
+        return this;
+    }
+
+    public List getPluginGroups()
+    {
+        return pluginGroups;
+    }
+
+    public MavenExecutionRequest setPluginGroups( List pluginGroups )
+    {
+        this.pluginGroups = pluginGroups;
+
+        return this;
+    }
+
+    public boolean isUsePluginRegistry()
+    {
+        return usePluginRegistry;
+    }
+
+    public MavenExecutionRequest setUsePluginRegistry( boolean usePluginRegistry )
+    {
+        this.usePluginRegistry = usePluginRegistry;
+
+        return this;
+    }
+
+    public MavenExecutionRequest setRecursive( boolean recursive )
+    {
+        this.recursive = recursive;
+
+        return this;
+    }
+
