PR: MNG-1251
Submitted By: Jerome Lacoste
Reviewed By: John Casey

I did not apply this patch. A better solution was to initialize the artifact data a little more thoroughly, and only delegate those methods which must track changes to the main artifact (like version info, groupId, and artifactId...essentially, the things that determine how to locate metadata on the repository). For these delegating methods, I've disabled the corresponding setter methods with UnsupportedOperationException to indicate that these attributes must be managed via the main artifact, and why. The MavenProjectHelper will now lookup the proper ArtifactHandler for the given attachment type, and pass that on to the AttachedArtifact constructor also.

Jerome, thanks very much for the effort in exploring this issue. I appreciate the help.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@330392 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.resolver.filter.ArtifactFilter;
-    public AttachedArtifact( Artifact parent, String type, String classifier )
+    public AttachedArtifact( Artifact parent, String type, String classifier, ArtifactHandler artifactHandler )
-               classifier, parent.getArtifactHandler(), parent.isOptional() );
+               classifier, artifactHandler, parent.isOptional() );
+        
+        setDependencyTrail( Collections.singletonList( parent.getId() ) );
+        
-
-        if ( type == null || type.trim().length() < 1 )
+        
+        if ( getId().equals( parent.getId() ) )
-            throw new InvalidArtifactRTException( getGroupId(), getArtifactId(), getVersion(), type,
-                                                  "Attached artifacts must specify a type." );
-        }
-
-        if ( classifier == null || classifier.trim().length() < 1 )
-        {
-            throw new InvalidArtifactRTException( getGroupId(), getArtifactId(), getVersion(), type,
-                                                  "Attached artifacts must specify a classifier." );
+            throw new InvalidArtifactRTException( parent.getGroupId(), parent.getArtifactId(), parent.getVersion(), parent.getType(), "An attached artifact must have a different ID than its corresponding main artifact." );
-    public ArtifactHandler getArtifactHandler()
+    public AttachedArtifact( Artifact parent, String type, ArtifactHandler artifactHandler )
-        return parent.getArtifactHandler();
+        this( parent, type, null, artifactHandler );
-
-    public String getArtifactId()
+    
+    public void setArtifactId( String artifactId )
-        return parent.getArtifactId();
+        throw new UnsupportedOperationException( "Cannot change the artifactId for an attached artifact.  It is derived from the main artifact." );
+    
+    public void setAvailableVersions( List availableVersions )
+    {
+        throw new UnsupportedOperationException( "Cannot change the version information for an attached artifact. It is derived from the main artifact." );
+    }
-
-    public ArtifactFilter getDependencyFilter()
+    
+    public void setBaseVersion( String baseVersion )
-        return parent.getDependencyFilter();
-    }
-
-    public List getDependencyTrail()
-    {
-        return parent.getDependencyTrail();
+        throw new UnsupportedOperationException( "Cannot change the version information for an attached artifact. It is derived from the main artifact." );
-
-    public String getGroupId()
+    
+    public void setDownloadUrl( String downloadUrl )
-        return parent.getGroupId();
+        throw new UnsupportedOperationException( "Cannot change the download information for an attached artifact. It is derived from the main artifact." );
+    }
+
+    public void setGroupId( String groupId )
+    {
+        throw new UnsupportedOperationException( "Cannot change the groupId on attached artifacts. It is derived from the main artifact." );
+    
+    public void setRepository( ArtifactRepository repository )
+    {
+        throw new UnsupportedOperationException( "Cannot change the repository information for an attached artifact. It is derived from the main artifact." );
+    }
-
-    public String getType()
+    
+    public void setScope( String scope )
-        return parent.getType();
+        throw new UnsupportedOperationException( "Cannot change the scoping information for an attached artifact. It is derived from the main artifact." );
+    
+    public void setVersion( String version )
+    {
+        throw new UnsupportedOperationException( "Cannot change the version information for an attached artifact. It is derived from the main artifact." );
+    }
-
-    public boolean isOptional()
+    
+    public void setVersionRange( VersionRange range )
-        return parent.isOptional();
+        throw new UnsupportedOperationException( "Cannot change the version information for an attached artifact. It is derived from the main artifact." );
+    
+    public void setRelease( boolean release )
+    {
+        throw new UnsupportedOperationException( "Cannot change the version information for an attached artifact. It is derived from the main artifact." );
+    }
-
+    
+        // we must fail silently here to avoid problems with the artifact transformers.
