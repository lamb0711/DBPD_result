add metadata for new artifact

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@290084 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.repository.metadata.Snapshot;
+import org.apache.maven.artifact.repository.metadata.Versioning;
+import org.apache.maven.tools.repoclean.digest.Digestor;
+import java.security.NoSuchAlgorithmException;
+    private Digestor artifactDigestor;
+
-        mergeMetadata( metadataSource, metadataTarget, transaction, artifactReporter, reportOnly );
+        Metadata sourceMetadata = readMetadata( metadataSource, artifact );
+        if ( sourceMetadata.getVersioning() == null )
+        {
+            sourceMetadata.setVersioning( new Versioning() );
+        }
+        if ( !sourceMetadata.getVersioning().getVersions().contains( artifact.getBaseVersion() ) )
+        {
+            sourceMetadata.getVersioning().addVersion( artifact.getBaseVersion() );
+        }
+        mergeMetadata( sourceMetadata, metadataTarget, reportOnly );
-        mergeMetadata( metadataSource, metadataTarget, transaction, artifactReporter, reportOnly );
+        sourceMetadata = readMetadata( metadataSource, artifact );
+        if ( artifact.isSnapshot() )
+        {
+            if ( sourceMetadata.getVersioning() == null )
+            {
+                sourceMetadata.setVersioning( new Versioning() );
+            }
+            if ( sourceMetadata.getVersioning().getSnapshot() == null )
+            {
+                sourceMetadata.getVersioning().setSnapshot( new Snapshot() );
+            }
+
+            int i = artifact.getVersion().indexOf( '-' );
+            if ( i >= 0 )
+            {
+                Snapshot snapshot = sourceMetadata.getVersioning().getSnapshot();
+                snapshot.setTimestamp( artifact.getVersion().substring( 0, i ) );
+                snapshot.setBuildNumber( Integer.valueOf( artifact.getVersion().substring( i + 1 ) ).intValue() );
+            }
+        }
+        mergeMetadata( sourceMetadata, metadataTarget, reportOnly );
-    private void mergeMetadata( File source, File target, RewriteTransaction transaction, Reporter artifactReporter,
-                                boolean reportOnly )
-        throws IOException, DigestException, ReportWriteException, XmlPullParserException
+    private void mergeMetadata( Metadata sourceMetadata, File target, boolean reportOnly )
+        throws IOException, DigestException, XmlPullParserException, NoSuchAlgorithmException
-        if ( source.exists() )
+        if ( target.exists() )
-            if ( !target.exists() )
+            Metadata targetMetadata = null;
+
+            Reader reader = null;
+
+            try
-                copyMetadata( source, target, transaction, artifactReporter, reportOnly );
-            }
-            else
-            {
+                reader = new FileReader( target );
+
-                Metadata sourceMetadata = null;
+                targetMetadata = mappingReader.read( reader );
+            }
+            finally
+            {
+                IOUtil.close( reader );
+            }
-                Reader reader = null;
+            boolean changed = targetMetadata.merge( sourceMetadata );
+            if ( changed )
+            {
+                Writer writer = null;
-                    reader = new FileReader( source );
+                    target.getParentFile().mkdirs();
+                    writer = new FileWriter( target );
-                    sourceMetadata = mappingReader.read( reader );
+                    MetadataXpp3Writer mappingWriter = new MetadataXpp3Writer();
+
+                    mappingWriter.write( writer, targetMetadata );
+
+                    if ( !reportOnly )
+                    {
+                        File digestFile = artifactDigestor.getDigestFile( target, Digestor.MD5 );
+                        artifactDigestor.createArtifactDigest( target, digestFile, Digestor.MD5 );
+                        digestFile = artifactDigestor.getDigestFile( target, Digestor.SHA );
+                        artifactDigestor.createArtifactDigest( target, digestFile, Digestor.SHA );
+                    }
-                    IOUtil.close( reader );
-                    reader = null;
+                    IOUtil.close( writer );
-
-                Metadata targetMetadata = null;
-
-                try
-                {
-                    reader = new FileReader( target );
-
-                    targetMetadata = mappingReader.read( reader );
-                }
-                finally
-                {
-                    IOUtil.close( reader );
-                }
-
-                boolean changed = false;
-
-                changed |= targetMetadata.merge( sourceMetadata );
-
-                if ( changed )
-                {
-                    Writer writer = null;
-                    try
-                    {
-                        target.getParentFile().mkdirs();
-                        writer = new FileWriter( target );
-
-                        MetadataXpp3Writer mappingWriter = new MetadataXpp3Writer();
-
-                        mappingWriter.write( writer, targetMetadata );
-                    }
-                    finally
-                    {
-                        IOUtil.close( writer );
-                    }
-                }
-
-                digestVerifier.verifyDigest( source, target, transaction, artifactReporter, reportOnly );
+    private Metadata readMetadata( File source, Artifact artifact )
+        throws IOException, XmlPullParserException
+    {
+        Metadata sourceMetadata = null;
+
+        if ( source.exists() )
+        {
+            Reader reader = null;
+
+            try
+            {
+                reader = new FileReader( source );
+
+                MetadataXpp3Reader mappingReader = new MetadataXpp3Reader();
+
+                sourceMetadata = mappingReader.read( reader );
+            }
+            finally
+            {
+                IOUtil.close( reader );
+            }
+        }
+
+        if ( sourceMetadata == null )
+        {
+            sourceMetadata = new Metadata();
+
+            sourceMetadata.setGroupId( artifact.getGroupId() );
+            sourceMetadata.setArtifactId( artifact.getArtifactId() );
+            sourceMetadata.setVersion( artifact.getBaseVersion() );
+        }
+        return sourceMetadata;
+    }
+
