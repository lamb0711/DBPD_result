[MNG-4107] ser settings can't override properties used for POM interpolation. Cleaned up the interpolation code and the MavenProjectBuilder impl. Building and interpolation is now more clearly separated.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@761104 13f79535-47bb-0310-9956-ffa450edef68

-    public static PomClassicDomainModel mergeProfilesIntoModel(Collection<Profile> profiles, Model model, boolean isMostSpecialized) throws IOException
+    public static PomClassicDomainModel mergeProfilesIntoModel(Collection<Profile> profiles, PomClassicDomainModel domainModel) throws IOException
+        Model model = domainModel.getModel();
-        return convertToDomainModel( target, isMostSpecialized );
+        PomClassicDomainModel targetModel = convertToDomainModel( target, domainModel.isMostSpecialized());
+        targetModel.setParentFile(domainModel.getParentFile());
+        targetModel.setProjectDirectory(domainModel.getProjectDirectory());
+        return targetModel;
-        PomClassicDomainModel model = convertToDomainModel( target, false );
-        List<ModelProperty> props = new ArrayList<ModelProperty>( model.getModelProperties());
-        
-        //Seem to lose packaging here if it is a default jar value
-        if("jar".equals( target.getPackaging() ) )
-        {
-            props.add( new ModelProperty(ProjectUri.packaging, "jar") );
-        }
-        
-        interpolateModelProperties( props, interpolationProperties, child );
-        List<ModelProperty> modelProperties;
-        if ( child.getProjectDirectory() != null )
-        {
-            modelProperties = alignPaths( model.getModelProperties(), child.getProjectDirectory() );
-        }
-        else
-        {
-            modelProperties = model.getModelProperties();
-        }
-        return new PomClassicDomainModel( modelProperties );	    	
+        PomClassicDomainModel domainModel = new PomClassicDomainModel( convertToDomainModel( target, child.isMostSpecialized() ).getModelProperties(), child.isMostSpecialized() );
+        domainModel.setProjectDirectory(child.getProjectDirectory());
+        domainModel.setParentFile(child.getParentFile());
+        return domainModel;
-
+        
+        if("jar".equals( dm.getModel().getPackaging() ) )
+        {
+            modelProperties.add( new ModelProperty(ProjectUri.packaging, "jar") );
+        }  
+        
-
+        
+            
+        if ( dm.getProjectDirectory() != null )
+        {
+            modelProperties = alignPaths( modelProperties, dm.getProjectDirectory() );
+        }
+        
