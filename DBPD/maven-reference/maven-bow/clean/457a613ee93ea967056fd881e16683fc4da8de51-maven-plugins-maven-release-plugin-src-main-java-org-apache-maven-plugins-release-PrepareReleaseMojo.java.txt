various release plugin fixes

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@279256 13f79535-47bb-0310-9956-ffa450edef68

-     * @parameter expression="${maven.username}"
+     * @parameter expression="${username}"
-    private String username = System.getProperty( "user.name" );
+    private String username;
-            for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )
-            {
-                MavenProject project = (MavenProject) it.next();
-
-                getVersionResolver().incrementVersion( project );
-
-                getScmRewriter().restoreScmInfo( project );
-            }
-
+                    getVersionResolver().incrementVersion( project );
+
+                    getScmRewriter().restoreScmInfo( project );
+                }
+
+                for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )
+                {
+                    MavenProject project = (MavenProject) it.next();
+
+        }
+        Writer writer = null;
-            Writer writer = null;
+        try
+        {
+            writer = new FileWriter( project.getFile() );
-            try
-            {
-                writer = new FileWriter( project.getFile() );
-
-                project.writeOriginalModel( writer );
-            }
-            catch ( IOException e )
-            {
-                throw new MojoExecutionException( "Cannot write development version of pom to: " + project.getFile(),
-                                                  e );
-            }
-            finally
-            {
-                IOUtil.close( writer );
-            }
+            project.writeOriginalModel( writer );
+        }
+        catch ( IOException e )
+        {
+            throw new MojoExecutionException( "Cannot write development version of pom to: " + project.getFile(), e );
+        }
+        finally
+        {
+            IOUtil.close( writer );
+                if ( username == null )
+                {
+                    username = System.getProperty( "user.name" );
+                }
+        throws MojoExecutionException
-            scmRewriter = new ProjectScmRewriter();
+            scmRewriter = new ProjectScmRewriter( getReleaseProgress() );
-                ScmHelper scm = getScm();
-
-                scm.setWorkingDirectory( basedir );
+                ScmHelper scm = getScm( basedir );
-                    ScmHelper scm = getScm();
-
-                    scm.setWorkingDirectory( basedir );
+                    ScmHelper scm = getScm( basedir );
-            checkIn( "**/pom.xml,**/release-pom.xml", "[maven-release-plugin] prepare release " + getTagLabel() );
+            checkIn( "[maven-release-plugin] prepare release " + getTagLabel() );
-                    String releasePom = trimPathForScmCalculation( currentReleasePomFile );
+                    String releasePomPath = trimPathForScmCalculation( currentReleasePomFile );
-                    releasePom = releasePom.substring( canonicalBasedir.length() );
+                    releasePomPath = releasePomPath.substring( canonicalBasedir.length() + 1 );
-                    getScm().remove( "Removing for next development iteration.", releasePom );
+                    ScmHelper scm = getScm( basedir );
+
+                    scm.remove( "Removing for next development iteration.", releasePomPath );
-            checkIn( "**/pom.xml", "[maven-release-plugin] prepare for next development iteration" );
+            checkIn( "[maven-release-plugin] prepare for next development iteration" );
-    private void checkIn( String includePattern, String message )
+    private void checkIn( String message )
-            ScmHelper scm = getScm();
-
-            scm.setWorkingDirectory( basedir );
+            ScmHelper scm = getScm( basedir );
-            scm.checkin( message, includePattern, null );
+            scm.checkin( message );
-                ScmHelper scm = getScm();
-
-                scm.setWorkingDirectory( basedir );
+                ScmHelper scm = getScm( basedir );
