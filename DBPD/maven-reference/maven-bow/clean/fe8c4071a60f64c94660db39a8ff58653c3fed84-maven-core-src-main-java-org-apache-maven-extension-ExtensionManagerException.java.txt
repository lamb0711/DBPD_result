Switching back to selectively import extensions into a project-specific ClassRealm, except this time extension realms will be shared (the origin of the aforementioned imports) to conserve memory tied up by classloading. Similarly, plugin realms are managed using a key produced from g:a:v of the plugin, plus the hashcode of all g:a:v of the plugin-level dependencies aggregated into one string, to distinguish the deploy plugin 2.0 with no deps from the deploy plugin 2.0 with a plugin-level dep on wagon-webdav. Plugin realms have their parent realms managed by the pluginManager now prior to lookup or execution of the mojo instance, and PluginDescriptor.(classRealm|artifacts) attributes are set for each execution. Likewise, the MavenPluginCollector now tracks plugin descriptors with their version information included, instead of just using g:a.

Had to bump the plexus-container-default version up to alpha-36 to fix a problem in ClassicSingletonComponentManager. All realms for extensions, plugins, and projects (which contain only imports from extensions) are now managed by the MavenRealmManager.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@591391 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.resolver.ArtifactNotFoundException;
+import org.apache.maven.artifact.resolver.ArtifactResolutionException;
+import org.apache.maven.execution.RealmManagementException;
+import org.apache.maven.plugin.InvalidPluginException;
+import org.apache.maven.plugin.PluginManagerException;
+import org.apache.maven.plugin.PluginNotFoundException;
+import org.apache.maven.plugin.version.PluginVersionNotFoundException;
+import org.apache.maven.plugin.version.PluginVersionResolutionException;
+
-    private String projectId;
+
+    private String projectGroupId;
+
+    private String projectArtifactId;
+
+    private String projectVersion;
-                                      String projectId,
+                                      String projectGroupId,
+                                      String projectArtifactId,
+                                      String projectVersion,
-        this.projectId = projectId;
+        this.projectGroupId = projectGroupId;
+        this.projectArtifactId = projectArtifactId;
+        this.projectVersion = projectVersion;
-                                      String projectId,
-                                      DuplicateRealmException cause )
-    {
-        super( message, cause );
-        this.extensionArtifact = extensionArtifact;
-        this.projectId = projectId;
-    }
-
-    public ExtensionManagerException( String message,
-                                      Artifact extensionArtifact,
-                                      String projectId,
+                                      String projectGroupId,
+                                      String projectArtifactId,
+                                      String projectVersion,
-        this.projectId = projectId;
+        this.projectGroupId = projectGroupId;
+        this.projectArtifactId = projectArtifactId;
+        this.projectVersion = projectVersion;
-                                      String projectId,
+                                      String projectGroupId,
+                                      String projectArtifactId,
+                                      String projectVersion,
-        this.projectId = projectId;
+        this.projectGroupId = projectGroupId;
+        this.projectArtifactId = projectArtifactId;
+        this.projectVersion = projectVersion;
-                                      String projectId,
+                                      String projectGroupId,
+                                      String projectArtifactId,
+                                      String projectVersion,
-        this.projectId = projectId;
+        this.projectGroupId = projectGroupId;
+        this.projectArtifactId = projectArtifactId;
+        this.projectVersion = projectVersion;
-                                      String projectId,
+                                      String projectGroupId,
+                                      String projectArtifactId,
+                                      String projectVersion,
-        this.projectId = projectId;
+        this.projectGroupId = projectGroupId;
+        this.projectArtifactId = projectArtifactId;
+        this.projectVersion = projectVersion;
-                                      String projectId,
+                                      String projectGroupId,
+                                      String projectArtifactId,
+                                      String projectVersion,
-        this.projectId = projectId;
+        this.projectGroupId = projectGroupId;
+        this.projectArtifactId = projectArtifactId;
+        this.projectVersion = projectVersion;
-                                      String projectId,
+                                      String projectGroupId,
+                                      String projectArtifactId,
+                                      String projectVersion,
-        this.projectId = projectId;
+        this.projectGroupId = projectGroupId;
+        this.projectArtifactId = projectArtifactId;
+        this.projectVersion = projectVersion;
-                                      String projectId )
+                                      String projectGroupId,
+                                      String projectArtifactId,
+                                      String projectVersion )
-        this.projectId = projectId;
+        this.projectGroupId = projectGroupId;
+        this.projectArtifactId = projectArtifactId;
+        this.projectVersion = projectVersion;
-                                      String projectId,
+                                      String projectGroupId,
+                                      String projectArtifactId,
+                                      String projectVersion,
-        this.projectId = projectId;
+        this.projectGroupId = projectGroupId;
+        this.projectArtifactId = projectArtifactId;
+        this.projectVersion = projectVersion;
+    public ExtensionManagerException( String message,
+                                      Artifact extensionArtifact,
+                                      String projectGroupId,
+                                      String projectArtifactId,
+                                      String projectVersion,
+                                      RealmManagementException cause )
+    {
+        super( message, cause );
+        this.extensionArtifact = extensionArtifact;
+        this.projectGroupId = projectGroupId;
+        this.projectArtifactId = projectArtifactId;
+        this.projectVersion = projectVersion;
+    }
+
+    public ExtensionManagerException( String message,
+                                      Artifact extensionArtifact,
+                                      String projectGroupId,
+                                      String projectArtifactId,
+                                      String projectVersion,
+                                      ArtifactResolutionException cause )
+    {
+        super( message, cause );
+        this.extensionArtifact = extensionArtifact;
+        this.projectGroupId = projectGroupId;
+        this.projectArtifactId = projectArtifactId;
+        this.projectVersion = projectVersion;
+    }
+
+    public ExtensionManagerException( String message,
+                                      Artifact extensionArtifact,
+                                      String projectGroupId,
+                                      String projectArtifactId,
+                                      String projectVersion,
+                                      ArtifactNotFoundException cause )
+    {
+        super( message, cause );
+        this.extensionArtifact = extensionArtifact;
+        this.projectGroupId = projectGroupId;
+        this.projectArtifactId = projectArtifactId;
+        this.projectVersion = projectVersion;
+    }
+
+    public ExtensionManagerException( String message,
+                                      Artifact extensionArtifact,
+                                      String projectGroupId,
+                                      String projectArtifactId,
+                                      String projectVersion,
+                                      PluginNotFoundException cause )
+    {
+        super( message, cause );
+        this.extensionArtifact = extensionArtifact;
+        this.projectGroupId = projectGroupId;
+        this.projectArtifactId = projectArtifactId;
+        this.projectVersion = projectVersion;
+    }
+
+    public ExtensionManagerException( String message,
+                                      Artifact extensionArtifact,
+                                      String projectGroupId,
+                                      String projectArtifactId,
+                                      String projectVersion,
+                                      PluginVersionResolutionException cause )
+    {
+        super( message, cause );
+        this.extensionArtifact = extensionArtifact;
+        this.projectGroupId = projectGroupId;
+        this.projectArtifactId = projectArtifactId;
+        this.projectVersion = projectVersion;
+    }
+
+    public ExtensionManagerException( String message,
+                                      Artifact extensionArtifact,
+                                      String projectGroupId,
+                                      String projectArtifactId,
+                                      String projectVersion,
+                                      InvalidPluginException cause )
+    {
+        super( message, cause );
+        this.extensionArtifact = extensionArtifact;
+        this.projectGroupId = projectGroupId;
+        this.projectArtifactId = projectArtifactId;
+        this.projectVersion = projectVersion;
+    }
+
+    public ExtensionManagerException( String message,
+                                      Artifact extensionArtifact,
+                                      String projectGroupId,
+                                      String projectArtifactId,
+                                      String projectVersion,
+                                      PluginManagerException cause )
+    {
+        super( message, cause );
+        this.extensionArtifact = extensionArtifact;
+        this.projectGroupId = projectGroupId;
+        this.projectArtifactId = projectArtifactId;
+        this.projectVersion = projectVersion;
+    }
+
+    public ExtensionManagerException( String message,
+                                      Artifact extensionArtifact,
+                                      String projectGroupId,
+                                      String projectArtifactId,
+                                      String projectVersion,
+                                      PluginVersionNotFoundException cause )
+    {
+        super( message, cause );
+        this.extensionArtifact = extensionArtifact;
+        this.projectGroupId = projectGroupId;
+        this.projectArtifactId = projectArtifactId;
+        this.projectVersion = projectVersion;
+    }
+
-    public String getProjectId()
+    public String getProjectGroupId()
-        return projectId;
+        return projectGroupId;
+    }
+
+    public String getProjectArtifactId()
+    {
+        return projectArtifactId;
+    }
+
+    public String getProjectVersion()
+    {
+        return projectVersion;
