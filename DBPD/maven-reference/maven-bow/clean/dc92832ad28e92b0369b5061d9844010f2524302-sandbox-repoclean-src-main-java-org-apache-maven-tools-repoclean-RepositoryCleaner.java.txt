o Fixed bash scripts (cygwin option was being tested incorrectly, and resulting in no such file: cygpath)
o Changed POM handling to use ArtifactMetadata API rather than direct Artifact construction for POMs
o Streamlined ArtifactDigestor to avoid use of byte arrays for transfer between methods (resulted in a bit of cut-and-paste code, but should run better)
o Pegged OutOfMemoryError to the ArtifactDigestVerifier/ArtifactDigestor combo (motivated the previous change)
o Cleaned up artifact source-file checking before creating any of the target directory structures
o Maybe works, maybe not...will resume testing tomorrow or the next day


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163743 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.metadata.ArtifactMetadata;
+import org.apache.maven.tools.repoclean.artifact.metadata.ProjectMetadata;
+            logger.info("Rewriting " + artifacts.size() + " artifacts (Should be " + (artifacts.size() * 2) + " rewrites including POMs).");
-                    File artifactTarget = new File( targetRepo.getBasedir(), targetRepo.pathOf( artifact ) );
-
-                    artifact.setFile( artifactSource );
-                    try
+                    if(artifactSource.exists())
-                        if ( !configuration.reportOnly() )
+                        File artifactTarget = new File( targetRepo.getBasedir(), targetRepo.pathOf( artifact ) );
+
+                        artifact.setFile( artifactSource );
+                        
+                        try
-                            if(logger.isDebugEnabled())
+                            if ( !configuration.reportOnly() )
-                                logger.debug( "sourceRepo basedir is: \'" + sourceRepo.getBasedir() + "\'" );
-                                logger.debug( "targetRepo basedir is: \'" + targetRepo.getBasedir() + "\'" );
-                            }
+                                if(logger.isDebugEnabled())
+                                {
+                                    logger.debug( "sourceRepo basedir is: \'" + sourceRepo.getBasedir() + "\'" );
+                                    logger.debug( "targetRepo basedir is: \'" + targetRepo.getBasedir() + "\'" );
+                                }
-                            File targetParent = artifactTarget.getParentFile();
-                            if ( !targetParent.exists() )
+                                File targetParent = artifactTarget.getParentFile();
+                                if ( !targetParent.exists() )
+                                {
+                                    targetParent.mkdirs();
+                                }
+
+                                if ( logger.isDebugEnabled() )
+                                {
+                                    logger.debug( "Copying artifact[" + artifact.getId() + "] from \'" + artifactSource
+                                        + "\' to \'" + artifactTarget + "\'." );
+                                }
+
+                                copyArtifact( artifact, artifactTarget, artifactReporter );
+                            }
+                            else
-                                targetParent.mkdirs();
+                                artifactReporter.info( "Skipping artifact copy (we're in report-only mode)." );
+                        }
+                        catch ( Exception e )
+                        {
+                            repoReporter.error( "Error transferring artifact[" + artifact.getId()
+                                + "] to the target repository.", e );
+                            // if we can't copy the jar over, then skip the rest.
+                            errorOccurred = true;
+                        }
+
+                        if ( !errorOccurred )
+                        {
-                                logger.debug( "Copying artifact[" + artifact.getId() + "] from \'" + artifactSource
-                                    + "\' to \'" + artifactTarget + "\'." );
+                                logger.debug( "working on digest for artifact[" + artifact.getId() + "] with groupId: \'"
+                                    + artifact.getGroupId() + "\'" );
-                            copyArtifact( artifactSource, artifactTarget, artifactReporter );
+                            try
+                            {
+                                artifactDigestVerifier.verifyDigest( artifact, artifactTarget, artifactReporter,
+                                                                     configuration.reportOnly() );
+                            }
+                            catch ( Exception e )
+                            {
+                                repoReporter.error( "Error verifying digest for artifact[" + artifact.getId() + "]", e );
+                            }
-                        else
+
+                        if ( !errorOccurred )
-                            artifactReporter.info( "Skipping artifact copy (we're in report-only mode)." );
+                            ArtifactMetadata pom = new ProjectMetadata( artifact );
+                            
+                            artifactPomRewriter = (ArtifactPomRewriter) container.lookup( ArtifactPomRewriter.ROLE,
+                                                                                          configuration.getSourcePomVersion() );
+
+                            File sourcePom = new File( sourceRepositoryBase, sourceRepo.pathOfMetadata( pom ) );
+
+                            File targetPom = new File( targetRepositoryBase, targetRepo.pathOfMetadata( pom ) );
+
+                            try
+                            {
+                                artifactPomRewriter.rewrite( artifact, sourcePom, targetPom, artifactReporter,
+                                                             configuration.reportOnly() );
+                            }
+                            catch ( Exception e )
+                            {
+                                repoReporter.error( "Error rewriting POM for artifact[" + artifact.getId()
+                                    + "] into the target repository.", e );
+                            }
+
-                    catch ( Exception e )
+                    else
-                        repoReporter.error( "Error transferring artifact[" + artifact.getId()
-                            + "] to the target repository.", e );
-
-                        // if we can't copy the jar over, then skip the rest.
-                        errorOccurred = true;
+                        artifactReporter.error("Cannot find source file for artifact: \'" + artifact.getId() + "\' under path: \'" + artifactSource + "\'");
-
-                    if ( !errorOccurred )
-                    {
-                        if ( logger.isDebugEnabled() )
-                        {
-                            logger.debug( "working on digest for artifact[" + artifact.getId() + "] with groupId: \'"
-                                + artifact.getGroupId() + "\'" );
-                        }
-
-                        try
-                        {
-                            artifactDigestVerifier.verifyDigest( artifact, artifactTarget, artifactReporter,
-                                                                 configuration.reportOnly() );
-                        }
-                        catch ( Exception e )
-                        {
-                            repoReporter.error( "Error verifying digest for artifact[" + artifact.getId() + "]", e );
-                        }
-                    }
-
-                    if ( !errorOccurred )
-                    {
-                        Artifact pomArtifact = buildPomArtifact( artifact );
-
-                        artifactPomRewriter = (ArtifactPomRewriter) container.lookup( ArtifactPomRewriter.ROLE,
-                                                                                      configuration.getSourcePomVersion() );
-
-                        File sourcePom = new File( sourceRepositoryBase, sourceRepo.pathOf( pomArtifact ) );
-
-                        File targetPom = new File( targetRepositoryBase, targetRepo.pathOf( pomArtifact ) );
-
-                        try
-                        {
-                            artifactPomRewriter.rewrite( artifact, sourcePom, targetPom, artifactReporter,
-                                                         configuration.reportOnly() );
-                        }
-                        catch ( Exception e )
-                        {
-                            repoReporter.error( "Error rewriting POM for artifact[" + artifact.getId()
-                                + "] into the target repository.", e );
-                        }
-                    }
-
+                    
-
-                    if ( artifactReporter.hasWarning() )
-                    {
-                        repoReporter.info( "Warning(s) occurred while rewriting artifact: \'" + artifact.getId()
-                            + "\' or its POM." );
-                    }
+                }
+                catch(Exception e)
+                {
+                    artifactReporter.error("Error while rewriting file or POM for artifact: \'" + artifact.getId() + "\'", e);
-    private void copyArtifact( File artifactSource, File artifactTarget, Reporter reporter )
+    private void copyArtifact( Artifact artifact, File artifactTarget, Reporter reporter )
+        File artifactSource = artifact.getFile();
+        
-    private Artifact buildPomArtifact( Artifact artifact )
-    {
-        return artifactConstructionSupport.createArtifact( artifact.getGroupId(), artifact.getArtifactId(),
-                                                           artifact.getVersion(), artifact.getScope(), "pom" );
-    }
-
