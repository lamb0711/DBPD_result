convert compiler mojo to new execute()


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163657 13f79535-47bb-0310-9956-ffa450edef68

- * type="String"
+ * type="boolean"
-    private boolean debug = false;
+    // TODO: use boolean when supported
+    private String debug = Boolean.FALSE.toString();
-    public void execute( PluginExecutionRequest request, PluginExecutionResponse response )
-        throws Exception
+    private List compileSourceRoots;
+
+    private List classpathElements;
+
+    private String outputDirectory;
+
+    private String source;
+
+    private String target;
+
+    public void execute()
+        throws PluginExecutionException
-        List compileSourceRoots = (List) request.getParameter( "compileSourceRoots" );
-
-        String outputDirectory = (String) request.getParameter( "outputDirectory" );
-
-        List classpathElements = (List) request.getParameter( "classpathElements" );
-
-        // ----------------------------------------------------------------------
-        //
-        // ----------------------------------------------------------------------
-
-        String source = ( String ) request.getParameter( "source" );
-        String target = ( String ) request.getParameter( "target" );
-        
-        /* Compile with debugging info */
-        String debugAsString = (String) request.getParameter( "debug" );
-        if ( debugAsString != null )
+        if ( debug != null && "true".equals( debug ) )
-            if ( Boolean.valueOf( debugAsString ).booleanValue() )
-            {
-                compilerConfiguration.setDebug( true );
-            }
+            compilerConfiguration.setDebug( true );
-        List messages = compiler.compile( compilerConfiguration );
-
-        // TODO: doesn't appear to be called
-        if ( debug )
+        List messages = null;
+        try
-            for ( Iterator i = classpathElements.iterator(); i.hasNext(); )
-            {
-                String message;
-
-                String classpathElement = (String) i.next();
-                if ( new File( classpathElement ).exists() )
-                {
-                    message = "present in repository.";
-                }
-                else
-                {
-                    message = "Warning! not present in repository!";
-                }
-
-                getLog().debug( "classpathElements[ " + i + " ] = " + classpathElement + ": " + message );
-            }
+            messages = compiler.compile( compilerConfiguration );
+        }
+        catch ( Exception e )
+        {
+            // TODO: don't catch Exception
+            throw new PluginExecutionException( "Fatal error compiling", e );
-            response.setExecutionFailure( new CompilationFailureResponse( messages ) );
+            throw new CompilationFailureException( messages );
