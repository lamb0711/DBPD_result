PR: MNG-1001
Submitted by: Johnny R. Ruiz III
add VCS section based on scm URL


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@327911 13f79535-47bb-0310-9956-ffa450edef68

-        if ( !workspaceFile.exists() )
-        {
-            FileWriter w = null;
-            try
-            {
-                w = new FileWriter( workspaceFile );
-                IOUtil.copy( getClass().getResourceAsStream( "/templates/default/workspace.xml" ), w );
-            }
-            catch ( IOException e )
-            {
-                throw new MojoExecutionException( "Unable to create workspace file", e );
-            }
-            finally
-            {
-                IOUtil.close( w );
-            }
+        FileWriter writer = null;
+
+        Reader reader = null;
+
+        Xpp3Dom module = null;
+        
+        try
+        {
+            if ( workspaceFile.exists() )
+            {
+                reader = new FileReader( workspaceFile );
+            }
+            else
+            {
+                reader = new InputStreamReader( getClass().getResourceAsStream( "/templates/default/workspace.xml" ) );
+            }
+            module = Xpp3DomBuilder.build( reader );
+            
+            setProjectScmType( module );
+            
+            writer = new FileWriter( workspaceFile );
+            
+            Xpp3DomWriter.write( writer, module );
+        }
+        catch ( XmlPullParserException e )
+        {
+            throw new MojoExecutionException( "Error parsing existing IWS file: " + workspaceFile.getAbsolutePath(),
+                                              e );
+        }
+        catch ( IOException e )
+        {
+            throw new MojoExecutionException( "Unable to create workspace file", e );
+        }
+        finally
+        {
+            IOUtil.close(reader);
+
+            IOUtil.close( writer );
+     * Returns a an Xpp3Dom element with (child) tag name and (name) attribute name.
+     *
+     * @param component Xpp3Dom element
+     * @param name Setting attribute to find
+     * @return option Xpp3Dom element
+     */
+    private Xpp3Dom findElementName( Xpp3Dom component,  String child, String name )
+    {
+        Xpp3Dom[] elements = component.getChildren( child );
+        for ( int i = 0; i < elements.length; i++ )
+        {
+            if ( name.equals( elements[i].getAttribute( "name" ) ) )
+            {
+                return elements[i];
+            }
+        }
+
+        Xpp3Dom element = createElement( component, child );
+        element.setAttribute( "name", name );
+        return element;
+    }
+    
+    /**
+    
+    /**
+     * Sets the SCM type of the project
+     *
+     */
+    private void setProjectScmType( Xpp3Dom content )
+    { 
+        String scmType = null;
+
+        scmType = getScmType();
+        
+        if ( scmType != null )
+        {
+            Xpp3Dom component = findComponent( content, "VcsManagerConfiguration" );
+
+            Xpp3Dom element = findElementName( component, "option" , "ACTIVE_VCS_NAME" );
+            
+            element.setAttribute( "value", scmType );
+        }
+    }
+    
+    /**
+     * used to retrieve the SCM Type
+     *
+     * @return the Scm Type string used to connect to the SCM
+     */
+    protected String getScmType()
+    {
+        String scmType = null;
+
+        if ( project.getScm() == null )
+        {
+            return null;
+        }
+        scmType = getScmType( project.getScm().getConnection() );
+
+        if ( scmType != null )
+        {
+            return scmType;
+        }
+        scmType = getScmType( project.getScm().getDeveloperConnection() );
+
+        return scmType;
+    }
+    
+    protected String getScmType( String connection )
+    {
+        String scmType = null;
+        
+        if ( connection != null )
+        {
+            if ( connection.length() > 0 )
+            {
+                int startIndex = connection.indexOf( ":" );
+               
+                int endIndex = connection.indexOf( ":", startIndex + 1);
+                
+                if ( startIndex < endIndex )
+                {
+                    scmType = connection.substring( startIndex + 1, endIndex);
+
+                    return scmType;
+                }
+            }
+        }
+        return null;
+    }
+
+    public void setProject( MavenProject project )
+    {
+        this.project = project;
+    }
