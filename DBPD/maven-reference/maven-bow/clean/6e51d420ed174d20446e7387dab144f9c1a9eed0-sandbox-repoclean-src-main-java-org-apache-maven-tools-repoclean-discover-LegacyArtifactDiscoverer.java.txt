o fixed conditions under which error emails should be sent
o fixed emailing to contain a link to the report
o reformatted using IDEA
o removed directory tracking from transactions, b/c undo order is too tricky for now
o adjusted code to maven-artifact (post maven-project creation) changes.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@164705 13f79535-47bb-0310-9956-ffa450edef68

- * 
+ *
- * 
+ *
- * 
+ *
-import org.apache.maven.artifact.construction.ArtifactConstructionSupport;
+import org.apache.maven.artifact.factory.ArtifactFactory;
-public class LegacyArtifactDiscoverer
-    extends AbstractArtifactDiscoverer
+public class LegacyArtifactDiscoverer extends AbstractArtifactDiscoverer
-    private ArtifactConstructionSupport artifactConstructionSupport = new ArtifactConstructionSupport();
+    private ArtifactFactory artifactFactory;
-                                  PathLister excludeLister, PathLister kickoutLister )
+                                   PathLister excludeLister, PathLister kickoutLister )
-                kickoutLister.addPath(path);
+                kickoutLister.addPath( path );
-                        kickoutLister.addPath(path);
+                        kickoutLister.addPath( path );
-            String validVersionParts = "([Dd][Ee][Vv][_.0-9]*)|" + "([Ss][Nn][Aa][Pp][Ss][Hh][Oo][Tt])|"
-                + "([0-9][_.0-9a-zA-Z]*)|" + "([Gg]?[_.0-9ab]*([Pp][Rr][Ee]|[Rr][Cc]|[Gg]|[Mm])[_.0-9]*)|"
-                + "([Aa][Ll][Pp][Hh][Aa][_.0-9]*)|" + "([Bb][Ee][Tt][Aa][_.0-9]*)|" + "([Rr][Cc][_.0-9]*)|"
-                + "([Tt][Ee][Ss][Tt][_.0-9]*)|" + "([Dd][Ee][Bb][Uu][Gg][_.0-9]*)|"
-                + "([Uu][Nn][Oo][Ff][Ff][Ii][Cc][Ii][Aa][Ll][_.0-9]*)|" + "([Cc][Uu][Rr][Rr][Ee][Nn][Tt])|"
-                + "([Ll][Aa][Tt][Ee][Ss][Tt])|" + "([Ff][Cc][Ss])|" + "([Rr][Ee][Ll][Ee][Aa][Ss][Ee][_.0-9]*)|"
-                + "([Nn][Ii][Gg][Hh][Tt][Ll][Yy])";
+            String validVersionParts = "([Dd][Ee][Vv][_.0-9]*)|" + "([Ss][Nn][Aa][Pp][Ss][Hh][Oo][Tt])|" +
+                "([0-9][_.0-9a-zA-Z]*)|" + "([Gg]?[_.0-9ab]*([Pp][Rr][Ee]|[Rr][Cc]|[Gg]|[Mm])[_.0-9]*)|" +
+                "([Aa][Ll][Pp][Hh][Aa][_.0-9]*)|" + "([Bb][Ee][Tt][Aa][_.0-9]*)|" + "([Rr][Cc][_.0-9]*)|" +
+                "([Tt][Ee][Ss][Tt][_.0-9]*)|" + "([Dd][Ee][Bb][Uu][Gg][_.0-9]*)|" +
+                "([Uu][Nn][Oo][Ff][Ff][Ii][Cc][Ii][Aa][Ll][_.0-9]*)|" + "([Cc][Uu][Rr][Rr][Ee][Nn][Tt])|" +
+                "([Ll][Aa][Tt][Ee][Ss][Tt])|" + "([Ff][Cc][Ss])|" + "([Rr][Ee][Ll][Ee][Aa][Ss][Ee][_.0-9]*)|" +
+                "([Nn][Ii][Gg][Hh][Tt][Ll][Yy])";
-            getLogger().debug(
-                               "After parsing loop, state of buffers:\no  Version Buffer: \'" + versionBuffer
-                                   + "\'\no  Classifier Buffer: \'" + classifierBuffer
-                                   + "\'\no Number of Tokens Iterated: " + tokensIterated );
+            getLogger().debug( "After parsing loop, state of buffers:\no  Version Buffer: \'" + versionBuffer +
+                               "\'\no  Classifier Buffer: \'" + classifierBuffer +
+                               "\'\no Number of Tokens Iterated: " + tokensIterated );
-            getLogger().debug(
-                               "Before repairing bad version and/or cleaning up used tokens, avce token list is:\n"
-                                   + avceTokenList );
+            getLogger().debug( "Before repairing bad version and/or cleaning up used tokens, avce token list is:\n" +
+                               avceTokenList );
-                    getLogger().info(
-                                      "artifact-version-classifier-extension remaining tokens is: \'" + avceTokenList
-                                          + "\'" );
+                    getLogger().info( "artifact-version-classifier-extension remaining tokens is: \'" + avceTokenList +
+                                      "\'" );
-                avceTokenList = new LinkedList( avceTokenList.subList( 0, avceTokenList.size() - ( tokensIterated ) ) );
+                avceTokenList =
+                    new LinkedList( avceTokenList.subList( 0, avceTokenList.size() - ( tokensIterated ) ) );
-            getLogger().debug(
-                               "Extracted artifact information from path:\n" + "groupId: \'" + groupId + "\'\n"
-                                   + "artifactId: \'" + artifactId + "\'\n" + "type: \'" + type + "\'\n"
-                                   + "version: \'" + version + "\'\n" + "classifier: \'" + classifierBuffer.toString()
-                                   + "\'" );
+            getLogger().debug( "Extracted artifact information from path:\n" + "groupId: \'" + groupId + "\'\n" +
+                               "artifactId: \'" + artifactId + "\'\n" + "type: \'" + type + "\'\n" +
+                               "version: \'" + version + "\'\n" + "classifier: \'" + classifierBuffer.toString() +
+                               "\'" );
-                result = artifactConstructionSupport.createArtifactWithClassifier( groupId, artifactId, version,
-                                                                                   Artifact.SCOPE_RUNTIME, type,
-                                                                                   classifierBuffer.toString() );
+                result = artifactFactory.createArtifactWithClassifier( groupId, artifactId, version,
+                                                                       Artifact.SCOPE_RUNTIME, type,
+                                                                       classifierBuffer.toString() );
-                result = artifactConstructionSupport.createArtifact( groupId, artifactId, version,
-                                                                     Artifact.SCOPE_RUNTIME, type );
+                result = artifactFactory.createArtifact( groupId, artifactId, version, Artifact.SCOPE_RUNTIME, type );
-            getLogger().debug(
-                               "Resulting artifact is: " + result.getId() + " and has classifier of: "
-                                   + result.getClassifier() + "\n\n" );
+            getLogger().debug( "Resulting artifact is: " + result.getId() + " and has classifier of: " +
+                               result.getClassifier() + "\n\n" );
