o use the artifact resolution request/result method to remove another couple methods from the repository system


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@747658 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.resolver.ArtifactResolutionRequest;
-        ArtifactResolutionResult result = repositoryTools.resolveTransitively(
-                                                                                dependencies,
-                                                                                pluginArtifact,
-                                                                                pluginManagedDependencies,
-                                                                                localRepository,
-                                                                                repositories.isEmpty()
-                                                                                ? Collections.EMPTY_LIST
-                                                                                : new ArrayList( repositories ),
-                                                                                filter );
+        ArtifactResolutionRequest request = new ArtifactResolutionRequest()
+            .setArtifact( pluginArtifact )
+            .setArtifactDependencies( dependencies )
+            .setLocalRepository( localRepository )
+            .setRemoteRepostories( repositories.isEmpty() ? Collections.EMPTY_LIST : new ArrayList( repositories ) )
+            .setManagedVersionMap( pluginManagedDependencies )
+            .setFilter( filter )                
+            .setMetadataSource( repositoryTools );        
+        
+        ArtifactResolutionResult result = repositoryTools.resolve( request );
+        if ( result.hasErrorArtifactExceptions() )
+        {
+            throw result.getErrorArtifactExceptions().get( 0 );
+        }
+        
-                                                MavenRepositorySystem repositoryTools,
+                                                MavenRepositorySystem repositorySystem,
-        Artifact artifact = repositoryTools.createBuildArtifact( project.getGroupId(),
+        Artifact artifact = repositorySystem.createBuildArtifact( project.getGroupId(),
-            project.setDependencyArtifacts( repositoryTools.createArtifacts( project.getDependencies(), null, null, project ) );
+            project.setDependencyArtifacts( repositorySystem.createArtifacts( project.getDependencies(), null, null, project ) );
+        ArtifactResolutionRequest request = new ArtifactResolutionRequest()
+            .setArtifact( project.getArtifact() )
+            .setArtifactDependencies( project.getDependencyArtifacts() )
+            .setLocalRepository( context.getLocalRepository() )
+            .setRemoteRepostories( project.getRemoteArtifactRepositories() )
+            .setManagedVersionMap( project.getManagedVersionMap() )
+            .setFilter( filter )                
+            .setMetadataSource( repositorySystem );
+                 
-        try
-        {
-            ArtifactResolutionResult result = repositoryTools.resolveTransitively(
-                                                                                   project.getDependencyArtifacts(),
-                                                                                   artifact,
-                                                                                   project.getManagedVersionMap(),
-                                                                                   context.getLocalRepository(),
-                                                                                   project.getRemoteArtifactRepositories(),
-                                                                                   filter );
+        
+        ArtifactResolutionResult result = repositorySystem.resolve( request );
-            resolvedArtifacts = result.getArtifacts();
-        }
-        catch( MultipleArtifactsNotFoundException e )
+        if ( result.hasErrorArtifactExceptions() )
-            /*only do this if we are an aggregating plugin: MNG-2277
+            /*
+             
+            only do this if we are an aggregating plugin: MNG-2277
-            all we can do is warn and skip it. A better fix can be inserted into 2.1*/
-            if ( isAggregator
-                 && checkMissingArtifactsInReactor( context.getSortedProjects(),
-                                                    e.getMissingArtifacts() ) )
+            all we can do is warn and skip it. A better fix can be inserted into 2.1
+            
+            */
+            if ( isAggregator && checkMissingArtifactsInReactor( context.getSortedProjects(), result.getMissingArtifacts() ) )
-                resolvedArtifacts = new LinkedHashSet( e.getResolvedArtifacts() );
+                resolvedArtifacts = new LinkedHashSet( result.getArtifacts() );
-                throw e;
+                throw result.getErrorArtifactExceptions().get( 0 );
-
-        project.setArtifacts( resolvedArtifacts );
+        
+        project.setArtifacts( result.getArtifacts() );
-    private boolean checkMissingArtifactsInReactor( Collection projects,
-                                                    Collection missing )
+    private boolean checkMissingArtifactsInReactor( Collection projects, Collection missing )
-                                       MavenRepositorySystem repositoryTools )
+                                       MavenRepositorySystem repositorySystem )
-            repositoryTools.resolve( artifact, localRepository, remoteArtifactRepositories );
+            repositorySystem.resolve( artifact, localRepository, remoteArtifactRepositories );
