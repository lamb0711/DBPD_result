o provide the phases in the lifecycle by extracting the component descriptor
  and pull them out of the configuration.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@292380 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.configuration.PlexusConfiguration;
+import org.codehaus.plexus.component.repository.ComponentDescriptor;
-    private File mavenHome;
-
-    public File getMavenHome()
-    {
-        return mavenHome;
-    }
-
-    public void setMavenHome( File mavenHome )
-    {
-        this.mavenHome = mavenHome;
-    }
-
+    // Lifecycle information
+    // ----------------------------------------------------------------------
+
+    public List getLifecyclePhases()
+        throws MavenEmbedderException
+    {
+        List phases = new ArrayList();
+
+        ComponentDescriptor descriptor = embedder.getContainer().getComponentDescriptor( LifecycleExecutor.ROLE );
+
+        PlexusConfiguration configuration = descriptor.getConfiguration();
+
+        PlexusConfiguration[] phasesConfigurations = configuration.getChild( "phases" ).getChildren( "phase" );
+
+        try
+        {
+            for ( int i = 0; i < phasesConfigurations.length; i++ )
+            {
+                phases.add( phasesConfigurations[i].getValue() );
+            }
+        }
+        catch ( PlexusConfigurationException e )
+        {
+             throw new MavenEmbedderException( "Cannot retrieve default lifecycle phasesConfigurations.", e );
+        }
+
+        return phases;
+    }
+
+    // ----------------------------------------------------------------------
-        // TODO: create a maven.home discovery method.
-
-        if ( mavenHome == null )
-        {
-            mavenHome = new File( userHome, "m2" );
-
-            if ( !mavenHome.exists() )
-            {
-                if ( !mavenHome.mkdirs() )
-                {
-                    throw new IllegalStateException( "A maven home directory does not exist and cannot be created." );
-                }
-            }
-
-            System.setProperty( "maven.home", mavenHome.getAbsolutePath() );
-        }
-
