o Cleaned up code

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@930689 13f79535-47bb-0310-9956-ffa450edef68

+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
-import org.apache.maven.model.io.ModelParseException;
-import org.apache.maven.model.io.xpp3.MavenXpp3Reader;
+import org.apache.maven.model.io.ModelReader;
+import org.apache.maven.model.locator.ModelLocator;
-import org.codehaus.plexus.util.IOUtil;
-import org.codehaus.plexus.util.ReaderFactory;
-import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
+import org.codehaus.plexus.component.annotations.Requirement;
-@Component(role = ModelProcessor.class)
+@Component( role = ModelProcessor.class )
+
+    @Requirement
+    private ModelLocator locator;
+
+    @Requirement
+    private ModelReader reader;
+
-        return new File( projectDirectory, "pom.xml" );
+        return locator.locatePom( projectDirectory );
-        if ( input == null )
-        {
-            throw new IllegalArgumentException( "input file missing" );
-        }
-
-        Model model = read( ReaderFactory.newXmlReader( input ), options );
-
-        model.setPomFile( input );
-
-        return model;
+        return reader.read( input, options );
-        if ( input == null )
-        {
-            throw new IllegalArgumentException( "input reader missing" );
-        }
-
-        try
-        {
-            MavenXpp3Reader r = new MavenXpp3Reader();
-            return r.read( input, isStrict( options ) );
-        }
-        catch ( XmlPullParserException e )
-        {
-            throw new ModelParseException( e.getMessage(), e.getLineNumber(), e.getColumnNumber(), e );
-        }
-        finally
-        {
-            IOUtil.close( input );
-        }
+        return reader.read( input, options );
-        if ( input == null )
-        {
-            throw new IllegalArgumentException( "input stream missing" );
-        }
-
-        try
-        {
-            MavenXpp3Reader r = new MavenXpp3Reader();
-            return r.read( input, isStrict( options ) );
-        }
-        catch ( XmlPullParserException e )
-        {
-            throw new ModelParseException( e.getMessage(), e.getLineNumber(), e.getColumnNumber(), e );
-        }
-        finally
-        {
-            IOUtil.close( input );
-        }
+        return reader.read( input, options );
-    private boolean isStrict( Map<String, ?> options )
-    {
-        Object value = ( options != null ) ? options.get( IS_STRICT ) : null;
-        return value == null || Boolean.parseBoolean( value.toString() );
-    }
