Simplify ProjectBuildingException constructors and store the original File/URI instead of a String

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@587596 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.InvalidRepositoryException;
-import org.apache.maven.artifact.resolver.ArtifactNotFoundException;
-import org.apache.maven.artifact.resolver.ArtifactResolutionException;
-import org.apache.maven.artifact.versioning.InvalidVersionSpecificationException;
-import org.apache.maven.profiles.activation.ProfileActivationException;
-import org.apache.maven.project.artifact.InvalidDependencyVersionException;
-import org.apache.maven.project.interpolation.ModelInterpolationException;
-import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
-
-import java.io.IOException;
+import java.io.File;
+import java.net.URI;
-    private String pomLocation;
+    private URI pomUri;
-    public ProjectBuildingException( String projectId,
-                                     String message )
+    public ProjectBuildingException( String projectId, String message )
-        super( message );
-        this.projectId = projectId;
+        this( message, projectId, (File) null );
-    protected ProjectBuildingException( String projectId,
-                                        String message,
-                                        String pomLocation )
+    /**
+     * @deprecated use {@link #ProjectBuildingException(String, String, File)}
+     * @param projectId
+     * @param message
+     * @param pomLocation absolute path of the pom file
+     */
+    protected ProjectBuildingException( String projectId, String message, String pomLocation )
-        super( message );
-        this.projectId = projectId;
-        this.pomLocation = pomLocation;
+        this( projectId, message, pomLocation, null );
-    public ProjectBuildingException( String projectId,
-                                     String message,
-                                     String pomLocation,
-                                     ProfileActivationException cause )
+    /**
+     * @deprecated use {@link #ProjectBuildingException(String, String, File, Throwable)}
+     * @param projectId
+     * @param message
+     * @param pomLocation absolute path of the pom file
+     * @param cause
+     */
+    public ProjectBuildingException( String projectId, String message, String pomLocation, Throwable cause )
+    {
+        this( projectId, message, new File( pomLocation ), null );
+    }
+
+    /**
+     * 
+     * @param projectId
+     * @param message
+     * @param pomFile pom file location
+     */
+    public ProjectBuildingException( String projectId, String message, File pomFile )
+    {
+        this( projectId, message, pomFile, null );
+    }
+
+    /**
+     * 
+     * @param projectId
+     * @param message
+     * @param cause
+     */
+    public ProjectBuildingException( String projectId, String message, Throwable cause )
+    {
+        this( projectId, message, (URI) null, cause );
+    }
+
+    /**
+     * @param projectId
+     * @param message
+     * @param pomFile pom file location
+     * @param cause
+     */
+    public ProjectBuildingException( String projectId, String message, File pomFile, Throwable cause )
+    {
+        this( projectId, message, pomFile.toURI(), cause );
+    }
+
+    /**
+     * Equivalent to new ProjectBuildingException(projectId, message, pomUri, null)
+     * @see #ProjectBuildingException(String, String, URI, Throwable)
+     */
+    public ProjectBuildingException( String projectId, String message, URI pomUri )
+    {
+        this( projectId, message, pomUri, null );
+    }
+
+    /**
+     * @param projectId
+     * @param message
+     * @param pomUri location of the pom
+     * @param cause
+     */
+    public ProjectBuildingException( String projectId, String message, URI pomUri, Throwable cause )
-        this.pomLocation = pomLocation;
+        this.pomUri = pomUri;
-    public ProjectBuildingException( String projectId,
-                                     String message,
-                                     String pomLocation,
-                                     IOException cause )
+    public URI getPomUri()
-        super( message, cause );
-        this.projectId = projectId;
-        this.pomLocation = pomLocation;
+        return pomUri;
-    public ProjectBuildingException( String projectId,
-                                     String message,
-                                     String pomLocation,
-                                     XmlPullParserException cause )
-    {
-        super( message, cause );
-        this.projectId = projectId;
-        this.pomLocation = pomLocation;
-    }
-
-    protected ProjectBuildingException( String projectId,
-                                     String message,
-                                     XmlPullParserException cause )
-    {
-        super( message, cause );
-        this.projectId = projectId;
-    }
-
-    public ProjectBuildingException( String projectId,
-                                     String message,
-                                     String pomLocation,
-                                     InvalidRepositoryException cause )
-    {
-        super( message, cause );
-        this.projectId = projectId;
-        this.pomLocation = pomLocation;
-    }
-
-    public ProjectBuildingException( String projectId,
-                                     String message,
-                                     InvalidRepositoryException cause )
-    {
-        super( message, cause );
-        this.projectId = projectId;
-    }
-
-    public ProjectBuildingException( String projectId,
-                                     String message,
-                                     ArtifactResolutionException cause )
-    {
-        super( message, cause );
-        this.projectId = projectId;
-    }
-
-    public ProjectBuildingException( String projectId,
-                                     String message,
-                                     ArtifactNotFoundException cause )
-    {
-        super( message, cause );
-        this.projectId = projectId;
-    }
-
-    public ProjectBuildingException( String projectId,
-                                     String message,
-                                     String pomLocation,
-                                     ArtifactResolutionException cause )
-    {
-        super( message, cause );
-        this.projectId = projectId;
-        this.pomLocation = pomLocation;
-    }
-
-    public ProjectBuildingException( String projectId,
-                                     String message,
-                                     String pomLocation,
-                                     ArtifactNotFoundException cause )
-    {
-        super( message, cause );
-        this.projectId = projectId;
-        this.pomLocation = pomLocation;
-    }
-
-    public ProjectBuildingException( String projectId,
-                                     String message,
-                                     String pomLocation,
-                                     InvalidVersionSpecificationException cause )
-    {
-        super( message, cause );
-        this.projectId = projectId;
-        this.pomLocation = pomLocation;
-    }
-
-    public ProjectBuildingException( String projectId,
-                                     String message,
-                                     String pomLocation,
-                                     InvalidDependencyVersionException cause )
-    {
-        super( message, cause );
-        this.projectId = projectId;
-        this.pomLocation = pomLocation;
-    }
-
-    protected ProjectBuildingException( String projectId,
-                                        String message,
-                                        String pomLocation,
-                                        ModelInterpolationException cause )
-    {
-        super( message, cause );
-        this.projectId = projectId;
-        this.pomLocation = pomLocation;
-    }
-
+    /**
+     * @deprecated use {@link #getPomUri()}
+     */
-        return pomLocation;
+        if ( "file".equals( getPomUri().getScheme() ) )
+        {
+            return new File( getPomUri() ).getAbsolutePath();
+        }
+        return getPomUri().toString();
-               + ( ( pomLocation == null ? "" : " at " + pomLocation ) );
+            + ( ( getPomUri() == null ? "" : " at " + getPomLocation() ) );
-
