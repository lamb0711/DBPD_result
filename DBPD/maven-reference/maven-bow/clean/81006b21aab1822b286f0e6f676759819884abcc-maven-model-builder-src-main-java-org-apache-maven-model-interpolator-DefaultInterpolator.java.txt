o Migrated from StAX to XPP to have us focus on a single XML parser for now

git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@772013 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.Reader;
-import javax.xml.stream.XMLInputFactory;
-import javax.xml.stream.XMLStreamConstants;
-import javax.xml.stream.XMLStreamException;
-import javax.xml.stream.XMLStreamReader;
-
+import org.codehaus.plexus.util.IOUtil;
+import org.codehaus.plexus.util.ReaderFactory;
+import org.codehaus.plexus.util.xml.pull.MXParser;
+import org.codehaus.plexus.util.xml.pull.XmlPullParser;
+import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
-        XMLInputFactory xmlInputFactory = new com.ctc.wstx.stax.WstxInputFactory();
-        xmlInputFactory.setProperty( XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, Boolean.FALSE );
-        xmlInputFactory.setProperty( XMLInputFactory.IS_NAMESPACE_AWARE, Boolean.FALSE );
-        XMLStreamReader xmlStreamReader = null;
+        Reader reader = null;
-            xmlStreamReader = xmlInputFactory.createXMLStreamReader( inputStream );
+            reader = ReaderFactory.newXmlReader( inputStream );
+
+            XmlPullParser parser = new MXParser();
+            parser.setInput( reader );
-            for ( ;; xmlStreamReader.next() )
+            for ( int type = parser.getEventType();; type = parser.next() )
-                int type = xmlStreamReader.getEventType();
-
-                    case XMLStreamConstants.CDATA:
-                    case XMLStreamConstants.CHARACTERS:
+                    case XmlPullParser.TEXT:
-                            tagValue.append( xmlStreamReader.getTextCharacters(), xmlStreamReader.getTextStart(), xmlStreamReader.getTextLength() );
+                            tagValue.append( parser.getText() );
-
-                    case XMLStreamConstants.START_ELEMENT:
+                    case XmlPullParser.START_TAG:
-                        tagName = uri.getUriFor( xmlStreamReader.getName().getLocalPart(), depth );
+                        tagName = uri.getUriFor( parser.getName(), depth );
-                            uri.addTag( xmlStreamReader.getName().getLocalPart() + "#collection" );
+                            uri.addTag( parser.getName() + "#collection" );
-                            uri.addTag( xmlStreamReader.getName().getLocalPart() + "#set" );
+                            uri.addTag( parser.getName() + "#set" );
-                            uri.addTag( xmlStreamReader.getName().getLocalPart() );
+                            uri.addTag( parser.getName() );
-                    }
-                    case XMLStreamConstants.ATTRIBUTE:
-                    {
-                        for ( int i = 0; i < xmlStreamReader.getAttributeCount(); i++ )
+
+                        for ( int i = 0; i < parser.getAttributeCount(); i++ )
-                            attributes.put( tagName + "#property/" + xmlStreamReader.getAttributeName( i ).getLocalPart(), xmlStreamReader.getAttributeValue( i ) );
+                            attributes.put( tagName + "#property/" + parser.getAttributeName( i ),
+                                            parser.getAttributeValue( i ) );
-                    case XMLStreamConstants.END_ELEMENT:
+                    case XmlPullParser.END_TAG:
-                    case XMLStreamConstants.END_DOCUMENT:
+                    case XmlPullParser.END_DOCUMENT:
-                            attributes.clear();
+
-        catch ( XMLStreamException e )
+        catch ( XmlPullParserException e )
-            throw new IOException( ":" + e.toString() );
+            throw (IOException) new IOException( "Failed to parser POM:" + e.toString() ).initCause( e );
-            if ( xmlStreamReader != null )
-            {
-                try
-                {
-                    xmlStreamReader.close();
-                }
-                catch ( XMLStreamException e )
-                {
-                    e.printStackTrace();
-                }
-            }
-            try
-            {
-                inputStream.close();
-            }
-            catch ( IOException e )
-            {
-
-            }
+            IOUtil.close( reader );
