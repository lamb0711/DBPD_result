use surefire pom for surefire dependencies


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163749 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.BufferedReader;
-import java.io.FileReader;
-import java.util.StringTokenizer;
-public class
-    SurefireBooter
+public class SurefireBooter
-    
+
-    
+
-        batteries.add( new Object[]{ battery, params } );
+        batteries.add( new Object[]{battery, params} );
-        batteries.add( new Object[]{ battery, null } );
+        batteries.add( new Object[]{battery, null} );
-        Method run = batteryExecutorClass.getMethod( "run", new Class[] { List.class, List.class, ClassLoader.class, String.class } );
+        Method run = batteryExecutorClass.getMethod( "run",
+                                                     new Class[]{List.class, List.class, ClassLoader.class,
+                                                                 String.class} );
-        Boolean result = (Boolean) run.invoke( batteryExecutor, new Object[]{ reports, batteries, surefireClassLoader, reportsDir } );
+        Boolean result = (Boolean) run.invoke( batteryExecutor,
+                                               new Object[]{reports, batteries, surefireClassLoader, reportsDir} );
-    public void reset()
-    {
-        batteries.clear();
-
-        reports.clear();
-
-        classpathUrls.clear();
-    }
-
-    // ----------------------------------------------------------------------
-    // Main
-    // ----------------------------------------------------------------------
-
-    public static void main( String[] args )
-        throws Exception
-    {
-        String basedir = args[0];
-
-        System.setProperty( "basedir", basedir );
-
-        String mavenRepoLocal = args[1];
-
-        File dependenciesFile = new File( args[2] );
-
-        List dependencies = new ArrayList();
-
-        BufferedReader buf = new BufferedReader( new FileReader( dependenciesFile ) );
-
-        String line;
-
-        while ( ( line = buf.readLine() ) != null )
-        {
-            dependencies.add( line );
-        }
-
-        buf.close();
-
-        File includesFile = new File( args[3] );
-
-        List includes = new ArrayList();
-
-        buf = new BufferedReader( new FileReader( includesFile ) );
-
-        line = buf.readLine();
-
-        String includesStr = line.substring( line.indexOf( "@" ) + 1 );
-
-        StringTokenizer st = new StringTokenizer( includesStr, "," );
-
-        while ( st.hasMoreTokens() )
-        {
-            String inc = st.nextToken().trim();
-
-            includes.add( inc );
-        }
-
-        buf.close();
-
-        File excludesFile = new File( args[4] );
-
-        List excludes = new ArrayList();
-
-        buf = new BufferedReader( new FileReader( excludesFile ) );
-
-        line = buf.readLine();
-
-        String excludesStr = line.substring( line.indexOf( "@" ) + 1 );
-
-        st = new StringTokenizer( excludesStr, "," );
-
-        while ( st.hasMoreTokens() )
-        {
-            excludes.add( st.nextToken().trim() );
-        }
-
-        buf.close();
-
-        SurefireBooter surefireBooter = new SurefireBooter();
-
-        surefireBooter.addBattery( "org.codehaus.surefire.battery.DirectoryBattery", new Object[]{ basedir, includes, excludes } );
-
-        surefireBooter.addClassPathUrl( new File( mavenRepoLocal, "junit/jars/junit-3.8.1.jar" ).getPath() );
-
-        surefireBooter.addClassPathUrl( new File( mavenRepoLocal, "surefire/jars/surefire-1.2-SNAPSHOT.jar" ).getPath() );
-
-        surefireBooter.addClassPathUrl( new File( basedir, "target/classes/" ).getPath() );
-
-        surefireBooter.addClassPathUrl( new File( basedir, "target/test-classes/" ).getPath() );
-
-        processDependencies( dependencies, surefireBooter );
-
-        surefireBooter.addReport( "org.codehaus.surefire.report.ConsoleReport" );
-
-        surefireBooter.run();
-    }
-
-    private static void processDependencies( List dependencies, SurefireBooter sureFire )
-        throws Exception
-    {
-        for ( Iterator i = dependencies.iterator(); i.hasNext(); )
-        {
-            String dep = (String) i.next();
-
-            sureFire.addClassPathUrl( new File( dep ).getPath() );
-        }
-    }
