PR: MNG-613
changes versioning to use repository metadata

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@278881 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.metadata.AbstractVersionArtifactMetadata;
+import org.apache.maven.artifact.metadata.ArtifactMetadata;
+import org.apache.maven.artifact.metadata.LegacyArtifactMetadata;
-import org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;
-import org.apache.maven.wagon.ResourceDoesNotExistException;
+import org.apache.maven.artifact.repository.metadata.ArtifactRepositoryMetadata;
+import org.apache.maven.artifact.repository.metadata.Snapshot;
+import org.apache.maven.artifact.repository.metadata.Versioning;
+import org.codehaus.plexus.util.StringUtils;
-            SnapshotArtifactMetadata metadata = new SnapshotArtifactMetadata( artifact );
+            // TODO: Better way to create this - should have to construct Versioning
+            Versioning versioning = new Versioning();
+            Snapshot snapshot = new Snapshot();
+            versioning.setSnapshot( snapshot );
+            ArtifactMetadata metadata = new ArtifactRepositoryMetadata( artifact, versioning );
+
+            // TODO: should merge with other repository metadata sitting on the same level?
-    public void transformForDeployment( Artifact artifact, ArtifactRepository remoteRepository )
+    public void transformForDeployment( Artifact artifact, ArtifactRepository remoteRepository,
+                                        ArtifactRepository localRepository )
-            SnapshotArtifactMetadata metadata;
+            Snapshot snapshot = resolveLatestSnapshotVersion( artifact, localRepository, remoteRepository );
+            snapshot.setTimestamp( getDeploymentTimestamp() );
+            snapshot.setBuildNumber( snapshot.getBuildNumber() + 1 );
-            try
-            {
-                metadata = (SnapshotArtifactMetadata) retrieveFromRemoteRepository( artifact, remoteRepository, null,
-                                                                                    ArtifactRepositoryPolicy.CHECKSUM_POLICY_IGNORE );
-            }
-            catch ( ResourceDoesNotExistException e )
-            {
-                getLogger().debug( "Snapshot version metadata for: " + artifact.getId() +
-                    " not found. Creating a new metadata instance.", e );
+            // TODO: Better way to create this - should have to construct Versioning
+            Versioning versioning = new Versioning();
+            versioning.setSnapshot( snapshot );
-                // ignore. We'll be creating this metadata if it doesn't exist...
-                metadata = (SnapshotArtifactMetadata) createMetadata( artifact );
-            }
+            ArtifactRepositoryMetadata metadata = new ArtifactRepositoryMetadata( artifact, versioning );
-            metadata.setVersion( getDeploymentTimestamp(), metadata.getBuildNumber() + 1 );
-
-            artifact.setResolvedVersion( metadata.constructVersion() );
+            artifact.setResolvedVersion( constructVersion( metadata ) );
-    protected AbstractVersionArtifactMetadata createMetadata( Artifact artifact )
+    protected LegacyArtifactMetadata createLegacyMetadata( Artifact artifact )
-}
+    protected String constructVersion( ArtifactRepositoryMetadata metadata )
+    {
+        String version = metadata.getBaseVersion();
+        Snapshot snapshot = metadata.getSnapshot();
+        if ( snapshot != null )
+        {
+            if ( snapshot.getTimestamp() != null && snapshot.getBuildNumber() > 0 )
+            {
+                String newVersion = snapshot.getTimestamp() + "-" + snapshot.getBuildNumber();
+                if ( version != null )
+                {
+                    version = StringUtils.replace( version, "SNAPSHOT", newVersion );
+                }
+                else
+                {
+                    version = newVersion;
+                }
+            }
+        }
+        return version;
+    }
+}
