Working on: MNG-662

o Moved release.properties management to a helper class
o Created a helper class for caching/prompting for project-versions
o Created a helper class for managing SCM info updates during the release:prepare process
o Moved as many of the shared fields out of AbstractReleaseMojo as possible, given the refactor to reactorized processing
o Refactored the PrepareReleaseMojo to process a list of projects, and resolve inter-dependencies during transforms, etc.
o Refactored the PerformReleaseMojo to adjust to the new helper classes.
o Removed the old transformers, since MavenProject.writeOriginalModel() can be used instead, using the modello writer
o Bumped the maven-scm versions up to 1.0-alpha-2-SNAPSHOT, and added maven-scm-manager-plexus.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@227148 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.maven.plugin.release;
+package org.apache.maven.plugins.release;
+import org.apache.maven.plugins.release.helpers.ReleaseProgressTracker;
+import org.apache.maven.plugins.release.helpers.ScmHelper;
+import java.io.IOException;
+
+ * @aggregator
+     * @parameter expression="${basedir}"
+     * @required
+     * @readonly
+     */
+    private String basedir;
+
+    /**
+    /**
+     * @parameter expression="${project.build.directory}/checkout"
+     * @required
+     */
+    protected String workingDirectory;
+
+    private ReleaseProgressTracker releaseProgress;
+
-        System.out.println( "Checking out the project to perform the release ..." );
+        getLog().info( "Checking out the project to perform the release ..." );
-            getScm().checkout();
+            ScmHelper scm = getScm();
+
+            scm.setWorkingDirectory( workingDirectory );
+
+            scm.checkout();
-        
+
+
+    protected ReleaseProgressTracker getReleaseProgress()
+        throws MojoExecutionException
+    {
+        if ( releaseProgress == null )
+        {
+            try
+            {
+                releaseProgress = ReleaseProgressTracker.load( basedir );
+            }
+            catch ( IOException e )
+            {
+                throw new MojoExecutionException( "Failed to load release information from file: "
+                    + ReleaseProgressTracker.getReleaseProgressFilename(), e );
+            }
+        }
+
+        return releaseProgress;
+    }
