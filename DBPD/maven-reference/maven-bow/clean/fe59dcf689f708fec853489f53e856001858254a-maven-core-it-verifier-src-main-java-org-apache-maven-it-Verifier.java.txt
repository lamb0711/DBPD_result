Using Trygve's cli stuff to execute m2 and capture the output so that it can be logged for subsequent perusal.
{issue: MNG-81}


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163236 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.BufferedReader;
-import java.io.ByteArrayOutputStream;
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileReader;
-import java.io.InputStream;
-import java.io.IOException;
-import java.io.PrintStream;
-import java.lang.reflect.Method;
-import java.net.URL;
-import java.net.URLClassLoader;
-import java.util.ArrayList;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Properties;
+import org.apache.xpath.XPathAPI;
+import org.apache.maven.it.cli.Commandline;
+import org.apache.maven.it.cli.CommandLineUtils;
+import org.apache.maven.it.cli.StreamConsumer;
+import org.w3c.dom.Document;
-import javax.xml.parsers.ParserConfigurationException;
-
-import org.apache.xml.utils.DOMBuilder;
-import org.apache.xpath.XPathAPI;
-import org.w3c.dom.Document;
+import java.io.BufferedReader;
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.FileReader;
+import java.io.InputStream;
+import java.io.PrintStream;
+import java.io.Writer;
+import java.io.FileWriter;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
-        try 
+
+        try
-            String prevUserDir = System.getProperty( "user.dir" );
-            System.setProperty( "user.dir", basedir );
-            System.setProperty( "classworlds.conf", mavenHome + "/bin/classworlds.conf" );
-            URL classWorldsUrl = new URL( "file:" + mavenHome + "/core/boot/classworlds-1.1-SNAPSHOT.jar" );
-            ClassLoader cl = URLClassLoader.newInstance( new URL[] { classWorldsUrl } );
-            Class c = Class.forName( "org.codehaus.classworlds.Launcher", true, cl );
-            Method m = c.getMethod( "mainWithExitCode", new Class[] { String[].class } );
-            Object o = m.invoke( null, new Object[] { allGoals.toArray( new String[0] ) } );
-            System.setProperty( "user.dir", prevUserDir );
-            ret = ( ( Integer ) o ).intValue();
+            Commandline cli = new Commandline();
+
+            cli.setWorkingDirectory( basedir );
+
+            cli.setExecutable( "m2" );
+
+            for ( Iterator i = allGoals.iterator(); i.hasNext(); )
+            {
+                cli.createArgument().setValue( (String) i.next() );
+            }
+
+            Writer logWriter = new FileWriter( new File( basedir, "log.txt" ) );
+
+            StreamConsumer out = new WriterStreamConsumer( logWriter );
+
+            StreamConsumer err = new WriterStreamConsumer( logWriter );
+
+            ret = CommandLineUtils.executeCommandLine( cli, out, err );
+
+            logWriter.close();
+
+
-        try 
+
+        try
+
+
-            String test = ( String ) i.next(); 
+            String test = ( String ) i.next();
+
+
-    
+
+
+
