o Changed Set to List for remote repo handling so that we can maintain declarative ordering in remote repos we use.
o Added UserModel support, integrated with maven-artifact and wagon via AuthenticationInfoProvider implementation.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163501 13f79535-47bb-0310-9956-ffa450edef68

- * This class is an abstraction of the location from/to resources
- * can be transfered.
- *
- * @author <a href="michal.maczka@dimatics.com">Michal Maczka</a>
+ * This class is an abstraction of the location from/to resources can be
+ * transfered.
+ * 
+ * @author <a href="michal.maczka@dimatics.com">Michal Maczka </a>
-    public ArtifactRepository()
-    {
-    }
+    //    public ArtifactRepository()
+    //    {
+    //    }
-    public ArtifactRepository( String id, String url)
+    public ArtifactRepository( String id, String url )
-    private String layout;
-
-    public String getLayout()
-    {
-        if ( layout == null )
-        {
-            return "${groupId}/${type}s/${artifactId}-${version}.${extension}";
-        }
-
-        return layout;
-    }
-
-    public String artifactPath( Artifact artifact )
-    {
-        return interpolateLayout( artifact.getGroupId(),
-                                  artifact.getArtifactId(),
-                                  artifact.getVersion(),
-                                  artifact.getType(),
-                                  artifact.getExtension() );
-    }
-
-    public String fullArtifactPath( Artifact artifact )
-    {
-        return getBasedir() + "/" + artifactPath( artifact );
-    }
-
-    public String artifactUrl( Artifact artifact )
-    {
-        return getUrl() + "/" + artifactPath( artifact );
-    }
-
-    private String interpolateLayout( String groupId, String artifactId, String version, String type, String extension )
-    {
-        String layout = getLayout();
-
-        layout = StringUtils.replace( layout, "${groupId}", groupId );
-
-        layout = StringUtils.replace( layout, "${artifactId}", artifactId );
-
-        layout = StringUtils.replace( layout, "${type}", type );
-
-        layout = StringUtils.replace( layout, "${version}", version );
-
-        layout = StringUtils.replace( layout, "${extension}", extension );
-
-        return layout;
-    }
-    */
-}
+     * private String layout; public String getLayout() { if ( layout == null ) {
+     * return "${groupId}/${type}s/${artifactId}-${version}.${extension}"; }
+     * return layout; } public String artifactPath( Artifact artifact ) { return
+     * interpolateLayout( artifact.getGroupId(), artifact.getArtifactId(),
+     * artifact.getVersion(), artifact.getType(), artifact.getExtension() ); }
+     * public String fullArtifactPath( Artifact artifact ) { return getBasedir() +
+     * "/" + artifactPath( artifact ); } public String artifactUrl( Artifact
+     * artifact ) { return getUrl() + "/" + artifactPath( artifact ); } private
+     * String interpolateLayout( String groupId, String artifactId, String
+     * version, String type, String extension ) { String layout = getLayout();
+     * layout = StringUtils.replace( layout, "${groupId}", groupId ); layout =
+     * StringUtils.replace( layout, "${artifactId}", artifactId ); layout =
+     * StringUtils.replace( layout, "${type}", type ); layout =
+     * StringUtils.replace( layout, "${version}", version ); layout =
+     * StringUtils.replace( layout, "${extension}", extension ); return layout; }
+     */
+}
