MNG-5767 .mvn/ for project specific jvm options and maven parameters

Signed-off-by: Igor Fedorenko <ifedorenko@apache.org>

+import java.io.IOException;
+import java.util.Arrays;
+import com.google.common.base.Charsets;
+import com.google.common.io.Files;
+    public static final String PROJECT_BASEDIR = "maven.projectBasedir";
+
-    private void initialize( CliRequest cliRequest )
+    void initialize( CliRequest cliRequest )
+        if ( cliRequest.projectBaseDirectory == null )
+        {
+            String basedirProperty = System.getProperty( PROJECT_BASEDIR );
+            File basedir = basedirProperty != null ? new File( basedirProperty ) : new File( "" );
+            try
+            {
+                cliRequest.projectBaseDirectory = basedir.getCanonicalFile();
+            }
+            catch ( IOException e )
+            {
+                cliRequest.projectBaseDirectory = basedir.getAbsoluteFile();
+            }
+        }
+
-    private void cli( CliRequest cliRequest )
+    void cli( CliRequest cliRequest )
+        List<String> args = new ArrayList<String>();
+
-            cliRequest.commandLine = cliManager.parse( cliRequest.args );
+            File configFile = new File( cliRequest.projectBaseDirectory, ".mvn/maven.config" );
+
+            if ( configFile.isFile() )
+            {
+                for ( String arg : Files.toString( configFile, Charsets.UTF_8 ).split( "\\s+" ) )
+                {
+                    args.add( arg );
+                }
+
+                CommandLine config = cliManager.parse( args.toArray( new String[args.size()] ) );
+                List<?> unrecongized = config.getArgList();
+                if ( !unrecongized.isEmpty() )
+                {
+                    throw new ParseException( "Unrecognized maven.config entries: " + unrecongized );
+                }
+            }
+        }
+        catch ( ParseException e )
+        {
+            System.err.println( "Unable to parse maven.config: " + e.getMessage() );
+            cliManager.displayHelp( System.out );
+            throw e;
+        }
+
+        try
+        {
+            args.addAll( 0, Arrays.asList( cliRequest.args ) );
+            cliRequest.commandLine = cliManager.parse( args.toArray( new String[args.size()] ) );
+            .setProjectBaseDirectory( cliRequest.projectBaseDirectory )
+        File projectBaseDirectory;
