o Refactored the MavenSettings code into the settings.mdo/Settings class.

o Added code to cache the active proxy and profile inside the Settings instance for quicker lookup.

o Added a method to initialize a new active profile for a Settings instance in the event one didn't exist.

o Started adding offline mode. So far, I've implemented:

  - Warning when a mojo declares a requirement for connectivity, but we're offline.

  - INFO message stating when maven is running in offline mode.

  - Addition to the Profile class in o.a.m.settings package to allow specification of offline mode by declaring: <offline>true</offline>


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163969 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.MavenConstants;
-import org.apache.maven.settings.MavenSettings;
+import org.apache.maven.settings.Settings;
-    public static final String userHome = System.getProperty( "user.home" );
-
-        MavenSettings settings = settingsBuilder.buildSettings();
+        Settings settings = settingsBuilder.buildSettings();
+        
+        boolean snapshotPolicySet = false;
+            settings.getActiveProfile().setOffline(true);
+            
+            snapshotPolicySet = true;
-        else if ( commandLine.hasOption( CLIManager.UPDATE_SNAPSHOTS ) )
+        
+        if ( !snapshotPolicySet && commandLine.hasOption( CLIManager.UPDATE_SNAPSHOTS ) )
-    protected static File getUserConfigurationDirectory()
-    {
-        File mavenUserConfigurationDirectory = new File( userHome, MavenConstants.MAVEN_USER_CONFIGURATION_DIRECTORY );
-        if ( !mavenUserConfigurationDirectory.exists() )
-        {
-            if ( !mavenUserConfigurationDirectory.mkdirs() )
-            {
-                //throw a configuration exception
-            }
-        }
-        return mavenUserConfigurationDirectory;
-    }
-
-    protected static ArtifactRepository getLocalRepository( MavenSettings settings,
+    protected static ArtifactRepository getLocalRepository( Settings settings,
-        String localRepository = null;
-        if ( profile != null )
-        {
-            localRepository = profile.getLocalRepository();
-        }
-
-        if ( localRepository == null )
-        {
-            File userConfigurationDirectory = getUserConfigurationDirectory();
-            localRepository =
-                new File( userConfigurationDirectory, MavenConstants.MAVEN_REPOSITORY ).getAbsolutePath();
-        }
-
-        repo.setUrl( "file://" + localRepository );
+        repo.setUrl( "file://" + profile.getLocalRepository() );
