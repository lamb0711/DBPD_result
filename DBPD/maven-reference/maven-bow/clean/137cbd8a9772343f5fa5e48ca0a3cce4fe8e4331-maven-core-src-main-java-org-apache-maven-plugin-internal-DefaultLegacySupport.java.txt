Merge branch 'trunk' into eclipse-aether

Conflicts:
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultArtifactDescriptorReader.java
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionRangeResolver.java
	maven-aether-provider/src/main/java/org/apache/maven/repository/internal/DefaultVersionResolver.java
	maven-aether-provider/src/test/java/org/apache/maven/repository/internal/AbstractRepositoryTestCase.java
	maven-aether-provider/src/test/java/org/apache/maven/repository/internal/DefaultVersionResolverTest.java
	maven-core/src/main/java/org/apache/maven/DefaultMaven.java
	maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultLegacySupport.java
	maven-core/src/main/java/org/apache/maven/plugin/prefix/PluginPrefixResult.java
	maven-embedder/src/main/java/org/apache/maven/cli/transfer/Slf4jMavenTransferListener.java
	pom.xml
	src/site/site.xml

+import java.util.concurrent.atomic.AtomicReference;
-    private static final ThreadLocal<MavenSession[]> session = new InheritableThreadLocal<MavenSession[]>();
+    private static final ThreadLocal<AtomicReference<MavenSession>> SESSION = new InheritableThreadLocal<AtomicReference<MavenSession>>();
-        if ( session == null )
+        AtomicReference<MavenSession> reference = DefaultLegacySupport.SESSION.get();
+        if ( reference != null )
-            MavenSession[] oldSession = DefaultLegacySupport.session.get();
-            if ( oldSession != null )
-            {
-                oldSession[0] = null;
-                DefaultLegacySupport.session.remove();
-            }
+            reference.set( null );
+        }
+
+        if ( session == null && reference != null )
+        {
+            DefaultLegacySupport.SESSION.remove();
-            DefaultLegacySupport.session.set( new MavenSession[] { session } );
+            DefaultLegacySupport.SESSION.set( new AtomicReference<MavenSession>( session ) );
-        MavenSession[] currentSession = DefaultLegacySupport.session.get();
-        return currentSession != null ? currentSession[0] : null;
+        AtomicReference<MavenSession> currentSession = DefaultLegacySupport.SESSION.get();
+        return currentSession != null ? currentSession.get() : null;
