[MNG-4633] Fixed weave mode bug when building m3 itself in weave mode.

Updated testcase for MEP.

Also removed all unused/unecessar code from weave mode.

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@934201 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.lifecycle.*;
+import org.apache.maven.lifecycle.LifecycleExecutionException;
+import org.apache.maven.lifecycle.MavenExecutionPlan;
+import org.apache.maven.lifecycle.Schedule;
-import java.util.*;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Properties;
-    private LifecycleDependencyResolver lifecycleDependencyResolver;
-
-    @Requirement
-                                  LifecycleDependencyResolver lifecycleDependencyResolver, ExecutionEventCatapult eventCatapult )
+                                  ExecutionEventCatapult eventCatapult )
-        this.lifecycleDependencyResolver = lifecycleDependencyResolver;
-                       MavenSession session, CompletionService<ProjectSegment> service, ReactorBuildStatus reactorBuildStatus )
+                       MavenSession session, CompletionService<ProjectSegment> service,
+                       ReactorBuildStatus reactorBuildStatus )
-                ProjectBuildList segmentChunks = projectBuilds.getByTaskSegment(  taskSegment );
+                ProjectBuildList segmentChunks = projectBuilds.getByTaskSegment( taskSegment );
-                                                                    dependencyContext, concurrentBuildLogger,
-                                                                    projectBuilds );
+                                                                    dependencyContext, concurrentBuildLogger );
-                                                                           final MavenSession rootSession,
-                                                                           final ReactorBuildStatus reactorBuildStatus,
-                                                                           final MavenExecutionPlan executionPlan,
-                                                                           final ProjectSegment projectBuild,
-                                                                           final ThreadOutputMuxer muxer,
-                                                                           final DependencyContext dependencyContext,
-                                                                           final ConcurrentBuildLogger concurrentBuildLogger,
-                                                                           final ProjectBuildList projectBuilds )
+                                                                             final MavenSession rootSession,
+                                                                             final ReactorBuildStatus reactorBuildStatus,
+                                                                             final MavenExecutionPlan executionPlan,
+                                                                             final ProjectSegment projectBuild,
+                                                                             final ThreadOutputMuxer muxer,
+                                                                             final DependencyContext dependencyContext,
+                                                                             final ConcurrentBuildLogger concurrentBuildLogger )
-                boolean packagePhaseSeen = false;
-                boolean runBAbyRun = false;
-                        final String phase = current.getMojoExecution().getMojoDescriptor().getPhase();
-                        if ( !packagePhaseSeen && phase != null && phase.equals( "package" ) )
-                        {
-                            // Re-resolve. A bit of a kludge ATM
-                            packagePhaseSeen = true;
-                            lifecycleDependencyResolver.reResolveReactorArtifacts( projectBuilds, false,
-                                                                                   projectBuild.getProject(),
-                                                                                   projectBuild.getSession(),
-                                                                                   executionPlan );
-
-                        }
-
-                        ExecutionPlanItem next = planItems.hasNext() ? planItems.next() : null;
-                        if ( next != null )
+                        ExecutionPlanItem nextPlanItem = planItems.hasNext() ? planItems.next() : null;
+                        if ( nextPlanItem != null )
-                            final Schedule scheduleOfNext = next.getSchedule();
-                            if ( !runBAbyRun && ( scheduleOfNext == null || !scheduleOfNext.isParallel() ) )
+                            final Schedule scheduleOfNext = nextPlanItem.getSchedule();
+                            if ( scheduleOfNext == null || !scheduleOfNext.isParallel() )
-                                    final ExecutionPlanItem inSchedule = upstreamPlan.findLastInPhase( next );
+                                    final String nextPhase = nextPlanItem.getLifecyclePhase();
+                                    final ExecutionPlanItem inSchedule = upstreamPlan.findLastInPhase( nextPhase );
-                        current = next;
-
-                        if ( packagePhaseSeen && !runBAbyRun )
-                        {
-                            runBAbyRun = true;
-                        }
+                        current = nextPlanItem;
