[MNG-4542] StringSearchModelInterpolator concurrency problem

Replaced WeakHashmap + synchronized with a ConcurrentHashMap. This was done after observing no change in memory profile
after running all the IT's in the maven embedder with and without this patch. Discussed change with original author
of code.

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@902473 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.building.ModelProblemCollector;
+import org.apache.maven.model.building.ModelProblemCollector;
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.LinkedList;
-import java.util.List;
-import java.util.Map;
-import java.util.WeakHashMap;
+import java.util.*;
+import java.util.concurrent.ConcurrentHashMap;
-    private static final Map<Class<?>, Field[]> fieldsByClass = new WeakHashMap<Class<?>, Field[]>();
-    private static final Map<Class<?>, Boolean> fieldIsPrimitiveByClass = new WeakHashMap<Class<?>, Boolean>();
+    private static final Map<Class<?>, Field[]> fieldsByClass =
+            new ConcurrentHashMap<Class<?>, Field[]>(80, 0.75f, 2);  // Empirical data from 3.x, actual =40
+    private static final Map<Class<?>, Boolean> fieldIsPrimitiveByClass =
+            new ConcurrentHashMap<Class<?>, Boolean>(62, 0.75f, 2); // Empirical data from 3.x, actual 31
-            Field[] fields;
-            synchronized(fieldsByClass)
+            Field[] fields = fieldsByClass.get(cls);
+            if ( fields == null )
-                fields = fieldsByClass.get( cls );
-                if ( fields == null )
-                {
-                    fields = cls.getDeclaredFields();
-                    fieldsByClass.put( cls, fields );
-                }
+                fields = cls.getDeclaredFields();
+                fieldsByClass.put( cls, fields );
-            Boolean primitive;
-            synchronized ( fieldIsPrimitiveByClass)
+            Boolean primitive = fieldIsPrimitiveByClass.get(fieldType);
+            if ( primitive == null )
-                primitive = fieldIsPrimitiveByClass.get( fieldType );
-                if ( primitive == null )
-                {
-                    primitive = fieldType.isPrimitive();
-                    fieldIsPrimitiveByClass.put( fieldType, primitive );
-                }
+                primitive = fieldType.isPrimitive();
+                fieldIsPrimitiveByClass.put( fieldType, primitive );
+
