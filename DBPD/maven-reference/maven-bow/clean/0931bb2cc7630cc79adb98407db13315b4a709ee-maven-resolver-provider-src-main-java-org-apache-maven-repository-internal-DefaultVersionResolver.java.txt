[MNG-6168] Fix unclosed streams

-import org.codehaus.plexus.util.IOUtil;
+
+import java.io.InputStream;
-
-        FileInputStream fis = null;
-
-                        fis = new FileInputStream( metadata.getFile() );
-                        org.apache.maven.artifact.repository.metadata.Metadata m =
-                            new MetadataXpp3Reader().read( fis, false );
-                        versioning = m.getVersioning();
-
-                        /*
-                         * NOTE: Users occasionally misuse the id "local" for remote repos which screws up the metadata
-                         * of the local repository. This is especially troublesome during snapshot resolution so we try
-                         * to handle that gracefully.
-                         */
-                        if ( versioning != null && repository instanceof LocalRepository )
+                        try ( final InputStream in = new FileInputStream( metadata.getFile() ) )
-                            if ( versioning.getSnapshot() != null && versioning.getSnapshot().getBuildNumber() > 0 )
-                            {
-                                Versioning repaired = new Versioning();
-                                repaired.setLastUpdated( versioning.getLastUpdated() );
-                                Snapshot snapshot = new Snapshot();
-                                snapshot.setLocalCopy( true );
-                                repaired.setSnapshot( snapshot );
-                                versioning = repaired;
+                            versioning = new MetadataXpp3Reader().read( in, false ).getVersioning();
+                            /*
+                            NOTE: Users occasionally misuse the id "local" for remote repos which screws up the metadata
+                            of the local repository. This is especially troublesome during snapshot resolution so we try
+                            to handle that gracefully.
+                             */
+                            if ( versioning != null && repository instanceof LocalRepository
+                                     && versioning.getSnapshot() != null
+                                     && versioning.getSnapshot().getBuildNumber() > 0 )
+                            {
+                                final Versioning repaired = new Versioning();
+                                repaired.setLastUpdated( versioning.getLastUpdated() );
+                                repaired.setSnapshot( new Snapshot() );
+                                repaired.getSnapshot().setLocalCopy( true );
+                                versioning = repaired;
+
-        finally
-        {
-            IOUtil.close( fis );
-        }
