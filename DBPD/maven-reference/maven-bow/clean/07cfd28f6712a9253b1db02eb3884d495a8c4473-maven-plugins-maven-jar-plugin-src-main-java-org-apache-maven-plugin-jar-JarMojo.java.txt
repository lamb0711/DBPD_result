Fix jar creation with code present in j2ee mojo.
It's a temporary change before use plexus-archiver.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@162858 13f79535-47bb-0310-9956-ffa450edef68

-import org.codehaus.plexus.util.FileUtils;
-import org.apache.maven.plugin.AbstractPlugin;
-import java.io.ByteArrayInputStream;
-import java.io.FileInputStream;
-import java.io.FileOutputStream;
-import java.io.InputStream;
-import java.io.IOException;
-import java.util.List;
-import java.util.jar.JarEntry;
-import java.util.jar.JarOutputStream;
-import java.util.jar.Manifest;
+import java.util.LinkedHashMap;
+import java.util.Map;
-    extends AbstractPlugin
+    extends AbstractJarMojo
-        List files = FileUtils.getFileNames( basedir, "**/**", "**/package.html", false );
-
-        createJar( files, jarFile, basedir );
-    }
-
-    public void createJar( List files, File jarName, File basedir )
-        throws Exception
-    {
-        JarOutputStream jar = new JarOutputStream( new FileOutputStream( jarName ), createManifest() );
-
-        try
-        {
-            for ( int i = 0; i < files.size(); i++ )
-            {
-                String file = (String) files.get( i );
-
-                writeJarEntry( jar, new File( basedir, file ), file );
-            }
-        }
-        finally
-        {
-            jar.close();
-        }
-    }
-
-    private void writeJarEntry( JarOutputStream jar, File source, String entryName )
-        throws Exception
-    {
-        byte[] buffer = new byte[1024];
-
-        int bytesRead;
-
-        try
-        {
-            FileInputStream is = new FileInputStream( source );
-
-            try
-            {
-                JarEntry entry = new JarEntry( entryName );
-
-                jar.putNextEntry( entry );
-
-                while ( ( bytesRead = is.read( buffer ) ) != -1 )
-                {
-                    jar.write( buffer, 0, bytesRead );
-                }
-            }
-            catch ( Exception ex )
-            {
-            }
-            finally
-            {
-                is.close();
-            }
-        }
-        catch ( IOException ex )
-        {
-        }
-    }
-
-    private Manifest createManifest()
-    {
-        Manifest manifest = null;
+        Map includes = new LinkedHashMap();
-        try
-        {
-            // Construct a string version of a manifest
-            StringBuffer sbuf = new StringBuffer();
-
-            sbuf.append("Manifest-Version: 1.0\n");
-
-            sbuf.append("Created-By: Apache Maven\n");
-
-            sbuf.append("Built-By: " + System.getProperty("user.name") + "\n");
-
-            // Convert the string to a input stream
-            InputStream is = new ByteArrayInputStream(sbuf.toString().getBytes("UTF-8"));
-
-            // Create the manifest
-            manifest = new Manifest(is);
-        }
-        catch ( IOException e )
-        {
-            manifest = new Manifest();
-        }
-
-        return manifest;
+        addDirectory(includes, "**/**", "**/package.html", "", basedir);
+        
+        createJar( jarFile, includes );
