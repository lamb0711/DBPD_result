[MNG-4570] [regression] User/pass from settings.xml is not used during site:deploy

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@917252 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.execution.MavenExecutionRequest;
+import org.apache.maven.execution.MavenSession;
+import org.apache.maven.plugin.LegacySupport;
+import org.apache.maven.settings.Proxy;
+import org.apache.maven.settings.Server;
+import org.apache.maven.settings.crypto.DefaultSettingsDecryptionRequest;
+import org.apache.maven.settings.crypto.SettingsDecrypter;
+import org.apache.maven.settings.crypto.SettingsDecryptionResult;
+import org.codehaus.plexus.component.annotations.Requirement;
-    // only here for backward compat project-info-reports:dependencies
+
+    @Requirement
+    private LegacySupport legacySupport;
+
+    @Requirement
+    private SettingsDecrypter settingsDecrypter;
+
-       // empty one to prevent NPE
+        MavenSession session = legacySupport.getSession();
+
+        if ( session != null && id != null )
+        {
+            MavenExecutionRequest request = session.getRequest();
+
+            if ( request != null )
+            {
+                List<Server> servers = request.getServers();
+
+                if ( servers != null )
+                {
+                    for ( Server server : servers )
+                    {
+                        if ( id.equalsIgnoreCase( server.getId() ) )
+                        {
+                            SettingsDecryptionResult result =
+                                settingsDecrypter.decrypt( new DefaultSettingsDecryptionRequest( server ) );
+                            server = result.getServer();
+
+                            AuthenticationInfo authInfo = new AuthenticationInfo();
+                            authInfo.setUserName( server.getUsername() );
+                            authInfo.setPassword( server.getPassword() );
+                            authInfo.setPrivateKey( server.getPrivateKey() );
+                            authInfo.setPassphrase( server.getPassphrase() );
+
+                            return authInfo;
+                        }
+                    }
+                }
+            }
+        }
+
+        // empty one to prevent NPE
+        MavenSession session = legacySupport.getSession();
+
+        if ( session != null && protocol != null )
+        {
+            MavenExecutionRequest request = session.getRequest();
+
+            if ( request != null )
+            {
+                List<Proxy> proxies = request.getProxies();
+
+                if ( proxies != null )
+                {
+                    for ( Proxy proxy : proxies )
+                    {
+                        if ( proxy.isActive() && protocol.equalsIgnoreCase( proxy.getProtocol() ) )
+                        {
+                            SettingsDecryptionResult result =
+                                settingsDecrypter.decrypt( new DefaultSettingsDecryptionRequest( proxy ) );
+                            proxy = result.getProxy();
+
+                            ProxyInfo proxyInfo = new ProxyInfo();
+                            proxyInfo.setHost( proxy.getHost() );
+                            proxyInfo.setType( proxy.getProtocol() );
+                            proxyInfo.setPort( proxy.getPort() );
+                            proxyInfo.setNonProxyHosts( proxy.getNonProxyHosts() );
+                            proxyInfo.setUserName( proxy.getUsername() );
+                            proxyInfo.setPassword( proxy.getPassword() );
+
+                            return proxyInfo;
+                        }
+                    }
+                }
+            }
+        }
+
