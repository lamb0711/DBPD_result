[MNG-4756] Aether integration


git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@988749 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.repository.ArtifactRepository;
-import org.apache.maven.artifact.repository.RepositoryCache;
-import org.apache.maven.artifact.repository.RepositoryRequest;
-import org.apache.maven.repository.ArtifactTransferListener;
+import org.sonatype.aether.RepositorySystemSession;
+import org.sonatype.aether.repository.RemoteRepository;
-    extends RepositoryRequest
-     * Indicates whether network access to remote repositories has been disabled.
-     * 
-     * @return {@code true} if remote access has been disabled, {@code false} otherwise.
-     */
-    boolean isOffline();
-
-    /**
-     * Enables/disables network access to remote repositories.
-     * 
-     * @param offline {@code true} to disable remote access, {@code false} to allow network access.
-     * @return This request, never {@code null}.
-     */
-    PluginVersionRequest setOffline( boolean offline );
-
-    /**
-     * Gets the local repository to use.
-     * 
-     * @return The local repository to use or {@code null} if not set.
-     */
-    ArtifactRepository getLocalRepository();
-
-    /**
-     * Sets the local repository to use.
-     * 
-     * @param localRepository The local repository to use.
-     * @return This request, never {@code null}.
-     */
-    PluginVersionRequest setLocalRepository( ArtifactRepository localRepository );
-
-    /**
-    List<ArtifactRepository> getRemoteRepositories();
+    List<RemoteRepository> getRepositories();
-     * plugin artifact repositories and not the regular artifact repositories.
+     * plugin repositories and not the regular project repositories.
-     * @param remoteRepositories The remote repositories to use.
+     * @param repositories The remote repositories to use.
-    PluginVersionRequest setRemoteRepositories( List<ArtifactRepository> remoteRepositories );
+    PluginVersionRequest setRepositories( List<RemoteRepository> repositories );
-     * Gets the repository cache to use.
+     * Gets the session to use for repository access.
-     * @return The repository cache to use or {@code null} if none.
+     * @return The repository session or {@code null} if not set.
-    RepositoryCache getCache();
+    RepositorySystemSession getRepositorySession();
-     * Sets the repository cache to use.
+     * Sets the session to use for repository access.
-     * @param cache The repository cache to use, may be {@code null}.
+     * @param repositorySession The repository session to use.
-    PluginVersionRequest setCache( RepositoryCache cache );
-
-    /**
-     * Gets the listener to notify of transfer events.
-     * 
-     * @return The transfer listener or {@code null} if none.
-     */
-    ArtifactTransferListener getTransferListener();
-
-    /**
-     * Sets the listener to notify of transfer events.
-     * 
-     * @param transferListener The transfer listener to notify, may be {@code null}.
-     * @return This request, never {@code null}.
-     */
-    PluginVersionRequest setTransferListener( ArtifactTransferListener transferListener );
+    PluginVersionRequest setRepositorySession( RepositorySystemSession repositorySession );
