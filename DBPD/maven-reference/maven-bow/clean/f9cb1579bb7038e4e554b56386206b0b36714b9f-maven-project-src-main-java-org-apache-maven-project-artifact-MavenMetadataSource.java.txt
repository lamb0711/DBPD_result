o changing the caching slightly to share with shane


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@699847 13f79535-47bb-0310-9956-ffa450edef68

-
-    public HashMap<String, MavenProject> hm = new HashMap<String, MavenProject>();
-
+    
-
-                if(hm.containsKey(pomArtifact.getId()))
+                try
-                    project = hm.get(pomArtifact.getId());
+                    project = mavenProjectBuilder.buildFromRepository( pomArtifact, remoteRepositories, localRepository );
-                else
+                catch ( InvalidProjectModelException e )
-                    try
-                    {
-                        project =
-                            mavenProjectBuilder.buildFromRepository( pomArtifact, remoteRepositories, localRepository );
-                        hm.put(pomArtifact.getId(), project);
+                    handleInvalidOrMissingMavenPOM( artifact, e );
-                    }
-                    catch ( InvalidProjectModelException e )
+                    if ( getLogger().isDebugEnabled() )
-                        handleInvalidOrMissingMavenPOM( artifact, e );
+                        getLogger().debug( "Reason: " + e.getMessage() );
-                        if ( getLogger().isDebugEnabled() )
+                        ModelValidationResult validationResult = e.getValidationResult();
+
+                        if ( validationResult != null )
-                            getLogger().debug( "Reason: " + e.getMessage() );
-
-                            ModelValidationResult validationResult = e.getValidationResult();
-
-                            if ( validationResult != null )
+                            getLogger().debug( "\nValidation Errors:" );
+                            for ( Iterator i = validationResult.getMessages().iterator(); i.hasNext(); )
-                                getLogger().debug( "\nValidation Errors:" );
-                                for ( Iterator i = validationResult.getMessages().iterator(); i.hasNext(); )
-                                {
-                                    getLogger().debug( i.next().toString() );
-                                }
-                                getLogger().debug( "\n" );
+                                getLogger().debug( i.next().toString() );
-                            else
-                            {
-                                getLogger().debug( "", e );
-                            }
+                            getLogger().debug( "\n" );
-
-                        project = null;
+                        else
+                        {
+                            getLogger().debug( "", e );
+                        }
-                    catch ( ProjectBuildingException e )
-                    {
-                        handleInvalidOrMissingMavenPOM( artifact, e );
-                        project = null;
-                    }
+                    project = null;
+                }
+                catch ( ProjectBuildingException e )
+                {
+                    handleInvalidOrMissingMavenPOM( artifact, e );
+
+                    project = null;
