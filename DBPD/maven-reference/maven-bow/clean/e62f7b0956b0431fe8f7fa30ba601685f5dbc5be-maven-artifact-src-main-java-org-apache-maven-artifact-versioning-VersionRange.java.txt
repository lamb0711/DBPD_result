always use the nearest as that is the defined strategy for now. If we change the strategy to newest, a different approach is needed than just adjusting the node range as it doesn't take into account the right children.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@280489 13f79535-47bb-0310-9956-ffa450edef68

-        ArtifactVersion version = max( recommendedVersion, restriction.getRecommendedVersion() );
-
-        if ( version != null && restrictions.size() > 0 )
+        ArtifactVersion version = null;
+        if ( restrictions.size() > 0 )
-                if ( r.containsVersion( version ) )
+                if ( recommendedVersion != null && r.containsVersion( recommendedVersion ) )
+                    // if we find the original, use that
+                    version = recommendedVersion;
+                else if ( version == null && restriction.getRecommendedVersion() != null &&
+                    r.containsVersion( restriction.getRecommendedVersion() ) )
+                {
+                    // use this if we can, but prefer the original if possible
+                    version = restriction.getRecommendedVersion();
+                }
-
-            if ( !found )
-            {
-                version = null;
-            }
+        }
+        else
+        {
+            // no range, so the recommended version is valid
+            version = recommendedVersion;
-    private boolean containsVersion( ArtifactVersion version )
+    public boolean containsVersion( ArtifactVersion version )
