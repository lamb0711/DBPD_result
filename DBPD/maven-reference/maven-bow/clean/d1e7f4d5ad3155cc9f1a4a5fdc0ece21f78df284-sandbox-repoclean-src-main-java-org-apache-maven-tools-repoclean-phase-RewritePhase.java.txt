Solving MRM-4. If the source pom doesn't exist, it'll check for the existence of the target pom before writing the skeleton.

It'll always try to verify/patch the MD5/SHA1 for the target pom.



git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@189785 13f79535-47bb-0310-9956-ffa450edef68

-        boolean pomNeedsRewriting = true;
+        boolean shouldRewritePom = true;
-                pomNeedsRewriting = false;
+                shouldRewritePom = false;
+        else if( targetPom.exists() )
+        {
+            // we have a target pom for this artifact already, and we'll only be making up a new pom.
+            // let's leave the existing one alone.
+            shouldRewritePom = false;
+        }
-        if ( pomNeedsRewriting )
+        File bridgedTargetPom = null;
+        
+        boolean wroteBridge = false;
+        
+        if ( shouldRewritePom )
-                File bridgedTargetPom = new File( targetBase, bridgingLayout.pathOfMetadata( pom ).replace( '+', '-' ) );
+                bridgedTargetPom = new File( targetBase, bridgingLayout.pathOfMetadata( pom ).replace( '+', '-' ) );
-                boolean wroteBridge = bridgePomLocations( pom, targetPom, bridgedTargetPom, artifactReporter,
+                wroteBridge = bridgePomLocations( pom, targetPom, bridgedTargetPom, artifactReporter,
-
-                digestVerifier.verifyDigest( sourcePom, targetPom, transaction, artifactReporter, reportOnly );
-
-                if ( wroteBridge )
-                {
-                    digestVerifier.verifyDigest( sourcePom, bridgedTargetPom, transaction, artifactReporter,
-                                                 reportOnly );
-                }
+        
+        digestVerifier.verifyDigest( sourcePom, targetPom, transaction, artifactReporter, reportOnly );
+
+        if ( wroteBridge )
+        {
+            digestVerifier.verifyDigest( sourcePom, bridgedTargetPom, transaction, artifactReporter,
+                                         reportOnly );
+        }
