o Improving toString for Dependency in the 4.0.0 version codeSegment in maven.mdo
o Improving error messages for ResourceDoesNotExistException in the transformations
o Adding specificity to the dependency validation stuff, to output which dependency is offending...
o Added it1013 to show off the new dependency validation stuff.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@232399 13f79535-47bb-0310-9956-ffa450edef68

-            validateStringNotEmpty( "dependencies.dependency.artifactId", result, d.getArtifactId() );
+            validateSubElementStringNotEmpty( d, "dependencies.dependency.artifactId", result, d.getArtifactId() );
-            validateStringNotEmpty( "dependencies.dependency.groupId", result, d.getGroupId() );
+            validateSubElementStringNotEmpty( d, "dependencies.dependency.groupId", result, d.getGroupId() );
-            validateStringNotEmpty( "dependencies.dependency.type", result, d.getType() );
+            validateSubElementStringNotEmpty( d, "dependencies.dependency.type", result, d.getType() );
-            validateStringNotEmpty( "dependencies.dependency.version", result, d.getVersion() );
+            validateSubElementStringNotEmpty( d, "dependencies.dependency.version", result, d.getVersion() );
-                validateStringNotEmpty( "dependencyManagement.dependencies.dependency.artifactId", result,
+                validateSubElementStringNotEmpty( d, "dependencyManagement.dependencies.dependency.artifactId", result,
-                validateStringNotEmpty( "dependencyManagement.dependencies.dependency.groupId", result,
+                validateSubElementStringNotEmpty( d, "dependencyManagement.dependencies.dependency.groupId", result,
-
-                validateStringNotEmpty( "dependencyManagement.dependencies.dependency.version", result,
-                                        d.getVersion() );
-        result.addMessage( "'" + fieldName + "' is empty." );
+        result.addMessage( "'" + fieldName + "' is missing." );
+
+        return false;
+    }
+
+    /**
+     * Asserts:
+     * <p/>
+     * <ul>
+     * <li><code>string.length != null</code>
+     * <li><code>string.length > 0</code>
+     * </ul>
+     */
+    private boolean validateSubElementStringNotEmpty( Object subElementInstance, String fieldName, ModelValidationResult result, String string )
+    {
+        if ( !validateSubElementNotNull( subElementInstance, fieldName, result, string ) )
+        {
+            return false;
+        }
+
+        if ( string.length() > 0 )
+        {
+            return true;
+        }
+
+        result.addMessage( "In " + subElementInstance + ":\n\n       -> '" + fieldName + "' is missing." );
+    
+    /**
+     * Asserts:
+     * <p/>
+     * <ul>
+     * <li><code>string != null</code>
+     * </ul>
+     */
+    private boolean validateSubElementNotNull( Object subElementInstance, String fieldName, ModelValidationResult result, Object object )
+    {
+        if ( object != null )
+        {
+            return true;
+        }
+
+        result.addMessage( "In " + subElementInstance + ":\n\n       -> '" + fieldName + "' is missing." );
+
+        return false;
+    }
