Fixing a few problems with the model-lineage builder, where it was stubbing models inappropriately and other minor logical problems.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@564761 13f79535-47bb-0310-9956-ffa450edef68

-                                           ProfileManager profileManager )
+                                           ProfileManager profileManager, boolean allowStubs )
-        while ( current != null )
+        do
-            current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache );
+            current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache, allowStubs );
+        while ( current != null );
-                                            ProfileManager profileManager )
+                                            ProfileManager profileManager, boolean allowStubs )
+        if ( lineage.size() == 0 )
+        {
+            throw new ProjectBuildingException( "unknown", "Cannot resume a ModelLineage that doesn't contain at least one Model instance." );
+        }
+
-        List currentRemoteRepositories = lineage.getDeepestArtifactRepositoryList();
+        List currentRemoteRepositories = lineage.getDeepestAncestorArtifactRepositoryList();
-        ModelAndFile current = new ModelAndFile( lineage.getDeepestModel(), lineage.getDeepestFile() );
+        ModelAndFile current = new ModelAndFile( lineage.getDeepestAncestorModel(), lineage.getDeepestAncestorFile() );
-        current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache );
+        current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache, allowStubs );
-            if ( lineage.size() == 0 )
-            {
-                lineage.setOrigin( current.model, current.file, currentRemoteRepositories );
-            }
-            else
-            {
-                lineage.addParent( current.model, current.file, currentRemoteRepositories );
-            }
+            lineage.addParent( current.model, current.file, currentRemoteRepositories );
-            current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache );
+            current = resolveParentPom( current, currentRemoteRepositories, localRepository, projectBuildCache, allowStubs );
+     * @param allowStubs
-                                   ProjectBuildCache projectBuildCache )
+                                   ProjectBuildCache projectBuildCache, boolean allowStubs )
-            validateParentDeclaration( modelParent, model );
-
-//            getLogger().debug( "Looking for cached parent POM under: " + cacheKey );
+              validateParentDeclaration( modelParent, model );
-                parentPomFile = resolveParentFromRepositories( modelParent, localRepository, remoteRepositories, modelPomFile );
+                try
+                {
+                    parentPomFile = resolveParentFromRepositories( modelParent, localRepository, remoteRepositories, modelPomFile );
+                }
+                catch( ProjectBuildingException e )
+                {
+                    if ( allowStubs )
+                    {
+                        getLogger().debug( "DISREGARDING the error encountered while resolving artifact for: " + modelParent.getId() + ", building a stub model in its place.", e );
+                        parentPomFile = null;
+                    }
+                    else
+                    {
+                        throw e;
+                    }
+                }
-            Model parent;
-                getLogger().warn( "Cannot find parent POM: " + modelParent.getId() + " for child: " + model.getId() + ". Using stub model instead." );
+                if ( allowStubs )
+                {
+                    getLogger().warn( "Cannot find parent POM: " + modelParent.getId() + " for child: " + model.getId() + ". Using stub model instead." );
-                parent = new Model();
+                    Model parent = new Model();
-                parent.setGroupId( modelParent.getGroupId() );
-                parent.setArtifactId( modelParent.getArtifactId() );
-                parent.setVersion( modelParent.getVersion() );
+                    parent.setGroupId( modelParent.getGroupId() );
+                    parent.setArtifactId( modelParent.getArtifactId() );
+                    parent.setVersion( modelParent.getVersion() );
+
+                    result = new ModelAndFile( parent, parentPomFile );
+                }
+                else
+                {
+                    getLogger().error( "Cannot find parent POM: " + modelParent.getId() );
+                }
-                parent = readModel( parentPomFile );
+                Model parent = readModel( parentPomFile );
+                result = new ModelAndFile( parent, parentPomFile );
-
-            result = new ModelAndFile( parent, parentPomFile );
