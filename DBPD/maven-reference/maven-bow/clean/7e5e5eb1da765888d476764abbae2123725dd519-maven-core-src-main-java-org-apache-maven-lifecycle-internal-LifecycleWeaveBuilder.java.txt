[MNG-4633] Weave mode operational.

Replaced approximation-based algorithm for detecting upstream-mojo dependencies with
a proper phase based solution. Revised re-resolution strategy of reactor artifacts

There are a few minor performance inefficiencies (only in weave mode), that will be
sorted for beta-2.

Improved logging, and also added initial graphviz-format log output support

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@934425 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.artifact.Artifact;
+import org.apache.maven.artifact.ArtifactUtils;
+import java.util.Set;
+    private LifecycleDependencyResolver lifecycleDependencyResolver;
+
+    @Requirement
+                                  LifecycleDependencyResolver lifecycleDependencyResolver,
-                                                                    dependencyContext, concurrentBuildLogger );
+                                                                    dependencyContext, concurrentBuildLogger,
+                                                                    projectBuilds );
-                                                                             final ConcurrentBuildLogger concurrentBuildLogger )
+                                                                             final ConcurrentBuildLogger concurrentBuildLogger,
+                                                                             final ProjectBuildList projectBuilds )
-                        BuiltLogItem builtLogItem =
+                        BuildLogItem builtLogItem =
+
+                            boolean mustReResolved = false;
+
+
+                                        if ( upstreamPhaseModifiesArtifactResolutionState( inSchedule ) )
+                                        {
+                                            String key = ArtifactUtils.key( upstreamProject.getGroupId(),
+                                                                            upstreamProject.getArtifactId(),
+                                                                            upstreamProject.getVersion() );
+                                            final Set<Artifact> deps =
+                                                projectBuild.getProject().getDependencyArtifacts();
+                                            for ( Artifact dep : deps )
+                                            {
+                                                String depKey =
+                                                    ArtifactUtils.key( dep.getGroupId(), dep.getArtifactId(),
+                                                                       dep.getVersion() );
+                                                if ( key.equals( depKey ) )
+                                                {
+                                                    dep.setResolved( false );
+                                                    mustReResolved = true;
+                                                }
+                                            }
+                                        }
+                                    else if ( !upstreamPlan.containsPhase( nextPhase ) )
+                                    {
+                                        // Still a bit of a kludge; if we cannot connect in a sensible way to
+                                        // the upstream build plan we just revert to waiting for it all to
+                                        // complete. Real problem is per-mojo phase->lifecycle mapping
+                                        builtLogItem.addDependency( upstreamProject, "No phase tracking possible " );
+                                        upstreamPlan.waitUntilAllDone();
+                                    }
+                                    else
+                                    {
+                                        builtLogItem.addDependency( upstreamProject, "No schedule" );
+                                    }
+                            if ( mustReResolved )
+                            {
+                                lifecycleDependencyResolver.resolveDependencies( false, projectBuild.getProject(),
+                                                                                 projectBuild.getSession(),
+                                                                                 executionPlan );
+                            }
+    private boolean upstreamPhaseModifiesArtifactResolutionState( ExecutionPlanItem inSchedule )
+    {
+        final String phase = inSchedule.getLifecyclePhase();
+        return "install".equals( phase ) || "compile".equals( phase ) || "test-compile".equals( phase );
+    }
+
