clarify

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@314802 13f79535-47bb-0310-9956-ffa450edef68

-        // NOTE: [jc; 11-Oct-2005] We CANNOT have this type of code in here. It will prevent plugins from building themselves,
-        // if they are part of the lifecycle mapping. For example, try the following:
-        //
-        // 1. Uncomment the remainder of the following code block and rebuild the core jar; put it in the m2 distro
-        // 2. rm -Rf <local-repo>/org/apache/maven/plugins/maven-surefire-plugin
-        // 3. go to <maven>/maven-plugins/maven-surefire-plugin, and try to build it.
-        //
-        // In the above example, the surefire plugin fails to build because the version used for testing is
-        // resolved to the version currently being built...which obviously doesn't exist yet.
-        
+        // NOTE: We CANNOT check the current project version here, so delay it until later.
+        // It will prevent plugins from building themselves, if they are part of the lifecycle mapping.
+
-            // check self
-//            if ( project.getGroupId().equals( groupId ) && project.getArtifactId().equals( artifactId ) )
-//            {
-//                version = project.getVersion();
-//            }
-//            else if ( project.getProjectReferences() != null )
-//            {
+            if ( project.getProjectReferences() != null )
+            {
-//            }
+            }
-                    updatedVersion = resolveMetaVersion( groupId, artifactId, project, localRepository,
-                                                         Artifact.LATEST_VERSION );
+                    updatedVersion =
+                        resolveMetaVersion( groupId, artifactId, project, localRepository, Artifact.LATEST_VERSION );
-        
-        // if we're still empty here, and the current project matches the plugin in question, use the current project's 
+
+        // if we're still empty here, and the current project matches the plugin in question, use the current project's
-        if ( StringUtils.isEmpty( version ) && project.getGroupId().equals( groupId ) && project.getArtifactId().equals( artifactId ) )
+        if ( StringUtils.isEmpty( version ) && project.getGroupId().equals( groupId ) &&
+            project.getArtifactId().equals( artifactId ) )
-              version = project.getVersion();
+            version = project.getVersion();
-            promptToPersist = promptToPersist && pluginUpdateOverride == null && applyToAll == null &&
-                inInteractiveMode;
+            promptToPersist =
+                promptToPersist && pluginUpdateOverride == null && applyToAll == null && inInteractiveMode;
-                SimpleDateFormat format = new SimpleDateFormat(
-                    org.apache.maven.plugin.registry.Plugin.LAST_CHECKED_DATE_FORMAT );
+                SimpleDateFormat format =
+                    new SimpleDateFormat( org.apache.maven.plugin.registry.Plugin.LAST_CHECKED_DATE_FORMAT );
-                SimpleDateFormat format = new SimpleDateFormat(
-                    org.apache.maven.plugin.registry.Plugin.LAST_CHECKED_DATE_FORMAT );
+                SimpleDateFormat format =
+                    new SimpleDateFormat( org.apache.maven.plugin.registry.Plugin.LAST_CHECKED_DATE_FORMAT );
-            ResolutionGroup resolutionGroup = artifactMetadataSource.retrieve( artifact, localRepository,
-                                                                               project.getPluginArtifactRepositories() );
+            ResolutionGroup resolutionGroup =
+                artifactMetadataSource.retrieve( artifact, localRepository, project.getPluginArtifactRepositories() );
-                if ( pluginProject.getPrerequisites() != null &&
-                    pluginProject.getPrerequisites().getMaven() != null )
+                if ( pluginProject.getPrerequisites() != null && pluginProject.getPrerequisites().getMaven() != null )
-                    DefaultArtifactVersion requiredVersion = new DefaultArtifactVersion(
-                        pluginProject.getPrerequisites().getMaven() );
+                    DefaultArtifactVersion requiredVersion =
+                        new DefaultArtifactVersion( pluginProject.getPrerequisites().getMaven() );
