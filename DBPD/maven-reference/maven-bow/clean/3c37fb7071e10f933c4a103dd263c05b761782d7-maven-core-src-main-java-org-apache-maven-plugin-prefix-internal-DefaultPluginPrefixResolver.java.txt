o Enabled request tracing for repository events to provide more context for event spies

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1074195 13f79535-47bb-0310-9956-ffa450edef68

+import org.sonatype.aether.RequestTrace;
+import org.sonatype.aether.util.DefaultRequestTrace;
+        RequestTrace trace = DefaultRequestTrace.newChild( null, request );
+
-            requests.add( new MetadataRequest( metadata, null, REPOSITORY_CONTEXT ) );
+            requests.add( new MetadataRequest( metadata, null, REPOSITORY_CONTEXT ).setTrace( trace ) );
-                requests.add( new MetadataRequest( metadata, repository, REPOSITORY_CONTEXT ) );
+                requests.add( new MetadataRequest( metadata, repository, REPOSITORY_CONTEXT ).setTrace( trace ) );
-        PluginPrefixResult result = processResults( request, results, requests );
+        PluginPrefixResult result = processResults( request, trace, results, requests );
-            return processResults( request, results, null );
+            return processResults( request, trace, results, null );
-    private PluginPrefixResult processResults( PluginPrefixRequest request, List<MetadataResult> results,
-                                               List<MetadataRequest> requests )
+    private PluginPrefixResult processResults( PluginPrefixRequest request, RequestTrace trace,
+                                               List<MetadataResult> results, List<MetadataRequest> requests )
-                    resolveFromRepository( request, metadata.getGroupId(), metadata, repository );
+                    resolveFromRepository( request, trace, metadata.getGroupId(), metadata, repository );
-    private PluginPrefixResult resolveFromRepository( PluginPrefixRequest request, String pluginGroup,
+    private PluginPrefixResult resolveFromRepository( PluginPrefixRequest request, RequestTrace trace,
+                                                      String pluginGroup,
-                invalidMetadata( request.getRepositorySession(), metadata, repository, e );
+                invalidMetadata( request.getRepositorySession(), trace, metadata, repository, e );
-    private void invalidMetadata( RepositorySystemSession session, org.sonatype.aether.metadata.Metadata metadata,
-                                  ArtifactRepository repository, Exception exception )
+    private void invalidMetadata( RepositorySystemSession session, RequestTrace trace,
+                                  org.sonatype.aether.metadata.Metadata metadata, ArtifactRepository repository,
+                                  Exception exception )
-            DefaultRepositoryEvent event = new DefaultRepositoryEvent( EventType.METADATA_INVALID, session );
+            DefaultRepositoryEvent event = new DefaultRepositoryEvent( EventType.METADATA_INVALID, session, trace );
