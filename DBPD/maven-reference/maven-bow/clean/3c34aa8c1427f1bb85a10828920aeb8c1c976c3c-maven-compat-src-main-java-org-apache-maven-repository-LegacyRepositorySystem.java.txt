[MNG-4334] maven core caches settings.xml

o First pass: auth & mirror moved out of the components into the requests

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@810296 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.repository.MirrorBuilder;
+import org.apache.maven.settings.Mirror;
+import org.apache.maven.settings.Server;
-    
-    @Requirement
-    private MirrorBuilder mirrorBuilder;
-    private Map<String, Authentication> authentications = new HashMap<String, Authentication>();
-
+    // TODO: move this out, the component needs to be stateless for safe reuse
-    
+
-    // Mirror 
-    public void addMirror( String id, String mirrorOf, String url )
-    {
-        Authentication auth = id != null ? authentications.get( id ) : null;
-        mirrorBuilder.addMirror( id, mirrorOf, url, auth );
-    }
-
-    public List<ArtifactRepository> getMirrors( List<ArtifactRepository> repositories )
-    {
-        return mirrorBuilder.getMirrors( repositories );
-    }
-
+            effectiveRepository.setAuthentication( aliasedRepo.getAuthentication() );
+
+    private Mirror getMirror( ArtifactRepository repository, List<Mirror> mirrors )
+    {
+        String repoId = repository.getId();
+
+        if ( repoId != null )
+        {
+            for ( Mirror mirror : mirrors )
+            {
+                if ( repoId.equals( mirror.getMirrorOf() ) )
+                {
+                    return mirror;
+                }
+            }
+
+            for ( Mirror mirror : mirrors )
+            {
+                if ( DefaultMirrorBuilder.matchPattern( repository, mirror.getMirrorOf() ) )
+                {
+                    return mirror;
+                }
+            }
+        }
+
+        return null;
+    }
+
+    public void injectMirror( List<ArtifactRepository> repositories, List<Mirror> mirrors )
+    {
+        if ( repositories != null && mirrors != null )
+        {
+            for ( ArtifactRepository repository : repositories )
+            {
+                Mirror mirror = getMirror( repository, mirrors );
+
+                if ( mirror != null )
+                {
+                    repository.setId( mirror.getId() );
+                    repository.setUrl( mirror.getUrl() );
+                }
+            }
+        }
+    }
+
+    public void injectAuthentication( List<ArtifactRepository> repositories, List<Server> servers )
+    {
+        if ( repositories != null )
+        {
+            Map<String, Server> serversById = new HashMap<String, Server>();
+
+            if ( servers != null )
+            {
+                for ( Server server : servers )
+                {
+                    if ( !serversById.containsKey( server.getId() ) )
+                    {
+                        serversById.put( server.getId(), server );
+                    }
+                }
+            }
+
+            for ( ArtifactRepository repository : repositories )
+            {
+                Server server = serversById.get( repository.getId() );
+
+                if ( server != null )
+                {
+                    Authentication authentication = new Authentication( server.getUsername(), server.getPassword() );
+
+                    repository.setAuthentication( authentication );
+                }
+                else
+                {
+                    repository.setAuthentication( null );
+                }
+            }
+        }
+    }
+
-    // serverId = repository id
-    //
-    public void addAuthenticationForArtifactRepository( String repositoryId, String username, String password )
-    {
-        Authentication authentication = new Authentication( username, password );
-        authentications.put( repositoryId, authentication );
-    }
-
-    //
-        Authentication authentication = authentications.get( repositoryId );
-        
-        if ( authentication != null )
-        {
-            artifactRepository.setAuthentication( authentication );
-        }
-        
-        Proxy proxy = proxies.get(  artifactRepository.getProtocol() );
+        Proxy proxy = proxies.get( artifactRepository.getProtocol() );
