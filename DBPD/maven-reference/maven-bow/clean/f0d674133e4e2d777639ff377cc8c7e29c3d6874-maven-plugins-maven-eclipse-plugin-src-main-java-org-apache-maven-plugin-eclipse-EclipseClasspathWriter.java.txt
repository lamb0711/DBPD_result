When the downloadSources flag was off, also source files available in the local repository were not used.
Fixed so that sources archives available in the local repository are used but no additional jars are downloaded.
Added an explanation message on how to turn source downloading on (this should be on by default, but let's wait till there will be more sources archives in the m2 repo)

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@330090 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
-                if ( downloadSources )
-                {
-                    Artifact sourceArtifact = retrieveSourceArtifact( artifact, remoteArtifactRepositories,
-                                                                      localRepository, artifactResolver,
-                                                                      artifactFactory );
+                Artifact sourceArtifact = retrieveSourceArtifact( artifact, remoteArtifactRepositories,
+                                                                  localRepository, artifactResolver, artifactFactory,
+                                                                  downloadSources );
-                    if ( !sourceArtifact.isResolved() )
+                if ( !sourceArtifact.isResolved() )
+                {
+                    if ( downloadSources )
-                                                      sourceArtifact.getArtifactId() ) );
+                                                      sourceArtifact.getId() ) );
-                        log.debug( Messages.getString( "EclipseClasspathWriter.sourcesavailable", //$NON-NLS-1$
-                                                       new Object[] {
-                                                           sourceArtifact.getArtifactId(),
-                                                           sourceArtifact.getFile().getAbsolutePath() } ) );
-
-                        sourcepath = "M2_REPO/" //$NON-NLS-1$
-                            + EclipseUtils.toRelativeAndFixSeparator( localRepositoryFile, sourceArtifact.getFile()
-                                .getAbsolutePath(), false );
+                        log.info( Messages.getString( "EclipseClasspathWriter.sourcesnotdownloaded", //$NON-NLS-1$
+                                                      sourceArtifact.getId() ) );
+                }
+                else
+                {
+                    log.debug( Messages.getString( "EclipseClasspathWriter.sourcesavailable", //$NON-NLS-1$
+                                                   new Object[] {
+                                                       sourceArtifact.getId(),
+                                                       sourceArtifact.getFile().getAbsolutePath() } ) );
+
+                    sourcepath = "M2_REPO/" //$NON-NLS-1$
+                        + EclipseUtils.toRelativeAndFixSeparator( localRepositoryFile, sourceArtifact.getFile()
+                            .getAbsolutePath(), false );
-                                            ArtifactFactory artifactFactory )
+                                            ArtifactFactory artifactFactory, boolean downloadSources )
-            artifactResolver.resolve( sourceArtifact, remoteArtifactRepositories, localRepository );
+            artifactResolver.resolve( sourceArtifact, downloadSources ? remoteArtifactRepositories : new ArrayList(),
+                                      localRepository );
-                                                     new Object[] { sourceArtifact.getArtifactId(), e.getMessage() } );
+                                                     new Object[] { sourceArtifact.getId(), e.getMessage() } );
-                                                 new Object[] { sourceArtifact.getArtifactId(), e.getMessage() } );
+                                                 new Object[] { sourceArtifact.getId(), e.getMessage() } );
