o Changed array to atomicreference since arrays are not thread-safe

+import java.util.concurrent.atomic.AtomicReference;
+
-    private static final ThreadLocal<MavenSession[]> session = new InheritableThreadLocal<MavenSession[]>();
+    private static final ThreadLocal<AtomicReference<MavenSession>> session = new InheritableThreadLocal<AtomicReference<MavenSession>>();
-            MavenSession[] oldSession = DefaultLegacySupport.session.get();
+            AtomicReference<MavenSession> oldSession = DefaultLegacySupport.session.get();
-                oldSession[0] = null;
+                oldSession.set( null);
-            DefaultLegacySupport.session.set( new MavenSession[] { session } );
+            DefaultLegacySupport.session.set( new AtomicReference<MavenSession>( session ));
-        MavenSession[] currentSession = DefaultLegacySupport.session.get();
-        return currentSession != null ? currentSession[0] : null;
+        AtomicReference<MavenSession> currentSession = DefaultLegacySupport.session.get();
+        return currentSession != null ? currentSession.get() : null;
