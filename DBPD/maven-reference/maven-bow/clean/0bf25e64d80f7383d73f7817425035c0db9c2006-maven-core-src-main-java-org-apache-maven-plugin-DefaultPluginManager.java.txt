o adjusting the internals to deal with root-based resolution
o gross hack to work around someone hardcoding a dummy:dummy root artifact in the surefire plugin



git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@756885 13f79535-47bb-0310-9956-ffa450edef68

+        
-
+        
-            pluginDescriptor.setPluginArtifact( pluginArtifact );            
-                        
+            pluginDescriptor.setPluginArtifact( pluginArtifact ); 
+            // Make sure it's just the plugin artifacts
+            pluginDescriptor.setArtifacts( new ArrayList( pluginArtifacts ) );
-        List realmActions = new ArrayList();
-            mojo = getConfiguredMojo( session, dom, project, false, mojoExecution, realmActions );
+            mojo = getConfiguredMojo( session, dom, project, false, mojoExecution );
-            pluginDescriptor.setClassRealm( null );
-            pluginDescriptor.setArtifacts( null );
-
-            for ( Iterator it = realmActions.iterator(); it.hasNext(); )
-            {
-                PluginRealmAction action = (PluginRealmAction) it.next();
-                action.undo();
-            }
-
-                //container.setLookupRealm( oldLookupRealm );
-        return (MavenReport) getConfiguredMojo( session, dom, project, true, mojoExecution, new ArrayList() );
+        return (MavenReport) getConfiguredMojo( session, dom, project, true, mojoExecution );
-    private Mojo getConfiguredMojo( MavenSession session, Xpp3Dom dom, MavenProject project, boolean report, MojoExecution mojoExecution, List realmActions )
+    private Mojo getConfiguredMojo( MavenSession session, Xpp3Dom dom, MavenProject project, boolean report, MojoExecution mojoExecution )
-            System.out.println( pluginDescriptor );
-    private static final class PluginRealmAction
-    {
-        private final PluginDescriptor pluginDescriptor;
-        private final ClassRealm realmWithTransientParent;
-
-        PluginRealmAction( PluginDescriptor pluginDescriptor )
-        {
-            this.pluginDescriptor = pluginDescriptor;
-            realmWithTransientParent = null;
-        }
-
-        PluginRealmAction( PluginDescriptor pluginDescriptor, ClassRealm realmWithTransientParent )
-        {
-            this.pluginDescriptor = pluginDescriptor;
-            this.realmWithTransientParent = realmWithTransientParent;
-        }
-
-        void undo()
-        {
-            pluginDescriptor.setArtifacts( null );
-            pluginDescriptor.setClassRealm( null );
-
-            if ( realmWithTransientParent != null )
-            {
-                realmWithTransientParent.setParentRealm( null );
-            }
-        }
-    }
-
