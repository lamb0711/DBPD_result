o removed all but one component reference of the legacy artifact code in the plugin manager


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@746430 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.ByteArrayInputStream;
-import java.io.ByteArrayInputStream;
+import org.apache.maven.MavenTools;
-import org.apache.maven.artifact.metadata.ArtifactMetadataSource;
-import org.apache.maven.artifact.resolver.ArtifactResolver;
-import org.apache.maven.project.*;
-import org.apache.maven.project.builder.*;
+import org.apache.maven.project.DuplicateArtifactAttachmentException;
+import org.apache.maven.project.MavenProject;
+import org.apache.maven.project.MavenProjectBuilder;
+import org.apache.maven.project.ProjectBuildingException;
-import org.apache.maven.project.artifact.MavenMetadataSource;
+import org.apache.maven.project.builder.PomInterpolatorTag;
+import org.apache.maven.project.builder.PomTransformer;
+import org.apache.maven.project.builder.ProjectUri;
-import org.apache.maven.shared.model.ModelProperty;
+import org.apache.maven.shared.model.ModelProperty;
-    protected ArtifactFactory artifactFactory;
-
-    @Requirement
-    protected ArtifactResolver artifactResolver;
-
-    @Requirement
-    protected ArtifactMetadataSource artifactMetadataSource;
+    protected MavenTools repositoryTools;
-            projectPluginDependencies = MavenMetadataSource.createArtifacts(
-                                                                             artifactFactory,
+            projectPluginDependencies = repositoryTools.createArtifacts(
-            resolutionGroup = artifactMetadataSource.retrieve( pluginArtifact, localRepository, project.getRemoteArtifactRepositories() );
+            resolutionGroup = repositoryTools.retrieve( pluginArtifact, localRepository, project.getRemoteArtifactRepositories() );
-        ArtifactResolutionResult result = artifactResolver.resolveTransitively(
+        ArtifactResolutionResult result = repositoryTools.resolveTransitively(
-                                                                                                ? Collections.EMPTY_LIST
-                                                                                                : new ArrayList( repositories ),
-                                                                                artifactMetadataSource,
+                                                                                ? Collections.EMPTY_LIST
+                                                                                : new ArrayList( repositories ),
-                                               artifactResolver,
+                                               repositoryTools,
-                                               artifactFactory,
-            downloadDependencies( project, session, artifactResolver );
+            downloadDependencies( project, session, repositoryTools );
-                                                ArtifactResolver artifactResolver,
+                                                MavenTools repositoryTools,
-                                                ArtifactFactory artifactFactory,
-        Artifact artifact = artifactFactory.createBuildArtifact( project.getGroupId(),
+        Artifact artifact = repositoryTools.createBuildArtifact( project.getGroupId(),
-            project.setDependencyArtifacts( project.createArtifacts( artifactFactory, null, null ) );
+            project.setDependencyArtifacts( repositoryTools.createArtifacts( project.getDependencies(), null, filter, project ) );
-            ArtifactResolutionResult result = artifactResolver.resolveTransitively(
+            ArtifactResolutionResult result = repositoryTools.resolveTransitively(
-                                                                                   artifactMetadataSource,
-                                       ArtifactResolver artifactResolver )
+                                       MavenTools repositoryTools )
-            artifactResolver.resolve( artifact, remoteArtifactRepositories, localRepository );
+            repositoryTools.resolve( artifact, localRepository, remoteArtifactRepositories );
