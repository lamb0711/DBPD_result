clean up MavenReportException uses

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@314937 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.FileNotFoundException;
+import java.util.Map;
-import java.util.Map;
-            throw new MavenReportException( "No source directory to process for style" );
+            // TODO: failure if not a report
+            throw new MavenReportException( "No source directory to process for checkstyle" );
-        File[] files = getFilesToProcess( includes, excludes );
+        File[] files = new File[0];
+        try
+        {
+            files = getFilesToProcess( includes, excludes );
+        }
+        catch ( IOException e )
+        {
+            throw new MavenReportException( "Error getting files to process", e );
+        }
-        ModuleFactory moduleFactory = getModuleFactory();
-
-        FilterSet filterSet = getSuppressions();
-
-            Configuration config = ConfigurationLoader.loadConfiguration( configFile, new PropertiesExpander(
-                overridingProperties ) );
+            ModuleFactory moduleFactory = getModuleFactory();
+
+            FilterSet filterSet = getSuppressions();
+
+            Configuration config =
+                ConfigurationLoader.loadConfiguration( configFile, new PropertiesExpander( overridingProperties ) );
+            // TODO: should be a failure, not an error. Report is not meant to throw an exception here (so site would
+            // work regardless of config), but should record this information
+                // TODO: failure if not a report
+        File parentFile = file.getAbsoluteFile().getParentFile();
+
+        if ( !parentFile.exists() )
+        {
+            parentFile.mkdirs();
+        }
+
+        FileOutputStream fileOutputStream = null;
-            File parentFile = file.getAbsoluteFile().getParentFile();
-
-            if ( !parentFile.exists() )
-            {
-                parentFile.mkdirs();
-            }
-
-            return new FileOutputStream( file );
+            fileOutputStream = new FileOutputStream( file );
-        catch ( IOException ioe )
+        catch ( FileNotFoundException e )
-            throw new MavenReportException( "Can't open file for output: " + file.getAbsolutePath(), ioe );
+            throw new MavenReportException( "Unable to create output stream: " + file, e );
+        return fileOutputStream;
-        throws MavenReportException
+        throws MavenReportException, IOException
-        List files;
-
-        try
-        {
-            files = FileUtils.getFiles( sourceDirectory, includes, excludesStr.toString() );
-        }
-        catch ( IOException ioe )
-        {
-            throw new MavenReportException( "Failed to get source files", ioe );
-        }
+        List files = FileUtils.getFiles( sourceDirectory, includes, excludesStr.toString() );
-                p.load( new FileInputStream( propertiesFile ) );
+                if ( propertiesFile.exists() )
+                {
+                    p.load( new FileInputStream( propertiesFile ) );
+                }
+                else
+                {
+                    getLog().warn( "File '" + propertiesFile + "' not found - skipping" );
+                }
+            // TODO: failure if not a report
-        throws MavenReportException
+        throws CheckstyleException
-        try
-        {
-            return PackageNamesLoader.loadModuleFactory( packageNamesFile );
-        }
-        catch ( CheckstyleException ce )
-        {
-            throw new MavenReportException( "failed to load package names XML: " + packageNamesFile, ce );
-        }
+        return PackageNamesLoader.loadModuleFactory( packageNamesFile );
