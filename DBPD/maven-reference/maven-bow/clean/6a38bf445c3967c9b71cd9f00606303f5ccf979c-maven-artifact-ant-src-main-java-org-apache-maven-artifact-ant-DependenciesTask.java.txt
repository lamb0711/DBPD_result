add the ability to use a POM for dependencies


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@189477 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.factory.ArtifactFactory;
+import org.apache.maven.model.Dependency;
-import org.apache.maven.model.Exclusion;
-import org.apache.maven.model.Dependency;
+    private Pom pom;
+
-        ArtifactFactory factory = (ArtifactFactory) lookup( ArtifactFactory.ROLE );
-
-        MavenMetadataSource metadataSource = new MavenMetadataSource( resolver, (MavenProjectBuilder) lookup(
-            MavenProjectBuilder.ROLE ) );
+        MavenProjectBuilder projectBuilder = (MavenProjectBuilder) lookup( MavenProjectBuilder.ROLE );
+        MavenMetadataSource metadataSource = new MavenMetadataSource( resolver, projectBuilder );
+
+        List dependencies = this.dependencies;
+
+        if ( pom != null )
+        {
+            if ( !dependencies.isEmpty() )
+            {
+                throw new BuildException( "You cannot specify both dependencies and a pom in the dependencies task" );
+            }
+
+            pom.initialise( projectBuilder, localRepo );
+
+            dependencies = pom.getDependencies();
+        }
-/*
-        for ( Iterator i = dependencies.iterator(); i.hasNext(); )
-        {
-            Dependency dependency = (Dependency) i.next();
-            Artifact a = factory.createArtifact( dependency.getGroupId(), dependency.getArtifactId(),
-                                                 dependency.getVersion(), dependency.getScope(), dependency.getType(),
-                                                 null );
-            artifacts.add( a );
-        }
-*/
-            result =
-                resolver.resolveTransitively( artifacts, createRemoteArtifactRepositories(), localRepo, metadataSource );
+            List remoteArtifactRepositories = createRemoteArtifactRepositories();
+            result = resolver.resolveTransitively( artifacts, remoteArtifactRepositories, localRepo, metadataSource );
+
+    public Pom getPom()
+    {
+        return pom;
+    }
+
+    public void addPom( Pom pom )
+    {
+        this.pom = pom;
+    }
