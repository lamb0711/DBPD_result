[MNG-6571] cache VersionRange instances, they are immutable
+import java.util.Map;
+import java.util.WeakHashMap;
+    private static final Map<String, VersionRange> CACHE =
+        Collections.<String, VersionRange>synchronizedMap( new WeakHashMap<String, VersionRange>() );
+
+    /**
+     * @deprecated VersionRange is immutable, cloning is not useful and even more an issue against the cache 
+     * @return a clone
+     */
+    @Deprecated
+        VersionRange cached = CACHE.get( spec );
+        if ( cached != null )
+        {
+            return cached;
+        }
+
-        return new VersionRange( version, restrictions );
+        cached = new VersionRange( version, restrictions );
+        CACHE.put( spec, cached );
+        return cached;
-        List<Restriction> restrictions = Collections.emptyList();
-        return new VersionRange( new DefaultArtifactVersion( version ), restrictions );
+        VersionRange cached = CACHE.get( version );
+        if ( cached == null )
+        {
+            List<Restriction> restrictions = Collections.emptyList();
+            cached = new VersionRange( new DefaultArtifactVersion( version ), restrictions );
+        }
+        return cached;
