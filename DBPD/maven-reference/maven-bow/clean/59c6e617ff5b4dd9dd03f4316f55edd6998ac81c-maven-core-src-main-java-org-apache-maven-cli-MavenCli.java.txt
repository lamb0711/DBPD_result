clean up CLI

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@289145 13f79535-47bb-0310-9956-ffa450edef68

+ * @noinspection UseOfSystemOutOrSystemErr,ACCESS_STATIC_VIA_INSTANCE
-    public static File userDir = new File( System.getProperty( "user.dir" ) );
-
+    /**
+     * @noinspection ConfusingMainMethod
+     */
-        // ----------------------------------------------------------------------
-        //
-        // 1) maven user configuration directory ( ~/.m2 )
-        // 2) maven home
-        // 3) local repository
-        //
-        // ----------------------------------------------------------------------
-
-        //        File userConfigurationDirectory = getUserConfigurationDirectory();
-
-        //        Properties mavenProperties = getMavenProperties( userConfigurationDirectory );
-
-        // ----------------------------------------------------------------------
-        //
-        // ----------------------------------------------------------------------
-
-        
+
-        
+
-            
+
-                
+
-                    System.out.println("WARNING: Alternate user settings file: " + userSettingsPath + " is invalid. Using default path." );
+                    System.out.println( "WARNING: Alternate user settings file: " + userSettingsPath +
+                        " is invalid. Using default path." );
-            
+
-            
+
-                
+
-                
-                while( profileTokens.hasMoreTokens() )
+
+                while ( profileTokens.hasMoreTokens() )
-                    
+
-                        profileManager.explicitlyActivate(profileAction.substring( 1 ) );
+                        profileManager.explicitlyActivate( profileAction.substring( 1 ) );
-            
+
-                    return 1;
-        MavenExecutionResponse response = null;
+        MavenExecutionResponse response;
-    private static MavenExecutionRequest createRequest( Embedder embedder, CommandLine commandLine,
-                                                        Settings settings, EventDispatcher eventDispatcher,
-                                                        LoggerManager loggerManager, ProfileManager profileManager )
+    private static MavenExecutionRequest createRequest( Embedder embedder, CommandLine commandLine, Settings settings,
+                                                        EventDispatcher eventDispatcher, LoggerManager loggerManager,
+                                                        ProfileManager profileManager )
-        MavenExecutionRequest request = null;
+        MavenExecutionRequest request;
+        File userDir = new File( System.getProperty( "user.dir" ) );
-        
+
-        
+
-        
+
-        
+
+        Properties systemProperties = new Properties();
-                setCliProperty( defStrs[i] );
+                setCliProperty( defStrs[i], systemProperties );
+
+        System.setProperties( systemProperties );
-    private static void setCliProperty( String property )
+    private static void setCliProperty( String property, Properties systemProperties )
-        String name = null;
+        String name;
-        String value = null;
+        String value;
-        System.setProperty( name, value );
+        systemProperties.setProperty( name, value );
-        
+
-        private Options options = null;
+        private Options options;
-            
-            options.addOption( OptionBuilder.withLongOpt( "file").hasArg().withDescription( "Force the use of an alternate POM file." ).create( ALTERNATE_POM_FILE ) );
-            
+
+            options.addOption( OptionBuilder.withLongOpt( "file" ).hasArg().withDescription(
+                "Force the use of an alternate POM file." ).create( ALTERNATE_POM_FILE ) );
+
-            
+
-            
-            options.addOption( OptionBuilder.withLongOpt( "fail-fast" ).withDescription( "Stop at first failure in reactorized builds" ).create( FAIL_FAST ) );
-            
-            options.addOption( OptionBuilder.withLongOpt( "fail-at-end" ).withDescription( "Only fail the build afterwards; allow all non-impacted builds to continue" ).create( FAIL_AT_END ) );
-            
-            options.addOption( OptionBuilder.withLongOpt( "fail-never" ).withDescription( "NEVER fail the build, regardless of project result" ).create( FAIL_NEVER ) );
+
+            options.addOption( OptionBuilder.withLongOpt( "fail-fast" ).withDescription(
+                "Stop at first failure in reactorized builds" ).create( FAIL_FAST ) );
+
+            options.addOption( OptionBuilder.withLongOpt( "fail-at-end" ).withDescription(
+                "Only fail the build afterwards; allow all non-impacted builds to continue" ).create( FAIL_AT_END ) );
+
+            options.addOption( OptionBuilder.withLongOpt( "fail-never" ).withDescription(
+                "NEVER fail the build, regardless of project result" ).create( FAIL_NEVER ) );
