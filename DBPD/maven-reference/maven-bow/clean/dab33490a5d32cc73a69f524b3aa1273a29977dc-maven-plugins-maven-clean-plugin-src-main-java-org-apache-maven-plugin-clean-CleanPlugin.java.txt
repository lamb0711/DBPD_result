most basic of field based plugins


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163627 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.plugin.PluginExecutionRequest;
-import org.apache.maven.plugin.PluginExecutionResponse;
+import org.apache.maven.plugin.PluginExecutionException;
- * @goal clean
- *
- * @description Goal which cleans the build
- *
- * @parameter
- *  name="outputDirectory"
- *  type="String"
- *  required="true"
- *  validator=""
- *  expression="#project.build.directory"
- *  description=""
- *
+ * @goal clean
+ * @description Goal which cleans the build
+ * @parameter name="outputDirectory"
+ * type="String"
+ * required="true"
+ * validator=""
+ * expression="#project.build.directory"
+ * description=""
-    private boolean failOnError;
-
-    public void execute( PluginExecutionRequest request, PluginExecutionResponse response )
-        throws Exception
+    // TODO: not in the descriptor previously
+//    private boolean failOnError;
+    public boolean supportsNewMojoParadigm()
-        try
+        return true;
+    }
+
+    public void execute()
+        throws PluginExecutionException
+    {
+        if ( outputDirectory != null )
-            outputDirectory = (String) request.getParameter( "outputDirectory" );
+            File dir = new File( outputDirectory );
-            failOnError = Boolean.valueOf( (String) request.getParameter( "failedOnError" ) ).booleanValue();
-            
-            if ( outputDirectory != null )
+            if ( dir.exists() && dir.isDirectory() )
-                File dir = new File( outputDirectory );
-
-                if ( dir.exists() && dir.isDirectory() )
+                getLog().info( "Deleting directory " + dir.getAbsolutePath() );
+                try
-                    getLog().info( "Deleting directory " + dir.getAbsolutePath() );
+                catch ( Exception e )
+                {
+                    throw new PluginExecutionException( "Unable to delete directory", e );
+                }
-        finally
-        {
-            // clean up state.
-            failOnError = false;
-            outputDirectory = null;
-        }
-    protected void removeDir( File d ) throws Exception
+    protected void removeDir( File d )
+        throws Exception
-                //log("Deleting " + f.getAbsolutePath());
-                    String message = "Unable to delete file "
-                        + f.getAbsolutePath();
-                    if ( failOnError )
-                    {
-                        throw new Exception( message );
-                    }
-                    else
-                    {
+                    String message = "Unable to delete file " + f.getAbsolutePath();
+// TODO:...
+//                    if ( failOnError )
+//                    {
+//                        throw new Exception( message );
+//                    }
+//                    else
+//                    {
-                    }
+//                    }
-        //log("Deleting directory " + d.getAbsolutePath());
+
-            String message = "Unable to delete directory "
-                + d.getAbsolutePath();
-            if ( failOnError )
-            {
-                throw new Exception( message );
-            }
-            else
-            {
+            String message = "Unable to delete directory " + d.getAbsolutePath();
+// TODO:...
+//            if ( failOnError )
+//            {
+//                throw new Exception( message );
+//            }
+//            else
+//            {
-            }
+//            }
