Add tests run to mboot.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@162542 13f79535-47bb-0310-9956-ffa450edef68

+    
+    private UnitTests unitTests;
+        
+        unitTests = bootstrapPomParser.getUnitTests();
+        
+        StringBuffer tests = new StringBuffer();
+        
+        tests.append(unitTests.getDirectory());
+        
+        tests.append("@");
+        
+        int size = unitTests.getIncludes().size();
+
+        // If there are no includes specified then we want it all.
+        if ( size == 0 )
+        {
+            tests.append( "'*'" );
+        }
+
+        for ( int j = 0; j < size; j++ )
+        {
+            String include = (String) unitTests.getIncludes().get( j );
+
+            tests.append( include );
+
+            if ( j != size - 1 )
+            {
+                tests.append( "," );
+            }
+        }
+
+        tests.append( "\n" );
+        
+        writeFile( "bootstrap.tests.includes", tests.toString() );
+
+        tests = new StringBuffer();
+        
+        tests.append(unitTests.getDirectory());
+        
+        tests.append("@");
+        
+        size = unitTests.getExcludes().size();
+
+        for ( int j = 0; j < size; j++ )
+        {
+            String exclude = (String) unitTests.getExcludes().get( j );
+
+            tests.append( exclude );
+
+            if ( j != size - 1 )
+            {
+                tests.append( "," );
+            }
+        }
+
+        tests.append( "\n" );
+        
+        writeFile( "bootstrap.tests.excludes", tests.toString() );
-            int size = r.getIncludes().size();
+            size = r.getIncludes().size();
+        
+        private UnitTests unitTests;
+        
+        public UnitTests getUnitTests()
+        {
+            return unitTests;
+        }
+            else if ( rawName.equals( "unitTestSourceDirectory" ) )
+            {
+                unitTests = new UnitTests();
+            }
+                unitTests = new UnitTests();
+            else if ( rawName.equals( "unitTestSourceDirectory" ) )
+            {
+                unitTests.setDirectory(getBodyText());
+            }
+            else if ( insideUnitTest )
+            {
+                if ( rawName.equals( "include" ) )
+                {
+                    unitTests.addInclude( getBodyText() );
+                }
+                else if ( rawName.equals( "exclude" ) )
+                {
+                    unitTests.addExclude( getBodyText() );
+                }
+            }
+    
+    public static class UnitTests
+        implements Serializable
+    {
+        private String directory;
+
+        private List includes = new ArrayList();
+
+        private List excludes = new ArrayList();
+
+        public void addInclude( String pattern )
+        {
+            this.includes.add( pattern );
+        }
+
+        public void addExclude( String pattern )
+        {
+            this.excludes.add( pattern );
+        }
+
+        public List getIncludes()
+        {
+            return this.includes;
+        }
+
+        public List getExcludes()
+        {
+            return this.excludes;
+        }
+
+        public void setDirectory( String directory )
+        {
+            this.directory = directory;
+        }
+
+        public String getDirectory()
+        {
+            return this.directory;
+        }
+    }
