Add support for proxy in bootstrap.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163596 13f79535-47bb-0310-9956-ffa450edef68

+        SettingsReader userModelReader = null;
+
-            SettingsReader userModelReader = new SettingsReader();
+            userModelReader = new SettingsReader();
-                    Profile activeProfile = userModelReader.getActiveMavenProfile();
+                    Profile activeProfile = userModelReader.getActiveProfile();
-            System.out
-                      .println( "You SHOULD have a ~/.m2/settings.xml file and must contain at least the following information:\n" );
+            System.out.println( "You SHOULD have a ~/.m2/settings.xml file and must contain at least the following information:\n" );
-            System.out.println( "<settings>\n  " + "<profiles>\n    " + "<profile>\n      "
-                + "<localRepository>/path/to/your/repository</localRepository>\n    "
-                + "</profile>\n  " + "</profiles>\n"
+            System.out.println( "<settings>\n" + "  <profiles>\n" + "    <profile>\n"
+                + "      <active>true</active>\n"
+                + "      <localRepository>/path/to/your/repository</localRepository>\n"
+                + "    </profile>\n" + "  </profiles>\n"
+        if ( userModelReader.getActiveProxy() != null )
+        {
+            Proxy proxy = userModelReader.getActiveProxy();
+            downloader.setProxy( proxy.getHost(), proxy.getPort(), proxy.getUserName(), proxy.getPassword() );
+        }
-
+        private List proxies = new ArrayList();
+
+        private Proxy currentProxy = null;
+
-        private Profile activeMavenProfile = null;
+        private Profile activeProfile = null;
-        public Profile getActiveMavenProfile()
+        private Proxy activeProxy = null;
+
+        public Profile getActiveProfile()
-            return activeMavenProfile;
+            return activeProfile;
+        }
+
+        public Proxy getActiveProxy()
+        {
+            return activeProxy;
+            else if ( "proxy".equals( rawName ) )
+            {
+                if ( notEmpty( currentProxy.getHost() ) && notEmpty( currentProxy.getPort() ) )
+                {
+                    proxies.add( currentProxy );
+                    currentProxy = null;
+                }
+                else
+                {
+                    throw new SAXException( "Invalid proxy entry. Missing one or more " +
+                                            "fields: {host, port}." );
+                }
+            }
+            else if ( currentProxy != null )
+            {
+                if ( "active".equals( rawName ) )
+                {
+                    currentProxy.setActive( Boolean.valueOf(currentBody.toString().trim()).booleanValue() );
+                }
+                else if ( "host".equals( rawName ) )
+                {
+                    currentProxy.setHost( currentBody.toString().trim() );
+                }
+                else if ( "port".equals( rawName ) )
+                {
+                    currentProxy.setPort( currentBody.toString().trim() );
+                }
+                else if ( "username".equals( rawName ) )
+                {
+                    currentProxy.setUserName( currentBody.toString().trim() );
+                }
+                else if ( "password".equals( rawName ) )
+                {
+                    currentProxy.setPassword( currentBody.toString().trim() );
+                }
+                else if ( "protocol".equals( rawName ) )
+                {
+                }
+                else if ( "nonProxyHosts".equals( rawName ) )
+                {
+                }
+                else
+                {
+                    throw new SAXException( "Illegal element inside proxy: \'" + rawName + "\'" );
+                }
+            }
-                if(profiles.size() == 1)
+                if( profiles.size() == 1 )
-                    activeMavenProfile = (Profile) profiles.get(0);
+                    activeProfile = (Profile) profiles.get(0);
-                        if(profile.isActive())
+                        if( profile.isActive() )
-                            activeMavenProfile = profile;
+                            activeProfile = profile;
+                        }
+                    }
+                }
+                if ( proxies.size() != 0 )
+                {
+                    for ( Iterator it = proxies.iterator(); it.hasNext(); )
+                    {
+                        Proxy proxy = (Proxy) it.next();
+                        if( proxy.isActive() )
+                        {
+                            activeProxy = proxy;
+            else if ( "proxy".equals( rawName ) )
+            {
+                currentProxy = new Proxy();
+            }
-            this.activeMavenProfile = null;
+            this.activeProfile = null;
+            this.activeProxy = null;
+            this.proxies.clear();
-
+    }
+    public class Proxy
+    {
+        private boolean active;
+
+        private String host;
+
+        private String port;
+
+        private String userName;
+
+        private String password;
+
+        public boolean isActive()
+        {
+            return active;
+        }
+
+        public void setActive( boolean active )
+        {
+            this.active = active;
+        }
+
+        public void setHost( String host )
+        {
+            this.host = host;
+        }
+
+        public String getHost()
+        {
+            return host;
+        }
+
+        public void setPort( String port )
+        {
+            this.port = port;
+        }
+
+        public String getPort()
+        {
+            return port;
+        }
+
+        public void setUserName( String userName )
+        {
+            this.userName = userName;
+        }
+
+        public String getUserName()
+        {
+            return userName;
+        }
+
+        public void setPassword( String password )
+        {
+            this.password = password;
+        }
+
+        public String getPassword()
+        {
+            return password;
+        }
