last of the error-reporting unit tests, and an additional error type to handle modules that are referenced but don't exist, which should stop the build. All tests pass.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@613032 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.lifecycle.LifecycleExecutionException;
+import org.apache.maven.reactor.MissingModuleException;
-    public void reportMissingPluginDescriptor( MojoBinding binding,
-                                               MavenProject project,
-                                               LifecycleExecutionException err )
-    {
-        StringWriter writer = new StringWriter();
-
-        writer.write( NEWLINE );
-        writer.write( "Maven cannot find a plugin required by your build:" );
-
-        writeMojoBinding( binding, writer );
-        writer.write( "Referenced from project:" );
-        writeProjectCoordinate( project, writer );
-
-        writer.write( "NOTE: If the above information seems incorrect, check that " +
-        		"the corresponding <plugin/> section in your POM is correct." );
-        writer.write( NEWLINE );
-        writer.write( NEWLINE );
-        writer.write( "If you specified this plugin directly using something like " +
-        		"'javadoc:javadoc', check that the <pluginGroups/> section in your " +
-        		"$HOME/.m2/settings.xml contains the proper groupId for the plugin " +
-        		"you are trying to use (each groupId goes in a separate <pluginGroup/> " +
-        		"element within the <pluginGroups/> section." );
-
-        addTips( CoreErrorTips.getMissingPluginDescriptorTips( binding, project ), writer );
-
-        registerBuildError( err, writer.toString() );
-    }
-
+    public void reportMissingModulePom( MissingModuleException err )
+    {
+        StringWriter writer = new StringWriter();
+
+        writer.write( NEWLINE );
+        writer.write( "The module: " );
+        writer.write( err.getModuleName() );
+        writer.write( " cannot be found." );
+        writer.write( NEWLINE );
+        writer.write( NEWLINE );
+        writer.write( "Module's expected path: " );
+        writer.write( NEWLINE );
+        writer.write( err.getModuleFile().getAbsolutePath() );
+        writer.write( NEWLINE );
+        writer.write( NEWLINE );
+        writer.write( "Referenced by POM: " );
+        writer.write( NEWLINE );
+        writer.write( err.getPomFile().getAbsolutePath() );
+        writer.write( NEWLINE );
+        writer.write( NEWLINE );
+        writer.write( NEWLINE );
+
+        addTips( CoreErrorTips.getMissingModuleTips( err.getPomFile(), err.getModuleFile(), err.getModuleName() ), writer );
+
+        registerBuildError( err, writer.toString() );
+    }
+
