[MNG-515]. Each language can have their own site descriptor (site.xml for default language, site_fr.xml for french menu)
Each i18n site must be under site directory:
src
  site
    apt <= default language
    xdoc
    fr
      apt <= french content
      xdoc

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@201584 13f79535-47bb-0310-9956-ffa450edef68

-                        getLog().info( "Generate " + report.getName( locale ) + " report." );
+                        getLog().info( "Generate \"" + report.getName( locale ) + "\" report." );
-                siteRenderer.render( new File( siteDirectory ), localeOutputDirectory,
-                                     getSiteDescriptor( reports, locale ), template, attributes );
-                siteRenderer.render( new File( generatedSiteDirectory ), localeOutputDirectory,
-                                     getSiteDescriptor( reports, locale ), template, attributes );
+                File siteDirectoryFile;
+
+                Locale firstLocale = (Locale) localesList.get( 0 );
+
+                if ( locale.equals( firstLocale ) )
+                {
+                    siteDirectoryFile = new File( siteDirectory );
+                }
+                else
+                {
+                    siteDirectoryFile = new File( siteDirectory, locale.getLanguage() );
+                }
+
+                siteRenderer.render( siteDirectoryFile, localeOutputDirectory,
+                                     getSiteDescriptor( reports, locale ), template, attributes, locale );
+
+                siteRenderer.render( siteDirectoryFile, localeOutputDirectory,
+                                     getSiteDescriptor( reports, locale ), template, attributes, locale );
-        File siteDescriptor = new File( siteDirectory, "site.xml" );
+        File siteDescriptor = new File( siteDirectory, "site_" + locale.getLanguage() + ".xml" );
-                siteDescriptorContent = IOUtil.toString( getClass().getResourceAsStream( "/default-site.xml" ) );
+                siteDescriptor = new File( siteDirectory, "site.xml" );
+                
+                if ( siteDescriptor.exists() )
+                {
+                    siteDescriptorContent = FileUtils.fileRead( siteDescriptor );
+                }
+                else
+                {
+                    siteDescriptorContent = IOUtil.toString( getClass().getResourceAsStream( "/default-site.xml" ) );
+                }
