o fixed conditions under which error emails should be sent
o fixed emailing to contain a link to the report
o reformatted using IDEA
o removed directory tracking from transactions, b/c undo order is too tricky for now
o adjusted code to maven-artifact (post maven-project creation) changes.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@164705 13f79535-47bb-0310-9956-ffa450edef68

- * ==================================================================== 
+ * ====================================================================
- * 
+ *
- * 
+ *
- * 
+ *
-import org.apache.maven.artifact.construction.ArtifactConstructionSupport;
+import org.codehaus.plexus.mailsender.MailSenderException;
-import java.io.FileReader;
-public class RepositoryCleaner
-    extends AbstractLogEnabled
-    implements Contextualizable
+public class RepositoryCleaner extends AbstractLogEnabled implements Contextualizable
-    private ArtifactConstructionSupport artifactConstructionSupport = new ArtifactConstructionSupport();
-
+    private String dateSubdir;
+
-        boolean mailReport = false;
-
-                
+
-                
+
-                    artifactDiscoverer = (ArtifactDiscoverer) container.lookup( ArtifactDiscoverer.ROLE, configuration
-                        .getSourceRepositoryLayout() );
+                    artifactDiscoverer = (ArtifactDiscoverer) container.lookup( ArtifactDiscoverer.ROLE,
+                                                                                configuration.getSourceRepositoryLayout() );
-                        File kickoutsList = new File(reportsBase, "kickouts.txt");
-                        File excludesList = new File(reportsBase, "excludes.txt");
-                        
-                        kickoutLister = new PathLister(kickoutsList);
-                        excludeLister = new PathLister(excludesList);
+                        File kickoutsList = new File( reportsBase, "kickouts.txt" );
+                        File excludesList = new File( reportsBase, "excludes.txt" );
+
+                        kickoutLister = new PathLister( kickoutsList );
+                        excludeLister = new PathLister( excludesList );
-                                                                          configuration.getBlacklistedPatterns(), excludeLister, kickoutLister );
+                                                                          configuration.getBlacklistedPatterns(),
+                                                                          excludeLister, kickoutLister );
-                    
-                    excludeLister.close();
-                    kickoutLister.close();
+
+                    if ( excludeLister != null )
+                    {
+                        excludeLister.close();
+                    }
+
+                    if ( kickoutLister != null )
+                    {
+                        kickoutLister.close();
+                    }
-                                                                                    configuration
-                                                                                        .getSourceRepositoryLayout() );
+                                                                                    configuration.getSourceRepositoryLayout() );
-                        ArtifactRepository sourceRepo = new ArtifactRepository( "source", "file://"
-                            + sourceRepositoryBase.getAbsolutePath(), sourceLayout );
+                        ArtifactRepository sourceRepo = new ArtifactRepository( "source", "file://" +
+                                                                                          sourceRepositoryBase.getAbsolutePath(),
+                                                                                sourceLayout );
-                                                                                    configuration
-                                                                                        .getTargetRepositoryLayout() );
+                                                                                    configuration.getTargetRepositoryLayout() );
-                        ArtifactRepository targetRepo = new ArtifactRepository( "target", "file://"
-                            + targetRepositoryBase.getAbsolutePath(), targetLayout );
+                        ArtifactRepository targetRepo = new ArtifactRepository( "target", "file://" +
+                                                                                          targetRepositoryBase.getAbsolutePath(),
+                                                                                targetLayout );
-                    logger
-                        .warn( "Warning encountered while rewriting one or more artifacts from source repository to target repository." );
-                }
-
-                if ( repoReporter.hasError() )
-                {
-                    mailReport = true;
+                    logger.warn(
+                        "Warning encountered while rewriting one or more artifacts from source repository to target repository." );
-            if ( mailReport && configuration.mailErrorReport() )
+            // if we wrote a repository report, and the configuration says to email the report, then do it.
+            if ( repoReporter.hasError() && configuration.mailErrorReport() )
-                String reportContents = readReportFile( repoReporter.getReportFile() );
+                logger.info( "Sending error report to " + configuration.getErrorReportToName() + " via email." );
-                message.setContent( reportContents );
+
+                StringBuffer contentBuffer = new StringBuffer();
+
+                contentBuffer.append( "Errors occurred while performing maven-1 to maven-2 repository conversion.\n\n" +
+                                      "For more details, see:\n\n" );
+
+                contentBuffer.append( configuration.getErrorReportLink().replaceAll("#date", dateSubdir) );
+
+                message.setContent( contentBuffer.toString() );
-                mailSender.send( message );
+                try
+                {
+                    mailSender.send( message );
+                }
+                catch ( MailSenderException e )
+                {
+                    logger.error( "An error occurred while trying to email repoclean report.", e );
+                }
-    private String readReportFile( File reportFile )
-        throws IOException
-    {
-        FileReader reader = null;
-        try
-        {
-            reader = new FileReader( reportFile );
-
-            StringBuffer reportContent = new StringBuffer();
-            char[] buffer = new char[512];
-            int read = -1;
-
-            while ( ( read = reader.read( buffer ) ) > -1 )
-            {
-                reportContent.append( buffer, 0, read );
-            }
-
-            return reportContent.toString();
-        }
-        finally
-        {
-            IOUtil.close( reader );
-        }
-    }
-
-                                         RepositoryCleanerConfiguration configuration, File reportsBase,
-                                         File sourceRepositoryBase, File targetRepositoryBase, FileReporter repoReporter )
+                                          RepositoryCleanerConfiguration configuration, File reportsBase,
+                                          File sourceRepositoryBase, File targetRepositoryBase,
+                                          FileReporter repoReporter )
-            logger.info( "Rewriting up to " + artifacts.size() + " artifacts (Should be " + ( artifacts.size() * 2 )
-                + " rewrites including POMs)." );
+            logger.info( "Rewriting up to " + artifacts.size() + " artifacts (Should be " + ( artifacts.size() * 2 ) +
+                         " rewrites including POMs)." );
-                    File artifactTarget = new File( targetRepo.getBasedir(), targetRepo.pathOf( artifact ).replace('+', '-') );
+                    File artifactTarget = new File( targetRepo.getBasedir(), targetRepo.pathOf( artifact ).replace(
+                        '+', '-' ) );
-                    boolean targetMissingOrOlder = !artifactTarget.exists()
-                        || artifactTarget.lastModified() < artifactSource.lastModified();
+                    boolean targetMissingOrOlder = !artifactTarget.exists() ||
+                        artifactTarget.lastModified() < artifactSource.lastModified();
-                                    transaction.addFile( targetParent );
-
-                                    logger.debug( "Copying artifact[" + artifact.getId() + "] from \'" + artifactSource
-                                        + "\' to \'" + artifactTarget + "\'." );
+                                    logger.debug( "Copying artifact[" + artifact.getId() + "] from \'" +
+                                                  artifactSource + "\' to \'" + artifactTarget + "\'." );
-                            repoReporter.error( "Error transferring artifact[" + artifact.getId()
-                                + "] to the target repository.", e );
+                            repoReporter.error( "Error transferring artifact[" + artifact.getId() +
+                                                "] to the target repository.", e );
-                            logger.debug( "working on digest for artifact[" + artifact.getId() + "] with groupId: \'"
-                                + artifact.getGroupId() + "\'" );
+                            logger.debug( "working on digest for artifact[" + artifact.getId() + "] with groupId: \'" +
+                                          artifact.getGroupId() + "\'" );
-                            digestVerifier.verifyDigest( artifactSource, artifactTarget, transaction,
-                                                                 artifactReporter, configuration.reportOnly() );
+                            digestVerifier.verifyDigest( artifactSource, artifactTarget, transaction, artifactReporter,
+                                                         configuration.reportOnly() );
-                                                                                      configuration
-                                                                                          .getSourcePomVersion() );
+                                                                                      configuration.getSourcePomVersion() );
-                        File targetPom = new File( targetRepositoryBase, targetRepo.pathOfMetadata( pom ).replace('+', '-') );
+                        File targetPom = new File( targetRepositoryBase,
+                                                   targetRepo.pathOfMetadata( pom ).replace( '+', '-' ) );
-                        File bridgedTargetPom = new File( targetRepositoryBase, bridgingLayout.pathOfMetadata( pom ).replace('+', '-') );
+                        File bridgedTargetPom = new File( targetRepositoryBase, bridgingLayout.pathOfMetadata( pom ).replace(
+                            '+', '-' ) );
-                            
-                            digestVerifier.verifyDigest( sourcePom, targetPom, transaction,
-                                                                 artifactReporter, configuration.reportOnly() );
-                            
-                            if(wroteBridge)
+
+                            digestVerifier.verifyDigest( sourcePom, targetPom, transaction, artifactReporter,
+                                                         configuration.reportOnly() );
+
+                            if ( wroteBridge )
-                                                                     artifactReporter, configuration.reportOnly() );
+                                                             artifactReporter, configuration.reportOnly() );
-                            
+
-                            repoReporter.error( "Error rewriting POM for artifact[" + artifact.getId()
-                                + "] into the target repository.\n Error message: " + e.getMessage() );
+                            repoReporter.error( "Error rewriting POM for artifact[" + artifact.getId() +
+                                                "] into the target repository.\n Error message: " + e.getMessage() );
+
+                            throw e;
-                        artifactReporter.warn( "Target file for artifact is present and not stale. (Artifact: \'"
-                            + artifact.getId() + "\' in path: \'" + artifactSource + "\' with target path: "
-                            + artifactTarget + ")." );
+                        artifactReporter.warn( "Target file for artifact is present and not stale. (Artifact: \'" +
+                                               artifact.getId() + "\' in path: \'" + artifactSource +
+                                               "\' with target path: " + artifactTarget + ")." );
-                        artifactReporter.error( "Cannot find source file for artifact: \'" + artifact.getId()
-                            + "\' under path: \'" + artifactSource + "\'" );
+                        artifactReporter.error( "Cannot find source file for artifact: \'" + artifact.getId() +
+                                                "\' under path: \'" + artifactSource + "\'" );
-                        repoReporter.warn( "Error(s) occurred while rewriting artifact: \'" + artifact.getId()
-                            + "\' or its POM." );
+                        repoReporter.warn( "Error(s) occurred while rewriting artifact: \'" + artifact.getId() +
+                                           "\' or its POM." );
+                    repoReporter.warn( "Rolling back conversion for: " + artifact );
-                    artifactReporter.error( "Error while rewriting file or POM for artifact: \'" + artifact.getId()
-                        + "\'. See report at: \'" + artifactReportPath + "\'.", e );
+                    artifactReporter.error( "Error while rewriting file or POM for artifact: \'" + artifact.getId() +
+                                            "\'. See report at: \'" + artifactReportPath + "\'.", e );
-            logger.info( "Actual number of artifacts rewritten: " + actualRewriteCount + " ("
-                + ( actualRewriteCount * 2 ) + " including POMs)." );
+            logger.info( "Actual number of artifacts rewritten: " + actualRewriteCount + " (" +
+                         ( actualRewriteCount * 2 ) + " including POMs)." );
-            reporter.warn( "Cannot create legacy-compatible copy of POM at: " + targetPom
-                + "; legacy-compatible path is the same as the converted POM itself." );
-            
+            reporter.warn( "Cannot create legacy-compatible copy of POM at: " + targetPom +
+                           "; legacy-compatible path is the same as the converted POM itself." );
+
-        
+
+        String groupId = artifact.getGroupId().replace( '.', '/' );
+        String artifactId = artifact.getArtifactId();
+        String type = artifact.getType();
+        String version = artifact.getVersion();
-        return artifact.getGroupId().replace( '.', '/' ) + "/" + artifact.getArtifactId() + "/" + artifact.getType()
-            + "/" + ( ( classifier != null ) ? ( classifier + "-" ) : ( "" ) ) + artifact.getVersion() + ".report.txt";
+        return groupId + "/" + artifactId + "/" + type + "/" +
+            ( ( classifier != null ) ? ( classifier + "-" ) : ( "" ) ) + version + ".report.txt";
-            logger.error( "Cannot write to target repository \'" + targetRepositoryBase
-                + "\' because it is not a directory." );
+            logger.error( "Cannot write to target repository \'" + targetRepositoryBase +
+                          "\' because it is not a directory." );
-        String subdir = dateFormat.format( new Date() );
+        this.dateSubdir = dateFormat.format( new Date() );
-        File reportsBase = new File( allReportsBase, subdir );
+        File reportsBase = new File( allReportsBase, dateSubdir );
