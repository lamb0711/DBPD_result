Fixed forking from reports.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@541950 13f79535-47bb-0310-9956-ffa450edef68

+        // initialize/resolve any direct-invocation tasks, if possible.
-        PluginDescriptor pluginDescriptor = null;
-        try
-        {
-            pluginDescriptor = pluginLoader.loadPlugin( mojoBinding, project );
-        }
-        catch ( PluginLoaderException e )
-        {
-            String message =
-                "Failed to load plugin: " + MojoBindingUtils.createPluginKey( mojoBinding )
-                                + ". Adding to late-bound plugins list.\nReason: " + e.getMessage();
-
-            if ( logger.isDebugEnabled() )
-            {
-                logger.debug( message, e );
-            }
-            else
-            {
-                logger.warn( message );
-            }
-
-            plan.addLateBoundMojo( mojoBinding );
-        }
+        PluginDescriptor pluginDescriptor = loadPluginDescriptor( mojoBinding, plan, project );
-            PluginDescriptor pluginDescriptor = null;
-            try
-            {
-                pluginDescriptor = pluginLoader.loadPlugin( mojoBinding, project );
-            }
-            catch ( PluginLoaderException e )
-            {
-                String message =
-                    "Failed to load plugin: " + MojoBindingUtils.createPluginKey( mojoBinding )
-                                    + ". Adding to late-bound plugins list.\nReason: " + e.getMessage();
-
-                if ( logger.isDebugEnabled() )
-                {
-                    logger.debug( message, e );
-                }
-                else
-                {
-                    logger.warn( message );
-                }
-
-                plan.addLateBoundMojo( mojoBinding );
-            }
+            PluginDescriptor pluginDescriptor = loadPluginDescriptor( mojoBinding, plan, project );
-                for ( Iterator reportBindingIt = reportBindings.iterator(); reportBindingIt.hasNext(); )
+                if ( reportBindings != null )
-                    MojoBinding reportBinding = (MojoBinding) reportBindingIt.next();
+                    plan.addForkedExecution( mojoBinding, reportBindings );
-                    try
+                    for ( Iterator reportBindingIt = reportBindings.iterator(); reportBindingIt.hasNext(); )
-                        pluginLoader.loadReportPlugin( mojoBinding, project );
-                    }
-                    catch ( PluginLoaderException e )
-                    {
-                        throw new LifecyclePlannerException( "Failed to load report-plugin descriptor for: "
-                                                             + MojoBindingUtils.toString( reportBinding )
-                                                             + ". Reason: " + e.getMessage(), e );
+                        MojoBinding reportBinding = (MojoBinding) reportBindingIt.next();
+
+                        PluginDescriptor pd = loadPluginDescriptor( reportBinding, plan, project );
+
+                        if ( pd != null )
+                        {
+                            findForkModifiers( reportBinding, pluginDescriptor, plan, project );
+                        }
-                plan.addForkedExecution( mojoBinding, reportBindings );
-
+    private PluginDescriptor loadPluginDescriptor( final MojoBinding mojoBinding, final BuildPlan plan,
+                                                   final MavenProject project )
+    {
+        PluginDescriptor pluginDescriptor = null;
+        try
+        {
+            pluginDescriptor = pluginLoader.loadPlugin( mojoBinding, project );
+        }
+        catch ( PluginLoaderException e )
+        {
+            String message =
+                "Failed to load plugin: " + MojoBindingUtils.createPluginKey( mojoBinding )
+                                + ". Adding to late-bound plugins list.\nReason: " + e.getMessage();
+
+            if ( logger.isDebugEnabled() )
+            {
+                logger.debug( message, e );
+            }
+            else
+            {
+                logger.warn( message );
+            }
+
+            plan.addLateBoundMojo( mojoBinding );
+        }
+
+        return pluginDescriptor;
+    }
+
