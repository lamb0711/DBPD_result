o another pass at the plugin manager


git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@760747 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.artifact.ArtifactUtils;
-            addPlugin( plugin, project, session );
-
-            pluginDescriptor = pluginCollector.getPluginDescriptor( plugin );
-                        
-            project.addPlugin( plugin );
-           
-            return pluginDescriptor;
+            return addPlugin( plugin, project, session );
-    protected void addPlugin( Plugin plugin, MavenProject project, MavenSession session )
+    protected PluginDescriptor addPlugin( Plugin plugin, MavenProject project, MavenSession session )
+        
+        return pluginDescriptor;
-            // 1. resolve the version to be used
-            version = resolveMetaVersion( groupId, artifactId, project, session.getLocalRepository(), Artifact.RELEASE_VERSION );
-            logger.debug( "Version from RELEASE metadata: " + version );
+            // 1. resolve the version to be used            
+            Artifact artifact = repositorySystem.createProjectArtifact( groupId, artifactId, Artifact.RELEASE_VERSION );
+
+            String artifactVersion = artifact.getVersion();
+
+            // make sure this artifact was transformed to a real version, and actually resolved to a file in the repo...
+            if ( !Artifact.RELEASE_VERSION.equals( artifactVersion ) && ( artifact.getFile() != null ) )
+            {
+                boolean pluginValid = false;
+
+                while ( !pluginValid && ( artifactVersion != null ) )
+                {
+                    pluginValid = true;
+                    
+                    artifact = repositorySystem.createProjectArtifact( groupId, artifactId, artifactVersion );
+                }
+
+                version = artifactVersion;
+            }
+
+            if ( version == null )
+            {
+                version = artifactVersion;
+            }
-    private String resolveMetaVersion( String groupId, String artifactId, MavenProject project, ArtifactRepository localRepository, String metaVersionId )
-        throws PluginVersionResolutionException, InvalidPluginException
-    {
-        logger.info( "Attempting to resolve a version for plugin: " + groupId + ":" + artifactId + " using meta-version: " + metaVersionId );
-
-        Artifact artifact = repositorySystem.createProjectArtifact( groupId, artifactId, metaVersionId );
-
-        String version = null;
-
-        String artifactVersion = artifact.getVersion();
-
-        // make sure this artifact was transformed to a real version, and actually resolved to a file in the repo...
-        if ( !metaVersionId.equals( artifactVersion ) && ( artifact.getFile() != null ) )
-        {
-            boolean pluginValid = false;
-
-            while ( !pluginValid && ( artifactVersion != null ) )
-            {
-                pluginValid = true;
-                
-                MavenProject pluginProject;
-                
-                try
-                {
-                    artifact = repositorySystem.createProjectArtifact( groupId, artifactId, artifactVersion );
-
-                    pluginProject = mavenProjectBuilder.buildFromRepository( artifact, project.getRemoteArtifactRepositories(), localRepository );
-                }
-                catch ( ProjectBuildingException e )
-                {
-                    throw new InvalidPluginException( "Unable to build project information for plugin '" + ArtifactUtils.versionlessKey( groupId, artifactId ) + "': " + e.getMessage(), e );
-                }
-            }
-
-            version = artifactVersion;
-        }
-
-        if ( version == null )
-        {
-            version = artifactVersion;
-        }
-
-        logger.info( "Using version: " + version + " of plugin: " + groupId + ":" + artifactId );
-
-        return version;
-    }
-
