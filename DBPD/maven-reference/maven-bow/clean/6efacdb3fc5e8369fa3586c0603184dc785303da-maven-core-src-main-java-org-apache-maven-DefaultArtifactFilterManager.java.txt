MNG-5771 user-defined core extensions

read ${maven.projectBasedir}/.mvn/extensions.xml and create core
extensions realms during maven runtime bootstrap. this required
short-lived bootstrap plexus container to resolve extensions.

individual extensions realms are wired to maven.ext realm according
to META-INF/maven/extension.xml exported packages specification

Signed-off-by: Igor Fedorenko <ifedorenko@apache.org>

-import org.apache.maven.extension.internal.DefaultCoreExports;
-
-import com.google.common.collect.ImmutableSet;
+import org.apache.maven.extension.internal.CoreExportsProvider;
-    protected final Set<String> coreArtifacts;
+    protected Set<String> excludedArtifacts;
-    protected final Set<String> excludedArtifacts;
+    private final Set<String> coreArtifacts;
-    public DefaultArtifactFilterManager( List<ArtifactFilterManagerDelegate> delegates, DefaultCoreExports extensions )
+    public DefaultArtifactFilterManager( List<ArtifactFilterManagerDelegate> delegates, CoreExportsProvider coreExports )
-        this.coreArtifacts = ImmutableSet.copyOf( extensions.getExportedArtifacts() );
-        this.excludedArtifacts = new LinkedHashSet<String>( extensions.getExportedArtifacts() );
+        this.coreArtifacts = coreExports.get().getExportedArtifacts();
+    }
+
+    private synchronized Set<String> getExcludedArtifacts()
+    {
+        if ( excludedArtifacts == null )
+        {
+            excludedArtifacts = new LinkedHashSet<String>( coreArtifacts );
+        }
+        return excludedArtifacts;
-        Set<String> excludes = new LinkedHashSet<String>( excludedArtifacts );
+        Set<String> excludes = new LinkedHashSet<String>( getExcludedArtifacts() );
-        excludedArtifacts.add( artifactId );
+        getExcludedArtifacts().add( artifactId );
