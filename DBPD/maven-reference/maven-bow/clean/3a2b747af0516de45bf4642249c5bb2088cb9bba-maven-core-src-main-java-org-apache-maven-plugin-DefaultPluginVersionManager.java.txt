

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@750351 13f79535-47bb-0310-9956-ffa450edef68

+import org.codehaus.plexus.logging.Logger;
-    extends AbstractLogEnabled
+    private Logger logger;
+    
+    @Requirement
-        getLogger().debug( "Version from POM: " + version );
+        logger.debug( "Version from POM: " + version );
-        getLogger().debug( "Version from another POM in the reactor: " + version );
+        logger.debug( "Version from another POM in the reactor: " + version );
-            getLogger().debug( "Version from LATEST metadata: " + version );
+            logger.debug( "Version from LATEST metadata: " + version );
-            getLogger().debug( "Version from RELEASE metadata: " + version );
+            logger.debug( "Version from RELEASE metadata: " + version );
-    private String resolveMetaVersion( String groupId,
-                                       String artifactId,
-                                       MavenProject project,
-                                       ArtifactRepository localRepository,
-                                       String metaVersionId )
+    private String resolveMetaVersion( String groupId, String artifactId, MavenProject project, ArtifactRepository localRepository, String metaVersionId )
-        getLogger().info( "Attempting to resolve a version for plugin: " + groupId + ":" + artifactId + " using meta-version: " + metaVersionId  );
+        logger.info( "Attempting to resolve a version for plugin: " + groupId + ":" + artifactId + " using meta-version: " + metaVersionId  );
-            ResolutionGroup resolutionGroup =
-                repositoryTools.retrieve( artifact, localRepository, project.getRemoteArtifactRepositories() );
+            ResolutionGroup resolutionGroup = repositoryTools.retrieve( artifact, localRepository, project.getRemoteArtifactRepositories() );
-                            getLogger().debug( "Plugin: "
+                            logger.debug( "Plugin: "
-                        getLogger().debug( "Invalid prerequisite Maven version: " + mavenVersion + " for plugin: " + pluginProject.getId() +
-                                                                        e.getMessage() );
+                        logger.debug( "Invalid prerequisite Maven version: " + mavenVersion + " for plugin: " + pluginProject.getId() + e.getMessage() );
-                        getLogger().info( "Ignoring available plugin version: " + artifactVersion +
-                            " for: " + groupId + ":" + artifactId + " as it requires Maven version matching: " + mavenVersion );
+                        logger.info( "Ignoring available plugin version: " + artifactVersion + " for: " + groupId + ":" + artifactId + " as it requires Maven version matching: " + mavenVersion );
-                            throw new PluginVersionResolutionException( groupId, artifactId,
-                                                                        "Error getting available plugin versions: " +
-                                                                            e.getMessage(), e );
+                            throw new PluginVersionResolutionException( groupId, artifactId, "Error getting available plugin versions: " + e.getMessage(), e );
-                        getLogger().debug( "Trying " + vr );
+                        logger.debug( "Trying " + vr );
+                        
-                            List versions = repositoryTools.retrieveAvailableVersions( artifact, localRepository,
-                                                                                              project.getRemoteArtifactRepositories() );
+                            List versions = repositoryTools.retrieveAvailableVersions( artifact, localRepository, project.getRemoteArtifactRepositories() );
-                            throw new PluginVersionResolutionException( groupId, artifactId,
-                                                                        "Error getting available plugin versions: " +
-                                                                            e.getMessage(), e );
+                            throw new PluginVersionResolutionException( groupId, artifactId, "Error getting available plugin versions: " + e.getMessage(), e );
-                            getLogger().debug( "Found " + artifactVersion );
+                            logger.debug( "Found " + artifactVersion );
+        
-        getLogger().info( "Using version: " + version + " of plugin: " + groupId + ":" + artifactId );
+        
+        logger.info( "Using version: " + version + " of plugin: " + groupId + ":" + artifactId );
