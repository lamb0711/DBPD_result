delete metadata files for all versions to ensure intergration test works as expected

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@326389 13f79535-47bb-0310-9956-ffa450edef68

-            index = newLine.lastIndexOf( "SNAPSHOT" );
-            if ( index >= 0 )
+            List l = new ArrayList();
+            l.add( newLine );
+
+            int endIndex = newLine.lastIndexOf( '/' );
+
+            String command = null;
+            String filespec;
+            if ( hasCommand )
-                List l = new ArrayList();
-                l.add( newLine );
+                int startIndex = newLine.indexOf( ' ' );
-                int endIndex = newLine.lastIndexOf( '/' );
+                command = newLine.substring( 0, startIndex );
-                String command = null;
-                String filespec;
-                if ( hasCommand )
-                {
-                    int startIndex = newLine.indexOf( ' ' );
-
-                    command = newLine.substring( 0, startIndex );
-
-                    filespec = newLine.substring( startIndex + 1, endIndex );
-                }
-                else
-                {
-                    filespec = newLine;
-                }
-
-                File dir = new File( filespec );
-                if ( dir.exists() && dir.isDirectory() )
-                {
-                    String[] files = dir.list( new FilenameFilter()
-                    {
-                        public boolean accept( File dir, String name )
-                        {
-                            return name.startsWith( "maven-metadata" ) && name.endsWith( ".xml" );
-
-                        }
-                    } );
-
-                    for ( int i = 0; i < files.length; i++ )
-                    {
-                        if ( hasCommand )
-                        {
-                            l.add( command + " " + new File( dir, files[i] ).getPath() );
-                        }
-                        else
-                        {
-                            l.add( new File( dir, files[i] ).getPath() );
-                        }
-                    }
-                }
-
-                return l;
+                filespec = newLine.substring( startIndex + 1, endIndex );
-                return Collections.singletonList( newLine );
+                filespec = newLine;
+
+            File dir = new File( filespec );
+            addMetadataToList( dir, hasCommand, l, command );
+            addMetadataToList( dir.getParentFile(), hasCommand, l, command );
+
+            return l;
+    private static void addMetadataToList( File dir, boolean hasCommand, List l, String command )
+    {
+        if ( dir.exists() && dir.isDirectory() )
+        {
+            String[] files = dir.list( new FilenameFilter()
+            {
+                public boolean accept( File dir, String name )
+                {
+                    return name.startsWith( "maven-metadata" ) && name.endsWith( ".xml" );
+
+                }
+            } );
+
+            for ( int i = 0; i < files.length; i++ )
+            {
+                if ( hasCommand )
+                {
+                    l.add( command + " " + new File( dir, files[i] ).getPath() );
+                }
+                else
+                {
+                    l.add( new File( dir, files[i] ).getPath() );
+                }
+            }
+        }
+    }
+
-            boolean useMavenRepoLocal =
-                Boolean.valueOf( controlProperties.getProperty( "use.mavenRepoLocal", "true" ) ).booleanValue();
+            boolean useMavenRepoLocal = Boolean.valueOf(
+                controlProperties.getProperty( "use.mavenRepoLocal", "true" ) ).booleanValue();
-                boolean chokeOnErrorOutput =
-                    Boolean.valueOf( controlProperties.getProperty( "failOnErrorOutput", "true" ) ).booleanValue();
+                boolean chokeOnErrorOutput = Boolean.valueOf(
+                    controlProperties.getProperty( "failOnErrorOutput", "true" ) ).booleanValue();
