First pass at fixing MNG-1136. This is still not working as the jdk config property is not passed by the check mojo. Thus the jdk property is always null

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@327233 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
-    private String[] createCliArgs()
+    private String[] createCliArgs() throws MojoExecutionException
-        // TODO: Temporary while we wait for surefire to be able to fork unit tests. See
-        // http://jira.codehaus.org/browse/MNG-441
-        return new String[]{"-p", "threaded", "-f", "100", "-i", this.cloverDatabase, "-s",
-            (String) this.project.getCompileSourceRoots().get( 0 ), "-d", this.cloverOutputSourceDirectory};
+        List parameters = new ArrayList();
+     
+        // TODO: The usage of the threaded flushpolicy model and a flush policy is temporary while 
+        // we wait for surefire to be able to fork unit tests. See http://jira.codehaus.org/browse/MNG-441
+
+        parameters.add( "-p" );
+        parameters.add( "threaded" );
+        parameters.add( "-f" );
+        parameters.add( "100" );
+
+        parameters.add( "-i" );
+        parameters.add( this.cloverDatabase );
+        parameters.add( "-s" );
+
+        // TODO: Allow support for several source roots in the future.
+        parameters.add( (String) this.project.getCompileSourceRoots().get( 0 ) );
+
+        parameters.add( "-d" );
+        parameters.add( this.cloverOutputSourceDirectory );
+
+        if ( this.jdk != null )
+        {
+            if ( this.jdk.equals( "1.4" ) )
+            {
+                parameters.add( "-jdk14" );
+            }
+            else if ( this.jdk.equals( "1.5" ) )
+            {
+                parameters.add( "-jdk15" );
+            }
+            else
+            {
+                throw new MojoExecutionException("Unsupported jdk version [" + this.jdk 
+                    + "]. Valid values are [1.4] and [1.5]");
+            }
+        }
+        
+        getLog().debug( "Instrumenting using parameters [" + parameters.toString() + "]");
+        
+        return (String[]) parameters.toArray(new String[0]);
