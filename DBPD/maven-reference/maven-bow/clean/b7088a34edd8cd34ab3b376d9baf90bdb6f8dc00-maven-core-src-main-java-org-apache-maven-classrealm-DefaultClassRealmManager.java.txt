MNG-5783 fixed slf4j is missing from ${plugin.artifacts}

Some plugins, e.g., cobertura-maven-plugin, use ${plugin.artifacts}
to setup classpath of externally launched jvms and they expect slf4j
to be available among plugin dependencies. At the same time slf4j
is already part of maven core runtime and it needs to be filtered
out from plugin and build extension realms to avoid duplicate classes
on classpath.

The fix is to move core artifact filtering from plugin dependency
resolver to class realm manager. This way ${plugin.artifacts} still
includes all compile/runtime scoped plugin dependencies but runtime
classpath only has plugin unique artifacts.

Signed-off-by: Igor Fedorenko <ifedorenko@apache.org>

+    /**
+     * Patterns of artifacts provided by maven core and exported via maven api realm. These artifacts are filtered from
+     * plugin and build extensions realms to avoid presence of duplicate and possibly conflicting classes on classpath.
+     */
+    private final Set<String> providedArtifacts;
+
+
+        this.providedArtifacts = exports.get().getExportedArtifacts();
-                artifactIds.add( getId( artifact ) );
-                if ( artifact.getFile() != null )
+                if ( !isProvidedArtifact( artifact ) )
-                    constituents.add( new ArtifactClassRealmConstituent( artifact ) );
+                    artifactIds.add( getId( artifact ) );
+                    if ( artifact.getFile() != null )
+                    {
+                        constituents.add( new ArtifactClassRealmConstituent( artifact ) );
+                    }
+    private boolean isProvidedArtifact( Artifact artifact )
+    {
+        return providedArtifacts.contains( artifact.getGroupId() + ":" + artifact.getArtifactId() );
+    }
+
