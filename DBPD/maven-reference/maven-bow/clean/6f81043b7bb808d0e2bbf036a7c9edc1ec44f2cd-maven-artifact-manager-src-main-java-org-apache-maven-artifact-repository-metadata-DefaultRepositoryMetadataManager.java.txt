Centralized repository handling in AbstractVersionTransformation, for consistency (should fix MNG-527).

Changed download strategy for plugins.xml metadata to download only when non-existent locally or when plugin prefix cannot be located within local metadata. NOTE: This could lead to local-only installs of plugins having their prefix mappings overwritten.

Next step is to change the maven-plugin-plugin.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219615 13f79535-47bb-0310-9956-ffa450edef68

+    public void resolveLocally( RepositoryMetadata metadata, ArtifactRepository local )
+        throws RepositoryMetadataManagementException
+    {
+        resolve( metadata, null, local );
+    }
+    
-            metadataFile = constructLocalRepositoryFile( metadata, local, remote.getId() );
+            metadataFile = constructLocalRepositoryFile( metadata, local );
-            if ( remote == null )
-            {
-                throw new RepositoryMetadataManagementException( metadata,
-                                                                 "Cannot retrieve repository metadata from null repository." );
-            }
-            else
+            if ( !metadataFile.exists() && remote != null )
-                    
+
-                        
-                        if( !metadataFile.exists() || ( metadataFile.lastModified() <= tempMetadataFile.lastModified() ) )
+
+                        if ( !metadataFile.exists()
+                            || ( metadataFile.lastModified() <= tempMetadataFile.lastModified() ) )
-                                
+
-                            throw new RepositoryMetadataManagementException( metadata, "Remote repository metadata not found.",
-                                                                             e );
+                            throw new RepositoryMetadataManagementException( metadata,
+                                                                             "Remote repository metadata not found.", e );
-                            
+
-                            
+
-                    
-                    metadata.setFile( metadataFile );
-                    throw new RepositoryMetadataManagementException( metadata, "Error constructing temporary metadata download file.", e );
+                    throw new RepositoryMetadataManagementException(
+                                                                     metadata,
+                                                                     "Error constructing temporary metadata download file.",
+                                                                     e );
+            else
+            {
+                getLogger().info( "Using local copy of " + metadata + " from: " + metadataFile );
+            }
+
+            metadata.setFile( metadataFile );
-        String realignedPath = local.formatAsFile( metadata.getRepositoryPath() );
-
-        realignedPath = realignedPath.replace( File.separatorChar, '/' );
-
-        if ( !realignedPath.startsWith( "/" ) )
-        {
-            realignedPath = "/" + realignedPath;
-        }
-
-        realignedPath = "/REPOSITORY-INF/" + remoteRepositoryId + realignedPath;
-
-        File metadataFile = new File( local.getBasedir(), realignedPath ).getAbsoluteFile();
+        File metadataFile = constructLocalRepositoryFile( metadata, local );
-    private File constructLocalRepositoryFile( RepositoryMetadata metadata, ArtifactRepository local, String remoteId )
+    public void purgeLocalCopy( RepositoryMetadata metadata, ArtifactRepository local )
+        throws RepositoryMetadataManagementException
+    {
+        File metadataFile = constructLocalRepositoryFile( metadata, local );
+        
+        if ( metadataFile.exists() )
+        {
+            if ( !metadataFile.delete() )
+            {
+                throw new RepositoryMetadataManagementException( metadata, "Failed to purge local copy from: " + metadataFile );
+            }
+        }
+    }
+
+    private File constructLocalRepositoryFile( RepositoryMetadata metadata, ArtifactRepository local )
-        String realignedPath = metadataPath.replace( File.separatorChar, '/' );
+        metadataPath = metadataPath.replace( File.separatorChar, '/' );
-        if ( !realignedPath.startsWith( "/" ) )
-        {
-            realignedPath = "/" + realignedPath;
-        }
-
-        realignedPath = "/REPOSITORY-INF/" + remoteId + realignedPath;
-
-        return new File( local.getBasedir(), realignedPath );
+        return new File( local.getBasedir(), metadataPath );
