MNG-5374: Fix transfer listener after the JSR330 merge

For the following cases I have done the following:

1) Logging to the console: I simply restored the class that was there such that when logging to the console it uses System.out as it did and the d
ownload progress appears as it did.

2) Logging in batch mode: the batch mode transfer listener uses an SLF4J logger and the batch mode transfer listener doesn't report download progr
ess so there is no issue. Download progress would just create a bunch of noise. The size and the speed at which it is downloaded are logged.

3) Logging to a file: same as 2) except it's all diverted to the specified file.

4) I created two protected methods in MavenCli so that integrators can supply their own console and batch transfer listeners if they wish.

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1407913 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.PrintStream;
-import org.slf4j.Logger;
-    protected Logger out;
-    //protected PrintStream out;
+    protected PrintStream out;
-    protected AbstractMavenTransferListener( Logger out )
+    protected AbstractMavenTransferListener( PrintStream out )
-        //this.out = ( out != null ) ? out : System.out;
-        out.info( message + ": " + event.getResource().getRepositoryUrl() + event.getResource().getResourceName() );
+        out.println( message + ": " + event.getResource().getRepositoryUrl() + event.getResource().getResourceName() );
-        out.warn( "[WARNING] " + event.getException().getMessage() + " for " + resource.getRepositoryUrl()
+        out.println( "[WARNING] " + event.getException().getMessage() + " for " + resource.getRepositoryUrl()
-            out.info( type + ": " + resource.getRepositoryUrl() + resource.getResourceName() + " (" + len
+            out.println( type + ": " + resource.getRepositoryUrl() + resource.getResourceName() + " (" + len
