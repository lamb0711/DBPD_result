MNG-853: added Javadoc and parameter's documentation.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@280101 13f79535-47bb-0310-9956-ffa450edef68

+     * The mode to use. Possible values are: war (default), inplace
+     * and exploded.
+     *
+     * The maven project.
+     *
+     * The directory containing generated classes.
+     *
+     * The directory for the generated WAR.
+     *
+     * The directory where the webapp is built.
+     *
+     * Single directory for extra files to include in the WAR.
+     *
+     * The comma separated list of tokens to include in the WAR.
+     * Default is '**'.
+     *
+     * The comma separated list of tokens to exclude from the WAR.
+     *
+     * The path to the web.xml file to use.
+     *
+     * The name of the generated war.
+     *
+     * The maven archive configuration to use.
+     *
+
+    /**
+     * Copies webapp resources from the specified directory.
+     * <p/>
+     * Note that the <tt>webXml</tt> parameter could be null and may
+     * specify a file which is not named <tt>web.xml<tt>. If the file
+     * exists, it will be copied to the <tt>META-INF</tt> directory and
+     * renamed accordingly.
+     *
+     * @param sourceDirectory the source directory
+     * @param webappDirectory the target directory
+     * @param webXml          the path to a custom web.xml
+     * @throws IOException if an error occured while copying resources
+     */
-                for (int i = 0; i < fileNames.length; i++)
+                for ( int i = 0; i < fileNames.length; i++ )
-                    FileUtils.copyFile(new File( sourceDirectory, fileNames[i] ), new File( webappDirectory, fileNames[i] ) );
+                    FileUtils.copyFile( new File( sourceDirectory, fileNames[i] ),
+                                        new File( webappDirectory, fileNames[i] ) );
+    /**
+     * Builds the webapp for the specified project.
+     * <p/>
+     * Classes, libraries and tld files are copied to
+     * the <tt>webappDirectory</tt> during this phase.
+     *
+     * @param project the maven project
+     * @throws IOException if an error occured while building the webapp
+     */
+    /**
+     * Generates and exploded webapp.
+     * <p/>
+     * This mode is invoked when the <tt>mode</tt> parameter has a value
+     * of <tt>exploded</tt>.
+     *
+     * @throws IOException if an error occured while building the webapp
+     */
+    /**
+     * Generates the webapp in the source directory.
+     * <p/>
+     * This mode is invoked when the <tt>mode</tt> parameter has a value
+     * of <tt>inplace</tt>.
+     *
+     * @throws IOException if an error occured while building the webapp
+     */
+    /**
+     * Executes the WarMojo on the current project.
+     *
+     * @throws MojoExecutionException if an error occured while building the webapp
+     */
+    /**
+     * Generates the webapp according to the <tt>mode</tt> attribute.
+     *
+     * @param warFile the target war file
+     * @throws IOException
+     * @throws ArchiverException
+     * @throws ManifestException
+     * @throws DependencyResolutionRequiredException
+     */
+     * Returns the default exclude tokens.
+     *
+     * @return a list of <code>String</code> tokens
-     * Returns a list of filenames that should be copied over to the destination
-     * directory
+     * Returns a list of filenames that should be copied
+     * over to the destination directory.
-     * Returns an a string array of the excludes to be used when assembling/copy the war
+     * Returns a string array of the excludes to be used
+     * when assembling/copying the war.
+     *
+     * @return an array of tokens to exclude
-     * Returns an a string array of the includes to be used when assembling/copy the
-     * war
+     * Returns a string array of the includes to be used
+     * when assembling/copying the war.
+     *
+     * @return an array of tokens to include
-        return new String[] { warSourceIncludes };
+        return new String[]{warSourceIncludes};
