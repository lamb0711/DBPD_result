MNG-5695 fixed inconsistent/incomplete custom guice scope bindings

MojoExecution scope was only available for maven plugins and could not
be used for components defined in maven core or maven code extensions.

Session scope was only available for maven core and core extensions
but did not work for components from maven plugins.

Made both custom scopes available available in all realms.

Signed-off-by: Igor Fedorenko <ifedorenko@apache.org>

-import javax.inject.Named;
-import javax.inject.Singleton;
-
-import org.apache.maven.execution.scope.MojoExecutionScoped;
-import org.apache.maven.plugin.MojoExecution;
-import org.apache.maven.project.MavenProject;
-import org.codehaus.plexus.PlexusContainer;
-import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
-import com.google.inject.AbstractModule;
-import com.google.inject.Module;
-@Named
-@Singleton
-    public static Module getScopeModule( PlexusContainer container )
-        throws ComponentLookupException
-    {
-        final MojoExecutionScope scope = container.lookup( MojoExecutionScope.class );
-        return new AbstractModule()
-        {
-            @Override
-            protected void configure()
-            {
-                bindScope( MojoExecutionScoped.class, scope );
-
-                // standard scope bindings
-                bind( MavenProject.class ).toProvider( MojoExecutionScope.<MavenProject> seededKeyProvider() ).in( scope );
-                bind( MojoExecution.class ).toProvider( MojoExecutionScope.<MojoExecution> seededKeyProvider() ).in( scope );
-            }
-        };
-    }
-
