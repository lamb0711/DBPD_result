Add listeners to the converter

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@425873 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+import java.util.ArrayList;
+    private List listeners = new ArrayList();
+
-        getLogger().info( "There are " + pluginRelocators.size() + " plugin relocators available" );
+        sendInfoMessage( "There are " + pluginRelocators.size() + " plugin relocators available" );
-                getLogger().warn( "Unable to read " + propertiesFile.getAbsolutePath() + ", ignoring." );
+                sendWarnMessage( "Unable to read " + propertiesFile.getAbsolutePath() + ", ignoring." );
-                getLogger().warn( "Both <id> and <groupId> is set, using <groupId>." );
+                sendWarnMessage( "Both <id> and <groupId> is set, using <groupId>." );
-                getLogger().warn( "Both <id> and <artifactId> is set, using <artifactId>." );
+                sendWarnMessage( "Both <id> and <artifactId> is set, using <artifactId>." );
-            getLogger().warn( "pom.xml in " + outputdir.getAbsolutePath() + " already exists, overwriting" );
+            sendWarnMessage( "pom.xml in " + outputdir.getAbsolutePath() + " already exists, overwriting" );
-        getLogger().info( "Writing new pom to: " + pomxml.getAbsolutePath() );
+        sendInfoMessage( "Writing new pom to: " + pomxml.getAbsolutePath() );
+
+    public void addListener( ConverterListener listener )
+    {
+        if ( !listeners.contains( listener ) )
+        {
+            listeners.add( listener );
+        }
+    }
+
+    private void sendInfoMessage( String message )
+    {
+        getLogger().info( message );
+        
+        for ( Iterator i = listeners.iterator(); i.hasNext(); )
+        {
+            ConverterListener listener = (ConverterListener) i.next();
+            listener.info( message );
+        }
+    }
+
+    private void sendWarnMessage( String message )
+    {
+        getLogger().warn( message );
+        
+        for ( Iterator i = listeners.iterator(); i.hasNext(); )
+        {
+            ConverterListener listener = (ConverterListener) i.next();
+            listener.warn( message );
+        }
+    }
