o Added '-e' switch, to allow error stacktraces without enabling DEBUG error level throughout.
o Added listing of error messages from getCause() chain in DefaultMaven rather than simply spitting out the (often useless) aggregator Exception's message.
o Added '-e' to the IT verifier's invocation of m2.

I'm trying to get visibility to errors here...

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@169230 13f79535-47bb-0310-9956-ffa450edef68

+        
+        boolean showErrors = debug || commandLine.hasOption( CLIManager.ERRORS );
+        if(showErrors)
+        {
+            System.out.println("+ Error stacktraces are turned on.");
+        }
+        
-            showFatalError( "Unable to start the embedded plexus container", e, debug );
+            showFatalError( "Unable to start the embedded plexus container", e, showErrors );
-            showFatalError( "Unable to read settings.xml", e, debug );
+            showFatalError( "Unable to read settings.xml", e, showErrors );
-            showFatalError( "Unable to read settings.xml", e, debug );
+            showFatalError( "Unable to read settings.xml", e, showErrors );
-            showFatalError( "Unable to read settings.xml", e, debug );
+            showFatalError( "Unable to read settings.xml", e, showErrors );
-            showFatalError( "Error locating project files for reactor execution", e, debug );
+            showFatalError( "Error locating project files for reactor execution", e, showErrors );
-            showFatalError( "Unable to configure the Maven application", e, debug );
+            showFatalError( "Unable to configure the Maven application", e, showErrors );
-            showFatalError( "Error executing Maven for a project", e, debug );
+            showFatalError( "Error executing Maven for a project", e, showErrors );
-    private static void showFatalError( String message, Exception e, boolean debug )
+    private static void showFatalError( String message, Exception e, boolean show )
-        if ( debug )
+        if ( show )
+            System.err.println("Error stacktrace:");
+            
+        
+        // TODO: [jc] Is there a better switch than '-e' for this?
+        public static final char ERRORS = 'e';
+            options.addOption( OptionBuilder.withLongOpt( "errors" ).withDescription( "Produce execution error messages" ).create(
+                ERRORS ) );
