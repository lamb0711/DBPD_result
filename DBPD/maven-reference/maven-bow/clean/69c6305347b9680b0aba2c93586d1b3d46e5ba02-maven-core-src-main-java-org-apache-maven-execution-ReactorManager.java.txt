Changed ReactorManager's api for blackList and other methods that require
an 'id' to use MavenProject instead. 
In some parts of the code a DAG is constructed using a version-less key,
and in the api what the id should be is unspecified.
This could result in NPE's (it does!) because the code in plexus-utils
assumes a known id (vertex in the DAG) is supplied.

So, moved the project.getId() calls outside of ReactorManager into the
ReactorManager, so that there's just one place where the decision is made on
how to generate an id (DAG vertex label) from a project. This centralizes
that knowledge for increased maintainability and reduced chances on NPE's.




git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@279334 13f79535-47bb-0310-9956-ffa450edef68

-    
+
-    
+
-    
+
-    
+
-    
+
-    
+
-    
+
-        
+
-    
+
-    
+
-    
+
-    
+
-            
+
-            
+
-        
+
-    
-    public void blackList( String id )
+
+    public void blackList( MavenProject project )
+    {
+        blackList(
+            ArtifactUtils.versionlessKey( project.getGroupId(), project.getArtifactId() ) );
+    }
+
+    private void blackList( String id )
-    
-    public boolean isBlackListed( String id )
+
+    public boolean isBlackListed( MavenProject project )
-        return blackList.contains( id );
+        return blackList.contains(
+            ArtifactUtils.versionlessKey( project.getGroupId(), project.getArtifactId() ) );
-    
+
-    
+
-    
-    public boolean hasBuildFailure( String id )
+
+    public boolean hasBuildFailure( MavenProject project )
-        return buildFailuresByProject.containsKey( id );
+        return buildFailuresByProject.containsKey( project.getId() );
-    
+
-    
+
-            
+
-            
+
-            
+
-    
+
-        
+
-        
+
-        
+
