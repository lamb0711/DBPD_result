o Replaced Model/MavenXpp3Reader with MavenProjectBuilder in MavenMetaDataSource,
  to take advantage of the post-processing (managed dependencies, pom interpolation,
  inheritance assembly) involved with building a project. This shoud make transitive
  dependency resolution more consistent with the rest of m2's handling of
  POM information.

  It has been tested on marmalade in the jelly-core taglib, but
  I'm not sure how to setup an integration test using the it-verifier
  to build multiple POMs in a single test, so I'm not sure how to
  setup an integration test for this.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163336 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.Model;
-import org.apache.maven.model.Parent;
-import org.apache.maven.model.io.xpp3.MavenXpp3Reader;
+//import org.apache.maven.model.Model;
+//import org.apache.maven.model.Parent;
+//import org.apache.maven.model.io.xpp3.MavenXpp3Reader;
+import org.apache.maven.project.MavenProject;
+import org.apache.maven.project.MavenProjectBuilder;
-import java.io.FileReader;
+//import java.io.FileReader;
-    private MavenXpp3Reader reader = new MavenXpp3Reader();
+    
+    private MavenProjectBuilder mavenProjectBuilder;
+    
+//    private MavenXpp3Reader reader = new MavenXpp3Reader();
-                                ArtifactResolver artifactResolver )
+                                ArtifactResolver artifactResolver,
+                                MavenProjectBuilder projectBuilder )
+        
+        this.mavenProjectBuilder = projectBuilder;
-            Model model = reader.read( new FileReader( metadataArtifact.getFile() ) );
+            // [jdcasey/03-Feb-2005]: Replacing with ProjectBuilder, to enable
+            // post-processing and inheritance calculation before retrieving the 
+            // associated artifacts. This should improve consistency.
+            MavenProject project = mavenProjectBuilder.build( metadataArtifact.getFile(), localRepository );
+//            Model model = reader.read( new FileReader( metadataArtifact.getFile() ) );
-            artifacts = createArtifacts( model, localRepository );
+            artifacts = createArtifacts( project.getDependencies(), localRepository );
-    public Set createArtifacts( Model model, ArtifactRepository localRepository )
+    public Set createArtifacts( List dependencies, ArtifactRepository localRepository )
-        Parent parent = model.getParent();
-        if(parent != null)
-        {
-            projectArtifacts.add( new DefaultArtifact( parent.getGroupId(), 
-                                                       parent.getArtifactId(), 
-                                                       parent.getVersion(), 
-                                                       "pom" ) );
-        }
-
-        List dependencies = model.getDependencies();
