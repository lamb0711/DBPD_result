o another pass at removing wagon from the core.



git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@823064 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.maven.repository;
+package org.apache.maven.repository.legacy;
+import org.apache.maven.repository.ArtifactTransferListener;
+import org.apache.maven.repository.MirrorSelector;
+import org.apache.maven.repository.Proxy;
-import org.apache.maven.repository.legacy.WagonManager;
+import org.apache.maven.repository.ArtifactDoesNotExistException;
+import org.apache.maven.repository.ArtifactTransferFailedException;
-import org.apache.maven.wagon.ResourceDoesNotExistException;
-import org.apache.maven.wagon.TransferFailedException;
-import org.apache.maven.wagon.events.TransferListener;
-
-        //        ArtifactResolutionResult result = artifactCollector.
+        //      ArtifactResolutionResult result = artifactCollector.
+        
-    public void retrieve( ArtifactRepository repository, File destination, String remotePath, TransferListener downloadMonitor )
-        throws TransferFailedException, ResourceDoesNotExistException
+    public void retrieve( ArtifactRepository repository, File destination, String remotePath, ArtifactTransferListener transferListener )
+        throws ArtifactTransferFailedException, ArtifactDoesNotExistException
-        wagonManager.getRemoteFile( repository, destination, remotePath, downloadMonitor, ArtifactRepositoryPolicy.CHECKSUM_POLICY_WARN, true );
+        try
+        {
+            wagonManager.getRemoteFile( repository, destination, remotePath, new TransferListenerAdapter( transferListener ), ArtifactRepositoryPolicy.CHECKSUM_POLICY_WARN, true );
+        }
+        catch ( org.apache.maven.wagon.TransferFailedException e )
+        {
+            throw new ArtifactTransferFailedException( "Error transferring artifact.", e );
+        }
+        catch ( org.apache.maven.wagon.ResourceDoesNotExistException e )
+        {
+            throw new ArtifactDoesNotExistException( "Requested artifact does not exist.", e );            
+        }
-    public void publish( ArtifactRepository repository, File source, String remotePath, TransferListener downloadMonitor )
-        throws TransferFailedException
+    public void publish( ArtifactRepository repository, File source, String remotePath, ArtifactTransferListener transferListener )
+        throws ArtifactTransferFailedException
-        wagonManager.putRemoteFile( repository, source, remotePath, downloadMonitor );
+        try
+        {
+            wagonManager.putRemoteFile( repository, source, remotePath, new TransferListenerAdapter( transferListener ) );
+        }
+        catch ( org.apache.maven.wagon.TransferFailedException e )
+        {
+            throw new ArtifactTransferFailedException( "Error transferring artifact.", e );
+        }
