o hide the creation of default event dispatcher and reactor manager inside the session
o the lifecycle executor test is now starting to look sane


git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@757635 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Arrays;
+import org.apache.maven.monitor.event.DefaultEventDispatcher;
-import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
+import org.codehaus.plexus.util.dag.CycleDetectedException;
-    
-    public MavenSession( ArtifactRepository localRepository, List<String> pluginGroups )    
-    {        
-        this.localRepository = localRepository;
-        this.pluginGroups = pluginGroups;
+
+    // Used by the embedder to verifyPlugin
+    public MavenSession( PlexusContainer container, MavenExecutionRequest request )
+    {
+        this.container = container;
+        this.request = request;
+
+    public MavenSession( PlexusContainer container, MavenExecutionRequest request, MavenProject project )
+        throws CycleDetectedException, DuplicateProjectException
+    {
+        this.container = container;
+        this.request = request;
+        this.reactorManager = new ReactorManager( Arrays.asList( new MavenProject[]{ project } ), request.getReactorFailureBehavior() );
+        this.eventDispatcher = new DefaultEventDispatcher( request.getEventMonitors() );
+        // When we pass in one project we'll just set the current project.
+        this.currentProject = project;
+    }    
+
+    public MavenSession( PlexusContainer container, MavenExecutionRequest request, List<MavenProject> projects )
+        throws CycleDetectedException, DuplicateProjectException
+    {
+        this.container = container;
+        this.request = request;
+        this.reactorManager = new ReactorManager( projects, request.getReactorFailureBehavior() );
+        this.eventDispatcher = new DefaultEventDispatcher( request.getEventMonitors() );        
+    }    
+    //TODO: get rid of this
-    public MavenSession( PlexusContainer container, MavenExecutionRequest request, ReactorManager reactorManager, EventDispatcher Eventdispatcher )
+    //TODO: get rid of this
+    public MavenSession( PlexusContainer container, MavenExecutionRequest request, ReactorManager reactorManager, EventDispatcher eventdispatcher )
-        this.eventDispatcher = Eventdispatcher;
+        this.eventDispatcher = eventdispatcher;
-    public Object lookup( String role )
-        throws ComponentLookupException
-    {
-        return container.lookup( role );
-    }
-
-    public Object lookup( String role, String roleHint )
-        throws ComponentLookupException
-    {
-        return container.lookup( role, roleHint );
-    }
-
-    public <T> T lookup( Class<T> type )
-        throws ComponentLookupException
-    {
-        return container.lookup( type );
-    }
-
-    public <T> T lookup( Class<T> type, String roleHint )
-        throws ComponentLookupException
-    {
-        return container.lookup( type, roleHint );
-    }
-
-    public List<Object> lookupList( String role )
-        throws ComponentLookupException
-    {
-        return container.lookupList( role );
-    }
-
-    public Map<String,Object> lookupMap( String role )
-        throws ComponentLookupException
-    {
-        return container.lookupMap( role );
-    }
-
