[MNG-3906] - Project-level plugin dependencies order. Fixed a lot of problems with ordering of elements. We need to assume that the processors always get the parent model first, then the child, down the line.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@757936 13f79535-47bb-0310-9956-ffa450edef68

+    private boolean isDependencyManagement;
+    
+    public DependenciesProcessor() {}
+    
+    public DependenciesProcessor(boolean isDependencyManagement) {
+        this.isDependencyManagement = isDependencyManagement;
+    }
-        DependencyProcessor processor = new DependencyProcessor();
+        DependencyProcessor processor = new DependencyProcessor(isDependencyManagement);
-                List<Dependency> childDependencies = new ArrayList<Dependency>();
-                for ( Dependency childDependency : c)
+
+                for ( Dependency parentDependency : p )
-                    for ( Dependency parentDependency : p)
-                    {
-                        processor.process( null, childDependency, dependencies, isChildMostSpecialized );
-                        childDependencies.add( parentDependency );
-                    }
+                    processor.process( parentDependency, null, dependencies, isChildMostSpecialized );
+                }
+                
+                int length = dependencies.size();
+                
+                for ( Dependency childDependency : c )
+                {
+                    processor.process( null, childDependency, dependencies, isChildMostSpecialized );
-                for ( Dependency d2 : childDependencies )
-                {
-                    processor.process( d2, null, dependencies, isChildMostSpecialized );
-                }
+                //Move elements so child dependencies are first
+                List<Dependency> childDependencies = 
+                    new ArrayList<Dependency>(dependencies.subList( length - 1 , dependencies.size() ) );
+                dependencies.removeAll( childDependencies );
+                dependencies.addAll( 0, childDependencies );
