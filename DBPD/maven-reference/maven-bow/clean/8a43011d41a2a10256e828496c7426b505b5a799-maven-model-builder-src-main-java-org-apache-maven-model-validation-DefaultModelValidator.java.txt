[MNG-4005] Throw Validation Error if pom contains a dependency with two different versions.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@784241 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Collection;
-import java.util.HashSet;
+import java.util.HashMap;
+import java.util.Map;
+            validateDependencies( result, model.getDependencies(), "dependencies" );
+
+            if ( model.getDependencyManagement() != null )
+            {
+                validateDependencies( result, model.getDependencyManagement().getDependencies(),
+                                      "dependencyManagment.dependencies" );
+            }
+
+                validateDependencies( result, profile.getDependencies(), "profiles.profile[" + profile.getId()
+                    + "].dependencies" );
+
+                if ( profile.getDependencyManagement() != null )
+                {
+                    validateDependencies( result, profile.getDependencyManagement().getDependencies(),
+                                          "profiles.profile[" + profile.getId() + "].dependencyManagment.dependencies" );
+                }
+
+    private void validateDependencies( ModelValidationResult result, List<Dependency> dependencies, String prefix )
+    {
+        Map<String, Dependency> index = new HashMap<String, Dependency>();
+
+        for ( Dependency dependency : dependencies )
+        {
+            String key = dependency.getManagementKey();
+
+            Dependency existing = index.get( key );
+
+            if ( existing != null )
+            {
+                result.addMessage( "'" + prefix + ".(groupId:artifactId:type:classifier)' must be unique: " + key
+                    + " -> " + existing.getVersion() + " vs " + dependency.getVersion() );
+            }
+            else
+            {
+                index.put( key, dependency );
+            }
+        }
+    }
+
-        Collection<String> ids = new HashSet<String>();
+        Map<String, Repository> index = new HashMap<String, Repository>();
-        for ( Repository repository :  repositories )
+        for ( Repository repository : repositories )
-            if ( !ids.add( repository.getId() ) )
+            String key = repository.getId();
+
+            Repository existing = index.get( key );
+
+            if ( existing != null )
-                    + repository.getUrl() );
+                    + existing.getUrl() + " vs " + repository.getUrl() );
+            }
+            else
+            {
+                index.put( key, repository );
