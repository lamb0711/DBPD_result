o Added <pluginManagement/>
o Removed goal decoration.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163468 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.Goal;
+import org.apache.maven.model.Plugin;
+import org.apache.maven.model.PluginManagement;
+import java.util.ArrayList;
+        injectPluginDefaults( model.getPlugins(), model.getPluginManagement() );
-    /**
-     * Added: Feb 1, 2005 by jdcasey
-     */
+    private void injectPluginDefaults( List plugins, PluginManagement pluginManagement )
+    {
+        if ( pluginManagement != null )
+        {
+            // a given project's plugins should be smaller than the
+            // group-defined defaults set...
+            // in other words, the project's plugins will probably be a subset
+            // of
+            // those specified in defaults.
+            Map pluginMap = new TreeMap();
+            for ( Iterator it = plugins.iterator(); it.hasNext(); )
+            {
+                Plugin plugin = (Plugin) it.next();
+                pluginMap.put( plugin.getId(), plugin );
+            }
+
+            List managedPlugins = pluginManagement.getPlugins();
+
+            for ( Iterator it = managedPlugins.iterator(); it.hasNext(); )
+            {
+                Plugin def = (Plugin) it.next();
+                String key = def.getId();
+
+                Plugin plugin = (Plugin) pluginMap.get( key );
+                if ( plugin != null )
+                {
+                    mergePluginWithDefaults( plugin, def );
+                }
+            }
+        }
+    }
+
+    private void mergePluginWithDefaults( Plugin plugin, Plugin def )
+    {
+        if ( plugin.getVersion() == null && def.getVersion() != null )
+        {
+            plugin.setVersion( def.getVersion() );
+        }
+
+        Boolean disabled = plugin.isDisabled();
+        if ( disabled == null )
+        {
+            plugin.setDisabled( def.isDisabled() );
+        }
+
+        Map goalMap = new TreeMap();
+
+        List pluginGoals = plugin.getGoals();
+        if ( pluginGoals != null )
+        {
+            for ( Iterator it = pluginGoals.iterator(); it.hasNext(); )
+            {
+                Goal goal = (Goal) it.next();
+
+                goalMap.put( goal.getId(), goal );
+            }
+        }
+
+        List defGoals = def.getGoals();
+        if ( defGoals != null )
+        {
+            for ( Iterator it = defGoals.iterator(); it.hasNext(); )
+            {
+                Goal defaultGoal = (Goal) it.next();
+
+                Goal localGoal = (Goal) goalMap.get( defaultGoal.getId() );
+                if ( localGoal == null )
+                {
+                    goalMap.put( defaultGoal.getId(), defaultGoal );
+                }
+                else
+                {
+                    Properties conf = defaultGoal.getConfiguration();
+
+                    conf.putAll( localGoal.getConfiguration() );
+
+                    localGoal.setConfiguration( conf );
+                }
+            }
+        }
+
+        plugin.setGoals( new ArrayList( goalMap.values() ) );
+
+        Properties props = new Properties( def.getConfiguration() );
+
+        props.putAll( plugin.getConfiguration() );
+
+        plugin.setConfiguration( props );
+    }
+
-            List dependencyDefaults = dependencyManagement.getDependencies();
+            List managedDependencies = dependencyManagement.getDependencies();
-            for ( Iterator it = dependencyDefaults.iterator(); it.hasNext(); )
+            for ( Iterator it = managedDependencies.iterator(); it.hasNext(); )
-                    mergeWithDefaults( dep, def );
+                    mergeDependencyWithDefaults( dep, def );
-    /**
-     * Added: Feb 1, 2005 by jdcasey
-     */
-    private void mergeWithDefaults( Dependency dep, Dependency def )
+    private void mergeDependencyWithDefaults( Dependency dep, Dependency def )
-}
+}
