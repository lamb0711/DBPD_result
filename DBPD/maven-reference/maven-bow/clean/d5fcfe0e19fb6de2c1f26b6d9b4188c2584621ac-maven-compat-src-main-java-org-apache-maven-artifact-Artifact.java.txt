o swapping the branch to trunk


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@779660 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.File;
+import java.util.Collection;
+import java.util.List;
+import java.util.regex.Pattern;
+
-import java.io.File;
-import java.util.Collection;
-import java.util.List;
-import java.util.regex.Pattern;
-
-/**
- * Description of an artifact.
- *
- * @todo do we really need an interface here?
- * @todo get rid of the multiple states we can have (project, parent, etc artifacts, file == null, snapshot, etc) - construct subclasses and use accordingly?
- */
-    /**
-     * Get the artifactScope of the artifact. If the artifact is a standalone rather than a dependency, it's artifactScope will be
-     * <code>null</code>. The artifactScope may not be the same as it was declared on the original dependency, as this is the
-     * result of combining it with the main project artifactScope.
-     *
-     * @return the artifactScope
-     */
-    // only providing this since classifier is *very* optional...
-    /** @todo would like to get rid of this - or at least only have one. Base version should be immutable. */
-    // ----------------------------------------------------------------------
-
-    void updateVersion( String version,
-                        ArtifactRepository localRepository );
+    void updateVersion( String version, ArtifactRepository localRepository );
-    /**
-     * @return {@link List} &lt; {@link String} > with artifact ids
-     */
-    /**
-     * @param dependencyTrail {@link List} &lt; {@link String} > with artifact ids
-     */
-    /** @todo remove, a quick hack for the lifecycle executor */
+    
+    void setFromAuthoritativeRepository( boolean fromAuthoritativeRepository );
+    
+    boolean isFromAuthoritativeRepository();
