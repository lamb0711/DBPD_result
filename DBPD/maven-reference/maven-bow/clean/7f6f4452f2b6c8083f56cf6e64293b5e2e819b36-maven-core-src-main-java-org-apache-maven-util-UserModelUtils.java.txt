o Changed Set to List for remote repo handling so that we can maintain declarative ordering in remote repos we use.
o Added UserModel support, integrated with maven-artifact and wagon via AuthenticationInfoProvider implementation.


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163501 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.model.user.JdkProfile;
-import org.apache.maven.model.user.MavenProfile;
-    public static final String JDK_PROFILE_ENVAR = "maven.jdkVersion";
-
-    public static final String MAVEN_PROFILE_ENVAR = "maven.mavenProfileId";
-
-    public static final String SERVER_PROFILE_ENVAR = "maven.serverProfileId";
-
-    public static ServerProfile getActiveServer( UserModel userModel )
+    public static ServerProfile getServerProfile( UserModel userModel, String serverProfileId )
-        List servers = userModel.getServerProfiles();
+        ServerProfile result = null;
-        String serverId = System.getProperty( SERVER_PROFILE_ENVAR );
-        if ( serverId == null || serverId.trim().length() < 1 )
+        List serverProfiles = userModel.getServerProfiles();
+        if ( serverProfiles != null )
-            serverId = userModel.getDefaultProfiles().getServerProfileId();
-        }
-
-        ServerProfile active = null;
-        for ( Iterator it = servers.iterator(); it.hasNext(); )
-        {
-            ServerProfile server = (ServerProfile) it.next();
-            if ( serverId.equals( server.getId() ) )
+            for ( Iterator it = serverProfiles.iterator(); it.hasNext(); )
-                active = server;
-                break;
+                ServerProfile profile = (ServerProfile) it.next();
+                if ( serverProfileId.equals( profile.getId() ) )
+                {
+                    result = profile;
+                    break;
+                }
-        return active;
-    }
-
-    public static JdkProfile getActiveJdk( UserModel userModel )
-    {
-        List jdks = userModel.getJdkProfiles();
-
-        String jdkId = System.getProperty( JDK_PROFILE_ENVAR );
-        if ( jdkId == null || jdkId.trim().length() < 1 )
-        {
-            jdkId = userModel.getDefaultProfiles().getJdkVersion();
-        }
-
-        JdkProfile active = null;
-        for ( Iterator it = jdks.iterator(); it.hasNext(); )
-        {
-            JdkProfile jdk = (JdkProfile) it.next();
-            if ( jdkId.equals( jdk.getVersion() ) )
-            {
-                active = jdk;
-                break;
-            }
-        }
-
-        return active;
-    }
-
-    public static MavenProfile getActiveRuntimeProfile( UserModel userModel )
-    {
-        List mavenProfiles = userModel.getMavenProfiles();
-
-        String mavenProfileId = System.getProperty( MAVEN_PROFILE_ENVAR );
-        if ( mavenProfileId == null || mavenProfileId.trim().length() < 1 )
-        {
-            mavenProfileId = userModel.getDefaultProfiles().getMavenProfileId();
-        }
-
-        MavenProfile active = null;
-        for ( Iterator it = mavenProfiles.iterator(); it.hasNext(); )
-        {
-            MavenProfile mavenProfile = (MavenProfile) it.next();
-            if ( mavenProfileId.equals( mavenProfile.getId() ) )
-            {
-                active = mavenProfile;
-                break;
-            }
-        }
-
-        return active;
+        return result;
+        if ( model == null )
+        {
+            model = new UserModel();
+        }
+
