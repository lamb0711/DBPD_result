fixed errors reported by Checkstyle

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@958295 13f79535-47bb-0310-9956-ffa450edef68

-@Component(role=LegacyArtifactCollector.class)
+@Component( role = LegacyArtifactCollector.class )
-    public ArtifactResolutionResult collect( Set<Artifact> artifacts, 
-                                             Artifact originatingArtifact,
-                                             Map managedVersions, 
-                                             ArtifactRepository localRepository,
+    public ArtifactResolutionResult collect( Set<Artifact> artifacts, Artifact originatingArtifact,
+                                             Map managedVersions, ArtifactRepository localRepository,
-                                             ArtifactMetadataSource source, 
-                                             ArtifactFilter filter,
+                                             ArtifactMetadataSource source, ArtifactFilter filter,
-    public ArtifactResolutionResult collect( Set<Artifact> artifacts, 
-                                             Artifact originatingArtifact,
-                                             Map managedVersions, 
-                                             ArtifactResolutionRequest repositoryRequest,
-                                             ArtifactMetadataSource source, 
-                                             ArtifactFilter filter,
+    public ArtifactResolutionResult collect( Set<Artifact> artifacts, Artifact originatingArtifact,
+                                             Map managedVersions, ArtifactResolutionRequest repositoryRequest,
+                                             ArtifactMetadataSource source, ArtifactFilter filter,
-            recurse( result, root, resolvedArtifacts, versionMap, repositoryRequest, source, filter, listeners, conflictResolvers );
+            recurse( result, root, resolvedArtifacts, versionMap, repositoryRequest, source, filter, listeners,
+                     conflictResolvers );
-                                
+
-    private void recurse( ArtifactResolutionResult result, 
-                          ResolutionNode node,
-                          Map<Object, List<ResolutionNode>> resolvedArtifacts, 
-                          ManagedVersionMap managedVersions,
-                          ArtifactResolutionRequest request,
-                          ArtifactMetadataSource source, 
-                          ArtifactFilter filter, 
-                          List<ResolutionListener> listeners,
-                          List<ConflictResolver> conflictResolvers )
+    private void recurse( ArtifactResolutionResult result, ResolutionNode node,
+                          Map<Object, List<ResolutionNode>> resolvedArtifacts, ManagedVersionMap managedVersions,
+                          ArtifactResolutionRequest request, ArtifactMetadataSource source, ArtifactFilter filter,
+                          List<ResolutionListener> listeners, List<ConflictResolver> conflictResolvers )
-                                            throw new ArtifactResolutionException( "Unable to get dependency information: " + e.getMessage(), resetArtifact, request.getRemoteRepositories(), e );
+                                            throw new ArtifactResolutionException(
+                                                                                   "Unable to get dependency information: "
+                                                                                       + e.getMessage(), resetArtifact,
+                                                                                   request.getRemoteRepositories(), e );
-                                    ArtifactVersion selectedVersion = resetArtifact.getVersionRange().matchVersion( resetArtifact.getAvailableVersions() );
+                                    ArtifactVersion selectedVersion =
+                                        resetArtifact.getVersionRange().matchVersion( resetArtifact.getAvailableVersions() );
-                            ArtifactResolutionException are = new ArtifactResolutionException( "Cannot resolve artifact version conflict between " + previous.getArtifact().getVersion()
-                                                                                              + " and " + node.getArtifact().getVersion(), previous.getArtifact() ); 
+                            ArtifactResolutionException are =
+                                new ArtifactResolutionException( "Cannot resolve artifact version conflict between "
+                                    + previous.getArtifact().getVersion() + " and " + node.getArtifact().getVersion(),
+                                                                 previous.getArtifact() );
-                            result.addVersionRangeViolation( new ArtifactResolutionException( "Conflict resolver returned unknown resolution node: ", resolved.getArtifact() ) );
+                            result.addVersionRangeViolation( new ArtifactResolutionException(
+                                                                                              "Conflict resolver returned unknown resolution node: ",
+                                                                                              resolved.getArtifact() ) );
-                                                                                               + versionRange, artifact,
-                                                                                               childRemoteRepositories );
+                                                                                               + versionRange,
+                                                                                           artifact,
+                                                                                           childRemoteRepositories );
-                                // MNG-3769: the [probably relocated] artifact is excluded. 
+                                // MNG-3769: the [probably relocated] artifact is excluded.
-    private void manageArtifact( ResolutionNode node, ManagedVersionMap managedVersions, List<ResolutionListener> listeners )
+    private void manageArtifact( ResolutionNode node, ManagedVersionMap managedVersions,
+                                 List<ResolutionListener> listeners )
-            && ( Artifact.SCOPE_TEST.equals( nearestArtifact.getScope() ) || Artifact.SCOPE_PROVIDED.equals( nearestArtifact.getScope() ) ) )
+            && ( Artifact.SCOPE_TEST.equals( nearestArtifact.getScope() )
+                            || Artifact.SCOPE_PROVIDED.equals( nearestArtifact.getScope() ) ) )
