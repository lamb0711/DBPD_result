o delegating local repository implementation that chains the reactor and user local repository
o removal of more state from the WagonManager and pushing it into the request in an attempt to bridge the way for Mercury



git-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/MNG-2766@773456 13f79535-47bb-0310-9956-ffa450edef68

-    private ArtifactUtils()
-    {
-    }
-
-    public static boolean isSnapshot( String version )
-    {
-        return ( version != null ) &&
-            ( version.toUpperCase().endsWith( Artifact.SNAPSHOT_VERSION ) || Artifact.VERSION_FILE_PATTERN.matcher( version )
-                .matches() );
-    }
-
-
+        
-    public static String versionlessKey( String groupId,
-                                         String artifactId )
+    public static String versionlessKey( String groupId, String artifactId )
-            throw new NullPointerException( "groupId was null" );
+            throw new NullPointerException( "groupId is null" );
-            throw new NullPointerException( "artifactId was null" );
+            throw new NullPointerException( "artifactId is null" );
-    public static String artifactId( String groupId,
-                                     String artifactId,
-                                     String type,
-                                     String version )
+    public static String key( Artifact artifact )
-        return artifactId( groupId, artifactId, type, null, version );
-    }
+        return key( artifact.getGroupId(), artifact.getArtifactId(), artifact.getVersion() );
+    }    
-    public static String artifactId( String groupId,
-                                     String artifactId,
-                                     String type,
-                                     String classifier,
-                                     String baseVersion )
+    public static String key( String groupId, String artifactId, String version )
-        return groupId + ":" + artifactId + ":" + type + ( classifier != null ? ":" + classifier : "" ) + ":" + baseVersion;
-    }
-
+        if ( groupId == null )
+        {
+            throw new NullPointerException( "groupId is null" );
+        }
+        if ( artifactId == null )
+        {
+            throw new NullPointerException( "artifactId is null" );
+        }
+        if ( version == null )
+        {
+            throw new NullPointerException( "version is null" );
+        }
+        
+        return groupId + ":" + artifactId + ":" + version;
+    }    
+    
-            for (Artifact artifact : artifacts) {
+            for (Artifact artifact : artifacts) 
+            {
-    public static Map<String,Artifact> artifactMapByArtifactId( Collection<Artifact> artifacts )
-    {
-        Map<String,Artifact> artifactMap = new LinkedHashMap<String,Artifact>();
-
-        if ( artifacts != null )
-        {
-            for (Artifact artifact : artifacts) {
-                artifactMap.put(artifact.getId(), artifact);
-            }
-        }
-
-        return artifactMap;
-    }
-
