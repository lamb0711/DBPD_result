o swapping the branch to trunk


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@779660 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.maven.errors.CoreErrorReporter;
-import org.apache.maven.monitor.event.EventMonitor;
-import org.apache.maven.profiles.ProfileActivationContext;
-import org.apache.maven.profiles.ProfileManager;
+import org.apache.maven.model.Profile;
-import org.apache.maven.realm.MavenRealmManager;
- * @version $Id$
+
-    private List profiles;
+    private List<Profile> profiles;
-    private List<String> pluginGroups = new ArrayList<String>();
+    private List<String> pluginGroups;
-
+    
-    private Properties userProperties;
-
-    private List<EventMonitor> eventMonitors;
-
-    private ProfileManager profileManager;
-
-
-    private MavenRealmManager realmManager;
+    
+    public DefaultMavenExecutionRequest() { }
-        copy.setOffline(  original.isOffline() );
+        copy.setOffline( original.isOffline() );
-        copy.setUseReactor( original.useReactor() );
-        copy.setReactorFailureBehavior( original.getReactorFailureBehavior() );
-        copy.setStartTime( original.getStartTime() );
-        copy.setEventMonitors( original.getEventMonitors());
-        copy.setActiveProfiles( original.getActiveProfiles());
-        copy.setInactiveProfiles(  original.getInactiveProfiles());
-        copy.setTransferListener( original.getTransferListener());
-        copy.setLoggingLevel( original.getLoggingLevel());
-        copy.setGlobalChecksumPolicy( original.getGlobalChecksumPolicy());
-        copy.setUpdateSnapshots( original.isUpdateSnapshots());
-        copy.setProfileManager( original.getProfileManager() );
+        copy.setActiveProfiles( original.getActiveProfiles() );
+        copy.setInactiveProfiles( original.getInactiveProfiles() );
+        copy.setTransferListener( original.getTransferListener() );
+        copy.setLoggingLevel( original.getLoggingLevel() );
+        copy.setGlobalChecksumPolicy( original.getGlobalChecksumPolicy() );
+        copy.setUpdateSnapshots( original.isUpdateSnapshots() );
-        copy.setRealmManager( original.getRealmManager() );
+        if ( goals == null )
+        {
+            goals = new ArrayList<String>();
+        }
-        return properties;
-    }
+        if ( properties == null )
+        {
+            properties = new Properties();
+        }
-    /** @deprecated use {@link #getPom()} */
-    public String getPomFile()
-    {
-        return pom.getAbsolutePath();
+        return properties;
-    public List<EventMonitor> getEventMonitors()
-    {
-        return eventMonitors;
-    }
-
-    public void setBasedir( File basedir )
-    {
-        this.basedir = basedir;
-    }
-
-    public void setEventMonitors( List<EventMonitor> eventMonitors )
-    {
-        this.eventMonitors = eventMonitors;
-    }
-
-        this.activeProfiles = activeProfiles;
+        getActiveProfiles().clear();
+        getActiveProfiles().addAll( activeProfiles );
-        this.inactiveProfiles = inactiveProfiles;
+        getInactiveProfiles().clear();
+        getInactiveProfiles().addAll( inactiveProfiles );
-        this.remoteRepositories = remoteRepositories;
+        getRemoteRepositories().clear();
+        getRemoteRepositories().addAll( remoteRepositories );
-        this.goals = goals;
+        getGoals().clear();
+        getGoals().addAll( goals );
-        if ( this.properties == null )
-        {
-            this.properties = properties;
-        }
-        else
-        {
-            this.properties.putAll( properties );
-        }
+        getProperties().clear();
+        getProperties().putAll( properties );
-        if ( properties == null )
-        {
-            properties = new Properties();
-        }
-
-        properties.setProperty( key, value );
-
-        if ( userProperties == null )
-        {
-            userProperties = new Properties();
-        }
-
-        userProperties.setProperty( key, value );
+        getProperties().setProperty( key, value );
-        getActiveProfiles().add( profile );
+        if ( !getActiveProfiles().contains( profile ) )
+        {
+            getActiveProfiles().add( profile );
+        }
-        getInactiveProfiles().add( profile );
+        if ( !getInactiveProfiles().contains( profile ) )
+        {
+            getInactiveProfiles().add( profile );
+        }
-        getActiveProfiles().addAll( profiles );
+        for ( String profile : profiles )
+        {
+            addActiveProfile( profile );
+        }
-        getInactiveProfiles().addAll( profiles );
-
-        return this;
-    }
-
-    public MavenExecutionRequest addEventMonitor( EventMonitor monitor )
-    {
-        if ( eventMonitors == null )
+        for ( String profile : profiles )
-            eventMonitors = new ArrayList<EventMonitor>();
+            addInactiveProfile( profile );
-        eventMonitors.add( monitor );
-
+        if ( proxies == null )
+        {
+            proxies = new ArrayList();
+        }
-        this.proxies = proxies;
+        getProxies().clear();
+        getProxies().addAll( proxies );
+        if ( servers == null )
+        {
+            servers = new ArrayList();
+        }
-        this.servers = servers;
+        getServers().clear();
+        getServers().addAll( servers );
+        if ( mirrors == null )
+        {
+            mirrors = new ArrayList();
+        }
-        this.mirrors = mirrors;
+        getMirrors().clear();
+        getMirrors().addAll( mirrors );
-    public List getProfiles()
+    public List<Profile> getProfiles()
+        if ( profiles == null )
+        {
+            profiles = new ArrayList<Profile>();
+        }
-    public MavenExecutionRequest setProfiles( List profiles )
+    public MavenExecutionRequest setProfiles( List<Profile> profiles )
-        this.profiles = profiles;
+        getProfiles().clear();
+        getProfiles().addAll( profiles );
+        if ( pluginGroups == null )
+        {
+            pluginGroups = new ArrayList<String>();
+        }
+
-        this.pluginGroups = pluginGroups;
+        getPluginGroups().clear();
+        getPluginGroups().addAll( pluginGroups );
+
+        return this;
+    }
+
+    public MavenExecutionRequest addPluginGroup( String pluginGroup )
+    {
+        if ( !getPluginGroups().contains( pluginGroup ) )
+        {
+            getPluginGroups().add( pluginGroup );
+        }
+
+        return this;
+    }
+
+    public MavenExecutionRequest addPluginGroups( List<String> pluginGroups )
+    {
+        for ( String pluginGroup : pluginGroups )
+        {
+            addPluginGroup( pluginGroup );
+        }
-    private CoreErrorReporter errorReporter;
-
-    private ProfileActivationContext profileActivationContext;
-
-    public ProfileManager getProfileManager()
-    {
-        return profileManager;
-    }
-
-    public MavenExecutionRequest setProfileManager( ProfileManager profileManager )
-    {
-        this.profileManager = profileManager;
-
-        return this;
-    }
-
-        if ( remoteRepositories == null )
+        for ( ArtifactRepository repo : getRemoteRepositories() )
-            remoteRepositories = new ArrayList<ArtifactRepository>();
+            if ( repo.getId() != null && repo.getId().equals( repository.getId() ) )
+            {
+                return this;
+            }
-        remoteRepositories.add( repository );
+        getRemoteRepositories().add( repository );
+        if ( remoteRepositories == null )
+        {
+            remoteRepositories = new ArrayList<ArtifactRepository>();
+        }
-    public MavenExecutionRequest setRealmManager( MavenRealmManager realmManager )
-    {
-        this.realmManager = realmManager;
-        return this;
-    }
-
-    public MavenRealmManager getRealmManager()
-    {
-        return realmManager;
-    }
-
-    public MavenExecutionRequest clearAccumulatedBuildState()
-    {
-        realmManager.clear();
-
-        return this;
-    }
-
-    public CoreErrorReporter getErrorReporter()
-    {
-        return errorReporter;
-    }
-
-    public MavenExecutionRequest setErrorReporter( CoreErrorReporter reporter )
-    {
-        errorReporter = reporter;
-        return this;
-    }
-
-    public ProfileActivationContext getProfileActivationContext()
-    {
-        return profileActivationContext;
-    }
-
-    public MavenExecutionRequest setProfileActivationContext( ProfileActivationContext profileActivationContext )
-    {
-        this.profileActivationContext = profileActivationContext;
-        return this;
-    }
-
-    public Properties getUserProperties()
-    {
-        return userProperties;
-    }
-
-    public MavenExecutionRequest setUserProperties( Properties userProperties )
-    {
-        this.userProperties = userProperties;
-        return this;
-    }
-
+    //TODO: this does not belong here.
-            projectBuildingConfiguration.setGlobalProfileManager( getProfileManager() );
-            projectBuildingConfiguration.setUserProperties( getUserProperties() );
-            projectBuildingConfiguration.setBuildStartTime( getStartTime() );
+            projectBuildingConfiguration.setActiveProfileIds( getActiveProfiles() );
+            projectBuildingConfiguration.setInactiveProfileIds( getInactiveProfiles() );
+            projectBuildingConfiguration.setProfiles( getProfiles() );
+            projectBuildingConfiguration.setProcessPlugins( true );
+    
+    public MavenExecutionRequest addProfile( Profile profile )
+    {
+        if ( profile == null )
+        {
+            throw new IllegalArgumentException( "profile missing" );
+        }
+
+        for ( Profile p : getProfiles() )
+        {
+            if ( p.getId() != null && p.getId().equals( profile.getId() ) )
+            {
+                return this;
+            }
+        }
+
+        getProfiles().add( profile );
+
+        return this;
+    }
+
