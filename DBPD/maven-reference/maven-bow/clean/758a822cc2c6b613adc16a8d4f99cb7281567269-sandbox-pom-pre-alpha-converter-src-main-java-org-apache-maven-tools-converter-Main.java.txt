resources changes


git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163509 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.maven.model.Goal;
-import org.apache.maven.model.v4_0_0.Model;
-import org.apache.maven.model.v4_0_0.Plugin;
-import org.apache.maven.model.v4_0_0.PluginManagement;
+import org.apache.maven.model.v4_0_0.Model;
+import org.apache.maven.model.v4_0_0.Plugin;
+import org.apache.maven.model.v4_0_0.PluginManagement;
+import org.apache.maven.model.v4_0_0.UnitTest;
+import org.apache.maven.model.v4_0_0.Resource;
+import java.util.HashMap;
+import java.util.Map;
-        mgmt.setPlugins( convertPlugins( pluginManagement.getPlugins() ) );
+        mgmt.setPlugins( new ArrayList( convertPlugins( pluginManagement.getPlugins() ).values() ) );
-    private static List convertPlugins( List plugins )
+    private static Map convertPlugins( List plugins )
-        List newPlugins = new ArrayList();
+        Map newPlugins = new HashMap();
-            newPlugin.setArtifactId( plugin.getId() );
+            newPlugin.setArtifactId( "maven-" + plugin.getId() + "-plugin" );
-            newPlugins.add( newPlugin );
+            newPlugins.put( newPlugin.getArtifactId(), newPlugin );
-    private static org.apache.maven.model.Build convertBuild( Build build, List plugins )
+    private static org.apache.maven.model.Build convertBuild( Build build, Map plugins )
-        newBuild.setPlugins( plugins );
+        newBuild.setPlugins( new ArrayList( plugins.values() ) );
+        newBuild.setResources( convertResources( build.getResources() ) );
+
+        if ( build.getUnitTest() != null )
+        {
+            UnitTest unitTest = build.getUnitTest();
+            org.apache.maven.model.Plugin plugin = getPlugin( plugins, "maven-compiler-plugin" );
+            Goal goal = getGoal( plugin, "testCompile" );
+
+            goal.getConfiguration().setProperty( "includes", convertPatternSet( unitTest.getIncludes() ) );
+            goal.getConfiguration().setProperty( "excludes", convertPatternSet( unitTest.getExcludes() ) );
+
+            newBuild.setTestResources( convertResources( unitTest.getResources() ) );
+        }
+
+    private static List convertResources( List resources )
+    {
+        List newResources = new ArrayList();
+
+        for ( Iterator i = resources.iterator(); i.hasNext(); )
+        {
+            Resource resource = (Resource) i.next();
+
+            org.apache.maven.model.Resource newResource = new org.apache.maven.model.Resource();
+            newResource.setDirectory( resource.getDirectory() );
+            newResource.setIncludes( convertPatternSet( resource.getIncludes() ) );
+            newResource.setExcludes( convertPatternSet( resource.getExcludes() ) );
+
+            newResources.add( newResource );
+        }
+        return newResources;
+    }
+
+    private static String convertPatternSet( List list )
+    {
+        StringBuffer b = new StringBuffer();
+        for ( Iterator i = list.iterator(); i.hasNext(); )
+        {
+            String pattern = (String) i.next();
+            b.append( pattern );
+            if ( i.hasNext() )
+            {
+                b.append( "," );
+            }
+        }
+        return b.toString();
+    }
+
+    private static org.apache.maven.model.Plugin getPlugin( Map plugins, String artifactId )
+    {
+        org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) plugins.get( artifactId );
+        if ( plugin == null )
+        {
+            plugin = new org.apache.maven.model.Plugin();
+            plugin.setArtifactId( artifactId );
+            plugins.put( plugin.getArtifactId(), plugin );
+        }
+        return plugin;
+    }
+
+    private static Goal getGoal( org.apache.maven.model.Plugin plugin, String name )
+    {
+        Goal goal = null;
+        for ( Iterator i = plugin.getGoals().iterator(); i.hasNext() && goal == null; )
+        {
+            Goal g = (Goal) i.next();
+            if ( g.getId().equals( name ) )
+            {
+                goal = g;
+            }
+        }
+
+        if ( goal == null )
+        {
+            goal = new Goal();
+            goal.setId( name );
+            plugin.addGoal( goal );
+        }
+        return goal;
+    }
