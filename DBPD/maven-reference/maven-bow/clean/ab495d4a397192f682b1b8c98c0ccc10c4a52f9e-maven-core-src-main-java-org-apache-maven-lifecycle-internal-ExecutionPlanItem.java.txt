[MNG-4633] Changed to use nice clean countdownlatch instead of synchronized booleans

Also updated phase locking to only lock when project being built changes phase

git-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@939220 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.concurrent.atomic.AtomicBoolean;
+import java.util.concurrent.CountDownLatch;
-    private final AtomicBoolean complete = new AtomicBoolean( false );
-
-    private final Object monitor = new Object();
+    private final CountDownLatch done = new CountDownLatch( 1 );
-        boolean transitionSuccessful = ensureComplete();
-        if ( !transitionSuccessful )
-        {
-            throw new IllegalStateException( "Expected to be able to setComplete node, but was complete already" );
-        }
+        done.countDown();
-    public boolean ensureComplete()
+    public boolean isDone()
-        boolean f = complete.compareAndSet( false, true );
-        notifyListeners();
-        return f;
-    }
-
-    private void notifyListeners()
-    {
-        synchronized ( monitor )
-        {
-            monitor.notifyAll();
-        }
+        return done.getCount() < 1;
-        final boolean b = complete.getAndSet( true );
-        if ( !b )
-        {
-            notifyListeners();
-        } // Release anyone waiting for us
+        setComplete();
-        synchronized ( monitor )
-        {
-            while ( !complete.get() )
-            {
-                monitor.wait( 100 );
-            }
-        }
+        done.await();
