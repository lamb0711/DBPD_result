Cleaned up plugin descriptor generation/reading to be more consistent, and to include some things that were being left out. Removed more deprecated behavior from annotations support and expression support. Wrote up the first pass on the mojo api and annotations spec. Fixed the mmld-mojo suppport to accommodate the new expression syntax and collisions with the default expression evaluator for mmld. Added an exception to plugin configuration in DefaultPluginManager to not look for a Field when the configurator == map-oriented.

git-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168233 13f79535-47bb-0310-9956-ffa450edef68

-            element( w, "isolatedRealm", "true" );
-
-            w.startElement( "mojos" );
+             w.startElement( "mojos" );
+        element( w, "requiresProject", "" + mojoDescriptor.getRequiresProject() );
+
+        // ----------------------------------------------------------------------
+        //
+        // ----------------------------------------------------------------------
+
+        element( w, "requiresOnline", "" + mojoDescriptor.requiresOnline() );
+
+        // ----------------------------------------------------------------------
+        //
+        // ----------------------------------------------------------------------
+
+        if ( mojoDescriptor.getComponentComposer() != null )
+        {
+            w.startElement( "composer" );
+
+            w.writeText( mojoDescriptor.getComponentComposer() );
+
+            w.endElement();
+        }
+
+        // ----------------------------------------------------------------------
+        //
+        // ----------------------------------------------------------------------
+
-            if ( StringUtils.isNotEmpty( expression ) &&
-                ( expression.startsWith( "${component." ) || expression.startsWith( "#component." ) ) )
+            if ( StringUtils.isNotEmpty( expression ) && expression.startsWith( "${component." ) )
-                if ( StringUtils.isEmpty( expression ) )
-                {
-                    expression = parameter.getDefaultValue();
-                }
-
-                String role;
-                if ( expression.startsWith( "${" ) )
-                {
-                    role = expression.substring( "${component.".length(), expression.length() - 1 );
-                }
-                else
-                {
-                    role = expression.substring( "#component.".length() );
-                }
+                String role = expression.substring( "${component.".length(), expression.length() - 1 );
+
