HADOOP-7223. FileContext createFlag combinations are not clearly defined. Contributed by Suresh Srinivas.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1092565 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.util.EnumSet;
+
+import org.apache.hadoop.HadoopIllegalArgumentException;
- *CreateFlag specifies the file create semantic. Users can combine flags like:<br>
- *<code>
+ * CreateFlag specifies the file create semantic. Users can combine flags like: <br>
+ * <code>
- * and pass it to {@link org.apache.hadoop.fs.FileSystem #create(Path f, FsPermission permission,
- * EnumSet<CreateFlag> flag, int bufferSize, short replication, long blockSize,
- * Progressable progress)}.
- * 
- * Combine {@link #OVERWRITE} with either {@link #CREATE} 
- * or {@link #APPEND} does the same as only use 
- * {@link #OVERWRITE}. <br>
- * Combine {@link #CREATE} with {@link #APPEND} has the semantic:
+ * 
+ * Use the CreateFlag as follows:
- * <li> create the file if it does not exist;
- * <li> append the file if it already exists.
+ * <li> CREATE - to create a file if it does not exist, 
+ * else throw FileAlreadyExists.</li>
+ * <li> APPEND - to append to a file if it exists, 
+ * else throw FileNotFoundException.</li>
+ * <li> OVERWRITE - to truncate a file if it exists, 
+ * else throw FileNotFoundException.</li>
+ * <li> CREATE|APPEND - to create a file if it does not exist, 
+ * else append to an existing file.</li>
+ * <li> CREATE|OVERWRITE - to create a file if it does not exist, 
+ * else overwrite an existing file.</li>
+ * </ol>
+ * 
+ * Following combination is not valid and will result in 
+ * {@link HadoopIllegalArgumentException}:
+ * <ol>
+ * <li> APPEND|OVERWRITE</li>
+ * <li> CREATE|APPEND|OVERWRITE</li>
-@InterfaceStability.Stable
+@InterfaceStability.Evolving
-   * create the file if it does not exist, and throw an IOException if it
+   * Create a file. See javadoc for more description
-   * create the file if it does not exist, if it exists, overwrite it.
+   * Truncate/overwrite a file. Same as POSIX O_TRUNC. See javadoc for description.
-   * append to a file, and throw an IOException if it does not exist
+   * Append to a file. See javadoc for more description.
-  private short mode;
+  private final short mode;
+  
+  /**
+   * Validate the CreateFlag and throw exception if it is invalid
+   * @param flag set of CreateFlag
+   * @throws HadoopIllegalArgumentException if the CreateFlag is invalid
+   */
+  public static void validate(EnumSet<CreateFlag> flag) {
+    if (flag == null || flag.isEmpty()) {
+      throw new HadoopIllegalArgumentException(flag
+          + " does not specify any options");
+    }
+    final boolean append = flag.contains(APPEND);
+    final boolean overwrite = flag.contains(OVERWRITE);
+    
+    // Both append and overwrite is an error
+    if (append && overwrite) {
+      throw new HadoopIllegalArgumentException(
+          flag + "Both append and overwrite options cannot be enabled.");
+    }
+  }
+  
+  /**
+   * Validate the CreateFlag for create operation
+   * @param path Object representing the path; usually String or {@link Path}
+   * @param pathExists pass true if the path exists in the file system
+   * @param flag set of CreateFlag
+   * @throws IOException on error
+   * @throws HadoopIllegalArgumentException if the CreateFlag is invalid
+   */
+  public static void validate(Object path, boolean pathExists,
+      EnumSet<CreateFlag> flag) throws IOException {
+    validate(flag);
+    final boolean append = flag.contains(APPEND);
+    final boolean overwrite = flag.contains(OVERWRITE);
+    if (pathExists) {
+      if (!(append || overwrite)) {
+        throw new FileAlreadyExistsException("File already exists: "
+            + path.toString()
+            + ". Append or overwrite option must be specified in " + flag);
+      }
+    } else if (!flag.contains(CREATE)) {
+      throw new FileNotFoundException("Non existing file: " + path.toString()
+          + ". Create option is not specified in " + flag);
+    }
+  }

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS31 UPD40 INS83 INS29 INS83 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 UPD66 UPD66 UPD66 MOV66 UPD66 MOV66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS66 INS66 UPD66 UPD66 UPD66 UPD66 INS65 INS65 INS65 INS74 INS42 INS25 INS60 INS60 INS25 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS39 INS42 INS74 INS42 INS42 INS21 INS60 INS60 INS25 INS42 UPD66 UPD66 UPD66 INS66 INS42 INS66 INS42 INS66 INS43 INS43 INS27 INS8 INS83 INS39 INS59 INS83 INS39 INS59 INS27 INS8 INS66 INS42 INS66 INS65 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS43 INS43 INS32 INS83 INS39 INS59 INS83 INS39 INS59 INS42 INS8 INS25 INS42 INS42 INS27 INS32 INS53 INS42 INS32 INS42 INS32 INS42 INS42 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS25 INS38 INS8 INS42 INS33 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS38 INS8 INS32 INS53 INS43 INS27 INS43 INS27 INS36 INS53 INS42 INS42 INS42 INS14 INS42 INS42 INS45 INS42 INS42 INS45 INS27 INS14 INS43 INS27 INS42 INS42 INS43 INS27 INS42 INS45 INS32 INS45 INS42 INS42 INS45 INS32 INS45 INS42 INS42 INS42 INS42 INS42 DEL65 DEL42 DEL67 DEL65 DEL42 DEL67 DEL65 DEL42 DEL67 DEL65 DEL42 DEL67 DEL65 DEL42 DEL67 DEL65 DEL42 DEL67