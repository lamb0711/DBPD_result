HADOOP-7469 Add a standard handler for socket connection problems

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177645 13f79535-47bb-0310-9956-ffa450edef68

-import java.net.ConnectException;
-
-        throw new UnknownHostException("unknown host: " + 
-                                       remoteId.getAddress().getHostName());
+        throw NetUtils.wrapException(remoteId.getAddress().getHostName(),
+            remoteId.getAddress().getPort(),
+            null,
+            0,
+            new UnknownHostException());
-          throw wrapException(remoteId.getAddress(), call.error);
+          InetSocketAddress address = remoteId.getAddress();
+          throw NetUtils.wrapException(address.getHostName(),
+                  address.getPort(),
+                  NetUtils.getHostname(),
+                  0,
+                  call.error);
-   * Take an IOException and the address we were trying to connect to
-   * and return an IOException with the input exception as the cause.
-   * The new exception provides the stack trace of the place where 
-   * the exception is thrown and some extra diagnostics information.
-   * If the exception is ConnectException or SocketTimeoutException, 
-   * return a new one of the same type; Otherwise return an IOException.
-   * 
-   * @param addr target address
-   * @param exception the relevant exception
-   * @return an exception to throw
-   */
-  private IOException wrapException(InetSocketAddress addr,
-                                         IOException exception) {
-    if (exception instanceof ConnectException) {
-      //connection refused; include the host:port in the error
-      return (ConnectException)new ConnectException(
-           "Call to " + addr + " failed on connection exception: " + exception)
-                    .initCause(exception);
-    } else if (exception instanceof SocketTimeoutException) {
-      return (SocketTimeoutException)new SocketTimeoutException(
-           "Call to " + addr + " failed on socket timeout exception: "
-                      + exception).initCause(exception);
-    } else {
-      return (IOException)new IOException(
-           "Call to " + addr + " failed on local exception: " + exception)
-                                 .initCause(exception);
-
-    }
-  }
-
-  /** 

INS32 INS42 INS42 MOV32 INS32 INS33 INS34 INS14 INS32 INS42 MOV43 INS60 INS42 INS42 MOV43 INS59 INS42 MOV32 INS42 INS32 INS32 INS32 INS34 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL45 DEL27 DEL14 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL43 DEL45 DEL42 DEL45 DEL42 DEL27 DEL14 DEL42 DEL42 DEL32 DEL11 DEL41 DEL8 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL43 DEL45 DEL42 DEL45 DEL42 DEL27 DEL14 DEL42 DEL42 DEL32 DEL11 DEL41 DEL8 DEL42 DEL43 DEL42 DEL43 DEL45 DEL42 DEL45 DEL42 DEL27 DEL14 DEL42 DEL42 DEL32 DEL11 DEL41 DEL8 DEL25 DEL25 DEL8 DEL31