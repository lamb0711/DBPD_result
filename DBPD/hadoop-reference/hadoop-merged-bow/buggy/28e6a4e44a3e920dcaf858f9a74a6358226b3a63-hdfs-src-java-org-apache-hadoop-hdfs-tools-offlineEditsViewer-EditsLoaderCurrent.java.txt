HDFS-1073. Redesign the NameNode's storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.EOFException;
-      -25, -26, -27, -28, -30, -31, -32, -33, -34, -35, -36 };
+      -25, -26, -27, -28, -30, -31, -32, -33, -34, -35, -36, -37, -38};
+   * Visit a transaction ID, if the log version supports it.
+   */
+  private void visitTxId() throws IOException {
+    if (LayoutVersion.supports(Feature.STORED_TXIDS, editsVersion)) {
+      v.visitLong(EditsElement.TRANSACTION_ID);
+    }
+  }
+  
+  /**
-    ; // nothing to do, this op code has no data
+    visitTxId();
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+    
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+    
+    visitTxId();
+
+  /**
+   * Visit OP_BEGIN_LOG_SEGMENT
+   */
+  private void visit_OP_BEGIN_LOG_SEGMENT()
+    throws IOException {
+    visitTxId();
+  }
+  
+  /**
+   * Visit OP_END_LOG_SEGMENT
+   */
+  private void visit_OP_END_LOG_SEGMENT()
+    throws IOException {
+    visitTxId();
+  }
+
+      case OP_END_LOG_SEGMENT: // 23
+        visit_OP_END_LOG_SEGMENT();
+        break;        
+      case OP_START_LOG_SEGMENT: // 24
+        visit_OP_BEGIN_LOG_SEGMENT();
+        break;
-        ByteToken opCodeToken = v.visitByte(EditsElement.OPCODE);
+        ByteToken opCodeToken;
+        try {
+          opCodeToken = v.visitByte(EditsElement.OPCODE);
+        } catch (EOFException eof) {
+          // Getting EOF when reading the opcode is fine --
+          // it's just a finalized edits file
+          // Just fake the OP_INVALID here.
+          opCodeToken = new ByteToken(EditsElement.OPCODE);
+          opCodeToken.fromByte(FSEditLogOpCodes.OP_INVALID.getOpCode());
+          v.visit(opCodeToken);
+        }

INS26 MOV31 MOV31 MOV31 INS40 INS31 INS31 INS31 INS31 INS29 UPD42 INS43 INS8 MOV29 UPD42 MOV43 MOV8 MOV29 UPD42 MOV43 MOV29 MOV83 MOV39 MOV42 MOV43 INS8 MOV29 INS83 INS39 INS42 MOV43 MOV8 MOV29 UPD42 MOV43 MOV29 UPD42 MOV43 MOV29 UPD42 MOV43 MOV21 INS29 INS83 INS39 INS42 INS43 INS8 INS29 INS83 INS39 INS42 INS43 INS8 INS65 INS42 INS25 INS21 INS21 MOV21 MOV21 MOV21 INS21 INS21 INS21 MOV21 MOV21 MOV21 MOV21 MOV21 INS21 INS21 INS21 INS21 MOV21 MOV21 MOV21 MOV21 MOV21 INS21 INS21 INS21 INS21 INS21 MOV21 MOV21 INS21 INS21 INS21 INS21 MOV21 INS21 INS21 INS21 MOV21 INS65 INS42 MOV21 INS65 INS42 MOV21 INS38 INS38 INS66 INS32 INS8 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS66 INS66 INS21 INS10 INS49 INS21 INS10 INS49 INS34 INS34 UPD42 MOV42 UPD42 MOV42 UPD40 MOV40 INS42 MOV21 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS40 INS42 MOV42 INS42 MOV40 UPD42 UPD42 INS42 MOV42 INS42 MOV40 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 MOV42 INS42 MOV40 MOV42 INS42 MOV40 MOV42 INS42 MOV40 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS42 INS32 INS42 INS32 INS42 INS42 MOV21 MOV25 UPD42 UPD40 INS54 INS8 INS12 INS21 INS44 INS8 INS7 INS43 INS42 INS21 INS21 INS21 INS42 MOV32 INS42 INS7 INS32 INS32 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS40 INS40 INS42 INS42 DEL20 DEL8 DEL31