HADOOP-12292. Make use of DeleteObjects optional.  (Thomas Demoor via stevel)

+import com.amazonaws.services.s3.model.DeleteObjectRequest;
+  private boolean enableMultiObjectsDelete;
+    enableMultiObjectsDelete = conf.getBoolean(ENABLE_MULTI_DELETE, true);
-            DeleteObjectsRequest deleteRequest =
-                new DeleteObjectsRequest(bucket).withKeys(keysToDelete);
-            s3.deleteObjects(deleteRequest);
-            statistics.incrementWriteOps(1);
-            keysToDelete.clear();
+            removeKeys(keysToDelete, true);
-          if (keysToDelete.size() > 0) {
-            DeleteObjectsRequest deleteRequest =
-                new DeleteObjectsRequest(bucket).withKeys(keysToDelete);
-            s3.deleteObjects(deleteRequest);
-            statistics.incrementWriteOps(1);
+          if (!keysToDelete.isEmpty()) {
+            removeKeys(keysToDelete, false);
+  /**
+   * A helper method to delete a list of keys on a s3-backend.
+   *
+   * @param keysToDelete collection of keys to delete on the s3-backend
+   * @param clearKeys clears the keysToDelete-list after processing the list
+   *            when set to true
+   */
+  private void removeKeys(List<DeleteObjectsRequest.KeyVersion> keysToDelete,
+          boolean clearKeys) {
+    if (enableMultiObjectsDelete) {
+      DeleteObjectsRequest deleteRequest
+          = new DeleteObjectsRequest(bucket).withKeys(keysToDelete);
+      s3.deleteObjects(deleteRequest);
+      statistics.incrementWriteOps(1);
+    } else {
+      int writeops = 0;
+
+      for (DeleteObjectsRequest.KeyVersion keyVersion : keysToDelete) {
+        s3.deleteObject(
+            new DeleteObjectRequest(bucket, keyVersion.getKey()));
+        writeops++;
+      }
+
+      statistics.incrementWriteOps(writeops);
+    }
+    if (clearKeys) {
+      keysToDelete.clear();
+    }
+  }
+
-              DeleteObjectsRequest deleteRequest =
-                  new DeleteObjectsRequest(bucket).withKeys(keys);
-              s3.deleteObjects(deleteRequest);
-              statistics.incrementWriteOps(1);
-              keys.clear();
+              removeKeys(keys, true);
-              DeleteObjectsRequest deleteRequest =
-                  new DeleteObjectsRequest(bucket).withKeys(keys);
-              s3.deleteObjects(deleteRequest);
-              statistics.incrementWriteOps(1);
+              removeKeys(keys, false);

INS26 INS40 INS23 INS31 INS83 INS39 INS59 INS29 INS83 INS39 INS42 INS44 INS44 MOV8 INS42 INS21 INS65 INS65 INS65 INS74 INS42 INS39 INS42 INS25 INS7 INS66 INS42 INS66 INS42 INS66 INS66 INS43 INS43 INS42 INS8 INS42 INS8 INS42 INS32 INS42 INS40 INS60 INS70 INS21 MOV21 INS42 INS42 INS42 INS9 INS39 INS59 INS44 INS42 INS8 INS32 INS25 INS42 INS34 INS43 INS42 INS21 INS21 INS42 INS42 INS42 MOV32 MOV8 INS8 INS40 INS32 INS37 MOV25 INS10 INS42 INS42 INS14 INS42 INS38 INS8 INS43 INS42 INS32 INS21 INS32 INS21 INS42 INS42 INS42 INS32 INS42 INS42 INS32 UPD42 MOV42 MOV42 INS9 INS42 INS42 INS9 INS21 INS21 INS32 INS32 UPD42 MOV42 MOV42 INS9 UPD42 MOV42 MOV42 INS9 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL21 DEL42 DEL42 DEL32 DEL34 DEL27 DEL10 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL21