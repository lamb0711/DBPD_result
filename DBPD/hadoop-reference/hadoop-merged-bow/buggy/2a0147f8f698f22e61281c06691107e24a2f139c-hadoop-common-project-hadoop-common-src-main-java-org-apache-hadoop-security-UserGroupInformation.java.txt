HADOOP-6941. Adds support for building Hadoop with IBM's JDK. Contributed by Stephen Watt, Eli Collins and Devaraj Das.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1301308 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.security.authentication.util.KerberosUtil;
-import com.sun.security.auth.NTUserPrincipal;
-import com.sun.security.auth.UnixPrincipal;
-import com.sun.security.auth.module.Krb5LoginModule;
-
-  private static final String OS_LOGIN_MODULE_NAME;
-  private static final Class<? extends Principal> OS_PRINCIPAL_CLASS;
+  private static String OS_LOGIN_MODULE_NAME;
+  private static Class<? extends Principal> OS_PRINCIPAL_CLASS;
-  static {
-    if (windows) {
-      OS_LOGIN_MODULE_NAME = "com.sun.security.auth.module.NTLoginModule";
-      OS_PRINCIPAL_CLASS = NTUserPrincipal.class;
+  /* Return the OS login module class name */
+  private static String getOSLoginModuleName() {
+    if (System.getProperty("java.vendor").contains("IBM")) {
+      return windows ? "com.ibm.security.auth.module.NTLoginModule"
+       : "com.ibm.security.auth.module.LinuxLoginModule";
-      OS_LOGIN_MODULE_NAME = "com.sun.security.auth.module.UnixLoginModule";
-      OS_PRINCIPAL_CLASS = UnixPrincipal.class;
+      return windows ? "com.sun.security.auth.module.NTLoginModule"
+        : "com.sun.security.auth.module.UnixLoginModule";
-  
+
+  /* Return the OS principal class */
+  @SuppressWarnings("unchecked")
+  private static Class<? extends Principal> getOsPrincipalClass() {
+    ClassLoader cl = ClassLoader.getSystemClassLoader();
+    try {
+      if (System.getProperty("java.vendor").contains("IBM")) {
+        if (windows) {
+          return (Class<? extends Principal>)
+            cl.loadClass("com.ibm.security.auth.UsernamePrincipal");
+        } else {
+          return (Class<? extends Principal>)
+            (System.getProperty("os.arch").contains("64")
+             ? cl.loadClass("com.ibm.security.auth.UsernamePrincipal")
+             : cl.loadClass("com.ibm.security.auth.LinuxPrincipal"));
+        }
+      } else {
+        return (Class<? extends Principal>) (windows
+           ? cl.loadClass("com.sun.security.auth.NTUserPrincipal")
+           : cl.loadClass("com.sun.security.auth.UnixPrincipal"));
+      }
+    } catch (ClassNotFoundException e) {
+      LOG.error("Unable to find JAAS classes:" + e.getMessage());
+    }
+    return null;
+  }
+  static {
+    OS_LOGIN_MODULE_NAME = getOSLoginModuleName();
+    OS_PRINCIPAL_CLASS = getOsPrincipalClass();
+  }
+
-      new AppConfigurationEntry(Krb5LoginModule.class.getName(),
+      new AppConfigurationEntry(KerberosUtil.getKrb5LoginModuleName(),
-      new AppConfigurationEntry(Krb5LoginModule.class.getName(),
+      new AppConfigurationEntry(KerberosUtil.getKrb5LoginModuleName(),

MOV26 UPD40 INS31 INS31 INS28 INS83 INS83 INS43 INS42 INS8 INS79 INS83 INS83 INS74 INS42 INS8 INS83 INS8 INS42 INS25 INS42 INS45 INS43 INS76 INS60 INS54 INS41 MOV21 MOV21 MOV43 MOV43 INS32 INS8 INS8 INS42 INS43 INS43 INS59 INS8 INS12 INS33 INS32 INS42 INS45 INS41 INS41 INS42 INS42 INS42 INS32 INS25 INS44 INS8 INS32 INS32 MOV43 MOV43 INS42 INS42 INS45 INS16 INS16 INS42 INS42 INS32 INS8 INS8 INS43 INS42 INS21 INS42 INS42 INS42 UPD42 INS42 UPD42 INS42 INS45 INS45 INS42 INS45 INS45 INS32 INS42 INS45 INS25 INS41 INS42 INS32 INS42 INS42 INS45 INS42 INS8 INS8 INS11 INS42 INS42 INS27 INS41 INS41 INS74 INS36 INS45 INS32 INS11 INS11 INS43 INS76 INS16 INS42 INS42 INS74 INS32 INS74 INS36 INS42 INS43 INS42 INS32 INS32 INS43 INS76 INS42 INS42 INS45 INS43 INS76 INS16 UPD42 MOV42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS43 INS42 INS43 INS32 INS32 INS32 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL45 DEL42 DEL43 DEL57 DEL83 DEL42 DEL42 DEL45 DEL7 DEL21 DEL42 DEL43 DEL57 DEL7 DEL21 DEL8 DEL8 DEL25 DEL8 DEL28 DEL42 DEL43 DEL57 DEL42 DEL43 DEL57