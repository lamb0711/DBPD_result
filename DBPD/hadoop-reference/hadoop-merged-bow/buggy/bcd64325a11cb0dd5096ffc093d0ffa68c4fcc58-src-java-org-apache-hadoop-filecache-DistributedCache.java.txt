Merged src/core, src/test/core, src/contrib/eclipse-plugin, and
src/contrib/ec2 from trunk 776174:784663


git-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@784965 13f79535-47bb-0310-9956-ffa450edef68

- * <p>Applications specify the files, via urls (hdfs:// or http://) to be 
- * cached via the org.apache.hadoop.mapred.JobConf.
- * The <code>DistributedCache</code> assumes that the
- * files specified via hdfs:// urls are already present on the 
- * {@link FileSystem} at the path specified by the url.</p>
+ * <p>Applications specify the files, via urls (hdfs:// or http://) to be cached 
+ * via the org.apache.hadoop.mapred.JobConf. The
+ * <code>DistributedCache</code> assumes that the files specified via urls are
+ * already present on the {@link FileSystem} at the path specified by the url
+ * and are accessible by every machine in the cluster.</p>
-   * new URI(hdfs://hostname:port/absolute_path_to_file#LINKNAME). If no schema 
-   * or hostname:port is provided the file is assumed to be in the filesystem
-   * being used in the Configuration
+   * new URI(scheme://scheme-specific-part/absolute_path_to_file#LINKNAME).
-   * new URI(hdfs://hostname:port/absolute_path_to_file#LINKNAME). If no schema 
-   * or hostname:port is provided the file is assumed to be in the filesystem
-   * being used in the Configuration
+   * new URI(scheme://scheme-specific-part/absolute_path_to_file#LINKNAME).
-   * new URI(hdfs://hostname:port/absolute_path_to_file#LINKNAME). If no schema 
-   * or hostname:port is provided the file is assumed to be in the filesystem
-   * being used in the Configuration
+   * new URI(scheme://scheme-specific-part/absolute_path_to_file#LINKNAME).
-    FileSystem fs = getFileSystem(cache, conf);
+    FileSystem fs = FileSystem.get(cache, conf);
-  private static FileSystem getFileSystem(URI cache, Configuration conf)
-    throws IOException {
-    if ("hdfs".equals(cache.getScheme()))
-      return FileSystem.get(cache, conf);
-    else
-      return FileSystem.get(conf);
-  }
-
-             : classpath + System.getProperty("path.separator") + file.toString());
+             : classpath + "," + file.toString());
-    String classpath = conf.get("mapred.job.classpath.files");
-    if (classpath == null)
-      return null;
-    ArrayList list = Collections.list(new StringTokenizer(classpath, System
-                                                          .getProperty("path.separator")));
+    ArrayList<String> list = (ArrayList<String>)conf.getStringCollection(
+                                "mapred.job.classpath.files");
+    if (list.size() == 0) { 
+      return null; 
+    }
-      paths[i] = new Path((String) list.get(i));
+      paths[i] = new Path(list.get(i));
-             .toString() : classpath + System.getProperty("path.separator")
-             + archive.toString());
+             .toString() : classpath + "," + archive.toString());
-    String classpath = conf.get("mapred.job.classpath.archives");
-    if (classpath == null)
-      return null;
-    ArrayList list = Collections.list(new StringTokenizer(classpath, System
-                                                          .getProperty("path.separator")));
+    ArrayList<String> list = (ArrayList<String>)conf.getStringCollection(
+                                "mapred.job.classpath.archives");
+    if (list.size() == 0) { 
+      return null; 
+    }
-      paths[i] = new Path((String) list.get(i));
+      paths[i] = new Path(list.get(i));

UPD66 UPD66 UPD66 UPD66 UPD66 INS66 INS25 INS25 UPD66 UPD66 UPD66 MOV43 INS74 INS27 INS8 INS74 INS27 INS8 MOV32 INS43 INS43 UPD42 INS11 INS32 INS34 MOV41 INS43 MOV43 UPD42 INS11 INS32 INS34 MOV41 MOV42 INS42 MOV42 INS74 INS32 MOV42 INS42 UPD42 MOV42 INS74 INS32 MOV42 INS42 INS45 MOV43 INS43 MOV42 UPD42 MOV42 MOV45 INS45 MOV43 MOV43 MOV42 UPD42 MOV42 MOV45 INS42 MOV32 MOV32 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL83 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL42 DEL42 DEL32 DEL32 DEL41 DEL42 DEL42 DEL42 DEL32 DEL41 DEL25 DEL8 DEL31 DEL42 DEL42 DEL45 DEL32 DEL43 DEL32 DEL42 DEL33 DEL27 DEL25 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL14 DEL32 DEL59 DEL60 DEL11 DEL42 DEL42 DEL45 DEL32 DEL43 DEL32 DEL42 DEL33 DEL27 DEL25 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL14 DEL32 DEL59 DEL60 DEL11