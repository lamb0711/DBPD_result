HADOOP-8726. The Secrets in Credentials are not available to MR tasks (daryn and Benoy Antony via bobby)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1379100 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.ArrayList;
-          cred.addTokensToUGI(loginUser);
+          loginUser.addCredentials(cred);
-
-  // wrapper to retain the creds key for the token
-  private class NamedToken {
-    Text alias;
-    Token<? extends TokenIdentifier> token;
-    NamedToken(Text alias, Token<? extends TokenIdentifier> token) {
-      this.alias = alias;
-      this.token = token;
-    }
-    @Override
-    public boolean equals(Object o) {
-      boolean equals;
-      if (o == this) {
-        equals = true;
-      } else if (!(o instanceof NamedToken)) {
-        equals = false;
-      } else {
-        Text otherAlias = ((NamedToken)o).alias;
-        if (alias == otherAlias) {
-          equals = true;
-        } else {
-          equals = (otherAlias != null && otherAlias.equals(alias));
-        }
-      }
-      return equals;
-    }
-    @Override
-    public int hashCode() {
-      return (alias != null) ? alias.hashCode() : -1; 
-    }
-    @Override
-    public String toString() {
-      return "NamedToken: alias="+alias+" token="+token;
-    }
-  }
-    return addToken(token.getService(), token);
+    return (token != null) ? addToken(token.getService(), token) : false;
-    NamedToken namedToken = new NamedToken(alias, token);
-    Collection<Object> ugiCreds = subject.getPrivateCredentials();
-    ugiCreds.remove(namedToken); // allow token to be replaced
-    return ugiCreds.add(new NamedToken(alias, token));
+    getCredentialsInternal().addToken(alias, token);
+    return true;
-    return Collections.unmodifiableList(
-        new ArrayList<Token<?>>(getCredentials().getAllTokens()));
+    return Collections.unmodifiableCollection(
+        getCredentialsInternal().getAllTokens());
-    final Credentials credentials = new Credentials();
-    final Set<NamedToken> namedTokens =
-        subject.getPrivateCredentials(NamedToken.class);
-    for (final NamedToken namedToken : namedTokens) {
-      credentials.addToken(namedToken.alias, namedToken.token);
+    return new Credentials(getCredentialsInternal());
+  }
+  
+  /**
+   * Add the given Credentials to this user.
+   * @param credentials of tokens and secrets
+   */
+  public synchronized void addCredentials(Credentials credentials) {
+    getCredentialsInternal().addAll(credentials);
+  }
+
+  private synchronized Credentials getCredentialsInternal() {
+    final Credentials credentials;
+    final Set<Credentials> credentialsSet =
+      subject.getPrivateCredentials(Credentials.class);
+    if (!credentialsSet.isEmpty()){
+      credentials = credentialsSet.iterator().next();
+    } else {
+      credentials = new Credentials();
+      subject.getPrivateCredentials().add(credentials);

MOV31 MOV31 INS31 MOV29 INS83 INS42 MOV44 MOV44 INS8 MOV29 INS83 MOV43 UPD42 INS29 MOV83 MOV83 UPD39 MOV39 UPD42 MOV42 INS44 INS8 UPD83 MOV43 UPD42 INS21 INS41 INS65 INS65 INS43 INS42 MOV21 INS25 INS16 INS32 INS9 INS14 INS66 INS42 INS66 UPD42 MOV42 INS43 UPD74 INS38 INS8 INS8 INS36 MOV32 INS9 INS32 INS42 INS42 INS42 UPD42 INS32 INS43 INS32 INS32 UPD42 UPD42 INS42 UPD43 UPD42 INS32 INS21 INS21 MOV21 INS27 INS42 MOV32 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 INS42 INS42 INS7 INS7 INS42 INS33 UPD42 UPD43 INS42 INS32 INS42 MOV14 MOV32 INS42 UPD42 INS32 INS42 INS42 INS42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL83 DEL42 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL42 DEL59 DEL23 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL45 DEL42 DEL45 DEL42 DEL27 DEL41 DEL8 DEL31 DEL55 DEL42 DEL78 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL59 DEL60 DEL42 DEL52 DEL27 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL43 DEL62 DEL36 DEL38 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL22 DEL59 DEL60 DEL42 DEL42 DEL27 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL27 DEL36 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL25 DEL42 DEL41 DEL8 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL59 DEL60 DEL43 DEL42 DEL43 DEL74 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL32 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL74 DEL32 DEL14 DEL42 DEL78 DEL39 DEL42 DEL33 DEL27 DEL36 DEL42 DEL32 DEL34 DEL38 DEL16 DEL42 DEL40 DEL40 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL8 DEL70