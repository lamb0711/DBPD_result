HDFS-5889. When starting rolling upgrade, create a fs image for rollback so that the standby namenode can create checkpoints during upgrade.  Contributed by szetszwo & jing9


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1567861 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.common.HdfsServerConstants.RollingUpgradeStartupOption;
-    FSImageStorageInspector inspector = storage.readAndInspectDirs();
-    FSImageFile imageFile = null;
-    
+    final NameNodeFile nnf;
+    if (startOpt == StartupOption.ROLLINGUPGRADE
+        && startOpt.getRollingUpgradeStartupOption()
+              == RollingUpgradeStartupOption.ROLLBACK) {
+      nnf = NameNodeFile.IMAGE_ROLLBACK;
+    } else {
+      nnf = NameNodeFile.IMAGE; 
+    }
+    final FSImageStorageInspector inspector = storage.readAndInspectDirs(nnf);
+
+    FSImageFile imageFile = null;
-    saveNamespace(source, null);
+    saveNamespace(source, NameNodeFile.IMAGE, null);
-      Canceler canceler) throws IOException {
+      NameNodeFile nnf, Canceler canceler) throws IOException {
-      saveFSImageInAllDirs(source, imageTxId, canceler);
+      saveFSImageInAllDirs(source, nnf, imageTxId, canceler);
-    saveFSImageInAllDirs(source, txid, null);
+    saveFSImageInAllDirs(source, NameNodeFile.IMAGE, txid, null);
-  protected synchronized void saveFSImageInAllDirs(FSNamesystem source, long txid,
-      Canceler canceler)
-      throws IOException {    
+  private synchronized void saveFSImageInAllDirs(FSNamesystem source,
+      NameNodeFile nnf, long txid, Canceler canceler) throws IOException {
-      renameCheckpoint(txid);
+      renameCheckpoint(txid, NameNodeFile.IMAGE_NEW, nnf);
-      purgeOldStorage();
+      purgeOldStorage(nnf);
-  public void purgeOldStorage() {
+  void purgeOldStorage(NameNodeFile nnf) {
-      archivalManager.purgeOldStorage();
+      archivalManager.purgeOldStorage(nnf);
-      LOG.warn("Unable to purge old storage", e);
+      LOG.warn("Unable to purge old storage " + nnf.getName(), e);
+    }
+  }
+
+  /**
+   * Purge all the checkpoints with the name style.
+   */
+  void purgeCheckpoints(NameNodeFile nnf) {
+    try {
+      archivalManager.purgeCheckpoints(nnf);
+    } catch (Exception e) {
+      LOG.warn("Unable to purge checkpoints with name " + nnf.getName(), e);
-  private void renameCheckpoint(long txid) throws IOException {
+  private void renameCheckpoint(long txid, NameNodeFile fromNnf,
+      NameNodeFile toNnf) throws IOException {
-        renameCheckpointInDir(sd, txid);
+        renameImageFileInDir(sd, fromNnf, toNnf, txid);
-
-  private void renameCheckpointInDir(StorageDirectory sd, long txid)
-      throws IOException {
-    File ckpt = NNStorage.getStorageFile(sd, NameNodeFile.IMAGE_NEW, txid);
-    File curFile = NNStorage.getStorageFile(sd, NameNodeFile.IMAGE, txid);
+  private void renameImageFileInDir(StorageDirectory sd,
+      NameNodeFile fromNnf, NameNodeFile toNnf, long txid) throws IOException {
+    final File fromFile = NNStorage.getStorageFile(sd, fromNnf, txid);
+    final File toFile = NNStorage.getStorageFile(sd, toNnf, txid);
-      LOG.debug("renaming  " + ckpt.getAbsolutePath() 
-                + " to " + curFile.getAbsolutePath());
+      LOG.debug("renaming  " + fromFile.getAbsolutePath() 
+                + " to " + toFile.getAbsolutePath());
-    if (!ckpt.renameTo(curFile)) {
-      if (!curFile.delete() || !ckpt.renameTo(curFile)) {
-        throw new IOException("renaming  " + ckpt.getAbsolutePath() + " to "  + 
-            curFile.getAbsolutePath() + " FAILED");
+    if (!fromFile.renameTo(toFile)) {
+      if (!toFile.delete() || !fromFile.renameTo(toFile)) {
+        throw new IOException("renaming  " + fromFile.getAbsolutePath() + " to "  + 
+            toFile.getAbsolutePath() + " FAILED");
-    renameCheckpoint(txid);
+    renameCheckpoint(txid, NameNodeFile.IMAGE_NEW, NameNodeFile.IMAGE);

INS26 INS40 INS31 MOV60 INS44 UPD83 INS44 INS44 INS29 INS39 INS42 INS44 INS8 INS44 INS44 UPD42 INS44 INS44 INS60 INS25 INS43 INS42 INS43 INS42 INS43 INS42 INS65 INS43 INS42 INS54 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS83 INS43 INS59 INS27 INS8 INS8 INS83 INS42 INS42 INS42 INS66 INS42 INS8 INS12 INS42 INS42 INS42 INS42 INS83 MOV43 INS83 MOV43 INS42 INS42 INS27 INS27 INS21 INS21 INS40 INS40 INS21 INS44 INS8 UPD42 UPD42 INS40 INS40 INS42 INS40 INS32 INS40 INS7 INS7 INS42 INS32 INS43 INS42 INS21 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS27 INS42 INS42 INS27 INS42 INS45 INS32 INS45 INS32 UPD42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS42 INS42 UPD42 UPD42 DEL83 DEL45 DEL40 DEL40