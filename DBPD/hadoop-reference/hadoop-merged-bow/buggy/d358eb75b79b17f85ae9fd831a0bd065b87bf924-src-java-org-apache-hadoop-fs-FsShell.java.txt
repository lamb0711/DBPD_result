HADOOP-7224. Add CommandFactory to shell.  Contributed by Daryn Sharp


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1091902 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.LinkedList;
+import org.apache.hadoop.fs.shell.Command;
+import org.apache.hadoop.fs.shell.CommandFactory;
-import org.apache.hadoop.fs.shell.Count;
+import org.apache.hadoop.fs.shell.FsCommand;
+  protected CommandFactory commandFactory;
+
+    commandFactory = new CommandFactory();
-      "[" + FsShellPermissions.CHGRP_USAGE + "]\n\t" +      
-      "[" + Count.USAGE + "]\n\t" +      
-      "[-help [cmd]]\n";
+      "[" + FsShellPermissions.CHGRP_USAGE + "]";
-    if ("fs".equals(cmd)) {
+    Command instance = commandFactory.getInstance("-" + cmd);
+    if (instance != null) {
+      System.out.println(instance.getDescription());
+    } else if ("fs".equals(cmd)) {
-    } else if (Count.NAME.equals(cmd)) {
-      System.out.println(Count.DESCRIPTION);
+      for (String thisCmdName : commandFactory.getNames()) {
+        instance = commandFactory.getInstance(thisCmdName);
+        System.out.println(instance.getUsage());
+      }
+      System.out.println("\t[-help [cmd]]\n");
+      
-      System.out.println(Count.DESCRIPTION);
+
+      for (String thisCmdName : commandFactory.getNames()) {
+        instance = commandFactory.getInstance(thisCmdName);
+        System.out.println(instance.getDescription());
+      }
+
-  private static void printUsage(String cmd) {
+  private void printUsage(String cmd) {
-    if ("-fs".equals(cmd)) {
+
+    Command instance = commandFactory.getInstance(cmd);
+    if (instance != null) {
+      System.err.println(prefix + " [" + instance.getUsage() + "]");
+    } else if ("-fs".equals(cmd)) {
-    } else if ("-count".equals(cmd)) {
-      System.err.println(prefix + " [" + Count.USAGE + "]");
-      System.err.println("           [" + Count.USAGE + "]");
+      for (String name : commandFactory.getNames()) {
+      	instance = commandFactory.getInstance(name);
+        System.err.println("           [" + instance.getUsage() + "]");
+      }
-
+    // TODO: This isn't the best place, but this class is being abused with
+    // subclasses which of course override this method.  There really needs
+    // to be a better base class for all commands
+    commandFactory.setConf(getConf());
+    commandFactory.registerCommands(FsCommand.class);
+    
-      if ("-put".equals(cmd) || "-copyFromLocal".equals(cmd)) {
+      Command instance = commandFactory.getInstance(cmd);
+      if (instance != null) {
+        try {
+          exitCode = instance.run(Arrays.copyOfRange(argv, i, argv.length));
+        } catch (Exception e) {
+          exitCode = -1;
+          LOG.debug("Error", e);
+          instance.displayError(e);
+          if (e instanceof IllegalArgumentException) {
+            printUsage(cmd);
+          }
+        }
+      } else if ("-put".equals(cmd) || "-copyFromLocal".equals(cmd)) {
-      } else if ("-count".equals(cmd)) {
-        // TODO: next two lines are a temporary crutch until this entire
-        // block is overhauled
-        Count runner = ReflectionUtils.newInstance(Count.class, getConf());
-        runner.setCommandName(cmd); // TODO: will change with factory
-        exitCode = runner.run(Arrays.copyOfRange(argv, 1, argv.length));

MOV26 MOV26 INS26 UPD40 UPD40 INS40 INS23 INS83 INS43 INS59 INS42 INS42 INS21 INS60 INS60 INS21 INS21 INS7 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS32 INS32 INS42 INS14 INS42 INS42 INS32 INS42 INS33 INS21 MOV32 MOV8 INS42 INS42 INS32 INS42 INS33 INS21 MOV32 MOV8 INS42 INS42 MOV32 INS42 INS42 INS57 INS60 INS43 UPD45 INS42 INS42 INS27 INS32 MOV32 MOV8 INS42 INS42 INS42 INS32 MOV32 MOV8 INS43 INS43 INS59 INS27 INS8 INS42 INS45 INS42 INS40 INS42 INS32 MOV32 MOV8 INS40 INS42 INS27 MOV32 MOV8 INS42 INS42 INS42 INS32 INS42 INS33 INS54 MOV27 MOV8 INS42 INS42 MOV32 MOV8 INS42 INS45 INS32 INS45 MOV27 MOV8 INS42 INS42 INS42 INS8 INS12 MOV32 MOV8 MOV32 MOV8 INS42 INS42 MOV32 MOV8 INS21 INS44 INS8 MOV27 MOV8 MOV32 MOV8 INS7 INS43 INS42 INS21 INS21 INS21 INS25 MOV32 MOV8 MOV32 MOV8 INS42 INS32 INS42 INS7 INS32 INS32 INS62 INS8 MOV32 MOV8 MOV32 MOV8 INS42 INS42 INS32 INS42 INS38 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS43 INS21 MOV32 MOV8 MOV32 MOV8 INS42 INS42 INS42 INS42 INS40 INS34 INS42 INS32 MOV32 MOV8 MOV32 MOV8 INS42 INS42 MOV32 MOV8 MOV32 MOV8 MOV27 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 INS70 MOV32 MOV8 MOV32 MOV8 INS44 INS32 INS8 MOV32 MOV8 MOV32 MOV8 INS43 INS42 INS42 INS42 INS21 MOV21 MOV32 MOV8 MOV32 MOV8 INS42 INS7 MOV32 MOV8 MOV32 MOV8 INS42 INS32 MOV32 MOV8 MOV32 MOV8 INS42 INS42 INS42 INS32 MOV32 MOV8 INS42 INS42 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 INS70 INS21 INS70 INS44 INS32 INS8 INS32 INS44 INS32 INS8 INS43 INS42 INS42 INS42 INS21 MOV21 INS40 INS42 INS45 INS43 INS42 INS42 INS42 INS21 INS21 INS42 INS7 INS42 INS7 INS32 INS42 INS32 INS32 INS42 INS32 INS40 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL45 DEL40 DEL45 DEL45 DEL40 DEL42 DEL42 DEL32 DEL40 DEL42 DEL40 DEL32 DEL21 DEL8 DEL40 DEL83 DEL45 DEL42 DEL42 DEL32 DEL40 DEL42 DEL42 DEL45 DEL40 DEL45 DEL27 DEL32 DEL21 DEL8 DEL40 DEL45 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL34 DEL40 DEL32 DEL32 DEL7 DEL21 DEL8