HDFS-6724. Decrypt EDEK before creating CryptoInputStream/CryptoOutputStream. (wang)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1613490 13f79535-47bb-0310-9956-ffa450edef68

+import static org.apache.hadoop.crypto.key.KeyProvider.KeyVersion;
+import static org.apache.hadoop.crypto.key.KeyProviderCryptoExtension
+    .EncryptedKeyVersion;
+import java.security.GeneralSecurityException;
+import org.apache.hadoop.crypto.key.KeyProviderCryptoExtension;
-  
+  @VisibleForTesting
+  KeyProviderCryptoExtension provider;
-    
+    provider = DFSUtil.createKeyProviderCryptoExtension(conf);
+    if (provider == null) {
+      LOG.info("No KeyProvider found.");
+    } else {
+      LOG.info("Found KeyProvider: " + provider.toString());
+    }
+   * Decrypts a EDEK by consulting the KeyProvider.
+   */
+  private KeyVersion decryptEncryptedDataEncryptionKey(FileEncryptionInfo
+      feInfo) throws IOException {
+    if (provider == null) {
+      throw new IOException("No KeyProvider is configured, cannot access" +
+          " an encrypted file");
+    }
+    EncryptedKeyVersion ekv = EncryptedKeyVersion.createForDecryption(
+        feInfo.getEzKeyVersionName(), feInfo.getIV(),
+        feInfo.getEncryptedDataEncryptionKey());
+    try {
+      return provider.decryptEncryptedKey(ekv);
+    } catch (GeneralSecurityException e) {
+      throw new IOException(e);
+    }
+  }
+
+  /**
+      KeyVersion decrypted = decryptEncryptedDataEncryptionKey(feInfo);
-              feInfo.getCipherSuite()), feInfo.getEncryptedDataEncryptionKey(),
+              feInfo.getCipherSuite()), decrypted.getMaterial(),
-      // No key/IV pair so no encryption.
+      // No FileEncryptionInfo so no encryption.
+      KeyVersion decrypted = decryptEncryptedDataEncryptionKey(feInfo);
-              feInfo.getEncryptedDataEncryptionKey(), feInfo.getIV(), startPos);
+              decrypted.getMaterial(), feInfo.getIV(), startPos);
-      // No key/IV present so no encryption.
+      // No FileEncryptionInfo present so no encryption.

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS31 INS78 INS43 INS59 INS29 INS83 INS43 INS42 INS44 INS43 INS8 INS42 INS42 INS42 INS21 INS25 INS65 INS42 INS43 INS42 INS42 INS25 INS60 INS54 INS7 INS27 INS8 INS8 INS66 INS42 INS27 INS8 INS43 INS59 INS8 INS12 INS42 INS32 INS42 INS33 INS21 INS21 INS42 INS33 INS53 INS42 INS42 INS32 INS41 INS44 INS8 INS60 INS60 INS42 INS42 INS42 INS32 INS32 INS14 INS42 INS42 INS32 INS32 MOV32 INS32 INS43 INS42 INS53 INS43 INS59 INS43 INS59 INS42 INS42 INS45 INS42 INS42 INS27 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS45 INS32 INS42 INS45 INS45 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42