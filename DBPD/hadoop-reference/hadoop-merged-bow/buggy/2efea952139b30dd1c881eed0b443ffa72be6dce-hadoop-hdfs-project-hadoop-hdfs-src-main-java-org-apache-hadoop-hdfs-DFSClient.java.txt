HDFS-6391. Get the Key/IV from the NameNode for encrypted files in DFSClient. Contributed by Charles Lamb and Andrew Wang.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1606220 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.crypto.CryptoCodec;
+import org.apache.hadoop.crypto.CryptoInputStream;
+import org.apache.hadoop.crypto.CryptoOutputStream;
+import org.apache.hadoop.fs.FileEncryptionInfo;
+  private final CryptoCodec codec;
+    this.codec = CryptoCodec.getInstance(conf);
-  
+
+  /**
+   * Wraps the stream in a CryptoInputStream if the underlying file is
+   * encrypted.
+   */
+  public HdfsDataInputStream createWrappedInputStream(DFSInputStream dfsis)
+      throws IOException {
+    final FileEncryptionInfo feInfo = dfsis.getFileEncryptionInfo();
+    if (feInfo != null) {
+      // File is encrypted, wrap the stream in a crypto stream.
+      final CryptoInputStream cryptoIn =
+          new CryptoInputStream(dfsis, codec,
+              feInfo.getEncryptedDataEncryptionKey(), feInfo.getIV());
+      return new HdfsDataInputStream(cryptoIn);
+    } else {
+      // No key/IV pair so no encryption.
+      return new HdfsDataInputStream(dfsis);
+    }
+  }
+
+  /**
+   * Wraps the stream in a CryptoOutputStream if the underlying file is
+   * encrypted.
+   */
+  public HdfsDataOutputStream createWrappedOutputStream(DFSOutputStream dfsos,
+      FileSystem.Statistics statistics) throws IOException {
+    return createWrappedOutputStream(dfsos, statistics, 0);
+  }
+
+  /**
+   * Wraps the stream in a CryptoOutputStream if the underlying file is
+   * encrypted.
+   */
+  public HdfsDataOutputStream createWrappedOutputStream(DFSOutputStream dfsos,
+      FileSystem.Statistics statistics, long startPos) throws IOException {
+    final FileEncryptionInfo feInfo = dfsos.getFileEncryptionInfo();
+    if (feInfo != null) {
+      // File is encrypted, wrap the stream in a crypto stream.
+      final CryptoOutputStream cryptoOut =
+          new CryptoOutputStream(dfsos, codec,
+              feInfo.getEncryptedDataEncryptionKey(), feInfo.getIV(), startPos);
+      return new HdfsDataOutputStream(cryptoOut, statistics, startPos);
+    } else {
+      // No key/IV present so no encryption.
+      return new HdfsDataOutputStream(dfsos, statistics, startPos);
+    }
+  }
+
-    return new HdfsDataOutputStream(out, statistics, out.getInitialLen());
+    return createWrappedOutputStream(out, statistics, out.getInitialLen());

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS31 INS31 INS31 INS83 INS83 INS43 INS59 INS29 INS83 INS43 INS42 INS44 INS43 INS8 INS29 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS29 INS83 INS43 INS42 INS44 INS44 INS44 INS43 INS8 INS42 INS42 INS21 INS65 INS42 INS43 INS42 INS42 INS60 INS25 INS65 INS42 INS43 INS42 INS43 INS42 INS42 INS41 INS65 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS42 INS60 INS25 INS7 INS66 INS66 INS42 INS83 INS43 INS59 INS27 INS8 INS8 INS66 INS66 INS42 INS40 INS32 INS66 INS66 INS42 INS40 INS83 INS43 INS59 INS27 INS8 INS8 INS32 INS22 INS32 INS42 INS42 INS32 INS42 INS33 INS60 INS41 INS41 INS42 INS42 INS42 INS34 INS42 INS42 INS32 INS42 INS33 INS60 INS41 INS41 INS42 INS42 INS42 MOV32 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS83 INS43 INS59 INS14 INS14 INS42 INS42 INS83 INS43 INS59 INS14 INS14 INS42 INS42 INS14 INS43 INS42 INS43 INS42 INS42 INS42 INS14 INS43 INS42 INS42 INS42 MOV43 INS42 INS42 INS42 INS43 INS42 INS42 INS32 INS32 INS42 INS42 INS43 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL14