HADOOP-10565. Support IP ranges (CIDR) in proxyuser.hosts. (Contributed by Benoy Antony)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605987 13f79535-47bb-0310-9956-ffa450edef68

-import java.net.InetAddress;
-import java.net.UnknownHostException;
-import org.apache.hadoop.util.StringUtils;
+import org.apache.hadoop.util.MachineList;
-  private Map<String, Collection<String>> proxyHosts = 
-    new HashMap<String, Collection<String>>();
+  private static Map<String, MachineList> proxyHosts = 
+    new HashMap<String, MachineList>();
-          StringUtils.getTrimmedStringCollection(entry.getValue()));
+          new MachineList(entry.getValue()));
-    boolean ipAuthorized = false;
-    Collection<String> ipList = proxyHosts.get(
+    MachineList MachineList = proxyHosts.get(
-    if (isWildcardList(ipList)) {
-      ipAuthorized = true;
-    } else if (ipList != null && !ipList.isEmpty()) {
-      for (String allowedHost : ipList) {
-        InetAddress hostAddr;
-        try {
-          hostAddr = InetAddress.getByName(allowedHost);
-        } catch (UnknownHostException e) {
-          continue;
-        }
-        if (hostAddr.getHostAddress().equals(remoteAddress)) {
-          // Authorization is successful
-          ipAuthorized = true;
-        }
-      }
-    }
-    if(!ipAuthorized) {
+    if(!MachineList.includes(remoteAddress)) {
-
-  /**
-   * Return true if the configuration specifies the special configuration value
-   * "*", indicating that any group or host list is allowed to use this configuration.
-   */
-  private boolean isWildcardList(Collection<String> list) {
-    return (list != null) &&
-    (list.size() == 1) &&
-    (list.contains("*"));
-  }
-    return proxyHosts;
+    Map<String, Collection<String>> tmpProxyHosts = 
+        new HashMap<String, Collection<String>>();
+    for (Map.Entry<String, MachineList> proxyHostEntry :proxyHosts.entrySet()) {
+      tmpProxyHosts.put(proxyHostEntry.getKey(), 
+          proxyHostEntry.getValue().getCollection());
+    }
+    return tmpProxyHosts;

UPD40 INS31 INS83 INS74 INS59 MOV78 UPD83 MOV83 MOV74 UPD42 MOV42 INS8 INS43 MOV43 INS43 INS42 INS14 INS60 INS70 MOV41 INS42 INS42 INS74 INS43 MOV74 MOV59 INS44 INS32 INS8 UPD42 INS43 MOV43 INS43 UPD42 MOV42 UPD42 INS32 UPD42 UPD74 MOV74 MOV43 UPD42 MOV42 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS43 UPD43 INS32 INS14 INS40 UPD42 INS42 INS42 INS32 INS32 INS43 MOV32 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL32 DEL39 DEL42 DEL9 DEL59 DEL60 DEL43 DEL74 DEL42 DEL42 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL44 DEL42 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL18 DEL8 DEL12 DEL54 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL8 DEL70 DEL8 DEL25 DEL25 DEL42 DEL66 DEL66 DEL65 DEL29 DEL39 DEL44 DEL42 DEL33 DEL27 DEL36 DEL32 DEL34 DEL27 DEL36 DEL45 DEL32 DEL36 DEL27 DEL41 DEL8 DEL31 DEL83 DEL42 DEL8 DEL31