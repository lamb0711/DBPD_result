HADOOP-6941. Adds support for building Hadoop with IBM's JDK. Contributed by Stephen Watt, Eli Collins and Devaraj Das.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1301308 13f79535-47bb-0310-9956-ffa450edef68

+import java.lang.reflect.Constructor;
+import java.lang.reflect.Field;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
-import sun.security.jgss.krb5.Krb5Util;
-import sun.security.krb5.Credentials;
-import sun.security.krb5.PrincipalName;
-    Credentials serviceCred = null;
+    Object serviceCred = null;
+    Method credsToTicketMeth;
+    Class<?> krb5utilClass;
-      PrincipalName principal = new PrincipalName(serviceName,
-          PrincipalName.KRB_NT_SRV_HST);
-      serviceCred = Credentials.acquireServiceCreds(principal
-          .toString(), Krb5Util.ticketToCreds(getTgtFromSubject()));
+      Class<?> principalClass;
+      Class<?> credentialsClass;
+      
+      if (System.getProperty("java.vendor").contains("IBM")) {
+        principalClass = Class.forName("com.ibm.security.krb5.PrincipalName");
+        
+        credentialsClass = Class.forName("com.ibm.security.krb5.Credentials");
+        krb5utilClass = Class.forName("com.ibm.security.jgss.mech.krb5");
+      } else {
+        principalClass = Class.forName("sun.security.krb5.PrincipalName");
+        credentialsClass = Class.forName("sun.security.krb5.Credentials");
+        krb5utilClass = Class.forName("sun.security.jgss.krb5");
+      }
+      @SuppressWarnings("rawtypes")
+      Constructor principalConstructor = principalClass.getConstructor(String.class, 
+          int.class);
+      Field KRB_NT_SRV_HST = principalClass.getDeclaredField("KRB_NT_SRV_HST");
+      Method acquireServiceCredsMeth = 
+          credentialsClass.getDeclaredMethod("acquireServiceCreds", 
+              String.class, credentialsClass);
+      Method ticketToCredsMeth = krb5utilClass.getDeclaredMethod("ticketToCreds", 
+          KerberosTicket.class);
+      credsToTicketMeth = krb5utilClass.getDeclaredMethod("credsToTicket", 
+          credentialsClass);
+      
+      Object principal = principalConstructor.newInstance(serviceName,
+          KRB_NT_SRV_HST.get(principalClass));
+      
+      serviceCred = acquireServiceCredsMeth.invoke(credentialsClass, 
+          principal.toString(), 
+          ticketToCredsMeth.invoke(krb5utilClass, getTgtFromSubject()));
-    Subject.getSubject(AccessController.getContext()).getPrivateCredentials()
-        .add(Krb5Util.credsToTicket(serviceCred));
+    try {
+      Subject.getSubject(AccessController.getContext()).getPrivateCredentials()
+          .add(credsToTicketMeth.invoke(krb5utilClass, serviceCred));
+    } catch (Exception e) {
+      throw new IOException("Can't get service ticket for: "
+          + serviceName, e);
+    }

MOV26 MOV26 MOV26 INS26 UPD40 UPD40 UPD40 INS40 INS60 INS60 INS54 UPD43 INS43 INS59 INS74 INS59 INS8 INS12 UPD42 INS42 INS42 INS43 INS76 INS42 INS60 INS60 INS25 INS60 INS60 INS60 INS60 INS21 MOV21 INS44 INS8 INS42 INS74 INS59 INS74 INS59 INS32 INS8 INS8 INS79 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS7 UPD43 INS43 INS42 INS53 INS43 INS76 INS42 INS43 INS76 INS42 INS32 INS42 INS45 INS21 INS21 INS21 INS21 INS21 INS21 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 UPD42 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS45 INS7 INS7 INS7 INS7 INS7 INS7 INS42 INS42 INS57 INS57 INS42 INS42 INS45 INS42 INS42 INS45 INS57 INS42 INS42 INS42 INS45 INS57 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS32 UPD42 INS42 UPD42 UPD42 UPD42 INS42 INS43 INS27 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS43 INS39 INS43 INS43 INS42 INS42 INS42 UPD42 INS42 UPD42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL40 DEL14