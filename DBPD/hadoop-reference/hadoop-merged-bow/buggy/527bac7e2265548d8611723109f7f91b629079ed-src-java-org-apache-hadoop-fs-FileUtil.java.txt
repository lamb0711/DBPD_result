HADOOP-7133. Batch the calls in DataStorage to FileUtil.createHardLink().  Contributed by Matt Foley.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1080396 13f79535-47bb-0310-9956-ffa450edef68

-   *  
+   * @deprecated Use {@link org.apache.hadoop.fs.HardLink}
-  public static class HardLink { 
-    enum OSType {
-      OS_TYPE_UNIX, 
-      OS_TYPE_WINXP,
-      OS_TYPE_SOLARIS,
-      OS_TYPE_MAC; 
-    }
-  
-    private static String[] hardLinkCommand;
-    private static String[] getLinkCountCommand;
-    private static OSType osType;
-    
-    static {
-      osType = getOSType();
-      switch(osType) {
-      case OS_TYPE_WINXP:
-        hardLinkCommand = new String[] {"fsutil","hardlink","create", null, null};
-        getLinkCountCommand = new String[] {"stat","-c%h"};
-        break;
-      case OS_TYPE_SOLARIS:
-        hardLinkCommand = new String[] {"ln", null, null};
-        getLinkCountCommand = new String[] {"ls","-l"};
-        break;
-      case OS_TYPE_MAC:
-        hardLinkCommand = new String[] {"ln", null, null};
-        getLinkCountCommand = new String[] {"stat","-f%l"};
-        break;
-      case OS_TYPE_UNIX:
-      default:
-        hardLinkCommand = new String[] {"ln", null, null};
-        getLinkCountCommand = new String[] {"stat","-c%h"};
-      }
-    }
-
-    static private OSType getOSType() {
-      String osName = System.getProperty("os.name");
-      if (osName.indexOf("Windows") >= 0 && 
-          (osName.indexOf("XP") >= 0 || osName.indexOf("2003") >= 0 || osName.indexOf("Vista") >= 0))
-        return OSType.OS_TYPE_WINXP;
-      else if (osName.indexOf("SunOS") >= 0)
-         return OSType.OS_TYPE_SOLARIS;
-      else if (osName.indexOf("Mac") >= 0)
-         return OSType.OS_TYPE_MAC;
-      else
-        return OSType.OS_TYPE_UNIX;
-    }
-    
-    /**
-     * Creates a hardlink 
-     */
-    public static void createHardLink(File target, 
-                                      File linkName) throws IOException {
-      int len = hardLinkCommand.length;
-      if (osType == OSType.OS_TYPE_WINXP) {
-       hardLinkCommand[len-1] = target.getCanonicalPath();
-       hardLinkCommand[len-2] = linkName.getCanonicalPath();
-      } else {
-       hardLinkCommand[len-2] = makeShellPath(target, true);
-       hardLinkCommand[len-1] = makeShellPath(linkName, true);
-      }
-      // execute shell command
-      Process process = Runtime.getRuntime().exec(hardLinkCommand);
-      try {
-        if (process.waitFor() != 0) {
-          String errMsg = new BufferedReader(new InputStreamReader(
-                                                                   process.getInputStream())).readLine();
-          if (errMsg == null)  errMsg = "";
-          String inpMsg = new BufferedReader(new InputStreamReader(
-                                                                   process.getErrorStream())).readLine();
-          if (inpMsg == null)  inpMsg = "";
-          throw new IOException(errMsg + inpMsg);
-        }
-      } catch (InterruptedException e) {
-        throw new IOException(StringUtils.stringifyException(e));
-      } finally {
-        process.destroy();
-      }
-    }
-
-    /**
-     * Retrieves the number of links to the specified file.
-     */
-    public static int getLinkCount(File fileName) throws IOException {
-      if (!fileName.exists()) {
-        throw new FileNotFoundException(fileName + " not found.");
-      }
-
-      int len = getLinkCountCommand.length;
-      String[] cmd = new String[len + 1];
-      for (int i = 0; i < len; i++) {
-        cmd[i] = getLinkCountCommand[i];
-      }
-      cmd[len] = fileName.toString();
-      String inpMsg = null;
-      String errMsg = null;
-      int exitValue = -1;
-      BufferedReader in = null;
-      BufferedReader err = null;
-
-      // execute shell command
-      Process process = Runtime.getRuntime().exec(cmd);
-      try {
-        exitValue = process.waitFor();
-        in = new BufferedReader(new InputStreamReader(
-                                    process.getInputStream()));
-        inpMsg = in.readLine();
-        err = new BufferedReader(new InputStreamReader(
-                                     process.getErrorStream()));
-        errMsg = err.readLine();
-        if (inpMsg == null || exitValue != 0) {
-          throw createIOException(fileName, inpMsg, errMsg, exitValue, null);
-        }
-        if (getOSType() == OSType.OS_TYPE_SOLARIS) {
-          String[] result = inpMsg.split("\\s+");
-          return Integer.parseInt(result[1]);
-        } else {
-          return Integer.parseInt(inpMsg);
-        }
-      } catch (NumberFormatException e) {
-        throw createIOException(fileName, inpMsg, errMsg, exitValue, e);
-      } catch (InterruptedException e) {
-        throw createIOException(fileName, inpMsg, errMsg, exitValue, e);
-      } finally {
-        process.destroy();
-        if (in != null) in.close();
-        if (err != null) err.close();
-      }
-    }
-  }
-
-  /** Create an IOException for failing to get link count. */
-  static private IOException createIOException(File f, String message,
-      String error, int exitvalue, Exception cause) {
-    final String s = "Failed to get link count on file " + f
-        + ": message=" + message
-        + "; error=" + error
-        + "; exit value=" + exitvalue;
-    return cause == null? new IOException(s): new IOException(s, cause);
+  @Deprecated
+  public static class HardLink extends org.apache.hadoop.fs.HardLink { 
+    // This is a stub to assist with coordinated change between
+    // COMMON and HDFS projects.  It will be removed after the
+    // corresponding change is committed to HDFS.

INS78 INS83 INS83 INS42 INS43 INS65 INS42 INS40 INS66 INS65 INS40 DEL83 DEL83 DEL42 DEL42 DEL42 DEL72 DEL42 DEL72 DEL42 DEL72 DEL42 DEL72 DEL71 DEL83 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL59 DEL23 DEL83 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL59 DEL23 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL49 DEL42 DEL42 DEL43 DEL85 DEL5 DEL45 DEL45 DEL45 DEL33 DEL33 DEL4 DEL3 DEL7 DEL21 DEL42 DEL42 DEL43 DEL85 DEL5 DEL45 DEL45 DEL4 DEL3 DEL7 DEL21 DEL10 DEL42 DEL49 DEL42 DEL42 DEL43 DEL85 DEL5 DEL45 DEL33 DEL33 DEL4 DEL3 DEL7 DEL21 DEL42 DEL42 DEL43 DEL85 DEL5 DEL45 DEL45 DEL4 DEL3 DEL7 DEL21 DEL10 DEL42 DEL49 DEL42 DEL42 DEL43 DEL85 DEL5 DEL45 DEL33 DEL33 DEL4 DEL3 DEL7 DEL21 DEL42 DEL42 DEL43 DEL85 DEL5 DEL45 DEL45 DEL4 DEL3 DEL7 DEL21 DEL10 DEL42 DEL49 DEL49 DEL42 DEL42 DEL43 DEL85 DEL5 DEL45 DEL33 DEL33 DEL4 DEL3 DEL7 DEL21 DEL42 DEL42 DEL43 DEL85 DEL5 DEL45 DEL45 DEL4 DEL3 DEL7 DEL21 DEL50 DEL8 DEL28 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL34 DEL27 DEL42 DEL42 DEL45 DEL32 DEL34 DEL27 DEL42 DEL42 DEL45 DEL32 DEL34 DEL27 DEL27 DEL42 DEL42 DEL45 DEL32 DEL34 DEL27 DEL27 DEL36 DEL27 DEL40 DEL41 DEL42 DEL42 DEL45 DEL32 DEL34 DEL27 DEL40 DEL41 DEL42 DEL42 DEL45 DEL32 DEL34 DEL27 DEL40 DEL41 DEL40 DEL41 DEL25 DEL25 DEL25 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL39 DEL42 DEL40 DEL59 DEL60 DEL42 DEL40 DEL27 DEL42 DEL42 DEL34 DEL27 DEL2 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL34 DEL27 DEL2 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL34 DEL27 DEL2 DEL42 DEL42 DEL9 DEL32 DEL7 DEL21 DEL42 DEL42 DEL34 DEL27 DEL2 DEL42 DEL42 DEL9 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL34 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL14 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL45 DEL7 DEL21 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL14 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL45 DEL7 DEL21 DEL25 DEL42 DEL43 DEL42 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL42 DEL45 DEL27 DEL14 DEL53 DEL8 DEL25 DEL39 DEL42 DEL40 DEL59 DEL60 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL34 DEL27 DEL3 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL7 DEL21 DEL8 DEL24 DEL42 DEL42 DEL2 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL39 DEL42 DEL34 DEL38 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL14 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL14 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL33 DEL27 DEL42 DEL34 DEL27 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL33 DEL32 DEL53 DEL8 DEL25 DEL42 DEL32 DEL40 DEL27 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL34 DEL2 DEL32 DEL41 DEL8 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL53 DEL8 DEL12 DEL42 DEL42 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL25 DEL8 DEL54 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL27 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL14 DEL42 DEL43 DEL42 DEL42 DEL14 DEL16 DEL41 DEL8 DEL31