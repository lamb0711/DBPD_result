HADOOP-7267. Refactor the rm/rmr/expunge commands to conform to new FsCommand class.  Contributed by Daryn Sharp


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1102093 13f79535-47bb-0310-9956-ffa450edef68

-   * Delete all files that match the file pattern <i>srcf</i>.
-   * @param srcf a file pattern specifying source files
-   * @param recursive if need to delete subdirs
-   * @param skipTrash Should we skip the trash, if it's enabled?
-   * @throws IOException  
-   * @see org.apache.hadoop.fs.FileSystem#globStatus(Path)
-   */
-  void delete(String srcf, final boolean recursive, final boolean skipTrash) 
-                                                            throws IOException {
-    //rm behavior in Linux
-    //  [~/1207]$ ls ?.txt
-    //  x.txt  z.txt
-    //  [~/1207]$ rm x.txt y.txt z.txt 
-    //  rm: cannot remove `y.txt': No such file or directory
-
-    Path srcPattern = new Path(srcf);
-    new DelayedExceptionThrowing() {
-      @Override
-      void process(Path p, FileSystem srcFs) throws IOException {
-        delete(p, srcFs, recursive, skipTrash);
-      }
-    }.globAndProcess(srcPattern, srcPattern.getFileSystem(getConf()));
-  }
-    
-  /* delete a file */
-  private void delete(Path src, FileSystem srcFs, boolean recursive, 
-                      boolean skipTrash) throws IOException {
-    FileStatus fs = null;
-    try {
-      fs = srcFs.getFileStatus(src);
-    } catch (FileNotFoundException fnfe) {
-      // Have to re-throw so that console output is as expected
-      throw new PathNotFoundException(src.toString());
-    }
-    
-    if (fs.isDirectory() && !recursive) {
-      throw new IOException("Cannot remove directory \"" + src +
-                            "\", use -rmr instead");
-    }
-    
-    if(!skipTrash) {
-      try {
-	      Trash trashTmp = new Trash(srcFs, getConf());
-        if (trashTmp.moveToTrash(src)) {
-          System.out.println("Moved to trash: " + src);
-          return;
-        }
-      } catch (IOException e) {
-        LOG.debug("Error with trash", e);
-        Exception cause = (Exception) e.getCause();
-        String msg = "";
-        if(cause != null) {
-          msg = cause.getLocalizedMessage();
-        }
-        System.err.println("Problem with Trash." + msg +". Consider using -skipTrash option");        
-        throw e;
-      }
-    }
-    
-    if (srcFs.delete(src, true)) {
-      System.out.println("Deleted " + src);
-    } else {
-      throw new IOException("Delete failed " + src);
-    }
-  }
-
-  private void expunge() throws IOException {
-    getTrash().expunge();
-    getTrash().checkpoint();
-  }
-
-  /**
-      "[-dus <path>] [-mv <src> <dst>] [-cp <src> <dst>] [-rm [-skipTrash] <src>]\n\t" + 
-      "[-rmr [-skipTrash] <src>] [-put <localsrc> ... <dst>] [-copyFromLocal <localsrc> ... <dst>]\n\t" +
+      "[-dus <path>] [-mv <src> <dst>] [-cp <src> <dst>]\n\t" + 
+      "[-put <localsrc> ... <dst>] [-copyFromLocal <localsrc> ... <dst>]\n\t" +
-    String rm = "-rm [-skipTrash] <src>: \tDelete all files that match the specified file pattern.\n" +
-      "\t\tEquivalent to the Unix command \"rm <src>\"\n" +
-      "\t\t-skipTrash option bypasses trash, if enabled, and immediately\n" +
-      "deletes <src>";
-
-    String rmr = "-rmr [-skipTrash] <src>: \tRemove all directories which match the specified file \n" +
-      "\t\tpattern. Equivalent to the Unix command \"rm -rf <src>\"\n" +
-      "\t\t-skipTrash option bypasses trash, if enabled, and immediately\n" +
-      "deletes <src>";
-
-    String expunge = "-expunge: Empty the Trash.\n";
-    
-    } else if ("rm".equals(cmd)) {
-      System.out.println(rm);
-    } else if ("expunge".equals(cmd)) {
-      System.out.println(expunge);
-    } else if ("rmr".equals(cmd)) {
-      System.out.println(rmr);
-      System.out.println(rm);
-      System.out.println(rmr);
-    boolean rmSkipTrash = false;
-    
-    // Check for -skipTrash option in rm/rmr
-    if(("-rm".equals(cmd) || "-rmr".equals(cmd)) 
-        && "-skipTrash".equals(argv[i])) {
-      rmSkipTrash = true;
-      i++;
-    }
-        if ("-rm".equals(cmd)) {
-          delete(argv[i], false, rmSkipTrash);
-        } else if ("-rmr".equals(cmd)) {
-          delete(argv[i], true, rmSkipTrash);
-        } else if ("-df".equals(cmd)) {
+        if ("-df".equals(cmd)) {
-    } else if ("-rm".equals(cmd) || "-rmr".equals(cmd)) {
-      System.err.println("Usage: java FsShell [" + cmd + 
-                           " [-skipTrash] <src>]");
-      System.err.println("           [-rm [-skipTrash] <path>]");
-      System.err.println("           [-rmr [-skipTrash] <path>]");
-      System.err.println("           [-expunge]");
-    } else if ("-rm".equals(cmd) || "-rmr".equals(cmd)) {
-      if (argv.length < 2) {
-        printUsage(cmd);
-        return exitCode;
-      }
-      } else if ("-rm".equals(cmd)) {
-        exitCode = doall(cmd, argv, i);
-      } else if ("-rmr".equals(cmd)) {
-        exitCode = doall(cmd, argv, i);
-      } else if ("-expunge".equals(cmd)) {
-        expunge();

MOV25 MOV25 MOV43 MOV27 MOV8 MOV27 MOV8 MOV32 MOV8 MOV32 MOV8 MOV25 MOV32 MOV8 MOV32 MOV8 MOV27 MOV8 UPD45 UPD45 MOV32 MOV8 MOV25 MOV32 MOV8 MOV27 MOV8 MOV32 MOV8 MOV27 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV27 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL40 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL29 DEL39 DEL42 DEL42 DEL44 DEL83 DEL39 DEL42 DEL44 DEL83 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL78 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL1 DEL14 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL32 DEL42 DEL38 DEL27 DEL42 DEL43 DEL45 DEL42 DEL45 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL38 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL41 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL40 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL42 DEL53 DEL8 DEL12 DEL54 DEL8 DEL25 DEL42 DEL42 DEL42 DEL9 DEL32 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL8 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL31 DEL42 DEL43 DEL42 DEL43 DEL42 DEL45 DEL45 DEL45 DEL45 DEL27 DEL59 DEL60 DEL42 DEL43 DEL42 DEL45 DEL45 DEL45 DEL45 DEL27 DEL59 DEL60 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL45 DEL42 DEL42 DEL32 DEL40 DEL42 DEL42 DEL32 DEL21 DEL8 DEL45 DEL42 DEL42 DEL32 DEL40 DEL42 DEL42 DEL32 DEL21 DEL8 DEL45 DEL42 DEL42 DEL32 DEL40 DEL42 DEL42 DEL32 DEL21 DEL8 DEL40 DEL42 DEL42 DEL32 DEL21 DEL40 DEL42 DEL42 DEL32 DEL21 DEL25 DEL25 DEL25 DEL39 DEL42 DEL9 DEL59 DEL60 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL36 DEL45 DEL42 DEL42 DEL42 DEL2 DEL32 DEL27 DEL42 DEL9 DEL7 DEL21 DEL42 DEL37 DEL21 DEL8 DEL25 DEL45 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL2 DEL9 DEL42 DEL32 DEL21 DEL8 DEL45 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL2 DEL9 DEL42 DEL32 DEL21 DEL8 DEL25 DEL25 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL40 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL8 DEL40 DEL42 DEL45 DEL32 DEL21 DEL40 DEL42 DEL45 DEL32 DEL21 DEL40 DEL42 DEL45 DEL32 DEL21 DEL25 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL40 DEL34 DEL27 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL25 DEL8 DEL25 DEL45 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL45 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL25 DEL25 DEL25