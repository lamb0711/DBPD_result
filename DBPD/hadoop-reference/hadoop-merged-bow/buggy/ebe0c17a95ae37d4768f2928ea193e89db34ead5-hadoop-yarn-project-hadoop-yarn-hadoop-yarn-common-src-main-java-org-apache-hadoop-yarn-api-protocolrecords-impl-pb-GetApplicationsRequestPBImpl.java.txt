YARN-1461. Added tags for YARN applications and changed RM to handle them. Contributed by Karthik Kambatla.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1564633 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.api.protocolrecords.ApplicationsRequestScope;
+  private Set<String> applicationTags;
+  private ApplicationsRequestScope scope;
+    if (this.applicationTags != null && !this.applicationTags.isEmpty()) {
+      builder.addAllApplicationTags(this.applicationTags);
+    }
+    if (this.scope != null) {
+      builder.setScope(ProtoUtils.convertToProtoFormat(scope));
+    }
+  private void initApplicationTags() {
+    if (this.applicationTags != null) {
+      return;
+    }
+    GetApplicationsRequestProtoOrBuilder p = viaProto ? proto : builder;
+    this.applicationTags = new HashSet<String>();
+    this.applicationTags.addAll(p.getApplicationTagsList());
+  }
+
+  @Override
+  public Set<String> getApplicationTags() {
+    initApplicationTags();
+    return this.applicationTags;
+  }
+
+  @Override
+  public void setApplicationTags(Set<String> tags) {
+    maybeInitBuilder();
+    if (tags == null || tags.isEmpty()) {
+      builder.clearApplicationTags();
+      this.applicationTags = null;
+      return;
+    }
+    // Convert applicationTags to lower case and add
+    this.applicationTags = new HashSet<String>();
+    for (String tag : tags) {
+      this.applicationTags.add(tag.toLowerCase());
+    }
+  }
+
+  private void initScope() {
+    if (this.scope != null) {
+      return;
+    }
+    GetApplicationsRequestProtoOrBuilder p = viaProto ? proto : builder;
+    this.scope = ProtoUtils.convertFromProtoFormat(p.getScope());
+  }
+
+  @Override
+  public ApplicationsRequestScope getScope() {
+    initScope();
+    return this.scope;
+  }
+
+  public void setScope(ApplicationsRequestScope scope) {
+    maybeInitBuilder();
+    if (scope == null) {
+      builder.clearScope();
+    }
+    this.scope = scope;
+  }
+
-  @Override

INS26 INS40 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS74 INS59 INS83 INS43 INS59 INS83 INS39 INS42 INS8 INS78 INS83 INS74 INS42 INS8 MOV78 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS43 INS43 INS42 INS42 INS42 INS25 INS25 INS25 INS60 INS21 INS21 INS42 INS43 INS43 INS21 INS41 INS74 INS42 INS21 INS25 INS21 INS70 INS25 INS60 INS21 INS42 INS42 INS21 INS41 INS43 INS42 INS21 INS25 INS21 INS42 INS42 INS27 INS8 INS27 INS8 INS27 INS8 INS43 INS59 INS7 INS32 INS42 INS42 INS32 INS22 INS43 INS43 INS32 INS27 INS8 INS7 INS44 INS42 INS8 INS27 INS8 INS43 INS59 INS7 INS32 INS22 INS42 INS32 INS27 INS8 INS7 INS27 INS38 INS21 INS22 INS33 INS21 INS22 INS33 INS41 INS42 INS42 INS16 INS22 INS14 INS22 INS42 INS32 INS42 INS52 INS42 INS42 INS42 INS42 INS27 INS32 INS21 INS21 INS41 INS22 INS14 INS43 INS42 INS21 INS22 INS33 INS41 INS42 INS42 INS16 INS22 INS32 INS42 INS52 INS42 INS42 INS42 INS33 INS21 INS22 INS42 INS22 INS33 INS32 INS32 INS52 INS42 INS32 INS52 INS42 INS42 INS42 INS42 INS52 INS42 INS74 INS52 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS32 INS7 INS52 INS42 INS74 INS42 INS32 INS52 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS32 INS32 INS52 INS42 INS52 INS42 INS22 INS42 INS42 INS42 INS22 INS42 INS42 INS32 INS43 INS43 INS42 INS42 INS22 INS33 INS43 INS43 INS22 INS42 INS32 INS42 INS42 INS42 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS42