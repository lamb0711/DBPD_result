HADOOP-6559. Makes the RPC client automatically re-login when the SASL connection setup fails. This is applicable only to keytab based logins. Contributed by Devaraj Das.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@910169 13f79535-47bb-0310-9956-ffa450edef68

+  /** The last authentication time */
+  private static long lastUnsuccessfulAuthenticationAttemptTime;
+  
+  public static final long MIN_TIME_BEFORE_RELOGIN = 10 * 60 * 1000L;
+  private static LoginContext login;
+  
+      USER_KERBEROS_OPTIONS.put("renewTGT", "true");
-      KEYTAB_KERBEROS_OPTIONS.put("useTicketCache", "true");
-      KEYTAB_KERBEROS_OPTIONS.put("renewTGT", "true");
-        LoginContext login;
-      LoginContext login = 
+      login = 
+  
+  /**
+   * Re-Login a user in from a keytab file. Loads a user identity from a keytab
+   * file and login them in. They become the currently logged-in user. This
+   * method assumes that {@link #loginUserFromKeytab(String, String)} had 
+   * happened already.
+   * The Subject field of this UserGroupInformation object is updated to have
+   * the new credentials.
+   * @throws IOException on a failure
+   */
+  public synchronized void reloginFromKeytab()
+  throws IOException {
+    if (!isSecurityEnabled())
+      return;
+    if (login == null || keytabFile == null) {
+      throw new IOException("loginUserFromKeyTab must be done first");
+    }
+    if (System.currentTimeMillis() -lastUnsuccessfulAuthenticationAttemptTime <
+          MIN_TIME_BEFORE_RELOGIN) {
+      LOG.warn("Not attempting to re-login since the last re-login was " +
+          "attempted less than " + (MIN_TIME_BEFORE_RELOGIN/1000) + " seconds"+
+          " before.");
+      return;
+    }
+    try {
+      LOG.info("Initiating logout for " + getUserName());
+      //clear up the kerberos state. But the tokens are not cleared! As per 
+      //the Java kerberos login module code, only the kerberos credentials
+      //are cleared
+      login.logout();
+      //login and also update the subject field of this instance to 
+      //have the new credentials (pass it to the LoginContext constructor)
+      login = 
+        new LoginContext(HadoopConfiguration.KEYTAB_KERBEROS_CONFIG_NAME, 
+            getSubject());
+      LOG.info("Initiating re-login for " + keytabPrincipal);
+      login.login();
+    } catch (LoginException le) {
+      throw new IOException("Login failure for " + keytabPrincipal + 
+          " from keytab " + keytabFile, le);
+    } 
+  }
+  public synchronized static void 
+    setLastUnsuccessfulAuthenticationAttemptTime(long time) {
+    lastUnsuccessfulAuthenticationAttemptTime = time;
+  }
+  
+  public synchronized static boolean isLoginKeytabBased() {
+    return keytabFile != null;
+  }

INS23 INS23 INS23 INS31 INS31 INS31 INS29 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 INS83 INS83 MOV43 MOV59 INS29 INS83 INS83 INS39 INS42 INS43 INS8 INS83 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS83 INS39 INS42 INS8 INS65 INS42 INS42 INS27 INS65 INS65 INS42 INS25 INS25 INS25 INS54 INS39 INS42 INS21 INS41 INS66 INS34 INS34 INS34 INS21 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS42 INS66 INS38 INS41 INS27 INS8 INS27 INS8 INS8 INS12 INS7 INS27 INS32 INS21 INS68 INS32 INS27 INS27 INS53 INS27 INS42 INS21 INS41 INS21 INS21 INS21 INS21 INS21 INS44 INS8 INS42 INS42 INS42 INS33 INS42 INS42 INS45 INS45 INS7 INS42 INS69 INS69 INS42 INS42 INS33 INS42 INS33 INS14 INS32 INS42 INS32 INS32 INS32 INS7 INS32 INS32 INS43 INS42 INS53 INS42 MOV14 INS43 INS43 INS43 INS45 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS42 INS14 INS42 INS42 INS27 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS27 INS36 INS45 INS45 INS45 INS32 MOV43 INS40 INS32 INS45 INS42 INS43 INS27 INS42 INS45 INS45 INS27 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS42 INS34 DEL42 DEL42 DEL45 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL45 DEL32 DEL21 DEL60 DEL42 DEL59 DEL60