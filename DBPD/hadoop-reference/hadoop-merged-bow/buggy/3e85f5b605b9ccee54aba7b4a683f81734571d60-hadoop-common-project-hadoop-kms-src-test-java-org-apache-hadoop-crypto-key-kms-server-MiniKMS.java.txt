HDFS-7006. Test encryption zones with KMS. (Anthony Young-Garner and tucu)

+import org.apache.commons.io.IOUtils;
+import org.apache.hadoop.crypto.key.kms.KMSRESTConstants;
+import java.io.FileOutputStream;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.util.UUID;
+    ClassLoader cl = Thread.currentThread().getContextClassLoader();
-      Configuration acls = new Configuration(false);
-      Writer writer = new FileWriter(aclsFile);
-      acls.writeXml(writer);
-      writer.close();
+      InputStream is = cl.getResourceAsStream("mini-kms-acls-default.xml");
+      OutputStream os = new FileOutputStream(aclsFile);
+      IOUtils.copy(is, os);
+      is.close();
+      os.close();
+      kms.setBoolean(KMSConfiguration.KEY_AUTHORIZATION_ENABLE, false);
-    ClassLoader cl = Thread.currentThread().getContextClassLoader();
-    URL url = cl.getResource("kms-webapp");
-    if (url == null) {
+
+    // we need to do a special handling for MiniKMS to work when in a dir and
+    // when in a JAR in the classpath thanks to Jetty way of handling of webapps
+    // when they are in the a DIR, WAR or JAR.
+    URL webXmlUrl = cl.getResource("kms-webapp/WEB-INF/web.xml");
+    if (webXmlUrl == null) {
-    WebAppContext context = new WebAppContext(url.getPath(), "/kms");
+    boolean webXmlInJar = webXmlUrl.getPath().contains(".jar!/");
+    String webappPath;
+    if (webXmlInJar) {
+      File webInf = new File("target/" + UUID.randomUUID().toString() +
+          "/kms-webapp/WEB-INF");
+      webInf.mkdirs();
+      new File(webInf, "web.xml").delete();
+      InputStream is = cl.getResourceAsStream("kms-webapp/WEB-INF/web.xml");
+      OutputStream os = new FileOutputStream(new File(webInf, "web.xml"));
+      IOUtils.copy(is, os);
+      is.close();
+      os.close();
+      webappPath = webInf.getParentFile().getAbsolutePath();
+    } else {
+      webappPath = cl.getResource("kms-webapp").getPath();
+    }
+    WebAppContext context = new WebAppContext(webappPath, "/kms");
+    if (webXmlInJar) {
+      context.setClassLoader(cl);
+    }

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 MOV60 INS60 INS25 INS60 INS25 INS39 INS43 INS59 INS42 INS8 INS8 MOV43 INS59 INS42 INS8 INS21 INS21 UPD42 INS32 UPD42 UPD42 INS32 INS42 INS42 INS60 INS21 INS21 INS60 INS60 INS21 INS21 INS21 INS21 INS21 INS42 INS14 INS21 UPD43 UPD43 INS32 INS32 INS42 INS42 INS45 INS32 INS42 INS45 INS43 INS59 INS32 INS32 INS43 INS59 INS43 INS59 INS32 INS32 INS32 INS7 INS7 MOV43 INS42 INS45 INS32 UPD42 UPD42 INS32 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 UPD42 INS42 INS42 INS42 INS42 INS40 INS9 UPD42 MOV42 MOV42 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS45 UPD43 INS43 INS27 INS43 INS42 INS45 INS42 INS42 INS45 INS43 INS14 INS32 INS42 MOV32 INS42 UPD42 INS42 INS45 INS32 INS45 INS42 INS42 INS43 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS42 INS42 DEL42 DEL43 DEL9 DEL14 DEL32 DEL45 DEL14