HADOOP-7380. Add client failover functionality to o.a.h.io.(ipc|retry). Contributed by Aaron T. Myers


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1144043 13f79535-47bb-0310-9956-ffa450edef68

-
+import java.io.IOException;
+
+import org.apache.hadoop.ipc.StandbyException;
-    failsTenTimesInvocationCount;
+    failsTenTimesInvocationCount,
+    succeedsOnceThenFailsCount,
+    succeedsOnceThenFailsIdempotentCount,
+    succeedsTenTimesThenFailsCount;
+  
+  private String identifier;
+  private TypeOfExceptionToFailWith exceptionToFailWith;
+  
+  public static enum TypeOfExceptionToFailWith {
+    UNRELIABLE_EXCEPTION,
+    STANDBY_EXCEPTION,
+    IO_EXCEPTION
+  }
+  
+  public UnreliableImplementation() {
+    this(null);
+  }
+  
+  public UnreliableImplementation(String identifier) {
+    this(identifier, TypeOfExceptionToFailWith.UNRELIABLE_EXCEPTION);
+  }
+  
+  public UnreliableImplementation(String identifier,
+      TypeOfExceptionToFailWith exceptionToFailWith) {
+    this.identifier = identifier;
+    this.exceptionToFailWith = exceptionToFailWith;
+  }
+  @Override
+  public String succeedsOnceThenFailsReturningString()
+      throws UnreliableException, IOException, StandbyException {
+    if (succeedsOnceThenFailsCount++ < 1) {
+      return identifier;
+    } else {
+      switch (exceptionToFailWith) {
+      case STANDBY_EXCEPTION:
+        throw new StandbyException(identifier);
+      case UNRELIABLE_EXCEPTION:
+        throw new UnreliableException(identifier);
+      case IO_EXCEPTION:
+        throw new IOException(identifier);
+      }
+      return null;
+    }
+  }
+
+  @Override
+  public String succeedsTenTimesThenFailsReturningString()
+      throws UnreliableException, IOException, StandbyException {
+    if (succeedsTenTimesThenFailsCount++ < 10) {
+      return identifier;
+    } else {
+      switch (exceptionToFailWith) {
+      case STANDBY_EXCEPTION:
+        throw new StandbyException(identifier);
+      case UNRELIABLE_EXCEPTION:
+        throw new UnreliableException(identifier);
+      case IO_EXCEPTION:
+        throw new IOException(identifier);
+      default:
+        throw new RuntimeException(identifier);
+      }
+    }
+  }
+
+  @Override
+  public String succeedsOnceThenFailsReturningStringIdempotent()
+      throws UnreliableException, StandbyException, IOException {
+    if (succeedsOnceThenFailsIdempotentCount++ < 1) {
+      return identifier;
+    } else {
+      switch (exceptionToFailWith) {
+      case STANDBY_EXCEPTION:
+        throw new StandbyException(identifier);
+      case UNRELIABLE_EXCEPTION:
+        throw new UnreliableException(identifier);
+      case IO_EXCEPTION:
+        throw new IOException(identifier);
+      default:
+        throw new RuntimeException(identifier);
+      }
+    }
+  }
+

INS26 INS26 INS40 INS40 INS23 INS23 INS71 INS31 INS31 INS31 INS31 INS31 INS31 INS59 INS59 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS83 INS42 INS72 INS72 INS72 INS83 INS42 INS8 INS83 INS42 INS44 INS8 INS83 INS42 INS44 INS44 INS8 INS78 INS83 INS43 INS42 INS43 INS43 INS43 INS8 INS78 INS83 INS43 INS42 INS43 INS43 INS43 INS8 INS78 INS83 INS43 INS42 INS43 INS43 INS43 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS17 INS43 INS42 INS17 INS43 INS42 INS43 INS42 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS25 INS42 INS42 INS42 INS42 INS42 INS25 INS42 INS42 INS42 INS42 INS42 INS25 INS33 INS42 INS42 INS40 INS42 INS42 INS7 INS7 INS27 INS8 INS8 INS27 INS8 INS8 INS27 INS8 INS8 INS22 INS42 INS22 INS42 INS37 INS34 INS41 INS50 INS41 INS37 INS34 INS41 INS50 INS37 INS34 INS41 INS50 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS49 INS53 INS49 INS53 INS49 INS53 INS33 INS42 INS42 INS42 INS49 INS53 INS49 INS53 INS49 INS53 INS49 INS53 INS42 INS42 INS42 INS49 INS53 INS49 INS53 INS49 INS53 INS49 INS53 INS42 INS14 INS42 INS14 INS42 INS14 INS42 INS14 INS42 INS14 INS42 INS14 INS14 INS42 INS14 INS42 INS14 INS42 INS14 INS14 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42