MAPREDUCE-778. Rumen Anonymizer. (Amar Kamat and Chris Douglas via amarrk)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1215141 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.mapreduce.JobID;
+import org.apache.hadoop.tools.rumen.datatypes.*;
-  String jobID;
-  String user;
+  JobID jobID;
+  UserName user;
-  String queue = null;
+  QueueName queue = null;
-  String jobName = null;
+  JobName jobName = null;
-  private Properties jobProperties = new Properties();
+  private JobProperties jobProperties = new JobProperties();
-    this.jobProperties = conf;
+    this.jobProperties = new JobProperties(conf);
-  public Properties getJobProperties() {
+  public JobProperties getJobProperties() {
-  @SuppressWarnings("unused")
-  public String getUser() {
+  public UserName getUser() {
-    this.user = user;
+    this.user = new UserName(user);
-  public String getJobID() {
+  public JobID getJobID() {
-    this.jobID = jobID;
+    this.jobID = JobID.forName(jobID);
-  public String getQueue() {
+  public QueueName getQueue() {
-    this.queue = queue;
+    this.queue = new QueueName(queue);
-  public String getJobName() {
+  public JobName getJobName() {
-    this.jobName = jobName;
+    this.jobName = new JobName(jobName);
-  private void compareJobProperties(Properties prop1, Properties prop2,
+  private void compareJobProperties(JobProperties jprop1, JobProperties jprop2,
-    if (prop1 == null && prop2 == null) {
+    if (jprop1 == null && jprop2 == null) {
-    if (prop1 == null || prop2 == null) {
-      throw new DeepInequalityException(eltname + " miscompared [null]", 
+    if (jprop1 == null || jprop2 == null) {
+      throw new DeepInequalityException(eltname + " miscompared", 
+    Properties prop1 = jprop1.getValue();
+    Properties prop2 = jprop2.getValue();
+    
-      Object v1 = entry.getValue();
-      Object v2 = prop2.get(entry.getKey());
-      if (v1 == null || v2 == null || !v1.equals(v2)) {
-        throw new DeepInequalityException(
-          eltname + " miscompared for value of key : " 
-            + entry.getKey().toString(), 
-          new TreePath(loc, eltname));
-      }
+      String v1 = entry.getValue().toString();
+      String v2 = prop2.get(entry.getKey()).toString();
+      compare1(v1, v2, new TreePath(loc, eltname), "key:" + entry.getKey());
+  private void compare1(DataType<String> c1, DataType<String> c2, TreePath loc, 
+                        String eltname) 
+  throws DeepInequalityException {
+    if (c1 == null && c2 == null) {
+      return;
+    }
+
+    if (c1 == null || c2 == null) {
+      throw new DeepInequalityException(eltname + " miscompared", 
+                                        new TreePath(loc, eltname));
+    }
+    TreePath dtPath = new TreePath(loc, eltname);
+    
+    if (!c1.getClass().getName().equals(c2.getClass().getName())) {
+      throw new DeepInequalityException(eltname + " miscompared", 
+                                        new TreePath(dtPath, "class"));
+    }
+    
+    compare1(c1.getValue(), c2.getValue(), dtPath, "value");
+  }
+  
-    compare1(jobID, other.jobID, loc, "jobID");
+    compare1(jobID.toString(), other.jobID.toString(), loc, "jobID");

INS26 INS26 INS40 INS40 INS31 UPD43 UPD43 INS43 INS43 UPD43 UPD43 UPD43 UPD43 INS43 INS43 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS8 UPD42 UPD42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS43 UPD42 INS43 UPD42 INS60 INS60 INS74 INS42 INS74 INS42 INS43 INS42 INS43 INS42 INS42 INS25 INS25 INS60 INS25 INS21 UPD43 INS42 INS42 MOV43 INS59 MOV43 INS59 INS43 MOV43 INS43 MOV43 INS42 INS42 INS27 INS8 INS27 INS8 INS43 INS59 INS38 INS8 INS32 UPD42 INS14 INS14 INS32 INS14 INS14 INS42 INS32 INS42 INS32 INS21 INS42 INS42 INS27 INS27 INS41 INS27 INS27 INS53 INS42 INS42 INS14 INS32 INS53 INS42 INS32 INS32 INS42 INS45 INS32 INS32 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS42 INS42 MOV43 MOV43 INS32 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS14 INS43 INS42 INS42 INS32 INS42 INS32 INS14 INS42 INS42 INS42 INS42 MOV42 INS42 MOV40 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 MOV42 MOV42 MOV14 MOV27 MOV43 INS27 INS14 INS42 INS32 INS42 INS32 INS42 INS43 INS27 INS14 UPD45 MOV32 INS42 MOV32 INS42 UPD45 MOV32 INS42 INS45 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS43 INS42 INS45 INS42 INS42 DEL42 DEL42 DEL45 DEL79 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL33 DEL27 DEL42 DEL33 DEL27 DEL27 DEL42 DEL32 DEL38 DEL27 DEL14 DEL53 DEL8 DEL25