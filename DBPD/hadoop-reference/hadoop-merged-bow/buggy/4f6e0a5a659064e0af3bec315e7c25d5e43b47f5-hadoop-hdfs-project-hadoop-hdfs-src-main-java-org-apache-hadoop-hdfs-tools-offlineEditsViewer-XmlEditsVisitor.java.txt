HDFS-3050. rework OEV to share more code with the NameNode. Contributed by Colin Patrick McCabe


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1309629 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.LinkedList;
+import java.io.OutputStream;
-import org.apache.hadoop.hdfs.tools.offlineImageViewer.DepthCounter;
+import org.apache.hadoop.hdfs.util.XMLUtils;
+import org.apache.hadoop.hdfs.server.namenode.FSEditLogOp;
+import org.xml.sax.ContentHandler;
+import org.xml.sax.SAXException;
+import org.xml.sax.helpers.AttributesImpl;
+
+import com.sun.org.apache.xml.internal.serialize.OutputFormat;
+import com.sun.org.apache.xml.internal.serialize.XMLSerializer;
-public class XmlEditsVisitor extends TextEditsVisitor {
-  final private LinkedList<EditsElement> tagQ =
-    new LinkedList<EditsElement>();
-
-  final private DepthCounter depthCounter = new DepthCounter();
+public class XmlEditsVisitor implements OfflineEditsVisitor {
+  private OutputStream out;
+  private ContentHandler contentHandler;
-   * @param tokenizer Input tokenizer
+   * @param printToScreen Mirror output to screen?
-  public XmlEditsVisitor(String filename, Tokenizer tokenizer)
-    throws IOException {
-
-    super(filename, tokenizer, false);
-  }
-
-  /**
-   * Create a processor that writes to the file named and may or may not
-   * also output to the screen, as specified.
-   *
-   * @param filename Name of file to write output to
-   * @param tokenizer Input tokenizer
-   * @param printToScreen Mirror output to screen? (ignored for binary)
-   */
-  public XmlEditsVisitor(String filename,
-    Tokenizer tokenizer,
-    boolean printToScreen) throws IOException {
-
-    super(filename, tokenizer, printToScreen);
+  public XmlEditsVisitor(OutputStream out)
+      throws IOException {
+    this.out = out;
+    OutputFormat outFormat = new OutputFormat("XML", "UTF-8", true);
+    outFormat.setIndenting(true);
+    outFormat.setIndent(2);
+    outFormat.setDoctype(null, null);
+    XMLSerializer serializer = new XMLSerializer(out, outFormat);
+    contentHandler = serializer.asContentHandler();
+    try {
+      contentHandler.startDocument();
+      contentHandler.startElement("", "", "EDITS", new AttributesImpl());
+    } catch (SAXException e) {
+      throw new IOException("SAX error: " + e.getMessage());
+    }
-  void start() throws IOException {
-    write("<?xml version=\"1.0\"?>\n");
+  public void start(int version) throws IOException {
+    try {
+      contentHandler.startElement("", "", "EDITS_VERSION", new AttributesImpl());
+      StringBuilder bld = new StringBuilder();
+      bld.append(version);
+      addString(bld.toString());
+      contentHandler.endElement("", "", "EDITS_VERSION");
+    }
+    catch (SAXException e) {
+      throw new IOException("SAX error: " + e.getMessage());
+    }
+  public void addString(String str) throws SAXException {
+    int slen = str.length();
+    char arr[] = new char[slen];
+    str.getChars(0, slen, arr, 0);
+    contentHandler.characters(arr, 0, slen);
+  }
+  
-  void finish() throws IOException {
-    super.finish();
-  }
-
-  /**
-   * Finish with error
-   */
-  @Override
-  void finishAbnormally() throws IOException {
-    write("\n<!-- Error processing EditLog file.  Exiting -->\n");
-    super.finishAbnormally();
-  }
-
-  /**
-   * Visit a Token
-   *
-   * @param value a Token to visit
-   */
-  @Override
-  Tokenizer.Token visit(Tokenizer.Token value) throws IOException {
-    writeTag(value.getEditsElement().toString(), value.toString());
-    return value;
-  }
-
-  /**
-   * Visit an enclosing element (element that cntains other elements)
-   *
-   * @param value a Token to visit
-   */
-  @Override
-  void visitEnclosingElement(Tokenizer.Token value) throws IOException {
-    printIndents();
-    write("<" + value.getEditsElement().toString() + ">\n");
-    tagQ.push(value.getEditsElement());
-    depthCounter.incLevel();
-  }
-
-  /**
-   * Leave enclosing element
-   */
-  @Override
-  void leaveEnclosingElement() throws IOException {
-    depthCounter.decLevel();
-    if(tagQ.size() == 0)
-      throw new IOException("Tried to exit non-existent enclosing element " +
-                "in EditLog file");
-
-    EditsElement element = tagQ.pop();
-    printIndents();
-    write("</" + element.toString() + ">\n");
-  }
-
-  /**
-   * Write an XML tag
-   *
-   * @param tag a tag name
-   * @param value a tag value
-   */
-  private void writeTag(String tag, String value) throws IOException {
-    printIndents();
-    if(value.length() > 0) {
-      write("<" + tag + ">" + value + "</" + tag + ">\n");
-    } else {
-      write("<" + tag + "/>\n");
-    }
-  }
-
-  // prepared values that printIndents is likely to use
-  final private static String [] indents = {
-     "",
-     "  ",
-     "    ",
-     "      ",
-     "        ",
-     "          ",
-     "            " };
-
-  /**
-   * Prints the leading spaces based on depth level
-   */
-  private void printIndents() throws IOException {
+  public void close(Throwable error) throws IOException {
-      write(indents[depthCounter.getLevel()]);
-    } catch (IndexOutOfBoundsException e) {
-      // unlikely needed so can be slow
-      for(int i = 0; i < depthCounter.getLevel(); i++)
-        write("  ");
+      contentHandler.endElement("", "", "EDITS");
+      if (error != null) {
+        String msg = error.getMessage();
+        XMLUtils.addSaxString(contentHandler, "ERROR",
+            (msg == null) ? "null" : msg);
+      }
+      contentHandler.endDocument();
-   
+    catch (SAXException e) {
+      throw new IOException("SAX error: " + e.getMessage());
+    }
+    out.close();
+  }
+
+  @Override
+  public void visitOp(FSEditLogOp op) throws IOException {
+    try {
+      op.outputToXml(contentHandler);
+    }
+    catch (SAXException e) {
+      throw new IOException("SAX error: " + e.getMessage());
+    }

INS26 INS26 INS26 INS26 INS26 INS26 UPD40 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 UPD43 INS31 INS31 INS31 UPD42 INS43 UPD43 MOV29 MOV83 MOV42 MOV44 MOV43 INS8 MOV29 MOV78 INS83 MOV39 UPD42 MOV42 INS44 MOV43 INS8 INS83 UPD42 MOV44 INS43 INS8 MOV29 MOV78 UPD83 MOV83 MOV39 UPD42 MOV42 MOV44 MOV43 INS8 MOV78 UPD83 UPD42 INS44 MOV43 UPD42 MOV42 INS42 UPD42 UPD42 UPD43 UPD42 INS21 INS60 INS21 INS21 INS21 INS60 INS21 INS54 INS39 INS42 INS54 UPD42 INS42 INS60 MOV60 MOV21 MOV21 INS43 INS42 INS54 INS21 INS43 INS42 UPD42 UPD66 UPD42 INS7 INS43 INS59 INS32 INS32 INS32 INS43 INS59 INS7 INS8 INS12 INS8 INS12 INS39 INS59 INS39 INS42 INS8 INS12 INS32 INS42 INS22 INS42 UPD42 MOV42 INS42 INS14 INS42 INS42 INS9 INS42 INS42 INS34 INS42 INS42 INS33 INS33 UPD42 MOV42 INS42 INS14 INS42 INS32 INS21 MOV21 INS44 INS8 MOV21 INS60 INS21 MOV21 INS21 INS44 INS8 INS42 INS32 UPD42 INS85 INS3 INS42 UPD42 INS34 INS42 INS42 INS34 UPD42 UPD42 MOV42 UPD42 MOV42 INS34 INS42 MOV21 INS25 MOV21 INS44 INS8 INS42 INS42 INS52 INS42 INS43 INS45 INS45 INS9 INS43 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS53 INS43 INS59 INS32 INS32 UPD43 MOV43 UPD42 MOV42 INS53 UPD42 MOV42 UPD42 MOV42 INS5 INS42 INS27 INS8 INS43 INS42 INS53 UPD43 INS53 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD42 INS42 UPD45 INS45 INS45 INS14 INS42 INS14 UPD42 INS42 UPD45 INS45 INS45 INS14 INS42 INS42 INS14 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS45 INS45 INS45 INS42 INS14 INS39 INS85 INS42 UPD42 INS45 INS45 INS45 INS42 INS33 INS60 MOV21 UPD42 INS42 UPD42 MOV42 INS14 UPD42 INS42 UPD42 MOV42 UPD42 INS14 INS43 MOV43 INS27 INS43 INS43 UPD42 MOV43 INS27 MOV43 INS59 MOV43 INS27 MOV43 INS27 INS42 INS45 INS32 INS42 INS42 UPD45 MOV45 INS32 INS42 INS32 UPD42 INS42 INS42 INS45 INS16 INS45 INS32 INS45 MOV32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS36 INS45 INS42 INS42 INS42 UPD42 UPD42 INS27 UPD42 MOV42 INS33 DEL83 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL83 DEL42 DEL43 DEL14 DEL42 DEL42 DEL42 DEL32 DEL32 DEL40 DEL43 DEL42 DEL44 DEL43 DEL42 DEL42 DEL9 DEL46 DEL8 DEL31 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL44 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL46 DEL8 DEL31 DEL39 DEL42 DEL8 DEL31 DEL39 DEL42 DEL42 DEL48 DEL21 DEL8 DEL31 DEL66 DEL65 DEL29 DEL42 DEL78 DEL42 DEL48 DEL21 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL42 DEL78 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL44 DEL42 DEL41 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL42 DEL78 DEL39 DEL42 DEL44 DEL42 DEL32 DEL21 DEL42 DEL32 DEL42 DEL32 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42 DEL42 DEL32 DEL45 DEL32 DEL45 DEL27 DEL42 DEL42 DEL32 DEL21 DEL32 DEL34 DEL27 DEL45 DEL45 DEL27 DEL14 DEL53 DEL25 DEL8 DEL42 DEL45 DEL42 DEL45 DEL45 DEL42 DEL45 DEL27 DEL45 DEL42 DEL45 DEL27 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL42 DEL43 DEL32 DEL34 DEL27 DEL8 DEL8 DEL25 DEL8 DEL31 DEL83 DEL83 DEL83 DEL43 DEL85 DEL5 DEL42 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL4 DEL59 DEL23 DEL66 DEL65 DEL29 DEL42 DEL42 DEL32 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL27 DEL42 DEL37 DEL42 DEL45 DEL32 DEL21 DEL24