Fixing Job History Server Configuration parsing. (Jason Lowe via asuresh)

+import com.ctc.wstx.api.ReaderConfig;
+import javax.xml.stream.XMLInputFactory;
+import org.apache.hadoop.security.UserGroupInformation;
+  private static boolean restrictSystemPropsDefault = false;
+  private boolean restrictSystemProps = restrictSystemPropsDefault;
+    private final boolean restrictParser;
-    
+
+    public Resource(Object resource, boolean useRestrictedParser) {
+      this(resource, resource.toString(), useRestrictedParser);
+    }
+
+      this(resource, name, getRestrictParserDefault(resource));
+    }
+
+    public Resource(Object resource, String name, boolean restrictParser) {
+      this.restrictParser = restrictParser;
-    
+
+    public boolean isParserRestricted() {
+      return restrictParser;
+    }
+
+
+    private static boolean getRestrictParserDefault(Object resource) {
+      if (resource instanceof String) {
+        return false;
+      }
+      UserGroupInformation user;
+      try {
+        user = UserGroupInformation.getCurrentUser();
+      } catch (IOException e) {
+        throw new RuntimeException("Unable to determine current user", e);
+      }
+      return user.getRealUser() != null;
+    }
-  
+
+      this.restrictSystemProps = other.restrictSystemProps;
+  public static void setRestrictSystemPropertiesDefault(boolean val) {
+    restrictSystemPropsDefault = val;
+  }
+
+  public void setRestrictSystemProperties(boolean val) {
+    this.restrictSystemProps = val;
+  }
+
+  public void addResource(String name, boolean restrictedParser) {
+    addResourceObject(new Resource(name, restrictedParser));
+  }
+
+  public void addResource(URL url, boolean restrictedParser) {
+    addResourceObject(new Resource(url, restrictedParser));
+  }
+
+  public void addResource(Path file, boolean restrictedParser) {
+    addResourceObject(new Resource(file, restrictedParser));
+  }
+
+  public void addResource(InputStream in, boolean restrictedParser) {
+    addResourceObject(new Resource(in, restrictedParser));
+  }
+
-  
+
+  public void addResource(InputStream in, String name,
+      boolean restrictedParser) {
+    addResourceObject(new Resource(in, name, restrictedParser));
+  }
+
-    addResourceObject(new Resource(conf.getProps()));
+    addResourceObject(new Resource(conf.getProps(), conf.restrictSystemProps));
+    restrictSystemProps |= resource.isParserRestricted();
-      try {
-        if (var.startsWith("env.") && 4 < var.length()) {
-          String v = var.substring(4);
-          int i = 0;
-          for (; i < v.length(); i++) {
-            char c = v.charAt(i);
-            if (c == ':' && i < v.length() - 1 && v.charAt(i + 1) == '-') {
-              val = getenv(v.substring(0, i));
-              if (val == null || val.length() == 0) {
-                val = v.substring(i + 2);
+      if (!restrictSystemProps) {
+        try {
+          if (var.startsWith("env.") && 4 < var.length()) {
+            String v = var.substring(4);
+            int i = 0;
+            for (; i < v.length(); i++) {
+              char c = v.charAt(i);
+              if (c == ':' && i < v.length() - 1 && v.charAt(i + 1) == '-') {
+                val = getenv(v.substring(0, i));
+                if (val == null || val.length() == 0) {
+                  val = v.substring(i + 2);
+                }
+                break;
+              } else if (c == '-') {
+                val = getenv(v.substring(0, i));
+                if (val == null) {
+                  val = v.substring(i + 1);
+                }
+                break;
-              break;
-            } else if (c == '-') {
-              val = getenv(v.substring(0, i));
-              if (val == null) {
-                val = v.substring(i + 1);
-              }
-              break;
+            if (i == v.length()) {
+              val = getenv(v);
+            }
+          } else {
+            val = getProperty(var);
-          if (i == v.length()) {
-            val = getenv(v);
-          }
-        } else {
-          val = getProperty(var);
+        } catch (SecurityException se) {
+          LOG.warn("Unexpected SecurityException in Configuration", se);
-      } catch(SecurityException se) {
-        LOG.warn("Unexpected SecurityException in Configuration", se);
+  public void setRestrictSystemProps(boolean val) {
+    this.restrictSystemProps = val;
+  }
+
-  private XMLStreamReader parse(URL url)
+  private XMLStreamReader parse(URL url, boolean restricted)
-    return parse(connection.getInputStream(), url.toString());
+    return parse(connection.getInputStream(), url.toString(), restricted);
-  private XMLStreamReader parse(InputStream is, String systemIdStr)
-      throws IOException, XMLStreamException {
+  private XMLStreamReader parse(InputStream is, String systemIdStr,
+      boolean restricted) throws IOException, XMLStreamException {
-    return XML_INPUT_FACTORY.createSR(XML_INPUT_FACTORY.createPrivateConfig(),
-        systemId, StreamBootstrapper.getInstance(null, systemId, is), false,
-        true);
+    ReaderConfig readerConfig = XML_INPUT_FACTORY.createPrivateConfig();
+    if (restricted) {
+      readerConfig.setProperty(XMLInputFactory.SUPPORT_DTD, false);
+    }
+    return XML_INPUT_FACTORY.createSR(readerConfig, systemId,
+        StreamBootstrapper.getInstance(null, systemId, is), false, true);
-        loadResource(properties, new Resource(resource), quiet);
+        loadResource(properties, new Resource(resource, false), quiet);
+      boolean isRestricted = wrapper.isParserRestricted();
-        reader = (XMLStreamReader2)parse((URL)resource);
+        reader = (XMLStreamReader2)parse((URL)resource, isRestricted);
-        reader = (XMLStreamReader2)parse(url);
+        reader = (XMLStreamReader2)parse(url, isRestricted);
-              new FileInputStream(file)), ((Path)resource).toString());
+              new FileInputStream(file)), ((Path)resource).toString(),
+              isRestricted);
-        reader = (XMLStreamReader2)parse((InputStream)resource, null);
+        reader = (XMLStreamReader2)parse((InputStream)resource, null,
+            isRestricted);
+            if (isRestricted) {
+              throw new RuntimeException("Error parsing resource " + wrapper
+                  + ": XInclude is not supported for restricted resources");
+            }
-        return new Resource(toAddTo, name);
+        return new Resource(toAddTo, name, wrapper.isParserRestricted());

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS83 INS39 INS59 INS83 INS39 INS59 INS23 INS31 INS31 INS31 INS31 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS44 INS44 INS42 INS9 INS42 INS42 INS83 INS83 INS39 INS59 INS83 INS42 INS44 INS44 INS8 INS83 INS42 INS44 INS44 INS8 INS44 INS83 INS39 INS42 INS8 INS83 INS83 INS39 INS42 INS44 INS8 INS39 INS42 INS21 INS39 INS42 INS21 INS43 INS42 INS39 INS42 INS21 INS43 INS42 INS39 INS42 INS21 INS43 INS42 INS39 INS42 INS21 INS43 INS42 INS39 INS42 INS21 INS43 INS42 INS43 INS42 INS39 INS42 INS21 INS21 INS39 INS42 INS21 INS39 INS42 INS39 INS42 INS60 INS25 INS42 INS43 INS42 INS39 INS42 INS17 INS43 INS42 INS43 INS42 INS17 INS39 INS42 INS21 INS41 INS43 INS42 INS25 INS60 INS54 INS41 INS7 INS7 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS7 INS7 INS43 INS59 INS42 INS8 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS7 INS42 INS42 INS62 INS8 INS43 INS59 INS8 INS12 INS27 INS21 INS42 INS42 INS22 INS42 INS42 INS14 INS42 INS14 INS42 INS14 INS42 INS14 INS42 INS14 INS42 INS32 INS25 INS22 INS42 INS42 INS42 INS42 MOV32 INS21 INS42 INS60 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS43 INS41 INS42 INS42 INS21 INS44 INS8 INS32 INS33 INS7 INS52 INS42 INS43 INS42 INS42 INS43 INS42 INS42 INS43 INS42 INS42 INS43 INS42 INS42 INS43 INS42 INS42 INS42 INS40 INS42 INS42 INS38 INS8 INS52 INS42 INS32 INS39 INS59 INS52 INS42 INS42 INS9 INS7 INS43 INS42 INS53 INS42 INS42 INS22 INS40 INS42 INS42 INS42 INS42 INS42 INS42 MOV54 INS42 INS42 INS40 INS9 INS42 INS32 INS42 INS32 INS42 INS14 INS52 INS42 INS42 INS42 INS42 INS42 INS43 INS45 INS42 INS25 INS32 INS42 INS9 INS42 INS8 INS42 INS42 INS42 INS53 INS42 INS14 INS43 INS27 INS42 INS42 INS45 INS42 INS45 INS42