YARN-905. Add state filters to nodes CLI (Wei Yan via Sandy Ryza)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1517083 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashSet;
+import java.util.Set;
+import org.apache.commons.cli.Option;
-  private static final String NODES_PATTERN = "%16s\t%10s\t%17s\t%18s" +
+  private static final String NODES_PATTERN = "%16s\t%15s\t%17s\t%18s" +
+  private static final String NODE_STATE_CMD = "states";
+  private static final String NODE_ALL = "all";
+
-    opts.addOption(LIST_CMD, false, "Lists all the nodes in the RUNNING state.");
+    opts.addOption(LIST_CMD, false, "List all running nodes. " +
+        "Supports optional use of --states to filter nodes " +
+        "based on node state, all --all to list all nodes.");
+    Option nodeStateOpt = new Option(NODE_STATE_CMD, true,
+        "Works with -list to filter nodes based on their states.");
+    nodeStateOpt.setValueSeparator(',');
+    nodeStateOpt.setArgs(Option.UNLIMITED_VALUES);
+    nodeStateOpt.setArgName("Comma-separated list of node states");
+    opts.addOption(nodeStateOpt);
+    Option allOpt = new Option(NODE_ALL, false,
+        "Works with -list to list all nodes.");
+    opts.addOption(allOpt);
-      listClusterNodes();
+      Set<NodeState> nodeStates = new HashSet<NodeState>();
+      if (cliParser.hasOption(NODE_ALL)) {
+        for (NodeState state : NodeState.values()) {
+          nodeStates.add(state);
+        }
+      } else if (cliParser.hasOption(NODE_STATE_CMD)) {
+        String[] types = cliParser.getOptionValues(NODE_STATE_CMD);
+        if (types != null) {
+          for (String type : types) {
+            if (!type.trim().isEmpty()) {
+              nodeStates.add(NodeState.valueOf(type.trim().toUpperCase()));
+            }
+          }
+        }
+      } else {
+        nodeStates.add(NodeState.RUNNING);
+      }
+      listClusterNodes(nodeStates);
-   * Lists all the nodes present in the cluster
+   * Lists the nodes matching the given node states
+   * @param nodeStates
-  private void listClusterNodes() throws YarnException, IOException {
+  private void listClusterNodes(Set<NodeState> nodeStates) 
+            throws YarnException, IOException {
-    List<NodeReport> nodesReport = client.getNodeReports(NodeState.RUNNING);
+    List<NodeReport> nodesReport = client.getNodeReports(
+                                       nodeStates.toArray(new NodeState[0]));

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS44 INS42 INS42 INS45 INS42 INS42 INS45 INS60 INS21 INS21 INS21 INS21 INS60 INS21 INS65 INS74 INS42 UPD45 INS43 INS59 INS32 INS32 INS32 INS32 INS43 INS59 INS32 UPD66 INS42 INS43 INS43 INS27 INS42 INS42 INS14 INS42 INS42 INS13 INS42 INS42 INS40 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS45 INS45 INS45 INS43 INS42 INS9 INS45 INS43 INS42 INS9 INS45 INS60 INS25 INS32 INS42 INS42 INS74 INS59 INS32 INS8 INS25 INS42 INS42 INS3 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS70 INS32 INS8 INS8 INS42 INS5 INS34 INS42 INS42 INS74 INS44 INS32 INS8 INS42 INS42 INS42 INS60 INS25 INS21 INS43 INS85 INS43 INS43 INS43 INS42 INS42 INS42 INS21 INS5 INS59 INS27 INS8 INS32 INS42 INS42 INS42 INS42 INS32 INS43 INS85 INS42 INS32 INS42 INS33 INS70 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS44 INS42 INS8 INS43 INS42 INS25 INS42 INS38 INS8 INS32 INS21 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS42 DEL45 DEL40