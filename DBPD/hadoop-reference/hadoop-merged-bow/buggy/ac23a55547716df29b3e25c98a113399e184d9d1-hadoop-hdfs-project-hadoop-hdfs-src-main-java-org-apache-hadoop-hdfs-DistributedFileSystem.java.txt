Merge HDFS-2006 HDFS XAttrs branch to Trunk


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596575 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Map;
+import org.apache.hadoop.fs.XAttrSetFlag;
+  
+  @Override
+  public void setXAttr(Path path, final String name, final byte[] value, 
+      final EnumSet<XAttrSetFlag> flag) throws IOException {
+    Path absF = fixRelativePart(path);
+    new FileSystemLinkResolver<Void>() {
+
+      @Override
+      public Void doCall(final Path p) throws IOException {
+        dfs.setXAttr(getPathName(p), name, value, flag);
+        return null;
+      }
+
+      @Override
+      public Void next(final FileSystem fs, final Path p) throws IOException {
+        fs.setXAttr(p, name, value, flag);
+        return null;
+      }      
+    }.resolve(this, absF);
+  }
+  
+  @Override
+  public byte[] getXAttr(Path path, final String name) throws IOException {
+    final Path absF = fixRelativePart(path);
+    return new FileSystemLinkResolver<byte[]>() {
+      @Override
+      public byte[] doCall(final Path p) throws IOException {
+        return dfs.getXAttr(getPathName(p), name);
+      }
+      @Override
+      public byte[] next(final FileSystem fs, final Path p)
+        throws IOException, UnresolvedLinkException {
+        return fs.getXAttr(p, name);
+      }
+    }.resolve(this, absF);
+  }
+  
+  @Override
+  public Map<String, byte[]> getXAttrs(Path path) throws IOException {
+    final Path absF = fixRelativePart(path);
+    return new FileSystemLinkResolver<Map<String, byte[]>>() {
+      @Override
+      public Map<String, byte[]> doCall(final Path p) throws IOException {
+        return dfs.getXAttrs(getPathName(p));
+      }
+      @Override
+      public Map<String, byte[]> next(final FileSystem fs, final Path p)
+        throws IOException, UnresolvedLinkException {
+        return fs.getXAttrs(p);
+      }
+    }.resolve(this, absF);
+  }
+  
+  @Override
+  public Map<String, byte[]> getXAttrs(Path path, final List<String> names) 
+      throws IOException {
+    final Path absF = fixRelativePart(path);
+    return new FileSystemLinkResolver<Map<String, byte[]>>() {
+      @Override
+      public Map<String, byte[]> doCall(final Path p) throws IOException {
+        return dfs.getXAttrs(getPathName(p), names);
+      }
+      @Override
+      public Map<String, byte[]> next(final FileSystem fs, final Path p)
+        throws IOException, UnresolvedLinkException {
+        return fs.getXAttrs(p, names);
+      }
+    }.resolve(this, absF);
+  }
+  
+  @Override
+  public void removeXAttr(Path path, final String name) throws IOException {
+    Path absF = fixRelativePart(path);
+    new FileSystemLinkResolver<Void>() {
+      @Override
+      public Void doCall(final Path p) throws IOException {
+        dfs.removeXAttr(getPathName(p), name);
+        return null;
+      }
+
+      @Override
+      public Void next(final FileSystem fs, final Path p) throws IOException {
+        fs.removeXAttr(p, name);
+        return null;
+      }
+    }.resolve(this, absF);
+  }

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS78 INS83 INS5 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS74 INS42 INS44 INS43 INS8 INS78 INS83 INS74 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS42 INS43 INS42 INS83 INS43 INS42 INS83 INS5 INS42 INS83 INS74 INS42 INS42 INS60 INS21 INS42 INS39 INS85 INS43 INS42 INS83 INS43 INS42 INS42 INS60 INS41 INS42 INS43 INS43 INS5 INS43 INS42 INS42 INS60 INS41 INS42 INS43 INS43 INS5 INS43 INS42 INS83 INS74 INS42 INS42 INS60 INS41 INS42 INS43 INS42 INS83 INS43 INS42 INS42 INS60 INS21 INS42 INS42 INS39 INS85 INS43 INS43 INS43 INS59 INS32 INS42 INS42 INS83 INS43 INS59 INS32 INS42 INS42 INS39 INS85 INS42 INS83 INS43 INS59 INS32 INS42 INS42 INS39 INS85 INS42 INS43 INS43 INS83 INS43 INS59 INS32 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS32 INS14 INS42 INS52 INS42 INS42 INS42 INS32 INS14 INS42 INS52 INS42 INS42 INS42 INS32 INS14 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS32 INS14 INS42 INS52 INS42 INS42 INS42 INS32 INS14 INS42 INS52 INS42 INS42 INS42 INS74 INS1 INS42 INS42 INS74 INS1 INS42 INS42 INS74 INS1 INS42 INS42 INS74 INS1 INS42 INS42 INS74 INS1 INS43 INS43 INS31 INS31 INS43 INS5 INS31 INS31 INS43 INS74 INS31 INS31 INS43 INS74 INS31 INS31 INS43 INS43 INS31 INS31 INS42 INS42 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS42 INS39 INS85 INS78 INS83 INS5 INS42 INS44 INS43 INS8 INS78 INS83 INS5 INS42 INS44 INS44 INS43 INS43 INS8 INS42 INS43 INS43 INS5 INS78 INS83 INS74 INS42 INS44 INS43 INS8 INS78 INS83 INS74 INS42 INS44 INS44 INS43 INS43 INS8 INS42 INS43 INS43 INS5 INS78 INS83 INS74 INS42 INS44 INS43 INS8 INS78 INS83 INS74 INS42 INS44 INS44 INS43 INS43 INS8 INS42 INS42 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS42 INS42 INS83 INS43 INS42 INS42 INS21 INS41 INS42 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS42 INS21 INS41 INS42 INS39 INS85 INS83 INS43 INS42 INS42 INS41 INS42 INS39 INS85 INS83 INS43 INS42 INS83 INS43 INS42 INS42 INS42 INS41 INS42 INS42 INS39 INS85 INS42 INS43 INS43 INS5 INS83 INS43 INS42 INS42 INS41 INS42 INS43 INS43 INS5 INS83 INS43 INS42 INS83 INS43 INS42 INS42 INS42 INS41 INS42 INS42 INS39 INS85 INS42 INS43 INS43 INS5 INS83 INS43 INS42 INS42 INS41 INS42 INS43 INS43 INS5 INS83 INS43 INS42 INS83 INS43 INS42 INS42 INS42 INS41 INS42 INS42 INS83 INS43 INS42 INS42 INS21 INS41 INS42 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS42 INS21 INS41 INS42 INS32 INS33 INS42 INS42 INS32 INS33 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS39 INS85 INS42 INS32 INS42 INS42 INS39 INS85 INS42 INS42 INS32 INS42 INS42 INS39 INS85 INS42 INS32 INS42 INS42 INS39 INS85 INS42 INS42 INS32 INS42 INS32 INS33 INS42 INS42 INS32 INS33 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42