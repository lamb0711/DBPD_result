HDFS-2594. Support getDelegationTokens and createSymlink in WebHDFS.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212299 13f79535-47bb-0310-9956-ffa450edef68

+  /** Convert a Token[] to a JSON array. */
+  private static Object[] toJsonArray(final Token<? extends TokenIdentifier>[] array
+      ) throws IOException {
+    if (array == null) {
+      return null;
+    } else if (array.length == 0) {
+      return EMPTY_OBJECT_ARRAY;
+    } else {
+      final Object[] a = new Object[array.length];
+      for(int i = 0; i < array.length; i++) {
+        a[i] = toJsonMap(array[i]);
+      }
+      return a;
+    }
+  }
+
+  /** Convert a token object to a JSON string. */
+  public static String toJsonString(final Token<? extends TokenIdentifier>[] tokens
+      ) throws IOException {
+    if (tokens == null) {
+      return null;
+    }
+
+    final Map<String, Object> m = new TreeMap<String, Object>();
+    m.put(Token.class.getSimpleName(), toJsonArray(tokens));
+    return toJsonString(Token.class.getSimpleName() + "s", m);
+  }
+
+  /** Convert an Object[] to a List<Token<?>>.  */
+  private static List<Token<?>> toTokenList(final Object[] objects) throws IOException {
+    if (objects == null) {
+      return null;
+    } else if (objects.length == 0) {
+      return Collections.emptyList();
+    } else {
+      final List<Token<?>> list = new ArrayList<Token<?>>(objects.length);
+      for(int i = 0; i < objects.length; i++) {
+        list.add(toToken((Map<?, ?>)objects[i]));
+      }
+      return list;
+    }
+  }
+
+  /** Convert a JSON map to a List<Token<?>>. */
+  public static List<Token<?>> toTokenList(final Map<?, ?> json) throws IOException {
+    if (json == null) {
+      return null;
+    }
+
+    final Map<?, ?> m = (Map<?, ?>)json.get(Token.class.getSimpleName() + "s");
+    return toTokenList((Object[])m.get(Token.class.getSimpleName()));
+  }
+

INS31 INS31 INS31 INS31 INS29 INS83 INS83 INS5 INS42 INS44 INS43 INS8 INS29 INS83 INS83 INS43 INS42 INS44 INS43 INS8 INS29 INS83 INS83 INS74 INS42 INS44 INS43 INS8 INS29 INS83 INS83 INS74 INS42 INS44 INS43 INS8 INS65 INS43 INS85 INS83 INS5 INS42 INS42 INS25 INS65 INS42 INS83 INS5 INS42 INS42 INS25 INS60 INS21 INS41 INS65 INS43 INS74 INS83 INS5 INS42 INS42 INS25 INS65 INS43 INS74 INS83 INS74 INS42 INS42 INS25 INS60 INS41 INS66 INS42 INS74 INS85 INS27 INS8 INS25 INS66 INS74 INS85 INS27 INS8 INS83 INS74 INS59 INS32 INS32 INS66 INS42 INS43 INS76 INS43 INS85 INS27 INS8 INS25 INS66 INS42 INS43 INS76 INS43 INS76 INS76 INS27 INS8 INS83 INS74 INS59 INS32 INS43 INS76 INS42 INS33 INS41 INS27 INS8 INS8 INS43 INS76 INS42 INS33 INS41 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS32 INS32 INS42 INS27 INS42 INS42 INS42 INS42 INS33 INS41 INS27 INS8 INS8 INS42 INS42 INS42 INS33 INS41 INS43 INS76 INS76 INS42 INS11 INS42 INS11 INS42 INS43 INS33 INS40 INS34 INS41 INS60 INS24 INS41 INS42 INS43 INS33 INS42 INS42 INS42 INS74 INS57 INS42 INS42 INS42 INS32 INS45 INS33 INS40 INS34 INS41 INS60 INS24 INS41 INS33 INS42 INS74 INS32 INS5 INS32 INS42 INS42 INS83 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS42 INS43 INS43 INS43 INS43 INS57 INS42 INS32 INS83 INS74 INS59 INS58 INS27 INS37 INS8 INS42 INS43 INS76 INS76 INS42 INS42 INS27 INS43 INS85 INS42 INS42 INS32 INS43 INS85 INS42 INS3 INS39 INS59 INS42 INS40 INS42 INS21 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS43 INS74 INS42 INS14 INS39 INS59 INS42 INS40 INS42 INS21 INS42 INS32 INS45 INS42 INS57 INS42 INS42 INS5 INS40 INS42 INS34 INS7 INS42 INS42 INS43 INS76 INS74 INS40 INS42 INS34 INS32 INS57 INS42 INS43 INS43 INS85 INS2 INS32 INS42 INS43 INS74 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS2 INS42 INS43 INS76 INS42 INS11 INS42 INS42 INS42 INS42 INS74 INS2 INS43 INS76 INS76 INS42 INS42 INS42