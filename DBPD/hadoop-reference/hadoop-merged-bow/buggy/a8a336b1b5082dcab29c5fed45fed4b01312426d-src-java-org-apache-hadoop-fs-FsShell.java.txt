HADOOP-7285. Refactor the test command to conform to new FsCommand class. Contributed by Daryn Sharp.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1102861 13f79535-47bb-0310-9956-ffa450edef68

-   * Check file types.
-   */
-  int test(String argv[], int i) throws IOException {
-    if (!argv[i].startsWith("-") || argv[i].length() > 2)
-      throw new IOException("Not a flag: " + argv[i]);
-    char flag = argv[i].toCharArray()[1];
-    PathData item = new PathData(argv[++i], getConf());
-    
-    if ((flag != 'e') && !item.exists) { 
-      // TODO: it's backwards compat, but why is this throwing an exception?
-      // it's not like the shell test cmd
-      throw new PathNotFoundException(item.toString());
-    }
-    switch(flag) {
-      case 'e':
-        return item.exists ? 0 : 1;
-      case 'z':
-        return (item.stat.getLen() == 0) ? 0 : 1;
-      case 'd':
-        return item.stat.isDirectory() ? 0 : 1;
-      default:
-        throw new IOException("Unknown flag: " + flag);
-    }
-  }
-
-  /**
-      "[-report]\n\t" +
-      "[-test -[ezd] <path>]";
+      "[-report]";
-    String test = "-test -[ezd] <path>: If file { exists, has zero length, is a directory\n" +
-      "\t\tthen return 0, else return 1.\n";
-
-    } else if ("test".equals(cmd)) {
-      System.out.println(test);
-      System.out.println(test);
-    } else if ("-test".equals(cmd)) {
-      System.err.println("Usage: java FsShell" +
-                         " [-test -[ezd] <path>]");
-      System.err.println("           [-test -[ezd] <path>]");
-    if ("-put".equals(cmd) || "-test".equals(cmd) ||
+    if ("-put".equals(cmd) ||
-      } else if ("-test".equals(cmd)) {
-        exitCode = test(argv, i);
-
-  /**
-   * Accumulate exceptions if there is any.  Throw them at last.
-   */
-  private abstract class DelayedExceptionThrowing {
-    abstract void process(Path p, FileSystem srcFs) throws IOException;
-
-    final void globAndProcess(Path srcPattern, FileSystem srcFs
-        ) throws IOException {
-      List<IOException> exceptions = new ArrayList<IOException>();
-      for(Path p : FileUtil.stat2Paths(srcFs.globStatus(srcPattern), 
-                                       srcPattern))
-        try { process(p, srcFs); } 
-        catch(IOException ioe) { exceptions.add(ioe); }
-    
-      if (!exceptions.isEmpty())
-        if (exceptions.size() == 1)
-          throw exceptions.get(0);
-        else 
-          throw new IOException("Multiple IOExceptions: " + exceptions);
-    }
-  }
-
-
+  

MOV25 MOV25 MOV27 MOV8 MOV27 MOV8 MOV32 MOV8 MOV32 MOV8 MOV25 UPD45 MOV32 MOV8 MOV32 MOV8 MOV27 MOV8 MOV32 MOV8 MOV32 MOV8 MOV27 MOV8 MOV32 MOV8 MOV27 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV27 MOV8 MOV32 MOV8 MOV27 MOV8 MOV32 MOV8 MOV32 MOV8 MOV27 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 MOV32 MOV8 DEL66 DEL65 DEL29 DEL39 DEL42 DEL42 DEL43 DEL42 DEL85 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL2 DEL42 DEL45 DEL32 DEL38 DEL42 DEL42 DEL2 DEL42 DEL32 DEL34 DEL27 DEL27 DEL42 DEL43 DEL45 DEL42 DEL42 DEL2 DEL27 DEL14 DEL53 DEL25 DEL39 DEL42 DEL42 DEL42 DEL2 DEL42 DEL32 DEL34 DEL2 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL38 DEL2 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL13 DEL27 DEL36 DEL40 DEL38 DEL27 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL25 DEL42 DEL13 DEL49 DEL40 DEL34 DEL34 DEL16 DEL41 DEL13 DEL49 DEL40 DEL42 DEL32 DEL34 DEL27 DEL36 DEL34 DEL34 DEL16 DEL41 DEL13 DEL49 DEL40 DEL42 DEL32 DEL34 DEL34 DEL16 DEL41 DEL49 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL50 DEL8 DEL31 DEL45 DEL42 DEL43 DEL42 DEL45 DEL45 DEL27 DEL59 DEL60 DEL45 DEL42 DEL42 DEL32 DEL40 DEL42 DEL42 DEL32 DEL21 DEL8 DEL40 DEL42 DEL42 DEL32 DEL21 DEL25 DEL45 DEL42 DEL42 DEL32 DEL40 DEL42 DEL45 DEL45 DEL27 DEL32 DEL21 DEL8 DEL40 DEL42 DEL45 DEL32 DEL21 DEL25 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL70 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL32 DEL34 DEL27 DEL42 DEL42 DEL34 DEL32 DEL53 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL25 DEL25 DEL8 DEL31 DEL55