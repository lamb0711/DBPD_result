HADOOP-6761. The Trash Emptier has the ability to run more frequently.
(Dmytro Molkov via dhruba)



git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@945439 13f79535-47bb-0310-9956-ffa450edef68

+import static org.apache.hadoop.fs.CommonConfigurationKeys.*;
-  private static final Path HOMES = new Path("/user/");
+  
-  private static final DateFormat CHECKPOINT = new SimpleDateFormat("yyMMddHHmm");
+  private static final DateFormat CHECKPOINT = new SimpleDateFormat("yyMMddHHmmss");
-  private final long interval;
+  private final long deletionInterval;
+  private final Path homesParent;
+    this.homesParent = fs.getHomeDirectory().getParent();
-    this.interval = conf.getLong("fs.trash.interval", 60) * MSECS_PER_MINUTE;
+    this.deletionInterval = (long) (conf.getFloat(FS_TRASH_INTERVAL_KEY,
+                                         FS_TRASH_INTERVAL_DEFAULT) *
+                                MSECS_PER_MINUTE);
+    this.homesParent = home.getParent();
-    this.interval = conf.getLong("fs.trash.interval", 60) * MSECS_PER_MINUTE;
+    this.deletionInterval = (long) (conf.getFloat(FS_TRASH_INTERVAL_KEY,
+                                         FS_TRASH_INTERVAL_DEFAULT) *
+                                MSECS_PER_MINUTE);
-    if (interval == 0)
+    if (deletionInterval == 0)
-      if ((now - interval) > time) {
+      if ((now - deletionInterval) > time) {
-    private long interval;
+    private long emptierInterval;
-      this.interval = conf.getLong("fs.trash.interval", 0) * MSECS_PER_MINUTE;
+      this.emptierInterval = (long) (conf.getFloat(FS_TRASH_CHECKPOINT_INTERVAL_KEY,
+                                     FS_TRASH_CHECKPOINT_INTERVAL_DEFAULT) *
+                                     MSECS_PER_MINUTE);
+      if (this.emptierInterval > deletionInterval ||
+          this.emptierInterval == 0) {
+        LOG.warn("The configured interval for checkpoint is " +
+                 this.emptierInterval + " minutes." +
+                 " Using interval of " + deletionInterval +
+                 " minutes that is used for deletion instead");
+        this.emptierInterval = deletionInterval;
+      }
-      if (interval == 0)
+      if (emptierInterval == 0)
-
-        end = ceiling(now, interval);
+        end = ceiling(now, emptierInterval);
-          
+
-              homes = fs.listStatus(HOMES);         // list all home dirs
+              homes = fs.listStatus(homesParent);         // list all home dirs

INS26 MOV23 INS40 INS39 MOV43 UPD42 UPD42 INS21 INS21 UPD45 INS7 INS7 UPD42 INS25 INS22 INS32 INS11 INS22 INS32 INS11 UPD42 INS27 INS8 INS52 INS42 INS32 INS42 UPD42 INS39 INS36 INS52 INS42 INS42 INS42 UPD42 INS39 INS36 INS11 INS27 INS27 INS21 INS21 UPD42 INS42 INS42 INS27 INS27 UPD42 INS39 INS36 INS22 INS42 INS22 INS34 INS32 INS7 MOV32 MOV42 MOV32 MOV42 INS27 INS52 INS42 INS52 INS42 INS42 INS42 INS27 INS22 INS42 UPD42 INS42 INS42 UPD42 INS42 INS42 UPD42 MOV32 MOV42 INS45 INS22 INS45 INS45 INS42 INS45 INS52 INS42 UPD42 UPD42 INS42 INS42 INS52 INS42 UPD42 DEL83 DEL42 DEL43 DEL45 DEL14 DEL39 DEL45 DEL34 DEL27 DEL45 DEL34 DEL27 DEL45 DEL34 DEL27