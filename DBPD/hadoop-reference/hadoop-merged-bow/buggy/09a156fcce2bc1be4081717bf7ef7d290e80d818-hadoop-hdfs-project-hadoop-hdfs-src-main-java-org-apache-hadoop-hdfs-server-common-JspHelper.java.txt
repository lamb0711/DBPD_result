HDFS-2539. Support doAs and GETHOMEDIRECTORY in webhdfs.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1200731 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.web.resources.DoAsParam;
+import org.apache.hadoop.security.authorize.AuthorizationException;
+import org.apache.hadoop.security.authorize.ProxyUsers;
+    final String doAsUserFromQuery = request.getParameter(DoAsParam.NAME);
-      final String user = request.getRemoteUser();
+      final String remoteUser = request.getRemoteUser();
-        checkUsername(ugi.getShortUserName(), usernameFromQuery);
-        checkUsername(ugi.getShortUserName(), user);
+        if (ugi.getRealUser() == null) {
+          //non-proxy case
+          checkUsername(ugi.getShortUserName(), usernameFromQuery);
+          checkUsername(null, doAsUserFromQuery);
+        } else {
+          //proxy case
+          checkUsername(ugi.getRealUser().getShortUserName(), usernameFromQuery);
+          checkUsername(ugi.getShortUserName(), doAsUserFromQuery);
+          ProxyUsers.authorize(ugi, request.getRemoteAddr(), conf);
+        }
-        if(user == null) {
+        if(remoteUser == null) {
-        ugi = UserGroupInformation.createRemoteUser(user);
-        checkUsername(ugi.getShortUserName(), usernameFromQuery);
+        final UserGroupInformation realUgi = UserGroupInformation.createRemoteUser(remoteUser);
+        checkUsername(realUgi.getShortUserName(), usernameFromQuery);
-        ugi.setAuthenticationMethod(secureAuthMethod);
+        realUgi.setAuthenticationMethod(secureAuthMethod);
+        ugi = initUGI(realUgi, doAsUserFromQuery, request, true, conf);
-      ugi = usernameFromQuery == null?
+      final UserGroupInformation realUgi = usernameFromQuery == null?
-      ugi.setAuthenticationMethod(AuthenticationMethod.SIMPLE);
+      realUgi.setAuthenticationMethod(AuthenticationMethod.SIMPLE);
+      ugi = initUGI(realUgi, doAsUserFromQuery, request, false, conf);
+  private static UserGroupInformation initUGI(final UserGroupInformation realUgi,
+      final String doAsUserFromQuery, final HttpServletRequest request,
+      final boolean isSecurityEnabled, final Configuration conf
+      ) throws AuthorizationException {
+    final UserGroupInformation ugi;
+    if (doAsUserFromQuery == null) {
+      //non-proxy case
+      ugi = realUgi;
+    } else {
+      //proxy case
+      ugi = UserGroupInformation.createProxyUser(doAsUserFromQuery, realUgi);
+      ugi.setAuthenticationMethod(
+          isSecurityEnabled? AuthenticationMethod.PROXY: AuthenticationMethod.SIMPLE);
+      ProxyUsers.authorize(ugi, request.getRemoteAddr(), conf);
+    }
+    return ugi;
+  }
+
-    if (name == null) {
+    if (expected == null && name != null) {
+      throw new IOException("Usernames not matched: expecting null but name="
+          + name);
+    }
+    if (name == null) { //name is optional, null is okay

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS60 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS39 INS42 INS83 INS43 INS42 INS42 INS60 INS25 INS41 INS25 INS83 INS43 INS59 INS42 INS42 INS42 INS42 INS83 INS43 INS59 INS27 INS8 INS8 INS42 INS27 INS8 INS42 INS42 INS32 INS60 INS21 INS42 INS42 INS42 INS33 INS21 INS21 INS21 INS21 INS27 INS27 INS53 INS42 INS42 INS40 INS83 INS43 INS59 INS7 INS7 INS7 INS32 INS32 INS42 INS33 INS42 INS33 INS14 UPD42 INS25 INS60 INS21 INS42 INS42 MOV16 UPD42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS16 INS42 INS42 INS42 INS32 INS42 INS43 INS27 INS27 INS8 INS8 INS83 INS43 INS59 INS7 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS45 INS42 INS32 INS33 MOV21 INS21 INS21 MOV21 INS21 UPD42 INS42 INS42 INS32 UPD42 INS42 INS32 INS42 INS42 INS32 INS32 INS32 MOV42 MOV42 UPD42 MOV42 UPD42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS33 INS42 INS42 INS32 INS42 UPD42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL7 DEL21