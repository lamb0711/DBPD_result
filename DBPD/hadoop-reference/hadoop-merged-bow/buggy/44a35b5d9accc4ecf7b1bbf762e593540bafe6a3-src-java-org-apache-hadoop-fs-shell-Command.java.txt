HADOOP-7353. Cleanup FsShell and prevent masking of RTE stack traces. Contributed by Daryn Sharp.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1132764 13f79535-47bb-0310-9956-ffa450edef68

+  /** default name of the command */
+  public static String NAME;
+  /** the command's usage switches and arguments format */
+  public static String USAGE;
+  /** the command's long description */
+  public static String DESCRIPTION;
+    
-  /**
-   * Name the command
-   * @param cmdName as invoked
-   */
-  public void setCommandName(String cmdName) {
-    name = cmdName;
-  }
-  
-   * \-> {@link #processOptions(LinkedList)}
-   * \-> {@link #expandArguments(LinkedList)} -> {@link #expandArgument(String)}*
-   * \-> {@link #processArguments(LinkedList)}
-   *     \-> {@link #processArgument(PathData)}*
-   *         \-> {@link #processPathArgument(PathData)}
-   *             \-> {@link #processPaths(PathData, PathData...)}
-   *                 \-> {@link #processPath(PathData)}*
-   *         \-> {@link #processNonexistentPath(PathData)}
+   * |-> {@link #processOptions(LinkedList)}
+   * \-> {@link #processRawArguments(LinkedList)}
+   *      |-> {@link #expandArguments(LinkedList)}
+   *      |   \-> {@link #expandArgument(String)}*
+   *      \-> {@link #processArguments(LinkedList)}
+   *          |-> {@link #processArgument(PathData)}*
+   *          |   |-> {@link #processPathArgument(PathData)}
+   *          |   \-> {@link #processPaths(PathData, PathData...)}
+   *          |        \-> {@link #processPath(PathData)}*
+   *          \-> {@link #processNonexistentPath(PathData)}
-      processArguments(expandArguments(args));
+      processRawArguments(args);
+   * Allows commands that don't use paths to handle the raw arguments.
+   * Default behavior is to expand the arguments via
+   * {@link #expandArguments(LinkedList)} and pass the resulting list to
+   * {@link #processArguments(LinkedList)} 
+   * @param args the list of argument strings
+   * @throws IOException
+   */
+  protected void processRawArguments(LinkedList<String> args)
+  throws IOException {
+    processArguments(expandArguments(args));
+  }
+
+  /**
-    err.println(getCommandName() + ": " + message);
+    err.println(getName() + ": " + message);
+  }
+  
+  /**
+   * The name of the command.  Will first try to use the assigned name
+   * else fallback to the command's preferred name
+   * @return name of the command
+   */
+  public String getName() {
+    return (name == null)
+      ? getCommandField("NAME")
+      : name.startsWith("-") ? name.substring(1) : name; // this is a historical method
+  }
+
+  /**
+   * Define the name of the command.
+   * @param name as invoked
+   */
+  public void setName(String name) {
+    this.name = name;
-    String cmd = "-" + getCommandName();
+    String cmd = "-" + getName();
-      value = (String)this.getClass().getField(field).get(null);
+      value = this.getClass().getField(field).get(this).toString();
-      throw new RuntimeException(StringUtils.stringifyException(e));
+      throw new RuntimeException(
+          "failed to get " + this.getClass().getSimpleName()+"."+field, e);

MOV31 INS23 INS23 INS23 INS31 INS31 INS29 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS43 INS59 UPD83 UPD42 INS43 INS8 INS29 INS83 MOV43 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS65 INS42 INS42 INS65 INS42 INS42 INS65 INS42 INS42 MOV65 MOV65 MOV65 MOV65 INS65 INS74 INS42 INS42 MOV21 INS65 INS65 INS41 INS65 INS65 MOV43 INS42 INS21 INS66 INS66 INS66 UPD66 INS65 UPD66 UPD66 UPD66 INS66 UPD66 UPD66 UPD66 INS66 INS65 INS66 INS65 INS66 UPD42 UPD66 INS42 INS43 INS43 INS66 INS66 INS66 INS16 INS66 INS42 INS66 INS7 MOV43 INS68 INS21 INS68 INS68 INS42 INS42 INS36 INS32 INS16 INS22 INS42 INS42 INS69 INS32 INS42 INS69 INS42 INS69 INS27 INS42 INS45 INS32 INS32 INS42 INS52 INS42 INS43 INS42 INS42 INS43 INS43 UPD42 INS42 INS33 INS42 INS42 INS45 INS42 INS42 INS34 UPD42 INS32 INS42 INS42 INS42 MOV32 INS42 INS27 INS42 INS52 INS45 INS32 INS45 INS42 INS32 UPD42 MOV42 INS52 UPD42 MOV42 DEL42 DEL42 DEL42 DEL7 DEL21 DEL8 DEL33 DEL11 DEL42 DEL32