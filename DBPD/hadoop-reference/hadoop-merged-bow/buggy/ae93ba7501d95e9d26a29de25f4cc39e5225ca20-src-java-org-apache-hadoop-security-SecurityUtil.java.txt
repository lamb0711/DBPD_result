   HADOOP-4656. Add a user to groups mapping service (boryas and acmurthy_)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@892066 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.IOException;
+import java.util.List;
+  private static Groups GROUPS = null;
+  
+   * Get the {@link Groups} being used to map user-to-groups.
+   * @return the <code>Groups</code> being used to map user-to-groups.
+   */
+  public static Groups getUserToGroupsMappingService(Configuration conf) {
+    if(GROUPS == null) {
+      LOG.info(" Creating new Groups object");
+      GROUPS = new Groups(conf);
+    }
+    return GROUPS;
+  }
+  
+  /**
-    
-    Set<Principal> principals =       // Number of principals = username + #groups 
-      new HashSet<Principal>(ugi.getGroupNames().length+1);
+    // Number of principals = username + #groups + ugi
+    Set<Principal> principals =   
+      new HashSet<Principal>(ugi.getGroupNames().length+1+1);
+   * Get the {@link Subject} for the user identified by <code>userName</code>.
+   * @param userName user name
+   * @return the {@link Subject} for the user identified by <code>userName</code>
+   * @throws IOException
+   */
+  public static Subject getSubject(Configuration conf, String userName) 
+    throws IOException {
+    if (userName == null) {
+      return null;
+    }
+    
+    Set<Principal> principals = new HashSet<Principal>();
+    User userPrincipal = new User(userName); 
+    principals.add(userPrincipal);
+    
+    // Get user's groups
+    List<String> groups = getUserToGroupsMappingService(conf).getGroups(userName);
+    StringBuffer sb = new StringBuffer("Groups for '" + userName + "': <");
+    for (String group : groups) {
+      Group groupPrincipal = new Group(group);
+      principals.add(groupPrincipal);
+      sb.append(group + " ");
+    }
+    sb.append(">");
+    LOG.info(sb);
+    
+    // Create the ugi with the right groups
+    UserGroupInformation ugi = 
+      new UnixUserGroupInformation(userName, 
+                                   groups.toArray(new String[groups.size()]));
+    principals.add(ugi);
+    Subject user = 
+      new Subject(false, principals, new HashSet<Object>(), new HashSet<Object>());
+    
+    return user;
+  }
+  
+  /**

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS42 INS42 INS33 INS65 INS65 INS42 INS43 INS42 INS25 INS41 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS42 INS25 INS60 INS60 INS21 INS60 INS60 INS70 INS21 INS21 INS60 INS21 INS60 INS41 INS66 INS65 INS66 INS66 INS42 INS27 INS8 INS42 INS66 INS65 INS66 INS42 INS66 INS66 INS65 INS66 INS42 INS42 INS42 INS27 INS8 INS74 INS59 INS43 INS59 INS32 INS74 INS59 INS43 INS59 INS44 INS42 INS8 INS32 INS32 INS43 INS59 INS32 INS43 INS59 INS42 INS42 INS42 INS33 INS21 INS21 INS42 INS42 INS42 INS33 INS41 INS43 INS43 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS14 INS43 INS42 INS60 INS21 INS21 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS14 INS32 INS7 INS33 INS42 INS42 INS74 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS27 INS42 INS43 INS59 INS32 INS32 INS43 INS42 INS32 INS43 INS9 INS42 INS14 INS14 INS42 INS42 INS45 INS42 INS14 INS34 INS43 INS43 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS3 INS42 INS74 INS74 INS43 INS42 INS42 INS42 INS43 INS42 INS42 INS45 INS5 INS32 INS43 INS43 INS43 INS43 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS42