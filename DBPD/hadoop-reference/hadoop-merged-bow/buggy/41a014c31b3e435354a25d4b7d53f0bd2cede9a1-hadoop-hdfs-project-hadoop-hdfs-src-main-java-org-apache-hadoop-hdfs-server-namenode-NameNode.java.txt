HADOOP-8247. Add a config to enable auto-HA, which disables manual FailoverController. Contributed by Todd Lipcon.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1324566 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.ha.HAServiceProtocol.StateChangeRequestInfo;
-import org.apache.hadoop.hdfs.DFSConfigKeys;
+import org.apache.hadoop.ipc.Server;
-   * HDFS federation configuration can have two types of parameters:
+   * HDFS configuration can have three types of parameters:
-   * <li>Parameter that is common for all the name services in the cluster.</li>
-   * <li>Parameters that are specific to a name service. This keys are suffixed
+   * <li>Parameters that are common for all the name services in the cluster.</li>
+   * <li>Parameters that are specific to a name service. These keys are suffixed
+   * <li>Parameters that are specific to a single name node. These keys are suffixed
+   * with nameserviceId and namenodeId in the configuration. for example,
+   * "dfs.namenode.rpc-address.nameservice1.namenode1"</li>
-   * Following are nameservice specific keys.
+   * In the latter cases, operators may specify the configuration without
+   * any suffix, with a nameservice suffix, or with a nameservice and namenode
+   * suffix. The more specific suffix will take precedence.
+   * 
+   * These keys are specific to a given namenode, and thus may be configured
+   * globally, for a nameservice, or for a specific namenode within a nameservice.
-  public static final String[] NAMESERVICE_SPECIFIC_KEYS = {
+  public static final String[] NAMENODE_SPECIFIC_KEYS = {
+  /**
+   * @see #NAMENODE_SPECIFIC_KEYS
+   * These keys are specific to a nameservice, but may not be overridden
+   * for a specific namenode.
+   */
+  public static final String[] NAMESERVICE_SPECIFIC_KEYS = {
+    DFS_HA_AUTO_FAILOVER_ENABLED_KEY
+  };
+  
+        NAMENODE_SPECIFIC_KEYS);
+    DFSUtil.setGenericConf(conf, nameserviceId, null,
+    
+
+  /**
+   * Check that a request to change this node's HA state is valid.
+   * In particular, verifies that, if auto failover is enabled, non-forced
+   * requests from the HAAdmin CLI are rejected, and vice versa.
+   *
+   * @param req the request to check
+   * @throws AccessControlException if the request is disallowed
+   */
+  void checkHaStateChange(StateChangeRequestInfo req)
+      throws AccessControlException {
+    boolean autoHaEnabled = conf.getBoolean(DFS_HA_AUTO_FAILOVER_ENABLED_KEY,
+        DFS_HA_AUTO_FAILOVER_ENABLED_DEFAULT);
+    switch (req.getSource()) {
+    case REQUEST_BY_USER:
+      if (autoHaEnabled) {
+        throw new AccessControlException(
+            "Manual HA control for this NameNode is disallowed, because " +
+            "automatic HA is enabled.");
+      }
+      break;
+    case REQUEST_BY_USER_FORCED:
+      if (autoHaEnabled) {
+        LOG.warn("Allowing manual HA control from " +
+            Server.getRemoteAddress() +
+            " even though automatic HA is enabled, because the user " +
+            "specified the force flag");
+      }
+      break;
+    case REQUEST_BY_ZKFC:
+      if (!autoHaEnabled) {
+        throw new AccessControlException(
+            "Request from ZK failover controller at " +
+            Server.getRemoteAddress() + " denied since automatic HA " +
+            "is not enabled"); 
+      }
+      break;
+    }
+  }

MOV26 INS26 INS40 UPD40 INS23 INS31 INS29 INS83 INS83 INS83 INS5 INS59 INS29 INS39 INS42 INS44 INS43 INS8 UPD42 INS65 INS43 INS85 INS42 INS4 INS21 INS65 INS65 INS65 INS43 INS42 INS42 INS60 INS50 UPD66 UPD66 UPD66 INS66 INS66 INS66 INS66 INS66 INS66 UPD66 INS66 INS67 INS66 INS66 INS42 INS42 INS32 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS39 INS59 INS32 INS49 INS25 INS10 INS49 INS25 INS10 INS49 INS25 INS10 INS42 UPD42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS8 INS42 INS42 INS8 INS42 INS38 INS8 INS42 INS42 INS42 INS42 INS53 INS21 INS42 INS53 INS14 INS32 INS14 INS43 INS27 INS42 INS42 INS27 INS43 INS27 INS42 INS45 INS45 INS45 INS32 INS45 INS45 INS42 INS45 INS32 INS45 INS45 INS42 INS42 INS42 INS42