Merged src/core, src/test/core, src/contrib/eclipse-plugin, and
src/contrib/ec2 from trunk 776174:784663


git-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@784965 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.FileNotFoundException;
-      if (e.getCause() instanceof IOException) {
-        throw (IOException) e.getCause();
-      }
-      throw new S3Exception(e);
+      handleServiceException(e);
-      if (e.getCause() instanceof IOException) {
-        throw (IOException) e.getCause();
-      }
-      throw new S3Exception(e);
+      handleServiceException(e);
-      if (e.getCause() instanceof IOException) {
-        throw (IOException) e.getCause();
-      }
-      throw new S3Exception(e);
+      handleServiceException(e);
-      if (e.getCause() instanceof IOException) {
-        throw (IOException) e.getCause();
-      }
-      throw new S3Exception(e);
+      handleServiceException(e);
+      return null; //never returned - keep compiler happy
-      if ("NoSuchKey".equals(e.getS3ErrorCode())) {
-        return null;
-      }
-      if (e.getCause() instanceof IOException) {
-        throw (IOException) e.getCause();
-      }
-      throw new S3Exception(e);
+      handleServiceException(key, e);
+      return null; //never returned - keep compiler happy
-      if ("NoSuchKey".equals(e.getS3ErrorCode())) {
-        return null;
-      }
-      if (e.getCause() instanceof IOException) {
-        throw (IOException) e.getCause();
-      }
-      throw new S3Exception(e);
+      handleServiceException(key, e);
+      return null; //never returned - keep compiler happy
-    return list(prefix, maxListingLength, null);
+    return list(prefix, maxListingLength, null, false);
-  public PartialListing list(String prefix, int maxListingLength,
-      String priorLastKey) throws IOException {
+  public PartialListing list(String prefix, int maxListingLength, String priorLastKey,
+      boolean recurse) throws IOException {
-    return list(prefix, PATH_DELIMITER, maxListingLength, priorLastKey);
+    return list(prefix, recurse ? null : PATH_DELIMITER, maxListingLength, priorLastKey);
-  public PartialListing listAll(String prefix, int maxListingLength,
-      String priorLastKey) throws IOException {
-
-    return list(prefix, null, maxListingLength, priorLastKey);
-  }
-      if (e.getCause() instanceof IOException) {
-        throw (IOException) e.getCause();
-      }
-      throw new S3Exception(e);
+      handleServiceException(e);
+      return null; //never returned - keep compiler happy
-      if (e.getCause() instanceof IOException) {
-        throw (IOException) e.getCause();
-      }
-      throw new S3Exception(e);
+      handleServiceException(key, e);
-  public void rename(String srcKey, String dstKey) throws IOException {
+  public void copy(String srcKey, String dstKey) throws IOException {
-      s3Service.moveObject(bucket.getName(), srcKey, bucket.getName(),
+      s3Service.copyObject(bucket.getName(), srcKey, bucket.getName(),
-      if (e.getCause() instanceof IOException) {
-        throw (IOException) e.getCause();
-      }
-      throw new S3Exception(e);
+      handleServiceException(srcKey, e);
-      for (int i = 0; i < objects.length; i++) {
-        s3Service.deleteObject(bucket, objects[i].getKey());
+      for (S3Object object : objects) {
+        s3Service.deleteObject(bucket, object.getKey());
-      if (e.getCause() instanceof IOException) {
-        throw (IOException) e.getCause();
-      }
-      throw new S3Exception(e);
+      handleServiceException(e);
-      for (int i = 0; i < objects.length; i++) {
-        sb.append(objects[i].getKey()).append("\n");
+      for (S3Object object : objects) {
+        sb.append(object.getKey()).append("\n");
-      if (e.getCause() instanceof IOException) {
-        throw (IOException) e.getCause();
-      }
-      throw new S3Exception(e);
+      handleServiceException(e);
-  
+
+  private void handleServiceException(String key, S3ServiceException e) throws IOException {
+    if ("NoSuchKey".equals(e.getS3ErrorCode())) {
+      throw new FileNotFoundException("Key '" + key + "' does not exist in S3");
+    } else {
+      handleServiceException(e);
+    }
+  }
+
+  private void handleServiceException(S3ServiceException e) throws IOException {
+    if (e.getCause() instanceof IOException) {
+      throw (IOException) e.getCause();
+    }
+    else {
+      throw new S3Exception(e);
+    }
+  }

INS26 INS40 INS31 INS31 INS31 MOV43 MOV44 MOV44 MOV43 UPD42 MOV44 MOV44 MOV44 MOV43 UPD42 MOV83 MOV39 MOV42 MOV44 MOV43 INS8 INS83 INS39 INS42 INS44 INS44 MOV43 INS8 INS83 INS39 INS42 INS44 INS43 MOV8 UPD39 UPD42 INS54 INS43 INS42 INS43 INS42 INS25 INS43 INS42 INS42 MOV8 INS12 INS42 UPD42 MOV42 MOV32 INS8 INS8 UPD42 MOV42 INS8 INS8 INS8 INS8 INS8 MOV44 MOV44 INS9 INS16 MOV44 MOV8 MOV44 INS8 INS70 MOV44 INS8 INS70 MOV44 INS8 INS53 INS21 MOV53 INS21 INS21 INS21 MOV25 INS21 INS41 INS21 INS41 INS21 MOV41 INS42 INS33 INS42 INS21 INS21 INS21 INS44 INS42 INS8 INS21 INS44 INS42 INS8 INS21 INS14 INS32 INS32 INS32 INS32 INS32 INS33 INS32 INS33 INS32 INS32 INS32 UPD42 INS32 INS43 INS42 MOV21 INS32 INS43 INS42 MOV21 INS32 INS43 INS27 UPD42 MOV42 UPD42 MOV42 INS42 MOV42 INS42 MOV42 INS42 MOV42 INS42 MOV42 INS42 INS42 MOV42 INS42 INS42 MOV42 INS42 INS42 INS42 INS42 MOV42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 MOV42 UPD42 MOV42 INS45 INS42 INS45 INS42 INS42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL32 DEL11 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL42 DEL42 DEL32 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL32 DEL11 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL42 DEL42 DEL32 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL32 DEL11 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL42 DEL42 DEL32 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL32 DEL11 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL45 DEL42 DEL42 DEL42 DEL32 DEL32 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL32 DEL11 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL14 DEL53 DEL25 DEL42 DEL42 DEL32 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL32 DEL11 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL14 DEL53 DEL83 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL33 DEL42 DEL42 DEL32 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL42 DEL42 DEL32 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL32 DEL11 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL14 DEL53 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24 DEL32 DEL43 DEL62 DEL43 DEL32 DEL11 DEL53 DEL8 DEL25 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL31 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24 DEL42 DEL42 DEL32 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL32 DEL11 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8