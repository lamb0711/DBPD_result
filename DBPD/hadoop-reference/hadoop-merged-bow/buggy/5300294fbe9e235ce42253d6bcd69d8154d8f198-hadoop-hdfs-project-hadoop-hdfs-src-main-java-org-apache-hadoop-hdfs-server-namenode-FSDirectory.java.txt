HDFS-5758. NameNode: complete implementation of inode modifications for ACLs. Contributed by Chris Nauroth.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1559267 13f79535-47bb-0310-9956-ffa450edef68

-    inode.setPermission(permissions, inodesInPath.getLatestSnapshotId());
+    int snapshotId = inodesInPath.getLatestSnapshotId();
+    FsPermission oldPerm = inode.getPermissionStatus(snapshotId).getPermission();
+    // This method cannot toggle the ACL bit.
+    if (oldPerm.getAclBit() != permissions.getAclBit()) {
+      permissions = new FsPermission(
+        permissions.getUserAction(),
+        permissions.getGroupAction(),
+        permissions.getOtherAction(),
+        permissions.getStickyBit(),
+        oldPerm.getAclBit());
+    }
+    inode.setPermission(permissions, snapshotId);
+  void modifyAclEntries(String src, List<AclEntry> aclSpec) throws IOException {
+    writeLock();
+    try {
+      List<AclEntry> newAcl = unprotectedModifyAclEntries(src, aclSpec);
+      fsImage.getEditLog().logSetAcl(src, newAcl);
+    } finally {
+      writeUnlock();
+    }
+  }
+
+  private List<AclEntry> unprotectedModifyAclEntries(String src,
+      List<AclEntry> aclSpec) throws IOException {
+    assert hasWriteLock();
+    INodesInPath iip = rootDir.getINodesInPath4Write(normalizePath(src), true);
+    INodeWithAdditionalFields inode = resolveINodeWithAdditionalFields(src, iip);
+    int snapshotId = iip.getLatestSnapshotId();
+    List<AclEntry> existingAcl = AclStorage.readINodeLogicalAcl(inode,
+      snapshotId);
+    List<AclEntry> newAcl = AclTransformation.mergeAclEntries(existingAcl,
+      aclSpec);
+    AclStorage.updateINodeAcl(inode, newAcl, snapshotId);
+    return newAcl;
+  }
+
+  void removeAclEntries(String src, List<AclEntry> aclSpec) throws IOException {
+    writeLock();
+    try {
+      List<AclEntry> newAcl = unprotectedRemoveAclEntries(src, aclSpec);
+      fsImage.getEditLog().logSetAcl(src, newAcl);
+    } finally {
+      writeUnlock();
+    }
+  }
+
+  private List<AclEntry> unprotectedRemoveAclEntries(String src,
+      List<AclEntry> aclSpec) throws IOException {
+    assert hasWriteLock();
+    INodesInPath iip = rootDir.getINodesInPath4Write(normalizePath(src), true);
+    INodeWithAdditionalFields inode = resolveINodeWithAdditionalFields(src, iip);
+    int snapshotId = iip.getLatestSnapshotId();
+    List<AclEntry> existingAcl = AclStorage.readINodeLogicalAcl(inode,
+      snapshotId);
+    List<AclEntry> newAcl = AclTransformation.filterAclEntriesByAclSpec(
+      existingAcl, aclSpec);
+    AclStorage.updateINodeAcl(inode, newAcl, snapshotId);
+    return newAcl;
+  }
+
+  void removeDefaultAcl(String src) throws IOException {
+    writeLock();
+    try {
+      List<AclEntry> newAcl = unprotectedRemoveDefaultAcl(src);
+      fsImage.getEditLog().logSetAcl(src, newAcl);
+    } finally {
+      writeUnlock();
+    }
+  }
+
+  private List<AclEntry> unprotectedRemoveDefaultAcl(String src)
+      throws IOException {
+    assert hasWriteLock();
+    INodesInPath iip = rootDir.getINodesInPath4Write(normalizePath(src), true);
+    INodeWithAdditionalFields inode = resolveINodeWithAdditionalFields(src, iip);
+    int snapshotId = iip.getLatestSnapshotId();
+    List<AclEntry> existingAcl = AclStorage.readINodeLogicalAcl(inode,
+      snapshotId);
+    List<AclEntry> newAcl = AclTransformation.filterDefaultAclEntries(
+      existingAcl);
+    AclStorage.updateINodeAcl(inode, newAcl, snapshotId);
+    return newAcl;
+  }
+
-  private void unprotectedRemoveAcl(String src) throws UnresolvedLinkException,
-      SnapshotAccessControlException, FileNotFoundException {
+  private void unprotectedRemoveAcl(String src) throws IOException {
-    final INodeWithAdditionalFields node = resolveINodeWithAdditionalField(src);
-    AclFeature f = node.getAclFeature();
-    if (f != null)
-      node.removeAclFeature();
+    INodesInPath iip = rootDir.getINodesInPath4Write(normalizePath(src), true);
+    INodeWithAdditionalFields inode = resolveINodeWithAdditionalFields(src, iip);
+    int snapshotId = iip.getLatestSnapshotId();
+    AclStorage.removeINodeAcl(inode, snapshotId);
-      unprotectedSetAcl(src, aclSpec);
-      fsImage.getEditLog().logSetAcl(src, aclSpec);
+      List<AclEntry> newAcl = unprotectedSetAcl(src, aclSpec);
+      fsImage.getEditLog().logSetAcl(src, newAcl);
-  void unprotectedSetAcl(String src, List<AclEntry> aclSpec)
-      throws UnresolvedLinkException, SnapshotAccessControlException,
-      FileNotFoundException {
+  List<AclEntry> unprotectedSetAcl(String src, List<AclEntry> aclSpec)
+      throws IOException {
+    // ACL removal is logged to edits as OP_SET_ACL with an empty list.
+    if (aclSpec.isEmpty()) {
+      unprotectedRemoveAcl(src);
+      return AclFeature.EMPTY_ENTRY_LIST;
+    }
+
-    final INodeWithAdditionalFields node = resolveINodeWithAdditionalField(src);
-    AclFeature f = node.getAclFeature();
-
-    if (aclSpec.size() == 0) {
-      if (f != null)
-        node.removeAclFeature();
-      return;
-    }
-
-    if (f == null) {
-      f = new AclFeature();
-      node.addAclFeature(f);
-    }
-    f.setEntries(aclSpec);
+    INodesInPath iip = rootDir.getINodesInPath4Write(normalizePath(src), true);
+    INodeWithAdditionalFields inode = resolveINodeWithAdditionalFields(src, iip);
+    int snapshotId = iip.getLatestSnapshotId();
+    List<AclEntry> existingAcl = AclStorage.readINodeLogicalAcl(inode,
+      snapshotId);
+    List<AclEntry> newAcl = AclTransformation.replaceAclEntries(existingAcl,
+      aclSpec);
+    AclStorage.updateINodeAcl(inode, newAcl, snapshotId);
+    return newAcl;
-      final INodeWithAdditionalFields node = resolveINodeWithAdditionalField(src);
-      AclFeature f = node.getAclFeature();
-
-      AclStatus.Builder builder = new AclStatus.Builder()
-          .owner(node.getUserName()).group(node.getGroupName())
-          .stickyBit(node.getFsPermission().getStickyBit());
-      if (f != null) {
-        builder.addEntries(f.getEntries());
-      }
-      return builder.build();
+      INodesInPath iip = rootDir.getINodesInPath4Write(normalizePath(src), true);
+      final INodeWithAdditionalFields inode = resolveINodeWithAdditionalFields(
+        src, iip);
+      int snapshotId = iip.getLatestSnapshotId();
+      List<AclEntry> acl = AclStorage.readINodeAcl(inode, snapshotId);
+      return new AclStatus.Builder()
+          .owner(inode.getUserName()).group(inode.getGroupName())
+          .stickyBit(inode.getFsPermission(snapshotId).getStickyBit())
+          .addEntries(acl).build();
-  private INodeWithAdditionalFields resolveINodeWithAdditionalField(String src)
-      throws UnresolvedLinkException, SnapshotAccessControlException,
-      FileNotFoundException {
-    String srcs = normalizePath(src);
-    final INodesInPath iip = rootDir.getINodesInPath4Write(srcs, true);
+  private static INodeWithAdditionalFields resolveINodeWithAdditionalFields(
+      String src, INodesInPath iip) throws FileNotFoundException {
-
-    final INodeWithAdditionalFields node = (INodeWithAdditionalFields) inode;
-    return node;
+    return (INodeWithAdditionalFields)inode;

INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS39 INS42 MOV44 MOV44 INS43 INS8 MOV83 INS74 INS42 MOV44 INS44 INS43 INS8 MOV39 UPD42 MOV42 INS44 INS44 UPD43 MOV43 INS8 INS83 INS74 INS42 INS44 INS44 UPD43 MOV43 MOV8 MOV39 UPD42 MOV42 INS44 UPD43 MOV43 INS8 INS83 INS74 INS42 INS44 UPD43 MOV43 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS74 INS42 INS44 INS44 INS43 INS8 INS83 UPD42 INS44 INS60 INS60 INS25 INS42 INS21 INS54 INS43 INS43 INS74 INS42 INS42 MOV6 INS60 INS60 INS60 INS60 INS60 INS21 INS41 INS43 INS42 INS74 INS42 UPD42 INS21 INS54 INS43 INS43 INS43 INS42 INS74 INS42 UPD42 MOV60 INS60 INS60 INS21 INS41 INS43 INS42 UPD42 INS21 INS54 INS43 INS43 INS43 INS42 UPD42 INS6 INS60 MOV60 INS60 MOV60 INS60 INS21 INS41 INS43 INS42 INS42 INS6 INS60 INS60 INS60 INS21 INS43 INS43 INS43 INS42 INS74 INS42 INS42 MOV25 INS6 INS60 INS60 INS60 INS60 INS60 INS21 INS41 INS43 INS42 INS39 INS59 INS43 INS59 INS27 INS8 INS32 MOV8 INS8 INS42 INS42 INS43 INS43 INS43 INS59 MOV43 INS59 INS39 INS59 INS74 INS59 INS74 INS59 INS32 INS42 INS42 INS43 INS43 INS32 INS8 INS8 INS42 INS42 UPD42 MOV42 INS43 INS43 UPD43 MOV43 INS39 INS59 INS74 INS74 INS59 MOV32 INS42 INS42 INS32 INS8 INS8 INS42 INS42 UPD42 MOV42 INS32 INS43 INS59 MOV43 INS39 INS59 INS74 INS74 INS59 INS32 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS39 INS59 INS32 INS8 INS42 INS42 INS42 INS43 INS43 INS32 INS32 INS43 INS59 INS43 INS59 INS39 INS59 INS74 INS59 INS74 INS59 INS32 INS42 UPD42 MOV42 MOV11 INS42 MOV32 INS42 INS42 INS32 INS32 INS32 INS21 INS42 INS42 INS60 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS60 INS21 INS21 INS42 INS42 MOV42 UPD42 INS32 UPD42 INS42 INS32 INS43 INS43 UPD42 INS43 INS43 INS42 INS32 INS42 INS42 UPD42 UPD42 INS42 INS42 INS60 INS21 INS21 INS42 INS42 INS42 INS32 UPD42 INS42 INS32 INS43 INS43 UPD42 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS60 INS21 INS42 INS42 MOV42 UPD42 MOV42 INS21 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS60 INS60 INS41 INS32 INS42 INS42 INS42 INS42 INS42 INS7 INS74 INS59 INS32 INS42 INS42 INS32 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS32 INS32 INS42 INS42 MOV32 INS9 UPD42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS32 INS32 INS42 INS42 INS32 INS9 UPD42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS9 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS32 MOV32 INS40 INS42 INS42 INS32 INS9 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 MOV42 INS43 INS59 MOV43 INS39 INS59 INS74 INS32 INS42 INS42 INS42 INS42 INS14 INS43 INS43 INS42 INS32 UPD42 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 MOV32 INS32 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS32 UPD42 INS42 INS32 INS43 INS43 UPD42 INS32 MOV42 INS43 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS9 UPD42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 UPD42 UPD42 INS32 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 MOV42 MOV32 UPD42 UPD42 INS42 UPD42 DEL21 DEL83 DEL43 DEL42 DEL33 DEL27 DEL21 DEL25 DEL83 DEL43 DEL43 DEL31 DEL32 DEL34 DEL27 DEL42 DEL33 DEL27 DEL21 DEL25 DEL43 DEL42 DEL33 DEL27 DEL42 DEL43 DEL14 DEL7 DEL21 DEL32 DEL21 DEL8 DEL25 DEL32 DEL21 DEL8 DEL31 DEL43 DEL40 DEL43 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL32 DEL41 DEL43 DEL42 DEL43 DEL83 DEL42 DEL42 DEL42 DEL42 DEL9 DEL32 DEL59 DEL60 DEL83 DEL42 DEL59 DEL60 DEL42