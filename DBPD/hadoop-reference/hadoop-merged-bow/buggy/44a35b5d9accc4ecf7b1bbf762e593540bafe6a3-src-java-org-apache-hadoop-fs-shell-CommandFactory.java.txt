HADOOP-7353. Cleanup FsShell and prevent masking of RTE stack traces. Contributed by Daryn Sharp.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1132764 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Hashtable;
+import java.util.HashMap;
+import java.util.Map;
-  private Hashtable<String, Class<? extends Command>> classMap =
-    new Hashtable<String, Class<? extends Command>>();
+  private Map<String, Class<? extends Command>> classMap =
+    new HashMap<String, Class<? extends Command>>();
+
+  private Map<String, Command> objectMap =
+    new HashMap<String, Command>();
-   * Returns the class implementing the given command.  The
-   * class must have been registered via
-   * {@link #addClass(Class, String...)}
-   * @param cmd name of the command
-   * @return instance of the requested command
+   * Register the given object as handling the given list of command
+   * names.  Avoid calling this method and use
+   * {@link #addClass(Class, String...)} whenever possible to avoid
+   * startup overhead from excessive command object instantiations.  This
+   * method is intended only for handling nested non-static classes that
+   * are re-usable.  Namely -help/-usage.
+   * @param cmdObject the object implementing the command names
+   * @param names one or more command names that will invoke this class
-  protected Class<? extends Command> getClass(String cmd) {
-    return classMap.get(cmd);
+  public void addObject(Command cmdObject, String ... names) {
+    for (String name : names) {
+      objectMap.put(name, cmdObject);
+      classMap.put(name, null); // just so it shows up in the list of commands
+    }
-  
+
-    Command instance = null;
-    Class<? extends Command> cmdClass = getClass(cmdName);
-    if (cmdClass != null) {
-      instance = ReflectionUtils.newInstance(cmdClass, conf);
-      instance.setCommandName(cmdName);
+    Command instance = objectMap.get(cmdName);
+    if (instance == null) {
+      Class<? extends Command> cmdClass = classMap.get(cmdName);
+      if (cmdClass != null) {
+        instance = ReflectionUtils.newInstance(cmdClass, conf);
+        instance.setName(cmdName);
+      }

INS26 UPD40 INS40 INS23 UPD74 INS83 INS74 INS59 UPD83 INS39 INS42 INS44 INS8 UPD43 INS43 INS43 INS43 INS42 INS14 MOV66 UPD65 INS43 INS42 UPD42 INS70 INS25 UPD42 UPD74 INS42 INS42 INS42 INS74 UPD66 INS66 INS66 INS66 UPD66 INS66 UPD42 UPD66 INS42 UPD66 MOV42 INS44 INS42 INS8 INS27 INS8 UPD43 INS43 INS43 INS43 INS43 INS42 INS21 INS21 INS32 INS42 INS33 MOV60 MOV25 UPD42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV42 UPD42 MOV42 UPD42 MOV42 INS33 INS42 UPD42 UPD42 DEL42 DEL43 DEL43 DEL76 DEL74 DEL42 DEL32 DEL41 DEL8 DEL33