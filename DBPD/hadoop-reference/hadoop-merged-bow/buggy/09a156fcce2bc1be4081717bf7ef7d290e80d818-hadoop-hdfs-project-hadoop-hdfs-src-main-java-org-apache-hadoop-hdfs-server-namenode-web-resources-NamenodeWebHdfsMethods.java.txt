HDFS-2539. Support doAs and GETHOMEDIRECTORY in webhdfs.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1200731 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.web.resources.DoAsParam;
+  private void init(final UserGroupInformation ugi,
+      final DelegationParam delegation,
+      final UserParam username, final DoAsParam doAsUser,
+      final UriFsPathParam path, final HttpOpParam<?> op,
+      final Param<?, ?>... parameters) throws IOException {
+    if (LOG.isTraceEnabled()) {
+      LOG.trace("HTTP " + op.getValue().getType() + ": " + op + ", " + path
+          + ", ugi=" + ugi + ", " + username + ", " + doAsUser
+          + Param.toSortedString(", ", parameters));
+    }
+
+    //clear content type
+    response.setContentType(null);
+  }
+
+      final UserParam username, final DoAsParam doAsUser,
-      delegationQuery = "";
+      delegationQuery = Param.toSortedString("&", doAsUser, username);
-    final String query = op.toQueryString()
-        + '&' + new UserParam(ugi) + delegationQuery
+    final String query = op.toQueryString() + delegationQuery
+      @QueryParam(UserParam.NAME) @DefaultValue(UserParam.DEFAULT)
+          final UserParam username,
+      @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT)
+          final DoAsParam doAsUser,
-      @QueryParam(TokenArgumentParam.NAME) @DefaultValue(TokenArgumentParam.DEFAULT) 
+      @QueryParam(TokenArgumentParam.NAME) @DefaultValue(TokenArgumentParam.DEFAULT)
-    return put(ugi, delegation, ROOT, op, destination, owner, group,
-        permission, overwrite, bufferSize, replication, blockSize,
-        modificationTime, accessTime, renameOptions, delegationTokenArgument);
+    return put(ugi, delegation, username, doAsUser, ROOT, op, destination,
+        owner, group, permission, overwrite, bufferSize, replication,
+        blockSize, modificationTime, accessTime, renameOptions,
+        delegationTokenArgument);
+      @QueryParam(UserParam.NAME) @DefaultValue(UserParam.DEFAULT)
+          final UserParam username,
+      @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT)
+          final DoAsParam doAsUser,
-      @QueryParam(TokenArgumentParam.NAME) @DefaultValue(TokenArgumentParam.DEFAULT) 
+      @QueryParam(TokenArgumentParam.NAME) @DefaultValue(TokenArgumentParam.DEFAULT)
-    if (LOG.isTraceEnabled()) {
-      LOG.trace(op + ": " + path + ", ugi=" + ugi
-          + Param.toSortedString(", ", destination, owner, group, permission,
-              overwrite, bufferSize, replication, blockSize,
-              modificationTime, accessTime, renameOptions));
-    }
-
-    //clear content type
-    response.setContentType(null);
+    init(ugi, delegation, username, doAsUser, path, op, destination, owner,
+        group, permission, overwrite, bufferSize, replication, blockSize,
+        modificationTime, accessTime, renameOptions, delegationTokenArgument);
-      final URI uri = redirectURI(namenode, ugi, delegation, fullpath,
-          op.getValue(), -1L,
+      final URI uri = redirectURI(namenode, ugi, delegation, username, doAsUser,
+          fullpath, op.getValue(), -1L,
+      @QueryParam(UserParam.NAME) @DefaultValue(UserParam.DEFAULT)
+          final UserParam username,
+      @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT)
+          final DoAsParam doAsUser,
-    return post(ugi, delegation, ROOT, op, bufferSize);
+    return post(ugi, delegation, username, doAsUser, ROOT, op, bufferSize);
+      @QueryParam(UserParam.NAME) @DefaultValue(UserParam.DEFAULT)
+          final UserParam username,
+      @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT)
+          final DoAsParam doAsUser,
-    if (LOG.isTraceEnabled()) {
-      LOG.trace(op + ": " + path + ", ugi=" + ugi
-          + Param.toSortedString(", ", bufferSize));
-    }
-
-    //clear content type
-    response.setContentType(null);
+    init(ugi, delegation, username, doAsUser, path, op, bufferSize);
-      final URI uri = redirectURI(namenode, ugi, delegation, fullpath,
-          op.getValue(), -1L, bufferSize);
+      final URI uri = redirectURI(namenode, ugi, delegation, username, doAsUser,
+          fullpath, op.getValue(), -1L, bufferSize);
+      @QueryParam(UserParam.NAME) @DefaultValue(UserParam.DEFAULT)
+          final UserParam username,
+      @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT)
+          final DoAsParam doAsUser,
-    return get(ugi, delegation, ROOT, op, offset, length, renewer, bufferSize);
+    return get(ugi, delegation, username, doAsUser, ROOT, op,
+        offset, length, renewer, bufferSize);
+      @QueryParam(UserParam.NAME) @DefaultValue(UserParam.DEFAULT)
+          final UserParam username,
+      @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT)
+          final DoAsParam doAsUser,
-    if (LOG.isTraceEnabled()) {
-      LOG.trace(op + ": " + path + ", ugi=" + ugi
-          + Param.toSortedString(", ", offset, length, renewer, bufferSize));
-    }
-
-    //clear content type
-    response.setContentType(null);
+    init(ugi, delegation, username, doAsUser, path, op,
+        offset, length, renewer, bufferSize);
-      final URI uri = redirectURI(namenode, ugi, delegation, fullpath,
-          op.getValue(), offset.getValue(), offset, length, bufferSize);
+      final URI uri = redirectURI(namenode, ugi, delegation, username, doAsUser,
+          fullpath, op.getValue(), offset.getValue(), offset, length, bufferSize);
-      final URI uri = redirectURI(namenode, ugi, delegation, fullpath,
-          op.getValue(), -1L);
+      final URI uri = redirectURI(namenode, ugi, delegation, username, doAsUser,
+          fullpath, op.getValue(), -1L);
+      if (delegation.getValue() != null) {
+        throw new IllegalArgumentException(delegation.getName()
+            + " parameter is not null.");
+      }
+    case GETHOMEDIRECTORY:
+    {
+      final String js = JsonUtil.toJsonString(
+          org.apache.hadoop.fs.Path.class.getSimpleName(),
+          WebHdfsFileSystem.getHomeDirectoryString(ugi));
+      return Response.ok(js).type(MediaType.APPLICATION_JSON).build();
+    }
+      @QueryParam(DelegationParam.NAME) @DefaultValue(DelegationParam.DEFAULT)
+          final DelegationParam delegation,
+      @QueryParam(UserParam.NAME) @DefaultValue(UserParam.DEFAULT)
+          final UserParam username,
+      @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT)
+          final DoAsParam doAsUser,
-    return delete(ugi, ROOT, op, recursive);
+    return delete(ugi, delegation, username, doAsUser, ROOT, op, recursive);
+      @QueryParam(DelegationParam.NAME) @DefaultValue(DelegationParam.DEFAULT)
+          final DelegationParam delegation,
+      @QueryParam(UserParam.NAME) @DefaultValue(UserParam.DEFAULT)
+          final UserParam username,
+      @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT)
+          final DoAsParam doAsUser,
-    if (LOG.isTraceEnabled()) {
-      LOG.trace(op + ": " + path + ", ugi=" + ugi
-          + Param.toSortedString(", ", recursive));
-    }
-
-    //clear content type
-    response.setContentType(null);
+    init(ugi, delegation, username, doAsUser, path, op, recursive);

INS26 INS40 INS31 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS74 INS42 INS83 INS74 INS42 INS42 INS25 MOV21 INS83 MOV43 INS42 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 MOV21 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 MOV21 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 MOV21 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 MOV21 INS42 INS42 INS42 INS42 INS42 INS43 INS76 INS43 INS76 INS76 MOV32 INS8 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS42 INS21 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 MOV42 MOV42 MOV42 MOV42 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 MOV42 INS32 INS42 INS42 INS27 INS32 INS45 INS32 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS8 INS49 INS25 INS42 INS60 INS41 INS27 INS8 INS83 INS43 INS59 INS32 INS32 INS33 INS53 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS32 INS42 INS40 INS43 INS27 INS57 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS45 INS43 INS42 INS42 INS40 DEL45 DEL13 DEL42 DEL14 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL32 DEL27 DEL8 DEL25 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL32 DEL27 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL42 DEL33 DEL32 DEL21 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL32 DEL27 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL42 DEL33 DEL32 DEL21 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL32 DEL27 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL42 DEL33 DEL32 DEL21