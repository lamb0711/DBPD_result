HADOOP-12635. Adding Append API support for WASB. Contributed by Dushyanth.

+import java.io.DataOutputStream;
-import java.util.Iterator;
-import org.apache.commons.lang.exception.ExceptionUtils;
-import org.apache.hadoop.fs.azure.StorageInterface.CloudBlobWrapper;
-import org.apache.hadoop.metrics2.lib.DefaultMetricsSystem;
-import com.microsoft.azure.storage.AccessCondition;
-import com.microsoft.azure.storage.OperationContext;
-import com.microsoft.azure.storage.StorageErrorCode;
-import com.microsoft.azure.storage.blob.CloudBlob;
-import com.microsoft.azure.storage.StorageErrorCodeStrings;
+
-        NativeAzureFileSystem.cleanup(LOG, output);
+        NativeAzureFileSystemHelper.cleanup(LOG, output);
+  /*
+   * Property to enable Append API.
+   */
+  public static final String APPEND_SUPPORT_ENABLE_PROPERTY_NAME = "fs.azure.enable.append.support";
+
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-          if (NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          if (NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-          if (NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          if (NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-            && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-
+  private boolean appendSupportEnabled = false;
-
+    this.appendSupportEnabled = conf.getBoolean(APPEND_SUPPORT_ENABLE_PROPERTY_NAME, false);
-    throw new IOException("Not supported");
+
+    if (!appendSupportEnabled) {
+      throw new UnsupportedOperationException("Append Support not enabled");
+    }
+
+    LOG.debug("Opening file: {} for append", f);
+
+    Path absolutePath = makeAbsolute(f);
+    String key = pathToKey(absolutePath);
+    FileMetadata meta = null;
+    try {
+      meta = store.retrieveMetadata(key);
+    } catch(Exception ex) {
+
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
+
+      if (innerException instanceof StorageException
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
+
+        throw new FileNotFoundException(String.format("%s is not found", key));
+      } else {
+        throw ex;
+      }
+    }
+
+    if (meta == null) {
+      throw new FileNotFoundException(f.toString());
+    }
+
+    if (meta.isDir()) {
+      throw new FileNotFoundException(f.toString()
+          + " is a directory not a file.");
+    }
+
+    if (store.isPageBlobKey(key)) {
+      throw new IOException("Append not supported for Page Blobs");
+    }
+
+    DataOutputStream appendStream = null;
+
+    try {
+      appendStream = store.retrieveAppendStream(key, bufferSize);
+    } catch (Exception ex) {
+
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
+
+      if (innerException instanceof StorageException
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
+        throw new FileNotFoundException(String.format("%s is not found", key));
+      } else {
+        throw ex;
+      }
+    }
+
+    return new FSDataOutputStream(appendStream, statistics);
-        NativeAzureFileSystem.cleanup(LOG, out);
+        NativeAzureFileSystemHelper.cleanup(LOG, out);
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-          && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-          Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+          Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-            if (NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            if (NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-            && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-          Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+          Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-            if (NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            if (NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-            && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-            Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+            Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-                && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+                && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-            && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-          && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-          && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-            && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-         Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+         Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-             && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+             && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-          && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-          && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-        if (NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+        if (NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-            && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-          && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-            && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-          && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-          && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-
-  private static void cleanup(Logger log, java.io.Closeable closeable) {
-    if (closeable != null) {
-      try {
-        closeable.close();
-      } catch(IOException e) {
-        if (log != null) {
-          log.debug("Exception in closing {}", closeable, e);
-        }
-      }
-    }
-  }
-
-  /*
-   * Helper method to recursively check if the cause of the exception is
-   * a Azure storage exception.
-   */
-  private static Throwable checkForAzureStorageException(Exception e) {
-
-    Throwable innerException = e.getCause();
-
-    while (innerException != null
-            && !(innerException instanceof StorageException)) {
-      innerException = innerException.getCause();
-    }
-
-    return innerException;
-  }
-
-  /*
-   * Helper method to check if the AzureStorageException is
-   * because backing blob was not found.
-   */
-  private static boolean isFileNotFoundException(StorageException e) {
-
-    String errorCode = ((StorageException) e).getErrorCode();
-    if (errorCode != null
-        && (errorCode.equals(StorageErrorCodeStrings.BLOB_NOT_FOUND)
-            || errorCode.equals(StorageErrorCodeStrings.RESOURCE_NOT_FOUND)
-            || errorCode.equals(StorageErrorCode.BLOB_NOT_FOUND.toString())
-            || errorCode.equals(StorageErrorCode.RESOURCE_NOT_FOUND.toString()))) {
-
-      return true;
-    }
-
-    return false;
-  }
-

MOV26 UPD40 INS23 INS23 INS31 INS83 INS83 INS83 MOV43 INS59 INS83 INS39 INS59 MOV29 MOV78 UPD83 MOV83 MOV43 UPD42 MOV42 MOV44 MOV44 MOV44 MOV43 INS8 MOV54 MOV54 INS42 INS45 INS42 INS9 INS21 INS25 INS21 INS60 INS60 INS60 INS54 INS25 INS25 INS25 INS60 MOV54 MOV41 MOV54 INS54 MOV54 INS7 INS38 INS8 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS8 INS12 INS27 INS8 INS32 INS8 INS32 MOV8 INS43 INS59 INS8 INS14 MOV8 MOV54 MOV54 MOV8 MOV8 MOV8 INS12 INS22 INS32 INS42 INS53 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS42 INS32 UPD42 MOV42 INS42 INS33 MOV21 INS44 INS8 UPD42 MOV42 MOV33 INS53 UPD42 MOV42 UPD42 MOV42 INS53 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS33 INS21 INS44 INS43 INS42 INS42 INS54 MOV44 INS8 INS52 INS42 INS42 INS42 INS42 INS9 INS14 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS7 MOV43 UPD42 MOV42 MOV60 INS25 INS14 INS14 INS7 INS43 INS42 INS42 MOV8 INS12 MOV8 MOV8 INS53 MOV8 MOV25 INS60 INS25 MOV53 INS43 INS45 INS42 INS32 MOV43 INS27 INS8 INS8 INS43 INS32 INS43 INS27 UPD45 INS42 INS32 INS42 INS8 INS8 MOV44 INS8 MOV44 INS8 INS42 MOV44 MOV43 MOV43 MOV8 MOV43 INS59 INS27 MOV8 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS62 INS32 INS53 INS53 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS32 INS45 INS42 INS42 INS42 INS42 INS53 INS53 MOV8 INS60 INS25 MOV53 MOV8 MOV25 MOV53 INS53 MOV8 MOV62 INS42 INS32 MOV62 INS32 UPD42 UPD42 INS42 MOV42 MOV43 INS42 INS42 INS11 INS14 INS42 UPD42 MOV42 MOV42 UPD42 UPD42 UPD42 INS14 INS42 UPD42 UPD42 INS44 MOV43 INS59 INS27 MOV8 MOV44 MOV43 INS27 MOV8 UPD42 UPD42 INS14 UPD42 UPD42 MOV8 MOV44 UPD42 UPD42 UPD42 UPD42 UPD42 INS25 UPD42 MOV43 UPD42 INS42 INS42 INS42 INS42 INS42 MOV11 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS43 INS42 INS43 INS32 INS43 INS32 UPD42 INS43 INS42 INS25 INS53 INS42 INS32 MOV62 INS32 MOV42 MOV62 MOV32 INS43 INS32 MOV53 UPD42 MOV11 INS43 INS27 MOV8 MOV43 UPD42 UPD42 MOV42 INS42 INS42 INS42 INS45 UPD42 MOV42 INS42 INS42 INS42 INS45 INS42 INS42 INS43 INS62 INS8 INS42 INS42 INS42 INS42 INS42 INS42 MOV11 MOV8 MOV42 UPD42 UPD42 MOV44 UPD42 UPD42 INS42 INS42 INS42 INS45 INS42 UPD42 UPD42 MOV14 MOV8 MOV42 INS42 INS62 INS32 MOV42 INS42 INS42 INS43 INS25 MOV53 MOV32 MOV42 UPD42 INS42 INS43 INS42 INS42 INS11 UPD42 UPD42 UPD42 INS42 INS32 MOV8 UPD42 INS32 MOV42 MOV42 UPD42 UPD42 INS42 INS43 INS42 INS42 INS42 MOV11 INS42 INS42 INS11 INS42 INS43 INS42 UPD42 UPD42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL45 DEL32 DEL9 DEL83 DEL42 DEL31 DEL42 DEL42 DEL32 DEL25 DEL8 DEL42 DEL42 DEL32 DEL27 DEL25 DEL42 DEL42 DEL32 DEL27 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL27 DEL25 DEL8 DEL12 DEL54 DEL83 DEL39 DEL43 DEL42 DEL44 DEL40 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL32 DEL21 DEL8 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL8 DEL25 DEL8 DEL12 DEL54 DEL8 DEL25 DEL8 DEL31 DEL83 DEL83 DEL42 DEL44 DEL42 DEL33 DEL27 DEL36 DEL38 DEL27 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL61 DEL42 DEL41 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL32 DEL59 DEL60 DEL27 DEL40 DEL32 DEL40 DEL32 DEL42 DEL40 DEL32 DEL32 DEL40 DEL32 DEL32 DEL27 DEL36 DEL27 DEL8 DEL25 DEL9 DEL41 DEL8 DEL31