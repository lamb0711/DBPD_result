HADOOP-8783. Improve RPC.Server's digest auth (daryn)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1393483 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.security.UserGroupInformation.AuthenticationMethod;
-          }
-          if (isSecurityEnabled && authMethod == AuthMethod.SIMPLE) {
-            AccessControlException ae = new AccessControlException("Authorization ("
-              + CommonConfigurationKeys.HADOOP_SECURITY_AUTHORIZATION
-              + ") is enabled but authentication ("
-              + CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION
-              + ") is configured as simple. Please configure another method "
-              + "like kerberos or digest.");
-            setupResponse(authFailedResponse, authFailedCall, RpcStatusProto.FATAL,
-                null, ae.getClass().getName(), ae.getMessage());
-            responder.doRespond(authFailedCall);
-            throw ae;
-          }
-          if (!isSecurityEnabled && authMethod != AuthMethod.SIMPLE) {
+          }          
+          final boolean clientUsingSasl;
+          switch (authMethod) {
+            case SIMPLE: { // no sasl for simple
+              if (isSecurityEnabled) {
+                AccessControlException ae = new AccessControlException("Authorization ("
+                    + CommonConfigurationKeys.HADOOP_SECURITY_AUTHORIZATION
+                    + ") is enabled but authentication ("
+                    + CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION
+                    + ") is configured as simple. Please configure another method "
+                    + "like kerberos or digest.");
+                setupResponse(authFailedResponse, authFailedCall, RpcStatusProto.FATAL,
+                    null, ae.getClass().getName(), ae.getMessage());
+                responder.doRespond(authFailedCall);
+                throw ae;
+              }
+              clientUsingSasl = false;
+              useSasl = false; 
+              break;
+            }
+            case DIGEST: {
+              clientUsingSasl = true;
+              useSasl = (secretManager != null);
+              break;
+            }
+            default: {
+              clientUsingSasl = true;
+              useSasl = isSecurityEnabled; 
+              break;
+            }
+          }          
+          if (clientUsingSasl && !useSasl) {
-          if (authMethod != AuthMethod.SIMPLE) {
-            useSasl = true;
-          }
-            // Now the user is a proxy user, set Authentication method Proxy.
-            user.setAuthenticationMethod(AuthenticationMethod.PROXY);
-    if (isSecurityEnabled) {
+    if (secretManager != null) {

INS27 INS42 INS33 INS60 INS50 INS83 INS39 INS59 INS42 INS49 INS8 INS49 INS8 INS49 INS8 INS42 INS42 MOV25 INS21 INS21 INS10 INS42 INS21 INS21 INS10 MOV21 INS21 INS10 INS42 INS42 INS7 INS7 INS7 INS7 INS7 UPD42 INS42 INS9 INS42 INS9 INS42 INS9 INS42 INS36 UPD42 INS42 INS42 INS27 UPD42 MOV42 INS33 DEL40 DEL26 DEL42 DEL42 DEL40 DEL27 DEL27 DEL42 DEL40 DEL27 DEL40 DEL27 DEL8 DEL25 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42