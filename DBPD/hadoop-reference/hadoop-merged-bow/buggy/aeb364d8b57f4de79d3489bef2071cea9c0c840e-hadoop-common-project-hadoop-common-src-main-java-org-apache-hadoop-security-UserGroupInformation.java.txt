HADOOP-8225. DistCp fails when invoked by Oozie (daryn via bobby)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1376618 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.io.Text;
-          for (Token<?> token: cred.getAllTokens()) {
-            loginUser.addToken(token);
-          }
+          cred.addTokensToUGI(loginUser);
+
+  // wrapper to retain the creds key for the token
+  private class NamedToken {
+    Text alias;
+    Token<? extends TokenIdentifier> token;
+    NamedToken(Text alias, Token<? extends TokenIdentifier> token) {
+      this.alias = alias;
+      this.token = token;
+    }
+    @Override
+    public boolean equals(Object o) {
+      boolean equals;
+      if (o == this) {
+        equals = true;
+      } else if (!(o instanceof NamedToken)) {
+        equals = false;
+      } else {
+        Text otherAlias = ((NamedToken)o).alias;
+        if (alias == otherAlias) {
+          equals = true;
+        } else {
+          equals = (otherAlias != null && otherAlias.equals(alias));
+        }
+      }
+      return equals;
+    }
+    @Override
+    public int hashCode() {
+      return (alias != null) ? alias.hashCode() : -1; 
+    }
+    @Override
+    public String toString() {
+      return "NamedToken: alias="+alias+" token="+token;
+    }
+  }
-    return subject.getPrivateCredentials().add(token);
+    return addToken(token.getService(), token);
+  }
+
+  /**
+   * Add a named token to this UGI
+   * 
+   * @param alias Name of the token
+   * @param token Token to be added
+   * @return true on successful add of new token
+   */
+  public synchronized boolean addToken(Text alias,
+                                       Token<? extends TokenIdentifier> token) {
+    NamedToken namedToken = new NamedToken(alias, token);
+    Collection<Object> ugiCreds = subject.getPrivateCredentials();
+    ugiCreds.remove(namedToken); // allow token to be replaced
+    return ugiCreds.add(new NamedToken(alias, token));
-    Set<Object> creds = subject.getPrivateCredentials();
-    List<Token<?>> result = new ArrayList<Token<?>>(creds.size());
-    for(Object o: creds) {
-      if (o instanceof Token<?>) {
-        result.add((Token<?>) o);
-      }
+    return Collections.unmodifiableList(
+        new ArrayList<Token<?>>(getCredentials().getAllTokens()));
+  }
+
+  /**
+   * Obtain the tokens in credentials form associated with this user.
+   * 
+   * @return Credentials of tokens associated with this user
+   */
+  public synchronized Credentials getCredentials() {
+    final Credentials credentials = new Credentials();
+    final Set<NamedToken> namedTokens =
+        subject.getPrivateCredentials(NamedToken.class);
+    for (final NamedToken namedToken : namedTokens) {
+      credentials.addToken(namedToken.alias, namedToken.token);
-    return Collections.unmodifiableList(result);
+    return credentials;

INS26 INS40 INS55 INS31 INS31 INS31 INS83 INS42 INS23 INS23 INS31 INS31 INS31 INS31 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS8 MOV29 INS83 INS83 MOV74 INS42 INS8 INS29 INS83 INS83 INS43 INS42 INS8 INS43 INS59 UPD74 MOV74 INS59 INS42 INS44 INS44 INS8 INS78 UPD83 MOV83 INS39 INS42 MOV44 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS65 INS65 INS65 INS65 INS43 INS42 INS74 INS42 INS60 MOV60 INS21 INS41 MOV41 INS65 INS65 INS42 INS60 INS60 INS70 INS41 INS42 INS42 UPD76 INS42 INS43 INS42 INS74 INS42 INS21 INS21 INS42 INS60 INS25 INS41 INS42 INS41 INS42 INS42 INS41 INS66 INS42 INS66 INS42 INS66 INS66 INS42 MOV43 UPD76 MOV76 INS43 INS59 INS74 INS32 INS32 INS66 INS66 INS83 INS43 INS59 INS83 UPD74 MOV74 INS59 INS44 INS42 INS8 INS42 INS43 INS42 INS43 INS76 INS7 INS7 INS39 INS59 INS27 INS8 INS25 INS42 INS16 INS27 INS42 INS43 INS42 INS42 INS14 INS43 MOV43 UPD42 INS42 INS42 INS42 UPD42 MOV42 MOV42 INS14 MOV14 INS42 INS42 INS14 INS43 INS42 INS32 INS83 INS43 INS42 INS21 INS42 INS42 INS43 INS22 INS42 INS22 INS42 INS42 INS42 INS52 INS21 INS38 INS8 INS8 INS36 INS32 INS38 INS45 INS42 INS45 INS42 UPD42 UPD42 INS42 INS43 INS42 INS42 INS42 INS43 INS42 INS42 INS43 INS42 INS42 INS42 INS57 INS42 INS32 INS42 INS52 INS42 INS52 INS42 INS7 INS36 INS21 MOV60 INS25 INS27 INS42 INS42 INS34 INS42 UPD42 MOV42 INS32 UPD42 INS42 INS43 INS42 INS42 INS40 INS40 INS42 INS9 INS62 INS7 INS43 INS27 INS8 INS8 INS42 INS33 UPD42 MOV42 INS42 MOV21 INS42 INS43 INS42 INS9 UPD42 MOV42 UPD42 INS22 INS42 INS42 INS21 INS21 INS42 INS36 INS42 INS7 INS7 UPD42 UPD42 UPD42 INS11 INS42 INS9 INS42 INS36 INS43 INS42 INS27 INS42 INS27 INS32 INS42 INS33 INS42 INS42 INS42 DEL42 DEL43 DEL76 DEL74 DEL42 DEL44 DEL42 DEL42 DEL32 DEL8 DEL70 DEL43 DEL74 DEL42 DEL42 DEL83 DEL42 DEL42 DEL42 DEL74 DEL62 DEL43 DEL76 DEL74 DEL42 DEL11 DEL32 DEL21 DEL8 DEL25 DEL8 DEL70 DEL8 DEL31