HADOOP-10075. Update jetty dependency to version 9 (rkanter)

-import org.apache.hadoop.crypto.key.kms.KMSRESTConstants;
+import org.apache.hadoop.http.JettyUtils;
-import org.apache.hadoop.security.ssl.SslSelectChannelConnectorSecure;
-import org.mortbay.jetty.Connector;
-import org.mortbay.jetty.Server;
-import org.mortbay.jetty.security.SslSelectChannelConnector;
-import org.mortbay.jetty.webapp.WebAppContext;
+import org.eclipse.jetty.http.HttpVersion;
+import org.eclipse.jetty.server.ConnectionFactory;
+import org.eclipse.jetty.server.HttpConfiguration;
+import org.eclipse.jetty.server.HttpConnectionFactory;
+import org.eclipse.jetty.server.SecureRequestCustomizer;
+import org.eclipse.jetty.server.Server;
+import org.eclipse.jetty.server.ServerConnector;
+import org.eclipse.jetty.server.SslConnectionFactory;
+import org.eclipse.jetty.util.ssl.SslContextFactory;
+import org.eclipse.jetty.webapp.WebAppContext;
-import java.net.InetAddress;
-import java.net.ServerSocket;
-import java.net.URI;
-import java.net.URISyntaxException;
-      Server server = new Server(inPort);
-      if (!ssl) {
-        server.getConnectors()[0].setHost(host);
-      } else {
-        SslSelectChannelConnector c = new SslSelectChannelConnectorSecure();
-        c.setHost(host);
-        c.setNeedClientAuth(false);
-        c.setKeystore(keyStore);
-        c.setKeystoreType("jks");
-        c.setKeyPassword(password);
-        server.setConnectors(new Connector[]{c});
+      Server server = new Server();
+      ServerConnector conn = new ServerConnector(server);
+      HttpConfiguration httpConfig = new HttpConfiguration();
+      httpConfig.setRequestHeaderSize(JettyUtils.HEADER_SIZE);
+      httpConfig.setResponseHeaderSize(JettyUtils.HEADER_SIZE);
+      httpConfig.setSecureScheme("https");
+      httpConfig.addCustomizer(new SecureRequestCustomizer());
+      ConnectionFactory connFactory = new HttpConnectionFactory(httpConfig);
+      conn.addConnectionFactory(connFactory);
+      conn.setHost(host);
+      conn.setPort(inPort);
+      if (ssl) {
+        SslContextFactory sslContextFactory = new SslContextFactory();
+        sslContextFactory.setNeedClientAuth(false);
+        sslContextFactory.setKeyStorePath(keyStore);
+        sslContextFactory.setKeyStoreType("jks");
+        sslContextFactory.setKeyStorePassword(password);
+        conn.addFirstConnectionFactory(
+            new SslConnectionFactory(sslContextFactory,
+            HttpVersion.HTTP_1_1.asString()));
+      server.addConnector(conn);
-    boolean ssl = server.getConnectors()[0].getClass()
-        == SslSelectChannelConnectorSecure.class;
+    boolean ssl = server.getConnectors()[0]
+        .getConnectionFactory(SslConnectionFactory.class) != null;
-          server.getConnectors()[0].getHost() + ":" +
-          server.getConnectors()[0].getLocalPort());
+          ((ServerConnector)server.getConnectors()[0]).getHost() + ":"
+          + ((ServerConnector)server.getConnectors()[0]).getLocalPort());
-    jetty.addHandler(context);
+    jetty.setHandler(context);

MOV26 MOV26 MOV26 MOV26 MOV26 INS26 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 INS40 INS60 INS60 MOV21 INS21 INS21 INS21 MOV60 INS21 MOV21 INS21 INS25 INS21 UPD27 MOV27 UPD42 MOV43 INS43 INS59 INS43 INS59 INS32 INS32 INS32 INS32 UPD43 INS32 INS32 INS42 INS8 INS32 INS33 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS45 INS42 INS42 INS14 UPD42 UPD42 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 INS60 MOV21 MOV21 MOV21 MOV21 MOV21 INS42 INS42 INS42 UPD42 INS57 INS27 MOV43 INS43 INS42 INS43 INS43 UPD43 INS42 INS43 INS59 INS43 INS42 INS45 MOV32 INS45 MOV32 INS42 INS42 INS42 UPD42 INS42 INS42 INS14 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS14 INS42 INS36 UPD42 INS36 UPD42 INS43 INS43 INS42 INS32 INS11 INS11 INS42 UPD42 MOV42 INS40 INS42 INS43 MOV2 INS43 MOV2 INS42 INS42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL42 DEL38 DEL8 DEL8 DEL25 DEL42 DEL45 DEL45 DEL42 DEL42 DEL32 DEL34 DEL2 DEL42 DEL32 DEL42 DEL43 DEL57 DEL27 DEL42