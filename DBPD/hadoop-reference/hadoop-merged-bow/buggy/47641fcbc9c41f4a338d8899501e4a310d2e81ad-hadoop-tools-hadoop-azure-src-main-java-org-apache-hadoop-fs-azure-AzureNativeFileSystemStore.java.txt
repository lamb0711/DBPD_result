HADOOP-12334. Change Mode Of Copy Operation of HBase WAL Archiving to bypass Azure Storage Throttling after retries. Contributed by Gaurav Kanade.

+import org.apache.hadoop.io.IOUtils;
+import com.microsoft.azure.storage.blob.BlobType;
+    CloudBlobWrapper srcBlob = null;
+    CloudBlobWrapper dstBlob = null;
+    SelfRenewingLease lease = null;
-      CloudBlobWrapper srcBlob = getBlobReference(srcKey);
+      srcBlob = getBlobReference(srcKey);
-      SelfRenewingLease lease = null;
-      CloudBlobWrapper dstBlob = getBlobReference(dstKey);
+      dstBlob = getBlobReference(dstKey);
-		  StorageErrorCode.SERVER_BUSY.toString())) {
+          StorageErrorCode.SERVER_BUSY.toString())) {
-			copyBlobMaxRetries));
+            copyBlobMaxRetries));
-      // Re-throw exception as an Azure storage exception.
-      throw new AzureException(e);
+      if (e.getErrorCode().equals(
+        StorageErrorCode.SERVER_BUSY.toString())) {
+        LOG.warn("Rename: CopyBlob: StorageException: ServerBusy: Retry complete, will attempt client side copy for page blob");
+        InputStream ipStream = null;
+        OutputStream opStream = null;
+        try {
+          if(srcBlob.getProperties().getBlobType() == BlobType.PAGE_BLOB){
+            ipStream = openInputStream(srcBlob);
+            opStream = openOutputStream(dstBlob);
+            byte[] buffer = new byte[PageBlobFormatHelpers.PAGE_SIZE];
+            int len;
+            while ((len = ipStream.read(buffer)) != -1) {
+              opStream.write(buffer, 0, len);
+            }
+            opStream.flush();
+            opStream.close();
+            ipStream.close();
+          } else {
+            throw new AzureException(e);
+          }
+          safeDelete(srcBlob, lease);
+        } catch(StorageException se) {
+          LOG.warn("Rename: CopyBlob: StorageException: Failed");
+          throw new AzureException(se);
+        } finally {
+          IOUtils.closeStream(ipStream);
+          IOUtils.closeStream(opStream);
+        }
+      } else {
+        throw new AzureException(e);
+      }

INS26 INS26 INS40 INS40 INS60 INS60 MOV60 MOV43 INS59 MOV43 INS59 INS12 INS42 INS33 INS42 INS33 INS21 INS21 MOV44 INS8 INS7 INS7 INS25 INS42 MOV32 INS42 MOV32 INS32 INS8 INS8 INS32 INS42 INS32 INS21 INS60 INS60 INS54 INS53 INS42 INS42 INS40 INS42 INS32 INS43 INS59 INS43 INS59 INS8 MOV12 INS8 INS14 INS42 INS42 INS45 INS42 INS42 INS33 INS42 INS42 INS33 INS25 INS21 INS44 INS8 INS21 INS21 INS43 INS42 INS27 INS8 MOV8 INS32 INS43 INS42 INS21 INS53 INS32 INS32 INS42 INS32 INS40 INS21 INS21 INS60 INS60 INS61 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS32 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS7 INS7 INS5 INS59 INS39 INS59 INS27 INS8 INS32 INS32 INS32 INS42 INS42 INS45 INS43 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS39 INS85 INS42 INS3 INS42 INS36 INS38 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS5 INS40 INS7 INS34 INS32 INS39 INS85 INS42 INS32 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS42 DEL42 DEL59 DEL60 DEL42 DEL59 DEL60