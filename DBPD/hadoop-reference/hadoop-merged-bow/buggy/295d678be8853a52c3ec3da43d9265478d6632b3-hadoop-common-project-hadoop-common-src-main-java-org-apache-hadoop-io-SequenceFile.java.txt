HADOOP-7139. Allow appending to existing SequenceFiles (Contributed by kanaka kumar avvaru)

-    
+
+    private boolean appendMode = false;
+
+    static class AppendIfExistsOption extends Options.BooleanOption implements
+        Option {
+      AppendIfExistsOption(boolean value) {
+        super(value);
+      }
+    }
+
-    
+
+    public static Option appendIfExists(boolean value) {
+      return new AppendIfExistsOption(value);
+    }
+
+      AppendIfExistsOption appendIfExistsOption = Options.getOption(
+          AppendIfExistsOption.class, opts);
-        out = fs.create(p, true, bufferSize, replication, blockSize, progress);
+
+        if (appendIfExistsOption != null && appendIfExistsOption.getValue()
+            && fs.exists(p)) {
+
+          // Read the file and verify header details
+          SequenceFile.Reader reader = new SequenceFile.Reader(conf,
+              SequenceFile.Reader.file(p), new Reader.OnlyHeaderOption());
+          try {
+
+            if (keyClassOption.getValue() != reader.getKeyClass()
+                || valueClassOption.getValue() != reader.getValueClass()) {
+              throw new IllegalArgumentException(
+                  "Key/value class provided does not match the file");
+            }
+
+            if (reader.getVersion() != VERSION[3]) {
+              throw new VersionMismatchException(VERSION[3],
+                  reader.getVersion());
+            }
+
+            if (metadataOption != null) {
+              LOG.info("MetaData Option is ignored during append");
+            }
+            metadataOption = (MetadataOption) SequenceFile.Writer
+                .metadata(reader.getMetadata());
+
+            CompressionOption readerCompressionOption = new CompressionOption(
+                reader.getCompressionType(), reader.getCompressionCodec());
+
+            if (readerCompressionOption.value != compressionTypeOption.value
+                || !readerCompressionOption.codec.getClass().getName()
+                    .equals(compressionTypeOption.codec.getClass().getName())) {
+              throw new IllegalArgumentException(
+                  "Compression option provided does not match the file");
+            }
+
+            sync = reader.getSync();
+
+          } finally {
+            reader.close();
+          }
+
+          out = fs.append(p, bufferSize, progress);
+          this.appendMode = true;
+        } else {
+          out = fs
+              .create(p, true, bufferSize, replication, blockSize, progress);
+        }
-    
+
-      writeFileHeader();
+
+      if (appendMode) {
+        sync();
+      } else {
+        writeFileHeader();
+      }
+    private byte[] getSync() {
+      return sync;
+    }
+
+    private byte getVersion() {
+      return version;
+    }
+

INS23 INS55 INS31 INS31 INS31 INS83 INS39 INS59 INS83 INS42 INS43 INS43 INS31 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS5 INS42 INS8 INS83 INS39 INS42 INS8 INS42 INS9 INS40 INS42 INS42 INS44 INS8 INS42 INS39 INS42 INS41 INS60 INS25 INS39 INS85 INS41 INS41 INS39 INS42 INS46 INS14 INS43 INS59 INS42 INS8 INS8 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS32 INS25 INS21 MOV21 INS42 INS42 INS42 INS57 INS42 INS27 INS8 INS8 INS32 INS43 INS27 INS32 INS60 INS54 INS21 INS21 MOV21 INS42 INS42 INS27 INS32 INS42 INS42 INS42 INS43 INS59 INS8 INS8 INS7 INS7 INS42 INS33 INS42 INS42 INS40 INS42 INS14 INS25 INS25 INS25 INS21 INS60 INS25 INS21 INS21 INS42 INS32 INS22 INS9 INS43 INS42 INS32 INS14 INS27 INS8 INS27 INS8 INS27 INS8 INS7 INS43 INS59 INS27 INS8 INS7 INS32 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS40 INS40 INS42 INS42 INS43 INS27 INS27 INS53 INS32 INS2 INS53 INS42 INS33 INS21 INS42 INS11 INS42 INS42 INS14 INS27 INS38 INS53 INS42 INS32 INS42 INS42 INS40 INS32 INS32 INS32 INS32 INS14 INS42 INS42 INS42 INS34 INS14 INS32 INS43 INS32 INS43 INS32 INS32 INS40 INS40 INS32 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS45 INS43 INS2 INS32 INS42 INS42 INS45 INS42 INS40 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS43 INS45 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS40 INS42 INS40 INS42