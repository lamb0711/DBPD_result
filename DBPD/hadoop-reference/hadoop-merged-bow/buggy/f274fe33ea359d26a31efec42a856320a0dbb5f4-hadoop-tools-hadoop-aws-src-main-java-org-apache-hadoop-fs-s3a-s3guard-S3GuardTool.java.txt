Revert "HADOOP-13974. S3Guard CLI to support list/purge of pending multipart commits."

This reverts commit 35ad9b1dd279b769381ea1625d9bf776c309c5cb.

-import java.util.Date;
-import java.util.Scanner;
-import com.amazonaws.services.s3.model.MultipartUpload;
-import org.apache.hadoop.fs.s3a.MultipartUtils;
-import static org.apache.hadoop.fs.s3a.Invoker.LOG_EVENT;
-      "\t" + Uploads.NAME + " - " + Uploads.PURPOSE + "\n" +
-
-  // These are common to prune, upload subcommands.
-  public static final String AGE_OPTIONS_USAGE = "[-days <days>] "
-      + "[-hours <hours>] [-minutes <minutes>] [-seconds <seconds>]";
-  private long getDeltaComponent(TimeUnit unit, String arg) {
-    String raw = getCommandFormat().getOptValue(arg);
-    if (raw == null || raw.isEmpty()) {
-      return 0;
-    }
-    Long parsed = Long.parseLong(raw);
-    return unit.toMillis(parsed);
-  }
-
-  /**
-   * Convert all age options supplied to total milliseconds of time.
-   * @return Sum of all age options, or zero if none were given.
-   */
-  long ageOptionsToMsec() {
-    long cliDelta = 0;
-    cliDelta += getDeltaComponent(TimeUnit.DAYS, DAYS_FLAG);
-    cliDelta += getDeltaComponent(TimeUnit.HOURS, HOURS_FLAG);
-    cliDelta += getDeltaComponent(TimeUnit.MINUTES, MINUTES_FLAG);
-    cliDelta += getDeltaComponent(TimeUnit.SECONDS, SECONDS_FLAG);
-    return cliDelta;
-  }
-
-  protected void addAgeOptions() {
-    CommandFormat format = getCommandFormat();
-    format.addOptionWithValue(DAYS_FLAG);
-    format.addOptionWithValue(HOURS_FLAG);
-    format.addOptionWithValue(MINUTES_FLAG);
-    format.addOptionWithValue(SECONDS_FLAG);
-  }
-
-        "Age options. Any combination of these integer-valued options:\n" +
-        AGE_OPTIONS_USAGE + "\n" +
+        "\n" +
-      addAgeOptions();
+
+      CommandFormat format = getCommandFormat();
+      format.addOptionWithValue(DAYS_FLAG);
+      format.addOptionWithValue(HOURS_FLAG);
+      format.addOptionWithValue(MINUTES_FLAG);
+      format.addOptionWithValue(SECONDS_FLAG);
+    private long getDeltaComponent(TimeUnit unit, String arg) {
+      String raw = getCommandFormat().getOptValue(arg);
+      if (raw == null || raw.isEmpty()) {
+        return 0;
+      }
+      Long parsed = Long.parseLong(raw);
+      return unit.toMillis(parsed);
+    }
+
-      long cliDelta = ageOptionsToMsec();
+      long cliDelta = 0;
+      cliDelta += getDeltaComponent(TimeUnit.DAYS, "days");
+      cliDelta += getDeltaComponent(TimeUnit.HOURS, "hours");
+      cliDelta += getDeltaComponent(TimeUnit.MINUTES, "minutes");
+      cliDelta += getDeltaComponent(TimeUnit.SECONDS, "seconds");
-  /**
-   * Command to list / abort pending multipart uploads.
-   */
-  static class Uploads extends S3GuardTool {
-    public static final String NAME = "uploads";
-    public static final String ABORT = "abort";
-    public static final String LIST = "list";
-    public static final String EXPECT = "expect";
-    public static final String VERBOSE = "verbose";
-    public static final String FORCE = "force";
-
-    public static final String PURPOSE = "list or abort pending " +
-        "multipart uploads";
-    private static final String USAGE = NAME + " [OPTIONS] " +
-        "s3a://BUCKET[/path]\n"
-        + "\t" + PURPOSE + "\n\n"
-        + "Common options:\n"
-        + " (-" + LIST + " | -" + EXPECT +" <num-uploads> | -" + ABORT
-        + ") [-" + VERBOSE +"] "
-        + "[<age-options>] [-force]\n"
-        + "\t - Under given path, list or delete all uploads," +
-        " or only those \n"
-        + "older than specified by <age-options>\n"
-        + "<age-options> are any combination of the integer-valued options:\n"
-        + "\t" + AGE_OPTIONS_USAGE + "\n"
-        + "-" + EXPECT + " is similar to list, except no output is printed,\n"
-        + "\tbut the exit code will be an error if the provided number\n"
-        + "\tis different that the number of uploads found by the command.\n"
-        + "-" + FORCE + " option prevents the \"Are you sure\" prompt when\n"
-        + "\tusing -" + ABORT;
-
-    /** Constant used for output and parsed by tests. */
-    public static final String TOTAL = "Total";
-
-    /** Runs in one of three modes. */
-    private enum Mode { LIST, EXPECT, ABORT };
-    private Mode mode = null;
-
-    /** For Mode == EXPECT, expected listing size. */
-    private int expectedCount;
-
-    /** List/abort uploads older than this many milliseconds. */
-    private long ageMsec = 0;
-
-    /** Verbose output flag. */
-    private boolean verbose = false;
-
-    /** Whether to delete with out "are you sure" prompt. */
-    private boolean force = false;
-
-    /** Path prefix to use when searching multipart uploads. */
-    private String prefix;
-
-    Uploads(Configuration conf) {
-      super(conf, ABORT, LIST, VERBOSE, FORCE);
-      addAgeOptions();
-      getCommandFormat().addOptionWithValue(EXPECT);
-    }
-
-    @Override
-    String getName() {
-      return NAME;
-    }
-
-    @Override
-    public String getUsage() {
-      return USAGE;
-    }
-
-    public int run(String[] args, PrintStream out)
-        throws InterruptedException, IOException {
-      List<String> paths = parseArgs(args);
-      if (paths.isEmpty()) {
-        errorln(getUsage());
-        throw invalidArgs("No options specified");
-      }
-      processArgs(paths, out);
-      promptBeforeAbort(out);
-      processUploads(out);
-
-      out.flush();
-      return SUCCESS;
-    }
-
-    private void promptBeforeAbort(PrintStream out) throws IOException {
-      if (mode != Mode.ABORT || force) {
-        return;
-      }
-      Scanner scanner = new Scanner(System.in, "UTF-8");
-      out.println("Are you sure you want to delete any pending " +
-          "uploads? (yes/no) >");
-      String response = scanner.nextLine();
-      if (!"yes".equalsIgnoreCase(response)) {
-        throw S3GuardTool.userAborted("User did not answer yes, quitting.");
-      }
-    }
-
-    private void processUploads(PrintStream out) throws IOException {
-      MultipartUtils.UploadIterator uploads;
-      uploads = getFilesystem().listUploads(prefix);
-
-      int count = 0;
-      while (uploads.hasNext()) {
-        MultipartUpload upload = uploads.next();
-        if (!olderThan(upload, ageMsec)) {
-          continue;
-        }
-        count++;
-        if (mode == Mode.ABORT || mode == Mode.LIST || verbose) {
-          println(out, "%s%s %s", mode == Mode.ABORT ? "Deleting: " : "",
-              upload.getKey(), upload.getUploadId());
-        }
-        if (mode == Mode.ABORT) {
-          getFilesystem().getWriteOperationHelper()
-              .abortMultipartUpload(upload.getKey(), upload.getUploadId(),
-                  LOG_EVENT);
-        }
-      }
-      if (mode != Mode.EXPECT || verbose) {
-        println(out, "%s %d uploads %s.", TOTAL, count,
-            mode == Mode.ABORT ? "deleted" : "found");
-      }
-      if (mode == Mode.EXPECT) {
-        if (count != expectedCount) {
-          throw badState("Expected %d uploads, found %d", expectedCount, count);
-        }
-      }
-    }
-
-    /**
-     * Check if upload is at least as old as given age.
-     * @param u upload to check
-     * @param msec age in milliseconds
-     * @return true iff u was created at least age milliseconds ago.
-     */
-    private boolean olderThan(MultipartUpload u, long msec) {
-      Date ageDate = new Date(System.currentTimeMillis() - msec);
-      return ageDate.compareTo(u.getInitiated()) >= 0;
-    }
-
-    private void processArgs(List<String> args, PrintStream out)
-        throws IOException {
-      CommandFormat commands = getCommandFormat();
-      String err = "Can only specify one of -" + LIST + ", " +
-          " -" + ABORT + ", and " + EXPECT;
-
-      // Three mutually-exclusive options
-      if (commands.getOpt(LIST)) {
-        mode = Mode.LIST;
-      }
-      if (commands.getOpt(ABORT)) {
-        if (mode != null) {
-          throw invalidArgs(err);
-        }
-        mode = Mode.ABORT;
-      }
-
-      String expectVal = commands.getOptValue(EXPECT);
-      if (expectVal != null) {
-        if (mode != null) {
-          throw invalidArgs(err);
-        }
-        mode = Mode.EXPECT;
-        expectedCount = Integer.parseInt(expectVal);
-      }
-
-      // Default to list
-      if (mode == null) {
-        vprintln(out, "No mode specified, defaulting to -" + LIST);
-        mode = Mode.LIST;
-      }
-
-      // Other flags
-      if (commands.getOpt(VERBOSE)) {
-        verbose = true;
-      }
-      if (commands.getOpt(FORCE)) {
-        force = true;
-      }
-      ageMsec = ageOptionsToMsec();
-
-      String s3Path = args.get(0);
-      URI uri = S3GuardTool.toUri(s3Path);
-      prefix = uri.getPath();
-      if (prefix.length() > 0) {
-        prefix = prefix.substring(1);
-      }
-      vprintln(out, "Command: %s, age %d msec, path %s (prefix \"%s\")",
-          mode.name(), ageMsec, s3Path, prefix);
-
-      initS3AFileSystem(s3Path);
-    }
-
-    /**
-     * If verbose flag is set, print a formatted string followed by a newline
-     * to the output stream.
-     * @param out destination
-     * @param format format string
-     * @param args optional arguments
-     */
-    private void vprintln(PrintStream out, String format, Object...
-        args) {
-      if (verbose) {
-        out.println(String.format(format, args));
-      }
-    }
-  }
-
-   * Build the exception to raise on user-aborted action.
-   * @param format string format
-   * @param args optional arguments for the string
-   * @return a new exception to throw
-   */
-  protected static ExitUtil.ExitException userAborted(
-      String format, Object...args) {
-    return new ExitUtil.ExitException(ERROR, String.format(format, args));
-  }
-
-  /**
-    case Uploads.NAME:
-      command = new Uploads(conf);
-      break;

MOV31 MOV31 INS42 MOV44 MOV46 MOV60 INS21 INS21 INS21 INS21 INS7 INS7 INS7 INS7 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 UPD42 MOV42 INS40 INS45 INS42 INS40 INS45 INS42 INS40 INS45 INS42 INS40 INS45 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL45 DEL40 DEL45 DEL45 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL45 DEL27 DEL59 DEL23 DEL66 DEL65 DEL66 DEL65 DEL29 DEL39 DEL42 DEL42 DEL42 DEL40 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL40 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL40 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL40 DEL42 DEL32 DEL7 DEL21 DEL42 DEL41 DEL8 DEL31 DEL45 DEL42 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL39 DEL42 DEL32 DEL59 DEL60 DEL66 DEL65 DEL29 DEL83 DEL42 DEL42 DEL43 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL45 DEL27 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL45 DEL45 DEL45 DEL42 DEL45 DEL45 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL42 DEL45 DEL45 DEL42 DEL45 DEL45 DEL45 DEL45 DEL42 DEL45 DEL45 DEL42 DEL27 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL42 DEL42 DEL72 DEL42 DEL72 DEL42 DEL72 DEL71 DEL83 DEL42 DEL43 DEL42 DEL33 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL46 DEL42 DEL32 DEL21 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL42 DEL78 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL45 DEL32 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL40 DEL27 DEL42 DEL27 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL40 DEL45 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL45 DEL27 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL45 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL45 DEL32 DEL53 DEL8 DEL25 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL40 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL7 DEL21 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL38 DEL18 DEL8 DEL25 DEL42 DEL37 DEL21 DEL42 DEL40 DEL27 DEL42 DEL40 DEL27 DEL27 DEL42 DEL27 DEL42 DEL42 DEL45 DEL42 DEL40 DEL27 DEL45 DEL45 DEL16 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL40 DEL27 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL61 DEL42 DEL40 DEL27 DEL42 DEL27 DEL42 DEL42 DEL45 DEL42 DEL42 DEL42 DEL40 DEL27 DEL45 DEL45 DEL16 DEL32 DEL21 DEL8 DEL25 DEL42 DEL40 DEL27 DEL42 DEL42 DEL27 DEL42 DEL45 DEL42 DEL42 DEL32 DEL53 DEL8 DEL25 DEL8 DEL25 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL27 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL34 DEL27 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL45 DEL42 DEL45 DEL45 DEL42 DEL45 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL53 DEL8 DEL25 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL53 DEL8 DEL25 DEL42 DEL40 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL42 DEL9 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL34 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL34 DEL27 DEL42 DEL42 DEL42 DEL34 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL55 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL40 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL40 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL14 DEL41 DEL8 DEL31 DEL40 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL10 DEL49