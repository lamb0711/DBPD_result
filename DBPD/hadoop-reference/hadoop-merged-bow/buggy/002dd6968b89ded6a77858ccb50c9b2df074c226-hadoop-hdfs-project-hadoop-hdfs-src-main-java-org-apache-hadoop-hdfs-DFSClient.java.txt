MAPREDUCE-2764. Fix renewal of dfs delegation tokens. Contributed by Owen.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1183187 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.security.SecurityUtil;
+import org.apache.hadoop.security.token.TokenRenewer;
+  private final InetSocketAddress nnAddress;
+    this.nnAddress = nameNodeAddr;
+    SecurityUtil.setTokenService(result, nnAddress);
-   * @see ClientProtocol#renewDelegationToken(Token)
+   * Renew a delegation token
+   * @param token the token to renew
+   * @return the new expiration time
+   * @throws InvalidToken
+   * @throws IOException
+   * @deprecated Use Token.renew instead.
-      return namenode.renewDelegationToken(token);
+      return token.renew(conf);
+    } catch (InterruptedException ie) {                                       
+      throw new RuntimeException("caught interrupted", ie);
-   * @see ClientProtocol#cancelDelegationToken(Token)
+   * Cancel a delegation token
+   * @param token the token to cancel
+   * @throws InvalidToken
+   * @throws IOException
+   * @deprecated Use Token.cancel instead.
-      namenode.cancelDelegationToken(token);
+      token.cancel(conf);
+     } catch (InterruptedException ie) {                                       
+      throw new RuntimeException("caught interrupted", ie);
+  @InterfaceAudience.Private
+  public static class Renewer extends TokenRenewer {
+    
+    @Override
+    public boolean handleKind(Text kind) {
+      return DelegationTokenIdentifier.HDFS_DELEGATION_KIND.equals(kind);
+    }
+
+    @SuppressWarnings("unchecked")
+    @Override
+    public long renew(Token<?> token, Configuration conf) throws IOException {
+      Token<DelegationTokenIdentifier> delToken = 
+          (Token<DelegationTokenIdentifier>) token;
+      LOG.info("Renewing " + 
+               DelegationTokenIdentifier.stringifyToken(delToken));
+      ClientProtocol nn = 
+        DFSUtil.createNamenode
+           (NameNode.getAddress(token.getService().toString()),
+            conf, UserGroupInformation.getCurrentUser());
+      try {
+        return nn.renewDelegationToken(delToken);
+      } catch (RemoteException re) {
+        throw re.unwrapRemoteException(InvalidToken.class, 
+                                       AccessControlException.class);
+      }
+    }
+
+    @SuppressWarnings("unchecked")
+    @Override
+    public void cancel(Token<?> token, Configuration conf) throws IOException {
+      Token<DelegationTokenIdentifier> delToken = 
+          (Token<DelegationTokenIdentifier>) token;
+      LOG.info("Cancelling " + 
+               DelegationTokenIdentifier.stringifyToken(delToken));
+      ClientProtocol nn = DFSUtil.createNamenode(
+          NameNode.getAddress(token.getService().toString()), conf,
+          UserGroupInformation.getCurrentUser());
+      try {
+        nn.cancelDelegationToken(delToken);
+      } catch (RemoteException re) {
+        throw re.unwrapRemoteException(InvalidToken.class,
+            AccessControlException.class);
+      }
+    }
+
+    @Override
+    public boolean isManaged(Token<?> token) throws IOException {
+      return true;
+    }
+    
+  }
+

INS26 INS26 INS40 INS40 INS23 INS55 INS83 INS83 INS43 INS59 INS8 INS8 INS78 INS83 INS83 INS42 INS43 INS31 INS31 INS31 INS31 INS42 INS42 INS21 INS21 INS65 UPD65 INS65 INS65 INS65 INS65 MOV21 INS54 INS65 UPD65 INS65 INS65 INS65 MOV21 INS54 INS40 INS42 INS78 INS83 INS39 INS42 INS44 INS8 INS79 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS79 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS7 INS32 INS66 INS42 INS66 INS66 INS42 INS42 INS66 INS8 INS12 INS12 INS66 INS42 INS66 INS42 INS42 INS66 INS8 INS12 INS12 INS42 INS43 INS42 INS41 INS42 INS45 INS42 INS74 INS42 INS43 INS42 INS42 INS60 INS21 INS60 MOV54 INS42 INS45 INS42 INS74 INS42 INS43 INS42 INS42 INS60 INS21 INS60 MOV54 INS42 INS74 INS42 INS42 INS41 INS22 INS42 INS42 INS42 INS42 INS42 INS41 INS44 INS8 INS44 INS8 INS21 INS44 INS8 INS44 INS8 INS42 INS32 MOV43 INS76 INS42 INS74 INS59 INS32 INS43 INS59 MOV43 INS76 INS42 INS74 INS59 INS32 INS43 INS59 INS43 INS76 INS9 INS52 INS42 INS32 INS43 INS42 INS53 INS43 INS42 INS53 INS32 INS43 INS42 INS53 INS43 INS42 INS53 INS40 INS42 INS42 INS43 INS43 INS42 INS11 INS42 INS42 INS27 INS42 INS42 INS32 INS41 INS43 INS43 INS42 INS11 INS42 INS42 INS27 INS42 INS42 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS32 INS42 INS42 INS42 INS42 INS14 INS42 INS32 INS42 INS42 INS74 INS42 INS45 INS32 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS74 INS42 INS45 INS32 INS42 INS42 INS32 INS42 INS32 INS32 INS43 INS45 INS42 INS42 INS42 INS57 INS57 INS43 INS45 INS42 INS42 INS42 INS57 INS57 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS43 INS43 INS42 INS43 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL69 DEL68 DEL8 DEL42 DEL42 DEL69 DEL68 DEL8 DEL32 DEL21 DEL32 DEL41