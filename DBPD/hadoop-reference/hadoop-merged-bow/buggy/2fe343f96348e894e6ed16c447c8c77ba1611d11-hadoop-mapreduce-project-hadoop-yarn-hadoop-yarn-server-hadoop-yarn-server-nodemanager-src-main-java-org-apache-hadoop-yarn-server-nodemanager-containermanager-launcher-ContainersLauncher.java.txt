MAPREDUCE-3240. Fixed NodeManager to be able to forcefully cleanup its containers (process-trees) irrespective of whether the container succeeded, or killed. Contributed by Hitesh Shah.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1189711 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.yarn.conf.YarnConfiguration;
-import org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor.Signal;
+  private static final Log LOG = LogFactory.getLog(ContainersLauncher.class);
+
-    public RunningContainer(String string, Future<Integer> submit) {
-      this.user = string;
+    public RunningContainer(Future<Integer> submit,
+        ContainerLaunch launcher) {
+      this.launcher = launcher;
-    String user;
+    ContainerLaunch launcher;
-    String userName = container.getUser();
-            new RunningContainer(userName,
-                containerLauncher.submit(launch)));
+            new RunningContainer(containerLauncher.submit(launch), 
+                launch));
-        if (rContainer != null) {
-  
-          if (rContainer.isDone()) {
-            // The future is already done by this time.
-            break;
-          }
-  
-          // Cancel the future so that it won't be launched if it isn't already.
+        if (rContainer != null 
+            && !rContainer.isDone()) {
+          // Cancel the future so that it won't be launched 
+          // if it isn't already.
-  
-          // Kill the container
-          String processId = exec.getProcessId(containerId);
-          if (processId != null) {
-            try {
-              exec.signalContainer(rContainerDatum.user,
-                  processId, Signal.KILL);
-            } catch (IOException e) {
-              // TODO Auto-generated catch block
-              e.printStackTrace();
-            }
-          }
+        }
+
+        // Cleanup a container whether it is running/killed/completed, so that
+        // no sub-processes are alive.
+        try {
+          rContainerDatum.launcher.cleanupContainer();
+        } catch (IOException e) {
+          LOG.warn("Got exception while cleaning container " + containerId
+              + ". Ignoring.");

MOV26 INS26 INS26 INS40 INS40 UPD40 INS23 MOV23 INS83 INS83 INS83 INS43 INS59 MOV44 INS42 INS42 INS32 MOV21 UPD43 INS42 INS42 INS57 UPD43 UPD42 UPD42 UPD42 INS25 INS54 INS43 UPD42 INS27 MOV8 MOV8 MOV12 INS42 UPD42 MOV42 MOV27 INS38 MOV21 UPD42 UPD42 MOV32 UPD40 UPD42 UPD42 UPD42 INS27 INS45 INS42 INS45 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL10 DEL42 DEL42 DEL40 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL54 DEL8 DEL25 DEL8 DEL25