HADOOP-14556. S3A to support Delegation Tokens.

Contributed by Steve Loughran and Daryn Sharp.

+import java.util.Collections;
+import org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException;
- *   <li>On failure, the last AmazonClientException raised is rethrown.</li>
+ *   <li>On failure, the last "relevant" AmazonClientException raised is
+ *   rethrown; exceptions other than 'no credentials' have priority.</li>
+   * The name, which is empty by default.
+   * Uses in the code assume if non empty there's a trailing space.
+   */
+  private String name = "";
+
+  /**
+   * Create with an initial list of providers.
+   * @param name name for error messages, may be ""
+   * @param providerArgs provider list.
+   */
+  public AWSCredentialProviderList(final String name,
+      final AWSCredentialsProvider... providerArgs) {
+    setName(name);
+    Collections.addAll(providers, providerArgs);
+  }
+
+  /**
+   * Set the name; adds a ": " if needed.
+   * @param name name to add, or "" for no name.
+   */
+  public void setName(final String name) {
+    if (!name.isEmpty() && !name.endsWith(": ")) {
+      this.name = name + ": ";
+    } else {
+      this.name = name;
+    }
+  }
+
+  /**
+   * Add all providers from another list to this one.
+   * @param other the other list.
+   */
+  public void addAll(AWSCredentialProviderList other) {
+    providers.addAll(other.providers);
+  }
+
+  /**
-      throw new NoAuthWithAWSException(
+      throw new NoAuthWithAWSException(name +
+        Preconditions.checkNotNull(credentials,
+            "Null credentials returned by %s", provider);
+      } catch (NoAwsCredentialsException e) {
+        // don't bother with the stack trace here as it is usually a
+        // minor detail.
+
+        // only update the last exception if it isn't set.
+        // Why so? Stops delegation token issues being lost on the fallback
+        // values.
+        if (lastException == null) {
+          lastException = e;
+        }
+        LOG.debug("No credentials from {}: {}",
+            provider, e.toString());
-    String message = "No AWS Credentials provided by "
+    String message =  name +  "No AWS Credentials provided by "
-    throw new NoAuthWithAWSException(message, lastException);
+    if (lastException instanceof CredentialInitializationException) {
+      throw lastException;
+    } else {
+      throw new NoAuthWithAWSException(message, lastException);
+    }
-      throw new NoAuthWithAWSException(NO_AWS_CREDENTIAL_PROVIDERS);
+      throw new NoAuthWithAWSException(name + NO_AWS_CREDENTIAL_PROVIDERS);
+        name +
-        StringUtils.join(providers, ", ") + ']';
+        StringUtils.join(providers, ", ") + ']'
+        + (lastProvider != null ? (" last provider: " + lastProvider) : "");
+
+  /**
+   * Get the size of this list.
+   * @return the number of providers in the list.
+   */
+  public int size() {
+    return providers.size();
+  }

INS26 INS26 MOV31 INS40 INS40 INS23 INS31 INS31 INS31 INS31 INS29 INS83 INS43 INS59 INS29 INS83 INS42 INS44 INS44 INS8 INS29 UPD42 INS44 INS29 INS83 INS39 INS42 INS44 INS8 MOV29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 UPD66 INS66 INS65 INS42 INS42 INS45 INS65 INS65 INS65 INS83 INS43 INS42 INS83 INS43 INS42 INS21 INS21 INS65 INS65 INS83 INS43 INS42 INS65 INS65 INS43 INS42 INS21 INS25 INS25 INS65 INS65 INS41 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS32 INS32 INS66 INS42 INS66 INS42 INS27 INS8 INS66 INS42 INS66 INS42 INS32 INS8 INS62 INS8 INS8 MOV32 MOV8 INS66 INS66 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS38 INS38 INS21 INS21 INS42 INS42 INS40 MOV21 INS53 INS42 INS43 INS53 MOV53 MOV45 INS42 MOV45 INS36 INS42 INS42 INS32 INS32 INS7 INS7 INS14 INS12 INS42 INS42 INS42 INS16 INS42 INS42 INS42 INS42 INS45 INS22 INS27 INS22 INS42 MOV43 INS27 INS21 INS44 INS8 INS27 INS27 INS36 INS45 INS52 INS42 INS42 INS45 INS52 INS42 INS42 INS42 INS32 INS43 INS42 INS25 INS21 INS42 INS42 INS42 INS33 INS27 INS42 INS42 INS42 INS45 INS42 INS42 INS27 INS8 INS32 INS45 INS42 INS42 INS33 INS21 INS42 INS42 INS45 INS42 INS32 INS7 INS42 INS42 INS42 INS42 DEL42 DEL14 DEL53 DEL42 DEL27