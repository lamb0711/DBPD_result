Revert HADOOP-7202 since HDFS cannot be compiled.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1086455 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.IOException;
-import java.util.LinkedList;
+import java.io.*;
+import java.util.List;
-import org.apache.hadoop.classification.InterfaceAudience;
-import org.apache.hadoop.classification.InterfaceStability;
-import org.apache.hadoop.fs.ContentSummary;
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.fs.FileSystem;
+import org.apache.hadoop.fs.Path;
-@InterfaceAudience.Private
-@InterfaceStability.Evolving
-
-public class Count extends FsCommand {
+public class Count extends Command {
-  public static final String USAGE = "-" + NAME + " [-q] <path> ...";
+  public static final String USAGE = "-" + NAME + "[-q] <path>";
-  private boolean showQuotas;
+  private boolean qOption;
-  @Override
-  protected void processOptions(LinkedList<String> args) {
-    CommandFormat cf = new CommandFormat(NAME, 1, Integer.MAX_VALUE, "q");
-    cf.parse(args);
-    if (args.size() == 0) { // default path is the current working directory
-      args.add(".");
+  /** Constructor
+   * 
+   * @param cmd the count command
+   * @param pos the starting index of the arguments 
+   */
+  public Count(String[] cmd, int pos, Configuration conf) {
+    super(conf);
+    CommandFormat c = new CommandFormat(NAME, 1, Integer.MAX_VALUE, "q");
+    List<String> parameters = c.parse(cmd, pos);
+    this.args = parameters.toArray(new String[parameters.size()]);
+    if (this.args.length == 0) { // default path is the current working directory
+      this.args = new String[] {"."};
-    showQuotas = cf.getOpt("q");
+    this.qOption = c.getOpt("q") ? true: false;
+  }
+  
+  /** Check if a command is the count command
+   * 
+   * @param cmd A string representation of a command starting with "-"
+   * @return true if this is a count command; false otherwise
+   */
+  public static boolean matches(String cmd) {
+    return ("-" + NAME).equals(cmd); 
-  protected void processPath(PathData src) throws IOException {
-    ContentSummary summary = src.fs.getContentSummary(src.path);
-    out.println(summary.toString(showQuotas) + src.path);
+  public String getCommandName() {
+    return NAME;
+  }
+
+  @Override
+  protected void run(Path path) throws IOException {
+    FileSystem fs = path.getFileSystem(getConf());
+    System.out.println(fs.getContentSummary(path).toString(qOption) + path);

UPD40 UPD40 UPD40 UPD40 UPD40 UPD43 INS31 INS31 UPD42 INS29 UPD83 INS42 INS44 INS44 INS29 INS83 INS83 INS39 INS42 INS44 INS8 MOV78 INS83 INS43 INS42 INS8 UPD42 UPD42 INS65 INS65 INS65 INS5 INS42 INS39 INS42 INS43 INS42 INS46 INS60 INS21 INS65 INS65 INS65 INS43 INS42 INS41 INS42 INS41 UPD43 UPD42 UPD45 INS66 INS42 INS66 INS42 INS66 INS43 INS85 INS42 INS42 UPD74 MOV74 INS59 INS7 INS66 INS42 INS66 INS66 INS42 INS32 INS42 UPD42 UPD43 INS42 UPD42 UPD43 INS42 INS32 INS22 INS32 INS22 INS22 INS16 INS36 INS42 INS42 UPD42 UPD42 INS32 INS40 UPD42 UPD42 MOV42 MOV42 INS42 UPD42 MOV42 INS52 INS42 INS42 INS42 INS3 INS22 INS42 INS7 INS52 INS42 INS32 INS9 INS9 INS27 INS42 INS42 INS32 INS42 INS5 INS32 INS52 INS42 INS22 INS3 UPD42 MOV42 MOV42 MOV45 INS45 INS42 UPD42 MOV42 INS32 UPD42 INS43 INS85 INS42 INS42 INS52 INS42 INS5 INS4 INS42 UPD42 MOV42 INS42 INS42 INS43 INS85 INS45 INS42 DEL40 DEL78 DEL40 DEL78 DEL39 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL32 DEL42 DEL32 DEL40 DEL40 DEL32 DEL42 DEL40