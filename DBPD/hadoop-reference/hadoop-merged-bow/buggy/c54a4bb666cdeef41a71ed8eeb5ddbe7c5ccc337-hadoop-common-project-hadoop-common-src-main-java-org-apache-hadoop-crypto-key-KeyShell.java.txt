HADOOP-10583. bin/hadoop key throws NPE with no args and assorted other fixups. (clamb via tucu)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594320 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Map;
-
-import javax.crypto.KeyGenerator;
+      boolean moreTokens = (i < args.length - 1);
-        String keyName = args[++i];
+        String keyName = "--help";
+        if (moreTokens) {
+          keyName = args[++i];
+        }
+
-        if (keyName.equals("--help")) {
+        if ("--help".equals(keyName)) {
-        String keyName = args[++i];
+        String keyName = "--help";
+        if (moreTokens) {
+          keyName = args[++i];
+        }
+
-        if (keyName.equals("--help")) {
+        if ("--help".equals(keyName)) {
-        String keyName = args[++i];
+        String keyName = "--help";
+        if (moreTokens) {
+          keyName = args[++i];
+        }
+
-        if (keyName.equals("--help")) {
+        if ("--help".equals(keyName)) {
-      } else if (args[i].equals("list")) {
+      } else if ("list".equals(args[i])) {
-      } else if (args[i].equals("--size")) {
+      } else if ("--size".equals(args[i]) && moreTokens) {
-      } else if (args[i].equals("--cipher")) {
+      } else if ("--cipher".equals(args[i]) && moreTokens) {
-      } else if (args[i].equals("--provider")) {
+      } else if ("--provider".equals(args[i]) && moreTokens) {
-      } else if (args[i].equals("--metadata")) {
+      } else if ("--metadata".equals(args[i])) {
-      } else if (args[i].equals("-i") || (args[i].equals("--interactive"))) {
+      } else if ("-i".equals(args[i]) || ("--interactive".equals(args[i]))) {
-      } else if (args[i].equals("--help")) {
+      } else if ("--help".equals(args[i])) {
+
+    if (command == null) {
+      printKeyShellUsage();
+      return -1;
+    }
+
-    }
-    else {
+    } else {
-        }
-        else {
+        } else {
-        out.println(provider.getClass().getName() + " has been updated.");
+        out.println(provider + " has been updated.");
-        "list [--provider] [--metadata] [--help]";
+        "list [--provider <provider>] [--metadata] [--help]";
-        "The list subcommand displays the keynames contained within \n" +
-        "a particular provider - as configured in core-site.xml or " +
-        "indicated\nthrough the --provider argument.\n" +
-        "If the --metadata option is used, the keys metadata will be printed";
+        "The list subcommand displays the keynames contained within\n" +
+        "a particular provider as configured in core-site.xml or\n" +
+        "specified with the --provider argument. --metadata displays\n" +
+        "the metadata.";
-            + "Consider using the --provider option to indicate the provider\n"
-            + "to use. If you want to list a transient provider then you\n"
-            + "you MUST use the --provider argument.");
+          + "Use the --provider option to specify a provider. If you\n"
+          + "want to list a transient provider then you must use the\n"
+          + "--provider argument.");
-        List<String> keys = provider.getKeys();
-        out.println("Listing keys for KeyProvider: " + provider.toString());
+        final List<String> keys = provider.getKeys();
+        out.println("Listing keys for KeyProvider: " + provider);
-          Metadata[] meta =
+          final Metadata[] meta =
-          for(int i=0; i < meta.length; ++i) {
+          for (int i = 0; i < meta.length; ++i) {
-        out.println("Cannot list keys for KeyProvider: " + provider.toString()
+        out.println("Cannot list keys for KeyProvider: " + provider
-    public static final String USAGE = "roll <keyname> [--provider] [--help]";
+    public static final String USAGE = "roll <keyname> [--provider <provider>] [--help]";
-        "The roll subcommand creates a new version of the key specified\n" +
-        "through the <keyname> argument within the provider indicated using\n" +
-        "the --provider argument";
+      "The roll subcommand creates a new version for the specified key\n" +
+      "within the provider indicated using the --provider argument\n";
-        out.println("There are no valid KeyProviders configured.\n"
-            + "Key will not be rolled.\n"
-            + "Consider using the --provider option to indicate the provider"
-            + " to use.");
+        out.println("There are no valid KeyProviders configured. The key\n" +
+          "has not been rolled. Use the --provider option to specify\n" +
+          "a provider.");
-        out.println("There is no keyName specified. Please provide the" +
-            "mandatory <keyname>. See the usage description with --help.");
+        out.println("Please provide a <keyname>.\n" +
+          "See the usage description by using --help.");
-        Metadata md = provider.getMetadata(keyName);
-            + provider.toString() + " for key name: " + keyName);
+            + provider + "\n  for key name: " + keyName);
-              + provider.toString());
+              + provider);
-            + provider.toString());
+            + provider);
-    public static final String USAGE = "delete <keyname> [--provider] [--help]";
+    public static final String USAGE = "delete <keyname> [--provider <provider>] [--help]";
-        "The delete subcommand deletes all of the versions of the key\n" +
-        "specified as the <keyname> argument from within the provider\n" +
-        "indicated through the --provider argument";
+        "The delete subcommand deletes all versions of the key\n" +
+        "specified by the <keyname> argument from within the\n" +
+        "provider specified --provider.";
-        out.println("There are no valid KeyProviders configured.\n"
-            + "Nothing will be deleted.\n"
-            + "Consider using the --provider option to indicate the provider"
-            + " to use.");
+        out.println("There are no valid KeyProviders configured. Nothing\n"
+          + "was deleted. Use the --provider option to specify a provider.");
-        out.println("There is no keyName specified. Please provide the" +
-            "mandatory <keyname>. See the usage description with --help.");
+        out.println("There is no keyName specified. Please specify a " +
+            "<keyname>. See the usage description with --help.");
-                  + "the key: " + keyName + " from KeyProvider "
-                  + provider.toString() + ". Continue?:");
+                  + " key: " + keyName + " from KeyProvider "
+                  + provider + ". Continue?:");
-          + provider.toString());
+          + provider);
-          out.println(keyName + "has NOT been deleted.");
+          out.println(keyName + " has not been deleted.");
-    public static final String USAGE = "create <keyname> [--cipher] " +
-    		"[--size] [--provider] [--help]";
+    public static final String USAGE =
+      "create <keyname> [--cipher <cipher>] [--size <size>]\n" +
+      "                     [--provider <provider>] [--help]";
-        "The create subcommand creates a new key for the name specified\n" +
-        "as the <keyname> argument within the provider indicated through\n" +
-        "the --provider argument. You may also indicate the specific\n" +
-        "cipher through the --cipher argument. The default for cipher is\n" +
-        "currently \"AES/CTR/NoPadding\". The default keysize is \"256\".\n" +
-        "You may also indicate the requested key length through the --size\n" +
-        "argument.";
+      "The create subcommand creates a new key for the name specified\n" +
+      "by the <keyname> argument within the provider specified by the\n" +
+      "--provider argument. You may specify a cipher with the --cipher\n" +
+      "argument. The default cipher is currently \"AES/CTR/NoPadding\".\n" +
+      "The default keysize is 256. You may specify the requested key\n" +
+      "length using the --size argument.\n";
-        out.println("There are no valid KeyProviders configured.\nKey" +
-        		" will not be created.\n"
-            + "Consider using the --provider option to indicate the provider" +
-            " to use.");
+        out.println("There are no valid KeyProviders configured. No key\n" +
+          " was created. You can use the --provider option to specify\n" +
+          " a provider to use.");
-        out.println("There is no keyName specified. Please provide the" +
-        		"mandatory <keyname>. See the usage description with --help.");
+        out.println("Please provide a <keyname>. See the usage description" +
+          " with --help.");
-        out.println(keyName + " has NOT been created. " + e.getMessage());
+        out.println(keyName + " has not been created. " + e.getMessage());
-        out.println(keyName + " has NOT been created. " + e.getMessage());
+        out.println(keyName + " has not been created. " + e.getMessage());
-        out.println(keyName + " has NOT been created. " + e.getMessage());
+        out.println(keyName + " has not been created. " + e.getMessage());

INS25 MOV43 MOV43 MOV43 MOV43 MOV43 MOV43 MOV43 MOV43 INS27 INS8 UPD45 UPD45 UPD45 MOV12 INS60 INS42 INS33 INS21 INS41 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 INS39 INS59 INS32 INS38 MOV21 MOV21 MOV41 MOV41 MOV21 MOV21 MOV44 MOV44 MOV44 INS42 INS36 INS25 INS42 INS34 INS42 INS83 INS42 INS27 INS42 INS8 INS25 MOV25 INS42 INS27 INS45 INS21 INS45 INS42 INS42 INS8 INS25 MOV25 MOV32 MOV2 UPD45 UPD45 UPD45 INS42 INS83 UPD45 UPD45 UPD45 UPD45 UPD45 INS42 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 UPD45 INS40 INS34 INS7 INS45 INS21 INS45 INS42 INS42 INS8 INS45 INS27 INS42 INS42 UPD45 UPD45 UPD45 INS42 MOV2 INS7 INS45 INS21 INS45 INS42 MOV32 MOV2 INS42 INS27 INS42 MOV2 INS7 INS45 MOV32 MOV2 INS42 UPD27 MOV27 INS42 INS42 UPD45 INS42 MOV2 INS45 MOV2 INS42 MOV32 MOV2 UPD45 INS45 INS45 INS27 MOV32 MOV2 INS36 MOV32 MOV2 INS45 MOV32 MOV2 INS45 INS45 DEL40 DEL26 DEL40 DEL26 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL45 DEL45 DEL45 DEL45 DEL36 DEL45 DEL45 DEL45 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL45 DEL45 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL45 DEL45 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL45 DEL45