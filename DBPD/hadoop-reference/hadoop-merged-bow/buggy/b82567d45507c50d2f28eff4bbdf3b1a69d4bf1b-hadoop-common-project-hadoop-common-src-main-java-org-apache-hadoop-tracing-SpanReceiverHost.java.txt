HDFS-8213. DFSClient should use hdfs.client.htrace HTrace configuration prefix rather than hadoop.htrace (cmccabe)

+import java.util.HashMap;
-  public static final String SPAN_RECEIVERS_CONF_KEY =
-    "hadoop.htrace.spanreceiver.classes";
+  public static final String SPAN_RECEIVERS_CONF_SUFFIX =
+    "spanreceiver.classes";
+  private static final HashMap<String, SpanReceiverHost> hosts =
+      new HashMap<String, SpanReceiverHost>(1);
+  private final String confPrefix;
-  private final static String LOCAL_FILE_SPAN_RECEIVER_PATH =
-      "hadoop.htrace.local-file-span-receiver.path";
+  private final static String LOCAL_FILE_SPAN_RECEIVER_PATH_SUFFIX =
+      "local-file-span-receiver.path";
-  private static enum SingletonHolder {
-    INSTANCE;
-    Object lock = new Object();
-    SpanReceiverHost host = null;
-  }
-
-  public static SpanReceiverHost getInstance(Configuration conf) {
-    if (SingletonHolder.INSTANCE.host != null) {
-      return SingletonHolder.INSTANCE.host;
-    }
-    synchronized (SingletonHolder.INSTANCE.lock) {
-      if (SingletonHolder.INSTANCE.host != null) {
-        return SingletonHolder.INSTANCE.host;
+  public static SpanReceiverHost get(Configuration conf, String confPrefix) {
+    synchronized (SpanReceiverHost.class) {
+      SpanReceiverHost host = hosts.get(confPrefix);
+      if (host != null) {
+        return host;
-      SpanReceiverHost host = new SpanReceiverHost();
-      host.loadSpanReceivers(conf);
-      SingletonHolder.INSTANCE.host = host;
+      final SpanReceiverHost newHost = new SpanReceiverHost(confPrefix);
+      newHost.loadSpanReceivers(conf);
-            SingletonHolder.INSTANCE.host.closeReceivers();
+            newHost.closeReceivers();
-      return SingletonHolder.INSTANCE.host;
+      hosts.put(confPrefix, newHost);
+      return newHost;
+  private SpanReceiverHost(String confPrefix) {
+    this.confPrefix = confPrefix;
+  }
+
-    String[] receiverNames =
-        config.getTrimmedStrings(SPAN_RECEIVERS_CONF_KEY);
+    String receiverKey = confPrefix + SPAN_RECEIVERS_CONF_SUFFIX;
+    String[] receiverNames = config.getTrimmedStrings(receiverKey);
-        LOG.trace("No span receiver names found in " +
-                  SPAN_RECEIVERS_CONF_KEY + ".");
+        LOG.trace("No span receiver names found in " + receiverKey + ".");
-    if (config.get(LOCAL_FILE_SPAN_RECEIVER_PATH) == null) {
+    String pathKey = confPrefix + LOCAL_FILE_SPAN_RECEIVER_PATH_SUFFIX;
+    if (config.get(pathKey) == null) {
-      config.set(LOCAL_FILE_SPAN_RECEIVER_PATH, uniqueFile);
+      config.set(pathKey, uniqueFile);
-        LOG.trace("Set " + LOCAL_FILE_SPAN_RECEIVER_PATH + " to " +  uniqueFile);
+        LOG.trace("Set " + pathKey + " to " + uniqueFile);
-        new SpanReceiverBuilder(TraceUtils.wrapHadoopConf(config, extraConfig));
+        new SpanReceiverBuilder(TraceUtils.
+            wrapHadoopConf(confPrefix, config, extraConfig));

INS26 INS40 INS23 INS23 INS23 INS31 MOV83 MOV83 INS83 INS74 MOV59 INS83 INS83 INS43 MOV59 INS83 INS83 INS83 MOV43 INS59 UPD42 INS44 INS83 INS42 INS44 INS8 UPD42 UPD45 INS43 INS43 INS43 UPD42 INS42 UPD42 INS42 INS45 INS43 INS42 INS43 INS42 INS21 INS60 INS60 INS42 INS42 UPD42 MOV42 INS74 INS34 INS42 INS57 INS42 INS7 INS43 INS59 INS43 INS59 MOV43 INS43 INS43 INS43 MOV43 INS60 INS21 INS22 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 UPD42 MOV42 MOV43 INS59 INS83 INS43 INS32 INS42 INS52 INS42 INS42 INS42 UPD42 MOV32 INS42 INS42 UPD42 MOV32 MOV43 INS42 INS32 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 MOV43 INS42 UPD42 UPD42 INS42 DEL43 DEL33 DEL83 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL42 DEL42 DEL72 DEL43 DEL23 DEL23 DEL71 DEL40 DEL33 DEL27 DEL40 DEL41 DEL8 DEL25 DEL40 DEL40 DEL40 DEL40 DEL42 DEL7 DEL21 DEL40 DEL40