HDFS-1073. Redesign the NameNode's storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.io.MD5Hash;
+import com.google.common.collect.ComparisonChain;
+
-  long editsTime = -1L;
-  long checkpointTime = -1L;
-  MD5Hash imageDigest = null;
+  private static final int NUM_FIELDS = 7;
+
+  
+  long mostRecentCheckpointTxId;
+  long curSegmentTxId;
-    editsTime = fsImage.getEditLog().getFsEditTime();
-    checkpointTime = fsImage.getStorage().getCheckpointTime();
-    imageDigest = fsImage.getStorage().getImageDigest();
-    checkpointTime = fsImage.getStorage().getCheckpointTime();
+    
+    mostRecentCheckpointTxId = fsImage.getStorage().getMostRecentCheckpointTxId();
+    curSegmentTxId = fsImage.getEditLog().getCurSegmentTxId();
-    assert fields.length == 8 : "Must be 8 fields in CheckpointSignature";
-    layoutVersion = Integer.valueOf(fields[0]);
-    namespaceID = Integer.valueOf(fields[1]);
-    cTime = Long.valueOf(fields[2]);
-    editsTime = Long.valueOf(fields[3]);
-    checkpointTime = Long.valueOf(fields[4]);
-    imageDigest = new MD5Hash(fields[5]);
-    clusterID = fields[6];
-    blockpoolID = fields[7];
-  }
-
-  /**
-   * Get the MD5 image digest
-   * @return the MD5 image digest
-   */
-  MD5Hash getImageDigest() {
-    return imageDigest;
+    assert fields.length == NUM_FIELDS :
+      "Must be " + NUM_FIELDS + " fields in CheckpointSignature";
+    int i = 0;
+    layoutVersion = Integer.valueOf(fields[i++]);
+    namespaceID = Integer.valueOf(fields[i++]);
+    cTime = Long.valueOf(fields[i++]);
+    mostRecentCheckpointTxId  = Long.valueOf(fields[i++]);
+    curSegmentTxId  = Long.valueOf(fields[i++]);
+    clusterID = fields[i++];
+    blockpoolID = fields[i++];
-         + String.valueOf(editsTime) + FIELD_SEPARATOR
-         + String.valueOf(checkpointTime) + FIELD_SEPARATOR
-         + imageDigest.toString() + FIELD_SEPARATOR
+         + String.valueOf(mostRecentCheckpointTxId) + FIELD_SEPARATOR
+         + String.valueOf(curSegmentTxId) + FIELD_SEPARATOR
-    if(layoutVersion != si.getLayoutVersion()
-        || namespaceID != si.getNamespaceID() 
-        || cTime != si.getStorage().cTime
-        || checkpointTime != si.getStorage().getCheckpointTime() 
-        || !imageDigest.equals(si.getStorage().imageDigest)
-        || !clusterID.equals(si.getClusterID())
-        || !blockpoolID.equals(si.getBlockPoolID())) {
-      // checkpointTime can change when the image is saved - do not compare
+    if(layoutVersion != si.getStorage().layoutVersion
+       || namespaceID != si.getStorage().namespaceID 
+       || cTime != si.getStorage().cTime
+       || !clusterID.equals(si.getClusterID())
+       || !blockpoolID.equals(si.getBlockPoolID())) {
-          + " cTime = " + cTime + "; checkpointTime = " + checkpointTime
-          + " ; imageDigest = " + imageDigest
+          + " cTime = " + cTime
-          + si.getLayoutVersion() + "; " 
-          + si.getNamespaceID() + "; " + si.getStorage().cTime
-          + "; " + si.getStorage().getCheckpointTime() + "; " 
-          + si.getStorage().imageDigest
+          + si.getStorage().layoutVersion + "; " 
+          + si.getStorage().namespaceID + "; " + si.getStorage().cTime
-    return 
-      (layoutVersion < o.layoutVersion) ? -1 : 
-                  (layoutVersion > o.layoutVersion) ? 1 :
-      (namespaceID < o.namespaceID) ? -1 : (namespaceID > o.namespaceID) ? 1 :
-      (cTime < o.cTime) ? -1 : (cTime > o.cTime) ? 1 :
-      (editsTime < o.editsTime) ? -1 : (editsTime > o.editsTime) ? 1 :
-      (checkpointTime < o.checkpointTime) ? -1 : 
-                  (checkpointTime > o.checkpointTime) ? 1 :
-      (clusterID.compareTo(o.clusterID) < 0) ? -1 : 
-                  (clusterID.compareTo(o.clusterID) > 0) ? 1 :
-      (blockpoolID.compareTo(o.blockpoolID) < 0) ? -1 : 
-                  (blockpoolID.compareTo(o.blockpoolID) > 0) ? 1 :
-                    imageDigest.compareTo(o.imageDigest);
+    return ComparisonChain.start()
+      .compare(layoutVersion, o.layoutVersion)
+      .compare(namespaceID, o.namespaceID)
+      .compare(cTime, o.cTime)
+      .compare(mostRecentCheckpointTxId, o.mostRecentCheckpointTxId)
+      .compare(curSegmentTxId, o.curSegmentTxId)
+      .compare(clusterID, o.clusterID)
+      .compare(blockpoolID, o.blockpoolID)
+      .result();
-            (int)(cTime ^ editsTime ^ checkpointTime) ^
-            imageDigest.hashCode() ^ clusterID.hashCode()
-            ^ blockpoolID.hashCode();
+            (int)(cTime ^ mostRecentCheckpointTxId ^ curSegmentTxId)
+            ^ clusterID.hashCode() ^ blockpoolID.hashCode();
-    out.writeLong(editsTime);
-    out.writeLong(checkpointTime);
-    imageDigest.write(out);
+    out.writeLong(mostRecentCheckpointTxId);
+    out.writeLong(curSegmentTxId);
-    editsTime = in.readLong();
-    checkpointTime = in.readLong();
-    imageDigest = new MD5Hash();
-    imageDigest.readFields(in);
+    mostRecentCheckpointTxId = in.readLong();
+    curSegmentTxId = in.readLong();

MOV26 MOV23 UPD40 INS83 INS83 INS83 UPD39 INS39 MOV21 MOV21 UPD42 INS34 UPD42 UPD42 INS60 INS27 INS39 INS59 INS32 UPD42 UPD42 INS42 INS45 INS42 INS45 INS42 INS34 UPD42 UPD42 MOV27 INS32 UPD42 MOV42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS37 INS37 UPD42 UPD42 MOV38 INS32 UPD42 MOV42 MOV42 MOV40 INS37 INS37 INS37 INS37 INS37 INS42 INS42 MOV45 INS32 UPD42 MOV42 MOV42 MOV40 INS42 INS42 INS42 INS42 INS42 MOV22 INS22 INS32 INS42 INS42 INS40 UPD42 UPD42 INS22 INS22 UPD42 MOV32 INS42 INS32 INS42 INS42 INS40 MOV32 INS42 MOV32 INS42 INS32 INS42 INS42 INS40 UPD42 MOV42 MOV42 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS42 INS42 DEL34 DEL38 DEL34 DEL38 DEL42 DEL43 DEL33 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL34 DEL45 DEL34 DEL34 DEL34 DEL34 DEL34 DEL42 DEL42 DEL43 DEL42 DEL34 DEL2 DEL14 DEL7 DEL21 DEL34 DEL34 DEL66 DEL65 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL32 DEL38 DEL27 DEL27 DEL45 DEL42 DEL45 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL22 DEL45 DEL45 DEL42 DEL40 DEL27 DEL36 DEL34 DEL38 DEL42 DEL40 DEL27 DEL36 DEL34 DEL42 DEL40 DEL27 DEL36 DEL34 DEL38 DEL42 DEL40 DEL27 DEL36 DEL34 DEL42 DEL40 DEL27 DEL36 DEL34 DEL38 DEL42 DEL40 DEL27 DEL36 DEL34 DEL42 DEL40 DEL27 DEL36 DEL34 DEL38 DEL42 DEL40 DEL27 DEL36 DEL34 DEL42 DEL40 DEL27 DEL36 DEL34 DEL38 DEL42 DEL40 DEL27 DEL36 DEL34 DEL42 DEL40 DEL32 DEL34 DEL27 DEL36 DEL34 DEL38 DEL42 DEL32 DEL34 DEL27 DEL36 DEL34 DEL42 DEL40 DEL32 DEL34 DEL27 DEL36 DEL34 DEL38 DEL42 DEL32 DEL34 DEL27 DEL36 DEL34 DEL42 DEL40 DEL32 DEL16 DEL16 DEL16 DEL16 DEL16 DEL16 DEL16 DEL16 DEL16 DEL16 DEL16 DEL16 DEL16 DEL16 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21