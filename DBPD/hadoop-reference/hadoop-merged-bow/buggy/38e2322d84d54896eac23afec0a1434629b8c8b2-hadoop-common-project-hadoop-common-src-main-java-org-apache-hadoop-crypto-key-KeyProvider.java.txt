HADOOP-10696. Add optional attributes to KeyProvider Options and Metadata. (tucu)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1604041 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Map;
+    private final static String ATTRIBUTES_FIELD = "attributes";
+    private Map<String, String> attributes;
-    protected Metadata(String cipher, int bitLength,
-                       String description, Date created, int versions) {
+    protected Metadata(String cipher, int bitLength, String description,
+        Map<String, String> attributes, Date created, int versions) {
+      this.attributes = (attributes == null || attributes.isEmpty())
+                        ? null : attributes;
+    @SuppressWarnings("unchecked")
+    public Map<String, String> getAttributes() {
+      return (attributes == null) ? Collections.EMPTY_MAP : attributes;
+    }
+
+        if (attributes != null && attributes.size() > 0) {
+          writer.name(ATTRIBUTES_FIELD).beginObject();
+          for (Map.Entry<String, String> attribute : attributes.entrySet()) {
+            writer.name(attribute.getKey()).value(attribute.getValue());
+          }
+          writer.endObject();
+        }
+      Map<String, String> attributes = null;
+          } else if (ATTRIBUTES_FIELD.equalsIgnoreCase(field)) {
+            reader.beginObject();
+            attributes = new HashMap<String, String>();
+            while (reader.hasNext()) {
+              attributes.put(reader.nextName(), reader.nextString());
+            }
+            reader.endObject();
+      this.attributes = attributes;
+    private Map<String, String> attributes;
+    public Options setAttributes(Map<String, String> attributes) {
+      if (attributes != null) {
+        if (attributes.containsKey(null)) {
+          throw new IllegalArgumentException("attributes cannot have a NULL key");
+        }
+        this.attributes = new HashMap<String, String>(attributes);
+      }
+      return this;
+    }
+
+
+    @SuppressWarnings("unchecked")
+    public Map<String, String> getAttributes() {
+      return (attributes == null) ? Collections.EMPTY_MAP : attributes;
+    }

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS31 INS23 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS74 INS59 INS44 INS79 INS83 INS74 INS42 INS8 INS83 INS74 INS59 INS83 INS43 INS42 INS44 INS8 INS79 INS83 INS74 INS42 INS8 INS42 INS42 INS45 INS43 INS43 INS43 INS42 INS74 INS42 INS21 INS42 INS45 INS43 INS43 INS43 INS41 INS60 INS21 INS43 INS43 INS43 INS42 INS42 INS74 INS42 INS25 INS41 INS42 INS45 INS43 INS43 INS43 INS41 INS42 INS42 INS42 INS43 INS43 INS43 INS7 INS42 INS42 INS42 INS16 INS74 INS59 INS7 INS42 INS42 INS42 INS43 INS43 INS43 INS27 INS8 INS52 INS42 INS42 INS42 INS16 INS42 INS42 INS42 INS22 INS16 INS36 INS40 INS42 INS25 INS43 INS43 INS43 INS42 INS33 INS22 INS42 INS42 INS42 INS42 INS42 INS33 INS25 INS21 INS36 INS40 INS42 INS52 INS42 INS36 INS33 INS42 INS27 INS27 INS8 INS42 INS42 INS42 INS52 INS42 INS32 INS8 INS7 INS27 INS27 INS42 INS33 INS27 INS27 INS21 INS70 INS21 INS42 INS42 INS33 INS53 INS22 INS14 INS42 INS33 INS27 INS32 INS42 INS33 INS32 INS34 INS32 INS44 INS32 INS8 INS32 INS14 INS52 INS42 INS74 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS32 INS42 INS74 INS42 INS42 INS42 INS21 INS42 INS42 INS43 INS45 INS43 INS43 INS43 INS42 INS42 INS42 INS43 INS43 INS43 INS32 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS32 INS42 INS32 INS25 INS42 INS42 INS32 INS42 INS42 MOV32 MOV8 MOV25 INS42 INS42 INS32 INS8 INS42 INS42 INS42 INS21 INS21 INS61 INS21 INS32 INS7 INS32 INS8 INS32 INS42 INS42 INS42 INS14 INS42 INS42 INS21 INS42 INS42 INS74 INS32 INS43 INS43 INS43 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42