HDFS-2340. Support getFileBlockLocations and getDelegationToken in webhdfs.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1173468 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.web.resources.RenewerParam;
-  private static final Log LOG = LogFactory.getLog(NamenodeWebHdfsMethods.class);
+  public static final Log LOG = LogFactory.getLog(NamenodeWebHdfsMethods.class);
+
+  private static final ThreadLocal<String> REMOTE_ADDRESS = new ThreadLocal<String>(); 
+
+  /** @return the remote client address. */
+  public static String getRemoteAddress() {
+    return REMOTE_ADDRESS.get();
+  }
+        REMOTE_ADDRESS.set(request.getRemoteAddr());
+        try {
+
+        } finally {
+          REMOTE_ADDRESS.set(null);
+        }
+        REMOTE_ADDRESS.set(request.getRemoteAddr());
+        try {
+
+        } finally {
+          REMOTE_ADDRESS.set(null);
+        }
+      @QueryParam(RenewerParam.NAME) @DefaultValue(RenewerParam.DEFAULT)
+          final RenewerParam renewer,
-    return get(ugi, delegation, ROOT, op, offset, length, bufferSize);
+    return get(ugi, delegation, ROOT, op, offset, length, renewer, bufferSize);
+      @QueryParam(RenewerParam.NAME) @DefaultValue(RenewerParam.DEFAULT)
+          final RenewerParam renewer,
-          + Param.toSortedString(", ", offset, length, bufferSize));
+          + Param.toSortedString(", ", offset, length, renewer, bufferSize));
+        REMOTE_ADDRESS.set(request.getRemoteAddr());
+        try {
+    case GETFILEBLOCKLOCATIONS:
+    {
+      final long offsetValue = offset.getValue();
+      final Long lengthValue = length.getValue();
+      final LocatedBlocks locatedblocks = np.getBlockLocations(fullpath,
+          offsetValue, lengthValue != null? lengthValue: offsetValue + 1);
+      final String js = JsonUtil.toJsonString(locatedblocks);
+      return Response.ok(js).type(MediaType.APPLICATION_JSON).build();
+    }
+    case GETDELEGATIONTOKEN:
+    {
+      final Token<? extends TokenIdentifier> token = generateDelegationToken(
+          namenode, ugi, renewer.getValue());
+      final String js = JsonUtil.toJsonString(token);
+      return Response.ok(js).type(MediaType.APPLICATION_JSON).build();
+    }
+
+        } finally {
+          REMOTE_ADDRESS.set(null);
+        }
+        REMOTE_ADDRESS.set(request.getRemoteAddr());
+        try {
+
+
+        } finally {
+          REMOTE_ADDRESS.set(null);
+        }

INS26 INS40 INS23 INS31 UPD83 INS83 INS83 INS83 INS74 INS59 INS29 INS83 INS83 INS43 INS42 INS8 INS44 INS44 INS43 INS43 INS42 INS14 INS65 INS42 INS41 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 INS42 INS42 INS74 INS66 INS32 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS8 INS8 INS8 INS8 INS21 INS54 INS21 INS54 INS42 INS21 INS54 INS21 INS54 INS32 MOV8 INS8 INS32 MOV8 INS8 INS32 MOV8 INS8 INS32 MOV8 INS8 INS42 INS42 INS32 INS21 INS42 INS42 INS32 INS21 INS42 INS42 INS32 MOV49 INS21 INS42 INS42 INS32 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS8 INS49 INS8 INS49 INS32 INS42 INS42 INS32 INS42 INS42 INS33 INS42 INS42 INS33 INS42 INS60 INS60 INS60 INS60 INS41 INS42 INS60 INS60 INS41 INS42 INS42 INS33 INS42 INS42 INS33 INS83 INS39 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS32 INS83 INS74 INS59 INS83 INS43 INS59 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS43 INS76 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS16 INS42 INS42 INS42 INS32 INS42 INS40 INS42 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS40 INS27 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS34