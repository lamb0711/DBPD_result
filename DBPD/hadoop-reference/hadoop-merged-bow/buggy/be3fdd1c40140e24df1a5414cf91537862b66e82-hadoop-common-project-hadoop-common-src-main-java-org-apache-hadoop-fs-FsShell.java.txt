HADOOP-10691. Improve the readability of 'hadoop fs -help'. Contributed by Lei Xu.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1602329 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.commons.lang.WordUtils;
+import org.apache.hadoop.tools.TableListing;
+  private static final int MAX_LINE_WIDTH = 80;
+
-      "Displays the usage for given command or all commands if none\n" +
+      "Displays the usage for given command or all commands if none " +
-      "Displays help for given command or all commands if none\n" +
+      "Displays help for given command or all commands if none " +
-          System.out.println("\t[" + instance.getUsage() + "]");
+          out.println("\t[" + instance.getUsage() + "]");
-  // TODO: will eventually auto-wrap the text, but this matches the expected
-  // output for the hdfs tests...
-    boolean firstLine = true;
+    out.println(instance.getUsage() + " :");
+    TableListing listing = null;
+    final String prefix = "  ";
-      String prefix;
-      if (firstLine) {
-        prefix = instance.getUsage() + ":\t";
-        firstLine = false;
-      } else {
-        prefix = "\t\t";
+      if (line.matches("^[ \t]*[-<].*$")) {
+        String[] segments = line.split(":");
+        if (segments.length == 2) {
+          if (listing == null) {
+            listing = createOptionTableListing();
+          }
+          listing.addRow(segments[0].trim(), segments[1].trim());
+          continue;
+        }
-      System.out.println(prefix + line);
-    }    
+
+      // Normal literal description.
+      if (listing != null) {
+        for (String listingLine : listing.toString().split("\n")) {
+          out.println(prefix + listingLine);
+        }
+        listing = null;
+      }
+
+      for (String descLine : WordUtils.wrap(
+          line, MAX_LINE_WIDTH, "\n", true).split("\n")) {
+        out.println(prefix + descLine);
+      }
+    }
+
+    if (listing != null) {
+      for (String listingLine : listing.toString().split("\n")) {
+        out.println(prefix + listingLine);
+      }
+    }
+  }
+
+  // Creates a two-row table, the first row is for the command line option,
+  // the second row is for the option description.
+  private TableListing createOptionTableListing() {
+    return new TableListing.Builder().addField("").addField("", true)
+        .wrapWidth(MAX_LINE_WIDTH).build();

INS26 INS26 INS40 INS40 INS23 INS31 INS83 INS83 INS83 INS39 INS59 INS83 INS43 INS42 INS8 INS42 INS34 MOV21 INS60 INS25 INS42 INS41 INS32 INS43 INS83 INS43 INS59 INS27 INS8 INS32 UPD45 UPD45 INS42 INS42 MOV27 INS42 UPD42 INS33 INS42 INS42 INS45 INS25 INS25 INS70 INS42 INS33 INS70 INS32 INS42 UPD45 INS32 INS8 INS27 MOV8 INS44 INS32 INS8 INS44 INS32 INS8 INS32 INS42 INS42 INS42 INS42 INS45 MOV60 INS25 INS42 INS33 INS70 INS43 INS42 INS32 INS42 INS45 MOV21 INS43 INS42 INS32 INS42 INS45 INS21 INS32 INS42 INS45 INS9 INS5 INS27 INS8 INS44 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS45 INS9 INS42 INS42 INS42 INS32 INS14 INS42 INS45 MOV43 INS85 UPD42 INS32 INS40 INS34 INS25 INS21 INS18 INS43 INS42 INS32 INS42 INS45 INS21 UPD42 INS33 INS42 INS42 INS42 INS27 INS43 INS42 INS42 INS45 INS27 MOV8 INS32 INS42 INS42 INS42 INS32 UPD42 INS42 INS42 INS40 INS42 INS42 INS33 INS42 INS42 INS32 INS32 INS42 INS42 INS27 INS2 INS42 INS2 INS42 INS42 INS42 UPD42 INS32 INS42 INS34 INS42 INS34 INS42 DEL40 DEL42 DEL7 DEL39 DEL9 DEL9 DEL45 DEL40 DEL42 DEL25