HADOOP-6568. Adds authorization for the default servlets. Contributed by Vinod Kumar Vavilapalli.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@916467 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Random;
+import javax.servlet.ServletContext;
+import org.apache.hadoop.security.UserGroupInformation;
+import org.apache.hadoop.security.authorize.AccessControlList;
+import org.apache.hadoop.fs.CommonConfigurationKeys;
+    webAppContext.setDisplayName("WepAppsContext");
-    addDefaultApps(contexts, appDir);
+    addDefaultApps(contexts, appDir, conf);
-      final String appDir) throws IOException {
+      final String appDir, Configuration conf) throws IOException {
-      logContext.addServlet(DefaultServlet.class, "/");
+      logContext.addServlet(AdminAuthorizedServlet.class, "/");
+      logContext.setDisplayName("logs");
+      logContext.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);
+    staticContext.setDisplayName("static");
+    staticContext.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE, conf);
+    LOG.info("Added filter " + name + " (class=" + classname
+        + ") to context " + webAppContext.getDisplayName());
+   * Does the user sending the HttpServletRequest has the administrator ACLs? If
+   * it isn't the case, response will be modified to send an error to the user.
+   * 
+   * @param servletContext
+   * @param request
+   * @param response
+   * @return true if admin-authorized, false otherwise
+   * @throws IOException
+   */
+  public static boolean hasAdministratorAccess(
+      ServletContext servletContext, HttpServletRequest request,
+      HttpServletResponse response) throws IOException {
+    Configuration conf =
+        (Configuration) servletContext.getAttribute(CONF_CONTEXT_ATTRIBUTE);
+
+    // If there is no authorization, anybody has administrator access.
+    if (!conf.getBoolean(
+        CommonConfigurationKeys.HADOOP_SECURITY_AUTHORIZATION, false)) {
+      return true;
+    }
+
+    String remoteUser = request.getRemoteUser();
+    if (remoteUser == null) {
+      return true;
+    }
+
+    String adminsAclString =
+        conf.get(
+            CommonConfigurationKeys.HADOOP_CLUSTER_ADMINISTRATORS_PROPERTY,
+            "*");
+    AccessControlList adminsAcl = new AccessControlList(adminsAclString);
+    UserGroupInformation remoteUserUGI =
+        UserGroupInformation.createRemoteUser(remoteUser);
+    if (!adminsAcl.isUserAllowed(remoteUserUGI)) {
+      response.sendError(HttpServletResponse.SC_UNAUTHORIZED, "User "
+          + remoteUser + " is unauthorized to access this page. "
+          + "Only superusers/supergroup \"" + adminsAclString
+          + "\" can access this page.");
+      return false;
+    }
+    return true;
+  }
+
+  /**
-      
+
+      // Do the authorization
+      if (!HttpServer.hasAdministratorAccess(getServletContext(), request,
+          response)) {
+        return;
+      }
+

MOV26 INS26 INS26 INS26 UPD40 INS40 INS40 INS40 INS31 INS44 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS21 INS43 INS42 INS21 INS21 INS21 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS25 INS60 INS25 INS60 INS60 INS60 INS25 INS41 INS32 INS42 INS32 INS32 INS32 INS66 INS66 INS42 INS42 INS42 INS66 INS42 INS42 INS42 INS42 INS43 INS59 INS38 INS8 INS43 INS59 INS27 INS8 INS43 INS59 INS43 INS59 INS43 INS59 INS38 INS8 INS9 INS25 INS42 INS42 INS45 INS42 INS21 INS21 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS11 INS32 INS41 INS42 INS42 INS32 INS42 INS33 INS41 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS21 INS41 INS38 INS8 INS32 INS32 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS32 INS43 INS32 INS42 INS42 INS40 INS9 INS9 INS42 INS42 INS9 INS42 INS42 INS40 INS45 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS9 INS32 INS41 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS27 INS42 INS42 INS32 INS42 INS42 UPD43 INS42 INS42 INS45 INS42 INS45 INS45 INS42 INS45 INS42 UPD42