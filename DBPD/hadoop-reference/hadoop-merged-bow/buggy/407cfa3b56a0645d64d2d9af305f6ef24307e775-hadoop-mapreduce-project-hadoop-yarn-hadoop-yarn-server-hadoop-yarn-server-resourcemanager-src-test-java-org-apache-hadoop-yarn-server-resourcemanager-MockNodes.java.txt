MAPREDUCE-3958. RM: Remove RMNodeState and replace it with NodeState (Bikas Saha via bobby)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1334043 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.api.records.NodeState;
-import org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNodeState;
-          list.add(nodeInfo(i, perNode, RMNodeState.UNHEALTHY));
+          list.add(nodeInfo(i, perNode, NodeState.UNHEALTHY));
-        RMNodeState[] allStates = RMNodeState.values();
+        NodeState[] allStates = NodeState.values();
-    private RMNodeState state;
+    private NodeState state;
-        int cmdPort, String hostName, RMNodeState state) {
+        int cmdPort, String hostName, NodeState state) {
-    public RMNodeState getState() {
+    public NodeState getState() {
-  private static RMNode buildRMNode(int rack, final Resource perNode, RMNodeState state, String httpAddr) {
+  private static RMNode buildRMNode(int rack, final Resource perNode, NodeState state, String httpAddr) {
-  private static RMNode buildRMNode(int rack, final Resource perNode, RMNodeState state, String httpAddr, int hostnum) {
+  private static RMNode buildRMNode(int rack, final Resource perNode, NodeState state, String httpAddr, int hostnum) {
-    if (state != RMNodeState.UNHEALTHY) {
+    if (state != NodeState.UNHEALTHY) {
-      RMNodeState state) {
+      NodeState state) {
-    return buildRMNode(rack, perNode, RMNodeState.RUNNING, "localhost:0");
+    return buildRMNode(rack, perNode, NodeState.RUNNING, "localhost:0");

MOV26 UPD40 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD40 UPD40 UPD5 UPD43 UPD42 UPD42 UPD40