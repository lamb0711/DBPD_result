HADOOP-2366. Support trimmed strings in Configuration.  Contributed by Michele Catasta


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@789973 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collections;
+  
+  /** 
+   * Get the comma delimited values of the <code>name</code> property as 
+   * a collection of <code>String</code>s, trimmed of the leading and trailing whitespace.  
+   * If no such property is specified then empty <code>Collection</code> is returned.
+   *
+   * @param name property name.
+   * @return property value as a collection of <code>String</code>s, or empty <code>Collection</code> 
+   */
+  public Collection<String> getTrimmedStringCollection(String name) {
+    String valueString = get(name);
+    if (null == valueString) {
+      Collection<String> empty = Collections.emptyList();
+      return empty;
+    }
+    return StringUtils.getTrimmedStringCollection(valueString);
+  }
+  
+  /** 
+   * Get the comma delimited values of the <code>name</code> property as 
+   * an array of <code>String</code>s, trimmed of the leading and trailing whitespace.
+   * If no such property is specified then an empty array is returned.
+   * 
+   * @param name property name.
+   * @return property value as an array of trimmed <code>String</code>s, 
+   *         or empty array. 
+   */
+  public String[] getTrimmedStrings(String name) {
+    String valueString = get(name);
+    return StringUtils.getTrimmedStrings(valueString);
+  }
+
+  /** 
+   * Get the comma delimited values of the <code>name</code> property as 
+   * an array of <code>String</code>s, trimmed of the leading and trailing whitespace.
+   * If no such property is specified then default value is returned.
+   * 
+   * @param name property name.
+   * @param defaultValue The default value
+   * @return property value as an array of trimmed <code>String</code>s, 
+   *         or default value. 
+   */
+  public String[] getTrimmedStrings(String name, String... defaultValue) {
+    String valueString = get(name);
+    if (null == valueString) {
+      return defaultValue;
+    } else {
+      return StringUtils.getTrimmedStrings(valueString);
+    }
+  }

INS26 INS40 INS31 INS31 INS31 INS29 INS83 INS74 INS42 INS44 INS8 INS29 INS83 INS5 INS42 INS44 INS8 INS29 INS83 INS5 INS42 INS44 INS44 INS8 INS65 INS65 INS65 INS43 INS43 INS43 INS42 INS60 INS25 INS41 INS65 INS65 INS65 INS43 INS85 INS43 INS42 INS60 INS41 INS65 INS65 INS65 INS65 INS43 INS85 INS43 INS42 INS43 INS42 INS60 INS25 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS32 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS42 INS42 INS43 INS59 INS32 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS8 INS42 INS42 INS32 INS33 INS42 INS60 INS41 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS33 INS42 INS41 INS41 INS42 INS42 INS74 INS59 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42