HDFS-8831. Trash Support for deletion in HDFS encryption zone. Contributed by Xiaoyu Yao.

+import java.util.Collections;
+
+  /**
+   * Get the root directory of Trash for a path in HDFS.
+   * 1. File in encryption zone returns /ez1/.Trash/username
+   * 2. File not in encryption zone returns /users/username/.Trash
+   * Caller appends either Current or checkpoint timestamp for trash destination
+   * @param path the trash root of the path to be determined.
+   * @return trash root
+   * @throws IOException
+   */
+  @Override
+  public Path getTrashRoot(Path path) throws IOException {
+    if ((path == null) || !dfs.isHDFSEncryptionEnabled()) {
+      return super.getTrashRoot(path);
+    }
+
+    String absSrc = path.toUri().getPath();
+    EncryptionZone ez = dfs.getEZForPath(absSrc);
+    if ((ez != null) && !ez.getPath().equals(absSrc)) {
+      return this.makeQualified(
+          new Path(ez.getPath() + "/" + FileSystem.TRASH_PREFIX +
+              dfs.ugi.getShortUserName()));
+    } else {
+      return super.getTrashRoot(path);
+    }
+  }
+
+  /**
+   * Get all the trash roots of HDFS for current user or for all the users.
+   * 1. File deleted from non-encryption zone /user/username/.Trash
+   * 2. File deleted from encryption zones
+   *    e.g., ez1 rooted at /ez1 has its trash root at /ez1/.Trash/$USER
+   * @allUsers return trashRoots of all users if true, used by emptier
+   * @return trash roots of HDFS
+   * @throws IOException
+   */
+  @Override
+  public Collection<FileStatus> getTrashRoots(boolean allUsers) throws IOException {
+    List<FileStatus> ret = new ArrayList<FileStatus>();
+    // Get normal trash roots
+    ret.addAll(super.getTrashRoots(allUsers));
+
+    // Get EZ Trash roots
+    final RemoteIterator<EncryptionZone> it = dfs.listEncryptionZones();
+    while (it.hasNext()) {
+      Path ezTrashRoot = new Path(it.next().getPath(), FileSystem.TRASH_PREFIX);
+      if (allUsers) {
+        for (FileStatus candidate : listStatus(ezTrashRoot)) {
+          if (exists(candidate.getPath())) {
+            ret.add(candidate);
+          }
+        }
+      } else {
+        Path userTrash = new Path(ezTrashRoot, System.getProperty("user.name"));
+        if (exists(userTrash)) {
+          ret.add(getFileStatus(userTrash));
+        }
+      }
+    }
+    return ret;
+  }

INS26 INS40 INS31 INS31 INS29 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS29 INS78 INS83 INS74 INS42 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS42 INS42 INS43 INS42 INS42 INS25 INS60 INS60 INS25 INS65 INS65 INS65 INS65 INS42 INS43 INS43 INS39 INS42 INS42 INS60 INS21 INS60 INS61 INS41 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS42 INS27 INS8 INS43 INS59 INS43 INS59 INS27 INS8 INS8 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS42 INS42 INS74 INS59 INS32 INS83 INS74 INS59 INS32 INS8 INS42 INS36 INS38 INS41 INS42 INS42 INS32 INS42 INS42 INS32 INS36 INS38 INS41 INS41 INS43 INS43 INS42 INS14 INS42 INS42 INS48 INS43 INS43 INS42 INS32 INS42 INS42 INS60 INS25 INS27 INS32 INS48 INS32 INS42 INS42 INS42 INS42 INS27 INS32 INS32 INS48 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS42 INS8 INS8 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS42 INS42 INS52 INS42 INS14 INS42 INS42 INS43 INS43 INS42 INS42 INS14 INS70 INS60 INS25 INS42 INS42 INS43 INS27 INS42 INS42 INS43 INS32 INS40 INS44 INS32 INS8 INS43 INS59 INS32 INS8 INS42 INS32 INS45 INS40 INS32 INS42 INS32 INS42 INS43 INS42 INS42 INS42 INS25 INS42 INS42 INS14 INS42 INS42 INS21 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS32 INS8 INS43 INS42 INS32 INS32 INS42 INS32 INS21 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42