HADOOP-14535 wasb: implement high-performance random access and seek of block blobs.
Contributed by Thomas Marquardt

+import java.net.HttpURLConnection;
-      throw new NotImplementedException();
+      if (offset < 0 || length <= 0) {
+        throw new IndexOutOfBoundsException();
+      }
+      if (!backingStore.exists(convertUriToDecodedString(uri))) {
+        throw new StorageException("BlobNotFound",
+            "Resource does not exist.",
+            HttpURLConnection.HTTP_NOT_FOUND,
+            null,
+            null);
+      }
+      byte[] content = backingStore.getContent(convertUriToDecodedString(uri));
+      try {
+        os.write(content, (int) offset, (int) length);
+      } catch (IOException e) {
+        throw new StorageException("Unknown error", "Unexpected error", e);
+      }
+
+    int minimumReadSize = AzureNativeFileSystemStore.DEFAULT_DOWNLOAD_BLOCK_SIZE;
+
+    public int getStreamMinimumReadSizeInBytes() {
+      return this.minimumReadSize;
+    }
+
+    @Override
+        this.minimumReadSize = minimumReadSizeBytes;
+
+    int minimumReadSize = AzureNativeFileSystemStore.DEFAULT_DOWNLOAD_BLOCK_SIZE;
+
+    public int getStreamMinimumReadSizeInBytes() {
+      return this.minimumReadSize;
+    }
+
+    @Override
+        this.minimumReadSize = minimumReadSize;

INS26 INS40 INS23 INS31 INS23 INS31 INS8 INS39 INS59 INS78 INS83 INS39 INS42 INS8 INS39 INS59 INS78 INS83 INS39 INS42 INS8 INS25 INS25 INS60 INS54 INS42 INS40 INS42 INS41 INS21 INS42 INS40 INS42 INS41 INS21 INS27 INS8 INS38 INS8 INS5 INS59 INS8 INS12 INS22 INS7 INS22 INS7 INS27 INS27 INS53 INS32 MOV53 INS39 INS85 INS42 INS32 INS21 INS44 INS8 INS52 INS42 INS22 INS42 INS52 INS42 INS22 INS42 INS42 INS34 INS42 INS34 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS43 INS42 INS53 INS52 INS42 INS52 INS42 INS43 INS42 INS42 UPD43 INS45 INS45 INS40 INS33 INS33 INS42 INS42 INS42 INS42 INS42 INS11 INS11 INS42 INS14 INS42 UPD42 INS39 INS42 INS39 INS42 INS43 INS45 INS45 INS42 INS42 DEL8