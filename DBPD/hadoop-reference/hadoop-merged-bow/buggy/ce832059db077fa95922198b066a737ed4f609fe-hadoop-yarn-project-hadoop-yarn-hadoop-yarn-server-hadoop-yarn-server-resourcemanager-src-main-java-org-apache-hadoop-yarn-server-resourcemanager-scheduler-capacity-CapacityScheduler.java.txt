YARN-5864. Capacity Scheduler - Queue Priorities. (wangda)

-  public Comparator<CSQueue> getNonPartitionedQueueComparator() {
-    return CapacitySchedulerQueueManager.NON_PARTITIONED_QUEUE_COMPARATOR;
-  }
-
-  @Override
-  public PartitionedQueueComparator getPartitionedQueueComparator() {
-    return CapacitySchedulerQueueManager.PARTITIONED_QUEUE_COMPARATOR;
-  }
-
-  @Override
+
+  /**
+   * Try to move a reserved container to a targetNode.
+   * If the targetNode is reserved by another application (other than this one).
+   * The previous reservation will be cancelled.
+   *
+   * @param toBeMovedContainer reserved container will be moved
+   * @param targetNode targetNode
+   * @return true if move succeeded. Return false if the targetNode is reserved by
+   *         a different container or move failed because of any other reasons.
+   */
+  public boolean moveReservedContainer(RMContainer toBeMovedContainer,
+      FiCaSchedulerNode targetNode) {
+    try {
+      writeLock.lock();
+
+      if (LOG.isDebugEnabled()) {
+        LOG.debug("Trying to move container=" + toBeMovedContainer + " to node="
+            + targetNode.getNodeID());
+      }
+
+      FiCaSchedulerNode sourceNode = getNode(toBeMovedContainer.getNodeId());
+      if (null == sourceNode) {
+        if (LOG.isDebugEnabled()) {
+          LOG.debug("Failed to move reservation, cannot find source node="
+              + toBeMovedContainer.getNodeId());
+        }
+        return false;
+      }
+
+      // Target node updated?
+      if (getNode(targetNode.getNodeID()) != targetNode) {
+        if (LOG.isDebugEnabled()) {
+          LOG.debug(
+              "Failed to move reservation, node updated or removed, moving "
+                  + "cancelled.");
+        }
+        return false;
+      }
+
+      // Target node's reservation status changed?
+      if (targetNode.getReservedContainer() != null) {
+        if (LOG.isDebugEnabled()) {
+          LOG.debug(
+              "Target node's reservation status changed, moving cancelled.");
+        }
+        return false;
+      }
+
+      FiCaSchedulerApp app = getApplicationAttempt(
+          toBeMovedContainer.getApplicationAttemptId());
+      if (null == app) {
+        if (LOG.isDebugEnabled()) {
+          LOG.debug("Cannot find to-be-moved container's application="
+              + toBeMovedContainer.getApplicationAttemptId());
+        }
+        return false;
+      }
+
+      // finally, move the reserved container
+      return app.moveReservation(toBeMovedContainer, sourceNode, targetNode);
+    } finally {
+      writeLock.unlock();
+    }
+  }

INS31 INS29 MOV83 INS39 INS42 INS44 INS44 INS8 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS54 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS66 UPD42 MOV42 UPD42 MOV42 INS8 INS8 INS21 INS25 INS60 INS25 INS25 INS25 INS60 INS25 INS41 INS21 INS32 INS32 INS8 INS43 INS59 INS27 INS8 INS27 INS8 INS27 INS8 INS43 INS59 INS27 INS8 INS32 INS32 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS32 INS33 INS42 INS25 MOV41 INS32 INS42 INS25 INS41 INS32 INS33 INS25 INS41 UPD42 MOV42 INS42 INS32 INS33 INS42 INS25 MOV41 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS8 INS9 INS42 INS32 INS32 INS8 INS9 INS42 INS42 INS32 INS8 INS9 INS42 INS32 INS32 INS8 INS9 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS21 INS45 INS42 INS45 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS45 INS42 INS42 INS27 INS45 INS32 INS45 INS45 INS45 INS32 INS42 INS42 INS42 INS42 DEL42 DEL78 DEL43 DEL43 DEL74 DEL42 DEL8 DEL31 DEL42 DEL78 DEL83 DEL43 DEL42 DEL8 DEL31 DEL40 DEL40