HADOOP-6584. Provide Kerberized SSL encryption for webservices. 


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@960137 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.security.Krb5AndCertsSslSocketConnector;
+import org.apache.hadoop.security.Krb5AndCertsSslSocketConnector.MODE;
-
+    
+    defineFilter(webAppContext, "krb5Filter", 
+        Krb5AndCertsSslSocketConnector.Krb5SslFilter.class.getName(), 
+        null, null);
+    
-    addInternalServlet(name, pathSpec, clazz);
+    addInternalServlet(name, pathSpec, clazz, false);
+    addInternalServlet(name, pathSpec, clazz, false);
+  }
+
+  /**
+   * Add an internal servlet in the server, specifying whether or not to
+   * protect with Kerberos authentication. 
+   * Note: This method is to be used for adding servlets that facilitate
+   * internal communication and not for user facing functionality. For
+   * servlets added using this method, filters (except internal Kerberized
+   * filters) are not enabled. 
+   * 
+   * @param name The name of the servlet (can be passed as null)
+   * @param pathSpec The path spec for the servlet
+   * @param clazz The servlet class
+   */
+  public void addInternalServlet(String name, String pathSpec, 
+      Class<? extends HttpServlet> clazz, boolean requireAuth) {
+    
+    if(requireAuth && UserGroupInformation.isSecurityEnabled()) {
+       LOG.info("Adding Kerberos filter to " + name);
+       ServletHandler handler = webAppContext.getServletHandler();
+       FilterMapping fmap = new FilterMapping();
+       fmap.setPathSpec(pathSpec);
+       fmap.setFilterName("krb5Filter");
+       fmap.setDispatches(Handler.ALL);
+       handler.addFilterMapping(fmap);
+    }
+    addSslListener(addr, sslConf, needClientAuth, false);
+  }
+
+  /**
+   * Configure an ssl listener on the server.
+   * @param addr address to listen on
+   * @param sslConf conf to retrieve ssl options
+   * @param needCertsAuth whether x509 certificate authentication is required
+   * @param needKrbAuth whether to allow kerberos auth
+   */
+  public void addSslListener(InetSocketAddress addr, Configuration sslConf,
+      boolean needCertsAuth, boolean needKrbAuth) throws IOException {
-    if (needClientAuth) {
+    if (needCertsAuth) {
-    SslSocketConnector sslListener = new SslSocketConnector();
+    Krb5AndCertsSslSocketConnector.MODE mode;
+    if(needCertsAuth && needKrbAuth)
+      mode = MODE.BOTH;
+    else if (!needCertsAuth && needKrbAuth)
+      mode = MODE.KRB;
+    else // Default to certificates
+      mode = MODE.CERTS;
+
+    SslSocketConnector sslListener = new Krb5AndCertsSslSocketConnector(mode);
-    sslListener.setNeedClientAuth(needClientAuth);
+    sslListener.setNeedClientAuth(needCertsAuth);

INS26 INS26 INS40 INS40 INS31 INS31 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS44 MOV8 MOV29 INS83 INS39 INS42 INS44 INS44 MOV44 INS43 INS8 INS29 INS44 INS44 INS21 INS21 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS74 INS42 INS39 INS42 INS25 INS43 INS42 INS43 INS42 INS42 INS21 INS65 INS65 INS65 INS65 INS65 INS39 INS42 INS39 INS42 INS60 INS25 INS60 INS32 INS32 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS43 INS76 INS27 INS8 INS42 INS42 INS32 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 UPD42 UPD43 MOV43 INS59 INS27 INS21 INS25 MOV43 MOV59 INS42 INS42 INS45 INS32 INS33 INS33 INS9 INS42 INS42 INS42 INS42 INS9 INS42 INS43 INS42 INS32 INS21 INS60 INS60 INS21 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS9 INS40 INS42 INS42 INS42 INS7 INS27 INS21 INS21 UPD42 INS57 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS32 INS32 INS32 INS32 INS42 INS40 INS38 INS42 INS7 INS7 INS43 INS42 INS43 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS40 INS42 INS40 INS45 INS42 INS42 INS42 INS43 INS42 DEL42 DEL60