Merge HDFS-2006 HDFS XAttrs branch to Trunk


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596575 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.fs.XAttr;
+import org.apache.hadoop.fs.XAttrSetFlag;
+  
+  public void setXAttr(String src, String name, byte[] value, 
+      EnumSet<XAttrSetFlag> flag) throws IOException {
+    checkOpen();
+    try {
+      namenode.setXAttr(src, XAttrHelper.buildXAttr(name, value), flag);
+    } catch (RemoteException re) {
+      throw re.unwrapRemoteException(AccessControlException.class,
+                                     FileNotFoundException.class,
+                                     NSQuotaExceededException.class,
+                                     SafeModeException.class,
+                                     SnapshotAccessControlException.class,
+                                     UnresolvedPathException.class);
+    }
+  }
+  
+  public byte[] getXAttr(String src, String name) throws IOException {
+    checkOpen();
+    try {
+      final List<XAttr> xAttrs = XAttrHelper.buildXAttrAsList(name);
+      final List<XAttr> result = namenode.getXAttrs(src, xAttrs);
+      return XAttrHelper.getFirstXAttrValue(result);
+    } catch(RemoteException re) {
+      throw re.unwrapRemoteException(AccessControlException.class,
+                                     FileNotFoundException.class,
+                                     UnresolvedPathException.class);
+    }
+  }
+  
+  public Map<String, byte[]> getXAttrs(String src) throws IOException {
+    checkOpen();
+    try {
+      return XAttrHelper.buildXAttrMap(namenode.getXAttrs(src, null));
+    } catch(RemoteException re) {
+      throw re.unwrapRemoteException(AccessControlException.class,
+                                     FileNotFoundException.class,
+                                     UnresolvedPathException.class);
+    }
+  }
+  
+  public Map<String, byte[]> getXAttrs(String src, List<String> names) 
+      throws IOException {
+    checkOpen();
+    try {
+      return XAttrHelper.buildXAttrMap(namenode.getXAttrs(
+          src, XAttrHelper.buildXAttrs(names)));
+    } catch(RemoteException re) {
+      throw re.unwrapRemoteException(AccessControlException.class,
+                                     FileNotFoundException.class,
+                                     UnresolvedPathException.class);
+    }
+  }
+  
+  public void removeXAttr(String src, String name) throws IOException {
+    checkOpen();
+    try {
+      namenode.removeXAttr(src, XAttrHelper.buildXAttr(name));
+    } catch(RemoteException re) {
+      throw re.unwrapRemoteException(AccessControlException.class,
+                                     FileNotFoundException.class,
+                                     NSQuotaExceededException.class,
+                                     SafeModeException.class,
+                                     SnapshotAccessControlException.class,
+                                     UnresolvedPathException.class);
+    }
+  }

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS83 INS5 INS42 INS44 INS44 INS43 INS8 INS83 INS74 INS42 INS44 INS43 INS8 INS83 INS74 INS42 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS43 INS42 INS43 INS42 INS5 INS42 INS74 INS42 INS42 INS21 INS54 INS39 INS85 INS43 INS42 INS43 INS42 INS42 INS21 INS54 INS43 INS43 INS5 INS43 INS42 INS42 INS21 INS54 INS43 INS43 INS5 INS43 INS42 INS74 INS42 INS42 INS21 INS54 INS43 INS42 INS43 INS42 INS42 INS21 INS54 INS42 INS42 INS39 INS85 INS43 INS43 INS32 INS8 INS12 INS42 INS42 INS32 INS8 INS12 INS42 INS42 INS39 INS85 INS42 INS32 INS8 INS12 INS42 INS42 INS39 INS85 INS42 INS43 INS43 INS32 INS8 INS12 INS42 INS42 INS32 INS8 INS12 INS42 INS42 INS42 INS21 INS44 INS8 INS42 INS60 INS60 INS41 INS44 INS8 INS42 INS41 INS44 INS8 INS42 INS42 INS42 INS41 INS44 INS8 INS42 INS21 INS44 INS8 INS32 INS43 INS42 INS53 INS83 INS74 INS59 INS83 INS74 INS59 INS32 INS43 INS42 INS53 INS32 INS43 INS42 INS53 INS32 INS43 INS42 INS53 INS32 INS43 INS42 INS53 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS57 INS57 INS57 INS57 INS57 INS57 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS57 INS57 INS57 INS42 INS42 INS42 INS33 INS42 INS42 INS57 INS57 INS57 INS42 INS42 INS42 INS32 INS42 INS42 INS57 INS57 INS57 INS42 INS42 INS42 INS42 INS42 INS57 INS57 INS57 INS57 INS57 INS57 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42