HADOOP-13434. Add bash quoting to Shell class. (Owen O'Malley)

- * <code>df</code>. It also offers facilities to gate commands by 
+ * <code>df</code>. It also offers facilities to gate commands by
+  /**
+   * Quote the given arg so that bash will interpret it as a single value.
+   * Note that this quotes it for one level of bash, if you are passing it
+   * into a badly written shell script, you need to fix your shell script.
+   * @param arg the argument to quote
+   * @return the quoted string
+   */
+  static String bashQuote(String arg) {
+    StringBuilder buffer = new StringBuilder(arg.length() + 2);
+    buffer.append('\'');
+    buffer.append(arg.replace("'", "'\\''"));
+    buffer.append('\'');
+    return buffer.toString();
+  }
+
-                    : new String[]{"bash", "-c", "groups"};
+                    : new String[]{"groups"};
-    return WINDOWS ?
-      new String[]
-          {getWinUtilsPath(), "groups", "-F", "\"" + user + "\""}
-      : new String[] {"bash", "-c", "id -gn " + user + "; id -Gn " + user};
+    if (WINDOWS) {
+      return new String[]
+          {getWinUtilsPath(), "groups", "-F", "\"" + user + "\""};
+    } else {
+      String quotedUser = bashQuote(user);
+      return new String[] {"bash", "-c", "id -gn " + quotedUser +
+                            "; id -Gn " + quotedUser};
+    }
-    return WINDOWS ?
-        new String[]
-            {getWinUtilsPath(), "groups", "-F", "\"" + user + "\""}
-        : new String[] {"bash", "-c", "id -g " + user + "; id -G " + user};
+    if (WINDOWS) {
+      return new String[]{getWinUtilsPath(), "groups", "-F", "\"" + user +
+                           "\""};
+    } else {
+      String quotedUser = bashQuote(user);
+      return new String[] {"bash", "-c", "id -g " + quotedUser + "; id -G " +
+                            quotedUser};
+    }
-    return WINDOWS ? new String [] {"cmd", "/c", "getent netgroup " + netgroup}
-                    : new String [] {"bash", "-c", "getent netgroup " + netgroup};
+    return new String[] {"getent", "netgroup", netgroup};
-   * 
+   *
-      boolean recursive, String file) {
+                                                 boolean recursive,
+                                                 String file) {
-      return new String[] { "bash", "-c", "kill -" + code + " -- -" + pid };
+      return new String[] {"kill", "-" + code, "--", "-" + pid};
-      return new String[] { "bash", "-c", "kill -" + code + " " + pid };
+      return new String[] {"kill", "-" + code, pid };
-   * 
+   *
-      new String[] { "cmd", "/c", absolutePath }
-      : new String[] { "/bin/bash", absolutePath };
+      new String[] {"cmd", "/c", absolutePath }
+      : new String[] {"/bin/bash", bashQuote(absolutePath) };
-   *  bin location. This is primarily useful for disambiguating call-outs 
-   *  to executable sub-components of Hadoop to avoid clashes with other 
-   *  executables that may be in the path.  Caveat:  this call doesn't 
-   *  just format the path to the bin directory.  It also checks for file 
-   *  existence of the composed path. The output of this call should be 
+   *  bin location. This is primarily useful for disambiguating call-outs
+   *  to executable sub-components of Hadoop to avoid clashes with other
+   *  executables that may be in the path.  Caveat:  this call doesn't
+   *  just format the path to the bin directory.  It also checks for file
+   *  existence of the composed path. The output of this call should be
-  private void runCommand() throws IOException { 
+  private void runCommand() throws IOException {
-    
+
-    final BufferedReader errReader = 
+    final BufferedReader errReader =
-      while(line != null) { 
+      while(line != null) {
-   * 
+   *
-  public static class ShellCommandExecutor extends Shell 
+  public static class ShellCommandExecutor extends Shell
-     * 
+     *
-    public ShellCommandExecutor(String[] execString, File dir, 
+    public ShellCommandExecutor(String[] execString, File dir,
-      this.run();    
+      this.run();
-   * 
+   *
-   * 
+   *
-  /** 
-   * Static method to execute a shell command. 
-   * Covers most of the simple cases without requiring the user to implement  
+  /**
+   * Static method to execute a shell command.
+   * Covers most of the simple cases without requiring the user to implement
-    ShellCommandExecutor exec = new ShellCommandExecutor(cmd, null, env, 
+    ShellCommandExecutor exec = new ShellCommandExecutor(cmd, null, env,
-        //So check if it has completed 
+        //So check if it has completed

INS31 INS29 INS83 INS43 INS42 INS44 INS8 INS8 INS8 UPD66 INS65 INS65 INS65 INS42 INS43 INS42 INS60 INS21 INS21 INS21 INS41 INS25 INS25 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS43 INS59 INS32 INS32 INS32 INS32 INS42 MOV8 INS8 INS42 MOV8 INS8 INS3 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS42 INS42 INS14 INS42 INS42 INS13 INS42 INS42 INS32 INS42 INS42 INS13 INS42 INS42 INS60 INS41 INS60 INS41 MOV5 MOV4 INS43 INS27 INS42 INS42 INS45 INS45 MOV5 MOV3 INS43 INS59 INS3 MOV3 INS43 INS59 INS3 UPD45 INS45 INS42 INS42 INS32 INS34 MOV85 INS42 INS42 INS32 MOV5 INS4 INS42 INS42 INS32 MOV5 INS4 MOV5 MOV5 INS32 INS42 INS42 MOV42 INS42 INS42 INS45 INS45 INS27 INS42 INS42 INS45 INS45 INS27 INS45 INS27 UPD45 UPD45 INS27 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 UPD45 INS45 MOV42 DEL45 DEL45 DEL42 DEL45 DEL45 DEL45 DEL42 DEL45 DEL42 DEL27 DEL4 DEL3 DEL16 DEL42 DEL45 DEL45 DEL45 DEL42 DEL45 DEL42 DEL27 DEL4 DEL3 DEL16 DEL45 DEL45 DEL42 DEL27 DEL42 DEL3 DEL45 DEL45 DEL45 DEL42 DEL27 DEL4 DEL3 DEL16 DEL45 DEL45 DEL42 DEL45 DEL45 DEL45 DEL42 DEL27 DEL42