HADOOP-8184.  ProtoBuf RPC engine uses the IPC layer reply packet.  Contributed by Sanjay Radia


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304542 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.ipc.protobuf.HadoopRpcProtos.HadoopRpcExceptionProto;
+
-import org.apache.hadoop.ipc.protobuf.HadoopRpcProtos.HadoopRpcResponseProto;
-import org.apache.hadoop.ipc.protobuf.HadoopRpcProtos.HadoopRpcResponseProto.ResponseStatus;
-import org.apache.hadoop.util.StringUtils;
-      HadoopRpcResponseProto response = val.message;
-
-      // Wrap the received message
-      ResponseStatus status = response.getStatus();
-      if (status != ResponseStatus.SUCCESS) {
-        RemoteException re =  new RemoteException(response.getException()
-            .getExceptionName(), response.getException().getStackTrace());
-        re.fillInStackTrace();
-        throw new ServiceException(re);
-      }
-
+      
-            .mergeFrom(response.getResponse()).build();
+            .mergeFrom(val.responseMessage).build();
-    HadoopRpcResponseProto message;
+    byte[] responseMessage;
-    public RpcResponseWritable(HadoopRpcResponseProto message) {
-      this.message = message;
+    public RpcResponseWritable(Message message) {
+      this.responseMessage = message.toByteArray();
-      ((Message)message).writeDelimitedTo(
-          DataOutputOutputStream.constructOutputStream(out));      
+      out.writeInt(responseMessage.length);
+      out.write(responseMessage);     
-      int length = ProtoUtil.readRawVarint32(in);
+      int length = in.readInt();
-      message = HadoopRpcResponseProto.parseFrom(bytes);
+      responseMessage = bytes;
-
-    private static RpcResponseWritable handleException(Throwable e) {
-      HadoopRpcExceptionProto exception = HadoopRpcExceptionProto.newBuilder()
-          .setExceptionName(e.getClass().getName())
-          .setStackTrace(StringUtils.stringifyException(e)).build();
-      HadoopRpcResponseProto response = HadoopRpcResponseProto.newBuilder()
-          .setStatus(ResponseStatus.ERRROR).setException(exception).build();
-      return new RpcResponseWritable(response);
-    }
-
-    private static HadoopRpcResponseProto constructProtoSpecificRpcSuccessResponse(
-        Message message) {
-      HadoopRpcResponseProto res = HadoopRpcResponseProto.newBuilder()
-          .setResponse(message.toByteString())
-          .setStatus(ResponseStatus.SUCCESS)
-          .build();
-      return res;
-    }
-          Writable writableRequest, long receiveTime) throws IOException {
+          Writable writableRequest, long receiveTime) throws Exception {
-          return handleException(new RpcServerException(msg));
+          throw new RpcServerException(msg);
-          Throwable cause = e.getCause();
-          return handleException(cause != null ? cause : e);
+          throw (Exception) e.getCause();
-          return handleException(e);
+          throw e;
-  
-        HadoopRpcResponseProto response = constructProtoSpecificRpcSuccessResponse(result);
-        return new RpcResponseWritable(response);
+        return new RpcResponseWritable(result);

INS5 INS39 INS85 UPD42 MOV43 INS21 INS21 UPD43 INS32 INS32 UPD42 INS32 INS42 UPD42 MOV42 INS40 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 INS42 UPD42 INS42 INS42 UPD42 UPD42 INS53 UPD42 MOV14 INS53 INS53 INS11 INS42 INS40 INS43 MOV32 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL40 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL40 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL14 DEL41 DEL8 DEL31 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL40 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL41 DEL8 DEL31 DEL42 DEL32 DEL41 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL33 DEL27 DEL42 DEL42 DEL16 DEL32 DEL41 DEL42 DEL42 DEL32 DEL41 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60