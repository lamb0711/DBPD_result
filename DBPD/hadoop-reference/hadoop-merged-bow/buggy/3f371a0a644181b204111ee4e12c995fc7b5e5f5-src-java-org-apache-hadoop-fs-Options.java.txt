Hadoop-6223. Add new file system interface AbstractFileSystem with implementation of some file systems that delegate to old FileSystem. Contributed by Sanjay Radia.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@831475 13f79535-47bb-0310-9956-ffa450edef68

-    public static BufferSize bufferSize(short bs) { 
+    public static BufferSize bufferSize(int bs) { 
-    static class BlockSize extends CreateOpts {
+    public static class BlockSize extends CreateOpts {
-      long getValue() { return blockSize; }
+      public long getValue() { return blockSize; }
-    static class ReplicationFactor extends CreateOpts {
+    public static class ReplicationFactor extends CreateOpts {
-      short getValue() { return replication; }
+      public short getValue() { return replication; }
-    static class BufferSize extends CreateOpts {
+    public static class BufferSize extends CreateOpts {
-      protected BufferSize(short bs) {
+      protected BufferSize(int bs) {
-      int getValue() { return bufferSize; }
+      public int getValue() { return bufferSize; }
-    static class BytesPerChecksum extends CreateOpts {
+    public static class BytesPerChecksum extends CreateOpts {
-      int getValue() { return bytesPerChecksum; }
+      public int getValue() { return bytesPerChecksum; }
-    static class Perms extends CreateOpts {
+    public static class Perms extends CreateOpts {
-      FsPermission getValue() { return permissions; }
+      public FsPermission getValue() { return permissions; }
-    static class Progress extends CreateOpts {
+    public static class Progress extends CreateOpts {
-      Progressable getValue() { return progress; }
+      public Progressable getValue() { return progress; }
-    static class CreateParent extends CreateOpts {
-      private final Boolean createParent;
+    public static class CreateParent extends CreateOpts {
+      private final boolean createParent;
-      Boolean getValue() { return createParent; }
+      public boolean getValue() { return createParent; }
+    }
+
+    
+    /**
+     * Get an option of desired type
+     * @param theClass is the desired class of the opt
+     * @param opts - not null - at least one opt must be passed
+     * @return an opt from one of the opts of type theClass.
+     *   returns null if there isn't any
+     */
+    protected static CreateOpts getOpt(Class<? extends CreateOpts> theClass,  CreateOpts ...opts) {
+      if (opts == null) {
+        throw new IllegalArgumentException("Null opt");
+      }
+      CreateOpts result = null;
+      for (int i = 0; i < opts.length; ++i) {
+        if (opts[i].getClass() == theClass) {
+          if (result != null) 
+            throw new IllegalArgumentException("multiple blocksize varargs");
+          result = opts[i];
+        }
+      }
+      return result;
+    }
+    /**
+     * set an option
+     * @param newValue  the option to be set
+     * @param opts  - the option is set into this array of opts
+     * @return updated CreateOpts[] == opts + newValue
+     */
+    protected static <T extends CreateOpts> CreateOpts[] setOpt(T newValue,
+        CreateOpts ...opts) {
+      boolean alreadyInOpts = false;
+      if (opts != null) {
+        for (int i = 0; i < opts.length; ++i) {
+          if (opts[i].getClass() == newValue.getClass()) {
+            if (alreadyInOpts) 
+              throw new IllegalArgumentException("multiple opts varargs");
+            alreadyInOpts = true;
+            opts[i] = newValue;
+          }
+        }
+      }
+      CreateOpts[] resultOpt = opts;
+      if (!alreadyInOpts) { // no newValue in opt
+        CreateOpts[] newOpts = new CreateOpts[opts.length + 1];
+        System.arraycopy(opts, 0, newOpts, 0, opts.length);
+        newOpts[opts.length] = newValue;
+        resultOpt = newOpts;
+      }
+      return resultOpt;

INS31 INS31 INS83 INS83 INS83 INS83 INS83 INS83 INS83 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS29 INS83 INS83 INS73 INS5 INS42 INS44 INS44 INS8 UPD39 INS83 INS83 INS83 INS83 INS83 INS83 INS39 INS83 INS39 INS65 INS65 INS65 INS65 INS42 INS74 INS42 INS43 INS42 INS25 INS60 INS24 INS41 INS65 INS65 INS65 INS65 INS42 INS43 INS43 INS85 INS43 INS42 INS43 INS42 INS60 INS25 INS60 INS25 INS41 UPD39 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS43 INS76 INS42 INS27 INS8 INS43 INS59 INS58 INS27 INS38 INS8 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS42 INS39 INS59 INS27 INS8 INS5 INS59 INS38 INS8 INS42 INS42 INS43 INS42 INS33 INS53 INS42 INS42 INS33 INS39 INS59 INS42 INS40 INS42 INS25 INS42 INS9 INS42 INS33 INS24 INS43 INS85 INS42 INS42 INS42 INS60 INS21 INS21 INS21 INS42 INS14 INS42 INS34 INS27 INS8 INS58 INS27 INS38 INS8 INS42 INS5 INS59 INS32 INS7 INS7 INS43 INS45 INS32 INS42 INS25 INS21 INS39 INS59 INS42 INS40 INS42 INS25 INS43 INS85 INS42 INS3 INS42 INS42 INS42 INS34 INS42 INS34 INS40 INS2 INS42 INS42 INS42 INS42 INS2 INS42 INS27 INS53 INS7 INS42 INS34 INS27 INS8 INS42 INS5 INS27 INS42 INS40 INS42 INS42 INS42 INS33 INS14 INS42 INS2 INS32 INS32 INS25 INS21 INS21 INS43 INS85 INS40 INS34 INS43 INS45 INS42 INS42 INS2 INS42 INS42 INS42 INS42 INS53 INS7 INS7 INS42 INS42 INS42 INS42 INS14 INS42 INS9 INS2 INS42 INS43 INS45 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL43