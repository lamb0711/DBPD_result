HADOOP-11151. Automatically refresh auth token and retry on auth failure. Contributed by Arun Suresh.

+import org.apache.hadoop.security.authentication.client.AuthenticatedURL;
+  private static final String ANONYMOUS_REQUESTS_DISALLOWED = "Anonymous requests are disallowed";
+
+  /* Number of times to retry authentication in the event of auth failure
+   * (normally happens due to stale authToken) 
+   */
+  public static final String AUTH_RETRY = CONFIG_PREFIX
+      + "authentication.retry-count";
+  public static final int DEFAULT_AUTH_RETRY = 1;
+
+  private final int authRetry;
+    authRetry = conf.getInt(AUTH_RETRY, DEFAULT_AUTH_RETRY);
-      int expectedResponse, Class<T> klass)
+      int expectedResponse, Class<T> klass) throws IOException {
+    return call(conn, jsonOutput, expectedResponse, klass, authRetry);
+  }
+
+  private <T> T call(HttpURLConnection conn, Map jsonOutput,
+      int expectedResponse, Class<T> klass, int authRetryCount)
-    if (conn.getResponseCode() == HttpURLConnection.HTTP_FORBIDDEN) {
+    if ((conn.getResponseCode() == HttpURLConnection.HTTP_FORBIDDEN
+        && conn.getResponseMessage().equals(ANONYMOUS_REQUESTS_DISALLOWED))
+        || conn.getResponseCode() == HttpURLConnection.HTTP_UNAUTHORIZED) {
+      KMSClientProvider.this.loginUgi =
+          UserGroupInformation.getCurrentUser();
+      if (authRetryCount > 0) {
+        String contentType = conn.getRequestProperty(CONTENT_TYPE);
+        String requestMethod = conn.getRequestMethod();
+        URL url = conn.getURL();
+        conn = createConnection(url, requestMethod);
+        conn.setRequestProperty(CONTENT_TYPE, contentType);
+        return call(conn, jsonOutput, expectedResponse, klass,
+            authRetryCount - 1);
+      }
+    }
+    try {
+      AuthenticatedURL.extractToken(conn, authToken);
+    } catch (AuthenticationException e) {
+      // Ignore the AuthExceptions.. since we are just using the method to
+      // extract and set the authToken.. (Workaround till we actually fix
+      // AuthenticatedURL properly to set authToken post initialization)
+    } finally {
+      KMSClientProvider.this.loginUgi =
+          UserGroupInformation.getCurrentUser();

INS26 INS40 INS23 INS23 INS23 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 INS83 INS73 INS43 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS44 INS42 INS42 INS45 INS42 INS42 INS27 INS42 INS34 INS42 INS21 INS42 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS74 INS42 INS42 INS41 INS39 INS42 INS25 INS54 INS42 INS45 INS7 INS42 INS42 INS43 INS43 INS32 INS27 INS8 INS8 INS12 INS8 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS36 INS27 MOV21 INS21 MOV25 INS21 INS44 INS8 INS21 INS42 INS42 INS42 INS42 INS27 INS32 INS40 INS7 INS27 INS32 INS43 INS42 INS7 MOV27 INS32 INS42 INS42 INS22 INS32 INS42 INS34 INS60 INS60 INS60 INS21 INS21 INS41 INS42 INS42 INS42 INS42 INS42 INS22 INS32 INS32 INS42 INS42 INS52 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS7 INS32 INS32 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34