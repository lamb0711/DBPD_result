HDFS-10630. Federation State Store FS Implementation. Contributed by Jason Kace and Inigo Goiri.

(cherry picked from commit c6e0bd640cdaf83a660fa050809cad6f1d4c6f4d)

-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import java.util.ArrayList;
+import java.util.List;
+
+import org.apache.hadoop.hdfs.server.federation.store.records.Query;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
- * Set of utility functions used to query, create, update and delete data
- * records in the state store.
+ * Set of utility functions used to work with the State Store.
-  private static final Log LOG = LogFactory.getLog(StateStoreUtils.class);
+  private static final Logger LOG =
+      LoggerFactory.getLogger(StateStoreUtils.class);
+
-      LOG.error("We went too far (" + actualClazz + ") with " + clazz);
+      LOG.error("We went too far ({}) with {}", actualClazz, clazz);
-}
+
+  /**
+   * Get the base class name for a record. If we get an implementation of a
+   * record we will return the real parent record class.
+   *
+   * @param clazz Class of the data record to check.
+   * @return Name of the base class for the record.
+   */
+  public static <T extends BaseRecord> String getRecordName(
+      final Class<T> clazz) {
+    return getRecordClass(clazz).getSimpleName();
+  }
+
+  /**
+   * Filters a list of records to find all records matching the query.
+   *
+   * @param query Map of field names and objects to use to filter results.
+   * @param records List of data records to filter.
+   * @return List of all records matching the query (or empty list if none
+   *         match), null if the data set could not be filtered.
+   */
+  public static <T extends BaseRecord> List<T> filterMultiple(
+      final Query<T> query, final Iterable<T> records) {
+
+    List<T> matchingList = new ArrayList<>();
+    for (T record : records) {
+      if (query.matches(record)) {
+        matchingList.add(record);
+      }
+    }
+    return matchingList;
+  }
+}

MOV26 INS26 INS26 INS26 INS40 INS40 INS40 UPD40 UPD40 INS31 INS31 UPD43 INS29 INS83 INS83 INS73 INS43 INS42 INS44 INS8 INS29 INS83 INS83 INS73 INS74 INS42 INS44 INS44 INS8 UPD66 UPD42 INS65 INS65 INS65 INS42 INS43 INS42 INS83 INS74 INS42 INS41 INS65 INS65 INS65 INS65 INS42 INS43 INS43 INS43 INS83 INS74 INS42 INS83 INS74 INS42 INS60 INS70 INS41 UPD42 UPD42 INS66 INS66 INS42 INS66 INS66 INS42 INS43 INS43 INS32 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS42 INS42 INS43 INS43 INS43 INS43 INS74 INS59 INS44 INS42 INS8 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS14 INS43 INS42 INS25 INS42 INS42 INS42 INS42 INS74 INS42 INS32 INS8 INS45 INS42 INS42 INS43 INS42 INS42 INS42 INS21 INS42 INS32 INS42 INS42 INS42 DEL66 DEL45 DEL42 DEL45 DEL42 DEL27