YARN-1203. Changed YARN web-app proxy to handle http and https URLs from AM registration and finish correctly. Contributed by Omkar Vinit Joshi.
MAPREDUCE-5515. Fixed MR AM's webapp to depend on a new config mapreduce.ssl.enabled to enable https and disabling it by default as MR AM needs
to set up its own certificates etc and not depend on clusters'. Contributed by Omkar Vinit Joshi.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1524864 13f79535-47bb-0310-9956-ffa450edef68

+   * @param url the URL format returned by an AM. This may or may not contain
+   * scheme.
+   * @return a URI with an http scheme
+   * @throws URISyntaxException if the url is not formatted correctly.
+   */
+  public static URI getUriFromAMUrl(String url)
+    throws URISyntaxException {
+    if (getSchemeFromUrl(url).isEmpty()) {
+      /*
+       * check is made to make sure if AM reports with scheme then it will be
+       * used by default otherwise it will default to the one configured using
+       * "hadoop.ssl.enabled".
+       */
+      return new URI(HttpConfig.getSchemePrefix() + url);      
+    } else {
+      return new URI(url);
+    }
+  }
+  
+  /**
+   * Create a URI form a no scheme Url, such as is returned by the AM.
-  public static URI getUriFromAMUrl(String noSchemeUrl)
-    throws URISyntaxException {
-      return new URI(HttpConfig.getSchemePrefix() + noSchemeUrl);
-  }
+  public static URI getUriFromAMUrl(String scheme, String noSchemeUrl)
+      throws URISyntaxException {
+      if (getSchemeFromUrl(noSchemeUrl).isEmpty()) {
+        /*
+         * check is made to make sure if AM reports with scheme then it will be
+         * used by default otherwise it will default to the one configured using
+         * "hadoop.ssl.enabled".
+         */
+        return new URI(scheme + "://" + noSchemeUrl);      
+      } else {
+        return new URI(noSchemeUrl);
+      }
+    }
+  
+  /**
+   * Returns the scheme if present in the url
+   * eg. "https://issues.apache.org/jira/browse/YARN" > "https"
+   */
+  public static String getSchemeFromUrl(String url) {
+    int index = 0;
+    if (url != null) {
+      index = url.indexOf("://");
+    }
+    if (index > 0) {
+      return url.substring(0, index);
+    } else {
+      return "";
+    }
+  }

INS31 INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS43 INS8 INS44 INS8 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS42 INS25 INS43 INS42 INS25 INS65 INS42 INS43 INS42 INS60 INS25 INS25 INS66 INS42 INS66 INS66 INS66 INS42 INS66 INS42 INS32 MOV8 INS8 INS42 INS32 INS8 INS8 INS66 INS66 INS42 INS39 INS59 INS27 INS8 INS27 INS8 INS8 INS32 INS42 INS41 INS32 INS42 INS41 INS41 INS42 INS34 INS42 INS33 INS21 INS42 INS34 INS41 INS41 INS42 INS42 INS14 INS42 INS42 INS14 INS14 INS7 INS32 INS45 INS43 INS42 INS43 INS27 INS43 INS42 INS42 INS32 INS42 INS42 INS34 INS42 UPD42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS45