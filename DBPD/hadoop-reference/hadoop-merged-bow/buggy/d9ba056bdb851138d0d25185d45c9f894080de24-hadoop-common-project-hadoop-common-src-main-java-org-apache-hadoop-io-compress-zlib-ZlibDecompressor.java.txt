HADOOP-10047. Add a direct-buffer based apis for compression. Contributed by Gopal V.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543542 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.io.compress.DirectDecompressor;
-    this.directBufferSize = directBufferSize;
+    this.directBufferSize = directBufferSize;    
+    
+  int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException {
+    assert (this instanceof ZlibDirectDecompressor);
+    
+    ByteBuffer presliced = dst;
+    if (dst.position() > 0) {
+      presliced = dst;
+      dst = dst.slice();
+    }
+
+    Buffer originalCompressed = compressedDirectBuf;
+    Buffer originalUncompressed = uncompressedDirectBuf;
+    int originalBufferSize = directBufferSize;
+    compressedDirectBuf = src;
+    compressedDirectBufOff = src.position();
+    compressedDirectBufLen = src.remaining();
+    uncompressedDirectBuf = dst;
+    directBufferSize = dst.remaining();
+    int n = 0;
+    try {
+      n = inflateBytesDirect();
+      presliced.position(presliced.position() + n);
+      if (compressedDirectBufLen > 0) {
+        src.position(compressedDirectBufOff);
+      } else {
+        src.position(src.limit());
+      }
+    } finally {
+      compressedDirectBuf = originalCompressed;
+      uncompressedDirectBuf = originalUncompressed;
+      compressedDirectBufOff = 0;
+      compressedDirectBufLen = 0;
+      directBufferSize = originalBufferSize;
+    }
+    return n;
+  }
+  
+  public static class ZlibDirectDecompressor 
+      extends ZlibDecompressor implements DirectDecompressor {
+    public ZlibDirectDecompressor() {
+      super(CompressionHeader.DEFAULT_HEADER, 0);
+    }
+
+    public ZlibDirectDecompressor(CompressionHeader header, int directBufferSize) {
+      super(header, directBufferSize);
+    }
+    
+    @Override
+    public boolean finished() {
+      return (endOfInput && super.finished());
+    }
+    
+    @Override
+    public void reset() {
+      super.reset();
+      endOfInput = true;
+    }
+    
+    private boolean endOfInput;
+
+    @Override
+    public synchronized void decompress(ByteBuffer src, ByteBuffer dst)
+        throws IOException {
+      assert dst.isDirect() : "dst.isDirect()";
+      assert src.isDirect() : "src.isDirect()";
+      assert dst.remaining() > 0 : "dst.remaining() > 0";      
+      this.inflateDirect(src, dst);
+      endOfInput = !src.hasRemaining();
+    }
+
+    @Override
+    public synchronized void setDictionary(byte[] b, int off, int len) {
+      throw new UnsupportedOperationException(
+          "byte[] arrays are not supported for DirectDecompressor");
+    }
+
+    @Override
+    public synchronized int decompress(byte[] b, int off, int len) {
+      throw new UnsupportedOperationException(
+          "byte[] arrays are not supported for DirectDecompressor");
+    }
+  }

INS26 INS40 INS83 INS42 INS31 INS55 INS39 INS42 INS44 INS44 INS43 INS8 MOV83 INS83 INS42 INS43 INS43 INS31 INS31 INS31 INS31 INS23 INS31 INS31 INS31 INS43 INS42 INS43 INS42 INS42 INS6 INS60 INS25 INS60 INS60 INS60 INS21 INS21 INS21 INS21 INS21 INS60 INS54 INS41 INS42 INS42 INS83 INS42 INS8 INS83 INS42 INS44 INS44 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS83 INS39 INS59 INS78 INS83 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS78 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS42 INS42 INS36 INS43 INS59 INS27 INS8 INS43 INS59 INS43 INS59 INS39 INS59 INS7 INS7 INS7 INS7 INS7 INS39 INS59 INS8 INS8 INS42 INS46 INS43 INS42 INS39 INS42 INS46 INS42 INS41 INS42 INS21 INS21 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS6 INS6 INS6 INS21 INS21 INS42 INS5 INS42 INS39 INS42 INS39 INS42 INS53 INS42 INS5 INS42 INS39 INS42 INS39 INS42 INS53 INS62 INS42 INS42 INS42 INS32 INS34 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS34 INS21 INS21 INS25 INS21 INS21 INS21 INS21 INS21 INS40 INS34 INS42 INS42 INS42 INS36 INS48 INS7 INS42 INS42 INS32 INS45 INS32 INS45 INS27 INS45 INS32 INS7 INS39 INS85 INS14 INS39 INS85 INS14 INS52 INS43 INS42 INS42 INS7 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS32 INS27 INS8 INS8 INS7 INS7 INS7 INS7 INS7 INS27 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS32 INS34 INS52 INS42 INS42 INS42 INS42 INS38 INS43 INS45 INS43 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS27 INS42 INS34 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS34 INS42 INS42 INS42 INS48 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 DEL42