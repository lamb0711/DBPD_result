HDFS-3474. Cleanup Exception handling in BookKeeper journal manager. Contributed by Ivan Kelly.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1344386 13f79535-47bb-0310-9956-ffa450edef68

-    } catch (Exception e) {
+    } catch (KeeperException e) {
+    } catch (InterruptedException ie) {
+      throw new IOException("Interrupted while initializing bk journal manager",
+                            ie);
+
+    } catch (BKException bke) {
+      throw new IOException("Error creating ledger", bke);
+    } catch (KeeperException ke) {
+      throw new IOException("Error in zookeeper while creating ledger", ke);
+    } catch (InterruptedException ie) {
+      throw new IOException("Interrupted creating ledger", ie);
+    }
+
+    try {
-    } catch (Exception e) {
-      if (currentLedger != null) {
-        try {
-          long id = currentLedger.getId();
-          currentLedger.close();
-          bkc.deleteLedger(id);
-        } catch (Exception e2) {
-          //log & ignore, an IOException will be thrown soon
-          LOG.error("Error closing ledger", e2);
-        }
-      }
-      throw new IOException("Error creating ledger", e);
+    } catch (KeeperException ke) {
+      cleanupLedger(currentLedger);
+      throw new IOException("Error storing ledger metadata", ke);
+  private void cleanupLedger(LedgerHandle lh) {
+    try {
+      long id = currentLedger.getId();
+      currentLedger.close();
+      bkc.deleteLedger(id);
+    } catch (BKException bke) {
+      //log & ignore, an IOException will be thrown soon
+      LOG.error("Error closing ledger", bke);
+    } catch (InterruptedException ie) {
+      LOG.warn("Interrupted while closing ledger", ie);
+    }
+  }
+
+
+
-        } catch (Exception e) {
+        } catch (BKException e) {
+        } catch (InterruptedException ie) {
+          throw new IOException("Interrupted opening ledger for "
+                                         + fromTxId, ie);
-    } catch (Exception e) {
-      throw new IOException("Couldn't close zookeeper client", e);
+    } catch (BKException bke) {
+      throw new IOException("Couldn't close bookkeeper client", bke);
+    } catch (InterruptedException ie) {
+      throw new IOException("Interrupted while closing journal manager", ie);
-    } catch (Exception e) {
+    } catch (BKException e) {
+    } catch (InterruptedException ie) {
+      throw new IOException("Interrupted while retreiving last tx id "
+                            + "for ledger " + l, ie);
-    } catch (Exception e) {
+    } catch (KeeperException e) {
+    } catch (InterruptedException ie) {
+      throw new IOException("Interrupted getting list of ledgers from zk", ie);

INS31 MOV8 INS83 INS39 INS42 INS44 MOV8 MOV25 INS54 INS54 INS43 INS42 INS12 INS8 INS12 INS12 INS12 INS8 INS12 INS42 INS12 INS12 INS12 INS12 INS44 INS8 MOV60 MOV25 MOV25 MOV21 INS44 INS8 INS44 INS8 INS44 INS8 MOV60 MOV60 MOV21 MOV21 MOV21 MOV41 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 UPD43 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS42 INS21 INS53 UPD43 UPD42 INS43 INS42 INS21 UPD43 UPD42 INS43 INS42 INS53 UPD43 INS43 INS42 INS53 UPD43 INS43 INS42 INS53 UPD42 INS42 INS14 INS42 INS14 INS42 INS14 INS42 INS14 INS42 INS32 INS14 UPD42 INS42 INS32 UPD42 INS42 INS14 UPD42 INS42 INS14 UPD42 INS42 INS14 INS43 INS45 INS42 INS43 INS45 INS42 INS43 INS45 INS42 INS43 INS45 INS42 INS42 INS42 MOV43 INS45 INS42 UPD42 INS42 INS42 INS45 INS42 INS12 UPD45 UPD42 INS43 INS45 INS42 INS43 INS27 INS42 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS44 INS8 INS42 INS42 INS45 INS45 INS42 INS42 UPD43 INS43 INS42 INS53 UPD42 INS42 INS14 INS43 INS27 INS42 INS42 INS45 INS42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL25 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8