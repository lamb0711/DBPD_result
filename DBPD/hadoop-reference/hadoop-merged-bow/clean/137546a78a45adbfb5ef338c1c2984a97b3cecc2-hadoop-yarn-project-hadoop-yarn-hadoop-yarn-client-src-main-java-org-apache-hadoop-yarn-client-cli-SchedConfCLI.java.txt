YARN-9864. Format CS Configuration present in Configuration Store. Contributeed by Prabhu Joseph

+import com.sun.jersey.api.client.WebResource;
+import org.apache.hadoop.security.UserGroupInformation;
+  private static final String FORMAT_CONF = "formatConfig";
+    opts.addOption("format", FORMAT_CONF, false,
+        "Format Scheduler Configuration and reload from" +
+        " capacity-scheduler.xml");
+    boolean format = false;
+      if (parsedCli.hasOption((FORMAT_CONF))) {
+        hasOption = true;
+        format = true;
+      }
+
-    return WebAppUtils.execOnActiveRM(conf,
-        this::updateSchedulerConfOnRMNode, updateInfo);
+    if (format) {
+      return WebAppUtils.execOnActiveRM(conf, this::formatSchedulerConf, null);
+    } else {
+      return WebAppUtils.execOnActiveRM(conf,
+          this::updateSchedulerConfOnRMNode, updateInfo);
+    }
-  private int updateSchedulerConfOnRMNode(String webAppAddress,
+  @VisibleForTesting
+  int formatSchedulerConf(String webAppAddress, WebResource resource)
+      throws Exception {
+    Client webServiceClient = Client.create();
+    ClientResponse response = null;
+    resource = (resource != null) ? resource :
+        webServiceClient.resource(webAppAddress);
+
+    try {
+      Builder builder = null;
+      if (UserGroupInformation.isSecurityEnabled()) {
+        builder = resource
+            .path("ws").path("v1").path("cluster")
+            .path("/scheduler-conf/format")
+            .accept(MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON);
+      } else {
+        builder = resource
+            .path("ws").path("v1").path("cluster")
+            .path("/scheduler-conf/format").queryParam("user.name",
+            UserGroupInformation.getCurrentUser().getShortUserName())
+            .accept(MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON);
+      }
+
+      response = builder.get(ClientResponse.class);
+      if (response != null) {
+        if (response.getStatus() == Status.OK.getStatusCode()) {
+          System.out.println(response.getEntity(String.class));
+          return 0;
+        } else {
+          System.err.println("Failed to format scheduler configuration: " +
+              response.getEntity(String.class));
+        }
+      } else {
+        System.err.println("Failed to format scheduler configuration: " +
+            "null response");
+      }
+      return -1;
+    } finally {
+      if (response != null) {
+        response.close();
+      }
+      webServiceClient.destroy();
+    }
+  }
+
+  @VisibleForTesting
+  int updateSchedulerConfOnRMNode(String webAppAddress,
+    WebResource resource = webServiceClient.resource(webAppAddress);
+
-      Builder builder = webServiceClient.resource(webAppAddress)
-          .path("ws").path("v1").path("cluster")
-          .path("scheduler-conf").accept(MediaType.APPLICATION_JSON);
+      Builder builder = null;
+      if (UserGroupInformation.isSecurityEnabled()) {
+        builder = resource.path("ws").path("v1").path("cluster")
+            .path("scheduler-conf").accept(MediaType.APPLICATION_JSON);
+      } else {
+        builder = resource.path("ws").path("v1").path("cluster")
+            .queryParam("user.name",
+            UserGroupInformation.getCurrentUser().getShortUserName())
+            .path("scheduler-conf").accept(MediaType.APPLICATION_JSON);
+      }
+
-        + "globalConfKey2=globalConfVal2]\n"
+        + "globalConfKey2=globalConfVal2] "
+        + "[-format]\n"
+        + "Example (format scheduler configuration): yarn schedulerconf "
+        + "-format\n"

INS26 INS26 INS40 INS40 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS78 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS42 INS42 INS45 INS21 INS60 INS25 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS60 INS21 INS54 INS42 INS60 INS32 INS39 INS59 INS42 INS8 INS8 INS42 INS42 INS43 INS59 INS43 INS59 INS7 INS8 INS8 INS43 INS59 INS42 INS42 INS45 INS42 INS9 INS27 INS42 INS9 INS25 INS41 MOV41 INS42 INS42 INS32 INS42 INS42 INS33 INS42 INS16 INS60 INS25 INS21 INS25 INS41 INS25 INS21 INS42 INS42 MOV32 INS60 INS25 INS45 INS45 INS32 INS8 INS32 INS42 INS42 INS36 INS42 INS32 MOV43 INS59 INS32 INS8 INS8 INS7 INS27 INS8 INS8 INS38 INS27 INS8 INS32 INS43 INS59 INS32 INS8 INS8 UPD45 INS45 INS45 INS45 INS42 INS42 INS36 INS21 INS21 INS42 INS42 INS42 INS90 INS33 INS27 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS21 INS21 INS42 INS32 INS42 INS33 INS25 INS21 INS34 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS21 INS21 INS42 INS7 INS7 INS52 INS42 INS42 INS33 INS7 INS7 INS42 INS42 INS57 INS27 INS8 INS8 INS32 INS32 INS7 INS7 INS42 INS9 INS42 INS9 INS42 INS32 INS42 INS32 INS43 INS32 INS32 INS21 INS41 INS21 INS40 INS42 INS27 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS40 INS40 INS32 INS42 INS40 INS40 INS42 INS42 INS42 INS40 INS42 INS32 INS34 INS32 INS45 INS45 MOV32 MOV42 MOV40 INS32 INS42 INS40 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS40 INS42 INS32 INS40 INS42 INS27 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS42 INS42 INS57 INS45 INS32 INS32 INS42 INS45 INS32 INS32 INS42 INS45 INS32 INS42 INS45 INS42 INS42 INS43 INS42 INS42 INS57 INS32 INS42 INS45 INS32 INS42 INS42 INS42 INS45 INS32 INS42 INS45 INS42 INS43 INS42 INS32 INS42 INS45 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 DEL83 DEL42 DEL32 DEL59 DEL60