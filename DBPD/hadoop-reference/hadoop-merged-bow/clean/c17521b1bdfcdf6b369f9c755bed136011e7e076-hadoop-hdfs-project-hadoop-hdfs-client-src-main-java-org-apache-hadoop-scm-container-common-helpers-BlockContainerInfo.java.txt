HDFS-12387. Ozone: Support Ratis as a first class replication mechanism. Contributed by Anu Engineer.

-/*
+  /*
+import org.apache.commons.lang3.builder.EqualsBuilder;
+import org.apache.commons.lang3.builder.HashCodeBuilder;
+import org.apache.hadoop.util.Time;
+
+import java.io.Serializable;
+import java.util.Comparator;
+
- * Class wraps container + allocated info for containers managed by block svc.
+ * Manages Block Information inside a container.
-public class BlockContainerInfo extends ContainerInfo{
+public class BlockContainerInfo extends ContainerInfo
+    implements Comparator<BlockContainerInfo>,
+    Comparable<BlockContainerInfo>, Serializable {
+  private long lastUsed; // last used time
+    this.lastUsed = Time.monotonicNow();
+
+  /**
+   * Gets the last used time from SCM's perspective.
+   * @return time in milliseconds.
+   */
+  public long getLastUsed() {
+    return lastUsed;
+  }
+
+  /**
+   * Sets the last used time from SCM's perspective.
+   * @param lastUsed time in milliseconds.
+   */
+  public void setLastUsed(long lastUsed) {
+    this.lastUsed = lastUsed;
+  }
+
+  /**
+   * Compares its two arguments for order.  Returns a negative integer, zero, or
+   * a positive integer as the first argument is less than, equal to, or greater
+   * than the second.<p>
+   *
+   * @param o1 the first object to be compared.
+   * @param o2 the second object to be compared.
+   * @return a negative integer, zero, or a positive integer as the first
+   * argument is less than, equal to, or greater than the second.
+   * @throws NullPointerException if an argument is null and this comparator
+   *                              does not permit null arguments
+   * @throws ClassCastException   if the arguments' types prevent them from
+   *                              being compared by this comparator.
+   */
+  @Override
+  public int compare(BlockContainerInfo o1, BlockContainerInfo o2) {
+    return Long.compare(o1.getLastUsed(), o2.getLastUsed());
+  }
+
+  @Override
+  public boolean equals(Object o) {
+    if (this == o) {
+      return true;
+    }
+
+    if (o == null || getClass() != o.getClass()) {
+      return false;
+    }
+
+    return new EqualsBuilder()
+        .appendSuper(super.equals(o))
+        .isEquals();
+  }
+
+  @Override
+  public int hashCode() {
+    return new HashCodeBuilder(17, 2017)
+        .appendSuper(super.hashCode())
+        .toHashCode();
+  }
+
+  @Override
+  public String toString() {
+
+    return "BlockContainerInfo{" +
+        "allocated=" + allocated +
+        ", lastUsed=" + lastUsed +
+        ", ContainerInfo=" + super.toString() + '}';
+  }
+
+  /**
+   * Compares this object with the specified object for order.  Returns a
+   * negative integer, zero, or a positive integer as this object is less than,
+   * equal to, or greater than the specified object.
+   *
+   * @param o the object to be compared.
+   * @return a negative integer, zero, or a positive integer as this object is
+   * less than, equal to, or greater than the specified object.
+   * @throws NullPointerException if the specified object is null
+   * @throws ClassCastException   if the specified object's type prevents it
+   *                              from being compared to this object.
+   */
+  @Override
+  public int compareTo(BlockContainerInfo o) {
+    return this.compare(this, o);
+  }

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS74 INS74 INS43 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS43 INS43 INS43 INS43 INS42 INS83 INS39 INS59 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS29 INS78 INS83 INS39 INS42 INS44 INS8 UPD66 INS42 INS42 INS42 INS42 INS42 INS21 INS65 INS65 INS41 INS65 INS65 INS39 INS42 INS21 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS25 INS25 INS41 INS42 INS41 INS42 INS42 INS41 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS41 INS7 INS66 INS66 INS42 INS66 INS42 INS66 INS7 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS42 INS32 INS42 INS27 INS8 INS27 INS8 INS32 INS32 INS27 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS32 INS22 INS32 INS22 INS42 INS42 INS42 INS32 INS32 INS52 INS42 INS41 INS27 INS27 INS41 INS32 INS42 INS32 INS42 INS27 INS42 INS45 INS42 INS45 INS48 INS13 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS33 INS32 INS32 INS9 INS14 INS42 INS48 INS14 INS42 INS48 INS45 INS45 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS43 INS34 INS34 INS42 INS42 INS42