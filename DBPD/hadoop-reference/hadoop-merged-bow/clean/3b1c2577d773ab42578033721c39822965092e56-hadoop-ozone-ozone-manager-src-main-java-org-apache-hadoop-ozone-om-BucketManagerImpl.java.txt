HDDS-1541. Implement addAcl,removeAcl,setAcl,getAcl for Key. Contributed by Ajay Kumat. (#885)



+import java.util.ArrayList;
+import java.util.BitSet;
+import static org.apache.hadoop.ozone.OzoneAcl.ZERO_BITSET;
-      List<OzoneAcl> list = bucketInfo.getAcls();
-      if(!validateAddAcl(acl, list)) {
-        // New acl can't be added as it is not consistent with existing ACLs.
-        LOG.info("New acl:{} can't be added as it is not consistent with " +
-            "existing ACLs:{}.", acl, StringUtils.join(",", list));
-        return false;
-      }
-      list.add(acl);
-      OmBucketInfo updatedBucket = OmBucketInfo.newBuilder()
-          .setVolumeName(bucketInfo.getVolumeName())
-          .setBucketName(bucketInfo.getBucketName())
-          .setStorageType(bucketInfo.getStorageType())
-          .setIsVersionEnabled(bucketInfo.getIsVersionEnabled())
-          .setCreationTime(bucketInfo.getCreationTime())
-          .setBucketEncryptionKey(bucketInfo.getEncryptionKeyInfo())
-          .addAllMetadata(bucketInfo.getMetadata())
-          .setAcls(list)
-          .build();
-      // TODO:HDDS-1619 OM HA changes required for all acl operations.
-      metadataManager.getBucketTable().put(dbBucketKey, updatedBucket);
+      // Case 1: When we are adding more rights to existing user/group.
+      boolean addToExistingAcl = false;
+      for(OzoneAcl a: bucketInfo.getAcls()) {
+        if(a.getName().equals(acl.getName()) &&
+            a.getType().equals(acl.getType())) {
+          BitSet bits = (BitSet) acl.getAclBitSet().clone();
+          bits.or(a.getAclBitSet());
+
+          if (bits.equals(a.getAclBitSet())) {
+            return false;
+          }
+          a.getAclBitSet().or(acl.getAclBitSet());
+          addToExistingAcl = true;
+          break;
+        }
+      }
+
+      // Case 2: When a completely new acl is added.
+      if(!addToExistingAcl) {
+        List<OzoneAcl> newAcls = bucketInfo.getAcls();
+        if(newAcls == null) {
+          newAcls = new ArrayList<>();
+        }
+        newAcls.add(acl);
+        bucketInfo = OmBucketInfo.newBuilder()
+            .setVolumeName(bucketInfo.getVolumeName())
+            .setBucketName(bucketInfo.getBucketName())
+            .setStorageType(bucketInfo.getStorageType())
+            .setIsVersionEnabled(bucketInfo.getIsVersionEnabled())
+            .setCreationTime(bucketInfo.getCreationTime())
+            .setBucketEncryptionKey(bucketInfo.getEncryptionKeyInfo())
+            .addAllMetadata(bucketInfo.getMetadata())
+            .setAcls(newAcls)
+            .build();
+      }
+
+      metadataManager.getBucketTable().put(dbBucketKey, bucketInfo);
-      List<OzoneAcl> list = bucketInfo.getAcls();
-      if (!list.contains(acl)) {
-        // Return false if acl doesn't exist in current ACLs.
-        LOG.info("Acl:{} not found in existing ACLs:{}.", acl,
-            StringUtils.join(",", list));
-        return false;
-      }
-      list.remove(acl);
-      OmBucketInfo updatedBucket = OmBucketInfo.newBuilder()
-          .setVolumeName(bucketInfo.getVolumeName())
-          .setBucketName(bucketInfo.getBucketName())
-          .setStorageType(bucketInfo.getStorageType())
-          .setIsVersionEnabled(bucketInfo.getIsVersionEnabled())
-          .setCreationTime(bucketInfo.getCreationTime())
-          .setBucketEncryptionKey(bucketInfo.getEncryptionKeyInfo())
-          .addAllMetadata(bucketInfo.getMetadata())
-          .setAcls(list)
-          .build();
-      metadataManager.getBucketTable().put(dbBucketKey, updatedBucket);
+      // When we are removing subset of rights from existing acl.
+      for(OzoneAcl a: bucketInfo.getAcls()) {
+        if(a.getName().equals(acl.getName()) &&
+            a.getType().equals(acl.getType())) {
+          BitSet bits = (BitSet) acl.getAclBitSet().clone();
+          bits.and(a.getAclBitSet());
+
+          if (bits.equals(ZERO_BITSET)) {
+            return false;
+          }
+          bits = (BitSet) acl.getAclBitSet().clone();
+          bits.and(a.getAclBitSet());
+          a.getAclBitSet().xor(bits);
+
+          if(a.getAclBitSet().equals(ZERO_BITSET)) {
+            bucketInfo.getAcls().remove(a);
+          }
+          break;
+        } else {
+          return false;
+        }
+      }
+
+      metadataManager.getBucketTable().put(dbBucketKey, bucketInfo);
-   * Validates if a new acl addition is consistent with current ACL list.
-   * @param newAcl new acl to be added.
-   * @param currentAcls list of acls.
-   *
-   * @return true if newAcl addition to existing acls is valid, else false.
-   * */
-  private boolean validateAddAcl(OzoneAcl newAcl, List<OzoneAcl> currentAcls) {
-
-    // Check 1: Check for duplicate.
-    if(currentAcls.contains(newAcl)) {
-      return false;
-    }
-
-    return true;
-  }
-
-  /**

INS26 INS26 INS26 INS40 INS40 INS40 INS60 INS70 INS25 INS70 INS39 INS59 INS44 MOV32 INS8 INS38 INS8 INS44 MOV32 INS8 INS42 INS9 INS43 INS42 MOV25 INS42 MOV60 INS25 MOV21 INS21 UPD42 MOV43 INS42 INS25 UPD42 INS42 INS27 INS27 INS8 INS7 INS27 INS8 INS8 INS32 INS32 INS60 INS21 INS25 INS21 INS21 INS10 UPD42 INS32 INS42 INS33 INS21 UPD42 INS42 MOV32 INS32 INS32 INS60 INS21 INS25 INS21 INS21 INS21 INS25 INS10 INS41 INS32 INS42 INS32 INS32 INS42 INS32 INS43 INS59 INS32 INS32 INS8 INS32 INS7 INS42 INS42 INS7 INS32 UPD42 MOV42 INS32 INS32 UPD42 MOV42 MOV32 INS43 INS59 INS32 INS32 MOV8 INS7 INS32 INS32 INS32 INS8 INS9 UPD42 MOV42 INS42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS42 UPD42 MOV42 INS32 MOV41 INS32 INS42 INS32 INS42 INS9 INS42 INS14 UPD42 UPD42 MOV42 INS42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 INS42 INS42 INS11 UPD42 MOV42 UPD42 MOV42 MOV32 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS11 UPD42 MOV42 INS42 INS32 MOV32 UPD42 MOV42 INS42 MOV32 UPD42 MOV42 INS42 INS21 INS43 INS32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS74 INS43 INS32 UPD42 UPD42 INS43 INS32 INS42 UPD42 MOV42 UPD42 UPD42 UPD42 UPD42 INS32 INS42 INS32 INS42 INS43 INS42 INS32 INS42 INS42 MOV32 UPD42 MOV42 MOV32 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS42 MOV42 INS42 UPD42 UPD42 UPD42 DEL32 DEL38 DEL42 DEL42 DEL45 DEL45 DEL27 DEL45 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL59 DEL60 DEL45 DEL42 DEL42 DEL43 DEL43 DEL74 DEL42 DEL59 DEL60 DEL32 DEL38 DEL45 DEL32 DEL21 DEL9 DEL41 DEL8 DEL25 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL32 DEL42 DEL32 DEL32 DEL32 DEL42 DEL32 DEL32 DEL32 DEL32 DEL42 DEL32 DEL59 DEL60 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL25 DEL9 DEL41 DEL8 DEL31