Merge commit '456e901a4c5c639267ee87b8e5f1319f256d20c2' (HDFS-6407. Add sorting and pagination in the datanode tab of the NN Web UI. Contributed by Haohui Mai.) into HDFS-7285-merge

-    CREATE, CLOSE, APPEND, RENAME, METADATA, UNLINK
+    CREATE, CLOSE, APPEND, RENAME, METADATA, UNLINK, TRUNCATE
+  @InterfaceAudience.Public
+
+    @Override
+    @InterfaceStability.Unstable
+    public String toString() {
+      return "CloseEvent [path=" + path + ", fileSize=" + fileSize
+          + ", timestamp=" + timestamp + "]";
+    }
+
+  @InterfaceAudience.Public
+
+    @Override
+    @InterfaceStability.Unstable
+    public String toString() {
+      StringBuilder content = new StringBuilder();
+      content.append("CreateEvent [INodeType=" + iNodeType + ", path=" + path
+          + ", ctime=" + ctime + ", replication=" + replication
+          + ", ownerName=" + ownerName + ", groupName=" + groupName
+          + ", perms=" + perms + ", ");
+
+      if (symlinkTarget != null) {
+        content.append("symlinkTarget=" + symlinkTarget + ", ");
+      }
+
+      content.append("overwrite=" + overwrite + ", defaultBlockSize="
+          + defaultBlockSize + "]");
+      return content.toString();
+    }
+
+  @InterfaceAudience.Public
+    @Override
+    @InterfaceStability.Unstable
+    public String toString() {
+      StringBuilder content = new StringBuilder();
+      content.append("MetadataUpdateEvent [path=" + path + ", metadataType="
+          + metadataType);
+      switch (metadataType) {
+      case TIMES:
+        content.append(", mtime=" + mtime + ", atime=" + atime);
+        break;
+      case REPLICATION:
+        content.append(", replication=" + replication);
+        break;
+      case OWNER:
+        content.append(", ownerName=" + ownerName
+            + ", groupName=" + groupName);
+        break;
+      case PERMS:
+        content.append(", perms=" + perms);
+        break;
+      case ACLS:
+        content.append(", acls=" + acls);
+        break;
+      case XATTRS:
+        content.append(", xAttrs=" + xAttrs + ", xAttrsRemoved="
+            + xAttrsRemoved);
+        break;
+      default:
+        break;
+      }
+      content.append(']');
+      return content.toString();
+    }
+  @InterfaceAudience.Public
+
+    @Override
+    @InterfaceStability.Unstable
+    public String toString() {
+      return "RenameEvent [srcPath=" + srcPath + ", dstPath=" + dstPath
+          + ", timestamp=" + timestamp + "]";
+    }
+
+  @InterfaceAudience.Public
+
+    @Override
+    @InterfaceStability.Unstable
+    public String toString() {
+      return "AppendEvent [path=" + path + ", newBlock=" + newBlock + "]";
+    }
+
+  @InterfaceAudience.Public
+
+    @Override
+    @InterfaceStability.Unstable
+    public String toString() {
+      return "UnlinkEvent [path=" + path + ", timestamp=" + timestamp + "]";
+    }
+  }
+
+  /**
+   * Sent when a file is truncated.
+   */
+  @InterfaceAudience.Public
+  public static class TruncateEvent extends Event {
+    private String path;
+    private long fileSize;
+    private long timestamp;
+
+
+    public TruncateEvent(String path, long fileSize, long timestamp) {
+      super(EventType.TRUNCATE);
+      this.path = path;
+      this.fileSize = fileSize;
+      this.timestamp = timestamp;
+    }
+
+    public String getPath() {
+      return path;
+    }
+
+    /**
+     * The size of the truncated file in bytes.
+     */
+    public long getFileSize() {
+      return fileSize;
+    }
+
+    /**
+     * The time when this event occurred, in milliseconds since the epoch.
+     */
+    public long getTimestamp() {
+      return timestamp;
+    }
+
+    @Override
+    @InterfaceStability.Unstable
+    public String toString() {
+      return "TruncateEvent [path=" + path + ", fileSize=" + fileSize
+          + ", timestamp=" + timestamp + "]";
+    }

INS55 INS72 INS78 INS31 INS78 INS31 INS78 INS31 INS78 INS31 INS78 INS31 INS78 INS31 INS29 INS78 INS83 INS83 INS42 INS43 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS42 INS40 INS78 INS78 INS83 INS43 INS42 INS8 INS40 INS78 INS78 INS83 INS43 INS42 INS8 INS40 INS78 INS78 INS83 INS43 INS42 INS8 INS40 INS78 INS78 INS83 INS43 INS42 INS8 INS40 INS78 INS78 INS83 INS43 INS42 INS8 INS40 INS78 INS78 INS83 INS43 INS42 INS8 INS65 INS40 INS42 INS83 INS43 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS42 INS44 INS44 INS44 INS8 INS83 INS43 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS78 INS78 INS83 INS43 INS42 INS8 INS42 INS40 INS42 INS41 INS42 INS40 INS42 INS60 INS21 INS25 INS21 INS41 INS42 INS40 INS42 INS60 INS21 INS50 INS21 INS41 INS42 INS40 INS42 INS41 INS42 INS40 INS42 INS41 INS42 INS40 INS42 INS41 INS66 INS42 INS42 INS42 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS46 INS21 INS21 INS21 INS42 INS41 INS65 INS41 INS65 INS41 INS42 INS40 INS42 INS41 INS27 INS43 INS59 INS32 INS27 INS8 INS32 INS32 INS43 INS59 INS32 INS42 INS49 INS21 INS10 INS49 INS21 INS10 INS49 INS21 INS10 INS49 INS21 INS10 INS49 INS21 INS10 INS49 INS21 INS10 INS49 INS10 INS32 INS32 INS27 INS27 INS27 INS42 INS40 INS7 INS7 INS7 INS42 INS66 INS42 INS66 INS42 INS27 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS42 INS14 INS42 INS42 INS27 INS42 INS33 INS21 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS27 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS13 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS45 INS42 INS45 INS42 INS45 INS45 INS42 INS45 INS42 INS45 INS22 INS42 INS22 INS42 INS22 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS43 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS32 INS45 INS42 INS45 INS42 INS45 INS43 INS45 INS42 INS45 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS27 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45