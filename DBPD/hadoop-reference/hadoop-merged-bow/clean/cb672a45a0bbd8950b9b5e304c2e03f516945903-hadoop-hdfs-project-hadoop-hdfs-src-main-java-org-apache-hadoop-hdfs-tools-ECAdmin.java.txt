HDFS-11605. Allow user to customize new erasure code policies. Contributed by Huafeng Wang

+import org.apache.hadoop.hdfs.protocol.AddingECPolicyResponse;
+import org.apache.hadoop.hdfs.util.ECPolicyLoader;
+  /** Command to add a set of erasure coding policies. */
+  private static class AddECPoliciesCommand
+      implements AdminHelper.Command {
+    @Override
+    public String getName() {
+      return "-addPolicies";
+    }
+
+    @Override
+    public String getShortUsage() {
+      return "[" + getName() + " -policyFile <file>]\n";
+    }
+
+    @Override
+    public String getLongUsage() {
+      final TableListing listing = AdminHelper.getOptionDescriptionListing();
+      listing.addRow("<file>",
+          "The path of the xml file which defines the EC policies to add");
+      return getShortUsage() + "\n" +
+          "Add a list of erasure coding policies.\n" +
+          listing.toString();
+    }
+
+    @Override
+    public int run(Configuration conf, List<String> args) throws IOException {
+      final String filePath =
+          StringUtils.popOptionWithArgument("-policyFile", args);
+      if (filePath == null) {
+        System.err.println("Please specify the path with -policyFile.\nUsage: "
+            + getLongUsage());
+        return 1;
+      }
+
+      if (args.size() > 0) {
+        System.err.println(getName() + ": Too many arguments");
+        return 1;
+      }
+
+      final DistributedFileSystem dfs = AdminHelper.getDFS(conf);
+      try {
+        List<ErasureCodingPolicy> policies =
+            new ECPolicyLoader().loadPolicy(filePath);
+        if (policies.size() > 0) {
+          AddingECPolicyResponse[] responses = dfs.addErasureCodingPolicies(
+            policies.toArray(new ErasureCodingPolicy[policies.size()]));
+          for (AddingECPolicyResponse response : responses) {
+            System.out.println(response);
+          }
+        } else {
+          System.out.println("No EC policy parsed out from " + filePath);
+        }
+
+      } catch (IOException e) {
+        System.err.println(AdminHelper.prettifyException(e));
+        return 2;
+      }
+      return 0;
+    }
+  }
+
+      new AddECPoliciesCommand(),

INS26 INS26 INS40 INS40 INS55 INS29 INS83 INS83 INS42 INS43 INS31 INS31 INS31 INS31 INS65 INS40 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS66 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS60 INS21 INS41 INS42 INS43 INS42 INS74 INS42 INS42 INS60 INS25 INS25 INS60 INS54 INS41 INS14 INS45 INS27 INS83 INS43 INS59 INS32 INS27 INS42 INS43 INS43 INS83 INS43 INS59 INS27 INS8 INS27 INS8 INS83 INS43 INS59 INS8 INS12 INS34 INS43 INS45 INS32 INS45 INS42 INS42 INS32 INS42 INS42 INS45 INS45 INS32 INS45 INS45 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS41 INS32 INS34 INS21 INS41 INS42 INS42 INS32 INS60 INS25 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS32 INS34 INS42 INS42 INS32 INS34 INS42 INS42 INS42 INS74 INS59 INS27 INS8 INS8 INS43 INS42 INS21 INS41 INS40 INS42 INS27 INS40 INS42 INS27 INS43 INS43 INS42 INS32 INS32 INS34 INS60 INS70 INS21 INS42 INS32 INS34 INS45 INS32 INS32 INS45 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS5 INS59 INS44 INS42 INS8 INS32 INS40 INS42 INS32 INS42 INS42 INS43 INS43 INS85 INS42 INS32 INS43 INS42 INS21 INS40 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS45 INS42 INS42 INS42 INS3 INS40 INS42 INS42 INS5 INS32 INS43 INS85 INS42 INS42 INS42