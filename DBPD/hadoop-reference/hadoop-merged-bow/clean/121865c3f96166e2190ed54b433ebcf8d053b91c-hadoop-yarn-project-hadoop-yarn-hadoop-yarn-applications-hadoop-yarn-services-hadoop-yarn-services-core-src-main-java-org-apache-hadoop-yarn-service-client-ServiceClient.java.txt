YARN-8299.  Added CLI and REST API for query container status.
            Contributed by Chandni Singh

+import org.apache.hadoop.yarn.proto.ClientAMProtocol.GetCompInstancesRequestProto;
+import org.apache.hadoop.yarn.proto.ClientAMProtocol.GetCompInstancesResponseProto;
+import org.apache.hadoop.yarn.service.api.records.ContainerState;
+import java.util.stream.Collectors;
+  @Override
+  public String getInstances(String appName,
+      List<String> components, String version, List<String> containerStates)
+      throws IOException, YarnException {
+    GetCompInstancesResponseProto result = filterContainers(appName, components,
+        version, containerStates);
+    return result.getCompInstances();
+  }
+
+  public Container[] getContainers(String appName, List<String> components,
+      String version, List<ContainerState> containerStates)
+      throws IOException, YarnException {
+    GetCompInstancesResponseProto result = filterContainers(appName, components,
+        version, containerStates != null ? containerStates.stream()
+            .map(Enum::toString).collect(Collectors.toList()) : null);
+
+    return ServiceApiUtil.CONTAINER_JSON_SERDE.fromJson(
+        result.getCompInstances());
+  }
+
+  private GetCompInstancesResponseProto filterContainers(String appName,
+      List<String> components, String version,
+      List<String> containerStates) throws IOException, YarnException {
+    ApplicationReport appReport = yarnClient.getApplicationReport(getAppId(
+        appName));
+    if (StringUtils.isEmpty(appReport.getHost())) {
+      throw new YarnException(appName + " AM hostname is empty.");
+    }
+    ClientAMProtocol proxy = createAMProxy(appName, appReport);
+    GetCompInstancesRequestProto.Builder req = GetCompInstancesRequestProto
+        .newBuilder();
+    if (components != null && !components.isEmpty()) {
+      req.addAllComponentNames(components);
+    }
+    if (version != null) {
+      req.setVersion(version);
+    }
+    if (containerStates != null && !containerStates.isEmpty()){
+      req.addAllContainerStates(containerStates);
+    }
+    return proxy.getCompInstances(req.build());
+  }
+

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS43 INS43 INS8 INS83 INS5 INS42 INS44 INS44 INS44 INS44 INS43 INS43 INS8 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS43 INS43 INS8 INS42 INS42 INS43 INS42 INS74 INS42 INS43 INS42 INS74 INS42 INS42 INS42 INS60 INS41 INS43 INS85 INS43 INS42 INS74 INS42 INS43 INS42 INS74 INS42 INS42 INS42 INS60 INS41 INS42 INS43 INS42 INS74 INS42 INS43 INS42 INS74 INS42 INS42 INS42 INS60 INS25 INS60 INS60 INS25 INS25 INS25 INS41 INS42 INS43 INS43 INS42 INS43 INS43 INS43 INS59 INS32 INS42 INS42 INS43 INS43 INS42 INS43 INS43 INS43 INS59 INS32 INS42 INS43 INS43 INS42 INS43 INS43 INS43 INS59 INS32 INS8 INS43 INS59 INS43 INS59 INS27 INS8 INS27 INS8 INS27 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS40 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS53 INS42 INS42 INS32 INS40 INS42 INS32 INS27 INS38 INS21 INS42 INS33 INS21 INS27 INS38 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS16 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS32 INS32 INS42 INS33 INS32 INS32 INS42 INS42 INS27 INS32 INS33 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS42 INS32 INS42 INS42 INS45 INS32 INS42 INS90 INS42 INS42 INS42 INS42 INS42 INS42