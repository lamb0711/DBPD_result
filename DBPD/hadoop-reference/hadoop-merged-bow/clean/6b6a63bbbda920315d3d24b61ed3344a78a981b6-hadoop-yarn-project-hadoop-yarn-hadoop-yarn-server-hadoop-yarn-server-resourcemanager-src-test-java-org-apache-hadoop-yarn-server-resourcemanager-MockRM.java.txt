Merge commit '456e901a4c5c639267ee87b8e5f1319f256d20c2' (HDFS-6407. Add sorting and pagination in the datanode tab of the NN Web UI. Contributed by Haohui Mai.) into HDFS-7285-merge

+import org.apache.hadoop.yarn.api.records.Priority;
+  public RMApp submitApp(int masterMemory, Priority priority) throws Exception {
+    Resource resource = Resource.newInstance(masterMemory, 0);
+    return submitApp(resource, "", UserGroupInformation.getCurrentUser()
+        .getShortUserName(), null, false, null,
+        super.getConfig().getInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,
+            YarnConfiguration.DEFAULT_RM_AM_MAX_ATTEMPTS), null, null, true,
+        false, false, null, 0, null, true, priority);
+  }
+
+  public RMApp submitApp(Resource resource, String name, String user,
+      Map<ApplicationAccessType, String> acls, String queue) throws Exception {
+    return submitApp(resource, name, user, acls, false, queue,
+        super.getConfig().getInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,
+          YarnConfiguration.DEFAULT_RM_AM_MAX_ATTEMPTS), null, null,
+          true, false, false, null, 0, null, true, null);
+  }
+
-    return submitApp(masterMemory, name, user, acls, unmanaged, queue,
+    Resource resource = Records.newRecord(Resource.class);
+    resource.setMemory(masterMemory);
+    return submitApp(resource, name, user, acls, unmanaged, queue,
-        false, null, 0, null, true);
+        false, null, 0, null, true, Priority.newInstance(0));
-    return submitApp(masterMemory, "", UserGroupInformation.getCurrentUser()
+    Resource resource = Records.newRecord(Resource.class);
+    resource.setMemory(masterMemory);
+    Priority priority = Priority.newInstance(0);
+    return submitApp(resource, "", UserGroupInformation.getCurrentUser()
-      false, null, attemptFailuresValidityInterval, null, true);
+      false, null, attemptFailuresValidityInterval, null, true, priority);
-    return submitApp(masterMemory, name, user, acls, unmanaged, queue,
+    Resource resource = Records.newRecord(Resource.class);
+    resource.setMemory(masterMemory);
+    Priority priority = Priority.newInstance(0);
+    return submitApp(resource, name, user, acls, unmanaged, queue,
-      isAppIdProvided, applicationId, 0, null, true);
+      isAppIdProvided, applicationId, 0, null, true, priority);
-    return submitApp(masterMemory, "", UserGroupInformation.getCurrentUser()
+    Resource resource = Records.newRecord(Resource.class);
+    resource.setMemory(masterMemory);
+    Priority priority = Priority.newInstance(0);
+    return submitApp(resource, "", UserGroupInformation.getCurrentUser()
-      false, null, 0, logAggregationContext, true);
+      false, null, 0, logAggregationContext, true, priority);
-  public RMApp submitApp(int masterMemory, String name, String user,
+  public RMApp submitApp(Resource capability, String name, String user,
-      LogAggregationContext logAggregationContext, boolean cancelTokensWhenComplete)
+      LogAggregationContext logAggregationContext,
+      boolean cancelTokensWhenComplete, Priority priority)
-    if(unmanaged) {
+    if (unmanaged) {
+    if (priority != null) {
+      sub.setPriority(priority);
+    }
-    final Resource capability = Records.newRecord(Resource.class);
-    capability.setMemory(masterMemory);

INS26 MOV31 INS40 INS31 INS31 INS31 MOV83 INS43 INS42 MOV44 INS44 INS43 INS8 INS83 MOV43 INS42 INS44 MOV44 MOV44 MOV44 INS44 INS43 INS8 MOV43 MOV43 MOV44 MOV43 INS83 MOV43 INS42 MOV44 INS44 INS44 INS44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV43 INS8 INS43 MOV44 MOV43 INS44 INS44 INS42 INS43 INS42 INS42 INS60 INS41 INS43 INS42 INS43 INS42 INS42 INS41 INS60 INS21 INS60 INS21 INS60 INS43 INS42 INS43 INS42 INS74 INS42 INS60 INS21 INS60 INS41 INS42 MOV60 INS21 INS60 INS43 INS42 INS43 INS42 INS25 INS42 INS43 INS59 INS32 INS42 INS42 INS32 INS43 INS59 INS32 INS43 INS59 INS32 INS43 INS59 INS42 INS42 INS43 INS43 INS43 INS43 INS59 INS32 INS43 INS59 INS32 INS32 INS43 INS59 INS42 INS42 INS27 INS8 INS42 INS42 INS32 INS42 UPD42 MOV42 INS45 INS32 INS33 INS9 INS33 INS32 INS33 INS33 INS9 INS9 INS9 INS33 INS34 INS33 INS9 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV9 INS42 MOV32 MOV33 INS33 INS9 INS9 INS9 INS33 MOV34 MOV33 MOV9 INS33 INS42 INS42 INS32 INS42 INS42 INS42 UPD42 INS9 INS33 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 MOV32 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS33 INS9 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 MOV32 INS32 INS42 INS42 INS33 MOV21 INS42 INS42 MOV42 INS34 INS32 UPD42 MOV42 INS48 INS42 INS40 INS40 INS42 INS42 INS57 INS42 INS42 INS34 INS42 INS42 INS57 INS42 INS42 INS34 INS42 INS42 INS57 INS42 INS42 INS34 INS42 INS42 INS34 INS48 INS42 INS40 INS40 INS42 UPD42 MOV42 INS42 INS43 INS43 INS43 INS42 UPD42 UPD42 UPD42 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL42 DEL83