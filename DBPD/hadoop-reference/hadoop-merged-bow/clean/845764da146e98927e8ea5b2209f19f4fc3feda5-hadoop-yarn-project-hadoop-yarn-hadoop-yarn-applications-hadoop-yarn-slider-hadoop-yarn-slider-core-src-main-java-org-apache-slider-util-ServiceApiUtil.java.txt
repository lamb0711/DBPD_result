YARN-6405. Improve configuring services through REST API. Contributed by Jian He

+import org.apache.hadoop.fs.FileSystem;
+import org.apache.hadoop.fs.Path;
+import org.apache.slider.api.resource.ConfigFile;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+import java.io.IOException;
+import java.nio.file.Paths;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Set;
-
+  private static final Logger log =
+      LoggerFactory.getLogger(ServiceApiUtil.class);
-  public static void validateApplicationPostPayload(Application application) {
+  public static void validateApplicationPayload(Application application,
+      FileSystem fs) throws IOException {
-      if (application.getNumberOfContainers() == null) {
+      if (application.getNumberOfContainers() == null
+          || application.getNumberOfContainers() < 0) {
-            RestApiErrorMessages.ERROR_CONTAINERS_COUNT_INVALID);
+            RestApiErrorMessages.ERROR_CONTAINERS_COUNT_INVALID + ": "
+                + application.getNumberOfContainers());
-
+      validateConfigFile(application.getConfiguration().getFiles(), fs);
-        if (comp.getNumberOfContainers() == null) {
+        if (comp.getNumberOfContainers() == null
+            || comp.getNumberOfContainers() < 0) {
-              RestApiErrorMessages.ERROR_CONTAINERS_COUNT_FOR_COMP_INVALID,
-              comp.getName()));
+              RestApiErrorMessages.ERROR_CONTAINERS_COUNT_FOR_COMP_INVALID
+                  + ": " + comp.getNumberOfContainers(), comp.getName()));
+        validateConfigFile(comp.getConfiguration().getFiles(), fs);
+  // 1) Verify the src_file exists and non-empty for template
+  // 2) dest_file is absolute path
+  private static void validateConfigFile(List<ConfigFile> list, FileSystem fs)
+      throws IOException {
+    Set<String> destFileSet = new HashSet<>();
+
+    for (ConfigFile file : list) {
+      if (file.getType().equals(ConfigFile.TypeEnum.TEMPLATE) && StringUtils
+          .isEmpty(file.getSrcFile())) {
+        throw new IllegalArgumentException(
+            "Src_file is empty for " + ConfigFile.TypeEnum.TEMPLATE);
+
+      }
+      if (!StringUtils.isEmpty(file.getSrcFile())) {
+        Path p = new Path(file.getSrcFile());
+        if (!fs.exists(p)) {
+          throw new IllegalArgumentException(
+              "Src_file does not exist for config file: " + file
+                  .getSrcFile());
+        }
+      }
+
+      if (StringUtils.isEmpty(file.getDestFile())) {
+        throw new IllegalArgumentException("Dest_file is empty.");
+      }
+      // validate dest_file is absolute
+      if (!Paths.get(file.getDestFile()).isAbsolute()) {
+        throw new IllegalArgumentException(
+            "Dest_file must be absolute path: " + file.getDestFile());
+      }
+
+      if (destFileSet.contains(file.getDestFile())) {
+        throw new IllegalArgumentException(
+            "Duplicated ConfigFile exists: " + file.getDestFile());
+      }
+      destFileSet.add(file.getDestFile());
+    }
+  }
+
+
+
+  public static String $(String s) {
+    return "${" + s +"}";
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS31 INS83 INS83 INS83 INS43 INS59 UPD42 INS44 INS43 INS83 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS42 INS42 INS32 INS43 INS42 INS42 INS74 INS42 INS43 INS42 INS42 INS60 INS70 INS42 INS43 INS42 INS41 INS42 INS42 INS57 INS42 INS43 INS43 INS42 INS74 INS59 INS44 INS42 INS8 INS42 INS27 INS43 INS21 INS42 INS42 INS43 INS43 INS42 INS14 INS43 INS42 INS25 INS25 INS25 INS25 INS25 INS21 INS45 INS42 INS45 INS42 INS27 INS32 INS42 INS42 INS74 INS42 INS27 INS8 INS38 INS8 INS32 INS8 INS38 INS8 INS32 INS8 INS32 MOV27 INS27 INS42 INS32 INS42 INS21 INS43 INS32 INS32 INS53 INS32 INS60 INS25 INS42 INS42 INS32 INS53 INS32 INS53 INS42 INS42 INS32 INS53 INS42 INS42 INS32 INS32 INS34 INS32 INS42 INS27 INS32 INS42 INS32 INS42 INS40 INS42 INS42 INS32 INS14 INS42 INS42 INS32 INS43 INS59 INS38 INS8 INS42 INS42 INS14 INS32 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS27 INS42 INS42 MOV27 INS27 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS42 INS14 INS32 INS53 INS43 INS45 INS42 INS42 INS32 INS43 INS27 INS43 INS27 INS40 INS45 INS32 INS32 INS34 INS32 INS42 INS42 INS45 INS40 INS43 INS32 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS42 INS27 INS42 INS45 INS32 INS40 INS45 INS32 INS42 INS42 INS42 INS42 DEL40 DEL40