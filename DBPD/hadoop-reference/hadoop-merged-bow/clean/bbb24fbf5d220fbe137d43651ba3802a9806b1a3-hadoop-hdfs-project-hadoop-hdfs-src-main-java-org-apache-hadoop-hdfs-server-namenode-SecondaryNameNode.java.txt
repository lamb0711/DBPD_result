Merge trunk into branch.

Conflicts resolved:
C       hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestShortCircuitLocalRead.java
!     C hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/SocketCache.java
C       hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java
C       hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java
C       hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
C       hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/BlockReaderLocal.java

(thanks to Colin for help resolving)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-347@1462652 13f79535-47bb-0310-9956-ffa450edef68

+  int getMergeErrorCount() {
+    return checkpointImage.getMergeErrorCount();
+  }
+
+  @VisibleForTesting
-          String httpKeytabKey = DFSConfigKeys.
-              DFS_WEB_AUTHENTICATION_KERBEROS_KEYTAB_KEY;
-          if (null == conf.get(httpKeytabKey)) {
-            httpKeytabKey = DFSConfigKeys.DFS_SECONDARY_NAMENODE_KEYTAB_FILE_KEY;
-          }
-              httpKeytabKey);
+              DFSUtil.getSpnegoKeytabKey(conf,
+                  DFSConfigKeys.DFS_SECONDARY_NAMENODE_KEYTAB_FILE_KEY));
+    int maxRetries = checkpointConf.getMaxRetriesOnMergeError();
+        // Prevent a huge number of edits from being created due to
+        // unrecoverable conditions and endless retries.
+        if (checkpointImage.getMergeErrorCount() > maxRetries) {
+          LOG.fatal("Merging failed " + 
+              checkpointImage.getMergeErrorCount() + " times.");
+          terminate(1);
+        }
+    // Fetch fsimage and edits. Reload the image if previous merge failed.
-        fsName, checkpointImage, sig, manifest);   // Fetch fsimage and edits
-    doMerge(sig, manifest, loadImage, checkpointImage, namesystem);
+        fsName, checkpointImage, sig, manifest) |
+        checkpointImage.hasMergeError();
+    try {
+      doMerge(sig, manifest, loadImage, checkpointImage, namesystem);
+    } catch (IOException ioe) {
+      // A merge error occurred. The in-memory file system state may be
+      // inconsistent, so the image and edits need to be reloaded.
+      checkpointImage.setMergeError();
+      throw ioe;
+    }
+    // Clear any error since merge was successful.
+    checkpointImage.clearMergeError();
+
+    private int mergeErrorCount;
+      mergeErrorCount = 0;
-    
+
+
+    boolean hasMergeError() {
+      return (mergeErrorCount > 0);
+    }
+
+    int getMergeErrorCount() {
+      return mergeErrorCount;
+    }
+
+    void setMergeError() {
+      mergeErrorCount++;
+    }
+
+    void clearMergeError() {
+      mergeErrorCount = 0;
+    }
+ 
-    
+    // error simulation code for junit test
+    CheckpointFaultInjector.getInstance().duringMerge();   
+

INS31 INS78 INS39 INS42 INS8 INS23 INS31 INS31 INS31 INS31 INS42 INS41 INS60 INS54 INS21 INS83 INS39 INS59 INS39 INS42 INS8 INS39 INS42 INS8 INS39 INS42 INS8 INS39 INS42 INS8 INS21 INS32 INS39 INS59 INS8 INS12 INS32 INS42 INS21 INS41 INS41 INS21 INS21 INS32 INS42 INS42 INS42 INS32 INS27 MOV21 INS44 INS8 INS42 INS42 INS7 INS36 INS42 INS37 INS7 INS32 INS42 INS42 INS42 MOV32 INS32 INS43 INS42 INS21 INS53 INS42 INS34 INS27 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS34 INS25 INS42 INS42 INS27 INS8 INS32 INS42 INS21 INS21 INS21 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS27 INS42 INS34 INS42 MOV42 INS40 INS32 INS45 INS32 INS45 INS42 UPD42 MOV42 MOV42 UPD40 MOV40 INS42 INS42 DEL42 DEL43 DEL42 DEL40 DEL59 DEL60 DEL33 DEL42 DEL42 DEL32 DEL27 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL42 DEL32 DEL21