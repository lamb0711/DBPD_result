Merge trunk into branch.

Branch will not build after this commit: need to implement new JournalManager
interfaces in QuorumJournalManager in a follow-up.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1371518 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.util.ToolRunner;
-  public static class StorageDirectory {
+  public static class StorageDirectory implements FormatConfirmable {
+    
+    /**
+     * @return true if the storage directory should prompt the user prior
+     * to formatting (i.e if the directory appears to contain some data)
+     * @throws IOException if the SD cannot be accessed due to an IO error
+     */
+    @Override
+    public boolean hasSomeData() throws IOException {
+      // Its alright for a dir not to exist, or to exist (properly accessible)
+      // and be completely empty.
+      if (!root.exists()) return false;
+      
+      if (!root.isDirectory()) {
+        // a file where you expect a directory should not cause silent
+        // formatting
+        return true;
+      }
+      
+      if (FileUtil.listFiles(root).length == 0) {
+        // Empty dir can format without prompt.
+        return false;
+      }
+      
+      return true;
+    }
+
+   * Iterate over each of the {@link FormatConfirmable} objects,
+   * potentially checking with the user whether it should be formatted.
+   * 
+   * If running in interactive mode, will prompt the user for each
+   * directory to allow them to format anyway. Otherwise, returns
+   * false, unless 'force' is specified.
+   * 
+   * @param force format regardless of whether dirs exist
+   * @param interactive prompt the user when a dir exists
+   * @return true if formatting should proceed
+   * @throws IOException if some storage cannot be accessed
+   */
+  public static boolean confirmFormat(
+      Iterable<? extends FormatConfirmable> items,
+      boolean force, boolean interactive) throws IOException {
+    for (FormatConfirmable item : items) {
+      if (!item.hasSomeData())
+        continue;
+      if (force) { // Don't confirm, always format.
+        System.err.println(
+            "Data exists in " + item + ". Formatting anyway.");
+        continue;
+      }
+      if (!interactive) { // Don't ask - always don't format
+        System.err.println(
+            "Running in non-interactive mode, and data appears to exist in " +
+            item + ". Not formatting.");
+        return false;
+      }
+      if (!ToolRunner.confirmPrompt("Re-format filesystem in " + item + " ?")) {
+        System.err.println("Format aborted in " + item);
+        return false;
+      }
+    }
+    
+    return true;
+  }
+  
+  /**
+   * Interface for classes which need to have the user confirm their
+   * formatting during NameNode -format and other similar operations.
+   * 
+   * This is currently a storage directory or journal manager.
+   */
+  @InterfaceAudience.Private
+  public interface FormatConfirmable {
+    /**
+     * @return true if the storage seems to have some valid data in it,
+     * and the user should be required to confirm the format. Otherwise,
+     * false.
+     * @throws IOException if the storage cannot be accessed at all.
+     */
+    public boolean hasSomeData() throws IOException;
+    
+    /**
+     * @return a string representation of the formattable item, suitable
+     * for display to the user inside a prompt
+     */
+    public String toString();
+  }
+  
+  /**

INS26 INS40 INS31 INS55 INS43 INS31 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS29 INS78 INS83 INS42 INS31 INS31 INS42 INS29 INS78 INS83 INS39 INS42 INS43 INS8 INS65 INS65 INS65 INS65 INS65 INS74 INS42 INS39 INS42 INS39 INS42 INS42 INS70 INS41 INS65 INS40 INS29 INS83 INS39 INS42 INS43 INS29 INS83 INS43 INS42 INS65 INS65 INS42 INS42 INS25 INS25 INS25 INS41 INS66 INS65 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS43 INS76 INS44 INS42 INS8 INS9 INS66 INS66 INS66 INS65 INS65 INS42 INS65 INS42 INS66 INS66 INS42 INS66 INS38 INS41 INS38 INS8 INS27 INS8 INS9 INS42 INS42 INS43 INS43 INS42 INS25 INS25 INS25 INS25 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS32 INS9 INS32 INS41 INS22 INS34 INS41 INS42 INS42 INS38 INS18 INS42 INS8 INS38 INS8 INS38 INS8 INS42 INS42 INS42 INS42 INS9 INS32 INS42 INS9 INS32 INS21 INS18 INS42 INS21 INS41 INS32 INS21 INS41 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS9 INS42 INS42 INS27 INS32 INS9 INS40 INS42 INS27 INS40 INS42 INS27 INS45 INS42 INS45 INS40 INS42 INS27 INS45 INS42 INS45 INS45 INS42 INS45 INS45 INS42