HDFS-2241. Remove implementing FSConstants interface to just get the constants from the interface. Contributed by Suresh Srinivas.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1156420 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.DFSConfigKeys;
- *
+ * 
-public interface FSConstants {
+public final class FSConstants {
+  /* Hidden constructor */
+  private FSConstants() {
+  }
+
-  
+
-  public static long HEARTBEAT_INTERVAL = 3;
-  public static long BLOCKREPORT_INTERVAL = 60 * 60 * 1000;
-  public static long BLOCKREPORT_INITIAL_DELAY = 0;
-  public static final long LEASE_RECOVER_PERIOD = 10 * 1000; //in ms
-  
-  // We need to limit the length and depth of a path in the filesystem.  HADOOP-438
-  // Currently we set the maximum length to 8k characters and the maximum depth to 1k.  
+  public static final long LEASE_RECOVER_PERIOD = 10 * 1000; // in ms
+
+  // We need to limit the length and depth of a path in the filesystem.
+  // HADOOP-438
+  // Currently we set the maximum length to 8k characters and the maximum depth
+  // to 1k.
-    
-  public static final int BUFFER_SIZE = new HdfsConfiguration().getInt("io.file.buffer.size", 4096);
-  //Used for writing header etc.
-  public static final int SMALL_BUFFER_SIZE = Math.min(BUFFER_SIZE/2, 512);
-  //TODO mb@media-style.com: should be conf injected?
-  public static final long DEFAULT_BLOCK_SIZE = 64 * 1024 * 1024;
-  public static final int DEFAULT_BYTES_PER_CHECKSUM = 512;
-  public static final int DEFAULT_WRITE_PACKET_SIZE = 64 * 1024;
-  public static final short DEFAULT_REPLICATION_FACTOR = 3;
-  public static final int DEFAULT_FILE_BUFFER_SIZE = 4096;
-  public static final int DEFAULT_DATA_SOCKET_SIZE = 128 * 1024;
-  public static final int SIZE_OF_INTEGER = Integer.SIZE / Byte.SIZE;
+  // TODO mb@media-style.com: should be conf injected?
+  public static final int DEFAULT_DATA_SOCKET_SIZE = 128 * 1024;
+  public static final int IO_FILE_BUFFER_SIZE = new HdfsConfiguration().getInt(
+      DFSConfigKeys.IO_FILE_BUFFER_SIZE_KEY,
+      DFSConfigKeys.IO_FILE_BUFFER_SIZE_DEFAULT);
+  // Used for writing header etc.
+  public static final int SMALL_BUFFER_SIZE = Math.min(IO_FILE_BUFFER_SIZE / 2,
+      512);
+
+  public static final int BYTES_IN_INTEGER = Integer.SIZE / Byte.SIZE;
-  public enum SafeModeAction{ SAFEMODE_LEAVE, SAFEMODE_ENTER, SAFEMODE_GET; }
+  public enum SafeModeAction {
+    SAFEMODE_LEAVE, SAFEMODE_ENTER, SAFEMODE_GET;
+  }
-  public static enum DatanodeReportType {ALL, LIVE, DEAD }
-  
+  public static enum DatanodeReportType {
+    ALL, LIVE, DEAD
+  }
+
-   * 1. Get upgrade status.
-   * 2. Get detailed upgrade status.
-   * 3. Proceed with the upgrade if it is stuck, no matter what the status is.
+   * 1. Get upgrade status. 2. Get detailed upgrade status. 3. Proceed with the
+   * upgrade if it is stuck, no matter what the status is.
-    GET_STATUS,
-    DETAILED_STATUS,
-    FORCE_PROCEED;
+    GET_STATUS, DETAILED_STATUS, FORCE_PROCEED;
-  public static final int LAYOUT_VERSION = 
-    LayoutVersion.getCurrentLayoutVersion();
+  public static final int LAYOUT_VERSION = LayoutVersion
+      .getCurrentLayoutVersion();

INS26 MOV23 INS40 INS83 INS31 INS83 INS42 INS8 UPD42 UPD42 INS40 INS40 UPD66 UPD66 UPD42 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL39 DEL42 DEL34 DEL34 DEL34 DEL27 DEL59 DEL23 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL45 DEL34 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL34 DEL34 DEL27 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL34 DEL27 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL66