HDFS-11359. DFSAdmin report command supports displaying maintenance state datanodes. Contributed by Yiqun Lin.

-    "\t[-report [-live] [-dead] [-decommissioning]]\n" +
+    "\t[-report [-live] [-dead] [-decommissioning] " +
+    "[-enteringmaintenance] [-inmaintenance]]\n" +
+    final boolean listEnteringMaintenance =
+        StringUtils.popOption("-enteringmaintenance", args);
+    final boolean listInMaintenance =
+        StringUtils.popOption("-inmaintenance", args);
+
-    boolean listAll = (!listLive && !listDead && !listDecommissioning);
+    boolean listAll = (!listLive && !listDead && !listDecommissioning
+        && !listEnteringMaintenance && !listInMaintenance);
-      DatanodeInfo[] live = dfs.getDataNodeStats(DatanodeReportType.LIVE);
-      if (live.length > 0 || listLive) {
-        System.out.println("Live datanodes (" + live.length + "):\n");
-      }
-      if (live.length > 0) {
-        for (DatanodeInfo dn : live) {
-          System.out.println(dn.getDatanodeReport());
-          System.out.println();
-        }
-      }
+      printDataNodeReports(dfs, DatanodeReportType.LIVE, listLive, "Live");
-      DatanodeInfo[] dead = dfs.getDataNodeStats(DatanodeReportType.DEAD);
-      if (dead.length > 0 || listDead) {
-        System.out.println("Dead datanodes (" + dead.length + "):\n");
-      }
-      if (dead.length > 0) {
-        for (DatanodeInfo dn : dead) {
-          System.out.println(dn.getDatanodeReport());
-          System.out.println();
-        }
-      }
+      printDataNodeReports(dfs, DatanodeReportType.DEAD, listDead, "Dead");
-      DatanodeInfo[] decom =
-          dfs.getDataNodeStats(DatanodeReportType.DECOMMISSIONING);
-      if (decom.length > 0 || listDecommissioning) {
-        System.out.println("Decommissioning datanodes (" + decom.length
-            + "):\n");
-      }
-      if (decom.length > 0) {
-        for (DatanodeInfo dn : decom) {
-          System.out.println(dn.getDatanodeReport());
-          System.out.println();
-        }
+      printDataNodeReports(dfs, DatanodeReportType.DECOMMISSIONING,
+          listDecommissioning, "Decommissioning");
+    }
+
+    if (listAll || listEnteringMaintenance) {
+      printDataNodeReports(dfs, DatanodeReportType.ENTERING_MAINTENANCE,
+          listEnteringMaintenance, "Entering maintenance");
+    }
+
+    if (listAll || listInMaintenance) {
+      printDataNodeReports(dfs, DatanodeReportType.IN_MAINTENANCE,
+          listInMaintenance, "In maintenance");
+    }
+  }
+
+  private static void printDataNodeReports(DistributedFileSystem dfs,
+      DatanodeReportType type, boolean listNodes, String nodeState)
+      throws IOException {
+    DatanodeInfo[] nodes = dfs.getDataNodeStats(type);
+    if (nodes.length > 0 || listNodes) {
+      System.out.println(nodeState + " datanodes (" + nodes.length + "):\n");
+    }
+    if (nodes.length > 0) {
+      for (DatanodeInfo dn : nodes) {
+        System.out.println(dn.getDatanodeReport());
+        System.out.println();
-    String report ="-report [-live] [-dead] [-decommissioning]:\n" +
-      "\tReports basic filesystem information and statistics. \n" +
-      "\tThe dfs usage can be different from \"du\" usage, because it\n" +
-      "\tmeasures raw space used by replication, checksums, snapshots\n" +
-      "\tand etc. on all the DNs.\n" +
-      "\tOptional flags may be used to filter the list of displayed DNs.\n";
+    String report ="-report [-live] [-dead] [-decommissioning] "
+        + "[-enteringmaintenance] [-inmaintenance]:\n" +
+        "\tReports basic filesystem information and statistics. \n" +
+        "\tThe dfs usage can be different from \"du\" usage, because it\n" +
+        "\tmeasures raw space used by replication, checksums, snapshots\n" +
+        "\tand etc. on all the DNs.\n" +
+        "\tOptional flags may be used to filter the list of displayed DNs.\n";
-          + " [-report] [-live] [-dead] [-decommissioning]");
+          + " [-report] [-live] [-dead] [-decommissioning]"
+          + " [-enteringmaintenance] [-inmaintenance]");
-      if (argv.length > 4) {
+      if (argv.length > 6) {

INS31 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 MOV8 MOV60 INS60 INS25 MOV25 INS25 MOV25 MOV25 INS43 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS42 INS83 INS39 INS83 INS39 INS59 MOV27 MOV8 MOV27 INS8 MOV27 INS8 INS27 INS8 INS42 INS42 INS42 UPD45 INS45 UPD42 INS42 INS32 MOV21 INS21 UPD42 INS42 INS42 INS42 MOV21 UPD42 UPD42 UPD40 UPD42 INS42 INS45 UPD42 INS42 INS42 INS45 INS42 INS32 INS42 UPD40 UPD42 UPD45 INS45 INS38 INS38 UPD42 INS42 INS40 INS42 INS45 UPD42 UPD42 MOV42 INS40 UPD42 MOV42 INS45 INS42 MOV42 UPD40 MOV40 INS42 INS45 UPD42 INS42 INS40 INS42 INS45 UPD42 UPD42 MOV42 INS40 UPD42 MOV42 INS45 INS42 INS42 INS42 UPD45 UPD40 INS45 UPD34 DEL42 DEL43 DEL85 DEL5 DEL40 DEL40 DEL45 DEL40 DEL45 DEL27 DEL40 DEL32 DEL40 DEL34 DEL27 DEL42 DEL43 DEL42 DEL44 DEL42 DEL40 DEL42 DEL32 DEL21 DEL8 DEL70 DEL8 DEL40 DEL34 DEL27 DEL40 DEL45 DEL40 DEL45 DEL27 DEL40 DEL32 DEL40 DEL34 DEL27 DEL42 DEL43 DEL42 DEL44 DEL42 DEL40 DEL42 DEL32 DEL21 DEL8 DEL70 DEL8 DEL40 DEL34 DEL27 DEL42 DEL27 DEL25 DEL8 DEL25 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL25 DEL25 DEL40