HDFS-5163. Miscellaneous cache pool RPC fixes (Contributed by Colin Patrick McCabe)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1520665 13f79535-47bb-0310-9956-ffa450edef68

+import javax.annotation.Nullable;
+
-import com.google.common.base.Preconditions;
-
- * 
- * CachePoolInfo permissions roughly map to Unix file permissions.
- * Write permissions allow addition and removal of a {@link PathCacheEntry} from
- * the pool. Execute permissions allow listing of PathCacheEntries in a pool.
- * Read permissions have no associated meaning.
+  final String poolName;
-  private String poolName;
-  private String ownerName;
-  private String groupName;
-  private FsPermission mode;
-  private Integer weight;
+  @Nullable
+  String ownerName;
-  /**
-   * For Builder use
-   */
-  private CachePoolInfo() {}
+  @Nullable
+  String groupName;
-  /**
-   * Use a CachePoolInfo {@link Builder} to create a new CachePoolInfo with
-   * more parameters
-   */
+  @Nullable
+  FsPermission mode;
+
+  @Nullable
+  Integer weight;
+
-
+  
+  public CachePoolInfo setOwnerName(String ownerName) {
+    this.ownerName = ownerName;
+    return this;
+  }
+
+  public CachePoolInfo setGroupName(String groupName) {
+    this.groupName = groupName;
+    return this;
+  }
+  
+  public CachePoolInfo setMode(FsPermission mode) {
+    this.mode = mode;
+    return this;
+  }
+
+  public CachePoolInfo setWeight(Integer weight) {
+    this.weight = weight;
+    return this;
+  }
+
-    return new StringBuilder().
-        append("{ ").append("poolName:").append(poolName).
-        append(", ownerName:").append(ownerName).
-        append(", groupName:").append(groupName).
-        append(", mode:").append(mode).
-        append(", weight:").append(weight).
-        append(" }").toString();
+    return new StringBuilder().append("{").
+      append("poolName:").append(poolName).
+      append(", ownerName:").append(ownerName).
+      append(", groupName:").append(groupName).
+      append(", mode:").append((mode == null) ? "null" :
+          String.format("0%03o", mode)).
+      append(", weight:").append(weight).
+      append("}").toString();
+  }
+  
+  @Override
+  public boolean equals(Object o) {
+    try {
+      CachePoolInfo other = (CachePoolInfo)o;
+      return new EqualsBuilder().
+          append(poolName, other.poolName).
+          append(ownerName, other.ownerName).
+          append(groupName, other.groupName).
+          append(mode, other.mode).
+          append(weight, other.weight).
+          isEquals();
+    } catch (ClassCastException e) {
+      return false;
+    }
-    return new HashCodeBuilder().append(poolName).append(ownerName)
-        .append(groupName).append(mode.toShort()).append(weight).hashCode();
+    return new HashCodeBuilder().
+        append(poolName).
+        append(ownerName).
+        append(groupName).
+        append(mode).
+        append(weight).
+        hashCode();
-
-  @Override
-  public boolean equals(Object obj) {
-    if (obj == null) { return false; }
-    if (obj == this) { return true; }
-    if (obj.getClass() != getClass()) {
-      return false;
-    }
-    CachePoolInfo rhs = (CachePoolInfo)obj;
-    return new EqualsBuilder()
-      .append(poolName, rhs.poolName)
-      .append(ownerName, rhs.ownerName)
-      .append(groupName, rhs.groupName)
-      .append(mode, rhs.mode)
-      .append(weight, rhs.weight)
-      .isEquals();
-  }
-
-  public static Builder newBuilder() {
-    return new Builder();
-  }
-
-  public static Builder newBuilder(CachePoolInfo info) {
-    return new Builder(info);
-  }
-
-  /**
-   * CachePoolInfo Builder
-   */
-  public static class Builder {
-    private CachePoolInfo info;
-
-    public Builder() {
-      this.info = new CachePoolInfo();
-    }
-
-    public Builder(CachePoolInfo info) {
-      this.info = info;
-    }
-
-    public CachePoolInfo build() {
-      Preconditions.checkNotNull(info.poolName,
-          "Cannot create a CachePoolInfo without a pool name");
-      return info;
-    }
-
-    public Builder setPoolName(String poolName) {
-      info.poolName = poolName;
-      return this;
-    }
-
-    public Builder setOwnerName(String ownerName) {
-      info.ownerName = ownerName;
-      return this;
-    }
-
-    public Builder setGroupName(String groupName) {
-      info.groupName = groupName;
-      return this;
-    }
-
-    public Builder setMode(FsPermission mode) {
-      info.mode = mode;
-      return this;
-    }
-
-    public Builder setWeight(Integer weight) {
-      info.weight = weight;
-      return this;
-    }
-  }
-
-}
+}

MOV26 MOV31 UPD40 MOV31 MOV31 MOV31 MOV31 UPD83 INS78 INS78 INS78 INS78 MOV43 UPD42 MOV44 MOV43 UPD42 MOV44 MOV43 MOV43 INS8 INS42 INS42 INS42 INS42 MOV41 MOV41 MOV41 MOV41 UPD42 INS54 MOV8 INS12 INS42 UPD42 INS22 INS42 INS22 INS42 INS44 MOV8 UPD42 UPD42 INS52 INS42 INS52 INS42 UPD45 MOV43 INS43 INS42 UPD42 INS42 MOV42 MOV43 UPD42 UPD40 INS16 UPD40 INS36 INS45 INS32 UPD40 INS27 INS42 INS42 INS45 INS42 UPD40 INS42 INS33 UPD40 UPD45 DEL66 DEL66 DEL42 DEL65 DEL66 DEL66 DEL66 DEL83 DEL83 DEL83 DEL83 DEL66 DEL65 DEL29 DEL83 DEL42 DEL8 DEL31 DEL66 DEL42 DEL65 DEL66 DEL66 DEL65 DEL29 DEL14 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL40 DEL42 DEL42 DEL43 DEL40 DEL42 DEL52 DEL41 DEL42 DEL42 DEL33 DEL27 DEL9 DEL41 DEL8 DEL25 DEL42 DEL52 DEL27 DEL9 DEL41 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL25 DEL42 DEL32 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL41 DEL8 DEL31 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL41 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL83 DEL42 DEL59 DEL23 DEL83 DEL42 DEL42 DEL42 DEL40 DEL45 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL40 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL40 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL40 DEL42 DEL7 DEL21 DEL8 DEL31 DEL55