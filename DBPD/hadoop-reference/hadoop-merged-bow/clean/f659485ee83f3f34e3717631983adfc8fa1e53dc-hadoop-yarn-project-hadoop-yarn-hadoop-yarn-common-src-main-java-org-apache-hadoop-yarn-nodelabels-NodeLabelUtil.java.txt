YARN-8925. Updating distributed node attributes only when necessary. Contributed by Tao Yang.

+import java.util.Objects;
+  private static final Pattern ATTRIBUTE_NAME_PATTERN =
+      Pattern.compile("^[0-9a-zA-Z][0-9a-zA-Z-_]*");
+  public static void checkAndThrowAttributeName(String attributeName)
+      throws IOException {
+    if (attributeName == null || attributeName.isEmpty()
+        || attributeName.length() > MAX_LABEL_LENGTH) {
+      throw new IOException(
+          "attribute name added is empty or exceeds " + MAX_LABEL_LENGTH
+              + " character(s)");
+    }
+    attributeName = attributeName.trim();
+
+    boolean match = ATTRIBUTE_NAME_PATTERN.matcher(attributeName).matches();
+
+    if (!match) {
+      throw new IOException("attribute name should only contains "
+          + "{0-9, a-z, A-Z, -, _} and should not started with {-,_}"
+          + ", now it is= " + attributeName);
+    }
+  }
+
-        checkAndThrowLabelName(attributeKey.getAttributeName());
+        checkAndThrowAttributeName(attributeKey.getAttributeName());
+        // Verify attribute value format.
+        checkAndThrowAttributeValue(nodeAttribute.getAttributeValue());
+
+  /**
+   * Are these two input node attributes the same.
+   * @return true if they are the same
+   */
+  public static boolean isNodeAttributesEquals(
+      Set<NodeAttribute> leftNodeAttributes,
+      Set<NodeAttribute> rightNodeAttributes) {
+    if (leftNodeAttributes == null && rightNodeAttributes == null) {
+      return true;
+    } else if (leftNodeAttributes == null || rightNodeAttributes == null
+        || leftNodeAttributes.size() != rightNodeAttributes.size()) {
+      return false;
+    }
+    return leftNodeAttributes.stream()
+        .allMatch(e -> isNodeAttributeIncludes(rightNodeAttributes, e));
+  }
+
+  private static boolean isNodeAttributeIncludes(
+      Set<NodeAttribute> nodeAttributes, NodeAttribute checkNodeAttribute) {
+    return nodeAttributes.stream().anyMatch(
+        e -> e.equals(checkNodeAttribute) && Objects
+            .equals(e.getAttributeValue(),
+                checkNodeAttribute.getAttributeValue()));
+  }

INS26 INS40 INS23 INS31 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS39 INS42 INS44 INS43 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS42 INS32 INS43 INS42 INS42 INS25 INS21 INS60 INS25 INS65 INS65 INS74 INS42 INS74 INS42 INS25 INS41 INS74 INS42 INS43 INS42 INS41 INS42 INS42 INS45 INS42 INS27 INS8 INS7 INS39 INS59 INS38 INS8 INS66 INS66 INS43 INS43 INS43 INS43 INS27 INS8 INS25 INS32 INS43 INS43 INS42 INS32 INS27 INS27 INS53 INS42 INS32 INS42 INS32 INS42 INS53 INS42 INS42 INS42 INS42 INS27 INS27 INS41 INS27 INS8 INS32 INS42 INS86 INS42 INS42 INS32 INS42 INS86 INS27 INS32 INS32 INS42 INS14 INS42 INS42 INS32 INS42 INS14 INS42 INS33 INS42 INS33 INS9 INS27 INS27 INS41 INS42 INS42 INS59 INS32 INS42 INS42 INS59 INS27 INS42 INS33 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS43 INS27 INS21 INS27 INS27 INS32 INS32 INS9 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS45 INS42 INS45 INS42 INS45 INS45 INS45 INS42 INS32 INS42 INS33 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 UPD42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42