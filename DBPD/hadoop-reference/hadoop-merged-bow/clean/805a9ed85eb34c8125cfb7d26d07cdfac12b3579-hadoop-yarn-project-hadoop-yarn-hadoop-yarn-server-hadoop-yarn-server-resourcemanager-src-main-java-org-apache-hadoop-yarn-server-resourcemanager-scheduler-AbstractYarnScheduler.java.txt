YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)

-   * @param rmContainer
+   * @param rmContainer rmContainer
-  protected void recoverResourceRequestForContainer(RMContainer rmContainer) {
+  private void recoverResourceRequestForContainer(RMContainer rmContainer) {
-    // Add resource request back to Scheduler.
-    SchedulerApplicationAttempt schedulerAttempt 
-        = getCurrentAttemptForContainer(rmContainer.getContainerId());
+
+    // Add resource request back to Scheduler ApplicationAttempt.
+
+    // We lookup the application-attempt here again using
+    // getCurrentApplicationAttempt() because there is only one app-attempt at
+    // any point in the scheduler. But in corner cases, AMs can crash,
+    // corresponding containers get killed and recovered to the same-attempt,
+    // but because the app-attempt is extinguished right after, the recovered
+    // requests don't serve any purpose, but that's okay.
+    SchedulerApplicationAttempt schedulerAttempt =
+        getCurrentAttemptForContainer(rmContainer.getContainerId());
-      schedulerAttempt.recoverResourceRequests(requests);
+      schedulerAttempt.recoverResourceRequestsForContainer(requests);
+  @VisibleForTesting
+  @Private
-  protected abstract void completedContainer(RMContainer rmContainer,
+  public void completedContainer(RMContainer rmContainer,
+      ContainerStatus containerStatus, RMContainerEventType event) {
+
+    if (rmContainer == null) {
+      LOG.info("Container " + containerStatus.getContainerId()
+          + " completed with event " + event
+          + ", but corresponding RMContainer doesn't exist.");
+      return;
+    }
+
+    completedContainerInternal(rmContainer, containerStatus, event);
+
+    // If the container is getting killed in ACQUIRED state, the requester (AM
+    // for regular containers and RM itself for AM container) will not know what
+    // happened. Simply add the ResourceRequest back again so that requester
+    // doesn't need to do anything conditionally.
+    recoverResourceRequestForContainer(rmContainer);
+  }
+
+  // clean up a completed container
+  protected abstract void completedContainerInternal(RMContainer rmContainer,

INS31 UPD83 INS78 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS8 UPD42 INS42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS25 INS21 INS21 INS66 INS42 INS42 INS42 INS27 INS8 INS32 INS32 INS42 INS33 INS21 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 INS42 INS42 INS27 INS45 INS32 INS45 INS42 INS45 INS42 INS42