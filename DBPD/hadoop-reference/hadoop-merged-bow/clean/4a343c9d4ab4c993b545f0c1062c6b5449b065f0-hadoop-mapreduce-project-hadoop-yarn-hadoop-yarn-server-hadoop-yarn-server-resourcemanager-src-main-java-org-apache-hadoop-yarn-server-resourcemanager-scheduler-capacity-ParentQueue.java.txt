MAPREDUCE-3641. Making CapacityScheduler more conservative so as to assign only one off-switch container in a single scheduling iteration. Contributed by Arun C Murthy.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1232182 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType;
-  public synchronized Resource assignContainers(
+  public synchronized CSAssignment assignContainers(
-    Resource assigned = Resources.createResource(0);
-
+    CSAssignment assignment = 
+        new CSAssignment(Resources.createResource(0), NodeType.NODE_LOCAL);
+    boolean assignedOffSwitch = false;
+    
-      Resource assignedToChild = 
+      CSAssignment assignedToChild = 
+      assignedOffSwitch = (assignedToChild.getType() == NodeType.OFF_SWITCH);
-      if (Resources.greaterThan(assignedToChild, Resources.none())) {
+      if (Resources.greaterThan(assignedToChild.getResource(), 
+              Resources.none())) {
-        allocateResource(clusterResource, assignedToChild);
+        allocateResource(clusterResource, assignedToChild.getResource());
-        Resources.addTo(assigned, assignedToChild);
+        Resources.addTo(assignment.getResource(), assignedToChild.getResource());
-          + " assignedSoFarInThisIteration=" + assigned
+          + " assignedSoFarInThisIteration=" + assignment.getResource()
-      if (!rootQueue) {
+      // or if we've already assigned an off-switch container
+      if (rootQueue) {
+        if (assignedOffSwitch) {
+          if (LOG.isDebugEnabled()) {
+            LOG.debug("Not assigning more than one off-switch container," +
+            		" assignments so far: " + assignment);
+          }
+          break;
+        }
+      } else {
-    return assigned;
+    return assignment;
-  synchronized Resource assignContainersToChildQueues(Resource cluster, 
+  synchronized CSAssignment assignContainersToChildQueues(Resource cluster, 
-    Resource assigned = Resources.createResource(0);
+    CSAssignment assignment = 
+        new CSAssignment(Resources.createResource(0), NodeType.NODE_LOCAL);
-      assigned = childQueue.assignContainers(cluster, node);
+      assignment = childQueue.assignContainers(cluster, node);
-        LOG.debug("Assignedto queue: " + childQueue.getQueuePath()
-          + " stats: " + childQueue + " --> " + assigned.getMemory());
+        LOG.debug("Assigned to queue: " + childQueue.getQueuePath() +
+          " stats: " + childQueue + " --> " + 
+          assignment.getResource().getMemory() + ", " + assignment.getType());
-      if (Resources.greaterThan(assigned, Resources.none())) {
+      if (Resources.greaterThan(assignment.getResource(), Resources.none())) {
-        printChildQueues();
+        if (LOG.isDebugEnabled()) {
+          printChildQueues();
+        }
-    return assigned;
+    return assignment;

INS26 INS40 UPD43 UPD43 UPD42 INS60 UPD42 UPD43 INS39 INS59 UPD42 UPD43 UPD42 UPD42 UPD42 INS14 INS42 INS9 INS21 UPD42 UPD42 INS14 INS43 MOV32 INS40 UPD43 INS7 INS42 INS8 INS43 MOV32 INS40 INS42 UPD42 INS42 INS36 INS32 INS25 INS42 UPD42 INS32 INS25 INS27 MOV42 INS42 INS42 INS8 UPD42 MOV42 INS42 INS32 INS8 INS32 INS40 INS32 INS32 INS32 INS25 INS10 INS42 INS42 MOV21 INS42 INS42 MOV42 INS42 UPD42 MOV42 INS42 MOV42 INS42 INS32 INS32 INS8 UPD45 INS45 INS32 INS42 INS42 INS42 INS42 INS21 INS32 INS42 INS42 INS32 UPD42 MOV42 INS42 INS42 INS42 INS27 INS45 INS45 INS42 DEL42 DEL42 DEL38