Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1196458 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.IOException;
-import java.text.NumberFormat;
-import org.apache.hadoop.yarn.api.records.FinalApplicationStatus;
+import org.apache.hadoop.yarn.api.records.NodeId;
-import org.apache.hadoop.yarn.api.records.YarnApplicationState;
-  // TODO: Why thread local?
-  // ^ NumberFormat instances are not threadsafe
-  private static final ThreadLocal<NumberFormat> appIdFormat =
-    new ThreadLocal<NumberFormat>() {
-      @Override
-      public NumberFormat initialValue() {
-        NumberFormat fmt = NumberFormat.getInstance();
-        fmt.setGroupingUsed(false);
-        fmt.setMinimumIntegerDigits(4);
-        return fmt;
-      }
-    };
-
-  
-
-    StringBuilder sb = new StringBuilder();
-    sb.append(APPLICATION_PREFIX + "_").append(appId.getClusterTimestamp())
-        .append("_");
-    sb.append(appIdFormat.get().format(appId.getId()));
-    return sb.toString();
+    return appId.toString();
+  private static ApplicationId toApplicationId(
+      Iterator<String> it) throws NumberFormatException {
+    ApplicationId appId = Records.newRecord(ApplicationId.class);
+    appId.setClusterTimestamp(Long.parseLong(it.next()));
+    appId.setId(Integer.parseInt(it.next()));
+    return appId;
+  }
+
-  public static ContainerId toContainerId(String containerIdStr)
-      throws IOException {
+  public static NodeId toNodeId(String nodeIdStr) {
+    String[] parts = nodeIdStr.split(":");
+    if (parts.length != 2) {
+      throw new IllegalArgumentException("Invalid NodeId [" + nodeIdStr
+          + "]. Expected host:port");
+    }
+    try {
+      NodeId nodeId =
+          BuilderUtils.newNodeId(parts[0], Integer.parseInt(parts[1]));
+      return nodeId;
+    } catch (NumberFormatException e) {
+      throw new IllegalArgumentException("Invalid port: " + parts[1], e);
+    }
+  }
+
+  public static ContainerId toContainerId(String containerIdStr) {
-      throw new IOException("Invalid ContainerId prefix: " + containerIdStr);
+      throw new IllegalArgumentException("Invalid ContainerId prefix: "
+          + containerIdStr);
-      throw new IOException("Invalid ContainerId: " + containerIdStr, n);
+      throw new IllegalArgumentException("Invalid ContainerId: "
+          + containerIdStr, n);
-      String applicationAttmeptIdStr) throws IOException {
+      String applicationAttmeptIdStr) {
-      throw new IOException("Invalid AppAttemptId prefix: "
+      throw new IllegalArgumentException("Invalid AppAttemptId prefix: "
-      throw new IOException("Invalid AppAttemptId: "
+      throw new IllegalArgumentException("Invalid AppAttemptId: "
+  public static ApplicationId toApplicationId(
+      String appIdStr) {
+    Iterator<String> it = _split(appIdStr).iterator();
+    if (!it.next().equals(APPLICATION_PREFIX)) {
+      throw new IllegalArgumentException("Invalid ApplicationId prefix: "
+          + appIdStr);
+    }
+    try {
+      return toApplicationId(it);
+    } catch (NumberFormatException n) {
+      throw new IllegalArgumentException("Invalid AppAttemptId: "
+          + appIdStr, n);
+    }
+  }

MOV26 UPD40 INS31 INS31 INS31 INS31 INS83 INS83 MOV43 INS42 MOV44 INS8 INS83 INS83 INS43 INS42 INS44 UPD43 MOV43 MOV8 MOV83 MOV83 INS43 UPD42 MOV42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS41 UPD42 MOV42 INS74 INS42 UPD42 INS42 INS43 INS42 INS60 INS25 INS54 INS42 INS43 INS42 INS60 INS25 INS54 INS32 UPD43 MOV43 UPD43 MOV43 UPD43 INS32 UPD42 UPD42 MOV42 INS5 INS59 INS27 INS8 INS8 INS12 INS42 INS74 INS59 INS38 INS8 INS8 INS12 INS42 INS42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS32 UPD42 INS42 INS32 INS43 INS85 INS42 INS32 INS40 INS34 INS53 INS60 INS41 INS44 INS8 INS43 INS43 INS42 INS32 INS32 INS53 MOV41 INS44 INS8 UPD42 UPD42 INS57 INS42 INS42 INS32 UPD42 MOV42 INS42 INS32 UPD42 MOV42 INS42 UPD42 MOV42 INS45 INS14 INS43 INS59 INS42 INS43 INS42 INS53 INS42 INS42 MOV32 UPD42 MOV42 MOV32 INS42 INS42 INS14 INS43 INS42 INS53 INS43 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS43 INS27 INS42 INS42 INS32 INS42 INS14 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 INS43 INS27 UPD42 UPD42 INS42 INS14 INS42 INS42 INS45 UPD42 MOV42 UPD45 MOV45 INS42 UPD42 MOV42 INS2 INS32 INS43 INS27 INS42 UPD42 UPD43 UPD42 UPD43 INS42 INS45 INS42 INS43 INS27 INS42 INS42 INS34 INS42 INS42 INS2 INS42 INS45 INS2 UPD42 UPD42 INS42 INS45 INS42 INS42 INS34 INS42 INS34 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL83 DEL43 DEL42 DEL43 DEL74 DEL42 DEL74 DEL42 DEL78 DEL83 DEL42 DEL31 DEL1 DEL14 DEL59 DEL23 DEL43 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL27 DEL32 DEL42 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL31 DEL9 DEL32 DEL34 DEL42 DEL43 DEL42 DEL43