commit correct version of HDFS-5121

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1520090 13f79535-47bb-0310-9956-ffa450edef68

-import javax.annotation.Nonnull;
-
+import org.apache.commons.lang.builder.EqualsBuilder;
+import org.apache.commons.lang.builder.HashCodeBuilder;
+import org.apache.hadoop.fs.permission.FsPermission;
+import org.apache.hadoop.hdfs.protocol.CachePoolInfo.Builder;
- * The NameNode uses CachePools to manage cache resources on the DataNodes.
+ * A CachePool describes a set of cache resources being managed by the NameNode.
+ * User caching requests are billed to the cache pool specified in the request.
+ *
+ * CachePools are uniquely identified by a numeric id as well as the
+ * {@link CachePoolInfo} pool name. Mutable metadata is contained in
+ * CachePoolInfo, including pool name, owner, group, and permissions.
+ * See this class for more details.
-  @Nonnull
-  private final String poolName;
+  private final long id;
-  @Nonnull
-  private String ownerName;
+  private CachePoolInfo info;
-  @Nonnull
-  private String groupName;
-  
-  private int mode;
-  
-  private int weight;
-  
-  public static String getCurrentUserPrimaryGroupName() throws IOException {
-    UserGroupInformation ugi= NameNode.getRemoteUser();
-    String[] groups = ugi.getGroupNames();
-    if (groups.length == 0) {
-      throw new IOException("failed to get group names from UGI " + ugi);
+  public CachePool(long id) {
+    this.id = id;
+    this.info = null;
+  }
+
+  CachePool(long id, String poolName, String ownerName, String groupName,
+      FsPermission mode, Integer weight) throws IOException {
+    this.id = id;
+    // Set CachePoolInfo default fields if null
+    if (poolName == null || poolName.isEmpty()) {
+      throw new IOException("invalid empty cache pool name");
-    return groups[0];
-  }
-  
-  public CachePool(String poolName, String ownerName, String groupName,
-      Integer mode, Integer weight) throws IOException {
-    this.poolName = poolName;
-    this.ownerName = ownerName != null ? ownerName :
-      NameNode.getRemoteUser().getShortUserName();
-    this.groupName = groupName != null ? groupName :
-      getCurrentUserPrimaryGroupName();
-    this.mode = mode != null ? mode : 0644;
-    this.weight = weight != null ? weight : 100;
+    UserGroupInformation ugi = null;
+    if (ownerName == null) {
+      ugi = NameNode.getRemoteUser();
+      ownerName = ugi.getShortUserName();
+    }
+    if (groupName == null) {
+      if (ugi == null) {
+        ugi = NameNode.getRemoteUser();
+      }
+      String[] groups = ugi.getGroupNames();
+      if (groups.length == 0) {
+        throw new IOException("failed to get group names from UGI " + ugi);
+      }
+      groupName = groups[0];
+    }
+    if (mode == null) {
+      mode = FsPermission.getDirDefault();
+    }
+    if (weight == null) {
+      weight = 100;
+    }
+    CachePoolInfo.Builder builder = CachePoolInfo.newBuilder();
+    builder.setPoolName(poolName).setOwnerName(ownerName)
+        .setGroupName(groupName).setMode(mode).setWeight(weight);
+    this.info = builder.build();
-  public String getName() {
-    return poolName;
+  public CachePool(long id, CachePoolInfo info) {
+    this.id = id;
+    this.info = info;
-  public String getOwnerName() {
-    return ownerName;
+  /**
+   * @return id of the pool
+   */
+  public long getId() {
+    return id;
-  public CachePool setOwnerName(String ownerName) {
-    this.ownerName = ownerName;
-    return this;
-  }
-
-  public String getGroupName() {
-    return groupName;
-  }
-
-  public CachePool setGroupName(String groupName) {
-    this.groupName = groupName;
-    return this;
-  }
-
-  public int getMode() {
-    return mode;
-  }
-
-  public CachePool setMode(int mode) {
-    this.mode = mode;
-    return this;
-  }
-  
-  public int getWeight() {
-    return weight;
-  }
-
-  public CachePool setWeight(int weight) {
-    this.weight = weight;
-    return this;
-  }
-  
-   * @param fullInfo
-   *          If true, only the name will be returned (i.e., what you 
-   *          would get if you didn't have read permission for this pool.)
-  public CachePoolInfo getInfo(boolean fullInfo) {
-    CachePoolInfo info = new CachePoolInfo(poolName);
-    if (!fullInfo) {
-      return info;
-    }
-    return info.setOwnerName(ownerName).
-        setGroupName(groupName).
-        setMode(mode).
-        setWeight(weight);
+  public CachePoolInfo getInfo() {
+    return info;
-  public CachePoolInfo getInfo(FSPermissionChecker pc) {
-    return getInfo(pc.checkReadPermission(ownerName, groupName, mode));
+  void setInfo(CachePoolInfo info) {
+    this.info = info;
-        append("{ ").append("poolName:").append(poolName).
-        append(", ownerName:").append(ownerName).
-        append(", groupName:").append(groupName).
-        append(", mode:").append(String.format("%3o", mode)).
-        append(", weight:").append(weight).
+        append("{ ").append("id:").append(id).
+        append(", info:").append(info.toString()).
+
+  @Override
+  public int hashCode() {
+    return new HashCodeBuilder().append(id).append(info).hashCode();
+  }
+
+  @Override
+  public boolean equals(Object obj) {
+    if (obj == null) { return false; }
+    if (obj == this) { return true; }
+    if (obj.getClass() != getClass()) {
+      return false;
+    }
+    CachePool rhs = (CachePool)obj;
+    return new EqualsBuilder()
+      .append(id, rhs.id)
+      .append(info, rhs.info)
+      .isEquals();
+  }

MOV26 INS26 INS26 INS26 MOV31 INS40 INS40 UPD40 INS40 INS31 INS31 INS31 INS31 INS39 MOV43 INS83 INS42 INS44 INS8 MOV42 INS44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV43 INS8 UPD42 INS44 INS29 UPD39 UPD42 MOV29 MOV83 MOV43 INS42 MOV8 INS39 UPD42 MOV42 MOV44 MOV8 INS78 INS39 INS42 INS78 INS39 UPD42 UPD66 INS66 INS66 INS65 INS66 INS66 INS66 UPD42 UPD42 INS39 INS42 INS21 INS21 INS39 INS42 UPD43 MOV21 INS25 INS60 INS25 INS25 INS25 INS25 INS60 INS21 MOV21 UPD39 UPD42 MOV43 INS42 INS21 INS65 MOV43 UPD42 INS42 INS42 UPD43 UPD42 INS25 INS25 INS25 INS60 INS42 INS7 INS7 UPD42 INS27 INS8 MOV43 INS59 INS27 INS8 INS27 MOV8 INS27 INS8 INS27 INS8 INS43 INS59 INS32 INS7 INS66 UPD42 MOV32 INS32 UPD42 INS27 INS8 INS27 INS8 INS27 INS8 MOV43 INS59 INS22 INS42 INS22 INS33 UPD42 INS27 INS32 INS53 INS42 INS33 MOV42 MOV33 INS21 INS21 INS42 INS33 INS25 INS21 UPD42 MOV42 MOV33 MOV21 MOV42 MOV33 INS21 INS40 INS42 INS32 INS32 INS42 INS42 INS32 UPD42 INS22 INS42 UPD42 UPD42 MOV32 UPD42 MOV42 INS42 INS33 INS41 INS42 INS52 INS41 INS32 INS32 INS41 INS42 INS11 INS32 UPD42 MOV42 INS52 INS42 INS52 INS42 UPD42 INS42 INS33 INS42 INS42 INS14 INS7 INS7 INS27 INS8 INS7 INS7 INS42 INS42 INS32 INS42 INS42 UPD42 INS42 INS42 UPD42 INS52 INS42 UPD42 UPD45 UPD42 UPD42 INS9 INS9 INS42 INS42 INS42 INS9 MOV43 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS40 MOV43 INS45 INS42 MOV32 INS42 INS32 INS42 INS33 INS21 INS42 MOV2 INS42 INS32 INS42 INS34 INS32 INS42 INS42 INS32 INS14 UPD42 UPD42 INS14 UPD42 MOV42 UPD42 MOV42 INS40 UPD42 MOV42 MOV42 INS7 INS42 INS42 INS32 INS42 INS42 UPD45 UPD42 MOV42 INS42 INS43 INS43 INS42 MOV32 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 UPD45 DEL42 DEL78 DEL42 DEL43 DEL42 DEL78 DEL42 DEL43 DEL42 DEL59 DEL60 DEL41 DEL52 DEL42 DEL22 DEL42 DEL33 DEL27 DEL42 DEL34 DEL16 DEL42 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL59 DEL23 DEL83 DEL83 DEL42 DEL43 DEL42 DEL31 DEL83 DEL52 DEL42 DEL22 DEL27 DEL42 DEL32 DEL16 DEL7 DEL21 DEL52 DEL42 DEL22 DEL27 DEL42 DEL42 DEL32 DEL16 DEL7 DEL21 DEL52 DEL42 DEL22 DEL27 DEL42 DEL34 DEL16 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL41 DEL8 DEL31 DEL52 DEL41 DEL42 DEL66 DEL66 DEL65 DEL39 DEL52 DEL41 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL45 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL32 DEL31 DEL42 DEL39 DEL42 DEL44 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL38 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32