Merge r1609845 through r1619277 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-6584@1619293 13f79535-47bb-0310-9956-ffa450edef68

-    private StorageType storageType = StorageType.DEFAULT;
+    private StorageType[][] storageTypes = null;
-     * Default: StorageType.DEFAULT
+     * Set the same storage type configuration for each datanode.
+     * If storageTypes is uninitialized or passed null then
+     * StorageType.DEFAULT is used.
-    public Builder storageType(StorageType type) {
-      this.storageType = type;
+    public Builder storageTypes(StorageType[] types) {
+      assert types.length == DIRS_PER_DATANODE;
+      this.storageTypes = new StorageType[numDataNodes][types.length];
+      for (int i = 0; i < numDataNodes; ++i) {
+        this.storageTypes[i] = types;
+      }
+      return this;
+    }
+
+    /**
+     * Set custom storage type configuration for each datanode.
+     * If storageTypes is uninitialized or passed null then
+     * StorageType.DEFAULT is used.
+     */
+    public Builder storageTypes(StorageType[][] types) {
+      this.storageTypes = types;
-    
+    assert builder.storageTypes == null ||
+           builder.storageTypes.length == builder.numDataNodes;
-                       builder.storageType,
+                       builder.storageTypes,
-   * and have already set {@link #DFS_NAMENODE_NAME_DIR_KEY} and 
-   * {@link #DFS_DATANODE_DATA_DIR_KEY} in the given conf.
+   * and have already set {@link DFSConfigKeys#DFS_NAMENODE_NAME_DIR_KEY} and
+   * {@link DFSConfigKeys#DFS_DATANODE_DATA_DIR_KEY} in the given conf.
-   *          created and {@link #DFS_NAMENODE_NAME_DIR_KEY} and 
-   *          {@link #DFS_DATANODE_DATA_DIR_KEY} will be set in 
+   *          created and {@link DFSConfigKeys#DFS_NAMENODE_NAME_DIR_KEY} and
+   *          {@link DFSConfigKeys#DFS_DATANODE_DATA_DIR_KEY} will be set in
-   *          created and {@link #DFS_NAMENODE_NAME_DIR_KEY} and 
-   *          {@link #DFS_DATANODE_DATA_DIR_KEY} will be set in 
+   *          created and {@link DFSConfigKeys#DFS_NAMENODE_NAME_DIR_KEY} and
+   *          {@link DFSConfigKeys#DFS_DATANODE_DATA_DIR_KEY} will be set in
-   *          created and {@link #DFS_NAMENODE_NAME_DIR_KEY} and 
-   *          {@link #DFS_DATANODE_DATA_DIR_KEY} will be set in 
+   *          created and {@link DFSConfigKeys#DFS_NAMENODE_NAME_DIR_KEY} and
+   *          {@link DFSConfigKeys#DFS_DATANODE_DATA_DIR_KEY} will be set in
-   *          be created and {@link #DFS_DATANODE_DATA_DIR_KEY} 
+   *          be created and {@link DFSConfigKeys#DFS_DATANODE_DATA_DIR_KEY}
-    initMiniDFSCluster(conf, numDataNodes, StorageType.DEFAULT, format,
+    initMiniDFSCluster(conf, numDataNodes, null, format,
-      int numDataNodes, StorageType storageType, boolean format, boolean manageNameDfsDirs,
+      int numDataNodes, StorageType[][] storageTypes, boolean format, boolean manageNameDfsDirs,
-      startDataNodes(conf, numDataNodes, storageType, manageDataDfsDirs,
+      startDataNodes(conf, numDataNodes, storageTypes, manageDataDfsDirs,
-  String makeDataNodeDirs(int dnIndex, StorageType storageType) throws IOException {
+  String makeDataNodeDirs(int dnIndex, StorageType[] storageTypes) throws IOException {
+    assert storageTypes == null || storageTypes.length == DIRS_PER_DATANODE;
-      sb.append((j > 0 ? "," : "") + "[" + storageType + "]" + fileAsURI(dir));
+      sb.append((j > 0 ? "," : "") + "[" +
+          (storageTypes == null ? StorageType.DEFAULT : storageTypes[j]) +
+          "]" + fileAsURI(dir));
-   *          created and {@link #DFS_DATANODE_DATA_DIR_KEY} will be set 
+   *          created and {@link DFSConfigKeys#DFS_DATANODE_DATA_DIR_KEY} will be set
-   *          created and {@link #DFS_DATANODE_DATA_DIR_KEY} will be 
+   *          created and {@link DFSConfigKeys#DFS_DATANODE_DATA_DIR_KEY} will be
-    startDataNodes(conf, numDataNodes, StorageType.DEFAULT, manageDfsDirs, operation, racks, hosts,
+    startDataNodes(conf, numDataNodes, null, manageDfsDirs, operation, racks, hosts,
-  /**
-   * @see MiniDFSCluster#startDataNodes(Configuration, int, boolean, StartupOption,
-   * String[], String[], long[], boolean, boolean, boolean)
-   */
-    startDataNodes(conf, numDataNodes, StorageType.DEFAULT, manageDfsDirs, operation, racks, hosts,
+    startDataNodes(conf, numDataNodes, null, manageDfsDirs, operation, racks, hosts,
-   *          created and {@link #DFS_DATANODE_DATA_DIR_KEY} will be 
+   *          created and {@link DFSConfigKeys#DFS_DATANODE_DATA_DIR_KEY} will be
-      StorageType storageType, boolean manageDfsDirs, StartupOption operation,
+      StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation,
+    assert storageTypes == null || storageTypes.length == numDataNodes;
+
-        String dirs = makeDataNodeDirs(i, storageType);
+        String dirs = makeDataNodeDirs(i, storageTypes == null ? null : storageTypes[i]);
-   * Multiple-NameNode version of {@link #injectBlocks(Iterable[])}.
+   * Multiple-NameNode version of injectBlocks.

INS31 INS29 MOV29 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 INS5 UPD42 INS8 INS29 INS83 INS43 INS42 INS44 INS8 INS6 INS5 UPD42 INS5 UPD42 INS6 MOV65 MOV65 MOV65 INS65 MOV65 MOV65 MOV65 MOV65 MOV65 MOV65 MOV65 INS5 UPD42 INS6 MOV43 INS85 INS85 UPD42 INS33 INS5 UPD42 INS6 INS21 INS24 INS41 INS65 INS42 INS5 INS42 INS21 MOV41 INS27 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 MOV43 INS85 INS85 MOV43 INS85 INS27 INS42 INS66 INS66 INS65 INS66 INS66 UPD66 UPD66 UPD66 MOV43 INS85 INS85 INS27 UPD66 INS66 INS66 UPD66 MOV43 INS85 INS27 INS7 INS58 INS27 INS38 INS8 INS52 INS66 INS66 INS66 INS43 INS85 INS85 INS7 INS27 INS27 UPD40 INS33 INS27 INS27 INS67 INS33 INS33 INS27 INS27 INS40 INS42 INS22 INS3 INS39 INS59 INS42 INS42 INS42 MOV21 INS42 INS22 INS42 INS40 INS33 INS40 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS40 INS42 INS52 INS42 INS5 INS42 INS40 INS42 INS34 INS52 INS42 UPD42 INS43 INS85 INS85 INS2 UPD42 INS36 INS42 INS22 INS42 INS16 MOV52 UPD42 MOV42 INS27 INS40 INS2 INS16 UPD42 MOV42 INS33 INS42 INS42 INS27 INS33 INS2 INS42 INS33 INS42 INS42 DEL40 DEL22 DEL8 DEL66 DEL40 DEL42 DEL66 DEL66 DEL42 DEL67 DEL65 DEL66 DEL66 DEL65 DEL29 DEL40 DEL42 DEL42 DEL42 DEL43 DEL69 DEL39 DEL69 DEL39 DEL69 DEL42 DEL43 DEL69 DEL42 DEL43 DEL85 DEL5 DEL69 DEL42 DEL43 DEL85 DEL5 DEL69 DEL39 DEL85 DEL5 DEL69 DEL39 DEL69 DEL39 DEL69 DEL39 DEL69 DEL68 DEL65 DEL29 DEL40 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL69 DEL68 DEL65 DEL66