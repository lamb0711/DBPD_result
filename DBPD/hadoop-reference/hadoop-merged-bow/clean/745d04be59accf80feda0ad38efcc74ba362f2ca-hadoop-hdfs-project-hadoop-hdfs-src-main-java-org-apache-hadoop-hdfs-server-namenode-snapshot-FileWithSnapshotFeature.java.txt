HDFS-8823. Move replication factor into individual blocks. Contributed by Haohui Mai.

-  public short getMaxBlockRepInDiffs() {
+  public short getMaxBlockRepInDiffs(FileDiff excluded) {
-      if (d.snapshotINode != null) {
+      if (d != excluded && d.snapshotINode != null) {
-      bsp = reclaimContext.storagePolicySuite().getPolicy(file.getStoragePolicyID());
+      bsp = reclaimContext.storagePolicySuite().
+          getPolicy(file.getStoragePolicyID());
-
-    QuotaCounts oldCounts = file.storagespaceConsumed(null);
-    long oldStoragespace;
+    QuotaCounts oldCounts;
-      short replication = removed.snapshotINode.getFileReplication();
-      short currentRepl = file.getPreferredBlockReplication();
-      if (replication > currentRepl) {
-        long oldFileSizeNoRep = currentRepl == 0
-            ? file.computeFileSize(true, true)
-            : oldCounts.getStorageSpace() /
-            file.getPreferredBlockReplication();
-        oldStoragespace = oldFileSizeNoRep * replication;
-        oldCounts.setStorageSpace(oldStoragespace);
+      oldCounts = new QuotaCounts.Builder().build();
+      BlockInfo[] blocks = file.getBlocks() == null ? new
+          BlockInfo[0] : file.getBlocks();
+      for (BlockInfo b: blocks) {
+        short replication = b.getReplication();
+        long blockSize = b.isComplete() ? b.getNumBytes() : file
+            .getPreferredBlockSize();
+
+        oldCounts.addStorageSpace(blockSize * replication);
-              oldCounts.addTypeSpace(t, oldFileSizeNoRep);
+              oldCounts.addTypeSpace(t, blockSize);
+    } else {
+      oldCounts = file.storagespaceConsumed(null);
-
+    if (file.getBlocks() != null) {
+      short replInDiff = getMaxBlockRepInDiffs(removed);
+      short repl = (short) Math.max(file.getPreferredBlockReplication(),
+                                    replInDiff);
+      for (BlockInfo b : file.getBlocks()) {
+        if (repl != b.getReplication()) {
+          reclaimContext.collectedBlocks().addUpdateReplicationFactor(b, repl);
+        }
+      }
+    }

INS44 INS43 INS42 MOV25 INS25 INS42 MOV27 INS8 INS8 INS27 MOV8 INS21 INS60 INS70 MOV60 INS25 INS21 INS32 INS33 INS70 INS27 INS7 INS5 INS59 INS44 INS42 MOV8 INS27 INS8 INS7 INS42 INS42 INS44 INS32 INS8 INS27 MOV27 INS42 INS32 INS43 INS85 INS42 INS16 INS43 INS42 INS60 INS42 INS42 MOV33 INS21 INS42 MOV32 UPD42 UPD42 INS11 INS43 INS42 UPD42 MOV42 UPD42 MOV42 MOV25 INS42 INS42 INS14 INS42 INS42 INS27 INS3 INS32 INS42 INS39 INS59 INS32 INS42 INS32 UPD42 INS42 INS39 INS32 UPD42 MOV42 INS43 INS32 INS33 INS5 INS34 INS42 INS42 INS42 INS32 UPD42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 MOV32 UPD42 MOV42 UPD42 INS32 INS40 INS42 INS42 INS43 INS85 INS42 INS42 INS32 INS32 UPD42 MOV42 MOV42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 DEL42 DEL34 DEL27 DEL9 DEL9 DEL32 DEL27 DEL42 DEL27 DEL7 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL27 DEL39 DEL42 DEL59 DEL60 DEL25 DEL40 DEL32