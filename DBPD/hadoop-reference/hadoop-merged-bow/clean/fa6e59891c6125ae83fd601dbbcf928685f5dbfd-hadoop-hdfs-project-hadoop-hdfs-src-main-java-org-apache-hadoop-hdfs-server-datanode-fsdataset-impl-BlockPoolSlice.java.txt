HDFS-5498. Improve datanode startup time. Contributed by Kihwal Lee.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1571797 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.FileWriter;
+import org.apache.hadoop.util.ShutdownHookManager;
+  private static String DU_CACHE_FILE = "dfsUsed";
+  private volatile boolean dfsUsedSaved = false;
+  private static final int SHUTDOWN_HOOK_PRIORITY = 30;
-    this.dfsUsage = new DU(bpDir, conf);
+    // Use cached value initially if available. Or the following call will
+    // block until the initial du command completes.
+    this.dfsUsage = new DU(bpDir, conf, loadDfsUsed());
+
+    // Make the dfs usage to be saved during shutdown.
+    ShutdownHookManager.get().addShutdownHook(
+      new Runnable() {
+        @Override
+        public void run() {
+          if (!dfsUsedSaved) {
+            saveDfsUsed();
+          }
+        }
+      }, SHUTDOWN_HOOK_PRIORITY);
+   /**
+   * Read in the cached DU value and return it if it is less than 600 seconds
+   * old (DU update interval). Slight imprecision of dfsUsed is not critical
+   * and skipping DU can significantly shorten the startup time.
+   * If the cached value is not available or too old, -1 is returned.
+   */
+  long loadDfsUsed() {
+    long cachedDfsUsed;
+    long mtime;
+    Scanner sc;
+
+    try {
+      sc = new Scanner(new File(currentDir, DU_CACHE_FILE));
+    } catch (FileNotFoundException fnfe) {
+      return -1;
+    }
+
+    try {
+      // Get the recorded dfsUsed from the file.
+      if (sc.hasNextLong()) {
+        cachedDfsUsed = sc.nextLong();
+      } else {
+        return -1;
+      }
+      // Get the recorded mtime from the file.
+      if (sc.hasNextLong()) {
+        mtime = sc.nextLong();
+      } else {
+        return -1;
+      }
+
+      // Return the cached value if mtime is okay.
+      if (mtime > 0 && (Time.now() - mtime < 600000L)) {
+        FsDatasetImpl.LOG.info("Cached dfsUsed found for " + currentDir + ": " +
+            cachedDfsUsed);
+        return cachedDfsUsed;
+      }
+      return -1;
+    } finally {
+      sc.close();
+    }
+  }
+
+  /**
+   * Write the current dfsUsed to the cache file.
+   */
+  void saveDfsUsed() {
+    File outFile = new File(currentDir, DU_CACHE_FILE);
+    if (outFile.exists()) {
+      outFile.delete();
+    }
+
+    try {
+      long used = getDfsUsed();
+      if (used > 0) {
+        FileWriter out = new FileWriter(outFile);
+        // mtime is written last, so that truncated writes won't be valid.
+        out.write(Long.toString(used) + " " + Long.toString(Time.now()));
+        out.flush();
+        out.close();
+      }
+    } catch (IOException ioe) {
+      // If write failed, the volume might be bad. Since the cache file is
+      // not critical, log the error and continue.
+      FsDatasetImpl.LOG.warn("Failed to write dfsUsed to " + outFile, ioe);
+    }
+  }
+
+          sc.close();
+    saveDfsUsed();
+    dfsUsedSaved = true;

INS26 INS26 INS40 INS40 INS23 INS23 INS23 INS31 INS31 INS83 INS83 INS43 INS59 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 INS29 INS39 INS42 INS8 INS29 INS39 INS42 INS8 INS42 INS42 INS45 INS42 INS9 INS42 INS34 INS21 INS65 INS60 INS60 INS60 INS54 INS54 INS65 INS60 INS25 INS54 INS21 INS21 INS32 INS66 INS66 INS66 INS66 INS39 INS59 INS39 INS59 INS43 INS59 INS8 INS12 INS8 INS8 INS66 INS43 INS59 INS32 INS8 INS8 INS12 INS32 INS7 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS21 INS44 INS8 INS25 INS25 INS25 INS41 INS21 INS42 INS42 INS14 INS42 INS42 INS21 INS60 INS25 INS44 INS8 INS42 INS42 INS9 INS32 INS42 INS42 INS43 INS1 INS7 INS43 INS42 INS41 INS32 INS8 INS8 INS32 INS8 INS8 INS27 INS8 INS38 INS32 INS43 INS42 INS42 INS32 INS39 INS59 INS27 INS8 INS43 INS42 INS21 INS42 INS42 INS31 INS42 INS14 INS42 INS38 INS42 INS42 INS21 INS41 INS42 INS42 INS21 INS41 INS27 INS36 INS21 INS41 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS34 INS60 INS21 INS21 INS21 INS42 INS32 INS78 INS83 INS39 INS42 INS8 INS43 INS14 INS34 INS7 INS38 INS7 INS38 INS42 INS34 INS27 INS32 INS42 INS42 INS43 INS59 INS32 INS32 INS32 INS40 INS42 INS27 INS42 INS42 INS25 INS42 INS43 INS42 INS42 INS42 INS32 INS34 INS42 INS32 INS34 INS27 INS34 INS40 INS42 INS27 INS42 INS42 INS14 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS45 INS42 INS21 INS38 INS8 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS45 INS42 INS45 INS42 INS43 INS42 INS32 INS45 INS32 INS32 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42