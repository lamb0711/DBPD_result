HADOOP-17079. Optimize UGI#getGroups by adding UGI#getGroupsSet. (#2085)


-import java.util.Arrays;
-    private final Map<String, List<String>> userToGroupsMapping = 
-      new HashMap<String,List<String>>();
+    private final Map<String, Set<String>> userToGroupsMapping =
+        new HashMap<>();
-      List<String> result = userToGroupsMapping.get(user);
-      
-      if (result == null) {
-        result = underlyingImplementation.getGroups(user);
-      }
+      return new ArrayList<>(getGroupsSet(user));
+    }
+    @Override
+    public Set<String> getGroupsSet(String user) throws IOException {
+      Set<String> result = userToGroupsMapping.get(user);
+      if (result == null) {
+        result = underlyingImplementation.getGroupsSet(user);
+      }
-      userToGroupsMapping.put(user, Arrays.asList(groups));
+      Set<String> groupsSet = new LinkedHashSet<>();
+      Collections.addAll(groupsSet, groups);
+      userToGroupsMapping.put(user, groupsSet);
-    List<String> groups = getGroups();
-    if (groups.isEmpty()) {
+    Set<String> groupsSet = getGroupsSet();
+    if (groupsSet.isEmpty()) {
-    return groups.get(0);
+    return groupsSet.iterator().next();
-   * Get the group names for this user. {@link #getGroups()} is less
+   * Get the group names for this user. {@link #getGroupsSet()} is less
-    List<String> groups = getGroups();
-    return groups.toArray(new String[groups.size()]);
+    Collection<String> groupsSet = getGroupsSet();
+    return groupsSet.toArray(new String[groupsSet.size()]);
-   * Get the group names for this user.
+   * Get the group names for this user. {@link #getGroupsSet()} is less
+   * expensive alternative when checking for a contained element.
+   * @deprecated Use {@link #getGroupsSet()} instead.
+  @Deprecated
+   * Get the groups names for the user as a Set.
+   * @return the set of users with the primary group first. If the command
+   *     fails, it returns an empty set.
+   */
+  public Set<String> getGroupsSet() {
+    ensureInitialized();
+    try {
+      return groups.getGroupsSet(getShortUserName());
+    } catch (IOException ie) {
+      LOG.debug("Failed to get groups for user {}", getShortUserName(), ie);
+      return Collections.emptySet();
+    }
+  }
+
+  /**

INS31 INS23 INS31 INS78 INS29 INS83 INS74 INS42 INS8 MOV83 MOV83 UPD74 MOV74 INS59 INS78 INS83 MOV74 INS42 INS44 INS43 INS8 INS74 UPD42 INS65 MOV65 UPD65 INS42 INS65 INS65 INS43 INS43 INS21 INS54 UPD74 MOV42 INS14 INS42 INS43 INS42 INS42 INS41 INS43 INS43 INS60 INS21 UPD74 INS66 INS66 UPD74 UPD66 INS65 INS66 INS66 UPD66 INS65 UPD66 INS66 INS66 INS66 INS42 INS42 INS32 INS8 INS12 UPD43 MOV43 INS74 INS42 INS14 INS42 INS42 UPD74 INS74 INS59 INS32 UPD43 UPD42 UPD42 INS32 UPD42 UPD43 UPD42 UPD42 INS68 INS68 INS42 INS41 INS44 INS8 UPD42 MOV43 INS74 INS32 UPD43 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 UPD42 UPD42 MOV42 INS42 UPD42 UPD42 UPD42 INS42 INS42 INS32 INS43 INS42 INS21 INS41 UPD43 MOV43 INS42 INS42 UPD42 INS42 INS42 INS74 UPD42 INS42 INS42 INS32 INS42 INS32 INS32 UPD42 INS43 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS42 UPD42 INS42 INS42 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL14 DEL59 DEL23 DEL42 DEL42 DEL32 DEL34