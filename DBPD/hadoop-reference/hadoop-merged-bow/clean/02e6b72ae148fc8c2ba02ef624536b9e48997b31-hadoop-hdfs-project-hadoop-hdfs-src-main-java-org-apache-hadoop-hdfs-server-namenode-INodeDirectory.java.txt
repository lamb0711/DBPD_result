HDFS-4481. Change fsimage to support snapshot file diffs.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1446000 13f79535-47bb-0310-9956-ffa450edef68

-  final static String ROOT_NAME = "";
+  final static byte[] ROOT_NAME = DFSUtil.string2Bytes("");
-  public INodeDirectory(long id, String name, PermissionStatus permissions) {
-    super(id, name, permissions);
-  }
-
-  public INodeDirectory(long id, PermissionStatus permissions, long mTime) {
-    super(id, permissions, mTime, 0);
-  }
-  
-  INodeDirectory(long id, byte[] name, PermissionStatus permissions, long mtime) {
-    super(id, name, permissions, null, mtime, 0L);
+  public INodeDirectory(long id, byte[] name, PermissionStatus permissions,
+      long mtime) {
+    super(id, name, permissions, mtime, 0L);
-  INode removeChild(INode node) {
-    assertChildrenNonNull();
-    final int i = searchChildren(node.getLocalNameBytes());
-    return i >= 0? children.remove(i): null;
-  }
-
-    if (latest != null) {
-      return recordModification(latest).removeChild(child, latest);
+    if (isInLatestSnapshot(latest)) {
+      return replaceSelf4INodeDirectoryWithSnapshot()
+          .removeChild(child, latest);
-    return parent.replaceChild(newDir);
+    parent.replaceChild(this, newDir);
+    return newDir;
-  final <N extends INode> N replaceChild(final N newChild) {
+  public void replaceChild(final INode oldChild, final INode newChild) {
-    final INode oldChild = children.set(i, newChild);
+    final INode removed = children.set(i, newChild);
+    Preconditions.checkState(removed == oldChild);
-    return newChild;
-    return replaceChild(new INodeFileWithSnapshot(child));
+    final INodeFileWithSnapshot newChild = new INodeFileWithSnapshot(child);
+    replaceChild(child, newChild);
+    return newChild;
-    return replaceChild(new INodeFileUnderConstructionWithSnapshot(child));
+    final INodeFileUnderConstructionWithSnapshot newChild
+        = new INodeFileUnderConstructionWithSnapshot(child, null);
+    replaceChild(child, newChild);
+    return newChild;
-    return latest == null? this
-        : replaceSelf4INodeDirectoryWithSnapshot().recordModification(latest);
+    return isInLatestSnapshot(latest)?
+        replaceSelf4INodeDirectoryWithSnapshot().recordModification(latest)
+        : this;
-  public boolean addChild(final INode node, final boolean setModTime,
+  public boolean addChild(INode node, final boolean setModTime,
-    if (latest != null) {
-      return recordModification(latest).addChild(node, setModTime, latest);
+    if (isInLatestSnapshot(latest)) {
+      return replaceSelf4INodeDirectoryWithSnapshot()
+          .addChild(node, setModTime, latest);
-      node.setGroup(getGroupName(), latest);
+      node.setGroup(getGroupName(), null);
+    void setLastINode(INode last) {
+      inodes[inodes.length - 1] = last;
+    }
+    

INS23 MOV83 MOV83 INS5 INS59 INS83 INS83 INS39 INS42 INS44 MOV44 INS31 INS39 INS85 UPD42 MOV42 INS32 INS21 INS41 INS83 MOV43 INS42 MOV43 INS21 INS60 INS21 MOV41 INS60 INS21 INS41 INS39 INS42 INS44 INS8 UPD42 MOV42 UPD42 MOV42 INS45 INS32 INS32 INS42 INS32 INS83 INS43 INS59 INS32 INS83 INS43 INS59 INS32 INS42 MOV52 INS32 MOV43 INS42 INS21 INS42 INS42 MOV42 MOV42 INS52 MOV42 UPD42 INS42 INS42 INS27 INS42 INS42 MOV14 MOV42 INS42 INS42 INS42 INS42 MOV14 MOV42 INS42 INS42 INS32 INS42 INS42 INS7 INS42 INS42 INS33 INS42 INS42 INS2 INS42 INS33 INS42 INS27 UPD42 UPD42 INS40 INS34 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL42 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL46 DEL8 DEL31 DEL83 DEL42 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL42 DEL42 DEL34 DEL46 DEL8 DEL31 DEL33 DEL42 DEL42 DEL32 DEL21 DEL83 DEL39 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL34 DEL27 DEL42 DEL42 DEL42 DEL32 DEL33 DEL16 DEL41 DEL8 DEL31 DEL42 DEL33 DEL27 DEL42 DEL32 DEL41 DEL83 DEL42 DEL73 DEL43 DEL42 DEL42 DEL43 DEL32 DEL41 DEL32 DEL41 DEL42 DEL33 DEL27 DEL83 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL42