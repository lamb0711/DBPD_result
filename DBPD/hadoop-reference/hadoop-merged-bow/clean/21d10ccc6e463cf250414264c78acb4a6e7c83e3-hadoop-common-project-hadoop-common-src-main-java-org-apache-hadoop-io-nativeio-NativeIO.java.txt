HADOOP-7824. NativeIO.java flags and identifiers must be set correctly for each platform, not hardcoded to their Linux values (Martin Walsh via Colin P. McCabe)

-    // Flags for open() call from bits/fcntl.h
-    public static final int O_RDONLY   =    00;
-    public static final int O_WRONLY   =    01;
-    public static final int O_RDWR     =    02;
-    public static final int O_CREAT    =  0100;
-    public static final int O_EXCL     =  0200;
-    public static final int O_NOCTTY   =  0400;
-    public static final int O_TRUNC    = 01000;
-    public static final int O_APPEND   = 02000;
-    public static final int O_NONBLOCK = 04000;
-    public static final int O_SYNC   =  010000;
+    // Flags for open() call from bits/fcntl.h - Set by JNI
+    public static int O_RDONLY = -1;
+    public static int O_WRONLY = -1;
+    public static int O_RDWR = -1;
+    public static int O_CREAT = -1;
+    public static int O_EXCL = -1;
+    public static int O_NOCTTY = -1;
+    public static int O_TRUNC = -1;
+    public static int O_APPEND = -1;
+    public static int O_NONBLOCK = -1;
+    public static int O_SYNC = -1;
-    // Flags for posix_fadvise() from bits/fcntl.h
+    // Flags for posix_fadvise() from bits/fcntl.h - Set by JNI
-    public static final int POSIX_FADV_NORMAL = 0;
+    public static int POSIX_FADV_NORMAL = -1;
-    public static final int POSIX_FADV_RANDOM = 1;
+    public static int POSIX_FADV_RANDOM = -1;
-    public static final int POSIX_FADV_SEQUENTIAL = 2;
+    public static int POSIX_FADV_SEQUENTIAL = -1;
-    public static final int POSIX_FADV_WILLNEED = 3;
+    public static int POSIX_FADV_WILLNEED = -1;
-    public static final int POSIX_FADV_DONTNEED = 4;
+    public static int POSIX_FADV_DONTNEED = -1;
-    public static final int POSIX_FADV_NOREUSE = 5;
+    public static int POSIX_FADV_NOREUSE = -1;
+    // Updated by JNI when supported by glibc.  Leave defaults in case kernel
+    // supports sync_file_range, but glibc does not.
-    public static final int SYNC_FILE_RANGE_WAIT_BEFORE = 1;
+    public static int SYNC_FILE_RANGE_WAIT_BEFORE = 1;
-    public static final int SYNC_FILE_RANGE_WRITE = 2;
-
+    public static int SYNC_FILE_RANGE_WRITE = 2;
-    public static final int SYNC_FILE_RANGE_WAIT_AFTER = 4;
+    public static int SYNC_FILE_RANGE_WAIT_AFTER = 4;
+    // Set to true via JNI if possible
+    public static boolean fadvisePossible = false;
+
-    private static boolean fadvisePossible = true;
-        } catch (UnsupportedOperationException uoe) {
-          fadvisePossible = false;
-      // Mode constants
-      public static final int S_IFMT = 0170000;      /* type of file */
-      public static final int   S_IFIFO  = 0010000;  /* named pipe (fifo) */
-      public static final int   S_IFCHR  = 0020000;  /* character special */
-      public static final int   S_IFDIR  = 0040000;  /* directory */
-      public static final int   S_IFBLK  = 0060000;  /* block special */
-      public static final int   S_IFREG  = 0100000;  /* regular */
-      public static final int   S_IFLNK  = 0120000;  /* symbolic link */
-      public static final int   S_IFSOCK = 0140000;  /* socket */
-      public static final int S_ISUID = 0004000;  /* set user id on execution */
-      public static final int S_ISGID = 0002000;  /* set group id on execution */
-      public static final int S_ISVTX = 0001000;  /* save swapped text even after use */
-      public static final int S_IRUSR = 0000400;  /* read permission, owner */
-      public static final int S_IWUSR = 0000200;  /* write permission, owner */
-      public static final int S_IXUSR = 0000100;  /* execute/search permission, owner */
+      // Mode constants - Set by JNI
+      public static int S_IFMT = -1;    /* type of file */
+      public static int S_IFIFO  = -1;  /* named pipe (fifo) */
+      public static int S_IFCHR  = -1;  /* character special */
+      public static int S_IFDIR  = -1;  /* directory */
+      public static int S_IFBLK  = -1;  /* block special */
+      public static int S_IFREG  = -1;  /* regular */
+      public static int S_IFLNK  = -1;  /* symbolic link */
+      public static int S_IFSOCK = -1;  /* socket */
+      public static int S_ISUID = -1;  /* set user id on execution */
+      public static int S_ISGID = -1;  /* set group id on execution */
+      public static int S_ISVTX = -1;  /* save swapped text even after use */
+      public static int S_IRUSR = -1;  /* read permission, owner */
+      public static int S_IWUSR = -1;  /* write permission, owner */
+      public static int S_IXUSR = -1;  /* execute/search permission, owner */

MOV23 UPD83 INS38 INS38 INS38 INS38 INS38 INS38 INS38 INS38 INS38 INS38 INS38 INS38 INS38 INS38 INS38 INS38 UPD9 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS38 INS38 INS38 INS38 INS38 INS38 INS38 INS38 INS38 INS38 INS38 INS38 INS38 INS38 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL9 DEL7 DEL21 DEL8 DEL12 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34 DEL83 DEL34