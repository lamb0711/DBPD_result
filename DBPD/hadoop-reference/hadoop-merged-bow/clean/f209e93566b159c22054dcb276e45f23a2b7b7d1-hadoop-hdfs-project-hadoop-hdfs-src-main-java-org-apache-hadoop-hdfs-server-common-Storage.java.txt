HDFS-10638. Modifications to remove the assumption that StorageLocation is associated with java.io.File in Datanode. (Virajith Jalaparti via lei)

-      this(location.getFile(), null, false, location);
+      this(null, false, location);
-    public StorageDirectory(File dir, StorageDirType dirType,
+    /**
+     * Constructor
+     * @param dirType storage directory type
+     * @param isShared whether or not this dir is shared between two NNs. true
+     *          disables locking on the storage directory, false enables locking
+     * @param location the {@link StorageLocation} for this directory
+     */
+    public StorageDirectory(StorageDirType dirType, boolean isShared,
+        StorageLocation location) {
+      this(getStorageLocationFile(location), dirType, isShared, location);
+    }
+
+    /**
+     * Constructor
+     * @param bpid the block pool id
+     * @param dirType storage directory type
+     * @param isShared whether or not this dir is shared between two NNs. true
+     *          disables locking on the storage directory, false enables locking
+     * @param location the {@link StorageLocation} for this directory
+     */
+    public StorageDirectory(String bpid, StorageDirType dirType,
+        boolean isShared, StorageLocation location) {
+      this(new File(location.getBpURI(bpid, STORAGE_DIR_CURRENT)), dirType,
+          isShared, location);
+    }
+
+    private StorageDirectory(File dir, StorageDirType dirType,
-      assert location == null ||
+      assert location == null || dir == null ||
-              location.getFile().getAbsolutePath()):
+              new File(location.getUri()).getAbsolutePath()):
-    
+    private static File getStorageLocationFile(StorageLocation location) {
+      if (location == null) {
+        return null;
+      }
+      try {
+        return new File(location.getUri());
+      } catch (IllegalArgumentException e) {
+        //if location does not refer to a File
+        return null;
+      }
+    }
+
+   * Returns true if the storage directory on the given directory is already
+   * loaded.
+   * @param location the {@link StorageLocation}
+   * @throws IOException if failed to get canonical path.
+   */
+  protected boolean containsStorageDir(StorageLocation location)
+      throws IOException {
+    for (StorageDirectory sd : storageDirs) {
+      if (location.matchesStorageDirectory(sd)) {
+        return true;
+      }
+    }
+    return false;
+  }
+
+  /**
+   * Returns true if the storage directory on the given location is already
+   * loaded.
+   * @param location the {@link StorageLocation}
+   * @param bpid the block pool id
+   * @return true if the location matches to any existing storage directories
+   * @throws IOException IOException if failed to read location
+   * or storage directory path
+   */
+  protected boolean containsStorageDir(StorageLocation location, String bpid)
+      throws IOException {
+    for (StorageDirectory sd : storageDirs) {
+      if (location.matchesStorageDirectory(sd, bpid)) {
+        return true;
+      }
+    }
+    return false;
+  }
+
+  /**

MOV31 INS31 INS31 INS31 INS31 INS31 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS83 INS42 MOV44 INS8 INS29 INS83 INS42 INS44 INS44 INS44 INS8 INS29 INS44 INS44 INS44 INS44 UPD83 INS83 INS83 INS43 INS42 INS44 INS8 INS65 INS65 INS65 INS43 INS42 INS42 INS70 INS41 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS42 INS70 INS41 INS17 INS65 INS65 INS65 INS65 INS43 INS42 INS39 INS42 INS43 INS42 INS17 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS42 INS43 INS42 INS25 INS54 INS66 INS66 INS42 INS66 INS65 INS42 INS66 INS42 INS44 INS42 INS8 INS9 INS66 INS66 INS42 INS66 INS65 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS42 INS44 INS42 INS8 INS9 INS33 INS9 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS65 INS66 INS42 INS42 INS32 INS42 INS42 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS65 INS66 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS27 INS8 INS8 INS12 INS42 INS43 INS42 INS25 INS42 INS43 INS42 INS25 INS42 INS42 INS42 INS42 INS43 INS32 INS27 INS42 INS33 INS41 INS41 INS44 INS8 INS42 INS32 INS8 INS42 INS32 INS8 INS42 MOV42 UPD42 MOV42 INS42 INS42 MOV27 INS27 INS33 INS14 INS43 INS42 INS41 INS42 INS42 INS42 INS41 INS42 INS42 INS42 INS42 INS41 INS42 INS33 INS14 INS43 INS32 INS42 INS33 INS9 INS9 INS43 INS32 INS42 INS42 INS42 INS42 MOV42 UPD42 MOV42 DEL32 DEL33 DEL9 DEL32