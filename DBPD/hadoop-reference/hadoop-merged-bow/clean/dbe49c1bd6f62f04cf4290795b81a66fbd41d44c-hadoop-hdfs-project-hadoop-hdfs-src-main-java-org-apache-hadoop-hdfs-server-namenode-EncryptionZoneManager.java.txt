HDFS-9244. Support nested encryption zones.

Change-Id: I43a13035a8b27956e90967ee82058efb647c3415

+import java.io.FileNotFoundException;
-   * Must be called while holding the manager lock.
+   * Called while holding the FSDirectory lock.
+   * Looks up the nearest ancestor EncryptionZoneInt that contains the given
+   * path (excluding itself).
+   * Returns null if path is not within an EZ, or the path is the root dir '/'
+   * <p/>
+   * Called while holding the FSDirectory lock.
+   */
+  private EncryptionZoneInt getParentEncryptionZoneForPath(INodesInPath iip) {
+    assert dir.hasReadLock();
+    Preconditions.checkNotNull(iip);
+    INodesInPath parentIIP = iip.getParentINodesInPath();
+    return parentIIP == null ? null : getEncryptionZoneForPath(parentIIP);
+  }
+
+  /**
-   * destination because of differing encryption zones.
+   * destination because of differing parent encryption zones.
-    final EncryptionZoneInt srcEZI = getEncryptionZoneForPath(srcIIP);
-    final EncryptionZoneInt dstEZI = getEncryptionZoneForPath(dstIIP);
-    final boolean srcInEZ = (srcEZI != null);
-    final boolean dstInEZ = (dstEZI != null);
-    if (srcInEZ) {
-      if (!dstInEZ) {
-        if (srcEZI.getINodeId() == srcIIP.getLastINode().getId()) {
-          // src is ez root and dest is not in an ez. Allow the rename.
-          return;
-        }
-        throw new IOException(
-            src + " can't be moved from an encryption zone.");
-      }
-    } else {
-      if (dstInEZ) {
-        throw new IOException(
-            src + " can't be moved into an encryption zone.");
-      }
+    final EncryptionZoneInt srcParentEZI =
+        getParentEncryptionZoneForPath(srcIIP);
+    final EncryptionZoneInt dstParentEZI =
+        getParentEncryptionZoneForPath(dstIIP);
+    final boolean srcInEZ = (srcParentEZI != null);
+    final boolean dstInEZ = (dstParentEZI != null);
+    if (srcInEZ && !dstInEZ) {
+      throw new IOException(
+          src + " can't be moved from an encryption zone.");
+    } else if (dstInEZ && !srcInEZ) {
+      throw new IOException(
+          src + " can't be moved into an encryption zone.");
-      if (srcEZI != dstEZI) {
-        final String srcEZPath = getFullPathName(srcEZI);
-        final String dstEZPath = getFullPathName(dstEZI);
+      if (srcParentEZI != dstParentEZI) {
+        final String srcEZPath = getFullPathName(srcParentEZI);
+        final String dstEZPath = getFullPathName(dstParentEZI);
+
+    // Check if src is a valid path for new EZ creation
+    if (srcIIP == null || srcIIP.getLastINode() == null) {
+      throw new FileNotFoundException("cannot find " + src);
+    }
-    if (srcIIP != null &&
-        srcIIP.getLastINode() != null &&
-        !srcIIP.getLastINode().isDirectory()) {
+    INode srcINode = srcIIP.getLastINode();
+    if (!srcINode.isDirectory()) {
-    EncryptionZoneInt ezi = getEncryptionZoneForPath(srcIIP);
-    if (ezi != null) {
-      throw new IOException("Directory " + src + " is already in an " +
-          "encryption zone. (" + getFullPathName(ezi) + ")");
+
+    if (encryptionZones.get(srcINode.getId()) != null) {
+      throw new IOException("Directory " + src + " is already an encryption " +
+          "zone.");

INS26 INS40 INS31 INS29 INS83 MOV43 INS42 INS44 INS8 MOV25 INS65 INS43 INS42 INS6 INS21 INS60 INS41 INS60 INS25 UPD66 INS66 INS66 INS66 INS66 INS66 INS42 INS32 INS32 INS43 INS59 INS16 UPD66 MOV43 MOV43 INS27 MOV8 MOV25 INS27 INS8 INS43 INS59 INS38 MOV8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS27 INS33 INS32 UPD42 UPD42 INS42 MOV38 INS27 UPD27 MOV27 UPD27 MOV27 INS53 INS42 INS42 MOV32 INS32 INS32 INS42 INS42 INS42 INS33 INS42 INS42 UPD42 UPD42 INS42 INS38 MOV32 INS14 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS32 UPD42 UPD42 INS42 UPD42 UPD42 INS43 INS27 INS42 INS42 MOV43 MOV43 INS42 INS45 INS42 UPD45 UPD45 UPD42 UPD42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL41 DEL8 DEL25 DEL42 DEL42 DEL25 DEL8 DEL8 DEL27 DEL42 DEL32 DEL38 DEL27 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL45