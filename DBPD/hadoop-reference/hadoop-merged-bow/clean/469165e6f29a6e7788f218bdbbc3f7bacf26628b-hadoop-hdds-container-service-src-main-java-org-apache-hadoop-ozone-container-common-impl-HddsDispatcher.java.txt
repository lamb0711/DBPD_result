HDDS-1843. Undetectable corruption after restart of a datanode. Contributed by Shashikant Banerjee(#1364).

-  public void buildMissingContainerSet(Set<Long> createdContainerSet) {
-    containerSet.buildMissingContainerSet(createdContainerSet);
+  public void buildMissingContainerSetAndValidate(
+      Map<Long, Long> container2BCSIDMap) {
+    containerSet
+        .buildMissingContainerSetAndValidate(container2BCSIDMap);
-    Set<Long> containerIdSet = null;
+    Map<Long, Long> container2BCSIDMap = null;
-      containerIdSet = dispatcherContext.getCreateContainerSet();
+      container2BCSIDMap = dispatcherContext.getContainer2BCSIDMap();
-      Preconditions.checkNotNull(containerIdSet);
-      if (!containerIdSet.contains(containerID)) {
-        containerIdSet.add(containerID);
+      Preconditions.checkNotNull(container2BCSIDMap);
+      if (container2BCSIDMap.get(containerID) == null) {
+        container2BCSIDMap
+            .put(containerID, container.getBlockCommitSequenceId());
-        Preconditions.checkArgument(isWriteStage && containerIdSet != null
+        Preconditions.checkArgument(isWriteStage && container2BCSIDMap != null
-        if (containerIdSet != null) {
+        if (container2BCSIDMap != null) {
-          containerIdSet.add(containerID);
+          // with initial BCSID recorded as 0.
+          Preconditions
+              .checkArgument(!container2BCSIDMap.containsKey(containerID));
+          container2BCSIDMap.put(containerID, Long.valueOf(0));
-      if(result == Result.SUCCESS) {
+      if (result == Result.SUCCESS) {
+        updateBCSID(container, dispatcherContext, cmdType);
+  private void updateBCSID(Container container,
+      DispatcherContext dispatcherContext, ContainerProtos.Type cmdType) {
+    if (dispatcherContext != null && (cmdType == ContainerProtos.Type.PutBlock
+        || cmdType == ContainerProtos.Type.PutSmallFile)) {
+      Preconditions.checkNotNull(container);
+      long bcsID = container.getBlockCommitSequenceId();
+      long containerId = container.getContainerData().getContainerID();
+      Map<Long, Long> container2BCSIDMap;
+      container2BCSIDMap = dispatcherContext.getContainer2BCSIDMap();
+      Preconditions.checkNotNull(container2BCSIDMap);
+      Preconditions.checkArgument(container2BCSIDMap.containsKey(containerId));
+      // updates the latest BCSID on every putBlock or putSmallFile
+      // transaction over Ratis.
+      container2BCSIDMap.computeIfPresent(containerId, (u, v) -> v = bcsID);
+    }
+  }

INS31 UPD42 INS83 INS39 INS42 INS44 INS44 INS44 INS8 UPD74 UPD42 INS43 INS42 INS43 INS42 INS43 INS42 INS25 UPD43 INS43 UPD74 INS42 INS42 INS40 INS27 INS8 UPD42 INS42 UPD42 UPD42 UPD43 INS43 UPD42 INS27 INS36 INS21 INS60 INS60 INS60 INS21 INS21 INS21 INS21 UPD42 INS42 INS27 INS42 INS33 INS27 INS32 INS39 INS59 INS39 INS59 INS74 INS59 INS7 INS32 INS32 INS32 UPD42 UPD42 INS32 INS33 INS21 INS27 INS27 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS43 INS43 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS86 UPD42 UPD42 MOV42 UPD42 MOV42 MOV42 INS32 INS42 INS40 INS42 INS40 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS59 INS59 INS7 UPD42 UPD42 INS32 UPD42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS38 INS42 INS42 INS42 INS32 UPD42 INS32 INS42 INS42 INS34 UPD42 MOV42 UPD42 MOV42 MOV42 DEL32 DEL38 DEL32