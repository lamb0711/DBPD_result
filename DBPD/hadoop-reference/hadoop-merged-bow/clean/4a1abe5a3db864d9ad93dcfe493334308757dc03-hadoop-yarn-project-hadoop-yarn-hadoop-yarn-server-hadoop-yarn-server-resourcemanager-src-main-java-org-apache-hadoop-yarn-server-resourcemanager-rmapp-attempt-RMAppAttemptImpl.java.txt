Merge r1555021 through r1558254 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1558303 13f79535-47bb-0310-9956-ffa450edef68

-  private final Set<NodeId> ranNodes =
+  private Set<NodeId> ranNodes =
-  private final List<ContainerStatus> justFinishedContainers =
+  private List<ContainerStatus> justFinishedContainers =
-  
+  private final boolean isLastAttempt;
+      // For work-preserving AM restart, failed attempt are still capturing
+      // CONTAINER_FINISHED event and record the finished containers for the
+      // use by the next new attempt.
+      .addTransition(RMAppAttemptState.FAILED, RMAppAttemptState.FAILED,
+          RMAppAttemptEventType.CONTAINER_FINISHED,
+          new ContainerFinishedAtFailedTransition())
-              RMAppAttemptEventType.CONTAINER_ALLOCATED,
-              RMAppAttemptEventType.CONTAINER_FINISHED))
+              RMAppAttemptEventType.CONTAINER_ALLOCATED))
-      Configuration conf) {
+      Configuration conf, boolean isLastAttempt) {
-    
+    this.isLastAttempt = isLastAttempt;
-  } 
+  }
+  public void transferStateFromPreviousAttempt(RMAppAttempt attempt) {
+    this.justFinishedContainers = attempt.getJustFinishedContainers();
+    this.ranNodes = attempt.getRanNodes();
+  }
+
+	    boolean transferStateFromPreviousAttempt = false;
+      if (event instanceof RMAppStartAttemptEvent) {
+        transferStateFromPreviousAttempt =
+            ((RMAppStartAttemptEvent) event)
+              .getTransferStateFromPreviousAttempt();
+      }
-      // Add the applicationAttempt to the scheduler
+      // Add the applicationAttempt to the scheduler and inform the scheduler
+      // whether to transfer the state from previous attempt.
-        appAttempt.applicationAttemptId));
+        appAttempt.applicationAttemptId, transferStateFromPreviousAttempt));
+      boolean keepContainersAcrossAppAttempts = false;
-                  "Application killed by user.");
+                  "Application killed by user.", false);
+          if (appAttempt.submissionContext
+            .getKeepContainersAcrossApplicationAttempts()
+              && !appAttempt.isLastAttempt
+              && !appAttempt.submissionContext.getUnmanagedAM()) {
+            keepContainersAcrossAppAttempts = true;
+          }
-                  RMAppEventType.ATTEMPT_FAILED,
-                  appAttempt.getDiagnostics());
+                RMAppEventType.ATTEMPT_FAILED, appAttempt.getDiagnostics(),
+                keepContainersAcrossAppAttempts);
+
-        appAttemptId, finalAttemptState));
+        appAttemptId, finalAttemptState, keepContainersAcrossAppAttempts));
+      // TODO Today unmanaged AM client is waiting for app state to be Accepted to
+      // launch the AM. This is broken since we changed to start the attempt
+      // after the application is Accepted. We may need to introduce an attempt
+      // report that client can rely on to query the attempt state and choose to
+      // launch the unmanaged AM.
+  private static final class ContainerFinishedAtFailedTransition
+      extends BaseTransition {
+    @Override
+    public void
+        transition(RMAppAttemptImpl appAttempt, RMAppAttemptEvent event) {
+      RMAppAttemptContainerFinishedEvent containerFinishedEvent =
+          (RMAppAttemptContainerFinishedEvent) event;
+      ContainerStatus containerStatus =
+          containerFinishedEvent.getContainerStatus();
+      // Normal container. Add it in completed containers list
+      appAttempt.justFinishedContainers.add(containerStatus);
+    }
+  }
+

INS83 INS42 INS23 INS31 INS55 INS83 INS83 INS39 INS59 INS44 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS83 INS42 INS43 INS31 INS42 INS39 INS42 INS21 INS43 INS42 INS21 INS21 INS42 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS7 INS42 INS7 INS7 INS60 INS25 INS60 INS42 INS43 INS42 INS43 INS42 INS60 INS60 INS21 INS22 INS42 INS22 INS32 INS22 INS32 INS39 INS59 INS62 INS8 INS39 INS59 INS42 INS42 INS43 INS59 INS43 INS59 INS32 INS52 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS9 INS42 INS43 INS21 INS42 INS9 INS25 INS42 INS42 INS11 INS42 INS42 INS32 INS40 INS42 INS42 INS42 INS7 INS42 INS27 INS8 INS42 INS43 INS42 INS42 INS42 INS42 INS32 INS32 INS38 INS38 INS21 INS42 INS32 INS42 INS36 INS42 INS9 INS40 INS42 INS40 INS32 INS7 INS42 MOV32 MOV42 INS40 INS40 INS32 INS11 INS40 INS42 INS42 INS9 MOV40 INS14 INS42 INS42 INS40 INS40 INS40 INS40 INS40 INS43 INS42 INS43 INS42 INS42 DEL83 DEL42 DEL83 DEL83 DEL42 DEL42 DEL40 DEL40 DEL40 DEL40 DEL40 DEL32