YARN-8299.  Added CLI and REST API for query container status.
            Contributed by Chandni Singh

+import javax.ws.rs.core.UriBuilder;
+import com.google.common.base.Strings;
-import org.apache.hadoop.yarn.service.utils.JsonSerDeser;
-import org.codehaus.jackson.map.PropertyNamingStrategy;
-    Configuration conf = getConfig();
-    if (conf.get("hadoop.http.authentication.type").equalsIgnoreCase("simple")) {
-      api.append("?user.name=" + UrlEncoded
-          .encodeString(System.getProperty("user.name")));
-    }
+    appendUserNameIfRequired(api);
-    Configuration conf = getConfig();
-    if (conf.get("hadoop.http.authentication.type").equalsIgnoreCase(
-        "simple")) {
-      api.append("?user.name=" + UrlEncoded
-          .encodeString(System.getProperty("user.name")));
-    }
+    appendUserNameIfRequired(api);
+  private String getInstancePath(String appName, List<String> components,
+      String version, List<String> containerStates) throws IOException {
+    UriBuilder builder = UriBuilder.fromUri(getInstancesPath(appName));
+    if (components != null && !components.isEmpty()) {
+      components.forEach(compName ->
+        builder.queryParam(RestApiConstants.PARAM_COMP_NAME, compName));
+    }
+    if (!Strings.isNullOrEmpty(version)){
+      builder.queryParam(RestApiConstants.PARAM_VERSION, version);
+    }
+    if (containerStates != null && !containerStates.isEmpty()){
+      containerStates.forEach(state ->
+          builder.queryParam(RestApiConstants.PARAM_CONTAINER_STATE, state));
+    }
+    return builder.build().toString();
+  }
+
+    appendUserNameIfRequired(api);
+    return api.toString();
+  }
+
+  private void appendUserNameIfRequired(StringBuilder builder) {
-      api.append("?user.name=" + UrlEncoded
+      builder.append("?user.name=").append(UrlEncoded
-    return api.toString();
-      String buffer = CONTAINER_JSON_SERDE.toJson(toUpgrade);
+      String buffer = ServiceApiUtil.CONTAINER_JSON_SERDE.toJson(toUpgrade);
-      String buffer = COMP_JSON_SERDE.toJson(toUpgrade);
+      String buffer = ServiceApiUtil.COMP_JSON_SERDE.toJson(toUpgrade);
-  private static final JsonSerDeser<Container[]> CONTAINER_JSON_SERDE =
-      new JsonSerDeser<>(Container[].class,
-          PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES);
-
-  private static final JsonSerDeser<Component[]> COMP_JSON_SERDE =
-      new JsonSerDeser<>(Component[].class,
-          PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES);
+  @Override
+  public String getInstances(String appName, List<String> components,
+      String version, List<String> containerStates) throws IOException,
+      YarnException {
+    try {
+      String uri = getInstancePath(appName, components, version,
+          containerStates);
+      ClientResponse response = getApiClient(uri).get(ClientResponse.class);
+      if (response.getStatus() != 200) {
+        StringBuilder sb = new StringBuilder();
+        sb.append("Failed: HTTP error code: ");
+        sb.append(response.getStatus());
+        sb.append(" ErrorMsg: ").append(response.getEntity(String.class));
+        return sb.toString();
+      }
+      return response.getEntity(String.class);
+    } catch (Exception e) {
+      LOG.error("Fail to get containers {}", e);
+    }
+    return null;
+  }

MOV26 MOV26 UPD40 UPD40 INS31 INS31 INS31 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS43 INS43 INS8 MOV21 MOV21 INS42 INS43 INS42 INS74 INS42 INS43 INS42 INS74 INS42 INS42 INS60 INS25 INS25 INS25 INS41 INS21 INS43 INS42 MOV60 MOV25 INS42 INS42 INS43 INS42 INS74 INS42 INS43 INS42 INS74 INS42 INS42 INS42 INS54 INS41 INS42 UPD43 MOV43 INS43 INS42 UPD43 MOV43 INS43 INS43 INS59 INS27 INS8 INS38 INS8 INS27 INS8 INS32 INS32 INS42 INS42 UPD43 MOV43 INS43 INS42 UPD43 MOV43 INS43 INS8 INS12 INS33 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 MOV42 UPD42 INS42 UPD42 MOV42 INS42 INS32 INS27 INS38 INS21 INS32 INS21 INS27 INS38 INS21 INS32 INS42 INS42 INS42 UPD42 UPD42 MOV42 UPD42 INS42 INS60 INS60 INS25 INS41 INS44 INS8 INS42 INS42 INS32 INS42 INS33 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS33 INS32 INS32 INS42 INS42 MOV43 MOV43 INS43 INS59 INS43 INS59 INS27 INS8 INS32 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS86 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS86 INS32 INS42 MOV32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS34 INS60 INS21 INS21 INS21 INS41 INS42 INS42 INS57 INS42 INS32 INS59 INS32 INS59 INS32 UPD42 MOV42 MOV42 INS45 INS40 INS40 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS57 INS42 INS42 INS43 INS59 INS32 INS32 INS32 INS32 INS43 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS43 INS42 INS42 INS14 INS42 INS42 INS45 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 UPD42 MOV42 INS43 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS57 INS42 INS43 INS42 DEL45 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL32 DEL27 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL42 DEL45 DEL32 DEL8 DEL25 DEL45 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL32 DEL27 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL42 DEL45 DEL32 DEL8 DEL25 DEL45 DEL27 DEL42 DEL42 DEL83 DEL83 DEL83 DEL43 DEL85 DEL5 DEL74 DEL42 DEL74 DEL43 DEL85 DEL5 DEL57 DEL40 DEL14 DEL59 DEL23 DEL83 DEL83 DEL83 DEL43 DEL85 DEL5 DEL74 DEL42 DEL74 DEL43 DEL85 DEL5 DEL57 DEL40 DEL14 DEL59 DEL23