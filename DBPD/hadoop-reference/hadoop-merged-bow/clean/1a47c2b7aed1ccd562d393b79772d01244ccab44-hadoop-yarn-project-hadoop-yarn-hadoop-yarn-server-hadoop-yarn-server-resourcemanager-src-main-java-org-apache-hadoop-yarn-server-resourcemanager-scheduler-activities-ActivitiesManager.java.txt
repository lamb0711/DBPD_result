YARN-9539.Improve cleanup process of app activities and make some conditions configurable. Contributed by Tao Yang.

+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.yarn.conf.YarnConfiguration;
-  private int timeThreshold = 600 * 1000;
+  private long activitiesCleanupIntervalMs;
+  private long schedulerActivitiesTTL;
+  private long appActivitiesTTL;
+  private int appActivitiesMaxQueueLength;
+    if (rmContext.getYarnConfiguration() != null) {
+      setupConfForCleanup(rmContext.getYarnConfiguration());
+    }
+  }
+
+  private void setupConfForCleanup(Configuration conf) {
+    activitiesCleanupIntervalMs = conf.getLong(
+        YarnConfiguration.RM_ACTIVITIES_MANAGER_CLEANUP_INTERVAL_MS,
+        YarnConfiguration.
+            DEFAULT_RM_ACTIVITIES_MANAGER_CLEANUP_INTERVAL_MS);
+    schedulerActivitiesTTL = conf.getLong(
+        YarnConfiguration.RM_ACTIVITIES_MANAGER_SCHEDULER_ACTIVITIES_TTL_MS,
+        YarnConfiguration.
+            DEFAULT_RM_ACTIVITIES_MANAGER_SCHEDULER_ACTIVITIES_TTL_MS);
+    appActivitiesTTL = conf.getLong(
+        YarnConfiguration.RM_ACTIVITIES_MANAGER_APP_ACTIVITIES_TTL_MS,
+        YarnConfiguration.
+            DEFAULT_RM_ACTIVITIES_MANAGER_APP_ACTIVITIES_TTL_MS);
+    appActivitiesMaxQueueLength = conf.getInt(YarnConfiguration.
+            RM_ACTIVITIES_MANAGER_APP_ACTIVITIES_MAX_QUEUE_LENGTH,
+        YarnConfiguration.
+            DEFAULT_RM_ACTIVITIES_MANAGER_APP_ACTIVITIES_MAX_QUEUE_LENGTH);
+          long curTS = SystemClock.getInstance().getTime();
-            long currTS = SystemClock.getInstance().getTime();
-            if (allocations.size() > 0 && allocations.get(0).getTimeStamp()
-                - currTS > timeThreshold) {
+            if (allocations.size() > 0
+                && curTS - allocations.get(0).getTimeStamp()
+                > schedulerActivitiesTTL) {
+            } else {
+              Iterator<AppAllocation> appActivitiesIt =
+                  appAllocation.getValue().iterator();
+              while (appActivitiesIt.hasNext()) {
+                if (curTS - appActivitiesIt.next().getTime()
+                    > appActivitiesTTL) {
+                  appActivitiesIt.remove();
+                } else {
+                  break;
+                }
+              }
+              if (appAllocation.getValue().isEmpty()) {
+                iteApp.remove();
+                LOG.debug("Removed all expired activities from cache for {}.",
+                    rmApp.getApplicationId());
+              }
+          LOG.debug("Remaining apps in app activities cache: {}",
+              completedAppAllocations.keySet());
-            Thread.sleep(5000);
+            Thread.sleep(activitiesCleanupIntervalMs);
-      if (appAllocations.size() == 1000) {
+      if (appAllocations.size() == appActivitiesMaxQueueLength) {

INS26 INS26 INS40 INS40 INS23 INS23 INS23 INS31 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS42 UPD42 INS25 INS43 INS42 INS21 INS21 INS21 INS21 INS27 INS8 INS42 INS7 INS7 INS7 INS7 INS32 INS33 INS21 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS40 INS40 INS42 INS42 INS40 INS40 INS42 INS42 INS40 INS40 INS42 INS42 INS40 INS40 INS42 INS32 INS42 INS42 INS42 INS60 INS21 INS39 INS59 INS32 INS42 INS32 INS25 INS42 INS42 INS45 INS32 INS32 INS42 MOV27 MOV8 INS8 INS42 INS42 INS42 INS42 INS60 INS61 INS25 INS42 MOV32 UPD42 INS74 INS59 INS32 INS8 INS32 INS8 UPD42 INS43 INS43 INS42 INS32 INS42 INS42 MOV25 INS32 INS42 INS21 INS21 INS42 INS42 INS32 INS42 INS27 INS8 INS8 INS42 INS42 INS32 INS32 INS42 INS42 INS27 INS42 INS21 INS10 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 DEL34 DEL34 DEL27 DEL39 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL34 DEL34