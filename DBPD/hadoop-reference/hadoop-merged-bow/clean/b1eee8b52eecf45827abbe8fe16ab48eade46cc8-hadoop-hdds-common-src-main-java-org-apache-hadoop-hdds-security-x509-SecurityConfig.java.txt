HDDS-1946. CertificateClient should not persist keys/certs to ozone.mâ€¦ (#1311)


+import org.apache.commons.lang3.StringUtils;
-   * Returns the File path to where keys are stored.
-   *
-   * @return path Key location.
-   */
-  public Path getKeyLocation() {
-    Preconditions.checkNotNull(this.metadatDir, "Metadata directory can't be"
-        + " null. Please check configs.");
-    return Paths.get(metadatDir, keyDir);
-  }
-
-  /**
-   * @return Path location.
+   * @return Path Key location.
-   * Returns the File path to where keys are stored.
-   *
-   * @return path Key location.
-   */
-  public Path getCertificateLocation() {
-    Preconditions.checkNotNull(this.metadatDir, "Metadata directory can't be"
-        + " null. Please check configs.");
-    return Paths.get(metadatDir, certificateDir);
-  }
-
-  /**
-   * Returns the File path to where keys are stored with an addition component
+   * Returns the File path to where certificates are stored with an addition
+   * component
+   * authentication) for the given component.
+   * @param component name of the component.
+   * @return the TLS-enabled gRPC client private key file.
+   */
+  public File getClientPrivateKeyFile(String component) {
+    return Paths.get(getKeyLocation(component).toString(),
+        "client." + privateKeyFileName).toFile();
+  }
+
+  /**
+   * Returns the TLS-enabled gRPC client private key file(Only needed for mutual
-    return Paths.get(getKeyLocation().toString(),
-        "client." + privateKeyFileName).toFile();
+    return getClientPrivateKeyFile(StringUtils.EMPTY);
+  }
+
+  /**
+   * Returns the TLS-enabled gRPC server private key file for the given
+   * component.
+   * @param component name of the component.
+   * @return the TLS-enabled gRPC server private key file.
+   */
+  public File getServerPrivateKeyFile(String component) {
+    return Paths.get(getKeyLocation(component).toString(),
+        "server." + privateKeyFileName).toFile();
-    return Paths.get(getKeyLocation().toString(),
-        "server." + privateKeyFileName).toFile();
+    return getServerPrivateKeyFile(StringUtils.EMPTY);
+  }
+
+  /**
+   * Get the trusted CA certificate file for the given component. (CA
+   * certificate)
+   * @param component name of the component.
+   * @return the trusted CA certificate.
+   */
+  public File getTrustStoreFile(String component) {
+    return Paths.get(getKeyLocation(component).toString(),
+        trustStoreFileName).
+        toFile();
-    return Paths.get(getKeyLocation().toString(), trustStoreFileName).
+    return getTrustStoreFile(StringUtils.EMPTY);
+  }
+
+  /**
+   * Get the TLS-enabled gRPC Client certificate chain file for the given
+   * component (only needed for
+   * mutual authentication).
+   * @param component name of the component.
+   * @return the TLS-enabled gRPC Server certificate chain file.
+   */
+  public File getClientCertChainFile(String component) {
+    return Paths.get(getKeyLocation(component).toString(),
+        clientCertChainFileName).
-    return Paths.get(getKeyLocation().toString(), clientCertChainFileName).
+    return getClientCertChainFile(StringUtils.EMPTY);
+  }
+
+  /**
+   * Get the TLS-enabled gRPC Server certificate chain file for the given
+   * component.
+   * @param component name of the component.
+   * @return the TLS-enabled gRPC Server certificate chain file.
+   */
+  public File getServerCertChainFile(String component) {
+    return Paths.get(getKeyLocation(component).toString(),
+        serverCertChainFileName).
-    return Paths.get(getKeyLocation().toString(), serverCertChainFileName).
-        toFile();
+    return getServerCertChainFile(StringUtils.EMPTY);
-   * This should be used only for unit test where certifiates are generated
+   * This should be used only for unit test where certificates are generated
-   * */
+   */

INS26 MOV31 INS40 INS31 INS31 INS31 INS31 INS31 UPD43 UPD42 INS44 INS8 MOV29 INS83 MOV43 INS42 INS8 MOV29 MOV83 UPD43 MOV43 UPD42 MOV42 INS44 MOV8 INS29 INS43 INS44 MOV29 INS83 MOV43 INS42 INS8 INS29 INS43 INS44 MOV29 INS83 MOV43 INS42 INS8 INS29 INS43 INS44 MOV29 INS83 MOV43 INS42 INS8 INS65 MOV65 INS65 UPD42 INS43 INS42 MOV41 INS41 INS65 UPD42 INS43 INS42 INS65 INS65 INS65 INS42 INS43 INS42 INS41 INS65 INS65 INS65 INS42 INS43 INS42 INS41 INS65 INS65 INS65 INS42 INS43 INS42 INS41 INS66 UPD66 INS66 UPD66 INS66 INS42 INS66 UPD66 INS42 INS32 INS32 UPD66 INS66 INS42 INS66 UPD66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS32 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS32 INS66 INS66 INS42 INS66 INS66 INS42 INS32 UPD66 INS32 INS42 INS42 INS40 UPD42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 MOV42 MOV42 INS32 MOV27 MOV27 INS32 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL52 DEL42 DEL22 DEL45 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL65 DEL32 DEL42 DEL42 DEL52 DEL42 DEL22 DEL45 DEL45 DEL27 DEL32 DEL21 DEL8 DEL83 DEL42 DEL31 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32