YARN-8033. CLI Integration with NodeAttributesManagerImpl. Contributed by Naganarasimha G R.

+import java.util.HashMap;
+import java.util.HashSet;
+import org.apache.hadoop.yarn.api.records.NodeAttribute;
+import org.apache.hadoop.yarn.nodelabels.NodeAttributesManager;
+import org.apache.hadoop.yarn.server.api.protocolrecords.NodeToAttributes;
+
+    final String operation = "mapAttributesToNodes";
+    final String msg = "Map Attributes to Nodes";
+    UserGroupInformation user = checkAcls(operation);
+    checkRMStatus(user.getShortUserName(), operation, msg);
+
+
+    List<NodeToAttributes> nodesToAttributes = request.getNodesToAttributes();
+    boolean failOnUnknownNodes = request.getFailOnUnknownNodes();
+
+    Map<String, Set<NodeAttribute>> nodeAttributeMapping =
+        validateAndFetch(nodesToAttributes, failOnUnknownNodes);
+
+    NodeAttributesManager nodeAttributesManager =
+        rm.getRMContext().getNodeAttributesManager();
+    try {
+      switch (request.getOperation()) {
+      case ADD:
+        nodeAttributesManager.addNodeAttributes(nodeAttributeMapping);
+        break;
+      case REMOVE:
+        nodeAttributesManager.removeNodeAttributes(nodeAttributeMapping);
+        break;
+      case REPLACE:
+        nodeAttributesManager.replaceNodeAttributes(
+            NodeAttribute.PREFIX_CENTRALIZED, nodeAttributeMapping);
+        break;
+      default:
+        throw new IOException("Invalid operation " + request.getOperation()
+            + " specified in the mapAttributesToNodes request ");
+
+      }
+    } catch (IOException ioe) {
+      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);
+    }
+    RMAuditLogger.logSuccess(user.getShortUserName(), operation,
+        "AdminService");
+
+  /**
+   * @param nodesToAttributesMapping input to be validated
+   * @param failOnUnknownNodes indicates to fail if the nodes are not available.
+   * @return the map of Node host name to set of NodeAttributes
+   * @throws IOException if validation fails for node existence or the attribute
+   *           has a wrong prefix
+   */
+  private Map<String, Set<NodeAttribute>> validateAndFetch(
+      List<NodeToAttributes> nodesToAttributesMapping,
+      boolean failOnUnknownNodes) throws IOException {
+    Map<String, Set<NodeAttribute>> attributeMapping = new HashMap<>();
+    List<String> invalidNodes = new ArrayList<>();
+    for (NodeToAttributes nodeToAttributes : nodesToAttributesMapping) {
+      String node = nodeToAttributes.getNode();
+      if (!validateForInvalidNode(node, failOnUnknownNodes)) {
+        invalidNodes.add(node);
+        continue;
+      }
+      List<NodeAttribute> nodeAttributes = nodeToAttributes.getNodeAttributes();
+      if (!nodeAttributes.stream()
+          .allMatch(nodeAttribute -> NodeAttribute.PREFIX_CENTRALIZED
+              .equals(nodeAttribute.getAttributePrefix()))) {
+        throw new IOException("Invalid Attribute Mapping for the node " + node
+            + ". Prefix should be " + NodeAttribute.PREFIX_CENTRALIZED);
+      }
+      attributeMapping.put(node, new HashSet<>(nodeAttributes));
+    }
+    if (!invalidNodes.isEmpty()) {
+      String message = " Following nodes does not exist : " + invalidNodes;
+      LOG.error(message);
+      throw new IOException(message);
+    }
+    return attributeMapping;
+  }
+
+  /**
+   * @param node
+   * @return true if valid else false;
+   */
+  private boolean validateForInvalidNode(String node,
+      boolean failOnUnknownNodes) {
+    if (!failOnUnknownNodes) {
+      return true;
+    }
+    // both active and inactive nodes are recognized as known nodes
+    boolean isKnown = rm.getRMContext().getRMNodes().keySet().stream()
+        .anyMatch(activeNode -> activeNode.getHost().equals(node));
+
+    if (!isKnown) {
+      isKnown = rm.getRMContext().getInactiveRMNodes().keySet().stream()
+          .anyMatch(inactiveNode -> inactiveNode.getHost().equals(node));
+    }
+    return isKnown;
+  }

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS8 INS29 INS83 INS74 INS42 INS44 INS44 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS8 INS60 INS60 INS60 INS21 INS60 INS60 INS60 INS60 INS54 INS21 MOV41 INS65 INS65 INS65 INS65 INS43 INS43 INS74 INS74 INS42 INS39 INS42 INS42 INS60 INS60 INS70 INS25 INS41 INS65 INS65 INS43 INS42 INS39 INS42 INS25 INS60 INS25 INS41 INS83 INS43 INS59 INS83 INS43 INS59 INS43 INS59 INS32 INS74 INS59 INS39 INS59 INS74 INS59 INS43 INS59 INS8 INS12 INS32 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS42 INS43 INS43 INS43 INS43 INS74 INS59 INS74 INS59 INS44 INS42 INS8 INS38 INS8 INS42 INS42 INS66 INS42 INS38 INS8 INS39 INS59 INS38 INS8 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS32 INS43 INS43 INS74 INS42 INS32 INS42 INS42 INS32 INS50 INS44 INS8 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS42 INS42 INS43 INS43 INS74 INS42 INS14 INS43 INS43 INS42 INS14 INS43 INS42 INS60 INS25 INS60 INS25 INS21 INS32 INS60 INS21 INS53 INS42 INS41 INS42 INS32 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS32 INS42 INS32 INS49 INS21 INS10 INS49 INS21 INS10 INS49 INS21 INS10 INS49 INS53 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS43 INS43 INS74 INS42 INS42 INS74 INS42 INS43 INS59 INS38 INS8 INS74 INS59 INS38 INS8 INS32 INS42 INS42 INS43 INS59 INS32 INS14 INS9 INS32 INS42 INS86 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS14 INS42 INS32 INS42 INS42 INS43 INS43 INS42 INS42 INS32 INS32 INS21 INS18 INS43 INS43 INS42 INS32 INS32 INS53 INS42 INS42 INS42 INS14 INS42 INS42 INS27 INS42 INS42 INS42 INS43 INS42 INS32 INS42 INS59 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS43 INS27 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS86 INS14 INS74 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS86 INS42 INS45 INS32 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS59 INS32 INS43 INS27 INS43 INS32 INS42 INS42 INS42 INS32 INS42 INS59 INS32 INS42 INS42 INS42 INS40 INS42 INS32 INS42 INS45 INS42 INS45 INS40 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 DEL8