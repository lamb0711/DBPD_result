YARN-4161. Capacity Scheduler : Assign single or multiple containers per heart beat driven by configuration. (Wei Yan via wangda)

Change-Id: Ic441ae4e0bf72e7232411eb54243ec143d5fd0d3

-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedContainerChangeRequest;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode;
+  private boolean assignMultipleEnabled;
+
+  private int maxAssignPerHeartbeat;
+      this.assignMultipleEnabled = this.conf.getAssignMultipleEnabled();
+      this.maxAssignPerHeartbeat = this.conf.getMaxAssignPerHeartbeat();
+
-  private boolean canAllocateMore(CSAssignment assignment, int offswitchCount) {
-    if (null != assignment && Resources.greaterThan(getResourceCalculator(),
-        getClusterResource(), assignment.getResource(), Resources.none())
-        && offswitchCount < offswitchPerHeartbeatLimit) {
-      // And it should not be a reserved container
-      if (assignment.getAssignmentInformation().getNumReservations() == 0) {
-        return true;
-      }
+  private boolean canAllocateMore(CSAssignment assignment, int offswitchCount,
+      int assignedContainers) {
+    // Current assignment shouldn't be empty
+    if (assignment == null
+            || Resources.equals(assignment.getResource(), Resources.none())) {
+      return false;
-    return false;
+    // offswitch assignment should be under threshold
+    if (offswitchCount >= offswitchPerHeartbeatLimit) {
+      return false;
+    }
+
+    // And it should not be a reserved container
+    if (assignment.getAssignmentInformation().getNumReservations() > 0) {
+      return false;
+    }
+
+    // assignMultipleEnabled should be ON,
+    // and assignedContainers should be under threshold
+    return assignMultipleEnabled
+        && (maxAssignPerHeartbeat == -1
+            || assignedContainers < maxAssignPerHeartbeat);
+      int assignedContainers = 0;
-        while (canAllocateMore(assignment, offswitchCount)) {
+        if (Resources.greaterThan(calculator, getClusterResource(),
+            assignment.getResource(), Resources.none())) {
+          assignedContainers++;
+        }
+
+        while (canAllocateMore(assignment, offswitchCount,
+            assignedContainers)) {
+
+          if (null != assignment
+              && Resources.greaterThan(calculator, getClusterResource(),
+                  assignment.getResource(), Resources.none())) {
+            assignedContainers++;
+          }

INS23 INS23 INS83 INS39 INS59 INS83 INS39 INS59 INS44 INS8 INS42 INS42 INS39 INS42 INS25 INS25 MOV25 INS41 INS27 INS8 INS27 INS8 UPD27 INS27 INS21 INS21 INS27 INS32 MOV41 INS42 INS42 INS41 INS42 INS36 INS60 INS7 INS7 INS42 INS33 INS42 INS42 INS32 INS32 INS9 UPD9 INS27 INS39 INS59 INS22 INS32 INS22 INS32 INS42 INS42 INS42 INS42 INS27 INS27 INS42 INS34 MOV25 INS52 INS42 INS22 INS42 INS52 INS42 INS22 INS42 INS42 INS38 INS42 INS42 MOV32 INS8 INS52 INS42 INS52 INS42 INS34 UPD42 MOV42 INS21 INS42 INS25 INS37 INS27 INS8 INS42 MOV27 INS32 INS21 INS42 INS42 INS42 INS32 INS32 INS32 INS37 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL8 DEL32 DEL27 DEL42 DEL42 DEL27 DEL27 DEL8