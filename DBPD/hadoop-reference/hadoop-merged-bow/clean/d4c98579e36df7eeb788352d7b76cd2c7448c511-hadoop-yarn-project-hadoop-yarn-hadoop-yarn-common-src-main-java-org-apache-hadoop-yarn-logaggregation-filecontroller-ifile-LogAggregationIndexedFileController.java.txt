YARN-7697. NM goes down with OOM due to leak in log-aggregation. (Xuan Gong via wangda)

Change-Id: Ie4fc7979d834e25f37a033c314f3efceeb8f4a9e

-              IndexedLogsMeta recoveredLogsMeta = null;
-              try {
-                truncateFileWithRetries(fc, currentRemoteLogFile,
-                    endIndex);
-                recoveredLogsMeta = loadIndexedLogsMeta(
-                    currentRemoteLogFile);
-              } catch (Exception ex) {
-                recoveredLogsMeta = loadIndexedLogsMeta(
-                    currentRemoteLogFile, endIndex);
-              }
+              IndexedLogsMeta recoveredLogsMeta = loadIndexedLogsMeta(
+                  currentRemoteLogFile, endIndex, appId);
-            endIndex);
+            endIndex, appId);
-            + thisNodeFile.getPath());
+            + thisNodeFile.getPath() + "\n" + ex.getMessage());
-            thisNodeFile.getPath(), endIndex);
+            thisNodeFile.getPath(), endIndex, appId);
-            + thisNodeFile.getPath());
+            + thisNodeFile.getPath() + "\n" + ex.getMessage());
+        LOG.warn(ex.getMessage());
-  public String getApplicationOwner(Path aggregatedLogPath)
+  public String getApplicationOwner(Path aggregatedLogPath,
+      ApplicationId appId)
-          loadIndexedLogsMeta(aggregatedLogPath), aggregatedLogPath);
+          loadIndexedLogsMeta(aggregatedLogPath, appId), aggregatedLogPath);
-      Path aggregatedLogPath) throws IOException {
+      Path aggregatedLogPath, ApplicationId appId) throws IOException {
-          loadIndexedLogsMeta(aggregatedLogPath), aggregatedLogPath);
+          loadIndexedLogsMeta(aggregatedLogPath, appId), aggregatedLogPath);
-  public IndexedLogsMeta loadIndexedLogsMeta(Path remoteLogPath, long end)
-      throws IOException {
+  public IndexedLogsMeta loadIndexedLogsMeta(Path remoteLogPath, long end,
+      ApplicationId appId) throws IOException {
+
+      // If the offset/log meta size is larger than 64M,
+      // output a warn message for better debug.
+      if (offset > 64 * 1024 * 1024) {
+        LOG.warn("The log meta size read from " + remoteLogPath
+            + " is " + offset);
+      }
+
+      // Load UUID and make sure the UUID is correct.
+      byte[] uuidRead = new byte[UUID_LENGTH];
+      int uuidReadLen = fsDataIStream.read(uuidRead);
+      if (this.uuid == null) {
+        this.uuid = createUUID(appId);
+      }
+      if (uuidReadLen != UUID_LENGTH || !Arrays.equals(this.uuid, uuidRead)) {
+        if (LOG.isDebugEnabled()) {
+          LOG.debug("the length of loaded UUID:" + uuidReadLen);
+          LOG.debug("the loaded UUID:" + new String(uuidRead,
+              Charset.forName("UTF-8")));
+          LOG.debug("the expected UUID:" + new String(this.uuid,
+              Charset.forName("UTF-8")));
+        }
+        throw new IOException("The UUID from "
+            + remoteLogPath + " is not correct. The offset of loaded UUID is "
+            + (fileLength - UUID_LENGTH));
+      }
+
+      // Load Log Meta
-  private IndexedLogsMeta loadIndexedLogsMeta(Path remoteLogPath)
-      throws IOException {
-    return loadIndexedLogsMeta(remoteLogPath, -1);
+  private IndexedLogsMeta loadIndexedLogsMeta(Path remoteLogPath,
+      ApplicationId appId) throws IOException {
+    return loadIndexedLogsMeta(remoteLogPath, -1, appId);
+        LOG.warn(e.getMessage());

INS44 INS44 INS44 INS44 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS25 INS60 INS60 INS25 INS25 INS42 MOV8 INS12 INS27 INS8 INS5 INS59 INS39 INS59 INS27 INS8 INS27 INS8 MOV44 INS8 INS42 INS27 INS21 INS39 INS85 INS42 INS3 INS42 INS32 INS22 INS33 INS21 INS27 INS38 INS25 INS53 INS21 INS7 MOV21 INS18 INS21 INS34 INS34 INS34 INS32 INS5 INS42 INS42 INS42 INS42 INS52 INS42 INS7 INS42 INS42 INS32 INS32 INS8 INS14 INS32 INS42 MOV32 INS32 INS32 INS42 INS42 INS42 INS42 INS27 INS39 INS85 INS22 INS32 INS42 INS42 INS22 INS42 INS42 INS42 INS21 INS21 INS21 INS43 INS27 INS42 INS42 INS32 UPD42 MOV32 UPD42 INS42 INS42 INS42 INS27 INS32 INS42 INS42 INS42 INS32 INS45 INS42 INS45 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS32 INS32 INS32 INS42 INS45 INS42 INS45 INS36 INS42 INS42 INS45 MOV32 INS45 INS32 INS42 INS42 MOV32 INS45 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS27 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 INS45 INS42 INS45 INS14 INS45 INS14 INS42 INS42 INS60 INS43 INS42 INS32 INS43 INS22 INS32 MOV43 INS59 INS42 INS42 INS42 INS45 INS42 INS52 INS42 INS42 INS42 INS45 INS42 INS32 MOV42 MOV42 MOV42 INS42 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL32 DEL7 DEL21 DEL8 DEL12 DEL54 DEL45 DEL27 DEL18 DEL42 DEL32 DEL7 DEL8 DEL12