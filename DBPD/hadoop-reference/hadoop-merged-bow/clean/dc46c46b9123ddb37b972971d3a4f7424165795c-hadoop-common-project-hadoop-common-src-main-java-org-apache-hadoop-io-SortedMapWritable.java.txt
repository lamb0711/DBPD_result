HADOOP-10465. Fix use of generics within SortedMapWritable. Contributed by Bertrand Dechoux.

-public class SortedMapWritable extends AbstractMapWritable
-  implements SortedMap<WritableComparable, Writable> {
+public class SortedMapWritable<K extends WritableComparable<? super K>> extends AbstractMapWritable
+  implements SortedMap<K, Writable> {
-  private SortedMap<WritableComparable, Writable> instance;
+  private SortedMap<K, Writable> instance;
-    this.instance = new TreeMap<WritableComparable, Writable>();
+    this.instance = new TreeMap<K, Writable>();
-  public SortedMapWritable(SortedMapWritable other) {
+  public SortedMapWritable(SortedMapWritable<K> other) {
-  public Comparator<? super WritableComparable> comparator() {
+  public Comparator<? super K> comparator() {
-  public WritableComparable firstKey() {
+  public K firstKey() {
-  public SortedMap<WritableComparable, Writable>
-  headMap(WritableComparable toKey) {
-    
+  public SortedMap<K, Writable> headMap(K toKey) {
-  public WritableComparable lastKey() {
+  public K lastKey() {
-  public SortedMap<WritableComparable, Writable>
-  subMap(WritableComparable fromKey, WritableComparable toKey) {
-    
+  public SortedMap<K, Writable> subMap(K fromKey, K toKey) {
-  public SortedMap<WritableComparable, Writable>
-  tailMap(WritableComparable fromKey) {
-    
+  public SortedMap<K, Writable> tailMap(K fromKey) {
-  public Set<java.util.Map.Entry<WritableComparable, Writable>> entrySet() {
+  public Set<Map.Entry<K, Writable>> entrySet() {
-  public Set<WritableComparable> keySet() {
+  public Set<K> keySet() {
-  public Writable put(WritableComparable key, Writable value) {
+  public Writable put(K key, Writable value) {
-  public void putAll(Map<? extends WritableComparable, ? extends Writable> t) {
-    for (Map.Entry<? extends WritableComparable, ? extends Writable> e:
+  public void putAll(Map<? extends K, ? extends Writable> t) {
+    for (Map.Entry<? extends K, ? extends Writable> e:
-      
-      WritableComparable key =
-        (WritableComparable) ReflectionUtils.newInstance(getClass(
+      K key =
+        (K) ReflectionUtils.newInstance(getClass(
-    for (Map.Entry<WritableComparable, Writable> e: instance.entrySet()) {
+    for (Map.Entry<K, Writable> e: instance.entrySet()) {
-      Map map = (Map) obj;
+      Map<?,?> map = (Map<?,?>) obj;

INS73 UPD74 MOV74 INS42 INS74 UPD43 UPD74 MOV74 UPD74 UPD43 UPD74 UPD43 UPD74 UPD74 UPD74 UPD74 MOV43 INS76 UPD42 UPD43 INS74 UPD76 UPD42 UPD43 UPD43 UPD42 UPD43 UPD43 UPD43 UPD43 UPD43 UPD74 UPD43 UPD43 UPD74 INS43 UPD42 MOV43 INS43 INS43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD43 UPD42 UPD42 UPD76 MOV76 INS42 INS42 INS42 UPD40 UPD42 UPD43 UPD74 UPD74 UPD74 UPD42 UPD76 MOV76 UPD43 UPD43 INS74 UPD43 UPD43 UPD42 UPD42 MOV43 INS76 INS76 UPD42 UPD42 UPD43 INS74 UPD42 MOV43 INS76 INS76