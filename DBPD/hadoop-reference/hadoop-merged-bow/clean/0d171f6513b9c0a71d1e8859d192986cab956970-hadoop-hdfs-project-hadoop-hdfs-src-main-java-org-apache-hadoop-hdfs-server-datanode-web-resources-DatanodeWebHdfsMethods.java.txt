Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1202013 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier;
+import org.apache.hadoop.hdfs.web.resources.DelegationParam;
+import org.apache.hadoop.hdfs.web.resources.HttpOpParam;
+import org.apache.hadoop.security.SecurityUtil;
+import org.apache.hadoop.security.token.Token;
+  private void init(final UserGroupInformation ugi, final DelegationParam delegation,
+      final UriFsPathParam path, final HttpOpParam<?> op,
+      final Param<?, ?>... parameters) throws IOException {
+    if (LOG.isTraceEnabled()) {
+      LOG.trace("HTTP " + op.getValue().getType() + ": " + op + ", " + path
+          + ", ugi=" + ugi + Param.toSortedString(", ", parameters));
+    }
+
+    //clear content type
+    response.setContentType(null);
+    
+    if (UserGroupInformation.isSecurityEnabled()) {
+      //add a token for RPC.
+      final DataNode datanode = (DataNode)context.getAttribute("datanode");
+      final InetSocketAddress nnRpcAddr = NameNode.getAddress(datanode.getConf());
+      final Token<DelegationTokenIdentifier> token = new Token<DelegationTokenIdentifier>();
+      token.decodeFromUrlString(delegation.getValue());
+      SecurityUtil.setTokenService(token, nnRpcAddr);
+      token.setKind(DelegationTokenIdentifier.HDFS_DELEGATION_KIND);
+      ugi.addToken(token);
+    }
+  }
+
+      @QueryParam(DelegationParam.NAME) @DefaultValue(DelegationParam.DEFAULT)
+          final DelegationParam delegation,
-    return put(in, ugi, ROOT, op, permission, overwrite, bufferSize,
+    return put(in, ugi, delegation, ROOT, op, permission, overwrite, bufferSize,
+      @QueryParam(DelegationParam.NAME) @DefaultValue(DelegationParam.DEFAULT)
+          final DelegationParam delegation,
-    if (LOG.isTraceEnabled()) {
-      LOG.trace(op + ": " + path + ", ugi=" + ugi
-          + Param.toSortedString(", ", permission, overwrite, bufferSize,
-              replication, blockSize));
-    }
-
-    //clear content type
-    response.setContentType(null);
+    init(ugi, delegation, path, op, permission, overwrite, bufferSize,
+        replication, blockSize);
+      @QueryParam(DelegationParam.NAME) @DefaultValue(DelegationParam.DEFAULT)
+          final DelegationParam delegation,
-    return post(in, ugi, ROOT, op, bufferSize);
+    return post(in, ugi, delegation, ROOT, op, bufferSize);
+      @QueryParam(DelegationParam.NAME) @DefaultValue(DelegationParam.DEFAULT)
+          final DelegationParam delegation,
-    if (LOG.isTraceEnabled()) {
-      LOG.trace(op + ": " + path + ", ugi=" + ugi
-          + Param.toSortedString(", ", bufferSize));
-    }
-
-    //clear content type
-    response.setContentType(null);
+    init(ugi, delegation, path, op, bufferSize);
+      @QueryParam(DelegationParam.NAME) @DefaultValue(DelegationParam.DEFAULT)
+          final DelegationParam delegation,
-    return get(ugi, ROOT, op, offset, length, bufferSize); 
+    return get(ugi, delegation, ROOT, op, offset, length, bufferSize); 
+      @QueryParam(DelegationParam.NAME) @DefaultValue(DelegationParam.DEFAULT)
+          final DelegationParam delegation,
-    if (LOG.isTraceEnabled()) {
-      LOG.trace(op + ": " + path + ", ugi=" + ugi
-          + Param.toSortedString(", ", offset, length, bufferSize));
-    }
-
-    //clear content type
-    response.setContentType(null);
+    init(ugi, delegation, path, op, offset, length, bufferSize);
-      final int status = offset.getValue() == 0?
-          HttpServletResponse.SC_OK: HttpServletResponse.SC_PARTIAL_CONTENT;
-      return Response.status(status).entity(streaming).type(
+      return Response.ok(streaming).type(

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS31 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS44 INS44 INS44 INS44 INS44 INS44 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS74 INS42 INS83 INS74 INS42 INS42 INS25 MOV21 INS25 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 MOV21 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 MOV21 INS79 INS79 INS83 INS43 INS42 INS79 INS79 INS83 INS43 INS42 MOV21 INS42 INS42 INS42 INS43 INS76 INS43 INS76 INS76 MOV32 INS8 INS32 INS8 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS42 INS21 INS42 INS42 INS60 INS60 INS60 INS21 INS21 INS21 INS21 INS42 UPD42 UPD42 INS42 INS42 INS42 MOV42 MOV42 MOV42 MOV42 MOV42 INS42 UPD42 UPD42 INS42 INS42 INS42 MOV42 INS42 UPD42 UPD42 INS42 INS42 INS42 MOV42 MOV42 MOV42 INS32 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS74 INS59 INS32 INS32 INS32 INS32 INS42 INS42 INS27 INS42 INS42 INS11 INS42 INS42 INS32 INS43 INS43 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS45 INS32 INS45 INS42 INS45 INS42 INS45 INS42 INS32 INS43 INS32 INS42 INS42 INS32 INS42 INS42 INS74 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS42 MOV42 UPD42 MOV42 DEL42 DEL45 DEL42 DEL45 DEL42 DEL42 DEL42 DEL45 DEL32 DEL27 DEL8 DEL25 DEL42 DEL45 DEL42 DEL45 DEL42 DEL42 DEL42 DEL45 DEL32 DEL27 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL42 DEL33 DEL32 DEL21 DEL42 DEL45 DEL42 DEL45 DEL42 DEL42 DEL42 DEL45 DEL32 DEL27 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL42 DEL33 DEL32 DEL21 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL34 DEL27 DEL40 DEL40 DEL16 DEL59 DEL60 DEL42 DEL32 DEL42