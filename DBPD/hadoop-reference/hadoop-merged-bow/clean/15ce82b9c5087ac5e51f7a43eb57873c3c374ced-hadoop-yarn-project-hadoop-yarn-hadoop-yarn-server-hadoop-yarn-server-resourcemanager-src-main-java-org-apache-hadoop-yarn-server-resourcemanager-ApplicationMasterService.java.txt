YARN-369. Handle ( or throw a proper error when receiving) status updates from application masters that have not registered (Mayank Bansal & Abhishek Kapoor via bikas)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1501605 13f79535-47bb-0310-9956-ffa450edef68

-      LOG.info("AM registration " + applicationAttemptId);
+      if (hasApplicationMasterRegistered(applicationAttemptId)) {
+        String message =
+            "Application Master is already registered : "
+                + applicationAttemptId.getApplicationId();
+        LOG.warn(message);
+        RMAuditLogger.logFailure(
+          this.rmContext.getRMApps()
+            .get(applicationAttemptId.getApplicationId()).getUser(),
+          AuditConstants.REGISTER_AM, "", "ApplicationMasterService", message,
+          applicationAttemptId.getApplicationId(), applicationAttemptId);
+        throw new InvalidApplicationMasterRequestException(message);
+      }
+      
-
-      this.rmContext.getDispatcher().getEventHandler().handle(
-          new RMAppAttemptRegistrationEvent(applicationAttemptId, request
-              .getHost(), request.getRpcPort(), request.getTrackingUrl()));
-
-      RMAuditLogger.logSuccess(app.getUser(),
-          AuditConstants.REGISTER_AM, "ApplicationMasterService", appID,
-          applicationAttemptId);
+      
+      // Setting the response id to 0 to identify if the
+      // application master is register for the respective attemptid
+      lastResponse.setResponseId(0);
+      responseMap.put(applicationAttemptId, lastResponse);
+      LOG.info("AM registration " + applicationAttemptId);
+      this.rmContext
+        .getDispatcher()
+        .getEventHandler()
+        .handle(
+          new RMAppAttemptRegistrationEvent(applicationAttemptId, request
+            .getHost(), request.getRpcPort(), request.getTrackingUrl()));
+      RMAuditLogger.logSuccess(app.getUser(), AuditConstants.REGISTER_AM,
+        "ApplicationMasterService", appID, applicationAttemptId);
+  /**
+   * @param appAttemptId
+   * @return true if application is registered for the respective attemptid
+   */
+  public boolean hasApplicationMasterRegistered(
+      ApplicationAttemptId appAttemptId) {
+    boolean hasApplicationMasterRegistered = false;
+    AllocateResponse lastResponse = responseMap.get(appAttemptId);
+    if (lastResponse != null) {
+      synchronized (lastResponse) {
+        if (lastResponse.getResponseId() >= 0) {
+          hasApplicationMasterRegistered = true;
+        }
+      }
+    }
+    return hasApplicationMasterRegistered;
+  }
+
+    
+    if (!hasApplicationMasterRegistered(appAttemptId)) {
+      String message =
+          "Application Master is trying to allocate before registering for: "
+              + appAttemptId.getApplicationId();
+      LOG.error(message);
+      RMAuditLogger.logFailure(
+        this.rmContext.getRMApps().get(appAttemptId.getApplicationId())
+          .getUser(), AuditConstants.REGISTER_AM, "",
+        "ApplicationMasterService", message, appAttemptId.getApplicationId(),
+        appAttemptId);
+      throw new InvalidApplicationMasterRequestException(message);
+    }
+
-    response.setResponseId(0);
+    // set response id to -1 before application master for the following
+    // attemptID get registered
+    response.setResponseId(-1);

INS31 INS29 INS83 INS39 INS42 INS44 INS8 INS65 INS65 INS43 INS42 INS60 INS60 INS25 INS41 INS25 MOV21 MOV21 INS42 INS66 INS42 INS39 INS59 INS43 INS59 INS27 INS8 INS42 INS38 INS8 INS25 INS21 INS21 INS42 INS9 INS42 INS42 INS32 INS42 INS33 INS51 INS32 INS60 INS21 INS21 INS53 INS38 INS32 INS8 INS32 INS32 INS42 INS42 INS42 INS42 INS8 INS42 INS42 INS43 INS59 INS32 INS32 INS14 INS34 INS42 INS42 INS60 INS21 INS21 INS53 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS25 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS32 INS40 INS45 INS45 INS42 INS32 INS42 INS43 INS42 INS43 INS59 INS32 INS32 INS14 INS27 INS8 INS45 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS32 INS40 INS45 INS45 INS42 INS32 INS42 INS43 INS42 INS32 INS34 INS21 INS42 INS42 INS32 INS42 INS32 INS45 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS22 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS9 INS52 INS42 INS22 INS42 INS42 INS42 INS52 INS42 DEL34