MAPREDUCE-4691. Historyserver can report "Unknown job" after RM says job has completed. Contributed by Robert Joseph Evans.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1391671 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.HashMap;
-import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.ConcurrentMap;
-
+  
+  /**
+   * This class represents a user dir in the intermediate done directory.  This
+   * is mostly for locking purposes. 
+   */
+  private class UserLogDir {
+    long modTime = 0;
+    
+    public synchronized void scanIfNeeded(FileStatus fs) {
+      long newModTime = fs.getModificationTime();
+      if (modTime != newModTime) {
+        Path p = fs.getPath();
+        try {
+          scanIntermediateDirectory(p);
+          //If scanning fails, we will scan again.  We assume the failure is
+          // temporary.
+          modTime = newModTime;
+        } catch (IOException e) {
+          LOG.error("Error while trying to scan the directory " + p, e);
+        }
+      }
+    }
+  }
+  
-  private Map<String, Long> userDirModificationTimeMap = new HashMap<String, Long>();
+  private ConcurrentMap<String, UserLogDir> userDirModificationTimeMap = 
+    new ConcurrentHashMap<String, UserLogDir>();
-      long newModificationTime = userDir.getModificationTime();
-      boolean shouldScan = false;
-      synchronized (userDirModificationTimeMap) {
-        if (!userDirModificationTimeMap.containsKey(name)
-            || newModificationTime > userDirModificationTimeMap.get(name)) {
-          shouldScan = true;
-          userDirModificationTimeMap.put(name, newModificationTime);
+      UserLogDir dir = userDirModificationTimeMap.get(name);
+      if(dir == null) {
+        dir = new UserLogDir();
+        UserLogDir old = userDirModificationTimeMap.putIfAbsent(name, dir);
+        if(old != null) {
+          dir = old;
-      if (shouldScan) {
-        try {
-          scanIntermediateDirectory(userDir.getPath());
-        } catch (IOException e) {
-          LOG.error("Error while trying to scan the directory " 
-              + userDir.getPath(), e);
-        }
-      }
+      dir.scanIfNeeded(userDir);

MOV26 MOV26 UPD40 UPD40 INS55 INS29 INS83 INS42 INS23 INS31 UPD74 INS65 INS39 INS59 INS83 INS83 INS39 INS42 INS44 INS8 UPD43 MOV43 UPD43 INS66 INS66 INS42 INS34 INS43 INS42 INS60 INS25 UPD42 UPD42 UPD74 INS42 INS39 INS59 INS27 INS8 UPD43 MOV43 UPD43 INS25 MOV21 INS42 INS32 INS42 INS42 INS60 INS54 UPD42 UPD42 INS43 INS59 INS27 INS8 INS42 INS42 INS43 INS59 INS8 INS12 INS42 INS42 MOV32 UPD42 MOV42 INS33 MOV21 INS60 INS25 UPD42 UPD42 MOV42 INS42 INS42 INS32 INS21 INS21 MOV44 INS8 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS7 INS21 UPD42 INS14 INS42 INS42 INS32 INS42 INS33 MOV21 INS42 INS42 INS42 INS42 INS32 INS43 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 INS7 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS45 INS42 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL9 DEL42 DEL42 DEL42 DEL32 DEL32 DEL45 DEL42 DEL32 DEL27 DEL42 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL38 DEL27 DEL27 DEL32 DEL21 DEL8 DEL25 DEL8 DEL51 DEL42 DEL8 DEL8 DEL12 DEL54 DEL8 DEL25