YARN-3505. Node's Log Aggregation Report with SUCCEED should not cached in RMApps. Contributed by Xuan Gong.

+      boolean logAggregationSucceedInThisCycle = true;
+        logAggregationSucceedInThisCycle = false;
-      report.setNodeId(nodeId);
-      if (appFinished) {
-        report.setLogAggregationStatus(renameTemporaryLogFileFailed
-            ? LogAggregationStatus.FAILED : LogAggregationStatus.SUCCEEDED);
-      } else {
-        report.setLogAggregationStatus(LogAggregationStatus.RUNNING);
-      }
+      report.setLogAggregationStatus(logAggregationSucceedInThisCycle
+          ? LogAggregationStatus.RUNNING
+          : LogAggregationStatus.RUNNING_WITH_FAILURE);
+      if (appFinished) {
+        // If the app is finished, one extra final report with log aggregation
+        // status SUCCEEDED/FAILED will be sent to RM to inform the RM
+        // that the log aggregation in this NM is completed.
+        LogAggregationReport finalReport =
+            Records.newRecord(LogAggregationReport.class);
+        finalReport.setApplicationId(appId);
+        finalReport.setLogAggregationStatus(renameTemporaryLogFileFailed
+            ? LogAggregationStatus.FAILED : LogAggregationStatus.SUCCEEDED);
+        this.context.getLogAggregationStatusForApps().add(report);
+      }

MOV21 MOV25 INS60 INS39 INS59 INS42 INS9 UPD42 INS16 INS60 INS21 MOV21 INS21 INS42 INS40 INS40 INS43 INS59 INS32 INS32 INS7 INS42 INS42 INS32 INS42 INS42 INS42 UPD42 INS32 INS42 INS42 INS42 INS9 INS42 INS42 INS57 INS22 UPD42 MOV42 INS43 INS52 INS42 INS42 DEL42 DEL8 DEL42 DEL40 DEL32