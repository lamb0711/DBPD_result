HDFS-12335. Federation Metrics. Contributed by Inigo Goiri.

(cherry picked from commit 3b19e77752afce87936f5c0d1e6d272fba798d7b)

+import org.apache.hadoop.util.ReflectionUtils;
+  /** Monitor metrics for the RPC calls. */
+  private final RouterRpcMonitor rpcMonitor;
+
+    // Create metrics monitor
+    Class<? extends RouterRpcMonitor> rpcMonitorClass = this.conf.getClass(
+        DFSConfigKeys.DFS_ROUTER_METRICS_CLASS,
+        DFSConfigKeys.DFS_ROUTER_METRICS_CLASS_DEFAULT,
+        RouterRpcMonitor.class);
+    this.rpcMonitor = ReflectionUtils.newInstance(rpcMonitorClass, conf);
+
-        this.namenodeResolver);
+        this.namenodeResolver, this.rpcMonitor);
+
+    if (this.rpcMonitor == null) {
+      LOG.error("Cannot instantiate Router RPC metrics class");
+    } else {
+      this.rpcMonitor.init(this.conf, this, this.router.getStateStore());
+    }
+
+    if (rpcMonitor != null) {
+      this.rpcMonitor.close();
+    }
+   * Get the RPC monitor and metrics.
+   *
+   * @return RPC monitor and metrics.
+   */
+  public RouterRpcMonitor getRPCMonitor() {
+    return rpcMonitor;
+  }
+
+  /**
+      if (rpcMonitor != null) {
+        rpcMonitor.proxyOpNotImplemented();
+      }
+    if (rpcMonitor != null) {
+      rpcMonitor.startOp();
+    }
+    // Log the function we are currently calling.
-    // Check the location for this path
-    final PathLocation location =
-        this.subclusterResolver.getDestinationForPath(path);
-    if (location == null) {
-      throw new IOException("Cannot find locations for " + path + " in " +
-          this.subclusterResolver);
-    }
+    try {
+      // Check the location for this path
+      final PathLocation location =
+          this.subclusterResolver.getDestinationForPath(path);
+      if (location == null) {
+        throw new IOException("Cannot find locations for " + path + " in " +
+            this.subclusterResolver);
+      }
-    // Log the access to a path
-    return location.getDestinations();
+      return location.getDestinations();
+    } catch (IOException ioe) {
+      if (this.rpcMonitor != null) {
+        this.rpcMonitor.routerFailureStateStore();
+      }
+      throw ioe;
+    }

INS26 INS40 INS23 INS31 INS29 INS83 INS83 INS43 INS59 INS8 INS29 INS83 INS43 INS42 INS8 INS8 INS65 INS42 INS42 INS60 INS21 MOV21 INS25 MOV21 INS25 INS65 INS65 INS42 INS41 INS25 INS54 INS66 INS74 INS59 INS7 INS27 INS8 INS8 INS27 INS8 INS66 INS66 INS42 INS27 INS8 MOV8 INS12 INS43 INS76 INS42 INS32 INS22 INS32 INS22 INS33 INS21 INS21 INS42 INS33 INS21 INS25 INS42 INS33 INS21 INS44 INS8 INS42 INS43 INS22 INS42 INS40 INS40 INS57 INS52 INS42 INS42 INS42 INS42 INS42 INS22 INS52 INS42 INS32 INS32 INS32 INS27 INS8 INS32 INS43 INS42 INS25 INS53 INS42 INS52 INS42 INS43 INS52 INS42 INS42 INS42 INS45 INS22 INS42 INS22 INS52 INS32 INS22 INS42 INS42 INS33 INS21 INS42 INS42 INS42 INS27 INS8 INS42 INS42 INS52 INS42 INS52 INS42 INS22 INS42 INS52 INS42 INS32 INS22 INS33 INS21 INS52 INS42 INS42 INS42 INS52 INS42 INS32 INS22 INS42 INS52 INS42 DEL8