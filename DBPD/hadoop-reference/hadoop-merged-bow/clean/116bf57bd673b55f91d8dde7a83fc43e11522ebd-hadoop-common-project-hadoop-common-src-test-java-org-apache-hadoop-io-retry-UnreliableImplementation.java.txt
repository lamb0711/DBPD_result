HADOOP-7928. HA: Client failover policy is incorrectly trying to fail over all IOExceptions. Contributed by Aaron T. Myers.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1215019 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.io.retry.UnreliableInterface.UnreliableException;
-    IO_EXCEPTION
+    IO_EXCEPTION,
+    REMOTE_EXCEPTION
-      switch (exceptionToFailWith) {
-      case STANDBY_EXCEPTION:
-        throw new StandbyException(identifier);
-      case UNRELIABLE_EXCEPTION:
-        throw new UnreliableException(identifier);
-      case IO_EXCEPTION:
-        throw new IOException(identifier);
-      }
+      throwAppropriateException(exceptionToFailWith, identifier);
-      switch (exceptionToFailWith) {
-      case STANDBY_EXCEPTION:
-        throw new StandbyException(identifier);
-      case UNRELIABLE_EXCEPTION:
-        throw new UnreliableException(identifier);
-      case IO_EXCEPTION:
-        throw new IOException(identifier);
-      default:
-        throw new RuntimeException(identifier);
-      }
+      throwAppropriateException(exceptionToFailWith, identifier);
+      return null;
-      switch (exceptionToFailWith) {
-      case STANDBY_EXCEPTION:
-        throw new StandbyException(identifier);
-      case UNRELIABLE_EXCEPTION:
-        throw new UnreliableException(identifier);
-      case IO_EXCEPTION:
-        throw new IOException(identifier);
-      default:
-        throw new RuntimeException(identifier);
-      }
+      throwAppropriateException(exceptionToFailWith, identifier);
+      return null;
-      switch (exceptionToFailWith) {
-      case STANDBY_EXCEPTION:
-        throw new StandbyException(message);
-      case UNRELIABLE_EXCEPTION:
-        throw new UnreliableException(message);
-      case IO_EXCEPTION:
-        throw new IOException(message);
-      default:
-        throw new RuntimeException(message);
-      }
+      throwAppropriateException(exceptionToFailWith, message);
+      return null;
+  private static void throwAppropriateException(TypeOfExceptionToFailWith eType,
+      String message) throws UnreliableException, StandbyException, IOException {
+    switch (eType) {
+    case STANDBY_EXCEPTION:
+      throw new StandbyException(message);
+    case UNRELIABLE_EXCEPTION:
+      throw new UnreliableException(message);
+    case IO_EXCEPTION:
+      throw new IOException(message);
+    case REMOTE_EXCEPTION:
+      throw new RemoteException(IOException.class.getName(), message);
+    default:
+      throw new RuntimeException(message);
+    }
+  }

INS26 INS40 INS31 INS31 INS72 MOV78 MOV83 MOV43 MOV42 MOV43 MOV43 MOV43 INS8 INS83 INS83 INS39 INS42 INS44 INS44 MOV43 MOV43 MOV43 MOV8 INS42 INS25 INS43 INS42 INS43 INS42 MOV27 MOV8 INS8 INS8 INS42 UPD42 MOV42 INS42 INS49 INS53 INS21 INS21 INS41 INS21 INS41 MOV60 INS21 INS41 INS42 INS14 INS32 INS32 INS33 INS32 INS33 INS32 INS33 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS57 INS42 MOV43 DEL42 DEL42 DEL49 DEL42 DEL43 DEL42 DEL14 DEL53 DEL42 DEL49 DEL42 DEL43 DEL42 DEL14 DEL53 DEL42 DEL49 DEL42 DEL43 DEL42 DEL14 DEL53 DEL50 DEL42 DEL42 DEL49 DEL42 DEL43 DEL42 DEL14 DEL53 DEL42 DEL49 DEL42 DEL43 DEL42 DEL14 DEL53 DEL42 DEL49 DEL42 DEL14 DEL53 DEL49 DEL42 DEL43 DEL42 DEL14 DEL53 DEL50 DEL42 DEL42 DEL49 DEL42 DEL14 DEL53 DEL42 DEL49 DEL42 DEL14 DEL53 DEL42 DEL49 DEL42 DEL14 DEL53 DEL49 DEL43 DEL42 DEL14 DEL53 DEL50 DEL8 DEL25 DEL8 DEL31 DEL42