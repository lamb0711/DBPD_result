HADOOP-16430. S3AFilesystem.delete to incrementally update s3guard with deletions

Contributed by Steve Loughran.

This overlaps the scanning for directory entries with batched calls to S3 DELETE and updates of the S3Guard tables.
It also uses S3Guard to list the files to delete, so find newly created files even when S3 listings are not use consistent.

For path which the client considers S3Guard to be authoritative, we also do a recursive LIST of the store and delete files; this is to find unindexed files and do guarantee that the delete(path, true) call really does delete everything underneath.

Change-Id: Ice2f6e940c506e0b3a78fa534a99721b1698708e

+import org.apache.hadoop.fs.s3a.S3AFileStatus;
+  /**
+   * Get the owner of the filesystem.
+   * @return the user who created this filesystem.
+   */
+
+  /**
+   * Build the full S3 key for a request from the status entry,
+   * possibly adding a "/" if it represents directory and it does
+   * not have a trailing slash already.
+   * @param stat status to build the key from
+   * @return a key for a delete request
+   */
+  public String fullKey(final S3AFileStatus stat) {
+    String k = pathToKey(stat.getPath());
+    return (stat.isDirectory() && !k.endsWith("/"))
+        ? k + "/"
+        : k;
+  }

INS26 INS40 INS31 INS29 INS29 INS83 INS43 INS42 INS44 INS8 INS65 INS65 INS65 INS65 INS65 INS42 INS83 INS43 INS42 INS60 INS41 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS43 INS59 INS16 INS42 INS42 INS32 INS36 INS27 INS42 INS42 INS32 INS27 INS42 INS45 INS42 INS42 INS32 INS38 INS42 INS42 INS32 INS42 INS42 INS45