Merge branch 'trunk' into HDFS-6584

Conflicts:
	hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java

-  private void loadFSImage(StartupOption startOpt) throws IOException {
+  protected void loadFSImage(StartupOption startOpt) throws IOException {
-  private void startSecretManager() {
+  protected void startSecretManager() {
-  private void startSecretManagerIfNecessary() {
+  protected void startSecretManagerIfNecessary() {
-  private boolean shouldUseDelegationTokens() {
+  protected boolean shouldUseDelegationTokens() {
+  protected
+  protected
-  private INodeFile checkLease(String src, String holder, INode inode,
-                               long fileId)
+  protected INodeFile checkLease(String src, String holder, INode inode,
+                                 long fileId)
-  private void commitOrCompleteLastBlock(final INodeFile fileINode,
+  protected void commitOrCompleteLastBlock(final INodeFile fileINode,
+  protected
-  private void persistBlocks(String path, INodeFile file,
-                             boolean logRetryCache) {
+  protected void persistBlocks(String path, INodeFile file,
+                               boolean logRetryCache) {
-  private void persistNewBlock(String path, INodeFile file) {
+  protected void persistNewBlock(String path, INodeFile file) {
-  private boolean isAllowedDelegationTokenOp() throws IOException {
+  protected boolean isAllowedDelegationTokenOp() throws IOException {
-      Map<String, Object> innerinfo = ImmutableMap.<String, Object>builder()
+      info.put(node.getHostName(), getLiveNodeInfo(node));
+    }
+    return JSON.toString(info);
+  }
+
+  protected Map<String, Object> getLiveNodeInfo(DatanodeDescriptor node) {
+    return ImmutableMap.<String, Object>builder()
-
-      info.put(node.getHostName(), innerinfo);
-    }
-    return JSON.toString(info);
-
-  @VisibleForTesting
-  public SafeModeInfo getSafeModeInfoForTests() {
-    return safeMode;
-  }
+  public SafeModeInfo getSafeModeInfo() {
+    return safeMode;
+  }
+

MOV31 INS31 UPD83 UPD83 UPD83 UPD83 INS83 INS83 UPD83 UPD83 INS83 UPD83 UPD83 UPD83 MOV29 MOV78 INS83 MOV43 INS42 INS8 UPD83 MOV74 UPD42 MOV44 MOV8 UPD42 MOV60 MOV60 MOV21 INS70 MOV41 INS41 INS44 INS42 INS8 MOV32 INS43 INS42 INS21 INS42 INS32 INS42 INS42 MOV32 INS32 INS42 INS42 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL70 DEL8 DEL42 DEL78