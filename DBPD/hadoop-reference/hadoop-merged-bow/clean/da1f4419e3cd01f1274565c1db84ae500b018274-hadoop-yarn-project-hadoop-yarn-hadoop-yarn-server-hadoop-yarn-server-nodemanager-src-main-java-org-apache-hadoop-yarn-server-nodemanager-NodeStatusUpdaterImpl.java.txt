merge the rest of trunk to branch HDFS-4949

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1532967 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.util.VersionUtil;
+import org.apache.hadoop.yarn.util.YarnVersionInfo;
+  private String nodeManagerVersionId;
+  private String minimumResourceManagerVersion;
+
+    this.minimumResourceManagerVersion = conf.get(
+        YarnConfiguration.NM_RESOURCEMANAGER_MINIMUM_VERSION,
+        YarnConfiguration.DEFAULT_NM_RESOURCEMANAGER_MINIMUM_VERSION);
+    this.nodeManagerVersionId = YarnVersionInfo.getVersion();
+    request.setNMVersion(this.nodeManagerVersionId);
+    // if ResourceManager version is too old then shutdown
+    if (!minimumResourceManagerVersion.equals("NONE")){
+      if (minimumResourceManagerVersion.equals("EqualToNM")){
+        minimumResourceManagerVersion = nodeManagerVersionId;
+      }
+      String rmVersion = regNMResponse.getRMVersion();
+      if (rmVersion == null) {
+        String message = "The Resource Manager's did not return a version. "
+            + "Valid version cannot be checked.";
+        throw new YarnRuntimeException("Shutting down the Node Manager. "
+            + message);
+      }
+      if (VersionUtil.compareVersions(rmVersion,minimumResourceManagerVersion) < 0) {
+        String message = "The Resource Manager's version ("
+            + rmVersion +") is less than the minimum "
+            + "allowed version " + minimumResourceManagerVersion;
+        throw new YarnRuntimeException("Shutting down the Node Manager on RM "
+            + "version error, " + message);
+      }
+    }
-            if (containersToCleanup.size() != 0) {
+            if (!containersToCleanup.isEmpty()) {
-                  new CMgrCompletedContainersEvent(containersToCleanup, 
-                      CMgrCompletedContainersEvent.Reason.BY_RESOURCEMANAGER));
+                  new CMgrCompletedContainersEvent(containersToCleanup,
+                    CMgrCompletedContainersEvent.Reason.BY_RESOURCEMANAGER));
-            if (appsToCleanup.size() != 0) {
+            if (!appsToCleanup.isEmpty()) {
-                  new CMgrCompletedAppsEvent(appsToCleanup));
+                  new CMgrCompletedAppsEvent(appsToCleanup,
+                      CMgrCompletedAppsEvent.Reason.BY_RESOURCEMANAGER));

INS26 INS26 INS40 INS40 INS23 INS23 INS83 INS43 INS59 INS83 INS43 INS59 INS42 INS42 INS42 INS42 INS21 INS21 INS21 INS25 INS7 INS7 INS32 INS38 INS8 INS22 INS32 INS22 INS32 INS42 INS42 INS22 INS32 INS25 INS60 INS25 INS25 INS52 INS42 INS42 INS42 INS40 INS40 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS45 INS32 INS8 INS43 INS59 INS27 INS8 INS27 INS8 INS42 INS42 INS45 INS21 INS42 INS42 INS32 INS42 INS33 INS60 INS53 INS32 INS34 INS60 INS53 INS7 INS42 INS42 INS43 INS59 INS14 INS42 INS42 INS42 INS42 INS43 INS59 INS14 INS42 INS42 INS42 INS42 INS27 INS43 INS27 INS42 INS42 INS27 INS43 INS27 INS45 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS45 INS42 INS42 INS45 INS45 INS42 INS38 INS38 INS32 INS32 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 INS40 DEL32 DEL34 DEL27 DEL32 DEL34 DEL27