Merge trunk into auto-HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1327724 13f79535-47bb-0310-9956-ffa450edef68

-import java.net.InetSocketAddress;
+import java.net.URI;
+import java.util.Collection;
-import org.apache.hadoop.security.UserGroupInformation;
-  private static final DelegationTokenSelector INSTANCE = new DelegationTokenSelector();
-
-  /** Select the delegation token for hdfs from the ugi. */
-  public static Token<DelegationTokenIdentifier> selectHdfsDelegationToken(
-      final InetSocketAddress nnAddr, final UserGroupInformation ugi,
+  /**
+   * Select the delegation token for hdfs.  The port will be rewritten to
+   * the port of hdfs.service.host_$nnAddr, or the default rpc namenode port. 
+   * This method should only be called by non-hdfs filesystems that do not
+   * use the rpc port to acquire tokens.  Ex. webhdfs, hftp 
+   * @param nnUri of the remote namenode
+   * @param tokens as a collection
+   * @param conf hadoop configuration
+   * @return Token
+   */
+  public Token<DelegationTokenIdentifier> selectToken(
+      final URI nnUri, Collection<Token<?>> tokens,
-    final String key = SERVICE_NAME_KEY + SecurityUtil.buildTokenService(nnAddr);
-    final String nnServiceName = conf.get(key);
+    Text serviceName = SecurityUtil.buildTokenService(nnUri);
+    final String nnServiceName = conf.get(SERVICE_NAME_KEY + serviceName);
+    // use original hostname from the uri to avoid unintentional host resolving
+    serviceName = SecurityUtil.buildTokenService(
+    		NetUtils.createSocketAddrForHost(nnUri.getHost(), nnRpcPort));
-    final Text serviceName = SecurityUtil.buildTokenService(
-        new InetSocketAddress(nnAddr.getHostName(), nnRpcPort));
-    return INSTANCE.selectToken(serviceName, ugi.getTokens());
-  }
-  
-  public static Token<DelegationTokenIdentifier> selectHdfsDelegationToken(
-      Text serviceName, UserGroupInformation ugi) {
-    return INSTANCE.selectToken(serviceName, ugi.getTokens());
+    return selectToken(serviceName, tokens);

MOV26 UPD40 UPD40 INS31 INS29 MOV83 MOV74 UPD42 MOV42 MOV44 MOV44 MOV44 MOV8 INS65 INS65 INS65 INS65 UPD65 MOV65 UPD43 UPD42 INS74 INS42 INS21 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 UPD66 UPD42 INS43 INS74 MOV43 INS7 UPD42 MOV42 INS43 INS76 UPD42 INS32 INS42 INS32 UPD42 MOV42 INS42 MOV42 MOV42 UPD42 MOV42 INS27 MOV42 MOV42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 UPD42 MOV42 UPD42 MOV42 DEL83 DEL43 DEL42 DEL83 DEL42 DEL43 DEL42 DEL32 DEL27 DEL42 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL32 DEL42 DEL14 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL29 DEL83 DEL31 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL41 DEL8 DEL31