HDFS-4908. Reduce snapshot inode memory usage.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494858 13f79535-47bb-0310-9956-ffa450edef68

-      -40, -41, -42, -43};
+      -40, -41, -42, -43, -44, -45};
-        v.visitEnclosingElement(ImageElement.SNAPSHOT_DIFF_SNAPSHOTINODE);
-        processINode(in, v, true, currentINodeName, true);
+        v.visitEnclosingElement(ImageElement.SNAPSHOT_INODE_DIRECTORY_ATTRIBUTES);
+        if (LayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, imageVersion)) {
+          processINodeDirectoryAttributes(in, v, currentINodeName);
+        } else {
+          processINode(in, v, true, currentINodeName, true);
+        }
-  
+
+  private void processINodeDirectoryAttributes(DataInputStream in, ImageVisitor v,
+      String parentName) throws IOException {
+    final String pathName = readINodePath(in, parentName);
+    v.visit(ImageElement.INODE_PATH, pathName);
+    processPermission(in, v);
+    v.visit(ImageElement.MODIFICATION_TIME, formatDate(in.readLong()));
+
+    v.visit(ImageElement.NS_QUOTA, in.readLong());
+    v.visit(ImageElement.DS_QUOTA, in.readLong());
+  }
+
+  private String readINodePath(DataInputStream in, String parentName)
+      throws IOException {
+    String pathName = FSImageSerialization.readString(in);
+    if (parentName != null) {  // local name
+      pathName = "/" + pathName;
+      if (!"/".equals(parentName)) { // children of non-root directory
+        pathName = parentName + pathName;
+      }
+    }
+    return pathName;
+  }
+
-    String pathName = FSImageSerialization.readString(in);
-    if (parentName != null) {  // local name
-      pathName = "/" + pathName;
-      if (!"/".equals(parentName)) { // children of non-root directory
-        pathName = parentName + pathName;
-      }
-    }
+    final String pathName = readINodePath(in, parentName);
+    v.visit(ImageElement.INODE_PATH, pathName);
-    v.visit(ImageElement.INODE_PATH, pathName);
+
+  private void processINodeFileAttributes(DataInputStream in, ImageVisitor v,
+      String parentName) throws IOException {
+    final String pathName = readINodePath(in, parentName);
+    v.visit(ImageElement.INODE_PATH, pathName);
+    processPermission(in, v);
+    v.visit(ImageElement.MODIFICATION_TIME, formatDate(in.readLong()));
+    if(LayoutVersion.supports(Feature.FILE_ACCESS_TIME, imageVersion)) {
+      v.visit(ImageElement.ACCESS_TIME, formatDate(in.readLong()));
+    }
+
+    v.visit(ImageElement.REPLICATION, in.readShort());
+    v.visit(ImageElement.BLOCK_SIZE, in.readLong());
+  }
-      v.visitEnclosingElement(ImageElement.SNAPSHOT_DIFF_SNAPSHOTINODE);
-      processINode(in, v, true, currentINodeName, true);
+      v.visitEnclosingElement(ImageElement.SNAPSHOT_INODE_FILE_ATTRIBUTES);
+      if (LayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, imageVersion)) {
+        processINodeFileAttributes(in, v, currentINodeName);
+      } else {
+        processINode(in, v, true, currentINodeName, true);
+      }

INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS83 INS43 INS42 INS44 INS44 INS43 INS8 MOV60 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS21 INS21 INS21 INS21 INS21 INS42 INS43 INS42 INS43 INS42 INS42 MOV60 MOV25 INS41 INS60 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS21 INS21 INS21 INS25 INS21 INS21 INS38 INS38 INS42 INS42 INS42 INS83 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS83 INS43 INS59 INS42 INS42 INS42 INS83 INS43 INS59 INS32 INS32 INS32 INS32 INS8 INS32 INS32 INS8 INS34 INS34 INS42 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS42 INS21 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS32 INS21 INS25 MOV21 INS8 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS32 INS8 MOV8 INS21 INS25 MOV21 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS21 INS32 INS32 INS8 MOV8 INS42 INS32 INS32 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21