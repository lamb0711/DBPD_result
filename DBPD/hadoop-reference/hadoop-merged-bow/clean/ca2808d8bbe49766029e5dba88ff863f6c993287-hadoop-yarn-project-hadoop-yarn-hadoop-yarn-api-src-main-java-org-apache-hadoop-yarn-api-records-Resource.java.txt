YARN-6761. Fix build for YARN-3926 branch. Contributed by Varun Vasudev.

+import java.util.Collections;
+import java.util.HashMap;
+  private static Resource tmpResource = Records.newRecord(Resource.class);
+
+    private Map<String, ResourceInformation> resourceInformationMap;
+
+
+    @Override
+    public Map<String, ResourceInformation> getResources() {
+      if (resourceInformationMap == null) {
+        resourceInformationMap = new HashMap<>();
+        resourceInformationMap.put(ResourceInformation.MEMORY_MB.getName(),
+            ResourceInformation.newInstance(ResourceInformation.MEMORY_MB));
+        resourceInformationMap.put(ResourceInformation.VCORES.getName(),
+            ResourceInformation.newInstance(ResourceInformation.VCORES));
+      }
+      resourceInformationMap.get(ResourceInformation.MEMORY_MB.getName())
+          .setValue(this.memory);
+      resourceInformationMap.get(ResourceInformation.VCORES.getName())
+          .setValue(this.vcores);
+      return Collections.unmodifiableMap(resourceInformationMap);
+    }
+    if (tmpResource.getResources().size() > 2) {
+      Resource ret = Records.newRecord(Resource.class);
+      ret.setMemorySize(memory);
+      ret.setVirtualCores(vCores);
+      return ret;
+    }
+    if (tmpResource.getResources().size() > 2) {
+      Resource ret = Records.newRecord(Resource.class);
+      ret.setMemorySize(memory);
+      ret.setVirtualCores(vCores);
+      return ret;
+    }
-      try {
-        ResourceInformation.copy(entry.getValue(),
-            dest.getResourceInformation(entry.getKey()));
-      } catch (YarnException ye) {
-        dest.setResourceInformation(entry.getKey(),
-            ResourceInformation.newInstance(entry.getValue()));
-      }
+      dest.setResourceInformation(entry.getKey(), entry.getValue());
-  public abstract ResourceInformation getResourceInformation(String resource)
-      throws YarnException;
+  public ResourceInformation getResourceInformation(String resource)
+      throws YarnException {
+    if (getResources().containsKey(resource)) {
+      return getResources().get(resource);
+    }
+    throw new YarnException(
+        "Unknown resource '" + resource + "'. Known resources are "
+            + getResources().keySet());
+  }
-  public abstract Long getResourceValue(String resource) throws YarnException;
+  public Long getResourceValue(String resource) throws YarnException {
+    if (getResources().containsKey(resource)) {
+      return getResources().get(resource).getValue();
+    }
+    throw new YarnException(
+        "Unknown resource '" + resource + "'. Known resources are "
+            + getResources().keySet());
+  }
-  public abstract void setResourceInformation(String resource,
-      ResourceInformation resourceInformation) throws ResourceNotFoundException;
+  public void setResourceInformation(String resource,
+      ResourceInformation resourceInformation) throws ResourceNotFoundException {
+    if (resource.equals(ResourceInformation.MEMORY_MB.getName())) {
+      this.setMemorySize(resourceInformation.getValue());
+      return;
+    }
+    if (resource.equals(ResourceInformation.VCORES.getName())) {
+      this.setVirtualCores((int) resourceInformation.getValue());
+      return;
+    }
+    if (getResources().containsKey(resource)) {
+      ResourceInformation
+          .copy(resourceInformation, getResources().get(resource));
+      return;
+    }
+    throw new ResourceNotFoundException(
+        "Unknown resource '" + resource + "'. Known resources are "
+            + getResources().keySet());
+  }
-  public abstract void setResourceValue(String resource, Long value)
-      throws ResourceNotFoundException;
+  public void setResourceValue(String resource, Long value)
+      throws ResourceNotFoundException {
+    if (resource.equals(ResourceInformation.MEMORY_MB.getName())) {
+      this.setMemorySize(value);
+      return;
+    }
+    if (resource.equals(ResourceInformation.VCORES.getName())) {
+      this.setVirtualCores(value.intValue());
+      return;
+    }
+    if (getResources().containsKey(resource)) {
+      getResources().get(resource).setValue(value);
+      return;
+    }
+    throw new ResourceNotFoundException(
+        "Unknown resource '" + resource + "'. Known resources are "
+            + getResources().keySet());
+  }
-  public int compareTo(Resource other) {
-    long diff = this.getMemorySize() - other.getMemorySize();
-    if (diff == 0) {
-      diff = this.getVirtualCores() - other.getVirtualCores();
-    }
-    return diff == 0 ? 0 : (diff > 0 ? 1 : -1);
-  }
-
-  @Override

INS26 INS26 INS40 INS40 INS23 INS31 INS83 INS83 INS43 INS59 INS23 INS31 INS8 INS8 INS8 INS8 INS8 MOV29 MOV78 MOV78 MOV83 MOV39 MOV42 MOV44 MOV44 MOV43 INS8 INS42 INS42 INS32 INS83 INS74 INS59 MOV78 INS83 INS74 INS42 INS8 INS25 MOV41 INS25 MOV41 INS25 INS53 INS25 INS53 INS25 INS25 INS25 INS53 INS25 INS25 MOV25 INS53 INS42 INS42 INS57 INS43 INS43 INS43 INS42 INS43 INS43 INS43 INS25 INS21 INS21 INS41 INS27 INS8 INS27 INS8 MOV8 INS32 INS8 INS14 INS32 INS8 INS14 INS32 INS8 INS32 INS8 INS32 INS8 INS14 INS32 INS8 INS32 INS8 INS32 INS14 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS8 INS32 INS32 INS32 INS32 INS34 INS60 INS21 INS21 INS41 INS32 INS34 INS60 INS21 INS21 INS41 INS32 INS42 INS42 INS41 MOV43 INS27 INS32 INS42 INS42 INS41 INS43 INS27 INS42 INS42 INS32 INS21 INS41 INS42 INS42 INS32 INS21 INS41 INS32 INS42 INS42 INS21 INS41 INS43 INS27 INS42 INS42 INS32 INS21 INS41 UPD42 MOV42 INS42 INS32 INS21 INS41 INS32 INS42 INS42 INS41 INS43 INS27 INS42 INS42 INS33 INS21 INS21 INS21 INS32 INS42 INS22 INS32 INS42 INS22 INS42 INS42 INS42 INS32 INS42 INS43 INS59 INS32 INS32 INS42 INS32 INS42 INS43 INS59 INS32 INS32 INS42 MOV32 INS42 INS32 INS45 INS42 INS45 INS32 INS42 INS32 INS42 INS45 INS42 INS45 INS32 INS40 INS42 INS32 INS40 INS42 INS32 INS42 INS32 INS42 INS45 INS42 INS45 INS32 INS40 INS42 INS32 INS40 UPD42 MOV42 INS32 INS42 INS32 INS42 INS45 UPD42 MOV42 INS45 INS32 INS7 INS32 INS32 INS42 INS42 INS32 INS52 INS42 INS42 INS42 INS32 INS52 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 MOV32 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS52 INS42 INS32 INS52 INS42 INS11 INS42 INS42 INS42 INS32 INS32 INS42 MOV52 UPD42 MOV42 INS42 INS52 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 INS40 INS42 INS40 INS42 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS39 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS74 INS40 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS40 INS43 MOV43 INS42 INS42 INS42 INS42 UPD42 MOV42 INS43 INS42 INS42 DEL8 DEL8 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL8 DEL42 DEL44 DEL12 DEL54 DEL8 DEL83 DEL83 DEL83 DEL42 DEL34 DEL27 DEL42 DEL52 DEL32 DEL32 DEL27 DEL7 DEL83 DEL31 DEL83 DEL39 DEL42 DEL42 DEL44 DEL39 DEL42 DEL32 DEL32 DEL27 DEL59 DEL60 DEL42 DEL34 DEL27 DEL34 DEL34 DEL27 DEL34 DEL34 DEL38 DEL16 DEL36 DEL16 DEL41 DEL8 DEL31