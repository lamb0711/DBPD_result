Merging trunk to HDFS-1623 branch.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1179484 13f79535-47bb-0310-9956-ffa450edef68

+import static org.apache.hadoop.yarn.server.resourcemanager.webapp.RMWebApp.NODE_STATE;
+import org.apache.hadoop.util.StringUtils;
+import org.apache.hadoop.yarn.api.records.NodeId;
+import org.apache.hadoop.yarn.server.resourcemanager.ResourceManager;
+import org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNodeState;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceScheduler;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNodeReport;
+    private static final long BYTES_IN_MB = 1024 * 1024;
+    final ResourceManager rm;
-    NodesBlock(RMContext context, ViewContext ctx) {
+    NodesBlock(RMContext context, ResourceManager rm, ViewContext ctx) {
+      this.rm = rm;
+      html._(MetricsOverviewTable.class);
+      
+      ResourceScheduler sched = rm.getResourceScheduler();
+      String type = $(NODE_STATE);
+          th(".state", "Node State").
-//          th(".mem", "Mem Used (MB)").
-//          th(".mem", "Mem Avail (MB)").
+          th(".mem", "Mem Used").
+          th(".mem", "Mem Avail").
+      RMNodeState stateFilter = null;
+      if(type != null && !type.isEmpty()) {
+        stateFilter = RMNodeState.valueOf(type.toUpperCase());
+      }
+        if(stateFilter != null) {
+          RMNodeState state = ni.getState();
+          if(!stateFilter.equals(state)) {
+            continue;
+          }
+        }
+        NodeId id = ni.getNodeID();
+        SchedulerNodeReport report = sched.getNodeReport(id);
+        int numContainers = 0;
+        int usedMemory = 0;
+        int availableMemory = 0;
+        if(report != null) {
+          numContainers = report.getNumContainers();
+          usedMemory = report.getUsedResource().getMemory();
+          availableMemory = report.getAvailableResource().getMemory();
+        }
+
+            td(String.valueOf(ni.getState())).
-            // TODO: acm: refactor2 FIXME
-            //td(String.valueOf(ni.getNumContainers())).
-            // TODO: FIXME Vinodkv
-//            td(String.valueOf(ni.getUsedResource().getMemory())).
-//            td(String.valueOf(ni.getAvailableResource().getMemory())).
-            td("n/a")._();
+            td(String.valueOf(numContainers)).
+            td().br().$title(String.valueOf(usedMemory))._().
+              _(StringUtils.byteDesc(usedMemory * BYTES_IN_MB))._().
+            td().br().$title(String.valueOf(usedMemory))._().
+              _(StringUtils.byteDesc(availableMemory * BYTES_IN_MB))._().
+            _();
-    setTitle("Nodes of the cluster");
+    String type = $(NODE_STATE);
+    String title = "Nodes of the cluster";
+    if(type != null && !type.isEmpty()) {
+      title = title+" ("+type+")";
+    }
+    setTitle(title);
-    return tableInit().
-        // rack, nodeid, host, healthStatus, health update ts, health report,
-        // containers, memused, memavail
-        append(", aoColumns:[null, null, null, null, null, null, ").
-        append("{sType:'title-numeric', bSearchable:false}]}").
-        toString();
+    StringBuilder b = tableInit().append(",aoColumnDefs:[");
+    b.append("{'bSearchable':false, 'aTargets': [7]} ,");
+    b.append("{'sType':'title-numeric', 'bSearchable':false, " +
+    		"'aTargets': [ 8, 9] }]}");
+    return b.toString();

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS83 INS83 INS83 INS39 INS59 INS83 INS43 INS59 INS44 INS60 INS60 INS25 INS60 INS21 INS21 INS41 INS42 INS27 INS42 INS42 INS43 INS42 INS21 INS21 INS60 INS60 INS60 INS25 INS43 INS59 INS43 INS59 INS27 INS8 INS43 INS59 INS32 INS32 INS32 INS34 INS34 INS42 INS7 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS45 INS27 INS38 INS21 INS42 INS42 INS42 MOV32 INS42 INS42 INS45 INS42 MOV42 INS27 INS42 MOV42 INS22 INS42 INS42 INS42 INS57 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS33 INS27 INS38 INS21 INS25 INS60 INS60 INS60 INS60 INS60 INS25 INS42 INS42 INS42 INS33 INS32 INS7 UPD45 INS45 INS45 INS52 INS42 INS43 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS33 INS32 INS7 INS27 INS8 INS43 INS59 INS43 INS59 INS39 INS59 INS39 INS59 INS39 INS59 INS27 INS8 INS32 INS42 INS42 INS42 INS27 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS60 INS25 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS33 INS21 INS21 INS21 INS32 INS42 INS42 INS45 INS42 INS45 MOV32 INS42 INS42 INS42 INS32 INS43 INS59 INS38 INS8 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS7 INS32 INS42 UPD42 INS45 INS45 INS42 INS42 INS42 INS42 INS32 INS32 INS18 INS42 INS32 INS42 INS32 INS42 INS32 INS32 INS42 INS32 UPD42 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS27 UPD42 INS45 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 UPD45 UPD45 INS32 INS42 INS42 INS42 INS42 UPD45 UPD45 INS32 INS42 UPD45 UPD45 INS32 INS42 UPD45 UPD45 INS32 INS42 INS32 UPD45 UPD45 INS32 INS42 INS42 INS42 INS27 UPD45 UPD45 INS32 INS42 INS32 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 UPD42 INS32 INS42 INS42 INS42 INS32 INS42 MOV32 MOV42 INS32 INS42 INS42 INS32 INS42 INS42 DEL45 DEL45 DEL45 DEL32 DEL32 DEL41