HDFS-13042. RBF: Heartbeat Router State. Contributed by Inigo Goiri.

+import org.apache.hadoop.hdfs.server.federation.store.RouterStore;
+import org.apache.hadoop.util.Time;
+  /** Manages the current state of the router. */
+  private RouterStore routerStateManager;
+  /** Heartbeat our run status to the router state manager. */
+  private RouterHeartbeatService routerHeartbeatService;
+
+  /** The start time of the namesystem. */
+  private final long startTime = Time.now();
+
+  /** State of the Router. */
+  private RouterServiceState state = RouterServiceState.UNINITIALIZED;
+
+
+    updateRouterState(RouterServiceState.INITIALIZING);
+
+      // Periodically update the router state
+      this.routerHeartbeatService = new RouterHeartbeatService(this);
+      addService(this.routerHeartbeatService);
+    updateRouterState(RouterServiceState.RUNNING);
+
+    // Update state
+    updateRouterState(RouterServiceState.SHUTDOWN);
+
+  // Router State Management
+  /////////////////////////////////////////////////////////
+
+  /**
+   * Update the router state and heartbeat to the state store.
+   *
+   * @param state The new router state.
+   */
+  public void updateRouterState(RouterServiceState newState) {
+    this.state = newState;
+    if (this.routerHeartbeatService != null) {
+      this.routerHeartbeatService.updateStateAsync();
+    }
+  }
+
+  /**
+   * Get the status of the router.
+   *
+   * @return Status of the router.
+   */
+  public RouterServiceState getRouterState() {
+    return this.state;
+  }
+
+  /////////////////////////////////////////////////////////
+  /**
+   * Get the state store interface for the router heartbeats.
+   *
+   * @return FederationRouterStateStore state store API handle.
+   */
+  public RouterStore getRouterStateManager() {
+    if (this.routerStateManager == null && this.stateStore != null) {
+      this.routerStateManager = this.stateStore.getRegisteredRecordStore(
+          RouterStore.class);
+    }
+    return this.routerStateManager;
+  }
+
+   * Get the start date of the Router.
+   *
+   * @return Start date of the router.
+   */
+  public long getStartTime() {
+    return this.startTime;
+  }
+
+  /**

INS26 INS26 INS40 INS40 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS83 INS39 INS59 INS29 INS83 INS43 INS59 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS65 INS42 INS42 INS65 INS42 INS42 INS65 INS42 INS32 INS65 INS42 INS42 INS40 INS21 INS21 INS21 INS65 INS65 INS43 INS42 INS21 INS25 INS65 INS65 INS42 INS41 INS65 INS65 INS42 INS25 INS41 INS65 INS65 INS41 INS66 INS66 INS66 INS42 INS42 INS66 INS32 INS32 INS32 INS66 INS42 INS66 INS42 INS7 INS27 INS8 INS66 INS66 INS22 INS66 INS66 INS27 INS8 INS22 INS66 INS66 INS22 INS42 INS40 INS21 INS21 INS42 INS40 INS42 INS40 INS22 INS42 INS22 INS33 INS21 INS52 INS42 INS27 INS27 INS21 INS52 INS42 INS52 INS42 INS7 INS32 INS52 INS42 INS52 INS42 INS32 INS22 INS33 INS22 INS33 INS7 INS22 INS14 INS42 INS22 INS22 INS42 INS52 INS42 INS52 INS42 INS22 INS32 INS52 INS42 INS43 INS52 INS52 INS42 INS52 INS42 INS52 INS42 INS22 INS42 INS57 INS42 INS52 INS42 INS43 INS42