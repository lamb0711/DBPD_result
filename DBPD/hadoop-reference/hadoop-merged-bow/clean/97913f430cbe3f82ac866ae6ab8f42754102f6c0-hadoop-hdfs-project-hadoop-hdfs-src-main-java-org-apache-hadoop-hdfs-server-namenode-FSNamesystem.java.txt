HDFS-9231. fsck doesn't list correct file path when Bad Replicas/Blocks are in a snapshot. (Xiao Chen via Yongjun Zhang)

+import org.apache.hadoop.hdfs.protocol.SnapshotException;
+import org.apache.hadoop.hdfs.server.namenode.snapshot.DirectorySnapshottableFeature;
+  @Override  // NameNodeMXBean
+  public long getNumberOfSnapshottableDirs() {
+    return snapshotManager.getNumSnapshottableDirs();
+  }
+
+  /**
+   * Get the list of corrupt blocks and corresponding full file path
+   * including snapshots in given snapshottable directories.
+   * @param path Restrict corrupt files to this portion of namespace.
+   * @param snapshottableDirs Snapshottable directories. Passing in null
+   *                          will only return corrupt blocks in non-snapshots.
+   * @param cookieTab Support for continuation; cookieTab tells where
+   *                  to start from.
+   * @return a list in which each entry describes a corrupt file/block
+   * @throws IOException
+   */
+  List<String> listCorruptFileBlocksWithSnapshot(String path,
+      List<String> snapshottableDirs, String[] cookieTab) throws IOException {
+    final Collection<CorruptFileBlockInfo> corruptFileBlocks =
+        listCorruptFileBlocks(path, cookieTab);
+    List<String> list = new ArrayList<String>();
+
+    // Precalculate snapshottableFeature list
+    List<DirectorySnapshottableFeature> lsf = new ArrayList<>();
+    if (snapshottableDirs != null) {
+      for (String snap : snapshottableDirs) {
+        final INode isnap = getFSDirectory().getINode(snap, false);
+        final DirectorySnapshottableFeature sf =
+            isnap.asDirectory().getDirectorySnapshottableFeature();
+        if (sf == null) {
+          throw new SnapshotException(
+              "Directory is not a snapshottable directory: " + snap);
+        }
+        lsf.add(sf);
+      }
+    }
+
+    for (CorruptFileBlockInfo c : corruptFileBlocks) {
+      if (getFileInfo(c.path, true) != null) {
+        list.add(c.toString());
+      }
+      final Collection<String> snaps = FSDirSnapshotOp
+          .getSnapshotFiles(getFSDirectory(), lsf, c.path);
+      if (snaps != null) {
+        for (String snap : snaps) {
+          // follow the syntax of CorruptFileBlockInfo#toString()
+          list.add(c.block.getBlockName() + "\t" + snap);
+        }
+      }
+    }
+    return list;
+  }
+
+  /**
+   * Get the list of snapshottable directories.
+   * @return The list of all the current snapshottable directories
+   * @see #getSnapshottableDirListing()
+   * @throws IOException
+   */
+  List<String> getSnapshottableDirs() throws IOException {
+    List<String> snapshottableDirs = new ArrayList<String>();
+    final FSPermissionChecker pc = getFSDirectory().getPermissionChecker();
+    final String user = pc.isSuperUser() ? null : pc.getUser();
+    final SnapshottableDirectoryStatus[] snapDirs =
+        snapshotManager.getSnapshottableDirListing(user);
+    if (snapDirs != null) {
+      for (SnapshottableDirectoryStatus sds : snapDirs) {
+        snapshottableDirs.add(sds.getFullPath().toString());
+      }
+    }
+    return snapshottableDirs;
+  }
+

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS78 INS83 INS39 INS42 INS8 INS29 INS74 INS42 INS44 INS44 INS44 INS43 INS8 INS29 INS74 INS42 INS43 INS8 INS42 INS41 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS43 INS43 INS42 INS74 INS42 INS5 INS42 INS42 INS60 INS60 INS60 INS25 INS70 INS41 INS65 INS65 INS65 INS65 INS43 INS43 INS42 INS60 INS60 INS60 INS60 INS25 INS41 INS32 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS66 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS85 INS83 INS74 INS59 INS74 INS59 INS74 INS59 INS27 INS8 INS44 INS42 INS8 INS42 INS66 INS66 INS68 INS42 INS42 INS42 INS74 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS5 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS14 INS43 INS43 INS42 INS14 INS42 INS33 INS70 INS43 INS42 INS25 INS60 INS25 INS42 INS43 INS43 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS16 INS43 INS85 INS42 INS32 INS42 INS33 INS70 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS74 INS44 INS42 INS8 INS42 INS27 INS8 INS83 INS74 INS59 INS27 INS8 INS42 INS42 INS74 INS32 INS42 INS32 INS33 INS32 INS42 INS42 INS42 INS42 INS44 INS42 INS8 INS43 INS43 INS43 INS43 INS42 INS60 INS60 INS25 INS21 INS32 INS33 INS21 INS43 INS43 INS42 INS32 INS42 INS33 INS70 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS83 INS43 INS59 INS83 INS43 INS59 INS27 INS8 INS32 INS42 INS40 INS9 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS40 INS44 INS42 INS8 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS53 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS42 INS21 INS42 INS42 INS32 INS32 INS42 INS42 INS9 INS32 INS42 INS14 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS27 INS42 INS42 INS42 INS45 INS42 INS32 INS45 INS42 INS40 INS42