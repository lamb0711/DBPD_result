YARN-7677. Docker image cannot set HADOOP_CONF_DIR. Contributed by Jim Brennan

+import java.util.LinkedHashSet;
+   * @param nmVars the set of environment vars that are explicitly set by NM
-      String user) throws IOException {
+      String user, LinkedHashSet<String> nmVars) throws IOException {
-        ContainerLaunch.CONTAINER_SCRIPT);
+        ContainerLaunch.CONTAINER_SCRIPT, nmVars);
+   * @param nmVars the set of environment vars that are explicitly set by NM
-      String user, String outFilename) throws IOException {
-    updateEnvForWhitelistVars(environment);
+      String user, String outFilename, LinkedHashSet<String> nmVars)
+      throws IOException {
+      // Whitelist environment variables are treated specially.
+      // Only add them if they are not already defined in the environment.
+      // Add them using special syntax to prevent them from eclipsing
+      // variables that may be set explicitly in the container image (e.g,
+      // in a docker image).  Put these before the others to ensure the
+      // correct expansion is used.
+      for(String var : whitelistVars) {
+        if (!environment.containsKey(var)) {
+          String val = getNMEnvVar(var);
+          if (val != null) {
+            sb.whitelistedEnv(var, val);
+          }
+        }
+      }
+      // Now write vars that were set explicitly by nodemanager, preserving
+      // the order they were written in.
+      for (String nmEnvVar : nmVars) {
+        sb.env(nmEnvVar, environment.get(nmEnvVar));
+      }
+      // Now write the remaining environment variables.
-          sb.orderEnvByDependencies(environment).entrySet()) {
-        sb.env(env.getKey(), env.getValue());
+           sb.orderEnvByDependencies(environment).entrySet()) {
+        if (!nmVars.contains(env.getKey())) {
+          sb.env(env.getKey(), env.getValue());
+        }
+      }
+      // Add the whitelist vars to the environment.  Do this after writing
+      // environment variables so they are not written twice.
+      for(String var : whitelistVars) {
+        if (!environment.containsKey(var)) {
+          String val = getNMEnvVar(var);
+          if (val != null) {
+            environment.put(var, val);
+          }
+        }
-  /**
-   * Propagate variables from the nodemanager's environment into the
-   * container's environment if unspecified by the container.
-   * @param env the environment to update
-   * @see org.apache.hadoop.yarn.conf.YarnConfiguration#NM_ENV_WHITELIST
-   */
-  protected void updateEnvForWhitelistVars(Map<String, String> env) {
-    for(String var : whitelistVars) {
-      if (!env.containsKey(var)) {
-        String val = getNMEnvVar(var);
-        if (val != null) {
-          env.put(var, val);
-        }
-      }
-    }
-  }
-

INS26 INS40 INS44 INS44 INS65 INS74 INS42 INS65 INS74 INS42 INS25 INS42 INS66 INS43 MOV43 INS42 INS66 INS43 MOV43 MOV27 INS8 INS42 INS42 INS42 MOV21 INS70 INS70 MOV70 INS70 INS44 INS42 INS8 INS44 INS42 INS8 INS8 MOV44 INS42 INS8 INS43 INS42 INS25 INS43 INS42 MOV21 INS25 INS25 INS42 INS38 INS8 INS42 INS38 MOV8 INS38 INS8 INS32 INS60 INS25 INS42 INS42 UPD42 INS32 INS32 INS32 MOV60 MOV25 INS42 INS42 INS42 INS43 INS59 INS27 INS8 MOV42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 MOV27 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS21 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL40 DEL42 DEL67 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL70 DEL8 DEL31