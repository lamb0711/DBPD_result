HDFS-2634. Standby needs to ingest latest edit logs before transitioning to active. Contributed by Todd Lipcon.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1212187 13f79535-47bb-0310-9956-ffa450edef68

+import com.google.common.base.Preconditions;
+  private final FSNamesystem namesystem;
+  private final FSImage image;
+  private final FSEditLog editLog;
+  
-    this.tailerThread = new EditLogTailerThread(namesystem);
+    this.tailerThread = new EditLogTailerThread();
+    this.namesystem = namesystem;
+    this.image = namesystem.getFSImage();
+    this.editLog = namesystem.getEditLog();
+  
+  public void catchupDuringFailover() throws IOException {
+    Preconditions.checkState(tailerThread == null ||
+        !tailerThread.isAlive(),
+        "Tailer thread should not be running once failover starts");
+    doTailEdits();
+  }
+  
+  private void doTailEdits() throws IOException {
+    // TODO(HA) in a transition from active to standby,
+    // the following is wrong and ends up causing all of the
+    // last log segment to get re-read
+    long lastTxnId = image.getLastAppliedTxId();
+    
+    if (LOG.isDebugEnabled()) {
+      LOG.debug("lastTxnId: " + lastTxnId);
+    }
+    Collection<EditLogInputStream> streams = editLog
+        .selectInputStreams(lastTxnId + 1, 0, false);
+    if (LOG.isDebugEnabled()) {
+      LOG.debug("edit streams to load from: " + streams.size());
+    }
+    
+    long editsLoaded = image.loadEdits(streams, namesystem);
+    if (LOG.isDebugEnabled()) {
+      LOG.debug("editsLoaded: " + editsLoaded);
+    }
+  }
-  private static class EditLogTailerThread extends Thread {
-
-    private FSNamesystem namesystem;
-    private FSImage image;
-    private FSEditLog editLog;
-    
+  private class EditLogTailerThread extends Thread {
-    private EditLogTailerThread(FSNamesystem namesystem) {
+    private EditLogTailerThread() {
-      this.namesystem = namesystem;
-      image = namesystem.getFSImage();
-      editLog = namesystem.getEditLog();
-          long lastTxnId = image.getLastAppliedTxId();
-          
-          if (LOG.isDebugEnabled()) {
-            LOG.debug("lastTxnId: " + lastTxnId);
-          }
-            // At least one record should be available.
-            Collection<EditLogInputStream> streams = editLog
-                .selectInputStreams(lastTxnId + 1, lastTxnId + 1, false);
-            if (LOG.isDebugEnabled()) {
-              LOG.debug("edit streams to load from: " + streams.size());
-            }
-            
-            long editsLoaded = image.loadEdits(streams, namesystem);
-            if (LOG.isDebugEnabled()) {
-              LOG.debug("editsLoaded: " + editsLoaded);
-            }
+            doTailEdits();

INS26 MOV55 INS40 MOV29 MOV78 MOV78 INS83 INS42 MOV23 MOV23 MOV31 MOV31 MOV31 MOV31 INS31 INS55 INS83 INS83 INS83 UPD83 UPD42 INS83 INS39 INS42 INS43 INS8 UPD83 INS42 INS43 MOV8 MOV29 MOV83 INS42 MOV43 MOV23 MOV23 INS31 MOV31 MOV31 INS31 MOV21 INS42 INS21 INS21 INS42 MOV60 MOV25 INS83 INS42 INS8 MOV78 INS83 INS39 INS42 MOV8 INS32 INS32 MOV46 INS22 INS22 INS42 INS42 INS27 INS45 INS42 INS52 INS42 INS52 INS42 INS27 INS38 INS34 INS42 INS33 INS32 INS42 INS42 INS8 INS21 INS32 INS42 DEL83 DEL42 DEL42 DEL42 DEL42 DEL42 DEL34 DEL27 DEL42 DEL83 DEL42 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL8 DEL31 DEL55