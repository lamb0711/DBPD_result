YARN-6815. FederationStateStoreFacade return behavior should be consistent irrespective of whether caching is enabled or not.

(cherry picked from commit 8820693cd769065eed83193b673ec5d919d69500)

-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.apache.hadoop.yarn.server.federation.policies.amrmproxy.LocalityMulticastAMRMProxyPolicy;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
-  private static final Log LOG =
-      LogFactory.getLog(LocalityMulticastAMRMProxyPolicy.class);
+  private static final Logger LOG =
+      LoggerFactory.getLogger(RouterPolicyFacade.class);
-    String defaulKey = YarnConfiguration.DEFAULT_FEDERATION_POLICY_KEY;
+    String defaultKey = YarnConfiguration.DEFAULT_FEDERATION_POLICY_KEY;
-      configuration = federationFacade.getPolicyConfiguration(defaulKey);
+      configuration = federationFacade.getPolicyConfiguration(defaultKey);
-      configuration = SubClusterPolicyConfiguration.newInstance(defaulKey,
+      configuration = SubClusterPolicyConfiguration.newInstance(defaultKey,
-    fallbackPolicyManager.setQueue(defaulKey);
+    fallbackPolicyManager.setQueue(defaultKey);
-    globalConfMap.put(defaulKey,
+    globalConfMap.put(defaultKey,
-    globalPolicyMap.put(defaulKey,
+    globalPolicyMap.put(defaultKey,
-      LOG.debug(e);
+      String errMsg = "There is no policy configured for the queue: " + queue
+          + ", falling back to defaults.";
+      LOG.warn(errMsg, e);
-      try {
-        LOG.warn("There is no policies configured for queue: " + queue + " we"
-            + " fallback to default policy for: "
-            + YarnConfiguration.DEFAULT_FEDERATION_POLICY_KEY);
+      LOG.warn("There is no policies configured for queue: " + queue + " we"
+          + " fallback to default policy for: "
+          + YarnConfiguration.DEFAULT_FEDERATION_POLICY_KEY);
-        queue = YarnConfiguration.DEFAULT_FEDERATION_POLICY_KEY;
-        configuration = federationFacade.getPolicyConfiguration(
-            YarnConfiguration.DEFAULT_FEDERATION_POLICY_KEY);
+      queue = YarnConfiguration.DEFAULT_FEDERATION_POLICY_KEY;
+      try {
+        configuration = federationFacade.getPolicyConfiguration(queue);
-        // the fallback is not configure via store, but via XML, using
-        // previously loaded configuration.
-        configuration =
-            cachedConfs.get(YarnConfiguration.DEFAULT_FEDERATION_POLICY_KEY);
+        String errMsg = "Cannot retrieve policy configured for the queue: "
+            + queue + ", falling back to defaults.";
+        LOG.warn(errMsg, e);
+
+    // the fallback is not configure via store, but via XML, using
+    // previously loaded configuration.
+    if (configuration == null) {
+      configuration =
+          cachedConfs.get(YarnConfiguration.DEFAULT_FEDERATION_POLICY_KEY);
+    }
+

MOV26 MOV26 UPD40 UPD40 UPD43 UPD42 INS25 UPD42 UPD42 INS27 MOV8 UPD43 UPD42 UPD42 UPD42 UPD42 MOV21 MOV21 INS42 INS33 UPD42 INS60 INS43 INS59 INS8 UPD42 UPD42 INS42 INS42 INS27 INS42 UPD42 INS60 INS21 INS45 INS42 INS45 INS43 INS59 INS32 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS45 INS42 INS45 DEL40 DEL26 DEL40