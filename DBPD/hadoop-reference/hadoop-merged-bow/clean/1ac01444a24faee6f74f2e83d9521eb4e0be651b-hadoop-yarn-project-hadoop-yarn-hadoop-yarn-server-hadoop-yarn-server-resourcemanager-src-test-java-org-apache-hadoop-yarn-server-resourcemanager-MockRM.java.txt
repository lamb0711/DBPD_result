YARN-8015. Support all types of placement constraint support for Capacity Scheduler. Contributed by Weiwei Yang.

+  public RMApp submitApp(int masterMemory, Set<String> appTags)
+      throws Exception {
+    Resource resource = Resource.newInstance(masterMemory, 0);
+    ResourceRequest amResourceRequest = ResourceRequest.newInstance(
+        Priority.newInstance(0), ResourceRequest.ANY, resource, 1);
+    return submitApp(Collections.singletonList(amResourceRequest), "",
+        UserGroupInformation.getCurrentUser().getShortUserName(), null, false,
+        null, super.getConfig().getInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,
+        YarnConfiguration.DEFAULT_RM_AM_MAX_ATTEMPTS), null, null, true,
+        false, false, null, 0, null, true, Priority.newInstance(0), null,
+        null, null, appTags);
+  }
+
-      ByteBuffer tokensConf)
-      throws Exception {
+      ByteBuffer tokensConf) throws Exception {
+    return submitApp(amResourceRequests, name, user, acls, unmanaged, queue,
+        maxAppAttempts, ts, appType, waitForAccepted, keepContainers,
+        isAppIdProvided, applicationId, attemptFailuresValidityInterval,
+        logAggregationContext, cancelTokensWhenComplete, priority, amLabel,
+        applicationTimeouts, tokensConf, null);
+  }
+
+  public RMApp submitApp(List<ResourceRequest> amResourceRequests, String name,
+      String user, Map<ApplicationAccessType, String> acls, boolean unmanaged,
+      String queue, int maxAppAttempts, Credentials ts, String appType,
+      boolean waitForAccepted, boolean keepContainers, boolean isAppIdProvided,
+      ApplicationId applicationId, long attemptFailuresValidityInterval,
+      LogAggregationContext logAggregationContext,
+      boolean cancelTokensWhenComplete, Priority priority, String amLabel,
+      Map<ApplicationTimeoutType, Long> applicationTimeouts,
+      ByteBuffer tokensConf, Set<String> applicationTags) throws Exception {
+    if (applicationTags != null) {
+      sub.setApplicationTags(applicationTags);
+    }

INS31 INS31 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS44 INS42 INS39 INS42 INS74 INS42 INS42 INS60 INS60 INS41 INS42 INS74 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS39 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS43 INS42 INS42 INS41 INS74 INS42 INS25 INS43 INS43 INS43 INS59 INS43 INS59 INS32 INS43 INS43 INS42 INS42 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS42 INS32 INS43 INS43 INS27 INS8 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS45 INS32 INS33 INS9 INS33 INS32 INS33 INS33 INS9 INS9 INS9 INS33 INS34 INS33 INS9 INS32 INS33 INS33 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS33 INS21 INS42 INS42 INS42 INS34 INS42 INS42 INS32 INS40 INS42 INS34 INS42 INS42 INS42 INS32 INS42 INS48 INS42 INS40 INS40 INS42 INS42 INS34 INS32 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS42 INS42