HDFS-14454. RBF: getContentSummary() should allow non-existing folders. Contributed by Inigo Goiri.

-    Map<RemoteLocation, DirectoryListing> listings =
-        rpcClient.invokeConcurrent(locations, method,
-            !this.allowPartialList, false, DirectoryListing.class);
+    final List<RemoteResult<RemoteLocation, DirectoryListing>> listings =
+        rpcClient.invokeConcurrent(
+            locations, method, false, -1, DirectoryListing.class);
-      for (Map.Entry<RemoteLocation, DirectoryListing> entry :
-          listings.entrySet()) {
-        RemoteLocation location = entry.getKey();
-        DirectoryListing listing = entry.getValue();
-        if (listing == null) {
-          LOG.debug("Cannot get listing from {}", location);
-        } else {
+      for (RemoteResult<RemoteLocation, DirectoryListing> result : listings) {
+        if (result.hasException()) {
+          IOException ioe = result.getException();
+          if (ioe instanceof FileNotFoundException) {
+            RemoteLocation location = result.getLocation();
+            LOG.debug("Cannot get listing from {}", location);
+          } else if (!allowPartialList) {
+            throw ioe;
+          }
+        } else if (result.getResult() != null) {
+          DirectoryListing listing = result.getResult();
-      for (Object value : listings.values()) {
-        DirectoryListing listing = (DirectoryListing) value;
+      for (RemoteResult<RemoteLocation, DirectoryListing> result : listings) {
+        DirectoryListing listing = result.getResult();
-            if (totalRemainingEntries > 0 && filename.compareTo(lastName) > 0) {
+            if (totalRemainingEntries > 0 &&
+                filename.compareTo(lastName) > 0) {
-    Collection<ContentSummary> summaries = new LinkedList<>();
+    final Collection<ContentSummary> summaries = new ArrayList<>();
+    final List<RemoteLocation> locations =
+        rpcServer.getLocationsForPath(path, false);
+    final RemoteMethod method = new RemoteMethod("getContentSummary",
+        new Class<?>[] {String.class}, new RemoteParam());
+    final List<RemoteResult<RemoteLocation, ContentSummary>> results =
+        rpcClient.invokeConcurrent(locations, method,
+            false, -1, ContentSummary.class);
-    try {
-      final List<RemoteLocation> locations =
-          rpcServer.getLocationsForPath(path, false);
-      RemoteMethod method = new RemoteMethod("getContentSummary",
-          new Class<?>[] {String.class}, new RemoteParam());
-      Map<RemoteLocation, ContentSummary> results =
-          rpcClient.invokeConcurrent(locations, method,
-              !this.allowPartialList, false, ContentSummary.class);
-      summaries.addAll(results.values());
-    } catch (FileNotFoundException e) {
-      notFoundException = e;
+    for (RemoteResult<RemoteLocation, ContentSummary> result : results) {
+      if (result.hasException()) {
+        IOException ioe = result.getException();
+        if (ioe instanceof FileNotFoundException) {
+          notFoundException = (FileNotFoundException)ioe;
+        } else if (!allowPartialList) {
+          throw ioe;
+        }
+      } else if (result.getResult() != null) {
+        summaries.add(result.getResult());
+      }
-          ContentSummary mountSummary = getContentSummary(childPath.toString());
+          ContentSummary mountSummary = getContentSummary(
+              childPath.toString());

MOV60 MOV60 MOV60 INS70 INS83 INS74 INS83 INS83 INS83 INS74 INS44 INS42 INS8 INS43 UPD74 MOV74 INS43 UPD74 MOV74 INS74 INS42 INS25 INS42 UPD43 INS38 INS42 INS42 UPD74 INS42 UPD43 INS38 INS43 INS43 INS43 INS32 INS8 INS25 UPD42 INS34 UPD74 UPD42 INS25 INS74 INS42 UPD43 UPD42 INS34 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS60 INS25 INS27 INS8 UPD43 INS32 INS8 MOV25 INS43 INS43 MOV43 MOV43 UPD42 INS43 INS59 INS62 INS8 INS25 INS32 INS33 INS21 INS42 INS42 INS42 MOV60 INS25 UPD27 UPD42 MOV42 INS42 INS32 INS42 INS42 INS32 INS42 INS43 MOV21 INS38 INS8 INS42 INS42 INS32 INS43 INS62 MOV8 INS25 INS32 INS60 INS42 INS42 INS42 INS42 INS42 INS42 INS53 INS42 INS42 INS32 INS42 UPD42 INS42 INS43 INS60 INS38 INS8 INS42 INS42 MOV43 INS59 INS11 INS42 INS42 INS42 UPD42 UPD42 INS42 MOV43 INS59 INS42 INS53 INS42 INS32 MOV43 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 DEL52 DEL42 DEL22 DEL38 DEL40 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL11 DEL52 DEL42 DEL22 DEL38 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL42 DEL44 DEL8 DEL12 DEL54