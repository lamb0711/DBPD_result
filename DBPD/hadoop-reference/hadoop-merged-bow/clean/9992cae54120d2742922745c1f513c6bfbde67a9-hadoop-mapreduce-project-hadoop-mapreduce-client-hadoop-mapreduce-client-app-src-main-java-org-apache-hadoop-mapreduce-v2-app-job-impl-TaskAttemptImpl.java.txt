Reverting the previous trunk merge since it added other unintended changes in addition


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1177127 13f79535-47bb-0310-9956-ffa450edef68

+import java.net.URI;
+import org.apache.hadoop.mapreduce.v2.MRConstants;
-import org.apache.hadoop.yarn.api.ApplicationConstants.Environment;
+import org.apache.hadoop.yarn.util.BuilderUtils;
-  private static final Object classpathLock = new Object();
+  private final Object classpathLock = new Object();
-      MRApps.setClasspath(env);
-      initialClasspath = env.get(Environment.CLASSPATH.name());
+      MRApps.setInitialClasspath(env);
+      initialClasspath = env.get(MRApps.CLASSPATH);
+    ContainerLaunchContext container =
+        recordFactory.newRecordInstance(ContainerLaunchContext.class);
+
-
-    // Service data
-    Map<String, ByteBuffer> serviceData = new HashMap<String, ByteBuffer>();
-
-    // Tokens
-    ByteBuffer tokens = ByteBuffer.wrap(new byte[]{});
+    
-            MRJobConfig.JOB_JAR,
+            MRConstants.JOB_JAR,
-          new Path(remoteJobSubmitDir, MRJobConfig.JOB_CONF_FILE);
+          new Path(remoteJobSubmitDir, MRConstants.JOB_CONF_FILE);
-          MRJobConfig.JOB_CONF_FILE,
+          MRConstants.JOB_CONF_FILE,
-      MRApps.setupDistributedCache(conf, localResources);
+      MRApps.setupDistributedCache(conf, localResources, environment);
+      // Set local-resources and environment
+      container.setLocalResources(localResources);
+      container.setEnvironment(environment);
+      
-      tokens = 
+      container.setContainerTokens(
-              containerTokens_dob.getLength());
+              containerTokens_dob.getLength()));
+      Map<String, ByteBuffer> serviceData = new HashMap<String, ByteBuffer>();
+      container.setServiceData(serviceData);
-      MRApps.addToEnvironment(
-          environment,  
-          Environment.CLASSPATH.name(), 
-          getInitialClasspath());
+      MRApps.addToClassPath(container.getEnvironment(), getInitialClasspath());
-
-    // Setup environment
-    MapReduceChildJVM.setVMEnv(environment, remoteTask);
-
-    // Set up the launch command
-    List<String> commands = MapReduceChildJVM.getVMCommand(
-        taskAttemptListener.getAddress(), remoteTask,
-        jvmID);
+    container.setContainerId(containerID);
+    container.setUser(conf.get(MRJobConfig.USER_NAME)); // TODO: Fix
+
+    File workDir = new File("$PWD"); // Will be expanded by the shell.
+    String containerLogDir =
+        new File(ApplicationConstants.LOG_DIR_EXPANSION_VAR).toString();
+    String childTmpDir = new File(workDir, "tmp").toString();
+    String javaHome = "${JAVA_HOME}"; // Will be expanded by the shell.
+    String nmLdLibraryPath = "{LD_LIBRARY_PATH}"; // Expanded by the shell?
+    List<String> classPaths = new ArrayList<String>();
+
+    String localizedApplicationTokensFile =
+        new File(workDir, MRConstants.APPLICATION_TOKENS_FILE).toString();
+    classPaths.add(MRConstants.JOB_JAR);
+    classPaths.add(MRConstants.YARN_MAPREDUCE_APP_JAR_PATH);
+    classPaths.add(workDir.toString()); // TODO
+
-    ContainerLaunchContext container =
-        recordFactory.newRecordInstance(ContainerLaunchContext.class);
+    container.setCommands(MapReduceChildJVM.getVMCommand(
+        taskAttemptListener.getAddress(), remoteTask, javaHome,
+        workDir.toString(), containerLogDir, childTmpDir, jvmID));
+
+    MapReduceChildJVM.setVMEnv(container.getEnvironment(), classPaths,
+        workDir.toString(), containerLogDir, nmLdLibraryPath, remoteTask,
+        localizedApplicationTokensFile);
+
+    // Construct the actual Container
-    container.setLocalResources(localResources);
-    container.setEnvironment(environment);
-    container.setCommands(commands);
-    container.setServiceData(serviceData);
-    container.setContainerTokens(tokens);
-    

MOV26 INS26 INS26 INS40 UPD40 INS40 MOV60 MOV60 MOV60 MOV21 INS60 INS60 INS60 INS60 INS60 INS21 INS21 INS43 INS59 INS43 INS59 UPD43 INS43 INS59 INS43 INS59 MOV74 INS59 INS43 INS32 INS32 INS21 INS21 MOV60 INS21 INS42 INS42 INS14 INS42 INS42 INS32 UPD42 UPD42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS14 INS42 UPD42 INS42 INS42 INS40 INS42 INS42 INS40 UPD42 UPD42 INS32 UPD42 INS32 INS42 INS42 INS32 UPD42 INS32 UPD42 INS42 INS42 INS42 UPD42 UPD42 UPD42 INS32 MOV43 INS32 INS32 INS32 INS32 INS43 INS45 INS14 INS42 INS14 INS42 INS74 INS14 UPD42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 MOV32 INS42 INS42 INS32 INS42 INS42 INS42 MOV42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS40 UPD42 UPD40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 UPD42 INS32 INS42 INS43 INS40 INS43 INS42 INS45 INS43 INS43 INS43 INS42 INS40 INS42 INS42 UPD40 MOV40 MOV43 UPD40 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 UPD40 DEL83 DEL42 DEL32 DEL42 DEL7 DEL40 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL39 DEL85 DEL5 DEL4 DEL3 DEL42 DEL42 DEL42