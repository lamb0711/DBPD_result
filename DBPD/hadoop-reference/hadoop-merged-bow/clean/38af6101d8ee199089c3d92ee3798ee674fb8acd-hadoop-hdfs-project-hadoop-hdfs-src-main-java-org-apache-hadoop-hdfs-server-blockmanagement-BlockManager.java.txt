HDFS-6671. Change BlockPlacementPolicy to consider block storage policy in replicaiton.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-6584@1611334 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.BlockStoragePolicy;
-import org.apache.hadoop.hdfs.StorageType;
+  private final BlockStoragePolicy.Suite storagePolicySuite;
+    storagePolicySuite = BlockStoragePolicy.readBlockStorageSuite(conf);
-  /** @return the BlockPlacementPolicy */
-  public BlockPlacementPolicy getBlockPlacementPolicy() {
+  @VisibleForTesting
+  BlockPlacementPolicy getBlockPlacementPolicy() {
-      final String storageID = storage.getStorageID();
-      rw.chooseTargets(blockplacement, excludedNodes);
+      rw.chooseTargets(blockplacement, storagePolicySuite, excludedNodes);
+  /** Choose target for WebHDFS redirection. */
+  public DatanodeStorageInfo[] chooseTarget4WebHDFS(String src,
+      DatanodeDescriptor clientnode, long blocksize) {
+    return blockplacement.chooseTarget(src, 1, clientnode,
+        Collections.<DatanodeStorageInfo>emptyList(), false, null, blocksize,
+        storagePolicySuite.getDefaultPolicy());
+  }
+
+  /** Choose target for getting additional datanodes for an existing pipeline. */
+  public DatanodeStorageInfo[] chooseTarget4AdditionalDatanode(String src,
+      int numAdditionalNodes,
+      DatanodeDescriptor clientnode,
+      List<DatanodeStorageInfo> chosen,
+      Set<Node> excludes,
+      long blocksize,
+      byte storagePolicyID) {
+    
+    final BlockStoragePolicy storagePolicy = storagePolicySuite.getPolicy(storagePolicyID);
+    return blockplacement.chooseTarget(src, numAdditionalNodes, clientnode,
+        chosen, true, excludes, blocksize, storagePolicy);
+  }
+
-   * Choose target datanodes according to the replication policy.
+   * Choose target datanodes for creating a new block.
-   * @see BlockPlacementPolicy#chooseTarget(String, int, Node,
-   *      List, boolean, Set, long)
-  public DatanodeStorageInfo[] chooseTarget(final String src,
+  public DatanodeStorageInfo[] chooseTarget4NewBlock(final String src,
-      final long blocksize, List<String> favoredNodes) throws IOException {
+      final long blocksize,
+      final List<String> favoredNodes,
+      final byte storagePolicyID) throws IOException {
+    final BlockStoragePolicy storagePolicy = storagePolicySuite.getPolicy(storagePolicyID);
-        // TODO: get storage type from file
-        favoredDatanodeDescriptors, StorageType.DEFAULT);
+        favoredDatanodeDescriptors, storagePolicy);
+        BlockStoragePolicy.Suite storagePolicySuite,
-          excludedNodes, block.getNumBytes(), StorageType.DEFAULT);
+          excludedNodes, block.getNumBytes(),
+          storagePolicySuite.getPolicy(bc.getStoragePolicyID()));

MOV26 UPD40 INS23 INS31 INS31 INS83 INS83 INS43 INS59 INS78 INS29 INS83 INS5 INS42 INS44 INS44 INS44 INS8 INS29 INS83 INS5 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS8 UPD42 INS44 INS40 INS42 INS21 INS42 INS65 INS43 INS85 MOV43 INS42 INS43 INS42 INS39 INS42 INS41 INS65 INS43 INS85 MOV43 INS42 INS39 INS42 INS43 INS42 INS74 INS42 INS74 INS42 INS39 INS42 INS39 INS42 INS60 INS41 INS83 INS83 INS39 INS42 INS60 INS44 INS7 INS66 INS42 INS42 INS32 INS66 INS42 INS42 INS43 INS43 MOV43 MOV43 INS83 INS43 INS59 INS32 UPD66 INS83 INS43 INS59 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS34 INS42 INS32 INS9 INS33 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS42 INS32 INS40 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL69 DEL39 DEL69 DEL69 DEL42 DEL43 DEL69 DEL39 DEL69 DEL69 DEL39 DEL69 DEL68 DEL65 DEL40 DEL40