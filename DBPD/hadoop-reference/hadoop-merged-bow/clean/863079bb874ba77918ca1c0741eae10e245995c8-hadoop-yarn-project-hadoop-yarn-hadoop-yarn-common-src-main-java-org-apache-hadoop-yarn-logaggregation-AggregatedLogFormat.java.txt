YARN-3154. Added additional APIs in LogAggregationContext to avoid aggregating running logs of application when rolling is enabled. Contributed by Xuan Gong.

+    private final boolean appFinished;
-      this(rootLogDirs, containerId, user, null, new HashSet<String>());
+      this(rootLogDirs, containerId, user, null, new HashSet<String>(), true);
-        Set<String> alreadyUploadedLogFiles) {
+        Set<String> alreadyUploadedLogFiles, boolean appFinished) {
+      this.appFinished = appFinished;
-        if (this.logAggregationContext.getIncludePattern() != null
-            && !this.logAggregationContext.getIncludePattern().isEmpty()) {
-          filterFiles(this.logAggregationContext.getIncludePattern(),
-              candidates, false);
-        }
+        filterFiles(
+          this.appFinished ? this.logAggregationContext.getIncludePattern()
+              : this.logAggregationContext.getRolledLogsIncludePattern(),
+          candidates, false);
-        if (this.logAggregationContext.getExcludePattern() != null
-            && !this.logAggregationContext.getExcludePattern().isEmpty()) {
-          filterFiles(this.logAggregationContext.getExcludePattern(),
-              candidates, true);
-        }
+        filterFiles(
+          this.appFinished ? this.logAggregationContext.getExcludePattern()
+              : this.logAggregationContext.getRolledLogsExcludePattern(),
+          candidates, true);
-      Pattern filterPattern =
-          Pattern.compile(pattern);
-      for (Iterator<File> candidatesItr = candidates.iterator(); candidatesItr
+      if (pattern != null && !pattern.isEmpty()) {
+        Pattern filterPattern = Pattern.compile(pattern);
+        for (Iterator<File> candidatesItr = candidates.iterator(); candidatesItr
-        File candidate = candidatesItr.next();
-        boolean match = filterPattern.matcher(candidate.getName()).find();
-        if ((!match && !exclusion) || (match && exclusion)) {
-          candidatesItr.remove();
+          File candidate = candidatesItr.next();
+          boolean match = filterPattern.matcher(candidate.getName()).find();
+          if ((!match && !exclusion) || (match && exclusion)) {
+            candidatesItr.remove();
+          }

INS23 INS83 INS83 INS39 INS59 INS44 INS8 INS42 INS39 INS42 INS21 INS25 INS9 INS7 INS27 MOV8 INS22 INS42 INS21 INS21 INS27 INS38 INS52 INS42 INS32 INS32 INS42 INS33 INS32 INS42 INS16 MOV42 MOV9 INS42 INS16 MOV42 MOV9 INS42 INS42 INS22 MOV32 INS32 INS22 MOV32 INS32 MOV52 UPD42 MOV42 MOV22 UPD42 MOV42 MOV52 UPD42 MOV42 MOV22 UPD42 MOV42 DEL22 DEL42 DEL32 DEL33 DEL27 DEL32 DEL42 DEL32 DEL38 DEL27 DEL42 DEL32 DEL21 DEL8 DEL25 DEL22 DEL42 DEL32 DEL33 DEL27 DEL32 DEL42 DEL32 DEL38 DEL27 DEL42 DEL32 DEL21 DEL8 DEL25