YARN-1222. Make improvements in ZKRMStateStore for fencing (Karthik Kambatla via bikas)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541995 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStoreOperationFailedEvent;
+import org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStoreOperationFailedEventType;
+
+  public RMHAProtocolService getHAService() {
+    return this.haService;
+  }
+  protected RMStateStoreOperationFailedEventDispatcher
+  createRMStateStoreOperationFailedEventDispatcher() {
+    return new RMStateStoreOperationFailedEventDispatcher(haService);
+  }
+
+        rmDispatcher.register(RMStateStoreOperationFailedEventType.class,
+            createRMStateStoreOperationFailedEventDispatcher());
+  public static class RMStateStoreOperationFailedEventDispatcher implements
+      EventHandler<RMStateStoreOperationFailedEvent> {
+    private final RMHAProtocolService haService;
+
+    public RMStateStoreOperationFailedEventDispatcher(
+        RMHAProtocolService haService) {
+      this.haService = haService;
+    }
+
+    @Override
+    public void handle(RMStateStoreOperationFailedEvent event) {
+      if (LOG.isDebugEnabled()) {
+        LOG.debug("Received a " +
+            RMStateStoreOperationFailedEvent.class.getName() + " of type " +
+            event.getType().name());
+      }
+      if (event.getType() == RMStateStoreOperationFailedEventType.FENCED) {
+        LOG.info("RMStateStore has been fenced");
+        synchronized(haService) {
+          if (haService.haEnabled) {
+            try {
+              // Transition to standby and reinit active services
+              LOG.info("Transitioning RM to Standby mode");
+              haService.transitionToStandby(true);
+              return;
+            } catch (Exception e) {
+              LOG.error("Failed to transition RM to Standby mode.");
+            }
+          }
+        }
+      }
+
+      LOG.error("Shutting down RM on receiving a " +
+          RMStateStoreOperationFailedEvent.class.getName() + " of type " +
+          event.getType().name());
+      ExitUtil.terminate(1, event.getCause());
+    }
+  }
+
+  @Private

INS26 INS26 INS40 INS40 INS31 INS31 INS55 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS78 INS83 INS83 INS42 INS74 INS23 INS31 INS31 INS42 INS41 INS42 INS41 INS42 INS43 INS43 INS83 INS83 INS43 INS59 INS83 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS22 INS14 INS42 INS42 INS42 INS42 INS43 INS42 INS21 INS42 INS43 INS42 INS25 INS25 INS21 INS21 INS52 INS42 INS43 INS42 INS42 INS7 INS42 INS32 INS8 INS27 INS8 INS32 INS32 INS42 INS21 INS22 INS42 INS42 INS42 INS21 INS32 INS40 INS21 INS51 INS42 INS42 INS27 INS42 INS42 INS34 INS32 INS32 INS52 INS42 INS32 INS42 INS42 INS32 INS42 INS8 INS45 INS32 INS45 INS32 INS42 INS42 INS42 INS42 INS57 INS32 INS42 INS42 INS27 INS42 INS42 INS45 INS25 INS57 INS42 INS32 INS42 INS43 INS42 INS45 INS32 INS45 INS32 INS40 INS8 INS43 INS42 INS42 INS42 INS57 INS42 INS32 INS42 INS54 INS42 INS43 INS42 INS42 INS8 INS12 INS42 INS21 INS21 INS41 INS44 INS8 INS32 INS32 INS43 INS42 INS21 INS42 INS42 INS45 INS42 INS42 INS9 INS42 INS32 INS42 INS42 INS45