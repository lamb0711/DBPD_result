HADOOP-14630 Contract Tests to verify create, mkdirs and rename under a file is forbidden

Contributed by Steve Loughran.

Not all stores do complete validation here; in particular the S3A
Connector does not: checking up the entire directory tree to see if a path matches
is a file significantly slows things down.

This check does take place in S3A mkdirs(), which walks backwards up the list of
parent paths until it finds a directory (success) or a file (failure).
In practice production applications invariably create destination directories
before writing 1+ file into them -restricting check purely to the mkdirs()
call deliver significant speed up while implicitly including the checks.

Change-Id: I2c9df748e92b5655232e7d888d896f1868806eb0

+import org.apache.hadoop.fs.CreateFlag;
+import java.util.EnumSet;
-    } catch (SwiftOperationFailedException e) {
+    } catch (SwiftOperationFailedException
+        | FileAlreadyExistsException
+        | FileNotFoundException
+        | ParentNotDirectoryException e) {
-      return false;
-    } catch (FileAlreadyExistsException e) {
-      //downgrade to a failure
-      return false;
-    } catch (FileNotFoundException e) {
-      //downgrade to a failure
+      LOG.debug("rename({}, {}) failed",src, dst, e);
+  /**
+   * {@inheritDoc}
+   * @throws FileNotFoundException if the parent directory is not present -or
+   * is not a directory.
+   */
+  @Override
+  public FSDataOutputStream createNonRecursive(Path path,
+      FsPermission permission,
+      EnumSet<CreateFlag> flags,
+      int bufferSize,
+      short replication,
+      long blockSize,
+      Progressable progress) throws IOException {
+    Path parent = path.getParent();
+    if (parent != null) {
+      // expect this to raise an exception if there is no parent
+      if (!getFileStatus(parent).isDirectory()) {
+        throw new FileAlreadyExistsException("Not a directory: " + parent);
+      }
+    }
+    return create(path, permission,
+        flags.contains(CreateFlag.OVERWRITE), bufferSize,
+        replication, blockSize, progress);
+  }
+

INS26 INS26 INS40 INS40 INS31 INS29 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS65 INS65 INS42 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS43 INS42 INS42 INS60 INS25 INS41 INS12 INS65 INS42 INS66 INS66 INS42 INS42 INS43 INS43 INS42 INS43 INS59 INS27 INS8 INS32 MOV44 INS8 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS25 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS84 INS21 MOV41 INS42 INS42 INS38 INS8 INS42 INS42 INS40 MOV43 INS43 MOV43 INS43 INS32 INS32 INS53 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS14 INS42 INS42 MOV43 INS27 INS45 INS42 DEL9 DEL41 DEL8 DEL12 DEL42 DEL44 DEL9 DEL41 DEL8 DEL12 DEL42 DEL44 DEL8 DEL12