Revert "HDFS-14706. Checksums are not checked if block meta file is less than 7 bytes. Contributed by Stephen O'Donnell."

This reverts commit 7bebad61d9c3dbff81fdcf243585fd3e9ae59dde.

-import java.util.Random;
-  private boolean leaseRecovered = false;
-  private boolean exceptionInClose = false; //for unit test
-  @VisibleForTesting
-  public void setExceptionInClose(boolean enable) {
-    exceptionInClose = enable;
-  }
-
-  private class EmulateExceptionInClose {
-    private Random rand = null;
-    private int kickedNum;
-
-    EmulateExceptionInClose(int callNum) {
-      if (exceptionInClose) {
-        rand = new Random();
-      }
-      kickedNum = callNum;
-    }
-
-    void kickRandomException() throws IOException {
-      if (exceptionInClose) {
-        if (kickedNum > 0) {
-          if (rand.nextInt(kickedNum) == 1) {
-            throw new IOException("Emulated random IOException in close");
-          }
-        }
-      }
-    }
-
-    void kickException() throws IOException {
-      if (exceptionInClose) {
-        throw new IOException("Emulated IOException in close");
-      }
-    }
-  }
-
-    boolean recoverOnCloseException = dfsClient.getConfiguration().getBoolean(
-        HdfsClientConfigKeys.Write.RECOVER_ON_CLOSE_EXCEPTION_KEY,
-        HdfsClientConfigKeys.Write.RECOVER_ON_CLOSE_EXCEPTION_DEFAULT);
-      if (recoverOnCloseException && !leaseRecovered) {
-        try {
-          dfsClient.endFileLease(fileId);
-          dfsClient.recoverLease(src);
-          leaseRecovered = true;
-        } catch (Exception e) {
-          LOG.warn("Fail to recover lease for {}", src, e);
-        }
-      }
-
-    EmulateExceptionInClose eei = new EmulateExceptionInClose(5);
-      flushBuffer(); // flush from all upper layers
-      // for test
-      eei.kickRandomException();
+      flushBuffer();       // flush from all upper layers
-        flushInternal(); // flush all data to Datanodes
+        flushInternal();             // flush all data to Datanodes
-      // for test
-      eei.kickRandomException();
-      // for test
-      eei.kickException();
-    } catch (IOException ioe) {
-      if (recoverOnCloseException) {
-        try {
-          dfsClient.endFileLease(fileId);
-          dfsClient.recoverLease(src);
-          leaseRecovered = true;
-        } catch (Exception e) {
-          // Ignore exception rendered by recoverLease. Throw original
-          // exception
-        }
-      }
-      throw ioe;

DEL40 DEL26 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL42 DEL78 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL42 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL83 DEL42 DEL43 DEL42 DEL33 DEL59 DEL23 DEL83 DEL39 DEL42 DEL59 DEL23 DEL42 DEL39 DEL42 DEL44 DEL42 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL7 DEL21 DEL8 DEL31 DEL39 DEL42 DEL42 DEL43 DEL42 DEL42 DEL34 DEL27 DEL42 DEL42 DEL42 DEL32 DEL34 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL8 DEL25 DEL8 DEL25 DEL8 DEL31 DEL39 DEL42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL8 DEL31 DEL55 DEL39 DEL42 DEL42 DEL42 DEL32 DEL42 DEL40 DEL40 DEL32 DEL59 DEL60 DEL42 DEL42 DEL38 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL34 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12