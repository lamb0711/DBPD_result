Merge from trunk to branch

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1619194 13f79535-47bb-0310-9956-ffa450edef68

+import java.net.URLConnection;
+import java.security.GeneralSecurityException;
+import javax.net.ssl.HostnameVerifier;
+import javax.net.ssl.HttpsURLConnection;
+import javax.net.ssl.SSLSocketFactory;
+import org.apache.hadoop.security.authentication.client.ConnectionConfigurator;
+import org.apache.hadoop.security.ssl.SSLFactory;
+  public final static int DEFAULT_SOCKET_TIMEOUT = 1 * 60 * 1000; // 1 minute
+
+
-    ClientConfig cc = new DefaultClientConfig();
-    cc.getClasses().add(YarnJacksonJaxbJsonProvider.class);
-    if (UserGroupInformation.isSecurityEnabled()) {
-      urlFactory = new KerberosAuthenticatedURLConnectionFactory();
-      client = new Client(new URLConnectionClientHandler(urlFactory), cc);
-    } else {
-      client = new Client(new URLConnectionClientHandler(
-          new PseudoAuthenticatedURLConnectionFactory()), cc);
-    }
+      ClientConfig cc = new DefaultClientConfig();
+      cc.getClasses().add(YarnJacksonJaxbJsonProvider.class);
+      ConnectionConfigurator connConfigurator = newConnConfigurator(conf);
+      if (UserGroupInformation.isSecurityEnabled()) {
+        TimelineAuthenticator.setStaticConnectionConfigurator(connConfigurator);
+        urlFactory = new KerberosAuthenticatedURLConnectionFactory(connConfigurator);
+        client = new Client(new URLConnectionClientHandler(urlFactory), cc);
+      } else {
+        client = new Client(new URLConnectionClientHandler(
+            new PseudoAuthenticatedURLConnectionFactory(connConfigurator)), cc);
+      }
+    private ConnectionConfigurator connConfigurator;
+
+    public PseudoAuthenticatedURLConnectionFactory(
+        ConnectionConfigurator connConfigurator) {
+      this.connConfigurator = connConfigurator;
+    }
+
-      return (HttpURLConnection) url.openConnection();
+      return connConfigurator.configure((HttpURLConnection) url.openConnection());
+    private ConnectionConfigurator connConfigurator;
-    public KerberosAuthenticatedURLConnectionFactory() {
+    public KerberosAuthenticatedURLConnectionFactory(
+        ConnectionConfigurator connConfigurator) {
+      this.connConfigurator = connConfigurator;
-        return new AuthenticatedURL(authenticator).openConnection(url, token);
+        return new AuthenticatedURL(
+            authenticator, connConfigurator).openConnection(url, token);
+  private static ConnectionConfigurator newConnConfigurator(Configuration conf) {
+    try {
+      return newSslConnConfigurator(DEFAULT_SOCKET_TIMEOUT, conf);
+    } catch (Exception e) {
+      LOG.debug("Cannot load customized ssl related configuration. " +
+          "Fallback to system-generic settings.", e);
+      return DEFAULT_TIMEOUT_CONN_CONFIGURATOR;
+    }
+  }
+
+  private static final ConnectionConfigurator DEFAULT_TIMEOUT_CONN_CONFIGURATOR =
+      new ConnectionConfigurator() {
+    @Override
+    public HttpURLConnection configure(HttpURLConnection conn)
+        throws IOException {
+      setTimeouts(conn, DEFAULT_SOCKET_TIMEOUT);
+      return conn;
+    }
+  };
+
+  private static ConnectionConfigurator newSslConnConfigurator(final int timeout,
+      Configuration conf) throws IOException, GeneralSecurityException {
+    final SSLFactory factory;
+    final SSLSocketFactory sf;
+    final HostnameVerifier hv;
+
+    factory = new SSLFactory(SSLFactory.Mode.CLIENT, conf);
+    factory.init();
+    sf = factory.createSSLSocketFactory();
+    hv = factory.getHostnameVerifier();
+
+    return new ConnectionConfigurator() {
+      @Override
+      public HttpURLConnection configure(HttpURLConnection conn)
+          throws IOException {
+        if (conn instanceof HttpsURLConnection) {
+          HttpsURLConnection c = (HttpsURLConnection) conn;
+          c.setSSLSocketFactory(sf);
+          c.setHostnameVerifier(hv);
+        }
+        setTimeouts(conn, timeout);
+        return conn;
+      }
+    };
+  }
+
+  private static void setTimeouts(URLConnection connection, int socketTimeout) {
+    connection.setConnectTimeout(socketTimeout);
+    connection.setReadTimeout(socketTimeout);
+  }
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS31 INS23 INS31 INS31 INS83 INS83 INS83 INS39 INS59 INS83 INS42 INS8 UPD83 INS39 UPD42 INS44 MOV43 INS8 INS23 INS31 INS23 INS83 INS83 INS43 INS42 MOV44 INS8 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS42 INS44 INS44 INS43 INS43 INS8 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS27 MOV46 INS43 INS42 INS42 MOV21 INS25 INS21 INS83 INS43 INS59 INS83 INS42 INS44 INS8 INS83 INS43 INS59 INS44 INS42 INS54 INS42 INS42 INS14 INS42 INS83 INS39 INS42 INS43 INS42 INS42 INS42 INS60 INS60 INS60 INS21 INS21 INS21 INS21 INS41 INS43 INS42 INS39 INS42 INS21 MOV21 INS34 INS34 INS34 INS42 MOV38 MOV8 MOV8 MOV48 INS42 INS42 INS43 INS42 INS21 INS42 INS42 INS43 INS42 INS21 INS8 INS12 INS43 INS1 INS42 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS7 INS32 INS7 INS7 INS14 INS42 INS32 INS32 INS21 INS60 MOV25 INS25 INS21 INS42 INS7 INS32 INS42 INS7 INS41 INS44 INS8 INS42 INS31 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 UPD42 MOV42 INS42 INS32 INS42 INS32 INS43 INS1 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS59 MOV32 INS8 INS32 INS22 INS42 INS42 INS42 MOV11 INS22 INS42 INS32 INS43 INS42 INS21 INS41 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS43 INS40 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS31 INS42 INS42 MOV45 INS42 INS42 INS32 INS21 MOV21 INS42 INS42 MOV27 INS52 INS42 INS52 INS42 INS42 INS42 INS42 MOV42 INS32 INS42 INS42 INS42 INS43 INS42 INS42 MOV21 INS41 INS42 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS27 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 MOV25 MOV21 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS45 UPD42 UPD42 INS42 INS42 INS62 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS60 INS21 INS21 UPD42 UPD42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS11 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS43 INS42 INS42 DEL83 DEL39 DEL42 DEL8 DEL25 DEL8 DEL31