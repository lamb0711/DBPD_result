Merge branch 'trunk' into HDFS-6581

-      rmNode.httpPort = newNode.getHttpPort();
-      rmNode.httpAddress = newNode.getHttpAddress();
-      rmNode.totalCapability = newNode.getTotalCapability();
+      List<ApplicationId> runningApps = reconnectEvent.getRunningApplications();
+      boolean noRunningApps = 
+          (runningApps == null) || (runningApps.size() == 0);
-      // Reset heartbeat ID since node just restarted.
-      rmNode.getLastNodeHeartBeatResponse().setResponseId(0);
+      // No application running on the node, so send node-removal event with 
+      // cleaning up old container info.
+      if (noRunningApps) {
+        rmNode.nodeUpdateQueue.clear();
+        rmNode.context.getDispatcher().getEventHandler().handle(
+            new NodeRemovedSchedulerEvent(rmNode));
+        
+        if (rmNode.getHttpPort() == newNode.getHttpPort()) {
+          // Reset heartbeat ID since node just restarted.
+          rmNode.getLastNodeHeartBeatResponse().setResponseId(0);
+          if (rmNode.getState() != NodeState.UNHEALTHY) {
+            // Only add new node if old state is not UNHEALTHY
+            rmNode.context.getDispatcher().getEventHandler().handle(
+                new NodeAddedSchedulerEvent(newNode));
+          }
+        } else {
+          // Reconnected node differs, so replace old node and start new node
+          switch (rmNode.getState()) {
+            case RUNNING:
+              ClusterMetrics.getMetrics().decrNumActiveNodes();
+              break;
+            case UNHEALTHY:
+              ClusterMetrics.getMetrics().decrNumUnhealthyNMs();
+              break;
+            }
+            rmNode.context.getRMNodes().put(newNode.getNodeID(), newNode);
+            rmNode.context.getDispatcher().getEventHandler().handle(
+                new RMNodeStartedEvent(newNode.getNodeID(), null, null));
+        }
+      } else {
+        rmNode.httpPort = newNode.getHttpPort();
+        rmNode.httpAddress = newNode.getHttpAddress();
+        rmNode.totalCapability = newNode.getTotalCapability();
+      
+        // Reset heartbeat ID since node just restarted.
+        rmNode.getLastNodeHeartBeatResponse().setResponseId(0);
+      }
-                ResourceOption.newInstance(rmNode.totalCapability, -1)));
+                ResourceOption.newInstance(newNode.getTotalCapability(), -1)));

INS60 INS60 INS25 INS74 INS59 INS39 INS59 INS42 INS8 INS8 INS43 INS43 INS42 INS32 INS42 INS27 INS21 INS21 INS25 MOV21 MOV21 MOV21 MOV21 INS42 INS42 INS42 INS42 INS36 INS36 INS32 INS32 INS27 INS8 INS8 INS27 INS27 INS40 INS42 INS32 INS42 INS14 INS32 INS32 INS21 INS25 INS50 INS21 INS21 INS42 INS33 INS32 INS34 INS32 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS27 INS8 INS32 INS49 INS21 INS10 INS49 INS21 INS10 INS32 INS32 INS42 INS42 INS40 INS42 INS42 INS32 INS42 INS34 INS32 INS40 INS21 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS32 INS42 INS14 INS32 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS40 INS42 INS42 INS42 INS32 INS42 INS43 INS32 INS33 INS33 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS42 INS40 INS42 INS42 DEL40