HDFS-12626. Ozone : delete open key entries that will no longer be closed. Contributed by Chen Liang.

+import org.apache.hadoop.util.Time;
+import static org.apache.hadoop.ozone.OzoneConfigKeys.OZONE_OPEN_KEY_EXPIRE_THRESHOLD_SECONDS;
+import static org.apache.hadoop.ozone.OzoneConfigKeys.OZONE_OPEN_KEY_EXPIRE_THRESHOLD_SECONDS_DEFAULT;
-
+  private final long openKeyExpireThresholdMS;
+    this.openKeyExpireThresholdMS = 1000 * conf.getInt(
+        OZONE_OPEN_KEY_EXPIRE_THRESHOLD_SECONDS,
+        OZONE_OPEN_KEY_EXPIRE_THRESHOLD_SECONDS_DEFAULT);
+
+  @Override
+  public List<BlockGroup> getExpiredOpenKeys() throws IOException {
+    List<BlockGroup> keyBlocksList = Lists.newArrayList();
+    long now = Time.now();
+    final MetadataKeyFilter openKeyFilter =
+        new KeyPrefixFilter(OPEN_KEY_PREFIX);
+    List<Map.Entry<byte[], byte[]>> rangeResult =
+        store.getSequentialRangeKVs(null, Integer.MAX_VALUE,
+            openKeyFilter);
+    for (Map.Entry<byte[], byte[]> entry : rangeResult) {
+      KsmKeyInfo info =
+          KsmKeyInfo.getFromProtobuf(KeyInfo.parseFrom(entry.getValue()));
+      long lastModify = info.getModificationTime();
+      if (now - lastModify < this.openKeyExpireThresholdMS) {
+        // consider as may still be active, not hanging.
+        continue;
+      }
+      // Get block keys as a list.
+      List<String> item = info.getKeyLocationList().stream()
+          .map(KsmKeyLocationInfo::getBlockID)
+          .collect(Collectors.toList());
+      BlockGroup keyBlocks = BlockGroup.newBuilder()
+          .setKeyName(DFSUtil.bytes2String(entry.getKey()))
+          .addAllBlockIDs(item)
+          .build();
+      keyBlocksList.add(keyBlocks);
+    }
+    return keyBlocksList;
+  }

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS31 INS83 INS83 INS39 INS59 INS78 INS83 INS74 INS42 INS43 INS8 INS42 INS21 INS42 INS43 INS43 INS42 INS60 INS60 INS60 INS60 INS70 INS41 INS7 INS42 INS42 INS74 INS59 INS39 INS59 INS83 INS43 INS59 INS74 INS59 INS44 INS42 INS8 INS42 INS22 INS27 INS43 INS43 INS42 INS32 INS42 INS32 INS42 INS42 INS14 INS43 INS74 INS42 INS32 INS74 INS42 INS60 INS60 INS25 INS60 INS60 INS21 INS52 INS42 INS34 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS43 INS5 INS5 INS42 INS42 INS33 INS40 INS42 INS43 INS5 INS5 INS43 INS59 INS39 INS59 INS27 INS8 INS74 INS59 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS40 INS39 INS85 INS39 INS85 INS40 INS39 INS85 INS39 INS85 INS42 INS42 INS32 INS42 INS32 INS27 INS22 INS18 INS43 INS43 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS90 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42