HDDS-18. Ozone Shell should use RestClient and RpcClient. Contributed by Lokesh Jain.

-import org.apache.hadoop.ozone.web.client.OzoneRestClientException;
+import org.apache.hadoop.hdds.conf.OzoneConfiguration;
+import org.apache.hadoop.io.IOUtils;
+import org.apache.hadoop.ozone.client.OzoneBucket;
+import org.apache.hadoop.ozone.client.OzoneVolume;
+import org.apache.hadoop.ozone.client.io.OzoneInputStream;
+import org.apache.hadoop.ozone.client.OzoneClientException;
+import java.io.FileOutputStream;
+import static org.apache.hadoop.hdds.scm.ScmConfigKeys
+    .OZONE_SCM_CHUNK_SIZE_DEFAULT;
+import static org.apache.hadoop.hdds.scm.ScmConfigKeys
+    .OZONE_SCM_CHUNK_SIZE_KEY;
+
-  private String userName;
-      throw new OzoneRestClientException("Incorrect call : getKey is missing");
+      throw new OzoneClientException("Incorrect call : getKey is missing");
-      throw new OzoneRestClientException(
+      throw new OzoneClientException(
-    if (cmd.hasOption(Shell.USER)) {
-      userName = cmd.getOptionValue(Shell.USER);
-    } else {
-      userName = System.getProperty("user.name");
-    }
-
-
-      throw new OzoneRestClientException(
+      throw new OzoneClientException(
-      throw new OzoneRestClientException(fileName +
+      throw new OzoneClientException(fileName +
-    client.setEndPointURI(ozoneURI);
-    client.setUserAuth(userName);
-
-    client.getKey(volumeName, bucketName, keyName, dataFilePath);
+    OzoneVolume vol = client.getObjectStore().getVolume(volumeName);
+    OzoneBucket bucket = vol.getBucket(bucketName);
+    OzoneInputStream keyInputStream = bucket.readKey(keyName);
+    if (dataFilePath != null) {
+      FileOutputStream outputStream = new FileOutputStream(dataFile);
+      IOUtils.copyBytes(keyInputStream, outputStream, new OzoneConfiguration()
+          .getInt(OZONE_SCM_CHUNK_SIZE_KEY, OZONE_SCM_CHUNK_SIZE_DEFAULT));
+      outputStream.close();
+    } else {
+      throw new OzoneClientException(
+          "Can not access the file \"" + fileName + "\"");
+    }
+      stream.close();

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 INS40 INS40 INS25 INS60 INS60 INS60 INS25 MOV27 INS8 INS43 INS59 INS43 INS59 INS43 INS59 INS27 INS8 INS8 INS53 INS42 INS42 INS32 INS42 INS42 INS32 UPD42 MOV42 INS42 INS32 INS42 INS33 INS60 MOV21 INS21 INS53 INS21 INS14 INS32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS43 INS59 INS32 INS14 INS32 UPD43 UPD43 INS43 INS45 UPD43 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS14 INS42 UPD42 UPD42 UPD42 INS32 INS42 INS42 INS43 INS27 INS42 INS42 UPD42 UPD42 INS42 UPD42 INS43 INS42 INS14 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS45 INS42 INS45 INS42 INS43 INS42 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL42 DEL40 DEL32 DEL42 DEL40 DEL32 DEL7 DEL21 DEL8 DEL42 DEL45 DEL32 DEL7 DEL21 DEL8 DEL25 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21