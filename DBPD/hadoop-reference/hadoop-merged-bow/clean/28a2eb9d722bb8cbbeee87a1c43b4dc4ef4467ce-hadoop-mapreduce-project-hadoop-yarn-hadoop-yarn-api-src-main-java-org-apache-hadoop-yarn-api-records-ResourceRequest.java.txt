MAPREDUCE-3810. Performance tweaks - reduced logging in AM and defined hascode/equals for ResourceRequest & Priority. Contributed by Vinod K V. 


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241205 13f79535-47bb-0310-9956-ffa450edef68

-public interface ResourceRequest extends Comparable<ResourceRequest> {
+public abstract class ResourceRequest implements Comparable<ResourceRequest> {
+
+  @Override
+  public int hashCode() {
+    final int prime = 31;
+    int result = 1;
+    Resource capability = getCapability();
+    String hostName = getHostName();
+    Priority priority = getPriority();
+    result =
+        prime * result + ((capability == null) ? 0 : capability.hashCode());
+    result = prime * result + ((hostName == null) ? 0 : hostName.hashCode());
+    result = prime * result + getNumContainers();
+    result = prime * result + ((priority == null) ? 0 : priority.hashCode());
+    return result;
+  }
+
+  @Override
+  public boolean equals(Object obj) {
+    if (this == obj)
+      return true;
+    if (obj == null)
+      return false;
+    if (getClass() != obj.getClass())
+      return false;
+    ResourceRequest other = (ResourceRequest) obj;
+    Resource capability = getCapability();
+    if (capability == null) {
+      if (other.getCapability() != null)
+        return false;
+    } else if (!capability.equals(other.getCapability()))
+      return false;
+    String hostName = getHostName();
+    if (hostName == null) {
+      if (other.getHostName() != null)
+        return false;
+    } else if (!hostName.equals(other.getHostName()))
+      return false;
+    if (getNumContainers() != other.getNumContainers())
+      return false;
+    Priority priority = getPriority();
+    if (priority == null) {
+      if (other.getPriority() != null)
+        return false;
+    } else if (!priority.equals(other.getPriority()))
+      return false;
+    return true;
+  }
+
+  @Override
+  public int compareTo(ResourceRequest other) {
+    int priorityComparison = this.getPriority().compareTo(other.getPriority());
+    if (priorityComparison == 0) {
+      int hostNameComparison =
+          this.getHostName().compareTo(other.getHostName());
+      if (hostNameComparison == 0) {
+        int capabilityComparison =
+            this.getCapability().compareTo(other.getCapability());
+        if (capabilityComparison == 0) {
+          int numContainersComparison =
+              this.getNumContainers() - other.getNumContainers();
+          if (numContainersComparison == 0) {
+            return 0;
+          } else {
+            return numContainersComparison;
+          }
+        } else {
+          return capabilityComparison;
+        }
+      } else {
+        return hostNameComparison;
+      }
+    } else {
+      return priorityComparison;
+    }
+  }

INS83 INS31 INS31 INS31 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS42 INS60 INS60 INS60 INS60 INS60 INS21 INS21 INS21 INS21 INS41 INS42 INS43 INS42 INS25 INS25 INS25 INS60 INS60 INS25 INS60 INS25 INS25 INS60 INS25 INS41 INS42 INS43 INS42 INS60 INS25 INS83 INS39 INS59 INS39 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS7 INS7 INS7 INS7 INS42 INS42 INS27 INS41 INS27 INS41 INS27 INS41 INS43 INS59 INS43 INS59 INS27 INS8 INS25 INS43 INS59 INS27 INS8 INS25 INS27 INS41 INS43 INS59 INS27 INS8 INS25 INS9 INS42 INS39 INS59 INS27 INS8 INS8 INS42 INS34 INS42 INS34 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS52 INS42 INS9 INS42 INS33 INS9 INS32 INS32 INS9 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS33 INS25 INS38 INS41 INS42 INS42 INS32 INS42 INS33 INS25 INS38 INS41 INS32 INS32 INS9 INS42 INS42 INS32 INS42 INS33 INS25 INS38 INS41 INS42 INS32 INS42 INS34 INS60 INS25 INS41 INS42 INS42 INS42 INS27 INS36 INS27 INS36 INS27 INS32 INS27 INS36 INS42 INS42 INS42 INS43 INS42 INS42 INS27 INS41 INS32 INS9 INS42 INS27 INS41 INS32 INS9 INS42 INS42 INS42 INS42 INS27 INS41 INS32 INS9 INS32 INS42 INS32 INS39 INS59 INS27 INS8 INS8 INS42 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS42 INS42 INS42 INS42 INS16 INS42 INS32 INS33 INS9 INS42 INS42 INS32 INS32 INS33 INS9 INS42 INS42 INS32 INS32 INS33 INS9 INS42 INS42 INS32 INS52 INS42 INS42 INS42 INS42 INS32 INS42 INS34 INS60 INS25 INS41 INS36 INS34 INS32 INS36 INS34 INS32 INS36 INS34 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS39 INS59 INS27 INS8 INS8 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS32 INS42 INS34 INS60 INS25 INS41 INS42 INS33 INS42 INS33 INS42 INS33 INS32 INS42 INS32 INS39 INS59 INS27 INS8 INS8 INS42 INS52 INS42 INS42 INS42 INS42 INS27 INS42 INS34 INS41 INS41 INS32 INS32 INS34 INS42 INS52 INS42 INS42 INS42