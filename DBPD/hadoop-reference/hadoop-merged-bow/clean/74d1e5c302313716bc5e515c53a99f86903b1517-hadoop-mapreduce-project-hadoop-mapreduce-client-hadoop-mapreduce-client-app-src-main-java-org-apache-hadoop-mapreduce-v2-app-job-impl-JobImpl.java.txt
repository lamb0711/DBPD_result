Merge r1432789 through r1437840 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1437843 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.mapred.TaskCompletionEvent;
+  private static final TaskCompletionEvent[]
+    EMPTY_TASK_COMPLETION_EVENTS = new TaskCompletionEvent[0];
+
-  private List<TaskAttemptCompletionEvent> mapAttemptCompletionEvents;
+  private List<TaskCompletionEvent> mapAttemptCompletionEvents;
+  private List<Integer> taskCompletionIdxToMapCompletionIdx;
-    return getAttemptCompletionEvents(taskAttemptCompletionEvents,
-        fromEventId, maxEvents);
-  }
-
-  @Override
-  public TaskAttemptCompletionEvent[] getMapAttemptCompletionEvents(
-      int startIndex, int maxEvents) {
-    return getAttemptCompletionEvents(mapAttemptCompletionEvents,
-        startIndex, maxEvents);
-  }
-
-  private TaskAttemptCompletionEvent[] getAttemptCompletionEvents(
-      List<TaskAttemptCompletionEvent> eventList,
-      int startIndex, int maxEvents) {
-      if (eventList.size() > startIndex) {
+      if (taskAttemptCompletionEvents.size() > fromEventId) {
-            (eventList.size() - startIndex));
-        events = eventList.subList(startIndex,
+            (taskAttemptCompletionEvents.size() - fromEventId));
+        events = taskAttemptCompletionEvents.subList(fromEventId,
+            actualMax + fromEventId).toArray(events);
+      }
+      return events;
+    } finally {
+      readLock.unlock();
+    }
+  }
+
+  @Override
+  public TaskCompletionEvent[] getMapAttemptCompletionEvents(
+      int startIndex, int maxEvents) {
+    TaskCompletionEvent[] events = EMPTY_TASK_COMPLETION_EVENTS;
+    readLock.lock();
+    try {
+      if (mapAttemptCompletionEvents.size() > startIndex) {
+        int actualMax = Math.min(maxEvents,
+            (mapAttemptCompletionEvents.size() - startIndex));
+        events = mapAttemptCompletionEvents.subList(startIndex,
-                conf.getInt(MRJobConfig.MAP_CPU_VCORES, 1), 
-                conf.getInt(MRJobConfig.REDUCE_CPU_VCORES, 1)) < 
-             sysCPUSizeForUberSlot
+                conf.getInt(
+                    MRJobConfig.MAP_CPU_VCORES, 
+                    MRJobConfig.DEFAULT_MAP_CPU_VCORES), 
+                conf.getInt(
+                    MRJobConfig.REDUCE_CPU_VCORES, 
+                    MRJobConfig.DEFAULT_REDUCE_CPU_VCORES)) 
+             <= sysCPUSizeForUberSlot
-            new ArrayList<TaskAttemptCompletionEvent>(job.numMapTasks + 10);
+            new ArrayList<TaskCompletionEvent>(job.numMapTasks + 10);
+        job.taskCompletionIdxToMapCompletionIdx = new ArrayList<Integer>(
+            job.numMapTasks + job.numReduceTasks + 10);
+      int mapEventIdx = -1;
-        job.mapAttemptCompletionEvents.add(tce);
+        // we track map completions separately from task completions because
+        // - getMapAttemptCompletionEvents uses index ranges specific to maps
+        // - type converting the same events over and over is expensive
+        mapEventIdx = job.mapAttemptCompletionEvents.size();
+        job.mapAttemptCompletionEvents.add(TypeConverter.fromYarn(tce));
+      job.taskCompletionIdxToMapCompletionIdx.add(mapEventIdx);
-      Object successEventNo = 
-        job.successAttemptCompletionEventNoMap.remove(taskId);
+      Integer successEventNo =
+          job.successAttemptCompletionEventNoMap.remove(taskId);
-          job.taskAttemptCompletionEvents.get((Integer) successEventNo);
+          job.taskAttemptCompletionEvents.get(successEventNo);
+        int mapCompletionIdx =
+            job.taskCompletionIdxToMapCompletionIdx.get(successEventNo);
+        if (mapCompletionIdx >= 0) {
+          // update the corresponding TaskCompletionEvent for the map
+          TaskCompletionEvent mapEvent =
+              job.mapAttemptCompletionEvents.get(mapCompletionIdx);
+          job.mapAttemptCompletionEvents.set(mapCompletionIdx,
+              new TaskCompletionEvent(mapEvent.getEventId(),
+                  mapEvent.getTaskAttemptId(), mapEvent.idWithinJob(),
+                  mapEvent.isMapTask(), TaskCompletionEvent.Status.OBSOLETE,
+                  mapEvent.getTaskTrackerHttp()));
+        }

INS26 INS40 INS23 INS23 INS31 INS83 INS83 INS83 INS5 INS59 UPD74 INS83 UPD74 MOV74 INS59 MOV78 INS83 MOV5 MOV42 MOV44 MOV44 INS8 MOV78 UPD83 INS5 INS42 MOV44 UPD43 MOV43 MOV85 INS42 INS3 UPD43 UPD43 INS42 MOV60 MOV21 INS54 INS43 INS85 INS60 INS21 UPD42 INS5 INS34 UPD42 UPD42 INS8 INS8 INS42 INS5 INS59 INS32 INS60 INS21 INS43 INS85 INS25 INS41 INS21 INS43 INS85 INS42 INS42 INS42 INS42 INS39 INS59 INS32 MOV43 INS42 INS27 INS8 INS42 INS32 INS42 UPD27 INS21 INS42 INS38 INS21 INS40 INS42 INS42 UPD42 MOV42 INS60 INS25 INS32 INS42 INS60 INS21 INS42 INS42 INS7 INS34 INS7 INS39 INS59 INS27 INS8 INS42 INS42 INS39 INS59 INS7 UPD42 INS40 INS14 INS42 INS32 INS32 INS42 INS32 INS42 INS34 INS60 INS21 INS42 INS32 INS42 INS32 INS40 INS40 UPD74 INS74 INS27 INS40 INS42 INS42 INS42 MOV42 INS42 INS40 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS42 INS36 INS32 UPD42 MOV42 UPD42 MOV42 UPD43 INS43 INS43 INS40 INS40 INS34 INS42 INS42 INS32 INS40 INS42 INS42 INS14 INS27 INS42 INS42 INS42 INS27 UPD42 UPD42 INS42 INS42 INS40 INS42 INS42 INS43 INS32 INS32 INS32 INS32 INS40 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 DEL83 DEL5 DEL39 DEL42 DEL44 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL39 DEL42 DEL44 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL42 DEL44 DEL34 DEL34 DEL42 DEL11