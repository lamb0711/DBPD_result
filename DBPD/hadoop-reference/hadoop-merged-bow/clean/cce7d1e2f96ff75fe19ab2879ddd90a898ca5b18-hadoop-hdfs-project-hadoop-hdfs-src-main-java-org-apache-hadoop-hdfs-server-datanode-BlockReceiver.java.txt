Merge remote-tracking branch 'origin/trunk' into MR-2841

Conflicts:
	hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/MapTask.java

+import org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos.BlockOpResponseProto;
+  /**
+   * for replaceBlock response
+   */
+  private final long responseInterval;
+  private long lastResponseTime = 0;
+  private boolean isReplaceBlock = false;
+  private DataOutputStream replyOut = null;
+
+      // For replaceBlock() calls response should be sent to avoid socketTimeout
+      // at clients. So sending with the interval of 0.5 * socketTimeout
+      this.responseInterval = (long) (datanode.getDnConf().socketTimeout * 0.5);
-        datanode.checkDiskError();
+        datanode.checkDiskErrorAsync();
-      datanode.checkDiskError();
+      datanode.checkDiskErrorAsync();
-        datanode.checkDiskError();
+        datanode.checkDiskErrorAsync();
+    /*
+     * Send in-progress responses for the replaceBlock() calls back to caller to
+     * avoid timeouts due to balancer throttling. HDFS-6247
+     */
+    if (isReplaceBlock
+        && (Time.monotonicNow() - lastResponseTime > responseInterval)) {
+      BlockOpResponseProto.Builder response = BlockOpResponseProto.newBuilder()
+          .setStatus(Status.IN_PROGRESS);
+      response.build().writeDelimitedTo(replyOut);
+      replyOut.flush();
+
+      lastResponseTime = Time.monotonicNow();
+    }
+
-
+  
+  public void sendOOB() throws IOException, InterruptedException {
+    ((PacketResponder) responder.getRunnable()).sendOOBResponse(PipelineAck
+        .getRestartOOBStatus());
+  }
+  
-      DatanodeInfo[] downstreams) throws IOException {
+      DatanodeInfo[] downstreams,
+      boolean isReplaceBlock) throws IOException {
+      this.replyOut = replyOut;
+      this.isReplaceBlock = isReplaceBlock;
+
+            FileWriter out = null;
-              FileWriter out = new FileWriter(restartMeta);
+              out = new FileWriter(restartMeta);
-              out.close();
+            } finally {
+              IOUtils.cleanup(LOG, out);
-            try {
-              ((PacketResponder) responder.getRunnable()).
-                  sendOOBResponse(PipelineAck.getRestartOOBStatus());
+            try {              
-            } catch (IOException ioe) {
-              LOG.info("Error sending OOB Ack.", ioe);
-            datanode.checkDiskError();
+            datanode.checkDiskErrorAsync();

INS26 INS40 INS23 INS23 INS23 INS23 INS31 INS29 INS83 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS43 INS59 INS83 INS39 INS42 INS43 INS43 MOV8 INS44 INS65 INS42 INS42 INS34 INS42 INS9 INS42 INS42 INS33 INS25 INS42 INS42 INS39 INS42 INS21 INS21 INS66 INS27 INS8 INS7 INS7 INS21 INS42 INS36 INS60 INS21 INS21 INS21 INS22 INS42 INS22 INS42 INS7 INS27 INS43 INS59 INS32 INS32 INS7 INS52 INS42 INS52 INS42 INS22 INS11 UPD42 INS27 INS42 INS40 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS52 INS42 INS39 INS36 INS32 INS42 INS32 INS42 INS40 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS22 INS34 UPD42 UPD42 INS32 INS42 INS60 INS54 INS42 INS42 MOV43 INS59 MOV21 INS8 INS8 MOV12 INS42 INS33 INS21 MOV21 UPD42 INS7 INS32 INS42 MOV14 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54