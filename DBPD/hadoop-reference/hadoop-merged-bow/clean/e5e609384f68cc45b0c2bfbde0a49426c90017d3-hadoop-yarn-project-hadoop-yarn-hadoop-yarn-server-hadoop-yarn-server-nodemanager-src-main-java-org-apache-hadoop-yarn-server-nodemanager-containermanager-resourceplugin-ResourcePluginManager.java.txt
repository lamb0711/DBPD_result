YARN-9140. Code cleanup in ResourcePluginManager.initialize and in TestResourcePluginManager. Contributed by Peter Bacsko

+import com.google.common.collect.Maps;
-import java.util.HashMap;
-    Map<String, ResourcePlugin> pluginMap = new HashMap<>();
+    String[] plugins = getPluginsFromConfig(conf);
+    Map<String, ResourcePlugin> pluginMap = Maps.newHashMap();
+    if (plugins != null) {
+      pluginMap = initializePlugins(context, plugins);
+    }
+
+    // Try to load pluggable device plugins
+    boolean pluggableDeviceFrameworkEnabled = conf.getBoolean(
+        YarnConfiguration.NM_PLUGGABLE_DEVICE_FRAMEWORK_ENABLED,
+        YarnConfiguration.DEFAULT_NM_PLUGGABLE_DEVICE_FRAMEWORK_ENABLED);
+
+    if (pluggableDeviceFrameworkEnabled) {
+      initializePluggableDevicePlugins(context, conf, pluginMap);
+    } else {
+      LOG.info("The pluggable device framework is not enabled."
+              + " If you want, please set true to {}",
+          YarnConfiguration.NM_PLUGGABLE_DEVICE_FRAMEWORK_ENABLED);
+    }
+    configuredPlugins = Collections.unmodifiableMap(pluginMap);
+  }
+
+  private String[] getPluginsFromConfig(Configuration conf) {
-    if (plugins != null) {
-      // Initialize each plugins
-      for (String resourceName : plugins) {
-        resourceName = resourceName.trim();
-        if (!SUPPORTED_RESOURCE_PLUGINS.contains(resourceName)) {
-          String msg =
-              "Trying to initialize resource plugin with name=" + resourceName
-                  + ", it is not supported, list of supported plugins:"
-                  + StringUtils.join(",", SUPPORTED_RESOURCE_PLUGINS);
-          LOG.error(msg);
-          throw new YarnException(msg);
-        }
+    return plugins;
+  }
-        if (pluginMap.containsKey(resourceName)) {
-          LOG.warn("Ignoring duplicate Resource plugin definition: " +
-              resourceName);
-          continue;
-        }
+  private Map<String, ResourcePlugin> initializePlugins(
+      Context context, String[] plugins) throws YarnException {
+    Map<String, ResourcePlugin> pluginMap = Maps.newHashMap();
+    for (String resourceName : plugins) {
+      resourceName = resourceName.trim();
+      ensurePluginIsSupported(resourceName);
+
+      if (!isPluginDuplicate(pluginMap, resourceName)) {
-    // Try to load pluggable device plugins
-    boolean puggableDeviceFrameworkEnabled = conf.getBoolean(
-        YarnConfiguration.NM_PLUGGABLE_DEVICE_FRAMEWORK_ENABLED,
-        YarnConfiguration.DEFAULT_NM_PLUGGABLE_DEVICE_FRAMEWORK_ENABLED);
+    return pluginMap;
+  }
-    if (puggableDeviceFrameworkEnabled) {
-      initializePluggableDevicePlugins(context, conf, pluginMap);
-    } else {
-      LOG.info("The pluggable device framework is not enabled."
-              + " If you want, please set true to {}",
-          YarnConfiguration.NM_PLUGGABLE_DEVICE_FRAMEWORK_ENABLED);
+  private void ensurePluginIsSupported(String resourceName)
+      throws YarnException {
+    if (!SUPPORTED_RESOURCE_PLUGINS.contains(resourceName)) {
+      String msg =
+          "Trying to initialize resource plugin with name=" + resourceName
+              + ", it is not supported, list of supported plugins:"
+              + StringUtils.join(",", SUPPORTED_RESOURCE_PLUGINS);
+      LOG.error(msg);
+      throw new YarnException(msg);
-    configuredPlugins = Collections.unmodifiableMap(pluginMap);
+  }
+
+  private boolean isPluginDuplicate(Map<String, ResourcePlugin> pluginMap,
+      String resourceName) {
+    if (pluginMap.containsKey(resourceName)) {
+      LOG.warn("Ignoring duplicate Resource plugin definition: " +
+          resourceName);
+      return true;
+    }
+    return false;

MOV26 UPD40 INS31 INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS43 MOV43 INS8 INS83 INS5 INS42 INS44 INS8 UPD83 INS74 UPD42 INS44 MOV8 INS83 INS39 INS42 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS43 INS42 INS42 MOV60 INS60 MOV60 INS25 MOV60 MOV25 MOV21 INS43 INS85 INS43 INS42 MOV60 MOV25 MOV21 INS41 INS43 INS43 INS43 INS5 INS42 INS60 INS41 INS43 INS42 INS42 MOV25 INS74 INS42 INS43 INS42 MOV25 INS41 INS42 INS5 INS59 MOV27 INS8 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS74 INS59 INS8 INS42 INS42 INS43 INS43 INS43 INS42 INS9 INS43 INS85 INS42 INS32 INS32 INS21 UPD42 INS42 INS43 INS43 INS43 INS42 INS32 MOV21 INS21 INS25 INS42 INS42 INS42 INS41 INS42 INS42 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS32 INS38 MOV8 INS9 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL43 DEL74 DEL14 DEL39 DEL25 DEL8 DEL18