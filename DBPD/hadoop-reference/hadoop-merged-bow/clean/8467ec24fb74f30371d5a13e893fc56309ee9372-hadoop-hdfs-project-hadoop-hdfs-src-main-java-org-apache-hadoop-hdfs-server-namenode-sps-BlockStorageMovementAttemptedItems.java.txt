HDFS-13110: [SPS]: Reduce the number of APIs in NamenodeProtocol used by external satisfier. Contributed by Rakesh R.

+ *
+ * @param <T>
+ *          is identifier of inode or full path name of inode. Internal sps will
+ *          use the file inodeId for the block movement. External sps will use
+ *          file string path representation for the block movement.
-public class BlockStorageMovementAttemptedItems{
+public class BlockStorageMovementAttemptedItems<T> {
-  private final List<AttemptedItemInfo> storageMovementAttemptedItems;
+  private final List<AttemptedItemInfo<T>> storageMovementAttemptedItems;
-  private BlockStorageMovementNeeded blockStorageMovementNeeded;
-  private final SPSService service;
+  private BlockStorageMovementNeeded<T> blockStorageMovementNeeded;
+  private final SPSService<T> service;
-  public BlockStorageMovementAttemptedItems(SPSService service,
-      BlockStorageMovementNeeded unsatisfiedStorageMovementFiles,
+  public BlockStorageMovementAttemptedItems(SPSService<T> service,
+      BlockStorageMovementNeeded<T> unsatisfiedStorageMovementFiles,
-  public void add(AttemptedItemInfo itemInfo) {
+  public void add(AttemptedItemInfo<T> itemInfo) {
-      Iterator<AttemptedItemInfo> iter = storageMovementAttemptedItems
+      Iterator<AttemptedItemInfo<T>> iter = storageMovementAttemptedItems
-        AttemptedItemInfo itemInfo = iter.next();
+        AttemptedItemInfo<T> itemInfo = iter.next();
-          Long blockCollectionID = itemInfo.getFileId();
+          T file = itemInfo.getFile();
-            ItemInfo candidate = new ItemInfo(itemInfo.getStartId(),
-                blockCollectionID, itemInfo.getRetryCount() + 1);
+            ItemInfo<T> candidate = new ItemInfo<T>(itemInfo.getStartPath(),
+                file, itemInfo.getRetryCount() + 1);
-                + "retries queue for next iteration.", blockCollectionID);
+                + "retries queue for next iteration.", file);
-
-          Iterator<AttemptedItemInfo> iterator = storageMovementAttemptedItems
-              .iterator();
+          Iterator<AttemptedItemInfo<T>> iterator =
+              storageMovementAttemptedItems.iterator();
-            AttemptedItemInfo attemptedItemInfo = iterator.next();
+            AttemptedItemInfo<T> attemptedItemInfo = iterator.next();
-              blockStorageMovementNeeded.add(new ItemInfo(attemptedItemInfo
-                  .getStartId(), attemptedItemInfo.getFileId(),
+              blockStorageMovementNeeded.add(new ItemInfo<T>(attemptedItemInfo
+                  .getStartPath(), attemptedItemInfo.getFile(),

INS73 INS65 INS42 UPD74 INS74 INS74 INS66 INS42 INS66 INS66 INS66 INS66 INS74 MOV43 INS43 MOV43 INS43 INS74 INS74 INS74 MOV43 INS43 INS42 INS42 MOV43 INS43 MOV43 INS43 MOV43 INS43 INS42 INS42 INS42 INS42 INS74 MOV43 INS74 MOV43 INS43 UPD74 MOV74 INS42 INS43 INS42 UPD43 INS74 UPD42 UPD42 MOV43 INS74 UPD42 INS74 MOV43 INS43 UPD74 MOV74 MOV43 INS43 UPD42 INS42 INS43 INS42 INS74 UPD42 INS42 MOV43 INS43 UPD42 INS42 INS74 MOV43 INS43 UPD42 UPD42 INS42