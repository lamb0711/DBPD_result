HADOOP-14553. Add (parallelized) integration tests to hadoop-azure
Contributed by Steve Loughran

- // The full qualified URL to the root directory
+  // The full qualified URL to the root directory
-    qualifiedPrefixUrl = new Path("/").makeQualified(fs.getUri(), fs.getWorkingDirectory())
+    qualifiedPrefixUrl = new Path("/").makeQualified(fs.getUri(),
+        fs.getWorkingDirectory())
-        wasbAbsolutePath = qualifiedPrefixUrl + wasbAbsolutePath;
-        AuthorizationComponent component = wasbAbsolutePath.endsWith("*")
-        ? new AuthorizationComponent("^" + wasbAbsolutePath.replace("*", ".*"), accessType)
+    wasbAbsolutePath = qualifiedPrefixUrl + wasbAbsolutePath;
+    AuthorizationComponent component = wasbAbsolutePath.endsWith("*")
+        ? new AuthorizationComponent("^" + wasbAbsolutePath.replace("*", ".*"),
+        accessType)
-  public boolean authorize(String wasbAbsolutePath, String accessType, String owner)
+  public boolean authorize(String wasbAbsolutePath,
+      String accessType,
+      String owner)
-    if (wasbAbsolutePath.endsWith(NativeAzureFileSystem.FolderRenamePending.SUFFIX)) {
+    if (wasbAbsolutePath.endsWith(
+        NativeAzureFileSystem.FolderRenamePending.SUFFIX)) {
-      && StringUtils.equalsIgnoreCase(wasbAbsolutePath, qualifiedPrefixUrl + "/")) {
+        && StringUtils.equalsIgnoreCase(wasbAbsolutePath,
+        qualifiedPrefixUrl + "/")) {
-      && this.performOwnerMatch;
+        && this.performOwnerMatch;
-    boolean isOwnerMatch =  StringUtils.equalsIgnoreCase(currentUserShortName, owner);
+    boolean isOwnerMatch = StringUtils.equalsIgnoreCase(currentUserShortName,
+        owner);
-      return shouldEvaluateOwnerAccess ? isOwnerMatch && authRules.get(component) : authRules.get(component);
+      return shouldEvaluateOwnerAccess ? isOwnerMatch && authRules.get(
+          component) : authRules.get(component);
-        if (keyPath.endsWith("*") && Pattern.matches(keyPath, wasbAbsolutePath) && keyAccess.equals(accessType)) {
-          return shouldEvaluateOwnerAccess ? isOwnerMatch && entry.getValue() : entry.getValue();
+        if (keyPath.endsWith("*") && Pattern.matches(keyPath, wasbAbsolutePath)
+            && keyAccess.equals(accessType)) {
+          return shouldEvaluateOwnerAccess
+              ? isOwnerMatch && entry.getValue()
+              : entry.getValue();
+
+  private static class AuthorizationComponent {
+
+    private final String wasbAbsolutePath;
+    private final String accessType;
+
+    AuthorizationComponent(String wasbAbsolutePath,
+        String accessType) {
+      this.wasbAbsolutePath = wasbAbsolutePath;
+      this.accessType = accessType;
+    }
+
+    @Override
+    public int hashCode() {
+      return this.wasbAbsolutePath.hashCode() ^ this.accessType.hashCode();
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+
+      if (obj == this) {
+        return true;
+      }
+
+      if (obj == null
+          || !(obj instanceof AuthorizationComponent)) {
+        return false;
+      }
+
+      return ((AuthorizationComponent) obj).
+          getWasbAbsolutePath().equals(this.wasbAbsolutePath)
+          && ((AuthorizationComponent) obj).
+          getAccessType().equals(this.accessType);
+    }
+
+    public String getWasbAbsolutePath() {
+      return this.wasbAbsolutePath;
+    }
+
+    public String getAccessType() {
+      return accessType;
+    }
+  }
-
-class AuthorizationComponent {
-
-  private String wasbAbsolutePath;
-  private String accessType;
-
-  public AuthorizationComponent(String wasbAbsolutePath,
-      String accessType) {
-    this.wasbAbsolutePath = wasbAbsolutePath;
-    this.accessType = accessType;
-  }
-
-  @Override
-  public int hashCode() {
-    return this.wasbAbsolutePath.hashCode() ^ this.accessType.hashCode();
-  }
-
-  @Override
-  public boolean equals(Object obj) {
-
-    if (obj == this) {
-      return true;
-    }
-
-    if (obj == null
-        || !(obj instanceof AuthorizationComponent)) {
-      return false;
-    }
-
-    return ((AuthorizationComponent)obj).
-              getWasbAbsolutePath().equals(this.wasbAbsolutePath)
-            && ((AuthorizationComponent)obj).
-              getAccessType().equals(this.accessType);
-  }
-
-  public String getWasbAbsolutePath() {
-    return this.wasbAbsolutePath;
-  }
-
-  public String getAccessType() {
-    return accessType;
-  }
-}

INS55 INS83 INS83 INS42 INS23 INS23 INS31 MOV31 MOV31 MOV31 MOV31 INS83 INS83 MOV43 MOV59 INS83 INS83 MOV43 MOV59 INS42 MOV44 MOV44 MOV8 DEL42 DEL83 DEL23 DEL83 DEL23 DEL83 DEL42 DEL31 DEL55