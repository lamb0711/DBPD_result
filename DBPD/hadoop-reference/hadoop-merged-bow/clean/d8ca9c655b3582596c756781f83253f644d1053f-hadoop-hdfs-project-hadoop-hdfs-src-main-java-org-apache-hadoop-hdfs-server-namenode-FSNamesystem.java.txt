HDFS-4532. RPC call queue may fill due to current user lookup (daryn)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1452435 13f79535-47bb-0310-9956-ffa450edef68

-  private void logAuditEvent(UserGroupInformation ugi,
-      InetAddress addr, String cmd, String src, String dst,
-      HdfsFileStatus stat) {
-    logAuditEvent(true, ugi, addr, cmd, src, dst, stat);
+  private HdfsFileStatus getAuditFileInfo(String path, boolean resolveSymlink)
+      throws IOException {
+    return (isAuditEnabled() && isExternalInvocation())
+        ? dir.getFileInfo(path, resolveSymlink) : null;
+  }
+  
+  private void logAuditEvent(boolean succeeded, String cmd, String src)
+      throws IOException {
+    logAuditEvent(succeeded, cmd, src, null, null);
+  }
+  
+  private void logAuditEvent(boolean succeeded, String cmd, String src,
+      String dst, HdfsFileStatus stat) throws IOException {
+    if (isAuditEnabled() && isExternalInvocation()) {
+      logAuditEvent(succeeded, getRemoteUser(), getRemoteIp(),
+                    cmd, src, dst, stat);
+    }
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(false, UserGroupInformation.getCurrentUser(),
-                      getRemoteIp(),
-                      "setPermission", src, null, null);
-      }
+      logAuditEvent(false, "setPermission", src);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        resultingStat = dir.getFileInfo(src, false);
-      }
+      resultingStat = getAuditFileInfo(src, false);
-    if (isAuditEnabled() && isExternalInvocation()) {
-      logAuditEvent(UserGroupInformation.getCurrentUser(),
-                    getRemoteIp(),
-                    "setPermission", src, null, resultingStat);
-    }
+    logAuditEvent(true, "setPermission", src, null, resultingStat);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(false, UserGroupInformation.getCurrentUser(),
-                      getRemoteIp(),
-                      "setOwner", src, null, null);
-      }
+      logAuditEvent(false, "setOwner", src);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        resultingStat = dir.getFileInfo(src, false);
-      }
+      resultingStat = getAuditFileInfo(src, false);
-    if (isAuditEnabled() && isExternalInvocation()) {
-      logAuditEvent(UserGroupInformation.getCurrentUser(),
-                    getRemoteIp(),
-                    "setOwner", src, null, resultingStat);
-    }
+    logAuditEvent(true, "setOwner", src, null, resultingStat);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(false, UserGroupInformation.getCurrentUser(),
-                      getRemoteIp(),
-                      "open", src, null, null);
-      }
+      logAuditEvent(false, "open", src);
-    if (isAuditEnabled() && isExternalInvocation()) {
-      logAuditEvent(UserGroupInformation.getCurrentUser(),
-                    getRemoteIp(),
-                    "open", src, null, null);
-    }
+    logAuditEvent(true, "open", src);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(false, UserGroupInformation.getLoginUser(),
-                      getRemoteIp(),
-                      "concat", Arrays.toString(srcs), target, null);
-      }
+      logAuditEvent(false, "concat", Arrays.toString(srcs), target, null);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        resultingStat = dir.getFileInfo(target, false);
-      }
+      resultingStat = getAuditFileInfo(target, false);
-    if (isAuditEnabled() && isExternalInvocation()) {
-      logAuditEvent(UserGroupInformation.getLoginUser(),
-                    getRemoteIp(),
-                    "concat", Arrays.toString(srcs), target, resultingStat);
-    }
+    logAuditEvent(true, "concat", Arrays.toString(srcs), target, resultingStat);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(false, UserGroupInformation.getCurrentUser(),
-                      getRemoteIp(),
-                      "setTimes", src, null, null);
-      }
+      logAuditEvent(false, "setTimes", src);
+    HdfsFileStatus resultingStat = null;
-        if (isAuditEnabled() && isExternalInvocation()) {
-          final HdfsFileStatus stat = dir.getFileInfo(src, false);
-          logAuditEvent(UserGroupInformation.getCurrentUser(),
-                        getRemoteIp(),
-                        "setTimes", src, null, stat);
-        }
+        resultingStat = getAuditFileInfo(src, false);
+    logAuditEvent(true, "setTimes", src, null, resultingStat);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(false, UserGroupInformation.getCurrentUser(),
-                      getRemoteIp(),
-                      "createSymlink", link, target, null);
-      }
+      logAuditEvent(false, "createSymlink", link, target, null);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        resultingStat = dir.getFileInfo(link, false);
-      }
+      resultingStat = getAuditFileInfo(link, false);
-    if (isAuditEnabled() && isExternalInvocation()) {
-      logAuditEvent(UserGroupInformation.getCurrentUser(),
-                    getRemoteIp(),
-                    "createSymlink", link, target, resultingStat);
-    }
+    logAuditEvent(true, "createSymlink", link, target, resultingStat);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(false, UserGroupInformation.getCurrentUser(),
-                      getRemoteIp(),
-                      "setReplication", src, null, null);
-      }
+      logAuditEvent(false, "setReplication", src);
-    if (isFile && isAuditEnabled() && isExternalInvocation()) {
-      logAuditEvent(UserGroupInformation.getCurrentUser(),
-                    getRemoteIp(),
-                    "setReplication", src, null, null);
+    if (isFile) {
+      logAuditEvent(true, "setReplication", src);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(false, UserGroupInformation.getCurrentUser(),
-                      getRemoteIp(),
-                      "create", src, null, null);
-      }
+      logAuditEvent(false, "create", src);
-    if (isAuditEnabled() && isExternalInvocation()) {
-      logAuditEvent(UserGroupInformation.getCurrentUser(),
-                    getRemoteIp(),
-                    "create", src, null, stat);
-    }
+    logAuditEvent(true, "create", src, null, stat);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(false, UserGroupInformation.getCurrentUser(),
-                      getRemoteIp(),
-                      "append", src, null, null);
-      }
+      logAuditEvent(false, "append", src);
-    if (isAuditEnabled() && isExternalInvocation()) {
-      logAuditEvent(UserGroupInformation.getCurrentUser(),
-                    getRemoteIp(),
-                    "append", src, null, null);
-    }
+    logAuditEvent(true, "append", src);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(false, UserGroupInformation.getCurrentUser(),
-                      getRemoteIp(),
-                      "rename", src, dst, null);
-      }
+      logAuditEvent(false, "rename", src, dst, null);
-      if (status && isAuditEnabled() && isExternalInvocation()) {
-        resultingStat = dir.getFileInfo(dst, false);
+      if (status) {
+        resultingStat = getAuditFileInfo(dst, false);
-    if (status && isAuditEnabled() && isExternalInvocation()) {
-      logAuditEvent(UserGroupInformation.getCurrentUser(),
-                    getRemoteIp(),
-                    "rename", src, dst, resultingStat);
+    if (status) {
+      logAuditEvent(true, "rename", src, dst, resultingStat);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        resultingStat = dir.getFileInfo(dst, false); 
-      }
+      resultingStat = getAuditFileInfo(dst, false);
-    if (isAuditEnabled() && isExternalInvocation()) {
+    if (resultingStat != null) {
-      logAuditEvent(UserGroupInformation.getCurrentUser(), getRemoteIp(),
-                    cmd.toString(), src, dst, resultingStat);
+      logAuditEvent(true, cmd.toString(), src, dst, resultingStat);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(false, UserGroupInformation.getCurrentUser(),
-                      getRemoteIp(),
-                      "delete", src, null, null);
-      }
+      logAuditEvent(false, "delete", src);
-    if (status && isAuditEnabled() && isExternalInvocation()) {
-      logAuditEvent(UserGroupInformation.getCurrentUser(),
-                    getRemoteIp(),
-                    "delete", src, null, null);
+    if (status) {
+      logAuditEvent(true, "delete", src);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(false, UserGroupInformation.getCurrentUser(),
-                      getRemoteIp(),
-                      "getfileinfo", src, null, null);
-      }
+      logAuditEvent(false, "getfileinfo", src);
-    if (isAuditEnabled() && isExternalInvocation()) {
-      logAuditEvent(UserGroupInformation.getCurrentUser(),
-                    getRemoteIp(),
-                    "getfileinfo", src, null, null);
-    }
+    logAuditEvent(true, "getfileinfo", src);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(false, UserGroupInformation.getCurrentUser(),
-                      getRemoteIp(),
-                      "mkdirs", src, null, null);
-      }
+      logAuditEvent(false, "mkdirs", src);
+    HdfsFileStatus resultingStat = null;
+      if (status) {
+        resultingStat = dir.getFileInfo(src, false);
+      }
-    if (status && isAuditEnabled() && isExternalInvocation()) {
-      final HdfsFileStatus stat = dir.getFileInfo(src, false);
-      logAuditEvent(UserGroupInformation.getCurrentUser(),
-                    getRemoteIp(),
-                    "mkdirs", src, null, stat);
+    if (status) {
+      logAuditEvent(true, "mkdirs", src, null, resultingStat);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(false, UserGroupInformation.getCurrentUser(),
-                      getRemoteIp(),
-                      "listStatus", src, null, null);
-      }
+      logAuditEvent(false, "listStatus", src);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(UserGroupInformation.getCurrentUser(),
-                      getRemoteIp(),
-                      "listStatus", src, null, null);
-      }
+      logAuditEvent(true, "listStatus", src);
-      UserGroupInformation ugi = UserGroupInformation.getCurrentUser();
+      UserGroupInformation ugi = getRemoteUser();
-      String renewer = UserGroupInformation.getCurrentUser().getShortUserName();
+      String renewer = getRemoteUser().getShortUserName();
-      String canceller = UserGroupInformation.getCurrentUser().getUserName();
+      String canceller = getRemoteUser().getUserName();
-    UserGroupInformation ugi = UserGroupInformation.getCurrentUser();
+    UserGroupInformation ugi = getRemoteUser();
+  // optimize ugi lookup for RPC operations to avoid a trip through
+  // UGI.getCurrentUser which is synch'ed
+  private static UserGroupInformation getRemoteUser() throws IOException {
+    UserGroupInformation ugi = null;
+    if (Server.isRpcInvocation()) {
+      ugi = Server.getRemoteUser();
+    }
+    return (ugi != null) ? ugi : UserGroupInformation.getCurrentUser();
+  }
+  
-      logAuditEvent(UserGroupInformation.getCurrentUser(),
+      logAuditEvent(true, getRemoteUser(),

INS31 INS31 INS31 INS31 MOV83 MOV43 INS42 INS44 INS44 INS43 INS8 INS83 MOV39 MOV42 MOV44 MOV44 INS44 INS43 INS8 INS83 INS39 INS42 INS44 MOV44 MOV44 MOV44 MOV44 INS43 INS8 INS83 INS83 INS43 INS42 INS43 INS8 INS43 INS42 INS39 INS42 INS42 INS41 INS39 UPD42 UPD43 UPD42 INS43 INS42 INS42 INS21 INS39 INS42 INS42 INS25 MOV21 MOV21 MOV21 MOV21 INS60 INS21 MOV21 MOV21 MOV21 MOV21 MOV60 INS25 INS42 INS42 INS60 INS25 INS41 INS42 INS16 UPD42 INS42 INS32 MOV27 INS8 INS43 INS59 INS32 INS42 INS42 UPD27 INS42 INS42 INS8 MOV43 MOV43 INS59 INS32 INS8 INS16 INS36 INS32 INS33 INS42 INS42 INS42 INS42 INS33 INS33 MOV21 INS8 MOV21 INS9 INS8 INS21 INS9 INS8 INS9 INS8 MOV21 INS9 INS8 INS42 INS42 INS33 INS42 INS9 INS45 INS42 INS33 INS42 INS8 MOV21 INS9 INS8 INS8 INS9 INS8 INS9 INS8 MOV21 INS42 INS33 INS8 MOV44 INS8 INS9 MOV44 INS8 UPD42 INS33 MOV25 MOV21 INS8 MOV21 INS42 INS33 INS42 INS42 INS21 INS36 INS42 MOV32 MOV27 INS42 INS42 INS42 INS42 MOV21 MOV53 MOV21 MOV53 INS7 MOV21 MOV53 MOV21 MOV53 MOV21 MOV53 MOV8 MOV21 MOV53 MOV21 MOV53 MOV21 MOV53 MOV21 MOV53 MOV21 MOV53 INS42 MOV21 MOV53 MOV21 MOV53 MOV21 MOV53 INS42 MOV21 MOV53 MOV43 MOV43 MOV43 UPD42 INS7 INS27 UPD42 INS32 MOV32 INS42 INS32 MOV21 INS21 INS9 INS9 INS9 INS9 INS9 UPD42 INS9 INS42 INS32 INS42 INS33 INS9 UPD42 MOV42 UPD42 INS42 INS42 INS9 UPD42 INS7 UPD42 UPD42 UPD42 INS42 INS42 UPD42 INS42 INS32 UPD42 UPD42 UPD42 MOV42 MOV42 MOV9 UPD42 DEL9 DEL8 DEL31 DEL42 DEL42 DEL32 DEL33 DEL33 DEL8 DEL25 DEL8 DEL42 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL33 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL8 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL33 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL8 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL33 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL8 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL33 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL8 DEL83 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL45 DEL42 DEL33 DEL42 DEL32 DEL21 DEL42 DEL32 DEL42 DEL32 DEL27 DEL25 DEL8 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL8 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL33 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL8 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL33 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL33 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL8 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL33 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL8 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL33 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL8 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL33 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL8 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL33 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL33 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL8 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL33 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL33 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL8 DEL83 DEL42 DEL42 DEL42 DEL9 DEL32 DEL42 DEL32 DEL42 DEL32 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL42 DEL32 DEL33 DEL33 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL8 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL33 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL42