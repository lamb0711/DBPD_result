YARN-736. Add a multi-resource fair sharing metric. (sandyr via tucu)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1496153 13f79535-47bb-0310-9956-ffa450edef68

-  private Resource demand;
+  private Resource maxShare;
-    this(0, 0, 1, 0, 0, 0);
+    this(0, Integer.MAX_VALUE, 1, 0, 0, 0);
-  public FakeSchedulable(int demand) {
-    this(demand, 0, 1, 0, 0, 0);
+  public FakeSchedulable(int minShare) {
+    this(minShare, Integer.MAX_VALUE, 1, 0, 0, 0);
-  public FakeSchedulable(int demand, int minShare) {
-    this(demand, minShare, 1, 0, 0, 0);
+  public FakeSchedulable(int minShare, int maxShare) {
+    this(minShare, maxShare, 1, 0, 0, 0);
-  public FakeSchedulable(int demand, int minShare, double memoryWeight) {
-    this(demand, minShare, memoryWeight, 0, 0, 0);
+  public FakeSchedulable(int minShare, double memoryWeight) {
+    this(minShare, Integer.MAX_VALUE, memoryWeight, 0, 0, 0);
-  public FakeSchedulable(int demand, int minShare, double weight, int fairShare, int usage,
+  public FakeSchedulable(int minShare, int maxShare, double memoryWeight) {
+    this(minShare, maxShare, memoryWeight, 0, 0, 0);
+  }
+  
+  public FakeSchedulable(int minShare, int maxShare, double weight, int fairShare, int usage,
-    this(Resources.createResource(demand), Resources.createResource(minShare),
-        new ResourceWeights((float)weight), Resources.createResource(fairShare),
-        Resources.createResource(usage), startTime);
+    this(Resources.createResource(minShare, 0), Resources.createResource(maxShare, 0),
+        new ResourceWeights((float)weight), Resources.createResource(fairShare, 0),
+        Resources.createResource(usage, 0), startTime);
-  public FakeSchedulable(Resource demand, Resource minShare, ResourceWeights weight,
-      Resource fairShare, Resource usage, long startTime) {
-    this.demand = demand;
+  public FakeSchedulable(Resource minShare, ResourceWeights weights) {
+    this(minShare, Resources.createResource(Integer.MAX_VALUE, Integer.MAX_VALUE),
+        weights, Resources.createResource(0, 0), Resources.createResource(0, 0), 0);
+  }
+  
+  public FakeSchedulable(Resource minShare, Resource maxShare,
+      ResourceWeights weight, Resource fairShare, Resource usage, long startTime) {
+    this.maxShare = maxShare;
-    return demand;
+    return null;
+  
+  @Override
+  public Resource getMaxShare() {
+    return maxShare;
+  }

MOV23 MOV31 INS31 MOV44 INS31 MOV44 INS31 INS44 INS83 INS42 MOV44 INS44 INS8 MOV44 INS83 INS42 INS44 INS44 INS8 MOV21 MOV78 INS83 MOV43 INS42 INS8 INS78 INS43 UPD42 UPD42 UPD42 UPD42 INS39 INS42 INS39 INS42 INS17 UPD42 UPD42 INS43 INS42 INS43 INS42 INS17 UPD42 INS41 INS42 INS42 INS40 UPD42 INS40 UPD42 UPD42 INS42 INS40 INS42 INS34 INS34 INS34 UPD42 UPD42 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS34 INS33 UPD42 UPD42 INS34 UPD42 INS34 INS34 INS34 INS42 INS42 INS40 INS40 INS42 INS42 INS34 INS34 INS42 INS42 INS34 INS34 UPD42 UPD42 DEL34 DEL34