YARN-1010. FairScheduler: decouple container scheduling from nodemanager heartbeats. (Wei Yan via Sandy Ryza)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1528192 13f79535-47bb-0310-9956-ffa450edef68

+  protected boolean continuousSchedulingEnabled; // Continuous Scheduling enabled or not
+  protected int continuousSchedulingSleepMs; // Sleep time for each pass in continuous scheduling
+  protected long nodeLocalityDelayMs; // Delay for node locality
+  protected long rackLocalityDelayMs; // Delay for rack locality
+  public long getNodeLocalityDelayMs() {
+    return nodeLocalityDelayMs;
+  }
+
+  public long getRackLocalityDelayMs() {
+    return rackLocalityDelayMs;
+  }
+
+  public boolean isContinuousSchedulingEnabled() {
+    return continuousSchedulingEnabled;
+  }
+
+  public synchronized int getContinuousSchedulingSleepMs() {
+    return continuousSchedulingSleepMs;
+  }
+
+    if (continuousSchedulingEnabled) {
+      if (!completedContainers.isEmpty()) {
+        attemptScheduling(node);
+      }
+    } else {
+      attemptScheduling(node);
+    }
+  }
+
+  private void continuousScheduling() {
+    while (true) {
+      for (FSSchedulerNode node : nodes.values()) {
+        try {
+          if (Resources.fitsIn(minimumAllocation, node.getAvailableResource())) {
+            attemptScheduling(node);
+          }
+        } catch (Throwable ex) {
+          LOG.warn("Error while attempting scheduling for node " + node + ": " +
+                  ex.toString(), ex);
+        }
+      }
+      try {
+        Thread.sleep(getContinuousSchedulingSleepMs());
+      } catch (InterruptedException e) {
+        LOG.warn("Error while doing sleep in continuous scheduling: " +
+                e.toString(), e);
+      }
+    }
+  }
+  
+  private synchronized void attemptScheduling(FSSchedulerNode node) {
-      if (reservedAppSchedulable != null &&
-          !reservedAppSchedulable.hasContainerForNode(reservedPriority, node)) {
+      if (!reservedAppSchedulable.hasContainerForNode(reservedPriority, node)) {
-            + " on node " + nm);
+            + " on node " + node);
-            + " on node: " + nm);
+            + " on node: " + node);
+    continuousSchedulingEnabled = this.conf.isContinuousSchedulingEnabled();
+    continuousSchedulingSleepMs =
+            this.conf.getContinuousSchedulingSleepMs();
+    nodeLocalityDelayMs = this.conf.getLocalityDelayNodeMs();
+    rackLocalityDelayMs = this.conf.getLocalityDelayRackMs();
+
+      if (continuousSchedulingEnabled) {
+        // start continuous scheduling thread
+        Thread schedulingThread = new Thread(
+          new Runnable() {
+            @Override
+            public void run() {
+              continuousScheduling();
+            }
+          }
+        );
+        schedulingThread.setName("ContinuousScheduling");
+        schedulingThread.setDaemon(true);
+        schedulingThread.start();
+      }

INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS83 INS39 INS42 INS8 MOV29 INS83 INS83 INS39 INS42 MOV44 INS8 INS83 INS39 INS42 INS8 INS42 INS44 INS42 INS42 INS42 INS42 INS41 INS41 INS41 INS41 MOV25 MOV21 MOV60 MOV60 MOV60 MOV60 MOV70 MOV70 MOV70 INS25 INS61 INS43 INS42 INS21 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS8 INS8 INS9 INS8 INS42 INS7 INS7 INS7 INS7 INS25 INS21 INS70 INS54 MOV8 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS25 INS38 INS8 INS32 INS44 INS32 INS8 INS8 INS12 MOV38 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS42 INS8 INS32 INS21 INS42 INS42 INS43 INS42 INS42 INS42 INS54 INS21 INS44 INS8 MOV21 MOV21 MOV21 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS60 INS21 INS21 INS21 INS42 INS42 INS32 INS42 INS8 INS12 INS32 INS43 INS42 INS21 INS43 INS59 INS32 INS32 INS32 INS42 INS42 INS25 INS44 INS8 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS45 INS42 INS42 INS9 INS42 INS42 INS32 INS8 INS43 INS42 INS21 INS42 INS42 INS42 INS27 INS42 UPD45 UPD45 UPD42 UPD45 UPD45 UPD42 INS43 INS14 INS42 INS42 INS42 INS32 INS21 INS42 INS32 INS45 INS32 INS42 INS43 INS1 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS31 INS42 INS42 INS45 INS42 INS45 INS32 INS78 INS83 INS39 INS42 INS8 INS42 INS42 INS42 INS21 INS32 INS42 DEL42 DEL42 DEL33 DEL27 DEL27