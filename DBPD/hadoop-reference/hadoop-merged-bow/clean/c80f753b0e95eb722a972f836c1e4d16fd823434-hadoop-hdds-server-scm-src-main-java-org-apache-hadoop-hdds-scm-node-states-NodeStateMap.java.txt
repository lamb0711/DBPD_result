HDDS-737. Introduce Incremental Container Report.
Contributed by Nanda kumar.

+import org.apache.hadoop.hdds.scm.container.ContainerID;
+  /**
+   * Node to set of containers on the node.
+   */
+  private final ConcurrentHashMap<UUID, Set<ContainerID>> nodeToContainer;
+    nodeToContainer = new ConcurrentHashMap<>();
+      nodeStats.put(id, new SCMNodeStat());
+      nodeToContainer.put(id, Collections.emptySet());
-   * Removes the node from NodeStateMap.
-   *
-   * @param uuid node id
-   *
-   * @throws NodeNotFoundException if the node is not found
-   */
-  public void removeNode(UUID uuid) throws NodeNotFoundException {
-    lock.writeLock().lock();
-    try {
-      if (nodeMap.containsKey(uuid)) {
-        for (Map.Entry<NodeState, Set<UUID>> entry : stateMap.entrySet()) {
-          if(entry.getValue().remove(uuid)) {
-            break;
-          }
-          nodeMap.remove(uuid);
-        }
-        throw new NodeNotFoundException("Node UUID: " + uuid);
-      }
-    } finally {
-      lock.writeLock().unlock();
-    }
-  }
-
-  /**
-  /**
-   * Remove the current stats of the specify node.
-   *
-   * @param uuid node id
-   *
-   * @return SCMNodeStat the stat removed from the node.
-   *
-   * @throws NodeNotFoundException if the node is not found
-   */
-  public SCMNodeStat removeNodeStat(UUID uuid) throws NodeNotFoundException {
-    SCMNodeStat stat = nodeStats.remove(uuid);
-    if (stat == null) {
+  public void setContainers(UUID uuid, Set<ContainerID> containers)
+      throws NodeNotFoundException{
+    if (!nodeToContainer.containsKey(uuid)) {
-    return stat;
+    nodeToContainer.put(uuid, containers);
+  }
+
+  public Set<ContainerID> getContainers(UUID uuid)
+      throws NodeNotFoundException {
+    Set<ContainerID> containers = nodeToContainer.get(uuid);
+    if (containers == null) {
+      throw new NodeNotFoundException("Node UUID: " + uuid);
+    }
+    return Collections.unmodifiableSet(containers);
+  }
+
+  public void removeContainer(UUID uuid, ContainerID containerID) throws
+      NodeNotFoundException {
+    Set<ContainerID> containers = nodeToContainer.get(uuid);
+    if (containers == null) {
+      throw new NodeNotFoundException("Node UUID: " + uuid);
+    }
+    containers.remove(containerID);

INS26 INS40 INS23 INS31 INS31 INS29 INS83 INS83 INS74 INS59 MOV83 MOV39 UPD42 MOV42 MOV44 INS44 MOV43 INS8 INS74 INS42 MOV43 INS83 INS39 INS42 INS44 INS44 MOV43 INS8 MOV65 INS43 MOV43 INS74 INS42 INS21 UPD74 MOV74 INS42 INS25 INS21 INS43 INS43 INS43 INS42 INS43 INS42 INS60 INS25 MOV21 UPD66 INS42 INS43 INS43 INS7 INS43 INS38 INS8 INS32 UPD42 MOV42 INS42 INS74 INS32 INS42 INS42 INS74 INS59 INS27 INS8 INS42 INS42 INS42 INS14 INS21 INS21 INS42 INS32 INS53 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS43 INS43 UPD42 UPD42 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS33 MOV53 UPD42 MOV42 UPD42 MOV42 UPD42 INS74 INS32 INS32 UPD42 MOV42 MOV42 MOV42 INS14 UPD42 MOV42 INS42 UPD42 UPD42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 MOV42 INS43 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS32 INS43 INS27 INS43 INS42 MOV43 INS42 INS42 UPD42 MOV42 INS45 INS42 INS42 INS42 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL32 DEL40 DEL43 DEL43 DEL74 DEL42 DEL44 DEL32 DEL32 DEL42 DEL42 DEL32 DEL10 DEL8 DEL25 DEL32 DEL21 DEL8 DEL70 DEL8 DEL25 DEL8 DEL8 DEL54 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL43 DEL42 DEL42 DEL32