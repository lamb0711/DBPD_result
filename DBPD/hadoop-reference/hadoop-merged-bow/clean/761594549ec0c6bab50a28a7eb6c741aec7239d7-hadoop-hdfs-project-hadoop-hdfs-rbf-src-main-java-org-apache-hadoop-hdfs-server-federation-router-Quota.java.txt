HDFS-14814. RBF: RouterQuotaUpdateService supports inherited rule. Contributed by Jinglun.

+import java.util.Map.Entry;
+import java.util.TreeMap;
+    setQuotaInternal(path, null, namespaceQuota, storagespaceQuota, type);
+  }
+
+  /**
+   * Set quota for the federation path.
+   * @param path Federation path.
+   * @param locations Locations of the Federation path.
+   * @param namespaceQuota Name space quota.
+   * @param storagespaceQuota Storage space quota.
+   * @param type StorageType that the space quota is intended to be set on.
+   * @throws IOException If the quota system is disabled.
+   */
+  void setQuotaInternal(String path, List<RemoteLocation> locations,
+      long namespaceQuota, long storagespaceQuota, StorageType type)
+      throws IOException {
-    final List<RemoteLocation> locations = getQuotaRemoteLocations(path);
+    if (locations == null) {
+      locations = getQuotaRemoteLocations(path);
+    }
-   * Get quota usage for the federation path.
+   * Get aggregated quota usage for the federation path.
+    return aggregateQuota(getEachQuotaUsage(path));
+  }
+
+  /**
+   * Get quota usage for the federation path.
+   * @param path Federation path.
+   * @return quota usage for each remote location.
+   * @throws IOException If the quota system is disabled.
+   */
+  Map<RemoteLocation, QuotaUsage> getEachQuotaUsage(String path)
+      throws IOException {
-    return aggregateQuota(results);
+    return results;
+  }
+
+  /**
+   * Get global quota for the federation path.
+   * @param path Federation path.
+   * @return global quota for path.
+   * @throws IOException If the quota system is disabled.
+   */
+  QuotaUsage getGlobalQuota(String path) throws IOException {
+    if (!router.isQuotaEnabled()) {
+      throw new IOException("The quota system is disabled in Router.");
+    }
+
+    long nQuota = HdfsConstants.QUOTA_RESET;
+    long sQuota = HdfsConstants.QUOTA_RESET;
+    RouterQuotaManager manager = this.router.getQuotaManager();
+    TreeMap<String, RouterQuotaUsage> pts =
+        manager.getParentsContainingQuota(path);
+    Entry<String, RouterQuotaUsage> entry = pts.lastEntry();
+    while (entry != null && (nQuota == HdfsConstants.QUOTA_RESET
+        || sQuota == HdfsConstants.QUOTA_RESET)) {
+      String ppath = entry.getKey();
+      QuotaUsage quota = entry.getValue();
+      if (nQuota == HdfsConstants.QUOTA_RESET) {
+        nQuota = quota.getQuota();
+      }
+      if (sQuota == HdfsConstants.QUOTA_RESET) {
+        sQuota = quota.getSpaceQuota();
+      }
+      entry = pts.lowerEntry(ppath);
+    }
+    return new QuotaUsage.Builder().quota(nQuota).spaceQuota(sQuota).build();
-  private QuotaUsage aggregateQuota(Map<RemoteLocation, QuotaUsage> results) {
+  QuotaUsage aggregateQuota(Map<RemoteLocation, QuotaUsage> results) {

INS26 INS26 INS40 INS40 INS31 INS31 INS31 MOV29 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS29 UPD42 INS44 MOV29 INS83 MOV43 INS42 INS44 INS43 INS8 INS29 INS74 UPD42 INS29 INS43 INS42 INS44 INS43 INS8 INS43 INS42 INS39 INS42 INS39 INS42 INS43 INS42 INS42 INS21 INS65 INS65 INS65 INS65 INS65 INS65 INS65 MOV74 INS42 INS25 INS65 INS43 INS42 INS42 INS41 MOV65 INS65 INS65 INS65 INS43 INS43 INS43 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS42 INS25 INS60 INS60 INS60 INS60 INS60 INS61 INS41 INS42 INS42 INS32 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS27 INS8 INS66 INS42 INS32 INS42 INS66 INS66 INS42 INS66 INS42 INS42 INS42 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS38 INS8 INS39 INS59 INS39 INS59 INS43 INS59 INS74 INS59 INS74 INS59 INS27 INS8 INS32 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS33 INS21 INS42 INS32 INS32 INS53 INS42 INS40 INS42 INS40 INS42 INS42 INS32 INS43 INS43 INS43 INS42 INS32 INS43 INS43 INS43 INS42 INS32 INS27 INS36 INS60 INS60 INS25 INS25 INS21 INS32 INS42 INS7 INS42 INS42 INS42 INS42 INS14 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS27 INS43 INS59 INS43 INS59 INS27 INS8 INS27 INS8 INS7 INS32 INS42 INS42 INS42 MOV32 INS43 INS45 INS52 INS42 INS27 INS27 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS40 INS21 INS42 INS40 INS21 INS42 INS32 INS14 INS42 INS42 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS42 INS42 INS7 INS7 INS42 INS42 INS42 INS43 INS42 INS32 INS42 INS32 INS40 INS42 INS42 INS42 INS42 DEL83 DEL83 DEL42 DEL59 DEL60 DEL83 DEL42 DEL42 DEL32 DEL83