YARN-1509. Make AMRMClient support send increase container request and get increased/decreased containers. (Meng Ding via wangda)

+import java.util.ArrayList;
-  
+
+  /**
+   *
+   * @param intervalMs heartbeat interval in milliseconds between AM and RM
+   * @param callbackHandler callback handler that processes responses from
+   *                        the <code>ResourceManager</code>
+   */
+  public AMRMClientAsyncImpl(
+      int intervalMs, AbstractCallbackHandler callbackHandler) {
+    this(new AMRMClientImpl<T>(), intervalMs, callbackHandler);
+  }
+
+  public AMRMClientAsyncImpl(AMRMClient<T> client, int intervalMs,
+      AbstractCallbackHandler callbackHandler) {
+    super(client, intervalMs, callbackHandler);
+    heartbeatThread = new HeartbeatThread();
+    handlerThread = new CallbackHandlerThread();
+    responseQueue = new LinkedBlockingQueue<>();
+    keepRunning = true;
+    savedException = null;
+  }
+
+  /**
+   *
+   * @deprecated Use {@link #AMRMClientAsyncImpl(int,
+   *             AMRMClientAsync.AbstractCallbackHandler)} instead.
+   */
+  @Deprecated
-  
+
+  @Deprecated
-    
+
+  @Override
+  public void requestContainerResourceChange(
+      Container container, Resource capability) {
+    client.requestContainerResourceChange(container, capability);
+  }
+
+          if (handler instanceof AMRMClientAsync.AbstractCallbackHandler) {
+            // RM side of the implementation guarantees that there are
+            // no duplications between increased and decreased containers
+            List<Container> changed = new ArrayList<>();
+            changed.addAll(response.getIncreasedContainers());
+            changed.addAll(response.getDecreasedContainers());
+            if (!changed.isEmpty()) {
+              ((AMRMClientAsync.AbstractCallbackHandler) handler)
+                  .onContainersResourceChanged(changed);
+            }
+          }
+

INS26 INS40 INS31 INS31 INS31 INS29 INS44 INS83 INS42 INS44 INS44 INS44 INS8 INS29 INS78 INS83 INS42 INS44 MOV44 INS8 INS78 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS65 INS65 INS43 INS42 INS74 INS42 INS39 INS42 INS43 INS42 INS46 INS21 INS21 INS21 INS21 INS21 INS65 INS42 INS39 INS42 INS17 INS42 INS42 INS43 INS42 INS43 INS42 INS21 INS42 INS66 INS42 INS66 INS66 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS7 INS7 INS7 INS7 INS7 INS66 INS65 INS66 INS14 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS14 INS42 INS14 INS42 INS14 INS42 INS9 INS42 INS33 INS68 INS74 INS42 INS42 INS42 INS42 INS43 INS43 INS74 INS42 INS69 INS69 INS43 INS43 INS42 INS42 INS43 INS39 INS43 INS42 INS42 INS42 INS40 INS25 INS62 INS8 INS42 INS43 INS60 INS21 INS21 INS25 INS40 INS74 INS59 INS32 INS32 INS38 INS8 INS43 INS43 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS36 INS42 INS42 INS42 INS11 INS43 INS42 INS40