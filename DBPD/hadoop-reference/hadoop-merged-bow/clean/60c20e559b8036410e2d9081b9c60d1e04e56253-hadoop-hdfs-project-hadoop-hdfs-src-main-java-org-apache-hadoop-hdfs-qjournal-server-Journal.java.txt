HDFS-3900. QJM: avoid validating log segments on log rolls. Contributed by Todd Lipcon.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1383041 13f79535-47bb-0310-9956-ffa450edef68

-   * Iterate over the edit logs stored locally, and set
-   * {@link #curSegmentTxId} to refer to the most recently written
-   * one.
+   * Scan the local storage directory, and return the segment containing
+   * the highest transaction.
+   * @return the EditLogFile with the highest transactions, or null
+   * if no files exist.
-  private synchronized void scanStorage() throws IOException {
+  private synchronized EditLogFile scanStorageForLatestEdits() throws IOException {
-      return;
+      return null;
+    
-    curSegmentTxId = HdfsConstants.INVALID_TXID;
-        curSegmentTxId = latestLog.getFirstTxId();
-        break;
+        return latestLog;
+    
+    LOG.info("No files in " + fjm);
+    return null;
-    if (curSegment != null) {
-      curSegment.close();
-      curSegment = null;
-      curSegmentTxId = HdfsConstants.INVALID_TXID;
-    }
+    abortCurSegment();
-    // TODO: we only need to do this once, not on writer switchover.
-    scanStorage();
+    EditLogFile latestFile = scanStorageForLatestEdits();
-    if (curSegmentTxId != HdfsConstants.INVALID_TXID) {
-      builder.setLastSegmentTxId(curSegmentTxId);
+    if (latestFile != null) {
+      builder.setLastSegmentTxId(latestFile.getFirstTxId());
+  private void abortCurSegment() throws IOException {
+    if (curSegment == null) {
+      return;
+    }
+    
+    curSegment.abort();
+    curSegment = null;
+    curSegmentTxId = HdfsConstants.INVALID_TXID;
+  }
+
-      curSegment.abort();
-      curSegment = null;
-      throw new IllegalStateException(
+      JournalOutOfSyncException e = new JournalOutOfSyncException(
+      abortCurSegment();
+      throw e;
-      curSegment.abort();
-      curSegment = null;
+      abortCurSegment();
+    boolean needsValidation = true;
+
+    // Finalizing the log that the writer was just writing.
+        curSegmentTxId = HdfsConstants.INVALID_TXID;
+      
+      checkSync(nextTxId == endTxId + 1,
+          "Trying to finalize in-progress log segment %s to end at " +
+          "txid %s but only written up to txid %s",
+          startTxId, endTxId, nextTxId - 1);
+      // No need to validate the edit log if the client is finalizing
+      // the log segment that it was just writing to.
+      needsValidation = false;
-      // TODO: this is slow to validate when in non-recovery cases
-      // we already know the length here!
-
-      LOG.info("Validating log about to be finalized: " + elf);
-      elf.validateLog();
-
-      checkSync(elf.getLastTxId() == endTxId,
-          "Trying to finalize log %s-%s, but current state of log " +
-          "is %s", startTxId, endTxId, elf);
+      if (needsValidation) {
+        LOG.info("Validating log segment " + elf.getFile() + " about to be " +
+            "finalized");
+        elf.validateLog();
+  
+        checkSync(elf.getLastTxId() == endTxId,
+            "Trying to finalize in-progress log segment %s to end at " +
+            "txid %s but log %s on disk only contains up to txid %s",
+            startTxId, endTxId, elf.getFile(), elf.getLastTxId());
+      }
+    abortCurSegment();
+    

INS31 INS43 UPD42 MOV60 INS83 INS39 INS42 INS43 INS8 INS65 INS65 INS42 INS21 INS41 INS60 INS42 INS25 MOV21 MOV21 MOV21 INS60 INS21 UPD66 MOV66 INS66 UPD66 MOV66 UPD66 MOV66 INS8 INS32 INS33 INS43 INS59 INS27 MOV8 INS39 INS59 INS8 INS32 INS41 INS42 INS42 INS27 UPD42 INS42 INS42 INS32 UPD42 INS33 INS42 INS33 INS60 INS21 INS42 INS9 MOV25 INS21 MOV21 INS25 MOV21 INS42 INS33 INS45 INS42 INS42 INS43 INS59 INS32 INS42 INS32 INS32 INS42 MOV8 INS41 INS32 INS42 INS42 MOV14 INS42 INS42 INS42 INS27 INS27 UPD42 MOV42 UPD42 MOV42 INS27 UPD42 INS9 INS42 INS42 UPD42 MOV42 UPD43 UPD42 MOV42 INS27 INS45 INS45 INS42 INS34 UPD42 INS42 INS34 INS32 INS32 UPD45 INS32 INS45 INS45 UPD45 UPD45 MOV42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL67 DEL65 DEL65 DEL39 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL10 DEL40 DEL42 DEL42 DEL32 DEL21 DEL42 DEL33 DEL7 DEL33 DEL33 DEL27 DEL32 DEL21 DEL8 DEL25 DEL42