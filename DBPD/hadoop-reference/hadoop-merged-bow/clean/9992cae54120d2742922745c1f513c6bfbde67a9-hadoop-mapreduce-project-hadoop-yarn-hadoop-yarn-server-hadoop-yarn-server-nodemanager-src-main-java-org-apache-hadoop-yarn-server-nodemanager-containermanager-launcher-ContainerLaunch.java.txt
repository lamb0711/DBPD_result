Reverting the previous trunk merge since it added other unintended changes in addition


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1177127 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.yarn.api.ApplicationConstants.Environment;
+    final Map<String,String> env = launchContext.getEnvironment();
-      Map<String, String> environment = launchContext.getEnvironment();
-      // Make a copy of env to iterate & do variable expansion
-      for (Entry<String, String> entry : environment.entrySet()) {
-        String value = entry.getValue();
-        entry.setValue(
-            value.replace(
+      Map<String, String> envs = launchContext.getEnvironment();
+      Map<String, String> newEnvs = new HashMap<String, String>(envs.size());
+      for (Entry<String, String> entry : envs.entrySet()) {
+        newEnvs.put(
+            entry.getKey(),
+            entry.getValue().replace(
-                containerLogDir.toUri().getPath())
-            );
+                containerLogDir.toUri().getPath()));
+      launchContext.setEnvironment(newEnvs);
-        environment.put(
-            ApplicationConstants.CONTAINER_TOKEN_FILE_ENV_NAME, 
-            new Path(containerWorkDir, 
-                FINAL_CONTAINER_TOKENS_FILE).toUri().getPath());
+        env.put(ApplicationConstants.CONTAINER_TOKEN_FILE_ENV_NAME, new Path(
+            containerWorkDir, FINAL_CONTAINER_TOKENS_FILE).toUri().getPath());
-        // Sanitize the container's environment
-        sanitizeEnv(environment, containerWorkDir, appDirs);
-        
-        // Write out the environment
-        writeLaunchEnv(containerScriptOutStream, environment, localResources,
-            launchContext.getCommands());
-        
+        writeLaunchEnv(containerScriptOutStream, env, localResources,
+            launchContext.getCommands(), appDirs);
-  private static void putEnvIfNotNull(
-      Map<String, String> environment, String variable, String value) {
-    if (value != null) {
-      environment.put(variable, value);
-    }
-  }
-  
-  private static void putEnvIfAbsent(
-      Map<String, String> environment, String variable) {
-    if (environment.get(variable) == null) {
-      putEnvIfNotNull(environment, variable, System.getenv(variable));
-    }
-  }
-  
-  public void sanitizeEnv(Map<String, String> environment, 
-      Path pwd, List<Path> appDirs) {
-    /**
-     * Non-modifiable environment variables
-     */
-    
-    putEnvIfNotNull(environment, Environment.USER.name(), container.getUser());
-    
-    putEnvIfNotNull(environment, 
-        Environment.LOGNAME.name(),container.getUser());
-    
-    putEnvIfNotNull(environment, 
-        Environment.HOME.name(),
-        conf.get(
-            YarnConfiguration.NM_USER_HOME_DIR, 
-            YarnConfiguration.DEFAULT_NM_USER_HOME_DIR
-            )
-        );
-    
-    putEnvIfNotNull(environment, Environment.PWD.name(), pwd.toString());
-    
-    putEnvIfNotNull(environment, 
-        Environment.HADOOP_CONF_DIR.name(), 
-        System.getenv(Environment.HADOOP_CONF_DIR.name())
-        );
-    
-    putEnvIfNotNull(environment, 
-        ApplicationConstants.LOCAL_DIR_ENV, 
-        StringUtils.join(",", appDirs)
-        );
-
-    if (!Shell.WINDOWS) {
-      environment.put("JVM_PID", "$$");
-    }
-
-    /**
-     * Modifiable environment variables
-     */
-    
-    putEnvIfAbsent(environment, Environment.JAVA_HOME.name());
-    putEnvIfAbsent(environment, Environment.HADOOP_COMMON_HOME.name());
-    putEnvIfAbsent(environment, Environment.HADOOP_HDFS_HOME.name());
-    putEnvIfAbsent(environment, Environment.YARN_HOME.name());
-
-  }
-  
-      List<String> command)
+      List<String> command, List<Path> appDirs)
+    if (System.getenv("YARN_HOME") != null) {
+      // TODO: Get from whitelist.
+      sb.env("YARN_HOME", System.getenv("YARN_HOME"));
+    }
+    sb.env(ApplicationConstants.LOCAL_DIR_ENV, StringUtils.join(",", appDirs));
+    if (!Shell.WINDOWS) {
+      sb.env("JVM_PID", "$$");
+    }

MOV44 MOV21 MOV70 INS60 INS25 MOV21 INS25 INS83 INS74 INS59 INS27 INS8 MOV38 INS8 INS43 INS43 INS43 INS42 INS32 INS60 INS21 INS32 INS33 INS21 UPD42 UPD42 INS21 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS32 INS42 INS42 INS45 INS32 INS32 UPD42 INS43 INS43 INS43 INS42 INS14 UPD42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS45 INS45 INS42 INS42 INS42 INS74 INS32 INS42 INS42 INS45 INS43 MOV43 MOV43 INS42 INS42 INS42 INS42 INS32 UPD42 UPD42 INS42 INS42 MOV42 UPD42 MOV42 MOV32 DEL40 DEL26 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL40 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL40 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL40 DEL42 DEL32 DEL42 DEL42 DEL40 DEL40 DEL32 DEL32 DEL21 DEL42 DEL42 DEL40 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL40 DEL42 DEL32 DEL42 DEL42 DEL40 DEL42 DEL32 DEL32 DEL32 DEL21 DEL42 DEL42 DEL45 DEL45 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL40 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL40 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL40 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL40 DEL42 DEL32 DEL32 DEL21 DEL8 DEL31