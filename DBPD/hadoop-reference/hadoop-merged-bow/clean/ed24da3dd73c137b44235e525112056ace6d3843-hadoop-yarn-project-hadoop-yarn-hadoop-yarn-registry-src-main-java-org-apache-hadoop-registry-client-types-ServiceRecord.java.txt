YARN-6413. FileSystem based Yarn Registry implementation. (Ellen Hui via Subru).

+  @Override
+  public int hashCode() {
+    // Generated by eclipse
+    final int prime = 31;
+    int result = 1;
+    result =
+        prime * result + ((attributes == null) ? 0 : attributes.hashCode());
+    result =
+        prime * result + ((description == null) ? 0 : description.hashCode());
+    result = prime * result + ((external == null) ? 0 : external.hashCode());
+    result = prime * result + ((internal == null) ? 0 : internal.hashCode());
+    result = prime * result + ((type == null) ? 0 : type.hashCode());
+    return result;
+  }
+
+  @Override
+  public boolean equals(Object obj) {
+    if (this == obj) {
+      return true;
+    }
+    if (obj == null) {
+      return false;
+    }
+    if (getClass() != obj.getClass()) {
+      return false;
+    }
+    ServiceRecord other = (ServiceRecord) obj;
+    if (attributes == null) {
+      if (other.attributes != null) {
+        return false;
+      }
+    } else if (!attributes.equals(other.attributes)) {
+      return false;
+    }
+    if (description == null) {
+      if (other.description != null) {
+        return false;
+      }
+    } else if (!description.equals(other.description)) {
+      return false;
+    }
+    if (external == null) {
+      if (other.external != null) {
+        return false;
+      }
+    } else if (!external.equals(other.external)) {
+      return false;
+    }
+    if (internal == null) {
+      if (other.internal != null) {
+        return false;
+      }
+    } else if (!internal.equals(other.internal)) {
+      return false;
+    }
+    if (type == null) {
+      if (other.type != null) {
+        return false;
+      }
+    } else if (!type.equals(other.type)) {
+      return false;
+    }
+    return true;
+  }

INS31 INS31 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS42 INS60 INS60 INS21 INS21 INS21 INS21 INS21 INS41 INS42 INS43 INS42 INS25 INS25 INS25 INS60 INS25 INS25 INS25 INS25 INS25 INS41 INS83 INS39 INS59 INS39 INS59 INS7 INS7 INS7 INS7 INS7 INS42 INS42 INS27 INS8 INS27 INS8 INS27 INS8 INS43 INS59 INS27 INS8 INS25 INS27 INS8 INS25 INS27 INS8 INS25 INS27 INS8 INS25 INS27 INS8 INS25 INS9 INS42 INS34 INS42 INS34 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS52 INS42 INS41 INS42 INS33 INS41 INS32 INS32 INS41 INS42 INS42 INS11 INS42 INS33 INS25 INS38 INS8 INS42 INS33 INS25 INS38 INS8 INS42 INS33 INS25 INS38 INS8 INS42 INS33 INS25 INS38 INS8 INS42 INS33 INS25 INS38 INS8 INS27 INS36 INS27 INS36 INS27 INS36 INS27 INS36 INS27 INS36 INS9 INS9 INS42 INS42 INS42 INS9 INS43 INS42 INS27 INS8 INS32 INS41 INS27 INS8 INS32 INS41 INS27 INS8 INS32 INS41 INS27 INS8 INS32 INS41 INS27 INS8 INS32 INS41 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS40 INS33 INS41 INS42 INS42 INS40 INS9 INS40 INS33 INS41 INS42 INS42 INS40 INS9 INS40 INS33 INS41 INS42 INS42 INS40 INS9 INS40 INS33 INS41 INS42 INS42 INS40 INS9 INS40 INS33 INS41 INS42 INS42 INS40 INS9 INS36 INS34 INS32 INS36 INS34 INS32 INS36 INS34 INS32 INS36 INS34 INS32 INS36 INS34 INS32 INS9 INS9 INS9 INS9 INS9 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33