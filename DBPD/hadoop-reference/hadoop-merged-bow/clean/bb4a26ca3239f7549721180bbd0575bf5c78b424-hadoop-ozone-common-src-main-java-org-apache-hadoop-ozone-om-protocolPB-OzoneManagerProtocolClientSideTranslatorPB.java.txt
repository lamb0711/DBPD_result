HDDS-8. Add OzoneManager Delegation Token support. Contributed by Ajay Kumar.

+import org.apache.hadoop.io.Text;
+import org.apache.hadoop.ozone.protocolPB.OMPBHelper;
+import org.apache.hadoop.ozone.security.OzoneTokenIdentifier;
+import org.apache.hadoop.security.proto.SecurityProtos.GetDelegationTokenRequestProto;
+import org.apache.hadoop.ozone.protocol.proto
+    .OzoneManagerProtocolProtos.GetDelegationTokenResponseProto;
+import org.apache.hadoop.security.proto.SecurityProtos.RenewDelegationTokenRequestProto;
+import org.apache.hadoop.ozone.protocol.proto
+    .OzoneManagerProtocolProtos.RenewDelegationTokenResponseProto;
+import org.apache.hadoop.security.proto.SecurityProtos.CancelDelegationTokenRequestProto;
+import org.apache.hadoop.ozone.protocol.proto
+    .OzoneManagerProtocolProtos.CancelDelegationTokenResponseProto;
+import org.apache.hadoop.security.token.Token;
+
+  /**
+   * Get a valid Delegation Token.
+   *
+   * @param renewer the designated renewer for the token
+   * @return Token<OzoneDelegationTokenSelector>
+   * @throws IOException
+   */
+  @Override
+  public Token<OzoneTokenIdentifier> getDelegationToken(Text renewer)
+      throws IOException {
+    GetDelegationTokenRequestProto req = GetDelegationTokenRequestProto
+        .newBuilder()
+        .setRenewer(renewer == null ? "" : renewer.toString())
+        .build();
+
+    OMRequest omRequest = createOMRequest(Type.GetDelegationToken)
+        .setGetDelegationTokenRequest(req)
+        .build();
+
+    final GetDelegationTokenResponseProto resp = submitRequest(omRequest)
+        .getGetDelegationTokenResponse();
+    if (resp.getStatus() == Status.OK) {
+       return resp.getResponse().hasToken() ?
+          OMPBHelper.convertToDelegationToken(resp.getResponse().getToken())
+           : null;
+    }  else {
+      throw new IOException("Get Delegation Token failed, error : " + resp
+          .getStatus());
+    }
+  }
+
+  /**
+   * Renew an existing delegation token.
+   *
+   * @param token delegation token obtained earlier
+   * @return the new expiration time
+   * @throws IOException
+   */
+  @Override
+  public long renewDelegationToken(Token<OzoneTokenIdentifier> token)
+      throws IOException {
+    RenewDelegationTokenRequestProto req =
+        RenewDelegationTokenRequestProto.newBuilder().
+            setToken(OMPBHelper.convertToTokenProto(token)).
+            build();
+
+    OMRequest omRequest = createOMRequest(Type.RenewDelegationToken)
+        .setRenewDelegationTokenRequest(req)
+        .build();
+
+    final RenewDelegationTokenResponseProto resp = submitRequest(omRequest)
+        .getRenewDelegationTokenResponse();
+    if (resp.getStatus() == Status.OK) {
+      return resp.getResponse().getNewExpiryTime();
+    }  else {
+      throw new IOException("Renew Delegation Token failed, error : " + resp
+          .getStatus());
+    }
+  }
+
+  /**
+   * Cancel an existing delegation token.
+   *
+   * @param token delegation token
+   * @throws IOException
+   */
+  @Override
+  public void cancelDelegationToken(Token<OzoneTokenIdentifier> token)
+      throws IOException {
+    CancelDelegationTokenRequestProto req = CancelDelegationTokenRequestProto
+        .newBuilder()
+        .setToken(OMPBHelper.convertToTokenProto(token))
+        .build();
+
+    OMRequest omRequest = createOMRequest(Type.CancelDelegationToken)
+        .setCancelDelegationTokenRequest(req)
+        .build();
+
+    final CancelDelegationTokenResponseProto resp = submitRequest(omRequest)
+        .getCancelDelegationTokenResponse();
+    if (resp.getStatus() != Status.OK) {
+      throw new IOException("Cancel Delegation Token failed, error : " + resp
+          .getStatus());
+    }
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS29 INS78 INS83 INS74 INS42 INS44 INS43 INS8 INS29 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS29 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS42 INS43 INS43 INS43 INS42 INS42 INS60 INS60 INS60 INS25 INS65 INS65 INS65 INS65 INS42 INS74 INS42 INS42 INS60 INS60 INS60 INS25 INS65 INS65 INS65 INS42 INS74 INS42 INS42 INS60 INS60 INS60 INS25 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS83 INS43 INS59 INS27 INS8 INS8 INS66 INS42 INS66 INS66 INS42 INS43 INS43 INS43 INS59 INS43 INS59 INS83 INS43 INS59 INS27 INS8 INS8 INS66 INS42 INS66 INS42 INS43 INS43 INS43 INS59 INS43 INS59 INS83 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS40 INS41 INS53 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS40 INS41 INS53 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS40 INS53 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS16 INS14 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS14 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS14 INS32 INS42 INS16 INS32 INS42 INS42 INS42 INS42 INS32 INS32 INS33 INS43 INS27 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS27 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS27 INS45 INS32 INS42 INS40 INS32 INS42 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS45 INS32 INS42 INS33 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42