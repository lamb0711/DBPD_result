Merge trunk into auto-failover branch.

Addressed two semantic conflicts after the commit of HADOOP-8077 -- test code was referencing the old constant for the fencing methods config key.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1310174 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.OutputStream;
+import java.io.PrintStream;
+import org.apache.hadoop.hdfs.server.namenode.FSEditLogOp;
-public class StatisticsEditsVisitor extends EditsVisitor {
-  private boolean printToScreen = false;
-  private boolean okToWrite = false;
-  final private FileWriter fw;
+public class StatisticsEditsVisitor implements OfflineEditsVisitor {
+  final private PrintStream out;
-  public final Map<FSEditLogOpCodes, Long> opCodeCount =
+  private int version = -1;
+  private final Map<FSEditLogOpCodes, Long> opCodeCount =
-   * Create a processor that writes to the file named.
-   *
-   * @param filename Name of file to write output to
-   */
-  public StatisticsEditsVisitor(String filename, Tokenizer tokenizer)
-    throws IOException {
-
-    this(filename, tokenizer, false);
-  }
-
-  /**
-  public StatisticsEditsVisitor(String filename,
-    Tokenizer tokenizer,
-    boolean printToScreen) throws IOException {
-
-    super(tokenizer);
-    this.printToScreen = printToScreen;
-    fw = new FileWriter(filename);
-    okToWrite = true;
+  public StatisticsEditsVisitor(OutputStream out) throws IOException {
+    this.out = new PrintStream(out);
-  /**
-   * Start the visitor (initialization)
-   */
+  /** Start the visitor */
-  void start() throws IOException {
-    // nothing to do
+  public void start(int version) throws IOException {
+    this.version = version;
-  /* (non-Javadoc)
-   * @see org.apache.hadoop.hdfs.tools.offlineEditsViewer.EditsVisitor#finish()
-   */
+  /** Close the visitor */
-  void finish() throws IOException {
-    write(getStatisticsString());
-    close();
-  }
-
-  /* (non-Javadoc)
-   * @see org.apache.hadoop.hdfs.tools.offlineEditsViewer.EditsVisitor#finishAbnormally()
-   */
-  @Override
-  void finishAbnormally() throws IOException {
-    close();
-  }
-
-  /**
-   * Close output stream and prevent further writing
-   */
-  private void close() throws IOException {
-    fw.close();
-    okToWrite = false;
-  }
-
-  /**
-   * Visit a enclosing element (element that has other elements in it)
-   */
-  @Override
-  void visitEnclosingElement(Tokenizer.Token value) throws IOException {
-    // nothing to do
-  }
-
-  /**
-   * End of eclosing element
-   */
-  @Override
-  void leaveEnclosingElement() throws IOException {
-    // nothing to do
-  }  
-
-  /**
-   * Visit a Token, calculate statistics
-   *
-   * @param value a Token to visit
-   */
-  @Override
-  Tokenizer.Token visit(Tokenizer.Token value) throws IOException {
-    // count the opCodes
-    if(value.getEditsElement() == EditsElement.OPCODE) {
-      if(value instanceof Tokenizer.ByteToken) {
-        incrementOpCodeCount(
-          FSEditLogOpCodes.fromByte(((Tokenizer.ByteToken)value).value));
-      } else {
-        throw new IOException("Token for EditsElement.OPCODE should be " +
-          "of type Tokenizer.ByteToken, not " + value.getClass());
-      }
+  public void close(Throwable error) throws IOException {
+    out.print(getStatisticsString());
+    if (error != null) {
+      out.print("EXITING ON ERROR: " + error.toString() + "\n");
-    return value;
+    out.close();
-  /**
-   * Write parameter to output file (and possibly screen).
-   *
-   * @param toWrite Text to write to file
-   */
-  protected void write(String toWrite) throws IOException  {
-    if(!okToWrite)
-      throw new IOException("file not open for writing.");
-
-    if(printToScreen)
-      System.out.print(toWrite);
-
-    try {
-      fw.write(toWrite);
-    } catch (IOException e) {
-      okToWrite = false;
-      throw e;
-    }
+  @Override
+  public void visitOp(FSEditLogOp op) throws IOException {
+    incrementOpCodeCount(op.opCode);
+    sb.append(String.format(
+        "    %-30.30s      : %d%n",
+        "VERSION", version));
-        opCode,
+        opCode.toString(),
-}
+}

INS26 INS26 INS26 INS40 INS40 INS40 UPD43 INS23 INS31 INS31 UPD42 UPD43 INS83 INS39 INS59 UPD83 MOV29 MOV78 INS83 MOV39 MOV42 INS44 MOV43 MOV8 MOV29 MOV78 UPD83 MOV83 MOV39 MOV42 INS44 MOV43 MOV8 MOV78 UPD83 UPD42 MOV43 UPD42 UPD42 INS42 INS38 UPD43 UPD42 INS39 INS42 INS43 INS42 MOV21 INS21 UPD43 UPD42 INS21 INS21 INS34 UPD42 UPD66 INS7 UPD66 UPD42 MOV42 UPD27 INS32 UPD42 MOV32 INS32 INS22 INS22 INS42 UPD42 INS42 INS42 INS33 INS21 INS42 INS42 UPD42 INS40 INS42 INS42 INS32 INS52 INS42 UPD43 UPD42 INS52 INS42 INS32 INS42 INS42 INS45 INS45 INS42 UPD42 INS42 UPD42 MOV42 INS27 UPD45 MOV45 MOV32 INS45 INS32 UPD42 UPD42 MOV42 INS42 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL9 DEL17 DEL8 DEL31 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL46 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL9 DEL7 DEL21 DEL42 DEL32 DEL42 DEL42 DEL32 DEL40 DEL42 DEL40 DEL43 DEL62 DEL42 DEL42 DEL40 DEL43 DEL42 DEL11 DEL36 DEL42 DEL22 DEL32 DEL32 DEL21 DEL8 DEL42 DEL43 DEL45 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL41 DEL42 DEL43 DEL8 DEL31 DEL39 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL39 DEL42 DEL42 DEL43 DEL31 DEL43 DEL42 DEL42 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL31 DEL66 DEL65 DEL29 DEL42 DEL78 DEL39 DEL42 DEL40 DEL43 DEL42 DEL44 DEL8 DEL31 DEL66 DEL65 DEL29 DEL42 DEL78 DEL39 DEL42 DEL42 DEL43 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL42 DEL78 DEL40 DEL43 DEL42 DEL40 DEL43 DEL42 DEL44 DEL42 DEL43 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL42 DEL43 DEL40 DEL42 DEL42 DEL38 DEL42 DEL43 DEL45 DEL14 DEL53 DEL25 DEL42 DEL21 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL9 DEL7 DEL21 DEL42 DEL53 DEL8 DEL12 DEL54