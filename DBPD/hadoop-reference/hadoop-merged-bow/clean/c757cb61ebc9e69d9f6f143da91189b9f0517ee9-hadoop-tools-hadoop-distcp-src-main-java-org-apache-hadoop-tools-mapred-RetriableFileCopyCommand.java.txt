HADOOP-14254. Add a Distcp option to preserve Erasure Coding attributes. Contributed by Ayush Saxena.

+import org.apache.hadoop.fs.FileStatus;
+import org.apache.hadoop.hdfs.DistributedFileSystem;
+import org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy;
+import org.apache.hadoop.hdfs.protocol.HdfsFileStatus;
+import org.apache.hadoop.tools.DistCpOptions;
+import static org.apache.hadoop.tools.mapred.CopyMapper.getFileAttributeSettings;
+
-    assert arguments.length == 4 : "Unexpected argument list.";
+    assert arguments.length == 5 : "Unexpected argument list.";
-    return doCopy(source, target, context, fileAttributes);
+    FileStatus sourceStatus = (FileStatus)arguments[4];
+    return doCopy(source, target, context, fileAttributes, sourceStatus);
-      Mapper.Context context, EnumSet<FileAttribute> fileAttributes)
+      Mapper.Context context, EnumSet<FileAttribute> fileAttributes,
+      FileStatus sourceStatus)
-          offset, context, fileAttributes, sourceChecksum);
+          offset, context, fileAttributes, sourceChecksum, sourceStatus);
+  @SuppressWarnings("checkstyle:parameternumber")
-      EnumSet<FileAttribute> fileAttributes, final FileChecksum sourceChecksum)
+      EnumSet<FileAttribute> fileAttributes, final FileChecksum sourceChecksum,
+      FileStatus sourceStatus)
+    boolean preserveEC = getFileAttributeSettings(context)
+        .contains(DistCpOptions.FileAttribute.ERASURECODINGPOLICY);
+
+    ErasureCodingPolicy ecPolicy = null;
+    if (preserveEC && sourceStatus.isErasureCoded()
+        && sourceStatus instanceof HdfsFileStatus
+        && targetFS instanceof DistributedFileSystem) {
+      ecPolicy = ((HdfsFileStatus) sourceStatus).getErasureCodingPolicy();
+    }
-      FSDataOutputStream out = targetFS.create(targetPath, permission,
-          EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE),
-          copyBufferSize, repl, blockSize, context,
-          getChecksumOpt(fileAttributes, sourceChecksum));
+      FSDataOutputStream out;
+      ChecksumOpt checksumOpt = getChecksumOpt(fileAttributes, sourceChecksum);
+      if (!preserveEC || ecPolicy == null) {
+        out = targetFS.create(targetPath, permission,
+            EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE), copyBufferSize,
+            repl, blockSize, context, checksumOpt);
+      } else {
+        DistributedFileSystem dfs = (DistributedFileSystem) targetFS;
+        DistributedFileSystem.HdfsDataOutputStreamBuilder builder =
+            dfs.createFile(targetPath).permission(permission).create()
+                .overwrite(true).bufferSize(copyBufferSize).replication(repl)
+                .blockSize(blockSize).progress(context).recursive()
+                .ecPolicyName(ecPolicy.getName());
+        if (checksumOpt != null) {
+          builder.checksumOpt(checksumOpt);
+        }
+        out = builder.build();
+      }

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS44 INS79 INS44 INS60 INS43 INS42 INS42 INS45 INS43 INS42 INS60 INS60 INS25 INS43 INS59 INS42 INS42 INS39 INS59 INS43 INS59 INS27 INS8 INS8 UPD34 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS33 INS42 INS32 INS62 INS62 INS21 MOV60 MOV60 INS60 INS60 INS25 MOV21 INS43 INS2 INS32 INS42 INS40 INS42 INS42 INS42 INS43 INS42 INS43 INS7 MOV43 INS59 INS43 INS59 INS27 MOV8 INS8 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 MOV32 INS38 INS27 INS21 INS60 INS60 INS25 INS21 INS42 INS36 INS42 INS42 INS42 INS33 INS7 INS43 INS59 INS43 INS59 INS27 INS8 INS7 INS11 INS42 INS32 INS42 INS42 INS11 INS40 INS42 INS32 INS42 INS33 INS21 INS42 INS32 INS43 INS42 MOV42 MOV42 MOV42 MOV42 MOV32 MOV42 MOV42 MOV42 MOV42 INS42 INS43 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS9 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 DEL42 DEL32 DEL59 DEL60