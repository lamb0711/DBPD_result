HDDS-943. Add block token validation in HddsDispatcher/XceiverServer. Contributed by Ajay Kumar.

+import org.apache.hadoop.hdds.security.token.TokenVerifier;
+import org.apache.hadoop.security.UserGroupInformation;
+  private final boolean isBlockTokenEnabled;
+  private final TokenVerifier tokenVerifier;
-      List<ExecutorService> executors, long expiryInterval) {
+      List<ExecutorService> executors, long expiryInterval,
+      boolean isBlockTokenEnabled, TokenVerifier tokenVerifier) {
+    this.isBlockTokenEnabled = isBlockTokenEnabled;
+    this.tokenVerifier = tokenVerifier;
-      DispatcherContext context) {
+      DispatcherContext context) throws IOException {
+    if(isBlockTokenEnabled) {
+      // ServerInterceptors intercepts incoming request and creates ugi.
+      tokenVerifier.verify(UserGroupInformation.getCurrentUser()
+          .getShortUserName(), requestProto.getEncodedToken());
+    }
-      DispatcherContext context) {
+      DispatcherContext context) throws IOException {
-    CompletableFuture<Message> writeChunkFuture = CompletableFuture
-        .supplyAsync(() -> runCommand(requestProto, context), chunkExecutor);
+    CompletableFuture<Message> writeChunkFuture;
+    try {
+      Message msg = runCommand(requestProto, context);
+      writeChunkFuture = CompletableFuture
+          .supplyAsync(() -> msg, chunkExecutor);
+    }catch(IOException ie) {
+      writeChunkFuture = completeExceptionally(ie);
+    }
+
-      ContainerCommandRequestProto requestProto, long term, long index) {
+      ContainerCommandRequestProto requestProto, long term, long index)
+      throws IOException {
-      future = CompletableFuture
-          .supplyAsync(() -> runCommand(requestProto, builder.build()),
-              getCommandExecutor(requestProto));
+      try {
+        Message msg = runCommand(requestProto, builder.build());
+        future = CompletableFuture.supplyAsync(() -> msg,
+            getCommandExecutor(requestProto));
+      } catch (IOException ie) {
+        future = completeExceptionally(ie);
+      }
+

INS26 INS26 INS40 INS40 INS23 INS23 INS83 INS83 INS39 INS59 INS83 INS83 INS43 INS59 INS44 INS44 INS43 INS43 INS43 INS42 INS42 INS42 INS39 INS42 INS43 INS42 INS21 INS21 INS42 INS25 INS42 INS60 INS54 INS42 INS42 INS7 INS7 INS42 INS8 MOV74 INS59 INS8 INS12 INS22 INS42 INS22 INS42 INS21 INS42 MOV60 INS21 INS44 INS8 INS54 INS52 INS42 INS52 INS42 INS32 INS43 INS7 INS43 INS42 INS21 INS8 INS12 INS42 INS42 INS32 INS32 INS42 UPD42 MOV32 INS42 INS32 INS42 INS7 INS60 MOV21 INS44 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS86 INS42 INS42 INS32 INS43 INS59 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS7 INS42 INS32 INS42 INS42 INS42 DEL42 DEL42 DEL86 DEL42 DEL32