Merge trunk into branch

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1373573 13f79535-47bb-0310-9956-ffa450edef68

+import static org.apache.hadoop.util.ExitUtil.terminate;
+import java.io.PrintStream;
-import org.apache.hadoop.hdfs.protocol.datatransfer.DataTransferProtocol;
+import org.apache.hadoop.hdfs.protocol.datatransfer.DataTransferProtocol;
-
-import static org.apache.hadoop.util.ExitUtil.terminate;
-
+import com.google.common.annotations.VisibleForTesting;
-import com.google.common.annotations.VisibleForTesting;
+  
+  private static final String USAGE = "Usage: java DataNode [-rollback | -regular]";
+  private boolean connectToDnViaHostname;
-    this.userWithLocalPathAccess = conf
-        .get(DFSConfigKeys.DFS_BLOCK_LOCAL_PATH_ACCESS_USER_KEY);
+    this.userWithLocalPathAccess =
+        conf.get(DFSConfigKeys.DFS_BLOCK_LOCAL_PATH_ACCESS_USER_KEY);
+    this.connectToDnViaHostname = conf.getBoolean(
+        DFSConfigKeys.DFS_DATANODE_USE_DN_HOSTNAME,
+        DFSConfigKeys.DFS_DATANODE_USE_DN_HOSTNAME_DEFAULT);
-   * transfer, and that may be be a different address.
+   * transfer, and that may be a different address.
-      DatanodeID datanodeid, final Configuration conf, final int socketTimeout)
-    throws IOException {
-    final InetSocketAddress addr =
-      NetUtils.createSocketAddr(datanodeid.getIpcAddr());
-    if (InterDatanodeProtocol.LOG.isDebugEnabled()) {
-      InterDatanodeProtocol.LOG.debug("InterDatanodeProtocol addr=" + addr);
+      DatanodeID datanodeid, final Configuration conf, final int socketTimeout,
+      final boolean connectToDnViaHostname) throws IOException {
+    final String dnAddr = datanodeid.getIpcAddr(connectToDnViaHostname);
+    final InetSocketAddress addr = NetUtils.createSocketAddr(dnAddr);
+    if (LOG.isDebugEnabled()) {
+      LOG.debug("Connecting to datanode " + dnAddr + " addr=" + addr);
+    this.shouldRun = false;
-    this.shouldRun = false;
-        InetSocketAddress curTarget = 
-          NetUtils.createSocketAddr(targets[0].getXferAddr());
+        final String dnAddr = targets[0].getXferAddr(connectToDnViaHostname);
+        InetSocketAddress curTarget = NetUtils.createSocketAddr(dnAddr);
+        if (LOG.isDebugEnabled()) {
+          LOG.debug("Connecting to datanode " + dnAddr);
+        }
-      printUsage();
+      printUsage(System.err);
-  private static void printUsage() {
-    System.err.println("Usage: java DataNode");
-    System.err.println("           [-rollback]");
+  private static void printUsage(PrintStream out) {
+    out.println(USAGE + "\n");
+    if (DFSUtil.parseHelpArgument(args, DataNode.USAGE, System.out, true)) {
+      System.exit(0);
+    }
+
-                dnConf.socketTimeout);
+                dnConf.socketTimeout, dnConf.connectToDnViaHostname);

MOV26 MOV26 MOV26 INS26 INS40 INS23 INS23 INS83 INS83 INS83 INS43 INS59 INS83 INS39 INS59 INS44 MOV21 INS44 INS8 INS8 INS42 INS42 INS45 INS42 INS21 INS83 INS39 INS42 INS60 INS43 INS42 MOV21 INS25 MOV21 INS7 UPD66 INS83 INS43 INS59 INS42 INS32 INS8 INS22 INS32 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS42 INS40 INS40 INS9 INS21 INS52 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS42 UPD42 MOV42 INS60 INS25 INS42 INS45 INS32 INS42 INS83 INS43 MOV43 INS59 INS32 INS8 INS40 INS42 INS42 INS34 INS45 INS42 UPD45 INS42 INS42 MOV32 INS42 INS32 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS27 INS45 INS42 INS40 DEL42 DEL32 DEL40 DEL40 DEL42 DEL42 DEL42 DEL32 DEL40 DEL45 DEL40 DEL42 DEL45 DEL32 DEL21 DEL8 DEL8