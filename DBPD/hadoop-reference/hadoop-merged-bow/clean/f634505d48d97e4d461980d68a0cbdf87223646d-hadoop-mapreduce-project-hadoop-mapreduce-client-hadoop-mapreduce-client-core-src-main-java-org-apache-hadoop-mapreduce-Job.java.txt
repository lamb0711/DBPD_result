MAPREDUCE-5870. Support for passing Job priority through Application Submission Context in Mapreduce Side. Contributed by Sunil G

-   * @return the scheduling info of the job
+   * @return the priority info of the job
-   * @param priority the new priority for the job.
+   * @param jobPriority the new priority for the job.
-  public void setPriority(JobPriority priority) 
-      throws IOException, InterruptedException {
+  public void setPriority(JobPriority jobPriority) throws IOException,
+      InterruptedException {
-      conf.setJobPriority(
-        org.apache.hadoop.mapred.JobPriority.valueOf(priority.name()));
+      if (jobPriority == JobPriority.UNDEFINED_PRIORITY) {
+        conf.setJobPriorityAsInteger(convertPriorityToInteger(jobPriority));
+      } else {
+        conf.setJobPriority(org.apache.hadoop.mapred.JobPriority
+            .valueOf(jobPriority.name()));
+      }
-      final JobPriority tmpPriority = priority;
+      final int tmpPriority = convertPriorityToInteger(jobPriority);
-          cluster.getClient().setJobPriority(getJobID(), tmpPriority.toString());
+          cluster.getClient()
+              .setJobPriority(getJobID(), Integer.toString(tmpPriority));
+   * Set the priority of a running job.
+   *
+   * @param jobPriority
+   *          the new priority for the job.
+   * @throws IOException
+   */
+  public void setPriorityAsInteger(int jobPriority) throws IOException,
+      InterruptedException {
+    if (state == JobState.DEFINE) {
+      conf.setJobPriorityAsInteger(jobPriority);
+    } else {
+      ensureState(JobState.RUNNING);
+      final int tmpPriority = jobPriority;
+      ugi.doAs(new PrivilegedExceptionAction<Object>() {
+        @Override
+        public Object run() throws IOException, InterruptedException {
+          cluster.getClient()
+              .setJobPriority(getJobID(), Integer.toString(tmpPriority));
+          return null;
+        }
+      });
+    }
+  }
+
+  private int convertPriorityToInteger(JobPriority jobPriority) {
+    switch (jobPriority) {
+    case VERY_HIGH :
+      return 5;
+    case HIGH :
+      return 4;
+    case NORMAL :
+      return 3;
+    case LOW :
+      return 2;
+    case VERY_LOW :
+      return 1;
+    case DEFAULT :
+      return 0;
+    default:
+      break;
+    }
+    // For UNDEFINED_PRIORITY, we can set it to default for better handling
+    return 0;
+  }
+
+  /**

INS31 INS31 INS29 INS83 INS39 INS42 INS44 INS43 INS43 INS8 INS83 INS39 INS42 INS44 INS8 UPD42 INS65 INS65 INS65 INS39 INS42 INS42 INS42 INS25 MOV43 INS42 INS50 INS41 UPD66 UPD42 INS8 INS66 INS42 INS66 INS42 INS27 INS8 INS8 INS42 INS49 INS41 INS49 INS41 INS49 INS41 INS49 INS41 INS49 INS41 INS49 INS41 INS49 INS10 INS34 INS25 INS42 INS40 INS21 INS21 INS60 INS21 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS27 INS8 MOV8 INS39 INS32 INS32 INS83 INS39 INS59 INS32 INS42 INS40 INS21 INS32 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS14 INS32 INS42 INS42 INS74 INS1 INS42 INS42 INS32 INS43 INS43 INS31 INS42 INS42 INS42 INS42 INS78 INS83 INS43 INS42 INS43 INS43 INS8 UPD42 INS42 INS42 INS42 INS42 INS21 INS41 INS32 INS33 INS32 INS42 INS32 INS32 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42