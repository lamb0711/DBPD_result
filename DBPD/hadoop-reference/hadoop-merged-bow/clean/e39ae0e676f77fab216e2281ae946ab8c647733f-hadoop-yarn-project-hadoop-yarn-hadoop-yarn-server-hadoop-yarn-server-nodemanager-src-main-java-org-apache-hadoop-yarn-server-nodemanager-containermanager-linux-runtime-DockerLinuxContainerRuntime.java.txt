YARN-4262. Allow whitelisted users to run privileged docker containers. Contributed by Sidharta Seethana.

+import org.apache.hadoop.security.UserGroupInformation;
+import org.apache.hadoop.security.authorize.AccessControlList;
-
+  @InterfaceAudience.Private
+  public static final String ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER =
+      "YARN_CONTAINER_RUNTIME_DOCKER_RUN_PRIVILEGED_CONTAINER";
+  private AccessControlList privilegedContainersAcl;
+    privilegedContainersAcl = new AccessControlList(conf.get(
+        YarnConfiguration.NM_DOCKER_PRIVILEGED_CONTAINERS_ACL,
+        YarnConfiguration.DEFAULT_NM_DOCKER_PRIVILEGED_CONTAINERS_ACL));
+  private boolean allowPrivilegedContainerExecution(Container container)
+      throws ContainerExecutionException {
+    //For a privileged container to be run all of the following three conditions
+    // must be satisfied:
+    //1) Submitting user must request for a privileged container
+    //2) Privileged containers must be enabled on the cluster
+    //3) Submitting user must be whitelisted to run a privileged container
+
+    Map<String, String> environment = container.getLaunchContext()
+        .getEnvironment();
+    String runPrivilegedContainerEnvVar = environment
+        .get(ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER);
+
+    if (runPrivilegedContainerEnvVar == null) {
+      return false;
+    }
+
+    if (!runPrivilegedContainerEnvVar.equalsIgnoreCase("true")) {
+      LOG.warn("NOT running a privileged container. Value of " +
+          ENV_DOCKER_CONTAINER_RUN_PRIVILEGED_CONTAINER
+          + "is invalid: " + runPrivilegedContainerEnvVar);
+      return false;
+    }
+
+    if (LOG.isInfoEnabled()) {
+      LOG.info("Privileged container requested for : " + container
+          .getContainerId().toString());
+    }
+
+    //Ok, so we have been asked to run a privileged container. Security
+    // checks need to be run. Each violation is an error.
+
+    //check if privileged containers are enabled.
+    boolean privilegedContainersEnabledOnCluster = conf.getBoolean(
+        YarnConfiguration.NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS,
+            YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_PRIVILEGED_CONTAINERS);
+
+    if (!privilegedContainersEnabledOnCluster) {
+      String message = "Privileged container being requested but privileged "
+          + "containers are not enabled on this cluster";
+      LOG.warn(message);
+      throw new ContainerExecutionException(message);
+    }
+
+    //check if submitting user is in the whitelist.
+    String submittingUser = container.getUser();
+    UserGroupInformation submitterUgi = UserGroupInformation
+        .createRemoteUser(submittingUser);
+
+    if (!privilegedContainersAcl.isUserAllowed(submitterUgi)) {
+      String message = "Cannot launch privileged container. Submitting user ("
+          + submittingUser + ") fails ACL check.";
+      LOG.warn(message);
+      throw new ContainerExecutionException(message);
+    }
+
+    if (LOG.isInfoEnabled()) {
+      LOG.info("All checks pass. Launching privileged container for : "
+          + container.getContainerId().toString());
+    }
+
+    return true;
+  }
+
+    if (allowPrivilegedContainerExecution(container)) {
+      runCommand.setPrivileged();
+    }
+
-}
+}

INS26 INS26 INS40 INS40 INS23 INS23 INS31 INS78 INS83 INS83 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS39 INS42 INS44 INS43 INS8 INS40 INS42 INS42 INS45 INS42 INS42 INS21 INS43 INS42 INS42 INS60 INS60 INS25 INS25 INS25 INS60 INS25 INS60 INS60 INS25 INS25 INS41 INS25 INS7 INS42 INS74 INS59 INS43 INS59 INS27 INS8 INS38 INS8 INS32 INS8 INS39 INS59 INS38 INS8 INS43 INS59 INS43 INS59 INS38 INS8 INS32 INS8 INS9 INS32 INS8 INS42 INS14 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS41 INS32 INS21 INS41 INS42 INS42 INS21 INS42 INS32 INS42 INS60 INS21 INS53 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS60 INS21 INS53 INS42 INS42 INS21 INS42 INS42 INS21 INS43 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS45 INS32 INS9 INS32 INS42 INS42 INS40 INS40 INS43 INS59 INS32 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS14 INS32 INS32 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS27 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS32 INS45 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42