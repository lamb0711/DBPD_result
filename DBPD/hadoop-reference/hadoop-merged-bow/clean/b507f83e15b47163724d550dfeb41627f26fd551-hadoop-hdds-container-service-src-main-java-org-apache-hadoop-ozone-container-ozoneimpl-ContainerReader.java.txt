HDDS-266. Integrate checksum into .container file. Contributed by Hanisha Koneru.

+import org.apache.hadoop.hdds.protocol.datanode.proto.ContainerProtos;
+import org.apache.hadoop.hdds.scm.container.common.helpers
+    .StorageContainerException;
-
- * ../hdds/<<scmUuid>>/current/<<containerDir>>/<<containerID>/metadata/<<containerID>>.checksum
- * ../hdds/<<scmUuid>>/current/<<containerDir>>/<<containerID>/metadata/<<containerID>>.db
+ * Some ContainerTypes will have extra metadata other than the .container
+ * file. For example, KeyValueContainer will have a .db file. This .db file
+ * will also be stored in the metadata folder along with the .container file.
+ *
+ * ../hdds/<<scmUuid>>/current/<<containerDir>>/<<KVcontainerID>/metadata/<<KVcontainerID>>.db
+ *
- * ../hdds/<<scmUuid>>/current/<<containerDir>>/<<containerID>/chunks/<<chunksFile>>
+ * ../hdds/<<scmUuid>>/current/<<containerDir>>/<<KVcontainerID>/chunks/<<chunksFile>>
-                String containerName = containerDir.getName();
+                long containerID = Long.parseLong(containerDir.getName());
-                      .getContainerFile(metadataPath, containerName);
-                  File checksumFile = KeyValueContainerLocationUtil
-                      .getContainerCheckSumFile(metadataPath, containerName);
-                  if (containerFile.exists() && checksumFile.exists()) {
-                    verifyContainerFile(containerName, containerFile,
-                        checksumFile);
+                      .getContainerFile(metadataPath, containerID);
+                  if (containerFile.exists()) {
+                    verifyContainerFile(containerID, containerFile);
-                    LOG.error("Missing container metadata files for " +
-                        "Container: {}", containerName);
+                    LOG.error("Missing .container file for ContainerID: {}",
+                        containerID);
-                      "Container: {}", containerName);
+                      "ContainerID: {}", containerID);
-  private void verifyContainerFile(String containerName, File containerFile,
-                                   File checksumFile) {
+  private void verifyContainerFile(long containerID, File containerFile) {
-      ContainerData containerData =  ContainerDataYaml.readContainerFile(
+      ContainerData containerData = ContainerDataYaml.readContainerFile(
-
-      switch (containerData.getContainerType()) {
-      case KeyValueContainer:
-        KeyValueContainerData keyValueContainerData = (KeyValueContainerData)
-            containerData;
-        containerData.setVolume(hddsVolume);
-        File dbFile = KeyValueContainerLocationUtil
-            .getContainerDBFile(new File(containerFile.getParent()),
-                containerName);
-        if (!dbFile.exists()) {
-          LOG.error("Container DB file is missing for Container {}, skipping " +
-                  "this", containerName);
-          // Don't further process this container, as it is missing db file.
-          return;
-        }
-        KeyValueContainerUtil.parseKeyValueContainerData(keyValueContainerData,
-            containerFile, checksumFile, dbFile, config);
-        KeyValueContainer keyValueContainer = new KeyValueContainer(
-            keyValueContainerData, config);
-        containerSet.addContainer(keyValueContainer);
-        break;
-      default:
-        LOG.error("Unrecognized ContainerType {} format during verify " +
-            "ContainerFile", containerData.getContainerType());
+      if (containerID != containerData.getContainerID()) {
+        LOG.error("Invalid ContainerID in file {}. " +
+            "Skipping loading of this container.", containerFile);
+        return;
+      verifyContainerData(containerData);
-      LOG.error("Error during reading container file {}", containerFile);
+      LOG.error("Failed to parse ContainerFile for ContainerID: {}",
+          containerID, ex);
+  public void verifyContainerData(ContainerData containerData)
+      throws IOException {
+    switch (containerData.getContainerType()) {
+    case KeyValueContainer:
+      if (containerData instanceof KeyValueContainerData) {
+        KeyValueContainerData kvContainerData = (KeyValueContainerData)
+            containerData;
+        containerData.setVolume(hddsVolume);
+
+        KeyValueContainerUtil.parseKVContainerData(kvContainerData, config);
+        KeyValueContainer kvContainer = new KeyValueContainer(
+            kvContainerData, config);
+        containerSet.addContainer(kvContainer);
+      } else {
+        throw new StorageContainerException("Container File is corrupted. " +
+            "ContainerType is KeyValueContainer but cast to " +
+            "KeyValueContainerData failed. ",
+            ContainerProtos.Result.CONTAINER_METADATA_ERROR);
+      }
+      break;
+    default:
+      throw new StorageContainerException("Unrecognized ContainerType " +
+          containerData.getContainerType(),
+          ContainerProtos.Result.UNKNOWN_CONTAINER_TYPE);
+    }
+  }

INS26 INS26 INS40 INS40 INS31 INS31 MOV83 MOV39 MOV42 MOV44 MOV44 INS8 INS83 INS39 INS42 INS44 INS43 INS8 UPD66 UPD66 INS66 INS66 UPD66 UPD66 INS39 UPD42 INS54 INS43 INS42 INS42 INS50 INS8 INS12 INS42 MOV32 MOV49 INS25 INS10 INS49 INS53 MOV60 INS25 INS21 MOV44 INS8 INS62 INS8 INS8 INS14 INS27 INS8 INS32 MOV21 INS42 INS43 MOV60 MOV21 INS21 INS60 INS21 INS53 INS43 INS27 INS40 INS42 INS32 INS21 INS41 UPD42 MOV42 UPD42 MOV42 INS42 INS32 MOV43 MOV59 MOV32 INS14 INS42 INS45 MOV32 INS42 INS42 INS32 INS45 UPD42 INS42 UPD42 UPD42 MOV42 INS42 INS42 MOV42 UPD42 UPD42 INS43 INS27 INS40 UPD42 MOV42 UPD42 MOV42 INS27 MOV42 MOV43 UPD42 INS42 INS45 UPD45 MOV45 UPD45 MOV45 INS45 INS45 INS39 UPD42 INS32 INS42 INS42 MOV32 MOV43 MOV32 UPD42 UPD42 UPD45 UPD42 INS45 UPD42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL27 DEL42 DEL45 DEL45 DEL27 DEL42 DEL43 DEL45 DEL45 DEL27 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL32 DEL14 DEL42 DEL32 DEL59 DEL60 DEL32 DEL38 DEL41 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL60 DEL21 DEL10 DEL49 DEL42 DEL42 DEL27 DEL32 DEL21 DEL50 DEL8 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL31