YARN-160. Enhanced NodeManager to automatically obtain cpu/memory values from underlying OS when configured to do so. Contributed by Varun Vasudev.

+import java.util.HashSet;
+import com.google.common.annotations.VisibleForTesting;
-   * Patterns for parsing /proc/cpuinfo
+   * Patterns for parsing /proc/cpuinfo.
+  private static final Pattern PHYSICAL_ID_FORMAT =
+      Pattern.compile("^physical id[ \t]*:[ \t]*([0-9]*)");
+  private static final Pattern CORE_ID_FORMAT =
+      Pattern.compile("^core id[ \t]*:[ \t]*([0-9]*)");
-   * Pattern for parsing /proc/stat
+   * Pattern for parsing /proc/stat.
-    Pattern.compile("^cpu[ \t]*([0-9]*)" +
+      Pattern.compile("^cpu[ \t]*([0-9]*)" +
-  long jiffyLengthInMillis;
+  private long jiffyLengthInMillis;
-  private int numProcessors = 0; // number of processors on the system
+  /* number of logical processors on the system. */
+  private int numProcessors = 0;
+  /* number of physical cores on the system. */
+  private int numCores = 0;
-  boolean readMemInfoFile = false;
-  boolean readCpuInfoFile = false;
+  private boolean readMemInfoFile = false;
+  private boolean readCpuInfoFile = false;
-   * Get current time
+   * Get current time.
-   * used only in unit tests
+   * used only in unit tests.
-   * Read /proc/meminfo, parse and compute memory information only once
+   * Read /proc/meminfo, parse and compute memory information only once.
-   * Read /proc/meminfo, parse and compute memory information
+   * Read /proc/meminfo, parse and compute memory information.
-    BufferedReader in = null;
-    InputStreamReader fReader = null;
+    BufferedReader in;
+    InputStreamReader fReader;
+      LOG.warn("Couldn't read " + procfsMemFile
+          + "; can't determine memory settings");
-    Matcher mat = null;
+    Matcher mat;
-   * Read /proc/cpuinfo, parse and calculate CPU information
+   * Read /proc/cpuinfo, parse and calculate CPU information.
+    HashSet<String> coreIdSet = new HashSet<>();
-    BufferedReader in = null;
-    InputStreamReader fReader = null;
+    BufferedReader in;
+    InputStreamReader fReader;
+      LOG.warn("Couldn't read " + procfsCpuFile + "; can't determine cpu info");
-    Matcher mat = null;
+    Matcher mat;
+      numCores = 1;
+      String currentPhysicalId = "";
+        mat = PHYSICAL_ID_FORMAT.matcher(str);
+        if (mat.find()) {
+          currentPhysicalId = str;
+        }
+        mat = CORE_ID_FORMAT.matcher(str);
+        if (mat.find()) {
+          coreIdSet.add(currentPhysicalId + " " + str);
+          numCores = coreIdSet.size();
+        }
-   * Read /proc/stat file, parse and calculate cumulative CPU
+   * Read /proc/stat file, parse and calculate cumulative CPU.
-    BufferedReader in = null;
-    InputStreamReader fReader = null;
+    BufferedReader in;
+    InputStreamReader fReader;
-    Matcher mat = null;
+    Matcher mat;
+  public int getNumCores() {
+    readProcCpuInfoFile();
+    return numCores;
+  }
+
+  /** {@inheritDoc} */
+  @Override
-   * Test the {@link LinuxResourceCalculatorPlugin}
+   * Test the {@link LinuxResourceCalculatorPlugin}.
-   * @param args
+   * @param args - arguments to this calculator test
+
+  @VisibleForTesting
+  void setReadCpuInfoFile(boolean readCpuInfoFileValue) {
+    this.readCpuInfoFile = readCpuInfoFileValue;
+  }
+
+  public long getJiffyLengthInMillis() {
+    return this.jiffyLengthInMillis;
+  }

INS26 INS26 INS40 INS40 INS23 INS23 INS23 INS31 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS39 INS59 INS83 INS83 INS29 INS78 INS83 INS39 INS42 INS8 INS78 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS34 INS60 INS65 INS42 INS21 INS41 INS42 INS39 INS42 INS21 INS41 UPD66 INS42 INS42 INS45 INS42 INS42 INS45 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS74 INS59 UPD66 INS65 INS66 INS32 INS42 INS66 INS66 INS7 INS22 INS43 INS43 INS42 INS14 INS21 INS60 INS42 INS22 INS42 INS52 INS42 INS21 INS42 INS42 INS74 INS21 INS7 INS43 INS59 INS52 INS42 INS32 INS43 INS32 INS42 INS34 INS42 INS42 INS45 INS21 INS25 INS21 INS25 INS42 INS42 INS27 INS42 INS42 INS42 INS27 INS7 INS32 INS8 INS7 INS32 INS8 INS45 INS42 INS45 INS45 INS42 INS45 INS42 INS32 INS42 INS42 INS21 INS42 INS32 INS42 INS42 INS21 INS21 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS32 INS7 INS42 INS42 INS42 INS42 INS27 INS42 INS32 INS42 INS45 INS42 INS42 INS42 DEL33 DEL33 DEL33 DEL33 DEL33 DEL33 DEL33 DEL33 DEL33