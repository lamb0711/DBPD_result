HDFS-7398. Reset cached thread-local FSEditLogOp's on every FSEditLog#logEdit. Contributed by Gera Shegalov.

-  long txid = HdfsConstants.INVALID_TXID;
-  byte[] rpcClientId = RpcConstants.DUMMY_CLIENT_ID;
-  int rpcCallId = RpcConstants.INVALID_CALL_ID;
+  long txid;
+  byte[] rpcClientId;
+  int rpcCallId;
+
+  final void reset() {
+    txid = HdfsConstants.INVALID_TXID;
+    rpcClientId = RpcConstants.DUMMY_CLIENT_ID;
+    rpcCallId = RpcConstants.INVALID_CALL_ID;
+    resetSubFields();
+  }
+
+  abstract void resetSubFields();
+    reset();
-    
-    <T extends AddCloseOp> T reset() {
-      this.aclEntries = null;
-      this.xAttrs = null;
-      return (T)this;
+
+    @Override
+    void resetSubFields() {
+      length = 0;
+      inodeId = 0L;
+      path = null;
+      replication = 0;
+      mtime = 0L;
+      atime = 0L;
+      blockSize = 0L;
+      blocks = null;
+      permissions = null;
+      aclEntries = null;
+      xAttrs = null;
+      clientName = null;
+      clientMachine = null;
+      overwrite = false;
+      storagePolicyId = 0;
+
+    @Override
+    void resetSubFields() {
+      path = null;
+      penultimateBlock = null;
+      lastBlock = null;
+    }
-    
+
+
+    @Override
+    void resetSubFields() {
+      path = null;
+      blocks = null;
+    }
+    @Override
+    void resetSubFields() {
+      path = null;
+      replication = 0;
+    }
+
+    @Override
+    void resetSubFields() {
+      length = 0;
+      trg = null;
+      srcs = null;
+      timestamp = 0L;
+    }
+
+    @Override
+    void resetSubFields() {
+      length = 0;
+      src = null;
+      dst = null;
+      timestamp = 0L;
+    }
+
+    @Override
+    void resetSubFields() {
+      length = 0;
+      path = null;
+      timestamp = 0L;
+    }
+
-    MkdirOp reset() {
-      this.aclEntries = null;
-      this.xAttrs = null;
-      return this;
+    @Override
+    void resetSubFields() {
+      length = 0;
+      inodeId = 0L;
+      path = null;
+      timestamp = 0L;
+      permissions = null;
+      aclEntries = null;
+      xAttrs = null;
+    @Override
+    void resetSubFields() {
+      genStampV1 = 0L;
+    }
+
+    @Override
+    void resetSubFields() {
+      genStampV2 = 0L;
+    }
+
+    @Override
+    void resetSubFields() {
+      blockId = 0L;
+    }
+
+    @Override
+    void resetSubFields() {
+      src = null;
+      permissions = null;
+    }
+
+    @Override
+    void resetSubFields() {
+      src = null;
+      username = null;
+      groupname = null;
+    }
+
+    void resetSubFields() {
+      src = null;
+      nsQuota = 0L;
+    }
+
+    @Override
+    void resetSubFields() {
+      src = null;
+    }
+
+    @Override
+    @Override
+    void resetSubFields() {
+      src = null;
+      nsQuota = 0L;
+      dsQuota = 0L;
+    }
+
+    @Override
+    void resetSubFields() {
+      length = 0;
+      path = null;
+      mtime = 0L;
+      atime = 0L;
+    }
+
+    @Override
+    void resetSubFields() {
+      length = 0;
+      inodeId = 0L;
+      path = null;
+      value = null;
+      mtime = 0L;
+      atime = 0L;
+      permissionStatus = null;
+    }
+
+    @Override
+    void resetSubFields() {
+      length = 0;
+      src = null;
+      dst = null;
+      timestamp = 0L;
+      options = null;
+    }
+
+    @Override
+    void resetSubFields() {
+      leaseHolder = null;
+      path = null;
+      newHolder = null;
+    }
+
+    @Override
+    void resetSubFields() {
+      token = null;
+      expiryTime = 0L;
+    }
+
+    @Override
+    void resetSubFields() {
+      token = null;
+      expiryTime = 0L;
+    }
+
+    @Override
+    void resetSubFields() {
+      token = null;
+    }
+
+    @Override
+    void resetSubFields() {
+      key = null;
+    }
+
+    void resetSubFields() {
+      // no data stored in these ops yet
+    }
+
+    @Override
+    void resetSubFields() {
+    }
+
+    @Override
-    
+
+    @Override
+    void resetSubFields() {
+      snapshotRoot = null;
+      snapshotName = null;
+    }
+
+
+    @Override
+    void resetSubFields() {
+      snapshotRoot = null;
+      snapshotName = null;
+    }
+
+    @Override
+    void resetSubFields() {
+      snapshotRoot = null;
+      snapshotOldName = null;
+      snapshotNewName = null;
+    }
+    @Override
+    void resetSubFields() {
+      snapshotRoot = null;
+    }
+
+    void resetSubFields() {
+      snapshotRoot = null;
+    }
+
+    @Override
+    void resetSubFields() {
+      directive = null;
+    }
+
+    @Override
+    void resetSubFields() {
+      directive = null;
+    }
+
+    @Override
+    void resetSubFields() {
+      id = 0L;
+    }
+
+    @Override
+    void resetSubFields() {
+      info = null;
+    }
+
+    @Override
+    void resetSubFields() {
+      info = null;
+    }
+
+    @Override
+    void resetSubFields() {
+      poolName = null;
+    }
+
+    void resetSubFields() {
+      xAttrs = null;
+      src = null;
+    }
+
+    @Override
+    void resetSubFields() {
+      xAttrs = null;
+      src = null;
+    }
+
+    @Override
+    void resetSubFields() {
+      aclEntries = null;
+      src = null;
+    }
+
+    @Override
+    @Override
+    void resetSubFields() {
+      time = 0L;
+    }
+
+    @Override
+    void resetSubFields() {
+      path = null;
+      policyId = 0;
+    }
+

INS23 INS31 INS31 MOV39 INS59 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 MOV42 INS21 INS21 INS21 INS21 INS21 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 UPD42 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS78 INS39 INS42 INS8 INS7 INS7 INS7 INS32 INS32 INS42 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 MOV21 MOV21 INS21 INS21 INS21 INS21 INS42 INS21 INS21 INS21 INS42 INS21 INS21 INS42 INS21 INS21 INS42 INS21 INS21 INS21 INS21 INS42 INS21 INS21 INS21 INS21 INS42 INS21 INS21 INS21 INS42 INS21 INS21 INS21 INS21 INS21 INS42 INS21 INS42 INS21 INS42 INS21 INS42 INS21 INS21 INS42 INS21 INS21 INS21 INS42 INS21 INS21 INS42 INS21 INS42 INS21 INS21 INS21 INS42 INS21 INS21 INS21 INS21 INS42 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS42 INS21 INS21 INS21 INS21 INS21 INS42 INS21 INS21 INS21 INS42 INS21 INS21 INS42 INS21 INS21 INS42 INS21 INS42 INS21 INS42 INS42 INS42 INS21 INS21 INS42 INS21 INS21 INS42 INS21 INS21 INS21 INS42 INS21 INS21 INS42 INS21 INS42 INS21 INS42 INS21 INS42 INS21 INS42 INS21 INS42 INS21 INS42 INS21 INS21 INS42 INS21 INS21 INS42 INS21 INS21 INS42 INS21 INS42 INS21 INS21 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS42 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS42 INS34 INS42 INS34 INS42 INS33 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS33 INS42 INS33 INS42 INS42 INS42 INS33 INS42 INS33 INS42 INS9 INS42 INS34 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS34 INS42 INS34 INS42 INS33 INS42 INS33 INS42 INS34 INS42 INS34 INS42 INS33 INS42 INS33 INS42 INS34 INS42 INS34 INS42 INS33 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS33 INS42 INS34 INS42 INS33 INS42 INS42 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS34 INS42 INS33 INS42 INS33 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS33 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS33 INS42 INS33 INS42 INS34 INS42 INS34 INS42 INS33 INS42 INS34 INS42 INS33 INS42 INS33 INS42 INS34 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS34 INS42 INS33 INS42 INS34 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS34 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS34 INS42 INS33 INS42 INS34 DEL40 DEL40 DEL40 DEL59 DEL23 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL42 DEL43 DEL73 DEL42 DEL43 DEL42 DEL42 DEL43 DEL52 DEL11 DEL41 DEL8 DEL42 DEL43 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL52 DEL41