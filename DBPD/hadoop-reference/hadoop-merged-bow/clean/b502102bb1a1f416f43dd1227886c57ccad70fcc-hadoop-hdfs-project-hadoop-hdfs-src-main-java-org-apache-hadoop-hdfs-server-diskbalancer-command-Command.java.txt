HDFS-9461. DiskBalancer: Add Report Command. Contributed by Xiaobing Zhou.

+import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang.text.StrBuilder;
+  private int topNodes;
+    topNodes = 0;
+
+  /**
+   * returns default top number of nodes.
+   * @return default top number of nodes.
+   */
+  protected int getDefaultTop() {
+    return DiskBalancer.DEFAULT_TOP;
+  }
+
+  /**
+   * Put output line to log and string buffer.
+   * */
+  protected void recordOutput(final StrBuilder result,
+      final String outputLine) {
+    LOG.info(outputLine);
+    result.appendln(outputLine);
+  }
+
+  /**
+   * Parse top number of nodes to be processed.
+   * @return top number of nodes to be processed.
+   */
+  protected int parseTopNodes(final CommandLine cmd, final StrBuilder result) {
+    String outputLine = "";
+    int nodes = 0;
+    final String topVal = cmd.getOptionValue(DiskBalancer.TOP);
+    if (StringUtils.isBlank(topVal)) {
+      outputLine = String.format(
+          "No top limit specified, using default top value %d.",
+          getDefaultTop());
+      LOG.info(outputLine);
+      result.appendln(outputLine);
+      nodes = getDefaultTop();
+    } else {
+      try {
+        nodes = Integer.parseInt(topVal);
+      } catch (NumberFormatException nfe) {
+        outputLine = String.format(
+            "Top limit input is not numeric, using default top value %d.",
+            getDefaultTop());
+        LOG.info(outputLine);
+        result.appendln(outputLine);
+        nodes = getDefaultTop();
+      }
+    }
+
+    return Math.min(nodes, cluster.getNodes().size());
+  }
+
+  /**
+   * Set top number of nodes to be processed.
+   * */
+  public void setTopNodes(int topNodes) {
+    this.topNodes = topNodes;
+  }
+
+  /**
+   * Get top number of nodes to be processed.
+   * @return top number of nodes to be processed.
+   * */
+  public int getTopNodes() {
+    return topNodes;
+  }

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS31 INS31 INS31 INS83 INS39 INS59 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS8 INS42 INS21 INS65 INS65 INS41 INS65 INS83 INS43 INS42 INS83 INS43 INS42 INS21 INS21 INS65 INS65 INS83 INS43 INS42 INS83 INS43 INS42 INS60 INS60 INS60 INS25 INS41 INS65 INS39 INS42 INS21 INS65 INS65 INS41 INS7 INS66 INS66 INS40 INS66 INS42 INS42 INS32 INS32 INS66 INS66 INS42 INS42 INS43 INS59 INS39 INS59 INS83 INS43 INS59 INS32 INS8 INS8 INS32 INS66 INS7 INS66 INS66 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS34 INS42 INS42 INS32 INS42 INS42 INS42 INS21 INS21 INS21 INS21 INS54 INS42 INS42 INS42 INS32 INS22 INS42 INS42 INS42 INS40 INS7 INS32 INS32 INS7 INS8 INS12 INS32 INS42 INS52 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS21 INS44 INS8 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS7 INS43 INS42 INS21 INS21 INS21 INS21 INS42 INS42 INS32 INS42 INS7 INS32 INS32 INS7 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS32 INS42 INS42