HDFS-15321. Make DFSAdmin tool to work with ViewFileSystemOverloadScheme. Contributed by Uma Maheswara Rao G.


+import java.io.FileNotFoundException;
+import org.apache.hadoop.fs.Path;
+  /**
+   * This is an admin only API to give access to its child raw file system, if
+   * the path is link. If the given path is an internal directory(path is from
+   * mount paths tree), it will initialize the file system of given path uri
+   * directly. If path cannot be resolved to any internal directory or link, it
+   * will throw NotInMountpointException. Please note, this API will not return
+   * chrooted file system. Instead, this API will get actual raw file system
+   * instances.
+   *
+   * @param path - fs uri path
+   * @param conf - configuration
+   * @throws IOException
+   */
+  public FileSystem getRawFileSystem(Path path, Configuration conf)
+      throws IOException {
+    InodeTree.ResolveResult<FileSystem> res;
+    try {
+      res = fsState.resolve(getUriPath(path), true);
+      return res.isInternalDir() ? fsGetter().get(path.toUri(), conf)
+          : ((ChRootedFileSystem) res.targetFileSystem).getMyFs();
+    } catch (FileNotFoundException e) {
+      // No link configured with passed path.
+      throw new NotInMountpointException(path,
+          "No link found for the given path.");
+    }
+  }
+

INS26 INS26 INS40 INS40 INS31 INS29 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS54 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS42 INS74 INS59 INS8 INS12 INS43 INS43 INS42 INS21 INS41 INS44 INS8 INS40 INS42 INS7 INS16 INS43 INS42 INS53 INS42 INS32 INS32 INS32 INS32 INS42 INS14 INS42 INS42 INS32 INS9 INS42 INS42 INS32 INS42 INS32 INS42 INS36 INS42 INS43 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS43 INS40 INS42