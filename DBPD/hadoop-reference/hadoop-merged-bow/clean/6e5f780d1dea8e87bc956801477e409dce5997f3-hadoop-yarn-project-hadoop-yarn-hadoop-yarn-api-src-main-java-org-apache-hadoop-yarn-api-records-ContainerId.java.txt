Merge branch 'trunk' into HDFS-6581

-import java.text.NumberFormat;
+import com.google.common.base.Splitter;
+import java.text.NumberFormat;
+import java.util.Iterator;
+  private static final Splitter _SPLITTER = Splitter.on('_').trimResults();
+  private static final String CONTAINER_PREFIX = "container";
+  @Public
+  @Unstable
+  public static ContainerId fromString(String containerIdStr) {
+    Iterator<String> it = _SPLITTER.split(containerIdStr).iterator();
+    if (!it.next().equals(CONTAINER_PREFIX)) {
+      throw new IllegalArgumentException("Invalid ContainerId prefix: "
+          + containerIdStr);
+    }
+    try {
+      ApplicationAttemptId appAttemptID = toApplicationAttemptId(it);
+      int id = Integer.parseInt(it.next());
+      int epoch = 0;
+      if (it.hasNext()) {
+        epoch = Integer.parseInt(it.next());
+      }
+      int cid = (epoch << 22) | id;
+      ContainerId containerId = ContainerId.newInstance(appAttemptID, cid);
+      return containerId;
+    } catch (NumberFormatException n) {
+      throw new IllegalArgumentException("Invalid ContainerId: "
+          + containerIdStr, n);
+    }
+  }
+
+  private static ApplicationAttemptId toApplicationAttemptId(
+      Iterator<String> it) throws NumberFormatException {
+    ApplicationId appId = ApplicationId.newInstance(Long.parseLong(it.next()),
+        Integer.parseInt(it.next()));
+    ApplicationAttemptId appAttemptId =
+        ApplicationAttemptId.newInstance(appId, Integer.parseInt(it.next()));
+    return appAttemptId;
+  }
+

INS26 INS26 INS40 INS40 INS23 INS23 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS78 INS78 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS43 INS8 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS43 INS42 INS60 INS25 INS54 INS42 INS74 INS42 INS42 INS60 INS60 INS41 INS32 INS42 INS42 INS74 INS59 INS38 INS8 INS8 INS12 INS43 INS43 INS43 INS59 INS43 INS59 INS42 INS42 INS42 INS13 INS43 INS43 INS42 INS32 INS32 INS53 INS60 INS60 INS60 INS25 INS60 INS60 INS41 INS44 INS8 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS14 INS43 INS59 INS39 INS59 INS39 INS59 INS32 INS8 INS39 INS59 INS43 INS59 INS42 INS43 INS42 INS53 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS32 INS42 INS32 INS42 INS34 INS42 INS42 INS21 INS42 INS27 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS32 INS7 INS36 INS42 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS27 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS34 INS42 INS42