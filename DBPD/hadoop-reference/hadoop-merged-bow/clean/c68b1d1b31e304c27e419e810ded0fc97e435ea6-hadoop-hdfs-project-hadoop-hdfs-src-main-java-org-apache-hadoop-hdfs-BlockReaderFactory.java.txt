HDFS-4914. Use DFSClient.Conf instead of Configuration.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494854 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.security.UserGroupInformation;
-  @SuppressWarnings("deprecation")
-  public static BlockReader newBlockReader(
-                                     Configuration conf,
+  public static BlockReader newBlockReader(DFSClient.Conf conf,
-    peer.setReadTimeout(conf.getInt(DFSConfigKeys.DFS_CLIENT_SOCKET_TIMEOUT_KEY,
-        HdfsServerConstants.READ_TIMEOUT));
+    peer.setReadTimeout(conf.socketTimeout);
-      if (allowShortCircuitLocalReads &&
-         (!conf.getBoolean(DFSConfigKeys.DFS_CLIENT_USE_LEGACY_BLOCKREADERLOCAL,
-            DFSConfigKeys.DFS_CLIENT_USE_LEGACY_BLOCKREADERLOCAL_DEFAULT))) {
+      if (allowShortCircuitLocalReads && !conf.useLegacyBlockReaderLocal) {
-      if (!conf.getBoolean(DFSConfigKeys.DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC,
-            DFSConfigKeys.DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC_DEFAULT)) {
+      if (!conf.domainSocketDataTraffic) {
-    if (conf.getBoolean(DFSConfigKeys.DFS_CLIENT_USE_LEGACY_BLOCKREADER,
-        DFSConfigKeys.DFS_CLIENT_USE_LEGACY_BLOCKREADER_DEFAULT)) {
-      return RemoteBlockReader.newBlockReader(file,
-          block, blockToken, startOffset, len,
-          conf.getInt(DFSConfigKeys.IO_FILE_BUFFER_SIZE_KEY,
-              DFSConfigKeys.IO_FILE_BUFFER_SIZE_DEFAULT),
+    if (conf.useLegacyBlockReader) {
+      @SuppressWarnings("deprecation")
+      RemoteBlockReader reader = RemoteBlockReader.newBlockReader(file,
+          block, blockToken, startOffset, len, conf.ioBufferSize,
+      return reader;
-      Configuration conf, String file, ExtendedBlock block,
+      DFSClient.Conf conf, String file, ExtendedBlock block,
-  static BlockReader getLegacyBlockReaderLocal(UserGroupInformation ugi,
-      Configuration conf, String src, ExtendedBlock blk,
+  static BlockReader getLegacyBlockReaderLocal(DFSClient dfsClient,
+      String src, ExtendedBlock blk,
-      int socketTimeout, long offsetIntoBlock,
-      boolean connectToDnViaHostname) throws InvalidToken, IOException {
+      long offsetIntoBlock) throws InvalidToken, IOException {
-      return BlockReaderLocalLegacy.newBlockReader(ugi, conf, src,
-          blk, accessToken, chosenNode, socketTimeout, offsetIntoBlock,
-          blk.getNumBytes() - offsetIntoBlock, connectToDnViaHostname);
+      final long length = blk.getNumBytes() - offsetIntoBlock;
+      return BlockReaderLocalLegacy.newBlockReader(dfsClient, src, blk,
+          accessToken, chosenNode, offsetIntoBlock, length);

UPD43 UPD43 UPD43 UPD42 INS40 INS40 INS40 UPD42 UPD40 MOV40 INS60 INS41 INS60 MOV79 INS43 INS59 INS42 INS83 INS39 INS59 INS38 INS40 INS42 INS42 INS32 INS42 MOV27 UPD42 UPD42 INS40 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 UPD40 MOV40 MOV42 MOV42 MOV42 MOV42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL40 DEL40 DEL32 DEL38 DEL36 DEL42 DEL42 DEL40 DEL40 DEL32 DEL42 DEL42 DEL40 DEL40 DEL32 DEL42 DEL42 DEL40 DEL32 DEL32 DEL41 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL42