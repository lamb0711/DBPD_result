YARN-7073. Yarn native services rest API documentation. Contributed by Gour Saha

+import org.apache.hadoop.yarn.service.api.records.Component;
-import org.apache.hadoop.yarn.service.api.records.Component;
-import org.apache.hadoop.yarn.service.utils.SliderUtils;
+import static org.apache.hadoop.yarn.service.api.records.ServiceState.ACCEPTED;
-  @Produces({ MediaType.APPLICATION_JSON, MediaType.TEXT_PLAIN })
+  @Produces({ MediaType.APPLICATION_JSON })
-    return Response.ok(version).build();
+    return Response.ok("{ \"hadoop_version\": \"" + version + "\"}").build();
-      serviceStatus.setState(ServiceState.ACCEPTED);
+      serviceStatus.setState(ACCEPTED);
-      return Response.status(Status.CREATED).entity(serviceStatus).build();
+      return Response.status(Status.ACCEPTED).entity(serviceStatus).build();
+    ServiceStatus status = new ServiceStatus();
-      return Response.ok().entity(
-          "Updating component " + componentName + " size from " + original
-              .get(componentName) + " to " + component.getNumberOfContainers())
-          .build();
+      status.setDiagnostics(
+          "Updating component (" + componentName + ") size from " + original
+              .get(componentName) + " to " + component.getNumberOfContainers());
+      return Response.ok().entity(status).build();
-      ServiceStatus status = new ServiceStatus();
+    ServiceStatus status = new ServiceStatus();
-      return Response.ok("Service " + appName + " lifeTime is successfully updated to "
-          + updateAppData.getLifetime() + " seconds from now: " + newLifeTime).build();
+      status.setDiagnostics(
+          "Service (" + appName + ")'s lifeTime is updated to " + newLifeTime
+              + ", " + updateAppData.getLifetime()
+              + " seconds remaining");
+      return Response.ok(status).build();
-          "Failed to update service (" + appName + ") lifetime ("
-              + updateAppData.getLifetime() + ")";
+          "Failed to update service (" + appName + ")'s lifetime to "
+              + updateAppData.getLifetime();
-      return Response.status(Status.INTERNAL_SERVER_ERROR)
-          .entity(message + " : " + e.getMessage()).build();
+      status.setDiagnostics(message + ": " + e.getMessage());
+      return Response.status(Status.INTERNAL_SERVER_ERROR).entity(status)
+          .build();
+    ServiceStatus status = new ServiceStatus();
-      return Response.ok("Service " + appName + " is successfully started").build();
+      status.setDiagnostics("Service " + appName + " is successfully started.");
+      status.setState(ServiceState.ACCEPTED);
+      return Response.ok(status).build();
+      status.setDiagnostics(message + ": " +  e.getMessage());
-          .entity(message + ": " + e.getMessage()).build();
+          .entity(status).build();

MOV26 MOV26 UPD40 MOV60 INS60 INS60 INS43 INS59 INS43 INS59 INS21 INS42 INS42 INS14 INS21 INS41 INS42 INS42 INS14 INS21 INS21 INS41 INS27 MOV32 INS43 INS32 INS32 INS21 INS41 INS43 INS32 INS32 INS32 INS21 INS45 INS42 INS45 INS42 UPD42 INS42 INS32 INS42 UPD42 MOV42 UPD42 MOV42 MOV27 MOV32 INS32 MOV42 INS32 INS32 INS42 UPD42 MOV42 UPD42 MOV42 MOV27 INS42 INS42 INS40 INS32 MOV42 MOV32 UPD45 UPD45 MOV32 INS42 INS42 UPD45 UPD45 INS45 INS45 INS42 INS42 INS42 MOV42 UPD42 MOV42 MOV27 INS32 MOV42 UPD45 INS42 INS42 INS42 MOV42 UPD42 INS32 UPD40 UPD45 UPD45 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS40 DEL40 DEL42 DEL40 DEL45 DEL32 DEL32 DEL41 DEL45 DEL42 DEL40 DEL32 DEL32 DEL32 DEL41 DEL32 DEL32 DEL41 DEL42 DEL40 DEL32