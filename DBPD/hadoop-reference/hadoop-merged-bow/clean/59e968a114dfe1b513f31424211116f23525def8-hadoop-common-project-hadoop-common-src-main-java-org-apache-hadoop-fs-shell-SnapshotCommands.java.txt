HDFS-4514. Add CLI for supporting snapshot rename, diff report, and snapshottable directory listing.  Contributed by Jing Zhao


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1449956 13f79535-47bb-0310-9956-ffa450edef68

+import com.google.common.base.Preconditions;
+
+  private final static String RENAME_SNAPSHOT = "renameSnapshot";
+    factory.addClass(RenameSnapshot.class, "-" + RENAME_SNAPSHOT);
-    public static final String USAGE = "<snapshotName> <snapshotRoot>";
+    public static final String USAGE = "<snapshotDir> <snapshotName>";
-    private static String snapshotName;
+    private String snapshotName;
-      snapshotName = args.removeFirst();
+      snapshotName = args.removeLast();
-    public static final String USAGE = "<snapshotName> <snapshotDir>";
+    public static final String USAGE = "<snapshotDir> <snapshotName>";
-    private static String snapshotName;
+    private String snapshotName;
-      snapshotName = args.removeFirst();
+      snapshotName = args.removeLast();
+  
+  /**
+   * Rename a snapshot
+   */
+  public static class RenameSnapshot extends FsCommand {
+    public static final String NAME = RENAME_SNAPSHOT;
+    public static final String USAGE = "<snapshotDir> <oldName> <newName>";
+    public static final String DESCRIPTION = 
+        "Rename a snapshot from oldName to newName";
+    
+    private String oldName;
+    private String newName;
+    
+    @Override
+    protected void processPath(PathData item) throws IOException {
+      if (!item.stat.isDirectory()) {
+        throw new PathIsNotDirectoryException(item.toString());
+      }
+    }
+
+    @Override
+    protected void processOptions(LinkedList<String> args) throws IOException {
+      if (args.size() != 3) {
+        throw new IOException("args number not 3: " + args.size());
+      }
+      newName = args.removeLast();
+      oldName = args.removeLast();
+      
+      // TODO: new name length check
+    }
+
+    @Override
+    protected void processArguments(LinkedList<PathData> items)
+        throws IOException {
+      super.processArguments(items);
+      if (exitCode != 0) { // check for error collecting paths
+        return;
+      }
+      Preconditions.checkArgument(items.size() == 1);
+      PathData sroot = items.getFirst();
+      sroot.fs.renameSnapshot(sroot.path, oldName, newName);
+    }
+    
+  }

INS26 INS40 INS23 INS55 INS83 INS83 INS83 MOV43 INS59 INS29 INS83 INS83 INS42 INS43 INS23 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS42 INS45 INS21 INS43 INS43 INS65 INS42 INS83 INS83 INS83 MOV43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS32 UPD45 INS42 UPD45 INS42 INS66 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS25 INS42 INS74 INS42 INS42 INS25 INS21 INS21 INS42 INS74 INS42 INS42 INS21 INS25 INS21 INS60 INS21 INS42 INS42 INS57 INS27 INS42 INS38 INS8 INS43 INS43 INS27 INS8 INS7 INS7 INS43 INS43 INS48 INS27 INS8 INS32 INS43 INS59 INS32 INS43 INS45 INS42 INS32 INS53 INS42 INS42 INS32 INS34 INS53 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS34 INS41 INS42 INS42 INS27 INS42 INS42 INS32 INS40 INS42 INS40 INS42 INS42 INS42 UPD42 UPD42 INS40 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS32 INS34 INS42 INS42 INS43 INS32 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS42 DEL83 DEL83