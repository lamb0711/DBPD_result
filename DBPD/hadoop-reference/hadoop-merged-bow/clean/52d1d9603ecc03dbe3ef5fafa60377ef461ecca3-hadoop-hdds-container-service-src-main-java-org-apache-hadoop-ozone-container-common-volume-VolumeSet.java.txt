HDDS-183:Integrate Volumeset, ContainerSet and HddsDispatcher. Contributed by Bharat Viswanadham

+import org.apache.hadoop.hdds.protocol.proto
+    .StorageContainerDatanodeProtocolProtos;
+import org.apache.hadoop.hdds.protocol.proto
+    .StorageContainerDatanodeProtocolProtos.NodeReportProto;
+import org.apache.hadoop.ozone.container.common.impl.StorageLocationReport;
+
+  public StorageContainerDatanodeProtocolProtos.NodeReportProto getNodeReport()
+      throws IOException {
+    boolean failed;
+    StorageLocationReport[] reports =
+        new StorageLocationReport[volumeMap.size()];
+    int counter = 0;
+    for (Map.Entry<String, HddsVolume> entry : volumeMap.entrySet()) {
+      HddsVolume hddsVolume = entry.getValue();
+      VolumeInfo volumeInfo = hddsVolume.getVolumeInfo();
+      long scmUsed = 0;
+      long remaining = 0;
+      failed = false;
+      try {
+        scmUsed = volumeInfo.getScmUsed();
+        remaining = volumeInfo.getAvailable();
+      } catch (IOException ex) {
+        LOG.warn("Failed to get scmUsed and remaining for container " +
+            "storage location {}", volumeInfo.getRootDir());
+        // reset scmUsed and remaining if df/du failed.
+        scmUsed = 0;
+        remaining = 0;
+        failed = true;
+      }
+
+      StorageLocationReport.Builder builder =
+          StorageLocationReport.newBuilder();
+      builder.setStorageLocation(volumeInfo.getRootDir())
+          .setId(hddsVolume.getStorageID())
+          .setFailed(failed)
+          .setCapacity(hddsVolume.getCapacity())
+          .setRemaining(remaining)
+          .setScmUsed(scmUsed)
+          .setStorageType(hddsVolume.getStorageType());
+      StorageLocationReport r = builder.build();
+      reports[counter++] = r;
+    }
+    NodeReportProto.Builder nrb = NodeReportProto.newBuilder();
+    for (int i = 0; i < reports.length; i++) {
+      nrb.addStorageReport(reports[i].getProtoBufMessage());
+    }
+    return nrb.build();
+  }

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS83 INS43 INS42 INS43 INS8 INS40 INS42 INS60 INS60 INS60 INS70 INS60 INS24 INS41 INS39 INS59 INS5 INS59 INS39 INS59 INS44 INS32 INS8 INS43 INS59 INS58 INS27 INS37 INS8 INS32 INS42 INS43 INS85 INS42 INS3 INS42 INS34 INS74 INS42 INS42 INS42 INS60 INS60 INS60 INS60 INS21 INS54 INS60 INS21 INS60 INS21 INS40 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS21 INS42 INS42 INS42 INS5 INS32 INS43 INS43 INS43 INS43 INS59 INS43 INS59 INS39 INS59 INS39 INS59 INS7 INS8 INS12 INS43 INS59 INS32 INS43 INS59 INS7 INS42 INS42 INS42 INS34 INS32 INS43 INS85 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS34 INS42 INS34 INS42 INS9 INS21 INS21 INS44 INS8 INS40 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS32 INS2 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS43 INS42 INS21 INS21 INS21 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS37 INS2 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS7 INS7 INS7 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS32 INS42 INS34 INS42 INS34 INS42 INS9 INS32 INS42 INS32 INS45 INS45 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42