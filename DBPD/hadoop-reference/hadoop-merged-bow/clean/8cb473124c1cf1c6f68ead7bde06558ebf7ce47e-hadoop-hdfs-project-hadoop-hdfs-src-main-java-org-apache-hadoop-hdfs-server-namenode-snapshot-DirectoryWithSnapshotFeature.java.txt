HDFS-6651. Deletion failure can leak inodes permanently. Contributed by Jing Zhao.

-    private final boolean replace(final ListType type,
+    private boolean replace(final ListType type,
-    private final boolean removeChild(ListType type, final INode child) {
+    private boolean removeChild(ListType type, final INode child) {
-        inode.cleanSubtree(snapshot, prior, collectedBlocks, removedINodes,
-            true);
+        inode.cleanSubtree(snapshot, prior, collectedBlocks, removedINodes);
-      inode.cleanSubtree(snapshot, prior, collectedBlocks, removedINodes, true);
+      inode.cleanSubtree(snapshot, prior, collectedBlocks, removedINodes);
-              removedINodes, true);
+              removedINodes);
-      final List<INode> removedINodes, final boolean countDiffChange)
-      throws QuotaExceededException {
+      final List<INode> removedINodes) {
-          wn.cleanSubtree(post, prior, collectedBlocks, removedINodes,
-              countDiffChange);
+          wn.cleanSubtree(post, prior, collectedBlocks, removedINodes);
-            collectedBlocks, removedINodes, countDiffChange));
+            collectedBlocks, removedINodes));
-      int latestSnapshotId) throws QuotaExceededException {
+      int latestSnapshotId) {
-      final INode child, final int latestSnapshotId, final INode snapshotCopy)
-      throws QuotaExceededException {
+      final INode child, final int latestSnapshotId, final INode snapshotCopy) {
-    counts.add(Quota.NAMESPACE, diffs.asList().size());
-      final List<INode> removedINodes, final boolean countDiffChange)
-      throws QuotaExceededException {
+      final List<INode> removedINodes) {
-          collectedBlocks, removedINodes, priorDeleted, countDiffChange));
+          collectedBlocks, removedINodes, priorDeleted));
-          currentINode, collectedBlocks, removedINodes, countDiffChange));
+          currentINode, collectedBlocks, removedINodes));
-          collectedBlocks, removedINodes, priorDeleted, countDiffChange));
+          collectedBlocks, removedINodes, priorDeleted));
-                    collectedBlocks, removedINodes, countDiffChange));
+                    collectedBlocks, removedINodes));
-                  collectedBlocks, removedINodes, countDiffChange));
+                  collectedBlocks, removedINodes));

DEL83 DEL83 DEL9 DEL9 DEL9 DEL83 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL83 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42