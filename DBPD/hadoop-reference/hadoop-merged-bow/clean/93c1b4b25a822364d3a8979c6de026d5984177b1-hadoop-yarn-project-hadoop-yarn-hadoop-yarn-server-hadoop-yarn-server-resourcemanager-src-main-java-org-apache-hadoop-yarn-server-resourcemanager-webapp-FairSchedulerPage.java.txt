Merge r1414455:r1426018 from trunk

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1432246 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.List;
+import java.util.Collection;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.FairSchedulerLeafQueueInfo;
+import org.apache.hadoop.yarn.webapp.hamlet.Hamlet.LI;
-    FairSchedulerInfo fsinfo;
-  static class QueueInfoBlock extends HtmlBlock {
-    final FairSchedulerQueueInfo qinfo;
+  static class LeafQueueBlock extends HtmlBlock {
+    final FairSchedulerLeafQueueInfo qinfo;
-    @Inject QueueInfoBlock(ViewContext ctx, FSQInfo info) {
+    @Inject LeafQueueBlock(ViewContext ctx, FSQInfo info) {
-      qinfo = (FairSchedulerQueueInfo) info.qinfo;
+      qinfo = (FairSchedulerLeafQueueInfo)info.qinfo;
+  static class QueueBlock extends HtmlBlock {
+    final FSQInfo fsqinfo;
+
+    @Inject QueueBlock(FSQInfo info) {
+      fsqinfo = info;
+    }
+
+    @Override
+    public void render(Block html) {
+      Collection<FairSchedulerQueueInfo> subQueues = fsqinfo.qinfo.getChildQueues();
+      UL<Hamlet> ul = html.ul("#pq");
+      for (FairSchedulerQueueInfo info : subQueues) {
+        float capacity = info.getMaxResourcesFraction();
+        float fairShare = info.getFairShareFraction();
+        float used = info.getUsedFraction();
+        LI<UL<Hamlet>> li = ul.
+          li().
+            a(_Q).$style(width(capacity * Q_MAX_WIDTH)).
+              $title(join("Fair Share:", percent(fairShare))).
+              span().$style(join(Q_GIVEN, ";font-size:1px;", width(fairShare/capacity))).
+                _('.')._().
+              span().$style(join(width(used/capacity),
+                ";font-size:1px;left:0%;", used > fairShare ? Q_OVER : Q_UNDER)).
+                _('.')._().
+              span(".q", info.getQueueName())._().
+            span().$class("qstats").$style(left(Q_STATS_POS)).
+              _(join(percent(used), " used"))._();
+
+        fsqinfo.qinfo = info;
+        if (info instanceof FairSchedulerLeafQueueInfo) {
+          li.ul("#lq").li()._(LeafQueueBlock.class)._()._();
+        } else {
+          li._(QueueBlock.class);
+        }
+        li._();
+      }
+
+      ul._();
+    }
+  }
+  
-    
-    @Override public void render(Block html) {
+
+    @Override
+    public void render(Block html) {
-        fsqinfo.fsinfo = sinfo;
-        fsqinfo.qinfo = null;
+        fsqinfo.qinfo = sinfo.getRootQueueInfo();
+        float used = fsqinfo.qinfo.getUsedFraction();
-          _();
-        
-        List<FairSchedulerQueueInfo> subQueues = fsqinfo.fsinfo.getQueueInfos();
-        for (FairSchedulerQueueInfo info : subQueues) {
-          fsqinfo.qinfo = info;
-          float capacity = info.getMaxResourcesFraction();
-          float fairShare = info.getFairShareFraction();
-          float used = info.getUsedFraction();
-          ul.
-              li().
-                a(_Q).$style(width(capacity * Q_MAX_WIDTH)).
-                  $title(join("Fair Share:", percent(fairShare))).
-                  span().$style(join(Q_GIVEN, ";font-size:1px;", width(fairShare/capacity))).
-                    _('.')._().
-                  span().$style(join(width(used/capacity),
-                    ";font-size:1px;left:0%;", used > fairShare ? Q_OVER : Q_UNDER)).
-                    _('.')._().
-                  span(".q", info.getQueueName())._().
-                span().$class("qstats").$style(left(Q_STATS_POS)).
-                  _(join(percent(used), " used"))._().
-                ul("#lq").li()._(QueueInfoBlock.class)._()._().
-              _();
-        }
+        _().
+          li().
+            a(_Q).$style(width(Q_MAX_WIDTH)).
+              span().$style(join(width(used), ";left:0%;",
+                  used > 1 ? Q_OVER : Q_UNDER))._(".")._().
+              span(".q", "root")._().
+            span().$class("qstats").$style(left(Q_STATS_POS)).
+              _(join(percent(used), " used"))._().
+            _(QueueBlock.class)._();
+          ".qstats { font-weight: normal; font-size: 80%; position: absolute }",
+          ".qlegend { font-weight: normal; padding: 0 1em; margin: 1em }",
-          "    data.inst.open_all(); }).",
+          "    data.inst.open_node('#pq', true);",
+          "   }).",
-            "    if (q == 'root') q = '';",
-          "    $('#apps').dataTable().fnFilter(q, 3);",
+          "    if (q == 'root') q = '';",
+          "    else q = '^' + q.substr(q.lastIndexOf('.') + 1) + '$';",
+          "    $('#apps').dataTable().fnFilter(q, 3, true);",
+  
+  @Override
+  protected String getAppsTableColumnDefs() {
+    StringBuilder sb = new StringBuilder();
+    return sb
+      .append("[\n")
+      .append("{'sType':'numeric', 'aTargets': [0]")
+      .append(", 'mRender': parseHadoopID }")
+
+      .append("\n, {'sType':'numeric', 'aTargets': [5, 6]")
+      .append(", 'mRender': renderHadoopDate }")
+
+      .append("\n, {'sType':'numeric', bSearchable:false, 'aTargets': [9]")
+      .append(", 'mRender': parseHadoopProgress }]").toString();
+  }

INS26 INS26 UPD40 INS40 INS40 INS55 INS31 UPD42 INS83 INS42 INS43 INS23 INS31 INS31 INS78 INS83 INS43 INS42 INS8 INS43 UPD42 INS42 INS83 INS43 INS59 INS78 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 MOV8 INS42 INS42 INS60 INS41 INS42 INS42 INS42 INS42 INS43 INS42 INS21 INS42 INS43 INS42 INS60 INS21 INS43 INS59 INS32 INS42 INS7 INS42 INS74 INS59 UPD74 MOV21 INS32 INS8 INS42 INS42 INS14 INS32 INS42 INS42 INS42 INS43 MOV43 INS42 INS32 UPD43 UPD43 UPD42 INS60 INS25 INS21 INS42 INS42 MOV60 INS21 INS60 MOV21 UPD45 INS45 INS45 UPD45 INS43 INS32 INS42 INS45 UPD43 INS42 INS40 INS42 UPD42 UPD42 UPD42 INS42 INS45 INS74 INS59 INS62 INS8 INS8 INS32 INS7 INS39 INS59 INS32 INS42 INS32 INS42 INS45 UPD42 INS43 INS74 INS42 MOV32 INS42 INS43 INS21 INS21 INS42 INS42 INS40 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS45 INS42 INS43 INS43 INS42 INS32 INS32 INS42 INS42 INS40 INS42 INS32 INS42 INS57 INS32 INS42 INS45 INS42 INS42 MOV32 MOV42 INS42 MOV42 INS57 INS32 INS42 INS43 INS32 INS42 INS45 INS43 INS32 INS42 INS32 INS42 INS45 INS45 INS32 INS42 INS45 INS42 INS32 INS42 INS32 INS42 INS32 INS45 INS42 INS42 INS45 UPD43 INS32 INS42 INS45 INS42 INS42 INS42 INS42 INS42 UPD42 INS32 INS42 INS32 INS42 INS32 INS42 INS45 INS45 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS32 INS32 INS42 INS42 INS32 INS45 INS16 INS32 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS34 MOV32 INS42 DEL42 DEL43 DEL42 DEL59 DEL23 DEL40 DEL42 DEL7 DEL21 DEL40 DEL33 DEL7 DEL21 DEL40 DEL32 DEL32 DEL21