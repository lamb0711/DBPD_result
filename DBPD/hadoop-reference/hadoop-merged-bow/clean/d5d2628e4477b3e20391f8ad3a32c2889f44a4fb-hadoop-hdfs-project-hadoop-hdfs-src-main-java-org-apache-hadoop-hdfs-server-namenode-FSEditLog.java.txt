Merge r1360400 through r1399945 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1399950 13f79535-47bb-0310-9956-ffa450edef68

-import static org.apache.hadoop.hdfs.server.common.Util.now;
+import static org.apache.hadoop.util.Time.now;
+import org.apache.hadoop.hdfs.server.common.Storage.FormatConfirmable;
-public class FSEditLog  {
+public class FSEditLog implements LogsPurgeable {
+    @Override
+
+  /**
+   * Format all configured journals which are not file-based.
+   * 
+   * File-based journals are skipped, since they are formatted by the
+   * Storage format code.
+   */
+  synchronized void formatNonFileJournals(NamespaceInfo nsInfo) throws IOException {
+    Preconditions.checkState(state == State.BETWEEN_LOG_SEGMENTS,
+        "Bad state: %s", state);
+    
+    for (JournalManager jm : journalSet.getJournalManagers()) {
+      if (!(jm instanceof FileJournalManager)) {
+        jm.format(nsInfo);
+      }
+    }
+  }
+  
+  synchronized List<FormatConfirmable> getFormatConfirmables() {
+    Preconditions.checkState(state == State.BETWEEN_LOG_SEGMENTS,
+        "Bad state: %s", state);
+
+    List<FormatConfirmable> ret = Lists.newArrayList();
+    for (final JournalManager jm : journalSet.getJournalManagers()) {
+      // The FJMs are confirmed separately since they are also
+      // StorageDirectories
+      if (!(jm instanceof FileJournalManager)) {
+        ret.add(jm);
+      }
+    }
+    return ret;
+  }
+
-                "Could not sync enough journals to persistent storage. "
-                + "Unsynced transactions: " + (txid - synctxid);
+                "Could not sync enough journals to persistent storage " +
+                "due to " + e.getMessage() + ". " +
+                "Unsynced transactions: " + (txid - synctxid);
-      .setReplication(newNode.getReplication())
+      .setReplication(newNode.getBlockReplication())
-      .setReplication(newNode.getReplication())
+      .setReplication(newNode.getBlockReplication())
+  @Override
+      // TODO: are we sure this is OK?
+  
+  public void selectInputStreams(Collection<EditLogInputStream> streams,
+      long fromTxId, boolean inProgressOk) {
+    journalSet.selectInputStreams(streams, fromTxId, inProgressOk);
+  }
-    journalSet.selectInputStreams(streams, fromTxId, inProgressOk);
+    selectInputStreams(streams, fromTxId, inProgressOk);

MOV26 INS26 INS40 UPD40 INS43 INS31 INS31 INS31 INS42 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS83 INS74 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS65 INS43 INS42 INS42 INS21 INS70 INS43 INS43 INS21 INS60 INS70 INS41 INS42 INS74 INS42 INS39 INS42 INS39 INS42 MOV21 INS21 INS66 INS66 INS66 INS42 INS32 INS44 INS32 INS8 INS42 INS42 INS32 INS74 INS59 INS44 INS32 INS8 INS42 INS43 INS43 INS32 INS42 INS42 INS27 INS45 INS42 INS43 INS42 INS42 INS42 INS25 INS42 INS42 INS27 INS45 INS42 INS43 INS43 INS42 INS32 INS83 INS43 INS42 INS42 INS42 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS78 INS42 INS40 INS42 INS38 INS8 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS38 INS8 INS42 INS36 INS21 INS36 INS21 INS62 INS32 INS62 INS32 INS42 INS43 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS27 INS32 INS45 UPD45 MOV45 INS45 INS42 INS42