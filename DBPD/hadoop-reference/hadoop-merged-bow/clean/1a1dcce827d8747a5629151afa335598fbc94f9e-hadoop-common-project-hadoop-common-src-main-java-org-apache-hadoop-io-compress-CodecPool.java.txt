MAPREDUCE-5918. LineRecordReader can return the same decompressor to CodecPool multiple times (Sergey Murylev via raviprak)

-import java.util.ArrayList;
+import java.util.HashSet;
-import java.util.List;
+import java.util.Set;
-  private static final Map<Class<Compressor>, List<Compressor>> compressorPool = 
-    new HashMap<Class<Compressor>, List<Compressor>>();
+  private static final Map<Class<Compressor>, Set<Compressor>> compressorPool =
+    new HashMap<Class<Compressor>, Set<Compressor>>();
-  private static final Map<Class<Decompressor>, List<Decompressor>> decompressorPool = 
-    new HashMap<Class<Decompressor>, List<Decompressor>>();
+  private static final Map<Class<Decompressor>, Set<Decompressor>> decompressorPool =
+    new HashMap<Class<Decompressor>, Set<Decompressor>>();
-  private static <T> T borrow(Map<Class<T>, List<T>> pool,
+  private static <T> T borrow(Map<Class<T>, Set<T>> pool,
-    List<T> codecList;
+    Set<T> codecSet;
-      codecList = pool.get(codecClass);
+      codecSet = pool.get(codecClass);
-    if (codecList != null) {
-      synchronized (codecList) {
-        if (!codecList.isEmpty()) {
-          codec = codecList.remove(codecList.size() - 1);
+    if (codecSet != null) {
+      synchronized (codecSet) {
+        if (!codecSet.isEmpty()) {
+          codec = codecSet.iterator().next();
+          codecSet.remove(codec);
-  private static <T> void payback(Map<Class<T>, List<T>> pool, T codec) {
+  private static <T> boolean payback(Map<Class<T>, Set<T>> pool, T codec) {
-      List<T> codecList;
+      Set<T> codecSet;
-        codecList = pool.get(codecClass);
-        if (codecList == null) {
-          codecList = new ArrayList<T>();
-          pool.put(codecClass, codecList);
+        codecSet = pool.get(codecClass);
+        if (codecSet == null) {
+          codecSet = new HashSet<T>();
+          pool.put(codecClass, codecSet);
-      synchronized (codecList) {
-        codecList.add(codec);
+      synchronized (codecSet) {
+        return codecSet.add(codec);
+    return false;
-    payback(compressorPool, compressor);
-    updateLeaseCount(compressorCounts, compressor, -1);
+    if (payback(compressorPool, compressor)) {
+      updateLeaseCount(compressorCounts, compressor, -1);
+    }
-    payback(decompressorPool, decompressor);
-    updateLeaseCount(decompressorCounts, decompressor, -1);
+    if (payback(decompressorPool, decompressor)) {
+      updateLeaseCount(decompressorCounts, decompressor, -1);
+    }

UPD40 UPD40 UPD74 UPD74 UPD39 UPD74 UPD74 UPD74 UPD74 INS41 INS25 INS25 UPD43 UPD74 UPD43 UPD74 UPD74 UPD74 UPD74 INS9 MOV32 INS8 MOV32 INS8 UPD42 UPD74 UPD42 UPD74 UPD43 UPD43 UPD42 UPD42 UPD43 MOV21 MOV21 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD74 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 INS41 UPD42 INS32 INS21 UPD42 UPD42 UPD42 MOV42 MOV42 MOV42 UPD42 INS32 INS42 INS42 INS42 UPD42 UPD42 INS32 UPD42 MOV42 UPD74 UPD42 MOV42 UPD42 MOV42 UPD43 UPD42 DEL42 DEL32 DEL34 DEL27 DEL32 DEL21 DEL21 DEL21