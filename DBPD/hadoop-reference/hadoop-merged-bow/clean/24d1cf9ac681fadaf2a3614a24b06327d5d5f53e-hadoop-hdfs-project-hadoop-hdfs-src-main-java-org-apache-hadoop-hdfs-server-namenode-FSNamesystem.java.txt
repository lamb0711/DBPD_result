HDFS-5693. Few NN metrics data points were collected via JMX when NN is under heavy load. Contributed by Ming Ma.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1589620 13f79535-47bb-0310-9956-ffa450edef68

-    /** Safe mode extension after the threshold. */
-    private int extension;
+    /**
+     * Safe mode extension after the threshold.
+     * Make it volatile so that getSafeModeTip can read the latest value
+     * without taking a lock.
+     */
+    private volatile int extension;
-    /** Was safemode entered automatically because available resources were low. */
-    private boolean resourcesLow = false;
+    /**
+     * Was safemode entered automatically because available resources were low.
+     * Make it volatile so that getSafeModeTip can read the latest value
+     * without taking a lock.
+     */
+    private volatile boolean resourcesLow = false;
-    readLock();
-    try {
-      if (!isInSafeMode()) {
-        return "";
-      }
+    // There is no need to take readLock.
+    // Don't use isInSafeMode as this.safeMode might be set to null.
+    // after isInSafeMode returns.
+    boolean inSafeMode;
+    SafeModeInfo safeMode = this.safeMode;
+    if (safeMode == null) {
+      inSafeMode = false;
+    } else {
+      inSafeMode = safeMode.isOn();
+    }
+
+    if (!inSafeMode) {
+      return "";
+    } else {
-    } finally {
-      readUnlock();
-    readLock();
-    try {
-      return this.dir.totalInodes();
-    } finally {
-      readUnlock();
-    }
+    // There is no need to take fSNamesystem's lock as
+    // FSDirectory has its own lock.
+    return this.dir.totalInodes();
+
+    int count = 0;
+    ArrayList<CorruptFileBlockInfo> corruptFiles =
+        new ArrayList<CorruptFileBlockInfo>();
+    if (cookieTab == null) {
+      cookieTab = new String[] { null };
+    }
+
+    // Do a quick check if there are any corrupt files without taking the lock
+    if (blockManager.getMissingBlocksCount() == 0) {
+      if (cookieTab[0] == null) {
+        cookieTab[0] = String.valueOf(getIntCookie(cookieTab[0]));
+      }
+      LOG.info("there are no corrupt file blocks.");
+      return corruptFiles;
+    }
+
-      int count = 0;
-      ArrayList<CorruptFileBlockInfo> corruptFiles = new ArrayList<CorruptFileBlockInfo>();
-      if (cookieTab == null) {
-        cookieTab = new String[] { null };
-      }

MOV8 INS83 INS83 INS60 INS60 INS25 INS25 MOV60 MOV60 MOV25 INS25 INS39 INS59 INS43 INS59 INS27 INS8 INS8 INS38 MOV8 MOV8 INS27 INS8 UPD66 INS66 INS66 UPD66 INS66 INS66 INS42 INS42 INS42 INS22 INS42 INS33 MOV21 MOV21 INS42 INS32 INS34 INS25 INS21 INS41 INS52 INS42 INS7 INS7 INS42 INS42 INS27 INS8 INS32 INS42 INS42 INS9 INS42 INS32 INS2 INS33 INS21 INS42 INS42 INS45 UPD42 MOV42 INS42 INS42 INS34 INS7 INS2 INS32 INS42 INS34 INS42 INS42 INS32 INS42 INS2 INS42 INS34 DEL42 DEL32 DEL32 DEL42 DEL32 DEL38 DEL25 DEL8 DEL54 DEL42 DEL32 DEL21 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8