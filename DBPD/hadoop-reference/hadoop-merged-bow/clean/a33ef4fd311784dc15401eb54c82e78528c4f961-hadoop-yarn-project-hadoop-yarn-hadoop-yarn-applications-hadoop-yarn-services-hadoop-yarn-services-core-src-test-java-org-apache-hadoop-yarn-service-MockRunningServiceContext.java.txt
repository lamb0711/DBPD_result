YARN-8867. Added resource localization status to YARN service status call.
           Contributed by Chandni Singh

+import com.google.common.util.concurrent.Futures;
+import org.apache.hadoop.yarn.service.containerlaunch.AbstractLauncher;
+import org.apache.hadoop.yarn.service.exceptions.SliderException;
+import org.apache.hadoop.yarn.service.provider.ProviderService;
+import org.apache.hadoop.yarn.service.provider.ProviderUtils;
+import org.mockito.invocation.InvocationOnMock;
+import java.util.HashMap;
+import java.util.concurrent.Future;
-import static org.mockito.Mockito.doNothing;
+    when(mockLaunchService.launchCompInstance(anyObject(), anyObject(),
+        anyObject(), anyObject())).thenAnswer(
+        (Answer<Future<ProviderService.ResolvedLaunchParams>>)
+            this::launchAndReinitHelper);
-    doNothing().when(mockLaunchService).
-        reInitCompInstance(anyObject(), anyObject(), anyObject(), anyObject());
+    when(mockLaunchService.reInitCompInstance(anyObject(), anyObject(),
+        anyObject(), anyObject())).thenAnswer((
+        Answer<Future<ProviderService.ResolvedLaunchParams>>)
+        this::launchAndReinitHelper);
+  private Future<ProviderService.ResolvedLaunchParams> launchAndReinitHelper(
+      InvocationOnMock invocation) throws IOException, SliderException {
+    AbstractLauncher launcher = new AbstractLauncher(
+        scheduler.getContext());
+    ComponentInstance instance = (ComponentInstance)
+        invocation.getArguments()[1];
+    Container container = (Container) invocation.getArguments()[2];
+    ContainerLaunchService.ComponentLaunchContext clc =
+        (ContainerLaunchService.ComponentLaunchContext)
+            invocation.getArguments()[3];
+
+    ProviderService.ResolvedLaunchParams resolvedParams =
+        new ProviderService.ResolvedLaunchParams();
+    ProviderUtils.createConfigFileAndAddLocalResource(launcher, fs, clc,
+        new HashMap<>(), instance, scheduler.getContext(), resolvedParams);
+    ProviderUtils.handleStaticFilesForLocalization(launcher, fs, clc,
+        resolvedParams);
+    return Futures.immediateFuture(resolvedParams);
+  }
+

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 INS40 INS31 INS83 INS74 INS42 INS44 INS43 INS43 INS8 INS21 INS43 INS43 INS43 INS42 INS42 INS42 INS60 INS60 INS60 INS60 INS60 INS21 INS21 INS41 INS32 INS32 INS42 INS40 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS32 INS32 INS32 INS42 INS11 INS32 INS42 INS11 INS42 INS42 INS14 INS42 INS42 INS11 INS42 INS42 INS11 INS40 INS42 INS11 INS40 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS74 INS90 INS42 INS32 INS74 INS90 INS43 INS32 INS43 INS2 INS43 INS2 INS43 INS2 INS43 INS74 INS42 INS42 MOV42 UPD42 INS43 INS74 INS52 INS42 INS42 INS42 INS32 INS32 INS32 INS32 INS43 INS74 INS52 INS42 INS42 INS42 INS42 INS42 INS32 INS34 INS42 INS32 INS34 INS40 INS32 INS34 INS40 INS43 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS40 DEL42 DEL32 DEL42 DEL32