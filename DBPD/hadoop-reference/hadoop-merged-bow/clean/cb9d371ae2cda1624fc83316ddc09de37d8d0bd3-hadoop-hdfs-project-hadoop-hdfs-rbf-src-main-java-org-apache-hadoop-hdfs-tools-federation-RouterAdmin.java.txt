HDFS-13861. RBF: Illegal Router Admin command leads to printing usage for all commands. Contributed by Ayush Saxena.

-    String usage = "Federation Admin Tools:\n"
-        + "\t[-add <source> <nameservice1, nameservice2, ...> <destination> "
-        + "[-readonly] [-order HASH|LOCAL|RANDOM|HASH_ALL] "
-        + "-owner <owner> -group <group> -mode <mode>]\n"
-        + "\t[-update <source> <nameservice1, nameservice2, ...> <destination> "
-        + "[-readonly] [-order HASH|LOCAL|RANDOM|HASH_ALL] "
-        + "-owner <owner> -group <group> -mode <mode>]\n"
-        + "\t[-rm <source>]\n"
-        + "\t[-ls <path>]\n"
-        + "\t[-setQuota <path> -nsQuota <nsQuota> -ssQuota "
-        + "<quota in bytes or quota size string>]\n"
-        + "\t[-clrQuota <path>]\n"
-        + "\t[-safemode enter | leave | get]\n"
-        + "\t[-nameservice enable | disable <nameservice>]\n"
-        + "\t[-getDisabledNameservices]\n";
-
+    String usage = getUsage(null);
+  private void printUsage(String cmd) {
+    String usage = getUsage(cmd);
+    System.out.println(usage);
+  }
+
+  private String getUsage(String cmd) {
+    if (cmd == null) {
+      String[] commands =
+          {"-add", "-update", "-rm", "-ls", "-setQuota", "-clrQuota",
+              "-safemode", "-nameservice", "-getDisabledNameservices"};
+      StringBuilder usage = new StringBuilder();
+      usage.append("Usage: hdfs routeradmin :\n");
+      for (int i = 0; i < commands.length; i++) {
+        usage.append(getUsage(commands[i]));
+        if (i + 1 < commands.length) {
+          usage.append("\n");
+        }
+      }
+      return usage.toString();
+    }
+    if (cmd.equals("-add")) {
+      return "\t[-add <source> <nameservice1, nameservice2, ...> <destination> "
+          + "[-readonly] [-order HASH|LOCAL|RANDOM|HASH_ALL] "
+          + "-owner <owner> -group <group> -mode <mode>]";
+    } else if (cmd.equals("-update")) {
+      return "\t[-update <source> <nameservice1, nameservice2, ...> "
+          + "<destination> "
+          + "[-readonly] [-order HASH|LOCAL|RANDOM|HASH_ALL] "
+          + "-owner <owner> -group <group> -mode <mode>]";
+    } else if (cmd.equals("-rm")) {
+      return "\t[-rm <source>]";
+    } else if (cmd.equals("-ls")) {
+      return "\t[-ls <path>]";
+    } else if (cmd.equals("-setQuota")) {
+      return "\t[-setQuota <path> -nsQuota <nsQuota> -ssQuota "
+          + "<quota in bytes or quota size string>]";
+    } else if (cmd.equals("-clrQuota")) {
+      return "\t[-clrQuota <path>]";
+    } else if (cmd.equals("-safemode")) {
+      return "\t[-safemode enter | leave | get]";
+    } else if (cmd.equals("-nameservice")) {
+      return "\t[-nameservice enable | disable <nameservice>]";
+    } else if (cmd.equals("-getDisabledNameservices")) {
+      return "\t[-getDisabledNameservices]";
+    }
+    return getUsage(null);
+  }
+
-        printUsage();
+        printUsage(cmd);
-        printUsage();
+        printUsage(cmd);
-    } else if ("-rm".equalsIgnoreCase(cmd)) {
+    } else if ("-rm".equals(cmd)) {
-        printUsage();
+        printUsage(cmd);
-    } else if ("-setQuota".equalsIgnoreCase(cmd)) {
+    } else if ("-setQuota".equals(cmd)) {
-        printUsage();
+        printUsage(cmd);
-    } else if ("-clrQuota".equalsIgnoreCase(cmd)) {
+    } else if ("-clrQuota".equals(cmd)) {
-        printUsage();
+        printUsage(cmd);
-    } else if ("-safemode".equalsIgnoreCase(cmd)) {
+    } else if ("-safemode".equals(cmd)) {
-        printUsage();
+        printUsage(cmd);
-    } else if ("-nameservice".equalsIgnoreCase(cmd)) {
+    } else if ("-nameservice".equals(cmd)) {
-        printUsage();
+        printUsage(cmd);
-        printUsage();
-        return exitCode;
+        throw new IllegalArgumentException("Unknown Command: " + cmd);
-      printUsage();
+      printUsage(cmd);

INS31 INS31 INS31 MOV29 MOV83 MOV39 MOV42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS44 MOV8 INS60 INS21 INS43 INS42 INS60 MOV21 INS42 INS43 INS42 INS25 INS25 INS41 MOV25 MOV43 INS59 INS32 INS42 INS43 INS59 INS42 INS27 INS8 INS32 INS8 INS25 INS32 MOV32 MOV8 INS25 INS42 INS32 INS40 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS60 INS60 INS21 INS24 INS41 INS42 INS42 INS45 INS41 INS32 INS8 INS25 INS42 INS33 MOV32 MOV8 INS25 INS42 INS33 INS42 INS42 INS5 INS59 INS43 INS59 INS32 INS58 INS27 INS37 INS8 INS32 INS27 INS42 INS42 INS45 INS41 INS32 INS8 INS25 MOV27 INS32 MOV8 INS25 INS43 INS85 INS42 INS4 INS42 MOV42 INS14 INS42 INS42 INS45 INS39 INS59 INS42 INS40 INS42 INS21 INS25 INS42 INS42 MOV45 MOV45 UPD45 MOV45 INS27 INS42 INS42 INS45 INS41 INS32 INS8 INS25 MOV27 INS45 INS42 INS42 INS32 MOV8 INS25 INS42 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS43 INS42 INS34 INS32 INS27 INS8 UPD45 MOV45 INS45 MOV45 UPD45 MOV45 INS45 INS42 INS42 INS45 INS41 INS32 INS8 INS25 MOV27 INS45 INS42 INS42 MOV32 MOV8 MOV25 INS42 INS42 INS42 INS42 INS32 INS27 INS40 INS21 INS45 INS42 INS42 INS45 INS41 INS32 INS8 INS25 INS42 MOV27 UPD42 MOV8 INS42 INS2 INS42 INS34 INS32 INS27 INS42 INS42 INS45 INS41 INS32 INS8 INS25 INS42 MOV27 UPD42 INS42 INS42 INS42 INS42 INS45 MOV45 UPD45 MOV45 INS45 INS42 INS42 INS45 INS41 INS32 INS8 INS25 INS42 MOV27 UPD42 INS45 INS42 INS42 INS45 INS41 INS32 INS8 INS42 INS45 INS42 INS42 INS45 INS41 INS42 INS45 INS42 INS42 INS53 INS14 INS43 INS27 INS42 INS45 INS42 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL27 DEL59 DEL60 DEL31 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL25 DEL25 DEL25 DEL25 DEL42 DEL32 DEL21 DEL42 DEL41