svn merge --change -1363454 for reverting MAPREDUCE-4423

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1363935 13f79535-47bb-0310-9956-ffa450edef68

-import com.google.common.annotations.VisibleForTesting;
-
+@SuppressWarnings({"deprecation"})
-  @VisibleForTesting
-  protected HttpURLConnection openConnection(URL url) throws IOException {
-    return (HttpURLConnection)url.openConnection();
-  }
-  
-  protected void copyFromHost(MapHost host) throws IOException {
+  private void copyFromHost(MapHost host) throws IOException {
-    if(LOG.isDebugEnabled()) {
-      LOG.debug("Fetcher " + id + " going to fetch from " + host);
-      for (TaskAttemptID tmp: maps) {
-        LOG.debug(tmp);
-      }
+    LOG.debug("Fetcher " + id + " going to fetch from " + host);
+    for (TaskAttemptID tmp: maps) {
+      LOG.debug(tmp);
-      HttpURLConnection connection = openConnection(url);
+      HttpURLConnection connection = (HttpURLConnection)url.openConnection();
-      // On any error, faildTasks is not null and we exit
-      // after putting back the remaining maps to the 
-      // yet_to_be_fetched list and marking the failed tasks.
-      TaskAttemptID[] failedTasks = null;
-      while (!remaining.isEmpty() && failedTasks == null) {
-        failedTasks = copyMapOutput(host, input, remaining);
-      }
-      
-      if(failedTasks != null) {
-        for(TaskAttemptID left: failedTasks) {
-          scheduler.copyFailed(left, host, true);
-        }
+      // On any error, good becomes false and we exit after putting back
+      // the remaining maps to the yet_to_be_fetched list
+      boolean good = true;
+      while (!remaining.isEmpty() && good) {
+        good = copyMapOutput(host, input, remaining);
-      if (failedTasks == null && !remaining.isEmpty()) {
+      if (good && !remaining.isEmpty()) {
-  }
+      
+   }
-  private TaskAttemptID[] copyMapOutput(MapHost host,
+  private boolean copyMapOutput(MapHost host,
-        //Don't know which one was bad, so consider all of them as bad
-        return remaining.toArray(new TaskAttemptID[remaining.size()]);
+        return false;
-        return new TaskAttemptID[] {mapId};
+        return false;
-        return new TaskAttemptID[] {mapId};
+        return false;
-      return null;
+      return true;
-        if(mapId == null) {
-          return remaining.toArray(new TaskAttemptID[remaining.size()]);
-        } else {
-          return new TaskAttemptID[] {mapId};
-        }
+        return false;
+      scheduler.copyFailed(mapId, host, true);
-      return new TaskAttemptID[] {mapId};
+      return false;

INS79 INS42 INS42 INS4 UPD83 INS39 INS45 MOV21 MOV70 INS60 MOV43 INS39 INS59 INS9 INS21 INS41 MOV11 INS42 INS9 UPD42 MOV42 UPD42 MOV42 INS32 INS9 INS9 INS9 MOV41 INS42 INS42 INS42 INS42 INS9 UPD42 INS9 INS9 DEL40 DEL26 DEL42 DEL42 DEL78 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL41 DEL8 DEL31 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL43 DEL85 DEL5 DEL42 DEL33 DEL59 DEL60 DEL33 DEL27 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL9 DEL32 DEL21 DEL8 DEL70 DEL8 DEL25 DEL33 DEL27 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL32 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL33 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL32 DEL42 DEL33 DEL27 DEL8 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL41 DEL8 DEL25 DEL42 DEL43 DEL85 DEL5 DEL42 DEL4 DEL3 DEL41