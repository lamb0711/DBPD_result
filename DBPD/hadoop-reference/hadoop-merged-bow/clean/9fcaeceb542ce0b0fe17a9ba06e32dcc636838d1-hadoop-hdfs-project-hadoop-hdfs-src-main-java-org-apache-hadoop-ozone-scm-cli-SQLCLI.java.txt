HDFS-11756. Ozone : add DEBUG CLI support of blockDB file. Contributed by Chen Liang

+import org.apache.hadoop.hdfs.DFSUtilClient;
+import static org.apache.hadoop.ozone.OzoneConsts.BLOCK_DB;
-          "containerName TEXT PRIMARY KEY NOT NULL , " +
+          "containerName TEXT PRIMARY KEY NOT NULL, " +
+  // for block.db
+  private static final String CREATE_BLOCK_CONTAINER =
+      "CREATE TABLE blockContainer (" +
+          "blockKey TEXT PRIMARY KEY NOT NULL, " +
+          "containerName TEXT NOT NULL)";
+  private static final String INSERT_BLOCK_CONTAINER =
+      "INSERT INTO blockContainer (blockKey, containerName) " +
+          "VALUES (\"%s\", \"%s\")";
+    } else if (dbName.toString().equals(BLOCK_DB)) {
+      LOG.info("Converting block DB");
+      convertBlockDB(dbPath, outPath);
+   * @param outPath path to output sqlite
+  /**
+   * Converts block.db to sqlite. This is rather simple db, the schema has only
+   * one table:
+   *
+   * blockContainer
+   * --------------------------
+   * blockKey*  | containerName
+   * --------------------------
+   *
+   * @param dbPath path to container db.
+   * @param outPath path to output sqlite
+   * @throws IOException throws exception.
+   */
+  private void convertBlockDB(Path dbPath, Path outPath) throws Exception {
+    LOG.info("Create tables for sql block db.");
+    File dbFile = dbPath.toFile();
+    org.iq80.leveldb.Options dbOptions = new org.iq80.leveldb.Options();
+    LevelDBStore dbStore = new LevelDBStore(dbFile, dbOptions);
+
+    Connection conn = connectDB(outPath.toString());
+    executeSQL(conn, CREATE_BLOCK_CONTAINER);
+
+    DBIterator iter = dbStore.getIterator();
+    iter.seekToFirst();
+    while (iter.hasNext()) {
+      Map.Entry<byte[], byte[]> entry = iter.next();
+      String blockKey = DFSUtilClient.bytes2String(entry.getKey());
+      String containerName = DFSUtilClient.bytes2String(entry.getValue());
+      String insertBlockContainer = String.format(
+          INSERT_BLOCK_CONTAINER, blockKey, containerName);
+      executeSQL(conn, insertBlockContainer);
+    }
+    closeDB(conn);
+    dbStore.close();
+  }
+

INS26 INS26 INS40 INS40 INS23 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS42 INS42 INS27 INS42 INS42 INS27 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS42 INS21 INS60 INS60 INS60 INS60 INS21 INS60 INS21 INS61 INS21 INS21 UPD45 INS45 INS45 INS45 INS45 INS45 INS25 INS42 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS43 INS59 INS32 INS32 INS8 INS32 INS32 INS32 INS8 MOV8 INS42 INS42 INS45 INS42 INS42 INS32 INS40 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS60 INS60 INS60 INS60 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS21 INS21 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS74 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS42 INS42 INS32 INS32 INS40 INS42 INS42 INS42 INS43 INS5 INS5 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS40 INS39 INS85 INS39 INS85 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42