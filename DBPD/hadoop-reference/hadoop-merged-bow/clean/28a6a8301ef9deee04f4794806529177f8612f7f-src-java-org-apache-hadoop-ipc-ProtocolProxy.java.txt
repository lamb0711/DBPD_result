Revert HADOOP-7227 from r1098792 since it broke HDFS and MR builds.

( svn merge -c -1098792 )


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1098840 13f79535-47bb-0310-9956-ffa450edef68

-  final private boolean supportServerMethodCheck;
-  private boolean serverMethodsFetched = false;
-   * @param supportServerMethodCheck If false proxy will never fetch server
-   *        methods and isMethodSupported will always return true. If true,
-   *        server methods will be fetched for the first call to 
-   *        isMethodSupported. 
+   * @param serverMethods a list of hash codes of the methods that it supports
+   * @throws ClassNotFoundException 
-  public ProtocolProxy(Class<T> protocol, T proxy,
-      boolean supportServerMethodCheck) {
+  public ProtocolProxy(Class<T> protocol, T proxy, int[] serverMethods) {
-    this.supportServerMethodCheck = supportServerMethodCheck;
-  }
-  
-  private void fetchServerMethods(Method method) throws IOException {
-    long clientVersion;
-    try {
-      clientVersion = method.getDeclaringClass().getField("versionID").getLong(
-          method.getDeclaringClass());
-    } catch (NoSuchFieldException ex) {
-      throw new RuntimeException(ex);
-    } catch (IllegalAccessException ex) {
-      throw new RuntimeException(ex);
-    }
-    int clientMethodsHash = ProtocolSignature.getFingerprint(method
-        .getDeclaringClass().getMethods());
-    ProtocolSignature serverInfo = ((VersionedProtocol) proxy)
-        .getProtocolSignature(protocol.getName(), clientVersion,
-            clientMethodsHash);
-    long serverVersion = serverInfo.getVersion();
-    if (serverVersion != clientVersion) {
-      throw new RPC.VersionMismatch(protocol.getName(), clientVersion,
-          serverVersion);
-    }
-    int[] serverMethodsCodes = serverInfo.getMethods();
-    if (serverMethodsCodes != null) {
-      serverMethods = new HashSet<Integer>(serverMethodsCodes.length);
-      for (int m : serverMethodsCodes) {
-        this.serverMethods.add(Integer.valueOf(m));
+    if (serverMethods != null) {
+      this.serverMethods = new HashSet<Integer>(serverMethods.length);
+      for (int method : serverMethods) {
+        this.serverMethods.add(Integer.valueOf(method));
-    serverMethodsFetched = true;
-  public synchronized boolean isMethodSupported(String methodName,
+  public boolean isMethodSupported(String methodName,
-    if (!supportServerMethodCheck) {
+    if (serverMethods == null) { // client & server have the same protocol
-    if (!serverMethodsFetched) {
-      fetchServerMethods(method);
-    }
-    if (serverMethods == null) { // client & server have the same protocol
-      return true;
-    }

INS8 MOV25 INS65 MOV5 UPD42 MOV21 MOV21 INS25 UPD42 UPD66 INS42 INS66 INS27 INS8 INS42 INS33 MOV21 INS70 INS44 INS42 INS8 INS14 INS39 INS42 INS21 UPD42 MOV74 INS40 INS32 MOV22 INS42 INS32 INS42 INS42 INS42 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL66 DEL66 DEL66 DEL39 DEL42 DEL8 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL39 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL39 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL27 DEL40 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL40 DEL14 DEL7 DEL21 DEL39 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL8 DEL25 DEL42 DEL9 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL38 DEL9 DEL41 DEL8 DEL25 DEL42 DEL38 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25