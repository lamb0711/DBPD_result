MAPREDUCE-4089. Hung Tasks never time out. (Robert Evans via tgraves)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308531 13f79535-47bb-0310-9956-ffa450edef68

-
+  
+  private static class ReportTime {
+    private long lastPing;
+    private long lastProgress;
+    
+    public ReportTime(long time) {
+      setLastProgress(time);
+    }
+    
+    public synchronized void setLastPing(long time) {
+      lastPing = time;
+    }
+    
+    public synchronized void setLastProgress(long time) {
+      lastProgress = time;
+      lastPing = time;
+    }
+    
+    public synchronized long getLastPing() {
+      return lastPing;
+    }
+    
+    public synchronized long getLastProgress() {
+      return lastProgress;
+    }
+  }
+  
-
+  private static final int PING_TIMEOUT = 5 * 60 * 1000;
+  
-
-  private ConcurrentMap<TaskAttemptId, Long> runningAttempts;
+  
+  private ConcurrentMap<TaskAttemptId, ReportTime> runningAttempts;
-      new ConcurrentHashMap<TaskAttemptId, Long>(16, 0.75f, numThreads);
+      new ConcurrentHashMap<TaskAttemptId, ReportTime>(16, 0.75f, numThreads);
-  public void receivedPing(TaskAttemptId attemptID) {
+  public void progressing(TaskAttemptId attemptID) {
-    runningAttempts.replace(attemptID, clock.getTime());
+    ReportTime time = runningAttempts.get(attemptID);
+    if(time != null) {
+      time.setLastProgress(clock.getTime());
+    }
+  public void pinged(TaskAttemptId attemptID) {
+    //only put for the registered attempts
+      //TODO throw an exception if the task isn't registered.
+      ReportTime time = runningAttempts.get(attemptID);
+      if(time != null) {
+        time.setLastPing(clock.getTime());
+      }
+    }
+  
-    runningAttempts.put(attemptID, clock.getTime());
+    runningAttempts.put(attemptID, new ReportTime(clock.getTime()));
-        Iterator<Map.Entry<TaskAttemptId, Long>> iterator =
+        Iterator<Map.Entry<TaskAttemptId, ReportTime>> iterator =
-          Map.Entry<TaskAttemptId, Long> entry = iterator.next();
-          if (currentTime > entry.getValue() + taskTimeOut) {
-
-            //In case the iterator isn't picking up the latest.
-            // Extra lookup outside of the iterator - but only if the task
-            // is considered to be timed out.
-            Long taskTime = runningAttempts.get(entry.getKey());
-            if (taskTime != null && currentTime > taskTime + taskTimeOut) {
-              // task is lost, remove from the list and raise lost event
-              iterator.remove();
-              eventHandler.handle(new TaskAttemptDiagnosticsUpdateEvent(entry
-                  .getKey(), "AttemptID:" + entry.getKey().toString()
-                  + " Timed out after " + taskTimeOut / 1000 + " secs"));
-              eventHandler.handle(new TaskAttemptEvent(entry.getKey(),
-                  TaskAttemptEventType.TA_TIMED_OUT));
-            }
-
+          Map.Entry<TaskAttemptId, ReportTime> entry = iterator.next();
+          boolean taskTimedOut = (taskTimeOut > 0) && 
+              (currentTime > (entry.getValue().getLastProgress() + taskTimeOut));
+          boolean pingTimedOut =
+              (currentTime > (entry.getValue().getLastPing() + PING_TIMEOUT));
+              
+          if(taskTimedOut || pingTimedOut) {
+            // task is lost, remove from the list and raise lost event
+            iterator.remove();
+            eventHandler.handle(new TaskAttemptDiagnosticsUpdateEvent(entry
+                .getKey(), "AttemptID:" + entry.getKey().toString()
+                + " Timed out after " + taskTimeOut / 1000 + " secs"));
+            eventHandler.handle(new TaskAttemptEvent(entry.getKey(),
+                TaskAttemptEventType.TA_TIMED_OUT));

MOV31 INS55 INS23 INS31 INS83 INS83 INS42 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS83 INS83 INS83 INS39 INS59 UPD74 INS42 INS8 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS42 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS39 INS42 INS8 INS83 INS83 INS39 INS42 INS8 INS42 INS27 UPD43 INS60 INS25 INS60 INS25 INS43 INS42 INS21 MOV8 INS42 INS42 INS39 INS42 INS21 INS39 INS42 INS21 INS39 INS42 INS21 INS21 INS41 INS41 INS34 INS34 INS34 UPD42 INS43 INS59 INS27 MOV8 INS43 INS59 INS27 MOV8 INS42 INS32 INS32 INS7 INS7 INS7 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS42 INS42 INS32 INS42 INS33 INS42 INS42 INS42 INS14 MOV27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD74 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 MOV60 MOV60 INS61 MOV54 UPD43 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS42 UPD74 MOV32 MOV8 UPD42 INS74 INS60 INS60 INS60 MOV43 MOV43 INS43 UPD74 MOV74 MOV59 INS39 INS59 INS39 INS59 INS27 INS42 UPD43 INS42 INS27 INS42 INS36 UPD42 MOV42 UPD42 MOV42 UPD42 INS36 INS36 INS27 INS27 MOV27 INS42 INS36 INS42 INS34 INS36 INS27 MOV27 INS32 INS42 INS32 MOV32 INS42 MOV32 INS42 UPD42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL27 DEL27 DEL27 DEL42 DEL43 DEL74 DEL60 DEL25 DEL61 DEL8