YARN-3463. Integrate OrderingPolicy Framework with CapacityScheduler. (Craig Welch via wangda)

+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.policy.*;
-  Set<FiCaSchedulerApp> activeApplications;
+  private OrderingPolicy<FiCaSchedulerApp> 
+    orderingPolicy = new FifoOrderingPolicy<FiCaSchedulerApp>();
+  
-    this.activeApplications = new TreeSet<FiCaSchedulerApp>(applicationComparator);
+    
+    setOrderingPolicy(conf.<FiCaSchedulerApp>getOrderingPolicy(getQueuePath()));
+    
-    return activeApplications.size();
+    return orderingPolicy.getNumSchedulableEntities();
-      activeApplications.add(application);
+      orderingPolicy.addSchedulableEntity(application);
-    boolean wasActive = activeApplications.remove(application);
+    boolean wasActive =
+      orderingPolicy.removeSchedulableEntity(application);
-        + " #applications=" + activeApplications.size());
+        + " #applications=" + 
+        orderingPolicy.getNumSchedulableEntities());
-    // Try to assign containers to applications in order
-    for (FiCaSchedulerApp application : activeApplications) {
-      
+    for (Iterator<FiCaSchedulerApp> assignmentIterator =
+        orderingPolicy.getAssignmentIterator();
+        assignmentIterator.hasNext();) {
+      FiCaSchedulerApp application = assignmentIterator.next();
+            
+      // Inform the ordering policy
+      orderingPolicy.containerAllocated(application, allocatedContainer);
+          
+          
+          // Inform the ordering policy
+          orderingPolicy.containerReleased(application, rmContainer);
+          
-    for (FiCaSchedulerApp application : activeApplications) {
+    for (FiCaSchedulerApp application :
+      orderingPolicy.getSchedulableEntities()) {
-
+  
-  public Set<FiCaSchedulerApp> getApplications() {
-    // need to access the list of apps from the preemption monitor
-    return activeApplications;
+  public Collection<FiCaSchedulerApp> getApplications() {
+    return orderingPolicy.getSchedulableEntities();
-    for (FiCaSchedulerApp f : activeApplications) {
+    for (FiCaSchedulerApp f : 
+      orderingPolicy.getSchedulableEntities()) {
-    for (FiCaSchedulerApp app : activeApplications) {
+    for (FiCaSchedulerApp app : 
+      orderingPolicy.getSchedulableEntities()) {
+  public synchronized OrderingPolicy<FiCaSchedulerApp>
+      getOrderingPolicy() {
+    return orderingPolicy;
+  }
+  
+  public synchronized void setOrderingPolicy(
+      OrderingPolicy<FiCaSchedulerApp> orderingPolicy) {
+   orderingPolicy.addAllSchedulableEntities(
+     this.orderingPolicy.getSchedulableEntities()
+     );
+    this.orderingPolicy = orderingPolicy;
+  }
+  

INS26 MOV23 INS40 INS31 INS31 INS83 UPD74 UPD74 INS83 INS83 INS74 INS42 INS8 INS83 INS83 INS39 INS42 INS44 INS8 UPD43 UPD42 INS14 INS21 INS24 UPD43 INS43 INS43 INS41 INS74 INS42 INS21 INS21 UPD42 INS74 INS32 INS58 INS32 MOV8 INS32 UPD42 INS32 INS32 INS32 INS42 INS42 INS42 INS43 INS43 INS32 INS7 INS43 INS43 INS42 INS32 UPD42 UPD42 INS74 INS59 INS42 INS42 INS60 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS22 INS42 INS42 INS42 INS42 MOV43 INS42 INS32 UPD42 UPD42 INS43 INS43 INS42 INS32 INS43 INS59 INS32 INS22 INS42 INS52 INS42 INS42 UPD42 UPD42 INS42 MOV42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 UPD42 UPD42 INS21 INS32 INS42 INS42 INS42 INS42 DEL52 DEL42 DEL22 DEL42 DEL43 DEL74 DEL42 DEL14 DEL7 DEL21 DEL43 DEL42 DEL44 DEL42 DEL70 DEL42 DEL42 DEL42 DEL42