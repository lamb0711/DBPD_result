Merge r1569890 through r1570083 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1570084 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Iterator;
+import org.apache.hadoop.yarn.api.records.NMToken;
-  public synchronized List<Container> pullNewlyAllocatedContainers() {
-    List<Container> returnContainerList = new ArrayList<Container>(
-        newlyAllocatedContainers.size());
-    for (RMContainer rmContainer : newlyAllocatedContainers) {
-      rmContainer.handle(new RMContainerEvent(rmContainer.getContainerId(),
-          RMContainerEventType.ACQUIRED));
-      Container container = rmContainer.getContainer();
-      rmContainer.getContainer().setContainerToken(
-        rmContext.getContainerTokenSecretManager().createContainerToken(
-          rmContainer.getContainerId(), container.getNodeId(), getUser(),
-          container.getResource()));
-      returnContainerList.add(rmContainer.getContainer());
+  public static class ContainersAndNMTokensAllocation {
+    List<Container> containerList;
+    List<NMToken> nmTokenList;
+
+    public ContainersAndNMTokensAllocation(List<Container> containerList,
+        List<NMToken> nmTokenList) {
+      this.containerList = containerList;
+      this.nmTokenList = nmTokenList;
-    newlyAllocatedContainers.clear();
-    return returnContainerList;
+
+    public List<Container> getContainerList() {
+      return containerList;
+    }
+
+    public List<NMToken> getNMTokenList() {
+      return nmTokenList;
+    }
+  }
+
+  // Create container token and NMToken altogether, if either of them fails for
+  // some reason like DNS unavailable, do not return this container and keep it
+  // in the newlyAllocatedContainers waiting to be refetched.
+  public synchronized ContainersAndNMTokensAllocation
+      pullNewlyAllocatedContainersAndNMTokens() {
+    List<Container> returnContainerList =
+        new ArrayList<Container>(newlyAllocatedContainers.size());
+    List<NMToken> nmTokens = new ArrayList<NMToken>();
+    for (Iterator<RMContainer> i = newlyAllocatedContainers.iterator(); i
+      .hasNext();) {
+      RMContainer rmContainer = i.next();
+      Container container = rmContainer.getContainer();
+      try {
+        // create container token and NMToken altogether.
+        container.setContainerToken(rmContext.getContainerTokenSecretManager()
+          .createContainerToken(container.getId(), container.getNodeId(),
+            getUser(), container.getResource()));
+        NMToken nmToken =
+            rmContext.getNMTokenSecretManager().createAndGetNMToken(getUser(),
+              getApplicationAttemptId(), container);
+        if (nmToken != null) {
+          nmTokens.add(nmToken);
+        }
+      } catch (IllegalArgumentException e) {
+        // DNS might be down, skip returning this container.
+        LOG.error(
+          "Error trying to assign container token to allocated container "
+              + container.getId(), e);
+        continue;
+      }
+      returnContainerList.add(container);
+      i.remove();
+      rmContainer.handle(new RMContainerEvent(rmContainer.getContainerId(),
+        RMContainerEventType.ACQUIRED));
+    }
+    return new ContainersAndNMTokensAllocation(returnContainerList, nmTokens);

INS26 INS26 INS40 INS40 INS55 INS83 INS83 INS42 INS23 INS23 INS31 INS31 INS31 INS43 UPD42 INS74 INS59 INS74 INS59 INS83 INS42 INS44 INS44 INS8 INS83 MOV74 INS42 INS8 INS83 INS74 INS42 INS8 INS42 INS60 INS24 INS43 INS43 INS42 INS43 INS43 INS42 INS74 INS42 INS74 INS42 INS21 INS21 INS41 INS43 INS43 INS41 INS74 INS59 INS58 INS32 MOV8 MOV21 INS14 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS43 INS7 INS7 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS14 INS74 INS59 INS42 INS42 INS60 INS54 INS21 INS21 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS22 INS42 INS22 INS42 INS42 INS42 INS74 INS43 INS43 INS42 INS32 MOV43 INS59 INS8 INS12 INS32 INS32 INS42 INS52 INS42 INS52 INS42 INS43 INS43 INS42 INS42 MOV42 UPD42 MOV42 INS42 INS32 MOV21 INS60 INS25 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS43 INS42 MOV21 INS18 UPD42 MOV42 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS32 INS42 INS32 INS32 INS42 INS32 UPD42 UPD42 INS27 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 UPD42 MOV42 UPD42 MOV42 DEL42 DEL32 DEL32 DEL42 DEL44 DEL42 DEL70 DEL32 DEL21 DEL42