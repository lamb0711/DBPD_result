Merge r1555021 through r1565516 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1565519 13f79535-47bb-0310-9956-ffa450edef68

+import com.google.common.base.CharMatcher;
+import org.apache.hadoop.yarn.conf.YarnConfiguration;
+import java.util.HashSet;
+import java.util.Set;
+
+  private Set<String> applicationTags = null;
+    if (this.applicationTags != null && !this.applicationTags.isEmpty()) {
+      builder.addAllApplicationTags(this.applicationTags);
+    }
-  
+
+  private void initApplicationTags() {
+    if (this.applicationTags != null) {
+      return;
+    }
+    ApplicationSubmissionContextProtoOrBuilder p = viaProto ? proto : builder;
+    this.applicationTags = new HashSet<String>();
+    this.applicationTags.addAll(p.getApplicationTagsList());
+  }
+
+  @Override
+  public Set<String> getApplicationTags() {
+    initApplicationTags();
+    return this.applicationTags;
+  }
+
+  private void checkTags(Set<String> tags) {
+    if (tags.size() > YarnConfiguration.APPLICATION_MAX_TAGS) {
+      throw new IllegalArgumentException("Too many applicationTags, a maximum of only "
+          + YarnConfiguration.APPLICATION_MAX_TAGS + " are allowed!");
+    }
+    for (String tag : tags) {
+      if (tag.length() > YarnConfiguration.APPLICATION_MAX_TAG_LENGTH) {
+        throw new IllegalArgumentException("Tag " + tag + " is too long, " +
+            "maximum allowed length of a tag is " +
+            YarnConfiguration.APPLICATION_MAX_TAG_LENGTH);
+      }
+      if (!CharMatcher.ASCII.matchesAllOf(tag)) {
+        throw new IllegalArgumentException("A tag can only have ASCII " +
+            "characters! Invalid tag - " + tag);
+      }
+    }
+  }
+
+  @Override
+  public void setApplicationTags(Set<String> tags) {
+    maybeInitBuilder();
+    if (tags == null || tags.isEmpty()) {
+      builder.clearApplicationTags();
+      this.applicationTags = null;
+      return;
+    }
+    checkTags(tags);
+    // Convert applicationTags to lower case and add
+    this.applicationTags = new HashSet<String>();
+    for (String tag : tags) {
+      this.applicationTags.add(tag.toLowerCase());
+    }
+  }
+

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS31 INS31 INS31 INS31 INS83 INS74 INS59 INS83 INS39 INS42 INS8 INS78 INS83 INS74 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS43 INS43 INS42 INS33 INS25 INS25 INS60 INS21 INS21 INS42 INS43 INS43 INS21 INS41 INS74 INS42 INS25 INS70 INS42 INS74 INS42 INS21 INS25 INS21 INS21 INS70 INS42 INS42 INS27 INS8 INS27 INS8 INS43 INS59 INS7 INS32 INS42 INS42 INS32 INS22 INS43 INS43 INS27 INS8 INS44 INS42 INS8 INS43 INS43 INS32 INS27 INS8 INS32 INS7 INS44 INS42 INS8 INS27 INS38 INS21 INS22 INS33 INS41 INS42 INS42 INS16 INS22 INS14 INS22 INS42 INS32 INS42 INS52 INS42 INS42 INS42 INS32 INS40 INS53 INS43 INS42 INS25 INS25 INS42 INS42 INS42 INS27 INS32 INS21 INS21 INS41 INS42 INS42 INS22 INS14 INS43 INS42 INS21 INS22 INS33 INS32 INS32 INS52 INS42 INS42 INS42 INS42 INS52 INS42 INS74 INS52 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS27 INS8 INS38 INS8 INS42 INS33 INS42 INS42 INS32 INS7 INS52 INS42 INS74 INS42 INS32 INS52 INS42 INS22 INS42 INS42 INS42 INS22 INS43 INS43 INS43 INS27 INS32 INS40 INS53 INS32 INS53 INS42 INS42 INS22 INS33 INS43 INS43 INS22 INS42 INS32 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS45 INS40 INS45 INS42 INS42 INS14 INS40 INS42 INS42 INS14 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS43 INS27 INS43 INS27 INS42 INS45 INS42 INS45 INS45 INS40 INS42 INS45 INS45 INS42