merge changes from trunk to HDFS-4949 branch

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1524865 13f79535-47bb-0310-9956-ffa450edef68

+
+  public DelegationTokenSecretManager(long delegationKeyUpdateInterval,
+      long delegationTokenMaxLifetime, long delegationTokenRenewInterval,
+      long delegationTokenRemoverScanInterval, FSNamesystem namesystem) {
+    this(delegationKeyUpdateInterval, delegationTokenMaxLifetime,
+        delegationTokenRenewInterval, delegationTokenRemoverScanInterval, false,
+        namesystem);
+  }
+
+   * @param storeTokenTrackingId whether to store the token's tracking id
-      long delegationTokenRemoverScanInterval, FSNamesystem namesystem) {
+      long delegationTokenRemoverScanInterval, boolean storeTokenTrackingId,
+      FSNamesystem namesystem) {
+    this.storeTokenTrackingId = storeTokenTrackingId;
-  @Override //SecretManager
-  public void checkAvailableForRead() throws StandbyException {
-    namesystem.checkOperation(OperationCategory.READ);
-    namesystem.readLock();
+  @Override
+  public byte[] retrievePassword(
+      DelegationTokenIdentifier identifier) throws InvalidToken {
+      // this check introduces inconsistency in the authentication to a
+      // HA standby NN.  non-token auths are allowed into the namespace which
+      // decides whether to throw a StandbyException.  tokens are a bit
+      // different in that a standby may be behind and thus not yet know
+      // of all tokens issued by the active NN.  the following check does
+      // not allow ANY token auth, however it should allow known tokens in
-    } finally {
-      namesystem.readUnlock();
+    } catch (StandbyException se) {
+      // FIXME: this is a hack to get around changing method signatures by
+      // tunneling a non-InvalidToken exception as the cause which the
+      // RPC server will unwrap before returning to the client
+      InvalidToken wrappedStandby = new InvalidToken("StandbyException");
+      wrappedStandby.initCause(se);
+      throw wrappedStandby;
+    return super.retrievePassword(identifier);
-
+  
-          password));
+          password, getTrackingIdIfEnabled(identifier)));
-          password));
+          password, getTrackingIdIfEnabled(identifier)));

INS31 INS31 MOV83 INS42 INS44 INS44 INS44 INS44 INS44 INS8 INS44 MOV78 INS83 INS5 INS42 INS44 INS43 INS8 INS39 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS43 INS42 INS17 INS65 INS39 INS42 INS21 INS39 INS85 INS43 INS42 INS42 MOV54 INS41 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS66 INS7 INS42 INS12 INS48 INS22 INS42 INS44 INS8 INS42 INS42 INS52 INS42 MOV43 INS42 INS60 MOV21 INS53 INS43 INS59 INS42 INS42 INS42 INS14 UPD42 UPD42 INS42 INS32 INS32 INS43 INS45 INS42 INS42 INS42 INS42 INS42 DEL8 DEL39 DEL42 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31