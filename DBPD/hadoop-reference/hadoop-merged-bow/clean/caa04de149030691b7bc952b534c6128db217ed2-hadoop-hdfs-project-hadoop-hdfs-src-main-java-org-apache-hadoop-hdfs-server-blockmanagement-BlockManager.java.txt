HDFS-8980. Remove unnecessary block replacement in INodeFile. Contributed by Jing Zhao.

-    if(countNodes(lastBlock).liveReplicas() >= minReplication)
-      completeBlock(bc, bc.numBlocks()-1, false);
+    if (countNodes(lastBlock).liveReplicas() >= minReplication) {
+      completeBlock(lastBlock, false);
+    }
-   * @param bc file
-   * @param blkIndex  block index in the file
-  private BlockInfo completeBlock(final BlockCollection bc,
-      final int blkIndex, boolean force) throws IOException {
-    if(blkIndex < 0)
-      return null;
-    BlockInfo curBlock = bc.getBlocks()[blkIndex];
-    if(curBlock.isComplete())
-      return curBlock;
+  private void completeBlock(BlockInfo curBlock, boolean force)
+      throws IOException {
+    if (curBlock.isComplete()) {
+      return;
+    }
-    if (!force && numNodes < minReplication)
-      throw new IOException("Cannot complete block: " +
-          "block does not satisfy minimal replication requirement.");
-    if(!force && curBlock.getBlockUCState() != BlockUCState.COMMITTED)
+    if (!force && numNodes < minReplication) {
+      throw new IOException("Cannot complete block: "
+          + "block does not satisfy minimal replication requirement.");
+    }
+    if (!force && curBlock.getBlockUCState() != BlockUCState.COMMITTED) {
-    BlockInfo completeBlock = curBlock.convertToCompleteBlock();
-    // replace penultimate block in file
-    bc.setBlock(blkIndex, completeBlock);
-    
+    }
+
+    curBlock.convertToCompleteBlock();
-    
-    // replace block in the blocksMap
-    return blocksMap.replaceBlock(completeBlock);
-  private BlockInfo completeBlock(final BlockCollection bc,
-      final BlockInfo block, boolean force) throws IOException {
-    BlockInfo[] fileBlocks = bc.getBlocks();
-    for(int idx = 0; idx < fileBlocks.length; idx++)
-      if(fileBlocks[idx] == block) {
-        return completeBlock(bc, idx, force);
-      }
-    return block;
-  }
-  
-  public BlockInfo forceCompleteBlock(final BlockCollection bc,
-      final BlockInfo block) throws IOException {
+  public void forceCompleteBlock(final BlockInfo block) throws IOException {
-    return completeBlock(bc, block, true);
+    completeBlock(block, true);
-  
-      completeBlock(getBlockCollection(storedBlock), storedBlock, false);
+      completeBlock(storedBlock, false);
-      storedBlock = completeBlock(bc, storedBlock, false);
+      completeBlock(storedBlock, false);

INS39 INS39 MOV43 INS42 INS21 INS8 INS8 INS8 INS8 MOV32 INS32 INS21 INS41 MOV53 MOV53 MOV42 MOV42 MOV9 MOV32 INS32 UPD42 MOV42 MOV42 MOV42 MOV42 MOV9 DEL42 DEL42 DEL32 DEL34 DEL27 DEL21 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL83 DEL39 DEL42 DEL44 DEL42 DEL34 DEL27 DEL33 DEL41 DEL25 DEL42 DEL42 DEL42 DEL32 DEL42 DEL2 DEL59 DEL60 DEL42 DEL41 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL41 DEL83 DEL42 DEL43 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL42 DEL42 DEL2 DEL42 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL24 DEL42 DEL41 DEL8 DEL31 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL32 DEL41 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL7