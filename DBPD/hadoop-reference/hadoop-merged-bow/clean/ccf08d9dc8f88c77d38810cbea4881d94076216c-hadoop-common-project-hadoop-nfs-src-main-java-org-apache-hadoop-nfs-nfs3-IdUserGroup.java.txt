Merge r1555021 through r1565516 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1565519 13f79535-47bb-0310-9956-ffa450edef68

-
-  static public class DuplicateNameOrIdException extends IOException {
-    private static final long serialVersionUID = 1L;
-
-    public DuplicateNameOrIdException(String msg) {
-      super(msg);
-    }
-  }
-  private static final String DUPLICATE_NAME_ID_DEBUG_INFO = "NFS gateway can't start with duplicate name or id on the host system.\n"
+  private static final String DUPLICATE_NAME_ID_DEBUG_INFO =
+      "NFS gateway could have problem starting with duplicate name or id on the host system.\n"
+  private static void reportDuplicateEntry(final String header,
+      final Integer key, final String value,
+      final Integer ekey, final String evalue) {    
+      LOG.warn("\n" + header + String.format(
+          "new entry (%d, %s), existing entry: (%d, %s).\n%s\n%s",
+          key, value, ekey, evalue,
+          "The new entry is to be ignored for the following reason.",
+          DUPLICATE_NAME_ID_DEBUG_INFO));
+  }
+      
-        Integer key = Integer.valueOf(nameId[1]);
-        String value = nameId[0];
+        final Integer key = Integer.valueOf(nameId[1]);
+        final String value = nameId[0];        
-          LOG.error(String.format(
-              "Got duplicate id:(%d, %s), existing entry: (%d, %s).\n%s", key,
-              value, key, map.get(key), DUPLICATE_NAME_ID_DEBUG_INFO));
-          throw new DuplicateNameOrIdException("Got duplicate id.");
+          final String prevValue = map.get(key);
+          if (value.equals(prevValue)) {
+            // silently ignore equivalent entries
+            continue;
+          }
+          reportDuplicateEntry(
+              "Got multiple names associated with the same id: ",
+              key, value, key, prevValue);           
+          continue;
-        if (map.containsValue(nameId[0])) {
-          LOG.error(String.format(
-              "Got duplicate name:(%d, %s), existing entry: (%d, %s) \n%s",
-              key, value, map.inverse().get(value), value,
-              DUPLICATE_NAME_ID_DEBUG_INFO));
-          throw new DuplicateNameOrIdException("Got duplicate name");
+        if (map.containsValue(value)) {
+          final Integer prevKey = map.inverse().get(value);
+          reportDuplicateEntry(
+              "Got multiple ids associated with the same name: ",
+              key, value, prevKey, value);
+          continue;
-        map.put(Integer.valueOf(nameId[1]), nameId[0]);
+        map.put(key, value);

INS31 INS83 INS83 INS39 INS42 MOV44 INS44 INS44 INS44 INS44 INS8 INS83 UPD42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS21 UPD45 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS27 INS45 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS45 INS42 INS83 INS83 INS60 INS25 INS21 INS18 INS42 INS60 INS21 INS18 UPD42 MOV42 UPD42 MOV42 INS83 INS43 INS59 INS32 INS8 INS32 INS83 INS43 INS59 INS32 INS42 INS42 MOV32 INS42 UPD42 MOV42 UPD42 MOV42 INS18 UPD42 MOV42 UPD45 MOV45 MOV42 MOV42 MOV42 UPD42 MOV42 INS42 INS42 MOV32 UPD42 MOV42 UPD45 MOV45 MOV42 MOV42 INS42 MOV42 DEL83 DEL83 DEL42 DEL42 DEL43 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL42 DEL42 DEL46 DEL8 DEL31 DEL55 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL45 DEL14 DEL53 DEL42 DEL34 DEL2 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL45 DEL14 DEL53 DEL42 DEL34 DEL2 DEL32 DEL42 DEL34 DEL2