YARN-7729.  Add support for setting Docker PID namespace mode.  (Contributed by Billie Rinaldi)

+ *     {@code YARN_CONTAINER_RUNTIME_DOCKER_CONTAINER_PID_NAMESPACE}
+ *     controls which PID namespace will be used by the Docker container. By
+ *     default, each Docker container has its own PID namespace. To share the
+ *     namespace of the host, the
+ *     {@code yarn.nodemanager.runtime.linux.docker.host-pid-namespace.allowed}
+ *     property must be set to {@code true}. If the host PID namespace is
+ *     allowed and this environment variable is set to {@code host}, the
+ *     Docker container will share the host's PID namespace. No other value is
+ *     allowed.
+ *   </li>
+ *   <li>
+  public static final String ENV_DOCKER_CONTAINER_PID_NAMESPACE =
+      "YARN_CONTAINER_RUNTIME_DOCKER_CONTAINER_PID_NAMESPACE";
+  @InterfaceAudience.Private
+  /**
+   * Return whether the YARN container is allowed to run using the host's PID
+   * namespace for the Docker container. For this to be allowed, the submitting
+   * user must request the feature and the feature must be enabled on the
+   * cluster.
+   *
+   * @param container the target YARN container
+   * @return whether host pid namespace is requested and allowed
+   * @throws ContainerExecutionException if host pid namespace is requested
+   * but is not allowed
+   */
+  private boolean allowHostPidNamespace(Container container)
+      throws ContainerExecutionException {
+    Map<String, String> environment = container.getLaunchContext()
+        .getEnvironment();
+    String pidNamespace = environment.get(ENV_DOCKER_CONTAINER_PID_NAMESPACE);
+
+    if (pidNamespace == null) {
+      return false;
+    }
+
+    if (!pidNamespace.equalsIgnoreCase("host")) {
+      LOG.warn("NOT requesting PID namespace. Value of " +
+          ENV_DOCKER_CONTAINER_PID_NAMESPACE + "is invalid: " + pidNamespace);
+      return false;
+    }
+
+    boolean hostPidNamespaceEnabled = conf.getBoolean(
+        YarnConfiguration.NM_DOCKER_ALLOW_HOST_PID_NAMESPACE,
+        YarnConfiguration.DEFAULT_NM_DOCKER_ALLOW_HOST_PID_NAMESPACE);
+
+    if (!hostPidNamespaceEnabled) {
+      String message = "Host pid namespace being requested but this is not "
+          + "enabled on this cluster";
+      LOG.warn(message);
+      throw new ContainerExecutionException(message);
+    }
+
+    return true;
+  }
+
+    if (allowHostPidNamespace(container)) {
+      runCommand.setPidNamespace("host");
+    }
+

INS23 INS31 MOV65 MOV65 INS78 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS65 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS66 INS65 INS40 INS42 INS42 INS45 INS65 INS65 INS65 INS65 INS43 INS42 INS42 INS60 INS60 INS25 INS25 INS60 INS25 INS41 INS25 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS74 INS59 INS43 INS59 INS27 INS8 INS38 INS8 INS39 INS59 INS38 INS8 INS9 INS32 INS8 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS41 INS32 INS21 INS41 INS42 INS32 INS42 INS60 INS21 INS53 INS42 INS42 INS21 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS45 INS32 INS9 INS42 INS42 INS40 INS40 INS43 INS59 INS32 INS14 INS32 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS45 INS45 INS42 INS45 INS42 INS45 INS45 INS42