HDFS-13610. [SBN read] Edit Tail Fast Path Part 4: Cleanup. Integration test, documentation, remove unnecessary dummy sync, minors fixups. Contributed by Erik Krogen.

-
+  private static final int INVALID_LAYOUT_VERSION = 0;
+  private static final long INVALID_TXN_ID = -1;
+
-  private int layoutVersion = Integer.MAX_VALUE;
+  private int layoutVersion = INVALID_LAYOUT_VERSION;
-   * The lowest/highest transaction IDs present in the cache. -1 if there are no
-   * transactions in the cache.
+   * The lowest/highest transaction IDs present in the cache.
+   * {@value INVALID_TXN_ID} if there are no transactions in the cache.
-    initialize(-1);
+    initialize(INVALID_TXN_ID);
+   *
-      if (lowestTxnId < 0 || requestedStartTxn < lowestTxnId) {
+      if (lowestTxnId == INVALID_TXN_ID || requestedStartTxn < lowestTxnId) {
+   *
-      }
-      if (lowestTxnId < 0 || (highestTxnId + 1) != newStartTxn) {
-        // Cache initialization step
-        if (lowestTxnId >= 0) {
-          // Cache is out of sync; clear to avoid storing noncontiguous regions
-          Journal.LOG.error(String.format("Edits cache is out of sync; " +
-                  "looked for next txn id at %d but got start txn id for " +
-                  "cache put request at %d", highestTxnId + 1, newStartTxn));
-        }
+      } else if (lowestTxnId == INVALID_TXN_ID) {
+        Journal.LOG.info("Initializing edits cache starting from txn ID " +
+            newStartTxn);
+        initialize(newStartTxn);
+      } else if (highestTxnId + 1 != newStartTxn) {
+        // Cache is out of sync; clear to avoid storing noncontiguous regions
+        Journal.LOG.error(String.format("Edits cache is out of sync; " +
+            "looked for next txn id at %d but got start txn id for " +
+            "cache put request at %d. Reinitializing at new request.",
+            highestTxnId + 1, newStartTxn));
-        initialize(-1);
+        initialize(INVALID_TXN_ID);
-                "increased for it to work properly (current capacity %d)",
+                "increased for it to work properly (current capacity %d)." +
+                "Cache is now empty.",
+   *
+   *
-    Journal.LOG.info("Updating edits cache to use layout version " +
-        newLayoutVersion + "; previously was " + layoutVersion);
+    StringBuilder logMsg = new StringBuilder()
+        .append("Updating edits cache to use layout version ")
+        .append(newLayoutVersion)
+        .append(" starting from txn ID ")
+        .append(newStartTxn);
+    if (layoutVersion != INVALID_LAYOUT_VERSION) {
+      logMsg.append("; previous version was ").append(layoutVersion)
+          .append("; old entries will be cleared.");
+    }
+    Journal.LOG.info(logMsg.toString());
+   *
-   *                        -1 if the cache is to remain empty at this time.
+   *                        This should be {@value INVALID_TXN_ID} if the cache
+   *                        is to remain empty at this time.
-    highestTxnId = -1;
+    highestTxnId = INVALID_TXN_ID; // this will be set later
+   *
-    if (lowestTxnId < 0) {
+    if (lowestTxnId == INVALID_TXN_ID) {

INS23 INS23 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 INS42 INS34 INS42 MOV38 INS42 INS60 INS25 INS21 UPD66 INS65 UPD66 INS43 INS59 INS27 INS8 INS32 INS66 INS65 INS66 UPD66 UPD27 INS66 INS42 INS42 INS42 INS32 INS42 INS42 INS21 INS40 INS42 INS32 INS66 INS42 INS42 INS25 INS32 INS42 INS42 INS32 INS42 INS42 UPD27 INS27 INS8 INS25 INS32 INS42 INS45 INS32 INS42 INS45 INS42 INS42 INS42 INS21 MOV21 INS27 INS8 INS32 INS42 INS42 INS32 INS42 INS42 INS32 MOV27 INS42 INS21 INS21 INS42 INS14 INS42 INS45 INS42 INS42 INS45 INS40 INS42 INS27 INS32 INS32 INS43 INS45 INS42 INS40 INS42 INS32 INS42 INS42 UPD45 INS45 INS42 INS42 INS42 INS27 MOV27 INS42 INS45 INS45 INS45 DEL40 DEL34 DEL42 DEL34 DEL27 DEL36 DEL42 DEL27 DEL27 DEL42 DEL34 DEL27 DEL40 DEL42 DEL42 DEL42 DEL45 DEL45 DEL45 DEL27 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL34 DEL38 DEL40 DEL42 DEL45 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL34 DEL38 DEL34