MAPREDUCE-5974. Allow specifying multiple MapOutputCollectors with fallback. (Todd Lipcon via kasha)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1619492 13f79535-47bb-0310-9956-ffa450edef68

-    MapOutputCollector<KEY, VALUE> collector
-      = (MapOutputCollector<KEY, VALUE>)
-       ReflectionUtils.newInstance(
-                        job.getClass(JobContext.MAP_OUTPUT_COLLECTOR_CLASS_ATTR,
-                        MapOutputBuffer.class, MapOutputCollector.class), job);
-    LOG.info("Map output collector class = " + collector.getClass().getName());
-                           new MapOutputCollector.Context(this, job, reporter);
-    collector.init(context);
-    return collector;
+      new MapOutputCollector.Context(this, job, reporter);
+
+    Class<?>[] collectorClasses = job.getClasses(
+      JobContext.MAP_OUTPUT_COLLECTOR_CLASS_ATTR, MapOutputBuffer.class);
+    int remainingCollectors = collectorClasses.length;
+    for (Class clazz : collectorClasses) {
+      try {
+        if (!MapOutputCollector.class.isAssignableFrom(clazz)) {
+          throw new IOException("Invalid output collector class: " + clazz.getName() +
+            " (does not implement MapOutputCollector)");
+        }
+        Class<? extends MapOutputCollector> subclazz =
+          clazz.asSubclass(MapOutputCollector.class);
+        LOG.debug("Trying map output collector class: " + subclazz.getName());
+        MapOutputCollector<KEY, VALUE> collector =
+          ReflectionUtils.newInstance(subclazz, job);
+        collector.init(context);
+        LOG.info("Map output collector class = " + collector.getClass().getName());
+        return collector;
+      } catch (Exception e) {
+        String msg = "Unable to initialize MapOutputCollector " + clazz.getName();
+        if (--remainingCollectors > 0) {
+          msg += " (" + remainingCollectors + " more collector(s) to try)";
+        }
+        LOG.warn(msg, e);
+      }
+    }
+    throw new IOException("Unable to initialize any output collector");

INS8 MOV60 INS60 INS60 INS70 INS53 INS5 INS59 INS39 INS59 INS44 INS42 INS8 INS14 INS74 INS85 INS42 INS32 INS42 INS40 INS43 INS42 INS54 INS43 INS45 INS43 INS76 INS42 INS42 INS40 MOV57 INS42 INS8 INS12 INS42 INS42 INS25 INS60 INS21 INS60 MOV21 MOV21 MOV41 INS44 INS8 INS38 INS8 INS74 INS59 INS32 MOV74 MOV59 INS43 INS42 INS60 INS25 INS21 INS32 INS53 UPD43 MOV43 INS76 INS42 INS32 INS42 INS42 INS27 INS32 INS42 INS43 INS59 INS27 INS8 INS32 INS57 INS42 INS42 INS14 UPD42 INS43 INS42 INS42 MOV57 INS45 INS32 MOV42 MOV42 UPD42 MOV42 MOV42 INS42 INS42 INS27 INS38 INS34 INS21 INS42 INS42 INS42 INS42 INS43 INS43 INS27 INS42 INS42 INS42 INS45 INS32 INS42 INS7 MOV42 UPD42 MOV42 INS45 INS32 INS45 INS42 INS42 INS42 INS27 INS42 INS42 INS45 INS42 INS45 DEL42 DEL40 DEL32 DEL32 DEL11 DEL43 DEL43 DEL74 DEL60 DEL8