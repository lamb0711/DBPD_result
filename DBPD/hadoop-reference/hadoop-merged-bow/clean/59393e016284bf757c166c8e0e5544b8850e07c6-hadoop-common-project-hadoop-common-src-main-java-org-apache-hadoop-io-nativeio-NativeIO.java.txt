Merging r1543613 through r1543709 from trunk to branch HDFS-2832

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1543710 13f79535-47bb-0310-9956-ffa450edef68

-    @VisibleForTesting
-    public static CacheTracker cacheTracker = null;
-    
-    public static interface CacheTracker {
-      public void fadvise(String identifier, long offset, long len, int flags);
+    private static CacheManipulator cacheManipulator = new CacheManipulator();
+
+    public static CacheManipulator getCacheManipulator() {
+      return cacheManipulator;
-    public static CacheManipulator cacheManipulator = new CacheManipulator();
+    public static void setCacheManipulator(CacheManipulator cacheManipulator) {
+      POSIX.cacheManipulator = cacheManipulator;
+    }
+    /**
+     * Used to manipulate the operating system cache.
+     */
+
+      public long getMemlockLimit() {
+        return NativeIO.getMemlockLimit();
+      }
+
+      public long getOperatingSystemPageSize() {
+        return NativeIO.getOperatingSystemPageSize();
+      }
+
+      public void posixFadviseIfPossible(String identifier,
+        FileDescriptor fd, long offset, long len, int flags)
+            throws NativeIOException {
+        NativeIO.POSIX.posixFadviseIfPossible(identifier, fd, offset,
+            len, flags);
+      }
+    }
+
+    /**
+     * A CacheManipulator used for testing which does not actually call mlock.
+     * This allows many tests to be run even when the operating system does not
+     * allow mlock, or only allows limited mlocking.
+     */
+    @VisibleForTesting
+    public static class NoMlockCacheManipulator extends CacheManipulator {
+      public void mlock(String identifier, ByteBuffer buffer,
+          long len) throws IOException {
+        LOG.info("mlocking " + identifier);
+      }
+
+      public long getMemlockLimit() {
+        return 1125899906842624L;
+      }
+
+      public long getOperatingSystemPageSize() {
+        return 4096;
+      }
-    public static void posixFadviseIfPossible(String identifier,
+    static void posixFadviseIfPossible(String identifier,
-      if (cacheTracker != null) {
-        cacheTracker.fadvise(identifier, offset, len, flags);
-      }
-  public static long getMemlockLimit() {
+  static long getMemlockLimit() {
-  public static long getOperatingSystemPageSize() {
+  static long getOperatingSystemPageSize() {

MOV55 INS31 INS31 UPD83 INS83 INS83 INS43 INS42 INS8 INS83 INS83 INS39 INS42 INS44 INS8 INS29 INS31 INS31 INS31 INS29 MOV78 INS42 INS43 INS31 INS31 UPD42 MOV42 INS41 INS43 INS42 INS21 INS65 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 MOV44 INS44 MOV44 INS44 MOV44 INS43 INS8 INS65 INS42 UPD42 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS42 INS42 INS7 INS66 INS41 INS41 INS43 INS42 INS39 INS42 INS42 INS21 INS66 INS66 INS66 INS43 INS42 INS43 INS42 INS42 INS21 INS41 INS41 INS40 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS32 INS34 INS34 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS45 INS42 DEL83 DEL83 DEL43 DEL42 DEL33 DEL59 DEL23 DEL42 DEL83 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL83 DEL83