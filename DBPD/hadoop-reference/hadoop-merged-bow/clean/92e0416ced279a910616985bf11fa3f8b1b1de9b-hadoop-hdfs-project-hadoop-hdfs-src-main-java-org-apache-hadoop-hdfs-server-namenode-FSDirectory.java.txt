HDFS-4727. Update inodeMap after deleting files/directories/snapshots.  Contributed by Jing Zhao


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1470756 13f79535-47bb-0310-9956-ffa450edef68

+          List<INode> removedINodes = new ArrayList<INode>();
-              dstIIP.getLatestSnapshot(), collectedBlocks).get(Quota.NAMESPACE);
-          getFSNamesystem().removePathAndBlocks(src, collectedBlocks);
+              dstIIP.getLatestSnapshot(), collectedBlocks, removedINodes).get(
+              Quota.NAMESPACE);
+          getFSNamesystem().removePathAndBlocks(src, collectedBlocks,
+              removedINodes);
+   * @param removedINodes INodes that should be removed from {@link #inodeMap}
-  boolean delete(String src, BlocksMapUpdateInfo collectedBlocks) 
-    throws IOException {
+  boolean delete(String src, BlocksMapUpdateInfo collectedBlocks,
+      List<INode> removedINodes) throws IOException {
-        filesRemoved = unprotectedDelete(inodesInPath, collectedBlocks, now);
+        filesRemoved = unprotectedDelete(inodesInPath, collectedBlocks,
+            removedINodes, now);
-    // Blocks will be deleted later by the caller of this method
-    getFSNamesystem().removePathAndBlocks(src, null);
+    // Blocks/INodes will be handled later by the caller of this method
+    getFSNamesystem().removePathAndBlocks(src, null, null);
+    List<INode> removedINodes = new ArrayList<INode>();
-    final long filesRemoved = deleteAllowed(inodesInPath, src)?
-        unprotectedDelete(inodesInPath, collectedBlocks, mtime): -1;
+    final long filesRemoved = deleteAllowed(inodesInPath, src) ? 
+        unprotectedDelete(inodesInPath, collectedBlocks, 
+            removedINodes, mtime) : -1;
-      getFSNamesystem().removePathAndBlocks(src, collectedBlocks);
+      getFSNamesystem().removePathAndBlocks(src, collectedBlocks, 
+          removedINodes);
+   * @param removedINodes inodes that should be removed from {@link #inodeMap}
-      long mtime) throws QuotaExceededException {
+      List<INode> removedINodes, long mtime) throws QuotaExceededException {
-      targetNode.destroyAndCollectBlocks(collectedBlocks);
-      remvoedAllFromInodesFromMap(targetNode);
+      targetNode.destroyAndCollectBlocks(collectedBlocks, removedINodes);
-          collectedBlocks);
+          collectedBlocks, removedINodes);
-    inodeMap.remove(last);
-  private final void removeFromInodeMap(INode inode) {
-    inodeMap.remove(inode);
-  }
-  
-  /** Remove all the inodes under given inode from the map */
-  private void remvoedAllFromInodesFromMap(INode inode) {
-    removeFromInodeMap(inode);
-    if (!inode.isDirectory()) {
-      return;
+  final void removeFromInodeMap(List<INode> inodes) {
+    if (inodes != null) {
+      for (INode inode : inodes) {
+        inodeMap.remove(inode);
+      }
-    INodeDirectory dir = (INodeDirectory) inode;
-    for (INode child : dir.getChildrenList(null)) {
-      remvoedAllFromInodesFromMap(child);
-    }
-    dir.clearChildren();
-      public void destroyAndCollectBlocks(BlocksMapUpdateInfo collectedBlocks) {
+      public void destroyAndCollectBlocks(BlocksMapUpdateInfo collectedBlocks,
+          List<INode> removedINodes) {
-          BlocksMapUpdateInfo collectedBlocks) throws QuotaExceededException {
+          BlocksMapUpdateInfo collectedBlocks, List<INode> removedINodes)
+          throws QuotaExceededException {

INS44 INS44 INS44 INS8 INS65 INS74 INS42 INS60 INS65 INS74 INS42 INS74 INS42 INS25 INS42 INS66 INS65 INS43 INS43 INS74 INS59 INS42 INS66 INS65 INS43 INS43 INS43 MOV43 INS27 INS8 INS67 INS42 INS42 INS33 INS43 INS43 INS42 INS14 INS67 INS42 INS42 INS42 INS42 INS33 INS70 INS42 INS42 INS42 INS74 INS42 MOV44 INS42 MOV8 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS44 INS44 INS60 INS74 INS42 INS74 INS42 INS74 INS59 INS42 INS43 INS43 INS43 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS43 INS43 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL83 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL38 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL44 DEL42 DEL42 DEL33 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31