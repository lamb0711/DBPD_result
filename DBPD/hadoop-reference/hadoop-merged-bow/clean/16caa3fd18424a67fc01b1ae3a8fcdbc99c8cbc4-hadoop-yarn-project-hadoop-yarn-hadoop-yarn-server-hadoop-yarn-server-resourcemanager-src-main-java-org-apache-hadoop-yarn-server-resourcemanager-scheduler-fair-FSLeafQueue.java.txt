YARN-1913. With Fair Scheduler, cluster can logjam when all resources are consumed by AMs (Wei Yan via Sandy Ryza)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1599400 13f79535-47bb-0310-9956-ffa450edef68

+  // Track the AM resource usage for this queue
+  private Resource amResourceUsage;
+
+    amResourceUsage = Resource.newInstance(0, 0);
+      // Update AM resource usage
+      if (app.getAMResource() != null) {
+        Resources.subtractFrom(amResourceUsage, app.getAMResource());
+      }
+
+  /**
+   * Check whether this queue can run this application master under the
+   * maxAMShare limit
+   *
+   * @param amResource
+   * @return true if this queue can run
+   */
+  public boolean canRunAppAM(Resource amResource) {
+    float maxAMShare =
+        scheduler.getAllocationConfiguration().getQueueMaxAMShare(getName());
+    Resource maxAMResource = Resources.multiply(getFairShare(), maxAMShare);
+    Resource ifRunAMResource = Resources.add(amResourceUsage, amResource);
+    return !policy
+        .checkIfAMResourceUsageOverLimit(ifRunAMResource, maxAMResource);
+  }
+
+  public void addAMResourceUsage(Resource amResource) {
+    if (amResource != null) {
+      Resources.addTo(amResourceUsage, amResource);
+    }
+  }

INS23 INS31 INS31 INS83 INS43 INS59 INS29 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS21 INS65 INS65 INS65 INS43 INS42 INS60 INS60 INS60 INS41 INS43 INS42 INS25 INS7 INS8 INS66 INS66 INS42 INS66 INS42 INS39 INS59 INS43 INS59 INS43 INS59 INS38 INS42 INS27 INS8 INS42 INS32 INS25 MOV41 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS33 INS21 INS42 INS42 INS34 INS34 INS27 MOV8 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS33 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42