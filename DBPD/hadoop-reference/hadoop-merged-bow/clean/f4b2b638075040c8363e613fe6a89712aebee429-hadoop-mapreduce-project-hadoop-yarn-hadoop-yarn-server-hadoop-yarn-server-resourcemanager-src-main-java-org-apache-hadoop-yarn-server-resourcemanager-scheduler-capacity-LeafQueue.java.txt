Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1170378 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.api.records.ContainerStatus;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerUtils;
-public class LeafQueue implements Queue {
+public class LeafQueue implements CSQueue {
-  private Queue parent;
+  private CSQueue parent;
-      String queueName, Queue parent, 
-      Comparator<SchedulerApp> applicationComparator, Queue old) {
+      String queueName, CSQueue parent, 
+      Comparator<SchedulerApp> applicationComparator, CSQueue old) {
-            (int)((clusterResource.getMemory() / DEFAULT_AM_RESOURCE) * 
+            (int)((clusterResource.getMemory() / (float)DEFAULT_AM_RESOURCE) * 
-  public Queue getParent() {
+  public CSQueue getParent() {
-  public int getMaxApplicationsPerUser() {
+  public synchronized int getMaxApplicationsPerUser() {
-  public int getMaximumActiveApplications() {
+  public synchronized int getMaximumActiveApplications() {
-  public int getMaximumActiveApplicationsPerUser() {
+  public synchronized int getMaximumActiveApplicationsPerUser() {
-  public List<Queue> getChildQueues() {
+  public List<CSQueue> getChildQueues() {
-  synchronized void setParentQueue(Queue parent) {
+  synchronized void setParentQueue(CSQueue parent) {
-  public int getUserLimit() {
+  public synchronized int getUserLimit() {
-  public float getUserLimitFactor() {
+  public synchronized float getUserLimitFactor() {
-  public synchronized void reinitialize(Queue queue, Resource clusterResource) 
+  public synchronized void reinitialize(CSQueue queue, Resource clusterResource) 
-        leafQueue.maxApplications, leafQueue.maxApplicationsPerUser,
-        leafQueue.maxActiveApplications, 
-        leafQueue.maxActiveApplicationsPerUser,
+        leafQueue.maxApplications,
+        leafQueue.getMaxApplicationsPerUser(),
+        leafQueue.getMaximumActiveApplications(), 
+        leafQueue.getMaximumActiveApplicationsPerUser(),
-          rmContainer, RMContainerEventType.RELEASED);
+          rmContainer, 
+          SchedulerUtils.createAbnormalContainerStatus(
+              container.getId(), 
+              SchedulerUtils.UNRESERVED_CONTAINER), 
+          RMContainerEventType.RELEASED);
-          (int)((application.getReReservations(priority) / reservedContainers) * 
+          (int)((application.getReReservations(priority) / (float)reservedContainers) * 
-      RMContainerEventType event) {
+      ContainerStatus containerStatus, RMContainerEventType event) {
-          application.containerCompleted(rmContainer, event);
+          application.containerCompleted(rmContainer, containerStatus, event);
-          node, rmContainer, event);
+          node, rmContainer, null, event);

INS26 INS26 INS40 INS40 UPD43 UPD42 UPD43 UPD43 INS83 INS83 INS83 UPD74 INS83 INS83 INS44 UPD42 UPD43 UPD43 UPD42 UPD43 UPD43 UPD43 INS43 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS33 INS42 INS42 INS32 INS40 INS42 INS42 INS11 INS39 INS42 INS42 INS11 INS39 INS42 DEL42 DEL40 DEL40 DEL40 DEL42