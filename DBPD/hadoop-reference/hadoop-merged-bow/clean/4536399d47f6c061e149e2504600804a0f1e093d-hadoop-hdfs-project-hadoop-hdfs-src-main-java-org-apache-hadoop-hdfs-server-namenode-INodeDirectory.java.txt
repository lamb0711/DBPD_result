HDFS-8357. Consolidate parameters of INode.CleanSubtree() into a parameter objects. Contributed by Li Lu.

-  public Snapshot removeSnapshot(BlockStoragePolicySuite bsps, String snapshotName,
-      BlocksMapUpdateInfo collectedBlocks, final List<INode> removedINodes)
+  public Snapshot removeSnapshot(
+      ReclaimContext reclaimContext, String snapshotName)
-    return getDirectorySnapshottableFeature().removeSnapshot(bsps, this,
-        snapshotName, collectedBlocks, removedINodes);
+    return getDirectorySnapshottableFeature().removeSnapshot(
+        reclaimContext, this, snapshotName);
-      final BlockStoragePolicySuite bsps, final int snapshot, int prior,
-      final BlocksMapUpdateInfo collectedBlocks,
-      final List<INode> removedINodes, List<Long> removedUCFiles,
+      ReclaimContext reclaimContext, final int snapshot, int prior,
-        QuotaCounts childCounts = child.cleanSubtree(bsps, snapshot, prior,
-            collectedBlocks, removedINodes, removedUCFiles);
+        QuotaCounts childCounts = child.cleanSubtree(reclaimContext, snapshot, prior);
-  public void destroyAndCollectBlocks(
-      final BlockStoragePolicySuite bsps,
-      final BlocksMapUpdateInfo collectedBlocks,
-      final List<INode> removedINodes, List<Long> removedUCFiles) {
+  public void destroyAndCollectBlocks(ReclaimContext reclaimContext) {
-      sf.clear(bsps, this, collectedBlocks, removedINodes, removedUCFiles);
+      sf.clear(reclaimContext, this);
-      child.destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes,
-                                    removedUCFiles);
+      child.destroyAndCollectBlocks(reclaimContext);
-    removedINodes.add(this);
+    reclaimContext.removedINodes.add(this);
-      final BlockStoragePolicySuite bsps, final int snapshotId, int priorSnapshotId,
-      final BlocksMapUpdateInfo collectedBlocks,
-      final List<INode> removedINodes, List<Long> removedUCFiles) {
+      ReclaimContext reclaimContext, final int snapshotId, int priorSnapshotId) {
-      return sf.cleanDirectory(bsps, this, snapshotId, priorSnapshotId,
-          collectedBlocks, removedINodes, removedUCFiles);
+      return sf.cleanDirectory(reclaimContext, this, snapshotId,
+                               priorSnapshotId);
-      this.computeQuotaUsage(bsps, counts, true);
-      destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes,
-                              removedUCFiles);
+      this.computeQuotaUsage(reclaimContext.bsps, counts, true);
+      destroyAndCollectBlocks(reclaimContext);
-      QuotaCounts counts = cleanSubtreeRecursively(bsps, snapshotId, priorSnapshotId,
-          collectedBlocks, removedINodes, removedUCFiles, null);
+      QuotaCounts counts = cleanSubtreeRecursively(
+          reclaimContext, snapshotId, priorSnapshotId, null);

MOV44 MOV44 MOV44 INS43 UPD42 INS43 UPD42 INS43 UPD42 INS43 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV27 UPD42 MOV42 MOV27 UPD42 INS40 UPD42 UPD42 UPD42 INS40 UPD42 UPD42 UPD42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL83 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL83 DEL43 DEL42 DEL43 DEL74 DEL83 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL44 DEL83 DEL43 DEL42 DEL43 DEL74 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL83 DEL43 DEL42 DEL43 DEL74 DEL83 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42