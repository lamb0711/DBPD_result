YARN-9676. Add DEBUG and TRACE level messages to AppLogAggregatorImplâ€¦ (#1261)

* YARN-9676. Add DEBUG and TRACE level messages to AppLogAggregatorImpl and connected classes

* Using {} placeholder, and increasing loglevel if log aggregation failed.

-  private int cleanupOldLogTimes = 0;
-        rollingMonitorInterval <= 0 || this.logAggregationContext == null
-            || this.logAggregationContext.getRolledLogsIncludePattern() == null
-            || this.logAggregationContext.getRolledLogsIncludePattern()
-                .isEmpty() ? false : true;
+        rollingMonitorInterval > 0 && this.logAggregationContext != null
+            && this.logAggregationContext.getRolledLogsIncludePattern() != null
+            && !this.logAggregationContext.getRolledLogsIncludePattern()
+                .isEmpty();
+    if (logAggregationInRolling) {
+      LOG.info("Rolling mode is turned on with include pattern {}",
+          this.logAggregationContext.getRolledLogsIncludePattern());
+    } else {
+      LOG.debug("Rolling mode is turned off");
+    }
+      LOG.debug("No pending container in this cycle");
+    LOG.debug("Cycle #{} of log aggregator", logAggregationTimes);
+          LOG.trace("Uploaded the following files for {}: {}",
+              container, uploadedFilePathsInThisCycle.toString());
+      if (!diagnosticMessage.isEmpty()) {
+        LOG.debug("Sending log aggregation report along with the " +
+            "following diagnostic message:\"{}\"", diagnosticMessage);
+      }
+      if (!logAggregationSucceedInThisCycle) {
+        LOG.warn("Log aggregation did not succeed in this cycle");
+      }
-        LOG.warn("Log dir " + rootLogDir + "is an unsupported file system", ue);
+        LOG.warn("Log dir {} is in an unsupported file system", rootLogDir,
+            ue);
+        LOG.warn("An exception occurred while getting file information", fe);
+      LOG.debug("Cleaning up {} files", localAppLogDirs.size());
-  @Private
-  @VisibleForTesting
-  public int getLogAggregationTimes() {
-    return this.logAggregationTimes;
-  }
-
-  @VisibleForTesting
-  int getCleanupOldLogTimes() {
-    return this.cleanupOldLogTimes;
-  }
-

INS25 INS21 INS42 INS8 INS8 INS32 UPD27 MOV27 INS21 INS21 INS21 INS42 INS42 INS45 INS42 INS25 INS25 INS21 UPD27 INS38 INS32 INS32 INS32 INS38 INS8 INS38 INS8 INS32 UPD27 UPD27 MOV32 INS42 INS42 INS45 INS32 INS42 INS42 INS45 INS42 INS42 INS45 INS32 INS21 INS42 INS21 INS42 INS42 INS45 INS32 UPD27 UPD27 INS22 INS42 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS52 INS42 INS21 INS42 INS42 INS27 INS42 INS42 INS42 INS45 INS32 INS32 INS45 INS45 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS32 INS42 INS42 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL9 DEL9 DEL16 DEL45 DEL42 DEL45 DEL27 DEL42 DEL78 DEL42 DEL78 DEL83 DEL39 DEL42 DEL52 DEL42 DEL22 DEL41 DEL8 DEL31 DEL42 DEL78 DEL39 DEL42 DEL52 DEL42 DEL22 DEL41 DEL8 DEL31