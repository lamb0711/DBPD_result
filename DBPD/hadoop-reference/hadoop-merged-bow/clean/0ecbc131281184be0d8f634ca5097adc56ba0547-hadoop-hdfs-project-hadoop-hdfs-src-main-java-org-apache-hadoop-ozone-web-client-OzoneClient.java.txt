HDFS-10278. Ozone: Add paging support to list Volumes. Contributed by Anu Engineer.

+   * @param prefix     - Return only volumes that match this prefix.
+   * @param maxKeys    - Maximum number of results to return, if the result set
+   *                   is smaller than requested size, it means that list is
+   *                   complete.
+   * @param prevKey    - The last key that client got, server will continue
+   *                   returning results from that point.
-  public List<OzoneVolume> listVolumes(String onBehalfOf)
-      throws OzoneException {
+  public List<OzoneVolume> listVolumes(String onBehalfOf, String prefix, int
+      maxKeys, OzoneVolume prevKey) throws OzoneException {
+      if (prefix != null) {
+        builder.addParameter(Header.OZONE_LIST_QUERY_PREFIX, prefix);
+      }
+
+      if (maxKeys > 0) {
+        builder.addParameter(Header.OZONE_LIST_QUERY_MAXKEYS, Integer
+            .toString(maxKeys));
+      }
+
+      if (prevKey != null) {
+        builder.addParameter(Header.OZONE_LIST_QUERY_PREVKEY,
+            prevKey.getOwnerName() + "/" + prevKey.getVolumeName());
+      }
+
-   * delete a given volume.
+   * List volumes of the current user or if onBehalfof is not null lists volume
+   * owned by that user. You need admin privilege to read other users volume
+   * lists.
-   * @param volumeName - volume to be deleted.
-   * @throws OzoneException - Ozone Exception
+   * @param onBehalfOf - Name of the user you want to get volume list
+   * @return - Volume list.
+   * @throws OzoneException
+  public List<OzoneVolume> listVolumes(String onBehalfOf)
+      throws OzoneException {
+    return listVolumes(onBehalfOf, null, 1000, null);
+  }
+
+  /**
+   * List all volumes in a cluster. This can be invoked only by an Admin.
+   *
+   * @param prefix  - Returns only volumes that match this prefix.
+   * @param maxKeys - Maximum niumber of keys to return
+   * @param prevKey - Last Ozone Volume from the last Iteration.
+   * @return List of Volumes
+   * @throws OzoneException
+   */
+  public List<OzoneVolume> listAllVolumes(String prefix, int maxKeys,
+      OzoneVolume prevKey) throws OzoneException {
+    try {
+      DefaultHttpClient httpClient = new DefaultHttpClient();
+
+      URIBuilder builder = new URIBuilder(endPointURI);
+      if (prefix != null) {
+        builder.addParameter(Header.OZONE_LIST_QUERY_PREFIX, prefix);
+      }
+
+      if (maxKeys > 0) {
+        builder.addParameter(Header.OZONE_LIST_QUERY_MAXKEYS, Integer
+            .toString(maxKeys));
+      }
+
+      if (prevKey != null) {
+        builder.addParameter(Header.OZONE_LIST_QUERY_PREVKEY,
+            prevKey.getOwnerName()+ "/" + prevKey.getVolumeName());
+      }
+
+      builder.addParameter(Header.OZONE_LIST_QUERY_ROOTSCAN, "true");
+      builder.setPath("/").build();
+      HttpGet httpget = getHttpGet(builder.toString());
+      return executeListVolume(httpget, httpClient);
+
+    } catch (IOException | URISyntaxException ex) {
+      throw new OzoneClientException(ex.getMessage());
+    }
+  }
+
+    /**
+     * delete a given volume.
+     *
+     * @param volumeName - volume to be deleted.
+     * @throws OzoneException - Ozone Exception
+     */

INS31 INS31 INS44 INS44 INS44 INS29 INS83 INS74 INS42 INS44 INS43 INS8 INS29 INS83 INS74 INS42 INS44 INS44 INS44 INS43 INS8 INS65 INS65 INS65 INS43 INS42 INS39 INS42 INS43 INS42 INS65 INS65 INS65 INS65 INS43 INS43 INS43 INS42 INS42 INS41 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS43 INS43 INS42 INS39 INS42 INS43 INS42 INS42 INS54 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS42 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS42 INS32 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS42 INS42 INS8 INS12 INS25 INS25 INS25 INS42 INS42 INS33 INS34 INS33 INS60 INS60 INS25 INS25 INS25 INS21 INS21 INS60 INS41 INS44 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS43 INS59 INS43 INS59 INS27 INS8 INS27 INS8 INS27 INS8 INS32 INS32 INS43 INS59 INS32 INS84 INS42 INS53 INS42 INS33 INS21 INS42 INS34 INS21 INS42 INS33 INS21 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS33 INS21 INS42 INS34 INS21 INS42 INS33 INS21 INS42 INS42 INS40 INS45 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS43 INS14 INS32 INS32 INS32 INS43 INS43 INS42 INS32 INS32 INS32 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS43 INS32 INS42 INS42 INS40 INS42 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS27 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS45 INS32 INS42 INS42 INS42 INS32 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42