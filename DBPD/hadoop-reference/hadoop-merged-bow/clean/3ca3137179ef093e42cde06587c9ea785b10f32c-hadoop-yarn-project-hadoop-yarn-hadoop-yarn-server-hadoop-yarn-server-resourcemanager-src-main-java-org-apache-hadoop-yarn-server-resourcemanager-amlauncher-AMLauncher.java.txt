YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.
MAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+import java.util.List;
+import org.apache.hadoop.security.token.SecretManager.InvalidToken;
-import org.apache.hadoop.yarn.api.protocolrecords.StopContainerRequest;
+import org.apache.hadoop.yarn.api.protocolrecords.StartContainersRequest;
+import org.apache.hadoop.yarn.api.protocolrecords.StartContainersResponse;
+import org.apache.hadoop.yarn.api.protocolrecords.StopContainersRequest;
+import org.apache.hadoop.yarn.api.protocolrecords.StopContainersResponse;
-import org.apache.hadoop.yarn.factories.RecordFactory;
-import org.apache.hadoop.yarn.factory.providers.RecordFactoryProvider;
-  private final RecordFactory recordFactory = 
-      RecordFactoryProvider.getRecordFactory(null);
-    StartContainerRequest request = 
-        recordFactory.newRecordInstance(StartContainerRequest.class);
-    request.setContainerLaunchContext(launchContext);
-    request.setContainerToken(masterContainer.getContainerToken());
-    containerMgrProxy.startContainer(request);
-    LOG.info("Done launching container " + masterContainer
-        + " for AM " + application.getAppAttemptId());
+
+    StartContainerRequest scRequest =
+        StartContainerRequest.newInstance(launchContext,
+          masterContainer.getContainerToken());
+    List<StartContainerRequest> list = new ArrayList<StartContainerRequest>();
+    list.add(scRequest);
+    StartContainersRequest allRequests =
+        StartContainersRequest.newInstance(list);
+
+    StartContainersResponse response =
+        containerMgrProxy.startContainers(allRequests);
+    if (response.getFailedRequests() != null
+        && response.getFailedRequests().containsKey(masterContainerID)) {
+      Throwable t =
+          response.getFailedRequests().get(masterContainerID).deSerialize();
+      parseAndThrowException(t);
+    } else {
+      LOG.info("Done launching container " + masterContainer + " for AM "
+          + application.getAppAttemptId());
+    }
-    StopContainerRequest stopRequest = 
-        recordFactory.newRecordInstance(StopContainerRequest.class);
-    stopRequest.setContainerId(containerId);
-    containerMgrProxy.stopContainer(stopRequest);
+    List<ContainerId> containerIds = new ArrayList<ContainerId>();
+    containerIds.add(containerId);
+    StopContainersRequest stopRequest =
+        StopContainersRequest.newInstance(containerIds);
+    StopContainersResponse response =
+        containerMgrProxy.stopContainers(stopRequest);
+    if (response.getFailedRequests() != null
+        && response.getFailedRequests().containsKey(containerId)) {
+      Throwable t = response.getFailedRequests().get(containerId).deSerialize();
+      parseAndThrowException(t);
+    }
+
+  private void parseAndThrowException(Throwable t) throws YarnException,
+      IOException {
+    if (t instanceof YarnException) {
+      throw (YarnException) t;
+    } else if (t instanceof InvalidToken) {
+      throw (InvalidToken) t;
+    } else {
+      throw (IOException) t;
+    }
+  }

MOV26 MOV26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 UPD40 INS40 UPD40 UPD40 INS31 INS31 INS83 INS39 INS42 MOV43 MOV43 INS8 INS83 INS39 INS42 INS44 INS43 INS43 INS8 INS60 INS60 INS60 INS25 MOV21 MOV60 INS60 INS21 MOV60 INS60 INS25 INS43 INS42 INS42 INS42 INS25 MOV43 INS59 INS74 INS43 INS59 INS43 INS59 INS27 INS8 INS8 INS74 INS59 INS32 UPD43 INS43 INS59 INS27 INS8 INS42 INS62 INS8 INS25 INS42 MOV32 INS43 MOV43 UPD42 INS14 UPD42 UPD42 UPD42 INS42 INS42 INS32 INS42 INS42 INS32 INS27 INS32 INS60 INS21 MOV21 INS43 INS43 UPD42 MOV42 INS14 INS42 INS42 INS42 UPD42 INS42 INS42 INS32 INS27 INS32 INS60 INS21 INS42 INS43 INS53 INS62 INS8 INS8 UPD42 INS42 UPD42 INS42 INS74 INS42 INS42 INS42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 INS33 INS32 INS42 INS42 INS43 INS59 INS32 UPD42 MOV42 INS42 INS74 UPD42 UPD42 INS42 INS42 INS42 INS42 INS32 INS33 INS32 UPD42 MOV42 MOV42 INS43 INS59 INS32 INS42 INS11 INS42 INS43 INS53 INS53 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS43 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS32 INS42 INS42 INS43 INS42 INS42 INS11 INS11 INS42 INS42 INS32 INS42 INS42 INS42 INS32 UPD42 MOV42 INS42 INS43 INS42 INS43 INS42 INS32 INS42 INS42 INS32 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 DEL83 DEL83 DEL43 DEL42 DEL42 DEL33 DEL32 DEL59 DEL23 DEL42 DEL42 DEL57 DEL32 DEL21 DEL32 DEL21 DEL42 DEL43 DEL57 DEL83 DEL39 DEL42 DEL32 DEL21 DEL32 DEL21 DEL8 DEL31