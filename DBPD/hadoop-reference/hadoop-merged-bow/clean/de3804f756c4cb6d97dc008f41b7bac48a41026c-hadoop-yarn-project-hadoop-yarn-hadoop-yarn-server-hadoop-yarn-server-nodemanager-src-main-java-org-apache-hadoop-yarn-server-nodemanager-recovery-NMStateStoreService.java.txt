Merging r1617377 through r1617565 from trunk.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-6584@1617566 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.api.protocolrecords.StartContainerRequest;
+import org.apache.hadoop.yarn.api.records.ContainerExitStatus;
+  public enum RecoveredContainerStatus {
+    REQUESTED,
+    LAUNCHED,
+    COMPLETED
+  }
+
+  public static class RecoveredContainerState {
+    RecoveredContainerStatus status;
+    int exitCode = ContainerExitStatus.INVALID;
+    boolean killed = false;
+    String diagnostics = "";
+    StartContainerRequest startRequest;
+
+    public RecoveredContainerStatus getStatus() {
+      return status;
+    }
+
+    public int getExitCode() {
+      return exitCode;
+    }
+
+    public boolean getKilled() {
+      return killed;
+    }
+
+    public String getDiagnostics() {
+      return diagnostics;
+    }
+
+    public StartContainerRequest getStartRequest() {
+      return startRequest;
+    }
+  }
+
+  /**
+   * Load the state of applications
+   * @return recovered state for applications
+   * @throws IOException
+   */
+  /**
+   * Record the start of an application
+   * @param appId the application ID
+   * @param p state to store for the application
+   * @throws IOException
+   */
+  /**
+   * Record that an application has finished
+   * @param appId the application ID
+   * @throws IOException
+   */
+  /**
+   * Remove records corresponding to an application
+   * @param appId the application ID
+   * @throws IOException
+   */
+   * Load the state of containers
+   * @return recovered state for containers
+   * @throws IOException
+   */
+  public abstract List<RecoveredContainerState> loadContainersState()
+      throws IOException;
+
+  /**
+   * Record a container start request
+   * @param containerId the container ID
+   * @param startRequest the container start request
+   * @throws IOException
+   */
+  public abstract void storeContainer(ContainerId containerId,
+      StartContainerRequest startRequest) throws IOException;
+
+  /**
+   * Record that a container has been launched
+   * @param containerId the container ID
+   * @throws IOException
+   */
+  public abstract void storeContainerLaunched(ContainerId containerId)
+      throws IOException;
+
+  /**
+   * Record that a container has completed
+   * @param containerId the container ID
+   * @param exitCode the exit code from the container
+   * @throws IOException
+   */
+  public abstract void storeContainerCompleted(ContainerId containerId,
+      int exitCode) throws IOException;
+
+  /**
+   * Record a request to kill a container
+   * @param containerId the container ID
+   * @throws IOException
+   */
+  public abstract void storeContainerKilled(ContainerId containerId)
+      throws IOException;
+
+  /**
+   * Record diagnostics for a container
+   * @param containerId the container ID
+   * @param diagnostics the container diagnostics
+   * @throws IOException
+   */
+  public abstract void storeContainerDiagnostics(ContainerId containerId,
+      StringBuilder diagnostics) throws IOException;
+
+  /**
+   * Remove records corresponding to a container
+   * @param containerId the container ID
+   * @throws IOException
+   */
+  public abstract void removeContainer(ContainerId containerId)
+      throws IOException;
+
+
+  /**
+  /**
+   * Load the state of the deletion service
+   * @return recovered deletion service state
+   * @throws IOException
+   */
+  /**
+   * Record a deletion task
+   * @param taskId the deletion task ID
+   * @param taskProto the deletion task protobuf
+   * @throws IOException
+   */
+  /**
+   * Remove records corresponding to a deletion task
+   * @param taskId the deletion task ID
+   * @throws IOException
+   */
+  /**
+   * Load the state of NM tokens
+   * @return recovered state of NM tokens
+   * @throws IOException
+   */
+  /**
+   * Record the current NM token master key
+   * @param key the master key
+   * @throws IOException
+   */
+  /**
+   * Record the previous NM token master key
+   * @param key the previous master key
+   * @throws IOException
+   */
+  /**
+   * Record a master key corresponding to an application
+   * @param attempt the application attempt ID
+   * @param key the master key
+   * @throws IOException
+   */
+  /**
+   * Remove a master key corresponding to an application
+   * @param attempt the application attempt ID
+   * @throws IOException
+   */
+  /**
+   * Load the state of container tokens
+   * @return recovered state of container tokens
+   * @throws IOException
+   */
+  /**
+   * Record the current container token master key
+   * @param key the master key
+   * @throws IOException
+   */
+  /**
+   * Record the previous container token master key
+   * @param key the previous master key
+   * @throws IOException
+   */
+  /**
+   * Record the expiration time for a container token
+   * @param containerId the container ID
+   * @param expirationTime the container token expiration time
+   * @throws IOException
+   */
+  /**
+   * Remove records for a container token
+   * @param containerId the container ID
+   * @throws IOException
+   */

INS26 INS26 INS40 INS40 INS71 INS55 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS42 INS72 INS72 INS72 INS83 INS83 INS42 INS23 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS29 INS29 INS29 MOV44 MOV43 INS29 MOV44 MOV43 INS29 INS83 INS83 INS74 INS42 MOV43 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS43 INS29 INS83 INS83 INS39 INS42 INS44 MOV43 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS43 INS29 INS83 INS83 INS39 INS42 INS44 MOV43 INS29 INS83 INS83 INS39 INS42 MOV44 INS44 INS43 INS29 INS83 INS83 INS39 INS42 INS44 MOV43 INS29 INS29 INS29 MOV43 INS29 INS29 MOV44 MOV43 INS29 MOV44 MOV43 INS29 MOV44 MOV44 INS43 INS29 MOV44 MOV43 INS29 INS29 INS43 INS29 MOV44 INS43 INS29 INS29 INS44 INS43 INS42 INS42 INS42 INS43 INS59 INS39 INS59 INS39 INS59 INS43 INS59 INS43 INS59 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS43 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS42 INS65 INS65 INS65 INS43 INS42 INS65 INS65 INS65 INS65 INS43 INS42 INS39 INS42 INS42 INS65 INS65 INS65 INS43 INS42 INS65 INS65 INS65 INS65 INS43 INS42 INS42 INS65 INS65 INS65 INS43 INS42 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS65 INS65 INS65 INS42 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS9 INS42 INS42 INS45 INS42 INS42 INS42 INS41 INS41 INS41 INS42 INS41 INS42 INS41 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS42 INS66 INS42 INS66 INS42 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS66 INS42 INS66 INS42 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS66 INS42 INS66 INS42 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS42