YARN-2738. [YARN-2574] Add FairReservationSystem for FairScheduler. (Anubhav Dhoot via kasha)

-  
+
+    Set<String> reservableQueues = new HashSet<String>();
+    // Reservation global configuration knobs
+    String planner = null;
+    String reservationAgent = null;
+    String reservationAdmissionPolicy = null;
+
+        } else if ("reservation-planner".equals(element.getTagName())) {
+          String text = ((Text) element.getFirstChild()).getData().trim();
+          planner = text;
+        } else if ("reservation-agent".equals(element.getTagName())) {
+          String text = ((Text) element.getFirstChild()).getData().trim();
+          reservationAgent = text;
+        } else if ("reservation-policy".equals(element.getTagName())) {
+          String text = ((Text) element.getFirstChild()).getData().trim();
+          reservationAdmissionPolicy = text;
-          fairSharePreemptionThresholds, queueAcls, configuredQueues);
+          fairSharePreemptionThresholds, queueAcls, configuredQueues,
+          reservableQueues);
+    ReservationQueueConfiguration globalReservationQueueConfig = new
+        ReservationQueueConfiguration();
+    if (planner != null) {
+      globalReservationQueueConfig.setPlanner(planner);
+    }
+    if (reservationAdmissionPolicy != null) {
+      globalReservationQueueConfig.setReservationAdmissionPolicy
+          (reservationAdmissionPolicy);
+    }
+    if (reservationAgent != null) {
+      globalReservationQueueConfig.setReservationAgent(reservationAgent);
+    }
+
-        newPlacementPolicy, configuredQueues);
+        newPlacementPolicy, configuredQueues, globalReservationQueueConfig,
+        reservableQueues);
-      Map<String, Map<QueueACL, AccessControlList>> queueAcls, 
-      Map<FSQueueType, Set<String>> configuredQueues) 
+      Map<String, Map<QueueACL, AccessControlList>> queueAcls,
+      Map<FSQueueType, Set<String>> configuredQueues,
+      Set<String> reservableQueues)
+      } else if ("reservation".equals(field.getTagName())) {
+        isLeaf = false;
+        reservableQueues.add(queueName);
+        configuredQueues.get(FSQueueType.PARENT).add(queueName);
-            queueAcls, configuredQueues);
-        configuredQueues.get(FSQueueType.PARENT).add(queueName);
+            queueAcls, configuredQueues, reservableQueues);
+    } else {
+      if ("parent".equals(element.getAttribute("type"))) {
+        throw new AllocationConfigurationException("Both <reservation> and " +
+            "type=\"parent\" found for queue " + queueName + " which is " +
+            "unsupported");
+      }
+      configuredQueues.get(FSQueueType.PARENT).add(queueName);

INS44 INS60 INS60 INS60 INS60 INS60 INS25 INS25 INS25 INS74 INS42 INS74 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS27 INS8 INS27 INS8 INS27 INS8 MOV43 INS43 INS43 INS8 INS43 INS43 INS42 INS14 INS42 INS42 INS33 INS42 INS42 INS33 INS42 INS42 INS33 INS42 INS42 INS14 INS42 INS33 INS21 INS42 INS33 INS21 INS42 INS33 INS21 INS42 INS42 INS25 MOV21 INS42 INS42 INS74 INS43 INS32 INS32 INS32 MOV43 INS42 INS42 INS32 INS8 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS32 INS53 INS42 INS42 INS42 INS42 INS45 INS14 INS43 INS27 INS42 INS27 INS42 INS45 INS45 INS45 INS45 INS25 INS25 INS32 INS8 MOV25 MOV32 MOV8 INS25 INS45 INS42 INS32 INS21 INS21 INS21 INS32 INS8 INS25 INS42 INS42 INS7 INS32 INS32 INS45 INS42 INS32 INS60 INS21 INS32 INS8 MOV25 INS42 INS9 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS59 INS7 INS45 INS42 INS32 INS60 INS21 INS32 INS8 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS59 INS7 INS45 INS42 INS32 INS60 INS21 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS59 INS7 INS36 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS11 INS36 INS42 INS32 INS42 INS43 INS32 INS11 INS36 INS42 INS42 INS42 INS42 INS43 INS32 INS11 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS42