HDFS-7468. Moving verify* functions to corresponding classes. Contributed by Li Lu.

+import org.apache.hadoop.hdfs.protocol.FSLimitException;
+   * Verify quota for rename operation where srcInodes[srcInodes.length-1] moves
+   * dstInodes[dstInodes.length-1]
+   */
+  static void verifyQuotaForRename(FSDirectory fsd,
+      INode[] src, INode[] dst)
+      throws QuotaExceededException {
+    if (!fsd.getFSNamesystem().isImageLoaded() || fsd.shouldSkipQuotaChecks()) {
+      // Do not check quota if edits log is still being processed
+      return;
+    }
+    int i = 0;
+    while(src[i] == dst[i]) { i++; }
+    // src[i - 1] is the last common ancestor.
+
+    final Quota.Counts delta = src[src.length - 1].computeQuotaUsage();
+
+    // Reduce the required quota by dst that is being removed
+    final int dstIndex = dst.length - 1;
+    if (dst[dstIndex] != null) {
+      delta.subtract(dst[dstIndex].computeQuotaUsage());
+    }
+    FSDirectory.verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),
+        delta.get(Quota.DISKSPACE), src[i - 1]);
+  }
+
+  /**
+   * Checks file system limits (max component length and max directory items)
+   * during a rename operation.
+   */
+  static void verifyFsLimitsForRename(FSDirectory fsd,
+      INodesInPath srcIIP,
+      INodesInPath dstIIP)
+      throws FSLimitException.PathComponentTooLongException,
+          FSLimitException.MaxDirectoryItemsExceededException {
+    byte[] dstChildName = dstIIP.getLastLocalName();
+    INode[] dstInodes = dstIIP.getINodes();
+    int pos = dstInodes.length - 1;
+    fsd.verifyMaxComponentLength(dstChildName, dstInodes, pos);
+    // Do not enforce max directory items if renaming within same directory.
+    if (srcIIP.getINode(-2) != dstIIP.getINode(-2)) {
+      fsd.verifyMaxDirItems(dstInodes, pos);
+    }
+  }
+
+  /**
-    fsd.verifyFsLimitsForRename(srcIIP, dstIIP);
-    fsd.verifyQuotaForRename(srcIIP.getINodes(), dstIIP.getINodes());
+    verifyFsLimitsForRename(fsd, srcIIP, dstIIP);
+    verifyQuotaForRename(fsd, srcIIP.getINodes(), dstIIP.getINodes());
-    fsd.verifyFsLimitsForRename(srcIIP, dstIIP);
-    fsd.verifyQuotaForRename(srcIIP.getINodes(), dstIIP.getINodes());
+    verifyFsLimitsForRename(fsd, srcIIP, dstIIP);
+    verifyQuotaForRename(fsd, srcIIP.getINodes(), dstIIP.getINodes());

INS26 INS40 INS31 INS31 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS43 INS8 INS65 INS43 INS42 INS5 INS42 INS5 INS42 INS42 INS25 INS60 INS61 INS60 INS60 INS25 INS21 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS40 INS40 INS60 INS60 INS60 INS21 INS25 INS66 INS66 INS42 INS43 INS85 INS43 INS85 INS27 INS8 INS39 INS59 INS27 INS8 INS83 INS43 INS59 INS83 INS39 INS59 INS27 INS8 INS32 INS66 INS66 INS42 INS42 INS42 INS5 INS59 INS5 INS59 INS39 INS59 INS32 INS27 INS8 INS42 INS42 INS38 INS32 INS41 INS42 INS34 INS2 INS2 INS21 INS40 INS42 INS32 INS42 INS27 INS2 INS33 INS21 INS42 INS42 INS42 INS42 INS32 INS32 INS2 INS39 INS85 INS42 INS32 INS43 INS85 INS42 INS32 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS37 INS2 INS42 INS40 INS34 INS42 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS40 INS34 INS42 INS42 INS38 INS42 INS42 INS38 INS32 INS32 INS42 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS34 INS34 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS34 INS2 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL42