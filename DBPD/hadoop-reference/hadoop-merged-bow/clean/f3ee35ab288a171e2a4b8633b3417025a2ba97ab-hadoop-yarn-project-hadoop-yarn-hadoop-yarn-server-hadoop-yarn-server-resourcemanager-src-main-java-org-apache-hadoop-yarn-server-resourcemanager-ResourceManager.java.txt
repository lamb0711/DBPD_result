Merge r1555021 through r1556550 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1556552 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStoreOperationFailedEvent;
-import org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStoreOperationFailedEventType;
+  private Dispatcher rmDispatcher;
-  private Dispatcher rmDispatcher;
+  private AppReportFetcher fetcher = null;
+  private String webAppAddress;
+
+    rmDispatcher = createDispatcher();
+    addIfService(rmDispatcher);
+    rmContext.setDispatcher(rmDispatcher);
+
+    rmDispatcher.register(RMFatalEventType.class,
+        new ResourceManager.RMFatalEventDispatcher(this.rmContext, this));
+
+    webAppAddress = WebAppUtils.getRMWebAppURLWithoutScheme(conf);
+
-  protected RMStateStoreOperationFailedEventDispatcher
-      createRMStateStoreOperationFailedEventDispatcher() {
-    return new RMStateStoreOperationFailedEventDispatcher(rmContext, this);
-  }
-
-      rmDispatcher = createDispatcher();
-      addIfService(rmDispatcher);
-      rmContext.setDispatcher(rmDispatcher);
-
-        rmDispatcher.register(RMStateStoreOperationFailedEventType.class,
-            createRMStateStoreOperationFailedEventDispatcher());
-      startWepApp();
-
-      if (getConfig().getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false)) {
-        int port = webApp.port();
-        WebAppUtils.setRMWebAppPort(conf, port);
-      }
-      if (webApp != null) {
-        webApp.stop();
-      }
-
-  public static class RMStateStoreOperationFailedEventDispatcher implements
-      EventHandler<RMStateStoreOperationFailedEvent> {
-
+  public static class RMFatalEventDispatcher
+      implements EventHandler<RMFatalEvent> {
-    public RMStateStoreOperationFailedEventDispatcher(RMContext rmContext,
-        ResourceManager resourceManager) {
+    public RMFatalEventDispatcher(
+        RMContext rmContext, ResourceManager resourceManager) {
-    public void handle(RMStateStoreOperationFailedEvent event) {
-      if (LOG.isDebugEnabled()) {
-        LOG.debug("Received a " +
-            RMStateStoreOperationFailedEvent.class.getName() + " of type " +
-            event.getType().name());
-      }
-      if (event.getType() == RMStateStoreOperationFailedEventType.FENCED) {
+    public void handle(RMFatalEvent event) {
+      LOG.fatal("Received a " + RMFatalEvent.class.getName() + " of type " +
+          event.getType().name());
+
+      if (event.getType() == RMFatalEventType.STATE_STORE_FENCED) {
-            LOG.error("Failed to transition RM to Standby mode.");
+            LOG.fatal("Failed to transition RM to Standby mode.");
-      LOG.error("Shutting down RM on receiving a " +
-          RMStateStoreOperationFailedEvent.class.getName() + " of type " +
-          event.getType().name());
-            .at(WebAppUtils.getRMWebAppURLWithoutScheme(conf)); 
+            .at(webAppAddress);
-      AppReportFetcher fetcher = new AppReportFetcher(conf, getClientRMService());
-      builder.withServlet(ProxyUriUtils.PROXY_SERVLET_NAME, 
+      if (HAUtil.isHAEnabled(conf)) {
+        fetcher = new AppReportFetcher(conf);
+      } else {
+        fetcher = new AppReportFetcher(conf, getClientRMService());
+      }
+      builder.withServlet(ProxyUriUtils.PROXY_SERVLET_NAME,
+    startWepApp();
+    if (getConfig().getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false)) {
+      int port = webApp.port();
+      WebAppUtils.setRMWebAppPort(conf, port);
+    }
+    if (webApp != null) {
+      webApp.stop();
+    }
+    if (fetcher != null) {
+      fetcher.stop();
+    }

MOV23 INS23 INS23 INS83 INS43 INS59 INS83 INS43 INS59 UPD42 UPD74 UPD42 MOV42 INS42 INS33 UPD42 MOV42 INS42 MOV21 MOV21 MOV21 INS21 INS21 MOV21 MOV21 UPD43 UPD42 MOV21 MOV25 MOV25 INS25 INS32 INS7 UPD42 UPD43 MOV21 INS27 INS8 INS42 INS42 INS57 INS14 INS42 MOV32 UPD42 INS25 INS42 INS33 INS21 INS43 INS43 INS22 INS52 INS42 UPD42 UPD40 UPD42 MOV42 INS32 INS8 INS8 INS32 INS42 INS40 INS52 INS42 INS42 INS42 INS42 INS21 INS21 INS42 INS42 INS7 INS7 UPD43 INS42 INS14 INS42 MOV14 UPD42 MOV43 INS42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL83 DEL43 DEL42 DEL43 DEL42 DEL52 DEL14 DEL41 DEL8 DEL31 DEL42 DEL42 DEL42 DEL43 DEL57 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL42 DEL45 DEL42 DEL43 DEL57 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL32 DEL21 DEL42 DEL59 DEL60