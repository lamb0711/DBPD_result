HDFS-6134 and HADOOP-10150 subtasks. Merge fs-encryption branch to trunk.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1619197 13f79535-47bb-0310-9956-ffa450edef68

+import com.google.common.collect.Maps;
+import org.apache.hadoop.fs.XAttr;
-    StringBuffer buffer = new StringBuffer(5);
+    StringBuffer buffer = new StringBuffer(FileAttribute.values().length);
-   * @param attributes - Attribute set that need to be preserved
+   * @param attributes - Attribute set that needs to be preserved
+   * @param preserveRawXattrs if true, raw.* xattrs should be preserved
-                              EnumSet<FileAttribute> attributes) throws IOException {
+                              EnumSet<FileAttribute> attributes,
+                              boolean preserveRawXattrs) throws IOException {
-    
-    if (attributes.contains(FileAttribute.XATTR)) {
+
+    final boolean preserveXAttrs = attributes.contains(FileAttribute.XATTR);
+    if (preserveXAttrs || preserveRawXattrs) {
+      final String rawNS = XAttr.NameSpace.RAW.name().toLowerCase();
-      if (!srcXAttrs.equals(targetXAttrs)) {
+      if (srcXAttrs != null && !srcXAttrs.equals(targetXAttrs)) {
-          targetFS.setXAttr(path, entry.getKey(), entry.getValue());
+          final String xattrName = entry.getKey();
+          if (xattrName.startsWith(rawNS) || preserveXAttrs) {
+            targetFS.setXAttr(path, entry.getKey(), entry.getValue());
+          }
+   * @param preserveRawXAttrs boolean true if preserving raw.* XAttrs
-      boolean preserveXAttrs) throws IOException {
+      boolean preserveXAttrs, boolean preserveRawXAttrs) throws IOException {
-    if (preserveXAttrs) {
-      Map<String, byte[]> xAttrs = fileSystem.getXAttrs(fileStatus.getPath());
-      copyListingFileStatus.setXAttrs(xAttrs);
+    if (preserveXAttrs || preserveRawXAttrs) {
+      Map<String, byte[]> srcXAttrs = fileSystem.getXAttrs(fileStatus.getPath());
+      if (preserveXAttrs && preserveRawXAttrs) {
+         copyListingFileStatus.setXAttrs(srcXAttrs);
+      } else {
+        Map<String, byte[]> trgXAttrs = Maps.newHashMap();
+        final String rawNS = XAttr.NameSpace.RAW.name().toLowerCase();
+        for (Map.Entry<String, byte[]> ent : srcXAttrs.entrySet()) {
+          final String xattrName = ent.getKey();
+          if (xattrName.startsWith(rawNS)) {
+            if (preserveRawXAttrs) {
+              trgXAttrs.put(xattrName, ent.getValue());
+            }
+          } else if (preserveXAttrs) {
+            trgXAttrs.put(xattrName, ent.getValue());
+          }
+        }
+        copyListingFileStatus.setXAttrs(trgXAttrs);
+      }

INS26 INS26 INS40 INS40 INS44 INS44 INS65 INS39 INS42 INS60 INS65 INS39 INS42 INS25 MOV43 UPD66 INS42 INS66 INS83 INS39 INS59 INS27 INS42 INS66 INS27 INS8 INS42 MOV32 INS42 INS42 INS60 INS42 INS42 MOV60 MOV25 MOV43 INS22 INS83 INS43 INS59 INS27 INS27 INS8 INS32 INS42 INS42 INS42 INS32 INS27 MOV38 UPD42 INS42 INS42 INS60 INS60 INS70 INS21 INS42 INS42 INS32 INS42 INS42 INS33 INS74 INS59 INS83 INS43 INS59 INS44 INS32 INS8 INS32 INS40 INS42 INS60 INS25 UPD42 INS43 INS43 INS5 INS42 INS32 INS42 INS42 INS32 INS74 INS42 INS42 INS42 INS60 INS25 INS42 INS42 INS42 INS83 INS43 INS59 INS27 INS8 INS42 INS42 INS39 INS85 INS42 INS42 INS32 INS42 INS43 INS43 INS5 INS83 INS43 INS59 INS32 INS8 INS25 INS42 INS42 INS32 INS32 INS42 MOV21 INS40 INS42 INS40 INS42 INS39 INS85 INS42 INS42 INS32 INS42 INS42 INS42 INS25 INS42 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS8 INS21 INS21 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 DEL34 DEL42