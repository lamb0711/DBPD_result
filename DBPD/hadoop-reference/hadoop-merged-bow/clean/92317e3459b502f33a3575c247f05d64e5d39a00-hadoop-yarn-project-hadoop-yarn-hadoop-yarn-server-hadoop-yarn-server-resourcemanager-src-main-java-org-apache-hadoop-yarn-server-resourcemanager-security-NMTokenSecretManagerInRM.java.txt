YARN-1839. Fixed handling of NMTokens in ResourceManager such that containers launched by AMs running on the same machine as the AM are correctly propagated. Contributed by Jian He.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1578631 13f79535-47bb-0310-9956-ffa450edef68

+  public void clearNodeSetForAttempt(ApplicationAttemptId attemptId) {
+    super.writeLock.lock();
+    try {
+      HashSet<NodeId> nodeSet = this.appAttemptToNodeKeyMap.get(attemptId);
+      if (nodeSet != null) {
+        LOG.info("Clear node set for " + attemptId);
+        nodeSet.clear();
+      }
+    } finally {
+      super.writeLock.unlock();
+    }
+  }
+
-          if (LOG.isDebugEnabled()) {
-            LOG.debug("Sending NMToken for nodeId : "
-                + container.getNodeId().toString()
-                + " for application attempt : " + appAttemptId.toString());
-          }
+          LOG.info("Sending NMToken for nodeId : " + container.getNodeId()
+              + " for container : " + container.getId());
-          // The node set here is used for differentiating whether the NMToken
-          // has been issued for this node from the client's perspective. If
-          // this is an AM container, the NMToken is issued only for RM and so
-          // we should not update the node set.
-          if (container.getId().getId() != 1) {
-            nodeSet.add(container.getNodeId());
-          }
+          nodeSet.add(container.getNodeId());

INS31 INS83 INS39 INS42 INS44 INS8 INS43 INS42 INS21 INS54 INS42 INS32 INS8 INS8 INS47 INS42 INS60 INS25 INS21 INS42 INS74 INS59 INS27 INS8 INS32 INS43 INS43 INS42 INS32 INS42 INS33 INS21 INS21 INS47 INS42 INS42 INS42 INS22 INS42 INS42 INS32 INS32 INS42 INS52 INS42 INS42 INS42 INS27 INS42 INS42 MOV21 MOV21 INS45 INS42 UPD42 MOV32 UPD45 MOV32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL32 DEL34 DEL27 DEL8 DEL25