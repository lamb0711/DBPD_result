Merge remote-tracking branch 'origin/trunk' into MR-2841

Conflicts:
	hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/MapTask.java

+import com.google.common.annotations.VisibleForTesting;
+import org.apache.hadoop.hdfs.server.datanode.DatanodeUtil;
-class FsVolumeImpl implements FsVolumeSpi {
+@VisibleForTesting
+public class FsVolumeImpl implements FsVolumeSpi {
+
+  // Capacity configured. This is useful when we want to
+  // limit the visible capacity for tests. If negative, then we just
+  // query from the filesystem.
+  protected long configuredCapacity;
+
+    this.configuredCapacity = -1;
+    cacheExecutor = initializeCacheExecutor(parent);
+  }
+
+  protected ThreadPoolExecutor initializeCacheExecutor(File parent) {
-        DFSConfigKeys.DFS_DATANODE_FSDATASETCACHE_MAX_THREADS_PER_VOLUME_DEFAULT
-        );
+        DFSConfigKeys.DFS_DATANODE_FSDATASETCACHE_MAX_THREADS_PER_VOLUME_DEFAULT);
+
-    cacheExecutor = new ThreadPoolExecutor(
+    ThreadPoolExecutor executor = new ThreadPoolExecutor(
-    cacheExecutor.allowCoreThreadTimeOut(true);
+    executor.allowCoreThreadTimeOut(true);
+    return executor;
-  long getCapacity() {
-    long remaining = usage.getCapacity() - reserved;
-    return remaining > 0 ? remaining : 0;
+  @VisibleForTesting
+  public long getCapacity() {
+    if (configuredCapacity < 0) {
+      long remaining = usage.getCapacity() - reserved;
+      return remaining > 0 ? remaining : 0;
+    }
+
+    return configuredCapacity;
+  }
+
+  /**
+   * This function MUST NOT be used outside of tests.
+   *
+   * @param capacity
+   */
+  @VisibleForTesting
+  public void setCapacityForTesting(long capacity) {
+    this.configuredCapacity = capacity;
-  
-  void clearPath(String bpid, File f) throws IOException {
-    getBlockPoolSlice(bpid).clearPath(f);
-  }
-    if (finalizedDir.exists() && FileUtil.list(finalizedDir).length != 0) {
+    if (finalizedDir.exists() && !DatanodeUtil.dirNoFilesRecursive(
+        finalizedDir)) {
-      if (!finalizedDir.delete()) {
+      if (!DatanodeUtil.dirNoFilesRecursive(finalizedDir) ||
+          !FileUtil.fullyDelete(finalizedDir)) {

INS26 INS26 INS40 INS40 INS78 INS83 INS23 INS31 INS31 INS42 INS83 INS39 INS59 INS83 INS43 INS42 MOV44 INS8 INS78 INS83 INS8 INS29 INS78 INS83 INS39 INS42 INS44 INS8 INS42 UPD42 MOV42 UPD42 MOV60 MOV60 INS60 INS21 INS41 INS42 INS25 INS41 INS65 INS65 INS42 INS39 INS42 INS21 INS7 INS43 INS59 INS32 INS42 INS27 MOV8 INS42 INS66 INS42 INS7 INS22 INS38 INS42 INS32 UPD42 MOV42 INS42 MOV14 UPD42 MOV42 UPD42 MOV42 INS9 INS42 INS34 INS22 INS42 INS38 INS52 INS42 INS34 UPD42 MOV42 UPD42 MOV42 INS52 INS42 INS32 INS27 UPD42 MOV42 UPD42 MOV42 MOV42 INS38 INS38 INS32 MOV32 INS42 INS42 INS42 UPD42 UPD42 INS42 DEL42 DEL9 DEL32 DEL39 DEL42 DEL43 DEL42 DEL44 DEL43 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL32 DEL42 DEL22 DEL34 DEL27 DEL38