Reverting initial commit of HDFS-3680 pending further comments.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1415797 13f79535-47bb-0310-9956-ffa450edef68

-import static org.apache.hadoop.hdfs.DFSConfigKeys.DFS_NAMENODE_AUDIT_LOGGERS_KEY;
-import static org.apache.hadoop.hdfs.DFSConfigKeys.DFS_NAMENODE_DEFAULT_AUDIT_LOGGER_NAME;
-import org.apache.hadoop.fs.FileStatus;
-  private boolean isAuditEnabled() {
-    return !isDefaultAuditLogger || auditLog.isInfoEnabled();
-  }
-
-  private void logAuditEvent(UserGroupInformation ugi,
+  private static final void logAuditEvent(UserGroupInformation ugi,
-  private void logAuditEvent(boolean succeeded,
+  private static final void logAuditEvent(boolean succeeded,
-    FileStatus status = null;
-    if (stat != null) {
-      Path symlink = stat.isSymlink() ? new Path(stat.getSymlink()) : null;
-      Path path = dst != null ? new Path(dst) : new Path(src);
-      status = new FileStatus(stat.getLen(), stat.isDir(),
-          stat.getReplication(), stat.getBlockSize(), stat.getModificationTime(),
-          stat.getAccessTime(), stat.getPermission(), stat.getOwner(),
-          stat.getGroup(), symlink, path);
+    final StringBuilder sb = auditBuffer.get();
+    sb.setLength(0);
+    sb.append("allowed=").append(succeeded).append("\t");
+    sb.append("ugi=").append(ugi).append("\t");
+    sb.append("ip=").append(addr).append("\t");
+    sb.append("cmd=").append(cmd).append("\t");
+    sb.append("src=").append(src).append("\t");
+    sb.append("dst=").append(dst).append("\t");
+    if (null == stat) {
+      sb.append("perm=null");
+    } else {
+      sb.append("perm=");
+      sb.append(stat.getOwner()).append(":");
+      sb.append(stat.getGroup()).append(":");
+      sb.append(stat.getPermission());
-    for (AuditLogger logger : auditLoggers) {
-      logger.logAuditEvent(succeeded, ugi.toString(), addr,
-          cmd, src, dst, status);
-    }
+    auditLog.info(sb);
-  // Tracks whether the default audit logger is the only configured audit
-  // logger; this allows isAuditEnabled() to return false in case the
-  // underlying logger is disabled, and avoid some unnecessary work.
-  private final boolean isDefaultAuditLogger;
-  private final List<AuditLogger> auditLoggers;
-      this.auditLoggers = initAuditLoggers(conf);
-      this.isDefaultAuditLogger = auditLoggers.size() == 1 &&
-        auditLoggers.get(0) instanceof DefaultAuditLogger;
+
-    } catch (RuntimeException re) {
-      LOG.error(getClass().getSimpleName() + " initialization failed.", re);
-      close();
-      throw re;
-  private List<AuditLogger> initAuditLoggers(Configuration conf) {
-    // Initialize the custom access loggers if configured.
-    Collection<String> alClasses = conf.getStringCollection(DFS_NAMENODE_AUDIT_LOGGERS_KEY);
-    List<AuditLogger> auditLoggers = Lists.newArrayList();
-    if (alClasses != null && !alClasses.isEmpty()) {
-      for (String className : alClasses) {
-        try {
-          AuditLogger logger;
-          if (DFS_NAMENODE_DEFAULT_AUDIT_LOGGER_NAME.equals(className)) {
-            logger = new DefaultAuditLogger();
-          } else {
-            logger = (AuditLogger) Class.forName(className).newInstance();
-          }
-          logger.initialize(conf);
-          auditLoggers.add(logger);
-        } catch (RuntimeException re) {
-          throw re;
-        } catch (Exception e) {
-          throw new RuntimeException(e);
-        }
-      }
-    }
-
-    // Make sure there is at least one logger installed.
-    if (auditLoggers.isEmpty()) {
-      auditLoggers.add(new DefaultAuditLogger());
-    }
-    return auditLoggers;
-  }
-
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-    if (isAuditEnabled() && isExternalInvocation()) {
+    if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-    if (isAuditEnabled() && isExternalInvocation()) {
+    if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-    if (isAuditEnabled() && isExternalInvocation()) {
+    if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-    if (isAuditEnabled() && isExternalInvocation()) {
+    if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-        if (isAuditEnabled() && isExternalInvocation()) {
+        if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-    if (isAuditEnabled() && isExternalInvocation()) {
+    if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-    if (isFile && isAuditEnabled() && isExternalInvocation()) {
+    if (isFile && auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-    if (isAuditEnabled() && isExternalInvocation()) {
+    if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-    if (isAuditEnabled() && isExternalInvocation()) {
+    if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (status && isAuditEnabled() && isExternalInvocation()) {
+      if (status && auditLog.isInfoEnabled() && isExternalInvocation()) {
-    if (status && isAuditEnabled() && isExternalInvocation()) {
+    if (status && auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-    if (isAuditEnabled() && isExternalInvocation()) {
+    if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-    if (status && isAuditEnabled() && isExternalInvocation()) {
+    if (status && auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-    if (isAuditEnabled() && isExternalInvocation()) {
+    if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-    if (status && isAuditEnabled() && isExternalInvocation()) {
+    if (status && auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-      if (isAuditEnabled() && isExternalInvocation()) {
+      if (auditLog.isInfoEnabled() && isExternalInvocation()) {
-    if (isAuditEnabled()) {
+    if (auditLog.isInfoEnabled()) {
-
-  /**
-   * Default AuditLogger implementation; used when no access logger is
-   * defined in the config file. It can also be explicitly listed in the
-   * config file.
-   */
-  private static class DefaultAuditLogger implements AuditLogger {
-
-    @Override
-    public void initialize(Configuration conf) {
-      // Nothing to do.
-    }
-
-    @Override
-    public void logAuditEvent(boolean succeeded, String userName,
-        InetAddress addr, String cmd, String src, String dst,
-        FileStatus status) {
-      if (auditLog.isInfoEnabled()) {
-        final StringBuilder sb = auditBuffer.get();
-        sb.setLength(0);
-        sb.append("allowed=").append(succeeded).append("\t");
-        sb.append("ugi=").append(userName).append("\t");
-        sb.append("ip=").append(addr).append("\t");
-        sb.append("cmd=").append(cmd).append("\t");
-        sb.append("src=").append(src).append("\t");
-        sb.append("dst=").append(dst).append("\t");
-        if (null == status) {
-          sb.append("perm=null");
-        } else {
-          sb.append("perm=");
-          sb.append(status.getOwner()).append(":");
-          sb.append(status.getGroup()).append(":");
-          sb.append(status.getPermission());
-        }
-        auditLog.info(sb);
-      }
-    }
-
-  }
-

MOV31 INS83 INS83 INS83 UPD83 INS83 MOV44 MOV44 MOV8 UPD27 MOV27 INS8 MOV8 UPD42 INS25 MOV32 MOV25 MOV32 MOV32 MOV32 MOV32 INS42 MOV32 MOV32 MOV32 MOV21 MOV21 INS25 MOV32 MOV21 MOV21 MOV32 MOV42 MOV42 UPD42 INS27 MOV8 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS27 MOV8 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 MOV32 INS32 MOV32 MOV32 MOV32 MOV32 INS42 INS32 MOV32 INS32 MOV32 MOV32 MOV32 MOV32 MOV32 INS42 INS42 MOV32 INS42 UPD42 MOV32 MOV32 INS42 UPD42 MOV32 MOV32 INS42 UPD42 MOV32 MOV32 MOV32 INS42 INS42 INS42 INS42 MOV32 MOV32 MOV32 MOV32 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 MOV32 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL39 DEL42 DEL41 DEL8 DEL31 DEL42 DEL78 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL44 DEL25 DEL8 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL33 DEL16 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL14 DEL42 DEL43 DEL42 DEL14 DEL16 DEL59 DEL60 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL14 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL34 DEL27 DEL42 DEL42 DEL34 DEL32 DEL42 DEL43 DEL62 DEL27 DEL7 DEL21 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL45 DEL27 DEL42 DEL32 DEL21 DEL42 DEL32 DEL21 DEL42 DEL53 DEL8 DEL12 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL43 DEL14 DEL7 DEL21 DEL8 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL11 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL70 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL43 DEL14 DEL32 DEL21 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL42 DEL32 DEL27 DEL25 DEL42 DEL38 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL32 DEL27 DEL25 DEL8 DEL66 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL42 DEL43 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL8 DEL31 DEL55