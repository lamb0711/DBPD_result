YARN-9139. Simplify initializer code of GpuDiscoverer. Contributed by Szilard Nemeth.

+import com.google.common.collect.Sets;
-    if (null == pathOfGpuBinary) {
-      throw new YarnException(
-          "Failed to find GPU discovery executable, please double check "
-              + YarnConfiguration.NM_GPU_PATH_TO_EXEC + " setting.");
-    }
-
-  public synchronized void initialize(Configuration conf) {
-    this.conf = conf;
+  public synchronized void initialize(Configuration config)
+      throws YarnException {
+    this.conf = config;
-    String pathToExecutable = conf.get(YarnConfiguration.NM_GPU_PATH_TO_EXEC,
-        YarnConfiguration.DEFAULT_NM_GPU_PATH_TO_EXEC);
-    if (pathToExecutable.isEmpty()) {
-      pathToExecutable = DEFAULT_BINARY_NAME;
-    }
-
-    File binaryPath = new File(pathToExecutable);
-    if (!binaryPath.exists()) {
-      // When binary not exist, use default setting.
-      boolean found = false;
-      for (String dir : DEFAULT_BINARY_SEARCH_DIRS) {
-        binaryPath = new File(dir, DEFAULT_BINARY_NAME);
-        if (binaryPath.exists()) {
-          found = true;
-          pathOfGpuBinary = binaryPath.getAbsolutePath();
-          break;
-        }
-      }
-
-      if (!found) {
-        LOG.warn("Failed to locate binary at:" + binaryPath.getAbsolutePath()
-            + ", please double check [" + YarnConfiguration.NM_GPU_PATH_TO_EXEC
-            + "] setting. Now use " + "default binary:" + DEFAULT_BINARY_NAME);
-      }
-    } else{
-      // If path specified by user is a directory, use
-      if (binaryPath.isDirectory()) {
-        binaryPath = new File(binaryPath, DEFAULT_BINARY_NAME);
-        LOG.warn("Specified path is a directory, use " + DEFAULT_BINARY_NAME
-            + " under the directory, updated path-to-executable:" + binaryPath
-            .getAbsolutePath());
-      }
-      // Validated
-      pathOfGpuBinary = binaryPath.getAbsolutePath();
-    }
+    lookUpAutoDiscoveryBinary(config);
-      LOG.info(info.toString());
+      LOG.info("Discovered GPU information: " + info.toString());
+  private void lookUpAutoDiscoveryBinary(Configuration config)
+      throws YarnException {
+    String configuredBinaryPath = config.get(
+        YarnConfiguration.NM_GPU_PATH_TO_EXEC, DEFAULT_BINARY_NAME);
+    if (configuredBinaryPath.isEmpty()) {
+      configuredBinaryPath = DEFAULT_BINARY_NAME;
+    }
+
+    File binaryPath;
+    File configuredBinaryFile = new File(configuredBinaryPath);
+    if (!configuredBinaryFile.exists()) {
+      binaryPath = lookupBinaryInDefaultDirs();
+    } else if (configuredBinaryFile.isDirectory()) {
+      binaryPath = handleConfiguredBinaryPathIsDirectory(configuredBinaryFile);
+    } else {
+      binaryPath = configuredBinaryFile;
+    }
+    pathOfGpuBinary = binaryPath.getAbsolutePath();
+  }
+
+  private File handleConfiguredBinaryPathIsDirectory(File configuredBinaryFile)
+      throws YarnException {
+    File binaryPath = new File(configuredBinaryFile, DEFAULT_BINARY_NAME);
+    if (!binaryPath.exists()) {
+      throw new YarnException("Failed to find GPU discovery executable, " +
+          "please double check "+ YarnConfiguration.NM_GPU_PATH_TO_EXEC +
+          " setting. The setting points to a directory but " +
+          "no file found in the directory with name:" + DEFAULT_BINARY_NAME);
+    } else {
+      LOG.warn("Specified path is a directory, use " + DEFAULT_BINARY_NAME
+          + " under the directory, updated path-to-executable:"
+          + binaryPath.getAbsolutePath());
+    }
+    return binaryPath;
+  }
+
+  private File lookupBinaryInDefaultDirs() throws YarnException {
+    final File lookedUpBinary = lookupBinaryInDefaultDirsInternal();
+    if (lookedUpBinary == null) {
+      throw new YarnException("Failed to find GPU discovery executable, " +
+          "please double check " + YarnConfiguration.NM_GPU_PATH_TO_EXEC +
+          " setting. Also tried to find the executable " +
+          "in the default directories: " + DEFAULT_BINARY_SEARCH_DIRS);
+    }
+    return lookedUpBinary;
+  }
+
+  private File lookupBinaryInDefaultDirsInternal() {
+    Set<String> triedBinaryPaths = Sets.newHashSet();
+    for (String dir : DEFAULT_BINARY_SEARCH_DIRS) {
+      File binaryPath = new File(dir, DEFAULT_BINARY_NAME);
+      if (binaryPath.exists()) {
+        return binaryPath;
+      } else {
+        triedBinaryPaths.add(binaryPath.getAbsolutePath());
+      }
+    }
+    LOG.warn("Failed to locate GPU device discovery binary, tried paths: "
+        + triedBinaryPaths + "! Please double check the value of config "
+        + YarnConfiguration.NM_GPU_PATH_TO_EXEC +
+        ". Using default binary: " + DEFAULT_BINARY_NAME);
+
+    return null;
+  }
+

INS26 INS40 INS31 INS31 INS31 INS31 INS31 MOV83 MOV83 MOV39 MOV42 MOV44 INS43 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS83 INS43 INS42 INS44 INS43 INS8 INS83 INS43 INS42 INS43 INS8 INS83 INS43 INS42 INS8 UPD42 INS42 MOV21 MOV21 INS21 MOV54 INS43 INS42 INS42 MOV60 MOV25 MOV60 MOV60 INS25 MOV21 INS42 INS43 INS42 INS42 INS60 MOV25 INS41 INS42 INS42 INS60 INS25 INS41 INS42 INS60 INS70 MOV21 INS41 INS32 INS42 MOV43 MOV43 INS38 INS8 INS25 INS42 INS43 INS59 MOV38 INS8 INS42 INS83 INS43 INS59 INS27 INS8 INS42 INS74 INS59 MOV44 INS42 INS8 INS33 UPD42 INS42 INS42 UPD42 UPD42 UPD42 MOV14 INS32 MOV21 INS32 INS8 INS8 INS42 INS42 INS14 INS53 INS42 INS42 INS32 INS42 INS33 INS53 INS43 INS43 INS42 INS32 INS60 INS25 UPD42 INS42 UPD42 INS42 INS42 INS42 INS42 MOV21 MOV21 INS43 INS42 INS42 INS14 INS42 INS14 INS42 INS42 INS42 INS42 INS43 INS59 MOV32 INS8 INS8 UPD45 INS42 UPD45 UPD45 INS27 UPD42 INS32 INS42 MOV43 INS27 INS43 INS27 INS42 INS42 MOV14 INS41 INS21 INS45 MOV32 INS42 UPD42 INS32 INS42 INS42 INS27 INS40 INS45 INS45 INS42 INS42 INS27 INS40 INS45 INS45 INS42 INS42 INS32 INS42 INS42 INS45 INS45 INS45 INS45 INS42 INS42 MOV32 DEL33 DEL42 DEL27 DEL45 DEL40 DEL45 DEL27 DEL14 DEL53 DEL8 DEL25 DEL40 DEL42 DEL14 DEL39 DEL42 DEL9 DEL9 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL7 DEL21 DEL45 DEL42 DEL10 DEL8 DEL25 DEL8 DEL70 DEL42 DEL38 DEL8 DEL25 DEL8 DEL8 DEL25 DEL8 DEL31