HDFS-4363. Combine PBHelper and HdfsProtoUtil and remove redundant methods. Contributed by Suresh Srinivas.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431088 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.EOFException;
+import java.io.IOException;
+import java.io.InputStream;
-import org.apache.hadoop.hdfs.protocol.HdfsProtoUtil;
+import org.apache.hadoop.hdfs.protocol.proto.HdfsProtos;
+import org.apache.hadoop.hdfs.util.ExactSizeInputStream;
+import org.apache.hadoop.util.DataChecksum;
+import com.google.common.collect.Lists;
+import com.google.protobuf.CodedInputStream;
- * Utilities for converting protobuf classes to and from implementation classes.
+ * Utilities for converting protobuf classes to and from implementation classes
+ * and other helper utilities to help in dealing with protobuf.
-    if (did == null) return null;
+    if (did == null)
+      return null;
+
+  public static List<? extends HdfsProtos.DatanodeInfoProto> convert(
+      DatanodeInfo[] dnInfos) {
+    return convert(dnInfos, 0);
+  }
-  static public DatanodeInfoProto[] convert(DatanodeInfo[] di) {
-    if (di == null) return null;
-    DatanodeInfoProto[] result = new DatanodeInfoProto[di.length];
-    for (int i = 0; i < di.length; i++) {
-      result[i] = PBHelper.convertDatanodeInfo(di[i]);
+  /**
+   * Copy from {@code dnInfos} to a target of list of same size starting at
+   * {@code startIdx}.
+   */
+  public static List<? extends HdfsProtos.DatanodeInfoProto> convert(
+      DatanodeInfo[] dnInfos, int startIdx) {
+    if (dnInfos == null)
+      return null;
+    ArrayList<HdfsProtos.DatanodeInfoProto> protos = Lists
+        .newArrayListWithCapacity(dnInfos.length);
+    for (int i = startIdx; i < dnInfos.length; i++) {
+      protos.add(convert(dnInfos[i]));
-    return result;
+    return protos;
-          .addAllDatanodes(Arrays.asList(PBHelper.convert(targets[i]))).build();
+          .addAllDatanodes(PBHelper.convert(targets[i])).build();
-        HdfsProtoUtil.fromProto(fs.getChecksumType()));
+        PBHelper.convert(fs.getChecksumType()));
-      .setChecksumType(HdfsProtoUtil.toProto(fs.getChecksumType()))
+      .setChecksumType(PBHelper.convert(fs.getChecksumType()))
+
+  public static DataChecksum.Type convert(HdfsProtos.ChecksumTypeProto type) {
+    return DataChecksum.Type.valueOf(type.getNumber());
+  }
+
+  public static HdfsProtos.ChecksumTypeProto convert(DataChecksum.Type type) {
+    return HdfsProtos.ChecksumTypeProto.valueOf(type.id);
+  }
+
+  public static InputStream vintPrefixed(final InputStream input)
+      throws IOException {
+    final int firstByte = input.read();
+    if (firstByte == -1) {
+      throw new EOFException("Premature EOF: no length prefix available");
+    }
+
+    int size = CodedInputStream.readRawVarint32(firstByte, input);
+    assert size >= 0;
+    return new ExactSizeInputStream(input, size);
+  }

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 UPD40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS83 MOV83 INS74 INS42 MOV44 INS8 INS29 MOV83 INS83 INS74 INS42 INS44 INS44 MOV8 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS43 INS8 UPD66 INS66 INS43 INS76 UPD42 INS41 INS65 INS43 INS76 INS5 INS42 INS39 INS42 INS40 INS43 INS42 INS41 INS40 INS43 INS42 INS41 INS42 INS83 INS43 INS42 INS42 INS60 INS25 INS60 INS6 INS41 INS42 INS43 INS32 INS66 INS65 INS66 INS65 INS66 INS42 INS43 UPD43 MOV43 MOV85 INS74 UPD42 INS40 INS32 INS40 INS32 INS42 INS83 INS39 INS59 INS27 INS8 INS39 INS59 INS27 INS14 INS40 INS42 INS42 INS34 INS66 INS66 INS40 UPD42 UPD42 INS43 INS43 UPD42 INS32 UPD40 INS32 INS40 INS42 INS32 INS40 INS42 INS40 INS42 INS32 INS42 INS38 INS53 INS42 INS32 INS42 INS34 INS43 INS42 INS42 UPD42 MOV42 INS40 INS42 INS42 INS40 INS42 INS32 INS42 INS42 MOV32 MOV32 INS42 INS42 INS42 INS42 INS34 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 MOV32 MOV42 UPD42 UPD42 INS43 INS45 UPD42 MOV42 MOV2 UPD42 INS42 UPD42 MOV32 UPD42 DEL43 DEL85 DEL5 DEL42 DEL43 DEL85 DEL5 DEL40 DEL3 DEL34 DEL42 DEL42 DEL2 DEL42 DEL32 DEL7 DEL5 DEL42 DEL31 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32