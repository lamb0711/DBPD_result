YARN-5552. Add Builder methods for common yarn API records. (Tao Jie via wangda)

+import org.apache.hadoop.classification.InterfaceStability.Unstable;
-    return newInstance(priority, hostName, capability, numContainers, true);
+    return ResourceRequest.newBuilder().priority(priority)
+        .resourceName(hostName).capability(capability)
+        .numContainers(numContainers).build();
-    return newInstance(priority, hostName, capability, numContainers,
-        relaxLocality, null);
+    return ResourceRequest.newBuilder().priority(priority)
+        .resourceName(hostName).capability(capability)
+        .numContainers(numContainers).relaxLocality(relaxLocality).build();
-    return newInstance(priority, hostName, capability, numContainers,
-        relaxLocality, labelExpression, ExecutionTypeRequest.newInstance());
+    return ResourceRequest.newBuilder().priority(priority)
+        .resourceName(hostName).capability(capability)
+        .numContainers(numContainers).relaxLocality(relaxLocality)
+        .nodeLabelExpression(labelExpression).build();
-    ResourceRequest request = Records.newRecord(ResourceRequest.class);
-    request.setPriority(priority);
-    request.setResourceName(hostName);
-    request.setCapability(capability);
-    request.setNumContainers(numContainers);
-    request.setRelaxLocality(relaxLocality);
-    request.setNodeLabelExpression(labelExpression);
-    request.setExecutionTypeRequest(executionTypeRequest);
-    return request;
+    return ResourceRequest.newBuilder().priority(priority)
+        .resourceName(hostName).capability(capability)
+        .numContainers(numContainers).relaxLocality(relaxLocality)
+        .nodeLabelExpression(labelExpression)
+        .executionTypeRequest(executionTypeRequest).build();
+  }
+
+  @Public
+  @Unstable
+  public static ResourceRequestBuilder newBuilder() {
+    return new ResourceRequestBuilder();
+  }
+
+  /**
+   * Class to construct instances of {@link ResourceRequest} with specific
+   * options.
+   */
+  @Public
+  @Stable
+  public static final class ResourceRequestBuilder {
+    private ResourceRequest resourceRequest =
+        Records.newRecord(ResourceRequest.class);
+
+    private ResourceRequestBuilder() {
+      resourceRequest.setResourceName(ANY);
+      resourceRequest.setNumContainers(1);
+      resourceRequest.setPriority(Priority.newInstance(0));
+      resourceRequest.setRelaxLocality(true);
+      resourceRequest.setExecutionTypeRequest(
+          ExecutionTypeRequest.newInstance());
+    }
+
+    /**
+     * Set the <code>priority</code> of the request.
+     * @see ResourceRequest#setPriority(Priority)
+     * @param priority <code>priority</code> of the request
+     * @return {@link ResourceRequestBuilder}
+     */
+    @Public
+    @Stable
+    public ResourceRequestBuilder priority(Priority priority) {
+      resourceRequest.setPriority(priority);
+      return this;
+    }
+
+    /**
+     * Set the <code>resourceName</code> of the request.
+     * @see ResourceRequest#setResourceName(String)
+     * @param resourceName <code>resourceName</code> of the request
+     * @return {@link ResourceRequestBuilder}
+     */
+    @Public
+    @Stable
+    public ResourceRequestBuilder resourceName(String resourceName) {
+      resourceRequest.setResourceName(resourceName);
+      return this;
+    }
+
+    /**
+     * Set the <code>capability</code> of the request.
+     * @see ResourceRequest#setCapability(Resource)
+     * @param capability <code>capability</code> of the request
+     * @return {@link ResourceRequestBuilder}
+     */
+    @Public
+    @Stable
+    public ResourceRequestBuilder capability(Resource capability) {
+      resourceRequest.setCapability(capability);
+      return this;
+    }
+
+    /**
+     * Set the <code>numContainers</code> of the request.
+     * @see ResourceRequest#setNumContainers(int)
+     * @param numContainers <code>numContainers</code> of the request
+     * @return {@link ResourceRequestBuilder}
+     */
+    @Public
+    @Stable
+    public ResourceRequestBuilder numContainers(int numContainers) {
+      resourceRequest.setNumContainers(numContainers);
+      return this;
+    }
+
+    /**
+     * Set the <code>relaxLocality</code> of the request.
+     * @see ResourceRequest#setRelaxLocality(boolean)
+     * @param relaxLocality <code>relaxLocality</code> of the request
+     * @return {@link ResourceRequestBuilder}
+     */
+    @Public
+    @Stable
+    public ResourceRequestBuilder relaxLocality(boolean relaxLocality) {
+      resourceRequest.setRelaxLocality(relaxLocality);
+      return this;
+    }
+
+    /**
+     * Set the <code>nodeLabelExpression</code> of the request.
+     * @see ResourceRequest#setNodeLabelExpression(String)
+     * @param nodeLabelExpression
+     *          <code>nodeLabelExpression</code> of the request
+     * @return {@link ResourceRequestBuilder}
+     */
+    @Public
+    @Evolving
+    public ResourceRequestBuilder nodeLabelExpression(
+        String nodeLabelExpression) {
+      resourceRequest.setNodeLabelExpression(nodeLabelExpression);
+      return this;
+    }
+
+    /**
+     * Set the <code>executionTypeRequest</code> of the request.
+     * @see ResourceRequest#setExecutionTypeRequest(
+     * ExecutionTypeRequest)
+     * @param executionTypeRequest
+     *          <code>executionTypeRequest</code> of the request
+     * @return {@link ResourceRequestBuilder}
+     */
+    @Public
+    @Evolving
+    public ResourceRequestBuilder executionTypeRequest(
+        ExecutionTypeRequest executionTypeRequest) {
+      resourceRequest.setExecutionTypeRequest(executionTypeRequest);
+      return this;
+    }
+
+    /**
+     * Set the <code>allocationRequestId</code> of the request.
+     * @see ResourceRequest#setAllocationRequestId(long)
+     * @param allocationRequestId
+     *          <code>allocationRequestId</code> of the request
+     * @return {@link ResourceRequestBuilder}
+     */
+    @Public
+    @Evolving
+    public ResourceRequestBuilder allocationRequestId(
+        long allocationRequestId) {
+      resourceRequest.setAllocationRequestId(allocationRequestId);
+      return this;
+    }
+
+    /**
+     * Return generated {@link ResourceRequest} object.
+     * @return {@link ResourceRequest}
+     */
+    @Public
+    @Stable
+    public ResourceRequest build() {
+      return resourceRequest;
+    }

INS26 INS40 INS31 INS31 INS55 INS78 MOV43 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 INS78 MOV78 MOV83 MOV83 MOV43 MOV42 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 INS8 INS78 INS78 INS83 INS83 INS43 INS42 INS8 INS29 MOV78 MOV78 INS83 INS83 INS83 INS42 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS42 INS42 INS41 INS42 INS42 INS42 INS41 INS65 INS83 MOV43 MOV59 INS83 INS42 INS8 INS29 INS78 INS78 INS83 INS43 INS42 INS44 INS8 INS29 INS78 INS78 INS83 INS43 INS42 INS44 INS8 INS29 INS78 INS78 INS83 INS43 INS42 INS44 INS8 INS29 INS78 INS78 INS83 INS43 INS42 INS44 INS8 INS29 INS78 INS78 INS83 INS43 INS42 INS44 INS8 INS29 INS78 INS78 INS83 INS43 INS42 INS44 INS8 INS29 INS78 INS78 INS83 INS43 INS42 INS44 INS8 INS29 INS78 INS78 INS83 INS43 INS42 INS44 INS8 INS29 INS78 INS78 INS83 INS43 INS42 INS8 INS32 INS32 INS32 INS32 INS14 INS66 INS65 INS66 INS66 UPD42 INS21 INS21 INS21 INS21 INS21 INS65 INS65 INS65 INS65 INS42 INS42 INS42 INS43 INS42 MOV21 INS41 INS65 INS65 INS65 INS65 INS42 INS42 INS42 INS43 INS42 MOV21 INS41 INS65 INS65 INS65 INS65 INS42 INS42 INS42 INS43 INS42 MOV21 INS41 INS65 INS65 INS65 INS65 INS42 INS42 INS42 INS39 INS42 MOV21 INS41 INS65 INS65 INS65 INS65 INS42 INS42 INS42 INS39 INS42 MOV21 INS41 INS65 INS65 INS65 INS65 INS42 INS42 INS42 INS43 INS42 MOV21 INS41 INS65 INS65 INS65 INS65 INS42 INS42 INS42 INS43 INS42 MOV21 INS41 INS65 INS65 INS65 INS65 INS42 INS42 INS42 INS39 INS42 INS21 INS41 INS65 INS65 INS42 INS42 INS42 MOV41 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS43 INS42 INS32 INS32 INS32 INS32 INS32 INS66 INS68 INS42 INS66 INS66 INS65 INS42 INS52 INS66 INS68 INS42 INS66 INS66 INS65 INS42 INS52 INS66 INS68 INS42 INS66 INS66 INS65 INS42 INS52 INS66 INS68 INS42 INS66 INS66 INS65 INS52 INS66 INS68 INS42 INS66 INS66 INS65 INS52 INS66 INS68 INS42 INS66 INS66 INS65 INS42 INS52 INS66 INS68 INS42 INS66 INS66 INS65 INS42 INS52 INS66 INS68 INS42 INS66 INS66 INS65 INS32 INS52 INS66 INS65 INS66 INS66 INS65 UPD42 INS32 MOV42 INS42 INS32 MOV42 INS42 INS32 INS42 MOV42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS42 MOV32 INS42 INS42 INS69 INS42 UPD42 INS42 INS42 INS69 INS42 UPD42 UPD42 INS42 INS42 INS69 INS42 UPD42 INS42 INS42 INS69 INS42 UPD42 INS42 INS42 INS69 INS42 UPD42 INS42 INS42 INS69 INS42 UPD42 UPD42 INS42 INS42 INS69 INS42 UPD42 INS42 INS42 INS69 INS42 INS42 INS42 INS42 INS42 INS42 INS32 MOV42 INS42 INS32 MOV42 INS42 INS32 MOV42 INS42 INS32 INS42 INS42 INS42 INS42 INS34 INS43 INS43 INS43 INS39 INS39 INS43 INS43 INS39 INS32 INS42 MOV42 INS32 MOV42 INS42 INS32 MOV42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 MOV42 INS42 INS32 INS42 MOV42 INS32 MOV42 INS42 INS32 INS42 INS42 INS42 UPD42 MOV42 INS32 MOV42 INS42 INS32 INS42 MOV42 INS32 INS42 INS42 INS42 UPD42 MOV42 INS32 MOV42 INS42 INS32 INS42 INS42 INS42 UPD42 MOV42 INS32 INS42 INS42 INS42 INS42 DEL9 DEL32 DEL33 DEL32 DEL32 DEL60 DEL8 DEL31