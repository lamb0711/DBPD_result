YARN-3632. Ordering policy should be allowed to reorder an application when demand changes. Contributed by Craig Welch

+  protected Map<String, S> entitiesToReorder = new HashMap<String, S>();
+    reorderScheduleEntities();
+    reorderScheduleEntities();
+  protected void reorderScheduleEntities() {
+    synchronized (entitiesToReorder) {
+      for (Map.Entry<String, S> entry :
+          entitiesToReorder.entrySet()) {
+        reorderSchedulableEntity(entry.getValue());
+      }
+      entitiesToReorder.clear();
+    }
+  }
+
+  protected void entityRequiresReordering(S schedulableEntity) {
+    synchronized (entitiesToReorder) {
+      entitiesToReorder.put(schedulableEntity.getId(), schedulableEntity);
+    }
+  }
+
+    synchronized (entitiesToReorder) {
+      entitiesToReorder.remove(s.getId());
+    }
+  public abstract void demandUpdated(S schedulableEntity);
+
+  @Override

INS23 INS31 INS31 INS31 INS83 INS74 INS59 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS83 INS39 INS42 INS44 INS43 INS43 INS43 INS42 INS14 INS21 INS21 INS51 INS43 INS42 INS51 INS51 INS42 INS43 INS42 INS42 INS42 INS42 INS74 INS32 INS32 INS42 INS8 INS42 INS42 INS8 INS42 INS8 INS42 INS43 INS43 INS43 INS42 INS42 INS70 INS21 INS21 INS21 INS42 INS42 INS42 INS44 INS32 INS8 INS32 INS32 INS32 INS74 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS43 INS43 INS43 INS32 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS42 INS42