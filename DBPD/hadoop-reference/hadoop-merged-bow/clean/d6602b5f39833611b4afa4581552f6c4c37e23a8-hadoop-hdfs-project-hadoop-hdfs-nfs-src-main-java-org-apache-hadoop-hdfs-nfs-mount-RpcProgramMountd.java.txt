HDFS-11575. Supporting HDFS NFS gateway with Federated HDFS. Contributed by Mukul Kumar Singh.

+import java.net.URI;
+import java.util.HashMap;
+import org.apache.hadoop.fs.FileSystem;
-import org.apache.hadoop.hdfs.DFSUtilClient;
+import org.apache.hadoop.hdfs.nfs.nfs3.Nfs3Utils;
-  private final DFSClient dfsClient;
-  
-  /** Synchronized list */
+  /** Synchronized list. */
-  /** List that is unmodifiable */
-  private final List<String> exports;
-  
+  /** List that is unmodifiable. */
+  private final HashMap<String, URI> exports;
+  private final NfsConfiguration config;
-    exports = new ArrayList<String>();
-    exports.add(config.get(NfsConfigKeys.DFS_NFS_EXPORT_POINT_KEY,
-        NfsConfigKeys.DFS_NFS_EXPORT_POINT_DEFAULT));
+    this.config = config;
+    exports = new HashMap<>();
+    addExports();
-    this.dfsClient = new DFSClient(DFSUtilClient.getNNAddress(config), config);
-  
+
+  private void addExports() throws IOException {
+    FileSystem fs = FileSystem.get(config);
+    String[] exportsPath =
+        config.getStrings(NfsConfigKeys.DFS_NFS_EXPORT_POINT_KEY,
+            NfsConfigKeys.DFS_NFS_EXPORT_POINT_DEFAULT);
+    for (String exportPath : exportsPath) {
+      URI exportURI = Nfs3Utils.getResolvedURI(fs, exportPath);
+      LOG.info("FS:" + fs.getScheme() + " adding export Path:" + exportPath +
+          " with URI: " + exportURI.toString());
+      exports.put(exportPath, exportURI);
+    }
+  }
+
-    if (!exports.contains(path)) {
+    URI exportURI = exports.get(path);
+    if (exportURI == null) {
+    DFSClient dfsClient = null;
+    try {
+      dfsClient = new DFSClient(exportURI, config);
+    } catch (Exception e) {
+      LOG.error("Can't get handle for export:" + path, e);
+      MountResponse.writeMNTResponse(Nfs3Status.NFS3ERR_NOENT, out, xid, null);
+      return out;
+    }
+
-      HdfsFileStatus exFileStatus = dfsClient.getFileInfo(path);
-      
-      handle = new FileHandle(exFileStatus.getFileId());
+      HdfsFileStatus exFileStatus = dfsClient.getFileInfo(exportURI.getPath());
+
+      handle = new FileHandle(exFileStatus.getFileId(),
+                              Nfs3Utils.getNamenodeId(config, exportURI));
-    LOG.info("Giving handle (fileId:" + handle.getFileId()
+    LOG.info("Giving handle (fileHandle:" + handle.dumpFileHandle()
+        + " file URI: " + exportURI
-    InetAddress client = ((InetSocketAddress) info.remoteAddress()).getAddress();
+    InetAddress client =
+        ((InetSocketAddress) info.remoteAddress()).getAddress();
-      // Currently only support one NFS export
+      // Currently only support one NFS export per namenode
-        hostsMatchers.add(hostsMatcher);
-        out = MountResponse.writeExportList(out, xid, exports, hostsMatchers);
+        List exportsList = getExports();
+        for (int i = 0; i < exportsList.size(); i++) {
+          hostsMatchers.add(hostsMatcher);
+        }
+        out = MountResponse.writeExportList(out, xid,
+                                            exportsList, hostsMatchers);
-          RpcAcceptedReply.AcceptState.PROC_UNAVAIL, new VerifierNone()).write(
-          out);
+            RpcAcceptedReply.AcceptState.PROC_UNAVAIL, new VerifierNone())
+            .write(out);
-    ChannelBuffer buf = ChannelBuffers.wrappedBuffer(out.asReadOnlyWrap().buffer());
+    ChannelBuffer buf =
+        ChannelBuffers.wrappedBuffer(out.asReadOnlyWrap().buffer());
-    return this.exports;
+    return new ArrayList<>(this.exports.keySet());

MOV26 INS26 INS26 INS26 MOV23 INS40 INS40 INS40 UPD40 INS23 INS31 INS29 INS74 MOV59 MOV83 MOV83 INS43 INS59 MOV21 INS83 INS39 INS42 INS43 INS8 INS65 INS43 MOV43 INS43 UPD42 MOV42 INS42 INS42 INS60 INS60 INS70 INS60 INS60 INS54 UPD66 INS66 INS42 INS42 INS7 INS32 INS43 INS59 INS5 INS59 INS44 INS42 INS8 INS43 INS59 INS27 MOV43 INS59 INS8 INS12 MOV14 INS22 INS42 INS42 INS14 UPD42 MOV42 INS42 INS42 INS32 INS43 INS85 INS42 INS32 INS43 INS42 INS60 INS21 INS21 INS42 INS42 INS32 INS42 INS33 INS42 INS33 INS21 INS44 INS8 UPD74 INS32 INS52 INS42 INS74 INS42 INS42 INS42 MOV42 INS42 INS42 INS40 INS40 INS42 INS43 INS59 INS32 INS32 INS42 INS42 INS42 INS7 INS43 INS42 INS21 INS21 INS41 UPD45 INS45 INS42 MOV22 INS42 INS43 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS32 INS32 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS45 INS42 INS45 INS32 MOV43 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS40 INS42 INS42 INS33 INS32 INS32 INS42 INS42 INS42 INS42 INS45 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS8 INS60 INS24 INS21 INS43 INS59 INS58 INS27 INS37 MOV8 INS7 INS42 INS42 INS32 INS39 INS59 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL59 DEL66 DEL65 DEL29 DEL43 DEL43 DEL74 DEL23 DEL42 DEL42 DEL42 DEL42 DEL42 DEL40 DEL40 DEL32 DEL32 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL42 DEL14 DEL7 DEL42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21