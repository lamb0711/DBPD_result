Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1170378 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.classification.InterfaceAudience.Private;
+import org.apache.hadoop.classification.InterfaceAudience.Public;
+import org.apache.hadoop.classification.InterfaceStability.Stable;
+import org.apache.hadoop.classification.InterfaceStability.Unstable;
+import org.apache.hadoop.yarn.api.AMRMProtocol;
+import org.apache.hadoop.yarn.api.ContainerManager;
+/**
+ * <p><code>Container</code> represents an allocated resource in the cluster.
+ * </p>
+ * 
+ * <p>The <code>ResourceManager</code> is the sole authority to allocate any
+ * <code>Container</code> to applications. The allocated <code>Container</code>
+ * is always on a single node and has a unique {@link ContainerId}. It has
+ * a specific amount of {@link Resource} allocated.</p>
+ * 
+ * <p>It includes details such as:
+ *   <ul>
+ *     <li>{@link ContainerId} for the container, which is globally unique.</li>
+ *     <li>
+ *       {@link NodeId} of the node on which identifies the node on which it
+ *       is allocated.
+ *     </li>
+ *     <li>HTTP uri of the node.</li>
+ *     <li>{@link Resource} allocated to the container.</li>
+ *     <li>{@link ContainerState} of the container.</li>
+ *     <li>
+ *       {@link ContainerToken} of the container, used to securely verify 
+ *       authenticity of the allocation. 
+ *     </li>
+ *     <li>{@link ContainerStatus} of the container.</li>
+ *   </ul>
+ * </p>
+ * 
+ * <p>Typically, an <code>ApplicationMaster</code> receives the 
+ * <code>Container</code> from the <code>ResourceManager</code> during
+ * resource-negotiation and then talks to the <code>NodManager</code> to 
+ * start/stop containers.</p>
+ * 
+ * @see AMRMProtocol#allocate(org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest)
+ * @see ContainerManager#startContainer(org.apache.hadoop.yarn.api.protocolrecords.StartContainerRequest)
+ * @see ContainerManager#stopContainer(org.apache.hadoop.yarn.api.protocolrecords.StopContainerRequest)
+ */
+@Public
+@Stable
+  /**
+   * Get the globally unique identifier for the container.
+   * @return globally unique identifier for the container
+   */
+  @Public
+  @Stable
+  
+  @Private
+  @Unstable
+  void setId(ContainerId id);
+
+  /**
+   * Get the identifier of the node on which the container is allocated.
+   * @return identifier of the node on which the container is allocated
+   */
+  @Public
+  @Stable
+  
+  @Private
+  @Unstable
+  void setNodeId(NodeId nodeId);
+  
+  /**
+   * Get the http uri of the node on which the container is allocated.
+   * @return http uri of the node on which the container is allocated
+   */
+  @Public
+  @Stable
+  
+  @Private
+  @Unstable
+  void setNodeHttpAddress(String nodeHttpAddress);
+  
+  /**
+   * Get the <code>Resource</code> allocated to the container.
+   * @return <code>Resource</code> allocated to the container
+   */
+  @Public
+  @Stable
+  
+  @Private
+  @Unstable
+  void setResource(Resource resource);
+  
+  /**
+   * Get the current <code>ContainerState</code> of the container.
+   * @return current <code>ContainerState</code> of the container
+   */
+  @Public
+  @Stable
+  
+  @Private
+  @Unstable
+  void setState(ContainerState state);
+  
+  /**
+   * Get the <code>ContainerToken</code> for the container.
+   * @return <code>ContainerToken</code> for the container
+   */
+  @Public
+  @Stable
+  
+  @Private
+  @Unstable
+  void setContainerToken(ContainerToken containerToken);
+  
+  /**
+   * Get the <code>ContainerStatus</code> of the container.
+   * @return <code>ContainerStatus</code> of the container
+   */
+  @Public
+  @Stable
-  void setId(ContainerId id);
-  void setNodeId(NodeId nodeId);
-  void setNodeHttpAddress(String nodeHttpAddress);
-  void setResource(Resource resource);
-  void setState(ContainerState state);
-  void setContainerToken(ContainerToken containerToken);
+  @Private
+  @Unstable

INS26 INS26 INS26 INS26 INS26 INS26 MOV31 MOV31 MOV31 MOV31 MOV31 MOV31 INS40 INS40 INS40 INS40 INS40 INS40 INS29 INS78 INS78 INS65 INS65 INS65 INS65 INS42 INS42 INS29 INS78 INS78 INS78 INS78 INS29 INS78 INS78 INS78 INS78 INS29 INS78 INS78 INS78 INS78 INS29 INS78 INS78 INS78 INS78 INS29 INS78 INS78 INS78 INS78 INS29 INS78 INS78 INS78 INS78 INS29 INS78 INS78 INS78 INS78 INS66 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS68 INS68 INS68 INS65 INS65 INS42 INS42 INS42 INS42 INS65 INS65 INS42 INS42 INS42 INS42 INS65 INS65 INS42 INS42 INS42 INS42 INS65 INS65 INS42 INS42 INS42 INS42 INS65 INS65 INS42 INS42 INS42 INS42 INS65 INS65 INS42 INS42 INS42 INS42 INS65 INS65 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS69 INS42 INS42 INS69 INS42 INS42 INS69 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS43 INS43 INS43 INS40 INS40 INS40