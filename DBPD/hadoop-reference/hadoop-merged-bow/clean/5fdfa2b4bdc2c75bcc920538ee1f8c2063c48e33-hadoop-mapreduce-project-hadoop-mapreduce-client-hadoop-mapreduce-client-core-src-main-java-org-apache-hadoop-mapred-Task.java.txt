MAPREDUCE-3822. Changed FS counter computation to use all occurences of the same FS scheme, instead of randomly using one. (Contributed by Mahadev Konar)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241721 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
-  protected static Statistics getFsStatistics(Path path, Configuration conf) throws IOException {
-    Statistics matchedStats = null;
+  protected static List<Statistics> getFsStatistics(Path path, Configuration conf) throws IOException {
+    List<Statistics> matchedStats = new ArrayList<FileSystem.Statistics>();
-        matchedStats = stats;
-        break;
+        matchedStats.add(stats);
-    private FileSystem.Statistics stats;
+    private List<FileSystem.Statistics> stats;
-    
-    FileSystemStatisticUpdater(FileSystem.Statistics stats) {
+    private String scheme;
+    FileSystemStatisticUpdater(List<FileSystem.Statistics> stats, String scheme) {
+      this.scheme = scheme;
-      String scheme = stats.getScheme();
-      readBytesCounter.setValue(stats.getBytesRead());
-      writeBytesCounter.setValue(stats.getBytesWritten());
-      readOpsCounter.setValue(stats.getReadOps());
-      largeReadOpsCounter.setValue(stats.getLargeReadOps());
-      writeOpsCounter.setValue(stats.getWriteOps());
+      long readBytes = 0;
+      long writeBytes = 0;
+      long readOps = 0;
+      long largeReadOps = 0;
+      long writeOps = 0;
+      for (FileSystem.Statistics stat: stats) {
+        readBytes = readBytes + stat.getBytesRead();
+        writeBytes = writeBytes + stat.getBytesWritten();
+        readOps = readOps + stat.getReadOps();
+        largeReadOps = largeReadOps + stat.getLargeReadOps();
+        writeOps = writeOps + stat.getWriteOps();
+      }
+      readBytesCounter.setValue(readBytes);
+      writeBytesCounter.setValue(writeBytes);
+      readOpsCounter.setValue(readOps);
+      largeReadOpsCounter.setValue(largeReadOps);
+      writeOpsCounter.setValue(writeOps);
+    Map<String, List<FileSystem.Statistics>> map = new 
+        HashMap<String, List<FileSystem.Statistics>>();
-      FileSystemStatisticUpdater updater = statisticUpdaters.get(uriScheme);
-      if(updater==null) {//new FileSystem has been found in the cache
-        updater = new FileSystemStatisticUpdater(stat);
-        statisticUpdaters.put(uriScheme, updater);
+      if (map.containsKey(uriScheme)) {
+        List<FileSystem.Statistics> list = map.get(uriScheme);
+        list.add(stat);
+      } else {
+        List<FileSystem.Statistics> list = new ArrayList<FileSystem.Statistics>();
+        list.add(stat);
+        map.put(uriScheme, list);
-      updater.updateCounters();      
-
+    for (Map.Entry<String, List<FileSystem.Statistics>> entry: map.entrySet()) {
+      FileSystemStatisticUpdater updater = statisticUpdaters.get(entry.getKey());
+      if(updater==null) {//new FileSystem has been found in the cache
+        updater = new FileSystemStatisticUpdater(entry.getValue(), entry.getKey());
+        statisticUpdaters.put(entry.getKey(), updater);
+      }
+      updater.updateCounters();
+    }
+    

MOV26 INS26 INS40 INS74 INS23 INS43 MOV43 INS74 INS83 INS43 INS59 INS44 INS44 INS60 INS70 INS42 INS74 INS43 MOV43 INS42 INS42 INS74 INS42 MOV43 INS42 INS21 INS60 INS60 INS60 INS60 INS60 INS70 INS21 INS21 INS21 INS21 INS21 INS74 INS59 MOV44 MOV32 INS8 INS44 INS32 INS43 MOV43 INS14 INS42 INS43 INS43 INS7 INS39 INS59 INS39 INS59 INS39 INS59 INS39 INS59 INS39 INS59 MOV44 INS42 INS8 INS32 INS32 INS32 INS32 INS32 INS43 INS43 INS74 INS42 INS14 MOV60 INS25 INS74 INS42 INS42 INS42 INS42 INS74 INS42 INS40 INS22 INS42 UPD42 MOV42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 UPD42 MOV21 MOV21 MOV21 MOV21 MOV21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS74 INS32 INS8 INS8 INS43 INS43 INS74 MOV43 INS43 INS43 INS52 INS42 INS7 INS7 INS7 INS7 INS7 INS42 INS40 INS43 INS43 INS74 INS42 INS42 INS42 INS60 INS21 INS60 INS21 INS21 INS40 INS42 INS43 INS43 INS42 INS40 INS32 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS42 INS43 INS43 INS74 INS59 INS32 INS74 INS59 INS32 INS32 INS42 INS40 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS40 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS32 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 INS42 INS40 INS42 INS42 INS42 INS42 INS40 INS74 MOV43 INS32 INS32 UPD42 MOV42 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS40 DEL33 DEL42 DEL42 DEL7 DEL10 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL32 DEL42