HDFS-8854. Erasure coding: add ECPolicy to replace schema+cellSize in hadoop-hdfs. Contributed by Walter Su.

-import org.apache.hadoop.hdfs.protocol.HdfsConstants;
-import org.apache.hadoop.io.erasurecode.ECSchema;
+import org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy;
-    factory.addClass(ListECSchemas.class, "-" + ListECSchemas.NAME);
+    factory.addClass(ListPolicies.class, "-" + ListPolicies.NAME);
-   * Create EC encoding zone command. Zones are created to use specific EC
-   * encoding schema, other than default while encoding the files under some
-   * specific directory.
+   * A command to create an EC zone for a path, with a erasure coding policy name.
-    public static final String USAGE = "[-s <schemaName>] [-c <cellSize>] <path>";
+    public static final String USAGE = "[-s <policyName>] <path>";
-        "Create a zone to encode files using a specified schema\n"
+        "Create a zone to encode files using a specified policy\n"
-        + "  -s <schemaName> : EC schema name to encode files. "
-        + "If not passed default schema will be used\n"
-        + "  -c <cellSize> : cell size to use for striped encoding files."
-        + " If not passed default cellsize of "
-        + HdfsConstants.BLOCK_STRIPED_CELL_SIZE + " will be used\n"
+        + "  -s <policyName> : erasure coding policy name to encode files. "
+        + "If not passed the default policy will be used\n"
-        + "files will be encoded using specified schema";
-    private String schemaName;
-    private int cellSize = 0;
-    private ECSchema schema = null;
+        + "files will be encoded using specified erasure coding policy";
+    private String ecPolicyName;
+    private ErasureCodingPolicy ecPolicy = null;
-      schemaName = StringUtils.popOptionWithArgument("-s", args);
-      String cellSizeStr = StringUtils.popOptionWithArgument("-c", args);
-      if (cellSizeStr != null) {
-        cellSize = (int) StringUtils.TraditionalBinaryPrefix
-            .string2long(cellSizeStr);
-      }
+      ecPolicyName = StringUtils.popOptionWithArgument("-s", args);
-        if (schemaName != null) {
-          ECSchema[] ecSchemas = dfs.getClient().getECSchemas();
-          for (ECSchema ecSchema : ecSchemas) {
-            if (schemaName.equals(ecSchema.getSchemaName())) {
-              schema = ecSchema;
+        if (ecPolicyName != null) {
+          ErasureCodingPolicy[] ecPolicies = dfs.getClient().getErasureCodingPolicies();
+          for (ErasureCodingPolicy ecPolicy : ecPolicies) {
+            if (ecPolicyName.equals(ecPolicy.getName())) {
+              this.ecPolicy = ecPolicy;
-          if (schema == null) {
+          if (ecPolicy == null) {
-            sb.append("Schema '");
-            sb.append(schemaName);
-            sb.append("' does not match any of the supported schemas.");
+            sb.append("Policy '");
+            sb.append(ecPolicyName);
+            sb.append("' does not match any of the supported policies.");
-            List<String> schemaNames = new ArrayList<String>();
-            for (ECSchema ecSchema : ecSchemas) {
-              schemaNames.add(ecSchema.getSchemaName());
+            List<String> ecPolicyNames = new ArrayList<String>();
+            for (ErasureCodingPolicy ecPolicy : ecPolicies) {
+              ecPolicyNames.add(ecPolicy.getName());
-            sb.append(schemaNames);
+            sb.append(ecPolicyNames);
-        dfs.createErasureCodingZone(item.path, schema, cellSize);
+        dfs.createErasureCodingZone(item.path, ecPolicy);
-   * List all supported EC Schemas
+   * List all supported erasure coding policies
-  static class ListECSchemas extends ECCommand {
-    public static final String NAME = "listSchemas";
+  static class ListPolicies extends ECCommand {
+    public static final String NAME = "listPolicies";
-        "Get the list of ECSchemas supported\n";
+        "Get the list of erasure coding policies supported\n";
-      ECSchema[] ecSchemas = dfs.getClient().getECSchemas();
+      ErasureCodingPolicy[] ecPolicies = dfs.getClient().getErasureCodingPolicies();
-      while (i < ecSchemas.length) {
-        ECSchema ecSchema = ecSchemas[i];
-        sb.append(ecSchema.getSchemaName());
+      while (i < ecPolicies.length) {
+        ErasureCodingPolicy ecPolicy = ecPolicies[i];
+        sb.append(ecPolicy.getName());
-        if (i < ecSchemas.length) {
+        if (i < ecPolicies.length) {

MOV26 UPD40 UPD42 UPD43 MOV43 MOV43 UPD66 UPD45 UPD42 UPD42 UPD42 UPD66 UPD45 UPD45 UPD45 MOV45 MOV45 UPD45 MOV45 UPD45 MOV45 UPD45 UPD5 UPD43 UPD40 UPD42 UPD43 UPD42 UPD40 UPD42 UPD42 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD40 UPD5 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD45 UPD42 UPD45 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 INS22 UPD42 UPD42 INS52 INS42 UPD42 UPD42 DEL40 DEL26 DEL66 DEL66 DEL45 DEL45 DEL27 DEL40 DEL45 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL39 DEL40 DEL42 DEL42 DEL32 DEL11 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42