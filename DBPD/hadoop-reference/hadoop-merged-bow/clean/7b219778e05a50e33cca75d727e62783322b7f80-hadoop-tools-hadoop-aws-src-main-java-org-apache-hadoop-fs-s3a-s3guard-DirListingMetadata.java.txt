HADOOP-16433. S3Guard: Filter expired entries and tombstones when listing with MetadataStore.listChildren().

Contributed by Gabor Bota.

This pulls the tracking of the lastUpdated timestamp of metadata entries up from the DDB metastore into all s3guard stores, and then uses this to filter out expired tombstones from listings.

Change-Id: I80f121236b49c75a024116f65a3ef29d3580b462

+import java.util.Iterator;
-   *     all paths added later via {@link #put(S3AFileStatus)} must also have
+   *     all paths added later via {@link #put(PathMetadata)} must also have
-  public void markDeleted(Path childPath) {
+  public void markDeleted(Path childPath, long lastUpdated) {
-    listMap.put(childPath, PathMetadata.tombstone(childPath));
+    listMap.put(childPath, PathMetadata.tombstone(childPath, lastUpdated));
-   * @param childFileStatus entry to add to this directory listing.
+   * @param childPathMetadata entry to add to this directory listing.
-  public boolean put(S3AFileStatus childFileStatus) {
-    Preconditions.checkNotNull(childFileStatus,
-        "childFileStatus must be non-null");
-    Path childPath = childStatusToPathKey(childFileStatus);
-    PathMetadata newValue = new PathMetadata(childFileStatus);
-    PathMetadata oldValue = listMap.put(childPath, newValue);
+  public boolean put(PathMetadata childPathMetadata) {
+    Preconditions.checkNotNull(childPathMetadata,
+        "childPathMetadata must be non-null");
+    final S3AFileStatus fileStatus = childPathMetadata.getFileStatus();
+    Path childPath = childStatusToPathKey(fileStatus);
+    PathMetadata newValue = childPathMetadata;
+    PathMetadata oldValue = listMap.put(childPath, childPathMetadata);
+   * Remove expired entries from the listing based on TTL.
+   * @param ttl the ttl time
+   * @param now the current time
+   */
+  public synchronized void removeExpiredEntriesFromListing(long ttl,
+      long now) {
+    final Iterator<Map.Entry<Path, PathMetadata>> iterator =
+        listMap.entrySet().iterator();
+    while (iterator.hasNext()) {
+      final Map.Entry<Path, PathMetadata> entry = iterator.next();
+      // we filter iff the lastupdated is not 0 and the entry is expired
+      if (entry.getValue().getLastUpdated() != 0
+          && (entry.getValue().getLastUpdated() + ttl) <= now) {
+        iterator.remove();
+      }
+    }
+  }
+
+  /**

INS26 INS40 INS31 INS44 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS39 INS42 MOV43 UPD42 INS60 INS65 INS65 INS65 INS39 INS42 INS39 INS42 INS60 INS61 UPD42 INS83 MOV43 INS59 MOV43 MOV43 INS66 INS42 INS66 INS42 INS66 INS83 INS74 INS59 INS32 INS8 UPD42 UPD45 INS42 INS32 INS42 INS43 INS74 INS42 INS32 INS42 INS42 INS60 INS25 INS42 INS42 INS42 UPD42 UPD42 INS42 INS43 INS43 INS43 INS32 INS42 INS83 INS74 INS59 INS27 INS8 UPD43 INS40 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS42 INS32 INS27 INS27 INS21 UPD42 INS40 INS42 INS42 INS42 INS42 INS32 INS34 INS36 INS42 INS32 INS32 INS42 INS27 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 DEL42 DEL14