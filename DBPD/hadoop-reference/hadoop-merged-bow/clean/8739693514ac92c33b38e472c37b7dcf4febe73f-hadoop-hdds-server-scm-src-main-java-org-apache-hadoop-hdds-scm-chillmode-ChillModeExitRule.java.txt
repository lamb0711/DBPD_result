HDDS-1217. Refactor ChillMode rules and chillmode manager. (#558)



+import org.apache.hadoop.hdds.server.events.EventHandler;
+import org.apache.hadoop.hdds.server.events.EventPublisher;
+import org.apache.hadoop.hdds.server.events.EventQueue;
+import org.apache.hadoop.hdds.server.events.TypedEvent;
+
- * Interface for defining chill mode exit rules.
+ * Abstract class for ChillModeExitRules. When a new rule is added, the new
+ * rule should extend this abstract class.
+ *
+ * Each rule Should do:
+ * 1. Should add a handler for the event it is looking for during the
+ * initialization of the rule.
+ * 2. Add the rule in ScmChillModeManager to list of the rules.
+ *
-public interface ChillModeExitRule<T> {
+public abstract class ChillModeExitRule<T> implements EventHandler<T> {
-  boolean validate();
+  private final SCMChillModeManager chillModeManager;
+  private final String ruleName;
-  void process(T report);
+  public ChillModeExitRule(SCMChillModeManager chillModeManager,
+      String ruleName, EventQueue eventQueue) {
+    this.chillModeManager = chillModeManager;
+    this.ruleName = ruleName;
+    eventQueue.addHandler(getEventType(), this);
+  }
-  void cleanup();
+  /**
+   * Return's the name of this ChillModeExit Rule.
+   * @return ruleName
+   */
+  public String getRuleName() {
+    return ruleName;
+  }
+
+  /**
+   * Return's the event type this chillMode exit rule handles.
+   * @return TypedEvent
+   */
+  protected abstract TypedEvent<T> getEventType();
+
+  /**
+   * Validate's this rule. If this rule condition is met, returns true, else
+   * returns false.
+   * @return boolean
+   */
+  protected abstract boolean validate();
+
+  /**
+   * Actual processing logic for this rule.
+   * @param report
+   */
+  protected abstract void process(T report);
+
+  /**
+   * Cleanup action's need to be done, once this rule is satisfied.
+   */
+  protected abstract void cleanup();
+
+  @Override
+  public final void onMessage(T report, EventPublisher publisher) {
+
+    // TODO: when we have remove handlers, we can remove getInChillmode check
+
+    if (scmInChillMode()) {
+      if (validate()) {
+        chillModeManager.validateChillModeExitRules(ruleName, publisher);
+        cleanup();
+        return;
+      }
+
+      process(report);
+
+      if (validate()) {
+        chillModeManager.validateChillModeExitRules(ruleName, publisher);
+        cleanup();
+      }
+    }
+  }
+
+  /**
+   * Return true if SCM is in chill mode, else false.
+   * @return boolean
+   */
+  protected boolean scmInChillMode() {
+    return chillModeManager.getInChillMode();
+  }
+

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS83 INS74 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS43 INS43 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS42 INS44 INS44 INS44 INS8 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS83 INS74 INS42 INS29 INS83 INS83 INS29 INS83 INS83 INS44 INS29 INS83 INS83 INS78 INS83 INS83 INS39 INS42 MOV44 INS44 INS8 INS29 INS83 INS39 INS42 INS8 UPD66 INS66 INS66 INS66 INS66 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS21 INS21 INS21 INS65 INS65 INS42 INS41 INS65 INS65 INS43 INS43 INS65 INS65 INS65 INS65 INS43 INS42 INS65 INS42 INS43 INS42 INS25 INS65 INS65 INS41 INS42 INS42 INS42 INS7 INS7 INS32 INS66 INS66 INS42 INS66 INS66 INS42 INS42 INS66 INS66 INS66 INS66 INS42 INS42 INS66 INS42 INS32 INS8 INS66 INS66 INS32 INS22 INS42 INS22 INS42 INS42 INS42 INS32 INS52 INS42 INS25 INS21 INS25 INS42 INS42 INS52 INS42 INS52 INS42 INS42 INS32 INS8 INS32 INS32 INS8 INS42 INS21 INS21 INS41 INS42 INS42 INS42 INS21 INS21 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42