HDFS-11771. Ozone: KSM: Add checkVolumeAccess. Contributed by Mukul Kumar Singh.

+    .KeySpaceManagerProtocolProtos.OzoneAclInfo;
+import org.apache.hadoop.ozone.protocol.proto
-      Preconditions.checkState(volume.equalsIgnoreCase(volumeInfo.getVolume()));
+      Preconditions.checkState(volume.equals(volumeInfo.getVolume()));
-      Preconditions.checkState(volume.equalsIgnoreCase(volumeInfo.getVolume()));
+      Preconditions.checkState(volume.equals(volumeInfo.getVolume()));
-      Preconditions.checkState(volume.equalsIgnoreCase(volumeInfo.getVolume()));
+      Preconditions.checkState(volume.equals(volumeInfo.getVolume()));
-      Preconditions.checkState(volume.equalsIgnoreCase(volumeInfo.getVolume()));
+      Preconditions.checkState(volume.equals(volumeInfo.getVolume()));
+
+  /**
+   * Checks if the specified user with a role can access this volume.
+   *
+   * @param volume - volume
+   * @param userAcl - user acl which needs to be checked for access
+   * @return true if the user has access for the volume, false otherwise
+   * @throws IOException
+   */
+  public boolean checkVolumeAccess(String volume, OzoneAclInfo userAcl)
+      throws IOException {
+    Preconditions.checkNotNull(volume);
+    Preconditions.checkNotNull(userAcl);
+    metadataManager.readLock().lock();
+    try {
+      byte[] dbVolumeKey = metadataManager.getVolumeKey(volume);
+      byte[] volInfo = metadataManager.get(dbVolumeKey);
+      if (volInfo == null) {
+        throw  new KSMException(ResultCodes.FAILED_VOLUME_NOT_FOUND);
+      }
+
+      VolumeInfo volumeInfo = VolumeInfo.parseFrom(volInfo);
+      KsmVolumeArgs volumeArgs = KsmVolumeArgs.getFromProtobuf(volumeInfo);
+      Preconditions.checkState(volume.equals(volumeInfo.getVolume()));
+      return volumeArgs.getAclMap().hasAccess(userAcl);
+    } catch (IOException ex) {
+      LOG.error("Check volume access failed for volume:{} user:{} rights:{}",
+          volume, userAcl.getName(), userAcl.getRights(), ex);
+      throw ex;
+    } finally {
+      metadataManager.readLock().unlock();
+    }
+  }

INS26 INS40 INS31 INS29 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS42 INS21 INS21 INS21 INS54 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS32 INS32 INS32 INS8 INS12 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS60 INS60 INS25 INS60 INS60 INS21 INS41 INS44 INS8 INS21 INS42 INS42 INS5 INS59 INS5 INS59 INS27 INS8 INS43 INS59 INS43 INS59 INS32 INS32 INS43 INS42 INS21 INS53 INS32 INS39 INS85 INS42 INS32 INS39 INS85 INS42 INS32 INS42 INS33 INS53 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS45 INS42 INS32 INS32 INS42 INS42 INS42 INS43 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42