MAPREDUCE-2672. MR-279: JobHistory Server needs Analysis this job. (Robert Evans via mahadev)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1171297 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptState;
+import org.apache.hadoop.mapreduce.v2.app.job.TaskAttempt;
+import org.apache.hadoop.yarn.webapp.hamlet.Hamlet.TFOOT;
+import org.apache.hadoop.yarn.webapp.hamlet.Hamlet.THEAD;
+import org.apache.hadoop.yarn.webapp.hamlet.Hamlet.TR;
+import org.apache.hadoop.yarn.webapp.hamlet.HamletSpec.InputType;
-    TBODY<TABLE<Hamlet>> tbody = html.
-      table("#tasks").
-        thead().
+    
+    THEAD<TABLE<Hamlet>> thead = html.table("#tasks").thead();
+    //Create the spanning row
+    int attemptColSpan = type == TaskType.REDUCE ? 8 : 3;
+    thead.tr().
+      th().$colspan(5).$class("ui-state-default")._("Task")._().
+      th().$colspan(attemptColSpan).$class("ui-state-default").
+        _("Successful Attempt")._().
+    _();
+    
+    TR<THEAD<TABLE<Hamlet>>> theadRow = thead.
-            th("Task").
+            th("Name").
-            th("Elapsed Time")._()._().
-        tbody();
+            th("Elapsed Time").
+            th("Start Time"); //Attempt
+    
+    if(type == TaskType.REDUCE) {
+      theadRow.th("Shuffle Finish Time"); //Attempt
+      theadRow.th("Merge Finish Time"); //Attempt
+    }
+    
+    theadRow.th("Finish Time"); //Attempt
+    
+    if(type == TaskType.REDUCE) {
+      theadRow.th("Elapsed Time Shuffle"); //Attempt
+      theadRow.th("Elapsed Time Merge"); //Attempt
+      theadRow.th("Elapsed Time Reduce"); //Attempt
+    }
+    theadRow.th("Elapsed Time"); //Attempt
+    
+    TBODY<TABLE<Hamlet>> tbody = theadRow._()._().tbody();
+      
-      long elapsed = Times.elapsed(startTime, finishTime);
-      tbody.
-        tr().
+      long elapsed = Times.elapsed(startTime, finishTime, false);
+      
+      long attemptStartTime = -1;
+      long shuffleFinishTime = -1;
+      long sortFinishTime = -1;
+      long attemptFinishTime = -1;
+      long elapsedShuffleTime = -1;
+      long elapsedSortTime = -1;;
+      long elapsedReduceTime = -1;
+      long attemptElapsed = -1;
+      TaskAttempt successful = getSuccessfulAttempt(task);
+      if(successful != null) {
+        attemptStartTime = successful.getLaunchTime();
+        attemptFinishTime = successful.getFinishTime();
+        if(type == TaskType.REDUCE) {
+          shuffleFinishTime = successful.getShuffleFinishTime();
+          sortFinishTime = successful.getSortFinishTime();
+          elapsedShuffleTime =
+              Times.elapsed(attemptStartTime, shuffleFinishTime, false);
+          elapsedSortTime =
+              Times.elapsed(shuffleFinishTime, sortFinishTime, false);
+          elapsedReduceTime =
+              Times.elapsed(sortFinishTime, attemptFinishTime, false); 
+        }
+        attemptElapsed =
+            Times.elapsed(attemptStartTime, attemptFinishTime, false);
+      }
+      
+      TR<TBODY<TABLE<Hamlet>>> row = tbody.tr();
+      row.
-            _(StringUtils.formatTime(elapsed))._()._();
+            _(formatTime(elapsed))._().
+          td().
+            br().$title(String.valueOf(attemptStartTime))._().
+            _(Times.format(attemptStartTime))._();
+      if(type == TaskType.REDUCE) {
+        row.td().
+          br().$title(String.valueOf(shuffleFinishTime))._().
+          _(Times.format(shuffleFinishTime))._();
+        row.td().
+        br().$title(String.valueOf(sortFinishTime))._().
+        _(Times.format(sortFinishTime))._();
+      }
+      row.
+          td().
+            br().$title(String.valueOf(attemptFinishTime))._().
+            _(Times.format(attemptFinishTime))._();
+      
+      if(type == TaskType.REDUCE) {
+        row.td().
+          br().$title(String.valueOf(elapsedShuffleTime))._().
+        _(formatTime(elapsedShuffleTime))._();
+        row.td().
+        br().$title(String.valueOf(elapsedSortTime))._().
+      _(formatTime(elapsedSortTime))._();
+        row.td().
+          br().$title(String.valueOf(elapsedReduceTime))._().
+        _(formatTime(elapsedReduceTime))._();
+      }
+      
+      row.td().
+        br().$title(String.valueOf(attemptElapsed))._().
+        _(formatTime(attemptElapsed))._();
+      row._();
-    tbody._()._();
+    TR<TFOOT<TABLE<Hamlet>>> footRow = tbody._().tfoot().tr();
+    footRow.th().input("search_init").$type(InputType.text).$name("task")
+        .$value("ID")._()._().th().input("search_init").$type(InputType.text)
+        .$name("state").$value("State")._()._().th().input("search_init")
+        .$type(InputType.text).$name("start_time").$value("Start Time")._()._()
+        .th().input("search_init").$type(InputType.text).$name("finish_time")
+        .$value("Finish Time")._()._().th().input("search_init")
+        .$type(InputType.text).$name("elapsed_time").$value("Elapsed Time")._()
+        ._().th().input("search_init").$type(InputType.text)
+        .$name("attempt_start_time").$value("Start Time")._()._();
+    
+    if(type == TaskType.REDUCE) {
+      footRow.th().input("search_init").$type(InputType.text)
+          .$name("shuffle_time").$value("Shuffle Time")._()._();
+      footRow.th().input("search_init").$type(InputType.text)
+          .$name("merge_time").$value("Merge Time")._()._();
+    }
+
+    footRow.th().input("search_init").$type(InputType.text)
+        .$name("attempt_finish").$value("Finish Time")._()._();
+
+    if(type == TaskType.REDUCE) {
+      footRow.th().input("search_init").$type(InputType.text)
+          .$name("elapsed_shuffle_time").$value("Elapsed Shuffle Time")._()._();
+      footRow.th().input("search_init").$type(InputType.text)
+          .$name("elapsed_merge_time").$value("Elapsed Merge Time")._()._();
+      footRow.th().input("search_init").$type(InputType.text)
+          .$name("elapsed_reduce_time").$value("Elapsed Reduce Time")._()._();
+    }
+
+    footRow.th().input("search_init").$type(InputType.text)
+        .$name("attempt_elapsed").$value("Elapsed Time")._()._();
+    
+    footRow._()._()._();
+  }
+
+  private String formatTime(long elapsed) {
+    return elapsed < 0 ? "N/A" : StringUtils.formatTime(elapsed);
+  }
+  
+  private TaskAttempt getSuccessfulAttempt(Task task) {
+    for(TaskAttempt attempt: task.getAttempts().values()) {
+      if(attempt.getState() == TaskAttemptState.SUCCEEDED) {
+        return attempt;
+      }
+    }
+    return null;

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS60 INS60 INS21 INS60 INS25 INS21 INS25 INS21 INS60 INS60 INS25 INS21 INS25 INS21 INS21 INS42 INS39 INS42 INS41 INS42 INS43 INS42 INS70 INS41 INS74 INS59 INS39 INS59 INS32 INS74 INS59 INS27 INS8 INS32 INS27 INS8 INS32 MOV74 INS59 INS74 INS59 INS32 INS27 INS8 INS32 INS27 INS8 INS32 INS32 INS16 INS42 INS44 INS32 INS8 INS33 INS43 INS74 INS42 MOV32 INS42 INS16 INS32 INS42 INS43 INS74 INS42 INS32 INS42 INS40 INS21 INS21 INS42 INS42 INS45 INS42 INS40 INS21 INS21 INS21 INS42 INS42 INS45 INS42 INS32 INS60 INS60 INS60 INS60 INS60 INS60 INS20 INS60 INS60 INS60 INS25 INS60 INS25 INS21 INS25 INS21 INS21 INS43 INS74 INS42 INS32 INS32 INS42 INS42 INS40 INS21 INS21 INS32 INS42 INS42 INS40 INS21 INS21 INS21 INS32 INS42 INS32 INS42 INS27 INS45 MOV32 INS43 INS42 INS32 INS42 INS25 INS42 INS43 INS43 INS27 INS34 INS34 INS32 INS42 INS42 INS43 INS74 MOV32 UPD42 MOV42 INS45 INS32 INS32 INS32 INS32 INS32 INS32 MOV42 INS39 INS59 INS39 INS59 INS39 INS59 INS39 INS59 INS39 INS59 INS39 INS59 INS39 INS59 INS39 INS59 INS43 INS59 INS27 INS8 INS74 INS59 INS32 INS27 INS8 INS32 INS27 INS8 INS32 INS32 INS42 INS43 INS74 MOV32 INS42 INS32 INS42 INS32 INS32 INS32 INS42 INS32 INS32 INS32 INS32 INS42 INS32 INS42 INS42 INS34 INS42 INS42 INS42 INS27 INS8 INS42 INS42 INS42 INS40 INS32 INS42 INS45 INS42 INS43 INS43 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS32 INS42 INS42 INS38 INS42 INS38 INS42 INS38 INS42 INS38 INS42 INS38 INS42 INS38 INS42 INS38 INS42 INS38 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS25 INS21 INS43 INS74 INS42 MOV32 INS32 INS42 INS42 INS40 INS21 INS21 INS32 INS42 INS42 INS40 INS21 INS21 INS21 INS32 INS42 INS42 INS42 INS42 INS43 INS43 UPD42 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS45 INS42 INS42 INS32 INS40 INS41 INS32 INS42 INS45 INS42 INS42 INS42 MOV42 INS9 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS34 INS42 INS42 INS7 INS7 INS27 INS8 INS7 INS42 INS43 INS74 INS32 INS42 INS32 INS32 INS32 INS32 INS42 INS32 INS32 INS32 INS32 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS40 INS21 INS21 INS21 INS21 INS21 INS42 INS32 INS42 INS43 INS43 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS40 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS40 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS40 INS32 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS7 INS7 INS7 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 UPD45 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 MOV32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS40 INS32 INS42 INS40 INS42 INS42 INS32 INS42 INS40 INS32 INS42 INS40 INS32 INS42 INS40 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS9 UPD42 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS34 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS32 INS42 INS40 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS40 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS40 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS45 INS42 INS32 INS42 INS40 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS40 INS32 INS42 INS45 INS42 INS42 DEL42 DEL32 DEL32 DEL32 DEL59 DEL60