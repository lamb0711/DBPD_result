YARN-106. Nodemanager needs to set permissions of local directories (jlowe via bobby)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1391649 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.concurrent.CopyOnWriteArrayList;
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.util.concurrent.CopyOnWriteArrayList;
+import org.apache.hadoop.fs.FileContext;
+import org.apache.hadoop.fs.Path;
+import org.apache.hadoop.fs.permission.FsPermission;
+   * Create any non-existent directories and parent directories, updating the
+   * list of valid directories if necessary.
+   * @param localFs local file system to use
+   * @param perm absolute permissions to use for any directories created
+   * @return true if there were no errors, false if at least one error occurred
+   */
+  synchronized boolean createNonExistentDirs(FileContext localFs,
+      FsPermission perm) {
+    boolean failed = false;
+    for (final String dir : localDirs) {
+      try {
+        createDir(localFs, new Path(dir), perm);
+      } catch (IOException e) {
+        LOG.warn("Unable to create directory " + dir + " error " +
+            e.getMessage() + ", removing from the list of valid directories.");
+        localDirs.remove(dir);
+        failedDirs.add(dir);
+        numFailures++;
+        failed = true;
+      }
+    }
+    return !failed;
+  }
+
+  /**
+
+  private void createDir(FileContext localFs, Path dir, FsPermission perm)
+      throws IOException {
+    if (dir == null) {
+      return;
+    }
+    try {
+      localFs.getFileStatus(dir);
+    } catch (FileNotFoundException e) {
+      createDir(localFs, dir.getParent(), perm);
+      localFs.mkdir(dir, perm, false);
+      if (!perm.equals(perm.applyUMask(localFs.getUMask()))) {
+        localFs.setPermission(dir, perm);
+      }
+    }
+  }

MOV26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS29 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS60 INS70 INS41 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS25 INS54 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS39 INS59 INS44 INS42 INS8 INS38 INS42 INS42 INS42 INS27 INS8 INS8 INS12 INS42 INS9 INS83 INS43 INS42 INS54 INS42 INS42 INS33 INS41 INS21 INS44 INS8 INS42 INS8 INS12 INS32 INS43 INS42 INS21 INS21 INS25 INS21 INS44 INS8 INS42 INS42 INS42 INS42 INS32 INS32 INS38 INS8 INS32 INS43 INS42 INS21 INS21 INS21 INS21 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS9 INS32 INS21 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS32 INS37 INS7 INS42 INS42 INS42 INS42 INS32 INS32 INS43 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS32 INS45 INS42 INS42 INS42 INS42