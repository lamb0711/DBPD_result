YARN-2448. Changed ApplicationMasterProtocol to expose RM-recognized resource types to the AMs. Contributed by Varun Vasudev.

-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
+import java.util.*;
+import org.apache.hadoop.yarn.proto.YarnServiceProtos.SchedulerResourceTypes;
+  private EnumSet<SchedulerResourceTypes> schedulerResourceTypes = null;
+    if(schedulerResourceTypes != null) {
+      addSchedulerResourceTypes();
+    }
+  @Override
+  public EnumSet<SchedulerResourceTypes> getSchedulerResourceTypes() {
+    initSchedulerResourceTypes();
+    return this.schedulerResourceTypes;
+  }
+
+  private void initSchedulerResourceTypes() {
+    if (this.schedulerResourceTypes != null) {
+      return;
+    }
+    RegisterApplicationMasterResponseProtoOrBuilder p =
+        viaProto ? proto : builder;
+
+    List<SchedulerResourceTypes> list = p.getSchedulerResourceTypesList();
+    if (list.isEmpty()) {
+      this.schedulerResourceTypes =
+          EnumSet.noneOf(SchedulerResourceTypes.class);
+    } else {
+      this.schedulerResourceTypes = EnumSet.copyOf(list);
+    }
+  }
+
+  private void addSchedulerResourceTypes() {
+    maybeInitBuilder();
+    builder.clearSchedulerResourceTypes();
+    if (schedulerResourceTypes == null) {
+      return;
+    }
+    Iterable<? extends SchedulerResourceTypes> values =
+        new Iterable<SchedulerResourceTypes>() {
+
+          @Override
+          public Iterator<SchedulerResourceTypes> iterator() {
+            return new Iterator<SchedulerResourceTypes>() {
+              Iterator<SchedulerResourceTypes> settingsIterator =
+                  schedulerResourceTypes.iterator();
+
+              @Override
+              public boolean hasNext() {
+                return settingsIterator.hasNext();
+              }
+
+              @Override
+              public SchedulerResourceTypes next() {
+                return settingsIterator.next();
+              }
+
+              @Override
+              public void remove() {
+                throw new UnsupportedOperationException();
+              }
+            };
+          }
+        };
+    this.builder.addAllSchedulerResourceTypes(values);
+  }
+
+  @Override
+  public void setSchedulerResourceTypes(EnumSet<SchedulerResourceTypes> types) {
+    if (types == null) {
+      return;
+    }
+    initSchedulerResourceTypes();
+    this.schedulerResourceTypes.clear();
+    this.schedulerResourceTypes.addAll(types);
+  }
+

MOV26 UPD40 UPD40 INS23 INS31 INS31 INS31 INS31 INS83 INS74 INS59 INS78 INS83 INS74 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS43 INS43 INS42 INS33 INS25 INS42 INS43 INS43 INS21 INS41 INS25 INS60 INS60 INS25 INS21 INS21 INS25 INS60 INS21 INS42 INS74 INS42 INS25 INS21 INS21 INS21 INS42 INS42 INS27 INS8 INS42 INS42 INS32 INS22 INS27 INS8 INS43 INS59 INS74 INS59 INS32 INS8 INS8 INS32 INS32 INS27 INS8 INS74 INS59 INS32 INS43 INS43 INS27 INS8 INS32 INS32 INS32 INS42 INS33 INS21 INS42 INS52 INS42 INS22 INS33 INS41 INS42 INS42 INS16 INS43 INS43 INS42 INS32 INS42 INS42 INS21 INS21 INS42 INS42 INS42 INS42 INS33 INS41 INS43 INS76 INS42 INS14 INS22 INS42 INS42 INS42 INS42 INS42 INS33 INS41 INS42 INS22 INS42 INS22 INS42 INS42 INS32 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS42 INS43 INS74 INS1 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS22 INS32 INS22 INS32 INS42 INS43 INS43 INS31 INS52 INS42 INS42 INS42 INS57 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS78 INS83 INS74 INS42 INS8 INS43 INS42 INS43 INS43 INS41 INS42 INS42 INS42 INS14 INS74 INS1 INS43 INS43 INS23 INS31 INS31 INS31 INS42 INS42 INS74 INS59 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS43 INS43 INS42 INS32 INS42 INS41 INS42 INS42 INS41 INS42 INS53 INS42 INS42 INS42 INS42 INS32 INS32 INS14 INS42 INS42 INS42 INS42 INS43 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26