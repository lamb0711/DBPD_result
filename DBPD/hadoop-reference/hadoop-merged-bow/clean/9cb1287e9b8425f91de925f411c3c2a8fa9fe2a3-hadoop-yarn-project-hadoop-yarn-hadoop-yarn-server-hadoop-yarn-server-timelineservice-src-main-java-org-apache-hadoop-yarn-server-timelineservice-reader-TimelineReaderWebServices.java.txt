YARN-4446. Refactor reader API for better extensibility (Varun Saxena via sjlee)

-import org.apache.hadoop.yarn.api.records.timelineservice.FlowActivityEntity;
-import org.apache.hadoop.yarn.api.records.timelineservice.FlowRunEntity;
-  private static final String COMMA_DELIMITER = ",";
-  private static final String COLON_DELIMITER = ":";
-   *     specified, 4 fields i.e. entity type, id and created time is returned
+   *     specified, 3 fields i.e. entity type, id and created time is returned
-   *     a set of {@link TimelineEntity} instances of the given entity type is
-   *     returned.
-   *     On failures,
+   *     a set of <cite>TimelineEntity</cite> instances of the given entity type
+   *     is returned.<br>
+   *     On failures,<br>
-   *     HTTP 400(Bad Request) is returned.
+   *     HTTP 400(Bad Request) is returned.<br>
-      entities = timelineReaderManager.getEntities(
-          TimelineReaderWebServicesUtils.parseStr(context.getUserId()),
-          TimelineReaderWebServicesUtils.parseStr(context.getClusterId()),
-          TimelineReaderWebServicesUtils.parseStr(context.getFlowName()),
-          context.getFlowRunId(),
-          TimelineReaderWebServicesUtils.parseStr(context.getAppId()),
-          TimelineReaderWebServicesUtils.parseStr(entityType),
-          TimelineReaderWebServicesUtils.parseLongStr(limit),
-          TimelineReaderWebServicesUtils.parseLongStr(createdTimeStart),
-          TimelineReaderWebServicesUtils.parseLongStr(createdTimeEnd),
-          TimelineReaderWebServicesUtils.parseKeyStrValuesStr(
-          relatesTo, COMMA_DELIMITER, COLON_DELIMITER),
-          TimelineReaderWebServicesUtils.parseKeyStrValuesStr(
-          isRelatedTo, COMMA_DELIMITER, COLON_DELIMITER),
-          TimelineReaderWebServicesUtils.parseKeyStrValueObj(
-          infofilters, COMMA_DELIMITER, COLON_DELIMITER),
-          TimelineReaderWebServicesUtils.parseKeyStrValueStr(
-          conffilters, COMMA_DELIMITER, COLON_DELIMITER),
-          TimelineReaderWebServicesUtils.parseValuesStr(
-           metricfilters, COMMA_DELIMITER),
-          TimelineReaderWebServicesUtils.parseValuesStr(
-          eventfilters, COMMA_DELIMITER),
-          TimelineReaderWebServicesUtils.parseFieldsStr(
-          fields, COMMA_DELIMITER));
+      context.setEntityType(
+          TimelineReaderWebServicesUtils.parseStr(entityType));
+      entities = timelineReaderManager.getEntities(context,
+          TimelineReaderWebServicesUtils.createTimelineEntityFilters(
+          limit, createdTimeStart, createdTimeEnd, relatesTo, isRelatedTo,
+          infofilters, conffilters, metricfilters, eventfilters),
+          TimelineReaderWebServicesUtils.createTimelineDataToRetrieve(
+          null, null, fields));
-   *     specified, 4 fields i.e. entity type, id, created time is returned
+   *     specified, 3 fields i.e. entity type, id, created time is returned
-   *     a set of {@link TimelineEntity} instances of the given entity type is
-   *     returned.
-   *     On failures,
+   *     a set of <cite>TimelineEntity</cite> instances of the given entity type
+   *     is returned.<br>
+   *     On failures,<br>
-   *     returned.
+   *     returned.<br>
-   *     is returned.
+   *     is returned.<br>
-   *     specified, 4 fields i.e. entity type, id, created time is returned
+   *     specified, 3 fields i.e. entity type, id, created time is returned
-   *     a set of {@link TimelineEntity} instances of the given entity type is
-   *     returned.
-   *     On failures,
+   *     a set of <cite>TimelineEntity</cite> instances of the given entity type
+   *     is returned.<br>
+   *     On failures,<br>
-   *     returned.
+   *     returned.<br>
-   *     is returned.
+   *     is returned.<br>
-          TimelineReaderWebServicesUtils.parseStr(userId),
-          TimelineReaderWebServicesUtils.parseStr(clusterId),
-          TimelineReaderWebServicesUtils.parseStr(flowName),
-          TimelineReaderWebServicesUtils.parseLongStr(flowRunId),
-          TimelineReaderWebServicesUtils.parseStr(appId),
-          TimelineReaderWebServicesUtils.parseStr(entityType),
-          TimelineReaderWebServicesUtils.parseLongStr(limit),
-          TimelineReaderWebServicesUtils.parseLongStr(createdTimeStart),
-          TimelineReaderWebServicesUtils.parseLongStr(createdTimeEnd),
-          TimelineReaderWebServicesUtils.parseKeyStrValuesStr(
-          relatesTo, COMMA_DELIMITER, COLON_DELIMITER),
-          TimelineReaderWebServicesUtils.parseKeyStrValuesStr(
-          isRelatedTo, COMMA_DELIMITER, COLON_DELIMITER),
-          TimelineReaderWebServicesUtils.parseKeyStrValueObj(
-          infofilters, COMMA_DELIMITER, COLON_DELIMITER),
-          TimelineReaderWebServicesUtils.parseKeyStrValueStr(
-          conffilters, COMMA_DELIMITER, COLON_DELIMITER),
-          TimelineReaderWebServicesUtils.parseValuesStr(
-          metricfilters, COMMA_DELIMITER),
-          TimelineReaderWebServicesUtils.parseValuesStr(
-          eventfilters, COMMA_DELIMITER),
-          TimelineReaderWebServicesUtils.parseFieldsStr(
-          fields, COMMA_DELIMITER));
+          TimelineReaderWebServicesUtils.createTimelineReaderContext(
+          clusterId, userId, flowName, flowRunId, appId, entityType, null),
+
+          TimelineReaderWebServicesUtils.createTimelineEntityFilters(
+          limit, createdTimeStart, createdTimeEnd, relatesTo, isRelatedTo,
+          infofilters, conffilters, metricfilters, eventfilters),
+          TimelineReaderWebServicesUtils.createTimelineDataToRetrieve(
+          null, null, fields));
-   *     specified, 4 fields i.e. entity type, id, created time is returned
+   *     specified, 3 fields i.e. entity type, id, created time is returned
-   *     {@link TimelineEntity} instance is returned.
-   *     On failures,
+   *     <cite>TimelineEntity</cite> instance is returned.<br>
+   *     On failures,<br>
-   *     HTTP 400(Bad Request) is returned.
+   *     HTTP 400(Bad Request) is returned.<br>
-   *     is returned.
+   *     is returned.<br>
-      entity = timelineReaderManager.getEntity(context.getUserId(),
-          context.getClusterId(), context.getFlowName(), context.getFlowRunId(),
-          context.getAppId(), context.getEntityType(), context.getEntityId(),
-          TimelineReaderWebServicesUtils.parseFieldsStr(
-          fields, COMMA_DELIMITER));
+      entity = timelineReaderManager.getEntity(context,
+          TimelineReaderWebServicesUtils.createTimelineDataToRetrieve(
+          null, null, fields));
-   *     specified, 4 fields i.e. entity type, id, created time is returned
+   *     specified, 3 fields i.e. entity type, id, created time is returned
-   *     {@link TimelineEntity} instance is returned.
-   *     On failures,
+   *     <cite>TimelineEntity</cite> instance is returned.<br>
+   *     On failures,<br>
-   *     returned.
+   *     returned.<br>
-   *     entity id cannot be found, HTTP 404(Not Found) is returned.
+   *     entity id cannot be found, HTTP 404(Not Found) is returned.<br>
-   *     specified, 4 fields i.e. entity type, id and created time is returned
+   *     specified, 3 fields i.e. entity type, id and created time is returned
-   *     {@link TimelineEntity} instance is returned.
-   *     On failures,
+   *     <cite>TimelineEntity</cite> instance is returned.<br>
+   *     On failures,<br>
-   *     returned.
+   *     returned.<br>
-   *     entity id cannot be found, HTTP 404(Not Found) is returned.
+   *     entity id cannot be found, HTTP 404(Not Found) is returned.<br>
-    String type = TimelineReaderWebServicesUtils.parseStr(entityType);
-    String id = TimelineReaderWebServicesUtils.parseStr(entityId);
-          TimelineReaderWebServicesUtils.parseStr(userId),
-          TimelineReaderWebServicesUtils.parseStr(clusterId),
-          TimelineReaderWebServicesUtils.parseStr(flowName),
-          TimelineReaderWebServicesUtils.parseLongStr(flowRunId),
-          TimelineReaderWebServicesUtils.parseStr(appId), type, id,
-          TimelineReaderWebServicesUtils.parseFieldsStr(
-          fields, COMMA_DELIMITER));
+          TimelineReaderWebServicesUtils.createTimelineReaderContext(
+          clusterId, userId, flowName, flowRunId, appId, entityType, entityId),
+          TimelineReaderWebServicesUtils.createTimelineDataToRetrieve(
+          null, null, fields));
-      throw new NotFoundException("Timeline entity {id: " + id + ", type: " +
-          type + " } is not found");
+      throw new NotFoundException("Timeline entity {id: " + entityId +
+          ", type: " + entityType + " } is not found");
-   *     {@link FlowRunEntity} instance is returned. By default, all metrics for
-   *     the flow run will be returned.
-   *     On failures,
+   *     <cite>FlowRunEntity</cite> instance is returned. By default, all
+   *     metrics for the flow run will be returned.<br>
+   *     On failures,<br>
-   *     HTTP 400(Bad Request) is returned.
+   *     HTTP 400(Bad Request) is returned.<br>
-   *     (Not Found) is returned.
+   *     (Not Found) is returned.<br>
-      entity = timelineReaderManager.getEntity(context.getUserId(),
-          context.getClusterId(), context.getFlowName(), context.getFlowRunId(),
-          null, TimelineEntityType.YARN_FLOW_RUN.toString(), null, null);
+      context.setEntityType(TimelineEntityType.YARN_FLOW_RUN.toString());
+      entity = timelineReaderManager.getEntity(context,
+          new TimelineDataToRetrieve());
-   *     {@link FlowRunEntity} instance is returned. By default, all metrics for
-   *     the flow run will be returned.
-   *     On failures,
+   *     <cite>FlowRunEntity</cite> instance is returned. By default, all
+   *     metrics for the flow run will be returned.<br>
+   *     On failures,<br>
-   *     returned.
+   *     returned.<br>
-   *     (Not Found) is returned.
+   *     (Not Found) is returned.<br>
-   *     {@link FlowRunEntity} instance is returned. By default, all metrics for
-   *     the flow run will be returned.
-   *     On failures,
+   *     <cite>FlowRunEntity</cite> instance is returned. By default, all
+   *     metrics for the flow run will be returned.<br>
+   *     On failures,<br>
-   *     returned.
+   *     returned.<br>
-   *     (Not Found) is returned.
+   *     (Not Found) is returned.<br>
-          TimelineReaderWebServicesUtils.parseStr(userId),
-          TimelineReaderWebServicesUtils.parseStr(clusterId),
-          TimelineReaderWebServicesUtils.parseStr(flowName),
-          TimelineReaderWebServicesUtils.parseLongStr(flowRunId),
-          null, TimelineEntityType.YARN_FLOW_RUN.toString(), null, null);
+          TimelineReaderWebServicesUtils.createTimelineReaderContext(
+          clusterId, userId, flowName, flowRunId, null,
+          TimelineEntityType.YARN_FLOW_RUN.toString(), null),
+          new TimelineDataToRetrieve());
-   * @param flowName Flow name to which the flow runs to be queried belongs to(
-   *     Mandatory path param).
-   *     set of {@link FlowRunEntity} instances for the given flow are returned.
-   *     On failures,
+   *     set of <cite>FlowRunEntity</cite> instances for the given flow are
+   *     returned.<br>
+   *     On failures,<br>
-   *     HTTP 400(Bad Request) is returned.
+   *     HTTP 400(Bad Request) is returned.<br>
-      entities = timelineReaderManager.getEntities(context.getUserId(),
-          context.getClusterId(), context.getFlowName(), null, null,
-          TimelineEntityType.YARN_FLOW_RUN.toString(),
-          TimelineReaderWebServicesUtils.parseLongStr(limit),
-          TimelineReaderWebServicesUtils.parseLongStr(createdTimeStart),
-          TimelineReaderWebServicesUtils.parseLongStr(createdTimeEnd),
-          null, null, null, null, null, null, TimelineReaderWebServicesUtils.
-          parseFieldsStr(fields, COMMA_DELIMITER));
+      context.setEntityType(TimelineEntityType.YARN_FLOW_RUN.toString());
+      entities = timelineReaderManager.getEntities(context,
+          TimelineReaderWebServicesUtils.createTimelineEntityFilters(
+          limit, createdTimeStart, createdTimeEnd, null, null, null,
+          null, null, null),
+          TimelineReaderWebServicesUtils.createTimelineDataToRetrieve(
+          null, null, fields));
-   *     set of {@link FlowRunEntity} instances for the given flow are returned.
-   *     On failures,
+   *     set of <cite>FlowRunEntity</cite> instances for the given flow are
+   *     returned.<br>
+   *     On failures,<br>
-   *     returned.
+   *     returned.<br>
-   *     set of {@link FlowRunEntity} instances for the given flow are returned.
-   *     On failures,
+   *     set of <cite>FlowRunEntity</cite> instances for the given flow are
+   *     returned.<br>
+   *     On failures,<br>
-   *     returned.
+   *     returned.<br>
-          TimelineReaderWebServicesUtils.parseStr(userId),
-          TimelineReaderWebServicesUtils.parseStr(clusterId),
-          TimelineReaderWebServicesUtils.parseStr(flowName), null, null,
-          TimelineEntityType.YARN_FLOW_RUN.toString(),
-          TimelineReaderWebServicesUtils.parseLongStr(limit),
-          TimelineReaderWebServicesUtils.parseLongStr(createdTimeStart),
-          TimelineReaderWebServicesUtils.parseLongStr(createdTimeEnd),
-          null, null, null, null, null, null, TimelineReaderWebServicesUtils.
-          parseFieldsStr(fields, COMMA_DELIMITER));
+          TimelineReaderWebServicesUtils.createTimelineReaderContext(
+          clusterId, userId, flowName, null, null,
+          TimelineEntityType.YARN_FLOW_RUN.toString(), null),
+          TimelineReaderWebServicesUtils.createTimelineEntityFilters(
+          limit, createdTimeStart, createdTimeEnd, null, null, null,
+          null, null, null),
+          TimelineReaderWebServicesUtils.createTimelineDataToRetrieve(
+          null, null, fields));
-   *     set of {@link FlowActivityEntity} instances are returned.
-   *     On failures,
+   *     set of <cite>FlowActivityEntity</cite> instances are returned.<br>
+   *     On failures,<br>
-   *     returned.
+   *     returned.<br>
-   *     Error) is returned.
+   *     Error) is returned.<br>
-   *     set of {@link FlowActivityEntity} instances are returned.
-   *     On failures,
+   *     set of <cite>FlowActivityEntity</cite> instances are returned.<br>
+   *     On failures,<br>
-   *     returned.
+   *     returned.<br>
+      TimelineEntityFilters entityFilters =
+          TimelineReaderWebServicesUtils.createTimelineEntityFilters(
+          limit, null, null, null, null, null, null, null, null);
+      entityFilters.setCreatedTimeBegin(range.dateStart);
+      entityFilters.setCreatedTimeEnd(range.dateEnd);
-          null, TimelineReaderWebServicesUtils.parseStr(clusterId), null, null,
-          null, TimelineEntityType.YARN_FLOW_ACTIVITY.toString(),
-          TimelineReaderWebServicesUtils.parseLongStr(limit), range.dateStart,
-          range.dateEnd, null, null, null, null, null, null, null);
+          TimelineReaderWebServicesUtils.createTimelineReaderContext(
+          clusterId, null, null, null, null,
+          TimelineEntityType.YARN_FLOW_ACTIVITY.toString(), null),
+          entityFilters, TimelineReaderWebServicesUtils.
+          createTimelineDataToRetrieve(null, null, null));
-   *     specified, 4 fields i.e. entity type(equivalent to YARN_APPLICATION),
+   *     specified, 3 fields i.e. entity type(equivalent to YARN_APPLICATION),
-   *     {@link TimelineEntity} instance is returned.
-   *     On failures,
+   *     <cite>TimelineEntity</cite> instance is returned.<br>
+   *     On failures,<br>
-   *     HTTP 400(Bad Request) is returned.
+   *     HTTP 400(Bad Request) is returned.<br>
-   *     returned.
+   *     returned.<br>
-      entity = timelineReaderManager.getEntity(context.getUserId(),
-          context.getClusterId(), context.getFlowName(), context.getFlowRunId(),
-          context.getAppId(), TimelineEntityType.YARN_APPLICATION.toString(),
-          null, TimelineReaderWebServicesUtils.parseFieldsStr(
-          fields, COMMA_DELIMITER));
+      context.setEntityType(TimelineEntityType.YARN_APPLICATION.toString());
+      entity = timelineReaderManager.getEntity(context,
+          TimelineReaderWebServicesUtils.createTimelineDataToRetrieve(
+          null, null, fields));
-   *     specified, 4 fields i.e. entity type(equivalent to YARN_APPLICATION),
+   *     specified, 3 fields i.e. entity type(equivalent to YARN_APPLICATION),
-   *     {@link TimelineEntity} instance is returned.
-   *     On failures,
+   *     <cite>TimelineEntity</cite> instance is returned.<br>
+   *     On failures,<br>
-   *     returned.
+   *     returned.<br>
-   *     app id cannot be found, HTTP 404(Not Found) is returned.
+   *     app id cannot be found, HTTP 404(Not Found) is returned.<br>
-   *     specified, 4 fields i.e. entity type(equivalent to YARN_APPLICATION),
+   *     specified, 3 fields i.e. entity type(equivalent to YARN_APPLICATION),
-   *     {@link TimelineEntity} instance is returned.
-   *     On failures,
+   *     <cite>TimelineEntity</cite> instance is returned.<br>
+   *     On failures,<br>
-   *     returned.
+   *     returned.<br>
-   *     app id cannot be found, HTTP 404(Not Found) is returned.
+   *     app id cannot be found, HTTP 404(Not Found) is returned.<br>
-          TimelineReaderWebServicesUtils.parseStr(userId),
-          TimelineReaderWebServicesUtils.parseStr(clusterId),
-          TimelineReaderWebServicesUtils.parseStr(flowName),
-          TimelineReaderWebServicesUtils.parseLongStr(flowRunId),
-          TimelineReaderWebServicesUtils.parseStr(appId),
-          TimelineEntityType.YARN_APPLICATION.toString(), null,
-          TimelineReaderWebServicesUtils.parseFieldsStr(
-          fields, COMMA_DELIMITER));
+          TimelineReaderWebServicesUtils.createTimelineReaderContext(
+          clusterId, userId, flowName, flowRunId, appId,
+          TimelineEntityType.YARN_APPLICATION.toString(), null),
+          TimelineReaderWebServicesUtils.createTimelineDataToRetrieve(
+          null, null, fields));
-   *     specified, 4 fields i.e. entity type(equivalent to YARN_APPLICATION),
+   *     specified, 3 fields i.e. entity type(equivalent to YARN_APPLICATION),
-   *     a set of {@link TimelineEntity} instances representing apps is
-   *     returned.
-   *     On failures,
+   *     a set of <cite>TimelineEntity</cite> instances representing apps is
+   *     returned.<br>
+   *     On failures,<br>
-   *     HTTP 400(Bad Request) is returned.
+   *     HTTP 400(Bad Request) is returned.<br>
-      entities = timelineReaderManager.getEntities(
-          TimelineReaderWebServicesUtils.parseStr(context.getUserId()),
-          TimelineReaderWebServicesUtils.parseStr(context.getClusterId()),
-          TimelineReaderWebServicesUtils.parseStr(context.getFlowName()),
-          context.getFlowRunId(),
-          TimelineReaderWebServicesUtils.parseStr(context.getAppId()),
-          TimelineEntityType.YARN_APPLICATION.toString(),
-          TimelineReaderWebServicesUtils.parseLongStr(limit),
-          TimelineReaderWebServicesUtils.parseLongStr(createdTimeStart),
-          TimelineReaderWebServicesUtils.parseLongStr(createdTimeEnd),
-          TimelineReaderWebServicesUtils.parseKeyStrValuesStr(
-          relatesTo, COMMA_DELIMITER, COLON_DELIMITER),
-          TimelineReaderWebServicesUtils.parseKeyStrValuesStr(
-          isRelatedTo, COMMA_DELIMITER, COLON_DELIMITER),
-          TimelineReaderWebServicesUtils.parseKeyStrValueObj(
-          infofilters, COMMA_DELIMITER, COLON_DELIMITER),
-          TimelineReaderWebServicesUtils.parseKeyStrValueStr(
-          conffilters, COMMA_DELIMITER, COLON_DELIMITER),
-          TimelineReaderWebServicesUtils.parseValuesStr(
-          metricfilters, COMMA_DELIMITER),
-          TimelineReaderWebServicesUtils.parseValuesStr(
-          eventfilters, COMMA_DELIMITER),
-          TimelineReaderWebServicesUtils.parseFieldsStr(
-          fields, COMMA_DELIMITER));
+      context.setEntityType(TimelineEntityType.YARN_APPLICATION.toString());
+      entities = timelineReaderManager.getEntities(context,
+          TimelineReaderWebServicesUtils.createTimelineEntityFilters(
+          limit, createdTimeStart, createdTimeEnd, relatesTo, isRelatedTo,
+          infofilters, conffilters, metricfilters, eventfilters),
+          TimelineReaderWebServicesUtils.createTimelineDataToRetrieve(
+          null, null, fields));
-   *     specified, 4 fields i.e. entity type(equivalent to YARN_APPLICATION),
+   *     specified, 3 fields i.e. entity type(equivalent to YARN_APPLICATION),
-   *     a set of {@link TimelineEntity} instances representing apps is
-   *     returned.
-   *     On failures,
+   *     a set of <cite>TimelineEntity</cite> instances representing apps is
+   *     returned.<br>
+   *     On failures,<br>
-   *     returned.
+   *     returned.<br>
-   *     specified, 4 fields i.e. entity type(equivalent to YARN_APPLICATION),
+   *     specified, 3 fields i.e. entity type(equivalent to YARN_APPLICATION),
-   *     a set of {@link TimelineEntity} instances representing apps is
-   *     returned.
-   *     On failures,
+   *     a set of <cite>TimelineEntity</cite> instances representing apps is
+   *     returned.<br>
+   *     On failures,<br>
-   *     returned.
+   *     returned.<br>
-   *     specified, 4 fields i.e. entity type(equivalent to YARN_APPLICATION),
+   *     specified, 3 fields i.e. entity type(equivalent to YARN_APPLICATION),
-   *     a set of {@link TimelineEntity} instances representing apps is
-   *     returned.
-   *     On failures,
+   *     a set of <cite>TimelineEntity</cite> instances representing apps is
+   *     returned.<br>
+   *     On failures,<br>
-   *     returned.
+   *     returned.<br>
-   *     specified, 4 fields i.e. entity type(equivalent to YARN_APPLICATION),
+   *     specified, 3 fields i.e. entity type(equivalent to YARN_APPLICATION),
-   *     a set of {@link TimelineEntity} instances representing apps is
-   *     returned.
-   *     On failures,
+   *     a set of <cite>TimelineEntity</cite> instances representing apps is
+   *     returned.<br>
+   *     On failures,<br>
-   *     returned.
+   *     returned.<br>

UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 MOV65 UPD66 UPD66 UPD66 UPD66 UPD66 MOV65 UPD66 UPD66 UPD66 UPD66 UPD66 MOV65 UPD66 UPD66 UPD66 UPD66 UPD66 MOV12 UPD66 UPD66 UPD66 UPD66 UPD66 MOV12 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 MOV12 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 MOV65 UPD66 UPD66 UPD66 UPD66 UPD66 MOV12 MOV65 UPD66 UPD66 UPD66 UPD66 UPD66 MOV65 UPD66 UPD66 UPD66 UPD66 UPD66 MOV12 MOV65 UPD66 UPD66 UPD66 UPD66 UPD66 MOV65 UPD66 UPD66 UPD66 UPD66 UPD66 MOV65 UPD66 UPD66 UPD66 UPD66 UPD66 MOV65 UPD66 UPD66 UPD66 UPD66 UPD66 MOV65 UPD66 UPD66 UPD66 UPD66 UPD66 INS21 INS21 INS21 INS60 INS21 INS21 INS21 INS21 INS32 INS32 INS32 INS43 INS59 INS32 INS32 INS32 INS32 INS42 INS42 MOV32 INS42 INS42 MOV32 INS42 INS42 MOV32 INS42 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 MOV32 INS42 INS42 MOV32 MOV42 INS32 INS32 INS32 MOV42 INS32 UPD42 UPD42 MOV42 INS14 INS32 INS14 MOV42 INS32 INS32 INS32 INS42 INS42 INS42 INS33 INS33 INS33 INS33 INS33 INS33 INS33 INS33 INS32 UPD42 MOV42 INS32 MOV42 INS32 MOV42 INS32 MOV42 UPD42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 UPD42 INS33 INS33 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 MOV42 MOV42 MOV42 INS33 MOV42 UPD42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 UPD42 INS33 INS33 UPD42 INS33 INS33 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 INS33 INS33 INS43 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 MOV42 MOV33 MOV32 INS33 INS43 MOV42 UPD42 MOV42 MOV42 MOV42 MOV42 MOV33 MOV33 MOV33 MOV33 MOV33 MOV33 UPD42 INS33 INS33 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 MOV33 MOV33 MOV32 INS33 MOV42 UPD42 MOV42 MOV42 MOV42 MOV42 MOV33 MOV33 MOV33 MOV33 MOV33 MOV33 UPD42 INS33 INS33 MOV42 UPD42 MOV42 MOV42 MOV33 MOV33 MOV33 INS33 MOV32 INS33 UPD42 MOV42 UPD42 MOV42 MOV33 MOV33 MOV33 UPD42 INS33 INS33 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 MOV42 MOV42 MOV32 MOV33 UPD42 INS33 INS33 MOV42 UPD42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 UPD42 INS33 INS33 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL66 DEL42 DEL65 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL66 DEL42 DEL65 DEL66 DEL42 DEL65 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL65 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL65 DEL42 DEL65 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL65 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL33 DEL33 DEL33 DEL42 DEL65 DEL42 DEL65 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL33 DEL33 DEL42 DEL66 DEL66 DEL65 DEL42 DEL65 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL33 DEL33 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL65 DEL42 DEL65 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL66 DEL42 DEL65 DEL66 DEL42 DEL65 DEL33 DEL32 DEL32 DEL40 DEL40 DEL33 DEL33 DEL33 DEL33 DEL42 DEL65 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL33 DEL42 DEL42 DEL65 DEL42 DEL65 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL66 DEL42 DEL65 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL66 DEL42 DEL65 DEL66 DEL42 DEL65 DEL66 DEL42 DEL65 DEL66 DEL42 DEL65