HDFS-11448. JN log segment syncing should support HA upgrade. Contributed by Hanisha Koneru.

-import org.apache.hadoop.util.Time;
+    // Delete the edits.sync directory
+    File editsSyncDir = journal.getStorage().getEditsSyncDir();
+    if (editsSyncDir.exists()) {
+      FileUtil.fullyDelete(editsSyncDir);
+    }
+  private boolean createEditsSyncDir() {
+    File editsSyncDir = journal.getStorage().getEditsSyncDir();
+    if (editsSyncDir.exists()) {
+      LOG.info(editsSyncDir + " directory already exists.");
+      return true;
+    }
+    return editsSyncDir.mkdir();
+  }
+
-    syncJournalDaemon = new Daemon(new Runnable() {
-      @Override
-      public void run() {
-        while(shouldSync) {
-          try {
-            if (!journal.isFormatted()) {
-              LOG.warn("Journal not formatted. Cannot sync.");
-            } else {
-              syncJournals();
-            }
-            Thread.sleep(journalSyncInterval);
-          } catch (Throwable t) {
-            if (!shouldSync) {
-              if (t instanceof InterruptedException) {
-                LOG.info("Stopping JournalNode Sync.");
-              } else {
-                LOG.warn("JournalNodeSyncer received an exception while " +
-                    "shutting down.", t);
-              }
-              break;
-            } else {
-              if (t instanceof InterruptedException) {
-                LOG.warn("JournalNodeSyncer interrupted", t);
-                break;
-              }
-            }
-            LOG.error(
-                "JournalNodeSyncer daemon received Runtime exception. ", t);
+    syncJournalDaemon = new Daemon(() -> {
+      // Wait for journal to be formatted to create edits.sync directory
+      while(!journal.isFormatted()) {
+        try {
+          Thread.sleep(journalSyncInterval);
+        } catch (InterruptedException e) {
+          LOG.error("JournalNodeSyncer daemon received Runtime exception.", e);
+          Thread.currentThread().interrupt();
+          return;
+        }
+      }
+      if (!createEditsSyncDir()) {
+        LOG.error("Failed to create directory for downloading log " +
+                "segments: %s. Stopping Journal Node Sync.",
+            journal.getStorage().getEditsSyncDir());
+        return;
+      }
+      while(shouldSync) {
+        try {
+          if (!journal.isFormatted()) {
+            LOG.warn("Journal cannot sync. Not formatted.");
+          } else {
+            syncJournals();
+          Thread.sleep(journalSyncInterval);
+        } catch (Throwable t) {
+          if (!shouldSync) {
+            if (t instanceof InterruptedException) {
+              LOG.info("Stopping JournalNode Sync.");
+              Thread.currentThread().interrupt();
+              return;
+            } else {
+              LOG.warn("JournalNodeSyncer received an exception while " +
+                  "shutting down.", t);
+            }
+            break;
+          } else {
+            if (t instanceof InterruptedException) {
+              LOG.warn("JournalNodeSyncer interrupted", t);
+              Thread.currentThread().interrupt();
+              return;
+            }
+          }
+          LOG.error(
+              "JournalNodeSyncer daemon received Runtime exception. ", t);
-  private boolean downloadMissingLogSegment(URL url, RemoteEditLog log) throws
-      IOException {
+  private boolean downloadMissingLogSegment(URL url, RemoteEditLog log)
+      throws IOException {
-    final long milliTime = Time.monotonicNow();
-    File tmpEditsFile = jnStorage.getTemporaryEditsFile(log.getStartTxId(), log
-        .getEndTxId(), milliTime);
+    // Download the log segment to current.tmp directory first.
+    File tmpEditsFile = jnStorage.getTemporaryEditsFile(
+        log.getStartTxId(), log.getEndTxId());
+
-    LOG.debug("Renaming " + tmpEditsFile.getName() + " to "
-        + finalEditsFile.getName());
-    boolean renameSuccess = journal.renameTmpSegment(tmpEditsFile,
+    final boolean moveSuccess = journal.moveTmpSegmentToCurrent(tmpEditsFile,
-    if (!renameSuccess) {
-      //If rename is not successful, delete the tmpFile
-      LOG.debug("Renaming unsuccessful. Deleting temporary file: "
-          + tmpEditsFile);
+    if (!moveSuccess) {
+      // If move is not successful, delete the tmpFile
+      LOG.debug("Move to current directory unsuccessful. Deleting temporary " +
+          "file: " + tmpEditsFile);

MOV31 MOV31 UPD39 UPD42 UPD83 INS42 INS8 INS60 INS25 INS60 INS25 INS41 INS21 INS21 INS60 INS43 INS59 INS32 INS8 INS43 INS59 INS32 INS8 INS32 INS7 INS32 MOV83 MOV39 MOV59 INS42 INS42 INS32 INS42 INS42 INS21 UPD42 MOV42 INS42 INS32 INS42 INS42 MOV21 INS41 INS42 INS42 INS42 INS14 INS42 INS42 UPD42 UPD42 INS32 INS42 INS32 INS32 INS42 INS9 MOV43 INS86 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS27 MOV8 INS42 INS45 INS61 INS25 UPD45 INS45 INS38 INS8 INS38 INS8 INS32 INS54 INS32 INS21 INS41 INS42 INS42 INS8 INS12 INS42 INS32 INS21 INS44 INS8 INS42 INS42 INS27 INS32 INS32 INS43 INS42 INS21 INS21 INS41 INS45 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS42 UPD45 INS21 INS41 INS21 INS41 INS32 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL42 DEL43 DEL1 DEL14 DEL14 DEL7 DEL21 DEL42 DEL78 DEL10 DEL42 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL60