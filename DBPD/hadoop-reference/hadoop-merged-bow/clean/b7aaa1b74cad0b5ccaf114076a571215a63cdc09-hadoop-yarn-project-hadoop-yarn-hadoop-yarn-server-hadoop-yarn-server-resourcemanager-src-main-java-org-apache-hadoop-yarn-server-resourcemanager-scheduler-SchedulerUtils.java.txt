Merge trunk into the HDFS-347 branch.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-347@1467511 13f79535-47bb-0310-9956-ffa450edef68

-      Resource minimumResource) {
+      Resource minimumResource,
+      Resource maximumResource) {
-          ask, resourceCalculator, clusterResource, minimumResource);
+          ask, resourceCalculator, clusterResource, minimumResource,
+          maximumResource);
-      Resource minimumResource) {
+      Resource minimumResource,
+      Resource maximumResource) {
-            resourceCalculator, ask.getCapability(), minimumResource);
-    ask.getCapability().setMemory(normalized.getMemory());
-    ask.getCapability().setVirtualCores(normalized.getVirtualCores());
+            resourceCalculator, ask.getCapability(), minimumResource,
+            maximumResource);
+    ask.setCapability(normalized);
+  }
+
+  /**
+   * Utility method to validate a resource request, by insuring that the
+   * requested memory/vcore is non-negative and not greater than max
+   */
+  public static void validateResourceRequest(ResourceRequest resReq,
+      Resource maximumResource) throws InvalidResourceRequestException {
+    if (resReq.getCapability().getMemory() < 0 ||
+        resReq.getCapability().getMemory() > maximumResource.getMemory()) {
+      throw new InvalidResourceRequestException("Invalid resource request"
+          + ", requested memory < 0"
+          + ", or requested memory > max configured"
+          + ", requestedMemory=" + resReq.getCapability().getMemory()
+          + ", maxMemory=" + maximumResource.getMemory());
+    }
+    if (resReq.getCapability().getVirtualCores() < 0 ||
+        resReq.getCapability().getVirtualCores() >
+        maximumResource.getVirtualCores()) {
+      throw new InvalidResourceRequestException("Invalid resource request"
+          + ", requested virtual cores < 0"
+          + ", or requested virtual cores > max configured"
+          + ", requestedVirtualCores="
+          + resReq.getCapability().getVirtualCores()
+          + ", maxVirtualCores=" + maximumResource.getVirtualCores());
+    }
+  }
+
+  /**
+   * Utility method to validate a list resource requests, by insuring that the
+   * requested memory/vcore is non-negative and not greater than max
+   */
+  public static void validateResourceRequests(List<ResourceRequest> ask,
+      Resource maximumResource) throws InvalidResourceRequestException {
+    for (ResourceRequest resReq : ask) {
+      validateResourceRequest(resReq, maximumResource);
+    }

INS31 INS31 INS44 INS44 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS43 INS42 MOV43 INS42 INS65 INS43 INS42 INS43 INS42 INS42 INS25 INS25 INS65 INS74 INS42 INS43 INS42 INS42 INS70 INS42 INS43 INS66 INS66 INS42 INS42 INS27 INS8 INS27 INS8 INS66 INS66 INS43 INS43 INS42 INS44 INS42 INS8 INS42 MOV42 UPD42 MOV42 MOV42 INS27 INS27 INS53 INS27 INS27 INS53 INS42 INS42 INS43 INS42 INS21 INS42 INS32 INS34 INS32 INS32 INS14 INS32 INS34 INS32 INS32 INS14 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS43 INS27 INS32 INS42 INS32 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS32 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS27 INS32 INS45 INS32 INS45 INS45 INS45 INS45 INS32 INS42 INS42 INS42 INS45 INS45 INS45 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21