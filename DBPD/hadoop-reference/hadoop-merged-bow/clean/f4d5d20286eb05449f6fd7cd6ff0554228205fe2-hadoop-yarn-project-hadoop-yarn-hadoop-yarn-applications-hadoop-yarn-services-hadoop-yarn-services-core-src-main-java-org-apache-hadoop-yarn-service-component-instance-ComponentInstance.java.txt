YARN-7486. Race condition in service AM that can cause NPE. Contributed by Jian He

-                  compInstance.getContainerId(), compInstance), 0, 1,
+                  event.getContainerId(), compInstance), 0, 1,
-      container.setId(compInstance.getContainerId().toString());
+      container.setId(event.getContainerId().toString());
-      container.setBareHost(compInstance.container.getNodeId().getHost());
+      container.setBareHost(compInstance.getNodeId().getHost());
-      LOG.info(compInstance.getCompInstanceId()
-              + ": Container completed. Requested a new container." + System
-              .lineSeparator() + " exitStatus={}, diagnostics={}.",
-          event.getStatus().getExitStatus(),
-          event.getStatus().getDiagnostics());
+      compInstance.cancelContainerStatusRetriever();
-            .submit(compInstance::cleanupRegistry);
+            .submit(() -> compInstance.cleanupRegistry(event.getContainerId()));
+
-          compInstance.serviceTimelinePublisher.componentInstanceFinished
-              (compInstance, event.getStatus().getExitStatus(), containerDiag);
+          compInstance.serviceTimelinePublisher
+              .componentInstanceFinished(event.getContainerId(),
+                  event.getStatus().getExitStatus(), containerDiag);
+      comp.reInsertPendingInstance(compInstance);
+
+      LOG.info(compInstance.getCompInstanceId()
+              + ": {} completed. Reinsert back to pending list and requested " +
+              "a new container." + System.lineSeparator() +
+              " exitStatus={}, diagnostics={}.",
+          event.getContainerId(), event.getStatus().getExitStatus(),
+          event.getStatus().getDiagnostics());
-
-      compInstance.removeContainer();
-  public boolean hasContainer() {
-    return this.container != null;
-  }
-
-  public void removeContainer() {
-    this.container = null;
-    this.compInstanceId.setContainerId(null);
-  }
-
-        getCompSpec().getContainer(getContainerId().toString());
+        getCompSpec().getContainer(status.getContainerId().toString());
-  public ContainerId getContainerId() {
-    return container.getId();
-  }
-
-    if (container != null) {
-      scheduler.removeLiveCompInstance(container.getId());
-      component.getScheduler().getAmRMClient()
-          .releaseAssignedContainer(container.getId());
-      getCompSpec().removeContainer(containerSpec);
-    }
+
+    getCompSpec().removeContainer(containerSpec);
+
+    if (container == null) {
+      LOG.info(getCompInstanceId() + " no container is assigned when " +
+          "destroying");
+      return;
+    }
+
+    ContainerId containerId = container.getId();
+    scheduler.removeLiveCompInstance(containerId);
+    component.getScheduler().getAmRMClient()
+        .releaseAssignedContainer(containerId);
-      serviceTimelinePublisher.componentInstanceFinished(this,
+      serviceTimelinePublisher.componentInstanceFinished(containerId,
-    scheduler.executorService.submit(this::cleanupRegistryAndCompHdfsDir);
+    cancelContainerStatusRetriever();
+    scheduler.executorService.submit(() ->
+        cleanupRegistryAndCompHdfsDir(containerId));
-  private void cleanupRegistry() {
-    ContainerId containerId = getContainerId();
+  private void cleanupRegistry(ContainerId containerId) {
-  public void cleanupRegistryAndCompHdfsDir() {
-    cleanupRegistry();
+  public void cleanupRegistryAndCompHdfsDir(ContainerId containerId) {
+    cleanupRegistry(containerId);
+  private void cancelContainerStatusRetriever() {
+    if (containerStatusFuture != null && !containerStatusFuture.isDone()) {
+      containerStatusFuture.cancel(true);
+    }
+  }
+

INS31 MOV25 INS44 INS44 UPD83 MOV83 UPD39 MOV39 UPD42 MOV42 INS8 MOV21 MOV21 MOV21 INS60 INS21 MOV21 INS21 MOV43 INS42 INS43 INS42 INS25 INS21 UPD27 MOV43 INS59 INS32 INS32 INS42 INS27 INS8 INS32 INS41 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS86 INS42 INS27 INS38 INS21 UPD42 INS42 INS42 INS42 INS32 INS32 INS42 MOV33 INS32 INS32 INS45 UPD45 INS42 INS42 UPD42 UPD42 INS27 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS9 UPD42 INS42 INS86 INS42 INS32 INS45 INS45 UPD42 INS32 UPD42 MOV42 INS42 INS42 INS32 INS32 INS42 INS42 UPD42 MOV42 INS42 DEL40 DEL42 DEL42 DEL90 DEL52 DEL42 DEL22 DEL27 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL52 DEL42 DEL22 DEL33 DEL7 DEL21 DEL52 DEL42 DEL22 DEL33 DEL32 DEL21 DEL8 DEL31 DEL83 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL32 DEL52 DEL52 DEL42 DEL90 DEL42 DEL42 DEL32 DEL59 DEL60