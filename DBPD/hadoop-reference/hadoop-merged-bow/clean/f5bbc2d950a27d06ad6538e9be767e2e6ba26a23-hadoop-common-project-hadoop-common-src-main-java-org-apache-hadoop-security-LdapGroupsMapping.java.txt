Merge r1460409 through r1462697 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1462698 13f79535-47bb-0310-9956-ffa450edef68

+import javax.naming.CommunicationException;
+  public static int RECONNECT_RETRY_COUNT = 3;
+  
-    List<String> groups = new ArrayList<String>();
-
+    List<String> emptyResults = new ArrayList<String>();
+    /*
+     * Normal garbage collection takes care of removing Context instances when they are no longer in use. 
+     * Connections used by Context instances being garbage collected will be closed automatically.
+     * So in case connection is closed and gets CommunicationException, retry some times with new new DirContext/connection. 
+     */
-      DirContext ctx = getDirContext();
-
-      // Search for the user. We'll only ever need to look at the first result
-      NamingEnumeration<SearchResult> results = ctx.search(baseDN,
-                                                           userSearchFilter,
-                                                           new Object[]{user},
-                                                           SEARCH_CONTROLS);
-      if (results.hasMoreElements()) {
-        SearchResult result = results.nextElement();
-        String userDn = result.getNameInNamespace();
-
-        NamingEnumeration<SearchResult> groupResults =
-          ctx.search(baseDN,
-                     "(&" + groupSearchFilter + "(" + groupMemberAttr + "={0}))",
-                     new Object[]{userDn},
-                     SEARCH_CONTROLS);
-        while (groupResults.hasMoreElements()) {
-          SearchResult groupResult = groupResults.nextElement();
-          Attribute groupName = groupResult.getAttributes().get(groupNameAttr);
-          groups.add(groupName.get().toString());
-        }
-      }
+      return doGetGroups(user);
+    } catch (CommunicationException e) {
+      LOG.warn("Connection is closed, will try to reconnect");
-      return new ArrayList<String>();
+      return emptyResults;
+    }
+
+    int retryCount = 0;
+    while (retryCount ++ < RECONNECT_RETRY_COUNT) {
+      //reset ctx so that new DirContext can be created with new connection
+      this.ctx = null;
+      
+      try {
+        return doGetGroups(user);
+      } catch (CommunicationException e) {
+        LOG.warn("Connection being closed, reconnecting failed, retryCount = " + retryCount);
+      } catch (NamingException e) {
+        LOG.warn("Exception trying to get groups for user " + user, e);
+        return emptyResults;
+      }
+    }
+    
+    return emptyResults;
+  }
+  
+  List<String> doGetGroups(String user) throws NamingException {
+    List<String> groups = new ArrayList<String>();
+
+    DirContext ctx = getDirContext();
+
+    // Search for the user. We'll only ever need to look at the first result
+    NamingEnumeration<SearchResult> results = ctx.search(baseDN,
+        userSearchFilter,
+        new Object[]{user},
+        SEARCH_CONTROLS);
+    if (results.hasMoreElements()) {
+      SearchResult result = results.nextElement();
+      String userDn = result.getNameInNamespace();
+
+      NamingEnumeration<SearchResult> groupResults =
+          ctx.search(baseDN,
+              "(&" + groupSearchFilter + "(" + groupMemberAttr + "={0}))",
+              new Object[]{userDn},
+              SEARCH_CONTROLS);
+      while (groupResults.hasMoreElements()) {
+        SearchResult groupResult = groupResults.nextElement();
+        Attribute groupName = groupResult.getAttributes().get(groupNameAttr);
+        groups.add(groupName.get().toString());
+      }
-
+  

INS26 INS40 INS23 INS31 INS83 INS83 INS39 INS59 MOV29 MOV78 INS83 INS83 INS74 INS42 INS44 MOV43 INS8 UPD42 INS43 MOV8 INS42 INS34 INS43 INS43 INS43 INS42 INS60 INS54 INS60 INS61 INS41 INS42 MOV60 MOV41 INS42 INS42 INS42 INS74 INS59 INS8 INS12 INS12 INS39 INS59 INS27 INS8 INS42 INS43 INS43 INS42 MOV14 INS41 INS44 INS8 INS44 INS8 INS42 INS34 INS37 INS42 INS21 INS54 INS42 INS42 INS32 INS43 INS42 INS21 INS43 INS42 INS21 INS41 INS42 INS7 INS8 INS12 MOV12 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS22 INS33 INS41 INS44 INS8 INS42 INS42 INS45 INS42 INS42 INS27 INS42 INS52 INS42 INS32 INS43 INS42 INS21 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS27 INS45 INS42 DEL83 DEL83 DEL54 DEL8