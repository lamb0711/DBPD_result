HDFS-4563. Update namespace/diskspace usage after deleting snapshots.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1455396 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.hdfs.protocol.NSQuotaExceededException;
-import org.apache.hadoop.hdfs.server.namenode.INode.Content.CountsMap.Key;
+import org.apache.hadoop.hdfs.protocol.QuotaExceededException;
+import org.apache.hadoop.hdfs.server.namenode.Content.CountsMap.Key;
+//import org.apache.hadoop.hdfs.util.EnumCounters;
-      throws NSQuotaExceededException {
+      throws QuotaExceededException {
-      throws NSQuotaExceededException {
+      throws QuotaExceededException {
-      throws NSQuotaExceededException {
+      throws QuotaExceededException {
-      throws NSQuotaExceededException;
+      throws QuotaExceededException;
-   * @return the number of deleted inodes in the subtree.
+   * @return quota usage delta when deleting a snapshot
-  public abstract int cleanSubtree(final Snapshot snapshot, Snapshot prior,
-      BlocksMapUpdateInfo collectedBlocks) throws NSQuotaExceededException;
+  public abstract Quota.Counts cleanSubtree(final Snapshot snapshot,
+      Snapshot prior, BlocksMapUpdateInfo collectedBlocks)
+      throws QuotaExceededException;
-   * @return the number of deleted inodes in the subtree.
-  public abstract int destroyAndCollectBlocks(
+  public abstract void destroyAndCollectBlocks(
-  /**
-   * The content types such as file, directory and symlink to be computed
-   * in {@link INode#computeContentSummary(CountsMap)}.
-   */
-  public enum Content {
-    /** The number of files. */
-    FILE,
-    /** The number of directories. */
-    DIRECTORY,
-    /** The number of symlinks. */
-    SYMLINK,
-
-    /** The total of file length in bytes. */
-    LENGTH,
-    /** The total of disk space usage in bytes including replication. */
-    DISKSPACE,
-
-    /** The number of snapshots. */
-    SNAPSHOT,
-    /** The number of snapshottable directories. */
-    SNAPSHOTTABLE_DIRECTORY;
-
-    /** Content counts. */
-    public static class Counts extends EnumCounters<Content> {
-      private Counts() {
-        super(Content.values());
-      }
-    }
-
-    private static final EnumCounters.Factory<Content, Counts> FACTORY
-        = new EnumCounters.Factory<Content, Counts>() {
-      @Override
-      public Counts newInstance() {
-        return new Counts();
-      }
-    };
-
-    /** A map of counters for the current state and the snapshots. */
-    public static class CountsMap
-        extends EnumCounters.Map<CountsMap.Key, Content, Counts> {
-      /** The key type of the map. */
-      public static enum Key { CURRENT, SNAPSHOT }
-
-      private CountsMap() {
-        super(FACTORY);
-      }
-    }
-  }
-
-   * Check and add namespace consumed to itself and the ancestors.
-   * @throws NSQuotaExceededException if quote is violated.
+   * Check and add namespace/diskspace consumed to itself and the ancestors.
+   * @throws QuotaExceededException if quote is violated.
-  public void addNamespaceConsumed(int delta) throws NSQuotaExceededException {
+  public void addSpaceConsumed(long nsDelta, long dsDelta)
+      throws QuotaExceededException {
-      parent.addNamespaceConsumed(delta);
+      parent.addSpaceConsumed(nsDelta, dsDelta);
-      throws NSQuotaExceededException {
+      throws QuotaExceededException {
-      throws NSQuotaExceededException {
+      throws QuotaExceededException {
-      throws NSQuotaExceededException {
+      throws QuotaExceededException {

UPD40 UPD40 UPD43 UPD43 UPD43 UPD43 INS43 UPD43 UPD39 UPD42 INS44 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 INS40 UPD42 INS39 INS42 UPD39 UPD42 UPD42 UPD42 UPD42 UPD42 UPD66 UPD66 UPD42 UPD42 INS42 UPD42 DEL39 DEL66 DEL65 DEL66 DEL66 DEL42 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL66 DEL65 DEL29 DEL42 DEL72 DEL66 DEL65 DEL29 DEL42 DEL72 DEL66 DEL65 DEL29 DEL42 DEL72 DEL66 DEL65 DEL29 DEL42 DEL72 DEL66 DEL65 DEL29 DEL42 DEL72 DEL66 DEL65 DEL29 DEL42 DEL72 DEL66 DEL65 DEL29 DEL42 DEL72 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL83 DEL42 DEL42 DEL42 DEL32 DEL46 DEL8 DEL31 DEL55 DEL83 DEL83 DEL83 DEL40 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL40 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL41 DEL8 DEL31 DEL1 DEL14 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL40 DEL43 DEL40 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL42 DEL72 DEL42 DEL72 DEL71 DEL83 DEL42 DEL42 DEL46 DEL8 DEL31 DEL55 DEL71