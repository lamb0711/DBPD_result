HDFS-14245. [SBN read] Enable ObserverReadProxyProvider to work with non-ClientProtocol proxy types. Contributed by Erik Krogen.

-public class ObserverReadProxyProvider<T extends ClientProtocol>
+public class ObserverReadProxyProvider<T>
-    this.observerReadEnabled = true;
+    if (wrappedProxy instanceof ClientProtocol) {
+      this.observerReadEnabled = true;
+    } else {
+      LOG.info("Disabling observer reads for {} because the requested proxy "
+          + "class does not implement {}", uri, ClientProtocol.class.getName());
+      this.observerReadEnabled = false;
+    }
-      return proxyInfo.proxy.getHAServiceState();
+      return getProxyAsClientProtocol(proxyInfo.proxy).getHAServiceState();
-    LOG.info("Failed to connect to {}. Assuming Standby state",
+    LOG.warn("Failed to connect to {} while fetching HAServiceState",
-    return HAServiceState.STANDBY;
+    return null;
+  }
+
+  /**
+   * Return the input proxy, cast as a {@link ClientProtocol}. This catches any
+   * {@link ClassCastException} and wraps it in a more helpful message. This
+   * should ONLY be called if the caller is certain that the proxy is, in fact,
+   * a {@link ClientProtocol}.
+   */
+  private ClientProtocol getProxyAsClientProtocol(T proxy) {
+    assert proxy instanceof ClientProtocol : "BUG: Attempted to use proxy "
+        + "of class " + proxy.getClass() + " as if it was a ClientProtocol.";
+    return (ClientProtocol) proxy;
-    failoverProxy.getProxy().proxy.msync();
+    getProxyAsClientProtocol(failoverProxy.getProxy().proxy).msync();
-      failoverProxy.getProxy().proxy.msync();
+      getProxyAsClientProtocol(failoverProxy.getProxy().proxy).msync();
-            failoverProxy.getProxy().proxy.msync();
+            getProxyAsClientProtocol(failoverProxy.getProxy().proxy).msync();
+        int unreachableCount = 0;
+            } else if (currState == null) {
+              unreachableCount++;
-                current.proxyInfo, method.getName(), currState);
+                current.proxyInfo, method.getName(),
+                currState == null ? "unreachable" : currState);
-        LOG.warn("{} observers have failed for read request {}; also found " +
-            "{} standby and {} active. Falling back to active.",
-            failedObserverCount, method.getName(), standbyCount, activeCount);
+        LOG.warn("{} observers have failed for read request {}; also found {} "
+            + "standby, {} active, and {} unreachable. Falling back to active.",
+            failedObserverCount, method.getName(), standbyCount, activeCount,
+            unreachableCount);
-      // Either all observers have failed, or that it is a write request.
-      // In either case, we'll forward the request to active NameNode.
+      // Either all observers have failed, observer reads are disabled,
+      // or this is a write request. In any case, forward the request to
+      // the active NameNode.
-      return RPC.getConnectionIdForProxy(getCurrentProxy().proxy);
+      return RPC.getConnectionIdForProxy(observerReadEnabled
+          ? getCurrentProxy().proxy : failoverProxy.getProxy().proxy);

INS31 INS29 INS83 INS43 INS42 INS44 INS8 INS25 INS65 INS42 INS43 INS42 INS6 INS41 INS21 INS62 INS8 INS8 INS33 INS66 INS65 INS66 INS65 INS66 INS66 INS66 INS65 INS66 INS42 INS62 INS27 INS11 INS32 INS42 MOV43 MOV21 INS21 INS21 UPD42 UPD45 INS42 INS42 INS42 INS42 INS43 INS27 INS32 INS45 INS43 INS42 INS32 INS42 INS32 INS7 INS42 INS45 INS45 INS42 INS42 INS42 INS42 MOV22 INS32 INS60 INS16 INS42 INS42 INS27 INS42 INS32 INS22 INS9 INS32 MOV32 MOV22 INS42 MOV27 INS39 INS59 INS42 MOV22 INS22 INS45 INS45 INS57 INS42 INS52 INS42 INS42 MOV40 UPD42 INS42 INS34 INS42 INS32 INS42 INS43 UPD45 UPD45 INS42 INS42 INS42 MOV27 MOV21 INS25 INS16 INS32 INS27 INS8 INS27 INS45 INS42 MOV32 MOV22 INS42 INS42 INS33 INS21 INS42 INS33 UPD42 INS37 INS42 DEL40 DEL42 DEL32 DEL21 DEL42