HDDS-182:CleanUp Reimplemented classes. Contributed by Hansiha Koneru

+import com.google.common.base.Preconditions;
+import java.util.concurrent.atomic.AtomicInteger;
-  private final long containerId;
+  private final long containerID;
+
+  // Path to container root dir.
+  private String containerPath;
+  /**
+   * Number of pending deletion blocks in container.
+   */
+  private final AtomicInteger numPendingDeletionBlocks;
-    this.containerType = type;
-    this.containerId = containerId;
-    this.layOutVersion = ChunkLayOutVersion.getLatestVersion().getVersion();
-    this.metadata = new TreeMap<>();
-    this.state = ContainerLifeCycleState.OPEN;
-    this.readCount = new AtomicLong(0L);
-    this.readBytes =  new AtomicLong(0L);
-    this.writeCount =  new AtomicLong(0L);
-    this.writeBytes =  new AtomicLong(0L);
-    this.bytesUsed = new AtomicLong(0L);
-    this.keyCount = new AtomicLong(0L);
-    this.maxSizeGB = size;
+    this(type, containerId,
+        ChunkLayOutVersion.getLatestVersion().getVersion(), size);
-  public ContainerData(ContainerType type, long containerId, int
-      layOutVersion, int size) {
+  public ContainerData(ContainerType type, long containerId,
+    int layOutVersion, int size) {
+    Preconditions.checkNotNull(type);
+
-    this.containerId = containerId;
+    this.containerID = containerId;
+    this.numPendingDeletionBlocks = new AtomicInteger(0);
-   * Returns the containerId.
+   * Returns the containerID.
-  public long getContainerId() {
-    return containerId;
+  public long getContainerID() {
+    return containerID;
+  }
+
+  /**
+   * Returns the path to base dir of the container.
+   * @return Path to base dir.
+   */
+  public String getContainerPath() {
+    return containerPath;
+  }
+
+  /**
+   * Set the base dir path of the container.
+   * @param baseDir path to base dir
+   */
+  public void setContainerPath(String baseDir) {
+    this.containerPath = baseDir;
-      if (this.metadata.containsKey(key)) {
-        throw new IOException("This key already exists. Key " + key);
-      }
-
+  /**
+   * Returns container metadata path.
+   */
+  public String getMetadataPath() {
+    return null;
+  }
+
+  /**
+   * Returns container data path.
+   */
+  public String getDataPath() {
+    return null;
+  }
+
+  /**
+   * Increase the count of pending deletion blocks.
+   *
+   * @param numBlocks increment number
+   */
+  public void incrPendingDeletionBlocks(int numBlocks) {
+    this.numPendingDeletionBlocks.addAndGet(numBlocks);
+  }
+
+  /**
+   * Decrease the count of pending deletion blocks.
+   *
+   * @param numBlocks decrement number
+   */
+  public void decrPendingDeletionBlocks(int numBlocks) {
+    this.numPendingDeletionBlocks.addAndGet(-1 * numBlocks);
+  }
+
+  /**
+   * Get the number of pending deletion blocks.
+   */
+  public int getNumPendingDeletionBlocks() {
+    return this.numPendingDeletionBlocks.get();
+  }
+
+  /**
+   * Returns a ProtoBuf Message from ContainerData.
+   *
+   * @return Protocol Buffer Message
+   */
+  public ContainerProtos.ContainerData getProtoBufMessage() {
+    ContainerProtos.ContainerData.Builder builder =
+        ContainerProtos.ContainerData.newBuilder();
+
+    builder.setContainerID(this.getContainerID());
+
+    if (this.containerPath != null) {
+      builder.setContainerPath(this.containerPath);
+    }
+
+    builder.setState(this.getState());
+
+    for (Map.Entry<String, String> entry : metadata.entrySet()) {
+      ContainerProtos.KeyValue.Builder keyValBuilder =
+          ContainerProtos.KeyValue.newBuilder();
+      builder.addMetadata(keyValBuilder.setKey(entry.getKey())
+          .setValue(entry.getValue()).build());
+    }
+
+    if (this.getBytesUsed() >= 0) {
+      builder.setBytesUsed(this.getBytesUsed());
+    }
+
+    builder.setContainerType(containerType);
+
+    return builder.build();
+  }

INS26 INS26 INS40 INS40 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS43 INS59 INS29 INS83 INS83 INS43 INS59 MOV29 MOV83 MOV42 MOV44 MOV44 MOV44 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS43 INS42 INS8 UPD42 INS42 INS42 INS65 INS42 INS42 INS17 INS21 INS21 INS65 INS41 INS65 INS65 INS42 INS41 INS65 INS65 INS43 INS42 MOV21 INS65 INS42 INS41 INS65 UPD42 MOV42 INS41 INS65 INS65 INS39 INS42 MOV21 INS65 INS65 INS39 INS42 MOV21 INS65 INS41 INS65 INS65 INS40 INS60 MOV21 INS25 INS21 INS70 INS25 INS21 MOV41 INS66 INS42 INS42 MOV32 INS42 INS32 INS7 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS8 INS66 INS33 INS66 INS33 INS66 INS42 INS66 INS32 INS66 INS42 INS66 INS32 INS66 INS32 INS66 INS66 INS43 INS59 INS32 INS27 INS8 INS32 INS44 INS32 INS8 INS27 INS8 INS32 INS32 INS42 INS42 INS42 INS22 INS14 INS42 MOV21 INS22 INS42 INS42 INS22 INS42 INS27 INS22 INS42 INS40 INS42 INS32 INS42 INS42 INS32 INS22 INS33 INS21 INS42 INS42 INS32 INS74 INS42 INS42 INS42 INS60 INS21 INS32 INS34 MOV21 INS42 INS42 INS42 INS42 INS42 UPD42 INS52 INS42 INS43 INS34 UPD42 MOV52 UPD42 MOV42 MOV52 UPD42 MOV42 INS38 INS42 MOV52 UPD42 MOV42 INS40 INS42 INS52 INS42 MOV52 UPD42 MOV42 INS32 INS52 INS42 INS43 INS43 INS43 INS43 INS59 INS32 INS52 INS42 INS32 INS42 INS34 INS42 INS42 INS22 INS40 UPD42 MOV42 INS42 INS40 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 MOV52 UPD42 MOV42 INS40 INS42 INS32 INS42 INS52 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL43 DEL74 DEL14 DEL7 DEL21 DEL22 DEL42 DEL43 DEL34 DEL14 DEL7 DEL21 DEL22 DEL42 DEL43 DEL34 DEL14 DEL7 DEL21 DEL22 DEL42 DEL43 DEL34 DEL14 DEL7 DEL21 DEL52 DEL42 DEL22 DEL43 DEL34 DEL14 DEL7 DEL21 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL8 DEL31 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL8 DEL22 DEL40 DEL7 DEL22 DEL42 DEL43 DEL34 DEL14 DEL7 DEL52 DEL42 DEL22 DEL42 DEL43 DEL34 DEL14 DEL7 DEL52 DEL42 DEL22 DEL42 DEL7 DEL42