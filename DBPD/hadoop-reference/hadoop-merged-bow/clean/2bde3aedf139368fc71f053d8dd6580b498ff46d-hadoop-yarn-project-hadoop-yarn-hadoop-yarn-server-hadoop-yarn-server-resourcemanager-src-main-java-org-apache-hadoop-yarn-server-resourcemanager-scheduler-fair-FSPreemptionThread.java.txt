YARN-7290. Method canContainerBePreempted can return true when it shouldn't. (Contributed by Steven Rand)

-import org.apache.hadoop.yarn.api.records.ApplicationAttemptId;
+import org.apache.hadoop.yarn.api.records.ApplicationId;
+import java.util.HashMap;
+import java.util.Map;
-        if (bestContainers != null && bestContainers.containers.size() > 0) {
-          containersToPreempt.addAll(bestContainers.containers);
-          // Reserve the containers for the starved app
-          trackPreemptionsAgainstNode(bestContainers.containers, starvedApp);
+        if (bestContainers != null) {
+          List<RMContainer> containers = bestContainers.getAllContainers();
+          if (containers.size() > 0) {
+            containersToPreempt.addAll(containers);
+            // Reserve the containers for the starved app
+            trackPreemptionsAgainstNode(containers, starvedApp);
+            // Warn application about containers to be killed
+            for (RMContainer container : containers) {
+              FSAppAttempt app = scheduler.getSchedulerApp(
+                      container.getApplicationAttemptId());
+              LOG.info("Preempting container " + container +
+                      " from queue " + app.getQueueName());
+              app.trackContainerForPreemption(container);
+            }
+          }
+      ApplicationId appId = app.getApplicationId();
-      if (app.canContainerBePreempted(container)) {
+      if (app.canContainerBePreempted(container,
+              preemptableContainers.getResourcesToPreemptForApp(appId))) {
-        if (!preemptableContainers.addContainer(container)) {
+        if (!preemptableContainers.addContainer(container, appId)) {
-    // Warn application about containers to be killed
-    for (RMContainer container : containers) {
-      ApplicationAttemptId appAttemptId = container.getApplicationAttemptId();
-      FSAppAttempt app = scheduler.getSchedulerApp(appAttemptId);
-      LOG.info("Preempting container " + container +
-          " from queue " + app.getQueueName());
-      app.trackContainerForPreemption(container);
-    }
-
-    List<RMContainer> containers;
+    Map<ApplicationId, List<RMContainer>> containersByApp;
-      containers = new ArrayList<>();
+      this.containersByApp = new HashMap<>();
-    private boolean addContainer(RMContainer container) {
+    private boolean addContainer(RMContainer container, ApplicationId appId) {
-      containers.add(container);
+      if (!containersByApp.containsKey(appId)) {
+        containersByApp.put(appId, new ArrayList<>());
+      }
+
+      containersByApp.get(appId).add(container);
+
+    private List<RMContainer> getAllContainers() {
+      List<RMContainer> allContainers = new ArrayList<>();
+      for (List<RMContainer> containersForApp : containersByApp.values()) {
+        allContainers.addAll(containersForApp);
+      }
+      return allContainers;
+    }
+
+    private Resource getResourcesToPreemptForApp(ApplicationId appId) {
+      Resource resourcesToPreempt = Resources.createResource(0, 0);
+      if (containersByApp.containsKey(appId)) {
+        for (RMContainer container : containersByApp.get(appId)) {
+          Resources.addTo(resourcesToPreempt, container.getAllocatedResource());
+        }
+      }
+      return resourcesToPreempt;
+    }

INS26 INS26 UPD40 INS40 INS40 INS8 INS31 INS31 MOV21 INS74 MOV21 INS44 INS83 INS74 INS42 INS8 INS83 INS43 INS42 INS44 INS8 INS43 INS43 INS74 UPD42 INS43 INS42 INS25 INS43 INS43 INS60 INS70 INS41 INS42 INS43 INS42 INS60 INS25 INS41 INS60 INS42 INS42 INS43 INS43 INS42 INS38 INS8 INS42 INS42 MOV74 INS59 INS44 INS32 INS8 INS42 INS42 INS43 INS59 INS32 INS8 INS42 INS43 INS59 INS42 INS42 INS22 INS14 INS32 INS21 INS32 INS42 MOV14 INS74 INS42 INS42 INS42 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS70 INS25 INS42 INS42 INS32 INS32 INS52 INS42 INS74 INS42 INS42 INS42 INS32 UPD42 MOV42 INS42 INS42 INS43 INS43 INS32 INS42 INS42 INS34 INS34 INS44 INS32 INS8 MOV27 INS8 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS21 INS60 MOV25 INS42 INS74 INS42 INS32 INS74 INS59 INS27 INS42 INS43 INS42 INS42 INS42 INS32 INS43 INS43 INS42 INS32 MOV32 MOV34 INS70 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV44 INS42 INS8 INS42 INS42 INS60 MOV21 MOV21 INS43 INS59 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 DEL40 DEL27 DEL27 DEL40 DEL40 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL70 DEL8 DEL42