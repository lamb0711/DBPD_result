HDFS-7331. Add Datanode network counts to datanode jmx page. Contributed by Charles Lamb.

+import static org.apache.hadoop.hdfs.DFSConfigKeys.DFS_DATANODE_NETWORK_COUNTS_CACHE_MAX_SIZE_KEY;
+import static org.apache.hadoop.hdfs.DFSConfigKeys.DFS_DATANODE_NETWORK_COUNTS_CACHE_MAX_SIZE_DEFAULT;
+import java.util.concurrent.ExecutionException;
+import com.google.common.cache.CacheBuilder;
+import com.google.common.cache.CacheLoader;
+import com.google.common.cache.LoadingCache;
+  // See the note below in incrDatanodeNetworkErrors re: concurrency.
+  private LoadingCache<String, Map<String, Long>> datanodeNetworkCounts;
+
+    final int dncCacheMaxSize =
+        conf.getInt(DFS_DATANODE_NETWORK_COUNTS_CACHE_MAX_SIZE_KEY,
+            DFS_DATANODE_NETWORK_COUNTS_CACHE_MAX_SIZE_DEFAULT) ;
+    datanodeNetworkCounts =
+        CacheBuilder.newBuilder()
+            .maximumSize(dncCacheMaxSize)
+            .build(new CacheLoader<String, Map<String, Long>>() {
+              @Override
+              public Map<String, Long> load(String key) throws Exception {
+                final Map<String, Long> ret = new HashMap<String, Long>();
+                ret.put("networkErrors", 0L);
+                return ret;
+              }
+            });
+
+  @Override // DataNodeMXBean
+  public Map<String, Map<String, Long>> getDatanodeNetworkCounts() {
+    return datanodeNetworkCounts.asMap();
+  }
+
+  void incrDatanodeNetworkErrors(String host) {
+    metrics.incrDatanodeNetworkErrors();
+
+    /*
+     * Synchronizing on the whole cache is a big hammer, but since it's only
+     * accumulating errors, it should be ok. If this is ever expanded to include
+     * non-error stats, then finer-grained concurrency should be applied.
+     */
+    synchronized (datanodeNetworkCounts) {
+      try {
+        final Map<String, Long> curCount = datanodeNetworkCounts.get(host);
+        curCount.put("networkErrors", curCount.get("networkErrors") + 1L);
+        datanodeNetworkCounts.put(host, curCount);
+      } catch (ExecutionException e) {
+        LOG.warn("failed to increment network error counts for " + host);
+      }
+    }
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS31 INS83 INS74 INS59 INS78 INS83 INS74 INS42 INS8 INS39 INS42 INS44 INS8 INS43 INS43 INS74 INS42 INS60 INS21 INS42 INS43 INS43 INS74 INS41 INS43 INS42 INS21 INS51 INS42 INS42 INS43 INS43 INS43 INS83 INS39 INS59 INS7 INS42 INS42 INS43 INS43 INS43 INS32 INS42 INS32 INS42 INS8 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS54 INS42 INS42 INS42 INS42 INS32 INS42 INS14 INS8 INS12 INS32 INS42 INS42 INS74 INS1 INS60 INS21 INS21 INS44 INS8 INS42 INS42 INS43 INS43 INS74 INS31 INS83 INS74 INS59 INS32 INS32 INS43 INS42 INS21 INS42 INS42 INS43 INS43 INS43 INS78 INS83 INS74 INS42 INS44 INS43 INS8 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS45 INS27 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS43 INS42 INS42 INS60 INS21 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS34 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS83 INS74 INS59 INS32 INS42 INS42 INS42 INS45 INS45 INS42 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS45 INS34 INS42 INS42 INS42 INS74 INS43 INS43 INS43 INS42 INS42 INS42