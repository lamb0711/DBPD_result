HDFS-3105.  Add DatanodeStorage information to block recovery.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1302683 13f79535-47bb-0310-9956-ffa450edef68

-  public ExtendedBlock updateReplicaUnderRecovery(ExtendedBlock oldBlock,
-                                          long recoveryId,
-                                          long newLength) throws IOException {
-    ReplicaInfo r = data.updateReplicaUnderRecovery(oldBlock,
+  public String updateReplicaUnderRecovery(final ExtendedBlock oldBlock,
+      final long recoveryId, final long newLength) throws IOException {
+    final String storageID = data.updateReplicaUnderRecovery(oldBlock,
-    return new ExtendedBlock(oldBlock.getBlockPoolId(), r);
+    return storageID;
+    private String storageID;
+
+    void updateReplicaUnderRecovery(String bpid, long recoveryId, long newLength 
+        ) throws IOException {
+      final ExtendedBlock b = new ExtendedBlock(bpid, rInfo);
+      storageID = datanode.updateReplicaUnderRecovery(b, recoveryId, newLength);
+    }
+
+    final String bpid = block.getBlockPoolId();
-          true, true, DatanodeID.EMPTY_ARRAY);
+          true, true, DatanodeID.EMPTY_ARRAY, null);
-    final ExtendedBlock newBlock = new ExtendedBlock(block.getBlockPoolId(), block
-        .getBlockId(), -1, recoveryId);
+    final ExtendedBlock newBlock = new ExtendedBlock(bpid, block.getBlockId(),
+        -1, recoveryId);
-    List<DatanodeID> successList = new ArrayList<DatanodeID>();
+    final List<BlockRecord> successList = new ArrayList<BlockRecord>();
-        ExtendedBlock reply = r.datanode.updateReplicaUnderRecovery(
-            new ExtendedBlock(newBlock.getBlockPoolId(), r.rInfo), recoveryId,
-            newBlock.getNumBytes());
-        assert reply.equals(newBlock) &&
-               reply.getNumBytes() == newBlock.getNumBytes() :
-          "Updated replica must be the same as the new block.";
-        successList.add(r.id);
+        r.updateReplicaUnderRecovery(bpid, recoveryId, newBlock.getNumBytes());
+        successList.add(r);
-    DatanodeID[] nlist = successList.toArray(new DatanodeID[successList.size()]);
+    final DatanodeID[] datanodes = new DatanodeID[successList.size()];
+    final String[] storages = new String[datanodes.length];
+    for(int i = 0; i < datanodes.length; i++) {
+      final BlockRecord r = successList.get(i);
+      datanodes[i] = r.id;
+      storages[i] = r.storageID;
+    }
-        nlist);
+        datanodes, storages);

INS43 INS44 INS44 INS23 INS31 INS42 INS83 MOV43 INS83 INS39 INS42 INS83 INS39 INS42 INS83 INS43 INS59 INS39 INS42 INS44 MOV44 MOV44 INS43 INS8 INS60 INS60 INS24 INS83 UPD43 INS42 INS42 INS42 INS43 INS42 INS42 INS60 INS21 INS83 INS43 INS59 INS83 UPD74 INS83 INS83 INS5 INS59 INS58 INS27 INS37 INS8 UPD42 UPD42 INS42 INS83 MOV43 INS59 INS7 INS42 INS42 MOV32 UPD43 UPD42 MOV3 INS43 INS85 INS42 INS3 INS39 INS59 INS42 INS40 INS42 INS60 INS21 INS21 UPD42 INS42 INS42 INS14 INS42 INS32 INS42 UPD42 UPD74 INS42 INS5 INS40 INS42 INS34 INS83 INS43 INS59 INS7 INS7 MOV43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 UPD43 INS21 INS43 INS85 INS42 INS42 INS32 INS2 INS40 INS2 INS40 UPD42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV42 UPD42 MOV42 MOV42 MOV32 INS42 DEL42 DEL42 DEL32 DEL42 DEL14 DEL42 DEL43 DEL42 DEL40 DEL42 DEL43 DEL42 DEL32 DEL40 DEL14 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL27 DEL27 DEL45 DEL6 DEL40 DEL42 DEL42 DEL32