HADOOP-11000. HAServiceProtocol's health state is incorrectly transitioned to SERVICE_NOT_RESPONDING (Contributed by Ming Ma)

+import com.google.protobuf.BlockingService;
+import org.apache.hadoop.ha.protocolPB.HAServiceProtocolPB;
+import org.apache.hadoop.ha.protocolPB.HAServiceProtocolServerSideTranslatorPB;
+import org.apache.hadoop.ha.proto.HAServiceProtocolProtos.HAServiceProtocolService;
+import org.apache.hadoop.ipc.ProtobufRpcEngine;
+import org.apache.hadoop.ipc.RPC;
+import org.apache.hadoop.ipc.Server;
+import org.apache.hadoop.net.NetUtils;
+import static org.apache.hadoop.fs.CommonConfigurationKeys.HA_HM_RPC_TIMEOUT_DEFAULT;
+
+  boolean testWithProtoBufRPC = false;
+    this(state, address, false);
+  }
+
+  DummyHAService(HAServiceState state, InetSocketAddress address,
+      boolean testWithProtoBufRPC) {
-    this.proxy = makeMock();
+    this.testWithProtoBufRPC = testWithProtoBufRPC;
+    if (testWithProtoBufRPC) {
+      this.address = startAndGetRPCServerAddress(address);
+    } else {
+      this.address = address;
+    }
+    Configuration conf = new Configuration();
+    this.proxy = makeMock(conf, HA_HM_RPC_TIMEOUT_DEFAULT);
-      Configuration conf = new Configuration();
-      conf.set(DUMMY_FENCE_KEY, DummyFencer.class.getName()); 
+      conf.set(DUMMY_FENCE_KEY, DummyFencer.class.getName());
-    this.address = address;
-  
-  private HAServiceProtocol makeMock() {
-    return Mockito.spy(new MockHAProtocolImpl());
+
+  private InetSocketAddress startAndGetRPCServerAddress(InetSocketAddress serverAddress) {
+    Configuration conf = new Configuration();
+
+    try {
+      RPC.setProtocolEngine(conf,
+          HAServiceProtocolPB.class, ProtobufRpcEngine.class);
+      HAServiceProtocolServerSideTranslatorPB haServiceProtocolXlator =
+          new HAServiceProtocolServerSideTranslatorPB(new MockHAProtocolImpl());
+      BlockingService haPbService = HAServiceProtocolService
+          .newReflectiveBlockingService(haServiceProtocolXlator);
+
+      Server server = new RPC.Builder(conf)
+          .setProtocol(HAServiceProtocolPB.class)
+          .setInstance(haPbService)
+          .setBindAddress(serverAddress.getHostName())
+          .setPort(serverAddress.getPort()).build();
+      server.start();
+      return NetUtils.getConnectAddress(server);
+    } catch (IOException e) {
+      return null;
+    }
+  }
+
+  private HAServiceProtocol makeMock(Configuration conf, int timeoutMs) {
+    HAServiceProtocol service;
+    if (!testWithProtoBufRPC) {
+      service = new MockHAProtocolImpl();
+    } else {
+      try {
+        service = super.getProxy(conf, timeoutMs);
+      } catch (IOException e) {
+        return null;
+      }
+    }
+    return Mockito.spy(service);
+    if (testWithProtoBufRPC) {
+      proxy = makeMock(conf, timeout);
+    }
-      if (state == HAServiceState.STANDBY) {
+      if (state == HAServiceState.STANDBY || state == HAServiceState.ACTIVE) {

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS31 INS39 INS59 INS42 INS44 INS44 INS8 INS44 INS83 INS43 INS42 INS44 INS8 INS44 INS44 INS8 INS42 INS9 INS43 INS42 INS43 INS42 INS17 INS39 INS42 INS21 INS25 MOV60 INS42 INS43 INS42 INS60 INS54 INS43 INS42 INS39 INS42 INS60 INS25 INS25 MOV41 INS42 INS42 INS42 INS42 INS9 INS7 INS42 INS8 INS8 INS42 INS43 INS59 INS8 INS12 INS42 INS43 INS59 INS38 INS8 INS8 INS42 INS8 INS22 INS42 INS21 MOV21 INS42 INS42 INS14 INS21 INS60 INS60 INS60 INS21 INS41 INS44 INS8 INS42 INS42 INS42 INS21 INS54 INS42 INS21 INS27 INS52 INS42 INS7 INS42 INS42 INS43 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS32 INS43 INS42 INS41 INS7 INS8 INS12 INS7 MOV27 INS27 INS22 INS32 INS42 INS42 INS42 INS42 INS57 INS57 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS14 INS21 INS44 INS8 INS42 INS32 INS42 INS40 INS52 INS42 INS42 INS42 INS43 INS43 INS43 MOV14 INS42 INS42 INS42 INS32 INS42 INS43 INS7 INS43 INS42 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS48 INS42 INS33 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS14 INS42 INS57 INS43 INS42 INS43 INS40 INS42 DEL8