HDDS-2020. Remove mTLS from Ozone GRPC. Contributed by Xiaoyu Yao.

Signed-off-by: Anu Engineer <aengineer@apache.org>

-import org.apache.commons.lang3.StringUtils;
-import java.io.File;
-import static org.apache.hadoop.hdds.HddsConfigKeys.HDDS_GRPC_MUTUAL_TLS_REQUIRED;
-import static org.apache.hadoop.hdds.HddsConfigKeys.HDDS_GRPC_MUTUAL_TLS_REQUIRED_DEFAULT;
-import static org.apache.hadoop.hdds.HddsConfigKeys.HDDS_TRUST_STORE_FILE_NAME;
-import static org.apache.hadoop.hdds.HddsConfigKeys.HDDS_TRUST_STORE_FILE_NAME_DEFAULT;
-import static org.apache.hadoop.hdds.HddsConfigKeys.HDDS_CLIENT_CERTIFICATE_CHAIN_FILE_NAME;
-import static org.apache.hadoop.hdds.HddsConfigKeys.HDDS_CLIENT_CERTIFICATE_CHAIN_FILE_NAME_DEFAULT;
-import static org.apache.hadoop.hdds.HddsConfigKeys.HDDS_SERVER_CERTIFICATE_CHAIN_FILE_NAME;
-import static org.apache.hadoop.hdds.HddsConfigKeys.HDDS_SERVER_CERTIFICATE_CHAIN_FILE_NAME_DEFAULT;
-  private String trustStoreFileName;
-  private String serverCertChainFileName;
-  private String clientCertChainFileName;
-  private boolean grpcMutualTlsRequired;
-      this.grpcMutualTlsRequired = configuration.getBoolean(
-          HDDS_GRPC_MUTUAL_TLS_REQUIRED, HDDS_GRPC_MUTUAL_TLS_REQUIRED_DEFAULT);
-
-      this.trustStoreFileName = this.configuration.get(
-          HDDS_TRUST_STORE_FILE_NAME, HDDS_TRUST_STORE_FILE_NAME_DEFAULT);
-
-      this.clientCertChainFileName = this.configuration.get(
-          HDDS_CLIENT_CERTIFICATE_CHAIN_FILE_NAME,
-          HDDS_CLIENT_CERTIFICATE_CHAIN_FILE_NAME_DEFAULT);
-
-      this.serverCertChainFileName = this.configuration.get(
-          HDDS_SERVER_CERTIFICATE_CHAIN_FILE_NAME,
-          HDDS_SERVER_CERTIFICATE_CHAIN_FILE_NAME_DEFAULT);
-
-   * Returns true if TLS mutual authentication is enabled for gRPC services.
-   * @return true if TLS is enabled for gRPC services.
-   */
-  public boolean isGrpcMutualTlsRequired() {
-    return this.grpcMutualTlsRequired;
-  }
-
-  /**
-   * Returns the TLS-enabled gRPC client private key file(Only needed for mutual
-   * authentication) for the given component.
-   * @param component name of the component.
-   * @return the TLS-enabled gRPC client private key file.
-   */
-  public File getClientPrivateKeyFile(String component) {
-    return Paths.get(getKeyLocation(component).toString(),
-        "client." + privateKeyFileName).toFile();
-  }
-
-  /**
-   * Returns the TLS-enabled gRPC client private key file(Only needed for mutual
-   * authentication).
-   * @return the TLS-enabled gRPC client private key file.
-   */
-  public File getClientPrivateKeyFile() {
-    return getClientPrivateKeyFile(StringUtils.EMPTY);
-  }
-
-  /**
-   * Returns the TLS-enabled gRPC server private key file for the given
-   * component.
-   * @param component name of the component.
-   * @return the TLS-enabled gRPC server private key file.
-   */
-  public File getServerPrivateKeyFile(String component) {
-    return Paths.get(getKeyLocation(component).toString(),
-        "server." + privateKeyFileName).toFile();
-  }
-
-  /**
-   * Returns the TLS-enabled gRPC server private key file.
-   * @return the TLS-enabled gRPC server private key file.
-   */
-  public File getServerPrivateKeyFile() {
-    return getServerPrivateKeyFile(StringUtils.EMPTY);
-  }
-
-  /**
-   * Get the trusted CA certificate file for the given component. (CA
-   * certificate)
-   * @param component name of the component.
-   * @return the trusted CA certificate.
-   */
-  public File getTrustStoreFile(String component) {
-    return Paths.get(getKeyLocation(component).toString(),
-        trustStoreFileName).
-        toFile();
-  }
-
-  /**
-   * Get the trusted CA certificate file. (CA certificate)
-   * @return the trusted CA certificate.
-   */
-  public File getTrustStoreFile() {
-    return getTrustStoreFile(StringUtils.EMPTY);
-  }
-
-  /**
-   * Get the TLS-enabled gRPC Client certificate chain file for the given
-   * component (only needed for
-   * mutual authentication).
-   * @param component name of the component.
-   * @return the TLS-enabled gRPC Server certificate chain file.
-   */
-  public File getClientCertChainFile(String component) {
-    return Paths.get(getKeyLocation(component).toString(),
-        clientCertChainFileName).
-        toFile();
-  }
-
-  /**
-   * Get the TLS-enabled gRPC Client certificate chain file (only needed for
-   * mutual authentication).
-   * @return the TLS-enabled gRPC Server certificate chain file.
-   */
-  public File getClientCertChainFile() {
-    return getClientCertChainFile(StringUtils.EMPTY);
-  }
-
-  /**
-   * Get the TLS-enabled gRPC Server certificate chain file for the given
-   * component.
-   * @param component name of the component.
-   * @return the TLS-enabled gRPC Server certificate chain file.
-   */
-  public File getServerCertChainFile(String component) {
-    return Paths.get(getKeyLocation(component).toString(),
-        serverCertChainFileName).
-        toFile();
-  }
-
-  /**
-   * Get the TLS-enabled gRPC Server certificate chain file.
-   * @return the TLS-enabled gRPC Server certificate chain file.
-   */
-  public File getServerCertChainFile() {
-    return getServerCertChainFile(StringUtils.EMPTY);
-  }
-
-  /**

DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL52 DEL42 DEL22 DEL41 DEL8 DEL31 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL45 DEL42 DEL27 DEL32 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL40 DEL32 DEL41 DEL8 DEL31 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL45 DEL42 DEL27 DEL32 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL40 DEL32 DEL41 DEL8 DEL31 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL40 DEL32 DEL41 DEL8 DEL31 DEL66 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL40 DEL32 DEL41 DEL8 DEL31 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL40 DEL32 DEL41 DEL8 DEL31