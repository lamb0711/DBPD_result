YARN-249. Capacity Scheduler web page should show list of active users per queue like it used to (in 1.x) (Ravi Prakash via tgraves)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1445673 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.util.StringUtils;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UserInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.ResourceInfo;
+    //Return a string describing one resource as a percentage of another
+    private String getPercentage(ResourceInfo numerator, ResourceInfo denominator) {
+      StringBuilder percentString = new StringBuilder("Memory: ");
+      if (numerator != null) {
+        percentString.append(numerator.getMemory());
+      }
+      if (denominator.getMemory() != 0) {
+        percentString.append(" (<span title='of used resources in this queue'>")
+          .append(StringUtils.format("%.2f", numerator.getMemory() * 100.0 /
+            denominator.getMemory()) + "%</span>)");
+      }
+      percentString.append(", vCores: ");
+      if (numerator != null) {
+        percentString.append(numerator.getvCores());
+      }
+      if (denominator.getvCores() != 0) {
+        percentString.append(" (<span title='of used resources in this queue'>")
+          .append(StringUtils.format("%.2f", numerator.getvCores() * 100.0 /
+          denominator.getvCores()) + "%</span>)");
+      }
+      return percentString.toString();
+    }
+
+      StringBuilder activeUserList = new StringBuilder("");
+      ResourceInfo usedResources = lqinfo.getResourcesUsed();
+      ArrayList<UserInfo> users = lqinfo.getUsers().getUsersList();
+      for (UserInfo entry: users) {
+        activeUserList.append(entry.getUsername()).append(" &lt;")
+          .append(getPercentage(entry.getResourcesUsed(), usedResources))
+          .append(", Active Apps: " + entry.getNumActiveApplications())
+          .append(", Pending Apps: " + entry.getNumPendingApplications())
+          .append("&gt;<br style='display:block'>"); //Force line break
+      }
+
-          _("Configured User Limit Factor:", String.format("%.1f", lqinfo.getUserLimitFactor()));
+          _("Configured User Limit Factor:", String.format("%.1f", lqinfo.getUserLimitFactor())).
+          _r("Active users: ", activeUserList.toString());

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS83 INS43 INS42 INS44 INS44 INS8 INS42 INS43 INS42 INS43 INS42 INS60 INS25 INS25 INS21 INS25 INS25 INS41 INS60 INS60 INS60 INS70 INS42 INS42 INS43 INS59 INS27 INS8 INS27 INS8 INS32 INS27 INS8 INS27 INS8 INS32 INS43 INS59 INS43 INS59 INS74 INS59 INS44 INS42 INS8 INS42 INS42 INS14 INS42 INS33 INS21 INS32 INS34 INS21 INS42 INS42 INS45 INS42 INS33 INS21 INS32 INS34 INS21 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS43 INS42 INS21 INS32 INS43 INS45 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS43 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 MOV32 INS42 INS45 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS27 INS42 INS42 INS32 INS32 INS42 INS27 INS42 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS45 INS42 INS42 INS42 INS42 INS45 INS32 INS45 INS32 INS42 INS27 INS42 INS42 INS45 INS27 INS42 INS42 INS45 INS27 INS32 INS42 INS27 INS45 INS32 INS27 INS32 INS27 INS32 INS32 INS42 INS32 INS45 INS32 INS42 INS42 INS32 INS34 INS42 INS42 INS32 INS34 INS42 INS42 INS32 INS42 INS45 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42