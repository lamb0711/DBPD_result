YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.

-import static org.apache.hadoop.yarn.server.resourcemanager.placement.QueuePlacementRuleUtils.extractQueuePath;
+  protected CapacitySchedulerQueueManager queueManager;
-    CapacitySchedulerQueueManager queueManager =
-        schedulerContext.getCapacitySchedulerQueueManager();
+    queueManager = schedulerContext.getCapacitySchedulerQueueManager();
+      QueuePath queuePath = mapping.getQueuePath();
-      QueuePath queuePath = extractQueuePath(mapping.getQueue());
-        //Try getting queue by its leaf queue name
-        // without splitting into parent/leaf queues
-        CSQueue queue = queueManager.getQueue(mapping.getQueue());
-        if (ifQueueDoesNotExist(queue)) {
-          //Try getting the queue by extracting leaf and parent queue names
-          //Assuming its a potential auto created leaf queue
-          queue = queueManager.getQueue(queuePath.getLeafQueue());
+        //at this point mapping.getQueueName() return only the queue name, since
+        //the config parsing have been changed making QueueMapping more
+        //consistent
-          if (ifQueueDoesNotExist(queue)) {
-            //if leaf queue does not exist,
-            // this could be a potential auto created leaf queue
-            //validate if parent queue is specified,
-            // then it should exist and
-            // be an instance of AutoCreateEnabledParentQueue
-            QueueMappingEntity newMapping =
-                validateAndGetAutoCreatedQueueMapping(queueManager, mapping,
-                    queuePath);
-            if (newMapping == null) {
-              throw new IOException(
-                  "mapping contains invalid or non-leaf queue " + mapping
-                      .getQueue());
-            }
-            newMappings.add(newMapping);
-          } else{
-            QueueMappingEntity newMapping = validateAndGetQueueMapping(
-                queueManager, queue, mapping, queuePath);
-            newMappings.add(newMapping);
+        CSQueue queue = queueManager.getQueue(mapping.getFullPath());
+        if (ifQueueDoesNotExist(queue)) {
+          //Try getting queue by its full path name, if it exists it is a static
+          //leaf queue indeed, without any auto creation magic
+
+          if (queueManager.isAmbiguous(queuePath.getFullPath())) {
+            throw new IOException(
+              "mapping contains ambiguous leaf queue reference " + mapping
+                .getFullPath());
-        } else{
+
+          //if leaf queue does not exist,
+          // this could be a potential auto created leaf queue
+          //validate if parent queue is specified,
+          // then it should exist and
+          // be an instance of AutoCreateEnabledParentQueue
+          QueueMappingEntity newMapping =
+              validateAndGetAutoCreatedQueueMapping(queueManager, mapping,
+                  queuePath);
+          if (newMapping == null) {
+            throw new IOException(
+                "mapping contains invalid or non-leaf queue " + mapping
+                    .getQueue());
+          }
+          newMappings.add(newMapping);
+        } else {
-      } else{
+      } else {
-          return getPlacementContext(mapping, applicationName);
+          return getPlacementContext(mapping, applicationName, queueManager);
-          return getPlacementContext(mapping);
+          return getPlacementContext(mapping, queueManager);
-        return getPlacementContext(mapping);
+        return getPlacementContext(mapping, queueManager);

INS23 INS83 MOV43 INS59 MOV8 INS42 MOV25 MOV60 MOV60 MOV60 MOV21 MOV60 MOV60 INS21 INS70 MOV25 MOV41 INS7 MOV44 INS42 MOV8 MOV8 INS42 MOV32 MOV21 MOV21 MOV21 MOV41 MOV43 MOV32 UPD42 INS32 INS60 MOV60 MOV25 MOV42 UPD42 MOV42 MOV43 INS59 INS42 INS32 INS25 MOV42 MOV21 INS21 UPD42 MOV42 INS42 MOV42 MOV42 MOV32 INS32 INS8 UPD42 MOV42 MOV42 INS32 UPD42 UPD42 INS42 INS42 INS32 INS53 MOV42 MOV42 MOV42 INS42 INS42 MOV42 INS42 INS42 INS42 INS42 INS14 INS43 INS27 INS42 INS45 INS32 INS42 INS42 DEL40 DEL26 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL25 DEL42 DEL59 DEL60 DEL42 DEL70 DEL8