Merge remote-tracking branch 'origin/trunk' into MR-2841

Conflicts:
	hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/MapTask.java

-public abstract class FSQueue extends Schedulable implements Queue {
+public abstract class FSQueue implements Queue, Schedulable {
+  private Resource fairShare = Resources.createResource(0, 0);
+  private Resource steadyFairShare = Resources.createResource(0, 0);
+  private long fairSharePreemptionTimeout = Long.MAX_VALUE;
+  private long minSharePreemptionTimeout = Long.MAX_VALUE;
+
-  
+
+  /** Get the fair share assigned to this Schedulable. */
+  public Resource getFairShare() {
+    return fairShare;
+  }
+
-    super.setFairShare(fairShare);
+    this.fairShare = fairShare;
-  
+
+  /** Get the steady fair share assigned to this Schedulable. */
+  public Resource getSteadyFairShare() {
+    return steadyFairShare;
+  }
+
+  public void setSteadyFairShare(Resource steadyFairShare) {
+    this.steadyFairShare = steadyFairShare;
+    metrics.setSteadyFairShare(steadyFairShare);
+  }
+
-  
+
+  public long getFairSharePreemptionTimeout() {
+    return fairSharePreemptionTimeout;
+  }
+
+  public void setFairSharePreemptionTimeout(long fairSharePreemptionTimeout) {
+    this.fairSharePreemptionTimeout = fairSharePreemptionTimeout;
+  }
+
+  public long getMinSharePreemptionTimeout() {
+    return minSharePreemptionTimeout;
+  }
+
+  public void setMinSharePreemptionTimeout(long minSharePreemptionTimeout) {
+    this.minSharePreemptionTimeout = minSharePreemptionTimeout;
+  }
+
-  
+
+  /**
+   * Update the min/fair share preemption timeouts for this queue.
+   */
+  public void updatePreemptionTimeouts() {
+    // For min share
+    minSharePreemptionTimeout = scheduler.getAllocationConfiguration()
+        .getMinSharePreemptionTimeout(getName());
+    if (minSharePreemptionTimeout == -1 && parent != null) {
+      minSharePreemptionTimeout = parent.getMinSharePreemptionTimeout();
+    }
+    // For fair share
+    fairSharePreemptionTimeout = scheduler.getAllocationConfiguration()
+        .getFairSharePreemptionTimeout(getName());
+    if (fairSharePreemptionTimeout == -1 && parent != null) {
+      fairSharePreemptionTimeout = parent.getFairSharePreemptionTimeout();
+    }
+  }
+
-   * Helper method to check if the queue should preempt containers
-   *
-   * @return true if check passes (can preempt) or false otherwise
+   * Returns true if queue has at least one app running.
-  protected boolean preemptContainerPreCheck() {
-    if (this == scheduler.getQueueManager().getRootQueue()) {
-      return true;
-    }
-    return parent.getPolicy()
-        .checkIfUsageOverFairShare(getResourceUsage(), getFairShare());
+  public boolean isActive() {
+    return getNumRunnableApps() > 0;
+  }
+
+  /** Convenient toString implementation for debugging. */
+  @Override
+  public String toString() {
+    return String.format("[%s, demand=%s, running=%s, share=%s, w=%s]",
+        getName(), getDemand(), getResourceUsage(), fairShare, getWeights());

MOV43 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS29 INS83 INS43 INS42 INS8 INS29 UPD83 MOV83 INS43 INS42 INS8 INS83 UPD39 MOV39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS78 INS83 INS43 INS42 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS40 INS42 INS40 MOV65 INS42 INS41 UPD65 MOV65 INS42 INS41 INS43 INS42 INS21 INS21 INS41 INS39 INS42 INS21 INS41 INS39 INS42 INS21 INS65 INS21 INS25 INS21 INS25 INS65 MOV41 INS65 INS42 INS42 MOV41 INS42 INS42 INS34 INS34 INS42 INS42 INS34 INS34 UPD66 INS42 INS7 UPD66 INS42 INS42 INS7 INS32 INS42 INS7 INS42 INS7 INS66 INS7 INS27 INS8 INS7 INS27 INS8 INS66 INS27 INS66 MOV42 INS22 INS42 INS22 INS42 INS42 INS42 INS42 INS22 INS42 INS22 INS42 INS42 INS32 INS27 INS27 INS21 INS42 INS32 INS27 INS27 INS21 INS32 INS34 INS42 UPD42 MOV42 INS45 INS32 INS32 UPD42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 MOV32 INS42 INS32 INS42 INS38 INS42 INS33 INS7 INS32 INS42 INS32 INS42 INS38 INS42 INS33 INS7 INS42 UPD42 MOV42 INS42 UPD42 UPD42 UPD42 MOV42 INS34 INS42 INS32 INS42 INS42 INS42 INS34 INS42 INS32 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL48 DEL9 DEL32 DEL29 DEL42 DEL52 DEL32 DEL27 DEL8 DEL25 DEL8 DEL31