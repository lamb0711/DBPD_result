YARN-7053. Move curator transaction support to ZKCuratorManager. (Jonathan Hung via Subru).

+import org.apache.curator.framework.api.transaction.CuratorTransaction;
+import org.apache.curator.framework.api.transaction.CuratorTransactionFinal;
-
-   * @param conf Configuration for the connection.
-   * @param conf Configuration for the connection.
+
+  public void safeCreate(String path, byte[] data, List<ACL> acl,
+      CreateMode mode, List<ACL> fencingACL, String fencingNodePath)
+      throws Exception {
+    if (!exists(path)) {
+      SafeTransaction transaction = createTransaction(fencingACL,
+          fencingNodePath);
+      transaction.create(path, data, acl, mode);
+      transaction.commit();
+    }
+  }
+
+  /**
+   * Deletes the path. Checks for existence of path as well.
+   * @param path Path to be deleted.
+   * @throws Exception if any problem occurs while performing deletion.
+   */
+  public void safeDelete(final String path, List<ACL> fencingACL,
+      String fencingNodePath) throws Exception {
+    if (exists(path)) {
+      SafeTransaction transaction = createTransaction(fencingACL,
+          fencingNodePath);
+      transaction.delete(path);
+      transaction.commit();
+    }
+  }
+
+  public void safeSetData(String path, byte[] data, int version,
+      List<ACL> fencingACL, String fencingNodePath)
+      throws Exception {
+    SafeTransaction transaction = createTransaction(fencingACL,
+        fencingNodePath);
+    transaction.setData(path, data, version);
+    transaction.commit();
+  }
+
+  public SafeTransaction createTransaction(List<ACL> fencingACL,
+      String fencingNodePath) throws Exception {
+    return new SafeTransaction(fencingACL, fencingNodePath);
+  }
+
+  /**
+   * Use curator transactions to ensure zk-operations are performed in an all
+   * or nothing fashion. This is equivalent to using ZooKeeper#multi.
+   *
+   * TODO (YARN-3774): Curator 3.0 introduces CuratorOp similar to Op. We ll
+   * have to rewrite this inner class when we adopt that.
+   */
+  public class SafeTransaction {
+    private CuratorTransactionFinal transactionFinal;
+    private String fencingNodePath;
+
+    SafeTransaction(List<ACL> fencingACL, String fencingNodePath)
+        throws Exception {
+      this.fencingNodePath = fencingNodePath;
+      CuratorTransaction transaction = curator.inTransaction();
+      transactionFinal = transaction.create()
+          .withMode(CreateMode.PERSISTENT).withACL(fencingACL)
+          .forPath(fencingNodePath, new byte[0]).and();
+    }
+
+    public void commit() throws Exception {
+      transactionFinal = transactionFinal.delete()
+          .forPath(fencingNodePath).and();
+      transactionFinal.commit();
+    }
+
+    public void create(String path, byte[] data, List<ACL> acl, CreateMode mode)
+        throws Exception {
+      transactionFinal = transactionFinal.create()
+          .withMode(mode).withACL(acl).forPath(path, data).and();
+    }
+
+    public void delete(String path) throws Exception {
+      transactionFinal = transactionFinal.delete().forPath(path).and();
+    }
+
+    public void setData(String path, byte[] data, int version)
+        throws Exception {
+      transactionFinal = transactionFinal.setData()
+          .withVersion(version).forPath(path, data).and();
+    }
+  }

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS31 INS55 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS29 INS83 INS42 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS43 INS42 INS5 INS42 INS74 INS42 INS43 INS42 INS74 INS42 INS43 INS42 INS42 INS25 INS65 INS65 INS65 INS83 INS43 INS42 INS74 INS42 INS43 INS42 INS42 INS25 INS43 INS42 INS5 INS42 INS39 INS42 INS74 INS42 INS43 INS42 INS42 INS60 INS21 INS21 INS42 INS74 INS42 INS43 INS42 INS42 INS41 INS65 INS83 INS43 INS59 INS83 INS43 INS59 INS42 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS42 INS39 INS85 INS43 INS43 INS42 INS43 INS43 INS42 INS38 INS8 INS66 INS42 INS66 INS42 INS66 INS42 INS43 INS43 INS42 INS32 INS8 INS42 INS39 INS85 INS43 INS43 INS42 INS43 INS59 INS32 INS32 INS43 INS43 INS42 INS14 INS66 INS66 INS66 INS66 INS42 INS42 INS42 INS42 INS74 INS42 INS43 INS42 INS42 INS21 INS60 INS21 INS42 INS21 INS21 INS43 INS42 INS5 INS42 INS74 INS42 INS43 INS42 INS42 INS21 INS43 INS42 INS42 INS21 INS43 INS42 INS5 INS42 INS39 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS32 INS60 INS21 INS21 INS42 INS42 INS42 INS42 INS60 INS21 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS43 INS43 INS42 INS7 INS43 INS59 INS7 INS7 INS32 INS42 INS39 INS85 INS43 INS43 INS42 INS7 INS42 INS7 INS42 INS39 INS85 INS7 INS42 INS42 INS43 INS59 INS32 INS32 INS43 INS59 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS3 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS5 INS34 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS40 INS39 INS85 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65