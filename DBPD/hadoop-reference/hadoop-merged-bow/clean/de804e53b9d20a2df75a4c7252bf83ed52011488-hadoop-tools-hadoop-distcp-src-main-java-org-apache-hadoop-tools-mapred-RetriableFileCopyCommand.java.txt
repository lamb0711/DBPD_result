HADOOP-15281. Distcp to add no-rename copy option.

Contributed by Andrew Olson.

+  private boolean directWrite = false;
+   * Create a RetriableFileCopyCommand.
+   *
+   * @param skipCrc Whether to skip the crc check.
+   * @param description A verbose description of the copy operation.
+   * @param action We should overwrite the target file or append new data to it.
+   * @param directWrite Whether to write directly to the target path, avoiding a
+   *                    temporary file rename.
+   */
+  public RetriableFileCopyCommand(boolean skipCrc, String description,
+          FileAction action, boolean directWrite) {
+    this(skipCrc, description, action);
+    this.directWrite = directWrite;
+  }
+
+  /**
+    LOG.info("Copying {} to {}", source.getPath(), target);
+
-    Path targetPath = toAppend ? target : getTmpFile(target, context);
+    final boolean useTempTarget = !toAppend && !directWrite;
+    Path targetPath = useTempTarget ? getTempFile(target, context) : target;
+
+    LOG.info("Writing to {} target file path {}", useTempTarget ? "temporary"
+        : "direct", targetPath);
+
-      if (LOG.isDebugEnabled()) {
-        LOG.debug("Copying " + source.getPath() + " to " + target);
-        LOG.debug("Target file path: " + targetPath);
-      }
-      // it's not append case, thus we first write to a temporary file, rename
-      // it to the target path.
-      if (!toAppend) {
+      // it's not append or direct write (preferred for s3a) case, thus we first
+      // write to a temporary file, then rename it to the target path.
+      if (useTempTarget) {
+        LOG.info("Renaming temporary target file path {} to {}", targetPath,
+            target);
+      LOG.info("Completed writing {} ({} bytes)", target, bytesRead);
-      if (!toAppend) {
+      if (useTempTarget) {
-  private Path getTmpFile(Path target, Mapper.Context context) {
+  private Path getTempFile(Path target, Mapper.Context context) {
-    Path root = target.equals(targetWorkPath)? targetWorkPath.getParent() : targetWorkPath;
-    LOG.info("Creating temp file: " +
-        new Path(root, ".distcp.tmp." + context.getTaskAttemptID().toString()));
-    return new Path(root, ".distcp.tmp." + context.getTaskAttemptID().toString());
+    Path root = target.equals(targetWorkPath) ? targetWorkPath.getParent()
+        : targetWorkPath;
+    Path tempFile = new Path(root, ".distcp.tmp." +
+        context.getTaskAttemptID().toString());
+    LOG.info("Creating temp file: {}", tempFile);
+    return tempFile;

INS23 INS31 INS83 INS39 INS59 INS29 INS83 INS42 INS44 INS44 INS44 INS44 INS8 UPD42 INS42 INS9 INS65 INS65 INS65 INS65 INS65 INS39 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS17 INS21 INS21 INS60 INS21 INS60 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS42 INS42 INS7 INS32 INS83 INS39 INS59 INS32 INS43 INS59 INS42 INS22 INS42 INS42 INS42 INS45 MOV32 INS42 INS42 INS27 INS42 INS42 INS45 INS16 INS42 MOV21 INS42 INS42 MOV14 INS45 INS42 INS52 INS42 MOV38 INS38 UPD42 INS42 INS42 INS45 INS45 INS42 INS42 INS42 UPD42 INS21 UPD42 INS45 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL8 DEL25 DEL45 DEL45 DEL42 DEL27 DEL42 DEL38 DEL45 DEL27 DEL42 DEL43 DEL42 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL14