YARN-7574. Add support for Node Labels on Auto Created Leaf Queue Template. Contributed by Suma Shivaprasad.

+import org.apache.hadoop.yarn.api.records.QueueInfo;
+
+import org.apache.hadoop.yarn.server.resourcemanager.nodelabels
+    .RMNodeLabelsManager;
+
+        QueueInfo queueInfo = null;
+        for (ResourceRequest amReq : appAttempt.amReqs) {
+          if (amReq.getNodeLabelExpression() == null && ResourceRequest.ANY
+              .equals(amReq.getResourceName())) {
+            String queue = appAttempt.rmApp.getQueue();
+
+            //Load queue only once since queue will be same across attempts
+            if (queueInfo == null) {
+              try {
+                queueInfo = appAttempt.scheduler.getQueueInfo(queue, false,
+                    false);
+              } catch (IOException e) {
+                LOG.error("Could not find queue for application : ", e);
+                // Set application status to REJECTED since we cant find the
+                // queue
+                appAttempt.rmContext.getDispatcher().getEventHandler().handle(
+                    new RMAppAttemptEvent(appAttempt.getAppAttemptId(),
+                        RMAppAttemptEventType.FAIL,
+                        "Could not find queue for application : " +
+                        appAttempt.rmApp.getQueue()));
+                appAttempt.rmContext.getDispatcher().getEventHandler().handle(
+                    new RMAppEvent(appAttempt.rmApp.getApplicationId(), RMAppEventType
+                        .APP_REJECTED,
+                        "Could not find queue for application : " +
+                            appAttempt.rmApp.getQueue()));
+                return RMAppAttemptState.FAILED;
+              }
+            }
+
+            String labelExp = RMNodeLabelsManager.NO_LABEL;
+            if (queueInfo != null) {
+              if (LOG.isDebugEnabled()) {
+                LOG.debug("Setting default node label expression : " + queueInfo
+                    .getDefaultNodeLabelExpression());
+              }
+              labelExp = queueInfo.getDefaultNodeLabelExpression();
+            }
+
+            amReq.setNodeLabelExpression(labelExp);
+          }
+        }
+

INS26 INS26 INS40 INS40 INS60 INS70 INS43 INS59 INS44 INS40 INS8 INS42 INS42 INS33 INS43 INS42 INS25 INS42 INS27 INS8 INS27 INS32 INS60 INS25 INS60 INS25 INS21 INS32 INS33 INS40 INS42 INS32 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS54 INS42 INS42 INS40 INS42 INS33 INS25 INS21 INS42 INS42 INS42 INS40 INS42 INS8 INS12 INS32 INS8 INS7 INS21 INS44 INS8 INS42 INS42 INS21 INS42 INS32 INS7 INS43 INS42 INS21 INS21 INS21 INS41 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS32 INS40 INS42 INS42 INS27 INS40 INS42 INS42 INS9 INS9 INS42 INS42 INS45 INS42 INS32 INS42 INS14 INS32 INS42 INS14 INS45 INS32 INS32 INS42 INS43 INS32 INS40 INS27 INS32 INS42 INS43 INS32 INS40 INS27 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS45 INS32 INS40 INS42 INS42 INS40 INS42 INS45 INS32 INS40 INS42 INS40 INS42