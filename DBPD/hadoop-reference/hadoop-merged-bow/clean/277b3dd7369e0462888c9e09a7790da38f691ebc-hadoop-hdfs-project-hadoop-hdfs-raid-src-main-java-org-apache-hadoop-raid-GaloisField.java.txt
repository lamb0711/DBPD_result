MAPREDUCE-3868. Make Raid Compile. (Weiyan Wang via schen)



git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1351548 13f79535-47bb-0310-9956-ffa450edef68

-    assert(x.length <= len && y.length <= len);
+    assert(y.length <= len);
+
+  /**
+   * Perform Gaussian elimination on the given matrix. This matrix has to be a
+   * fat matrix (number of rows > number of columns).
+   */
+  public void gaussianElimination(int[][] matrix) {
+    assert(matrix != null && matrix.length > 0 && matrix[0].length > 0
+           && matrix.length < matrix[0].length);
+    int height = matrix.length;
+    int width = matrix[0].length;
+    for (int i = 0; i < height; i++) {
+      boolean pivotFound = false;
+      // scan the column for a nonzero pivot and swap it to the diagonal
+      for (int j = i; j < height; j++) {
+        if (matrix[i][j] != 0) {
+          int[] tmp = matrix[i];
+          matrix[i] = matrix[j];
+          matrix[j] = tmp;
+          pivotFound = true;
+          break;
+        }
+      }
+      if (!pivotFound) {
+        continue;
+      }
+      int pivot = matrix[i][i];
+      for (int j = i; j < width; j++) {
+        matrix[i][j] = divide(matrix[i][j], pivot);
+      }
+      for (int j = i + 1; j < height; j++) {
+        int lead = matrix[j][i];
+        for (int k = i; k < width; k++) {
+          matrix[j][k] = add(matrix[j][k], multiply(lead, matrix[i][k]));
+        }
+      }
+    }
+    for (int i = height - 1; i >=0; i--) {
+      for (int j = 0; j < i; j++) {
+        int lead = matrix[j][i];
+        for (int k = i; k < width; k++) {
+          matrix[j][k] = add(matrix[j][k], multiply(lead, matrix[i][k]));
+        }
+      }
+    }
+  }

INS31 INS29 INS83 INS39 INS42 INS44 INS8 INS65 INS5 INS42 INS6 INS60 INS60 INS24 INS24 INS66 INS66 INS39 INS85 INS85 INS36 INS39 INS59 INS39 INS59 INS58 INS27 INS37 INS8 INS58 INS27 INS37 INS8 MOV27 INS27 INS42 INS40 INS42 INS22 INS39 INS59 INS42 INS42 INS42 INS60 INS24 INS25 INS60 INS24 INS24 INS39 INS59 INS42 INS34 INS42 INS24 INS27 INS27 INS2 INS42 INS42 INS34 INS39 INS59 INS58 INS27 INS37 INS8 INS38 INS8 INS39 INS59 INS58 INS27 INS37 INS8 INS58 INS27 INS37 INS8 INS42 INS27 INS58 INS27 INS37 INS8 INS27 INS27 INS40 INS22 INS42 INS34 INS42 INS9 INS39 INS59 INS42 INS42 INS42 INS25 INS42 INS18 INS42 INS2 INS39 INS59 INS42 INS42 INS42 INS21 INS39 INS59 INS42 INS42 INS42 INS60 INS24 INS42 INS34 INS39 INS59 INS42 INS42 INS42 INS60 INS24 INS27 INS27 INS22 INS34 INS2 INS42 INS42 INS42 INS27 INS8 INS2 INS42 INS42 INS42 INS7 INS42 INS27 INS39 INS59 INS58 INS27 INS37 INS8 INS42 INS34 INS39 INS59 INS58 INS27 INS37 INS8 INS42 INS33 INS40 INS34 INS2 INS42 INS42 INS34 INS2 INS34 INS60 INS21 INS21 INS21 INS10 INS42 INS42 INS2 INS32 INS42 INS34 INS42 INS2 INS39 INS59 INS42 INS42 INS42 INS21 INS42 INS2 INS39 INS59 INS42 INS42 INS42 INS21 INS42 INS34 INS2 INS42 INS5 INS59 INS7 INS7 INS7 INS2 INS42 INS42 INS2 INS42 INS2 INS42 INS42 INS42 INS7 INS2 INS42 INS42 INS42 INS7 INS42 INS42 INS39 INS85 INS42 INS2 INS2 INS2 INS2 INS42 INS42 INS9 INS42 INS42 INS2 INS42 INS42 INS42 INS2 INS32 INS42 INS42 INS2 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS2 INS42 INS42 INS2 INS32 INS2 INS42 INS42 INS2 INS32 INS42 INS42 INS2 INS42 INS42 INS42 INS2 INS42 INS42 INS2 INS42 INS42 INS42 INS2 INS42 INS42 INS2 INS42 INS42 INS42 INS2 INS42 INS42 INS42 INS42 INS42 DEL40 DEL42 DEL27 DEL27