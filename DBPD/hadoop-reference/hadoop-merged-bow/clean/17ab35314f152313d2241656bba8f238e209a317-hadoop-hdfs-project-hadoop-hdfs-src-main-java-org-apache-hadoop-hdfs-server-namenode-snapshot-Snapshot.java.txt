Merge trunk to HDFS-4685.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1556665 13f79535-47bb-0310-9956-ffa450edef68

-  public static final int INVALID_ID = -1;
+  /**
+   * This id is used to indicate the current state (vs. snapshots)
+   */
+  public static final int CURRENT_STATE_ID = Integer.MAX_VALUE - 1;
+  public static final int NO_SNAPSHOT_ID = -1;
-  /** 
-   * Get the name of the given snapshot. 
+  /**
+   * Get the name of the given snapshot.
+  
+  public static int getSnapshotId(Snapshot s) {
+    return s == null ? CURRENT_STATE_ID : s.getId();
+  }
-      return ID_INTEGER_COMPARATOR.compare(
-          left == null? null: left.getId(),
-          right == null? null: right.getId());
+      return ID_INTEGER_COMPARATOR.compare(Snapshot.getSnapshotId(left),
+          Snapshot.getSnapshotId(right));
-      // null means the current state, thus should be the largest
-      if (left == null) {
-        return right == null? 0: 1;
-      } else {
-        return right == null? -1: left - right; 
-      }
+      // Snapshot.CURRENT_STATE_ID means the current state, thus should be the 
+      // largest
+      return left - right;
-   * @param anchor the returned snapshot should be taken before this snapshot.
-   * @return the latest snapshot covers the given inode and was taken before the
-   *         the given snapshot (if it is not null).
+   * @param anchor the returned snapshot should be taken before this given id.
+   * @return id of the latest snapshot that covers the given inode and was taken 
+   *         before the the given snapshot (if it is not null).
-  public static Snapshot findLatestSnapshot(INode inode, Snapshot anchor) {
-    Snapshot latest = null;
+  public static int findLatestSnapshot(INode inode, final int anchor) {
+    int latest = NO_SNAPSHOT_ID;
-    public ReadOnlyList<INode> getChildrenList(Snapshot snapshot) {
-      return getParent().getChildrenList(snapshot);
+    public ReadOnlyList<INode> getChildrenList(int snapshotId) {
+      return getParent().getChildrenList(snapshotId);
-    public INode getChild(byte[] name, Snapshot snapshot) {
-      return getParent().getChild(name, snapshot);
+    public INode getChild(byte[] name, int snapshotId) {
+      return getParent().getChild(name, snapshotId);

INS23 INS31 INS29 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS42 INS44 INS8 INS39 INS65 INS42 INS27 UPD42 INS43 INS42 INS41 INS83 INS39 INS66 INS40 INS34 UPD66 INS42 INS16 UPD66 UPD66 UPD66 INS39 INS39 UPD42 INS39 UPD42 INS27 INS42 INS32 INS42 INS42 INS33 INS42 INS42 MOV8 UPD42 UPD42 MOV27 INS32 INS32 INS42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 DEL42 DEL33 DEL27 DEL33 DEL42 DEL32 DEL16 DEL42 DEL33 DEL27 DEL33 DEL32 DEL16 DEL42 DEL33 DEL27 DEL34 DEL38 DEL16 DEL42 DEL33 DEL27 DEL42 DEL33 DEL27 DEL34 DEL34 DEL16 DEL41 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL33 DEL42 DEL43 DEL42 DEL43