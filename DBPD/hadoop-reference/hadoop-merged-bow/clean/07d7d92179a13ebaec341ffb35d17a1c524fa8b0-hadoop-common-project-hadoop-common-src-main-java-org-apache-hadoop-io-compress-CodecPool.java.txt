Merge r1462698 through r1464807 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1464815 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.concurrent.atomic.AtomicInteger;
+import com.google.common.cache.CacheBuilder;
+import com.google.common.cache.CacheLoader;
+import com.google.common.cache.LoadingCache;
+
+  private static <T> LoadingCache<Class<T>, AtomicInteger> createCache(
+      Class<T> klass) {
+    return CacheBuilder.newBuilder().build(
+        new CacheLoader<Class<T>, AtomicInteger>() {
+          @Override
+          public AtomicInteger load(Class<T> key) throws Exception {
+            return new AtomicInteger();
+          }
+        });
+  }
+
+  /**
+   * Map to track the number of leased compressors
+   */
+  private static final LoadingCache<Class<Compressor>, AtomicInteger> compressorCounts =
+      createCache(Compressor.class);
+
+   /**
+   * Map to tracks the number of leased decompressors
+   */
+  private static final LoadingCache<Class<Decompressor>, AtomicInteger> decompressorCounts =
+      createCache(Decompressor.class);
+
+  @SuppressWarnings("unchecked")
+  private static <T> int getLeaseCount(
+      LoadingCache<Class<T>, AtomicInteger> usageCounts,
+      Class<? extends T> codecClass) {
+    return usageCounts.getUnchecked((Class<T>) codecClass).get();
+  }
+
+  private static <T> void updateLeaseCount(
+      LoadingCache<Class<T>, AtomicInteger> usageCounts, T codec, int delta) {
+    if (codec != null) {
+      Class<T> codecClass = ReflectionUtils.getClass(codec);
+      usageCounts.getUnchecked(codecClass).addAndGet(delta);
+    }
+  }
+
+    updateLeaseCount(compressorCounts, compressor, 1);
+    updateLeaseCount(decompressorCounts, decompressor, 1);
+    updateLeaseCount(compressorCounts, compressor, -1);
+    updateLeaseCount(decompressorCounts, decompressor, -1);
+  }
+
+  /**
+   * Return the number of leased {@link Compressor}s for this
+   * {@link CompressionCodec}
+   */
+  public static int getLeasedCompressorsCount(CompressionCodec codec) {
+    return (codec == null) ? 0 : getLeaseCount(compressorCounts,
+        codec.getCompressorType());
+  }
+
+  /**
+   * Return the number of leased {@link Decompressor}s for this
+   * {@link CompressionCodec}
+   */
+  public static int getLeasedDecompressorsCount(CompressionCodec codec) {
+    return (codec == null) ? 0 : getLeaseCount(decompressorCounts,
+        codec.getDecompressorType());

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS23 INS23 INS31 INS31 INS31 INS31 INS83 INS83 INS73 INS74 INS42 INS44 INS8 INS29 INS83 INS83 INS83 INS74 INS59 INS29 INS83 INS83 INS83 INS74 INS59 INS79 INS83 INS83 INS73 INS39 INS42 INS44 INS44 INS8 INS83 INS83 INS73 INS39 INS42 INS44 INS44 INS44 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS8 INS42 INS43 INS74 INS43 INS74 INS42 INS41 INS65 INS43 INS74 INS43 INS42 INS32 INS65 INS43 INS74 INS43 INS42 INS32 INS42 INS45 INS42 INS74 INS42 INS74 INS42 INS41 INS42 INS74 INS42 INS43 INS42 INS39 INS42 INS25 INS21 INS21 INS21 INS21 INS65 INS43 INS42 INS41 INS65 INS43 INS42 INS41 INS42 INS43 INS43 INS42 INS43 INS43 INS32 INS66 INS42 INS43 INS43 INS42 INS42 INS57 INS66 INS42 INS43 INS43 INS42 INS42 INS57 INS43 INS74 INS43 INS43 INS76 INS32 INS43 INS74 INS43 INS42 INS27 INS8 INS32 INS32 INS32 INS32 INS66 INS65 INS66 INS65 INS42 INS16 INS66 INS65 INS66 INS65 INS42 INS16 INS42 INS42 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS43 INS42 INS42 INS43 INS42 INS43 INS43 INS42 INS42 INS43 INS32 INS42 INS42 INS43 INS43 INS42 INS42 INS33 INS60 INS21 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS38 INS42 INS42 INS42 INS38 INS42 INS42 INS36 INS34 INS32 INS42 INS42 INS36 INS34 INS32 INS42 INS42 INS74 INS1 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS74 INS59 INS32 INS34 INS34 INS27 INS42 INS42 INS32 INS27 INS42 INS42 INS32 INS43 INS74 INS43 INS31 INS74 INS42 INS43 INS43 INS42 INS32 INS32 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS43 INS43 INS42 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS41 INS42 INS42 INS43 INS43 INS14 INS42 INS42 INS43 INS42