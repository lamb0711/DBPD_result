HDFS-7859. Erasure Coding: Persist erasure coding policies in NameNode. Contributed by Sammi Chen

+import java.util.List;
+import org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy;
+import org.apache.hadoop.hdfs.protocolPB.PBHelperClient;
+import org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.ErasureCodingPolicyProto;
+import org.apache.hadoop.hdfs.server.namenode.FsImageProto.ErasureCodingSection;
+        case ERASURE_CODING:
+          Step step = new Step(StepType.ERASURE_CODING_POLICIES);
+          prog.beginStep(Phase.LOADING_FSIMAGE, step);
+          loadErasureCodingSection(in);
+          prog.endStep(Phase.LOADING_FSIMAGE, step);
+          break;
+    private void loadErasureCodingSection(InputStream in)
+        throws IOException {
+      ErasureCodingSection s = ErasureCodingSection.parseDelimitedFrom(in);
+      List<ErasureCodingPolicy> ecPolicies = Lists
+          .newArrayListWithCapacity(s.getPoliciesCount());
+      for (int i = 0; i < s.getPoliciesCount(); ++i) {
+        ecPolicies.add(PBHelperClient.convertErasureCodingPolicy(
+            s.getPolicies(i)));
+      }
+      fsn.getErasureCodingPolicyManager().loadPolicies(ecPolicies);
+    }
-      Step step = new Step(StepType.INODES, filePath);
+      // Erasure coding policies should be saved before inodes
+      Step step = new Step(StepType.ERASURE_CODING_POLICIES, filePath);
+      prog.beginStep(Phase.SAVING_CHECKPOINT, step);
+      saveErasureCodingSection(b);
+      prog.endStep(Phase.SAVING_CHECKPOINT, step);
+
+      step = new Step(StepType.INODES, filePath);
+    private void saveErasureCodingSection(
+        FileSummary.Builder summary) throws IOException {
+      final FSNamesystem fsn = context.getSourceNamesystem();
+      ErasureCodingPolicy[] ecPolicies =
+          fsn.getErasureCodingPolicyManager().getPolicies();
+      ArrayList<ErasureCodingPolicyProto> ecPolicyProtoes =
+          new ArrayList<ErasureCodingPolicyProto>();
+      for (ErasureCodingPolicy p : ecPolicies) {
+        ecPolicyProtoes.add(PBHelperClient.convertErasureCodingPolicy(p));
+      }
+
+      ErasureCodingSection section = ErasureCodingSection.newBuilder().
+          addAllPolicies(ecPolicyProtoes).build();
+      section.writeDelimitedTo(sectionOutputStream);
+      commitSection(summary, SectionName.ERASURE_CODING);
+    }
+
+    ERASURE_CODING("ERASURE_CODING"),

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS72 INS83 INS39 INS42 INS44 INS43 INS8 MOV21 MOV21 MOV21 MOV21 MOV21 INS83 INS39 INS42 INS44 INS43 INS8 INS42 INS45 INS43 INS42 INS42 INS60 INS60 INS24 INS21 INS21 INS21 INS21 INS21 INS43 INS42 INS42 INS60 INS60 INS60 INS70 INS60 INS21 INS21 INS42 INS43 INS59 INS74 INS59 INS58 INS27 INS38 INS8 INS32 INS32 INS7 INS32 INS32 INS40 INS83 INS43 INS59 INS5 INS59 INS74 INS59 INS44 INS42 INS8 INS43 INS59 INS32 INS32 MOV21 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS39 INS59 INS42 INS32 INS42 INS21 INS32 INS42 INS42 INS14 INS42 INS42 INS42 MOV14 INS42 INS42 INS40 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS43 INS85 INS42 INS32 INS43 INS43 INS42 INS14 INS43 INS42 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS40 INS60 INS21 INS21 INS21 INS49 INS10 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS34 INS42 INS42 INS32 INS42 INS42 INS43 INS40 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS74 INS42 INS32 INS32 INS42 INS42 INS43 INS59 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS40 INS42 INS42 INS42 INS42