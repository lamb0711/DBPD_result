HDFS-1820. FTPFileSystem attempts to close the outputstream even when it is not initialised. (#1952)


Contributed by Mikhail Pryakhin.
+import java.io.OutputStream;
+import org.apache.hadoop.io.IOUtils;
-    port = (port == -1) ? FTP.DEFAULT_PORT : port;
+    if(port == -1){
+      port = conf.getInt(FS_FTP_HOST_PORT, FTP.DEFAULT_PORT);
+    }
-    FSDataOutputStream fos = new FSDataOutputStream(client.storeFileStream(file
-        .getName()), statistics) {
+    OutputStream outputStream = client.storeFileStream(file.getName());
+
+    if (!FTPReply.isPositivePreliminary(client.getReplyCode())) {
+      // The ftpClient is an inconsistent state. Must close the stream
+      // which in turn will logout and disconnect from FTP server
+      if (outputStream != null) {
+        IOUtils.closeStream(outputStream);
+      }
+      disconnect(client);
+      throw new IOException("Unable to create file: " + file + ", Aborting");
+    }
+
+    FSDataOutputStream fos = new FSDataOutputStream(outputStream, statistics) {
-    if (!FTPReply.isPositivePreliminary(client.getReplyCode())) {
-      // The ftpClient is an inconsistent state. Must close the stream
-      // which in turn will logout and disconnect from FTP server
-      fos.close();
-      throw new IOException("Unable to create file: " + file + ", Aborting");
-    }

INS26 INS26 INS40 INS40 MOV60 INS25 INS60 MOV27 INS8 INS43 INS59 MOV21 INS42 INS42 MOV32 INS25 INS21 INS27 INS8 INS32 INS42 INS32 INS42 INS33 MOV21 INS42 INS42 INS42 INS42 INS42 INS40 UPD42 UPD42 INS42 DEL36 DEL40 DEL42 DEL16