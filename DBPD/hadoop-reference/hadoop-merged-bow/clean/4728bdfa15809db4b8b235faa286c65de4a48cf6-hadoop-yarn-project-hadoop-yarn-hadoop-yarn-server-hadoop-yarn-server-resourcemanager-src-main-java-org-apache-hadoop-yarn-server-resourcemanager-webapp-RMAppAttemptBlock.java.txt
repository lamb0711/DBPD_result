YARN-3248. Display count of nodes blacklisted by apps in the web UI.
Contributed by Varun Vasudev

+import org.apache.commons.lang.StringUtils;
+import org.apache.hadoop.yarn.api.records.ApplicationAttemptId;
+import org.apache.hadoop.yarn.api.records.ApplicationAttemptReport;
+import org.apache.hadoop.yarn.api.records.ContainerReport;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt;
+import org.apache.hadoop.yarn.server.webapp.dao.AppAttemptInfo;
+import java.util.Collection;
+import java.util.Set;
+
+
+  protected void generateOverview(ApplicationAttemptReport appAttemptReport,
+      Collection<ContainerReport> containers, AppAttemptInfo appAttempt,
+      String node) {
+
+    String blacklistedNodes = "-";
+    Set<String> nodes =
+        getBlacklistedNodes(rm, getRMAppAttempt().getAppAttemptId());
+    if (nodes != null) {
+      if (!nodes.isEmpty()) {
+        blacklistedNodes = StringUtils.join(nodes, ", ");
+      }
+    }
+
+    info("Application Attempt Overview")
+      ._(
+        "Application Attempt State:",
+        appAttempt.getAppAttemptState() == null ? UNAVAILABLE : appAttempt
+          .getAppAttemptState())
+      ._(
+        "AM Container:",
+        appAttempt.getAmContainerId() == null || containers == null
+            || !hasAMContainer(appAttemptReport.getAMContainerId(), containers)
+            ? null : root_url("container", appAttempt.getAmContainerId()),
+        String.valueOf(appAttempt.getAmContainerId()))
+      ._("Node:", node)
+      ._(
+        "Tracking URL:",
+        appAttempt.getTrackingUrl() == null
+            || appAttempt.getTrackingUrl().equals(UNAVAILABLE) ? null
+            : root_url(appAttempt.getTrackingUrl()),
+        appAttempt.getTrackingUrl() == null
+            || appAttempt.getTrackingUrl().equals(UNAVAILABLE)
+            ? "Unassigned"
+            : appAttempt.getAppAttemptState() == YarnApplicationAttemptState.FINISHED
+                || appAttempt.getAppAttemptState() == YarnApplicationAttemptState.FAILED
+                || appAttempt.getAppAttemptState() == YarnApplicationAttemptState.KILLED
+                ? "History" : "ApplicationMaster")
+      ._(
+        "Diagnostics Info:",
+        appAttempt.getDiagnosticsInfo() == null ? "" : appAttempt
+          .getDiagnosticsInfo())._("Blacklisted Nodes:", blacklistedNodes);
+  }
+
+  public static Set<String> getBlacklistedNodes(ResourceManager rm,
+      ApplicationAttemptId appid) {
+    if (rm.getResourceScheduler() instanceof AbstractYarnScheduler) {
+      AbstractYarnScheduler ayScheduler =
+          (AbstractYarnScheduler) rm.getResourceScheduler();
+      SchedulerApplicationAttempt attempt =
+          ayScheduler.getApplicationAttempt(appid);
+      if (attempt != null) {
+        return attempt.getBlacklistedNodes();
+      }
+    }
+    return null;
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS8 INS83 INS83 INS74 INS42 INS44 INS44 INS8 INS43 INS42 INS74 INS42 INS43 INS42 INS43 INS42 INS60 INS60 INS25 INS21 INS43 INS43 INS43 INS42 INS43 INS42 INS25 INS41 INS42 INS43 INS43 INS42 INS42 INS43 INS59 INS74 INS59 INS27 INS8 INS32 INS42 INS42 INS42 INS42 INS62 INS8 INS33 INS42 INS42 INS42 INS42 INS45 INS43 INS43 INS42 INS32 INS42 INS33 INS25 INS32 INS42 INS45 INS42 INS32 INS43 INS60 INS60 INS25 INS42 INS42 INS42 INS42 INS32 INS38 INS8 INS32 INS42 INS45 INS16 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS32 INS42 INS32 INS21 INS32 INS42 INS45 INS16 INS16 INS27 INS45 INS32 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS33 INS41 INS42 INS42 INS42 INS7 INS32 INS42 INS45 INS42 INS27 INS33 INS32 INS27 INS45 INS16 INS32 INS33 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS45 INS16 INS32 INS27 INS32 INS42 INS32 INS27 INS32 INS27 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS45 INS16 INS27 INS33 INS32 INS42 INS42 INS32 INS32 INS33 INS32 INS42 INS42 INS42 INS42 INS32 INS33 INS32 INS42 INS42 INS27 INS27 INS42 INS45 INS27 INS42 INS32 INS27 INS38 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS27 INS32 INS40 INS32 INS33 INS42 INS42 INS27 INS27 INS32 INS42 INS42 INS32 INS40 INS32 INS40 INS42 INS42 INS42 INS42 INS32 INS33 INS42 INS33 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42