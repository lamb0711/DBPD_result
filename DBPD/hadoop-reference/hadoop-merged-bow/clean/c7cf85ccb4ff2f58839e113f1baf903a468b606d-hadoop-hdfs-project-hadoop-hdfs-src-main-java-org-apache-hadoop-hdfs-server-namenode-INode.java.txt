HDFS-4507. Update quota verification for snapshots.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1451081 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.protocol.NSQuotaExceededException;
+import com.google.common.base.Preconditions;
-  private INode updatePermissionStatus(PermissionStatusFormat f, long n,
-      Snapshot latest) {
-    final INode nodeToUpdate = recordModification(latest);
-    nodeToUpdate.permission = f.combine(n, permission);
-    return nodeToUpdate;
+  private void updatePermissionStatus(PermissionStatusFormat f, long n) {
+    this.permission = f.combine(n, permission);
-  protected INode setUser(String user, Snapshot latest) {
+  final void setUser(String user) {
-    return updatePermissionStatus(PermissionStatusFormat.USER, n, latest);
+    updatePermissionStatus(PermissionStatusFormat.USER, n);
+  }
+  /** Set user */
+  final INode setUser(String user, Snapshot latest)
+      throws NSQuotaExceededException {
+    final INode nodeToUpdate = recordModification(latest);
+    nodeToUpdate.setUser(user);
+    return nodeToUpdate;
-  protected INode setGroup(String group, Snapshot latest) {
+  final void setGroup(String group) {
-    return updatePermissionStatus(PermissionStatusFormat.GROUP, n, latest);
+    updatePermissionStatus(PermissionStatusFormat.GROUP, n);
+  }
+  /** Set group */
+  final INode setGroup(String group, Snapshot latest)
+      throws NSQuotaExceededException {
+    final INode nodeToUpdate = recordModification(latest);
+    nodeToUpdate.setGroup(group);
+    return nodeToUpdate;
-  INode setPermission(FsPermission permission, Snapshot latest) {
+  void setPermission(FsPermission permission) {
-    return updatePermissionStatus(PermissionStatusFormat.MODE, mode, latest);
+    updatePermissionStatus(PermissionStatusFormat.MODE, mode);
+  }
+  /** Set the {@link FsPermission} of this {@link INode} */
+  INode setPermission(FsPermission permission, Snapshot latest)
+      throws NSQuotaExceededException {
+    final INode nodeToUpdate = recordModification(latest);
+    nodeToUpdate.setPermission(permission);
+    return nodeToUpdate;
-  abstract INode recordModification(final Snapshot latest);
+  abstract INode recordModification(final Snapshot latest)
+      throws NSQuotaExceededException;
-      BlocksMapUpdateInfo collectedBlocks);
+      BlocksMapUpdateInfo collectedBlocks) throws NSQuotaExceededException;
+   * Check and add namespace consumed to itself and the ancestors.
+   * @throws NSQuotaExceededException if quote is violated.
+   */
+  public void addNamespaceConsumed(int delta) throws NSQuotaExceededException {
+    if (parent != null) {
+      parent.addNamespaceConsumed(delta);
+    }
+  }
+
+  /**
-    return computeQuotaUsage(new Quota.Counts());
+    return computeQuotaUsage(new Quota.Counts(), true);
-  abstract Quota.Counts computeQuotaUsage(Quota.Counts counts);
+  public abstract Quota.Counts computeQuotaUsage(Quota.Counts counts,
+      boolean useCache);
-  public final INode updateModificationTime(long mtime, Snapshot latest) {
-    assert isDirectory();
+  public final INode updateModificationTime(long mtime, Snapshot latest)
+      throws NSQuotaExceededException {
+    Preconditions.checkState(isDirectory());
-  /**
-   * Always set the last modification time of inode.
-   */
-  public final INode setModificationTime(long modtime, Snapshot latest) {
+  /** Set the last modification time of inode. */
+  public final void setModificationTime(long modificationTime) {
+    this.modificationTime = modificationTime;
+  }
+  /** Set the last modification time of inode. */
+  public final INode setModificationTime(long modificationTime, Snapshot latest)
+      throws NSQuotaExceededException {
-    nodeToUpdate.modificationTime = modtime;
+    nodeToUpdate.setModificationTime(modificationTime);
-  public INode setAccessTime(long atime, Snapshot latest) {
+  public void setAccessTime(long accessTime) {
+    this.accessTime = accessTime;
+  }
+  /**
+   * Set last access time of inode.
+   */
+  public INode setAccessTime(long accessTime, Snapshot latest)
+      throws NSQuotaExceededException {
-    nodeToUpdate.accessTime = atime;
+    nodeToUpdate.setAccessTime(accessTime);

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS31 INS39 INS8 UPD83 INS39 INS29 INS83 MOV43 INS42 INS44 MOV44 INS43 MOV8 UPD83 INS39 INS29 INS83 MOV43 INS42 INS44 MOV44 INS43 INS8 INS39 INS29 MOV43 INS42 INS44 MOV44 INS43 INS8 INS43 INS43 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS83 INS44 INS43 INS39 INS8 INS29 INS83 INS83 MOV43 INS42 INS44 MOV44 INS43 MOV8 INS39 INS8 INS29 INS83 MOV43 INS42 INS44 MOV44 INS43 MOV8 MOV21 INS21 INS65 INS43 INS42 INS42 INS21 INS21 INS65 INS43 INS42 INS42 INS60 INS21 INS41 INS21 INS65 INS43 INS42 INS42 INS60 INS21 INS41 INS42 INS42 INS65 INS65 INS39 INS42 INS42 INS25 INS39 INS42 INS42 INS21 UPD42 INS21 INS65 INS39 INS42 INS42 UPD42 INS21 INS65 INS39 INS42 INS42 INS32 INS66 INS42 INS32 INS32 INS66 INS42 INS83 INS43 INS59 INS32 INS42 INS32 INS66 INS65 INS66 INS65 INS66 INS42 INS83 INS43 INS59 INS32 INS42 INS66 INS42 INS66 INS27 INS8 INS32 UPD66 INS7 INS66 INS32 INS7 INS66 INS32 INS22 MOV42 MOV40 MOV42 INS42 INS42 INS42 MOV42 MOV40 MOV42 INS42 INS42 INS32 INS42 INS42 INS42 MOV42 MOV40 MOV42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS33 INS21 INS9 INS42 INS42 MOV32 INS22 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS32 INS52 INS42 INS52 INS42 INS42 INS42 INS42 DEL42 DEL43 DEL40 DEL42 DEL43 DEL42 DEL44 DEL42 DEL32 DEL41 DEL42 DEL32 DEL41 DEL42 DEL32 DEL41 DEL6 DEL40 DEL42 DEL7 DEL40 DEL42 DEL7