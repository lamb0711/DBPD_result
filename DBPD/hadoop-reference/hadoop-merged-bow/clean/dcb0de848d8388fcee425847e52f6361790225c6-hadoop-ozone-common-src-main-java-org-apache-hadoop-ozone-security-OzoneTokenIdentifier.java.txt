HDDS-1043. Enable token based authentication for S3 api

Closes #561

+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.OMTokenProto.Type;
+import static org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.OMTokenProto.Type.S3TOKEN;
+
+  private Type tokenType;
+  private String awsAccessId;
+  private String signature;
+  private String strToSign;
+    this.tokenType = Type.DELEGATION_TOKEN;
+    this.tokenType = Type.DELEGATION_TOKEN;
-    OMTokenProto token = OMTokenProto.newBuilder()
+    OMTokenProto.Builder builder = OMTokenProto.newBuilder()
+        .setMaxDate(getMaxDate())
+        .setType(getTokenType())
-        .setMasterKeyId(getMasterKeyId())
-        .setOmCertSerialId(getOmCertSerialId())
-        .build();
+        .setMasterKeyId(getMasterKeyId());
+
+    // Set s3 specific fields.
+    if (getTokenType().equals(S3TOKEN)) {
+      builder.setAccessKeyId(getAwsAccessId())
+          .setSignature(getSignature())
+          .setStrToSign(getStrToSign());
+    } else {
+      builder.setOmCertSerialId(getOmCertSerialId());
+    }
+    OMTokenProto token = builder.build();
+    setTokenType(token.getType());
+    setMaxDate(token.getMaxDate());
+
+    // Set s3 specific fields.
+    if (getTokenType().equals(S3TOKEN)) {
+      setAwsAccessId(token.getAccessKeyId());
+      setSignature(token.getSignature());
+      setStrToSign(token.getStrToSign());
+    }
-    identifier.setRenewer(new Text(token.getRenewer()));
-    identifier.setOwner(new Text(token.getOwner()));
-    identifier.setRealUser(new Text(token.getRealUser()));
+    identifier.setTokenType(token.getType());
-    identifier.setIssueDate(token.getIssueDate());
-    identifier.setSequenceNumber(token.getSequenceNumber());
-    identifier.setMasterKeyId(token.getMasterKeyId());
+
+    // Set type specific fields.
+    if (token.getType().equals(S3TOKEN)) {
+      identifier.setSignature(token.getSignature());
+      identifier.setStrToSign(token.getStrToSign());
+      identifier.setAwsAccessId(token.getAccessKeyId());
+    } else {
+      identifier.setRenewer(new Text(token.getRenewer()));
+      identifier.setOwner(new Text(token.getOwner()));
+      identifier.setRealUser(new Text(token.getRealUser()));
+      identifier.setIssueDate(token.getIssueDate());
+      identifier.setSequenceNumber(token.getSequenceNumber());
+      identifier.setMasterKeyId(token.getMasterKeyId());
+    }
+
+  public Type getTokenType() {
+    return tokenType;
+  }
+
+  public void setTokenType(Type tokenType) {
+    this.tokenType = tokenType;
+  }
+
+  public String getAwsAccessId() {
+    return awsAccessId;
+  }
+
+  public void setAwsAccessId(String awsAccessId) {
+    this.awsAccessId = awsAccessId;
+  }
+
+  public String getSignature() {
+    return signature;
+  }
+
+  public void setSignature(String signature) {
+    this.signature = signature;
+  }
+
+  public String getStrToSign() {
+    return strToSign;
+  }
+
+  public void setStrToSign(String strToSign) {
+    this.strToSign = strToSign;
+  }
+
+  @Override
+  public String toString() {
+    StringBuilder buffer = new StringBuilder();
+    buffer.append(getKind())
+        .append(" owner=").append(getOwner())
+        .append(", renewer=").append(getRenewer())
+        .append(", realUser=").append(getRealUser())
+        .append(", issueDate=").append(getIssueDate())
+        .append(", maxDate=").append(getMaxDate())
+        .append(", sequenceNumber=").append(getSequenceNumber())
+        .append(", masterKeyId=").append(getMasterKeyId())
+        .append(", strToSign=").append(getStrToSign())
+        .append(", signature=").append(getSignature())
+        .append(", awsAccessKeyId=").append(getAwsAccessId());
+    return buffer.toString();
+  }

INS26 INS26 INS40 INS40 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS21 INS25 INS60 INS21 INS21 INS25 INS21 INS25 INS42 INS41 INS43 INS42 INS21 INS42 INS41 INS43 INS42 INS21 INS42 INS41 INS43 INS42 INS21 INS42 INS41 INS43 INS42 INS21 INS42 INS42 INS60 INS21 INS41 INS7 INS7 INS43 INS32 INS8 INS8 MOV43 INS59 INS32 INS32 INS32 INS8 INS32 INS32 INS8 INS8 INS42 INS42 INS7 INS42 INS42 INS7 INS42 INS42 INS7 INS42 INS42 INS7 INS43 INS59 INS32 INS32 INS22 INS40 INS22 INS40 INS40 INS42 MOV32 INS32 INS42 INS42 INS21 INS21 INS42 INS32 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS21 INS21 INS21 INS42 INS42 INS32 INS32 INS42 INS42 INS21 INS21 INS21 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS42 INS42 INS14 INS32 INS42 INS32 INS42 INS42 INS52 INS42 INS52 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS43 INS32 INS42 INS45 INS42 INS32 INS42 INS32 INS42 INS42 MOV32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS45 INS42 INS32 INS42 INS32 INS32 INS32 INS42 INS45 INS42 INS32 INS42 INS32 INS32 INS42 INS32 MOV32 INS42 INS32 INS42 INS32 INS42 INS45 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS45 INS42 INS32 INS42 INS32 INS32 INS42 INS45 INS42 INS32 INS42 INS32 INS32 INS42 INS45 INS42 INS32 INS42 INS32 INS32 INS42 INS45 INS42 INS32 INS42 INS32 INS32 INS42 INS45 INS42 INS42 INS42 INS32 INS42 DEL42 DEL42 DEL32 DEL42 DEL32