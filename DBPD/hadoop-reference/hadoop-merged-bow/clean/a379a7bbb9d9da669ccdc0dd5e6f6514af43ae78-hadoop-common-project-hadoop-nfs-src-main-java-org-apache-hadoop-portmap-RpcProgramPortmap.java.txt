HDFS-5288. Close idle connections in portmap. Contributed by Haohui Mai

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1544352 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Map.Entry;
-import java.util.Set;
+import org.jboss.netty.channel.ChannelStateEvent;
+import org.jboss.netty.channel.ExceptionEvent;
+import org.jboss.netty.channel.MessageEvent;
+import org.jboss.netty.channel.group.ChannelGroup;
+import org.jboss.netty.handler.timeout.IdleState;
+import org.jboss.netty.handler.timeout.IdleStateAwareChannelUpstreamHandler;
+import org.jboss.netty.handler.timeout.IdleStateEvent;
-/**
- * An rpcbind request handler.
- */
-public class RpcProgramPortmap extends RpcProgram implements PortmapInterface {
-  public static final int PROGRAM = 100000;
-  public static final int VERSION = 2;
-  
+final class RpcProgramPortmap extends IdleStateAwareChannelUpstreamHandler implements PortmapInterface {
+  static final int PROGRAM = 100000;
+  static final int VERSION = 2;
-  public RpcProgramPortmap() {
-    super("portmap", "localhost", RPCB_PORT, PROGRAM, VERSION, VERSION);
-    map = new HashMap<String, PortmapMapping>(256);
-  }
+  /** ChannelGroup that remembers all active channels for gracefully shutdown. */
+  private final ChannelGroup allChannels;
-  /** Dump all the register RPC services */
-  private synchronized void dumpRpcServices() {
-    Set<Entry<String, PortmapMapping>> entrySet = map.entrySet();
-    for (Entry<String, PortmapMapping> entry : entrySet) {
-      LOG.info("Service: " + entry.getKey() + " portmapping: "
-          + entry.getValue());
-    }
+  RpcProgramPortmap(ChannelGroup allChannels) {
+    this.allChannels = allChannels;
+    map = new HashMap<String, PortmapMapping>(256);
+    PortmapMapping m = new PortmapMapping(PROGRAM, VERSION,
+        PortmapMapping.TRANSPORT_TCP, RpcProgram.RPCB_PORT);
+    PortmapMapping m1 = new PortmapMapping(PROGRAM, VERSION,
+        PortmapMapping.TRANSPORT_UDP, RpcProgram.RPCB_PORT);
+    map.put(PortmapMapping.key(m), m);
+    map.put(PortmapMapping.key(m1), m1);
-      dumpRpcServices();
-  public void register(PortmapMapping mapping) {
-    String key = PortmapMapping.key(mapping);
-    synchronized(this) {
-      map.put(key, mapping);
-    }
-  }
+  public void messageReceived(ChannelHandlerContext ctx, MessageEvent e)
+      throws Exception {
-  @Override
-  public void handleInternal(ChannelHandlerContext ctx, RpcInfo info) {
+    RpcInfo info = (RpcInfo) e.getMessage();
-    byte[] data = new byte[info.data().readableBytes()];
-    info.data().readBytes(data);
-    XDR in = new XDR(data);
+    XDR in = new XDR(info.data().toByteBuffer().asReadOnlyBuffer(),
+        XDR.State.READING);
-    ChannelBuffer buf = ChannelBuffers.wrappedBuffer(out.asReadOnlyWrap().buffer());
+    ChannelBuffer buf = ChannelBuffers.wrappedBuffer(out.asReadOnlyWrap()
+        .buffer());
-  protected boolean isIdempotent(RpcCall call) {
-    return false;
+  public void channelOpen(ChannelHandlerContext ctx, ChannelStateEvent e)
+      throws Exception {
+    allChannels.add(e.getChannel());
+  }
+
+  @Override
+  public void channelIdle(ChannelHandlerContext ctx, IdleStateEvent e)
+      throws Exception {
+    if (e.getState() == IdleState.ALL_IDLE) {
+      e.getChannel().close();
+    }
+  }
+
+  @Override
+  public void exceptionCaught(ChannelHandlerContext ctx, ExceptionEvent e) {
+    LOG.warn("Encountered ", e.getCause());
+    e.getChannel().close();

MOV26 MOV26 INS26 INS26 INS26 INS26 INS26 MOV31 INS40 INS40 UPD40 INS40 INS40 INS40 UPD40 INS83 INS42 INS43 INS23 INS31 INS31 INS42 INS29 INS83 INS83 INS43 INS59 INS42 INS44 INS8 UPD42 INS43 MOV78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 MOV78 UPD42 INS44 INS43 INS8 INS78 UPD83 UPD39 UPD42 INS44 MOV65 INS42 INS42 INS43 INS42 INS21 MOV21 INS60 INS60 INS21 INS21 INS43 INS42 INS42 INS60 INS43 INS42 INS43 UPD42 MOV42 INS42 MOV21 INS43 INS42 INS43 INS42 INS42 INS25 INS42 UPD43 UPD42 INS43 INS42 INS21 INS21 UPD66 UPD42 MOV42 INS7 INS43 INS59 MOV43 INS59 INS32 INS32 INS42 INS43 INS59 MOV43 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 INS27 INS8 UPD42 INS42 INS32 INS32 INS22 INS42 INS42 INS42 INS14 INS42 INS14 INS42 INS42 INS32 INS42 MOV42 UPD42 MOV42 INS32 INS42 INS42 INS42 INS11 UPD42 UPD42 INS32 INS32 INS40 MOV21 INS42 INS42 INS45 INS32 INS32 INS42 INS52 INS42 MOV43 INS42 INS42 INS40 INS40 MOV43 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS42 INS42 INS42 MOV43 INS32 MOV43 INS32 INS40 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 MOV32 INS42 INS32 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 DEL29 DEL83 DEL42 DEL43 DEL83 DEL83 DEL83 DEL42 DEL45 DEL45 DEL42 DEL42 DEL42 DEL42 DEL46 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL32 DEL59 DEL60 DEL43 DEL43 DEL74 DEL44 DEL42 DEL8 DEL70 DEL8 DEL31 DEL42 DEL32 DEL21 DEL42 DEL39 DEL85 DEL5 DEL42 DEL39 DEL85 DEL5 DEL3 DEL59 DEL60 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL45 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL52 DEL8 DEL51 DEL8 DEL9 DEL41