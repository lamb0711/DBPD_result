YARN-1277. Added a policy based configuration for http/https in common HttpServer and using the same in YARN - related
to per project https config support via HADOOP-10022. Contributed by Suresh Srinivas and Omkar Vinit Joshi.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1529662 13f79535-47bb-0310-9956-ffa450edef68

+import com.google.common.base.Joiner;
+import com.google.common.base.Splitter;
+import org.apache.hadoop.classification.InterfaceAudience.Private;
+import org.apache.hadoop.classification.InterfaceStability.Evolving;
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.http.HttpConfig;
+import org.apache.hadoop.mapreduce.JobID;
+import org.apache.hadoop.mapreduce.TypeConverter;
+import org.apache.hadoop.mapreduce.v2.jobhistory.JHAdminConfig;
+import org.apache.hadoop.net.NetUtils;
+import org.apache.hadoop.yarn.api.records.ApplicationId;
+import org.apache.hadoop.yarn.conf.YarnConfiguration;
+
-import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.classification.InterfaceStability.Evolving;
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.fs.CommonConfigurationKeysPublic;
-import org.apache.hadoop.mapreduce.JobID;
-import org.apache.hadoop.mapreduce.MRConfig;
-import org.apache.hadoop.mapreduce.TypeConverter;
-import org.apache.hadoop.mapreduce.v2.jobhistory.JHAdminConfig;
-import org.apache.hadoop.net.NetUtils;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-
-import com.google.common.base.Joiner;
-import com.google.common.base.Splitter;
+import static org.apache.hadoop.http.HttpConfig.Policy;
-  private static boolean isSSLEnabledInYARN;
-  private static boolean isSSLEnabledInJHS;
-  private static boolean isSSLEnabledInMRAM;
-  
+  private static Policy httpPolicyInYarn;
+  private static Policy httpPolicyInJHS;
+
-    setSSLEnabledInYARN(conf.getBoolean(
-          CommonConfigurationKeysPublic.HADOOP_SSL_ENABLED_KEY,
-          CommonConfigurationKeysPublic.HADOOP_SSL_ENABLED_DEFAULT));
-    setSSLEnabledInJHS(conf.getBoolean(JHAdminConfig.MR_HS_SSL_ENABLED,
-        JHAdminConfig.DEFAULT_MR_HS_SSL_ENABLED));
-    setSSLEnabledInMRAM(conf.getBoolean(MRConfig.SSL_ENABLED_KEY,
-        MRConfig.SSL_ENABLED_KEY_DEFAULT));
+    setHttpPolicyInYARN(conf.get(
+            YarnConfiguration.YARN_HTTP_POLICY_KEY,
+            YarnConfiguration.YARN_HTTP_POLICY_DEFAULT));
+    setHttpPolicyInJHS(conf.get(JHAdminConfig.MR_HS_HTTP_POLICY,
+            JHAdminConfig.DEFAULT_MR_HS_HTTP_POLICY));
-  private static void setSSLEnabledInYARN(boolean isSSLEnabledInYARN) {
-    MRWebAppUtil.isSSLEnabledInYARN = isSSLEnabledInYARN;
+  private static void setHttpPolicyInJHS(String policy) {
+    MRWebAppUtil.httpPolicyInJHS = Policy.fromString(policy);
-  private static void setSSLEnabledInJHS(boolean isSSLEnabledInJHS) {
-    MRWebAppUtil.isSSLEnabledInJHS = isSSLEnabledInJHS;
+  private static void setHttpPolicyInYARN(String policy) {
+    MRWebAppUtil.httpPolicyInYarn = Policy.fromString(policy);
-  private static void setSSLEnabledInMRAM(boolean isSSLEnabledInMRAM) {
-    MRWebAppUtil.isSSLEnabledInMRAM = isSSLEnabledInMRAM;
+  public static Policy getJHSHttpPolicy() {
+    return MRWebAppUtil.httpPolicyInJHS;
-  public static boolean isSSLEnabledInYARN() {
-    return isSSLEnabledInYARN;
-  }
-  
-  public static boolean isSSLEnabledInJHS() {
-    return isSSLEnabledInJHS;
-  }
-
-  public static boolean isSSLEnabledInMRAM() {
-    return isSSLEnabledInMRAM;
+  public static Policy getYARNHttpPolicy() {
+    return MRWebAppUtil.httpPolicyInYarn;
-    if (isSSLEnabledInYARN) {
-      return "https://";
-    } else {
-      return "http://";
-    }
+    return HttpConfig.getScheme(httpPolicyInYarn);
-    if (isSSLEnabledInJHS) {
-      return "https://";
-    } else {
-      return "http://";
-    }
+    return HttpConfig.getScheme(httpPolicyInJHS);
-    if (isSSLEnabledInJHS) {
+    if (httpPolicyInJHS == Policy.HTTPS_ONLY) {
-    if (isSSLEnabledInJHS) {
+    if (httpPolicyInJHS == Policy.HTTPS_ONLY) {
-    if (isSSLEnabledInJHS) {
+    if (httpPolicyInJHS == Policy.HTTPS_ONLY) {
-    if (isSSLEnabledInJHS) {
-      return JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_HTTPS_PORT;
-    } else {
-      return JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_PORT;
-    }
+    return httpPolicyInJHS == Policy.HTTPS_ONLY ?
+      JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_HTTPS_PORT:
+      JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_PORT;
-    if (isSSLEnabledInJHS) {
-      return JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_HTTPS_ADDRESS;
-    } else {
-      return JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS;
-    }
+    return httpPolicyInJHS == Policy.HTTPS_ONLY ?
+      JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_HTTPS_ADDRESS :
+      JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS;
-  
+
-    if (isSSLEnabledInMRAM) {
-      return "https://";
-    } else {
-      return "http://";
-    }
+    return "http://";

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS40 UPD40 UPD40 INS31 INS43 INS43 UPD42 UPD42 UPD83 INS43 INS42 INS43 UPD42 MOV43 UPD42 MOV83 MOV83 MOV43 UPD42 MOV42 INS8 MOV43 MOV43 MOV8 INS42 UPD42 INS42 UPD42 INS43 INS42 INS43 INS42 INS42 INS41 INS42 INS41 INS41 INS41 INS42 INS42 INS40 INS40 INS32 INS32 INS27 INS27 INS27 INS16 INS16 UPD42 UPD42 UPD40 INS32 UPD40 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS40 INS42 INS40 INS27 INS40 INS40 INS27 INS40 INS40 UPD42 UPD40 UPD40 UPD42 UPD40 UPD40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS40 DEL39 DEL39 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL42 DEL42 DEL42 DEL40 DEL40 DEL32 DEL32 DEL21 DEL39 DEL42 DEL42 DEL39 DEL42 DEL42 DEL39 DEL42 DEL39 DEL42 DEL44 DEL40 DEL42 DEL7 DEL21 DEL39 DEL42 DEL39 DEL42 DEL39 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL83 DEL42 DEL45 DEL41 DEL8 DEL45 DEL41 DEL8 DEL25 DEL8 DEL31 DEL83 DEL83 DEL42 DEL42 DEL45 DEL41 DEL8 DEL45 DEL41 DEL8 DEL25 DEL8 DEL31 DEL42 DEL42 DEL42 DEL42 DEL40 DEL41 DEL8 DEL40 DEL41 DEL8 DEL25 DEL42 DEL40 DEL41 DEL8 DEL40 DEL41 DEL8 DEL25 DEL42 DEL45 DEL41 DEL8 DEL25 DEL8