HDFS-4150.  Update the inode in the block map when a snapshotted file or a snapshot file is deleted. Contributed by Jing Zhao


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1406763 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.blockmanagement.BlockCollection;
+import org.apache.hadoop.hdfs.server.namenode.INode.BlocksMapINodeUpdateEntry;
-    int start = 0;
-    int end = 0;
-    List<Block> toDeleteList = blocks.getToDeleteList();
-    while (start < toDeleteList.size()) {
-      end = BLOCK_DELETION_INCREMENT + start;
-      end = end > toDeleteList.size() ? toDeleteList.size() : end;
+    Iterator<Map.Entry<Block, BlocksMapINodeUpdateEntry>> iter = blocks
+        .iterator();
+    while (iter.hasNext()) {
-        for (int i = start; i < end; i++) {
-          blockManager.removeBlock(toDeleteList.get(i));
+        for (int numberToHandle = BLOCK_DELETION_INCREMENT; iter.hasNext()
+            && numberToHandle > 0; numberToHandle--) {
+          Map.Entry<Block, BlocksMapINodeUpdateEntry> entry = iter.next();
+          updateBlocksMap(entry);
-      start = end;
+    }
+  }
+  
+  /**
+   * Update the blocksMap for a given block.
+   * 
+   * @param entry
+   *          The update entry containing both the block and its new INode. The
+   *          block should be removed from the blocksMap if the INode is null,
+   *          otherwise the INode for the block will be updated in the
+   *          blocksMap.
+   */
+  private void updateBlocksMap(
+      Map.Entry<Block, BlocksMapINodeUpdateEntry> entry) {
+    Block block = entry.getKey();
+    BlocksMapINodeUpdateEntry value = entry.getValue();
+    if (value == null) {
+      blockManager.removeBlock(block);
+    } else {
+      BlockCollection toDelete = value.getToDelete();
+      BlockInfo originalBlockInfo = blockManager.getStoredBlock(block);
+      // The FSDirectory tree and the blocksMap share the same INode reference.
+      // Thus we use "==" to check if the INode for the block belongs to the
+      // current file (instead of the INode from a snapshot file).
+      if (originalBlockInfo != null
+          && toDelete == originalBlockInfo.getBlockCollection()) {
+        blockManager.addBlockCollection(originalBlockInfo,
+            value.getToReplace());
+      }
-    for (Block b : blocks.getToDeleteList()) {
+    Iterator<Map.Entry<Block, BlocksMapINodeUpdateEntry>> blockIter = 
+        blocks.iterator();
+    while (blockIter.hasNext()) {
+      Map.Entry<Block, BlocksMapINodeUpdateEntry> entry = blockIter.next();
+      Block b = entry.getKey();
-      blockManager.removeBlock(b);
+      updateBlocksMap(entry);
+

INS26 INS26 INS40 INS40 INS31 INS31 MOV29 MOV83 MOV39 MOV42 MOV44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 MOV60 INS61 INS65 INS65 INS74 INS42 INS60 INS60 INS25 INS60 INS61 INS74 INS32 INS8 INS66 INS42 INS66 INS66 INS66 INS66 INS43 INS43 INS43 MOV43 INS59 INS43 INS59 INS27 INS8 INS8 INS74 INS59 INS32 MOV8 INS43 INS74 UPD42 INS32 INS42 INS42 MOV21 INS54 INS40 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS60 INS60 INS25 INS43 INS74 INS42 INS32 INS42 INS42 INS60 INS60 INS21 INS42 INS43 MOV43 INS43 INS42 INS42 INS8 MOV8 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 INS43 INS59 INS43 INS59 INS27 INS8 INS42 INS43 INS43 INS43 MOV42 UPD42 MOV42 INS74 INS59 INS43 INS59 INS32 INS40 INS42 INS24 INS42 INS42 INS42 INS42 UPD42 MOV42 INS32 INS42 INS42 INS32 INS27 INS27 MOV21 INS40 INS42 INS42 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS58 INS27 INS37 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS33 UPD42 MOV42 INS32 INS40 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS39 INS59 INS32 INS27 INS42 MOV60 INS21 INS42 INS42 INS42 UPD42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS34 UPD74 INS32 UPD42 UPD42 INS43 UPD43 INS43 UPD42 UPD42 MOV42 UPD42 MOV42 INS40 UPD42 INS42 UPD42 UPD42 DEL39 DEL34 DEL42 DEL39 DEL34 DEL59 DEL60 DEL42 DEL32 DEL27 DEL42 DEL42 DEL42 DEL27 DEL7 DEL21 DEL42 DEL42 DEL32 DEL27 DEL32 DEL42 DEL16 DEL7 DEL21 DEL39 DEL42 DEL59 DEL58 DEL42 DEL27 DEL42 DEL37 DEL8 DEL24 DEL8 DEL54 DEL42 DEL42 DEL7 DEL21 DEL8 DEL61 DEL8 DEL31 DEL42 DEL42 DEL32 DEL21 DEL42 DEL44 DEL32 DEL70