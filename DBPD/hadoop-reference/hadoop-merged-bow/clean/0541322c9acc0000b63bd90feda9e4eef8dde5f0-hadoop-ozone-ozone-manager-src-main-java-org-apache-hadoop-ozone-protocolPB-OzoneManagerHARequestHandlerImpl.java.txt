HDDS-1675. Cleanup Volume Request 2 phase old code. (#964)



-import java.io.IOException;
-
-import org.apache.hadoop.ozone.om.helpers.OmDeleteVolumeResponse;
-import org.apache.hadoop.ozone.om.helpers.OmVolumeArgs;
-import org.apache.hadoop.ozone.om.helpers.OmVolumeOwnerChangeResponse;
-import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;
-import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos
-    .CreateVolumeRequest;
-import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos
-    .CreateVolumeResponse;
-import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos
-    .DeleteVolumeRequest;
-import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos
-    .DeleteVolumeResponse;
-    .SetVolumePropertyRequest;
-import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos
-    .SetVolumePropertyResponse;
-import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos
-import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos
-    .VolumeInfo;
-import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos
-    .VolumeList;
-  @Override
-  public OMRequest handleStartTransaction(OMRequest omRequest)
-      throws IOException {
-    LOG.debug("Received OMRequest: {}, ", omRequest);
-    Type cmdType = omRequest.getCmdType();
-    OMRequest newOmRequest = null;
-    switch (cmdType) {
-    case CreateVolume:
-      newOmRequest = handleCreateVolumeStart(omRequest);
-      break;
-    case SetVolumeProperty:
-      newOmRequest = handleSetVolumePropertyStart(omRequest);
-      break;
-    case DeleteVolume:
-      newOmRequest = handleDeleteVolumeStart(omRequest);
-      break;
-    default:
-      throw new IOException("Unrecognized Command Type:" + cmdType);
-    }
-    return newOmRequest;
-  }
-
-
-
-  private OMRequest handleCreateVolumeStart(OMRequest omRequest)
-      throws IOException {
-    VolumeInfo volumeInfo = omRequest.getCreateVolumeRequest().getVolumeInfo();
-    OzoneManagerProtocolProtos.VolumeList volumeList =
-        getOzoneManager().startCreateVolume(
-            OmVolumeArgs.getFromProtobuf(volumeInfo));
-
-    CreateVolumeRequest createVolumeRequest =
-        CreateVolumeRequest.newBuilder().setVolumeInfo(volumeInfo)
-            .setVolumeList(volumeList).build();
-    return omRequest.toBuilder().setCreateVolumeRequest(createVolumeRequest)
-        .build();
-  }
-
-  private CreateVolumeResponse handleCreateVolumeApply(OMRequest omRequest)
-      throws IOException {
-    OzoneManagerProtocolProtos.VolumeInfo volumeInfo =
-        omRequest.getCreateVolumeRequest().getVolumeInfo();
-    VolumeList volumeList =
-        omRequest.getCreateVolumeRequest().getVolumeList();
-    getOzoneManager().applyCreateVolume(
-        OmVolumeArgs.getFromProtobuf(volumeInfo),
-        volumeList);
-    return CreateVolumeResponse.newBuilder().build();
-  }
-
-  private OMRequest handleSetVolumePropertyStart(OMRequest omRequest)
-      throws IOException {
-    SetVolumePropertyRequest setVolumePropertyRequest =
-        omRequest.getSetVolumePropertyRequest();
-    String volume = setVolumePropertyRequest.getVolumeName();
-    OMRequest newOmRequest = null;
-    if (setVolumePropertyRequest.hasQuotaInBytes()) {
-      long quota = setVolumePropertyRequest.getQuotaInBytes();
-      OmVolumeArgs omVolumeArgs =
-          getOzoneManager().startSetQuota(volume, quota);
-      SetVolumePropertyRequest newSetVolumePropertyRequest =
-          SetVolumePropertyRequest.newBuilder().setVolumeName(volume)
-              .setVolumeInfo(omVolumeArgs.getProtobuf()).build();
-      newOmRequest =
-          omRequest.toBuilder().setSetVolumePropertyRequest(
-              newSetVolumePropertyRequest).build();
-    } else {
-      String owner = setVolumePropertyRequest.getOwnerName();
-      OmVolumeOwnerChangeResponse omVolumeOwnerChangeResponse =
-          getOzoneManager().startSetOwner(volume, owner);
-      // If volumeLists become large and as ratis writes the request to disk we
-      // might take more space if the lists become very big in size. We might
-      // need to revisit this if it becomes problem
-      SetVolumePropertyRequest newSetVolumePropertyRequest =
-          SetVolumePropertyRequest.newBuilder().setVolumeName(volume)
-              .setOwnerName(owner)
-              .setOriginalOwner(omVolumeOwnerChangeResponse.getOriginalOwner())
-              .setNewOwnerVolumeList(
-                  omVolumeOwnerChangeResponse.getNewOwnerVolumeList())
-              .setOldOwnerVolumeList(
-                  omVolumeOwnerChangeResponse.getOriginalOwnerVolumeList())
-              .setVolumeInfo(
-                  omVolumeOwnerChangeResponse.getNewOwnerVolumeArgs()
-                      .getProtobuf()).build();
-      newOmRequest =
-          omRequest.toBuilder().setSetVolumePropertyRequest(
-              newSetVolumePropertyRequest).build();
-    }
-    return newOmRequest;
-  }
-
-
-  private SetVolumePropertyResponse handleSetVolumePropertyApply(
-      OMRequest omRequest) throws IOException {
-    SetVolumePropertyRequest setVolumePropertyRequest =
-        omRequest.getSetVolumePropertyRequest();
-
-    if (setVolumePropertyRequest.hasQuotaInBytes()) {
-      getOzoneManager().applySetQuota(
-          OmVolumeArgs.getFromProtobuf(
-              setVolumePropertyRequest.getVolumeInfo()));
-    } else {
-      getOzoneManager().applySetOwner(
-          setVolumePropertyRequest.getOriginalOwner(),
-          setVolumePropertyRequest.getOldOwnerVolumeList(),
-          setVolumePropertyRequest.getNewOwnerVolumeList(),
-          OmVolumeArgs.getFromProtobuf(
-              setVolumePropertyRequest.getVolumeInfo()));
-    }
-    return SetVolumePropertyResponse.newBuilder().build();
-  }
-
-  private OMRequest handleDeleteVolumeStart(OMRequest omRequest)
-      throws IOException {
-    DeleteVolumeRequest deleteVolumeRequest =
-        omRequest.getDeleteVolumeRequest();
-
-    String volume = deleteVolumeRequest.getVolumeName();
-
-    OmDeleteVolumeResponse omDeleteVolumeResponse =
-        getOzoneManager().startDeleteVolume(volume);
-
-    DeleteVolumeRequest newDeleteVolumeRequest =
-        DeleteVolumeRequest.newBuilder().setVolumeList(
-            omDeleteVolumeResponse.getUpdatedVolumeList())
-            .setVolumeName(omDeleteVolumeResponse.getVolume())
-            .setOwner(omDeleteVolumeResponse.getOwner()).build();
-
-    return omRequest.toBuilder().setDeleteVolumeRequest(
-        newDeleteVolumeRequest).build();
-
-  }
-
-
-  private DeleteVolumeResponse handleDeleteVolumeApply(OMRequest omRequest)
-      throws IOException {
-
-    DeleteVolumeRequest deleteVolumeRequest =
-        omRequest.getDeleteVolumeRequest();
-
-    getOzoneManager().applyDeleteVolume(
-        deleteVolumeRequest.getVolumeName(), deleteVolumeRequest.getOwner(),
-        deleteVolumeRequest.getVolumeList());
-
-    return DeleteVolumeResponse.newBuilder().build();
-  }

DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL49 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL10 DEL42 DEL49 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL10 DEL42 DEL49 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL10 DEL49 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL50 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL40 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL40 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL32 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL8 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL31