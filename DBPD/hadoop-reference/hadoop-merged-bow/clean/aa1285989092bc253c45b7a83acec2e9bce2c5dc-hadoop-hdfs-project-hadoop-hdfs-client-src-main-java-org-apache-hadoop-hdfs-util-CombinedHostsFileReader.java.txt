HDFS-14121. Log message about the old hosts file format is misleading
(Contributed by Zsolt Venczel via Daniel Templeton)

Change-Id: I7ff548f6c82e0aeb08a7a50ca7c2c827db8726bb

+import java.io.File;
+  private static final String REFER_TO_DOC_MSG = " For the correct JSON" +
+          " format please refer to the documentation (https://hadoop.apache" +
+          ".org/docs/current/hadoop-project-dist/hadoop-hdfs/HdfsDataNodeAd" +
+          "minGuide.html#JSON-based_configuration)";
+
-   * @param hostsFile the input json file to read from
+   * @param hostsFilePath the input json file to read from
-      readFile(final String hostsFile) throws IOException {
+      readFile(final String hostsFilePath) throws IOException {
+    File hostFile = new File(hostsFilePath);
-    try (Reader input =
-        new InputStreamReader(new FileInputStream(hostsFile), "UTF-8")) {
-      allDNs = objectMapper.readValue(input, DatanodeAdminProperties[].class);
-    } catch (JsonMappingException jme) {
-      // The old format doesn't have json top-level token to enclose the array.
-      // For backward compatibility, try parsing the old format.
-      tryOldFormat = true;
-      LOG.warn("{} has invalid JSON format." +
-          "Try the old format without top-level token defined.", hostsFile);
+
+    if (hostFile.length() > 0) {
+      try (Reader input =
+                   new InputStreamReader(new FileInputStream(hostFile),
+                           "UTF-8")) {
+        allDNs = objectMapper.readValue(input, DatanodeAdminProperties[].class);
+      } catch (JsonMappingException jme) {
+        // The old format doesn't have json top-level token to enclose
+        // the array.
+        // For backward compatibility, try parsing the old format.
+        tryOldFormat = true;
+      }
+    } else {
+      LOG.warn(hostsFilePath + " is empty." + REFER_TO_DOC_MSG);
-          new InputStreamReader(new FileInputStream(hostsFile), "UTF-8")) {
+          new InputStreamReader(new FileInputStream(hostsFilePath),
+                  "UTF-8")) {
+        LOG.warn(hostsFilePath + " has legacy JSON format." + REFER_TO_DOC_MSG);
+      } catch (Throwable ex) {
+        LOG.warn(hostsFilePath + " has invalid JSON format." + REFER_TO_DOC_MSG,
+                ex);

INS26 INS40 INS23 INS83 INS83 INS83 INS43 INS59 INS42 INS42 INS27 UPD42 INS60 INS25 INS45 INS45 INS45 INS45 UPD42 INS43 INS59 INS27 INS8 INS8 INS42 INS42 INS14 INS32 INS34 MOV54 INS21 INS43 INS42 INS42 INS42 INS32 INS12 INS42 INS42 INS42 INS27 INS21 INS44 INS8 INS42 INS45 INS42 INS32 INS43 INS42 INS21 INS42 INS42 INS27 INS42 INS32 UPD42 UPD42 INS42 INS45 INS42 INS42 INS42 INS27 INS42 INS42 INS45 INS42 DEL42 DEL42 DEL45 DEL45 DEL27 DEL42 DEL32 DEL21