MAPREDUCE-2716. MRReliabilityTest job fails because of missing job-file. Contributed by Jeffrey Naisbitt.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1164805 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashMap;
-import org.apache.hadoop.mapreduce.v2.jobhistory.JHConfig;
+import org.apache.hadoop.mapreduce.v2.util.MRApps;
+import org.apache.hadoop.yarn.exceptions.impl.pb.YarnRemoteExceptionPBImpl;
-import org.apache.hadoop.yarn.security.client.ClientRMSecurityInfo;
-  private static final NotRunningJob NOTSTARTEDJOB = 
-	  new NotRunningJob(JobState.NEW);
-  
-  private static final NotRunningJob FAILEDJOB = 
-	  new NotRunningJob(JobState.FAILED);
-  
-  private static final NotRunningJob KILLEDJOB = 
-	  new NotRunningJob(JobState.KILLED);
+
+  // Caches for per-user NotRunningJobs
+  private static HashMap<JobState, HashMap<String, NotRunningJob>> notRunningJobs =
+      new HashMap<JobState, HashMap<String, NotRunningJob>>();
+  // Get the instance of the NotRunningJob corresponding to the specified
+  // user and state
+  private NotRunningJob getNotRunningJob(String user, JobState state) {
+    synchronized (notRunningJobs) {
+      HashMap<String, NotRunningJob> map = notRunningJobs.get(state);
+      if (map == null) {
+        map = new HashMap<String, NotRunningJob>();
+        notRunningJobs.put(state, map);
+      }
+      NotRunningJob notRunningJob = map.get(user);
+      if (notRunningJob == null) {
+        notRunningJob = new NotRunningJob(user, state);
+        map.put(user, notRunningJob);
+      }
+      return notRunningJob;
+    }
+  }
+
-    /** we just want to return if its allocating, so that we dont 
+    /** we just want to return if its allocating, so that we don't
-     * on a allocating Application.
+     * on an allocating Application.
+    String user = application.getUser();
+    if (user == null) {
+      throw new YarnRemoteExceptionPBImpl("User is not set in the application report");
+    }
-      return NOTSTARTEDJOB;
+      return getNotRunningJob(user, JobState.NEW);
-      return FAILEDJOB;
+      return getNotRunningJob(user, JobState.FAILED);
-        realProxy = null;
-        return KILLEDJOB;
-      }
+      realProxy = null;
+      return getNotRunningJob(user, JobState.KILLED);
+    }
-  JobStatus getJobStatus(JobID oldJobID) throws YarnRemoteException,
-       YarnRemoteException {
+  JobStatus getJobStatus(JobID oldJobID) throws YarnRemoteException {
-    String stagingDir = conf.get("yarn.apps.stagingDir");
-    String jobFile = stagingDir + "/" + jobId.toString();
-    MRClientProtocol protocol;
-    JobReport  report = ((GetJobReportResponse) invoke("getJobReport", 
+    JobReport report = ((GetJobReportResponse) invoke("getJobReport", 
+    String jobFile = MRApps.getJobFile(conf, report.getUser(), oldJobID); 
+

MOV26 INS26 INS40 UPD40 UPD40 INS31 INS74 INS83 MOV43 INS42 INS44 INS44 INS8 MOV25 INS43 INS43 INS74 UPD42 INS43 INS42 INS43 INS42 INS51 INS60 INS25 INS60 INS42 INS42 INS43 INS43 MOV43 INS74 INS42 INS42 INS42 INS8 MOV43 INS59 INS27 INS8 INS8 MOV27 MOV8 MOV43 INS59 INS42 INS42 INS43 INS43 INS74 INS60 INS25 INS60 INS25 INS41 INS42 INS32 INS42 INS33 INS53 MOV21 INS41 INS42 INS32 INS42 INS42 INS43 INS43 MOV43 INS74 INS59 INS27 INS8 MOV43 INS59 INS27 INS8 INS42 INS42 INS42 INS14 INS32 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS43 MOV43 UPD42 MOV42 INS32 INS42 INS33 INS21 INS21 INS42 INS32 INS42 INS33 INS21 INS21 INS43 INS45 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS40 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS7 INS32 INS42 INS42 INS42 INS7 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 MOV14 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS43 INS43 INS43 INS42 INS42 INS42 DEL83 DEL40 DEL83 DEL83 DEL83 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL40 DEL14 DEL59 DEL23 DEL40 DEL42 DEL41 DEL8 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL27 DEL59 DEL60 DEL42 DEL43 DEL42 DEL59 DEL60