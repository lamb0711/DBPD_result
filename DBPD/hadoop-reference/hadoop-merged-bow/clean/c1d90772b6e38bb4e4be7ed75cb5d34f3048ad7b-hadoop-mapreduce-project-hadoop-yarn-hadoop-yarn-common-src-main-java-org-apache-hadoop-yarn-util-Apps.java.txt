MAPREDUCE-3068. Added a whitelist of environment variables for containers from the NodeManager and set MALLOC_ARENA_MAX for all daemons and containers. Contributed by Chris Riccomini. 


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1185447 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Map;
+
+  public static void setEnvFromInputString(Map<String, String> env,
+      String envString) {
+    if (envString != null && envString.length() > 0) {
+      String childEnvs[] = envString.split(",");
+      for (String cEnv : childEnvs) {
+        String[] parts = cEnv.split("="); // split on '='
+        String value = env.get(parts[0]);
+
+        if (value != null) {
+          // Replace $env with the child's env constructed by NM's
+          // For example: LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/tmp
+          value = parts[1].replace("$" + parts[0], value);
+        } else {
+          // example PATH=$PATH:/tmp
+          value = System.getenv(parts[0]);
+          if (value != null) {
+            // the env key is present in the tt's env
+            value = parts[1].replace("$" + parts[0], value);
+          } else {
+            // check for simple variable substitution
+            // for e.g. ROOT=$HOME
+            String envValue = System.getenv(parts[1].substring(1));
+            if (envValue != null) {
+              value = envValue;
+            } else {
+              // the env key is note present anywhere .. simply set it
+              // example X=$X:/tmp or X=/tmp
+              value = parts[1].replace("$" + parts[0], "");
+            }
+          }
+        }
+        addToEnvironment(env, parts[0], value);
+      }
+    }
+  }
+
+  private static final String SYSTEM_PATH_SEPARATOR =
+      System.getProperty("path.separator");
+
+  public static void addToEnvironment(
+      Map<String, String> environment,
+      String variable, String value) {
+    String val = environment.get(variable);
+    if (val == null) {
+      val = value;
+    } else {
+      val = val + SYSTEM_PATH_SEPARATOR + value;
+    }
+    environment.put(variable, val);
+  }

INS26 INS40 INS31 INS23 INS31 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS74 INS42 INS43 INS42 INS25 INS42 INS42 INS32 INS74 INS42 INS43 INS42 INS43 INS42 INS60 INS25 INS21 INS43 INS43 INS43 INS42 INS27 INS8 INS42 INS42 INS45 INS43 INS43 INS43 INS42 INS42 INS43 INS59 INS27 INS8 INS8 INS32 INS42 INS42 INS42 INS27 INS27 INS60 INS70 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS34 INS43 INS59 INS44 INS42 INS8 INS42 INS42 INS42 INS7 INS7 INS42 INS42 INS42 INS42 INS85 INS32 INS43 INS42 INS60 INS60 INS25 INS21 INS42 INS42 INS42 INS27 INS42 INS42 INS45 INS42 INS5 INS59 INS43 INS59 INS27 INS8 INS8 INS32 INS42 INS42 INS42 INS43 INS85 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS25 INS42 INS42 INS2 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS2 INS7 INS7 INS27 INS8 INS8 INS42 INS34 INS42 INS34 INS42 INS32 INS42 INS32 INS42 INS33 INS21 INS60 INS25 INS2 INS42 INS27 INS42 INS42 INS42 INS2 INS7 INS43 INS59 INS27 INS8 INS8 INS42 INS34 INS45 INS2 INS42 INS34 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS42 INS34 INS2 INS42 INS27 INS42 INS42 INS42 INS32 INS7 INS7 INS42 INS34 INS45 INS2 INS2 INS42 INS34 INS42 INS42 INS42 INS32 INS42 INS34 INS42 INS34 INS2 INS42 INS27 INS45 INS42 INS34 INS45 INS2 INS42 INS34