HDFS-11384. Balancer disperses getBlocks calls to avoid NameNode's rpc queue saturation. Contributed by Konstantin V Shvachko.
+import java.util.concurrent.ThreadPoolExecutor;
+     *
+     * @param delay - time to sleep before sending getBlocks. Intended to
+     * disperse Balancer RPCs to NameNode for large clusters. See HDFS-11384.
-    private void dispatchBlocks() {
+    private void dispatchBlocks(long delay) {
+            if(delay > 0) {
+              if (LOG.isDebugEnabled()) {
+                LOG.debug("Sleeping " + delay + "  msec.");
+              }
+              Thread.sleep(delay);
+            }
+          } catch (InterruptedException ignored) {
+            // nothing to do
+          } finally {
+            delay = 0L;
+   * The best-effort limit on the number of RPCs per second
+   * the Balancer will send to the NameNode.
+   */
+  final static int BALANCER_NUM_RPC_PER_SEC = 20;
+
+  /**
+    int concurrentThreads = Math.min(sources.size(),
+        ((ThreadPoolExecutor)dispatchExecutor).getCorePoolSize());
+    assert concurrentThreads > 0 : "Number of concurrent threads is 0.";
+    if (LOG.isDebugEnabled()) {
+      LOG.debug("Balancer allowed RPCs per sec = " + BALANCER_NUM_RPC_PER_SEC);
+      LOG.debug("Balancer concurrent threads = " + concurrentThreads);
+      LOG.debug("Disperse Interval sec = " +
+          concurrentThreads / BALANCER_NUM_RPC_PER_SEC);
+    }
+    long dSec = 0;
+      final long delay = dSec * 1000;
-          s.dispatchBlocks();
+          s.dispatchBlocks(delay);
+      // Calculate delay in seconds for the next iteration
+      if(j >= concurrentThreads) {
+        dSec = 0;
+      } else if((j + 1) % BALANCER_NUM_RPC_PER_SEC == 0) {
+        dSec++;
+      }

INS26 INS40 INS23 INS29 INS83 INS83 INS39 INS59 INS44 INS65 INS42 INS34 INS60 INS6 INS25 INS60 INS65 INS39 INS42 INS66 INS66 INS39 INS59 INS27 INS45 INS32 INS8 INS39 INS59 INS42 INS66 INS66 INS42 INS32 INS42 INS34 INS42 INS42 INS21 INS21 INS21 INS42 INS34 INS60 INS25 INS42 INS42 INS32 INS32 INS32 INS32 INS32 INS83 INS39 INS59 INS27 INS8 INS25 INS42 INS42 INS36 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS27 INS42 INS42 INS21 INS27 INS8 INS11 INS45 INS42 INS45 INS42 INS45 INS27 INS42 INS34 INS7 INS27 INS34 INS21 INS12 INS8 INS43 INS42 INS42 INS42 INS42 INS34 INS36 INS42 INS37 INS25 INS44 INS8 INS21 INS42 INS27 INS42 INS27 INS8 INS43 INS42 INS7 INS42 INS34 INS42 INS34 INS25 INS21 INS42 INS42 INS34 INS32 INS8 INS32 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS27 INS45 INS42 INS45