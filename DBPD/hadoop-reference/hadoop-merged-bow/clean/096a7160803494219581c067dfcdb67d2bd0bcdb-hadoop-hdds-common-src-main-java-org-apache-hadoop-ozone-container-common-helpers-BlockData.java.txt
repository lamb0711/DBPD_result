HDDS-394. Rename *Key Apis in DatanodeContainerProtocol to *Block apis.
Contributed Dinesh Chitlangia.

-public class KeyData {
+public class BlockData {
-   * Please note : when we are working with keys, we don't care what they point
-   * to. So we We don't read chunkinfo nor validate them. It is responsibility
-   * of higher layer like ozone. We just read and write data from network.
+   * Please note : when we are working with blocks, we don't care what they
+   * point to. So we We don't read chunkinfo nor validate them. It is
+   * responsibility of higher layer like ozone. We just read and write data
+   * from network.
-   * Constructs a KeyData Object.
+   * Constructs a BlockData Object.
-  public KeyData(BlockID blockID) {
+  public BlockData(BlockID blockID) {
-   * Returns a keyData object from the protobuf data.
+   * Returns a blockData object from the protobuf data.
-   * @return - KeyData
+   * @return - BlockData
-  public static KeyData getFromProtoBuf(ContainerProtos.KeyData data) throws
+  public static BlockData getFromProtoBuf(ContainerProtos.BlockData data) throws
-    KeyData keyData = new KeyData(BlockID.getFromProtobuf(data.getBlockID()));
+    BlockData blockData = new BlockData(
+        BlockID.getFromProtobuf(data.getBlockID()));
-      keyData.addMetadata(data.getMetadata(x).getKey(),
+      blockData.addMetadata(data.getMetadata(x).getKey(),
-    keyData.setChunks(data.getChunksList());
+    blockData.setChunks(data.getChunksList());
-      Preconditions.checkArgument(data.getSize() == keyData.getSize());
+      Preconditions.checkArgument(data.getSize() == blockData.getSize());
-    return keyData;
+    return blockData;
-   * Returns a Protobuf message from KeyData.
+   * Returns a Protobuf message from BlockData.
-  public ContainerProtos.KeyData getProtoBufMessage() {
-    ContainerProtos.KeyData.Builder builder =
-        ContainerProtos.KeyData.newBuilder();
+  public ContainerProtos.BlockData getProtoBufMessage() {
+    ContainerProtos.BlockData.Builder builder =
+        ContainerProtos.BlockData.newBuilder();

UPD42 UPD42 UPD43 UPD43 UPD42 UPD43 UPD40 UPD66 UPD66 UPD66 INS66 UPD66 UPD66 UPD66 UPD40 UPD43 UPD42 UPD66 UPD43 UPD42 UPD42 UPD42 UPD40 UPD43 UPD40 UPD42 UPD42 UPD42