HDDS-1539. Implement addAcl,removeAcl,setAcl,getAcl for Volume. Contributed Ajay Kumar. (#847)



+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.OzoneAclInfo;
+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.OzoneAclInfo.OzoneAclRights;
+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.OzoneAclInfo.OzoneAclType;
+import java.util.BitSet;
+@JsonIgnoreProperties(value = {"aclBitSet"})
-  private List<ACLType> rights;
+  private BitSet aclBitSet;
-    this.rights = new ArrayList<>();
-    this.rights.add(acl);
+    this.aclBitSet = new BitSet(ACLType.getNoOfAcls());
+    aclBitSet.set(acl.ordinal(), true);
-  public OzoneAcl(ACLIdentityType type, String name, List<ACLType> acls) {
+  public OzoneAcl(ACLIdentityType type, String name, BitSet acls) {
+    Objects.requireNonNull(type);
+    Objects.requireNonNull(acls);
+
+    if(acls.cardinality() > ACLType.getNoOfAcls()) {
+      throw new IllegalArgumentException("Acl bitset passed has unexpected " +
+          "size. bitset size:" + acls.cardinality() + ", bitset:"
+          + acls.toString());
+    }
+
+    this.aclBitSet = (BitSet) acls.clone();
+    acls.stream().forEach(a -> aclBitSet.set(a));
+
-    this.rights = acls;
-    List<ACLType> acls = new ArrayList<>();
+    BitSet acls = new BitSet(ACLType.getNoOfAcls());
+
-      acls.add(ACLType.getACLRight(String.valueOf(ch)));
+      acls.set(ACLType.getACLRight(String.valueOf(ch)).ordinal());
+  public static OzoneAclInfo toProtobuf(OzoneAcl acl) {
+    OzoneAclInfo.Builder builder = OzoneAclInfo.newBuilder()
+        .setName(acl.getName())
+        .setType(OzoneAclType.valueOf(acl.getType().name()));
+    acl.getAclBitSet().stream().forEach(a ->
+        builder.addRights(OzoneAclRights.valueOf(ACLType.values()[a].name())));
+    return builder.build();
+  }
+
+  public static OzoneAcl fromProtobuf(OzoneAclInfo protoAcl) {
+    BitSet aclRights = new BitSet(ACLType.getNoOfAcls());
+    protoAcl.getRightsList().parallelStream().forEach(a ->
+        aclRights.set(a.ordinal()));
+
+    return new OzoneAcl(ACLIdentityType.valueOf(protoAcl.getType().name()),
+        protoAcl.getName(), aclRights);
+  }
+
-    return type + ":" + name + ":" + ACLType.getACLString(rights);
+    return type + ":" + name + ":" + ACLType.getACLString(aclBitSet);
-    return Objects.hash(this.getName(), this.getRights().toString(),
+    return Objects.hash(this.getName(), this.getAclBitSet(),
-  public List<ACLType> getRights() {
-    return rights;
+  public BitSet getAclBitSet() {
+    return aclBitSet;
+  }
+
+  public List<ACLType> getAclList() {
+    List<ACLType> acls = new ArrayList<>(ACLType.getNoOfAcls());
+    if(aclBitSet !=  null) {
+      aclBitSet.stream().forEach(a -> acls.add(ACLType.values()[a]));
+    }
+    return acls;
-    return otherAcl.toString().equals(this.toString());
-  }
-
-  /**
-   * ACL types.
-   */
-  public enum OzoneACLType {
-    USER(OzoneConsts.OZONE_ACL_USER_TYPE),
-    GROUP(OzoneConsts.OZONE_ACL_GROUP_TYPE),
-    WORLD(OzoneConsts.OZONE_ACL_WORLD_TYPE);
-
-    /**
-     * String value for this Enum.
-     */
-    private final String value;
-
-    /**
-     * Init OzoneACLtypes enum.
-     *
-     * @param val String type for this enum.
-     */
-    OzoneACLType(String val) {
-      value = val;
-    }
+    return otherAcl.getName().equals(this.getName()) &&
+        otherAcl.getType().equals(this.getType()) &&
+        otherAcl.getAclBitSet().equals(this.getAclBitSet());

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS77 INS31 INS31 INS31 INS42 INS80 INS43 MOV21 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS43 UPD42 INS83 MOV74 INS42 INS8 INS42 INS4 INS42 UPD42 INS43 INS21 INS21 INS25 INS21 INS60 INS42 INS43 INS42 INS60 INS21 INS41 INS42 INS43 INS42 INS60 INS21 INS41 UPD42 MOV42 MOV60 INS25 INS41 INS45 UPD42 MOV42 INS32 INS32 INS27 INS8 INS32 INS43 INS59 INS42 INS43 INS59 INS32 INS32 INS42 INS43 INS59 INS32 INS14 UPD42 INS27 INS8 INS42 INS27 INS42 UPD42 INS32 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS53 INS11 INS32 INS42 INS86 INS42 INS42 INS14 INS40 INS42 INS32 INS32 INS42 INS86 INS42 INS42 INS42 INS42 INS14 INS32 INS42 INS86 INS43 INS32 INS32 INS42 MOV32 INS42 INS33 INS21 INS32 INS32 INS32 UPD42 INS43 INS32 MOV42 INS42 INS42 INS42 INS42 INS42 INS14 UPD42 INS43 INS32 INS42 INS42 INS59 INS32 INS43 INS32 INS32 INS32 INS42 INS32 INS32 INS42 INS59 INS32 INS43 INS32 INS32 INS42 INS59 INS32 INS42 INS42 INS42 INS32 INS42 INS42 UPD42 UPD42 INS32 INS32 MOV32 MOV42 MOV32 INS32 INS42 INS32 INS32 INS42 INS32 UPD42 MOV42 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 MOV42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS86 UPD42 UPD42 INS42 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS27 INS32 INS45 INS32 UPD42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS59 INS32 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS2 INS42 UPD42 MOV42 INS42 INS42 INS2 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 DEL43 DEL74 DEL52 DEL42 DEL22 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL43 DEL42 DEL43 DEL74 DEL32 DEL66 DEL65 DEL29 DEL83 DEL42 DEL42 DEL40 DEL72 DEL42 DEL40 DEL72 DEL42 DEL40 DEL72 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL59 DEL23 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL7 DEL21 DEL8 DEL31 DEL71