Merge commit '456e901a4c5c639267ee87b8e5f1319f256d20c2' (HDFS-6407. Add sorting and pagination in the datanode tab of the NN Web UI. Contributed by Haohui Mai.) into HDFS-7285-merge

-import static org.apache.hadoop.hdfs.DFSConfigKeys.DFS_HA_NAMENODES_KEY_PREFIX;
-import static org.apache.hadoop.hdfs.DFSConfigKeys.DFS_NAMENODE_RPC_ADDRESS_KEY;
-
-import java.io.IOException;
-import java.net.BindException;
-import java.net.URI;
-import java.util.Random;
-
-import org.apache.hadoop.hdfs.DFSUtil;
-import org.apache.hadoop.hdfs.client.HdfsClientConfigKeys;
-import org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider;
+import org.apache.hadoop.hdfs.server.namenode.ha.HATestUtil;
+
+import java.io.IOException;
+import java.net.BindException;
+import java.net.URI;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Random;
-  
+
-  private static final String NN1 = "nn1";
-  private static final String NN2 = "nn2";
+    private int numNNs = 2;
-    
+
-    
+
+
+    public Builder setNumNameNodes(int nns) {
+      this.numNNs = nns;
+      return this;
+    }
-  
+
+  public static MiniDFSNNTopology createDefaultTopology(int nns, int startingPort) {
+    MiniDFSNNTopology.NSConf nameservice = new MiniDFSNNTopology.NSConf(NAMESERVICE);
+    for (int i = 0; i < nns; i++) {
+      nameservice.addNN(new MiniDFSNNTopology.NNConf("nn" + i).setIpcPort(startingPort++)
+          .setHttpPort(startingPort++));
+    }
+
+    return new MiniDFSNNTopology().addNameservice(nameservice);
+  }
+
-    return new MiniDFSNNTopology()
-      .addNameservice(new MiniDFSNNTopology.NSConf(NAMESERVICE).addNN(
-        new MiniDFSNNTopology.NNConf("nn1").setIpcPort(basePort)
-            .setHttpPort(basePort + 1)).addNN(
-        new MiniDFSNNTopology.NNConf("nn2").setIpcPort(basePort + 2)
-            .setHttpPort(basePort + 3)));
+    return createDefaultTopology(2, basePort);
-        // start cluster with 2 NameNodes
-        MiniDFSNNTopology topology = createDefaultTopology(basePort);
+        // start cluster with specified NameNodes
+        MiniDFSNNTopology topology = createDefaultTopology(builder.numNNs, basePort);
-        initHAConf(journalURI, builder.conf);
+        initHAConf(journalURI, builder.conf, builder.numNNs);
-        cluster.getNameNodeInfos()[0].setStartOpt(builder.startOpt);
-        cluster.getNameNodeInfos()[1].setStartOpt(builder.startOpt);
+        for (MiniDFSCluster.NameNodeInfo nn : cluster.getNameNodeInfos()) {
+          nn.setStartOpt(builder.startOpt);
+        }
-  
-  private Configuration initHAConf(URI journalURI, Configuration conf) {
+
+  private Configuration initHAConf(URI journalURI, Configuration conf, int numNNs) {
-    
-    String address1 = "127.0.0.1:" + basePort;
-    String address2 = "127.0.0.1:" + (basePort + 2);
-    conf.set(DFSUtil.addKeySuffixes(DFS_NAMENODE_RPC_ADDRESS_KEY,
-        NAMESERVICE, NN1), address1);
-    conf.set(DFSUtil.addKeySuffixes(DFS_NAMENODE_RPC_ADDRESS_KEY,
-        NAMESERVICE, NN2), address2);
-    conf.set(DFSConfigKeys.DFS_NAMESERVICES, NAMESERVICE);
-    conf.set(DFSUtil.addKeySuffixes(DFS_HA_NAMENODES_KEY_PREFIX, NAMESERVICE),
-        NN1 + "," + NN2);
-    conf.set(HdfsClientConfigKeys.Failover.PROXY_PROVIDER_KEY_PREFIX + "." + NAMESERVICE,
-        ConfiguredFailoverProxyProvider.class.getName());
-    conf.set("fs.defaultFS", "hdfs://" + NAMESERVICE);
-    
+
+    List<String> nns = new ArrayList<String>(numNNs);
+    int port = basePort;
+    for (int i = 0; i < numNNs; i++) {
+      nns.add("127.0.0.1:" + port);
+      // increment by 2 each time to account for the http port in the config setting
+      port += 2;
+    }
+
+    // use standard failover configurations
+    HATestUtil.setFailoverConfigurations(conf, NAMESERVICE, nns);
-  
+

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 INS31 INS31 INS23 INS31 INS83 INS83 MOV43 INS42 INS44 INS44 INS8 INS83 INS83 INS43 INS42 MOV44 INS8 INS44 INS83 INS39 INS59 INS83 INS43 INS42 INS44 INS8 INS39 INS42 INS39 INS42 INS60 INS24 INS41 INS42 INS41 INS39 INS42 INS24 INS42 INS34 INS42 INS39 INS42 INS21 INS41 INS43 INS59 INS58 INS27 INS37 INS8 INS32 INS32 INS74 INS39 INS58 INS27 INS37 INS8 INS7 INS52 INS40 UPD42 MOV42 MOV14 INS39 INS59 INS42 INS42 INS42 INS21 MOV14 UPD42 MOV42 UPD42 MOV42 INS42 INS34 INS42 INS43 MOV43 UPD42 INS14 UPD42 INS42 INS39 INS59 INS42 INS42 INS42 MOV21 MOV21 UPD42 UPD42 INS42 INS42 INS42 INS22 INS42 UPD42 MOV42 INS34 INS32 UPD42 MOV42 INS74 INS42 INS42 INS34 INS7 INS52 INS42 INS42 MOV42 MOV32 INS70 INS43 MOV43 UPD42 UPD42 MOV42 INS42 INS34 INS37 INS44 MOV32 INS8 INS42 UPD45 UPD42 MOV14 INS37 INS42 INS40 INS43 INS42 MOV21 INS27 INS42 INS40 INS40 INS45 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL83 DEL45 DEL59 DEL23 DEL83 DEL83 DEL83 DEL45 DEL59 DEL23 DEL45 DEL40 DEL43 DEL45 DEL14 DEL42 DEL42 DEL34 DEL27 DEL83 DEL83 DEL42 DEL42 DEL32 DEL42 DEL34 DEL27 DEL32 DEL42 DEL42 DEL34 DEL27 DEL32 DEL32 DEL32 DEL41 DEL8 DEL31 DEL34 DEL2 DEL42 DEL42 DEL32 DEL34 DEL2 DEL42 DEL40 DEL32 DEL21 DEL43 DEL45 DEL42 DEL27 DEL42 DEL43 DEL45 DEL42 DEL34 DEL27 DEL36 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL40 DEL45 DEL42 DEL27 DEL42 DEL43 DEL57 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL40 DEL42 DEL32 DEL21 DEL45 DEL45 DEL42 DEL27