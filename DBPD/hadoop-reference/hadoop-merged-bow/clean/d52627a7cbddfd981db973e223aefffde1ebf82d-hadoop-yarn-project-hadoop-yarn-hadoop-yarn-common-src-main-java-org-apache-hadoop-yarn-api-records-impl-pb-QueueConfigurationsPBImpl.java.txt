YARN-7254. UI and metrics changes related to absolute resource configuration. (Sunil G via wangda)

+import org.apache.hadoop.yarn.api.records.Resource;
+import org.apache.hadoop.yarn.proto.YarnProtos.ResourceProto;
-  QueueConfigurationsProto proto =
-      QueueConfigurationsProto.getDefaultInstance();
+  QueueConfigurationsProto proto = QueueConfigurationsProto
+      .getDefaultInstance();
+  Resource configuredMinResource = null;
+  Resource configuredMaxResource = null;
+  Resource effMinResource = null;
+  Resource effMaxResource = null;
+    mergeLocalToProto();
+  private void mergeLocalToProto() {
+    if (viaProto) {
+      maybeInitBuilder();
+    }
+    mergeLocalToBuilder();
+    proto = builder.build();
+    viaProto = true;
+  }
+
+  private void mergeLocalToBuilder() {
+    if (this.effMinResource != null) {
+      builder
+          .setEffectiveMinCapacity(convertToProtoFormat(this.effMinResource));
+    }
+    if (this.effMaxResource != null) {
+      builder
+          .setEffectiveMaxCapacity(convertToProtoFormat(this.effMaxResource));
+    }
+    if (this.configuredMinResource != null) {
+      builder.setEffectiveMinCapacity(
+          convertToProtoFormat(this.configuredMinResource));
+    }
+    if (this.configuredMaxResource != null) {
+      builder.setEffectiveMaxCapacity(
+          convertToProtoFormat(this.configuredMaxResource));
+    }
+  }
+
+  @Override
+  public Resource getEffectiveMinCapacity() {
+    QueueConfigurationsProtoOrBuilder p = viaProto ? proto : builder;
+    if (this.effMinResource != null) {
+      return this.effMinResource;
+    }
+    if (!p.hasEffectiveMinCapacity()) {
+      return null;
+    }
+    this.effMinResource = convertFromProtoFormat(p.getEffectiveMinCapacity());
+    return this.effMinResource;
+  }
+
+  @Override
+  public void setEffectiveMinCapacity(Resource capacity) {
+    maybeInitBuilder();
+    if (capacity == null) {
+      builder.clearEffectiveMinCapacity();
+    }
+    this.effMinResource = capacity;
+  }
+
+  @Override
+  public Resource getEffectiveMaxCapacity() {
+    QueueConfigurationsProtoOrBuilder p = viaProto ? proto : builder;
+    if (this.effMaxResource != null) {
+      return this.effMaxResource;
+    }
+    if (!p.hasEffectiveMaxCapacity()) {
+      return null;
+    }
+    this.effMaxResource = convertFromProtoFormat(p.getEffectiveMaxCapacity());
+    return this.effMaxResource;
+  }
+
+  @Override
+  public void setEffectiveMaxCapacity(Resource capacity) {
+    maybeInitBuilder();
+    if (capacity == null) {
+      builder.clearEffectiveMaxCapacity();
+    }
+    this.effMaxResource = capacity;
+  }
+
+  private ResourcePBImpl convertFromProtoFormat(ResourceProto p) {
+    return new ResourcePBImpl(p);
+  }
+
+  private ResourceProto convertToProtoFormat(Resource t) {
+    return ProtoUtils.convertToProtoFormat(t);
+  }
+
+  @Override
+  public Resource getConfiguredMinCapacity() {
+    QueueConfigurationsProtoOrBuilder p = viaProto ? proto : builder;
+    if (this.configuredMinResource != null) {
+      return this.configuredMinResource;
+    }
+    if (!p.hasConfiguredMinCapacity()) {
+      return null;
+    }
+    this.configuredMinResource = convertFromProtoFormat(
+        p.getConfiguredMinCapacity());
+    return this.configuredMinResource;
+  }
+
+  @Override
+  public void setConfiguredMinCapacity(Resource configuredMinResource) {
+    maybeInitBuilder();
+    if (configuredMinResource == null) {
+      builder.clearConfiguredMinCapacity();
+    }
+    this.configuredMinResource = configuredMinResource;
+  }
+
+  @Override
+  public Resource getConfiguredMaxCapacity() {
+    QueueConfigurationsProtoOrBuilder p = viaProto ? proto : builder;
+    if (this.configuredMaxResource != null) {
+      return this.configuredMaxResource;
+    }
+    if (!p.hasConfiguredMaxCapacity()) {
+      return null;
+    }
+    this.configuredMaxResource = convertFromProtoFormat(
+        p.getConfiguredMaxCapacity());
+    return this.configuredMaxResource;
+  }
+
+  @Override
+  public void setConfiguredMaxCapacity(Resource configuredMaxResource) {
+    maybeInitBuilder();
+    if (configuredMaxResource == null) {
+      builder.clearConfiguredMaxCapacity();
+    }
+    this.configuredMaxResource = configuredMaxResource;
+  }

INS26 INS26 INS40 INS40 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS33 INS42 INS42 INS33 INS42 INS42 INS33 INS42 INS42 INS33 INS21 INS25 INS21 INS21 INS21 INS25 INS25 INS25 INS25 INS42 INS42 INS60 INS25 INS25 INS21 INS41 INS42 INS43 INS42 INS21 INS25 INS21 INS42 INS42 INS60 INS25 INS25 INS21 INS41 INS42 INS43 INS42 INS21 INS25 INS21 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS41 INS42 INS42 INS60 INS25 INS25 INS21 INS41 INS42 INS43 INS42 INS21 INS25 INS21 INS42 INS42 INS60 INS25 INS25 INS21 INS41 INS42 INS43 INS42 INS21 INS25 INS21 INS32 INS42 INS8 INS32 INS7 INS7 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS43 INS59 INS27 INS8 INS38 INS8 INS7 INS22 INS42 INS32 INS27 INS8 INS7 INS43 INS59 INS27 INS8 INS38 INS8 INS7 INS22 INS42 INS32 INS27 INS8 INS7 INS42 INS14 INS42 INS32 INS43 INS59 INS27 INS8 INS38 INS8 INS7 INS22 INS42 INS32 INS27 INS8 INS7 INS43 INS59 INS27 INS8 INS38 INS8 INS7 INS22 INS42 INS32 INS27 INS8 INS7 INS42 INS21 INS42 INS42 INS32 INS42 INS9 INS22 INS33 INS21 INS22 INS33 INS21 INS22 INS33 INS21 INS22 INS33 INS21 INS42 INS42 INS16 INS22 INS33 INS41 INS32 INS41 INS22 INS32 INS52 INS42 INS42 INS42 INS33 INS21 INS22 INS42 INS42 INS42 INS16 INS22 INS33 INS41 INS32 INS41 INS22 INS32 INS52 INS42 INS42 INS42 INS33 INS21 INS22 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS16 INS22 INS33 INS41 INS32 INS41 INS22 INS32 INS52 INS42 INS42 INS42 INS33 INS21 INS22 INS42 INS42 INS42 INS16 INS22 INS33 INS41 INS32 INS41 INS22 INS32 INS52 INS42 INS42 INS42 INS33 INS21 INS22 INS42 INS32 INS42 INS42 INS52 INS42 INS32 INS52 INS42 INS32 INS52 INS42 INS32 INS52 INS42 INS32 INS42 INS42 INS42 INS52 INS42 INS22 INS42 INS42 INS33 INS52 INS42 INS42 INS32 INS32 INS52 INS42 INS42 INS42 INS42 INS52 INS42 INS22 INS42 INS42 INS33 INS52 INS42 INS42 INS32 INS32 INS52 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS22 INS42 INS42 INS33 INS52 INS42 INS42 INS32 INS32 INS52 INS42 INS42 INS42 INS42 INS52 INS42 INS22 INS42 INS42 INS33 INS52 INS42 INS42 INS32 INS32 INS52 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS52 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42