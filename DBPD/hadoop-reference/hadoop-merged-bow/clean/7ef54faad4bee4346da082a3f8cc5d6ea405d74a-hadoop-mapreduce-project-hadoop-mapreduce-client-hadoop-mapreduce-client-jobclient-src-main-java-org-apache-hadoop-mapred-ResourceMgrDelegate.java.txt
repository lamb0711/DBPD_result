YARN-834. Fixed annotations for yarn-client module, reorganized packages and clearly differentiated *Async apis. Contributed by Arun C Murthy and Zhijie Shen.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494017 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.List;
+import org.apache.hadoop.classification.InterfaceAudience.Private;
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.yarn.api.records.ApplicationReport;
+import org.apache.hadoop.yarn.api.records.ApplicationSubmissionContext;
+import org.apache.hadoop.yarn.api.records.NodeReport;
+import org.apache.hadoop.yarn.api.records.QueueUserACLInfo;
-import org.apache.hadoop.yarn.client.YarnClientImpl;
+import org.apache.hadoop.yarn.client.api.YarnClient;
-public class ResourceMgrDelegate extends YarnClientImpl {
+import com.google.common.annotations.VisibleForTesting;
+
+public class ResourceMgrDelegate extends YarnClient {
+  @Private
+  @VisibleForTesting
+  protected YarnClient client;
+  private InetSocketAddress rmAddress;
-   * Delegate responsible for communicating with the Resource Manager's {@link ApplicationClientProtocol}.
+   * Delegate responsible for communicating with the Resource Manager's
+   * {@link ApplicationClientProtocol}.
-    super();
+    this(conf, null);
+  }
+
+  /**
+   * Delegate responsible for communicating with the Resource Manager's
+   * {@link ApplicationClientProtocol}.
+   * @param conf the configuration object.
+   * @param rmAddress the address of the Resource Manager
+   */
+  public ResourceMgrDelegate(YarnConfiguration conf,
+      InetSocketAddress rmAddress) {
+    super(ResourceMgrDelegate.class.getName());
+    this.rmAddress = rmAddress;
+    if (rmAddress == null) {
+      client = YarnClient.createYarnClient();
+    } else {
+      client = YarnClient.createYarnClient(rmAddress);
+    }
+  @Override
+  protected void serviceInit(Configuration conf) throws Exception {
+    if (rmAddress == null) {
+      this.rmAddress = conf.getSocketAddr(YarnConfiguration.RM_ADDRESS,
+          YarnConfiguration.DEFAULT_RM_ADDRESS,
+          YarnConfiguration.DEFAULT_RM_PORT);
+    }
+    client.init(conf);
+    super.serviceInit(conf);
+  }
+
+  @Override
+  protected void serviceStart() throws Exception {
+    client.start();
+    super.serviceStart();
+  }
+
+  @Override
+  protected void serviceStop() throws Exception {
+    client.stop();
+    super.serviceStop();
+  }
+
-      return TypeConverter.fromYarnNodes(super.getNodeReports());
+      return TypeConverter.fromYarnNodes(client.getNodeReports());
-      return TypeConverter.fromYarnApps(super.getApplicationList(), this.conf);
+      return TypeConverter.fromYarnApps(client.getApplicationList(), this.conf);
-      YarnClusterMetrics metrics = super.getYarnClusterMetrics();
+      YarnClusterMetrics metrics = client.getYarnClusterMetrics();
-        super.getRMDelegationToken(renewer), rmAddress);
+          client.getRMDelegationToken(renewer), rmAddress);
-      this.application = super.getNewApplication();
+      this.application = client.getNewApplication();
-          super.getQueueInfo(queueName);
+          client.getQueueInfo(queueName);
-      return TypeConverter.fromYarnQueueUserAclsInfo(super
+      return TypeConverter.fromYarnQueueUserAclsInfo(client
-      return TypeConverter.fromYarnQueueInfo(super.getAllQueues(), this.conf);
+      return TypeConverter.fromYarnQueueInfo(client.getAllQueues(), this.conf);
-      return TypeConverter.fromYarnQueueInfo(super.getRootQueueInfos(),
+      return TypeConverter.fromYarnQueueInfo(client.getRootQueueInfos(),
-      return TypeConverter.fromYarnQueueInfo(super.getChildQueueInfos(parent),
+      return TypeConverter.fromYarnQueueInfo(client.getChildQueueInfos(parent),
+
+  @Override
+  public GetNewApplicationResponse getNewApplication() throws YarnException,
+      IOException {
+    return client.getNewApplication();
+  }
+
+  @Override
+  public ApplicationId
+      submitApplication(ApplicationSubmissionContext appContext)
+          throws YarnException, IOException {
+    return client.submitApplication(appContext);
+  }
+
+  @Override
+  public void killApplication(ApplicationId applicationId)
+      throws YarnException, IOException {
+    client.killApplication(applicationId);
+  }
+
+  @Override
+  public ApplicationReport getApplicationReport(ApplicationId appId)
+      throws YarnException, IOException {
+    return client.getApplicationReport(appId);
+  }
+
+  @Override
+  public List<ApplicationReport> getApplicationList() throws YarnException,
+      IOException {
+    return client.getApplicationList();
+  }
+
+  @Override
+  public YarnClusterMetrics getYarnClusterMetrics() throws YarnException,
+      IOException {
+    return client.getYarnClusterMetrics();
+  }
+
+  @Override
+  public List<NodeReport> getNodeReports() throws YarnException, IOException {
+    return client.getNodeReports();
+  }
+
+  @Override
+  public org.apache.hadoop.yarn.api.records.Token getRMDelegationToken(
+      Text renewer) throws YarnException, IOException {
+    return client.getRMDelegationToken(renewer);
+  }
+
+  @Override
+  public org.apache.hadoop.yarn.api.records.QueueInfo getQueueInfo(
+      String queueName) throws YarnException, IOException {
+    return client.getQueueInfo(queueName);
+  }
+
+  @Override
+  public List<org.apache.hadoop.yarn.api.records.QueueInfo> getAllQueues()
+      throws YarnException, IOException {
+    return client.getAllQueues();
+  }
+
+  @Override
+  public List<org.apache.hadoop.yarn.api.records.QueueInfo> getRootQueueInfos()
+      throws YarnException, IOException {
+    return client.getRootQueueInfos();
+  }
+
+  @Override
+  public List<org.apache.hadoop.yarn.api.records.QueueInfo> getChildQueueInfos(
+      String parent) throws YarnException, IOException {
+    return client.getChildQueueInfos(parent);
+  }
+
+  @Override
+  public List<QueueUserACLInfo> getQueueAclsInfo() throws YarnException,
+      IOException {
+    return client.getQueueAclsInfo();
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 MOV31 MOV31 MOV31 MOV31 MOV31 MOV31 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 UPD43 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 UPD42 INS78 INS78 INS83 INS43 INS59 INS83 INS43 INS59 MOV29 INS83 INS42 INS44 INS8 INS29 INS44 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS43 INS8 INS78 INS83 INS39 INS42 INS43 INS8 MOV5 UPD42 MOV43 MOV43 MOV5 UPD42 MOV43 MOV43 MOV79 MOV43 UPD42 MOV44 MOV43 MOV43 MOV5 UPD42 MOV43 MOV43 UPD42 INS5 UPD42 MOV43 MOV43 MOV5 UPD42 MOV44 MOV43 MOV43 INS78 INS83 INS43 INS42 INS43 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS43 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS43 INS43 INS8 INS78 INS83 INS74 INS42 INS43 INS43 INS8 INS78 INS83 INS43 INS42 INS43 INS43 INS8 INS78 INS83 INS74 INS42 INS43 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS43 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS43 INS43 INS8 INS78 INS83 INS74 INS42 INS43 INS43 INS8 INS78 INS83 INS74 INS42 INS43 INS43 INS8 INS78 INS83 INS74 INS42 INS44 INS43 INS43 INS8 INS78 INS83 INS74 INS42 INS43 INS43 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS17 INS65 INS65 INS65 INS43 INS42 INS21 INS25 INS42 INS43 INS42 INS42 INS25 INS21 INS21 INS42 INS42 INS21 INS21 INS42 INS42 INS21 INS21 MOV43 INS43 INS85 INS42 INS42 INS42 INS42 INS41 INS42 INS42 INS43 INS42 INS42 INS42 INS41 INS42 INS43 INS42 INS42 INS42 INS21 INS42 INS42 INS43 INS42 INS42 INS42 INS41 INS42 INS43 INS43 INS42 INS42 INS41 INS42 INS42 INS42 INS42 INS41 INS42 INS43 INS43 INS42 INS42 INS41 INS42 INS40 INS43 INS42 INS42 INS42 INS41 INS42 INS40 INS43 INS42 INS42 INS42 INS41 INS42 INS43 INS43 INS42 INS42 INS41 INS42 INS43 INS43 INS42 INS42 INS41 INS42 INS43 INS43 INS43 INS42 INS42 INS42 INS41 INS42 INS43 INS43 INS42 INS42 INS41 UPD66 INS42 INS42 INS33 INS66 INS65 INS66 INS42 INS66 INS42 INS66 INS42 INS32 INS7 INS27 INS8 INS8 INS42 INS27 INS8 INS32 INS48 INS32 INS48 INS32 INS48 MOV42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS40 INS32 INS42 INS40 INS32 INS42 INS40 INS42 INS32 INS42 INS42 INS32 INS42 INS57 INS42 INS22 INS42 INS42 INS33 INS21 INS21 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS52 INS42 INS7 INS7 INS7 INS42 INS42 INS32 INS42 INS32 INS22 INS32 UPD42 INS42 INS32 UPD42 INS32 MOV22 INS32 INS42 UPD42 INS32 INS42 INS32 INS32 UPD42 INS32 INS32 MOV22 UPD42 INS32 UPD42 INS32 INS22 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS40 INS40 INS40 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV52 MOV42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 DEL42 DEL42 DEL42 DEL48 DEL42 DEL48 DEL42 DEL48 DEL42 DEL48 DEL42 DEL48 DEL42 DEL42 DEL48 DEL42 DEL42 DEL48 DEL42 DEL48 DEL42 DEL48 DEL42 DEL48