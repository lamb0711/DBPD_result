HDFS-10694. processReport() should print blockReportId in each log message. Contributed by Yuanbo Liu.
+    String strBlockReportId =
+        context != null ? Long.toHexString(context.getReportId()) : "";
-        blockLog.info("BLOCK* processReport: "
+        blockLog.info("BLOCK* processReport 0x{}: "
-            + " because namenode still in startup phase", nodeID);
+            + " because namenode still in startup phase",
+            strBlockReportId, nodeID);
-        LOG.info("Processing first storage report for " +
-            storageInfo.getStorageID() + " from datanode " +
+        blockLog.info("BLOCK* processReport 0x{}: Processing first "
+            + "storage report for {} from datanode {}",
+            strBlockReportId,
+            storageInfo.getStorageID(),
-        invalidatedBlocks = processReport(storageInfo, newReport,
-            context != null ? context.isSorted() : false);
+        invalidatedBlocks = processReport(storageInfo, newReport, context);
-      blockLog.debug("BLOCK* processReport: {} on node {} size {} does not " +
-          "belong to any file", b, node, b.getNumBytes());
+      blockLog.debug("BLOCK* processReport 0x{}: {} on node {} size {} does not"
+          + " belong to any file", strBlockReportId, b, node, b.getNumBytes());
-    blockLog.info("BLOCK* processReport: from storage {} node {}, " +
+    blockLog.info("BLOCK* processReport 0x{}: from storage {} node {}, " +
-        "invalidatedBlocks: {}", storage.getStorageID(), nodeID,
-        newReport.getNumberOfBlocks(),
+        "invalidatedBlocks: {}", strBlockReportId, storage.getStorageID(),
+        nodeID, newReport.getNumberOfBlocks(),
-      final BlockListAsLongs report, final boolean sorted) throws IOException {
+      final BlockListAsLongs report,
+      BlockReportContext context) throws IOException {
+    boolean sorted = false;
+    String strBlockReportId = "";
+    if (context != null) {
+      sorted = context.isSorted();
+      strBlockReportId = Long.toHexString(context.getReportId());
+    }
+
-      blockLog.warn("BLOCK* processReport: Report from the DataNode ({}) is "
-                    + "unsorted. This will cause overhead on the NameNode "
+      blockLog.warn("BLOCK* processReport 0x{}: Report from the DataNode ({}) "
+                    + "is unsorted. This will cause overhead on the NameNode "
+                    strBlockReportId,
-      blockLog.info("BLOCK* processReport: logged info for {} of {} " +
-          "reported.", maxNumBlocksToLog, numBlocksLogged);
+      blockLog.info("BLOCK* processReport 0x{}: logged info for {} of {} " +
+          "reported.", strBlockReportId, maxNumBlocksToLog, numBlocksLogged);

INS60 INS43 INS42 INS60 INS60 INS25 INS43 INS59 INS42 INS39 INS59 INS43 INS59 MOV27 INS8 INS42 INS42 INS16 INS42 INS42 INS9 INS42 INS42 INS45 INS21 INS21 INS27 INS32 INS45 UPD45 INS7 INS7 INS42 INS33 INS42 INS42 INS32 INS42 INS42 MOV32 INS42 INS32 INS42 INS42 INS42 INS42 UPD45 UPD45 INS42 INS42 INS32 UPD45 UPD45 UPD45 INS42 UPD42 INS42 MOV32 MOV32 INS42 INS42 UPD45 UPD45 UPD45 INS42 DEL9 DEL16 DEL83 DEL39 DEL42