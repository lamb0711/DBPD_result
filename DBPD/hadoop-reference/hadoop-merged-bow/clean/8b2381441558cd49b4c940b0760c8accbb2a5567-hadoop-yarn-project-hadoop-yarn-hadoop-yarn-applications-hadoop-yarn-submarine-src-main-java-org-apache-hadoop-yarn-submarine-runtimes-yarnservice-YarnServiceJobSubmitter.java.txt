YARN-8960. [Submarine] Can't get submarine service status using the command of "yarn app -status" under security environment. (Zac Zhou via wangda)

Change-Id: I21b1addc9c32817650ea744a8f2e6b5602f2f4d4

+import org.apache.commons.lang3.StringUtils;
+import org.apache.hadoop.fs.permission.FsPermission;
+import org.apache.hadoop.yarn.service.api.records.KerberosPrincipal;
+    Path uploadedFilePath = uploadToRemoteFile(stagingDir, fileToUpload);
+    locateRemoteFileToContainerWorkDir(destFilename, comp, uploadedFilePath);
+  }
+
+  private void locateRemoteFileToContainerWorkDir(String destFilename,
+      Component comp, Path uploadedFilePath) throws IOException {
+    FileStatus fileStatus = fs.getFileStatus(uploadedFilePath);
+    LOG.info("Uploaded file path = " + fileStatus.getPath());
+
+    // Set it to component's files list
+    comp.getConfiguration().getFiles().add(new ConfigFile().srcFile(
+        fileStatus.getPath().toUri().toString()).destFile(destFilename)
+        .type(ConfigFile.TypeEnum.STATIC));
+  }
+
+  private Path uploadToRemoteFile(Path stagingDir, String fileToUpload) throws
+      IOException {
+    FileSystem fs = FileSystem.get(clientContext.getYarnConfig());
+    return uploadedFilePath;
+  }
-    FileStatus fileStatus = fs.getFileStatus(uploadedFilePath);
-    LOG.info("Uploaded file path = " + fileStatus.getPath());
-
-    // Set it to component's files list
-    comp.getConfiguration().getFiles().add(new ConfigFile().srcFile(
-        fileStatus.getPath().toUri().toString()).destFile(destFilename)
-        .type(ConfigFile.TypeEnum.STATIC));
+  private void setPermission(Path destPath, FsPermission permission) throws
+      IOException {
+    FileSystem fs = FileSystem.get(clientContext.getYarnConfig());
+    fs.setPermission(destPath, new FsPermission(permission));
+    handleKerberosPrincipal(parameters);
+  private void handleKerberosPrincipal(RunJobParameters parameters) throws
+      IOException {
+    if(StringUtils.isNotBlank(parameters.getKeytab()) && StringUtils
+        .isNotBlank(parameters.getPrincipal())) {
+      String keytab = parameters.getKeytab();
+      String principal = parameters.getPrincipal();
+      if(parameters.isDistributeKeytab()) {
+        Path stagingDir =
+            clientContext.getRemoteDirectoryManager().getJobStagingArea(
+                parameters.getName(), true);
+        Path remoteKeytabPath = uploadToRemoteFile(stagingDir, keytab);
+        //only the owner has read access
+        setPermission(remoteKeytabPath,
+            FsPermission.createImmutable((short)Integer.parseInt("400", 8)));
+        serviceSpec.setKerberosPrincipal(new KerberosPrincipal().keytab(
+            remoteKeytabPath.toString()).principalName(principal));
+      } else {
+        if(!keytab.startsWith("file")) {
+          keytab = "file://" + keytab;
+        }
+        serviceSpec.setKerberosPrincipal(new KerberosPrincipal().keytab(
+            keytab).principalName(principal));
+      }
+    }
+  }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS83 INS39 INS42 MOV44 MOV44 INS44 INS43 INS8 INS43 UPD42 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS21 INS43 INS42 INS42 INS60 MOV60 MOV21 MOV21 INS42 INS41 INS43 INS42 INS43 INS42 INS42 INS60 INS21 INS21 INS43 INS42 INS42 INS25 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS42 INS43 INS59 INS42 INS42 INS42 INS43 INS59 INS32 INS32 INS42 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS60 INS60 INS25 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS32 INS8 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS60 INS60 INS21 INS21 INS25 INS21 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS32 INS32 INS38 INS8 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS32 INS32 INS42 INS32 INS9 INS42 INS42 INS42 INS42 INS42 INS11 INS32 INS42 INS42 INS42 INS42 INS45 INS7 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS39 INS32 INS14 INS42 INS32 INS42 INS27 INS14 INS42 INS42 INS42 INS42 INS45 INS34 INS43 INS42 INS42 INS45 INS42 INS43 INS42 INS42 DEL39