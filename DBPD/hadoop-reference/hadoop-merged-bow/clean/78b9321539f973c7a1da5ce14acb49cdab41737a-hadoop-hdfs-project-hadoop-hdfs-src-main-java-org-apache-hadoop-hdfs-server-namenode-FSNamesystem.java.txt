HDFS-6119. FSNamesystem code cleanup. Contributed by Suresh Srinivas.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1582073 13f79535-47bb-0310-9956-ffa450edef68

-          + DFS_NAMENODE_NAME_DIR_KEY + ") configured. Beware of dataloss"
+          + DFS_NAMENODE_NAME_DIR_KEY + ") configured. Beware of data loss"
-          + DFS_NAMENODE_EDITS_DIR_KEY + ") configured. Beware of dataloss"
+          + DFS_NAMENODE_EDITS_DIR_KEY + ") configured. Beware of data loss"
-   * @param haContext 
-   * @throws IOException
-   * @throws IOException
-   * @throws InterruptedException
-   * @param conf
+   * @param conf configuration
-   * Moves all the blocks from srcs and appends them to trg
-   * To avoid rollbacks we will verify validitity of ALL of the args
+   * Moves all the blocks from {@code srcs} and appends them to {@code target}
+   * To avoid rollbacks we will verify validity of ALL of the args
-   * @param target
-   * @param srcs
+   * @param target target file path to concatenate into
+   * @param srcs files that are concatenated
-    // Either there is no previous request in progres or it has failed
+    // Either there is no previous request in progress or it has failed
-        throw new HadoopIllegalArgumentException("concat: the soruce file "
+        throw new HadoopIllegalArgumentException("concat: the source file "
-        throw new HadoopIllegalArgumentException("concat: the soruce file "
+        throw new HadoopIllegalArgumentException("concat: the source file "
-   * The access time is precise upto an hour. The transaction, if needed, is
+   * The access time is precise up to an hour. The transaction, if needed, is
-   * {@link ClientProtocol#create()}, except it returns valid file status upon
+   * {@link ClientProtocol#create}, except it returns valid file status upon
-   * 
-   * For retryCache handling details see -
-   * {@link #getFileStatus(boolean, CacheEntryWithPayload)}
-   * 
-   * call using {@link NameNode#addBlock()}.
+   * call using {@link ClientProtocol#addBlock}.
-   * {@link ClientProtocol#create()}
+   * {@link ClientProtocol#create}
-   * allocates a new block with the next call using {@link NameNode#addBlock()}.
+   * allocates a new block with the next call using
+   * {@link ClientProtocol#addBlock}.
-  /** @see NameNode#getAdditionalDatanode(String, ExtendedBlock, DatanodeInfo[], DatanodeInfo[], int, String) */
+  /** @see ClientProtocol#getAdditionalDatanode */
-   * @param inodesInPath representing each of the components of src. 
-   *                     The last INode is the INode for the file.
+   * @param inodesInPath representing each of the components of src.
+   *                     The last INode is the INode for {@code src} file.
+   * @param newBlock newly allocated block to be save
+   * @param targets target datanodes where replicas of the new block is placed
-   * {@link FSPermissionChecker#checkPermission()}.
+   * {@link FSPermissionChecker#checkPermission}.
-   * {@link FSPermissionChecker#checkPermission()}.
+   * {@link FSPermissionChecker#checkPermission}.
-  /** @see #updatePipeline(String, ExtendedBlock, ExtendedBlock, DatanodeID[]) */
+  /**
+   * @see #updatePipeline(String,  ExtendedBlock, ExtendedBlock, DatanodeID[], String[])
+   */
-   * @param startBlockAfter Support for continuation; the set of files we return
-   *  back is ordered by blockid; startBlockAfter tells where to start from
+   * @param cookieTab Support for continuation; cookieTab  tells where
+   *                  to start from
-   * @throws AccessControlException
-   * @param renewer
+   * @param renewer Renewer information
-   * @param token
+   * @param token delegation token
-   * @param token
+   * @param token delegation token that needs to be canceled
-   * key and value is a map of decomisioning node attribute keys to its values
+   * key and value is a map of decommissioning node attribute keys to its
+   * values
-  /** Allow snapshot on a directroy. */
+  /** Allow snapshot on a directory. */
-   * @param startTime
+   * @param startTime start time of the rolling upgrade
-    // in non-HA setup, we do an extra ckpt to generate a rollback image
+    // in non-HA setup, we do an extra checkpoint to generate a rollback image

INS65 INS65 INS66 UPD66 INS65 INS66 INS65 UPD66 INS66 INS66 UPD66 UPD66 INS67 UPD66 UPD66 INS65 INS66 INS42 INS66 INS42 INS66 UPD42 UPD66 UPD66 INS66 INS66 INS66 UPD66 INS66 UPD66 INS66 INS66 INS66 INS67 INS67 INS67 INS67 INS42 INS42 INS66 INS67 INS67 INS69 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS5 INS43 INS85 UPD45 UPD45 INS42 UPD45 UPD45 DEL42 DEL66 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL42 DEL68 DEL66 DEL42 DEL39 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL42 DEL42 DEL68 DEL42 DEL42 DEL68 DEL42 DEL42 DEL68 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL42 DEL43 DEL85 DEL5 DEL69 DEL42 DEL43 DEL85 DEL5 DEL69 DEL39 DEL69 DEL42 DEL43 DEL69 DEL68 DEL42 DEL42 DEL68 DEL42 DEL42 DEL68 DEL66 DEL42 DEL65