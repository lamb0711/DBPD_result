Merge r1555021 through r1557038 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1557039 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.fs.CommonConfigurationKeys;
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.metrics2.lib.MutableQuantiles;
+  final boolean rpcQuantileEnable;
-  RpcMetrics(Server server) {
+  RpcMetrics(Server server, Configuration conf) {
-    name = "RpcActivityForPort"+ port;
+    name = "RpcActivityForPort" + port;
-    LOG.debug("Initialized "+ registry);
+    int[] intervals = conf.getInts(
+        CommonConfigurationKeys.RPC_METRICS_PERCENTILES_INTERVALS_KEY);
+    rpcQuantileEnable = (intervals.length > 0) && conf.getBoolean(
+        CommonConfigurationKeys.RPC_METRICS_QUANTILE_ENABLE, false);
+    if (rpcQuantileEnable) {
+      rpcQueueTimeMillisQuantiles =
+          new MutableQuantiles[intervals.length];
+      rpcProcessingTimeMillisQuantiles =
+          new MutableQuantiles[intervals.length];
+      for (int i = 0; i < intervals.length; i++) {
+        int interval = intervals[i];
+        rpcQueueTimeMillisQuantiles[i] = registry.newQuantiles("rpcQueueTime"
+            + interval + "s", "rpc queue time in milli second", "ops",
+            "latency", interval);
+        rpcProcessingTimeMillisQuantiles[i] = registry.newQuantiles(
+            "rpcProcessingTime" + interval + "s",
+            "rpc processing time in milli second", "ops", "latency", interval);
+      }
+    }
+    LOG.debug("Initialized " + registry);
-  public static RpcMetrics create(Server server) {
-    RpcMetrics m = new RpcMetrics(server);
+  public static RpcMetrics create(Server server, Configuration conf) {
+    RpcMetrics m = new RpcMetrics(server, conf);
+  MutableQuantiles[] rpcQueueTimeMillisQuantiles;
+  MutableQuantiles[] rpcProcessingTimeMillisQuantiles;
+    if (rpcQuantileEnable) {
+      for (MutableQuantiles q : rpcQueueTimeMillisQuantiles) {
+        q.add(qTime);
+      }
+    }
+    if (rpcQuantileEnable) {
+      for (MutableQuantiles q : rpcProcessingTimeMillisQuantiles) {
+        q.add(processingTime);
+      }
+    }

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS23 INS83 INS39 INS59 INS44 INS44 INS5 INS59 INS5 INS59 INS8 INS8 INS42 INS43 INS42 INS60 INS21 INS25 INS43 INS42 INS43 INS85 INS42 INS43 INS85 INS42 MOV21 INS25 MOV21 INS25 INS42 INS5 INS59 INS7 INS42 INS8 INS42 MOV43 INS42 INS42 INS42 INS8 INS42 INS8 INS39 INS85 INS42 INS32 INS42 INS27 INS21 INS21 INS24 INS70 INS70 INS42 INS42 INS40 INS36 INS32 INS7 INS7 INS58 INS27 INS37 INS8 MOV43 INS42 INS44 INS42 INS8 INS44 INS42 INS8 INS27 INS42 INS42 INS40 INS9 INS42 INS3 INS42 INS3 INS39 INS59 INS42 INS40 INS42 INS60 INS21 INS21 INS43 INS42 INS21 INS43 INS42 INS21 INS40 INS34 INS5 INS40 INS5 INS40 INS42 INS34 INS39 INS59 INS7 INS7 INS42 INS32 INS42 INS32 INS43 INS85 INS43 INS85 INS42 INS2 INS2 INS32 INS2 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS45 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS27 INS45 INS45 INS45 INS42 INS45 INS42 INS45 INS45 INS42 INS45 DEL8 DEL8