HADOOP-16430. S3AFilesystem.delete to incrementally update s3guard with deletions

Contributed by Steve Loughran.

This overlaps the scanning for directory entries with batched calls to S3 DELETE and updates of the S3Guard tables.
It also uses S3Guard to list the files to delete, so find newly created files even when S3 listings are not use consistent.

For path which the client considers S3Guard to be authoritative, we also do a recursive LIST of the store and delete files; this is to find unindexed files and do guarantee that the delete(path, true) call really does delete everything underneath.

Change-Id: Ice2f6e940c506e0b3a78fa534a99721b1698708e

+import org.apache.hadoop.fs.s3a.Retries;
+   * @param operationState (nullable) operational state for a bulk update
-  void delete(Path path)
+  void delete(Path path,
+      @Nullable BulkOperationState operationState)
-   * {@link MetadataStore#delete(Path)}. It is currently
+   * {@link MetadataStore#delete(Path, BulkOperationState)}. It is currently
+   * @param operationState (nullable) operational state for a bulk update
-  void deleteSubtree(Path path)
+  @Retries.RetryTranslated
+  void deleteSubtree(Path path,
+      @Nullable BulkOperationState operationState)
+      throws IOException;
+
+  /**
+   * Delete the paths.
+   * There's no attempt to order the paths: they are
+   * deleted in the order passed in.
+   * @param paths paths to delete.
+   * @param operationState Nullable operation state
+   * @throws IOException failure
+   */
+
+  @RetryTranslated
+  void deletePaths(Collection<Path> paths,
+      @Nullable BulkOperationState operationState)
+  @Retries.RetryTranslated

INS26 INS40 INS31 INS44 INS78 INS44 INS29 INS78 INS39 INS42 INS44 INS44 INS43 INS78 INS65 INS78 INS43 INS42 INS65 INS40 INS78 INS43 INS42 INS65 INS65 INS65 INS65 INS42 INS74 INS42 INS78 INS43 INS42 INS42 INS40 INS42 INS66 INS42 INS42 INS42 INS66 INS42 INS42 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS43 INS43 INS42 INS42 INS42 INS42 INS69 INS43 INS42