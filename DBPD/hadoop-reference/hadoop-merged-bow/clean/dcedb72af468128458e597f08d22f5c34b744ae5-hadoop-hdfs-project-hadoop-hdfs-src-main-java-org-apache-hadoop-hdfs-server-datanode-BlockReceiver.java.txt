Revert "HADOOP-10930. Refactor: Wrap Datanode IO related operations. Contributed by Xiaoyu Yao."

This reverts commit aeecfa24f4fb6af289920cbf8830c394e66bd78e.

+import java.io.FileDescriptor;
+import java.io.FileOutputStream;
+import java.io.OutputStream;
+import org.apache.hadoop.io.nativeio.NativeIO;
+  private OutputStream out = null; // to block file at local disk
+  private FileDescriptor outFd;
-      streams = replicaInfo.createStreams(isCreate, requestedChecksum,
-          datanodeSlowLogThresholdMs);
+      streams = replicaInfo.createStreams(isCreate, requestedChecksum);
+      this.out = streams.getDataOut();
+      if (out instanceof FileOutputStream) {
+        this.outFd = ((FileOutputStream)out).getFD();
+      } else {
+        LOG.warn("Could not get file descriptor for outputstream of class " +
+            out.getClass());
+      }
-    if (syncOnClose && (streams.getDataOut() != null || checksumOut != null)) {
+    if (syncOnClose && (out != null || checksumOut != null)) {
-      if (streams.getDataOut() != null) {
+      if (out != null) {
-        streams.flushDataOut();
+        out.flush();
-        streams.closeDataStream();
+        out.close();
+        out = null;
-      streams.close();
+      IOUtils.closeStream(out);
-    if (streams.getDataOut() != null) {
+    if (out != null) {
-      streams.flushDataOut();
+      out.flush();
-    if (checksumOut != null || streams.getDataOut() != null) {
+    if (checksumOut != null || out != null) {
-        datanode.metrics.incrFsyncCount();
+    	  datanode.metrics.incrFsyncCount();      
-          long duration = streams.writeToDisk(dataBuf.array(),
-              startByteToDisk, numBytesToDisk);
-
+          long begin = Time.monotonicNow();
+          out.write(dataBuf.array(), startByteToDisk, numBytesToDisk);
+          long duration = Time.monotonicNow() - begin;
+          if (duration > datanodeSlowLogThresholdMs) {
+            LOG.warn("Slow BlockReceiver write data to disk cost:" + duration
+                + "ms (threshold=" + datanodeSlowLogThresholdMs + "ms)");
+          }
-      if (streams.getOutFd() != null &&
+      if (outFd != null &&
-                block, streams, lastCacheManagementOffset,
+                block, outFd, lastCacheManagementOffset,
-            streams.syncFileRangeIfPossible(lastCacheManagementOffset,
+            NativeIO.POSIX.syncFileRangeIfPossible(outFd,
+                lastCacheManagementOffset,
-          streams.dropCacheBehindWrites(block.getBlockName(), 0, dropPos,
-              POSIX_FADV_DONTNEED);
+          NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(
+              block.getBlockName(), outFd, 0, dropPos, POSIX_FADV_DONTNEED);
-              IOUtils.closeStream(streams.getDataOut());
+              IOUtils.closeStream(out);
-    if (streams.getDataOut() != null) {
-      streams.flushDataOut();
+    if (out != null) {
+     out.flush();
-      instr.readDataFully(buf, 0, sizePartialChunk);
+      IOUtils.readFully(instr.getDataIn(), buf, 0, sizePartialChunk);
-      instr.readChecksumFully(crcbuf, 0, crcbuf.length);
+      IOUtils.readFully(instr.getChecksumIn(), crcbuf, 0, crcbuf.length);

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS23 INS83 INS43 INS59 INS83 INS43 INS59 INS42 INS42 INS33 INS42 INS42 INS21 INS25 INS42 INS42 INS7 INS62 INS8 INS8 INS42 INS22 MOV32 INS42 INS43 INS21 INS21 INS42 INS21 UPD42 UPD42 INS42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS32 INS42 INS42 INS32 INS52 INS42 INS42 INS42 INS7 INS32 INS42 INS7 INS42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 INS22 INS32 INS42 INS42 INS27 UPD42 UPD42 UPD42 UPD42 INS42 INS33 INS60 INS21 INS60 INS25 INS52 INS42 INS36 INS42 INS45 INS32 MOV39 INS59 INS32 INS39 INS59 INS27 INS8 INS11 INS42 INS42 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 MOV32 MOV42 MOV42 INS42 INS27 INS42 INS42 INS21 INS32 UPD42 INS42 INS43 INS42 INS42 INS42 INS32 INS42 INS32 INS40 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS27 UPD42 INS40 UPD42 UPD42 INS45 INS42 INS45 INS42 INS45 UPD42 MOV42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32