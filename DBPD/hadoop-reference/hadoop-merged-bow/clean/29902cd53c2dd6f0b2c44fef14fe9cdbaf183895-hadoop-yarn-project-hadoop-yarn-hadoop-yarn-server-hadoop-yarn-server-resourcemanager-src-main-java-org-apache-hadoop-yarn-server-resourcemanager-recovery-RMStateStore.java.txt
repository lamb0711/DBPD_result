YARN-638. Modified ResourceManager to restore RMDelegationTokens after restarting. Contributed by Jian He.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1487720 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashSet;
+import java.util.Set;
+import org.apache.hadoop.security.token.delegation.DelegationKey;
+import org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier;
-  
+
-  
+
+  public static class RMDTSecretManagerState {
+    // DTIdentifier -> renewDate
+    Map<RMDelegationTokenIdentifier, Long> delegationTokenState =
+        new HashMap<RMDelegationTokenIdentifier, Long>();
+
+    Set<DelegationKey> masterKeyState =
+        new HashSet<DelegationKey>();
+
+    int dtSequenceNumber = 0;
+
+    public Map<RMDelegationTokenIdentifier, Long> getTokenState() {
+      return delegationTokenState;
+    }
+
+    public Set<DelegationKey> getMasterKeyState() {
+      return masterKeyState;
+    }
+
+    public int getDTSequenceNumber() {
+      return dtSequenceNumber;
+    }
+  }
+
-    Map<ApplicationId, ApplicationState> appState = 
-                                new HashMap<ApplicationId, ApplicationState>();
-    
+    Map<ApplicationId, ApplicationState> appState =
+        new HashMap<ApplicationId, ApplicationState>();
+
+    RMDTSecretManagerState rmSecretManagerState = new RMDTSecretManagerState();
+
+
+    public RMDTSecretManagerState getRMDTSecretManagerState() {
+      return rmSecretManagerState;
+    }
-  
-  
+
+
+  /**
+   * RMDTSecretManager call this to store the state of a delegation token
+   * and sequence number
+   */
+  public synchronized void storeRMDelegationTokenAndSequenceNumber(
+      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate,
+      int latestSequenceNumber) throws Exception {
+    storeRMDelegationTokenAndSequenceNumberState(rmDTIdentifier, renewDate,
+      latestSequenceNumber);
+  }
+
+  /**
+   * Blocking API
+   * Derived classes must implement this method to store the state of
+   * RMDelegationToken and sequence number
+   */
+  protected abstract void storeRMDelegationTokenAndSequenceNumberState(
+      RMDelegationTokenIdentifier rmDTIdentifier, Long renewDate,
+      int latestSequenceNumber) throws Exception;
+
+  /**
+   * RMDTSecretManager call this to remove the state of a delegation token
+   */
+  public synchronized void removeRMDelegationToken(
+      RMDelegationTokenIdentifier rmDTIdentifier, int sequenceNumber)
+      throws Exception {
+    removeRMDelegationTokenState(rmDTIdentifier);
+  }
+
+  /**
+   * Blocking API
+   * Derived classes must implement this method to remove the state of RMDelegationToken
+   */
+  protected abstract void removeRMDelegationTokenState(
+      RMDelegationTokenIdentifier rmDTIdentifier) throws Exception;
+
+  /**
+   * RMDTSecretManager call this to store the state of a master key
+   */
+  public synchronized void storeRMDTMasterKey(DelegationKey delegationKey)
+      throws Exception {
+    storeRMDTMasterKeyState(delegationKey);
+  }
+
+  /**
+   * Blocking API
+   * Derived classes must implement this method to store the state of
+   * DelegationToken Master Key
+   */
+  protected abstract void storeRMDTMasterKeyState(DelegationKey delegationKey)
+      throws Exception;
+
+  /**
+   * RMDTSecretManager call this to remove the state of a master key
+   */
+  public synchronized void removeRMDTMasterKey(DelegationKey delegationKey)
+      throws Exception {
+    removeRMDTMasterKeyState(delegationKey);
+  }
+
+  /**
+   * Blocking API
+   * Derived classes must implement this method to remove the state of
+   * DelegationToken Master Key
+   */
+  protected abstract void removeRMDTMasterKeyState(DelegationKey delegationKey)
+      throws Exception;
+

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS55 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS83 INS42 INS23 INS23 INS23 INS31 INS31 INS31 INS23 INS31 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS43 INS29 INS83 INS83 INS39 INS42 INS44 INS43 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS43 INS29 INS83 INS83 INS39 INS42 INS44 INS43 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS43 INS74 INS59 INS74 INS59 INS39 INS59 INS83 INS74 INS42 INS8 INS83 INS74 INS42 INS8 INS83 INS39 INS42 INS8 INS43 INS59 INS83 INS43 INS42 INS8 INS65 INS43 INS42 INS43 INS42 INS39 INS42 INS42 INS21 INS65 INS43 INS42 INS43 INS42 INS39 INS42 INS42 INS65 INS43 INS42 INS39 INS42 INS42 INS21 INS65 INS43 INS42 INS42 INS65 INS43 INS42 INS42 INS21 INS65 INS43 INS42 INS42 INS65 INS43 INS42 INS42 INS21 INS65 INS43 INS42 INS42 INS43 INS43 INS43 INS42 INS14 INS43 INS43 INS42 INS14 INS42 INS34 INS43 INS43 INS43 INS41 INS43 INS43 INS41 INS41 INS42 INS42 INS14 INS42 INS41 INS66 INS66 INS42 INS42 INS32 INS66 INS66 INS66 INS42 INS42 INS66 INS42 INS32 INS66 INS66 INS42 INS66 INS42 INS32 INS66 INS66 INS66 INS42 INS66 INS42 INS32 INS66 INS66 INS66 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42