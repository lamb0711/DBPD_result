YARN-6256. Add FROM_ID info key for timeline entities in reader response (Rohith Sharma K S via Varun Saxena)

+import org.apache.hadoop.yarn.server.timelineservice.reader.TimelineReaderUtils;
-
-      FlowRunRowKey flowRunRowKey =
-          new FlowRunRowKey(context.getClusterId(), context.getUserId(),
-              context.getFlowName(), Long.parseLong(getFilters().getFromId()));
-
+      FlowRunRowKey flowRunRowKey = null;
+      try {
+        flowRunRowKey =
+            FlowRunRowKey.parseRowKeyFromString(getFilters().getFromId());
+      } catch (IllegalArgumentException e) {
+        throw new BadRequestException("Invalid filter fromid is provided.");
+      }
+      if (!context.getClusterId().equals(flowRunRowKey.getClusterId())) {
+        throw new BadRequestException(
+            "fromid doesn't belong to clusterId=" + context.getClusterId());
+      }
-    TimelineReaderContext context = getContext();
-    flowRun.setUser(context.getUserId());
-    flowRun.setName(context.getFlowName());
-    if (isSingleEntityRead()) {
-      flowRun.setRunId(context.getFlowRunId());
-    } else {
-      FlowRunRowKey rowKey = FlowRunRowKey.parseRowKey(result.getRow());
-      flowRun.setRunId(rowKey.getFlowRunId());
-    }
+    FlowRunRowKey rowKey = FlowRunRowKey.parseRowKey(result.getRow());
+    flowRun.setRunId(rowKey.getFlowRunId());
+    flowRun.setUser(rowKey.getUserId());
+    flowRun.setName(rowKey.getFlowName());
+    flowRun.getInfo().put(TimelineReaderUtils.FROMID_KEY,
+        rowKey.getRowKeyAsString());

INS26 INS40 MOV60 MOV21 MOV21 INS60 INS54 INS25 INS32 INS42 INS40 MOV43 INS59 INS8 INS12 INS38 INS8 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 INS42 INS33 INS21 INS44 INS8 INS32 INS53 INS7 INS43 INS42 INS53 INS32 INS42 INS32 INS14 INS42 MOV32 INS42 INS14 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS43 INS27 UPD42 UPD42 INS43 INS45 INS42 INS45 MOV32 INS42 DEL42 DEL43 DEL42 DEL32 DEL32 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL8 DEL8 DEL25