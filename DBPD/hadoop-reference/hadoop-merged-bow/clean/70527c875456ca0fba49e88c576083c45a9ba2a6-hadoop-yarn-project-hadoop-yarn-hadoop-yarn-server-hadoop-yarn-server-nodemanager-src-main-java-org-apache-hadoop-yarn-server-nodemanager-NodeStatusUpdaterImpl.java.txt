merge trunk into HDFS-4949 branch

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1513658 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.LinkedHashMap;
+  public static final String YARN_NODEMANAGER_DURATION_TO_TRACK_STOPPED_CONTAINERS =
+      YarnConfiguration.NM_PREFIX + "duration-to-track-stopped-containers";
+
+  // It will be used to track recently stopped containers on node manager.
+  private final Map<ContainerId, Long> recentlyStoppedContainers;
+  // Duration for which to track recently stopped container.
+  private long durationToTrackStoppedContainers;
+    this.recentlyStoppedContainers =
+        new LinkedHashMap<ContainerId, Long>();
+    // Default duration to track stopped containers on nodemanager is 10Min.
+    // This should not be assigned very large value as it will remember all the
+    // containers stopped during that time.
+    durationToTrackStoppedContainers =
+        conf.getLong(YARN_NODEMANAGER_DURATION_TO_TRACK_STOPPED_CONTAINERS,
+          600000);
+    if (durationToTrackStoppedContainers < 0) {
+      String message = "Invalid configuration for "
+        + YARN_NODEMANAGER_DURATION_TO_TRACK_STOPPED_CONTAINERS + " default "
+          + "value is 10Min(600000).";
+      LOG.error(message);
+      throw new YarnException(message);
+    }
+    if (LOG.isDebugEnabled()) {
+      LOG.debug(YARN_NODEMANAGER_DURATION_TO_TRACK_STOPPED_CONTAINERS + " :"
+        + durationToTrackStoppedContainers);
+    }
+    super.serviceInit(conf);
-    
-    super.serviceInit(conf);
-
+        // Adding to finished containers cache. Cache will keep it around at
+        // least for #durationToTrackStoppedContainers duration. In the
+        // subsequent call to stop container it will get removed from cache.
+        addStoppedContainersToCache(containerId);
+        
+  public boolean isContainerRecentlyStopped(ContainerId containerId) {
+    synchronized (recentlyStoppedContainers) {
+      return recentlyStoppedContainers.containsKey(containerId);
+    }
+  }
+  
+  @Private
+  @VisibleForTesting
+  public void addStoppedContainersToCache(ContainerId containerId) {
+    synchronized (recentlyStoppedContainers) {
+      removeVeryOldStoppedContainersFromCache();
+      recentlyStoppedContainers.put(containerId,
+        System.currentTimeMillis() + durationToTrackStoppedContainers);
+    }
+  }
+  
+  @Override
+  public void clearFinishedContainersFromCache() {
+    synchronized (recentlyStoppedContainers) {
+      recentlyStoppedContainers.clear();
+    }
+  }
+  
+  @Private
+  @VisibleForTesting
+  public void removeVeryOldStoppedContainersFromCache() {
+    synchronized (recentlyStoppedContainers) {
+      long currentTime = System.currentTimeMillis();
+      Iterator<ContainerId> i =
+          recentlyStoppedContainers.keySet().iterator();
+      while (i.hasNext()) {
+        if (recentlyStoppedContainers.get(i.next()) < currentTime) {
+          i.remove();
+        } else {
+          break;
+        }
+      }
+    }
+  }
+  
+  
+  

INS26 INS40 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS74 INS59 INS83 INS39 INS59 MOV21 INS83 INS39 INS42 INS44 INS8 INS78 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS78 INS83 INS39 INS42 INS8 INS42 INS42 INS27 INS43 INS43 INS43 INS42 INS42 INS21 INS21 INS25 INS25 INS43 INS42 INS51 INS42 INS42 INS43 INS42 INS51 INS42 INS51 INS42 INS42 INS51 INS40 INS45 INS42 INS42 INS42 INS7 INS7 INS27 INS8 INS32 INS8 INS42 INS42 INS8 INS42 INS42 INS8 INS42 INS8 INS42 INS8 INS22 INS14 INS42 INS32 INS42 INS34 INS60 INS21 INS53 INS42 INS42 INS21 INS41 INS21 INS21 INS21 INS60 INS60 INS61 INS52 INS42 INS74 INS42 INS42 INS42 INS34 INS43 INS59 INS32 INS14 INS32 INS32 INS32 INS32 INS32 INS39 INS59 INS74 INS59 INS32 INS8 INS43 INS43 INS43 INS42 INS42 INS27 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS27 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS42 INS42 INS25 INS42 INS42 INS42 INS45 INS42 INS45 INS45 INS42 INS42 INS45 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS27 INS8 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS21 INS10 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42