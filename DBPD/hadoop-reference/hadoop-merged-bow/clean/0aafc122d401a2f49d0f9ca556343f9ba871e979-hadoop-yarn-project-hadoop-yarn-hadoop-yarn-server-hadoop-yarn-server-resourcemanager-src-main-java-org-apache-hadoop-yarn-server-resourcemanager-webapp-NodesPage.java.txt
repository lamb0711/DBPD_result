YARN-2995. Enhance UI to show cluster resource utilization of various container Execution types. (Konstantinos Karanasos via asuresh)

-import static org.apache.hadoop.yarn.webapp.YarnWebParams.NODE_LABEL;
-import static org.apache.hadoop.yarn.webapp.YarnWebParams.NODE_STATE;
-import static org.apache.hadoop.yarn.webapp.view.JQueryUI.DATATABLES;
-import static org.apache.hadoop.yarn.webapp.view.JQueryUI.DATATABLES_ID;
-import static org.apache.hadoop.yarn.webapp.view.JQueryUI.initID;
-import static org.apache.hadoop.yarn.webapp.view.JQueryUI.tableInit;
-
-import java.util.Collection;
-
+import com.google.inject.Inject;
+import org.apache.hadoop.yarn.conf.YarnConfiguration;
-import com.google.inject.Inject;
+import java.util.Collection;
+
+import static org.apache.hadoop.yarn.webapp.YarnWebParams.NODE_LABEL;
+import static org.apache.hadoop.yarn.webapp.YarnWebParams.NODE_STATE;
+import static org.apache.hadoop.yarn.webapp.view.JQueryUI.DATATABLES;
+import static org.apache.hadoop.yarn.webapp.view.JQueryUI.DATATABLES_ID;
+import static org.apache.hadoop.yarn.webapp.view.JQueryUI.initID;
+import static org.apache.hadoop.yarn.webapp.view.JQueryUI.tableInit;
+    private static boolean opportunisticContainersEnabled;
+      this.opportunisticContainersEnabled = YarnConfiguration
+          .isOpportunisticContainerAllocationEnabled(
+              this.rm.getRMContext().getYarnConfiguration());
+
-      TBODY<TABLE<Hamlet>> tbody =
+      Hamlet.TR<Hamlet.THEAD<TABLE<Hamlet>>> trbody =
-              .th(".healthReport", "Health-report")
-              .th(".containers", "Containers")
-              .th(".mem", "Mem Used")
-              .th(".mem", "Mem Avail")
-              .th(".vcores", "VCores Used")
-              .th(".vcores", "VCores Avail")
-              .th(".nodeManagerVersion", "Version")._()._().tbody();
+              .th(".healthReport", "Health-report");
+
+      if (!this.opportunisticContainersEnabled) {
+        trbody.th(".containers", "Containers")
+            .th(".mem", "Mem Used")
+            .th(".mem", "Mem Avail")
+            .th(".vcores", "VCores Used")
+            .th(".vcores", "VCores Avail");
+      } else {
+        trbody.th(".containers", "Running Containers (G)")
+            .th(".mem", "Mem Used (G)")
+            .th(".mem", "Mem Avail (G)")
+            .th(".vcores", "VCores Used (G)")
+            .th(".vcores", "VCores Avail (G)")
+            .th(".containers", "Running Containers (O)")
+            .th(".mem", "Mem Used (O)")
+            .th(".vcores", "VCores Used (O)")
+            .th(".containers", "Queued Containers");
+      }
+
+      TBODY<TABLE<Hamlet>> tbody =
+          trbody.th(".nodeManagerVersion", "Version")._()._().tbody();
+
-            .append("\",\"").append(ni.getNodeManagerVersion())
+            .append("\",\"");
+
+        // If opportunistic containers are enabled, add extra fields.
+        if (this.opportunisticContainersEnabled) {
+          nodeTableData
+              .append(String.valueOf(info.getNumRunningOpportContainers()))
+              .append("\",\"").append("<br title='")
+              .append(String.valueOf(info.getUsedMemoryOpport())).append("'>")
+              .append(StringUtils.byteDesc(info.getUsedMemoryOpport()))
+              .append("\",\"")
+              .append(String.valueOf(info.getUsedVirtualCoresOpport()))
+              .append("\",\"")
+              .append(String.valueOf(info.getNumQueuedContainers()))
+              .append("\",\"");
+        }
+
+        nodeTableData.append(ni.getNodeManagerVersion())

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS40 INS23 INS83 INS83 INS39 INS59 INS42 INS21 INS25 INS60 INS7 INS74 INS38 INS8 INS8 MOV74 INS59 INS22 INS32 INS43 INS74 UPD42 MOV32 INS22 INS21 INS21 INS42 INS32 INS25 INS21 INS52 INS42 INS42 INS42 INS32 INS40 INS43 INS74 INS52 INS42 INS32 INS32 INS32 INS42 MOV32 INS22 INS8 INS32 INS32 INS42 INS40 INS43 INS43 INS32 INS42 INS45 INS45 INS32 INS42 INS45 INS45 INS32 INS42 INS52 INS42 INS21 INS32 INS42 INS45 INS22 INS42 INS42 INS42 INS32 INS42 INS45 INS45 INS32 INS42 INS45 INS45 INS32 INS42 INS32 INS42 INS42 MOV32 INS52 INS42 INS32 INS42 INS45 INS45 INS32 INS42 INS45 INS45 INS42 INS42 INS45 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS45 INS32 INS42 INS45 INS45 INS32 INS42 INS32 INS42 INS42 INS45 INS45 INS32 INS42 INS45 INS45 INS32 INS42 INS45 INS42 INS42 INS32 INS32 INS42 INS45 INS45 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS45 INS45 INS32 INS42 INS45 INS42 INS42 INS32 INS32 INS42 INS45 INS45 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS45 INS45 INS32 INS42 INS45 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS32 INS32 INS42 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL45 DEL32 DEL42 DEL45 DEL45 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL45 DEL32