Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1245834 13f79535-47bb-0310-9956-ffa450edef68

+import java.math.BigInteger;
-  private Integer pid = -1;
+  static private String deadPid = "-1";
+  private String pid = deadPid;
+  static private Pattern numberPattern = Pattern.compile("[1-9][0-9]*");
-  private Map<Integer, ProcessInfo> processTree = new HashMap<Integer, ProcessInfo>();
+  private Map<String, ProcessInfo> processTree = new HashMap<String, ProcessInfo>();
-    if (pid != -1) {
+    if (!pid.equals(deadPid)) {
-      List<Integer> processList = getProcessList();
+      List<String> processList = getProcessList();
-      Map<Integer, ProcessInfo> allProcessInfo = new HashMap<Integer, ProcessInfo>();
+      Map<String, ProcessInfo> allProcessInfo = new HashMap<String, ProcessInfo>();
-      Map<Integer, ProcessInfo> oldProcs = 
-              new HashMap<Integer, ProcessInfo>(processTree);
+      Map<String, ProcessInfo> oldProcs = 
+              new HashMap<String, ProcessInfo>(processTree);
-      for (Integer proc : processList) {
+      for (String proc : processList) {
-      for (Map.Entry<Integer, ProcessInfo> entry : allProcessInfo.entrySet()) {
-        Integer pID = entry.getKey();
-        if (pID != 1) {
+      for (Map.Entry<String, ProcessInfo> entry : allProcessInfo.entrySet()) {
+        String pID = entry.getKey();
+        if (!pID.equals("1")) {
-      for (Map.Entry<Integer, ProcessInfo> procs : processTree.entrySet()) {
+      for (Map.Entry<String, ProcessInfo> procs : processTree.entrySet()) {
-    if (pid == -1) {
+    if (pid.equals(deadPid)) {
-      return isAlive(pid.toString());
+      return isAlive(pid);
-    for (Integer pId : processTree.keySet()) {
-      if (isAlive(pId.toString())) {
+    for (String pId : processTree.keySet()) {
+      if (isAlive(pId)) {
-    Integer pId = Integer.parseInt(pidStr);
-    ProcessInfo pInfo = new ProcessInfo(pId);
+    ProcessInfo pInfo = new ProcessInfo(pidStr);
+    String pgrpId = pInfo.getPgrpId().toString();
-    if (!pInfo.getPgrpId().equals(pId)) {
-      LOG.warn("Unexpected: Process with PID " + pId +
-               " is not a process group leader.");
+    if (!pgrpId.equals(pidStr)) {
+      LOG.warn("Unexpected: Process with PID " + pidStr +
+               " is not a process group leader. pgrpId is: " + pInfo.getPgrpId());
-      LOG.debug(pId + " is a process group leader, as expected.");
+      LOG.debug(pidStr + " is a process group leader, as expected.");
-    if (pid == -1) {
+    if (pid.equals(deadPid)) {
-      "\t|- %d %d %d %d %s %d %d %d %d %s\n";
+      "\t|- %s %s %d %d %s %d %d %d %d %s\n";
-  private static Integer getValidPID(String pid) {
-    Integer retPid = -1;
-    try {
-      retPid = Integer.parseInt(pid);
-      if (retPid <= 0) {
-        retPid = -1;
-      }
-    } catch (NumberFormatException nfe) {
-      retPid = -1;
-    }
-    return retPid;
+  private static String getValidPID(String pid) {
+    if (pid == null) return deadPid;
+    Matcher m = numberPattern.matcher(pid);
+    if (m.matches()) return pid;
+    return deadPid;
-  private List<Integer> getProcessList() {
+  private List<String> getProcessList() {
-    List<Integer> processList = new ArrayList<Integer>();
+    List<String> processList = new ArrayList<String>();
+      Matcher m = numberPattern.matcher(dir);
+      if (!m.matches()) continue;
-        int pd = Integer.parseInt(dir);
-          processList.add(Integer.valueOf(pd));
+          processList.add(dir);
-      } catch (NumberFormatException n) {
-        // skip this directory
-      File pidDir = new File(procfsDir, String.valueOf(pinfo.getPid()));
+      File pidDir = new File(procfsDir, pinfo.getPid());
-        pinfo.updateProcessInfo(m.group(2), Integer.parseInt(m.group(3)),
+        pinfo.updateProcessInfo(m.group(2), m.group(3),
-                Long.parseLong(m.group(7)), Long.parseLong(m.group(8)),
+                Long.parseLong(m.group(7)), new BigInteger(m.group(8)),
-    for (Integer p : processTree.keySet()) {
+    for (String p : processTree.keySet()) {
-    private Integer pid; // process-id
+    private String pid; // process-id
-    private Integer ppid; // parent process-id
+    private String ppid; // parent process-id
-    private Long stime = 0L; // # of jiffies in kernel mode
+    private final BigInteger MAX_LONG = BigInteger.valueOf(Long.MAX_VALUE);
+    private BigInteger stime = new BigInteger("0"); // # of jiffies in kernel mode
-    public ProcessInfo(int pid) {
-      this.pid = Integer.valueOf(pid);
+    public ProcessInfo(String pid) {
+      this.pid = pid;
-    public Integer getPid() {
+    public String getPid() {
-    public Integer getPpid() {
+    public String getPpid() {
-    public Long getStime() {
+    public BigInteger getStime() {
-    public void updateProcessInfo(String name, Integer ppid, Integer pgrpId,
-        Integer sessionId, Long utime, Long stime, Long vmem, Long rssmem) {
+    public void updateProcessInfo(String name, String ppid, Integer pgrpId,
+        Integer sessionId, Long utime, BigInteger stime, Long vmem, Long rssmem) {
-      this.dtime = (oldInfo == null ? this.utime + this.stime
-              : (this.utime + this.stime) - (oldInfo.utime + oldInfo.stime));
+      if (oldInfo == null) {
+        BigInteger sum = this.stime.add(BigInteger.valueOf(this.utime));
+        if (sum.compareTo(MAX_LONG) > 0) {
+          this.dtime = 0L;
+          LOG.warn("Sum of stime (" + this.stime + ") and utime (" + this.utime
+              + ") is greater than " + Long.MAX_VALUE);
+        } else {
+          this.dtime = sum.longValue();
+        }
+        return;
+      }
+      this.dtime = (this.utime - oldInfo.utime +
+          this.stime.subtract(oldInfo.stime).longValue());
-            new FileReader(new File(new File(procfsDir, pid.toString()),
+            new FileReader(new File(new File(procfsDir, pid),

INS26 INS40 INS23 INS23 MOV23 INS83 INS83 INS43 INS59 UPD43 INS83 INS83 INS43 INS59 UPD74 UPD43 UPD74 INS23 INS42 INS42 INS45 UPD42 INS42 INS42 INS42 INS32 UPD43 MOV43 INS60 INS25 UPD45 UPD42 INS25 INS60 INS25 UPD43 UPD43 INS83 INS43 MOV59 INS83 UPD43 INS59 UPD43 UPD43 UPD43 UPD43 INS42 INS42 INS45 UPD42 UPD74 INS38 MOV60 INS32 MOV43 UPD43 MOV43 INS59 INS38 MOV8 INS32 INS27 INS41 UPD43 MOV43 INS59 INS32 INS41 UPD42 UPD42 UPD74 UPD42 INS42 UPD42 INS42 INS32 UPD42 INS14 INS43 UPD42 UPD42 UPD42 UPD43 UPD43 INS25 UPD43 MOV43 INS32 INS42 INS42 INS42 UPD43 UPD42 UPD42 MOV42 MOV32 INS32 INS42 INS42 INS42 INS42 INS33 INS42 UPD42 UPD42 MOV42 INS32 INS42 INS42 INS42 UPD43 INS60 INS25 UPD43 INS42 INS42 INS40 INS43 INS45 INS42 UPD42 UPD42 MOV27 INS8 UPD42 INS42 INS42 INS42 UPD74 UPD74 UPD74 UPD42 MOV43 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 UPD74 INS43 INS59 INS38 INS18 UPD42 INS42 INS42 INS60 INS25 INS41 INS22 INS36 UPD43 UPD43 UPD42 UPD43 MOV43 UPD42 UPD43 UPD74 UPD74 MOV42 MOV42 UPD43 INS42 INS42 INS32 INS32 INS43 INS59 INS27 INS8 INS8 INS52 INS42 MOV27 UPD42 UPD42 UPD74 UPD42 UPD74 INS42 UPD42 UPD43 UPD43 INS38 UPD43 UPD42 UPD45 INS32 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS32 INS32 INS34 INS21 INS21 INS21 UPD27 MOV27 INS32 UPD43 UPD43 MOV43 UPD42 UPD42 INS32 UPD42 INS42 INS42 MOV32 INS14 MOV22 INS42 INS32 INS42 INS42 INS42 INS7 INS32 INS7 INS40 INS32 INS42 UPD42 UPD42 INS42 INS42 INS45 INS43 MOV32 INS42 INS42 INS22 MOV22 INS34 INS42 INS42 INS27 INS22 INS32 INS22 INS42 INS40 MOV43 UPD42 MOV42 INS42 INS52 INS42 INS45 MOV22 INS45 MOV22 INS45 INS40 INS52 INS42 INS42 INS42 INS52 INS42 MOV43 INS42 DEL34 DEL38 DEL42 DEL34 DEL38 DEL27 DEL42 DEL42 DEL34 DEL27 DEL42 DEL34 DEL38 DEL27 DEL42 DEL32 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL38 DEL25 DEL42 DEL34 DEL38 DEL27 DEL34 DEL38 DEL59 DEL60 DEL42 DEL32 DEL7 DEL21 DEL42 DEL34 DEL27 DEL42 DEL34 DEL38 DEL7 DEL21 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL34 DEL38 DEL7 DEL21 DEL8 DEL12 DEL54 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL34 DEL39 DEL42 DEL42 DEL42 DEL32 DEL40 DEL40 DEL27 DEL36 DEL36 DEL27 DEL16 DEL36 DEL42 DEL42 DEL32