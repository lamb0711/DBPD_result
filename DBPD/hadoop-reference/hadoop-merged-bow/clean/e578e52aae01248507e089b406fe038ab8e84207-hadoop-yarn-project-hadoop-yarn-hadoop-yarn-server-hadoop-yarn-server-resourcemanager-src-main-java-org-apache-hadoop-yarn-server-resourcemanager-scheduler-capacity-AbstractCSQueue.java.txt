YARN-10084. Allow inheritance of max app lifetime / default app lifetime. Contributed by Eric Payne.

+import org.apache.hadoop.yarn.exceptions.YarnRuntimeException;
+  // -1 indicates lifetime is disabled
+  private volatile long maxApplicationLifetime = -1;
+
+  private volatile long defaultApplicationLifetime = -1;
+
+  // Indicates if this queue's default lifetime was set by a config property,
+  // either at this level or anywhere in the queue's hierarchy.
+  private volatile boolean defaultAppLifetimeWasSpecifiedInConfig = false;
+
+
+      maxApplicationLifetime = getInheritedMaxAppLifetime(this, configuration);
+      defaultApplicationLifetime =
+          getInheritedDefaultAppLifetime(this, configuration,
+              maxApplicationLifetime);
+      if (maxApplicationLifetime > 0 &&
+          defaultApplicationLifetime > maxApplicationLifetime) {
+        throw new YarnRuntimeException(
+            "Default lifetime " + defaultApplicationLifetime
+                + " can't exceed maximum lifetime " + maxApplicationLifetime);
+      }
+      defaultApplicationLifetime = defaultApplicationLifetime > 0
+          ? defaultApplicationLifetime : maxApplicationLifetime;
+  private long getInheritedMaxAppLifetime(CSQueue q,
+      CapacitySchedulerConfiguration conf) {
+    CSQueue parentQ = q.getParent();
+    long maxAppLifetime = conf.getMaximumLifetimePerQueue(q.getQueuePath());
+
+    // If q is the root queue, then get max app lifetime from conf.
+    if (parentQ == null) {
+      return maxAppLifetime;
+    }
+
+    // If this is not the root queue, get this queue's max app lifetime
+    // from the conf. The parent's max app lifetime will be used if it's
+    // not set for this queue.
+    // A value of 0 will override the parent's value and means no max lifetime.
+    // A negative value means that the parent's max should be used.
+    long parentsMaxAppLifetime = getParent().getMaximumApplicationLifetime();
+    return (maxAppLifetime >= 0) ? maxAppLifetime : parentsMaxAppLifetime;
+  }
+
+  private long getInheritedDefaultAppLifetime(CSQueue q,
+      CapacitySchedulerConfiguration conf, long myMaxAppLifetime) {
+    CSQueue parentQ = q.getParent();
+    long defaultAppLifetime = conf.getDefaultLifetimePerQueue(getQueuePath());
+    defaultAppLifetimeWasSpecifiedInConfig =
+        (defaultAppLifetime >= 0
+        || (parentQ != null &&
+            parentQ.getDefaultAppLifetimeWasSpecifiedInConfig()));
+
+    // If q is the root queue, then get default app lifetime from conf.
+    if (parentQ == null) {
+      return defaultAppLifetime;
+    }
+
+    // If this is not the root queue, get the parent's default app lifetime. The
+    // parent's default app lifetime will be used if not set for this queue.
+    long parentsDefaultAppLifetime =
+        getParent().getDefaultApplicationLifetime();
+
+    // Negative value indicates default lifetime was not set at this level.
+    // If default lifetime was not set at this level, calculate it based on
+    // parent's default lifetime or current queue's max lifetime.
+    if (defaultAppLifetime < 0) {
+      // If default lifetime was not set at this level but was set somewhere in
+      // the parent's hierarchy, set default lifetime to parent queue's default
+      // only if parent queue's lifetime is less than current queueu's max
+      // lifetime. Otherwise, use current queue's max lifetime value for its
+      // default lifetime.
+      if (defaultAppLifetimeWasSpecifiedInConfig) {
+        if (parentsDefaultAppLifetime <= myMaxAppLifetime) {
+          defaultAppLifetime = parentsDefaultAppLifetime;
+        } else {
+          defaultAppLifetime = myMaxAppLifetime;
+        }
+      } else {
+        // Default app lifetime value was not set anywhere in this queue's
+        // hierarchy. Use current queue's max lifetime as its default.
+        defaultAppLifetime = myMaxAppLifetime;
+      }
+    } // else if >= 0, default lifetime was set at this level. Just use it.
+    return defaultAppLifetime;
+  }
+
+
+  public long getMaximumApplicationLifetime() {
+    return maxApplicationLifetime;
+  }
+
+  public long getDefaultApplicationLifetime() {
+    return defaultApplicationLifetime;
+  }
+
+  public boolean getDefaultAppLifetimeWasSpecifiedInConfig() {
+    return defaultAppLifetimeWasSpecifiedInConfig;
+  }

INS26 INS40 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS42 INS38 INS42 INS38 INS42 INS9 INS43 INS42 INS43 INS42 INS60 INS60 INS25 INS60 INS41 INS43 INS42 INS43 INS42 INS39 INS42 INS60 INS60 INS21 INS25 INS60 INS25 INS41 INS41 INS41 INS41 INS34 INS34 INS42 INS42 INS43 INS59 INS39 INS59 INS27 INS8 INS39 INS59 INS16 INS42 INS42 INS43 INS59 INS39 INS59 INS7 INS27 INS8 INS39 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS21 INS21 INS25 INS21 INS42 INS42 INS32 INS42 INS32 INS42 INS33 INS41 INS42 INS32 INS36 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS36 INS42 INS33 INS41 INS42 INS32 INS42 INS34 INS25 INS7 INS7 INS27 INS8 INS7 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS27 INS42 INS42 INS42 INS42 INS32 INS27 INS42 INS32 INS42 INS42 INS8 INS8 INS42 INS32 INS42 INS32 INS27 INS27 INS53 INS42 INS16 INS42 INS42 INS42 INS42 INS34 INS42 INS27 INS36 INS42 INS25 INS21 INS42 INS52 INS42 INS42 INS52 INS42 INS42 INS42 INS34 INS42 INS42 INS14 INS27 INS42 INS42 INS42 INS34 INS27 INS27 INS8 INS8 INS7 INS43 INS27 INS42 INS34 INS27 INS32 INS42 INS42 INS21 INS21 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS42 INS33 INS42 INS42 INS7 INS7 INS42 INS42 INS42 INS42