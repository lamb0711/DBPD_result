merge changes from trunk to HDFS-4949 branch

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1524865 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashMap;
-import org.apache.hadoop.io.IOUtils;
+
+  /**
+   * The number of datanodes for each software version. This list should change
+   * during rolling upgrades.
+   * Software version -> Number of datanodes with this version
+   */
+  private HashMap<String, Integer> datanodesSoftwareVersions =
+    new HashMap<String, Integer>(4, 0.75f);
+    decrementVersionCount(nodeInfo.getSoftwareVersion());
+  private void incrementVersionCount(String version) {
+    if (version == null) {
+      return;
+    }
+    synchronized(datanodeMap) {
+      Integer count = this.datanodesSoftwareVersions.get(version);
+      count = count == null ? 1 : count + 1;
+      this.datanodesSoftwareVersions.put(version, count);
+    }
+  }
+
+  private void decrementVersionCount(String version) {
+    if (version == null) {
+      return;
+    }
+    synchronized(datanodeMap) {
+      Integer count = this.datanodesSoftwareVersions.get(version);
+      if(count != null) {
+        if(count > 1) {
+          this.datanodesSoftwareVersions.put(version, count-1);
+        } else {
+          this.datanodesSoftwareVersions.remove(version);
+        }
+      }
+    }
+  }
+
+  private boolean shouldCountVersion(DatanodeDescriptor node) {
+    return node.getSoftwareVersion() != null && node.isAlive &&
+      !isDatanodeDead(node);
+  }
+
+  private void countSoftwareVersions() {
+    synchronized(datanodeMap) {
+      HashMap<String, Integer> versionCount = new HashMap<String, Integer>();
+      for(DatanodeDescriptor dn: datanodeMap.values()) {
+        // Check isAlive too because right after removeDatanode(),
+        // isDatanodeDead() is still true 
+        if(shouldCountVersion(dn))
+        {
+          Integer num = versionCount.get(dn.getSoftwareVersion());
+          num = num == null ? 1 : num+1;
+          versionCount.put(dn.getSoftwareVersion(), num);
+        }
+      }
+      this.datanodesSoftwareVersions = versionCount;
+    }
+  }
+
+  public HashMap<String, Integer> getDatanodesSoftwareVersions() {
+    synchronized(datanodeMap) {
+      return new HashMap<String, Integer> (this.datanodesSoftwareVersions);
+    }
+  }
+
+          if(shouldCountVersion(nodeS)) {
+            decrementVersionCount(nodeS.getSoftwareVersion());
+          }
+
+          nodeS.setSoftwareVersion(nodeReg.getSoftwareVersion());
-          
+
+          incrementVersionCount(nodeS.getSoftwareVersion());
+            countSoftwareVersions();
+        nodeDescr.setSoftwareVersion(nodeReg.getSoftwareVersion());
+        incrementVersionCount(nodeReg.getSoftwareVersion());
+          countSoftwareVersions();
+      countSoftwareVersions();

MOV26 UPD40 INS23 INS31 INS31 INS31 INS31 INS31 INS29 INS83 INS74 INS59 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS83 INS74 INS42 INS8 INS65 INS43 INS43 INS43 INS42 INS14 INS21 INS43 INS42 INS25 INS51 INS43 INS42 INS25 INS51 INS43 INS42 INS41 INS51 INS43 INS43 INS43 INS51 INS66 INS66 INS66 INS42 INS42 INS42 INS74 INS34 INS34 INS32 INS42 INS27 INS8 INS42 INS8 INS42 INS27 INS8 INS42 INS8 INS42 INS27 INS42 INS8 INS42 INS42 INS42 INS42 INS8 INS43 INS43 INS43 INS42 INS32 INS42 INS33 INS41 INS60 INS21 INS21 INS42 INS33 INS41 INS60 INS25 INS27 INS38 INS60 INS70 INS21 INS41 INS21 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS7 INS32 INS43 INS59 INS27 INS8 INS27 INS40 INS32 INS74 INS59 INS44 INS32 INS8 INS7 INS14 INS32 INS42 INS42 INS32 INS42 INS16 INS22 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS25 INS32 INS33 INS42 INS42 INS43 INS43 INS43 INS42 INS14 INS43 INS42 INS42 INS42 INS25 INS22 INS42 INS74 INS22 INS21 INS21 INS42 INS22 INS42 INS42 INS27 INS34 INS27 INS52 INS42 INS22 INS42 INS42 INS27 INS8 INS8 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS32 INS8 INS52 INS42 INS43 INS43 INS43 INS52 INS42 INS32 INS32 INS52 INS42 INS42 INS33 INS42 INS34 INS52 INS42 INS42 INS34 INS21 INS21 INS43 INS43 INS43 INS42 INS42 INS60 INS21 INS21 INS42 INS42 INS42 INS25 INS21 INS21 INS42 INS42 INS32 INS42 INS32 INS21 INS32 INS32 INS42 INS42 INS42 INS43 INS59 INS7 INS32 INS32 INS8 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS22 INS42 INS42 INS27 INS22 INS42 INS42 INS42 INS42 INS32 INS42 INS16 INS42 INS42 INS32 INS42 INS42 INS42 INS21 INS42 INS42 INS32 INS42 INS32 INS21 INS42 INS52 INS42 INS42 INS34 INS52 INS42 INS42 INS42 INS32 INS27 INS34 INS27 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS33 INS42 INS34 INS42 INS32 INS42 INS42 INS42