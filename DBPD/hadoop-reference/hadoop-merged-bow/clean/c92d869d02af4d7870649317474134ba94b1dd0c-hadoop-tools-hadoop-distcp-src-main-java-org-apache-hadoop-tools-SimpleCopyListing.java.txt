Merge r1609845 through r1619277 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-6584@1619293 13f79535-47bb-0310-9956-ffa450edef68

+import static org.apache.hadoop.tools.DistCpConstants
+        .HDFS_RESERVED_RAW_DIRECTORY_NAME;
+
+    targetPath = targetFS.makeQualified(targetPath);
+    final boolean targetIsReservedRaw =
+        Path.getPathWithoutSchemeAndAuthority(targetPath).toString().
+            startsWith(HDFS_RESERVED_RAW_DIRECTORY_NAME);
+      if (Path.getPathWithoutSchemeAndAuthority(path).toString().
+          startsWith(HDFS_RESERVED_RAW_DIRECTORY_NAME)) {
+        if (!targetIsReservedRaw) {
+          final String msg = "The source path '" + path + "' starts with " +
+              HDFS_RESERVED_RAW_DIRECTORY_NAME + " but the target path '" +
+              targetPath + "' does not. Either all or none of the paths must " +
+              "have this prefix.";
+          throw new InvalidInputException(msg);
+        }
+      } else if (targetIsReservedRaw) {
+        final String msg = "The target path '" + targetPath + "' starts with " +
+                HDFS_RESERVED_RAW_DIRECTORY_NAME + " but the source path '" +
+                path + "' does not. Either all or none of the paths must " +
+                "have this prefix.";
+        throw new InvalidInputException(msg);
+      }
+    }
+
+    if (targetIsReservedRaw) {
+      options.preserveRawXattrs();
+      getConf().setBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, true);
+        final boolean preserveAcls = options.shouldPreserve(FileAttribute.ACL);
+        final boolean preserveXAttrs = options.shouldPreserve(FileAttribute.XATTR);
+        final boolean preserveRawXAttrs = options.shouldPreserveRawXattrs();
-              options.shouldPreserve(FileAttribute.ACL), 
-              options.shouldPreserve(FileAttribute.XATTR));
+                preserveAcls, preserveXAttrs, preserveRawXAttrs);
-                options.shouldPreserve(FileAttribute.ACL) &&
-                sourceStatus.isDirectory(), options.shouldPreserve(
-                    FileAttribute.XATTR) && sourceStatus.isDirectory());
+                  preserveAcls && sourceStatus.isDirectory(),
+                  preserveXAttrs && sourceStatus.isDirectory(),
+                  preserveRawXAttrs && sourceStatus.isDirectory());
+    final boolean preserveAcls = options.shouldPreserve(FileAttribute.ACL);
+    final boolean preserveXAttrs = options.shouldPreserve(FileAttribute.XATTR);
+    final boolean preserveRawXattrs = options.shouldPreserveRawXattrs();
-            options.shouldPreserve(FileAttribute.ACL) && child.isDirectory(), 
-            options.shouldPreserve(FileAttribute.XATTR) && child.isDirectory());
+            preserveAcls && child.isDirectory(),
+            preserveXAttrs && child.isDirectory(),
+            preserveRawXattrs && child.isDirectory());

INS26 INS40 INS21 INS60 INS25 INS60 INS60 INS60 INS7 INS83 INS39 INS59 INS8 INS42 INS8 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS42 INS32 INS42 INS32 MOV60 MOV25 INS25 INS21 INS21 INS42 MOV32 INS42 MOV32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS8 INS25 INS32 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS25 INS42 INS8 INS42 INS42 INS32 INS42 INS40 INS9 INS60 INS60 INS60 INS42 INS42 INS42 INS32 INS42 INS38 INS8 INS60 INS53 INS42 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS42 INS42 INS42 INS42 INS60 INS53 INS83 INS43 INS59 INS14 INS42 MOV32 INS42 MOV32 INS42 INS32 MOV27 INS83 INS43 INS59 INS14 INS42 INS42 INS27 INS43 INS42 INS42 INS42 MOV43 INS27 INS42 INS42 INS27 INS43 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS45 INS42 INS42 INS42 INS42 INS32 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS45 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV43 INS42 INS42 MOV27 INS27 INS42 INS42 INS42 INS32 INS42 INS42 DEL8 DEL42 DEL40 DEL32 DEL40 DEL32