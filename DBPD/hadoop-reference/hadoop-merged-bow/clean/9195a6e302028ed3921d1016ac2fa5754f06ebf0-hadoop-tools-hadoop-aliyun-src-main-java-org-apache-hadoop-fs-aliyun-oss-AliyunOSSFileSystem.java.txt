HADOOP-15027. AliyunOSS: Support multi-thread pre-read to improve sequential read from Hadoop to Aliyun OSS performance. (Contributed by Jinhu Wu)

+import java.util.concurrent.TimeUnit;
+import com.google.common.util.concurrent.ListeningExecutorService;
+import org.apache.hadoop.util.BlockingThreadPoolExecutorService;
+import org.apache.hadoop.util.SemaphoredDelegatingExecutor;
+  private int maxReadAheadPartNumber;
+  private ListeningExecutorService boundedThreadPool;
+
+      boundedThreadPool.shutdown();
+
+    int threadNum = AliyunOSSUtils.intPositiveOption(conf,
+        Constants.MULTIPART_DOWNLOAD_THREAD_NUMBER_KEY,
+        Constants.MULTIPART_DOWNLOAD_THREAD_NUMBER_DEFAULT);
+
+    int totalTasks = AliyunOSSUtils.intPositiveOption(conf,
+        Constants.MAX_TOTAL_TASKS_KEY, Constants.MAX_TOTAL_TASKS_DEFAULT);
+
+    maxReadAheadPartNumber = AliyunOSSUtils.intPositiveOption(conf,
+        Constants.MULTIPART_DOWNLOAD_AHEAD_PART_MAX_NUM_KEY,
+        Constants.MULTIPART_DOWNLOAD_AHEAD_PART_MAX_NUM_DEFAULT);
+
+    this.boundedThreadPool = BlockingThreadPoolExecutorService.newInstance(
+        threadNum, totalTasks, 60L, TimeUnit.SECONDS, "oss-read-shared");
-  /**
+/**
-    return new FSDataInputStream(new AliyunOSSInputStream(getConf(), store,
-        pathToKey(path), fileStatus.getLen(), statistics));
+    return new FSDataInputStream(new AliyunOSSInputStream(getConf(),
+        new SemaphoredDelegatingExecutor(
+            boundedThreadPool, maxReadAheadPartNumber, true),
+        maxReadAheadPartNumber, store, pathToKey(path), fileStatus.getLen(),
+        statistics));

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS23 INS83 INS39 INS59 INS83 INS43 INS59 INS42 INS42 INS42 INS60 INS60 INS21 INS21 INS39 INS59 INS39 INS59 INS7 INS7 INS21 INS42 INS32 INS42 INS32 INS42 INS32 INS22 INS32 INS32 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS40 INS40 INS52 INS42 INS42 INS42 INS42 INS42 INS34 INS40 INS45 INS14 INS42 INS42 INS42 INS43 INS42 INS42 INS9 INS42