Add missing files from HDFS-9005. (lei)

-  private final HostFileManager hostFileManager = new HostFileManager();
+  private HostConfigManager hostConfigManager;
+    this.hostConfigManager = ReflectionUtils.newInstance(
+        conf.getClass(DFSConfigKeys.DFS_NAMENODE_HOSTS_PROVIDER_CLASSNAME_KEY,
+            HostFileManager.class, HostConfigManager.class), conf);
-      this.hostFileManager.refresh(conf.get(DFSConfigKeys.DFS_HOSTS, ""),
-        conf.get(DFSConfigKeys.DFS_HOSTS_EXCLUDE, ""));
+      this.hostConfigManager.refresh();
-      for (InetSocketAddress addr : hostFileManager.getIncludes()) {
+      for (InetSocketAddress addr : hostConfigManager.getIncludes()) {
-  HostFileManager getHostFileManager() {
-    return hostFileManager;
+  public HostConfigManager getHostConfigManager() {
+    return hostConfigManager;
+    resolveUpgradeDomain(node);
-  
+
+  void resolveUpgradeDomain(DatanodeDescriptor node) {
+    String upgradeDomain = hostConfigManager.getUpgradeDomain(node);
+    if (upgradeDomain != null && upgradeDomain.length() > 0) {
+      node.setUpgradeDomain(upgradeDomain);
+    }
+  }
+
-    if (getHostFileManager().isExcluded(nodeReg)) {
+    if (getHostConfigManager().isExcluded(nodeReg)) {
-      if (!hostFileManager.isIncluded(nodeReg)) {
+      if (!hostConfigManager.isIncluded(nodeReg)) {
-            
+          resolveUpgradeDomain(nodeS);
+
-  
+        resolveUpgradeDomain(nodeDescr);
+
+      this.hostConfigManager.setConf(conf);
-    this.hostFileManager.refresh(conf.get(DFSConfigKeys.DFS_HOSTS, ""),
-      conf.get(DFSConfigKeys.DFS_HOSTS_EXCLUDE, ""));
+    this.hostConfigManager.refresh();
-      if (!hostFileManager.isIncluded(node)) {
+      if (!hostConfigManager.isIncluded(node)) {
-        if (hostFileManager.isExcluded(node)) {
+        if (hostConfigManager.isExcluded(node)) {
+      node.setUpgradeDomain(hostConfigManager.getUpgradeDomain(node));
-    final HostFileManager.HostSet foundNodes = new HostFileManager.HostSet();
-    final HostFileManager.HostSet includedNodes = hostFileManager.getIncludes();
-    final HostFileManager.HostSet excludedNodes = hostFileManager.getExcludes();
+    final HostSet foundNodes = new HostSet();
+    final Iterable<InetSocketAddress> includedNodes =
+        hostConfigManager.getIncludes();
-            hostFileManager.isIncluded(dn)) {
+            hostConfigManager.isIncluded(dn)) {
-        foundNodes.add(HostFileManager.resolvedAddressFromDatanodeID(dn));
+        foundNodes.add(dn.getResolvedAddress());
-        if (excludedNodes.match(addr)) {
+        if (hostConfigManager.isExcluded(dn)) {
-          "includedNodes = " + hostFileManager.getIncludes() +
-          ", excludedNodes = " + hostFileManager.getExcludes() +
+          "includedNodes = " + hostConfigManager.getIncludes() +
+          ", excludedNodes = " + hostConfigManager.getExcludes() +

INS31 UPD43 INS83 UPD43 UPD42 INS39 INS42 INS44 INS8 UPD42 UPD42 INS21 UPD42 INS21 INS43 INS42 INS60 INS25 INS7 UPD42 INS32 INS42 INS43 INS59 INS27 INS8 UPD43 INS74 INS22 INS32 INS42 INS42 INS42 INS42 INS32 INS27 INS27 INS21 INS21 INS21 INS42 INS43 INS43 INS52 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS34 INS32 UPD42 INS32 UPD42 INS32 UPD43 INS42 INS42 UPD42 INS42 INS42 INS40 INS57 INS57 UPD42 INS42 INS42 INS42 INS42 INS42 INS21 INS22 INS42 INS42 INS42 INS42 INS32 INS42 MOV43 INS43 UPD42 UPD42 INS32 INS52 INS42 UPD42 INS42 INS42 INS42 INS42 INS21 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS32 UPD42 UPD42 UPD42 INS42 INS42 DEL83 DEL14 DEL42 DEL42 DEL40 DEL45 DEL32 DEL42 DEL42 DEL40 DEL45 DEL32 DEL42 DEL42 DEL40 DEL45 DEL32 DEL42 DEL42 DEL40 DEL45 DEL32 DEL40 DEL40 DEL40 DEL43 DEL83 DEL40 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42