HDFS-4330. Support snapshots up to the snapshot limit.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1426432 13f79535-47bb-0310-9956-ffa450edef68

-/** The directory with snapshots. */
+/**
+ * The directory with snapshots. It maintains a list of snapshot diffs for
+ * storing snapshot data. When there are modifications to the directory, the old
+ * data is stored in the latest snapshot, if there is any.
+ */
-    public int compareTo(final Snapshot that_snapshot) {
-      return Snapshot.ID_COMPARATOR.compare(this.snapshot, that_snapshot);
+    public int compareTo(final Snapshot that) {
+      return Snapshot.ID_COMPARATOR.compare(this.snapshot, that);
-      return snapshotINode != null? snapshotINode
-          : posteriorDiff != null? posteriorDiff.getSnapshotINode()
-              : INodeDirectoryWithSnapshot.this; 
+      for(SnapshotDiff d = this; ; d = d.posteriorDiff) {
+        if (d.snapshotINode != null) {
+          return d.snapshotINode;
+        } else if (d.posteriorDiff == null) {
+          return INodeDirectoryWithSnapshot.this;
+        }
+      }
-      final INode[] array = diff.accessPrevious(name);
-      if (array != null) {
-        // this diff is able to find it
-        return array[0]; 
-      } else if (!checkPosterior) {
-        // Since checkPosterior is false, return null, i.e. not found.   
-        return null;
-      } else {
-        // return the posterior INode.
-        return posteriorDiff != null? posteriorDiff.getChild(name, true)
-            : INodeDirectoryWithSnapshot.this.getChild(name, null);
+      for(SnapshotDiff d = this; ; d = d.posteriorDiff) {
+        final INode[] array = d.diff.accessPrevious(name);
+        if (array != null) {
+          // the diff is able to find it
+          return array[0]; 
+        } else if (!checkPosterior) {
+          // Since checkPosterior is false, return null, i.e. not found.   
+          return null;
+        } else if (d.posteriorDiff == null) {
+          // no more posterior diff, get from current inode.
+          return INodeDirectoryWithSnapshot.this.getChild(name, null);
+        }
+  /** Save the snapshot copy to the latest snapshot. */

INS29 UPD66 INS66 INS66 INS8 INS65 UPD42 INS24 INS24 INS66 INS58 INS7 INS8 INS58 INS7 MOV8 UPD42 INS43 INS59 INS42 INS40 INS25 INS43 INS59 INS42 INS40 INS42 INS42 INS52 INS27 INS8 INS25 INS42 INS42 INS52 INS40 MOV33 INS41 INS27 INS8 INS25 INS40 INS40 INS33 INS41 INS40 INS27 MOV8 MOV52 INS40 INS33 MOV32 DEL42 DEL33 DEL27 DEL42 DEL42 DEL27 DEL42 DEL42 DEL32 DEL16 DEL16 DEL41 DEL42 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL9 DEL32 DEL16