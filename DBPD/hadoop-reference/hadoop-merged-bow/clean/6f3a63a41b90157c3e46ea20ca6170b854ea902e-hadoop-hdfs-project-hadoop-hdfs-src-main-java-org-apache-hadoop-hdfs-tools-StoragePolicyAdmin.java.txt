HDFS-7600. Refine hdfs admin classes to reuse common code. Contributed by Jing Zhao.

-import org.apache.hadoop.fs.FileSystem;
-  private static final int MAX_LINE_WIDTH = 80;
-  private static DistributedFileSystem getDFS(Configuration conf)
-      throws IOException {
-    final FileSystem fs = FileSystem.get(conf);
-    if (!(fs instanceof DistributedFileSystem)) {
-      throw new IllegalArgumentException("FileSystem " + fs.getUri() +
-          " is not an HDFS file system");
-    }
-    return (DistributedFileSystem) fs;
-  }
-
-  /**
-   * NN exceptions contain the stack trace as part of the exception message.
-   * When it's a known error, pretty-print the error and squish the stack trace.
-   */
-  private static String prettifyException(Exception e) {
-    return e.getClass().getSimpleName() + ": " +
-        e.getLocalizedMessage().split("\n")[0];
-  }
-
-  private static TableListing getOptionDescriptionListing() {
-    return new TableListing.Builder()
-        .addField("").addField("", true)
-        .wrapWidth(MAX_LINE_WIDTH).hideHeaders().build();
-  }
-
-      printUsage(false);
+      AdminHelper.printUsage(false, "storagepolicies", COMMANDS);
-    final Command command = determineCommand(args[0]);
+    final AdminHelper.Command command = AdminHelper.determineCommand(args[0],
+        COMMANDS);
-      printUsage(false);
+      AdminHelper.printUsage(false, "storagepolicies", COMMANDS);
-    final List<String> argsList = new LinkedList<String>();
+    final List<String> argsList = new LinkedList<>();
-      System.err.println(prettifyException(e));
+      System.err.println(AdminHelper.prettifyException(e));
-  interface Command {
-    String getName();
-    String getShortUsage();
-    String getLongUsage();
-    int run(Configuration conf, List<String> args) throws IOException;
-  }
-
-  private static class ListStoragePoliciesCommand implements Command {
+  private static class ListStoragePoliciesCommand
+      implements AdminHelper.Command {
-      final DistributedFileSystem dfs = getDFS(conf);
+      final DistributedFileSystem dfs = AdminHelper.getDFS(conf);
-        System.err.println(prettifyException(e));
+        System.err.println(AdminHelper.prettifyException(e));
-  private static class GetStoragePolicyCommand implements Command {
+  private static class GetStoragePolicyCommand implements AdminHelper.Command {
-      final TableListing listing = getOptionDescriptionListing();
+      final TableListing listing = AdminHelper.getOptionDescriptionListing();
-      final DistributedFileSystem dfs = getDFS(conf);
+      final DistributedFileSystem dfs = AdminHelper.getDFS(conf);
-        System.err.println(prettifyException(e));
+        System.err.println(AdminHelper.prettifyException(e));
-  private static class SetStoragePolicyCommand implements Command {
+  private static class SetStoragePolicyCommand implements AdminHelper.Command {
-      TableListing listing = getOptionDescriptionListing();
+      TableListing listing = AdminHelper.getOptionDescriptionListing();
-      final DistributedFileSystem dfs = getDFS(conf);
+      final DistributedFileSystem dfs = AdminHelper.getDFS(conf);
-        System.err.println(prettifyException(e));
+        System.err.println(AdminHelper.prettifyException(e));
-  private static class HelpCommand implements Command {
-    @Override
-    public String getName() {
-      return "-help";
-    }
-
-    @Override
-    public String getShortUsage() {
-      return "[-help <command-name>]\n";
-    }
-
-    @Override
-    public String getLongUsage() {
-      final TableListing listing = getOptionDescriptionListing();
-      listing.addRow("<command-name>", "The command for which to get " +
-          "detailed help. If no command is specified, print detailed help for " +
-          "all commands");
-      return getShortUsage() + "\n" +
-          "Get detailed help about a command.\n\n" +
-          listing.toString();
-    }
-
-    @Override
-    public int run(Configuration conf, List<String> args) throws IOException {
-      if (args.size() == 0) {
-        for (Command command : COMMANDS) {
-          System.err.println(command.getLongUsage());
-        }
-        return 0;
-      }
-      if (args.size() != 1) {
-        System.out.println("You must give exactly one argument to -help.");
-        return 0;
-      }
-      final String commandName = args.get(0);
-      // prepend a dash to match against the command names
-      final Command command = determineCommand("-" + commandName);
-      if (command == null) {
-        System.err.print("Unknown command '" + commandName + "'.\n");
-        System.err.print("Valid help command names are:\n");
-        String separator = "";
-        for (Command c : COMMANDS) {
-          System.err.print(separator + c.getName().substring(1));
-          separator = ", ";
-        }
-        System.err.print("\n");
-        return 1;
-      }
-      System.err.print(command.getLongUsage());
-      return 0;
-    }
-  }
-
-  private static final Command[] COMMANDS = {
+  private static final AdminHelper.Command[] COMMANDS = {
-      new GetStoragePolicyCommand(),
-      new HelpCommand()
+      new GetStoragePolicyCommand()
-
-  private static void printUsage(boolean longUsage) {
-    System.err.println(
-        "Usage: bin/hdfs storagepolicies [COMMAND]");
-    for (Command command : COMMANDS) {
-      if (longUsage) {
-        System.err.print(command.getLongUsage());
-      } else {
-        System.err.print("          " + command.getShortUsage());
-      }
-    }
-    System.err.println();
-  }
-
-  private static Command determineCommand(String commandName) {
-    for (Command COMMAND : COMMANDS) {
-      if (COMMAND.getName().equals(commandName)) {
-        return COMMAND;
-      }
-    }
-    return null;
-  }

UPD43 UPD43 UPD43 UPD5 INS40 INS40 INS40 UPD43 UPD43 INS40 INS40 MOV43 MOV43 INS42 INS42 UPD74 MOV44 MOV44 INS42 INS45 INS42 INS42 INS45 INS42 INS42 MOV41 INS42 INS42 MOV41 INS42 INS42 MOV41 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL62 DEL36 DEL38 DEL42 DEL43 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL11 DEL41 DEL8 DEL31 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL34 DEL2 DEL27 DEL41 DEL8 DEL31 DEL83 DEL83 DEL42 DEL43 DEL42 DEL40 DEL43 DEL14 DEL42 DEL45 DEL32 DEL42 DEL45 DEL9 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL31 DEL42 DEL43 DEL42 DEL31 DEL42 DEL43 DEL42 DEL31 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL31 DEL55 DEL42 DEL42 DEL42 DEL43 DEL42 DEL83 DEL83 DEL42 DEL42 DEL43 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL45 DEL41 DEL8 DEL31 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL45 DEL41 DEL8 DEL31 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL83 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL45 DEL45 DEL45 DEL27 DEL32 DEL21 DEL42 DEL32 DEL45 DEL45 DEL42 DEL42 DEL32 DEL27 DEL41 DEL8 DEL31 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL34 DEL27 DEL42 DEL43 DEL42 DEL44 DEL42 DEL40 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL34 DEL41 DEL8 DEL25 DEL42 DEL42 DEL32 DEL34 DEL27 DEL40 DEL42 DEL45 DEL32 DEL21 DEL34 DEL41 DEL8 DEL25 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL34 DEL32 DEL59 DEL60 DEL83 DEL42 DEL43 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL40 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL40 DEL42 DEL45 DEL32 DEL21 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL40 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL34 DEL32 DEL27 DEL32 DEL21 DEL42 DEL45 DEL7 DEL21 DEL8 DEL70 DEL40 DEL42 DEL45 DEL32 DEL21 DEL34 DEL41 DEL8 DEL25 DEL40 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL34 DEL41 DEL8 DEL31 DEL55 DEL42 DEL42 DEL43 DEL14 DEL83 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL40 DEL42 DEL45 DEL32 DEL21 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL40 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL40 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL25 DEL8 DEL70 DEL40 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL41 DEL8 DEL25 DEL8 DEL70 DEL33 DEL41 DEL8 DEL31