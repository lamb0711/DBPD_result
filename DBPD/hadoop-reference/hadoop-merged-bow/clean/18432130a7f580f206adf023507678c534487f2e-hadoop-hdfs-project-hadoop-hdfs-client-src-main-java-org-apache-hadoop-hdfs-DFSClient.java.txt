HADOOP-14104. Client should always ask namenode for kms provider path. Contributed by Rushabh S Shah.

+import org.apache.hadoop.fs.CommonConfigurationKeysPublic;
+import org.apache.hadoop.security.Credentials;
+  private static final String DFS_KMS_PREFIX = "dfs-kms-";
-  private final String authority;
+  private final URI namenodeUri;
+  private URI keyProviderUri = null;
-    this.authority = nameNodeUri == null? "null": nameNodeUri.getAuthority();
+    this.namenodeUri = nameNodeUri;
-    return LeaseRenewer.getInstance(authority, ugi, this);
+    return LeaseRenewer.getInstance(
+        namenodeUri != null ? namenodeUri.getAuthority() : "null", ugi, this);
-  public KeyProvider getKeyProvider() {
-    return clientContext.getKeyProviderCache().get(conf);
+  /**
+   * Returns a key to map namenode uri to key provider uri.
+   * Tasks will lookup this key to find key Provider.
+   */
+  public Text getKeyProviderMapKey() {
+    return new Text(DFS_KMS_PREFIX + namenodeUri.getScheme()
+        +"://" + namenodeUri.getAuthority());
+  }
+
+  /**
+   * The key provider uri is searched in the following order.
+   * 1. If there is a mapping in Credential's secrets map for namenode uri.
+   * 2. From namenode getServerDefaults rpc.
+   * 3. Finally fallback to local conf.
+   * @return keyProviderUri if found from either of above 3 cases,
+   * null otherwise
+   * @throws IOException
+   */
+  URI getKeyProviderUri() throws IOException {
+    if (keyProviderUri != null) {
+      return keyProviderUri;
+    }
+
+    // Lookup the secret in credentials object for namenodeuri.
+    Credentials credentials = ugi.getCredentials();
+    byte[] keyProviderUriBytes = credentials.getSecretKey(getKeyProviderMapKey());
+    if(keyProviderUriBytes != null) {
+      keyProviderUri =
+          URI.create(DFSUtilClient.bytes2String(keyProviderUriBytes));
+      return keyProviderUri;
+    }
+
+    // Query the namenode for the key provider uri.
+    FsServerDefaults serverDefaults = getServerDefaults();
+    if (serverDefaults.getKeyProviderUri() != null) {
+      if (!serverDefaults.getKeyProviderUri().isEmpty()) {
+        keyProviderUri = URI.create(serverDefaults.getKeyProviderUri());
+      }
+      return keyProviderUri;
+    }
+
+    // Last thing is to trust its own conf to be backwards compatible.
+    String keyProviderUriStr = conf.getTrimmed(
+        CommonConfigurationKeysPublic.HADOOP_SECURITY_KEY_PROVIDER_PATH);
+    if (keyProviderUriStr != null && !keyProviderUriStr.isEmpty()) {
+      keyProviderUri = URI.create(keyProviderUriStr);
+    }
+    return keyProviderUri;
+  }
+
+  public KeyProvider getKeyProvider() throws IOException {
+    return clientContext.getKeyProviderCache().get(conf, getKeyProviderUri());
+  }
+
+  /*
+   * Should be used only for testing.
+   */
+  @VisibleForTesting
+  public void setKeyProviderUri(URI providerUri) {
+    this.keyProviderUri = providerUri;
-   * See {@link DFSUtilClient#isHDFSEncryptionEnabled(Configuration)}
-  public boolean isHDFSEncryptionEnabled() {
-    return DFSUtilClient.isHDFSEncryptionEnabled(this.conf);
+  public boolean isHDFSEncryptionEnabled() throws IOException{
+    return getKeyProviderUri() != null;

INS26 INS26 MOV23 INS40 INS40 INS23 INS23 INS31 INS31 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS43 INS59 INS29 INS83 INS43 INS42 INS8 INS29 INS43 INS42 INS43 INS8 INS43 INS78 MOV83 INS39 INS42 INS44 INS8 INS29 INS83 MOV39 MOV42 INS43 MOV8 UPD42 INS45 INS42 INS42 INS42 INS42 INS33 INS65 INS42 INS41 INS65 INS65 INS65 INS42 INS42 INS25 INS60 INS60 INS25 INS60 INS25 INS60 INS25 INS41 INS42 INS42 INS43 INS42 INS21 INS65 MOV65 INS42 INS66 UPD66 MOV66 INS14 UPD66 MOV66 INS66 INS66 INS66 INS66 INS66 INS42 INS27 INS8 INS43 INS59 INS5 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS42 INS42 INS7 INS66 INS27 INS42 INS16 INS43 INS27 INS42 INS33 INS41 INS42 INS42 INS32 INS39 INS85 INS42 INS32 INS42 INS33 INS21 INS41 INS42 INS42 INS32 INS32 INS33 INS25 INS41 UPD42 MOV42 INS42 INS32 INS27 INS38 INS21 INS32 INS22 INS42 INS32 INS33 UPD42 INS27 INS32 INS45 INS42 INS42 INS32 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS7 INS42 INS42 INS42 INS42 INS38 INS8 INS42 INS42 INS42 INS40 INS42 INS33 INS32 INS7 INS42 INS52 INS42 UPD42 MOV42 INS42 INS33 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 DEL42 DEL33 DEL27 DEL45 DEL42 DEL42 DEL32 DEL16 DEL42 DEL52 DEL42 DEL22 DEL32 DEL42 DEL42 DEL43 DEL69 DEL68 DEL65 DEL65 DEL29 DEL31