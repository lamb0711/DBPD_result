HDFS-9711. Integrate CSRF prevention filter in WebHDFS. Contributed by Chris Nauroth.

+import static org.apache.hadoop.hdfs.client.HdfsClientConfigKeys.DFS_WEBHDFS_REST_CSRF_ENABLED_DEFAULT;
+import static org.apache.hadoop.hdfs.client.HdfsClientConfigKeys.DFS_WEBHDFS_REST_CSRF_ENABLED_KEY;
+
+import java.util.Enumeration;
+import java.util.Map;
+import javax.servlet.FilterConfig;
+import javax.servlet.ServletContext;
+import javax.servlet.ServletException;
+
+import org.apache.hadoop.security.http.RestCsrfPreventionFilter;
+  private final RestCsrfPreventionFilter restCsrfPreventionFilter;
+    this.restCsrfPreventionFilter = createRestCsrfPreventionFilter(conf);
-              conf, confForCreate));
+              conf, confForCreate, restCsrfPreventionFilter));
-              new SslHandler(sslFactory.createSSLEngine()),
-              new HttpRequestDecoder(),
-              new HttpResponseEncoder(),
-              new ChunkedWriteHandler(),
-              new URLDispatcher(jettyAddr, conf, confForCreate));
+                new SslHandler(sslFactory.createSSLEngine()),
+                new HttpRequestDecoder(),
+                new HttpResponseEncoder());
+            if (restCsrfPreventionFilter != null) {
+              p.addLast(new RestCsrfPreventionFilterHandler(
+                  restCsrfPreventionFilter));
+            }
+            p.addLast(
+                new ChunkedWriteHandler(),
+                new URLDispatcher(jettyAddr, conf, confForCreate));
-}
+
+  /**
+   * Creates the {@link RestCsrfPreventionFilter} for the DataNode.  Since the
+   * DataNode HTTP server is not implemented in terms of the servlet API, it
+   * takes some extra effort to obtain an instance of the filter.  This method
+   * takes care of configuration and implementing just enough of the servlet API
+   * and related interfaces so that the DataNode can get a fully initialized
+   * instance of the filter.
+   *
+   * @param conf configuration to read
+   * @return initialized filter, or null if CSRF protection not enabled
+   */
+  private static RestCsrfPreventionFilter createRestCsrfPreventionFilter(
+      Configuration conf) {
+    if (!conf.getBoolean(DFS_WEBHDFS_REST_CSRF_ENABLED_KEY,
+        DFS_WEBHDFS_REST_CSRF_ENABLED_DEFAULT)) {
+      return null;
+    }
+    String restCsrfClassName = RestCsrfPreventionFilter.class.getName();
+    Map<String, String> restCsrfParams = RestCsrfPreventionFilter
+        .getFilterParams(conf, "dfs.webhdfs.rest-csrf.");
+    RestCsrfPreventionFilter filter = new RestCsrfPreventionFilter();
+    try {
+      filter.init(new MapBasedFilterConfig(restCsrfClassName, restCsrfParams));
+    } catch (ServletException e) {
+      throw new IllegalStateException(
+          "Failed to initialize RestCsrfPreventionFilter.", e);
+    }
+    return filter;
+  }
+
+  /**
+   * A minimal {@link FilterConfig} implementation backed by a {@link Map}.
+   */
+  private static final class MapBasedFilterConfig implements FilterConfig {
+
+    private final String filterName;
+    private final Map<String, String> parameters;
+
+    /**
+     * Creates a new MapBasedFilterConfig.
+     *
+     * @param filterName filter name
+     * @param parameters mapping of filter initialization parameters
+     */
+    public MapBasedFilterConfig(String filterName,
+        Map<String, String> parameters) {
+      this.filterName = filterName;
+      this.parameters = parameters;
+    }
+
+    @Override
+    public String getFilterName() {
+      return this.filterName;
+    }
+
+    @Override
+    public String getInitParameter(String name) {
+      return this.parameters.get(name);
+    }
+
+    @Override
+    public Enumeration<String> getInitParameterNames() {
+      throw this.notImplemented();
+    }
+
+    @Override
+    public ServletContext getServletContext() {
+      throw this.notImplemented();
+    }
+
+    /**
+     * Creates an exception indicating that an interface method is not
+     * implemented.  These should never be seen in practice, because it is only
+     * used for methods that are not called by {@link RestCsrfPreventionFilter}.
+     *
+     * @return exception indicating method not implemented
+     */
+    private UnsupportedOperationException notImplemented() {
+      return new UnsupportedOperationException(this.getClass().getSimpleName()
+          + " does not implement this method.");
+    }
+  }
+}

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS55 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS83 INS83 INS42 INS43 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS42 INS42 INS21 INS65 INS65 INS65 INS42 INS43 INS42 INS25 INS60 INS60 INS60 INS54 INS41 INS65 INS42 INS83 INS83 INS43 INS59 INS83 INS83 INS74 INS59 INS29 INS83 INS42 INS44 INS44 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS74 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS8 INS7 INS66 INS65 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS38 INS8 INS43 INS59 INS74 INS59 INS43 INS59 INS8 INS12 INS42 INS66 INS65 INS66 INS65 INS66 INS42 INS42 INS43 INS43 INS43 INS42 INS65 INS65 INS65 INS43 INS42 INS74 INS42 INS21 INS21 INS42 INS42 INS41 INS42 INS42 INS43 INS42 INS41 INS42 INS43 INS43 INS53 INS42 INS42 INS53 INS65 INS65 INS42 INS41 INS22 INS32 INS42 INS32 INS41 INS42 INS42 INS32 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS14 INS21 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS43 INS43 INS43 INS7 INS7 INS22 INS42 INS32 INS42 INS42 INS32 INS32 INS66 INS66 INS66 INS65 INS66 INS66 INS14 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS57 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS43 INS32 INS43 INS42 INS53 INS42 INS42 INS42 INS22 INS42 INS22 INS42 INS52 INS42 INS22 INS42 INS42 INS52 INS42 INS52 INS42 INS42 INS43 INS27 INS43 INS42 INS42 INS42 INS14 INS42 INS14 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS32 INS45 INS42 INS43 INS42 INS42 INS43 INS45 INS42 INS32 INS42 INS42 INS42 INS52 INS42 INS25 INS21 INS27 INS8 INS32 INS42 INS33 INS21 INS42 INS42 MOV14 MOV14 INS42 INS32 INS42 INS42 INS14 INS43 INS42 INS42