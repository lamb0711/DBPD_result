Merge remote-tracking branch 'apache-commit/trunk' into HDFS-6581

+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.NodeResourceUpdateSchedulerEvent;
-  private volatile ResourceOption resourceOption;
+  private volatile Resource totalCapability;
+     .addTransition(NodeState.NEW, NodeState.NEW,
+         RMNodeEventType.RESOURCE_UPDATE, 
+         new UpdateNodeResourceWhenUnusableTransition())
+     .addTransition(NodeState.RUNNING, NodeState.RUNNING,
+         RMNodeEventType.RESOURCE_UPDATE, new UpdateNodeResourceWhenRunningTransition())
+
+     //Transitions from REBOOTED state
+     .addTransition(NodeState.REBOOTED, NodeState.REBOOTED,
+         RMNodeEventType.RESOURCE_UPDATE, 
+         new UpdateNodeResourceWhenUnusableTransition())
+         
+     //Transitions from DECOMMISSIONED state
+     .addTransition(NodeState.DECOMMISSIONED, NodeState.DECOMMISSIONED,
+         RMNodeEventType.RESOURCE_UPDATE, 
+         new UpdateNodeResourceWhenUnusableTransition())
+         
+     //Transitions from LOST state
+     .addTransition(NodeState.LOST, NodeState.LOST,
+         RMNodeEventType.RESOURCE_UPDATE, 
+         new UpdateNodeResourceWhenUnusableTransition())
+     .addTransition(NodeState.UNHEALTHY, NodeState.UNHEALTHY,
+         RMNodeEventType.RESOURCE_UPDATE, new UpdateNodeResourceWhenUnusableTransition())
-      int cmPort, int httpPort, Node node, ResourceOption resourceOption, String nodeManagerVersion) {
+      int cmPort, int httpPort, Node node, Resource capability, String nodeManagerVersion) {
-    this.resourceOption = resourceOption; 
+    this.totalCapability = capability; 
-    return this.resourceOption.getResource();
-  }
-  
-  @Override
-  public void setResourceOption(ResourceOption resourceOption) {
-    this.resourceOption = resourceOption;
-  }
-  
-  @Override
-  public ResourceOption getResourceOption(){
-    return this.resourceOption;
+    return this.totalCapability;
+  
+  private static void updateNodeResourceFromEvent(RMNodeImpl rmNode, 
+     RMNodeResourceUpdateEvent event){
+      ResourceOption resourceOption = event.getResourceOption();
+      // Set resource on RMNode
+      rmNode.totalCapability = resourceOption.getResource();
+  }
-      rmNode.resourceOption = newNode.getResourceOption();
-
+      rmNode.totalCapability = newNode.getTotalCapability();
+      
+      if (rmNode.getState().equals(NodeState.RUNNING)) {
+        // Update scheduler node's capacity for reconnect node.
+        rmNode.context.getDispatcher().getEventHandler().handle(
+            new NodeResourceUpdateSchedulerEvent(rmNode, 
+                ResourceOption.newInstance(rmNode.totalCapability, -1)));
+      }
+      
+  
+  public static class UpdateNodeResourceWhenRunningTransition
+      implements SingleArcTransition<RMNodeImpl, RMNodeEvent> {
+    @Override
+    public void transition(RMNodeImpl rmNode, RMNodeEvent event) {
+      RMNodeResourceUpdateEvent updateEvent = (RMNodeResourceUpdateEvent)event;
+      updateNodeResourceFromEvent(rmNode, updateEvent);
+      // Notify new resourceOption to scheduler
+      rmNode.context.getDispatcher().getEventHandler().handle(
+          new NodeResourceUpdateSchedulerEvent(rmNode, updateEvent.getResourceOption()));
+    }
+  }
+  
+  public static class UpdateNodeResourceWhenUnusableTransition
+      implements SingleArcTransition<RMNodeImpl, RMNodeEvent> {
+
+    @Override
+    public void transition(RMNodeImpl rmNode, RMNodeEvent event) {
+      // The node is not usable, only log a warn message
+      LOG.warn("Try to update resource on a "+ rmNode.getState().toString() +
+          " node: "+rmNode.toString());
+      updateNodeResourceFromEvent(rmNode, (RMNodeResourceUpdateEvent)event);
+      // No need to notify scheduler as schedulerNode is not function now
+      // and can sync later from RMnode.
+    }
+  }
+  

INS26 MOV31 INS40 INS55 INS55 UPD43 MOV78 INS83 UPD83 UPD42 INS44 INS83 INS83 INS42 INS74 MOV31 INS83 INS83 INS42 INS74 INS31 UPD42 UPD42 INS32 UPD43 UPD42 INS43 INS42 INS43 INS42 INS60 INS43 INS43 INS43 MOV78 INS39 INS42 INS44 INS44 INS43 INS43 INS43 MOV78 INS83 INS39 INS42 INS44 INS44 INS8 MOV32 INS42 UPD42 INS22 INS42 INS42 MOV43 INS59 INS25 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS60 INS21 INS21 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS21 INS21 UPD42 INS40 INS40 INS40 INS14 UPD42 MOV52 UPD42 MOV42 INS42 INS32 INS40 INS32 INS32 INS8 UPD42 MOV42 INS42 INS43 INS59 INS32 INS32 INS42 INS42 INS32 INS32 INS43 UPD42 INS42 INS42 INS42 INS42 UPD40 INS32 INS42 INS40 INS21 INS42 INS42 INS11 INS42 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS27 INS42 INS42 INS11 INS42 UPD42 INS42 INS42 INS32 INS43 INS42 INS32 INS42 INS43 INS42 INS32 INS45 INS32 INS45 INS32 INS43 INS42 INS32 INS42 INS14 INS42 INS40 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS42 INS32 INS42 INS42 INS32 INS42 INS40 INS40 INS42 INS42 INS42 INS42 INS40 INS38 INS32 INS42 INS40 INS40 INS40 MOV14 INS34 INS32 INS42 MOV40 MOV32 INS40 MOV14 INS32 INS42 INS40 INS40 INS40 INS14 MOV32 MOV42 INS40 INS40 INS40 INS14 INS43 UPD40 UPD40 UPD40 INS14 INS43 INS42 UPD40 INS40 UPD40 INS14 INS43 INS42 INS43 INS42 INS42 INS32 INS42 MOV32 MOV42 INS40 INS40 INS40 INS14 INS43 INS42 DEL22 DEL42 DEL32 DEL42 DEL52 DEL42 DEL22 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL41