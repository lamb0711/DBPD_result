Revert "HADOOP-16818. ABFS: Combine append+flush calls for blockblob & appendblob"

This reverts commit 3612317038196ee0cb6d7204056d54b7a7ed8bf7.

Change-Id: Ie0d36f25de0b55a937894f4d9963c495bae0576a

-  private boolean supportAppendWithFlush;
-  private boolean appendBlob;
-      final boolean disableOutputStreamFlush,
-      final boolean supportAppendWithFlush,
-      final boolean appendBlob) {
+      final boolean disableOutputStreamFlush) {
-    this.disableOutputStreamFlush = disableOutputStreamFlush;
-    this.supportAppendWithFlush = supportAppendWithFlush;
-    this.appendBlob = appendBlob;
+
-        writeCurrentBufferToService(false, false);
+        writeCurrentBufferToService();
-    writeAndFlushWrittenBytesToService(isClose);
+    writeCurrentBufferToService();
+    flushWrittenBytesToService(isClose);
-    writeCurrentBufferToService(true, false);
+    writeCurrentBufferToService();
-  private synchronized void writeCurrentBufferToService(final boolean flush, final boolean isClose) throws IOException {
+  private synchronized void writeCurrentBufferToService() throws IOException {
-    if (this.appendBlob) {
-        client.append(path, offset, bytes, 0,
-            bytesLength, flush, isClose);
-        lastTotalAppendOffset += bytesLength;
-        if (flush) {
-          lastFlushOffset = lastTotalAppendOffset;
-        }
-        return;
-    }
-
-          if (flush) {
-            /* Append with Flush enabled should happen
-             * when all the data which was supposed to be
-             * appended has been sent and finished.
-             */
-            while(lastTotalAppendOffset <  lastFlushOffset);
-          }
-              bytesLength, flush, isClose);
+                  bytesLength);
-    writeOperations.add(new WriteOperation(job, offset, bytesLength, flush));
+    writeOperations.add(new WriteOperation(job, offset, bytesLength));
+
-    shrinkWriteOperationQueue();
-  }
-
-  private synchronized void completeExistingTasks() throws IOException {
-    for (WriteOperation writeOperation : writeOperations) {
-      try {
-        writeOperation.task.get();
-      } catch (Exception ex) {
-        if (ex.getCause() instanceof AbfsRestOperationException) {
-          if (((AbfsRestOperationException) ex.getCause()).getStatusCode() == HttpURLConnection.HTTP_NOT_FOUND) {
-            throw new FileNotFoundException(ex.getMessage());
-          }
-        }
-        if (ex.getCause() instanceof AzureBlobFileSystemException) {
-          ex = (AzureBlobFileSystemException) ex.getCause();
-        }
-        lastError = new IOException(ex);
-        throw lastError;
-      }
-    }
-    shrinkWriteOperationQueue();
-  }
-
-  private synchronized void writeAndFlushWrittenBytesToService(boolean isClose) throws IOException {
-    completeExistingTasks();
-    writeCurrentBufferToService(supportAppendWithFlush, isClose);
-    completeExistingTasks();
-    if (this.lastTotalAppendOffset > this.lastFlushOffset) {
-      flushWrittenBytesToServiceInternal(position, false, isClose);
-    }
+    flushWrittenBytesToServiceInternal(position, false, isClose);
-        if (writeOperations.peek().isFlush) {
-          lastFlushOffset = lastTotalAppendOffset;
-        }
-    private final boolean isFlush;
-    WriteOperation(final Future<Void> task, final long startOffset, final long length, final boolean flush) {
+    WriteOperation(final Future<Void> task, final long startOffset, final long length) {
-      this.isFlush = flush;

MOV31 MOV21 UPD42 MOV44 MOV43 MOV43 MOV21 MOV21 MOV39 MOV42 UPD42 INS42 UPD42 MOV9 INS42 DEL83 DEL39 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL44 DEL83 DEL39 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL9 DEL9 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL27 DEL8 DEL25 DEL83 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL9 DEL9 DEL83 DEL39 DEL42 DEL44 DEL83 DEL39 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL42 DEL42 DEL34 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25 DEL41 DEL8 DEL25 DEL42 DEL42 DEL42 DEL27 DEL20 DEL61 DEL8 DEL25 DEL42 DEL42 DEL42 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL44 DEL42 DEL40 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL43 DEL62 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL36 DEL42 DEL32 DEL40 DEL27 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL25 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL43 DEL62 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL11 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL42 DEL53 DEL8 DEL12 DEL54 DEL8 DEL70 DEL42 DEL32 DEL21 DEL8 DEL31 DEL42 DEL42 DEL32 DEL42 DEL22 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21