YARN-834. Fixed annotations for yarn-client module, reorganized packages and clearly differentiated *Async apis. Contributed by Arun C Murthy and Zhijie Shen.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494017 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.hadoop.yarn.client;
+package org.apache.hadoop.yarn.client.api.impl;
-import org.apache.hadoop.yarn.client.AMRMClient.ContainerRequest;
+import org.apache.hadoop.yarn.client.api.AMRMClient;
+import org.apache.hadoop.yarn.client.api.AMRMClient.ContainerRequest;
+@Private
-    if (req.racks != null) {
-      allRacks.addAll(req.racks);
-      if(req.racks.size() != allRacks.size()) {
+    if (req.getRacks() != null) {
+      allRacks.addAll(req.getRacks());
+      if(req.getRacks().size() != allRacks.size()) {
-            + joiner.join(req.racks));
+            + joiner.join(req.getRacks()));
-    allRacks.addAll(resolveRacks(req.nodes));
+    allRacks.addAll(resolveRacks(req.getNodes()));
-    if (req.nodes != null) {
-      HashSet<String> dedupedNodes = new HashSet<String>(req.nodes);
-      if(dedupedNodes.size() != req.nodes.size()) {
+    if (req.getNodes() != null) {
+      HashSet<String> dedupedNodes = new HashSet<String>(req.getNodes());
+      if(dedupedNodes.size() != req.getNodes().size()) {
-            + joiner.join(req.nodes));        
+            + joiner.join(req.getNodes()));        
-        addResourceRequest(req.priority, node, req.capability,
-            req.containerCount, req);
+        addResourceRequest(req.getPriority(), node, req.getCapability(),
+            req.getContainerCount(), req);
-      addResourceRequest(req.priority, rack, req.capability,
-          req.containerCount, req);
+      addResourceRequest(req.getPriority(), rack, req.getCapability(),
+          req.getContainerCount(), req);
-    addResourceRequest(req.priority, ResourceRequest.ANY, req.capability,
-        req.containerCount, req);
+    addResourceRequest(req.getPriority(), ResourceRequest.ANY, req.getCapability(),
+        req.getContainerCount(), req);
-    if (req.racks != null) {
-      allRacks.addAll(req.racks);
+    if (req.getRacks() != null) {
+      allRacks.addAll(req.getRacks());
-    allRacks.addAll(resolveRacks(req.nodes));
+    allRacks.addAll(resolveRacks(req.getNodes()));
-    if (req.nodes != null) {
-      for (String node : new HashSet<String>(req.nodes)) {
-        decResourceRequest(req.priority, node, req.capability,
-            req.containerCount, req);
+    if (req.getNodes() != null) {
+      for (String node : new HashSet<String>(req.getNodes())) {
+        decResourceRequest(req.getPriority(), node, req.getCapability(),
+            req.getContainerCount(), req);
-      decResourceRequest(req.priority, rack, req.capability,
-          req.containerCount, req);
+      decResourceRequest(req.getPriority(), rack, req.getCapability(),
+          req.getContainerCount(), req);
-    decResourceRequest(req.priority, ResourceRequest.ANY, req.capability,
-        req.containerCount, req);
+    decResourceRequest(req.getPriority(), ResourceRequest.ANY, req.getCapability(),
+        req.getContainerCount(), req);

INS26 UPD40 INS40 UPD40 INS78 INS42 INS32 INS32 INS32 INS32 INS32 INS42 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 MOV74 INS42 INS42 MOV42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 MOV42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS32 INS42 INS32 INS42 INS42 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS32 MOV74 INS32 INS32 INS42 INS42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS32 INS32 INS32 INS42 INS42 INS42 MOV42 INS42 INS42 INS42 INS42 INS42 MOV42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40