Reverting the previous merge r1416603 which committed some extra changes

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1416712 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.hdfs.server.namenode.snapshot.Snapshot;
-  /** A dummy INode which can be used as a probe object. */
-  public static final INode DUMMY = new INode() {
-    @Override
-    int collectSubtreeBlocksAndClear(BlocksMapUpdateInfo info) {
-      throw new UnsupportedOperationException();
-    }
-    @Override
-    long[] computeContentSummary(long[] summary) {
-      throw new UnsupportedOperationException();
-    }
-    @Override
-    DirCounts spaceConsumedInTree(DirCounts counts) {
-      throw new UnsupportedOperationException();
-    }
-  };
-  /**
-   * Assert that the snapshot parameter must be null since
-   * this class only take care current state. 
-   * Subclasses should override the methods for handling the snapshot states.
-   */
-  static void assertNull(Snapshot snapshot) {
-    if (snapshot != null) {
-      throw new AssertionError("snapshot is not null: " + snapshot);
-    }
-  }
-  INodeDirectory parent = null;
-  private long modificationTime = 0L;
-  private long accessTime = 0L;
-  
-  /** For creating the a {@link #DUMMY} object. */
-  private INode() {}
+  protected INodeDirectory parent = null;
+  protected long modificationTime = 0L;
+  protected long accessTime = 0L;
-    this(other.name, other.permission, other.parent, 
-        other.modificationTime, other.accessTime);
+    this(other.getLocalNameBytes(), other.permission, other.getParent(), 
+        other.getModificationTime(), other.getAccessTime());
-    setLocalName(DFSUtil.string2Bytes(name));
+    this.name = DFSUtil.string2Bytes(name);
-  public void setLocalName(byte[] name) {
+  void setLocalName(byte[] name) {
-  public INodeDirectory getParent() {
+  INodeDirectory getParent() {
-  public void updateModificationTime(long modtime) {
+  public void setModificationTime(long modtime) {
-      setModificationTime(modtime);
+      this.modificationTime = modtime;
-  void cloneModificationTime(INode that) {
-    this.modificationTime = that.modificationTime;
-  }
-
-  void setModificationTime(long modtime) {
+  void setModificationTimeForce(long modtime) {
-  public boolean removeNode(Snapshot latestSnapshot) {
+  public boolean removeNode() {
-      parent.removeChild(this, latestSnapshot);
+      parent.removeChild(this);

INS31 INS83 UPD83 UPD83 MOV29 INS42 MOV44 INS8 UPD42 UPD42 INS17 INS32 INS40 INS32 INS32 INS32 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS22 MOV32 INS52 INS42 INS7 INS22 INS42 INS52 INS42 DEL40 DEL26 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL78 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL14 DEL53 DEL8 DEL31 DEL42 DEL78 DEL39 DEL85 DEL5 DEL42 DEL39 DEL85 DEL5 DEL42 DEL44 DEL42 DEL43 DEL14 DEL53 DEL8 DEL31 DEL42 DEL78 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL14 DEL53 DEL8 DEL31 DEL1 DEL14 DEL59 DEL23 DEL66 DEL66 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL8 DEL31 DEL66 DEL42 DEL67 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL8 DEL31 DEL42 DEL40 DEL40 DEL40 DEL40 DEL40 DEL17 DEL8 DEL31 DEL42 DEL32 DEL83 DEL83 DEL42 DEL42 DEL32 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL40 DEL7 DEL21 DEL8 DEL31 DEL42 DEL43 DEL42 DEL44 DEL42