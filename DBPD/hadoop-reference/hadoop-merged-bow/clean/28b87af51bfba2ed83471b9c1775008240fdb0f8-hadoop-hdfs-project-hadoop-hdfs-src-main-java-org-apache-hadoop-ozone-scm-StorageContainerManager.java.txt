HDFS-13013. Fix closeContainer API with the right container state change. Contributed by Xiaoyu Yao.

-import org.apache.hadoop.ozone.protocol.proto.StorageContainerLocationProtocolProtos.NotifyObjectCreationStageRequestProto;
+import org.apache.hadoop.ozone.protocol.proto.StorageContainerLocationProtocolProtos.ObjectStageChangeRequestProto;
-   * Notify from client when begin/finish creating container/pipeline objects
-   * on datanodes.
+   * Notify from client when begin/finish operation for container/pipeline
+   * objects on datanodes.
+   * @param op
-  public void notifyObjectCreationStage(
-      NotifyObjectCreationStageRequestProto.Type type, String name,
-      NotifyObjectCreationStageRequestProto.Stage stage) throws IOException {
+  public void notifyObjectStageChange(
+      ObjectStageChangeRequestProto.Type type, String name,
+      ObjectStageChangeRequestProto.Op op,
+      ObjectStageChangeRequestProto.Stage stage) throws IOException {
-    if (type == NotifyObjectCreationStageRequestProto.Type.container) {
-      ContainerInfo info = scmContainerManager.getContainer(name);
-      LOG.info("Container {} current state {} new stage {}", name,
-          info.getState(), stage);
-      if (stage == NotifyObjectCreationStageRequestProto.Stage.begin) {
-        scmContainerManager.updateContainerState(name,
-            OzoneProtos.LifeCycleEvent.CREATE);
-      } else {
-        scmContainerManager.updateContainerState(name,
-            OzoneProtos.LifeCycleEvent.CREATED);
+    LOG.info("Object type {} name {} op {} new stage {}",
+        type, name, op, stage);
+    if (type == ObjectStageChangeRequestProto.Type.container) {
+      if (op == ObjectStageChangeRequestProto.Op.create) {
+        if (stage == ObjectStageChangeRequestProto.Stage.begin) {
+          scmContainerManager.updateContainerState(name,
+              OzoneProtos.LifeCycleEvent.CREATE);
+        } else {
+          scmContainerManager.updateContainerState(name,
+              OzoneProtos.LifeCycleEvent.CREATED);
+        }
+      } else if (op == ObjectStageChangeRequestProto.Op.close) {
+        if (stage == ObjectStageChangeRequestProto.Stage.begin) {
+          scmContainerManager.updateContainerState(name,
+              OzoneProtos.LifeCycleEvent.FINALIZE);
+        } else {
+          scmContainerManager.updateContainerState(name,
+              OzoneProtos.LifeCycleEvent.CLOSE);
+        }
-    } else if (type == NotifyObjectCreationStageRequestProto.Type.pipeline) {
-      // TODO: pipeline state update will be addressed in future patch.
-    }
+    } //else if (type == ObjectStageChangeRequestProto.Type.pipeline) {
+    // TODO: pipeline state update will be addressed in future patch.
+    //}
-  @Override
-  public void closeContainer(String containerName) throws IOException {
-    checkAdminAccess();
-    scmContainerManager.closeContainer(containerName);
-  }
-

UPD40 INS31 MOV29 MOV78 MOV83 MOV39 UPD42 MOV42 MOV44 MOV44 INS44 MOV44 MOV43 INS8 INS65 UPD43 INS43 INS42 UPD43 INS21 INS25 UPD66 UPD66 INS42 UPD40 INS40 UPD40 INS32 MOV27 INS8 INS42 INS42 INS45 INS42 INS42 INS42 INS42 UPD40 INS25 MOV27 MOV8 INS25 UPD42 UPD40 INS27 INS8 INS42 INS40 INS25 UPD40 INS27 INS8 INS8 INS42 INS40 INS21 MOV21 INS32 INS42 INS42 INS42 INS40 UPD42 UPD42 INS40 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL25 DEL25 DEL8 DEL31 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL32 DEL21 DEL8 DEL31