YARN-2617. Fixed NM to not send duplicate container status whose app is not running. Contributed by Jun Gong

+import org.apache.hadoop.yarn.server.nodemanager.containermanager.application.ApplicationState;
-      if (!this.context.getApplications().containsKey(applicationId)) {
-        context.getContainers().remove(containerId);
-        continue;
-      }
-      if (containerStatus.getState().equals(ContainerState.COMPLETE)) {
-        // Adding to finished containers cache. Cache will keep it around at
-        // least for #durationToTrackStoppedContainers duration. In the
-        // subsequent call to stop container it will get removed from cache.
-        addCompletedContainer(container.getContainerId());
+      if (containerStatus.getState() == ContainerState.COMPLETE) {
+        if (isApplicationStopped(applicationId)) {
+          if (LOG.isDebugEnabled()) {
+            LOG.debug(applicationId + " is completing, " + " remove "
+                + containerId + " from NM context.");
+          }
+          context.getContainers().remove(containerId);
+        } else {
+          // Adding to finished containers cache. Cache will keep it around at
+          // least for #durationToTrackStoppedContainers duration. In the
+          // subsequent call to stop container it will get removed from cache.
+          addCompletedContainer(container.getContainerId());
+        }
-      if (status.getContainerState().equals(ContainerState.COMPLETE)) {
+      if (status.getContainerState() == ContainerState.COMPLETE) {
+  private boolean isApplicationStopped(ApplicationId applicationId) {
+    if (!this.context.getApplications().containsKey(applicationId)) {
+      return true;
+    }
+
+    ApplicationState applicationState = this.context.getApplications().get(
+        applicationId).getApplicationState();
+    if (applicationState == ApplicationState.FINISHING_CONTAINERS_WAIT
+        || applicationState == ApplicationState.APPLICATION_RESOURCES_CLEANINGUP
+        || applicationState == ApplicationState.FINISHED) {
+      return true;
+    } else {
+      return false;
+    }
+  }
+

INS26 INS40 INS31 INS83 INS39 INS42 INS44 INS8 INS43 INS42 INS25 INS60 INS25 INS42 INS38 INS8 INS43 INS59 INS27 INS8 INS8 INS25 INS32 INS41 INS42 INS42 INS32 INS27 INS27 INS41 INS41 INS27 INS8 INS27 INS32 INS42 INS42 INS9 INS32 INS42 INS27 INS27 INS42 INS40 INS9 INS9 MOV32 INS40 MOV25 MOV32 INS40 INS22 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS40 INS32 INS8 MOV8 INS52 INS42 INS22 INS42 INS42 UPD42 MOV42 INS25 MOV21 INS52 INS42 INS32 INS8 UPD42 MOV42 INS42 INS21 INS32 INS42 INS42 INS27 INS42 INS45 INS45 INS42 INS45 DEL52 DEL42 DEL22 DEL32 DEL42 DEL32 DEL38 DEL18 DEL8 DEL42 DEL40 DEL32 DEL25 DEL42 DEL40 DEL32