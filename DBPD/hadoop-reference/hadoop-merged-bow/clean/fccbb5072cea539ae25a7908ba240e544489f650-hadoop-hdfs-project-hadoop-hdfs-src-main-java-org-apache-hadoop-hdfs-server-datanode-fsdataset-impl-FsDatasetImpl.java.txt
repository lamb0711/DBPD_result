merge of r1535792 through r1540238 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1540239 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.concurrent.Executor;
-import org.apache.commons.io.IOUtils;
-    // uncache the block
+    // If the block is cached, start uncaching it.
-
-      // Uncache the block synchronously
+      // If the block is cached, start uncaching it.
-      // Delete the block asynchronously to make sure we can do it fast enough
+      // Delete the block asynchronously to make sure we can do it fast enough.
+      // It's ok to unlink the block file before the uncache operation
+      // finishes.
-  synchronized boolean validToCache(String bpid, long blockId) {
-    ReplicaInfo info = volumeMap.get(bpid, blockId);
-    if (info == null) {
-      LOG.warn("Failed to cache replica in block pool " + bpid +
-          " with block id " + blockId + ": ReplicaInfo not found.");
-      return false;
-    }
-    FsVolumeImpl volume = (FsVolumeImpl)info.getVolume();
-    if (volume == null) {
-      LOG.warn("Failed to cache block with id " + blockId +
-          ": Volume not found.");
-      return false;
-    }
-    if (info.getState() != ReplicaState.FINALIZED) {
-      LOG.warn("Failed to block with id " + blockId + 
-          ": Replica is not finalized.");
-      return false;
-    }
-    return true;
-  }
-
-    ReplicaInfo info;
+    String blockFileName;
+    long length, genstamp;
+    Executor volumeExecutor;
+
-      if (!validToCache(bpid, blockId)) {
+      ReplicaInfo info = volumeMap.get(bpid, blockId);
+      if (info == null) {
+        LOG.warn("Failed to cache block with id " + blockId + ", pool " +
+            bpid + ": ReplicaInfo not found.");
-      info = volumeMap.get(bpid, blockId);
-      volume = (FsVolumeImpl)info.getVolume();
+      if (info.getState() != ReplicaState.FINALIZED) {
+        LOG.warn("Failed to cache block with id " + blockId + ", pool " +
+            bpid + ": replica is not finalized; it is in state " +
+            info.getState());
+        return;
+      }
+      try {
+        volume = (FsVolumeImpl)info.getVolume();
+        if (volume == null) {
+          LOG.warn("Failed to cache block with id " + blockId + ", pool " +
+              bpid + ": volume not found.");
+          return;
+        }
+      } catch (ClassCastException e) {
+        LOG.warn("Failed to cache block with id " + blockId +
+            ": volume was not an instance of FsVolumeImpl.");
+        return;
+      }
+      blockFileName = info.getBlockFile().getAbsolutePath();
+      length = info.getVisibleLength();
+      genstamp = info.getGenerationStamp();
+      volumeExecutor = volume.getCacheExecutor();
-    // Try to open block and meta streams
-    FileInputStream blockIn = null;
-    FileInputStream metaIn = null;
-    boolean success = false;
-    ExtendedBlock extBlk =
-        new ExtendedBlock(bpid, blockId,
-            info.getBytesOnDisk(), info.getGenerationStamp());
-    try {
-      blockIn = (FileInputStream)getBlockInputStream(extBlk, 0);
-      metaIn = (FileInputStream)getMetaDataInputStream(extBlk)
-          .getWrappedStream();
-      success = true;
-    } catch (ClassCastException e) {
-      LOG.warn("Failed to cache replica " + extBlk + ": Underlying blocks"
-          + " are not backed by files.", e);
-    } catch (IOException e) {
-      LOG.warn("Failed to cache replica " + extBlk + ": IOException while"
-          + " trying to open block or meta files.", e);
-    }
-    if (!success) {
-      IOUtils.closeQuietly(blockIn);
-      IOUtils.closeQuietly(metaIn);
-      return;
-    }
-    cacheManager.cacheBlock(bpid, extBlk.getLocalBlock(),
-        volume, blockIn, metaIn);
+    cacheManager.cacheBlock(blockId, bpid, 
+        blockFileName, length, genstamp, volumeExecutor);

MOV26 UPD40 INS31 MOV29 UPD83 MOV83 UPD39 MOV39 UPD42 MOV42 MOV44 MOV44 INS8 MOV60 INS60 INS60 INS60 INS51 MOV21 INS43 INS59 INS39 INS59 INS59 INS43 INS59 INS52 INS8 MOV42 INS42 INS42 INS42 INS42 INS42 MOV60 MOV25 INS25 INS54 MOV21 INS21 MOV21 MOV21 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 UPD42 MOV27 INS8 INS8 INS12 INS7 INS21 INS41 MOV21 MOV25 MOV44 INS8 UPD42 INS42 INS32 INS42 MOV32 UPD42 INS32 INS32 MOV21 MOV41 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS27 UPD42 MOV42 UPD42 MOV42 UPD45 UPD42 UPD45 UPD42 INS45 INS42 INS45 INS42 INS45 INS32 MOV42 UPD42 MOV42 UPD45 UPD45 INS45 INS42 UPD45 DEL9 DEL9 DEL9 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL34 DEL32 DEL11 DEL42 DEL43 DEL42 DEL32 DEL32 DEL11 DEL32 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL32 DEL11 DEL59 DEL60 DEL8 DEL25 DEL9 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL59 DEL60 DEL52 DEL42 DEL42 DEL42 DEL32 DEL38 DEL41 DEL8 DEL25 DEL8 DEL51 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL42 DEL45 DEL45 DEL27 DEL42 DEL32 DEL21 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL45 DEL45 DEL27 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL42 DEL38 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL41 DEL8 DEL25 DEL8 DEL31