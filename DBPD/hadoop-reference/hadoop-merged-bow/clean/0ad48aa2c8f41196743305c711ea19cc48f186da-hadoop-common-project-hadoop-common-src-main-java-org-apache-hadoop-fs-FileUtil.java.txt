HADOOP-12747. support wildcard in libjars argument (sjlee)

-import java.io.*;
+import java.io.BufferedInputStream;
+import java.io.BufferedOutputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
-import org.apache.hadoop.util.StringUtils;
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.util.StringUtils;
-        boolean foundWildCardJar = false;
-        Path globPath = new Path(classPathEntry).suffix("{.jar,.JAR}");
-        FileStatus[] wildcardJars = FileContext.getLocalFSFileContext().util()
-          .globStatus(globPath);
-        if (wildcardJars != null) {
-          for (FileStatus wildcardJar: wildcardJars) {
-            foundWildCardJar = true;
-            classPathEntryList.add(wildcardJar.getPath().toUri().toURL()
-              .toExternalForm());
+        List<Path> jars = getJarsInDirectory(classPathEntry);
+        if (!jars.isEmpty()) {
+          for (Path jar: jars) {
+            classPathEntryList.add(jar.toUri().toURL().toExternalForm());
-        }
-        if (!foundWildCardJar) {
+        } else {
+  /**
+   * Returns all jars that are in the directory. It is useful in expanding a
+   * wildcard path to return all jars from the directory to use in a classpath.
+   * It operates only on local paths.
+   *
+   * @param path the path to the directory. The path may include the wildcard.
+   * @return the list of jars as URLs, or an empty list if there are no jars, or
+   * the directory does not exist locally
+   */
+  public static List<Path> getJarsInDirectory(String path) {
+    return getJarsInDirectory(path, true);
+  }
+
+  /**
+   * Returns all jars that are in the directory. It is useful in expanding a
+   * wildcard path to return all jars from the directory to use in a classpath.
+   *
+   * @param path the path to the directory. The path may include the wildcard.
+   * @return the list of jars as URLs, or an empty list if there are no jars, or
+   * the directory does not exist
+   */
+  public static List<Path> getJarsInDirectory(String path, boolean useLocal) {
+    List<Path> paths = new ArrayList<>();
+    try {
+      // add the wildcard if it is not provided
+      if (!path.endsWith("*")) {
+        path += File.separator + "*";
+      }
+      Path globPath = new Path(path).suffix("{.jar,.JAR}");
+      FileContext context = useLocal ?
+          FileContext.getLocalFSFileContext() :
+          FileContext.getFileContext(globPath.toUri());
+      FileStatus[] files = context.util().globStatus(globPath);
+      if (files != null) {
+        for (FileStatus file: files) {
+          paths.add(file.getPath());
+        }
+      }
+    } catch (IOException ignore) {} // return the empty list
+    return paths;
+  }
+

MOV26 MOV26 MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 UPD40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS29 INS83 INS83 INS74 INS42 INS44 INS8 INS29 INS83 INS83 INS74 INS42 INS44 INS44 INS8 INS65 INS65 INS65 INS43 INS43 INS43 INS42 INS41 INS65 INS65 INS65 INS43 INS43 INS43 INS42 INS39 INS42 INS60 INS54 INS41 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS42 INS42 INS42 INS32 INS66 INS66 INS42 INS66 INS66 INS66 INS42 INS42 INS42 INS74 INS59 INS8 INS12 INS42 INS42 INS42 INS9 INS43 INS43 INS42 INS14 INS25 INS60 INS60 INS60 INS25 INS44 INS8 INS42 INS42 INS74 INS38 INS8 MOV43 INS59 INS43 INS59 MOV5 INS59 INS27 INS8 INS43 INS42 INS60 INS43 INS32 INS21 INS42 INS32 INS42 INS42 INS16 INS42 INS32 INS42 INS33 INS70 INS42 INS74 MOV59 INS8 INS42 INS42 INS42 INS45 INS7 INS14 INS42 INS45 INS42 MOV32 INS32 INS32 INS42 INS42 MOV44 INS42 INS8 INS43 INS43 UPD42 INS32 INS70 INS42 INS27 INS43 INS42 INS42 INS42 INS32 INS42 INS42 UPD42 INS21 INS42 INS42 UPD42 UPD42 INS42 INS42 INS44 INS42 INS8 INS40 INS45 INS42 INS42 INS42 INS32 MOV43 INS42 INS21 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 DEL42 DEL32 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL42 DEL14 DEL42 DEL45 DEL32 DEL59 DEL60 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL9 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL8 DEL25 DEL42