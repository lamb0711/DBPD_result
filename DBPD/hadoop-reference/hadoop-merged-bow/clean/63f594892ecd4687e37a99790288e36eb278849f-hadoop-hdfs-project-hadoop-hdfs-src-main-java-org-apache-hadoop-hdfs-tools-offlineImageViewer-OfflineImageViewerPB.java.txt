HDFS-10778. Add -format option to make the output of FileDistribution processor human-readable in OfflineImageViewer.

+      + "    -format formats the output result in a human-readable fashion\n"
+      + "     rather than a number of bytes. (false by default)\n"
+    options.addOption("format", false, "");
-        case "FileDistribution":
-          long maxSize = Long.parseLong(cmd.getOptionValue("maxSize", "0"));
-          int step = Integer.parseInt(cmd.getOptionValue("step", "0"));
-          new FileDistributionCalculator(conf, maxSize, step, out).visit(
-              new RandomAccessFile(inputFile, "r"));
-          break;
-        case "XML":
-          new PBImageXmlWriter(conf, out).visit(
-              new RandomAccessFile(inputFile, "r"));
-          break;
-        case "ReverseXML":
-          try {
-            OfflineImageReconstructor.run(inputFile, outputFile);
-          } catch (Exception e) {
-            System.err.println("OfflineImageReconstructor failed: " +
-                e.getMessage());
-            e.printStackTrace(System.err);
-            System.exit(1);
-          }
-          break;
-        case "Web":
-          String addr = cmd.getOptionValue("addr", "localhost:5978");
-          try (WebImageViewer viewer = new WebImageViewer(
-              NetUtils.createSocketAddr(addr))) {
-            viewer.start(inputFile);
-          }
-          break;
-        case "Delimited":
-          try (PBImageDelimitedTextWriter writer =
-              new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {
-            writer.visit(new RandomAccessFile(inputFile, "r"));
-          }
-          break;
-        default:
-          System.err.println("Invalid processor specified : " + processor);
-          printUsage();
-          return -1;
+      case "FileDistribution":
+        long maxSize = Long.parseLong(cmd.getOptionValue("maxSize", "0"));
+        int step = Integer.parseInt(cmd.getOptionValue("step", "0"));
+        boolean formatOutput = cmd.hasOption("format");
+        new FileDistributionCalculator(conf, maxSize, step, formatOutput, out)
+            .visit(new RandomAccessFile(inputFile, "r"));
+        break;
+      case "XML":
+        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,
+            "r"));
+        break;
+      case "ReverseXML":
+        try {
+          OfflineImageReconstructor.run(inputFile, outputFile);
+        } catch (Exception e) {
+          System.err.println("OfflineImageReconstructor failed: "
+              + e.getMessage());
+          e.printStackTrace(System.err);
+          System.exit(1);
+        }
+        break;
+      case "Web":
+        String addr = cmd.getOptionValue("addr", "localhost:5978");
+        try (WebImageViewer viewer =
+            new WebImageViewer(NetUtils.createSocketAddr(addr))) {
+          viewer.start(inputFile);
+        }
+        break;
+      case "Delimited":
+        try (PBImageDelimitedTextWriter writer =
+            new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {
+          writer.visit(new RandomAccessFile(inputFile, "r"));
+        }
+        break;
+      default:
+        System.err.println("Invalid processor specified : " + processor);
+        printUsage();
+        return -1;

INS21 INS45 INS45 INS32 INS42 INS42 INS45 INS9 INS45 INS60 INS39 INS59 INS42 INS32 INS42 INS42 INS45 INS42