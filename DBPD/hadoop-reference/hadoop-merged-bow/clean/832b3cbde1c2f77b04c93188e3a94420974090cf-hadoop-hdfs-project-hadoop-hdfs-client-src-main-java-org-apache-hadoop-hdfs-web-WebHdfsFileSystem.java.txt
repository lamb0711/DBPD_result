HDFS-9525. hadoop utilities need to support provided delegation tokens (HeeSoo Kim via aw)

-    if (canRefreshDelegationToken && delegationToken == null) {
+    if (delegationToken == null) {
-        token = getDelegationToken(null);
-        if (token != null) {
-          LOG.debug("Fetched new token: {}", token);
-        } else { // security is disabled
-          canRefreshDelegationToken = false;
+        if (canRefreshDelegationToken) {
+          token = getDelegationToken(null);
+          if (token != null) {
+            LOG.debug("Fetched new token: {}", token);
+          } else { // security is disabled
+            canRefreshDelegationToken = false;
+          }
+      this.delegationToken = null;
-      FileStatus[] decodeResponse(Map<?,?> json) {
+      FileStatus[] decodeResponse(Map<?, ?> json) {
-  public Token<DelegationTokenIdentifier> getDelegationToken(
+  public synchronized Token<DelegationTokenIdentifier> getDelegationToken(
-    Token<DelegationTokenIdentifier> token =
-        new FsPathResponseRunner<Token<DelegationTokenIdentifier>>(
-            op, null, new RenewerParam(renewer)) {
+    Token<DelegationTokenIdentifier> token = null;
+
+    if (delegationToken == null) {
+      token =
+          new FsPathResponseRunner<Token<DelegationTokenIdentifier>>(
+              op, null, new RenewerParam(renewer)) {
-          Token<DelegationTokenIdentifier> decodeResponse(Map<?,?> json)
+          Token<DelegationTokenIdentifier> decodeResponse(Map<?, ?> json)
+    } else {
+      token =
+          new FsPathResponseRunner<Token<DelegationTokenIdentifier>>(
+              op, null, new RenewerParam(renewer),
+              new DelegationParam(delegationToken.encodeToUrlString())) {
+          @Override
+          Token<DelegationTokenIdentifier> decodeResponse(Map<?, ?> json)
+              throws IOException {
+            return JsonUtilClient.toDelegationToken(json);
+          }
+        }.run();
+    }
+
-    return new FsPathResponseRunner<Long>(op, null,
-        new TokenArgumentParam(token.encodeToUrlString())) {
-      @Override
-      Long decodeResponse(Map<?,?> json) throws IOException {
-        return ((Number) json.get("long")).longValue();
-      }
-    }.run();
+
+    if (delegationToken == null) {
+      return new FsPathResponseRunner<Long>(op, null,
+          new TokenArgumentParam(token.encodeToUrlString())) {
+        @Override
+        Long decodeResponse(Map<?, ?> json) throws IOException {
+          return ((Number) json.get("long")).longValue();
+        }
+      }.run();
+    } else {
+      return new FsPathResponseRunner<Long>(op, null,
+          new TokenArgumentParam(token.encodeToUrlString()),
+          new DelegationParam(delegationToken.encodeToUrlString())) {
+        @Override
+        Long decodeResponse(Map<?, ?> json) throws IOException {
+          return ((Number) json.get("long")).longValue();
+        }
+      }.run();
+    }
+

INS83 INS8 INS25 MOV60 INS25 UPD27 MOV27 INS8 INS8 INS27 MOV8 INS8 UPD42 INS33 INS21 INS33 INS21 INS21 INS42 INS33 INS41 INS8 INS7 INS7 INS7 INS32 INS25 INS22 INS33 INS42 MOV32 INS42 INS32 INS14 INS42 INS42 MOV8 INS52 INS42 INS14 INS42 INS74 INS42 INS33 INS14 INS14 INS1 INS74 INS42 INS33 INS14 INS14 INS1 INS43 INS43 INS43 INS32 INS43 INS32 INS31 INS43 INS74 INS43 INS42 INS43 INS32 INS31 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS78 INS43 INS42 INS44 INS43 INS8 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS78 INS74 INS42 INS44 INS43 INS8 INS42 INS42 INS74 INS42 INS42 INS41 INS42 INS42 INS42 INS43 INS43 INS74 INS42 INS42 INS41 INS43 INS76 INS76 INS32 INS42 INS42 INS43 INS76 INS76 INS32 INS42 INS36 INS42 INS42 INS42 INS42 INS42 INS11 INS43 INS32 INS42 INS42 INS42 INS45