YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)

Change-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6

+import org.apache.hadoop.yarn.exceptions.YarnException;
+import org.apache.hadoop.yarn.server.resourcemanager.placement.ApplicationPlacementContext;
+import org.apache.hadoop.yarn.server.resourcemanager.placement.PlacementManager;
+
+
-          String msg = "Failed to fetch user credentials from application:"
-              + e.getMessage();
+          String msg = "Failed to fetch user credentials from application:" + e
+              .getMessage();
-      for (Map.Entry<ApplicationTimeoutType, Long> timeout :
-        app.applicationTimeouts.entrySet()) {
+      for (Map.Entry<ApplicationTimeoutType, Long> timeout : app.applicationTimeouts
+          .entrySet()) {
-              + " remaining timeout="
-              + (remainingTime > 0 ? remainingTime / 1000 : 0) + " seconds");
+              + " remaining timeout=" + (remainingTime > 0 ?
+              remainingTime / 1000 :
+              0) + " seconds");
+      ApplicationPlacementContext placementContext = null;
+      try {
+        placementContext = placeApplication(app.rmContext,
+            app.submissionContext, app.user);
+      } catch (Exception e) {
+        String msg = "Failed to place application to queue :" + e.getMessage();
+        app.diagnostics.append(msg);
+        LOG.error(msg, e);
+      }
+
-        app.scheduler.handle(new AppAddedSchedulerEvent(app.user,
-            app.submissionContext, false, app.applicationPriority));
+        app.scheduler.handle(
+            new AppAddedSchedulerEvent(app.user, app.submissionContext, false,
+                app.applicationPriority, placementContext));
-      app.scheduler.handle(new AppAddedSchedulerEvent(app.user,
-          app.submissionContext, true, app.applicationPriority));
+      app.scheduler.handle(
+          new AppAddedSchedulerEvent(app.user, app.submissionContext, true,
+              app.applicationPriority, placementContext));
-      app.handler.handle(new AppAddedSchedulerEvent(app.user,
-          app.submissionContext, false, app.applicationPriority));
+      ApplicationPlacementContext placementContext = null;
+      try {
+        placementContext = placeApplication(app.rmContext,
+            app.submissionContext, app.user);
+        replaceQueueFromPlacementContext(placementContext,
+            app.submissionContext);
+      } catch (YarnException e) {
+        String msg = "Failed to place application to queue :" + e.getMessage();
+        app.diagnostics.append(msg);
+        LOG.error(msg, e);
+      }
+      app.handler.handle(
+          new AppAddedSchedulerEvent(app.user, app.submissionContext, false,
+              app.applicationPriority, placementContext));
+
+  @VisibleForTesting
+  static ApplicationPlacementContext placeApplication(RMContext rmContext,
+      ApplicationSubmissionContext context, String user) throws YarnException {
+
+    ApplicationPlacementContext placementContext = null;
+    PlacementManager placementManager = rmContext.getQueuePlacementManager();
+
+    if (placementManager != null) {
+      placementContext = placementManager.placeApplication(context, user);
+    } else{
+      LOG.error(
+          "Queue Placement Manager is null. Cannot place application :" + " "
+              + context.getApplicationId() + " to queue ");
+    }
+
+    return placementContext;
+  }
+
+  static void replaceQueueFromPlacementContext(
+      ApplicationPlacementContext placementContext,
+      ApplicationSubmissionContext context) {
+    // Set it to ApplicationSubmissionContext
+    //apply queue mapping only to new application submissions
+    if (placementContext != null && !StringUtils.equals(context.getQueue(),
+        placementContext.getQueue())) {
+      LOG.info("Placed application=" + context.getApplicationId() + " to queue="
+          + placementContext.getQueue() + ", original queue=" + context
+          .getQueue());
+      context.setQueue(placementContext.getQueue());
+    }
+  }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS60 INS25 INS41 INS43 INS42 INS43 INS42 INS25 INS60 INS54 INS60 INS54 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS8 INS42 INS42 INS42 INS27 INS8 INS43 INS59 INS8 INS12 INS43 INS59 INS8 INS12 INS42 INS42 INS33 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS27 INS38 INS21 INS21 INS42 INS42 INS33 INS21 INS44 INS8 INS42 INS42 INS33 INS21 INS21 INS44 INS8 INS42 INS42 INS7 INS32 INS42 INS33 INS32 INS32 INS32 INS7 INS43 INS42 INS60 INS21 INS21 INS42 INS7 INS32 INS43 INS42 INS60 INS21 INS21 MOV43 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS32 INS32 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS32 INS42 INS43 INS59 INS32 INS32 INS42 INS32 INS42 INS42 INS40 INS42 INS43 INS59 INS32 INS32 INS42 INS42 INS42 INS42 INS27 INS32 INS45 INS42 INS42 INS42 INS42 INS45 INS32 INS45 INS32 INS45 INS32 INS42 INS42 INS42 INS40 INS40 INS40 INS42 INS42 INS27 INS40 INS42 INS42 INS42 INS42 INS42 INS42 MOV43 INS42 INS42 INS40 INS40 INS40 INS42 INS42 INS27 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS45 INS32 INS42 INS42 INS42 INS42