YARN-7839. Modify PlacementAlgorithm to Check node capacity before placing request on node. (Panagiotis Garefalakis via asuresh)

+import java.util.HashMap;
+import java.util.Map;
+import java.util.stream.Collectors;
+import org.apache.hadoop.yarn.api.records.NodeId;
+import org.apache.hadoop.yarn.api.records.Resource;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.constraint.api.SchedulingRequestWithPlacementAttempt;
+import org.apache.hadoop.yarn.util.resource.ResourceCalculator;
+import org.apache.hadoop.yarn.util.resource.Resources;
+  private ResourceCalculator resourceCalculator;
+    this.resourceCalculator = rmContext.getScheduler().getResourceCalculator();
-  public boolean attemptPlacementOnNode(ApplicationId appId,
-      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode)
+  boolean attemptPlacementOnNode(ApplicationId appId,
+      Resource availableResources, SchedulingRequest schedulingRequest,
+      SchedulerNode schedulerNode, boolean ignoreResourceCheck)
-    if (PlacementConstraintsUtil.canSatisfyConstraints(appId,
-        schedulingRequest, schedulerNode, constraintManager, tagsManager)) {
-      return true;
-    }
-    return false;
+    boolean fitsInNode = ignoreResourceCheck ||
+        Resources.fitsIn(resourceCalculator,
+            schedulingRequest.getResourceSizing().getResources(),
+            availableResources);
+    boolean constraintsSatisfied =
+        PlacementConstraintsUtil.canSatisfyConstraints(appId,
+        schedulingRequest, schedulerNode, constraintManager, tagsManager);
+    return fitsInNode && constraintsSatisfied;
+    int placementAttempt = requests.getPlacementAttempt();
+    Map<NodeId, Resource> availResources = new HashMap<>();
-      doPlacement(requests, resp, allNodes, rejectedRequests);
+      doPlacement(requests, resp, allNodes, rejectedRequests, availResources);
-          rejectedRequests);
+          rejectedRequests, availResources);
-    resp.getRejectedRequests().addAll(rejectedRequests);
+    resp.getRejectedRequests().addAll(
+        rejectedRequests.stream().map(
+            x -> new SchedulingRequestWithPlacementAttempt(
+                placementAttempt, x)).collect(Collectors.toList()));
-      List<SchedulingRequest> rejectedRequests) {
+      List<SchedulingRequest> rejectedRequests,
+      Map<NodeId, Resource> availableResources) {
+          Resource unallocatedResource =
+              availableResources.computeIfAbsent(node.getNodeID(),
+                  x -> Resource.newInstance(node.getUnallocatedResource()));
-                  requests.getApplicationId(), schedulingRequest, node)) {
+                  requests.getApplicationId(), unallocatedResource,
+                  schedulingRequest, node, false)) {
+            Resources.addTo(unallocatedResource,
+                schedulingRequest.getResourceSizing().getResources());
+   * @param availableResources
-      List<SchedulingRequest> rejectedRequests) {
+      List<SchedulingRequest> rejectedRequests,
+      Map<NodeId, Resource> availableResources) {
-          if (!attemptPlacementOnNode(
-              applicationId, pReq.getSchedulingRequest(), node)) {
+          Resource availOnNode = availableResources.get(node.getNodeID());
+          if (!attemptPlacementOnNode(applicationId, availOnNode,
+              pReq.getSchedulingRequest(), node, true)) {
+            Resources.subtractFrom(availOnNode,
+                pReq.getSchedulingRequest().getResourceSizing().getResources());

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS83 INS43 INS59 INS44 INS44 INS8 INS44 INS44 INS42 INS42 INS21 INS43 INS42 INS39 INS42 INS60 INS60 MOV41 INS60 INS60 INS74 INS42 INS65 INS74 INS42 INS7 INS42 INS39 INS59 INS39 INS59 INS27 INS39 INS59 INS74 INS59 INS43 INS43 INS43 INS42 INS43 INS43 INS43 INS22 INS32 INS42 INS27 INS42 MOV32 INS42 INS42 INS42 INS32 INS43 INS43 INS43 INS42 INS14 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS74 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS42 INS42 INS32 INS42 INS86 INS42 INS42 INS32 INS42 INS42 MOV42 INS42 INS59 INS14 INS42 INS42 INS42 INS43 INS42 INS42 INS60 INS60 INS42 INS43 INS59 INS43 INS59 INS42 INS42 INS32 INS21 INS42 INS42 INS32 INS21 INS42 INS42 INS32 INS86 INS42 INS9 INS32 INS42 INS42 INS32 INS42 INS9 INS32 INS42 INS42 INS59 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 DEL83 DEL9 DEL8 DEL25 DEL9 DEL41 DEL8