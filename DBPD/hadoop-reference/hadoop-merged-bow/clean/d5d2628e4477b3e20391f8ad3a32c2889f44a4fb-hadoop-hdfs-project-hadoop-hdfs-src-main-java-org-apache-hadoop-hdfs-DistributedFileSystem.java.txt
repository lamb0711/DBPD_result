Merge r1360400 through r1399945 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1399950 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.fs.BlockStorageLocation;
+import org.apache.hadoop.fs.VolumeId;
+import org.apache.hadoop.fs.Options.ChecksumOpt;
-import org.apache.hadoop.hdfs.protocol.HdfsConstants.UpgradeAction;
+import org.apache.hadoop.hdfs.security.token.block.InvalidBlockTokenException;
-import org.apache.hadoop.hdfs.server.common.UpgradeStatusReport;
+  /**
+   * Used to query storage location information for a list of blocks. This list
+   * of blocks is normally constructed via a series of calls to
+   * {@link DistributedFileSystem#getFileBlockLocations(Path, long, long)} to
+   * get the blocks for ranges of a file.
+   * 
+   * The returned array of {@link BlockStorageLocation} augments
+   * {@link BlockLocation} with a {@link VolumeId} per block replica. The
+   * VolumeId specifies the volume on the datanode on which the replica resides.
+   * The VolumeId has to be checked via {@link VolumeId#isValid()} before being
+   * used because volume information can be unavailable if the corresponding
+   * datanode is down or if the requested block is not found.
+   * 
+   * This API is unstable, and datanode-side support is disabled by default. It
+   * can be enabled by setting "dfs.datanode.hdfs-blocks-metadata.enabled" to
+   * true.
+   * 
+   * @param blocks
+   *          List of target BlockLocations to query volume location information
+   * @return volumeBlockLocations Augmented array of
+   *         {@link BlockStorageLocation}s containing additional volume location
+   *         information for each replica of each block.
+   */
+  @InterfaceStability.Unstable
+  public BlockStorageLocation[] getFileBlockStorageLocations(
+      List<BlockLocation> blocks) throws IOException, 
+      UnsupportedOperationException, InvalidBlockTokenException {
+    return dfs.getBlockStorageLocations(blocks);
+  }
+
-    return create(f, permission,
+    return this.create(f, permission,
-        blockSize, progress);
+        blockSize, progress, null);
-    Progressable progress) throws IOException {
+    Progressable progress, ChecksumOpt checksumOpt) throws IOException {
-        replication, blockSize, progress, bufferSize);
+        replication, blockSize, progress, bufferSize, checksumOpt);
-    int bytesPerChecksum) throws IOException {
-    statistics.incrementReadOps(1);
+    ChecksumOpt checksumOpt) throws IOException {
+    statistics.incrementWriteOps(1);
-        progress, bufferSize, bytesPerChecksum),statistics);
+        progress, bufferSize, checksumOpt),statistics);
-        false, replication, blockSize, progress, bufferSize), statistics);
+        false, replication, blockSize, progress, 
+        bufferSize, null), statistics);
-      super.processDeleteOnExit();
-      dfs.close();
-    } finally {
+      dfs.closeOutputStreams(false);
+    } finally {
+      dfs.close();
+  
+  /**
+   * Rolls the edit log on the active NameNode.
+   * Requires super-user privileges.
+   * @see org.apache.hadoop.hdfs.protocol.ClientProtocol#rollEdits()
+   * @return the transaction ID of the newly created segment
+   */
+  public long rollEdits() throws AccessControlException, IOException {
+    return dfs.rollEdits();
+  }
-  public UpgradeStatusReport distributedUpgradeProgress(UpgradeAction action
-  ) throws IOException {
-    return dfs.distributedUpgradeProgress(action);
-  }
-
-  @Override // FileSystem
-  public List<Token<?>> getDelegationTokens(String renewer) throws IOException {
-    List<Token<?>> tokenList = new ArrayList<Token<?>>();
-    Token<DelegationTokenIdentifier> token = this.getDelegationToken(renewer);
-    tokenList.add(token);
-    return tokenList;
-  }
-

MOV26 MOV26 INS26 INS26 UPD40 UPD40 INS40 INS40 INS31 INS31 INS29 MOV78 MOV83 INS5 UPD42 MOV42 MOV44 MOV43 INS43 INS43 INS8 INS44 INS29 INS83 INS39 INS42 INS43 MOV43 INS8 INS65 INS65 INS65 INS40 INS43 INS85 INS74 UPD42 UPD42 MOV42 UPD42 MOV42 INS41 INS43 INS42 INS43 INS42 MOV8 INS65 INS65 INS65 UPD42 MOV42 INS41 INS66 INS66 INS65 INS66 INS66 INS66 INS65 INS66 INS65 INS66 INS65 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS65 INS66 INS66 UPD42 MOV42 MOV43 INS43 INS32 INS42 INS42 INS66 INS66 INS68 INS66 INS32 INS68 INS42 INS42 INS42 INS68 INS42 UPD42 MOV42 INS42 INS42 INS42 INS52 INS33 UPD42 MOV43 MOV43 INS21 INS40 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS69 INS69 INS69 INS42 INS42 INS32 INS42 UPD42 MOV32 INS33 INS32 INS43 INS39 INS39 INS42 INS42 MOV42 INS42 INS42 INS9 UPD42 MOV42 DEL42 DEL43 DEL39 DEL42 DEL42 DEL48 DEL21 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL43 DEL76 DEL74 DEL74 DEL43 DEL43 DEL76 DEL74 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL74 DEL14 DEL59 DEL60 DEL42 DEL43 DEL43 DEL74 DEL42 DEL52 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31