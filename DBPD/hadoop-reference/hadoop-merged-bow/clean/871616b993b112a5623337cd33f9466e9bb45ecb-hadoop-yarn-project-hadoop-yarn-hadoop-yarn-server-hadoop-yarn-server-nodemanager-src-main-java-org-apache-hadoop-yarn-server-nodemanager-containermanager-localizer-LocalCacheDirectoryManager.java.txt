merge from trunk r1598783

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1598785 13f79535-47bb-0310-9956-ffa450edef68

+import com.google.common.annotations.VisibleForTesting;
+
+  /**
+   * Increment the file count for a relative directory within the cache
+   * 
+   * @param relPath the relative path
+   */
+  public synchronized void incrementFileCountForPath(String relPath) {
+    relPath = relPath == null ? "" : relPath.trim();
+    Directory subDir = knownDirectories.get(relPath);
+    if (subDir == null) {
+      int dirnum = Directory.getDirectoryNumber(relPath);
+      totalSubDirectories = Math.max(dirnum, totalSubDirectories);
+      subDir = new Directory(dirnum);
+      nonFullDirectories.add(subDir);
+      knownDirectories.put(subDir.getRelativePath(), subDir);
+    }
+    if (subDir.incrementAndGetCount() >= perDirectoryFileLimit) {
+      nonFullDirectories.remove(subDir);
+    }
+  }
+
+  /**
+   * Given a path to a directory within a local cache tree return the
+   * root of the cache directory.
+   * 
+   * @param path the directory within a cache directory
+   * @return the local cache directory root or null if not found
+   */
+  public static Path getCacheDirectoryRoot(Path path) {
+    while (path != null) {
+      String name = path.getName();
+      if (name.length() != 1) {
+        return path;
+      }
+      int dirnum = DIRECTORIES_PER_LEVEL;
+      try {
+        dirnum = Integer.parseInt(name, DIRECTORIES_PER_LEVEL);
+      } catch (NumberFormatException e) {
+      }
+      if (dirnum >= DIRECTORIES_PER_LEVEL) {
+        return path;
+      }
+      path = path.getParent();
+    }
+    return path;
+  }
+
+  @VisibleForTesting
+  synchronized Directory getDirectory(String relPath) {
+    return knownDirectories.get(relPath);
+  }
+
-    public Directory(int directoryNo) {
-      fileCount = 0;
-      if (directoryNo == 0) {
-        relativePath = "";
-      } else {
+    static String getRelativePath(int directoryNo) {
+      String relativePath = "";
+      if (directoryNo > 0) {
+      return relativePath;
+    }
+
+    static int getDirectoryNumber(String relativePath) {
+      String numStr = relativePath.replace("/", "");
+      if (relativePath.isEmpty()) {
+        return 0;
+      }
+      if (numStr.length() > 1) {
+        // undo step from getRelativePath() to reuse 0th sub directory
+        String firstChar = Integer.toString(
+            Integer.parseInt(numStr.substring(0, 1),
+                DIRECTORIES_PER_LEVEL) + 1, DIRECTORIES_PER_LEVEL);
+        numStr = firstChar + numStr.substring(1);
+      }
+      return Integer.parseInt(numStr, DIRECTORIES_PER_LEVEL) + 1;
+    }
+
+    public Directory(int directoryNo) {
+      fileCount = 0;
+      relativePath = getRelativePath(directoryNo);

INS26 INS40 INS31 INS31 INS31 INS29 INS83 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS44 INS8 INS31 INS31 INS65 INS65 INS43 INS42 INS21 INS60 INS25 INS25 INS65 INS65 INS65 INS42 INS43 INS42 INS61 INS41 INS42 INS42 INS43 INS42 INS41 UPD83 INS43 INS42 INS83 INS39 INS42 INS44 INS8 INS83 INS42 INS44 INS8 INS66 INS42 INS66 INS42 INS7 INS43 INS59 INS27 INS8 INS27 INS8 INS66 INS66 INS42 INS66 INS66 INS42 INS27 INS8 INS42 INS42 INS32 INS42 INS60 INS41 INS43 INS42 INS60 INS25 INS25 INS41 INS39 INS42 MOV21 INS21 INS42 INS16 INS42 INS42 INS32 INS42 INS33 INS60 INS21 INS21 INS21 INS21 INS32 INS42 INS21 INS42 INS33 INS60 INS25 INS60 INS54 INS25 INS21 INS42 INS42 INS42 INS43 INS59 UPD27 INS42 INS42 INS43 INS59 INS32 INS8 INS27 INS8 INS27 INS7 INS27 INS45 INS32 INS42 INS42 INS42 INS39 INS59 INS7 INS7 INS32 INS32 INS42 INS42 INS32 INS43 INS59 INS27 INS8 INS39 INS59 INS8 INS12 INS27 INS8 INS7 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS41 INS32 INS34 INS60 INS21 INS32 INS34 INS42 INS32 INS42 INS33 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS34 INS41 INS42 INS42 INS21 INS44 INS8 INS42 INS42 INS41 INS42 INS32 INS42 INS42 INS45 INS45 INS34 INS42 INS42 INS43 INS59 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS34 INS42 INS42 INS34 INS42 INS42 INS32 INS42 INS42 INS42 INS34 INS34 DEL42 DEL42 DEL45 DEL7 DEL21 DEL8