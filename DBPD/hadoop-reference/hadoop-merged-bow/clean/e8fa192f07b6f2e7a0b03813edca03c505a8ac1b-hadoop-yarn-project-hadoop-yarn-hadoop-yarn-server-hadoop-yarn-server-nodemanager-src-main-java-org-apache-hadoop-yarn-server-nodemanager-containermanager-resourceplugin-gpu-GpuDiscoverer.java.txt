YARN-9217. Nodemanager will fail to start if GPU is misconfigured on the node or GPU drivers missing. Contributed by Peter Bacsko

+import static org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.ResourcesExceptionUtil.throwIfNecessary;
+
-import org.apache.hadoop.util.Shell;
-  // command should not run more than 10 sec.
-  private static final int MAX_EXEC_TIMEOUT_MS = 10 * 1000;
+  private NvidiaBinaryHelper nvidiaBinaryHelper;
-  synchronized GpuDeviceInformation getGpuDeviceInformation()
+  public synchronized GpuDeviceInformation getGpuDeviceInformation()
-    validateConfOrThrowException();
-
-    String output;
-      output = Shell.execCommand(environment,
-          new String[] { pathOfGpuBinary, "-x", "-q" }, MAX_EXEC_TIMEOUT_MS);
-      GpuDeviceInformationParser parser = new GpuDeviceInformationParser();
-      lastDiscoveredGpuInformation = parser.parseXml(output);
-      numOfErrorExecutionSinceLastSucceed = 0;
-      return lastDiscoveredGpuInformation;
+      lastDiscoveredGpuInformation =
+          nvidiaBinaryHelper.getGpuDeviceInformation(pathOfGpuBinary);
-      if (LOG.isDebugEnabled()) {
-        LOG.warn(msg, e);
-      }
+      LOG.debug(msg, e);
+
+    return lastDiscoveredGpuInformation;
-  private boolean IsAutoDiscoveryEnabled() {
+  private boolean isAutoDiscoveryEnabled() {
-   * @throws YarnException when any issue happens
-    if (IsAutoDiscoveryEnabled()) {
+    if (isAutoDiscoveryEnabled()) {
-          throw GpuDeviceSpecificationException.
-              createWithWrongValueSpecified(device, devices);
+          throwIfNecessary(GpuDeviceSpecificationException
+              .createWithWrongValueSpecified(device, devices), getConf());
+          LOG.warn("Wrong GPU specification string {}, ignored", device);
-        GpuDevice gpuDevice = parseGpuDevice(device, splitByColon, devices);
+        GpuDevice gpuDevice;
+        try {
+          gpuDevice = parseGpuDevice(splitByColon);
+        } catch (NumberFormatException e) {
+          throwIfNecessary(GpuDeviceSpecificationException
+              .createWithWrongValueSpecified(device, devices, e), getConf());
+          LOG.warn("Cannot parse GPU device numbers: {}", device);
+          continue;
+        }
+
-          throw GpuDeviceSpecificationException
-              .createWithDuplicateValueSpecified(device, devices);
+          throwIfNecessary(GpuDeviceSpecificationException
+              .createWithDuplicateValueSpecified(device, devices), getConf());
+          LOG.warn("CPU device is duplicated: {}", device);
-  private GpuDevice parseGpuDevice(String device, String[] splitByColon,
-      String allowedDevicesStr) throws YarnException {
-    try {
-      int index = Integer.parseInt(splitByColon[0]);
-      int minorNumber = Integer.parseInt(splitByColon[1]);
-      return new GpuDevice(index, minorNumber);
-    } catch (NumberFormatException e) {
-      throw GpuDeviceSpecificationException.
-          createWithWrongValueSpecified(device, allowedDevicesStr, e);
-    }
+  private GpuDevice parseGpuDevice(String[] splitByColon) {
+    int index = Integer.parseInt(splitByColon[0]);
+    int minorNumber = Integer.parseInt(splitByColon[1]);
+    return new GpuDevice(index, minorNumber);
-  public synchronized void initialize(Configuration config)
-      throws YarnException {
+  public synchronized void initialize(Configuration config,
+      NvidiaBinaryHelper nvidiaHelper) throws YarnException {
-    if (IsAutoDiscoveryEnabled()) {
+    this.nvidiaBinaryHelper = nvidiaHelper;
+    if (isAutoDiscoveryEnabled()) {
+      // If path exists but file name is incorrect don't execute the file
+      String fileName = binaryPath.getName();
+      if (DEFAULT_BINARY_NAME.equals(fileName)) {
+        String msg = String.format("Please check the configuration value of"
+             +" %s. It should point to an %s binary.",
+             YarnConfiguration.NM_GPU_PATH_TO_EXEC,
+             DEFAULT_BINARY_NAME);
+        throwIfNecessary(new YarnException(msg), config);
+        LOG.warn(msg);
+      }
+

MOV26 MOV23 UPD40 INS43 INS83 UPD42 MOV8 INS44 INS42 UPD42 MOV41 INS43 INS42 INS21 INS42 INS7 INS25 UPD42 INS22 INS42 UPD42 MOV32 MOV8 INS8 MOV21 INS52 INS42 MOV21 INS60 INS25 INS60 INS54 MOV43 INS59 INS32 MOV8 UPD42 UPD42 UPD42 UPD42 MOV43 INS59 INS8 INS12 INS42 INS32 INS42 INS42 INS42 INS60 INS21 INS21 INS21 INS21 MOV42 INS21 MOV44 INS8 INS21 INS21 INS42 INS42 MOV43 INS59 INS32 INS32 INS32 INS32 INS7 INS21 INS21 INS18 INS32 INS32 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS42 MOV32 INS32 INS42 INS42 INS45 INS42 INS42 INS32 INS32 INS32 INS42 MOV32 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS27 INS40 INS42 MOV43 INS42 INS42 UPD42 MOV42 MOV42 INS42 INS32 INS32 INS42 INS42 INS45 INS42 INS42 INS45 INS45 INS42 INS42 INS42 MOV42 INS42 INS42 DEL83 DEL83 DEL39 DEL34 DEL34 DEL27 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL85 DEL5 DEL42 DEL45 DEL45 DEL4 DEL3 DEL42 DEL32 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL34 DEL7 DEL21 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL66 DEL65 DEL53 DEL42 DEL32 DEL59 DEL60 DEL53 DEL42 DEL43 DEL42 DEL44 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL53 DEL8 DEL12 DEL54 DEL8 DEL25