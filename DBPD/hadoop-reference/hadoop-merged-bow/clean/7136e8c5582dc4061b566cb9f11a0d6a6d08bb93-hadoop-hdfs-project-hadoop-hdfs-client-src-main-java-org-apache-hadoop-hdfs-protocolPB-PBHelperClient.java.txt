HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.

-import org.apache.hadoop.hdfs.protocol.proto.ErasureCodingProtos;
-import org.apache.hadoop.hdfs.protocol.proto.ErasureCodingProtos.BlockECRecoveryInfoProto;
-      setPoolId(b.getBlockPoolId()).
-      setBlockId(b.getBlockId()).
-      setNumBytes(b.getNumBytes()).
-      setGenerationStamp(b.getGenerationStamp()).
-      build();
+        setPoolId(b.getBlockPoolId()).
+        setBlockId(b.getBlockId()).
+        setNumBytes(b.getNumBytes()).
+        setGenerationStamp(b.getGenerationStamp()).
+        build();
-      setIdentifier(ByteString.copyFrom(tok.getIdentifier())).
-      setPassword(ByteString.copyFrom(tok.getPassword())).
-      setKind(tok.getKind().toString()).
-      setService(tok.getService().toString()).build();
+        setIdentifier(ByteString.copyFrom(tok.getIdentifier())).
+        setPassword(ByteString.copyFrom(tok.getPassword())).
+        setKind(tok.getKind().toString()).
+        setService(tok.getService().toString()).build();
-      setHi(shmId.getHi()).
-      setLo(shmId.getLo()).
-      build();
+        setHi(shmId.getHi()).
+        setLo(shmId.getLo()).
+        build();
-      setShmId(convert(slotId.getShmId())).
-      setSlotIdx(slotId.getSlotIdx()).
-      build();
+        setShmId(convert(slotId.getShmId())).
+        setSlotIdx(slotId.getSlotIdx()).
+        build();
-      .setIpAddr(dn.getIpAddr())
-      .setHostName(dn.getHostName())
-      .setXferPort(dn.getXferPort())
-      .setDatanodeUuid(dn.getDatanodeUuid() != null ? dn.getDatanodeUuid() : "")
-      .setInfoPort(dn.getInfoPort())
-      .setInfoSecurePort(dn.getInfoSecurePort())
-      .setIpcPort(dn.getIpcPort()).build();
+        .setIpAddr(dn.getIpAddr())
+        .setHostName(dn.getHostName())
+        .setXferPort(dn.getXferPort())
+        .setDatanodeUuid(dn.getDatanodeUuid() != null ?
+            dn.getDatanodeUuid() : "")
+        .setInfoPort(dn.getInfoPort())
+        .setInfoSecurePort(dn.getInfoSecurePort())
+        .setIpcPort(dn.getIpcPort()).build();
-    final DatanodeInfo.AdminStates inAs) {
+      final DatanodeInfo.AdminStates inAs) {
-      case NORMAL: return  DatanodeInfoProto.AdminState.NORMAL;
-      case DECOMMISSION_INPROGRESS:
-        return DatanodeInfoProto.AdminState.DECOMMISSION_INPROGRESS;
-      case DECOMMISSIONED: return DatanodeInfoProto.AdminState.DECOMMISSIONED;
-      default: return DatanodeInfoProto.AdminState.NORMAL;
+    case NORMAL: return  DatanodeInfoProto.AdminState.NORMAL;
+    case DECOMMISSION_INPROGRESS:
+      return DatanodeInfoProto.AdminState.DECOMMISSION_INPROGRESS;
+    case DECOMMISSIONED: return DatanodeInfoProto.AdminState.DECOMMISSIONED;
+    default: return DatanodeInfoProto.AdminState.NORMAL;
-      .setId(convert((DatanodeID) info))
-      .setCapacity(info.getCapacity())
-      .setDfsUsed(info.getDfsUsed())
-      .setRemaining(info.getRemaining())
-      .setBlockPoolUsed(info.getBlockPoolUsed())
-      .setCacheCapacity(info.getCacheCapacity())
-      .setCacheUsed(info.getCacheUsed())
-      .setLastUpdate(info.getLastUpdate())
-      .setLastUpdateMonotonic(info.getLastUpdateMonotonic())
-      .setXceiverCount(info.getXceiverCount())
-      .setAdminState(convert(info.getAdminState()))
-      .build();
+        .setId(convert((DatanodeID) info))
+        .setCapacity(info.getCapacity())
+        .setDfsUsed(info.getDfsUsed())
+        .setRemaining(info.getRemaining())
+        .setBlockPoolUsed(info.getBlockPoolUsed())
+        .setCacheCapacity(info.getCacheCapacity())
+        .setCacheUsed(info.getCacheUsed())
+        .setLastUpdate(info.getLastUpdate())
+        .setLastUpdateMonotonic(info.getLastUpdateMonotonic())
+        .setXceiverCount(info.getXceiverCount())
+        .setAdminState(convert(info.getAdminState()))
+        .build();
-    DatanodeInfo[] dnInfos) {
+      DatanodeInfo[] dnInfos) {
-    DatanodeInfo[] dnInfos, int startIdx) {
+      DatanodeInfo[] dnInfos, int startIdx) {
-      .newArrayListWithCapacity(dnInfos.length);
+        .newArrayListWithCapacity(dnInfos.length);
-      case DISK:
-        return StorageTypeProto.DISK;
-      case SSD:
-        return StorageTypeProto.SSD;
-      case ARCHIVE:
-        return StorageTypeProto.ARCHIVE;
-      case RAM_DISK:
-        return StorageTypeProto.RAM_DISK;
-      default:
-        throw new IllegalStateException(
+    case DISK:
+      return StorageTypeProto.DISK;
+    case SSD:
+      return StorageTypeProto.SSD;
+    case ARCHIVE:
+      return StorageTypeProto.ARCHIVE;
+    case RAM_DISK:
+      return StorageTypeProto.RAM_DISK;
+    default:
+      throw new IllegalStateException(
-      case DISK:
-        return StorageType.DISK;
-      case SSD:
-        return StorageType.SSD;
-      case ARCHIVE:
-        return StorageType.ARCHIVE;
-      case RAM_DISK:
-        return StorageType.RAM_DISK;
-      default:
-        throw new IllegalStateException(
+    case DISK:
+      return StorageType.DISK;
+    case SSD:
+      return StorageType.SSD;
+    case ARCHIVE:
+      return StorageType.ARCHIVE;
+    case RAM_DISK:
+      return StorageType.RAM_DISK;
+    default:
+      throw new IllegalStateException(
-    StorageType[] types) {
+      StorageType[] types) {
-    StorageType[] types, int startIdx) {
+      StorageType[] types, int startIdx) {
-      types.length);
+        types.length);
-    throws IOException {
+      throws IOException {
-      HdfsProtos.CipherOptionProto.Builder builder = HdfsProtos.CipherOptionProto.
-          newBuilder();
+      HdfsProtos.CipherOptionProto.Builder builder =
+          HdfsProtos.CipherOptionProto.newBuilder();
-      storageIDs = proto.getStorageIDsList().toArray(new String[storageIDsCount]);
+      storageIDs = proto.getStorageIDsList()
+          .toArray(new String[storageIDsCount]);
-    List<DatanodeInfo> cachedLocs = new ArrayList<DatanodeInfo>(locs.size());
+    List<DatanodeInfo> cachedLocs = new ArrayList<>(locs.size());
-      lb = new LocatedStripedBlock(PBHelperClient.convert(proto.getB()), targets,
-          storageIDs, storageTypes, indices, proto.getOffset(),
+      lb = new LocatedStripedBlock(PBHelperClient.convert(proto.getB()),
+          targets, storageIDs, storageTypes, indices, proto.getOffset(),
-     // missing storage types
+      // missing storage types
-    return new DatanodeID(dn.getIpAddr(), dn.getHostName(), dn.getDatanodeUuid(),
-        dn.getXferPort(), dn.getInfoPort(), dn.hasInfoSecurePort() ? dn
-        .getInfoSecurePort() : 0, dn.getIpcPort());
+    return new DatanodeID(dn.getIpAddr(), dn.getHostName(),
+        dn.getDatanodeUuid(), dn.getXferPort(), dn.getInfoPort(),
+        dn.hasInfoSecurePort() ? dn.getInfoSecurePort() : 0, dn.getIpcPort());
-  public static EventBatchList convert(GetEditsFromTxidResponseProto resp) throws
-    IOException {
+  public static EventBatchList convert(GetEditsFromTxidResponseProto resp)
+      throws IOException {
-          case EVENT_CLOSE:
-            InotifyProtos.CloseEventProto close =
-                InotifyProtos.CloseEventProto.parseFrom(p.getContents());
-            events.add(new Event.CloseEvent(close.getPath(),
-                close.getFileSize(), close.getTimestamp()));
-            break;
-          case EVENT_CREATE:
-            InotifyProtos.CreateEventProto create =
-                InotifyProtos.CreateEventProto.parseFrom(p.getContents());
-            events.add(new Event.CreateEvent.Builder()
-                .iNodeType(createTypeConvert(create.getType()))
-                .path(create.getPath())
-                .ctime(create.getCtime())
-                .ownerName(create.getOwnerName())
-                .groupName(create.getGroupName())
-                .perms(convert(create.getPerms()))
-                .replication(create.getReplication())
-                .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :
-                    create.getSymlinkTarget())
-                .defaultBlockSize(create.getDefaultBlockSize())
-                .overwrite(create.getOverwrite()).build());
-            break;
-          case EVENT_METADATA:
-            InotifyProtos.MetadataUpdateEventProto meta =
-                InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());
-            events.add(new Event.MetadataUpdateEvent.Builder()
-                .path(meta.getPath())
-                .metadataType(metadataUpdateTypeConvert(meta.getType()))
-                .mtime(meta.getMtime())
-                .atime(meta.getAtime())
-                .replication(meta.getReplication())
-                .ownerName(
-                    meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())
-                .groupName(
-                    meta.getGroupName().isEmpty() ? null : meta.getGroupName())
-                .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)
-                .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(
-                    meta.getAclsList()))
-                .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(
-                    meta.getXAttrsList()))
-                .xAttrsRemoved(meta.getXAttrsRemoved())
-                .build());
-            break;
-          case EVENT_RENAME:
-            InotifyProtos.RenameEventProto rename =
-                InotifyProtos.RenameEventProto.parseFrom(p.getContents());
-            events.add(new Event.RenameEvent.Builder()
-                  .srcPath(rename.getSrcPath())
-                  .dstPath(rename.getDestPath())
-                  .timestamp(rename.getTimestamp())
-                  .build());
-            break;
-          case EVENT_APPEND:
-            InotifyProtos.AppendEventProto append =
-                InotifyProtos.AppendEventProto.parseFrom(p.getContents());
-            events.add(new Event.AppendEvent.Builder().path(append.getPath())
-                .newBlock(append.hasNewBlock() && append.getNewBlock())
-                .build());
-            break;
-          case EVENT_UNLINK:
-            InotifyProtos.UnlinkEventProto unlink =
-                InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());
-            events.add(new Event.UnlinkEvent.Builder()
-                  .path(unlink.getPath())
-                  .timestamp(unlink.getTimestamp())
-                  .build());
-            break;
-          case EVENT_TRUNCATE:
-            InotifyProtos.TruncateEventProto truncate =
-                InotifyProtos.TruncateEventProto.parseFrom(p.getContents());
-            events.add(new Event.TruncateEvent(truncate.getPath(),
-                truncate.getFileSize(), truncate.getTimestamp()));
-            break;
-          default:
-            throw new RuntimeException("Unexpected inotify event type: " +
-                p.getType());
+        case EVENT_CLOSE:
+          InotifyProtos.CloseEventProto close =
+              InotifyProtos.CloseEventProto.parseFrom(p.getContents());
+          events.add(new Event.CloseEvent(close.getPath(),
+              close.getFileSize(), close.getTimestamp()));
+          break;
+        case EVENT_CREATE:
+          InotifyProtos.CreateEventProto create =
+              InotifyProtos.CreateEventProto.parseFrom(p.getContents());
+          events.add(new Event.CreateEvent.Builder()
+              .iNodeType(createTypeConvert(create.getType()))
+              .path(create.getPath())
+              .ctime(create.getCtime())
+              .ownerName(create.getOwnerName())
+              .groupName(create.getGroupName())
+              .perms(convert(create.getPerms()))
+              .replication(create.getReplication())
+              .symlinkTarget(create.getSymlinkTarget().isEmpty() ? null :
+                  create.getSymlinkTarget())
+              .defaultBlockSize(create.getDefaultBlockSize())
+              .overwrite(create.getOverwrite()).build());
+          break;
+        case EVENT_METADATA:
+          InotifyProtos.MetadataUpdateEventProto meta =
+              InotifyProtos.MetadataUpdateEventProto.parseFrom(p.getContents());
+          events.add(new Event.MetadataUpdateEvent.Builder()
+              .path(meta.getPath())
+              .metadataType(metadataUpdateTypeConvert(meta.getType()))
+              .mtime(meta.getMtime())
+              .atime(meta.getAtime())
+              .replication(meta.getReplication())
+              .ownerName(
+                  meta.getOwnerName().isEmpty() ? null : meta.getOwnerName())
+              .groupName(
+                  meta.getGroupName().isEmpty() ? null : meta.getGroupName())
+              .perms(meta.hasPerms() ? convert(meta.getPerms()) : null)
+              .acls(meta.getAclsList().isEmpty() ? null : convertAclEntry(
+                  meta.getAclsList()))
+              .xAttrs(meta.getXAttrsList().isEmpty() ? null : convertXAttrs(
+                  meta.getXAttrsList()))
+              .xAttrsRemoved(meta.getXAttrsRemoved())
+              .build());
+          break;
+        case EVENT_RENAME:
+          InotifyProtos.RenameEventProto rename =
+              InotifyProtos.RenameEventProto.parseFrom(p.getContents());
+          events.add(new Event.RenameEvent.Builder()
+              .srcPath(rename.getSrcPath())
+              .dstPath(rename.getDestPath())
+              .timestamp(rename.getTimestamp())
+              .build());
+          break;
+        case EVENT_APPEND:
+          InotifyProtos.AppendEventProto append =
+              InotifyProtos.AppendEventProto.parseFrom(p.getContents());
+          events.add(new Event.AppendEvent.Builder().path(append.getPath())
+              .newBlock(append.hasNewBlock() && append.getNewBlock())
+              .build());
+          break;
+        case EVENT_UNLINK:
+          InotifyProtos.UnlinkEventProto unlink =
+              InotifyProtos.UnlinkEventProto.parseFrom(p.getContents());
+          events.add(new Event.UnlinkEvent.Builder()
+              .path(unlink.getPath())
+              .timestamp(unlink.getTimestamp())
+              .build());
+          break;
+        case EVENT_TRUNCATE:
+          InotifyProtos.TruncateEventProto truncate =
+              InotifyProtos.TruncateEventProto.parseFrom(p.getContents());
+          events.add(new Event.TruncateEvent(truncate.getPath(),
+              truncate.getFileSize(), truncate.getTimestamp()));
+          break;
+        default:
+          throw new RuntimeException("Unexpected inotify event type: " +
+              p.getType());
-                                                       type) {
+      type) {
-    for (int i = 0; i < len; ++i) {
-      result.add(convertLocatedBlockProto(lb.get(i)));
+    for (LocatedBlockProto aLb : lb) {
+      result.add(convertLocatedBlockProto(aLb));
-        info.setOwnerName(proto.getOwnerName());
+      info.setOwnerName(proto.getOwnerName());
-  public static CacheDirectiveInfoProto convert
-      (CacheDirectiveInfo info) {
+  public static CacheDirectiveInfoProto convert(CacheDirectiveInfo info) {
-  public static CacheDirectiveInfo convert
-      (CacheDirectiveInfoProto proto) {
-    CacheDirectiveInfo.Builder builder =
-        new CacheDirectiveInfo.Builder();
+  public static CacheDirectiveInfo convert(CacheDirectiveInfoProto proto) {
+    CacheDirectiveInfo.Builder builder = new CacheDirectiveInfo.Builder();
-  public static SnapshotDiffReport convert(SnapshotDiffReportProto reportProto) {
+  public static SnapshotDiffReport convert(
+      SnapshotDiffReportProto reportProto) {
-    fs.hasEcPolicy() ? convertErasureCodingPolicy(fs.getEcPolicy()) : null);
+        fs.hasEcPolicy() ? convertErasureCodingPolicy(fs.getEcPolicy()) : null);
-  public static SafeModeActionProto convert(
-      SafeModeAction a) {
+  public static SafeModeActionProto convert(SafeModeAction a) {
-    result[ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX] = res.getUnderReplicated();
-    result[ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX] = res.getCorruptBlocks();
-    result[ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX] = res.getMissingBlocks();
+    result[ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX] =
+        res.getUnderReplicated();
+    result[ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX] =
+        res.getCorruptBlocks();
+    result[ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX] =
+        res.getMissingBlocks();
-  public static DatanodeReportTypeProto
-    convert(DatanodeReportType t) {
+  public static DatanodeReportTypeProto convert(DatanodeReportType t) {
-    for(int i = 0; i < reports.length; i++) {
-      protos.add(convertDatanodeStorageReport(reports[i]));
+    for (DatanodeStorageReport report : reports) {
+      protos.add(convertDatanodeStorageReport(report));
-      builder.setEcPolicy(convertErasureCodingPolicy(lb.getErasureCodingPolicy()));
+      builder.setEcPolicy(convertErasureCodingPolicy(
+          lb.getErasureCodingPolicy()));
-      setBlockSize(fs.getBlockSize()).
-      setBytesPerChecksum(fs.getBytesPerChecksum()).
-      setWritePacketSize(fs.getWritePacketSize())
-      .setReplication(fs.getReplication())
-      .setFileBufferSize(fs.getFileBufferSize())
-      .setEncryptDataTransfer(fs.getEncryptDataTransfer())
-      .setTrashInterval(fs.getTrashInterval())
-      .setChecksumType(convert(fs.getChecksumType()))
-      .build();
+        setBlockSize(fs.getBlockSize()).
+        setBytesPerChecksum(fs.getBytesPerChecksum()).
+        setWritePacketSize(fs.getWritePacketSize())
+        .setReplication(fs.getReplication())
+        .setFileBufferSize(fs.getFileBufferSize())
+        .setEncryptDataTransfer(fs.getEncryptDataTransfer())
+        .setTrashInterval(fs.getTrashInterval())
+        .setChecksumType(convert(fs.getChecksumType()))
+        .build();
-       EnumSet.noneOf(CreateFlag.class);
+        EnumSet.noneOf(CreateFlag.class);
-    return new EnumSetWritable<CreateFlag>(result, CreateFlag.class);
+    return new EnumSetWritable<>(result, CreateFlag.class);
-     HdfsFileStatusProto.newBuilder().
-      setLength(fs.getLen()).
-      setFileType(fType).
-      setBlockReplication(fs.getReplication()).
-      setBlocksize(fs.getBlockSize()).
-      setModificationTime(fs.getModificationTime()).
-      setAccessTime(fs.getAccessTime()).
-      setPermission(convert(fs.getPermission())).
-      setOwner(fs.getOwner()).
-      setGroup(fs.getGroup()).
-      setFileId(fs.getFileId()).
-      setChildrenNum(fs.getChildrenNum()).
-      setPath(ByteString.copyFrom(fs.getLocalNameInBytes())).
-      setStoragePolicy(fs.getStoragePolicy());
+        HdfsFileStatusProto.newBuilder().
+            setLength(fs.getLen()).
+            setFileType(fType).
+            setBlockReplication(fs.getReplication()).
+            setBlocksize(fs.getBlockSize()).
+            setModificationTime(fs.getModificationTime()).
+            setAccessTime(fs.getAccessTime()).
+            setPermission(convert(fs.getPermission())).
+            setOwner(fs.getOwner()).
+            setGroup(fs.getGroup()).
+            setFileId(fs.getFileId()).
+            setChildrenNum(fs.getChildrenNum()).
+            setPath(ByteString.copyFrom(fs.getLocalNameInBytes())).
+            setStoragePolicy(fs.getStoragePolicy());
-      builder.setEcPolicy(convertErasureCodingPolicy(fs.getErasureCodingPolicy()));
+      builder.setEcPolicy(convertErasureCodingPolicy(
+          fs.getErasureCodingPolicy()));
-        .newBuilder().setSnapshotNumber(snapshotNumber)
-        .setSnapshotQuota(snapshotQuota).setParentFullpath(parentFullPathBytes)
-        .setDirStatus(fs);
+            .newBuilder()
+            .setSnapshotNumber(snapshotNumber)
+            .setSnapshotQuota(snapshotQuota)
+            .setParentFullpath(parentFullPathBytes)
+            .setDirStatus(fs);
-              fsStats[ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX]);
+          fsStats[ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX]);
-    if (fsStats.length >= ClientProtocol.GET_STATS_MISSING_REPL_ONE_BLOCKS_IDX + 1)
+    if (fsStats.length >=
+        ClientProtocol.GET_STATS_MISSING_REPL_ONE_BLOCKS_IDX + 1)
-        builder.setLength(cs.getLength()).
+    builder.setLength(cs.getLength()).
-  public static List<StorageReportProto> convertStorageReports(StorageReport[] storages) {
-    final List<StorageReportProto> protos = new ArrayList<StorageReportProto>(
-        storages.length);
-    for(int i = 0; i < storages.length; i++) {
-      protos.add(convert(storages[i]));
+  public static List<StorageReportProto> convertStorageReports(
+      StorageReport[] storages) {
+    final List<StorageReportProto> protos = new ArrayList<>(storages.length);
+    for (StorageReport storage : storages) {
+      protos.add(convert(storage));
-    ByteString sourcePath = ByteString
-        .copyFrom(entry.getSourcePath() == null ? DFSUtilClient.EMPTY_BYTES : entry
-            .getSourcePath());
+    ByteString sourcePath = ByteString.copyFrom(entry.getSourcePath() == null ?
+        DFSUtilClient.EMPTY_BYTES : entry.getSourcePath());
-      ByteString targetPath = ByteString
-          .copyFrom(entry.getTargetPath() == null ? DFSUtilClient.EMPTY_BYTES : entry
-              .getTargetPath());
+      ByteString targetPath =
+          ByteString.copyFrom(entry.getTargetPath() == null ?
+              DFSUtilClient.EMPTY_BYTES : entry.getTargetPath());
-    SnapshotDiffReportProto reportProto = SnapshotDiffReportProto.newBuilder()
+    return SnapshotDiffReportProto.newBuilder()
-    return reportProto;
-    List<Boolean> targetPinningsList) {
+      List<Boolean> targetPinningsList) {
-    DatanodeLocalInfoProto.Builder builder = DatanodeLocalInfoProto.newBuilder();
+    DatanodeLocalInfoProto.Builder builder =
+        DatanodeLocalInfoProto.newBuilder();
-    List<XAttr> names) {
+      List<XAttr> names) {
-      ListXAttrsResponseProto.newBuilder();
+        ListXAttrsResponseProto.newBuilder();
-  public static GetEditsFromTxidResponseProto convertEditsResponse(EventBatchList el) {
+  public static GetEditsFromTxidResponseProto convertEditsResponse(
+      EventBatchList el) {
-          case CLOSE:
-            Event.CloseEvent ce = (Event.CloseEvent) e;
-            events.add(InotifyProtos.EventProto.newBuilder()
-                .setType(InotifyProtos.EventType.EVENT_CLOSE)
-                .setContents(
-                    InotifyProtos.CloseEventProto.newBuilder()
-                        .setPath(ce.getPath())
-                        .setFileSize(ce.getFileSize())
-                        .setTimestamp(ce.getTimestamp()).build().toByteString()
-                ).build());
-            break;
-          case CREATE:
-            Event.CreateEvent ce2 = (Event.CreateEvent) e;
-            events.add(InotifyProtos.EventProto.newBuilder()
-                .setType(InotifyProtos.EventType.EVENT_CREATE)
-                .setContents(
-                    InotifyProtos.CreateEventProto.newBuilder()
-                        .setType(createTypeConvert(ce2.getiNodeType()))
-                        .setPath(ce2.getPath())
-                        .setCtime(ce2.getCtime())
-                        .setOwnerName(ce2.getOwnerName())
-                        .setGroupName(ce2.getGroupName())
-                        .setPerms(convert(ce2.getPerms()))
-                        .setReplication(ce2.getReplication())
-                        .setSymlinkTarget(ce2.getSymlinkTarget() == null ?
-                            "" : ce2.getSymlinkTarget())
-                        .setDefaultBlockSize(ce2.getDefaultBlockSize())
-                        .setOverwrite(ce2.getOverwrite()).build().toByteString()
-                ).build());
-            break;
-          case METADATA:
-            Event.MetadataUpdateEvent me = (Event.MetadataUpdateEvent) e;
-            InotifyProtos.MetadataUpdateEventProto.Builder metaB =
-                InotifyProtos.MetadataUpdateEventProto.newBuilder()
-                    .setPath(me.getPath())
-                    .setType(metadataUpdateTypeConvert(me.getMetadataType()))
-                    .setMtime(me.getMtime())
-                    .setAtime(me.getAtime())
-                    .setReplication(me.getReplication())
-                    .setOwnerName(me.getOwnerName() == null ? "" :
-                        me.getOwnerName())
-                    .setGroupName(me.getGroupName() == null ? "" :
-                        me.getGroupName())
-                    .addAllAcls(me.getAcls() == null ?
-                        Lists.<AclEntryProto>newArrayList() :
-                        convertAclEntryProto(me.getAcls()))
-                    .addAllXAttrs(me.getxAttrs() == null ?
-                        Lists.<XAttrProto>newArrayList() :
-                        convertXAttrProto(me.getxAttrs()))
-                    .setXAttrsRemoved(me.isxAttrsRemoved());
-            if (me.getPerms() != null) {
-              metaB.setPerms(convert(me.getPerms()));
-            }
-            events.add(InotifyProtos.EventProto.newBuilder()
-                .setType(InotifyProtos.EventType.EVENT_METADATA)
-                .setContents(metaB.build().toByteString())
-                .build());
-            break;
-          case RENAME:
-            Event.RenameEvent re = (Event.RenameEvent) e;
-            events.add(InotifyProtos.EventProto.newBuilder()
-                .setType(InotifyProtos.EventType.EVENT_RENAME)
-                .setContents(
-                    InotifyProtos.RenameEventProto.newBuilder()
-                        .setSrcPath(re.getSrcPath())
-                        .setDestPath(re.getDstPath())
-                        .setTimestamp(re.getTimestamp()).build().toByteString()
-                ).build());
-            break;
-          case APPEND:
-            Event.AppendEvent re2 = (Event.AppendEvent) e;
-            events.add(InotifyProtos.EventProto.newBuilder()
-                .setType(InotifyProtos.EventType.EVENT_APPEND)
-                .setContents(InotifyProtos.AppendEventProto.newBuilder()
-                    .setPath(re2.getPath())
-                    .setNewBlock(re2.toNewBlock()).build().toByteString())
-                .build());
-            break;
-          case UNLINK:
-            Event.UnlinkEvent ue = (Event.UnlinkEvent) e;
-            events.add(InotifyProtos.EventProto.newBuilder()
-                .setType(InotifyProtos.EventType.EVENT_UNLINK)
-                .setContents(
-                    InotifyProtos.UnlinkEventProto.newBuilder()
-                        .setPath(ue.getPath())
-                        .setTimestamp(ue.getTimestamp()).build().toByteString()
-                ).build());
-            break;
-          case TRUNCATE:
-            Event.TruncateEvent te = (Event.TruncateEvent) e;
-            events.add(InotifyProtos.EventProto.newBuilder()
-                .setType(InotifyProtos.EventType.EVENT_TRUNCATE)
-                .setContents(
-                    InotifyProtos.TruncateEventProto.newBuilder()
-                        .setPath(te.getPath())
-                        .setFileSize(te.getFileSize())
-                        .setTimestamp(te.getTimestamp()).build().toByteString()
-                ).build());
-            break;
-          default:
-            throw new RuntimeException("Unexpected inotify event: " + e);
+        case CLOSE:
+          Event.CloseEvent ce = (Event.CloseEvent) e;
+          events.add(InotifyProtos.EventProto.newBuilder()
+              .setType(InotifyProtos.EventType.EVENT_CLOSE)
+              .setContents(
+                  InotifyProtos.CloseEventProto.newBuilder()
+                      .setPath(ce.getPath())
+                      .setFileSize(ce.getFileSize())
+                      .setTimestamp(ce.getTimestamp()).build().toByteString()
+              ).build());
+          break;
+        case CREATE:
+          Event.CreateEvent ce2 = (Event.CreateEvent) e;
+          events.add(InotifyProtos.EventProto.newBuilder()
+              .setType(InotifyProtos.EventType.EVENT_CREATE)
+              .setContents(
+                  InotifyProtos.CreateEventProto.newBuilder()
+                      .setType(createTypeConvert(ce2.getiNodeType()))
+                      .setPath(ce2.getPath())
+                      .setCtime(ce2.getCtime())
+                      .setOwnerName(ce2.getOwnerName())
+                      .setGroupName(ce2.getGroupName())
+                      .setPerms(convert(ce2.getPerms()))
+                      .setReplication(ce2.getReplication())
+                      .setSymlinkTarget(ce2.getSymlinkTarget() == null ?
+                          "" : ce2.getSymlinkTarget())
+                      .setDefaultBlockSize(ce2.getDefaultBlockSize())
+                      .setOverwrite(ce2.getOverwrite()).build().toByteString()
+              ).build());
+          break;
+        case METADATA:
+          Event.MetadataUpdateEvent me = (Event.MetadataUpdateEvent) e;
+          InotifyProtos.MetadataUpdateEventProto.Builder metaB =
+              InotifyProtos.MetadataUpdateEventProto.newBuilder()
+                  .setPath(me.getPath())
+                  .setType(metadataUpdateTypeConvert(me.getMetadataType()))
+                  .setMtime(me.getMtime())
+                  .setAtime(me.getAtime())
+                  .setReplication(me.getReplication())
+                  .setOwnerName(me.getOwnerName() == null ? "" :
+                      me.getOwnerName())
+                  .setGroupName(me.getGroupName() == null ? "" :
+                      me.getGroupName())
+                  .addAllAcls(me.getAcls() == null ?
+                      Lists.<AclEntryProto>newArrayList() :
+                      convertAclEntryProto(me.getAcls()))
+                  .addAllXAttrs(me.getxAttrs() == null ?
+                      Lists.<XAttrProto>newArrayList() :
+                      convertXAttrProto(me.getxAttrs()))
+                  .setXAttrsRemoved(me.isxAttrsRemoved());
+          if (me.getPerms() != null) {
+            metaB.setPerms(convert(me.getPerms()));
+          }
+          events.add(InotifyProtos.EventProto.newBuilder()
+              .setType(InotifyProtos.EventType.EVENT_METADATA)
+              .setContents(metaB.build().toByteString())
+              .build());
+          break;
+        case RENAME:
+          Event.RenameEvent re = (Event.RenameEvent) e;
+          events.add(InotifyProtos.EventProto.newBuilder()
+              .setType(InotifyProtos.EventType.EVENT_RENAME)
+              .setContents(
+                  InotifyProtos.RenameEventProto.newBuilder()
+                      .setSrcPath(re.getSrcPath())
+                      .setDestPath(re.getDstPath())
+                      .setTimestamp(re.getTimestamp()).build().toByteString()
+              ).build());
+          break;
+        case APPEND:
+          Event.AppendEvent re2 = (Event.AppendEvent) e;
+          events.add(InotifyProtos.EventProto.newBuilder()
+              .setType(InotifyProtos.EventType.EVENT_APPEND)
+              .setContents(InotifyProtos.AppendEventProto.newBuilder()
+                  .setPath(re2.getPath())
+                  .setNewBlock(re2.toNewBlock()).build().toByteString())
+              .build());
+          break;
+        case UNLINK:
+          Event.UnlinkEvent ue = (Event.UnlinkEvent) e;
+          events.add(InotifyProtos.EventProto.newBuilder()
+              .setType(InotifyProtos.EventType.EVENT_UNLINK)
+              .setContents(
+                  InotifyProtos.UnlinkEventProto.newBuilder()
+                      .setPath(ue.getPath())
+                      .setTimestamp(ue.getTimestamp()).build().toByteString()
+              ).build());
+          break;
+        case TRUNCATE:
+          Event.TruncateEvent te = (Event.TruncateEvent) e;
+          events.add(InotifyProtos.EventProto.newBuilder()
+              .setType(InotifyProtos.EventType.EVENT_TRUNCATE)
+              .setContents(
+                  InotifyProtos.TruncateEventProto.newBuilder()
+                      .setPath(te.getPath())
+                      .setFileSize(te.getFileSize())
+                      .setTimestamp(te.getTimestamp()).build().toByteString()
+              ).build());
+          break;
+        default:
+          throw new RuntimeException("Unexpected inotify event: " + e);
-    List<HdfsProtos.ECSchemaOptionEntryProto> optionsList = schema.getOptionsList();
+    List<HdfsProtos.ECSchemaOptionEntryProto> optionsList =
+        schema.getOptionsList();
-    HdfsProtos.ECSchemaProto.Builder builder = HdfsProtos.ECSchemaProto.newBuilder()
+    HdfsProtos.ECSchemaProto.Builder builder =
+        HdfsProtos.ECSchemaProto.newBuilder()
-    Set<Map.Entry<String, String>> entrySet = schema.getExtraOptions().entrySet();
+    Set<Map.Entry<String, String>> entrySet =
+        schema.getExtraOptions().entrySet();

INS70 INS70 INS70 INS44 INS42 INS8 INS44 INS42 INS8 INS44 INS42 INS8 MOV32 INS43 INS42 MOV21 INS43 INS42 MOV21 UPD74 INS43 INS42 MOV21 UPD74 INS42 INS42 UPD74 INS42 UPD42 MOV42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL32 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL38 DEL8 DEL24 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42