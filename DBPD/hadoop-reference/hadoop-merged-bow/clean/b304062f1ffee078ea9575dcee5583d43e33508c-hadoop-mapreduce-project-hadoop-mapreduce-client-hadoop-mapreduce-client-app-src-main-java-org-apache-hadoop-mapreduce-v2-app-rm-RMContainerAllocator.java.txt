MAPREDUCE-3186. User jobs are getting hanged if the Resource manager process goes down and comes up while job is getting executed. (Eric Payne via mahadev)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190122 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.YarnException;
+  private long retryInterval;
+  private long retrystartTime;
+    retryInterval = getConfig().getLong(MRJobConfig.MR_AM_TO_RM_WAIT_INTERVAL_MS,
+                                MRJobConfig.DEFAULT_MR_AM_TO_RM_WAIT_INTERVAL_MS);
+    // Init startTime to current time. If all goes well, it will be reset after
+    // first attempt to contact RM.
+    retrystartTime = System.currentTimeMillis();
-  
+
-    AMResponse response = makeRemoteRequest();
+    AMResponse response;
+    /*
+     * If contact with RM is lost, the AM will wait MR_AM_TO_RM_WAIT_INTERVAL_MS
+     * milliseconds before aborting. During this interval, AM will still try
+     * to contact the RM.
+     */
+    try {
+      response = makeRemoteRequest();
+      // Reset retry count if no exception occurred.
+      retrystartTime = System.currentTimeMillis();
+    } catch (Exception e) {
+      // This can happen when the connection to the RM has gone down. Keep
+      // re-trying until the retryInterval has expired.
+      if (System.currentTimeMillis() - retrystartTime >= retryInterval) {
+        eventHandler.handle(new JobEvent(this.getJob().getID(),
+                                         JobEventType.INTERNAL_ERROR));
+        throw new YarnException("Could not contact RM after " +
+                                retryInterval + " milliseconds.");
+      }
+      // Throw this up to the caller, which may decide to ignore it and
+      // continue to attempt to contact the RM.
+      throw e;
+    }
+    if (response.getReboot()) {
+      // This can happen if the RM has been restarted. If it is in that state,
+      // this application must clean itself up.
+      eventHandler.handle(new JobEvent(this.getJob().getID(),
+                                       JobEventType.INTERNAL_ERROR));
+      throw new YarnException("Resource Manager doesn't recognize AttemptId: " +
+                               this.getContext().getApplicationID());
+    }

INS26 INS40 INS23 INS23 INS83 INS39 INS59 INS83 INS39 INS59 INS42 INS42 INS21 INS21 INS54 INS25 INS7 INS7 INS8 INS12 INS32 INS8 INS42 INS32 INS42 INS32 INS21 INS21 INS44 INS8 INS42 INS42 INS21 INS53 INS32 INS42 INS40 INS40 INS42 INS42 INS7 INS7 INS43 INS42 INS25 INS53 INS32 INS14 INS42 INS42 MOV32 INS42 INS32 INS42 INS27 INS8 INS42 INS42 INS42 INS14 INS43 INS27 INS42 INS42 INS27 INS42 INS21 INS53 INS43 INS32 INS40 INS42 INS45 INS32 INS32 INS42 INS32 INS14 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS43 INS27 INS52 INS42 INS52 INS42 INS43 INS32 INS40 INS42 INS45 INS42 INS45 INS42 INS32 INS42 INS52 INS42