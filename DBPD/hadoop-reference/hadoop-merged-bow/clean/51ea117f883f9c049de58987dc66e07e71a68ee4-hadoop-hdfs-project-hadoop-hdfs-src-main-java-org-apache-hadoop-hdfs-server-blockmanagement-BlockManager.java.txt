HDFS-8355. Erasure Coding: Refactor BlockInfo and BlockInfoUnderConstruction. Contributed by Tsz Wo Nicholas Sze.

-    if (block.getBlockUCState() == BlockUCState.COMMITTED)
-      return false;
-    assert block.getNumBytes() <= commitBlock.getNumBytes() :
-      "commitBlock length is less than the stored one "
-      + commitBlock.getNumBytes() + " vs. " + block.getNumBytes();
-    BlockInfo.commitBlock(block, commitBlock);
-    return true;
+    if (block instanceof BlockInfoUnderConstruction
+        && block.getBlockUCState() != BlockUCState.COMMITTED) {
+      final BlockInfoUnderConstruction uc = (BlockInfoUnderConstruction)block;
+
+      assert block.getNumBytes() <= commitBlock.getNumBytes() :
+        "commitBlock length is less than the stored one "
+        + commitBlock.getNumBytes() + " vs. " + block.getNumBytes();
+
+      uc.commitBlock(commitBlock);
+      return true;
+    }
+
+    return false;
-    final BlockInfo completeBlock = BlockInfo.convertToCompleteBlock(curBlock);
+    final BlockInfo completeBlock
+        = !(curBlock instanceof BlockInfoUnderConstruction)? curBlock
+            : ((BlockInfoUnderConstruction)curBlock).convertToCompleteBlock();
+
-    BlockInfo.commitBlock(block, block);
+    if (block instanceof BlockInfoUnderConstruction) {
+      ((BlockInfoUnderConstruction)block).commitBlock(block);
+    }
-        BlockInfo.addReplica(storedBlock, storageInfo, iblk, reportedState);
+        final BlockInfoUnderConstruction uc = (BlockInfoUnderConstruction)storedBlock;
+        uc.addReplicaIfNotPresent(storageInfo, iblk, reportedState);
-          int numOfReplicas = BlockInfo.getNumExpectedLocations(storedBlock);
+          int numOfReplicas = uc.getNumExpectedLocations();
-    BlockInfo.addReplica(block, storageInfo, ucBlock.reportedBlock,
+    final BlockInfoUnderConstruction uc = (BlockInfoUnderConstruction)block;
+    uc.addReplicaIfNotPresent(storageInfo, ucBlock.reportedBlock,
+  public LocatedBlock newLocatedBlock(ExtendedBlock eb, BlockInfo info,
+      DatanodeStorageInfo[] locs, long offset) throws IOException {
+    final LocatedBlock lb;
+    if (info.isStriped()) {
+      lb = newLocatedStripedBlock(eb, locs,
+          ((BlockInfoStripedUnderConstruction)info).getBlockIndices(),
+          offset, false);
+    } else {
+      lb = newLocatedBlock(eb, locs, offset, false);
+    }
+    setBlockToken(lb, BlockTokenIdentifier.AccessMode.WRITE);
+    return lb;
+  }
+

INS31 INS8 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS25 MOV41 INS25 MOV41 INS60 INS42 INS43 INS42 INS43 INS42 INS5 INS42 INS39 INS42 INS42 INS60 INS25 INS21 INS41 INS27 INS8 INS62 INS8 INS83 INS43 INS59 INS42 INS42 INS43 INS85 INS83 INS43 INS59 INS32 INS8 INS8 INS32 INS42 INS62 UPD27 MOV27 INS60 MOV6 MOV21 MOV41 INS16 INS42 INS43 MOV21 INS42 INS42 INS11 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS21 INS21 INS42 INS42 INS40 INS42 INS43 INS83 INS43 INS59 INS38 INS42 INS32 INS42 INS43 INS42 INS7 INS7 INS42 INS42 INS42 INS11 UPD42 INS36 INS36 UPD42 MOV42 INS36 UPD42 INS60 INS42 INS42 INS32 INS42 INS32 INS43 INS42 INS62 INS11 INS11 INS83 INS43 INS59 INS42 INS42 INS42 INS32 INS42 INS9 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS43 INS43 INS42 INS43 INS42 INS42 INS42 INS11 UPD42 UPD42 INS36 INS42 INS42 INS42 INS42 INS43 INS42 INS11 INS42 INS43 INS42 UPD42 INS42 DEL42 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL8 DEL42 DEL42 DEL42