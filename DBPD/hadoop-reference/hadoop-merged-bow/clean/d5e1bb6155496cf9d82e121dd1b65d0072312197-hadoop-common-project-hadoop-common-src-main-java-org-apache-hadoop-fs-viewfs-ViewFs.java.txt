HDFS-15429. mkdirs should work when parent dir is an internalDir and fallback configured. Contributed by Uma Maheswara Rao G.


-        final boolean createParent) throws AccessControlException,
-        FileAlreadyExistsException {
+        final boolean createParent) throws IOException {
+
+      if (this.fsState.getRootFallbackLink() != null) {
+        AbstractFileSystem linkedFallbackFs =
+            this.fsState.getRootFallbackLink().getTargetFileSystem();
+        Path parent = Path.getPathWithoutSchemeAndAuthority(
+            new Path(theInternalDir.fullPath));
+        String leafChild = (InodeTree.SlashPath.equals(dir)) ?
+            InodeTree.SlashPath.toString() :
+            dir.getName();
+        Path dirToCreate = new Path(parent, leafChild);
+        try {
+          // We are here because, the parent dir already exist in the mount
+          // table internal tree. So, let's create parent always in fallback.
+          linkedFallbackFs.mkdir(dirToCreate, permission, true);
+          return;
+        } catch (IOException e) {
+          if (LOG.isDebugEnabled()) {
+            StringBuilder msg = new StringBuilder("Failed to create {}")
+                .append(" at fallback fs : {}");
+            LOG.debug(msg.toString(), dirToCreate, linkedFallbackFs.getUri());
+          }
+          throw e;
+        }
+      }
+

UPD43 INS8 UPD42 MOV25 INS25 MOV53 INS27 INS8 INS32 INS33 INS60 INS60 INS60 INS60 INS54 INS22 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS8 INS12 INS52 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS16 INS42 INS42 INS14 INS21 INS41 INS44 INS8 INS32 INS42 INS42 INS42 INS14 INS36 INS32 INS32 INS43 INS42 INS42 INS32 INS43 INS42 INS25 INS53 INS22 INS42 INS43 INS40 INS32 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 UPD42 MOV42 INS32 INS8 INS42 INS52 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS60 INS21 INS43 INS59 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS14 INS42 INS45 INS42 INS42 INS42 INS42 INS43 INS45 INS42 DEL43 DEL8