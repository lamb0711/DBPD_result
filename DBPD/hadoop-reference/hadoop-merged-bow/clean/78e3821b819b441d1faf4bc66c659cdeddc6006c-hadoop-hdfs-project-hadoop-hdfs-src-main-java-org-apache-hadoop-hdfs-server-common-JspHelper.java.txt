HDFS-2318. Provide authentication to webhdfs using SPNEGO and delegation tokens.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1171611 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.web.resources.UserParam;
-  /**
-   * See
-   * {@link JspHelper#getUGI(ServletContext, HttpServletRequest, Configuration)}
-   * , ServletContext is passed as null.
-   */
+  /** Same as getUGI(null, request, conf). */
+  /** Same as getUGI(context, request, conf, KERBEROS_SSL, true). */
+  public static UserGroupInformation getUGI(ServletContext context,
+      HttpServletRequest request, Configuration conf) throws IOException {
+    return getUGI(context, request, conf, AuthenticationMethod.KERBEROS_SSL, true);
+  }
+
+   * @param conf configuration
+   * @param secureAuthMethod the AuthenticationMethod used in secure mode.
+   * @param tryUgiParameter Should it try the ugi parameter?
-      HttpServletRequest request, Configuration conf) throws IOException {
-    UserGroupInformation ugi = null;
+      HttpServletRequest request, Configuration conf,
+      final AuthenticationMethod secureAuthMethod,
+      final boolean tryUgiParameter) throws IOException {
+    final UserGroupInformation ugi;
+    final String usernameFromQuery = getUsernameFromQuery(request, tryUgiParameter);
+
-      String user = request.getRemoteUser();
+      final String user = request.getRemoteUser();
+        checkUsername(ugi.getUserName(), user);
-        ugi.setAuthenticationMethod(AuthenticationMethod.KERBEROS_SSL);
+        ugi.setAuthenticationMethod(secureAuthMethod);
+
+      checkUsername(user, usernameFromQuery);
+
-      String user = request.getParameter("ugi");
-      
-      if(user == null) { // not specified in request
-        ugi = getDefaultWebUser(conf);
-      } else {
-        ugi = UserGroupInformation.createRemoteUser(user.split(",")[0]);
-      }
+      ugi = usernameFromQuery == null?
+          getDefaultWebUser(conf) // not specified in request
+          : UserGroupInformation.createRemoteUser(usernameFromQuery);
-  
+
+  private static void checkUsername(final String expected, final String name
+      ) throws IOException {
+    if (name != null && !name.equals(expected)) {
+      throw new IOException("Usernames not matched: name=" + name
+          + " != expected=" + expected);
+    }
+  }
+
+  private static String getUsernameFromQuery(final HttpServletRequest request,
+      final boolean tryUgiParameter) {
+    String username = request.getParameter(UserParam.NAME);
+    if (username == null && tryUgiParameter) {
+      //try ugi parameter
+      final String ugiStr = request.getParameter("ugi");
+      if (ugiStr != null) {
+        username = ugiStr.split(",")[0];
+      }
+    }
+    return username;
+  }
+

INS26 INS40 INS31 INS31 INS31 INS29 INS83 INS83 MOV43 INS42 INS44 INS44 INS44 INS43 INS8 INS44 INS44 INS83 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS41 INS65 INS65 INS65 INS83 INS43 INS42 INS83 INS39 INS42 INS60 INS83 INS43 INS42 INS83 INS43 INS42 INS42 INS25 INS42 INS83 MOV43 INS42 INS83 INS39 INS42 INS60 INS25 INS41 UPD66 INS66 INS42 INS42 INS42 INS32 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS83 INS43 INS83 INS43 INS59 MOV8 INS42 INS42 INS27 INS8 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS40 INS9 INS42 INS42 INS42 INS32 INS21 MOV21 INS27 INS38 INS53 INS42 INS42 INS32 INS27 INS42 MOV60 INS25 INS42 INS42 INS42 INS83 INS32 INS42 INS33 INS32 INS14 INS42 INS42 INS40 INS42 INS33 INS83 INS27 INS8 INS21 INS42 INS42 INS42 INS16 INS42 INS42 INS42 INS43 INS27 UPD42 INS42 INS33 INS21 INS32 INS27 MOV32 INS32 INS42 INS45 INS42 INS45 INS42 INS7 INS42 INS32 INS42 INS42 INS42 INS33 MOV42 MOV42 UPD42 MOV42 INS42 INS2 INS42 INS42 INS32 INS34 INS42 INS42 INS45 DEL66 DEL42 DEL42 DEL42 DEL43 DEL69 DEL69 DEL42 DEL43 DEL69 DEL68 DEL65 DEL33 DEL40 DEL42 DEL45 DEL32 DEL34 DEL2 DEL32 DEL42 DEL33 DEL27 DEL42 DEL7 DEL21 DEL8 DEL25 DEL8