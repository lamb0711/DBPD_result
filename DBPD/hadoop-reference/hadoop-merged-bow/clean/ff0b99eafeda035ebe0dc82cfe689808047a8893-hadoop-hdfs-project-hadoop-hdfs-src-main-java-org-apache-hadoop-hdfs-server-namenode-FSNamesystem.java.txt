HDFS-10872. Add MutableRate metrics for FSNamesystemLock operations. Contributed by Erik Krogen.

+import org.apache.hadoop.metrics2.lib.MetricsRegistry;
+import org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation;
+  private final MetricsRegistry registry = new MetricsRegistry("FSNamesystem");
+  @Metric final MutableRatesWithAggregation detailedLockHoldTimeMetrics =
+      registry.newRatesWithAggregation("detailedLockHoldTimeMetrics");
-      writeUnlock();
+      writeUnlock("setImageLoaded");
-    fsLock = new FSNamesystemLock(conf);
+    fsLock = new FSNamesystemLock(conf, detailedLockHoldTimeMetrics);
-      writeUnlock();
+      writeUnlock("loadFSImage");
-      writeUnlock();
+      writeUnlock("startCommonServices");
-      writeUnlock();
+      writeUnlock("stopCommonServices");
-      writeUnlock();
+      writeUnlock("startActiveServices");
-      writeUnlock();
+      writeUnlock("stopActiveServices");
+  public void readUnlock(String opName) {
+    this.fsLock.readUnlock(opName);
+  }
+  public void writeUnlock(String opName) {
+    this.fsLock.writeUnlock(opName);
+  }
-      readUnlock();
+      readUnlock("getNamespaceInfo");
-      readUnlock();
+      readUnlock("getBlocks");
-      writeUnlock();
+      writeUnlock("metaSave");
+    final String operationName = "setPermission";
-      logAuditEvent(false, "setPermission", src);
+      logAuditEvent(false, operationName, src);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "setPermission", src, null, auditStat);
+    logAuditEvent(true, operationName, src, null, auditStat);
+    final String operationName = "setOwner";
-      logAuditEvent(false, "setOwner", src);
+      logAuditEvent(false, operationName, src);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "setOwner", src, null, auditStat);
+    logAuditEvent(true, operationName, src, null, auditStat);
+    final String operationName = "open";
-      logAuditEvent(false, "open", srcArg);
+      logAuditEvent(false, operationName, srcArg);
-      readUnlock();
+      readUnlock(operationName);
-    logAuditEvent(true, "open", srcArg);
+    logAuditEvent(true, operationName, srcArg);
-        writeUnlock();
+        writeUnlock(operationName);
+    final String operationName = "concat";
-      logAuditEvent(success, "concat", Arrays.toString(srcs), target, stat);
+      logAuditEvent(success, operationName, Arrays.toString(srcs),
+          target, stat);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(success, "concat", Arrays.toString(srcs), target, stat);
+    logAuditEvent(success, operationName, Arrays.toString(srcs), target, stat);
+    final String operationName = "setTimes";
-      logAuditEvent(false, "setTimes", src);
+      logAuditEvent(false, operationName, src);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "setTimes", src, null, auditStat);
+    logAuditEvent(true, operationName, src, null, auditStat);
+    final String operationName = "truncate";
-        writeUnlock();
+        writeUnlock(operationName);
-      logAuditEvent(true, "truncate", src, null, r.getFileStatus());
+      logAuditEvent(true, operationName, src, null, r.getFileStatus());
-      logAuditEvent(false, "truncate", src);
+      logAuditEvent(false, operationName, src);
+    final String operationName = "createSymlink";
-      logAuditEvent(false, "createSymlink", link, target, null);
+      logAuditEvent(false, operationName, link, target, null);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "createSymlink", link, target, auditStat);
+    logAuditEvent(true, operationName, link, target, auditStat);
+    final String operationName = "setReplication";
-      logAuditEvent(false, "setReplication", src);
+      logAuditEvent(false, operationName, src);
-      writeUnlock();
+      writeUnlock(operationName);
-      logAuditEvent(true, "setReplication", src);
+      logAuditEvent(true, operationName, src);
+    final String operationName = "setStoragePolicy";
-      logAuditEvent(false, "setStoragePolicy", src);
+      logAuditEvent(false, operationName, src);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "setStoragePolicy", src, null, auditStat);
+    logAuditEvent(true, operationName, src, null, auditStat);
+    final String operationName = "unsetStoragePolicy";
-      logAuditEvent(false, "unsetStoragePolicy", src);
+      logAuditEvent(false, operationName, src);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "unsetStoragePolicy", src, null, auditStat);
+    logAuditEvent(true, operationName, src, null, auditStat);
-      readUnlock();
+      readUnlock("getStoragePolicy");
-      readUnlock();
+      readUnlock("getStoragePolicies");
-      readUnlock();
+      readUnlock("getPreferredBlockSize");
-      writeUnlock();
+      writeUnlock("create");
-      writeUnlock();
+      writeUnlock("recoverLease");
+    final String operationName = "append";
-        writeUnlock();
+        writeUnlock(operationName);
-      logAuditEvent(true, "append", srcArg);
+      logAuditEvent(true, operationName, srcArg);
-      logAuditEvent(false, "append", srcArg);
+      logAuditEvent(false, operationName, srcArg);
+    final String operationName = "getAdditionalBlock";
-      readUnlock();
+      readUnlock(operationName);
-      writeUnlock();
+      writeUnlock(operationName);
-      readUnlock();
+      readUnlock("getAdditionalDatanode");
-      writeUnlock();
+      writeUnlock("abandonBlock");
-      writeUnlock();
+      writeUnlock("completeFile");
+    final String operationName = "rename";
-      logAuditEvent(false, "rename", src, dst, null);
+      logAuditEvent(false, operationName, src, dst, null);
-      writeUnlock();
+      writeUnlock(operationName);
-      logAuditEvent(success, "rename", src, dst, ret.auditStat);
+      logAuditEvent(success, operationName, src, dst, ret.auditStat);
+    final String operationName = "rename";
-      logAuditEvent(false, "rename (options=" + Arrays.toString(options) +
-          ")", src, dst, null);
+      logAuditEvent(false, operationName + " (options=" +
+          Arrays.toString(options) + ")", src, dst, null);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "rename (options=" + Arrays.toString(options) +
-        ")", src, dst, res.auditStat);
+    logAuditEvent(true, operationName + " (options=" +
+        Arrays.toString(options) + ")", src, dst, res.auditStat);
+    final String operationName = "delete";
-      logAuditEvent(false, "delete", src);
+      logAuditEvent(false, operationName, src);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "delete", src);
+    logAuditEvent(true, operationName, src);
-        writeUnlock();
+        writeUnlock("removeBlocks");
+    final String operationName = "getfileinfo";
-      logAuditEvent(false, "getfileinfo", src);
+      logAuditEvent(false, operationName, src);
-      readUnlock();
+      readUnlock(operationName);
-    logAuditEvent(true, "getfileinfo", src);
+    logAuditEvent(true, operationName, src);
+    final String operationName = "isFileClosed";
-      logAuditEvent(false, "isFileClosed", src);
+      logAuditEvent(false, operationName, src);
-      readUnlock();
+      readUnlock(operationName);
+    final String operationName = "mkdirs";
-      logAuditEvent(false, "mkdirs", src);
+      logAuditEvent(false, operationName, src);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "mkdirs", src, null, auditStat);
+    logAuditEvent(true, operationName, src, null, auditStat);
+    final String operationName = "contentSummary";
-      logAuditEvent(success, "contentSummary", src);
+      logAuditEvent(success, operationName, src);
-      readUnlock();
+      readUnlock(operationName);
-    logAuditEvent(success, "contentSummary", src);
+    logAuditEvent(success, operationName, src);
+    final String operationName = "quotaUsage";
-      logAuditEvent(success, "quotaUsage", src);
+      logAuditEvent(success, operationName, src);
-      readUnlock();
+      readUnlock(operationName);
-    logAuditEvent(success, "quotaUsage", src);
+    logAuditEvent(success, operationName, src);
+    final String operationName = "setQuota";
-      logAuditEvent(success, "setQuota", src);
+      logAuditEvent(success, operationName, src);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(success, "setQuota", src);
+    logAuditEvent(success, operationName, src);
-      writeUnlock();
+      writeUnlock("fsync");
-      writeUnlock();
+      writeUnlock("commitBlockSynchronization");
-      readUnlock();
+      readUnlock("renewLease");
+    final String operationName = "listStatus";
-      logAuditEvent(false, "listStatus", src);
+      logAuditEvent(false, operationName, src);
-      readUnlock();
+      readUnlock(operationName);
-    logAuditEvent(true, "listStatus", src);
+    logAuditEvent(true, operationName, src);
-      writeUnlock();
+      writeUnlock("registerDatanode");
-      readUnlock();
+      readUnlock("handleHeartbeat");
-        writeUnlock();
+        writeUnlock("clearCorruptLazyPersistFiles");
-      readUnlock();
+      readUnlock("getNumberOfDatanodes");
-      readUnlock();
+      readUnlock("datanodeReport");
-      readUnlock();
+      readUnlock("getDatanodeStorageReport");
-      readUnlock();
+      readUnlock("saveNamespace");
-      writeUnlock();
+      writeUnlock("restoreFailedStorage");
-      writeUnlock();
+      writeUnlock("finalizeUpgrade");
-      readUnlock();
+      readUnlock("getCompleteBlocksTotal");
-      writeUnlock();
+      writeUnlock("enterSafeMode");
-      writeUnlock();
+      writeUnlock("leaveSafeMode");
-      writeUnlock();
+      writeUnlock("rollEditLog");
-      writeUnlock();
+      writeUnlock("startCheckpoint");
-      writeUnlock();
+      writeUnlock("processIncrementalBlockReport");
-      readUnlock();
+      readUnlock("endCheckpoint");
-      writeUnlock();
+      writeUnlock("reportBadBlocks");
-      writeUnlock();
+      writeUnlock("bumpBlockGenerationStamp");
-      writeUnlock();
+      writeUnlock("updatePipeline");
-      writeUnlock();
+      writeUnlock("registerBackupNode");
-      writeUnlock();
+      writeUnlock("releaseBackupNode");
-      readUnlock();
+      readUnlock("listCorruptFileBlocks");
-      writeUnlock();
+      writeUnlock("getDelegationToken");
-      writeUnlock();
+      writeUnlock("renewDelegationToken");
-      writeUnlock();
+      writeUnlock("cancelDelegationToken");
+    final String operationName = "allowSnapshot";
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(success, "allowSnapshot", path, null, null);
+    logAuditEvent(success, operationName, path, null, null);
+    final String operationName = "disallowSnapshot";
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(success, "disallowSnapshot", path, null, null);
+    logAuditEvent(success, operationName, path, null, null);
+    final String operationName = "createSnapshot";
-      logAuditEvent(success, "createSnapshot", snapshotRoot,
+      logAuditEvent(success, operationName, snapshotRoot,
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(success, "createSnapshot", snapshotRoot,
+    logAuditEvent(success, operationName, snapshotRoot,
+    final String operationName = "renameSnapshot";
-      logAuditEvent(success, "renameSnapshot", oldSnapshotRoot,
+      logAuditEvent(success, operationName, oldSnapshotRoot,
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(success, "renameSnapshot", oldSnapshotRoot,
+    logAuditEvent(success, operationName, oldSnapshotRoot,
+    final String operationName = "listSnapshottableDirectory";
-      logAuditEvent(success, "listSnapshottableDirectory", null, null, null);
+      logAuditEvent(success, operationName, null, null, null);
-      readUnlock();
+      readUnlock(operationName);
-    logAuditEvent(success, "listSnapshottableDirectory", null, null, null);
+    logAuditEvent(success, operationName, null, null, null);
+    final String operationName = "computeSnapshotDiff";
-      logAuditEvent(success, "computeSnapshotDiff", fromSnapshotRoot,
+      logAuditEvent(success, operationName, fromSnapshotRoot,
-      readUnlock();
+      readUnlock(operationName);
-    logAuditEvent(success, "computeSnapshotDiff", fromSnapshotRoot,
+    logAuditEvent(success, operationName, fromSnapshotRoot,
+    final String operationName = "deleteSnapshot";
-      logAuditEvent(success, "deleteSnapshot", rootPath, null, null);
+      logAuditEvent(success, operationName, rootPath, null, null);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(success, "deleteSnapshot", rootPath, null, null);
+    logAuditEvent(success, operationName, rootPath, null, null);
-      readUnlock();
+      readUnlock("queryRollingUpgrade");
+    final String operationName = "startRollingUpgrade";
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "startRollingUpgrade", null, null, null);
+    logAuditEvent(true, operationName, null, null, null);
-      readUnlock();
+      readUnlock("getRollingUpgradeStatus");
+    final String operationName = "finalizeRollingUpgrade";
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "finalizeRollingUpgrade", null, null, null);
+    logAuditEvent(true, operationName, null, null, null);
+    final String operationName = "addCacheDirective";
-      logAuditEvent(success, "addCacheDirective", null,
+      logAuditEvent(success, operationName, null,
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(success, "addCacheDirective", effectiveDirectiveStr,
+    logAuditEvent(success, operationName, effectiveDirectiveStr,
+    final String operationName = "modifyCacheDirective";
-      logAuditEvent(success, "modifyCacheDirective", idStr,
+      logAuditEvent(success, operationName, idStr,
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(success, "modifyCacheDirective", idStr,
+    logAuditEvent(success, operationName, idStr,
+    final String operationName = "removeCacheDirective";
-      logAuditEvent(success, "removeCacheDirective", idStr, null, null);
+      logAuditEvent(success, operationName, idStr, null, null);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(success, "removeCacheDirective", idStr, null, null);
+    logAuditEvent(success, operationName, idStr, null, null);
+    final String operationName = "listCacheDirectives";
-      logAuditEvent(success, "listCacheDirectives", filter.toString(), null,
+      logAuditEvent(success, operationName, filter.toString(), null,
-      readUnlock();
+      readUnlock(operationName);
-    logAuditEvent(success, "listCacheDirectives", filter.toString(), null,
+    logAuditEvent(success, operationName, filter.toString(), null,
+    final String operationName = "addCachePool";
-      logAuditEvent(success, "addCachePool", poolInfoStr, null, null);
+      logAuditEvent(success, operationName, poolInfoStr, null, null);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(success, "addCachePool", poolInfoStr, null, null);
+    logAuditEvent(success, operationName, poolInfoStr, null, null);
+    final String operationName = "modifyCachePool";
-      logAuditEvent(success, "modifyCachePool", poolNameStr,
+      logAuditEvent(success, operationName, poolNameStr,
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(success, "modifyCachePool", poolNameStr,
+    logAuditEvent(success, operationName, poolNameStr,
+    final String operationName = "removeCachePool";
-      logAuditEvent(success, "removeCachePool", poolNameStr, null, null);
+      logAuditEvent(success, operationName, poolNameStr, null, null);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(success, "removeCachePool", poolNameStr, null, null);
+    logAuditEvent(success, operationName, poolNameStr, null, null);
+    final String operationName = "listCachePools";
-      logAuditEvent(success, "listCachePools", null, null, null);
+      logAuditEvent(success, operationName, null, null, null);
-      readUnlock();
+      readUnlock(operationName);
-    logAuditEvent(success, "listCachePools", null, null, null);
+    logAuditEvent(success, operationName, null, null, null);
+    final String operationName = "modifyAclEntries";
-      logAuditEvent(false, "modifyAclEntries", src);
+      logAuditEvent(false, operationName, src);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "modifyAclEntries", src, null, auditStat);
+    logAuditEvent(true, operationName, src, null, auditStat);
+    final String operationName = "removeAclEntries";
-      logAuditEvent(false, "removeAclEntries", src);
+      logAuditEvent(false, operationName, src);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "removeAclEntries", src, null, auditStat);
+    logAuditEvent(true, operationName, src, null, auditStat);
+    final String operationName = "removeDefaultAcl";
-      logAuditEvent(false, "removeDefaultAcl", src);
+      logAuditEvent(false, operationName, src);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "removeDefaultAcl", src, null, auditStat);
+    logAuditEvent(true, operationName, src, null, auditStat);
+    final String operationName = "removeAcl";
-      logAuditEvent(false, "removeAcl", src);
+      logAuditEvent(false, operationName, src);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "removeAcl", src, null, auditStat);
+    logAuditEvent(true, operationName, src, null, auditStat);
+    final String operationName = "setAcl";
-      logAuditEvent(false, "setAcl", src);
+      logAuditEvent(false, operationName, src);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "setAcl", src, null, auditStat);
+    logAuditEvent(true, operationName, src, null, auditStat);
+    final String operationName = "getAclStatus";
-      logAuditEvent(false, "getAclStatus", src);
+      logAuditEvent(false, operationName, src);
-      readUnlock();
+      readUnlock(operationName);
-    logAuditEvent(true, "getAclStatus", src);
+    logAuditEvent(true, operationName, src);
+    final String operationName = "createEncryptionZone";
-        writeUnlock();
+        writeUnlock(operationName);
-      logAuditEvent(true, "createEncryptionZone", src, null, resultingStat);
+      logAuditEvent(true, operationName, src, null, resultingStat);
-      logAuditEvent(false, "createEncryptionZone", src);
+      logAuditEvent(false, operationName, src);
+    final String operationName = "getEZForPath";
-      logAuditEvent(success, "getEZForPath", srcArg, null, resultingStat);
+      logAuditEvent(success, operationName, srcArg, null, resultingStat);
-      readUnlock();
+      readUnlock(operationName);
-    logAuditEvent(success, "getEZForPath", srcArg, null, resultingStat);
+    logAuditEvent(success, operationName, srcArg, null, resultingStat);
+    final String operationName = "listEncryptionZones";
-      readUnlock();
-      logAuditEvent(success, "listEncryptionZones", null);
+      readUnlock(operationName);
+      logAuditEvent(success, operationName, null);
+    final String operationName = "setErasureCodingPolicy";
-      logAuditEvent(success, "setErasureCodingPolicy", srcArg, null,
+      logAuditEvent(success, operationName, srcArg, null,
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(success, "setErasureCodingPolicy", srcArg, null,
+    logAuditEvent(success, operationName, srcArg, null,
-      readUnlock();
+      readUnlock("getErasureCodingPolicy");
-      readUnlock();
+      readUnlock("getErasureCodingPolicies");
+    final String operationName = "setXAttr";
-      logAuditEvent(false, "setXAttr", src);
+      logAuditEvent(false, operationName, src);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "setXAttr", src, null, auditStat);
+    logAuditEvent(true, operationName, src, null, auditStat);
+    final String operationName = "getXAttrs";
-      logAuditEvent(false, "getXAttrs", src);
+      logAuditEvent(false, operationName, src);
-      readUnlock();
+      readUnlock(operationName);
-    logAuditEvent(true, "getXAttrs", src);
+    logAuditEvent(true, operationName, src);
+    final String operationName = "listXAttrs";
-      logAuditEvent(false, "listXAttrs", src);
+      logAuditEvent(false, operationName, src);
-      readUnlock();
+      readUnlock(operationName);
-    logAuditEvent(true, "listXAttrs", src);
+    logAuditEvent(true, operationName, src);
+    final String operationName = "removeXAttr";
-      logAuditEvent(false, "removeXAttr", src);
+      logAuditEvent(false, operationName, src);
-      writeUnlock();
+      writeUnlock(operationName);
-    logAuditEvent(true, "removeXAttr", src, null, auditStat);
+    logAuditEvent(true, operationName, src, null, auditStat);
+    final String operationName = "checkAccess";
-      logAuditEvent(false, "checkAccess", src);
+      logAuditEvent(false, operationName, src);
-      readUnlock();
+      readUnlock(operationName);

INS26 INS26 INS40 INS40 INS23 INS23 INS31 INS31 INS83 INS83 INS43 INS59 INS78 INS83 INS43 INS59 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS14 INS42 INS42 INS42 INS32 INS43 INS42 INS21 INS43 INS42 INS21 INS60 INS60 INS60 INS60 INS21 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 MOV21 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 MOV21 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS54 INS60 INS60 INS43 INS45 INS42 INS42 INS45 INS42 INS32 INS42 INS32 INS83 INS43 INS59 INS12 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS32 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 MOV12 INS8 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS12 INS83 INS43 INS59 MOV12 INS8 INS83 INS43 INS59 INS83 INS43 INS59 INS8 MOV8 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS8 INS83 INS43 INS59 MOV8 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS12 INS83 INS43 INS59 INS12 INS83 INS43 INS59 INS12 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 MOV8 MOV12 MOV8 INS83 INS43 INS59 MOV12 INS8 INS83 INS43 INS59 MOV12 INS8 INS42 INS22 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS45 INS44 INS8 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV32 MOV42 MOV42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS45 MOV44 INS42 INS42 INS45 INS42 INS42 INS42 INS45 MOV21 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS44 INS42 INS42 INS45 UPD9 INS40 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS45 MOV44 INS42 INS42 INS42 INS45 MOV44 INS8 INS42 INS42 INS42 INS45 MOV44 MOV21 INS42 INS42 INS42 INS45 MOV44 INS42 INS42 INS42 INS45 INS42 INS21 MOV21 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 MOV44 INS42 INS42 INS42 INS45 INS44 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 MOV44 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS21 MOV25 INS42 INS42 INS42 INS45 MOV44 INS42 MOV32 INS42 INS42 INS45 INS44 INS42 INS42 INS42 INS45 INS44 INS42 MOV32 INS42 INS42 INS45 MOV44 INS42 INS42 INS42 INS45 MOV44 INS8 INS42 INS42 INS42 INS45 MOV44 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS44 INS8 INS42 INS42 INS42 INS45 INS44 INS8 INS42 INS42 INS42 INS45 INS44 INS8 INS42 INS42 INS42 INS45 MOV44 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 MOV44 INS42 INS42 INS42 INS45 INS42 INS42 INS45 MOV44 INS42 INS42 INS42 INS45 INS42 INS42 INS45 MOV44 INS42 INS42 INS42 INS45 MOV44 INS42 INS42 INS42 INS45 MOV44 INS42 UPD42 MOV42 INS42 INS45 INS42 INS42 INS42 INS45 MOV21 INS42 INS42 INS42 INS45 MOV21 INS42 INS52 INS42 INS52 INS42 INS43 INS42 INS21 INS53 MOV42 INS43 INS42 INS53 INS21 INS42 UPD45 MOV43 MOV42 MOV53 MOV21 INS21 MOV53 INS32 MOV53 INS43 INS42 INS53 MOV53 MOV43 MOV53 INS32 MOV53 INS43 INS42 INS53 INS43 INS42 INS53 MOV53 INS21 MOV53 MOV53 INS43 INS42 INS21 INS53 INS43 INS42 INS21 INS53 INS43 INS42 INS21 INS53 MOV43 MOV42 MOV42 MOV53 MOV53 MOV42 MOV53 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV42 INS42 INS42 INS42 UPD42 UPD42 INS45 INS45 INS45 INS45 INS45 INS42 INS42 INS42 INS45 INS45 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 UPD42 UPD42 INS42 INS45 INS45 INS45 INS42 INS45 INS45 INS45 INS45 INS45 INS42 INS45 INS45 UPD42 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS42 MOV42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 MOV42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 MOV42 INS42 INS42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS45 MOV42 INS42 MOV42 MOV42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 INS42 INS9 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS27 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 MOV16 INS33 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 MOV32 INS45 INS45 INS42 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL42 DEL42 DEL45 DEL32 DEL21 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL9 DEL45 DEL8 DEL12 DEL42 DEL32 DEL21 DEL8 DEL45 DEL45 DEL45 DEL45 DEL45 DEL33 DEL42 DEL9 DEL45 DEL45 DEL27 DEL42 DEL42 DEL40 DEL32 DEL21 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL42 DEL8 DEL12 DEL42 DEL32 DEL21 DEL8 DEL45 DEL45 DEL45 DEL45 DEL45 DEL42 DEL32 DEL21 DEL8 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL42 DEL32 DEL21 DEL8 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL8 DEL45 DEL42 DEL42 DEL45 DEL42 DEL33 DEL32 DEL21 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL42 DEL9 DEL45 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL45 DEL45 DEL9 DEL45 DEL8 DEL12 DEL42 DEL32 DEL21 DEL8 DEL45 DEL45 DEL9 DEL45 DEL8 DEL12 DEL42 DEL32 DEL21 DEL8