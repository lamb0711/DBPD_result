HDFS-8169. Move LocatedBlocks and related classes to hdfs-client. Contributed by Haohui Mai.

-import org.apache.hadoop.hdfs.DFSConfigKeys;
-import org.apache.hadoop.hdfs.DFSUtil;
+import org.apache.hadoop.hdfs.DFSUtilClient;
-import static org.apache.hadoop.hdfs.DFSUtil.percent2String;
+import static org.apache.hadoop.hdfs.DFSUtilClient.percent2String;
-/** 
+/**
-  
-  
+
+
-    NORMAL("In Service"), 
-    DECOMMISSION_INPROGRESS("Decommission In Progress"), 
+    NORMAL("In Service"),
+    DECOMMISSION_INPROGRESS("Decommission In Progress"),
-    
+
-    this.adminState = null;    
+    this.adminState = null;
-  
+
-  
+
-  
+
-  
+
-  
+
-  public long getNonDfsUsed() { 
+  public long getNonDfsUsed() {
-  public float getDfsUsedPercent() { 
-    return DFSUtil.getPercentUsed(dfsUsed, capacity);
+  public float getDfsUsedPercent() {
+    return DFSUtilClient.getPercentUsed(dfsUsed, capacity);
-    return DFSUtil.getPercentUsed(blockPoolUsed, capacity);
+    return DFSUtilClient.getPercentUsed(blockPoolUsed, capacity);
-  
+
-  public float getRemainingPercent() { 
-    return DFSUtil.getPercentRemaining(remaining, capacity);
+  public float getRemainingPercent() {
+    return DFSUtilClient.getPercentRemaining(remaining, capacity);
-    return DFSUtil.getPercentUsed(cacheUsed, cacheCapacity);
+    return DFSUtilClient.getPercentUsed(cacheUsed, cacheCapacity);
-    return DFSUtil.getPercentRemaining(getCacheRemaining(), cacheCapacity);
+    return DFSUtilClient.getPercentRemaining(getCacheRemaining(), cacheCapacity);
-  /** 
+  /**
-   * Should not be used to convert to Date.  
+   * Should not be used to convert to Date.
-  public void setCapacity(long capacity) { 
-    this.capacity = capacity; 
+  public void setCapacity(long capacity) {
+    this.capacity = capacity;
-  
+
-  public void setRemaining(long remaining) { 
-    this.remaining = remaining; 
+  public void setRemaining(long remaining) {
+    this.remaining = remaining;
-  public void setBlockPoolUsed(long bpUsed) { 
-    this.blockPoolUsed = bpUsed; 
+  public void setBlockPoolUsed(long bpUsed) {
+    this.blockPoolUsed = bpUsed;
-  public void setLastUpdate(long lastUpdate) { 
-    this.lastUpdate = lastUpdate; 
+  public void setLastUpdate(long lastUpdate) {
+    this.lastUpdate = lastUpdate;
-  public void setXceiverCount(int xceiverCount) { 
-    this.xceiverCount = xceiverCount; 
+  public void setXceiverCount(int xceiverCount) {
+    this.xceiverCount = xceiverCount;
-    
+
-  
+
-  
+
-  
+
-    
+
- 
+
-   * Check if the datanode is in stale state. Here if 
-   * the namenode has not received heartbeat msg from a 
-   * datanode for more than staleInterval (default value is
-   * {@link DFSConfigKeys#DFS_NAMENODE_STALE_DATANODE_INTERVAL_DEFAULT}),
+   * Check if the datanode is in stale state. Here if
+   * the namenode has not received heartbeat msg from a
+   * datanode for more than staleInterval,
-   * 
+   *
-  
+
-   
+
-  
+

UPD40 UPD40 UPD66 UPD66 UPD66 UPD66 UPD42 UPD42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL42 DEL42 DEL67 DEL65 DEL66