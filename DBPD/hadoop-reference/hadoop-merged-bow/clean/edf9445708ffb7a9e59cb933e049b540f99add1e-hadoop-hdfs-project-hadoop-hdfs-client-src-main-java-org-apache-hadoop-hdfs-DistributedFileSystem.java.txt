HDFS-13109. Support fully qualified hdfs path in EZ commands. Contributed by Hanisha Koneru.

+import org.apache.hadoop.fs.FileAlreadyExistsException;
+  /* HDFS only */
+  public void provisionEZTrash(final Path path,
+      final FsPermission trashPermission) throws IOException {
+    Path absF = fixRelativePart(path);
+    new FileSystemLinkResolver<Void>() {
+      @Override
+      public Void doCall(Path p) throws IOException {
+        provisionEZTrash(getPathName(p), trashPermission);
+        return null;
+      }
+
+      @Override
+      public Void next(FileSystem fs, Path p) throws IOException {
+        if (fs instanceof DistributedFileSystem) {
+          DistributedFileSystem myDfs = (DistributedFileSystem)fs;
+          myDfs.provisionEZTrash(p, trashPermission);
+          return null;
+        }
+        throw new UnsupportedOperationException("Cannot provisionEZTrash " +
+            "through a symlink to a non-DistributedFileSystem: " + fs + " -> "
+            + p);
+      }
+    }.resolve(this, absF);
+  }
+
+  private void provisionEZTrash(String path, FsPermission trashPermission)
+      throws IOException {
+    // make sure the path is an EZ
+    EncryptionZone ez = dfs.getEZForPath(path);
+    if (ez == null) {
+      throw new IllegalArgumentException(path + " is not an encryption zone.");
+    }
+
+    String ezPath = ez.getPath();
+    if (!path.toString().equals(ezPath)) {
+      throw new IllegalArgumentException(path + " is not the root of an " +
+          "encryption zone. Do you mean " + ez.getPath() + "?");
+    }
+
+    // check if the trash directory exists
+    Path trashPath = new Path(ez.getPath(), FileSystem.TRASH_PREFIX);
+    try {
+      FileStatus trashFileStatus = getFileStatus(trashPath);
+      String errMessage = "Will not provision new trash directory for " +
+          "encryption zone " + ez.getPath() + ". Path already exists.";
+      if (!trashFileStatus.isDirectory()) {
+        errMessage += "\r\n" +
+            "Warning: " + trashPath.toString() + " is not a directory";
+      }
+      if (!trashFileStatus.getPermission().equals(trashPermission)) {
+        errMessage += "\r\n" +
+            "Warning: the permission of " +
+            trashPath.toString() + " is not " + trashPermission;
+      }
+      throw new FileAlreadyExistsException(errMessage);
+    } catch (FileNotFoundException ignored) {
+      // no trash path
+    }
+
+    // Update the permission bits
+    mkdir(trashPath, trashPermission);
+    setPermission(trashPath, trashPermission);
+  }
+

INS26 INS40 INS31 INS31 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS83 INS43 INS42 INS83 INS43 INS42 INS42 INS60 INS21 INS43 INS42 INS43 INS42 INS42 INS60 INS25 INS60 INS25 INS60 INS54 INS21 INS21 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS43 INS59 INS27 INS8 INS43 INS59 INS38 INS8 INS43 INS59 INS8 INS12 INS32 INS32 INS42 INS42 INS32 INS14 INS42 INS52 INS42 INS42 INS42 INS32 INS42 INS33 INS53 INS42 INS42 INS32 INS32 INS53 INS42 INS42 INS14 INS60 INS60 INS25 INS25 INS53 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS1 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS14 INS43 INS32 INS40 INS43 INS59 INS43 INS59 INS38 INS8 INS38 INS8 INS14 INS43 INS42 INS43 INS43 INS31 INS31 INS43 INS27 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS27 INS32 INS21 INS32 INS21 INS43 INS42 INS42 INS42 INS42 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS42 INS42 INS45 INS42 INS42 INS45 INS45 INS32 INS45 INS42 INS42 INS27 INS32 INS45 INS42 INS42 INS7 INS32 INS42 INS42 INS7 INS42 INS42 INS42 INS43 INS42 INS42 INS21 INS41 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS25 INS53 INS42 INS42 INS45 INS45 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS27 INS42 INS32 INS33 INS42 INS42 INS62 INS8 INS14 INS27 INS32 INS45 INS27 INS32 INS45 INS42 INS42 INS32 INS42 INS42 INS43 INS60 INS21 INS41 INS43 INS27 INS45 INS45 INS42 INS42 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS33 INS42 INS27 INS42 INS45 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS45 INS45 INS43 INS42 INS42