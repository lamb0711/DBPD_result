HDFS-7235. DataNode#transferBlock should report blocks that don't exist using reportBadBlock (yzhang via cmccabe)

+import java.io.EOFException;
+import org.apache.hadoop.hdfs.server.datanode.UnexpectedReplicaStateException;
+   * Check if a block is valid.
+   *
+   * @param b           The block to check.
+   * @param minLength   The minimum length that the block must have.  May be 0.
+   * @param state       If this is null, it is ignored.  If it is non-null, we
+   *                        will check that the replica has this state.
+   *
+   * @throws ReplicaNotFoundException          If the replica is not found 
+   *
+   * @throws UnexpectedReplicaStateException   If the replica is not in the 
+   *                                             expected state.
+   * @throws FileNotFoundException             If the block file is not found or there
+   *                                              was an error locating it.
+   * @throws EOFException                      If the replica length is too short.
+   * 
+   * @throws IOException                       May be thrown from the methods called. 
+   */
+  public void checkBlock(ExtendedBlock b, long minLength, ReplicaState state)
+      throws ReplicaNotFoundException, UnexpectedReplicaStateException,
+      FileNotFoundException, EOFException, IOException {
+    final ReplicaInfo replicaInfo = volumeMap.get(b.getBlockPoolId(), 
+        b.getLocalBlock());
+    if (replicaInfo == null) {
+      throw new ReplicaNotFoundException(b);
+    }
+    if (replicaInfo.getState() != state) {
+      throw new UnexpectedReplicaStateException(b,state);
+    }
+    if (!replicaInfo.getBlockFile().exists()) {
+      throw new FileNotFoundException(replicaInfo.getBlockFile().getPath());
+    }
+    long onDiskLength = getLength(b);
+    if (onDiskLength < minLength) {
+      throw new EOFException(b + "'s on-disk length " + onDiskLength
+          + " is shorter than minLength " + minLength);
+    }
+  }
+
+  /**
-
+  
-    final ReplicaInfo replicaInfo = volumeMap.get(b.getBlockPoolId(), 
-        b.getLocalBlock());
-    return replicaInfo != null
-        && replicaInfo.getState() == state
-        && replicaInfo.getBlockFile().exists();
+    try {
+      checkBlock(b, 0, state);
+    } catch (IOException e) {
+      return false;
+    }
+    return true;

INS26 INS26 INS40 INS40 INS31 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS43 INS43 INS43 INS43 MOV8 INS8 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS39 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS25 INS25 INS25 INS60 INS25 INS54 INS41 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS27 INS8 UPD27 MOV27 INS8 INS38 INS8 INS39 INS59 INS27 INS8 INS8 INS12 INS9 MOV42 MOV33 INS53 INS53 MOV32 INS53 INS42 INS32 INS42 INS42 INS53 INS21 INS44 INS8 INS14 INS14 INS14 INS42 INS42 INS14 INS32 INS43 INS42 INS41 INS43 INS42 INS43 INS42 INS42 INS43 INS32 INS43 INS27 INS42 INS42 INS34 INS42 INS42 INS9 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS42 INS42 DEL27 DEL27 DEL27 DEL41