HADOOP-15996.  Improved Kerberos username mapping strategy in Hadoop.
               Contributed by Bolke de Bruin

+  /**
+   * Constant that defines auth_to_local legacy hadoop evaluation
+   */
+  public static final String MECHANISM_HADOOP = "hadoop";
+
+  /**
+   * Constant that defines auth_to_local MIT evaluation
+   */
+  public static final String MECHANISM_MIT = "mit";
+
+  /** Constant that defines the default behavior of the rule mechanism */
+  public static final String DEFAULT_MECHANISM = MECHANISM_HADOOP;
+
+  /**
+   * How to evaluate auth_to_local rules
+   */
+  private static String ruleMechanism = null;
+
+     * @param ruleMechanism defines the rule evaluation mechanism
-    String apply(String[] params) throws IOException {
+    String apply(String[] params, String ruleMechanism) throws IOException {
-      if (result != null && nonSimplePattern.matcher(result).find()) {
+      if (result != null
+              && nonSimplePattern.matcher(result).find()
+              && ruleMechanism.equalsIgnoreCase(MECHANISM_HADOOP)) {
+    String ruleMechanism = this.ruleMechanism;
+    if (ruleMechanism == null && rules != null) {
+      LOG.warn("auth_to_local rule mechanism not set."
+      + "Using default of " + DEFAULT_MECHANISM);
+      ruleMechanism = DEFAULT_MECHANISM;
+    }
-      String result = r.apply(params);
+      String result = r.apply(params, ruleMechanism);
-    throw new NoMatchingRule("No rules applied to " + toString());
-  }
-
-  /**
-   * Set the rules.
-   * @param ruleString the rules string.
-   */
-  public static void setRules(String ruleString) {
-    rules = (ruleString != null) ? parseRules(ruleString) : null;
+    if (ruleMechanism.equalsIgnoreCase(MECHANISM_HADOOP)) {
+      throw new NoMatchingRule("No rules applied to " + toString());
+    }
+    return toString();
+  /**
+   * Indicates of the rule mechanism has been set
+   *
+   * @return if the rule mechanism has been set.
+   */
+  public static boolean hasRuleMechanismBeenSet() {
+    return ruleMechanism != null;
+  }
+
+  /**
+   * Set the rules.
+   * @param ruleString the rules string.
+   */
+  public static void setRules(String ruleString) {
+    rules = (ruleString != null) ? parseRules(ruleString) : null;
+  }
+
+  /**
+   *
+   * @param ruleMech the evaluation type: hadoop, mit
+   *                 'hadoop' indicates '@' or '/' are not allowed the result
+   *                 evaluation. 'MIT' indicates that auth_to_local
+   *                 rules follow MIT Kerberos evaluation.
+   */
+  public static void setRuleMechanism(String ruleMech) {
+    if (ruleMech != null
+            && (!ruleMech.equalsIgnoreCase(MECHANISM_HADOOP)
+            && !ruleMech.equalsIgnoreCase(MECHANISM_MIT))) {
+      throw new IllegalArgumentException("Invalid rule mechanism: " + ruleMech);
+    }
+    ruleMechanism = ruleMech;
+  }
+
+  /**
+   * Get the rule evaluation mechanism
+   * @return the rule evaluation mechanism
+   */
+  public static String getRuleMechanism() {
+    return ruleMechanism;
+  }
+

MOV31 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS39 INS42 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS83 INS43 INS42 INS8 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS45 INS65 INS42 INS42 INS42 INS65 INS42 INS42 INS33 INS44 INS60 INS25 INS25 INS41 INS65 INS65 INS41 INS65 INS43 INS42 INS25 INS21 INS65 INS65 INS42 INS41 INS66 INS66 INS66 INS66 INS65 INS43 INS42 MOV43 INS59 INS27 INS8 INS32 INS8 INS32 INS66 INS66 INS27 INS42 INS66 INS66 INS66 INS66 INS42 INS27 INS8 INS7 INS66 INS66 INS42 INS42 INS66 INS42 INS27 INS42 INS22 INS27 INS27 INS21 INS21 INS42 INS42 INS42 MOV53 INS42 INS42 INS33 INS27 INS36 INS53 INS42 INS42 MOV27 INS32 INS52 INS42 INS42 INS33 INS42 INS33 INS32 INS7 INS43 INS42 INS33 INS27 INS14 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS38 INS38 INS43 INS27 INS45 INS45 INS42 INS42 INS32 INS32 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42