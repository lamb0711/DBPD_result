HDFS-12665. [AliasMap] Create a version of the AliasMap that runs in memory in the Namenode (leveldb). Contributed by Ewan Higgs.

+import org.apache.commons.lang3.tuple.Pair;
+import org.apache.hadoop.hdfs.protocol.ProvidedStorageLocation;
-  private final Path path;
-  private final long offset;
-  private final long length;
-  private final long blockId;
+  private final Pair<Block, ProvidedStorageLocation> pair;
-  private final long genStamp;
-    this.path = path;
-    this.offset = offset;
-    this.length = length;
-    this.blockId = blockId;
-    this.bpid = bpid;
-    this.genStamp = genStamp;
+    this(new Block(blockId, length, genStamp),
+        new ProvidedStorageLocation(path, offset, length, new byte[0]), bpid);
-
+  }
+  public FileRegion(Block block,
+      ProvidedStorageLocation providedStorageLocation) {
+    this.pair  = Pair.of(block, providedStorageLocation);
+    this.bpid = null;
+  }
+
+  public FileRegion(Block block,
+      ProvidedStorageLocation providedStorageLocation, String bpid) {
+    this.pair  = Pair.of(block, providedStorageLocation);
+    this.bpid = bpid;
-  @Override
-    return new Block(blockId, length, genStamp);
+    return pair.getKey();
-  @Override
-  public boolean equals(Object other) {
-    if (!(other instanceof FileRegion)) {
-      return false;
-    }
-    FileRegion o = (FileRegion) other;
-    return blockId == o.blockId
-      && offset == o.offset
-      && length == o.length
-      && genStamp == o.genStamp
-      && path.equals(o.path);
-  }
-
-  @Override
-  public int hashCode() {
-    return (int)(blockId & Integer.MIN_VALUE);
-  }
-
-  public Path getPath() {
-    return path;
-  }
-
-  public long getOffset() {
-    return offset;
-  }
-
-  public long getLength() {
-    return length;
-  }
-
-  public long getGenerationStamp() {
-    return genStamp;
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("{ block=\"").append(getBlock()).append("\"");
-    sb.append(", path=\"").append(getPath()).append("\"");
-    sb.append(", off=\"").append(getOffset()).append("\"");
-    sb.append(", len=\"").append(getBlock().getNumBytes()).append("\"");
-    sb.append(", genStamp=\"").append(getBlock()
-        .getGenerationStamp()).append("\"");
-    sb.append(", bpid=\"").append(bpid).append("\"");
-    sb.append(" }");
-    return sb.toString();
+  public ProvidedStorageLocation getProvidedStorageLocation() {
+    return pair.getValue();
+  @Override
+  public boolean equals(Object o) {
+    if (this == o) {
+      return true;
+    }
+    if (o == null || getClass() != o.getClass()) {
+      return false;
+    }
+
+    FileRegion that = (FileRegion) o;
+
+    return pair.equals(that.pair);
+  }
+
+  @Override
+  public int hashCode() {
+    return pair.hashCode();
+  }

INS26 INS26 MOV31 INS40 INS40 INS23 INS31 INS31 INS31 INS31 MOV83 MOV83 INS74 MOV59 INS83 INS42 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV8 INS44 INS44 INS8 MOV83 UPD42 MOV42 INS44 INS44 INS44 INS8 MOV43 UPD42 UPD43 UPD42 MOV78 MOV83 UPD39 MOV39 UPD42 MOV42 MOV44 INS8 MOV78 INS83 INS39 INS42 INS8 INS43 INS43 INS43 UPD42 INS17 INS43 INS42 INS43 INS42 MOV21 MOV21 INS43 INS42 INS43 INS42 INS43 INS42 INS21 MOV21 UPD42 UPD42 INS25 INS25 MOV60 INS41 MOV41 UPD42 MOV42 INS42 INS42 MOV14 INS14 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS7 INS32 INS32 INS27 INS8 INS27 MOV8 MOV43 INS32 INS43 INS42 INS42 INS42 INS3 INS32 INS33 INS22 INS32 INS42 INS42 INS42 INS42 INS52 INS42 MOV41 INS27 INS27 UPD42 UPD42 MOV42 UPD42 MOV42 INS40 UPD42 UPD42 INS42 INS5 INS34 UPD42 INS42 INS42 INS42 INS42 UPD42 INS52 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS9 INS42 INS33 INS32 INS32 MOV43 UPD42 INS39 INS85 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL83 DEL83 DEL39 DEL23 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL41 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL42 DEL42 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL42 DEL78 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL62 DEL36 DEL38 DEL25 DEL42 DEL40 DEL27 DEL42 DEL40 DEL27 DEL27 DEL42 DEL40 DEL27 DEL27 DEL42 DEL40 DEL27 DEL27 DEL40 DEL32 DEL27 DEL41 DEL8 DEL31 DEL42 DEL78 DEL39 DEL39 DEL42 DEL40 DEL27 DEL36 DEL11 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL42 DEL45 DEL32 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL45 DEL32 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL42 DEL32 DEL32 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL31 DEL42