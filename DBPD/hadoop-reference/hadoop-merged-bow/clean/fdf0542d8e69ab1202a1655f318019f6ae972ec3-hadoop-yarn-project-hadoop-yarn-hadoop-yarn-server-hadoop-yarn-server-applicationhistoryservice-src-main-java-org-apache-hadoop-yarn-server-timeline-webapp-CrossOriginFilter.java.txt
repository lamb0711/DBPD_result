Merge branch 'trunk' into HDFS-6581

-import java.io.UnsupportedEncodingException;
-import java.net.URLEncoder;
-    String origin = encodeHeader(req.getHeader(ORIGIN));
-    if (!isCrossOrigin(origin)) {
+    String originsList = encodeHeader(req.getHeader(ORIGIN));
+    if (!isCrossOrigin(originsList)) {
-    if (!isOriginAllowed(origin)) {
+    if (!areOriginsAllowed(originsList)) {
-    res.setHeader(ACCESS_CONTROL_ALLOW_ORIGIN, origin);
+    res.setHeader(ACCESS_CONTROL_ALLOW_ORIGIN, originsList);
-    try {
-      // Protect against HTTP response splitting vulnerability
-      // since value is written as part of the response header
-      return URLEncoder.encode(header, "ASCII");
-    } catch (UnsupportedEncodingException e) {
-      return null;
-    }
+    // Protect against HTTP response splitting vulnerability
+    // since value is written as part of the response header
+    // Ensure this header only has one header by removing
+    // CRs and LFs
+    return header.split("\n|\r")[0].trim();
-  static boolean isCrossOrigin(String origin) {
-    return origin != null;
+  static boolean isCrossOrigin(String originsList) {
+    return originsList != null;
-  boolean isOriginAllowed(String origin) {
+  boolean areOriginsAllowed(String originsList) {
-    for (String allowedOrigin : allowedOrigins) {
-      if (allowedOrigin.contains("*")) {
-        String regex = allowedOrigin.replace(".", "\\.").replace("*", ".*");
-        Pattern p = Pattern.compile(regex);
-        Matcher m = p.matcher(origin);
-        if (m.matches()) {
+    String[] origins = originsList.trim().split("\\s+");
+    for (String origin : origins) {
+      for (String allowedOrigin : allowedOrigins) {
+        if (allowedOrigin.contains("*")) {
+          String regex = allowedOrigin.replace(".", "\\.").replace("*", ".*");
+          Pattern p = Pattern.compile(regex);
+          Matcher m = p.matcher(origin);
+          if (m.matches()) {
+            return true;
+          }
+        } else if (allowedOrigin.equals(origin)) {
-      } else if (allowedOrigin.equals(origin)) {
-        return true;

INS8 UPD42 INS44 INS8 MOV25 MOV41 UPD42 INS43 INS42 MOV25 INS60 INS70 MOV41 MOV8 MOV8 INS32 INS42 INS5 INS59 MOV44 INS42 MOV8 UPD42 UPD42 INS2 INS42 UPD42 INS43 INS85 INS42 INS32 UPD42 UPD42 UPD42 INS32 INS34 INS42 INS32 INS42 INS45 UPD42 MOV42 UPD42 MOV42 UPD45 MOV45 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL32 DEL8 DEL42 DEL43 DEL42 DEL44 DEL33 DEL41 DEL8 DEL12 DEL54 DEL8