Merge trunk into auto-failover branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1308260 13f79535-47bb-0310-9956-ffa450edef68

-     * Get data-node in the form 
-     * <host name> : <port>
-     * where port is a 6 digit integer.
+     * Return a a 6 digit integer port.
-    private static String getNodeName(int port) throws IOException {
-      String machineName = DNS.getDefaultHost("default", "default");
-      String sPort = String.valueOf(100000 + port);
-      if(sPort.length() > 6)
-        throw new IOException("Too many data-nodes.");
-      return machineName + ":" + sPort;
+    private static int getNodePort(int num) throws IOException {
+      int port = 100000 + num;
+      if (String.valueOf(port).length() > 6) {
+        throw new IOException("Too many data-nodes");
+      }
+      return port;
-      dnRegistration = new DatanodeRegistration(getNodeName(dnIdx));
+      String hostName = DNS.getDefaultHost("default", "default");
+      dnRegistration = new DatanodeRegistration(hostName);
+      dnRegistration.setXferPort(getNodePort(dnIdx));
+      dnRegistration.setHostName(hostName);
-    String getName() {
-      return dnRegistration.getName();
+    public String toString() {
+      return dnRegistration.toString();
+    }
+
+    String getXferAddr() {
+      return dnRegistration.getXferAddr();
-    public int compareTo(String name) {
-      return getName().compareTo(name);
+    public int compareTo(String xferAddr) {
+      return getXferAddr().compareTo(xferAddr);
-          receivedDNReg = new DatanodeRegistration(dnInfo.getName());
+          receivedDNReg = new DatanodeRegistration(dnInfo.getIpAddr());
+          receivedDNReg.setXferPort(dnInfo.getXferPort());
+          receivedDNReg.setIpcPort(dnInfo.getIpcPort());
-        assert datanodes[idx].getName().compareTo(prevDNName) > 0
+        assert datanodes[idx].getXferAddr().compareTo(prevDNName) > 0
-        prevDNName = datanodes[idx].getName();
+        prevDNName = datanodes[idx].getXferAddr();
-          int dnIdx = Arrays.binarySearch(datanodes, dnInfo.getName());
+          int dnIdx = Arrays.binarySearch(datanodes, dnInfo.getXferAddr());
-        excludeFile.write(dn.getName().getBytes());
+        excludeFile.write(dn.getXferAddr().getBytes());
-        LOG.info("Datanode " + dn.getName() + " is decommissioned.");
+        LOG.info("Datanode " + dn + " is decommissioned.");

INS31 INS39 UPD42 INS83 MOV43 INS42 INS8 UPD42 UPD42 MOV60 INS21 INS21 INS41 UPD42 UPD66 INS39 INS8 INS42 INS32 INS32 INS32 UPD42 INS27 MOV53 UPD42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 MOV34 UPD42 MOV42 INS32 INS42 INS42 INS42 UPD42 INS42 INS42 UPD42 MOV42 UPD45 INS21 INS21 MOV32 INS32 INS32 MOV32 UPD42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 UPD42 UPD42 INS42 INS42 INS42 INS42 UPD42 UPD42 DEL66 DEL66 DEL42 DEL43 DEL42 DEL42 DEL27 DEL32 DEL42 DEL45 DEL42 DEL27 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32