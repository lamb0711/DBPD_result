HDFS-10802. [SPS]: Add satisfyStoragePolicy API in HdfsAdmin. Contributed by Yuanbo Liu

+  static void satisfyStoragePolicy(FSDirectory fsd, BlockManager bm,
+      String src) throws IOException {
+
+    // make sure storage policy is enabled, otherwise
+    // there is no need to satisfy storage policy.
+    if (!fsd.isStoragePolicyEnabled()) {
+      throw new IOException(String.format(
+          "Failed to satisfy storage policy since %s is set to false.",
+          DFS_STORAGE_POLICY_ENABLED_KEY));
+    }
+
+    FSPermissionChecker pc = fsd.getPermissionChecker();
+    INodesInPath iip;
+    fsd.writeLock();
+    try {
+
+      // check operation permission.
+      iip = fsd.resolvePath(pc, src, DirOp.WRITE);
+      if (fsd.isPermissionEnabled()) {
+        fsd.checkPathAccess(pc, iip, FsAction.WRITE);
+      }
+      unprotectedSatisfyStoragePolicy(bm, iip);
+    } finally {
+      fsd.writeUnlock();
+    }
+  }
+
+  static void unprotectedSatisfyStoragePolicy(BlockManager bm,
+      INodesInPath iip) throws IOException {
+
+    // check whether file exists.
+    INode inode = iip.getLastINode();
+    if (inode == null) {
+      throw new FileNotFoundException("File/Directory does not exist: "
+          + iip.getPath());
+    }
+
+    // TODO: need to check whether inode's storage policy
+    // has been satisfied or inode exists in the satisfier
+    // list before calling satisfyStoragePolicy in BlockManager.
+    if (inode.isDirectory()) {
+      final int snapshotId = iip.getLatestSnapshotId();
+      for (INode node : inode.asDirectory().getChildrenList(snapshotId)) {
+        if (node.isFile()) {
+          bm.satisfyStoragePolicy(node.getId());
+
+        }
+      }
+    } else if (inode.isFile()) {
+      bm.satisfyStoragePolicy(inode.getId());
+    } else {
+      throw new FileNotFoundException("File/Directory does not exist: "
+          + iip.getPath());
+    }
+  }
+

INS31 INS31 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS25 INS60 INS60 INS21 INS54 INS43 INS42 INS43 INS42 INS42 INS60 INS25 INS25 INS42 INS42 INS42 INS38 INS8 INS43 INS59 INS43 INS59 INS32 INS8 INS8 INS42 INS42 INS43 INS59 INS27 INS8 INS32 INS8 INS25 INS32 INS53 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS21 INS25 INS21 INS21 INS42 INS42 INS32 INS42 INS33 INS53 INS42 INS42 INS60 INS70 INS32 INS8 INS8 INS42 INS42 INS14 INS42 INS42 INS7 INS32 INS8 INS32 INS32 INS42 INS42 INS14 INS83 INS39 INS59 INS44 INS32 INS8 INS42 INS42 INS21 INS53 INS43 INS32 INS42 INS32 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS32 INS43 INS42 INS32 INS42 INS42 INS25 INS32 INS14 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS40 INS32 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS8 INS42 INS42 INS32 INS43 INS27 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS45 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42