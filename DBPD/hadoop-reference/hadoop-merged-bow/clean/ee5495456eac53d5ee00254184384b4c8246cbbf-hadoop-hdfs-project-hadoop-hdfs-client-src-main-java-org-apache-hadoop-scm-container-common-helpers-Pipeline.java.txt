HDFS-13116. Ozone: Refactor Pipeline to have transport and container specific information. Contributed by Mukul Kumar Singh.

+import com.google.common.annotations.VisibleForTesting;
-import org.apache.hadoop.hdfs.protocol.proto.HdfsProtos;
-import java.util.Map;
-import java.util.TreeMap;
-    String[] ignorableFieldNames = {"data", "leaderID", "datanodes"};
+    String[] ignorableFieldNames = {"data"};
-  private String leaderID;
-  private Map<String, DatanodeID> datanodes;
-  private OzoneProtos.LifeCycleState lifeCycleState;
-  private OzoneProtos.ReplicationType type;
-  private OzoneProtos.ReplicationFactor factor;
-  private String pipelineName;
+  private PipelineChannel pipelineChannel;
+  @JsonIgnore
-   * @param leaderID - First machine in this pipeline.
+   * @param containerName - Container
+   * @param pipelineChannel - transport information for this container
-  public Pipeline(String leaderID) {
-    this.leaderID = leaderID;
-    datanodes = new TreeMap<>();
+  public Pipeline(String containerName, PipelineChannel pipelineChannel) {
+    this.containerName = containerName;
+    this.pipelineChannel = pipelineChannel;
-    Pipeline newPipeline = new Pipeline(pipeline.getLeaderID());
-    for (HdfsProtos.DatanodeIDProto dataID : pipeline.getMembersList()) {
-      newPipeline.addMember(DatanodeID.getFromProtoBuf(dataID));
-    }
-
-    newPipeline.setContainerName(pipeline.getContainerName());
-    newPipeline.setLifeCycleState(pipeline.getState());
-    newPipeline.setType(pipeline.getType());
-    newPipeline.setFactor(pipeline.getFactor());
-    if (pipeline.hasPipelineName()) {
-      newPipeline.setPipelineName(pipeline.getPipelineName());
-    }
-    return newPipeline;
+    PipelineChannel pipelineChannel =
+        PipelineChannel.getFromProtoBuf(pipeline.getPipelineChannel());
+    return new Pipeline(pipeline.getContainerName(), pipelineChannel);
-    return factor;
-  }
-
-  public void setFactor(OzoneProtos.ReplicationFactor factor) {
-    this.factor = factor;
-  }
-
-  /**
-   * Adds a member to the pipeline.
-   *
-   * @param dataNodeId - Datanode to be added.
-   */
-  public void addMember(DatanodeID dataNodeId) {
-    datanodes.put(dataNodeId.getDatanodeUuid(), dataNodeId);
+    return pipelineChannel.getFactor();
-    return datanodes.get(leaderID);
+    return pipelineChannel.getDatanodes().get(pipelineChannel.getLeaderID());
-    return datanodes.get(leaderID).getHostName();
+    return pipelineChannel.getDatanodes()
+        .get(pipelineChannel.getLeaderID()).getHostName();
-    return new ArrayList<>(datanodes.values());
+    return new ArrayList<>(pipelineChannel.getDatanodes().values());
-    for (DatanodeID id : datanodes.values()) {
+    for (DatanodeID id : pipelineChannel.getDatanodes().values()) {
-    for (DatanodeID datanode : datanodes.values()) {
-      builder.addMembers(datanode.getProtoBufMessage());
-    }
-    builder.setLeaderID(leaderID);
-
-    if (this.getLifeCycleState() != null) {
-      builder.setState(this.getLifeCycleState());
-    }
-    if (this.getType() != null) {
-      builder.setType(this.getType());
-    }
-
-    if (this.getFactor() != null) {
-      builder.setFactor(this.getFactor());
-    }
+    builder.setPipelineChannel(this.pipelineChannel.getProtobufMessage());
-   * Sets the container Name.
-   *
-   * @param containerName - Name of the container.
-   */
-  public void setContainerName(String containerName) {
-    this.containerName = containerName;
-  }
-
-  /**
+  @VisibleForTesting
+  public PipelineChannel getPipelineChannel() {
+    return pipelineChannel;
+  }
+
-    return lifeCycleState;
-  }
-
-  /**
-   * Sets the lifecycleState.
-   *
-   * @param lifeCycleStates - Enum
-   */
-  public void setLifeCycleState(OzoneProtos.LifeCycleState lifeCycleStates) {
-    this.lifeCycleState = lifeCycleStates;
+    return pipelineChannel.getLifeCycleState();
-    return pipelineName;
-  }
-
-  /**
-   * Sets the pipeline name.
-   *
-   * @param pipelineName - Sets the name.
-   */
-  public void setPipelineName(String pipelineName) {
-    this.pipelineName = pipelineName;
+    return pipelineChannel.getName();
-    return type;
-  }
-
-  /**
-   * Sets the type of this pipeline.
-   *
-   * @param type - Standalone, Ratis, Chained.
-   */
-  public void setType(OzoneProtos.ReplicationType type) {
-    this.type = type;
+    return pipelineChannel.getType();
-    datanodes.keySet().stream()
-        .forEach(id -> b.append(id.endsWith(leaderID) ? "*" + id : id));
+    pipelineChannel.getDatanodes().keySet().stream()
+        .forEach(id -> b.
+            append(id.endsWith(pipelineChannel.getLeaderID()) ? "*" + id : id));

MOV26 MOV31 UPD40 UPD43 INS78 MOV44 MOV8 MOV43 INS8 INS78 INS43 INS42 UPD42 UPD42 INS42 INS65 UPD43 UPD42 INS21 MOV21 INS60 MOV60 MOV21 MOV21 MOV41 INS42 UPD42 MOV42 INS41 INS42 INS66 UPD42 UPD66 UPD42 INS7 INS43 INS59 INS14 INS32 INS42 INS32 INS32 INS32 INS22 INS42 UPD42 MOV42 INS42 INS32 MOV43 MOV32 INS42 INS42 INS42 INS32 INS32 INS32 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 UPD42 MOV42 MOV42 MOV32 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS32 INS32 INS32 INS42 UPD42 MOV42 INS22 UPD42 UPD42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS52 INS42 INS32 INS42 UPD42 MOV42 INS32 INS42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL45 DEL45 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL59 DEL23 DEL83 DEL40 DEL43 DEL42 DEL59 DEL23 DEL83 DEL40 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL43 DEL74 DEL14 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL59 DEL60 DEL40 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL40 DEL43 DEL42 DEL83 DEL39 DEL42 DEL40 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL31 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL8 DEL70 DEL42 DEL42 DEL42 DEL32 DEL21 DEL52 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL52 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL52 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL52 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL52 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL52 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL8 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL39 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL40 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL42 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL40 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31