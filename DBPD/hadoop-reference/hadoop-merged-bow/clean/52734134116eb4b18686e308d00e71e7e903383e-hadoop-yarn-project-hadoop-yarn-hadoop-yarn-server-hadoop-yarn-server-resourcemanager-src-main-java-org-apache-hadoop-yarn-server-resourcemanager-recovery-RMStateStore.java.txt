YARN-3480. Remove attempts that are beyond max-attempt limit from state store. Contributed by Jun Gong

+          RMStateStoreEventType.REMOVE_APP_ATTEMPT,
+          new RemoveAppAttemptTransition())
+      .addTransition(RMStateStoreState.ACTIVE,
+          EnumSet.of(RMStateStoreState.ACTIVE, RMStateStoreState.FENCED),
+  private static class RemoveAppAttemptTransition implements
+      MultipleArcTransition<RMStateStore, RMStateStoreEvent,
+          RMStateStoreState> {
+    @Override
+    public RMStateStoreState transition(RMStateStore store,
+        RMStateStoreEvent event) {
+      if (!(event instanceof RMStateStoreRemoveAppAttemptEvent)) {
+        // should never happen
+        LOG.error("Illegal event type: " + event.getClass());
+        return RMStateStoreState.ACTIVE;
+      }
+      boolean isFenced = false;
+      ApplicationAttemptId attemptId =
+          ((RMStateStoreRemoveAppAttemptEvent) event).getApplicationAttemptId();
+      ApplicationId appId = attemptId.getApplicationId();
+      LOG.info("Removing attempt " + attemptId + " from app: " + appId);
+      try {
+        store.removeApplicationAttemptInternal(attemptId);
+      } catch (Exception e) {
+        LOG.error("Error removing attempt: " + attemptId, e);
+        isFenced = store.notifyStoreOperationFailedInternal(e);
+      }
+      return finalState(isFenced);
+    }
+  }
+
+  /**
+   * Non-blocking API
+   * ResourceManager services call this to remove an attempt from the state
+   * store
+   * This does not block the dispatcher threads
+   * There is no notification of completion for this operation.
+   */
+  @SuppressWarnings("unchecked")
+  public synchronized void removeApplicationAttempt(
+      ApplicationAttemptId applicationAttemptId) {
+    dispatcher.getEventHandler().handle(
+        new RMStateStoreRemoveAppAttemptEvent(applicationAttemptId));
+  }
+
+  /**
+   * Blocking API
+   * Derived classes must implement this method to remove the state of specified
+   * attempt.
+   */
+  protected abstract void removeApplicationAttemptInternal(
+      ApplicationAttemptId attemptId) throws Exception;
+
+

INS55 INS31 INS31 INS83 INS83 INS42 INS74 INS31 INS29 INS79 INS83 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS43 INS43 INS43 INS43 INS43 INS78 INS83 INS43 INS42 INS44 INS44 INS8 INS65 INS42 INS45 INS43 INS42 INS21 INS65 INS43 INS42 INS42 INS32 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS25 INS60 INS60 INS60 INS21 INS54 INS41 INS66 INS66 INS66 INS66 INS66 INS42 INS32 INS66 INS66 INS66 INS42 MOV32 MOV42 INS40 MOV40 INS40 INS42 INS42 INS38 INS8 INS39 INS59 INS43 INS59 INS43 INS59 INS32 INS8 INS12 INS32 INS32 INS42 INS14 INS32 UPD40 MOV14 INS36 INS21 INS41 INS42 INS9 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS27 INS21 INS44 INS8 INS42 INS42 INS42 INS42 INS43 INS42 UPD40 MOV14 INS42 INS42 INS40 MOV40 INS62 INS32 INS40 INS36 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS32 INS43 INS42 INS21 INS21 INS42 UPD40 MOV14 INS42 INS43 INS42 INS42 INS27 INS11 INS42 INS42 INS42 INS42 INS32 INS7 UPD40 MOV14 INS42 INS45 INS32 INS43 INS42 INS42 INS42 INS27 INS42 INS42 INS32 UPD40 MOV14 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 UPD40 MOV14 UPD40 MOV14 UPD40 MOV14 UPD40 INS14 INS43 INS42