YARN-4538. QueueMetrics pending cores and memory metrics wrong. (Bibin A Chundatt via wangda)

-import org.apache.hadoop.yarn.util.resource.Resources;
-    // if #container = 0, means change container resource
-    pendingMB.decr(res.getMemory() * Math.max(containers, 1));
-    pendingVCores.decr(res.getVirtualCores() * Math.max(containers, 1));
+    pendingMB.decr(res.getMemory() * containers);
+    pendingVCores.decr(res.getVirtualCores() * containers);
-    // if #containers = 0, means change container resource
-    allocatedMB.incr(res.getMemory() * Math.max(containers, 1));
-    allocatedVCores.incr(res.getVirtualCores() * Math.max(containers, 1));
+    allocatedMB.incr(res.getMemory() * containers);
+    allocatedVCores.incr(res.getVirtualCores() * containers);
+  /**
+   * Allocate Resource for container size change.
+   *
+   * @param user
+   * @param res
+   */
+  public void allocateResources(String user, Resource res) {
+    allocatedMB.incr(res.getMemory());
+    allocatedVCores.incr(res.getVirtualCores());
+
+    pendingMB.decr(res.getMemory());
+    pendingVCores.decr(res.getVirtualCores());
+
+    QueueMetrics userMetrics = getUserMetrics(user);
+    if (userMetrics != null) {
+      userMetrics.allocateResources(user, res);
+    }
+    if (parent != null) {
+      parent.allocateResources(user, res);
+    }
+  }
+
-    // if #container = 0, means change container resource.
-    allocatedMB.decr(res.getMemory() * Math.max(containers, 1));
-    allocatedVCores.decr(res.getVirtualCores() * Math.max(containers, 1));
+    allocatedMB.decr(res.getMemory() * containers);
+    allocatedVCores.decr(res.getVirtualCores() * containers);
+  /**
+   * Release Resource for container size change.
+   *
+   * @param user
+   * @param res
+   */
+  public void releaseResources(String user, Resource res) {
+    allocatedMB.decr(res.getMemory());
+    allocatedVCores.decr(res.getVirtualCores());
+    QueueMetrics userMetrics = getUserMetrics(user);
+    if (userMetrics != null) {
+      userMetrics.releaseResources(user, res);
+    }
+    if (parent != null) {
+      parent.releaseResources(user, res);
+    }
+  }
+

INS31 INS31 INS29 INS83 INS39 INS42 INS44 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS8 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS21 INS21 INS21 INS21 INS60 INS25 INS25 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS21 INS21 INS60 INS25 INS25 INS66 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS32 INS43 INS59 INS27 INS8 INS27 INS8 INS66 INS42 INS42 INS42 INS42 INS32 INS32 INS43 INS59 INS27 INS8 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL42 DEL42 DEL42 DEL34 DEL32 DEL42 DEL42 DEL42 DEL34 DEL32 DEL42 DEL42 DEL42 DEL34 DEL32 DEL42 DEL42 DEL42 DEL34 DEL32 DEL42 DEL42 DEL42 DEL34 DEL32 DEL42 DEL42 DEL42 DEL34 DEL32