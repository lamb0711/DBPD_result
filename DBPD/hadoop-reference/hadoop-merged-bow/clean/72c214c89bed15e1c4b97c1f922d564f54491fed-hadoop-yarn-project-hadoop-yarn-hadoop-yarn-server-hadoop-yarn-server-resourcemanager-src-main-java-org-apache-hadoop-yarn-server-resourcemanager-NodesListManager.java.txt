Merge r1555021 through r1569889 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1569890 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.exceptions.YarnException;
+import com.google.common.annotations.VisibleForTesting;
+
+  private String includesFile;
+  private String excludesFile;
+
-      this.hostsReader = 
-        new HostsFileReader(
-            conf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH, 
-                YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH),
-            conf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH, 
-                YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH)
-                );
+      this.includesFile = conf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,
+          YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);
+      this.excludesFile = conf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,
+          YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);
+      this.hostsReader =
+          createHostsFileReader(this.includesFile, this.excludesFile);
+    } catch (YarnException ex) {
+      disableHostsFileReader(ex);
-      LOG.warn("Failed to init hostsReader, disabling", ioe);
-      try {
-        this.hostsReader = 
-          new HostsFileReader(YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH, 
-              YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);
-      } catch (IOException ioe2) {
-        // Should *never* happen
-        this.hostsReader = null;
-        throw new YarnRuntimeException(ioe2);
-      }
+      disableHostsFileReader(ioe);
-  public void refreshNodes(Configuration yarnConf) throws IOException {
+  public void refreshNodes(Configuration yarnConf) throws IOException,
+      YarnException {
-      hostsReader.updateFileNames(yarnConf.get(
-          YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,
-          YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH), yarnConf.get(
-          YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,
-          YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH));
-      hostsReader.refresh();
+      includesFile =
+          yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,
+              YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);
+      excludesFile =
+          yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,
+              YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);
+      hostsReader.updateFileNames(includesFile, excludesFile);
+      hostsReader.refresh(
+          includesFile.isEmpty() ? null : this.rmContext
+              .getConfigurationProvider().getConfigurationInputStream(
+                  this.conf, includesFile), excludesFile.isEmpty() ? null
+              : this.rmContext.getConfigurationProvider()
+                  .getConfigurationInputStream(this.conf, excludesFile));
+
+  private void disableHostsFileReader(Exception ex) {
+    LOG.warn("Failed to init hostsReader, disabling", ex);
+    try {
+      this.includesFile =
+          conf.get(YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);
+      this.excludesFile =
+          conf.get(YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);
+      this.hostsReader =
+          createHostsFileReader(this.includesFile, this.excludesFile);
+    } catch (IOException ioe2) {
+      // Should *never* happen
+      this.hostsReader = null;
+      throw new YarnRuntimeException(ioe2);
+    } catch (YarnException e) {
+      // Should *never* happen
+      this.hostsReader = null;
+      throw new YarnRuntimeException(e);
+    }
+  }
+
+  @VisibleForTesting
+  public HostsFileReader getHostsReader() {
+    return this.hostsReader;
+  }
+
+  private HostsFileReader createHostsFileReader(String includesFile,
+      String excludesFile) throws IOException, YarnException {
+    HostsFileReader hostsReader =
+        new HostsFileReader(includesFile,
+            (includesFile == null || includesFile.isEmpty()) ? null
+                : this.rmContext.getConfigurationProvider()
+                    .getConfigurationInputStream(this.conf, includesFile),
+            excludesFile,
+            (excludesFile == null || excludesFile.isEmpty()) ? null
+                : this.rmContext.getConfigurationProvider()
+                    .getConfigurationInputStream(this.conf, excludesFile));
+    return hostsReader;
+  }

INS26 INS26 INS40 INS40 INS23 INS23 INS31 INS31 INS31 INS31 INS83 INS43 INS59 INS83 INS43 INS59 MOV78 MOV83 MOV39 MOV42 MOV44 MOV43 INS8 INS43 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS44 INS44 INS43 INS43 INS8 INS42 INS42 INS42 INS42 MOV21 INS54 MOV21 INS42 INS43 INS42 MOV21 MOV54 INS42 INS42 INS41 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS60 INS41 MOV8 INS12 INS12 INS42 INS12 INS22 INS42 INS42 MOV43 INS59 INS42 INS21 INS21 INS44 INS8 MOV44 INS8 INS21 INS21 UPD42 INS21 INS21 INS44 INS8 INS52 INS42 INS42 INS14 INS7 INS7 INS43 INS42 INS21 INS21 INS7 INS7 INS32 INS7 INS7 INS43 INS42 INS21 INS53 MOV43 INS42 INS16 INS42 INS16 INS22 MOV32 INS22 MOV32 MOV22 INS32 INS42 INS32 INS32 INS42 MOV32 INS42 MOV32 INS42 INS42 INS42 INS42 INS16 INS16 INS22 INS32 INS22 INS32 MOV22 INS32 INS42 INS7 INS14 INS36 INS33 INS32 INS36 INS33 INS32 INS52 INS42 INS52 INS42 INS42 INS22 INS22 INS42 INS42 INS42 INS42 INS32 INS33 INS32 INS32 INS33 INS32 INS52 INS42 INS42 INS42 INS40 INS52 INS42 INS42 INS42 INS40 INS42 INS22 INS22 INS22 INS33 INS43 INS42 INS27 INS32 INS42 INS22 INS42 INS27 INS32 INS42 INS22 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS32 INS42 INS22 INS42 INS42 INS42 INS32 INS42 INS22 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS27 INS32 INS22 INS42 INS52 INS42 INS27 INS32 INS22 INS42 INS52 INS42 INS22 INS42 INS52 INS42 INS22 INS42 INS52 INS42 INS42 INS33 INS42 INS42 INS52 INS42 INS42 INS33 INS42 INS42 INS52 INS42 INS52 INS42 INS52 INS42 DEL14 DEL8 DEL12 DEL54 DEL8 DEL31 DEL42 DEL42 DEL32 DEL40 DEL40 DEL14