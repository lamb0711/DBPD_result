HDDS-1016. Allow marking containers as unhealthy. Contributed by Arpit Agarwal.

-  private final AutoCloseableLock handlerLock;
+
+  // A lock that is held during container creation.
+  private final AutoCloseableLock containerCreationLock;
-    handlerLock = new AutoCloseableLock(new ReentrantLock(true));
+    containerCreationLock = new AutoCloseableLock(new ReentrantLock(true));
-   * ContainerSet.
+   * ContainerSet and sends an ICR to the SCM.
-    try {
-      handlerLock.acquire();
+    boolean created = false;
+    try (AutoCloseableLock l = containerCreationLock.acquire()) {
-        containerSet.addContainer(newContainer);
-        sendICR(newContainer);
+        created = containerSet.addContainer(newContainer);
-
-    } finally {
-      handlerLock.release();
+    if (created) {
+      try {
+        sendICR(newContainer);
+      } catch (StorageContainerException ex) {
+        return ContainerUtils.logAndReturnError(LOG, ex, request);
+      }
+    }
+    // The container can become unhealthy after the lock is released.
+    // The operation will likely fail/timeout in that happens.
+    try {
+      checkContainerIsHealthy(kvContainer);
+    } catch (StorageContainerException sce) {
+      return ContainerUtils.logAndReturnError(LOG, sce, request);
+    }
+
+    // The container can become unhealthy after the lock is released.
+    // The operation will likely fail/timeout in that happens.
+    try {
+      checkContainerIsHealthy(kvContainer);
+    } catch (StorageContainerException sce) {
+      return ContainerUtils.logAndReturnError(LOG, sce, request);
+    }
+
+    // The container can become unhealthy after the lock is released.
+    // The operation will likely fail/timeout in that happens.
+    try {
+      checkContainerIsHealthy(kvContainer);
+    } catch (StorageContainerException sce) {
+      return ContainerUtils.logAndReturnError(LOG, sce, request);
+    }
+
+    // The container can become unhealthy after the lock is released.
+    // The operation will likely fail/timeout in that happens.
+    try {
+      checkContainerIsHealthy(kvContainer);
+    } catch (StorageContainerException sce) {
+      return ContainerUtils.logAndReturnError(LOG, sce, request);
+    }
+
+   * Throw an exception if the container is unhealthy.
+   *
+   * @throws StorageContainerException if the container is unhealthy.
+   * @param kvContainer
+   */
+  @VisibleForTesting
+  void checkContainerIsHealthy(KeyValueContainer kvContainer)
+      throws StorageContainerException {
+    kvContainer.readLock();
+    try {
+      if (kvContainer.getContainerData().getState() == State.UNHEALTHY) {
+        throw new StorageContainerException(
+            "The container replica is unhealthy.",
+            CONTAINER_UNHEALTHY);
+      }
+    } finally {
+      kvContainer.readUnlock();
+    }
+  }
+
+  /**
+    // The container can become unhealthy after the lock is released.
+    // The operation will likely fail/timeout in that happens.
+    try {
+      checkContainerIsHealthy(kvContainer);
+    } catch (StorageContainerException sce) {
+      return ContainerUtils.logAndReturnError(LOG, sce, request);
+    }
+
+    // The container can become unhealthy after the lock is released.
+    // The operation will likely fail/timeout in that happens.
+    try {
+      checkContainerIsHealthy(kvContainer);
+    } catch (StorageContainerException sce) {
+      return ContainerUtils.logAndReturnError(LOG, sce, request);
+    }
+

INS31 INS29 INS78 INS39 INS42 INS44 INS43 INS8 UPD42 INS60 INS25 INS54 INS54 INS54 INS54 INS65 INS65 INS65 INS42 INS43 INS42 INS42 INS21 INS54 INS54 INS54 UPD66 INS39 INS59 INS58 INS42 INS8 INS8 INS12 INS8 INS12 INS8 INS12 INS8 INS12 INS66 INS42 INS66 INS42 INS42 INS32 INS8 INS8 INS8 INS12 INS8 INS12 UPD42 INS42 INS9 INS43 INS59 INS54 INS21 INS44 INS8 INS21 INS44 INS8 INS21 INS44 INS8 INS21 INS44 INS8 INS42 INS42 INS25 INS21 INS21 INS44 INS8 INS21 INS44 INS8 INS42 INS42 INS32 INS8 INS12 INS32 INS43 INS42 INS41 INS32 INS43 INS42 INS41 INS32 INS43 INS42 INS41 INS32 INS43 INS42 INS41 INS27 INS8 INS32 INS32 INS43 INS42 INS41 INS32 INS43 INS42 INS41 UPD42 MOV42 UPD42 MOV42 MOV21 INS44 INS8 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS32 INS40 INS53 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS7 INS43 INS42 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS32 INS42 INS42 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL21 DEL32 DEL21 DEL8