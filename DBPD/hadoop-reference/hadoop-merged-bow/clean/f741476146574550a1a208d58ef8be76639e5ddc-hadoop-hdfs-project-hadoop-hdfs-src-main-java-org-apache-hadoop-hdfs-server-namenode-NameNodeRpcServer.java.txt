HDFS-9198. Coalesce IBR processing in the NN. (Daryn Sharp via umamahesh)

+import java.util.concurrent.Callable;
-  public DatanodeCommand blockReport(DatanodeRegistration nodeReg,
-        String poolId, StorageBlockReport[] reports,
-        BlockReportContext context) throws IOException {
+  public DatanodeCommand blockReport(final DatanodeRegistration nodeReg,
+        String poolId, final StorageBlockReport[] reports,
+        final BlockReportContext context) throws IOException {
-      noStaleStorages = bm.processReport(nodeReg, reports[r].getStorage(),
-          blocks, context, (r == reports.length - 1));
+      final int index = r;
+      noStaleStorages = bm.runBlockOp(new Callable<Boolean>() {
+        @Override
+        public Boolean call() throws IOException {
+          return bm.processReport(nodeReg, reports[index].getStorage(),
+              blocks, context, (index == reports.length - 1));
+        }
+      });
-  public void blockReceivedAndDeleted(DatanodeRegistration nodeReg, String poolId,
-      StorageReceivedDeletedBlocks[] receivedAndDeletedBlocks) throws IOException {
+  public void blockReceivedAndDeleted(final DatanodeRegistration nodeReg,
+      String poolId, StorageReceivedDeletedBlocks[] receivedAndDeletedBlocks)
+          throws IOException {
-    for(StorageReceivedDeletedBlocks r : receivedAndDeletedBlocks) {
-      namesystem.processIncrementalBlockReport(nodeReg, r);
+    final BlockManager bm = namesystem.getBlockManager();
+    for (final StorageReceivedDeletedBlocks r : receivedAndDeletedBlocks) {
+      bm.enqueueBlockOp(new Runnable() {
+        @Override
+        public void run() {
+          try {
+            namesystem.processIncrementalBlockReport(nodeReg, r);
+          } catch (Exception ex) {
+            // usually because the node is unregistered/dead.  next heartbeat
+            // will correct the problem
+            blockStateChangeLog.error(
+                "*BLOCK* NameNode.blockReceivedAndDeleted: "
+                    + "failed from " + nodeReg + ": " + ex.getMessage());
+          }
+        }
+      });

INS26 INS40 INS83 INS83 INS83 INS83 INS60 INS83 INS43 INS59 INS8 INS60 INS42 INS42 INS32 INS83 INS21 INS83 INS39 INS59 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS14 INS43 INS1 INS74 INS1 INS42 INS31 INS43 INS43 INS31 INS78 INS83 INS39 INS42 INS8 INS42 INS42 INS78 INS83 INS43 INS42 INS43 INS8 INS42 INS54 INS42 INS42 INS42 INS41 MOV8 INS12 INS32 INS44 INS8 MOV42 MOV42 MOV42 MOV32 MOV42 MOV42 MOV36 INS43 INS42 INS21 INS42 INS32 UPD42 UPD42 INS42 INS42 INS27 INS27 INS42 INS45 INS32 INS45 INS45 INS42 INS42 DEL32