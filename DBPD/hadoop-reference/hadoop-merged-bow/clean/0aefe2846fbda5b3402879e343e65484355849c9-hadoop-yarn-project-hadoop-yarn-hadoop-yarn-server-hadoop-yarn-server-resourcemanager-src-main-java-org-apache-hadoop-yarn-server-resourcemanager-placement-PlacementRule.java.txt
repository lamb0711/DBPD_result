YARN-9298. Implement FS placement rules using PlacementRule interface. Contributed by Wilfred Spiegelenburg.

+import org.apache.hadoop.classification.InterfaceAudience;
+import org.apache.hadoop.classification.InterfaceStability;
+/**
+ * Abstract base for all Placement Rules.
+ */
+@InterfaceAudience.Private
+@InterfaceStability.Unstable
+  /**
+   * Set the config based on the passed in argument. This construct is used to
+   * not pollute this abstract class with implementation specific references.
+   */
+  public void setConfig(Object initArg) {
+    // Default is a noop
+  }
+
+  /**
+   * Return the name of the rule.
+   * @return The name of the rule, the fully qualified class name.
+   */
-  public abstract boolean initialize(
-      ResourceScheduler scheduler) throws IOException;
+  /**
+   * Initialize the rule with the scheduler.
+   * @param scheduler the scheduler using the rule
+   * @return <code>true</code> or <code>false</code> The outcome of the
+   * initialisation, rule dependent response which might not be persisted in
+   * the rule.
+   * @throws IOException for any errors
+   */
+  public abstract boolean initialize(ResourceScheduler scheduler)
+      throws IOException;
-   * Get queue for a given application
+   * Return the scheduler queue name the application should be placed in
+   * wrapped in an {@link ApplicationPlacementContext} object.
+   *
+   * A non <code>null</code> return value places the application in a queue,
+   * a <code>null</code> value means the queue is not yet determined. The
+   * next {@link PlacementRule} in the list maintained in the
+   * {@link PlacementManager} will be executed.
+   *
+   * @param asc The context of the application created on submission
+   * @param user The name of the user submitting the application
-   * @param asc application submission context
-   * @param user userName
+   * @throws YarnException for any error while executing the rule
-   * @throws YarnException
-   *           if any error happens
-   * 
-   * @return <p>
-   *         non-null value means it is determined
-   *         </p>
-   *         <p>
-   *         null value means it is undetermined, so next {@link PlacementRule}
-   *         in the {@link PlacementManager} will take care
-   *         </p>
+   * @return The queue name wrapped in {@link ApplicationPlacementContext} or
+   * <code>null</code> if no queue was resolved

INS26 INS26 INS40 INS40 INS29 INS78 INS78 INS31 INS65 INS40 INS40 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS29 INS66 INS65 INS43 INS42 INS65 INS65 INS65 INS65 INS65 INS65 INS66 INS66 INS42 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS65 INS66 UPD66 INS66 INS66 MOV65 INS66 MOV65 INS66 UPD66 UPD66 UPD66 UPD66 INS65 UPD66 UPD66 INS42 INS42 DEL66 DEL66 DEL66 DEL66 DEL66