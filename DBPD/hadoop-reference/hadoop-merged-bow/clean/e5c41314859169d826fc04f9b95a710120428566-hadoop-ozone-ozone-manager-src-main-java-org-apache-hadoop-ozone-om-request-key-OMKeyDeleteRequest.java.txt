HDDS-1856. Make required changes for Non-HA to use new HA code in OM. (#1174)


+import org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerDoubleBufferHelper;
-import org.apache.hadoop.ozone.om.response.key.OMKeyCreateResponse;
-      long transactionLogIndex) {
+      long transactionLogIndex,
+      OzoneManagerDoubleBufferHelper ozoneManagerDoubleBufferHelper) {
-
+    OMMetadataManager omMetadataManager = ozoneManager.getMetadataManager();
+    IOException exception = null;
+    boolean acquiredLock = false;
+    OMClientResponse omClientResponse = null;
-    } catch (IOException ex) {
-      LOG.error("Delete failed for Key: {} in volume/bucket:{}/{}",
-          keyName, bucketName, volumeName, ex);
-      omMetrics.incNumKeyDeleteFails();
-      auditLog(auditLogger, buildAuditMessage(OMAction.DELETE_KEY, auditMap,
-          ex, userInfo));
-      return new OMKeyCreateResponse(null, -1L,
-          createErrorOMResponse(omResponse, ex));
-    }
-    OMMetadataManager omMetadataManager = ozoneManager.getMetadataManager();
+      String objectKey = omMetadataManager.getOzoneKey(
+          volumeName, bucketName, keyName);
-    String objectKey = omMetadataManager.getOzoneKey(
-        volumeName, bucketName, keyName);
-
-    omMetadataManager.getLock().acquireLock(BUCKET_LOCK, volumeName,
-        bucketName);
-    IOException exception = null;
-    OmKeyInfo omKeyInfo = null;
-    try {
+      acquiredLock = omMetadataManager.getLock().acquireLock(BUCKET_LOCK,
+          volumeName, bucketName);
-      omKeyInfo = omMetadataManager.getKeyTable().get(objectKey);
+      OmKeyInfo omKeyInfo = omMetadataManager.getKeyTable().get(objectKey);
+      omClientResponse = new OMKeyDeleteResponse(omKeyInfo,
+          deleteKeyArgs.getModificationTime(),
+          omResponse.setDeleteKeyResponse(
+              DeleteKeyResponse.newBuilder()).build());
+
+      omClientResponse = new OMKeyDeleteResponse(null, 0,
+          createErrorOMResponse(omResponse, exception));
-      omMetadataManager.getLock().releaseLock(BUCKET_LOCK, volumeName,
-          bucketName);
+      if (omClientResponse != null) {
+        omClientResponse.setFlushFuture(
+            ozoneManagerDoubleBufferHelper.add(omClientResponse,
+                transactionLogIndex));
+      }
+      if (acquiredLock) {
+        omMetadataManager.getLock().releaseLock(BUCKET_LOCK, volumeName,
+            bucketName);
+      }
-      return new OMKeyDeleteResponse(
-          omKeyInfo, deleteKeyArgs.getModificationTime(),
-          omResponse.setDeleteKeyResponse(
-              DeleteKeyResponse.newBuilder()).build());
+      return omClientResponse;
-      return new OMKeyDeleteResponse(null, 0,
-          createErrorOMResponse(omResponse, exception));
+      return omClientResponse;

MOV26 UPD40 INS44 INS43 INS42 INS60 INS60 INS42 INS39 INS59 INS43 MOV59 MOV21 INS8 INS42 INS9 UPD42 MOV42 UPD42 MOV25 MOV60 MOV21 INS60 INS25 INS25 INS7 MOV43 INS59 INS21 INS27 INS8 INS42 MOV8 INS42 INS42 INS42 MOV32 INS42 MOV32 INS42 MOV14 INS7 INS42 INS33 INS21 INS42 MOV14 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL40 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL43 DEL33 DEL34 DEL38 DEL42 DEL42 DEL42 DEL32 DEL14 DEL41 DEL8 DEL12 DEL54 DEL60 DEL42