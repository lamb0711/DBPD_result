HDFS-5009. Include storage information in the LocatedBlock.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1519691 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Collections;
-    private DatanodeDescriptor expectedLocation;
+    private final DatanodeStorageInfo expectedLocation;
-                             DatanodeDescriptor target,
+                             DatanodeStorageInfo target,
-    DatanodeDescriptor getExpectedLocation() {
+    private DatanodeStorageInfo getExpectedStorageLocation() {
-      return expectedLocation.isAlive;
+      return expectedLocation.getDatanodeDescriptor().isAlive;
-                             DatanodeDescriptor[] targets) {
+                             DatanodeStorageInfo[] targets) {
-  public void setExpectedLocations(DatanodeDescriptor[] targets) {
+  public void setExpectedLocations(DatanodeStorageInfo[] targets) {
-  public DatanodeDescriptor[] getExpectedLocations() {
+  public DatanodeStorageInfo[] getExpectedStorageLocations() {
-    DatanodeDescriptor[] locations = new DatanodeDescriptor[numLocations];
+    DatanodeStorageInfo[] storages = new DatanodeStorageInfo[numLocations];
-      locations[i] = replicas.get(i).getExpectedLocation();
-    return locations;
+      storages[i] = replicas.get(i).getExpectedStorageLocation();
+    return storages;
-      if (replicas.get(i).getExpectedLocation().getLastUpdate() > mostRecentLastUpdate) {
-        primary = replicas.get(i);
+      final ReplicaUnderConstruction ruc = replicas.get(i);
+      final long lastUpdate = ruc.getExpectedStorageLocation().getDatanodeDescriptor().getLastUpdate(); 
+      if (lastUpdate > mostRecentLastUpdate) {
-        mostRecentLastUpdate = primary.getExpectedLocation().getLastUpdate();
+        primary = ruc;
+        mostRecentLastUpdate = lastUpdate;
-      primary.getExpectedLocation().addBlockToBeRecovered(this);
+      primary.getExpectedStorageLocation().getDatanodeDescriptor().addBlockToBeRecovered(this);
-  void addReplicaIfNotPresent(DatanodeDescriptor dn,
+  void addReplicaIfNotPresent(DatanodeStorageInfo storage,
-      if(r.getExpectedLocation() == dn)
+      if(r.getExpectedStorageLocation() == storage)
-    replicas.add(new ReplicaUnderConstruction(block, dn, rState));
+    replicas.add(new ReplicaUnderConstruction(block, storage, rState));

UPD5 UPD42 INS83 UPD43 INS83 UPD43 UPD42 UPD5 UPD5 UPD43 UPD43 UPD42 UPD42 UPD43 UPD42 UPD43 UPD43 UPD42 UPD5 UPD42 UPD42 UPD42 INS22 UPD42 UPD42 UPD43 UPD42 INS60 INS60 INS25 INS32 INS42 UPD42 UPD5 INS83 INS43 INS59 INS83 INS39 INS59 INS27 MOV8 MOV21 UPD42 UPD42 INS42 INS42 UPD43 UPD42 UPD42 INS42 INS42 MOV32 INS42 INS32 INS42 MOV42 INS32 UPD42 UPD42 MOV32 MOV42 MOV32 INS42 UPD42 INS42 INS42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL40 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL27 DEL25