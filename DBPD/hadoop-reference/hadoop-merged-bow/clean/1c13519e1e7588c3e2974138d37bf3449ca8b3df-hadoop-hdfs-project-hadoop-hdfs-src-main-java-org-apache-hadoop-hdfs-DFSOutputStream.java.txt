HDFS-8605. Merge Refactor of DFSOutputStream from HDFS-7285 branch. (vinayakumarb)

+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+  static final Logger LOG = LoggerFactory.getLogger(DFSOutputStream.class);
-      if (DFSClient.LOG.isDebugEnabled()) {
-        DFSClient.LOG.debug("DFSClient writeChunk packet full seqno=" +
-            currentPacket.getSeqno() +
-            ", src=" + src +
-            ", bytesCurBlock=" + getStreamer().getBytesCurBlock() +
-            ", blockSize=" + blockSize +
-            ", appendChunk=" + getStreamer().getAppendChunk());
-      }
-      getStreamer().waitAndQueuePacket(currentPacket);
-      currentPacket = null;
-
-      adjustChunkBoundary();
-
-      endBlock();
+      enqueueCurrentPacketFull();
+  void enqueueCurrentPacket() throws IOException {
+    getStreamer().waitAndQueuePacket(currentPacket);
+    currentPacket = null;
+  }
+
+  void enqueueCurrentPacketFull() throws IOException {
+    LOG.debug("enqueue full {}, src={}, bytesCurBlock={}, blockSize={},"
+        + " appendChunk={}, {}", currentPacket, src, getStreamer()
+        .getBytesCurBlock(), blockSize, getStreamer().getAppendChunk(),
+        getStreamer());
+    enqueueCurrentPacket();
+    adjustChunkBoundary();
+    endBlock();
+  }
+
+  /** create an empty packet to mark the end of the block. */
+  void setCurrentPacketToEmpty() throws InterruptedIOException {
+    currentPacket = createPacket(0, 0, getStreamer().getBytesCurBlock(),
+        getStreamer().getAndIncCurrentSeqno(), true);
+    currentPacket.setSyncBlock(shouldSyncBlock);
+  }
+
-      currentPacket = createPacket(0, 0, getStreamer().getBytesCurBlock(),
-          getStreamer().getAndIncCurrentSeqno(), true);
-      currentPacket.setSyncBlock(shouldSyncBlock);
-      getStreamer().waitAndQueuePacket(currentPacket);
-      currentPacket = null;
+      setCurrentPacketToEmpty();
+      enqueueCurrentPacket();
-          getStreamer().waitAndQueuePacket(currentPacket);
-          currentPacket = null;
+          enqueueCurrentPacket();
-          getStreamer().waitAndQueuePacket(currentPacket);
-          currentPacket = null;
+          enqueueCurrentPacket();
-        getStreamer().waitAndQueuePacket(currentPacket);
-        currentPacket = null;
+        enqueueCurrentPacket();
-        // send an empty packet to mark the end of the block
-        currentPacket = createPacket(0, 0, getStreamer().getBytesCurBlock(),
-            getStreamer().getAndIncCurrentSeqno(), true);
-        currentPacket.setSyncBlock(shouldSyncBlock);
+        setCurrentPacketToEmpty();

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS31 INS83 INS83 INS43 INS59 INS39 INS42 INS43 MOV8 INS39 INS42 INS43 INS8 INS29 INS39 INS42 INS43 MOV8 INS42 INS42 INS32 MOV25 INS42 INS42 INS21 INS21 MOV21 MOV21 INS65 INS42 INS42 INS42 INS57 MOV27 INS32 INS32 INS66 INS43 INS42 INS42 INS27 INS42 INS42 MOV32 INS42 MOV32 MOV32 INS42 INS42 INS32 INS45 INS45 INS8 INS8 UPD42 MOV42 UPD42 UPD42 INS21 INS21 INS32 INS32 INS42 INS42 UPD42 UPD42 DEL40 DEL42 DEL32 DEL40 DEL42 DEL45 DEL42 DEL32 DEL45 DEL42 DEL45 DEL45 DEL42 DEL45 DEL27 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL33 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL34 DEL34 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL9 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL33 DEL7 DEL21 DEL42 DEL32 DEL42 DEL42 DEL33 DEL7 DEL21 DEL42 DEL32 DEL42 DEL42 DEL33 DEL7 DEL21