Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1196458 13f79535-47bb-0310-9956-ffa450edef68

-  
-  /** ACL of who can view this application.*/
-  public static final String APPLICATION_ACL_VIEW_APP =
-    "yarn.app.acl.view-job";
-  
-  /** ACL of who can modify this application.*/
-  public static final String APPLICATION_ACL_MODIFY_APP =
-    "yarn.app.acl.modify-job";
+
+  public static final String YARN_PREFIX = "yarn.";
-  public static final String IPC_PREFIX = "yarn.ipc.";
+  public static final String IPC_PREFIX = YARN_PREFIX + "ipc.";
+  public static final int DEFAULT_RM_PORT = 8040;
-    "0.0.0.0:8040";
-  
+    "0.0.0.0:" + DEFAULT_RM_PORT;
+
-  public static final String DEFAULT_RM_SCHEDULER_ADDRESS = "0.0.0.0:8030";
+  public static final int DEFAULT_RM_SCHEDULER_PORT = 8030;
+  public static final String DEFAULT_RM_SCHEDULER_ADDRESS = "0.0.0.0:" +
+    DEFAULT_RM_SCHEDULER_PORT;
-  public static final String DEFAULT_RM_WEBAPP_ADDRESS = "0.0.0.0:8088";
+
+  public static final int DEFAULT_RM_WEBAPP_PORT = 8088;
+  public static final String DEFAULT_RM_WEBAPP_ADDRESS = "0.0.0.0:" +
+    DEFAULT_RM_WEBAPP_PORT;
+  public static final int DEFAULT_RM_RESOURCE_TRACKER_PORT = 8025;
-    "0.0.0.0:8025";
+    "0.0.0.0:" + DEFAULT_RM_RESOURCE_TRACKER_PORT;
-  /** Are RM acls enabled.*/
-  public static final String RM_ACL_ENABLE = 
-    RM_PREFIX + "acl.enable";
-  public static final boolean DEFAULT_RM_ACL_ENABLE = false;
+  /** Are acls enabled.*/
+  public static final String YARN_ACL_ENABLE = 
+    YARN_PREFIX + "acl.enable";
+  public static final boolean DEFAULT_YARN_ACL_ENABLE = true;
-  /** ACL of who can be admin of RM.*/
-  public static final String RM_ADMIN_ACL = 
-    RM_PREFIX + "admin.acl";
-  public static final String DEFAULT_RM_ADMIN_ACL = "*";
+  /** ACL of who can be admin of YARN cluster.*/
+  public static final String YARN_ADMIN_ACL = 
+    YARN_PREFIX + "admin.acl";
+  public static final String DEFAULT_YARN_ADMIN_ACL = "*";
+  /** ACL used in case none is found. Allows nothing. */
+  public static final String DEFAULT_YARN_APP_ACL = " ";
+
-  public static final String DEFAULT_RM_ADMIN_ADDRESS = "0.0.0.0:8141";
+  public static final int DEFAULT_RM_ADMIN_PORT = 8141;
+  public static final String DEFAULT_RM_ADMIN_ADDRESS = "0.0.0.0:" +
+      DEFAULT_RM_ADMIN_PORT;
-  /** How often should the RM check that the AM is still alive.*/
-  public static final String RM_AM_LIVENESS_MONITOR_INTERVAL_MS =
-    RM_PREFIX + "amliveliness-monitor.interval-ms";
-  public static final int DEFAULT_RM_AM_LIVENESS_MONITOR_INTERVAL_MS = 1000;
-  
-  /** How often to check that containers are still alive. */
-  public static final String RM_CONTAINER_LIVENESS_MONITOR_INTERVAL_MS =
-    RM_PREFIX + "container.liveness-monitor.interval-ms";
-  public static final int DEFAULT_RM_CONTAINER_LIVENESS_MONITOR_INTERVAL_MS = 
-    600000;
-  
-  /** How often to check that node managers are still alive.*/
-  public static final String RM_NM_LIVENESS_MONITOR_INTERVAL_MS =
-    RM_PREFIX + "nm.liveness-monitor.interval-ms";
-  public static final int DEFAULT_RM_NM_LIVENESS_MONITOR_INTERVAL_MS = 1000;
+  /** How long to wait until a container is considered dead.*/
+  public static final String RM_CONTAINER_ALLOC_EXPIRY_INTERVAL_MS = 
+    RM_PREFIX + "rm.container-allocation.expiry-interval-ms";
+  public static final int DEFAULT_RM_CONTAINER_ALLOC_EXPIRY_INTERVAL_MS = 600000;
+
+  /** Environment variables that will be sent to containers.*/
+  public static final String NM_ADMIN_USER_ENV = NM_PREFIX + "admin-env";
+  public static final String DEFAULT_NM_ADMIN_USER_ENV = "MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX";
+
+  /** Environment variables that containers may override rather than use NodeManager's default.*/
+  public static final String NM_ENV_WHITELIST = NM_PREFIX + "env-whitelist";
+  public static final String DEFAULT_NM_ENV_WHITELIST = "JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,YARN_HOME";
-  public static final String DEFAULT_NM_ADDRESS = "0.0.0.0:45454";
+  public static final int DEFAULT_NM_PORT = 0;
+  public static final String DEFAULT_NM_ADDRESS = "0.0.0.0:"
+      + DEFAULT_NM_PORT;
-  public static final String DEFAULT_NM_LOCALIZER_ADDRESS = "0.0.0.0:4344";
+  public static final int DEFAULT_NM_LOCALIZER_PORT = 4344;
+  public static final String DEFAULT_NM_LOCALIZER_ADDRESS = "0.0.0.0:" +
+    DEFAULT_NM_LOCALIZER_PORT;
-  
+
+
+  /** Whether to enable log aggregation */
+  public static final String NM_LOG_AGGREGATION_ENABLED = NM_PREFIX
+      + "log-aggregation-enable";
+  public static final boolean DEFAULT_NM_LOG_AGGREGATION_ENABLED = false;
+  /**
+   * Number of seconds to retain logs on the NodeManager. Only applicable if Log
+   * aggregation is disabled
+   */
+  public static final String NM_LOG_RETAIN_SECONDS = NM_PREFIX
+      + "log.retain-seconds";
+
+  /**
+   * Number of threads used in log cleanup. Only applicable if Log aggregation
+   * is disabled
+   */
+  public static final String NM_LOG_DELETION_THREADS_COUNT = 
+    NM_PREFIX +  "log.deletion-threads-count";
+  public static final int DEFAULT_NM_LOG_DELETE_THREAD_COUNT = 4;
+
-  
+
+  /**
+   * The remote log dir will be created at
+   * NM_REMOTE_APP_LOG_DIR/${user}/NM_REMOTE_APP_LOG_DIR_SUFFIX/${appId}
+   */
+  public static final String NM_REMOTE_APP_LOG_DIR_SUFFIX = 
+    NM_PREFIX + "remote-app-log-dir-suffix";
+  public static final String DEFAULT_NM_REMOTE_APP_LOG_DIR_SUFFIX="logs";
+
+  public static final String YARN_LOG_SERVER_URL =
+    YARN_PREFIX + "log.server.url";
+
-  public static final String NM_VMEM_GB = NM_PREFIX + "resource.memory-gb";
-  public static final int DEFAULT_NM_VMEM_GB = 8;
+  public static final String NM_PMEM_MB = NM_PREFIX + "resource.memory-mb";
+  public static final int DEFAULT_NM_PMEM_MB = 8 * 1024;
+
+  public static final String NM_VMEM_PMEM_RATIO =
+    NM_PREFIX + "vmem-pmem-ratio";
+  public static final float DEFAULT_NM_VMEM_PMEM_RATIO = 2.1f;
-  public static final String DEFAULT_NM_WEBAPP_ADDRESS = "0.0.0.0:9999";
+  public static final int DEFAULT_NM_WEBAPP_PORT = 9999;
+  public static final String DEFAULT_NM_WEBAPP_ADDRESS = "0.0.0.0:" +
+    DEFAULT_NM_WEBAPP_PORT;
-  /** Amount of physical ram to reserve for other applications, -1 disables.*/
-  public static final String NM_RESERVED_MEMORY_MB =
-    NM_PREFIX + "reserved.memory-mb";
-  
+  /** 
+   * The UNIX group that the linux-container-executor should run as.
+   * This is intended to be set as part of container-executor.cfg. 
+   */
+  public static final String NM_LINUX_CONTAINER_GROUP =
+    NM_PREFIX + "linux-container-executor.group";
+  
+
+  ////////////////////////////////
+  // Web Proxy Configs
+  ////////////////////////////////
+  public static final String PROXY_PREFIX = "yarn.web-proxy.";
+  /** The kerberos principal for the proxy.*/
+  public static final String PROXY_PRINCIPAL =
+    PROXY_PREFIX + "principal";
+  
+  /** Keytab for Proxy.*/
+  public static final String PROXY_KEYTAB = PROXY_PREFIX + "keytab";
+  
+  /** The address for the web proxy.*/
+  public static final String PROXY_ADDRESS =
+    PROXY_PREFIX + "address";
+  
+  /**
+   * YARN Service Level Authorization
+   */
+  public static final String 
+  YARN_SECURITY_SERVICE_AUTHORIZATION_RESOURCETRACKER =
+      "security.resourcetracker.protocol.acl";
+  public static final String 
+  YARN_SECURITY_SERVICE_AUTHORIZATION_CLIENT_RESOURCEMANAGER =
+      "security.client.resourcemanager.protocol.acl";
+  public static final String 
+  YARN_SECURITY_SERVICE_AUTHORIZATION_ADMIN =
+      "security.admin.protocol.acl";
+  public static final String 
+  YARN_SECURITY_SERVICE_AUTHORIZATION_APPLICATIONMASTER_RESOURCEMANAGER =
+      "security.applicationmaster.resourcemanager.protocol.acl";
+
+  public static final String 
+  YARN_SECURITY_SERVICE_AUTHORIZATION_CONTAINER_MANAGER =
+      "security.containermanager.protocol.acl";
+  public static final String 
+  YARN_SECURITY_SERVICE_AUTHORIZATION_RESOURCE_LOCALIZER =
+      "security.resourcelocalizer.protocol.acl";
+
+  /** No. of milliseconds to wait between sending a SIGTERM and SIGKILL
+   * to a running container */
+  public static final String NM_SLEEP_DELAY_BEFORE_SIGKILL_MS =
+      NM_PREFIX + "sleep-delay-before-sigkill.ms";
+  public static final long DEFAULT_NM_SLEEP_DELAY_BEFORE_SIGKILL_MS =
+      250;
+
+  /** Max time to wait for a process to come up when trying to cleanup
+   * container resources */
+  public static final String NM_PROCESS_KILL_WAIT_MS =
+      NM_PREFIX + "process-kill-wait.ms";
+  public static final long DEFAULT_NM_PROCESS_KILL_WAIT_MS =
+      2000;
+
-  public static String getRMWebAppURL(Configuration conf) {
+  public static String getProxyHostAndPort(Configuration conf) {
+    String addr = conf.get(PROXY_ADDRESS);
+    if(addr == null || addr.isEmpty()) {
+      addr = getRMWebAppHostAndPort(conf);
+    }
+    return addr;
+  }
+  
+  public static String getRMWebAppHostAndPort(Configuration conf) {
-                           YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS);
+        YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS);
-    return JOINER.join("http://", host, ":", port);
+    return JOINER.join(host, ":", port);
+  }
+  
+  public static String getRMWebAppURL(Configuration conf) {
+    return JOINER.join("http://", getRMWebAppHostAndPort(conf));

MOV23 MOV23 MOV23 MOV23 MOV23 MOV23 MOV23 MOV23 MOV23 MOV23 MOV23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS31 INS31 INS43 MOV43 INS39 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 MOV43 INS83 INS83 INS83 INS39 INS59 MOV43 MOV43 MOV43 MOV43 INS29 INS83 INS83 INS83 MOV43 INS59 INS83 INS83 INS83 INS39 INS59 MOV43 MOV43 INS83 INS83 INS83 MOV43 INS59 INS29 INS83 INS83 INS83 MOV43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 MOV43 INS59 INS29 INS83 INS83 INS83 MOV43 INS59 INS83 INS83 INS83 INS39 INS59 INS43 INS29 INS83 INS83 INS83 MOV43 INS59 INS29 INS83 INS83 INS83 INS43 INS59 MOV43 INS43 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 INS43 INS29 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS39 INS59 INS43 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS43 INS42 INS44 INS8 UPD42 INS83 INS83 INS43 INS42 INS44 INS8 INS42 UPD42 UPD45 UPD42 INS27 UPD42 INS34 INS27 INS42 INS34 INS27 INS42 INS34 INS27 INS42 INS34 INS27 UPD42 UPD42 UPD9 UPD42 UPD42 INS65 INS42 INS45 INS42 INS34 INS27 UPD42 UPD42 UPD34 UPD42 INS42 INS45 INS65 INS42 INS27 INS42 INS42 INS45 UPD42 UPD34 INS42 INS42 INS27 INS42 INS34 INS42 INS27 INS65 INS42 INS27 INS42 INS9 INS42 UPD42 INS65 INS42 INS27 UPD42 UPD34 INS65 INS42 INS42 INS27 UPD42 UPD45 INS42 UPD42 INS27 UPD42 UPD42 INS27 INS42 INS42 INS27 INS42 INS34 INS42 INS34 INS42 INS27 INS65 INS42 INS42 INS27 INS42 INS42 INS45 INS65 INS42 INS42 INS27 INS65 INS42 INS42 INS27 INS65 INS42 INS42 INS27 INS65 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS65 INS42 INS42 INS27 INS42 INS34 INS42 UPD42 INS42 INS34 INS42 INS43 INS42 INS60 INS25 INS41 INS42 INS43 INS42 INS41 INS42 INS45 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 UPD66 UPD42 UPD66 UPD42 INS66 INS45 INS42 UPD66 UPD45 UPD66 UPD42 UPD45 INS66 INS42 INS45 INS45 INS42 INS45 INS42 INS66 INS42 INS45 UPD66 INS66 UPD42 UPD45 INS66 INS66 INS42 INS45 INS66 INS66 INS42 INS45 INS42 INS45 UPD45 INS34 INS34 INS42 INS45 INS45 INS42 INS66 INS66 INS42 INS45 INS66 INS42 INS45 INS66 INS42 INS45 INS66 INS42 INS45 INS66 INS66 INS66 INS42 INS45 UPD66 INS66 UPD45 INS42 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS27 INS32 INS21 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS7 INS42 INS42 INS42 INS32 INS42 INS42 DEL66 DEL65 DEL29 DEL66 DEL65 DEL29 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL34 DEL45 DEL45