HDFS-7364. Balancer always shows zero Bytes Already Moved. Contributed by Tsz Wo Nicholas Sze.

-import java.util.Formatter;
-  private static final Path BALANCER_ID_PATH = new Path("/system/balancer.id");
+  static final Path BALANCER_ID_PATH = new Path("/system/balancer.id");
-  private void resetData(Configuration conf) {
+  void resetData(Configuration conf) {
-  
+
+  static class Result {
+    final ExitStatus exitStatus;
+    final long bytesLeftToMove;
+    final long bytesBeingMoved;
+    final long bytesAlreadyMoved;
+
+    Result(ExitStatus exitStatus, long bytesLeftToMove, long bytesBeingMoved,
+        long bytesAlreadyMoved) {
+      this.exitStatus = exitStatus;
+      this.bytesLeftToMove = bytesLeftToMove;
+      this.bytesBeingMoved = bytesBeingMoved;
+      this.bytesAlreadyMoved = bytesAlreadyMoved;
+    }
+
+    void print(int iteration, PrintStream out) {
+      out.printf("%-24s %10d  %19s  %18s  %17s%n",
+          DateFormat.getDateTimeInstance().format(new Date()), iteration,
+          StringUtils.byteDesc(bytesAlreadyMoved),
+          StringUtils.byteDesc(bytesLeftToMove),
+          StringUtils.byteDesc(bytesBeingMoved));
+    }
+  }
+
+  Result newResult(ExitStatus exitStatus, long bytesLeftToMove, long bytesBeingMoved) {
+    return new Result(exitStatus, bytesLeftToMove, bytesBeingMoved,
+        dispatcher.getBytesMoved());
+  }
+
+  Result newResult(ExitStatus exitStatus) {
+    return new Result(exitStatus, -1, -1, dispatcher.getBytesMoved());
+  }
+
-  private ExitStatus run(int iteration, Formatter formatter,
-      Configuration conf) {
+  Result runOneIteration() {
-        return ExitStatus.SUCCESS;
+        return newResult(ExitStatus.SUCCESS, bytesLeftToMove, -1);
-      final long bytesToMove = chooseStorageGroups();
-      if (bytesToMove == 0) {
+      final long bytesBeingMoved = chooseStorageGroups();
+      if (bytesBeingMoved == 0) {
-        return ExitStatus.NO_MOVE_BLOCK;
+        return newResult(ExitStatus.NO_MOVE_BLOCK, bytesLeftToMove, bytesBeingMoved);
-        LOG.info( "Will move " + StringUtils.byteDesc(bytesToMove) +
+        LOG.info( "Will move " + StringUtils.byteDesc(bytesBeingMoved) +
-
-      formatter.format("%-24s %10d  %19s  %18s  %17s%n",
-          DateFormat.getDateTimeInstance().format(new Date()),
-          iteration,
-          StringUtils.byteDesc(dispatcher.getBytesMoved()),
-          StringUtils.byteDesc(bytesLeftToMove),
-          StringUtils.byteDesc(bytesToMove)
-          );
-        return ExitStatus.NO_MOVE_PROGRESS;
+        return newResult(ExitStatus.NO_MOVE_PROGRESS, bytesLeftToMove, bytesBeingMoved);
-      return ExitStatus.IN_PROGRESS;
+      return newResult(ExitStatus.IN_PROGRESS, bytesLeftToMove, bytesBeingMoved);
-      return ExitStatus.ILLEGAL_ARGUMENTS;
+      return newResult(ExitStatus.ILLEGAL_ARGUMENTS);
-      return ExitStatus.IO_EXCEPTION;
+      return newResult(ExitStatus.IO_EXCEPTION);
-      return ExitStatus.INTERRUPTED;
+      return newResult(ExitStatus.INTERRUPTED);
-    final Formatter formatter = new Formatter(System.out);
-          final ExitStatus r = b.run(iteration, formatter, conf);
+          final Result r = b.runOneIteration();
+          r.print(iteration, System.out);
+
-          if (r == ExitStatus.IN_PROGRESS) {
+          if (r.exitStatus == ExitStatus.IN_PROGRESS) {
-          } else if (r != ExitStatus.SUCCESS) {
+          } else if (r.exitStatus != ExitStatus.SUCCESS) {
-            return r.getExitCode();
+            return r.exitStatus.getExitCode();

INS55 INS31 INS31 INS83 INS42 INS23 INS23 INS23 INS23 INS31 INS31 INS43 INS42 INS44 INS44 INS44 INS8 INS43 INS42 INS44 INS8 INS43 INS42 INS83 MOV43 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS42 INS44 INS44 INS44 INS44 INS8 INS39 INS42 MOV44 INS44 INS8 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS41 INS42 INS43 INS42 INS41 UPD42 MOV42 MOV12 MOV12 INS42 INS42 INS42 INS42 MOV43 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS21 INS21 INS21 INS21 INS43 INS42 MOV21 INS42 INS14 INS42 INS14 INS7 INS7 INS7 INS7 INS42 INS43 INS42 INS42 INS42 MOV32 INS43 INS42 INS38 INS38 INS32 MOV44 MOV44 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 UPD42 UPD42 INS42 INS42 INS34 INS34 INS42 INS42 INS32 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 UPD42 UPD42 UPD42 INS42 INS40 INS42 INS42 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS38 INS42 INS40 INS42 INS42 INS42 INS40 INS42 INS42 INS21 INS34 INS43 INS32 UPD42 INS42 INS42 INS42 INS42 INS40 INS40 UPD42 INS40 INS40 DEL40 DEL26 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL40 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42