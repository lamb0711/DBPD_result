HDFS-4170. Add snapshot information to INodesInPath.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1407703 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.namenode.snapshot.Snapshot;
+      if (curNode instanceof INodeDirectorySnapshottable) {
+        //if the path is a non-snapshot path, update the latest snapshot.
+        if (!existing.isSnapshot()) {
+          existing.updateLatestSnapshot(
+              ((INodeDirectorySnapshottable)curNode).getLastSnapshot());
+        }
+      }
-        curNode = ((INodeDirectorySnapshottable) parentDir)
-            .getSnapshotRoot(components[count + 1]);
+        final Snapshot s = ((INodeDirectorySnapshottable)parentDir).getSnapshot(
+            components[count + 1]);
+        if (s == null) {
+          //snapshot not found
+          curNode = null;
+        } else {
+          curNode = s.getRoot();
+          existing.setSnapshot(s);
+        }
-          existing.snapshotRootIndex = existing.size;
+          existing.snapshotRootIndex = existing.numNonNull;
-    private int size;
+    private int numNonNull;
+    /**
+     * For snapshot paths, it is the reference to the snapshot; or null if the
+     * snapshot does not exist. For non-snapshot paths, it is the reference to
+     * the latest snapshot found in the path; or null if no snapshot is found.
+     */
+    private Snapshot snapshot = null; 
-      size = 0;
+      numNonNull = 0;
+     * @return the snapshot associated to the path.
+     * @see #snapshot
+     */
+    public Snapshot getSnapshot() {
+      return snapshot;
+    }
+
+    private void setSnapshot(Snapshot s) {
+      snapshot = s;
+    }
+    
+    private void updateLatestSnapshot(Snapshot s) {
+      if (snapshot == null || snapshot.compareTo(s) < 0) {
+        snapshot = s;
+      }
+    }
+
+    /**
-      assert size < inodes.length;
-      inodes[size++] = node;
+      inodes[numNonNull++] = node;
-    int getSize() {
-      return size;
+    int getNumNonNull() {
+      return numNonNull;
+    }
+    
+    static String toString(INode inode) {
+      return inode == null? null: inode.getLocalName();
+    }
+
+    @Override
+    public String toString() {
+      final StringBuilder b = new StringBuilder(getClass().getSimpleName())
+          .append(":\n  inodes = ");
+      if (inodes == null) {
+        b.append("null");
+      } else if (inodes.length == 0) {
+        b.append("[]");
+      } else {
+        b.append("[").append(toString(inodes[0]));
+        for(int i = 1; i < inodes.length; i++) {
+          b.append(", ").append(toString(inodes[i]));
+        }
+        b.append("]");
+      }
+      b.append("\n  numNonNull = ").append(numNonNull)
+       .append("\n  capacity   = ").append(capacity)
+       .append("\n  isSnapshot        = ").append(isSnapshot)
+       .append("\n  snapshotRootIndex = ").append(snapshotRootIndex)
+       .append("\n  snapshot          = ").append(snapshot);
+      return b.toString();

INS26 INS40 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS29 INS83 INS43 INS59 INS29 INS83 INS43 INS42 INS8 INS83 MOV39 UPD42 MOV42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 MOV29 INS83 INS39 INS42 MOV44 INS8 UPD42 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS8 UPD42 INS65 INS42 INS42 INS33 INS65 INS65 INS42 INS41 INS43 INS42 INS21 INS43 INS42 INS25 MOV21 INS42 INS43 INS42 INS41 INS42 INS42 INS60 INS25 INS21 INS41 INS25 INS66 INS66 INS66 INS66 INS67 INS42 INS42 INS7 INS42 INS27 INS8 UPD42 INS42 INS16 INS83 INS43 INS59 INS27 INS8 INS25 INS32 INS32 INS62 INS8 UPD42 INS42 INS42 INS42 INS27 INS27 INS21 INS27 INS33 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS27 INS8 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS25 INS60 INS25 INS42 INS33 INS32 INS34 INS7 INS42 INS33 INS42 INS42 INS14 INS42 INS45 INS32 INS40 INS34 INS21 INS21 INS24 INS21 INS32 INS42 INS45 INS42 INS38 INS8 INS83 INS43 INS59 INS27 INS8 INS8 INS42 INS42 INS42 INS42 INS42 UPD42 INS43 INS32 INS42 INS42 INS45 INS32 INS32 INS58 INS27 INS37 INS8 INS32 INS32 INS42 INS42 INS32 INS21 INS42 INS42 MOV32 INS42 INS33 MOV21 INS21 INS21 INS42 INS32 INS42 INS42 INS42 INS45 INS32 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS21 INS42 INS42 INS45 INS32 INS42 INS45 INS42 INS42 INS32 UPD42 INS7 INS32 INS42 INS42 INS42 INS45 INS42 INS2 INS42 INS34 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS33 INS42 INS32 INS42 INS42 INS42 UPD40 INS42 INS34 INS32 INS42 INS32 INS32 INS42 INS45 INS36 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS2 INS32 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS45 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS45 DEL83 DEL42 DEL40 DEL27 DEL6 DEL8 DEL31