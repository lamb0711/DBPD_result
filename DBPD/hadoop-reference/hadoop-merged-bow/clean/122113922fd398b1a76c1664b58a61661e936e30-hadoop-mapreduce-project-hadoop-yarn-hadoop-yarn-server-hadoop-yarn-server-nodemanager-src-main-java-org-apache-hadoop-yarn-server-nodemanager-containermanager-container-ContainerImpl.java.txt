Merging trunk to HDFS-1623 branch.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1177117 13f79535-47bb-0310-9956-ffa450edef68

-        new ExitedWithFailureTransition())
+        new ExitedWithFailureTransition(true))
+       // TODO race: Can lead to a CONTAINER_LAUNCHED event at state KILLING, 
+       // and a container which will never be killed by the NM.
-        new ExitedWithSuccessTransition())
+        new ExitedWithSuccessTransition(true))
-        new ExitedWithFailureTransition())
+        new ExitedWithFailureTransition(true))
+    .addTransition(ContainerState.RUNNING, ContainerState.EXITED_WITH_FAILURE,
+        ContainerEventType.CONTAINER_KILLED_ON_REQUEST,
+        new KilledExternallyTransition()) 
-        new ExitedWithSuccessTransition())
+        new ExitedWithSuccessTransition(false))
-        new ExitedWithFailureTransition())
+        new ExitedWithFailureTransition(false))
+  @SuppressWarnings("unchecked")  // dispatcher not typed
+
+    boolean clCleanupRequired;
+
+    public ExitedWithSuccessTransition(boolean clCleanupRequired) {
+      this.clCleanupRequired = clCleanupRequired;
+    }
+
+      // Set exit code to 0 on success    	
+      container.exitCode = 0;
+    	
-      // Inform the localizer to decrement reference counts and cleanup
-      // resources.
+      if (clCleanupRequired) {
+        container.dispatcher.getEventHandler().handle(
+            new ContainersLauncherEvent(container,
+                ContainersLauncherEventType.CLEANUP_CONTAINER));
+      }
+
+  @SuppressWarnings("unchecked")  // dispatcher not typed
+
+    boolean clCleanupRequired;
+
+    public ExitedWithFailureTransition(boolean clCleanupRequired) {
+      this.clCleanupRequired = clCleanupRequired;
+    }
+
-      // Inform the localizer to decrement reference counts and cleanup
-      // resources.
+      if (clCleanupRequired) {
+        container.dispatcher.getEventHandler().handle(
+            new ContainersLauncherEvent(container,
+                ContainersLauncherEventType.CLEANUP_CONTAINER));
+      }
+
+  static class KilledExternallyTransition extends ExitedWithFailureTransition {
+    KilledExternallyTransition() {
+      super(true);
+    }
+
+    @Override
+    public void transition(ContainerImpl container, ContainerEvent event) {
+      super.transition(container, event);
+      container.diagnostics.append("Killed by external signal\n");
+    }
+  }
+

INS83 INS42 INS55 INS79 INS23 INS31 INS79 INS23 INS31 INS83 INS42 INS43 INS31 INS31 INS32 INS42 INS45 INS39 INS59 INS83 INS42 INS44 INS8 INS8 INS42 INS45 INS39 INS59 INS83 INS42 INS44 INS8 INS42 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS8 MOV32 INS42 INS42 INS39 INS42 INS21 INS21 INS25 MOV21 INS42 INS39 INS42 INS21 INS25 INS46 INS42 INS43 INS42 INS43 INS42 INS21 INS21 UPD42 INS40 INS40 INS40 INS42 INS7 INS7 INS42 INS8 INS7 INS42 INS8 INS9 INS42 INS42 INS48 INS32 UPD40 INS22 INS42 INS40 INS34 INS21 INS22 INS42 INS21 INS42 INS42 INS42 INS40 INS42 INS45 UPD40 UPD40 INS52 INS42 INS32 INS52 INS42 INS32 UPD40 INS42 INS32 INS42 INS14 INS32 INS42 INS14 UPD40 UPD40 UPD42 INS40 INS42 INS43 INS42 INS40 INS40 INS42 INS43 INS42 INS40 UPD40 INS42 INS42 UPD40 UPD40 MOV14 UPD40 UPD40 MOV14 INS9 UPD40 UPD40 INS9 UPD40 INS42 UPD40 MOV14 UPD40 UPD40 MOV14 UPD40 UPD40 UPD40 UPD40 INS42 UPD40 UPD40 UPD42 UPD40 UPD40 UPD40 UPD40 INS42 UPD40 UPD40 UPD42 UPD40 UPD40 UPD40 INS14 INS43 INS42 INS9 INS9 INS9 DEL83 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL8