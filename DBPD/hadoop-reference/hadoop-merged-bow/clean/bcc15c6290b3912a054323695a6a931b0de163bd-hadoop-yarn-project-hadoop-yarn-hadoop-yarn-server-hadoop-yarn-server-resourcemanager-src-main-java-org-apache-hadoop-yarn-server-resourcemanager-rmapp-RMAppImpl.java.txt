YARN-5611. Provide an API to update lifetime of an application. Contributed by Rohith Sharma K S

+  private static final EnumSet<RMAppState> COMPLETED_APP_STATES =
+      EnumSet.of(RMAppState.FINISHED, RMAppState.FINISHING, RMAppState.FAILED,
+          RMAppState.KILLED, RMAppState.FINAL_SAVING, RMAppState.KILLING);
+  private Map<ApplicationTimeoutType, Long> applicationTimeouts =
+      new HashMap<ApplicationTimeoutType, Long>();
+    this.applicationTimeouts = appState.getApplicationTimeouts();
-      long applicationLifetime =
-          app.getApplicationLifetime(ApplicationTimeoutType.LIFETIME);
-      if (applicationLifetime > 0) {
+      for (Map.Entry<ApplicationTimeoutType, Long> timeout :
+        app.applicationTimeouts.entrySet()) {
-            ApplicationTimeoutType.LIFETIME, app.submitTime,
-            applicationLifetime * 1000);
+            timeout.getKey(), timeout.getValue());
+          long remainingTime = timeout.getValue() - app.systemClock.getTime();
-              + " is registered for timeout monitor, type="
-              + ApplicationTimeoutType.LIFETIME + " value="
-              + applicationLifetime + " seconds");
+              + " is registered for timeout monitor, type=" + timeout.getKey()
+              + " remaining timeout="
+              + (remainingTime > 0 ? remainingTime / 1000 : 0) + " seconds");
+        // calculate next timeout value
+        Long newTimeout =
+            Long.valueOf(app.submitTime + (applicationLifetime * 1000));
-            ApplicationTimeoutType.LIFETIME, app.submitTime,
-            applicationLifetime * 1000);
-        LOG.debug("Application " + app.applicationId
+            ApplicationTimeoutType.LIFETIME, newTimeout);
+
+        // update applicationTimeouts with new absolute value.
+        app.applicationTimeouts.put(ApplicationTimeoutType.LIFETIME,
+            newTimeout);
+
+        LOG.info("Application " + app.applicationId
+    appState.setApplicationTimeouts(this.applicationTimeouts);
-}
+
+  @Override
+  public Map<ApplicationTimeoutType, Long> getApplicationTimeouts() {
+    this.readLock.lock();
+    try {
+      return new HashMap(this.applicationTimeouts);
+    } finally {
+      this.readLock.unlock();
+    }
+  }
+
+  public void updateApplicationTimeout(
+      Map<ApplicationTimeoutType, Long> updateTimeout) {
+    this.writeLock.lock();
+    try {
+      if (COMPLETED_APP_STATES.contains(getState())) {
+        return;
+      }
+      // update monitoring service
+      this.rmContext.getRMAppLifetimeMonitor()
+          .updateApplicationTimeouts(getApplicationId(), updateTimeout);
+      this.applicationTimeouts.putAll(updateTimeout);
+
+    } finally {
+      this.writeLock.unlock();
+    }
+  }
+}

INS23 INS23 INS31 INS31 INS83 INS83 INS83 INS74 INS59 INS83 INS74 INS59 INS78 INS83 INS74 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS43 INS43 INS42 INS32 INS43 INS43 INS43 INS42 INS14 INS21 INS21 INS42 INS43 INS43 INS43 INS21 INS54 INS74 INS42 INS21 INS54 INS42 INS42 INS42 INS42 INS40 INS40 INS40 INS40 INS40 INS40 INS42 INS42 INS42 INS74 INS7 INS70 INS32 INS42 INS42 INS42 INS32 INS8 INS8 INS43 INS43 INS43 INS32 INS8 INS8 INS43 INS43 INS43 INS22 INS32 INS44 INS32 INS8 INS42 INS42 INS22 INS22 INS42 INS41 INS21 INS42 INS42 INS42 INS22 INS42 INS25 INS21 INS21 INS21 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS74 INS42 UPD40 MOV40 INS42 MOV21 MOV25 INS60 INS21 INS52 INS42 INS52 INS42 INS14 INS32 INS52 INS42 INS32 INS8 INS32 INS32 INS32 INS43 INS43 INS43 INS43 INS59 INS32 INS43 INS22 INS22 INS42 INS42 INS42 INS32 INS41 INS32 INS42 INS32 INS42 INS22 INS42 INS42 INS22 INS42 INS40 INS42 INS42 INS32 INS32 INS60 INS42 INS42 INS32 INS42 INS40 INS42 INS40 INS42 UPD42 INS42 INS52 INS42 INS52 INS42 INS42 INS22 INS42 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS39 INS59 INS42 INS42 INS27 INS52 INS42 INS42 INS27 INS40 INS36 INS32 INS32 INS32 UPD45 INS36 MOV27 INS42 INS42 INS40 INS42 INS42 INS42 INS16 INS27 INS27 INS34 UPD42 MOV42 INS34 INS42 INS34 DEL40 DEL40 DEL42 DEL34 DEL27 DEL40 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL34 DEL27 DEL8 DEL25 DEL40