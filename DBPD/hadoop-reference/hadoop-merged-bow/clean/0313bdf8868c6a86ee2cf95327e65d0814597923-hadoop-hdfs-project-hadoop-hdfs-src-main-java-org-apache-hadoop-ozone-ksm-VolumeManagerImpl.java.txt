HDFS-11897. Ozone: KSM: Changing log level for client calls in KSM. Contributed by Shashikant Banerjee.

-      LOG.error("Too many volumes for user:{}", owner);
+      LOG.debug("Too many volumes for user:{}", owner);
+      LOG.debug("volume:{} not found for user:{}");
-        LOG.error("volume:{} already exists", args.getVolume());
+        LOG.debug("volume:{} already exists", args.getVolume());
-      LOG.info("created volume:{} user:{}",
-                                  args.getVolume(), args.getOwnerName());
+      LOG.debug("created volume:{} user:{}", args.getVolume(),
+          args.getOwnerName());
-      LOG.error("Volume creation failed for user:{} volname:{}",
-                                args.getOwnerName(), args.getVolume(), ex);
+      if (!(ex instanceof KSMException)) {
+        LOG.error("Volume creation failed for user:{} volume:{}",
+            args.getOwnerName(), args.getVolume(), ex);
+      }
+        LOG.debug("Changing volume ownership failed for user:{} volume:{}",
+            owner, volume);
-      LOG.error("Changing volume ownership failed for user:{} volume:{}",
-          owner, volume, ex);
+      if (!(ex instanceof KSMException)) {
+        LOG.error("Changing volume ownership failed for user:{} volume:{}",
+            owner, volume, ex);
+      }
-        throw  new KSMException(ResultCodes.FAILED_VOLUME_NOT_FOUND);
+        LOG.debug("volume:{} does not exist", volume);
+        throw new KSMException(ResultCodes.FAILED_VOLUME_NOT_FOUND);
-          KsmVolumeArgs.newBuilder().setVolume(volumeArgs.getVolume())
+          KsmVolumeArgs.newBuilder()
+              .setVolume(volumeArgs.getVolume())
-              .setCreationTime(volumeArgs.getCreationTime())
-              .build();
+              .setCreationTime(volumeArgs.getCreationTime()).build();
-      LOG.error("Changing volume quota failed for volume:{} quota:{}",
-          volume, quota, ex);
+      if (!(ex instanceof KSMException)) {
+        LOG.error("Changing volume quota failed for volume:{} quota:{}", volume,
+            quota, ex);
+      }
-        throw  new KSMException(ResultCodes.FAILED_VOLUME_NOT_FOUND);
+        LOG.debug("volume:{} does not exist", volume);
+        throw new KSMException(ResultCodes.FAILED_VOLUME_NOT_FOUND);
-      LOG.error("Info volume failed for volume:{}", volume, ex);
+      if (!(ex instanceof KSMException)) {
+        LOG.warn("Info volume failed for volume:{}", volume, ex);
+      }
+        LOG.debug("volume:{} does not exist", volume);
+        LOG.debug("volume:{} is not empty", volume);
-      LOG.error("Delete volume failed for volume:{}", volume, ex);
+      if (!(ex instanceof KSMException)) {
+        LOG.error("Delete volume failed for volume:{}", volume, ex);
+      }
+        LOG.debug("volume:{} does not exist", volume);
-      LOG.error("Check volume access failed for volume:{} user:{} rights:{}",
-          volume, userAcl.getName(), userAcl.getRights(), ex);
+      if (!(ex instanceof KSMException)) {
+        LOG.error("Check volume access failed for volume:{} user:{} rights:{}",
+            volume, userAcl.getName(), userAcl.getRights(), ex);
+      }

INS21 INS8 INS8 INS8 INS8 INS8 INS8 INS32 INS25 MOV53 INS25 MOV53 INS25 MOV53 INS25 MOV53 INS25 MOV53 INS25 MOV53 UPD42 INS42 INS42 INS45 UPD42 INS38 MOV8 INS21 INS38 MOV8 INS21 INS38 MOV8 INS21 INS38 INS8 INS21 INS21 INS38 MOV8 INS21 INS38 MOV8 INS36 INS32 INS36 INS32 INS36 INS32 INS36 MOV21 INS32 INS32 INS36 INS32 INS36 UPD42 INS62 INS42 INS42 INS45 INS42 INS42 INS62 INS42 INS42 INS45 INS42 INS62 INS42 INS42 INS45 INS42 INS62 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS62 INS42 INS42 INS45 INS42 INS62 INS42 INS43 UPD45 INS42 INS43 INS42 INS43 INS42 INS43 UPD42 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 DEL8