HDFS-5650. Remove AclReadFlag and AclWriteFlag in FileSystem API. Contributed by Haohui Mai.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1550256 13f79535-47bb-0310-9956-ffa450edef68

-import com.google.common.base.Objects;
+import java.util.Collections;
+import java.util.List;
-import org.apache.hadoop.fs.Path;
+
+import com.google.common.base.Objects;
+import com.google.common.collect.Lists;
- * An AclStatus represents an association of a specific file {@link Path} with
- * an {@link Acl}.  AclStatus instances are immutable.  Use a {@link Builder} to
- * create a new instance.
+ * An AclStatus contains the ACL information of a specific file. AclStatus
+ * instances are immutable. Use a {@link Builder} to create a new instance.
-  private final Path file;
-  private final Acl acl;
-
-  /**
-   * Returns the file associated to this ACL.
-   *
-   * @return Path file associated to this ACL
-   */
-  public Path getFile() {
-    return file;
-  }
+  private final boolean stickyBit;
+  private final Iterable<AclEntry> entries;
-   * Returns the ACL.
-   *
-   * @return Acl the ACL
+   * Returns the sticky bit.
+   * 
+   * @return boolean sticky bit
-  public Acl getAcl() {
-    return acl;
+  public boolean isStickyBit() {
+    return stickyBit;
+  }
+
+  /**
+   * Returns the list of all ACL entries, ordered by their natural ordering.
+   *
+   * @return Iterable<AclEntry> unmodifiable ordered list of all ACL entries
+   */
+  public Iterable<AclEntry> getEntries() {
+    return entries;
-    return Objects.equal(file, other.file) &&
-      Objects.equal(owner, other.owner) &&
-      Objects.equal(group, other.group) &&
-      Objects.equal(acl, other.acl);
+    return Objects.equal(owner, other.owner)
+        && Objects.equal(group, other.group)
+        && stickyBit == other.stickyBit
+        && Objects.equal(entries, other.entries);
-    return Objects.hashCode(file, owner, group, acl);
+    return Objects.hashCode(owner, group, stickyBit, entries);
-      .append("file: ").append(file)
-      .append(", owner: ").append(owner)
+      .append("owner: ").append(owner)
-      .append(", acl: {").append(acl).append('}')
+      .append(", acl: {")
+      .append("entries: ").append(entries)
+      .append(", stickyBit: ").append(stickyBit)
+      .append('}')
-    private Path file;
-    private Acl acl;
-
-    /**
-     * Sets the file associated to this ACL.
-     *
-     * @param file Path file associated to this ACL
-     * @return Builder this builder, for call chaining
-     */
-    public Builder setFile(Path file) {
-      this.file = file;
-      return this;
-    }
+    private boolean stickyBit;
+    private List<AclEntry> entries = Lists.newArrayList();
-    public Builder setOwner(String owner) {
+    public Builder owner(String owner) {
-    public Builder setGroup(String group) {
+    public Builder group(String group) {
-     * Sets the ACL.
+     * Adds an ACL entry.
-     * @param acl Acl the ACL
+     * @param e AclEntry entry to add
-    public Builder setAcl(Acl acl) {
-      this.acl = acl;
+    public Builder addEntry(AclEntry e) {
+      this.entries.add(e);
-     * Builds a new Acl populated with the set properties.
+     * Adds a list of ACL entries.
-     * @return Acl new Acl
+     * @param entries AclEntry entries to add
+     * @return Builder this builder, for call chaining
+     */
+    public Builder addEntries(Iterable<AclEntry> entries) {
+      for (AclEntry e : entries)
+        this.entries.add(e);
+      return this;
+    }
+
+    /**
+     * Sets sticky bit. If this method is not called, then the builder assumes
+     * false.
+     *
+     * @param stickyBit
+     *          boolean sticky bit
+     * @return Builder this builder, for call chaining
+     */
+    public Builder stickyBit(boolean stickyBit) {
+      this.stickyBit = stickyBit;
+      return this;
+    }
+
+    /**
+     * Builds a new AclStatus populated with the set properties.
+     *
+     * @return AclStatus new AclStatus
-      return new AclStatus(file, owner, group, acl);
+      return new AclStatus(owner, group, stickyBit, entries);
-   * @param acl Acl the ACL
+   * @param stickyBit the sticky bit
+   * @param entries the ACL entries
-  private AclStatus(Path file, String owner, String group, Acl acl) {
-    this.file = file;
+  private AclStatus(String owner, String group, boolean stickyBit,
+      Iterable<AclEntry> entries) {
-    this.acl = acl;
+    this.stickyBit = stickyBit;
+    List<AclEntry> entriesCopy = Lists.newArrayList(entries);
+    Collections.sort(entriesCopy);
+    this.entries = entriesCopy;

MOV26 MOV26 INS26 INS26 MOV23 MOV31 UPD40 INS40 INS40 MOV23 MOV31 MOV44 INS39 INS74 INS39 INS42 INS74 UPD42 INS31 INS31 MOV21 UPD66 UPD66 UPD66 UPD42 INS43 INS43 UPD42 INS43 INS43 INS39 INS74 UPD42 UPD42 UPD42 MOV29 MOV83 MOV43 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS44 MOV8 INS65 INS39 INS42 INS74 UPD42 INS60 INS21 INS42 UPD42 MOV42 UPD66 UPD66 UPD42 UPD66 UPD66 INS42 UPD42 MOV42 UPD42 INS27 INS32 UPD42 INS43 INS43 UPD42 INS32 UPD43 UPD42 MOV41 INS74 INS42 INS70 MOV41 INS65 INS65 INS65 INS42 INS39 INS42 INS41 INS42 INS66 UPD42 UPD66 INS43 INS43 INS74 INS59 INS32 MOV27 INS32 UPD42 INS42 MOV32 INS42 INS42 UPD42 MOV42 INS42 INS42 UPD66 UPD42 UPD66 UPD42 INS32 UPD66 UPD42 UPD66 INS43 INS43 INS44 INS42 INS21 INS66 INS66 INS42 INS66 INS66 INS52 UPD66 UPD66 INS42 UPD42 MOV42 UPD42 INS43 INS43 INS42 INS32 INS42 INS42 INS42 UPD42 INS27 INS42 INS42 INS42 INS40 UPD42 INS13 INS22 INS42 INS42 INS42 INS42 UPD43 MOV43 UPD42 MOV42 INS32 UPD42 UPD42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS40 INS42 MOV52 UPD42 MOV42 UPD42 INS22 INS42 INS42 UPD42 INS45 INS52 INS42 INS42 INS45 UPD45 UPD42 UPD45 UPD42 UPD45 DEL42 DEL65 DEL66 DEL66 DEL42 DEL65 DEL66 DEL42 DEL43 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL45 DEL42 DEL13 DEL42 DEL43 DEL43 DEL22 DEL42 DEL7 DEL42 DEL44 DEL31 DEL42 DEL42 DEL43 DEL42 DEL43