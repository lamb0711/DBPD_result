HDFS-13906. RBF: Add multiple paths for dfsrouteradmin 'rm' and 'clrquota' commands. Contributed by Ayush Saxena.

-    if (arg[0].equals("-rm")) {
-      if (arg.length > 2) {
-        throw new IllegalArgumentException(
-            "Too many arguments, Max=1 argument allowed");
-      }
-    } else if (arg[0].equals("-ls")) {
-      if (arg.length > 2) {
-        throw new IllegalArgumentException(
-            "Too many arguments, Max=1 argument allowed");
-      }
-    } else if (arg[0].equals("-clrQuota")) {
+    if (arg[0].equals("-ls")) {
+  /**
+   * Usage: validates the minimum number of arguments for a command.
+   * @param argv List of of command line parameters.
+   * @return true if number of arguments are valid for the command else false.
+   */
+  private boolean validateMin(String[] argv) {
+    String cmd = argv[0];
+    if ("-add".equals(cmd)) {
+      if (argv.length < 4) {
+        return false;
+      }
+    } else if ("-update".equals(cmd)) {
+      if (argv.length < 4) {
+        return false;
+      }
+    } else if ("-rm".equals(cmd)) {
+      if (argv.length < 2) {
+        return false;
+      }
+    } else if ("-setQuota".equals(cmd)) {
+      if (argv.length < 4) {
+        return false;
+      }
+    } else if ("-clrQuota".equals(cmd)) {
+      if (argv.length < 2) {
+        return false;
+      }
+    } else if ("-safemode".equals(cmd)) {
+      if (argv.length < 2) {
+        return false;
+      }
+    } else if ("-nameservice".equals(cmd)) {
+      if (argv.length < 3) {
+        return false;
+      }
+    }
+    return true;
+  }
+
-    if ("-add".equals(cmd)) {
-      if (argv.length < 4) {
-        System.err.println("Not enough parameters specified for cmd " + cmd);
-        printUsage(cmd);
-        return exitCode;
-      }
-    } else if ("-update".equals(cmd)) {
-      if (argv.length < 4) {
-        System.err.println("Not enough parameters specified for cmd " + cmd);
-        printUsage(cmd);
-        return exitCode;
-      }
-    } else if ("-rm".equals(cmd)) {
-      if (argv.length < 2) {
-        System.err.println("Not enough parameters specified for cmd " + cmd);
-        printUsage(cmd);
-        return exitCode;
-      }
-    } else if ("-setQuota".equals(cmd)) {
-      if (argv.length < 4) {
-        System.err.println("Not enough parameters specified for cmd " + cmd);
-        printUsage(cmd);
-        return exitCode;
-      }
-    } else if ("-clrQuota".equals(cmd)) {
-      if (argv.length < 2) {
-        System.err.println("Not enough parameters specified for cmd " + cmd);
-        printUsage(cmd);
-        return exitCode;
-      }
-    } else if ("-safemode".equals(cmd)) {
-      if (argv.length < 2) {
-        System.err.println("Not enough parameters specified for cmd " + cmd);
-        printUsage(cmd);
-        return exitCode;
-      }
-    } else if ("-nameservice".equals(cmd)) {
-      if (argv.length < 3) {
-        System.err.println("Not enough parameters specificed for cmd " + cmd);
-        printUsage(cmd);
-        return exitCode;
-      }
+    if (!validateMin(argv)) {
+      System.err.println("Not enough parameters specificed for cmd " + cmd);
+      printUsage(cmd);
+      return exitCode;
-
-        if (removeMount(argv[i])) {
-          System.out.println("Successfully removed mount point " + argv[i]);
+        while (i < argv.length) {
+          try {
+            if (removeMount(argv[i])) {
+              System.out.println("Successfully removed mount point " + argv[i]);
+            }
+          } catch (IOException e) {
+            exitCode = -1;
+            System.err
+                .println(cmd.substring(1) + ": " + e.getLocalizedMessage());
+          }
+          i++;
-        if (clrQuota(argv[i])) {
-          System.out.println(
-              "Successfully clear quota for mount point " + argv[i]);
+        while (i < argv.length) {
+          if (clrQuota(argv[i])) {
+            System.out
+                .println("Successfully clear quota for mount point " + argv[i]);
+            i++;
+          }

INS31 INS29 INS83 INS39 INS42 INS44 INS8 MOV25 INS65 INS65 INS65 INS5 INS42 INS60 INS25 INS41 MOV25 MOV32 INS66 INS42 INS66 INS66 INS43 INS85 INS43 INS59 MOV32 INS8 INS25 INS9 INS38 INS42 INS42 INS42 INS2 INS25 MOV32 INS8 INS25 INS32 INS42 INS34 MOV27 INS8 INS25 MOV32 INS8 INS25 INS42 INS42 INS41 MOV27 INS8 INS25 MOV32 INS8 INS25 INS9 INS41 MOV27 INS8 INS25 MOV32 INS8 INS25 INS8 INS9 INS41 MOV27 INS8 INS25 MOV32 INS8 INS25 INS61 INS9 INS41 MOV27 INS8 INS25 MOV32 INS8 INS27 INS8 INS9 INS41 MOV27 INS8 INS25 INS42 INS40 INS54 INS21 INS8 INS9 INS41 MOV27 INS8 MOV8 INS12 INS37 INS61 INS9 INS41 INS44 INS8 INS42 INS27 MOV8 INS9 INS43 INS42 INS21 INS21 INS42 INS40 INS42 INS7 INS32 INS42 INS38 INS40 INS42 INS27 INS21 INS34 INS32 INS45 INS32 INS37 INS42 INS42 INS34 INS42 INS42 INS42 DEL42 DEL34 DEL2 DEL42 DEL45 DEL32 DEL42 DEL34 DEL2 DEL42 DEL45 DEL32 DEL40 DEL34 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL8 DEL40 DEL34 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL8 DEL25 DEL25 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL25 DEL8 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL25 DEL8 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL25 DEL8 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL25 DEL8 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL25 DEL8 DEL40 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL25 DEL8 DEL8 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25 DEL25