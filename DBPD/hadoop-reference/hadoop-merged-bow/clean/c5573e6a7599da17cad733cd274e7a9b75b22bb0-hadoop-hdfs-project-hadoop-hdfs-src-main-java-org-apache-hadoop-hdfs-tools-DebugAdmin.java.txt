HDFS-11009. Add a tool to reconstruct block meta file from CLI.

+import java.io.BufferedOutputStream;
+import java.io.DataOutputStream;
+import java.io.File;
+import java.io.FileOutputStream;
+import org.apache.hadoop.HadoopIllegalArgumentException;
+import org.apache.hadoop.fs.Options;
+import org.apache.hadoop.hdfs.DFSUtilClient;
+import org.apache.hadoop.hdfs.client.impl.DfsClientConf;
+import org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetUtil;
-    new VerifyBlockChecksumCommand(),
-    new RecoverLeaseCommand(),
-    new HelpCommand()
+      new VerifyMetaCommand(),
+      new ComputeMetaCommand(),
+      new RecoverLeaseCommand(),
+      new HelpCommand()
-  private class VerifyBlockChecksumCommand extends DebugCommand {
-    VerifyBlockChecksumCommand() {
-      super("verify",
-"verify -meta <metadata-file> [-block <block-file>]",
+  private class VerifyMetaCommand extends DebugCommand {
+    VerifyMetaCommand() {
+      super("verifyMeta",
+"verifyMeta -meta <metadata-file> [-block <block-file>]",
+   * The command for verifying a block metadata file and possibly block file.
+   */
+  private class ComputeMetaCommand extends DebugCommand {
+    ComputeMetaCommand() {
+      super("computeMeta",
+          "computeMeta -block <block-file> -out <output-metadata-file>",
+          "  Compute HDFS metadata from the specified block file, and save it"
+              + " to\n  the specified output metadata file.\n\n"
+              + "**NOTE: Use at your own risk!\n If the block file is corrupt"
+              + " and you overwrite it's meta file, \n it will show up"
+              + " as good in HDFS, but you can't read the data.\n"
+              + " Only use as a last measure, and when you are 100% certain"
+              + " the block file is good.");
+    }
+
+    private DataChecksum createChecksum(Options.ChecksumOpt opt) {
+      DataChecksum dataChecksum = DataChecksum
+          .newDataChecksum(opt.getChecksumType(), opt.getBytesPerChecksum());
+      if (dataChecksum == null) {
+        throw new HadoopIllegalArgumentException(
+            "Invalid checksum type: userOpt=" + opt + ", default=" + opt
+                + ", effective=null");
+      }
+      return dataChecksum;
+    }
+
+    int run(List<String> args) throws IOException {
+      if (args.size() == 0) {
+        System.out.println(usageText);
+        System.out.println(helpText + "\n");
+        return 1;
+      }
+      final String name = StringUtils.popOptionWithArgument("-block", args);
+      if (name == null) {
+        System.err.println("You must specify a block file with -block");
+        return 2;
+      }
+      final File blockFile = new File(name);
+      if (!blockFile.exists() || !blockFile.isFile()) {
+        System.err.println("Block file <" + name + "> does not exist "
+            + "or is not a file");
+        return 3;
+      }
+      final String outFile = StringUtils.popOptionWithArgument("-out", args);
+      if (outFile == null) {
+        System.err.println("You must specify a output file with -out");
+        return 4;
+      }
+      final File srcMeta = new File(outFile);
+      if (srcMeta.exists()) {
+        System.err.println("output file already exists!");
+        return 5;
+      }
+
+      DataOutputStream metaOut = null;
+      try {
+        final Configuration conf = new Configuration();
+        final Options.ChecksumOpt checksumOpt =
+            DfsClientConf.getChecksumOptFromConf(conf);
+        final DataChecksum checksum = createChecksum(checksumOpt);
+
+        final int smallBufferSize = DFSUtilClient.getSmallBufferSize(conf);
+        metaOut = new DataOutputStream(
+            new BufferedOutputStream(new FileOutputStream(srcMeta),
+                smallBufferSize));
+        BlockMetadataHeader.writeHeader(metaOut, checksum);
+        metaOut.close();
+        FsDatasetUtil.computeChecksum(
+            srcMeta, srcMeta, blockFile, smallBufferSize, conf);
+        System.out.println(
+            "Checksum calculation succeeded on block file " + name
+                + " saved metadata to meta file " + outFile);
+        return 0;
+      } finally {
+        IOUtils.cleanup(null, metaOut);
+      }
+    }
+  }
+
+  /**
+    System.out.println("These commands are for advanced users only.\n");
+    System.out.println("Incorrect usages may result in data loss. " +
+        "Use at your own risk.\n");

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS55 UPD42 INS29 INS83 INS42 INS43 INS31 INS31 INS31 UPD42 INS65 INS42 INS42 INS8 INS83 INS43 INS42 INS44 INS8 INS39 INS42 INS44 INS43 INS8 INS21 INS21 INS14 INS66 INS46 INS42 INS43 INS42 INS60 INS25 INS41 INS74 INS42 INS42 INS25 INS60 INS25 INS60 INS25 INS60 INS25 INS60 INS25 INS60 INS54 INS32 INS32 UPD43 INS43 UPD45 UPD45 INS45 INS45 INS27 INS40 INS43 INS59 INS27 INS8 INS42 INS43 INS43 INS27 INS8 INS83 INS43 INS59 INS27 INS8 INS83 INS43 INS59 INS27 INS8 INS83 INS43 INS59 INS27 INS8 INS83 INS43 INS59 INS32 INS8 INS43 INS59 INS8 INS8 INS40 INS42 INS45 INS40 INS42 INS27 UPD42 INS42 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS42 INS42 INS32 INS42 INS33 INS53 INS42 INS42 INS32 INS34 INS21 INS21 INS41 INS42 INS42 INS32 INS42 INS33 INS21 INS41 INS42 INS42 INS14 INS38 INS38 INS21 INS41 INS42 INS42 INS32 INS42 INS33 INS21 INS41 INS42 INS42 INS14 INS42 INS42 INS21 INS41 INS42 INS42 INS33 INS60 INS60 INS60 INS60 INS21 INS21 INS21 INS21 INS21 INS41 INS21 INS45 INS45 INS42 INS42 INS32 INS32 INS14 INS42 INS42 INS32 INS32 INS34 INS42 INS42 INS45 INS42 INS32 INS34 INS43 INS42 INS32 INS32 INS32 INS34 INS42 INS42 INS45 INS42 INS32 INS34 INS43 INS42 INS32 INS34 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS39 INS59 INS7 INS32 INS32 INS32 INS32 INS34 INS32 INS42 INS42 INS42 INS42 INS43 INS27 INS40 INS42 INS42 INS40 INS42 INS27 INS40 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS27 INS40 INS42 INS45 INS42 INS40 INS42 INS45 INS42 INS42 INS14 INS40 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS27 INS42 INS42 INS33 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS45 INS42 INS45 INS45 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS14 INS45 INS42 INS45 INS42 INS42 INS42 INS43 INS14 INS42 INS42 INS43 INS42 INS42