HDFS-12069. Ozone: Create a general abstraction for metadata store. Contributed by Weiwei Yang.

-import org.apache.hadoop.utils.LevelDBKeyFilters.KeyPrefixFilter;
-import org.apache.hadoop.utils.LevelDBStore;
+import org.apache.hadoop.utils.MetadataKeyFilters.KeyPrefixFilter;
+import org.apache.hadoop.utils.MetadataKeyFilters.MetadataKeyFilter;
+import org.apache.hadoop.utils.MetadataStore;
-    .Result.IO_EXCEPTION;
-import static org.apache.hadoop.hdfs.ozone.protocol.proto.ContainerProtos
-
-  public void putKey(Pipeline pipeline, KeyData data)
-      throws StorageContainerException {
+  public void putKey(Pipeline pipeline, KeyData data) throws IOException {
-      LevelDBStore db = KeyUtils.getDB(cData, conf);
+      MetadataStore db = KeyUtils.getDB(cData, conf);
-  public KeyData getKey(KeyData data) throws StorageContainerException {
+  public KeyData getKey(KeyData data) throws IOException {
-      LevelDBStore db = KeyUtils.getDB(cData, conf);
+      MetadataStore db = KeyUtils.getDB(cData, conf);
-    } catch (IOException ex) {
-      throw new StorageContainerException(ex, IO_EXCEPTION);
-      throws StorageContainerException {
+      throws IOException {
-      LevelDBStore db = KeyUtils.getDB(cData, conf);
+      MetadataStore db = KeyUtils.getDB(cData, conf);
-      throws StorageContainerException {
+      throws IOException {
-    LevelDBStore db = KeyUtils.getDB(cData, conf);
-    try {
-      List<KeyData> result = new ArrayList<KeyData>();
-      byte[] startKeyInBytes = startKey == null ? null :
-          DFSUtil.string2Bytes(startKey);
-      KeyPrefixFilter prefixFilter = new KeyPrefixFilter(prefix);
-      List<Map.Entry<byte[], byte[]>> range =
-          db.getRangeKVs(startKeyInBytes, count, prefixFilter);
-      for(Map.Entry<byte[], byte[]> entry : range) {
-        String keyName = KeyUtils.getKeyName(entry.getKey());
-        KeyData value = KeyUtils.getKeyData(entry.getValue());
-        KeyData data = new KeyData(value.getContainerName(), keyName);
-        result.add(data);
-      }
-      return result;
-    } catch (IOException e) {
-      throw new StorageContainerException(e,
-          ContainerProtos.Result.IO_EXCEPTION);
+    MetadataStore db = KeyUtils.getDB(cData, conf);
+
+    List<KeyData> result = new ArrayList<KeyData>();
+    byte[] startKeyInBytes = startKey == null ? null :
+        DFSUtil.string2Bytes(startKey);
+    MetadataKeyFilter prefixFilter = new KeyPrefixFilter(prefix);
+    List<Map.Entry<byte[], byte[]>> range =
+        db.getRangeKVs(startKeyInBytes, count, prefixFilter);
+    for (Map.Entry<byte[], byte[]> entry : range) {
+      String keyName = KeyUtils.getKeyName(entry.getKey());
+      KeyData value = KeyUtils.getKeyData(entry.getValue());
+      KeyData data = new KeyData(value.getContainerName(), keyName);
+      result.add(data);
+    return result;

MOV26 UPD40 UPD40 UPD40 UPD43 MOV43 UPD43 INS43 MOV8 UPD42 UPD42 MOV42 MOV21 MOV21 MOV60 MOV60 UPD43 UPD43 UPD42 UPD42 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL40 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8