HDDS-394. Rename *Key Apis in DatanodeContainerProtocol to *Block apis.
Contributed Dinesh Chitlangia.

-import org.apache.hadoop.ozone.container.common.helpers.KeyData;
+import org.apache.hadoop.ozone.container.common.helpers.BlockData;
- * Map: containerId -> (localId -> {@link KeyData}).
+ * Map: containerId {@literal ->} (localId {@literal ->} {@link BlockData}).
- * The inner {@link KeyDataMap} is synchronized.
+ * The inner {@link BlockDataMap} is synchronized.
-   * Map: localId -> KeyData.
+   * Map: localId {@literal ->} BlockData.
-  static class KeyDataMap {
-    private final ConcurrentMap<Long, KeyData> blocks =
+  static class BlockDataMap {
+    private final ConcurrentMap<Long, BlockData> blocks =
-    KeyData get(long localId) {
+    BlockData get(long localId) {
-    synchronized KeyData computeIfAbsent(
-        long localId, Function<Long, KeyData> f) {
+    synchronized BlockData computeIfAbsent(
+        long localId, Function<Long, BlockData> f) {
-    synchronized List<KeyData> getAll() {
+    synchronized List<BlockData> getAll() {
-  private final ConcurrentMap<Long, KeyDataMap> containers =
+  private final ConcurrentMap<Long, BlockDataMap> containers =
-    containers.computeIfAbsent(blockID.getContainerID(), id -> new KeyDataMap())
-        .computeIfAbsent(blockID.getLocalID(), id -> new KeyData(blockID))
-        .addChunk(info);
+    containers.computeIfAbsent(blockID.getContainerID(),
+        id -> new BlockDataMap()).computeIfAbsent(blockID.getLocalID(),
+          id -> new BlockData(blockID)).addChunk(info);
-   * Returns the list of open to the openContainerBlockMap.
+   * Returns the list of open blocks to the openContainerBlockMap.
-   * @return List of open Keys(blocks)
+   * @return List of open blocks
-  public List<KeyData> getOpenKeys(long containerId) {
+  public List<BlockData> getOpenBlocks(long containerId) {
-        .map(KeyDataMap::getAll)
+        .map(BlockDataMap::getAll)
-   * @param blockID
+   * @param blockID - block ID
-  public void removeFromKeyMap(BlockID blockID) {
+  public void removeFromBlockMap(BlockID blockID) {
-   * @param blockID
+   * @param blockID  - Block ID.
-    KeyDataMap keyDataMap = containers.get(blockID.getContainerID());
+    BlockDataMap keyDataMap = containers.get(blockID.getContainerID());
-  KeyDataMap getKeyDataMap(long containerId) {
+  BlockDataMap getBlockDataMap(long containerId) {

UPD40 UPD42 UPD74 UPD74 UPD42 UPD42 UPD43 UPD42 UPD66 INS65 INS66 INS65 INS66 UPD74 UPD43 UPD43 UPD74 UPD43 UPD43 UPD42 INS66 INS66 UPD42 UPD42 UPD66 INS65 INS66 UPD43 UPD42 UPD42 UPD74 UPD43 UPD42 UPD66 UPD66 UPD42 INS66 INS66 UPD43 INS66 UPD42 UPD43 UPD42 UPD42 UPD42 MOV59 UPD42 MOV59 UPD43 UPD43 UPD42 UPD42