HDFS-9040. Erasure coding: coordinate data streamers in DFSStripedOutputStream. Contributed by Jing Zhao and Walter Su.

+import org.apache.hadoop.hdfs.server.namenode.NotReplicatedYetException;
-      DataChecksum checksum, String[] favoredNodes) throws IOException {
+      DataChecksum checksum, String[] favoredNodes, boolean createStreamer)
+      throws IOException {
-    streamer = new DataStreamer(stat, null, dfsClient, src, progress, checksum,
-        cachingStrategy, byteArrayManager, favoredNodes);
+    if (createStreamer) {
+      streamer = new DataStreamer(stat, null, dfsClient, src, progress,
+          checksum, cachingStrategy, byteArrayManager, favoredNodes);
+    }
-            flag, progress, checksum, favoredNodes);
+            flag, progress, checksum, favoredNodes, true);
-  protected void endBlock() throws IOException {
+  void endBlock() throws IOException {
+
+  static LocatedBlock addBlock(DatanodeInfo[] excludedNodes, DFSClient dfsClient,
+      String src, ExtendedBlock prevBlock, long fileId, String[] favoredNodes)
+      throws IOException {
+    final DfsClientConf conf = dfsClient.getConf();
+    int retries = conf.getNumBlockWriteLocateFollowingRetry();
+    long sleeptime = conf.getBlockWriteLocateFollowingInitialDelayMs();
+    long localstart = Time.monotonicNow();
+    while (true) {
+      try {
+        return dfsClient.namenode.addBlock(src, dfsClient.clientName, prevBlock,
+            excludedNodes, fileId, favoredNodes);
+      } catch (RemoteException e) {
+        IOException ue = e.unwrapRemoteException(FileNotFoundException.class,
+            AccessControlException.class,
+            NSQuotaExceededException.class,
+            DSQuotaExceededException.class,
+            QuotaByStorageTypeExceededException.class,
+            UnresolvedPathException.class);
+        if (ue != e) {
+          throw ue; // no need to retry these exceptions
+        }
+        if (NotReplicatedYetException.class.getName().equals(e.getClassName())) {
+          if (retries == 0) {
+            throw e;
+          } else {
+            --retries;
+            LOG.info("Exception while adding a block", e);
+            long elapsed = Time.monotonicNow() - localstart;
+            if (elapsed > 5000) {
+              LOG.info("Waiting for replication for " + (elapsed / 1000)
+                  + " seconds");
+            }
+            try {
+              LOG.warn("NotReplicatedYetException sleeping " + src
+                  + " retries left " + retries);
+              Thread.sleep(sleeptime);
+              sleeptime *= 2;
+            } catch (InterruptedException ie) {
+              LOG.warn("Caught exception", ie);
+            }
+          }
+        } else {
+          throw e;
+        }
+      }
+    }
+  }

INS26 INS40 INS31 INS44 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS39 INS42 INS25 INS42 INS5 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS5 INS42 INS42 INS60 INS60 INS60 INS60 INS61 INS42 INS8 INS43 INS85 INS42 INS42 INS42 INS43 INS85 INS83 INS43 INS59 INS39 INS59 INS39 INS59 INS39 INS59 INS9 INS8 MOV21 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS54 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS8 INS12 INS41 INS44 INS8 INS32 INS43 INS42 INS60 INS25 INS25 INS40 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS32 INS8 INS8 INS9 INS42 INS42 INS32 INS42 INS42 INS53 INS32 INS42 INS32 INS25 INS53 INS42 INS42 INS57 INS57 INS57 INS57 INS57 INS57 INS42 INS57 INS42 INS42 INS42 INS27 INS8 INS8 INS42 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS42 INS34 INS53 INS21 INS21 INS60 INS25 INS54 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS38 INS32 INS39 INS59 INS27 INS8 INS8 INS12 INS42 INS42 INS42 INS45 INS42 INS42 INS27 INS42 INS34 INS21 INS21 INS21 INS21 INS44 INS8 INS32 INS42 INS32 INS32 INS32 INS7 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS34 INS42 INS32 INS45 INS36 INS45 INS45 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS27 INS42 INS34 DEL83