YARN-9801. SchedConfCli does not work wiwith https mode. Contributed by Prabhu Joseph

+import com.sun.jersey.client.urlconnection.HttpURLConnectionFactory;
+import com.sun.jersey.client.urlconnection.URLConnectionClientHandler;
+import org.apache.hadoop.security.authentication.client.AuthenticatedURL;
+import org.apache.hadoop.security.ssl.SSLFactory;
+import java.io.IOException;
+import java.net.HttpURLConnection;
+import java.net.URL;
-    Client webServiceClient = Client.create();
+    Configuration conf = getConf();
+    SSLFactory clientSslFactory = null;
+    if (YarnConfiguration.useHttps(conf)) {
+      clientSslFactory = new SSLFactory(SSLFactory.Mode.CLIENT, conf);
+    }
+    Client webServiceClient = createWebServiceClient(clientSslFactory);
-      webServiceClient.destroy();
+      if (webServiceClient != null) {
+        webServiceClient.destroy();
+      }
+      if (clientSslFactory != null) {
+        clientSslFactory.destroy();
+      }
-    Client webServiceClient = Client.create();
+    Configuration conf = getConf();
+    SSLFactory clientSslFactory = null;
+    if (YarnConfiguration.useHttps(conf)) {
+      clientSslFactory = new SSLFactory(SSLFactory.Mode.CLIENT, conf);
+    }
+    Client webServiceClient = createWebServiceClient(clientSslFactory);
-      webServiceClient.destroy();
+      if (webServiceClient != null) {
+        webServiceClient.destroy();
+      }
+      if (clientSslFactory != null) {
+        clientSslFactory.destroy();
+      }
+  private Client createWebServiceClient(SSLFactory clientSslFactory) {
+    Client webServiceClient = new Client(new URLConnectionClientHandler(
+        new HttpURLConnectionFactory() {
+        @Override
+        public HttpURLConnection getHttpURLConnection(URL url)
+            throws IOException {
+          AuthenticatedURL.Token token = new AuthenticatedURL.Token();
+          AuthenticatedURL aUrl;
+          HttpURLConnection conn = null;
+          try {
+            if (clientSslFactory != null) {
+              clientSslFactory.init();
+              aUrl = new AuthenticatedURL(null, clientSslFactory);
+            } else {
+              aUrl = new AuthenticatedURL();
+            }
+            conn = aUrl.openConnection(url, token);
+          } catch (Exception e) {
+            throw new IOException(e);
+          }
+          return conn;
+        }
+      }));
+    webServiceClient.setChunkedEncodingSize(null);
+    return webServiceClient;
+  }
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS83 INS43 INS42 INS44 INS8 INS60 INS60 INS25 INS60 INS60 INS25 INS42 INS43 INS42 INS60 INS21 INS41 INS43 INS59 INS43 INS59 INS32 INS8 INS43 INS59 INS43 INS59 INS32 INS8 INS42 INS43 INS59 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS33 INS42 INS42 INS42 INS21 INS25 INS25 INS42 INS42 INS32 INS42 INS42 INS33 INS42 INS42 INS42 INS21 INS25 INS25 INS42 INS42 INS14 INS42 INS42 INS33 INS42 INS7 UPD42 UPD42 INS27 INS8 INS27 INS8 INS42 INS7 UPD42 UPD42 INS27 INS8 INS27 INS8 INS43 INS14 INS42 INS14 INS42 INS33 MOV21 INS42 INS33 INS21 INS42 INS14 INS42 INS33 MOV21 INS42 INS33 INS21 INS42 INS43 INS14 INS43 INS40 INS42 INS32 INS43 INS40 INS42 INS32 INS42 INS43 INS1 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS31 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS42 INS42 INS43 INS42 INS42 INS60 INS60 INS60 INS54 INS41 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS8 INS12 INS42 INS40 INS42 INS14 INS42 INS42 INS42 INS42 INS33 INS25 INS21 INS44 INS8 INS43 INS27 INS8 INS8 INS7 INS43 INS42 INS53 INS40 INS42 INS33 INS21 INS21 INS21 INS42 INS32 INS42 INS14 INS32 INS7 INS7 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS14 INS42 INS14 INS42 INS43 INS33 INS42 INS43 INS42 INS42