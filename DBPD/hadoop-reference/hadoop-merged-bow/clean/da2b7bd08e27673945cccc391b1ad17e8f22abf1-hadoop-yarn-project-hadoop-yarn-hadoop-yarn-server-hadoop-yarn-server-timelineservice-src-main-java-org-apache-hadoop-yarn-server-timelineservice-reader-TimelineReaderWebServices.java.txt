YARN-4203. Add request/response logging & timing for each REST endpoint call (Varun Saxena via vrushali)

+import org.apache.hadoop.util.Time;
+  private static final String QUERY_STRING_SEP = "?";
+  private static String getUserName(UserGroupInformation callerUGI) {
+    return ((callerUGI != null) ? callerUGI.getUserName().trim() : "");
+  }
+
-  private static void handleException(Exception e) throws BadRequestException,
+  private static void handleException(Exception e, String url, long startTime,
+      String invalidNumMsg) throws BadRequestException,
-    if (e instanceof IllegalArgumentException) {
+    long endTime = Time.monotonicNow();
+    LOG.info("Processed URL " + url + " but encountered exception (Took " +
+        (endTime - startTime) + " ms.)");
+    if (e instanceof NumberFormatException) {
+      throw new BadRequestException(invalidNumMsg + " is not a numeric value.");
+    } else if (e instanceof IllegalArgumentException) {
+    String url = req.getRequestURI() +
+        (null == req.getQueryString() ? "" :
+            QUERY_STRING_SEP + req.getQueryString());
+    UserGroupInformation callerUGI = getUser(req);
+    LOG.info("Received URL " + url + " from user " + getUserName(callerUGI));
+    long startTime = Time.monotonicNow();
-    UserGroupInformation callerUGI = getUser(req);
-    } catch (NumberFormatException e) {
-      throw new BadRequestException(
-          "createdTime or modifiedTime start/end or limit or flowId is not" +
-          " a numeric value.");
-      handleException(e);
+      handleException(e, url, startTime,
+          "createdTime or modifiedTime start/end or limit or flowId");
+    long endTime = Time.monotonicNow();
+    LOG.info("Processed URL " + url +
+        " (Took " + (endTime - startTime) + " ms.)");
+    String url = req.getRequestURI() +
+        (null == req.getQueryString() ? "" :
+            QUERY_STRING_SEP + req.getQueryString());
+    UserGroupInformation callerUGI = getUser(req);
+    LOG.info("Received URL " + url + " from user " + getUserName(callerUGI));
+    long startTime = Time.monotonicNow();
-    UserGroupInformation callerUGI = getUser(req);
-    } catch (NumberFormatException e) {
-      throw new BadRequestException("flowrunid is not a numeric value.");
-      handleException(e);
+      handleException(e, url, startTime, "flowrunid");
+    long endTime = Time.monotonicNow();
+      LOG.info("Processed URL " + url + " but entity not found" + " (Took " +
+          (endTime - startTime) + " ms.)");
+    LOG.info("Processed URL " + url +
+        " (Took " + (endTime - startTime) + " ms.)");
+    String url = req.getRequestURI() +
+        (null == req.getQueryString() ? "" :
+            QUERY_STRING_SEP + req.getQueryString());
+    UserGroupInformation callerUGI = getUser(req);
+    LOG.info("Received URL " + url + " from user " + getUserName(callerUGI));
+    long startTime = Time.monotonicNow();
-    UserGroupInformation callerUGI = getUser(req);
-    } catch (NumberFormatException e) {
-      throw new BadRequestException("flowRunId is not a numeric value.");
-      handleException(e);
+      handleException(e, url, startTime, "flowrunid");
+    long endTime = Time.monotonicNow();
+      LOG.info("Processed URL " + url + " but flowrun not found (Took " +
+          (endTime - startTime) + " ms.)");
+    LOG.info("Processed URL " + url +
+        " (Took " + (endTime - startTime) + " ms.)");
+    String url = req.getRequestURI() +
+        (null == req.getQueryString() ? "" :
+            QUERY_STRING_SEP + req.getQueryString());
+    UserGroupInformation callerUGI = getUser(req);
+    LOG.info("Received URL " + url + " from user " + getUserName(callerUGI));
+    long startTime = Time.monotonicNow();
-    } catch (NumberFormatException e) {
-      throw new BadRequestException("limit is not a numeric value.");
-      handleException(e);
+      handleException(e, url, startTime, "limit");
+    long endTime = Time.monotonicNow();
+    LOG.info("Processed URL " + url +
+        " (Took " + (endTime - startTime) + " ms.)");

INS26 INS40 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS42 INS44 INS8 INS44 INS44 INS44 MOV60 MOV60 MOV60 INS42 INS42 INS45 INS42 INS43 INS42 INS41 INS43 INS42 INS39 INS42 INS43 INS42 INS60 INS21 INS25 INS60 INS21 INS60 INS60 INS21 INS60 INS21 INS60 INS60 INS21 INS60 INS21 INS60 INS60 INS21 INS60 INS60 INS21 INS60 INS60 INS21 INS42 INS36 INS42 INS42 INS39 INS59 INS32 INS62 INS8 MOV25 INS43 INS59 INS32 INS39 INS59 INS39 INS59 INS32 INS43 INS59 INS32 INS39 INS59 INS12 INS39 INS59 INS32 INS43 INS59 INS32 INS39 INS59 INS39 INS59 INS32 INS43 INS59 INS43 INS59 INS32 INS39 INS59 INS39 INS59 INS32 INS16 INS42 INS32 INS42 INS42 INS27 INS42 MOV43 INS53 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS32 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS32 MOV44 MOV8 INS42 INS32 INS21 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS32 MOV44 INS42 INS32 INS21 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS32 MOV44 INS42 INS32 INS42 INS42 INS27 INS36 INS32 INS45 INS42 INS42 INS45 INS42 INS45 INS36 INS45 INS14 INS32 INS36 INS45 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS36 INS45 INS32 INS36 INS45 INS42 INS45 INS32 INS42 INS42 UPD43 INS42 INS42 INS32 INS45 INS42 INS45 INS36 INS45 INS32 INS36 INS45 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS32 INS45 INS42 INS45 INS36 INS45 INS32 INS36 INS42 INS42 INS45 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS36 INS45 INS27 INS32 INS42 INS27 MOV43 INS27 INS42 INS42 INS16 INS42 INS42 INS27 INS42 INS42 INS16 INS42 INS42 UPD42 INS42 INS42 INS27 INS27 INS42 INS42 INS16 INS42 INS42 MOV42 INS42 INS42 INS27 INS27 INS42 INS42 INS16 INS42 INS42 INS27 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS45 INS27 INS45 INS27 INS42 INS42 INS45 INS42 INS42 INS27 INS45 INS27 INS42 INS42 INS45 INS45 INS42 INS45 INS45 INS36 INS45 INS42 INS42 INS27 INS45 INS27 INS42 INS42 INS45 INS45 INS42 INS45 INS36 INS45 INS42 INS42 INS27 INS45 INS27 INS42 INS42 INS45 INS42 INS42 INS33 INS32 INS42 INS32 INS33 INS32 INS42 INS32 INS27 INS33 INS32 INS42 INS32 INS27 INS33 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL44 DEL45 DEL45 DEL27 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL12 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL12