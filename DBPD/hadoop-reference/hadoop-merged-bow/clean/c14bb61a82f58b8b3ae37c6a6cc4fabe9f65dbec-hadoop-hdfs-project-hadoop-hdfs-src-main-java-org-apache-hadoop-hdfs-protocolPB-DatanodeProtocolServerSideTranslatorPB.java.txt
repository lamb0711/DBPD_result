Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1242635 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.DatanodeCommandProto;
+import org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.StorageBlockReportProto;
+import org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.StorageReceivedDeletedBlocksProto;
+import org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.StorageReportProto;
+import org.apache.hadoop.hdfs.server.protocol.DatanodeStorage;
+import org.apache.hadoop.hdfs.server.protocol.StorageBlockReport;
+import org.apache.hadoop.hdfs.server.protocol.StorageReceivedDeletedBlocks;
+import org.apache.hadoop.hdfs.server.protocol.StorageReport;
+    DatanodeStorage[] storages = new DatanodeStorage[request.getStoragesCount()];
+    for (int i = 0; i < request.getStoragesCount(); i++) {
+      storages[i] = PBHelper.convert(request.getStorages(i));
+    }
-      registrationResp = impl.registerDatanode(registration);
+      registrationResp = impl.registerDatanode(registration, storages);
+      List<StorageReportProto> list = request.getReportsList();
+      StorageReport[] report = new StorageReport[list.size()];
+      int i = 0;
+      for (StorageReportProto p : list) {
+        report[i++] = new StorageReport(p.getStorageID(), p.getFailed(),
+            p.getCapacity(), p.getDfsUsed(), p.getRemaining(),
+            p.getBlockPoolUsed());
+      }
-          request.getCapacity(), request.getDfsUsed(), request.getRemaining(),
-          request.getBlockPoolUsed(), request.getXmitsInProgress(),
-          request.getXceiverCount(), request.getFailedVolumes());
+          report, request.getXmitsInProgress(), request.getXceiverCount(),
+          request.getFailedVolumes());
-    List<Long> blockIds = request.getBlocksList();
-    long[] blocks = new long[blockIds.size()];
-    for (int i = 0; i < blockIds.size(); i++) {
-      blocks[i] = blockIds.get(i);
+    StorageBlockReport[] report = 
+        new StorageBlockReport[request.getReportsCount()];
+    
+    int index = 0;
+    for (StorageBlockReportProto s : request.getReportsList()) {
+      List<Long> blockIds = s.getBlocksList();
+      long[] blocks = new long[blockIds.size()];
+      for (int i = 0; i < blockIds.size(); i++) {
+        blocks[i] = blockIds.get(i);
+      }
+      report[index++] = new StorageBlockReport(s.getStorageID(), blocks);
-          request.getBlockPoolId(), blocks);
+          request.getBlockPoolId(), report);
-    List<ReceivedDeletedBlockInfoProto> rdbip = request.getBlocksList();
-    ReceivedDeletedBlockInfo[] info = 
-        new ReceivedDeletedBlockInfo[rdbip.size()];
-    for (int i = 0; i < rdbip.size(); i++) {
-      info[i] = PBHelper.convert(rdbip.get(i));
+    List<StorageReceivedDeletedBlocksProto> sBlocks = request.getBlocksList();
+    StorageReceivedDeletedBlocks[] info = 
+        new StorageReceivedDeletedBlocks[sBlocks.size()];
+    for (int i = 0; i < sBlocks.size(); i++) {
+      StorageReceivedDeletedBlocksProto sBlock = sBlocks.get(i);
+      List<ReceivedDeletedBlockInfoProto> list = sBlock.getBlocksList();
+      ReceivedDeletedBlockInfo[] rdBlocks = 
+          new ReceivedDeletedBlockInfo[list.size()];
+      for (int j = 0; j < list.size(); j++) {
+        rdBlocks[j] = PBHelper.convert(list.get(j));
+      }
+      info[i] = new StorageReceivedDeletedBlocks(sBlock.getStorageID(), rdBlocks);

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 UPD40 INS40 INS40 INS40 INS40 INS60 INS24 INS60 INS60 INS70 INS60 INS60 INS5 INS59 INS58 INS27 INS37 INS8 INS8 INS5 INS59 INS39 INS59 INS44 INS32 INS8 INS74 MOV59 INS5 INS59 INS8 INS43 INS85 INS42 INS3 INS39 INS59 INS42 INS32 INS42 INS21 INS60 INS60 INS60 INS70 MOV21 INS43 INS85 INS42 INS3 INS42 INS34 INS43 INS42 INS42 INS42 MOV60 MOV60 MOV24 INS21 INS43 INS43 UPD42 INS43 INS85 INS42 INS3 INS60 MOV60 MOV60 INS24 INS21 INS42 INS5 INS32 INS42 INS34 INS42 INS42 INS7 INS74 INS59 INS5 INS59 INS39 INS59 INS44 INS42 INS8 INS42 INS5 INS32 INS42 INS7 INS42 INS42 INS42 INS5 INS32 UPD42 INS43 INS59 INS59 MOV5 INS58 INS27 INS37 MOV8 INS7 INS43 INS85 INS42 INS42 INS2 INS32 INS43 INS43 INS42 INS32 INS43 INS85 INS42 INS3 INS42 INS34 INS43 INS42 INS21 INS43 INS85 INS42 INS42 INS2 INS14 INS43 INS85 INS42 INS42 INS42 INS42 INS32 INS42 INS32 UPD42 INS39 INS59 INS42 INS32 INS42 MOV2 INS14 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS5 INS32 INS42 INS7 UPD42 MOV42 INS42 UPD42 INS42 INS37 INS43 INS32 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 MOV5 INS42 INS34 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS43 INS85 INS42 INS42 INS2 INS14 INS42 INS42 INS42 INS42 UPD42 INS2 INS42 INS42 INS42 INS42 INS42 INS37 INS43 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL8