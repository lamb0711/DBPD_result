HADOOP-7853. multiple javax security configurations cause conflicts. (daryn via tucu)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208751 13f79535-47bb-0310-9956-ffa450edef68

+      if (LOG.isDebugEnabled()) {
+        LOG.debug("hadoop login commit");
+      }
+        if (LOG.isDebugEnabled()) {
+          LOG.debug("using existing subject:"+subject.getPrincipals());
+        }
+        if (LOG.isDebugEnabled()) {
+          LOG.debug("using kerberos user:"+user);
+        }
+        if (LOG.isDebugEnabled()) {
+          LOG.debug("using local user:"+user);
+        }
+      if (LOG.isDebugEnabled()) {
+        LOG.debug("hadoop login");
+      }
+      if (LOG.isDebugEnabled()) {
+        LOG.debug("hadoop logout");
+      }
-    // Set the configuration for JAAS to be the Hadoop configuration. 
-    // This is done here rather than a static initializer to avoid a
-    // circular dependence.
-    javax.security.auth.login.Configuration existingConfig = null;
-    try {
-      existingConfig =
-        javax.security.auth.login.Configuration.getConfiguration();
-    } catch (SecurityException se) {
-      // If no security configuration is on the classpath, then
-      // we catch this exception, and we don't need to delegate
-      // to anyone
-    }
-
-    if (existingConfig instanceof HadoopConfiguration) {
-      LOG.info("JAAS Configuration already set up for Hadoop, not re-installing.");
-    } else {
-      javax.security.auth.login.Configuration.setConfiguration(
-        new HadoopConfiguration(existingConfig));
-    }
-
-    private final javax.security.auth.login.Configuration parent;
-
-    HadoopConfiguration(javax.security.auth.login.Configuration parent) {
-      this.parent = parent;
-    }
-
-      } else if (parent != null) {
-        return parent.getAppConfigurationEntry(appName);
+  private static LoginContext
+  newLoginContext(String appName, Subject subject) throws LoginException {
+    return new LoginContext(appName, subject, null, new HadoopConfiguration());
+  }
+  
-          login = new LoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME,
+          login = newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME,
-          login = new LoginContext(HadoopConfiguration.SIMPLE_CONFIG_NAME, 
+          login = newLoginContext(HadoopConfiguration.SIMPLE_CONFIG_NAME, 
+      if (LOG.isDebugEnabled()) {
+        LOG.debug("UGI loginUser:"+loginUser);
+      }
-        new LoginContext(HadoopConfiguration.KEYTAB_KERBEROS_CONFIG_NAME, subject);
+        newLoginContext(HadoopConfiguration.KEYTAB_KERBEROS_CONFIG_NAME, subject);
-        login = new LoginContext(
+        login = newLoginContext(
-        new LoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, 
+        newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, 
-        new LoginContext(HadoopConfiguration.KEYTAB_KERBEROS_CONFIG_NAME, subject); 
+        newLoginContext(HadoopConfiguration.KEYTAB_KERBEROS_CONFIG_NAME, subject); 
+    StringBuilder sb = new StringBuilder(getUserName());
+    sb.append(" (auth:"+getAuthenticationMethod()+")");
-      return getUserName() + " via " +  getRealUser().toString();
-    } else {
-      return getUserName();
+      sb.append(" via ").append(getRealUser().toString());
+    return sb.toString();
+    logPrivilegedAction(subject, action);
+      logPrivilegedAction(subject, action);
+      LOG.error("PriviledgedActionException as:"+this+" cause:"+cause);
+  private void logPrivilegedAction(Subject subject, Object action) {
+    if (LOG.isDebugEnabled()) {
+      // would be nice if action included a descriptive toString()
+      String where = new Throwable().getStackTrace()[2].toString();
+      LOG.debug("PrivilegedAction as:"+this+" from:"+where);
+    }
+  }
+

INS31 INS31 INS83 INS83 MOV43 INS42 INS44 INS44 INS43 INS8 INS8 INS83 INS39 INS42 INS44 INS44 INS8 MOV78 MOV43 INS8 MOV78 MOV43 INS8 INS43 INS42 INS43 INS42 INS42 INS41 INS60 INS21 INS41 INS21 MOV41 INS43 INS42 INS43 INS42 INS25 INS25 INS25 MOV41 INS25 MOV41 INS42 INS42 INS14 INS43 INS59 INS32 INS32 INS32 MOV8 INS42 INS42 INS32 INS8 INS32 INS8 INS8 INS32 INS8 INS32 INS8 MOV43 INS42 INS42 INS33 MOV14 INS25 INS42 INS42 INS14 INS42 INS42 INS27 INS21 INS42 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS60 INS21 INS42 INS42 INS21 INS25 MOV41 INS25 INS25 INS42 INS42 INS21 INS42 INS42 INS21 INS32 INS8 MOV43 INS43 MOV32 INS45 INS32 INS45 INS32 INS32 INS21 INS43 INS59 INS32 INS32 INS32 MOV8 INS32 INS8 INS32 INS8 INS32 INS32 INS42 INS42 INS21 INS32 INS32 INS32 INS42 INS42 INS32 INS42 MOV32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS45 INS42 INS42 INS21 INS42 INS42 INS21 INS42 INS42 INS21 INS42 INS42 INS45 INS42 INS42 INS45 INS32 INS42 INS40 INS42 INS42 INS40 MOV32 INS42 INS40 INS42 INS42 INS42 INS45 INS42 INS42 INS27 INS2 INS42 INS45 INS52 INS45 INS42 INS32 INS32 INS32 INS42 INS42 INS27 INS32 INS45 INS52 INS45 INS42 INS32 INS34 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS45 INS42 INS42 INS40 MOV32 INS14 INS42 INS45 INS32 INS45 INS42 INS45 INS42 INS32 INS32 INS43 INS42 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 DEL8 DEL8 DEL40 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL40 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL40 DEL42 DEL32 DEL21 DEL8 DEL25 DEL83 DEL83 DEL40 DEL43 DEL42 DEL59 DEL23 DEL42 DEL40 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL42 DEL40 DEL42 DEL14 DEL40 DEL42 DEL14 DEL42 DEL43 DEL40 DEL42 DEL14 DEL42 DEL43 DEL40 DEL14 DEL42 DEL43 DEL40 DEL14 DEL42 DEL43 DEL40 DEL42 DEL14 DEL45 DEL27 DEL41 DEL42 DEL32 DEL41 DEL8 DEL8