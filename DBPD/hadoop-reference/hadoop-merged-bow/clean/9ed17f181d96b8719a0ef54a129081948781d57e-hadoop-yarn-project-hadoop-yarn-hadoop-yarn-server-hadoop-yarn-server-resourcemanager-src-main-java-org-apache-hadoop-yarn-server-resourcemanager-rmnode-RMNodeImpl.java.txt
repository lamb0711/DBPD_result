YARN-3223. Resource update during NM graceful decommission. Contributed by Brook Zhou.

+import org.apache.hadoop.yarn.util.resource.Resources;
+  /* Snapshot of total resources before receiving decommissioning command */
+  private volatile Resource originalTotalCapability;
+      .addTransition(NodeState.DECOMMISSIONING, NodeState.DECOMMISSIONING,
+          RMNodeEventType.RESOURCE_UPDATE,
+          new UpdateNodeResourceWhenRunningTransition())
-      // TODO (in YARN-3223) Keep NM's available resource to be 0
+      if (rmNode.originalTotalCapability == null){
+        rmNode.originalTotalCapability =
+            Resources.clone(rmNode.totalCapability);
+        LOG.info("Preserve original total capability: "
+            + rmNode.originalTotalCapability);
+      }
+      // Restore the original total capability
+      if (rmNode.originalTotalCapability != null) {
+        rmNode.totalCapability = rmNode.originalTotalCapability;
+        rmNode.originalTotalCapability = null;
+      }
-      // TODO handle NM resource resume in YARN-3223.
+      //update the scheduler with the restored original total capability
+      rmNode.context
+          .getDispatcher()
+          .getEventHandler()
+          .handle(
+              new NodeResourceUpdateSchedulerEvent(rmNode, ResourceOption
+                  .newInstance(rmNode.totalCapability, 0)));
+
+  public Resource getOriginalTotalCapability() {
+    return this.originalTotalCapability;
+  }

INS26 INS40 INS23 INS31 INS83 INS83 INS43 INS59 INS83 INS43 INS42 INS8 INS42 INS42 INS42 INS41 INS25 INS25 INS21 INS22 INS27 INS8 INS27 INS8 INS32 INS52 INS42 INS40 INS33 INS21 INS21 INS40 INS33 INS21 INS21 INS32 INS42 INS14 INS7 INS32 INS7 INS7 INS32 INS42 INS43 INS42 INS32 INS40 INS32 INS42 INS42 INS27 INS40 INS40 INS40 INS33 INS40 INS42 INS42 INS42 INS42 INS40 INS34 INS42 INS42 INS40 INS45 INS40 INS32 INS42 INS40 MOV32 MOV42 MOV40 INS40 INS40 INS14 INS43 INS42