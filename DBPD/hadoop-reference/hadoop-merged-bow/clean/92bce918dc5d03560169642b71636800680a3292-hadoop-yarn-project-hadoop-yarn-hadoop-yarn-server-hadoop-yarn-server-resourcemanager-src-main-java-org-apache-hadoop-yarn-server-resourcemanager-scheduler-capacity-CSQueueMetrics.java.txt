YARN-10012. Guaranteed and max capacity queue metrics for custom resources

+import java.util.Map;
+
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.CSQueueMetricsForCustomResources;
+import org.apache.hadoop.yarn.util.resource.ResourceUtils;
+  private static final String GUARANTEED_CAPACITY_METRIC_PREFIX =
+      "GuaranteedCapacity.";
+  private static final String GUARANTEED_CAPACITY_METRIC_DESC =
+      "GuaranteedCapacity of NAME";
+
+  private static final String MAX_CAPACITY_METRIC_PREFIX =
+      "MaxCapacity.";
+  private static final String MAX_CAPACITY_METRIC_DESC =
+      "MaxCapacity of NAME";
+
+  /**
+   * Register all custom resources metrics as part of initialization. As and
+   * when this metric object construction happens for any queue, all custom
+   * resource metrics value would be initialized with '0' like any other
+   * mandatory resources metrics
+   */
+  protected void registerCustomResources() {
+    Map<String, Long> customResources = initAndGetCustomResources();
+    registerCustomResources(customResources, GUARANTEED_CAPACITY_METRIC_PREFIX,
+        GUARANTEED_CAPACITY_METRIC_DESC);
+    registerCustomResources(customResources, MAX_CAPACITY_METRIC_PREFIX,
+        MAX_CAPACITY_METRIC_DESC);
+    super.registerCustomResources();
+  }
+
+      if (getQueueMetricsForCustomResources() != null) {
+        ((CSQueueMetricsForCustomResources) getQueueMetricsForCustomResources())
+            .setGuaranteedCapacity(res);
+        registerCustomResources(
+            ((CSQueueMetricsForCustomResources)
+                getQueueMetricsForCustomResources()).getGuaranteedCapacity(),
+            GUARANTEED_CAPACITY_METRIC_PREFIX, GUARANTEED_CAPACITY_METRIC_DESC);
+      }
+      if (getQueueMetricsForCustomResources() != null) {
+        ((CSQueueMetricsForCustomResources) getQueueMetricsForCustomResources())
+            .setMaxCapacity(res);
+        registerCustomResources(
+            ((CSQueueMetricsForCustomResources)
+                getQueueMetricsForCustomResources()).getMaxCapacity(),
+            MAX_CAPACITY_METRIC_PREFIX, MAX_CAPACITY_METRIC_DESC);
+      }
+    }
+  }
+
+  @Override
+  protected void createQueueMetricsForCustomResources() {
+    if (ResourceUtils.getNumberOfKnownResourceTypes() > 2) {
+      setQueueMetricsForCustomResources(new CSQueueMetricsForCustomResources());
+      registerCustomResources();

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS23 INS23 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS65 INS60 INS21 INS21 INS21 INS42 INS25 INS66 INS66 INS66 INS66 INS74 INS59 INS32 INS32 INS48 INS27 INS8 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS25 INS25 INS32 INS34 INS21 INS21 INS42 INS42 INS42 INS42 INS27 INS8 INS27 INS8 INS42 INS42 INS32 INS32 INS32 INS33 INS21 INS21 INS32 INS33 INS21 INS21 INS42 INS14 INS42 INS42 INS32 INS32 INS42 INS32 INS32 INS43 INS36 INS42 INS42 INS42 INS32 INS42 INS42 INS36 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS11 INS36 INS42 INS11 INS36 INS42 INS43 INS32 INS11 INS43 INS32 INS11 INS42 INS42 INS43 INS32 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42