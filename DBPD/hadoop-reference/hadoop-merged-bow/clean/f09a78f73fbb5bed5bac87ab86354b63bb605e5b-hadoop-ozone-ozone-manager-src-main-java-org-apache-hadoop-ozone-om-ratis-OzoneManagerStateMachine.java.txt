HDDS-1339. Implement ratis snapshots on OM (#651)



+  private long lastAppliedIndex = 0;
+  @Override
+  }
+  /*
+   * Apply a committed log entry to the state machine.
+   */
+  @Override
+  public CompletableFuture<Message> applyTransaction(TransactionContext trx) {
+    try {
+      OMRequest request = OMRatisHelper.convertByteStringToOMRequest(
+          trx.getStateMachineLogEntry().getLogData());
+      long trxLogIndex = trx.getLogEntry().getIndex();
+      CompletableFuture<Message> future = CompletableFuture
+          .supplyAsync(() -> runCommand(request, trxLogIndex));
+      return future;
+    } catch (IOException e) {
+      return completeExceptionally(e);
+    }
+  }
+
+  /**
+   * Query the state machine. The request must be read-only.
+   */
+  @Override
+  public CompletableFuture<Message> query(Message request) {
+    try {
+      OMRequest omRequest = OMRatisHelper.convertByteStringToOMRequest(
+          request.getContent());
+      return CompletableFuture.completedFuture(queryCommand(omRequest));
+    } catch (IOException e) {
+      return completeExceptionally(e);
+    }
+  }
+
+  /**
+   * Take OM Ratis snapshot. Write the snapshot index to file. Snapshot index
+   * is the log index corresponding to the last applied transaction on the OM
+   * State Machine.
+   *
+   * @return the last applied index on the state machine which has been
+   * stored in the snapshot file.
+   */
+  @Override
+  public long takeSnapshot() throws IOException {
+    LOG.info("Saving Ratis snapshot on the OM.");
+    if (ozoneManager != null) {
+      return ozoneManager.saveRatisSnapshot();
+    }
+    return 0;
+  }
+
+  /**
+   * Notifies the state machine that the raft peer is no longer leader.
+   */
+  @Override
+  public void notifyNotLeader(Collection<TransactionContext> pendingEntries)
+      throws IOException {
+    omRatisServer.updateServerRole();
-
-
-
-
-
-
-  /*
-   * Apply a committed log entry to the state machine.
-   */
-  @Override
-  public CompletableFuture<Message> applyTransaction(TransactionContext trx) {
-    try {
-      OMRequest request = OMRatisHelper.convertByteStringToOMRequest(
-          trx.getStateMachineLogEntry().getLogData());
-      CompletableFuture<Message> future = CompletableFuture
-          .supplyAsync(() -> runCommand(request));
-      return future;
-    } catch (IOException e) {
-      return completeExceptionally(e);
-    }
-  }
-
-   * Query the state machine. The request must be read-only.
-   */
-  @Override
-  public CompletableFuture<Message> query(Message request) {
-    try {
-      OMRequest omRequest = OMRatisHelper.convertByteStringToOMRequest(
-          request.getContent());
-      return CompletableFuture.completedFuture(runCommand(omRequest));
-    } catch (IOException e) {
-      return completeExceptionally(e);
-    }
-  }
-
-  /**
-   * Notifies the state machine that the raft peer is no longer leader.
-   */
-  @Override
-  public void notifyNotLeader(Collection<TransactionContext> pendingEntries)
-      throws IOException {
-    omRatisServer.updateServerRole();
-  }
-
-  /**
-   * Submits request to OM and returns the response Message.
+   * Submits write request to OM and returns the response Message.
-  private Message runCommand(OMRequest request) {
+  private Message runCommand(OMRequest request, long trxLogIndex) {
+    OMResponse response = handler.handle(request);
+    lastAppliedIndex = trxLogIndex;
+    return OMRatisHelper.convertResponseToMessage(response);
+  }
+
+  /**
+   * Submits read request to OM and returns the response Message.
+   * @param request OMRequest
+   * @return response from OM
+   * @throws ServiceException
+   */
+  private Message queryCommand(OMRequest request) {
+  public long getLastAppliedIndex() {
+    return lastAppliedIndex;
+  }
+

MOV31 MOV31 MOV31 INS23 INS31 INS31 INS31 INS83 INS39 INS59 INS78 INS29 INS78 INS83 INS39 INS42 INS43 INS8 MOV29 INS83 INS43 INS42 INS44 INS44 INS8 INS29 UPD42 INS83 INS39 INS42 INS8 INS42 INS34 INS42 INS65 INS65 INS42 INS42 INS21 INS25 INS41 INS42 INS43 INS42 INS39 INS42 INS60 INS21 INS41 INS65 INS65 INS65 INS65 INS41 INS66 INS66 INS66 INS66 INS66 INS32 INS27 INS8 INS34 UPD66 INS42 INS43 INS59 INS7 INS32 INS66 INS42 INS66 INS66 INS42 INS42 INS60 INS42 INS42 INS45 INS42 INS33 INS41 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS39 INS59 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 UPD42 INS42 INS42 INS42