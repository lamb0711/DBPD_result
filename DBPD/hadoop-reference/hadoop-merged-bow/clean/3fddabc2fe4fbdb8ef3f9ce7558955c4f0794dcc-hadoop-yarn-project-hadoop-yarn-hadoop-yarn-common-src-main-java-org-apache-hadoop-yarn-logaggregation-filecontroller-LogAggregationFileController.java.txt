YARN-7072. Add a new log aggregation file format controller. Contributed by Xuan Gong.

-import java.io.PrintStream;
-import java.nio.file.Files;
-import java.nio.file.Paths;
+import org.apache.commons.lang.StringUtils;
+  /**
+   * Umask for the log file.
+   */
+  protected static final FsPermission APP_LOG_FILE_UMASK = FsPermission
+      .createImmutable((short) (0640 ^ 0777));
+
+  // This is temporary solution. The configuration will be deleted once we have
+  // the FileSystem API to check whether append operation is supported or not.
+  public static final String LOG_AGGREGATION_FS_SUPPORT_APPEND
+      = YarnConfiguration.YARN_PREFIX+ "log-aggregation.fs-support-append";
+
-  protected PrintStream createPrintStream(String localDir, String nodeId,
-      String containerId) throws IOException {
-    PrintStream out = System.out;
-    if(localDir != null && !localDir.isEmpty()) {
-      Path nodePath = new Path(localDir, LogAggregationUtils
-          .getNodeString(nodeId));
-      Files.createDirectories(Paths.get(nodePath.toString()));
-      Path containerLogPath = new Path(nodePath, containerId);
-      out = new PrintStream(containerLogPath.toString(), "UTF-8");
-    }
-    return out;
-  }
-
+
+  /**
+   * Create the aggregated log suffix. The LogAggregationFileController
+   * should call this to get the suffix and append the suffix to the end
+   * of each log. This would keep the aggregated log format consistent.
+   *
+   * @param fileName the File Name
+   * @return the aggregated log suffix String
+   */
+  protected String aggregatedLogSuffix(String fileName) {
+    StringBuilder sb = new StringBuilder();
+    String endOfFile = "End of LogType:" + fileName;
+    sb.append("\n" + endOfFile + "\n");
+    sb.append(StringUtils.repeat("*", endOfFile.length() + 50)
+        + "\n\n");
+    return sb.toString();
+  }

MOV26 UPD40 INS23 INS23 INS31 INS29 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS29 INS83 MOV43 INS42 MOV44 INS8 INS65 UPD42 MOV42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS27 INS65 INS65 INS65 UPD42 INS60 INS60 INS21 MOV21 INS41 INS66 INS42 INS42 INS11 INS40 INS45 INS66 INS66 INS66 INS42 INS66 INS66 UPD43 MOV43 INS59 MOV43 INS59 INS32 INS32 INS39 INS36 UPD42 UPD42 MOV42 INS14 INS42 INS27 UPD42 MOV42 UPD42 MOV42 INS27 UPD42 UPD42 INS27 UPD42 MOV42 MOV42 INS27 UPD43 MOV43 INS45 INS42 INS45 INS42 INS45 INS32 INS45 INS34 INS34 UPD42 UPD42 MOV42 UPD42 MOV42 INS45 INS27 INS32 INS34 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL83 DEL43 DEL42 DEL42 DEL44 DEL42 DEL44 DEL42 DEL43 DEL43 DEL40 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL59 DEL60 DEL42 DEL42 DEL43 DEL32 DEL45 DEL14 DEL7 DEL21 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL32 DEL32