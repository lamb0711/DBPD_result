HDFS-9612. DistCp worker threads are not terminated after jobs are done. (Wei-Chiu Chuang via Yongjun Zhang)

-    executor.shutdown();
+    if (hasWork()) {
+      LOG.warn("Shutdown() is called but there are still unprocessed work!");
+    }
+    executor.shutdownNow();
+   *  @throws InterruptedException if interrupted before an element becomes
+   *  available.
+  /**
+   * Worker thread implementation.
+   *
+   */
+    /**
+     * Constructor.
+     * @param processor is used to process an item from input queue.
+     */
+    /**
+     * The worker continuously gets an item from input queue, process it and
+     * then put the processed result into output queue. It waits to get an item
+     * from input queue if there's none.
+     */
-        try {
-          WorkRequest<T> work = inputQueue.take();
-          WorkReport<R> result = processor.processItem(work);
+        WorkRequest<T> work;
-          boolean isDone = false;
-          while (!isDone) {
-            try {
-              outputQueue.put(result);
-              isDone = true;
-            } catch (InterruptedException ie) {
-              LOG.debug("Could not put report into outputQueue. Retrying...");
-            }
+        try {
+          work = inputQueue.take();
+        } catch (InterruptedException e) {
+          // It is assumed that if an interrupt occurs while taking a work
+          // out from input queue, the interrupt is likely triggered by
+          // ProducerConsumer.shutdown(). Therefore, exit the thread.
+          LOG.debug("Interrupted while waiting for requests from inputQueue.");
+          return;
+        }
+
+        boolean isDone = false;
+        while (!isDone) {
+          try {
+            // if the interrupt happens while the work is being processed,
+            // go back to process the same work again.
+            WorkReport<R> result = processor.processItem(work);
+            outputQueue.put(result);
+            isDone = true;
+          } catch (InterruptedException ie) {
+            LOG.debug("Worker thread was interrupted while processing an item,"
+                + " or putting into outputQueue. Retrying...");
-        } catch (InterruptedException ie) {
-          LOG.debug("Interrupted while waiting for request from inputQueue.");

INS29 INS25 INS65 INS65 INS29 INS29 MOV8 INS32 INS8 INS42 INS66 INS66 INS66 INS65 INS65 INS65 INS61 INS42 INS21 UPD42 INS66 INS42 INS66 INS66 INS66 INS66 INS9 MOV8 INS32 INS54 INS42 INS42 INS45 INS8 INS12 INS21 INS44 INS8 INS7 INS43 INS42 INS21 INS41 INS42 MOV32 INS42 INS32 MOV60 MOV44 INS42 INS42 INS45 MOV43 MOV42 INS27 INS45 INS45 DEL45 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL12 DEL54 DEL9 DEL61 DEL8