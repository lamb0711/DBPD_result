HDDS-1949. Missing or error-prone test cleanup.
Contributed by Doroszlai, Attila.

+import java.util.Collection;
+import java.util.Collections;
+      DefaultMetricsSystem.shutdown();
-    if (ozoneManager != null) {
-      LOG.info("Stopping the OzoneManager");
-      ozoneManager.stop();
-      ozoneManager.join();
-    }
-
-    if (!hddsDatanodes.isEmpty()) {
-      LOG.info("Shutting the HddsDatanodes");
-      hddsDatanodes.parallelStream()
-          .forEach(dn -> {
-            dn.stop();
-            dn.join();
-          });
-    }
-
-    if (scm != null) {
-      LOG.info("Stopping the StorageContainerManager");
-      scm.stop();
-      scm.join();
-    }
+    stopOM(ozoneManager);
+    stopDatanodes(hddsDatanodes);
+    stopSCM(scm);
+  private static void stopDatanodes(
+      Collection<HddsDatanodeService> hddsDatanodes) {
+    if (!hddsDatanodes.isEmpty()) {
+      LOG.info("Stopping the HddsDatanodes");
+      hddsDatanodes.parallelStream()
+          .forEach(MiniOzoneClusterImpl::stopDatanode);
+    }
+  }
+
+  private static void stopDatanode(HddsDatanodeService dn) {
+    if (dn != null) {
+      dn.stop();
+      dn.join();
+    }
+  }
+
+  private static void stopSCM(StorageContainerManager scm) {
+    if (scm != null) {
+      LOG.info("Stopping the StorageContainerManager");
+      scm.stop();
+      scm.join();
+    }
+  }
+
+  private static void stopOM(OzoneManager om) {
+    if (om != null) {
+      LOG.info("Stopping the OzoneManager");
+      om.stop();
+      om.join();
+    }
+  }
-      StorageContainerManager scm;
-      OzoneManager om;
+      StorageContainerManager scm = null;
+      OzoneManager om = null;
+      List<HddsDatanodeService> hddsDatanodes = Collections.emptyList();
-      } catch (AuthenticationException ex) {
+        om.start();
+
+        hddsDatanodes = createHddsDatanodes(scm);
+        MiniOzoneClusterImpl cluster = new MiniOzoneClusterImpl(conf, om, scm,
+            hddsDatanodes);
+        cluster.setCAClient(certClient);
+        if (startDataNodes) {
+          cluster.startHddsDatanodes();
+        }
+        return cluster;
+      } catch (Exception ex) {
+        stopOM(om);
+        if (startDataNodes) {
+          stopDatanodes(hddsDatanodes);
+        }
+        stopSCM(scm);
+        removeConfiguration();
+
+        if (ex instanceof IOException) {
+          throw (IOException) ex;
+        }
+        if (ex instanceof RuntimeException) {
+          throw (RuntimeException) ex;
+        }
-
-      om.start();
-      final List<HddsDatanodeService> hddsDatanodes = createHddsDatanodes(scm);
-      MiniOzoneClusterImpl cluster = new MiniOzoneClusterImpl(conf, om, scm,
-          hddsDatanodes);
-      cluster.setCAClient(certClient);
-      if (startDataNodes) {
-        cluster.startHddsDatanodes();
-      }
-      return cluster;
+    void removeConfiguration() {
+      FileUtils.deleteQuietly(new File(path));
+    }
+

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS31 INS31 MOV78 MOV83 MOV39 MOV42 INS8 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS39 INS42 INS44 MOV8 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS39 INS42 INS44 MOV8 INS31 MOV21 INS21 INS21 INS21 INS74 INS42 INS25 INS43 INS42 INS25 MOV43 INS42 MOV25 MOV43 INS42 INS39 INS42 INS8 INS32 INS32 INS32 INS43 INS43 MOV38 INS8 INS42 INS27 MOV8 INS54 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS21 INS42 INS33 UPD42 INS43 INS43 MOV8 INS12 INS32 INS32 INS32 INS32 INS42 INS33 INS42 INS33 INS21 INS21 MOV60 MOV21 INS25 MOV41 MOV44 INS8 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS45 MOV32 INS42 INS90 UPD42 UPD42 UPD42 UPD42 INS32 INS7 MOV42 INS8 UPD43 MOV21 INS25 INS21 INS21 INS25 MOV25 MOV53 INS43 INS42 INS42 INS42 INS42 MOV42 INS42 INS32 MOV21 UPD42 INS42 INS8 INS32 INS32 INS62 INS8 INS62 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS43 INS53 INS42 INS43 INS53 INS32 INS42 INS11 INS42 INS11 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS42 DEL31 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL59 DEL86 DEL32 DEL21 DEL25 DEL8 DEL12 DEL54 DEL83