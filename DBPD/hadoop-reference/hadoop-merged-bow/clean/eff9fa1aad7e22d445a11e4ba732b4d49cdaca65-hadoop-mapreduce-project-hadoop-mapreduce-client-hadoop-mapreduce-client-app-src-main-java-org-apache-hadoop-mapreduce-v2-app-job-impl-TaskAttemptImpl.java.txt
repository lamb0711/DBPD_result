MAPREDUCE-3921. MR AM should act on node health status changes. Contributed by Bikas Saha.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1349065 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.mapreduce.v2.app.job.event.TaskAttemptKillEvent;
+         TaskAttemptState.SUCCEEDED, TaskAttemptState.KILLED,
+         TaskAttemptEventType.TA_KILL,
+         new KilledAfterSuccessTransition())
+     .addTransition(
-         EnumSet.of(TaskAttemptEventType.TA_KILL,
-             TaskAttemptEventType.TA_FAILMSG,
+         EnumSet.of(TaskAttemptEventType.TA_FAILMSG,
+  @Override 
+  public NodeId getNodeId() {
+    readLock.lock();
+    try {
+      return containerNodeId;
+    } finally {
+      readLock.unlock();
+    }
+  }
+  
-      TaskAttemptImpl taskAttempt) {
+      TaskAttemptImpl taskAttempt, boolean taskAlreadyCompleted) {
-      jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_MAPS, slotMillisIncrement);
+      if(!taskAlreadyCompleted) {
+        // dont double count the elapsed time
+        jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_MAPS, slotMillisIncrement);
+      }
-      jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_REDUCES, slotMillisIncrement);
+      if(!taskAlreadyCompleted) {
+        // dont double count the elapsed time
+        jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_REDUCES, slotMillisIncrement);
+      }
-      TaskAttemptImpl taskAttempt) {
+      TaskAttemptImpl taskAttempt, boolean taskAlreadyCompleted) {
-      jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_MAPS, slotMillisIncrement);
+      if(!taskAlreadyCompleted) {
+        // dont double count the elapsed time
+        jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_MAPS, slotMillisIncrement);
+      }
-      jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_REDUCES, slotMillisIncrement);
+      if(!taskAlreadyCompleted) {
+        // dont double count the elapsed time
+        jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_REDUCES, slotMillisIncrement);
+      }
-            .handle(createJobCounterUpdateEventTAFailed(taskAttempt));
+            .handle(createJobCounterUpdateEventTAFailed(taskAttempt, false));
-          .handle(createJobCounterUpdateEventTAKilled(taskAttempt));
+          .handle(createJobCounterUpdateEventTAKilled(taskAttempt, false));
-            .handle(createJobCounterUpdateEventTAFailed(taskAttempt));
+            .handle(createJobCounterUpdateEventTAFailed(taskAttempt, false));
-            .handle(createJobCounterUpdateEventTAFailed(taskAttempt));
+            .handle(createJobCounterUpdateEventTAFailed(taskAttempt, true));
+  
+  private static class KilledAfterSuccessTransition implements
+      SingleArcTransition<TaskAttemptImpl, TaskAttemptEvent> {
+
+    @SuppressWarnings("unchecked")
+    @Override
+    public void transition(TaskAttemptImpl taskAttempt, 
+        TaskAttemptEvent event) {
+      TaskAttemptKillEvent msgEvent = (TaskAttemptKillEvent) event;
+      //add to diagnostic
+      taskAttempt.addDiagnosticInfo(msgEvent.getMessage());
+
+      // not setting a finish time since it was set on success
+      assert (taskAttempt.getFinishTime() != 0);
+
+      assert (taskAttempt.getLaunchTime() != 0);
+      taskAttempt.eventHandler
+          .handle(createJobCounterUpdateEventTAKilled(taskAttempt, true));
+      TaskAttemptUnsuccessfulCompletionEvent tauce = createTaskAttemptUnsuccessfulCompletionEvent(
+          taskAttempt, TaskAttemptState.KILLED);
+      taskAttempt.eventHandler.handle(new JobHistoryEvent(taskAttempt.attemptId
+          .getTaskId().getJobId(), tauce));
+      taskAttempt.eventHandler.handle(new TaskTAttemptEvent(
+          taskAttempt.attemptId, TaskEventType.T_ATTEMPT_KILLED));
+    }
+  }
-            .handle(createJobCounterUpdateEventTAKilled(taskAttempt));
+            .handle(createJobCounterUpdateEventTAKilled(taskAttempt, false));

INS26 INS40 INS31 INS55 INS78 INS83 INS43 INS42 INS8 INS44 INS44 UPD42 INS83 INS83 INS42 INS74 INS31 INS42 INS42 INS21 INS54 INS39 INS42 INS39 INS42 INS8 INS43 INS43 INS43 INS79 INS78 INS83 INS39 INS42 INS44 INS44 MOV8 INS32 INS8 INS8 INS8 MOV21 MOV21 INS25 MOV21 INS60 INS6 INS6 MOV21 MOV60 MOV21 INS42 INS42 INS42 INS42 INS45 INS42 INS43 INS42 INS43 INS42 INS21 INS21 INS42 INS42 INS41 INS21 INS25 MOV21 INS25 INS25 INS25 MOV27 INS8 MOV8 INS43 INS59 INS36 INS36 INS42 INS42 INS32 INS27 INS32 INS42 INS32 INS38 INS8 INS38 INS8 INS38 INS8 INS38 MOV8 INS32 INS34 INS21 MOV60 INS21 INS42 INS42 INS11 INS42 INS32 INS27 MOV27 INS42 INS42 INS32 INS34 INS60 INS40 INS42 INS14 INS32 INS42 INS40 INS40 INS42 INS42 INS42 MOV21 INS42 MOV21 INS42 MOV21 INS42 INS42 INS42 INS32 INS32 INS43 INS42 INS42 UPD42 MOV42 MOV32 MOV34 INS9 INS42 INS42 INS43 INS59 INS43 INS40 INS40 MOV32 MOV42 MOV40 MOV40 INS40 INS42 INS40 INS42 INS32 INS40 INS42 INS14 INS42 UPD42 INS42 INS42 INS32 INS42 UPD40 UPD40 INS32 INS9 INS42 INS42 INS9 INS43 INS32 INS42 UPD42 INS9 INS42 INS42 INS40 UPD40 MOV40 INS42 INS42 INS42 UPD40 MOV40 INS40 INS40 INS42 INS32 INS42 UPD40 UPD40 INS14 INS9 INS40 INS42 INS43 INS9 INS42 DEL42 DEL42 DEL42 DEL40 DEL40 DEL40 DEL32 DEL42 DEL8 DEL25