HADOOP-16005. NativeAzureFileSystem does not support setXAttr.

Contributed by Clemens Wolff.

+import org.apache.hadoop.fs.XAttrSetFlag;
+   * Set the value of an attribute for a path.
+   *
+   * @param path The path on which to set the attribute
+   * @param xAttrName The attribute to set
+   * @param value The byte value of the attribute to set (encoded in utf-8)
+   * @param flag The mode in which to set the attribute
+   * @throws IOException If there was an issue setting the attribute on Azure
+   */
+  @Override
+  public void setXAttr(Path path, String xAttrName, byte[] value, EnumSet<XAttrSetFlag> flag) throws IOException {
+    Path absolutePath = makeAbsolute(path);
+    performAuthCheck(absolutePath, WasbAuthorizationOperations.WRITE, "setXAttr", absolutePath);
+
+    String key = pathToKey(absolutePath);
+    FileMetadata metadata;
+    try {
+      metadata = store.retrieveMetadata(key);
+    } catch (IOException ex) {
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
+      if (innerException instanceof StorageException
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
+        throw new FileNotFoundException("File " + path + " doesn't exists.");
+      }
+      throw ex;
+    }
+
+    if (metadata == null) {
+      throw new FileNotFoundException("File doesn't exist: " + path);
+    }
+
+    boolean xAttrExists = store.retrieveAttribute(key, xAttrName) != null;
+    XAttrSetFlag.validate(xAttrName, xAttrExists, flag);
+    store.storeAttribute(key, xAttrName, value);
+  }
+
+  /**
+   * Get the value of an attribute for a path.
+   *
+   * @param path The path on which to get the attribute
+   * @param xAttrName The attribute to get
+   * @return The bytes of the attribute's value (encoded in utf-8)
+   *         or null if the attribute does not exist
+   * @throws IOException If there was an issue getting the attribute from Azure
+   */
+  @Override
+  public byte[] getXAttr(Path path, String xAttrName) throws IOException {
+    Path absolutePath = makeAbsolute(path);
+    performAuthCheck(absolutePath, WasbAuthorizationOperations.READ, "getXAttr", absolutePath);
+
+    String key = pathToKey(absolutePath);
+    FileMetadata metadata;
+    try {
+      metadata = store.retrieveMetadata(key);
+    } catch (IOException ex) {
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
+      if (innerException instanceof StorageException
+              && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
+        throw new FileNotFoundException("File " + path + " doesn't exists.");
+      }
+      throw ex;
+    }
+
+    if (metadata == null) {
+      throw new FileNotFoundException("File doesn't exist: " + path);
+    }
+
+    return store.retrieveAttribute(key, xAttrName);
+  }
+
+  /**

INS26 INS40 INS31 INS31 INS29 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS29 INS78 INS83 INS5 INS42 INS44 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS5 INS42 INS74 INS42 INS42 INS60 INS21 INS60 INS60 INS54 INS25 INS60 INS21 INS21 INS65 INS65 INS65 INS65 INS65 INS42 INS39 INS85 INS43 INS42 INS43 INS42 INS42 INS60 INS21 INS60 INS60 INS54 INS25 INS41 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS39 INS85 INS43 INS43 INS43 INS59 INS32 INS43 INS59 INS43 INS59 INS8 INS12 INS27 INS8 INS39 INS59 INS32 INS32 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS66 INS42 INS42 INS43 INS59 INS32 INS43 INS59 INS43 INS59 INS8 INS12 INS27 INS8 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS40 INS45 INS42 INS42 INS42 INS32 INS42 INS42 INS21 INS44 INS8 INS42 INS33 INS53 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS40 INS45 INS42 INS42 INS42 INS32 INS42 INS42 INS21 INS44 INS8 INS42 INS33 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS43 INS42 INS60 INS25 INS53 INS14 INS32 INS33 INS42 INS42 INS42 INS42 INS7 INS43 INS42 INS60 INS25 INS53 INS14 INS42 INS32 INS42 INS43 INS59 INS27 INS8 INS42 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS59 INS27 INS8 INS42 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS32 INS62 INS32 INS53 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS62 INS32 INS53 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS11 INS14 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS11 INS14 INS42 INS43 INS42 INS43 INS27 INS42 INS43 INS42 INS43 INS27 INS42 INS42 INS45 INS42 INS45 INS42 INS42 INS45 INS42 INS45