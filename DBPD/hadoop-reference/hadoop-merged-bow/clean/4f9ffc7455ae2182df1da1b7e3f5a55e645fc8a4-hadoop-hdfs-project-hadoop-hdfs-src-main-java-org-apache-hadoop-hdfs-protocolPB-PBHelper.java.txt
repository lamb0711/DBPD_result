HDFS-6739. Add getDatanodeStorageReport to ClientProtocol.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1614215 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.DatanodeStorageReportProto;
-import org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.DatanodeStorageProto;
-import org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.DatanodeStorageProto.StorageState;
-import org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos.StorageReportProto;
+import org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.DatanodeStorageProto;
+import org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.DatanodeStorageProto.StorageState;
+import org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.StorageReportProto;
+import org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport;
+  public static DatanodeStorageReportProto convertDatanodeStorageReport(
+      DatanodeStorageReport report) {
+    return DatanodeStorageReportProto.newBuilder()
+        .setDatanodeInfo(convert(report.getDatanodeInfo()))
+        .addAllStorageReports(convertStorageReports(report.getStorageReports()))
+        .build();
+  }
+
+  public static List<DatanodeStorageReportProto> convertDatanodeStorageReports(
+      DatanodeStorageReport[] reports) {
+    final List<DatanodeStorageReportProto> protos
+        = new ArrayList<DatanodeStorageReportProto>(reports.length);
+    for(int i = 0; i < reports.length; i++) {
+      protos.add(convertDatanodeStorageReport(reports[i]));
+    }
+    return protos;
+  }
+
+  public static DatanodeStorageReport convertDatanodeStorageReport(
+      DatanodeStorageReportProto proto) {
+    return new DatanodeStorageReport(
+        convert(proto.getDatanodeInfo()),
+        convertStorageReports(proto.getStorageReportsList()));
+  }
+
+  public static DatanodeStorageReport[] convertDatanodeStorageReports(
+      List<DatanodeStorageReportProto> protos) {
+    final DatanodeStorageReport[] reports
+        = new DatanodeStorageReport[protos.size()];
+    for(int i = 0; i < reports.length; i++) {
+      reports[i] = convertDatanodeStorageReport(protos.get(i));
+    }
+    return reports;
+  }
+
+  public static List<StorageReportProto> convertStorageReports(StorageReport[] storages) {
+    final List<StorageReportProto> protos = new ArrayList<StorageReportProto>(
+        storages.length);
+    for(int i = 0; i < storages.length; i++) {
+      protos.add(convert(storages[i]));
+    }
+    return protos;
+  }
+

MOV26 MOV26 MOV26 INS26 INS26 INS40 UPD40 UPD40 UPD40 INS40 INS31 INS31 INS31 INS31 INS31 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS83 INS74 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS83 INS5 INS42 INS44 INS8 INS83 INS83 INS74 INS42 INS44 INS8 INS42 INS43 INS42 INS41 INS43 INS43 INS5 INS42 INS60 INS24 INS41 INS42 INS43 INS42 INS41 INS43 INS85 INS74 INS42 INS60 INS24 INS41 INS43 INS43 INS5 INS42 INS60 INS24 INS41 INS42 INS32 INS42 INS42 INS43 INS85 INS83 INS74 INS59 INS58 INS27 INS37 INS8 INS42 INS42 INS14 INS42 INS43 INS43 INS83 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS42 INS42 INS43 INS85 INS83 INS74 INS59 INS58 INS27 INS37 INS8 INS42 INS32 INS42 INS42 INS43 INS43 INS42 INS14 INS39 INS59 INS42 INS40 INS42 INS21 INS43 INS32 INS32 INS42 INS42 INS43 INS85 INS42 INS3 INS39 INS59 INS42 INS40 INS42 INS21 INS42 INS43 INS43 INS42 INS14 INS39 INS59 INS42 INS40 INS42 INS21 INS32 INS42 INS32 INS42 INS42 INS74 INS40 INS42 INS34 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS5 INS32 INS42 INS34 INS7 INS42 INS42 INS74 INS40 INS42 INS34 INS32 INS32 INS42 INS32 INS42 INS32 INS43 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS85 INS42 INS42 INS2 INS32 INS43 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS2 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS2 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42