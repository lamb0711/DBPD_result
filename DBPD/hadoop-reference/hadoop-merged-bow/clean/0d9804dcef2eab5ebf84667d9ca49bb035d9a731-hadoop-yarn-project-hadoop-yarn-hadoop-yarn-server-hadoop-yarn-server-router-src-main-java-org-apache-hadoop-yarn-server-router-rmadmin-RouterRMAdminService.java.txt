YARN-8435. Fix NPE when the same client simultaneously contact for the first time Yarn Router. Contributed by Rang Jiaheng.

-  private RequestInterceptorChainWrapper getInterceptorChain()
+  @VisibleForTesting
+  protected RequestInterceptorChainWrapper getInterceptorChain()
-    if (!userPipelineMap.containsKey(user)) {
-      initializePipeline(user);
+    RequestInterceptorChainWrapper chain = userPipelineMap.get(user);
+    if (chain != null && chain.getRootInterceptor() != null) {
+      return chain;
-    return userPipelineMap.get(user);
+    return initializePipeline(user);
-  private void initializePipeline(String user) {
-    RequestInterceptorChainWrapper chainWrapper = null;
+  private RequestInterceptorChainWrapper initializePipeline(String user) {
-        return;
+        return userPipelineMap.get(user);
-      chainWrapper = new RequestInterceptorChainWrapper();
+      RequestInterceptorChainWrapper chainWrapper =
+          new RequestInterceptorChainWrapper();
+      try {
+        // We should init the pipeline instance after it is created and then
+        // add to the map, to ensure thread safe.
+        LOG.info("Initializing request processing pipeline for user: {}", user);
+
+        RMAdminRequestInterceptor interceptorChain =
+            this.createRequestInterceptorChain();
+        interceptorChain.init(user);
+        chainWrapper.init(interceptorChain);
+      } catch (Exception e) {
+        LOG.error("Init RMAdminRequestInterceptor error for user: " + user, e);
+        throw e;
+      }
+
-    }
-
-    // We register the pipeline instance in the map first and then initialize it
-    // later because chain initialization can be expensive and we would like to
-    // release the lock as soon as possible to prevent other applications from
-    // blocking when one application's chain is initializing
-    LOG.info("Initializing request processing pipeline for the user: {}", user);
-
-    try {
-      RMAdminRequestInterceptor interceptorChain =
-          this.createRequestInterceptorChain();
-      interceptorChain.init(user);
-      chainWrapper.init(interceptorChain);
-    } catch (Exception e) {
-      synchronized (this.userPipelineMap) {
-        this.userPipelineMap.remove(user);
-      }
-      throw e;
+      return chainWrapper;

INS78 UPD83 INS43 INS42 INS60 INS25 INS41 INS42 INS43 INS59 INS27 MOV8 MOV32 INS42 INS42 INS32 INS27 INS27 INS41 INS60 INS54 INS41 MOV42 UPD42 MOV42 MOV42 INS42 INS33 INS32 INS33 INS42 MOV43 INS59 INS8 INS12 INS42 INS42 INS42 MOV41 INS42 MOV14 INS21 MOV60 MOV21 MOV21 MOV44 INS8 INS32 MOV32 INS21 MOV53 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS27 INS42 INS45 INS42 DEL21 DEL32 DEL38 DEL25 DEL39 DEL42 DEL33 DEL59 DEL60 DEL41 DEL42 DEL7 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL21 DEL8 DEL51 DEL8 DEL12 DEL54