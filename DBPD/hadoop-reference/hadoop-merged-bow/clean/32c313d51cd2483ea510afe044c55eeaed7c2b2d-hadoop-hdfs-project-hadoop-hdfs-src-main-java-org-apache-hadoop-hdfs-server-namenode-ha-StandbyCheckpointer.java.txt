HDFS-2861. checkpointing should verify that the dfs.http.address has been configured to a non-loopback for peer NN. Contributed by Todd Lipcon.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1239886 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.namenode.NameNode;
-    String myAddrString = DFSUtil.getInfoServer(null, conf, true);
+    String myAddrString = getHttpAddress(conf);
-    activeNNAddress = DFSUtil.getInfoServer(null, confForActive, true);
-    
+    activeNNAddress = getHttpAddress(confForActive);
+  private String getHttpAddress(Configuration conf) {
+    String configuredAddr = DFSUtil.getInfoServer(null, conf, true);
+    
+    // Use the hostname from the RPC address as a default, in case
+    // the HTTP address is configured to 0.0.0.0.
+    String hostnameFromRpc = NameNode.getServiceAddress(
+        conf, true).getHostName();
+    try {
+      return DFSUtil.substituteForWildcardAddress(
+          configuredAddr, hostnameFromRpc);
+    } catch (IOException e) {
+      throw new IllegalArgumentException(e);
+    }
+  }
+  
-    return addr.getPort() != 0;
+    return addr.getPort() != 0 && !addr.getAddress().isAnyLocalAddress();
+
+  @VisibleForTesting
+  String getActiveNNAddress() {
+    return activeNNAddress;
+  }

INS26 INS40 INS31 INS31 INS83 INS43 INS42 INS44 INS8 INS78 INS43 INS42 INS8 INS60 INS42 INS43 INS42 MOV60 INS60 INS54 INS42 INS42 INS41 INS43 INS59 INS42 INS43 INS59 INS8 INS12 INS27 INS42 INS42 INS42 INS32 UPD42 INS42 INS42 INS32 INS41 INS44 INS8 MOV27 INS38 INS42 INS42 UPD42 INS32 INS42 INS32 INS43 INS42 INS53 INS32 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS42 INS14 INS32 INS42 INS43 INS42 INS42 INS42 INS42 DEL42 DEL33 DEL9