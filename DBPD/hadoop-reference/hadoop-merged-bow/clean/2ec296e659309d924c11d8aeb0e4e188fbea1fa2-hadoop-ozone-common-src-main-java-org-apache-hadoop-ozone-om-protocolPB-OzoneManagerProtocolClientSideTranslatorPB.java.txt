HDDS-991. Fix failures in TestSecureOzoneCluster. Contributed by Ajay Kumar.

-import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;
+import org.apache.hadoop.ozone.om.exceptions.OMException;
+import static org.apache.hadoop.ozone.om.exceptions.OMException.*;
+import static org.apache.hadoop.ozone.om.exceptions.OMException.ResultCodes.TOKEN_ERROR_OTHER;
+import static org.apache.hadoop.ozone.om.exceptions.OMException.ResultCodes.UNKNOWN;
+import static org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.Status.OK;
+import static org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.Status.ACCESS_DENIED;
+
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() == Status.ACCESS_DENIED) {
+    if (resp.getStatus() == ACCESS_DENIED) {
-    } else if (resp.getStatus() == Status.OK) {
+    } else if (resp.getStatus() == OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() == Status.OK) {
+    if (resp.getStatus() == OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() == Status.OK) {
+    if (resp.getStatus() == OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() == Status.OK) {
+    if (resp.getStatus() == OK) {
-    if(resp.getStatus() != Status.OK) {
+    if(resp.getStatus() != OK) {
-    if(resp.getStatus() != Status.OK) {
+    if(resp.getStatus() != OK) {
-    if(resp.getStatus() != Status.OK) {
+    if(resp.getStatus() != OK) {
-    if (resp.getStatus() == Status.OK) {
+    if (resp.getStatus() == OK) {
-    if(resp.getStatus() != Status.OK) {
+    if(resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (response.getStatus() != Status.OK) {
+    if (response.getStatus() != OK) {
-    if (response.getStatus() != Status.OK) {
+    if (response.getStatus() != OK) {
-    if (response.getStatus() != Status.OK) {
+    if (response.getStatus() != OK) {
-    if (resp.getStatus() == Status.OK) {
+    if (resp.getStatus() == OK) {
-   * @throws IOException
+   * @throws OMException
-      throws IOException {
+      throws OMException {
-    final GetDelegationTokenResponseProto resp = submitRequest(omRequest)
-        .getGetDelegationTokenResponse();
-    if (resp.getStatus() == Status.OK) {
-       return resp.getResponse().hasToken() ?
-          OMPBHelper.convertToDelegationToken(resp.getResponse().getToken())
-           : null;
-    }  else {
-      throw new IOException("Get Delegation Token failed, error : " + resp
-          .getStatus());
+    final GetDelegationTokenResponseProto resp;
+    try {
+      resp = submitRequest(omRequest).getGetDelegationTokenResponse();
+
+      if (resp.getStatus() == OK) {
+        return resp.getResponse().hasToken() ?
+            OMPBHelper.convertToDelegationToken(resp.getResponse().getToken())
+            : null;
+      }
+      throw new OMException("Get delegation token failed with response:"
+          + resp.getStatus(), toResultStatus(resp.getStatus()));
+    } catch (IOException e) {
+      if(e instanceof OMException) {
+        throw (OMException)e;
+      }
+      throw new OMException("Get delegation token failed.", e,
+          TOKEN_ERROR_OTHER);
-   * @throws IOException
-      throws IOException {
+      throws OMException {
-    final RenewDelegationTokenResponseProto resp = submitRequest(omRequest)
-        .getRenewDelegationTokenResponse();
-    if (resp.getStatus() == Status.OK) {
-      return resp.getResponse().getNewExpiryTime();
-    }  else {
-      throw new IOException("Renew Delegation Token failed, error : " + resp
-          .getStatus());
+    final RenewDelegationTokenResponseProto resp;
+    try {
+      resp = submitRequest(omRequest)
+          .getRenewDelegationTokenResponse();
+      if (resp.getStatus() == OK) {
+        return resp.getResponse().getNewExpiryTime();
+      }
+      throw new OMException("Renew delegation token failed with response:"
+          + resp.getStatus(), toResultStatus(resp.getStatus()));
+    } catch (IOException e) {
+      if(e instanceof OMException) {
+        throw (OMException)e;
+      }
+      throw new OMException("Renew delegation token failed.", e,
+          TOKEN_ERROR_OTHER);
-   * @throws IOException
-      throws IOException {
+      throws OMException {
-    final CancelDelegationTokenResponseProto resp = submitRequest(omRequest)
-        .getCancelDelegationTokenResponse();
-    if (resp.getStatus() != Status.OK) {
-      throw new IOException("Cancel Delegation Token failed, error : " + resp
-          .getStatus());
+    final CancelDelegationTokenResponseProto resp;
+    try {
+      resp = submitRequest(omRequest).getCancelDelegationTokenResponse();
+      if (resp.getStatus() == OK) {
+        return;
+      }
+      throw new OMException("Cancel delegation token failed with response:"
+          + resp.getStatus(), toResultStatus(resp.getStatus()));
+    } catch (IOException e) {
+      if(e instanceof OMException) {
+        throw (OMException)e;
+      }
+      throw new OMException("Cancel delegation token failed.", e,
+          TOKEN_ERROR_OTHER);
+    }
+  }
+
+  /**
+   * Converts proto status to OMException result code.
+   *
+   * @param status Proto status received from rpc call.
+   */
+  public ResultCodes toResultStatus(Status status) {
+    switch (status) {
+    case INVALID_AUTH_METHOD:
+      return ResultCodes.INVALID_AUTH_METHOD;
+    case INVALID_TOKEN:
+      return ResultCodes.INVALID_TOKEN;
+    case TOKEN_EXPIRED:
+      return ResultCodes.TOKEN_EXPIRED;
+    case TOKEN_ERROR_OTHER:
+      return TOKEN_ERROR_OTHER;
+    default:
+      return UNKNOWN;

MOV26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 UPD40 INS40 INS31 UPD43 UPD43 UPD43 INS29 INS83 INS43 INS42 INS44 INS8 MOV25 UPD42 INS54 UPD42 INS54 UPD42 INS54 INS65 INS65 INS42 INS43 INS42 INS50 MOV8 INS25 UPD42 INS8 INS12 INS8 INS12 INS8 INS12 INS66 INS42 INS66 INS42 INS42 INS49 INS41 INS49 INS41 INS49 INS41 INS49 INS41 INS49 INS41 INS42 INS42 INS42 INS42 MOV27 MOV8 MOV8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 MOV25 MOV53 INS44 INS8 INS21 INS25 MOV53 INS44 INS8 INS21 INS25 INS53 INS44 INS8 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS42 INS42 INS42 INS7 MOV43 INS42 INS25 INS53 INS7 INS27 MOV8 INS43 INS42 MOV25 INS53 INS7 MOV27 INS8 INS14 MOV43 INS42 INS25 MOV53 INS42 MOV32 INS42 INS43 INS32 INS62 INS8 INS14 INS42 MOV32 INS32 INS42 INS43 INS32 INS42 INS62 INS14 INS42 MOV32 INS42 INS41 INS43 INS27 INS32 INS62 INS8 INS42 UPD45 INS42 INS32 INS42 INS43 INS53 INS43 INS45 INS42 INS42 INS42 INS42 INS42 UPD45 INS42 MOV32 INS42 INS43 INS53 INS43 INS45 INS42 INS42 INS42 INS45 MOV32 INS42 INS32 INS42 INS43 INS53 UPD43 INS45 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS11 UPD42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42 DEL40 DEL40 DEL40 DEL40 DEL40 DEL25 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL40 DEL8 DEL42 DEL65 DEL42 DEL65 DEL40 DEL45 DEL27 DEL40 DEL27 DEL8 DEL25