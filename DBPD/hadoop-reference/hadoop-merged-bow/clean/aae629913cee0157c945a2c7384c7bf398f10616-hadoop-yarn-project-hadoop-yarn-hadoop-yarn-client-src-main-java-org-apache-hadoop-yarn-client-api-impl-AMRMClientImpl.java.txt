YARN-7292. Retrospect Resource Profile Behavior for overriding capability. Contributed by Wangda Tan.

+import java.io.Serializable;
-import org.apache.hadoop.yarn.api.records.ProfileCapability;
+import org.apache.hadoop.yarn.api.records.ResourceInformation;
-        String resourceName, Resource capability, boolean relaxLocality,
-        String resourceProfile) {
-      ProfileCapability profileCapability = ProfileCapability
-          .newInstance(resourceProfile, capability);
+        String resourceName, Resource capability, boolean relaxLocality) {
-          .profileCapability(profileCapability).build();
+          .build();
-  static class ProfileCapabilityComparator<T extends ProfileCapability>
-      implements Comparator<T> {
-
-    HashMap<String, Resource> resourceProfilesMap;
-
-    public ProfileCapabilityComparator(
-        HashMap<String, Resource> resourceProfileMap) {
-      this.resourceProfilesMap = resourceProfileMap;
+  static class ResourceReverseComparator<T extends Resource>
+      implements Comparator<T>, Serializable {
+    public int compare(Resource res0, Resource res1) {
+      return res1.compareTo(res0);
-
-    public int compare(T arg0, T arg1) {
-      Resource resource0 =
-          ProfileCapability.toResource(arg0, resourceProfilesMap);
-      Resource resource1 =
-          ProfileCapability.toResource(arg1, resourceProfilesMap);
-      return resource1.compareTo(resource0);
-    }
-  }
-
-  boolean canFit(ProfileCapability arg0, ProfileCapability arg1) {
-    Resource resource0 =
-        ProfileCapability.toResource(arg0, resourceProfilesMap);
-    Resource resource1 =
-        ProfileCapability.toResource(arg1, resourceProfilesMap);
-    return Resources.fitsIn(resource0, resource1);
-
-              .profileCapability(r.getProfileCapability()).build();
+              .build();
-    ProfileCapability profileCapability = ProfileCapability
-        .newInstance(req.getResourceProfile(), req.getCapability());
-    checkResourceProfile(req.getResourceProfile());
+    Resource resource = checkAndGetResourceProfile(req.getResourceProfile(),
+        req.getCapability());
-            req.getExecutionTypeRequest(), profileCapability, req, true,
+            req.getExecutionTypeRequest(), resource, req, true,
-          profileCapability, req, true, req.getNodeLabelExpression());
+          resource, req, true, req.getNodeLabelExpression());
-          profileCapability, req, req.getRelaxLocality(),
+          resource, req, req.getRelaxLocality(),
-        req.getExecutionTypeRequest(), profileCapability, req,
+        req.getExecutionTypeRequest(), resource, req,
-    ProfileCapability profileCapability = ProfileCapability
-        .newInstance(req.getResourceProfile(), req.getCapability());
+    Resource resource = checkAndGetResourceProfile(req.getResourceProfile(),
+        req.getCapability());
-            req.getExecutionTypeRequest(), profileCapability, req);
+            req.getExecutionTypeRequest(), resource, req);
-          req.getExecutionTypeRequest(), profileCapability, req);
+          req.getExecutionTypeRequest(), resource, req);
-        req.getExecutionTypeRequest(), profileCapability, req);
+        req.getExecutionTypeRequest(), resource, req);
-  @SuppressWarnings("unchecked")
-  public synchronized List<? extends Collection<T>> getMatchingRequests(
-      Priority priority, String resourceName, ExecutionType executionType,
-      Resource capability) {
-    ProfileCapability profileCapability =
-        ProfileCapability.newInstance(capability);
-    return getMatchingRequests(priority, resourceName, executionType,
-        profileCapability);
+  public List<? extends Collection<T>> getMatchingRequests(Priority priority,
+      String resourceName, ExecutionType executionType,
+      Resource capability, String profile) {
+    capability = checkAndGetResourceProfile(profile, capability);
+    return getMatchingRequests(priority, resourceName, executionType, capability);
-      ProfileCapability capability) {
+      Resource capability) {
-    List<LinkedHashSet<T>> list = new LinkedList<LinkedHashSet<T>>();
+    List<LinkedHashSet<T>> list = new LinkedList<>();
-          if (canFit(resReqInfo.remoteRequest.getProfileCapability(),
+          if (Resources.fitsIn(resReqInfo.remoteRequest.getCapability(),
-  private void checkResourceProfile(String profile) {
-    if (resourceProfilesMap != null && !resourceProfilesMap.isEmpty()
-        && !resourceProfilesMap.containsKey(profile)) {
-      throw new InvalidContainerRequestException(
-          "Invalid profile name, valid profile names are " + resourceProfilesMap
-              .keySet());
+  // When profile and override resource are specified at the same time, override
+  // predefined resource value in profile if any resource type has a positive
+  // value.
+  private Resource checkAndGetResourceProfile(String profile,
+      Resource overrideResource) {
+    Resource returnResource = overrideResource;
+
+    // if application requested a non-empty/null profile, and the
+    if (profile != null && !profile.isEmpty()) {
+      if (resourceProfilesMap == null || (!resourceProfilesMap.containsKey(
+          profile))) {
+        throw new InvalidContainerRequestException(
+            "Invalid profile name specified=" + profile + (
+                resourceProfilesMap == null ?
+                    "" :
+                    (", valid profile names are " + resourceProfilesMap
+                        .keySet())));
+      }
+      returnResource = Resources.clone(resourceProfilesMap.get(profile));
+      for (ResourceInformation info : overrideResource
+          .getAllResourcesListCopy()) {
+        if (info.getValue() > 0) {
+          returnResource.setResourceInformation(info.getName(), info);
+        }
+      }
+
+    return returnResource;
-      ExecutionTypeRequest execTypeReq, ProfileCapability capability, T req,
+      ExecutionTypeRequest execTypeReq, Resource capability, T req,
-      remoteRequestsTable = new RemoteRequestsTable<T>();
-      if (this.resourceProfilesMap instanceof HashMap) {
-        remoteRequestsTable.setResourceComparator(
-            new ProfileCapabilityComparator((HashMap) resourceProfilesMap));
-      }
+      remoteRequestsTable = new RemoteRequestsTable<>();
-      ExecutionTypeRequest execTypeReq, ProfileCapability capability, T req) {
+      ExecutionTypeRequest execTypeReq, Resource capability, T req) {

MOV26 INS26 INS40 UPD40 INS55 INS31 MOV29 MOV83 UPD42 MOV42 MOV73 MOV74 INS43 MOV31 MOV60 INS44 INS44 INS8 MOV44 UPD83 MOV83 MOV43 UPD42 MOV42 MOV44 MOV44 INS8 MOV43 UPD42 MOV42 INS39 UPD42 INS44 INS44 INS70 MOV21 MOV70 MOV21 INS43 INS42 INS43 INS42 INS21 MOV41 UPD43 UPD42 INS60 INS25 INS41 UPD43 UPD43 MOV43 INS42 MOV43 UPD42 MOV42 INS41 MOV43 MOV44 INS42 INS8 UPD42 MOV42 MOV43 UPD42 MOV42 UPD42 MOV42 INS42 INS7 UPD42 INS43 MOV59 INS27 INS8 INS42 UPD42 UPD42 INS32 UPD42 MOV21 INS21 INS40 UPD42 UPD42 MOV32 INS42 MOV32 UPD42 INS40 UPD42 INS42 INS32 UPD42 UPD42 MOV42 UPD42 INS42 INS27 INS38 MOV25 INS21 INS70 MOV32 INS42 INS42 INS42 UPD42 INS32 INS32 MOV42 UPD42 MOV32 UPD42 MOV42 UPD42 MOV42 MOV42 UPD74 INS42 INS33 INS32 INS27 INS7 INS44 INS32 INS8 UPD42 MOV32 INS21 INS42 MOV32 INS42 MOV32 INS42 INS42 INS9 MOV32 INS42 MOV32 INS42 MOV32 INS42 INS42 MOV32 MOV32 MOV21 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD27 MOV27 INS36 INS42 INS32 UPD43 MOV43 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS25 UPD42 MOV42 INS32 MOV32 MOV38 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 INS27 INS8 UPD74 INS42 MOV32 INS42 MOV32 INS42 INS42 INS9 MOV32 UPD42 UPD42 UPD42 MOV42 INS27 UPD42 MOV42 INS42 INS42 INS32 INS34 INS21 INS42 INS45 INS42 INS36 UPD42 MOV42 UPD42 MOV42 INS32 INS16 UPD42 MOV42 UPD42 MOV42 INS32 INS42 UPD42 INS42 INS27 INS45 INS36 UPD42 MOV42 UPD42 MOV42 UPD42 INS42 INS33 MOV27 UPD45 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL43 DEL43 DEL74 DEL42 DEL59 DEL23 DEL39 DEL43 DEL42 DEL44 DEL60 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL32 DEL41 DEL8 DEL31 DEL55 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL44 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL32 DEL41 DEL8 DEL31 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL43 DEL42 DEL9 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL40 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL9 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL42 DEL40 DEL42 DEL42 DEL32 DEL21 DEL42 DEL45 DEL79 DEL83 DEL43 DEL42 DEL32 DEL59 DEL60 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL38 DEL27 DEL27 DEL83 DEL39 DEL42 DEL8 DEL31 DEL42 DEL43 DEL52 DEL42 DEL22 DEL42 DEL43 DEL62 DEL42 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL11 DEL14 DEL32 DEL21 DEL8 DEL25