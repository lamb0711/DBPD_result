Merge HDFS-4685 to trunk.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1569870 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.fs.permission.AclEntry;
+import org.apache.hadoop.fs.permission.AclEntryScope;
+import org.apache.hadoop.fs.permission.AclEntryType;
+import org.apache.hadoop.fs.permission.FsAction;
+import org.apache.hadoop.hdfs.server.namenode.FSImageFormatProtobuf.LoaderContext;
+import org.apache.hadoop.hdfs.server.namenode.FsImageProto.INodeSection.AclFeatureProto;
+import com.google.common.collect.ImmutableList;
+
+  private static final int ACL_ENTRY_NAME_MASK = (1 << 24) - 1;
+  private static final int ACL_ENTRY_NAME_OFFSET = 6;
+  private static final int ACL_ENTRY_TYPE_OFFSET = 3;
+  private static final int ACL_ENTRY_SCOPE_OFFSET = 5;
+  private static final int ACL_ENTRY_PERM_MASK = 7;
+  private static final int ACL_ENTRY_TYPE_MASK = 3;
+  private static final int ACL_ENTRY_SCOPE_MASK = 1;
+  private static final FsAction[] FSACTION_VALUES = FsAction.values();
+  private static final AclEntryScope[] ACL_ENTRY_SCOPE_VALUES = AclEntryScope
+      .values();
+  private static final AclEntryType[] ACL_ENTRY_TYPE_VALUES = AclEntryType
+      .values();
+
+    public static ImmutableList<AclEntry> loadAclEntries(
+        AclFeatureProto proto, final String[] stringTable) {
+      ImmutableList.Builder<AclEntry> b = ImmutableList.builder();
+      for (int v : proto.getEntriesList()) {
+        int p = v & ACL_ENTRY_PERM_MASK;
+        int t = (v >> ACL_ENTRY_TYPE_OFFSET) & ACL_ENTRY_TYPE_MASK;
+        int s = (v >> ACL_ENTRY_SCOPE_OFFSET) & ACL_ENTRY_SCOPE_MASK;
+        int nid = (v >> ACL_ENTRY_NAME_OFFSET) & ACL_ENTRY_NAME_MASK;
+        String name = stringTable[nid];
+        b.add(new AclEntry.Builder().setName(name)
+            .setPermission(FSACTION_VALUES[p])
+            .setScope(ACL_ENTRY_SCOPE_VALUES[s])
+            .setType(ACL_ENTRY_TYPE_VALUES[t]).build());
+      }
+      return b.build();
+    }
+
-        final String[] stringTable) {
+        LoaderContext state) {
-          stringTable);
+          state.getStringTable());
+
+      if (d.hasAcl()) {
+        dir.addAclFeature(new AclFeature(loadAclEntries(d.getAcl(),
+            state.getStringTable())));
+      }
-        return loadINodeDirectory(n, parent.getLoaderContext().getStringTable());
+        return loadINodeDirectory(n, parent.getLoaderContext());
+      LoaderContext state = parent.getLoaderContext();
+
+      if (f.hasAcl()) {
+        file.addAclFeature(new AclFeature(loadAclEntries(f.getAcl(),
+            state.getStringTable())));
+      }
+
-      return new INodeSymlink(n.getId(), n.getName().toByteArray(), permissions,
-          0, 0, s.getTarget().toStringUtf8());
+
+      INodeSymlink sym = new INodeSymlink(n.getId(), n.getName().toByteArray(),
+          permissions, 0, 0, s.getTarget().toStringUtf8());
+
+      return sym;
-      INodeDirectory root = loadINodeDirectory(p, parent.getLoaderContext()
-          .getStringTable());
+      INodeDirectory root = loadINodeDirectory(p, parent.getLoaderContext());
+    private static AclFeatureProto.Builder buildAclEntries(AclFeature f,
+        final SaverContext.DeduplicationMap<String> map) {
+      AclFeatureProto.Builder b = AclFeatureProto.newBuilder();
+      for (AclEntry e : f.getEntries()) {
+        int v = ((map.getId(e.getName()) & ACL_ENTRY_NAME_MASK) << ACL_ENTRY_NAME_OFFSET)
+            | (e.getType().ordinal() << ACL_ENTRY_TYPE_OFFSET)
+            | (e.getScope().ordinal() << ACL_ENTRY_SCOPE_OFFSET)
+            | (e.getPermission().ordinal());
+        b.addEntries(v);
+      }
+      return b;
+    }
+
-        INodeFileAttributes file,
-        final SaverContext.DeduplicationMap<String> stringMap) {
+        INodeFileAttributes file, final SaverContext state) {
-          .setPermission(buildPermissionStatus(file, stringMap))
+          .setPermission(buildPermissionStatus(file, state.getStringMap()))
+
+      AclFeature f = file.getAclFeature();
+      if (f != null) {
+        b.setAcl(buildAclEntries(f, state.getStringMap()));
+      }
-        INodeDirectoryAttributes dir,
-        final SaverContext.DeduplicationMap<String> stringMap) {
+        INodeDirectoryAttributes dir, final SaverContext state) {
-          .setPermission(buildPermissionStatus(dir, stringMap));
+          .setPermission(buildPermissionStatus(dir, state.getStringMap()));
+
+      AclFeature f = dir.getAclFeature();
+      if (f != null) {
+        b.setAcl(buildAclEntries(f, state.getStringMap()));
+      }
-          parent.getSaverContext().getStringMap());
+          parent.getSaverContext());
-          parent.getSaverContext().getStringMap());
+          parent.getSaverContext());
+      SaverContext state = parent.getSaverContext();
-          .setPermission(buildPermissionStatus(n, parent.getSaverContext().getStringMap()))
+          .setPermission(buildPermissionStatus(n, state.getStringMap()))
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS5 INS59 INS83 INS83 INS83 INS5 INS59 INS83 INS83 INS83 INS5 INS59 INS31 INS31 INS42 INS27 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS43 INS85 INS42 INS32 INS43 INS85 INS42 INS32 INS43 INS85 INS42 INS32 INS83 INS83 INS74 INS42 INS44 MOV44 INS8 INS44 INS83 INS83 INS43 INS42 INS44 MOV44 INS8 INS44 INS36 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS42 INS60 INS70 INS41 INS43 INS42 INS25 INS60 INS25 INS60 INS40 INS43 INS42 UPD42 INS60 INS70 INS41 INS43 UPD42 INS60 INS25 INS83 INS43 INS42 INS60 INS25 INS60 MOV60 INS60 INS27 INS42 INS42 INS42 INS74 INS59 INS44 INS32 INS8 INS32 INS42 INS32 INS8 INS43 INS59 INS32 INS8 INS43 INS59 INS42 INS42 INS43 INS59 INS44 INS32 INS8 INS42 UPD42 MOV42 INS43 INS59 INS27 INS8 INS42 INS43 INS59 INS27 INS8 MOV43 INS59 MOV43 INS43 INS59 INS34 INS34 INS43 INS43 INS42 INS32 INS39 INS42 INS42 INS42 INS60 INS60 INS60 INS60 INS60 INS21 INS42 INS42 INS42 INS42 INS21 MOV32 MOV32 INS42 INS42 INS32 INS42 INS42 INS21 INS42 INS42 MOV14 INS40 INS42 INS32 INS43 INS42 INS42 INS42 INS60 INS21 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS32 MOV32 MOV32 INS42 INS42 MOV32 INS40 INS42 INS42 INS42 INS39 INS59 INS39 INS59 INS39 INS59 INS39 INS59 INS43 INS59 INS32 INS32 INS32 UPD42 INS42 INS42 INS42 INS32 MOV32 INS42 INS42 INS42 INS39 INS59 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 MOV32 UPD42 INS42 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS42 INS2 INS42 INS42 INS32 INS42 UPD42 MOV42 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS36 INS42 INS36 INS42 INS36 INS42 INS42 INS42 INS32 INS42 INS43 INS32 INS43 INS32 INS36 INS36 INS36 INS36 INS42 INS42 INS32 INS42 UPD42 MOV42 INS42 INS42 INS32 INS27 INS27 INS27 INS32 INS42 INS2 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 INS27 INS27 INS27 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS2 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS36 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 UPD42 MOV42 INS32 INS42 INS2 INS42 INS42 INS27 INS32 INS42 INS32 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS32 INS40 INS42 INS42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL40 DEL43 DEL43 DEL74 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60