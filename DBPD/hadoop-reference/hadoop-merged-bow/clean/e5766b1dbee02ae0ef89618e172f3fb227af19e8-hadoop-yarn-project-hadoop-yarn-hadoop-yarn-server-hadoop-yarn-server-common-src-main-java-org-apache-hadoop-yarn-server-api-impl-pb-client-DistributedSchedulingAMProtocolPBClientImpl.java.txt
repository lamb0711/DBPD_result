YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)

-import org.apache.hadoop.yarn.server.api.DistributedSchedulerProtocol;
+import org.apache.hadoop.yarn.server.api.DistributedSchedulingAMProtocol;
-import org.apache.hadoop.yarn.server.api.protocolrecords.DistSchedAllocateRequest;
-import org.apache.hadoop.yarn.server.api.protocolrecords.DistSchedAllocateResponse;
-import org.apache.hadoop.yarn.server.api.protocolrecords.DistSchedRegisterResponse;
+import org.apache.hadoop.yarn.server.api.protocolrecords.DistributedSchedulingAllocateRequest;
+import org.apache.hadoop.yarn.server.api.protocolrecords.DistributedSchedulingAllocateResponse;
+import org.apache.hadoop.yarn.server.api.protocolrecords.RegisterDistributedSchedulingAMResponse;
-
-
-import org.apache.hadoop.yarn.server.api.protocolrecords.impl.pb.DistSchedAllocateRequestPBImpl;
-import org.apache.hadoop.yarn.server.api.protocolrecords.impl.pb.DistSchedAllocateResponsePBImpl;
-import org.apache.hadoop.yarn.server.api.protocolrecords.impl.pb.DistSchedRegisterResponsePBImpl;
-import org.apache.hadoop.yarn.api.protocolrecords.impl.pb
-    .FinishApplicationMasterRequestPBImpl;
-import org.apache.hadoop.yarn.api.protocolrecords.impl.pb
-    .FinishApplicationMasterResponsePBImpl;
-import org.apache.hadoop.yarn.api.protocolrecords.impl.pb
-    .RegisterApplicationMasterRequestPBImpl;
-import org.apache.hadoop.yarn.api.protocolrecords.impl.pb
-    .RegisterApplicationMasterResponsePBImpl;
+import org.apache.hadoop.yarn.server.api.protocolrecords.impl.pb.DistributedSchedulingAllocateRequestPBImpl;
+import org.apache.hadoop.yarn.server.api.protocolrecords.impl.pb.DistributedSchedulingAllocateResponsePBImpl;
+import org.apache.hadoop.yarn.server.api.protocolrecords.impl.pb.RegisterDistributedSchedulingAMResponsePBImpl;
+import org.apache.hadoop.yarn.api.protocolrecords.impl.pb.FinishApplicationMasterRequestPBImpl;
+import org.apache.hadoop.yarn.api.protocolrecords.impl.pb.FinishApplicationMasterResponsePBImpl;
+import org.apache.hadoop.yarn.api.protocolrecords.impl.pb.RegisterApplicationMasterRequestPBImpl;
+import org.apache.hadoop.yarn.api.protocolrecords.impl.pb.RegisterApplicationMasterResponsePBImpl;
-import org.apache.hadoop.yarn.server.api.DistributedSchedulerProtocolPB;
+import org.apache.hadoop.yarn.server.api.DistributedSchedulingAMProtocolPB;
-public class DistributedSchedulerProtocolPBClientImpl implements
-    DistributedSchedulerProtocol, Closeable {
+/**
+ * Implementation of {@link DistributedSchedulingAMProtocol}, used when
+ * distributed scheduling is enabled.
+ */
+public class DistributedSchedulingAMProtocolPBClientImpl implements
+    DistributedSchedulingAMProtocol, Closeable {
-  private DistributedSchedulerProtocolPB proxy;
+  private DistributedSchedulingAMProtocolPB proxy;
-  public DistributedSchedulerProtocolPBClientImpl(long clientVersion,
-      InetSocketAddress addr,
-      Configuration conf) throws IOException {
-    RPC.setProtocolEngine(conf, DistributedSchedulerProtocolPB.class,
+  public DistributedSchedulingAMProtocolPBClientImpl(long clientVersion,
+      InetSocketAddress addr, Configuration conf) throws IOException {
+    RPC.setProtocolEngine(conf, DistributedSchedulingAMProtocolPB.class,
-    proxy = RPC.getProxy(DistributedSchedulerProtocolPB.class, clientVersion,
+    proxy = RPC.getProxy(DistributedSchedulingAMProtocolPB.class, clientVersion,
-  public DistSchedRegisterResponse
+  public RegisterDistributedSchedulingAMResponse
-          RegisterApplicationMasterRequest request)
-          throws YarnException, IOException {
+      RegisterApplicationMasterRequest request)
+      throws YarnException, IOException {
-      return new DistSchedRegisterResponsePBImpl(
+      return new RegisterDistributedSchedulingAMResponsePBImpl(
-  public DistSchedAllocateResponse allocateForDistributedScheduling(
-      DistSchedAllocateRequest request) throws YarnException, IOException {
-    YarnServerCommonServiceProtos.DistSchedAllocateRequestProto requestProto =
-        ((DistSchedAllocateRequestPBImpl) request).getProto();
+  public DistributedSchedulingAllocateResponse allocateForDistributedScheduling(
+      DistributedSchedulingAllocateRequest request)
+      throws YarnException, IOException {
+    YarnServerCommonServiceProtos.DistributedSchedulingAllocateRequestProto
+        requestProto =
+        ((DistributedSchedulingAllocateRequestPBImpl) request).getProto();
-      return new DistSchedAllocateResponsePBImpl(
+      return new DistributedSchedulingAllocateResponsePBImpl(
-  public RegisterApplicationMasterResponse registerApplicationMaster
-      (RegisterApplicationMasterRequest request) throws YarnException,
-      IOException {
+  public RegisterApplicationMasterResponse registerApplicationMaster(
+      RegisterApplicationMasterRequest request)
+      throws YarnException, IOException {
-  public FinishApplicationMasterResponse finishApplicationMaster
-      (FinishApplicationMasterRequest request) throws YarnException,
-      IOException {
+  public FinishApplicationMasterResponse finishApplicationMaster(
+      FinishApplicationMasterRequest request)
+      throws YarnException, IOException {
-  public AllocateResponse allocate(AllocateRequest request) throws
-      YarnException, IOException {
+  public AllocateResponse allocate(AllocateRequest request)
+      throws YarnException, IOException {

UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 INS29 UPD42 UPD43 INS65 UPD42 UPD43 UPD42 UPD43 UPD43 INS66 INS65 INS66 INS66 UPD42 UPD42 UPD42 UPD43 INS42 UPD42 UPD43 UPD40 UPD43 UPD42 UPD43 UPD43 UPD43 UPD42 UPD42 UPD43 UPD42 UPD42