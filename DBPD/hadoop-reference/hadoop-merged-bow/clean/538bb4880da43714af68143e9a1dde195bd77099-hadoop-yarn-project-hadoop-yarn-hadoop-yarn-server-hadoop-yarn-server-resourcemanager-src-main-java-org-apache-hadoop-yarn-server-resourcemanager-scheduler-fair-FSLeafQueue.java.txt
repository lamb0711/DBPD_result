YARN-9323. FSLeafQueue#computeMaxAMResource does not override zero values for custom resources
(Contributed by Szilard Nemeth via Daniel Templeton)

Change-Id: Id844ccf09488f367c0c7de0a3b2d4aca1bba31cc

+import java.util.Map;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.QueueMetricsCustomResource;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.QueueMetricsForCustomResources;
+    QueueMetricsForCustomResources metricsForCustomResources =
+        scheduler.getRootQueueMetrics().getQueueMetricsForCustomResources();
+
+    if (metricsForCustomResources != null) {
+      QueueMetricsCustomResource availableResources =
+          metricsForCustomResources.getAvailable();
+
+      // We expect all custom resources contained in availableResources,
+      // so we will loop through all of them.
+      for (Map.Entry<String, Long> availableEntry : availableResources
+          .getValues().entrySet()) {
+        String resourceName = availableEntry.getKey();
+
+        // We only update the value if fairshare is 0 for that resource.
+        if (maxResource.getResourceValue(resourceName) == 0) {
+          Long availableValue = availableEntry.getValue();
+          long value = Math.min(availableValue,
+              getMaxShare().getResourceValue(resourceName));
+          maxResource.setResourceValue(resourceName, value);
+        }
+      }
+    }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS60 INS25 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS42 INS33 INS60 INS70 INS32 INS42 INS43 INS59 INS44 INS32 INS8 INS42 INS42 INS42 INS42 INS32 INS74 INS42 INS32 INS42 INS60 INS25 INS42 INS42 INS43 INS43 INS43 INS42 INS42 INS43 INS59 INS27 INS8 INS40 INS42 INS42 INS42 INS42 INS32 INS32 INS34 INS60 INS60 INS21 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS39 INS59 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42