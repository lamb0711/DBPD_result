HDDS-656. Add logic for pipeline report and action processing in new pipeline code. Contributed by Lokesh Jain.

-import org.apache.hadoop.hdds.protocol.proto.HddsProtos.LifeCycleEvent;
+import org.apache.hadoop.hdds.scm.events.SCMEvents;
+import org.apache.hadoop.hdds.server.events.EventPublisher;
-  public SCMPipelineManager(Configuration conf, NodeManager nodeManager)
-      throws IOException {
+  private final EventPublisher eventPublisher;
+  private final NodeManager nodeManager;
+
+  public SCMPipelineManager(Configuration conf, NodeManager nodeManager,
+      EventPublisher eventPublisher) throws IOException {
-    this.pipelineFactory = new PipelineFactory(nodeManager, stateManager);
+    this.pipelineFactory = new PipelineFactory(nodeManager, stateManager, conf);
-
+
+    this.eventPublisher = eventPublisher;
+    this.nodeManager = nodeManager;
+      // TODO: add pipeline to node manager
+      // nodeManager.addPipeline(pipeline);
+      pipelineStore.put(pipeline.getID().getProtobuf().toByteArray(),
+          pipeline.getProtobufMessage().toByteArray());
-      try {
-        pipelineStore.put(pipeline.getID().getProtobuf().toByteArray(),
-            pipeline.getProtobufMessage().toByteArray());
-      } catch (IOException ioe) {
-        // if db operation fails we need to revert the pipeline creation in
-        // state manager.
-        stateManager.removePipeline(pipeline.getID());
-        throw ioe;
-      }
+      // TODO: add pipeline to node manager
+  public List<Pipeline> getPipelinesByType(ReplicationType type) {
+    lock.readLock().lock();
+    try {
+      return stateManager.getPipelinesByType(type);
+    } finally {
+      lock.readLock().unlock();
+    }
+  }
+
+  @Override
+  public List<Pipeline> getPipelinesByTypeAndFactor(ReplicationType type,
+      ReplicationFactor factor) {
+    lock.readLock().lock();
+    try {
+      return stateManager.getPipelinesByTypeAndFactor(type, factor);
+    } finally {
+      lock.readLock().unlock();
+    }
+  }
+
+  @Override
+  public int getNumberOfContainers(PipelineID pipelineID) throws IOException {
+    return stateManager.getNumberOfContainers(pipelineID);
+  }
+
+  @Override
-      //TODO: close all containers in this pipeline
-      Pipeline pipeline =
-          stateManager.updatePipelineState(pipelineId, LifeCycleEvent.FINALIZE);
-      pipelineStore.put(pipeline.getID().getProtobuf().toByteArray(),
-          pipeline.getProtobufMessage().toByteArray());
+      stateManager.finalizePipeline(pipelineId);
+      Set<ContainerID> containerIDs = stateManager.getContainers(pipelineId);
+      for (ContainerID containerID : containerIDs) {
+        eventPublisher.fireEvent(SCMEvents.CLOSE_CONTAINER, containerID);
+      }
-  public void closePipeline(PipelineID pipelineId) throws IOException {
+  public void openPipeline(PipelineID pipelineId) throws IOException {
-      Pipeline pipeline =
-          stateManager.updatePipelineState(pipelineId, LifeCycleEvent.CLOSE);
-      pipelineStore.put(pipeline.getID().getProtobuf().toByteArray(),
-          pipeline.getProtobufMessage().toByteArray());
+      stateManager.openPipeline(pipelineId);
+      // TODO: remove pipeline from node manager
-    lock.writeLock().lock();
-    try {
-      stateManager.close();
-    } finally {
-      lock.writeLock().unlock();
+    if (pipelineStore != null) {
+      pipelineStore.close();

MOV26 INS26 MOV31 UPD40 INS40 INS23 INS23 INS31 INS31 INS31 INS31 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS44 INS78 MOV83 INS74 UPD42 MOV42 INS44 INS8 MOV78 INS83 INS74 INS42 INS44 INS44 INS8 MOV78 INS83 INS39 INS42 INS44 MOV43 INS8 INS78 UPD42 MOV43 UPD42 MOV44 MOV43 INS78 INS83 INS39 INS42 MOV43 INS8 INS42 INS42 INS42 INS42 INS43 INS42 INS21 INS21 INS42 INS43 MOV43 INS43 INS42 MOV21 INS54 INS43 MOV43 INS43 INS42 INS43 INS42 INS21 INS54 INS43 INS42 INS41 INS42 INS42 INS25 INS42 INS7 INS7 MOV8 INS42 INS42 INS8 INS8 INS42 INS42 INS42 INS32 INS8 MOV8 INS42 INS32 MOV8 MOV8 INS27 INS8 INS22 INS42 INS22 INS42 MOV60 MOV21 MOV21 MOV41 INS41 INS21 MOV32 UPD42 MOV42 INS41 INS42 INS42 INS42 INS21 INS60 INS70 INS42 INS33 INS21 INS42 INS52 INS42 INS52 INS42 UPD42 INS32 INS32 UPD42 UPD42 INS32 INS32 INS74 INS59 INS44 INS42 INS8 INS32 MOV42 MOV32 INS42 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 INS43 INS43 INS42 INS32 INS43 INS42 INS21 UPD42 INS42 INS42 INS42 MOV32 MOV42 MOV32 UPD42 MOV42 UPD42 MOV42 UPD42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS32 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 INS40 UPD42 MOV42 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL53 DEL8 DEL12 DEL54 DEL8 DEL39 DEL42 DEL40 DEL32 DEL59 DEL60 DEL8 DEL54 DEL8 DEL31 DEL42 DEL40 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL32 DEL42 DEL32 DEL32 DEL32 DEL32 DEL21