Merging r1547121 through r1547473 from trunk to branch HDFS-2832

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1547492 13f79535-47bb-0310-9956-ffa450edef68

-  protected RMHAProtocolService haService;
+  protected RMContextImpl rmContext;
+  @VisibleForTesting
+  protected AdminService adminService;
-  protected ClientToAMTokenSecretManagerInRM clientToAMSecretManager =
-      new ClientToAMTokenSecretManagerInRM();
+  protected ClientToAMTokenSecretManagerInRM clientToAMSecretManager;
-  private AdminService adminService;
-  protected RMContext rmContext;
-  public RMHAProtocolService getHAService() {
-    return this.haService;
-  }
-  
+    this.rmContext = new RMContextImpl();
-    haService = createRMHAProtocolService();
-    addService(haService);
+    adminService = createAdminService();
+    addService(adminService);
+    rmContext.setRMAdminService(adminService);
+
-    ((RMContextImpl) rmContext).setStateStore(rmStore);
-  }
-
-  protected RMHAProtocolService createRMHAProtocolService() {
-    return new RMHAProtocolService(this);
+    rmContext.setStateStore(rmStore);
-    return new RMStateStoreOperationFailedEventDispatcher(haService);
+    return new RMStateStoreOperationFailedEventDispatcher(
+        rmContext.getRMAdminService());
+      rmContext.setDispatcher(rmDispatcher);
+
+      clientToAMSecretManager = new ClientToAMTokenSecretManagerInRM();
+      rmContext.setClientToAMTokenSecretManager(clientToAMSecretManager);
+      rmContext.setAMRMTokenSecretManager(amRmTokenSecretManager);
+      rmContext.setContainerAllocationExpirer(containerAllocationExpirer);
+      rmContext.setAMLivelinessMonitor(amLivelinessMonitor);
+      rmContext.setAMFinishingMonitor(amFinishingMonitor);
+      rmContext.setContainerTokenSecretManager(containerTokenSecretManager);
+
+      rmContext.setNMTokenSecretManager(nmTokenSecretManager);
+      rmContext.setStateStore(rmStore);
+        rmContext.setDelegationTokenRenewer(delegationTokenRenewer);
-      rmContext = new RMContextImpl(
-          rmDispatcher, rmStore, containerAllocationExpirer, amLivelinessMonitor,
-          amFinishingMonitor, delegationTokenRenewer, amRmTokenSecretManager,
-          containerTokenSecretManager, nmTokenSecretManager,
-          clientToAMSecretManager);
-
+      rmContext.setNodesListManager(nodesListManager);
+      rmContext.setScheduler(scheduler);
+
+      rmContext.setResourceTrackerService(resourceTracker);
+      rmContext.setApplicationMasterService(masterService);
+
-
-      adminService = createAdminService(clientRM, masterService, resourceTracker);
-      addService(adminService);
+      rmContext.setClientRMService(clientRM);
-    private final RMHAProtocolService haService;
+    private final AdminService adminService;
-        RMHAProtocolService haService) {
-      this.haService = haService;
+        AdminService adminService) {
+      this.adminService = adminService;
-        synchronized(haService) {
-          if (haService.haEnabled) {
+        synchronized(adminService) {
+          if (adminService.haEnabled) {
-              haService.transitionToStandby(true);
+              adminService.transitionToStandby(true);
+      rmContext.getRMNodes().clear();
+      rmContext.getInactiveRMNodes().clear();
+      rmContext.getRMApps().clear();
-  protected AdminService createAdminService(
-      ClientRMService clientRMService, 
-      ApplicationMasterService applicationMasterService,
-      ResourceTrackerService resourceTrackerService) {
-    return new AdminService(this.conf, scheduler, rmContext,
-        this.nodesListManager, clientRMService, applicationMasterService,
-        resourceTrackerService);
+  protected AdminService createAdminService() {
+    return new AdminService(this, rmContext);

MOV23 UPD43 MOV59 INS78 UPD83 MOV42 UPD42 MOV42 INS42 INS21 INS21 MOV21 UPD43 INS7 INS32 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 UPD42 UPD42 UPD43 UPD42 INS22 INS14 UPD42 UPD42 INS42 INS42 INS42 INS42 INS32 INS32 INS7 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 UPD42 INS21 INS21 INS21 INS52 INS52 INS42 MOV43 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 MOV14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS21 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 MOV42 INS42 UPD42 UPD42 INS42 INS42 INS42 UPD42 INS32 INS32 INS32 INS32 UPD42 UPD42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD40 UPD42 DEL83 DEL42 DEL43 DEL23 DEL83 DEL42 DEL43 DEL42 DEL52 DEL42 DEL22 DEL41 DEL8 DEL31 DEL42 DEL11 DEL36 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL52 DEL14 DEL41 DEL8 DEL31 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL14 DEL7 DEL21 DEL42 DEL32 DEL7 DEL21 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42