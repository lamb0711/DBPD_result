Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1170378 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.api.records.ContainerStatus;
-import org.apache.hadoop.yarn.server.api.records.RegistrationResponse;
-import org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode;
+  private List<ContainerStatus> getContainerStatuses(Map<ApplicationId, List<Container>> containers) {
+    List<ContainerStatus> containerStatuses = new ArrayList<ContainerStatus>();
+    for (List<Container> appContainers : containers.values()) {
+      for (Container container : appContainers) {
+        containerStatuses.add(container.getContainerStatus());
+      }
+    }
+    return containerStatuses;
+  }
-          nodeId, containers);
+          nodeId, getContainerStatuses(containers));
-  synchronized public StartContainerResponse startContainer(StartContainerRequest request) throws YarnRemoteException {
-    ContainerLaunchContext containerLaunchContext = request.getContainerLaunchContext();
+  synchronized public StartContainerResponse startContainer(
+      StartContainerRequest request) 
+  throws YarnRemoteException {
+    ContainerLaunchContext containerLaunchContext = 
+        request.getContainerLaunchContext();
-    ApplicationId applicationId = containerLaunchContext.getContainerId()
-        .getAppId();
+    ApplicationId applicationId = 
+        containerLaunchContext.getContainerId().getApplicationAttemptId().
+        getApplicationId();
-      if (container.getId().compareTo(containerLaunchContext.getContainerId()) == 0) {
+      if (container.getId().compareTo(containerLaunchContext.getContainerId()) 
+          == 0) {
-    String applicationId = String.valueOf(containerID.getAppId().getId());
+    String applicationId = String.valueOf(
+        containerID.getApplicationAttemptId().getApplicationId().getId());
-    ContainerId containerID = request.getContainerId();
-    GetContainerStatusResponse response = recordFactory.newRecordInstance(GetContainerStatusResponse.class);
+    ContainerId containerId = request.getContainerId();
+    List<Container> appContainers = 
+        containers.get(
+            containerId.getApplicationAttemptId().getApplicationId());
+    Container container = null;
+    for (Container c : appContainers) {
+      if (c.getId().equals(containerId)) {
+        container = c;
+      }
+    }
+    GetContainerStatusResponse response = 
+        recordFactory.newRecordInstance(GetContainerStatusResponse.class);
+    if (container != null && container.getContainerStatus() != null) {
+      response.setStatus(container.getContainerStatus());
+    }
-  public static org.apache.hadoop.yarn.server.api.records.NodeStatus createNodeStatus(
-      NodeId nodeId, Map<ApplicationId, List<Container>> containers) {
+  public static org.apache.hadoop.yarn.server.api.records.NodeStatus 
+  createNodeStatus(NodeId nodeId, List<ContainerStatus> containers) {
-    org.apache.hadoop.yarn.server.api.records.NodeStatus nodeStatus = recordFactory.newRecordInstance(org.apache.hadoop.yarn.server.api.records.NodeStatus.class);
+    org.apache.hadoop.yarn.server.api.records.NodeStatus nodeStatus = 
+        recordFactory.newRecordInstance(org.apache.hadoop.yarn.server.api.records.NodeStatus.class);
-    nodeStatus.addAllContainers(containers);
+    nodeStatus.setContainersStatuses(containers);

MOV26 UPD40 INS31 INS83 INS74 INS42 MOV44 INS8 INS44 INS43 INS43 INS60 INS70 INS41 INS60 INS60 INS70 INS25 INS74 INS42 INS42 INS42 INS74 INS59 INS44 INS32 INS8 INS42 INS74 INS59 INS43 INS59 INS44 INS42 INS8 INS27 INS8 INS43 INS43 INS43 INS43 INS42 INS14 INS74 INS42 INS42 INS42 INS70 INS32 UPD42 INS43 INS43 INS42 INS32 INS42 INS42 INS33 INS43 INS42 INS25 INS27 INS27 INS21 INS42 INS42 UPD42 INS42 INS42 INS74 INS43 INS43 INS44 INS42 INS8 INS32 MOV32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS8 INS42 INS33 INS32 INS33 INS32 INS43 INS43 INS42 INS42 INS43 INS42 INS21 INS42 MOV42 UPD42 INS32 INS42 INS32 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS32 UPD42 INS42 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS32 MOV42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26