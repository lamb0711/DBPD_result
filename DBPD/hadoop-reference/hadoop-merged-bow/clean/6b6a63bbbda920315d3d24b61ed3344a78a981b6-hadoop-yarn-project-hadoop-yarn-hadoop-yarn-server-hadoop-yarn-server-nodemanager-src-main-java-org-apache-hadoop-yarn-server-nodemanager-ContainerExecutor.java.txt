Merge commit '456e901a4c5c639267ee87b8e5f1319f256d20c2' (HDFS-6407. Add sorting and pagination in the datanode tab of the NN Web UI. Contributed by Haohui Mai.) into HDFS-7285-merge

+import java.util.HashSet;
+import java.util.Set;
+import org.apache.hadoop.yarn.api.ApplicationConstants;
+import org.apache.hadoop.yarn.server.nodemanager.util.NodeManagerHardwareUtils;
-  public abstract boolean isContainerProcessAlive(ContainerLivenessContext ctx)
+  public abstract boolean isContainerAlive(ContainerLivenessContext ctx)
+    Container container = ctx.getContainer();
+        .setContainer(container)
-    while(isContainerProcessAlive(livenessContext)) {
+    while(isContainerAlive(livenessContext)) {
+    Set<String> whitelist = new HashSet<String>();
+    whitelist.add(YarnConfiguration.NM_DOCKER_CONTAINER_EXECUTOR_IMAGE_NAME);
+    whitelist.add(ApplicationConstants.Environment.HADOOP_YARN_HOME.name());
+    whitelist.add(ApplicationConstants.Environment.HADOOP_COMMON_HOME.name());
+    whitelist.add(ApplicationConstants.Environment.HADOOP_HDFS_HOME.name());
+    whitelist.add(ApplicationConstants.Environment.HADOOP_CONF_DIR.name());
+    whitelist.add(ApplicationConstants.Environment.JAVA_HOME.name());
-        sb.env(env.getKey().toString(), env.getValue().toString());
+        if (!whitelist.contains(env.getKey())) {
+          sb.env(env.getKey().toString(), env.getValue().toString());
+        } else {
+          sb.whitelistedEnv(env.getKey().toString(), env.getValue().toString());
+        }
-          int nodeVCores = conf.getInt(YarnConfiguration.NM_VCORES,
-              YarnConfiguration.DEFAULT_NM_VCORES);
-          // cap overall usage to the number of cores allocated to YARN
-          int nodeCpuPercentage = Math
-              .min(
-                  conf.getInt(
-                      YarnConfiguration.NM_RESOURCE_PERCENTAGE_PHYSICAL_CPU_LIMIT,
-                      YarnConfiguration.DEFAULT_NM_RESOURCE_PERCENTAGE_PHYSICAL_CPU_LIMIT),
-                  100);
-          nodeCpuPercentage = Math.max(0, nodeCpuPercentage);
-          if (nodeCpuPercentage == 0) {
-            String message = "Illegal value for "
-                + YarnConfiguration.NM_RESOURCE_PERCENTAGE_PHYSICAL_CPU_LIMIT
-                + ". Value cannot be less than or equal to 0.";
-            throw new IllegalArgumentException(message);
-          }
-          float yarnVCores = (nodeCpuPercentage * nodeVCores) / 100.0f;
+          int nodeVCores = NodeManagerHardwareUtils.getVCores(conf);
+          int nodeCpuPercentage =
+              NodeManagerHardwareUtils.getNodeCpuPercentage(conf);
+
+          float containerCpuPercentage =
+              (float) (nodeCpuPercentage * containerVCores) / nodeVCores;
+
-          // should be set as 20 * 100. The following setting is equal to:
-          // 100 * (100 * (vcores / Total # of cores allocated to YARN))
-          cpuRate = Math.min(10000,
-              (int) ((containerVCores * 10000) / yarnVCores));
+          // should be set as 20 * 100.
+          cpuRate = Math.min(10000, (int) (containerCpuPercentage * 100));
+            .setContainer(container)

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 UPD42 INS60 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS43 INS59 INS74 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS32 INS32 UPD42 INS43 INS43 INS42 INS14 INS42 INS42 INS40 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 MOV32 INS42 INS42 INS42 INS74 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS8 INS42 UPD42 INS43 MOV43 INS25 INS32 UPD42 UPD42 INS42 INS38 MOV8 INS8 INS42 INS42 MOV32 MOV42 UPD42 UPD42 INS32 INS21 UPD42 INS42 INS42 INS32 INS32 UPD42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 UPD42 UPD42 UPD42 INS32 INS42 INS32 INS42 UPD42 UPD42 INS42 UPD42 UPD42 MOV42 INS11 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS39 INS36 INS36 UPD42 UPD42 MOV27 MOV27 UPD42 UPD42 UPD34 DEL40 DEL40 DEL42 DEL40 DEL40 DEL32 DEL34 DEL42 DEL42 DEL42 DEL34 DEL42 DEL32 DEL7 DEL21 DEL42 DEL34 DEL27 DEL42 DEL45 DEL40 DEL45 DEL27 DEL59 DEL60 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25 DEL36 DEL34 DEL36 DEL42 DEL27 DEL36 DEL42