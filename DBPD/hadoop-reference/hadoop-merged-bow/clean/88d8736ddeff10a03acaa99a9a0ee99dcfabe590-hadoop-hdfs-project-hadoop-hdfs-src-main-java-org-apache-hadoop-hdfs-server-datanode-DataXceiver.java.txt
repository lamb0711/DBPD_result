HDFS-7192. DN should ignore lazyPersist hint if the writer is not local. (Contributed by Arpit Agarwal)

+import com.google.common.annotations.VisibleForTesting;
-import org.apache.hadoop.hdfs.HdfsConfiguration;
-      final boolean allowLazyPersist,
+      boolean allowLazyPersist,
+    allowLazyPersist = allowLazyPersist &&
+        (dnConf.getAllowNonLocalLazyPersist() || peer.isLocal());
-    final DataOutputStream replyOut = new DataOutputStream(
-        new BufferedOutputStream(
-            getOutputStream(),
-            smallBufferSize));
+    final DataOutputStream replyOut = getBufferedOutputStream();
-        blockReceiver = new BlockReceiver(block, storageType, in,
+        blockReceiver = getBlockReceiver(block, storageType, in,
-          // Do not propagate allowLazyPersist to downstream DataNodes.
-              false, targetPinnings[0], targetPinnings);
+                allowLazyPersist, targetPinnings[0], targetPinnings);
-              false, false, targetPinnings);
+                allowLazyPersist, false, targetPinnings);
-    datanode.metrics.addWriteBlockOp(elapsed());
-    datanode.metrics.incrWritesFromClient(peer.isLocal(), size);
+    datanode.getMetrics().addWriteBlockOp(elapsed());
+    datanode.getMetrics().incrWritesFromClient(peer.isLocal(), size);
-        blockReceiver = new BlockReceiver(block, storageType,
+        blockReceiver = getBlockReceiver(block, storageType,
+
+  /**
+   * Separated for testing.
+   */
+  @VisibleForTesting
+  BlockReceiver getBlockReceiver(
+      final ExtendedBlock block, final StorageType storageType,
+      final DataInputStream in,
+      final String inAddr, final String myAddr,
+      final BlockConstructionStage stage,
+      final long newGs, final long minBytesRcvd, final long maxBytesRcvd,
+      final String clientname, final DatanodeInfo srcDataNode,
+      final DataNode dn, DataChecksum requestedChecksum,
+      CachingStrategy cachingStrategy,
+      final boolean allowLazyPersist,
+      final boolean pinning) throws IOException {
+    return new BlockReceiver(block, storageType, in,
+        inAddr, myAddr, stage, newGs, minBytesRcvd, maxBytesRcvd,
+        clientname, srcDataNode, dn, requestedChecksum,
+        cachingStrategy, allowLazyPersist, pinning);
+  }
+
+  /**
+   * Separated for testing.
+   * @return
+   */
+  @VisibleForTesting
+  DataOutputStream getBufferedOutputStream() {
+    return new DataOutputStream(
+        new BufferedOutputStream(getOutputStream(), smallBufferSize));
+  }
+
+

MOV26 UPD40 INS31 INS31 INS44 INS29 INS78 MOV43 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 MOV44 INS44 INS43 INS8 INS29 INS78 MOV43 INS42 INS8 INS39 INS42 INS21 INS65 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS39 INS42 INS83 INS39 INS42 INS83 INS39 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS43 INS42 INS43 INS42 INS83 INS39 INS42 INS42 INS41 INS65 INS65 INS42 INS41 INS7 INS43 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS66 MOV14 INS42 INS27 INS42 INS32 INS32 INS32 MOV43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS36 INS42 INS42 INS42 INS42 INS42 INS27 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 MOV32 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 MOV32 INS33 INS34 INS34 INS34 INS45 INS33 INS42 INS42 MOV32 INS9 INS9 INS42 INS42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL14 DEL9 DEL9 DEL40 DEL40 DEL42 DEL42 DEL42 DEL33 DEL34 DEL34 DEL34 DEL45 DEL33 DEL42 DEL42 DEL9 DEL9 DEL14