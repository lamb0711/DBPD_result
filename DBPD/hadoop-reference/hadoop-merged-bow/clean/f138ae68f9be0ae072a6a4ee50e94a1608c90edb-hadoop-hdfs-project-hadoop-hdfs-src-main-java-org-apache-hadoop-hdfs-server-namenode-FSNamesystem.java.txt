HDFS-5024. Make DatanodeProtocol#commitBlockSynchronization idempotent. Contributed by Arpit Agarwal.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506789 13f79535-47bb-0310-9956-ffa450edef68

-        BlockInfo bi = blockManager.getStoredBlock(b);
+        BlockInfo bi = getStoredBlock(b);
+  @VisibleForTesting
+  BlockInfo getStoredBlock(Block block) {
+    return blockManager.getStoredBlock(block);
+  }
+
-      final BlockInfo storedBlock = blockManager.getStoredBlock(ExtendedBlock
-        .getLocalBlock(lastblock));
+      final BlockInfo storedBlock = getStoredBlock(
+          ExtendedBlock.getLocalBlock(lastblock));
-        throw new IOException("Block (=" + lastblock + ") not found");
+        if (deleteblock) {
+          // This may be a retry attempt so ignore the failure
+          // to locate the block.
+          if (LOG.isDebugEnabled()) {
+            LOG.debug("Block (=" + lastblock + ") not found");
+          }
+          return;
+        } else {
+          throw new IOException("Block (=" + lastblock + ") not found");
+        }
-        throw new IOException("Unexpected block (=" + lastblock
-                              + ") since the file (=" + iFile.getLocalName()
-                              + ") is not under construction");
+        if (LOG.isDebugEnabled()) {
+          LOG.debug("Unexpected block (=" + lastblock
+                    + ") since the file (=" + iFile.getLocalName()
+                    + ") is not under construction");
+        }
+        return;
-        if (!remove) {
-          throw new IOException("Trying to delete non-existant block "
-              + blockToDel);
+        if (remove) {
+          blockManager.removeBlockFromMap(storedBlock);
-        blockManager.removeBlockFromMap(storedBlock);
-      src = leaseManager.findPath(pendingFile);
-        // commit the last block and complete it if it has minimum replicas
-        commitOrCompleteLastBlock(pendingFile, storedBlock);
-
-        //remove lease, close file
-        finalizeINodeFileUnderConstruction(src, pendingFile,
-            Snapshot.findLatestSnapshot(pendingFile, null));
+        src = closeFileCommitBlocks(pendingFile, storedBlock);
-        dir.persistBlocks(src, pendingFile);
+        src = persistBlocks(pendingFile);
+  /**
+   *
+   * @param pendingFile
+   * @param storedBlock
+   * @return Path of the file that was closed.
+   * @throws IOException
+   */
+  @VisibleForTesting
+  String closeFileCommitBlocks(INodeFileUnderConstruction pendingFile,
+                                       BlockInfo storedBlock)
+      throws IOException {
+
+    String src = leaseManager.findPath(pendingFile);
+
+    // commit the last block and complete it if it has minimum replicas
+    commitOrCompleteLastBlock(pendingFile, storedBlock);
+
+    //remove lease, close file
+    finalizeINodeFileUnderConstruction(src, pendingFile,
+                                       Snapshot.findLatestSnapshot(pendingFile, null));
+
+    return src;
+  }
+
+  /**
+   * Persist the block list for the given file.
+   *
+   * @param pendingFile
+   * @return Path to the given file.
+   * @throws IOException
+   */
+  @VisibleForTesting
+  String persistBlocks(INodeFileUnderConstruction pendingFile)
+      throws IOException {
+    String src = leaseManager.findPath(pendingFile);
+    dir.persistBlocks(src, pendingFile);
+    return src;
+  }
-    BlockInfo storedBlock = blockManager.getStoredBlock(b);
+    BlockInfo storedBlock = getStoredBlock(b);
-    BlockInfo storedBlock = blockManager.getStoredBlock(ExtendedBlock.getLocalBlock(block));
+    BlockInfo storedBlock = getStoredBlock(ExtendedBlock.getLocalBlock(block));

INS31 INS31 INS31 INS78 INS43 INS42 INS44 INS8 INS29 INS78 INS43 INS42 INS44 INS44 MOV43 MOV8 INS29 INS78 INS43 INS42 INS44 MOV43 MOV8 INS42 INS42 INS43 INS42 INS41 INS65 INS65 INS65 INS65 INS42 INS42 INS43 INS42 INS43 INS42 INS60 INS41 INS65 INS65 INS65 INS65 INS42 INS42 INS43 INS42 INS60 INS41 INS42 INS32 INS42 INS42 INS66 INS42 INS42 INS42 INS43 INS59 INS42 INS66 INS42 INS66 INS42 INS42 INS43 INS59 INS42 INS42 INS42 INS42 INS25 INS42 INS42 MOV32 INS42 INS42 INS32 INS8 INS8 INS42 INS8 INS8 INS42 INS42 INS42 INS25 INS25 INS41 MOV21 INS21 INS42 INS8 MOV8 INS32 MOV8 INS42 INS7 INS25 INS41 INS42 INS42 INS21 MOV21 INS32 INS42 INS32 INS32 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS42 INS42 MOV27 INS32 INS42 INS42 INS27 INS45 INS42 INS45 DEL42 DEL42 DEL14 DEL53 DEL42 DEL38 DEL45 DEL42 DEL27 DEL14 DEL53 DEL42 DEL25 DEL42 DEL42