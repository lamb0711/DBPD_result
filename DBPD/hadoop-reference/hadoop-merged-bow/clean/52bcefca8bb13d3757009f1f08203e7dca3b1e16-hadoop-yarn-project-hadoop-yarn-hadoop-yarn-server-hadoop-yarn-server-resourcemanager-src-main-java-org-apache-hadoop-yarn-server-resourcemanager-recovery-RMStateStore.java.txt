YARN-2136. Changed RMStateStore to ignore store opearations when fenced. Contributed by Varun Saxena

+import java.util.EnumSet;
+import com.google.common.annotations.VisibleForTesting;
-    DEFAULT
+    ACTIVE,
+    FENCED
-      RMStateStoreState.DEFAULT)
-      .addTransition(RMStateStoreState.DEFAULT, RMStateStoreState.DEFAULT,
+      RMStateStoreState.ACTIVE)
+      .addTransition(RMStateStoreState.ACTIVE, RMStateStoreState.ACTIVE,
-      .addTransition(RMStateStoreState.DEFAULT, RMStateStoreState.DEFAULT,
+      .addTransition(RMStateStoreState.ACTIVE, RMStateStoreState.ACTIVE,
-      .addTransition(RMStateStoreState.DEFAULT, RMStateStoreState.DEFAULT,
+      .addTransition(RMStateStoreState.ACTIVE, RMStateStoreState.ACTIVE,
-      .addTransition(RMStateStoreState.DEFAULT, RMStateStoreState.DEFAULT,
+      .addTransition(RMStateStoreState.ACTIVE, RMStateStoreState.ACTIVE,
-      .addTransition(RMStateStoreState.DEFAULT, RMStateStoreState.DEFAULT,
-          RMStateStoreEventType.UPDATE_APP_ATTEMPT, new UpdateAppAttemptTransition());
+      .addTransition(RMStateStoreState.ACTIVE, RMStateStoreState.ACTIVE,
+          RMStateStoreEventType.UPDATE_APP_ATTEMPT, new UpdateAppAttemptTransition())
+      .addTransition(RMStateStoreState.ACTIVE, RMStateStoreState.FENCED,
+          RMStateStoreEventType.FENCED)
+      .addTransition(RMStateStoreState.FENCED, RMStateStoreState.FENCED,
+          EnumSet.of(
+          RMStateStoreEventType.STORE_APP,
+          RMStateStoreEventType.UPDATE_APP,
+          RMStateStoreEventType.REMOVE_APP,
+          RMStateStoreEventType.STORE_APP_ATTEMPT,
+          RMStateStoreEventType.UPDATE_APP_ATTEMPT,
+          RMStateStoreEventType.FENCED));
+  public synchronized void updateFencedState() {
+    this.stateMachine.doTransition(RMStateStoreEventType.FENCED,
+         new RMStateStoreEvent(RMStateStoreEventType.FENCED));
+  }
+
+    if(isFencedState()) {
+      LOG.info("State store is in Fenced state. Can't store RM Delegation Token.");
+      return;
+    }
+    if(isFencedState()) {
+      LOG.info("State store is in Fenced state. Can't remove RM Delegation Token.");
+      return;
+    }
+    if(isFencedState()) {
+      LOG.info("State store is in Fenced state. Can't update RM Delegation Token.");
+      return;
+    }
+    if(isFencedState()) {
+      LOG.info("State store is in Fenced state. Can't store RM Delegation " +
+               "Token Master key.");
+      return;
+    }
+   if(isFencedState()) {
+      LOG.info("State store is in Fenced state. Can't remove RM Delegation " +
+               "Token Master key.");
+      return;
+    }
+  
+  @VisibleForTesting
+  synchronized boolean isFencedState() {
+    return (RMStateStoreState.FENCED == this.stateMachine.getCurrentState());
+  }
+      updateFencedState();

INS26 INS26 INS40 INS40 INS31 INS31 INS72 INS83 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 UPD42 INS42 INS32 INS21 INS25 INS25 INS25 INS25 INS25 INS42 INS41 INS32 INS42 INS40 INS40 INS32 INS32 INS32 INS8 INS32 INS8 INS32 INS8 INS32 INS8 INS32 INS8 INS36 MOV32 INS42 INS40 INS40 INS40 INS42 INS42 INS40 INS40 INS40 INS40 INS40 INS40 INS22 INS42 INS40 INS14 INS42 INS21 INS41 INS42 INS21 INS41 INS42 INS21 INS41 INS42 INS21 INS41 INS42 INS21 INS41 INS27 INS21 UPD40 UPD40 INS52 INS42 INS43 INS40 INS32 INS32 INS32 INS32 INS32 INS40 INS32 INS32 UPD40 UPD40 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS27 INS42 INS42 INS27 INS22 INS42 INS42 UPD40 UPD40 INS45 INS45 INS45 INS45 INS52 INS42 UPD40 UPD40 UPD40 UPD40 UPD40