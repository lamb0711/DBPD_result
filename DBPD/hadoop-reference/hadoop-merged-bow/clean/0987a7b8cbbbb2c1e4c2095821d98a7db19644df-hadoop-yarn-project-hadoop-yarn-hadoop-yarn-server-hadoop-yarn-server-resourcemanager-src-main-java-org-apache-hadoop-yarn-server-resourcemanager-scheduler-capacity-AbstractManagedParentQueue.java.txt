YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)

Change-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6

-  private int maxAppsForAutoCreatedQueues;
-  private int maxAppsPerUserForAutoCreatedQueues;
-  private int userLimit;
-  private float userLimitFactor;
+  protected AutoCreatedLeafQueueTemplate leafQueueTemplate;
-    initializeLeafQueueConfigs();
-
-    StringBuffer queueInfo = new StringBuffer();
-    queueInfo.append("Created Managed Parent Queue: ").append(queueName)
-        .append("\nof type : [" + getClass())
-        .append("]\nwith capacity: [")
-        .append(super.getCapacity()).append("]\nwith max capacity: [")
-        .append(super.getMaximumCapacity()).append("\nwith max apps: [")
-        .append(getMaxApplicationsForAutoCreatedQueues())
-        .append("]\nwith max apps per user: [")
-        .append(getMaxApplicationsPerUserForAutoCreatedQueues())
-        .append("]\nwith user limit: [").append(getUserLimit())
-        .append("]\nwith user limit factor: [")
-        .append(getUserLimitFactor()).append("].");
-    LOG.info(queueInfo.toString());
-      initializeLeafQueueConfigs();
-
-  protected void initializeLeafQueueConfigs() {
+  protected AutoCreatedLeafQueueTemplate.Builder initializeLeafQueueConfigs
+    (String queuePath) {
-    final String queuePath = super.getQueuePath();
+    AutoCreatedLeafQueueTemplate.Builder leafQueueTemplateBuilder = new
+        AutoCreatedLeafQueueTemplate.Builder();
-    userLimit = conf.getUserLimit(queuePath);
-    userLimitFactor = conf.getUserLimitFactor(queuePath);
-    maxAppsForAutoCreatedQueues = maxApps;
-    maxAppsPerUserForAutoCreatedQueues =
-        (int) (maxApps * (userLimit / 100.0f) * userLimitFactor);
-  }
+    int userLimit = conf.getUserLimit(queuePath);
+    float userLimitFactor = conf.getUserLimitFactor(queuePath);
+    leafQueueTemplateBuilder.userLimit(userLimit)
+          .userLimitFactor(userLimitFactor)
+          .maxApps(maxApps)
+          .maxAppsPerUser(
+              (int) (maxApps * (userLimit / 100.0f) * userLimitFactor));
-  /**
-   * Number of maximum applications for each of the auto created leaf queues.
-   *
-   * @return maxAppsForAutoCreatedQueues
-   */
-  public int getMaxApplicationsForAutoCreatedQueues() {
-    return maxAppsForAutoCreatedQueues;
-  }
-
-  /**
-   * Number of maximum applications per user for each of the auto created
-   * leaf queues.
-   *
-   * @return maxAppsPerUserForAutoCreatedQueues
-   */
-  public int getMaxApplicationsPerUserForAutoCreatedQueues() {
-    return maxAppsPerUserForAutoCreatedQueues;
-  }
-
-  /**
-   * User limit value for each of the  auto created leaf queues.
-   *
-   * @return userLimit
-   */
-  public int getUserLimitForAutoCreatedQueues() {
-    return userLimit;
-  }
-
-  /**
-   * User limit factor value for each of the  auto created leaf queues.
-   *
-   * @return userLimitFactor
-   */
-  public float getUserLimitFactor() {
-    return userLimitFactor;
-  }
-
-  public int getMaxAppsForAutoCreatedQueues() {
-    return maxAppsForAutoCreatedQueues;
-  }
-
-  public int getMaxAppsPerUserForAutoCreatedQueues() {
-    return maxAppsPerUserForAutoCreatedQueues;
-  }
-
-  public int getUserLimit() {
-    return userLimit;
+    return leafQueueTemplateBuilder;
+
+  protected float sumOfChildCapacities() {
+    try {
+      writeLock.lock();
+      float ret = 0;
+      for (CSQueue l : childQueues) {
+        ret += l.getCapacity();
+      }
+      return ret;
+    } finally {
+      writeLock.unlock();
+    }
+  }
+
+  protected float sumOfChildAbsCapacities() {
+    try {
+      writeLock.lock();
+      float ret = 0;
+      for (CSQueue l : childQueues) {
+        ret += l.getAbsoluteCapacity();
+      }
+      return ret;
+    } finally {
+      writeLock.unlock();
+    }
+  }
+
+  public static class AutoCreatedLeafQueueTemplate {
+
+    private QueueCapacities queueCapacities;
+
+    private int maxApps;
+    private int maxAppsPerUser;
+    private int userLimit;
+    private float userLimitFactor;
+
+    AutoCreatedLeafQueueTemplate(Builder builder) {
+      this.maxApps = builder.maxApps;
+      this.maxAppsPerUser = builder.maxAppsPerUser;
+      this.userLimit = builder.userLimit;
+      this.userLimitFactor = builder.userLimitFactor;
+      this.queueCapacities = builder.queueCapacities;
+    }
+
+    public static class Builder {
+      private int maxApps;
+      private int maxAppsPerUser;
+
+      private int userLimit;
+      private float userLimitFactor;
+
+      private QueueCapacities queueCapacities;
+
+      Builder maxApps(int maxApplications) {
+        this.maxApps =  maxApplications;
+        return this;
+      }
+
+      Builder maxAppsPerUser(int maxApplicationsPerUser) {
+        this.maxAppsPerUser = maxApplicationsPerUser;
+        return this;
+      }
+
+      Builder userLimit(int usrLimit) {
+        this.userLimit = usrLimit;
+        return this;
+      }
+
+      Builder userLimitFactor(float ulf) {
+        this.userLimitFactor = ulf;
+        return this;
+      }
+
+      Builder capacities(QueueCapacities capacities) {
+        this.queueCapacities = capacities;
+        return this;
+      }
+
+      AutoCreatedLeafQueueTemplate build() {
+        return new AutoCreatedLeafQueueTemplate(this);
+      }
+    }
+
+    public int getUserLimit() {
+      return userLimit;
+    }
+
+    public float getUserLimitFactor() {
+      return userLimitFactor;
+    }
+
+    public QueueCapacities getQueueCapacities() {
+      return queueCapacities;
+    }
+
+    public int getMaxApps() {
+      return maxApps;
+    }
+
+    public int getMaxAppsPerUser() {
+      return maxAppsPerUser;
+    }
+  }
+
+  public AutoCreatedLeafQueueTemplate getLeafQueueTemplate() {
+    return leafQueueTemplate;
+  }

INS23 INS31 INS31 INS31 INS55 INS31 UPD83 MOV83 INS43 MOV59 MOV83 MOV42 MOV44 MOV44 MOV44 MOV44 MOV43 INS8 INS43 INS44 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS83 INS42 INS23 INS23 INS23 MOV23 MOV23 INS31 INS55 MOV31 MOV31 INS31 MOV31 MOV31 INS83 INS43 INS42 INS8 INS42 UPD42 MOV46 MOV21 INS40 MOV43 INS42 INS60 INS60 INS41 INS54 INS54 INS83 INS43 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS42 INS44 INS8 INS83 INS83 INS42 INS23 INS23 INS23 INS23 INS23 MOV31 MOV31 MOV31 INS31 INS31 INS31 INS83 INS43 INS42 INS8 UPD42 UPD42 INS42 INS41 INS43 INS39 INS59 INS39 INS59 INS32 INS42 INS8 INS8 INS8 INS8 INS42 INS42 INS42 INS42 INS43 INS42 INS21 INS21 INS21 INS21 INS21 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS43 INS59 INS43 INS42 INS44 INS43 INS42 INS44 INS43 INS42 INS44 INS43 INS42 INS44 INS8 INS43 INS42 INS44 INS8 INS43 INS42 INS8 INS42 INS41 INS42 INS40 INS42 INS14 INS42 MOV32 INS42 MOV32 INS32 INS42 MOV11 MOV21 INS60 INS70 INS41 INS21 INS21 INS60 INS70 INS41 INS21 INS42 INS7 INS7 INS7 INS7 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS39 INS42 INS21 INS41 INS42 INS39 INS42 INS21 INS41 INS42 INS39 INS42 INS21 INS41 INS42 INS39 INS42 INS21 INS41 INS42 INS43 INS42 INS21 INS41 INS42 INS41 INS42 UPD42 UPD42 INS43 INS32 INS42 INS42 INS39 INS59 INS44 INS42 INS8 INS42 INS32 INS32 INS39 INS59 INS44 INS42 INS8 INS42 INS32 INS22 INS40 INS22 INS40 INS22 INS40 INS22 INS40 INS22 INS40 INS7 INS52 INS7 INS52 INS7 INS52 INS7 INS52 INS42 INS7 INS52 INS14 INS40 INS32 INS42 INS42 UPD42 INS42 INS42 INS34 INS43 INS42 INS21 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS34 INS43 INS42 INS21 UPD42 MOV42 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS43 INS52 INS42 INS42 INS42 UPD42 MOV42 INS7 INS42 INS7 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS32 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 DEL39 DEL42 DEL59 DEL23 DEL83 DEL39 DEL23 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL45 DEL32 DEL42 DEL32 DEL45 DEL32 DEL27 DEL32 DEL42 DEL45 DEL32 DEL42 DEL42 DEL48 DEL32 DEL42 DEL45 DEL32 DEL42 DEL42 DEL48 DEL32 DEL45 DEL32 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL42 DEL42 DEL32 DEL32 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL31 DEL42 DEL32 DEL21 DEL39 DEL83 DEL42 DEL42 DEL48 DEL42 DEL7 DEL21 DEL42 DEL7 DEL21 DEL42 DEL42 DEL7 DEL21 DEL42 DEL7 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL41 DEL66 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL41 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL41 DEL66 DEL65 DEL66 DEL65 DEL29