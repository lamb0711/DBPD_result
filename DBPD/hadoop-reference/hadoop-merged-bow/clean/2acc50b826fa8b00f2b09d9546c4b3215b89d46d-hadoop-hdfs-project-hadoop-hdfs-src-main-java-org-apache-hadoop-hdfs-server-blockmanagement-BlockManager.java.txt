HDFS-13165: [SPS]: Collects successfully moved block details via IBR. Contributed by Rakesh R.

+import org.apache.hadoop.hdfs.protocol.HdfsConstants.StoragePolicySatisfierMode;
+import org.apache.hadoop.hdfs.server.namenode.sps.SPSService;
-  /** For satisfying block storage policies. */
-  private final StoragePolicySatisfyManager spsManager;
+  /**
+   * For satisfying block storage policies. Instantiates if sps is enabled
+   * internally or externally.
+   */
+  private StoragePolicySatisfyManager spsManager;
-    // sps manager manages the user invoked sps paths and does the movement.
-    spsManager = new StoragePolicySatisfyManager(conf, namesystem, this);
+    createSPSManager(conf);
-    getSPSManager().stop();
+    if (getSPSManager() != null) {
+      getSPSManager().stop();
+    }
-    getSPSManager().stopGracefully();
+    if (getSPSManager() != null) {
+      getSPSManager().stopGracefully();
+    }
+
+    // notify SPS about the reported block
+    notifyStorageMovementAttemptFinishedBlk(storageInfo, block);
+  }
+
+  private void notifyStorageMovementAttemptFinishedBlk(
+      DatanodeStorageInfo storageInfo, Block block) {
+    if (getSPSManager() != null) {
+      SPSService<Long> sps = getSPSManager().getInternalSPSService();
+      if (sps.isRunning()) {
+        sps.notifyStorageMovementAttemptFinishedBlk(
+            storageInfo.getDatanodeDescriptor(), storageInfo.getStorageType(),
+            block);
+      }
+    }
+   * Create SPS manager instance. It manages the user invoked sps paths and does
+   * the movement.
+   *
+   * @param conf
+   *          configuration
+   * @return true if the instance is successfully created, false otherwise.
+   */
+  private boolean createSPSManager(final Configuration conf) {
+    return createSPSManager(conf, null);
+  }
+
+  /**
+   * Create SPS manager instance. It manages the user invoked sps paths and does
+   * the movement.
+   *
+   * @param conf
+   *          configuration
+   * @param spsMode
+   *          satisfier mode
+   * @return true if the instance is successfully created, false otherwise.
+   */
+  public boolean createSPSManager(final Configuration conf,
+      final String spsMode) {
+    // sps manager manages the user invoked sps paths and does the movement.
+    // StoragePolicySatisfier(SPS) configs
+    boolean storagePolicyEnabled = conf.getBoolean(
+        DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_KEY,
+        DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_DEFAULT);
+    String modeVal = spsMode;
+    if (org.apache.commons.lang.StringUtils.isBlank(modeVal)) {
+      modeVal = conf.get(DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MODE_KEY,
+          DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MODE_DEFAULT);
+    }
+    StoragePolicySatisfierMode mode = StoragePolicySatisfierMode
+        .fromString(modeVal);
+    if (!storagePolicyEnabled || mode == StoragePolicySatisfierMode.NONE) {
+      LOG.info("Storage policy satisfier is disabled");
+      return false;
+    }
+    spsManager = new StoragePolicySatisfyManager(conf, namesystem, this);
+    return true;
+  }
+
+  /**
+   * Nullify SPS manager as this feature is disabled fully.
+   */
+  public void disableSPS() {
+    spsManager = null;
+  }
+
+  /**

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS31 INS31 MOV29 MOV83 MOV43 MOV59 INS83 INS39 INS42 INS44 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS8 INS29 INS83 INS39 INS42 INS8 INS21 INS25 INS25 INS21 INS43 INS42 INS43 INS42 INS25 INS65 INS65 INS65 INS83 INS43 INS42 INS41 INS65 INS65 INS65 INS65 INS83 INS43 INS42 INS83 INS43 INS42 INS60 INS60 INS25 INS60 INS25 MOV21 INS41 INS65 INS21 UPD66 INS66 INS32 INS27 INS8 INS27 INS8 INS32 INS42 INS42 INS27 INS8 INS66 INS66 INS42 INS66 INS66 INS42 INS32 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS39 INS59 INS43 INS59 INS32 INS8 INS43 INS59 INS27 INS8 INS9 INS66 INS7 INS42 INS42 INS32 INS33 MOV21 INS32 INS33 MOV21 INS42 INS42 INS42 INS32 INS33 INS60 INS25 INS42 INS42 INS33 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS21 INS42 INS42 INS32 INS38 INS27 INS21 INS41 INS42 INS33 INS42 INS42 INS42 INS74 INS59 INS32 INS8 INS42 INS42 INS40 INS40 INS7 INS42 INS42 INS42 INS42 INS42 INS40 INS32 INS9 INS43 INS43 INS42 INS32 INS42 INS42 INS21 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 DEL83 DEL23