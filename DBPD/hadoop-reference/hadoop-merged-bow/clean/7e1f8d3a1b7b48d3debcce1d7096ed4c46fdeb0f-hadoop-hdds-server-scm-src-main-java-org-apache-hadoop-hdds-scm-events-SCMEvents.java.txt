HDDS-1368. Cleanup old ReplicationManager code from SCM.

-import org.apache.hadoop.hdds.scm.command.CommandStatusReportHandler
-    .ReplicationStatus;
-import org.apache.hadoop.hdds.scm.container.replication.ReplicationManager;
-import org.apache.hadoop.hdds.scm.container.replication.ReplicationManager
-    .DeleteContainerCommandCompleted;
-import org.apache.hadoop.hdds.scm.container.replication.ReplicationManager
-    .ReplicationCompleted;
-import org.apache.hadoop.hdds.scm.container.replication.ReplicationRequest;
-
-import org.apache.hadoop.hdds.scm.server.SCMDatanodeProtocolServer.NodeRegistrationContainerReport;
+import org.apache.hadoop.hdds.scm.server.SCMDatanodeProtocolServer
+    .NodeRegistrationContainerReport;
-   * status for Replication SCMCommand is received.
-   */
-  public static final Event<ReplicationStatus> REPLICATION_STATUS = new
-      TypedEvent<>(ReplicationStatus.class, "Replicate_Command_Status");
-  /**
-   * This event will be triggered by CommandStatusReportHandler whenever a
-  /**
-   * This is the command for ReplicationManager to handle under/over
-   * replication. Sent by the ContainerReportHandler after processing the
-   * heartbeat.
-   */
-  public static final TypedEvent<ReplicationRequest> REPLICATE_CONTAINER =
-      new TypedEvent<>(ReplicationRequest.class);
-
-  /**
-   * This event is sent by the ReplicaManager to the
-   * ReplicationCommandWatcher to track the in-progress replication.
-   */
-  public static final TypedEvent<ReplicationManager.ReplicationRequestToRepeat>
-      TRACK_REPLICATE_COMMAND =
-      new TypedEvent<>(ReplicationManager.ReplicationRequestToRepeat.class);
-
-  /**
-   * This event is sent by the ReplicaManager to the
-   * DeleteContainerCommandWatcher to track the in-progress delete commands.
-   */
-  public static final TypedEvent<ReplicationManager.DeletionRequestToRepeat>
-      TRACK_DELETE_CONTAINER_COMMAND =
-      new TypedEvent<>(ReplicationManager.DeletionRequestToRepeat.class);
-  /**
-   * This event comes from the Heartbeat dispatcher (in fact from the
-   * datanode) to notify the scm that the replication is done. This is
-   * received by the replicate command watcher to mark in-progress task as
-   * finished.
-    <p>
-   * TODO: Temporary event, should be replaced by specific Heartbeat
-   * ActionRequred event.
-   */
-  public static final TypedEvent<ReplicationCompleted> REPLICATION_COMPLETE =
-      new TypedEvent<>(ReplicationCompleted.class);
-
-  public static final TypedEvent<DeleteContainerCommandCompleted>
-      DELETE_CONTAINER_COMMAND_COMPLETE =
-      new TypedEvent<>(DeleteContainerCommandCompleted.class);
-
-  /**
-   * Signal for all the components (but especially for the replication
-   * manager and container report handler) that the replication could be
-   * started. Should be send only if (almost) all the container state are
-   * available from the datanodes.
-   */
-  public static final TypedEvent<Boolean> START_REPLICATION =
-      new TypedEvent<>(Boolean.class);

DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL42 DEL43 DEL57 DEL45 DEL14 DEL59 DEL23 DEL66 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL42 DEL43 DEL57 DEL14 DEL59 DEL23 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL40 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL40 DEL43 DEL57 DEL14 DEL59 DEL23 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL40 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL40 DEL43 DEL57 DEL14 DEL59 DEL23 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL42 DEL43 DEL57 DEL14 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL42 DEL43 DEL57 DEL14 DEL59 DEL23 DEL66 DEL66 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL42 DEL43 DEL57 DEL14 DEL59 DEL23