YARN-6232. Update resource usage and preempted resource calculations to take into account all resource types. Contributed by Varun Vasudev.

-        appUsageReport.setMemorySeconds(rmAppMetrics.getMemorySeconds());
-        appUsageReport.setVcoreSeconds(rmAppMetrics.getVcoreSeconds());
-        appUsageReport.
-            setPreemptedMemorySeconds(rmAppMetrics.
-                getPreemptedMemorySeconds());
-        appUsageReport.
-            setPreemptedVcoreSeconds(rmAppMetrics.
-                getPreemptedVcoreSeconds());
+        appUsageReport
+            .setResourceSecondsMap(rmAppMetrics.getResourceSecondsMap());
+        appUsageReport.setPreemptedResourceSecondsMap(
+            rmAppMetrics.getPreemptedResourceSecondsMap());
-    long memorySeconds = 0;
-    long vcoreSeconds = 0;
-    long preemptedMemorySeconds = 0;
-    long preemptedVcoreSeconds = 0;
+    Map<String, Long> resourceSecondsMap = new HashMap<>();
+    Map<String, Long> preemptedSecondsMap = new HashMap<>();
+
-        memorySeconds += resUsage.getMemorySeconds();
-        vcoreSeconds += resUsage.getVcoreSeconds();
-        preemptedMemorySeconds += attemptMetrics.getPreemptedMemory();
-        preemptedVcoreSeconds += attemptMetrics.getPreemptedVcore();
+        for (Map.Entry<String, Long> entry : resUsage
+            .getResourceUsageSecondsMap().entrySet()) {
+          long value = RMServerUtils
+              .getOrDefault(resourceSecondsMap, entry.getKey(), 0L);
+          value += entry.getValue();
+          resourceSecondsMap.put(entry.getKey(), value);
+        }
+        for (Map.Entry<String, Long> entry : attemptMetrics
+            .getPreemptedResourceSecondsMap().entrySet()) {
+          long value = RMServerUtils
+              .getOrDefault(preemptedSecondsMap, entry.getKey(), 0L);
+          value += entry.getValue();
+          preemptedSecondsMap.put(entry.getKey(), value);
+        }
-    return new RMAppMetrics(resourcePreempted,
-        numNonAMContainerPreempted, numAMContainerPreempted,
-        memorySeconds, vcoreSeconds,
-        preemptedMemorySeconds, preemptedVcoreSeconds);
+    return new RMAppMetrics(resourcePreempted, numNonAMContainerPreempted,
+        numAMContainerPreempted, resourceSecondsMap, preemptedSecondsMap);

INS60 INS74 INS74 MOV59 INS43 INS43 INS43 UPD42 INS14 INS43 INS43 INS43 UPD42 INS14 UPD42 UPD42 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS74 INS43 INS43 INS70 INS70 INS42 INS42 INS44 INS32 INS8 INS44 INS32 INS8 UPD42 UPD42 INS74 INS42 INS32 INS42 INS60 MOV21 MOV21 INS74 INS42 INS32 INS42 INS60 MOV21 MOV21 UPD42 UPD42 INS43 INS43 INS43 INS42 INS42 INS39 INS59 INS32 INS43 INS43 INS43 INS42 INS42 INS39 INS59 INS32 INS40 INS42 INS42 INS42 INS32 UPD42 INS42 INS42 INS32 INS42 INS40 INS42 INS42 INS42 INS32 UPD42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS34 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS32 INS34 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL39 DEL34 DEL34 DEL39 DEL42 DEL34 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL60 DEL39 DEL60 DEL42 DEL32 DEL7 DEL42 DEL32 DEL7 DEL42 DEL42