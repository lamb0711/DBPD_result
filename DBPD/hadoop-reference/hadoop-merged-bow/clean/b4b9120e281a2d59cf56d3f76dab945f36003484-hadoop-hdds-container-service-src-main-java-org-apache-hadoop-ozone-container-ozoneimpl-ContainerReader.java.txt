HDDS-1535. Space tracking for Open Containers : Handle Node Startup. Contributed by Supratim Deka (#832)

* HDDS-1535. Space tracking for Open Containers : Handle Node Startup. Contributed by Supratim Deka

* Fixed checkstyle issues.

* verifyContainerData also does fixup, renamed. Added a Javadoc comment, both as per review discussion

* fixed merge error. adapted to new signature of BlockUtils getDB

* fixed checkstyle issue post merge

+import org.apache.hadoop.ozone.container.common.helpers.BlockData;
+import org.apache.hadoop.ozone.container.common.helpers.ChunkInfo;
+import org.apache.hadoop.ozone.container.keyvalue.KeyValueBlockIterator;
+import java.util.List;
-      verifyContainerData(containerData);
+      verifyAndFixupContainerData(containerData);
-  public void verifyContainerData(ContainerData containerData)
+  /**
+   * verify ContainerData loaded from disk and fix-up stale members.
+   * Specifically blockCommitSequenceId, delete related metadata
+   * and bytesUsed
+   * @param containerData
+   * @throws IOException
+   */
+  public void verifyAndFixupContainerData(ContainerData containerData)
+          if (kvContainer.getContainerState()
+              == ContainerProtos.ContainerDataProto.State.OPEN) {
+            // commitSpace for Open Containers relies on usedBytes
+            initializeUsedBytes(kvContainer);
+          }
+
+  private void initializeUsedBytes(KeyValueContainer container)
+      throws IOException {
+    KeyValueBlockIterator blockIter = new KeyValueBlockIterator(
+        container.getContainerData().getContainerID(),
+        new File(container.getContainerData().getContainerPath()));
+    long usedBytes = 0;
+
+    while (blockIter.hasNext()) {
+      BlockData block = blockIter.nextBlock();
+      long blockLen = 0;
+
+      List<ContainerProtos.ChunkInfo> chunkInfoList = block.getChunks();
+      for (ContainerProtos.ChunkInfo chunk : chunkInfoList) {
+        ChunkInfo info = ChunkInfo.getFromProtoBuf(chunk);
+        blockLen += info.getLen();
+      }
+
+      usedBytes += blockLen;
+    }
+
+    container.getContainerData().setBytesUsed(usedBytes);
+  }

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS29 UPD42 INS83 INS39 INS42 INS44 INS43 INS8 INS65 INS65 INS65 INS43 INS42 INS42 INS60 INS60 INS61 INS21 INS66 INS66 INS66 INS42 INS42 INS42 INS43 INS59 INS39 INS59 INS32 INS8 INS32 INS42 INS42 INS14 INS42 INS34 INS42 INS42 INS60 INS60 INS60 INS70 INS21 INS32 INS42 INS42 INS43 INS32 INS14 INS43 INS59 INS39 INS59 INS74 INS59 INS44 INS42 INS8 INS7 INS42 INS42 UPD42 INS42 INS32 INS42 INS43 INS32 INS42 INS42 INS32 INS42 INS34 INS43 INS43 INS42 INS32 INS43 INS42 INS60 INS21 INS42 INS42 INS25 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS40 INS43 INS59 INS7 INS27 INS8 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS40 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42