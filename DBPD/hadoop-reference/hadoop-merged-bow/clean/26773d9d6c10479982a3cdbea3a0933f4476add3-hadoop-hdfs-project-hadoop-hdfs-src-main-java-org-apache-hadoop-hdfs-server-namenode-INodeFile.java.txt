HDFS-7826. Erasure Coding: Update INodeFile quota computation for striped blocks. Contributed by Kai Sasaki.

+import org.apache.hadoop.hdfs.server.blockmanagement.BlockInfoStripedUnderConstruction;
+
+    if (isStriped()) {
+      return computeQuotaUsageWithStriped(bsps, counts);
+    }
+    
+  /**
+   * Compute quota of striped file
+   * @param bsps
+   * @param counts
+   * @param useCache
+   * @param lastSnapshotId
+   * @return quota counts
+   */
+  public final QuotaCounts computeQuotaUsageWithStriped(
+      BlockStoragePolicySuite bsps, QuotaCounts counts) {
+    long nsDelta = 1;
+    final long ssDelta = storagespaceConsumed();
+    counts.addNameSpace(nsDelta);
+    counts.addStorageSpace(ssDelta);
+    return counts;
+  }
+
-      boolean usePreferredBlockSize4LastUcBlock) {
-    if (blocks == null || blocks.length == 0) {
+                                    boolean usePreferredBlockSize4LastUcBlock) {
+    BlockInfo[] blockInfos = getBlocks();
+    // In case of contiguous blocks
+    if (blockInfos == null || blockInfos.length == 0) {
-    final int last = blocks.length - 1;
+    final int last = blockInfos.length - 1;
-    long size = blocks[last].getNumBytes();
-    if (blocks[last] instanceof BlockInfoContiguousUnderConstruction) {
-       if (!includesLastUcBlock) {
-         size = 0;
-       } else if (usePreferredBlockSize4LastUcBlock) {
-         size = getPreferredBlockSize();
-       }
+    long size = blockInfos[last].getNumBytes();
+    if (blockInfos[last] instanceof BlockInfoContiguousUnderConstruction) {
+      if (!includesLastUcBlock) {
+        size = 0;
+      } else if (usePreferredBlockSize4LastUcBlock) {
+        size = getPreferredBlockSize();
+      }
+    } else if (blockInfos[last] instanceof BlockInfoStripedUnderConstruction) {
+      if (!includesLastUcBlock) {
+        size = 0;
+      } else if (usePreferredBlockSize4LastUcBlock) {
+        // Striped blocks keeps block group which counts
+        // (data blocks num + parity blocks num). When you
+        // count actual used size by BlockInfoStripedUC must
+        // be multiplied by these blocks number.
+        BlockInfoStripedUnderConstruction blockInfoStripedUC
+            = (BlockInfoStripedUnderConstruction) blockInfos[last];
+        size = getPreferredBlockSize() * blockInfoStripedUC.getTotalBlockNum();
+      }
-    for(int i = 0; i < last; i++) {
-      size += blocks[i].getNumBytes();
+    for (int i = 0; i < last; i++) {
+      size += blockInfos[i].getNumBytes();

INS26 INS40 INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS25 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS60 INS60 INS21 INS21 INS41 INS60 INS25 INS32 INS8 INS66 INS42 INS42 INS42 INS42 INS66 INS42 INS42 INS39 INS59 INS83 INS39 INS59 INS32 INS32 INS42 INS5 INS59 INS62 MOV8 INS25 INS42 INS41 INS42 INS34 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS42 INS32 INS2 MOV43 MOV62 INS8 INS32 INS42 INS42 INS42 UPD42 UPD40 UPD40 INS42 INS42 INS43 INS25 INS42 INS42 INS42 UPD42 UPD42 INS42 INS38 INS8 INS25 INS42 INS21 INS42 INS8 INS7 INS60 INS21 UPD42 INS42 INS34 INS43 INS59 INS7 INS42 INS42 INS11 INS42 INS27 INS43 INS2 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL25