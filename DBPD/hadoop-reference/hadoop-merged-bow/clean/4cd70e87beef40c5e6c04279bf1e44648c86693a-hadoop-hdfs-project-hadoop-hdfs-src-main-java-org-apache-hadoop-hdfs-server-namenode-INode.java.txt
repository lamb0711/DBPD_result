Merge trunk into auto-HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1337645 13f79535-47bb-0310-9956-ffa450edef68

+import com.google.common.primitives.SignedBytes;
+
-abstract class INode implements Comparable<byte[]>, FSInodeInfo {
+abstract class INode implements Comparable<byte[]> {
-  private synchronized void updatePermissionStatus(
-      PermissionStatusFormat f, long n) {
+  private void updatePermissionStatus(PermissionStatusFormat f, long n) {
-  @Override
-  //
-  // Comparable interface
-  //
-  public int compareTo(byte[] o) {
-    return compareBytes(name, o);
+  private static final byte[] EMPTY_BYTES = {};
+
+  @Override
+  public final int compareTo(byte[] bytes) {
+    final byte[] left = name == null? EMPTY_BYTES: name;
+    final byte[] right = bytes == null? EMPTY_BYTES: bytes;
+    return SignedBytes.lexicographicalComparator().compare(left, right);
-  public boolean equals(Object o) {
-    if (!(o instanceof INode)) {
+  @Override
+  public final boolean equals(Object that) {
+    if (this == that) {
+      return true;
+    }
+    if (that == null || !(that instanceof INode)) {
-    return Arrays.equals(this.name, ((INode)o).name);
+    return Arrays.equals(this.name, ((INode)that).name);
-  public int hashCode() {
+  @Override
+  public final int hashCode() {
-
-  //
-  // static methods
-  //
-  /**
-   * Compare two byte arrays.
-   * 
-   * @return a negative integer, zero, or a positive integer 
-   * as defined by {@link #compareTo(byte[])}.
-   */
-  static int compareBytes(byte[] a1, byte[] a2) {
-    if (a1==a2)
-        return 0;
-    int len1 = (a1==null ? 0 : a1.length);
-    int len2 = (a2==null ? 0 : a2.length);
-    int n = Math.min(len1, len2);
-    byte b1, b2;
-    for (int i=0; i<n; i++) {
-      b1 = a1[i];
-      b2 = a2[i];
-      if (b1 != b2)
-        return b1 - b2;
-    }
-    return len1 - len2;
-  }

INS26 MOV31 INS40 INS23 INS83 INS83 INS83 MOV5 INS59 MOV78 UPD83 INS83 UPD42 MOV44 INS78 INS83 INS78 INS83 INS42 INS4 UPD42 INS41 INS42 UPD42 INS25 INS42 INS83 MOV5 INS83 MOV5 INS32 INS27 INS8 INS27 UPD42 INS16 UPD42 INS16 INS32 INS42 INS42 INS42 INS52 INS42 INS41 INS27 MOV38 MOV27 INS42 INS42 MOV27 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS9 INS42 INS33 UPD42 UPD42 UPD42 UPD42 DEL42 DEL43 DEL83 DEL66 DEL65 DEL66 DEL66 DEL42 DEL69 DEL68 DEL65 DEL66 DEL65 DEL29 DEL42 DEL44 DEL42 DEL44 DEL42 DEL42 DEL27 DEL34 DEL41 DEL25 DEL39 DEL34 DEL40 DEL16 DEL36 DEL39 DEL34 DEL40 DEL16 DEL36 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL59 DEL42 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL2 DEL7 DEL21 DEL42 DEL42 DEL42 DEL2 DEL7 DEL21 DEL42 DEL42 DEL27 DEL42 DEL42 DEL27 DEL41 DEL25 DEL8 DEL24 DEL42 DEL42 DEL27 DEL41 DEL83 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31