HDDS-1708. Add container scrubber metrics.
Contributed by Hrishikesh Gadre.

+import org.apache.hadoop.conf.Configuration;
+  private final ContainerMetadataScrubberMetrics metrics;
-  public ContainerMetadataScanner(ContainerController controller,
+  public ContainerMetadataScanner(Configuration conf,
+                                  ContainerController controller,
+    this.metrics = ContainerMetadataScrubberMetrics.create(conf);
-      scrub();
-      long interval = TimeUnit.NANOSECONDS.toMillis(System.nanoTime()-start);
+      runIteration();
+      if(!stopping) {
+        metrics.resetNumUnhealthyContainers();
+        metrics.resetNumContainersScanned();
+      }
+    }
+  }
+
+  @VisibleForTesting
+  public void runIteration() {
+    long start = System.nanoTime();
+    Iterator<Container> containerIt = controller.getContainers();
+    while (!stopping && containerIt.hasNext()) {
+      Container container = containerIt.next();
+      try {
+        scrub(container);
+      } catch (IOException e) {
+        LOG.info("Unexpected error while scrubbing container {}",
+            container.getContainerData().getContainerID());
+      } finally {
+        metrics.incNumContainersScanned();
+      }
+    }
+    long interval = System.nanoTime()-start;
+    if (!stopping) {
+      metrics.incNumScanIterations();
+      LOG.info("Completed an iteration of container metadata scrubber in" +
+              " {} minutes." +
+              " Number of  iterations (since the data-node restart) : {}" +
+              ", Number of containers scanned in this iteration : {}" +
+              ", Number of unhealthy containers found in this iteration : {}",
+          TimeUnit.NANOSECONDS.toMinutes(interval),
+          metrics.getNumScanIterations(),
+          metrics.getNumContainersScanned(),
+          metrics.getNumUnHealthyContainers());
-      if (!stopping && interval < metadataScanInterval) {
+      if (interval < metadataScanInterval) {
-  private void scrub() {
-    Iterator<Container> containerIt = controller.getContainers();
-    long count = 0;
-
-    while (!stopping && containerIt.hasNext()) {
-      Container container = containerIt.next();
-      try {
-        scrub(container);
-      } catch (IOException e) {
-        LOG.info("Unexpected error while scrubbing container {}",
-            container.getContainerData().getContainerID());
-      }
-      count++;
-    }
-
-    LOG.debug("iterator ran integrity checks on {} containers", count);
-  }
-
+      metrics.incNumUnHealthyContainers();
+  @VisibleForTesting
+  public ContainerMetadataScrubberMetrics getMetrics() {
+    return metrics;
+  }
+

INS26 INS40 INS23 INS31 INS31 INS83 INS83 INS43 INS59 INS44 MOV78 INS83 INS39 INS42 INS8 INS78 UPD42 INS78 INS83 INS43 INS42 INS8 UPD42 MOV42 INS42 INS43 INS42 INS21 MOV21 MOV61 INS42 MOV60 MOV60 MOV60 INS25 INS42 INS42 INS41 INS42 INS7 MOV38 MOV27 INS8 MOV38 MOV8 INS42 INS22 INS32 MOV21 INS25 INS60 INS54 MOV27 INS21 INS21 INS52 INS42 INS42 INS42 INS42 INS39 INS38 INS8 INS42 MOV43 INS59 MOV8 MOV12 INS8 INS32 MOV27 INS32 UPD42 UPD42 INS42 INS21 INS21 INS42 INS32 INS21 INS21 UPD42 INS42 INS42 INS42 INS27 INS32 INS32 INS32 INS32 INS42 INS42 UPD42 UPD42 INS32 INS32 INS42 INS42 INS32 INS32 INS45 INS45 INS45 INS45 INS45 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 DEL54 DEL42 DEL37 DEL21 DEL40 DEL42 DEL32 DEL27 DEL83 DEL39 DEL42 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL31