YARN-4266. Allow users to enter containers as UID:GID pair instead of by username. Contributed by luhuichun, Zhankun Tang, and Eric Badger.

+import org.apache.hadoop.util.Shell;
+  public static final String ENV_DOCKER_CONTAINER_RUN_ENABLE_USER_REMAPPING =
+      "YARN_CONTAINER_RUNTIME_DOCKER_RUN_ENABLE_USER_REMAPPING";
+  @InterfaceAudience.Private
+  private boolean enableUserReMapping;
+  private int userRemappingUidThreshold;
+  private int userRemappingGidThreshold;
+
+    enableUserReMapping = conf.getBoolean(
+      YarnConfiguration.NM_DOCKER_ENABLE_USER_REMAPPING,
+      YarnConfiguration.DEFAULT_NM_DOCKER_ENABLE_USER_REMAPPING);
+
+    userRemappingUidThreshold = conf.getInt(
+      YarnConfiguration.NM_DOCKER_USER_REMAPPING_UID_THRESHOLD,
+      YarnConfiguration.DEFAULT_NM_DOCKER_USER_REMAPPING_UID_THRESHOLD);
+
+    userRemappingGidThreshold = conf.getInt(
+      YarnConfiguration.NM_DOCKER_USER_REMAPPING_GID_THRESHOLD,
+      YarnConfiguration.DEFAULT_NM_DOCKER_USER_REMAPPING_GID_THRESHOLD);
+  private String getUserIdInfo(String userName)
+      throws ContainerExecutionException {
+    String id = "";
+    Shell.ShellCommandExecutor shexec = new Shell.ShellCommandExecutor(
+        new String[]{"id", "-u", userName});
+    try {
+      shexec.execute();
+      id = shexec.getOutput().replaceAll("[^0-9]", "");
+    } catch (Exception e) {
+      throw new ContainerExecutionException(e);
+    }
+    return id;
+  }
+
+  private String[] getGroupIdInfo(String userName)
+      throws ContainerExecutionException {
+    String[] id = null;
+    Shell.ShellCommandExecutor shexec = new Shell.ShellCommandExecutor(
+        new String[]{"id", "-G", userName});
+    try {
+      shexec.execute();
+      id = shexec.getOutput().replace("\n", "").split(" ");
+    } catch (Exception e) {
+      throw new ContainerExecutionException(e);
+    }
+    return id;
+  }
+
+    String dockerRunAsUser = runAsUser;
+    String[] groups = null;
+
+    if (enableUserReMapping) {
+      String uid = getUserIdInfo(runAsUser);
+      groups = getGroupIdInfo(runAsUser);
+      String gid = groups[0];
+      if(Integer.parseInt(uid) < userRemappingUidThreshold) {
+        String message = "uid: " + uid + " below threshold: "
+            + userRemappingUidThreshold;
+        throw new ContainerExecutionException(message);
+      }
+      for(int i = 0; i < groups.length; i++) {
+        String group = groups[i];
+        if (Integer.parseInt(group) < userRemappingGidThreshold) {
+          String message = "gid: " + group
+              + " below threshold: " + userRemappingGidThreshold;
+          throw new ContainerExecutionException(message);
+        }
+      }
+      dockerRunAsUser = uid + ":" + gid;
+    }
+
-        runAsUser, imageName)
+        dockerRunAsUser, imageName)
+    if(enableUserReMapping) {
+      runCommand.groupAdd(groups);
+    }
+

INS26 INS40 INS23 INS23 INS23 INS23 INS31 INS31 INS78 INS83 INS83 INS83 INS43 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS43 INS42 INS44 INS43 INS8 INS83 INS5 INS42 INS44 INS43 INS8 INS40 INS42 INS42 INS45 INS42 INS42 INS42 INS21 INS21 INS21 INS42 INS43 INS42 INS42 INS60 INS60 INS54 INS41 INS43 INS85 INS43 INS42 INS42 INS60 INS60 INS54 INS41 INS60 INS60 INS25 INS25 INS7 INS7 INS7 INS42 INS43 INS59 INS43 INS59 INS8 INS12 INS42 INS42 INS42 INS5 INS59 INS43 INS59 INS8 INS12 INS42 INS43 INS59 INS5 INS59 INS42 INS8 INS42 INS8 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS45 INS40 INS42 INS14 INS21 INS21 INS44 INS8 INS43 INS85 INS42 INS33 INS40 INS42 INS14 INS21 INS21 INS44 INS8 INS42 INS42 INS42 INS43 INS85 INS42 INS33 INS60 INS21 INS60 INS25 INS24 INS21 INS21 INS42 INS42 INS40 INS40 INS42 INS42 INS40 INS40 INS42 INS42 INS40 INS40 INS43 INS3 INS32 INS7 INS43 INS42 INS53 INS42 INS43 INS3 INS32 INS7 INS43 INS42 INS53 INS42 INS43 INS59 INS7 INS43 INS59 INS27 INS8 INS58 INS27 INS37 INS8 INS7 INS32 INS40 INS5 INS4 INS42 INS42 INS42 INS32 INS42 INS14 INS40 INS5 INS4 INS42 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS2 INS32 INS42 INS60 INS53 INS39 INS59 INS42 INS40 INS42 INS60 INS25 INS42 INS27 INS42 INS42 INS42 INS43 INS85 INS45 INS45 INS42 INS32 INS42 INS45 INS45 INS43 INS42 INS43 INS85 INS45 INS45 INS42 INS32 INS42 INS45 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS43 INS59 INS14 INS42 INS34 INS43 INS59 INS27 INS8 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS45 INS45 INS42 INS42 INS42 INS27 INS43 INS42 INS42 INS42 INS2 INS32 INS42 INS60 INS53 UPD42 INS42 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS14 INS42 INS42 INS27 INS43 INS42 INS45 INS42 INS45 INS42 INS42