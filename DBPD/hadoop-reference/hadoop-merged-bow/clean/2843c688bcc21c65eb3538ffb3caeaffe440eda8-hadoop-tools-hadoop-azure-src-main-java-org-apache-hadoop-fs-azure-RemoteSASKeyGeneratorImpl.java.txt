HADOOP-14642. wasb: add support for caching Authorization and SASKeys. Contributed by Sivaguru Sankaridurg.

+import java.util.concurrent.TimeUnit;
+  /**
+   * Saskey caching period
+   */
+  private static final String SASKEY_CACHEENTRY_EXPIRY_PERIOD =
+      "fs.azure.saskey.cacheentry.expiry.period";
+  private CachingAuthorizer<CachedSASKeyEntry, URI> cache;
+
+  private static final int HOURS_IN_DAY = 24;
+  private static final int MINUTES_IN_HOUR = 60;
+
+    /* Expire the cache entry five minutes before the actual saskey expiry, so that we never encounter a case
+     * where a stale sas-key-entry is picked up from the cache; which is expired on use.
+     */
+    long sasKeyExpiryPeriodInMinutes = getSasKeyExpiryPeriod() * HOURS_IN_DAY * MINUTES_IN_HOUR; // sas-expiry is in days, convert into mins
+    long cacheEntryDurationInMinutes =
+        conf.getTimeDuration(SASKEY_CACHEENTRY_EXPIRY_PERIOD, sasKeyExpiryPeriodInMinutes, TimeUnit.MINUTES);
+    cacheEntryDurationInMinutes = (cacheEntryDurationInMinutes > (sasKeyExpiryPeriodInMinutes - 5))
+        ? (sasKeyExpiryPeriodInMinutes - 5)
+        : cacheEntryDurationInMinutes;
+    this.cache = new CachingAuthorizer<>(cacheEntryDurationInMinutes, "SASKEY");
+    this.cache.init(conf);
+      CachedSASKeyEntry cacheKey = new CachedSASKeyEntry(storageAccount, container, "/");
+      URI cacheResult = cache.get(cacheKey);
+      if (cacheResult != null) {
+        return cacheResult;
+      }
+
+      LOG.debug("Generating Container SAS Key: Storage Account {}, Container {}", storageAccount, container);
-        return new URI(sasKeyResponse.getSasKey());
+        URI sasKey = new URI(sasKeyResponse.getSasKey());
+        cache.put(cacheKey, sasKey);
+        return sasKey;
+      CachedSASKeyEntry cacheKey = new CachedSASKeyEntry(storageAccount, container, relativePath);
+      URI cacheResult = cache.get(cacheKey);
+      if (cacheResult != null) {
+        return cacheResult;
+      }
+
+      LOG.debug("Generating RelativePath SAS Key for relativePath {} inside Container {} inside Storage Account {}",
+          relativePath, container, storageAccount);
+
-        return new URI(sasKeyResponse.getSasKey());
+        URI sasKey = new URI(sasKeyResponse.getSasKey());
+        cache.put(cacheKey, sasKey);
+        return sasKey;

INS26 INS40 INS23 INS23 INS23 INS23 INS29 INS83 INS83 INS83 INS43 INS59 INS83 INS74 INS59 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 INS65 INS42 INS42 INS45 INS43 INS43 INS43 INS42 INS42 INS34 INS42 INS34 INS60 INS60 INS21 INS21 INS21 INS66 INS42 INS42 INS42 INS39 INS59 INS39 INS59 INS7 INS7 INS32 INS42 INS27 INS42 INS32 INS42 INS16 INS22 INS14 INS22 INS42 INS42 INS60 INS60 INS25 INS21 INS25 INS60 INS60 INS25 INS21 MOV25 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS36 INS36 INS42 INS52 INS42 INS74 INS42 INS45 INS52 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS32 MOV27 INS8 MOV8 INS43 INS59 INS43 INS59 INS27 INS8 INS32 INS42 INS27 INS27 INS43 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS33 INS41 INS42 INS42 INS45 INS42 INS42 INS60 INS21 INS41 INS42 INS42 INS14 MOV42 INS42 INS32 INS42 INS33 INS41 INS42 INS42 INS45 UPD42 MOV42 INS42 UPD42 MOV42 INS60 INS21 INS42 INS36 INS42 INS34 INS42 INS43 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS42 INS43 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS43 INS59 INS32 INS42 INS27 INS42 INS42 INS42 MOV14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV14 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS42 DEL41 DEL8 DEL25