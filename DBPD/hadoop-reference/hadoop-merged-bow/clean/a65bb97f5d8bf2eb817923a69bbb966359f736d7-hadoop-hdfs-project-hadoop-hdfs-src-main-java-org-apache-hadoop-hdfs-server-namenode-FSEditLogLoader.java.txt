HDFS-13791. Limit logging frequency of edit tail related statements. Contributed by Erik Krogen.

-import static org.apache.hadoop.util.Time.monotonicNow;
+import org.apache.hadoop.log.LogThrottlingHelper;
+import org.apache.hadoop.util.Timer;
+import com.google.common.annotations.VisibleForTesting;
+import static org.apache.hadoop.log.LogThrottlingHelper.LogAction;
+
+  /** Limit logging about edit loading to every 5 seconds max. */
+  @VisibleForTesting
+  static final long LOAD_EDIT_LOG_INTERVAL_MS = 5000;
+  private final LogThrottlingHelper loadEditsLogHelper =
+      new LogThrottlingHelper(LOAD_EDIT_LOG_INTERVAL_MS);
+
+  private final Timer timer;
+    this(fsNamesys, lastAppliedTxId, new Timer());
+  }
+
+  @VisibleForTesting
+  FSEditLogLoader(FSNamesystem fsNamesys, long lastAppliedTxId, Timer timer) {
+    this.timer = timer;
-      long startTime = monotonicNow();
-      FSImage.LOG.info("Start loading edits file " + edits.getName()
-          + " maxTxnsToRead = " + maxTxnsToRead);
+      long startTime = timer.monotonicNow();
+      LogAction preLogAction = loadEditsLogHelper.record("pre", startTime);
+      if (preLogAction.shouldLog()) {
+        FSImage.LOG.info("Start loading edits file " + edits.getName()
+            + " maxTxnsToRead = " + maxTxnsToRead +
+            LogThrottlingHelper.getLogSupressionMessage(preLogAction));
+      }
-      FSImage.LOG.info("Edits file " + edits.getName() 
-          + " of size " + edits.length() + " edits # " + numEdits 
-          + " loaded in " + (monotonicNow()-startTime)/1000 + " seconds");
+      long endTime = timer.monotonicNow();
+      LogAction postLogAction = loadEditsLogHelper.record("post", endTime,
+          numEdits, edits.length(), endTime - startTime);
+      if (postLogAction.shouldLog()) {
+        FSImage.LOG.info("Loaded {} edits file(s) (the last named {}) of " +
+                "total size {}, total edits {}, total load time {} ms",
+            postLogAction.getCount(), edits.getName(),
+            postLogAction.getStats(1).getSum(),
+            postLogAction.getStats(0).getSum(),
+            postLogAction.getStats(2).getSum());
+      }
-    long lastLogTime = monotonicNow();
+    long lastLogTime = timer.monotonicNow();
-            long now = monotonicNow();
+            long now = timer.monotonicNow();

MOV26 INS26 INS26 INS26 INS40 UPD40 INS40 INS40 INS23 INS23 INS23 INS31 INS29 INS78 INS83 INS83 INS39 INS59 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS42 INS44 INS44 INS8 INS78 INS44 INS65 INS42 INS42 INS34 INS42 INS42 INS14 INS42 INS42 INS43 INS42 INS39 INS42 INS17 INS42 INS43 INS42 INS21 INS66 INS43 INS42 INS42 INS42 INS42 INS14 INS42 INS7 INS42 INS43 INS22 INS42 INS60 INS25 INS60 INS60 INS25 INS42 INS52 INS42 INS43 INS59 INS32 INS8 INS39 INS59 INS43 INS59 INS32 INS8 INS42 INS42 INS42 INS32 INS42 INS42 MOV21 INS42 INS32 INS42 INS42 INS32 INS42 INS42 MOV21 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 MOV32 INS27 INS42 INS42 INS27 INS32 MOV32 INS32 INS32 INS32 MOV32 INS32 UPD45 MOV45 UPD45 MOV45 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS34 INS42 INS42 INS34 INS42 INS42 INS34 INS42 DEL83 DEL45 DEL42 DEL45 DEL32 DEL42 DEL27 DEL36 DEL34 DEL27 DEL27 DEL45 DEL27