HDFS-4534. Add INodeReference in order to support rename with snapshots.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1458164 13f79535-47bb-0310-9956-ffa450edef68

-public class INodeDirectory extends INode {
+public class INodeDirectory extends INodeWithAdditionalFields {
-  private int searchChildrenForExistingINode(final INode inode) {
-    Preconditions.checkNotNull(children);
-    final byte[] name = inode.getLocalNameBytes();
-    final int i = searchChildren(name);
-    if (i < 0) {
-      throw new AssertionError("Child not found: name="
-          + DFSUtil.bytes2String(name));
-    }
-    return i;
-  }
-
-    Preconditions.checkNotNull(children);
-    final INodeDirectory parent = getParent();
-    Preconditions.checkArgument(parent != null, "parent is null, this=%s", this);
-    parent.replaceChild(this, newDir);
+    final INodeReference ref = getParentReference();
+    if (ref != null) {
+      ref.setReferredINode(newDir);
+    } else {
+      final INodeDirectory parent = getParent();
+      Preconditions.checkArgument(parent != null, "parent is null, this=%s", this);
+      parent.replaceChild(this, newDir);
+    }
+    clear();
+  /** Replace the given child with a new child. */
-    final int i = searchChildrenForExistingINode(newChild);
-    final INode removed = children.set(i, newChild);
-    Preconditions.checkState(removed == oldChild);
-    oldChild.clearReferences();
+    final int i = searchChildren(newChild.getLocalNameBytes());
+    Preconditions.checkState(i >= 0);
+    Preconditions.checkState(oldChild == children.get(i));
+    
+    if (oldChild.isReference()) {
+      final INode withCount = oldChild.asReference().getReferredINode();
+      withCount.asReference().setReferredINode(newChild);
+    } else {
+      final INode removed = children.set(i, newChild);
+      Preconditions.checkState(removed == oldChild);
+    }
+  }
+
+  INodeReference.WithCount replaceChild4Reference(INode oldChild) {
+    Preconditions.checkArgument(!oldChild.isReference());
+    final INodeReference.WithCount withCount
+        = new INodeReference.WithCount(oldChild);
+    final INodeReference ref = new INodeReference(withCount);
+    withCount.incrementReferenceCount();
+    replaceChild(oldChild, ref);
+    return withCount;
+    oldChild.clear();
-  public void clearReferences() {
-    super.clearReferences();
+  public void clear() {
+    super.clear();
-    clearReferences();
+    clear();
-      inodes[i] = inode;
+      inodes[i >= 0? i: inodes.length + i] = inode;

MOV31 INS43 INS42 INS8 INS29 INS8 INS43 UPD42 UPD42 INS60 INS25 INS21 MOV41 INS65 MOV21 INS60 INS21 INS21 INS25 INS40 MOV43 UPD42 INS21 INS21 INS21 INS83 INS43 INS59 INS27 INS8 MOV8 INS32 INS66 INS83 INS39 INS59 INS32 INS32 INS32 INS8 MOV8 INS43 INS43 INS32 INS32 UPD42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS60 INS21 UPD42 INS38 INS40 UPD42 INS14 INS42 UPD42 INS14 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD42 UPD42 INS42 INS32 INS42 INS32 INS42 INS34 INS42 INS32 INS83 MOV43 INS59 INS32 INS32 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 UPD42 MOV42 INS42 INS40 INS42 INS16 INS32 INS42 INS42 INS42 INS27 INS42 INS27 INS42 INS42 INS42 INS34 INS40 INS42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL83 DEL39 DEL83 DEL39 DEL85 DEL5 DEL42 DEL42 DEL32 DEL39 DEL42 DEL42 DEL32 DEL42 DEL34 DEL27 DEL42 DEL43 DEL45 DEL32 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42