Merge trunk into HDFS-1623 branch.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1158072 13f79535-47bb-0310-9956-ffa450edef68

-
+import org.apache.hadoop.mapreduce.FileSystemCounter;
-  protected MapOutputFile mapOutputFile = new MapOutputFile();
+  protected MapOutputFile mapOutputFile;
-    private long prevReadBytes = 0;
-    private long prevWriteBytes = 0;
-    private Counters.Counter readCounter = null;
-    private Counters.Counter writeCounter = null;
-    private String[] counterNames;
+    private Counters.Counter readBytesCounter, writeBytesCounter,
+        readOpsCounter, largeReadOpsCounter, writeOpsCounter;
-    FileSystemStatisticUpdater(String uriScheme, FileSystem.Statistics stats) {
+    FileSystemStatisticUpdater(FileSystem.Statistics stats) {
-      this.counterNames = getFileSystemCounterNames(uriScheme);
-      long newReadBytes = stats.getBytesRead();
-      long newWriteBytes = stats.getBytesWritten();
-      if (prevReadBytes != newReadBytes) {
-        if (readCounter == null) {
-          readCounter = counters.findCounter(FILESYSTEM_COUNTER_GROUP, 
-              counterNames[0]);
-        }
-        readCounter.increment(newReadBytes - prevReadBytes);
-        prevReadBytes = newReadBytes;
+      String scheme = stats.getScheme();
+      if (readBytesCounter == null) {
+        readBytesCounter = counters.findCounter(scheme,
+            FileSystemCounter.BYTES_READ);
-      if (prevWriteBytes != newWriteBytes) {
-        if (writeCounter == null) {
-          writeCounter = counters.findCounter(FILESYSTEM_COUNTER_GROUP, 
-              counterNames[1]);
-        }
-        writeCounter.increment(newWriteBytes - prevWriteBytes);
-        prevWriteBytes = newWriteBytes;
+      readBytesCounter.setValue(stats.getBytesRead());
+      if (writeBytesCounter == null) {
+        writeBytesCounter = counters.findCounter(scheme,
+            FileSystemCounter.BYTES_WRITTEN);
+      writeBytesCounter.setValue(stats.getBytesWritten());
+      if (readOpsCounter == null) {
+        readOpsCounter = counters.findCounter(scheme,
+            FileSystemCounter.READ_OPS);
+      }
+      readOpsCounter.setValue(stats.getReadOps());
+      if (largeReadOpsCounter == null) {
+        largeReadOpsCounter = counters.findCounter(scheme,
+            FileSystemCounter.LARGE_READ_OPS);
+      }
+      largeReadOpsCounter.setValue(stats.getLargeReadOps());
+      if (writeOpsCounter == null) {
+        writeOpsCounter = counters.findCounter(scheme,
+            FileSystemCounter.WRITE_OPS);
+      }
+      writeOpsCounter.setValue(stats.getWriteOps());
-        updater = new FileSystemStatisticUpdater(uriScheme, stat);
+        updater = new FileSystemStatisticUpdater(stat);
-    this.mapOutputFile.setConf(this.conf);
+    this.mapOutputFile = ReflectionUtils.newInstance(
+        conf.getClass(MRConfig.TASK_LOCAL_OUTPUT_CLASS,
+          MROutputFiles.class, MapOutputFile.class), conf);

MOV26 INS26 INS40 INS23 MOV83 MOV43 MOV59 MOV59 MOV59 MOV59 MOV59 UPD42 UPD42 UPD42 UPD42 UPD42 INS25 INS21 MOV25 INS21 INS25 INS21 MOV25 MOV21 INS25 INS21 INS7 MOV43 INS27 INS8 INS32 INS32 INS27 INS8 INS32 INS27 INS8 INS32 MOV22 INS32 INS42 INS32 INS42 INS33 INS21 INS42 INS42 MOV32 UPD42 UPD42 MOV42 UPD42 MOV42 MOV32 UPD42 MOV42 INS33 MOV21 INS42 INS42 INS32 UPD42 UPD42 UPD42 INS32 INS42 INS33 MOV21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS40 INS57 INS57 INS42 INS32 UPD42 UPD42 INS32 UPD42 UPD42 INS32 INS43 MOV43 INS42 INS42 INS42 INS40 UPD42 INS40 INS42 INS42 INS42 INS40 UPD42 INS40 INS42 INS42 INS42 INS40 INS42 DEL14 DEL39 DEL23 DEL83 DEL39 DEL23 DEL34 DEL34 DEL33 DEL33 DEL83 DEL23 DEL83 DEL40 DEL43 DEL23 DEL83 DEL85 DEL5 DEL23 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL39 DEL42 DEL42 DEL34 DEL2 DEL42 DEL42 DEL34 DEL2 DEL42 DEL42 DEL27 DEL42 DEL39 DEL42 DEL59 DEL60 DEL42 DEL42 DEL27 DEL42 DEL27 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL27 DEL8 DEL25 DEL42 DEL52 DEL42 DEL22 DEL32