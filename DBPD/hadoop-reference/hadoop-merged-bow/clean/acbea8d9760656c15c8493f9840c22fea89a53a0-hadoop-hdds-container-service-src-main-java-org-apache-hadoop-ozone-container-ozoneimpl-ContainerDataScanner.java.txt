HDDS-1708. Add container scrubber metrics.
Contributed by Hrishikesh Gadre.

+import java.util.concurrent.TimeUnit;
+import com.google.common.annotations.VisibleForTesting;
+import org.apache.hadoop.conf.Configuration;
+  private final ContainerDataScrubberMetrics metrics;
-  public ContainerDataScanner(ContainerController controller,
+  public ContainerDataScanner(Configuration conf,
+                              ContainerController controller,
-    this.throttler = new DataTransferThrottler(bytesPerSec);
+    this.throttler = new HddsDataTransferThrottler(bytesPerSec);
+    this.metrics = ContainerDataScrubberMetrics.create(conf,
+        volume.toString());
-        Iterator<Container> itr = controller.getContainers(volume);
-        while (!stopping && itr.hasNext()) {
-          Container c = itr.next();
-          try {
-            if (c.shouldScanData()) {
-              if(!c.scanData(throttler, canceler)) {
-                controller.markContainerUnhealthy(
-                    c.getContainerData().getContainerID());
-              }
-            }
-          } catch (IOException ex) {
-            long containerId = c.getContainerData().getContainerID();
-            LOG.warn("Unexpected exception while scanning container "
-                + containerId, ex);
-          }
-        }
+        runIteration();
+        metrics.resetNumContainersScanned();
+        metrics.resetNumUnhealthyContainers();
+    } finally {
+      if (metrics != null) {
+        metrics.unregister();
+      }
+    }
+  }
+
+  @VisibleForTesting
+  public void runIteration() {
+    long startTime = System.nanoTime();
+    Iterator<Container> itr = controller.getContainers(volume);
+    while (!stopping && itr.hasNext()) {
+      Container c = itr.next();
+      if (c.shouldScanData()) {
+        try {
+          if (!c.scanData(throttler, canceler)) {
+            metrics.incNumUnHealthyContainers();
+            controller.markContainerUnhealthy(
+                c.getContainerData().getContainerID());
+          }
+        } catch (IOException ex) {
+          long containerId = c.getContainerData().getContainerID();
+          LOG.warn("Unexpected exception while scanning container "
+              + containerId, ex);
+        } finally {
+          metrics.incNumContainersScanned();
+        }
+      }
+    }
+    long totalDuration = System.nanoTime() - startTime;
+    if (!stopping) {
+      metrics.incNumScanIterations();
+      LOG.info("Completed an iteration of container data scrubber in" +
+              " {} minutes." +
+              " Number of  iterations (since the data-node restart) : {}" +
+              ", Number of containers scanned in this iteration : {}" +
+              ", Number of unhealthy containers found in this iteration : {}",
+          TimeUnit.NANOSECONDS.toMinutes(totalDuration),
+          metrics.getNumScanIterations(),
+          metrics.getNumContainersScanned(),
+          metrics.getNumUnHealthyContainers());
+  @VisibleForTesting
+  public ContainerDataScrubberMetrics getMetrics() {
+    return metrics;
+  }
+
+
+  private class HddsDataTransferThrottler extends DataTransferThrottler {
+    HddsDataTransferThrottler(long bandwidthPerSec) {
+      super(bandwidthPerSec);
+    }
+
+    @Override
+    public synchronized void throttle(long numOfBytes) {
+      ContainerDataScanner.this.metrics.incNumBytesScanned(numOfBytes);
+      super.throttle(numOfBytes);
+    }
+
+    @Override
+    public synchronized void throttle(long numOfBytes, Canceler c) {
+      ContainerDataScanner.this.metrics.incNumBytesScanned(numOfBytes);
+      super.throttle(numOfBytes, c);
+    }
+  }

INS26 INS26 INS26 INS40 INS40 INS40 INS83 INS42 INS23 INS31 INS31 INS55 INS83 INS83 INS43 INS59 INS44 MOV78 INS83 INS39 INS42 INS8 INS78 UPD42 MOV8 INS78 INS83 INS43 INS42 INS8 INS83 INS42 MOV43 INS31 INS31 INS31 INS42 INS42 INS43 INS42 INS21 MOV21 INS54 INS42 INS60 MOV60 INS61 MOV60 INS25 INS42 INS42 INS41 INS42 INS44 INS8 INS78 INS83 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS7 INS8 MOV12 INS8 INS39 INS59 MOV27 MOV8 INS38 INS8 INS42 INS39 INS42 INS46 INS42 INS39 INS42 INS21 INS21 INS42 INS39 INS42 INS43 INS42 INS21 INS21 INS22 INS32 INS61 MOV21 INS25 INS42 INS32 MOV60 UPD42 INS27 INS42 INS21 MOV21 INS42 INS32 INS48 INS42 INS32 INS48 INS43 INS52 INS42 INS42 INS42 INS42 INS32 MOV38 INS8 INS27 INS8 INS42 INS42 INS8 INS32 INS42 INS32 INS22 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS21 INS21 INS42 INS33 INS21 INS54 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD42 INS32 INS32 INS32 INS32 INS52 INS42 INS52 INS42 INS32 INS32 INS32 INS32 MOV8 MOV12 INS8 INS45 INS45 INS45 UPD45 INS45 INS40 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS60 INS21 INS32 INS21 INS39 INS59 INS32 INS42 INS42 INS32 INS42 MOV32 INS42 INS42 INS27 INS42 INS42 INS42 INS45 MOV42 INS42 INS42 DEL83 DEL42 DEL54 DEL61 DEL8 DEL61 DEL8 DEL54 DEL8