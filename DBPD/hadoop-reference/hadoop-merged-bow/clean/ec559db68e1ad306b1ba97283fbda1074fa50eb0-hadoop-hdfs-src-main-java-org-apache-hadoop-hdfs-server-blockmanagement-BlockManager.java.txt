HDFS-1480. All replicas of a block can end up on the same rack when some datanodes are decommissioning. Contributed by Todd Lipcon.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1160897 13f79535-47bb-0310-9956-ffa450edef68

+import com.google.common.annotations.VisibleForTesting;
+
-  private final PendingReplicationBlocks pendingReplications;
+  @VisibleForTesting
+  final PendingReplicationBlocks pendingReplications;
+        List<DatanodeDescriptor> containingLiveReplicasNodes =
+          new ArrayList<DatanodeDescriptor>();
+        
-        chooseSourceDatanode(block, containingNodes, numReplicas);
+        chooseSourceDatanode(block, containingNodes,
+            containingLiveReplicasNodes, numReplicas);
+        assert containingLiveReplicasNodes.size() == numReplicas.liveReplicas();
-  private boolean computeReplicationWorkForBlock(Block block, int priority) {
+  @VisibleForTesting
+  boolean computeReplicationWorkForBlock(Block block, int priority) {
-    List<DatanodeDescriptor> containingNodes;
+    List<DatanodeDescriptor> containingNodes, liveReplicaNodes;
+        liveReplicaNodes = new ArrayList<DatanodeDescriptor>();
-        srcNode = chooseSourceDatanode(block, containingNodes, numReplicas);
+        srcNode = chooseSourceDatanode(
+            block, containingNodes, liveReplicaNodes, numReplicas);
+        assert liveReplicaNodes.size() == numReplicas.liveReplicas();
+    
+    // Exclude all of the containing nodes from being targets.
+    // This list includes decommissioning or corrupt nodes.
+    HashMap<Node, Node> excludedNodes = new HashMap<Node, Node>();
+    for (DatanodeDescriptor dn : containingNodes) {
+      excludedNodes.put(dn, dn);
+    }
-                       srcNode, containingNodes, block.getNumBytes());
+                       srcNode, liveReplicaNodes, excludedNodes, block.getNumBytes());
+                                    List<DatanodeDescriptor> nodesContainingLiveReplicas,
+    nodesContainingLiveReplicas.clear();
+        nodesContainingLiveReplicas.add(node);
-  private void addBlock(DatanodeDescriptor node, Block block, String delHint)
+  @VisibleForTesting
+  void addBlock(DatanodeDescriptor node, Block block, String delHint)

INS26 INS40 INS78 INS78 INS44 INS78 INS42 INS42 INS60 INS70 INS74 INS42 INS21 INS42 INS59 INS74 INS59 INS44 INS42 INS8 INS43 INS43 INS32 INS42 INS43 INS43 INS43 INS42 INS14 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS32 INS42 UPD42 INS60 INS6 INS21 INS6 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS74 INS59 INS27 INS7 INS27 INS42 INS42 INS42 INS43 INS43 INS42 INS14 INS42 INS32 INS32 INS42 INS14 INS32 INS32 INS21 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL83 DEL83 DEL83