HADOOP-10693. Implementation of AES-CTR CryptoCodec using JNI to OpenSSL (hitliuyi via cmccabe)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1607768 13f79535-47bb-0310-9956-ffa450edef68

-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.hadoop.crypto;
-
-import org.apache.hadoop.classification.InterfaceAudience;
-import org.apache.hadoop.classification.InterfaceStability;
-
-import com.google.common.base.Preconditions;
-
-@InterfaceAudience.Private
-@InterfaceStability.Evolving
-public abstract class AESCTRCryptoCodec extends CryptoCodec {
-
-  protected static final CipherSuite SUITE = CipherSuite.AES_CTR_NOPADDING;
-
-  /**
-   * For AES, the algorithm block is fixed size of 128 bits.
-   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard
-   */
-  private static final int AES_BLOCK_SIZE = SUITE.getAlgorithmBlockSize();
-  private static final int CTR_OFFSET = 8;
-
-  @Override
-  public CipherSuite getCipherSuite() {
-    return SUITE;
-  }
-  
-  /**
-   * The IV is produced by adding the initial IV to the counter. IV length 
-   * should be the same as {@link #AES_BLOCK_SIZE}
-   */
-  @Override
-  public void calculateIV(byte[] initIV, long counter, byte[] IV) {
-    Preconditions.checkArgument(initIV.length == AES_BLOCK_SIZE);
-    Preconditions.checkArgument(IV.length == AES_BLOCK_SIZE);
-    
-    System.arraycopy(initIV, 0, IV, 0, CTR_OFFSET);
-    long l = (initIV[CTR_OFFSET + 0] << 56)
-        + ((initIV[CTR_OFFSET + 1] & 0xFF) << 48)
-        + ((initIV[CTR_OFFSET + 2] & 0xFF) << 40)
-        + ((initIV[CTR_OFFSET + 3] & 0xFF) << 32)
-        + ((initIV[CTR_OFFSET + 4] & 0xFF) << 24)
-        + ((initIV[CTR_OFFSET + 5] & 0xFF) << 16)
-        + ((initIV[CTR_OFFSET + 6] & 0xFF) << 8)
-        + (initIV[CTR_OFFSET + 7] & 0xFF);
-    l += counter;
-    IV[CTR_OFFSET + 0] = (byte) (l >>> 56);
-    IV[CTR_OFFSET + 1] = (byte) (l >>> 48);
-    IV[CTR_OFFSET + 2] = (byte) (l >>> 40);
-    IV[CTR_OFFSET + 3] = (byte) (l >>> 32);
-    IV[CTR_OFFSET + 4] = (byte) (l >>> 24);
-    IV[CTR_OFFSET + 5] = (byte) (l >>> 16);
-    IV[CTR_OFFSET + 6] = (byte) (l >>> 8);
-    IV[CTR_OFFSET + 7] = (byte) (l);
-  }
-}

DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL29 DEL40 DEL35 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL78 DEL40 DEL78 DEL83 DEL83 DEL42 DEL42 DEL43 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL40 DEL59 DEL23 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL66 DEL66 DEL42 DEL67 DEL65 DEL65 DEL29 DEL42 DEL78 DEL83 DEL39 DEL42 DEL39 DEL85 DEL5 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL85 DEL5 DEL42 DEL44 DEL42 DEL42 DEL40 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL40 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL34 DEL42 DEL34 DEL42 DEL32 DEL21 DEL39 DEL42 DEL42 DEL42 DEL34 DEL27 DEL2 DEL34 DEL27 DEL36 DEL42 DEL42 DEL34 DEL27 DEL2 DEL34 DEL27 DEL36 DEL34 DEL27 DEL36 DEL42 DEL42 DEL34 DEL27 DEL2 DEL34 DEL27 DEL36 DEL34 DEL27 DEL36 DEL42 DEL42 DEL34 DEL27 DEL2 DEL34 DEL27 DEL36 DEL34 DEL27 DEL36 DEL42 DEL42 DEL34 DEL27 DEL2 DEL34 DEL27 DEL36 DEL34 DEL27 DEL36 DEL42 DEL42 DEL34 DEL27 DEL2 DEL34 DEL27 DEL36 DEL34 DEL27 DEL36 DEL42 DEL42 DEL34 DEL27 DEL2 DEL34 DEL27 DEL36 DEL34 DEL27 DEL36 DEL42 DEL42 DEL34 DEL27 DEL2 DEL34 DEL27 DEL36 DEL27 DEL59 DEL60 DEL42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL34 DEL27 DEL2 DEL39 DEL42 DEL34 DEL27 DEL36 DEL11 DEL7 DEL21 DEL42 DEL42 DEL34 DEL27 DEL2 DEL39 DEL42 DEL34 DEL27 DEL36 DEL11 DEL7 DEL21 DEL42 DEL42 DEL34 DEL27 DEL2 DEL39 DEL42 DEL34 DEL27 DEL36 DEL11 DEL7 DEL21 DEL42 DEL42 DEL34 DEL27 DEL2 DEL39 DEL42 DEL34 DEL27 DEL36 DEL11 DEL7 DEL21 DEL42 DEL42 DEL34 DEL27 DEL2 DEL39 DEL42 DEL34 DEL27 DEL36 DEL11 DEL7 DEL21 DEL42 DEL42 DEL34 DEL27 DEL2 DEL39 DEL42 DEL34 DEL27 DEL36 DEL11 DEL7 DEL21 DEL42 DEL42 DEL34 DEL27 DEL2 DEL39 DEL42 DEL34 DEL27 DEL36 DEL11 DEL7 DEL21 DEL42 DEL42 DEL34 DEL27 DEL2 DEL39 DEL42 DEL36 DEL11 DEL7 DEL21 DEL8 DEL31 DEL55