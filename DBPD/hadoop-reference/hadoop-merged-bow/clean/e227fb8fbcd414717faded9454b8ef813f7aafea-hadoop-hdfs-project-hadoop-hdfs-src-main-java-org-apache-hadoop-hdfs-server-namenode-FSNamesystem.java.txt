HDFS-7459. Consolidate cache-related implementation in FSNamesystem into a single class. Contributed by Haohui Mai.

-  
+
+  boolean isPermissionEnabled() {
+    return isPermissionEnabled;
+  }
+
-  private FSPermissionChecker getPermissionChecker()
+  FSPermissionChecker getPermissionChecker()
-    final FSPermissionChecker pc = isPermissionEnabled ?
-        getPermissionChecker() : null;
-
+    CacheDirectiveInfo effectiveDirective = null;
-    boolean success = false;
-    String effectiveDirectiveStr = null;
-    Long result = null;
-      if (directive.getId() != null) {
-        throw new IOException("addDirective: you cannot specify an ID " +
-            "for this operation.");
-      }
-      CacheDirectiveInfo effectiveDirective =
-          cacheManager.addDirective(directive, pc, flags);
-      getEditLog().logAddCacheDirectiveInfo(effectiveDirective, logRetryCache);
-      result = effectiveDirective.getId();
-      effectiveDirectiveStr = effectiveDirective.toString();
-      success = true;
+      effectiveDirective = FSNDNCacheOp.addCacheDirective(this, cacheManager,
+          directive, flags, logRetryCache);
+      boolean success = effectiveDirective != null;
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(success, "addCacheDirective", effectiveDirectiveStr, null, null);
-      }
+      String effectiveDirectiveStr = effectiveDirective != null ?
+          effectiveDirective.toString() : null;
+      logAuditEvent(success, "addCacheDirective", effectiveDirectiveStr,
+          null, null);
-    return result;
+    return effectiveDirective != null ? effectiveDirective.getId() : 0;
-    final FSPermissionChecker pc = isPermissionEnabled ?
-        getPermissionChecker() : null;
-
-      cacheManager.modifyDirective(directive, pc, flags);
-      getEditLog().logModifyCacheDirectiveInfo(directive, logRetryCache);
+      FSNDNCacheOp.modifyCacheDirective(this, cacheManager, directive, flags,
+          logRetryCache);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        String idStr = "{id: " + directive.getId().toString() + "}";
-        logAuditEvent(success, "modifyCacheDirective", idStr, directive.toString(), null);
-      }
+      String idStr = "{id: " + directive.getId().toString() + "}";
+      logAuditEvent(success, "modifyCacheDirective", idStr,
+          directive.toString(), null);
-    final FSPermissionChecker pc = isPermissionEnabled ?
-        getPermissionChecker() : null;
-
-      cacheManager.removeDirective(id, pc);
-      getEditLog().logRemoveCacheDirectiveInfo(id, logRetryCache);
+      FSNDNCacheOp.removeCacheDirective(this, cacheManager, id, logRetryCache);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        String idStr = "{id: " + Long.toString(id) + "}";
-        logAuditEvent(success, "removeCacheDirective", idStr, null,
-            null);
-      }
+      String idStr = "{id: " + Long.toString(id) + "}";
+      logAuditEvent(success, "removeCacheDirective", idStr, null,
+          null);
-    final FSPermissionChecker pc = isPermissionEnabled ?
-        getPermissionChecker() : null;
-      results =
-          cacheManager.listCacheDirectives(startId, filter, pc);
+      results = FSNDNCacheOp.listCacheDirectives(this, cacheManager, startId,
+          filter);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(success, "listCacheDirectives", filter.toString(), null,
-            null);
-      }
+      logAuditEvent(success, "listCacheDirectives", filter.toString(), null,
+          null);
-  public void addCachePool(CachePoolInfo req, boolean logRetryCache)
+  void addCachePool(CachePoolInfo req, boolean logRetryCache)
-    final FSPermissionChecker pc = isPermissionEnabled ?
-        getPermissionChecker() : null;
-
-      if (pc != null) {
-        pc.checkSuperuserPrivilege();
-      }
-      CachePoolInfo info = cacheManager.addCachePool(req);
+      CachePoolInfo info = FSNDNCacheOp.addCachePool(this, cacheManager, req,
+          logRetryCache);
-      getEditLog().logAddCachePool(info, logRetryCache);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(success, "addCachePool", poolInfoStr, null, null);
-      }
+      logAuditEvent(success, "addCachePool", poolInfoStr, null, null);
-  public void modifyCachePool(CachePoolInfo req, boolean logRetryCache)
+  void modifyCachePool(CachePoolInfo req, boolean logRetryCache)
-    final FSPermissionChecker pc =
-        isPermissionEnabled ? getPermissionChecker() : null;
-
-      if (pc != null) {
-        pc.checkSuperuserPrivilege();
-      }
-      cacheManager.modifyCachePool(req);
-      getEditLog().logModifyCachePool(req, logRetryCache);
+      FSNDNCacheOp.modifyCachePool(this, cacheManager, req, logRetryCache);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        String poolNameStr = "{poolName: " + req.getPoolName() + "}";
-        logAuditEvent(success, "modifyCachePool", poolNameStr, req.toString(), null);
-      }
+      String poolNameStr = "{poolName: " +
+          (req == null ? null : req.getPoolName()) + "}";
+      logAuditEvent(success, "modifyCachePool", poolNameStr,
+                    req == null ? null : req.toString(), null);
-  public void removeCachePool(String cachePoolName, boolean logRetryCache)
+  void removeCachePool(String cachePoolName, boolean logRetryCache)
-    final FSPermissionChecker pc =
-        isPermissionEnabled ? getPermissionChecker() : null;
-
-      if (pc != null) {
-        pc.checkSuperuserPrivilege();
-      }
-      cacheManager.removeCachePool(cachePoolName);
-      getEditLog().logRemoveCachePool(cachePoolName, logRetryCache);
+      FSNDNCacheOp.removeCachePool(this, cacheManager, cachePoolName,
+          logRetryCache);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        String poolNameStr = "{poolName: " + cachePoolName + "}";
-        logAuditEvent(success, "removeCachePool", poolNameStr, null, null);
-      }
+      String poolNameStr = "{poolName: " + cachePoolName + "}";
+      logAuditEvent(success, "removeCachePool", poolNameStr, null, null);
-  public BatchedListEntries<CachePoolEntry> listCachePools(String prevKey)
+  BatchedListEntries<CachePoolEntry> listCachePools(String prevKey)
-    final FSPermissionChecker pc =
-        isPermissionEnabled ? getPermissionChecker() : null;
-      results = cacheManager.listCachePools(pc, prevKey);
+      results = FSNDNCacheOp.listCachePools(this, cacheManager, prevKey);
-      if (isAuditEnabled() && isExternalInvocation()) {
-        logAuditEvent(success, "listCachePools", null, null, null);
-      }
+      logAuditEvent(success, "listCachePools", null, null, null);

INS31 INS39 INS42 INS8 MOV8 MOV8 INS41 INS41 MOV21 MOV60 MOV25 MOV21 INS54 MOV21 MOV60 MOV21 INS54 MOV21 INS42 MOV43 INS16 MOV8 MOV8 MOV8 MOV8 MOV8 MOV8 INS8 MOV8 MOV8 UPD42 INS33 INS21 INS60 INS60 MOV21 INS27 MOV32 INS34 MOV21 MOV25 MOV21 UPD42 MOV42 MOV21 MOV21 MOV21 MOV60 MOV21 MOV21 MOV21 INS7 INS39 INS59 MOV43 INS59 INS42 INS33 UPD42 MOV42 INS42 INS32 INS42 INS27 INS42 INS16 UPD42 UPD42 INS52 INS42 INS42 UPD42 MOV42 UPD42 INS52 INS42 UPD42 MOV42 UPD42 INS52 INS42 INS16 INS33 UPD42 MOV42 UPD42 INS52 INS42 UPD42 MOV42 INS42 INS52 MOV42 MOV42 MOV42 MOV42 INS42 INS33 INS27 MOV32 INS33 UPD42 INS52 INS42 UPD42 INS52 INS42 INS42 INS36 INS27 INS33 MOV32 UPD42 INS52 UPD42 INS42 INS33 INS16 INS42 INS33 INS27 INS33 MOV32 INS42 INS33 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL32 DEL33 DEL16 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL32 DEL33 DEL27 DEL42 DEL43 DEL45 DEL45 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL7 DEL21 DEL42 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL42 DEL41 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL32 DEL42 DEL32 DEL27 DEL25 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL33 DEL16 DEL59 DEL60 DEL54 DEL8 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL32 DEL32 DEL32 DEL27 DEL25 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL33 DEL16 DEL59 DEL60 DEL54 DEL8 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL33 DEL16 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL25 DEL8 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL33 DEL16 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL32 DEL42 DEL32 DEL27 DEL25 DEL8 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL33 DEL16 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL32 DEL33 DEL42 DEL32 DEL42 DEL32 DEL27 DEL8 DEL25 DEL8 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL33 DEL16 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL32 DEL42 DEL32 DEL42 DEL32 DEL27 DEL25 DEL8 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL33 DEL16 DEL59 DEL60 DEL42 DEL32 DEL42 DEL32 DEL27 DEL25 DEL8