YARN-4832. NM side resource value should get updated if change applied in RM side. Contributed by Junping Du

+import java.util.concurrent.locks.ReentrantReadWriteLock;
+import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
+import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
+  private final ReadLock readLock;
+  private final WriteLock writeLock;
+
-  private volatile DynamicResourceConfiguration drConf;
+  private DynamicResourceConfiguration drConf;
-
+    ReentrantReadWriteLock lock = new ReentrantReadWriteLock();
+    this.readLock = lock.readLock();
+    this.writeLock = lock.writeLock();
-
+      // write lock here on drConfig is unnecessary as here get called at
+      // ResourceTrackerService get initiated and other read and write
+      // operations haven't started yet.
-    this.drConf = conf;
+    this.writeLock.lock();
+    try {
+      this.drConf = conf;
+    } finally {
+      this.writeLock.unlock();
+    }
+
-    String[] nodes = this.drConf.getNodes();
-    if (nodes != null && Arrays.asList(nodes).contains(nid)) {
-      capability.setMemory(this.drConf.getMemoryPerNode(nid));
-      capability.setVirtualCores(this.drConf.getVcoresPerNode(nid));
+    Resource dynamicLoadCapability = loadNodeResourceFromDRConfiguration(nid);
+    if (dynamicLoadCapability != null) {
-        LOG.debug("Resource for node: " + nid + " is adjusted to " +
-            capability + " due to settings in dynamic-resources.xml.");
+        LOG.debug("Resource for node: " + nid + " is adjusted from: " +
+            capability + " to: " + dynamicLoadCapability +
+            " due to settings in dynamic-resources.xml.");
+      capability = dynamicLoadCapability;
+      // sync back with new resource.
+      response.setResource(capability);
-    // 6. Send Container Queuing Limits back to the Node. This will be used by
-    //    the node to truncate the number of Containers queued for execution.
+    // 6. check if node's capacity is load from dynamic-resources.xml
+    // if so, send updated resource back to NM.
+    String nid = nodeId.toString();
+    Resource capability = loadNodeResourceFromDRConfiguration(nid);
+    // sync back with new resource if not null.
+    if (capability != null) {
+      nodeHeartBeatResponse.setResource(capability);
+    }
+
+    // 7. Send Container Queuing Limits back to the Node. This will be used by
+    // the node to truncate the number of Containers queued for execution.
+  private Resource loadNodeResourceFromDRConfiguration(String nodeId) {
+    // check if node's capacity is loaded from dynamic-resources.xml
+    this.readLock.lock();
+    try {
+      String[] nodes = this.drConf.getNodes();
+      if (nodes != null && Arrays.asList(nodes).contains(nodeId)) {
+        return Resource.newInstance(this.drConf.getMemoryPerNode(nodeId),
+            this.drConf.getVcoresPerNode(nodeId));
+      } else {
+        return null;
+      }
+    } finally {
+      this.readLock.unlock();
+    }
+  }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS31 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS8 INS83 INS43 INS42 INS44 INS8 INS42 INS42 INS42 INS42 INS60 INS21 INS21 INS21 INS54 INS60 INS25 INS60 INS60 INS25 INS42 INS43 INS42 INS21 INS54 INS43 INS59 INS7 INS7 INS32 MOV8 INS8 INS43 INS59 INS27 INS8 INS43 INS59 INS43 INS59 INS27 INS8 INS42 INS32 INS8 INS8 INS42 INS42 INS14 INS22 INS32 INS22 INS32 INS22 INS42 INS21 INS42 INS42 INS32 INS42 INS33 INS25 INS21 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS22 INS42 MOV60 MOV25 INS21 INS43 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS32 INS42 INS42 MOV32 INS8 INS7 INS32 INS42 INS42 INS42 INS42 INS32 INS52 INS42 MOV8 INS8 INS32 INS42 INS22 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS41 INS41 INS22 INS42 INS52 INS42 INS32 UPD42 MOV32 INS33 INS52 INS42 INS42 INS42 INS27 INS42 INS42 INS32 INS45 INS42 INS45 INS42 INS45 INS42 INS45 MOV22 UPD42 MOV42 INS42 UPD42 UPD42 DEL83 DEL42 DEL42 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL27 DEL32 DEL21 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL25 DEL8