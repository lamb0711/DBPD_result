HADOOP-13591. Unit test failure in TestOSSContractGetFileStatus and TestOSSContractRootDir. Contributed by Genmao Yu

+import org.apache.commons.collections.CollectionUtils;
+import org.apache.commons.lang.StringUtils;
-      if (!key.endsWith("/")) {
-        key += "/";
-      }
+          key = AliyunOSSUtils.maybeAddTrailingSlash(key);
-    try {
-      Path pPath = f.getParent();
-      FileStatus pStatus = getFileStatus(pPath);
-      if (pStatus.isFile()) {
-        throw new IOException("Path " + pPath +
-            " is assumed to be a directory!");
-      }
-    } catch (FileNotFoundException fnfe) {
-      // Make sure the parent directory exists
+    String key = pathToKey(f);
+    if (StringUtils.isNotEmpty(key) && !exists(f)) {
+      LOG.debug("Creating new fake directory at {}", f);
-      // Case: dir + "/"
+      // In case of 'dir + "/"'
-      ObjectListing listing = store.listObjects(key, 1, "/", null);
-      if (!listing.getObjectSummaries().isEmpty() ||
-          !listing.getCommonPrefixes().isEmpty()) {
+      ObjectListing listing = store.listObjects(key, 1, null, false);
+      if (CollectionUtils.isNotEmpty(listing.getObjectSummaries()) ||
+          CollectionUtils.isNotEmpty(listing.getCommonPrefixes())) {
-    return !name.isEmpty() && name.endsWith("/") && size == 0L;
+    return StringUtils.isNotEmpty(name) && name.endsWith("/") && size == 0L;
-    if (path.toUri().getScheme() != null && path.toUri().getPath().isEmpty()) {
-      return "";
-    }
-
-      if (!key.endsWith("/")) {
-        key = key + "/";
-      }
-
-      ObjectListing objects = store.listObjects(key, maxKeys, "/", null);
+      ObjectListing objects = store.listObjects(key, maxKeys, null, false);
-          Path keyPath = keyToPath(objectSummary.getKey())
-              .makeQualified(uri, workingDir);
-          if (keyPath.equals(path)) {
+          String objKey = objectSummary.getKey();
+          if (objKey.equals(key + "/")) {
-              LOG.debug("Ignoring: " + keyPath);
+              LOG.debug("Ignoring: " + objKey);
+            Path keyPath = keyToPath(objectSummary.getKey())
+                .makeQualified(uri, workingDir);
-          Path keyPath = keyToPath(prefix).makeQualified(uri, workingDir);
-          if (keyPath.equals(path)) {
+          if (prefix.equals(key + "/")) {
+            if (LOG.isDebugEnabled()) {
+              LOG.debug("Ignoring: " + prefix);
+            }
+            Path keyPath = keyToPath(prefix).makeQualified(uri, workingDir);
-          objects = store.listObjects(key, maxKeys, "/",
-              objects.getNextMarker());
+          String nextMarker = objects.getNextMarker();
+          objects = store.listObjects(key, maxKeys, nextMarker, false);
-    if (!key.endsWith("/")) {
-      dirName += "/";
+    if (StringUtils.isNotEmpty(key)) {
+      if (!key.endsWith("/")) {
+        dirName += "/";
+      }
+      store.storeEmptyFile(dirName);
-    store.storeEmptyFile(dirName);
-  private boolean copyDirectory(Path srcPath, Path dstPath) {
-    String srcKey = pathToKey(srcPath);
-    String dstKey = pathToKey(dstPath);
-
-    if (!srcKey.endsWith("/")) {
-      srcKey = srcKey + "/";
-    }
-    if (!dstKey.endsWith("/")) {
-      dstKey = dstKey + "/";
-    }
+  private boolean copyDirectory(Path srcPath, Path dstPath) throws IOException {
+    String srcKey = AliyunOSSUtils
+        .maybeAddTrailingSlash(pathToKey(srcPath));
+    String dstKey = AliyunOSSUtils
+        .maybeAddTrailingSlash(pathToKey(dstPath));
-    ObjectListing objects = store.listObjects(srcKey, maxKeys, null, null);
+    store.storeEmptyFile(dstKey);
+    ObjectListing objects = store.listObjects(srcKey, maxKeys, null, true);
-        objects = store.listObjects(srcKey, maxKeys, null,
-            objects.getNextMarker());
+        String nextMarker = objects.getNextMarker();
+        objects = store.listObjects(srcKey, maxKeys, nextMarker, true);

INS26 INS26 INS40 INS40 INS8 MOV43 MOV60 INS25 INS25 INS21 UPD43 INS27 MOV8 INS32 INS8 INS32 UPD42 UPD42 INS32 INS38 INS21 INS32 INS42 INS42 INS42 MOV25 MOV21 INS32 INS32 UPD42 MOV42 INS42 MOV42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS32 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 MOV32 INS42 INS42 MOV32 INS9 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS45 INS42 MOV32 MOV32 MOV32 MOV32 INS60 INS9 INS42 UPD42 INS42 UPD42 INS9 INS43 INS59 INS21 INS60 INS60 INS42 INS42 MOV32 INS7 INS43 INS59 INS43 INS59 INS42 INS9 INS42 INS32 INS42 INS42 INS32 UPD42 MOV27 MOV60 UPD42 INS27 INS25 MOV60 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS45 MOV32 INS8 INS42 INS9 INS42 INS42 INS21 INS32 INS42 INS42 INS27 UPD42 INS45 INS42 DEL42 DEL42 DEL45 DEL32 DEL38 DEL42 DEL45 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL43 DEL42 DEL32 DEL59 DEL60 DEL32 DEL45 DEL42 DEL45 DEL27 DEL14 DEL53 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL12 DEL54 DEL8 DEL45 DEL38 DEL38 DEL32 DEL38 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL27 DEL45 DEL41 DEL8 DEL25 DEL42 DEL42 DEL45 DEL32 DEL38 DEL42 DEL7 DEL21 DEL8 DEL25 DEL45 DEL42 DEL42 DEL45 DEL42 DEL45 DEL32 DEL38 DEL42 DEL42 DEL45 DEL27 DEL7 DEL21 DEL8 DEL25 DEL42 DEL45 DEL32 DEL38 DEL42 DEL42 DEL45 DEL27 DEL7 DEL21 DEL8 DEL25 DEL33 DEL33