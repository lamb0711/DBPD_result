HDDS-981. Block allocation should involve pipeline selection and then container selection.
Contributed by Lokesh Jain.

-import org.apache.hadoop.conf.StorageUnit;
+import org.apache.hadoop.hdds.scm.pipeline.Pipeline;
-import static org.apache.hadoop.hdds.scm.ScmConfigKeys
-    .OZONE_SCM_CONTAINER_SIZE_DEFAULT;
-import static org.apache.hadoop.hdds.scm.ScmConfigKeys
-    .OZONE_SCM_CONTAINER_SIZE;
-import static org.apache.hadoop.hdds.scm.exceptions.SCMException.ResultCodes
-    .FAILED_TO_CHANGE_CONTAINER_STATE;
-  private final EventPublisher eventPublisher;
-  private final long size;
-    this.size = (long) conf.getStorageSize(OZONE_SCM_CONTAINER_SIZE,
-        OZONE_SCM_CONTAINER_SIZE_DEFAULT, StorageUnit.BYTES);
-    this.eventPublisher = eventPublisher;
+      ContainerInfo container = containerStateManager.getContainer(containerID);
-      if (!updatedContainer.isOpen()) {
-        pipelineManager.removeContainerFromPipeline(
-            updatedContainer.getPipelineID(), containerID);
+      if (updatedContainer.getState() != LifeCycleState.OPEN
+          && container.getState() == LifeCycleState.OPEN) {
+        pipelineManager
+            .removeContainerFromPipeline(updatedContainer.getPipelineID(),
+                containerID);
-   * @param owner - Owner of the container - A specific nameservice.
-   * @param type - Replication Type {StandAlone, Ratis}
-   * @param factor - Replication Factor {ONE, THREE}
-   * @param state - State of the Container-- {Open, Allocated etc.}
+   * @param owner        - Owner of the container - A specific nameservice.
+   * @param pipeline     - Pipeline to which the container should belong.
-  public ContainerInfo getMatchingContainer(
-      final long sizeRequired, String owner, ReplicationType type,
-      ReplicationFactor factor, LifeCycleState state) throws IOException {
-    return containerStateManager.getMatchingContainer(
-        sizeRequired, owner, type, factor, state);
+  public ContainerInfo getMatchingContainer(final long sizeRequired,
+      String owner, Pipeline pipeline) {
+    try {
+      //TODO: #CLUTIL See if lock is required here
+      return containerStateManager
+          .getMatchingContainer(sizeRequired, owner, pipelineManager,
+              pipeline);
+    } catch (Exception e) {
+      LOG.warn("Container allocation failed for pipeline={} requiredSize={} {}",
+          pipeline, sizeRequired, e);
+      return null;
+    }

MOV26 UPD40 INS8 UPD43 UPD42 INS54 UPD66 UPD42 UPD66 UPD42 INS8 INS12 INS60 INS41 INS44 INS8 INS43 INS59 INS27 INS32 INS43 INS42 INS21 INS41 INS42 INS42 INS32 INS27 INS27 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS32 INS33 INS42 INS42 INS42 INS32 INS40 INS32 INS40 UPD42 MOV42 UPD42 MOV42 INS45 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL39 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL11 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL32 DEL38 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL43 DEL42 DEL42 DEL32 DEL41 DEL8