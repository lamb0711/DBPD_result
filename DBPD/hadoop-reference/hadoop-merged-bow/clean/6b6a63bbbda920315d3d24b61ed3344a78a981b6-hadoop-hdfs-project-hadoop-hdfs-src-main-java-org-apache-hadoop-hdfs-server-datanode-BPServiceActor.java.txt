Merge commit '456e901a4c5c639267ee87b8e5f1319f256d20c2' (HDFS-6407. Add sorting and pagination in the datanode tab of the NN Web UI. Contributed by Haohui Mai.) into HDFS-7285-merge

+import java.util.concurrent.atomic.AtomicBoolean;
-      long nextBlockReportTime = scheduler.scheduleBlockReport(0);
+      long oldBlockReportTime = scheduler.nextBlockReportTime;
+      scheduler.forceFullBlockReportNow();
-      while (nextBlockReportTime - scheduler.nextBlockReportTime >= 0) {
+      while (oldBlockReportTime == scheduler.nextBlockReportTime) {
-  List<DatanodeCommand> blockReport() throws IOException {
-    // send block report if timer has expired.
-    if (!scheduler.isBlockReportDue()) {
-      return null;
-    }
-
+  List<DatanodeCommand> blockReport(long fullBrLeaseId) throws IOException {
-              new BlockReportContext(1, 0, reportId));
+              new BlockReportContext(1, 0, reportId, fullBrLeaseId));
-              new BlockReportContext(reports.length, r, reportId));
+              new BlockReportContext(reports.length, r, reportId,
+                  fullBrLeaseId));
-  HeartbeatResponse sendHeartBeat() throws IOException {
+  HeartbeatResponse sendHeartBeat(boolean requestBlockReportLease)
+      throws IOException {
-        volumeFailureSummary);
+        volumeFailureSummary,
+        requestBlockReportLease);
-        + " Initial delay: " + dnConf.initialBlockReportDelay + "msec"
+        + " Initial delay: " + dnConf.initialBlockReportDelayMs + "msec"
+    long fullBlockReportLeaseId = 0;
+        HeartbeatResponse resp = null;
+          boolean requestBlockReportLease = (fullBlockReportLeaseId == 0) &&
+                  scheduler.isBlockReportDue(startTime);
-            HeartbeatResponse resp = sendHeartBeat();
+            resp = sendHeartBeat(requestBlockReportLease);
+            if (resp.getFullBlockReportLeaseId() != 0) {
+              if (fullBlockReportLeaseId != 0) {
+                LOG.warn(nnAddr + " sent back a full block report lease " +
+                        "ID of 0x" +
+                        Long.toHexString(resp.getFullBlockReportLeaseId()) +
+                        ", but we already have a lease ID of 0x" +
+                        Long.toHexString(fullBlockReportLeaseId) + ". " +
+                        "Overwriting old lease ID.");
+              }
+              fullBlockReportLeaseId = resp.getFullBlockReportLeaseId();
+            }
-        List<DatanodeCommand> cmds = blockReport();
+        List<DatanodeCommand> cmds = null;
+        boolean forceFullBr =
+            scheduler.forceFullBlockReport.getAndSet(false);
+        if (forceFullBr) {
+          LOG.info("Forcing a full block report to " + nnAddr);
+        }
+        if ((fullBlockReportLeaseId != 0) || forceFullBr) {
+          cmds = blockReport(fullBlockReportLeaseId);
+          fullBlockReportLeaseId = 0;
+        }
-        DatanodeCommand cmd = cacheReport();
-        processCommand(new DatanodeCommand[]{ cmd });
+        if (!dn.areCacheReportsDisabledForTests()) {
+          DatanodeCommand cmd = cacheReport();
+          processCommand(new DatanodeCommand[]{ cmd });
+        }
-    scheduler.scheduleBlockReport(dnConf.initialBlockReportDelay);
+    scheduler.scheduleBlockReport(dnConf.initialBlockReportDelayMs);
-        scheduler.scheduleBlockReport(0);
+        scheduler.forceFullBlockReportNow();
+    private final AtomicBoolean forceFullBlockReport =
+        new AtomicBoolean(false);
+
-    boolean isBlockReportDue() {
-      return nextBlockReportTime - monotonicNow() <= 0;
+    boolean isBlockReportDue(long curTime) {
+      return nextBlockReportTime - curTime <= 0;
+    }
+
+    void forceFullBlockReportNow() {
+      forceFullBlockReport.set(true);
+      resetBlockReportTime = true;

INS26 INS40 INS44 INS44 INS23 INS31 INS39 INS42 INS39 INS42 INS60 INS83 INS83 INS43 INS59 INS44 INS39 INS42 INS8 INS39 INS59 INS42 INS42 INS14 INS39 INS42 INS21 INS21 INS60 INS21 INS42 INS42 INS34 UPD40 INS43 INS9 INS32 INS7 MOV39 INS59 INS32 UPD27 UPD40 INS42 INS42 INS42 INS9 INS42 INS9 UPD42 MOV42 INS40 MOV42 UPD42 MOV42 UPD42 MOV42 MOV40 INS60 INS60 INS25 INS25 INS25 INS42 MOV43 INS59 INS39 INS59 INS42 INS8 INS27 INS8 INS38 INS8 INS42 INS33 INS60 INS33 INS42 INS32 INS21 INS36 INS42 INS21 INS21 INS32 MOV60 MOV21 UPD42 INS39 INS59 INS40 INS42 INS9 INS32 INS27 INS7 INS7 INS42 INS42 INS42 INS42 INS27 INS21 INS25 INS42 INS42 INS27 INS42 INS34 INS42 INS32 INS42 INS34 INS36 INS32 INS7 INS27 INS8 INS45 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS32 INS32 INS34 INS25 INS21 INS42 INS34 MOV42 INS42 INS42 INS42 INS27 INS8 INS7 INS42 INS34 INS21 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS27 INS42 INS45 INS45 INS32 INS45 INS32 INS45 INS45 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 DEL34 DEL32 DEL59 DEL60 DEL27 DEL34 DEL42 DEL42 DEL32 DEL38 DEL33 DEL41 DEL8 DEL25 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL34 DEL42 DEL32