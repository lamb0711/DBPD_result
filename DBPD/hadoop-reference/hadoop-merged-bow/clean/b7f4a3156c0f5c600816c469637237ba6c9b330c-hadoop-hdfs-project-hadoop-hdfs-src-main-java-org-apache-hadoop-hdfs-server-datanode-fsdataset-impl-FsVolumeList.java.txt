HDFS-7496. Fix FsVolume removal race conditions on the DataNode by reference-counting the volume instances (lei via cmccabe)

+import java.nio.channels.ClosedChannelException;
+import org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeReference;
+  private FsVolumeReference chooseVolume(List<FsVolumeImpl> list, long blockSize)
+      throws IOException {
+    while (true) {
+      FsVolumeImpl volume = blockChooser.chooseVolume(list, blockSize);
+      try {
+        return volume.obtainReference();
+      } catch (ClosedChannelException e) {
+        FsDatasetImpl.LOG.warn("Chosen a closed volume: " + volume);
+        // blockChooser.chooseVolume returns DiskOutOfSpaceException when the list
+        // is empty, indicating that all volumes are closed.
+        list.remove(volume);
+      }
+    }
+  }
+
-  FsVolumeImpl getNextVolume(StorageType storageType, long blockSize)
+  FsVolumeReference getNextVolume(StorageType storageType, long blockSize)
-    return blockChooser.chooseVolume(list, blockSize);
+    return chooseVolume(list, blockSize);
-  FsVolumeImpl getNextTransientVolume(long blockSize) throws IOException {
+  FsVolumeReference getNextTransientVolume(long blockSize) throws IOException {
-    return blockChooser.chooseVolume(list, blockSize);
+    return chooseVolume(list, blockSize);
-      dfsUsed += v.getDfsUsed();
+      try(FsVolumeReference ref = v.obtainReference()) {
+        dfsUsed += v.getDfsUsed();
+      } catch (ClosedChannelException e) {
+        // ignore.
+      }
-      dfsUsed += v.getBlockPoolUsed(bpid);
+      try (FsVolumeReference ref = v.obtainReference()) {
+        dfsUsed += v.getBlockPoolUsed(bpid);
+      } catch (ClosedChannelException e) {
+        // ignore.
+      }
-      capacity += v.getCapacity();
+      try (FsVolumeReference ref = v.obtainReference()) {
+        capacity += v.getCapacity();
+      } catch (IOException e) {
+        // ignore.
+      }
-      remaining += vol.getAvailable();
+      try (FsVolumeReference ref = vol.obtainReference()) {
+        remaining += vol.getAvailable();
+      } catch (ClosedChannelException e) {
+        // ignore
+      }
-          try {
+          try (FsVolumeReference ref = v.obtainReference()) {
+          } catch (ClosedChannelException e) {
+            FsDatasetImpl.LOG.info("The volume " + v + " is closed while " +
+                "addng replicas, ignored.");
-        try {
+        try (FsVolumeReference ref = fsv.obtainReference()) {
-          FsDatasetImpl.LOG.warn("Removing failed volume " + fsv + ": ",e);
+          FsDatasetImpl.LOG.warn("Removing failed volume " + fsv + ": ", e);
-            removedVols = new ArrayList<FsVolumeImpl>(1);
+            removedVols = new ArrayList<>(1);
+        } catch (ClosedChannelException e) {
+          FsDatasetImpl.LOG.debug("Caught exception when obtaining " +
+            "reference count on closed volume", e);
+        } catch (IOException e) {
+          FsDatasetImpl.LOG.error("Unexpected IOException", e);
-    // Make a copy of volumes to add new volumes.
+          try {
+            target.closeAndWait();
+          } catch (IOException e) {
+            FsDatasetImpl.LOG.warn(
+                "Error occurs when waiting volume to close: " + target, e);
+          }
-          try {
+          try (FsVolumeReference ref = v.obtainReference()) {
+          } catch (ClosedChannelException e) {
+            // ignore.

INS26 INS26 INS40 INS40 INS31 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS43 UPD43 INS42 INS74 INS42 INS39 INS42 INS42 INS61 INS42 UPD42 INS43 INS43 INS9 INS8 INS32 INS8 INS8 INS8 INS8 INS42 INS42 INS60 INS54 INS42 INS42 INS42 INS54 INS54 INS54 INS54 MOV43 INS59 INS8 INS12 INS58 MOV8 INS12 INS58 MOV8 INS12 INS58 MOV8 INS12 INS58 MOV8 INS12 INS42 MOV32 INS41 INS44 INS8 INS43 INS59 INS44 INS8 INS43 INS59 INS44 INS8 INS43 INS59 INS44 INS8 INS43 INS59 INS44 INS8 INS32 INS43 INS42 INS21 INS21 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS32 INS43 INS42 INS58 INS12 INS12 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS44 INS8 INS44 INS8 INS54 INS40 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS21 INS43 INS42 INS21 INS8 INS12 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS21 INS44 INS8 INS58 INS12 INS40 INS42 INS27 INS42 INS40 INS42 INS45 INS42 INS32 INS43 INS42 INS21 INS58 INS12 INS43 INS59 INS44 INS8 INS45 INS45 INS42 INS42 INS42 INS32 INS43 INS59 INS44 INS8 INS42 INS42 INS32 INS43 INS42 INS21 INS40 INS42 INS27 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS42 INS32 UPD74 INS45 INS42 INS42 INS42 INS42 INS40 INS42 INS27 INS45 INS42 INS45 INS45 DEL42 DEL42 DEL43