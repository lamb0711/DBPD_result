YARN-4757. Add the ability to split reverse zone subnets. Contributed by Shane Kumpf.

(cherry picked from commit 9bff70f1316d889c3109c68dd308c8f456229bf8)

+import com.google.common.annotations.VisibleForTesting;
+   * Return the number of zones in the map.
+   *
+   * @return number of zones in the map
+   */
+  @VisibleForTesting
+  protected int getZoneCount() {
+    return zones.size();
+  }
+
+  /**
-   * @throws IOException
+   * @throws IOException if the DNSSEC key can not be read.
-    Name reverseLookupZoneName = getReverseZoneName(conf);
-    Zone reverseLookupZone =
-        configureZone(reverseLookupZoneName, conf);
-    zones.put(reverseLookupZone.getOrigin(), reverseLookupZone);
+    // Determine if the subnet should be split into
+    // multiple reverse zones, this can be necessary in
+    // network configurations where the hosts and containers
+    // are part of the same subnet (i.e. the containers only use
+    // part of the subnet).
+    Boolean shouldSplitReverseZone = conf.getBoolean(KEY_DNS_SPLIT_REVERSE_ZONE,
+        DEFAULT_DNS_SPLIT_REVERSE_ZONE);
+    if (shouldSplitReverseZone) {
+      int subnetCount = ReverseZoneUtils.getSubnetCountForReverseZones(conf);
+      addSplitReverseZones(conf, subnetCount);
+      // Single reverse zone
+    } else {
+      Name reverseLookupZoneName = getReverseZoneName(conf);
+      Zone reverseLookupZone = configureZone(reverseLookupZoneName, conf);
+      zones.put(reverseLookupZone.getOrigin(), reverseLookupZone);
+    }
+  }
+
+  /**
+   * Create the zones based on the zone count.
+   *
+   * @param conf        the Hadoop configuration.
+   * @param subnetCount number of subnets to create reverse zones for.
+   * @throws IOException if the DNSSEC key can not be read.
+   */
+  @VisibleForTesting
+  protected void addSplitReverseZones(Configuration conf, int subnetCount)
+      throws IOException {
+    String subnet = conf.get(KEY_DNS_ZONE_SUBNET);
+    String range = conf.get(KEY_DNS_SPLIT_REVERSE_ZONE_RANGE);
+
+    // Add the split reverse zones
+    for (int idx = 0; idx < subnetCount; idx++) {
+      Name reverseLookupZoneName = getReverseZoneName(ReverseZoneUtils
+          .getReverseZoneNetworkAddress(subnet, Integer.parseInt(range), idx));
+      Zone reverseLookupZone = configureZone(reverseLookupZoneName, conf);
+      zones.put(reverseLookupZone.getOrigin(), reverseLookupZone);
+    }
-  private void setDNSSECEnabled(Configuration conf) {
+  @VisibleForTesting
+  protected void setDNSSECEnabled(Configuration conf) {

INS26 INS40 INS31 INS31 INS29 INS78 INS83 INS39 INS42 INS8 INS8 INS29 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 UPD83 INS65 INS65 INS42 INS41 INS60 INS25 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS39 INS42 INS42 INS60 INS60 INS24 INS42 INS66 INS66 INS32 INS66 INS43 INS59 INS42 INS8 MOV8 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS43 INS59 INS43 INS59 INS58 INS27 INS37 INS8 INS42 INS42 INS42 INS42 INS32 INS60 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS39 INS59 INS42 INS42 INS42 INS60 INS60 INS21 INS42 INS42 INS42 INS42 INS39 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS43 INS59 INS43 INS59 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42