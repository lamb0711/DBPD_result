HDFS-7827. Erasure Coding: support striped blocks in non-protobuf fsimage. Contributed by Hui Zheng.

+import org.apache.hadoop.hdfs.protocol.Block;
+import org.apache.hadoop.hdfs.server.blockmanagement.BlockInfoStriped;
+import org.apache.hadoop.hdfs.server.blockmanagement.BlockInfoStripedUnderConstruction;
+    final boolean isStriped = NameNodeLayoutVersion.supports(
+            NameNodeLayoutVersion.Feature.ERASURE_CODING, imgVersion)
+            && (in.readBoolean());
-      BlockInfoContiguous[] blocks = new BlockInfoContiguous[numBlocks];
-      for (int j = 0; j < numBlocks; j++) {
-        blocks[j] = new BlockInfoContiguous(replication);
-        blocks[j].readFields(in);
+      Block[] blocks;
+      if (isStriped) {
+        blocks = new Block[numBlocks];
+        for (int j = 0; j < numBlocks; j++) {
+          short dataBlockNum = in.readShort();
+          short parityBlockNum = in.readShort();
+          blocks[j] = new BlockInfoStriped(new Block(),
+                  dataBlockNum, parityBlockNum);
+          blocks[j].readFields(in);
+        }
+      } else {
+        blocks = new BlockInfoContiguous[numBlocks];
+        for (int j = 0; j < numBlocks; j++) {
+          blocks[j] = new BlockInfoContiguous(replication);
+          blocks[j].readFields(in);
+        }
-              BlockInfoContiguous lastBlk = blocks[blocks.length - 1];
-              blocks[blocks.length - 1] = new BlockInfoContiguousUnderConstruction(
-                  lastBlk, replication);
+              Block lastBlk = blocks[blocks.length - 1];
+              if (isStriped){
+                BlockInfoStriped lastStripedBlk = (BlockInfoStriped) lastBlk;
+                blocks[blocks.length - 1]
+                        = new BlockInfoStripedUnderConstruction(lastBlk,
+                                lastStripedBlk.getDataBlockNum(),
+                                lastStripedBlk.getParityBlockNum());
+              } else {
+                blocks[blocks.length - 1]
+                        = new BlockInfoContiguousUnderConstruction(lastBlk,
+                                replication);
+              }
-      final INodeFile file = new INodeFile(inodeId, localName, permissions,
-          modificationTime, atime, blocks, replication, blockSize);
+      INodeFile file;
+      if (isStriped) {
+        file = new INodeFile(inodeId, localName, permissions, modificationTime,
+            atime, new BlockInfoContiguous[0], (short) 0, blockSize);
+        file.addStripedBlocksFeature();
+        for (Block block : blocks) {
+          file.getStripedBlocksFeature().addBlock((BlockInfoStriped) block);
+        }
+      } else {
+        file = new INodeFile(inodeId, localName, permissions,
+            modificationTime, atime, (BlockInfoContiguous[]) blocks,
+            replication, blockSize);
+      }
-        return fileDiffs == null ? file : new INodeFile(file, fileDiffs);
-      } else if (numBlocks == -1) {
-        //directory
+      return fileDiffs == null ? file : new INodeFile(file, fileDiffs);
+    } else if (numBlocks == -1) {
+      //directory

INS26 INS26 INS26 INS40 INS40 INS40 INS60 INS83 INS39 INS59 INS42 INS27 INS25 INS60 INS25 INS32 INS36 INS5 INS42 INS8 INS8 MOV43 INS59 INS42 INS8 INS8 INS42 INS42 INS40 INS42 INS32 INS43 INS85 INS21 INS24 INS21 MOV24 MOV42 INS21 INS21 INS70 INS21 INS42 INS42 INS42 INS7 INS58 INS27 INS37 INS8 INS7 INS7 INS32 INS44 INS42 INS8 INS7 INS42 INS3 INS39 INS59 INS42 INS42 INS42 INS60 INS60 INS21 INS21 INS42 MOV3 INS42 INS14 INS42 INS42 INS43 INS42 INS21 INS42 INS14 INS5 INS42 INS42 INS34 INS39 INS59 INS39 INS59 INS7 INS32 MOV43 INS42 INS42 INS42 INS42 INS42 INS3 INS11 INS42 INS42 INS32 INS43 MOV42 MOV42 MOV42 MOV42 MOV42 INS11 MOV42 MOV42 INS43 INS85 INS42 INS32 INS42 INS32 INS2 INS14 INS2 INS42 INS42 MOV5 INS34 INS39 INS34 INS32 INS42 INS11 INS42 INS5 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS14 INS42 INS42 INS42 INS42 INS8 INS42 INS42 INS43 INS42 INS43 INS85 INS42 INS43 MOV60 INS25 INS42 INS42 INS42 UPD43 INS42 INS8 MOV8 UPD42 INS60 INS21 INS43 INS59 INS7 INS42 INS42 INS11 INS2 INS14 INS43 INS42 INS42 INS27 INS43 INS42 INS32 INS32 INS42 INS40 INS34 INS42 INS42 INS42 INS42 INS42 DEL83 DEL42 DEL14 DEL59 DEL60