YARN-9268. General improvements in FpgaDevice. Contributed by Peter Bacsko.

+import com.google.common.base.Preconditions;
-  //key is requetor, aka. container ID
+  //key is requestor, aka. container ID
-  public static class FpgaDevice implements Comparable<FpgaDevice>, Serializable {
+  /** A class that represents an FPGA card. */
+  public static class FpgaDevice implements Serializable {
+    private static final long serialVersionUID = -4678487141824092751L;
+    private final String type;
+    private final int major;
+    private final int minor;
-    private static final long serialVersionUID = 1L;
-
-    private String type;
-    private Integer major;
-    private Integer minor;
-    // IP file identifier. matrix multiplication for instance
-    private String IPID;
-    // SHA-256 hash of the uploaded aocx file
-    private String aocxHash;
-    // the device name under /dev
-    private String devName;
-    private String aliasDevName;
-    // lspci output's bus number: 02:00.00 (bus:slot.func)
-    private String busNum;
-    private String temperature;
-    private String cardPowerUsage;
+    private final String aliasDevName;
+
+    // IP file identifier. matrix multiplication for instance (mutable)
+    private String IPID;
+    // SHA-256 hash of the uploaded aocx file (mutable)
+    private String aocxHash;
+
+    // cached hash value
+    private Integer hashCode;
-    public Integer getMajor() {
+    public int getMajor() {
-    public Integer getMinor() {
+    public int getMinor() {
-    public String getDevName() {
-      return devName;
-    }
-
-    public void setDevName(String devName) {
-      this.devName = devName;
-    }
-
-    public void setAliasDevName(String aliasDevName) {
-      this.aliasDevName = aliasDevName;
-    }
-
-    public String getBusNum() {
-      return busNum;
-    }
-
-    public void setBusNum(String busNum) {
-      this.busNum = busNum;
-    }
-
-    public String getTemperature() {
-      return temperature;
-    }
-
-    public String getCardPowerUsage() {
-      return cardPowerUsage;
-    }
-
-    public FpgaDevice(String type, Integer major, Integer minor, String IPID) {
-      this.type = type;
+    public FpgaDevice(String type, int major, int minor, String aliasDevName) {
+      this.type = Preconditions.checkNotNull(type, "type must not be null");
-      this.IPID = IPID;
-    }
-
-    public FpgaDevice(String type, Integer major,
-      Integer minor, String IPID, String devName,
-        String aliasDevName, String busNum, String temperature, String cardPowerUsage) {
-      this.type = type;
-      this.major = major;
-      this.minor = minor;
-      this.IPID = IPID;
-      this.devName = devName;
-      this.aliasDevName = aliasDevName;
-      this.busNum = busNum;
-      this.temperature = temperature;
-      this.cardPowerUsage = cardPowerUsage;
+      this.aliasDevName = Preconditions.checkNotNull(aliasDevName,
+          "aliasDevName must not be null");
-      if (!(obj instanceof FpgaDevice)) {
+      if (getClass() != obj.getClass()) {
-      if (other.getType().equals(this.type) &&
-          other.getMajor().equals(this.major) &&
-          other.getMinor().equals(this.minor)) {
-        return true;
+      if (aliasDevName == null) {
+        if (other.aliasDevName != null) {
+          return false;
+        }
+      } else if (!aliasDevName.equals(other.aliasDevName)) {
+        return false;
-      return false;
+      if (major != other.major) {
+        return false;
+      }
+      if (minor != other.minor) {
+        return false;
+      }
+      if (type == null) {
+        if (other.type != null) {
+          return false;
+        }
+      } else if (!type.equals(other.type)) {
+        return false;
+      }
+      return true;
-      final int prime = 31;
-      int result = 1;
-      result = prime * result + ((type == null) ? 0 : type.hashCode());
-      result = prime * result + ((major == null) ? 0 : major.hashCode());
-      result = prime * result + ((minor == null) ? 0 : minor.hashCode());
-      return result;
-    }
+      if (hashCode == null) {
+        final int prime = 31;
+        int result = 1;
-    @Override
-    public int compareTo(FpgaDevice o) {
-      return 0;
+        result = prime * result + major;
+        result = prime * result + type.hashCode();
+        result = prime * result + minor;
+        result = prime * result + aliasDevName.hashCode();
+
+        hashCode = result;
+      }
+
+      return hashCode;

INS26 INS40 MOV23 INS29 INS31 INS65 INS83 INS83 INS39 INS83 INS39 INS83 MOV43 INS39 INS39 MOV78 MOV83 UPD39 MOV39 UPD42 MOV42 MOV44 INS8 INS8 INS66 INS38 UPD42 INS39 INS39 MOV42 MOV21 MOV25 MOV25 INS25 MOV60 INS25 INS25 MOV25 INS25 MOV41 INS25 INS41 INS34 MOV42 INS27 INS8 INS27 INS8 INS25 INS27 INS8 UPD27 MOV27 INS8 INS25 INS27 MOV8 MOV21 INS42 INS32 INS32 INS32 INS32 MOV41 INS42 INS33 INS25 INS38 INS8 INS42 INS40 INS41 INS42 INS40 INS41 INS25 INS38 MOV8 INS42 INS33 INS21 INS21 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS9 INS27 INS8 INS32 MOV41 INS9 INS9 INS27 INS8 INS32 INS7 INS7 INS40 INS33 MOV41 INS42 INS42 INS40 INS9 INS40 INS33 MOV41 INS42 INS42 INS40 INS42 INS27 INS42 INS42 INS9 INS27 INS42 MOV32 MOV27 INS42 MOV27 INS32 UPD42 MOV42 INS42 UPD42 MOV42 MOV42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL34 DEL42 DEL43 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL8 DEL31 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL52 DEL42 DEL22 DEL32 DEL42 DEL42 DEL32 DEL42 DEL52 DEL42 DEL22 DEL32 DEL42 DEL42 DEL32 DEL42 DEL52 DEL42 DEL22 DEL32 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL42 DEL43 DEL62 DEL36 DEL38 DEL25 DEL8 DEL31 DEL33 DEL27 DEL36 DEL34 DEL42 DEL42 DEL32 DEL16 DEL36 DEL36 DEL34 DEL16 DEL36 DEL42 DEL33 DEL27 DEL36 DEL34 DEL32 DEL16 DEL36 DEL42 DEL41 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL34 DEL41 DEL8 DEL31