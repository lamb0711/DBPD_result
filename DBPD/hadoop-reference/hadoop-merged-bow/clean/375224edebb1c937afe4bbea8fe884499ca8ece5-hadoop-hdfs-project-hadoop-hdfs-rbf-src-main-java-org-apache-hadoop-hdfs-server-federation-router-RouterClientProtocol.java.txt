HDFS-14739. RBF: LS command for mount point shows wrong owner and permission information. Contributed by Jinglun.

+import org.apache.hadoop.hdfs.server.federation.resolver.RouterResolveException;
-    // Locate the dir and fetch the listing
-    final List<RemoteLocation> locations =
-        rpcServer.getLocationsForPath(src, false, false);
-    RemoteMethod method = new RemoteMethod("getListing",
-        new Class<?>[] {String.class, startAfter.getClass(), boolean.class},
-        new RemoteParam(), startAfter, needLocation);
-    final List<RemoteResult<RemoteLocation, DirectoryListing>> listings =
-        rpcClient.invokeConcurrent(
-            locations, method, false, -1, DirectoryListing.class);
-
+    List<RemoteResult<RemoteLocation, DirectoryListing>> listings =
+        getListingInt(src, startAfter, needLocation);
-        HdfsFileStatus dirStatus = getMountPointStatus(child, 0, date);
+        Path childPath = new Path(src, child);
+        HdfsFileStatus dirStatus =
+            getMountPointStatus(childPath.toString(), 0, date);
+   * Get listing on remote locations.
+   */
+  private List<RemoteResult<RemoteLocation, DirectoryListing>> getListingInt(
+      String src, byte[] startAfter, boolean needLocation) throws IOException {
+    try {
+      List<RemoteLocation> locations =
+          rpcServer.getLocationsForPath(src, false, false);
+      // Locate the dir and fetch the listing.
+      if (locations.isEmpty()) {
+        return new ArrayList<>();
+      }
+      RemoteMethod method = new RemoteMethod("getListing",
+          new Class<?>[] {String.class, startAfter.getClass(), boolean.class},
+          new RemoteParam(), startAfter, needLocation);
+      List<RemoteResult<RemoteLocation, DirectoryListing>> listings = rpcClient
+          .invokeConcurrent(locations, method, false, -1,
+              DirectoryListing.class);
+      return listings;
+    } catch (RouterResolveException e) {
+      LOG.debug("Cannot get locations for {}, {}.", src, e.getMessage());
+      return new ArrayList<>();
+    }
+  }
+
+  /**

INS26 INS40 INS31 INS29 INS83 INS74 INS42 INS44 INS44 INS44 INS43 INS8 INS60 INS65 INS43 INS74 INS43 INS42 INS5 INS42 INS39 INS42 INS42 INS54 INS74 INS59 INS66 INS42 INS43 INS43 INS43 INS42 INS39 INS85 INS8 INS12 INS43 INS74 INS42 INS32 INS42 INS42 INS42 MOV60 INS25 MOV60 MOV60 INS41 INS44 INS8 INS42 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS32 INS8 INS42 INS43 INS42 INS21 INS41 INS42 INS42 INS42 INS60 INS42 INS42 INS41 INS42 INS32 INS14 INS43 INS59 INS14 INS42 INS42 INS45 INS42 INS32 INS74 INS42 INS42 INS14 INS74 INS42 INS42 INS43 INS43 INS42 INS42 INS32 INS43 INS42 INS42 UPD42 MOV42 INS42 INS42 DEL83 DEL83