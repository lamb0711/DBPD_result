Merging trunk to HDFS-2802 branch.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1416603 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.namenode.snapshot.Snapshot;
+  /** A dummy INode which can be used as a probe object. */
+  public static final INode DUMMY = new INode() {
+    @Override
+    int collectSubtreeBlocksAndClear(BlocksMapUpdateInfo info) {
+      throw new UnsupportedOperationException();
+    }
+    @Override
+    long[] computeContentSummary(long[] summary) {
+      throw new UnsupportedOperationException();
+    }
+    @Override
+    DirCounts spaceConsumedInTree(DirCounts counts) {
+      throw new UnsupportedOperationException();
+    }
+  };
+  /**
+   * Assert that the snapshot parameter must be null since
+   * this class only take care current state. 
+   * Subclasses should override the methods for handling the snapshot states.
+   */
+  static void assertNull(Snapshot snapshot) {
+    if (snapshot != null) {
+      throw new AssertionError("snapshot is not null: " + snapshot);
+    }
+  }
-  protected INodeDirectory parent = null;
-  protected long modificationTime = 0L;
-  protected long accessTime = 0L;
+  INodeDirectory parent = null;
+  private long modificationTime = 0L;
+  private long accessTime = 0L;
+  
+  /** For creating the a {@link #DUMMY} object. */
+  private INode() {}
-    this(other.getLocalNameBytes(), other.permission, other.getParent(), 
-        other.getModificationTime(), other.getAccessTime());
+    this(other.name, other.permission, other.parent, 
+        other.modificationTime, other.accessTime);
-    this.name = DFSUtil.string2Bytes(name);
+    setLocalName(DFSUtil.string2Bytes(name));
-  void setLocalName(byte[] name) {
+  public void setLocalName(byte[] name) {
-  INodeDirectory getParent() {
+  public INodeDirectory getParent() {
-  public void setModificationTime(long modtime) {
+  public void updateModificationTime(long modtime) {
-      this.modificationTime = modtime;
+      setModificationTime(modtime);
+  void cloneModificationTime(INode that) {
+    this.modificationTime = that.modificationTime;
+  }
+
-  void setModificationTimeForce(long modtime) {
+  void setModificationTime(long modtime) {
-  public boolean removeNode() {
+  public boolean removeNode(Snapshot latestSnapshot) {
-      parent.removeChild(this);
+      parent.removeChild(this, latestSnapshot);

INS26 INS40 INS23 INS31 INS31 INS31 INS31 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS39 INS42 INS44 INS8 UPD83 UPD83 INS29 INS83 INS42 INS8 MOV29 INS42 MOV44 INS8 INS83 INS83 UPD42 INS39 INS42 INS44 INS8 UPD42 INS44 INS65 INS42 INS42 INS14 INS65 INS43 INS42 INS25 INS65 INS17 INS43 INS42 INS21 INS43 INS42 INS66 INS43 INS1 INS66 INS66 INS66 INS42 INS27 INS8 INS66 INS65 INS66 INS40 INS40 INS40 INS40 INS40 INS32 INS42 INS7 INS42 INS42 INS31 INS31 INS31 INS42 INS33 INS53 INS67 INS42 MOV32 INS22 INS40 INS78 INS39 INS42 INS44 INS8 INS78 INS5 INS42 INS44 INS8 INS78 INS43 INS42 INS44 INS8 INS14 INS42 INS32 INS52 INS42 INS42 INS43 INS42 INS53 INS42 INS39 INS85 INS5 INS42 INS53 INS42 INS42 INS43 INS42 INS53 INS43 INS27 INS42 INS42 INS42 INS42 INS14 INS39 INS85 INS14 INS42 INS14 INS42 INS45 INS42 INS43 INS43 INS43 INS42 INS42 INS42 DEL83 DEL42 DEL42 DEL42 DEL32 DEL40 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL17 DEL8 DEL31 DEL52 DEL42 DEL22 DEL7 DEL52 DEL42 DEL22 DEL42 DEL7