HDFS-14336. Fix checkstyle for NameNodeMXBean. Contributed by Danny Becker.

-   * @return the version
+   * @return the version.
-  public String getVersion();
+  String getVersion();
-   * Get the version of software running on the Namenode
-   * @return a string representing the version
+   * Get the version of software running on the Namenode.
+   *
+   * @return a string representing the version.
-  public String getSoftwareVersion();
+  String getSoftwareVersion();
-   * @return the used space by data nodes
+   * @return the used space by data nodes.
-  public long getUsed();
+  long getUsed();
-   * @return total non-used raw bytes
+   * @return total non-used raw bytes.
-  public long getFree();
+  long getFree();
-   * @return the total raw bytes including non-dfs used space
+   * @return the total raw bytes including non-dfs used space.
-  public long getTotal();
+  long getTotal();
-  public long getProvidedCapacity();
+  long getProvidedCapacity();
-   * Gets the safemode status
+   * Gets the safemode status.
-   * @return the safemode status
-   * 
+   * @return the safemode status.
-  public String getSafemode();
+  String getSafemode();
-   * @return true, if upgrade is finalized
+   * @return true, if upgrade is finalized.
-  public boolean isUpgradeFinalized();
+  boolean isUpgradeFinalized();
-  public RollingUpgradeInfo.Bean getRollingUpgradeStatus();
+  RollingUpgradeInfo.Bean getRollingUpgradeStatus();
-   * temporary files on the local file system
+   * temporary files on the local file system.
-   * @return the non dfs space of the cluster
+   * @return the non dfs space of the cluster.
-  public long getNonDfsUsedSpace();
+  long getNonDfsUsedSpace();
-   * Gets the total used space by data nodes as percentage of total capacity
+   * Gets the total used space by data nodes as percentage of total capacity.
-  public float getPercentUsed();
+  float getPercentUsed();
-   * capacity
+   * capacity.
-   * @return the percentage of the remaining space on the cluster
+   * @return the percentage of the remaining space on the cluster.
-  public float getPercentRemaining();
+  float getPercentRemaining();
-   * Returns the amount of cache used by the datanode (in bytes).
+   * Gets the amount of cache used by the datanode (in bytes).
+   *
+   * @return the amount of cache used by the datanode (in bytes).
-  public long getCacheUsed();
+  long getCacheUsed();
-   * Returns the total cache capacity of the datanode (in bytes).
+   * Gets the total cache capacity of the datanode (in bytes).
+   *
+   * @return the total cache capacity of the datanode (in bytes).
-  public long getCacheCapacity();
+  long getCacheCapacity();
-   * Get the total space used by the block pools of this namenode
+   * Get the total space used by the block pools of this namenode.
+   *
+   * @return the total space used by the block pools of this namenode.
-  public long getBlockPoolUsedSpace();
+  long getBlockPoolUsedSpace();
-   * Get the total space used by the block pool as percentage of total capacity
+   * Get the total space used by the block pool as percentage of total capacity.
+   *
+   * @return the total space used by the block pool as percentage of total
+   * capacity.
-  public float getPercentBlockPoolUsed();
+  float getPercentBlockPoolUsed();
-   * @return the total number of blocks of the cluster
+   * @return the total number of blocks of the cluster.
-  public long getTotalBlocks();
+  long getTotalBlocks();
-   * Gets the total number of missing blocks on the cluster
+   * Gets the total number of missing blocks on the cluster.
-   * @return the total number of missing blocks on the cluster
+   * @return the total number of missing blocks on the cluster.
-  public long getNumberOfMissingBlocks();
+  long getNumberOfMissingBlocks();
-   * replication factor 1
+   * replication factor 1.
-   * replication factor 1
+   * replication factor 1.
-  public long getNumberOfMissingBlocksWithReplicationFactorOne();
+  long getNumberOfMissingBlocksWithReplicationFactorOne();
-  public long getHighestPriorityLowRedundancyReplicatedBlocks();
+  long getHighestPriorityLowRedundancyReplicatedBlocks();
-   * with the highest risk of loss
+   * with the highest risk of loss.
-   * with the highest risk of loss
+   * with the highest risk of loss.
-  public long getHighestPriorityLowRedundancyECBlocks();
+  long getHighestPriorityLowRedundancyECBlocks();
-   * @return the total number of snapshottable dirs in the system
+   * @return the total number of snapshottable dirs in the system.
-  public long getNumberOfSnapshottableDirs();
+  long getNumberOfSnapshottableDirs();
-   * @return the number of threads
+   * @return the number of threads.
-  public int getThreads();
+  int getThreads();
-   * @return the live node information
+   * @return the live node information.
-  public String getLiveNodes();
+  String getLiveNodes();
-   * @return the dead node information
+   * @return the dead node information.
-  public String getDeadNodes();
+  String getDeadNodes();
-   * @return the decommissioning node information
+   * @return the decommissioning node information.
-  public String getDecomNodes();
+  String getDecomNodes();
-   * @return the information on nodes entering maintenance
+   * @return the information on nodes entering maintenance.
-   * @return the cluster id
+   * @return the cluster id.
-  public String getClusterId();
+  String getClusterId();
-   * @return the block pool id
+   * @return the block pool id.
-  public String getBlockPoolId();
+  String getBlockPoolId();
-  public String getNameDirStatuses();
+  String getNameDirStatuses();
-  public String getNodeUsage();
+  String getNodeUsage();
-  public String getNameJournalStatus();
+  String getNameJournalStatus();
-   * transaction ID and the most recent checkpoint's transaction ID
+   * transaction ID and the most recent checkpoint's transaction ID.
+   *
+   * @return information about the transaction ID.
-  public String getJournalTransactionInfo();
+  String getJournalTransactionInfo();
-   * @return the NN start time in msec
+   *
+   * @return the NN start time in msec.
-   * Get the compilation information which contains date, user and branch
+   * Get the compilation information which contains date, user and branch.
-  public String getCompileInfo();
+  String getCompileInfo();
-   * Get the list of corrupt files
+   * Get the list of corrupt files.
-  public String getCorruptFiles();
+  String getCorruptFiles();
-   * Get the number of distinct versions of live datanodes
+   * Get the number of distinct versions of live datanodes.
-   * @return the number of distinct versions of live datanodes
+   * @return the number of distinct versions of live datanodes.
-  public int getDistinctVersionCount();
+  int getDistinctVersionCount();
-   * Get the number of live datanodes for each distinct versions
+   * Get the number of live datanodes for each distinct versions.
-   * @return the number of live datanodes for each distinct versions
+   * @return the number of live datanodes for each distinct versions.
-  public Map<String, Integer> getDistinctVersions();
+  Map<String, Integer> getDistinctVersions();
+   *
+   * @return namenode directory size.
-   * @return the result of the verification
+   * @return the result of the verification.

INS65 UPD65 INS65 UPD65 INS65 INS65 INS65 INS65 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS66 UPD66 INS66 UPD66 UPD66 INS66 UPD66 INS66 INS66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS66 UPD66 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83