HDFS-4209. Clean up the addNode/addChild/addChildNoQuotaCheck methods in FSDirectory and INodeDirectory.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1414447 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.IOException;
+import org.apache.hadoop.fs.PathIsNotDirectoryException;
-  public static INodeDirectory valueOf(INode inode, String path
-      ) throws IOException {
+  public static INodeDirectory valueOf(INode inode, Object path
+      ) throws FileNotFoundException, PathIsNotDirectoryException {
-      throw new IOException("Directory does not exist: " + path);
+      throw new FileNotFoundException("Directory does not exist: "
+          + DFSUtil.path2String(path));
-      throw new IOException("Path is not a directory: " + path);
+      throw new PathIsNotDirectoryException(DFSUtil.path2String(path));
-   * @return  null if the child with this name already exists; 
-   *          node, otherwise
+   * @return false if the child with this name already exists; 
+   *         otherwise, return true;
-  <T extends INode> T addChild(final T node, boolean setModTime) {
+  boolean addChild(final INode node, final boolean setModTime) {
-    if(low >= 0)
-      return null;
+    if (low >= 0) {
+      return false;
+    }
-    return node;
+    return true;
-   * @return null if the node already exists; inserted INode, otherwise
+   * @return false if the node already exists; otherwise, return true;
-  <T extends INode> T addNode(String path, T newNode
-      ) throws FileNotFoundException, UnresolvedLinkException  {
+  boolean addINode(String path, INode newNode
+      ) throws FileNotFoundException, PathIsNotDirectoryException,
+      UnresolvedLinkException {
-    return addToParent(pathComponents, newNode, true) == null? null: newNode;
-  }
-
-  INodeDirectory getParent(byte[][] pathComponents
-      ) throws FileNotFoundException, UnresolvedLinkException {
-    if (pathComponents.length < 2)  // add root
-      return null;
-    // Gets the parent INode
-    INodesInPath inodes =  getExistingPathINodes(pathComponents, 2, false);
-    INode inode = inodes.inodes[0];
-    if (inode == null) {
-      throw new FileNotFoundException("Parent path does not exist: "+
-          DFSUtil.byteArray2String(pathComponents));
-    }
-    if (!inode.isDirectory()) {
-      throw new FileNotFoundException("Parent path is not a directory: "+
-          DFSUtil.byteArray2String(pathComponents));
-    }
-    return (INodeDirectory)inode;
-  }
-  
-  /**
-   * Add new inode 
-   * Optimized version of addNode()
-   * 
-   * @return  parent INode if new inode is inserted
-   *          or null if it already exists.
-   * @throws  FileNotFoundException if parent does not exist or 
-   *          is not a directory.
-   */
-  INodeDirectory addToParent(byte[][] pathComponents, INode newNode,
-      boolean propagateModTime) throws FileNotFoundException, UnresolvedLinkException {
-      return null;
+      return false;
-    return parent.addChild(newNode, propagateModTime) == null? null: parent;
+    return parent.addChild(newNode, true);
+  }
+
+  INodeDirectory getParent(byte[][] pathComponents
+      ) throws FileNotFoundException, PathIsNotDirectoryException,
+      UnresolvedLinkException {
+    if (pathComponents.length < 2)  // add root
+      return null;
+    // Gets the parent INode
+    INodesInPath inodes =  getExistingPathINodes(pathComponents, 2, false);
+    return INodeDirectory.valueOf(inodes.inodes[0], pathComponents);

MOV26 UPD40 MOV43 MOV43 UPD43 INS39 INS39 INS42 MOV44 UPD43 INS8 INS43 INS8 UPD43 UPD42 MOV43 INS83 UPD42 MOV60 INS25 MOV21 MOV60 MOV41 UPD42 MOV42 MOV25 MOV60 INS41 UPD42 UPD66 UPD66 INS8 INS9 UPD66 MOV42 MOV27 INS8 INS32 INS32 INS41 INS41 UPD42 MOV42 UPD42 MOV42 MOV42 MOV9 UPD42 MOV42 UPD42 MOV42 MOV2 MOV42 INS9 INS9 MOV43 UPD43 INS32 INS32 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL45 DEL42 DEL27 DEL42 DEL73 DEL42 DEL43 DEL42 DEL43 DEL33 DEL41 DEL42 DEL42 DEL43 DEL73 DEL42 DEL43 DEL42 DEL44 DEL32 DEL33 DEL27 DEL33 DEL42 DEL16 DEL8 DEL43 DEL42 DEL59 DEL60 DEL42 DEL33 DEL27 DEL45 DEL32 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL45 DEL42 DEL42 DEL42 DEL32 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL43 DEL42 DEL11 DEL41 DEL8 DEL66 DEL66 DEL65 DEL66 DEL66 DEL65 DEL42 DEL66 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42 DEL39 DEL85 DEL85 DEL5 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL33 DEL41 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL32 DEL33 DEL27 DEL33 DEL42 DEL16 DEL41 DEL8 DEL31