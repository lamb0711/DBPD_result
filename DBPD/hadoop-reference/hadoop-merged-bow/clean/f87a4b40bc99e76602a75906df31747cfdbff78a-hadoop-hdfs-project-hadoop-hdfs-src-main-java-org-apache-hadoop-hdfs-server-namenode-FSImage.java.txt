HDFS-1975. Support for sharing the namenode state from active to standby. Contributed by Jitendra Nath Pandey, Aaron T Myers, and Todd Lipcon.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208813 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.DFSUtil;
+import org.apache.hadoop.hdfs.HAUtil;
-  protected static final Log LOG = LogFactory.getLog(FSImage.class.getName());
+  public static final Log LOG = LogFactory.getLog(FSImage.class.getName());
-                    Collection<URI> imageDirs, Collection<URI> editsDirs)
+                    Collection<URI> imageDirs,
+                    Collection<URI> editsDirs)
+    String nameserviceId = DFSUtil.getNamenodeNameServiceId(conf);
+    if (!HAUtil.isHAEnabled(conf, nameserviceId)) {
+      editLog.initJournalsForWrite();
+    } else {
+      editLog.initSharedJournalsForRead();
+    }
+    // TODO(HA): Have to figure out a story for the first 3 of these.
+        // TODO(HA): Fix this.
+        String nameserviceId = DFSUtil.getNamenodeNameServiceId(conf);
+        if (curState != StorageState.NORMAL && HAUtil.isHAEnabled(conf, nameserviceId)) {
+          throw new IOException("Cannot start an HA namenode with name dirs " +
+              "that need recovery. Dir: " + sd + " state: " + curState);
+        }
-        assert !editLog.isOpen() : "Edits log must not be open.";
+        assert !editLog.isOpenForWrite() : "Edits log must not be open.";
-  void openEditLog() throws IOException {
+  void openEditLogForWrite() throws IOException {
-    Preconditions.checkState(!editLog.isOpen(),
+    Preconditions.checkState(!editLog.isOpenForWrite(),
-    editLog.open();
+    editLog.openForWrite();
+    // TODO(HA): We shouldn't run this when coming up in standby state
+    // TODO(HA): This should probably always return false when HA is enabled and
+    // we're coming up in standby state.
-  protected long loadEdits(Iterable<EditLogInputStream> editStreams,
+  public long loadEdits(Iterable<EditLogInputStream> editStreams,
+      // TODO(HA): Should this happen when called by the tailer?
+    // TODO(HA): this may be very slow -- we probably want to
+    // update them as we go for HA.
-   * filenames and blocks.  Return whether we should
-   * "re-save" and consolidate the edit-logs
+   * filenames and blocks.
-    boolean editLogWasOpen = editLog.isOpen();
+    boolean editLogWasOpen = editLog.isOpenForWrite();

INS26 INS26 INS40 INS40 UPD83 UPD42 UPD83 INS60 INS25 INS43 INS59 INS38 INS8 INS8 UPD66 INS42 INS42 INS32 INS32 INS21 INS21 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 UPD42 INS42 INS42 INS42 INS42 INS60 INS25 UPD42 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS27 INS32 INS53 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS14 UPD42 INS43 INS27 INS42 INS27 INS42 INS45 INS42 INS45 INS45 DEL66