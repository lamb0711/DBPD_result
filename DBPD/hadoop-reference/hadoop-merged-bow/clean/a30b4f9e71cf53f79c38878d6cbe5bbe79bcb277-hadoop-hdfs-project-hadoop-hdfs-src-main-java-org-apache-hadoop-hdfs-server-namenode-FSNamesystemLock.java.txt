HADOOP-15726. Create utility to limit frequency of log statements. Contributed by Erik Krogen.

+import org.apache.hadoop.log.LogThrottlingHelper;
+import static org.apache.hadoop.log.LogThrottlingHelper.LogAction;
-  private int numWriteLockWarningsSuppressed = 0;
-  /** Time stamp (ms) of the last time a write lock report was written. */
-  private long timeStampOfLastWriteLockReportMs = 0;
-  /** Longest time (ms) a write lock was held since the last report. */
-  private long longestWriteLockHeldIntervalMs = 0;
+  /** Frequency limiter used for reporting long write lock hold times. */
+  private final LogThrottlingHelper writeLockReportLogger;
+    this.writeLockReportLogger =
+        new LogThrottlingHelper(lockSuppressWarningIntervalMs);
-    boolean logReport = false;
-    int numSuppressedWarnings = 0;
-    long longestLockHeldIntervalMs = 0;
+    LogAction logAction = LogThrottlingHelper.DO_NOT_LOG;
-      if (writeLockIntervalMs > longestWriteLockHeldIntervalMs) {
-        longestWriteLockHeldIntervalMs = writeLockIntervalMs;
-      }
-      if (currentTimeMs - timeStampOfLastWriteLockReportMs >
-          this.lockSuppressWarningIntervalMs) {
-        logReport = true;
-        numSuppressedWarnings = numWriteLockWarningsSuppressed;
-        numWriteLockWarningsSuppressed = 0;
-        longestLockHeldIntervalMs = longestWriteLockHeldIntervalMs;
-        longestWriteLockHeldIntervalMs = 0;
-        timeStampOfLastWriteLockReportMs = currentTimeMs;
-      } else {
-        numWriteLockWarningsSuppressed++;
-      }
+      logAction = writeLockReportLogger
+          .record("write", currentTimeMs, writeLockIntervalMs);
-    if (logReport) {
-      FSNamesystem.LOG.info("FSNamesystem write lock held for " +
-          writeLockIntervalMs + " ms via\n" +
-          StringUtils.getStackTrace(Thread.currentThread()) +
-          "\tNumber of suppressed write-lock reports: " +
-          numSuppressedWarnings + "\n\tLongest write-lock held interval: " +
-          longestLockHeldIntervalMs);
+    if (logAction.shouldLog()) {
+      FSNamesystem.LOG.info("FSNamesystem write lock held for {} ms via {}\t" +
+          "Number of suppressed write-lock reports: {}\n\tLongest write-lock " +
+          "held interval: {} \n\tTotal suppressed write-lock held time: {}",
+          writeLockIntervalMs,
+          StringUtils.getStackTrace(Thread.currentThread()),
+          logAction.getCount() - 1, logAction.getStats(0).getMax(),
+          logAction.getStats(0).getSum() - writeLockIntervalMs);

INS26 INS26 INS40 INS40 INS83 INS43 INS42 UPD42 INS21 MOV25 MOV25 UPD66 INS7 INS43 MOV27 INS32 INS8 INS22 INS14 INS42 UPD42 INS40 INS42 INS42 INS21 INS52 INS42 INS43 INS42 INS32 INS42 INS42 INS32 INS40 INS42 INS27 INS42 MOV32 INS27 INS32 INS27 INS42 INS42 INS45 INS42 INS42 INS45 INS45 INS45 INS32 INS34 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS34 INS32 INS42 INS42 INS42 INS34 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL39 DEL34 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL39 DEL9 DEL42 DEL42 DEL27 DEL42 DEL42 DEL39 DEL42 DEL34 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL60 DEL8 DEL25 DEL42 DEL42 DEL27 DEL52 DEL42 DEL22 DEL27 DEL42 DEL9 DEL7 DEL21 DEL42 DEL42 DEL7 DEL21 DEL42 DEL34 DEL7 DEL21 DEL42 DEL42 DEL7 DEL21 DEL42 DEL34 DEL7 DEL21 DEL42 DEL42 DEL7 DEL21 DEL8 DEL42 DEL37 DEL21 DEL8 DEL42 DEL40 DEL42 DEL45 DEL42 DEL45 DEL45 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL8 DEL25