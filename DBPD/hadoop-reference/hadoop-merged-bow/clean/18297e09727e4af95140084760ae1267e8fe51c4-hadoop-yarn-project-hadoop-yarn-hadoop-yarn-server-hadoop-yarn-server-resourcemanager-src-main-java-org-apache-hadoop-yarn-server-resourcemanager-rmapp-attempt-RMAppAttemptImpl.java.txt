YARN-3104. Fixed RM to not generate new AMRM tokens on every heartbeat between rolling and activation. Contributed by Jason Lowe

+import java.io.IOException;
+import org.apache.hadoop.yarn.exceptions.YarnRuntimeException;
+  private volatile Integer amrmTokenKeyId = null;
+      this.amrmTokenKeyId = null;
+  @Private
+  public int getAMRMTokenKeyId() {
+    Integer keyId = this.amrmTokenKeyId;
+    if (keyId == null) {
+      this.readLock.lock();
+      try {
+        if (this.amrmToken == null) {
+          throw new YarnRuntimeException("Missing AMRM token for "
+              + this.applicationAttemptId);
+        }
+        keyId = this.amrmToken.decodeIdentifier().getKeyId();
+        this.amrmTokenKeyId = keyId;
+      } catch (IOException e) {
+        throw new YarnRuntimeException("AMRM token decode error for "
+            + this.applicationAttemptId, e);
+      } finally {
+        this.readLock.unlock();
+      }
+    }
+    return keyId;
+  }
+
-    this.amrmToken =
-        rmContext.getAMRMTokenSecretManager().createAndGetAMRMToken(
-          applicationAttemptId);
+    setAMRMToken(rmContext.getAMRMTokenSecretManager().createAndGetAMRMToken(
+        applicationAttemptId));

INS26 INS26 INS40 INS40 INS23 INS31 INS83 INS83 INS43 INS59 INS78 INS83 INS39 INS42 INS8 INS42 INS42 INS33 INS42 INS60 INS25 INS41 INS43 INS59 INS27 INS8 INS42 INS32 INS21 INS42 INS42 INS22 INS42 INS33 INS21 INS54 INS42 MOV32 INS7 INS52 INS42 INS32 INS8 INS12 INS8 INS22 INS33 INS22 INS42 INS25 INS21 INS21 INS44 INS8 INS21 INS52 INS42 INS52 INS42 INS27 INS8 INS7 INS7 INS43 INS42 INS53 INS32 INS22 INS33 INS53 INS42 INS32 INS22 INS42 INS42 INS14 INS22 INS42 INS52 INS42 INS14 INS32 INS42 INS52 INS42 INS43 INS27 INS42 INS52 INS42 INS43 INS27 MOV22 INS42 INS42 INS45 INS22 INS42 INS45 INS22 INS52 INS42 INS52 INS42 DEL7