HDFS-11984. Ozone: Ensures listKey lists all required key fields. Contributed by Yiqun Lin.

+import org.apache.hadoop.util.Time;
+   * Date format that used in ozone. Here the format is thread safe to use.
+   */
+  private static final ThreadLocal<SimpleDateFormat> DATE_FORMAT =
+      new ThreadLocal<SimpleDateFormat>() {
+    @Override
+    protected SimpleDateFormat initialValue() {
+      SimpleDateFormat format = new SimpleDateFormat(
+          OzoneConsts.OZONE_DATE_FORMAT, Locale.US);
+      format.setTimeZone(TimeZone.getTimeZone(OzoneConsts.OZONE_TIME_ZONE));
+
+      return format;
+    }
+  };
+
+  /**
-    SimpleDateFormat format =
-        new SimpleDateFormat(OzoneConsts.OZONE_DATE_FORMAT, Locale.US);
-    format.setTimeZone(TimeZone.getTimeZone(OzoneConsts.OZONE_TIME_ZONE));
-
-      return format.parse(dateString);
+      return DATE_FORMAT.get().parse(dateString);
-    SimpleDateFormat format =
-        new SimpleDateFormat(OzoneConsts.OZONE_DATE_FORMAT, Locale.US);
-    format.setTimeZone(TimeZone.getTimeZone(OzoneConsts.OZONE_TIME_ZONE));
-    String date = format.format(new Date(System.currentTimeMillis()));
+    String date = DATE_FORMAT.get().format(new Date(Time.now()));
-    SimpleDateFormat format =
-        new SimpleDateFormat(OzoneConsts.OZONE_DATE_FORMAT, Locale.US);
-    format.setTimeZone(TimeZone.getTimeZone(OzoneConsts.OZONE_TIME_ZONE));
-    String date = format.format(new Date(System.currentTimeMillis()));
+    String date = DATE_FORMAT.get().format(new Date(Time.now()));
+
+  /**
+   * Convert time in millisecond to a human readable format required in ozone.
+   * @return a human readable string for the input time
+   */
+  public static String formatTime(long millis) {
+    return DATE_FORMAT.get().format(millis);
+  }
+
+  /**
+   * Convert time in ozone date format to millisecond.
+   * @return time in milliseconds
+   */
+  public static long formatDate(String date) throws ParseException {
+    Preconditions.checkNotNull(date, "Date string should not be null.");
+    return DATE_FORMAT.get().parse(date).getTime();
+  }

INS26 INS40 INS23 INS31 INS31 INS29 INS83 INS83 INS83 INS74 INS59 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS43 INS8 INS65 INS43 INS43 INS42 INS14 INS65 INS65 INS42 INS39 INS42 INS41 INS65 INS65 INS43 INS42 INS42 INS21 INS41 INS66 INS42 INS42 INS74 INS1 INS66 INS66 INS32 INS66 INS66 INS42 INS32 INS32 INS43 INS43 INS31 INS32 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS78 INS83 INS43 INS42 INS8 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 MOV60 MOV21 INS41 INS32 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 UPD42 UPD42 UPD42 DEL42 DEL43 DEL42 DEL42 DEL43 DEL40 DEL40 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL43 DEL40 DEL40 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL32 DEL21