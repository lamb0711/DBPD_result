HDDS-682. Unified o3 address parsing for ozonen sh. Contributed by Elek, Marton.

-import java.net.URI;
-import java.nio.file.Path;
-import java.nio.file.Paths;
-
-import org.apache.commons.lang3.StringUtils;
-import org.apache.hadoop.ozone.client.OzoneClientException;
+import org.apache.hadoop.ozone.client.OzoneClient;
-import org.apache.hadoop.ozone.web.ozShell.Shell;
+import org.apache.hadoop.ozone.web.ozShell.OzoneAddress;
-  @Parameters(arity = "1..1", description = Shell
-      .OZONE_S3BUCKET_URI_DESCRIPTION)
-  private String uri;
+  @Parameters(arity = "1..1", description = "Name of the s3 bucket.")
+  private String s3BucketName;
-    URI ozoneURI = verifyURI(uri);
-    Path path = Paths.get(ozoneURI.getPath());
-    int pathNameCount = path.getNameCount();
-    String errorMessage;
+    OzoneAddress ozoneAddress = new OzoneAddress();
+    OzoneClient client = ozoneAddress.createClient(createOzoneConfiguration());
-    // When just uri is given as http://om:9874, we are getting pathCount
-    // still as 1, as getPath() is returning empty string.
-    // So for safer side check, whether it is an empty string
-    if (pathNameCount == 1) {
-      String s3Bucket = path.getName(0).toString();
-      if (StringUtils.isBlank(s3Bucket)) {
-        errorMessage = "S3Bucket name is required to get volume name and " +
-            "Ozone fs Uri";
-        throw new OzoneClientException(errorMessage);
-      }
-    }
-    if (pathNameCount != 1) {
-      if (pathNameCount < 1) {
-        errorMessage = "S3Bucket name is required to get volume name and " +
-            "Ozone fs Uri";
-      } else {
-        errorMessage = "Invalid S3Bucket name. Delimiters (/) not allowed in " +
-            "S3Bucket name";
-      }
-      throw new OzoneClientException(errorMessage);
-    }
-
-    String s3Bucket = path.getName(0).toString();
-    if (isVerbose()) {
-      System.out.printf("S3Bucket Name : %s%n", s3Bucket);
-    }
-
-    String mapping = client.getObjectStore().getOzoneBucketMapping(s3Bucket);
-    String volumeName = client.getObjectStore().getOzoneVolumeName(s3Bucket);
+    String mapping =
+        client.getObjectStore().getOzoneBucketMapping(s3BucketName);
+    String volumeName =
+        client.getObjectStore().getOzoneVolumeName(s3BucketName);
-        .OZONE_URI_SCHEME, s3Bucket, volumeName);
+        .OZONE_URI_SCHEME, s3BucketName, volumeName);

UPD40 UPD40 MOV60 UPD42 INS45 UPD43 UPD43 MOV43 MOV43 MOV43 UPD42 UPD42 INS14 UPD42 UPD42 UPD42 UPD42 INS43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL42 DEL42 DEL32 DEL42 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL59 DEL60 DEL42 DEL34 DEL27 DEL42 DEL42 DEL42 DEL34 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL45 DEL45 DEL27 DEL7 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25 DEL8 DEL25 DEL42 DEL34 DEL27 DEL42 DEL34 DEL27 DEL42 DEL45 DEL45 DEL27 DEL7 DEL21 DEL8 DEL42 DEL45 DEL45 DEL27 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL34 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL40 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43