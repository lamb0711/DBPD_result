HDFS-13364. RBF: Support NamenodeProtocol in the Router. Contributed by Inigo Goiri.

-import org.apache.hadoop.hdfs.protocol.ClientProtocol;
-   * @param rpcAddress ClientProtocol RPC server address of the NN.
+   * @param rpcAddress RPC server address of the NN.
+   * @param proto Protocol of the connection.
-  private ConnectionContext getConnection(
-      UserGroupInformation ugi, String nsId, String rpcAddress)
-          throws IOException {
+  private ConnectionContext getConnection(UserGroupInformation ugi, String nsId,
+      String rpcAddress, Class<?> proto) throws IOException {
-      connection = this.connectionManager.getConnection(ugi, rpcAddress);
+      connection = this.connectionManager.getConnection(ugi, rpcAddress, proto);
-      final Method method, final Object... params) throws IOException {
+      final Class<?> protocol, final Method method, final Object... params)
+          throws IOException {
-        connection = this.getConnection(ugi, nsId, rpcAddress);
-        ProxyAndInfo<ClientProtocol> client = connection.getClient();
-        ClientProtocol proxy = client.getProxy();
+        connection = this.getConnection(ugi, nsId, rpcAddress, protocol);
+        ProxyAndInfo<?> client = connection.getClient();
+        final Object proxy = client.getProxy();
+
-    return invokeMethod(ugi, nns, method.getMethod(), method.getParams(loc));
+    Class<?> proto = method.getProtocol();
+    Method m = method.getMethod();
+    Object[] params = method.getParams(loc);
+    return invokeMethod(ugi, nns, proto, m, params);
+  }
+
+  /**
+   * Invokes a remote method against the specified namespace.
+   *
+   * Re-throws exceptions generated by the remote RPC call as either
+   * RemoteException or IOException.
+   *
+   * @param nsId Target namespace for the method.
+   * @param method The remote method and parameters to invoke.
+   * @param clazz Class for the return type.
+   * @return The result of invoking the method.
+   * @throws IOException If the invoke generated an error.
+   */
+  public <T> T invokeSingle(final String nsId, RemoteMethod method,
+      Class<T> clazz) throws IOException {
+    @SuppressWarnings("unchecked")
+    T ret = (T)invokeSingle(nsId, method);
+    return ret;
+        Class<?> proto = remoteMethod.getProtocol();
-        Object result = invokeMethod(ugi, namenodes, m, params);
+        Object result = invokeMethod(ugi, namenodes, proto, m, params);
+      Class<?> proto = method.getProtocol();
-      Object result = invokeMethod(ugi, namenodes, m, paramList);
+      Object result = invokeMethod(ugi, namenodes, proto, m, paramList);
+      final Class<?> proto = method.getProtocol();
-              return invokeMethod(ugi, nnList, m, paramList);
+              return invokeMethod(ugi, nnList, proto, m, paramList);
-            return invokeMethod(ugi, namenodes, m, paramList);
+            return invokeMethod(ugi, namenodes, proto, m, paramList);

INS31 INS44 INS44 INS29 INS83 INS73 INS43 INS42 INS44 INS44 INS44 INS43 INS8 INS65 INS74 INS42 INS83 INS74 INS42 INS60 INS60 INS60 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS42 INS83 INS43 INS42 INS43 INS42 INS74 INS42 INS42 INS60 INS41 UPD66 INS42 INS66 INS43 INS76 INS43 INS76 INS74 INS59 INS43 INS59 INS5 INS59 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS42 INS43 INS43 INS79 INS43 INS59 INS42 INS42 INS42 INS43 INS76 INS42 INS32 INS42 INS42 MOV32 INS43 INS85 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS11 INS60 INS60 INS42 INS42 INS42 INS42 INS43 INS32 INS74 INS59 INS83 INS74 INS59 INS42 INS42 INS42 INS42 INS60 INS43 INS76 INS42 INS32 INS43 INS76 INS42 INS32 INS42 UPD74 INS83 UPD43 INS74 INS59 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS76 UPD42 INS43 INS76 INS42 INS32 INS42 INS42 INS42 INS42 INS42 MOV74 MOV74 MOV43 MOV43 MOV43 MOV43 INS42 INS42 DEL40 DEL26 DEL42 DEL43