YARN-8569. Create an interface to provide cluster information to application. Contributed by Eric Yang

+import com.sun.jersey.api.client.ClientResponse;
+import com.sun.jersey.api.client.WebResource.Builder;
+
+import org.apache.hadoop.yarn.api.ApplicationConstants;
+import org.apache.hadoop.yarn.service.utils.HttpUtil;
+import java.net.URISyntaxException;
+
+  public void syncSysFs(Service yarnApp) {
+    boolean success = true;
+    Configuration conf = getConfig();
+    String spec;
+    boolean useKerberos = UserGroupInformation.isSecurityEnabled();
+    boolean printSyncResult = false;
+    try {
+      String port = conf.get("yarn.nodemanager.webapp.address").split(":")[1];
+      spec = ServiceApiUtil.jsonSerDeser.toJson(yarnApp);
+      for (org.apache.hadoop.yarn.service.api.records.Component c :
+          yarnApp.getComponents()) {
+        Set<String> nodes = new HashSet<String>();
+        boolean update = Boolean.parseBoolean(c.getConfiguration()
+            .getEnv(ApplicationConstants.Environment
+                .YARN_CONTAINER_RUNTIME_YARN_SYSFS_ENABLE.name()));
+        if (!update) {
+          continue;
+        }
+        printSyncResult = true;
+        for (org.apache.hadoop.yarn.service.api.records.Container container :
+            c.getContainers()) {
+          String bareHost = container.getBareHost();
+          nodes.add(bareHost);
+        }
+        for (String bareHost : nodes) {
+          StringBuilder requestPath = new StringBuilder();
+          if (YarnConfiguration.useHttps(conf)) {
+            requestPath.append("https://");
+          } else {
+            requestPath.append("http://");
+          }
+          requestPath.append(bareHost);
+          requestPath.append(":");
+          requestPath.append(port);
+          requestPath.append("/ws/v1/node/yarn/sysfs/");
+          requestPath.append(UserGroupInformation.getCurrentUser()
+              .getShortUserName());
+          requestPath.append("/");
+          requestPath.append(yarnApp.getId());
+          if (!useKerberos) {
+            requestPath.append("?user.name=");
+            requestPath.append(UserGroupInformation.getCurrentUser()
+                .getShortUserName());
+          }
+          Builder builder = HttpUtil.connect(requestPath.toString());
+          ClientResponse response = builder.put(ClientResponse.class, spec);
+          if (response.getStatus()!=ClientResponse.Status.OK.getStatusCode()) {
+            LOG.warn("Error synchronize YARN sysfs: " +
+                response.getEntity(String.class));
+            success = false;
+          }
+        }
+      }
+      if (printSyncResult && success) {
+        LOG.info("YARN sysfs synchronized.");
+      }
+    } catch (IOException | URISyntaxException | InterruptedException e) {
+      LOG.error("Fail to sync service spec: {}", e);
+    }
+  }

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS31 INS83 INS39 INS42 INS44 INS8 INS43 INS42 INS60 INS60 INS60 INS60 INS60 INS54 INS42 INS39 INS59 INS43 INS59 INS43 INS59 INS39 INS59 INS39 INS59 INS8 INS12 INS42 INS9 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS9 INS60 INS21 INS70 INS25 INS44 INS8 INS42 INS42 INS42 INS43 INS59 INS7 INS44 INS32 INS8 INS27 INS8 INS84 INS42 INS21 INS42 INS42 INS2 INS42 INS32 INS43 INS42 INS42 INS42 INS60 INS60 INS25 INS21 INS70 INS70 INS42 INS42 INS21 INS43 INS43 INS43 INS32 INS32 INS34 INS40 INS42 INS42 INS40 INS74 INS59 INS39 INS59 INS38 INS8 INS7 INS44 INS32 INS8 INS44 INS42 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS32 INS42 INS45 INS43 INS43 INS42 INS14 INS42 INS32 INS42 INS18 INS42 INS9 INS43 INS42 INS42 INS42 INS60 INS21 INS43 INS42 INS60 INS25 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS25 INS60 INS60 INS25 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS74 INS42 INS42 INS32 INS40 INS43 INS59 INS32 INS42 INS43 INS59 INS32 INS8 INS8 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS38 INS8 INS43 INS59 INS43 INS59 INS27 INS8 INS43 INS43 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS21 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS32 INS21 INS21 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS43 INS32 INS32 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS57 INS42 INS42 INS42 INS40 INS42 INS32 INS7 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS43 INS42 INS42 INS27 INS42 INS9 INS32 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS57 INS43 INS42