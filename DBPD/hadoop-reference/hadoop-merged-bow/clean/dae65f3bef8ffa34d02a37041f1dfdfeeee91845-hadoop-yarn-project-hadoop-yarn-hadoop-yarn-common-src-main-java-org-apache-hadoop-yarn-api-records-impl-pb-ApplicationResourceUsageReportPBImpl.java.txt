YARN-6232. Update resource usage and preempted resource calculations to take into account all resource types. Contributed by Varun Vasudev.

+import org.apache.hadoop.yarn.api.records.ResourceInformation;
+import java.util.HashMap;
+import java.util.Map;
+
+  private Map<String, Long> resourceSecondsMap;
+  private Map<String, Long> preemptedResourceSecondsMap;
+
+    getResourceSecondsMap();
+    getPreemptedResourceSecondsMap();
+    builder.clearApplicationResourceUsageMap();
+    builder.clearApplicationPreemptedResourceUsageMap();
+
+    if (preemptedResourceSecondsMap != null && !preemptedResourceSecondsMap
+        .isEmpty()) {
+      builder.addAllApplicationPreemptedResourceUsageMap(ProtoUtils
+          .convertMapToStringLongMapProtoList(preemptedResourceSecondsMap));
+    }
+    if (resourceSecondsMap != null && !resourceSecondsMap.isEmpty()) {
+      builder.addAllApplicationResourceUsageMap(
+          ProtoUtils.convertMapToStringLongMapProtoList(resourceSecondsMap));
+    }
+
+    builder.setMemorySeconds(this.getMemorySeconds());
+    builder.setVcoreSeconds(this.getVcoreSeconds());
+    builder.setPreemptedMemorySeconds(this.getPreemptedMemorySeconds());
+    builder.setPreemptedVcoreSeconds(this.getPreemptedVcoreSeconds());
-    maybeInitBuilder();
-    builder.setMemorySeconds(memory_seconds);
+    getResourceSecondsMap()
+        .put(ResourceInformation.MEMORY_MB.getName(), memory_seconds);
-  
+
-    ApplicationResourceUsageReportProtoOrBuilder p = viaProto ? proto : builder;
-    return p.getMemorySeconds();
+    Map<String, Long> tmp = getResourceSecondsMap();
+    if (tmp.containsKey(ResourceInformation.MEMORY_MB.getName())) {
+      return tmp.get(ResourceInformation.MEMORY_MB.getName());
+    }
+    return 0;
-    maybeInitBuilder();
-    builder.setVcoreSeconds(vcore_seconds);
+    getResourceSecondsMap()
+        .put(ResourceInformation.VCORES.getName(), vcore_seconds);
-    ApplicationResourceUsageReportProtoOrBuilder p = viaProto ? proto : builder;
-    return (p.getVcoreSeconds());
+    Map<String, Long> tmp = getResourceSecondsMap();
+    if (tmp.containsKey(ResourceInformation.VCORES.getName())) {
+      return tmp.get(ResourceInformation.VCORES.getName());
+    }
+    return 0;
-    maybeInitBuilder();
-    builder.setPreemptedMemorySeconds(preemptedMemorySeconds);
+    getPreemptedResourceSecondsMap()
+        .put(ResourceInformation.MEMORY_MB.getName(), preemptedMemorySeconds);
-    ApplicationResourceUsageReportProtoOrBuilder p =
-        viaProto ? proto : builder;
-    return p.getPreemptedMemorySeconds();
+    Map<String, Long> tmp = getPreemptedResourceSecondsMap();
+    if (tmp.containsKey(ResourceInformation.MEMORY_MB.getName())) {
+      return tmp.get(ResourceInformation.MEMORY_MB.getName());
+    }
+    return 0;
-    maybeInitBuilder();
-    builder.setPreemptedVcoreSeconds(vcoreSeconds);
+    getPreemptedResourceSecondsMap()
+        .put(ResourceInformation.VCORES.getName(), vcoreSeconds);
-    ApplicationResourceUsageReportProtoOrBuilder p =
-        viaProto ? proto : builder;
-    return (p.getPreemptedVcoreSeconds());
+    Map<String, Long> tmp = getPreemptedResourceSecondsMap();
+    if (tmp.containsKey(ResourceInformation.VCORES.getName())) {
+      return tmp.get(ResourceInformation.VCORES.getName());
+    }
+    return 0;
+
+  @Override
+  public synchronized void setResourceSecondsMap(
+      Map<String, Long> resourceSecondsMap) {
+    this.resourceSecondsMap = resourceSecondsMap;
+    if (resourceSecondsMap == null) {
+      return;
+    }
+    if (!resourceSecondsMap
+        .containsKey(ResourceInformation.MEMORY_MB.getName())) {
+      this.setMemorySeconds(0L);
+    }
+    if (!resourceSecondsMap.containsKey(ResourceInformation.VCORES.getName())) {
+      this.setVcoreSeconds(0L);
+    }
+  }
+
+  @Override
+  public synchronized Map<String, Long> getResourceSecondsMap() {
+    if (this.resourceSecondsMap != null) {
+      return this.resourceSecondsMap;
+    }
+    ApplicationResourceUsageReportProtoOrBuilder p = viaProto ? proto : builder;
+    this.resourceSecondsMap = ProtoUtils
+        .convertStringLongMapProtoListToMap(
+            p.getApplicationResourceUsageMapList());
+    if (!this.resourceSecondsMap
+        .containsKey(ResourceInformation.MEMORY_MB.getName())) {
+      this.setMemorySeconds(p.getMemorySeconds());
+    }
+    if (!this.resourceSecondsMap
+        .containsKey(ResourceInformation.VCORES.getName())) {
+      this.setVcoreSeconds(p.getVcoreSeconds());
+    }
+    this.setMemorySeconds(p.getMemorySeconds());
+    this.setVcoreSeconds(p.getVcoreSeconds());
+    return this.resourceSecondsMap;
+  }
+
+  @Override
+  public synchronized void setPreemptedResourceSecondsMap(
+      Map<String, Long> preemptedResourceSecondsMap) {
+    this.preemptedResourceSecondsMap = preemptedResourceSecondsMap;
+    if (preemptedResourceSecondsMap == null) {
+      return;
+    }
+    if (!preemptedResourceSecondsMap
+        .containsKey(ResourceInformation.MEMORY_MB.getName())) {
+      this.setPreemptedMemorySeconds(0L);
+    }
+    if (!preemptedResourceSecondsMap
+        .containsKey(ResourceInformation.VCORES.getName())) {
+      this.setPreemptedVcoreSeconds(0L);
+    }
+  }
+
+  @Override
+  public synchronized Map<String, Long> getPreemptedResourceSecondsMap() {
+    if (this.preemptedResourceSecondsMap != null) {
+      return this.preemptedResourceSecondsMap;
+    }
+    ApplicationResourceUsageReportProtoOrBuilder p = viaProto ? proto : builder;
+    this.preemptedResourceSecondsMap = ProtoUtils
+        .convertStringLongMapProtoListToMap(
+            p.getApplicationPreemptedResourceUsageMapList());
+    if (!this.preemptedResourceSecondsMap
+        .containsKey(ResourceInformation.MEMORY_MB.getName())) {
+      this.setPreemptedMemorySeconds(p.getPreemptedMemorySeconds());
+    }
+    if (!this.preemptedResourceSecondsMap
+        .containsKey(ResourceInformation.VCORES.getName())) {
+      this.setPreemptedVcoreSeconds(p.getPreemptedVcoreSeconds());
+    }
+    this.setPreemptedMemorySeconds(p.getPreemptedMemorySeconds());
+    this.setPreemptedVcoreSeconds(p.getPreemptedVcoreSeconds());
+    return this.preemptedResourceSecondsMap;
+  }

INS26 INS26 INS26 MOV31 INS40 INS40 INS40 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS83 INS74 INS59 INS83 INS74 INS59 MOV78 MOV78 MOV78 INS8 MOV78 MOV83 MOV83 MOV39 MOV42 MOV44 INS8 MOV78 INS83 INS83 INS39 INS42 INS8 INS78 INS83 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS83 INS74 INS42 MOV8 INS78 UPD39 UPD42 INS44 INS8 INS78 INS83 INS83 INS74 INS42 INS8 INS43 INS43 INS43 INS42 INS43 INS43 INS43 INS42 INS21 INS21 INS21 INS21 INS25 INS25 INS21 INS21 INS21 INS21 INS21 INS25 INS41 INS21 INS25 INS41 INS21 INS60 INS25 INS41 INS21 INS60 INS25 INS41 INS42 INS74 INS42 INS21 INS25 INS25 INS25 INS42 INS43 INS43 INS43 INS25 MOV60 INS25 INS25 INS21 INS41 INS42 INS74 INS42 INS21 INS25 INS25 INS25 INS42 INS43 INS43 INS43 INS25 MOV60 INS21 INS25 INS25 INS21 INS21 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS32 INS27 INS8 INS27 INS8 INS32 INS32 INS32 INS32 INS32 INS74 INS59 INS32 INS8 INS34 INS32 INS74 INS59 INS32 INS8 INS34 INS32 INS74 INS59 INS32 INS8 INS34 INS32 INS74 INS59 INS32 INS8 INS34 INS43 INS43 INS43 INS7 INS27 INS8 INS38 INS8 INS38 INS8 INS42 INS42 INS42 INS27 INS8 INS7 INS38 INS8 INS38 INS8 INS32 INS22 INS43 INS43 INS43 INS7 INS27 INS8 INS38 INS8 INS38 INS8 INS42 INS42 INS42 INS27 INS8 INS7 INS38 INS8 INS38 INS8 INS32 INS32 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS38 INS21 INS27 INS38 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 UPD42 MOV42 INS32 MOV42 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS32 MOV41 INS32 UPD42 MOV42 INS32 MOV42 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS32 MOV41 INS32 UPD42 MOV42 INS32 MOV42 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS32 MOV41 INS32 INS42 INS32 INS42 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS32 INS41 INS42 INS42 INS42 INS22 INS42 INS42 INS33 INS41 INS32 INS21 INS32 INS21 INS22 INS33 INS41 INS22 INS32 INS32 INS21 INS32 INS21 INS52 INS42 INS32 INS52 UPD42 INS32 INS52 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS33 MOV41 INS32 INS21 INS32 INS21 INS22 INS33 INS41 INS22 INS32 INS32 INS21 INS32 INS21 INS52 INS42 INS32 INS52 INS42 INS32 INS52 INS42 INS42 INS33 INS32 INS32 INS42 INS33 INS32 INS32 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 UPD42 MOV42 INS40 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS40 INS42 INS32 UPD42 MOV42 INS40 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS40 INS42 INS32 UPD42 MOV42 INS40 UPD42 MOV42 INS42 INS42 INS42 INS42 INS40 INS42 INS32 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS32 INS52 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 INS52 INS42 INS22 INS52 INS42 INS42 INS42 INS32 INS22 INS42 INS32 INS32 INS22 INS42 INS32 INS32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS52 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 INS52 INS42 INS22 INS52 INS42 INS42 INS42 INS32 INS22 INS42 INS32 INS32 INS22 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS40 INS42 INS52 INS42 INS34 INS40 INS42 INS52 INS42 INS34 INS52 INS42 UPD42 MOV42 INS42 INS52 INS42 INS40 INS42 INS52 INS42 MOV32 INS52 INS42 INS40 INS42 INS52 INS42 MOV32 INS40 INS42 INS52 INS42 INS34 INS40 INS42 INS52 INS42 INS34 INS52 INS42 INS42 INS42 INS52 INS42 INS40 INS42 INS52 INS42 MOV32 INS52 INS42 INS40 INS42 INS52 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 DEL32 DEL21 DEL32 DEL21 DEL43 DEL42 DEL42 DEL42 DEL42 DEL16 DEL59 DEL32 DEL21 DEL32 DEL21 DEL43 DEL42 DEL42 DEL42 DEL42 DEL16 DEL59 DEL36 DEL32 DEL21 DEL32 DEL21 DEL8 DEL31 DEL32 DEL36 DEL8