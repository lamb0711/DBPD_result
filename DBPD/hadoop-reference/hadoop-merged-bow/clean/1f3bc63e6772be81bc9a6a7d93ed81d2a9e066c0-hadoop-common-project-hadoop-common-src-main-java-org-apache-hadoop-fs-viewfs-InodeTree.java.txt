HADOOP-12077. Provide a multi-URI replication Inode for ViewFs. Contributed by Gera Shegalov

+  enum LinkType {
+    SINGLE,
+    MERGE,
+    NFLY
+  }
+
-    final boolean isMergeLink; // true if MergeLink
-     * Construct a mergeLink.
+     * Construct a mergeLink or nfly.
-      isMergeLink = true;
-      isMergeLink = false;
-      final boolean isLinkMerge, final UserGroupInformation aUgi)
+      final LinkType linkType, final String settings,
+      final UserGroupInformation aUgi,
+      final Configuration config)
-    if (isLinkMerge) { // Target is list of URIs
-      String[] targetsList = StringUtils.getStrings(target);
-      URI[] targetsListURI = new URI[targetsList.length];
-      int k = 0;
-      for (String itarget : targetsList) {
-        targetsListURI[k++] = new URI(itarget);
-      }
-      newLink = new INodeLink<T>(fullPath, aUgi,
-          getTargetFileSystem(targetsListURI), targetsListURI);
-    } else {
+    switch (linkType) {
+    case SINGLE:
+      break;
+    case MERGE:
+    case NFLY:
+      final URI[] targetUris = StringUtils.stringToURI(
+          StringUtils.getStrings(target));
+      newLink = new INodeLink<T>(fullPath, aUgi,
+            getTargetFileSystem(settings, targetUris), targetUris);
+      break;
+    default:
+      throw new IllegalArgumentException(linkType + ": Infeasible linkType");
-  protected abstract T getTargetFileSystem(final URI uri)
+  protected abstract T getTargetFileSystem(URI uri)
-  protected abstract T getTargetFileSystem(final INodeDir<T> dir)
+  protected abstract T getTargetFileSystem(INodeDir<T> dir)
-  protected abstract T getTargetFileSystem(final URI[] mergeFsURIList)
-      throws UnsupportedFileSystemException, URISyntaxException;
+  protected abstract T getTargetFileSystem(String settings, URI[] mergeFsURIs)
+      throws UnsupportedFileSystemException, URISyntaxException, IOException;
-        boolean isMergeLink = false;
+        LinkType linkType = LinkType.SINGLE;
+        String settings = null;
-          isMergeLink = true;
+          linkType = LinkType.MERGE;
+        } else if (src.startsWith(Constants.CONFIG_VIEWFS_LINK_NFLY)) {
+          // prefix.settings.src
+          src = src.substring(Constants.CONFIG_VIEWFS_LINK_NFLY.length() + 1);
+          // settings.src
+          settings = src.substring(0, src.indexOf('.'));
+          // settings
+
+          // settings.src
+          src = src.substring(settings.length() + 1);
+          // src
+
+          linkType = LinkType.NFLY;
-        createLink(src, target, isMergeLink, ugi);
+        createLink(src, target, linkType, settings, ugi, config);

INS71 INS42 INS72 INS72 INS72 INS44 INS44 MOV44 INS43 INS42 INS42 INS42 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS50 MOV43 UPD42 MOV5 UPD42 INS42 INS42 INS42 INS42 INS42 INS49 MOV21 INS10 INS49 INS49 MOV60 INS21 INS10 INS49 INS53 UPD66 INS42 INS42 INS42 INS83 UPD5 MOV7 INS14 MOV43 MOV85 UPD42 INS32 INS43 INS27 INS42 INS42 MOV32 UPD42 INS42 INS42 INS45 INS60 INS42 UPD42 INS43 MOV43 INS59 INS42 UPD42 INS40 INS42 INS33 INS25 UPD42 INS42 INS42 INS32 INS8 MOV25 INS42 INS42 INS40 INS21 INS21 INS21 INS21 UPD42 INS40 INS7 INS7 INS7 INS7 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS40 INS42 INS42 INS27 INS42 INS42 INS34 INS32 INS42 INS42 INS27 INS32 INS34 INS42 INS42 INS13 INS32 INS34 INS40 INS42 INS42 INS42 DEL83 DEL39 DEL42 DEL59 DEL23 DEL42 DEL9 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL39 DEL42 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL40 DEL3 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL42 DEL42 DEL37 DEL2 DEL42 DEL14 DEL7 DEL21 DEL8 DEL70 DEL21 DEL8 DEL8 DEL25 DEL83 DEL42 DEL43 DEL83 DEL83 DEL39 DEL9 DEL9