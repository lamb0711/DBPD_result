HADOOP-14324. Refine S3 server-side-encryption key as encryption secret; improve error reporting and diagnostics. Contributed by Steve Loughran

+  /**
+   * Encryption SSE-C used but the config lacks an encryption key.
+   */
+  public static final String SSE_C_NO_KEY_ERROR =
+      S3AEncryptionMethods.SSE_C.getMethod()
+          + " is enabled but no encryption key was declared in "
+          + SERVER_SIDE_ENCRYPTION_KEY;
+  /**
+   * Encryption SSE-S3 is used but the caller also set an encryption key.
+   */
+  public static final String SSE_S3_WITH_KEY_ERROR =
+      S3AEncryptionMethods.SSE_S3.getMethod()
+          + " is enabled but an encryption key was set in "
+          + SERVER_SIDE_ENCRYPTION_KEY;
+
+
+    String defVal = "";
+    return getPassword(conf, key, val, defVal);
+  }
+
+  /**
+   * Get a password from a configuration, or, if a value is passed in,
+   * pick that up instead.
+   * @param conf configuration
+   * @param key key to look up
+   * @param val current value: if non empty this is used instead of
+   * querying the configuration.
+   * @param defVal default value if nothing is set
+   * @return a password or "".
+   * @throws IOException on any problem
+   */
+  private static String getPassword(Configuration conf,
+      String key,
+      String val,
+      String defVal) throws IOException {
-        ? lookupPassword(conf, key, "")
+        ? lookupPassword(conf, key, defVal)
+  /**
+   * Get any SSE key from a configuration/credential provider.
+   * This operation handles the case where the option has been
+   * set in the provider or configuration to the option
+   * {@code OLD_S3A_SERVER_SIDE_ENCRYPTION_KEY}.
+   * @param conf configuration to examine
+   * @return the encryption key or null
+   */
-      return getPassword(conf, Constants.SERVER_SIDE_ENCRYPTION_KEY,
-        conf.getTrimmed(SERVER_SIDE_ENCRYPTION_KEY));
+      return lookupPassword(conf, SERVER_SIDE_ENCRYPTION_KEY,
+          getPassword(conf, OLD_S3A_SERVER_SIDE_ENCRYPTION_KEY,
+              null, null));
+      return "";
-    return null;
+  }
+
+  /**
+   * Get the server-side encryption algorithm.
+   * This includes validation of the configuration, checking the state of
+   * the encryption key given the chosen algorithm.
+   * @param conf configuration to scan
+   * @return the encryption mechanism (which will be {@code NONE} unless
+   * one is set.
+   * @throws IOException on any validation problem.
+   */
+  static S3AEncryptionMethods getEncryptionAlgorithm(Configuration conf)
+      throws IOException {
+    S3AEncryptionMethods sse = S3AEncryptionMethods.getMethod(
+        conf.getTrimmed(SERVER_SIDE_ENCRYPTION_ALGORITHM));
+    String sseKey = getServerSideEncryptionKey(conf);
+    int sseKeyLen = StringUtils.isBlank(sseKey) ? 0 : sseKey.length();
+    String diagnostics = passwordDiagnostics(sseKey, "key");
+    switch (sse) {
+    case SSE_C:
+      if (sseKeyLen == 0) {
+        throw new IOException(SSE_C_NO_KEY_ERROR);
+      }
+      break;
+
+    case SSE_S3:
+      if (sseKeyLen != 0) {
+        throw new IOException(SSE_S3_WITH_KEY_ERROR
+            + " (" + diagnostics + ")");
+      }
+      break;
+
+    case SSE_KMS:
+      LOG.debug("Using SSE-KMS with {}",
+          diagnostics);
+      break;
+
+    case NONE:
+    default:
+      LOG.debug("Data is unencrypted");
+      break;
+    }
+    LOG.debug("Using SSE-C with {}", diagnostics);
+    return sse;
+  }
+
+  /**
+   * Provide a password diagnostics string.
+   * This aims to help diagnostics without revealing significant password details
+   * @param pass password
+   * @param description description for text, e.g "key" or "password"
+   * @return text for use in messages.
+   */
+  private static String passwordDiagnostics(String pass, String description) {
+    if (pass == null) {
+      return "null " + description;
+    }
+    int len = pass.length();
+    switch (len) {
+    case 0:
+      return "empty " + description;
+    case 1:
+      return description + " of length 1";
+
+    default:
+      return description + " of length " + len + " ending with "
+          + pass.charAt(len - 1);
+    }

INS23 INS23 INS31 INS31 INS31 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS29 INS29 INS83 INS43 INS42 INS44 INS43 INS8 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS65 INS42 INS42 INS27 INS65 INS42 INS42 INS27 INS60 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS41 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS42 INS60 INS60 INS60 INS60 INS50 INS21 INS41 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS25 INS60 INS50 INS66 INS32 INS45 INS42 INS66 INS32 INS45 INS42 INS43 INS59 INS32 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS42 INS42 INS42 INS16 INS66 INS66 INS66 INS65 INS66 INS42 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS65 INS66 INS66 INS42 INS66 INS42 INS43 INS59 INS43 INS59 INS39 INS59 INS43 INS59 INS42 INS49 INS25 INS10 INS49 INS25 INS10 INS49 INS21 INS10 INS49 INS49 INS21 INS10 INS32 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS27 INS8 INS39 INS59 INS42 INS49 INS41 INS49 INS41 INS49 INS41 INS40 INS42 INS40 INS42 INS42 INS42 INS45 UPD42 MOV42 MOV42 MOV42 INS42 INS42 MOV32 INS32 INS42 INS66 INS66 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS16 INS42 INS42 INS32 INS42 INS27 INS8 INS42 INS27 INS8 INS42 INS32 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS33 INS41 INS42 INS32 INS34 INS27 INS34 INS27 INS27 INS42 INS42 INS42 INS42 INS41 INS42 INS42 INS32 INS42 INS42 INS32 INS34 INS32 INS42 INS42 INS45 INS42 INS34 INS53 INS42 INS34 INS53 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS27 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS32 UPD42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS14 INS45 INS42 INS42 INS42 INS27 INS42 UPD42 INS33 INS33 INS43 INS42 INS43 INS27 INS42 INS34 INS42 INS42 INS42 INS45 INS42 INS45 DEL45 DEL32 DEL42 DEL16 DEL40 DEL42 DEL33 DEL41