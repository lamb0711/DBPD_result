MapFile.fix creates a wrong index file in case of block-compressed data file. Contributed by Grigori Rybkine

-      long pos = 0L;
+      /** What's the position (in bytes) we wrote when we got the last index */
+      long lastIndexPos = -1;
+      /**
+       * What was size when we last wrote an index. Set to MIN_VALUE to ensure
+       * that we have an index at position zero - midKey will throw an exception
+       * if this is not the case
+       */
+      long lastIndexKeyCount = Long.MIN_VALUE;
+      long pos = dataReader.getPosition();
+      long nextBlock = pos;
+      boolean blockCompressed = dataReader.isBlockCompressed();
-        cnt++;
-        if (cnt % indexInterval == 0) {
-          position.set(pos);
-          if (!dryrun) indexWriter.append(key, position);
+        if (blockCompressed) {
+          long curPos = dataReader.getPosition();
+          if (curPos > nextBlock) {
+            pos = nextBlock;                       // current block position
+            nextBlock = curPos;
+          }
-        pos = dataReader.getPosition();
+        // Follow the same logic as in
+        // {@link MapFile.Writer#append(WritableComparable, Writable)}
+        if (cnt >= lastIndexKeyCount + indexInterval && pos > lastIndexPos) {
+          position.set(pos);
+          if (!dryrun) {
+            indexWriter.append(key, position);
+          }
+          lastIndexPos = pos;
+          lastIndexKeyCount = cnt;
+        }
+        if (!blockCompressed) {
+          pos = dataReader.getPosition();         // next record position
+        }
+        cnt++;

INS60 INS60 INS60 INS60 INS39 INS59 INS39 INS59 INS39 INS59 INS39 INS59 MOV21 UPD42 INS38 INS42 INS40 INS42 INS32 INS42 INS42 INS42 INS32 INS25 INS25 INS34 INS42 INS42 INS42 INS42 INS42 INS8 UPD27 INS38 INS8 INS60 INS25 UPD27 INS27 INS21 INS21 INS42 MOV21 INS39 INS59 INS27 INS8 INS27 INS42 INS42 INS8 INS7 INS7 INS42 INS32 INS42 INS42 INS21 INS21 INS42 MOV42 MOV21 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS42 INS42 INS42 INS42 DEL34 DEL34