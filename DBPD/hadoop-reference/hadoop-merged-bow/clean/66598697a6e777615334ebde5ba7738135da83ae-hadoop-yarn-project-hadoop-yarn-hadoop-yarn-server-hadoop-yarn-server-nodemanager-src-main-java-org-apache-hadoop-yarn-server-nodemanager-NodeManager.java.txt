YARN-1338. Recover localized resource cache state upon nodemanager restart (Contributed by Jason Lowe)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598640 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService;
+import org.apache.hadoop.yarn.server.nodemanager.recovery.NMNullStateStoreService;
+import org.apache.hadoop.yarn.server.nodemanager.recovery.NMStateStoreService;
+  private NMStateStoreService nmStore = null;
-      NMTokenSecretManagerInNM nmTokenSecretManager) {
+      NMTokenSecretManagerInNM nmTokenSecretManager,
+      NMStateStoreService stateStore) {
-        dirsHandler, aclsManager);
+        dirsHandler, aclsManager, stateStore);
-  @Override
-  protected void serviceInit(Configuration conf) throws Exception {
-
-    conf.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);
-
+  private void initAndStartRecoveryStore(Configuration conf)
+      throws IOException {
+      nmStore = new NMLeveldbStateStoreService();
+    } else {
+      nmStore = new NMNullStateStoreService();
+    nmStore.init(conf);
+    nmStore.start();
+  }
+
+  private void stopRecoveryStore() throws IOException {
+    nmStore.stop();
+    if (context.getDecommissioned() && nmStore.canRecover()) {
+      LOG.info("Removing state store due to decommission");
+      Configuration conf = getConfig();
+      Path recoveryRoot = new Path(
+          conf.get(YarnConfiguration.NM_RECOVERY_DIR));
+      LOG.info("Removing state store at " + recoveryRoot
+          + " due to decommission");
+      FileSystem recoveryFs = FileSystem.getLocal(conf);
+      if (!recoveryFs.delete(recoveryRoot, true)) {
+        LOG.warn("Unable to delete " + recoveryRoot);
+      }
+    }
+  }
+
+  @Override
+  protected void serviceInit(Configuration conf) throws Exception {
+
+    conf.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);
+
+    initAndStartRecoveryStore(conf);
-        nmTokenSecretManager);
+        nmTokenSecretManager, nmStore);
+    stopRecoveryStore();
+    private final NMStateStoreService stateStore;
-        LocalDirsHandlerService dirsHandler, ApplicationACLsManager aclsManager) {
+        LocalDirsHandlerService dirsHandler, ApplicationACLsManager aclsManager,
+        NMStateStoreService stateStore) {
+      this.stateStore = stateStore;
+    public NMStateStoreService getNMStateStore() {
+      return stateStore;
+    }
+
+    @Override

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS31 INS31 INS83 INS43 INS59 INS44 INS83 INS39 INS42 INS44 INS43 INS8 INS83 INS39 INS42 INS43 INS8 INS23 INS31 INS42 INS42 INS33 INS43 INS42 INS43 INS42 INS42 MOV60 MOV25 INS21 INS21 INS42 INS21 INS25 INS21 INS21 INS83 INS83 INS43 INS59 INS44 INS78 INS83 INS43 INS42 INS8 INS42 INS42 INS8 INS32 INS32 INS32 INS27 INS8 INS32 INS32 INS42 INS42 INS43 INS42 INS21 INS42 INS42 INS41 INS42 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS60 INS60 INS21 INS60 INS25 INS42 INS42 INS42 INS42 INS7 INS42 INS7 INS7 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS32 INS43 INS59 INS38 INS8 INS42 INS22 INS42 INS42 INS14 INS42 INS14 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS27 INS42 INS42 INS32 INS32 INS21 INS52 INS42 INS43 INS43 INS42 INS43 INS32 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS32 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS27 INS45 INS42