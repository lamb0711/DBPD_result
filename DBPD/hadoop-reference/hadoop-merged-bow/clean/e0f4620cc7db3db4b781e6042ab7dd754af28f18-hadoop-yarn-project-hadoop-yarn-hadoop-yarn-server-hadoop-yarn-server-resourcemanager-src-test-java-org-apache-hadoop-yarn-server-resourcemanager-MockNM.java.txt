YARN-5197. RM leaks containers if running container disappears from node update. Contributed by Jason Lowe.

+import org.apache.hadoop.yarn.api.records.ContainerId;
+  private Map<ContainerId, ContainerStatus> containerStats =
+      new HashMap<ContainerId, ContainerStatus>();
-    Map<ApplicationId, List<ContainerStatus>> conts = new HashMap<>();
-    conts.put(container.getId().getApplicationAttemptId().getApplicationId(),
-        Collections.singletonList(containerStatus));
-    nodeHeartbeat(conts, increasedConts, true, ++responseId);
+    nodeHeartbeat(Collections.singletonList(containerStatus), increasedConts,
+        true, ++responseId);
+    containerStats.clear();
+    if (containerReports != null) {
+      for (NMContainerStatus report : containerReports) {
+        if (report.getContainerState() != ContainerState.COMPLETE) {
+          containerStats.put(report.getContainerId(),
+              ContainerStatus.newInstance(report.getContainerId(),
+                  report.getContainerState(), report.getDiagnostics(),
+                  report.getContainerExitStatus()));
+        }
+      }
+    }
-    return nodeHeartbeat(new HashMap<ApplicationId, List<ContainerStatus>>(),
-        isHealthy, ++responseId);
+    return nodeHeartbeat(Collections.<ContainerStatus>emptyList(),
+        Collections.<Container>emptyList(), isHealthy, ++responseId);
-    HashMap<ApplicationId, List<ContainerStatus>> nodeUpdate =
-        new HashMap<ApplicationId, List<ContainerStatus>>(1);
-    nodeUpdate.put(attemptId.getApplicationId(), containerStatusList);
-    return nodeHeartbeat(nodeUpdate, true);
+    return nodeHeartbeat(containerStatusList,
+        Collections.<Container>emptyList(), true, ++responseId);
-    return nodeHeartbeat(conts, new ArrayList<Container>(), isHealthy, resId);
+    ArrayList<ContainerStatus> updatedStats = new ArrayList<ContainerStatus>();
+    for (List<ContainerStatus> stats : conts.values()) {
+      updatedStats.addAll(stats);
+    }
+    return nodeHeartbeat(updatedStats, Collections.<Container>emptyList(),
+        isHealthy, resId);
-  public NodeHeartbeatResponse nodeHeartbeat(Map<ApplicationId,
-      List<ContainerStatus>> conts, List<Container> increasedConts,
-          boolean isHealthy, int resId) throws Exception {
+  public NodeHeartbeatResponse nodeHeartbeat(List<ContainerStatus> updatedStats,
+      List<Container> increasedConts, boolean isHealthy, int resId)
+          throws Exception {
-    for (Map.Entry<ApplicationId, List<ContainerStatus>> entry : conts.entrySet()) {
-      Log.info("entry.getValue() " + entry.getValue());
-      status.setContainersStatuses(entry.getValue());
+    ArrayList<ContainerId> completedContainers = new ArrayList<ContainerId>();
+    for (ContainerStatus stat : updatedStats) {
+      if (stat.getState() == ContainerState.COMPLETE) {
+        completedContainers.add(stat.getContainerId());
+      }
+      containerStats.put(stat.getContainerId(), stat);
+    }
+    status.setContainersStatuses(
+        new ArrayList<ContainerStatus>(containerStats.values()));
+    for (ContainerId cid : completedContainers) {
+      containerStats.remove(cid);

INS26 INS40 INS23 INS83 INS74 MOV59 MOV44 MOV43 INS43 INS43 UPD42 INS21 INS25 INS41 INS60 INS70 MOV74 INS42 INS60 INS70 MOV21 INS70 INS42 INS42 UPD74 INS32 INS27 INS8 INS32 UPD74 MOV74 INS59 INS44 INS32 INS8 INS74 INS59 INS44 INS42 INS8 INS44 INS42 INS8 INS43 INS43 MOV32 INS42 INS42 INS42 INS33 INS70 INS32 INS32 INS42 INS42 INS32 MOV9 INS38 INS43 INS42 INS14 MOV74 INS42 INS42 INS42 INS21 UPD42 INS32 INS43 INS43 INS42 INS14 INS43 INS42 INS25 MOV21 INS14 INS43 INS42 INS21 INS42 INS42 INS44 INS42 INS8 INS42 INS43 INS42 INS42 INS43 INS42 INS42 INS43 UPD42 MOV42 INS42 INS42 INS74 INS32 INS42 MOV43 INS42 INS42 INS42 INS74 INS42 INS27 INS8 INS74 INS32 INS42 INS32 INS43 INS42 INS25 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS43 INS43 INS42 INS42 INS42 INS43 INS43 INS32 INS40 INS21 UPD42 UPD42 INS32 INS42 INS43 INS43 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS32 INS40 INS21 UPD42 MOV42 INS42 INS32 INS42 INS42 INS32 UPD42 MOV42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL43 DEL43 DEL42 DEL43 DEL43 DEL74 DEL74 DEL14 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL43 DEL74 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL34 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41 DEL14 DEL40 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL44 DEL45 DEL32 DEL27 DEL32 DEL32 DEL8 DEL70