Merge r1426019 through r1432788 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1432796 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.FileWriter;
+import java.io.FileOutputStream;
+import java.io.OutputStreamWriter;
+import com.google.common.base.Charsets;
+  private INodeId inodeId;
+  
+  /**
+   * Set the last allocated inode id when fsimage or editlog is loaded. 
+   */
+  public void resetLastInodeId(long newValue) throws IOException {
+    try {
+      inodeId.skipTo(newValue);
+    } catch(IllegalStateException ise) {
+      throw new IOException(ise);
+    }
+  }
+
+  /** Should only be used for tests to reset to any value */
+  void resetLastInodeIdWithoutChecking(long newValue) {
+    inodeId.setCurrentValue(newValue);
+  }
+  
+  /** @return the last inode ID. */
+  public long getLastInodeId() {
+    return inodeId.getCurrentValue();
+  }
+
+  /** Allocate a new inode ID. */
+  public long allocateNewInodeId() {
+    return inodeId.nextValue();
+  }
+  
-    generationStamp.setStamp(GenerationStamp.FIRST_VALID_STAMP);
+    generationStamp.setCurrentValue(GenerationStamp.LAST_RESERVED_STAMP);
+    inodeId.setCurrentValue(INodeId.LAST_RESERVED_ID);
+      this.inodeId = new INodeId();
+      
-      PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(file,
-          true)));
+      PrintWriter out = new PrintWriter(new BufferedWriter(
+          new OutputStreamWriter(new FileOutputStream(file, true), Charsets.UTF_8)));
-    Block b = new Block(DFSUtil.getRandom().nextLong(), 0, 0); 
-    while(isValidBlock(b)) {
-      b.setBlockId(DFSUtil.getRandom().nextLong());
-    }
+    Block b = new Block(getFSImage().getUniqueBlockId(), 0, 0); 
-    nextGenerationStamp();
-    b.setGenerationStamp(getGenerationStamp());
+    b.setGenerationStamp(nextGenerationStamp());
+      default:
+        LOG.error("Unexpected safe mode action");
-  /**
-   * Returns whether the given block is one pointed-to by a file.
-   */
-  private boolean isValidBlock(Block b) {
-    return (blockManager.getBlockCollection(b) != null);
-  }
-
-    generationStamp.setStamp(stamp);
+    generationStamp.setCurrentValue(stamp);
-    return generationStamp.getStamp();
+    return generationStamp.getCurrentValue();
-    long gs = generationStamp.nextStamp();
+    final long gs = generationStamp.nextValue();

MOV26 INS26 INS26 INS40 UPD40 INS40 INS23 INS31 INS31 INS31 INS31 INS83 INS43 INS59 MOV29 UPD83 MOV83 UPD39 MOV39 INS42 INS44 INS43 INS8 INS29 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 MOV8 INS29 INS83 INS39 INS42 INS8 INS42 INS42 INS39 INS42 INS42 INS54 INS65 INS39 INS42 INS21 INS65 INS65 INS41 INS21 UPD66 INS8 INS12 INS66 INS32 INS66 INS32 INS66 INS32 INS32 MOV43 INS32 INS83 INS21 INS44 INS8 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD42 UPD40 INS42 INS42 INS40 INS21 INS42 INS42 MOV32 UPD42 UPD42 INS32 UPD43 MOV43 UPD42 MOV42 INS53 INS7 MOV43 INS49 INS21 UPD42 INS42 INS42 INS42 UPD42 INS14 INS22 INS14 UPD42 INS32 INS43 INS42 INS52 INS42 INS43 UPD42 INS42 INS42 INS45 INS42 INS42 UPD43 INS14 INS40 UPD42 INS43 MOV42 MOV9 INS42 DEL42 DEL32 DEL33 DEL27 DEL36 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL8 DEL61 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL44 DEL31