HADOOP-7322. Adding a util method in FileUtil for directory listing, avoid NPEs on File.listFiles(). Contributed by Bharath Mundlapudi.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1127697 13f79535-47bb-0310-9956-ffa450edef68

-      File contents[] = src.listFiles();
+      File contents[] = listFiles(src);
-      for (int i = 0; i < allFiles.length; i++) {
-        size = size + getDU(allFiles[i]);
+      if(allFiles != null) {
+         for (int i = 0; i < allFiles.length; i++) {
+            size = size + getDU(allFiles[i]);
+         }
+  
+  /**
+   * A wrapper for {@link File#listFiles()}. This java.io API returns null 
+   * when a dir is not a directory or for any I/O error. Instead of having
+   * null check everywhere File#listFiles() is used, we will add utility API
+   * to get around this problem. For the majority of cases where we prefer 
+   * an IOException to be thrown.
+   * @param dir directory for which listing should be performed
+   * @return list of files or empty list
+   * @exception IOException for invalid directory or for a bad disk.
+   */
+  public static File[] listFiles(File dir) throws IOException {
+    File[] files = dir.listFiles();
+    if(files == null) {
+      throw new IOException("Invalid directory or I/O error occurred for dir: "
+                + dir.toString());
+    }
+    return files;
+  }  

INS31 INS29 INS83 INS83 INS5 INS42 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS43 INS85 INS43 INS42 INS42 INS60 INS25 INS41 INS66 INS65 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS42 INS5 INS59 INS27 INS8 INS42 INS25 INS68 INS43 INS85 INS42 INS32 INS42 INS33 INS53 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS33 MOV24 INS43 INS27 INS42 INS42 INS45 INS32 INS42 INS42 DEL42