HDFS-7270. Add congestion signaling capability to DataNode write protocol. Contributed by Haohui Mai.

+import java.util.ArrayList;
+import java.util.Collections;
+import com.google.common.collect.Lists;
-import org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos;
+
+import org.apache.hadoop.hdfs.util.LongBitFormat;
+  public enum ECN {
+    DISABLED(0),
+    SUPPORTED(1),
+    SUPPORTED2(2),
+    CONGESTED(3);
+
+    private final int value;
+    private static final ECN[] VALUES = values();
+    static ECN valueOf(int value) {
+      return VALUES[value];
+    }
+
+    ECN(int value) {
+      this.value = value;
+    }
+
+    public int getValue() {
+      return value;
+    }
+  }
+
+  private enum StatusFormat {
+    STATUS(null, 4),
+    RESERVED(STATUS.BITS, 1),
+    ECN_BITS(RESERVED.BITS, 2);
+
+    private final LongBitFormat BITS;
+
+    StatusFormat(LongBitFormat prev, int bits) {
+      BITS = new LongBitFormat(name(), prev, bits, 0);
+    }
+
+    static Status getStatus(int header) {
+      return Status.valueOf((int) STATUS.BITS.retrieve(header));
+    }
+
+    static ECN getECN(int header) {
+      return ECN.valueOf((int) ECN_BITS.BITS.retrieve(header));
+    }
+
+    public static int setStatus(int old, Status status) {
+      return (int) STATUS.BITS.combine(status.getNumber(), old);
+    }
+
+    public static int setECN(int old, ECN ecn) {
+      return (int) ECN_BITS.BITS.combine(ecn.getValue(), old);
+    }
+  }
+
-  public PipelineAck(long seqno, Status[] replies) {
+  public PipelineAck(long seqno, int[] replies) {
-  public PipelineAck(long seqno, Status[] replies, long downstreamAckTimeNanos) {
+  public PipelineAck(long seqno, int[] replies,
+                     long downstreamAckTimeNanos) {
+    ArrayList<Integer> replyList = Lists.newArrayList();
+    for (int r : replies) {
+      replyList.add(r);
+    }
-      .addAllStatus(Arrays.asList(replies))
+      .addAllReply(replyList)
-    return (short)proto.getStatusCount();
+    return (short)proto.getReplyCount();
-  public Status getReply(int i) {
-    return proto.getStatus(i);
+  public int getReply(int i) {
+    return proto.getReply(i);
-    for (Status reply : proto.getStatusList()) {
-      if (reply != Status.SUCCESS) {
+    for (int reply : proto.getReplyList()) {
+      if (StatusFormat.getStatus(reply) != Status.SUCCESS) {
-    for (Status reply : proto.getStatusList()) {
+    for (int reply : proto.getReplyList()) {
-      if (reply.getNumber() >= OOB_START && reply.getNumber() <= OOB_END) {
-        return reply;
+      Status s = StatusFormat.getStatus(reply);
+      if (s.getNumber() >= OOB_START && s.getNumber() <= OOB_END) {
+        return s;
+
+  public static Status getStatusFromHeader(int header) {
+    return StatusFormat.getStatus(header);
+  }
+
+  public static int setStatusForHeader(int old, Status status) {
+    return StatusFormat.setStatus(old, status);
+  }
+
+  public static int combineHeader(ECN ecn, Status status) {
+    int header = 0;
+    header = StatusFormat.setStatus(header, status);
+    header = StatusFormat.setECN(header, ecn);
+    return header;
+  }

MOV26 INS26 INS26 INS26 INS40 INS40 INS40 UPD40 INS71 INS71 INS31 INS31 INS31 INS83 INS42 INS72 INS72 INS72 INS72 INS23 INS23 INS31 INS31 INS31 INS83 INS42 INS72 INS72 INS72 INS23 INS31 INS31 INS31 INS31 INS31 INS44 INS44 INS39 INS83 INS83 MOV43 INS42 INS44 INS8 INS83 INS83 INS39 INS42 INS44 MOV44 INS8 INS83 INS83 INS39 INS42 INS44 MOV44 INS8 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS5 INS59 INS83 INS43 INS42 INS44 INS8 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS42 INS33 INS34 INS42 INS40 INS34 INS42 INS40 INS34 INS83 INS83 INS43 INS59 INS42 INS44 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS83 INS39 INS42 INS44 MOV44 INS8 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS5 INS42 INS5 INS42 INS60 INS70 INS39 INS42 INS41 INS39 INS42 UPD42 INS41 INS43 INS42 MOV43 UPD42 INS60 INS21 INS21 INS41 INS42 INS43 INS85 INS42 INS32 INS42 INS39 INS42 INS41 INS39 INS42 INS21 INS41 INS42 INS42 INS43 INS42 INS39 INS42 INS21 INS42 INS39 INS42 INS41 INS42 INS39 INS42 INS41 INS39 INS42 MOV43 UPD42 INS41 INS39 INS42 INS43 INS42 INS41 INS39 INS85 INS39 INS85 INS74 INS59 INS44 INS42 INS8 INS44 INS32 INS32 INS42 INS39 INS59 INS7 INS7 INS42 INS42 INS42 INS2 INS7 INS42 INS42 INS7 INS32 INS32 INS11 INS42 INS11 INS43 INS43 INS42 INS32 INS39 INS42 INS21 UPD42 INS39 INS42 UPD42 INS39 UPD42 INS60 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS32 INS42 INS32 INS42 INS42 INS22 INS42 INS42 INS14 INS42 INS42 INS11 INS42 INS42 INS11 INS39 INS32 INS39 INS32 INS42 INS42 INS42 INS42 INS32 UPD42 MOV43 INS59 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS43 INS32 INS42 INS42 INS34 INS39 INS32 INS39 INS32 INS40 INS42 INS32 INS42 INS40 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 DEL85 DEL5 DEL42 DEL42 DEL32 DEL42 DEL85 DEL5