HDFS-6625. Remove the Delete Encryption Zone function (clamb)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1607507 13f79535-47bb-0310-9956-ffa450edef68

+
+      final EncryptionZone ez = getEncryptionZoneForPath(src);
+      if (ez != null) {
+        encryptionZones.remove(src);
+      }
+
-  /**
-   * Delete the encryption zone on directory src.
-   *
-   * @param src the path of a directory which is the root of the encryption
-   * zone. The directory must be empty and must be marked as an encryption
-   * zone.
-   *
-   * @throws AccessControlException if the caller is not the superuser.
-   *
-   * @throws UnresolvedLinkException if the path can't be resolved.
-   *
-   * @throws SafeModeException if the Namenode is in safe mode.
-   */
-  void deleteEncryptionZone(final String src)
-    throws IOException, UnresolvedLinkException,
-      SafeModeException, AccessControlException {
-    final CacheEntry cacheEntry = RetryCache.waitForCompletion(retryCache);
-    if (cacheEntry != null && cacheEntry.isSuccess()) {
-      return; // Return previous response
-    }
-
-    boolean success = false;
-    try {
-      deleteEncryptionZoneInt(src, cacheEntry != null);
-      encryptionZones.remove(src);
-      success = true;
-    } catch (AccessControlException e) {
-      logAuditEvent(false, "deleteEncryptionZone", src);
-      throw e;
-    } finally {
-      RetryCache.setState(cacheEntry, success);
-    }
-  }
-
-  private void deleteEncryptionZoneInt(final String srcArg,
-    final boolean logRetryCache) throws IOException {
-    String src = srcArg;
-    HdfsFileStatus resultingStat = null;
-    checkSuperuserPrivilege();
-    checkOperation(OperationCategory.WRITE);
-    final byte[][] pathComponents =
-      FSDirectory.getPathComponentsForReservedPath(src);
-    writeLock();
-    try {
-      checkSuperuserPrivilege();
-      checkOperation(OperationCategory.WRITE);
-      checkNameNodeSafeMode("Cannot delete encryption zone on " + src);
-      src = FSDirectory.resolvePath(src, pathComponents, dir);
-      final EncryptionZone ez = encryptionZones.get(src);
-      if (ez == null) {
-        throw new IOException("Directory " + src +
-          " is not the root of an encryption zone.");
-      }
-      final List<XAttr> removedXAttrs = dir.deleteEncryptionZone(src);
-      if (removedXAttrs != null && !removedXAttrs.isEmpty()) {
-        getEditLog().logRemoveXAttrs(src, removedXAttrs);
-      }
-      encryptionZones.remove(src);
-      resultingStat = getAuditFileInfo(src, false);
-    } finally {
-      writeUnlock();
-    }
-    getEditLog().logSync();
-    logAuditEvent(true, "deleteEncryptionZone", src, null, resultingStat);
-  }
-
+

INS60 INS25 INS83 MOV43 INS59 INS27 INS8 INS42 INS32 INS42 INS33 MOV21 INS42 INS42 DEL66 DEL65 DEL42 DEL66 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL39 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL27 DEL41 DEL8 DEL25 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL42 DEL42 DEL33 DEL27 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL9 DEL45 DEL42 DEL32 DEL21 DEL42 DEL53 DEL8 DEL12 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL8 DEL31 DEL83 DEL39 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL83 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL32 DEL21 DEL42 DEL40 DEL32 DEL21 DEL83 DEL39 DEL85 DEL85 DEL5 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL21 DEL42 DEL32 DEL21 DEL42 DEL40 DEL32 DEL21 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL83 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL43 DEL45 DEL42 DEL45 DEL27 DEL14 DEL53 DEL8 DEL25 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL9 DEL32 DEL7 DEL21 DEL8 DEL42 DEL32 DEL21 DEL8 DEL54 DEL42 DEL32 DEL42 DEL32 DEL21 DEL42 DEL9 DEL45 DEL42 DEL33 DEL42 DEL32 DEL21 DEL8 DEL31