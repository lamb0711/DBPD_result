YARN-8299.  Added CLI and REST API for query container status.
            Contributed by Chandni Singh

-import javax.ws.rs.Consumes;
-import javax.ws.rs.DELETE;
-import javax.ws.rs.GET;
-import javax.ws.rs.POST;
-import javax.ws.rs.PUT;
-import javax.ws.rs.Path;
-import javax.ws.rs.PathParam;
-import javax.ws.rs.Produces;
+import javax.ws.rs.*;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
+import java.util.*;
+  @GET
+  @Path(COMP_INSTANCES_PATH)
+  @Produces({RestApiConstants.MEDIA_TYPE_JSON_UTF8})
+  public Response getComponentInstances(@Context HttpServletRequest request,
+      @PathParam(SERVICE_NAME) String serviceName,
+      @QueryParam(PARAM_COMP_NAME) List<String> componentNames,
+      @QueryParam(PARAM_VERSION) String version,
+      @QueryParam(PARAM_CONTAINER_STATE) List<String> containerStates) {
+    try {
+      UserGroupInformation ugi = getProxyUser(request);
+      LOG.info("GET: component instances for service = {}, compNames in {}, " +
+          "version = {}, containerStates in {}, user = {}", serviceName,
+          Objects.toString(componentNames, "[]"), Objects.toString(version, ""),
+          Objects.toString(containerStates, "[]"), ugi);
+
+        List<ContainerState> containerStatesDe = containerStates.stream().map(
+            ContainerState::valueOf).collect(Collectors.toList());
+
+        return Response.ok(getContainers(ugi, serviceName, componentNames,
+            version, containerStatesDe)).build();
+    } catch (IllegalArgumentException iae) {
+      return formatResponse(Status.BAD_REQUEST, "valid container states are: " +
+          Arrays.toString(ContainerState.values()));
+    } catch (AccessControlException e) {
+      return formatResponse(Response.Status.FORBIDDEN, e.getMessage());
+    } catch (IOException | InterruptedException e) {
+      return formatResponse(Response.Status.INTERNAL_SERVER_ERROR,
+          e.getMessage());
+    } catch (UndeclaredThrowableException e) {
+      return formatResponse(Response.Status.INTERNAL_SERVER_ERROR,
+          e.getCause().getMessage());
+    }
+  }
+
+  private Container[] getContainers(UserGroupInformation ugi,
+      String serviceName, List<String> componentNames, String version,
+      List<ContainerState> containerStates) throws IOException,
+      InterruptedException {
+    return ugi.doAs((PrivilegedExceptionAction<Container[]>) () -> {
+      Container[] result;
+      ServiceClient sc = getServiceClient();
+      sc.init(YARN_CONFIG);
+      sc.start();
+      result = sc.getContainers(serviceName, componentNames, version,
+          containerStates);
+      sc.close();
+      return result;
+    });
+  }
+

UPD40 UPD40 INS31 INS31 INS78 INS79 INS79 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS8 INS83 INS5 INS42 INS44 INS44 INS44 INS44 INS44 INS43 INS43 INS8 INS42 INS42 INS42 INS42 INS4 INS42 INS78 INS43 INS42 INS79 INS43 INS42 INS79 INS74 INS42 INS79 INS43 INS42 INS79 INS74 INS42 INS54 INS43 INS85 INS43 INS42 INS43 INS42 INS74 INS42 INS43 INS42 INS74 INS42 INS42 INS42 INS41 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS8 INS12 INS12 INS12 INS12 INS42 INS42 INS42 INS43 INS43 INS42 INS43 INS43 INS32 INS42 INS42 INS42 INS42 INS60 INS21 INS60 INS41 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS43 INS59 INS32 INS74 INS59 INS32 INS43 INS42 INS41 INS43 INS42 INS41 INS84 INS42 INS41 INS43 INS42 INS41 INS74 INS86 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS32 INS32 INS32 INS42 INS43 INS43 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS32 INS43 INS43 INS32 INS42 INS32 INS43 INS5 INS8 INS42 INS42 INS45 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS40 INS27 INS42 INS40 INS32 INS42 INS42 INS42 INS40 INS32 INS42 INS40 INS32 INS42 INS43 INS85 INS60 INS60 INS21 INS21 INS21 INS21 INS41 INS32 INS42 INS90 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS5 INS59 INS43 INS59 INS32 INS32 INS7 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26