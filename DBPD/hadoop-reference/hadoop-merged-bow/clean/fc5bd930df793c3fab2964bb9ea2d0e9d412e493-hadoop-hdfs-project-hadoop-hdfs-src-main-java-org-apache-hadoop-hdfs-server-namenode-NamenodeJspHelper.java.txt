HDFS-5279. Guard against NullPointerException in NameNode JSP pages before initialization of FSNamesystem. Contributed by Chris Nauroth.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1528308 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collections;
+    if (fsn == null) {
+      return;
+    }
-    if (nn.getNamesystem().getNumLiveDataNodes() < 1) {
+    FSNamesystem fsn = nn.getNamesystem();
+    if (fsn == null || fsn.getNumLiveDataNodes() < 1) {
+  /**
+   * Returns a descriptive label for the running NameNode.  If the NameNode has
+   * initialized to the point of running its RPC server, then this label consists
+   * of the host and port of the RPC server.  Otherwise, the label is a message
+   * stating that the NameNode is still initializing.
+   * 
+   * @param nn NameNode to describe
+   * @return String NameNode label
+   */
+  static String getNameNodeLabel(NameNode nn) {
+    return nn.getRpcServer() != null ? nn.getNameNodeAddressHostPortString() :
+      "initializing";
+  }
+
+      if (ns == null) {
+        return;
+      }
-      this.blockManager = fsn.getBlockManager();
+      this.blockManager = fsn != null ? fsn.getBlockManager() : null;
-        this.inode = ((INode)blockManager.getBlockCollection(block)).asFile();
+        this.inode = blockManager != null ?
+          ((INode)blockManager.getBlockCollection(block)).asFile() :
+          null;
-        for(final Iterator<DatanodeDescriptor> it = blockManager.datanodeIterator(block);
-            it.hasNext(); ) {
+        for (final Iterator<DatanodeDescriptor> it = blockManager != null ?
+            blockManager.datanodeIterator(block) :
+            Collections.<DatanodeDescriptor>emptyList().iterator();
+            it.hasNext();) {
-      this.blockManager = fsn.getBlockManager();
+      this.blockManager = fsn != null ? fsn.getBlockManager() : null;
-      doc.pcdata(""+blockManager.getMissingBlocksCount());
+      doc.pcdata("" + (blockManager != null ?
+        blockManager.getMissingBlocksCount() : 0));
-      doc.pcdata(""+blockManager.getCorruptReplicaBlocksCount());
+      doc.pcdata("" + (blockManager != null ?
+        blockManager.getCorruptReplicaBlocksCount() : 0));
-      final long[] corruptBlockIds = blockManager.getCorruptReplicaBlockIds(
-          numCorruptBlocks, startingBlockId);
+      final long[] corruptBlockIds = blockManager != null ?
+        blockManager.getCorruptReplicaBlockIds(numCorruptBlocks,
+        startingBlockId) : null;

INS26 INS40 INS31 INS29 INS83 INS43 INS42 INS44 INS8 INS25 INS60 INS65 INS65 INS65 INS42 INS43 INS42 INS41 INS27 INS8 INS43 INS59 INS27 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS16 INS25 INS42 INS33 INS41 INS42 INS42 MOV32 INS27 INS27 INS27 INS32 INS45 INS27 INS8 INS42 INS33 MOV32 MOV34 INS32 INS33 INS42 INS42 INS42 INS33 INS41 INS16 INS16 INS16 INS42 INS42 INS42 INS27 MOV32 INS33 INS27 MOV32 INS33 INS36 INS36 INS27 MOV32 INS33 INS42 INS33 INS16 INS42 INS33 INS16 INS16 INS42 INS33 INS27 MOV32 INS33 INS16 INS27 MOV32 INS34 INS27 MOV32 INS34 INS42 INS33 INS27 MOV32 INS32 INS42 INS33 INS42 INS33 INS42 INS33 INS32 INS42 INS42 INS43 INS42 INS42 DEL27