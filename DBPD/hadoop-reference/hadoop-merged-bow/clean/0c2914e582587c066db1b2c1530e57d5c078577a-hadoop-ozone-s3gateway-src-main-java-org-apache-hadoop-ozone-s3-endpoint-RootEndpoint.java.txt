HDDS-657. Remove {volume} path segments from all the remaining rest endpoints. Contributed by Elek, Marton.

-/*
+/**
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
+ * <p>
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * <p>
-package org.apache.hadoop.ozone.s3.bucket;
+package org.apache.hadoop.ozone.s3.endpoint;
-import org.apache.hadoop.ozone.client.OzoneBucket;
-import org.apache.hadoop.ozone.client.OzoneVolume;
-import org.apache.hadoop.ozone.s3.EndpointBase;
-import org.apache.hadoop.ozone.s3.commontypes.BucketMetadata;
-import org.apache.hadoop.ozone.s3.exception.OS3Exception;
-import org.apache.hadoop.ozone.s3.exception.S3ErrorTable;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import javax.ws.rs.*;
-import javax.ws.rs.core.MediaType;
+import javax.ws.rs.GET;
+import javax.ws.rs.NotFoundException;
+import javax.ws.rs.Path;
+import javax.ws.rs.core.Context;
+import javax.ws.rs.core.HttpHeaders;
-/**
- * List Object Rest endpoint.
- */
-@Path("/{volume}")
-public class ListBucket extends EndpointBase {
-  private static final Logger LOG =
-      LoggerFactory.getLogger(ListBucket.class);
+import org.apache.hadoop.ozone.client.OzoneBucket;
+import org.apache.hadoop.ozone.client.OzoneVolume;
+import org.apache.hadoop.ozone.s3.commontypes.BucketMetadata;
+import org.apache.hadoop.ozone.s3.exception.OS3Exception;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+/**
+ * Top level rest endpoint.
+ */
+@Path("/")
+public class RootEndpoint extends EndpointBase {
+
+  private static final Logger LOG =
+      LoggerFactory.getLogger(RootEndpoint.class);
+
+  /**
+   * Rest endpoint to list all the buckets of the current user.
+   *
+   * See https://docs.aws.amazon.com/AmazonS3/latest/API/RESTServiceGET.html
+   * for more details.
+   */
-  @Produces(MediaType.APPLICATION_XML)
-  public ListBucketResponse get(@PathParam("volume") String volumeName)
+  public ListBucketResponse get(@Context HttpHeaders headers)
+    ListBucketResponse response = new ListBucketResponse();
+
+    String volumeName = "s3" + parseUsername(headers).toLowerCase();
+      //TODO: we need a specific s3bucketlist endpoint instead
+      // of reimplement the naming convention here
-      LOG.error("Exception occurred in ListBucket: volume {} not found.",
-          volumeName, ex);
-      OS3Exception os3Exception = S3ErrorTable.newError(S3ErrorTable
-          .NO_SUCH_VOLUME, S3ErrorTable.Resource.VOLUME);
-      throw os3Exception;
+      return response;
-    ListBucketResponse response = new ListBucketResponse();
-    while(volABucketIter.hasNext()) {
+    while (volABucketIter.hasNext()) {

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS29 UPD40 UPD40 UPD40 UPD40 UPD40 INS40 UPD42 INS65 UPD45 INS29 MOV60 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 UPD66 INS65 INS78 INS43 INS42 INS60 INS66 INS66 INS66 INS42 INS42 MOV43 INS59 UPD43 INS42 INS27 UPD42 INS45 INS32 INS41 INS32 INS42 INS42 INS42 INS42 DEL42 DEL40 DEL79 DEL42 DEL45 DEL79 DEL42 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL40 DEL40 DEL32 DEL59 DEL60 DEL42 DEL53