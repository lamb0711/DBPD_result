HDFS-3044. fsck move should be non-destructive by default. Contributed by Colin Patrick McCabe


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304063 13f79535-47bb-0310-9956-ffa450edef68

-  /** Don't attempt any fixing . */
-  public static final int FIXING_NONE = 0;
-  /** Move corrupted files to /lost+found . */
-  public static final int FIXING_MOVE = 1;
-  /** Delete corrupted files. */
-  public static final int FIXING_DELETE = 2;
-  
-  private int fixing = FIXING_NONE;
+
+  /** 
+   * True if the user specified the -move option.
+   *
+   * Whe this option is in effect, we will copy salvaged blocks into the lost
+   * and found. */
+  private boolean doMove = false;
+
+  /** 
+   * True if the user specified the -delete option.
+   *
+   * Whe this option is in effect, we will delete corrupted files.
+   */
+  private boolean doDelete = false;
+
-      else if (key.equals("move")) { this.fixing = FIXING_MOVE; }
-      else if (key.equals("delete")) { this.fixing = FIXING_DELETE; }
+      else if (key.equals("move")) { this.doMove = true; }
+      else if (key.equals("delete")) { this.doDelete = true; }
-      switch(fixing) {
-      case FIXING_NONE:
-        break;
-      case FIXING_MOVE:
-        if (!isOpen)
-          lostFoundMove(parent, file, blocks);
-        break;
-      case FIXING_DELETE:
-        if (!isOpen)
-          namenode.getRpcServer().delete(path, true);
+      try {
+        if (doMove) {
+          if (!isOpen) {
+            copyBlocksToLostFound(parent, file, blocks);
+          }
+        }
+        if (doDelete) {
+          if (!isOpen) {
+            LOG.warn("\n - deleting corrupted file " + path);
+            namenode.getRpcServer().delete(path, true);
+          }
+        }
+      } catch (IOException e) {
+        LOG.error("error processing " + path + ": " + e.toString());
-  private void lostFoundMove(String parent, HdfsFileStatus file, LocatedBlocks blocks)
-    throws IOException {
+  private void copyBlocksToLostFound(String parent, HdfsFileStatus file,
+        LocatedBlocks blocks) throws IOException {
-          if (fos != null) chain++;
+          if (fos != null)
+            chain++;
-            LOG.warn(errmsg + ": could not store chain " + chain);
-            // perhaps we should bail out here...
-            // return;
-            continue;
+            throw new IOException(errmsg + ": could not store chain " + chain);
-      LOG.warn("\n - moved corrupted file " + fullName + " to /lost+found");
-      dfs.delete(fullName, true);
+      LOG.warn("\n - copied corrupted file " + fullName + " to /lost+found");

MOV23 MOV23 UPD83 UPD39 UPD83 UPD39 UPD42 UPD42 INS9 UPD42 INS9 INS66 INS66 UPD66 INS66 UPD66 INS54 INS8 INS12 INS25 INS25 INS44 INS8 INS42 INS8 INS42 INS8 INS43 INS42 INS21 INS25 MOV25 INS42 INS32 INS9 MOV38 INS8 INS8 INS42 INS42 INS27 UPD45 UPD42 INS9 INS21 INS21 MOV21 INS45 INS42 INS45 INS32 UPD42 MOV32 INS32 INS42 INS42 UPD42 INS42 INS42 INS27 INS53 INS45 INS42 INS14 INS43 MOV27 INS42 DEL66 DEL65 DEL29 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL34 DEL83 DEL83 DEL34 DEL83 DEL39 DEL42 DEL42 DEL59 DEL23 DEL42 DEL42 DEL42 DEL42 DEL49 DEL10 DEL42 DEL49 DEL21 DEL25 DEL10 DEL42 DEL49 DEL50 DEL42 DEL42 DEL32 DEL21 DEL18 DEL42 DEL42 DEL42 DEL9 DEL32 DEL21