HADOOP-15206. BZip2 drops and duplicates records when input split size is small. Contributed by Aki Tanaka

+      long numSkipped = 0;
+      } else if (this.readMode == READ_MODE.BYBLOCK  &&
+          this.startingPos <= HEADER_LEN + SUB_HEADER_LEN) {
+        // When we're in BYBLOCK mode and the start position is >=0
+        // and < HEADER_LEN + SUB_HEADER_LEN, we should skip to after
+        // start of the first bz2 block to avoid duplicated records
+        numSkipped = HEADER_LEN + SUB_HEADER_LEN + 1 - this.startingPos;
+        long skipBytes = numSkipped;
+        while (skipBytes > 0) {
+          long s = bufferedIn.skip(skipBytes);
+          if (s > 0) {
+            skipBytes -= s;
+          } else {
+            if (bufferedIn.read() == -1) {
+              break; // end of the split
+            } else {
+              skipBytes--;
+            }
+          }
+        }
-      this.updatePos(false);
+      if (numSkipped > 0) {
+        input.updateReportedByteCount((int) numSkipped);
+      }
+
+      // To avoid dropped records, not advertising a new byte position
+      // when we are in BYBLOCK mode and the start position is 0
+      if (!(this.readMode == READ_MODE.BYBLOCK && this.startingPos == 0)) {
+        this.updatePos(false);
+      }

INS60 INS25 INS25 INS25 INS39 INS59 MOV27 MOV8 INS25 INS27 INS8 INS38 INS8 INS42 INS34 INS27 INS8 INS42 INS34 INS21 INS36 MOV21 INS27 INS27 INS21 INS60 INS61 INS32 INS27 INS22 INS40 INS22 INS27 INS7 INS39 INS59 INS27 INS8 INS42 INS42 INS11 INS27 INS27 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS34 INS60 INS25 INS39 INS42 INS22 INS40 INS22 INS34 INS27 INS22 INS39 INS59 INS27 INS8 INS8 INS52 INS42 INS52 INS42 INS42 INS42 INS34 INS52 INS42 INS42 INS32 INS42 INS34 INS21 MOV25 INS42 INS42 INS42 INS7 INS27 INS8 INS8 INS42 INS42 INS32 INS38 INS10 INS21 INS42 INS42 INS34 INS37 INS42