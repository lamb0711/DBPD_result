HADOOP-11414. FileBasedIPList#readLines() can leak file descriptors. (ozawa)

-import java.io.FileReader;
-import org.apache.commons.io.IOUtils;
- * FileBasedIPList loads a list of subnets in CIDR format and ip addresses from a file.
+ * FileBasedIPList loads a list of subnets in CIDR format and ip addresses from
+ * a file.
- * Given an ip address, isIn  method returns true if ip belongs to one of the subnets.
+ * Given an ip address, isIn  method returns true if ip belongs to one of the
+ * subnets.
-
-    String[] lines = readLines(fileName);
+    String[] lines = new String[0];
+    try {
+      lines = readLines(fileName);
+    } catch (IOException e) {
+      lines = null;
+    }
-   * reads the lines in a file.
+   * Reads the lines in a file.
-  private static String[] readLines(String fileName) {
+  private static String[] readLines(String fileName) throws IOException {
-          Reader fileReader = new InputStreamReader(
-              new FileInputStream(file), Charsets.UTF_8);
-          BufferedReader bufferedReader = new BufferedReader(fileReader);
-          List<String> lines = new ArrayList<String>();
-          String line = null;
-          while ((line = bufferedReader.readLine()) != null) {
-            lines.add(line);
+          try (
+              Reader fileReader = new InputStreamReader(
+                  new FileInputStream(file), Charsets.UTF_8);
+              BufferedReader bufferedReader = new BufferedReader(fileReader)) {
+            List<String> lines = new ArrayList<String>();
+            String line = null;
+            while ((line = bufferedReader.readLine()) != null) {
+              lines.add(line);
+            }
+            if (LOG.isDebugEnabled()) {
+              LOG.debug("Loaded IP list of size = " + lines.size() +
+                  " from file = " + fileName);
+            }
+            return (lines.toArray(new String[lines.size()]));
-          bufferedReader.close();
-          LOG.debug("Loaded IP list of size = " + lines.size() +" from file = " + fileName);
-          return(lines.toArray(new String[lines.size()]));
-        }
-        else {
+        } else {
-    }
-    catch (Throwable t) {
-      LOG.error(t);
+    } catch (IOException ioe) {
+      LOG.error(ioe);
+      throw ioe;

INS43 UPD66 INS66 UPD66 INS66 INS54 INS42 INS8 INS12 UPD66 INS3 INS21 INS44 INS8 INS5 INS34 INS7 INS43 INS42 INS21 UPD43 UPD42 INS53 INS43 INS85 INS42 MOV32 INS42 INS7 UPD42 INS42 INS42 INS42 INS33 UPD42 INS54 INS58 INS58 INS8 MOV43 MOV59 MOV43 MOV59 MOV60 MOV60 MOV61 INS25 MOV41 INS32 INS8 UPD42 MOV42 UPD42 MOV42 MOV21 DEL40 DEL26 DEL40 DEL26 DEL60 DEL60 DEL32 DEL21