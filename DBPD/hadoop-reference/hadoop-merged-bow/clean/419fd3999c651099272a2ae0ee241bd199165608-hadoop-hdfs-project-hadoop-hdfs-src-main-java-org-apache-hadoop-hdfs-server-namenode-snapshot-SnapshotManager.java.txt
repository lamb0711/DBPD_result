HDFS-4706. Do not replace root inode for disallowSnapshot.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1469122 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collections;
-import java.util.Iterator;
+import com.google.common.base.Preconditions;
+
-  private final AtomicInteger numSnapshottableDirs = new AtomicInteger();
-  private final List<INodeDirectorySnapshottable> snapshottables
-      = new ArrayList<INodeDirectorySnapshottable>();
+  private final Map<Long, INodeDirectorySnapshottable> snapshottables
+      = new HashMap<Long, INodeDirectorySnapshottable>();
+
+    final INodeDirectorySnapshottable s;
-      ((INodeDirectorySnapshottable)d).setSnapshotQuota(
-          INodeDirectorySnapshottable.SNAPSHOT_LIMIT);
-      return;
+      s = (INodeDirectorySnapshottable)d; 
+      s.setSnapshotQuota(INodeDirectorySnapshottable.SNAPSHOT_LIMIT);
+    } else {
+      s = d.replaceSelf4INodeDirectorySnapshottable(iip.getLatestSnapshot());
-
-    final INodeDirectorySnapshottable s
-        = d.replaceSelf4INodeDirectorySnapshottable(iip.getLatestSnapshot());
-    snapshottables.add(s);
-    numSnapshottableDirs.getAndIncrement();
+    addSnapshottable(s);
-  /**
-   * Add a snapshottable dir into {@link #snapshottables}. Called when loading
-   * fsimage.
-   * @param dir The snapshottable dir to be added.
-   */
+  /** Add the given snapshottable directory to {@link #snapshottables}. */
-    snapshottables.add(dir);
+    snapshottables.put(dir.getId(), dir);
+  }
+
+  /** Remove the given snapshottable directory from {@link #snapshottables}. */
+  private void removeSnapshottable(INodeDirectorySnapshottable s) {
+    final INodeDirectorySnapshottable removed = snapshottables.remove(s.getId());
+    Preconditions.checkState(s == removed);
+  }
+  
+  /** Remove snapshottable directories from {@link #snapshottables} */
+  public void removeSnapshottable(List<INodeDirectorySnapshottable> toRemove) {
+    if (toRemove != null) {
+      for (INodeDirectorySnapshottable s : toRemove) {
+        removeSnapshottable(s);
+      }
+    }
-  public void resetSnapshottable(final String path
-      ) throws IOException {
+  public void resetSnapshottable(final String path) throws IOException {
-    s.replaceSelf(iip.getLatestSnapshot());
-    snapshottables.remove(s);
-
-    numSnapshottableDirs.getAndDecrement();
+    if (s == fsdir.getRoot()) {
+      s.setSnapshotQuota(0); 
+    } else {
+      s.replaceSelf(iip.getLatestSnapshot());
+    }
+    removeSnapshottable(s);
-  public long getNumSnapshottableDirs() {
-    return numSnapshottableDirs.get();
+  public int getNumSnapshottableDirs() {
+    return snapshottables.size();
-  public long getNumSnapshots() {
+  public int getNumSnapshots() {
-    out.writeInt(numSnapshottableDirs.get());
-    for(INodeDirectorySnapshottable snapshottableDir : snapshottables) {
+    for(INodeDirectorySnapshottable snapshottableDir : snapshottables.values()) {
-    numSnapshottableDirs.set(in.readInt());
-    for (INodeDirectorySnapshottable dir : snapshottables) {
+    for (INodeDirectorySnapshottable dir : snapshottables.values()) {
-    return statusList.toArray(new SnapshottableDirectoryStatus[statusList
-        .size()]);
-  }
-  
-  /**
-   * Remove snapshottable directories from {@link #snapshottables}
-   * @param toRemoveList A list of INodeDirectorySnapshottable to be removed
-   */
-  public void removeSnapshottableDirs(
-      List<INodeDirectorySnapshottable> toRemoveList) {
-    if (toRemoveList != null) {
-      Iterator<INodeDirectorySnapshottable> iter = snapshottables.iterator();
-      while (iter.hasNext()) {
-        INodeDirectorySnapshottable next = iter.next();
-        for (INodeDirectorySnapshottable toRemove : toRemoveList) {
-          if (next == toRemove) {
-            iter.remove();
-            break;
-          }
-        }
-      }
-      // modify the numSnapshottableDirs metrics
-      numSnapshottableDirs.addAndGet(-toRemoveList.size());
-    }
+    Collections.sort(statusList);
+    return statusList.toArray(
+        new SnapshottableDirectoryStatus[statusList.size()]);

MOV26 INS26 MOV31 UPD40 INS40 INS31 INS31 UPD74 INS29 UPD83 UPD39 UPD42 MOV44 MOV29 MOV83 MOV39 UPD42 MOV42 MOV44 INS8 MOV78 INS83 INS39 INS42 INS8 UPD39 INS43 UPD43 INS25 INS65 UPD42 INS60 INS21 UPD42 INS25 INS25 INS41 INS21 INS42 UPD42 UPD74 MOV32 INS8 INS8 UPD66 UPD66 INS66 INS65 INS66 INS83 MOV43 INS59 INS32 INS66 MOV27 INS8 INS27 INS8 INS8 INS32 INS32 INS32 INS32 UPD43 INS43 MOV43 MOV21 MOV21 INS21 UPD42 UPD42 INS42 INS32 INS67 INS42 INS32 INS42 INS42 INS27 UPD42 MOV70 INS42 INS32 MOV21 MOV21 UPD42 UPD42 UPD42 MOV42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS7 INS7 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS32 INS42 INS42 INS44 INS42 INS8 INS42 INS42 INS42 MOV11 UPD42 UPD42 INS40 INS42 MOV32 INS42 UPD42 MOV42 MOV43 INS42 MOV21 UPD42 UPD42 INS34 UPD42 UPD42 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL41 DEL8 DEL25 DEL36 DEL42 DEL40 DEL32 DEL42 DEL66 DEL42 DEL66 DEL65 DEL32 DEL41 DEL42 DEL66 DEL65 DEL42 DEL42 DEL42 DEL27 DEL10 DEL8 DEL25 DEL8 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL61 DEL42 DEL42 DEL32 DEL38 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31