HADOOP-14640. Azure: Support affinity for service running on localhost and reuse SPNEGO hadoop.auth cookie for authorization, SASKey and delegation token generation. Contributed by Santhosh G Nayak.

- * <p>
- * http://www.apache.org/licenses/LICENSE-2.0
- * <p>
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+import org.apache.hadoop.fs.azure.security.SpnegoToken;
+import java.net.InetAddress;
+  /**
+   * Enable caching of Spnego token.
+   */
+  private boolean isSpnegoTokenCachingEnabled;
+
+  /**
+   * Cached SPNEGO token.
+   */
+  private SpnegoToken spnegoToken;
+
-      boolean alwaysRequiresKerberosAuth) {
+      boolean alwaysRequiresKerberosAuth, boolean isSpnegoTokenCachingEnabled) {
+    this.isSpnegoTokenCachingEnabled = isSpnegoTokenCachingEnabled;
-    if (connectUgi == null) {
+    if (connectUgi != null) {
+      queryParams.add(new NameValuePair() {
+        @Override public String getName() {
+          return Constants.DOAS_PARAM;
+        }
+
+        @Override public String getValue() {
+          return ugi.getShortUserName();
+        }
+      });
+    } else  {
+
+    final Token delegationToken = getDelegationToken(ugi);
+    if (!alwaysRequiresKerberosAuth && delegationToken != null) {
+      final String delegationTokenEncodedUrlString =
+          delegationToken.encodeToUrlString();
+      queryParams.add(new NameValuePair() {
+        @Override public String getName() {
+          return DELEGATION_TOKEN_QUERY_PARAM_NAME;
+        }
+
+        @Override public String getValue() {
+          return delegationTokenEncodedUrlString;
+        }
+      });
+    }
+
-      List<NameValuePair> queryParams, int urlIndex, String httpMethod)
-      throws URISyntaxException, IOException {
-    final UserGroupInformation ugi = UserGroupInformation.getCurrentUser();
-    UserGroupInformation connectUgi = ugi.getRealUser();
-    if (connectUgi != null) {
-      queryParams.add(new NameValuePair() {
-        @Override public String getName() {
-          return Constants.DOAS_PARAM;
-        }
-
-        @Override public String getValue() {
-          return ugi.getShortUserName();
-        }
-      });
-    }
-
-    final Token delegationToken = getDelegationToken(ugi);
-    if (!alwaysRequiresKerberosAuth && delegationToken != null) {
-      final String delegationTokenEncodedUrlString =
-          delegationToken.encodeToUrlString();
-      queryParams.add(new NameValuePair() {
-        @Override public String getName() {
-          return DELEGATION_TOKEN_QUERY_PARAM_NAME;
-        }
-
-        @Override public String getValue() {
-          return delegationTokenEncodedUrlString;
-        }
-      });
-    }
-
+      List<NameValuePair> queryParams, int urlIndex, String httpMethod,
+      boolean requiresNewAuth) throws URISyntaxException, IOException {
+    if (uriBuilder.getHost().equals("localhost")) {
+      uriBuilder.setHost(InetAddress.getLocalHost().getCanonicalHostName());
+    }
-      AuthenticatedURL.Token token = new AuthenticatedURL.Token();
+      AuthenticatedURL.Token token = null;
-        kerberosAuthenticator.authenticate(uriBuilder.build().toURL(), token);
+        if (isSpnegoTokenCachingEnabled && !requiresNewAuth
+            && spnegoToken != null && spnegoToken.isTokenValid()){
+          token = spnegoToken.getToken();
+        } else {
+          token = new AuthenticatedURL.Token();
+          kerberosAuthenticator.authenticate(uriBuilder.build().toURL(), token);
+          spnegoToken = new SpnegoToken(token);
+        }
-  private synchronized Token<?> getDelegationToken(
+  private Token<?> getDelegationToken(

INS26 INS26 INS40 INS40 INS23 INS23 INS29 INS83 INS39 INS59 INS29 INS83 INS43 INS59 INS44 INS44 INS65 INS42 INS65 INS42 INS42 INS39 INS42 INS21 MOV60 MOV25 INS39 INS42 INS25 INS66 INS66 INS7 MOV27 INS8 INS32 MOV8 INS22 INS42 INS21 INS32 INS42 INS45 INS52 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS8 MOV42 MOV42 MOV14 INS42 INS42 INS32 INS33 INS25 INS32 UPD42 MOV42 INS27 INS8 MOV8 INS42 INS42 INS27 INS32 INS21 INS21 INS21 INS42 INS38 INS27 INS42 INS42 INS7 INS7 INS7 INS42 INS42 INS33 INS42 INS32 INS42 MOV14 INS42 INS14 INS42 INS42 INS43 INS42 INS42 INS42 DEL66 DEL66 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL32 DEL59 DEL60 DEL25 DEL83