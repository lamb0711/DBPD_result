HDFS-6000. Avoid saving namespace when starting rolling upgrade. Contributed by Jing Zhao.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1571840 13f79535-47bb-0310-9956-ffa450edef68

+  public void triggerRollbackCheckpoint() {
+    thread.setNeedRollbackCheckpoint(true);
+    thread.interrupt();
+  }
+
+    final NameNodeFile imageType;
-      img.saveNamespace(namesystem, NameNodeFile.IMAGE, canceler);
+      if (namesystem.isRollingUpgrade()
+          && !namesystem.getFSImage().hasRollbackFSImage()) {
+        // if we will do rolling upgrade but have not created the rollback image
+        // yet, name this checkpoint as fsimage_rollback
+        imageType = NameNodeFile.IMAGE_ROLLBACK;
+      } else {
+        imageType = NameNodeFile.IMAGE;
+      }
+      img.saveNamespace(namesystem, imageType, canceler);
-            namesystem.getFSImage().getStorage(), txid);
+            namesystem.getFSImage().getStorage(), imageType, txid);
+    // Indicate that a rollback checkpoint is required immediately. It will be
+    // reset to false after the checkpoint is done
+    private volatile boolean needRollbackCheckpoint = false;
+    private void setNeedRollbackCheckpoint(boolean need) {
+      this.needRollbackCheckpoint = need;
+    }
+
+      final long checkPeriod = 1000 * checkpointConf.getCheckPeriod();
-        try {
-          Thread.sleep(1000 * checkpointConf.getCheckPeriod());
-        } catch (InterruptedException ie) {
-        }
-        if (!shouldRun) {
-          break;
+        if (!needRollbackCheckpoint) {
+          try {
+            Thread.sleep(checkPeriod);
+          } catch (InterruptedException ie) {
+          }
+          if (!shouldRun) {
+            break;
+          }
-          boolean needCheckpoint = false;
-          if (uncheckpointed >= checkpointConf.getTxnCount()) {
+          boolean needCheckpoint = needRollbackCheckpoint;
+          if (needCheckpoint) {
+            LOG.info("Triggering a rollback fsimage for rolling upgrade.");
+          } else if (uncheckpointed >= checkpointConf.getTxnCount()) {
+            // reset needRollbackCheckpoint to false only when we finish a ckpt
+            // for rollback image
+            if (needRollbackCheckpoint
+                && namesystem.getFSImage().hasRollbackFSImage()) {
+              namesystem.setCreatedRollbackImages(true);
+              needRollbackCheckpoint = false;
+            }

INS31 INS83 INS39 INS42 INS8 INS23 INS31 INS21 INS21 INS60 INS83 INS83 INS39 INS59 INS83 INS39 INS42 INS44 INS8 INS32 INS32 INS83 INS43 INS59 INS42 INS9 INS39 INS42 INS21 INS60 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS25 INS7 INS83 INS39 INS59 INS27 INS8 INS8 INS22 INS42 INS42 MOV27 INS25 INS32 INS38 INS21 INS21 INS42 INS52 INS42 INS38 INS8 MOV51 INS42 INS42 INS32 INS7 INS7 INS42 MOV54 MOV25 INS25 INS32 INS42 INS42 INS40 INS42 INS40 MOV25 INS42 INS8 INS42 INS42 INS42 INS21 MOV21 INS25 MOV21 INS32 INS27 INS8 INS42 INS42 INS42 INS42 INS45 INS42 INS32 INS21 INS21 INS32 INS42 INS32 INS7 INS42 INS42 INS42 INS42 INS9 INS42 INS9 DEL40 DEL9