HDFS-13880. Add mechanism to allow certain RPC calls to bypass sync. Contributed by Chen Liang.

+    private boolean isCallCoordinated;
+      this.isCallCoordinated = false;
+    public void markCallCoordinated(boolean flag) {
+      this.isCallCoordinated = flag;
+    }
+
+    public boolean isCallCoordinated() {
+      return this.isCallCoordinated;
+    }
+
-      if(alignmentContext != null) {
-        long stateId = alignmentContext.receiveRequestState(header);
-        call.setClientStateId(stateId);
+      if(alignmentContext != null && call.rpcRequest != null &&
+          (call.rpcRequest instanceof ProtobufRpcEngine.RpcProtobufRequest)) {
+        // if call.rpcRequest is not RpcProtobufRequest, will skip the following
+        // step and treat the call as uncoordinated. As currently only certain
+        // ClientProtocol methods request made through RPC protobuf needs to be
+        // coordinated.
+        String methodName;
+        String protoName;
+        try {
+          ProtobufRpcEngine.RpcProtobufRequest req =
+              (ProtobufRpcEngine.RpcProtobufRequest) call.rpcRequest;
+          methodName = req.getRequestHeader().getMethodName();
+          protoName = req.getRequestHeader().getDeclaringClassProtocolName();
+        } catch (IOException ioe) {
+          throw new RpcServerException("Rpc request header check fail", ioe);
+        }
+        if (!alignmentContext.isCoordinatedCall(protoName, methodName)) {
+          call.markCallCoordinated(false);
+        } else {
+          call.markCallCoordinated(true);
+          long stateId = alignmentContext.receiveRequestState(header);
+          call.setClientStateId(stateId);
+        }
+      } else {
+        call.markCallCoordinated(false);
-          if (alignmentContext != null && call.getClientStateId() >
-              alignmentContext.getLastSeenStateId()) {
+          if (alignmentContext != null && call.isCallCoordinated() &&
+              call.getClientStateId() > alignmentContext.getLastSeenStateId()) {

INS23 INS31 INS31 INS83 INS39 INS59 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS42 INS21 INS39 INS42 INS21 INS41 INS25 INS7 INS7 INS22 INS27 INS8 INS8 INS22 INS9 INS22 INS42 INS52 INS42 INS27 INS36 INS60 INS60 INS54 MOV25 INS21 INS52 INS42 INS52 INS42 MOV27 INS27 INS62 INS43 INS59 INS43 INS59 INS8 INS12 INS38 INS8 INS32 INS40 INS33 INS40 INS43 INS42 INS42 INS42 INS42 INS60 INS21 INS21 INS44 INS8 INS32 INS21 INS21 INS42 INS42 INS9 INS40 INS43 INS59 INS7 INS7 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS32 INS32 INS40 INS42 INS11 INS42 INS32 INS42 INS32 INS42 INS14 INS42 INS42 INS9 INS42 INS42 INS9 INS27 INS43 INS40 INS32 INS42 INS32 INS42 INS43 INS45 INS42 MOV27 INS32 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42