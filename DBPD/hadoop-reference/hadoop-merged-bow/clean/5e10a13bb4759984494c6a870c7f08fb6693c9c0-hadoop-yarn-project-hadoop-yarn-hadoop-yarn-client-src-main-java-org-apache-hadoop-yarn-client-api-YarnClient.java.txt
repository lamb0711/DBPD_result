YARN-2576. Making test patch pass in branch. Contributed by Subru Krishnan and Carlo Curino.
(cherry picked from commit 90ac0be86b898aefec5471db4027554c8e1b310c)

+import org.apache.hadoop.yarn.api.records.ReservationDefinition;
-   * {@link ResourceManager}.
+   * {@code ResourceManager}.
-   * {@link ReservationRequest} object. This contains information about the
-   * amount of capacity, temporal constraints, and gang needs. Furthermore, the
-   * reservation might be composed of multiple stages, with ordering
-   * dependencies among them.
+   * {@link ReservationSubmissionRequest} object. This contains information
+   * about the amount of capacity, temporal constraints, and gang needs.
+   * Furthermore, the reservation might be composed of multiple stages, with
+   * ordering dependencies among them.
-   * {@link ResourceManager} performs an analysis of the resources that have
+   * {@code ResourceManager} performs an analysis of the resources that have
-   * (e.g., {@link CapacityOverTimePolicy}). Once it has positively determined
-   * that the ReservationRequest is satisfiable the {@link ResourceManager}
-   * answers with a {@link ReservationResponse} that include a
+   * (e.g., {@code CapacityOverTimePolicy}). Once it has positively determined
+   * that the ReservationRequest is satisfiable the {@code ResourceManager}
+   * answers with a {@link ReservationSubmissionResponse} that includes a
-   * The semantics guarantees that the ReservationId returned, corresponds to a
-   * valid reservation existing in the time-range request by the user. The
-   * amount of capacity dedicated to such reservation can vary overtime,
-   * depending of the allocation that has been determined. But it is guaranteed
-   * to satisfy all the constraint expressed by the user in the
-   * {@link ReservationRequest}
+   * The semantics guarantees that the {@link ReservationId} returned,
+   * corresponds to a valid reservation existing in the time-range request by
+   * the user. The amount of capacity dedicated to such reservation can vary
+   * overtime, depending of the allocation that has been determined. But it is
+   * guaranteed to satisfy all the constraint expressed by the user in the
+   * {@link ReservationDefinition}
-   * {@link ReservationRequest}. Upon success the previous allocation is
+   * {@link ReservationDefinition}. Upon success the previous allocation is
-   * @param request to update an existing Reservation (the ReservationRequest
-   *          should refer to an existing valid {@link ReservationId})
+   * @param request to update an existing Reservation (the
+   *          {@link ReservationUpdateRequest} should refer to an existing valid
+   *          {@link ReservationId})
-   * @param request to remove an existing Reservation (the ReservationRequest
-   *          should refer to an existing valid {@link ReservationId})
+   * @param request to remove an existing Reservation (the
+   *          {@link ReservationDeleteRequest} should refer to an existing valid
+   *          {@link ReservationId})

INS26 INS40 UPD65 UPD66 UPD66 UPD66 UPD66 UPD65 UPD65 UPD65 UPD66 UPD66 INS65 INS66 UPD66 UPD66 UPD66 UPD66 UPD66 INS65 UPD66 UPD66 INS65 UPD66 INS66 UPD42 INS66 INS66 INS66 UPD42 INS42 UPD42 UPD42 INS42 INS42 DEL42 DEL42 DEL42 DEL42