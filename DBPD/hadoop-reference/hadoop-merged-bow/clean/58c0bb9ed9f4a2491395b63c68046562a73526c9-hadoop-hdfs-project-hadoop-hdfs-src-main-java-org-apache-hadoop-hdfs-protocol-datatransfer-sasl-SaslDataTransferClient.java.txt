HDFS-6606. Optimize HDFS Encrypted Transport performance. (yliu)

-import static org.apache.hadoop.hdfs.DFSConfigKeys.DFS_DATA_TRANSFER_PROTECTION_KEY;
+import java.util.List;
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.crypto.CipherOption;
+import org.apache.hadoop.crypto.CipherSuite;
+import com.google.common.collect.Lists;
+  private final Configuration conf;
+   * @param conf the configuration
-  public SaslDataTransferClient(SaslPropertiesResolver saslPropsResolver,
+  public SaslDataTransferClient(Configuration conf, 
+      SaslPropertiesResolver saslPropsResolver,
-    this(saslPropsResolver, trustedChannelResolver, null);
+    this(conf, saslPropsResolver, trustedChannelResolver, null);
+   * @param conf the configuration
-  public SaslDataTransferClient(SaslPropertiesResolver saslPropsResolver,
+  public SaslDataTransferClient(Configuration conf, 
+      SaslPropertiesResolver saslPropsResolver,
+    this.conf = conf;
-      performSaslStep1(out, in, sasl);
-
-      // step 2 (client-side only)
+      List<CipherOption> cipherOptions = null;
+      if (requestedQopContainsPrivacy(saslProps)) {
+        // Negotiation cipher options
+        CipherOption option = new CipherOption(CipherSuite.AES_CTR_NOPADDING);
+        cipherOptions = Lists.newArrayListWithCapacity(1);
+        cipherOptions.add(option);
+      }
+      sendSaslMessageAndNegotiationCipherOptions(out, localResponse, 
+          cipherOptions);
+
+      // step 2 (client-side only)
+      SaslResponseWithNegotiatedCipherOption response = 
+          readSaslMessageAndNegotiatedCipherOption(in);
+      localResponse = sasl.evaluateChallengeOrResponse(response.payload);
-      return sasl.createStreamPair(out, in);
+      CipherOption cipherOption = null;
+      if (sasl.isNegotiatedQopPrivacy()) {
+        // Unwrap the negotiated cipher option
+        cipherOption = unwrap(response.cipherOption, sasl);
+      }
+
+      // If negotiated cipher option is not null, we will use it to create 
+      // stream pair.
+      return cipherOption != null ? createStreamPair(
+          conf, cipherOption, underlyingOut, underlyingIn, false) : 
+            sasl.createStreamPair(out, in);

MOV26 INS26 INS26 INS26 INS26 INS40 UPD40 INS40 INS40 INS40 INS23 INS83 INS83 INS43 INS59 INS44 INS44 INS42 INS42 INS65 INS43 INS42 INS65 INS43 INS42 INS21 INS42 INS66 INS42 INS42 INS42 INS66 INS42 INS7 INS22 INS42 INS60 INS25 INS21 INS60 INS21 INS60 INS25 INS52 INS42 INS74 INS59 INS32 INS8 INS32 INS43 INS59 INS7 INS43 INS59 INS32 INS8 INS16 INS43 INS43 INS42 INS33 INS42 UPD42 MOV42 INS60 INS21 INS21 INS42 MOV42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS33 INS42 INS42 INS21 INS27 INS32 MOV32 INS42 INS42 INS43 INS59 INS7 INS32 INS42 MOV42 MOV42 INS42 INS40 INS7 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS14 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS43 INS40 INS42 INS42 INS34 INS42 INS40 INS42 INS42 DEL32 DEL21