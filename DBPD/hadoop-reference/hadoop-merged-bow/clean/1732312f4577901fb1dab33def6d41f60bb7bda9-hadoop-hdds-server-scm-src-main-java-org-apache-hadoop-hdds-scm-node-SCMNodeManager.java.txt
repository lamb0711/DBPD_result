HDDS-1663. Add datanode to network topology cluster during node regisâ€¦ (#937)



+import org.apache.hadoop.hdds.scm.net.NetConstants;
+import org.apache.hadoop.hdds.scm.net.NetworkTopology;
+import org.apache.hadoop.hdds.scm.net.Node;
+import org.apache.hadoop.hdfs.DFSConfigKeys;
+import org.apache.hadoop.net.CachedDNSToSwitchMapping;
+import org.apache.hadoop.net.DNSToSwitchMapping;
+import org.apache.hadoop.net.TableMapping;
+import org.apache.hadoop.util.ReflectionUtils;
+  private final NetworkTopology clusterMap;
+  private final DNSToSwitchMapping dnsToSwitchMapping;
+  private final boolean useHostname;
+    this.clusterMap = scmManager.getClusterMap();
+    Class<? extends DNSToSwitchMapping> dnsToSwitchMappingClass =
+        conf.getClass(DFSConfigKeys.NET_TOPOLOGY_NODE_SWITCH_MAPPING_IMPL_KEY,
+            TableMapping.class, DNSToSwitchMapping.class);
+    DNSToSwitchMapping newInstance = ReflectionUtils.newInstance(
+        dnsToSwitchMappingClass, conf);
+    this.dnsToSwitchMapping =
+        ((newInstance instanceof CachedDNSToSwitchMapping) ? newInstance
+            : new CachedDNSToSwitchMapping(newInstance));
+    this.useHostname = conf.getBoolean(
+        DFSConfigKeys.DFS_DATANODE_USE_DN_HOSTNAME,
+        DFSConfigKeys.DFS_DATANODE_USE_DN_HOSTNAME_DEFAULT);
+      String location;
+      if (useHostname) {
+        datanodeDetails.setNetworkName(datanodeDetails.getHostName());
+        location = nodeResolve(datanodeDetails.getHostName());
+      } else {
+        datanodeDetails.setNetworkName(datanodeDetails.getIpAddress());
+        location = nodeResolve(datanodeDetails.getIpAddress());
+      }
+      if (location != null) {
+        datanodeDetails.setNetworkLocation(location);
+      }
+      clusterMap.add(datanodeDetails);
+
+  /**
+   * Given datanode address or host name, returns the DatanodeDetails for the
+   * node.
+   *
+   * @param address node host address
+   * @return the given datanode, or null if not found
+   */
+  @Override
+  public DatanodeDetails getNode(String address) {
+    Node node = null;
+    String location = nodeResolve(address);
+    if (location != null) {
+      node = clusterMap.getNode(location + NetConstants.PATH_SEPARATOR_STR +
+          address);
+    }
+    return node == null ? null : (DatanodeDetails)node;
+  }
+  private String nodeResolve(String hostname) {
+    List<String> hosts = new ArrayList<>(1);
+    hosts.add(hostname);
+    List<String> resolvedHosts = dnsToSwitchMapping.resolve(hosts);
+    if (resolvedHosts != null && !resolvedHosts.isEmpty()) {
+      String location = resolvedHosts.get(0);
+      LOG.debug("Resolve datanode {} return location {}", hostname, location);
+      return location;
+    } else {
+      LOG.error("Node {} Resolution failed. Please make sure that DNS table " +
+          "mapping or configured mapping is functional.", hostname);
+      return null;
+    }
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS23 INS31 INS31 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS83 INS39 INS59 INS29 INS78 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS21 INS60 INS60 INS21 INS21 INS65 INS65 INS65 INS42 INS42 INS43 INS42 INS60 INS60 INS25 INS41 INS42 INS43 INS42 INS60 INS21 INS60 INS25 INS7 INS74 INS59 INS43 INS59 INS7 INS7 INS8 INS66 INS66 INS42 INS66 INS66 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS16 INS42 INS74 INS59 INS32 INS74 INS59 INS27 INS8 INS8 INS22 INS32 INS43 INS76 INS42 INS32 INS42 INS42 INS32 INS22 INS36 INS22 INS32 INS60 INS25 INS25 MOV21 INS21 MOV21 MOV21 INS42 INS42 INS33 INS42 INS42 INS32 INS42 INS33 INS21 INS27 INS33 INS11 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS27 INS38 INS60 INS21 INS41 INS21 INS41 INS52 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS40 INS57 INS57 INS42 INS42 INS42 INS42 INS52 INS42 INS16 INS52 INS42 INS42 INS42 INS40 INS40 INS43 INS59 INS42 INS8 INS8 INS27 INS8 INS32 INS42 INS42 INS7 INS42 INS33 INS43 INS42 INS42 INS42 INS74 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS43 INS59 INS32 INS42 INS32 INS33 INS42 INS43 INS43 INS36 INS42 INS14 INS42 INS42 INS21 INS21 INS21 INS21 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS62 INS43 INS42 INS32 INS7 INS32 INS7 INS32 INS42 INS42 INS27 INS42 INS42 INS42 INS34 INS45 INS45 INS42 INS43 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 DEL8