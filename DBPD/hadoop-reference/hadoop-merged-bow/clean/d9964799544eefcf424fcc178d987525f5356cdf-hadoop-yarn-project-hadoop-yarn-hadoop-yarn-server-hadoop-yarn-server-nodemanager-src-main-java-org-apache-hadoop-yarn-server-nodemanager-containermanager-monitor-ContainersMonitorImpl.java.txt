YARN-4599. Set OOM control for memory cgroups. (Miklos Szegedi via Haibo Chen)

+import org.apache.hadoop.yarn.exceptions.YarnException;
+import org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.CGroupElasticMemoryController;
+import org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.ResourceHandlerModule;
+  private CGroupElasticMemoryController oomListenerThread;
+  private boolean elasticMemoryEnforcement;
+  private boolean strictMemoryEnforcement;
+    elasticMemoryEnforcement = this.conf.getBoolean(
+        YarnConfiguration.NM_ELASTIC_MEMORY_CONTROL_ENABLED,
+        YarnConfiguration.DEFAULT_NM_ELASTIC_MEMORY_CONTROL_ENABLED);
+    strictMemoryEnforcement = conf.getBoolean(
+        YarnConfiguration.NM_MEMORY_RESOURCE_ENFORCED,
+        YarnConfiguration.DEFAULT_NM_MEMORY_RESOURCE_ENFORCED);
+    LOG.info("Elastic memory control enabled: " + elasticMemoryEnforcement);
+    LOG.info("Strict memory control enabled: " + strictMemoryEnforcement);
+
+    if (elasticMemoryEnforcement) {
+      if (!CGroupElasticMemoryController.isAvailable()) {
+        // Test for availability outside the constructor
+        // to be able to write non-Linux unit tests for
+        // CGroupElasticMemoryController
+        throw new YarnException(
+            "CGroup Elastic Memory controller enabled but " +
+            "it is not available. Exiting.");
+      } else {
+        this.oomListenerThread = new CGroupElasticMemoryController(
+            conf,
+            context,
+            ResourceHandlerModule.getCGroupsHandler(),
+            pmemCheckEnabled,
+            vmemCheckEnabled,
+            pmemCheckEnabled ?
+                maxPmemAllottedForContainers : maxVmemAllottedForContainers
+        );
+      }
+    }
+    if (oomListenerThread != null) {
+      oomListenerThread.start();
+    }
+      if (this.oomListenerThread != null) {
+        this.oomListenerThread.stopListening();
+        try {
+          this.oomListenerThread.join();
+        } finally {
+          this.oomListenerThread = null;
+        }
+      }
+      if (elasticMemoryEnforcement || strictMemoryEnforcement) {
+        // We enforce the overall memory usage instead of individual containers
+        return;
+      }

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS23 INS83 INS43 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS42 INS42 INS42 INS42 INS21 INS21 INS21 INS21 INS25 INS25 INS7 INS7 INS32 INS32 INS42 INS8 INS27 INS8 INS25 INS42 INS32 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS27 INS25 INS42 INS33 INS21 INS25 INS27 INS8 INS22 INS42 INS40 INS40 INS42 INS42 INS40 INS40 INS45 INS42 INS45 INS42 INS38 INS8 INS8 INS32 INS27 INS8 INS42 INS42 INS41 INS52 INS42 INS32 INS53 INS21 INS42 INS42 INS22 INS33 INS21 INS54 INS42 INS42 INS14 INS7 INS52 INS42 INS32 INS8 INS8 INS43 INS27 INS22 INS14 INS22 INS42 INS21 INS21 INS42 INS45 INS45 INS52 INS42 INS43 INS42 INS42 INS32 INS42 INS42 INS16 INS52 INS42 INS32 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS22 INS42 INS22 INS33 INS52 INS42 INS52 INS42