SUBMARINE-52. [SUBMARINE-14] Generate Service spec + launch script for single-node PyTorch learning job. Contributed by Szilard Nemeth.

-import org.apache.hadoop.yarn.submarine.client.cli.param.RunJobParameters;
-import org.apache.hadoop.yarn.submarine.common.api.TaskType;
+import org.apache.hadoop.yarn.submarine.client.cli.param.runjob.RunJobParameters;
+import org.apache.hadoop.yarn.submarine.common.api.PyTorchRole;
+import org.apache.hadoop.yarn.submarine.common.api.Role;
+import org.apache.hadoop.yarn.submarine.common.api.TensorFlowRole;
+import static org.apache.hadoop.yarn.service.conf.YarnServiceConstants.CONTAINER_STATE_REPORT_AS_SERVICE_STATE;
+import static org.apache.hadoop.yarn.submarine.runtimes.yarnservice.tensorflow.TensorFlowCommons.addCommonEnvironments;
+import static org.apache.hadoop.yarn.submarine.utils.DockerUtilities.getDockerArtifact;
+import static org.apache.hadoop.yarn.submarine.utils.SubmarineResourceUtils.convertYarnResourceToServiceResource;
-  protected final TaskType taskType;
+  protected final Role role;
-      RunJobParameters parameters, TaskType taskType,
+      RunJobParameters parameters, Role role,
-    this.taskType = taskType;
+    this.role = role;
+  protected Component createComponentInternal() throws IOException {
+    Objects.requireNonNull(this.parameters.getWorkerResource(),
+        "Worker resource must not be null!");
+    if (parameters.getNumWorkers() < 1) {
+      throw new IllegalArgumentException(
+          "Number of workers should be at least 1!");
+    }
+
+    Component component = new Component();
+    component.setName(role.getComponentName());
+
+    if (role.equals(TensorFlowRole.PRIMARY_WORKER) ||
+        role.equals(PyTorchRole.PRIMARY_WORKER)) {
+      component.setNumberOfContainers(1L);
+      component.getConfiguration().setProperty(
+          CONTAINER_STATE_REPORT_AS_SERVICE_STATE, "true");
+    } else {
+      component.setNumberOfContainers(
+          (long) parameters.getNumWorkers() - 1);
+    }
+
+    if (parameters.getWorkerDockerImage() != null) {
+      component.setArtifact(
+          getDockerArtifact(parameters.getWorkerDockerImage()));
+    }
+
+    component.setResource(convertYarnResourceToServiceResource(
+        parameters.getWorkerResource()));
+    component.setRestartPolicy(Component.RestartPolicyEnum.NEVER);
+
+    addCommonEnvironments(component, role);
+    generateLaunchCommand(component);
+
+    return component;
+  }
+
-        launchCommandFactory.createLaunchCommand(taskType, component);
+        launchCommandFactory.createLaunchCommand(role, component);
-    String destScriptFileName = getScriptFileName(taskType);
+    String destScriptFileName = getScriptFileName(role);

INS26 INS26 INS26 INS26 INS26 INS26 UPD40 INS40 UPD40 INS40 INS40 INS40 INS40 INS40 INS31 UPD43 INS83 INS43 INS42 INS43 INS8 UPD42 UPD42 UPD43 UPD42 INS42 INS42 INS21 INS25 INS60 INS21 INS25 INS25 INS21 INS21 INS21 INS21 INS41 UPD42 INS32 INS27 INS8 INS43 INS59 INS32 INS27 INS8 INS8 INS27 INS8 INS32 INS32 INS32 INS32 INS42 UPD42 INS42 INS42 INS32 INS45 INS32 INS34 INS53 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS32 INS21 INS21 INS21 INS32 INS33 INS21 INS42 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 UPD42 INS22 INS42 INS42 INS42 INS14 INS43 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS40 INS32 INS32 INS32 INS42 INS42 INS32 INS42 INS32 UPD42 UPD42 INS52 INS42 INS43 INS45 INS42 INS42 INS42 INS34 INS32 INS42 INS42 INS45 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS11 INS34 INS42 INS32 INS39 INS32 INS42 INS42 INS42 INS42