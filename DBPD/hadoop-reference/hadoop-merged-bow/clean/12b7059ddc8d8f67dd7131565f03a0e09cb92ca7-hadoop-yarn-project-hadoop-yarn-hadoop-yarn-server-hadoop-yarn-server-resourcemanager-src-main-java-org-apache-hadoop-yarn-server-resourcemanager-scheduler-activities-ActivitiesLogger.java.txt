YARN-9440. Improve diagnostics for scheduler and app activities. Contributed by Tao Yang.

+import org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey;
-        SchedulerApplicationAttempt application, Priority priority,
+        SchedulerApplicationAttempt application,
+        SchedulerRequestKey requestKey,
-          priority, diagnostic, ActivityState.SKIPPED);
+          requestKey, diagnostic, ActivityState.SKIPPED);
-        SchedulerApplicationAttempt application, Priority priority,
+        SchedulerApplicationAttempt application,
+        SchedulerRequestKey schedulerKey,
-        String type = "container";
-        // Add application-container activity into specific node allocation.
-        activitiesManager.addSchedulingActivityForNode(nodeId,
-            application.getApplicationId().toString(), null,
-            priority.toString(), ActivityState.SKIPPED, diagnostic, type);
-        type = "app";
+        if (schedulerKey != null) {
+          String allocationRequestId =
+              String.valueOf(schedulerKey.getAllocationRequestId());
+          String priorityStr = getPriorityStr(schedulerKey);
+          String requestName = getRequestName(priorityStr, allocationRequestId);
+          String type = "container";
+          // Add application-container activity into specific node allocation.
+          activitiesManager.addSchedulingActivityForNode(nodeId,
+              requestName, null,
+              priorityStr, ActivityState.SKIPPED, diagnostic, type,
+              null);
+          type = "request";
+          // Add application-container activity into specific node allocation.
+          activitiesManager.addSchedulingActivityForNode(nodeId,
+              application.getApplicationId().toString(), requestName,
+              priorityStr, ActivityState.SKIPPED,
+              ActivityDiagnosticConstant.EMPTY, type, allocationRequestId);
+        }
-            ActivityDiagnosticConstant.EMPTY, type);
+            schedulerKey != null ? ActivityDiagnosticConstant.EMPTY :
+                diagnostic, "app", null);
-            application.getApplicationId(), null, priority.toString(), appState,
-            diagnostic, type);
+            application.getApplicationId(), null,
+            getPriorityStr(schedulerKey), appState,
+            diagnostic, type, nodeId,
+            schedulerKey == null ?
+                null : String.valueOf(schedulerKey.getAllocationRequestId()));
+      if (nodeId == null || nodeId == ActivitiesManager.EMPTY_NODE_ID) {
+        nodeId = updatedContainer.getNodeId();
+      }
+        String containerPriorityStr =
+            updatedContainer.getContainer().getPriority().toString();
+        String allocationRequestId = String
+            .valueOf(updatedContainer.getContainer().getAllocationRequestId());
+        String requestName =
+            getRequestName(containerPriorityStr, allocationRequestId);
+
+        // Add application-container activity into specific node allocation.
+        activitiesManager.addSchedulingActivityForNode(nodeId,
+            requestName,
+            updatedContainer.getContainer().toString(),
+            containerPriorityStr,
+            activityState, ActivityDiagnosticConstant.EMPTY, type, null);
+        type = "request";
-            updatedContainer.getContainer().toString(),
-            updatedContainer.getContainer().getPriority().toString(),
-            activityState, ActivityDiagnosticConstant.EMPTY, type);
+            requestName, containerPriorityStr,
+            activityState, ActivityDiagnosticConstant.EMPTY, type,
+            allocationRequestId);
-            ActivityDiagnosticConstant.EMPTY, type);
+            ActivityDiagnosticConstant.EMPTY, type, null);
-            activityState, ActivityDiagnosticConstant.EMPTY, type);
+            activityState, ActivityDiagnosticConstant.EMPTY, type, nodeId,
+            String.valueOf(
+                updatedContainer.getContainer().getAllocationRequestId()));
-        diagnostic, type);
+        diagnostic, type, null);
+
+  private static String getRequestName(String priority,
+      String allocationRequestId) {
+    return "request_"
+        + (priority == null ? "" : priority)
+        + "_" + (allocationRequestId == null ? "" : allocationRequestId);
+  }
+
+  private static String getPriorityStr(SchedulerRequestKey schedulerKey) {
+    Priority priority = schedulerKey == null ?
+        null : schedulerKey.getPriority();
+    return priority == null ? null : priority.toString();
+  }

INS26 INS40 INS31 INS31 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS60 INS41 UPD43 UPD42 UPD43 UPD42 INS25 INS25 INS42 INS42 INS27 INS42 INS43 INS59 INS16 UPD42 UPD42 MOV32 INS8 INS27 INS8 INS33 INS45 INS36 INS45 INS36 INS42 INS42 INS16 INS27 INS33 MOV32 UPD42 MOV25 MOV21 MOV60 INS27 INS27 INS21 INS60 INS60 INS60 MOV60 INS21 INS21 INS16 INS16 INS27 INS33 INS32 INS42 INS33 INS27 INS43 INS42 INS33 INS42 INS40 INS7 MOV43 INS59 INS43 INS59 INS43 INS59 INS32 INS7 INS27 INS45 INS42 INS27 INS45 INS42 INS42 INS33 INS42 INS42 INS42 INS33 INS60 INS60 INS60 INS21 INS16 INS45 INS33 INS42 INS32 INS42 INS16 INS42 INS32 INS42 MOV32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS40 INS42 INS33 INS42 INS45 INS42 INS42 INS42 INS33 INS42 INS32 INS42 INS33 INS42 INS33 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS27 INS40 INS42 INS42 INS42 INS27 INS33 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 UPD42 MOV42 INS33 UPD45 INS42 INS42 INS42 MOV32 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS33 INS42 INS33 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL32 DEL40 DEL42