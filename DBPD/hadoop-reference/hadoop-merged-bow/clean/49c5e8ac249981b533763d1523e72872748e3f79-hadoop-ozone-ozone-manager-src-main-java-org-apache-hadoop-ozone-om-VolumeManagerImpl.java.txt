HDDS-1672. Improve locking in OzoneManager. (#1016)



+import static org.apache.hadoop.ozone.om.lock.OzoneManagerLock.Resource.USER_LOCK;
+import static org.apache.hadoop.ozone.om.lock.OzoneManagerLock.Resource.VOLUME_LOCK;
-    metadataManager.getLock().acquireUserLock(omVolumeArgs.getOwnerName());
-    metadataManager.getLock().acquireVolumeLock(omVolumeArgs.getVolume());
+
+    boolean acquiredUserLock = false;
+    metadataManager.getLock().acquireLock(VOLUME_LOCK,
+        omVolumeArgs.getVolume());
+      acquiredUserLock = metadataManager.getLock().acquireLock(USER_LOCK,
+          omVolumeArgs.getOwnerName());
-      metadataManager.getLock().releaseVolumeLock(omVolumeArgs.getVolume());
-      metadataManager.getLock().releaseUserLock(omVolumeArgs.getOwnerName());
+      if (acquiredUserLock) {
+        metadataManager.getLock().releaseLock(USER_LOCK,
+            omVolumeArgs.getOwnerName());
+      }
+      metadataManager.getLock().releaseLock(VOLUME_LOCK,
+          omVolumeArgs.getVolume());
-    metadataManager.getLock().acquireUserLock(owner);
-    metadataManager.getLock().acquireVolumeLock(volume);
+    boolean acquiredUsersLock = false;
+    String actualOwner = null;
+    metadataManager.getLock().acquireLock(VOLUME_LOCK, volume);
-      String originalOwner =
-          metadataManager.getUserKey(volumeArgs.getOwnerName());
+      actualOwner = volumeArgs.getOwnerName();
+      String originalOwner = metadataManager.getUserKey(actualOwner);
+
+      acquiredUsersLock = metadataManager.getLock().acquireMultiUserLock(owner,
+          originalOwner);
-      metadataManager.getLock().releaseVolumeLock(volume);
-      metadataManager.getLock().releaseUserLock(owner);
+      if (acquiredUsersLock) {
+        metadataManager.getLock().releaseMultiUserLock(owner, actualOwner);
+      }
+      metadataManager.getLock().releaseLock(VOLUME_LOCK, volume);
-    metadataManager.getLock().acquireVolumeLock(volume);
+    metadataManager.getLock().acquireLock(VOLUME_LOCK, volume);
-      metadataManager.getLock().releaseVolumeLock(volume);
+      metadataManager.getLock().releaseLock(VOLUME_LOCK, volume);
-    metadataManager.getLock().acquireVolumeLock(volume);
+    metadataManager.getLock().acquireLock(VOLUME_LOCK, volume);
-      metadataManager.getLock().releaseVolumeLock(volume);
+      metadataManager.getLock().releaseLock(VOLUME_LOCK, volume);
-    String owner;
-    metadataManager.getLock().acquireVolumeLock(volume);
+    String owner = null;
+    boolean acquiredUserLock = false;
+    metadataManager.getLock().acquireLock(VOLUME_LOCK, volume);
-    } finally {
-      metadataManager.getLock().releaseVolumeLock(volume);
-    }
-    metadataManager.getLock().acquireUserLock(owner);
-    metadataManager.getLock().acquireVolumeLock(volume);
-    try {
+      acquiredUserLock = metadataManager.getLock().acquireLock(USER_LOCK,
+          owner);
-      metadataManager.getLock().releaseVolumeLock(volume);
-      metadataManager.getLock().releaseUserLock(owner);
+      if (acquiredUserLock) {
+        metadataManager.getLock().releaseLock(USER_LOCK, owner);
+      }
+      metadataManager.getLock().releaseLock(VOLUME_LOCK, volume);
+
-    metadataManager.getLock().acquireVolumeLock(volume);
+    metadataManager.getLock().acquireLock(VOLUME_LOCK, volume);
-      metadataManager.getLock().releaseVolumeLock(volume);
+      metadataManager.getLock().releaseLock(VOLUME_LOCK, volume);
-    metadataManager.getLock().acquireUserLock(userName);
+    metadataManager.getLock().acquireLock(USER_LOCK, userName);
-      metadataManager.getLock().releaseUserLock(userName);
+      metadataManager.getLock().releaseLock(USER_LOCK, userName);
-    metadataManager.getLock().acquireVolumeLock(volume);
+    metadataManager.getLock().acquireLock(VOLUME_LOCK, volume);
-      metadataManager.getLock().releaseVolumeLock(volume);
+      metadataManager.getLock().releaseLock(VOLUME_LOCK, volume);
-    metadataManager.getLock().acquireVolumeLock(volume);
+    metadataManager.getLock().acquireLock(VOLUME_LOCK, volume);
-      metadataManager.getLock().releaseVolumeLock(volume);
+      metadataManager.getLock().releaseLock(VOLUME_LOCK, volume);
-    metadataManager.getLock().acquireVolumeLock(volume);
+    metadataManager.getLock().acquireLock(VOLUME_LOCK, volume);
-      metadataManager.getLock().releaseVolumeLock(volume);
+      metadataManager.getLock().releaseLock(VOLUME_LOCK, volume);
-    metadataManager.getLock().acquireVolumeLock(volume);
+    metadataManager.getLock().acquireLock(VOLUME_LOCK, volume);
-      metadataManager.getLock().releaseVolumeLock(volume);
+      metadataManager.getLock().releaseLock(VOLUME_LOCK, volume);

INS26 INS26 INS40 INS40 INS60 INS60 INS60 MOV21 INS60 MOV21 MOV21 MOV21 MOV21 MOV21 INS39 INS59 INS39 INS59 INS43 INS59 INS8 INS39 INS59 INS8 MOV8 INS42 INS9 UPD42 INS42 MOV21 INS25 INS42 INS9 INS42 INS42 INS33 UPD42 INS42 INS21 INS21 INS25 MOV21 UPD42 INS42 UPD42 INS42 INS21 INS33 INS42 INS9 UPD42 INS42 MOV21 MOV21 INS25 UPD42 INS42 INS21 UPD42 INS42 INS21 UPD42 INS42 INS21 UPD42 INS42 INS21 UPD42 INS42 INS21 UPD42 INS42 INS7 INS42 INS8 INS7 INS7 INS42 MOV8 INS32 INS7 INS42 INS8 INS32 INS32 INS32 INS32 INS32 INS42 MOV32 MOV21 UPD42 INS42 INS42 MOV32 INS42 INS32 UPD42 UPD42 INS42 UPD42 INS42 MOV32 INS42 INS42 INS42 INS42 MOV32 MOV21 UPD42 INS42 MOV32 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 UPD42 INS42 UPD42 INS42 INS42 MOV32 INS42 INS42 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 UPD42 INS42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL54 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8