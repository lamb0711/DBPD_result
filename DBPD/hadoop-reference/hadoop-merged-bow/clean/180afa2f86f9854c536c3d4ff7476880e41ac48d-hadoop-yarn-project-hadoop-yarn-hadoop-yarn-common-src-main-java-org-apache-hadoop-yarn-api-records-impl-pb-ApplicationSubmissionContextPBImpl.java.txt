YARN-2493. Added user-APIs for using node-labels. Contributed by Wangda Tan.

-import com.google.common.base.CharMatcher;
+import java.util.HashSet;
+import java.util.Set;
+import org.apache.hadoop.yarn.api.records.ResourceRequest;
+import org.apache.hadoop.yarn.proto.YarnProtos.ResourceRequestProto;
+import com.google.common.base.CharMatcher;
-import java.util.HashSet;
-import java.util.Set;
-
+  private ResourceRequest amResourceRequest = null;
+    if (this.amResourceRequest != null) {
+      builder.setAmContainerResourceRequest(
+          convertToProtoFormat(this.amResourceRequest));
+    }
-    
-  
+
-
+  
+  
+  private ResourceRequestPBImpl convertFromProtoFormat(ResourceRequestProto p) {
+    return new ResourceRequestPBImpl(p);
+  }
+
+  private ResourceRequestProto convertToProtoFormat(ResourceRequest t) {
+    return ((ResourceRequestPBImpl)t).getProto();
+  }
-  private ContainerLaunchContextProto convertToProtoFormat(ContainerLaunchContext t) {
+  private ContainerLaunchContextProto convertToProtoFormat(
+      ContainerLaunchContext t) {
+  public String getNodeLabelExpression() {
+    ApplicationSubmissionContextProtoOrBuilder p = viaProto ? proto : builder;
+    if (!p.hasNodeLabelExpression()) {
+      return null;
+    }
+    return p.getNodeLabelExpression();
+  }
+
+  @Override
+  public void setNodeLabelExpression(String labelExpression) {
+    maybeInitBuilder();
+    if (labelExpression == null) {
+      builder.clearNodeLabelExpression();
+      return;
+    }
+    builder.setNodeLabelExpression(labelExpression);
+  }
+  
+  @Override
+  public ResourceRequest getAMContainerResourceRequest() {
+    ApplicationSubmissionContextProtoOrBuilder p = viaProto ? proto : builder;
+    if (this.amResourceRequest != null) {
+      return amResourceRequest;
+    } // Else via proto
+    if (!p.hasAmContainerResourceRequest()) {
+      return null;
+    }
+    amResourceRequest = convertFromProtoFormat(p.getAmContainerResourceRequest());
+    return amResourceRequest;
+  }
+
+  @Override
+  public void setAMContainerResourceRequest(ResourceRequest request) {
+    maybeInitBuilder();
+    if (request == null) {
+      builder.clearAmContainerResourceRequest();
+    }
+    this.amResourceRequest = request;
+  }
+
+  @Override

MOV26 MOV26 MOV26 INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS43 INS59 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS33 INS25 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS41 INS42 INS42 INS60 INS25 INS41 INS42 INS43 INS42 INS21 INS25 INS21 INS42 INS42 INS60 INS25 INS25 INS21 INS41 INS42 INS43 INS42 INS21 INS25 INS21 INS27 INS8 INS42 INS14 INS42 INS32 INS43 INS59 INS38 INS8 INS32 INS42 INS32 INS27 INS8 INS32 INS43 INS59 INS27 INS8 INS38 INS8 INS7 INS42 INS42 INS32 INS27 INS8 INS7 INS22 INS33 INS21 INS43 INS42 INS36 INS42 INS42 INS42 INS16 INS32 INS41 INS42 INS42 INS42 INS42 INS33 INS21 INS41 INS42 INS42 INS42 INS42 INS42 INS16 INS22 INS33 INS41 INS32 INS41 INS42 INS32 INS42 INS42 INS33 INS21 INS22 INS42 INS52 INS42 INS32 INS42 INS11 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS33 INS42 INS32 INS32 INS52 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS22 INS42 INS52 INS42