Merge r1407704 through r1408926 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1408938 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashSet;
+import java.util.Set;
+  //should be set to one which comes first
+  //saying COMMIT_PENDING
+  private TaskAttemptId commitAttempt;
+
+  private TaskAttemptId successfulAttempt;
+
+  private final Set<TaskAttemptId> failedAttempts;
+  // Track the finished attempts - successful, failed and killed
+  private final Set<TaskAttemptId> finishedAttempts;
-  private int numberUncompletedAttempts = 0;
+  private final Set<TaskAttemptId> inProgressAttempts;
+    .addTransition(TaskStateInternal.KILL_WAIT,
+        EnumSet.of(TaskStateInternal.KILL_WAIT, TaskStateInternal.KILLED),
+        TaskEventType.T_ATTEMPT_SUCCEEDED,
+        new KillWaitAttemptSucceededTransition())
+    .addTransition(TaskStateInternal.KILL_WAIT,
+        EnumSet.of(TaskStateInternal.KILL_WAIT, TaskStateInternal.KILLED),
+        TaskEventType.T_ATTEMPT_FAILED,
+        new KillWaitAttemptFailedTransition())
-            TaskEventType.T_ATTEMPT_FAILED,
-            TaskEventType.T_ATTEMPT_SUCCEEDED,
+    .addTransition(TaskStateInternal.SUCCEEDED, TaskStateInternal.SUCCEEDED,
+        TaskEventType.T_ATTEMPT_SUCCEEDED,
+        new AttemptSucceededAtSucceededTransition())
-            TaskEventType.T_ATTEMPT_SUCCEEDED,
-  //should be set to one which comes first
-  //saying COMMIT_PENDING
-  private TaskAttemptId commitAttempt;
-
-  private TaskAttemptId successfulAttempt;
-
-  private int failedAttempts;
-  private int finishedAttempts;//finish are total of success, failed and killed
-
+    this.finishedAttempts = new HashSet<TaskAttemptId>(2);
+    this.failedAttempts = new HashSet<TaskAttemptId>(2);
+    this.inProgressAttempts = new HashSet<TaskAttemptId>(2);
-    ++numberUncompletedAttempts;
+    inProgressAttempts.add(attempt.getID());
-    if (failedAttempts > 0) {
+    if (failedAttempts.size() > 0) {
+      TaskTAttemptEvent taskTAttemptEvent = (TaskTAttemptEvent) event;
+      TaskAttemptId taskAttemptId = taskTAttemptEvent.getTaskAttemptID();
-          ((TaskTAttemptEvent) event).getTaskAttemptID(), 
+          taskAttemptId, 
-      task.finishedAttempts++;
-      --task.numberUncompletedAttempts;
-      task.successfulAttempt = ((TaskTAttemptEvent) event).getTaskAttemptID();
+      task.finishedAttempts.add(taskAttemptId);
+      task.inProgressAttempts.remove(taskAttemptId);
+      task.successfulAttempt = taskAttemptId;
+      TaskAttemptId taskAttemptId =
+          ((TaskTAttemptEvent) event).getTaskAttemptID();
-          ((TaskTAttemptEvent) event).getTaskAttemptID(), 
+          taskAttemptId, 
-      task.finishedAttempts++;
-      --task.numberUncompletedAttempts;
+      task.finishedAttempts.add(taskAttemptId);
+      task.inProgressAttempts.remove(taskAttemptId);
+    protected final TaskAttemptCompletionEventStatus taCompletionEventStatus;
+
+    public KillWaitAttemptKilledTransition() {
+      this(TaskAttemptCompletionEventStatus.KILLED);
+    }
+
+    public KillWaitAttemptKilledTransition(
+        TaskAttemptCompletionEventStatus taCompletionEventStatus) {
+      this.taCompletionEventStatus = taCompletionEventStatus;
+    }
-      task.handleTaskAttemptCompletion(
-          ((TaskTAttemptEvent) event).getTaskAttemptID(), 
-          TaskAttemptCompletionEventStatus.KILLED);
-      task.finishedAttempts++;
+      TaskAttemptId taskAttemptId =
+          ((TaskTAttemptEvent) event).getTaskAttemptID();
+      task.handleTaskAttemptCompletion(taskAttemptId, taCompletionEventStatus);
+      task.finishedAttempts.add(taskAttemptId);
-      if (task.finishedAttempts == task.attempts.size()) {
+      if (task.finishedAttempts.size() == task.attempts.size()) {
+  private static class KillWaitAttemptSucceededTransition extends
+      KillWaitAttemptKilledTransition {
+    public KillWaitAttemptSucceededTransition() {
+      super(TaskAttemptCompletionEventStatus.SUCCEEDED);
+    }
+  }
+
+  private static class KillWaitAttemptFailedTransition extends
+      KillWaitAttemptKilledTransition {
+    public KillWaitAttemptFailedTransition() {
+      super(TaskAttemptCompletionEventStatus.FAILED);
+    }
+  }
+
-      task.failedAttempts++;
-      if (castEvent.getTaskAttemptID().equals(task.commitAttempt)) {
+      TaskAttemptId taskAttemptId = castEvent.getTaskAttemptID();
+      task.failedAttempts.add(taskAttemptId); 
+      if (taskAttemptId.equals(task.commitAttempt)) {
-      TaskAttempt attempt = task.attempts.get(castEvent.getTaskAttemptID());
+      TaskAttempt attempt = task.attempts.get(taskAttemptId);
-      task.finishedAttempts++;
-      if (task.failedAttempts < task.maxAttempts) {
+      task.finishedAttempts.add(taskAttemptId);
+      if (task.failedAttempts.size() < task.maxAttempts) {
-            ((TaskTAttemptEvent) event).getTaskAttemptID(), 
+            taskAttemptId, 
-        if (--task.numberUncompletedAttempts == 0
+        task.inProgressAttempts.remove(taskAttemptId);
+        if (task.inProgressAttempts.size() == 0
-            ((TaskTAttemptEvent) event).getTaskAttemptID(), 
+            taskAttemptId, 
-        TaskTAttemptEvent ev = (TaskTAttemptEvent) event;
-        TaskAttemptId taId = ev.getTaskAttemptID();
-            TaskStateInternal.FAILED, taId);
+            TaskStateInternal.FAILED, taskAttemptId);
-      if (event instanceof TaskTAttemptEvent) {
-        TaskTAttemptEvent castEvent = (TaskTAttemptEvent) event;
-        if (task.getInternalState() == TaskStateInternal.SUCCEEDED &&
-            !castEvent.getTaskAttemptID().equals(task.successfulAttempt)) {
-          // don't allow a different task attempt to override a previous
-          // succeeded state
-          return TaskStateInternal.SUCCEEDED;
-        }
+      TaskTAttemptEvent castEvent = (TaskTAttemptEvent) event;
+      if (task.getInternalState() == TaskStateInternal.SUCCEEDED &&
+          !castEvent.getTaskAttemptID().equals(task.successfulAttempt)) {
+        // don't allow a different task attempt to override a previous
+        // succeeded state
+        task.finishedAttempts.add(castEvent.getTaskAttemptID());
+        task.inProgressAttempts.remove(castEvent.getTaskAttemptID());
+        return TaskStateInternal.SUCCEEDED;
-      ++task.numberUncompletedAttempts;
+      task.inProgressAttempts.add(castEvent.getTaskAttemptID());
+          task.finishedAttempts.add(castEvent.getTaskAttemptID());
+          task.inProgressAttempts.remove(castEvent.getTaskAttemptID());
+  private static class AttemptSucceededAtSucceededTransition
+    implements SingleArcTransition<TaskImpl, TaskEvent> {
+    @Override
+    public void transition(TaskImpl task, TaskEvent event) {
+      TaskTAttemptEvent castEvent = (TaskTAttemptEvent) event;
+      task.finishedAttempts.add(castEvent.getTaskAttemptID());
+      task.inProgressAttempts.remove(castEvent.getTaskAttemptID());
+    }
+  }
+
-      task.numberUncompletedAttempts = 0;
+      task.inProgressAttempts.clear();

INS26 INS26 MOV23 MOV23 MOV23 MOV23 INS40 INS40 INS55 INS55 INS55 INS83 INS74 MOV59 INS83 INS74 MOV59 INS83 INS74 INS59 INS23 INS31 INS31 INS83 INS83 INS42 INS43 INS31 INS83 INS83 INS42 INS43 INS31 INS83 INS83 INS42 INS74 INS31 INS43 INS43 INS43 INS43 INS43 INS43 INS42 INS21 INS21 INS21 INS83 INS83 INS43 INS59 INS83 INS42 INS8 INS83 INS42 INS44 INS8 INS42 INS83 INS42 INS8 INS42 INS83 INS42 INS8 MOV21 INS43 INS43 INS43 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS7 INS32 INS60 INS60 INS21 INS60 INS42 INS42 INS17 INS43 INS42 INS21 INS60 INS21 INS46 INS46 INS60 MOV60 MOV25 INS21 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS60 INS21 INS21 INS22 INS14 INS22 INS14 INS22 INS14 INS42 INS42 INS32 INS32 MOV43 INS59 INS43 INS59 INS32 INS32 INS32 INS43 INS59 INS32 INS32 INS40 INS42 INS7 INS43 INS59 INS32 INS32 INS40 INS40 MOV43 INS59 INS32 INS32 INS32 INS42 INS42 INS43 INS59 INS32 INS32 INS32 INS32 INS42 INS52 INS42 INS74 INS34 INS52 INS42 INS74 INS34 INS52 INS42 INS74 INS34 INS42 INS42 INS42 INS42 INS42 MOV11 INS42 INS42 INS32 INS42 INS42 INS42 MOV40 INS40 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 MOV32 UPD42 MOV42 INS40 INS42 INS42 INS40 INS42 INS42 INS22 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS32 INS42 MOV32 INS40 INS42 INS42 INS42 INS32 INS40 INS42 INS42 INS32 INS21 INS21 INS21 MOV41 INS40 INS42 INS32 INS42 INS42 INS11 INS40 INS42 INS32 INS40 INS42 INS32 INS40 INS42 MOV32 MOV42 INS40 INS40 INS32 INS43 INS43 INS43 INS43 INS43 INS43 INS42 MOV42 INS52 INS42 MOV36 MOV42 INS40 INS42 INS40 INS42 INS42 INS40 INS42 INS32 MOV32 INS32 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 MOV40 INS14 INS42 INS42 INS40 INS40 INS40 INS40 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS40 INS42 INS42 UPD42 MOV42 UPD40 UPD42 INS40 INS42 INS32 INS21 INS21 MOV41 INS42 INS32 INS42 INS40 INS43 MOV43 MOV42 INS32 INS42 INS42 INS32 INS32 INS32 INS42 MOV40 MOV32 INS40 MOV14 INS42 INS40 INS42 INS40 INS42 INS32 INS40 INS42 INS32 MOV32 MOV42 INS40 INS40 INS32 UPD42 INS42 INS42 INS42 INS42 INS40 INS32 INS14 INS42 INS42 INS40 INS40 INS40 INS40 INS32 MOV40 INS14 INS42 INS42 INS40 UPD40 MOV40 INS43 MOV42 MOV42 UPD40 MOV40 UPD40 MOV40 INS43 INS42 INS42 DEL39 DEL42 DEL34 DEL59 DEL39 DEL39 DEL40 DEL40 DEL40 DEL40 DEL32 DEL42 DEL42 DEL40 DEL40 DEL40 DEL40 DEL32 DEL42 DEL38 DEL42 DEL42 DEL42 DEL11 DEL36 DEL32 DEL32 DEL21 DEL40 DEL37 DEL40 DEL38 DEL42 DEL43 DEL42 DEL11 DEL36 DEL32 DEL40 DEL37 DEL40 DEL38 DEL42 DEL42 DEL32 DEL40 DEL32 DEL21 DEL40 DEL37 DEL40 DEL40 DEL37 DEL40 DEL37 DEL40 DEL40 DEL38 DEL42 DEL43 DEL42 DEL11 DEL36 DEL32 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL43 DEL62 DEL8 DEL25 DEL40 DEL38 DEL21 DEL40 DEL34 DEL7