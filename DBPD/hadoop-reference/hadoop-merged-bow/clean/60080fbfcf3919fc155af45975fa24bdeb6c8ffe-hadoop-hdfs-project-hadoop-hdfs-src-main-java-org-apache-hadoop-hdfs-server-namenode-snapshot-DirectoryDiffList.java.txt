HDFS-13171. Handle Deletion of nodes in SnasphotSkipList.  Contributed by Shashikant Banerjee

+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+  public static final Logger LOG =
+      LoggerFactory.getLogger(DirectoryDiffList.class);
-      return "->" + skipTo;
+      return "->" + skipTo + (diff == null? " (diff==null)": "");
+    void trim() {
+      for (int level = level();
+           level > 0 && getSkipNode(level) == null; level--) {
+        skipDiffList.remove(level);
+      }
+    }
+
+  private SkipListNode[] findPreviousNodes(SkipListNode node, int nodeLevel) {
+    final SkipListNode[] nodePath = new SkipListNode[nodeLevel + 1];
+    SkipListNode cur = head;
+    final int headLevel = head.level();
+    for (int level = headLevel < nodeLevel ? headLevel : nodeLevel;
+         level >= 0; level--) {
+      while (cur.getSkipNode(level) != node) {
+        cur = cur.getSkipNode(level);
+      }
+      nodePath[level] = cur;
+    }
+    for (int level = headLevel + 1; level <= nodeLevel; level++) {
+      nodePath[level] = head;
+    }
+    return nodePath;
+  }
+
-    final SkipListNode[] nodePath = new SkipListNode[nodeLevel + 1];
-    SkipListNode cur = head;
-    for (int level = headLevel < nodeLevel ? headLevel : nodeLevel;
-         level >= 0; level--) {
-      while (cur.getSkipNode(level) != null) {
-        cur = cur.getSkipNode(level);
-      }
-      nodePath[level] = cur;
-    }
+    final SkipListNode[] nodePath = findPreviousNodes(null, nodeLevel);
+      current.setSkipTo(null, level);
-   * @throws UnsupportedOperationException {@inheritDoc}
+   * @return the removed DirectoryDiff
-    throw new UnsupportedOperationException();
+    SkipListNode node = getNode(index);
+    int headLevel = head.level();
+    int nodeLevel = node.level();
+    final SkipListNode[] nodePath = findPreviousNodes(node, nodeLevel);
+    for (int level = 0; level <= nodeLevel; level++) {
+      if (nodePath[level] != head && level > 0) {
+        // if the last snapshot is deleted, for all the skip level nodes
+        // pointing to the last one, the combined children diff at each level
+        // > 0 should be made null and skip pointers will be updated to null.
+        // if the snapshot being deleted is not the last one, we have to merge
+        // the diff of deleted node at each level to the previous skip level
+        // node at that level and the skip pointers will be updated to point to
+        // the skip nodes of the deleted node.
+        if (index == size() - 1) {
+          nodePath[level].setSkipDiff(null, level);
+        } else {
+          /* Ideally at level 0, the deleted diff will be combined with
+           * the previous diff , and deleted inodes will be cleaned up
+           * by passing a deleted processor here while combining the diffs.
+           * Level 0 merge with previous diff will be handled inside the
+           * {@link AbstractINodeDiffList#deleteSnapshotDiff} function.
+           */
+          if (node.getChildrenDiff(level) != null) {
+            nodePath[level].getChildrenDiff(level)
+                .combinePosterior(node.getChildrenDiff(level), null);
+          }
+        }
+      }
+      nodePath[level].setSkipTo(node.getSkipNode(level), level);
+    }
+    if (nodeLevel == headLevel) {
+      head.trim();
+    }
+    return skipNodeList.remove(index).getDiff();
-    b.append("\nhead: ").append(head).append(head.skipDiffList);
+    b.append(" head: ").append(head).append(head.skipDiffList);

INS26 INS26 INS40 INS40 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS31 INS83 INS5 INS42 INS44 INS44 INS8 INS42 INS42 INS32 INS39 INS42 INS8 INS43 INS85 INS43 INS42 INS39 INS42 MOV60 MOV60 INS60 MOV24 INS24 INS41 INS60 UPD65 INS60 INS60 INS60 INS60 INS24 INS25 INS41 INS42 INS42 INS57 INS24 INS42 INS42 INS83 INS39 INS59 INS58 INS27 INS37 INS8 INS42 INS83 INS5 INS59 UPD66 INS43 INS59 INS39 INS59 INS39 INS59 INS83 INS5 INS59 INS58 INS27 INS37 INS8 INS27 INS8 INS32 INS43 INS58 INS27 INS37 INS8 INS42 INS32 INS39 INS59 INS42 INS42 INS42 INS21 INS43 INS85 INS42 INS32 INS21 UPD42 MOV42 INS42 INS32 INS42 INS32 INS42 INS32 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS42 INS42 INS25 INS21 INS42 INS42 INS21 INS32 INS42 INS42 INS36 INS39 INS59 INS27 INS27 INS42 INS21 INS42 INS42 INS42 INS27 INS7 INS42 INS42 INS33 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS27 INS8 INS32 INS32 INS42 INS42 INS42 INS16 INS42 INS32 INS42 INS34 INS32 INS33 INS32 INS42 INS42 INS34 INS2 INS42 INS42 INS42 INS33 INS42 INS27 INS27 INS25 INS2 INS42 INS32 INS42 INS42 INS42 UPD45 INS27 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS2 INS42 INS42 INS34 INS27 INS8 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS27 INS21 INS25 INS32 INS34 INS32 INS27 INS8 INS42 INS2 INS42 INS33 INS42 INS32 INS33 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS32 INS33 INS2 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL33 DEL42 DEL65 DEL43 DEL14 DEL53