HADOOP-16885. Encryption zone file copy failure leaks a temp file


Contributed by Xiaoyu Yao.

Contains HDFS-14892. Close the output stream if createWrappedOutputStream() fails

Copying file through the FsShell command into an HDFS encryption zone where
the caller lacks permissions is leaks a temp ._COPYING file
and potentially a wrapped stream unclosed.

This is a convergence of a fix for S3 meeting an issue in HDFS.

S3: a HEAD against a file can cache a 404, 
 -you must not do any existence checks, including deleteOnExit(),
  until the file is written. 

Hence: HADOOP-16490, only register files for deletion the create worked
and the upload is not direct. 

HDFS-14892. HDFS doesn't close wrapped streams when IOEs are raised on
create() failures. Which means that an entry is retained on the NN.
-you need to register a file with deleteOnExit() even if the file wasn't
created.

This patch:

* Moves the deleteOnExit to ensure the created file get deleted cleanly.
* Fixes HDFS to close the wrapped stream on failures.



-        targetFs.deleteOnExit(tempTarget.path);
-        out = create(target, lazyPersist, direct);
+        out = create(target, lazyPersist);
-      } catch (IOException e) {
-        // failure: clean up if we got as far as creating the file
-        if (!direct && out != null) {
-          try {
-            fs.delete(target.path, false);
-          } catch (IOException ignored) {
-          }
-        }
-        throw e;
+        if (!direct) {
+          deleteOnExit(target.path);
+        }
-    FSDataOutputStream create(PathData item, boolean lazyPersist,
-        boolean direct)
+    FSDataOutputStream create(PathData item, boolean lazyPersist)

INS25 MOV38 INS8 INS21 INS32 INS42 INS40 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL27 DEL42 DEL42 DEL40 DEL9 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL8 DEL25 DEL42 DEL53 DEL8 DEL12 DEL39 DEL42 DEL44