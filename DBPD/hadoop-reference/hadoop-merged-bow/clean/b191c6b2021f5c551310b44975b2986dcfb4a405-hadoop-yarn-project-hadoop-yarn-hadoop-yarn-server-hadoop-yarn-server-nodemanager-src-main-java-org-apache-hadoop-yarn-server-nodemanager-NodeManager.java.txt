YARN-2928: YARN Timeline Service v.2: alpha 1 (sjlee)

For a list of commits and contributors, see the merge branch history.

+import org.apache.hadoop.yarn.server.nodemanager.collectormanager.NMCollectorService;
+import org.apache.hadoop.yarn.server.nodemanager.timelineservice.NMTimelinePublisher;
+  // the NM collector service is set only if the timeline service v.2 is enabled
+  private NMCollectorService nmCollectorService;
+  protected NMCollectorService createNMCollectorService(Context ctxt) {
+    return new NMCollectorService(ctxt);
+  }
+
-      NMStateStoreService stateStore, boolean isDistSchedulerEnabled) {
+      NMStateStoreService stateStore, boolean isDistSchedulerEnabled,
+      Configuration conf) {
-        dirsHandler, aclsManager, stateStore, isDistSchedulerEnabled);
+        dirsHandler, aclsManager, stateStore, isDistSchedulerEnabled, conf);
-        nmTokenSecretManager, nmStore, isDistSchedulingEnabled);
+        nmTokenSecretManager, nmStore, isDistSchedulingEnabled, conf);
+    if (YarnConfiguration.timelineServiceV2Enabled(conf)) {
+      this.nmCollectorService = createNMCollectorService(context);
+      addService(nmCollectorService);
+    }
+
+
+    private Configuration conf = null;
+
+    private Map<ApplicationId, String> registeredCollectors;
+
+    private NMTimelinePublisher nmTimelinePublisher;
+
-        NMStateStoreService stateStore, boolean isDistSchedulingEnabled) {
+        NMStateStoreService stateStore, boolean isDistSchedulingEnabled,
+        Configuration conf) {
+      if (YarnConfiguration.timelineServiceV2Enabled(conf)) {
+        this.registeredCollectors = new ConcurrentHashMap<>();
+      }
+      this.conf = conf;
+    public Configuration getConf() {
+      return this.conf;
+    }
+
+    @Override
+
+    @Override
+    public Map<ApplicationId, String> getRegisteredCollectors() {
+      return this.registeredCollectors;
+    }
+
+    public void addRegisteredCollectors(
+        Map<ApplicationId, String> newRegisteredCollectors) {
+      if (registeredCollectors != null) {
+        this.registeredCollectors.putAll(newRegisteredCollectors);
+      } else {
+        LOG.warn("collectors are added when the registered collectors are " +
+            "initialized");
+      }
+    }
+
+    @Override
+    public void setNMTimelinePublisher(NMTimelinePublisher nmMetricsPublisher) {
+      this.nmTimelinePublisher = nmMetricsPublisher;
+    }
+
+    @Override
+    public NMTimelinePublisher getNMTimelinePublisher() {
+      return nmTimelinePublisher;
+    }
+  /**
+   * Returns the NM collector service. It should be used only for testing
+   * purposes.
+   *
+   * @return the NM collector service, or null if the timeline service v.2 is
+   * not enabled
+   */
+  @VisibleForTesting
+  NMCollectorService getNMCollectorService() {
+    return this.nmCollectorService;
+  }
+
+    @SuppressWarnings("resource")

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS83 INS43 INS59 INS83 INS43 INS42 INS44 INS8 INS44 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS29 INS78 INS43 INS42 INS8 INS42 INS42 INS42 INS43 INS42 INS41 INS43 INS42 INS25 INS83 INS43 INS59 INS83 INS74 INS59 INS83 INS43 INS59 INS44 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS74 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS8 INS65 INS65 INS42 INS42 INS41 INS42 INS14 INS42 INS32 INS8 INS42 INS42 INS33 INS43 INS43 INS43 INS42 INS42 INS42 INS43 INS42 INS25 INS21 INS42 INS42 INS41 INS42 INS43 INS43 INS43 INS41 INS74 INS42 INS25 INS42 INS43 INS42 INS21 INS42 INS42 INS41 INS66 INS66 INS66 INS66 INS22 INS79 INS43 INS42 INS42 INS42 INS42 INS42 INS21 INS21 INS42 INS42 INS42 INS42 INS32 INS8 INS7 INS22 INS42 INS42 INS42 INS22 INS43 INS43 INS43 INS27 INS8 INS8 INS42 INS7 INS42 INS52 INS42 INS42 INS45 INS42 INS42 INS7 INS32 INS42 INS42 INS42 INS21 INS22 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS33 INS21 INS21 INS22 INS42 INS22 INS32 INS42 INS42 INS7 INS52 INS42 INS32 INS32 INS52 INS42 INS52 INS42 INS42 INS42 INS22 INS14 INS22 INS42 INS42 INS42 INS42 INS27 INS52 INS42 INS74 INS52 INS42 INS45 INS45 INS43 INS42