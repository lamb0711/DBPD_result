YARN-4675. Reorganize TimelineClient and TimelineClientImpl into separate classes for ATSv1.x and ATSv2. Contributed by Naganarasimha G R.

+import org.apache.hadoop.yarn.client.api.TimelineV2Client;
-  private boolean timelineServiceV2 = false;
+  private boolean timelineServiceV2Enabled = false;
+
+  private boolean timelineServiceV1Enabled = false;
+
+  // Timeline v2 Client
+  private TimelineV2Client timelineV2Client;
+
-      timelineServiceV2 = YarnConfiguration.timelineServiceV2Enabled(conf);
+      timelineServiceV2Enabled =
+          ((int) YarnConfiguration.getTimelineServiceVersion(conf) == 2);
+      timelineServiceV1Enabled = !timelineServiceV2Enabled;
+      timelineV2Client = null;
-    if (timelineServiceV2) {
+    if (timelineServiceV2Enabled) {
-      amRMClient.registerTimelineClient(timelineClient);
+      amRMClient.registerTimelineV2Client(timelineV2Client);
-    if(timelineClient != null) {
-      if (timelineServiceV2) {
-        publishApplicationAttemptEventOnTimelineServiceV2(
-            DSEvent.DS_APP_ATTEMPT_START);
-      } else {
-        publishApplicationAttemptEvent(timelineClient, appAttemptID.toString(),
-            DSEvent.DS_APP_ATTEMPT_START, domainId, appSubmitterUgi);
-      }
+
+    if (timelineServiceV2Enabled) {
+      publishApplicationAttemptEventOnTimelineServiceV2(
+          DSEvent.DS_APP_ATTEMPT_START);
+    } else if (timelineServiceV1Enabled) {
+      publishApplicationAttemptEvent(timelineClient, appAttemptID.toString(),
+          DSEvent.DS_APP_ATTEMPT_START, domainId, appSubmitterUgi);
-            if (timelineServiceV2) {
-              timelineClient = TimelineClient.createTimelineClient(
+            if (timelineServiceV2Enabled) {
+              timelineV2Client = TimelineV2Client.createTimelineClient(
+              timelineV2Client.init(conf);
+              timelineV2Client.start();
+              timelineClient.init(conf);
+              timelineClient.start();
-            timelineClient.init(conf);
-            timelineClient.start();
+            timelineV2Client = null;
-    if (timelineClient != null) {
-      if (timelineServiceV2) {
-        publishApplicationAttemptEventOnTimelineServiceV2(
-            DSEvent.DS_APP_ATTEMPT_END);
-      } else {
-        publishApplicationAttemptEvent(timelineClient, appAttemptID.toString(),
-            DSEvent.DS_APP_ATTEMPT_END, domainId, appSubmitterUgi);
-      }
+    if (timelineServiceV2Enabled) {
+      publishApplicationAttemptEventOnTimelineServiceV2(
+          DSEvent.DS_APP_ATTEMPT_END);
+    } else if (timelineServiceV1Enabled) {
+      publishApplicationAttemptEvent(timelineClient, appAttemptID.toString(),
+          DSEvent.DS_APP_ATTEMPT_END, domainId, appSubmitterUgi);
-    if(timelineClient != null) {
+    if(timelineServiceV1Enabled) {
+    } else if (timelineServiceV2Enabled) {
+      timelineV2Client.stop();
-        if(timelineClient != null) {
-          if (timelineServiceV2) {
-            publishContainerEndEventOnTimelineServiceV2(containerStatus);
-          } else {
-            publishContainerEndEvent(
-                timelineClient, containerStatus, domainId, appSubmitterUgi);
-          }
+        if (timelineServiceV2Enabled) {
+          publishContainerEndEventOnTimelineServiceV2(containerStatus);
+        } else if (timelineServiceV1Enabled) {
+          publishContainerEndEvent(timelineClient, containerStatus, domainId,
+              appSubmitterUgi);
-      
+
-      if(applicationMaster.timelineClient != null) {
-        if (applicationMaster.timelineServiceV2) {
-          applicationMaster.publishContainerStartEventOnTimelineServiceV2(
-              container);
-        } else {
-          applicationMaster.publishContainerStartEvent(
-              applicationMaster.timelineClient, container,
-              applicationMaster.domainId, applicationMaster.appSubmitterUgi);
-        }
+      if (applicationMaster.timelineServiceV2Enabled) {
+        applicationMaster
+            .publishContainerStartEventOnTimelineServiceV2(container);
+      } else if (applicationMaster.timelineServiceV1Enabled) {
+        applicationMaster.publishContainerStartEvent(
+            applicationMaster.timelineClient, container,
+            applicationMaster.domainId, applicationMaster.appSubmitterUgi);
-          timelineClient.putEntities(entity);
+          timelineV2Client.putEntities(entity);
-          timelineClient.putEntities(entity);
+          timelineV2Client.putEntities(entity);
-          timelineClient.putEntitiesAsync(entity);
+          timelineV2Client.putEntitiesAsync(entity);

INS26 INS40 INS23 INS23 INS83 INS39 INS59 INS83 INS43 INS59 UPD42 INS42 INS9 INS42 INS42 MOV25 MOV25 MOV8 UPD42 UPD42 INS25 UPD42 INS25 INS42 INS25 MOV25 MOV60 MOV25 INS21 INS21 INS42 MOV8 INS42 MOV8 INS42 INS8 UPD40 INS25 INS7 INS7 INS21 MOV25 INS40 MOV8 UPD42 INS36 INS42 INS38 INS42 INS33 UPD42 UPD42 INS32 UPD42 INS25 INS27 INS42 INS42 INS42 INS42 MOV8 INS11 INS34 INS39 INS32 MOV42 UPD42 MOV42 MOV42 INS21 UPD42 UPD42 UPD42 UPD42 INS7 INS21 INS21 MOV21 MOV21 INS42 INS33 INS32 INS32 UPD42 INS42 INS42 INS42 INS42 INS42 UPD42 DEL32 DEL42 DEL33 DEL27 DEL8 DEL25 DEL42 DEL33 DEL27 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL33 DEL27 DEL8 DEL25 DEL40 DEL33 DEL27 DEL25 DEL8