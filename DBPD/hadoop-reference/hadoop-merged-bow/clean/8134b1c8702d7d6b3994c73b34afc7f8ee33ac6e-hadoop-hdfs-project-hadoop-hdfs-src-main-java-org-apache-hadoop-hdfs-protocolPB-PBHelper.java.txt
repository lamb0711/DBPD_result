Merge trunk into HA branch.

Several conflicts around introduction of protobuf translator for DatanodeProtocol - mostly trivial resolutions.

NB: this does not successfully pass any tests since the HAStatus field needs
to be integrated into the HeartbeatResponse Protobuf implementation.
That will be a separate commit for clearer history.



git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1214518 13f79535-47bb-0310-9956-ffa450edef68

+    case DatanodeProtocol.DNA_SHUTDOWN:
+      builder.setAction(BlockCommandProto.Action.SHUTDOWN);
+      break;
+    if (datanodeCommand == null) {
+      return builder.setCmdType(DatanodeCommandProto.Type.NullDatanodeCommand)
+          .build();
+    }
+    case DatanodeProtocol.DNA_SHUTDOWN:
-    case DatanodeProtocol.DNA_SHUTDOWN: //Not expected
+    case DatanodeProtocol.DNA_UC_ACTION_REPORT_STATUS:
+    case DatanodeProtocol.DNA_UC_ACTION_START_UPGRADE:
+      builder.setCmdType(DatanodeCommandProto.Type.UpgradeCommand)
+          .setUpgradeCmd(PBHelper.convert((UpgradeCommand) datanodeCommand));
+      break;
+    default:
+      builder.setCmdType(DatanodeCommandProto.Type.NullDatanodeCommand);
-    List<DatanodeInfosProto> targetList = blkCmd.getTargetsList();
-    DatanodeInfo[][] targets = new DatanodeInfo[blockProtoList.size()][];
-      targets[i] = PBHelper.convert(targetList.get(i));
+    List<DatanodeInfosProto> targetList = blkCmd.getTargetsList();
+    DatanodeInfo[][] targets = new DatanodeInfo[targetList.size()][];
+    for (int i = 0; i < targetList.size(); i++) {
+      targets[i] = PBHelper.convert(targetList.get(i));
+    }
+    case SHUTDOWN:
+      action = DatanodeProtocol.DNA_SHUTDOWN;
+      break;
-    UpgradeCommandProto.Builder builder = UpgradeCommandProto.newBuilder()
-        .setVersion(comm.getVersion())
-        .setUpgradeStatus(comm.getCurrentStatus());
+    UpgradeCommandProto.Builder builder = UpgradeCommandProto.newBuilder();
+    if (comm == null) {
+      return builder.setAction(UpgradeCommandProto.Action.UNKNOWN)
+          .setVersion(0).setUpgradeStatus(0).build();
+    }
+    builder.setVersion(comm.getVersion()).setUpgradeStatus(
+        comm.getCurrentStatus());
+    if ((flag & CreateFlagProto.CREATE_VALUE) == CreateFlagProto.CREATE_VALUE) {
+      result.add(CreateFlag.CREATE);
+    }
+    if ((flag & CreateFlagProto.OVERWRITE_VALUE) 
+        == CreateFlagProto.OVERWRITE_VALUE) {
+      result.add(CreateFlag.OVERWRITE);
+    }
-    FileType fType = FileType.IS_DIR;;
+    FileType fType = FileType.IS_FILE;
-    
-    if (fs.getSymlink() != null) {
+    if (fs.isSymlink())  {
-      PBHelper.convert(fs[i]);
+      result[i] = PBHelper.convert(fs[i]);
-    return new DirectoryListing(
-        PBHelper.convert((HdfsFileStatusProto[]) 
-            dl.getPartialListingList().toArray()),
+    List<HdfsFileStatusProto> partList =  dl.getPartialListingList();
+    return new DirectoryListing( 
+        partList.isEmpty() ? new HdfsFileStatus[0] 
+          : PBHelper.convert(
+              partList.toArray(new HdfsFileStatusProto[partList.size()])),

MOV60 MOV60 INS25 MOV49 INS24 INS25 INS21 INS25 INS25 INS60 INS49 INS21 INS10 INS27 INS8 INS49 INS49 INS21 INS10 INS49 INS21 INS8 MOV5 INS58 INS27 INS37 MOV8 INS49 INS21 INS10 INS27 INS8 MOV32 INS27 INS8 INS27 INS8 INS32 INS74 INS59 INS40 INS32 INS42 INS33 INS41 INS40 INS40 INS32 INS32 MOV21 INS39 INS59 INS42 INS32 INS42 INS42 INS7 MOV32 INS42 INS33 INS41 INS36 INS40 INS21 INS36 INS40 INS21 UPD40 MOV42 UPD42 MOV42 INS43 INS43 INS42 MOV32 INS16 INS42 INS42 INS40 INS32 INS32 INS42 INS32 INS42 INS42 INS40 MOV5 INS42 INS34 INS42 INS42 INS42 INS40 INS32 INS42 INS27 INS32 INS27 INS32 INS7 INS42 INS42 INS32 INS3 INS32 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS11 UPD42 INS32 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40 INS2 MOV32 INS42 INS42 INS5 INS34 MOV42 MOV42 INS32 INS42 INS42 INS40 INS43 INS42 INS32 INS42 INS34 INS42 INS42 INS43 INS85 INS42 MOV42 INS3 INS42 INS32 INS42 INS34 INS42 MOV5 INS32 INS42 INS42 INS40 INS42 INS42 DEL20 DEL32 DEL33 DEL27 DEL32 DEL11 DEL32