HDFS-11770. Ozone: KSM: Add setVolumeProperty. Contributed by Mukul Kumar Singh.

-import org.apache.hadoop.ozone.ksm.exceptions.KSMException.ResultCodes;
+  // Convert and exception to corresponding status code
+  private Status exceptionToResponseStatus(IOException ex) {
+    if (ex instanceof KSMException) {
+      KSMException ksmException = (KSMException)ex;
+      switch (ksmException.getResult()) {
+      case FAILED_VOLUME_ALREADY_EXISTS:
+        return Status.VOLUME_ALREADY_EXISTS;
+      case FAILED_TOO_MANY_USER_VOLUMES:
+        return Status.USER_TOO_MANY_VOLUMES;
+      case FAILED_VOLUME_NOT_FOUND:
+        return Status.VOLUME_NOT_FOUND;
+      case FAILED_USER_NOT_FOUND:
+        return Status.USER_NOT_FOUND;
+      case FAILED_BUCKET_ALREADY_EXISTS:
+        return Status.BUCKET_ALREADY_EXISTS;
+      default:
+        return Status.INTERNAL_ERROR;
+      }
+    } else {
+      return Status.INTERNAL_ERROR;
+    }
+  }
+
-      if (e instanceof KSMException) {
-        KSMException ksmException = (KSMException)e;
-        if (ksmException.getResult() ==
-            ResultCodes.FAILED_VOLUME_ALREADY_EXISTS) {
-          resp.setStatus(Status.VOLUME_ALREADY_EXISTS);
-        } else if (ksmException.getResult() ==
-            ResultCodes.FAILED_TOO_MANY_USER_VOLUMES) {
-          resp.setStatus(Status.USER_TOO_MANY_VOLUMES);
-        }
-      } else {
-        resp.setStatus(Status.INTERNAL_ERROR);
-      }
+      resp.setStatus(exceptionToResponseStatus(e));
-    return null;
+    SetVolumePropertyResponse.Builder resp =
+        SetVolumePropertyResponse.newBuilder();
+    resp.setStatus(Status.OK);
+    String volume = request.getVolumeName();
+
+    try {
+      if (request.hasQuotaInBytes()) {
+        long quota = request.getQuotaInBytes();
+        impl.setQuota(volume, quota);
+      } else {
+        String owner = request.getOwnerName();
+        impl.setOwner(volume, owner);
+      }
+    } catch (IOException e) {
+      resp.setStatus(exceptionToResponseStatus(e));
+    }
+    return resp.build();
-    return null;
+    InfoVolumeResponse.Builder resp = InfoVolumeResponse.newBuilder();
+    resp.setStatus(Status.OK);
+    String volume = request.getVolumeName();
+    try {
+      KsmVolumeArgs ret = impl.getVolumeInfo(volume);
+      resp.setVolumeInfo(ret.getProtobuf());
+    } catch (IOException e) {
+      resp.setStatus(exceptionToResponseStatus(e));
+    }
+    return resp.build();
-    } catch (KSMException ksmEx) {
-      if (ksmEx.getResult() ==
-          ResultCodes.FAILED_VOLUME_NOT_FOUND) {
-        resp.setStatus(Status.VOLUME_NOT_FOUND);
-      } else if (ksmEx.getResult() ==
-          ResultCodes.FAILED_BUCKET_ALREADY_EXISTS) {
-        resp.setStatus(Status.BUCKET_ALREADY_EXISTS);
-      }
-    } catch(IOException ex) {
-      resp.setStatus(Status.INTERNAL_ERROR);
+    } catch (IOException e) {
+      resp.setStatus(exceptionToResponseStatus(e));

INS31 INS83 INS43 INS42 MOV44 INS8 INS42 INS25 INS60 INS21 INS60 INS54 INS60 INS21 INS60 INS54 MOV62 INS8 INS8 INS43 INS59 INS32 INS43 INS59 INS8 INS12 INS32 INS43 INS59 INS32 INS43 INS59 INS8 INS12 INS32 UPD42 MOV60 INS50 INS41 INS8 INS40 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS32 INS25 INS44 INS8 INS42 INS42 INS40 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS32 INS60 INS21 INS44 INS8 INS42 INS42 MOV43 MOV32 INS49 INS41 INS49 INS41 INS49 INS41 INS49 INS41 INS49 INS41 INS49 INS41 INS40 INS21 INS42 INS42 INS42 INS42 INS32 INS8 INS8 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS43 INS42 INS21 UPD43 UPD42 INS21 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS40 INS32 INS42 INS42 INS60 INS21 INS60 INS21 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 UPD42 INS32 MOV43 UPD42 MOV42 MOV42 INS32 INS39 INS59 INS32 INS43 INS59 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 MOV42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL27 DEL40 DEL32 DEL21 DEL8 DEL32 DEL40 DEL27 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL25 DEL25 DEL8 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL25 DEL8 DEL33 DEL33 DEL42 DEL42 DEL32 DEL40 DEL27 DEL40 DEL32 DEL21 DEL8 DEL42 DEL42 DEL32 DEL40 DEL27 DEL40 DEL32 DEL21 DEL8 DEL25 DEL25 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL12