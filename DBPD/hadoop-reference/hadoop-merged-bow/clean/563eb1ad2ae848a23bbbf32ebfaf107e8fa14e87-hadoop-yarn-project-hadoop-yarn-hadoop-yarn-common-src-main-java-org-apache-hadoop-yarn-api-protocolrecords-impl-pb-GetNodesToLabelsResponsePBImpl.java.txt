YARN-3583. Support of NodeLabel object instead of plain String in YarnClient side. (Sunil G via wangda)

+import java.util.HashSet;
+import org.apache.hadoop.yarn.api.records.NodeLabel;
+import org.apache.hadoop.yarn.api.records.impl.pb.NodeLabelPBImpl;
-
-import com.google.common.collect.Sets;
-import org.apache.hadoop.yarn.proto.YarnProtos.NodeIdToLabelsProto;
+import org.apache.hadoop.yarn.proto.YarnProtos.NodeIdToLabelsInfoProto;
+import org.apache.hadoop.yarn.proto.YarnProtos.NodeLabelProto;
-  private Map<NodeId, Set<String>> nodeToLabels;
-  
+  private Map<NodeId, Set<NodeLabel>> nodeToLabels;
+
-    List<NodeIdToLabelsProto> list = p.getNodeToLabelsList();
-    this.nodeToLabels = new HashMap<NodeId, Set<String>>();
+    List<NodeIdToLabelsInfoProto> list = p.getNodeToLabelsList();
+    this.nodeToLabels = new HashMap<NodeId, Set<NodeLabel>>();
-    for (NodeIdToLabelsProto c : list) {
-      this.nodeToLabels.put(new NodeIdPBImpl(c.getNodeId()),
-          Sets.newHashSet(c.getNodeLabelsList()));
+    for (NodeIdToLabelsInfoProto c : list) {
+      Set<NodeLabel> labels = new HashSet<NodeLabel>();
+      for (NodeLabelProto l : c.getNodeLabelsList()) {
+        labels.add(new NodeLabelPBImpl(l));
+      }
+      this.nodeToLabels.put(new NodeIdPBImpl(c.getNodeId()), labels);
-    Iterable<NodeIdToLabelsProto> iterable =
-        new Iterable<NodeIdToLabelsProto>() {
+    Iterable<NodeIdToLabelsInfoProto> iterable =
+        new Iterable<NodeIdToLabelsInfoProto>() {
-          public Iterator<NodeIdToLabelsProto> iterator() {
-            return new Iterator<NodeIdToLabelsProto>() {
+          public Iterator<NodeIdToLabelsInfoProto> iterator() {
+            return new Iterator<NodeIdToLabelsInfoProto>() {
-              Iterator<Entry<NodeId, Set<String>>> iter = nodeToLabels
+              Iterator<Entry<NodeId, Set<NodeLabel>>> iter = nodeToLabels
-              public NodeIdToLabelsProto next() {
-                Entry<NodeId, Set<String>> now = iter.next();
-                return NodeIdToLabelsProto.newBuilder()
+              public NodeIdToLabelsInfoProto next() {
+                Entry<NodeId, Set<NodeLabel>> now = iter.next();
+                Set<NodeLabelProto> labelProtoList =
+                    new HashSet<NodeLabelProto>();
+                for (NodeLabel l : now.getValue()) {
+                  labelProtoList.add(convertToProtoFormat(l));
+                }
+                return NodeIdToLabelsInfoProto.newBuilder()
-                    .addAllNodeLabels(now.getValue()).build();
+                    .addAllNodeLabels(labelProtoList).build();
-  public Map<NodeId, Set<String>> getNodeToLabels() {
+  public Map<NodeId, Set<NodeLabel>> getNodeToLabels() {
-  public void setNodeToLabels(Map<NodeId, Set<String>> map) {
+  public void setNodeToLabels(Map<NodeId, Set<NodeLabel>> map) {
+  private NodeLabelProto convertToProtoFormat(NodeLabel t) {
+    return ((NodeLabelPBImpl)t).getProto();
+  }
+

MOV26 INS26 INS26 INS26 MOV31 UPD40 INS40 INS40 UPD40 INS40 INS31 UPD74 MOV78 INS83 UPD74 MOV74 INS42 MOV8 UPD83 INS43 INS42 INS44 INS8 UPD74 UPD74 INS74 UPD42 MOV42 INS43 INS42 INS41 UPD43 UPD74 UPD74 MOV74 UPD43 MOV43 MOV43 INS74 UPD42 MOV42 INS32 UPD42 UPD43 UPD43 INS60 INS70 UPD43 UPD42 INS43 INS43 INS36 INS42 UPD42 UPD74 UPD42 INS74 INS59 INS44 MOV32 INS8 UPD42 UPD74 MOV74 INS42 INS42 INS11 UPD74 INS43 INS43 INS42 INS14 INS43 INS42 INS21 UPD42 MOV42 UPD43 INS43 INS42 UPD43 INS42 INS42 INS74 INS42 INS32 UPD42 UPD74 INS42 UPD42 INS43 INS43 INS42 INS42 INS14 MOV43 UPD43 INS42 INS42 INS43 INS42 UPD42 INS42 UPD74 UPD43 UPD42 UPD74 UPD43 MOV43 UPD74 MOV74 UPD42 INS60 INS70 UPD74 UPD74 MOV74 INS74 INS59 INS44 MOV32 INS8 UPD43 UPD74 MOV43 INS43 INS42 INS14 INS43 INS42 INS21 UPD42 UPD43 INS42 INS42 INS74 INS42 INS32 INS42 UPD42 INS43 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS42 UPD42 DEL42 DEL32 DEL43 DEL74 DEL74 DEL42