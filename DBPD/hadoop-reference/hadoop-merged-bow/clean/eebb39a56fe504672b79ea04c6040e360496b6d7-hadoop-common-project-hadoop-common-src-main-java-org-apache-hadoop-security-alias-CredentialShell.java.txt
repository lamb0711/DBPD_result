HADOOP-13112. Change CredentialShell to use CommandShell base class (Matthew Paduano via aw)

-import java.io.PrintStream;
+
+import org.apache.commons.lang.StringUtils;
+
-import org.apache.hadoop.conf.Configured;
-import org.apache.hadoop.util.Tool;
+import org.apache.hadoop.tools.CommandShell;
- * This program is the CLI utility for the CredentialProvider facilities in 
+ * This program is the CLI utility for the CredentialProvider facilities in
-public class CredentialShell extends Configured implements Tool {
+public class CredentialShell extends CommandShell {
-  private Command command = null;
-  /** Allows stdout to be captured if necessary. */
-  @VisibleForTesting
-  public PrintStream out = System.out;
-  /** Allows stderr to be captured if necessary. */
-  @VisibleForTesting
-  public PrintStream err = System.err;
-
-  private boolean isHelp = false;
-
-  @Override
-  public int run(String[] args) throws Exception {
-    int exitCode = 0;
-    try {
-      exitCode = init(args);
-      if (exitCode != 0) {
-        return exitCode;
-      }
-      if (!isHelp) {
-        if (command.validate()) {
-          command.execute();
-        } else {
-          exitCode = 1;
-        }
-      }
-    } catch (Exception e) {
-      e.printStackTrace(err);
-      return 1;
-    }
-    return exitCode;
-  }
+  @Override
-      printCredShellUsage();
-      ToolRunner.printGenericCommandUsage(System.err);
+      ToolRunner.printGenericCommandUsage(getErr());
-          printCredShellUsage();
-        String alias = args[++i];
-        command = new CreateCommand(alias);
-        if (alias.equals("-help")) {
-          printCredShellUsage();
-          return 0;
-        }
+        setSubCommand(new CreateCommand(args[++i]));
-          printCredShellUsage();
-        String alias = args[++i];
-        command = new DeleteCommand(alias);
-        if (alias.equals("-help")) {
-          printCredShellUsage();
-          return 0;
-        }
+        setSubCommand(new DeleteCommand(args[++i]));
-        command = new ListCommand();
+        setSubCommand(new ListCommand());
-          printCredShellUsage();
-        getConf().set(CredentialProviderFactory.CREDENTIAL_PROVIDER_PATH, 
+        getConf().set(CredentialProviderFactory.CREDENTIAL_PROVIDER_PATH,
-        printCredShellUsage();
+        printShellUsage();
-        printCredShellUsage();
-        ToolRunner.printGenericCommandUsage(System.err);
+        ToolRunner.printGenericCommandUsage(getErr());
-  private void printCredShellUsage() {
-    isHelp = true;
-    out.println(USAGE_PREFIX + COMMANDS);
-    if (command != null) {
-      out.println(command.getUsage());
-    } else {
-      out.println("=========================================================" +
-          "======");
-      out.println(CreateCommand.USAGE + ":\n\n" + CreateCommand.DESC);
-      out.println("=========================================================" +
-          "======");
-      out.println(DeleteCommand.USAGE + ":\n\n" + DeleteCommand.DESC);
-      out.println("=========================================================" +
-          "======");
-      out.println(ListCommand.USAGE + ":\n\n" + ListCommand.DESC);
-    }
+  @Override
+  public String getCommandUsage() {
+    StringBuffer sbuf = new StringBuffer(USAGE_PREFIX + COMMANDS);
+    String banner = StringUtils.repeat("=", 66);
+    sbuf.append(banner + "\n");
+    sbuf.append(CreateCommand.USAGE + ":\n\n" + CreateCommand.DESC + "\n");
+    sbuf.append(banner + "\n");
+    sbuf.append(DeleteCommand.USAGE + ":\n\n" + DeleteCommand.DESC + "\n");
+    sbuf.append(banner + "\n");
+    sbuf.append(ListCommand.USAGE + ":\n\n" + ListCommand.DESC + "\n");
+    return sbuf.toString();
-  private abstract class Command {
+  private abstract class Command extends SubCommand {
-    public boolean validate() {
-      return true;
-    }
-
-        e.printStackTrace(err);
+        e.printStackTrace(getErr());
-        out.println(NO_VALID_PROVIDERS);
+        getOut().println(NO_VALID_PROVIDERS);
-      out.println("Provider " + provider.toString() + " has been updated.");
+      getOut().println("Provider " + provider.toString() + " was updated.");
-        out.println("WARNING: you are modifying a transient provider.");
+        getOut().println("WARNING: you are modifying a transient provider.");
+    protected void doHelp() {
+      getOut().println(USAGE_PREFIX + COMMANDS);
+      printShellUsage();
+    }
+
-        out.println("Listing aliases for CredentialProvider: " +
+        getOut().println("Listing aliases for CredentialProvider: " +
-          out.println(alias);
+          getOut().println(alias);
-        out.println("Cannot list aliases for CredentialProvider: " +
+        getOut().println("Cannot list aliases for CredentialProvider: " +
-      provider = getCredentialProvider();
-      if (provider == null) {
+      if (alias == null) {
+        getOut().println("There is no alias specified. Please provide the" +
+            "mandatory <alias>. See the usage description with -help.");
-      if (alias == null) {
-        out.println("There is no alias specified. Please provide the" +
-            "mandatory <alias>. See the usage description with -help.");
+      if (alias.equals("-help")) {
+        return true;
+      }
+      provider = getCredentialProvider();
+      if (provider == null) {
-            out.println("Nothing has been deleted.");
+            getOut().println("Nothing has been deleted.");
-          out.println(alias + " will not be deleted.");
-          e.printStackTrace(err);
+          getOut().println(alias + " will not be deleted.");
+          e.printStackTrace(getErr());
+      if (alias.equals("-help")) {
+        doHelp();
+        return;
+      }
-      out.println("Deleting credential: " + alias +
+      getOut().println("Deleting credential: " + alias +
-          out.println("Credential " + alias +
+          getOut().println("Credential " + alias +
-          out.println("Credential " + alias + " has NOT been deleted.");
+          getOut().println("Credential " + alias + " has NOT been deleted.");
-      boolean rc = true;
+      if (alias == null) {
+        getOut().println("There is no alias specified. Please provide the" +
+            "mandatory <alias>. See the usage description with -help.");
+        return false;
+      }
+      if (alias.equals("-help")) {
+        return true;
+      }
-          rc = false;
+          return false;
-            out.println(provider.noPasswordError());
-            rc = false;
+            getOut().println(provider.noPasswordError());
+            return false;
-            out.println(provider.noPasswordWarning());
+            getOut().println(provider.noPasswordWarning());
-        e.printStackTrace(err);
+        e.printStackTrace(getErr());
-      if (alias == null) {
-        out.println("There is no alias specified. Please provide the" +
-            "mandatory <alias>. See the usage description with -help.");
-        rc = false;
-      }
-      return rc;
+      return true;
+      if (alias.equals("-help")) {
+        doHelp();
+        return;
+      }
-        out.println(alias + " has been successfully created.");
+        getOut().println(alias + " has been successfully created.");
-        out.println("Credential " + alias + " has NOT been created. " +
+        getOut().println("Credential " + alias + " has NOT been created. " +
-        out.println("Credential " + alias + " has NOT been created. " +
+        getOut().println("Credential " + alias + " has NOT been created. " +
-  
+
-    
+
-  
+
-  
+
-  
+
-  
-  
+
+

MOV26 UPD40 UPD40 INS43 INS31 UPD42 MOV42 INS78 MOV78 INS83 MOV43 INS42 INS8 INS43 INS31 UPD66 INS42 INS60 INS60 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 INS41 INS42 INS83 INS39 INS42 INS8 MOV54 INS43 INS59 MOV43 INS59 INS32 MOV21 INS21 INS25 MOV25 INS25 MOV25 INS25 MOV12 MOV41 MOV25 UPD42 MOV42 UPD42 MOV42 INS14 INS42 INS32 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS32 MOV27 INS8 MOV8 MOV32 INS8 INS32 INS8 INS9 INS32 INS8 MOV32 INS8 INS25 INS43 INS27 UPD42 MOV42 UPD42 MOV42 INS45 INS34 INS42 UPD45 INS45 INS42 UPD45 INS45 INS42 UPD45 INS45 INS32 INS32 INS42 INS21 INS41 MOV41 INS21 INS41 INS32 INS42 UPD42 MOV42 INS45 INS41 MOV44 INS42 INS42 INS45 INS21 INS41 MOV44 MOV44 INS32 MOV25 INS21 MOV32 MOV8 MOV25 UPD42 MOV42 INS42 INS42 UPD42 MOV42 UPD45 UPD42 MOV42 INS32 INS9 MOV9 INS32 UPD42 MOV42 INS9 INS32 INS42 INS32 INS32 INS32 INS32 INS32 INS42 MOV27 INS42 INS32 INS41 INS42 INS32 MOV41 INS42 INS14 INS32 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 INS42 UPD42 MOV42 INS9 INS32 UPD42 MOV42 INS32 INS32 MOV43 MOV2 MOV41 INS42 INS14 INS32 MOV25 UPD42 MOV42 INS32 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV43 MOV2 INS42 MOV14 UPD42 MOV42 INS32 INS32 UPD42 MOV42 INS32 INS41 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS9 UPD42 MOV42 INS32 INS32 MOV41 MOV41 UPD42 MOV42 UPD42 MOV42 UPD42 INS32 INS42 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL83 DEL43 DEL42 DEL33 DEL59 DEL23 DEL66 DEL65 DEL29 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL40 DEL59 DEL23 DEL66 DEL65 DEL29 DEL42 DEL78 DEL83 DEL43 DEL40 DEL59 DEL23 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL83 DEL39 DEL42 DEL43 DEL85 DEL5 DEL42 DEL44 DEL42 DEL43 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL34 DEL27 DEL42 DEL41 DEL8 DEL25 DEL42 DEL38 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL34 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL42 DEL41 DEL8 DEL31 DEL42 DEL32 DEL21 DEL40 DEL42 DEL32 DEL21 DEL42 DEL32 DEL21 DEL42 DEL59 DEL60 DEL42 DEL42 DEL14 DEL7 DEL42 DEL7 DEL42 DEL32 DEL21 DEL34 DEL41 DEL42 DEL32 DEL21 DEL40 DEL34 DEL41 DEL42 DEL59 DEL60 DEL42 DEL42 DEL14 DEL7 DEL21 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL45 DEL45 DEL45 DEL83 DEL39 DEL42 DEL42 DEL9 DEL7 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL8 DEL25 DEL8 DEL31 DEL83 DEL39 DEL42 DEL31 DEL34 DEL42 DEL32 DEL21 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL42 DEL9 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL42