YARN-7438. Additional changes to make SchedulingPlacementSet agnostic to ResourceRequest / placement algorithm. Contributed by Wangda Tan

+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ContainerRequest;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.ResourceRequestUpdateResult;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PendingAskUpdateResult;
-      ResourceRequestUpdateResult pendingAmountChanges =
+      PendingAskUpdateResult pendingAmountChanges =
-              .updateResourceRequests(
-                  entry.getValue().values(),
+              .updatePendingAsk(entry.getValue().values(),
-            pendingAmountChanges.getLastAnyResourceRequest(),
-            pendingAmountChanges.getNewResourceRequest(), schedulerRequestKey,
+            pendingAmountChanges, schedulerRequestKey,
-  private void updatePendingResources(ResourceRequest lastRequest,
-      ResourceRequest request, SchedulerRequestKey schedulerKey,
-      QueueMetrics metrics) {
+  private void updatePendingResources(PendingAskUpdateResult updateResult,
+      SchedulerRequestKey schedulerKey, QueueMetrics metrics) {
+
+    PendingAsk lastPendingAsk = updateResult.getLastPendingAsk();
+    PendingAsk newPendingAsk = updateResult.getNewPendingAsk();
+    String lastNodePartition = updateResult.getLastNodePartition();
+    String newNodePartition = updateResult.getNewNodePartition();
+
-        (lastRequest != null) ? lastRequest.getNumContainers() : 0;
-    if (request.getNumContainers() <= 0) {
+        (lastPendingAsk != null) ? lastPendingAsk.getCount() : 0;
+    if (newPendingAsk.getCount() <= 0) {
-    Resource lastRequestCapability =
-        lastRequest != null ? lastRequest.getCapability() : Resources.none();
-    metrics.incrPendingResources(request.getNodeLabelExpression(), user,
-        request.getNumContainers(), request.getCapability());
-
-    if(lastRequest != null) {
-      metrics.decrPendingResources(lastRequest.getNodeLabelExpression(), user,
-          lastRequestContainers, lastRequestCapability);
+    if (lastPendingAsk != null) {
+      // Deduct resources from metrics / pending resources of queue/app.
+      metrics.decrPendingResources(lastNodePartition, user,
+          lastPendingAsk.getCount(), lastPendingAsk.getPerAllocationResource());
+      Resource decreasedResource = Resources.multiply(
+          lastPendingAsk.getPerAllocationResource(), lastRequestContainers);
+      queue.decPendingResource(lastNodePartition, decreasedResource);
+      appResourceUsage.decPending(lastNodePartition, decreasedResource);
-    // update queue:
-    Resource increasedResource =
-        Resources.multiply(request.getCapability(), request.getNumContainers());
-    queue.incPendingResource(request.getNodeLabelExpression(),
-        increasedResource);
-    appResourceUsage.incPending(request.getNodeLabelExpression(),
-        increasedResource);
-    if (lastRequest != null) {
-      Resource decreasedResource =
-          Resources.multiply(lastRequestCapability, lastRequestContainers);
-      queue.decPendingResource(lastRequest.getNodeLabelExpression(),
-          decreasedResource);
-      appResourceUsage.decPending(lastRequest.getNodeLabelExpression(),
-          decreasedResource);
-    }
+    // Increase resources to metrics / pending resources of queue/app.
+    metrics.incrPendingResources(newNodePartition, user,
+        newPendingAsk.getCount(), newPendingAsk.getPerAllocationResource());
+    Resource increasedResource = Resources.multiply(
+        newPendingAsk.getPerAllocationResource(), newPendingAsk.getCount());
+    queue.incPendingResource(newNodePartition, increasedResource);
+    appResourceUsage.incPending(newNodePartition, increasedResource);
-  public List<ResourceRequest> allocate(NodeType type,
+  public ContainerRequest allocate(NodeType type,

INS26 INS40 UPD40 INS8 INS43 UPD43 UPD42 INS60 MOV60 MOV60 INS60 INS60 MOV25 INS25 INS21 MOV60 MOV21 MOV21 UPD42 MOV42 UPD42 INS43 INS59 INS43 INS59 UPD43 INS43 INS59 INS39 INS59 MOV27 INS8 INS32 UPD42 MOV42 INS42 INS32 INS42 INS42 INS32 UPD42 INS42 INS32 INS42 INS42 INS32 INS42 INS16 UPD42 MOV21 MOV60 MOV21 MOV21 INS42 INS42 INS42 INS42 INS32 INS32 UPD42 UPD42 UPD42 MOV42 UPD42 UPD42 UPD42 MOV42 UPD42 UPD43 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS36 INS32 INS34 UPD42 UPD42 INS42 INS42 INS42 INS42 INS32 INS32 UPD42 INS27 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 INS32 UPD42 UPD42 UPD42 MOV42 UPD42 UPD42 UPD42 MOV42 UPD42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 UPD42 INS42 INS33 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 MOV42 UPD42 UPD42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL43 DEL42 DEL44 DEL39 DEL42 DEL42 DEL33 DEL27 DEL36 DEL32 DEL34 DEL16 DEL59 DEL42 DEL42 DEL33 DEL27 DEL32 DEL42 DEL42 DEL32 DEL16 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL8 DEL25 DEL8 DEL42 DEL43 DEL43 DEL74