YARN-5141. Get Container logs for the Running application from Yarn Logs CommandLine. Contributed by Xuan Gong.

+import org.apache.hadoop.classification.InterfaceAudience.Private;
+import org.apache.hadoop.yarn.api.records.ApplicationAttemptReport;
-  private void printContainerLogsFromRunningApplication(Configuration conf,
+  @Private
+  @VisibleForTesting
+  public void printContainerLogsFromRunningApplication(Configuration conf,
-      LogCLIHelpers logCliHelper) throws IOException {
-    // TODO: YARN-5141. To get container logs for the Running applications.
+      LogCLIHelpers logCliHelper) throws IOException, YarnException {
+    // If the application has finished, we would fetch the logs
+    // from HDFS.
+    // If the application is still running, we would get the full
+    // list of the containers first, then fetch the logs for each
+    // container from NM.
-    ContainerLogsRequest newOptions = getMatchedLogOptions(
-        options, logCliHelper);
-    if (newOptions == null) {
-      resultCode = -1;
+    if (options.isAppFinished()) {
+      ContainerLogsRequest newOptions = getMatchedLogOptions(
+          options, logCliHelper);
+      if (newOptions == null) {
+        resultCode = -1;
+      } else {
+        resultCode =
+            logCliHelper.dumpAllContainersLogs(newOptions);
+      }
-      resultCode =
-          logCliHelper.dumpAllContainersLogs(newOptions);
+      List<ContainerLogsRequest> containerLogRequests =
+          getContainersLogRequestForRunningApplication(options);
+      for (ContainerLogsRequest container : containerLogRequests) {
+        printContainerLogsFromRunningApplication(getConf(), container,
+            logCliHelper);
+      }
+
+  private List<ContainerLogsRequest>
+      getContainersLogRequestForRunningApplication(
+          ContainerLogsRequest options) throws YarnException, IOException {
+    List<ContainerLogsRequest> newOptionsList =
+        new ArrayList<ContainerLogsRequest>();
+    YarnClient yarnClient = createYarnClient();
+    try {
+      List<ApplicationAttemptReport> attempts =
+          yarnClient.getApplicationAttempts(options.getAppId());
+      for (ApplicationAttemptReport attempt : attempts) {
+        List<ContainerReport> containers = yarnClient.getContainers(
+            attempt.getApplicationAttemptId());
+        for (ContainerReport container : containers) {
+          ContainerLogsRequest newOptions = new ContainerLogsRequest(options);
+          newOptions.setContainerId(container.getContainerId().toString());
+          newOptions.setNodeId(container.getAssignedNode().toString());
+          newOptions.setNodeHttpAddress(container.getNodeHttpAddress()
+              .replaceFirst(WebAppUtils.getHttpSchemePrefix(getConf()), ""));
+          // if we do not specify the value for CONTAINER_LOG_FILES option,
+          // we will only output syslog
+          List<String> logFiles = newOptions.getLogTypes();
+          if (logFiles == null || logFiles.isEmpty()) {
+            logFiles = Arrays.asList("syslog");
+            newOptions.setLogTypes(logFiles);
+          }
+          newOptionsList.add(newOptions);
+        }
+      }
+      return newOptionsList;
+    } finally {
+      yarnClient.close();
+    }
+  }

INS26 INS26 INS40 INS40 INS31 INS78 INS78 UPD83 INS43 INS83 INS74 INS42 INS44 INS43 INS43 INS8 INS42 INS42 INS42 INS25 INS43 INS43 INS43 INS42 INS42 INS42 INS60 INS60 INS54 INS32 INS8 INS8 INS42 INS42 INS42 INS74 INS59 INS43 INS59 INS8 INS8 INS42 INS42 MOV60 MOV25 INS60 INS70 INS43 INS43 INS42 INS14 INS42 INS42 INS32 INS60 INS70 INS41 INS21 INS74 INS59 INS44 INS42 INS8 INS42 INS42 INS74 INS42 INS74 INS59 INS44 INS42 INS8 INS42 INS32 INS43 INS43 INS42 INS32 INS43 INS42 INS21 INS43 INS43 INS43 INS43 INS42 INS32 INS43 INS42 INS60 INS70 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS74 INS59 INS44 INS42 INS8 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS43 INS42 INS60 INS21 INS21 INS21 INS60 INS25 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS59 INS32 INS32 INS32 INS74 INS59 INS27 INS8 INS32 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS27 INS32 INS21 INS21 INS42 INS42 INS42 INS43 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS45 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS7 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS45