Merge branch 'trunk' into HDDS-48

+import java.util.HashMap;
+  private boolean allowQueuesBalanceAfterAllQueuesSatisfied;
-      boolean includeReservedResource) {
+      boolean includeReservedResource,
+      boolean allowQueuesBalanceAfterAllQueuesSatisfied) {
+    this.allowQueuesBalanceAfterAllQueuesSatisfied =
+        allowQueuesBalanceAfterAllQueuesSatisfied;
-        preemptionContext, includeReservedResource);
+        preemptionContext, includeReservedResource,
+        allowQueuesBalanceAfterAllQueuesSatisfied);
+    Map<ApplicationAttemptId, Set<RMContainer>> curCandidates = new HashMap<>();
-                      clusterResource, selectedCandidates,
+                      clusterResource, selectedCandidates, curCandidates,
-              totalPreemptionAllowed);
+              curCandidates, totalPreemptionAllowed);
-        preemptAMContainers(clusterResource, selectedCandidates, skippedAMContainerlist,
-            resToObtainByPartition, skippedAMSize, maxAMCapacityForThisQueue,
-            totalPreemptionAllowed);
+        preemptAMContainers(clusterResource, selectedCandidates, curCandidates,
+            skippedAMContainerlist, resToObtainByPartition, skippedAMSize,
+            maxAMCapacityForThisQueue, totalPreemptionAllowed);
-    return selectedCandidates;
+    return curCandidates;
+      Map<ApplicationAttemptId, Set<RMContainer>> curCandidates,
-              totalPreemptionAllowed, false);
+              curCandidates, totalPreemptionAllowed, false);
+      Map<ApplicationAttemptId, Set<RMContainer>> curCandidates,
-      CapacitySchedulerPreemptionUtils.tryPreemptContainerAndDeductResToObtain(
-          rc, preemptionContext, resToObtainByPartition, c, clusterResource,
-          selectedContainers, totalPreemptionAllowed, false);
+     CapacitySchedulerPreemptionUtils
+          .tryPreemptContainerAndDeductResToObtain(rc, preemptionContext,
+              resToObtainByPartition, c, clusterResource, selectedContainers,
+              curCandidates, totalPreemptionAllowed, false);
-      CapacitySchedulerPreemptionUtils.tryPreemptContainerAndDeductResToObtain(
-          rc, preemptionContext, resToObtainByPartition, c, clusterResource,
-          selectedContainers, totalPreemptionAllowed, false);
+      CapacitySchedulerPreemptionUtils
+          .tryPreemptContainerAndDeductResToObtain(rc, preemptionContext,
+              resToObtainByPartition, c, clusterResource, selectedContainers,
+              curCandidates, totalPreemptionAllowed, false);
+
+  public boolean getAllowQueuesBalanceAfterAllQueuesSatisfied() {
+    return allowQueuesBalanceAfterAllQueuesSatisfied;
+  }

INS26 INS40 INS23 INS31 INS83 INS39 INS59 INS44 INS44 INS44 INS83 INS39 INS42 INS8 INS42 INS39 INS42 INS21 INS60 INS74 INS42 INS74 INS42 INS41 INS7 INS74 INS59 UPD42 INS43 INS43 INS74 INS43 INS43 INS74 INS42 INS22 INS42 INS43 INS43 INS74 INS42 INS14 INS42 INS42 INS43 INS43 INS42 INS42 INS43 INS43 INS52 INS42 INS42 INS42 INS42 INS43 INS43 INS74 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42