Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1196458 13f79535-47bb-0310-9956-ffa450edef68

-import static com.google.common.base.Preconditions.*;
+import static com.google.common.base.Preconditions.checkNotNull;
+
+import java.io.IOException;
+import java.net.ConnectException;
+import java.net.URL;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Map;
+
+import javax.servlet.http.HttpServlet;
+
+import org.apache.commons.lang.StringUtils;
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.http.HttpServer;
+import org.apache.hadoop.yarn.security.AdminACLsManager;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
-import com.google.inject.Module;
-import java.net.ConnectException;
-import java.net.URL;
-import org.apache.commons.lang.StringUtils;
-
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.http.HttpServer;
-
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
+    static class ServletStruct {
+      public Class<? extends HttpServlet> clazz;
+      public String name;
+      public String spec;
+    }
+    
+    private final HashSet<ServletStruct> servlets = new HashSet<ServletStruct>();
+    private final HashMap<String, Object> attributes = new HashMap<String, Object>();
+    public Builder<T> withAttribute(String key, Object value) {
+      attributes.put(key, value);
+      return this;
+    }
+    
+    public Builder<T> withServlet(String name, String pathSpec, 
+        Class<? extends HttpServlet> servlet) {
+      ServletStruct struct = new ServletStruct();
+      struct.clazz = servlet;
+      struct.name = name;
+      struct.spec = pathSpec;
+      servlets.add(struct);
+      return this;
+    }
+    
-            webapp.getServePathSpecs());
+            new AdminACLsManager(conf).getAdminAcl(), null, webapp.getServePathSpecs());
+        for(ServletStruct struct: servlets) {
+          server.addServlet(struct.name, struct.spec, struct.clazz);
+        }
+        for(Map.Entry<String, Object> entry : attributes.entrySet()) {
+          server.setAttribute(entry.getKey(), entry.getValue());
+        }
-      } catch (Exception e) {
+      } catch (ClassNotFoundException e) {
+        throw new WebAppException("Error starting http server", e);
+      } catch (IOException e) {

MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS26 INS26 INS26 UPD40 UPD40 INS40 INS40 INS40 INS40 INS40 INS55 INS23 INS23 INS31 INS31 INS83 INS42 INS23 INS23 INS23 INS83 INS83 INS74 INS59 INS83 INS83 INS74 INS59 INS83 INS74 INS42 INS44 INS44 INS8 INS83 INS74 INS42 INS44 INS44 INS44 INS8 INS83 INS74 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS43 INS43 INS42 INS14 INS43 INS43 INS43 INS42 INS14 INS43 INS43 INS43 INS42 INS43 INS42 INS21 INS41 INS43 INS43 INS43 INS42 INS43 INS42 INS74 INS42 INS60 INS21 INS21 INS21 INS21 INS41 INS43 INS76 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS32 INS52 INS42 INS42 INS42 INS42 INS43 INS76 INS43 INS59 INS7 INS7 INS7 INS32 INS52 INS12 INS42 INS43 INS43 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS14 INS40 INS42 INS40 INS42 INS40 INS42 INS42 INS42 INS42 INS70 INS70 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS44 INS42 INS8 INS44 INS32 INS8 UPD43 INS43 INS42 INS53 INS42 INS43 INS42 INS21 INS74 INS42 INS42 INS42 INS21 UPD42 INS42 INS14 INS32 INS33 INS42 INS32 INS43 INS43 INS43 INS32 INS43 INS45 INS42 INS14 INS42 INS42 INS42 INS40 INS40 INS40 INS40 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42