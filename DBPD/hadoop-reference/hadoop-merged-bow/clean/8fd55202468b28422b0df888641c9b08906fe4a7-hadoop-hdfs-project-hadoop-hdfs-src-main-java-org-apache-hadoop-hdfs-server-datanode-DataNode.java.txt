Merge remote-tracking branch 'apache/trunk' into HDFS-7285

Conflicts:
	hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java
	hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java
	hadoop-hdfs-project/hadoop-hdfs-client/src/main/proto/hdfs.proto
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirStatAndListingOp.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/proto/DatanodeProtocol.proto
	hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestBlockTokenWithDFS.java
	hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFsck.java

Change-Id: Ic7946c4ea35bed587fe879ce58b959b25ecc0823

+import java.util.concurrent.ThreadLocalRandom;
+import org.apache.hadoop.hdfs.DFSUtilClient;
-import org.apache.hadoop.tracing.SpanReceiverHost;
+import org.apache.hadoop.tracing.TraceUtils;
+import org.apache.hadoop.tracing.TracerConfigurationManager;
+import org.apache.htrace.core.Tracer;
+  private static final String DATANODE_HTRACE_PREFIX = "datanode.htrace.";
+
-  protected final int checkDiskErrorInterval = 5*1000;
+  protected final int checkDiskErrorInterval;
-
-  private SpanReceiverHost spanReceiverHost;
-
+  final Tracer tracer;
+  private final TracerConfigurationManager tracerConfigurationManager;
+  private static Tracer createTracer(Configuration conf) {
+    return new Tracer.Builder("DataNode").
+        conf(TraceUtils.wrapHadoopConf(DATANODE_HTRACE_PREFIX , conf)).
+        build();
+  }
+
+    this.tracer = createTracer(conf);
+    this.tracerConfigurationManager =
+        new TracerConfigurationManager(DATANODE_HTRACE_PREFIX, conf);
+    this.checkDiskErrorInterval =
+        ThreadLocalRandom.current().nextInt(5000, (int) (5000 * 1.25));
+    this.tracer = createTracer(conf);
+    this.tracerConfigurationManager =
+        new TracerConfigurationManager(DATANODE_HTRACE_PREFIX, conf);
+    this.checkDiskErrorInterval =
+        ThreadLocalRandom.current().nextInt(5000, (int) (5000 * 1.25));
+
-      name = DNS.getDefaultHost(
-          config.get(DFS_DATANODE_DNS_INTERFACE_KEY,
-                     DFS_DATANODE_DNS_INTERFACE_DEFAULT),
-          config.get(DFS_DATANODE_DNS_NAMESERVER_KEY,
-                     DFS_DATANODE_DNS_NAMESERVER_DEFAULT));
+      String dnsInterface = config.get(
+          CommonConfigurationKeys.HADOOP_SECURITY_DNS_INTERFACE_KEY);
+      String nameServer = config.get(
+          CommonConfigurationKeys.HADOOP_SECURITY_DNS_NAMESERVER_KEY);
+      boolean fallbackToHosts = false;
+
+      if (dnsInterface == null) {
+        // Try the legacy configuration keys.
+        dnsInterface = config.get(DFS_DATANODE_DNS_INTERFACE_KEY);
+        nameServer = config.get(DFS_DATANODE_DNS_NAMESERVER_KEY);
+      } else {
+        // If HADOOP_SECURITY_DNS_* is set then also attempt hosts file
+        // resolution if DNS fails. We will not use hosts file resolution
+        // by default to avoid breaking existing clusters.
+        fallbackToHosts = true;
+      }
+
+      name = DNS.getDefaultHost(dnsInterface, nameServer, fallbackToHosts);
-    this.spanReceiverHost =
-      SpanReceiverHost.get(conf, DFSConfigKeys.DFS_SERVER_HTRACE_PREFIX);
-
-    if (this.spanReceiverHost != null) {
-      this.spanReceiverHost.closeReceivers();
-    }
+    tracer.close();
-            DFSUtil.getSmallBufferSize(conf)));
+            DFSUtilClient.getSmallBufferSize(conf)));
+    ipcServer.setTracer(tracer);
-        DFS_DATANODE_KERBEROS_PRINCIPAL_KEY);
+        DFS_DATANODE_KERBEROS_PRINCIPAL_KEY, getHostName(conf));
-    return spanReceiverHost.listSpanReceivers();
+    return tracerConfigurationManager.listSpanReceivers();
-    return spanReceiverHost.addSpanReceiver(info);
+    return tracerConfigurationManager.addSpanReceiver(info);
-    spanReceiverHost.removeSpanReceiver(id);
+    tracerConfigurationManager.removeSpanReceiver(id);

MOV26 INS26 INS26 INS26 INS26 MOV23 INS40 INS40 UPD40 INS40 INS40 INS23 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS43 INS59 INS83 UPD43 INS83 INS83 INS43 INS42 INS44 INS8 INS42 INS42 INS45 INS42 INS42 UPD42 UPD42 INS42 INS43 INS42 INS41 INS21 INS21 INS21 INS21 INS21 INS21 MOV21 INS21 MOV21 MOV21 INS42 INS32 INS7 INS7 INS7 INS7 INS7 INS7 INS32 INS32 INS42 INS22 INS32 INS22 INS14 INS22 INS32 INS22 INS32 INS22 INS14 INS22 INS32 INS60 INS60 INS60 INS25 INS21 INS42 UPD42 INS42 INS42 INS42 INS32 UPD42 UPD42 UPD42 INS14 INS42 INS32 INS52 INS42 INS42 INS42 INS52 INS42 INS43 INS42 INS42 INS52 INS42 INS32 INS42 INS34 INS11 INS52 INS42 INS42 INS42 INS52 INS42 INS43 INS42 INS42 INS52 INS42 INS32 INS42 INS34 INS11 INS43 INS59 INS43 INS59 INS39 INS59 INS27 INS8 INS8 INS7 INS42 INS42 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS39 INS36 INS42 INS42 INS42 INS39 INS36 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS9 INS42 INS33 INS21 INS21 INS21 INS42 INS32 INS40 INS27 INS27 INS42 INS42 INS40 UPD42 MOV42 UPD42 MOV42 INS40 INS7 INS7 INS7 UPD42 MOV42 INS42 INS42 INS42 INS42 INS34 INS34 INS34 INS34 INS42 INS32 INS42 INS32 INS42 INS9 MOV42 MOV42 MOV42 MOV42 MOV42 MOV42 UPD42 DEL34 DEL34 DEL27 DEL42 DEL42 DEL32 DEL32 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL40 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL33 DEL27 DEL8 DEL25 DEL52 DEL42 DEL22