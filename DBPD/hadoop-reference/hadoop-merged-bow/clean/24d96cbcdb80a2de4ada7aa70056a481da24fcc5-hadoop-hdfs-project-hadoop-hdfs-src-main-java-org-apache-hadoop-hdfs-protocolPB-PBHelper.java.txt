HDFS-4414. Add support for getting snapshot diff from DistributedFileSystem. Contributed by Jing Zhao.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1441808 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.hdfs.server.protocol.StorageReport;
+import org.apache.hadoop.hdfs.protocol.SnapshotDiffReport;
+import org.apache.hadoop.hdfs.protocol.SnapshotDiffReport.DiffReportEntry;
+import org.apache.hadoop.hdfs.protocol.SnapshotDiffReport.DiffType;
-import org.apache.hadoop.hdfs.protocol.proto.HdfsProtos;
-import org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.DataEncryptionKeyProto;
+import org.apache.hadoop.hdfs.protocol.proto.HdfsProtos;
+import org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.DataEncryptionKeyProto;
+import org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.NamenodeRegistrationProto.NamenodeRoleProto;
-import org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.NamenodeRegistrationProto.NamenodeRoleProto;
+import org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.SnapshotDiffReportEntryProto;
+import org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.SnapshotDiffReportProto;
-import org.apache.hadoop.hdfs.security.token.block.DataEncryptionKey;
+import org.apache.hadoop.hdfs.security.token.block.DataEncryptionKey;
+import org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat;
-import org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat;
+import org.apache.hadoop.hdfs.server.protocol.StorageReport;
-        result[i] = (SnapshottableDirectoryStatus) PBHelper
-            .convert(list.get(i));
+        result[i] = PBHelper.convert(list.get(i));
+  
+  public static DiffReportEntry convert(SnapshotDiffReportEntryProto entry) {
+    if (entry == null) {
+      return null;
+    }
+    DiffType type = DiffType.getTypeFromLabel(entry
+        .getModificationLabel());
+    return type != null ? new DiffReportEntry(type, entry.getFullpath())
+        : null;
+  }
+  
+  public static SnapshotDiffReportEntryProto convert(DiffReportEntry entry) {
+    if (entry == null) {
+      return null;
+    }
+    String fullPath = entry.getFullPath();
+    String modification = entry.getType().getLabel();
+    
+    SnapshotDiffReportEntryProto entryProto = SnapshotDiffReportEntryProto
+        .newBuilder().setFullpath(fullPath).setModificationLabel(modification)
+        .build();
+    return entryProto;
+  }
+  
+  public static SnapshotDiffReport convert(SnapshotDiffReportProto reportProto) {
+    if (reportProto == null) {
+      return null;
+    }
+    String snapshotDir = reportProto.getSnapshotRoot();
+    String fromSnapshot = reportProto.getFromSnapshot();
+    String toSnapshot = reportProto.getToSnapshot();
+    List<SnapshotDiffReportEntryProto> list = reportProto
+        .getDiffReportEntriesList();
+    List<DiffReportEntry> entries = new ArrayList<DiffReportEntry>();
+    for (SnapshotDiffReportEntryProto entryProto : list) {
+      DiffReportEntry entry = convert(entryProto);
+      if (entry != null)
+        entries.add(entry);
+    }
+    return new SnapshotDiffReport(snapshotDir, fromSnapshot, toSnapshot,
+        entries);
+  }
+  
+  public static SnapshotDiffReportProto convert(SnapshotDiffReport report) {
+    if (report == null) {
+      return null;
+    }
+    List<DiffReportEntry> entries = report.getDiffList();
+    List<SnapshotDiffReportEntryProto> entryProtos = 
+        new ArrayList<SnapshotDiffReportEntryProto>();
+    for (DiffReportEntry entry : entries) {
+      SnapshotDiffReportEntryProto entryProto = convert(entry);
+      if (entryProto != null)
+        entryProtos.add(entryProto);
+    }
+    
+    SnapshotDiffReportProto reportProto = SnapshotDiffReportProto.newBuilder()
+        .setSnapshotRoot(report.getSnapshotRoot())
+        .setFromSnapshot(report.getFromSnapshot())
+        .setToSnapshot(report.getLaterSnapshotName())
+        .addAllDiffReportEntries(entryProtos).build();
+    return reportProto;
+  }

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS42 INS43 INS42 INS25 INS60 INS41 INS42 INS43 INS42 INS25 INS60 INS60 INS60 INS41 INS42 INS43 INS42 INS25 INS60 INS60 INS60 INS60 INS60 INS70 INS41 INS42 INS43 INS42 INS25 INS60 INS60 INS70 INS60 INS41 INS42 INS27 INS8 INS43 INS59 INS16 INS42 INS27 INS8 INS43 INS59 INS43 INS59 INS43 INS59 INS42 INS42 INS27 INS8 INS43 INS59 INS43 INS59 INS43 INS59 INS74 INS59 INS74 INS59 INS44 INS42 INS8 INS14 INS42 INS27 INS8 INS74 INS59 INS74 INS59 INS44 INS42 INS8 INS43 INS59 INS42 INS42 INS33 INS41 INS42 INS42 INS32 INS27 INS14 INS33 INS42 INS33 INS41 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS41 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS14 INS43 INS42 INS60 INS25 INS43 INS42 INS42 INS42 INS42 INS42 INS33 INS41 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS14 INS43 INS42 INS60 INS25 INS42 INS42 INS32 INS33 INS42 INS42 INS32 INS42 INS33 INS43 INS42 INS32 INS33 INS42 INS42 INS32 INS42 INS32 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS43 INS59 INS27 INS21 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS43 INS59 INS27 INS21 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS43 INS42 INS42 INS32 INS42 INS33 INS32 INS43 INS43 INS42 INS42 INS32 INS42 INS33 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 MOV32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL43 DEL11