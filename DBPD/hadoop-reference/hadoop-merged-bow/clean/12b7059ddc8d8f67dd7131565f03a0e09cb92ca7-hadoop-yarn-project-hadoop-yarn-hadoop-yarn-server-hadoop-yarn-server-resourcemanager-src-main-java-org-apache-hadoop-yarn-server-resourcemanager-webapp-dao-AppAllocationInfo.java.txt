YARN-9440. Improve diagnostics for scheduler and app activities. Contributed by Tao Yang.

-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
+import java.util.Map;
+import java.util.stream.Collectors;
-  protected String nodeId;
-  protected String queueName;
-  protected String appPriority;
-  protected String allocatedContainerId;
-  protected String allocationState;
-  protected String diagnostic;
-  protected String timeStamp;
-  protected List<ActivityNodeInfo> allocationAttempt;
-
-  private static final Logger LOG =
-      LoggerFactory.getLogger(AppAllocationInfo.class);
+  private String nodeId;
+  private String queueName;
+  private String appPriority;
+  private long timestamp;
+  private String dateTime;
+  private String allocationState;
+  private List<AppRequestAllocationInfo> requestAllocation;
-    this.allocationAttempt = new ArrayList<>();
-
+    this.requestAllocation = new ArrayList<>();
-    this.allocatedContainerId = allocation.getContainerId();
+    this.timestamp = allocation.getTime();
+    this.dateTime = new Date(allocation.getTime()).toString();
-    this.diagnostic = allocation.getDiagnostic();
-
-    Date date = new Date();
-    date.setTime(allocation.getTime());
-    this.timeStamp = date.toString();
-
-    for (ActivityNode attempt : allocation.getAllocationAttempts()) {
-      ActivityNodeInfo containerInfo = new ActivityNodeInfo(attempt);
-      this.allocationAttempt.add(containerInfo);
+    Map<String, List<ActivityNode>> requestToActivityNodes =
+        allocation.getAllocationAttempts().stream().collect(Collectors
+            .groupingBy((e) -> e.getRequestPriority() + "_" + e
+                .getAllocationRequestId(), Collectors.toList()));
+    for (List<ActivityNode> requestActivityNodes : requestToActivityNodes
+        .values()) {
+      AppRequestAllocationInfo requestAllocationInfo =
+          new AppRequestAllocationInfo(requestActivityNodes);
+      this.requestAllocation.add(requestAllocationInfo);
+
+  public String getNodeId() {
+    return nodeId;
+  }
+
+  public String getQueueName() {
+    return queueName;
+  }
+
+  public String getAppPriority() {
+    return appPriority;
+  }
+
+  public long getTimestamp() {
+    return timestamp;
+  }
+
+  public String getDateTime() {
+    return dateTime;
+  }
+
+  public String getAllocationState() {
+    return allocationState;
+  }
+
+  public List<AppRequestAllocationInfo> getRequestAllocation() {
+    return requestAllocation;
+  }

MOV26 MOV26 MOV23 UPD40 UPD40 INS31 INS31 INS31 INS31 INS31 INS31 INS31 UPD83 UPD83 UPD83 UPD83 INS39 UPD83 MOV43 UPD83 UPD83 UPD74 MOV21 INS83 MOV43 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS74 INS42 INS8 UPD42 UPD42 UPD43 UPD42 INS60 INS41 INS42 INS41 INS42 INS41 INS41 UPD42 MOV42 INS41 INS42 INS41 INS43 INS43 INS41 UPD42 INS7 INS74 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS22 MOV32 INS43 MOV43 INS74 INS42 INS32 INS74 INS42 INS42 INS42 UPD42 UPD42 UPD42 INS52 INS42 INS14 UPD42 INS42 INS43 INS43 INS32 INS42 INS32 INS43 MOV43 UPD43 MOV43 MOV32 INS42 INS42 MOV32 INS42 INS42 UPD42 MOV42 INS86 INS32 INS42 UPD42 UPD42 UPD42 INS59 INS27 INS42 INS42 UPD43 UPD42 UPD42 UPD42 MOV42 INS32 INS45 INS32 UPD42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 DEL83 DEL42 DEL59 DEL23 DEL83 DEL83 DEL83 DEL43 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL32 DEL7 DEL21 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL52 DEL42 DEL22 DEL32 DEL7 DEL21 DEL42