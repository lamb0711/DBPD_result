Merge r1400738 through r1401868 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1401869 13f79535-47bb-0310-9956-ffa450edef68

+  @SuppressWarnings("deprecation")
+    // a * in the classpath will only find a .jar, so we need to filter out
+    // all .jars and add everything else
+    addToClasspathIfNotJar(DistributedCache.getFileClassPaths(conf),
+        DistributedCache.getCacheFiles(conf),
+        conf,
+        environment);
+    addToClasspathIfNotJar(DistributedCache.getArchiveClassPaths(conf),
+        DistributedCache.getCacheArchives(conf),
+        conf,
+        environment);
+  /**
+   * Add the paths to the classpath if they are not jars
+   * @param paths the paths to add to the classpath
+   * @param withLinks the corresponding paths that may have a link name in them
+   * @param conf used to resolve the paths
+   * @param environment the environment to update CLASSPATH in
+   * @throws IOException if there is an error resolving any of the paths.
+   */
+  private static void addToClasspathIfNotJar(Path[] paths,
+      URI[] withLinks, Configuration conf,
+      Map<String, String> environment) throws IOException {
+    if (paths != null) {
+      HashMap<Path, String> linkLookup = new HashMap<Path, String>();
+      if (withLinks != null) {
+        for (URI u: withLinks) {
+          Path p = new Path(u);
+          FileSystem remoteFS = p.getFileSystem(conf);
+          p = remoteFS.resolvePath(p.makeQualified(remoteFS.getUri(),
+              remoteFS.getWorkingDirectory()));
+          String name = (null == u.getFragment())
+              ? p.getName() : u.getFragment();
+          if (!name.toLowerCase().endsWith(".jar")) {
+            linkLookup.put(p, name);
+          }
+        }
+      }
+      
+      for (Path p : paths) {
+        FileSystem remoteFS = p.getFileSystem(conf);
+        p = remoteFS.resolvePath(p.makeQualified(remoteFS.getUri(),
+            remoteFS.getWorkingDirectory()));
+        String name = linkLookup.get(p);
+        if (name == null) {
+          name = p.getName();
+        }
+        if(!name.toLowerCase().endsWith(".jar")) {
+          Apps.addToEnvironment(
+              environment,
+              Environment.CLASSPATH.name(),
+              Environment.PWD.$() + Path.SEPARATOR + name);
+        }
+      }
+    }
+  }
+
-        DistributedCache.getArchiveVisibilities(conf), 
-        DistributedCache.getArchiveClassPaths(conf));
+        DistributedCache.getArchiveVisibilities(conf));
-        DistributedCache.getFileVisibilities(conf),
-        DistributedCache.getFileClassPaths(conf));
+        DistributedCache.getFileVisibilities(conf));
-      URI[] uris, long[] timestamps, long[] sizes, boolean visibilities[], 
-      Path[] pathsToPutOnClasspath) throws IOException {
+      URI[] uris, long[] timestamps, long[] sizes, boolean visibilities[])
+  throws IOException {
-      Map<String, Path> classPaths = new HashMap<String, Path>();
-      if (pathsToPutOnClasspath != null) {
-        for (Path p : pathsToPutOnClasspath) {
-          FileSystem remoteFS = p.getFileSystem(conf);
-          p = remoteFS.resolvePath(p.makeQualified(remoteFS.getUri(),
-              remoteFS.getWorkingDirectory()));
-          classPaths.put(p.toUri().getPath().toString(), p);
-        }
-      }

INS31 INS79 INS29 INS83 INS83 INS39 INS42 MOV44 INS44 INS44 INS44 INS43 INS8 INS42 INS45 INS21 INS21 INS65 INS65 INS65 INS65 INS65 INS65 UPD42 INS5 INS42 INS43 INS42 INS74 INS42 INS42 INS25 INS32 INS32 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS43 INS85 INS42 INS43 INS43 INS43 INS27 INS8 INS42 MOV32 INS32 INS42 INS42 INS42 MOV32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS60 INS25 MOV70 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS27 INS8 UPD42 INS43 MOV43 INS43 INS42 INS14 INS42 INS33 INS70 INS60 INS25 INS25 INS42 INS42 INS74 INS44 INS42 INS8 MOV43 INS59 INS27 INS8 INS38 INS8 MOV43 MOV43 INS43 INS43 INS42 INS60 INS60 INS21 INS60 INS25 INS42 INS32 INS42 INS33 INS21 INS32 INS21 INS42 INS42 INS43 INS59 INS43 INS59 INS7 MOV43 INS59 INS38 INS8 INS42 INS42 UPD42 MOV42 INS7 MOV32 UPD42 MOV42 INS45 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS32 INS42 INS16 INS32 INS21 INS42 INS32 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 INS42 INS32 INS27 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS36 INS32 INS32 INS32 INS42 INS45 INS32 INS42 INS42 INS40 INS42 INS32 INS40 INS42 INS42 INS42 INS42 INS32 INS32 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS42 INS42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL42 DEL43 DEL74 DEL42 DEL74 DEL14 DEL59 DEL60 DEL42 DEL33 DEL27 DEL8 DEL25