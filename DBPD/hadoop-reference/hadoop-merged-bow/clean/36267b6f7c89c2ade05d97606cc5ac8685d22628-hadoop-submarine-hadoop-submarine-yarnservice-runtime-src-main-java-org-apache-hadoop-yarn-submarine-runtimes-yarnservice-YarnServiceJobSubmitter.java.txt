SUBMARINE-52. [SUBMARINE-14] Generate Service spec + launch script for single-node PyTorch learning job. Contributed by Szilard Nemeth.

-import org.apache.hadoop.yarn.submarine.client.cli.param.RunJobParameters;
+import org.apache.hadoop.yarn.submarine.client.cli.param.ParametersHolder;
+import org.apache.hadoop.yarn.submarine.client.cli.param.runjob.PyTorchRunJobParameters;
+import org.apache.hadoop.yarn.submarine.client.cli.param.runjob.RunJobParameters;
+import org.apache.hadoop.yarn.submarine.client.cli.param.runjob.TensorFlowRunJobParameters;
+import org.apache.hadoop.yarn.submarine.client.cli.runjob.Framework;
-import org.apache.hadoop.yarn.submarine.runtimes.yarnservice.command.LaunchCommandFactory;
+import org.apache.hadoop.yarn.submarine.runtimes.yarnservice.command.PyTorchLaunchCommandFactory;
+import org.apache.hadoop.yarn.submarine.runtimes.yarnservice.command.TensorFlowLaunchCommandFactory;
+import org.apache.hadoop.yarn.submarine.runtimes.yarnservice.pytorch.PyTorchServiceSpec;
+import static org.apache.hadoop.yarn.submarine.client.cli.param.ParametersHolder.SUPPORTED_FRAMEWORKS_MESSAGE;
-  public ApplicationId submitJob(RunJobParameters parameters)
+  public ApplicationId submitJob(ParametersHolder paramsHolder)
+    Framework framework = paramsHolder.getFramework();
+    RunJobParameters parameters =
+        (RunJobParameters) paramsHolder.getParameters();
+
+    if (framework == Framework.TENSORFLOW) {
+      return submitTensorFlowJob((TensorFlowRunJobParameters) parameters);
+    } else if (framework == Framework.PYTORCH) {
+      return submitPyTorchJob((PyTorchRunJobParameters) parameters);
+    } else {
+      throw new UnsupportedOperationException(SUPPORTED_FRAMEWORKS_MESSAGE);
+    }
+  }
+
+  private ApplicationId submitTensorFlowJob(
+      TensorFlowRunJobParameters parameters) throws IOException, YarnException {
+    return submitJobInternal(serviceSpec);
+  }
+
+  private ApplicationId submitPyTorchJob(PyTorchRunJobParameters parameters)
+      throws IOException, YarnException {
+    FileSystemOperations fsOperations = new FileSystemOperations(clientContext);
+    HadoopEnvironmentSetup hadoopEnvSetup =
+        new HadoopEnvironmentSetup(clientContext, fsOperations);
+
+    Service serviceSpec = createPyTorchServiceSpec(parameters,
+        fsOperations, hadoopEnvSetup);
+    return submitJobInternal(serviceSpec);
+  }
+
+  private ApplicationId submitJobInternal(Service serviceSpec)
+      throws IOException, YarnException {
-    String appStatus=appAdminClient.getStatusString(serviceSpec.getName());
+    String appStatus = appAdminClient.getStatusString(serviceSpec.getName());
-  private Service createTensorFlowServiceSpec(RunJobParameters parameters,
+  private Service createTensorFlowServiceSpec(
+      TensorFlowRunJobParameters parameters,
-    LaunchCommandFactory launchCommandFactory =
-        new LaunchCommandFactory(hadoopEnvSetup, parameters,
+    TensorFlowLaunchCommandFactory launchCommandFactory =
+        new TensorFlowLaunchCommandFactory(hadoopEnvSetup, parameters,
+  private Service createPyTorchServiceSpec(PyTorchRunJobParameters parameters,
+      FileSystemOperations fsOperations, HadoopEnvironmentSetup hadoopEnvSetup)
+      throws IOException {
+    PyTorchLaunchCommandFactory launchCommandFactory =
+        new PyTorchLaunchCommandFactory(hadoopEnvSetup, parameters,
+            clientContext.getYarnConfig());
+    Localizer localizer = new Localizer(fsOperations,
+        clientContext.getRemoteDirectoryManager(), parameters);
+    PyTorchServiceSpec pyTorchServiceSpec = new PyTorchServiceSpec(
+        parameters, this.clientContext, fsOperations, launchCommandFactory,
+        localizer);
+
+    serviceWrapper = pyTorchServiceSpec.create();
+    return serviceWrapper.getService();
+  }
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 UPD40 INS40 INS40 UPD40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 MOV29 MOV78 INS83 INS43 INS42 INS44 INS43 INS43 INS8 INS83 INS43 INS42 INS44 INS43 INS43 INS8 INS83 INS43 INS42 INS44 INS43 INS43 INS8 UPD83 UPD42 INS83 INS43 INS42 INS44 INS44 INS44 INS43 INS8 INS42 INS43 INS42 INS42 INS42 INS60 INS60 INS25 INS42 INS43 INS42 INS42 INS42 MOV60 MOV60 MOV60 INS41 INS42 INS43 INS42 INS42 INS42 INS60 INS60 INS60 INS41 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS60 INS60 INS21 INS41 INS42 INS43 INS59 MOV43 INS59 INS27 INS8 INS25 INS42 INS32 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS42 INS42 UPD43 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS7 INS32 INS42 INS42 INS32 INS42 INS11 INS42 INS40 INS41 INS27 INS8 INS8 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 UPD42 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS32 INS42 INS42 INS42 INS42 MOV43 INS32 INS32 INS42 INS40 INS41 INS53 INS43 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 UPD43 INS43 INS42 INS42 INS32 INS43 INS42 INS32 INS42 INS43 INS42 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS32 INS14 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS43 INS42 INS42 INS11 INS43 INS42 INS42 INS43 INS42 INS42 INS42 DEL42