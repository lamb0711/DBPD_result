HDFS-2228. Move block and datanode code from FSNamesystem to BlockManager and DatanodeManager.  (szetszwo)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154899 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.HadoopIllegalArgumentException;
-  public void removeDecomNodeFromList(final List<DatanodeDescriptor> nodeList) {
+  private void removeDecomNodeFromList(final List<DatanodeDescriptor> nodeList) {
-    nodeReg.exportedKeys = namesystem.getBlockManager().getBlockKeys();
+    nodeReg.exportedKeys = blockManager.getBlockKeys();
+  /** @return list of datanodes where decommissioning is in progress. */
+  public List<DatanodeDescriptor> getDecommissioningNodes() {
+    namesystem.readLock();
+    try {
+      final List<DatanodeDescriptor> decommissioningNodes
+          = new ArrayList<DatanodeDescriptor>();
+      final List<DatanodeDescriptor> results = getDatanodeListForReport(
+          DatanodeReportType.LIVE);
+      for(DatanodeDescriptor node : results) {
+        if (node.isDecommissionInProgress()) {
+          decommissioningNodes.add(node);
+        }
+      }
+      return decommissioningNodes;
+    } finally {
+      namesystem.readUnlock();
+    }
+  }
+
+
-  public void fetchDatanodess(final List<DatanodeDescriptor> live, 
-      final List<DatanodeDescriptor> dead) {
-    final List<DatanodeDescriptor> results =
-        getDatanodeListForReport(DatanodeReportType.ALL);    
-    for(DatanodeDescriptor node : results) {
-      if (isDatanodeDead(node))
-        dead.add(node);
-      else
-        live.add(node);
+  public void fetchDatanodes(final List<DatanodeDescriptor> live, 
+      final List<DatanodeDescriptor> dead, final boolean removeDecommissionNode) {
+    if (live == null && dead == null) {
+      throw new HadoopIllegalArgumentException("Both live and dead lists are null");
+    }
+
+    namesystem.readLock();
+    try {
+      final List<DatanodeDescriptor> results =
+          getDatanodeListForReport(DatanodeReportType.ALL);    
+      for(DatanodeDescriptor node : results) {
+        if (isDatanodeDead(node)) {
+          if (dead != null) {
+            dead.add(node);
+          }
+        } else {
+          if (live != null) {
+            live.add(node);
+          }
+        }
+      }
+    } finally {
+      namesystem.readUnlock();
+    }
+    
+    if (removeDecommissionNode) {
+      if (live != null) {
+        removeDecomNodeFromList(live);
+      }
+      if (dead != null) {
+        removeDecomNodeFromList(dead);
+      }
-        namesystem.addKeyUpdateCommand(cmds, nodeinfo);
+        blockManager.addKeyUpdateCommand(cmds, nodeinfo);

INS26 INS40 INS31 UPD83 INS29 INS83 INS74 INS42 INS8 UPD42 INS44 INS8 INS65 INS43 INS43 INS21 INS54 INS83 INS39 INS42 INS25 INS21 INS54 INS25 INS66 INS42 INS42 INS32 INS8 INS8 INS27 INS8 INS32 MOV8 INS8 INS42 INS8 INS42 INS42 INS60 INS60 INS70 INS41 INS21 INS27 INS27 INS53 INS42 INS42 INS21 INS25 INS25 UPD42 MOV42 INS83 INS74 INS59 INS83 INS74 INS59 INS44 INS42 INS8 INS42 INS32 INS42 INS33 INS42 INS33 INS14 INS32 INS27 INS8 INS27 INS8 INS43 INS43 INS42 INS14 INS43 INS43 INS42 INS32 INS43 INS42 INS25 INS42 INS42 INS43 INS45 INS42 INS42 INS42 INS33 INS21 INS42 INS33 INS21 INS42 INS42 INS74 INS42 INS42 INS42 INS40 INS42 INS32 INS8 INS42 INS8 INS8 INS32 INS32 INS43 INS43 INS42 INS42 INS21 INS25 INS25 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 INS32 INS27 INS8 INS27 INS8 INS42 INS42 INS42 INS42 INS33 MOV21 INS42 INS33 MOV21 DEL42 DEL32