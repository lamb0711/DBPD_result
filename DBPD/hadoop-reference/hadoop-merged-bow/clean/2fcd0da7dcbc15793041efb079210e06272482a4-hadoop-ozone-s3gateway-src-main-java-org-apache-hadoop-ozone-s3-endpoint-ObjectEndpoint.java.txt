HDDS-1942. Support copy during S3 multipart upload part creation

Signed-off-by: Anu Engineer <aengineer@apache.org>

+import org.apache.commons.lang3.tuple.Pair;
+import static org.apache.hadoop.ozone.s3.util.S3Consts.COPY_SOURCE_HEADER_RANGE;
-      IOUtils.copy(body, ozoneOutputStream);
+
+      String copyHeader = headers.getHeaderString(COPY_SOURCE_HEADER);
+      if (copyHeader != null) {
+        Pair<String, String> result = parseSourceHeader(copyHeader);
+
+        String sourceBucket = result.getLeft();
+        String sourceKey = result.getRight();
+
+        try (OzoneInputStream sourceObject =
+            getBucket(sourceBucket).readKey(sourceKey)) {
+
+          String range =
+              headers.getHeaderString(COPY_SOURCE_HEADER_RANGE);
+          if (range != null) {
+            RangeHeader rangeHeader =
+                RangeHeaderParserUtil.parseRangeHeader(range, 0);
+            IOUtils.copyLarge(sourceObject, ozoneOutputStream,
+                rangeHeader.getStartOffset(),
+                rangeHeader.getEndOffset() - rangeHeader.getStartOffset());
+
+          } else {
+            IOUtils.copy(sourceObject, ozoneOutputStream);
+          }
+        }
+
+      } else {
+        IOUtils.copy(body, ozoneOutputStream);
+      }
-      return Response.status(Status.OK).header("ETag",
-          omMultipartCommitUploadPartInfo.getPartName()).build();
+      String eTag = omMultipartCommitUploadPartInfo.getPartName();
+
+      if (copyHeader != null) {
+        return Response.ok(new CopyPartResult(eTag)).build();
+      } else {
+        return Response.ok().header("ETag",
+            eTag).build();
+      }
-    if (copyHeader.startsWith("/")) {
-      copyHeader = copyHeader.substring(1);
-    }
-    int pos = copyHeader.indexOf("/");
-    if (pos == -1) {
-      OS3Exception ex = S3ErrorTable.newError(S3ErrorTable
-          .INVALID_ARGUMENT, copyHeader);
-      ex.setErrorMessage("Copy Source must mention the source bucket and " +
-          "key: sourcebucket/sourcekey");
-      throw ex;
-    }
-    String sourceBucket = copyHeader.substring(0, pos);
-    String sourceKey = copyHeader.substring(pos + 1);
+    Pair<String, String> result = parseSourceHeader(copyHeader);
+    String sourceBucket = result.getLeft();
+    String sourceKey = result.getRight();
+
+  /**
+   * Parse the key and bucket name from copy header.
+   */
+  @VisibleForTesting
+  public static Pair<String, String> parseSourceHeader(String copyHeader)
+      throws OS3Exception {
+    String header = copyHeader;
+    if (header.startsWith("/")) {
+      header = copyHeader.substring(1);
+    }
+    int pos = header.indexOf("/");
+    if (pos == -1) {
+      OS3Exception ex = S3ErrorTable.newError(S3ErrorTable
+          .INVALID_ARGUMENT, header);
+      ex.setErrorMessage("Copy Source must mention the source bucket and " +
+          "key: sourcebucket/sourcekey");
+      throw ex;
+    }
+
+    return Pair.of(header.substring(0, pos), header.substring(pos + 1));
+  }

INS26 INS26 INS40 INS40 INS31 INS29 INS78 INS83 INS83 INS74 INS42 INS44 INS43 INS8 INS65 INS42 INS43 INS43 INS43 INS43 INS42 INS42 INS60 MOV25 INS60 MOV25 INS41 INS8 INS74 MOV43 MOV43 INS66 INS42 INS42 INS42 INS42 INS43 INS59 INS39 INS59 INS32 MOV60 MOV60 INS60 INS25 MOV21 MOV60 INS60 INS25 INS43 INS43 INS43 UPD42 INS32 INS42 INS42 INS42 UPD42 INS42 INS32 INS42 INS42 INS32 MOV32 INS43 INS59 INS27 INS8 INS8 INS43 INS59 INS27 INS8 INS8 INS42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS34 INS42 UPD42 INS42 INS42 INS32 INS42 INS33 INS60 INS60 INS60 INS54 MOV21 INS42 INS42 MOV32 INS42 INS33 INS41 MOV41 UPD42 INS42 INS42 INS42 INS74 INS59 INS43 INS59 INS43 INS59 INS58 INS8 INS32 UPD42 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS59 INS60 INS25 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS27 INS8 INS8 INS42 INS42 INS14 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS60 INS21 INS21 INS43 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 DEL40 DEL8 DEL39 DEL45 DEL34 DEL42