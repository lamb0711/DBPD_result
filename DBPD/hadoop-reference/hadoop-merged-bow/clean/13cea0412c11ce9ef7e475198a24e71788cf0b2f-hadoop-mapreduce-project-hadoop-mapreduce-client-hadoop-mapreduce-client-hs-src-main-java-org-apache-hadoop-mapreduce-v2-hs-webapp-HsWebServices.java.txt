YARN-10028. Integrate the new abstract log servlet to the JobHistory server. Contributed by Adam Antal

+import javax.annotation.Nullable;
+import javax.ws.rs.DefaultValue;
+import javax.ws.rs.core.Response;
+import org.apache.hadoop.classification.InterfaceAudience;
+import org.apache.hadoop.classification.InterfaceStability;
+import org.apache.hadoop.yarn.api.ApplicationClientProtocol;
+import org.apache.hadoop.yarn.server.webapp.YarnWebServiceParams;
+import org.apache.hadoop.yarn.server.webapp.LogServlet;
+import org.apache.hadoop.yarn.server.webapp.WebServices;
-public class HsWebServices {
+public class HsWebServices extends WebServices {
+  private final LogServlet logServlet;
-  @Context
-  UriInfo uriInfo;
+  @Context UriInfo uriInfo;
-  public HsWebServices(final HistoryContext ctx, final Configuration conf,
-      final WebApp webapp) {
+  public HsWebServices(final HistoryContext ctx,
+      final Configuration conf,
+      final WebApp webapp,
+      @Nullable ApplicationClientProtocol appBaseProto) {
+    super(appBaseProto);
+    this.logServlet = new LogServlet(conf, this);
+  @GET
+  @Path("/containers/{containerid}/logs")
+  @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })
+  @InterfaceAudience.Public
+  @InterfaceStability.Unstable
+  public Response getLogs(@Context HttpServletRequest hsr,
+      @PathParam(YarnWebServiceParams.CONTAINER_ID) String containerIdStr,
+      @QueryParam(YarnWebServiceParams.NM_ID) String nmId,
+      @QueryParam(YarnWebServiceParams.REDIRECTED_FROM_NODE)
+      @DefaultValue("false") boolean redirectedFromNode) {
+    init();
+    return logServlet.getContainerLogsInfo(hsr, containerIdStr, nmId,
+        redirectedFromNode, null);
+  }
+
+  @GET
+  @Path("/containerlogs/{containerid}/{filename}")
+  @Produces({ MediaType.TEXT_PLAIN + "; " + JettyUtils.UTF_8 })
+  @InterfaceAudience.Public
+  @InterfaceStability.Unstable
+  public Response getLogs(@Context HttpServletRequest req,
+      @PathParam(YarnWebServiceParams.CONTAINER_ID) String containerIdStr,
+      @PathParam(YarnWebServiceParams.CONTAINER_LOG_FILE_NAME)
+          String filename,
+      @QueryParam(YarnWebServiceParams.RESPONSE_CONTENT_FORMAT)
+          String format,
+      @QueryParam(YarnWebServiceParams.RESPONSE_CONTENT_SIZE)
+          String size,
+      @QueryParam(YarnWebServiceParams.NM_ID) String nmId,
+      @QueryParam(YarnWebServiceParams.REDIRECTED_FROM_NODE)
+      @DefaultValue("false") boolean redirectedFromNode) {
+    init();
+    return logServlet.getLogFile(req, containerIdStr, filename, format, size,
+        nmId, redirectedFromNode, null);
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS43 INS23 INS31 INS31 INS42 INS83 INS83 INS43 INS59 INS44 INS78 INS79 INS79 INS78 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS8 INS78 INS79 INS79 INS78 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS8 INS42 INS42 INS78 INS43 INS42 INS46 INS21 INS42 INS42 INS45 INS42 INS4 INS40 INS40 INS42 INS78 INS43 INS42 INS79 INS43 INS42 INS79 INS43 INS42 INS79 INS79 INS39 INS42 INS21 INS41 INS42 INS42 INS45 INS42 INS4 INS40 INS40 INS42 INS78 INS43 INS42 INS79 INS43 INS42 INS79 INS43 INS42 INS79 INS43 INS42 INS79 INS43 INS42 INS79 INS43 INS42 INS79 INS79 INS39 INS42 INS21 INS41 INS42 INS42 INS42 INS7 INS40 INS40 INS42 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS45 INS32 INS32 INS27 INS42 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS45 INS32 INS32 INS22 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS40 INS45 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS52 INS42 INS43 INS42 INS52 INS42