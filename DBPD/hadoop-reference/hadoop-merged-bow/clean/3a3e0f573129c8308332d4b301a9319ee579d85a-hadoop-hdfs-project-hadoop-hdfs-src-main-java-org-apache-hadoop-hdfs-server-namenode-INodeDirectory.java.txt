HDFS-4760. Update inodeMap after node replacement.  Contributed by Jing Zhao


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1477827 13f79535-47bb-0310-9956-ffa450edef68

-  public boolean removeChild(INode child, Snapshot latest)
-      throws QuotaExceededException {
+  public boolean removeChild(INode child, Snapshot latest,
+      final INodeMap inodeMap) throws QuotaExceededException {
-      return replaceSelf4INodeDirectoryWithSnapshot()
-          .removeChild(child, latest);
+      return replaceSelf4INodeDirectoryWithSnapshot(inodeMap)
+          .removeChild(child, latest, inodeMap);
-      final long nsQuota, final long dsQuota) throws QuotaExceededException {
+      final long nsQuota, final long dsQuota, final INodeMap inodeMap)
+      throws QuotaExceededException {
-      replaceSelf(q);
+      replaceSelf(q, inodeMap);
-      return replaceSelf(s).saveSelf2Snapshot(latest, this);
+      return replaceSelf(s, inodeMap).saveSelf2Snapshot(latest, this);
-      Snapshot latest) throws QuotaExceededException {
+      Snapshot latest, final INodeMap inodeMap) throws QuotaExceededException {
-    replaceSelf(s).saveSelf2Snapshot(latest, this);
+    replaceSelf(s, inodeMap).saveSelf2Snapshot(latest, this);
-  public INodeDirectoryWithSnapshot replaceSelf4INodeDirectoryWithSnapshot() {
-    return replaceSelf(new INodeDirectoryWithSnapshot(this));
+  public INodeDirectoryWithSnapshot replaceSelf4INodeDirectoryWithSnapshot(
+      final INodeMap inodeMap) {
+    return replaceSelf(new INodeDirectoryWithSnapshot(this), inodeMap);
-  public INodeDirectory replaceSelf4INodeDirectory() {
+  public INodeDirectory replaceSelf4INodeDirectory(final INodeMap inodeMap) {
-    return replaceSelf(new INodeDirectory(this, true));
+    return replaceSelf(new INodeDirectory(this, true), inodeMap);
-  private final <N extends INodeDirectory> N replaceSelf(final N newDir) {
+  private final <N extends INodeDirectory> N replaceSelf(final N newDir,
+      final INodeMap inodeMap) {
+      if (inodeMap != null) {
+        inodeMap.put(newDir);
+      }
-      parent.replaceChild(this, newDir);
+      parent.replaceChild(this, newDir, inodeMap);
-  public void replaceChild(INode oldChild, final INode newChild) {
+  public void replaceChild(INode oldChild, final INode newChild,
+      final INodeMap inodeMap) {
-      // do the replacement
+    // update the inodeMap
+    if (inodeMap != null) {
+      inodeMap.put(newChild);
+    }
-    replaceChild(oldChild, ref);
+    replaceChild(oldChild, ref, null);
-  private void replaceChildFile(final INodeFile oldChild, final INodeFile newChild) {
-    replaceChild(oldChild, newChild);
+  private void replaceChildFile(final INodeFile oldChild,
+      final INodeFile newChild, final INodeMap inodeMap) {
+    replaceChild(oldChild, newChild, inodeMap);
-      final INodeFile child) {
+      final INodeFile child, final INodeMap inodeMap) {
-    replaceChildFile(child, newChild);
+    replaceChildFile(child, newChild, inodeMap);
-      final INodeFileUnderConstruction child) {
+      final INodeFileUnderConstruction child, final INodeMap inodeMap) {
-    replaceChildFile(child, newChild);
+    replaceChildFile(child, newChild, inodeMap);
-  public INodeDirectory recordModification(Snapshot latest)
-      throws QuotaExceededException {
-    return isInLatestSnapshot(latest)?
-        replaceSelf4INodeDirectoryWithSnapshot().recordModification(latest)
-        : this;
+  public INodeDirectory recordModification(Snapshot latest,
+      final INodeMap inodeMap) throws QuotaExceededException {
+    if (isInLatestSnapshot(latest)) {
+      return replaceSelf4INodeDirectoryWithSnapshot(inodeMap)
+          .recordModification(latest, inodeMap);
+    } else {
+      return this;
+    }
-      final INode snapshotCopy) throws QuotaExceededException {
+      final INode snapshotCopy, final INodeMap inodeMap)
+      throws QuotaExceededException {
-    return replaceSelf4INodeDirectoryWithSnapshot()
-        .saveChild2Snapshot(child, latest, snapshotCopy);
+    return replaceSelf4INodeDirectoryWithSnapshot(inodeMap)
+        .saveChild2Snapshot(child, latest, snapshotCopy, inodeMap);
+   * @param inodeMap update the inodeMap if the directory node gets replaced
-      final Snapshot latest) throws QuotaExceededException {
+      final Snapshot latest, final INodeMap inodeMap)
+      throws QuotaExceededException {
-      return replaceSelf4INodeDirectoryWithSnapshot()
-          .addChild(node, setModTime, latest);
+      INodeDirectoryWithSnapshot sdir = 
+          replaceSelf4INodeDirectoryWithSnapshot(inodeMap);
+      boolean added = sdir.addChild(node, setModTime, latest, inodeMap);
+      return added;
-      updateModificationTime(node.getModificationTime(), latest);
+      updateModificationTime(node.getModificationTime(), latest, inodeMap);

INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS8 INS44 INS44 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS25 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS25 INS83 INS43 INS42 INS65 INS83 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS8 INS42 INS42 INS42 INS42 MOV32 INS8 INS8 INS42 INS42 INS66 INS42 INS42 INS42 INS25 INS42 INS33 INS21 INS33 INS42 INS42 INS42 MOV41 INS41 INS42 INS60 INS60 INS41 INS42 INS27 INS8 INS32 INS32 INS52 INS42 INS43 INS59 INS39 INS59 INS42 INS42 INS42 INS42 INS33 INS21 INS42 INS42 INS42 INS42 MOV32 MOV42 MOV42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 MOV42 INS42 INS42 MOV42 MOV42 MOV42 MOV42 INS42 INS42 INS42 INS42 DEL32 DEL52 DEL16 DEL8 DEL32 DEL32 DEL41