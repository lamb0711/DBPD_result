Merge trunk r1603663 to branch.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1603664 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.concurrent.ConcurrentSkipListSet;
-import org.apache.hadoop.yarn.server.resourcemanager.RMServerUtils;
+  private Set<NodeId> ranNodes = new ConcurrentSkipListSet<NodeId>();
-
+    .addTransition(RMAppState.ACCEPTED, RMAppState.ACCEPTED, 
+        RMAppEventType.APP_RUNNING_ON_NODE,
+        new AppRunningOnNodeTransition())
+    .addTransition(RMAppState.RUNNING, RMAppState.RUNNING, 
+        RMAppEventType.APP_RUNNING_ON_NODE,
+        new AppRunningOnNodeTransition())
+    .addTransition(RMAppState.FINAL_SAVING, RMAppState.FINAL_SAVING, 
+        RMAppEventType.APP_RUNNING_ON_NODE,
+        new AppRunningOnNodeTransition())
+    .addTransition(RMAppState.FINISHING, RMAppState.FINISHING, 
+        RMAppEventType.APP_RUNNING_ON_NODE,
+        new AppRunningOnNodeTransition())
+    .addTransition(RMAppState.KILLING, RMAppState.KILLING, 
+        RMAppEventType.APP_RUNNING_ON_NODE,
+        new AppRunningOnNodeTransition())
+    .addTransition(RMAppState.FINISHED, RMAppState.FINISHED, 
+        RMAppEventType.APP_RUNNING_ON_NODE,
+        new AppRunningOnNodeTransition())
+    .addTransition(RMAppState.FAILED, RMAppState.FAILED, 
+        RMAppEventType.APP_RUNNING_ON_NODE,
+        new AppRunningOnNodeTransition())
+    .addTransition(RMAppState.KILLED, RMAppState.KILLED, 
+        RMAppEventType.APP_RUNNING_ON_NODE,
+        new AppRunningOnNodeTransition())
+  
+  private static final class AppRunningOnNodeTransition extends RMAppTransition {
+    public void transition(RMAppImpl app, RMAppEvent event) {
+      RMAppRunningOnNodeEvent nodeAddedEvent = (RMAppRunningOnNodeEvent) event;
+      
+      // if final state already stored, notify RMNode
+      if (isAppInFinalState(app)) {
+        app.handler.handle(
+            new RMNodeCleanAppEvent(nodeAddedEvent.getNodeId(), nodeAddedEvent
+                .getApplicationId()));
+        return;
+      }
+      
+      // otherwise, add it to ranNodes for further process
+      app.ranNodes.add(nodeAddedEvent.getNodeId());
+    };
+  }
-    private Set<NodeId> getNodesOnWhichAttemptRan(RMAppImpl app) {
-      Set<NodeId> nodes = new HashSet<NodeId>();
-      for (RMAppAttempt attempt : app.attempts.values()) {
-        nodes.addAll(attempt.getRanNodes());
-      }
-      return nodes;
-    }
-
-      Set<NodeId> nodes = getNodesOnWhichAttemptRan(app);
-      for (NodeId nodeId : nodes) {
+      for (NodeId nodeId : app.getRanNodes()) {
+
+  @Override
+  public Set<NodeId> getRanNodes() {
+    return ranNodes;
+  }

MOV26 UPD40 INS23 INS55 INS31 INS83 MOV74 MOV59 INS83 INS83 INS83 INS42 INS43 INS31 INS78 INS83 MOV74 INS42 INS8 UPD42 INS42 INS83 INS39 INS42 MOV44 INS44 INS8 INS42 INS41 UPD74 INS43 INS42 INS60 INS25 INS21 INS42 UPD43 INS32 INS42 INS40 INS40 INS42 INS43 INS59 INS32 INS8 INS32 INS32 UPD42 MOV32 MOV42 MOV40 MOV40 INS40 INS14 INS42 INS42 INS11 INS42 INS42 INS21 INS41 INS40 INS42 INS32 INS42 INS42 INS32 INS42 INS40 INS40 INS43 INS43 INS42 INS32 INS42 INS42 MOV32 MOV42 MOV40 MOV40 INS40 INS14 INS42 INS42 INS40 INS42 INS14 INS32 INS42 INS40 INS40 INS43 INS43 INS32 INS32 MOV32 MOV42 MOV40 MOV40 INS40 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS40 INS42 MOV32 MOV42 MOV40 INS40 INS40 INS14 INS32 INS42 INS40 INS40 INS43 MOV32 MOV42 MOV40 MOV40 INS40 INS14 INS42 INS43 INS32 INS42 INS40 INS40 INS42 MOV32 MOV42 MOV40 MOV40 INS40 INS14 INS43 INS42 INS32 INS42 INS40 MOV32 MOV42 MOV40 INS40 INS40 INS14 INS43 INS32 INS42 INS40 INS42 MOV32 MOV42 MOV40 INS40 INS40 MOV14 UPD40 MOV14 UPD40 UPD40 UPD40 UPD40 INS14 INS43 INS42 DEL83 DEL42 DEL60 DEL42 DEL43 DEL42 DEL44 DEL40 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL42 DEL41 DEL8 DEL31 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42