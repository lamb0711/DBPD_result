HDFS-2512. Add textual error message to data transfer protocol responses. Contributed by Todd Lipcon.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195693 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos.BlockOpResponseProto.Builder;
+import org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos.BlockOpResponseProtoOrBuilder;
-        LOG.info("opReadBlock " + block + " received exception " + e);
-        sendResponse(s, ERROR, datanode.socketWriteTimeout);
+        String msg = "opReadBlock " + block + " received exception " + e; 
+        LOG.info(msg);
+        sendResponse(s, ERROR, msg, datanode.socketWriteTimeout);
-      sendResponse(s, SUCCESS, datanode.socketWriteTimeout);
+      sendResponse(s, SUCCESS, null, datanode.socketWriteTimeout);
-          writeResponse(SUCCESS, replyOut);
+          writeResponse(SUCCESS, null, replyOut);
-      writeResponse(Status.SUCCESS, out);
+      writeResponse(Status.SUCCESS, null, out);
-        sendResponse(s, ERROR_ACCESS_TOKEN, datanode.socketWriteTimeout);
+        sendResponse(s, ERROR_ACCESS_TOKEN, "Invalid access token", datanode.socketWriteTimeout);
-      LOG.info("Not able to copy block " + block.getBlockId() + " to " 
-          + s.getRemoteSocketAddress() + " because threads quota is exceeded.");
-      sendResponse(s, ERROR, datanode.socketWriteTimeout);
+      String msg = "Not able to copy block " + block.getBlockId() + " to " 
+      + s.getRemoteSocketAddress() + " because threads quota is exceeded."; 
+      LOG.info(msg);
+      sendResponse(s, ERROR, msg, datanode.socketWriteTimeout);
-      writeResponse(SUCCESS, reply);
+      writeResponse(SUCCESS, null, reply);
-        sendResponse(s, ERROR_ACCESS_TOKEN, datanode.socketWriteTimeout);
+        sendResponse(s, ERROR_ACCESS_TOKEN, "Invalid access token",
+            datanode.socketWriteTimeout);
-      LOG.warn("Not able to receive block " + block.getBlockId() + " from " 
-          + s.getRemoteSocketAddress() + " because threads quota is exceeded.");
-      sendResponse(s, ERROR, datanode.socketWriteTimeout);
+      String msg = "Not able to receive block " + block.getBlockId() + " from " 
+          + s.getRemoteSocketAddress() + " because threads quota is exceeded."; 
+      LOG.warn(msg);
+      sendResponse(s, ERROR, msg, datanode.socketWriteTimeout);
+    String errMsg = null;
-      LOG.info("opReplaceBlock " + block + " received exception " + ioe);
+      errMsg = "opReplaceBlock " + block + " received exception " + ioe; 
+      LOG.info(errMsg);
-        sendResponse(s, opStatus, datanode.socketWriteTimeout);
+        sendResponse(s, opStatus, errMsg, datanode.socketWriteTimeout);
-  private void sendResponse(Socket s, Status status,
+  private void sendResponse(Socket s, Status status, String message,
-    writeResponse(status, reply);
+    writeResponse(status, message, reply);
-  private void writeResponse(Status status, OutputStream out)
+  private void writeResponse(Status status, String message, OutputStream out)
-    BlockOpResponseProto response = BlockOpResponseProto.newBuilder()
-      .setStatus(status)
-      .build();
-    
-    response.writeDelimitedTo(out);
+    BlockOpResponseProto.Builder response = BlockOpResponseProto.newBuilder()
+      .setStatus(status);
+    if (message != null) {
+      response.setMessage(message);
+    }
+    response.build().writeDelimitedTo(out);

INS26 INS26 INS40 INS40 INS44 INS44 INS60 INS43 INS42 INS43 INS42 INS25 INS43 INS59 INS42 INS42 UPD43 INS27 INS8 INS60 INS60 INS42 INS42 INS33 INS42 INS40 MOV32 INS42 INS33 INS21 INS32 INS43 INS59 INS43 INS59 INS21 INS32 MOV42 INS42 INS33 INS33 INS42 INS42 MOV27 INS42 INS42 INS33 INS42 INS42 MOV27 INS42 INS42 INS7 INS32 INS42 INS42 INS42 INS60 INS42 MOV27 INS42 INS42 INS42 INS43 INS59 INS42 INS42 INS42 MOV27 INS42 INS42 INS45 INS45 INS33 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32