HDDS-1207. Refactor Container Report Processing logic and plugin new Replication Manager. (#662)



-import com.google.common.base.Preconditions;
-import org.apache.hadoop.hdds.protocol.DatanodeDetails;
-import org.apache.hadoop.hdds.protocol.proto
-    .StorageContainerDatanodeProtocolProtos.ContainerReplicaProto;
-import org.apache.hadoop.hdds.scm.pipeline.PipelineManager;
-import org.apache.hadoop.hdds.scm.server
-    .SCMDatanodeHeartbeatDispatcher.IncrementalContainerReportFromDatanode;
+import java.io.IOException;
+
+import org.apache.hadoop.hdds.protocol.proto.StorageContainerDatanodeProtocolProtos
+    .ContainerReplicaProto;
+import org.apache.hadoop.hdds.scm.server.SCMDatanodeHeartbeatDispatcher
+    .IncrementalContainerReportFromDatanode;
-import java.io.IOException;
-
-public class IncrementalContainerReportHandler implements
-    EventHandler<IncrementalContainerReportFromDatanode> {
+public class IncrementalContainerReportHandler extends
+    AbstractContainerReportHandler
+    implements EventHandler<IncrementalContainerReportFromDatanode> {
-  private static final Logger LOG =
-      LoggerFactory.getLogger(IncrementalContainerReportHandler.class);
-
-  private final PipelineManager pipelineManager;
-  private final ContainerManager containerManager;
+  private static final Logger LOG = LoggerFactory.getLogger(
+      IncrementalContainerReportHandler.class);
-      final PipelineManager pipelineManager,
-    Preconditions.checkNotNull(pipelineManager);
-    Preconditions.checkNotNull(containerManager);
-    this.pipelineManager = pipelineManager;
-    this.containerManager = containerManager;
+    super(containerManager, LOG);
-  public void onMessage(
-      final IncrementalContainerReportFromDatanode containerReportFromDatanode,
-      final EventPublisher publisher) {
+  public void onMessage(final IncrementalContainerReportFromDatanode report,
+                        final EventPublisher publisher) {
-         containerReportFromDatanode.getReport().getReportList()) {
+        report.getReport().getReportList()) {
-        final DatanodeDetails datanodeDetails = containerReportFromDatanode
-            .getDatanodeDetails();
-        final ContainerID containerID = ContainerID
-            .valueof(replicaProto.getContainerID());
-        ReportHandlerHelper.processContainerReplica(containerManager,
-            containerID, replicaProto, datanodeDetails, publisher, LOG);
+        processContainerReplica(report.getDatanodeDetails(), replicaProto);

MOV26 INS43 UPD42 MOV42 INS46 UPD42 INS42 INS42 UPD42 INS32 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL83 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42