Merging r1540548 through r1540909 from trunk to branch HDFS-2832

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1540910 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.commons.lang.math.LongRange;
+  Set<String> users = null;
+  Set<String> queues = null;
+  long limit = Long.MAX_VALUE;
+  LongRange start = null, finish = null;
+  private void initUsers() {
+    if (this.users != null) {
+      return;
+    }
+    GetApplicationsRequestProtoOrBuilder p = viaProto ? proto : builder;
+    List<String> usersList = p.getUsersList();
+    this.users = new HashSet<String>();
+    this.users.addAll(usersList);
+  }
+
+  private void initQueues() {
+    if (this.queues != null) {
+      return;
+    }
+    GetApplicationsRequestProtoOrBuilder p = viaProto ? proto : builder;
+    List<String> queuesList = p.getQueuesList();
+    this.queues = new HashSet<String>();
+    this.queues.addAll(queuesList);
+  }
+
+  public void setApplicationStates(Set<String> applicationStates) {
+    EnumSet<YarnApplicationState> appStates = null;
+    for (YarnApplicationState state : YarnApplicationState.values()) {
+      if (applicationStates.contains(state.name().toLowerCase())) {
+        if (appStates == null) {
+          appStates = EnumSet.of(state);
+        } else {
+          appStates.add(state);
+        }
+      }
+    }
+    setApplicationStates(appStates);
+  }
+
+  @Override
+  public Set<String> getUsers() {
+    initUsers();
+    return this.users;
+  }
+
+  @Override
+  public void setUsers(Set<String> users) {
+    maybeInitBuilder();
+    if (users == null) {
+      builder.clearUsers();
+    }
+    this.users = users;
+  }
+
+  @Override
+  public Set<String> getQueues() {
+    initQueues();
+    return this.queues;
+  }
+
+  @Override
+  public void setQueues(Set<String> queues) {
+    maybeInitBuilder();
+    if (queues == null) {
+      builder.clearQueues();
+    }
+    this.queues = queues;
+  }
+
+  @Override
+  public long getLimit() {
+    if (this.limit == Long.MAX_VALUE) {
+      GetApplicationsRequestProtoOrBuilder p = viaProto ? proto : builder;
+      this.limit = p.hasLimit() ? p.getLimit() : Long.MAX_VALUE;
+    }
+    return this.limit;
+  }
+
+  @Override
+  public void setLimit(long limit) {
+    maybeInitBuilder();
+    this.limit = limit;
+  }
+
+  @Override
+  public LongRange getStartRange() {
+    if (this.start == null) {
+      GetApplicationsRequestProtoOrBuilder p = viaProto ? proto: builder;
+      if (p.hasStartBegin() || p.hasFinishBegin()) {
+        long begin = p.hasStartBegin() ? p.getStartBegin() : 0L;
+        long end = p.hasStartEnd() ? p.getStartEnd() : Long.MAX_VALUE;
+        this.start = new LongRange(begin, end);
+      }
+    }
+    return this.start;
+  }
+
+  @Override
+  public void setStartRange(long begin, long end)
+      throws IllegalArgumentException {
+    if (begin > end) {
+      throw new IllegalArgumentException("begin > end in range (begin, " +
+          "end): (" + begin + ", " + end + ")");
+    }
+    this.start = new LongRange(begin, end);
+  }
+
+  @Override
+  public LongRange getFinishRange() {
+    if (this.finish == null) {
+      GetApplicationsRequestProtoOrBuilder p = viaProto ? proto: builder;
+      if (p.hasFinishBegin() || p.hasFinishEnd()) {
+        long begin = p.hasFinishBegin() ? p.getFinishBegin() : 0L;
+        long end = p.hasFinishEnd() ? p.getFinishEnd() : Long.MAX_VALUE;
+        this.finish = new LongRange(begin, end);
+      }
+    }
+    return this.finish;
+  }
+
+  @Override
+  public void setFinishRange(long begin, long end) {
+    if (begin > end) {
+      throw new IllegalArgumentException("begin > end in range (begin, " +
+          "end): (" + begin + ", " + end + ")");
+    }
+    this.finish = new LongRange(begin, end);
+  }
+
+  @Override

INS26 INS40 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS74 INS59 INS74 INS59 INS39 INS59 INS43 INS59 INS59 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS74 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS74 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS43 INS43 INS42 INS33 INS43 INS43 INS42 INS33 INS42 INS40 INS42 INS42 INS33 INS42 INS33 INS25 INS60 INS60 INS21 INS21 INS25 INS60 INS60 INS21 INS21 INS42 INS74 INS42 INS60 INS70 INS21 INS42 INS43 INS43 INS21 INS41 INS42 INS74 INS42 INS21 INS25 INS21 INS42 INS43 INS43 INS21 INS41 INS42 INS74 INS42 INS21 INS25 INS21 INS42 INS25 INS41 INS42 INS39 INS42 INS21 INS21 INS42 INS42 INS25 INS41 INS42 INS39 INS42 INS39 INS42 INS42 INS25 INS21 INS42 INS42 INS25 INS41 INS42 INS39 INS42 INS39 INS42 INS25 INS21 INS42 INS42 INS42 INS42 INS27 INS8 INS43 INS59 INS74 INS59 INS7 INS32 INS27 INS8 INS43 INS59 INS74 INS59 INS7 INS32 INS43 INS43 INS74 INS59 INS44 INS32 INS8 INS32 INS42 INS42 INS32 INS22 INS43 INS43 INS32 INS27 INS8 INS7 INS42 INS42 INS32 INS22 INS43 INS43 INS32 INS27 INS8 INS7 INS27 INS8 INS22 INS32 INS7 INS27 INS8 INS22 INS27 INS8 INS7 INS27 INS8 INS22 INS27 INS8 INS7 INS22 INS33 INS41 INS42 INS42 INS16 INS43 INS43 INS42 INS32 INS22 INS14 INS22 INS42 INS42 INS22 INS33 INS41 INS42 INS42 INS16 INS43 INS43 INS42 INS32 INS22 INS14 INS22 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS33 INS43 INS42 INS42 INS42 INS25 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS33 INS21 INS22 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS33 INS21 INS22 INS42 INS22 INS40 INS60 INS21 INS52 INS42 INS42 INS22 INS42 INS22 INS33 INS60 INS25 INS52 INS42 INS42 INS42 INS53 INS22 INS14 INS22 INS33 INS60 INS25 INS52 INS42 INS42 INS42 INS53 INS22 INS14 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS74 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS74 INS52 INS42 INS42 INS42 INS42 INS32 INS8 INS32 INS52 INS42 INS32 INS52 INS42 INS52 INS42 INS43 INS59 INS7 INS52 INS42 INS52 INS42 INS43 INS59 INS27 INS8 INS14 INS52 INS42 INS43 INS42 INS42 INS52 INS42 INS43 INS59 INS27 INS8 INS14 INS52 INS42 INS43 INS42 INS42 INS43 INS43 INS43 INS43 INS42 INS42 INS32 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS16 INS22 INS16 INS42 INS42 INS16 INS32 INS32 INS60 INS60 INS21 INS43 INS27 INS42 INS42 INS42 INS16 INS32 INS32 INS60 INS60 INS21 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS27 INS8 INS8 INS42 INS42 INS42 INS52 INS42 INS32 INS32 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS39 INS59 INS39 INS59 INS7 INS42 INS27 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS39 INS59 INS39 INS59 INS7 INS42 INS27 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS33 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS16 INS42 INS16 INS22 INS14 INS45 INS45 INS42 INS16 INS42 INS16 INS22 INS14 INS45 INS45 INS7 INS32 INS32 INS32 INS34 INS32 INS32 INS40 INS52 INS42 INS43 INS42 INS42 INS32 INS32 INS34 INS32 INS32 INS40 INS52 INS42 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42