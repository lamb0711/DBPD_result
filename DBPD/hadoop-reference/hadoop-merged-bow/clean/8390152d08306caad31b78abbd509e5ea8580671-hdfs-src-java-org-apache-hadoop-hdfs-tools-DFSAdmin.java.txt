HDFS-2202. Add a new DFSAdmin command to set balancer bandwidth of datanodes without restarting.  Contributed by Eric Payne


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152401 13f79535-47bb-0310-9956-ffa450edef68

+  /**
+   * Command to ask the namenode to set the balancer bandwidth for all of the
+   * datanodes.
+   * Usage: java DFSAdmin -setBalancerBandwidth bandwidth
+   * @param argv List of of command line parameters.
+   * @param idx The index of the command that is being processed.
+   * @exception IOException 
+   */
+  public int setBalancerBandwidth(String[] argv, int idx) throws IOException {
+    long bandwidth;
+    int exitCode = -1;
+
+    try {
+      bandwidth = Long.parseLong(argv[idx]);
+    } catch (NumberFormatException nfe) {
+      System.err.println("NumberFormatException: " + nfe.getMessage());
+      System.err.println("Usage: java DFSAdmin"
+                  + " [-setBalancerBandwidth <bandwidth in bytes per second>]");
+      return exitCode;
+    }
+
+    FileSystem fs = getFS();
+    if (!(fs instanceof DistributedFileSystem)) {
+      System.err.println("FileSystem is " + fs.getUri());
+      return exitCode;
+    }
+
+    DistributedFileSystem dfs = (DistributedFileSystem) fs;
+    dfs.setBalancerBandwidth(bandwidth);
+    exitCode = 0;
+
+    return exitCode;
+  }
+
+      "\t[-setBalancerBandwidth <bandwidth>]\n" +
+
+    String setBalancerBandwidth = "-setBalancerBandwidth <bandwidth>:\n" +
+      "\tChanges the network bandwidth used by each datanode during\n" +
+      "\tHDFS block balancing.\n\n" +
+      "\t\t<bandwidth> is the maximum number of bytes per second\n" +
+      "\t\tthat will be used by each datanode. This value overrides\n" +
+      "\t\tthe dfs.balance.bandwidthPerSec parameter.\n\n" +
+      "\t\t--- NOTE: The new value is not persistent on the DataNode.---\n";
+    } else if ("setBalancerBandwidth".equals(cmd)) {
+      System.out.println(setBalancerBandwidth);
+    } else if ("-setBalancerBandwidth".equals(cmd)) {
+      System.err.println("Usage: java DFSAdmin"
+                  + " [-setBalancerBandwidth <bandwidth in bytes per second>]");
+      System.err.println("           [-setBalancerBandwidth <bandwidth in bytes per second>]");
+    } else if ("-setBalancerBandwidth".equals(cmd)) {
+      if (argv.length != 2) {
+        printUsage(cmd);
+        return exitCode;
+      }
+      } else if ("-setBalancerBandwidth".equals(cmd)) {
+        exitCode = setBalancerBandwidth(argv, i);

INS31 INS29 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS5 INS42 INS39 INS42 INS42 INS60 INS60 INS54 INS60 INS25 INS60 INS21 INS21 INS41 INS60 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS43 INS85 INS39 INS59 INS39 INS59 INS8 INS12 INS43 INS59 INS38 INS8 INS43 INS59 INS32 INS7 INS42 INS43 INS59 INS42 INS42 INS42 INS38 INS21 INS44 INS8 INS42 INS42 INS32 INS36 INS21 INS41 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS27 INS34 INS7 INS43 INS42 INS21 INS21 INS41 INS42 INS62 INS32 INS42 INS43 INS42 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS43 INS40 INS42 INS27 INS42 INS42 INS42 INS2 INS40 INS42 INS27 INS40 INS42 INS27 INS42 INS45 INS32 INS42 INS42 INS45 INS32 INS45 INS45 INS42 INS42 INS42 INS42 INS25 INS32 INS8 INS45 INS42 INS42 INS25 INS27 INS8 INS40 INS34 INS21 INS41 INS25 INS25 INS32 INS42 INS32 INS8 MOV25 INS32 INS8 MOV8 INS42 INS42 INS45 INS42 INS42 INS21 INS45 INS42 INS42 INS21 INS21 INS25 INS32 INS32 INS32 INS32 INS8 MOV25 INS40 INS42 INS42 INS40 INS42 INS27 INS40 INS42 INS45 INS45 INS42 INS42 INS21 INS45 INS45 INS7 INS42 INS32 INS42 INS42 INS42