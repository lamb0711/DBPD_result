MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68

+import static com.google.common.base.Preconditions.checkNotNull;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.http.HttpServer;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
-import static com.google.common.base.Preconditions.*;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.http.HttpServer;
-import org.apache.hadoop.yarn.util.StringHelper;
-
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
+import com.sun.jersey.api.core.ResourceConfig;
+import com.sun.jersey.core.util.FeaturesAndProperties;
+import com.sun.jersey.guice.spi.container.servlet.GuiceContainer;
+import com.sun.jersey.spi.container.servlet.ServletContainer;
-  private volatile List<String> servePathSpecs = new ArrayList<String>(); 
+  private volatile List<String> servePathSpecs = new ArrayList<String>();
+  private volatile String wsName;
-  public String[] getServePathSpecs() { 
+  public String[] getServePathSpecs() {
-   * Set a path to redirect the user to if they just go to "/". For 
-   * instance "/" goes to "/yarn/apps". This allows the filters to 
+   * Set a path to redirect the user to if they just go to "/". For
+   * instance "/" goes to "/yarn/apps". This allows the filters to
+  void setWebServices (String name) { this.wsName = name; }
+
+
+
+
+    // Add in the web services filters/serves if app has them.
+    // Using Jersey/guice integration module. If user has web services
+    // they must have also bound a default one in their webapp code.
+    if (this.wsName != null) {
+      // There seems to be an issue with the guice/jersey integration
+      // where we have to list the stuff we don't want it to serve
+      // through the guicecontainer. In this case its everything except
+      // the the web services api prefix. We can't just change the filter
+      // from /* below - that doesn't work.
+      String regex = "(?!/" + this.wsName + ")";
+      serveRegex(regex).with(DefaultWrapperServlet.class);
+
+      Map<String, String> params = new HashMap<String, String>();
+      params.put(ResourceConfig.FEATURE_IMPLICIT_VIEWABLES, "true");
+      params.put(ServletContainer.FEATURE_FILTER_FORWARD_ON_404, "true");
+      params.put(FeaturesAndProperties.FEATURE_XMLROOTELEMENT_PROCESSING, "true");
+      filter("/*").through(GuiceContainer.class, params);
+    }
+

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS26 INS26 INS26 UPD40 INS40 UPD40 INS40 INS40 INS40 INS40 INS23 INS31 INS83 INS83 INS43 INS59 INS39 INS42 INS44 INS8 INS8 INS42 INS42 INS43 INS42 INS21 MOV21 MOV21 MOV70 INS25 UPD66 UPD66 INS42 INS7 INS27 INS8 INS22 INS42 INS22 INS33 INS60 INS21 INS60 INS21 INS21 INS21 INS21 INS52 INS42 INS52 INS42 INS43 INS59 INS32 INS74 INS59 INS32 INS32 INS32 INS32 INS42 INS42 INS27 INS32 INS42 INS57 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS40 INS45 INS42 INS42 INS40 INS45 INS42 INS42 INS40 INS45 INS32 INS42 INS57 INS42 INS45 INS22 INS45 INS42 INS42 INS43 INS42 INS42 INS42 INS74 INS42 INS45 INS43 INS52 INS42 INS42 INS43 INS43 INS43 INS42 INS42 INS42 INS42 DEL8