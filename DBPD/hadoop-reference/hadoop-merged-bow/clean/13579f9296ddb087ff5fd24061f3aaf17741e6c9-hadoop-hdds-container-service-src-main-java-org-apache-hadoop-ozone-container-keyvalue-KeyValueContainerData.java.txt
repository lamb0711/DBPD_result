HDDS-173. Refactor Dispatcher and implement Handler for new ContainerIO design.

-package org.apache.hadoop.ozone.container.common.impl;
+package org.apache.hadoop.ozone.container.keyvalue;
+import org.apache.hadoop.ozone.container.common.impl.ContainerData;
+import java.util.Map;
-
-   * Constructs a KeyValueContainerData object from ProtoBuf classes.
+   * Returns a ProtoBuf Message from ContainerData.
-   * @param protoData - ProtoBuf Message
-   * @throws IOException
+   * @return Protocol Buffer Message
-  public static KeyValueContainerData getFromProtoBuf(
-      ContainerProtos.CreateContainerData protoData) throws IOException {
+  public ContainerProtos.ContainerData getProtoBufMessage() {
+    ContainerProtos.ContainerData.Builder builder = ContainerProtos
+        .ContainerData.newBuilder();
+    builder.setContainerID(this.getContainerId());
+    builder.setDbPath(this.getDbFile().getPath());
+    builder.setContainerPath(this.getMetadataPath());
+    builder.setState(this.getState());
-    long containerID;
-    ContainerProtos.ContainerType containerType;
-
-    containerID = protoData.getContainerId();
-    containerType = protoData.getContainerType();
-
-    KeyValueContainerData keyValueContainerData = new KeyValueContainerData(
-        containerType, containerID);
-
-    for (int x = 0; x < protoData.getMetadataCount(); x++) {
-      keyValueContainerData.addMetadata(protoData.getMetadata(x).getKey(),
-          protoData.getMetadata(x).getValue());
+    for (Map.Entry<String, String> entry : getMetadata().entrySet()) {
+      ContainerProtos.KeyValue.Builder keyValBuilder =
+          ContainerProtos.KeyValue.newBuilder();
+      builder.addMetadata(keyValBuilder.setKey(entry.getKey())
+          .setValue(entry.getValue()).build());
-    return keyValueContainerData;
-  }
+    if (this.getBytesUsed() >= 0) {
+      builder.setBytesUsed(this.getBytesUsed());
+    }
+    if(this.getContainerType() != null) {
+      builder.setContainerType(ContainerProtos.ContainerType.KeyValueContainer);
+    }
+
+    if(this.getContainerDBType() != null) {
+      builder.setContainerDBType(containerDBType);
+    }
+
+    return builder.build();
+  }

INS26 INS26 UPD40 INS40 INS40 INS43 INS42 UPD65 UPD40 MOV40 INS21 INS21 INS70 INS25 INS25 INS25 UPD66 UPD66 UPD43 INS32 INS32 INS32 INS32 INS44 INS32 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS32 UPD40 UPD42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS74 INS42 INS32 INS42 INS60 MOV21 INS32 INS34 INS21 INS32 INS33 INS21 INS32 INS33 INS21 INS42 INS42 INS40 INS42 INS52 MOV42 INS32 UPD42 MOV42 INS52 INS42 INS52 INS42 INS43 INS43 INS43 UPD42 MOV42 INS43 INS59 INS52 INS42 INS32 INS52 INS42 INS32 INS52 INS42 INS32 INS52 UPD42 MOV42 INS40 INS42 INS42 INS40 INS42 INS32 UPD42 INS32 INS42 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS42 INS40 INS42 INS32 UPD42 MOV42 INS52 INS42 MOV32 INS42 MOV32 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 UPD42 UPD42 MOV42 MOV42 DEL42 DEL42 DEL65 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL39 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL7 DEL42 DEL32 DEL7 DEL32 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL59 DEL60 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL8 DEL24 DEL42