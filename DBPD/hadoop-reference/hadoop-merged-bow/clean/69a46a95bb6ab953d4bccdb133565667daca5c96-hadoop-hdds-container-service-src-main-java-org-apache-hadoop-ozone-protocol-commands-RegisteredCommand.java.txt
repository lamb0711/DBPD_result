HDDS-1713. ReplicationManager fail to find proper node topology basedâ€¦ (#1112)



-import com.google.common.base.Preconditions;
+import com.google.common.base.Strings;
+import org.apache.hadoop.hdds.protocol.DatanodeDetails;
-  private String datanodeUUID;
-  private String hostname;
-  private String ipAddress;
+  private DatanodeDetails datanode;
-  public RegisteredCommand(final ErrorCode error, final String datanodeUUID,
+  public RegisteredCommand(final ErrorCode error, final DatanodeDetails node,
-    this(error, datanodeUUID, clusterID, null, null);
-  }
-  public RegisteredCommand(final ErrorCode error, final String datanodeUUID,
-      final String clusterID, final String hostname, final String ipAddress) {
-    this.datanodeUUID = datanodeUUID;
+    this.datanode = node;
-    this.hostname = hostname;
-    this.ipAddress = ipAddress;
-   * Returns datanode UUID.
+   * Returns datanode.
-   * @return - Datanode ID.
+   * @return - Datanode.
-  public String getDatanodeUUID() {
-    return datanodeUUID;
+  public DatanodeDetails getDatanode() {
+    return datanode;
-   * Returns the hostname.
-   *
-   * @return - hostname
-   */
-  public String getHostName() {
-    return hostname;
-  }
-
-  /**
-   * Returns the ipAddress of the dataNode.
-   */
-  public String getIpAddress() {
-    return ipAddress;
-  }
-
-  /**
-  public byte[] getProtoBufMessage() {
+  public SCMRegisteredResponseProto getProtoBufMessage() {
+            // TODO : Fix this later when we have multiple SCM support.
+            // .setAddressList(addressList)
-            .setDatanodeUUID(this.datanodeUUID)
+            .setDatanodeUUID(this.datanode.getUuidString())
-    if (hostname != null && ipAddress != null) {
-      builder.setHostname(hostname).setIpAddress(ipAddress);
+    if (!Strings.isNullOrEmpty(datanode.getHostName())) {
+      builder.setHostname(datanode.getHostName());
-    return builder.build().toByteArray();
+    if (!Strings.isNullOrEmpty(datanode.getIpAddress())) {
+      builder.setIpAddress(datanode.getIpAddress());
+    }
+    if (!Strings.isNullOrEmpty(datanode.getNetworkName())) {
+      builder.setNetworkName(datanode.getNetworkName());
+    }
+    if (!Strings.isNullOrEmpty(datanode.getNetworkLocation())) {
+      builder.setNetworkLocation(datanode.getNetworkLocation());
+    }
+
+    return builder.build();
-    private String datanodeUUID;
+    private DatanodeDetails datanode;
-    private String ipAddress;
-    private String hostname;
-     * sets UUID.
+     * sets datanode details.
-     * @param dnUUID - datanode UUID
+     * @param node - datanode details
-    public Builder setDatanodeUUID(String dnUUID) {
-      this.datanodeUUID = dnUUID;
+    public Builder setDatanode(DatanodeDetails node) {
+      this.datanode = node;
-     * Create this object from a Protobuf message.
-     *
-     * @param response - RegisteredCmdResponseProto
-     * @return RegisteredCommand
-     */
-    public  RegisteredCommand getFromProtobuf(SCMRegisteredResponseProto
-                                                        response) {
-      Preconditions.checkNotNull(response);
-      if (response.hasHostname() && response.hasIpAddress()) {
-        return new RegisteredCommand(response.getErrorCode(),
-            response.getDatanodeUUID(), response.getClusterID(),
-            response.getHostname(), response.getIpAddress());
-      } else {
-        return new RegisteredCommand(response.getErrorCode(),
-            response.getDatanodeUUID(), response.getClusterID());
-      }
-    }
-
-    /**
-     * sets the hostname.
-     */
-    public Builder setHostname(String host) {
-      this.hostname = host;
-      return this;
-    }
-
-    public Builder setIpAddress(String ipAddr) {
-      this.ipAddress = ipAddr;
-      return this;
-    }
-
-    /**
-      if ((this.error == ErrorCode.success) && (this.datanodeUUID == null
-          || this.datanodeUUID.isEmpty()) || (this.clusterID == null
-          || this.clusterID.isEmpty())) {
+      if ((this.error == ErrorCode.success) && (this.datanode == null
+          || Strings.isNullOrEmpty(this.datanode.getUuidString())
+          || Strings.isNullOrEmpty(this.clusterID))) {
-      if (hostname != null && ipAddress != null) {
-        return new RegisteredCommand(this.error, this.datanodeUUID,
-            this.clusterID, this.hostname, this.ipAddress);
-      } else {
-        return new RegisteredCommand(this.error, this.datanodeUUID,
-            this.clusterID);
-      }
+      return new RegisteredCommand(this.error, this.datanode, this.clusterID);

INS26 MOV23 UPD40 INS40 INS31 INS55 UPD43 UPD43 UPD42 MOV29 MOV83 MOV43 UPD42 MOV42 INS8 MOV29 INS83 INS83 INS42 INS23 MOV23 MOV23 INS31 MOV31 MOV31 MOV31 UPD42 UPD42 UPD43 UPD42 UPD42 MOV60 INS25 INS25 INS25 INS25 MOV41 INS83 INS43 INS59 INS29 MOV83 MOV43 UPD42 MOV42 MOV44 MOV8 UPD42 UPD66 UPD66 UPD42 INS38 MOV8 INS38 INS8 INS38 INS8 INS38 MOV8 MOV32 UPD42 MOV42 INS42 INS65 INS65 MOV65 UPD43 UPD42 MOV41 MOV41 UPD42 INS32 INS32 INS21 INS32 INS21 INS32 INS21 INS66 INS42 INS66 UPD42 INS27 UPD42 INS42 INS42 INS32 INS42 INS42 INS32 INS32 UPD42 MOV42 INS42 INS32 INS32 UPD42 MOV42 UPD42 MOV42 INS32 INS32 UPD42 MOV36 INS36 MOV43 INS32 INS42 INS42 MOV42 MOV42 INS32 INS42 INS42 INS42 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 INS27 UPD42 MOV22 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS27 MOV32 UPD42 MOV27 INS32 INS42 UPD42 MOV22 INS42 INS42 INS32 UPD42 MOV22 UPD42 MOV42 UPD42 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL33 DEL33 DEL17 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL14 DEL41 DEL42 DEL32 DEL52 DEL41 DEL52 DEL42 DEL22 DEL32 DEL27 DEL36 DEL27 DEL52 DEL42 DEL22 DEL33 DEL27 DEL27 DEL36 DEL27 DEL42 DEL43 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL33 DEL27 DEL42 DEL33 DEL27 DEL27 DEL8 DEL42 DEL43 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL14 DEL41 DEL8 DEL25 DEL66 DEL65 DEL66 DEL65 DEL29 DEL42 DEL43 DEL42 DEL41 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL85 DEL5 DEL42 DEL42 DEL33 DEL27 DEL42 DEL33 DEL27 DEL27 DEL25 DEL8 DEL31 DEL83 DEL83 DEL42 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL32 DEL42 DEL32 DEL27 DEL42 DEL43 DEL32 DEL32 DEL32 DEL32 DEL32 DEL14 DEL41 DEL8 DEL25 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL41 DEL8 DEL31 DEL42 DEL43 DEL31 DEL55