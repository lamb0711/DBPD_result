HADOOP-8279. Allow manual failover to be invoked when auto-failover is enabled. Contributed by Todd Lipcon.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1333288 13f79535-47bb-0310-9956-ffa450edef68

+import com.google.common.base.Preconditions;
-    if (!checkManualStateManagementOK(fromNode) ||
-        !checkManualStateManagementOK(toNode)) {
-      return -1;
+    // Check that auto-failover is consistently configured for both nodes.
+    Preconditions.checkState(
+        fromNode.isAutoFailoverEnabled() ==
+          toNode.isAutoFailoverEnabled(),
+          "Inconsistent auto-failover configs between %s and %s!",
+          fromNode, toNode);
+    
+    if (fromNode.isAutoFailoverEnabled()) {
+      if (forceFence || forceActive) {
+        // -forceActive doesn't make sense with auto-HA, since, if the node
+        // is not healthy, then its ZKFC will immediately quit the election
+        // again the next time a health check runs.
+        //
+        // -forceFence doesn't seem to have any real use cases with auto-HA
+        // so it isn't implemented.
+        errOut.println(FORCEFENCE + " and " + FORCEACTIVE + " flags not " +
+            "supported with auto-failover enabled.");
+        return -1;
+      }
+      return gracefulFailoverThroughZKFCs(toNode);
+  
+
+  /**
+   * Initiate a graceful failover by talking to the target node's ZKFC.
+   * This sends an RPC to the ZKFC, which coordinates the failover.
+   * 
+   * @param toNode the node to fail to
+   * @return status code (0 for success)
+   * @throws IOException if failover does not succeed
+   */
+  private int gracefulFailoverThroughZKFCs(HAServiceTarget toNode)
+      throws IOException {
+
+    int timeout = FailoverController.getRpcTimeoutToNewActive(getConf());
+    ZKFCProtocol proxy = toNode.getZKFCProxy(getConf(), timeout);
+    try {
+      proxy.gracefulFailover();
+      out.println("Failover to " + toNode + " successful");
+    } catch (ServiceFailedException sfe) {
+      errOut.println("Failover failed: " + sfe.getLocalizedMessage());
+      return -1;
+    }
+
+    return 0;
+  }

INS26 INS40 INS31 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS21 INS25 INS65 INS65 INS65 INS65 INS43 INS42 INS42 INS60 INS60 INS54 INS41 INS32 INS32 INS8 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS39 INS59 INS43 INS59 INS8 INS12 INS34 INS42 UPD42 MOV42 INS27 INS45 INS42 INS42 INS42 INS42 INS25 INS41 INS42 INS32 INS42 INS42 INS32 INS21 INS21 INS44 INS8 INS32 INS32 INS27 INS8 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS32 INS43 INS42 INS21 INS41 MOV42 INS42 INS42 INS42 INS42 INS42 INS21 MOV41 UPD42 MOV42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS32 INS38 INS32 INS45 INS42 INS45 INS42 INS42 INS27 INS34 INS42 INS42 INS27 INS45 INS32 INS42 INS45 INS42 INS45 INS45 INS42 INS42 DEL32 DEL38 DEL32 DEL38 DEL27 DEL8 DEL25