HDFS-12713. [READ] Refactor FileRegion and BlockAliasMap to separate out HDFS metadata and PROVIDED storage metadata. Contributed by Ewan Higgs

-  public Reader<FileRegion> getReader(Reader.Options opts)
+  public Reader<FileRegion> getReader(Reader.Options opts, String blockPoolID)
-    return createReader(o.file, o.delim, readerConf);
+    return createReader(o.file, o.delim, readerConf, blockPoolID);
-  TextReader createReader(Path file, String delim, Configuration cfg)
-      throws IOException {
+  TextReader createReader(Path file, String delim, Configuration cfg,
+      String blockPoolID) throws IOException {
-    return new TextReader(fs, file, codec, delim);
+    String filename = fileNameFromBlockPoolID(blockPoolID);
+    if (codec != null) {
+      filename = filename + codec.getDefaultExtension();
+    }
+    Path bpidFilePath = new Path(file.getParent(), filename);
+    return new TextReader(fs, bpidFilePath, codec, delim);
-  public Writer<FileRegion> getWriter(Writer.Options opts) throws IOException {
+  public Writer<FileRegion> getWriter(Writer.Options opts, String blockPoolID)
+      throws IOException {
+    String baseName = fileNameFromBlockPoolID(blockPoolID);
+    Path blocksFile = new Path(o.dir, baseName);
-      String name = o.file.getName() + codec.getDefaultExtension();
-      o.filename(new Path(o.file.getParent(), name));
-      return createWriter(o.file, codec, o.delim, cfg);
+      blocksFile = new Path(o.dir, baseName + codec.getDefaultExtension());
+      return createWriter(blocksFile, codec, o.delim, cfg);
-    return createWriter(o.file, null, o.delim, conf);
+    return createWriter(blocksFile, null, o.delim, conf);
-        new File(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_TEXT_PATH_DEFAULT).toURI()
-            .toString());
+        new File(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_TEXT_READ_FILE_DEFAULT)
+            .toURI().toString());
-          conf.get(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_TEXT_READ_PATH,
-              DFSConfigKeys.DFS_PROVIDED_ALIASMAP_TEXT_PATH_DEFAULT);
+          conf.get(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_TEXT_READ_FILE,
+              DFSConfigKeys.DFS_PROVIDED_ALIASMAP_TEXT_READ_FILE_DEFAULT);
-    private Path file =
-        new Path(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_TEXT_PATH_DEFAULT);
+    private Path dir =
+        new Path(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_TEXT_WRITE_DIR_DEFAULT);
-      String tmpfile = conf.get(
-          DFSConfigKeys.DFS_PROVIDED_ALIASMAP_TEXT_WRITE_PATH, file.toString());
-      file = new Path(tmpfile);
+      String tmpDir = conf.get(
+          DFSConfigKeys.DFS_PROVIDED_ALIASMAP_TEXT_WRITE_DIR, dir.toString());
+      dir = new Path(tmpDir);
-    public WriterOptions filename(Path file) {
-      this.file = file;
+    public WriterOptions dirName(Path dir) {
+      this.dir = dir;
-    public Path getFile() {
-      return file;
+    public Path getDir() {
+      return dir;
+    private final String blockPoolID;
+      this.blockPoolID = blockPoolIDFromFileName(file);
-      if (f.length != 6) {
+      if (f.length != 5) {
-          Long.parseLong(f[2]), Long.parseLong(f[3]), f[4],
-          Long.parseLong(f[5]));
+          Long.parseLong(f[2]), Long.parseLong(f[3]), Long.parseLong(f[4]));
-      Options filename(Path file);
+      Options dirName(Path dir);
-      out.append(token.getBlockPoolId()).append(delim);
+  @VisibleForTesting
+  public static String blockPoolIDFromFileName(Path file) {
+    if (file == null) {
+      return "";
+    }
+    String fileName = file.getName();
+    return fileName.substring("blocks_".length()).split("\\.")[0];
+  }
+
+  @VisibleForTesting
+  public static String fileNameFromBlockPoolID(String blockPoolID) {
+    return "blocks_" + blockPoolID + ".csv";
+  }

INS31 INS31 INS44 INS44 INS44 INS23 INS78 INS83 INS83 INS43 INS42 MOV44 INS8 INS78 INS83 INS83 INS43 INS42 INS44 INS8 INS43 INS42 INS43 INS42 INS60 INS25 INS60 INS43 INS42 INS60 INS60 UPD42 INS44 UPD42 INS83 INS83 INS43 INS59 INS42 INS42 INS25 INS60 INS41 INS42 INS42 INS43 INS42 INS41 INS42 INS42 INS43 INS59 INS27 INS8 INS43 INS59 INS42 MOV43 INS59 MOV43 INS59 UPD42 INS43 INS42 INS42 INS42 INS21 UPD42 INS27 INS8 INS43 INS59 INS2 INS42 INS27 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS14 UPD42 INS42 INS32 INS42 INS14 INS42 UPD40 INS42 UPD42 INS7 UPD42 INS42 INS33 INS41 INS42 INS42 INS32 INS32 INS34 INS45 INS42 INS45 INS42 INS42 INS7 INS43 INS32 INS42 INS42 INS42 INS43 INS40 INS42 INS7 UPD42 UPD42 UPD42 INS22 INS32 UPD34 INS45 INS42 INS42 INS32 INS42 INS45 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS14 INS42 UPD40 UPD40 UPD40 UPD42 UPD42 INS52 INS42 INS42 INS42 MOV2 INS42 INS42 INS32 INS42 INS32 INS43 INS40 MOV27 UPD40 UPD42 INS45 INS42 INS42 INS42 INS42 INS42 DEL42 DEL59 DEL60 DEL40 DEL42 DEL32 DEL42 DEL42 DEL40 DEL42 DEL32 DEL42 DEL14 DEL32 DEL40 DEL40 DEL42 DEL34 DEL2 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL21