YARN-10043. FairOrderingPolicy Improvements. Contributed by Manikandan R

- * An OrderingPolicy which orders SchedulableEntities for fairness (see
- * FairScheduler
- * FairSharePolicy), generally, processes with lesser usage are lesser. If
- * sizedBasedWeight is set to true then an application with high demand
- * may be prioritized ahead of an application with less usage.  This
- * is to offset the tendency to favor small apps, which could result in
- * starvation for large apps if many small ones enter and leave the queue
- * continuously (optional, default false)
+ *
+ * FairOrderingPolicy comparison goes through following steps.
+ *
+ * 1.Fairness based comparison. SchedulableEntities with lesser usage would be
+ * preferred when compared to another. If sizedBasedWeight is set to true then
+ * an application with high demand may be prioritized ahead of an application
+ * with less usage. This is to offset the tendency to favor small apps, which
+ * could result in starvation for large apps if many small ones enter and leave
+ * the queue continuously (optional, default false)
+ *
+ * 2. Compare using job submit time. SchedulableEntities submitted earlier would
+ * be preferred than later.
+ *
+ * 3. Compare demands. SchedulableEntities without resource demand get lower
+ * priority than ones which have demands.
+
+      if (res == 0) {
+        res = (int) Math.signum(r1.getStartTime() - r2.getStartTime());
+      }
+
+      if (res == 0) {
+        res = compareDemand(r1, r2);
+      }
+      return res;
+    }
+
+    private int compareDemand(SchedulableEntity s1, SchedulableEntity s2) {
+      int res = 0;
+      long demand1 = s1.getSchedulingResourceUsage()
+          .getCachedDemand(CommonNodeLabelsManager.ANY).getMemorySize();
+      long demand2 = s2.getSchedulingResourceUsage()
+          .getCachedDemand(CommonNodeLabelsManager.ANY).getMemorySize();
+
+      if ((demand1 == 0) && (demand2 > 0)) {
+        res = 1;
+      } else if ((demand2 == 0) && (demand1 > 0)) {
+        res = -1;
+      }
+

INS31 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 INS66 INS66 INS66 INS66 INS83 INS39 INS42 INS44 INS44 INS8 INS25 INS25 INS43 INS42 INS43 INS42 INS60 INS60 INS60 INS25 INS41 INS27 INS8 INS27 INS8 INS42 INS42 INS39 INS59 INS39 INS59 INS39 INS59 INS27 INS8 INS25 INS42 INS42 INS34 INS21 INS42 INS34 INS21 INS42 INS34 INS42 INS32 INS42 INS32 INS36 INS36 INS21 INS27 INS8 INS7 INS7 INS32 INS42 INS32 INS42 INS27 INS27 INS7 INS36 INS36 INS21 INS42 INS11 INS42 INS32 INS32 INS42 INS40 INS32 INS42 INS40 INS42 INS34 INS42 INS34 INS42 INS34 INS27 INS27 INS7 INS39 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS34 INS42 INS38 INS42 INS42 INS27 INS34 INS32 INS32 INS42 INS42 INS42 INS42 DEL66