Merge r1477868 through r1479732 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1479733 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.IOException;
+import java.lang.reflect.Constructor;
+import java.lang.reflect.UndeclaredThrowableException;
+
+import org.apache.hadoop.ipc.RemoteException;
+import org.apache.hadoop.yarn.exceptions.impl.pb.YarnRemoteExceptionPBImpl;
+import com.google.protobuf.ServiceException;
+
+  
+  /**
+   * Utility method that unwraps and throws appropriate exception.
+   * 
+   * @param se ServiceException
+   * @throws YarnRemoteException
+   * @throws UndeclaredThrowableException
+   */
+  public static YarnRemoteException unwrapAndThrowException(ServiceException se)
+      throws UndeclaredThrowableException {
+    if (se.getCause() instanceof RemoteException) {
+      try {
+        RemoteException re = (RemoteException) se.getCause();
+        Class<?> realClass = Class.forName(re.getClassName());
+        //YarnRemoteException is not rooted as IOException.
+        //Do the explicitly check if it is YarnRemoteException
+        if (YarnRemoteException.class.isAssignableFrom(realClass)) {
+          Constructor<? extends YarnRemoteException> cn =
+              realClass.asSubclass(YarnRemoteException.class).getConstructor(
+                  String.class);
+          cn.setAccessible(true);
+          YarnRemoteException ex = cn.newInstance(re.getMessage());
+          ex.initCause(re);
+          return ex;
+        } else {
+          throw ((RemoteException) se.getCause())
+              .unwrapRemoteException(YarnRemoteExceptionPBImpl.class);
+        }
+      } catch (IOException e1) {
+        throw new UndeclaredThrowableException(e1);
+      } catch (Exception ex) {
+        throw new UndeclaredThrowableException(
+            (RemoteException) se.getCause());
+      }
+    } else if (se.getCause() instanceof YarnRemoteException) {
+      return (YarnRemoteException) se.getCause();
+    } else if (se.getCause() instanceof UndeclaredThrowableException) {
+      throw (UndeclaredThrowableException) se.getCause();
+    } else {
+      throw new UndeclaredThrowableException(se);
+    }
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS42 INS25 INS66 INS42 INS66 INS42 INS42 INS42 INS62 INS8 INS25 INS32 INS43 INS54 INS62 INS8 INS25 INS42 INS42 INS42 INS8 INS12 INS12 INS32 INS43 INS41 INS62 INS8 INS8 INS60 INS60 INS25 INS44 INS8 INS44 INS8 INS42 INS42 INS42 INS11 INS32 INS43 INS53 INS53 INS43 INS59 INS74 INS59 INS32 INS8 INS8 INS43 INS42 INS53 INS43 INS42 INS53 INS43 INS32 INS42 INS42 INS42 INS11 INS14 INS42 INS42 INS11 INS43 INS76 INS42 INS32 INS57 INS42 INS42 INS60 INS21 INS60 INS21 INS41 INS53 INS42 INS14 INS42 INS14 INS42 INS42 INS42 INS43 INS32 INS43 INS42 INS43 INS32 INS42 INS42 INS42 INS32 INS43 INS74 INS59 INS32 INS43 INS59 INS32 INS42 INS32 INS43 INS42 INS43 INS11 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS76 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS32 INS42 INS42 INS42 INS36 INS42 INS57 INS42 INS42 INS43 INS32 INS42 INS43 INS32 INS42 INS57 INS42 INS42 INS32 INS11 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS57 INS43 INS42 INS42 INS43 INS32 INS42 INS43 INS42 INS42 INS42 INS42 INS42