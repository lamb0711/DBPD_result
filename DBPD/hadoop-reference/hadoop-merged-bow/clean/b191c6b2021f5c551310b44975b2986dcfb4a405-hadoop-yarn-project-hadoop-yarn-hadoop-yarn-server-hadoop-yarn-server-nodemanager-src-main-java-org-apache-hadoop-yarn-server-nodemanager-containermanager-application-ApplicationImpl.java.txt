YARN-2928: YARN Timeline Service v.2: alpha 1 (sjlee)

For a list of commits and contributors, see the merge branch history.

+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.yarn.conf.YarnConfiguration;
+import org.apache.hadoop.yarn.server.nodemanager.timelineservice.NMTimelinePublisher;
+  // flow context is set only if the timeline service v.2 is enabled
+  private FlowContext flowContext;
-      ApplicationId appId, Credentials credentials,
+      ApplicationId appId, Credentials credentials, Context context) {
+    this(dispatcher, user, null, appId, credentials, context, -1L);
+  }
+
+  public ApplicationImpl(Dispatcher dispatcher, String user,
+      ApplicationId appId, Credentials credentials, Context context,
+      long recoveredLogInitedTime) {
+    this(dispatcher, user, null, appId, credentials, context,
+      recoveredLogInitedTime);
+  }
+
+  public ApplicationImpl(Dispatcher dispatcher, String user,
+      FlowContext flowContext, ApplicationId appId, Credentials credentials,
+    Configuration conf = context.getConf();
+    if (YarnConfiguration.timelineServiceV2Enabled(conf)) {
+      if (flowContext == null) {
+        throw new IllegalArgumentException("flow context cannot be null");
+      }
+      this.flowContext = flowContext;
+      if (YarnConfiguration.systemMetricsPublisherEnabled(conf)) {
+        context.getNMTimelinePublisher().createTimelineClient(appId);
+      }
+    }
-      ApplicationId appId, Credentials credentials, Context context) {
-    this(dispatcher, user, appId, credentials, context, -1);
+      FlowContext flowContext, ApplicationId appId,
+      Credentials credentials, Context context) {
+    this(dispatcher, user, flowContext, appId, credentials,
+      context, -1);
+  }
+
+  /**
+   * Data object that encapsulates the flow context for the application purpose.
+   */
+  public static class FlowContext {
+    private final String flowName;
+    private final String flowVersion;
+    private final long flowRunId;
+
+    public FlowContext(String flowName, String flowVersion, long flowRunId) {
+      this.flowName = flowName;
+      this.flowVersion = flowVersion;
+      this.flowRunId = flowRunId;
+    }
+
+    public String getFlowName() {
+      return flowName;
+    }
+
+    public String getFlowVersion() {
+      return flowVersion;
+    }
+
+    public long getFlowRunId() {
+      return flowRunId;
+    }
+      // Remove collectors info for finished apps.
+      // TODO check we remove related collectors info in failure cases
+      // (YARN-3038)
+      Map<ApplicationId, String> registeredCollectors =
+          app.context.getRegisteredCollectors();
+      if (registeredCollectors != null) {
+        registeredCollectors.remove(app.getAppId());
+      }
+      // stop timelineClient when application get finished.
+      NMTimelinePublisher nmTimelinePublisher =
+          app.context.getNMTimelinePublisher();
+      if (nmTimelinePublisher != null) {
+        nmTimelinePublisher.stopTimelineClient(app.getAppId());
+      }
+
+  @Override
+  public String getFlowName() {
+    return flowContext == null ? null : flowContext.getFlowName();
+  }
+
+  @Override
+  public String getFlowVersion() {
+    return flowContext == null ? null : flowContext.getFlowVersion();
+  }
+
+  @Override
+  public long getFlowRunId() {
+    return flowContext == null ? 0L : flowContext.getFlowRunId();
+  }

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS31 INS31 INS55 INS31 INS31 INS31 INS83 INS43 INS59 INS83 INS42 INS44 INS44 INS44 INS44 INS44 INS8 INS83 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS8 INS44 INS44 INS29 INS83 INS83 INS42 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS17 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS17 INS43 INS42 INS60 INS25 INS43 INS42 INS65 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS83 INS39 INS59 INS83 INS42 INS44 INS44 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS8 INS8 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS38 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS8 INS42 INS42 INS66 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS21 INS21 INS21 INS42 INS41 INS42 INS41 INS41 MOV21 MOV21 INS60 INS25 INS60 INS25 INS16 INS16 INS16 INS34 INS42 INS42 INS32 INS42 INS42 INS42 INS25 INS21 INS25 INS42 INS42 INS7 INS7 INS7 INS42 INS42 INS42 INS74 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS27 INS33 INS32 INS27 INS33 INS32 INS27 INS34 INS32 INS42 INS42 INS27 INS8 INS7 INS32 INS8 INS22 INS42 INS22 INS42 INS22 INS42 INS43 INS43 INS43 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS33 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS33 INS53 INS22 INS42 INS42 INS42 INS42 INS21 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS40 INS42 INS32 INS40 INS42 INS32 INS14 INS52 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL8