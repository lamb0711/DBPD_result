HADOOP-8573. Configuration tries to read from an inputstream resource multiple times (Robert Evans via tgraves)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1359891 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Map.Entry;
-   * @param in InputStream to deserialize the object from. 
+   * WARNING: The contents of the InputStream will be cached, by this method. 
+   * So use this sparingly because it does increase the memory consumption.
+   * 
+   * @param in InputStream to deserialize the object from. In will be read from
+   * when a get or set is called next.  After it is read the stream will be
+   * closed. 
-    for (Resource resource : resources) {
-      loadResource(properties, resource, quiet);
+    for (int i = 0; i < resources.size(); i++) {
+      Resource ret = loadResource(properties, resources.get(i), quiet);
+      if (ret != null) {
+        resources.set(i, ret);
+      }
-  private void loadResource(Properties properties, Resource wrapper, boolean quiet) {
+  private Resource loadResource(Properties properties, Resource wrapper, boolean quiet) {
+    String name = UNKNOWN_RESOURCE;
+      Object resource = wrapper.getResource();
+      name = wrapper.getName();
+      
-
-      Object resource = wrapper.getResource();
-      String name = wrapper.getName();
+      boolean returnCachedProperties = false;
+          returnCachedProperties = true;
+      } else if (resource instanceof Properties) {
+        overlay(properties, (Properties)resource);
-          return;
+          return null;
+      Properties toAddTo = properties;
+      if(returnCachedProperties) {
+        toAddTo = new Properties();
+      }
-          loadResource(properties, new Resource(prop, name), quiet);
+          loadResource(toAddTo, new Resource(prop, name), quiet);
-              loadProperty(properties, name, key, value, finalParameter, 
+              loadProperty(toAddTo, name, key, value, finalParameter, 
-            loadProperty(properties, name, attr, value, finalParameter, 
+            loadProperty(toAddTo, name, attr, value, finalParameter, 
-        
+      
+      if (returnCachedProperties) {
+        overlay(properties, toAddTo);
+        return new Resource(toAddTo, name);
+      }
+      return null;
-      LOG.fatal("error parsing conf file: " + e);
+      LOG.fatal("error parsing conf " + name, e);
-      LOG.fatal("error parsing conf file: " + e);
+      LOG.fatal("error parsing conf " + name, e);
-      LOG.fatal("error parsing conf file: " + e);
+      LOG.fatal("error parsing conf " + name, e);
-      LOG.fatal("error parsing conf file: " + e);
+      LOG.fatal("error parsing conf " + name , e);
+  private void overlay(Properties to, Properties from) {
+    for (Entry<Object, Object> entry: from.entrySet()) {
+      to.put(entry.getKey(), entry.getValue());
+    }
+  }
+  

INS26 INS40 INS31 INS43 INS83 INS39 INS42 INS44 INS44 INS8 INS24 INS42 INS60 INS43 INS42 INS43 INS42 INS70 INS66 INS66 UPD66 INS66 INS66 INS58 INS27 INS37 INS8 MOV43 INS59 MOV60 INS42 INS42 INS44 INS32 INS8 INS39 INS59 INS42 INS32 INS42 INS60 INS25 INS42 INS42 INS21 INS60 INS25 INS25 INS41 INS74 INS42 INS42 INS42 INS21 INS42 INS34 INS42 INS42 MOV43 INS59 INS27 INS8 INS7 INS39 INS43 INS59 INS42 INS8 INS42 INS8 INS33 MOV53 MOV53 MOV53 MOV53 INS43 INS43 INS43 INS32 INS42 INS32 INS42 INS33 INS21 INS42 MOV32 UPD42 INS9 INS42 INS42 INS42 INS21 MOV25 INS21 INS41 INS42 INS42 INS42 INS42 INS42 INS32 INS32 MOV42 MOV42 INS32 MOV42 INS32 INS7 MOV27 INS32 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS25 INS33 INS42 INS14 INS25 INS42 INS42 INS42 INS43 INS42 INS42 UPD45 UPD42 UPD45 UPD42 UPD45 UPD42 UPD45 UPD42 INS62 INS8 MOV25 INS43 MOV32 INS8 MOV8 INS42 INS42 INS43 INS21 INS42 UPD42 MOV60 MOV21 MOV70 INS21 INS42 INS32 INS8 INS7 INS42 INS42 INS11 INS21 UPD42 UPD42 INS42 INS9 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 DEL42 DEL44 DEL42 DEL32 DEL21 DEL8 DEL70 DEL39 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL8 DEL25