HDFS-2477. Optimize computing the diff between a block report and the namenode state. Contributed by Tomasz Nykiel.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1196676 13f79535-47bb-0310-9956-ffa450edef68

+  /**
+   * Return the previous block on the block list for the datanode at
+   * position index. Set the previous block on the list to "to".
+   *
+   * @param index - the datanode index
+   * @param to - block to be set to previous on the list of blocks
+   * @return current previous block on the list of blocks
+   */
+  BlockInfo getSetPrevious(int index, BlockInfo to) {
+	assert this.triplets != null : "BlockInfo is not initialized";
+	assert index >= 0 && index*3+1 < triplets.length : "Index is out of bound";
+    BlockInfo info = (BlockInfo)triplets[index*3+1];
+    triplets[index*3+1] = to;
+    return info;
+  }
+
+  /**
+   * Return the next block on the block list for the datanode at
+   * position index. Set the next block on the list to "to".
+   *
+   * @param index - the datanode index
+   * @param to - block to be set to next on the list of blocks
+   *    * @return current next block on the list of blocks
+   */
+  BlockInfo getSetNext(int index, BlockInfo to) {
+	assert this.triplets != null : "BlockInfo is not initialized";
+	assert index >= 0 && index*3+2 < triplets.length : "Index is out of bound";
+    BlockInfo info = (BlockInfo)triplets[index*3+2];
+    triplets[index*3+2] = to;
+    return info;
+  }
+
+   * Remove this block from the list of blocks related to the specified
+   * DatanodeDescriptor. Insert it into the head of the list of blocks.
+   *
+   * @return the new head of the list.
+   */
+  public BlockInfo moveBlockToHead(BlockInfo head, DatanodeDescriptor dn,
+      int curIndex, int headIndex) {
+    if (head == this) {
+      return this;
+    }
+    BlockInfo next = this.getSetNext(curIndex, head);
+    BlockInfo prev = this.getSetPrevious(curIndex, null);
+
+    head.setPrevious(headIndex, this);
+    prev.setNext(prev.findDatanode(dn), next);
+    if (next != null)
+      next.setPrevious(next.findDatanode(dn), prev);
+    return this;
+  }
+
+  /**
-}
+}

INS31 INS31 INS31 INS29 INS43 INS42 INS44 INS44 INS8 INS29 INS43 INS42 INS44 INS44 INS8 INS29 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS8 INS65 INS65 INS65 INS65 INS42 INS39 INS42 INS43 INS42 INS6 INS6 INS60 INS21 INS41 INS65 INS65 INS65 INS42 INS39 INS42 INS43 INS42 INS6 INS6 INS60 INS21 INS41 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS25 INS60 INS60 INS21 INS21 INS25 INS41 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS27 INS45 INS27 INS45 INS43 INS59 INS7 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS27 INS45 INS27 INS45 INS43 INS59 INS7 INS42 INS66 INS66 INS66 INS42 INS42 INS27 INS8 INS43 INS59 INS43 INS59 INS32 INS32 INS27 INS21 INS52 INS22 INS33 INS27 INS27 INS42 INS42 INS11 INS2 INS42 INS22 INS33 INS27 INS27 INS42 INS42 INS11 INS2 INS42 INS42 INS52 INS41 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS52 INS42 INS42 INS32 INS42 INS42 INS33 INS32 INS52 INS42 INS42 INS34 INS27 INS40 INS43 INS2 INS42 INS27 INS52 INS42 INS42 INS34 INS27 INS40 INS43 INS2 INS42 INS27 INS52 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS27 INS34 INS42 INS42 INS27 INS27 INS34 INS27 INS34 INS42 INS42 INS27 INS27 INS34 INS42 INS42 INS42 INS42 INS34 INS27 INS34 INS42 INS34 INS42 INS34 INS27 INS34 INS42 INS34 INS42 INS34 INS42 INS34