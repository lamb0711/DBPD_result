YARN-495. Changed NM reboot behaviour to be a simple resync - kill all containers  and re-register with RM. Contributed by Jian He.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1466752 13f79535-47bb-0310-9956-ffa450edef68

+  private NodeStatusUpdater nodeStatusUpdater;
-    NodeStatusUpdater nodeStatusUpdater =
+    nodeStatusUpdater =
-    
-    cleanupContainers();
+
+    cleanupContainers(NodeManagerEventType.SHUTDOWN);
-  
+
+  protected void cleanupContainersOnResync() {
+    //we do not want to block dispatcher thread here
+    new Thread() {
+      @Override
+      public void run() {
+        cleanupContainers(NodeManagerEventType.RESYNC);
+        ((NodeStatusUpdaterImpl) nodeStatusUpdater ).rebootNodeStatusUpdater();
+      }
+    }.start();
+  }
+
-  protected void cleanupContainers() {
+  protected void cleanupContainers(NodeManagerEventType eventType) {
-    LOG.info("Containers still running on shutdown: " + containers.keySet());
+    LOG.info("Containers still running on " + eventType + " : "
+        + containers.keySet());
-    List<ContainerId> containerIds = new ArrayList<ContainerId>(containers.keySet());
+    List<ContainerId> containerIds =
+        new ArrayList<ContainerId>(containers.keySet());
-    long waitStartTime = System.currentTimeMillis();
-    while (!containers.isEmpty() && 
-        System.currentTimeMillis() - waitStartTime < waitForContainersOnShutdownMillis) {
-      try {
-        Thread.sleep(1000);
-      } catch (InterruptedException ex) {
-        LOG.warn("Interrupted while sleeping on container kill", ex);
+    switch (eventType) {
+    case SHUTDOWN:
+      long waitStartTime = System.currentTimeMillis();
+      while (!containers.isEmpty()
+          && System.currentTimeMillis() - waitStartTime < waitForContainersOnShutdownMillis) {
+        try {
+          Thread.sleep(1000);
+        } catch (InterruptedException ex) {
+          LOG.warn("Interrupted while sleeping on container kill on shutdown",
+            ex);
+        }
+      break;
+    case RESYNC:
+      while (!containers.isEmpty()) {
+        try {
+          Thread.sleep(1000);
+          //to remove done containers from the map
+          nodeStatusUpdater.getNodeStatusAndUpdateContainersInContext();
+        } catch (InterruptedException ex) {
+          LOG.warn("Interrupted while sleeping on container kill on resync",
+            ex);
+        }
+      }
+      break;
+    default:
+      LOG.warn("Invalid eventType: " + eventType);
-    case REBOOT:
-      stop();
-      reboot();
+    case RESYNC:
+      cleanupContainersOnResync();
+  //For testing
+  Dispatcher getNMDispatcher(){
+    return dispatcher;
+  }
+

INS23 INS31 INS31 INS83 MOV43 INS59 INS83 INS39 INS42 INS8 INS44 INS43 INS42 INS8 INS42 INS21 INS21 INS43 INS42 INS50 INS42 INS41 INS7 INS32 INS42 INS42 INS49 MOV60 MOV61 INS10 INS49 INS61 INS10 INS49 INS21 INS42 INS42 MOV32 INS40 INS14 INS42 INS42 INS42 INS38 INS8 INS32 UPD42 INS43 INS1 UPD45 INS42 INS45 INS32 INS54 INS42 INS42 INS27 UPD42 INS42 INS31 INS42 INS42 INS8 INS12 INS45 INS42 INS78 INS83 INS39 INS42 INS8 INS21 INS21 INS44 INS8 INS42 INS21 INS21 INS32 INS32 INS43 INS42 INS21 INS32 INS32 INS42 INS42 INS34 INS42 INS42 INS42 INS32 INS42 INS40 INS36 INS42 UPD45 INS42 INS42 INS45 INS42 INS11 INS43 INS42 INS42 DEL42 DEL59 DEL60 DEL42 DEL32 DEL21