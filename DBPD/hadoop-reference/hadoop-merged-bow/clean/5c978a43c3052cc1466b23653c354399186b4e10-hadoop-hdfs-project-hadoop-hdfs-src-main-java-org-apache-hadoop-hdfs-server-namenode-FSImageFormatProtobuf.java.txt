HDFS-5915. Refactor FSImageFormatProtobuf to simplify cross section reads. Contributed by Haohui Mai.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566824 13f79535-47bb-0310-9956-ffa450edef68

+  public static final class LoaderContext {
+    private String[] stringTable;
+
+    public String[] getStringTable() {
+      return stringTable;
+    }
+  }
+
+  public static final class SaverContext {
+    public static class DeduplicationMap<E> {
+      private final Map<E, Integer> map = Maps.newHashMap();
+      private DeduplicationMap() {}
+
+      static <T> DeduplicationMap<T> newMap() {
+        return new DeduplicationMap<T>();
+      }
+
+      int getId(E value) {
+        if (value == null) {
+          return 0;
+        }
+        Integer v = map.get(value);
+        if (v == null) {
+          int nv = map.size() + 1;
+          map.put(value, nv);
+          return nv;
+        }
+        return v;
+      }
+
+      int size() {
+        return map.size();
+      }
+
+      Set<Entry<E, Integer>> entrySet() {
+        return map.entrySet();
+      }
+    }
+    private final DeduplicationMap<String> stringMap = DeduplicationMap.newMap();
+
+    public DeduplicationMap<String> getStringMap() {
+      return stringMap;
+    }
+  }
+
-
-    private String[] stringTable;
+    private final LoaderContext ctx;
+      this.ctx = new LoaderContext();
-    public String[] getStringTable() {
-      return stringTable;
+    public LoaderContext getLoaderContext() {
+      return ctx;
-      stringTable = new String[s.getNumEntry() + 1];
+      ctx.stringTable = new String[s.getNumEntry() + 1];
-        stringTable[e.getId()] = e.getStr();
+        ctx.stringTable[e.getId()] = e.getStr();
+    private final SaverContext saverContext;
+
-    private StringMap stringMap = new StringMap();
+      this.saverContext = new SaverContext();
+    public SaverContext getSaverContext() {
+      return saverContext;
+    }
+
-          .setNumEntry(stringMap.size());
+          .setNumEntry(saverContext.stringMap.size());
-      for (Entry<String, Integer> e : stringMap.entrySet()) {
+      for (Entry<String, Integer> e : saverContext.stringMap.entrySet()) {
-
-    public StringMap getStringMap() {
-      return stringMap;
-    }
-  }
-
-  public static class StringMap {
-    private final Map<String, Integer> stringMap;
-
-    public StringMap() {
-      stringMap = Maps.newHashMap();
-    }
-
-    int getStringId(String str) {
-      if (str == null) {
-        return 0;
-      }
-      Integer v = stringMap.get(str);
-      if (v == null) {
-        int nv = stringMap.size() + 1;
-        stringMap.put(str, nv);
-        return nv;
-      }
-      return v;
-    }
-
-    int size() {
-      return stringMap.size();
-    }
-
-    Set<Entry<String, Integer>> entrySet() {
-      return stringMap.entrySet();
-    }

INS55 INS55 MOV23 MOV31 INS83 INS83 INS83 INS42 MOV23 MOV31 INS83 INS83 INS83 INS42 MOV55 INS23 INS31 INS23 INS31 UPD42 INS73 INS31 INS83 INS83 INS74 INS59 INS83 INS74 INS42 MOV8 INS83 INS83 INS43 INS59 INS83 INS43 INS42 INS8 INS83 UPD43 UPD43 UPD42 INS8 INS42 UPD74 INS83 INS42 INS8 UPD83 INS73 INS74 UPD42 UPD42 UPD74 INS43 MOV43 INS42 INS32 INS43 MOV43 INS42 INS42 INS21 INS42 INS41 UPD42 UPD42 INS21 UPD42 INS41 INS43 UPD42 MOV32 INS42 INS43 INS43 INS41 UPD43 UPD42 UPD74 INS42 INS42 INS42 INS42 INS7 INS42 INS7 INS42 INS42 INS42 INS42 INS14 UPD42 INS43 INS22 INS14 INS40 INS22 INS14 INS40 INS74 UPD42 UPD42 INS42 UPD42 INS52 INS42 INS43 INS52 INS42 INS43 INS43 INS43 UPD42 UPD42 INS42 INS42 INS40 INS42 INS42 UPD42 UPD42 INS40 UPD42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL43 DEL14 DEL42 DEL42