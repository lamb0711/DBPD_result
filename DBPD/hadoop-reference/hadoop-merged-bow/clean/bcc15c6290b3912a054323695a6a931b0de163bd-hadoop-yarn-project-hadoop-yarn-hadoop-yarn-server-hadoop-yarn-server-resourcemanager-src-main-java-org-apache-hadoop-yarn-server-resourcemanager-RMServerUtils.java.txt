YARN-5611. Provide an API to update lifetime of an application. Contributed by Rohith Sharma K S

+import java.text.ParseException;
+import org.apache.hadoop.yarn.util.Clock;
+import org.apache.hadoop.yarn.util.SystemClock;
+import org.apache.hadoop.yarn.util.Times;
+  private static Clock clock = SystemClock.getInstance();
+
+    case KILLING:
-        if (timeout.getValue() < 0) {
+        if (timeout.getValue() <= 0) {
+
+  /**
+   * Validate ISO8601 format with epoch time.
+   * @param timeoutsInISO8601 format
+   * @return expire time in local epoch
+   * @throws YarnException if given application timeout value is lesser than
+   *           current time.
+   */
+  public static Map<ApplicationTimeoutType, Long> validateISO8601AndConvertToLocalTimeEpoch(
+      Map<ApplicationTimeoutType, String> timeoutsInISO8601)
+      throws YarnException {
+    long currentTimeMillis = clock.getTime();
+    Map<ApplicationTimeoutType, Long> newApplicationTimeout =
+        new HashMap<ApplicationTimeoutType, Long>();
+    if (timeoutsInISO8601 != null) {
+      for (Map.Entry<ApplicationTimeoutType, String> timeout : timeoutsInISO8601
+          .entrySet()) {
+        long expireTime = 0L;
+        try {
+          expireTime =
+              Times.parseISO8601ToLocalTimeInMillis(timeout.getValue());
+        } catch (ParseException ex) {
+          String message =
+              "Expire time is not in ISO8601 format. ISO8601 supported "
+                  + "format is yyyy-MM-dd'T'HH:mm:ss.SSSZ";
+          throw new YarnException(message);
+        }
+        if (expireTime < currentTimeMillis) {
+          String message =
+              "Expire time is less than current time, current-time="
+                  + Times.formatISO8601(currentTimeMillis) + " expire-time="
+                  + Times.formatISO8601(expireTime);
+          throw new YarnException(message);
+        }
+        newApplicationTimeout.put(timeout.getKey(), expireTime);
+      }
+    }
+    return newApplicationTimeout;
+  }

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS31 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS74 INS42 INS44 INS43 INS8 INS42 INS42 INS32 MOV49 INS65 INS65 INS65 INS65 INS43 INS43 INS43 INS74 INS42 INS42 INS60 INS60 INS25 INS41 INS42 INS42 INS49 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS43 INS43 INS43 INS39 INS59 INS74 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS43 INS43 INS42 INS14 INS42 INS33 INS70 INS42 INS42 INS42 INS42 INS42 INS74 INS44 INS32 INS8 INS43 INS43 INS43 INS74 INS42 INS42 INS42 INS60 INS54 INS25 INS21 UPD27 INS42 INS42 INS42 INS43 INS43 INS43 INS39 INS59 INS8 INS12 INS27 INS8 INS32 INS40 INS42 INS42 INS42 INS34 INS21 INS44 INS8 INS42 INS42 INS60 INS53 INS42 INS42 INS32 INS42 INS7 INS43 INS42 INS60 INS53 INS43 INS59 INS14 INS42 INS42 INS42 INS32 INS42 INS43 INS59 INS14 INS42 INS42 INS27 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS27 INS43 INS42 INS45 INS32 INS45 INS32 INS42 INS42 INS42 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42