HADOOP-6903 Make AbstractFSileSystem methods and some FileContext methods to be public


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1034480 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Iterator;
-  protected Statistics getStatistics() {
+  public Statistics getStatistics() {
-  private static AbstractFileSystem createFileSystem(URI uri, Configuration conf)
+  public static AbstractFileSystem createFileSystem(URI uri, Configuration conf)
-  protected static synchronized Statistics getStatistics(String scheme,
+  public static synchronized Statistics getStatistics(String scheme,
-  protected static synchronized void clearStatistics() {
+  public static synchronized void clearStatistics() {
-  protected static synchronized void printStatistics() {
+  public static synchronized void printStatistics() {
-  static AbstractFileSystem get(final URI uri, final Configuration conf)
+  public static AbstractFileSystem get(final URI uri, final Configuration conf)
-  protected AbstractFileSystem(final URI uri, final String supportedScheme,
+  public AbstractFileSystem(final URI uri, final String supportedScheme,
-  protected void checkScheme(URI uri, String supportedScheme) {
+  /**
+   * Check that the Uri's scheme matches
+   * @param uri
+   * @param supportedScheme
+   */
+  public void checkScheme(URI uri, String supportedScheme) {
-  protected abstract int getUriDefaultPort();
+  public abstract int getUriDefaultPort();
-  protected URI getUri() {
+  public URI getUri() {
-  protected void checkPath(Path path) {
+  public void checkPath(Path path) {
-  protected String getUriPath(final Path p) {
+  public String getUriPath(final Path p) {
+   * Make the path fully qualified to this file system
+   * @param path
+   * @return the qualified path
+   */
+  public Path makeQualified(Path path) {
+    checkPath(path);
+    return path.makeQualified(this.getUri(), null);
+  }
+  
+  /**
-  protected Path getInitialWorkingDirectory() {
+  public Path getInitialWorkingDirectory() {
-  protected Path getHomeDirectory() {
+  public Path getHomeDirectory() {
-  protected abstract FsServerDefaults getServerDefaults() throws IOException; 
+  public abstract FsServerDefaults getServerDefaults() throws IOException; 
-  protected final FSDataOutputStream create(final Path f,
+  public final FSDataOutputStream create(final Path f,
-  protected abstract FSDataOutputStream createInternal(Path f,
+  public abstract FSDataOutputStream createInternal(Path f,
-  protected abstract void mkdir(final Path dir, final FsPermission permission,
+  public abstract void mkdir(final Path dir, final FsPermission permission,
-  protected abstract boolean delete(final Path f, final boolean recursive)
+  public abstract boolean delete(final Path f, final boolean recursive)
-  protected FSDataInputStream open(final Path f) throws AccessControlException,
+  public FSDataInputStream open(final Path f) throws AccessControlException,
-  protected abstract FSDataInputStream open(final Path f, int bufferSize)
+  public abstract FSDataInputStream open(final Path f, int bufferSize)
-  protected abstract boolean setReplication(final Path f,
+  public abstract boolean setReplication(final Path f,
-  protected final void rename(final Path src, final Path dst,
+  public final void rename(final Path src, final Path dst,
-  protected abstract void renameInternal(final Path src, final Path dst)
+  public abstract void renameInternal(final Path src, final Path dst)
-  protected void renameInternal(final Path src, final Path dst,
+  public void renameInternal(final Path src, final Path dst,
-  protected boolean supportsSymlinks() {
+  public boolean supportsSymlinks() {
-  protected void createSymlink(final Path target, final Path link,
+  public void createSymlink(final Path target, final Path link,
-  protected Path getLinkTarget(final Path f) throws IOException {
+  public Path getLinkTarget(final Path f) throws IOException {
-  protected abstract void setPermission(final Path f,
+  public abstract void setPermission(final Path f,
-  protected abstract void setOwner(final Path f, final String username,
+  public abstract void setOwner(final Path f, final String username,
-  protected abstract void setTimes(final Path f, final long mtime,
+  public abstract void setTimes(final Path f, final long mtime,
-  protected abstract FileChecksum getFileChecksum(final Path f)
+  public abstract FileChecksum getFileChecksum(final Path f)
-  protected abstract FileStatus getFileStatus(final Path f)
+  public abstract FileStatus getFileStatus(final Path f)
-  protected FileStatus getFileLinkStatus(final Path f)
+  public FileStatus getFileLinkStatus(final Path f)
-  protected abstract BlockLocation[] getFileBlockLocations(final Path f,
+  public abstract BlockLocation[] getFileBlockLocations(final Path f,
-  protected FsStatus getFsStatus(final Path f) throws AccessControlException,
+  public FsStatus getFsStatus(final Path f) throws AccessControlException,
-  protected abstract FsStatus getFsStatus() throws AccessControlException,
+  public abstract FsStatus getFsStatus() throws AccessControlException,
-  protected RemoteIterator<FileStatus> listStatusIterator(final Path f)
+  public RemoteIterator<FileStatus> listStatusIterator(final Path f)
-  protected RemoteIterator<LocatedFileStatus> listLocatedStatus(final Path f)
+  public RemoteIterator<LocatedFileStatus> listLocatedStatus(final Path f)
-  protected abstract FileStatus[] listStatus(final Path f)
+  public abstract FileStatus[] listStatus(final Path f)
-  protected abstract void setVerifyChecksum(final boolean verifyChecksum)
+  public abstract void setVerifyChecksum(final boolean verifyChecksum)

INS31 UPD83 UPD83 UPD83 UPD83 UPD83 INS83 UPD83 INS29 UPD83 UPD83 UPD83 UPD83 UPD83 INS29 INS83 INS43 INS42 INS44 INS8 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS21 INS41 INS66 INS42 INS42 INS66 INS42 INS66 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS33 INS52 INS42 DEL40 DEL26