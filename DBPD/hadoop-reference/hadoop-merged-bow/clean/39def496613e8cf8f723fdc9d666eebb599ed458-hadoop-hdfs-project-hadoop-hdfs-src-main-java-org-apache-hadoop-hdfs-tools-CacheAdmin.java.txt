HDFS-5485. add command-line support for modifyDirective (cmccabe)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541377 13f79535-47bb-0310-9956-ffa450edef68

+  private static class ModifyPathBasedCacheDirectiveCommand implements Command {
+    @Override
+    public String getName() {
+      return "-modifyDirective";
+    }
+
+    @Override
+    public String getShortUsage() {
+      return "[" + getName() +
+          " -id <id> [-path <path>] [-replication <replication>] " +
+          "[-pool <pool-name>] ]\n";
+    }
+
+    @Override
+    public String getLongUsage() {
+      TableListing listing = getOptionDescriptionListing();
+      listing.addRow("<id>", "The ID of the directive to modify (required)");
+      listing.addRow("<path>", "A path to cache. The path can be " +
+          "a directory or a file. (optional)");
+      listing.addRow("<replication>", "The cache replication factor to use. " +
+          "(optional)");
+      listing.addRow("<pool-name>", "The pool to which the directive will be " +
+          "added. You must have write permission on the cache pool "
+          + "in order to move a directive into it. (optional)");
+      return getShortUsage() + "\n" +
+        "Modify a PathBasedCache directive.\n\n" +
+        listing.toString();
+    }
+
+    @Override
+    public int run(Configuration conf, List<String> args) throws IOException {
+      PathBasedCacheDirective.Builder builder =
+        new PathBasedCacheDirective.Builder();
+      boolean modified = false;
+      String idString = StringUtils.popOptionWithArgument("-id", args);
+      if (idString == null) {
+        System.err.println("You must specify a directive ID with -id.");
+        return 1;
+      }
+      builder.setId(Long.parseLong(idString));
+      String path = StringUtils.popOptionWithArgument("-path", args);
+      if (path != null) {
+        builder.setPath(new Path(path));
+        modified = true;
+      }
+      String replicationString =
+        StringUtils.popOptionWithArgument("-replication", args);
+      if (replicationString != null) {
+        builder.setReplication(Short.parseShort(replicationString));
+        modified = true;
+      }
+      String poolName =
+        StringUtils.popOptionWithArgument("-pool", args);
+      if (poolName != null) {
+        builder.setPool(poolName);
+        modified = true;
+      }
+      if (!args.isEmpty()) {
+        System.err.println("Can't understand argument: " + args.get(0));
+        System.err.println("Usage is " + getShortUsage());
+        return 1;
+      }
+      if (!modified) {
+        System.err.println("No modifications were specified.");
+        return 1;
+      }
+      DistributedFileSystem dfs = getDFS(conf);
+      try {
+        dfs.modifyPathBasedCacheDirective(builder.build());
+        System.out.println("Modified PathBasedCache entry " + idString);
+      } catch (IOException e) {
+        System.err.println(prettifyException(e));
+        return 2;
+      }
+      return 0;
+    }
+  }
+
+          addField("REPLICATION", Justification.LEFT).
+            "" + directive.getReplication(),
+    new ModifyPathBasedCacheDirectiveCommand(),
+    new ListPathBasedCacheDirectiveCommand(),
-    new ListPathBasedCacheDirectiveCommand(),

INS55 INS83 INS83 INS42 INS43 INS31 INS31 INS31 INS31 INS42 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 MOV14 INS42 INS42 INS41 INS42 INS42 INS41 INS42 INS42 INS60 INS21 INS21 INS21 INS21 INS41 INS42 INS43 INS42 INS74 INS42 INS42 INS60 INS60 INS60 INS25 INS21 INS60 INS25 INS60 INS25 INS60 INS25 INS25 INS25 INS60 INS54 INS41 INS14 INS45 INS27 INS43 INS59 INS32 INS32 INS32 INS32 INS27 INS42 INS43 INS43 INS43 INS59 INS39 INS59 INS43 INS59 INS27 INS8 INS32 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS38 INS8 INS38 INS8 INS43 INS59 INS8 INS12 INS34 INS43 INS45 INS32 INS45 INS45 INS42 INS42 INS32 INS42 INS42 INS45 INS45 INS42 INS42 INS45 INS27 INS42 INS42 INS45 INS27 INS42 INS42 INS45 INS27 INS32 INS45 INS45 INS32 INS42 INS42 INS40 INS42 INS14 INS42 INS9 INS42 INS42 INS32 INS42 INS33 INS21 INS41 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS32 INS21 INS21 INS41 INS42 INS21 INS41 INS42 INS42 INS32 INS21 INS21 INS44 INS8 INS32 INS42 INS42 INS42 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS42 INS42 INS42 INS43 INS42 INS42 INS45 INS42 INS32 INS34 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS32 INS7 INS42 INS42 INS45 INS42 INS32 INS7 INS42 INS42 INS45 INS42 INS32 INS7 INS42 INS42 INS32 INS32 INS34 INS32 INS34 INS42 INS42 INS32 INS32 INS43 INS42 INS21 INS41 MOV32 INS42 INS40 INS40 INS42 INS45 INS42 INS42 INS14 INS42 INS9 INS42 INS42 INS32 INS42 INS9 INS42 INS42 INS42 INS42 INS9 INS40 INS42 INS27 INS40 INS42 INS27 INS40 INS42 INS45 INS42 INS42 INS32 INS40 INS42 INS27 INS42 INS32 INS34 UPD42 INS45 INS40 INS43 INS42 INS42 INS42 INS42 INS45 INS32 INS45 INS32 INS42 INS42 INS45 INS42 INS40 INS42 INS32 UPD45 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS27 INS45 INS32 INS42 INS42