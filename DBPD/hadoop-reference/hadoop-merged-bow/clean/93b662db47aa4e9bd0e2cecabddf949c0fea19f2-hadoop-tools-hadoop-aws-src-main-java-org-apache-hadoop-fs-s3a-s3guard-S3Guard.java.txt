HADOOP-16953. tuning s3guard disabled warnings (#1962)


Contributed by Steve Loughran.

The S3Guard absence warning of HADOOP-16484 has been changed
so that by default the S3A connector only logs at debug
when the connection to the S3 Store does not have S3Guard
enabled.

The option to control this log level is now
fs.s3a.s3guard.disabled.warn.level
and can be one of: silent, inform, warn, fail.

On a failure, an ExitException is raised with exit code 49.

For details on this safety feature, consult the s3guard documentation.

+import org.apache.hadoop.util.ExitUtil;
+import static org.apache.hadoop.service.launcher.LauncherExitCodes.EXIT_BAD_CONFIGURATION;
+  /**
+   * Format string to use when warning that S3Guard is disabled.
+   */
+  @VisibleForTesting
-      "S3Guard is disabled on this bucket: {}";
+      "S3Guard is disabled on this bucket: %s";
+  /**
+   * Error string use in exception raised on an unknown log level.
+   */
-      "Unknown S3Guard disabled warn level: ";
+      "Unknown " + S3GUARD_DISABLED_WARN_LEVEL + " value: ";
+  /**
+   * Warning levels to use when reporting S3Guard as disabled.
+   */
+  /**
+   * Log that S3Guard is disabled -optionally raise an exception.
+   * @param logger Log to log to
+   * @param warnLevelStr string value of warn action.
+   * @param bucket bucket to use in log/error messages
+   * @throws ExitUtil.ExitException if s3guard was disabled
+   *                                and the log level is "fail"
+   * @throws IllegalArgumentException unknown warning level.
+   */
-      throws UnsupportedOperationException, IllegalArgumentException {
+      throws ExitUtil.ExitException, IllegalArgumentException {
+    String text = String.format(DISABLED_LOG_MSG, bucket);
-      logger.debug(DISABLED_LOG_MSG, bucket);
+      logger.debug(text);
-      logger.info(DISABLED_LOG_MSG, bucket);
+      logger.info(text);
-      logger.warn(DISABLED_LOG_MSG, bucket);
+      logger.warn(text);
-      logger.error(DISABLED_LOG_MSG, bucket);
-      throw new UnsupportedOperationException(DISABLED_LOG_MSG + bucket);
+      logger.error(text);
+      throw new ExitUtil.ExitException(EXIT_BAD_CONFIGURATION, text);

INS26 INS26 INS40 INS40 INS29 INS78 INS29 INS29 INS29 UPD43 INS65 INS42 UPD45 INS65 INS27 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS40 INS60 INS66 INS66 INS45 INS42 INS45 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS40 INS66 INS66 INS42 INS66 INS43 INS59 INS42 INS42 INS32 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD43 INS42 INS42 INS40 DEL45 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL27