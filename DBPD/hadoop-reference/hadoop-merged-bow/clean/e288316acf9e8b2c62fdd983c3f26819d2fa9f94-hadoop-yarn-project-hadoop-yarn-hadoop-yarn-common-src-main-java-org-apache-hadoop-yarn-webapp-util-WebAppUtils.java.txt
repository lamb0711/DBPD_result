Merge trunk to HDFS-4685.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1569142 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.http.HttpConfig;
+import org.apache.hadoop.http.HttpServer2;
-import com.google.common.base.Joiner;
-
-  private static final Joiner JOINER = Joiner.on("");
-
-    if (HttpConfig.isSecure()) {
+    if (YarnConfiguration.useHttps(conf)) {
-    if (HttpConfig.isSecure()) {
+    if (YarnConfiguration.useHttps(conf)) {
-    return JOINER.join(HttpConfig.getSchemePrefix(),
-        HttpConfig.isSecure() ? conf.get(
-            YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS,
-            YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS) : conf.get(
-            YarnConfiguration.RM_WEBAPP_ADDRESS,
-            YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS));
+    return getHttpSchemePrefix(conf) + getRMWebAppURLWithoutScheme(conf);
-    if (HttpConfig.isSecure()) {
+    if (YarnConfiguration.useHttps(conf)) {
-    return HttpConfig.getSchemePrefix()
+    return getHttpSchemePrefix(conf)
-        HttpConfig.isSecure() ? Policy.HTTPS_ONLY : Policy.HTTP_ONLY);
+        YarnConfiguration.useHttps(conf) ? Policy.HTTPS_ONLY : Policy.HTTP_ONLY);
-    if (HttpConfig.isSecure()) {
+    if (YarnConfiguration.useHttps(conf)) {
-    if (HttpConfig.isSecure()) {
+    if (YarnConfiguration.useHttps(conf)) {
-    return join(HttpConfig.getSchemePrefix(), nodeHttpAddress, "/logs", "/",
+    return join("//", nodeHttpAddress, "/logs", "/",
+
+  /**
+   * Choose which scheme (HTTP or HTTPS) to use when generating a URL based on
+   * the configuration.
+   * 
+   * @return the schmeme (HTTP / HTTPS)
+   */
+  public static String getHttpSchemePrefix(Configuration conf) {
+    return YarnConfiguration.useHttps(conf) ? "https://" : "http://";
+  }
+
+  /**
+   * Load the SSL keystore / truststore into the HttpServer builder.
+   */
+  public static HttpServer2.Builder loadSslConfiguration(
+      HttpServer2.Builder builder) {
+    Configuration sslConf = new Configuration(false);
+    boolean needsClientAuth = YarnConfiguration.YARN_SSL_CLIENT_HTTPS_NEED_AUTH_DEFAULT;
+    sslConf.addResource(YarnConfiguration.YARN_SSL_SERVER_RESOURCE_DEFAULT);
+
+    return builder
+        .needsClientAuth(needsClientAuth)
+        .keyPassword(sslConf.get("ssl.server.keystore.keypassword"))
+        .keyStore(sslConf.get("ssl.server.keystore.location"),
+            sslConf.get("ssl.server.keystore.password"),
+            sslConf.get("ssl.server.keystore.type", "jks"))
+        .trustStore(sslConf.get("ssl.server.truststore.location"),
+            sslConf.get("ssl.server.truststore.password"),
+            sslConf.get("ssl.server.truststore.type", "jks"));
+  }

MOV26 MOV31 MOV31 UPD40 INS31 INS31 INS83 INS83 MOV43 INS42 MOV44 INS8 MOV43 UPD42 MOV44 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS29 INS43 UPD42 INS44 INS41 INS65 INS65 INS42 INS43 INS42 INS41 INS65 INS40 INS43 INS42 INS60 INS60 INS21 INS27 INS66 INS66 INS66 INS42 INS16 INS66 INS40 INS43 INS59 INS39 INS59 INS32 INS32 UPD42 UPD42 INS42 UPD42 UPD42 INS42 INS32 INS32 UPD42 UPD42 INS42 UPD42 UPD42 MOV42 UPD42 UPD42 INS42 UPD42 UPD42 INS42 INS45 INS32 INS45 INS45 INS42 INS42 INS14 INS42 INS40 INS42 INS42 INS40 INS32 INS42 INS32 INS32 INS32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 INS32 INS40 INS40 INS42 INS42 INS42 INS43 INS9 INS32 INS42 INS32 INS32 INS32 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS45 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS32 INS42 INS32 UPD42 MOV42 INS42 INS45 UPD42 MOV42 UPD42 MOV42 INS45 INS42 INS42 INS45 INS45 INS42 INS42 INS42 INS42 UPD42 MOV42 INS45 DEL40 DEL26 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL32 DEL59 DEL23 DEL42 DEL42 DEL32 DEL32 DEL42 DEL40 DEL40 DEL32 DEL42 DEL42 DEL40 DEL40 DEL32 DEL42 DEL42 DEL32 DEL32 DEL40 DEL40 DEL16 DEL32