YARN-4234. New put APIs in TimelineClient for ats v1.5. Contributed by Xuan Gong.

-import javax.ws.rs.core.MediaType;
-
+import org.apache.hadoop.yarn.api.records.ApplicationAttemptId;
+import org.apache.hadoop.yarn.api.records.timeline.TimelineEntityGroupId;
-import org.apache.hadoop.yarn.exceptions.YarnRuntimeException;
-
-import com.sun.jersey.api.client.WebResource;
+  private Configuration configuration;
+  private float timelineServiceVersion;
+  private TimelineWriter timelineWriter;
+    this.configuration = conf;
+    timelineServiceVersion =
+        conf.getFloat(YarnConfiguration.TIMELINE_SERVICE_VERSION,
+          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_VERSION);
+  protected void serviceStart() throws Exception {
+    timelineWriter = createTimelineWriter(
+        configuration, authUgi, client, resURI);
+  }
+
+  protected TimelineWriter createTimelineWriter(Configuration conf,
+      UserGroupInformation ugi, Client webClient, URI uri)
+      throws IOException {
+    if (Float.compare(this.timelineServiceVersion, 1.5f) == 0) {
+      return new FileSystemTimelineWriter(
+          conf, ugi, webClient, uri);
+    } else {
+      return new DirectTimelineWriter(ugi, webClient, uri);
+    }
+  }
+
+  @Override
+  protected void serviceStop() throws Exception {
+    if (this.timelineWriter != null) {
+      this.timelineWriter.close();
+    }
+    super.serviceStop();
+  }
+
+  @Override
-    TimelineEntities entitiesContainer = new TimelineEntities();
-    for (TimelineEntity entity : entities) {
-      if (entity.getEntityId() == null || entity.getEntityType() == null) {
-        throw new YarnException("Incomplete entity without entity id/type");
-      }
-      entitiesContainer.addEntity(entity);
-    }
-    ClientResponse resp = doPosting(entitiesContainer, null);
-    return resp.getEntity(TimelinePutResponse.class);
+    return timelineWriter.putEntities(entities);
-    doPosting(domain, "domain");
-  }
-
-  private ClientResponse doPosting(final Object obj, final String path)
-      throws IOException, YarnException {
-    ClientResponse resp;
-    try {
-      resp = authUgi.doAs(new PrivilegedExceptionAction<ClientResponse>() {
-        @Override
-        public ClientResponse run() throws Exception {
-          return doPostingObject(obj, path);
-        }
-      });
-    } catch (UndeclaredThrowableException e) {
-        throw new IOException(e.getCause());
-    } catch (InterruptedException ie) {
-      throw new IOException(ie);
-    }
-    if (resp == null ||
-        resp.getClientResponseStatus() != ClientResponse.Status.OK) {
-      String msg =
-          "Failed to get the response from the timeline server.";
-      LOG.error(msg);
-      if (LOG.isDebugEnabled() && resp != null) {
-        String output = resp.getEntity(String.class);
-        LOG.debug("HTTP error code: " + resp.getStatus()
-            + " Server response : \n" + output);
-      }
-      throw new YarnException(msg);
-    }
-    return resp;
+    timelineWriter.putDomain(domain);
-  @Private
-  @VisibleForTesting
-  public ClientResponse doPostingObject(Object object, String path) {
-    WebResource webResource = client.resource(resURI);
-    if (path == null) {
-      return webResource.accept(MediaType.APPLICATION_JSON)
-          .type(MediaType.APPLICATION_JSON)
-          .post(ClientResponse.class, object);
-    } else if (path.equals("domain")) {
-      return webResource.path(path).accept(MediaType.APPLICATION_JSON)
-          .type(MediaType.APPLICATION_JSON)
-          .put(ClientResponse.class, object);
-    } else {
-      throw new YarnRuntimeException("Unknown resource type");
-    }
-  }
-
+
+  @Override
+  public TimelinePutResponse putEntities(ApplicationAttemptId appAttemptId,
+      TimelineEntityGroupId groupId, TimelineEntity... entities)
+      throws IOException, YarnException {
+    if (Float.compare(this.timelineServiceVersion, 1.5f) != 0) {
+      throw new YarnException(
+        "This API is not supported under current Timeline Service Version: "
+            + timelineServiceVersion);
+    }
+
+    return timelineWriter.putEntities(appAttemptId, groupId, entities);
+  }
+
+  @Override
+  public void putDomain(ApplicationAttemptId appAttemptId,
+      TimelineDomain domain) throws IOException, YarnException {
+    if (Float.compare(this.timelineServiceVersion, 1.5f) != 0) {
+      throw new YarnException(
+        "This API is not supported under current Timeline Service Version: "
+            + timelineServiceVersion);
+    }
+    timelineWriter.putDomain(appAttemptId, domain);
+  }
+
+  @Private
+  @VisibleForTesting
+  public void setTimelineWriter(TimelineWriter writer) {
+    this.timelineWriter = writer;
+  }

MOV26 MOV26 UPD40 UPD40 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS43 INS59 INS83 INS39 INS59 INS83 INS43 INS59 MOV78 UPD83 INS42 INS43 UPD83 MOV83 UPD43 MOV43 UPD42 MOV42 MOV44 MOV44 INS44 INS44 MOV43 INS8 MOV78 INS83 INS39 INS42 MOV43 INS8 MOV78 INS83 MOV43 INS42 MOV44 MOV43 MOV43 INS8 INS78 INS83 INS39 INS42 MOV44 MOV43 MOV43 INS8 INS78 MOV83 MOV43 INS42 INS44 MOV44 MOV44 MOV43 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 MOV43 MOV43 INS8 MOV78 MOV78 INS83 INS39 INS42 INS44 INS8 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS21 INS21 INS42 UPD42 UPD43 UPD42 UPD43 UPD42 INS43 INS42 INS43 INS42 INS25 INS25 INS21 INS41 INS42 MOV21 INS42 INS43 INS42 UPD43 UPD42 UPD43 UPD42 UPD42 MOV42 INS25 INS41 INS42 INS43 INS42 INS43 INS42 INS25 INS21 INS43 INS42 INS21 INS7 INS7 INS7 UPD42 UPD42 UPD42 MOV42 INS42 INS27 INS8 INS8 INS27 INS8 INS48 INS32 UPD42 MOV42 UPD42 UPD42 INS27 INS8 INS32 UPD42 MOV42 INS42 INS27 MOV8 INS32 UPD42 MOV42 INS7 INS22 INS42 INS42 INS32 INS42 INS32 INS32 INS34 INS41 INS41 INS22 MOV33 INS21 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 UPD42 MOV42 INS32 INS34 MOV53 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS32 INS34 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS22 INS42 INS52 INS42 INS42 INS42 INS40 INS40 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS22 INS34 INS14 INS14 INS52 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS22 INS34 UPD42 MOV42 UPD42 MOV42 INS22 INS34 INS52 INS42 INS52 INS42 INS43 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS22 UPD42 MOV42 INS52 INS42 INS27 INS52 INS42 INS27 UPD42 MOV42 UPD42 MOV42 INS52 INS42 INS45 INS42 INS45 INS42 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL32 DEL33 DEL27 DEL27 DEL25 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL43 DEL42 DEL42 DEL42 DEL33 DEL32 DEL59 DEL60 DEL42 DEL42 DEL57 DEL32 DEL41 DEL8 DEL31 DEL42 DEL45 DEL32 DEL83 DEL83 DEL45 DEL42 DEL32 DEL45 DEL42 DEL27 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL83 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL1 DEL14 DEL32 DEL7 DEL21 DEL8 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL27 DEL42 DEL32 DEL40 DEL27 DEL27 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL33 DEL27 DEL27 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL60 DEL8 DEL25 DEL8 DEL25 DEL42 DEL41 DEL8 DEL31 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL40 DEL32 DEL42 DEL40 DEL32 DEL42 DEL43 DEL57 DEL42 DEL32 DEL41 DEL8 DEL45 DEL32 DEL42 DEL32 DEL40 DEL32 DEL40 DEL32 DEL42 DEL43 DEL57 DEL42 DEL32 DEL41 DEL8 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL25 DEL8 DEL31 DEL42 DEL45