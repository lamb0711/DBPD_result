HDFS-3551. WebHDFS CREATE should use client location for HTTP redirection.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1354316 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.blockmanagement.BlockManager;
+  /** Set the remote client address. */
+  static void setRemoteAddress(String remoteAddress) {
+    REMOTE_ADDRESS.set(remoteAddress);
+  }
+
-  private static DatanodeInfo chooseDatanode(final NameNode namenode,
+  static DatanodeInfo chooseDatanode(final NameNode namenode,
-      Configuration conf) throws IOException {
-    if (op == GetOpParam.Op.OPEN
+      final long blocksize, Configuration conf) throws IOException {
+    final BlockManager bm = namenode.getNamesystem().getBlockManager();
+
+    if (op == PutOpParam.Op.CREATE) {
+      //choose a datanode near to client 
+      final DatanodeDescriptor clientNode = bm.getDatanodeManager(
+          ).getDatanodeByHost(getRemoteAddress());
+      if (clientNode != null) {
+        final DatanodeDescriptor[] datanodes = bm.getBlockPlacementPolicy(
+            ).chooseTarget(path, 1, clientNode, null, blocksize);
+        if (datanodes.length > 0) {
+          return datanodes[0];
+        }
+      }
+    } else if (op == GetOpParam.Op.OPEN
+      //choose a datanode containing a replica 
-          return JspHelper.bestNode(locations.get(0), conf);
+          return JspHelper.bestNode(locations.get(0).getLocations(), false, conf);
-    return (DatanodeDescriptor)namenode.getNamesystem().getBlockManager(
-        ).getDatanodeManager().getNetworkTopology().chooseRandom(
-        NodeBase.ROOT);
+    return (DatanodeDescriptor)bm.getDatanodeManager().getNetworkTopology(
+        ).chooseRandom(NodeBase.ROOT);
+      final long blocksize,
-    final DatanodeInfo dn = chooseDatanode(namenode, path, op, openOffset, conf);
+    final DatanodeInfo dn = chooseDatanode(namenode, path, op, openOffset,
+        blocksize, conf);
-          fullpath, op.getValue(), -1L,
+          fullpath, op.getValue(), -1L, blockSize.getValue(conf),
-          fullpath, op.getValue(), -1L, bufferSize);
+          fullpath, op.getValue(), -1L, -1L, bufferSize);
-          fullpath, op.getValue(), offset.getValue(), offset, length, bufferSize);
+          fullpath, op.getValue(), offset.getValue(), -1L, offset, length, bufferSize);
-          fullpath, op.getValue(), -1L);
+          fullpath, op.getValue(), -1L, -1L);

INS26 INS40 INS31 INS29 INS83 INS39 INS42 INS44 INS8 INS44 INS44 INS65 INS43 INS42 INS21 INS83 INS39 INS42 INS60 INS25 INS83 INS39 INS42 INS66 INS42 INS32 INS83 INS43 INS59 INS27 INS8 MOV25 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS40 INS60 INS25 INS43 INS83 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS60 INS25 INS32 INS42 INS32 INS83 INS5 INS59 INS27 INS8 INS42 INS32 INS38 INS38 INS38 INS42 INS42 INS42 MOV43 INS85 INS42 INS32 INS40 INS34 INS41 INS42 INS42 INS42 INS34 INS34 INS34 INS32 INS42 INS42 INS34 INS42 INS33 INS42 INS2 INS42 INS42 INS42 INS34 INS32 INS42 INS42 MOV32 MOV42 INS9 INS42 UPD42 DEL83 DEL42 DEL42