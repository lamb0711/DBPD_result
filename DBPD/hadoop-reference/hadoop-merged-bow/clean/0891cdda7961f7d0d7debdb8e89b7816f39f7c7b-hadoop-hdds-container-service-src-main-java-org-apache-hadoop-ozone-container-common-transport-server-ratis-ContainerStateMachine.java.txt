HDDS-716. Update ozone to latest ratis snapshot build(0.3.0-aa38160-SNAPSHOT). Contributed by Mukul Kumar Singh.

+import org.apache.ratis.proto.RaftProtos.StateMachineEntryProto;
-import org.apache.ratis.proto.RaftProtos.SMLogEntryProto;
+import org.apache.ratis.proto.RaftProtos.StateMachineLogEntryProto;
-    final SMLogEntryProto log;
+    final StateMachineLogEntryProto log;
-      log = SMLogEntryProto.newBuilder()
-          .setData(commitContainerCommandProto.toByteString())
-          .setStateMachineData(dataContainerCommandProto.toByteString())
-          .build();
+      log = createSMLogEntryProto(request,
+          commitContainerCommandProto.toByteString(),
+          dataContainerCommandProto.toByteString());
-      log = SMLogEntryProto.newBuilder()
-          .setData(request.getMessage().getContent())
-          .setStateMachineData(request.getMessage().getContent())
-          .build();
+      log = createSMLogEntryProto(request,
+          request.getMessage().getContent(), request.getMessage().getContent());
-      log = SMLogEntryProto.newBuilder()
-          .setData(request.getMessage().getContent())
-          .build();
+      log = createSMLogEntryProto(request, request.getMessage().getContent(),
+          null);
+  private StateMachineLogEntryProto createSMLogEntryProto(RaftClientRequest r,
+      ByteString logData, ByteString smData) {
+    StateMachineLogEntryProto.Builder builder =
+        StateMachineLogEntryProto.newBuilder();
+
+    builder.setCallId(r.getCallId())
+        .setClientId(r.getClientId().toByteString())
+        .setLogData(logData);
+
+    if (smData != null) {
+      builder.setStateMachineEntry(StateMachineEntryProto.newBuilder()
+          .setStateMachineData(smData).build());
+    }
+    return builder.build();
+  }
+
+  private ByteString getStateMachineData(StateMachineLogEntryProto entryProto) {
+    return entryProto.getStateMachineEntry().getStateMachineData();
+  }
+
-          getRequestProto(entry.getSmLogEntry().getStateMachineData());
+          getRequestProto(getStateMachineData(entry.getStateMachineLogEntry()));
-  private ByteString readStateMachineData(LogEntryProto entry,
-      ContainerCommandRequestProto requestProto) {
+  private ByteString readStateMachineData(ContainerCommandRequestProto
+                                              requestProto) {
-            .setCmdType(Type.ReadChunk).setReadChunk(readChunkRequestProto)
+            .setCmdType(Type.ReadChunk)
+            .setReadChunk(readChunkRequestProto)
-            .setData(responseProto.getData()).setStage(Stage.WRITE_DATA);
+            .setData(responseProto.getData())
+            .setStage(Stage.WRITE_DATA);
-    SMLogEntryProto smLogEntryProto = entry.getSmLogEntry();
-    if (!smLogEntryProto.getStateMachineData().isEmpty()) {
+    StateMachineLogEntryProto smLogEntryProto = entry.getStateMachineLogEntry();
+    if (!getStateMachineData(smLogEntryProto).isEmpty()) {
-          getRequestProto(entry.getSmLogEntry().getData());
+          getRequestProto(entry.getStateMachineLogEntry().getLogData());
-                readStateMachineData(entry, requestProto),
-            chunkExecutor);
+                readStateMachineData(requestProto), chunkExecutor);
-          getRequestProto(trx.getSMLogEntry().getData());
+          getRequestProto(trx.getStateMachineLogEntry().getLogData());
+        // Make sure that in write chunk, the user data is not set
+        if (cmdType == Type.WriteChunk) {
+          Preconditions.checkArgument(requestProto
+              .getWriteChunk().getData().isEmpty());
+        }
-    takeSnapshot();

INS26 INS40 UPD40 INS31 INS31 INS83 INS43 INS42 INS44 INS44 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS60 INS21 INS25 INS41 INS42 INS43 INS42 INS41 UPD43 INS42 INS42 INS42 INS43 INS59 INS32 INS27 INS8 INS32 INS42 INS32 UPD43 UPD42 INS40 INS42 INS32 INS32 INS42 INS42 INS42 INS33 INS21 INS42 INS42 INS32 INS42 UPD42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS42 UPD42 MOV32 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS25 UPD42 MOV42 UPD42 MOV42 MOV32 MOV32 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS27 INS8 INS42 INS42 MOV32 UPD42 MOV42 MOV42 MOV32 INS33 INS32 INS42 INS42 INS42 UPD42 UPD42 INS42 INS40 INS21 MOV32 INS42 INS42 UPD42 UPD42 UPD42 INS32 UPD42 UPD42 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21