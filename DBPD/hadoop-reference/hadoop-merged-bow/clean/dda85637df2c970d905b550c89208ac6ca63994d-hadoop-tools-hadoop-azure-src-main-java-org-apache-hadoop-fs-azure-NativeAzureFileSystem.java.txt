Merge trunk to branch.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1608603 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.concurrent.atomic.AtomicInteger;
-import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.fs.azure.metrics.AzureFileSystemInstrumentation;
+import org.apache.hadoop.fs.azure.metrics.AzureFileSystemMetricsSystem;
+import org.apache.hadoop.metrics2.lib.DefaultMetricsSystem;
-
-    public void close() throws IOException {
+    public synchronized void close() throws IOException {
+  private AzureFileSystemInstrumentation instrumentation;
+  // A counter to create unique (within-process) names for my metrics sources.
+  private static AtomicInteger metricsSourceNameCounter = new AtomicInteger();
+  
+   * Creates a new metrics source name that's unique within this process.
+   */
+  @VisibleForTesting
+  public static String newMetricsSourceName() {
+    int number = metricsSourceNameCounter.incrementAndGet();
+    final String baseName = "AzureFileSystemMetrics";
+    if (number == 1) { // No need for a suffix for the first one
+      return baseName;
+    } else {
+      return baseName + number;
+    }
+  }
+  
+  /**
-    store.initialize(uri, conf);
+    // Make sure the metrics system is available before interacting with Azure
+    AzureFileSystemMetricsSystem.fileSystemStarted();
+    String sourceName = newMetricsSourceName(),
+        sourceDesc = "Azure Storage Volume File System metrics";
+    instrumentation = DefaultMetricsSystem.instance().register(sourceName,
+        sourceDesc, new AzureFileSystemInstrumentation(conf));
+    AzureFileSystemMetricsSystem.registerSource(sourceName, sourceDesc,
+        instrumentation);
+
+    store.initialize(uri, conf, instrumentation);
-  AzureNativeFileSystemStore getStore() {
+  public AzureNativeFileSystemStore getStore() {
+  
+  /**
+   * Gets the metrics source for this file system.
+   * This is mainly here for unit testing purposes.
+   *
+   * @return the metrics source.
+   */
+  public AzureFileSystemInstrumentation getInstrumentation() {
+    return instrumentation;
+  }
+    
+    // Increment the counter
+    instrumentation.fileCreated();
+    
+      instrumentation.fileDeleted();
+          instrumentation.fileDeleted();
+      instrumentation.directoryDeleted();
+    instrumentation.directoryCreated();
+    
+    
+    // Notify the metrics system that this file system is closed, which may
+    // trigger one final metrics push to get the accurate final file system
+    // metrics out.
+
+    long startTime = System.currentTimeMillis();
+
+    AzureFileSystemMetricsSystem.fileSystemClosed();
+
+    if (LOG.isDebugEnabled()) {
+        LOG.debug("Submitting metrics when file system closed took "
+                + (System.currentTimeMillis() - startTime) + " ms.");
+    }

MOV26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS23 INS31 INS31 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS29 INS78 INS83 INS83 INS43 INS42 INS8 INS83 INS29 INS83 INS43 INS42 INS8 INS8 INS83 INS42 INS42 INS42 INS42 INS14 INS65 INS42 INS42 INS60 INS60 INS25 INS21 INS60 INS21 INS21 INS65 INS65 INS42 INS41 INS21 INS21 MOV21 MOV21 INS60 INS21 INS25 INS43 INS66 INS39 INS59 INS83 INS43 INS59 INS27 INS8 INS8 INS32 INS43 INS59 INS59 INS7 INS32 INS66 INS66 INS66 INS42 INS32 INS32 INS39 INS59 INS32 INS32 INS8 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS34 INS41 INS41 INS42 INS42 INS42 INS42 INS32 INS42 INS45 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS21 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS27 INS42 INS32 INS42 INS42 INS42 INS14 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS45 INS36 INS45 INS21 INS27 INS32 INS32 INS42 INS42 INS42 INS42 INS42 DEL8