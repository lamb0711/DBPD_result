HDFS-12895. RBF: Add ACL support for mount table. Contributed by Yiqun Lin.

+import org.apache.hadoop.fs.permission.FsAction;
+import org.apache.hadoop.hdfs.server.federation.router.RouterAdminServer;
+import org.apache.hadoop.hdfs.server.federation.router.RouterPermissionChecker;
+import org.apache.hadoop.security.AccessControlException;
-    boolean status = getDriver().put(request.getEntry(), false, true);
+    MountTable mountTable = request.getEntry();
+    if (mountTable != null) {
+      RouterPermissionChecker pc = RouterAdminServer.getPermissionChecker();
+      if (pc != null) {
+        pc.checkPermission(mountTable, FsAction.WRITE);
+      }
+    }
+
+    boolean status = getDriver().put(mountTable, false, true);
-    MountTable entry = request.getEntry();
-    boolean status = getDriver().put(entry, true, true);
+    MountTable mountTable = request.getEntry();
+    if (mountTable != null) {
+      RouterPermissionChecker pc = RouterAdminServer.getPermissionChecker();
+      if (pc != null) {
+        pc.checkPermission(mountTable, FsAction.WRITE);
+      }
+    }
+
+    boolean status = getDriver().put(mountTable, true, true);
-    int removedRecords = getDriver().remove(getRecordClass(), query);
-    boolean status = (removedRecords == 1);
+    final MountTable deleteEntry = getDriver().get(getRecordClass(), query);
+
+    boolean status = false;
+    if (deleteEntry != null) {
+      RouterPermissionChecker pc = RouterAdminServer.getPermissionChecker();
+      if (pc != null) {
+        pc.checkPermission(deleteEntry, FsAction.WRITE);
+      }
+      status = getDriver().remove(deleteEntry);
+    }
+
-
+    RouterPermissionChecker pc =
+        RouterAdminServer.getPermissionChecker();
-    Collections.sort(records);
+    Collections.sort(records, MountTable.SOURCE_COMPARATOR);
+        } else if (pc != null) {
+          // do the READ permission check
+          try {
+            pc.checkPermission(record, FsAction.READ);
+          } catch (AccessControlException ignored) {
+            // Remove this mount table entry if it cannot
+            // be accessed by current user.
+            it.remove();
+          }

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 MOV60 INS25 INS60 INS25 INS60 INS25 INS60 INS27 INS8 INS43 INS59 INS27 INS8 INS83 INS43 MOV39 INS59 INS27 INS8 INS43 INS59 UPD42 INS42 INS33 INS60 INS25 INS42 INS42 MOV32 INS42 INS33 INS60 INS25 INS42 UPD42 MOV42 INS9 UPD42 MOV42 INS33 INS60 INS25 INS21 INS42 INS42 INS32 INS40 INS43 INS59 INS27 INS8 MOV32 INS42 INS43 INS59 INS27 INS8 MOV32 UPD42 UPD42 INS43 INS59 INS27 INS8 INS7 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS25 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS40 INS42 INS27 INS8 INS42 INS33 INS54 INS8 INS12 INS21 INS44 INS8 INS32 INS43 INS42 INS21 INS42 INS42 INS42 INS40 INS42 INS32 INS42 INS42 DEL39 DEL34 DEL27 DEL36 DEL59 DEL60