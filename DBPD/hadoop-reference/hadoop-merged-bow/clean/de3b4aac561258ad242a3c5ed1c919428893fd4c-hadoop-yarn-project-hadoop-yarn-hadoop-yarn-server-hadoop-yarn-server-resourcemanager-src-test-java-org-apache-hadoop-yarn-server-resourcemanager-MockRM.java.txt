YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan

+import java.util.EnumSet;
+  private void waitForState(ApplicationId appId, EnumSet<RMAppState> finalStates)
+      throws InterruptedException {
+    RMApp app = getRMContext().getRMApps().get(appId);
+    Assert.assertNotNull("app shouldn't be null", app);
+    final int timeoutMsecs = 80 * SECOND;
+    int timeWaiting = 0;
+    while (!finalStates.contains(app.getState())) {
+      if (timeWaiting >= timeoutMsecs) {
+        break;
+      }
+
+      LOG.info("App : " + appId + " State is : " + app.getState() +
+          " Waiting for state : " + finalStates);
+      Thread.sleep(WAIT_MS_PER_LOOP);
+      timeWaiting += WAIT_MS_PER_LOOP;
+    }
+
+    LOG.info("App State is : " + app.getState());
+    Assert.assertTrue("App State is not correct (timeout).",
+        finalStates.contains(app.getState()));
+  }
+
-    while (!finalState.equals(attempt.getAppAttemptState())) {
+    while (finalState != attempt.getAppAttemptState()) {
-      attempt.getState());
+        attempt.getState());
+  public static MockAM launchAMWhenAsyncSchedulingEnabled(RMApp app, MockRM rm)
+      throws Exception {
+    int i = 0;
+    while (app.getCurrentAppAttempt() == null) {
+      if (i < 100) {
+        i++;
+      }
+      Thread.sleep(50);
+    }
+
+    RMAppAttempt attempt = app.getCurrentAppAttempt();
+
+    rm.waitForState(attempt.getAppAttemptId(),
+        RMAppAttemptState.ALLOCATED);
+    MockAM am = rm.sendAMLaunched(attempt.getAppAttemptId());
+    rm.waitForState(attempt.getAppAttemptId(), RMAppAttemptState.LAUNCHED);
+
+    return am;
+  }
+

INS26 INS40 INS31 INS31 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS83 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS43 INS42 INS74 INS42 INS42 INS60 INS21 INS60 INS60 INS61 INS21 INS21 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS61 INS60 INS21 INS60 INS21 INS41 INS42 INS43 INS43 INS43 INS59 INS32 INS83 INS39 INS59 INS39 INS59 INS38 INS8 INS32 INS32 INS27 INS42 INS42 INS39 INS59 INS27 INS8 INS43 INS59 INS32 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS27 INS42 INS34 INS32 INS25 INS21 INS21 INS21 INS42 INS42 INS27 INS42 INS42 INS45 INS32 INS42 MOV32 INS42 INS34 INS32 INS33 INS25 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS40 INS42 INS42 INS32 INS42 INS42 INS32 INS40 INS32 INS42 INS42 INS34 INS42 INS42 INS42 INS32 INS27 INS8 INS32 INS32 INS7 INS45 INS32 INS42 INS42 INS32 INS42 INS42 INS27 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS10 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS21 INS42 INS42 INS34 INS42 INS42 INS42 INS45 INS42 INS45 INS32 INS45 INS42 INS37 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL38