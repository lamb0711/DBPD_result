HDFS-8557 Allow to configure RS and XOR raw coders. Contributed by Kai Zheng

-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.io.erasurecode.rawcoder.RawErasureCoder;
-import org.apache.hadoop.io.erasurecode.rawcoder.RawErasureCoderFactory;
-import org.apache.hadoop.io.erasurecode.rawcoder.RawErasureDecoder;
-import org.apache.hadoop.io.erasurecode.rawcoder.RawErasureEncoder;
-  /**
-   * Create raw decoder using the factory specified by rawCoderFactoryKey
-   * @param rawCoderFactoryKey
-   * @return raw decoder
-   */
-  protected RawErasureDecoder createRawDecoder(
-          String rawCoderFactoryKey, int dataUnitsCount, int parityUnitsCount) {
-    RawErasureCoder rawCoder = createRawCoder(getConf(),
-        rawCoderFactoryKey, false, dataUnitsCount, parityUnitsCount);
-    return (RawErasureDecoder) rawCoder;
-  }
-
-  /**
-   * Create raw encoder using the factory specified by rawCoderFactoryKey
-   * @param rawCoderFactoryKey
-   * @return raw encoder
-   */
-  protected RawErasureEncoder createRawEncoder(
-          String rawCoderFactoryKey, int dataUnitsCount, int parityUnitsCount) {
-    RawErasureCoder rawCoder = createRawCoder(getConf(),
-        rawCoderFactoryKey, true, dataUnitsCount, parityUnitsCount);
-    return (RawErasureEncoder) rawCoder;
-  }
-
-  /**
-   * Create raw coder using specified conf and raw coder factory key.
-   * @param conf
-   * @param rawCoderFactoryKey
-   * @param isEncoder
-   * @return raw coder
-   */
-  public static RawErasureCoder createRawCoder(Configuration conf,
-      String rawCoderFactoryKey, boolean isEncoder, int numDataUnits,
-                                               int numParityUnits) {
-
-    if (conf == null) {
-      return null;
-    }
-
-    Class<? extends RawErasureCoderFactory> factClass = null;
-    factClass = conf.getClass(rawCoderFactoryKey,
-        factClass, RawErasureCoderFactory.class);
-
-    if (factClass == null) {
-      return null;
-    }
-
-    RawErasureCoderFactory fact;
-    try {
-      fact = factClass.newInstance();
-    } catch (InstantiationException e) {
-      throw new RuntimeException("Failed to create raw coder", e);
-    } catch (IllegalAccessException e) {
-      throw new RuntimeException("Failed to create raw coder", e);
-    }
-
-    return isEncoder ? fact.createEncoder(numDataUnits, numParityUnits) :
-            fact.createDecoder(numDataUnits, numParityUnits);
-  }
-
-      this(schema.getNumDataUnits(), schema.getNumParityUnits());
+    this(schema.getNumDataUnits(), schema.getNumParityUnits());

DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL42 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL9 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL11 DEL41 DEL8 DEL31 DEL66 DEL65 DEL42 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL9 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL11 DEL41 DEL8 DEL31 DEL66 DEL65 DEL42 DEL65 DEL42 DEL65 DEL42 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL33 DEL27 DEL33 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL7 DEL21 DEL42 DEL33 DEL27 DEL33 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL16 DEL41 DEL8 DEL31