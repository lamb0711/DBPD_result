HDFS-10638. Modifications to remove the assumption that StorageLocation is associated with java.io.File in Datanode. (Virajith Jalaparti via lei)

-import java.util.Collection;
-      File dataDir, StorageLocation location, StartupOption startOpt,
+      StorageLocation location, StartupOption startOpt,
-    StorageDirectory sd = new StorageDirectory(dataDir, null, true, location);
+    StorageDirectory sd = new StorageDirectory(
+        nsInfo.getBlockPoolID(), null, true, location);
-        LOG.info("Block pool storage directory " + dataDir + " does not exist");
-        throw new IOException("Storage directory " + dataDir
-            + " does not exist");
+        LOG.info("Block pool storage directory for location " + location +
+            " and block pool id " + nsInfo.getBlockPoolID() +
+            " does not exist");
+        throw new IOException("Storage directory for location " + location +
+            " and block pool id " + nsInfo.getBlockPoolID() +
+            " does not exist");
-        LOG.info("Block pool storage directory " + dataDir
+        LOG.info("Block pool storage directory for location " + location +
+            " and block pool id " + nsInfo.getBlockPoolID()
-      Collection<File> dataDirs, StorageLocation location,
-      StartupOption startOpt, List<Callable<StorageDirectory>> callables,
-      Configuration conf) throws IOException {
+      StorageLocation location, StartupOption startOpt,
+      List<Callable<StorageDirectory>> callables, Configuration conf)
+          throws IOException {
-      for (File dataDir : dataDirs) {
-        if (containsStorageDir(dataDir)) {
-          throw new IOException(
-              "BlockPoolSliceStorage.recoverTransitionRead: " +
-                  "attempt to load an used block storage: " + dataDir);
-        }
-        final StorageDirectory sd = loadStorageDirectory(
-            nsInfo, dataDir, location, startOpt, callables, conf);
-        succeedDirs.add(sd);
+      if (containsStorageDir(location, nsInfo.getBlockPoolID())) {
+        throw new IOException(
+            "BlockPoolSliceStorage.recoverTransitionRead: " +
+                "attempt to load an used block storage: " + location);
+      final StorageDirectory sd = loadStorageDirectory(
+          nsInfo, location, startOpt, callables, conf);
+      succeedDirs.add(sd);
-      Collection<File> dataDirs, StorageLocation location,
-      StartupOption startOpt, List<Callable<StorageDirectory>> callables,
-      Configuration conf) throws IOException {
+      StorageLocation location, StartupOption startOpt,
+      List<Callable<StorageDirectory>> callables, Configuration conf)
+          throws IOException {
-        nsInfo, dataDirs, location, startOpt, callables, conf);
+        nsInfo, location, startOpt, callables, conf);

MOV43 INS25 MOV60 MOV21 MOV43 INS32 INS32 MOV8 INS42 INS42 INS42 INS42 INS32 MOV45 UPD42 MOV42 UPD42 MOV42 UPD45 UPD42 INS45 INS32 UPD45 UPD42 INS45 INS32 UPD45 UPD42 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 DEL40 DEL26 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL32 DEL25 DEL8 DEL70 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42