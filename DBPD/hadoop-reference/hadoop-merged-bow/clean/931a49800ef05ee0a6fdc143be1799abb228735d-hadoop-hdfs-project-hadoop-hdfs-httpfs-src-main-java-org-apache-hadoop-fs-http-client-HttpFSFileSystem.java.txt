HDFS-6874. Add GETFILEBLOCKLOCATIONS operation to HttpFS.  Contributed by Weiwei Yang

+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.databind.type.MapType;
+import org.apache.hadoop.fs.BlockLocation;
+  public static final String OFFSET_PARAM = "offset";
+  public static final String LENGTH_PARAM = "length";
+  public static final String BLOCK_LOCATIONS_JSON = "BlockLocations";
+  @Override
+  public BlockLocation[] getFileBlockLocations(FileStatus file, long start,
+      long len) throws IOException {
+    Map<String, String> params = new HashMap<String, String>();
+    params.put(OP_PARAM, Operation.GETFILEBLOCKLOCATIONS.toString());
+    params.put(OFFSET_PARAM, Long.toString(start));
+    params.put(LENGTH_PARAM, Long.toString(len));
+    HttpURLConnection conn =
+        getConnection(Operation.GETFILEBLOCKLOCATIONS.getMethod(), params,
+            file.getPath(), true);
+    HttpExceptionUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);
+    JSONObject json = (JSONObject) HttpFSUtils.jsonParse(conn);
+    return toBlockLocations(json);
+  }
+
+  private BlockLocation[] toBlockLocations(JSONObject json)
+      throws IOException {
+    ObjectMapper mapper = new ObjectMapper();
+    MapType subType = mapper.getTypeFactory().constructMapType(
+        Map.class,
+        String.class,
+        BlockLocation[].class);
+    MapType rootType = mapper.getTypeFactory().constructMapType(
+        Map.class,
+        mapper.constructType(String.class),
+        mapper.constructType(subType));
+
+    Map<String, Map<String, BlockLocation[]>> jsonMap = mapper
+        .readValue(json.toJSONString(), rootType);
+    Map<String, BlockLocation[]> locationMap = jsonMap
+        .get(BLOCK_LOCATIONS_JSON);
+    BlockLocation[] locationArray = locationMap.get(
+        BlockLocation.class.getSimpleName());
+    return locationArray;
+  }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS23 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS78 INS83 INS5 INS42 INS44 INS44 INS44 INS43 INS8 INS83 INS5 INS42 INS44 INS43 INS8 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS43 INS85 INS43 INS42 INS39 INS42 INS39 INS42 INS42 INS60 INS21 INS21 INS21 INS60 INS21 INS60 INS41 INS43 INS85 INS43 INS42 INS42 INS60 INS60 INS60 INS60 INS60 INS60 INS41 INS42 INS42 INS74 INS59 INS32 INS32 INS32 INS43 INS59 INS32 INS43 INS59 INS32 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS74 INS59 INS74 INS59 INS5 INS59 INS42 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS43 INS74 INS42 INS32 INS43 INS43 INS5 INS42 INS32 INS43 INS85 INS42 INS32 INS42 INS42 INS42 INS74 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS9 INS43 INS32 INS43 INS32 INS42 INS57 INS57 INS57 INS32 INS42 INS57 INS32 INS32 INS42 INS42 INS43 INS43 INS5 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS43 INS43 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS5 INS42 INS42 INS43 INS42 INS42 INS57 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS57 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS42 INS43 INS42 INS43 INS42 INS42 INS42