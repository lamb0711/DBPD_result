Merge branch 'HDFS-9806' into trunk

+import org.apache.hadoop.fs.StorageType;
-      list.add(new File(it.next().getCurrentDir(), fileName));
+      File currentDir = it.next().getCurrentDir();
+      if (currentDir != null) {
+        list.add(new File(currentDir, fileName));
+      }
-      this(new File(location.getBpURI(bpid, STORAGE_DIR_CURRENT)), dirType,
+      this(getBlockPoolCurrentDir(bpid, location), dirType,
+    private static File getBlockPoolCurrentDir(String bpid,
+        StorageLocation location) {
+      if (location == null ||
+          location.getStorageType() == StorageType.PROVIDED) {
+        return null;
+      } else {
+        return new File(location.getBpURI(bpid, STORAGE_DIR_CURRENT));
+      }
+    }
+
-      if (location == null) {
+      if (location == null ||
+          location.getStorageType() == StorageType.PROVIDED) {
+      if (curDir == null) {
+        // if the directory is null, there is nothing to do.
+        return;
+      }
+      if (root == null) {
+        return null;
+      }
+      if (root == null) {
+        return null;
+      }
+      if (root == null) {
+        return null;
+      }
+      if (root == null) {
+        return null;
+      }
+      if (root == null) {
+        return null;
+      }
+      if (root == null) {
+        return null;
+      }
+      if (root == null) {
+        return null;
+      }
+      if (root == null) {
+        return null;
+      }
+      if (root == null) {
+        return null;
+      }
-      if(!currentDir.exists()) {
+      if(currentDir == null || !currentDir.exists()) {
+
+      if (location != null &&
+          location.getStorageType() == StorageType.PROVIDED) {
+        // currently we assume that PROVIDED storages are always NORMAL
+        return StorageState.NORMAL;
+      }
+
+      if (curDir == null || root == null) {
+        // at this point, we do not support recovery on PROVIDED storages
+        return;
+      }
-      return "Storage Directory " + this.root;
+      return "Storage Directory root= " + this.root +
+          "; location= " + this.location;
+    if (to == null) {
+      return;
+    }

INS26 INS40 INS31 INS8 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS25 INS8 INS17 INS42 INS43 INS42 INS43 INS42 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS27 INS8 INS60 INS25 INS32 INS42 INS42 INS42 INS42 INS42 INS27 INS8 MOV8 INS27 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS8 INS27 INS27 INS8 INS27 INS8 INS42 INS33 INS41 MOV43 INS59 INS27 INS8 INS42 INS42 INS42 INS27 INS27 INS41 INS41 MOV27 INS27 INS42 INS33 INS41 INS42 INS33 INS41 INS42 INS33 INS41 INS42 INS33 INS41 INS42 INS33 INS41 INS42 INS33 INS41 INS42 INS33 INS41 INS42 INS33 INS41 INS42 INS33 INS41 INS42 INS33 INS41 INS27 MOV38 INS27 INS27 INS41 INS27 INS27 INS41 UPD45 INS45 INS22 INS42 MOV32 INS42 INS33 MOV21 INS42 INS33 INS32 INS40 INS33 MOV14 INS32 INS40 INS33 INS33 INS33 INS33 INS33 INS33 INS33 INS33 INS33 INS42 INS33 INS42 INS33 INS32 INS40 INS40 INS42 INS33 INS42 INS33 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 DEL8 DEL42 DEL42 DEL42 DEL17