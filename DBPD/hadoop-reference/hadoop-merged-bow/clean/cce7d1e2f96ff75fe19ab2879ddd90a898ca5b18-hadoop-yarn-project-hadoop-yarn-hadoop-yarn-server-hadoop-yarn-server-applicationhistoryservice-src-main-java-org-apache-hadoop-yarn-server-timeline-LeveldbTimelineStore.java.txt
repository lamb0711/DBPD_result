Merge remote-tracking branch 'origin/trunk' into MR-2841

Conflicts:
	hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/MapTask.java

+import static org.fusesource.leveldbjni.JniDBFactory.bytes;
+import org.apache.hadoop.yarn.proto.YarnServerCommonProtos.VersionProto;
+import org.apache.hadoop.yarn.server.records.Version;
+import org.apache.hadoop.yarn.server.records.impl.pb.VersionPBImpl;
+import org.iq80.leveldb.DBException;
+  
+  private static final String TIMELINE_STORE_VERSION_KEY = "timeline-store-version";
+  
+  private static final Version CURRENT_VERSION_INFO = Version
+      .newInstance(1, 0);
+    checkVersion();
-  // warning is suppressed to prevent eclipse from noting unclosed resource
-  @SuppressWarnings("resource")
+  
+  Version loadVersion() throws IOException {
+    byte[] data = db.get(bytes(TIMELINE_STORE_VERSION_KEY));
+    // if version is not stored previously, treat it as 1.0.
+    if (data == null || data.length == 0) {
+      return Version.newInstance(1, 0);
+    }
+    Version version =
+        new VersionPBImpl(VersionProto.parseFrom(data));
+    return version;
+  }
+  
+  // Only used for test
+  @VisibleForTesting
+  void storeVersion(Version state) throws IOException {
+    dbStoreVersion(state);
+  }
+  
+  private void dbStoreVersion(Version state) throws IOException {
+    String key = TIMELINE_STORE_VERSION_KEY;
+    byte[] data = 
+        ((VersionPBImpl) state).getProto().toByteArray();
+    try {
+      db.put(bytes(key), data);
+    } catch (DBException e) {
+      throw new IOException(e);
+    }
+  }
+
+  Version getCurrentVersion() {
+    return CURRENT_VERSION_INFO;
+  }
+  
+  /**
+   * 1) Versioning timeline store: major.minor. For e.g. 1.0, 1.1, 1.2...1.25, 2.0 etc.
+   * 2) Any incompatible change of TS-store is a major upgrade, and any
+   *    compatible change of TS-store is a minor upgrade.
+   * 3) Within a minor upgrade, say 1.1 to 1.2:
+   *    overwrite the version info and proceed as normal.
+   * 4) Within a major upgrade, say 1.2 to 2.0:
+   *    throw exception and indicate user to use a separate upgrade tool to
+   *    upgrade timeline store or remove incompatible old state.
+   */
+  private void checkVersion() throws IOException {
+    Version loadedVersion = loadVersion();
+    LOG.info("Loaded timeline store version info " + loadedVersion);
+    if (loadedVersion.equals(getCurrentVersion())) {
+      return;
+    }
+    if (loadedVersion.isCompatibleTo(getCurrentVersion())) {
+      LOG.info("Storing timeline store version info " + getCurrentVersion());
+      dbStoreVersion(CURRENT_VERSION_INFO);
+    } else {
+      String incompatibleMessage = 
+          "Incompatible version for timeline store: expecting version " 
+              + getCurrentVersion() + ", but loading version " + loadedVersion;
+      LOG.fatal(incompatibleMessage);
+      throw new IOException(incompatibleMessage);
+    }
+  }
+  

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS43 INS42 INS43 INS8 INS78 INS39 INS42 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS43 INS42 INS8 INS29 INS83 INS39 INS42 INS43 INS8 INS42 INS42 INS45 INS42 INS42 INS32 INS21 INS42 INS42 INS60 INS25 INS60 INS41 INS42 INS43 INS42 INS42 INS21 INS43 INS42 INS42 INS60 INS60 INS54 INS42 INS41 INS65 INS42 INS60 INS21 INS25 INS25 INS42 INS42 INS34 INS34 INS32 INS5 INS59 INS27 INS8 INS43 INS59 INS42 INS42 INS32 INS42 INS43 INS59 INS5 INS59 INS8 INS12 INS42 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS43 INS59 INS32 INS32 INS8 INS32 INS8 INS8 INS42 INS39 INS85 INS42 INS32 INS27 INS27 INS41 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS39 INS85 INS42 INS32 INS21 INS44 INS8 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS32 INS41 INS42 INS42 INS32 INS21 INS21 INS60 INS21 INS53 INS42 INS42 INS32 INS42 INS33 INS40 INS34 INS32 INS43 INS32 INS32 INS42 INS32 INS43 INS42 INS53 INS42 INS45 INS42 INS42 INS42 INS32 INS32 INS43 INS59 INS32 INS14 INS42 INS42 INS42 INS42 INS34 INS34 INS42 INS42 INS42 INS42 INS36 INS42 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS43 INS42 INS11 INS42 INS42 INS43 INS42 INS45 INS32 INS45 INS32 INS45 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 DEL42 DEL45 DEL79