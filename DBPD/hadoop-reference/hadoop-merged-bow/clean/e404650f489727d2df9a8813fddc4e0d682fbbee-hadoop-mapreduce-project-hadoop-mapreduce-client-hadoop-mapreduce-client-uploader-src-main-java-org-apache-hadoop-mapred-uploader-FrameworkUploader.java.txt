MAPREDUCE-7030. Uploader tool should ignore symlinks to the same directory (miklos.szegedi@cloudera.com via rkanter)

+import java.nio.file.Files;
+import java.nio.file.NotLinkException;
+import java.nio.file.Paths;
+  private boolean ignoreSymlink = false;
-  @VisibleForTesting
-  OutputStream targetStream = null;
+  private OutputStream targetStream = null;
+    if (ignoreSymlink && !excluded) {
+      excluded = checkSymlink(jar);
+    }
+  /**
+   * Check if the file is a symlink to the same directory.
+   * @param jar The file to check
+   * @return true, to ignore the directory
+   */
+  @VisibleForTesting
+  boolean checkSymlink(File jar) {
+    if (Files.isSymbolicLink(jar.toPath())) {
+      try {
+        java.nio.file.Path link = Files.readSymbolicLink(jar.toPath());
+        java.nio.file.Path jarPath = Paths.get(jar.getAbsolutePath());
+        String linkString = link.toString();
+        java.nio.file.Path jarParent = jarPath.getParent();
+        java.nio.file.Path linkPath =
+            jarParent == null ? null : jarParent.resolve(linkString);
+        java.nio.file.Path linkPathParent =
+            linkPath == null ? null : linkPath.getParent();
+        java.nio.file.Path normalizedLinkPath =
+            linkPathParent == null ? null : linkPathParent.normalize();
+        if (normalizedLinkPath != null && jarParent.equals(
+            normalizedLinkPath)) {
+          LOG.info(String.format("Ignoring same directory link %s to %s",
+              jarPath.toString(), link.toString()));
+          return true;
+        }
+      } catch (NotLinkException ex) {
+        LOG.debug("Not a link", jar);
+      } catch (IOException ex) {
+        LOG.warn("Cannot read symbolic link on", jar);
+      }
+    }
+    return false;
+  }
+
+    opts.addOption(OptionBuilder
+        .withDescription("Ignore symlinks into the same directory")
+        .create("nosymlink"));
+    if (parser.getCommandLine().hasOption("nosymlink")) {
+      ignoreSymlink = true;
+    }

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS31 INS83 INS39 INS59 INS83 INS29 MOV78 INS39 INS42 INS44 INS8 INS42 INS9 INS25 INS65 INS65 INS65 INS43 INS42 INS25 INS41 INS21 INS25 INS27 INS8 INS66 INS42 INS66 INS66 INS42 INS32 INS8 INS9 INS32 INS32 INS8 INS42 INS38 INS21 INS42 INS42 INS32 INS54 INS42 INS42 INS32 INS32 INS42 INS45 INS21 INS42 INS7 INS42 INS42 INS8 INS12 INS12 INS32 INS42 INS45 INS42 INS42 INS7 INS42 INS32 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS25 INS44 INS8 INS44 INS8 INS42 INS42 INS45 INS42 INS9 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS27 INS8 INS43 INS42 INS21 INS43 INS42 INS21 INS40 INS42 INS32 INS40 INS42 INS32 INS42 INS42 INS32 INS40 INS42 INS32 INS40 INS42 INS16 INS40 INS42 INS16 INS40 INS42 INS16 INS27 INS32 INS21 INS41 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS27 INS33 INS32 INS27 INS33 INS32 INS27 INS33 INS32 INS42 INS33 INS42 INS42 INS42 INS32 INS9 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS32 INS32 INS42 INS42 INS42 INS42