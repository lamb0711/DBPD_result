Merge trunk into HDFS-1623 branch.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1158072 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.*;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+import java.util.NavigableSet;
+import java.util.TreeSet;
-/* Class for keeping track of under replication blocks
+/** Keep track of under replication blocks.
-public class UnderReplicatedBlocks implements Iterable<Block> {
+class UnderReplicatedBlocks implements Iterable<Block> {
-  static public final int QUEUE_WITH_CORRUPT_BLOCKS = 4;
-  private List<TreeSet<Block>> priorityQueues = new ArrayList<TreeSet<Block>>();
+  static final int QUEUE_WITH_CORRUPT_BLOCKS = 4;
+  private final List<NavigableSet<Block>> priorityQueues
+      = new ArrayList<NavigableSet<Block>>();
-  /* constructor */
+  /** Create an object. */
-  /* Return the total number of under replication blocks */
-  public synchronized int size() {
+  /** Return the total number of under replication blocks */
+  synchronized int size() {
-  /* Return the number of under replication blocks excluding corrupt blocks */
+  /** Return the number of under replication blocks excluding corrupt blocks */
-  /* Check if a block is in the neededReplication queue */
-  public synchronized boolean contains(Block block) {
-    for(TreeSet<Block> set:priorityQueues) {
+  /** Check if a block is in the neededReplication queue */
+  synchronized boolean contains(Block block) {
+    for(NavigableSet<Block> set : priorityQueues) {
-  /* Return the priority of a block
+  /** Return the priority of a block
-  /* add a block to a under replication queue according to its priority
+  /** add a block to a under replication queue according to its priority
-  /* remove a block from a under replication queue */
+  /** remove a block from a under replication queue */
-  /* remove a block from a under replication queue given a priority*/
+  /** remove a block from a under replication queue given a priority*/
-  /* update the priority level of a block */
+  /** update the priority level of a block */
-  /* returns an iterator of all blocks in a given priority queue */
+  /** returns an iterator of all blocks in a given priority queue */
-  /* return an iterator of all the under replication blocks */
+  /** return an iterator of all the under replication blocks */
-  public class BlockIterator implements Iterator<Block> {
+  class BlockIterator implements Iterator<Block> {
-    BlockIterator()  
-    {
+    private BlockIterator() {
-    BlockIterator(int l) {
+    private BlockIterator(int l) {
+    @Override
+    @Override
+    @Override
-    public int getPriority() {
+    int getPriority() {
-    };
+    }

INS26 INS26 INS26 INS26 INS40 INS40 UPD40 INS40 INS40 INS29 INS65 INS83 UPD74 MOV74 INS29 INS29 INS29 INS29 INS29 INS29 INS29 INS29 INS29 INS29 INS29 INS66 INS66 INS66 MOV43 UPD74 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS83 INS83 INS78 INS78 INS78 UPD43 UPD74 MOV74 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS42 INS42 UPD42 MOV43 UPD74 UPD74 UPD43 UPD43 UPD42 UPD42 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83