Merge HDFS-4685 to trunk.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1569870 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.fs.permission.AclEntry;
+import org.apache.hadoop.fs.permission.AclStatus;
+import org.apache.hadoop.hdfs.protocol.AclException;
+  void modifyAclEntries(String src, List<AclEntry> aclSpec)
+      throws IOException {
+    checkOpen();
+    try {
+      namenode.modifyAclEntries(src, aclSpec);
+    } catch(RemoteException re) {
+      throw re.unwrapRemoteException(AccessControlException.class,
+                                     AclException.class,
+                                     FileNotFoundException.class,
+                                     NSQuotaExceededException.class,
+                                     SafeModeException.class,
+                                     SnapshotAccessControlException.class,
+                                     UnresolvedPathException.class);
+    }
+  }
+
+  void removeAclEntries(String src, List<AclEntry> aclSpec)
+      throws IOException {
+    checkOpen();
+    try {
+      namenode.removeAclEntries(src, aclSpec);
+    } catch(RemoteException re) {
+      throw re.unwrapRemoteException(AccessControlException.class,
+                                     AclException.class,
+                                     FileNotFoundException.class,
+                                     NSQuotaExceededException.class,
+                                     SafeModeException.class,
+                                     SnapshotAccessControlException.class,
+                                     UnresolvedPathException.class);
+    }
+  }
+
+  void removeDefaultAcl(String src) throws IOException {
+    checkOpen();
+    try {
+      namenode.removeDefaultAcl(src);
+    } catch(RemoteException re) {
+      throw re.unwrapRemoteException(AccessControlException.class,
+                                     AclException.class,
+                                     FileNotFoundException.class,
+                                     NSQuotaExceededException.class,
+                                     SafeModeException.class,
+                                     SnapshotAccessControlException.class,
+                                     UnresolvedPathException.class);
+    }
+  }
+
+  void removeAcl(String src) throws IOException {
+    checkOpen();
+    try {
+      namenode.removeAcl(src);
+    } catch(RemoteException re) {
+      throw re.unwrapRemoteException(AccessControlException.class,
+                                     AclException.class,
+                                     FileNotFoundException.class,
+                                     NSQuotaExceededException.class,
+                                     SafeModeException.class,
+                                     SnapshotAccessControlException.class,
+                                     UnresolvedPathException.class);
+    }
+  }
+
+  void setAcl(String src, List<AclEntry> aclSpec) throws IOException {
+    checkOpen();
+    try {
+      namenode.setAcl(src, aclSpec);
+    } catch(RemoteException re) {
+      throw re.unwrapRemoteException(AccessControlException.class,
+                                     AclException.class,
+                                     FileNotFoundException.class,
+                                     NSQuotaExceededException.class,
+                                     SafeModeException.class,
+                                     SnapshotAccessControlException.class,
+                                     UnresolvedPathException.class);
+    }
+  }
+
+  AclStatus getAclStatus(String src) throws IOException {
+    checkOpen();
+    try {
+      return namenode.getAclStatus(src);
+    } catch(RemoteException re) {
+      throw re.unwrapRemoteException(AccessControlException.class,
+                                     AclException.class,
+                                     FileNotFoundException.class,
+                                     UnresolvedPathException.class);
+    }
+  }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS31 INS39 INS42 INS44 INS44 INS43 INS8 INS39 INS42 INS44 INS44 INS43 INS8 INS39 INS42 INS44 INS43 INS8 INS39 INS42 INS44 INS43 INS8 INS39 INS42 INS44 INS44 INS43 INS8 INS43 INS42 INS44 INS43 INS8 INS43 INS42 INS74 INS42 INS42 INS21 INS54 INS43 INS42 INS74 INS42 INS42 INS21 INS54 INS43 INS42 INS42 INS21 INS54 INS43 INS42 INS42 INS21 INS54 INS43 INS42 INS74 INS42 INS42 INS21 INS54 INS42 INS43 INS42 INS42 INS21 INS54 INS42 INS43 INS43 INS32 INS8 INS12 INS42 INS43 INS43 INS32 INS8 INS12 INS42 INS32 INS8 INS12 INS42 INS32 INS8 INS12 INS42 INS43 INS43 INS32 INS8 INS12 INS42 INS32 INS8 INS12 INS42 INS42 INS42 INS21 INS44 INS8 INS42 INS42 INS42 INS21 INS44 INS8 INS42 INS21 INS44 INS8 INS42 INS21 INS44 INS8 INS42 INS42 INS42 INS21 INS44 INS8 INS42 INS41 INS44 INS8 INS32 INS43 INS42 INS53 INS32 INS43 INS42 INS53 INS32 INS43 INS42 INS53 INS32 INS43 INS42 INS53 INS32 INS43 INS42 INS53 INS32 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS57 INS57 INS57 INS57 INS57 INS57 INS57 INS42 INS42 INS57 INS57 INS57 INS57 INS57 INS57 INS57 INS42 INS42 INS57 INS57 INS57 INS57 INS57 INS57 INS57 INS42 INS42 INS57 INS57 INS57 INS57 INS57 INS57 INS57 INS42 INS42 INS57 INS57 INS57 INS57 INS57 INS57 INS57 INS42 INS42 INS57 INS57 INS57 INS57 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42