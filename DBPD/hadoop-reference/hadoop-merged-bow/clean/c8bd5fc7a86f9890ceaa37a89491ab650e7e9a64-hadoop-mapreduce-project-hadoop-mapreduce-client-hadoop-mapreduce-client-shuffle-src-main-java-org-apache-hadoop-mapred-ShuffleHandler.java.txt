MAPREDUCE-6850. Shuffle Handler keep-alive connections are closed from the server side. Contributed by Jonathan Eagles

+import org.jboss.netty.channel.ChannelHandler;
+import org.jboss.netty.handler.timeout.IdleState;
+import org.jboss.netty.handler.timeout.IdleStateAwareChannelHandler;
+import org.jboss.netty.handler.timeout.IdleStateEvent;
+import org.jboss.netty.handler.timeout.IdleStateHandler;
+import org.jboss.netty.util.HashedWheelTimer;
+import org.jboss.netty.util.Timer;
+  private static final String TIMEOUT_HANDLER = "timeout";
-  int connectionKeepAliveTimeOut;
-  int mapOutputMetaInfoCacheSize;
+  private int connectionKeepAliveTimeOut;
+  private int mapOutputMetaInfoCacheSize;
+  private Timer timer;
-        future.getChannel().close();
+        // Let the idle timer handler close keep-alive connections
+        if (reduceContext.getKeepAlive()) {
+          ChannelPipeline pipeline = future.getChannel().getPipeline();
+          TimeoutHandler timeoutHandler =
+              (TimeoutHandler)pipeline.get(TIMEOUT_HANDLER);
+          timeoutHandler.setEnabledTimeout(true);
+        } else {
+          future.getChannel().close();
+        }
+    private final boolean keepAlive;
-                         String jobId) {
+                         String jobId, boolean keepAlive) {
+      this.keepAlive = keepAlive;
+
+    public boolean getKeepAlive() {
+      return keepAlive;
+    }
+    // Timer is shared across entire factory and must be released separately
+    timer = new HashedWheelTimer();
-      pipelineFact = new HttpPipelineFactory(conf);
+      pipelineFact = new HttpPipelineFactory(conf, timer);
+    if (timer != null) {
+      // Release this shared timer resource
+      timer.stop();
+    }
+  static class TimeoutHandler extends IdleStateAwareChannelHandler {
+
+    private boolean enabledTimeout;
+
+    void setEnabledTimeout(boolean enabledTimeout) {
+      this.enabledTimeout = enabledTimeout;
+    }
+
+    @Override
+    public void channelIdle(ChannelHandlerContext ctx, IdleStateEvent e) {
+      if (e.getState() == IdleState.WRITER_IDLE && enabledTimeout) {
+        e.getChannel().close();
+      }
+    }
+  }
+
+    private final ChannelHandler idleStateHandler;
-    public HttpPipelineFactory(Configuration conf) throws Exception {
+    public HttpPipelineFactory(Configuration conf, Timer timer) throws Exception {
+      this.idleStateHandler = new IdleStateHandler(timer, 0, connectionKeepAliveTimeOut, 0);
+      pipeline.addLast("idle", idleStateHandler);
+      pipeline.addLast(TIMEOUT_HANDLER, new TimeoutHandler());
+      ChannelPipeline pipeline = ch.getPipeline();
+      TimeoutHandler timeoutHandler =
+          (TimeoutHandler)pipeline.get(TIMEOUT_HANDLER);
+      timeoutHandler.setEnabledTimeout(false);
+      boolean keepAlive = keepAliveParam || connectionKeepAliveEnabled;
-          user, mapOutputInfoMap, jobId);
+          user, mapOutputInfoMap, jobId, keepAlive);

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS55 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS23 INS31 INS83 INS42 INS43 INS23 INS31 INS31 INS23 INS42 INS42 INS45 INS42 INS42 INS83 INS83 INS39 INS59 INS44 INS83 INS39 INS42 INS8 INS21 INS25 INS42 INS83 INS39 INS59 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS83 INS43 INS59 INS44 INS42 INS39 INS42 INS21 INS41 INS7 INS27 INS8 INS42 INS39 INS42 INS21 INS42 INS43 INS42 INS43 INS42 INS25 INS42 INS42 INS43 INS42 INS21 INS21 INS21 INS60 INS60 INS21 INS60 INS8 INS7 INS42 INS42 INS14 INS42 INS33 INS21 INS7 INS42 INS42 INS27 INS8 INS42 INS7 INS32 INS32 INS43 INS59 INS43 INS59 INS32 INS39 INS59 MOV43 MOV21 INS25 INS22 INS42 INS43 INS32 INS22 INS42 INS27 INS42 INS21 INS22 INS14 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS11 INS42 INS42 INS9 INS42 INS27 INS32 INS8 MOV8 INS52 INS42 INS42 INS42 INS42 INS52 INS42 INS32 INS40 INS32 INS52 INS42 INS43 INS42 INS34 INS42 INS34 INS43 INS42 INS42 INS43 INS32 INS42 INS42 MOV43 INS42 INS42 INS42 INS60 INS60 INS21 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS11 INS42 INS42 INS9 INS32 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42