HDFS-5191. Revisit zero-copy API in FSDataInputStream to make it more intuitive (Contributed by Colin Patrick McCabe)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1526020 13f79535-47bb-0310-9956-ffa450edef68

-  public boolean readZeroCopy(HdfsZeroCopyCursor cursor,
-        LocatedBlock curBlock, long blockPos, int toRead,
-        ClientMmapManager mmapManager) {
+  public ClientMmap getClientMmap(LocatedBlock curBlock,
+      ClientMmapManager mmapManager) {
-        return false;
+        return null;
-          return false;
+          return null;
-        return false;
+        return null;
-        return false;
+        return null;
-    long limit = blockPos + toRead;
-    if (limit > Integer.MAX_VALUE) {
-      /*
-       * In Java, ByteBuffers use a 32-bit length, capacity, offset, etc.
-       * This limits our mmap'ed regions to 2 GB in length.
-       * TODO: we can implement zero-copy for larger blocks by doing multiple
-       * mmaps.
-       */
-      mmapDisabled = true;
-      clientMmap.unref();
-      clientMmap = null;
-      return false;
-    }
-    ByteBuffer mmapBuffer = clientMmap.getMappedByteBuffer().duplicate();
-    mmapBuffer.position((int)blockPos);
-    mmapBuffer.limit((int)limit);
-    cursor.setMmap(clientMmap, mmapBuffer);
-    return true;
+    return clientMmap;

INS43 INS42 UPD42 MOV42 INS41 INS42 INS33 INS33 INS33 INS33 DEL39 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL9 DEL9 DEL9 DEL9 DEL39 DEL42 DEL42 DEL42 DEL27 DEL59 DEL60 DEL42 DEL40 DEL27 DEL42 DEL9 DEL7 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL33 DEL7 DEL21 DEL9 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL39 DEL42 DEL11 DEL32 DEL21 DEL42 DEL42 DEL39 DEL42 DEL11 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL9 DEL41