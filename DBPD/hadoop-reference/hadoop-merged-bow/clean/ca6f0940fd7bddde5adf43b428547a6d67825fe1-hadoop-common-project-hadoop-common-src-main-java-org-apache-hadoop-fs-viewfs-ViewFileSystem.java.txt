Merge trunk into auto-failover branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1310905 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.fs.ContentSummary;
+import org.apache.hadoop.fs.FsServerDefaults;
+  public long getDefaultBlockSize() {
+    throw new NotInMountpointException("getDefaultBlockSize");
+  }
+
+  @Override
+  public short getDefaultReplication() {
+    throw new NotInMountpointException("getDefaultReplication");
+  }
+
+  @Override
+  public FsServerDefaults getServerDefaults() throws IOException {
+    throw new NotInMountpointException("getServerDefaults");
+  }
+
+  @Override
+  public long getDefaultBlockSize(Path f) {
+    try {
+      InodeTree.ResolveResult<FileSystem> res =
+        fsState.resolve(getUriPath(f), true);
+      return res.targetFileSystem.getDefaultBlockSize(res.remainingPath);
+    } catch (FileNotFoundException e) {
+      throw new NotInMountpointException(f, "getDefaultBlockSize"); 
+    }
+  }
+
+  @Override
+  public short getDefaultReplication(Path f) {
+    try {
+      InodeTree.ResolveResult<FileSystem> res =
+        fsState.resolve(getUriPath(f), true);
+      return res.targetFileSystem.getDefaultReplication(res.remainingPath);
+    } catch (FileNotFoundException e) {
+      throw new NotInMountpointException(f, "getDefaultReplication"); 
+    }
+  }
+
+  @Override
+  public FsServerDefaults getServerDefaults(Path f) throws IOException {
+    InodeTree.ResolveResult<FileSystem> res =
+      fsState.resolve(getUriPath(f), true);
+    return res.targetFileSystem.getServerDefaults(res.remainingPath);    
+  }
+
+  @Override
+  public ContentSummary getContentSummary(Path f) throws IOException {
+    InodeTree.ResolveResult<FileSystem> res = 
+      fsState.resolve(getUriPath(f), true);
+    return res.targetFileSystem.getContentSummary(res.remainingPath);
+  }
+
+  @Override
+
+    @Override
+    public FsServerDefaults getServerDefaults(Path f) throws IOException {
+      throw new NotInMountpointException(f, "getServerDefaults");
+    }
+    
+    @Override
+    public long getDefaultBlockSize(Path f) {
+      throw new NotInMountpointException(f, "getDefaultBlockSize");
+    }
+
+    @Override
+    public short getDefaultReplication(Path f) {
+      throw new NotInMountpointException(f, "getDefaultReplication");
+    }

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS43 INS42 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS31 INS31 INS31 INS42 INS53 INS42 INS53 INS42 INS42 INS42 INS53 INS42 INS43 INS42 INS54 INS42 INS43 INS42 INS54 INS42 INS42 INS43 INS42 INS42 INS60 INS41 INS42 INS42 INS43 INS42 INS42 INS60 INS41 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS14 INS14 INS14 INS42 INS8 INS12 INS42 INS8 INS12 INS42 INS74 INS59 INS32 INS42 INS74 INS59 INS32 INS42 INS42 INS43 INS42 INS42 INS53 INS42 INS43 INS42 INS53 INS42 INS43 INS42 INS53 INS43 INS45 INS43 INS45 INS43 INS45 INS60 INS41 INS44 INS8 INS60 INS41 INS44 INS8 INS43 INS43 INS42 INS32 INS40 INS42 INS40 INS43 INS43 INS42 INS32 INS40 INS42 INS40 INS42 INS14 INS42 INS14 INS42 INS14 INS42 INS42 INS42 INS74 INS59 INS32 INS43 INS42 INS53 INS74 INS59 INS32 INS43 INS42 INS53 INS40 INS42 INS42 INS42 INS32 INS9 INS40 INS42 INS42 INS42 INS32 INS9 INS43 INS42 INS45 INS43 INS42 INS45 INS43 INS42 INS45 INS43 INS43 INS42 INS32 INS40 INS42 INS40 INS42 INS14 INS43 INS43 INS42 INS32 INS40 INS42 INS40 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS9 INS43 INS42 INS45 INS40 INS42 INS42 INS42 INS32 INS9 INS43 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42