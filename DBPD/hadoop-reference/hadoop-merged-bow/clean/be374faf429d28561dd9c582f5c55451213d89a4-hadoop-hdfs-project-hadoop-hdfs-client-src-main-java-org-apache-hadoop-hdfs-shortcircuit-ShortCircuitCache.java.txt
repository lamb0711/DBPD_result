HDFS-13639. SlotReleaser is not fast enough (#1885)


+import java.net.SocketException;
+      if (slot == null) {
+        return;
+      }
+      DataOutputStream out = null;
-      try (DomainSocket sock = DomainSocket.connect(path);
-           DataOutputStream out = new DataOutputStream(
-               new BufferedOutputStream(sock.getOutputStream()))) {
-        new Sender(out).releaseShortCircuitFds(slot.getSlotId());
-        DataInputStream in = new DataInputStream(sock.getInputStream());
-        ReleaseShortCircuitAccessResponseProto resp =
-            ReleaseShortCircuitAccessResponseProto.parseFrom(
-                PBHelperClient.vintPrefixed(in));
-        if (resp.getStatus() != Status.SUCCESS) {
-          String error = resp.hasError() ? resp.getError() : "(unknown)";
-          throw new IOException(resp.getStatus().toString() + ": " + error);
+      int retries = 2;
+      try {
+        while (retries > 0) {
+          try {
+            if (domainSocket == null || !domainSocket.isOpen()) {
+              // we are running in single thread mode, no protection needed for
+              // domainSocket
+              domainSocket = DomainSocket.connect(path);
+            }
+
+            out = new DataOutputStream(
+                new BufferedOutputStream(domainSocket.getOutputStream()));
+            new Sender(out).releaseShortCircuitFds(slot.getSlotId());
+            DataInputStream in =
+                new DataInputStream(domainSocket.getInputStream());
+            ReleaseShortCircuitAccessResponseProto resp =
+                ReleaseShortCircuitAccessResponseProto
+                    .parseFrom(PBHelperClient.vintPrefixed(in));
+            if (resp.getStatus() != Status.SUCCESS) {
+              String error = resp.hasError() ? resp.getError() : "(unknown)";
+              throw new IOException(resp.getStatus().toString() + ": " + error);
+            }
+
+            LOG.trace("{}: released {}", this, slot);
+            success = true;
+            break;
+
+          } catch (SocketException se) {
+            // the domain socket on datanode may be timed out, we retry once
+            retries--;
+            domainSocket.close();
+            domainSocket = null;
+            if (retries == 0) {
+              throw new SocketException("Create domain socket failed");
+            }
+          }
-        LOG.trace("{}: released {}", this, slot);
-        success = true;
+          IOUtilsClient.cleanupWithLogger(LOG, domainSocket, out);
+          domainSocket = null;
+  private DomainSocket domainSocket = null;
+
+    if (slot == null) {
+      return;
+    }

INS26 INS40 INS23 INS83 MOV43 INS59 INS42 INS33 INS25 INS25 INS60 INS60 INS27 INS8 INS27 INS8 MOV43 INS59 INS39 INS59 INS8 INS42 INS33 INS41 INS42 INS33 INS41 INS42 INS33 INS42 INS34 INS61 INS27 INS8 INS42 INS34 INS54 INS21 INS21 MOV8 INS12 INS32 INS7 INS25 INS21 INS10 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS27 INS8 INS7 MOV43 INS43 INS42 INS21 INS21 INS21 INS25 INS27 INS38 INS21 INS42 MOV14 INS42 INS37 INS32 INS7 INS27 INS8 INS42 INS33 INS32 INS7 MOV43 INS42 INS42 INS42 INS42 INS33 INS42 INS34 INS53 INS42 INS42 INS42 MOV32 UPD42 INS14 UPD42 INS43 INS45 INS42 DEL42 DEL59 DEL58 DEL42 DEL59 DEL58