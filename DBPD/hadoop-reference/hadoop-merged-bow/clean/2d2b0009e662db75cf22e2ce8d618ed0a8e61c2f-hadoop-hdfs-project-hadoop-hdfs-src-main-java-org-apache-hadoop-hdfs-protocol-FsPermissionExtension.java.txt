Merge branch 'trunk' into HDFS-6584

Conflicts:
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java

- * HDFS permission subclass used to indicate an ACL is present.  The ACL bit is
- * not visible directly to users of {@link FsPermission} serialization.  This is
+ * HDFS permission subclass used to indicate an ACL is present and/or that the
+ * underlying file/dir is encrypted. The ACL/encrypted bits are not visible
+ * directly to users of {@link FsPermission} serialization.  This is
-public class FsAclPermission extends FsPermission {
+public class FsPermissionExtension extends FsPermission {
+  private final static short ENCRYPTED_BIT = 1 << 13;
+  private final boolean encryptedBit;
-   * Constructs a new FsAclPermission based on the given FsPermission.
+   * Constructs a new FsPermissionExtension based on the given FsPermission.
-  public FsAclPermission(FsPermission perm) {
+  public FsPermissionExtension(FsPermission perm, boolean hasAcl,
+      boolean isEncrypted) {
-    aclBit = true;
+    aclBit = hasAcl;
+    encryptedBit = isEncrypted;
-   * Creates a new FsAclPermission by calling the base class constructor.
+   * Creates a new FsPermissionExtension by calling the base class constructor.
-  public FsAclPermission(short perm) {
+  public FsPermissionExtension(short perm) {
+    encryptedBit = (perm & ENCRYPTED_BIT) != 0;
-    return (short)(toShort() | (aclBit ? ACL_BIT : 0));
+    return (short)(toShort() |
+        (aclBit ? ACL_BIT : 0) | (encryptedBit ? ENCRYPTED_BIT : 0));
+  public boolean getEncryptedBit() {
+    return encryptedBit;
+  }
+
+  @Override

UPD42 INS23 INS23 INS31 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 UPD42 INS44 INS44 UPD42 INS78 INS83 INS39 INS42 INS8 UPD66 INS66 UPD66 INS42 INS27 INS42 INS39 INS42 INS39 INS42 INS21 INS21 INS42 INS41 INS34 INS34 UPD66 INS7 UPD66 INS7 INS42 INS42 INS42 INS42 INS42 INS27 INS36 INS34 INS27 INS36 INS42 INS42 INS16 INS42 INS42 INS34 DEL9