HADOOP-10407. Fix the javac warnings in org.apache.hadoop.ipc package.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577710 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.concurrent.BlockingQueue;
-import java.util.concurrent.atomic.AtomicReference;
-import java.util.concurrent.TimeUnit;
-
+import java.util.concurrent.BlockingQueue;
+import java.util.concurrent.TimeUnit;
+import java.util.concurrent.atomic.AtomicReference;
-
+  @SuppressWarnings("unchecked")
+  static <E> Class<? extends BlockingQueue<E>> convertQueueClass(
+      Class<?> queneClass, Class<E> elementClass) {
+    return (Class<? extends BlockingQueue<E>>)queneClass;
+  }
+  
-  public CallQueueManager(Class backingClass, int maxQueueSize,
-    String namespace, Configuration conf) {
+  public CallQueueManager(Class<? extends BlockingQueue<E>> backingClass,
+      int maxQueueSize, String namespace, Configuration conf) {
-  @SuppressWarnings("unchecked")
-  private BlockingQueue<E> createCallQueueInstance(Class theClass, int maxLen,
-    String ns, Configuration conf) {
+  private <T extends BlockingQueue<E>> T createCallQueueInstance(
+      Class<T> theClass, int maxLen, String ns, Configuration conf) {
-      Constructor ctor = theClass.getDeclaredConstructor(int.class, String.class,
+      Constructor<T> ctor = theClass.getDeclaredConstructor(int.class, String.class,
-      return (BlockingQueue<E>)ctor.newInstance(maxLen, ns, conf);
+      return ctor.newInstance(maxLen, ns, conf);
-      Constructor ctor = theClass.getDeclaredConstructor(int.class);
-      return (BlockingQueue<E>)ctor.newInstance(maxLen);
+      Constructor<T> ctor = theClass.getDeclaredConstructor(int.class);
+      return ctor.newInstance(maxLen);
-      Constructor ctor = theClass.getDeclaredConstructor();
-      return (BlockingQueue<E>)ctor.newInstance();
+      Constructor<T> ctor = theClass.getDeclaredConstructor();
+      return ctor.newInstance();
-  public synchronized void swapQueue(Class queueClassToUse, int maxSize,
-    String ns, Configuration conf) {
+  public synchronized void swapQueue(
+      Class<? extends BlockingQueue<E>> queueClassToUse, int maxSize,
+      String ns, Configuration conf) {
-  private boolean queueIsReallyEmpty(BlockingQueue q) {
+  private boolean queueIsReallyEmpty(BlockingQueue<?> q) {

MOV26 MOV26 INS31 MOV79 INS83 INS73 INS74 INS42 INS44 INS44 INS8 INS73 INS43 INS42 INS43 INS76 INS74 INS42 INS74 INS42 MOV41 INS74 INS42 MOV74 INS42 INS74 INS74 INS74 INS42 INS74 INS43 INS76 INS43 INS43 MOV43 INS76 INS43 INS43 MOV43 INS76 MOV43 INS76 INS43 INS43 INS42 INS42 INS42 INS74 INS42 INS42 MOV74 MOV42 INS42 INS41 MOV74 INS42 INS42 MOV43 INS76 INS74 MOV32 INS74 MOV32 INS74 MOV32 MOV74 MOV43 INS43 MOV43 INS43 MOV43 INS43 INS42 INS42 MOV42 INS42 UPD42 MOV42 DEL11 DEL11