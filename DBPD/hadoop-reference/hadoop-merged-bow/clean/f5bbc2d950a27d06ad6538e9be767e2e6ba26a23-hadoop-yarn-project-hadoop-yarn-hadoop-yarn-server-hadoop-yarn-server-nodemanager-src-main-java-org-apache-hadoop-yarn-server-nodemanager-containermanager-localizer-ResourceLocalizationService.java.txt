Merge r1460409 through r1462697 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1462698 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.FileNotFoundException;
+import org.apache.hadoop.fs.FileStatus;
+import org.apache.hadoop.fs.RemoteIterator;
-      // TODO queue deletions here, rather than NM init?
+
+      cleanUpLocalDir(lfs,delService);
+
+  private void cleanUpLocalDir(FileContext lfs, DeletionService del) {
+    long currentTimeStamp = System.currentTimeMillis();
+    for (String localDir : dirsHandler.getLocalDirs()) {
+      renameLocalDir(lfs, localDir, ContainerLocalizer.USERCACHE,
+          currentTimeStamp);
+      renameLocalDir(lfs, localDir, ContainerLocalizer.FILECACHE,
+          currentTimeStamp);
+      renameLocalDir(lfs, localDir, ResourceLocalizationService.NM_PRIVATE_DIR,
+          currentTimeStamp);
+      try {
+        deleteLocalDir(lfs, del, localDir);
+      } catch (IOException e) {
+        // Do nothing, just give the warning
+        LOG.warn("Failed to delete localDir: " + localDir);
+      }
+    }
+  }
+
+  private void renameLocalDir(FileContext lfs, String localDir,
+      String localSubDir, long currentTimeStamp) {
+    try {
+      lfs.rename(new Path(localDir, localSubDir), new Path(
+          localDir, localSubDir + "_DEL_" + currentTimeStamp));
+    } catch (FileNotFoundException ex) {
+      // No need to handle this exception
+      // localSubDir may not be exist
+    } catch (Exception ex) {
+      // Do nothing, just give the warning
+      LOG.warn("Failed to rename the local file under " +
+          localDir + "/" + localSubDir);
+    }
+  }
+
+  private void deleteLocalDir(FileContext lfs, DeletionService del,
+      String localDir) throws IOException {
+    RemoteIterator<FileStatus> fileStatus = lfs.listStatus(new Path(localDir));
+    if (fileStatus != null) {
+      while (fileStatus.hasNext()) {
+        FileStatus status = fileStatus.next();
+        try {
+          if (status.getPath().getName().matches(".*" +
+              ContainerLocalizer.USERCACHE + "_DEL_.*")) {
+            cleanUpFilesFromSubDir(lfs, del, status.getPath());
+          } else if (status.getPath().getName()
+              .matches(".*" + NM_PRIVATE_DIR + "_DEL_.*")
+              ||
+              status.getPath().getName()
+                  .matches(".*" + ContainerLocalizer.FILECACHE + "_DEL_.*")) {
+            del.delete(null, status.getPath(), new Path[] {});
+          }
+        } catch (IOException ex) {
+          // Do nothing, just give the warning
+          LOG.warn("Failed to delete this local Directory: " +
+              status.getPath().getName());
+        }
+      }
+    }
+  }
+
+  private void cleanUpFilesFromSubDir(FileContext lfs, DeletionService del,
+      Path dirPath) throws IOException {
+    RemoteIterator<FileStatus> fileStatus = lfs.listStatus(dirPath);
+    if (fileStatus != null) {
+      while (fileStatus.hasNext()) {
+        FileStatus status = fileStatus.next();
+        String owner = status.getOwner();
+        del.delete(owner, status.getPath(), new Path[] {});
+      }
+    }
+    del.delete(null, dirPath, new Path[] {});
+  }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS43 INS42 INS43 INS42 INS60 INS70 INS43 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS54 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS25 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS25 INS21 INS42 INS42 INS39 INS59 INS44 INS32 INS8 INS42 INS42 INS42 INS8 INS12 INS12 INS42 INS42 INS42 INS74 INS59 INS27 INS8 INS42 INS42 INS42 INS74 INS59 INS27 INS8 INS32 INS21 INS42 INS32 INS43 INS42 INS42 INS42 INS21 INS21 INS21 INS54 INS21 INS44 INS8 INS44 INS8 INS43 INS43 INS42 INS32 INS42 INS33 INS61 INS43 INS43 INS42 INS32 INS42 INS33 INS61 INS42 INS42 INS33 INS42 INS3 INS32 INS42 INS42 INS42 INS32 INS32 INS32 INS8 INS12 INS32 INS43 INS42 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS14 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS32 INS8 INS5 INS4 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS40 INS42 INS21 INS44 INS8 INS42 INS42 INS14 INS14 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS60 INS54 INS42 INS42 INS60 INS60 INS21 INS43 INS85 INS32 INS43 INS42 INS21 INS43 INS42 INS42 INS43 INS42 INS27 INS42 INS42 INS27 INS42 INS43 INS59 INS8 INS12 INS43 INS59 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS32 INS25 INS44 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS3 INS42 INS42 INS27 INS42 INS42 INS32 INS8 INS25 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS5 INS4 INS45 INS42 INS32 INS42 INS27 INS21 INS27 INS8 INS42 INS32 INS43 INS85 INS32 INS42 INS45 INS40 INS45 INS32 INS32 INS32 INS21 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS27 INS32 INS42 INS27 INS32 INS45 INS32 INS42 INS42 INS32 INS42 INS45 INS42 INS45 INS32 INS42 INS45 INS40 INS45 INS42 INS42 INS33 INS32 INS3 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS5 INS4 INS42 INS42 INS43 INS85 INS42