HDFS-13165: [SPS]: Collects successfully moved block details via IBR. Contributed by Rakesh R.

-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-
-import org.apache.hadoop.hdfs.protocol.Block;
- * Blocks movements status handler, which is used to collect details of the
- * completed block movements and later these attempted finished(with success or
- * failure) blocks can be accessed to notify respective listeners, if any.
+ * Blocks movements status handler, which can be used to collect details of the
+ * completed block movements.
-public class BlocksMovementsStatusHandler {
-  private final List<Block> blockIdVsMovementStatus = new ArrayList<>();
+public interface BlocksMovementsStatusHandler {
-   * Collect all the storage movement attempt finished blocks. Later this will
-   * be send to namenode via heart beat.
+   * Collect all the storage movement attempt finished blocks.
-   * @param moveAttemptFinishedBlks
-   *          set of storage movement attempt finished blocks
+   * @param moveAttemptFinishedBlk
+   *          storage movement attempt finished block
-  public void handle(
-      List<BlockMovementAttemptFinished> moveAttemptFinishedBlks) {
-    List<Block> blocks = new ArrayList<>();
-
-    for (BlockMovementAttemptFinished item : moveAttemptFinishedBlks) {
-      blocks.add(item.getBlock());
-    }
-    // Adding to the tracking report list. Later this can be accessed to know
-    // the attempted block movements.
-    synchronized (blockIdVsMovementStatus) {
-      blockIdVsMovementStatus.addAll(blocks);
-    }
-  }
-
-  /**
-   * @return unmodifiable list of storage movement attempt finished blocks.
-   */
-  public List<Block> getMoveAttemptFinishedBlocks() {
-    List<Block> moveAttemptFinishedBlks = new ArrayList<>();
-    // 1. Adding all the completed block ids.
-    synchronized (blockIdVsMovementStatus) {
-      if (blockIdVsMovementStatus.size() > 0) {
-        moveAttemptFinishedBlks = Collections
-            .unmodifiableList(blockIdVsMovementStatus);
-      }
-    }
-    return moveAttemptFinishedBlks;
-  }
-
-  /**
-   * Remove the storage movement attempt finished blocks from the tracking list.
-   *
-   * @param moveAttemptFinishedBlks
-   *          set of storage movement attempt finished blocks
-   */
-  public void remove(List<Block> moveAttemptFinishedBlks) {
-    if (moveAttemptFinishedBlks != null) {
-      blockIdVsMovementStatus.removeAll(moveAttemptFinishedBlks);
-    }
-  }
-
-  /**
-   * Clear the blockID vs movement status tracking map.
-   */
-  public void removeAll() {
-    synchronized (blockIdVsMovementStatus) {
-      blockIdVsMovementStatus.clear();
-    }
-  }
+  void handle(BlockMovementAttemptFinished moveAttemptFinishedBlk);

MOV44 UPD66 UPD66 UPD42 UPD66 UPD42 UPD66 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL23 DEL66 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL51 DEL8 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL34 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL51 DEL42 DEL41 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL51 DEL8 DEL31