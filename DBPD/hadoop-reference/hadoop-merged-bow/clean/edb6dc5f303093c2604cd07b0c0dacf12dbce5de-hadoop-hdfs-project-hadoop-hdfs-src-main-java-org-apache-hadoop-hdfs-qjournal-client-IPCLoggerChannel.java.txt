HDFS-5138. Support HDFS upgrade in HA. Contributed by Aaron T. Myers.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561381 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.common.StorageInfo;
+  
+  @Override
+  public ListenableFuture<Void> doPreUpgrade() {
+    return executor.submit(new Callable<Void>() {
+      @Override
+      public Void call() throws IOException {
+        getProxy().doPreUpgrade(journalId);
+        return null;
+      }
+    });
+  }
+  
+  @Override
+  public ListenableFuture<Void> doUpgrade(final StorageInfo sInfo) {
+    return executor.submit(new Callable<Void>() {
+      @Override
+      public Void call() throws IOException {
+        getProxy().doUpgrade(journalId, sInfo);
+        return null;
+      }
+    });
+  }
+  
+  @Override
+  public ListenableFuture<Void> doFinalize() {
+    return executor.submit(new Callable<Void>() {
+      @Override
+      public Void call() throws IOException {
+        getProxy().doFinalize(journalId);
+        return null;
+      }
+    });
+  }
+  
+  @Override
+  public ListenableFuture<Boolean> canRollBack(final StorageInfo storage,
+      final StorageInfo prevStorage, final int targetLayoutVersion) {
+    return executor.submit(new Callable<Boolean>() {
+      @Override
+      public Boolean call() throws IOException {
+        return getProxy().canRollBack(journalId, storage, prevStorage,
+            targetLayoutVersion);
+      }
+    });
+  }
+
+  @Override
+  public ListenableFuture<Void> doRollback() {
+    return executor.submit(new Callable<Void>() {
+      @Override
+      public Void call() throws IOException {
+        getProxy().doRollback(journalId);
+        return null;
+      }
+    });
+  }
+  
+  @Override
+  public ListenableFuture<Long> getJournalCTime() {
+    return executor.submit(new Callable<Long>() {
+      @Override
+      public Long call() throws IOException {
+        return getProxy().getJournalCTime(journalId);
+      }
+    });
+  }
+

INS26 INS40 INS31 INS31 INS31 INS31 INS31 INS31 INS78 INS83 INS74 INS42 INS8 INS78 INS83 INS74 INS42 INS44 INS8 INS78 INS83 INS74 INS42 INS8 INS78 INS83 INS74 INS42 INS44 INS44 INS44 INS8 INS78 INS83 INS74 INS42 INS8 INS78 INS83 INS74 INS42 INS8 INS42 INS43 INS43 INS41 INS42 INS43 INS43 INS83 INS43 INS42 INS41 INS42 INS43 INS43 INS41 INS42 INS43 INS43 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS39 INS42 INS41 INS42 INS43 INS43 INS41 INS42 INS43 INS43 INS41 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS14 INS74 INS1 INS74 INS1 INS74 INS1 INS74 INS1 INS74 INS1 INS74 INS1 INS43 INS43 INS31 INS43 INS43 INS31 INS43 INS43 INS31 INS43 INS43 INS31 INS43 INS43 INS31 INS43 INS43 INS31 INS42 INS42 INS78 INS83 INS43 INS42 INS43 INS8 INS42 INS42 INS78 INS83 INS43 INS42 INS43 INS8 INS42 INS42 INS78 INS83 INS43 INS42 INS43 INS8 INS42 INS42 INS78 INS83 INS43 INS42 INS43 INS8 INS42 INS42 INS78 INS83 INS43 INS42 INS43 INS8 INS42 INS42 INS78 INS83 INS43 INS42 INS43 INS8 INS42 INS42 INS42 INS21 INS41 INS42 INS42 INS42 INS21 INS41 INS42 INS42 INS42 INS21 INS41 INS42 INS42 INS42 INS41 INS42 INS42 INS42 INS21 INS41 INS42 INS42 INS42 INS41 INS32 INS33 INS32 INS33 INS32 INS33 INS32 INS32 INS33 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42