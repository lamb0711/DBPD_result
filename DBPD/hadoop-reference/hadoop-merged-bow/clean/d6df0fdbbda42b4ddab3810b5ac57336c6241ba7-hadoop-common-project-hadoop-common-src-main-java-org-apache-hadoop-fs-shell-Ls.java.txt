Add -E option in 'ls' to list erasure coding policy of each file and directory if applicable. Contributed by luhuichun via lei.

+import org.apache.hadoop.fs.ContentSummary;
+  private static final String OPTION_ECPOLICY = "e";
-      OPTION_ATIME + "] [<path> ...]";
+      OPTION_ATIME + "] [-" + OPTION_ECPOLICY +"] [<path> ...]";
-          "      display and sorting.";
+          "      display and sorting.\n"+
+          "  -" + OPTION_ECPOLICY +
+          "  Display the erasure coding policy of files and directories.\n";
+  private boolean displayECPolicy;
-        OPTION_MTIME, OPTION_SIZE, OPTION_ATIME);
+        OPTION_MTIME, OPTION_SIZE, OPTION_ATIME, OPTION_ECPOLICY);
+    displayECPolicy = cf.getOpt(OPTION_ECPOLICY);
-    String line = String.format(lineFormat,
-        (stat.isDirectory() ? "d" : "-"),
-        stat.getPermission() + (stat.getPermission().getAclBit() ? "+" : " "),
-        (stat.isFile() ? stat.getReplication() : "-"),
-        stat.getOwner(),
-        stat.getGroup(),
-        formatSize(stat.getLen()),
-        dateFormat.format(new Date(isUseAtime()
-            ? stat.getAccessTime()
-            : stat.getModificationTime())),
-        isHideNonPrintable() ? new PrintableString(item.toString()) : item);
-    out.println(line);
+    if (displayECPolicy) {
+      ContentSummary contentSummary = item.fs.getContentSummary(item.path);
+      String line = String.format(lineFormat,
+          (stat.isDirectory() ? "d" : "-"),
+          stat.getPermission() + (stat.getPermission().getAclBit() ? "+" : " "),
+          (stat.isFile() ? stat.getReplication() : "-"),
+          stat.getOwner(),
+          stat.getGroup(),
+          contentSummary.getErasureCodingPolicy(),
+          formatSize(stat.getLen()),
+          dateFormat.format(new Date(isUseAtime()
+              ? stat.getAccessTime()
+              : stat.getModificationTime())),
+          isHideNonPrintable() ? new PrintableString(item.toString()) : item);
+      out.println(line);
+    } else {
+      String line = String.format(lineFormat,
+          (stat.isDirectory() ? "d" : "-"),
+          stat.getPermission() + (stat.getPermission().getAclBit() ? "+" : " "),
+          (stat.isFile() ? stat.getReplication() : "-"),
+          stat.getOwner(),
+          stat.getGroup(),
+          formatSize(stat.getLen()),
+          dateFormat.format(new Date(isUseAtime()
+              ? stat.getAccessTime()
+              : stat.getModificationTime())),
+          isHideNonPrintable() ? new PrintableString(item.toString()) : item);
+      out.println(line);
+    }
-  private void adjustColumnWidths(PathData items[]) {
+  private void adjustColumnWidths(PathData items[]) throws IOException {
+    if(displayECPolicy){
+      int maxEC=0;
+      for (PathData item : items) {
+          ContentSummary contentSummary = item.fs.getContentSummary(item.path);
+          maxEC=maxLength(maxEC,contentSummary.getErasureCodingPolicy().length());
+      }
+      fmt.append(" %"+maxEC+"s ");
+    }

INS26 INS40 INS23 INS23 INS83 INS83 INS83 MOV43 INS59 INS43 INS83 INS39 INS59 INS8 INS43 INS42 INS45 INS42 INS42 INS21 MOV25 MOV60 INS25 INS42 INS25 INS45 INS42 UPD45 INS45 INS42 INS45 MOV43 INS7 INS42 INS8 MOV8 INS42 INS8 INS42 INS32 INS60 INS60 INS21 INS60 INS70 INS21 MOV43 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS32 INS39 INS59 INS44 INS42 INS8 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS34 INS43 INS42 INS60 INS21 INS42 INS42 INS27 INS40 INS42 INS40 INS42 INS42 INS42 INS36 INS27 INS36 INS32 INS32 INS32 INS32 INS32 INS16 INS42 INS43 INS59 INS7 INS45 INS42 INS45 INS16 INS32 INS36 INS16 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS14 INS32 INS14 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS45 INS45 INS42 INS42 INS16 INS32 INS32 INS45 INS42 INS42 INS43 INS16 INS42 INS43 INS32 INS40 INS42 INS40 INS42 INS42 INS32 INS42 INS42 INS32 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42