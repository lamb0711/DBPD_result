HDFS-4721. Speed up lease recovery by avoiding stale datanodes and choosing the datanode with the most recent heartbeat as the primary.  Contributed by Varun Sharma


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1476399 13f79535-47bb-0310-9956-ffa450edef68

-  
+
-  
+
-   * 
+   *
-         
+
-            brCommand.add(new RecoveringBlock(
-                new ExtendedBlock(blockPoolId, b), b.getExpectedLocations(), b
-                    .getBlockRecoveryId()));
+            DatanodeDescriptor[] expectedLocations = b.getExpectedLocations();
+            // Skip stale nodes during recovery - not heart beated for some time (30s by default).
+            List<DatanodeDescriptor> recoveryLocations =
+                new ArrayList<DatanodeDescriptor>(expectedLocations.length);
+            for (int i = 0; i < expectedLocations.length; i++) {
+              if (!expectedLocations[i].isStale(this.staleInterval)) {
+                recoveryLocations.add(expectedLocations[i]);
+              }
+            }
+            // If we only get 1 replica after eliminating stale nodes, then choose all
+            // replicas for recovery and let the primary data node handle failures.
+            if (recoveryLocations.size() > 1) {
+              if (recoveryLocations.size() != expectedLocations.length) {
+                LOG.info("Skipped stale nodes for recovery : " +
+                    (expectedLocations.length - recoveryLocations.size()));
+              }
+              brCommand.add(new RecoveringBlock(
+                  new ExtendedBlock(blockPoolId, b),
+                  recoveryLocations.toArray(new DatanodeDescriptor[recoveryLocations.size()]),
+                  b.getBlockRecoveryId()));
+            } else {
+              // If too many replicas are stale, then choose all replicas to participate
+              // in block recovery.
+              brCommand.add(new RecoveringBlock(
+                  new ExtendedBlock(blockPoolId, b),
+                  expectedLocations,
+                  b.getBlockRecoveryId()));
+            }

INS8 INS60 INS60 INS24 INS25 INS5 INS59 INS74 INS59 INS58 INS27 INS37 INS8 INS27 MOV8 INS8 INS43 INS85 INS42 MOV32 INS43 INS43 INS42 INS14 INS39 INS59 INS42 INS40 INS42 INS25 INS32 INS34 INS25 INS21 INS42 INS42 INS42 INS74 INS40 INS42 INS34 INS38 INS8 INS42 INS42 INS27 INS8 INS32 INS43 INS43 INS32 INS21 INS32 INS40 INS21 INS42 INS42 INS14 INS42 INS42 INS2 INS42 INS22 INS32 INS42 INS42 INS32 INS32 INS43 INS14 INS42 INS32 INS42 INS42 INS52 INS42 INS42 INS42 INS2 INS42 INS42 INS27 INS42 INS42 INS3 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS36 INS5 INS32 INS42 INS27 INS43 INS85 INS42 INS42 INS40 INS32 INS42 INS42 INS42