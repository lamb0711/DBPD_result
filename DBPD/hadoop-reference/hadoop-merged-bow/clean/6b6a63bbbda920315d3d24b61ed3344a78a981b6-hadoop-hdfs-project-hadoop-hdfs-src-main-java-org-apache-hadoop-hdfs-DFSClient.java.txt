Merge commit '456e901a4c5c639267ee87b8e5f1319f256d20c2' (HDFS-6407. Add sorting and pagination in the datanode tab of the NN Web UI. Contributed by Haohui Mai.) into HDFS-7285-merge

-import java.nio.charset.Charset;
-      boolean noRetries = conf.getBoolean(
-          DFSConfigKeys.DFS_CLIENT_TEST_NO_PROXY_RETRIES,
-          DFSConfigKeys.DFS_CLIENT_TEST_NO_PROXY_RETRIES_DEFAULT);
-          ClientProtocol.class, nnFallbackToSimpleAuth, !noRetries);
+          ClientProtocol.class, nnFallbackToSimpleAuth);
-  
-  /** Abort and release resources held.  Ignore all errors. */
-  public void abort() {
-    clientRunning = false;
-    closeAllFilesBeingWritten(true);
-    try {
-      // remove reference to this client and stop the renewer,
-      // if there is no more clients under the renewer.
-      getLeaseRenewer().closeClient(this);
-    } catch (IOException ioe) {
-       LOG.info("Exception occurred while aborting the client " + ioe);
-    }
-    closeConnectionToNamenode();
-  }
-  private void closeAllFilesBeingWritten(final boolean abort) {
+  public void closeAllFilesBeingWritten(final boolean abort) {
+   * @param path file/directory name
+   * @return Get the storage policy for specified path
+   */
+  public BlockStoragePolicy getStoragePolicy(String path) throws IOException {
+    checkOpen();
+    TraceScope scope = getPathTraceScope("getStoragePolicy", path);
+    try {
+      return namenode.getStoragePolicy(path);
+    } catch (RemoteException e) {
+      throw e.unwrapRemoteException(AccessControlException.class,
+                                    FileNotFoundException.class,
+                                    SafeModeException.class,
+                                    UnresolvedPathException.class);
+    } finally {
+      scope.close();
+    }
+  }
+
+  /**
+      peer.setWriteTimeout(socketTimeout);
-  private static final byte[] PATH = "path".getBytes(Charset.forName("UTF-8"));
-
-        span.addKVAnnotation(PATH,
-            path.getBytes(Charset.forName("UTF-8")));
+        span.addKVAnnotation("path", path);
-  private static final byte[] SRC = "src".getBytes(Charset.forName("UTF-8"));
-
-  private static final byte[] DST = "dst".getBytes(Charset.forName("UTF-8"));
-
-        span.addKVAnnotation(SRC,
-            src.getBytes(Charset.forName("UTF-8")));
+        span.addKVAnnotation("src", src);
-        span.addKVAnnotation(DST,
-            dst.getBytes(Charset.forName("UTF-8")));
+        span.addKVAnnotation("dst", dst);

INS31 UPD83 MOV29 MOV83 INS43 INS42 INS44 MOV43 INS8 UPD65 INS65 INS42 INS43 INS42 MOV21 INS60 INS54 INS42 UPD66 INS66 INS42 INS43 INS59 INS8 INS12 INS8 UPD42 INS42 INS42 INS32 INS41 INS44 INS8 INS21 INS21 UPD42 MOV42 INS45 INS42 INS32 INS43 INS42 INS53 INS32 INS32 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS57 INS57 INS57 INS57 INS43 INS43 INS43 INS43 INS45 MOV42 INS45 MOV42 INS45 MOV42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL39 DEL42 DEL42 DEL42 DEL40 DEL40 DEL32 DEL59 DEL60 DEL42 DEL38 DEL39 DEL42 DEL42 DEL9 DEL7 DEL21 DEL42 DEL32 DEL42 DEL52 DEL32 DEL21 DEL8 DEL42 DEL44 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL8 DEL12 DEL54 DEL32 DEL21 DEL8 DEL31 DEL9 DEL83 DEL83 DEL83 DEL39 DEL85 DEL5 DEL42 DEL45 DEL42 DEL42 DEL45 DEL32 DEL32 DEL59 DEL23 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL32 DEL83 DEL83 DEL83 DEL39 DEL85 DEL5 DEL42 DEL45 DEL42 DEL42 DEL45 DEL32 DEL32 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL85 DEL5 DEL42 DEL45 DEL42 DEL45 DEL32 DEL32 DEL59 DEL23 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL32 DEL42 DEL42 DEL42 DEL42 DEL45 DEL32 DEL32