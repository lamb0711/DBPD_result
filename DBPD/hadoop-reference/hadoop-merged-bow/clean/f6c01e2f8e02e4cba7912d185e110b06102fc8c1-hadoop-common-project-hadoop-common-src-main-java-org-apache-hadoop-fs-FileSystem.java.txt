Merge trunk into auto-HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1333291 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ServiceLoader;
+import org.apache.hadoop.util.ShutdownHookManager;
+  /**
+   * Priority of the FileSystem shutdown hook.
+   */
+  public static final int SHUTDOWN_HOOK_PRIORITY = 10;
+
+  /**
+   * Return the protocol scheme for the FileSystem.
+   * <p/>
+   * This implementation throws an <code>UnsupportedOperationException</code>.
+   *
+   * @return the protocol scheme for the FileSystem.
+   */
+  public String getScheme() {
+    throw new UnsupportedOperationException("Not implemented by  the FileSystem implementation");
+  }
+
+  // making it volatile to be able to do a double checked locking
+  private volatile static boolean FILE_SYSTEMS_LOADED = false;
+
+  private static final Map<String, Class<? extends FileSystem>>
+    SERVICE_FILE_SYSTEMS = new HashMap<String, Class<? extends FileSystem>>();
+
+  private static void loadFileSystems() {
+    synchronized (FileSystem.class) {
+      if (!FILE_SYSTEMS_LOADED) {
+        ServiceLoader<FileSystem> serviceLoader = ServiceLoader.load(FileSystem.class);
+        for (FileSystem fs : serviceLoader) {
+          SERVICE_FILE_SYSTEMS.put(fs.getScheme(), fs.getClass());
+        }
+        FILE_SYSTEMS_LOADED = true;
+      }
+    }
+  }
+
+  public static Class<? extends FileSystem> getFileSystemClass(String scheme,
+      Configuration conf) throws IOException {
+    if (!FILE_SYSTEMS_LOADED) {
+      loadFileSystems();
+    }
+    Class<? extends FileSystem> clazz = null;
+    if (conf != null) {
+      clazz = (Class<? extends FileSystem>) conf.getClass("fs." + scheme + ".impl", null);
+    }
+    if (clazz == null) {
+      clazz = SERVICE_FILE_SYSTEMS.get(scheme);
+    }
+    if (clazz == null) {
+      throw new IOException("No FileSystem for scheme: " + scheme);
+    }
+    return clazz;
+  }
+
-    Class<?> clazz = conf.getClass("fs." + uri.getScheme() + ".impl", null);
+    Class<?> clazz = getFileSystemClass(uri.getScheme(), conf);
-        if (map.isEmpty() && !clientFinalizer.isAlive()) {
-          Runtime.getRuntime().addShutdownHook(clientFinalizer);
+        if (map.isEmpty() ) {
+          ShutdownHookManager.get().addShutdownHook(clientFinalizer, SHUTDOWN_HOOK_PRIORITY);
-        if (map.isEmpty() && !clientFinalizer.isAlive()) {
-          if (!Runtime.getRuntime().removeShutdownHook(clientFinalizer)) {
-            LOG.info("Could not cancel cleanup thread, though no " +
-                     "FileSystems are open");
-          }
-      }
-    private class ClientFinalizer extends Thread {
+    private class ClientFinalizer implements Runnable {

INS26 INS26 INS40 INS40 INS23 INS31 INS23 INS23 INS31 INS31 INS29 INS83 INS83 INS83 INS39 INS59 INS29 INS83 INS43 INS42 INS8 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS83 INS74 INS59 INS83 INS83 INS39 INS42 INS8 INS83 INS83 INS74 INS42 INS44 INS44 INS43 INS8 INS65 INS42 INS34 INS65 INS65 INS42 INS53 INS42 INS9 INS43 INS43 INS74 INS42 INS14 INS51 INS43 INS76 INS43 INS42 INS43 INS42 INS42 INS25 INS60 INS25 INS25 INS25 INS41 UPD43 INS66 INS66 INS66 INS66 INS66 INS14 INS42 INS42 INS43 INS76 INS74 INS57 INS8 INS42 INS43 INS42 INS42 INS38 INS8 INS74 INS59 INS27 INS8 INS27 INS8 INS27 INS8 INS42 UPD42 INS43 INS45 INS42 INS43 INS43 INS43 INS74 INS43 INS25 INS42 INS42 INS21 INS43 INS76 INS42 INS33 INS42 INS33 INS21 INS42 INS33 INS21 INS42 INS33 INS53 MOV8 INS42 INS42 INS42 INS42 INS43 INS76 INS42 INS38 INS8 INS32 INS42 INS43 INS7 INS7 INS14 INS42 MOV32 MOV21 MOV21 INS42 INS43 INS42 INS60 INS70 INS21 INS42 INS42 INS42 INS11 INS42 INS32 INS43 INS27 MOV32 INS42 INS74 INS59 INS44 INS42 INS8 INS7 INS74 INS32 INS42 INS42 INS42 INS42 INS45 INS42 MOV42 MOV42 INS43 INS43 INS42 INS32 INS43 INS42 INS21 INS42 INS9 INS43 INS76 INS42 INS42 INS27 INS33 INS42 INS42 INS42 INS42 INS57 INS42 INS32 INS42 INS43 INS45 INS42 INS45 INS42 INS43 INS42 INS42 INS32 INS32 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL45 DEL45 DEL27 DEL33 DEL32 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL42 DEL45 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL38 DEL25 DEL8 DEL25 DEL8