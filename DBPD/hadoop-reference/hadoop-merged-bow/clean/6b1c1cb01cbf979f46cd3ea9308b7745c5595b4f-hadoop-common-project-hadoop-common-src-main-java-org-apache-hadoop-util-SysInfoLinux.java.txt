YARN-4768. getAvailablePhysicalMemorySize can be inaccurate on linux. Contributed by Nathan Roberts.

-      Pattern.compile("^([a-zA-Z]*):[ \t]*([0-9]*)[ \t]kB");
+      Pattern.compile("^([a-zA-Z_()]*):[ \t]*([0-9]*)[ \t]*(kB)?");
+  private static final String INACTIVEFILE_STRING = "Inactive(file)";
+  private static final String HARDWARECORRUPTED_STRING = "HardwareCorrupted";
+  private static final String HUGEPAGESTOTAL_STRING = "HugePages_Total";
+  private static final String HUGEPAGESIZE_STRING = "Hugepagesize";
+
+
-  private long inactiveSize = 0; // inactive cache memory (kB)
+  private long inactiveSize = 0; // inactive memory (kB)
+  private long inactiveFileSize = -1; // inactive cache memory, -1 if not there
+  private long hardwareCorruptSize = 0; // RAM corrupt and not available
+  private long hugePagesTotal = 0; // # of hugepages reserved
+  private long hugePageSize = 0; // # size of each hugepage
+
+
+          } else if (mat.group(1).equals(INACTIVEFILE_STRING)) {
+            inactiveFileSize = Long.parseLong(mat.group(2));
+          } else if (mat.group(1).equals(HARDWARECORRUPTED_STRING)) {
+            hardwareCorruptSize = Long.parseLong(mat.group(2));
+          } else if (mat.group(1).equals(HUGEPAGESTOTAL_STRING)) {
+            hugePagesTotal = Long.parseLong(mat.group(2));
+          } else if (mat.group(1).equals(HUGEPAGESIZE_STRING)) {
+            hugePageSize = Long.parseLong(mat.group(2));
-    return ramSize * 1024;
+    return (ramSize
+            - hardwareCorruptSize
+            - (hugePagesTotal * hugePageSize)) * 1024;
-    readProcMemInfoFile();
-    return (ramSize + swapSize) * 1024;
+    return getPhysicalMemorySize() + (swapSize * 1024);
-    return (ramSizeFree + inactiveSize) * 1024;
+    long inactive = inactiveFileSize != -1
+        ? inactiveFileSize
+        : inactiveSize;
+    return (ramSizeFree + inactive) * 1024;
-    readProcMemInfoFile(true);
-    return (ramSizeFree + swapSizeFree + inactiveSize) * 1024;
+    return getAvailablePhysicalMemorySize() + (swapSizeFree * 1024);

INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 MOV29 MOV78 MOV29 MOV78 MOV29 MOV78 MOV29 MOV78 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS38 INS42 INS34 INS42 INS34 INS42 INS34 MOV21 MOV21 INS60 UPD45 INS34 UPD27 INS39 INS59 UPD27 INS36 INS32 INS36 INS42 INS16 INS32 INS36 INS27 INS42 INS27 INS27 INS42 INS42 INS42 INS27 MOV42 INS42 INS36 MOV42 MOV34 INS42 INS38 UPD42 MOV42 MOV34 INS27 INS34 INS42 INS42 INS25 MOV32 MOV8 INS25 INS32 INS8 INS25 INS32 INS42 INS42 INS21 INS32 INS8 INS25 INS42 INS42 INS34 INS7 INS32 INS42 INS42 INS21 INS32 INS8 MOV25 INS42 INS32 INS42 INS42 INS34 INS7 INS32 INS42 INS42 INS21 INS32 INS8 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS34 INS7 INS32 INS42 INS42 INS21 INS42 INS42 INS34 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS34 INS7 INS42 INS42 INS34 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS34 INS42 INS42 INS32 INS42 INS42 INS34 DEL42 DEL32 DEL21 DEL42 DEL27 DEL36 DEL42 DEL9 DEL32 DEL21 DEL42 DEL42 DEL27 DEL36