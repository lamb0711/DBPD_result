Merge branch 'trunk' into HADOOP-12756

+
+import com.google.common.base.Charsets;
+  public static final String START_AFTER_PARAM = "startAfter";
+  public static final String DIRECTORY_LISTING_JSON = "DirectoryListing";
+  public static final String PARTIAL_LISTING_JSON = "partialListing";
+  public static final String REMAINING_ENTRIES_JSON = "remainingEntries";
+
-    REMOVEXATTR(HTTP_PUT), LISTXATTRS(HTTP_GET);
+    REMOVEXATTR(HTTP_PUT), LISTXATTRS(HTTP_GET), LISTSTATUS_BATCH(HTTP_GET);
+  private FileStatus[] toFileStatuses(JSONObject json, Path f) {
+    json = (JSONObject) json.get(FILE_STATUSES_JSON);
+    JSONArray jsonArray = (JSONArray) json.get(FILE_STATUS_JSON);
+    FileStatus[] array = new FileStatus[jsonArray.size()];
+    f = makeQualified(f);
+    for (int i = 0; i < jsonArray.size(); i++) {
+      array[i] = createFileStatus(f, (JSONObject) jsonArray.get(i));
+    }
+    return array;
+  }
+
-    json = (JSONObject) json.get(FILE_STATUSES_JSON);
-    JSONArray jsonArray = (JSONArray) json.get(FILE_STATUS_JSON);
-    FileStatus[] array = new FileStatus[jsonArray.size()];
-    f = makeQualified(f);
-    for (int i = 0; i < jsonArray.size(); i++) {
-      array[i] = createFileStatus(f, (JSONObject) jsonArray.get(i));
+    return toFileStatuses(json, f);
+  }
+
+  @Override
+  public DirectoryEntries listStatusBatch(Path f, byte[] token) throws
+      FileNotFoundException, IOException {
+    Map<String, String> params = new HashMap<String, String>();
+    params.put(OP_PARAM, Operation.LISTSTATUS_BATCH.toString());
+    if (token != null) {
+      params.put(START_AFTER_PARAM, new String(token, Charsets.UTF_8));
-    return array;
+    HttpURLConnection conn = getConnection(
+        Operation.LISTSTATUS_BATCH.getMethod(),
+        params, f, true);
+    HttpExceptionUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);
+    // Parse the FileStatus array
+    JSONObject json = (JSONObject) HttpFSUtils.jsonParse(conn);
+    JSONObject listing = (JSONObject) json.get(DIRECTORY_LISTING_JSON);
+    FileStatus[] statuses = toFileStatuses(
+        (JSONObject) listing.get(PARTIAL_LISTING_JSON), f);
+    // New token is the last FileStatus entry
+    byte[] newToken = null;
+    if (statuses.length > 0) {
+      newToken = statuses[statuses.length - 1].getPath().getName().toString()
+          .getBytes(Charsets.UTF_8);
+    }
+    // Parse the remainingEntries boolean into hasMore
+    final long remainingEntries = (Long) listing.get(REMAINING_ENTRIES_JSON);
+    final boolean hasMore = remainingEntries > 0 ? true : false;
+    return new DirectoryEntries(statuses, newToken, hasMore);

INS26 INS40 INS23 INS23 INS23 INS23 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS72 UPD83 UPD42 INS44 MOV29 MOV78 INS83 INS5 INS42 INS44 MOV43 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS43 INS8 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS43 INS42 INS43 INS85 INS43 INS42 MOV60 MOV21 MOV60 MOV21 MOV60 INS41 INS42 INS42 INS43 INS42 INS5 INS42 INS42 INS42 INS60 INS21 INS25 INS60 INS21 INS60 INS60 INS60 INS60 INS25 INS60 INS60 INS41 INS42 INS42 INS42 INS32 INS42 INS39 INS85 INS74 INS59 INS32 INS27 INS8 INS43 INS59 INS32 INS43 INS59 INS43 INS59 INS5 INS59 INS5 INS59 INS27 INS8 INS83 INS39 INS59 INS83 INS39 INS59 INS14 INS42 INS42 INS42 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS11 INS42 INS42 INS11 INS43 INS85 INS42 INS32 INS39 INS85 INS42 INS33 INS40 INS34 INS21 INS42 INS11 INS42 INS16 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS40 INS42 INS32 INS42 INS32 INS42 INS42 INS9 INS43 INS32 INS43 INS32 INS42 INS42 INS11 INS42 INS7 INS43 INS32 INS27 INS9 INS9 INS42 INS43 INS43 INS43 INS42 INS42 INS42 INS14 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS43 INS42 INS40 INS42 INS42 INS42 INS42 INS32 INS42 INS40 INS42 INS32 INS42 INS32 INS42 INS2 INS42 INS42 INS27 INS40 INS34