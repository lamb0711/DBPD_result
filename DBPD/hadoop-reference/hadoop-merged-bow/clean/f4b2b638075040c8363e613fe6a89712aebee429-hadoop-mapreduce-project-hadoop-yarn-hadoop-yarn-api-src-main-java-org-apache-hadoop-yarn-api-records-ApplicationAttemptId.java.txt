Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1170378 13f79535-47bb-0310-9956-ffa450edef68

-public interface ApplicationAttemptId extends Comparable<ApplicationAttemptId>{
+import java.text.NumberFormat;
+
+import org.apache.hadoop.classification.InterfaceAudience.Private;
+import org.apache.hadoop.classification.InterfaceAudience.Public;
+import org.apache.hadoop.classification.InterfaceStability.Stable;
+import org.apache.hadoop.classification.InterfaceStability.Unstable;
+
+/**
+ * <p><code>ApplicationAttemptId</code> denotes the particular <em>attempt</em>
+ * of an <code>ApplicationMaster</code> for a given {@link ApplicationId}.</p>
+ * 
+ * <p>Multiple attempts might be needed to run an application to completion due
+ * to temporal failures of the <code>ApplicationMaster</code> such as hardware
+ * failures, connectivity issues etc. on the node on which it was scheduled.</p>
+ */
+@Public
+@Stable
+public abstract class ApplicationAttemptId implements
+    Comparable<ApplicationAttemptId> {
+  
+  /**
+   * Get the <code>ApplicationId</code> of the <code>ApplicationAttempId</code>. 
+   * @return <code>ApplicationId</code> of the <code>ApplicationAttempId</code>
+   */
+  @Public
+  @Stable
+  
+  @Private
+  @Unstable
+  public abstract void setApplicationId(ApplicationId appID);
+  
+  /**
+   * Get the <code>attempt id</code> of the <code>Application</code>.
+   * @return <code>attempt id</code> of the <code>Application</code>
+   */
-  public abstract void setApplicationId(ApplicationId appID);
+  @Private
+  @Unstable
+
+  
+  protected static final NumberFormat idFormat = NumberFormat.getInstance();
+  static {
+    idFormat.setGroupingUsed(false);
+    idFormat.setMinimumIntegerDigits(4);
+  }
+
+  protected static final NumberFormat counterFormat = NumberFormat
+      .getInstance();
+  static {
+    counterFormat.setGroupingUsed(false);
+    counterFormat.setMinimumIntegerDigits(6);
+  }
+
+  @Override
+  public int hashCode() {
+    // Generated by eclipse.
+    final int prime = 31;
+    int result = 1;
+    ApplicationId appId = getApplicationId();
+    result = prime * result + ((appId == null) ? 0 : appId.hashCode());
+    result = prime * result + getAttemptId();
+    return result;
+  }
+
+  @Override
+  public boolean equals(Object other) {
+    if (other == null)
+      return false;
+    if (other.getClass().isAssignableFrom(this.getClass())) {
+      ApplicationAttemptId otherAttemptId = (ApplicationAttemptId) other;
+      if (this.getApplicationId().equals(otherAttemptId.getApplicationId())) {
+        return this.getAttemptId() == otherAttemptId.getAttemptId();
+      }
+    }
+    return false;
+  }
+
+  @Override
+  public int compareTo(ApplicationAttemptId other) {
+    int compareAppIds = this.getApplicationId().compareTo(
+        other.getApplicationId());
+    if (compareAppIds == 0) {
+      return this.getAttemptId() - other.getAttemptId();
+    } else {
+      return compareAppIds;
+    }
+  }
+  
+  @Override
+  public String toString() {
+    String id =
+        (this.getApplicationId() != null) ? this.getApplicationId()
+            .getClusterTimestamp()
+            + "_"
+            + idFormat.format(this.getApplicationId().getId()) : "none";
+    return "appattempt_" + id + "_" + counterFormat.format(getAttemptId());
+  }

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS29 INS78 INS78 INS83 INS31 INS23 INS28 INS23 INS28 INS31 INS31 INS31 INS65 INS42 INS42 INS29 INS78 INS78 INS78 INS78 INS83 INS83 INS39 INS42 MOV44 INS29 INS78 INS78 UPD42 MOV44 INS83 INS83 INS83 INS43 INS59 INS83 INS8 INS83 INS83 INS83 INS43 INS59 INS83 INS8 INS78 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS8 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS65 INS65 INS42 INS42 INS42 INS42 INS65 INS65 INS42 INS42 INS42 INS42 INS32 INS21 INS21 INS42 INS42 INS32 INS21 INS21 INS42 INS60 INS60 INS60 INS21 INS21 INS41 INS42 INS43 INS42 INS25 INS25 INS41 INS42 INS43 INS42 INS60 INS25 INS42 INS42 INS60 INS41 INS42 INS66 INS66 INS66 INS66 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 INS83 INS39 INS59 INS39 INS59 INS43 INS59 INS7 INS7 INS42 INS42 INS27 INS41 INS32 INS8 INS9 INS42 INS39 INS59 INS27 INS8 INS8 INS43 INS59 INS27 INS42 INS42 INS9 INS42 INS42 INS34 INS42 INS42 INS9 INS42 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS42 INS32 INS42 INS27 INS42 INS27 INS42 INS33 INS9 INS32 INS42 INS32 INS60 INS25 INS42 INS32 INS42 INS34 INS41 INS41 INS42 INS42 INS16 INS45 INS42 INS45 INS32 INS42 INS27 INS36 INS27 INS32 INS42 INS42 INS52 INS42 INS43 INS59 INS32 INS8 INS32 INS42 INS32 INS27 INS42 INS36 INS27 INS45 INS42 INS42 INS32 INS42 INS42 INS16 INS42 INS42 INS42 INS42 INS42 INS11 INS32 INS42 INS32 INS41 INS52 INS42 INS42 INS42 INS32 INS32 INS27 INS32 INS45 INS32 INS42 INS36 INS34 INS32 INS43 INS42 INS52 INS42 INS42 INS42 INS27 INS52 INS42 INS42 INS42 INS32 INS33 INS32 INS42 INS42 INS42 INS32 INS27 INS42 INS42 INS42 INS32 INS32 INS52 INS42 INS52 INS42 INS32 INS42 INS42 INS33 INS52 INS42 INS42 INS42 INS52 INS42 DEL83 DEL39 DEL42