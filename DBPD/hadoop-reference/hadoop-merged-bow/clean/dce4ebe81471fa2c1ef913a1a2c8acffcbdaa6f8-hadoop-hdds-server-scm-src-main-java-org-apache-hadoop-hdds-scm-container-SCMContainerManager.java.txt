HDDS-694. Plugin new Pipeline management code in SCM.
Contributed by Lokesh Jain.

-import org.apache.hadoop.hdds.scm.container.common.helpers.Pipeline;
+import org.apache.hadoop.hdds.scm.pipeline.Pipeline;
-import org.apache.hadoop.hdds.scm.container.common.helpers.PipelineID;
-import org.apache.hadoop.hdds.scm.pipelines.PipelineSelector;
+import org.apache.hadoop.hdds.scm.pipeline.PipelineManager;
+import org.apache.hadoop.hdds.scm.pipeline.PipelineNotFoundException;
-  private final PipelineSelector pipelineSelector;
+  private final PipelineManager pipelineManager;
+   * @param pipelineManager - PipelineManager
-      final NodeManager nodeManager, final EventPublisher eventPublisher)
-      throws IOException {
+      final NodeManager nodeManager, PipelineManager pipelineManager,
+      final EventPublisher eventPublisher) throws IOException {
-    this.pipelineSelector = new PipelineSelector(nodeManager,
-            conf, eventPublisher, cacheSize);
+    this.pipelineManager = pipelineManager;
-      pipelineSelector.addContainerToPipeline(
-          container.getPipelineID(), container.getContainerID());
+      if (container.isOpen()) {
+        pipelineManager.addContainerToPipeline(container.getPipelineID(),
+            ContainerID.valueof(container.getContainerID()));
+      }
-      throws ContainerNotFoundException {
+      throws ContainerNotFoundException, PipelineNotFoundException {
-      String leaderId = "";
-        pipeline = pipelineSelector.getPipeline(contInfo.getPipelineID());
+        pipeline = pipelineManager.getPipeline(contInfo.getPipelineID());
-        if (!dnWithReplicas.isEmpty()) {
-          leaderId = dnWithReplicas.iterator().next()
-              .getDatanodeDetails().getUuidString();
-        }
-        pipeline = new Pipeline(leaderId, contInfo.getState(),
-            ReplicationType.STAND_ALONE, contInfo.getReplicationFactor(),
-            PipelineID.randomId());
-        dnWithReplicas.stream().map(ContainerReplica::getDatanodeDetails).
-            forEach(pipeline::addMember);
+        List<DatanodeDetails> dns =
+            dnWithReplicas.stream().map(ContainerReplica::getDatanodeDetails)
+                .collect(Collectors.toList());
+        pipeline = pipelineManager.createPipeline(ReplicationType.STAND_ALONE,
+            contInfo.getReplicationFactor(), dns);
-          .allocateContainer(pipelineSelector, type, replicationFactor, owner);
-      final Pipeline pipeline = pipelineSelector.getPipeline(
+          .allocateContainer(pipelineManager, type, replicationFactor, owner);
+      final Pipeline pipeline = pipelineManager.getPipeline(
-        pipelineSelector.removeContainerFromPipeline(
-            updatedContainer.getPipelineID(), containerID.getId());
+        pipelineManager.removeContainerFromPipeline(
+            updatedContainer.getPipelineID(), containerID);
-    Pipeline pipeline = pipelineSelector
+    Pipeline pipeline = pipelineManager
-
-    if (pipelineSelector != null) {
-      pipelineSelector.shutdown();
-    }
-  }
-
-  public PipelineSelector getPipelineSelector() {
-    return pipelineSelector;

MOV26 UPD40 UPD40 UPD40 UPD43 INS44 INS43 UPD42 UPD42 INS65 INS43 INS42 INS42 INS42 INS66 INS42 INS42 INS25 UPD42 INS32 INS8 UPD42 INS42 INS42 MOV21 INS60 INS74 INS59 UPD42 UPD42 UPD42 INS32 INS43 INS43 INS42 MOV32 INS32 UPD42 MOV42 INS42 INS42 MOV32 UPD42 INS42 INS42 UPD42 INS32 INS42 UPD42 MOV42 INS40 MOV32 UPD42 MOV42 INS42 INS42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL14 DEL42 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL42 DEL90 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL32 DEL40 DEL42 DEL32 DEL14 DEL21 DEL42 DEL32 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31