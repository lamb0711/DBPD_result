HDFS-7420. Delegate permission checks to FSDirectory. Contributed by Haohui Mai.

+import org.apache.hadoop.fs.permission.FsAction;
+import org.apache.hadoop.security.UserGroupInformation;
+  private final String fsOwnerShortUserName;
+  private final String supergroup;
-  FSDirectory(FSNamesystem ns, Configuration conf) {
+  FSDirectory(FSNamesystem ns, Configuration conf) throws IOException {
+    this.fsOwnerShortUserName =
+      UserGroupInformation.getCurrentUser().getShortUserName();
+    this.supergroup = conf.get(
+      DFSConfigKeys.DFS_PERMISSIONS_SUPERUSERGROUP_KEY,
+      DFSConfigKeys.DFS_PERMISSIONS_SUPERUSERGROUP_DEFAULT);
+
+
+  FSPermissionChecker getPermissionChecker()
+    throws AccessControlException {
+    try {
+      return new FSPermissionChecker(fsOwnerShortUserName, supergroup,
+          NameNode.getRemoteUser());
+    } catch (IOException ioe) {
+      throw new AccessControlException(ioe);
+    }
+  }
+
+  void checkOwner(FSPermissionChecker pc, String path)
+      throws AccessControlException, UnresolvedLinkException {
+    checkPermission(pc, path, true, null, null, null, null);
+  }
+
+  void checkPathAccess(FSPermissionChecker pc, String path,
+                       FsAction access)
+      throws AccessControlException, UnresolvedLinkException {
+    checkPermission(pc, path, false, null, null, access, null);
+  }
+  void checkParentAccess(
+      FSPermissionChecker pc, String path, FsAction access)
+      throws AccessControlException, UnresolvedLinkException {
+    checkPermission(pc, path, false, null, access, null, null);
+  }
+
+  void checkAncestorAccess(
+      FSPermissionChecker pc, String path, FsAction access)
+      throws AccessControlException, UnresolvedLinkException {
+    checkPermission(pc, path, false, access, null, null, null);
+  }
+
+  void checkTraverse(FSPermissionChecker pc, String path)
+      throws AccessControlException, UnresolvedLinkException {
+    checkPermission(pc, path, false, null, null, null, null);
+  }
+
+  /**
+   * Check whether current user have permissions to access the path. For more
+   * details of the parameters, see
+   * {@link FSPermissionChecker#checkPermission}.
+   */
+  private void checkPermission(
+    FSPermissionChecker pc, String path, boolean doCheckOwner,
+    FsAction ancestorAccess, FsAction parentAccess, FsAction access,
+    FsAction subAccess)
+    throws AccessControlException, UnresolvedLinkException {
+    checkPermission(pc, path, doCheckOwner, ancestorAccess,
+        parentAccess, access, subAccess, false, true);
+  }
+
+  /**
+   * Check whether current user have permissions to access the path. For more
+   * details of the parameters, see
+   * {@link FSPermissionChecker#checkPermission}.
+   */
+  void checkPermission(
+      FSPermissionChecker pc, String path, boolean doCheckOwner,
+      FsAction ancestorAccess, FsAction parentAccess, FsAction access,
+      FsAction subAccess, boolean ignoreEmptyDir, boolean resolveLink)
+      throws AccessControlException, UnresolvedLinkException {
+    if (!pc.isSuperUser()) {
+      readLock();
+      try {
+        pc.checkPermission(path, this, doCheckOwner, ancestorAccess,
+            parentAccess, access, subAccess, ignoreEmptyDir, resolveLink);
+      } finally {
+        readUnlock();
+      }
+    }
+  }

INS26 INS26 INS40 INS40 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS43 INS43 INS42 INS43 INS8 INS39 INS42 INS44 INS44 INS43 INS43 INS8 INS39 INS42 INS44 INS44 INS44 INS43 INS43 INS8 INS39 INS42 INS44 INS44 INS44 INS43 INS43 INS8 INS39 INS42 INS44 INS44 INS44 INS43 INS43 INS8 INS39 INS42 INS44 INS44 INS43 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS43 INS8 INS29 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS43 INS8 INS42 INS42 INS42 INS42 INS42 INS21 INS21 INS42 INS42 INS54 INS43 INS42 INS43 INS42 INS42 INS42 INS21 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS21 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS21 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS21 INS43 INS42 INS43 INS42 INS42 INS42 INS21 INS65 INS43 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS21 INS65 INS43 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS42 INS42 INS25 INS7 INS7 INS8 INS12 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS66 INS66 INS65 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS66 INS66 INS65 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS38 INS8 INS22 INS32 INS22 INS32 INS41 INS44 INS8 INS42 INS42 INS42 INS9 INS33 INS33 INS33 INS33 INS42 INS42 INS42 INS9 INS33 INS33 INS42 INS33 INS42 INS42 INS42 INS9 INS33 INS42 INS33 INS33 INS42 INS42 INS42 INS9 INS42 INS33 INS33 INS33 INS42 INS42 INS42 INS9 INS33 INS33 INS33 INS33 INS67 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS9 INS67 INS32 INS21 INS54 INS52 INS42 INS32 INS42 INS52 INS42 INS42 INS42 INS40 INS40 INS14 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS8 INS8 INS42 INS42 INS43 INS42 INS42 INS32 INS42 INS14 INS42 INS21 INS21 INS42 INS42 INS42 INS43 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42