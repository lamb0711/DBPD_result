Merge branch 'trunk' into HDDS-1535
+import com.amazonaws.thirdparty.apache.http.conn.ssl.SSLConnectionSocketFactory;
+import org.apache.hadoop.security.ssl.OpenSSLSocketFactory;
+import javax.net.ssl.HostnameVerifier;
+   * @param eTag S3 object eTag or null if unavailable
+   * @param versionId S3 object versionId or null if unavailable
-      String owner) {
+      String owner,
+      String eTag,
+      String versionId) {
-        size, summary.getLastModified(), blockSize, owner);
+        size, summary.getLastModified(), blockSize, owner, eTag, versionId);
+   * @param eTag S3 object eTag or null if unavailable
+   * @param versionId S3 object versionId or null if unavailable
-      boolean isDir, long size, long blockSize, String owner) {
+      boolean isDir, long size, long blockSize, String owner,
+      String eTag, String versionId) {
-    return createFileStatus(keyPath, isDir, size, date, blockSize, owner);
+    return createFileStatus(keyPath, isDir, size, date, blockSize, owner,
+        eTag, versionId);
-      long size, Date modified, long blockSize, String owner) {
+      long size, Date modified, long blockSize, String owner,
+      String eTag, String versionId) {
-          owner);
+          owner, eTag, versionId);
+   *
+   * @throws IOException if there was an error initializing the protocol
+   *                     settings
-      ClientConfiguration awsConf) {
+      ClientConfiguration awsConf) throws IOException {
-    boolean secureConnections = conf.getBoolean(SECURE_CONNECTIONS,
-        DEFAULT_SECURE_CONNECTIONS);
-    awsConf.setProtocol(secureConnections ?  Protocol.HTTPS : Protocol.HTTP);
+    initProtocolSettings(conf, awsConf);
+   * Initializes the connection protocol settings when connecting to S3 (e.g.
+   * either HTTP or HTTPS). If secure connections are enabled, this method
+   * will load the configured SSL providers.
+   *
+   * @param conf Hadoop configuration
+   * @param awsConf AWS SDK configuration
+   *
+   * @throws IOException if there is an error initializing the configured
+   *                     {@link javax.net.ssl.SSLSocketFactory}
+   */
+  private static void initProtocolSettings(Configuration conf,
+      ClientConfiguration awsConf) throws IOException {
+    boolean secureConnections = conf.getBoolean(SECURE_CONNECTIONS,
+        DEFAULT_SECURE_CONNECTIONS);
+    awsConf.setProtocol(secureConnections ?  Protocol.HTTPS : Protocol.HTTP);
+    if (secureConnections) {
+      OpenSSLSocketFactory.initializeDefaultFactory(
+              conf.getEnum(SSL_CHANNEL_MODE, DEFAULT_SSL_CHANNEL_MODE));
+      awsConf.getApacheHttpClientConfig().setSslSocketFactory(
+            new SSLConnectionSocketFactory(
+                    OpenSSLSocketFactory.getDefaultFactory(),
+                    (HostnameVerifier) null));
+    }
+  }
+
+  /**

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS65 INS65 INS43 INS42 INS43 INS42 INS65 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS65 INS42 INS21 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS42 MOV60 MOV21 INS25 INS42 INS66 INS42 INS66 INS42 INS42 INS42 INS66 INS42 INS66 INS42 INS42 INS42 INS42 INS42 INS66 INS66 INS32 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS65 INS42 INS42 INS42 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS21 INS21 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS11 INS42 INS42 INS42 INS43 INS33 INS42