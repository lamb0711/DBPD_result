HDDS-156. Implement HDDSVolume to manage volume state

-package org.apache.hadoop.ozone.container.common.impl;
+package org.apache.hadoop.ozone.container.common.volume;
+import com.google.common.annotations.VisibleForTesting;
-import org.apache.hadoop.fs.Path;
+import org.apache.hadoop.fs.GetSpaceUsed;
-  private final Path rootDir;
+  private final String rootDir;
-  private VolumeState state;
+  /**
+   * Builder for VolumeInfo.
+   */
-    private final Path rootDir;
+    private final String rootDir;
-    private VolumeState state;
-    public Builder(Path rootDir, Configuration conf) {
-      this.rootDir = rootDir;
-      this.conf = conf;
+    public Builder(String root, Configuration config) {
+      this.rootDir = root;
+      this.conf = config;
-    public Builder(String rootDirStr, Configuration conf) {
-      this.rootDir = new Path(rootDirStr);
-      this.conf = conf;
-    }
-
-    public Builder storageType(StorageType storageType) {
-      this.storageType = storageType;
+    public Builder storageType(StorageType st) {
+      this.storageType = st;
-    public Builder volumeState(VolumeState state) {
-      this.state = state;
-      return this;
-    }
-
-    public Builder configuredCapacity(long configuredCapacity) {
-      this.configuredCapacity = configuredCapacity;
+    public Builder configuredCapacity(long capacity) {
+      this.configuredCapacity = capacity;
-    File root = new File(rootDir.toString());
+    File root = new File(this.rootDir);
-    this.state = (b.state != null ? b.state : VolumeState.NOT_FORMATTED);
-
-
-    LOG.info("Creating Volume : " + rootDir + " of storage type : " +
-        storageType + " and capacity : " + configuredCapacity);
-  void shutdown() {
-    this.state = VolumeState.NON_EXISTENT;
-    shutdownUsageThread();
-  }
-
-  void failVolume() {
-    setState(VolumeState.FAILED);
-    shutdownUsageThread();
-  }
-
-  private void shutdownUsageThread() {
+  protected void shutdownUsageThread() {
-  void setState(VolumeState state) {
-    this.state = state;
-  }
-
-  public boolean isFailed() {
-    return (state == VolumeState.FAILED);
-  }
-
-  public Path getRootDir() {
+  public String getRootDir() {
-  public enum VolumeState {
-    NORMAL,
-    FAILED,
-    NON_EXISTENT,
-    NOT_FORMATTED,
+  /**
+   * Only for testing. Do not use otherwise.
+   */
+  @VisibleForTesting
+  public void setScmUsageForTesting(GetSpaceUsed scmUsageForTest) {
+    usage.setScmUsageForTesting(scmUsageForTest);

INS26 UPD40 INS40 UPD40 INS31 UPD43 INS29 INS23 UPD83 UPD43 INS29 INS78 INS83 MOV39 INS42 MOV44 MOV8 UPD42 INS65 MOV83 MOV83 INS43 MOV59 UPD42 INS65 INS42 UPD43 UPD42 INS66 MOV42 MOV43 UPD42 UPD42 UPD42 UPD42 MOV43 INS66 UPD42 INS32 UPD42 MOV42 INS42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 MOV43 MOV22 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL42 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL41 DEL8 DEL31 DEL42 DEL42 DEL32 DEL52 DEL42 DEL22 DEL40 DEL33 DEL27 DEL40 DEL40 DEL16 DEL36 DEL7 DEL21 DEL42 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL52 DEL42 DEL22 DEL40 DEL7 DEL21 DEL42 DEL32 DEL21 DEL8 DEL31 DEL39 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL32 DEL21 DEL8 DEL31 DEL39 DEL42 DEL31 DEL83 DEL39 DEL42 DEL42 DEL40 DEL27 DEL36 DEL41 DEL8 DEL31 DEL52 DEL42 DEL22 DEL42 DEL7 DEL83 DEL42 DEL42 DEL72 DEL42 DEL72 DEL42 DEL72 DEL42 DEL72 DEL71