HDFS-12357. Let NameNode to bypass external attribute provider for configured users. Contributed by Yongjun Zhang, Arun Suresh.

+import java.util.HashSet;
+  // A HashSet of principals of users for whom the external attribute provider
+  // will be bypassed
+  private HashSet<String> usersToBypassExtAttrProvider = null;
+
+
+    initUsersToBypassExtProvider(conf);
+  }
+
+  private void initUsersToBypassExtProvider(Configuration conf) {
+    String[] bypassUsers = conf.getTrimmedStrings(
+        DFSConfigKeys.DFS_NAMENODE_INODE_ATTRIBUTES_PROVIDER_BYPASS_USERS_KEY,
+        DFSConfigKeys.DFS_NAMENODE_INODE_ATTRIBUTES_PROVIDER_BYPASS_USERS_DEFAULT);
+    for(int i = 0; i < bypassUsers.length; i++) {
+      String tmp = bypassUsers[i].trim();
+      if (!tmp.isEmpty()) {
+        if (usersToBypassExtAttrProvider == null) {
+          usersToBypassExtAttrProvider = new HashSet<String>();
+        }
+        LOG.info("Add user " + tmp + " to the list that will bypass external"
+            + " attribute provider.");
+        usersToBypassExtAttrProvider.add(tmp);
+      }
+    }
+  }
+
+  /**
+   * Check if a given user is configured to bypass external attribute provider.
+   * @param user user principal
+   * @return true if the user is to bypass external attribute provider
+   */
+  private boolean isUserBypassingExtAttrProvider(final String user) {
+    return (usersToBypassExtAttrProvider != null) &&
+          usersToBypassExtAttrProvider.contains(user);
+  }
+
+  /**
+   * Return attributeProvider or null if ugi is to bypass attributeProvider.
+   * @param ugi
+   * @return configured attributeProvider or null
+   */
+  private INodeAttributeProvider getUserFilteredAttributeProvider(
+      UserGroupInformation ugi) {
+    if (attributeProvider == null ||
+        (ugi != null && isUserBypassingExtAttrProvider(ugi.getUserName()))) {
+      return null;
+    }
+    return attributeProvider;
-        fsOwner, superGroup, ugi, attributeProvider);
+        fsOwner, superGroup, ugi, getUserFilteredAttributeProvider(ugi));
-      throws FileNotFoundException {
+      throws IOException {
-    if (attributeProvider != null) {
+    UserGroupInformation ugi = NameNode.getRemoteUser();
+    INodeAttributeProvider ap = this.getUserFilteredAttributeProvider(ugi);
+    if (ap != null) {
-      nodeAttrs = attributeProvider.getAttributes(components, nodeAttrs);
+      nodeAttrs = ap.getAttributes(components, nodeAttrs);

INS26 INS40 INS23 INS31 INS31 INS31 INS83 INS74 INS59 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS44 INS8 UPD43 INS43 INS43 INS42 INS33 INS21 INS43 INS42 INS60 INS24 INS65 INS65 INS65 INS83 INS43 INS42 INS41 INS65 INS65 INS65 INS42 INS43 INS42 INS25 INS41 UPD42 INS60 INS60 INS42 INS42 INS32 INS42 INS5 INS59 INS58 INS27 INS37 INS8 INS66 INS42 INS66 INS66 INS42 INS27 INS66 INS42 INS66 INS42 INS27 INS8 INS42 INS43 INS59 INS43 INS59 INS42 INS42 INS43 INS85 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS60 INS25 INS36 INS32 INS27 INS36 INS41 INS32 INS42 INS42 INS32 INS42 INS42 INS32 UPD42 INS42 INS42 INS42 INS40 INS40 INS42 INS34 INS43 INS59 INS38 INS8 INS27 INS42 INS42 INS42 INS42 INS33 INS27 INS33 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS32 INS32 INS25 INS21 INS21 INS42 INS33 INS27 INS32 INS2 INS42 INS42 INS42 INS27 INS8 INS32 INS32 INS42 INS33 INS42 INS32 UPD42 INS42 INS42 INS42 INS33 INS21 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS7 INS45 INS42 INS45 INS45 INS42 INS14 INS74 INS43 INS43 INS42 INS42 DEL42