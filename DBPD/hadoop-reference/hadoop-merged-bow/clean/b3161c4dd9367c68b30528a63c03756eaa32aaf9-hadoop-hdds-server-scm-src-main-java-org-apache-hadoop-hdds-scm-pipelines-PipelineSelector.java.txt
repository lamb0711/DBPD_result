HDDS-297. Add pipeline actions in Ozone.  Contributed by Mukul Kumar Singh and Shashikant Banerjee

+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+  private final Map<PipelineID, Pipeline> pipelineMap;
+    pipelineMap = new ConcurrentHashMap<>();
-            containerSize, node2PipelineMap);
+            containerSize, node2PipelineMap, pipelineMap);
-            conf, node2PipelineMap);
+            conf, node2PipelineMap, pipelineMap);
-   * This function to return pipeline for given pipeline name and replication
-   * type.
+   * This function to return pipeline for given pipeline id.
-  public Pipeline getPipeline(PipelineID pipelineID,
-      ReplicationType replicationType) throws IOException {
-    if (pipelineID == null) {
-      return null;
-    }
-    PipelineManager manager = getPipelineManager(replicationType);
-    Preconditions.checkNotNull(manager, "Found invalid pipeline manager");
-    LOG.debug("Getting replication pipeline forReplicationType {} :" +
-        " pipelineName:{}", replicationType, pipelineID);
-    return manager.getPipeline(pipelineID);
+  public Pipeline getPipeline(PipelineID pipelineID) {
+    return pipelineMap.get(pipelineID);
-    LOG.debug("Finalizing pipeline. pipelineID: {}", pipeline.getId());
+    if (pipeline.getLifeCycleState() == LifeCycleState.CLOSING ||
+        pipeline.getLifeCycleState() == LifeCycleState.CLOSED) {
+      LOG.debug("pipeline:{} already in closing state, skipping",
+          pipeline.getId());
+      // already in closing/closed state
+      return;
+    }
+
+
+    LOG.info("Finalizing pipeline. pipelineID: {}", pipeline.getId());
-  private void closePipeline(Pipeline pipeline) {
+  private void closePipeline(Pipeline pipeline) throws IOException {
-  public void removePipeline(UUID dnId) {
-    Set<Pipeline> pipelineSet =
-        node2PipelineMap.getPipelines(dnId);
-    for (Pipeline pipeline : pipelineSet) {
-      getPipelineManager(pipeline.getType())
-          .closePipeline(pipeline);
-    }
-    node2PipelineMap.removeDatanode(dnId);
+  public Set<PipelineID> getPipelineId(UUID dnId) {
+    return node2PipelineMap.getPipelines(dnId);

INS26 INS26 INS40 INS40 INS23 INS31 INS83 INS83 INS74 INS59 INS29 INS83 MOV43 INS42 MOV44 INS8 MOV43 UPD74 MOV74 INS42 INS8 INS43 INS43 MOV43 INS42 INS21 INS65 MOV41 INS25 INS21 INS43 INS41 UPD42 MOV42 UPD42 MOV42 INS7 INS66 INS27 INS8 INS32 INS42 MOV32 INS42 INS14 UPD42 UPD42 INS27 INS27 MOV21 INS41 INS42 INS42 INS45 INS32 INS74 INS42 INS42 INS32 INS40 INS32 INS40 INS42 INS42 INS43 INS42 INS42 INS42 INS42 UPD45 INS42 DEL66 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL33 DEL41 DEL8 DEL25 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL45 DEL45 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL39 DEL42 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8