Merge trunk into HA branch.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1225264 13f79535-47bb-0310-9956-ffa450edef68

+  private float setupWeight = 0.05f;
+  private float cleanupWeight = 0.05f;
+  private float mapWeight = 0.0f;
+  private float reduceWeight = 0.0f;
-  private volatile Map<TaskId, Task> tasks = new LinkedHashMap<TaskId, Task>();
+  volatile Map<TaskId, Task> tasks = new LinkedHashMap<TaskId, Task>();
+  private float mapProgress;
+  private float reduceProgress;
+      computeProgress();
-          computeProgress(mapTasks), computeProgress(reduceTasks),
+          this.mapProgress, this.reduceProgress,
-  private float computeProgress(Set<TaskId> taskIds) {
-    readLock.lock();
+  @Override
+  public float getProgress() {
+    this.readLock.lock();
-      float progress = 0;
-      for (TaskId taskId : taskIds) {
-        Task task = tasks.get(taskId);
-        progress += task.getProgress();
-      }
-      int taskIdsSize = taskIds.size();
-      if (taskIdsSize != 0) {
-        progress = progress/taskIdsSize;
-      }
-      return progress;
+      computeProgress();
+      return (this.setupProgress * this.setupWeight + this.cleanupProgress
+          * this.cleanupWeight + this.mapProgress * this.mapWeight + this.reduceProgress
+          * this.reduceWeight);
-      readLock.unlock();
+      this.readLock.unlock();
+    }
+  }
+
+  private void computeProgress() {
+    this.readLock.lock();
+    try {
+      float mapProgress = 0f;
+      float reduceProgress = 0f;
+      for (Task task : this.tasks.values()) {
+        if (task.getType() == TaskType.MAP) {
+          mapProgress += task.getProgress();
+        } else {
+          reduceProgress += task.getProgress();
+        }
+      }
+      if (this.numMapTasks != 0) {
+        mapProgress = mapProgress / this.numMapTasks;
+      }
+      if (this.numReduceTasks != 0) {
+        reduceProgress = reduceProgress / this.numReduceTasks;
+      }
+      this.mapProgress = mapProgress;
+      this.reduceProgress = reduceProgress;
+    } finally {
+      this.readLock.unlock();
-    if (job.completedTaskCount == job.getTasks().size()) {
+    if (job.completedTaskCount == job.tasks.size()) {
+        } else if (job.numMapTasks == 0) {
+          job.reduceWeight = 0.9f;
+        } else if (job.numReduceTasks == 0) {
+          job.mapWeight = 0.9f;
+        } else {
+          job.mapWeight = job.reduceWeight = 0.45f;

INS23 INS23 INS23 INS23 INS23 INS23 INS31 INS31 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS78 INS83 INS39 INS42 INS8 INS83 INS39 INS42 MOV8 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS42 INS42 INS21 INS54 INS32 INS8 INS8 INS21 INS22 INS42 INS21 INS41 INS21 INS22 INS60 INS70 INS25 INS21 INS21 INS32 INS52 INS42 INS32 INS36 INS32 INS52 INS42 INS39 INS59 INS44 INS32 INS8 INS27 INS8 INS7 INS7 INS40 INS42 INS22 INS22 INS42 INS27 INS22 INS42 UPD42 UPD34 INS42 INS34 MOV43 UPD42 MOV42 INS22 INS42 INS25 INS22 INS22 INS34 INS21 INS22 INS42 INS22 INS42 INS22 INS25 INS52 INS42 INS52 INS42 INS27 INS27 INS52 INS42 INS52 INS42 INS27 MOV8 INS8 INS52 INS42 INS52 INS42 INS7 INS52 INS42 INS52 INS42 INS52 INS42 INS27 INS8 INS25 INS27 INS27 INS22 INS22 INS32 INS40 INS21 UPD42 INS42 INS27 INS40 INS34 INS21 INS27 INS8 INS8 INS27 INS27 INS22 INS22 INS52 INS42 INS52 INS42 INS42 INS42 INS7 UPD42 INS22 INS42 INS22 INS7 INS40 INS34 INS21 INS21 INS22 INS22 INS22 INS22 INS52 INS42 INS52 INS42 UPD42 INS42 INS32 INS52 INS42 INS52 INS42 INS40 INS34 INS7 INS7 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 UPD42 MOV42 UPD42 MOV42 INS40 INS34 INS40 INS7 INS40 INS34 DEL83 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL44 DEL42 DEL70 DEL39 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL41 DEL42 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL31 DEL42 DEL42 DEL32