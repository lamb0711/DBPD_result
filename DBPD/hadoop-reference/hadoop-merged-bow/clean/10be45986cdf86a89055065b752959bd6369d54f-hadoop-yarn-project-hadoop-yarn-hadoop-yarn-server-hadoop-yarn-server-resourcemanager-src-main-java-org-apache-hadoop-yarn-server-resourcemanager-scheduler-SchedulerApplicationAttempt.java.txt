YARN-5486. Update OpportunisticContainerAllocatorAMService::allocate method to handle OPPORTUNISTIC container requests. (Konstantinos Karanasos via asuresh)

+import org.apache.hadoop.yarn.api.records.ExecutionType;
+
+import org.apache.hadoop.yarn.server.scheduler.OpportunisticContainerContext;
+  /** Resource usage of opportunistic containers. */
+  protected ResourceUsage attemptOpportunisticResourceUsage =
+      new ResourceUsage();
+  private OpportunisticContainerContext oppContainerContext;
+
-  
+
+  public void setOpportunisticContainerContext(
+      OpportunisticContainerContext oppContext) {
+    this.oppContainerContext = oppContext;
+  }
+
+  public OpportunisticContainerContext
+      getOpportunisticContainerContext() {
+    return this.oppContainerContext;
+  }
+
+      if (rmContainer.getExecutionType() == ExecutionType.OPPORTUNISTIC) {
+        this.attemptOpportunisticResourceUsage.incUsed(
+            rmContainer.getAllocatedResource());
+      }
-      if (rmContainer != null && rmContainer.isRemotelyAllocated()) {
-        this.attemptResourceUsageAllocatedRemotely.decUsed(
-            rmContainer.getAllocatedResource());
+      if (rmContainer != null) {
+        if (rmContainer.getExecutionType() == ExecutionType.OPPORTUNISTIC) {
+          this.attemptOpportunisticResourceUsage
+              .decUsed(rmContainer.getAllocatedResource());
+        }
+        if (rmContainer.isRemotelyAllocated()) {
+          this.attemptResourceUsageAllocatedRemotely
+              .decUsed(rmContainer.getAllocatedResource());
+        }
-      NMToken nmToken =
-          rmContext.getNMTokenSecretManager().createAndGetNMToken(getUser(),
-              getApplicationAttemptId(), container);
-      if (nmToken != null) {
-        updatedNMTokens.add(nmToken);
-      }
+      updateNMToken(container);
+  public void updateNMTokens(Collection<Container> containers) {
+    for (Container container : containers) {
+      updateNMToken(container);
+    }
+  }
+
+  private void updateNMToken(Container container) {
+    NMToken nmToken =
+        rmContext.getNMTokenSecretManager().createAndGetNMToken(getUser(),
+            getApplicationAttemptId(), container);
+    if (nmToken != null) {
+      updatedNMTokens.add(nmToken);
+    }
+  }
+

INS26 INS26 INS40 INS40 INS23 INS23 INS31 INS31 INS31 INS31 INS29 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS65 INS42 INS42 INS14 INS42 INS42 INS43 INS42 INS21 INS42 INS41 INS74 INS42 INS70 INS43 INS42 MOV60 MOV25 INS66 INS43 INS42 INS7 INS22 INS43 INS43 INS44 INS42 INS8 INS42 INS42 INS22 INS42 INS52 INS42 INS25 INS25 INS21 INS42 INS42 INS43 INS42 INS21 INS52 INS42 INS27 INS8 MOV27 INS8 INS32 INS42 INS32 INS32 INS40 INS21 INS25 MOV25 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS27 INS8 MOV32 INS22 INS42 INS32 INS32 INS40 INS21 INS52 INS42 INS42 INS42 INS42 INS42 INS32 INS22 INS42 INS32 INS52 INS42 INS42 INS42 DEL27