HDFS-12159. Ozone: SCM: Add create replication pipeline RPC. Contributed by Anu Engineer.

-import org.apache.hadoop.hdfs.protocolPB.PBHelperClient;
-import org.apache.hadoop.scm.client.ScmClient;
+import org.apache.hadoop.ozone.protocol.proto.StorageContainerLocationProtocolProtos.PipelineRequestProto;
+import org.apache.hadoop.ozone.protocol.proto.StorageContainerLocationProtocolProtos.PipelineResponseProto;
-   * of datanodes that should be used creating this container.
-   *
-   * @param containerName - Name of the container.
-   * @return Pipeline.
-   * @throws IOException
-   */
-  @Override
-  public Pipeline allocateContainer(String containerName) throws IOException {
-    return allocateContainer(containerName, ScmClient.ReplicationFactor.ONE);
-  }
-
-  /**
-   * Asks SCM where a container should be allocated. SCM responds with the set
-   *
-   * @param containerName - Name of the container.
-   * @param replicationFactor - replication factor.
-   * @return Pipeline.
+   * @param type - Replication Type
+   * @param factor - Replication Count
+   * @param containerName - Name
+   * @return
-  public Pipeline allocateContainer(String containerName,
-      ScmClient.ReplicationFactor replicationFactor) throws IOException {
+  public Pipeline allocateContainer(OzoneProtos.ReplicationType type,
+      OzoneProtos.ReplicationFactor factor, String
+      containerName) throws IOException {
-        .setContainerName(containerName).setReplicationFactor(PBHelperClient
-            .convertReplicationFactor(replicationFactor)).build();
+        .setContainerName(containerName)
+        .setReplicationFactor(factor)
+        .setReplicationType(type)
+        .build();
+  /**
+   * Creates a replication pipeline of a specified type.
+   *
+   * @param replicationType - replication type
+   * @param factor - factor 1 or 3
+   * @param nodePool - optional machine list to build a pipeline.
+   * @throws IOException
+   */
+  @Override
+  public Pipeline createReplicationPipeline(OzoneProtos.ReplicationType
+      replicationType, OzoneProtos.ReplicationFactor factor, OzoneProtos
+      .NodePool nodePool) throws IOException {
+    PipelineRequestProto request = PipelineRequestProto.newBuilder()
+        .setNodePool(nodePool)
+        .setReplicationFactor(factor)
+        .setReplicationType(replicationType)
+        .build();
+    try {
+      PipelineResponseProto response =
+          rpcProxy.allocatePipeline(NULL_RPC_CONTROLLER, request);
+      if (response.getErrorCode() ==
+          PipelineResponseProto.Error.success) {
+        Preconditions.checkState(response.hasPipeline(), "With success, " +
+            "must come a pipeline");
+        return Pipeline.getFromProtoBuf(response.getPipeline());
+      } else {
+        String errorMessage = String.format("create replication pipeline " +
+                "failed. code : %s Message: %s", response.getErrorCode(),
+            response.hasErrorMessage() ? response.getErrorMessage() : "");
+        throw new IOException(errorMessage);
+      }
+    } catch (ServiceException e) {
+      throw ProtobufHelper.getRemoteException(e);
+    }
+  }
+

MOV26 MOV26 MOV31 UPD40 UPD40 MOV44 INS44 INS42 INS44 INS44 INS44 INS8 UPD65 INS65 INS43 INS42 UPD43 UPD42 INS65 UPD65 INS43 INS42 INS43 INS42 INS43 INS42 INS60 INS54 UPD42 UPD66 UPD42 UPD66 INS42 UPD66 INS40 UPD40 UPD66 UPD42 UPD66 INS42 INS66 INS42 UPD66 INS40 INS40 INS40 INS43 INS59 INS8 INS12 INS32 INS42 INS42 INS32 INS60 INS25 INS44 INS8 MOV32 INS42 INS32 INS42 INS43 INS59 INS27 INS8 INS8 INS43 UPD42 MOV42 INS53 UPD42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS32 INS40 INS21 INS41 INS60 INS53 INS42 INS32 UPD42 MOV42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS43 INS59 INS14 UPD42 MOV42 INS42 UPD42 MOV42 INS32 INS42 INS42 INS42 INS42 INS32 INS27 INS42 INS42 INS32 MOV42 INS42 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS45 INS45 INS42 INS42 INS42 INS42 INS27 INS32 INS16 INS42 INS45 INS45 INS42 INS42 INS32 INS32 INS45 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL66 DEL42 DEL43 DEL44 DEL40 DEL32 DEL41 DEL8