Merge branch 'YARN-5734' into trunk. (xgong)

-
+import com.google.common.base.Joiner;
+import org.apache.commons.codec.binary.Base64;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.MutableConfScheduler;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.MutableConfigurationProvider;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.activities.ActivitiesManager;
+import org.apache.hadoop.yarn.webapp.dao.SchedConfUpdateInfo;
+
+  @PUT
+  @Path("/scheduler-conf")
+  @Produces({ MediaType.APPLICATION_JSON + "; " + JettyUtils.UTF_8,
+      MediaType.APPLICATION_XML + "; " + JettyUtils.UTF_8 })
+  @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })
+  public synchronized Response updateSchedulerConfiguration(SchedConfUpdateInfo
+      mutationInfo, @Context HttpServletRequest hsr)
+      throws AuthorizationException, InterruptedException {
+    init();
+
+    UserGroupInformation callerUGI = getCallerUserGroupInformation(hsr, true);
+    ApplicationACLsManager aclsManager = rm.getApplicationACLsManager();
+    if (aclsManager.areACLsEnabled()) {
+      if (callerUGI == null || !aclsManager.isAdmin(callerUGI)) {
+        String msg = "Only admins can carry out this operation.";
+        throw new ForbiddenException(msg);
+      }
+    }
+
+    ResourceScheduler scheduler = rm.getResourceScheduler();
+    if (scheduler instanceof MutableConfScheduler && ((MutableConfScheduler)
+        scheduler).isConfigurationMutable()) {
+      try {
+        callerUGI.doAs(new PrivilegedExceptionAction<Void>() {
+          @Override
+          public Void run() throws Exception {
+            MutableConfigurationProvider provider = ((MutableConfScheduler)
+                scheduler).getMutableConfProvider();
+            if (!provider.getAclMutationPolicy().isMutationAllowed(callerUGI,
+                mutationInfo)) {
+              throw new org.apache.hadoop.security.AccessControlException("User"
+                  + " is not admin of all modified queues.");
+            }
+            provider.logAndApplyMutation(callerUGI, mutationInfo);
+            try {
+              rm.getRMContext().getRMAdminService().refreshQueues();
+            } catch (IOException | YarnException e) {
+              provider.confirmPendingMutation(false);
+              throw e;
+            }
+            provider.confirmPendingMutation(true);
+            return null;
+          }
+        });
+      } catch (IOException e) {
+        LOG.error("Exception thrown when modifying configuration.", e);
+        return Response.status(Status.BAD_REQUEST).entity(e.getMessage())
+            .build();
+      }
+      return Response.status(Status.OK).entity("Configuration change " +
+          "successfully applied.").build();
+    } else {
+      return Response.status(Status.BAD_REQUEST)
+          .entity("Configuration change only supported by " +
+              "MutableConfScheduler.")
+          .build();
+    }
+  }

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS78 INS79 INS79 INS79 INS83 INS83 INS43 INS42 INS44 INS44 INS43 INS43 INS8 INS42 INS42 INS45 INS42 INS4 INS42 INS4 INS42 INS43 INS42 INS78 INS43 INS42 INS42 INS42 INS21 INS60 INS60 INS25 INS60 INS25 INS27 INS27 INS40 INS40 INS42 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS32 INS8 INS43 INS59 INS27 INS8 INS8 INS40 INS45 INS40 INS40 INS45 INS40 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS25 INS42 INS42 INS32 INS62 INS32 INS54 INS41 INS41 INS42 INS42 INS9 INS42 INS42 INS27 INS8 INS42 INS42 INS42 INS43 INS36 INS42 INS8 INS12 INS32 INS32 INS27 INS38 INS60 INS53 INS42 INS11 INS21 INS44 INS8 INS32 INS42 INS32 INS42 INS42 INS33 INS32 INS43 INS59 INS14 INS43 INS42 INS32 INS43 INS42 INS21 INS41 INS32 INS42 INS27 INS32 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS45 INS43 INS42 INS42 INS42 INS42 INS14 INS42 INS32 INS32 INS42 INS42 INS40 INS45 INS45 INS42 INS42 INS40 INS45 INS45 INS42 INS74 INS1 INS42 INS42 INS45 INS42 INS32 INS42 INS43 INS43 INS31 INS32 INS42 INS32 INS42 INS42 INS78 INS83 INS43 INS42 INS43 INS8 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS60 INS25 INS21 INS54 INS21 INS41 INS43 INS59 INS38 INS8 INS32 INS8 INS12 INS32 INS33 INS42 INS42 INS32 INS32 INS53 INS42 INS42 INS42 INS42 INS21 INS44 INS8 INS42 INS42 INS9 INS36 INS42 INS32 INS42 INS42 INS42 INS14 INS32 INS84 INS42 INS21 INS53 INS11 INS42 INS42 INS43 INS27 INS32 INS42 INS43 INS43 INS32 INS42 INS43 INS42 INS40 INS45 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS42