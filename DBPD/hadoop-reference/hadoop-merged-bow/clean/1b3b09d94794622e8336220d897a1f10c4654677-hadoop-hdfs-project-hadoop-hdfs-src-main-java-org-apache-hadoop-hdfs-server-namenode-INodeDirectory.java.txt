HDFS-4124. Refactor INodeDirectory#getExistingPathINodes() to enable returningmore than INode array. Contributed by Jing Zhao.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1403304 13f79535-47bb-0310-9956-ffa450edef68

-    INode[] inode  = new INode[1];
-    getExistingPathINodes(components, inode, resolveLink);
-    return inode[0];
+    INodesInPath inodesInPath = getExistingPathINodes(components, 1,
+        resolveLink);
+    return inodesInPath.inodes[0];
-   * @param existing array to fill with existing INodes
+   * @param numOfINodes number of INodes to return
-   * @return number of existing INodes in the path
+   * @return the specified number of existing INodes in the path
-  int getExistingPathINodes(byte[][] components, INode[] existing, 
-      boolean resolveLink) throws UnresolvedLinkException {
+  INodesInPath getExistingPathINodes(byte[][] components, int numOfINodes,
+      boolean resolveLink)
+      throws UnresolvedLinkException {
+    INodesInPath existing = new INodesInPath(numOfINodes);
-    int index = existing.length - components.length;
+    int index = numOfINodes - components.length;
-        existing[index] = curNode;
+        existing.inodes[index] = curNode;
-    return count;
+    return existing;
-    INode[] inodes = new INode[components.length];
-
-    this.getExistingPathINodes(components, inodes, resolveLink);
-    
-    return inodes;
+    INodesInPath inodes = this.getExistingPathINodes(components,
+        components.length, resolveLink);
+    return inodes.inodes;
-    INode[] inodes  = new INode[2];
-    getExistingPathINodes(pathComponents, inodes, false);
-    INode inode = inodes[0];
+    INodesInPath inodes =  getExistingPathINodes(pathComponents, 2, false);
+    INode inode = inodes.inodes[0];
+  
+  /**
+   * Used by
+   * {@link INodeDirectory#getExistingPathINodes(byte[][], int, boolean)}.
+   * Containing INodes information resolved from a given path.
+   */
+  static class INodesInPath {
+    private INode[] inodes;
+    
+    public INodesInPath(int number) {
+      assert (number >= 0);
+      this.inodes = new INode[number];
+    }
+    
+    INode[] getINodes() {
+      return inodes;
+    }
+  }

INS31 INS55 MOV29 MOV83 MOV43 MOV42 MOV44 MOV44 MOV43 INS8 INS43 INS29 INS83 INS42 INS23 INS31 INS31 MOV60 INS41 INS42 INS39 INS42 INS60 INS60 INS41 INS60 INS65 INS83 MOV5 INS59 INS83 INS42 INS44 INS8 MOV5 INS42 INS8 INS43 INS2 UPD42 UPD66 UPD66 INS43 INS59 UPD42 INS43 INS59 INS40 INS43 INS59 INS66 INS65 INS66 INS66 INS42 INS39 INS42 INS6 INS21 MOV41 UPD42 MOV42 UPD42 INS32 INS40 INS34 INS42 INS42 INS14 UPD42 MOV42 MOV42 INS32 INS42 MOV42 INS32 INS68 INS36 INS7 INS42 INS42 INS34 INS42 INS43 INS42 INS42 MOV52 MOV42 MOV42 INS40 MOV42 MOV42 MOV42 INS34 MOV9 INS40 INS42 INS42 INS69 INS69 INS69 INS27 INS22 MOV3 INS42 INS5 INS39 INS39 INS42 INS34 INS52 INS42 INS42 INS39 INS85 INS85 INS40 DEL43 DEL85 DEL5 DEL42 DEL43 DEL85 DEL5 DEL34 DEL3 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL34 DEL2 DEL41 DEL8 DEL31 DEL39 DEL42 DEL43 DEL85 DEL5 DEL42 DEL40 DEL42 DEL43 DEL85 DEL5 DEL40 DEL3 DEL59 DEL60 DEL42 DEL32 DEL21 DEL59 DEL60 DEL42 DEL32 DEL21 DEL42 DEL34