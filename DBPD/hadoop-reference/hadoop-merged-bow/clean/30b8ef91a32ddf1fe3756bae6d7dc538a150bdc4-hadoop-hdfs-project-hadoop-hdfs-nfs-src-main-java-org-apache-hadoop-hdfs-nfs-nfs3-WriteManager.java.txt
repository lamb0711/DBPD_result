HDFS-5078 Support file append in NFSv3 gateway to enable data streaming to HDFS. Contributed by Brandon Li

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1518292 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.fs.CommonConfigurationKeysPublic;
+import org.apache.hadoop.hdfs.client.HdfsDataOutputStream;
+  private final Configuration config;
+    this.config = config;
-      WccData fileWcc = new WccData(Nfs3Utils.getWccAttr(preOpAttr), preOpAttr);
-      WRITE3Response response = new WRITE3Response(Nfs3Status.NFS3ERR_IO,
-          fileWcc, count, request.getStableHow(),
-          Nfs3Constant.WRITE_COMMIT_VERF);
-      Nfs3Utils.writeChannel(channel, response.send(new XDR(), xid));
-      return;
+
+      String fileIdPath = Nfs3Utils.getFileIdPath(fileHandle.getFileId());
+      HdfsDataOutputStream fos = null;
+      Nfs3FileAttributes latestAttr = null;
+      try {
+        int bufferSize = config.getInt(
+            CommonConfigurationKeysPublic.IO_FILE_BUFFER_SIZE_KEY,
+            CommonConfigurationKeysPublic.IO_FILE_BUFFER_SIZE_DEFAULT);
+        
+        fos = dfsClient.append(fileIdPath, bufferSize, null, null);
+
+        latestAttr = Nfs3Utils.getFileAttr(dfsClient, fileIdPath, iug);
+      } catch (IOException e) {
+        LOG.error("Can't apapend to file:" + fileIdPath + ", error:" + e);
+        if (fos != null) {
+          fos.close();
+        }
+        WccData fileWcc = new WccData(Nfs3Utils.getWccAttr(preOpAttr),
+            preOpAttr);
+        WRITE3Response response = new WRITE3Response(Nfs3Status.NFS3ERR_IO,
+            fileWcc, count, request.getStableHow(),
+            Nfs3Constant.WRITE_COMMIT_VERF);
+        Nfs3Utils.writeChannel(channel, response.send(new XDR(), xid));
+        return;
+      }
+
+      // Add open stream
+      String writeDumpDir = config.get(Nfs3Constant.FILE_DUMP_DIR_KEY,
+          Nfs3Constant.FILE_DUMP_DIR_DEFAULT);
+      openFileCtx = new OpenFileCtx(fos, latestAttr, writeDumpDir + "/"
+          + fileHandle.getFileId());
+      addOpenFileStream(fileHandle, openFileCtx);
+      if (LOG.isDebugEnabled()) {
+        LOG.debug("opened stream for file:" + fileHandle.getFileId());
+      }

INS26 INS26 INS40 INS40 INS23 INS83 INS83 INS43 INS59 INS42 INS42 INS21 INS7 INS8 INS22 INS42 MOV21 INS60 INS60 INS60 INS54 INS60 INS21 INS21 INS25 INS52 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS8 INS12 INS43 INS59 INS7 INS32 INS32 INS8 INS42 INS42 INS32 INS42 INS42 INS33 INS42 INS42 INS33 INS60 INS21 INS21 INS44 MOV8 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS32 INS39 INS59 INS7 INS7 INS43 INS42 INS21 INS25 INS42 INS42 INS40 INS40 INS43 INS42 INS42 INS27 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS27 INS8 INS42 INS42 INS45 INS32 INS42 INS42 INS27 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS42 INS33 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS33 INS21 INS42 INS42 INS45 INS32 INS45 INS42 INS45 INS42 INS32 INS42 INS42 INS42 INS42