HDDS-1041. Support TDE(Transparent Data Encryption) for Ozone.
Contributed by Xiaoyu Yao.

+   * Bucket encryption key info if encryption is enabled.
+   */
+  private BucketEncryptionKeyInfo bekInfo;
+
+  /**
+   * @param metadata - metadata.
+   * @param bekInfo - bucket encryption key info.
+  @SuppressWarnings("checkstyle:ParameterNumber")
-                       Map<String, String> metadata) {
+                       Map<String, String> metadata,
+                       BucketEncryptionKeyInfo bekInfo) {
+    this.bekInfo = bekInfo;
+   * Returns bucket encryption key info.
+   * @return bucket encryption key info
+   */
+  public BucketEncryptionKeyInfo getEncryptionKeyInfo() {
+    return bekInfo;
+  }
+
+
+  /**
+    private BucketEncryptionKeyInfo bekInfo;
+    public Builder setBucketEncryptionKey(
+        BucketEncryptionKeyInfo info) {
+      this.bekInfo = info;
+      return this;
+    }
+
-          isVersionEnabled, storageType, creationTime, metadata
-      );
+          isVersionEnabled, storageType, creationTime, metadata, bekInfo);
-    return BucketInfo.newBuilder()
+    BucketInfo.Builder bib =  BucketInfo.newBuilder()
-        .addAllMetadata(KeyValueUtil.toProtobuf(metadata))
-        .build();
+        .addAllMetadata(KeyValueUtil.toProtobuf(metadata));
+    if (bekInfo != null && bekInfo.getKeyName() != null) {
+      bib.setBeinfo(OMPBHelper.convert(bekInfo));
+    }
+    return bib.build();
-    return new OmBucketInfo(
-        bucketInfo.getVolumeName(),
-        bucketInfo.getBucketName(),
-        bucketInfo.getAclsList().stream().map(
-            OMPBHelper::convertOzoneAcl).collect(Collectors.toList()),
-        bucketInfo.getIsVersionEnabled(),
-        StorageType.valueOf(bucketInfo.getStorageType()),
-        bucketInfo.getCreationTime(),
-        KeyValueUtil.getFromProtobuf(bucketInfo.getMetadataList()));
+    OmBucketInfo.Builder obib = OmBucketInfo.newBuilder()
+        .setVolumeName(bucketInfo.getVolumeName())
+        .setBucketName(bucketInfo.getBucketName())
+        .setAcls(bucketInfo.getAclsList().stream().map(
+            OMPBHelper::convertOzoneAcl).collect(Collectors.toList()))
+        .setIsVersionEnabled(bucketInfo.getIsVersionEnabled())
+        .setStorageType(StorageType.valueOf(bucketInfo.getStorageType()))
+        .setCreationTime(bucketInfo.getCreationTime());
+    if (bucketInfo.getMetadataList() != null) {
+      obib.addAllMetadata(KeyValueUtil
+          .getFromProtobuf(bucketInfo.getMetadataList()));
+    }
+    if (bucketInfo.hasBeinfo()) {
+      obib.setBucketEncryptionKey(OMPBHelper.convert(bucketInfo.getBeinfo()));
+    }
+    return obib.build();
-        Objects.equals(metadata, that.metadata);
+        Objects.equals(metadata, that.metadata) &&
+        Objects.equals(bekInfo, that.bekInfo);

INS23 INS31 INS29 INS83 INS43 INS59 INS79 INS44 INS29 INS83 INS43 INS42 INS8 INS23 INS31 INS65 INS42 INS42 INS65 INS65 INS42 INS45 INS43 INS42 INS21 INS65 INS65 INS42 INS41 INS83 INS43 INS59 INS83 INS43 INS42 INS44 INS8 INS60 INS25 INS60 INS25 INS25 INS41 INS66 INS42 INS66 INS42 INS66 INS42 INS7 INS66 INS66 INS42 INS42 INS42 INS42 INS43 INS42 INS21 INS41 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS32 INS8 INS32 INS27 INS22 INS42 INS42 INS7 INS52 INS40 INS42 MOV32 INS27 INS27 INS21 INS42 INS40 INS42 INS32 INS32 INS33 INS21 INS42 INS42 INS21 INS42 INS42 MOV27 INS32 INS52 INS42 INS22 INS42 MOV43 INS42 INS42 INS33 INS32 INS33 INS32 INS32 INS42 MOV32 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS40 INS52 INS42 MOV42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 MOV32 INS42 INS42 MOV32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 MOV32 INS42 INS42 INS32 INS32 INS42 MOV32 INS42 INS42 INS32 INS42 MOV32 INS32 INS42 MOV32 INS42 INS42 DEL14 DEL41