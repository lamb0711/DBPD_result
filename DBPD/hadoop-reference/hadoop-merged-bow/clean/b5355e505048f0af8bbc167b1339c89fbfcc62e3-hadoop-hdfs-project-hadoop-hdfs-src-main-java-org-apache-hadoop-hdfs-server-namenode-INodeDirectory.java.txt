Merge r1402274 through r1402603 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1402605 13f79535-47bb-0310-9956-ffa450edef68

+  /** Cast INode to INodeDirectory. */
+  public static INodeDirectory valueOf(INode inode, String path
+      ) throws IOException {
+    if (inode == null) {
+      throw new IOException("Directory does not exist: " + path);
+    }
+    if (!inode.isDirectory()) {
+      throw new IOException("Path is not a directory: " + path);
+    }
+    return (INodeDirectory)inode; 
+  }
+
-   * Return the INode of the last component in components, or null if the last
+   * @return the INode of the last component in components, or null if the last
-  private INode getNode(byte[][] components, boolean resolveLink) 
-    throws UnresolvedLinkException {
+  private INode getNode(byte[][] components, boolean resolveLink
+      ) throws UnresolvedLinkException {
-    if(addToParent(pathComponents, newNode,
-                    true) == null)
-      return null;
-    return newNode;
+    return addToParent(pathComponents, newNode, true) == null? null: newNode;
-  INodeDirectory getParent(byte[][] pathComponents)
-  throws FileNotFoundException, UnresolvedLinkException {
-    int pathLen = pathComponents.length;
-    if (pathLen < 2)  // add root
+  INodeDirectory getParent(byte[][] pathComponents
+      ) throws FileNotFoundException, UnresolvedLinkException {
+    if (pathComponents.length < 2)  // add root
-  INodeDirectory addToParent( byte[][] pathComponents,
-                              INode newNode,
-                              boolean propagateModTime
-                            ) throws FileNotFoundException, 
-                                     UnresolvedLinkException {
-              
-    int pathLen = pathComponents.length;
-    if (pathLen < 2)  // add root
+  INodeDirectory addToParent(byte[][] pathComponents, INode newNode,
+      boolean propagateModTime) throws FileNotFoundException, UnresolvedLinkException {
+    if (pathComponents.length < 2) { // add root
-    newNode.name = pathComponents[pathLen-1];
+    }
+    newNode.name = pathComponents[pathComponents.length - 1];
-    if(parent.addChild(newNode, propagateModTime) == null)
-      return null;
-    return parent;
+    return parent.addChild(newNode, propagateModTime) == null? null: parent;
+   * @return an empty list if the children list is null;
+   *         otherwise, return the children list.
+   *         The returned list should not be modified.
-  List<INode> getChildren() {
-    return children==null ? new ArrayList<INode>() : children;
+  public List<INode> getChildrenList() {
+    return children==null ? EMPTY_LIST : children;
-  List<INode> getChildrenRaw() {
+  /** @return the children list which is possibly null. */
+  public List<INode> getChildren() {

INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS83 UPD42 INS29 INS83 UPD42 INS65 INS42 MOV43 INS42 INS43 INS42 INS42 INS25 INS25 INS41 UPD65 INS41 INS65 INS65 INS66 INS42 INS27 INS8 INS38 INS8 INS11 UPD66 INS16 INS8 INS16 INS66 INS66 INS66 INS66 INS42 INS33 INS53 INS32 INS53 INS43 INS42 MOV27 INS33 INS42 INS40 INS40 MOV41 MOV27 INS33 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS43 INS27 INS43 INS27 INS40 INS42 INS45 INS42 INS42 INS45 INS42 DEL33 DEL41 DEL25 DEL42 DEL41 DEL39 DEL42 DEL40 DEL59 DEL60 DEL42 DEL39 DEL42 DEL40 DEL59 DEL60 DEL42 DEL33 DEL41 DEL42 DEL25 DEL42 DEL42 DEL43 DEL74 DEL14