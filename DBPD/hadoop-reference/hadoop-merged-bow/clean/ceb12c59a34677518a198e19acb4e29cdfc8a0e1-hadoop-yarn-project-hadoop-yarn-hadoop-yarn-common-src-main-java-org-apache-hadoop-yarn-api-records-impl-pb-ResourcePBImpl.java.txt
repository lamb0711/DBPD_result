YARN-4715. Add support to read resource types from a config file. Contributed by Varun Vasudev.

-import org.apache.hadoop.yarn.exceptions.YarnException;
+import org.apache.hadoop.yarn.exceptions.YarnRuntimeException;
+import org.apache.hadoop.yarn.util.resource.ResourceUtils;
+
-    try {
-      ResourceInformation ri =
-          this.getResourceInformation(ResourceInformation.MEMORY.getName());
-      return (int) UnitsConversionUtil
-          .convert(ri.getUnits(), "M", ri.getValue()).longValue();
-    } catch (YarnException ye) {
-      // memory should always be present
-      initResourcesMap();
-      return 0;
-    }
+    // memory should always be present
+    initResourcesMap();
+    ResourceInformation ri =
+        this.getResourceInformation(ResourceInformation.MEMORY_MB.getName());
+    return UnitsConversionUtil.convert(ri.getUnits(), "M", ri.getValue());
-    try {
-      return (int) this.getResourceValue(ResourceInformation.VCORES.getName())
-          .longValue();
-    } catch (YarnException ye) {
-      // vcores should always be present
-      initResourcesMap();
-      return 0;
-    }
+    // vcores should always be present
+    initResourcesMap();
+    return this.getResourceValue(ResourceInformation.VCORES.getName())
+        .intValue();
-  public void setResources(Map<String, ResourceInformation> resources) {
-    maybeInitBuilder();
-    if (resources == null || resources.isEmpty()) {
-      builder.clearResourceValueMap();
-    } else {
-      for (Map.Entry<String, ResourceInformation> entry : resources.entrySet()) {
-        if (!entry.getKey().equals(entry.getValue().getName())) {
-          entry.getValue().setName(entry.getKey());
-        }
-      }
-    }
-    this.resources = resources;
-  }
-
-  @Override
-  public ResourceInformation getResourceInformation(String resource)
-      throws YarnException {
+  public ResourceInformation getResourceInformation(String resource) {
-  public Long getResourceValue(String resource) throws YarnException {
+  public Long getResourceValue(String resource) {
-    }
-    ResourceInformation ri;
-    if (!resources.containsKey(ResourceInformation.MEMORY.getName())) {
-      ri = ResourceInformation
-          .newInstance(ResourceInformation.MEMORY_MB.getName(),
-              ResourceInformation.MEMORY_MB.getUnits());
-      this.resources.put(ResourceInformation.MEMORY.getName(), ri);
-    }
-    if (!resources.containsKey(ResourceInformation.VCORES.getName())) {
-      ri =
-          ResourceInformation.newInstance(ResourceInformation.VCORES.getName());
-      this.resources.put(ResourceInformation.VCORES.getName(), ri);
+      Map<String, ResourceInformation> types = ResourceUtils.getResourceTypes();
+      if (types == null) {
+        throw new YarnRuntimeException(
+            "Got null return value from ResourceUtils.getResourceTypes()");
+      }
+      for (Map.Entry<String, ResourceInformation> entry : types.entrySet()) {
+        resources.put(entry.getKey(),
+            ResourceInformation.newInstance(entry.getValue()));
+      }

INS26 UPD40 INS40 MOV8 MOV8 MOV21 MOV21 MOV32 MOV32 MOV8 UPD42 MOV21 INS60 INS25 MOV74 INS59 INS27 INS8 MOV8 MOV40 INS42 INS32 INS42 INS33 INS53 UPD42 INS42 INS42 INS14 INS43 INS45 INS42 INS42 INS32 INS42 INS42 UPD42 MOV42 MOV32 DEL39 DEL42 DEL32 DEL11 DEL42 DEL43 DEL42 DEL44 DEL34 DEL41 DEL8 DEL12 DEL54 DEL8 DEL39 DEL11 DEL42 DEL43 DEL42 DEL44 DEL34 DEL41 DEL8 DEL12 DEL54 DEL8 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL44 DEL42 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL31 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL38 DEL25 DEL8 DEL8 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL40 DEL42 DEL32 DEL32 DEL38 DEL42 DEL42 DEL42 DEL40 DEL42 DEL32 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL40 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL40 DEL42 DEL32 DEL32 DEL38 DEL42 DEL42 DEL42 DEL40 DEL42 DEL32 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL40 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL25