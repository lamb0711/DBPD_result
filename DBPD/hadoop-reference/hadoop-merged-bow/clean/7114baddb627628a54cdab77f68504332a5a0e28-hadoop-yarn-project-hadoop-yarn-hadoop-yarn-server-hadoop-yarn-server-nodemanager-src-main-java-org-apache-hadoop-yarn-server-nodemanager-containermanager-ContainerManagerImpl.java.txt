YARN-4051. ContainerKillEvent lost when container is still recovering and application finishes. Contributed by sandflee

-    if (context.getApplications().containsKey(appId)) {
-      recoverActiveContainer(launchContext, token, rcs);
+    Application app = context.getApplications().get(appId);
+    if (app != null) {
+      recoverActiveContainer(app, launchContext, token, rcs);
-  protected void recoverActiveContainer(
+  protected void recoverActiveContainer(Application app,
-    dispatcher.getEventHandler().handle(new ApplicationContainerInitEvent(
-        container));
+    app.handle(new ApplicationContainerInitEvent(container));
+      if (container.isRecovering()) {
+        throw new NMNotYetReadyException("Container " + containerIDStr
+            + " is recovering, try later");
+      }
+
+        boolean shouldDropEvent = false;
+        for (Container container : app.getContainers().values()) {
+          if (container.isRecovering()) {
+            LOG.info("drop FINISH_APPS event to " + appID + " because "
+                + "container " + container.getContainerId()
+                + " is recovering");
+            shouldDropEvent = true;
+            break;
+          }
+        }
+        if (shouldDropEvent) {
+          continue;
+        }
+
-      for (ContainerId container : containersFinishedEvent
+      for (ContainerId containerId : containersFinishedEvent
-          this.dispatcher.getEventHandler().handle(
-              new ContainerKillEvent(container,
+        ApplicationId appId =
+            containerId.getApplicationAttemptId().getApplicationId();
+        Application app = this.context.getApplications().get(appId);
+        if (app == null) {
+          LOG.warn("couldn't find app " + appId + " while processing"
+              + " FINISH_CONTAINERS event");
+          continue;
+        }
+
+        Container container = app.getContainers().get(containerId);
+        if (container == null) {
+          LOG.warn("couldn't find container " + containerId
+              + " while processing FINISH_CONTAINERS event");
+          continue;
+        }
+
+        if (container.isRecovering()) {
+          LOG.info("drop FINISH_CONTAINERS event to " + containerId
+              + " because container is recovering");
+          continue;
+        }
+
+        this.dispatcher.getEventHandler().handle(
+              new ContainerKillEvent(containerId,

INS44 INS60 INS43 INS42 INS43 INS59 INS27 INS42 INS42 INS42 MOV32 INS42 INS33 UPD42 MOV42 INS25 INS8 UPD42 INS32 INS8 INS60 INS70 INS25 UPD42 INS60 INS60 INS25 INS60 INS25 INS25 MOV21 INS42 INS42 INS42 INS53 INS39 INS59 INS44 INS32 INS8 INS42 INS8 INS43 INS59 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS32 INS8 INS14 INS42 INS9 INS43 INS42 INS32 INS42 INS25 INS18 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS18 INS42 INS42 INS32 INS42 INS33 INS21 INS18 INS42 INS42 INS21 INS18 INS43 INS27 INS42 INS42 INS42 INS32 INS8 INS32 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 UPD42 INS42 INS45 INS42 INS45 INS42 INS42 INS21 INS21 INS10 INS42 INS42 INS22 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS32 INS7 INS52 INS42 INS45 INS42 INS45 INS45 INS45 INS42 INS45 INS45 INS42 INS45 INS42 INS42 INS27 INS42 INS9 INS45 INS42 INS45 INS45 INS32 INS45 INS42 INS42 DEL42 DEL32 DEL8