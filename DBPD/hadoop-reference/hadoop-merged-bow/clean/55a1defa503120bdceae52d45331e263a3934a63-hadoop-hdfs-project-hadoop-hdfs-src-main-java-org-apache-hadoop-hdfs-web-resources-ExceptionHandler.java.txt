HDFS-6475. WebHdfs clients fail without retry because incorrect handling of StandbyException. Contributed by Yongjun Zhang.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605217 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.ipc.StandbyException;
+import org.apache.hadoop.security.token.SecretManager.InvalidToken;
+import com.google.common.annotations.VisibleForTesting;
-    final Throwable t = e.getCause();
-    if (t != null && t instanceof Exception) {
-      e = (Exception)e.getCause();
+    final Throwable t = e.getCause();    
+    if (e instanceof SecurityException) {
+      // For the issue reported in HDFS-6475, if SecurityException's cause
+      // is InvalidToken, and the InvalidToken's cause is StandbyException,
+      // return StandbyException; Otherwise, leave the exception as is,
+      // since they are handled elsewhere. See HDFS-6588.
+      if (t != null && t instanceof InvalidToken) {
+        final Throwable t1 = t.getCause();
+        if (t1 != null && t1 instanceof StandbyException) {
+          e = (StandbyException)t1;
+        }
+      }
+    } else {
+      if (t != null && t instanceof Exception) {
+        e = (Exception)t;
+      }
+    if (e instanceof SecurityException) {
+      e = toCause(e);
+    }
+    
+  
+  @VisibleForTesting
+  public void initResponse(HttpServletResponse response) {
+    this.response = response;
+  }

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS8 INS78 INS83 INS39 INS42 INS44 INS8 MOV60 INS25 MOV41 INS25 INS42 INS43 INS42 INS21 INS62 INS8 MOV8 INS62 INS8 INS42 INS7 INS42 INS43 INS25 INS42 INS43 INS21 INS22 INS42 INS42 INS27 INS8 INS42 INS7 INS52 INS42 INS27 INS62 INS60 INS25 INS42 INS32 INS42 INS33 INS42 INS43 INS83 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS32 INS27 INS62 INS21 INS42 INS42 INS42 INS33 INS42 INS43 INS7 INS42 INS42 INS42 INS11 INS43 INS42 INS42 DEL42 DEL42 DEL32