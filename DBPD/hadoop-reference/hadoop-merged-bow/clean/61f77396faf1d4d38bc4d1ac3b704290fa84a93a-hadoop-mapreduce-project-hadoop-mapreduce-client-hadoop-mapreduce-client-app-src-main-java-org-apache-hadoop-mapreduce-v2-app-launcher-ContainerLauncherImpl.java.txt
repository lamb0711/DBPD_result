Merge trunk into HA branch.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1202940 13f79535-47bb-0310-9956-ffa450edef68

+  final Timer commandTimer = new Timer(true);
-  private static class CommandTimer extends TimerTask {
+  private static class CommandTimerTask extends TimerTask {
-    protected final ContainerLauncherEvent event;
+    private boolean cancelled = false;
-    public CommandTimer(Thread thread, ContainerLauncherEvent event) {
+    public CommandTimerTask(Thread thread, ContainerLauncherEvent event) {
+      super();
-      this.event = event;
-      LOG.warn(this.message);
-      this.commandThread.interrupt();
+      synchronized (this) {
+        if (this.cancelled) {
+          return;
+        }
+        LOG.warn(this.message);
+        StackTraceElement[] trace = this.commandThread.getStackTrace();
+        StringBuilder logMsg = new StringBuilder();
+        for (int i = 0; i < trace.length; i++) {
+          logMsg.append("\n\tat " + trace[i]);
+        }
+        LOG.info("Stack trace of the command-thread: \n" + logMsg.toString());
+        this.commandThread.interrupt();
+      }
+    }
+
+    @Override
+    public boolean cancel() {
+      synchronized (this) {
+        this.cancelled = true;
+        return super.cancel();
+      }
-      Timer timer = new Timer(true);
-
+      CommandTimerTask timerTask = new CommandTimerTask(Thread
+          .currentThread(), event);
+
-          timer.schedule(new CommandTimer(Thread.currentThread(), event),
-              nmTimeOut);
+          commandTimer.schedule(timerTask, nmTimeOut);
-          if (Thread.currentThread().isInterrupted()) {
+          if (Thread.interrupted()) {
-            String message = "Start-container for " + event.getContainerID()
+            String message = "Container launch failed for " + containerID
+                + " : Start-container for " + event.getContainerID()
-          timer.cancel();
-          if (Thread.currentThread().isInterrupted()) {
+          timerTask.cancel();
+          if (Thread.interrupted()) {
-            String message = "Start-container for " + event.getContainerID()
+            String message = "Container launch failed for " + containerID
+                + " : Start-container for " + event.getContainerID()
+          if (Thread.interrupted()) {
+            // The timer cancelled the command in the mean while.
+            LOG.info("Start-container for " + event.getContainerID()
+                + " got interrupted.");
+          }
-          timer.cancel();
-          ContainerLauncherImpl.this.rpc.stopProxy(proxy, getConfig());
+          timerTask.cancel();
+          if (proxy != null) {
+            ContainerLauncherImpl.this.rpc.stopProxy(proxy, getConfig());
+          }
-            timer.schedule(new CommandTimer(Thread.currentThread(), event),
-                nmTimeOut);
+            commandTimer.schedule(timerTask, nmTimeOut);
-            if (Thread.currentThread().isInterrupted()) {
+            if (Thread.interrupted()) {
+
+            if (Thread.interrupted()) {
+              // The timer cancelled the command in the mean while, clear the
+              // interrupt flag
+              LOG.info("Stop-container for " + event.getContainerID()
+                  + " got interrupted.");
+            }
+
-            timer.cancel();
-            ContainerLauncherImpl.this.rpc.stopProxy(proxy, getConfig());
+            timerTask.cancel();
+            if (Thread.interrupted()) {
+              LOG.info("Stop-container for " + event.getContainerID()
+                  + " got interrupted.");
+              // ignore the cleanup failure
+              context.getEventHandler()
+                  .handle(new TaskAttemptDiagnosticsUpdateEvent(taskAttemptID,
+                    "cleanup failed for container " + event.getContainerID()));
+            }
+            if (proxy != null) {
+              ContainerLauncherImpl.this.rpc.stopProxy(proxy, getConfig());
+            }

INS23 INS83 MOV43 MOV59 UPD42 INS23 INS31 UPD42 UPD83 MOV83 INS39 INS59 UPD42 MOV78 INS83 INS39 INS42 INS8 INS78 UPD39 UPD42 INS8 MOV60 INS42 INS9 INS46 INS51 INS42 INS51 INS52 INS8 INS52 INS8 INS43 INS59 INS25 MOV21 INS60 INS60 INS24 INS21 MOV21 INS21 INS41 INS42 INS42 MOV14 INS8 INS22 INS8 INS5 INS59 INS43 INS59 INS58 INS27 INS37 INS8 INS32 INS7 INS48 UPD43 INS21 INS25 INS52 INS42 INS41 INS43 INS85 UPD42 MOV42 INS32 INS42 INS42 INS14 INS39 INS59 INS42 INS40 INS42 INS21 INS42 INS42 INS27 INS22 INS9 INS42 UPD42 INS25 INS32 INS27 INS8 UPD42 MOV42 INS22 INS42 INS43 INS42 INS34 INS32 INS45 INS32 INS52 INS42 UPD42 INS42 MOV42 UPD42 MOV21 UPD42 MOV42 UPD42 MOV21 INS32 INS8 INS42 INS42 INS42 INS33 INS21 INS25 INS25 INS52 INS42 INS42 INS42 INS42 INS27 INS42 INS42 MOV43 MOV43 INS42 INS42 INS21 INS32 INS25 INS32 INS8 INS27 MOV8 INS45 INS2 INS27 INS27 INS32 MOV22 INS42 MOV42 MOV32 UPD42 INS42 MOV42 UPD42 INS32 INS8 UPD42 INS42 INS42 INS21 MOV21 INS42 INS33 INS42 INS42 INS45 INS42 INS45 INS32 INS45 INS45 INS42 INS45 INS32 INS45 INS42 INS42 MOV27 INS42 INS42 INS42 INS21 INS32 INS42 INS42 INS42 INS42 UPD45 INS32 INS42 INS42 MOV27 INS32 UPD42 INS14 INS42 INS42 INS27 UPD45 UPD45 INS42 INS42 INS43 INS42 INS27 INS45 INS32 INS45 INS42 INS45 INS32 INS42 INS42 INS42 UPD42 MOV42 DEL83 DEL43 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL42 DEL32 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL14 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21