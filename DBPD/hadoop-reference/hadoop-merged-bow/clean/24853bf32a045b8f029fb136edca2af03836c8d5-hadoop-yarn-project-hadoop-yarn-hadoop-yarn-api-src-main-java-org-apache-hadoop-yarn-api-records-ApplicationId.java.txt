YARN-6768. Improve performance of yarn api record toString and fromString. Contributed by Jonathan Eagles

-import java.text.NumberFormat;
-import java.util.Iterator;
-import java.util.NoSuchElementException;
-
+import org.apache.hadoop.util.FastNumberFormat;
-import com.google.common.base.Splitter;
-
-  private static Splitter _spliter = Splitter.on('_').trimResults();
+  private static final String APPLICATION_ID_PREFIX = appIdStrPrefix + '_';
+
-  static final ThreadLocal<NumberFormat> appIdFormat =
-    new ThreadLocal<NumberFormat>() {
-      @Override
-      public NumberFormat initialValue() {
-        NumberFormat fmt = NumberFormat.getInstance();
-        fmt.setGroupingUsed(false);
-        fmt.setMinimumIntegerDigits(4);
-        return fmt;
-      }
-    };
+  private static final int APP_ID_MIN_DIGITS = 4;
-    return appIdStrPrefix + "_" + this.getClusterTimestamp() + "_" + appIdFormat
-        .get().format(getId());
-  }
-  
-  private static ApplicationId toApplicationId(
-      Iterator<String> it) throws NumberFormatException {
-    ApplicationId appId = ApplicationId.newInstance(Long.parseLong(it.next()),
-        Integer.parseInt(it.next()));
-    return appId;
+    StringBuilder sb = new StringBuilder(64);
+    sb.append(APPLICATION_ID_PREFIX);
+    sb.append(getClusterTimestamp());
+    sb.append('_');
+    FastNumberFormat.format(sb, getId(), APP_ID_MIN_DIGITS);
+    return sb.toString();
-    Iterator<String> it = _spliter.split((appIdStr)).iterator();
-    if (!it.next().equals(appIdStrPrefix)) {
+    if (!appIdStr.startsWith(APPLICATION_ID_PREFIX)) {
-      return toApplicationId(it);
+      int pos1 = APPLICATION_ID_PREFIX.length() - 1;
+      int pos2 = appIdStr.indexOf('_', pos1 + 1);
+      if (pos2 < 0) {
+        throw new IllegalArgumentException("Invalid ApplicationId: "
+            + appIdStr);
+      }
+      long rmId = Long.parseLong(appIdStr.substring(pos1 + 1, pos2));
+      int appId = Integer.parseInt(appIdStr.substring(pos2 + 1));
+      ApplicationId applicationId = ApplicationId.newInstance(rmId, appId);
+      return applicationId;
-    } catch (NoSuchElementException e) {
-      throw new IllegalArgumentException("Invalid ApplicationId: "
-          + appIdStr, e);
-

MOV26 MOV23 UPD40 INS31 INS83 MOV43 INS83 INS39 MOV78 MOV83 MOV43 MOV42 INS8 INS8 UPD42 INS27 UPD42 INS34 INS60 INS21 INS21 INS21 INS21 MOV41 MOV25 INS54 INS42 INS13 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS8 MOV12 UPD42 MOV42 INS42 INS14 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 INS13 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV32 UPD42 MOV42 INS42 INS42 INS60 INS60 INS25 INS60 INS60 INS60 INS41 INS43 INS34 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 INS39 INS59 INS39 INS59 INS27 MOV8 INS39 INS59 INS39 MOV59 MOV43 INS59 INS42 UPD42 MOV42 INS42 INS27 INS42 INS32 INS42 INS34 INS42 INS32 UPD42 INS42 INS32 INS32 INS34 INS42 INS42 INS13 INS27 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS27 INS42 INS42 UPD42 MOV42 INS27 INS42 INS34 INS42 INS34 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL13 DEL32 DEL42 DEL32 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL9 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL1 DEL14 DEL42 DEL42 DEL45 DEL52 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL41 DEL8 DEL31 DEL83 DEL83 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL32 DEL32 DEL32 DEL32 DEL32 DEL59 DEL60 DEL8 DEL31 DEL32 DEL42 DEL42 DEL42 DEL36 DEL32 DEL42 DEL43 DEL42 DEL43 DEL74 DEL60 DEL32 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL12 DEL54 DEL8