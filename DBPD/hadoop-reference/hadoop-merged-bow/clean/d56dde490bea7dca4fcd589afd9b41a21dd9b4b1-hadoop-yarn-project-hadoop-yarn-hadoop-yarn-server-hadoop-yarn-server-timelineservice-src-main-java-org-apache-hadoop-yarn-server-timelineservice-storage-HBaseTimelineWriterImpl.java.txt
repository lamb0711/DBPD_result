YARN-4700. ATS storage has one extra record each time the RM got restarted. (Naganarasimha G R via Varun Saxena)

+import org.apache.hadoop.yarn.server.metrics.ApplicationMetricsConstants;
+import org.apache.hadoop.yarn.server.timelineservice.storage.flow.AggregationOperation;
-import org.apache.hadoop.yarn.server.timelineservice.storage.flow.AggregationOperation;
-        if (TimelineStorageUtils.isApplicationCreated(te)) {
+        TimelineEvent event = TimelineStorageUtils.getApplicationEvent(te,
+            ApplicationMetricsConstants.CREATED_EVENT_TYPE);
+        if (event != null) {
-              flowRunId, appId, te);
+              flowRunId, appId, te, event.getTimestamp());
-        // values
-        // of all metrics
-        if (TimelineStorageUtils.isApplicationFinished(te)) {
+        // values of all metrics
+        event = TimelineStorageUtils.getApplicationEvent(te,
+            ApplicationMetricsConstants.FINISHED_EVENT_TYPE);
+        if (event != null) {
-              flowRunId, appId, te);
+              flowRunId, appId, te, event.getTimestamp());
-      TimelineEntity te) throws IOException {
+      TimelineEntity te, long appCreatedTimeStamp) throws IOException {
-        flowRunId, appId, te);
+        flowRunId, appId, appCreatedTimeStamp);
-      TimelineEntity te) throws IOException {
-    byte[] rowKey = FlowActivityRowKey.getRowKey(clusterId, userId, flowName);
+      long activityTimeStamp) throws IOException {
+    byte[] rowKey = FlowActivityRowKey.getRowKey(clusterId, activityTimeStamp,
+        userId, flowName);
-      TimelineEntity te) throws IOException {
+      TimelineEntity te, long appFinishedTimeStamp) throws IOException {
-        appId, te);
+        appId, te, appFinishedTimeStamp);
-        flowRunId, appId, te);
+        flowRunId, appId, appFinishedTimeStamp);
-      String flowName, long flowRunId, String appId, TimelineEntity te)
-      throws IOException {
-    byte[] rowKey = FlowRunRowKey.getRowKey(clusterId, userId, flowName,
-        flowRunId);
-    Attribute attributeAppId = AggregationCompactionDimension.APPLICATION_ID
-        .getAttribute(appId);
+      String flowName, long flowRunId, String appId, TimelineEntity te,
+      long appFinishedTimeStamp) throws IOException {
+    byte[] rowKey =
+        FlowRunRowKey.getRowKey(clusterId, userId, flowName, flowRunId);
+    Attribute attributeAppId =
+        AggregationCompactionDimension.APPLICATION_ID.getAttribute(appId);
-        TimelineStorageUtils.getApplicationFinishedTime(te), attributeAppId);
+        appFinishedTimeStamp, attributeAppId);

MOV26 INS26 INS40 INS44 INS44 INS44 INS39 INS42 INS39 INS42 INS39 INS42 INS39 INS42 UPD42 INS42 UPD42 UPD42 MOV42 INS42 INS60 INS25 INS21 INS25 INS43 INS59 INS27 MOV8 INS7 INS27 MOV8 INS42 INS42 INS32 INS42 INS33 INS42 INS32 INS42 INS33 MOV42 UPD42 MOV42 MOV42 INS40 MOV42 UPD42 MOV42 MOV42 INS40 INS32 INS32 INS42 INS42 INS42 INS42 DEL32 DEL25 DEL32 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32