YARN-1769. CapacityScheduler: Improve reservations. Contributed by Thomas Graves

+  
+  synchronized public NodeId getNodeIdToUnreserve(Priority priority,
+      Resource capability) {
+
+    // first go around make this algorithm simple and just grab first
+    // reservation that has enough resources
+    Map<NodeId, RMContainer> reservedContainers = this.reservedContainers
+        .get(priority);
+
+    if ((reservedContainers != null) && (!reservedContainers.isEmpty())) {
+      for (Map.Entry<NodeId, RMContainer> entry : reservedContainers.entrySet()) {
+        // make sure we unreserve one with at least the same amount of
+        // resources, otherwise could affect capacity limits
+        if (Resources.fitsIn(capability, entry.getValue().getContainer()
+            .getResource())) {
+          if (LOG.isDebugEnabled()) {
+            LOG.debug("unreserving node with reservation size: "
+                + entry.getValue().getContainer().getResource()
+                + " in order to allocate container with size: " + capability);
+          }
+          return entry.getKey();
+        }
+      }
+    }
+    return null;
+  }
+

INS31 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS42 INS43 INS42 INS43 INS42 INS60 INS25 INS41 INS42 INS42 INS74 INS59 INS27 INS8 INS33 INS43 INS43 INS43 INS42 INS32 INS36 INS36 INS70 INS42 INS42 INS42 INS22 INS42 INS42 INS27 INS38 INS44 INS32 INS8 INS52 INS42 INS42 INS33 INS32 INS74 INS42 INS42 INS42 INS25 INS42 INS42 INS43 INS43 INS43 INS32 INS8 INS40 INS42 INS42 INS42 INS42 INS42 INS32 INS25 INS41 INS32 INS42 INS32 INS8 INS32 INS32 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS27 INS45 INS32 INS45 INS42 INS32 INS42 INS32 INS42 INS42 INS42