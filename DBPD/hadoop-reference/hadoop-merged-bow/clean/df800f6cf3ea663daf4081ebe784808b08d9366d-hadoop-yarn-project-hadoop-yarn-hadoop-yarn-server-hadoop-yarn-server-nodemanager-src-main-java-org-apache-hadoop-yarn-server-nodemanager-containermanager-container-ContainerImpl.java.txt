YARN-7240. Add more states and transitions to stabilize the NM Container state machine. (Kartheek Muthyala via asuresh)

+
+import org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.UpdateContainerSchedulerEvent;
-    .addTransition(ContainerState.NEW, ContainerState.DONE,
-            ContainerEventType.PAUSE_CONTAINER, new KillOnPauseTransition())
+    .addTransition(ContainerState.NEW, ContainerState.NEW,
+        ContainerEventType.UPDATE_CONTAINER_TOKEN, new UpdateTransition())
-    .addTransition(ContainerState.LOCALIZING, ContainerState.KILLING,
-        ContainerEventType.PAUSE_CONTAINER, new KillOnPauseTransition())
+    .addTransition(ContainerState.LOCALIZING, ContainerState.LOCALIZING,
+        ContainerEventType.UPDATE_CONTAINER_TOKEN, new UpdateTransition())
+
+    .addTransition(ContainerState.LOCALIZATION_FAILED,
+        ContainerState.LOCALIZATION_FAILED,
+        ContainerEventType.UPDATE_CONTAINER_TOKEN, new UpdateTransition())
+    .addTransition(ContainerState.SCHEDULED, ContainerState.SCHEDULED,
+        ContainerEventType.UPDATE_CONTAINER_TOKEN,
+        new NotifyContainerSchedulerOfUpdateTransition())
-    .addTransition(ContainerState.RUNNING, ContainerState.REINITIALIZING,
+    .addTransition(ContainerState.RUNNING,
+        EnumSet.of(ContainerState.RUNNING,
+            ContainerState.REINITIALIZING,
+            ContainerState.REINITIALIZING_AWAITING_KILL),
-    .addTransition(ContainerState.RUNNING, ContainerState.REINITIALIZING,
+    .addTransition(ContainerState.RUNNING,
+        EnumSet.of(ContainerState.RUNNING,
+            ContainerState.REINITIALIZING,
+            ContainerState.REINITIALIZING_AWAITING_KILL),
-    ContainerEventType.PAUSE_CONTAINER, new PauseContainerTransition())
+        ContainerEventType.PAUSE_CONTAINER, new PauseContainerTransition())
+    .addTransition(ContainerState.RUNNING, ContainerState.RUNNING,
+        ContainerEventType.UPDATE_CONTAINER_TOKEN,
+        new NotifyContainerSchedulerOfUpdateTransition())
+
+    .addTransition(ContainerState.PAUSING, ContainerState.PAUSING,
+        ContainerEventType.RESOURCE_LOCALIZED,
+        new ResourceLocalizedWhileRunningTransition())
+    .addTransition(ContainerState.PAUSING, ContainerState.PAUSING,
+        ContainerEventType.RESOURCE_LOCALIZED,
+        new ResourceLocalizedWhileRunningTransition())
+    .addTransition(ContainerState.PAUSING, ContainerState.PAUSING,
+        ContainerEventType.UPDATE_CONTAINER_TOKEN,
+        new NotifyContainerSchedulerOfUpdateTransition())
+    // This can happen during re-initialization.
+    .addTransition(ContainerState.PAUSED, ContainerState.PAUSED,
+        ContainerEventType.RESOURCE_LOCALIZED,
+        new ResourceLocalizedWhileRunningTransition())
+    .addTransition(ContainerState.PAUSED, ContainerState.PAUSED,
+        ContainerEventType.UPDATE_CONTAINER_TOKEN,
+        new NotifyContainerSchedulerOfUpdateTransition())
+    // This can happen during re-initialization
+    .addTransition(ContainerState.RESUMING, ContainerState.RESUMING,
+        ContainerEventType.RESOURCE_LOCALIZED,
+        new ResourceLocalizedWhileRunningTransition())
+    .addTransition(ContainerState.RESUMING, ContainerState.RESUMING,
+        ContainerEventType.UPDATE_CONTAINER_TOKEN,
+        new NotifyContainerSchedulerOfUpdateTransition())
+    // NOTE - We cannot get a PAUSE_CONTAINER while in RESUMING state.
-        ContainerState.REINITIALIZING,
+        EnumSet.of(ContainerState.REINITIALIZING,
+            ContainerState.REINITIALIZING_AWAITING_KILL),
-    .addTransition(ContainerState.REINITIALIZING, ContainerState.KILLING,
-        ContainerEventType.PAUSE_CONTAINER, new KillOnPauseTransition())
+    .addTransition(ContainerState.REINITIALIZING, ContainerState.PAUSING,
+        ContainerEventType.PAUSE_CONTAINER, new PauseContainerTransition())
+        ContainerState.REINITIALIZING,
+        ContainerEventType.UPDATE_CONTAINER_TOKEN,
+        new NotifyContainerSchedulerOfUpdateTransition())
+
+    // from REINITIALIZING_AWAITING_KILL
+    .addTransition(ContainerState.REINITIALIZING_AWAITING_KILL,
+        ContainerState.EXITED_WITH_SUCCESS,
+        ContainerEventType.CONTAINER_EXITED_WITH_SUCCESS,
+        new ExitedWithSuccessTransition(true))
+    .addTransition(ContainerState.REINITIALIZING_AWAITING_KILL,
+        ContainerState.EXITED_WITH_FAILURE,
+        ContainerEventType.CONTAINER_EXITED_WITH_FAILURE,
+        new ExitedWithFailureTransition(true))
+    .addTransition(ContainerState.REINITIALIZING_AWAITING_KILL,
+        ContainerState.REINITIALIZING_AWAITING_KILL,
+        ContainerEventType.UPDATE_DIAGNOSTICS_MSG,
+        UPDATE_DIAGNOSTICS_TRANSITION)
+    .addTransition(ContainerState.REINITIALIZING_AWAITING_KILL,
+        ContainerState.KILLING,
+        ContainerEventType.KILL_CONTAINER, new KillTransition())
+    .addTransition(ContainerState.REINITIALIZING_AWAITING_KILL,
+        ContainerState.SCHEDULED, ContainerEventType.PAUSE_CONTAINER)
+    .addTransition(ContainerState.REINITIALIZING_AWAITING_KILL,
+    .addTransition(ContainerState.REINITIALIZING_AWAITING_KILL,
+        ContainerState.REINITIALIZING_AWAITING_KILL,
+        ContainerEventType.UPDATE_CONTAINER_TOKEN,
+        new NotifyContainerSchedulerOfUpdateTransition())
+    .addTransition(ContainerState.RELAUNCHING, ContainerState.RELAUNCHING,
+        ContainerEventType.UPDATE_CONTAINER_TOKEN,
+        new NotifyContainerSchedulerOfUpdateTransition())
+
+    // No transition - assuming container is on its way to completion
+    .addTransition(ContainerState.EXITED_WITH_SUCCESS,
+        ContainerState.EXITED_WITH_SUCCESS,
+        ContainerEventType.UPDATE_CONTAINER_TOKEN)
+    // No transition - assuming container is on its way to completion
+    .addTransition(ContainerState.EXITED_WITH_FAILURE,
+        ContainerState.EXITED_WITH_FAILURE,
+        ContainerEventType.UPDATE_CONTAINER_TOKEN)
+    // No transition - assuming container is on its way to completion
+    .addTransition(ContainerState.KILLING, ContainerState.KILLING,
+        ContainerEventType.UPDATE_CONTAINER_TOKEN)
+    // No transition - assuming container is on its way to completion
+    .addTransition(ContainerState.CONTAINER_CLEANEDUP_AFTER_KILL,
+        ContainerState.CONTAINER_CLEANEDUP_AFTER_KILL,
+        ContainerEventType.UPDATE_CONTAINER_TOKEN)
+    // No transition - assuming container is on its way to completion
+    .addTransition(ContainerState.DONE, ContainerState.DONE,
+        ContainerEventType.UPDATE_CONTAINER_TOKEN)
+    case REINITIALIZING_AWAITING_KILL:
+  static class UpdateTransition extends ContainerTransition {
+    @Override
+    public void transition(
+        ContainerImpl container, ContainerEvent event) {
+      UpdateContainerTokenEvent updateEvent = (UpdateContainerTokenEvent)event;
+      // Update the container token
+      container.setContainerTokenIdentifier(updateEvent.getUpdatedToken());
+      if (updateEvent.isResourceChange()) {
+        try {
+          // Persist change in the state store.
+          container.context.getNMStateStore().storeContainerResourceChanged(
+              container.containerId,
+              container.getContainerTokenIdentifier().getVersion(),
+              container.getResource());
+        } catch (IOException e) {
+          LOG.warn("Could not store container [" + container.containerId
+              + "] resource change..", e);
+        }
+      }
+    }
+  }
+
+  static class NotifyContainerSchedulerOfUpdateTransition extends
+      UpdateTransition {
+    @Override
+    public void transition(
+        ContainerImpl container, ContainerEvent event) {
+
+      UpdateContainerTokenEvent updateEvent = (UpdateContainerTokenEvent)event;
+      // Save original token
+      ContainerTokenIdentifier originalToken =
+          container.containerTokenIdentifier;
+      super.transition(container, updateEvent);
+      container.dispatcher.getEventHandler().handle(
+          new UpdateContainerSchedulerEvent(container,
+              originalToken, updateEvent));
+    }
+  }
+
-  static class ReInitializeContainerTransition extends ContainerTransition {
+  static class ReInitializeContainerTransition implements
+      MultipleArcTransition<ContainerImpl, ContainerEvent, ContainerState> {
-    public void transition(ContainerImpl container, ContainerEvent event) {
+    public ContainerState transition(
+        ContainerImpl container, ContainerEvent event) {
+      boolean resourcesPresent = false;
+          resourcesPresent = true;
+        return ContainerState.RUNNING;
+      return resourcesPresent ?
+          ContainerState.REINITIALIZING_AWAITING_KILL :
+          ContainerState.REINITIALIZING;
-      extends ContainerTransition {
+      implements MultipleArcTransition
+      <ContainerImpl, ContainerEvent, ContainerState> {
+
-    public void transition(ContainerImpl container, ContainerEvent event) {
+    public ContainerState transition(
+        ContainerImpl container, ContainerEvent event) {
+        return ContainerState.REINITIALIZING_AWAITING_KILL;
+      return ContainerState.REINITIALIZING;

INS26 INS40 INS83 INS42 INS55 INS55 INS83 INS42 MOV43 INS31 INS83 INS42 INS43 INS31 INS74 INS74 INS32 MOV49 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS32 INS42 INS49 INS42 INS43 INS42 INS43 INS42 INS60 INS21 INS25 INS42 INS43 INS42 INS43 INS42 INS60 INS60 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS60 INS41 INS42 UPD42 MOV42 INS42 INS42 INS42 INS25 INS41 INS32 INS42 INS40 INS40 INS40 INS42 INS42 INS42 INS43 INS59 INS32 INS32 INS8 INS42 INS42 INS43 INS59 INS43 INS59 INS48 INS32 INS39 INS59 INS16 MOV32 MOV8 INS40 INS32 INS42 INS40 INS40 MOV32 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS54 INS42 INS42 INS11 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS42 INS14 INS42 INS9 INS42 INS40 INS40 INS41 INS32 INS42 INS40 INS40 INS40 INS42 INS43 INS42 INS42 INS42 INS8 INS12 INS43 INS42 INS40 INS42 INS43 INS42 INS42 INS42 INS8 INS41 INS40 INS32 INS42 INS40 INS40 INS40 INS42 INS21 INS44 INS8 INS42 INS42 MOV21 INS21 INS40 INS32 INS42 INS40 INS40 MOV32 INS32 INS43 INS42 INS21 INS7 INS32 INS42 INS40 INS40 INS40 INS32 INS42 INS40 INS32 INS32 INS42 INS32 INS42 INS9 INS32 INS42 INS40 INS40 MOV32 INS40 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS32 INS42 INS40 INS40 INS40 INS42 INS42 INS42 INS45 INS40 INS45 INS32 INS42 INS40 INS40 INS40 MOV14 INS32 INS42 INS40 INS40 INS40 INS32 INS42 INS40 INS40 MOV32 INS32 INS42 INS40 INS40 INS40 MOV14 INS32 INS42 INS40 INS40 INS40 MOV14 INS32 INS42 INS40 INS40 INS40 MOV14 INS32 INS42 INS40 INS40 INS40 INS32 INS42 INS40 INS40 INS40 INS42 INS32 INS42 INS40 INS40 INS40 MOV32 INS42 INS40 INS40 INS40 MOV14 UPD42 INS40 INS40 INS40 MOV14 UPD40 UPD40 INS40 INS32 INS42 INS40 INS40 MOV32 MOV32 MOV42 UPD40 MOV40 UPD40 MOV40 MOV40 MOV42 UPD40 UPD40 MOV14 UPD40 UPD40 INS40 INS32 INS42 INS40 INS40 MOV32 MOV32 MOV42 UPD40 MOV40 UPD40 MOV40 INS40 INS42 UPD40 UPD40 UPD40 MOV14 UPD40 UPD40 UPD40 INS14 UPD40 INS40 MOV14 INS43 UPD40 UPD40 UPD40 INS14 INS42 UPD40 UPD40 UPD40 INS42 INS43 UPD40 UPD40 UPD40 INS14 INS42 UPD40 UPD40 UPD40 MOV14 INS43 INS9 UPD40 UPD40 UPD40 INS14 INS42 UPD40 UPD40 UPD40 MOV14 INS43 UPD40 UPD40 UPD40 INS42 UPD40 UPD40 UPD40 MOV14 UPD40 UPD40 INS40 INS42 UPD40 UPD40 MOV14 UPD40 UPD40 UPD40 INS14 UPD40 UPD40 INS40 INS14 INS43 INS9 UPD40 UPD40 UPD40 INS14 INS43 INS42 UPD40 UPD40 UPD40 MOV14 INS43 INS42 UPD40 UPD40 UPD40 INS42 INS42 UPD40 UPD40 UPD40 MOV14 UPD40 INS32 UPD40 MOV14 UPD40 MOV14 INS42 INS42 UPD40 MOV40 INS40 UPD40 UPD40 UPD40 MOV14 UPD40 UPD40 UPD40 INS14 UPD40 UPD40 UPD40 MOV14 INS43 UPD40 UPD40 UPD40 MOV14 INS42 UPD40 UPD40 UPD40 MOV14 UPD40 UPD40 UPD40 INS14 UPD40 UPD40 UPD40 INS42 INS43 UPD40 UPD40 UPD40 INS42 UPD40 UPD40 UPD40 MOV14 UPD40 UPD40 UPD40 INS14 UPD40 UPD40 UPD40 MOV14 INS43 UPD40 UPD40 MOV14 INS42 UPD40 UPD40 UPD40 MOV14 UPD40 UPD40 UPD40 MOV14 UPD40 UPD40 UPD40 INS14 UPD40 UPD40 INS43 UPD40 UPD40 INS42 INS42 UPD40 UPD40 MOV14 UPD40 UPD40 UPD40 INS14 UPD40 UPD40 UPD40 INS14 INS43 UPD40 UPD40 UPD40 MOV14 INS43 INS42 UPD40 UPD40 UPD40 MOV14 INS42 UPD40 UPD40 UPD40 UPD40 MOV14 UPD40 UPD40 INS42 UPD40 UPD40 MOV14 UPD40 INS14 UPD40 UPD40 UPD40 INS14 INS43 INS43 INS42 INS42 INS32 INS32 INS42 INS42 INS40 MOV40 INS40 INS32 INS42 INS40 INS42 INS42 INS40 MOV40 INS40 INS32 INS42 MOV40 INS40 INS40 MOV14 MOV32 MOV42 INS40 INS40 INS40 INS14 UPD40 UPD40 UPD40 MOV14 INS43 UPD40 UPD40 INS42 INS42 UPD40 UPD40 MOV14 UPD40 UPD40 MOV14 UPD40 UPD40 UPD40 INS14 INS43 INS42 UPD40 UPD40 UPD43 UPD42 UPD40 UPD40 UPD43 UPD42 DEL83 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL14 DEL42 DEL42 DEL42 DEL42 DEL39 DEL43 DEL39 DEL8 DEL25