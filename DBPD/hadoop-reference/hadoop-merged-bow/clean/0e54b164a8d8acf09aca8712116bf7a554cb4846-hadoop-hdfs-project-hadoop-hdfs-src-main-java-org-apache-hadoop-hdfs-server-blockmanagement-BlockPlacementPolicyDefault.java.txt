HDFS-9314. Improve BlockPlacementPolicyDefault's picking of excess replicas. (Xiao Chen via mingma)

-      final List<StorageType> excessTypes) {
+      final List<StorageType> excessTypes,
+      Map<String, List<DatanodeStorageInfo>> rackMap) {
-        exactlyOne)) {
+        exactlyOne, rackMap)) {
-        cur = chooseReplicaToDelete(moreThanOne, exactlyOne, excessTypes);
+        cur = chooseReplicaToDelete(moreThanOne, exactlyOne, excessTypes,
+            rackMap);
+
-   * So pick up first set if not empty. If first is empty, then pick second.
+   * If only 1 rack, pick all. If 2 racks, pick all that have more than
+   * 1 replicas on the same rack; if no such replicas, pick all.
+   * If 3 or more racks, pick all.
-      Collection<DatanodeStorageInfo> exactlyOne) {
-    return moreThanOne.isEmpty() ? exactlyOne : moreThanOne;
+      Collection<DatanodeStorageInfo> exactlyOne,
+      Map<String, List<DatanodeStorageInfo>> rackMap) {
+    Collection<DatanodeStorageInfo> ret = new ArrayList<>();
+    if (rackMap.size() == 2) {
+      for (List<DatanodeStorageInfo> dsi : rackMap.values()) {
+        if (dsi.size() >= 2) {
+          ret.addAll(dsi);
+        }
+      }
+    }
+    if (ret.isEmpty()) {
+      // Return all replicas if rackMap.size() != 2
+      // or rackMap.size() == 2 but no shared replicas on any rack
+      ret.addAll(moreThanOne);
+      ret.addAll(exactlyOne);
+    }
+    return ret;

INS44 INS44 INS74 INS42 INS74 INS42 INS60 INS25 INS25 INS41 INS43 INS43 INS74 UPD66 INS66 INS66 INS43 INS43 INS74 INS74 INS59 INS27 INS8 INS32 INS8 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS43 INS43 INS43 INS43 INS42 INS14 INS32 INS34 INS70 UPD42 MOV42 MOV42 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS44 INS32 INS8 INS32 INS32 INS43 INS74 INS42 INS42 INS42 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS27 INS8 INS42 INS42 INS32 INS34 INS21 INS42 INS42 INS42 INS32 INS42 INS42 INS42 DEL32 DEL42 DEL42 DEL16 DEL41