YARN-5799. Fix Opportunistic Allocation to set the correct value of Node Http Address. (asuresh)

+
+import org.apache.hadoop.yarn.server.api.protocolrecords.RemoteNode;
+import java.util.ArrayList;
-  private List<NodeId> cachedNodeIds;
+  private List<RemoteNode> cachedNodes;
-        rmContext.getContainerTokenSecretManager(), 0);
+        rmContext.getContainerTokenSecretManager());
-  private synchronized List<NodeId> getLeastLoadedNodes() {
+  private synchronized List<RemoteNode> getLeastLoadedNodes() {
-        || cachedNodeIds == null) {
-      cachedNodeIds = this.nodeMonitor.selectLeastLoadedNodes(this.k);
+        || cachedNodes == null) {
+      cachedNodes = convertToRemoteNodes(
+          this.nodeMonitor.selectLeastLoadedNodes(this.k));
-    return cachedNodeIds;
+    return cachedNodes;
+  }
+
+  private List<RemoteNode> convertToRemoteNodes(List<NodeId> nodeIds) {
+    ArrayList<RemoteNode> retNodes = new ArrayList<>();
+    for (NodeId nId : nodeIds) {
+      retNodes.add(convertToRemoteNode(nId));
+    }
+    return retNodes;
+  }
+
+  private RemoteNode convertToRemoteNode(NodeId nodeId) {
+    return RemoteNode.newInstance(nodeId,
+        ((AbstractYarnScheduler)rmContext.getScheduler()).getNode(nodeId)
+            .getHttpAddress());

INS26 INS26 INS40 INS40 INS31 INS31 UPD74 INS74 INS83 INS74 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 UPD43 UPD42 INS43 INS43 INS43 INS43 MOV74 INS42 INS60 INS70 INS41 INS42 INS43 INS42 INS41 UPD42 INS42 INS42 UPD42 INS42 INS42 INS74 INS59 INS44 INS42 INS8 INS42 INS42 INS32 INS43 INS43 INS42 INS14 INS43 INS42 INS21 INS42 INS42 INS42 INS32 UPD42 INS42 INS42 INS74 INS42 INS32 INS32 INS42 UPD42 INS32 INS43 INS42 INS42 INS32 INS36 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 INS11 INS43 INS32 INS42 INS42 INS42 DEL34