HDDS-834. Datanode goes OOM based because of segment size. Contributed by Mukul Kumar Singh.

-  private final Map<Long, Long> containerCommandCompletionMap;
+  private final Map<Long, Long> applyTransactionCompletionMap;
+  private long lastIndex;
-    containerCommandCompletionMap = new ConcurrentHashMap<>();
+    applyTransactionCompletionMap = new ConcurrentHashMap<>();
+    this.lastIndex = RaftServerConstants.INVALID_LOG_INDEX;
-      TermIndex empty = TermIndex.newTermIndex(0, 0);
+      TermIndex empty = TermIndex.newTermIndex(0,
+          RaftServerConstants.INVALID_LOG_INDEX);
+      lastIndex = RaftServerConstants.INVALID_LOG_INDEX;
+    lastIndex = last.getIndex();
-      final Long removed = containerCommandCompletionMap.remove(i);
+      final Long removed = applyTransactionCompletionMap.remove(i);
-      updateLastAppliedTermIndex(appliedIndex, appliedTerm);
+      updateLastAppliedTermIndex(appliedTerm, appliedIndex);
+
+    // ApplyTransaction call can come with an entryIndex much greater than
+    // lastIndex updated because in between entries in the raft log can be
+    // appended because raft config persistence. Just add a dummy entry
+    // for those.
+    for (long i = lastIndex + 1; i < index; i++) {
+      LOG.info("Gap in indexes at:{} detected, adding dummy entries ", i);
+      applyTransactionCompletionMap.put(i, trx.getLogEntry().getTerm());
+    }
+      lastIndex = index;
-            containerCommandCompletionMap
+            applyTransactionCompletionMap

INS23 INS83 INS39 INS59 UPD42 INS42 INS21 INS21 INS24 INS7 INS7 INS58 INS27 INS37 INS8 UPD42 INS22 INS40 INS21 INS42 INS32 INS39 INS59 INS42 INS42 INS42 INS21 INS21 INS21 INS52 INS42 INS7 INS42 INS42 INS42 INS27 INS32 INS32 INS7 INS42 INS40 UPD42 UPD42 INS42 INS34 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS40 UPD42 INS32 INS42 INS42 INS42 UPD42 DEL34