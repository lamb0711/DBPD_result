HDFS-13616. Batch listing of multiple directories (#1725)


+import com.google.protobuf.ByteString;
+import org.apache.hadoop.hdfs.protocol.BatchedDirectoryListing;
+import org.apache.hadoop.hdfs.protocol.HdfsPartialListing;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetBatchedListingRequestProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.GetBatchedListingResponseProto;
-import org.apache.hadoop.hdfs.protocol.proto.*;
+import org.apache.hadoop.hdfs.protocol.proto.HdfsProtos;
+import org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.BatchedDirectoryListingProto;
+import org.apache.hadoop.hdfs.protocol.proto.HdfsProtos.RemoteExceptionProto;
+import org.apache.hadoop.ipc.RemoteException;
+  private static final GetBatchedListingResponseProto
+      VOID_GETBATCHEDLISTING_RESPONSE =
+      GetBatchedListingResponseProto.newBuilder()
+          .setStartAfter(ByteString.copyFromUtf8(""))
+          .setHasMore(false)
+          .build();
+
-  
+
+  @Override
+  public GetBatchedListingResponseProto getBatchedListing(
+      RpcController controller,
+      GetBatchedListingRequestProto request) throws ServiceException {
+    try {
+      BatchedDirectoryListing result = server.getBatchedListing(
+          request.getPathsList().toArray(new String[] {}),
+          request.getStartAfter().toByteArray(),
+          request.getNeedLocation());
+      if (result != null) {
+        GetBatchedListingResponseProto.Builder builder =
+            GetBatchedListingResponseProto.newBuilder();
+        for (HdfsPartialListing partialListing : result.getListings()) {
+          BatchedDirectoryListingProto.Builder listingBuilder =
+              BatchedDirectoryListingProto.newBuilder();
+          if (partialListing.getException() != null) {
+            RemoteException ex = partialListing.getException();
+            RemoteExceptionProto.Builder rexBuilder =
+                RemoteExceptionProto.newBuilder();
+            rexBuilder.setClassName(ex.getClassName());
+            if (ex.getMessage() != null) {
+              rexBuilder.setMessage(ex.getMessage());
+            }
+            listingBuilder.setException(rexBuilder.build());
+          } else {
+            for (HdfsFileStatus f : partialListing.getPartialListing()) {
+              listingBuilder.addPartialListing(PBHelperClient.convert(f));
+            }
+          }
+          listingBuilder.setParentIdx(partialListing.getParentIdx());
+          builder.addListings(listingBuilder);
+        }
+        builder.setHasMore(result.hasMore());
+        builder.setStartAfter(ByteString.copyFrom(result.getStartAfter()));
+        return builder.build();
+      } else {
+        return VOID_GETBATCHEDLISTING_RESPONSE;
+      }
+    } catch (IOException e) {
+      throw new ServiceException(e);
+    }
+  }
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 INS40 INS40 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS42 INS42 INS32 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS54 INS32 INS42 INS42 INS42 INS8 INS12 INS32 INS42 INS9 INS60 INS25 INS44 INS8 INS32 INS42 INS32 INS43 INS59 INS27 INS8 INS8 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS33 INS60 INS70 INS21 INS21 INS41 INS41 INS42 INS14 INS42 INS42 INS32 INS32 INS32 INS43 INS59 INS44 INS32 INS8 INS32 INS32 INS32 INS42 INS43 INS42 INS32 INS42 INS3 INS32 INS42 INS42 INS42 INS40 INS42 INS32 INS43 INS42 INS42 INS42 INS60 INS25 INS21 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS5 INS4 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS8 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS43 INS85 INS40 INS42 INS32 INS32 INS33 INS60 INS60 INS21 INS25 INS21 INS70 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS32 INS27 INS8 INS32 INS44 INS32 INS8 INS42 INS42 INS42 INS42 INS32 INS40 INS42 INS32 INS42 INS42 INS32 INS32 INS33 INS21 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42