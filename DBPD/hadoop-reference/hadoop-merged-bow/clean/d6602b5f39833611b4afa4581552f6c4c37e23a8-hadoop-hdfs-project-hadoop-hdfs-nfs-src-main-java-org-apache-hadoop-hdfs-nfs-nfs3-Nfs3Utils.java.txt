HDFS-11575. Supporting HDFS NFS gateway with Federated HDFS. Contributed by Mukul Kumar Singh.

+import java.net.InetSocketAddress;
+import java.net.URI;
+import java.nio.file.FileSystemException;
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.fs.FileSystem;
+import org.apache.hadoop.fs.FsConstants;
+import org.apache.hadoop.fs.viewfs.ViewFileSystem;
+import org.apache.hadoop.hdfs.DFSUtilClient;
+import org.apache.hadoop.hdfs.protocol.HdfsConstants;
+
+  public static int getNamenodeId(Configuration conf) {
+    URI filesystemURI = FileSystem.getDefaultUri(conf);
+    return getNamenodeId(conf, filesystemURI);
+  }
+
+  public static int getNamenodeId(Configuration conf, URI namenodeURI) {
+    InetSocketAddress address =
+        DFSUtilClient.getNNAddressCheckLogical(conf, namenodeURI);
+    return address.hashCode();
+  }
+
+  public static URI getResolvedURI(FileSystem fs, String exportPath)
+      throws IOException {
+    URI fsURI = fs.getUri();
+    String scheme = fs.getScheme();
+    if (scheme.equalsIgnoreCase(FsConstants.VIEWFS_SCHEME)) {
+      ViewFileSystem viewFs = (ViewFileSystem)fs;
+      ViewFileSystem.MountPoint[] mountPoints = viewFs.getMountPoints();
+      for (ViewFileSystem.MountPoint mount : mountPoints) {
+        String mountedPath = mount.getMountedOnPath().toString();
+        if (exportPath.startsWith(mountedPath)) {
+          String subpath = exportPath.substring(mountedPath.length());
+          fsURI = mount.getTargetFileSystemURIs()[0].resolve(subpath);
+          break;
+        }
+      }
+    } else if (scheme.equalsIgnoreCase(HdfsConstants.HDFS_URI_SCHEME)) {
+      fsURI = fsURI.resolve(exportPath);
+    }
+
+    if (!fsURI.getScheme().equalsIgnoreCase(HdfsConstants.HDFS_URI_SCHEME)) {
+      throw new FileSystemException("Only HDFS is supported as underlying"
+          + "FileSystem, fs scheme:" + scheme + " uri to be added" + fsURI);
+    }
+    return fsURI;
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS43 INS42 INS60 INS41 INS43 INS42 INS43 INS42 INS60 INS41 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS60 INS25 INS25 INS41 INS42 INS43 INS59 INS32 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS43 INS59 INS43 INS59 INS32 INS8 INS25 INS38 INS8 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS40 INS60 INS60 INS70 INS32 INS8 INS32 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS5 INS59 INS44 INS42 INS8 INS42 INS42 INS40 INS21 INS32 INS42 INS40 INS14 INS42 INS42 INS11 INS43 INS85 INS42 INS32 INS43 INS42 INS60 INS25 INS7 INS42 INS42 INS43 INS27 INS43 INS42 INS40 INS42 INS42 INS40 INS43 INS59 INS32 INS8 INS42 INS32 INS42 INS27 INS42 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS60 INS21 INS10 INS42 INS42 INS42 INS45 INS45 INS32 INS42 INS43 INS59 INS7 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS2 INS42 INS42 INS42 INS42 INS32 INS34 INS42 INS42