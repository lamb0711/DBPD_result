HADOOP-8245. Fix flakiness in TestZKFailoverController. Contributed by Todd Lipcon.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1309554 13f79535-47bb-0310-9956-ffa450edef68

-    LOG.debug("Attempting active election");
-
+    LOG.debug("Attempting active election for " + this);
+    Preconditions.checkState(!wantToBeInElection,
+        "ensureParentZNode() may not be called while in the election");
+
+    Preconditions.checkState(!wantToBeInElection,
+        "clearParentZNode() may not be called while in the election");
+
-        + " connectionState: " + zkConnectionState);
+        + " connectionState: " + zkConnectionState +
+        "  for " + this);
+    
+    assert wantToBeInElection :
+        "Got a StatNode result after quitting election";
+    
-        + " connectionState: " + zkConnectionState);
+        + " connectionState: " + zkConnectionState + " for " + this);
+        
-        + " connectionState: " + zkConnectionState);
+        + " connectionState: " + zkConnectionState
+        + " for " + this);
-        if (prevConnectionState == ConnectionState.DISCONNECTED) {
+        if (prevConnectionState == ConnectionState.DISCONNECTED &&
+            wantToBeInElection) {
+    LOG.fatal(errorMessage);
-    LOG.debug("Monitoring active leader");
+    assert wantToBeInElection;
+    LOG.debug("Monitoring active leader for " + this);
-      LOG.debug("Establishing zookeeper connection");
+      LOG.debug("Establishing zookeeper connection for " + this);
+    LOG.debug("Created new connection for " + this);
-    LOG.debug("Terminating ZK connection");
+    LOG.debug("Terminating ZK connection for " + this);
-      LOG.debug("Becoming active");
+      LOG.debug("Becoming active for " + this);
-      LOG.debug("Becoming standby");
+      LOG.debug("Becoming standby for " + this);
-      LOG.debug("Entering neutral mode");
+      LOG.debug("Entering neutral mode for " + this);
-      ActiveStandbyElector.this.processWatchEvent(
-          zk, event);
+      try {
+        ActiveStandbyElector.this.processWatchEvent(
+            zk, event);
+      } catch (Throwable t) {
+        fatalError(
+            "Failed to process watcher event " + event + ": " +
+            StringUtils.stringifyException(t));
+      }
+  
+  @Override
+  public String toString() {
+    return "elector id=" + System.identityHashCode(this) +
+      " appData=" +
+      ((appData == null) ? "null" : StringUtils.byteToHexString(appData)) + 
+      " cb=" + appClient;
+  }

INS31 MOV21 INS78 INS83 INS43 INS42 INS8 INS21 INS21 INS6 INS21 INS6 INS21 INS8 INS42 INS42 INS41 INS32 INS32 INS42 INS45 INS32 INS42 INS32 INS54 INS27 INS27 INS42 INS42 INS38 INS45 INS42 INS42 INS38 INS45 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS27 MOV8 INS12 INS45 INS32 INS45 INS36 INS45 INS42 INS45 INS52 INS42 INS42 INS45 INS52 INS45 INS52 INS45 INS52 INS45 INS52 INS45 INS52 INS45 INS52 INS44 INS8 INS42 INS42 INS52 INS16 INS27 INS27 INS27 INS27 INS27 INS43 INS42 INS21 INS36 INS45 INS32 MOV27 INS42 INS45 INS52 INS45 INS52 INS45 INS52 INS45 INS52 INS42 INS32 INS27 INS42 INS42 INS42 INS42 INS27 INS42 INS33 INS45 INS42 INS45 INS32 INS42 INS42 INS42 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45