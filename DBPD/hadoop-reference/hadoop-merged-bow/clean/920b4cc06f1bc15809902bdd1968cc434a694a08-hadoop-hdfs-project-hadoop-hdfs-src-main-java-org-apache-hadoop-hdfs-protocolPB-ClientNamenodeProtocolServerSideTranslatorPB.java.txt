HDFS-5052. Add cacheRequest/uncacheRequest support to NameNode.  (Contributed by Colin Patrick McCabe.)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1516669 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+import org.apache.hadoop.fs.RemoteIterator;
+import org.apache.hadoop.hdfs.protocol.PathCacheDirective;
+import org.apache.hadoop.hdfs.protocol.PathCacheEntry;
+import org.apache.hadoop.hdfs.protocol.AddPathCacheDirectiveException.EmptyPathError;
+import org.apache.hadoop.hdfs.protocol.AddPathCacheDirectiveException.InvalidPathNameError;
+import org.apache.hadoop.hdfs.protocol.AddPathCacheDirectiveException.InvalidPoolNameError;
+import org.apache.hadoop.hdfs.protocol.RemovePathCacheEntryException.InvalidIdException;
+import org.apache.hadoop.hdfs.protocol.RemovePathCacheEntryException.NoSuchIdException;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.PathCacheDirectiveProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.AddPathCacheDirectiveErrorProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.AddPathCacheDirectivesRequestProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.AddPathCacheDirectivesResponseProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.ListPathCacheEntriesElementProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.ListPathCacheEntriesRequestProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.ListPathCacheEntriesResponseProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RemovePathCacheEntryErrorProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RemovePathCacheEntriesRequestProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RemovePathCacheEntriesResponseProto;
+import org.apache.hadoop.hdfs.server.namenode.UnsupportedActionException;
+import org.apache.hadoop.util.Fallible;
-  
+
+  @Override
+  public AddPathCacheDirectivesResponseProto addPathCacheDirectives(RpcController controller,
+      AddPathCacheDirectivesRequestProto request) throws ServiceException {
+    try {
+      ArrayList<PathCacheDirective> input =
+          new ArrayList<PathCacheDirective>(request.getElementsCount());
+      for (int i = 0; i < request.getElementsCount(); i++) {
+        PathCacheDirectiveProto proto = request.getElements(i);
+        input.add(new PathCacheDirective(proto.getPath(), proto.getPool()));
+      }
+      List<Fallible<PathCacheEntry>> output = server.addPathCacheDirectives(input);
+      AddPathCacheDirectivesResponseProto.Builder builder =
+         AddPathCacheDirectivesResponseProto.newBuilder();
+      for (int idx = 0; idx < output.size(); idx++) {
+        try {
+          PathCacheEntry entry = output.get(idx).get();
+          builder.addResults(entry.getEntryId());
+        } catch (EmptyPathError ioe) {
+          builder.addResults(AddPathCacheDirectiveErrorProto.
+              EMPTY_PATH_ERROR_VALUE);
+        } catch (InvalidPathNameError ioe) {
+          builder.addResults(AddPathCacheDirectiveErrorProto.
+              INVALID_PATH_NAME_ERROR_VALUE);
+        } catch (InvalidPoolNameError ioe) {
+          builder.addResults(AddPathCacheDirectiveErrorProto.
+              INVALID_POOL_NAME_ERROR_VALUE);
+        } catch (IOException ioe) {
+          builder.addResults(AddPathCacheDirectiveErrorProto.
+              UNEXPECTED_ADD_ERROR_VALUE);
+        }
+      }
+      return builder.build();
+    } catch (IOException e) {
+      throw new ServiceException(e);
+    }
+  }
+
+  @Override
+  public RemovePathCacheEntriesResponseProto removePathCacheEntries(
+      RpcController controller, RemovePathCacheEntriesRequestProto request)
+      throws ServiceException {
+    try {
+      List<Fallible<Long>> output =
+         server.removePathCacheEntries(request.getElementsList());
+      RemovePathCacheEntriesResponseProto.Builder builder =
+         RemovePathCacheEntriesResponseProto.newBuilder();
+      for (int idx = 0; idx < output.size(); idx++) {
+        try {
+          long id = output.get(idx).get();
+          builder.addResults(id);
+        } catch (InvalidIdException ioe) {
+          builder.addResults(RemovePathCacheEntryErrorProto.
+              INVALID_CACHED_PATH_ID_ERROR_VALUE);
+        } catch (NoSuchIdException ioe) {
+          builder.addResults(RemovePathCacheEntryErrorProto.
+              NO_SUCH_CACHED_PATH_ID_ERROR_VALUE);
+        } catch (IOException ioe) {
+          builder.addResults(RemovePathCacheEntryErrorProto.
+              UNEXPECTED_REMOVE_ERROR_VALUE);
+        }
+      }
+      return builder.build();
+    } catch (IOException e) {
+      throw new ServiceException(e);
+    }
+  }
+
+  @Override
+  public ListPathCacheEntriesResponseProto listPathCacheEntries(RpcController controller,
+      ListPathCacheEntriesRequestProto request) throws ServiceException {
+    try {
+      RemoteIterator<PathCacheEntry> iter =
+         server.listPathCacheEntries(request.getPrevId(),
+             request.getPool(),
+             request.getMaxReplies());
+      ListPathCacheEntriesResponseProto.Builder builder =
+          ListPathCacheEntriesResponseProto.newBuilder();
+      while (iter.hasNext()) {
+        PathCacheEntry entry = iter.next();
+        builder.addElements(
+            ListPathCacheEntriesElementProto.newBuilder().
+              setId(entry.getEntryId()).
+              setPath(entry.getDirective().getPath()).
+              setPool(entry.getDirective().getPool()));
+      }
+      return builder.build();
+    } catch (IOException e) {
+      throw new ServiceException(e);
+    }
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS54 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS54 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS54 INS42 INS42 INS8 INS12 INS42 INS42 INS8 INS12 INS42 INS42 INS8 INS12 INS60 INS24 INS60 INS60 INS24 INS41 INS44 INS8 INS60 INS60 INS24 INS41 INS44 INS8 INS60 INS60 INS61 INS41 INS44 INS8 INS74 INS59 INS58 INS27 INS37 INS8 INS74 INS59 INS43 INS59 INS58 INS27 INS37 INS8 INS32 INS43 INS42 INS53 INS74 INS59 INS43 INS59 INS58 INS27 INS37 INS8 INS32 INS43 INS42 INS53 INS74 INS59 INS43 INS59 INS32 INS8 INS32 INS43 INS42 INS53 INS43 INS43 INS42 INS14 INS39 INS59 INS42 INS32 INS42 INS60 INS21 INS43 INS74 INS42 INS32 INS40 INS42 INS32 INS39 INS59 INS42 INS32 INS42 INS54 INS42 INS42 INS42 INS14 INS43 INS74 INS42 INS32 INS40 INS42 INS32 INS39 INS59 INS42 INS32 INS42 INS54 INS42 INS42 INS42 INS14 INS43 INS43 INS42 INS32 INS40 INS42 INS32 INS42 INS42 INS60 INS21 INS42 INS42 INS42 INS14 INS42 INS42 INS74 INS32 INS42 INS34 INS42 INS42 INS43 INS59 INS32 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS8 INS12 INS12 INS12 INS12 INS43 INS42 INS42 INS43 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS34 INS42 INS42 INS8 INS12 INS12 INS12 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS43 INS59 INS32 INS43 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS60 INS21 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS60 INS21 INS44 INS8 INS44 INS8 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS32 INS43 INS59 INS32 INS43 INS42 INS21 INS43 INS42 INS21 INS43 INS42 INS21 INS43 INS42 INS21 INS39 INS59 INS32 INS43 INS42 INS21 INS43 INS42 INS21 INS43 INS42 INS21 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS40 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS40 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42