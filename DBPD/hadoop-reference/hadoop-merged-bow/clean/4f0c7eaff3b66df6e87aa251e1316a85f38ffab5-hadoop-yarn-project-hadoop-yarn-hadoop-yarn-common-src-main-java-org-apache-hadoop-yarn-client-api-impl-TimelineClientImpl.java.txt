YARN-3240. Implement client API to put generic entities. Contributed by Zhijie Shen

(cherry picked from commit 4487da249f448d5c67b712cd0aa723e764eed77d)

+import javax.ws.rs.core.MediaType;
+import javax.ws.rs.core.MultivaluedMap;
+
-import org.apache.hadoop.security.UserGroupInformation;
+import org.apache.hadoop.security.UserGroupInformation;
+import org.apache.hadoop.yarn.api.records.ApplicationId;
+import com.sun.jersey.core.util.MultivaluedMapImpl;
-  private static final String RESOURCE_URI_STR = "/ws/v1/timeline/";
+  private static final String RESOURCE_URI_STR_V1 = "/ws/v1/timeline/";
+  private static final String RESOURCE_URI_STR_V2 = "/ws/v2/timeline/";
-    super(TimelineClientImpl.class.getName());
+    super(TimelineClientImpl.class.getName(), null);
+  }
+
+  public TimelineClientImpl(ApplicationId applicationId) {
+    super(TimelineClientImpl.class.getName(), applicationId);
-      resURI = URI
-          .create(JOINER.join("https://", conf.get(
-              YarnConfiguration.TIMELINE_SERVICE_WEBAPP_HTTPS_ADDRESS,
-              YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WEBAPP_HTTPS_ADDRESS),
-              RESOURCE_URI_STR));
+      timelineServiceAddress = conf.get(
+          YarnConfiguration.TIMELINE_SERVICE_WEBAPP_HTTPS_ADDRESS,
+          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WEBAPP_HTTPS_ADDRESS);
-      resURI = URI.create(JOINER.join("http://", conf.get(
+      timelineServiceAddress = conf.get(
-          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WEBAPP_ADDRESS),
-          RESOURCE_URI_STR));
+          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WEBAPP_ADDRESS);
+    LOG.info("Timeline service address: " + timelineServiceAddress);
+  @Override
+  public void putEntities(
+      org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity... entities)
+      throws IOException, YarnException {
+    putEntities(false, entities);
+  }
+
+  @Override
+  public void putEntitiesAsync(
+      org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity... entities)
+      throws IOException, YarnException {
+    putEntities(true, entities);
+  }
+
+  private void putEntities(boolean async,
+      org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity... entities)
+      throws IOException, YarnException {
+    org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntities
+        entitiesContainer =
+        new org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntities();
+    for (org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity entity : entities) {
+      entitiesContainer.addEntity(entity);
+    }
+    MultivaluedMap<String, String> params = new MultivaluedMapImpl();
+    if (contextAppId != null) {
+      params.add("appid", contextAppId.toString());
+    }
+    if (async) {
+      params.add("async", Boolean.TRUE.toString());
+    }
+    putObjects(constructResURI(getConfig(), timelineServiceAddress, true),
+        "entities", params, entitiesContainer);
+  }
+  private void putObjects(
+      URI base, String path, MultivaluedMap<String, String> params, Object obj)
+          throws IOException, YarnException {
+    ClientResponse resp;
+    try {
+      resp = client.resource(base).path(path).queryParams(params)
+          .accept(MediaType.APPLICATION_JSON)
+          .type(MediaType.APPLICATION_JSON)
+          .put(ClientResponse.class, obj);
+    } catch (RuntimeException re) {
+      // runtime exception is expected if the client cannot connect the server
+      String msg =
+          "Failed to get the response from the timeline server.";
+      LOG.error(msg, re);
+      throw new IOException(re);
+    }
+    if (resp == null ||
+        resp.getClientResponseStatus() != ClientResponse.Status.OK) {
+      String msg =
+          "Failed to get the response from the timeline server.";
+      LOG.error(msg);
+      if (LOG.isDebugEnabled() && resp != null) {
+        String output = resp.getEntity(String.class);
+        LOG.debug("HTTP error code: " + resp.getStatus()
+            + " Server response:\n" + output);
+      }
+      throw new YarnException(msg);
+    }
+  }
+
-                resURI.toURL(), token, renewer, doAsUser);
+                constructResURI(getConfig(), timelineServiceAddress, false).toURL(),
+                token, renewer, doAsUser);
-                address.getPort(), RESOURCE_URI_STR, null, null);
+                address.getPort(), RESOURCE_URI_STR_V1, null, null);
-                address.getPort(), RESOURCE_URI_STR, null, null);
+                address.getPort(), RESOURCE_URI_STR_V1, null, null);
+  private static URI constructResURI(
+      Configuration conf, String address, boolean v2) {
+    return URI.create(
+        JOINER.join(YarnConfiguration.useHttps(conf) ? "https://" : "http://",
+            address, v2 ? RESOURCE_URI_STR_V2 : RESOURCE_URI_STR_V1));
+  }
+

MOV26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS43 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS43 INS8 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS8 UPD42 INS42 INS42 INS45 INS43 INS42 INS46 INS21 INS42 INS43 INS42 INS42 INS42 INS21 INS42 INS43 INS42 INS42 INS42 INS21 INS39 INS42 INS43 INS42 INS42 INS42 INS60 INS70 INS60 INS25 INS25 INS21 MOV43 INS42 INS43 INS42 INS74 INS42 INS43 INS42 INS42 INS42 INS60 INS54 INS25 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS41 INS33 INS42 INS32 INS42 INS32 INS40 INS32 INS40 INS32 INS40 INS43 INS59 INS44 INS42 INS8 INS74 INS59 INS27 INS8 INS42 INS8 INS32 INS42 INS43 INS43 INS43 INS42 INS43 INS59 INS8 INS12 INS27 INS8 INS42 INS42 INS32 INS57 INS42 INS42 INS42 INS27 INS42 INS9 INS42 INS42 INS9 INS42 INS40 INS42 INS14 INS43 INS42 INS21 INS43 INS43 INS43 INS42 INS14 INS42 INS33 INS21 INS21 INS42 INS32 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS44 INS8 INS27 INS27 INS60 INS21 INS25 INS53 INS42 INS42 INS32 INS43 INS45 INS42 INS43 INS40 INS32 INS42 INS42 INS42 INS43 INS32 INS32 INS42 INS32 INS42 INS9 INS7 INS43 INS42 INS60 INS21 INS53 INS42 INS33 INS32 INS40 INS43 INS59 INS32 INS27 INS8 INS14 INS42 INS42 INS16 INS42 INS16 INS42 UPD42 MOV32 UPD42 MOV32 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS45 INS32 INS42 INS42 INS32 INS42 INS43 INS59 INS32 INS14 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS27 INS60 INS21 INS43 INS42 INS32 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS32 INS42 INS57 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS33 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS40 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS27 INS60 MOV60 INS32 INS42 INS40 INS42 INS42 INS42 INS57 INS45 INS32 INS45 INS42 INS83 MOV43 INS59 INS32 INS42 INS42 INS43 INS42 INS42 INS42 INS16 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS32 MOV43 INS42 INS33 MOV32 MOV32 INS42 INS33 INS33 INS43 UPD42 UPD42 MOV42 INS32 INS42 INS9 INS42 INS42 DEL42 DEL42 DEL42 DEL42 DEL45 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL42 DEL45 DEL42 DEL32 DEL32 DEL83 DEL42 DEL42 DEL42 DEL42 DEL33 DEL42 DEL33 DEL33 DEL14 DEL16 DEL59 DEL60