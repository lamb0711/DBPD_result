Merge r1471229 through r1476005 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1476006 13f79535-47bb-0310-9956-ffa450edef68

-  final void removeFromInodeMap(List<INode> inodes) {
-    if (inodes != null) {
-      for (INode inode : inodes) {
-        inodeMap.remove(inode);
+  private final void removeFromInodeMap(INode inode) {
+    inodeMap.remove(inode);
+  }
+  
+  /** Remove all the inodes under given inode from the map */
+  private void remvoedAllFromInodesFromMap(INode inode) {
+    removeFromInodeMap(inode);
+    if (!inode.isDirectory()) {
+      return;
+    }
+    INodeDirectory dir = (INodeDirectory) inode;
+    for (INode child : dir.getChildrenList()) {
+      remvoedAllFromInodesFromMap(child);
+    }
+    dir.clearChildren();
+  }
+  
+  /** Update the count of each directory with quota in the namespace
+   * A directory's count is defined as the total number inodes in the tree
+   * rooted at the directory.
+   * 
+   * This is an update of existing state of the filesystem and does not
+   * throw QuotaExceededException.
+   */
+  void updateCountForINodeWithQuota() {
+    updateCountForINodeWithQuota(this, rootDir, new INode.DirCounts(), 
+                                 new ArrayList<INode>(50));
+  }
+  
+  /** 
+   * Update the count of the directory if it has a quota and return the count
+   * 
+   * This does not throw a QuotaExceededException. This is just an update
+   * of of existing state and throwing QuotaExceededException does not help
+   * with fixing the state, if there is a problem.
+   * 
+   * @param dir the root of the tree that represents the directory
+   * @param counters counters for name space and disk space
+   * @param nodesInPath INodes for the each of components in the path.
+   */
+  private static void updateCountForINodeWithQuota(FSDirectory fsd,
+      INodeDirectory dir, INode.DirCounts counts, ArrayList<INode> nodesInPath) {
+    long parentNamespace = counts.nsCount;
+    long parentDiskspace = counts.dsCount;
+    
+    counts.nsCount = 1L;//for self. should not call node.spaceConsumedInTree()
+    counts.dsCount = 0L;
+    
+    /* We don't need nodesInPath if we could use 'parent' field in 
+     * INode. using 'parent' is not currently recommended. */
+    nodesInPath.add(dir);
+
+    for (INode child : dir.getChildrenList()) {
+      fsd.inodeMap.put(child);
+      if (child.isDirectory()) {
+        updateCountForINodeWithQuota(fsd, (INodeDirectory)child, 
+                                     counts, nodesInPath);
+      } else if (child.isSymlink()) {
+        counts.nsCount += 1;
+      } else { // reduce recursive calls
+        counts.nsCount += 1;
+        counts.dsCount += ((INodeFile)child).diskspaceConsumed();
+          // update the inodeMap
+          inodeMap.put(newNode);
+        // update the inodeMap
+        inodeMap.put(newNode);

INS31 INS31 INS31 INS83 MOV44 MOV8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS39 INS42 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS8 INS65 INS43 INS42 INS21 INS25 INS60 INS70 INS21 INS65 INS21 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS60 INS60 INS21 INS21 INS21 INS70 INS66 INS42 INS32 INS38 INS8 INS43 INS59 INS44 INS32 INS8 INS32 INS66 INS66 INS66 INS66 INS66 INS32 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS40 INS43 INS43 INS39 INS59 INS39 INS59 INS7 INS7 INS32 INS44 INS32 INS8 INS42 INS42 INS32 INS41 INS42 INS42 INS11 INS43 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS52 INS42 INS14 INS14 INS42 INS42 INS42 INS40 INS42 INS40 INS40 INS34 INS40 INS34 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS21 INS25 INS42 INS42 INS43 INS42 INS42 INS32 INS43 UPD74 MOV74 INS34 INS42 INS32 INS32 INS8 INS25 INS42 INS42 INS42 INS40 UPD43 INS40 INS42 INS42 INS42 INS42 INS21 INS32 INS8 INS8 INS21 UPD42 INS32 INS42 INS42 INS21 INS21 INS21 INS32 INS42 INS42 INS11 INS42 INS42 INS7 INS7 INS7 INS42 INS42 INS42 INS43 INS42 INS40 INS34 INS40 INS34 INS40 INS32 INS21 INS42 INS36 INS42 INS32 INS11 INS42 INS42 INS42 INS43 INS42 INS42 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL70 DEL8 DEL25 DEL8