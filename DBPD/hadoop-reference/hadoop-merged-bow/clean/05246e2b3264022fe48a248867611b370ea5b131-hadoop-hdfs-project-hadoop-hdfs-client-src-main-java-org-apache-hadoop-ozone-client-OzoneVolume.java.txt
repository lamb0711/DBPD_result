HDFS-12060. Ozone: OzoneClient: Add list calls in RpcClient. Contributed by Nandakumar.

+import org.apache.hadoop.conf.Configuration;
+import java.util.Iterator;
+import java.util.NoSuchElementException;
+   * The proxy used for connecting to the cluster and perform
+   * client operations.
+   */
+  private final ClientProtocol proxy;
+
+  /**
-  private ClientProtocol proxy;
+  private int listCacheSize;
-   * Constructs OzoneVolume.
+   * Constructs OzoneVolume instance.
+   * @param conf Configuration object.
+   * @param proxy ClientProtocol proxy.
+   * @param name Name of the volume.
+   * @param admin Volume admin.
+   * @param owner Volume owner.
+   * @param quotaInBytes Volume quota in bytes.
+   * @param acls ACLs associated with the volume.
-  public OzoneVolume(String name, String admin, String owner,
-                     long quotaInBytes, List<OzoneAcl> acls) {
+  public OzoneVolume(Configuration conf, ClientProtocol proxy, String name,
+                     String admin, String owner, long quotaInBytes,
+                     List<OzoneAcl> acls) {
+    this.proxy = proxy;
-  }
-
-  public void setClientProxy(ClientProtocol clientProxy) {
-    this.proxy = clientProxy;
+    this.listCacheSize = OzoneClientUtils.getListCacheSize(conf);
-    bucket.setClientProxy(proxy);
+   * Returns Iterator to iterate over all buckets in the volume.
+   * The result can be restricted using bucket prefix, will return all
+   * buckets if bucket prefix is null.
+   *
+   * @param bucketPrefix Bucket prefix to match
+   * @return {@code Iterator<OzoneBucket>}
+   */
+  public Iterator<OzoneBucket> listBuckets(String bucketPrefix) {
+    return new BucketIterator(bucketPrefix);
+  }
+
+  /**
+
+
+  /**
+   * An Iterator to iterate over {@link OzoneBucket} list.
+   */
+  private class BucketIterator implements Iterator<OzoneBucket> {
+
+    private String bucketPrefix = null;
+
+    private Iterator<OzoneBucket> currentIterator;
+    private OzoneBucket currentValue;
+
+
+    /**
+     * Creates an Iterator to iterate over all buckets in the volume,
+     * which matches volume prefix.
+     * @param bucketPrefix
+     */
+    BucketIterator(String bucketPrefix) {
+      this.bucketPrefix = bucketPrefix;
+      this.currentValue = null;
+      this.currentIterator = getNextListOfBuckets(null).iterator();
+    }
+
+    @Override
+    public boolean hasNext() {
+      if(!currentIterator.hasNext()) {
+        currentIterator = getNextListOfBuckets(
+            currentValue.getName()).iterator();
+      }
+      return currentIterator.hasNext();
+    }
+
+    @Override
+    public OzoneBucket next() {
+      if(hasNext()) {
+        currentValue = currentIterator.next();
+        return currentValue;
+      }
+      throw new NoSuchElementException();
+    }
+
+    /**
+     * Gets the next set of bucket list using proxy.
+     * @param prevBucket
+     * @return {@code List<OzoneVolume>}
+     */
+    private List<OzoneBucket> getNextListOfBuckets(String prevBucket) {
+      try {
+        return proxy.listBuckets(name, bucketPrefix, prevBucket, listCacheSize);
+      } catch (IOException e) {
+        throw new RuntimeException(e);
+      }
+    }
+  }

INS26 INS26 INS26 MOV23 INS40 INS40 INS40 INS23 INS31 INS55 INS29 INS83 INS83 INS39 INS59 INS44 INS44 INS29 INS83 INS74 INS42 MOV44 INS8 INS29 INS83 INS42 INS74 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS65 INS42 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS21 INS21 INS65 INS65 INS65 INS43 INS43 UPD43 UPD42 INS41 INS65 INS43 INS43 INS83 INS43 INS59 INS83 INS74 INS59 INS83 INS43 INS59 INS29 INS42 INS44 MOV8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS29 INS83 INS74 INS42 INS44 INS8 INS66 INS66 UPD66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS7 INS7 INS66 INS66 INS66 INS42 INS66 INS66 INS65 INS42 INS42 UPD42 INS14 INS66 INS65 INS66 INS42 INS42 INS42 INS42 INS33 INS43 INS43 INS42 INS42 INS42 INS65 INS65 INS43 INS42 INS21 INS21 INS42 INS25 INS41 INS42 INS42 INS25 INS53 INS65 INS65 INS65 INS43 INS43 INS43 INS42 INS54 INS22 INS42 INS22 INS32 INS66 INS43 INS42 INS42 INS42 INS42 INS66 INS66 INS42 INS42 INS7 INS7 INS38 INS8 INS32 INS32 INS8 INS14 INS66 INS42 INS66 INS65 INS42 INS42 INS42 INS8 INS12 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS42 UPD42 INS22 INS33 INS22 INS32 INS32 INS21 INS42 INS42 INS42 INS21 INS41 INS43 INS66 INS41 INS44 INS8 UPD42 INS52 INS42 INS52 INS42 INS32 INS42 INS42 INS42 INS7 INS7 INS42 INS42 INS32 INS43 INS42 INS53 INS42 INS33 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS32 INS42 INS42 INS42 INS43 INS42 INS42 INS32 INS42 INS42 INS42 DEL83 DEL39 DEL42 DEL31 DEL42 DEL42 DEL42 DEL32 DEL21