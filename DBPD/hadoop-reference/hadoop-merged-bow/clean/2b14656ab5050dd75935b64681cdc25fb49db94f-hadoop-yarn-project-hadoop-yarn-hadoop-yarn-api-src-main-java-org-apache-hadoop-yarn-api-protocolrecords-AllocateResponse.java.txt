YARN-805. Fix javadoc and annotations on classes in the yarn-api package. Contributed by Jian He.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493992 13f79535-47bb-0310-9956-ffa450edef68

- *       A reboot flag to let the <code>ApplicationMaster</code> know that its 
- *       horribly out of sync and needs to reboot.</li>
+ *       An AMCommand sent by ResourceManager to let the <code>ApplicationMaster</code>
+ *       take some actions (resync, shutdown etc.).
- *     <li>A list of completed {@link Container}.</li>
+ *     <li>A list of completed {@link Container}s' statuses.</li>
+  @Public
+  @Stable
-  @Public
-  @Stable
+  @Private
+  @Unstable
-  @Unstable
+  @Stable
-   * Get the description of containers owned by the AM, but requested back by
+   * <p>Get the description of containers owned by the AM, but requested back by
-   * elect to ignore them.
+   * elect to ignore them.<p>
-   * The message is a snapshot of the resources the RM wants back from the AM.
+   * <p>The message is a snapshot of the resources the RM wants back from the AM.
-   * not interpret each message as a request for <emph>additional<emph>
+   * not interpret each message as a request for <em>additional<em>
-   * over some duration may be forcibly killed by the RM.
+   * over some duration may be forcibly killed by the RM.<p>
-  
-  @Public
-  @Stable
-  public abstract void setNMTokens(List<NMToken> nmTokens);
-  
+
-   * Get the list of NMTokens required for communicating with NM. New NMTokens
-   * issued only if
-   * 1) AM is receiving first container on underlying NodeManager.
-   * OR
+   * <p>Get the list of NMTokens required for communicating with NM. New NMTokens
+   * issued only if<p>
+   * <p>1) AM is receiving first container on underlying NodeManager.<br>
+   * OR<br>
-   * container on the same underlying NodeManager.
-   * AM will receive one NMToken per NM irrespective of the number of containers
+   * container on the same underlying NodeManager.<p>
+   * <p>AM will receive one NMToken per NM irrespective of the number of containers
-   * new token for the same NM.
+   * new token for the same NM.<p>
+  @Private
+  @Unstable
+  public abstract void setNMTokens(List<NMToken> nmTokens);

MOV31 INS78 INS78 MOV78 MOV78 UPD66 UPD66 UPD66 INS42 INS42 UPD42 UPD42 UPD42 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66 UPD66