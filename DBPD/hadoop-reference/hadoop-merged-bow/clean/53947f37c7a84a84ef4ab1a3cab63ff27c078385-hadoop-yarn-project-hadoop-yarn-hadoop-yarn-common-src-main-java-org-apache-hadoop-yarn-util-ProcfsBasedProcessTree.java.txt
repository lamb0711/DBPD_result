YARN-3122. Metrics for container's actual CPU usage. (Anubhav Dhoot via kasha)

+  private final CpuTimeTracker cpuTimeTracker;
+  private Clock clock;
-    this(pid, PROCFS);
+    this(pid, PROCFS, new SystemClock());
+  public ProcfsBasedProcessTree(String pid, String procfsDir) {
+    this(pid, procfsDir, new SystemClock());
+  }
+
+   * @param clock clock for controlling time for testing
-  public ProcfsBasedProcessTree(String pid, String procfsDir) {
+  public ProcfsBasedProcessTree(String pid, String procfsDir, Clock clock) {
+    this.clock = clock;
+    this.cpuTimeTracker = new CpuTimeTracker(JIFFY_LENGTH_IN_MILLIS);
+  private BigInteger getTotalProcessJiffies() {
+    BigInteger totalStime = BigInteger.ZERO;
+    long totalUtime = 0;
+    for (ProcessInfo p : processTree.values()) {
+      if (p != null) {
+        totalUtime += p.getUtime();
+        totalStime = totalStime.add(p.getStime());
+      }
+    }
+    return totalStime.add(BigInteger.valueOf(totalUtime));
+  }
+
+  @Override
+  public float getCpuUsagePercent() {
+    BigInteger processTotalJiffies = getTotalProcessJiffies();
+    cpuTimeTracker.updateElapsedJiffies(processTotalJiffies,
+        clock.getTime());
+    return cpuTimeTracker.getCpuTrackerUsagePercent();
+  }
+
+
+  /**
+   * Test the {@link ProcfsBasedProcessTree}
+   *
+   * @param args
+   */
+  public static void main(String[] args) {
+    if (args.length != 1) {
+      System.out.println("Provide <pid of process to monitor>");
+      return;
+    }
+
+    int numprocessors =
+        ResourceCalculatorPlugin.getResourceCalculatorPlugin(null, null)
+            .getNumProcessors();
+    System.out.println("Number of processors " + numprocessors);
+
+    System.out.println("Creating ProcfsBasedProcessTree for process " +
+        args[0]);
+    ProcfsBasedProcessTree procfsBasedProcessTree = new
+        ProcfsBasedProcessTree(args[0]);
+    procfsBasedProcessTree.updateProcessTree();
+
+    System.out.println(procfsBasedProcessTree.getProcessTreeDump());
+    System.out.println("Get cpu usage " + procfsBasedProcessTree
+        .getCpuUsagePercent());
+
+    try {
+      // Sleep so we can compute the CPU usage
+      Thread.sleep(500L);
+    } catch (InterruptedException e) {
+      // do nothing
+    }
+
+    procfsBasedProcessTree.updateProcessTree();
+
+    System.out.println(procfsBasedProcessTree.getProcessTreeDump());
+    System.out.println("Cpu usage  " + procfsBasedProcessTree
+        .getCpuUsagePercent());
+    System.out.println("Vmem usage in bytes " + procfsBasedProcessTree
+        .getCumulativeVmem());
+    System.out.println("Rss mem usage in bytes " + procfsBasedProcessTree
+        .getCumulativeRssmem());
+  }

INS23 INS23 INS31 INS31 INS31 INS31 INS83 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS42 INS44 INS44 INS8 INS44 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS17 INS65 INS43 INS42 INS21 INS21 INS42 INS60 INS60 INS70 INS41 INS42 INS60 INS21 INS41 INS65 INS65 INS5 INS42 INS25 INS60 INS21 INS21 INS60 INS21 INS21 INS21 INS54 INS21 INS21 INS21 INS21 INS21 INS14 INS42 INS42 INS42 INS42 INS14 INS42 INS66 INS42 INS7 INS7 INS43 INS59 INS39 INS59 INS44 INS32 INS8 INS32 INS43 INS59 INS32 INS32 INS66 INS65 INS42 INS43 INS85 INS27 INS8 INS39 INS59 INS32 INS32 INS43 INS59 INS32 INS32 INS32 INS8 INS12 INS32 INS32 INS32 INS32 INS32 INS43 INS43 INS22 INS42 INS22 INS14 INS42 INS42 INS40 INS42 INS34 INS43 INS42 INS42 INS42 INS25 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS40 INS34 INS21 INS41 INS42 INS32 INS40 INS42 INS27 INS40 INS42 INS27 INS42 INS42 INS14 INS42 INS42 INS40 INS42 INS32 INS40 INS42 INS27 INS21 INS44 INS8 INS42 INS42 INS40 INS42 INS32 INS40 INS42 INS27 INS40 INS42 INS27 INS40 INS42 INS27 INS42 INS42 INS52 INS42 INS52 INS42 INS43 INS42 INS42 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS45 INS42 INS45 INS2 INS43 INS2 INS42 INS42 INS45 INS32 INS32 INS43 INS42 INS42 INS42 INS45 INS32 INS45 INS32 INS45 INS32 INS42 INS42 INS33 INS21 INS21 INS40 INS42 INS45 INS42 INS42 INS33 INS33 INS42 INS34 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42