HDDS-1250. In OM HA AllocateBlock call where connecting to SCM from OM should not happen on Ratis.

+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;
+  private final boolean isRatisEnabled;
+
+    this.isRatisEnabled = conf.getBoolean(
+        OMConfigKeys.OZONE_OM_RATIS_ENABLE_KEY,
+        OMConfigKeys.OZONE_OM_RATIS_ENABLE_DEFAULT);
-  public OmKeyLocationInfo allocateBlock(OmKeyArgs args, long clientID,
-      ExcludeList excludeList)
-      throws IOException {
+  public OmKeyLocationInfo addAllocatedBlock(OmKeyArgs args, long clientID,
+      OzoneManagerProtocolProtos.KeyLocation keyLocation) throws IOException {
+    Preconditions.checkNotNull(keyLocation);
+
+
+    String volumeName = args.getVolumeName();
+    String bucketName = args.getBucketName();
+    String keyName = args.getKeyName();
+    validateBucket(volumeName, bucketName);
+    String openKey = metadataManager.getOpenKey(
+        volumeName, bucketName, keyName, clientID);
+
+    OmKeyInfo keyInfo = metadataManager.getOpenKeyTable().get(openKey);
+    if (keyInfo == null) {
+      LOG.error("Allocate block for a key not in open status in meta store" +
+          " /{}/{}/{} with ID {}", volumeName, bucketName, keyName, clientID);
+      throw new OMException("Open Key not found",
+          OMException.ResultCodes.KEY_NOT_FOUND);
+    }
+
+    OmKeyLocationInfo omKeyLocationInfo =
+        OmKeyLocationInfo.getFromProtobuf(keyLocation);
+    keyInfo.appendNewBlocks(Collections.singletonList(omKeyLocationInfo));
+    keyInfo.updateModifcationTime();
+    metadataManager.getOpenKeyTable().put(openKey, keyInfo);
+    return omKeyLocationInfo;
+  }
+
+  @Override
+  public OmKeyLocationInfo allocateBlock(OmKeyArgs args, long clientID,
+      ExcludeList excludeList) throws IOException {
+    Preconditions.checkNotNull(args);
+
+
-    keyInfo.appendNewBlocks(locationInfos);
-    keyInfo.updateModifcationTime();
-    metadataManager.getOpenKeyTable().put(openKey,
-        keyInfo);
+
+    // If om is not managing via ratis, write to db, otherwise write to DB
+    // will happen via ratis apply transaction.
+    if (!isRatisEnabled) {
+      keyInfo.appendNewBlocks(locationInfos);
+      keyInfo.updateModifcationTime();
+      metadataManager.getOpenKeyTable().put(openKey, keyInfo);
+    }
+

INS26 INS40 INS23 INS31 INS83 INS83 INS39 INS59 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS43 INS8 INS42 INS21 INS42 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS42 INS21 INS21 INS60 INS60 INS60 INS21 INS60 INS60 INS25 INS60 INS21 MOV21 MOV21 INS41 INS25 INS7 INS42 INS40 INS32 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS43 INS59 INS43 INS59 INS27 INS8 INS43 INS59 INS32 INS42 INS38 INS8 INS22 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS53 INS42 INS42 INS32 INS42 INS42 INS32 INS42 MOV21 INS21 INS21 INS52 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS43 INS45 INS40 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS45 INS42 INS42 INS42