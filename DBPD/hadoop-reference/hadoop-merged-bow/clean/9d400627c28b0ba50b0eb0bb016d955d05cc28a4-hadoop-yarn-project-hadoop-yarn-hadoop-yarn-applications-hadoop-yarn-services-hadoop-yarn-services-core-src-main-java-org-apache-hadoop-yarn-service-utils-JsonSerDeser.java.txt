YARN-9081. Update jackson from 1.9.13 to 2.x in hadoop-yarn-services-core.

Signed-off-by: Takanobu Asanuma <tasanuma@apache.org>

+import com.fasterxml.jackson.core.JsonParseException;
+import com.fasterxml.jackson.core.JsonProcessingException;
+import com.fasterxml.jackson.databind.DeserializationFeature;
+import com.fasterxml.jackson.databind.JsonMappingException;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.databind.PropertyNamingStrategy;
+import com.fasterxml.jackson.databind.SerializationFeature;
-import org.codehaus.jackson.JsonGenerationException;
-import org.codehaus.jackson.JsonParseException;
-import org.codehaus.jackson.map.DeserializationConfig;
-import org.codehaus.jackson.map.JsonMappingException;
-import org.codehaus.jackson.map.ObjectMapper;
-import org.codehaus.jackson.map.PropertyNamingStrategy;
-import org.codehaus.jackson.map.SerializationConfig;
+import java.nio.charset.StandardCharsets;
-  private static final String UTF_8 = "UTF-8";
-    mapper.configure(DeserializationConfig.Feature.FAIL_ON_UNKNOWN_PROPERTIES, false);
-    mapper.configure(SerializationConfig.Feature.WRITE_NULL_MAP_VALUES, false);
-    mapper.configure(SerializationConfig.Feature.WRITE_NULL_PROPERTIES, false);
+    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
+    mapper.configure(SerializationFeature.WRITE_NULL_MAP_VALUES, false);
-    String json = new String(b, 0, b.length, UTF_8);
+    String json = new String(b, 0, b.length, StandardCharsets.UTF_8);
-      byte[] b = json.getBytes(UTF_8);
+      byte[] b = json.getBytes(StandardCharsets.UTF_8);
-   * @throws JsonParseException parse problems
-   * @throws JsonMappingException O/J mapping problems
+   * @throws JsonProcessingException parse problems
-  public String toJson(T instance) throws IOException,
-                                               JsonGenerationException,
-                                               JsonMappingException {
-    mapper.configure(SerializationConfig.Feature.INDENT_OUTPUT, true);
+  public String toJson(T instance) throws JsonProcessingException {
+    mapper.configure(SerializationFeature.INDENT_OUTPUT, true);

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 INS40 UPD43 UPD42 MOV43 UPD42 UPD40 UPD40 UPD40 MOV43 INS40 INS40 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL42 DEL42 DEL40 DEL9 DEL32 DEL21 DEL42 DEL42 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL43