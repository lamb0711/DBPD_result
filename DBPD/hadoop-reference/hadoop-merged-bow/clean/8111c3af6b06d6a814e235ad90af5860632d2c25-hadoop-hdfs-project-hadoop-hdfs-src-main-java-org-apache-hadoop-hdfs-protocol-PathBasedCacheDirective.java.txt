HDFS-5224. Refactor PathBasedCache* methods to use a Path rather than a String. Contributed by Chris Nauroth.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1531406 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.hdfs.protocol.AddPathBasedCacheDirectiveException.EmptyPathError;
-  private final String path;
-  private final String pool;
+  /**
+   * A builder for creating new PathBasedCacheDirective instances.
+   */
+  public static class Builder {
-  public PathBasedCacheDirective(String path, String pool) {
-    Preconditions.checkNotNull(path);
-    Preconditions.checkNotNull(pool);
-    this.path = path;
-    this.pool = pool;
+    private Path path;
+    private String pool;
+
+    /**
+     * Builds a new PathBasedCacheDirective populated with the set properties.
+     * 
+     * @return New PathBasedCacheDirective.
+     */
+    public PathBasedCacheDirective build() {
+      return new PathBasedCacheDirective(path, pool);
+    }
+
+    /**
+     * Sets the path used in this request.
+     * 
+     * @param path The path used in this request.
+     * @return This builder, for call chaining.
+     */
+    public Builder setPath(Path path) {
+      this.path = path;
+      return this;
+    }
+
+    /**
+     * Sets the pool used in this request.
+     * 
+     * @param pool The pool used in this request.
+     * @return This builder, for call chaining.
+     */
+    public Builder setPool(String pool) {
+      this.pool = pool;
+      return this;
+    }
+  private final Path path;
+  private final String pool;
+
-  public String getPath() {
+  public Path getPath() {
-    if (path.isEmpty()) {
-      throw new EmptyPathError(this);
-    }
-    if (!DFSUtil.isValidName(path)) {
+    if (!DFSUtil.isValidName(path.toUri().getPath())) {
+
+  /**
+   * Protected constructor.  Callers use Builder to create new instances.
+   * 
+   * @param path The path used in this request.
+   * @param pool The pool used in this request.
+   */
+  protected PathBasedCacheDirective(Path path, String pool) {
+    Preconditions.checkNotNull(path);
+    Preconditions.checkNotNull(pool);
+    this.path = path;
+    this.pool = pool;
+  }

MOV26 MOV31 UPD40 INS55 INS23 INS29 INS83 INS83 INS42 INS23 INS23 INS31 INS31 INS31 INS83 INS83 INS43 MOV59 INS43 INS29 UPD83 INS65 MOV83 INS43 INS59 UPD83 MOV83 MOV43 INS59 INS29 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS44 INS8 INS42 INS42 INS65 INS65 INS65 UPD43 INS66 INS42 INS42 INS42 INS65 INS65 INS42 INS41 INS65 INS65 INS65 INS42 INS43 INS42 INS21 INS41 INS65 INS65 INS65 INS42 INS43 INS42 INS21 INS41 INS66 INS42 INS66 INS42 INS66 UPD42 INS66 INS66 INS14 INS66 INS42 INS66 INS66 INS42 INS7 INS52 INS66 INS42 INS66 INS66 MOV42 INS7 INS52 INS43 INS42 INS42 INS22 INS42 INS22 INS42 INS32 INS42 INS52 INS42 INS52 INS42 INS32 INS42 MOV42 INS42 DEL43 DEL23 DEL42 DEL42 DEL32 DEL42 DEL43 DEL52 DEL14 DEL53 DEL8 DEL25