HDFS-2899. Service protocol changes in DatanodeProtocol to add multiple storages. Contributed by Suresh Srinivas.



git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241519 13f79535-47bb-0310-9956-ffa450edef68

-import javax.security.auth.login.LoginException;
-
+import org.apache.hadoop.hdfs.server.protocol.DatanodeStorage;
+import org.apache.hadoop.hdfs.server.protocol.StorageBlockReport;
+import org.apache.hadoop.hdfs.server.protocol.StorageReceivedDeletedBlocks;
+import org.apache.hadoop.hdfs.server.protocol.StorageReport;
-  NNThroughputBenchmark(Configuration conf) throws IOException, LoginException {
+  NNThroughputBenchmark(Configuration conf) throws IOException {
-  void close() throws IOException {
+  void close() {
-      dnRegistration = nameNodeProto.registerDatanode(dnRegistration);
+      
+      DatanodeStorage[] storages = { new DatanodeStorage(
+          dnRegistration.getStorageID(), DatanodeStorage.State.NORMAL) };
+      dnRegistration = nameNodeProto.registerDatanode(dnRegistration, storages);
+      StorageReport[] rep = { new StorageReport(dnRegistration.getStorageID(),
+          false, DF_CAPACITY, DF_USED, DF_CAPACITY - DF_USED, DF_USED) };
-          DF_CAPACITY, DF_USED, DF_CAPACITY - DF_USED, DF_USED, 0, 0, 0);
+          rep, 0, 0, 0);
-      // TODO:FEDERATION currently a single block pool is supported
+      StorageReport[] rep = { new StorageReport(dnRegistration.getStorageID(),
+          false, DF_CAPACITY, DF_USED, DF_CAPACITY - DF_USED, DF_USED) };
-          DF_CAPACITY, DF_USED, DF_CAPACITY - DF_USED, DF_USED, 0, 0, 0);
+          rep, 0, 0, 0);
+          ReceivedDeletedBlockInfo[] rdBlocks = { new ReceivedDeletedBlockInfo(
+                  blocks[i], DataNode.EMPTY_DEL_HINT) };
+          StorageReceivedDeletedBlocks[] report = { new StorageReceivedDeletedBlocks(
+              receivedDNReg.getStorageID(), rdBlocks) };
-              .getNamesystem().getBlockPoolId(),
-              new ReceivedDeletedBlockInfo[] { new ReceivedDeletedBlockInfo(
-                  blocks[i], DataNode.EMPTY_DEL_HINT) });
+              .getNamesystem().getBlockPoolId(), report);
-      this.replication = (short)Math.min((int)replication, getNumDatanodes());
+      this.replication = (short)Math.min(replication, getNumDatanodes());
+          ReceivedDeletedBlockInfo[] rdBlocks = { new ReceivedDeletedBlockInfo(
+              loc.getBlock().getLocalBlock(), "") };
+          StorageReceivedDeletedBlocks[] report = { new StorageReceivedDeletedBlocks(
+              datanodes[dnIdx].dnRegistration.getStorageID(), rdBlocks) };
-              .getBlock().getBlockPoolId(),
-              new ReceivedDeletedBlockInfo[] { new ReceivedDeletedBlockInfo(loc
-                  .getBlock().getLocalBlock(), "") });
+              .getBlock().getBlockPoolId(), report);
+      StorageBlockReport[] report = { new StorageBlockReport(
+          dn.dnRegistration.getStorageID(), dn.getBlockReportList()) };
-          .getBlockPoolId(), dn.getBlockReportList());
+          .getBlockPoolId(), report);

MOV26 INS26 INS26 INS26 INS40 INS40 INS40 UPD40 INS60 INS60 INS60 INS60 INS5 INS59 INS5 INS59 INS5 INS59 INS5 INS59 INS43 INS85 INS42 INS4 INS43 INS85 INS42 INS4 INS43 INS85 INS42 INS4 INS43 INS85 INS42 INS4 INS42 INS42 INS14 INS42 INS42 INS14 UPD42 INS42 INS14 UPD42 INS42 INS14 INS43 INS32 INS40 INS43 INS32 INS9 INS42 INS42 MOV27 INS42 INS43 INS32 INS9 INS42 INS42 MOV27 INS42 INS60 INS60 INS42 INS60 INS60 INS43 INS32 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV5 INS59 INS5 INS59 MOV5 INS59 INS5 INS59 INS42 INS40 INS42 INS42 MOV4 INS43 INS85 INS42 INS4 INS42 INS42 MOV4 INS43 INS85 INS42 INS4 INS42 INS42 INS14 INS42 INS14 INS43 INS32 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS22 INS42 INS2 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL3 DEL39 DEL42 DEL11 DEL3