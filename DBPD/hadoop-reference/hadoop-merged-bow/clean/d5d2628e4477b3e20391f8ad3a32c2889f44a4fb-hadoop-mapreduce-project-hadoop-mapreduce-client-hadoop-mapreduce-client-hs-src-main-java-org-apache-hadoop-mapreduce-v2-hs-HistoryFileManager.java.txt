Merge r1360400 through r1399945 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1399950 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.HashMap;
-import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.ConcurrentMap;
+import com.google.common.annotations.VisibleForTesting;
-
+  
-  private static class JobListCache {
+  static class JobListCache {
+  /**
+   * This class represents a user dir in the intermediate done directory.  This
+   * is mostly for locking purposes. 
+   */
+  private class UserLogDir {
+    long modTime = 0;
+    
+    public synchronized void scanIfNeeded(FileStatus fs) {
+      long newModTime = fs.getModificationTime();
+      if (modTime != newModTime) {
+        Path p = fs.getPath();
+        try {
+          scanIntermediateDirectory(p);
+          //If scanning fails, we will scan again.  We assume the failure is
+          // temporary.
+          modTime = newModTime;
+        } catch (IOException e) {
+          LOG.error("Error while trying to scan the directory " + p, e);
+        }
+      }
+    }
+  }
+  
-    private synchronized boolean isMovePending() {
+    @VisibleForTesting
+    synchronized boolean isMovePending() {
-    private synchronized boolean didMoveFail() {
+    @VisibleForTesting
+    synchronized boolean didMoveFail() {
-      jobConf.addResource(fc.open(confFile));
+      jobConf.addResource(fc.open(confFile), confFile.toString());
-  private JobListCache jobListCache = null;
+  protected JobListCache jobListCache = null;
-  private Map<String, Long> userDirModificationTimeMap = new HashMap<String, Long>();
+  private ConcurrentMap<String, UserLogDir> userDirModificationTimeMap = 
+    new ConcurrentHashMap<String, UserLogDir>();
-  private boolean debugMode;
-    debugMode = conf.getBoolean(JHAdminConfig.MR_HISTORY_DEBUG_MODE, false);
-    int serialNumberLowDigits = debugMode ? 1 : 3;
+    int serialNumberLowDigits = 3;
+      doneDirFc.setUMask(JobHistoryUtils.HISTORY_DONE_DIR_UMASK);
-      long newModificationTime = userDir.getModificationTime();
-      boolean shouldScan = false;
-      synchronized (userDirModificationTimeMap) {
-        if (!userDirModificationTimeMap.containsKey(name)
-            || newModificationTime > userDirModificationTimeMap.get(name)) {
-          shouldScan = true;
-          userDirModificationTimeMap.put(name, newModificationTime);
+      UserLogDir dir = userDirModificationTimeMap.get(name);
+      if(dir == null) {
+        dir = new UserLogDir();
+        UserLogDir old = userDirModificationTimeMap.putIfAbsent(name, dir);
+        if(old != null) {
+          dir = old;
-      if (shouldScan) {
-        try {
-          scanIntermediateDirectory(userDir.getPath());
-        } catch (IOException e) {
-          LOG.error("Error while trying to scan the directory " 
-              + userDir.getPath(), e);
-        }
-      }
+      dir.scanIfNeeded(userDir);
-    int jobSerialNumber = JobHistoryUtils.jobSerialNumber(jobId);
-    String boxedSerialNumber = String.valueOf(jobSerialNumber);
+    String boxedSerialNumber = JobHistoryUtils.serialNumberDirectoryComponent(
+        jobId, serialNumberFormat);
-    String timestampComponent = JobHistoryUtils.timestampDirectoryComponent(
-        millisecondTime, debugMode);
+    String timestampComponent = JobHistoryUtils
+        .timestampDirectoryComponent(millisecondTime);

MOV26 MOV26 INS26 UPD40 UPD40 INS40 INS55 INS29 INS83 INS42 INS23 INS31 UPD83 UPD74 INS65 INS39 INS59 INS83 INS83 INS39 INS42 INS44 INS8 INS78 INS78 UPD43 MOV43 UPD43 INS66 INS66 INS42 INS34 INS43 INS42 INS60 INS25 INS42 INS42 UPD42 UPD42 UPD74 MOV43 INS42 INS39 INS59 INS27 INS8 UPD43 MOV43 UPD43 INS34 INS21 INS25 MOV21 UPD42 INS42 INS32 INS42 INS42 INS60 INS54 INS32 UPD42 UPD42 INS32 INS43 INS59 INS27 INS8 UPD42 INS42 INS42 INS42 INS43 INS59 INS8 INS12 INS42 INS42 INS42 INS42 INS40 INS42 INS42 MOV32 UPD42 MOV42 INS33 MOV21 INS60 INS25 UPD42 UPD42 MOV42 INS42 INS42 INS32 INS21 INS21 MOV44 INS8 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS7 INS21 UPD42 INS14 INS42 INS42 INS32 INS42 INS33 MOV21 INS42 INS42 INS42 INS42 INS32 INS43 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 INS7 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS45 INS42 DEL83 DEL83 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL42 DEL42 DEL42 DEL40 DEL9 DEL32 DEL7 DEL21 DEL42 DEL34 DEL34 DEL16 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL9 DEL42 DEL42 DEL42 DEL32 DEL32 DEL45 DEL42 DEL32 DEL27 DEL42 DEL39 DEL42 DEL9 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL38 DEL27 DEL27 DEL32 DEL21 DEL8 DEL25 DEL8 DEL51 DEL42 DEL8 DEL8 DEL12 DEL54 DEL8 DEL25 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42