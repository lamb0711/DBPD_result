HDFS-4686. Update quota computation for rename and INodeReference.  Contributed by Jing Zhao


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1471647 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.namenode.INodeReference.DstReference;
+import org.apache.hadoop.hdfs.server.namenode.INodeReference.WithName;
-  public void addSpaceConsumed(long nsDelta, long dsDelta, boolean verify)
-      throws QuotaExceededException {
-    final INodeDirectory parentDir = getParent();
-    if (parentDir != null) {
-      parentDir.addSpaceConsumed(nsDelta, dsDelta, verify);
+  public void addSpaceConsumed(long nsDelta, long dsDelta, boolean verify,
+      int snapshotId) throws QuotaExceededException {
+    if (parent != null) {
+      parent.addSpaceConsumed(nsDelta, dsDelta, verify, snapshotId);
+    }
+  }
+
+  public void addSpaceConsumedToRenameSrc(long nsDelta, long dsDelta,
+      boolean verify, int snapshotId) throws QuotaExceededException {
+    if (parent != null) {
+      parent.addSpaceConsumedToRenameSrc(nsDelta, dsDelta, verify, snapshotId);
+   * With the existence of {@link INodeReference}, the same inode and its
+   * subtree may be referred by multiple {@link WithName} nodes and a
+   * {@link DstReference} node. To avoid circles while quota usage computation,
+   * we have the following rules:
+   * 
+   * <pre>
+   * 1. For a {@link DstReference} node, since the node must be in the current
+   * tree (or has been deleted as the end point of a series of rename 
+   * operations), we compute the quota usage of the referred node (and its 
+   * subtree) in the regular manner, i.e., including every inode in the current
+   * tree and in snapshot copies, as well as the size of diff list.
+   * 
+   * 2. For a {@link WithName} node, since the node must be in a snapshot, we 
+   * only count the quota usage for those nodes that still existed at the 
+   * creation time of the snapshot associated with the {@link WithName} node.
+   * We do not count in the size of the diff list.  
+   * <pre>
+   * 
+   * @param useCache Whether to use cached quota usage. Note that 
+   *                 {@link WithName} node never uses cache for its subtree.
+   * @param lastSnapshotId {@link Snapshot#INVALID_ID} indicates the computation
+   *                       is in the current tree. Otherwise the id indicates
+   *                       the computation range for a {@link WithName} node.
-      boolean useCache);
+      boolean useCache, int lastSnapshotId);
+
+  public final Quota.Counts computeQuotaUsage(Quota.Counts counts,
+      boolean useCache) {
+    return computeQuotaUsage(counts, useCache, Snapshot.INVALID_ID);
+  }

INS26 INS26 INS40 INS40 INS31 INS31 INS31 MOV29 MOV83 MOV39 MOV42 MOV44 MOV44 MOV44 INS44 MOV43 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS44 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS39 INS42 INS25 INS39 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS42 MOV25 INS65 INS65 INS39 INS42 INS40 INS43 INS42 INS39 INS42 INS41 INS27 INS8 INS66 INS65 INS66 INS66 INS65 INS66 INS65 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS42 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS66 INS66 INS65 INS66 INS40 INS32 INS42 INS33 INS21 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS67 INS42 INS42 INS42 INS42 INS40 INS32 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS42 DEL83 DEL42 DEL43 DEL42 DEL32 DEL59 DEL60 DEL8 DEL31