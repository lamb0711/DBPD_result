MAPREDUCE-7095. Race conditions in closing FadvisedChunkedFile. (Miklos Szegedi via Haibo Chen)

+import com.google.common.annotations.VisibleForTesting;
+  private final Object closeLock = new Object();
-  private ReadaheadRequest readaheadRequest;
+  private volatile ReadaheadRequest readaheadRequest;
+  @VisibleForTesting
+  FileDescriptor getFd() {
+    return fd;
+  }
+
-    if (manageOsCache && readaheadPool != null) {
-      readaheadRequest = readaheadPool
-          .readaheadStream(identifier, fd, getCurrentOffset(), readaheadLength,
-              getEndOffset(), readaheadRequest);
+    synchronized (closeLock) {
+      if (fd.valid()) {
+        if (manageOsCache && readaheadPool != null) {
+          readaheadRequest = readaheadPool
+              .readaheadStream(
+                  identifier, fd, getCurrentOffset(), readaheadLength,
+                  getEndOffset(), readaheadRequest);
+        }
+        return super.nextChunk();
+      } else {
+        return null;
+      }
-    return super.nextChunk();
-    if (readaheadRequest != null) {
-      readaheadRequest.cancel();
-    }
-    if (manageOsCache && getEndOffset() - getStartOffset() > 0) {
-      try {
-        NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(identifier,
-            fd,
-            getStartOffset(), getEndOffset() - getStartOffset(),
-            POSIX_FADV_DONTNEED);
-      } catch (Throwable t) {
-        LOG.warn("Failed to manage OS cache for " + identifier, t);
+    synchronized (closeLock) {
+      if (readaheadRequest != null) {
+        readaheadRequest.cancel();
+        readaheadRequest = null;
+      if (fd.valid() &&
+          manageOsCache && getEndOffset() - getStartOffset() > 0) {
+        try {
+          NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(
+              identifier,
+              fd,
+              getStartOffset(), getEndOffset() - getStartOffset(),
+              POSIX_FADV_DONTNEED);
+        } catch (Throwable t) {
+          LOG.warn("Failed to manage OS cache for " + identifier +
+              " fd " + fd.toString(), t);
+        }
+      }
+      // fd becomes invalid upon closing
+      super.close();
-    super.close();

INS26 INS40 INS23 INS31 INS83 INS83 INS43 INS59 INS83 INS78 INS43 INS42 INS8 INS8 INS8 INS42 INS42 INS14 INS42 INS42 INS41 INS51 INS51 INS43 INS42 INS42 INS8 INS42 MOV8 INS42 INS25 INS32 MOV8 INS8 INS42 INS42 INS41 INS21 INS32 INS33 INS7 INS42 INS42 INS42 INS33 INS45 INS32 INS42 INS42