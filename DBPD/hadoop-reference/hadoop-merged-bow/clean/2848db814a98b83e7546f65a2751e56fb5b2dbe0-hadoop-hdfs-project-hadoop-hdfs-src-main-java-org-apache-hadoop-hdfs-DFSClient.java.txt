HDFS-3689. Add support for variable length block. Contributed by Jing Zhao.

-   * 
-   * @see ClientProtocol#create(String, FsPermission, String, EnumSetWritable,
-   * boolean, short, long) for detailed description of exceptions thrown
+   *
+   * @see ClientProtocol#create for detailed description of exceptions thrown
-      return callAppend(src, buffersize, progress);
+      return callAppend(src, buffersize, flag, progress);
-  private DFSOutputStream callAppend(String src,
-      int buffersize, Progressable progress) throws IOException {
-    LastBlockWithStatus lastBlockWithStatus = null;
+  private DFSOutputStream callAppend(String src, int buffersize,
+      EnumSet<CreateFlag> flag, Progressable progress) throws IOException {
+    CreateFlag.validateForAppend(flag);
-      lastBlockWithStatus = namenode.append(src, clientName);
+      LastBlockWithStatus blkWithStatus = namenode.append(src, clientName,
+          new EnumSetWritable<>(flag, CreateFlag.class));
+      return DFSOutputStream.newStreamForAppend(this, src,
+          flag.contains(CreateFlag.NEW_BLOCK),
+          buffersize, progress, blkWithStatus.getLastBlock(),
+          blkWithStatus.getFileStatus(), dfsClientConf.createChecksum());
-    HdfsFileStatus newStat = lastBlockWithStatus.getFileStatus();
-    return DFSOutputStream.newStreamForAppend(this, src, buffersize, progress,
-        lastBlockWithStatus.getLastBlock(), newStat,
-        dfsClientConf.createChecksum());
+   * @param flag indicates whether to append data to a new block instead of
+   *             the last block
-   * @see ClientProtocol#append(String, String) 
+   * @see ClientProtocol#append(String, String, EnumSetWritable)
-      final Progressable progress, final FileSystem.Statistics statistics
-      ) throws IOException {
-    final DFSOutputStream out = append(src, buffersize, progress);
+      EnumSet<CreateFlag> flag, final Progressable progress,
+      final FileSystem.Statistics statistics) throws IOException {
+    final DFSOutputStream out = append(src, buffersize, flag, progress);
-  private DFSOutputStream append(String src, int buffersize, Progressable progress) 
-      throws IOException {
+  private DFSOutputStream append(String src, int buffersize,
+      EnumSet<CreateFlag> flag, Progressable progress) throws IOException {
-    final DFSOutputStream result = callAppend(src, buffersize, progress);
+    final DFSOutputStream result = callAppend(src, buffersize, flag, progress);
-   * See {@link ClientProtocol#concat(String, String [])}. 
+   * See {@link ClientProtocol#concat}.
-   * See {@link ClientProtocol#truncate(String, long)}. 
+   * See {@link ClientProtocol#truncate}.
-   * @param path The string representation of the path
+   * @param src The string representation of the path

INS44 MOV65 INS44 INS44 INS65 INS74 INS42 INS21 UPD65 MOV65 INS74 INS42 INS74 INS42 INS67 INS66 INS43 INS43 INS32 INS42 UPD66 INS66 INS43 INS43 INS43 INS43 UPD66 UPD66 UPD42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS60 INS41 UPD42 INS42 INS42 INS42 INS42 INS67 INS67 MOV43 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS52 INS42 INS32 INS42 INS42 INS32 INS32 MOV32 MOV42 MOV42 MOV42 MOV42 INS14 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS74 INS42 INS57 INS43 INS43 INS42 INS42 DEL42 DEL33 DEL59 DEL60 DEL42 DEL32 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL52 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL41 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL69 DEL68 DEL42 DEL43 DEL69 DEL39 DEL69 DEL39 DEL69 DEL39 DEL69 DEL66 DEL42 DEL42 DEL42 DEL43 DEL69 DEL42 DEL43 DEL85 DEL5 DEL69 DEL68 DEL42 DEL42 DEL42 DEL43 DEL69 DEL39 DEL69 DEL68