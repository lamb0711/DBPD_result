Merge r1408927 through r1410997 from trunk


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1411007 13f79535-47bb-0310-9956-ffa450edef68

-import static org.apache.hadoop.fs.CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION;
-      if (useKerberos) {
+      if (isAuthenticationMethodEnabled(AuthenticationMethod.KERBEROS)) {
-  /** Should we use Kerberos configuration? */
-  private static boolean useKerberos;
+  /** The auth method to use */
+  private static AuthenticationMethod authenticationMethod;
-    AuthenticationMethod auth = SecurityUtil.getAuthenticationMethod(conf);
-    switch (auth) {
-      case SIMPLE:
-      case TOKEN:
-        useKerberos = false;
-        break;
-      case KERBEROS:
-        useKerberos = true;
-        break;
-      default:
-        throw new IllegalArgumentException("Invalid attribute value for " +
-                                           HADOOP_SECURITY_AUTHENTICATION + 
-                                           " of " + auth);
-    }
+    authenticationMethod = SecurityUtil.getAuthenticationMethod(conf);
+    return !isAuthenticationMethodEnabled(AuthenticationMethod.SIMPLE);
+  }
+  
+  @InterfaceAudience.Private
+  @InterfaceStability.Evolving
+  private static boolean isAuthenticationMethodEnabled(AuthenticationMethod method) {
-    return useKerberos;
+    return (authenticationMethod == method);
-    if (!isSecurityEnabled()) {
+    if (!isAuthenticationMethodEnabled(AuthenticationMethod.KERBEROS)) {
+      ensureInitialized();
-        LoginContext login;
-        AuthenticationMethod authenticationMethod;
-        if (isSecurityEnabled()) {
-          authenticationMethod = AuthenticationMethod.KERBEROS;
-          login = newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME,
-              subject, new HadoopConfiguration());
-        } else {
-          authenticationMethod = AuthenticationMethod.SIMPLE;
-          login = newLoginContext(HadoopConfiguration.SIMPLE_CONFIG_NAME, 
-              subject, new HadoopConfiguration());
-        }
+        LoginContext login =
+            newLoginContext(authenticationMethod.getLoginAppName(), 
+                            subject, new HadoopConfiguration());
+  @InterfaceAudience.Private
+  @InterfaceStability.Unstable
+  synchronized static void setLoginUser(UserGroupInformation ugi) {
+    // if this is to become stable, should probably logout the currently
+    // logged in ugi if it's different
+    loginUser = ugi;
+  }
+  
-    SIMPLE(AuthMethod.SIMPLE),
-    KERBEROS(AuthMethod.KERBEROS),
+    SIMPLE(AuthMethod.SIMPLE,
+        HadoopConfiguration.SIMPLE_CONFIG_NAME),
+    KERBEROS(AuthMethod.KERBEROS,
+        HadoopConfiguration.USER_KERBEROS_CONFIG_NAME),
+    private final String loginAppName;
+    
+      this(authMethod, null);
+    }
+    private AuthenticationMethod(AuthMethod authMethod, String loginAppName) {
+      this.loginAppName = loginAppName;
+    String getLoginAppName() {
+      if (loginAppName == null) {
+        throw new UnsupportedOperationException(
+            this + " login authentication is not supported");
+      }
+      return loginAppName;
+    }
+    
-  
+
+  /**
+   * Get the authentication method from the real user's subject.  If there
+   * is no real user, return the given user's authentication method.
+   * 
+   * @return AuthenticationMethod in the subject, null if not present.
+   */
+  public synchronized AuthenticationMethod getRealAuthenticationMethod() {
+    UserGroupInformation ugi = getRealUser();
+    if (ugi == null) {
+      ugi = this;
+    }
+    return ugi.getAuthenticationMethod();
+  }
+

INS23 INS31 INS31 INS31 MOV29 MOV83 MOV83 MOV43 MOV59 MOV29 INS83 INS83 INS39 INS42 INS8 INS78 INS78 UPD83 UPD42 INS44 INS78 INS78 INS83 INS83 INS39 INS42 INS44 INS8 INS23 INS31 INS31 INS29 INS83 INS83 INS43 INS42 INS8 INS21 INS41 INS40 INS40 MOV43 INS42 INS40 INS40 INS43 INS42 INS21 INS40 INS40 INS83 INS83 INS43 INS59 INS83 INS42 INS44 INS8 INS44 INS43 INS42 INS8 INS65 INS65 INS42 INS60 INS25 INS41 UPD66 MOV7 INS38 INS36 INS42 INS7 INS42 INS42 INS43 INS42 INS17 INS43 INS42 INS21 INS42 INS25 INS41 INS66 INS66 INS66 INS43 INS59 INS27 INS8 INS32 INS32 UPD42 MOV32 INS32 INS27 INS21 INS42 INS42 INS42 INS42 INS33 INS42 INS7 INS27 INS8 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS42 INS40 INS42 INS40 INS42 INS42 UPD42 INS40 INS32 INS22 INS42 INS42 INS33 INS53 INS42 INS7 INS42 INS60 INS52 INS42 INS14 INS42 INS52 MOV43 INS59 INS43 INS27 MOV42 INS32 INS42 INS52 INS45 MOV42 INS32 MOV42 MOV14 INS42 UPD42 MOV42 DEL40 DEL26 DEL42 DEL39 DEL42 DEL59 DEL23 DEL9 DEL42 DEL59 DEL60 DEL42 DEL42 DEL49 DEL42 DEL49 DEL21 DEL10 DEL42 DEL49 DEL42 DEL9 DEL7 DEL21 DEL10 DEL49 DEL42 DEL43 DEL45 DEL42 DEL45 DEL42 DEL27 DEL14 DEL53 DEL50 DEL42 DEL59 DEL60 DEL60 DEL42 DEL32 DEL42 DEL40 DEL7 DEL21 DEL42 DEL40 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL40 DEL7 DEL21 DEL42 DEL40 DEL42 DEL43 DEL14 DEL32 DEL7 DEL21 DEL8 DEL25