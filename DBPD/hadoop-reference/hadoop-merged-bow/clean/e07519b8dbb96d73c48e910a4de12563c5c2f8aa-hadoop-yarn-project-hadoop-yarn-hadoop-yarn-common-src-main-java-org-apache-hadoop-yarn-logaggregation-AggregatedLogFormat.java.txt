YARN-4766. NM should not aggregate logs older than the retention policy (haibochen via rkanter)

+
+    /**
+     * The retention context to determine if log files are older than
+     * the retention policy configured.
+     */
+    private final LogRetentionContext logRetentionContext;
+    /**
+     * The set of log files that are older than retention policy that will
+     * not be uploaded but ready for deletion.
+     */
+    private final Set<File> obseleteRetentionLogFiles = new HashSet<File>();
+
-      this(rootLogDirs, containerId, user, null, new HashSet<String>(), true);
+      this(rootLogDirs, containerId, user, null, new HashSet<String>(),
+          null, true);
-        Set<String> alreadyUploadedLogFiles, boolean appFinished) {
+        Set<String> alreadyUploadedLogFiles,
+        LogRetentionContext retentionContext, boolean appFinished) {
+      this.logRetentionContext = retentionContext;
-    private Set<File> getPendingLogFilesToUploadForThisContainer() {
+    @VisibleForTesting
+    public Set<File> getPendingLogFilesToUploadForThisContainer() {
+      // if log files are older than retention policy, do not upload them.
+      // but schedule them for deletion.
+      if(logRetentionContext != null && !logRetentionContext.shouldRetainLog()){
+        obseleteRetentionLogFiles.addAll(candidates);
+        candidates.clear();
+        return candidates;
+      }
+
+
+    public Set<Path> getObseleteRetentionLogFiles() {
+      Set<Path> path = new HashSet<Path>();
+      for(File file: this.obseleteRetentionLogFiles) {
+        path.add(new Path(file.getAbsolutePath()));
+      }
+      return path;
+    }
+
+   * A context for log retention to determine if files are older than
+   * the retention policy configured in YarnConfiguration.
+   */
+  public static class LogRetentionContext {
+    /**
+     * The time used with logRetentionMillis, to determine ages of
+     * log files and if files need to be uploaded.
+     */
+    private final long logInitedTimeMillis;
+    /**
+     * The numbers of milli seconds since a log file is created to determine
+     * if we should upload it. -1 if disabled.
+     * see YarnConfiguration.LOG_AGGREGATION_RETAIN_SECONDS for details.
+     */
+    private final long logRetentionMillis;
+
+    public LogRetentionContext(long logInitedTimeMillis, long
+        logRetentionMillis) {
+      this.logInitedTimeMillis = logInitedTimeMillis;
+      this.logRetentionMillis = logRetentionMillis;
+    }
+
+    public boolean isDisabled() {
+      return logInitedTimeMillis < 0 || logRetentionMillis < 0;
+    }
+
+    public boolean shouldRetainLog() {
+      return isDisabled() ||
+          System.currentTimeMillis() - logInitedTimeMillis < logRetentionMillis;
+    }
+  }
+
+  /**

INS55 INS23 INS23 INS31 INS29 INS83 INS83 INS42 INS23 INS23 INS31 INS31 INS31 INS29 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS74 INS59 INS44 INS78 UPD83 INS83 INS74 INS42 INS8 INS65 INS29 INS83 INS83 INS39 INS59 INS29 INS83 INS83 INS39 INS59 INS83 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS65 INS42 INS42 INS65 INS43 INS43 INS42 INS14 INS43 INS42 INS21 INS42 INS25 INS43 INS43 INS60 INS70 INS41 INS66 INS66 INS65 INS42 INS65 INS42 INS39 INS42 INS39 INS42 INS21 INS21 INS41 INS41 INS66 INS66 INS66 INS66 INS42 INS42 INS74 INS33 INS42 INS7 INS27 INS8 INS42 INS42 INS74 INS59 INS44 INS22 INS8 INS42 INS66 INS66 INS66 INS66 INS66 INS7 INS7 INS27 INS27 INS43 INS43 INS22 INS42 INS27 INS38 INS21 INS21 INS41 INS43 INS43 INS42 INS14 INS43 INS42 INS52 INS42 INS21 INS22 INS42 INS22 INS42 INS27 INS27 INS32 INS27 INS42 INS42 INS52 INS42 INS42 INS33 INS32 INS32 INS32 INS42 INS42 INS42 INS74 INS42 INS32 INS52 INS42 INS52 INS42 INS42 INS34 INS42 INS34 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS14 INS32 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42