YARN-9998. Code cleanup in LeveldbConfigurationStore. Contributed by Benjamin Teke

+import java.util.function.Consumer;
-
-  private DB versiondb;
+  private DB versionDb;
+  private Configuration initSchedConf;
-  private Timer compactionTimer;
+    this.initSchedConf = schedConf;
-      initDatabase(schedConf);
+      initDatabase();
-  private void initDatabase(Configuration config) throws Exception {
+  private void initDatabase() throws Exception {
+    Path confVersion = createStorageDir(CONF_VERSION_NAME);
+    Options confOptions = new Options();
+    confOptions.createIfMissing(false);
+    File confVersionFile = new File(confVersion.toString());
+
+    versionDb = initDatabaseHelper(confVersionFile, confOptions,
+        this::initVersionDb);
+
+    LOG.info("Using conf database at {}", storeRoot);
+    File dbFile = new File(storeRoot.toString());
+    db = initDatabaseHelper(dbFile, options, this::initDb);
+  }
-    Path confVersion = createStorageDir(CONF_VERSION_NAME);
-    Options confOptions = new Options();
-    confOptions.createIfMissing(false);
-    LOG.info("Using conf version at " + confVersion);
-    File confVersionFile = new File(confVersion.toString());
-    try {
-      versiondb = JniDBFactory.factory.open(confVersionFile, confOptions);
-    } catch (NativeDB.DBException e) {
-      if (e.isNotFound() || e.getMessage().contains(" does not exist ")) {
-        LOG.info("Creating conf version at " + confVersionFile);
-        confOptions.createIfMissing(true);
-        try {
-          versiondb = JniDBFactory.factory.open(confVersionFile, confOptions);
-          versiondb.put(bytes(CONF_VERSION_KEY), bytes(String.valueOf(0)));
-        } catch (DBException dbErr) {
-          throw new IOException(dbErr.getMessage(), dbErr);
-        }
-      } else {
-        throw e;
-      }
+  private void initVersionDb(DB database) {
+    database.put(bytes(CONF_VERSION_KEY), bytes(String.valueOf(0)));
+  }
+
+  private void initDb(DB database) {
+    WriteBatch initBatch = database.createWriteBatch();
+    for (Map.Entry<String, String> kv : initSchedConf) {
+      initBatch.put(bytes(kv.getKey()), bytes(kv.getValue()));
+    database.write(initBatch);
+    increaseConfigVersion();
+  }
-
-    LOG.info("Using conf database at " + storeRoot);
-    File dbfile = new File(storeRoot.toString());
+  private DB initDatabaseHelper(File configurationFile, Options options,
+      Consumer<DB> initMethod) throws Exception {
+    DB database;
-      db = JniDBFactory.factory.open(dbfile, options);
+      database = JniDBFactory.factory.open(configurationFile, options);
-        LOG.info("Creating conf database at " + dbfile);
+        LOG.info("Creating configuration version/database at {}",
+            configurationFile);
-          db = JniDBFactory.factory.open(dbfile, options);
-          // Write the initial scheduler configuration
-          WriteBatch initBatch = db.createWriteBatch();
-          for (Map.Entry<String, String> kv : config) {
-            initBatch.put(bytes(kv.getKey()), bytes(kv.getValue()));
-          }
-          db.write(initBatch);
-          long configVersion = getConfigVersion() + 1L;
-          versiondb.put(bytes(CONF_VERSION_KEY),
-              bytes(String.valueOf(configVersion)));
+          database = JniDBFactory.factory.open(configurationFile, options);
+          initMethod.accept(database);
+
+    return database;
-    if (versiondb != null) {
-      versiondb.close();
+    if (versionDb != null) {
+      versionDb.close();
-      boolean isValid) throws IOException {
+      boolean isValid) {
-      long configVersion = getConfigVersion() + 1L;
-      versiondb.put(bytes(CONF_VERSION_KEY),
-          bytes(String.valueOf(configVersion)));
+      increaseConfigVersion();
+  // Because of type erasure casting to LinkedList<LogMutation> will be
+  // unchecked. A way around that would be to iterate over the logMutations
+  // which is overkill in this case.
+  @SuppressWarnings("unchecked")
+
+  private void increaseConfigVersion() {
+    long configVersion = getConfigVersion() + 1L;
+    versionDb.put(bytes(CONF_VERSION_KEY),
+        bytes(String.valueOf(configVersion)));
+  }
+
-    String version = new String(versiondb.get(bytes(CONF_VERSION_KEY)),
+    String version = new String(versionDb.get(bytes(CONF_VERSION_KEY)),
-  // TODO below was taken from LeveldbRMStateStore, it can probably be
-  // refactored
-      compactionTimer = new Timer(
+      Timer compactionTimer = new Timer(
-  // TODO: following is taken from LeveldbRMStateStore
-      LOG.info("Full compaction cycle completed in " + duration + " msec");
+      LOG.info("Full compaction cycle completed in {} msec", duration);

INS26 MOV23 INS40 INS31 INS31 INS31 INS31 INS43 MOV60 MOV60 MOV21 MOV21 INS83 INS39 INS42 INS44 MOV8 INS83 INS39 INS42 INS44 MOV8 INS83 INS43 INS42 INS44 INS44 INS44 INS43 INS8 INS79 INS83 INS39 INS42 INS8 UPD42 INS42 UPD42 INS21 MOV21 MOV21 INS43 INS42 INS43 INS42 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS42 INS60 INS54 INS41 INS42 INS45 MOV60 MOV21 INS7 INS42 INS42 UPD42 INS32 INS42 INS42 INS43 INS43 INS43 INS59 INS8 INS12 INS42 MOV43 INS22 INS42 UPD42 INS45 INS42 UPD42 UPD42 UPD42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS21 MOV44 INS8 UPD42 INS21 UPD42 INS60 INS52 INS42 UPD42 INS90 UPD42 UPD42 INS90 UPD42 INS7 INS25 INS32 MOV43 MOV43 INS59 INS45 INS42 INS52 INS42 INS52 INS42 INS42 INS32 MOV27 INS8 MOV8 UPD42 INS42 UPD42 INS42 MOV14 INS40 INS42 INS42 INS42 INS21 MOV21 INS54 INS32 INS8 MOV12 INS42 INS42 INS45 INS42 INS21 INS21 INS7 INS32 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS42 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL40 DEL8 DEL40 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL27 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL9 DEL32 DEL21 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL42 DEL53 DEL8 DEL25 DEL8 DEL12 DEL54 DEL45 DEL42 DEL27 DEL40 DEL8 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL54 DEL8 DEL25 DEL8 DEL12 DEL54 DEL42 DEL40 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL40 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL39 DEL42 DEL42 DEL32 DEL34 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL42 DEL43 DEL42 DEL7 DEL21 DEL45 DEL42 DEL45 DEL27