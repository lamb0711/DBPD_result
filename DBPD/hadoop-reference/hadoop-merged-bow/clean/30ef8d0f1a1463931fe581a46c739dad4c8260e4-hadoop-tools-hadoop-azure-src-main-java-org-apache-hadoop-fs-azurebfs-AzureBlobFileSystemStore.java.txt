HADOOP-17002. ABFS: Adding config to determine if the account is HNS enabled or not

Contributed by Bilahari T H.
+import org.apache.hadoop.fs.azurebfs.contracts.exceptions.TrileanConversionException;
+import org.apache.hadoop.fs.azurebfs.enums.Trilean;
-  private boolean isNamespaceEnabledSet;
-  private boolean isNamespaceEnabled;
+  private Trilean isNamespaceEnabled;
+    this.isNamespaceEnabled = abfsConfiguration.getIsNamespaceEnabledAccount();
+
-    if (!isNamespaceEnabledSet) {
-
-      LOG.debug("Get root ACL status");
-      try (AbfsPerfInfo perfInfo = startTracking("getIsNamespaceEnabled", "getAclStatus")) {
-        AbfsRestOperation op = client.getAclStatus(AbfsHttpConstants.FORWARD_SLASH + AbfsHttpConstants.ROOT_PATH);
-        perfInfo.registerResult(op.getResult());
-        isNamespaceEnabled = true;
-        perfInfo.registerSuccess(true);
-      } catch (AbfsRestOperationException ex) {
-        // Get ACL status is a HEAD request, its response doesn't contain errorCode
-        // So can only rely on its status code to determine its account type.
-        if (HttpURLConnection.HTTP_BAD_REQUEST != ex.getStatusCode()) {
-          throw ex;
-        }
-        isNamespaceEnabled = false;
-      }
-      isNamespaceEnabledSet = true;
+    try {
+      return this.isNamespaceEnabled.toBoolean();
+    } catch (TrileanConversionException e) {
+      LOG.debug("isNamespaceEnabled is UNKNOWN; fall back and determine through"
+          + " getAcl server call", e);
-    return isNamespaceEnabled;
+    LOG.debug("Get root ACL status");
+    try (AbfsPerfInfo perfInfo = startTracking("getIsNamespaceEnabled",
+        "getAclStatus")) {
+      AbfsRestOperation op = client.getAclStatus(
+          AbfsHttpConstants.FORWARD_SLASH + AbfsHttpConstants.ROOT_PATH);
+      perfInfo.registerResult(op.getResult());
+      isNamespaceEnabled = Trilean.getTrilean(true);
+      perfInfo.registerSuccess(true);
+    } catch (AbfsRestOperationException ex) {
+      // Get ACL status is a HEAD request, its response doesn't contain
+      // errorCode
+      // So can only rely on its status code to determine its account type.
+      if (HttpURLConnection.HTTP_BAD_REQUEST != ex.getStatusCode()) {
+        throw ex;
+      }
+
+      isNamespaceEnabled = Trilean.getTrilean(false);
+    }
+
+    return isNamespaceEnabled.toBoolean();
-}
+
+  @VisibleForTesting
+  void setClient(AbfsClient client) {
+    this.client = client;
+  }
+
+  @VisibleForTesting
+  void setNamespaceEnabled(Trilean isNamespaceEnabled){
+    this.isNamespaceEnabled = isNamespaceEnabled;
+  }
+
+}

INS26 INS26 INS40 INS40 INS23 INS31 INS31 MOV83 INS43 MOV59 MOV8 INS78 INS39 INS42 INS44 INS8 INS78 INS39 INS42 INS44 INS8 INS42 INS21 INS54 INS41 INS42 INS43 INS42 INS21 INS42 INS43 INS42 INS21 INS7 INS8 INS12 INS32 INS42 INS7 INS42 INS7 INS22 INS32 INS41 INS44 INS8 INS42 INS42 INS22 INS42 INS22 INS42 INS52 INS42 INS42 INS42 INS32 INS43 INS42 MOV21 INS52 INS42 INS52 INS42 INS22 INS42 INS42 INS32 INS32 INS52 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS9 INS32 INS45 INS45 INS42 INS42 INS9 DEL39 DEL42 DEL59 DEL23 DEL83 DEL39 DEL23 DEL42 DEL9 DEL7 DEL9 DEL9 DEL42 DEL38 DEL25 DEL42 DEL41 DEL8