HDFS-4103. Support O(1) snapshot creation.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1424782 13f79535-47bb-0310-9956-ffa450edef68

-   * @return a PermissionChecker object which caches data for later use.
+      final Snapshot snapshot = inodesInPath.getPathSnapshot();
-      checkTraverse(inodes, ancestorIndex);
+      checkTraverse(inodes, ancestorIndex, snapshot);
+      final INode last = inodes[inodes.length - 1];
-          && inodes.length > 1 && inodes[inodes.length - 1] != null) {
-        checkStickyBit(inodes[inodes.length - 2], inodes[inodes.length - 1]);
+          && inodes.length > 1 && last != null) {
+        checkStickyBit(inodes[inodes.length - 2], last, snapshot);
-        check(inodes, ancestorIndex, ancestorAccess);
+        check(inodes, ancestorIndex, snapshot, ancestorAccess);
-        check(inodes, inodes.length - 2, parentAccess);
+        check(inodes, inodes.length - 2, snapshot, parentAccess);
-        check(inodes[inodes.length - 1], access);
+        check(last, snapshot, access);
-        final Snapshot s = inodesInPath.getPathSnapshot();
-        checkSubAccess(inodes[inodes.length - 1], s, subAccess);
+        checkSubAccess(last, snapshot, subAccess);
-        checkOwner(inodes[inodes.length - 1]);
+        checkOwner(last, snapshot);
-  private void checkOwner(INode inode) throws AccessControlException {
-    if (inode != null && user.equals(inode.getUserName())) {
+  private void checkOwner(INode inode, Snapshot snapshot
+      ) throws AccessControlException {
+    if (inode != null && user.equals(inode.getUserName(snapshot))) {
-  private void checkTraverse(INode[] inodes, int last
+  private void checkTraverse(INode[] inodes, int last, Snapshot snapshot
-      check(inodes[j], FsAction.EXECUTE);
+      check(inodes[j], snapshot, FsAction.EXECUTE);
-      check(d, access);
+      check(d, snapshot, access);
-  private void check(INode[] inodes, int i, FsAction access
+  private void check(INode[] inodes, int i, Snapshot snapshot, FsAction access
-    check(i >= 0? inodes[i]: null, access);
+    check(i >= 0? inodes[i]: null, snapshot, access);
-  private void check(INode inode, FsAction access
+  private void check(INode inode, Snapshot snapshot, FsAction access
-    FsPermission mode = inode.getFsPermission();
+    FsPermission mode = inode.getFsPermission(snapshot);
-    if (user.equals(inode.getUserName())) { //user class
+    if (user.equals(inode.getUserName(snapshot))) { //user class
-    else if (groups.contains(inode.getGroupName())) { //group class
+    else if (groups.contains(inode.getGroupName(snapshot))) { //group class
-  private void checkStickyBit(INode parent, INode inode) throws AccessControlException {
-    if(!parent.getFsPermission().getStickyBit()) {
+  private void checkStickyBit(INode parent, INode inode, Snapshot snapshot
+      ) throws AccessControlException {
+    if(!parent.getFsPermission(snapshot).getStickyBit()) {
-    if(parent.getUserName().equals(user)) {
+    if(parent.getUserName(snapshot).equals(user)) {
-    if(inode.getUserName().equals(user)) {
+    if(inode.getUserName(snapshot).equals(user)) {

INS44 INS44 INS44 INS44 INS44 MOV60 INS60 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS83 INS43 INS59 INS42 INS42 INS42 INS42 INS42 MOV8 MOV8 UPD42 INS42 INS42 INS42 MOV2 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL66 DEL65 DEL42 DEL40 DEL34 DEL27 DEL2 DEL42 DEL40 DEL34 DEL27 DEL2 DEL42 DEL40 DEL34 DEL27 DEL2 DEL42 DEL40 DEL34 DEL27 DEL2