HDDS-1. Remove SCM Block DB. Contributed by Xiaoyu Yao.

-import com.google.common.base.Strings;
-   * @param containerName - Name
-  public Pipeline allocateContainer(HddsProtos.ReplicationType type,
-      HddsProtos.ReplicationFactor factor, String
-      containerName, String owner) throws IOException {
+  public ContainerInfo allocateContainer(HddsProtos.ReplicationType type,
+      HddsProtos.ReplicationFactor factor, String owner) throws IOException {
-    Preconditions.checkNotNull(containerName, "Container Name cannot be Null");
-    Preconditions.checkState(!containerName.isEmpty(), "Container name cannot" +
-        " be empty");
-        .setContainerName(containerName)
-    return Pipeline.getFromProtoBuf(response.getPipeline());
+    return ContainerInfo.fromProtobuf(response.getContainerInfo());
-  public Pipeline getContainer(String containerName) throws IOException {
-    Preconditions.checkNotNull(containerName,
-        "Container Name cannot be Null");
-    Preconditions.checkState(!containerName.isEmpty(),
-        "Container name cannot be empty");
+  public ContainerInfo getContainer(long containerID) throws IOException {
+    Preconditions.checkState(containerID >= 0,
+        "Container ID cannot be negative");
-        .setContainerName(containerName)
+        .setContainerID(containerID)
-      return Pipeline.getFromProtoBuf(response.getPipeline());
+      return ContainerInfo.fromProtobuf(response.getContainerInfo());
-  public List<ContainerInfo> listContainer(String startName, String prefixName,
-      int count) throws IOException {
+  public List<ContainerInfo> listContainer(long startContainerID, int count)
+      throws IOException {
+    Preconditions.checkState(startContainerID >= 0,
+        "Container ID cannot be negative.");
+    Preconditions.checkState(count > 0,
+        "Container count must be greater than 0.");
-    if (prefixName != null) {
-      builder.setPrefixName(prefixName);
-    }
-    if (startName != null) {
-      builder.setStartName(startName);
-    }
+    builder.setStartContainerID(startContainerID);
-   * @param containerName
+   * @param containerID
-  public void deleteContainer(String containerName)
+  public void deleteContainer(long containerID)
-    Preconditions.checkState(!Strings.isNullOrEmpty(containerName),
-        "Container name cannot be null or empty");
+    Preconditions.checkState(containerID >= 0,
+        "Container ID cannot be negative");
-        .setContainerName(containerName)
+        .setContainerID(containerID)
-   * @param name object name
+   * @param id object id
-      ObjectStageChangeRequestProto.Type type, String name,
+      ObjectStageChangeRequestProto.Type type, long id,
-    Preconditions.checkState(!Strings.isNullOrEmpty(name),
-        "Object name cannot be null or empty");
+    Preconditions.checkState(id >= 0,
+        "Object id cannot be negative.");
-            .setName(name)
+            .setId(id)

UPD43 UPD43 UPD42 UPD42 INS39 UPD42 INS39 UPD42 INS21 MOV21 MOV21 INS39 UPD42 INS39 INS42 INS32 UPD42 UPD42 UPD66 MOV32 UPD42 UPD42 INS27 UPD45 INS42 INS42 INS27 INS45 UPD42 UPD42 INS27 INS45 UPD42 UPD42 INS27 UPD45 INS27 UPD45 UPD42 UPD42 INS42 INS34 UPD42 MOV42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL38 DEL45 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL8 DEL25 DEL42 DEL33 DEL27 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL38