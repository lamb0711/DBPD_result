YARN-41. The RM should handle the graceful shutdown of the NM. Contributed by Devaraj K.

+import org.apache.hadoop.yarn.server.api.protocolrecords.UnRegisterNodeManagerRequest;
+import org.apache.hadoop.yarn.server.api.protocolrecords.UnRegisterNodeManagerResponse;
+  @SuppressWarnings("unchecked")
+  @Override
+  public UnRegisterNodeManagerResponse unRegisterNodeManager(
+      UnRegisterNodeManagerRequest request) throws YarnException, IOException {
+    UnRegisterNodeManagerResponse response = recordFactory
+        .newRecordInstance(UnRegisterNodeManagerResponse.class);
+    NodeId nodeId = request.getNodeId();
+    RMNode rmNode = this.rmContext.getRMNodes().get(nodeId);
+    if (rmNode == null) {
+      LOG.info("Node not found, ignoring the unregister from node id : "
+          + nodeId);
+      return response;
+    }
+    LOG.info("Node with node id : " + nodeId
+        + " has shutdown, hence unregistering the node.");
+    this.nmLivelinessMonitor.unregister(nodeId);
+    this.rmContext.getDispatcher().getEventHandler()
+        .handle(new RMNodeEvent(nodeId, RMNodeEventType.SHUTDOWN));
+    return response;
+  }
+

INS26 INS26 INS40 INS40 INS31 INS79 INS78 INS83 INS43 INS42 INS44 INS43 INS43 INS8 INS42 INS45 INS42 INS42 INS43 INS42 INS42 INS42 INS60 INS60 INS60 INS25 INS21 INS21 INS21 INS41 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS27 INS8 INS32 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS41 INS42 INS42 INS27 INS22 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS57 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS45 INS42 INS45 INS52 INS42 INS32 INS42 INS43 INS42 INS40 INS43 INS22 INS42 INS42 INS42 INS27 INS22 INS42 INS42 INS42 INS52 INS42 INS45 INS42 INS52 INS42