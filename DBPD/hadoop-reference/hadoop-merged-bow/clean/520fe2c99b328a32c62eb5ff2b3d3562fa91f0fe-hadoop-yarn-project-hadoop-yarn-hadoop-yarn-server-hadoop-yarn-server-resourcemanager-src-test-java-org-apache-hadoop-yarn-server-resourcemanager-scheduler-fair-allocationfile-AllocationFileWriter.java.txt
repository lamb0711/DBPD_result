YARN-5106. Provide a builder interface for FairScheduler allocations for use in tests. Contributed by Adam Antal

-import java.io.FileWriter;
-import java.util.function.Supplier;
+  private static final String DRF = "drf";
+  private static final String FAIR = "fair";
+  private static final String FIFO = "fifo";
+
+  private boolean useLegacyTagNameForQueues = false;
+  private String reservationAgent;
+  private String reservationPolicy;
+  private AllocationFileQueuePlacementPolicy queuePlacementPolicy;
-  public AllocationFileSimpleQueueBuilder queue(String queueName) {
-    return new AllocationFileSimpleQueueBuilder(this, queueName);
+  public AllocationFileWriter addQueue(AllocationFileQueue queue) {
+    queues.add(queue);
+    return this;
+  public AllocationFileWriter disableQueueMaxAMShareDefault() {
+    this.queueMaxAMShareDefault = -1.0d;
+    return this;
+  }
+
-  public AllocationFileWriter defaultQueueSchedulingPolicy(String value) {
-    this.defaultQueueSchedulingPolicy = value;
+  public AllocationFileWriter drfDefaultQueueSchedulingPolicy() {
+    this.defaultQueueSchedulingPolicy = DRF;
-  public UserSettings.Builder userSettings(String username) {
-    return new UserSettings.Builder(this, username);
+  public AllocationFileWriter fairDefaultQueueSchedulingPolicy() {
+    this.defaultQueueSchedulingPolicy = FAIR;
+    return this;
-  void addQueue(AllocationFileQueue queue) {
-    this.queues.add(queue);
+  public AllocationFileWriter fifoDefaultQueueSchedulingPolicy() {
+    this.defaultQueueSchedulingPolicy = FIFO;
+    return this;
-  void setUserSettings(UserSettings userSettings) {
-    this.userSettings = userSettings;
+  public AllocationFileWriter useLegacyTagNameForQueues() {
+    this.useLegacyTagNameForQueues = true;
+    return this;
-  static void printQueues(PrintWriter pw, List<AllocationFileQueue> queues) {
+  public AllocationFileWriter reservationAgent(String value) {
+    this.reservationAgent = value;
+    return this;
+  }
+
+  public AllocationFileWriter reservationPolicy(String value) {
+    this.reservationPolicy = value;
+    return this;
+  }
+
+  public AllocationFileWriter userSettings(UserSettings settings) {
+    this.userSettings = settings;
+    return this;
+  }
+
+  public AllocationFileWriter queuePlacementPolicy(
+      AllocationFileQueuePlacementPolicy policy) {
+    this.queuePlacementPolicy = policy;
+    return this;
+  }
+
+  static void printQueues(PrintWriter pw, List<AllocationFileQueue> queues,
+      boolean useLegacyTagName) {
-      pw.println(queue.render());
+      final String queueStr;
+      if (useLegacyTagName) {
+        queueStr = queue.renderWithLegacyTag();
+      } else {
+        queueStr = queue.render();
+      }
+      pw.println(queueStr);
-  static void addIfPresent(PrintWriter pw, String tag,
-      Supplier<String> supplier) {
-    if (supplier.get() != null) {
-      pw.println("<" + tag + ">" + supplier.get() + "</" + tag + ">");
-    }
+  private void printQueuePlacementPolicy(PrintWriter pw) {
+    pw.println(queuePlacementPolicy.render());
-  static String createNumberSupplier(Object number) {
-    if (number != null) {
-      return number.toString();
+  static void addIfPresent(PrintWriter pw, String tag, Object obj) {
+    if (obj != null) {
+      pw.println("<" + tag + ">" + obj.toString() + "</" + tag + ">");
-    return null;
-    pw.println("<?xml version=\"1.0\"?>");
+    pw.println("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
-      pw = new PrintWriter(new FileWriter(filename));
+      pw = new PrintWriter(filename, "UTF-8");
-      printQueues(pw, queues);
+      printQueues(pw, queues, useLegacyTagNameForQueues);
-    addIfPresent(pw, "queueMaxAppsDefault",
-        () -> createNumberSupplier(queueMaxAppsDefault));
-    addIfPresent(pw, "queueMaxResourcesDefault",
-        () -> queueMaxResourcesDefault);
-    addIfPresent(pw, "userMaxAppsDefault",
-        () -> createNumberSupplier(userMaxAppsDefault));
-    addIfPresent(pw, "queueMaxAMShareDefault",
-        () -> createNumberSupplier(queueMaxAMShareDefault));
+    if (queuePlacementPolicy != null) {
+      printQueuePlacementPolicy(pw);
+    }
+
+    addIfPresent(pw, "queueMaxAppsDefault", queueMaxAppsDefault);
+    addIfPresent(pw, "queueMaxResourcesDefault", queueMaxResourcesDefault);
+    addIfPresent(pw, "userMaxAppsDefault", userMaxAppsDefault);
+    addIfPresent(pw, "queueMaxAMShareDefault", queueMaxAMShareDefault);
-        () -> createNumberSupplier(defaultMinSharePreemptionTimeout));
+        defaultMinSharePreemptionTimeout);
-        () -> createNumberSupplier(defaultFairSharePreemptionTimeout));
+        defaultFairSharePreemptionTimeout);
-        () -> createNumberSupplier(defaultFairSharePreemptionThreshold));
+        defaultFairSharePreemptionThreshold);
-        () -> defaultQueueSchedulingPolicy);
+        defaultQueueSchedulingPolicy);
+    addIfPresent(pw, "reservation-agent", reservationAgent);
+    addIfPresent(pw, "reservation-policy", reservationPolicy);
+

MOV31 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 MOV43 INS59 INS83 INS39 INS59 INS83 MOV43 INS59 INS83 MOV43 INS59 INS83 INS43 INS59 MOV83 UPD43 MOV43 INS42 MOV44 INS8 INS83 MOV43 INS42 INS8 INS43 UPD42 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS43 INS42 MOV44 INS8 UPD43 UPD42 INS83 INS43 UPD42 INS83 INS43 INS42 INS44 INS8 INS44 INS83 UPD42 INS44 MOV44 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS45 INS42 INS9 INS42 INS42 INS42 INS42 UPD42 INS21 INS41 INS21 MOV41 INS42 INS41 UPD42 MOV42 INS21 INS41 INS42 INS21 INS41 INS42 INS21 INS41 INS42 INS21 INS41 INS42 INS43 UPD42 INS21 INS41 INS42 UPD42 INS41 INS42 INS43 INS42 INS21 INS41 INS39 INS42 INS43 INS42 UPD42 INS25 INS21 INS21 INS32 INS52 INS7 INS52 INS7 INS52 INS7 INS52 INS7 INS52 INS7 INS52 INS42 INS7 INS52 INS52 INS42 INS7 INS52 INS8 INS42 INS27 INS8 INS32 INS32 INS42 INS42 INS42 INS22 INS38 UPD42 INS22 INS42 INS22 INS42 INS22 INS9 INS22 INS42 INS22 INS42 UPD42 INS22 INS42 INS60 INS25 INS21 INS42 UPD42 INS32 INS42 UPD45 INS42 INS33 INS21 MOV42 INS42 MOV42 MOV42 MOV42 MOV42 MOV42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS52 INS42 INS34 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS83 MOV43 INS59 INS42 INS8 MOV8 INS32 UPD42 MOV42 INS42 INS32 INS42 INS21 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS7 INS7 MOV43 MOV42 INS45 INS42 INS32 INS42 MOV32 UPD42 UPD42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL44 DEL43 DEL52 DEL42 DEL14 DEL41 DEL8 DEL31 DEL40 DEL40 DEL43 DEL52 DEL42 DEL14 DEL41 DEL39 DEL42 DEL42 DEL32 DEL52 DEL42 DEL22 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL32 DEL83 DEL42 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL33 DEL41 DEL8 DEL31 DEL42 DEL43 DEL14 DEL14 DEL42 DEL32 DEL86 DEL42 DEL86 DEL42 DEL32 DEL86 DEL42 DEL32 DEL86 DEL42 DEL32 DEL86 DEL42 DEL32 DEL86 DEL42 DEL32 DEL86 DEL42 DEL86