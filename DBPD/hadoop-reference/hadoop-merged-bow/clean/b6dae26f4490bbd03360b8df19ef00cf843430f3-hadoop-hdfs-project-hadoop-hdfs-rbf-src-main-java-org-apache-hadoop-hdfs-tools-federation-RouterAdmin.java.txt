HDFS-13478. RBF: Disabled Nameservice store API. Contributed by Inigo Goiri.

-import org.apache.hadoop.hdfs.server.federation.router.RouterClient;
+import org.apache.hadoop.hdfs.server.federation.router.NameserviceManager;
+import org.apache.hadoop.hdfs.server.federation.router.RouterClient;
+import org.apache.hadoop.hdfs.server.federation.store.protocol.DisableNameserviceRequest;
+import org.apache.hadoop.hdfs.server.federation.store.protocol.DisableNameserviceResponse;
+import org.apache.hadoop.hdfs.server.federation.store.protocol.EnableNameserviceRequest;
+import org.apache.hadoop.hdfs.server.federation.store.protocol.EnableNameserviceResponse;
+import org.apache.hadoop.hdfs.server.federation.store.protocol.GetDisabledNameservicesRequest;
+import org.apache.hadoop.hdfs.server.federation.store.protocol.GetDisabledNameservicesResponse;
-        + "\t[-safemode enter | leave | get]\n";
+        + "\t[-safemode enter | leave | get]\n"
+        + "\t[-nameservice enable | disable <nameservice>]\n"
+        + "\t[-getDisabledNameservices]\n";
+    } else if ("-nameservice".equalsIgnoreCase(cmd)) {
+      if (argv.length < 3) {
+        System.err.println("Not enough parameters specificed for cmd " + cmd);
+        printUsage();
+        return exitCode;
+      }
+      } else if ("-nameservice".equals(cmd)) {
+        String subcmd = argv[i];
+        String nsId = argv[i + 1];
+        manageNameservice(subcmd, nsId);
+      } else if ("-getDisabledNameservices".equals(cmd)) {
+        getDisabledNameservices();
+   * Manage the name service: enabling/disabling.
+   * @param cmd Input command, disable or enable.
+   * @throws IOException
+   */
+  private void manageNameservice(String cmd, String nsId) throws IOException {
+    if (cmd.equals("enable")) {
+      if (enableNameservice(nsId)) {
+        System.out.println("Successfully enabled nameservice " + nsId);
+      } else {
+        System.err.println("Cannot enable " + nsId);
+      }
+    } else if (cmd.equals("disable")) {
+      if (disableNameservice(nsId)) {
+        System.out.println("Successfully disabled nameservice " + nsId);
+      } else {
+        System.err.println("Cannot disable " + nsId);
+      }
+    } else {
+      throw new IllegalArgumentException("Unknown command: " + cmd);
+    }
+  }
+
+  private boolean disableNameservice(String nsId) throws IOException {
+    NameserviceManager nameserviceManager = client.getNameserviceManager();
+    DisableNameserviceResponse response =
+        nameserviceManager.disableNameservice(
+            DisableNameserviceRequest.newInstance(nsId));
+    return response.getStatus();
+  }
+
+  private boolean enableNameservice(String nsId) throws IOException {
+    NameserviceManager nameserviceManager = client.getNameserviceManager();
+    EnableNameserviceResponse response =
+        nameserviceManager.enableNameservice(
+            EnableNameserviceRequest.newInstance(nsId));
+    return response.getStatus();
+  }
+
+  private void getDisabledNameservices() throws IOException {
+    NameserviceManager nameserviceManager = client.getNameserviceManager();
+    GetDisabledNameservicesRequest request =
+        GetDisabledNameservicesRequest.newInstance();
+    GetDisabledNameservicesResponse response =
+        nameserviceManager.getDisabledNameservices(request);
+    System.out.println("List of disabled nameservices:");
+    for (String nsId : response.getNameservices()) {
+      System.out.println(nsId);
+    }
+  }
+
+  /**

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS29 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS83 INS39 INS42 INS43 INS8 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS42 INS25 INS43 INS42 INS42 INS60 INS60 INS41 INS43 INS42 INS42 INS60 INS60 INS41 INS42 INS60 INS60 INS60 INS21 INS70 INS66 INS42 INS66 INS42 INS42 INS42 INS32 INS8 INS25 INS42 INS43 INS59 INS43 INS59 INS32 INS42 INS43 INS59 INS43 INS59 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS44 INS32 INS8 INS42 INS42 INS45 INS25 INS32 INS8 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS40 INS42 INS45 INS43 INS42 INS42 INS42 INS21 INS45 INS45 INS32 INS8 INS8 INS42 INS42 INS45 INS25 INS53 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS21 INS21 INS32 INS8 INS8 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS25 INS32 INS32 INS42 INS42 INS21 INS21 INS43 INS27 INS32 INS8 INS40 INS42 INS27 INS40 INS42 INS27 INS32 INS32 INS42 INS45 INS42 INS45 INS42 INS42 INS25 INS45 INS42 INS45 INS42 INS40 INS42 INS27 INS40 INS42 INS27 INS27 INS8 INS25 INS45 INS42 INS45 INS42 INS40 INS34 INS21 INS21 INS41 INS32 INS8 INS25 INS32 INS32 INS42 INS45 INS42 INS42 INS60 INS60 INS21 INS32 INS8 MOV8 INS40 INS42 INS27 INS42 INS43 INS59 INS43 INS59 INS32 INS45 INS42 INS42 INS21 INS45 INS42 INS42 INS42 INS2 INS42 INS42 INS2 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS27 INS42 INS42 INS34