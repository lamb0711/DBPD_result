YARN-5602. Utils for Federation State and Policy Store. (Giovanni Matteo Fumarola via Subru).

(cherry picked from commit 326a2e6bde1cf266ecc7d3b513cdaac6abcebbe4)

+import org.apache.hadoop.yarn.server.federation.store.exception.FederationStateStoreErrorCode;
+import org.apache.hadoop.yarn.server.federation.store.utils.FederationStateStoreUtils;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+  public static final Logger LOG =
+      LoggerFactory.getLogger(MemoryFederationStateStore.class);
+
-    membership.put(subClusterInfo.getSubClusterId(), subClusterInfo);
+
+    SubClusterInfo subClusterInfoToSave =
+        SubClusterInfo.newInstance(subClusterInfo.getSubClusterId(),
+            subClusterInfo.getAMRMServiceAddress(),
+            subClusterInfo.getClientRMServiceAddress(),
+            subClusterInfo.getRMAdminServiceAddress(),
+            subClusterInfo.getRMWebServiceAddress(), clock.getTime(),
+            subClusterInfo.getState(), subClusterInfo.getLastStartTime(),
+            subClusterInfo.getCapability());
+
+    membership.put(subClusterInfo.getSubClusterId(), subClusterInfoToSave);
-      throw new YarnException(
-          "SubCluster " + request.getSubClusterId().toString() + " not found");
+      String errMsg =
+          "SubCluster " + request.getSubClusterId().toString() + " not found";
+      FederationStateStoreUtils.logAndThrowStoreException(LOG,
+          FederationStateStoreErrorCode.MEMBERSHIP_UPDATE_DEREGISTER_FAIL,
+          errMsg);
-      throw new YarnException("Subcluster " + subClusterId.toString()
-          + " does not exist; cannot heartbeat");
+      String errMsg = "Subcluster " + subClusterId.toString()
+          + " does not exist; cannot heartbeat";
+      FederationStateStoreUtils.logAndThrowStoreException(LOG,
+          FederationStateStoreErrorCode.MEMBERSHIP_UPDATE_HEARTBEAT_FAIL,
+          errMsg);
-      throw new YarnException(
-          "Subcluster " + subClusterId.toString() + " does not exist");
+      String errMsg =
+          "Subcluster " + subClusterId.toString() + " does not exist";
+      FederationStateStoreUtils.logAndThrowStoreException(LOG,
+          FederationStateStoreErrorCode.MEMBERSHIP_SINGLE_SELECT_FAIL, errMsg);
-      throw new YarnException("Application " + appId + " does not exist");
+      String errMsg = "Application " + appId + " does not exist";
+      FederationStateStoreUtils.logAndThrowStoreException(LOG,
+          FederationStateStoreErrorCode.APPLICATIONS_UPDATE_FAIL, errMsg);
-      throw new YarnException("Application " + appId + " does not exist");
+      String errMsg = "Application " + appId + " does not exist";
+      FederationStateStoreUtils.logAndThrowStoreException(LOG,
+          FederationStateStoreErrorCode.APPLICATIONS_SINGLE_SELECT_FAIL,
+          errMsg);
-      throw new YarnException("Application " + appId + " does not exist");
+      String errMsg = "Application " + appId + " does not exist";
+      FederationStateStoreUtils.logAndThrowStoreException(LOG,
+          FederationStateStoreErrorCode.APPLICATIONS_DELETE_FAIL, errMsg);
-      throw new YarnException("Policy for queue " + queue + " does not exist");
+      String errMsg = "Policy for queue " + queue + " does not exist";
+      FederationStateStoreUtils.logAndThrowStoreException(LOG,
+          FederationStateStoreErrorCode.POLICY_SINGLE_SELECT_FAIL, errMsg);

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS83 INS83 INS83 INS43 INS59 INS42 INS42 INS32 INS60 INS25 MOV25 INS42 INS42 INS57 INS43 INS59 INS38 INS8 MOV38 INS43 INS42 INS42 INS32 INS32 INS42 INS60 INS21 INS60 INS21 INS60 INS21 INS32 INS60 INS21 INS60 INS21 INS60 INS21 INS60 INS21 INS42 INS42 INS42 MOV32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 MOV42 INS42 INS43 INS59 INS32 INS43 INS59 INS32 INS43 INS59 INS32 INS42 INS42 INS42 INS43 INS59 INS32 MOV42 MOV42 INS43 INS59 INS32 INS43 INS59 INS32 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 MOV27 INS42 INS42 INS42 INS40 INS42 UPD42 MOV42 INS42 MOV27 INS42 INS42 INS42 INS40 INS42 UPD42 MOV42 INS42 MOV27 INS42 INS42 INS42 INS40 INS42 INS42 INS42 MOV27 INS42 INS42 INS42 INS40 INS42 UPD42 MOV42 INS42 MOV27 INS42 INS42 INS42 INS40 INS42 UPD42 MOV42 INS42 MOV27 INS42 INS42 INS42 INS40 INS42 UPD42 MOV42 INS42 MOV27 INS42 INS42 INS42 INS40 INS42 INS45 INS42 INS45 MOV45 MOV42 MOV45 DEL43 DEL14 DEL53 DEL43 DEL14 DEL53 DEL43 DEL14 DEL53 DEL43 DEL14 DEL53 DEL43 DEL14 DEL53 DEL42 DEL43 DEL14 DEL53 DEL8 DEL25 DEL43 DEL14 DEL53