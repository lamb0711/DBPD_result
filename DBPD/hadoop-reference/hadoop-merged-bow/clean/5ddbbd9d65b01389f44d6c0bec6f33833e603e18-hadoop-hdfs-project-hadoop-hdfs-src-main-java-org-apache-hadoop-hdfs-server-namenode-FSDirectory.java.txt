HDFS-4520. Support listing snapshots under a snapshottable directory using ls.  Contributed by Jing Zhao


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1449862 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.namenode.snapshot.Snapshot.Root;
+      if (srcs.endsWith(Path.SEPARATOR + HdfsConstants.DOT_SNAPSHOT_DIR)) {
+        return getSnapshotsListing(srcs, startAfter);
+      }
+  
+  /**
+   * Get a listing of all the snapshots of a snapshottable directory
+   */
+  private DirectoryListing getSnapshotsListing(String src, byte[] startAfter)
+      throws UnresolvedLinkException, IOException {
+    assert hasReadLock();
+    final String dotSnapshot = Path.SEPARATOR + HdfsConstants.DOT_SNAPSHOT_DIR;
+    Preconditions.checkArgument(src.endsWith(dotSnapshot), 
+        src + " does not end with " + dotSnapshot);
+    
+    final String dirPath = normalizePath(src.substring(0,
+        src.length() - HdfsConstants.DOT_SNAPSHOT_DIR.length()));
+    
+    final INode node = this.getINode(dirPath);
+    final INodeDirectorySnapshottable dirNode = INodeDirectorySnapshottable
+        .valueOf(node, dirPath);
+    final ReadOnlyList<Snapshot> snapshots = dirNode.getSnapshotList();
+    int skipSize = ReadOnlyList.Util.binarySearch(snapshots, startAfter);
+    skipSize = skipSize < 0 ? -skipSize - 1 : skipSize + 1;
+    int numOfListing = Math.min(snapshots.size() - skipSize, this.lsLimit);
+    final HdfsFileStatus listing[] = new HdfsFileStatus[numOfListing];
+    for (int i = 0; i < numOfListing; i++) {
+      Root sRoot = snapshots.get(i + skipSize).getRoot();
+      listing[i] = createFileStatus(sRoot.getLocalNameBytes(), sRoot, null);
+    }
+    return new DirectoryListing(
+        listing, snapshots.size() - skipSize - numOfListing);
+  }
+      if (srcs.endsWith(Path.SEPARATOR + HdfsConstants.DOT_SNAPSHOT_DIR)) {
+        return getFileInfo4DotSnapshot(srcs);
+      }
+  
+  private HdfsFileStatus getFileInfo4DotSnapshot(String src)
+      throws UnresolvedLinkException {
+    final String dotSnapshot = Path.SEPARATOR + HdfsConstants.DOT_SNAPSHOT_DIR;
+    Preconditions.checkArgument(src.endsWith(dotSnapshot), 
+        src + " does not end with " + dotSnapshot);
+    
+    final String dirPath = normalizePath(src.substring(0,
+        src.length() - HdfsConstants.DOT_SNAPSHOT_DIR.length()));
+    
+    final INode node = this.getINode(dirPath);
+    if (node instanceof INodeDirectorySnapshottable) {
+      return new HdfsFileStatus(0, true, 0, 0, 0, 0, null, null, null, null,
+          HdfsFileStatus.EMPTY_NAME, -1L);
+    }
+    return null;
+  }

INS26 INS40 INS31 INS31 INS29 INS83 INS43 INS42 INS44 INS44 INS43 INS43 INS8 INS83 INS43 INS42 INS44 INS43 INS8 INS65 INS42 INS43 INS42 INS5 INS42 INS42 INS42 INS6 INS60 INS21 INS60 INS60 INS60 INS60 INS60 INS21 INS60 INS60 INS24 INS41 INS42 INS43 INS42 INS42 INS60 INS21 INS60 INS60 INS25 INS41 INS66 INS42 INS39 INS85 INS32 INS83 INS43 INS59 INS32 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS74 INS59 INS39 INS59 INS7 INS39 INS59 INS83 INS43 INS59 INS58 INS27 INS37 INS8 INS14 INS42 INS83 INS43 INS59 INS32 INS83 INS43 INS59 INS83 INS43 INS59 INS62 INS8 INS33 INS25 INS42 INS42 INS42 INS27 INS42 INS42 INS32 INS27 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS42 INS32 INS42 INS16 INS42 INS32 INS42 INS42 INS85 INS3 INS39 INS59 INS42 INS42 INS42 INS60 INS21 INS43 INS42 INS27 INS25 INS42 INS42 INS27 INS42 INS42 INS32 INS27 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS43 INS41 INS32 INS8 INS40 INS40 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS27 INS27 INS27 INS42 INS42 INS27 INS22 INS5 INS42 INS42 INS34 INS43 INS59 INS7 INS42 INS32 INS42 INS42 INS32 INS8 INS40 INS40 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS52 INS42 INS42 INS42 INS14 INS42 INS42 INS27 INS41 INS42 INS42 INS34 INS27 INS42 INS34 INS38 INS34 INS42 INS34 INS32 INS42 INS52 INS42 INS43 INS85 INS42 INS42 INS32 INS2 INS32 INS42 INS42 INS42 INS42 INS27 INS41 INS42 INS42 INS34 INS27 INS43 INS34 INS9 INS34 INS34 INS34 INS34 INS33 INS33 INS33 INS33 INS40 INS38 INS40 INS40 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS40 INS40 INS32 INS32 INS32 INS42 INS34 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42