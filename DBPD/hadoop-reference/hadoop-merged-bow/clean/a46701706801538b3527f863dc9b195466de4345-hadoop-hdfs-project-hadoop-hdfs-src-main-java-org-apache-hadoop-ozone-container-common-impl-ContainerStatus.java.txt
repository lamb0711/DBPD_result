HDFS-12411. Ozone: Add container usage information to DN container report. Contributed by Xiaoyu Yao.

+import java.util.concurrent.atomic.AtomicLong;
+
- * This is an immutable class that represents the state of a container. if the
+ * This class represents the state of a container. if the
+  private AtomicLong readBytes;
+
+  private AtomicLong writeBytes;
+
+  private AtomicLong readCount;
+
+  private AtomicLong writeCount;
+
+    this.readCount = new AtomicLong(0L);
+    this.readBytes =  new AtomicLong(0L);
+    this.writeCount =  new AtomicLong(0L);
+    this.writeBytes =  new AtomicLong(0L);
+
+  /**
+   * Get the number of bytes read from the container.
+   * @return the number of bytes read from the container.
+   */
+  public long getReadBytes() {
+    return readBytes.get();
+  }
+
+  /**
+   * Increase the number of bytes read from the container.
+   * @param bytes number of bytes read.
+   */
+  public void incrReadBytes(long bytes) {
+    this.readBytes.addAndGet(bytes);
+  }
+
+  /**
+   * Get the number of times the container is read.
+   * @return the number of times the container is read.
+   */
+  public long getReadCount() {
+    return readCount.get();
+  }
+
+  /**
+   * Increase the number of container read count by 1.
+   */
+  public void incrReadCount() {
+    this.readCount.incrementAndGet();
+  }
+
+  /**
+   * Get the number of bytes write into the container.
+   * @return the number of bytes write into the container.
+   */
+  public long getWriteBytes() {
+    return writeBytes.get();
+  }
+
+  /**
+   * Increase the number of bytes write into the container.
+   * @param bytes the number of bytes write into the container.
+   */
+  public void incrWriteBytes(long bytes) {
+    this.writeBytes.addAndGet(bytes);
+  }
+
+  /**
+   * Get the number of writes into the container.
+   * @return the number of writes into the container.
+   */
+  public long getWriteCount() {
+    return writeCount.get();
+  }
+
+  /**
+   * Increase the number of writes into the container by 1.
+   */
+  public void incrWriteCount() {
+    this.writeCount.incrementAndGet();
+  }
+
+  /**
+   * Get the number of bytes used by the container.
+   * @return the number of bytes used by the container.
+   */
+  public long getBytesUsed() {
+    return containerData.getBytesUsed();
+  }
+
+  /**
+   * Increase the number of bytes used by the container.
+   * @param used number of bytes used by the container.
+   * @return the current number of bytes used by the container afert increase.
+   */
+  public long incrBytesUsed(long used) {
+    return containerData.addBytesUsed(used);
+  }
+
+  /**
+   * Set the number of bytes used by the container.
+   * @param used the number of bytes used by the container.
+   */
+  public void setBytesUsed(long used) {
+    containerData.setBytesUsed(used);
+  }
+
+  /**
+   * Decrease the number of bytes used by the container.
+   * @param reclaimed the number of bytes reclaimed from the container.
+   * @return the current number of bytes used by the container after decrease.
+   */
+  public long decrBytesUsed(long reclaimed) {
+    return this.containerData.addBytesUsed(-1L * reclaimed);
+  }
+
+  /**
+   * Get the maximum container size.
+   * @return the maximum container size.
+   */
+  public long getMaxSize() {
+    return containerData.getMaxSize();
+  }
+
+  /**
+   * Set the maximum container size.
+   * @param size the maximum container size.
+   */
+  public void setMaxSize(long size) {
+    this.containerData.setMaxSize(size);
+  }
+
+  /**
+   * Get the number of keys in the container.
+   * @return the number of keys in the container.
+   */
+  public long getNumKeys() {
+    return containerData.getKeyCount();
+  }

INS26 INS40 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS8 UPD66 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS21 INS21 INS21 INS65 INS65 INS41 INS65 INS65 INS39 INS42 INS21 INS65 INS65 INS41 INS65 INS21 INS65 INS65 INS41 INS65 INS65 INS39 INS42 INS21 INS65 INS65 INS41 INS65 INS21 INS65 INS65 INS41 INS65 INS65 INS65 INS39 INS42 INS41 INS65 INS65 INS39 INS42 INS21 INS65 INS65 INS65 INS39 INS42 INS41 INS65 INS65 INS41 INS65 INS65 INS39 INS42 INS21 INS65 INS65 INS41 INS7 INS7 INS7 INS7 INS66 INS66 INS32 INS66 INS42 INS66 INS32 INS66 INS66 INS32 INS66 INS32 INS66 INS66 INS32 INS66 INS42 INS66 INS32 INS66 INS66 INS32 INS66 INS32 INS66 INS66 INS32 INS66 INS42 INS66 INS66 INS32 INS66 INS42 INS66 INS32 INS66 INS42 INS66 INS66 INS32 INS66 INS66 INS32 INS66 INS42 INS66 INS32 INS66 INS66 INS32 INS22 INS14 INS22 INS14 INS22 INS14 INS22 INS14 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS22 INS42 INS27 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS52 INS42 INS43 INS34 INS52 INS42 INS43 INS34 INS52 INS42 INS43 INS34 INS52 INS42 INS43 INS34 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS38 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS34