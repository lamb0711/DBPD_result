HADOOP-10628. Javadoc and few code style improvement for Crypto input and output streams. (yliu via clamb)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1598429 13f79535-47bb-0310-9956-ffa450edef68

+  
+  
+  
-      int remaining = inBuffer.remaining();
+      final int remaining = inBuffer.remaining();
-      /**
-       * The plain text and cipher text have 1:1 mapping, they start at same 
-       * position.
+      /*
+       * The plain text and cipher text have a 1:1 mapping, they start at the 
+       * same position.
-    int len = outBuffer.remaining();
-    /**
+    final int len = outBuffer.remaining();
+    
+    /*
-      /**
-       * We will generally not get here.  For CTR mode, to improve
-       * performance, we rely on the encryptor maintaining context, for
-       * example to calculate the counter.  But some bad implementations
-       * can't maintain context, and need us to re-init after doing
-       * encryption.
+      /*
+       * This code is generally not executed since the encryptor usually
+       * maintains encryption context (e.g. the counter) internally. However,
+       * some implementations can't maintain context so a re-init is necessary
+       * after each encryption call.
-    long counter = streamOffset / codec.getAlgorithmBlockSize();
+    final long counter = streamOffset / codec.getAlgorithmBlockSize();
-  /**
-   * Free the direct buffer manually.
-   */
+  /** Forcibly free the direct buffer. */
-    sun.misc.Cleaner inBufferCleaner =
+    final sun.misc.Cleaner inBufferCleaner =
-    sun.misc.Cleaner outBufferCleaner =
+    final sun.misc.Cleaner outBufferCleaner =
-   * To flush, we need to encrypt the data in buffer and write to underlying
-   * stream, then do the flush.
+   * To flush, we need to encrypt the data in the buffer and write to the 
+   * underlying stream, then do the flush.

INS83 INS83 UPD66 INS83 INS83 UPD66 UPD66 INS83