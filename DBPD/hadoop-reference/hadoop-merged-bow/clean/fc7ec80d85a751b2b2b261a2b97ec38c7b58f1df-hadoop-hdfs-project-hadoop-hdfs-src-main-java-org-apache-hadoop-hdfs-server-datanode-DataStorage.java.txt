Merge branch 'HDFS-9806' into trunk

+import org.apache.hadoop.fs.StorageType;
-  private static boolean createStorageID(StorageDirectory sd, int lv) {
+  private static boolean createStorageID(StorageDirectory sd, int lv,
+      Configuration conf) {
-    return createStorageID(sd, !haveValidStorageId);
+    return createStorageID(sd, !haveValidStorageId, conf);
-      StorageDirectory sd, boolean regenerateStorageIds) {
+      StorageDirectory sd, boolean regenerateStorageIds, Configuration conf) {
+    if (sd.getStorageLocation() != null &&
+        sd.getStorageLocation().getStorageType() == StorageType.PROVIDED) {
+      // Only one provided storage id is supported.
+      // TODO support multiple provided storage ids
+      sd.setStorageUuid(conf.get(DFSConfigKeys.DFS_PROVIDER_STORAGEUUID,
+          DFSConfigKeys.DFS_PROVIDER_STORAGEUUID_DEFAULT));
+      return false;
+    }
-        format(sd, nsInfo, datanode.getDatanodeUuid());
+        format(sd, nsInfo, datanode.getDatanodeUuid(), datanode.getConf());
-              String datanodeUuid) throws IOException {
+              String newDatanodeUuid, Configuration conf) throws IOException {
-    setDatanodeUuid(datanodeUuid);
+    setDatanodeUuid(newDatanodeUuid);
-    createStorageID(sd, false);
+    createStorageID(sd, false, conf);
+    if (props == null) {
+      return;
+    }
+    if (sd.getStorageLocation().getStorageType() == StorageType.PROVIDED) {
+      createStorageID(sd, layoutVersion, conf);
+      return false; // regular start up for PROVIDED storage directories
+    }
-      createStorageID(sd, layoutVersion);
+      createStorageID(sd, layoutVersion, conf);
-        upgradeProperties(sd);
+        upgradeProperties(sd, conf);
-    upgradeProperties(sd);
+    upgradeProperties(sd, conf);
-  void upgradeProperties(StorageDirectory sd) throws IOException {
-    createStorageID(sd, layoutVersion);
+  void upgradeProperties(StorageDirectory sd, Configuration conf)
+      throws IOException {
+    createStorageID(sd, layoutVersion, conf);
-      if (prevDir.exists()) {
+      if (prevDir != null && prevDir.exists()) {

INS26 INS40 INS44 INS44 INS44 MOV25 INS44 INS43 INS42 INS43 INS42 INS25 UPD42 INS43 INS42 INS25 INS25 INS43 INS42 INS42 INS42 INS27 INS8 INS42 INS27 INS8 INS27 MOV27 INS8 INS42 INS42 INS27 INS27 INS21 INS41 UPD42 INS42 INS42 INS33 INS41 INS32 INS40 INS21 INS41 INS42 INS42 INS32 INS33 INS32 INS40 INS32 INS9 INS32 INS42 INS32 INS9 INS27 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 MOV32 INS42 INS42 INS42 INS42 INS40 INS40 INS32 INS42 INS33 INS42 INS42 INS42