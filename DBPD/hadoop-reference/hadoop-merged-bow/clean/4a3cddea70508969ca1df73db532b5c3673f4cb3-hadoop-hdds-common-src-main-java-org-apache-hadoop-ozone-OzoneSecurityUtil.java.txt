HDDS-134. SCM CA: OM sends CSR and uses certificate issued by SCM. Contributed by Ajay Kumar.

+import org.apache.commons.validator.routines.InetAddressValidator;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import java.io.IOException;
+import java.net.InetAddress;
+import java.net.NetworkInterface;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Enumeration;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Set;
+  private final static Logger LOG =
+      LoggerFactory.getLogger(OzoneSecurityUtil.class);
+  // List of ip's not recommended to be added to CSR.
+  private final static Set<String> INVALID_IPS = new HashSet<>(Arrays.asList(
+      "0.0.0.0", "127.0.0.1"));
+
+  /**
+   * Iterates through network interfaces and return all valid ip's not
+   * listed in CertificateSignRequest#INVALID_IPS.
+   *
+   * @return List<InetAddress>
+   * @throws IOException if no network interface are found or if an error
+   * occurs.
+   */
+  public static List<InetAddress> getValidInetsForCurrentHost()
+      throws IOException {
+    List<InetAddress> hostIps = new ArrayList<>();
+    InetAddressValidator ipValidator = InetAddressValidator.getInstance();
+
+    Enumeration<NetworkInterface> enumNI =
+        NetworkInterface.getNetworkInterfaces();
+    if (enumNI != null) {
+      while (enumNI.hasMoreElements()) {
+        NetworkInterface ifc = enumNI.nextElement();
+        if (ifc.isUp()) {
+          Enumeration<InetAddress> enumAdds = ifc.getInetAddresses();
+          while (enumAdds.hasMoreElements()) {
+            InetAddress addr = enumAdds.nextElement();
+
+            if (ipValidator.isValid(addr.getHostAddress())
+                && !INVALID_IPS.contains(addr.getHostAddress())) {
+              LOG.info("Adding ip:{},host:{}", addr.getHostAddress(),
+                  addr.getHostName());
+              hostIps.add(addr);
+            } else {
+              LOG.info("ip:{},host:{} not returned.", addr.getHostAddress(),
+                  addr.getHostName());
+            }
+          }
+        }
+      }
+      return hostIps;
+    } else {
+      throw new IOException("Unable to get network interfaces.");
+    }
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS74 INS59 INS29 INS83 INS83 INS74 INS42 INS43 INS8 INS42 INS42 INS32 INS43 INS43 INS42 INS14 INS65 INS65 INS65 INS43 INS43 INS42 INS60 INS60 INS60 INS25 INS42 INS42 INS57 INS42 INS42 INS74 INS32 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS42 INS74 INS59 INS43 INS59 INS74 INS59 INS27 INS8 INS8 INS43 INS43 INS42 INS42 INS45 INS45 INS43 INS43 INS42 INS14 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS42 INS33 INS61 INS41 INS53 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS8 INS42 INS14 INS43 INS42 INS42 INS60 INS25 INS43 INS45 INS42 INS43 INS59 INS32 INS8 INS42 INS42 INS42 INS32 INS42 INS42 INS60 INS61 INS42 INS42 INS74 INS59 INS32 INS8 INS43 INS43 INS42 INS32 INS42 INS42 INS60 INS25 INS42 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS8 INS42 INS42 INS32 INS32 INS38 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42