HDFS-6944. Archival Storage: add retry and termination logic for Mover. Contributed by Jing Zhao.

+import com.google.common.annotations.VisibleForTesting;
+
+    public Collection<G> values() {
+      return map.values();
+    }
+        target.getDDatanode().setHasFailure();
+
+    @Override
+    public synchronized boolean isLocatedOn(StorageGroup loc) {
+      // currently we only check if replicas are located on the same DataNodes
+      // since we do not have the capability to store two replicas in the same
+      // DataNode even though they are on two different storage types
+      for (StorageGroup existing : locations) {
+        if (existing.getDatanodeInfo().equals(loc.getDatanodeInfo())) {
+          return true;
+        }
+      }
+      return false;
+    }
+    private volatile boolean hasFailure = false;
+
+    void setHasFailure() {
+      this.hasFailure = true;
+    }
-    waitForMoveCompletion();
+    waitForMoveCompletion(targets);
-  /** set the sleeping period for block move completion check */
-  static void setBlockMoveWaitTime(long time) {
-    blockMoveWaitTime = time;
-  }
-
-  /** Wait for all block move confirmations. */
-  private void waitForMoveCompletion() {
+  /**
+   * Wait for all block move confirmations.
+   * @return true if there is failed move execution
+   */
+  public static boolean waitForMoveCompletion(
+      Iterable<? extends StorageGroup> targets) {
+    boolean hasFailure = false;
+        } else {
+          hasFailure |= t.getDDatanode().hasFailure;
-        return; //all pending queues are empty
+        return hasFailure; // all pending queues are empty
-   * A block is a good candidate if 
+   * A block is a good candidate if
-   * 
+   *
+  /** set the sleeping period for block move completion check */
+  @VisibleForTesting
+  public static void setBlockMoveWaitTime(long time) {
+    blockMoveWaitTime = time;
+  }
+
-    dispatchExecutor.shutdownNow();
+    if (dispatchExecutor != null) {
+      dispatchExecutor.shutdownNow();
+    }

INS26 MOV31 INS40 INS31 INS31 INS23 INS31 UPD83 INS83 UPD39 INS44 INS78 INS83 INS83 INS74 INS42 INS8 INS78 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS39 INS59 INS39 INS42 INS8 INS65 INS74 INS42 INS60 INS42 INS25 INS43 INS43 INS41 INS42 INS43 INS42 INS70 INS41 INS42 INS9 INS21 UPD66 INS66 INS43 INS76 INS39 INS59 UPD66 INS27 INS8 INS42 INS42 INS32 INS42 INS44 INS42 INS8 INS9 INS7 INS42 INS42 INS43 INS42 INS9 INS42 INS33 MOV21 INS42 INS42 INS43 INS42 INS25 INS22 INS9 INS42 INS21 INS42 INS32 INS8 INS52 INS42 INS32 INS32 INS42 INS32 INS41 INS8 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS9 INS21 INS42 INS42 INS7 INS42 INS22 INS32 INS42 INS42 INS42