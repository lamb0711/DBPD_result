HADOOP-16653. S3Guard DDB overreacts to no tag access (#1660). Contributed by Gabor Bota.


+import java.nio.file.AccessDeniedException;
+import static org.apache.hadoop.fs.s3a.S3AUtils.translateDynamoDBException;
-  protected void tagTableWithVersionMarker() {
+  protected void tagTableWithVersionMarker() throws AmazonDynamoDBException {
-      LOG.warn("Exception during tagging table: {}", e.getMessage());
+      LOG.debug("Exception during tagging table: {}", e.getMessage(), e);
-      AmazonDynamoDB addb) {
+      AmazonDynamoDB addb) throws IOException {
-      LOG.warn("Exception while getting tags from the dynamo table: {}",
-          e.getMessage());
+      LOG.debug("Exception while getting tags from the dynamo table: {}",
+          e.getMessage(), e);
+      throw translateDynamoDBException(table.getTableName(),
+          "Retrieving tags.", e);
-    final Item versionMarkerFromTag =
-        getVersionMarkerFromTags(table, amazonDynamoDB);
+    Item versionMarkerFromTag = null;
+    boolean canReadDdbTags = true;
+
+    try {
+      versionMarkerFromTag = getVersionMarkerFromTags(table, amazonDynamoDB);
+    } catch (AccessDeniedException e) {
+      LOG.debug("Can not read tags of table.");
+      canReadDdbTags = false;
+    }
-      LOG.info("Table {} contains no version marker item or tag. " +
-              "The table is empty, so the version marker will be added " +
-              "as TAG and ITEM.", tableName);
+      if (canReadDdbTags) {
+        LOG.info("Table {} contains no version marker item and tag. " +
+            "The table is empty, so the version marker will be added " +
+            "as TAG and ITEM.", tableName);
+        putVersionMarkerItemToTable();
+        tagTableWithVersionMarker();
+      }
-      tagTableWithVersionMarker();
-      putVersionMarkerItemToTable();
+      if (!canReadDdbTags) {
+        LOG.info("Table {} contains no version marker item and the tags are not readable. " +
+            "The table is empty, so the ITEM version marker will be added .", tableName);
+        putVersionMarkerItemToTable();
+      }
-    if (versionMarkerItem != null && versionMarkerFromTag == null) {
+    if (versionMarkerItem != null && versionMarkerFromTag == null
+        && canReadDdbTags) {

INS26 INS26 INS40 INS40 INS43 INS43 INS42 INS42 INS60 INS54 INS39 INS59 INS8 INS12 INS27 INS33 INS42 INS9 INS21 INS44 INS8 INS25 INS25 MOV27 INS42 INS53 INS7 INS43 INS42 INS21 INS21 INS42 INS8 INS38 INS8 INS32 INS42 MOV32 INS42 INS32 INS7 MOV21 MOV21 MOV21 INS42 INS21 INS21 UPD42 INS42 UPD42 INS42 INS42 INS32 INS45 INS42 INS42 INS42 INS45 INS42 INS9 INS32 INS32 INS42 INS42 INS42 INS42 INS27 INS42 INS42 UPD45 INS45 INS45 DEL83