Merging r1539737 through r1539896 from trunk to branch HDFS-2832

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1539898 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.hdfs.protocol.PathBasedCacheDescriptor;
-  public PathBasedCacheDescriptor addPathBasedCacheDirective(
+  public long addPathBasedCacheDirective(
-  public void removePathBasedCacheDescriptor(Long id) throws IOException {
-    namesystem.removePathBasedCacheDescriptor(id);
+  public void modifyPathBasedCacheDirective(
+      PathBasedCacheDirective directive) throws IOException {
+    namesystem.modifyPathBasedCacheDirective(directive);
+  }
+
+  @Override
+  public void removePathBasedCacheDirective(long id) throws IOException {
+    namesystem.removePathBasedCacheDirective(id);
-      extends BatchedRemoteIterator<Long, PathBasedCacheDescriptor> {
+      extends BatchedRemoteIterator<Long, PathBasedCacheDirective> {
-    private final String pool;
-
-    private final String path;
-
-    public ServerSidePathBasedCacheEntriesIterator(Long firstKey, String pool,
-        String path) {
+    private final PathBasedCacheDirective filter;
+    
+    public ServerSidePathBasedCacheEntriesIterator(Long firstKey, 
+        PathBasedCacheDirective filter) {
-      this.pool = pool;
-      this.path = path;
+      this.filter = filter;
-    public BatchedEntries<PathBasedCacheDescriptor> makeRequest(
+    public BatchedEntries<PathBasedCacheDirective> makeRequest(
-      return namesystem.listPathBasedCacheDescriptors(nextKey, pool, path);
+      return namesystem.listPathBasedCacheDirectives(nextKey, filter);
-    public Long elementToPrevKey(PathBasedCacheDescriptor entry) {
-      return entry.getEntryId();
+    public Long elementToPrevKey(PathBasedCacheDirective entry) {
+      return entry.getId();
-  public RemoteIterator<PathBasedCacheDescriptor> listPathBasedCacheDescriptors(long prevId,
-      String pool, String path) throws IOException {
-    return new ServerSidePathBasedCacheEntriesIterator(prevId, pool, path);
+  public RemoteIterator<PathBasedCacheDirective> listPathBasedCacheDirectives(long prevId,
+      PathBasedCacheDirective filter) throws IOException {
+    if (filter == null) {
+      filter = new PathBasedCacheDirective.Builder().build();
+    }
+    return new ServerSidePathBasedCacheEntriesIterator(prevId, filter);

INS31 INS31 INS39 UPD42 INS78 MOV83 INS39 UPD42 MOV42 INS44 INS43 INS8 UPD74 MOV78 INS83 UPD74 MOV74 INS42 MOV44 MOV44 MOV43 MOV8 UPD43 UPD42 INS42 INS39 INS42 UPD42 MOV42 INS21 UPD43 UPD43 UPD74 UPD43 UPD43 UPD42 INS25 UPD42 INS32 UPD42 UPD42 UPD42 UPD43 UPD42 UPD43 UPD43 UPD42 UPD42 INS27 INS8 UPD42 UPD42 INS42 INS42 INS42 UPD42 UPD42 UPD42 INS42 INS33 INS21 UPD42 UPD42 UPD42 UPD42 UPD42 INS7 UPD42 INS42 INS32 INS14 INS42 INS43 INS40 DEL40 DEL26 DEL42 DEL43 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL43 DEL42 DEL44 DEL31