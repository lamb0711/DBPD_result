Merge trunk into branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/MR-2841@1612742 13f79535-47bb-0310-9956-ffa450edef68

+    private volatile StorageType[] storageTypes = null;
-      setPipeline(lb.getLocations(), lb.getStorageIDs());
+      setPipeline(lb.getLocations(), lb.getStorageTypes(), lb.getStorageIDs());
-    private void setPipeline(DatanodeInfo[] nodes, String[] storageIDs) {
+    private void setPipeline(DatanodeInfo[] nodes, StorageType[] storageTypes,
+        String[] storageIDs) {
+      this.storageTypes = storageTypes;
-      setPipeline(null, null);
+      setPipeline(null, null, null);
-      transfer(src, targets, lb.getBlockToken());
+      final StorageType[] targetStorageTypes = {storageTypes[d]};
+      transfer(src, targets, targetStorageTypes, lb.getBlockToken());
+        final StorageType[] targetStorageTypes,
-            targets);
+            targets, targetStorageTypes);
-          System.arraycopy(nodes, 0, newnodes, 0, errorIndex);
-          System.arraycopy(nodes, errorIndex+1, newnodes, errorIndex,
-              newnodes.length-errorIndex);
+          arraycopy(nodes, newnodes, errorIndex);
+
+          final StorageType[] newStorageTypes = new StorageType[newnodes.length];
+          arraycopy(storageTypes, newStorageTypes, errorIndex);
-          System.arraycopy(storageIDs, 0, newStorageIDs, 0, errorIndex);
-          System.arraycopy(storageIDs, errorIndex+1, newStorageIDs, errorIndex,
-              newStorageIDs.length-errorIndex);
+          arraycopy(storageIDs, newStorageIDs, errorIndex);
-          setPipeline(newnodes, newStorageIDs);
+          setPipeline(newnodes, newStorageTypes, newStorageIDs);
-          success = createBlockOutputStream(nodes, newGS, isRecovery);
+          success = createBlockOutputStream(nodes, storageTypes, newGS, isRecovery);
-          success = createBlockOutputStream(nodes, newGS, isRecovery);
+          success = createBlockOutputStream(nodes, storageTypes, newGS, isRecovery);
+      StorageType[] storageTypes = null;
+        storageTypes = lb.getStorageTypes();
-        success = createBlockOutputStream(nodes, 0L, false);
+        success = createBlockOutputStream(nodes, storageTypes, 0L, false);
-    private boolean createBlockOutputStream(DatanodeInfo[] nodes, long newGS,
-        boolean recoveryFlag) {
+    private boolean createBlockOutputStream(DatanodeInfo[] nodes,
+        StorageType[] nodeStorageTypes, long newGS, boolean recoveryFlag) {
+          BlockConstructionStage bcs = recoveryFlag? stage.getRecoveryStage(): stage;
-          new Sender(out).writeBlock(block, accessToken, dfsClient.clientName,
-              nodes, null, recoveryFlag? stage.getRecoveryStage() : stage, 
+          new Sender(out).writeBlock(block, nodeStorageTypes[0], accessToken,
+              dfsClient.clientName, nodes, nodeStorageTypes, null, bcs, 
+
+  private static <T> void arraycopy(T[] srcs, T[] dsts, int skipIndex) {
+    System.arraycopy(srcs, 0, dsts, 0, skipIndex);
+    System.arraycopy(srcs, skipIndex+1, dsts, skipIndex, dsts.length-skipIndex);
+  }

INS31 INS23 INS83 INS83 INS73 INS39 INS42 INS44 INS44 INS44 INS8 INS83 INS83 INS5 INS59 INS44 INS44 INS44 INS42 INS5 INS42 INS5 INS42 INS39 INS42 INS21 INS21 INS43 INS85 INS42 INS33 INS5 INS42 INS21 INS60 INS83 INS5 INS42 INS60 INS5 INS42 INS43 INS85 INS43 INS85 INS32 INS32 INS42 INS43 INS85 INS7 INS83 INS5 INS59 INS43 INS85 INS5 INS59 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS34 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS32 INS42 INS22 INS42 INS33 INS43 INS85 INS42 INS4 INS42 INS42 INS43 INS85 INS42 INS33 INS21 INS42 INS42 INS34 INS40 INS42 INS42 INS42 INS52 INS42 INS42 INS2 MOV60 INS42 INS7 INS42 INS42 INS42 INS60 INS42 INS32 INS60 INS83 INS5 INS59 INS42 INS42 INS42 INS43 INS59 INS43 INS85 INS42 INS3 UPD42 UPD42 INS42 INS42 INS42 MOV16 INS2 INS42 INS42 INS42 INS5 INS40 INS42 INS42 INS42 INS34 INS43 INS85 INS42 DEL42 DEL34 DEL34 DEL42 DEL42 DEL42 DEL42 DEL34 DEL27 DEL42 DEL42 DEL40 DEL42 DEL27 DEL32 DEL21 DEL42 DEL34 DEL34 DEL42 DEL42 DEL34 DEL27 DEL40 DEL42 DEL27