HDDS-965. Ozone: checkstyle improvements and code quality scripts. Contributed by Elek, Marton.

-  private static final Logger LOG = LoggerFactory.getLogger(OzoneVersionInfo.class);
+  private static final Logger LOG =
+      LoggerFactory.getLogger(OzoneVersionInfo.class);
-      is = ThreadUtil.getResourceAsStream(OzoneVersionInfo.class.getClassLoader(),
-          versionInfoFile);
+      is = ThreadUtil
+          .getResourceAsStream(OzoneVersionInfo.class.getClassLoader(),
+              versionInfoFile);
-  protected String _getVersion() {
+  protected String getVersion() {
-  protected String _getRelease() {
+  protected String getRelease() {
-  protected String _getRevision() {
+  protected String getRevision() {
-  protected String _getBranch() {
+  protected String getBranch() {
-  protected String _getDate() {
+  protected String getDate() {
-  protected String _getUser() {
+  protected String getUser() {
-  protected String _getUrl() {
+  protected String getUrl() {
-  protected String _getSrcChecksum() {
+  protected String getSrcChecksum() {
-  protected String _getBuildVersion(){
-    return _getVersion() +
-      " from " + _getRevision() +
-      " by " + _getUser() +
-      " source checksum " + _getSrcChecksum();
+  protected String getBuildVersion() {
+    return getVersion() +
+        " from " + getRevision() +
+        " by " + getUser() +
+        " source checksum " + getSrcChecksum();
-  protected String _getProtocVersion() {
+  protected String getProtocVersion() {
-  private static OzoneVersionInfo OZONE_VERSION_INFO = new OzoneVersionInfo("ozone");
-  /**
-   * Get the Ozone version.
-   * @return the Ozone version string, eg. "0.6.3-dev"
-   */
-  public static String getVersion() {
-    return OZONE_VERSION_INFO._getVersion();
-  }
-
-  /**
-   * Get the Ozone release name.
-   * @return the Ozone release string, eg. "Acadia"
-   */
-  public static String getRelease() {
-    return OZONE_VERSION_INFO._getRelease();
-  }
-
-  /**
-   * Get the Git commit hash of the repository when compiled.
-   * @return the commit hash, eg. "18f64065d5db6208daf50b02c1b5ed4ee3ce547a"
-   */
-  public static String getRevision() {
-    return OZONE_VERSION_INFO._getRevision();
-  }
-
-  /**
-   * Get the branch on which this originated.
-   * @return The branch name, e.g. "trunk" or "branches/branch-0.20"
-   */
-  public static String getBranch() {
-    return OZONE_VERSION_INFO._getBranch();
-  }
-
-  /**
-   * The date that Ozone was compiled.
-   * @return the compilation date in unix date format
-   */
-  public static String getDate() {
-    return OZONE_VERSION_INFO._getDate();
-  }
-
-  /**
-   * The user that compiled Ozone.
-   * @return the username of the user
-   */
-  public static String getUser() {
-    return OZONE_VERSION_INFO._getUser();
-  }
-
-  /**
-   * Get the URL for the Ozone repository.
-   * @return the URL of the Ozone repository
-   */
-  public static String getUrl() {
-    return OZONE_VERSION_INFO._getUrl();
-  }
-
-  /**
-   * Get the checksum of the source files from which Ozone was built.
-   * @return the checksum of the source files
-   */
-  public static String getSrcChecksum() {
-    return OZONE_VERSION_INFO._getSrcChecksum();
-  }
-
-  /**
-   * Returns the buildVersion which includes version,
-   * revision, user and date.
-   * @return the buildVersion
-   */
-  public static String getBuildVersion(){
-    return OZONE_VERSION_INFO._getBuildVersion();
-  }
-
-  /**
-   * Returns the protoc version used for the build.
-   * @return the protoc version
-   */
-  public static String getProtocVersion(){
-    return OZONE_VERSION_INFO._getProtocVersion();
-  }
+  private static final OzoneVersionInfo OZONE_VERSION_INFO =
+      new OzoneVersionInfo("ozone");
-        "              /    "+ getVersion() + "("+ getRelease() +")\n");
-    System.out.println("Source code repository " + getUrl() + " -r " +
-        getRevision());
-    System.out.println("Compiled by " + getUser() + " on " + getDate());
-    System.out.println("Compiled with protoc " + getProtocVersion());
-    System.out.println("From source with checksum " + getSrcChecksum() + "\n");
+            "              /    " + OZONE_VERSION_INFO.getVersion() + "("
+            + OZONE_VERSION_INFO.getRelease() + ")\n");
+    System.out.println(
+        "Source code repository " + OZONE_VERSION_INFO.getUrl() + " -r " +
+            OZONE_VERSION_INFO.getRevision());
+    System.out.println("Compiled by " + OZONE_VERSION_INFO.getUser() + " on "
+        + OZONE_VERSION_INFO.getDate());
+    System.out.println(
+        "Compiled with protoc " + OZONE_VERSION_INFO.getProtocVersion());
+    System.out.println(
+        "From source with checksum " + OZONE_VERSION_INFO.getSrcChecksum()
+            + "\n");

UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS83 MOV32 MOV32 MOV32 MOV32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31