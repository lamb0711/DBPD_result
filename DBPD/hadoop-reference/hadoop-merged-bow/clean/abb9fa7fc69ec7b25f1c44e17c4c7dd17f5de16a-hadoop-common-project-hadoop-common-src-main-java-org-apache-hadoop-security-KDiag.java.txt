HADOOP-13018. Make Kdiag check whether hadoop.token.files points to existent and valid files. Contributed by Ravi Prakash

+
+import static org.apache.hadoop.fs.CommonConfigurationKeysPublic.HADOOP_TOKEN_FILES;
+  public static final String CAT_TOKEN = "TOKEN";
+      validateHadoopTokenFiles(conf);
+   * Validate that hadoop.token.files (if specified) exist and are valid.
+   * @throws ClassNotFoundException
+   * @throws SecurityException
+   * @throws NoSuchMethodException
+   * @throws KerberosDiagsFailure
+   */
+  private void validateHadoopTokenFiles(Configuration conf)
+    throws ClassNotFoundException, KerberosDiagsFailure, NoSuchMethodException,
+    SecurityException {
+    title("Locating Hadoop token files");
+
+    String tokenFileLocation = System.getProperty(HADOOP_TOKEN_FILES);
+    if(tokenFileLocation != null) {
+      println("Found " + HADOOP_TOKEN_FILES + " in system properties : "
+          + tokenFileLocation);
+    }
+
+    if(conf.get(HADOOP_TOKEN_FILES) != null) {
+      println("Found " + HADOOP_TOKEN_FILES + " in hadoop configuration : "
+          + conf.get(HADOOP_TOKEN_FILES));
+      if(System.getProperty(HADOOP_TOKEN_FILES) != null) {
+        println(HADOOP_TOKEN_FILES + " in the system properties overrides the"
+            + " one specified in hadoop configuration");
+      } else {
+        tokenFileLocation = conf.get(HADOOP_TOKEN_FILES);
+      }
+    }
+
+    if (tokenFileLocation != null) {
+      for (String tokenFileName:
+          StringUtils.getTrimmedStrings(tokenFileLocation)) {
+        if (tokenFileName.length() > 0) {
+          File tokenFile = new File(tokenFileName);
+          verifyFileIsValid(tokenFile, CAT_TOKEN, "token");
+          verify(tokenFile, conf, CAT_TOKEN, "token");
+        }
+      }
+    }
+  }
+
+  /**
+   * Verify that tokenFile contains valid Credentials.
+   *
+   * If not, an exception is raised, or, if {@link #nofail} is set,
+   * an error will be logged and the method return false.
+   *
+   */
+  private boolean verify(File tokenFile, Configuration conf, String category,
+      String message) throws KerberosDiagsFailure {
+    try {
+      Credentials.readTokenStorageFile(tokenFile, conf);
+    } catch(Exception e) {
+      if (!nofail) {
+        fail(category, message);
+      } else {
+        error(category, message);
+      }
+      return false;
+    }
+    return true;
+  }
+
+  /**

INS26 INS40 INS23 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS39 INS42 INS44 INS43 INS43 INS43 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS42 INS42 INS45 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS42 INS42 INS42 INS42 INS21 INS60 INS25 INS25 INS25 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS54 INS41 INS66 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS27 INS8 INS27 INS8 INS27 INS8 INS66 INS66 INS65 INS66 INS66 INS42 INS42 INS42 INS42 INS8 INS12 INS9 INS21 INS42 INS45 INS42 INS42 INS32 INS42 INS33 INS21 INS32 INS33 INS21 INS25 INS42 INS33 INS70 INS67 INS21 INS44 INS8 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS27 INS8 INS8 INS44 INS32 INS8 INS42 INS32 INS43 INS42 INS25 INS41 INS42 INS42 INS42 INS27 INS42 INS27 INS32 INS33 INS21 INS21 INS43 INS42 INS42 INS42 INS42 INS25 INS42 INS42 INS42 INS42 INS42 INS38 INS8 INS8 INS9 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS32 INS42 INS42 INS42 INS32 INS7 INS42 INS27 INS8 INS42 INS21 INS21 INS42 INS42 INS42 INS42 INS27 INS42 INS32 INS32 INS34 INS60 INS21 INS21 INS32 INS32 INS42 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS45 INS43 INS42 INS42