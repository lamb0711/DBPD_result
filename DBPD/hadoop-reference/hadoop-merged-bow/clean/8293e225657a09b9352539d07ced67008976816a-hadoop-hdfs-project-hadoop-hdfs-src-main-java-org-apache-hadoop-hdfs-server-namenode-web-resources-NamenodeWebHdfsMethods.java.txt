HDFS-4649. Webhdfs cannot list large directories. Contributed by Daryn Sharp.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1463698 13f79535-47bb-0310-9956-ffa450edef68

-    final DirectoryListing first = getDirectoryListing(np, p,
+    // allows exceptions like FNF or ACE to prevent http response of 200 for
+    // a failure since we can't (currently) return error responses in the
+    // middle of a streaming operation
+    final DirectoryListing firstDirList = getDirectoryListing(np, p,
+    // must save ugi because the streaming object will be executed outside
+    // the remote user's ugi
+    final UserGroupInformation ugi = UserGroupInformation.getCurrentUser();
-        final HdfsFileStatus[] partial = first.getPartialListing();
-        if (partial.length > 0) {
-          out.print(JsonUtil.toJsonString(partial[0], false));
-        }
-        for(int i = 1; i < partial.length; i++) {
-          out.println(',');
-          out.print(JsonUtil.toJsonString(partial[i], false));
-        }
-
-        for(DirectoryListing curr = first; curr.hasMore(); ) { 
-          curr = getDirectoryListing(np, p, curr.getLastName());
-          for(HdfsFileStatus s : curr.getPartialListing()) {
-            out.println(',');
-            out.print(JsonUtil.toJsonString(s, false));
-          }
+        try {
+          // restore remote user's ugi
+          ugi.doAs(new PrivilegedExceptionAction<Void>() {
+            @Override
+            public Void run() throws IOException {
+              long n = 0;
+              for (DirectoryListing dirList = firstDirList; ;
+                   dirList = getDirectoryListing(np, p, dirList.getLastName())
+              ) {
+                // send each segment of the directory listing
+                for (HdfsFileStatus s : dirList.getPartialListing()) {
+                  if (n++ > 0) {
+                    out.println(',');
+                  }
+                  out.print(JsonUtil.toJsonString(s, false));
+                }
+                // stop if last segment
+                if (!dirList.hasMore()) {
+                  break;
+                }
+              }
+              return null;
+            }
+          });
+        } catch (InterruptedException e) {
+          throw new IOException(e);

INS60 INS83 INS43 INS59 UPD42 INS42 INS42 INS32 INS42 INS42 INS54 INS8 INS12 INS21 INS44 INS8 INS32 INS43 INS42 INS53 INS42 INS42 INS14 INS42 INS14 INS74 INS1 INS43 INS42 INS43 INS43 INS31 INS42 INS42 INS42 INS78 INS83 INS43 INS42 INS43 INS8 INS42 INS42 INS42 INS60 MOV24 INS41 INS39 INS59 INS7 INS33 UPD42 MOV42 UPD34 MOV34 INS42 INS32 INS25 UPD42 UPD42 INS42 INS42 INS42 INS32 INS38 INS8 UPD42 MOV42 UPD42 MOV42 UPD42 INS25 INS32 INS10 INS27 MOV8 UPD42 MOV42 UPD42 MOV42 INS37 INS34 INS42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL2 DEL9 DEL32 DEL32 DEL21 DEL42 DEL42 DEL13 DEL32 DEL21 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL40 DEL34 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL34 DEL2 DEL9 DEL32 DEL32 DEL21 DEL8 DEL25 DEL39 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL24