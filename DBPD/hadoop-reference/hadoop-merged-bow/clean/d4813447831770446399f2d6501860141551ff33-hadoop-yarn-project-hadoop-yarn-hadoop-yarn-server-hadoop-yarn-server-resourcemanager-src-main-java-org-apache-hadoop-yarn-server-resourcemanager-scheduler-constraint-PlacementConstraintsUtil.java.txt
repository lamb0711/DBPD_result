YARN-7822. Constraint satisfaction checker support for composite OR and AND constraints. (Weiwei Yang via asuresh)

+import org.apache.hadoop.yarn.api.resource.PlacementConstraint.And;
+import org.apache.hadoop.yarn.api.resource.PlacementConstraint.Or;
+  /**
+   * Returns true if all child constraints are satisfied.
+   * @param appId application id
+   * @param constraint Or constraint
+   * @param node node
+   * @param atm allocation tags manager
+   * @return true if all child constraints are satisfied, false otherwise
+   * @throws InvalidAllocationTagsQueryException
+   */
+  private static boolean canSatisfyAndConstraint(ApplicationId appId,
+      And constraint, SchedulerNode node, AllocationTagsManager atm)
+      throws InvalidAllocationTagsQueryException {
+    // Iterate over the constraints tree, if found any child constraint
+    // isn't satisfied, return false.
+    for (AbstractConstraint child : constraint.getChildren()) {
+      if(!canSatisfyConstraints(appId, child.build(), node, atm)) {
+        return false;
+      }
+    }
+    return true;
+  }
+
+  /**
+   * Returns true as long as any of child constraint is satisfied.
+   * @param appId application id
+   * @param constraint Or constraint
+   * @param node node
+   * @param atm allocation tags manager
+   * @return true if any child constraint is satisfied, false otherwise
+   * @throws InvalidAllocationTagsQueryException
+   */
+  private static boolean canSatisfyOrConstraint(ApplicationId appId,
+      Or constraint, SchedulerNode node, AllocationTagsManager atm)
+      throws InvalidAllocationTagsQueryException {
+    for (AbstractConstraint child : constraint.getChildren()) {
+      if (canSatisfyConstraints(appId, child.build(), node, atm)) {
+        return true;
+      }
+    }
+    return false;
+  }
+
+    } else if (sConstraintExpr instanceof And) {
+      And and = (And) sConstraintExpr;
+      return canSatisfyAndConstraint(appId, and, node, atm);
+    } else if (sConstraintExpr instanceof Or) {
+      Or or = (Or) sConstraintExpr;
+      return canSatisfyOrConstraint(appId, or, node, atm);
-          "Unsupported type of constraint.");
+          "Unsupported type of constraint: "
+              + sConstraintExpr.getClass().getSimpleName());

INS26 INS26 INS40 INS40 INS31 INS31 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS70 INS41 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS70 INS41 INS25 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS42 INS42 INS44 INS32 INS8 INS9 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS42 INS42 INS44 INS32 INS8 INS9 MOV62 MOV8 INS25 INS43 INS42 INS42 INS42 INS25 INS43 INS42 INS42 INS42 INS25 INS62 INS8 INS25 INS42 INS38 INS8 INS42 INS32 INS8 INS42 INS43 INS60 INS41 INS62 INS8 MOV8 INS32 INS41 INS42 INS42 INS32 INS42 INS42 INS41 INS42 INS43 INS59 INS32 INS42 INS43 INS60 INS41 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS9 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS43 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS43 INS42 INS45 INS32 INS42 INS32 INS42 INS42 INS42 DEL45 DEL25