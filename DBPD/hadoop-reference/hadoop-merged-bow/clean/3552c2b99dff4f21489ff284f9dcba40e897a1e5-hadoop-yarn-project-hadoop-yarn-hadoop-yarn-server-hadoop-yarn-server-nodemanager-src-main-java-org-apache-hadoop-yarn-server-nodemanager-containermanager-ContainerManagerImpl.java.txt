YARN-5637. Changes in NodeManager to support Container rollback and commit. (asuresh)

-  private enum ReinitOp {
-    UPGRADE, COMMIT, ROLLBACK, LOCALIZE;
+  private enum ReInitOp {
+    RE_INIT, COMMIT, ROLLBACK, LOCALIZE;
-        ReinitOp.LOCALIZE);
+        ReInitOp.LOCALIZE);
-  public void upgradeContainer(ContainerId containerId,
-      ContainerLaunchContext upgradeLaunchContext) throws YarnException {
+  /**
+   * ReInitialize a container using a new Launch Context. If the
+   * retryFailureContext is not provided, The container is
+   * terminated on Failure.
+   *
+   * NOTE: Auto-Commit is true by default. This also means that the rollback
+   *       context is purged as soon as the command to start the new process
+   *       is sent. (The Container moves to RUNNING state)
+   *
+   * @param containerId Container Id.
+   * @param autoCommit Auto Commit flag.
+   * @param reInitLaunchContext Target Launch Context.
+   * @throws YarnException Yarn Exception.
+   */
+  public void reInitializeContainer(ContainerId containerId,
+      ContainerLaunchContext reInitLaunchContext, boolean autoCommit)
+      throws YarnException {
-        ReinitOp.UPGRADE);
+        ReInitOp.RE_INIT);
-      resourceSet.addResources(upgradeLaunchContext.getLocalResources());
+      resourceSet.addResources(reInitLaunchContext.getLocalResources());
-          new ContainerReInitEvent(containerId, upgradeLaunchContext,
-              resourceSet));
+          new ContainerReInitEvent(containerId, reInitLaunchContext,
+              resourceSet, autoCommit));
+  /**
+   * Rollback the last reInitialization, if possible.
+   * @param containerId Container ID.
+   * @throws YarnException Yarn Exception.
+   */
+  public void rollbackReInitialization(ContainerId containerId)
+      throws YarnException {
+    Container container = preUpgradeOrLocalizeCheck(containerId,
+        ReInitOp.ROLLBACK);
+    if (container.canRollback()) {
+      dispatcher.getEventHandler().handle(
+          new ContainerEvent(containerId, ContainerEventType.ROLLBACK_REINIT));
+    } else {
+      throw new YarnException("Nothing to rollback to !!");
+    }
+  }
+
+  /**
+   * Commit last reInitialization after which no rollback will be possible.
+   * @param containerId Container ID.
+   * @throws YarnException Yarn Exception.
+   */
+  public void commitReInitialization(ContainerId containerId)
+      throws YarnException {
+    Container container = preUpgradeOrLocalizeCheck(containerId,
+        ReInitOp.COMMIT);
+    if (container.canRollback()) {
+      container.commitUpgrade();
+    } else {
+      throw new YarnException("Nothing to Commit !!");
+    }
+  }
+
-      ReinitOp op) throws YarnException {
+      ReInitOp op) throws YarnException {

INS31 INS31 UPD42 INS29 UPD42 INS44 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS43 INS8 UPD42 INS65 INS65 INS65 INS65 INS65 UPD42 INS39 INS42 INS65 INS65 INS65 INS43 INS42 INS42 INS60 INS25 INS65 INS65 INS65 INS43 INS42 INS42 INS60 INS25 UPD43 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS43 INS59 INS32 INS8 INS8 INS66 INS42 INS66 INS42 INS66 INS42 INS43 INS59 INS32 INS8 INS8 UPD42 INS42 INS42 INS32 INS42 INS42 INS21 INS53 INS42 INS42 INS32 INS42 INS42 INS21 INS53 UPD40 UPD40 INS42 INS42 INS40 INS32 INS14 INS42 INS42 INS40 INS32 INS14 INS32 INS42 INS14 INS43 INS45 INS42 INS42 INS43 INS45 UPD42 UPD42 INS42 INS42 INS42 INS43 INS42 INS40 INS42 INS42 INS42