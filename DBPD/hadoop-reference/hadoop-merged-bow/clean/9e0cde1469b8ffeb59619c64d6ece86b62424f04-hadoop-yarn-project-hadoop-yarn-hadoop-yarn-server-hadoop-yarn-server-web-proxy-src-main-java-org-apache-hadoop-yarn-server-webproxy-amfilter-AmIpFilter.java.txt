YARN-6625. yarn application -list returns a tracking URL for AM that doesn't work in secured and HA environment. (Yufei Gu)

+import java.net.HttpURLConnection;
+import java.util.Collection;
+import com.google.common.annotations.VisibleForTesting;
-import org.apache.hadoop.yarn.util.RMHAUtils;
-  private Map<String, String> proxyUriBases;
+  @VisibleForTesting
+  Map<String, String> proxyUriBases;
-  protected String findRedirectUrl() throws ServletException {
-    String addr;
-    if (proxyUriBases.size() == 1) {  // external proxy or not RM HA
+  @VisibleForTesting
+  public String findRedirectUrl() throws ServletException {
+    String addr = null;
+    if (proxyUriBases.size() == 1) {
+      // external proxy or not RM HA
-    } else {                          // RM HA
+    } else {
+      // RM HA
-      String activeRMId = RMHAUtils.findActiveRMHAId(conf);
-      String addressPropertyPrefix = YarnConfiguration.useHttps(conf)
-          ? YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS
-          : YarnConfiguration.RM_WEBAPP_ADDRESS;
-      String host = conf.get(
-          HAUtil.addSuffix(addressPropertyPrefix, activeRMId));
-      addr = proxyUriBases.get(host);
+      for (String rmId : getRmIds(conf)) {
+        String url = getUrlByRmId(conf, rmId);
+        if (isValidUrl(url)) {
+          addr = url;
+          break;
+        }
+      }
+
+
+  @VisibleForTesting
+  Collection<String> getRmIds(YarnConfiguration conf) {
+    return conf.getStringCollection(YarnConfiguration.RM_HA_IDS);
+  }
+
+  @VisibleForTesting
+  String getUrlByRmId(YarnConfiguration conf, String rmId) {
+    String addressPropertyPrefix = YarnConfiguration.useHttps(conf) ?
+        YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS :
+        YarnConfiguration.RM_WEBAPP_ADDRESS;
+    String host = conf.get(HAUtil.addSuffix(addressPropertyPrefix, rmId));
+    return proxyUriBases.get(host);
+  }
+
+  private boolean isValidUrl(String url) {
+    boolean isValid = false;
+    try {
+      HttpURLConnection conn =
+          (HttpURLConnection) new URL(url).openConnection();
+      conn.connect();
+      isValid = conn.getResponseCode() == HttpURLConnection.HTTP_OK;
+    } catch (Exception e) {
+      LOG.debug("Failed to connect to " + url + ": " + e.toString());
+    }
+    return isValid;
+  }

MOV26 INS26 INS26 INS40 UPD40 INS40 INS31 INS31 INS31 INS78 INS78 UPD83 INS78 INS74 INS42 INS44 INS8 INS78 INS43 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS42 INS43 INS43 INS43 INS42 INS41 INS42 INS42 INS43 INS42 INS43 INS42 MOV60 INS60 INS41 INS43 INS42 INS60 INS54 INS41 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS59 MOV32 INS42 INS39 INS59 INS8 INS12 INS42 INS33 INS70 INS42 INS42 INS40 INS42 INS42 INS32 INS42 INS9 INS60 INS21 INS21 INS44 INS8 INS44 INS32 INS8 INS42 INS42 INS32 INS43 INS59 INS32 INS7 INS43 INS42 INS21 MOV43 INS42 UPD42 MOV42 MOV42 MOV60 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS27 INS42 INS32 INS32 INS8 INS43 INS32 INS32 INS40 INS42 INS42 INS27 UPD42 INS42 INS42 MOV21 INS10 INS42 INS14 INS42 INS42 INS42 INS45 INS42 INS45 INS32 UPD42 UPD42 MOV42 UPD42 MOV42 INS43 INS42 INS42 INS42 INS42 INS42 DEL83 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL59 DEL60