Merge remote-tracking branch 'origin/trunk' into MR-2841

Conflicts:
	hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/MapTask.java

-   * @param checksumType the DataChecksum type constant
+   * @param checksumType the DataChecksum type constant (NULL is not supported)
-    nativeVerifyChunkedSums(bytesPerSum, checksumType,
+    nativeComputeChunkedSums(bytesPerSum, checksumType,
-        fileName, basePos);
+        fileName, basePos, true);
+  }
+
+  public static void verifyChunkedSumsByteArray(int bytesPerSum,
+      int checksumType, byte[] sums, int sumsOffset, byte[] data,
+      int dataOffset, int dataLength, String fileName, long basePos)
+      throws ChecksumException {
+    nativeComputeChunkedSumsByteArray(bytesPerSum, checksumType,
+        sums, sumsOffset,
+        data, dataOffset, dataLength,
+        fileName, basePos, true);
+  }
+
+  public static void calculateChunkedSums(int bytesPerSum, int checksumType,
+      ByteBuffer sums, ByteBuffer data) {
+    nativeComputeChunkedSums(bytesPerSum, checksumType,
+        sums, sums.position(),
+        data, data.position(), data.remaining(),
+        "", 0, false);
+  }
+
+  public static void calculateChunkedSumsByteArray(int bytesPerSum,
+      int checksumType, byte[] sums, int sumsOffset, byte[] data,
+      int dataOffset, int dataLength) {
+    nativeComputeChunkedSumsByteArray(bytesPerSum, checksumType,
+        sums, sumsOffset,
+        data, dataOffset, dataLength,
+        "", 0, false);
-    private static native void nativeVerifyChunkedSums(
+    private static native void nativeComputeChunkedSums(
-      String fileName, long basePos);
+      String fileName, long basePos, boolean verify);
+
+    private static native void nativeComputeChunkedSumsByteArray(
+      int bytesPerSum, int checksumType,
+      byte[] sums, int sumsOffset,
+      byte[] data, int dataOffset, int dataLength,
+      String fileName, long basePos, boolean verify);

INS31 INS31 INS31 INS31 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS8 UPD42 INS44 INS83 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS39 INS42 INS39 INS42 INS5 INS42 INS39 INS42 INS5 INS42 INS39 INS42 INS39 INS42 INS43 INS42 INS39 INS42 INS42 INS21 INS39 INS42 INS39 INS42 INS43 INS42 INS43 INS42 INS21 INS39 INS42 INS39 INS42 INS5 INS42 INS39 INS42 INS5 INS42 INS39 INS42 INS39 INS42 INS21 INS39 INS42 INS39 INS42 INS39 INS42 INS5 INS42 INS39 INS42 INS5 INS42 INS39 INS42 INS39 INS42 INS43 INS42 INS39 INS42 INS39 INS42 UPD66 INS39 INS85 INS39 INS85 INS42 INS32 INS42 INS42 INS32 INS39 INS85 INS39 INS85 INS32 INS39 INS85 INS39 INS85 INS42 UPD42 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS45 INS34 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS34 INS9 INS42 INS42 INS42 INS42 INS42 INS42