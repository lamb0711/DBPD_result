Merging r1541618 through r1542122 from trunk to branch HDFS-2832

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1542125 13f79535-47bb-0310-9956-ffa450edef68

+
-      int latestSequenceNumber) throws Exception {
-    storeRMDelegationTokenAndSequenceNumberState(rmDTIdentifier, renewDate,
-      latestSequenceNumber);
+      int latestSequenceNumber) {
+    try {
+      storeRMDelegationTokenAndSequenceNumberState(rmDTIdentifier, renewDate,
+          latestSequenceNumber);
+    } catch (Exception e) {
+      notifyStoreOperationFailed(e);
+    }
-      RMDelegationTokenIdentifier rmDTIdentifier, int sequenceNumber)
-      throws Exception {
-    removeRMDelegationTokenState(rmDTIdentifier);
+      RMDelegationTokenIdentifier rmDTIdentifier, int sequenceNumber) {
+    try {
+      removeRMDelegationTokenState(rmDTIdentifier);
+    } catch (Exception e) {
+      notifyStoreOperationFailed(e);
+    }
-  public synchronized void storeRMDTMasterKey(DelegationKey delegationKey)
-      throws Exception {
-    storeRMDTMasterKeyState(delegationKey);
+  public synchronized void storeRMDTMasterKey(DelegationKey delegationKey) {
+    try {
+      storeRMDTMasterKeyState(delegationKey);
+    } catch (Exception e) {
+      notifyStoreOperationFailed(e);
+    }
-  public synchronized void removeRMDTMasterKey(DelegationKey delegationKey)
-      throws Exception {
-    removeRMDTMasterKeyState(delegationKey);
+  public synchronized void removeRMDTMasterKey(DelegationKey delegationKey) {
+    try {
+      removeRMDTMasterKeyState(delegationKey);
+    } catch (Exception e) {
+      notifyStoreOperationFailed(e);
+    }
+          notifyDoneStoringApplication(appId, storedException);
+          notifyDoneUpdatingApplication(appId, storedException);
-        storedException = e;
-      } finally {
-        if (event.getType().equals(RMStateStoreEventType.STORE_APP)) {
-          notifyDoneStoringApplication(appId, storedException);
-        } else {
-          notifyDoneUpdatingApplication(appId, storedException);
-        }
+        notifyStoreOperationFailed(e);
+          notifyDoneStoringApplicationAttempt(attemptState.getAttemptId(),
+              storedException);
+          notifyDoneUpdatingApplicationAttempt(attemptState.getAttemptId(),
+              storedException);
-        LOG
-          .error("Error storing appAttempt: " + attemptState.getAttemptId(), e);
-        storedException = e;
-      } finally {
-        if (event.getType().equals(RMStateStoreEventType.STORE_APP_ATTEMPT)) {
-          notifyDoneStoringApplicationAttempt(attemptState.getAttemptId(),
-            storedException);
-        } else {
-          notifyDoneUpdatingApplicationAttempt(attemptState.getAttemptId(),
-            storedException);
-        }
+        LOG.error(
+            "Error storing appAttempt: " + attemptState.getAttemptId(), e);
+        notifyStoreOperationFailed(e);
+        notifyDoneRemovingApplcation(appId, removedException);
-        removedException = e;
-      } finally {
-        notifyDoneRemovingApplcation(appId, removedException);
+        notifyStoreOperationFailed(e);
+   * In {#handleStoreEvent}, this method is called to notify the
+   * ResourceManager that the store operation has failed.
+   * @param failureCause the exception due to which the operation failed
+   */
+  private void notifyStoreOperationFailed(Exception failureCause) {
+    RMStateStoreOperationFailedEventType type;
+    if (failureCause instanceof StoreFencedException) {
+      type = RMStateStoreOperationFailedEventType.FENCED;
+    } else {
+      type = RMStateStoreOperationFailedEventType.FAILED;
+    }
+
+    rmDispatcher.getEventHandler().handle(
+        new RMStateStoreOperationFailedEvent(type, failureCause));
+  }
+
+  @SuppressWarnings("unchecked")
+  /**

INS31 INS8 INS8 INS8 INS8 INS79 INS83 INS39 INS42 INS44 INS8 INS54 INS54 INS54 INS54 INS42 INS45 MOV43 INS42 INS60 INS25 INS21 MOV8 INS12 MOV8 INS12 MOV8 INS12 MOV8 INS12 INS43 INS59 INS62 INS8 INS8 INS32 INS44 INS8 INS44 INS8 INS44 INS8 INS44 INS8 INS42 INS42 INS42 INS43 INS21 INS21 INS32 INS42 INS14 INS43 INS42 INS21 INS43 INS42 INS21 INS43 INS42 INS21 INS43 INS42 INS21 INS42 INS7 INS7 INS42 INS42 INS43 INS42 INS42 MOV42 INS32 MOV42 INS32 MOV42 INS32 INS42 INS32 INS42 INS40 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV21 MOV21 INS32 MOV21 INS42 INS42 MOV21 MOV21 INS32 INS42 INS42 INS32 INS42 INS42 DEL43 DEL43 DEL43 DEL42 DEL42 DEL7 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL8 DEL25 DEL8 DEL42 DEL42 DEL7 DEL42 DEL42 DEL32 DEL42 DEL40 DEL32 DEL8 DEL8 DEL25 DEL8 DEL42 DEL42 DEL7 DEL8