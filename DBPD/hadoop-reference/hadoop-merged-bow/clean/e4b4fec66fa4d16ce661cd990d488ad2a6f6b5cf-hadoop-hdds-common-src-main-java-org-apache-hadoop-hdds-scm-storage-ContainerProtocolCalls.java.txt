HDDS-1224. Restructure code to validate the response from server in the Read path (#806)



-import org.apache.hadoop.hdds.protocol.DatanodeDetails;
+import java.util.ArrayList;
-    ContainerCommandResponseProto response = xceiverClient.sendCommand(request);
-    validateContainerResponse(response);
-
+    ContainerCommandResponseProto response =
+        xceiverClient.sendCommand(request, getValidatorList());
-    ContainerCommandResponseProto response = xceiverClient.sendCommand(request);
-    validateContainerResponse(response);
+    ContainerCommandResponseProto response =
+        xceiverClient.sendCommand(request, getValidatorList());
-    ContainerCommandResponseProto response = xceiverClient.sendCommand(request);
-    validateContainerResponse(response);
+    ContainerCommandResponseProto response =
+        xceiverClient.sendCommand(request, getValidatorList());
-   * @param excludeDns datamode to exclude while executing the command
+   * @param validators functions to validate the response
-  public static XceiverClientReply readChunk(XceiverClientSpi xceiverClient,
-      ChunkInfo chunk, BlockID blockID, String traceID,
-      List<DatanodeDetails> excludeDns)
-      throws IOException {
-    ReadChunkRequestProto.Builder readChunkRequest = ReadChunkRequestProto
-        .newBuilder()
-        .setBlockID(blockID.getDatanodeBlockIDProtobuf())
-        .setChunkData(chunk);
+  public static ContainerProtos.ReadChunkResponseProto readChunk(
+      XceiverClientSpi xceiverClient, ChunkInfo chunk, BlockID blockID,
+      String traceID, List<CheckedBiFunction> validators) throws IOException {
+    ReadChunkRequestProto.Builder readChunkRequest =
+        ReadChunkRequestProto.newBuilder()
+            .setBlockID(blockID.getDatanodeBlockIDProtobuf())
+            .setChunkData(chunk);
-    ContainerCommandRequestProto.Builder builder = ContainerCommandRequestProto
-        .newBuilder()
-        .setCmdType(Type.ReadChunk)
-        .setContainerID(blockID.getContainerID())
-        .setTraceID(traceID)
-        .setDatanodeUuid(id)
-        .setReadChunk(readChunkRequest);
+    ContainerCommandRequestProto.Builder builder =
+        ContainerCommandRequestProto.newBuilder().setCmdType(Type.ReadChunk)
+            .setContainerID(blockID.getContainerID()).setTraceID(traceID)
+            .setDatanodeUuid(id).setReadChunk(readChunkRequest);
-    XceiverClientReply reply =
-        xceiverClient.sendCommand(request, excludeDns);
-    return reply;
+    ContainerCommandResponseProto reply =
+        xceiverClient.sendCommand(request, validators);
+    return reply.getReadChunk();
-    ContainerCommandResponseProto response = xceiverClient.sendCommand(request);
-    validateContainerResponse(response);
+    xceiverClient.sendCommand(request, getValidatorList());
-    ContainerCommandResponseProto response = client.sendCommand(request);
-    validateContainerResponse(response);
+    ContainerCommandResponseProto response =
+        client.sendCommand(request, getValidatorList());
-    ContainerCommandResponseProto response = client.sendCommand(
-        request.build());
-    validateContainerResponse(response);
+    client.sendCommand(request.build(), getValidatorList());
-    if(encodedToken != null) {
+    if (encodedToken != null) {
-    ContainerCommandResponseProto response =
-        client.sendCommand(request.build());
-    validateContainerResponse(response);
+    client.sendCommand(request.build(), getValidatorList());
-    ContainerCommandResponseProto response =
-        client.sendCommand(request.build());
-    validateContainerResponse(response);
+    client.sendCommand(request.build(), getValidatorList());
-        client.sendCommand(request.build());
-    validateContainerResponse(response);
+        client.sendCommand(request.build(), getValidatorList());
-    ContainerCommandResponseProto response = client.sendCommand(request);
-    validateContainerResponse(response);
-
+    ContainerCommandResponseProto response =
+        client.sendCommand(request, getValidatorList());
+
+  public static List<CheckedBiFunction> getValidatorList() {
+    List<CheckedBiFunction> validators = new ArrayList<>(1);
+    CheckedBiFunction<ContainerProtos.ContainerCommandRequestProto,
+        ContainerProtos.ContainerCommandResponseProto, IOException>
+        validator = (request, response) -> validateContainerResponse(response);
+    validators.add(validator);
+    return validators;
+  }

MOV26 UPD40 INS31 UPD43 INS83 INS83 INS74 INS42 INS8 INS40 UPD74 UPD42 INS21 INS43 INS43 INS60 INS60 INS21 INS41 UPD42 UPD66 UPD43 UPD43 INS32 INS32 MOV32 MOV32 MOV32 INS42 INS42 INS74 INS59 INS74 INS59 INS32 INS42 UPD42 UPD42 INS42 INS42 MOV42 MOV42 MOV42 INS32 INS32 INS32 INS32 INS43 INS43 INS42 INS14 INS43 INS43 INS43 INS43 INS42 INS86 INS42 INS42 INS42 INS32 INS32 INS32 UPD42 UPD42 MOV42 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS74 INS34 INS42 INS40 INS40 INS42 INS59 INS59 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL21