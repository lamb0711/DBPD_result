Merging trunk to HDFS-1623 branch.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1179484 13f79535-47bb-0310-9956-ffa450edef68

+import java.net.InetSocketAddress;
+import org.apache.hadoop.net.NetUtils;
+import org.apache.hadoop.yarn.api.records.NodeId;
-    LOG.info("DEBUG --- LeafQueue:" +
-        " name=" + queueName + 
-        ", fullname=" + getQueuePath());
+    if(LOG.isDebugEnabled()) {
+      LOG.debug("LeafQueue:" + " name=" + queueName
+        + ", fullname=" + getQueuePath());
+    }
-    LOG.info("DEBUG --- assignContainers:" +
-        " node=" + node.getHostName() + 
-        " #applications=" + activeApplications.size());
+    if(LOG.isDebugEnabled()) {
+      LOG.debug("assignContainers: node=" + node.getHostName()
+        + " #applications=" + activeApplications.size());
+    }
-      LOG.info("DEBUG --- pre-assignContainers for application "
-          + application.getApplicationId());
+      if(LOG.isDebugEnabled()) {
+        LOG.debug("pre-assignContainers for application "
+        + application.getApplicationId());
+      }
-      LOG.info("DEBUG --- post-assignContainers for application "
+      if(LOG.isDebugEnabled()) {
+        LOG.debug("post-assignContainers for application "
+      }
+
-      ContainerTokenIdentifier tokenidentifier =
-          new ContainerTokenIdentifier(container.getId(),
-              container.getNodeId().toString(), container.getResource());
+      NodeId nodeId = container.getNodeId();
+      ContainerTokenIdentifier tokenidentifier = new ContainerTokenIdentifier(
+          container.getId(), nodeId.toString(), container.getResource());
-      containerToken.setService(container.getNodeId().toString());
+      // RPC layer client expects ip:port as service for tokens
+      InetSocketAddress addr = NetUtils.createSocketAddr(nodeId.getHost(),
+          nodeId.getPort());
+      containerToken.setService(addr.getAddress().getHostAddress() + ":"
+          + addr.getPort());
-      LOG.info("DEBUG --- assignContainers:" +
-          " node=" + node.getHostName() + 
-          " application=" + application.getApplicationId().getId() + 
-          " priority=" + priority.getPriority() + 
-          " request=" + request + " type=" + type);
+      LOG.debug("assignContainers: node=" + node.getHostName()
+        + " application=" + application.getApplicationId().getId()
+        + " priority=" + priority.getPriority()
+        + " request=" + request + " type=" + type);

INS26 INS26 INS26 INS40 INS40 INS40 INS25 INS25 INS32 INS8 INS32 INS8 INS42 INS42 MOV21 INS42 INS42 MOV21 INS25 INS25 INS60 INS60 INS32 INS8 INS32 INS8 INS43 INS59 INS43 INS59 UPD42 UPD42 INS42 INS42 MOV21 INS42 INS42 MOV21 INS42 INS42 MOV32 INS42 INS42 INS32 INS27 UPD42 UPD45 MOV45 INS42 INS42 INS32 INS32 INS32 INS45 INS32 UPD45 MOV45 UPD45 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 MOV32 UPD42 MOV42 INS42 INS42 UPD45 UPD45 UPD42 UPD42 DEL45 DEL27 DEL32 DEL45 DEL27