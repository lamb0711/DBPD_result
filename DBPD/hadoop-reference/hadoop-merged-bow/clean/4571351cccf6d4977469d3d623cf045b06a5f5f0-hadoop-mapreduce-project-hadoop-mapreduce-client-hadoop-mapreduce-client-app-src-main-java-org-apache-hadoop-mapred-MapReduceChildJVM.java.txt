MAPREDUCE-7069. Add ability to specify user environment variables individually. Contributed by Jim Brennan

-import java.util.HashMap;
-import org.apache.hadoop.mapreduce.TypeConverter;
-  private static String getChildEnv(JobConf jobConf, boolean isMap) {
+  private static String getChildEnvProp(JobConf jobConf, boolean isMap) {
-      return jobConf.get(JobConf.MAPRED_MAP_TASK_ENV,
-          jobConf.get(JobConf.MAPRED_TASK_ENV));
+      return JobConf.MAPRED_MAP_TASK_ENV;
-    return jobConf.get(JobConf.MAPRED_REDUCE_TASK_ENV,
-        jobConf.get(JobConf.MAPRED_TASK_ENV));
+    return JobConf.MAPRED_REDUCE_TASK_ENV;
+  }
+
+  private static String getChildEnvDefaultValue(JobConf jobConf) {
+    // There is no default value for these - use the fallback value instead.
+    return jobConf.get(JobConf.MAPRED_TASK_ENV);
-    // Add the env variables passed by the user
-    String mapredChildEnv = getChildEnv(conf, task.isMapTask());
-    MRApps.setEnvFromInputString(environment, mapredChildEnv, conf);
+    boolean isMap = task.isMapTask();
-    // Set logging level in the environment.
-    // This is so that, if the child forks another "bin/hadoop" (common in
-    // streaming) it will have the correct loglevel.
-    environment.put(
-        "HADOOP_ROOT_LOGGER", 
-        MRApps.getChildLogLevel(conf, task.isMapTask()) + ",console");
+    // Remove these before adding the user variables to prevent
+    // MRApps.setEnvFromInputProperty() from appending to them.
+    String hadoopRootLoggerKey = "HADOOP_ROOT_LOGGER";
+    String hadoopClientOptsKey = "HADOOP_CLIENT_OPTS";
+    environment.remove(hadoopRootLoggerKey);
+    environment.remove(hadoopClientOptsKey);
-    // TODO: The following is useful for instance in streaming tasks. Should be
-    // set in ApplicationMaster's env by the RM.
-    String hadoopClientOpts = System.getenv("HADOOP_CLIENT_OPTS");
-    if (hadoopClientOpts == null) {
-      hadoopClientOpts = "";
-    } else {
-      hadoopClientOpts = hadoopClientOpts + " ";
+    // Add the environment variables passed by the user
+    MRApps.setEnvFromInputProperty(environment, getChildEnvProp(conf, isMap),
+        getChildEnvDefaultValue(conf), conf);
+
+    // Set HADOOP_ROOT_LOGGER and HADOOP_CLIENTS if the user did not set them.
+    if (!environment.containsKey(hadoopRootLoggerKey)) {
+      // Set the value for logging level in the environment.
+      // This is so that, if the child forks another "bin/hadoop" (common in
+      // streaming) it will have the correct loglevel.
+      environment.put(hadoopRootLoggerKey,
+          MRApps.getChildLogLevel(conf, task.isMapTask()) + ",console");
-    environment.put("HADOOP_CLIENT_OPTS", hadoopClientOpts);
-    
-    // setEnvFromInputString above will add env variable values from
-    // mapredChildEnv to existing variables. We want to overwrite
-    // HADOOP_ROOT_LOGGER and HADOOP_CLIENT_OPTS if the user set it explicitly.
-    Map<String, String> tmpEnv = new HashMap<String, String>();
-    MRApps.setEnvFromInputString(tmpEnv, mapredChildEnv, conf);
-    String[] keys = { "HADOOP_ROOT_LOGGER", "HADOOP_CLIENT_OPTS" };
-    for (String key : keys) {
-      if (tmpEnv.containsKey(key)) {
-        environment.put(key, tmpEnv.get(key));
+    if (!environment.containsKey(hadoopClientOptsKey)) {
+      // TODO: The following is useful for instance in streaming tasks.
+      // Should be set in ApplicationMaster's env by the RM.
+      String hadoopClientOptsValue = System.getenv(hadoopClientOptsKey);
+      if (hadoopClientOptsValue == null) {
+        hadoopClientOptsValue = "";
+      } else {
+        hadoopClientOptsValue = hadoopClientOptsValue + " ";
+      environment.put(hadoopClientOptsKey, hadoopClientOptsValue);

INS31 UPD42 INS83 INS83 MOV43 INS42 INS44 INS8 INS41 INS43 INS42 MOV41 INS60 INS60 INS21 INS21 INS25 INS25 INS40 INS42 MOV32 INS39 MOV43 INS59 MOV43 INS59 INS32 INS32 INS38 INS8 INS38 INS8 UPD42 MOV32 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS32 INS32 INS42 INS32 MOV21 INS32 MOV60 MOV25 MOV21 INS40 UPD42 MOV42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV43 INS42 UPD42 UPD42 UPD42 UPD42 MOV42 INS42 UPD42 UPD42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL40 DEL42 DEL42 DEL40 DEL32 DEL32 DEL42 DEL42 DEL40 DEL32 DEL42 DEL42 DEL32 DEL45 DEL45 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL85 DEL5 DEL42 DEL45 DEL45 DEL4 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL8 DEL25 DEL8 DEL70