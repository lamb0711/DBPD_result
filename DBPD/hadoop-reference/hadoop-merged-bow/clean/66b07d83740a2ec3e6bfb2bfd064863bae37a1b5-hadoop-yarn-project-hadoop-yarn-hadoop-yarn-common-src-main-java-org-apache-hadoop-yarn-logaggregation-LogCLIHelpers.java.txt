YARN-4966. Improve yarn logs to fetch container logs without specifying nodeId. Contributed by Xuan Gong.

-      String nodeId, String jobOwner, List<String> logType) throws IOException {
+      String nodeId, String jobOwner, List<String> logType)
+      throws IOException {
+    return dumpAContainersLogsForALogType(appId, containerId, nodeId, jobOwner,
+        logType, true);
+  }
+
+  @Private
+  @VisibleForTesting
+  public int dumpAContainersLogsForALogType(String appId, String containerId,
+      String nodeId, String jobOwner, List<String> logType,
+      boolean outputFailure) throws IOException {
-    if (!foundContainerLogs) {
+    if (!foundContainerLogs && outputFailure) {
+  public int dumpAContainersLogsForALogTypeWithoutNodeId(String appId,
+      String containerId, String jobOwner, List<String> logType)
+    throws IOException {
+    Path remoteRootLogDir = new Path(getConf().get(
+        YarnConfiguration.NM_REMOTE_APP_LOG_DIR,
+        YarnConfiguration.DEFAULT_NM_REMOTE_APP_LOG_DIR));
+    ApplicationId applicationId = ConverterUtils.toApplicationId(appId);
+    String user = jobOwner;
+    String logDirSuffix = LogAggregationUtils.getRemoteNodeLogDirSuffix(
+        getConf());
+    Path remoteAppLogDir = LogAggregationUtils.getRemoteAppLogDir(
+        remoteRootLogDir, applicationId, user, logDirSuffix);
+    RemoteIterator<FileStatus> nodeFiles;
+    try {
+      Path qualifiedLogDir =
+          FileContext.getFileContext(getConf()).makeQualified(remoteAppLogDir);
+      nodeFiles = FileContext.getFileContext(qualifiedLogDir.toUri(),
+          getConf()).listStatus(remoteAppLogDir);
+    } catch (FileNotFoundException fnf) {
+      logDirNotExist(remoteAppLogDir.toString());
+      return -1;
+    }
+    boolean foundContainerLogs = false;
+    while(nodeFiles.hasNext()) {
+      FileStatus thisNodeFile = nodeFiles.next();
+      if (!thisNodeFile.getPath().getName().endsWith(
+          LogAggregationUtils.TMP_FILE_SUFFIX)) {
+        AggregatedLogFormat.LogReader reader = null;
+        try {
+          reader =
+              new AggregatedLogFormat.LogReader(getConf(),
+              thisNodeFile.getPath());
+          if (logType == null) {
+            if (dumpAContainerLogs(containerId, reader, System.out,
+                thisNodeFile.getModificationTime()) > -1) {
+              foundContainerLogs = true;
+            }
+          } else {
+            if (dumpAContainerLogsForALogType(containerId, reader, System.out,
+                thisNodeFile.getModificationTime(), logType) > -1) {
+              foundContainerLogs = true;
+            }
+          }
+        } finally {
+          if (reader != null) {
+            reader.close();
+          }
+        }
+      }
+    }
+    if (!foundContainerLogs) {
+      containerLogNotFound(containerId);
+      return -1;
+    }
+    return 0;
+  }
+  @Private

INS31 INS31 INS78 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS44 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS42 INS41 INS39 INS42 INS25 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS42 INS60 INS60 INS60 INS60 INS60 INS60 INS54 INS60 INS61 MOV25 INS41 INS42 INS42 INS42 INS42 INS43 INS43 INS32 INS27 INS8 INS42 INS42 INS42 INS43 INS43 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS74 INS59 INS8 INS12 INS39 INS59 INS32 INS8 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS38 INS42 INS21 INS41 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS43 INS42 INS60 INS21 INS44 INS8 INS42 INS9 INS42 INS42 INS60 INS25 INS42 INS32 INS38 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS7 INS43 INS42 INS21 INS41 INS43 INS59 INS38 INS8 INS42 INS42 INS34 INS42 INS32 INS42 INS40 INS40 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS38 INS42 INS42 INS32 INS32 INS60 INS54 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS34 INS42 INS42 INS32 INS42 INS40 INS43 INS59 INS8 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS40 INS42 INS33 INS21 INS25 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS27 INS8 INS8 INS27 INS8 INS42 INS14 INS42 INS33 INS25 INS25 INS42 INS33 INS21 INS43 INS32 INS32 INS27 INS8 INS27 INS8 INS32 INS40 INS42 INS42 INS42 INS32 INS38 INS21 INS32 INS38 INS21 INS42 INS42 INS42 INS42 INS42 INS40 INS32 INS34 INS7 INS42 INS42 INS42 INS40 INS32 INS42 INS34 INS7 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS9