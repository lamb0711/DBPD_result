YARN-4830. Add support for resource types in the nodemanager. Contributed by Varun Vasudev.

+import org.apache.hadoop.yarn.api.records.Resource;
+import org.apache.hadoop.yarn.api.records.ResourceInformation;
+import org.apache.hadoop.yarn.exceptions.YarnRuntimeException;
+import org.apache.hadoop.yarn.util.resource.ResourceUtils;
+
+import java.util.Map;
+
+  /**
+   * Get the resources for the node.
+   * @param configuration configuration file
+   * @return the resources for the node
+   */
+  public static Resource getNodeResources(Configuration configuration) {
+    Configuration conf = new Configuration(configuration);
+    String memory = ResourceInformation.MEMORY_MB.getName();
+    String vcores = ResourceInformation.VCORES.getName();
+
+    Resource ret = Resource.newInstance(0, 0);
+    Map<String, ResourceInformation> resourceInformation =
+        ResourceUtils.getNodeResourceInformation(conf);
+    for (Map.Entry<String, ResourceInformation> entry : resourceInformation
+        .entrySet()) {
+      ret.setResourceInformation(entry.getKey(), entry.getValue());
+      LOG.debug("Setting key " + entry.getKey() + " to " + entry.getValue());
+    }
+    if (resourceInformation.containsKey(memory)) {
+      Long value = resourceInformation.get(memory).getValue();
+      if (value > Integer.MAX_VALUE) {
+        throw new YarnRuntimeException("Value '" + value
+            + "' for resource memory is more than the maximum for an integer.");
+      }
+      ResourceInformation memResInfo = resourceInformation.get(memory);
+      if(memResInfo.getValue() == 0) {
+        ret.setMemory(getContainerMemoryMB(conf));
+        LOG.debug("Set memory to " + ret.getMemory());
+      }
+    }
+    if (resourceInformation.containsKey(vcores)) {
+      Long value = resourceInformation.get(vcores).getValue();
+      if (value > Integer.MAX_VALUE) {
+        throw new YarnRuntimeException("Value '" + value
+            + "' for resource vcores is more than the maximum for an integer.");
+      }
+      ResourceInformation vcoresResInfo = resourceInformation.get(vcores);
+      if(vcoresResInfo.getValue() == 0) {
+        ret.setVirtualCores(getVCores(conf));
+        LOG.debug("Set vcores to " + ret.getVirtualCores());
+      }
+    }
+    LOG.debug("Node resource information map is " + ret);
+    return ret;
+  }

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS65 INS65 INS65 INS42 INS43 INS42 INS60 INS60 INS60 INS60 INS60 INS70 INS25 INS25 INS21 INS41 INS66 INS42 INS66 INS66 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS74 INS59 INS44 INS32 INS8 INS32 INS8 INS32 INS8 INS32 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS43 INS43 INS42 INS32 INS74 INS42 INS42 INS42 INS21 INS21 INS42 INS42 INS42 INS60 INS25 INS60 INS25 INS42 INS42 INS42 INS60 INS25 INS60 INS25 INS42 INS42 INS27 INS43 INS42 INS40 INS42 INS40 INS42 INS42 INS42 INS34 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS32 INS32 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS45 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS40 INS53 INS42 INS42 INS32 INS32 INS34 INS21 INS21 INS42 INS42 INS32 INS42 INS40 INS53 INS42 INS42 INS32 INS32 INS34 INS21 INS21 INS42 INS42 INS42 INS42 INS45 INS32 INS45 INS32 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS45 INS42 INS45 INS42 INS42 INS45 INS32 INS42 INS45 INS42 INS45 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS42