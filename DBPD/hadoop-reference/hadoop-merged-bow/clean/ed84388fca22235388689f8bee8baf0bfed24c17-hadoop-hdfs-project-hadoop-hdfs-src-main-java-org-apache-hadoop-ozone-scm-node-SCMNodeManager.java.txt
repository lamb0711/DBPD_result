HDFS-10912. Ozone:SCM: Add chill mode support to NodeManager. Contributed by Anu Engineer.

+import com.google.common.base.Optional;
-import java.util.concurrent.Executors;
-  private int safeModeNodeCount;
+  private int chillModeNodeCount;
+  private Optional<Boolean> inManualChillMode;
-    safeModeNodeCount = 1;
+    chillModeNodeCount = 1;
+    this.inManualChillMode =  Optional.absent();
-   * Get the minimum number of nodes to get out of safe mode.
+   * Get the minimum number of nodes to get out of Chill mode.
-  public int getMinimumSafeModeNodes() {
-    return safeModeNodeCount;
+  public int getMinimumChillModeNodes() {
+    return chillModeNodeCount;
-   * Sets the Minimum SafeModeNode count, used only in testing.
+   * Sets the Minimum chill mode nodes count, used only in testing.
-  public void setMinimumSafeModeNodes(int count) {
-    safeModeNodeCount = count;
+  public void setMinimumChillModeNodes(int count) {
+    chillModeNodeCount = count;
-   * Reports if we have exited out of safe mode.
+   * Reports if we have exited out of chill mode.
-   * @return true if we are out of safe mode.
+   * @return true if we are out of chill mode.
-  public boolean isOutOfNodeSafeMode() {
-    LOG.trace("Node count : {}", totalNodes.get());
+  public boolean isOutOfNodeChillMode() {
+    if (inManualChillMode.isPresent()) {
+      return !inManualChillMode.get();
+    }
-    //TODO : Support a boolean to force getting out of Safe mode.
-    return (totalNodes.get() >= getMinimumSafeModeNodes());
+    return (totalNodes.get() >= getMinimumChillModeNodes());
+  }
+
+  /**
+   * Clears the manual chill mode.
+   */
+  @Override
+  public void clearChillModeFlag() {
+    this.inManualChillMode = Optional.absent();
+  }
+
+  /**
+   * Returns chill mode Status string.
+   * @return String
+   */
+  @Override
+  public String getChillModeStatus() {
+    if (inManualChillMode.isPresent() && inManualChillMode.get()) {
+      return "Manual chill mode is set to true." +
+          getNodeStatus();
+    }
+
+    if (inManualChillMode.isPresent() && !inManualChillMode.get()) {
+      return "Manual chill mode is set to false." +
+          getNodeStatus();
+    }
+
+    if (isOutOfNodeChillMode()) {
+      return "Out of chill mode." + getNodeStatus();
+    } else {
+      return "Still in chill mode. Waiting on nodes to report in."
+          + getNodeStatus();
+    }
+  }
+
+  /**
+   * Returns a node status string.
+   * @return - String
+   */
+  private String getNodeStatus() {
+    final String chillModeStatus = " %d of out of total "
+        + "%d nodes have reported in.";
+    return String.format(chillModeStatus, totalNodes.get(),
+        getMinimumChillModeNodes());
+  }
+
+  /**
+   * Returns the status of Manual chill Mode flag.
+   *
+   * @return true if forceEnterChillMode has been called, false if
+   * forceExitChillMode or status is not set. eg. clearChillModeFlag.
+   */
+  @Override
+  public boolean isInManualChillMode() {
+    if(this.inManualChillMode.isPresent()) {
+      return this.inManualChillMode.get();
+    }
+    return false;
+  }
+
+  /**
+   * Forcefully exits the chill mode even if we have not met the minimum
+   * criteria of exiting the chill mode.
+   */
+  @Override
+  public void forceExitChillMode() {
+    this.inManualChillMode = Optional.of(false);
+  }
+
+  /**
+   * Forcefully enters chill mode, even if all chill mode conditions are met.
+   */
+  @Override
+  public void forceEnterChillMode() {
+    this.inManualChillMode = Optional.of(true);

MOV26 UPD40 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS74 INS59 UPD42 UPD42 UPD42 INS29 INS78 INS83 INS39 INS42 INS8 INS29 INS78 INS83 INS43 INS42 INS8 INS29 INS83 INS43 INS42 INS8 INS29 INS78 INS83 INS39 INS42 INS8 INS29 INS78 INS83 INS39 INS42 INS8 INS29 INS78 INS83 INS39 INS42 INS8 UPD42 INS43 INS43 INS42 INS21 INS25 INS65 INS42 INS21 INS65 INS65 INS42 INS42 INS25 INS25 INS25 INS65 INS65 INS42 INS60 INS41 INS65 INS65 INS42 INS25 INS41 INS65 INS42 INS21 INS65 INS42 INS21 INS42 INS42 INS7 UPD66 UPD42 UPD66 UPD66 UPD66 INS32 INS8 INS66 INS7 INS66 INS66 INS27 INS8 INS27 INS8 INS32 INS8 INS8 INS66 INS66 INS83 INS43 INS59 INS32 INS66 INS66 INS66 INS32 INS8 INS9 INS66 INS66 INS7 INS66 INS7 UPD42 INS22 INS32 UPD42 INS42 INS42 INS41 INS22 INS32 INS32 INS32 INS41 INS32 INS38 INS41 INS42 INS41 INS41 INS42 INS42 INS27 INS42 INS42 INS42 MOV32 INS32 INS22 INS42 INS41 INS22 INS32 INS22 INS32 INS52 INS42 INS42 INS42 INS38 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS32 INS27 INS27 INS27 INS45 INS45 INS42 INS52 INS42 INS32 INS52 INS42 INS42 INS42 INS9 INS52 INS42 INS42 INS42 INS9 INS32 UPD42 INS45 INS32 INS42 INS42 INS45 INS32 INS45 INS32 INS45 INS32 INS22 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS52 INS42 DEL45 DEL32 DEL21