YARN-5325. Stateless ARMRMProxy policies implementation. (Carlo Curino via Subru).

(cherry picked from commit 11c5336522d3504598fb94eee288d54df73418c6)

-/**
+/*
-package org.apache.hadoop.yarn.server.federation.policies.router;
+package org.apache.hadoop.yarn.server.federation.policies;
+
+import java.util.Map;
-import org.apache.hadoop.yarn.server.federation.policies.FederationPolicyInitializationContext;
-import org.apache.hadoop.yarn.server.federation.policies.FederationPolicyInitializationContextValidator;
-import org.apache.hadoop.yarn.server.federation.store.records.SubClusterIdInfo;
-import java.util.Map;
-
- * Abstract class provides common validation of reinitialize(), for all
- * policies that are "weight-based".
+ * Base abstract class for a weighted {@link ConfigurableFederationPolicy}.
-public abstract class BaseWeightedRouterPolicy
-    implements FederationRouterPolicy {
+public abstract class AbstractConfigurableFederationPolicy
+    implements ConfigurableFederationPolicy {
+  private boolean isDirty;
-  public BaseWeightedRouterPolicy() {
+  public AbstractConfigurableFederationPolicy() {
-  public void reinitialize(FederationPolicyInitializationContext
-      federationPolicyContext)
+  public void reinitialize(
+      FederationPolicyInitializationContext initializationContext)
+    isDirty = true;
-        .validate(federationPolicyContext, this.getClass().getCanonicalName());
+        .validate(initializationContext, this.getClass().getCanonicalName());
-    WeightedPolicyInfo newPolicyInfo = WeightedPolicyInfo
-        .fromByteBuffer(
-            federationPolicyContext.getSubClusterPolicyConfiguration()
-                .getParams());
+    WeightedPolicyInfo newPolicyInfo = WeightedPolicyInfo.fromByteBuffer(
+        initializationContext.getSubClusterPolicyConfiguration().getParams());
+    // and signal to childs that the reinit is free via isDirty var.
+      isDirty = false;
-    this.policyContext = federationPolicyContext;
+    this.policyContext = initializationContext;
+   *
-   * @throws FederationPolicyInitializationException if the configuration is
-   * not valid.
+   *
+   * @throws FederationPolicyInitializationException if the configuration is not
+   *           valid.
-  public void validate(WeightedPolicyInfo newPolicyInfo) throws
-      FederationPolicyInitializationException {
+  public void validate(WeightedPolicyInfo newPolicyInfo)
+      throws FederationPolicyInitializationException {
-      throw new FederationPolicyInitializationException("The policy to "
-          + "validate should not be null.");
-    }
-    Map<SubClusterIdInfo, Float> newWeights =
-        newPolicyInfo.getRouterPolicyWeights();
-    if (newWeights == null || newWeights.size() < 1) {
-          "Weight vector cannot be null/empty.");
+          "The policy to " + "validate should not be null.");
+  /**
+   * Returns true whether the last reinitialization requires actual changes, or
+   * was "free" as the weights have not changed. This is used by subclasses
+   * overriding reinitialize and calling super.reinitialize() to know wheter to
+   * quit early.
+   *
+   * @return whether more work is needed to initialize.
+   */
+  public boolean getIsDirty() {
+    return isDirty;
+  }
-   * configuration.
+   *         configuration.
-   *                   configuration.
+   *          configuration.
-  public void setPolicyInfo(
-      WeightedPolicyInfo policyInfo) {
+  public void setPolicyInfo(WeightedPolicyInfo policyInfo) {
+   *
+   *
+   *
-    Map<SubClusterId, SubClusterInfo> activeSubclusters = getPolicyContext()
-        .getFederationStateStoreFacade().getSubClusters(true);
+    Map<SubClusterId, SubClusterInfo> activeSubclusters =
+        getPolicyContext().getFederationStateStoreFacade().getSubClusters(true);
-
-

MOV26 UPD40 UPD42 UPD43 INS23 INS31 UPD42 INS83 INS39 INS59 UPD42 INS8 INS29 INS83 INS39 INS42 INS8 UPD66 INS65 UPD66 INS42 UPD42 INS21 MOV25 INS65 INS65 INS41 INS42 INS7 UPD66 UPD66 INS66 INS66 INS66 INS66 INS66 INS42 INS42 INS9 UPD42 INS21 UPD42 INS7 INS42 INS9 UPD42 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL29 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL34 DEL27 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL8