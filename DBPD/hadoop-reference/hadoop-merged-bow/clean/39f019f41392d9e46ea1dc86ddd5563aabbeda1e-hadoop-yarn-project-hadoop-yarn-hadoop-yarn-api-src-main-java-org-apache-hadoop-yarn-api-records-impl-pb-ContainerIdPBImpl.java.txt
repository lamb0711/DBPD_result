YARN-735. Make ApplicationAttemptId, ContainerId and NodeId immutable. Contributed by Jian He.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488439 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.yarn.proto.YarnProtos.ContainerIdProtoOrBuilder;
+
+import com.google.common.base.Preconditions;
-  ContainerIdProto proto = ContainerIdProto.getDefaultInstance();
+  ContainerIdProto proto = null;
-  boolean viaProto = false;
-  
-    viaProto = true;
+    this.applicationAttemptId = convertFromProtoFormat(proto.getAppAttemptId());
-  public synchronized ContainerIdProto getProto() {
-    mergeLocalToProto();
-    proto = viaProto ? proto : builder.build();
-    viaProto = true;
+  public ContainerIdProto getProto() {
-  private synchronized void mergeLocalToBuilder() {
-    if (this.applicationAttemptId != null && !
-        ((ApplicationAttemptIdPBImpl)applicationAttemptId).getProto().equals(
-            builder.getAppAttemptId())) {
-      builder.setAppAttemptId(convertToProtoFormat(this.applicationAttemptId));
-    }
-  }
-
-  private synchronized void mergeLocalToProto() {
-    if (viaProto) 
-      maybeInitBuilder();
-    mergeLocalToBuilder();
-    proto = builder.build();
-    viaProto = true;
-  }
-
-  private synchronized void maybeInitBuilder() {
-    if (viaProto || builder == null) {
-      builder = ContainerIdProto.newBuilder(proto);
-    }
-    viaProto = false;
-  }
-    
-  
-  public synchronized int getId() {
-    ContainerIdProtoOrBuilder p = viaProto ? proto : builder;
-    return (p.getId());
+  public int getId() {
+    Preconditions.checkNotNull(proto);
+    return proto.getId();
-  public synchronized void setId(int id) {
-    maybeInitBuilder();
+  protected void setId(int id) {
+    Preconditions.checkNotNull(builder);
-  public synchronized ApplicationAttemptId getApplicationAttemptId() {
-    ContainerIdProtoOrBuilder p = viaProto ? proto : builder;
-    if (this.applicationAttemptId != null) {
-      return this.applicationAttemptId;
-    }
-    if (!p.hasAppAttemptId()) {
-      return null;
-    }
-    this.applicationAttemptId = convertFromProtoFormat(p.getAppAttemptId());
+  public ApplicationAttemptId getApplicationAttemptId() {
-  public synchronized void setApplicationAttemptId(ApplicationAttemptId atId) {
-    maybeInitBuilder();
-    if (atId == null) 
-      builder.clearAppAttemptId();
+  protected void setApplicationAttemptId(ApplicationAttemptId atId) {
+    if (atId != null) {
+      Preconditions.checkNotNull(builder);
+      builder.setAppAttemptId(convertToProtoFormat(atId));
+    }
+
+  @Override
+  protected void build() {
+    proto = builder.build();
+    builder = null;
+  }

MOV31 UPD40 INS31 INS31 INS31 INS83 MOV43 INS42 INS8 INS78 INS39 UPD42 UPD83 MOV78 UPD83 MOV83 MOV43 INS42 MOV8 MOV78 UPD83 MOV83 MOV39 UPD42 MOV42 MOV44 MOV8 MOV78 UPD83 INS42 INS8 INS33 MOV41 INS42 INS21 INS41 MOV21 MOV21 MOV21 INS32 INS32 INS27 INS8 MOV22 INS32 UPD42 MOV42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD42 INS42 MOV33 INS21 MOV21 INS33 INS42 INS32 INS32 INS42 INS42 INS42 UPD42 MOV42 MOV42 INS42 DEL42 DEL42 DEL32 DEL39 DEL42 DEL9 DEL59 DEL23 DEL42 DEL9 DEL83 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL16 DEL7 DEL21 DEL42 DEL9 DEL7 DEL21 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL21 DEL25 DEL42 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL16 DEL59 DEL60 DEL42 DEL42 DEL32 DEL36 DEL41 DEL8 DEL31 DEL83 DEL52 DEL42 DEL22 DEL27 DEL42 DEL43 DEL42 DEL11 DEL36 DEL32 DEL42 DEL42 DEL32 DEL32 DEL38 DEL27 DEL8 DEL83 DEL83 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL16 DEL59 DEL60 DEL52 DEL42 DEL22 DEL33 DEL27 DEL25 DEL42 DEL42 DEL32 DEL38 DEL33 DEL41 DEL8 DEL25 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL41 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL42 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL25 DEL8 DEL31 DEL83 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL33 DEL27 DEL27 DEL8 DEL25 DEL42 DEL9 DEL7 DEL21 DEL8