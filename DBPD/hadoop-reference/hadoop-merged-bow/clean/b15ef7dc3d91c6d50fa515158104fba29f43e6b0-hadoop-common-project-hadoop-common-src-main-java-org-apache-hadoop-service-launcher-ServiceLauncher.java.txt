HADOOP-16384: S3A: Avoid inconsistencies between DDB and S3.

Contributed by Steve Loughran

Contains

- HADOOP-16397. Hadoop S3Guard Prune command to support a -tombstone option.
- HADOOP-16406. ITestDynamoDBMetadataStore.testProvisionTable times out intermittently

This patch doesn't fix the underlying problem but it

* changes some tests to clean up better
* does a lot more in logging operations in against DDB, if enabled
* adds an entry point to dump the state of the metastore and s3 tables (precursor to fsck)
* adds a purge entry point to help clean up after a test run has got a store into a mess
* s3guard prune command adds -tombstone option to only clear tombstones

The outcome is that tests should pass consistently and if problems occur we have better diagnostics.

Change-Id: I3eca3f5529d7f6fec398c0ff0472919f08f054eb

-   * {@link #coreServiceLaunch(Configuration, List, boolean, boolean)}
+   * {@link #coreServiceLaunch(Configuration, Service, List, boolean, boolean)}
-    if (exitException.getExitCode() != 0) {
+    if (exitException.getExitCode() == LauncherExitCodes.EXIT_USAGE) {
-    LOG.debug("Exception raised", exitException);
-    serviceExitCode = exitException.getExitCode();
+    int exitCode = exitException.getExitCode();
+    if (exitCode != 0) {
+      LOG.debug("Exception raised with exit code {}",
+          exitCode,
+          exitException);
+      Throwable cause = exitException.getCause();
+      if (cause != null) {
+        // log the nested exception in more detail
+        LOG.warn("{}", cause.toString(), cause);
+      }
+    }
+    serviceExitCode = exitCode;
-  @VisibleForTesting
-    
+    return launchService(conf, null, processedArgs, addShutdownHook, execute);
+  }
+
+  /**
+   * Launch a service catching all exceptions and downgrading them to exit codes
+   * after logging.
+   *
+   * Sets {@link #serviceException} to this value.
+   * @param conf configuration to use
+   * @param instance optional instance of the service.
+   * @param processedArgs command line after the launcher-specific arguments
+   * have been stripped out.
+   * @param addShutdownHook should a shutdown hook be added to terminate
+   * this service on shutdown. Tests should set this to false.
+   * @param execute execute/wait for the service to stop.
+   * @return an exit exception, which will have a status code of 0 if it worked
+   */
+  public ExitUtil.ExitException launchService(Configuration conf,
+      S instance,
+      List<String> processedArgs,
+      boolean addShutdownHook,
+      boolean execute) {
+
-    
+
-      int exitCode = coreServiceLaunch(conf, processedArgs, addShutdownHook,
-          execute);
+      int exitCode = coreServiceLaunch(conf, instance, processedArgs,
+          addShutdownHook, execute);
+      // other errors need a full log.
+      LOG.error("Exception raised {}",
+          service != null
+              ? (service.toString() + " in state  " + service.getServiceState())
+              : "during service instantiation",
+          thrown);
+   * @param instance optional instance of the service.
+      S instance,
-    instantiateService(conf);
+    if (instance == null) {
+      instantiateService(conf);
+    } else {
+      // service already exists, so instantiate
+      configuration = conf;
+      service = instance;
+    }
-    exitException = new ServiceLaunchException(exitCode, message);
-    exitException.initCause(thrown);
+    exitException = new ServiceLaunchException(exitCode, thrown, message);
-      throw new ServiceLaunchException(EXIT_COMMAND_ARGUMENT_ERROR,
+      throw new ServiceLaunchException(EXIT_COMMAND_ARGUMENT_ERROR, e,

INS31 MOV29 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS8 INS29 INS44 INS44 INS60 INS25 INS40 INS43 INS42 INS74 INS42 INS39 INS42 INS39 INS42 INS41 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS65 INS43 INS42 INS25 UPD27 INS39 INS59 INS27 INS8 INS42 INS43 INS43 INS32 INS66 INS66 INS66 INS65 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS42 INS66 INS42 INS27 INS8 INS8 MOV69 INS40 INS42 MOV32 INS42 INS34 MOV21 INS60 INS25 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS67 INS42 INS33 MOV21 INS21 INS21 INS69 INS43 INS59 INS27 INS8 INS42 INS21 INS7 INS7 INS42 INS43 UPD45 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS16 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS27 INS36 INS45 INS42 INS42 INS42 INS33 INS27 INS32 INS45 INS32 INS42 INS42 INS42 INS42 DEL34 DEL42 DEL78 DEL42 DEL42 DEL42 DEL32 DEL21