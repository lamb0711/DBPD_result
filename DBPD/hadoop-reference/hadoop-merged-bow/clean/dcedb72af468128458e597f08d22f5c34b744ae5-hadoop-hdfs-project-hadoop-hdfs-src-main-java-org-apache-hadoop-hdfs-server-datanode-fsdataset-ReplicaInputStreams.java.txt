Revert "HADOOP-10930. Refactor: Wrap Datanode IO related operations. Contributed by Xiaoyu Yao."

This reverts commit aeecfa24f4fb6af289920cbf8830c394e66bd78e.

-import java.io.FileDescriptor;
-import java.io.FileInputStream;
-import java.io.IOException;
-import org.apache.hadoop.hdfs.server.datanode.DataNode;
-import org.apache.hadoop.io.nativeio.NativeIO;
-import org.apache.hadoop.io.nativeio.NativeIOException;
-import org.slf4j.Logger;
-  public static final Logger LOG = DataNode.LOG;
-
-  private InputStream dataIn;
-  private InputStream checksumIn;
-  private FsVolumeReference volumeRef;
-  private FileDescriptor dataInFd = null;
+  private final InputStream dataIn;
+  private final InputStream checksumIn;
+  private final FsVolumeReference volumeRef;
-  public ReplicaInputStreams(InputStream dataStream,
-      InputStream checksumStream, FsVolumeReference volumeRef) {
+  public ReplicaInputStreams(InputStream dataStream, InputStream checksumStream,
+      FsVolumeReference volumeRef) {
-    if (dataIn instanceof FileInputStream) {
-      try {
-        dataInFd = ((FileInputStream) dataIn).getFD();
-      } catch (Exception e) {
-        LOG.warn("Could not get file descriptor for inputstream of class " +
-            this.dataIn.getClass());
-      }
-    } else {
-      LOG.debug("Could not get file descriptor for inputstream of class " +
-          this.dataIn.getClass());
-    }
-  public FileDescriptor getDataInFd() {
-    return dataInFd;
-  }
-
-  public FsVolumeReference getVolumeRef() {
-    return volumeRef;
-  }
-
-  public void readDataFully(byte[] buf, int off, int len)
-      throws IOException {
-    IOUtils.readFully(dataIn, buf, off, len);
-  }
-
-  public void readChecksumFully(byte[] buf, int off, int len)
-      throws IOException {
-    IOUtils.readFully(checksumIn, buf, off, len);
-  }
-
-  public void skipDataFully(long len) throws IOException {
-    IOUtils.skipFully(dataIn, len);
-  }
-
-  public void skipChecksumFully(long len) throws IOException {
-    IOUtils.skipFully(checksumIn, len);
-  }
-
-  public void closeChecksumStream() throws IOException {
-    IOUtils.closeStream(checksumIn);
-    checksumIn = null;
-  }
-
-  public void dropCacheBehindReads(String identifier, long offset, long len,
-      int flags) throws NativeIOException {
-    assert this.dataInFd != null : "null dataInFd!";
-    NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(
-        identifier, dataInFd, offset, len, flags);
-  }
-
-  public void closeStreams() throws IOException {
-    IOException ioe = null;
-    if(checksumIn!=null) {
-      try {
-        checksumIn.close(); // close checksum file
-      } catch (IOException e) {
-        ioe = e;
-      }
-      checksumIn = null;
-    }
-    if(dataIn!=null) {
-      try {
-        dataIn.close(); // close data file
-      } catch (IOException e) {
-        ioe = e;
-      }
-      dataIn = null;
-      dataInFd = null;
-    }
-    if (volumeRef != null) {
-      IOUtils.cleanup(null, volumeRef);
-      volumeRef = null;
-    }
-    // throw IOException if there is any
-    if(ioe!= null) {
-      throw ioe;
-    }
-  }
-
-    dataIn = null;
-    dataInFd = null;
-    checksumIn = null;
-    volumeRef = null;

INS83 INS83 INS83 INS8 MOV21 MOV21 MOV21 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL40 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL33 DEL59 DEL23 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL52 DEL42 DEL22 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL42 DEL42 DEL45 DEL52 DEL42 DEL22 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL25 DEL8 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL85 DEL5 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL85 DEL5 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL33 DEL7 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL52 DEL42 DEL22 DEL33 DEL27 DEL45 DEL6 DEL40 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL7 DEL21 DEL8 DEL12 DEL54 DEL42 DEL33 DEL7 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL7 DEL21 DEL8 DEL12 DEL54 DEL42 DEL33 DEL7 DEL21 DEL42 DEL33 DEL7 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL33 DEL42 DEL32 DEL21 DEL42 DEL33 DEL7 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL53 DEL8 DEL25 DEL8 DEL31 DEL42 DEL33 DEL7 DEL21 DEL42 DEL33 DEL7 DEL21 DEL42 DEL33 DEL7 DEL21 DEL42 DEL33 DEL7 DEL21