HDDS-1649. On installSnapshot notification from OM leader, download checkpoint and reload OM state (#948)


+  // Active OMs denote OMs which are up and running
+  private List<OzoneManager> activeOMs;
+  private List<OzoneManager> inactiveOMs;
+
+      List<OzoneManager> activeOMList,
+      List<OzoneManager> inactiveOMList,
+    this.activeOMs = activeOMList;
+    this.inactiveOMs = inactiveOMList;
+  public boolean isOMActive(String omNodeId) {
+    return activeOMs.contains(ozoneManagerMap.get(omNodeId));
+  }
+
+  /**
+   * Start a previously inactive OM.
+   */
+  public void startInactiveOM(String omNodeID) throws IOException {
+    OzoneManager ozoneManager = ozoneManagerMap.get(omNodeID);
+    if (!inactiveOMs.contains(ozoneManager)) {
+      throw new IOException("OM is already active.");
+    } else {
+      ozoneManager.start();
+      activeOMs.add(ozoneManager);
+      inactiveOMs.remove(ozoneManager);
+    }
+  }
+
+    private List<OzoneManager> activeOMs = new ArrayList<>();
+    private List<OzoneManager> inactiveOMs = new ArrayList<>();
+      if (numOfActiveOMs > numOfOMs) {
+        throw new IllegalArgumentException("Number of active OMs cannot be " +
+            "more than the total number of OMs");
+      }
-      MiniOzoneHAClusterImpl cluster = new MiniOzoneHAClusterImpl(conf, omMap,
-          scm, hddsDatanodes);
+      MiniOzoneHAClusterImpl cluster = new MiniOzoneHAClusterImpl(
+          conf, omMap, activeOMs, inactiveOMs, scm, hddsDatanodes);
-            om.start();
-            LOG.info("Started OzoneManager RPC server at " +
-                om.getOmRpcServerAddr());
+            if (i <= numOfActiveOMs) {
+              om.start();
+              activeOMs.add(om);
+              LOG.info("Started OzoneManager RPC server at " +
+                  om.getOmRpcServerAddr());
+            } else {
+              inactiveOMs.add(om);
+              LOG.info("Intialized OzoneManager at " + om.getOmRpcServerAddr()
+                  + ". This OM is currently inactive (not running).");
+            }

INS23 INS23 INS31 INS31 INS83 INS74 INS59 INS83 INS74 INS59 INS44 INS44 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS23 INS23 INS43 INS43 INS42 INS43 INS43 INS42 INS74 INS42 INS74 INS42 INS21 INS21 INS43 INS42 INS41 INS65 INS43 INS42 INS42 INS60 INS25 INS83 INS74 INS59 INS83 INS74 INS59 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS43 INS7 INS7 INS42 INS32 INS66 INS42 INS43 INS59 INS38 INS8 INS8 INS43 INS43 INS42 INS14 INS43 INS43 INS42 INS14 INS25 INS42 INS42 INS42 INS42 INS22 INS42 INS22 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS53 INS21 INS21 INS21 INS42 INS42 INS74 INS42 INS42 INS74 INS27 INS8 MOV43 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS32 INS32 INS32 INS43 INS43 INS42 INS42 INS53 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 MOV43 INS42 INS42 INS42 INS43 INS27 INS42 INS45 INS45 INS25 INS27 INS8 INS8 INS42 INS42 MOV21 INS21 MOV21 INS21 INS21 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS45 INS32 INS45 INS42 INS42