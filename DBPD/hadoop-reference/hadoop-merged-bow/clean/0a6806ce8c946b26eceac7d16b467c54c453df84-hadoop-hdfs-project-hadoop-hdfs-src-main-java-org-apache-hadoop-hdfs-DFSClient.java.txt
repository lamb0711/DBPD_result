HDFS-3646. LeaseRenewer can hold reference to inactive DFSClient instances forever (Kihwal Lee via daryn)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1363170 13f79535-47bb-0310-9956-ffa450edef68

-  final LeaseRenewer leaserenewer;
+  private final String authority;
-    final String authority = nameNodeUri == null? "null": nameNodeUri.getAuthority();
-    this.leaserenewer = LeaseRenewer.getInstance(authority, ugi, this);
-    this.clientName = leaserenewer.getClientName(dfsClientConf.taskId);
+    this.authority = nameNodeUri == null? "null": nameNodeUri.getAuthority();
+    this.clientName = "DFSClient_" + dfsClientConf.taskId + "_" + 
+        DFSUtil.getRandom().nextInt()  + "_" + Thread.currentThread().getId();
-  /** Put a file. */
+  /** Return the lease renewer instance. The renewer thread won't start
+   *  until the first output stream is created. The same instance will
+   *  be returned until all output streams are closed.
+   */
+  public synchronized LeaseRenewer getLeaseRenewer() throws IOException {
+      return LeaseRenewer.getInstance(authority, ugi, this);
+  }
+
+  /** Get a lease and start automatic renewal */
+  private void beginFileLease(final String src, final DFSOutputStream out) 
+      throws IOException {
+    getLeaseRenewer().put(src, out, this);
+  }
+
+  /** Stop renewal of lease for the file. */
+  void endFileLease(final String src) throws IOException {
+    getLeaseRenewer().closeFile(src, this);
+  }
+    
+
+  /** Put a file. Only called from LeaseRenewer, where proper locking is
+   *  enforced to consistently update its local dfsclients array and 
+   *  client's filesBeingWritten map.
+   */
-  /** Remove a file. */
+  /** Remove a file. Only called from LeaseRenewer. */
+
+    try {
+      // remove reference to this client and stop the renewer,
+      // if there is no more clients under the renewer.
+      getLeaseRenewer().closeClient(this);
+    } catch (IOException ioe) {
+       LOG.info("Exception occurred while aborting the client. " + ioe);
+    }
-      leaserenewer.closeClient(this);
+      getLeaseRenewer().closeClient(this);
-    leaserenewer.put(src, result, this);
+    beginFileLease(src, result);
-    leaserenewer.put(src, result, this);
+    beginFileLease(src, result);
-    leaserenewer.put(src, result, this);
+    beginFileLease(src, result);

INS31 INS31 INS31 INS83 MOV43 INS29 INS83 INS83 MOV43 INS42 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS29 INS39 INS42 INS44 INS43 INS8 UPD42 INS65 INS42 INS41 INS65 INS83 INS43 INS42 INS83 INS43 INS42 INS42 INS21 INS65 INS83 INS43 INS42 INS42 INS21 INS54 INS66 INS66 INS66 MOV32 INS66 INS42 INS42 INS32 INS66 INS42 INS32 UPD66 INS66 INS66 UPD66 INS8 INS12 MOV16 INS27 INS32 INS42 INS42 INS42 INS52 INS32 INS42 INS42 INS52 INS21 INS44 INS8 UPD42 UPD42 UPD42 UPD42 INS45 INS40 INS45 INS32 INS45 INS32 INS42 INS42 INS32 INS43 INS42 INS21 INS32 INS42 INS32 UPD42 MOV42 INS32 INS42 INS52 INS42 INS32 INS32 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS27 UPD42 MOV42 INS45 INS42 DEL83 DEL42 DEL59 DEL60 DEL40 DEL32 DEL42 DEL52 DEL42 DEL52 DEL42 DEL52