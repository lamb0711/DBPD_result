HDFS-10745. Directly resolve paths into INodesInPath. Contributed by Daryn Sharp.

+    final INodesInPath iip;
-      src = fsd.resolvePath(pc, srcArg);
+      iip = fsd.resolvePath(pc, srcArg);
+      src = iip.getPath();
+      iip = fsd.getINodesInPath(src, true);
-    final INodesInPath iip = fsd.getINodesInPath(src, true);
-      src = fsd.resolvePath(pc, srcArg);
-      final INodesInPath iip = fsd.getINodesInPath(src, resolveLink);
+      final INodesInPath iip = fsd.resolvePath(pc, srcArg, resolveLink);
+      src = iip.getPath();
-    src = fsd.resolvePath(pc, src);
-    final INodesInPath iip = fsd.getINodesInPath(src, true);
+    final INodesInPath iip = fsd.resolvePath(pc, src);
-    src = fsd.resolvePath(pc, src);
-    final INodesInPath iip = fsd.getINodesInPath(src, false);
+    final INodesInPath iip = fsd.resolvePath(pc, src, false);
-      src = fsd.resolvePath(pc, src);
-      final INodesInPath iip = fsd.getINodesInPath(src, true);
+      final INodesInPath iip = fsd.resolvePath(pc, src);
+      src = iip.getPath();
-    String srcs = FSDirectory.normalizePath(src);
-    if (FSDirectory.isExactReservedName(src)) {
-      return FSDirectory.DOT_RESERVED_STATUS;
-    }
-
-    if (srcs.endsWith(HdfsConstants.SEPARATOR_DOT_SNAPSHOT_DIR)) {
-      if (fsd.getINode4DotSnapshot(srcs) != null) {
-        return new HdfsFileStatus(0, true, 0, 0, 0, 0, null, null, null, null,
-            HdfsFileStatus.EMPTY_NAME, -1L, 0, null,
-            HdfsConstants.BLOCK_STORAGE_POLICY_ID_UNSPECIFIED, null);
-      }
-      return null;
-    }
-
-      final INodesInPath iip = fsd.getINodesInPath(srcs, resolveLink);
-      return getFileInfo(fsd, src, iip, isRawPath, true);
+      HdfsFileStatus status = null;
+      final INodesInPath iip = fsd.getINodesInPath(src, resolveLink);
+      if (FSDirectory.isExactReservedName(iip.getPathComponents())) {
+        status = FSDirectory.DOT_RESERVED_STATUS;
+      } else if (iip.isDotSnapshotDir()) {
+        if (fsd.getINode4DotSnapshot(iip) != null) {
+          status = FSDirectory.DOT_SNAPSHOT_DIR_STATUS;
+        }
+      } else {
+        status = getFileInfo(fsd, src, iip, isRawPath, true);
+      }
+      return status;
-      src = fsd.resolvePath(pc, src);
-      iip = fsd.getINodesInPath(src, false);
+      iip = fsd.resolvePath(pc, src, false);

MOV60 INS8 MOV21 INS54 INS43 INS8 MOV8 INS42 INS21 INS21 INS60 INS21 MOV32 INS60 INS21 MOV60 MOV60 INS25 INS41 INS7 INS7 INS83 MOV43 INS59 INS7 UPD42 INS42 MOV83 MOV43 INS59 INS7 MOV43 MOV32 MOV8 INS25 INS42 UPD42 INS42 INS32 INS42 MOV32 INS42 INS32 INS42 INS32 MOV42 MOV32 INS42 INS32 UPD42 INS33 INS32 INS21 MOV32 MOV8 MOV8 INS42 INS42 MOV42 MOV42 MOV42 MOV42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS7 UPD42 UPD42 INS21 UPD42 INS42 INS42 INS40 INS7 INS21 INS42 MOV32 UPD42 INS7 INS42 INS40 DEL42 DEL32 DEL7 DEL21 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL9 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL7 DEL21 DEL42 DEL9 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL40 DEL41 DEL40 DEL34 DEL9 DEL34 DEL34 DEL34 DEL34 DEL33 DEL33 DEL33 DEL33 DEL40 DEL34 DEL38 DEL34 DEL33 DEL40 DEL33 DEL14 DEL41 DEL33 DEL41 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL41 DEL25 DEL25 DEL54 DEL8 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21