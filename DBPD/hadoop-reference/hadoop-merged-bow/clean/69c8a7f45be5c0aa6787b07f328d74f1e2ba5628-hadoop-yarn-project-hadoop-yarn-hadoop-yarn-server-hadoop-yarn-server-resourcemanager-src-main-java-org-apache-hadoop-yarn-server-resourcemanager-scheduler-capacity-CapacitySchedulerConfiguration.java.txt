YARN-1582. Capacity Scheduler: add a maximum-allocation-mb setting per queue. Contributed by Thomas Graves

+  public static final String MAXIMUM_ALLOCATION_MB = "maximum-allocation-mb";
+
+  @Private
+  public static final String MAXIMUM_ALLOCATION_VCORES =
+      "maximum-allocation-vcores";
+
+  @Private
+  /**
+   * Get the per queue setting for the maximum limit to allocate to
+   * each container request.
+   *
+   * @param queue
+   *          name of the queue
+   * @return setting specified per queue else falls back to the cluster setting
+   */
+  public Resource getMaximumAllocationPerQueue(String queue) {
+    String queuePrefix = getQueuePrefix(queue);
+    int maxAllocationMbPerQueue = getInt(queuePrefix + MAXIMUM_ALLOCATION_MB,
+        (int)UNDEFINED);
+    int maxAllocationVcoresPerQueue = getInt(
+        queuePrefix + MAXIMUM_ALLOCATION_VCORES, (int)UNDEFINED);
+    if (LOG.isDebugEnabled()) {
+      LOG.debug("max alloc mb per queue for " + queue + " is "
+          + maxAllocationMbPerQueue);
+      LOG.debug("max alloc vcores per queue for " + queue + " is "
+          + maxAllocationVcoresPerQueue);
+    }
+    Resource clusterMax = getMaximumAllocation();
+    if (maxAllocationMbPerQueue == (int)UNDEFINED) {
+      LOG.info("max alloc mb per queue for " + queue + " is undefined");
+      maxAllocationMbPerQueue = clusterMax.getMemory();
+    }
+    if (maxAllocationVcoresPerQueue == (int)UNDEFINED) {
+       LOG.info("max alloc vcore per queue for " + queue + " is undefined");
+      maxAllocationVcoresPerQueue = clusterMax.getVirtualCores();
+    }
+    Resource result = Resources.createResource(maxAllocationMbPerQueue,
+        maxAllocationVcoresPerQueue);
+    if (maxAllocationMbPerQueue > clusterMax.getMemory()
+        || maxAllocationVcoresPerQueue > clusterMax.getVirtualCores()) {
+      throw new IllegalArgumentException(
+          "Queue maximum allocation cannot be larger than the cluster setting"
+          + " for queue " + queue
+          + " max allocation per queue: " + result
+          + " cluster setting: " + clusterMax);
+    }
+    return result;
+  }
+

INS23 INS23 INS31 INS78 INS83 INS83 INS83 INS43 INS59 INS78 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS43 INS42 INS44 INS8 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS65 INS65 INS65 INS42 INS43 INS42 INS60 INS60 INS60 INS25 INS60 INS25 INS25 INS60 INS25 INS41 INS66 INS66 INS42 INS66 INS66 INS42 INS43 INS59 INS39 INS59 INS39 INS59 INS32 INS8 INS43 INS59 INS27 INS8 INS27 INS8 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS21 INS21 INS42 INS42 INS32 INS42 INS11 INS21 INS21 INS42 INS11 INS21 INS21 INS42 INS42 INS32 INS27 INS27 INS53 INS42 INS42 INS42 INS27 INS11 INS42 INS27 INS11 INS32 INS32 INS42 INS39 INS42 INS32 INS7 INS39 INS42 INS32 INS7 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS14 INS42 INS42 INS39 INS42 INS42 INS42 INS39 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS32 INS42 INS42 INS27 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS27 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS27 INS42 INS45 INS42 INS45 INS42 INS45 INS45