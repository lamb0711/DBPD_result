HDDS-1927. Consolidate add/remove Acl into OzoneAclUtil class. Contributed by Xiaoyu Yao.

Signed-off-by: Anu Engineer <aengineer@apache.org>

+import org.apache.hadoop.ozone.om.helpers.OzoneAclUtil;
-import org.apache.hadoop.ozone.web.utils.OzoneUtils;
-import org.apache.hadoop.utils.db.*;
+import org.apache.hadoop.utils.db.TableIterator;
-import java.util.BitSet;
-import static org.apache.hadoop.ozone.OzoneAcl.ZERO_BITSET;
-          boolean hasAccess = OzoneUtils.checkAclRights(lastNode.getValue().
+          boolean hasAccess = OzoneAclUtil.checkAclRights(lastNode.getValue().
-    List<OzoneAcl> ozoneAclList = null;
-    if (prefixInfo != null) {
-      ozoneAclList = prefixInfo.getAcls();
+    if (prefixInfo == null) {
+      prefixInfo = new OmPrefixInfo.Builder().setName(ozoneObj
+          .getPath()).build();
+    boolean changed = prefixInfo.addAcl(ozoneAcl);
+    if (changed) {
+      // update the in-memory prefix tree
+      prefixTree.insert(ozoneObj.getPath(), prefixInfo);
-    if (ozoneAclList == null) {
-      ozoneAclList = new ArrayList<>();
-      ozoneAclList.add(ozoneAcl);
-    } else {
-      boolean addToExistingAcl = false;
-      for(OzoneAcl existingAcl: ozoneAclList) {
-        if(existingAcl.getName().equals(ozoneAcl.getName()) &&
-            existingAcl.getType().equals(ozoneAcl.getType())) {
-
-          BitSet bits = (BitSet) ozoneAcl.getAclBitSet().clone();
-
-          // We need to do "or" before comparision because think of a case like
-          // existing acl is 777 and newly added acl is 444, we have already
-          // that acl set. In this case if we do direct check they will not
-          // be equal, but if we do or and then check, we shall know it
-          // has acl's already set or not.
-          bits.or(existingAcl.getAclBitSet());
-
-          if (bits.equals(existingAcl.getAclBitSet())) {
-            return new OMPrefixAclOpResult(null, false);
-          } else {
-            existingAcl.getAclBitSet().or(ozoneAcl.getAclBitSet());
-            addToExistingAcl = true;
-            break;
-          }
-        }
-      }
-      if (!addToExistingAcl) {
-        ozoneAclList.add(ozoneAcl);
+      if (!isRatisEnabled) {
+        metadataManager.getPrefixTable().put(ozoneObj.getPath(), prefixInfo);
-    OmPrefixInfo.Builder upiBuilder = OmPrefixInfo.newBuilder();
-    upiBuilder.setName(ozoneObj.getPath()).setAcls(ozoneAclList);
-    if (prefixInfo != null && prefixInfo.getMetadata() != null) {
-      upiBuilder.addAllMetadata(prefixInfo.getMetadata());
-    }
-    prefixInfo = upiBuilder.build();
-
-    // update the in-memory prefix tree
-    prefixTree.insert(ozoneObj.getPath(), prefixInfo);
-
-    if (!isRatisEnabled) {
-      metadataManager.getPrefixTable().put(ozoneObj.getPath(), prefixInfo);
-    }
-    return new OMPrefixAclOpResult(prefixInfo, true);
+    return new OMPrefixAclOpResult(prefixInfo, changed);
-    List<OzoneAcl> list = null;
-    if (prefixInfo != null) {
-      list = prefixInfo.getAcls();
-    }
-
-    if (list == null) {
-      return new OMPrefixAclOpResult(null, false);
-    }
-
-    for (OzoneAcl existingAcl: list) {
-      if (existingAcl.getName().equals(ozoneAcl.getName())
-          && existingAcl.getType() == ozoneAcl.getType()) {
-        BitSet bits = (BitSet) ozoneAcl.getAclBitSet().clone();
-        bits.and(existingAcl.getAclBitSet());
-
-        // This happens when the acl bitset is not existing for current name
-        // and type.
-        // Like a case we have 444 permission, 333 is asked to removed.
-        if (bits.equals(ZERO_BITSET)) {
-          removed = false;
-          break;
-        }
-
-        // We have some matching. Remove them.
-        existingAcl.getAclBitSet().xor(bits);
-
-        // If existing acl has same bitset as passed acl bitset, remove that
-        // acl from the list
-        if (existingAcl.getAclBitSet().equals(ZERO_BITSET)) {
-          list.remove(existingAcl);
-        }
-        removed = true;
-        break;
-      }
+    if (prefixInfo != null) {
+      removed = prefixInfo.removeAcl(ozoneAcl);
-    if (!removed) {
-      return new OMPrefixAclOpResult(null, false);
-    } else {
-      OmPrefixInfo.Builder upiBuilder = OmPrefixInfo.newBuilder();
-      upiBuilder.setName(ozoneObj.getPath()).setAcls(list);
-      if (prefixInfo != null && prefixInfo.getMetadata() != null) {
-        upiBuilder.addAllMetadata(prefixInfo.getMetadata());
-      }
-      prefixInfo = upiBuilder.build();
-
+    if (removed) {
-      if (list.isEmpty()) {
+      if (prefixInfo.getAcls().isEmpty()) {
-      return new OMPrefixAclOpResult(prefixInfo, true);
+    return new OMPrefixAclOpResult(prefixInfo, removed);
-    OmPrefixInfo.Builder upiBuilder = OmPrefixInfo.newBuilder();
-    List<OzoneAcl> aclsToBeSet = new ArrayList<>(ozoneAcls.size());
-    aclsToBeSet.addAll(ozoneAcls);
-    upiBuilder.setName(ozoneObj.getPath());
-    if (prefixInfo != null && prefixInfo.getMetadata() != null) {
-      upiBuilder.addAllMetadata(prefixInfo.getMetadata());
+    if (prefixInfo == null) {
+      prefixInfo = new OmPrefixInfo.Builder().setName(ozoneObj
+          .getPath()).build();
-    // Inherit DEFAULT acls from prefix.
-    boolean prefixParentFound = false;
-    List<OmPrefixInfo> prefixList = getLongestPrefixPathHelper(
-        prefixTree.getLongestPrefix(ozoneObj.getPath()));
+    boolean changed = prefixInfo.setAcls(ozoneAcls);
+    if (changed) {
+      List<OzoneAcl> aclsToBeSet = prefixInfo.getAcls();
+      // Inherit DEFAULT acls from prefix.
+      boolean prefixParentFound = false;
+      List<OmPrefixInfo> prefixList = getLongestPrefixPathHelper(
+          prefixTree.getLongestPrefix(ozoneObj.getPath()));
-    if (prefixList.size() > 0) {
-      // Add all acls from direct parent to key.
-      OmPrefixInfo parentPrefixInfo = prefixList.get(prefixList.size() - 1);
-      if (parentPrefixInfo != null) {
-        aclsToBeSet.addAll(OzoneUtils.getDefaultAcls(
-            parentPrefixInfo.getAcls()));
-        prefixParentFound = true;
+      if (prefixList.size() > 0) {
+        // Add all acls from direct parent to key.
+        OmPrefixInfo parentPrefixInfo = prefixList.get(prefixList.size() - 1);
+        if (parentPrefixInfo != null) {
+          prefixParentFound = OzoneAclUtil.inheritDefaultAcls(aclsToBeSet,
+              parentPrefixInfo.getAcls());
+        }
+      }
+
+      // If no parent prefix is found inherit DEFAULT acls from bucket.
+      if (!prefixParentFound) {
+        String bucketKey = metadataManager.getBucketKey(ozoneObj
+            .getVolumeName(), ozoneObj.getBucketName());
+        OmBucketInfo bucketInfo = metadataManager.getBucketTable().
+            get(bucketKey);
+        if (bucketInfo != null) {
+          OzoneAclUtil.inheritDefaultAcls(aclsToBeSet, bucketInfo.getAcls());
+        }
+      }
+
+      prefixTree.insert(ozoneObj.getPath(), prefixInfo);
+      if (!isRatisEnabled) {
+        metadataManager.getPrefixTable().put(ozoneObj.getPath(), prefixInfo);
-
-    // If no parent prefix is found inherit DEFULT acls from bucket.
-    if (!prefixParentFound) {
-      String bucketKey = metadataManager.getBucketKey(ozoneObj.getVolumeName(),
-          ozoneObj.getBucketName());
-      OmBucketInfo bucketInfo = metadataManager.getBucketTable().
-          get(bucketKey);
-      if (bucketInfo != null) {
-        bucketInfo.getAcls().forEach(a -> {
-          if (a.getAclScope().equals(OzoneAcl.AclScope.DEFAULT)) {
-            aclsToBeSet.add(new OzoneAcl(a.getType(), a.getName(),
-                a.getAclBitSet(), OzoneAcl.AclScope.ACCESS));
-          }
-        });
-      }
-    }
-
-    prefixInfo = upiBuilder.setAcls(aclsToBeSet).build();
-
-    prefixTree.insert(ozoneObj.getPath(), prefixInfo);
-    if (!isRatisEnabled) {
-      metadataManager.getPrefixTable().put(ozoneObj.getPath(), prefixInfo);
-    }
-    return new OMPrefixAclOpResult(prefixInfo, true);
+    return new OMPrefixAclOpResult(prefixInfo, changed);

MOV26 MOV26 UPD40 UPD40 MOV25 INS8 INS60 INS25 MOV41 MOV41 INS25 INS60 INS25 MOV41 UPD27 MOV39 INS59 INS42 INS8 MOV27 INS42 INS27 INS8 INS39 INS59 INS42 MOV8 MOV21 INS42 INS32 MOV21 MOV25 INS42 INS42 INS42 INS42 INS33 MOV21 INS42 INS32 MOV60 INS42 INS42 INS7 UPD42 MOV42 UPD42 MOV42 MOV42 INS7 INS42 INS42 INS42 INS42 MOV32 UPD42 MOV32 INS42 MOV32 UPD42 INS32 UPD42 INS42 UPD42 UPD42 INS42 INS42 INS14 INS14 MOV43 MOV43 INS7 INS42 MOV32 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 UPD42 UPD42 INS42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL42 DEL7 DEL21 DEL33 DEL9 DEL42 DEL33 DEL27 DEL42 DEL42 DEL43 DEL74 DEL14 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL9 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL8 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL10 DEL8 DEL25 DEL8 DEL25 DEL8 DEL70 DEL42 DEL38 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL33 DEL27 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL33 DEL27 DEL42 DEL43 DEL33 DEL9 DEL14 DEL41 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL27 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL32 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL42 DEL9 DEL7 DEL21 DEL10 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL9 DEL7 DEL21 DEL10 DEL8 DEL25 DEL8 DEL70 DEL42 DEL38 DEL8 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL33 DEL27 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL43 DEL42 DEL9 DEL14 DEL41 DEL9 DEL42 DEL42 DEL33 DEL40 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL42 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL33 DEL27 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL9 DEL7 DEL21 DEL42 DEL42 DEL59 DEL42 DEL32 DEL40 DEL32 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL40 DEL14 DEL32 DEL21 DEL8 DEL25 DEL8 DEL86 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL42 DEL43 DEL42 DEL9 DEL14 DEL41 DEL33 DEL9