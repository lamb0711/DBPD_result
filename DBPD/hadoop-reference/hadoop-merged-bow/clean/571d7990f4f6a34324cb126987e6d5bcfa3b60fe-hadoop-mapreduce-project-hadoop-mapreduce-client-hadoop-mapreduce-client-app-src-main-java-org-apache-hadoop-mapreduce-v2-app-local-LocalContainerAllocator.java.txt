Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1196458 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.mapreduce.MRJobConfig;
+import org.apache.hadoop.mapreduce.v2.app.job.event.JobEvent;
+import org.apache.hadoop.mapreduce.v2.app.job.event.JobEventType;
+import org.apache.hadoop.yarn.YarnException;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-  private final ApplicationId appID;
+//  private final ApplicationId appID;
+  private long retryInterval;
+  private long retrystartTime;
-    this.appID = context.getApplicationID();
+//    this.appID = context.getApplicationID();
+    
+  }
+
+  @Override
+  public void init(Configuration conf) {
+    super.init(conf);
+    retryInterval =
+        getConfig().getLong(MRJobConfig.MR_AM_TO_RM_WAIT_INTERVAL_MS,
+            MRJobConfig.DEFAULT_MR_AM_TO_RM_WAIT_INTERVAL_MS);
+    // Init startTime to current time. If all goes well, it will be reset after
+    // first attempt to contact RM.
+    retrystartTime = System.currentTimeMillis();
-    AMResponse response = allocateResponse.getAMResponse();
+    AMResponse response;
+    try {
+      response = allocateResponse.getAMResponse();
+      // Reset retry count if no exception occurred.
+      retrystartTime = System.currentTimeMillis();
+    } catch (Exception e) {
+      // This can happen when the connection to the RM has gone down. Keep
+      // re-trying until the retryInterval has expired.
+      if (System.currentTimeMillis() - retrystartTime >= retryInterval) {
+        eventHandler.handle(new JobEvent(this.getJob().getID(),
+                                         JobEventType.INTERNAL_ERROR));
+        throw new YarnException("Could not contact RM after " +
+                                retryInterval + " milliseconds.");
+      }
+      // Throw this up to the caller, which may decide to ignore it and
+      // continue to attempt to contact the RM.
+      throw e;
+    }
-      // TODO
+      // This can happen if the RM has been restarted. If it is in that state,
+      // this application must clean itself up.
+      eventHandler.handle(new JobEvent(this.getJob().getID(),
+                                       JobEventType.INTERNAL_ERROR));
+      throw new YarnException("Resource Manager doesn't recognize AttemptId: " +
+                               this.getContext().getApplicationID());
-          event.getAttemptID(), container));
+          event.getAttemptID(), container, applicationACLs));

MOV26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 UPD40 INS23 INS23 INS31 MOV83 INS39 INS59 UPD83 MOV83 INS39 INS59 INS78 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS42 INS43 INS42 INS21 INS21 INS21 INS54 INS25 UPD42 MOV42 INS48 INS7 INS7 INS8 INS12 MOV32 INS8 INS42 INS42 INS42 INS32 INS42 INS32 INS21 INS21 INS44 INS8 MOV21 INS21 INS53 INS32 INS42 INS40 INS40 INS42 INS42 INS7 INS7 INS43 INS42 MOV25 INS53 INS32 INS14 INS42 INS42 MOV32 INS42 INS32 INS42 INS27 INS42 INS42 INS42 INS14 INS43 INS27 INS42 INS42 INS27 INS42 INS21 INS53 INS43 INS32 INS40 INS42 INS45 INS32 INS42 INS32 INS42 INS32 INS14 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS43 INS27 INS52 INS42 INS52 INS42 INS43 INS32 INS40 INS42 INS45 INS42 INS45 INS42 INS32 INS42 INS52 INS42 DEL43 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21