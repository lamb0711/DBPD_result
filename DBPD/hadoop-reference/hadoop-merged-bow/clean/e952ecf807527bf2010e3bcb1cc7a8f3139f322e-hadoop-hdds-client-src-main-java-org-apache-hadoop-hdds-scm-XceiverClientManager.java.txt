HDDS-2109. Refactor scm.container.client config

Closes #1426

+import org.apache.hadoop.hdds.conf.Config;
+import org.apache.hadoop.hdds.conf.ConfigGroup;
+import org.apache.hadoop.hdds.conf.ConfigType;
+import org.apache.hadoop.hdds.conf.OzoneConfiguration;
-import static org.apache.hadoop.hdds.scm.ScmConfigKeys
-    .SCM_CONTAINER_CLIENT_MAX_SIZE_DEFAULT;
-import static org.apache.hadoop.hdds.scm.ScmConfigKeys
-    .SCM_CONTAINER_CLIENT_MAX_SIZE_KEY;
-import static org.apache.hadoop.hdds.scm.ScmConfigKeys
-    .SCM_CONTAINER_CLIENT_STALE_THRESHOLD_DEFAULT;
-import static org.apache.hadoop.hdds.scm.ScmConfigKeys
-    .SCM_CONTAINER_CLIENT_STALE_THRESHOLD_KEY;
+import static java.util.concurrent.TimeUnit.MILLISECONDS;
+import static org.apache.hadoop.hdds.conf.ConfigTag.OZONE;
+import static org.apache.hadoop.hdds.conf.ConfigTag.PERFORMANCE;
+    this(conf, OzoneConfiguration.of(conf).getObject(ScmClientConfig.class));
+  }
+
+  public XceiverClientManager(Configuration conf, ScmClientConfig clientConf) {
+    Preconditions.checkNotNull(clientConf);
-    int maxSize = conf.getInt(SCM_CONTAINER_CLIENT_MAX_SIZE_KEY,
-        SCM_CONTAINER_CLIENT_MAX_SIZE_DEFAULT);
-    long staleThresholdMs = conf.getTimeDuration(
-        SCM_CONTAINER_CLIENT_STALE_THRESHOLD_KEY,
-        SCM_CONTAINER_CLIENT_STALE_THRESHOLD_DEFAULT, TimeUnit.MILLISECONDS);
+    long staleThresholdMs = clientConf.getStaleThreshold(MILLISECONDS);
-        .expireAfterAccess(staleThresholdMs, TimeUnit.MILLISECONDS)
-        .maximumSize(maxSize)
+        .expireAfterAccess(staleThresholdMs, MILLISECONDS)
+        .maximumSize(clientConf.getMaxSize())
+
+  /**
+   * Configuration for HDDS client.
+   */
+  @ConfigGroup(prefix = "scm.container.client")
+  public static class ScmClientConfig {
+
+    private int maxSize;
+    private long staleThreshold;
+    private int maxOutstandingRequests;
+
+    public long getStaleThreshold(TimeUnit unit) {
+      return unit.convert(staleThreshold, MILLISECONDS);
+    }
+
+    @Config(key = "idle.threshold",
+        type = ConfigType.TIME, timeUnit = MILLISECONDS,
+        defaultValue = "10s",
+        tags = { OZONE, PERFORMANCE },
+        description =
+            "In the standalone pipelines, the SCM clients use netty to "
+            + " communicate with the container. It also uses connection pooling"
+            + " to reduce client side overheads. This allows a connection to"
+            + " stay idle for a while before the connection is closed."
+    )
+    public void setStaleThreshold(long staleThreshold) {
+      this.staleThreshold = staleThreshold;
+    }
+
+    public int getMaxSize() {
+      return maxSize;
+    }
+
+    @Config(key = "max.size",
+        defaultValue = "256",
+        tags = { OZONE, PERFORMANCE },
+        description =
+            "Controls the maximum number of connections that are cached via"
+            + " client connection pooling. If the number of connections"
+            + " exceed this count, then the oldest idle connection is evicted."
+    )
+    public void setMaxSize(int maxSize) {
+      this.maxSize = maxSize;
+    }
+
+    public int getMaxOutstandingRequests() {
+      return maxOutstandingRequests;
+    }
+
+    @Config(key = "max.outstanding.requests",
+        defaultValue = "100",
+        tags = { OZONE, PERFORMANCE },
+        description =
+            "Controls the maximum number of outstanding async requests that can"
+            + " be handled by the Standalone as well as Ratis client."
+    )
+    public void setMaxOutstandingRequests(int maxOutstandingRequests) {
+      this.maxOutstandingRequests = maxOutstandingRequests;
+    }
+  }
+

MOV26 MOV26 MOV26 INS26 INS26 INS26 UPD40 UPD40 UPD40 INS40 INS40 UPD40 INS40 INS31 INS55 MOV29 INS83 INS42 INS44 INS8 INS44 INS29 INS77 INS83 INS83 INS42 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS43 INS42 INS17 INS43 INS42 INS21 INS65 INS42 INS80 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS42 INS44 INS8 INS77 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS77 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS77 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS32 INS42 INS32 INS66 INS42 INS45 INS42 INS42 INS42 INS43 INS42 INS41 INS42 INS80 INS80 INS80 INS80 INS80 INS80 INS39 INS42 INS21 INS41 INS42 INS80 INS80 INS80 INS80 INS39 INS42 INS21 INS41 INS42 INS80 INS80 INS80 INS80 INS39 INS42 INS21 INS32 INS42 INS57 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS32 INS42 INS45 INS42 INS40 INS42 INS42 INS42 INS45 INS42 INS4 INS42 INS27 INS7 INS42 INS42 INS45 INS42 INS45 INS42 INS4 INS42 INS27 INS7 INS42 INS42 INS45 INS42 INS45 INS42 INS4 INS42 INS27 INS7 INS42 INS42 INS42 INS43 UPD42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS45 INS45 INS45 INS22 INS42 INS42 INS42 INS45 INS45 INS45 INS22 INS42 INS42 INS42 INS45 INS45 INS22 INS42 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS32 INS42 INS42 UPD42 MOV42 DEL39 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL40 DEL40