MAPREDUCE-5932. Provide an option to use a dedicated reduce-side shuffle log. Contributed by Gera Shegalov

+import org.apache.hadoop.mapred.JobConf;
+import org.apache.hadoop.mapred.Task;
+import org.apache.hadoop.mapred.TaskLog;
+import org.apache.hadoop.yarn.ContainerRollingLogAppender;
-import org.apache.log4j.RollingFileAppender;
+
+  public static String getChildLogLevel(Configuration conf, boolean isMap) {
+    if (isMap) {
+      return conf.get(
+          MRJobConfig.MAP_LOG_LEVEL,
+          JobConf.DEFAULT_LOG_LEVEL.toString()
+      );
+    } else {
+      return conf.get(
+          MRJobConfig.REDUCE_LOG_LEVEL,
+          JobConf.DEFAULT_LOG_LEVEL.toString()
+      );
+    }
+  }
-   * Add the JVM system properties necessary to configure {@link ContainerLogAppender}.
-   * @param logLevel the desired log level (eg INFO/WARN/DEBUG)
-   * @param logSize See {@link ContainerLogAppender#setTotalLogFileSize(long)}
-   * @param numBackups See {@link RollingFileAppender#setMaxBackupIndex(int)}
+   * Add the JVM system properties necessary to configure
+   *  {@link ContainerLogAppender} or
+   *  {@link ContainerRollingLogAppender}.
+   *
+   * @param task for map/reduce, or null for app master
-  public static void addLog4jSystemProperties(
-      String logLevel, long logSize, int numBackups, List<String> vargs, 
-      Configuration conf) {
+  public static void addLog4jSystemProperties(Task task,
+      List<String> vargs, Configuration conf) {
-    
+
+    long logSize;
+    String logLevel;
+    int numBackups;
+
+    if (task == null) {
+      logSize = conf.getLong(MRJobConfig.MR_AM_LOG_KB,
+          MRJobConfig.DEFAULT_MR_AM_LOG_KB) << 10;
+      logLevel = conf.get(
+          MRJobConfig.MR_AM_LOG_LEVEL, MRJobConfig.DEFAULT_MR_AM_LOG_LEVEL);
+      numBackups = conf.getInt(MRJobConfig.MR_AM_LOG_BACKUPS,
+          MRJobConfig.DEFAULT_MR_AM_LOG_BACKUPS);
+    } else {
+      logSize = TaskLog.getTaskLogLimitBytes(conf);
+      logLevel = getChildLogLevel(conf, task.isMapTask());
+      numBackups = conf.getInt(MRJobConfig.TASK_LOG_BACKUPS,
+          MRJobConfig.DEFAULT_TASK_LOG_BACKUPS);
+    }
+
+
+    vargs.add("-Dhadoop.root.logfile=" + TaskLog.LogName.SYSLOG);
+
+    if (   task != null
+        && !task.isMapTask()
+        && conf.getBoolean(MRJobConfig.REDUCE_SEPARATE_SHUFFLE_LOG,
+               MRJobConfig.DEFAULT_REDUCE_SEPARATE_SHUFFLE_LOG)) {
+      final int numShuffleBackups = conf.getInt(MRJobConfig.SHUFFLE_LOG_BACKUPS,
+          MRJobConfig.DEFAULT_SHUFFLE_LOG_BACKUPS);
+      final long shuffleLogSize = conf.getLong(MRJobConfig.SHUFFLE_LOG_KB,
+          MRJobConfig.DEFAULT_SHUFFLE_LOG_KB) << 10;
+      final String shuffleLogger = logLevel
+          + (shuffleLogSize > 0L && numShuffleBackups > 0
+                 ? ",shuffleCRLA"
+                 : ",shuffleCLA");
+
+      vargs.add("-D" + MRJobConfig.MR_PREFIX
+          + "shuffle.logger=" + shuffleLogger);
+      vargs.add("-D" + MRJobConfig.MR_PREFIX
+          + "shuffle.logfile=" + TaskLog.LogName.SYSLOG + ".shuffle");
+      vargs.add("-D" + MRJobConfig.MR_PREFIX
+          + "shuffle.log.filesize=" + shuffleLogSize);
+      vargs.add("-D" + MRJobConfig.MR_PREFIX
+          + "shuffle.log.backups=" + numShuffleBackups);
+    }
-          MRConfig.DEFAULT_MAPREDUCE_APP_SUBMISSION_CROSS_PLATFORM);
+            MRConfig.DEFAULT_MAPREDUCE_APP_SUBMISSION_CROSS_PLATFORM);

MOV26 INS26 INS26 INS26 INS40 INS40 INS40 UPD40 INS31 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS42 INS43 INS42 INS39 INS42 INS25 INS65 INS43 INS42 INS60 INS60 INS60 INS25 INS21 INS25 INS42 INS42 INS8 INS8 UPD66 MOV66 MOV65 UPD66 MOV66 MOV65 INS66 UPD42 UPD66 INS42 INS39 INS59 MOV43 INS59 INS39 INS59 INS27 INS8 INS8 INS32 INS27 INS8 INS41 INS41 INS42 INS42 INS42 INS42 INS42 INS33 INS21 INS21 INS21 INS21 INS21 INS21 INS42 INS42 INS27 INS27 INS32 INS60 INS60 INS60 INS21 INS21 INS21 INS21 INS32 INS32 INS7 INS7 INS7 INS7 INS7 INS7 INS45 INS40 INS27 INS38 INS42 INS42 INS40 INS40 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS43 INS59 INS32 INS32 INS32 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS32 INS42 INS27 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS33 INS32 INS42 INS32 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS40 INS42 INS40 INS42 INS32 INS34 INS42 INS42 INS40 INS40 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS42 INS40 INS40 INS32 INS34 INS42 INS36 INS45 INS40 INS45 INS42 INS45 INS40 INS45 INS40 INS45 INS45 INS40 INS45 INS42 INS45 INS40 INS45 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS42 INS40 INS40 INS16 INS27 INS45 INS45 INS27 INS27 INS42 INS34 INS42 INS34 DEL42 DEL42 DEL39 DEL69 DEL68 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL65 DEL42 DEL42 DEL39 DEL69 DEL68 DEL65 DEL42 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44