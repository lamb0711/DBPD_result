YARN-7973. Added ContainerRelaunch feature for Docker containers.
           Contributed by Shane Kumpf

+import org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.docker.DockerCommand;
+import org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.docker.DockerStartCommand;
+  @Override
+  public void relaunchContainer(ContainerRuntimeContext ctx)
+      throws ContainerExecutionException {
+    Container container = ctx.getContainer();
+    String containerIdStr = container.getContainerId().toString();
+    // Check to see if the container already exists for relaunch
+    DockerCommandExecutor.DockerContainerStatus containerStatus =
+        DockerCommandExecutor.getContainerStatus(containerIdStr, conf,
+            privilegedOperationExecutor);
+    if (containerStatus != null &&
+        DockerCommandExecutor.isStartable(containerStatus)) {
+      DockerStartCommand startCommand = new DockerStartCommand(containerIdStr);
+      String commandFile = dockerClient.writeCommandToTempFile(startCommand,
+          containerIdStr);
+      PrivilegedOperation launchOp = buildLaunchOp(ctx, commandFile,
+          startCommand);
+
+      try {
+        privilegedOperationExecutor.executePrivilegedOperation(null,
+            launchOp, null, null, false, false);
+      } catch (PrivilegedOperationException e) {
+        LOG.warn("Relaunch container failed. Exception: ", e);
+        LOG.info("Docker command used: " + startCommand);
+
+        throw new ContainerExecutionException("Launch container failed", e
+            .getExitCode(), e.getOutput(), e.getErrorOutput());
+      }
+    } else {
+      throw new ContainerExecutionException("Container is not in a startable "
+          + "state, unable to relaunch: " + containerIdStr);
+    }
+
+  }
+
-      String commandFile, DockerRunCommand runCommand) {
+      String commandFile, DockerCommand command) {
-      LOG.debug("Launching container with cmd: " + runCommand);
+      LOG.debug("Launching container with cmd: " + command);

INS26 INS26 INS40 INS40 INS31 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS42 INS43 INS42 INS42 INS60 INS60 INS60 INS25 UPD43 UPD42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS27 INS8 INS8 UPD42 INS42 INS42 INS32 INS42 INS42 INS32 INS40 INS42 INS32 INS27 INS32 INS60 INS60 INS60 INS54 INS53 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS8 INS12 INS14 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS21 INS44 INS8 INS43 INS27 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS21 INS21 INS53 INS42 INS45 INS45 INS42 UPD42 INS42 INS42 INS42 INS33 INS42 INS33 INS33 INS9 INS9 INS42 INS32 INS32 INS14 INS42 INS42 INS45 INS42 INS42 INS42 INS27 INS43 INS45 INS32 INS32 INS32 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42