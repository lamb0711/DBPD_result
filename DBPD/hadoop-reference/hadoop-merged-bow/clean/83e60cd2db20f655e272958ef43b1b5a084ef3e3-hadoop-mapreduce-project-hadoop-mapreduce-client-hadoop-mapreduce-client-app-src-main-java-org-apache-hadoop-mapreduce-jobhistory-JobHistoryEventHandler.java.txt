MAPREDUCE-7042. Killed MR job data does not move to mapreduce.jobhistory.done-dir when ATS v2 is enabled. Contributed by Rohith Sharma K S.

+import org.apache.hadoop.yarn.event.AsyncDispatcher;
+
+  protected boolean handleTimelineEvent = false;
+  protected AsyncDispatcher atsEventDispatcher = null;
+
+        handleTimelineEvent = true;
-
+    // initiate the atsEventDispatcher for timeline event
+    // if timeline service is enabled.
+    if (handleTimelineEvent) {
+      atsEventDispatcher = createDispatcher();
+      EventHandler<JobHistoryEvent> timelineEventHandler =
+          new ForwardingEventHandler();
+      atsEventDispatcher.register(EventType.class, timelineEventHandler);
+      atsEventDispatcher.setDrainEventsOnStop();
+      atsEventDispatcher.init(conf);
+    }
+  protected AsyncDispatcher createDispatcher() {
+    return new AsyncDispatcher("Job ATS Event Dispatcher");
+  }
+
+
+    if (handleTimelineEvent) {
+      atsEventDispatcher.start();
+    }
+
+    if (handleTimelineEvent && atsEventDispatcher != null) {
+      atsEventDispatcher.stop();
+    }
+
+      // Process it for ATS (if enabled)
+      if (handleTimelineEvent) {
+        atsEventDispatcher.getEventHandler().handle(event);
+      }
-        if (timelineV2Client != null) {
-          processEventForNewTimelineService(historyEvent, event.getJobID(),
-              event.getTimestamp());
-        } else if (timelineClient != null) {
-          processEventForTimelineServer(historyEvent, event.getJobID(),
-              event.getTimestamp());
-        }
+  private void handleTimelineEvent(JobHistoryEvent event) {
+    HistoryEvent historyEvent = event.getHistoryEvent();
+    if (handleTimelineEvent) {
+      if (timelineV2Client != null) {
+        processEventForNewTimelineService(historyEvent, event.getJobID(),
+            event.getTimestamp());
+      } else if (timelineClient != null) {
+        processEventForTimelineServer(historyEvent, event.getJobID(),
+            event.getTimestamp());
+      }
+    }
+    if (LOG.isDebugEnabled()) {
+      LOG.debug("In HistoryEventHandler, handle timelineEvent:"
+          + event.getHistoryEvent().getEventType());
+    }
+  }
+
+
+  private final class ForwardingEventHandler
+      implements EventHandler<JobHistoryEvent> {
+    @Override
+    public void handle(JobHistoryEvent event) {
+      handleTimelineEvent(event);
+    }
+  }

INS26 INS40 INS23 INS23 INS31 INS31 INS55 INS83 INS39 INS59 INS83 INS43 INS59 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS42 INS74 INS31 INS42 INS9 INS42 INS42 INS33 INS25 INS42 INS41 INS25 INS25 INS43 INS42 INS60 INS25 INS25 INS43 INS43 INS78 INS83 INS39 INS42 INS44 INS8 INS42 INS8 INS14 INS42 INS8 INS27 INS8 INS42 INS43 INS59 INS42 INS8 INS32 INS8 INS42 INS42 INS42 INS43 INS42 INS21 INS21 INS60 INS21 INS21 INS21 INS43 INS45 INS21 INS42 INS27 INS21 INS25 INS42 INS42 INS32 MOV25 INS42 INS42 INS21 INS42 INS32 INS7 INS74 INS59 INS32 INS32 INS32 INS42 INS32 INS42 INS33 INS32 INS42 INS8 INS42 INS42 INS32 INS42 INS42 INS21 INS42 INS32 INS43 INS43 INS42 INS14 INS42 INS42 INS57 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS27 INS7 INS42 INS42 INS42 INS43 INS43 INS32 INS45 INS32 INS42 INS9 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42