Revert "[SBN Read] Slow clients when Observer reads are enabled but there are no Observers on the cluster. Contributed by Chen Liang."

This reverts commit ff8ff0f7e50cfc147fe383b18b344b46a23220df.

-  /** Configuration key for {@link #observerProbeRetryPeriodMs}. */
-  static final String OBSERVER_PROBE_RETRY_PERIOD_KEY =
-      "dfs.client.failover.observer.probe.retry.period";
-  /** Observer probe retry period default to 10 min. */
-  static final long OBSERVER_PROBE_RETRY_PERIOD_DEFAULT = 60 * 10 * 1000;
-
-   * In case there is no Observer node, for every read call, client will try
-   * to loop through all Standby nodes and fail eventually. Since there is no
-   * guarantee on when Observer node will be enabled. This can be very
-   * inefficient.
-   * The following value specify the period on how often to retry all Standby.
-   */
-  private long observerProbeRetryPeriodMs;
-
-  /**
-   * The previous time where zero observer were found. If there was observer,
-   * or it is initialization, this is set to 0.
-   */
-  private long lastObserverProbeTime;
-
-  /**
-    this.lastObserverProbeTime = 0;
-    observerProbeRetryPeriodMs = conf.getTimeDuration(
-        OBSERVER_PROBE_RETRY_PERIOD_KEY,
-        OBSERVER_PROBE_RETRY_PERIOD_DEFAULT, TimeUnit.MILLISECONDS);
-   * Check if client need to find an Observer proxy.
-   * If current proxy is Active then we should stick to it and postpone probing
-   * for Observers for a period of time. When this time expires the client will
-   * try to find an Observer again.
-   * *
-   * @return true if we did not reach the threshold
-   * to start looking for Observer, or false otherwise.
-   */
-  private boolean shouldFindObserver() {
-    // lastObserverProbeTime > 0 means we tried, but did not find any
-    // Observers yet
-    // If lastObserverProbeTime <= 0, previous check found observer, so
-    // we should not skip observer read.
-    if (lastObserverProbeTime > 0) {
-      return Time.monotonicNow() - lastObserverProbeTime
-          >= observerProbeRetryPeriodMs;
-    }
-    return true;
-  }
-
-  /**
-      if (observerReadEnabled && shouldFindObserver() && isRead(method)) {
+      if (observerReadEnabled && isRead(method)) {
-          lastObserverProbeTime = 0;
-          lastObserverProbeTime = Time.monotonicNow();

DEL66 DEL42 DEL67 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL45 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL34 DEL34 DEL34 DEL27 DEL59 DEL23 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL59 DEL23 DEL66 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL34 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL7 DEL21 DEL66 DEL66 DEL66 DEL66 DEL66 DEL65 DEL66 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL34 DEL27 DEL42 DEL42 DEL32 DEL42 DEL27 DEL42 DEL27 DEL41 DEL8 DEL25 DEL9 DEL41 DEL8 DEL31 DEL42 DEL32 DEL42 DEL34 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21