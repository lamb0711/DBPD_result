YARN-6545. Followup fix for YARN-6405. Contributed by Jian He

-import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.security.UserGroupInformation;
+import org.apache.slider.api.ServiceApiConstants;
+import org.apache.slider.core.zk.ZKIntegration;
+import java.net.URI;
+import static org.apache.hadoop.fs.FileSystem.FS_DEFAULT_NAME_KEY;
+import static org.apache.hadoop.registry.client.api.RegistryConstants.DEFAULT_REGISTRY_ZK_QUORUM;
+import static org.apache.hadoop.registry.client.api.RegistryConstants.KEY_DNS_DOMAIN;
+import static org.apache.hadoop.registry.client.api.RegistryConstants.KEY_REGISTRY_ZK_QUORUM;
+import static org.apache.slider.api.ServiceApiConstants.*;
-  private Configuration publishedProviderConf;
-
+  public Map<String, String> globalTokens = new HashMap<>();
+    initGlobalTokensForSubstitute(binding);
+  private void initGlobalTokensForSubstitute(AppStateBindingInfo binding)
+      throws IOException {
+    // ZK
+    globalTokens.put(ServiceApiConstants.CLUSTER_ZK_QUORUM,
+        binding.serviceConfig
+            .getTrimmed(KEY_REGISTRY_ZK_QUORUM, DEFAULT_REGISTRY_ZK_QUORUM));
+    String user = UserGroupInformation.getCurrentUser().getShortUserName();
+    globalTokens
+        .put(SERVICE_ZK_PATH, ZKIntegration.mkClusterPath(user, app.getName()));
+
+    globalTokens.put(ServiceApiConstants.USER, user);
+    String dnsDomain = binding.serviceConfig.getTrimmed(KEY_DNS_DOMAIN);
+    if (dnsDomain != null && !dnsDomain.isEmpty()) {
+      globalTokens.put(ServiceApiConstants.DOMAIN, dnsDomain);
+    }
+    // HDFS
+    String clusterFs = binding.serviceConfig.getTrimmed(FS_DEFAULT_NAME_KEY);
+    if (clusterFs != null && !clusterFs.isEmpty()) {
+      globalTokens.put(ServiceApiConstants.CLUSTER_FS_URI, clusterFs);
+      globalTokens.put(ServiceApiConstants.CLUSTER_FS_HOST,
+          URI.create(clusterFs).getHost());
+    }
+    globalTokens.put(SERVICE_HDFS_DIR, binding.serviceHdfsDir);
+    // service name
+    globalTokens.put(SERVICE_NAME_LC, app.getName().toLowerCase());
+    globalTokens.put(SERVICE_NAME, app.getName());
+  }
+
-            placementTimeout, label, component, this);
+            placementTimeout, label, component);
-          roleStatus.getProviderRole().failedInstanceName
-              .offer(roleInstance.compInstanceName);
+          roleStatus.getProviderRole().failedInstances.offer(roleInstance);
-          role.getProviderRole().failedInstanceName
-              .offer(possible.compInstanceName);
+          role.getProviderRole().failedInstances.offer(possible);
-      decRequestedContainers(role);
+        decRequestedContainers(role);

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS83 INS74 INS59 INS83 INS39 INS42 INS44 INS43 INS8 INS43 INS43 INS43 INS42 INS14 INS21 INS43 INS42 UPD42 MOV42 INS21 INS60 INS21 INS21 INS60 INS25 INS60 INS25 INS21 INS21 INS21 INS42 INS42 INS42 INS74 INS32 INS42 INS32 INS43 INS59 INS32 INS32 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS32 INS32 INS32 INS43 INS42 INS42 INS42 INS42 INS40 INS32 INS42 UPD42 MOV42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS27 INS38 INS21 INS42 INS42 INS32 INS27 INS38 INS21 INS21 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS40 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS40 INS42 INS42 INS42 INS33 INS32 INS32 INS40 INS42 INS42 INS42 INS33 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS40 INS32 INS42 INS42 MOV21 INS32 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 DEL83 DEL43 DEL59 DEL23 DEL52 DEL40 DEL40