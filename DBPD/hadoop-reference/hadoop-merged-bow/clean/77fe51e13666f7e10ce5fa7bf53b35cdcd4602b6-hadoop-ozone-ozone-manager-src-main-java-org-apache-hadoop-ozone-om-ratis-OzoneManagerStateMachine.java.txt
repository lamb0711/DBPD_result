HDDS-1379. Convert all OM Volume related operations to HA model. (#689)



+import org.apache.hadoop.ozone.om.exceptions.OMException;
-import org.apache.hadoop.ozone.protocolPB.OzoneManagerRequestHandler;
-import org.apache.hadoop.ozone.protocolPB.RequestHandler;
+import org.apache.hadoop.ozone.protocolPB.OzoneManagerHARequestHandler;
+import org.apache.hadoop.ozone.protocolPB.OzoneManagerHARequestHandlerImpl;
-  private RequestHandler handler;
+  private OzoneManagerHARequestHandler handler;
-    this.handler = new OzoneManagerRequestHandler(ozoneManager);
+    this.handler = new OzoneManagerHARequestHandlerImpl(ozoneManager);
-    switch (omRequest.getCmdType()) {
-    case AllocateBlock:
-      return handleAllocateBlock(raftClientRequest, omRequest);
-    case CreateKey:
-      return handleCreateKeyRequest(raftClientRequest, omRequest);
-    case InitiateMultiPartUpload:
-      return handleInitiateMultipartUpload(raftClientRequest, omRequest);
-    default:
-      return TransactionContext.newBuilder()
+    OMRequest newOmRequest = null;
+    try {
+      switch (omRequest.getCmdType()) {
+      case CreateVolume:
+      case SetVolumeProperty:
+      case DeleteVolume:
+        newOmRequest = handler.handleStartTransaction(omRequest);
+        break;
+      case AllocateBlock:
+        return handleAllocateBlock(raftClientRequest, omRequest);
+      case CreateKey:
+        return handleCreateKeyRequest(raftClientRequest, omRequest);
+      case InitiateMultiPartUpload:
+        return handleInitiateMultipartUpload(raftClientRequest, omRequest);
+      default:
+        return TransactionContext.newBuilder()
+            .setClientRequest(raftClientRequest)
+            .setStateMachine(this)
+            .setServerRole(RaftProtos.RaftPeerRole.LEADER)
+            .setLogData(raftClientRequest.getMessage().getContent())
+            .build();
+      }
+    } catch (IOException ex) {
+      TransactionContext transactionContext = TransactionContext.newBuilder()
-          .setLogData(raftClientRequest.getMessage().getContent())
+      if (ex instanceof OMException) {
+        IOException ioException =
+            new IOException(ex.getMessage() + STATUS_CODE +
+                ((OMException) ex).getResult());
+        transactionContext.setException(ioException);
+      } else {
+        transactionContext.setException(ex);
+      }
+      LOG.error("Exception in startTransaction for cmdType " +
+          omRequest.getCmdType(), ex);
+      return transactionContext;
+    TransactionContext transactionContext = TransactionContext.newBuilder()
+        .setClientRequest(raftClientRequest)
+        .setStateMachine(this)
+        .setServerRole(RaftProtos.RaftPeerRole.LEADER)
+        .setLogData(OMRatisHelper.convertRequestToByteString(newOmRequest))
+        .build();
+    return transactionContext;
-    OMResponse response = handler.handle(request);
+    OMResponse response = handler.handleApplyTransaction(request);
-  public void setHandler(RequestHandler handler) {
+  public void setHandler(OzoneManagerHARequestHandler handler) {

INS26 INS40 UPD40 UPD40 UPD43 INS8 UPD42 INS60 INS54 INS60 INS41 UPD43 INS43 INS59 MOV8 INS12 INS43 INS59 INS42 UPD42 INS42 INS42 INS33 MOV49 INS44 INS8 INS42 INS42 INS32 UPD43 INS49 INS49 INS21 INS10 INS49 INS43 INS42 INS60 INS25 INS21 INS41 INS32 INS42 UPD42 UPD42 INS42 INS42 INS42 INS7 INS42 INS43 INS59 INS62 INS8 INS8 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS43 INS60 INS21 INS21 INS42 INS42 INS27 INS42 INS32 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS59 INS32 INS32 INS45 INS32 INS32 INS42 INS52 INS32 INS42 INS40 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS52 INS43 INS27 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS36 INS42 INS11 INS43 INS42 INS42