Revert "HDFS-9170. Move libhdfs / fuse-dfs / libwebhdfs to hdfs-client. Contributed by Haohui Mai."

This reverts commit d5a9a3daa0224249221ffa7b8bd5751ab2feca56.

-    DFSClient.LOG.debug("newInfo = {}", newInfo);
+    if (DFSClient.LOG.isDebugEnabled()) {
+      DFSClient.LOG.debug("newInfo = " + newInfo);
+    }
-        DFSClient.LOG.debug("Failed to getReplicaVisibleLength from datanode {}"
-              + " for block {}", datanode, locatedblock.getBlock(), ioe);
+        if (DFSClient.LOG.isDebugEnabled()) {
+          DFSClient.LOG.debug("Failed to getReplicaVisibleLength from datanode "
+              + datanode + " for block " + locatedblock.getBlock(), ioe);
+        }
-    DFSClient.LOG.debug("Connecting to datanode {}", dnAddr);
+    if (DFSClient.LOG.isDebugEnabled()) {
+      DFSClient.LOG.debug("Connecting to datanode " + dnAddr);
+    }
-          DFSClient.LOG.debug("Waited {}ms to read from {}; spawning hedged "
-              + "read", conf.getHedgedReadThresholdMillis(), chosenNode.info);
+          if (DFSClient.LOG.isDebugEnabled()) {
+            DFSClient.LOG.debug("Waited " + conf.getHedgedReadThresholdMillis()
+                + "ms to read from " + chosenNode.info
+                + "; spawning hedged read");
+          }
-          DFSClient.LOG.debug("Failed getting node for hedged read: {}",
-              ioe.getMessage());
+          if (DFSClient.LOG.isDebugEnabled()) {
+            DFSClient.LOG.debug("Failed getting node for hedged read: "
+                + ioe.getMessage());
+          }
-          DFSClient.LOG.debug("Exception while seek to {} from {} of {} from "
-              + "{}", targetPos, getCurrentBlock(), src, currentNode, e);
+          if(DFSClient.LOG.isDebugEnabled()) {
+            DFSClient.LOG.debug("Exception while seek to " + targetPos
+                + " from " + getCurrentBlock() + " of " + src + " from "
+                + currentNode, e);
+          }
-        DFSClient.LOG.debug("Unable to perform a zero-copy read from offset {}"
-                + " of {}; {} bytes left in block. blockPos={}; curPos={};"
-                + "curEnd={}",
-            curPos, src, length63, blockPos, curPos, curEnd);
+        if (DFSClient.LOG.isDebugEnabled()) {
+          DFSClient.LOG.debug("Unable to perform a zero-copy read from offset " +
+            curPos + " of " + src + "; " + length63 + " bytes left in block.  " +
+            "blockPos=" + blockPos + "; curPos=" + curPos +
+            "; curEnd=" + curEnd);
+        }
-      DFSClient.LOG.debug("Reducing read length from {} to {} to avoid going "
-              + "more than one byte past the end of the block.  blockPos={}; "
-              +" curPos={}; curEnd={}",
-          maxLength, length63, blockPos, curPos, curEnd);
+      if (DFSClient.LOG.isDebugEnabled()) {
+        DFSClient.LOG.debug("Reducing read length from " + maxLength +
+            " to " + length63 + " to avoid going more than one byte " +
+            "past the end of the block.  blockPos=" + blockPos +
+            "; curPos=" + curPos + "; curEnd=" + curEnd);
+      }
-        DFSClient.LOG.debug("Unable to perform a zero-copy read from offset {} "
-            + " of {}; 31-bit MappedByteBuffer limit exceeded.  blockPos={}, "
-            + "curEnd={}", curPos, src, blockPos, curEnd);
+        if (DFSClient.LOG.isDebugEnabled()) {
+          DFSClient.LOG.debug("Unable to perform a zero-copy read from offset " +
+            curPos + " of " + src + "; 31-bit MappedByteBuffer limit " +
+            "exceeded.  blockPos=" + blockPos + ", curEnd=" + curEnd);
+        }
-      DFSClient.LOG.debug("Reducing read length from {} to {} to avoid 31-bit "
-          + "limit.  blockPos={}; curPos={}; curEnd={}",
-          maxLength, length, blockPos, curPos, curEnd);
+      if (DFSClient.LOG.isDebugEnabled()) {
+        DFSClient.LOG.debug("Reducing read length from " + maxLength +
+            " to " + length + " to avoid 31-bit limit.  " +
+            "blockPos=" + blockPos + "; curPos=" + curPos +
+            "; curEnd=" + curEnd);
+      }
-      DFSClient.LOG.debug("unable to perform a zero-copy read from offset {} of"
-          + " {}; BlockReader#getClientMmap returned null.", curPos, src);
+      if (DFSClient.LOG.isDebugEnabled()) {
+        DFSClient.LOG.debug("unable to perform a zero-copy read from offset " +
+          curPos + " of " + src + "; BlockReader#getClientMmap returned " +
+          "null.");
+      }
-      DFSClient.LOG.debug("readZeroCopy read {} bytes from offset {} via the "
-          + "zero-copy read path.  blockEnd = {}", length, curPos, blockEnd);
+      if (DFSClient.LOG.isDebugEnabled()) {
+        DFSClient.LOG.debug("readZeroCopy read " + length + 
+            " bytes from offset " + curPos + " via the zero-copy read " +
+            "path.  blockEnd = " + blockEnd);
+      }

INS25 INS25 INS25 INS32 INS8 INS32 INS8 MOV27 INS8 INS40 INS42 MOV21 INS40 INS42 MOV21 INS25 INS25 INS25 INS25 MOV25 MOV41 INS25 MOV27 INS8 INS32 INS8 MOV27 INS8 INS32 INS8 INS32 INS32 INS8 INS27 INS27 MOV25 MOV41 INS40 INS42 MOV21 MOV25 MOV41 INS40 INS42 MOV21 INS40 INS42 INS40 INS42 MOV21 INS45 INS42 INS25 INS45 INS42 INS32 INS32 INS32 INS8 INS25 INS8 INS8 INS40 INS42 INS27 INS40 INS42 INS27 INS27 INS27 INS40 INS42 MOV21 INS32 INS8 INS25 INS25 UPD45 MOV45 INS42 INS45 INS42 INS45 INS45 INS42 INS45 INS42 INS45 INS42 UPD45 MOV45 INS42 INS45 INS42 INS45 INS45 INS42 INS45 INS42 INS45 INS42 UPD45 MOV45 INS42 INS45 INS42 INS45 INS45 UPD45 MOV45 INS42 INS45 INS42 INS45 INS45 INS42 INS40 INS42 MOV21 INS32 MOV8 INS32 INS8 INS27 INS27 INS40 INS42 INS40 INS42 MOV21 UPD45 MOV45 INS42 INS45 INS42 INS45 INS42 INS45 INS45 INS42 INS45 INS42 INS45 INS42 UPD45 MOV45 INS42 INS45 INS42 INS45 INS45 INS42 INS45 INS42 UPD45 INS42 UPD45 MOV32 INS45 MOV32 UPD45 INS40 UPD45 INS27 INS27 INS45 MOV32 UPD45 MOV45 INS42 INS45 MOV32 INS45 INS42 INS45 INS42 DEL45 DEL42 DEL42 DEL45 DEL42 DEL40 DEL45 DEL45 DEL27 DEL42 DEL42 DEL42 DEL8 DEL45 DEL45 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL45 DEL45 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL45 DEL45 DEL27 DEL42 DEL42 DEL42 DEL42 DEL45 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL45 DEL27 DEL42 DEL42 DEL45 DEL27 DEL42 DEL42 DEL42