HDFS-10683. Make class Token$PrivateToken private. Contributed by John Zhuge.

+   * Whether this is a private token.
+   * @return false always for non-private tokens
+   */
+  public boolean isPrivate() {
+    return false;
+  }
+
+  /**
+   * Whether this is a private clone of a public token.
+   * @param thePublicService the public service name
+   * @return false always for non-private tokens
+   */
+  public boolean isPrivateCloneOf(Text thePublicService) {
+    return false;
+  }
+
+  /**
+   * Create a private clone of a public token.
+   * @param newService the new service name
+   * @return a private token
+   */
+  public Token<T> privateClone(Text newService) {
+    return new PrivateToken<>(this, newService);
+  }
+
+  /**
-  @InterfaceAudience.Private
-  @InterfaceStability.Unstable
-  public static class PrivateToken<T extends TokenIdentifier> extends Token<T> {
+  static class PrivateToken<T extends TokenIdentifier> extends Token<T> {
-    public PrivateToken(Token<T> token) {
-      super(token);
-      publicService = new Text(token.getService());
+    PrivateToken(Token<T> publicToken, Text newService) {
+      super(publicToken.identifier, publicToken.password, publicToken.kind,
+          newService);
+      assert !publicToken.isPrivate();
+      publicService = publicToken.service;
+      if (LOG.isDebugEnabled()) {
+        LOG.debug("Cloned private token " + this + " from " + publicToken);
+      }
-    public Text getPublicService() {
-      return publicService;
+    /**
+     * Whether this is a private token.
+     * @return true always for private tokens
+     */
+    @Override
+    public boolean isPrivate() {
+      return true;
+    }
+
+    /**
+     * Whether this is a private clone of a public token.
+     * @param thePublicService the public service name
+     * @return true when the public service is the same as specified
+     */
+    @Override
+    public boolean isPrivateCloneOf(Text thePublicService) {
+      return publicService.equals(thePublicService);

INS31 INS31 INS31 INS29 INS83 INS39 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS74 INS42 INS44 INS8 INS31 INS65 INS65 INS41 INS65 INS65 INS65 MOV43 INS42 INS41 INS65 INS65 INS65 INS43 INS43 MOV43 INS42 INS41 INS44 INS29 INS78 INS83 INS39 INS42 INS8 INS29 INS78 INS39 INS42 INS44 INS66 INS66 INS9 INS66 INS42 INS66 INS66 INS9 INS66 INS42 INS66 INS66 INS42 INS42 INS14 UPD42 INS43 INS42 INS6 INS21 INS25 INS65 INS65 INS42 INS41 INS65 INS65 INS65 INS42 INS43 INS42 INS74 INS52 INS42 INS42 INS40 INS40 INS40 UPD42 INS38 INS7 INS32 INS8 INS66 INS66 INS9 INS66 INS42 INS66 INS66 INS42 INS32 INS43 INS32 MOV42 INS40 UPD42 MOV42 UPD42 MOV42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS27 INS45 INS52 INS45 INS42 DEL40 DEL78 DEL40 DEL78 DEL83 DEL83 DEL32 DEL14 DEL7 DEL21 DEL42 DEL42