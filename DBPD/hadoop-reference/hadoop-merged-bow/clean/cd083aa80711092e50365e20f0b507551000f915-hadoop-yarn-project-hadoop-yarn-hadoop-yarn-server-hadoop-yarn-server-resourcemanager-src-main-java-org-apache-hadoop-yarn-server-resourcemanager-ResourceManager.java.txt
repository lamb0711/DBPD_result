Merging r1549949 through r1550312 from trunk to branch HDFS-2832

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1550313 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.ha.HAServiceProtocol;
+import org.apache.hadoop.ha.HAServiceProtocol.HAServiceState;
+import org.apache.hadoop.yarn.conf.HAUtil;
+    this.rmContext.setHAEnabled(HAUtil.isHAEnabled(conf));
+    if (this.rmContext.isHAEnabled()) {
+      HAUtil.verifyAndSetConfiguration(conf);
+    }
+    createAndInitActiveServices();
+
-  createRMStateStoreOperationFailedEventDispatcher() {
-    return new RMStateStoreOperationFailedEventDispatcher(
-        rmContext.getRMAdminService());
+      createRMStateStoreOperationFailedEventDispatcher() {
+    return new RMStateStoreOperationFailedEventDispatcher(rmContext, this);
-    private final AdminService adminService;
-    public RMStateStoreOperationFailedEventDispatcher(
-        AdminService adminService) {
-      this.adminService = adminService;
+    private final RMContext rmContext;
+    private final ResourceManager rm;
+
+    public RMStateStoreOperationFailedEventDispatcher(RMContext rmContext,
+        ResourceManager resourceManager) {
+      this.rmContext = rmContext;
+      this.rm = resourceManager;
-        synchronized(adminService) {
-          if (adminService.haEnabled) {
-            try {
-              // Transition to standby and reinit active services
-              LOG.info("Transitioning RM to Standby mode");
-              adminService.transitionToStandby(true);
-              return;
-            } catch (Exception e) {
-              LOG.error("Failed to transition RM to Standby mode.");
-            }
+        if (rmContext.isHAEnabled()) {
+          try {
+            // Transition to standby and reinit active services
+            LOG.info("Transitioning RM to Standby mode");
+            rm.transitionToStandby(true);
+            return;
+          } catch (Exception e) {
+            LOG.error("Failed to transition RM to Standby mode.");
-  void setConf(Configuration configuration) {
-    conf = configuration;
-  }
-
+  synchronized void transitionToActive() throws Exception {
+    if (rmContext.getHAServiceState() ==
+        HAServiceProtocol.HAServiceState.ACTIVE) {
+      LOG.info("Already in active state");
+      return;
+    }
+
+    LOG.info("Transitioning to active state");
+    startActiveServices();
+    rmContext.setHAServiceState(HAServiceProtocol.HAServiceState.ACTIVE);
+    LOG.info("Transitioned to active state");
+  }
+
+  synchronized void transitionToStandby(boolean initialize)
+      throws Exception {
+    if (rmContext.getHAServiceState() ==
+        HAServiceProtocol.HAServiceState.STANDBY) {
+      LOG.info("Already in standby state");
+      return;
+    }
+
+    LOG.info("Transitioning to standby state");
+    if (rmContext.getHAServiceState() ==
+        HAServiceProtocol.HAServiceState.ACTIVE) {
+      stopActiveServices();
+      if (initialize) {
+        createAndInitActiveServices();
+      }
+    }
+    rmContext.setHAServiceState(HAServiceProtocol.HAServiceState.STANDBY);
+    LOG.info("Transitioned to standby state");
+  }
+
+
+    if (this.rmContext.isHAEnabled()) {
+      transitionToStandby(true);
+    } else {
+      transitionToActive();
+    }
+
+    transitionToStandby(false);
+    rmContext.setHAServiceState(HAServiceState.STOPPING);

INS26 INS26 INS26 MOV31 INS40 INS40 INS40 INS31 INS23 INS83 UPD42 INS43 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS21 INS25 INS21 UPD43 INS83 INS83 INS43 INS59 INS44 MOV8 UPD42 MOV42 INS25 INS21 INS21 INS21 INS21 INS39 INS42 INS42 INS25 INS21 INS25 INS21 INS21 INS25 INS21 INS21 INS32 INS32 INS8 INS32 UPD42 UPD42 INS42 INS42 UPD43 UPD42 INS43 INS42 INS21 MOV25 INS25 MOV21 MOV21 INS27 INS8 INS32 INS32 INS32 INS32 INS27 INS8 INS32 INS27 INS8 INS32 INS32 INS32 INS8 INS8 INS32 INS32 INS22 INS42 INS32 INS22 INS42 INS21 INS42 INS42 INS52 UPD42 INS42 INS7 MOV27 MOV8 INS32 INS40 MOV21 INS41 INS42 INS42 INS45 INS42 INS42 INS42 INS40 INS42 INS42 INS45 INS32 INS40 INS21 INS41 INS42 INS42 INS45 INS32 INS40 INS21 INS25 INS42 INS42 INS40 INS42 INS42 INS45 INS22 INS42 INS21 INS21 INS42 INS9 INS42 INS42 INS40 INS52 INS42 INS42 INS42 INS42 INS52 INS42 INS32 UPD42 INS22 INS42 MOV21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS8 INS52 INS42 INS32 INS32 INS42 INS42 INS42 UPD42 INS52 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS21 INS42 INS9 INS42 INS42 INS42 INS32 INS42 UPD42 DEL42 DEL42 DEL32 DEL40 DEL42 DEL51 DEL25 DEL8 DEL42 DEL42 DEL7 DEL43 DEL42 DEL44 DEL8