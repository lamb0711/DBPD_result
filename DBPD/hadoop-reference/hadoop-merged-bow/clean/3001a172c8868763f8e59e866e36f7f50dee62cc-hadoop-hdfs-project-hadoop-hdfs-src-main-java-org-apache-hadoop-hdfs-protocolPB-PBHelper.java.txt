Reverting r1213512 because it committed changes that were not part of the patch.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213980 13f79535-47bb-0310-9956-ffa450edef68

- * 
- * Note that when converting from an internal type to protobuf type, the
- * converter never return null for protobuf type. The check for internal type
- * being null must be done before calling the convert() method.
-    if (cmd == null) return null;
-        di.hasLocation() ? di.getLocation() : null , 
-        di.hasHostName() ? di.getHostName() : null,
+        di.getLocation(), di.getHostName(),
-    DatanodeInfoProto.Builder builder = DatanodeInfoProto.newBuilder();
-    if (di.getHostName() != null) {
-      builder.setHostName(di.getHostName());
-    }
-    if (di.getNetworkLocation() != null) {
-      builder.setLocation(di.getNetworkLocation());
-    }
-        
-    return builder.
+    return DatanodeInfoProto.newBuilder().
+     setLocation(di.getNetworkLocation()).
+     setHostName(di.getHostName()).
-    ReceivedDeletedBlockInfoProto.Builder builder = 
-        ReceivedDeletedBlockInfoProto.newBuilder();
-    
-    if (receivedDeletedBlockInfo.getDelHints() != null) {
-      builder.setDeleteHint(receivedDeletedBlockInfo.getDelHints());
-    }
-    return builder.setBlock(PBHelper.convert(receivedDeletedBlockInfo.getBlock()))
-        .build();
+    return ReceivedDeletedBlockInfoProto.newBuilder()
+        .setBlock(PBHelper.convert(receivedDeletedBlockInfo.getBlock()))
+        .setDeleteHint(receivedDeletedBlockInfo.getDelHints()).build();
-        proto.hasDeleteHint() ? proto.getDeleteHint() : null);
+        proto.getDeleteHint());
+    if (lb == null) {
+      return null;
+    }
-        lb.hasLastBlock() ? PBHelper.convert(lb.getLastBlock()) : null,
+        PBHelper.convert(lb.getLastBlock()),
-    LocatedBlocksProto.Builder builder = 
-        LocatedBlocksProto.newBuilder();
-    if (lb.getLastLocatedBlock() != null) {
-      builder.setLastBlock(PBHelper.convert(lb.getLastLocatedBlock()));
-    }
-    return builder.setFileLength(lb.getFileLength())
-        .setUnderConstruction(lb.isUnderConstruction())
-        .addAllBlocks(PBHelper.convertLocatedBlock2(lb.getLocatedBlocks()))
-        .setIsLastBlockComplete(lb.isLastBlockComplete()).build();
+    return LocatedBlocksProto.newBuilder().
+      setFileLength(lb.getFileLength()).
+      setUnderConstruction(lb.isUnderConstruction()).
+      addAllBlocks(PBHelper.convertLocatedBlock2(lb.getLocatedBlocks())).
+      setLastBlock(PBHelper.convert(lb.getLastLocatedBlock())).setIsLastBlockComplete(lb.isLastBlockComplete()).build();
+      setSymlink(ByteString.copyFrom(fs.getSymlinkInBytes())).
-    
-    if (fs.getSymlink() != null) {
-      builder.setSymlink(ByteString.copyFrom(fs.getSymlinkInBytes()));
-    }
+    LocatedBlocks locations = null;
-      LocatedBlocks locations = ((HdfsLocatedFileStatus)fs).getBlockLocations();
-      if (locations != null) {
-        builder.setLocations(PBHelper.convert(locations));
-      }
+      builder.setLocations(PBHelper.convert(locations));

INS25 MOV60 MOV25 INS32 INS27 INS8 MOV62 MOV32 MOV32 MOV32 INS42 MOV32 INS42 INS33 INS41 MOV32 INS33 UPD42 MOV32 INS33 INS32 INS32 MOV32 MOV32 INS42 MOV32 MOV32 INS42 MOV32 MOV32 INS32 INS32 INS42 MOV32 MOV32 INS42 MOV32 UPD42 MOV32 MOV32 DEL66 DEL66 DEL66 DEL42 DEL33 DEL27 DEL33 DEL41 DEL25 DEL42 DEL42 DEL32 DEL33 DEL16 DEL42 DEL42 DEL32 DEL33 DEL16 DEL40 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL40 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL33 DEL16 DEL42 DEL42 DEL32 DEL33 DEL16 DEL40 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL32 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25