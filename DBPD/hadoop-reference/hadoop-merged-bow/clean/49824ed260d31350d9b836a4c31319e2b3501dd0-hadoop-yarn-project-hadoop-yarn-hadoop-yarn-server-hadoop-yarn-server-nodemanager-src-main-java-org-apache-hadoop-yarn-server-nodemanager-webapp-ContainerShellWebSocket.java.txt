YARN-8838. Check that container user is same as websocket user for interactive shell. Contributed by Eric Yang

+import java.util.List;
+import java.util.Map;
+import org.apache.hadoop.security.HadoopKerberosName;
+import org.apache.hadoop.security.UserGroupInformation;
-    LOG.info(session.getRemoteAddress().getHostString() + " connected!");
-
+      if (!checkAuthorization(session, container)) {
+        session.close(1008, "Forbidden");
+      }
+      LOG.info(session.getRemoteAddress().getHostString() + " connected!");
+  /**
+   * Check if user is authorized to access container.
+   * @param session websocket session
+   * @param container instance of container to access
+   * @return true if user is allowed to access container.
+   * @throws IOException
+   */
+  protected boolean checkAuthorization(Session session, Container container)
+      throws IOException {
+    boolean authorized = true;
+    String user = "";
+    if (UserGroupInformation.isSecurityEnabled()) {
+      user = new HadoopKerberosName(session.getUpgradeRequest()
+          .getUserPrincipal().getName()).getShortName();
+    } else {
+      Map<String, List<String>> parameters = session.getUpgradeRequest()
+          .getParameterMap();
+      if (parameters.containsKey("user.name")) {
+        List<String> users = parameters.get("user.name");
+        user = users.get(0);
+      }
+    }
+    boolean isAdmin = false;
+    if (nmContext.getApplicationACLsManager().areACLsEnabled()) {
+      UserGroupInformation ugi = UserGroupInformation.createRemoteUser(user);
+      isAdmin = nmContext.getApplicationACLsManager().isAdmin(ugi);
+    }
+    String containerUser = container.getUser();
+    if (!user.equals(containerUser) && !isAdmin) {
+      authorized = false;
+    }
+    return authorized;
+  }

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS29 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS42 INS60 INS60 INS25 INS60 INS25 INS60 INS25 INS41 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS39 INS59 INS43 INS59 INS32 INS8 INS8 INS39 INS59 INS32 INS8 INS43 INS59 INS27 INS8 INS42 INS25 MOV21 INS42 INS9 INS42 INS42 INS45 INS42 INS42 INS21 INS60 INS25 INS42 INS9 INS32 INS42 INS60 INS21 INS42 INS42 INS32 INS38 INS38 INS21 INS38 INS8 INS7 INS74 INS59 INS32 INS8 INS42 INS42 INS43 INS59 INS7 INS42 INS42 INS32 INS42 INS7 INS32 INS21 INS42 INS32 INS43 INS43 INS74 INS42 INS32 INS42 INS42 INS45 INS60 INS21 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS32 INS14 INS42 INS42 INS42 INS43 INS43 INS32 INS42 INS74 INS59 INS7 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS34 INS45 INS43 INS32 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS34 INS32 INS42 INS42 INS42