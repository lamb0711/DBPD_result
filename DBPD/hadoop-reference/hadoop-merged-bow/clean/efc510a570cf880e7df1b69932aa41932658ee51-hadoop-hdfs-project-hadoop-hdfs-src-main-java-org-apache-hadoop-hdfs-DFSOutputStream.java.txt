HDFS-8386. Improve synchronization of 'streamer' reference in DFSOutputStream. Contributed by Rakesh R.

-      streamer.getLastException().throwException4Close();
+      getStreamer().getLastException().throwException4Close();
-    if (streamer.streamerClosed()) {
+    if (getStreamer().streamerClosed()) {
-    DatanodeInfo[] currentNodes = streamer.getNodes();
+    DatanodeInfo[] currentNodes = getStreamer().getNodes();
-      streamer.setBytesCurBlock(lastBlock.getBlockSize());
+      getStreamer().setBytesCurBlock(lastBlock.getBlockSize());
-      streamer.setPipelineInConstruction(lastBlock);
+      getStreamer().setPipelineInConstruction(lastBlock);
-      streamer.setAppendChunk(true);
+      getStreamer().setAppendChunk(true);
-      currentPacket = createPacket(packetSize, chunksPerPacket, 
-          streamer.getBytesCurBlock(), streamer.getAndIncCurrentSeqno(), false);
+      currentPacket = createPacket(packetSize, chunksPerPacket, getStreamer()
+          .getBytesCurBlock(), getStreamer().getAndIncCurrentSeqno(), false);
-            ", bytesCurBlock=" + streamer.getBytesCurBlock());
+            ", bytesCurBlock=" + getStreamer().getBytesCurBlock());
-    streamer.incBytesCurBlock(len);
+    getStreamer().incBytesCurBlock(len);
-        streamer.getBytesCurBlock() == blockSize) {
+        getStreamer().getBytesCurBlock() == blockSize) {
-            ", bytesCurBlock=" + streamer.getBytesCurBlock() +
+            ", bytesCurBlock=" + getStreamer().getBytesCurBlock() +
-            ", appendChunk=" + streamer.getAppendChunk());
+            ", appendChunk=" + getStreamer().getAppendChunk());
-      streamer.waitAndQueuePacket(currentPacket);
+      getStreamer().waitAndQueuePacket(currentPacket);
-    if (streamer.getAppendChunk() &&
-        streamer.getBytesCurBlock() % bytesPerChecksum == 0) {
-      streamer.setAppendChunk(false);
+    if (getStreamer().getAppendChunk() &&
+        getStreamer().getBytesCurBlock() % bytesPerChecksum == 0) {
+      getStreamer().setAppendChunk(false);
-    if (!streamer.getAppendChunk()) {
-      int psize = Math.min((int)(blockSize- streamer.getBytesCurBlock()),
+    if (!getStreamer().getAppendChunk()) {
+      int psize = Math.min((int)(blockSize- getStreamer().getBytesCurBlock()),
-    if (streamer.getBytesCurBlock() == blockSize) {
-      currentPacket = createPacket(0, 0, streamer.getBytesCurBlock(),
-          streamer.getAndIncCurrentSeqno(), true);
+    if (getStreamer().getBytesCurBlock() == blockSize) {
+      currentPacket = createPacket(0, 0, getStreamer().getBytesCurBlock(),
+          getStreamer().getAndIncCurrentSeqno(), true);
-      streamer.waitAndQueuePacket(currentPacket);
+      getStreamer().waitAndQueuePacket(currentPacket);
-      streamer.setBytesCurBlock(0);
+      getStreamer().setBytesCurBlock(0);
-              + " bytesCurBlock=" + streamer.getBytesCurBlock()
+              + " bytesCurBlock=" + getStreamer().getBytesCurBlock()
-        if (lastFlushOffset != streamer.getBytesCurBlock()) {
-          assert streamer.getBytesCurBlock() > lastFlushOffset;
+        if (lastFlushOffset != getStreamer().getBytesCurBlock()) {
+          assert getStreamer().getBytesCurBlock() > lastFlushOffset;
-          lastFlushOffset = streamer.getBytesCurBlock();
+          lastFlushOffset = getStreamer().getBytesCurBlock();
-                streamer.getBytesCurBlock(), streamer.getAndIncCurrentSeqno(), false);
+                getStreamer().getBytesCurBlock(), getStreamer()
+                    .getAndIncCurrentSeqno(), false);
-          if (isSync && streamer.getBytesCurBlock() > 0 && !endBlock) {
+          if (isSync && getStreamer().getBytesCurBlock() > 0 && !endBlock) {
-            // So send an empty sync packet if we do not end the block right now
+            // So send an empty sync packet if we do not end the block right
+            // now
-                streamer.getBytesCurBlock(), streamer.getAndIncCurrentSeqno(), false);
+                getStreamer().getBytesCurBlock(), getStreamer()
+                    .getAndIncCurrentSeqno(), false);
-          streamer.waitAndQueuePacket(currentPacket);
+          getStreamer().waitAndQueuePacket(currentPacket);
-        if (endBlock && streamer.getBytesCurBlock() > 0) {
+        if (endBlock && getStreamer().getBytesCurBlock() > 0) {
-          currentPacket = createPacket(0, 0, streamer.getBytesCurBlock(),
-              streamer.getAndIncCurrentSeqno(), true);
+          currentPacket = createPacket(0, 0, getStreamer().getBytesCurBlock(),
+              getStreamer().getAndIncCurrentSeqno(), true);
-          streamer.waitAndQueuePacket(currentPacket);
+          getStreamer().waitAndQueuePacket(currentPacket);
-          streamer.setBytesCurBlock(0);
+          getStreamer().setBytesCurBlock(0);
-          streamer.setBytesCurBlock(streamer.getBytesCurBlock() - numKept);
+          getStreamer().setBytesCurBlock(
+              getStreamer().getBytesCurBlock() - numKept);
-        toWaitFor = streamer.getLastQueuedSeqno();
+        toWaitFor = getStreamer().getLastQueuedSeqno();
-      streamer.waitForAckedSeqno(toWaitFor);
+      getStreamer().waitForAckedSeqno(toWaitFor);
-      if (updateLength || streamer.getPersistBlocks().get()) {
+      if (updateLength || getStreamer().getPersistBlocks().get()) {
-          if (!streamer.streamerClosed() && streamer.getBlock() != null) {
-            lastBlockLength = streamer.getBlock().getNumBytes();
+          if (!getStreamer().streamerClosed()
+              && getStreamer().getBlock() != null) {
+            lastBlockLength = getStreamer().getBlock().getNumBytes();
-      if (streamer.getPersistBlocks().getAndSet(false) || updateLength) {
+      if (getStreamer().getPersistBlocks().getAndSet(false) || updateLength) {
-        if (!streamer.streamerClosed()) {
-          streamer.setHflush();
+        if (!getStreamer().streamerClosed()) {
+          getStreamer().setHflush();
-          streamer.getLastException().set(e);
+          getStreamer().getLastException().set(e);
-    if (streamer.streamerClosed()) {
+    if (getStreamer().streamerClosed()) {
-    DatanodeInfo[] currentNodes = streamer.getNodes();
+    DatanodeInfo[] currentNodes = getStreamer().getNodes();
-      streamer.queuePacket(currentPacket);
+      getStreamer().queuePacket(currentPacket);
-      toWaitFor = streamer.getLastQueuedSeqno();
+      toWaitFor = getStreamer().getLastQueuedSeqno();
-    streamer.waitForAckedSeqno(toWaitFor);
+    getStreamer().waitForAckedSeqno(toWaitFor);
-    streamer.start();
+    getStreamer().start();
-    streamer.getLastException().set(new IOException("Lease timeout of "
+    getStreamer().getLastException().set(new IOException("Lease timeout of "
-    return closed || streamer.streamerClosed();
+    return closed || getStreamer().streamerClosed();
-    streamer.release();
+    getStreamer().release();
-      streamer.close(force);
-      streamer.join();
-      streamer.closeSocket();
+      getStreamer().close(force);
+      getStreamer().join();
+      getStreamer().closeSocket();
-      streamer.setSocketToNull();
+      getStreamer().setSocketToNull();
-      streamer.getLastException().check(true);
+      getStreamer().getLastException().check(true);
-        streamer.waitAndQueuePacket(currentPacket);
+        getStreamer().waitAndQueuePacket(currentPacket);
-      if (streamer.getBytesCurBlock() != 0) {
+      if (getStreamer().getBytesCurBlock() != 0) {
-        currentPacket = createPacket(0, 0, streamer.getBytesCurBlock(),
-            streamer.getAndIncCurrentSeqno(), true);
+        currentPacket = createPacket(0, 0, getStreamer().getBytesCurBlock(),
+            getStreamer().getAndIncCurrentSeqno(), true);
-      ExtendedBlock lastBlock = streamer.getBlock();
+      ExtendedBlock lastBlock = getStreamer().getBlock();
-    streamer.setArtificialSlowdown(period);
+    getStreamer().setArtificialSlowdown(period);
-    return streamer.getBlockToken();
+    return getStreamer().getBlockToken();
-    return streamer.getBlock();
+    return getStreamer().getBlock();
+
+  /**
+   * Set the data streamer object.
+   */
+  protected synchronized void setStreamer(DataStreamer streamer) {
+    this.streamer = streamer;
+  }
+
+  /**
+   * Returns the data streamer object.
+   */
+  protected synchronized DataStreamer getStreamer() {
+    return streamer;
+  }

INS31 INS31 INS29 INS83 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS83 INS43 INS42 INS8 INS65 INS43 INS42 INS21 INS65 INS42 INS41 INS66 INS42 INS7 INS66 INS42 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS22 INS42 UPD42 MOV42 INS32 UPD42 MOV42 INS32 INS32 INS32 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 INS32 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS52 INS42 UPD42 MOV42 INS32 INS32 INS32 INS32 INS32 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 INS32 INS32 INS32 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 INS32 INS32 INS32 INS32 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 INS32 INS32 UPD42 MOV42 INS32 INS32 UPD42 MOV42 INS32 INS32 INS32 INS32 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 INS32 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 INS32 INS32 INS32 UPD42 MOV42 INS32 INS32 INS32 INS32 INS32 UPD42 MOV42 UPD42 MOV42 INS32 INS32 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 INS32 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 INS32 INS32 INS32 INS32 INS32 INS32 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 INS32 UPD42 MOV42 INS32 INS32 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42