HDFS-8898. Create API and command-line argument to get quota and quota usage without detailed content summary. Contributed by Ming Ma.

+import org.apache.hadoop.fs.QuotaUsage;
+  static QuotaUsage getQuotaUsage(
+      FSDirectory fsd, String src) throws IOException {
+    byte[][] pathComponents = FSDirectory.getPathComponentsForReservedPath(src);
+    FSPermissionChecker pc = fsd.getPermissionChecker();
+    final INodesInPath iip;
+    fsd.readLock();
+    try {
+      src = fsd.resolvePath(pc, src, pathComponents);
+      iip = fsd.getINodesInPath(src, false);
+      if (fsd.isPermissionEnabled()) {
+        fsd.checkPermission(pc, iip, false, null, null, null,
+            FsAction.READ_EXECUTE);
+      }
+    } finally {
+      fsd.readUnlock();
+    }
+    QuotaUsage usage = getQuotaUsageInt(fsd, iip);
+    if (usage != null) {
+      return usage;
+    } else {
+      //If quota isn't set, fall back to getContentSummary.
+      return getContentSummaryInt(fsd, iip);
+    }
+  }
+
+  private static QuotaUsage getQuotaUsageInt(FSDirectory fsd, INodesInPath iip)
+    throws IOException {
+    fsd.readLock();
+    try {
+      INode targetNode = iip.getLastINode();
+      QuotaUsage usage = null;
+      if (targetNode.isDirectory()) {
+        DirectoryWithQuotaFeature feature =
+            targetNode.asDirectory().getDirectoryWithQuotaFeature();
+        if (feature != null) {
+          QuotaCounts counts = feature.getSpaceConsumed();
+          QuotaCounts quotas = feature.getQuota();
+          usage = new QuotaUsage.Builder().
+              fileAndDirectoryCount(counts.getNameSpace()).
+              quota(quotas.getNameSpace()).
+              spaceConsumed(counts.getStorageSpace()).
+              spaceQuota(quotas.getStorageSpace()).
+              typeConsumed(counts.getTypeSpaces().asArray()).
+              typeQuota(quotas.getTypeSpaces().asArray()).build();
+        }
+      }
+      return usage;
+    } finally {
+      fsd.readUnlock();
+    }
+  }
+

INS26 INS40 INS31 INS31 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS83 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS60 INS60 INS21 INS54 INS60 INS25 INS42 INS43 INS42 INS43 INS42 INS42 INS21 INS54 INS42 INS42 INS5 INS59 INS43 INS59 INS83 INS43 INS59 INS32 INS8 INS8 INS43 INS59 INS27 INS8 INS8 INS42 INS42 INS32 INS8 INS8 INS39 INS85 INS85 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS21 INS21 INS25 INS21 INS42 INS42 INS32 INS42 INS33 INS41 INS41 INS42 INS42 INS60 INS60 INS25 INS41 INS21 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS32 INS8 INS32 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS32 INS8 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS33 INS42 INS42 INS60 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS32 INS42 INS42 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS9 INS33 INS33 INS33 INS40 INS42 INS42 INS32 INS42 INS33 INS60 INS60 INS21 INS32 INS42 INS43 INS59 INS43 INS59 INS7 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS14 INS42 INS32 INS42 INS42 INS43 INS42 INS42 INS40