HDDS-1539. Implement addAcl,removeAcl,setAcl,getAcl for Volume. Contributed Ajay Kumar. (#847)



+import org.apache.hadoop.ozone.OzoneAcl;
+import org.apache.hadoop.ozone.om.exceptions.OMException;
+import org.apache.hadoop.ozone.security.acl.IAccessAuthorizer.ACLIdentityType;
+import java.util.BitSet;
+import java.util.Objects;
+
+import static org.apache.hadoop.ozone.om.exceptions.OMException.ResultCodes.INVALID_REQUEST;
+import static org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.OzoneAclInfo.OzoneAclRights.ALL;
-  private ArrayList<Map<String, List<OzoneAclRights>>> aclMaps;
+  private ArrayList<Map<String, BitSet>> aclMaps;
-  private Map<String, List<OzoneAclRights>> getMap(OzoneAclType type) {
+  private Map<String, BitSet> getMap(OzoneAclType type) {
-  private List<OzoneAclRights> getAcl(OzoneAclType type, String user) {
+  private BitSet getAcl(OzoneAclType type, String user) {
+  public List<OzoneAcl> getAcl() {
+    List<OzoneAcl> acls = new ArrayList<>();
+
+    for (OzoneAclType type : OzoneAclType.values()) {
+      aclMaps.get(type.ordinal()).entrySet().stream().
+          forEach(entry -> acls.add(new OzoneAcl(ACLIdentityType.
+              valueOf(type.name()), entry.getKey(), entry.getValue())));
+    }
+    return acls;
+  }
+
-  public void addAcl(OzoneAclInfo acl) {
-    getMap(acl.getType()).put(acl.getName(), acl.getRightsList());
+  public void addAcl(OzoneAcl acl) throws OMException {
+    Objects.requireNonNull(acl, "Acl should not be null.");
+    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());
+    if (!getMap(aclType).containsKey(acl.getName())) {
+      getMap(aclType).put(acl.getName(), acl.getAclBitSet());
+    } else {
+      // throw exception if acl is already added.
+      throw new OMException("Acl " + acl + " already exist.", INVALID_REQUEST);
+    }
+  }
+
+  // Add a new acl to the map
+  public void setAcls(List<OzoneAcl> acls) throws OMException {
+    Objects.requireNonNull(acls, "Acls should not be null.");
+    // Remove all Acls.
+    for (OzoneAclType type : OzoneAclType.values()) {
+      aclMaps.get(type.ordinal()).clear();
+    }
+
+    // Add acls.
+    for (OzoneAcl acl : acls) {
+      addAcl(acl);
+    }
+  }
+
+  // Add a new acl to the map
+  public void removeAcl(OzoneAcl acl) throws OMException {
+    Objects.requireNonNull(acl, "Acl should not be null.");
+    OzoneAclType aclType = OzoneAclType.valueOf(acl.getType().name());
+    if (getMap(aclType).containsKey(acl.getName())) {
+      getMap(aclType).remove(acl.getName());
+    } else {
+      // throw exception if acl is already added.
+      throw new OMException("Acl [" + acl + "] doesn't exist.",
+          INVALID_REQUEST);
+    }
+  }
+
+  // Add a new acl to the map
+  public void addAcl(OzoneAclInfo acl) throws OMException {
+    Objects.requireNonNull(acl, "Acl should not be null.");
+    if (!getMap(acl.getType()).containsKey(acl.getName())) {
+      BitSet acls = new BitSet(OzoneAclRights.values().length);
+      acl.getRightsList().parallelStream().forEach(a -> acls.set(a.ordinal()));
+      getMap(acl.getType()).put(acl.getName(), acls);
+    } else {
+      // throw exception if acl is already added.
+
+      throw new OMException("Acl " + acl + " already exist.", INVALID_REQUEST);
+    }
-    List<OzoneAclRights> storedRights = getAcl(acl.getType(), acl.getName());
-    if(storedRights == null) {
+    BitSet aclBitSet = getAcl(acl.getType(), acl.getName());
+    if (aclBitSet == null) {
-    for (OzoneAclRights right : storedRights) {
-      switch (right) {
-      case CREATE:
-        return (right == OzoneAclRights.CREATE)
-            || (right == OzoneAclRights.ALL);
-      case LIST:
-        return (right == OzoneAclRights.LIST)
-            || (right == OzoneAclRights.ALL);
-      case WRITE:
-        return (right == OzoneAclRights.WRITE)
-            || (right == OzoneAclRights.ALL);
-      case READ:
-        return (right == OzoneAclRights.READ)
-            || (right == OzoneAclRights.ALL);
-      case DELETE:
-        return (right == OzoneAclRights.DELETE)
-            || (right == OzoneAclRights.ALL);
-      case READ_ACL:
-        return (right == OzoneAclRights.READ_ACL)
-            || (right == OzoneAclRights.ALL);
-      case WRITE_ACL:
-        return (right == OzoneAclRights.WRITE_ACL)
-            || (right == OzoneAclRights.ALL);
-      case ALL:
-        return (right == OzoneAclRights.ALL);
-      case NONE:
-        return !(right == OzoneAclRights.NONE);
-      default:
-        return false;
+    for (OzoneAclRights right : acl.getRightsList()) {
+      if (aclBitSet.get(right.ordinal()) || aclBitSet.get(ALL.ordinal())) {
+        return true;
-    for (OzoneAclType type: OzoneAclType.values()) {
-      for (Map.Entry<String, List<OzoneAclRights>> entry :
+    for (OzoneAclType type : OzoneAclType.values()) {
+      for (Map.Entry<String, BitSet> entry :
-        OzoneAclInfo aclInfo = OzoneAclInfo.newBuilder()
+        OzoneAclInfo.Builder builder = OzoneAclInfo.newBuilder()
-            .setType(type)
-            .addAllRights(entry.getValue())
-            .build();
-        aclList.add(aclInfo);
+            .setType(type);
+        entry.getValue().stream().forEach(a ->
+            builder.addRights(OzoneAclRights.values()[a]));
+        aclList.add(builder.build());
-      List<OzoneAclInfo> aclList) {
+      List<OzoneAclInfo> aclList) throws OMException {

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS31 UPD74 UPD74 INS43 INS83 UPD74 MOV74 INS42 INS8 INS44 INS43 INS8 MOV83 UPD39 MOV39 UPD42 MOV42 MOV44 INS43 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS83 INS39 INS42 MOV44 INS43 INS8 INS83 INS39 INS42 MOV44 INS8 INS43 UPD74 UPD43 MOV43 INS42 UPD43 INS60 INS70 INS41 INS43 INS42 INS42 INS21 INS60 INS25 UPD74 MOV74 UPD42 INS42 INS21 INS70 INS70 INS43 INS42 INS42 INS21 INS60 INS25 INS42 INS21 INS25 MOV25 MOV60 MOV25 INS70 MOV41 INS42 UPD43 MOV43 UPD42 UPD42 UPD74 MOV74 INS59 INS44 INS32 INS8 INS42 INS42 INS32 INS43 INS59 INS38 INS8 INS8 UPD43 INS32 INS44 INS32 INS8 INS44 INS42 INS8 INS42 INS32 INS43 INS59 INS32 INS8 INS8 INS32 INS38 INS8 INS8 INS43 MOV44 MOV32 INS8 UPD42 UPD43 INS42 INS14 INS43 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS32 MOV21 INS53 UPD42 INS42 INS42 INS42 INS45 INS43 INS42 INS42 INS42 INS21 INS43 INS42 INS21 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS32 INS42 INS32 INS21 INS53 INS42 INS42 INS42 INS45 MOV32 INS60 INS21 INS21 INS53 INS42 UPD42 UPD42 INS25 UPD42 INS74 INS42 INS32 INS42 INS42 INS32 INS32 INS42 MOV32 INS32 INS14 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS14 INS42 INS32 INS43 INS59 INS32 INS32 INS14 INS27 INS8 INS44 INS43 INS32 INS42 INS86 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS43 INS27 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS43 INS27 INS42 UPD42 MOV42 INS42 INS42 INS42 INS14 INS32 INS42 INS86 INS32 INS42 INS32 INS42 INS43 INS27 INS42 INS32 INS32 INS41 UPD74 MOV74 INS42 INS21 INS42 INS32 INS42 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 UPD42 MOV42 INS45 INS43 INS22 INS32 INS42 INS59 INS32 INS42 INS32 INS42 INS42 INS42 INS45 UPD42 MOV42 INS45 INS42 INS42 INS32 INS42 INS42 INS32 UPD9 MOV9 INS43 UPD43 INS32 INS32 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 MOV32 INS32 INS42 INS86 INS32 INS42 INS42 INS32 INS43 INS32 INS32 MOV32 INS42 INS42 INS42 INS42 INS32 INS42 INS59 INS32 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS2 INS42 INS42 INS32 INS42 INS42 INS42 DEL42 DEL43 DEL74 DEL42 DEL43 DEL74 DEL8 DEL42 DEL42 DEL42 DEL49 DEL42 DEL40 DEL27 DEL36 DEL42 DEL40 DEL27 DEL36 DEL27 DEL41 DEL42 DEL49 DEL42 DEL40 DEL27 DEL36 DEL42 DEL40 DEL27 DEL36 DEL27 DEL41 DEL42 DEL49 DEL42 DEL40 DEL27 DEL36 DEL40 DEL27 DEL36 DEL27 DEL41 DEL42 DEL49 DEL42 DEL40 DEL27 DEL36 DEL42 DEL40 DEL27 DEL36 DEL27 DEL41 DEL42 DEL49 DEL42 DEL40 DEL27 DEL36 DEL42 DEL40 DEL27 DEL36 DEL27 DEL41 DEL42 DEL49 DEL42 DEL40 DEL27 DEL36 DEL42 DEL40 DEL27 DEL36 DEL27 DEL41 DEL42 DEL49 DEL42 DEL40 DEL27 DEL36 DEL42 DEL40 DEL27 DEL36 DEL27 DEL41 DEL42 DEL49 DEL40 DEL27 DEL36 DEL41 DEL42 DEL49 DEL42 DEL40 DEL27 DEL36 DEL38 DEL41 DEL49 DEL41 DEL50 DEL8 DEL70 DEL8 DEL31 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32