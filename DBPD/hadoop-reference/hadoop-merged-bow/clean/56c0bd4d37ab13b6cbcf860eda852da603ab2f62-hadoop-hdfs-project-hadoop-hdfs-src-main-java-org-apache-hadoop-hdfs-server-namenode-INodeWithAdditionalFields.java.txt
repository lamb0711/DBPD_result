Merge from trunk to branch

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1610853 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.hdfs.server.namenode.INode.Feature;
-import org.apache.hadoop.hdfs.server.namenode.XAttrFeature;
+import org.apache.hadoop.hdfs.util.LongBitFormat;
-    MODE(0, 16),
-    GROUP(MODE.OFFSET + MODE.LENGTH, 25),
-    USER(GROUP.OFFSET + GROUP.LENGTH, 23);
+    MODE(null, 16),
+    GROUP(MODE.BITS, 25),
+    USER(GROUP.BITS, 23);
-    final int OFFSET;
-    final int LENGTH; //bit length
-    final long MASK;
+    final LongBitFormat BITS;
-    PermissionStatusFormat(int offset, int length) {
-      OFFSET = offset;
-      LENGTH = length;
-      MASK = ((-1L) >>> (64 - LENGTH)) << OFFSET;
+    private PermissionStatusFormat(LongBitFormat previous, int length) {
+      BITS = new LongBitFormat(name(), previous, length, 0);
-    long retrieve(long record) {
-      return (record & MASK) >>> OFFSET;
+    static String getUser(long permission) {
+      final int n = (int)USER.BITS.retrieve(permission);
+      return SerialNumberManager.INSTANCE.getUser(n);
-    long combine(long bits, long record) {
-      return (record & ~MASK) | (bits << OFFSET);
+    static String getGroup(long permission) {
+      final int n = (int)GROUP.BITS.retrieve(permission);
+      return SerialNumberManager.INSTANCE.getGroup(n);
+    }
+    
+    static short getMode(long permission) {
+      return (short)MODE.BITS.retrieve(permission);
-      permission = USER.combine(user, permission);
+      permission = USER.BITS.combine(user, permission);
-      permission = GROUP.combine(group, permission);
+      permission = GROUP.BITS.combine(group, permission);
-      permission = MODE.combine(mode, permission);
+      permission = MODE.BITS.combine(mode, permission);
-    this.permission = f.combine(n, permission);
+    this.permission = f.BITS.combine(n, permission);
-
-    int n = (int)PermissionStatusFormat.USER.retrieve(permission);
-    return SerialNumberManager.INSTANCE.getUser(n);
+    return PermissionStatusFormat.getUser(permission);
-
-    int n = (int)PermissionStatusFormat.GROUP.retrieve(permission);
-    return SerialNumberManager.INSTANCE.getGroup(n);
+    return PermissionStatusFormat.getGroup(permission);
-    return (short)PermissionStatusFormat.MODE.retrieve(permission);
+    return PermissionStatusFormat.getMode(permission);
+    Preconditions.checkArgument(clazz != null);
-      if (f.getClass() == clazz) {
+      if (clazz.isAssignableFrom(f.getClass())) {

UPD40 INS31 INS31 INS33 INS40 INS40 INS43 INS83 MOV42 MOV44 MOV44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS83 UPD39 UPD42 INS41 INS41 INS21 INS42 UPD42 INS43 INS42 MOV21 INS42 INS39 INS42 INS60 MOV41 INS42 UPD42 INS60 MOV41 UPD42 INS32 INS32 INS32 INS32 INS42 INS83 INS39 INS59 INS83 INS39 INS59 INS11 INS42 UPD42 MOV42 MOV42 INS42 UPD42 MOV42 MOV42 INS42 UPD42 MOV42 MOV42 INS42 INS42 INS27 UPD42 INS14 INS42 INS11 INS42 INS11 INS39 INS32 INS40 INS42 INS33 INS32 INS43 INS32 INS42 INS42 INS34 INS39 INS32 INS39 INS32 INS40 INS42 INS42 INS40 INS40 INS40 INS42 INS42 MOV32 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 DEL40 DEL26 DEL34 DEL40 DEL40 DEL27 DEL40 DEL40 DEL27 DEL39 DEL39 DEL42 DEL42 DEL83 DEL39 DEL42 DEL59 DEL23 DEL83 DEL39 DEL42 DEL59 DEL23 DEL42 DEL42 DEL7 DEL21 DEL42 DEL34 DEL38 DEL36 DEL34 DEL42 DEL27 DEL36 DEL27 DEL36 DEL42 DEL27 DEL7 DEL21 DEL8 DEL31 DEL39 DEL42 DEL42 DEL42 DEL27 DEL36 DEL42 DEL27 DEL41 DEL39 DEL42 DEL44 DEL42 DEL42 DEL38 DEL27 DEL36 DEL42 DEL42 DEL27 DEL36 DEL27 DEL42 DEL42 DEL42 DEL42 DEL39 DEL42 DEL39 DEL40 DEL32 DEL11 DEL59 DEL60 DEL39 DEL42 DEL39 DEL40 DEL32 DEL11 DEL59 DEL60 DEL39 DEL40 DEL32 DEL11 DEL42 DEL27