MAPREDUCE-3942. Randomize master key generation for ApplicationTokenSecretManager and roll it every so often. (Contributed by Vinod Kumar Vavilapalli)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1327220 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.metrics2.MetricsSystem;
-import org.apache.hadoop.yarn.security.ApplicationTokenSecretManager;
+import org.apache.hadoop.yarn.server.resourcemanager.security.ApplicationTokenSecretManager;
+ * "I am the ResourceManager. All your resources are belong to us..."
+@SuppressWarnings("unchecked")
-  protected ApplicationTokenSecretManager appTokenSecretManager =
-      new ApplicationTokenSecretManager();
+  protected ApplicationTokenSecretManager appTokenSecretManager;
+    this.appTokenSecretManager = createApplicationTokenSecretManager(conf);
+
-    this.rmContext = new RMContextImpl(this.store, this.rmDispatcher,
-        this.containerAllocationExpirer, amLivelinessMonitor, tokenRenewer);
+    this.rmContext =
+        new RMContextImpl(this.store, this.rmDispatcher,
+          this.containerAllocationExpirer, amLivelinessMonitor, tokenRenewer,
+          this.appTokenSecretManager);
-    //TODO change this to be random
-    this.appTokenSecretManager.setMasterKey(ApplicationTokenSecretManager
-        .createSecretKey("Dummy".getBytes()));
-
+  protected ApplicationTokenSecretManager createApplicationTokenSecretManager(
+      Configuration conf) {
+    return new ApplicationTokenSecretManager(conf);
+  }
+
-    return new ApplicationMasterLauncher(
-        this.appTokenSecretManager, this.clientToAMSecretManager,
-        this.rmContext);
+    return new ApplicationMasterLauncher(this.clientToAMSecretManager,
+      this.rmContext);
+    private boolean shouldExitOnError = false;
+    public synchronized void init(Configuration conf) {
+      this.shouldExitOnError =
+          conf.getBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY,
+            Dispatcher.DEFAULT_DISPATCHER_EXIT_ON_ERROR);
+      super.init(conf);
+    }
+
+    @Override
-            if (getConfig().getBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY,
-              Dispatcher.DEFAULT_DISPATCHER_EXIT_ON_ERROR)) {
+            if (shouldExitOnError) {
+    this.appTokenSecretManager.start();
+
+    this.appTokenSecretManager.stop();
+
-    return new ApplicationMasterService(this.rmContext,
-        this.appTokenSecretManager, scheduler);
+    return new ApplicationMasterService(this.rmContext, scheduler);
+  @Private
+  public ApplicationTokenSecretManager getApplicationTokenSecretManager(){
+    return this.appTokenSecretManager;
+  }
+

MOV26 UPD40 INS79 INS31 INS31 INS42 INS45 MOV21 INS83 INS43 INS42 INS44 INS8 INS23 INS31 INS78 INS83 INS43 INS42 INS8 INS66 INS42 INS43 INS42 INS41 INS83 INS39 INS59 INS78 INS83 INS83 INS39 INS42 INS44 INS8 INS21 INS21 INS42 INS42 INS41 INS7 INS42 MOV14 INS42 INS9 INS42 INS43 INS42 INS21 INS21 INS32 INS32 INS22 MOV22 INS32 INS42 INS42 INS7 INS48 MOV22 INS42 MOV22 INS42 INS52 INS42 UPD42 MOV42 UPD42 MOV42 INS22 INS22 INS32 INS42 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS40 INS40 INS42 DEL40 DEL26 DEL42 DEL45 DEL42 DEL32 DEL32 DEL32 DEL42 DEL32 DEL42 DEL40 DEL40 DEL32