YARN-4215. RMNodeLabels Manager Need to verify and replace node labels for the only modified Node Label Mappings in the request. (Naganarasimha G R via wangda)

-      // get nodesCollection before edition
-      Map<String, Host> before = cloneNodeMap(replaceLabelsToNode.keySet());
+      Map<NodeId, Set<String>> effectiveModifiedLabelMappings =
+          getModifiedNodeLabelsMappings(replaceLabelsToNode);
-      super.replaceLabelsOnNode(replaceLabelsToNode);
+      if(effectiveModifiedLabelMappings.isEmpty()) {
+        LOG.info("No Modified Node label Mapping to replace");
+        return;
+      }
+
+      // get nodesCollection before edition
+      Map<String, Host> before =
+          cloneNodeMap(effectiveModifiedLabelMappings.keySet());
+
+      super.replaceLabelsOnNode(effectiveModifiedLabelMappings);
-      Map<String, Host> after = cloneNodeMap(replaceLabelsToNode.keySet());
+      Map<String, Host> after =
+          cloneNodeMap(effectiveModifiedLabelMappings.keySet());
+  private Map<NodeId, Set<String>> getModifiedNodeLabelsMappings(
+      Map<NodeId, Set<String>> replaceLabelsToNode) {
+    Map<NodeId, Set<String>> effectiveModifiedLabels = new HashMap<>();
+    for (Entry<NodeId, Set<String>> nodeLabelMappingEntry : replaceLabelsToNode
+        .entrySet()) {
+      NodeId nodeId = nodeLabelMappingEntry.getKey();
+      Set<String> modifiedNodeLabels = nodeLabelMappingEntry.getValue();
+      Set<String> labelsBeforeModification = null;
+      Host host = nodeCollections.get(nodeId.getHost());
+      if (host == null) {
+        effectiveModifiedLabels.put(nodeId, modifiedNodeLabels);
+        continue;
+      } else if (nodeId.getPort() == WILDCARD_PORT) {
+        labelsBeforeModification = host.labels;
+      } else if (host.nms.get(nodeId) != null) {
+        labelsBeforeModification = host.nms.get(nodeId).labels;
+      }
+      if (labelsBeforeModification == null
+          || labelsBeforeModification.size() != modifiedNodeLabels.size()
+          || !labelsBeforeModification.containsAll(modifiedNodeLabels)) {
+        effectiveModifiedLabels.put(nodeId, modifiedNodeLabels);
+      }
+    }
+    return effectiveModifiedLabels;
+  }
+

INS31 INS83 INS74 INS42 INS44 INS8 INS43 INS43 INS74 INS74 INS42 INS60 INS70 INS41 MOV60 MOV21 INS42 INS42 INS43 INS43 INS43 INS43 INS74 INS74 INS59 INS44 INS32 INS8 INS42 INS60 INS25 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS43 INS74 INS42 INS14 INS74 INS42 INS42 INS42 INS60 INS60 INS60 INS60 INS25 INS25 INS74 INS59 INS32 INS8 INS42 INS42 INS42 INS42 INS43 INS43 INS74 INS43 INS43 INS74 INS43 INS59 INS74 INS59 INS74 INS59 INS43 INS59 INS27 INS8 INS25 INS27 INS8 INS43 INS43 INS74 INS42 INS32 INS42 INS42 INS21 INS41 UPD42 UPD42 UPD42 INS42 INS42 INS43 INS42 INS42 INS43 INS43 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS33 INS42 INS42 INS32 INS42 INS33 INS21 INS18 INS27 INS8 INS25 INS27 INS38 INS21 INS42 INS42 INS43 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS21 INS27 INS8 INS27 INS27 INS32 INS32 INS42 INS42 INS42 INS42 INS45 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS32 INS33 INS21 INS42 INS33 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS22 INS32 INS42 INS40 INS42 INS42