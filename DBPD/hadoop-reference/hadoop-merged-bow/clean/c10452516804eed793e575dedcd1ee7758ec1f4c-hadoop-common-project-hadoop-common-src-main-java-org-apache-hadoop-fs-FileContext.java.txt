Merge remote-tracking branch 'apache-commit/trunk' into HDDS-48

+import java.util.Arrays;
+import javax.annotation.Nonnull;
+
+   * {@link FSDataOutputStreamBuilder} for {@liink FileContext}.
+   */
+  private static final class FCDataOutputStreamBuilder extends
+      FSDataOutputStreamBuilder<
+        FSDataOutputStream, FCDataOutputStreamBuilder> {
+    private final FileContext fc;
+
+    private FCDataOutputStreamBuilder(
+        @Nonnull FileContext fc, @Nonnull Path p) throws IOException {
+      super(fc, p);
+      this.fc = fc;
+      Preconditions.checkNotNull(fc);
+    }
+
+    @Override
+    protected FCDataOutputStreamBuilder getThisBuilder() {
+      return this;
+    }
+
+    @Override
+    public FSDataOutputStream build() throws IOException {
+      final EnumSet<CreateFlag> flags = getFlags();
+      List<CreateOpts> createOpts = new ArrayList<>(Arrays.asList(
+          CreateOpts.blockSize(getBlockSize()),
+          CreateOpts.bufferSize(getBufferSize()),
+          CreateOpts.repFac(getReplication()),
+          CreateOpts.perms(getPermission())
+      ));
+      if (getChecksumOpt() != null) {
+        createOpts.add(CreateOpts.checksumParam(getChecksumOpt()));
+      }
+      if (getProgress() != null) {
+        createOpts.add(CreateOpts.progress(getProgress()));
+      }
+      if (isRecursive()) {
+        createOpts.add(CreateOpts.createParent());
+      }
+      return fc.create(getPath(), flags,
+          createOpts.toArray(new CreateOpts[0]));
+    }
+  }
+
+  /**
+   * Create a {@link FSDataOutputStreamBuilder} for creating or overwriting
+   * a file on indicated path.
+   *
+   * @param f the file path to create builder for.
+   * @return {@link FSDataOutputStreamBuilder} to build a
+   *         {@link FSDataOutputStream}.
+   *
+   * Upon {@link FSDataOutputStreamBuilder#build()} being invoked,
+   * builder parameters will be verified by {@link FileContext} and
+   * {@link AbstractFileSystem#create}. And filesystem states will be modified.
+   *
+   * Client should expect {@link FSDataOutputStreamBuilder#build()} throw the
+   * same exceptions as create(Path, EnumSet, CreateOpts...).
+   */
+  public FSDataOutputStreamBuilder<FSDataOutputStream, ?> create(final Path f)
+      throws IOException {
+    return new FCDataOutputStreamBuilder(this, f).create();
+  }
+
+  /**

INS26 INS26 INS40 INS40 INS55 INS31 INS29 INS83 INS83 INS83 INS42 INS74 INS23 INS31 INS31 INS31 INS29 INS83 INS74 INS42 INS44 INS43 INS8 INS65 INS43 INS43 INS43 INS83 INS83 INS43 INS59 INS83 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS43 INS42 INS43 INS8 INS65 INS65 INS65 INS43 INS43 INS76 INS83 INS43 INS42 INS42 INS41 INS65 INS66 INS65 INS66 INS42 INS42 INS42 INS42 INS42 INS78 INS43 INS42 INS78 INS43 INS42 INS42 INS46 INS21 INS21 INS42 INS42 INS41 INS42 INS42 INS42 INS60 INS60 INS25 INS25 INS25 INS41 INS66 INS65 INS66 INS66 INS42 INS66 INS66 INS65 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS42 INS42 INS42 INS32 INS42 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS32 INS52 INS83 INS74 INS59 INS74 INS59 INS27 INS8 INS27 INS8 INS32 INS8 INS32 INS42 INS42 INS42 INS68 INS42 INS67 INS68 INS14 INS42 INS22 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS14 INS32 INS33 INS21 INS32 INS33 INS21 INS42 INS21 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS32 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS3 INS42 INS43 INS42 INS42 INS32 INS32 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS5 INS34 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS42