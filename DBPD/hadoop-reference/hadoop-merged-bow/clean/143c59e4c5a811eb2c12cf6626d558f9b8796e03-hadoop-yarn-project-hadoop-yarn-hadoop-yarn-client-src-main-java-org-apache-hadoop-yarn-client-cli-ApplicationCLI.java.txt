YARN-4491. yarn list command to support filtering by tags. Contributed by Varun Saxena

+  private static final String APP_TAG_CMD = "appTags";
-          + "based on application type, "
-          + "and -appStates to filter applications based on application state.");
+          + "based on application type, -appStates to filter applications "
+          + "based on application state and -appTags to filter applications "
+          + "based on application tag.");
+      Option appTagOpt = new Option(APP_TAG_CMD, true, "Works with -list to "
+          + "filter applications based on input comma-separated list of "
+          + "application tags.");
+      appTagOpt.setValueSeparator(',');
+      appTagOpt.setArgs(Option.UNLIMITED_VALUES);
+      appTagOpt.setArgName("Tags");
+      opts.addOption(appTagOpt);
-        listApplications(appTypes, appStates);
+
+        Set<String> appTags = new HashSet<String>();
+        if (cliParser.hasOption(APP_TAG_CMD)) {
+          String[] tags = cliParser.getOptionValues(APP_TAG_CMD);
+          if (tags != null) {
+            for (String tag : tags) {
+              if (!tag.trim().isEmpty()) {
+                appTags.add(tag.trim());
+              }
+            }
+          }
+        }
+        listApplications(appTypes, appStates, appTags);
-   * Lists the applications matching the given application Types And application
-   * States present in the Resource Manager
+   * Lists the applications matching the given application Types, application
+   * States and application Tags present in the Resource Manager.
+   * @param appTags
-      EnumSet<YarnApplicationState> appStates) throws YarnException,
-      IOException {
+      EnumSet<YarnApplicationState> appStates, Set<String> appTags)
+      throws YarnException, IOException {
-        appStates);
+        appStates, appTags);
-        + appTypes + " and states: " + appStates + ")" + ":"
-        + appsReport.size());
+        + appTypes + ", states: " + appStates + " and tags: " + appTags + ")"
+        + ":" + appsReport.size());

INS23 INS83 INS83 INS83 INS43 INS59 INS44 INS42 INS42 INS45 INS65 INS74 INS42 UPD66 UPD66 INS42 INS43 INS43 INS60 INS21 INS21 INS21 INS21 INS42 INS42 INS43 INS59 INS32 INS32 INS32 INS32 INS42 UPD45 INS45 INS42 INS42 INS42 INS14 INS42 INS42 INS13 INS42 INS42 INS40 INS42 INS42 INS45 INS42 INS42 INS42 UPD45 UPD45 INS45 INS43 INS42 INS9 INS27 INS60 INS25 INS42 INS45 INS45 INS45 INS74 INS59 INS32 INS8 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS60 INS25 INS42 INS42 INS42 INS74 INS5 INS59 INS27 INS8 INS43 INS43 INS43 INS85 INS42 INS32 INS42 INS33 INS70 INS42 INS42 INS42 INS42 INS42 INS42 INS44 INS42 INS8 INS43 INS42 INS25 INS42 INS38 INS8 INS32 INS21 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42