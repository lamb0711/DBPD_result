HADOOP-7227. Remove protocol version check at proxy creation in Hadoop RPC. Contributed by jitendra.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1099284 13f79535-47bb-0310-9956-ffa450edef68

+import java.lang.reflect.Field;
+  final private boolean supportServerMethodCheck;
+  private boolean serverMethodsFetched = false;
-   * @param serverMethods a list of hash codes of the methods that it supports
-   * @throws ClassNotFoundException 
+   * @param supportServerMethodCheck If false proxy will never fetch server
+   *        methods and isMethodSupported will always return true. If true,
+   *        server methods will be fetched for the first call to 
+   *        isMethodSupported. 
-  public ProtocolProxy(Class<T> protocol, T proxy, int[] serverMethods) {
+  public ProtocolProxy(Class<T> protocol, T proxy,
+      boolean supportServerMethodCheck) {
-    if (serverMethods != null) {
-      this.serverMethods = new HashSet<Integer>(serverMethods.length);
-      for (int method : serverMethods) {
-        this.serverMethods.add(Integer.valueOf(method));
+    this.supportServerMethodCheck = supportServerMethodCheck;
+  }
+  
+  private void fetchServerMethods(Method method) throws IOException {
+    long clientVersion;
+    try {
+      Field versionField = method.getDeclaringClass().getField("versionID");
+      versionField.setAccessible(true);
+      clientVersion = versionField.getLong(method.getDeclaringClass());
+    } catch (NoSuchFieldException ex) {
+      throw new RuntimeException(ex);
+    } catch (IllegalAccessException ex) {
+      throw new RuntimeException(ex);
+    }
+    int clientMethodsHash = ProtocolSignature.getFingerprint(method
+        .getDeclaringClass().getMethods());
+    ProtocolSignature serverInfo = ((VersionedProtocol) proxy)
+        .getProtocolSignature(protocol.getName(), clientVersion,
+            clientMethodsHash);
+    long serverVersion = serverInfo.getVersion();
+    if (serverVersion != clientVersion) {
+      throw new RPC.VersionMismatch(protocol.getName(), clientVersion,
+          serverVersion);
+    }
+    int[] serverMethodsCodes = serverInfo.getMethods();
+    if (serverMethodsCodes != null) {
+      serverMethods = new HashSet<Integer>(serverMethodsCodes.length);
+      for (int m : serverMethodsCodes) {
+        this.serverMethods.add(Integer.valueOf(m));
+    serverMethodsFetched = true;
-  public boolean isMethodSupported(String methodName,
+  public synchronized boolean isMethodSupported(String methodName,
-    if (serverMethods == null) { // client & server have the same protocol
+    if (!supportServerMethodCheck) {
+    if (!serverMethodsFetched) {
+      fetchServerMethods(method);
+    }
+    if (serverMethods == null) { // client & server have the same protocol
+      return true;
+    }

INS26 INS40 INS23 INS23 INS31 INS83 INS83 INS39 INS59 INS83 INS39 INS59 INS44 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS83 MOV25 INS42 INS42 INS9 UPD39 MOV39 UPD42 MOV42 MOV21 MOV21 MOV21 INS43 INS42 INS42 INS60 INS54 INS60 INS60 INS60 INS25 INS60 INS25 INS21 INS25 INS25 UPD42 INS66 INS66 UPD66 INS66 INS7 INS42 INS39 INS59 INS8 INS12 INS12 INS39 INS59 INS43 INS59 INS39 INS59 INS27 INS8 MOV5 INS59 INS27 INS8 INS7 INS38 INS8 INS38 INS8 INS22 INS42 INS42 INS60 INS21 INS21 INS44 INS8 INS44 INS8 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS53 INS42 INS32 INS42 INS33 MOV21 INS70 INS42 INS9 INS42 INS41 INS42 INS21 INS52 INS42 INS43 INS59 INS32 INS7 INS43 INS42 INS53 INS43 INS42 INS53 INS42 INS42 INS32 INS36 INS42 INS32 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS44 INS42 INS8 INS9 INS32 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS32 INS42 INS14 INS42 INS14 INS32 INS42 INS11 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS39 INS42 INS21 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS32 INS43 INS42 INS43 INS42 INS42 INS42 INS43 INS42 INS40 INS42 INS42 UPD40 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV22 INS42 INS32 INS42 INS42 INS42 DEL42 DEL66 DEL65 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL44 DEL42 DEL33 DEL27 DEL44 DEL42 DEL8 DEL70 DEL8 DEL25 DEL8 DEL52 DEL42 DEL22