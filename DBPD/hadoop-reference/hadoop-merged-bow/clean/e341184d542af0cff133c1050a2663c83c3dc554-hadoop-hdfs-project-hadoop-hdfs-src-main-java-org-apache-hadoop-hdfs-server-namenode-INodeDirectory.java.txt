Merge r1403306 through r1404284 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1404285 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.PrintWriter;
+import com.google.common.annotations.VisibleForTesting;
+
+
+  /*
+   * The following code is to dump the tree recursively for testing.
+   * 
+   *      \- foo   (INodeDirectory@33dd2717)
+   *        \- sub1   (INodeDirectory@442172)
+   *          +- file1   (INodeFile@78392d4)
+   *          +- file2   (INodeFile@78392d5)
+   *          +- sub11   (INodeDirectory@8400cff)
+   *            \- file3   (INodeFile@78392d6)
+   *          \- z_file4   (INodeFile@45848712)
+   */
+  static final String DUMPTREE_EXCEPT_LAST_ITEM = "+-"; 
+  static final String DUMPTREE_LAST_ITEM = "\\-";
+  @VisibleForTesting
+  @Override
+  public void dumpTreeRecursively(PrintWriter out, StringBuilder prefix) {
+    super.dumpTreeRecursively(out, prefix);
+    if (prefix.length() >= 2) {
+      prefix.setLength(prefix.length() - 2);
+      prefix.append("  ");
+    }
+    dumpTreeRecursively(out, prefix, children);
+  }
+
+  /**
+   * Dump the given subtrees.
+   * @param prefix The prefix string that each line should print.
+   * @param subs The subtrees.
+   */
+  @VisibleForTesting
+  protected static void dumpTreeRecursively(PrintWriter out,
+      StringBuilder prefix, List<? extends INode> subs) {
+    prefix.append(DUMPTREE_EXCEPT_LAST_ITEM);
+    if (subs != null && subs.size() != 0) {
+      int i = 0;
+      for(; i < subs.size() - 1; i++) {
+        subs.get(i).dumpTreeRecursively(out, prefix);
+        prefix.setLength(prefix.length() - 2);
+        prefix.append(DUMPTREE_EXCEPT_LAST_ITEM);
+      }
+
+      prefix.setLength(prefix.length() - 2);
+      prefix.append(DUMPTREE_LAST_ITEM);
+      subs.get(i).dumpTreeRecursively(out, prefix);
+    }
+    prefix.setLength(prefix.length() - 2);
+  }

INS26 INS26 INS40 INS40 INS23 INS23 INS31 INS31 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS78 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS29 INS78 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS43 INS42 INS43 INS42 INS21 INS25 INS21 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS21 INS25 INS21 INS42 INS42 INS48 INS27 INS8 INS32 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS43 INS76 INS32 INS27 INS8 INS32 INS42 INS42 INS42 INS32 INS34 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS27 INS27 INS60 INS24 INS21 INS21 INS21 INS42 INS42 INS27 INS42 INS42 INS32 INS32 INS42 INS42 INS33 INS32 INS34 INS39 INS59 INS27 INS37 INS8 INS32 INS32 INS32 INS32 INS34 INS42 INS42 INS27 INS42 INS42 INS45 INS42 INS42 INS42 INS34 INS42 INS27 INS42 INS21 INS21 INS21 INS42 INS42 INS27 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS34 INS32 INS34 INS32 INS32 INS32 INS32 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS34 INS42 INS42