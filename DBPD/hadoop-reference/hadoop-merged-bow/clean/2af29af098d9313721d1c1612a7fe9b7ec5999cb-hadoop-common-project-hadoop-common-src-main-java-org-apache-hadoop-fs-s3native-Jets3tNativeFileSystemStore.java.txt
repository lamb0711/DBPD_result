Merging r1539245 through r1539736 from trunk to branch HDFS-2832

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1539737 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
-import org.jets3t.service.S3ObjectsChunk;
+import org.jets3t.service.ServiceException;
+import org.jets3t.service.StorageObjectsChunk;
+import org.jets3t.service.model.StorageObject;
-  
+  public static final Log LOG =
+      LogFactory.getLog(Jets3tNativeFileSystemStore.class);
+
-      handleServiceException(e);
+      handleS3ServiceException(e);
-      handleServiceException(e);
+      handleS3ServiceException(e);
-      handleServiceException(e);
+      handleS3ServiceException(e);
-      S3Object object = s3Service.getObjectDetails(bucket, key);
+      if(LOG.isDebugEnabled()) {
+        LOG.debug("Getting metadata for key: " + key + " from bucket:" + bucket.getName());
+      }
+      S3Object object = s3Service.getObject(bucket.getName(), key);
-      if (e.getMessage().contains("ResponseCode=404")) {
-        return null;
+      if (e.getS3ErrorCode().matches("NoSuchKey")) {
+        return null; //return null if key not found
-      handleServiceException(e);
+      handleS3ServiceException(e);
-  
+
+  /**
+   * @param key
+   * The key is the object name that is being retrieved from the S3 bucket
+   * @return
+   * This method returns null if the key is not found
+   * @throws IOException
+   */
+
-      S3Object object = s3Service.getObject(bucket, key);
+      if(LOG.isDebugEnabled()) {
+        LOG.debug("Getting key: " + key + " from bucket:" + bucket.getName());
+      }
+      S3Object object = s3Service.getObject(bucket.getName(), key);
-      handleServiceException(key, e);
+      handleS3ServiceException(key, e);
+    } catch (ServiceException e) {
+      handleServiceException(e);
+      return null; //return null if key not found
-  
+
+  /**
+   *
+   * @param key
+   * The key is the object name that is being retrieved from the S3 bucket
+   * @return
+   * This method returns null if the key is not found
+   * @throws IOException
+   */
+
-    throws IOException {
+          throws IOException {
+      if(LOG.isDebugEnabled()) {
+        LOG.debug("Getting key: " + key + " from bucket:" + bucket.getName() + " with byteRangeStart: " + byteRangeStart);
+      }
-      handleServiceException(key, e);
+      handleS3ServiceException(key, e);
+    } catch (ServiceException e) {
+      handleServiceException(e);
+      return null; //return null if key not found
-    throws IOException {
+          throws IOException {
+  /**
+   *
+   * @return
+   * This method returns null if the list could not be populated
+   * due to S3 giving ServiceException
+   * @throws IOException
+   */
-      S3ObjectsChunk chunk = s3Service.listObjectsChunked(bucket.getName(),
+      StorageObjectsChunk chunk = s3Service.listObjectsChunked(bucket.getName(),
-        S3Object object = chunk.getObjects()[i];
+        StorageObject object = chunk.getObjects()[i];
-      handleServiceException(e);
+      handleS3ServiceException(e);
+    } catch (ServiceException e) {
+      handleServiceException(e);
+      return null; //return null if list could not be populated
+      if(LOG.isDebugEnabled()) {
+        LOG.debug("Deleting key:" + key + "from bucket" + bucket.getName());
+      }
-      handleServiceException(key, e);
+      handleS3ServiceException(key, e);
+      if(LOG.isDebugEnabled()) {
+        LOG.debug("Copying srcKey: " + srcKey + "to dstKey: " + dstKey + "in bucket: " + bucket.getName());
+      }
-      handleServiceException(srcKey, e);
+      handleS3ServiceException(srcKey, e);
+    } catch (ServiceException e) {
+      handleServiceException(e);
-      S3Object[] objects = s3Service.listObjects(bucket, prefix, null);
+      S3Object[] objects = s3Service.listObjects(bucket.getName(), prefix, null);
-      handleServiceException(e);
+      handleS3ServiceException(e);
-      S3Object[] objects = s3Service.listObjects(bucket);
+      S3Object[] objects = s3Service.listObjects(bucket.getName());
-      handleServiceException(e);
+      handleS3ServiceException(e);
-  private void handleServiceException(String key, S3ServiceException e) throws IOException {
+  private void handleS3ServiceException(String key, S3ServiceException e) throws IOException {
-      handleServiceException(e);
+      handleS3ServiceException(e);
-  private void handleServiceException(S3ServiceException e) throws IOException {
+  private void handleS3ServiceException(S3ServiceException e) throws IOException {
+      if(LOG.isDebugEnabled()) {
+        LOG.debug("S3 Error code: " + e.getS3ErrorCode() + "; S3 Error message: " + e.getS3ErrorMessage());
+      }
+
+  private void handleServiceException(ServiceException e) throws IOException {
+    if (e.getCause() instanceof IOException) {
+      throw (IOException) e.getCause();
+    }
+    else {
+      if(LOG.isDebugEnabled()) {
+        LOG.debug("Got ServiceException with Error code: " + e.getErrorCode() + ";and Error message: " + e.getErrorMessage());
+      }
+    }
+  }

MOV26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 UPD40 INS40 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS29 INS29 INS29 UPD42 UPD42 INS83 INS39 INS42 INS44 INS43 INS8 INS42 INS42 INS32 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS42 INS25 INS42 INS42 INS57 INS42 INS66 INS66 INS42 MOV12 INS42 INS66 INS66 INS42 INS12 INS12 INS66 INS66 INS42 INS12 INS8 INS12 INS8 INS42 INS62 INS8 INS8 INS43 INS25 INS25 INS60 INS44 INS25 INS44 INS8 INS44 INS8 MOV44 INS44 INS8 INS25 MOV21 MOV44 INS25 INS44 INS8 MOV44 MOV44 INS25 MOV53 INS32 INS43 INS53 INS25 INS42 INS32 INS8 MOV43 INS32 INS8 MOV43 MOV59 INS43 INS42 INS41 INS32 INS8 INS43 INS42 INS21 MOV41 INS43 INS42 INS21 INS41 UPD43 MOV43 INS43 INS42 INS21 INS41 INS32 INS8 INS32 INS8 INS43 INS42 INS21 MOV5 MOV5 INS32 MOV8 INS42 INS42 INS42 INS11 INS32 INS8 INS42 INS42 INS21 INS42 INS42 INS21 INS42 INS33 INS42 INS42 INS21 INS42 INS32 INS42 INS32 INS33 UPD42 MOV42 INS42 INS32 INS33 INS42 INS42 INS21 INS42 INS42 INS21 INS42 INS32 UPD42 INS42 INS42 INS21 INS43 INS32 INS42 INS42 INS21 UPD42 UPD42 UPD42 INS32 UPD42 INS32 UPD42 UPD45 UPD42 INS32 INS32 UPD42 INS32 INS42 INS42 INS42 INS42 INS42 UPD43 UPD42 INS42 INS42 INS32 UPD42 INS32 UPD42 INS42 INS42 INS32 UPD42 INS32 UPD42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS27 MOV42 INS42 UPD42 INS42 INS42 INS27 MOV42 INS42 INS42 INS42 INS27 UPD42 INS42 INS42 INS27 INS42 INS42 INS27 MOV42 INS42 MOV42 INS42 INS42 INS42 INS27 INS42 INS42 INS27 INS45 INS42 INS45 INS32 INS45 INS42 INS45 INS32 INS45 INS42 INS45 INS32 INS45 INS42 INS45 INS42 INS45 INS32 INS45 INS42 INS45 INS42 INS45 INS32 INS45 INS32 INS45 INS32 INS45 INS32 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL60 DEL42 DEL8