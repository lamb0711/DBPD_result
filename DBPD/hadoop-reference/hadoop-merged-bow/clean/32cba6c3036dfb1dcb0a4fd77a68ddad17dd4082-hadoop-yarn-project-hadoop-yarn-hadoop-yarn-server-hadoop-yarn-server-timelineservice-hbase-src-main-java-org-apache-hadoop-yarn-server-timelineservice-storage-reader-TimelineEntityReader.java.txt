YARN-5355: YARN Timeline Service v.2: alpha 2 (varunsaxena)

+import java.util.LinkedHashSet;
-import java.util.NavigableSet;
-import java.util.TreeSet;
-public abstract class TimelineEntityReader {
+public abstract class TimelineEntityReader extends
+    AbstractTimelineStorageReader {
-  private TimelineReaderContext context;
-   * Specifies whether keys for this table are sorted in a manner where entities
-   * can be retrieved by created time. If true, it will be sufficient to collect
-   * the first results as specified by the limit. Otherwise all matched entities
-   * will be fetched and then limit applied.
-   */
-  private boolean sortedKeys = false;
-
-  /**
-   * @param sortedKeys Specifies whether key for this table are sorted or not.
-   *     If sorted, entities can be retrieved by created time.
-      TimelineEntityFilters entityFilters, TimelineDataToRetrieve toRetrieve,
-      boolean sortedKeys) {
+      TimelineEntityFilters entityFilters, TimelineDataToRetrieve toRetrieve) {
+    super(ctxt);
-    this.sortedKeys = sortedKeys;
-    this.context = ctxt;
+    super(ctxt);
-    this.context = ctxt;
-  protected TimelineReaderContext getContext() {
-    return context;
-  }
-
-      filters = new TimelineEntityFilters();
+      filters = new TimelineEntityFilters.Builder().build();
-          context.getEntityType());
+          getContext().getEntityType());
-    NavigableSet<TimelineEntity> entities = new TreeSet<>();
+    Set<TimelineEntity> entities = new LinkedHashSet<>();
-        if (!sortedKeys) {
-          if (entities.size() > filters.getLimit()) {
-            entities.pollLast();
-          }
-        } else {
-          if (entities.size() == filters.getLimit()) {
-            break;
-          }
+        if (entities.size() == filters.getLimit()) {
+          break;
-   * Validates the required parameters to read the entities.
-   */
-  protected abstract void validateParams();
-
-  /**
-   * Sets certain parameters to defaults if the values are not provided.
-   *
-   * @param hbaseConf HBase Configuration.
-   * @param conn HBase Connection.
-   * @throws IOException if any exception is encountered while setting params.
-   */
-  protected abstract void augmentParams(Configuration hbaseConf,
-      Connection conn) throws IOException;
-
-  /**

MOV26 UPD40 INS43 UPD42 MOV42 MOV8 INS46 INS46 MOV21 MOV21 INS60 MOV60 MOV25 MOV60 INS54 INS42 INS42 INS74 INS59 MOV8 MOV8 INS43 INS43 INS42 INS14 INS70 MOV41 INS42 INS42 INS74 MOV44 INS42 MOV8 INS32 INS43 MOV60 MOV25 MOV21 INS14 INS42 INS42 UPD43 MOV43 INS32 INS40 UPD42 MOV42 DEL40 DEL26 DEL83 DEL43 DEL42 DEL59 DEL23 DEL66 DEL66 DEL66 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL9 DEL59 DEL23 DEL42 DEL66 DEL66 DEL65 DEL39 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL83 DEL42 DEL43 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42 DEL14 DEL42 DEL38 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL70 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL54 DEL8 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL31