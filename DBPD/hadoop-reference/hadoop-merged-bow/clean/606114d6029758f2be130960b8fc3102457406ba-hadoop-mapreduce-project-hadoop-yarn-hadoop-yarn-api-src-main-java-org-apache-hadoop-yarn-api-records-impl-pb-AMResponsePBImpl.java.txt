MAPREDUCE-3533. Add a channel between RM and AM to get information on nodes. Contributed by Bikas Saha. 


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305230 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.api.records.NodeReport;
+import org.apache.hadoop.yarn.proto.YarnProtos.NodeReportProto;
+  private List<NodeReport> updatedNodes = null;
+    if (this.updatedNodes != null) {
+      builder.clearUpdatedNodes();
+      Iterable<NodeReportProto> iterable = 
+          getNodeReportProtoIterable(this.updatedNodes);
+      builder.addAllUpdatedNodes(iterable);
+    }
+  
+  @Override
+  public synchronized List<NodeReport> getUpdatedNodes() {
+    initLocalNewNodeReportList();
+    return this.updatedNodes;
+  }
+  
+  //Once this is called. updatedNodes will never be null - until a getProto is called.
+  private synchronized void initLocalNewNodeReportList() {
+    if (this.updatedNodes != null) {
+      return;
+    }
+    AMResponseProtoOrBuilder p = viaProto ? proto : builder;
+    List<NodeReportProto> list = p.getUpdatedNodesList();
+    updatedNodes = new ArrayList<NodeReport>(list.size());
+
+    for (NodeReportProto n : list) {
+      updatedNodes.add(convertFromProtoFormat(n));
+    }
+  }
+
+  @Override
+  public synchronized void setUpdatedNodes(final List<NodeReport> updatedNodes) {
+    if (updatedNodes == null) {
+      this.updatedNodes.clear();
+      return;
+    }
+    this.updatedNodes = new ArrayList<NodeReport>(updatedNodes.size());
+    this.updatedNodes.addAll(updatedNodes);
+  }
-  //Once this is called. containerList will never be null - untill a getProto is called.
+  //Once this is called. containerList will never be null - until a getProto is called.
+    // this looks like a bug because it results in append and not set
+  
+  private synchronized Iterable<NodeReportProto> 
+  getNodeReportProtoIterable(
+      final List<NodeReport> newNodeReportsList) {
+    maybeInitBuilder();
+    return new Iterable<NodeReportProto>() {
+      @Override
+      public synchronized Iterator<NodeReportProto> iterator() {
+        return new Iterator<NodeReportProto>() {
+
+          Iterator<NodeReport> iter = newNodeReportsList.iterator();
+
+          @Override
+          public synchronized boolean hasNext() {
+            return iter.hasNext();
+          }
+
+          @Override
+          public synchronized NodeReportProto next() {
+            return convertToProtoFormat(iter.next());
+          }
+
+          @Override
+          public synchronized void remove() {
+            throw new UnsupportedOperationException();
+
+          }
+        };
+
+      }
+    };
+  }
+  private synchronized NodeReportPBImpl convertFromProtoFormat(
+      NodeReportProto p) {
+    return new NodeReportPBImpl(p);
+  }
+
+  private synchronized NodeReportProto convertToProtoFormat(NodeReport t) {
+    return ((NodeReportPBImpl)t).getProto();
+  }
+  

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS74 INS59 INS78 INS83 INS83 INS74 INS42 INS8 INS83 INS83 INS39 INS42 INS8 INS78 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS74 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS43 INS43 INS42 INS33 INS25 INS42 INS43 INS43 INS21 INS41 INS25 INS60 INS60 INS21 INS70 INS42 INS83 INS74 INS42 INS25 INS21 INS21 INS43 INS43 INS83 INS74 INS42 INS21 INS41 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS41 INS42 INS42 INS27 INS8 INS42 INS42 INS32 INS22 INS27 INS8 INS43 INS59 INS74 INS59 INS7 INS44 INS42 INS8 INS43 INS43 INS27 INS8 INS7 INS32 INS42 INS42 INS43 INS43 INS32 INS14 INS42 INS14 INS42 INS32 INS22 INS33 INS21 INS60 INS21 INS42 INS52 INS42 INS22 INS33 INS41 INS42 INS42 INS16 INS43 INS43 INS42 INS32 INS42 INS14 INS43 INS42 INS21 INS42 INS42 INS42 INS33 INS21 INS41 INS22 INS14 INS22 INS42 INS42 INS42 INS42 INS42 INS74 INS1 INS43 INS42 INS36 INS42 INS52 INS42 INS32 INS74 INS59 INS32 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS32 INS42 INS32 INS32 INS52 INS42 INS74 INS32 INS52 INS42 INS43 INS43 INS31 INS42 INS11 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS32 INS22 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS78 INS83 INS83 INS74 INS42 INS8 INS43 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS43 INS43 INS41 INS42 INS52 INS42 INS42 INS42 INS14 INS74 INS1 INS43 INS43 INS23 INS31 INS31 INS31 INS42 INS42 INS74 INS59 INS78 INS83 INS83 INS39 INS42 INS8 INS78 INS83 INS83 INS43 INS42 INS8 INS78 INS83 INS83 INS39 INS42 INS8 INS43 INS43 INS42 INS32 INS42 INS41 INS42 INS42 INS41 INS42 INS53 INS42 INS42 INS42 INS42 INS32 INS32 INS14 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42