HADOOP-8334. HttpServer sometimes returns incorrect port (Daryn Sharp via bobby)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1332336 13f79535-47bb-0310-9956-ffa450edef68

-      if(listenerStartedExternally) { // Expect that listener was started securely
-        if(listener.getLocalPort() == -1) // ... and verify
-          throw new Exception("Exepected webserver's listener to be started " +
-             "previously but wasn't");
-        // And skip all the port rolling issues.
+      try {
+        openListener();
+        LOG.info("Jetty bound to port " + listener.getLocalPort());
-      } else {
-        int port = 0;
-        int oriPort = listener.getPort(); // The original requested port
-        while (true) {
-          try {
-            port = webServer.getConnectors()[0].getLocalPort();
-            LOG.debug("Port returned by webServer.getConnectors()[0]." +
-            		"getLocalPort() before open() is "+ port + 
-            		". Opening the listener on " + oriPort);
-            listener.open();
-            port = listener.getLocalPort();
-            LOG.debug("listener.getLocalPort() returned " + listener.getLocalPort() + 
-                  " webServer.getConnectors()[0].getLocalPort() returned " +
-                  webServer.getConnectors()[0].getLocalPort());
-            //Workaround to handle the problem reported in HADOOP-4744
-            if (port < 0) {
-              Thread.sleep(100);
-              int numRetries = 1;
-              while (port < 0) {
-                LOG.warn("listener.getLocalPort returned " + port);
-                if (numRetries++ > MAX_RETRIES) {
-                  throw new Exception(" listener.getLocalPort is returning " +
-                  		"less than 0 even after " +numRetries+" resets");
-                }
-                for (int i = 0; i < 2; i++) {
-                  LOG.info("Retrying listener.getLocalPort()");
-                  port = listener.getLocalPort();
-                  if (port > 0) {
-                    break;
-                  }
-                  Thread.sleep(200);
-                }
-                if (port > 0) {
-                  break;
-                }
-                LOG.info("Bouncing the listener");
-                listener.close();
-                Thread.sleep(1000);
-                listener.setPort(oriPort == 0 ? 0 : (oriPort += 1));
-                listener.open();
-                Thread.sleep(100);
-                port = listener.getLocalPort();
-              }
-            } //Workaround end
-            LOG.info("Jetty bound to port " + port);
-            webServer.start();
-            break;
-          } catch (IOException ex) {
-            // if this is a bind exception,
-            // then try the next port number.
-            if (ex instanceof BindException) {
-              if (!findPort) {
-                BindException be = new BindException(
-                        "Port in use: " + listener.getHost()
-                                + ":" + listener.getPort());
-                be.initCause(ex);
-                throw be;
-              }
-            } else {
-              LOG.info("HttpServer.start() threw a non Bind IOException"); 
-              throw ex;
-            }
-          } catch (MultiException ex) {
-            LOG.info("HttpServer.start() threw a MultiException"); 
-            throw ex;
-          }
-          listener.setPort((oriPort += 1));
-        }
+      } catch (IOException ex) {
+        LOG.info("HttpServer.start() threw a non Bind IOException", ex);
+        throw ex;
+      } catch (MultiException ex) {
+        LOG.info("HttpServer.start() threw a MultiException", ex);
+        throw ex;
+   * Open the main listener for the server
+   * @throws Exception
+   */
+  void openListener() throws Exception {
+    if (listener.getLocalPort() != -1) { // it's already bound
+      return;
+    }
+    if (listenerStartedExternally) { // Expect that listener was started securely
+      throw new Exception("Expected webserver's listener to be started " +
+          "previously but wasn't");
+    }
+    int port = listener.getPort();
+    while (true) {
+      // jetty has a bug where you can't reopen a listener that previously
+      // failed to open w/o issuing a close first, even if the port is changed
+      try {
+        listener.close();
+        listener.open();
+        break;
+      } catch (BindException ex) {
+        if (port == 0 || !findPort) {
+          BindException be = new BindException(
+              "Port in use: " + listener.getHost() + ":" + listener.getPort());
+          be.initCause(ex);
+          throw be;
+        }
+      }
+      // try the next port number
+      listener.setPort(++port);
+      Thread.sleep(100);
+    }
+  }
+  
+  /**
+   * Return the bind address of the listener.
+   * @return InetSocketAddress of the listener
+   */
+  public InetSocketAddress getListenerAddress() {
+    int port = listener.getLocalPort();
+    if (port == -1) { // not bound, return requested port
+      port = listener.getPort();
+    }
+    return new InetSocketAddress(listener.getHost(), port);
+  }
+  
+  /**

INS31 INS31 INS31 MOV29 MOV83 MOV39 MOV42 MOV43 INS8 INS29 INS39 INS42 MOV43 INS8 INS29 INS83 INS43 INS42 INS8 INS54 INS65 INS65 MOV25 MOV25 MOV60 INS61 INS65 INS65 INS42 INS60 INS25 INS41 INS8 MOV12 MOV12 MOV12 INS66 INS42 UPD27 INS8 INS42 INS9 MOV8 INS66 INS66 INS39 INS59 INS27 INS8 INS14 INS54 MOV60 MOV24 INS41 UPD42 INS54 MOV21 MOV21 UPD42 MOV42 MOV32 UPD42 MOV42 INS38 MOV21 INS43 INS32 INS42 INS8 INS12 INS12 INS8 INS12 INS34 INS42 MOV42 UPD42 MOV42 MOV21 MOV21 MOV21 MOV44 INS8 MOV44 INS8 MOV21 MOV21 INS10 INS44 MOV8 UPD42 UPD42 INS38 INS32 INS32 MOV21 MOV53 MOV21 MOV53 UPD45 MOV45 UPD45 MOV43 INS42 INS42 UPD42 UPD42 MOV42 INS42 INS42 INS27 INS27 INS45 MOV32 UPD42 INS45 INS42 UPD42 INS45 UPD42 MOV42 INS27 MOV38 INS42 INS34 DEL42 DEL42 DEL32 DEL34 DEL2 DEL42 DEL32 DEL7 DEL42 DEL7 DEL45 DEL45 DEL27 DEL42 DEL45 DEL42 DEL27 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL32 DEL34 DEL2 DEL42 DEL32 DEL27 DEL45 DEL45 DEL27 DEL14 DEL53 DEL42 DEL37 DEL42 DEL27 DEL45 DEL27 DEL42 DEL45 DEL42 DEL62 DEL8 DEL25 DEL42 DEL8 DEL39 DEL42 DEL34 DEL59 DEL60 DEL9 DEL42 DEL34 DEL27 DEL42 DEL42 DEL34 DEL32 DEL21 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL34 DEL27 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL39 DEL34 DEL59 DEL58 DEL34 DEL27 DEL42 DEL37 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL34 DEL27 DEL10 DEL8 DEL25 DEL42 DEL42 DEL34 DEL32 DEL21 DEL8 DEL24 DEL42 DEL34 DEL27 DEL10 DEL8 DEL25 DEL42 DEL42 DEL45 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL21 DEL42 DEL34 DEL27 DEL34 DEL42 DEL34 DEL7 DEL36 DEL16 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL7 DEL21 DEL8 DEL61 DEL8 DEL25 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL10 DEL8 DEL12 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL12 DEL54 DEL42 DEL42 DEL42 DEL34 DEL7 DEL36 DEL32 DEL21 DEL8 DEL61 DEL8 DEL25 DEL8 DEL54 DEL8 DEL31