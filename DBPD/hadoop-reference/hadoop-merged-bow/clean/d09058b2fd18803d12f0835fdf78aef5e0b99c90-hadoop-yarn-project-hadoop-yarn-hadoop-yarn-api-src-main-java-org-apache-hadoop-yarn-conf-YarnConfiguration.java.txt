YARN-6736. Consider writing to both ats v1 & v2 from RM for smoother upgrades. Contributed by Aaron Gresch.

+import java.util.ArrayList;
+import java.util.Collection;
+  public static final String TIMELINE_SERVICE_VERSIONS =
+      TIMELINE_SERVICE_PREFIX + "versions";
+
-    return timelineServiceEnabled(conf) &&
-        (int)getTimelineServiceVersion(conf) == 2;
+    boolean enabled = false;
+    if (timelineServiceEnabled(conf)) {
+      Collection<Float> versions = getTimelineServiceVersions(conf);
+      for (Float version : versions) {
+        if (version.intValue() == 2) {
+          enabled = true;
+          break;
+        }
+      }
+    }
+    return enabled;
+  }
+
+  /**
+   * Returns whether the timeline service v.1 is enabled via configuration.
+   *
+   * @param conf the configuration
+   * @return whether the timeline service v.1 is enabled. V.1 refers to a
+   * version greater than equal to 1 but smaller than 2.
+   */
+  public static boolean timelineServiceV1Enabled(Configuration conf) {
+    boolean enabled = false;
+    if (timelineServiceEnabled(conf)) {
+      Collection<Float> versions = getTimelineServiceVersions(conf);
+      for (Float version : versions) {
+        if (version.intValue() == 1) {
+          enabled = true;
+          break;
+        }
+      }
+    }
+    return enabled;
+  }
+
+  /**
+   * Returns all the active timeline service versions. It does not check
+   * whether the timeline service itself is enabled.
+   *
+   * @param conf the configuration
+   * @return the timeline service versions as a collection of floats.
+   */
+  private static Collection<Float> getTimelineServiceVersions(
+      Configuration conf) {
+    String versions = conf.get(TIMELINE_SERVICE_VERSIONS);
+    if (versions == null) {
+      versions = Float.toString(getTimelineServiceVersion(conf));
+    }
+    List<String> stringList = Arrays.asList(versions.split(","));
+    List<Float> floatList = new ArrayList<Float>();
+    for (String s : stringList) {
+      Float f = Float.parseFloat(s);
+      floatList.add(f);
+    }
+    return floatList;

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS83 INS74 INS42 INS44 INS8 INS42 INS42 INS27 INS60 INS25 INS41 INS65 INS65 INS65 INS43 INS42 INS60 INS25 INS41 INS65 INS65 INS65 INS43 INS43 INS43 INS42 INS60 INS25 INS60 INS60 INS70 INS41 INS42 INS45 INS39 INS59 MOV32 INS8 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS39 INS59 INS32 INS8 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS74 INS59 INS74 INS59 INS44 INS42 INS8 INS42 INS42 INS9 INS60 INS70 INS42 INS9 INS42 INS42 INS60 INS70 INS42 INS42 INS32 INS42 INS33 INS21 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS14 INS43 INS42 INS60 INS21 INS74 INS59 INS44 INS42 INS8 INS74 INS59 INS44 INS42 INS8 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS74 INS42 INS43 INS59 INS32 INS43 INS43 INS42 INS32 INS43 INS42 INS25 INS43 INS43 INS42 INS32 INS43 INS42 INS25 INS42 INS32 INS42 INS42 INS45 INS43 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS27 INS8 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS32 MOV34 INS21 INS10 INS32 INS34 INS21 INS10 INS42 INS42 INS7 INS42 INS42 INS7 INS42 INS9 INS42 INS9 DEL39 DEL11 DEL27 DEL27 DEL41 DEL8