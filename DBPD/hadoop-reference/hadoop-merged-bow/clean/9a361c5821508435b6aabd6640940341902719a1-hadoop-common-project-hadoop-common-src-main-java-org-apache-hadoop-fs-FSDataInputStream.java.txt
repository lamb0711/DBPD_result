HDFS-5191. Revisit zero-copy API in FSDataInputStream to make it more intuitive (Contributed by Colin Patrick McCabe)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1526020 13f79535-47bb-0310-9956-ffa450edef68

+ * 
+import java.util.EnumSet;
+import org.apache.hadoop.io.ByteBufferPool;
+import org.apache.hadoop.fs.ByteBufferUtil;
+import org.apache.hadoop.util.IdentityHashStore;
-      SupportsZeroCopy {
+      HasEnhancedByteBufferAccess {
+  /**
+   * Map ByteBuffers that we have handed out to readers to ByteBufferPool 
+   * objects
+   */
+  private final IdentityHashStore<ByteBuffer, ByteBufferPool>
+    extendedReadBuffers
+      = new IdentityHashStore<ByteBuffer, ByteBufferPool>(0);
+
-  public ZeroCopyCursor createZeroCopyCursor()
-      throws IOException, ZeroCopyUnavailableException {
+  public ByteBuffer read(ByteBufferPool bufferPool, int maxLength,
+      EnumSet<ReadOption> opts) 
+          throws IOException, UnsupportedOperationException {
-      return ((SupportsZeroCopy)in).createZeroCopyCursor();
+      return ((HasEnhancedByteBufferAccess)in).read(bufferPool,
+          maxLength, opts);
-      throw new ZeroCopyUnavailableException(e);
+      ByteBuffer buffer = ByteBufferUtil.
+          fallbackRead(this, bufferPool, maxLength);
+      if (buffer != null) {
+        extendedReadBuffers.put(buffer, bufferPool);
+      }
+      return buffer;
+    }
+  }
+
+  private static final EnumSet<ReadOption> EMPTY_READ_OPTIONS_SET =
+      EnumSet.noneOf(ReadOption.class);
+
+  final public ByteBuffer read(ByteBufferPool bufferPool, int maxLength)
+          throws IOException, UnsupportedOperationException {
+    return read(bufferPool, maxLength, EMPTY_READ_OPTIONS_SET);
+  }
+  
+  @Override
+  public void releaseBuffer(ByteBuffer buffer) {
+    try {
+      ((HasEnhancedByteBufferAccess)in).releaseBuffer(buffer);
+    }
+    catch (ClassCastException e) {
+      ByteBufferPool bufferPool = extendedReadBuffers.remove( buffer);
+      if (bufferPool == null) {
+        throw new IllegalArgumentException("tried to release a buffer " +
+            "that was not created by this stream.");
+      }
+      bufferPool.putBuffer(buffer);

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 UPD43 INS23 INS23 INS31 INS31 UPD42 INS29 INS83 INS83 INS74 INS59 UPD43 UPD42 INS44 INS44 INS44 UPD43 INS43 INS83 INS83 INS83 INS74 INS59 INS83 INS83 INS43 INS42 INS44 INS44 MOV43 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS65 INS43 INS43 INS43 INS42 INS14 UPD42 INS43 INS42 INS39 INS42 INS74 INS42 UPD42 INS42 INS43 INS43 INS42 INS32 INS42 INS43 INS42 INS39 INS42 INS42 INS41 INS42 INS43 INS42 INS54 INS66 INS66 INS42 INS42 INS42 INS74 INS34 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS57 INS42 INS32 INS42 INS8 INS12 INS43 INS43 INS43 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS21 INS44 INS8 INS42 INS42 INS42 INS60 INS25 INS41 INS42 INS32 INS43 INS42 INS60 INS25 INS21 UPD42 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS42 INS36 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS32 UPD42 MOV42 INS42 INS32 INS42 INS33 INS21 INS11 INS42 INS42 INS32 INS42 INS33 INS53 INS42 INS42 INS42 UPD43 INS42 INS42 INS52 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS42 INS14 UPD42 INS42 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS45 INS45 DEL43 DEL42 DEL14 DEL53