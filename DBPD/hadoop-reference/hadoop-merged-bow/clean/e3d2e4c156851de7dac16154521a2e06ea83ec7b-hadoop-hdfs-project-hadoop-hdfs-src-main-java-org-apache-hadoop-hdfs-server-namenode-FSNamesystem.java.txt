HDFS-6000. Avoid saving namespace when starting rolling upgrade. Contributed by Jing Zhao.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1571840 13f79535-47bb-0310-9956-ffa450edef68

+      if (StartupOption.isRollingUpgradeRollback(startOpt)) {
+        rollingUpgradeInfo = null;
+      }
+  /**
+   * Called when the NN is in Standby state and the editlog tailer tails the
+   * OP_ROLLING_UPGRADE_START.
+   */
+  void triggerRollbackCheckpoint() {
+    if (standbyCheckpointer != null) {
+      standbyCheckpointer.triggerRollbackCheckpoint();
+    }
+  }
+      if (rollingUpgradeInfo != null) {
+        boolean hasRollbackImage = this.getFSImage().hasRollbackFSImage();
+        rollingUpgradeInfo.setCreatedRollbackImages(hasRollbackImage);
+      }
-      checkNameNodeSafeMode("Failed to start rolling upgrade");
-      startRollingUpgradeInternal(now(), -1);
+      long startTime = now();
+      if (!haEnabled) { // for non-HA, we require NN to be in safemode
+        startRollingUpgradeInternalForNonHA(startTime);
+      } else { // for HA, NN cannot be in safemode
+        checkNameNodeSafeMode("Failed to start rolling upgrade");
+        startRollingUpgradeInternal(startTime);
+      }
+
+      if (haEnabled) {
+        // roll the edit log to make sure the standby NameNode can tail
+        getFSImage().rollEditLog();
+      }
-
-   * Ootionally create a checkpoint before starting the RU.
-  void startRollingUpgradeInternal(long startTime, long txid)
+  void startRollingUpgradeInternal(long startTime)
+    setRollingUpgradeInfo(false, startTime);
+  }
-    // if we have not made a rollback image, do it
-    if (txid < 0 || !getFSImage().hasRollbackFSImage(txid)) {
-      getFSImage().saveNamespace(this, NameNodeFile.IMAGE_ROLLBACK, null);
-      LOG.info("Successfully saved namespace for preparing rolling upgrade.");
+  /**
+   * Update internal state to indicate that a rolling upgrade is in progress for
+   * non-HA setup. This requires the namesystem is in SafeMode and after doing a
+   * checkpoint for rollback the namesystem will quit the safemode automatically 
+   */
+  private void startRollingUpgradeInternalForNonHA(long startTime)
+      throws IOException {
+    Preconditions.checkState(!haEnabled);
+    if (!isInSafeMode()) {
+      throw new IOException("Safe mode should be turned ON "
+          + "in order to create namespace image.");
+    checkRollingUpgrade("start rolling upgrade");
+    getFSImage().checkUpgrade(this);
+    // in non-HA setup, we do an extra ckpt to generate a rollback image
+    getFSImage().saveNamespace(this, NameNodeFile.IMAGE_ROLLBACK, null);
+    LOG.info("Successfully saved namespace for preparing rolling upgrade.");
+
+    // leave SafeMode automatically
+    setSafeMode(SafeModeAction.SAFEMODE_LEAVE);
-  RollingUpgradeInfo getRollingUpgradeInfo() {
+  public void setCreatedRollbackImages(boolean created) {
+    if (rollingUpgradeInfo != null) {
+      rollingUpgradeInfo.setCreatedRollbackImages(created);
+    }
+  }
+
+  public RollingUpgradeInfo getRollingUpgradeInfo() {
-    return new RollingUpgradeInfo(blockPoolId, true, startTime, finalizeTime);
+    return new RollingUpgradeInfo(blockPoolId, false, startTime, finalizeTime);

INS31 INS31 INS31 INS29 INS39 INS42 INS8 INS29 INS39 INS42 INS44 INS43 INS8 INS83 UPD42 INS83 INS39 INS42 INS44 INS8 INS83 INS65 INS25 INS65 MOV65 INS39 INS42 INS42 INS21 INS21 INS21 INS21 INS25 MOV21 MOV21 INS21 INS39 INS42 INS25 INS66 INS66 INS27 INS8 INS66 INS32 INS32 INS32 UPD66 INS66 UPD66 INS32 INS38 MOV8 INS32 INS27 INS8 INS25 INS42 INS33 INS21 INS25 INS60 INS25 INS25 INS42 INS45 INS32 INS42 INS52 INS42 INS9 INS42 INS42 INS42 INS38 INS32 INS53 INS42 INS40 INS42 INS33 INS21 UPD9 INS32 INS8 INS32 INS27 INS8 INS39 INS59 INS38 INS8 INS8 INS42 INS8 INS42 INS42 UPD42 MOV42 INS14 INS32 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS33 INS60 INS21 INS42 MOV32 INS42 INS21 MOV21 MOV21 INS21 INS43 INS27 INS42 INS42 INS42 INS7 INS39 INS59 INS32 INS32 INS32 INS42 INS45 INS45 INS42 INS33 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS32 INS42 INS42 INS52 INS42 DEL34 DEL38 DEL39 DEL42 DEL44 DEL42 DEL34 DEL27 DEL42 DEL42 DEL32 DEL38 DEL27 DEL25