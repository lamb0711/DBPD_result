Revert "YARN-7677. Docker image cannot set HADOOP_CONF_DIR. Contributed by Jim Brennan"

This reverts commit 8013475d447a8377b5aed858208bf8b91dd32366.

-import java.util.LinkedHashSet;
-   * @param nmVars the set of environment vars that are explicitly set by NM
-      String user, LinkedHashSet<String> nmVars) throws IOException {
+      String user) throws IOException {
-        ContainerLaunch.CONTAINER_SCRIPT, nmVars);
+        ContainerLaunch.CONTAINER_SCRIPT);
-   * @param nmVars the set of environment vars that are explicitly set by NM
-      String user, String outFilename, LinkedHashSet<String> nmVars)
-      throws IOException {
+      String user, String outFilename) throws IOException {
+    updateEnvForWhitelistVars(environment);
-      // Whitelist environment variables are treated specially.
-      // Only add them if they are not already defined in the environment.
-      // Add them using special syntax to prevent them from eclipsing
-      // variables that may be set explicitly in the container image (e.g,
-      // in a docker image).  Put these before the others to ensure the
-      // correct expansion is used.
-      for(String var : whitelistVars) {
-        if (!environment.containsKey(var)) {
-          String val = getNMEnvVar(var);
-          if (val != null) {
-            sb.whitelistedEnv(var, val);
-          }
-        }
-      }
-      // Now write vars that were set explicitly by nodemanager, preserving
-      // the order they were written in.
-      for (String nmEnvVar : nmVars) {
-        sb.env(nmEnvVar, environment.get(nmEnvVar));
-      }
-      // Now write the remaining environment variables.
-        if (!nmVars.contains(env.getKey())) {
-          sb.env(env.getKey(), env.getValue());
-        }
-      }
-      // Add the whitelist vars to the environment.  Do this after writing
-      // environment variables so they are not written twice.
-      for(String var : whitelistVars) {
-        if (!environment.containsKey(var)) {
-          String val = getNMEnvVar(var);
-          if (val != null) {
-            environment.put(var, val);
-          }
-        }
+        sb.env(env.getKey(), env.getValue());
+  /**
+   * Propagate variables from the nodemanager's environment into the
+   * container's environment if unspecified by the container.
+   * @param env the environment to update
+   * @see org.apache.hadoop.yarn.conf.YarnConfiguration#NM_ENV_WHITELIST
+   */
+  protected void updateEnvForWhitelistVars(Map<String, String> env) {
+    for(String var : whitelistVars) {
+      if (!env.containsKey(var)) {
+        String val = getNMEnvVar(var);
+        if (val != null) {
+          env.put(var, val);
+        }
+      }
+    }
+  }
+

INS31 INS29 INS83 INS39 INS42 INS44 INS8 INS21 MOV25 INS65 INS65 INS65 INS74 INS42 MOV70 INS32 MOV27 INS66 INS66 INS42 INS66 INS67 INS43 MOV43 MOV43 INS42 MOV42 MOV21 MOV70 INS40 INS42 INS42 MOV8 UPD42 UPD42 DEL40 DEL26 DEL42 DEL66 DEL65 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL66 DEL65 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL38 DEL25 DEL8 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL25 DEL8 DEL70 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL8 DEL25