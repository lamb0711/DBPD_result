HDFS-5138. Support HDFS upgrade in HA. Contributed by Aaron T. Myers.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561381 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.security.ssl.SSLFactory;
+    private StartupOption dnOption = null;
+    
+    /**
+     * Default: null
+     */
+    public Builder dnStartupOption(StartupOption val) {
+      this.dnOption = val;
+      return this;
+    }
+                       builder.dnOption,
-  static class NameNodeInfo {
+  public static class NameNodeInfo {
+    StartupOption startOpt;
-        Configuration conf) {
+        StartupOption startOpt, Configuration conf) {
+      this.startOpt = startOpt;
+    
+    public void setStartOpt(StartupOption startOpt) {
+      this.startOpt = startOpt;
+    }
-        manageNameDfsDirs, true, manageDataDfsDirs, manageDataDfsDirs,
-        operation, racks, hosts,
+        manageNameDfsDirs, true, manageDataDfsDirs, manageDataDfsDirs, 
+        operation, null, racks, hosts,
-      boolean manageDataDfsDirs, StartupOption operation, String[] racks,
+      boolean manageDataDfsDirs, StartupOption startOpt,
+      StartupOption dnStartOpt, String[] racks,
-          format, operation, clusterId, conf);
+          format, startOpt, clusterId, conf);
-    if (operation == StartupOption.RECOVER) {
+    if (startOpt == StartupOption.RECOVER) {
-    startDataNodes(conf, numDataNodes, storageType, manageDataDfsDirs, operation, racks,
-        hosts, simulatedCapacities, setupHostsFile, checkDataNodeAddrConfig, checkDataNodeHostConfig);
+    startDataNodes(conf, numDataNodes, storageType, manageDataDfsDirs,
+        dnStartOpt != null ? dnStartOpt : startOpt,
+        racks, hosts, simulatedCapacities, setupHostsFile,
+        checkDataNodeAddrConfig, checkDataNodeHostConfig);
+          // Clean out the shared edits dir completely, including all subdirectories.
+          FileUtil.fullyDelete(new File(sharedEditsUri));
-      Preconditions.checkArgument(!dstDir.equals(srcDir));
+      Preconditions.checkArgument(!dstDir.equals(srcDir),
+          "src and dst are the same: " + dstDir);
+  private static String[] createArgs(StartupOption operation) {
+    String[] args = (operation == null ||
+        operation == StartupOption.FORMAT ||
+        operation == StartupOption.REGULAR) ?
+            new String[] {} : new String[] {operation.getName()};
+    return args;
+  }
+  
-    String[] args = (operation == null ||
-                     operation == StartupOption.FORMAT ||
-                     operation == StartupOption.REGULAR) ?
-      new String[] {} : new String[] {operation.getName()};
+    String[] args = createArgs(operation);
-        new Configuration(conf));
+        operation, new Configuration(conf));
-      nameNodes[nnIndex] = new NameNodeInfo(null, null, null, conf);
+      nameNodes[nnIndex] = new NameNodeInfo(null, null, null, null, conf);
+    StartupOption startOpt = nameNodes[nnIndex].startOpt;
-    NameNode nn = NameNode.createNameNode(new String[] {}, conf);
-    nameNodes[nnIndex] = new NameNodeInfo(nn, nameserviceId, nnId, conf);
+    NameNode nn = NameNode.createNameNode(createArgs(startOpt), conf);
+    nameNodes[nnIndex] = new NameNodeInfo(nn, nameserviceId, nnId, startOpt,
+        conf);

INS31 INS23 INS31 INS83 INS23 INS31 INS44 INS44 INS83 INS83 INS5 INS42 MOV44 INS8 INS83 INS43 INS59 INS29 INS83 INS43 INS42 INS44 INS8 INS43 INS59 INS44 INS83 INS39 INS42 INS44 INS8 INS43 INS42 INS43 INS42 INS43 INS85 MOV60 INS41 INS60 INS60 INS42 INS42 INS33 INS65 INS42 INS43 INS42 INS21 INS41 INS42 INS42 INS43 INS42 INS21 INS43 INS42 INS21 INS42 INS42 INS42 INS42 MOV5 INS59 INS43 INS59 INS66 INS42 INS7 INS52 INS40 INS42 INS7 INS42 INS7 INS33 UPD42 INS16 INS42 INS32 INS42 INS42 INS22 INS22 INS42 INS22 INS42 INS22 INS42 INS27 INS42 INS42 INS42 INS42 INS42 MOV2 INS42 INS32 MOV43 INS42 INS52 INS42 INS52 INS42 INS52 INS42 UPD42 INS42 INS33 INS27 INS2 INS42 INS42 INS45 INS42 INS42 INS42 MOV43 INS33 INS21 INS32 INS42 INS42 INS14 INS43 INS42 INS42 DEL40 DEL26 DEL42 DEL4 DEL3