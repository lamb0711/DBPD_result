Merge r1414455:r1426018 from trunk

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1432246 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.yarn.server.resourcemanager.recovery.StoreFactory;
+import org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore;
+import org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttempt;
-    super(StoreFactory.getStore(conf));    
+    this(conf, null);    
+  }
+  
+  public MockRM(Configuration conf, RMStateStore store) {
+    super();    
+    if(store != null) {
+      setRMStateStore(store);
+    }
-    rootLogger.setLevel(Level.DEBUG);
+    rootLogger.setLevel(Level.DEBUG);    
-      System.out.println("App State is : " + app.getState()
+      System.out.println("App : " + appId + " State is : " + app.getState()
+  
+  public void waitForState(ApplicationAttemptId attemptId, 
+                           RMAppAttemptState finalState)
+      throws Exception {
+    RMApp app = getRMContext().getRMApps().get(attemptId.getApplicationId());
+    Assert.assertNotNull("app shouldn't be null", app);
+    RMAppAttempt attempt = app.getCurrentAppAttempt();
+    int timeoutSecs = 0;
+    while (!finalState.equals(attempt.getAppAttemptState()) && timeoutSecs++ < 20) {
+      System.out.println("AppAttempt : " + attemptId 
+          + " State is : " + attempt.getAppAttemptState()
+          + " Waiting for state : " + finalState);
+      Thread.sleep(500);
+    }
+    System.out.println("Attempt State is : " + attempt.getAppAttemptState());
+    Assert.assertEquals("Attempt state is not correct (timedout)", finalState,
+        attempt.getAppAttemptState());
+  }
-    return submitApp(masterMemory, name, user, null);
+    return submitApp(masterMemory, name, user, null, false);
-
+  
+    return submitApp(masterMemory, name, user, acls, false);
+  }  
+
+  public RMApp submitApp(int masterMemory, String name, String user,
+      Map<ApplicationAccessType, String> acls, boolean unmanaged) throws Exception {
+    if(unmanaged) {
+      sub.setUnmanagedAM(true);
+    }

INS26 UPD40 INS40 INS31 INS31 INS31 INS83 INS42 INS44 INS8 INS44 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS44 INS43 INS42 INS17 INS43 INS42 INS46 INS25 INS43 INS42 INS43 INS42 INS42 INS60 INS21 INS60 INS60 INS61 INS21 INS21 INS42 INS39 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS42 INS41 INS39 INS42 INS25 INS42 INS42 INS33 INS42 INS27 INS8 INS42 INS42 INS43 INS59 INS32 INS43 INS59 INS39 INS59 INS27 INS8 INS32 INS32 INS42 INS42 INS43 INS43 INS43 INS32 INS42 INS8 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS34 INS38 INS27 INS21 INS21 INS40 INS42 INS27 INS42 INS42 INS45 INS42 INS32 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS21 INS32 INS32 INS42 INS32 INS42 INS42 INS32 INS37 INS34 INS32 INS32 INS45 INS32 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS40 INS42 INS27 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS9 INS45 INS42 UPD45 INS42 INS42 INS42 INS45 INS42 INS45 INS32 INS45 INS42 INS42 INS42 DEL42 DEL32 DEL46