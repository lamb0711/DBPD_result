HADOOP-16181. HadoopExecutors shutdown Cleanup.

Author:    David Mollitor <david.mollitor@cloudera.com>

-   * Helper routine to shutdown a executorService.
+   * Helper routine to shutdown a {@link ExecutorService}. Will wait up to a
+   * certain timeout for the ExecutorService to gracefully shutdown. If the
+   * ExecutorService did not shutdown and there are still tasks unfinished after
+   * the timeout period, the ExecutorService will be notified to forcibly shut
+   * down. Another timeout period will be waited before giving up. So, at most,
+   * a shutdown will be allowed to wait up to twice the timeout value before
+   * giving up.
-   * @param executorService - executorService
-   * @param logger          - Logger
-   * @param timeout         - Timeout
-   * @param unit            - TimeUnits, generally seconds.
+   * @param executorService ExecutorService to shutdown
+   * @param logger Logger
+   * @param timeout the maximum time to wait
+   * @param unit the time unit of the timeout argument
-    try {
-      if (executorService != null) {
-        executorService.shutdown();
-        try {
-          if (!executorService.awaitTermination(timeout, unit)) {
-            executorService.shutdownNow();
-          }
-          if (!executorService.awaitTermination(timeout, unit)) {
-            logger.error("Unable to shutdown properly.");
-          }
-        } catch (InterruptedException e) {
-          logger.error("Error attempting to shutdown.", e);
-          executorService.shutdownNow();
-        }
+    if (executorService == null) {
+      return;
+    }
+
+    try {
+      executorService.shutdown();
+
+      logger.info(
+          "Gracefully shutting down executor service. Waiting max {} {}",
+          timeout, unit);
+      if (!executorService.awaitTermination(timeout, unit)) {
+        logger.info(
+            "Executor service has not shutdown yet. Forcing. "
+                + "Will wait up to an additional {} {} for shutdown",
+            timeout, unit);
+        executorService.shutdownNow();
+      if (executorService.awaitTermination(timeout, unit)) {
+        logger.info("Succesfully shutdown executor service");
+      } else {
+        logger.error("Unable to shutdown executor service after timeout {} {}",
+            (2 * timeout), unit);
+      }
+    } catch (InterruptedException e) {
+      logger.error("Interrupted while attempting to shutdown", e);
+      executorService.shutdownNow();
-      logger.error("Error during shutdown: ", e);
+      logger.warn("Exception closing executor service {}", e.getMessage());
+      logger.debug("Exception closing executor service", e);

INS25 INS54 UPD66 INS65 INS66 INS66 INS66 INS66 INS66 INS66 INS66 UPD66 UPD66 UPD66 UPD66 UPD27 MOV27 INS8 INS8 INS12 MOV12 INS42 INS41 MOV21 INS21 INS25 INS25 MOV44 MOV8 INS32 MOV38 INS8 INS32 MOV8 INS8 INS21 INS21 INS42 INS42 INS45 INS42 INS42 INS21 MOV21 MOV42 MOV42 MOV42 MOV42 MOV21 INS32 INS32 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS32 UPD42 UPD45 INS42 INS42 INS27 INS42 INS42 UPD42 UPD45 UPD45 INS36 INS42 INS42 INS42 INS45 INS45 INS27 INS34 INS42 DEL42 DEL32 DEL38 DEL25 DEL25 DEL8 DEL8 DEL12 DEL54 DEL8 DEL25 DEL8 DEL54