HDFS-5236. Change PathBasedCacheDirective APIs to be a single value rather than batch. (Contributed by Andrew Wang)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1525183 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.fs.RemoteIterator;
-import org.apache.hadoop.util.Fallible;
-  @SuppressWarnings("unchecked")
-  List<Fallible<PathBasedCacheDescriptor>> addPathBasedCacheDirectives(
-      List<PathBasedCacheDirective> directives) throws IOException {
+  PathBasedCacheDescriptor addPathBasedCacheDirective(
+      PathBasedCacheDirective directive) throws IOException {
-      return (List<Fallible<PathBasedCacheDescriptor>>) retryCacheEntry.getPayload();
+      return (PathBasedCacheDescriptor) retryCacheEntry.getPayload();
-    List<Fallible<PathBasedCacheDescriptor>> results = null;
+    PathBasedCacheDescriptor result = null;
-      results = cacheManager.addDirectives(directives, pc);
-      //getEditLog().logAddPathBasedCacheDirectives(results); FIXME: HDFS-5119
+      result = cacheManager.addDirective(directive, pc);
+      //getEditLog().logAddPathBasedCacheDirective(result); FIXME: HDFS-5119
-        logAuditEvent(success, "addPathBasedCacheDirectives", null, null, null);
+        logAuditEvent(success, "addPathBasedCacheDirective", null, null, null);
-      RetryCache.setState(retryCacheEntry, success, results);
+      RetryCache.setState(retryCacheEntry, success, result);
-    return results;
+    return result;
-  @SuppressWarnings("unchecked")
-  List<Fallible<Long>> removePathBasedCacheDescriptors(List<Long> ids) throws IOException {
-    CacheEntryWithPayload retryCacheEntry =
-        RetryCache.waitForCompletion(retryCache, null);
+  void removePathBasedCacheDescriptor(Long id) throws IOException {
+    CacheEntry retryCacheEntry = RetryCache.waitForCompletion(retryCache);
-      return (List<Fallible<Long>>) retryCacheEntry.getPayload();
+      return;
-    List<Fallible<Long>> results = null;
-      results = cacheManager.removeDescriptors(ids, pc);
+      cacheManager.removeDescriptor(id, pc);
-        logAuditEvent(success, "removePathBasedCacheDescriptors", null, null, null);
+        logAuditEvent(success, "removePathBasedCacheDescriptors", null, null,
+            null);
-      RetryCache.setState(retryCacheEntry, success, results);
+      RetryCache.setState(retryCacheEntry, success);
-    return results;
-  BatchedListEntries<PathBasedCacheDescriptor> listPathBasedCacheDescriptors(long startId,
-      String pool, String path) throws IOException {
+  BatchedListEntries<PathBasedCacheDescriptor> listPathBasedCacheDescriptors(
+      long startId, String pool, String path) throws IOException {
-      results = cacheManager.listPathBasedCacheDescriptors(startId, pool, path, pc);
+      results =
+          cacheManager.listPathBasedCacheDescriptors(startId, pool, path, pc);
-        logAuditEvent(success, "listPathBasedCacheDescriptors", null, null, null);
+        logAuditEvent(success, "listPathBasedCacheDescriptors", null, null,
+            null);

MOV43 UPD42 INS39 UPD42 MOV43 UPD42 MOV43 UPD42 MOV43 UPD42 UPD43 UPD42 UPD42 INS32 MOV43 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 UPD42 UPD42 UPD45 DEL40 DEL26 DEL40 DEL26 DEL42 DEL45 DEL79 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL43 DEL74 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL45 DEL79 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL43 DEL42 DEL43 DEL74 DEL33 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL42 DEL32 DEL11 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL33 DEL59 DEL60 DEL42 DEL32 DEL7 DEL42 DEL42 DEL41