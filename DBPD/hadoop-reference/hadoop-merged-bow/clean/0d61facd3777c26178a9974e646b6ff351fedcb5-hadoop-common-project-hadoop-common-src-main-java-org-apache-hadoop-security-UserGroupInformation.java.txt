HADOOP-15889. Add hadoop.token configuration parameter to load tokens. Contributed by Íñigo Goiri

+import static org.apache.hadoop.fs.CommonConfigurationKeysPublic.HADOOP_TOKENS;
+import static org.apache.hadoop.util.StringUtils.getTrimmedStringCollection;
-import java.io.FileNotFoundException;
-import java.util.Date;
+import java.util.LinkedHashSet;
-import org.apache.hadoop.util.StringUtils;
-    "HADOOP_TOKEN_FILE_LOCATION";
+      "HADOOP_TOKEN_FILE_LOCATION";
+  /** Environment variable pointing to the base64 tokens. */
+  public static final String HADOOP_TOKEN = "HADOOP_TOKEN";
-      String tokenFileLocation = System.getProperty(HADOOP_TOKEN_FILES);
-      if (tokenFileLocation == null) {
-        tokenFileLocation = conf.get(HADOOP_TOKEN_FILES);
-      }
-      if (tokenFileLocation != null) {
-        for (String tokenFileName:
-             StringUtils.getTrimmedStrings(tokenFileLocation)) {
-          if (tokenFileName.length() > 0) {
-            File tokenFile = new File(tokenFileName);
-            if (tokenFile.exists() && tokenFile.isFile()) {
-              Credentials cred = Credentials.readTokenStorageFile(
-                  tokenFile, conf);
-              loginUser.addCredentials(cred);
-            } else {
-              LOG.info("tokenFile("+tokenFileName+") does not exist");
-            }
+      // Load tokens from files
+      final Collection<String> tokenFileLocations = new LinkedHashSet<>();
+      tokenFileLocations.addAll(getTrimmedStringCollection(
+          System.getProperty(HADOOP_TOKEN_FILES)));
+      tokenFileLocations.addAll(getTrimmedStringCollection(
+          conf.get(HADOOP_TOKEN_FILES)));
+      tokenFileLocations.addAll(getTrimmedStringCollection(
+          System.getenv(HADOOP_TOKEN_FILE_LOCATION)));
+      for (String tokenFileLocation : tokenFileLocations) {
+        if (tokenFileLocation != null && tokenFileLocation.length() > 0) {
+          File tokenFile = new File(tokenFileLocation);
+          LOG.debug("Reading credentials from location {}",
+              tokenFile.getCanonicalPath());
+          if (tokenFile.exists() && tokenFile.isFile()) {
+            Credentials cred = Credentials.readTokenStorageFile(
+                tokenFile, conf);
+            LOG.debug("Loaded {} tokens from {}", cred.numberOfTokens(),
+                tokenFile.getCanonicalPath());
+            loginUser.addCredentials(cred);
+          } else {
+            LOG.info("Token file {} does not exist",
+                tokenFile.getCanonicalPath());
-      String fileLocation = System.getenv(HADOOP_TOKEN_FILE_LOCATION);
-      if (fileLocation != null) {
-        // Load the token storage file and put all of the tokens into the
-        // user. Don't use the FileSystem API for reading since it has a lock
-        // cycle (HADOOP-9212).
-        File source = new File(fileLocation);
-        LOG.debug("Reading credentials from location set in {}: {}",
-            HADOOP_TOKEN_FILE_LOCATION,
-            source.getCanonicalPath());
-        if (!source.isFile()) {
-          throw new FileNotFoundException("Source file "
-              + source.getCanonicalPath() + " from "
-              + HADOOP_TOKEN_FILE_LOCATION
-              + " not found");
+      // Load tokens from base64 encoding
+      final Collection<String> tokensBase64 = new LinkedHashSet<>();
+      tokensBase64.addAll(getTrimmedStringCollection(
+          System.getProperty(HADOOP_TOKENS)));
+      tokensBase64.addAll(getTrimmedStringCollection(
+          conf.get(HADOOP_TOKENS)));
+      tokensBase64.addAll(getTrimmedStringCollection(
+          System.getenv(HADOOP_TOKEN)));
+      int numTokenBase64 = 0;
+      for (String tokenBase64 : tokensBase64) {
+        if (tokenBase64 != null && tokenBase64.length() > 0) {
+          try {
+            Token<TokenIdentifier> token = new Token<>();
+            token.decodeFromUrlString(tokenBase64);
+            Credentials cred = new Credentials();
+            cred.addToken(token.getService(), token);
+            loginUser.addCredentials(cred);
+            numTokenBase64++;
+          } catch (IOException ioe) {
+            LOG.error("Cannot add token {}: {}",
+                tokenBase64, ioe.getMessage());
+          }
-        Credentials cred = Credentials.readTokenStorageFile(
-            source, conf);
-        LOG.debug("Loaded {} tokens", cred.numberOfTokens());
-        loginUser.addCredentials(cred);
+      }
+      if (numTokenBase64 > 0) {
+        LOG.debug("Loaded {} base64 tokens", numTokenBase64);

MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 INS23 INS29 INS83 INS83 INS83 INS43 INS59 INS65 INS42 INS42 INS45 INS66 INS21 MOV21 INS21 MOV70 INS21 INS21 INS21 INS60 INS70 INS25 INS83 INS74 INS32 INS32 INS32 INS44 INS42 INS83 INS74 INS32 INS32 INS32 INS39 INS59 MOV44 INS42 INS8 INS27 INS8 INS43 MOV43 UPD42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 MOV43 INS42 INS43 INS43 UPD42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS34 UPD42 INS25 INS42 INS34 MOV21 INS42 INS74 INS42 MOV32 INS42 MOV32 INS42 MOV32 INS42 INS27 INS42 MOV42 INS74 INS42 INS32 INS42 INS32 INS42 INS32 INS27 INS8 INS43 MOV27 INS27 INS60 INS21 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS27 INS54 UPD45 UPD42 MOV42 INS42 MOV32 MOV34 MOV43 INS59 INS32 INS42 UPD42 MOV42 MOV33 INS32 INS34 INS8 INS12 UPD42 INS42 INS14 INS42 INS42 INS45 INS32 INS21 INS42 INS42 MOV60 INS21 INS60 INS21 MOV21 INS21 INS44 INS8 MOV43 INS42 INS42 INS42 INS32 INS74 INS32 MOV43 INS59 INS32 INS37 INS43 INS42 INS21 MOV42 INS42 INS42 INS45 MOV32 INS32 INS45 INS32 INS43 INS43 UPD42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS14 INS42 INS42 MOV32 UPD42 MOV42 INS42 UPD42 MOV42 INS32 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS74 INS43 UPD42 UPD42 UPD42 MOV42 INS42 INS45 INS42 INS32 INS43 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 DEL42 DEL7 DEL42 DEL42 DEL42 DEL32 DEL27 DEL43 DEL42 DEL42 DEL14 DEL59 DEL60 DEL45 DEL42 DEL45 DEL27 DEL42 DEL33 DEL27 DEL8 DEL25 DEL8 DEL25 DEL43 DEL42 DEL27 DEL45 DEL32 DEL21 DEL42 DEL32 DEL38 DEL43 DEL45 DEL42 DEL32 DEL45 DEL42 DEL45 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL25