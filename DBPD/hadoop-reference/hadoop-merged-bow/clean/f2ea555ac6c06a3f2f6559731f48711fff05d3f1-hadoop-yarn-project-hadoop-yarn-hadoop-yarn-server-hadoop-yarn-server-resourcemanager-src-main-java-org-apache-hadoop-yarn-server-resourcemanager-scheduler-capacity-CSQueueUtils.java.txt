YARN-2496. Enhanced Capacity Scheduler to have basic support for allocating resources based on node-labels. Contributed by Wangda Tan.
YARN-2500. Ehnaced ResourceManager to support schedulers allocating resources based on node-labels. Contributed by Wangda Tan.

+import java.util.HashMap;
+import java.util.Map;
+import java.util.Map.Entry;
+
-
-  public static void checkAbsoluteCapacities(String queueName,
+  public static void checkAbsoluteCapacity(String queueName,
+  
+  public static void checkAbsoluteCapacitiesByLabel(String queueName,
+          Map<String, Float> absCapacities,
+          Map<String, Float> absMaximumCapacities) {
+    for (Entry<String, Float> entry : absCapacities.entrySet()) {
+      String label = entry.getKey();
+      float absCapacity = entry.getValue();
+      float absMaxCapacity = absMaximumCapacities.get(label);
+      if (absMaxCapacity < (absCapacity - EPSILON)) {
+        throw new IllegalArgumentException("Illegal call to setMaxCapacity. "
+            + "Queue '" + queueName + "' has " + "an absolute capacity ("
+            + absCapacity + ") greater than "
+            + "its absolute maximumCapacity (" + absMaxCapacity + ") of label="
+            + label);
+      }
+    }
+  }
+  
+  public static Map<String, Float> computeAbsoluteCapacityByNodeLabels(
+      Map<String, Float> nodeLabelToCapacities, CSQueue parent) {
+    if (parent == null) {
+      return nodeLabelToCapacities;
+    }
+    
+    Map<String, Float> absoluteCapacityByNodeLabels =
+        new HashMap<String, Float>();
+    for (Entry<String, Float> entry : nodeLabelToCapacities.entrySet()) {
+      String label = entry.getKey();
+      float capacity = entry.getValue();
+      absoluteCapacityByNodeLabels.put(label,
+          capacity * parent.getAbsoluteCapacityByNodeLabel(label));
+    }
+    return absoluteCapacityByNodeLabels;
+  }
+  
+  public static Map<String, Float> computeAbsoluteMaxCapacityByNodeLabels(
+      Map<String, Float> maximumNodeLabelToCapacities, CSQueue parent) {
+    if (parent == null) {
+      return maximumNodeLabelToCapacities;
+    }
+    Map<String, Float> absoluteMaxCapacityByNodeLabels =
+        new HashMap<String, Float>();
+    for (Entry<String, Float> entry : maximumNodeLabelToCapacities.entrySet()) {
+      String label = entry.getKey();
+      float maxCapacity = entry.getValue();
+      absoluteMaxCapacityByNodeLabels.put(label,
+          maxCapacity * parent.getAbsoluteMaximumCapacityByNodeLabel(label));
+    }
+    return absoluteMaxCapacityByNodeLabels;
+  }

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS31 UPD42 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS83 INS83 INS74 INS42 INS44 INS44 INS8 INS83 INS83 INS74 INS42 INS44 INS44 INS8 INS43 INS42 INS74 INS42 INS74 INS42 INS70 INS43 INS43 INS43 INS74 INS42 INS43 INS42 INS25 INS60 INS70 INS41 INS43 INS43 INS43 INS74 INS42 INS43 INS42 INS25 INS60 INS70 INS41 INS42 INS43 INS43 INS43 INS43 INS43 INS43 INS44 INS32 INS8 INS42 INS42 INS42 INS43 INS43 INS43 INS42 INS27 INS8 INS74 INS59 INS44 INS32 INS8 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS42 INS27 INS8 INS74 INS59 INS44 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS60 INS60 INS60 INS25 INS42 INS42 INS42 INS42 INS33 INS41 INS43 INS43 INS43 INS42 INS14 INS74 INS42 INS42 INS42 INS60 INS60 INS21 INS42 INS42 INS42 INS42 INS33 INS41 INS43 INS43 INS43 INS42 INS14 INS74 INS42 INS42 INS42 INS60 INS60 INS21 INS43 INS43 INS43 INS43 INS59 INS39 INS59 INS39 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS74 INS43 INS43 INS43 INS43 INS59 INS39 INS59 INS32 INS42 INS42 INS42 INS42 INS74 INS43 INS43 INS43 INS43 INS59 INS39 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS36 INS53 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS27 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS45 INS45 INS42 INS45 INS45 INS42 INS45 INS42 INS45 INS45