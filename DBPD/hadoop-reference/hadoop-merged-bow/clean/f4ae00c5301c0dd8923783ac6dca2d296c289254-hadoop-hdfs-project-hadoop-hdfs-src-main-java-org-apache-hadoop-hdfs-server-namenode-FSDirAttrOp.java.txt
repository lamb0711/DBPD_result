HDFS-7133. Support clearing namespace quota on '/'. Contributed by Ayush Saxena."

+    final QuotaCounts oldQuota = dirNode.getQuotaCounts();
+    final long oldNsQuota = oldQuota.getNameSpace();
+    final long oldSsQuota = oldQuota.getStorageSpace();
-      throw new IllegalArgumentException("Cannot clear namespace quota on root.");
-    } else { // a directory inode
-      final QuotaCounts oldQuota = dirNode.getQuotaCounts();
-      final long oldNsQuota = oldQuota.getNameSpace();
-      final long oldSsQuota = oldQuota.getStorageSpace();
+      nsQuota = HdfsConstants.QUOTA_DONT_SET;
+    } else if (nsQuota == HdfsConstants.QUOTA_DONT_SET) {
+      nsQuota = oldNsQuota;
+    } // a directory inode
+    if (ssQuota == HdfsConstants.QUOTA_DONT_SET) {
+      ssQuota = oldSsQuota;
+    }
-      if (nsQuota == HdfsConstants.QUOTA_DONT_SET) {
-        nsQuota = oldNsQuota;
-      }
-      if (ssQuota == HdfsConstants.QUOTA_DONT_SET) {
-        ssQuota = oldSsQuota;
-      }
+    // unchanged space/namespace quota
+    if (type == null && oldNsQuota == nsQuota && oldSsQuota == ssQuota) {
+      return null;
+    }
-      // unchanged space/namespace quota
-      if (type == null && oldNsQuota == nsQuota && oldSsQuota == ssQuota) {
+    // unchanged type quota
+    if (type != null) {
+      EnumCounters<StorageType> oldTypeQuotas = oldQuota.getTypeSpaces();
+      if (oldTypeQuotas != null && oldTypeQuotas.get(type) == ssQuota) {
-
-      // unchanged type quota
-      if (type != null) {
-          EnumCounters<StorageType> oldTypeQuotas = oldQuota.getTypeSpaces();
-          if (oldTypeQuotas != null && oldTypeQuotas.get(type) == ssQuota) {
-              return null;
-          }
-      }
-
-      final int latest = iip.getLatestSnapshotId();
-      dirNode.recordModification(latest);
-      dirNode.setQuota(fsd.getBlockStoragePolicySuite(), nsQuota, ssQuota, type);
-      return dirNode;
+
+    final int latest = iip.getLatestSnapshotId();
+    dirNode.recordModification(latest);
+    dirNode.setQuota(fsd.getBlockStoragePolicySuite(), nsQuota, ssQuota, type);
+    return dirNode;

MOV8 MOV6 MOV25 MOV25 MOV60 INS25 MOV27 INS8 MOV25 INS21 INS7 INS42 INS40 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL8