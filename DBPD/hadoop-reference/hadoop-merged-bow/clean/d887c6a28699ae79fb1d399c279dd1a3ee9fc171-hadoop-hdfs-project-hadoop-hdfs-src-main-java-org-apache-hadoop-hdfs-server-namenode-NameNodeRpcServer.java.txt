svn merge --reintegrate https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832 for merging Heterogeneous Storage feature branch

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550363 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.fs.Path;
+import org.apache.hadoop.fs.Path;
+import org.apache.hadoop.hdfs.protocol.DSQuotaExceededException;
-import org.apache.hadoop.hdfs.protocol.SnapshotDiffReport;
-import org.apache.hadoop.hdfs.protocol.DSQuotaExceededException;
+import org.apache.hadoop.hdfs.protocol.SnapshotDiffReport;
+import org.apache.hadoop.hdfs.server.blockmanagement.BlockManager;
-import org.apache.hadoop.hdfs.server.namenode.NameNode;
-	  BlockingService NNPbService = NamenodeProtocolService
+    BlockingService NNPbService = NamenodeProtocolService
-	  
+    
-	  
+    
-      final DatanodeInfo[] existings, final DatanodeInfo[] excludes,
+      final DatanodeInfo[] existings, final String[] existingStorageIDs,
+      final DatanodeInfo[] excludes,
-    return namesystem.getAdditionalDatanode(src, blk,
-        existings, excludeSet, numAdditionalNodes, clientName);
+    return namesystem.getAdditionalDatanode(src, blk, existings,
+        existingStorageIDs, excludeSet, numAdditionalNodes, clientName);
-      ExtendedBlock newBlock, DatanodeID[] newNodes)
+      ExtendedBlock newBlock, DatanodeID[] newNodes, String[] newStorageIDs)
-    namesystem.updatePipeline(clientName, oldBlock, newBlock, newNodes);
+    namesystem.updatePipeline(clientName, oldBlock, newBlock, newNodes, newStorageIDs);
-    return namesystem.handleHeartbeat(nodeReg, report[0].getCapacity(),
-        report[0].getDfsUsed(), report[0].getRemaining(),
-        report[0].getBlockPoolUsed(), dnCacheCapacity, dnCacheUsed,
-        xceiverCount, xmitsInProgress, failedVolumes);
+    return namesystem.handleHeartbeat(nodeReg, report,
+        dnCacheCapacity, dnCacheUsed, xceiverCount, xmitsInProgress,
+        failedVolumes);
-    BlockListAsLongs blist = new BlockListAsLongs(reports[0].getBlocks());
-           + "from " + nodeReg + " " + blist.getNumberOfBlocks()
-           + " blocks");
+           + "from " + nodeReg + ", reports.length=" + reports.length);
+    }
+    final BlockManager bm = namesystem.getBlockManager(); 
+    for(StorageBlockReport r : reports) {
+      final BlockListAsLongs blocks = new BlockListAsLongs(r.getBlocks());
+      bm.processReport(nodeReg, r.getStorage(), poolId, blocks);
-    namesystem.getBlockManager().processReport(nodeReg, poolId, blist);
-    namesystem.processIncrementalBlockReport(
-        nodeReg, poolId, receivedAndDeletedBlocks[0].getBlocks());
+    for(StorageReceivedDeletedBlocks r : receivedAndDeletedBlocks) {
+      namesystem.processIncrementalBlockReport(nodeReg, poolId, r);
+    }
+

MOV26 MOV26 MOV26 MOV26 UPD40 INS44 INS44 INS83 INS5 INS42 INS5 INS42 INS60 INS70 INS70 INS43 INS85 INS43 INS85 INS83 INS43 INS59 INS44 INS42 INS8 INS44 INS42 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS43 INS42 INS60 MOV21 INS43 INS42 MOV21 INS42 INS83 MOV43 INS59 INS42 INS42 INS14 INS42 INS32 UPD42 INS42 UPD45 INS40 MOV43 INS32 INS42 INS42 INS42 INS42 DEL42 DEL34 DEL2 DEL42 DEL32 DEL42 DEL34 DEL2 DEL42 DEL32 DEL42 DEL34 DEL2 DEL42 DEL32 DEL42 DEL34 DEL2 DEL42 DEL32 DEL42 DEL42 DEL34 DEL2 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL42 DEL32 DEL45 DEL42 DEL34 DEL2 DEL42 DEL32