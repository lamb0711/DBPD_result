MAPREDUCE-4680. Job history cleaner should only check timestamps of files in old enough directories (Robert Kanter via Sandy Ryza)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1536558 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+
+  /**
+   * Looks for the dirs to clean.  The folder structure is YYYY/MM/DD/Serial so
+   * we can use that to more efficiently find the directories to clean by
+   * comparing the cutoff timestamp with the timestamp from the folder
+   * structure.
+   *
+   * @param fc done dir FileContext
+   * @param root folder for completed jobs
+   * @param cutoff The cutoff for the max history age
+   * @return The list of directories for cleaning
+   * @throws IOException
+   */
+  public static List<FileStatus> getHistoryDirsForCleaning(FileContext fc,
+      Path root, long cutoff) throws IOException {
+    List<FileStatus> fsList = new ArrayList<FileStatus>();
+    Calendar cCal = Calendar.getInstance();
+    cCal.setTimeInMillis(cutoff);
+    int cYear = cCal.get(Calendar.YEAR);
+    int cMonth = cCal.get(Calendar.MONTH) + 1;
+    int cDate = cCal.get(Calendar.DATE);
+
+    RemoteIterator<FileStatus> yearDirIt = fc.listStatus(root);
+    while (yearDirIt.hasNext()) {
+      FileStatus yearDir = yearDirIt.next();
+      try {
+        int year = Integer.parseInt(yearDir.getPath().getName());
+        if (year <= cYear) {
+          RemoteIterator<FileStatus> monthDirIt =
+              fc.listStatus(yearDir.getPath());
+          while (monthDirIt.hasNext()) {
+            FileStatus monthDir = monthDirIt.next();
+            try {
+              int month = Integer.parseInt(monthDir.getPath().getName());
+              // If we only checked the month here, then something like 07/2013
+              // would incorrectly not pass when the cutoff is 06/2014
+              if (year < cYear || month <= cMonth) {
+                RemoteIterator<FileStatus> dateDirIt =
+                    fc.listStatus(monthDir.getPath());
+                while (dateDirIt.hasNext()) {
+                  FileStatus dateDir = dateDirIt.next();
+                  try {
+                    int date = Integer.parseInt(dateDir.getPath().getName());
+                    // If we only checked the date here, then something like
+                    // 07/21/2013 would incorrectly not pass when the cutoff is
+                    // 08/20/2013 or 07/20/2012
+                    if (year < cYear || month < cMonth || date <= cDate) {
+                      fsList.addAll(remoteIterToList(
+                          fc.listStatus(dateDir.getPath())));
+                    }
+                  } catch (NumberFormatException nfe) {
+                    // the directory didn't fit the format we're looking for so
+                    // skip the dir
+                  }
+                }
+              }
+            } catch (NumberFormatException nfe) {
+              // the directory didn't fit the format we're looking for so skip
+              // the dir
+            }
+          }
+        }
+      } catch (NumberFormatException nfe) {
+        // the directory didn't fit the format we're looking for so skip the dir
+      }
+    }
+    return fsList;
+  }

INS26 INS40 INS31 INS29 INS83 INS83 INS74 INS42 INS44 INS44 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS43 INS43 INS42 INS43 INS42 INS39 INS42 INS42 INS60 INS60 INS21 INS60 INS60 INS60 INS60 INS61 INS41 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS43 INS59 INS32 INS39 INS59 INS39 INS59 INS39 INS59 INS74 INS59 INS32 INS8 INS42 INS43 INS43 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS27 INS42 INS32 INS43 INS43 INS42 INS32 INS42 INS42 INS60 INS54 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS40 INS32 INS34 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS8 INS12 INS43 INS43 INS42 INS42 INS40 INS42 INS42 INS32 INS60 INS25 INS44 INS8 INS42 INS42 INS42 INS42 INS39 INS59 INS27 INS8 INS43 INS42 INS42 INS32 INS42 INS42 INS60 INS61 INS42 INS42 INS42 INS32 INS74 INS59 INS32 INS8 INS32 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS60 INS54 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS8 INS12 INS42 INS42 INS42 INS42 INS32 INS60 INS25 INS44 INS8 INS42 INS42 INS39 INS59 INS27 INS8 INS43 INS42 INS42 INS32 INS27 INS27 INS60 INS61 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS74 INS59 INS32 INS8 INS32 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS60 INS54 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS59 INS8 INS12 INS42 INS42 INS42 INS42 INS32 INS60 INS25 INS44 INS8 INS42 INS42 INS39 INS59 INS27 INS8 INS43 INS42 INS42 INS32 INS27 INS27 INS21 INS42 INS42 INS42 INS32 INS27 INS27 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42