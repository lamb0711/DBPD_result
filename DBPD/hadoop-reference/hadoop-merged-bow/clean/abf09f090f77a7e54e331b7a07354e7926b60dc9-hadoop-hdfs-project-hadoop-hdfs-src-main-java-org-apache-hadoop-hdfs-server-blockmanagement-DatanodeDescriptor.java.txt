HDFS-4990. Change BlockPlacementPolicy to choose storages instead of datanodes.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1524444 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collections;
-    public final DatanodeDescriptor[] targets;    
+    public final DatanodeStorageInfo[] targets;    
-    BlockTargetPair(Block block, DatanodeDescriptor[] targets) {
+    BlockTargetPair(Block block, DatanodeStorageInfo[] targets) {
-  public DatanodeStorageInfo getStorageInfo(String storageID) {
+  DatanodeStorageInfo getStorageInfo(String storageID) {
-  public Collection<DatanodeStorageInfo> getStorageInfos() {
+  DatanodeStorageInfo[] getStorageInfos() {
-      return new ArrayList<DatanodeStorageInfo>(storageMap.values());
+      final Collection<DatanodeStorageInfo> storages = storageMap.values();
+      return storages.toArray(new DatanodeStorageInfo[storages.size()]);
-   * Used for testing only
-   * @return the head of the blockList
-   */
-  protected BlockInfo getHead(){
-    return getBlockIterator().next();
-  }
-
-  /**
-    private final int maxIndex;
-    private List<Iterator<BlockInfo>> iterators = new ArrayList<Iterator<BlockInfo>>();
+    private final List<Iterator<BlockInfo>> iterators;
-    private BlockIterator(final Iterable<DatanodeStorageInfo> storages) {
+    private BlockIterator(final DatanodeStorageInfo... storages) {
+      List<Iterator<BlockInfo>> iterators = new ArrayList<Iterator<BlockInfo>>();
-      maxIndex = iterators.size() - 1;
-    }
-
-    private BlockIterator(final DatanodeStorageInfo storage) {
-      iterators.add(storage.getBlockIterator());
-      maxIndex = iterators.size() - 1;
+      this.iterators = Collections.unmodifiableList(iterators);
-      while(index < maxIndex && !iterators.get(index).hasNext()) {
+      while(index < iterators.size() - 1 && !iterators.get(index).hasNext()) {
-  void addBlockToBeReplicated(Block block, DatanodeDescriptor[] targets) {
+  void addBlockToBeReplicated(Block block, DatanodeStorageInfo[] targets) {

INS26 INS40 INS5 INS23 UPD5 MOV43 INS85 MOV83 MOV83 INS74 INS59 UPD5 UPD43 UPD5 INS43 INS74 INS42 MOV43 UPD42 INS60 MOV70 MOV43 UPD42 UPD43 INS60 INS42 UPD43 MOV43 INS43 MOV74 MOV59 INS7 UPD42 INS83 MOV74 INS59 INS32 UPD42 INS42 INS22 INS32 INS42 MOV32 INS42 INS42 INS3 INS52 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV27 INS5 INS32 INS43 INS85 INS42 INS42 UPD42 MOV42 DEL83 DEL83 DEL43 DEL74 DEL14 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8 DEL31 DEL39 DEL42 DEL59 DEL23 DEL83 DEL23 DEL83 DEL42 DEL83 DEL74 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL34 DEL27 DEL7 DEL21 DEL8 DEL31 DEL42 DEL32 DEL32 DEL42 DEL7 DEL21 DEL42 DEL42 DEL43