Merge r1476453 through r1477867 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1477868 13f79535-47bb-0310-9956-ffa450edef68

-
-      f.setExecutable(true);
-      f.setReadable(true);
-      f.setWritable(true);
+      FileUtil.setExecutable(f, true);
+      FileUtil.setReadable(f, true);
+      FileUtil.setWritable(f, true);
+   * Platform independent implementation for {@link File#setReadable(boolean)}
+   * File#setReadable does not work as expected on Windows.
+   * @param f input file
+   * @param readable
+   * @return true on success, false otherwise
+   */
+  public static boolean setReadable(File f, boolean readable) {
+    if (Shell.WINDOWS) {
+      try {
+        String permission = readable ? "u+r" : "u-r";
+        FileUtil.chmod(f.getCanonicalPath(), permission, false);
+        return true;
+      } catch (IOException ex) {
+        return false;
+      }
+    } else {
+      return f.setReadable(readable);
+    }
+  }
+
+  /**
+   * Platform independent implementation for {@link File#setWritable(boolean)}
+   * File#setWritable does not work as expected on Windows.
+   * @param f input file
+   * @param writable
+   * @return true on success, false otherwise
+   */
+  public static boolean setWritable(File f, boolean writable) {
+    if (Shell.WINDOWS) {
+      try {
+        String permission = writable ? "u+w" : "u-w";
+        FileUtil.chmod(f.getCanonicalPath(), permission, false);
+        return true;
+      } catch (IOException ex) {
+        return false;
+      }
+    } else {
+      return f.setWritable(writable);
+    }
+  }
+
+  /**
+   * Platform independent implementation for {@link File#setExecutable(boolean)}
+   * File#setExecutable does not work as expected on Windows.
+   * Note: revoking execute permission on folders does not have the same
+   * behavior on Windows as on Unix platforms. Creating, deleting or renaming
+   * a file within that folder will still succeed on Windows.
+   * @param f input file
+   * @param executable
+   * @return true on success, false otherwise
+   */
+  public static boolean setExecutable(File f, boolean executable) {
+    if (Shell.WINDOWS) {
+      try {
+        String permission = executable ? "u+x" : "u-x";
+        FileUtil.chmod(f.getCanonicalPath(), permission, false);
+        return true;
+      } catch (IOException ex) {
+        return false;
+      }
+    } else {
+      return f.setExecutable(executable);
+    }
+  }
+
+  /**
+   * Platform independent implementation for {@link File#canRead()}
+   * @param f input file
+   * @return On Unix, same as {@link File#canRead()}
+   *         On Windows, true if process has read access on the path
+   */
+  public static boolean canRead(File f) {
+    if (Shell.WINDOWS) {
+      try {
+        return NativeIO.Windows.access(f.getCanonicalPath(),
+            NativeIO.Windows.AccessRight.ACCESS_READ);
+      } catch (IOException e) {
+        return false;
+      }
+    } else {
+      return f.canRead();
+    }
+  }
+
+  /**
+   * Platform independent implementation for {@link File#canWrite()}
+   * @param f input file
+   * @return On Unix, same as {@link File#canWrite()}
+   *         On Windows, true if process has write access on the path
+   */
+  public static boolean canWrite(File f) {
+    if (Shell.WINDOWS) {
+      try {
+        return NativeIO.Windows.access(f.getCanonicalPath(),
+            NativeIO.Windows.AccessRight.ACCESS_WRITE);
+      } catch (IOException e) {
+        return false;
+      }
+    } else {
+      return f.canWrite();
+    }
+  }
+
+  /**
+   * Platform independent implementation for {@link File#canExecute()}
+   * @param f input file
+   * @return On Unix, same as {@link File#canExecute()}
+   *         On Windows, true if process has execute access on the path
+   */
+  public static boolean canExecute(File f) {
+    if (Shell.WINDOWS) {
+      try {
+        return NativeIO.Windows.access(f.getCanonicalPath(),
+            NativeIO.Windows.AccessRight.ACCESS_EXECUTE);
+      } catch (IOException e) {
+        return false;
+      }
+    } else {
+      return f.canExecute();
+    }
+  }
+
+  /**

INS31 INS31 INS31 INS31 INS31 INS31 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS8 INS65 INS65 INS65 INS65 INS43 INS42 INS39 INS42 INS25 INS65 INS65 INS65 INS65 INS43 INS42 INS39 INS42 INS25 INS65 INS65 INS65 INS65 INS43 INS42 INS39 INS42 INS25 INS65 INS65 INS65 INS43 INS42 INS25 INS65 INS65 INS65 INS43 INS42 INS25 INS65 INS65 INS65 INS43 INS42 INS25 INS66 INS65 INS66 INS42 INS66 INS42 INS66 INS42 INS40 INS8 INS8 INS66 INS65 INS66 INS42 INS66 INS42 INS66 INS42 INS40 INS8 INS8 INS66 INS65 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS40 INS8 INS8 INS66 INS65 INS42 INS66 INS66 INS65 INS66 INS42 INS40 INS8 INS8 INS66 INS65 INS42 INS66 INS66 INS65 INS66 INS42 INS40 INS8 INS8 INS66 INS65 INS42 INS66 INS66 INS65 INS66 INS42 INS40 INS8 INS8 UPD42 INS42 UPD42 INS42 UPD42 INS42 INS68 INS54 INS41 INS68 INS54 INS41 INS68 INS54 INS41 INS68 INS68 INS54 INS41 INS68 INS68 INS54 INS41 INS68 INS68 INS54 INS41 INS42 INS42 INS69 INS8 INS12 INS32 INS42 INS42 INS69 INS8 INS12 INS32 INS42 INS42 INS69 INS8 INS12 INS32 INS42 INS42 INS42 INS42 INS8 INS12 INS32 INS42 INS42 INS42 INS42 INS8 INS12 INS32 INS42 INS42 INS42 INS42 INS8 INS12 INS32 INS39 INS60 INS21 INS41 INS44 INS8 INS42 INS42 INS42 INS39 INS60 INS21 INS41 INS44 INS8 INS42 INS42 INS42 INS39 INS60 INS21 INS41 INS44 INS8 INS42 INS42 INS42 INS41 INS44 INS8 INS42 INS42 INS41 INS44 INS8 INS42 INS42 INS41 INS44 INS8 INS42 INS42 INS43 INS59 INS32 INS9 INS43 INS42 INS41 INS43 INS59 INS32 INS9 INS43 INS42 INS41 INS43 INS59 INS32 INS9 INS43 INS42 INS41 INS32 INS43 INS42 INS41 INS32 INS43 INS42 INS41 INS32 INS43 INS42 INS41 INS42 INS42 INS16 INS42 INS42 INS32 INS42 INS9 INS42 INS9 INS42 INS42 INS16 INS42 INS42 INS32 INS42 INS9 INS42 INS9 INS42 INS42 INS16 INS42 INS42 INS32 INS42 INS9 INS42 INS9 INS40 INS42 INS32 INS40 INS42 INS9 INS40 INS42 INS32 INS40 INS42 INS9 INS40 INS42 INS32 INS40 INS42 INS9 INS42 INS45 INS45 INS42 INS42 INS42 INS45 INS45 INS42 INS42 INS42 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42