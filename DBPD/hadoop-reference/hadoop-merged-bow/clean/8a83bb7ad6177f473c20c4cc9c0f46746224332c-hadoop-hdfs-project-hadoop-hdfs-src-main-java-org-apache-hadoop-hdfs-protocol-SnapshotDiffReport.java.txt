HDFS-4667. Capture renamed files/directories in snapshot diff report. Contributed by Jing Zhao and Binglin Chang.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1604488 13f79535-47bb-0310-9956-ffa450edef68

+import com.google.common.base.Objects;
+
-     * The relative path (related to the snapshot root) of the file/directory
-     * where changes have happened
+     * The relative path (related to the snapshot root) of 1) the file/directory
+     * where changes have happened, or 2) the source file/dir of a rename op.
-    private final byte[] relativePath;
+    private final byte[] sourcePath;
+    private final byte[] targetPath;
-    public DiffReportEntry(DiffType type, byte[] path) {
+    public DiffReportEntry(DiffType type, byte[] sourcePath) {
+      this(type, sourcePath, null);
+    }
+
+    public DiffReportEntry(DiffType type, byte[][] sourcePathComponents) {
+      this(type, sourcePathComponents, null);
+    }
+
+    public DiffReportEntry(DiffType type, byte[] sourcePath, byte[] targetPath) {
-      this.relativePath = path;
+      this.sourcePath = sourcePath;
+      this.targetPath = targetPath;
-    public DiffReportEntry(DiffType type, byte[][] pathComponents) {
+    public DiffReportEntry(DiffType type, byte[][] sourcePathComponents,
+        byte[][] targetPathComponents) {
-      this.relativePath = DFSUtil.byteArray2bytes(pathComponents);
+      this.sourcePath = DFSUtil.byteArray2bytes(sourcePathComponents);
+      this.targetPath = targetPathComponents == null ? null : DFSUtil
+          .byteArray2bytes(targetPathComponents);
-      return type.getLabel() + "\t" + getRelativePathString();
+      String str = type.getLabel() + "\t" + getPathString(sourcePath);
+      if (type == DiffType.RENAME) {
+        str += " -> " + getPathString(targetPath);
+      }
+      return str;
-    public String getRelativePathString() {
-      String path = DFSUtil.bytes2String(relativePath);
-      if (path.isEmpty()) {
+    static String getPathString(byte[] path) {
+      String pathStr = DFSUtil.bytes2String(path);
+      if (pathStr.isEmpty()) {
-        return Path.CUR_DIR + Path.SEPARATOR + path;
+        return Path.CUR_DIR + Path.SEPARATOR + pathStr;
-    public byte[] getRelativePath() {
-      return relativePath;
+    public byte[] getSourcePath() {
+      return sourcePath;
-    
+
+    public byte[] getTargetPath() {
+      return targetPath;
+    }
+
-            && Arrays.equals(relativePath, entry.getRelativePath());
+            && Arrays.equals(sourcePath, entry.getSourcePath())
+            && Arrays.equals(targetPath, entry.getTargetPath());
-      return Arrays.hashCode(relativePath);
+      return Objects.hashCode(getSourcePath(), getTargetPath());

INS26 INS40 INS23 INS31 INS31 INS31 INS83 INS83 INS5 INS59 INS83 INS42 MOV44 INS44 INS8 INS83 INS42 MOV44 MOV44 INS8 INS44 INS44 INS44 INS44 INS44 INS44 INS43 UPD83 UPD42 MOV44 UPD42 INS83 INS5 INS42 INS8 UPD42 INS39 INS85 INS42 INS5 INS42 INS17 UPD42 INS17 INS43 INS42 INS5 INS42 INS5 INS42 MOV21 INS21 INS43 INS42 INS5 INS42 INS5 INS42 MOV21 INS21 INS42 INS60 INS25 INS39 INS85 INS41 UPD66 UPD66 INS39 INS85 INS42 INS42 INS33 INS42 INS42 INS33 INS42 INS39 INS85 INS39 INS85 INS7 INS42 INS39 INS85 INS85 INS39 INS85 INS85 INS7 MOV43 INS59 INS27 INS8 INS42 UPD42 INS42 UPD42 INS22 INS42 INS22 INS16 INS42 MOV27 INS42 INS40 INS21 UPD42 UPD42 UPD42 INS32 INS32 UPD42 INS52 INS42 UPD42 UPD42 INS52 INS42 INS27 INS33 INS32 INS7 UPD42 UPD42 MOV42 INS42 INS42 INS33 INS42 INS42 INS42 UPD42 INS42 INS42 INS27 UPD42 INS32 INS45 INS32 UPD42 INS42 INS42 INS42 INS32 INS42 INS42 UPD42 INS42 INS42