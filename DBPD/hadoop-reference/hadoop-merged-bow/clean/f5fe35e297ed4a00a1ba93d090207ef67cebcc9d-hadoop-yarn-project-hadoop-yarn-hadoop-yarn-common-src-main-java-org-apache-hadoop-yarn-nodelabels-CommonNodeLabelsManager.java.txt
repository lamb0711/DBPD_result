YARN-3413. Changed Nodelabel attributes (like exclusivity) to be settable only via addToClusterNodeLabels but not changeable at runtime. (Wangda Tan via vinodkv)

+import java.util.ArrayList;
-import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.nodelabels.event.StoreUpdateNodeLabelsEvent;
-      case UPDATE_NODE_LABELS:
-        StoreUpdateNodeLabelsEvent
-          storeSetNodeLabelsEventEvent =
-            (StoreUpdateNodeLabelsEvent) event;
-        store.updateNodeLabels(storeSetNodeLabelsEventEvent
-            .getUpdatedNodeLabels());
-        break;
-  /**
-   * Add multiple node labels to repository
-   * 
-   * @param labels
-   *          new node labels added
-   */
-  public void addToCluserNodeLabels(Set<String> labels) throws IOException {
+  public void addToCluserNodeLabels(Collection<NodeLabel> labels)
+      throws IOException {
-    Set<String> newLabels = new HashSet<String>();
-    labels = normalizeLabels(labels);
+    List<NodeLabel> newLabels = new ArrayList<NodeLabel>();
+    normalizeNodeLabels(labels);
-    for (String label : labels) {
-      checkAndThrowLabelName(label);
+    for (NodeLabel label : labels) {
+      checkAndThrowLabelName(label.getName());
-    for (String label : labels) {
+    for (NodeLabel label : labels) {
-      if (this.labelCollections.get(label) == null) {
-        this.labelCollections.put(label, new RMNodeLabel(label));
+      if (this.labelCollections.get(label.getName()) == null) {
+        this.labelCollections.put(label.getName(), new RMNodeLabel(label));
+
+  /**
+   * Add multiple node labels to repository
+   *
+   * @param labels
+   *          new node labels added
+   */
+  @VisibleForTesting
+  public void addToCluserNodeLabelsWithDefaultExclusivity(Set<String> labels)
+      throws IOException {
+    Set<NodeLabel> nodeLabels = new HashSet<NodeLabel>();
+    for (String label : labels) {
+      nodeLabels.add(NodeLabel.newInstance(label));
+    }
+    addToCluserNodeLabels(nodeLabels);
+  }
-  public Set<String> getClusterNodeLabels() {
+  public Set<String> getClusterNodeLabelNames() {
-  private void checkUpdateNodeLabels(
-      List<NodeLabel> updatedNodeLabels) throws YarnException {
-    // pre-check
-    for (NodeLabel label : updatedNodeLabels) {
-      if (!labelCollections.containsKey(label.getNodeLabel())) {
-        String message =
-          String.format(
-            "Trying to update a non-existing node-label=%s",
-            label.getNodeLabel());
-        LOG.error(message);
-        throw new YarnException(message);
-      }
-    }
-  }
-
-  @SuppressWarnings("unchecked")
-  public void updateNodeLabels(
-      List<NodeLabel> updatedNodeLabels) throws YarnException {
+  public List<NodeLabel> getClusterNodeLabels() {
-      writeLock.lock();
-      checkUpdateNodeLabels(updatedNodeLabels);
-
-      for (NodeLabel label : updatedNodeLabels) {
-        RMNodeLabel rmLabel = labelCollections.get(label.getNodeLabel());
-        rmLabel.setIsExclusive(label.getIsExclusive());
+      readLock.lock();
+      List<NodeLabel> nodeLabels = new ArrayList<>();
+      for (RMNodeLabel label : labelCollections.values()) {
+        nodeLabels.add(NodeLabel.newInstance(label.getLabelName(),
+            label.getIsExclusive()));
-
-      if (null != dispatcher && !updatedNodeLabels.isEmpty()) {
-        dispatcher.getEventHandler().handle(
-          new StoreUpdateNodeLabelsEvent(updatedNodeLabels));
-      }
+      return nodeLabels;
-      writeLock.unlock();
+      readLock.unlock();
+  private void normalizeNodeLabels(Collection<NodeLabel> labels) {
+    for (NodeLabel label : labels) {
+      label.setName(normalizeLabel(label.getName()));
+    }
+  }
+

MOV26 MOV31 UPD40 INS31 INS31 INS44 MOV29 INS78 UPD83 INS42 MOV44 UPD43 UPD42 MOV83 INS74 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS74 INS42 INS60 INS21 INS42 UPD42 MOV60 INS70 MOV21 INS43 INS43 INS54 INS74 INS42 INS70 INS43 INS43 MOV74 INS59 INS32 MOV44 UPD74 MOV44 INS42 INS8 INS42 INS42 INS8 INS8 INS43 INS43 MOV44 INS42 INS8 INS42 INS42 INS42 INS14 UPD42 MOV42 MOV42 UPD43 UPD43 UPD42 INS21 UPD42 UPD42 MOV21 INS60 MOV70 INS41 INS21 INS42 UPD42 MOV42 MOV21 INS74 UPD42 UPD42 UPD74 INS32 MOV74 INS59 INS44 INS32 INS8 INS42 INS32 INS32 INS43 INS43 INS32 UPD43 INS42 UPD42 MOV42 INS32 UPD42 INS42 INS14 MOV43 INS42 MOV42 UPD42 MOV42 MOV21 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS32 INS42 INS42 MOV42 INS42 INS32 UPD42 UPD42 MOV42 UPD42 MOV42 MOV42 INS74 INS32 INS42 INS32 MOV42 INS42 INS32 INS43 INS42 INS42 MOV32 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS42 UPD42 UPD42 INS32 INS42 INS42 DEL40 DEL26 DEL42 DEL49 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL10 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL38 DEL42 DEL43 DEL42 DEL45 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25 DEL8 DEL70 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL8 DEL42 DEL45 DEL79 DEL39 DEL42 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL32 DEL21 DEL33 DEL42 DEL27 DEL32 DEL38 DEL27 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL14 DEL32 DEL21 DEL8 DEL25 DEL8 DEL8 DEL54 DEL8 DEL31 DEL32