MAPREDUCE-5386. Ability to refresh history server job retention and job cleaner settings. Contributed by Ashwin Shankar


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1507135 13f79535-47bb-0310-9956-ffa450edef68

+    } else if ("-refreshJobRetentionSettings".equals(cmd)) {
+      System.err
+          .println("Usage: mapred hsadmin [-refreshJobRetentionSettings]");
-      System.err.println("Usage: mapred hsadmin [-refreshLogRetentionSettings]");
+      System.err
+          .println("Usage: mapred hsadmin [-refreshLogRetentionSettings]");
+      System.err.println("           [-refreshJobRetentionSettings]");
+        + " [-refreshLogRetentionSettings]"
+        + " [-refreshJobRetentionSettings]"
-    String refreshLogRetentionSettings = "-refreshLogRetentionSettings: Refresh 'log retention time' and 'log retention check interval' \n";
+    String refreshJobRetentionSettings = "-refreshJobRetentionSettings:" + 
+        "Refresh job history period,job cleaner settings\n";
+
+    String refreshLogRetentionSettings = "-refreshLogRetentionSettings:" + 
+        "Refresh log retention period and log retention check interval\n";
+
+    } else if ("refreshJobRetentionSettings".equals(cmd)) {
+      System.out.println(refreshJobRetentionSettings);
+      System.out.println(refreshJobRetentionSettings);
-    // Refresh the user-to-groups mappings
+
+  private int refreshJobRetentionSettings() throws IOException {
+    // Refresh job retention settings
+    Configuration conf = getConf();
+    InetSocketAddress address = conf.getSocketAddr(
+        JHAdminConfig.JHS_ADMIN_ADDRESS,
+        JHAdminConfig.DEFAULT_JHS_ADMIN_ADDRESS,
+        JHAdminConfig.DEFAULT_JHS_ADMIN_PORT);
+
+    HSAdminRefreshProtocol refreshProtocol = HSProxies.createProxy(conf,
+        address, HSAdminRefreshProtocol.class,
+        UserGroupInformation.getCurrentUser());
+
+    refreshProtocol.refreshJobRetentionSettings();
+    return 0;
+  }
+
-    HSAdminRefreshProtocol refreshProtocol = HSProxies
-        .createProxy(conf, address, HSAdminRefreshProtocol.class,
-            UserGroupInformation.getCurrentUser());
+    HSAdminRefreshProtocol refreshProtocol = HSProxies.createProxy(conf,
+        address, HSAdminRefreshProtocol.class,
+        UserGroupInformation.getCurrentUser());
-  
+
+        || "-refreshJobRetentionSettings".equals(cmd)
+    } else if ("-refreshJobRetentionSettings".equals(cmd)) {
+      exitCode = refreshJobRetentionSettings();

INS31 INS83 INS39 INS42 INS43 INS8 INS60 INS42 INS60 INS60 INS60 INS21 INS41 MOV43 INS59 INS43 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS34 INS42 INS27 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS25 INS45 INS45 INS45 INS45 INS45 INS45 INS42 INS42 INS42 INS40 INS40 INS40 INS42 INS42 INS42 INS42 INS57 INS32 INS45 INS42 INS42 INS25 INS32 INS8 MOV25 INS25 INS43 INS42 INS42 INS32 INS8 MOV25 INS45 INS42 INS42 INS21 INS32 INS8 MOV25 INS42 INS45 INS42 INS42 INS21 INS32 INS45 INS42 INS42 INS21 INS7 INS40 INS42 INS45 INS21 INS32 INS42 INS32 INS32 INS40 INS42 INS42 INS21 INS42 INS40 INS42 INS45 INS32 INS40 INS42 INS42 DEL45