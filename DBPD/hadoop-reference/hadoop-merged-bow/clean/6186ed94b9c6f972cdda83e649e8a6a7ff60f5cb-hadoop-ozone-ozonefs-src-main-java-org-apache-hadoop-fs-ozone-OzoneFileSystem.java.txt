HDDS-1300. Optimize non-recursive ozone filesystem apis. Contributed by Lokesh Jain.

-    final FileStatus fileStatus = getFileStatus(f);
-    if (fileStatus.isDirectory()) {
-      throw new FileNotFoundException("Can't open directory " + f + " to read");
-    }
-
-    return new FSDataInputStream(
-        new OzoneFSInputStream(adapter.createInputStream(key)));
+    return new FSDataInputStream(new OzoneFSInputStream(adapter.readFile(key)));
-    final FileStatus status;
-    try {
-      status = getFileStatus(f);
-      if (status.isDirectory()) {
-        throw new FileAlreadyExistsException(f + " is a directory");
-      } else {
-        if (!overwrite) {
-          // path references a file and overwrite is disabled
-          throw new FileAlreadyExistsException(f + " already exists");
-        }
-        LOG.trace("Overwriting file {}", f);
-        adapter.deleteObject(key);
-      }
-    } catch (FileNotFoundException ignored) {
-      // this means the file is not found
-    }
-
-    return new FSDataOutputStream(adapter.createKey(key), statistics);
+    return createOutputStream(key, overwrite, true);
+    final String key = pathToKey(path);
-    return create(path, permission, flags.contains(CreateFlag.OVERWRITE),
-        bufferSize, replication, blockSize, progress);
+    return createOutputStream(key, flags.contains(CreateFlag.OVERWRITE), false);
+  }
+
+  private FSDataOutputStream createOutputStream(String key, boolean overwrite,
+      boolean recursive) throws IOException {
+    return new FSDataOutputStream(adapter.createFile(key, overwrite, recursive),
+        statistics);
-   * All the non-existent parent directories are also created.
-    Path fPart = path;
-    Path prevfPart = null;
-    do {
-      LOG.trace("validating path:{}", fPart);
-      try {
-        FileStatus fileStatus = getFileStatus(fPart);
-        if (fileStatus.isDirectory()) {
-          // If path exists and a directory, exit
-          break;
-        } else {
-          // Found a file here, rollback and delete newly created directories
-          LOG.trace("Found a file with same name as directory, path:{}", fPart);
-          if (prevfPart != null) {
-            delete(prevfPart, true);
-          }
-          throw new FileAlreadyExistsException(String.format(
-              "Can't make directory for path '%s', it is a file.", fPart));
-        }
-      } catch (FileNotFoundException fnfe) {
-        LOG.trace("creating directory for fpart:{}", fPart);
-        String key = pathToKey(fPart);
-        String dirKey = addTrailingSlashIfNeeded(key);
-        if (!adapter.createDirectory(dirKey)) {
-          // Directory creation failed here,
-          // rollback and delete newly created directories
-          LOG.trace("Directory creation failed, path:{}", fPart);
-          if (prevfPart != null) {
-            delete(prevfPart, true);
-          }
-          return false;
-        }
-      }
-      prevfPart = fPart;
-      fPart = fPart.getParent();
-    } while (fPart != null);
+    String key = pathToKey(path);
+    adapter.createDirectory(key);

INS31 INS31 MOV83 INS43 INS42 INS44 INS44 INS44 INS43 INS8 MOV29 INS83 INS39 INS42 MOV44 MOV43 INS8 INS60 INS41 UPD42 MOV42 MOV43 INS42 INS39 INS42 INS39 INS42 UPD42 MOV42 INS41 MOV60 INS21 MOV41 INS32 INS83 INS43 INS59 INS32 INS14 INS32 UPD42 MOV42 MOV42 INS42 INS9 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 MOV32 INS9 MOV43 INS32 INS42 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL45 DEL42 DEL45 DEL27 DEL14 DEL53 DEL8 DEL25 DEL83 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL45 DEL27 DEL14 DEL53 DEL8 DEL42 DEL38 DEL42 DEL43 DEL42 DEL45 DEL27 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL42 DEL32 DEL42 DEL14 DEL42 DEL42 DEL42 DEL32 DEL41 DEL66 DEL39 DEL42 DEL43 DEL42 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL10 DEL8 DEL45 DEL32 DEL21 DEL42 DEL33 DEL27 DEL9 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL45 DEL42 DEL32 DEL14 DEL53 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL32 DEL38 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL9 DEL32 DEL21 DEL8 DEL25 DEL9 DEL41 DEL8 DEL25 DEL8 DEL12 DEL54 DEL42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL33 DEL27 DEL19 DEL8 DEL31