Revert 1161976 since the log message was incorrectly marked the issue as HDFS-349.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161991 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.hdfs.server.protocol.ReceivedDeletedBlockInfo;
-  long deleteReportInterval;
-  long lastDeletedReport = 0;
-    this.deleteReportInterval = 100 * heartBeatInterval;
-  // calls specific to BP
-  protected void notifyNamenodeDeletedBlock(ExtendedBlock block) {
-    BPOfferService bpos = blockPoolManager.get(block.getBlockPoolId());
-    if (bpos != null) {
-      bpos.notifyNamenodeDeletedBlock(block);
-    } else {
-      LOG.warn("Cannot find BPOfferService for reporting block deleted for bpid="
-          + block.getBlockPoolId());
-    }
-  }
-  
-    private final LinkedList<ReceivedDeletedBlockInfo> receivedAndDeletedBlockList 
-      = new LinkedList<ReceivedDeletedBlockInfo>();
-    private volatile int pendingReceivedRequests = 0;
+    private final LinkedList<Block> receivedBlockList = new LinkedList<Block>();
+    private final LinkedList<String> delHints = new LinkedList<String>();
-     * 
-    private void reportReceivedDeletedBlocks() throws IOException {
-
-      // check if there are newly received blocks
-      ReceivedDeletedBlockInfo[] receivedAndDeletedBlockArray = null;
-      int currentReceivedRequestsCounter;
-      synchronized (receivedAndDeletedBlockList) {
-        currentReceivedRequestsCounter = pendingReceivedRequests;
-        int numBlocks = receivedAndDeletedBlockList.size();
-        if (numBlocks > 0) {
-          //
-          // Send newly-received and deleted blockids to namenode
-          //
-          receivedAndDeletedBlockArray = receivedAndDeletedBlockList
-              .toArray(new ReceivedDeletedBlockInfo[numBlocks]);
+    private void reportReceivedBlocks() throws IOException {
+      //check if there are newly received blocks
+      Block [] blockArray=null;
+      String [] delHintArray=null;
+      synchronized(receivedBlockList) {
+        synchronized(delHints){
+          int numBlocks = receivedBlockList.size();
+          if (numBlocks > 0) {
+            if(numBlocks!=delHints.size()) {
+              LOG.warn("Panic: receiveBlockList and delHints are not of " +
+              "the same length" );
+            }
+            //
+            // Send newly-received blockids to namenode
+            //
+            blockArray = receivedBlockList.toArray(new Block[numBlocks]);
+            delHintArray = delHints.toArray(new String[numBlocks]);
+          }
-      if (receivedAndDeletedBlockArray != null) {
-        bpNamenode.blockReceivedAndDeleted(bpRegistration, blockPoolId,
-            receivedAndDeletedBlockArray);
-        synchronized (receivedAndDeletedBlockList) {
-          for (int i = 0; i < receivedAndDeletedBlockArray.length; i++) {
-            receivedAndDeletedBlockList.remove(receivedAndDeletedBlockArray[i]);
+      if (blockArray != null) {
+        if(delHintArray == null || delHintArray.length != blockArray.length ) {
+          LOG.warn("Panic: block array & delHintArray are not the same" );
+        }
+        bpNamenode.blockReceived(bpRegistration, blockPoolId, blockArray,
+            delHintArray);
+        synchronized(receivedBlockList) {
+          synchronized(delHints){
+            for(int i=0; i<blockArray.length; i++) {
+              receivedBlockList.remove(blockArray[i]);
+              delHints.remove(delHintArray[i]);
+            }
-          pendingReceivedRequests -= currentReceivedRequestsCounter;
-      if (block == null || delHint == null) {
-        throw new IllegalArgumentException(block == null ? "Block is null"
-            : "delHint is null");
+      if(block==null || delHint==null) {
+        throw new IllegalArgumentException(
+            block==null?"Block is null":"delHint is null");
-
+      
-        LOG.warn("BlockPool mismatch " + block.getBlockPoolId() + " vs. "
-            + blockPoolId);
+        LOG.warn("BlockPool mismatch " + block.getBlockPoolId() + 
+            " vs. " + blockPoolId);
-
-      synchronized (receivedAndDeletedBlockList) {
-        receivedAndDeletedBlockList.add(new ReceivedDeletedBlockInfo(block
-            .getLocalBlock(), delHint));
-        pendingReceivedRequests++;
-        receivedAndDeletedBlockList.notifyAll();
-      }
-    }
-
-    void notifyNamenodeDeletedBlock(ExtendedBlock block) {
-      if (block == null) {
-        throw new IllegalArgumentException("Block is null");
-      }
-
-      if (!block.getBlockPoolId().equals(blockPoolId)) {
-        LOG.warn("BlockPool mismatch " + block.getBlockPoolId() + " vs. "
-            + blockPoolId);
-        return;
-      }
-
-      synchronized (receivedAndDeletedBlockList) {
-        receivedAndDeletedBlockList.add(new ReceivedDeletedBlockInfo(block
-            .getLocalBlock(), ReceivedDeletedBlockInfo.TODELETE_HINT));
+      
+      synchronized (receivedBlockList) {
+        synchronized (delHints) {
+          receivedBlockList.add(block.getLocalBlock());
+          delHints.add(delHint);
+          receivedBlockList.notifyAll();
+        }
-      LOG.info("For namenode " + nnAddr + " using DELETEREPORT_INTERVAL of "
-          + deleteReportInterval + " msec " + " BLOCKREPORT_INTERVAL of "
+      LOG.info("For namenode " + nnAddr + " using BLOCKREPORT_INTERVAL of "
-          if (pendingReceivedRequests > 0
-              || (startTime - lastDeletedReport > deleteReportInterval)) {
-            reportReceivedDeletedBlocks();
-            lastDeletedReport = startTime;
-          }
+
+          reportReceivedBlocks();
-          synchronized(receivedAndDeletedBlockList) {
-            if (waitTime > 0 && pendingReceivedRequests == 0) {
+          synchronized(receivedBlockList) {
+            if (waitTime > 0 && receivedBlockList.size() == 0) {
-                receivedAndDeletedBlockList.wait(waitTime);
+                receivedBlockList.wait(waitTime);

MOV23 UPD83 INS74 UPD74 MOV74 UPD42 INS43 INS43 UPD42 INS14 UPD43 UPD42 INS42 INS42 INS74 UPD42 UPD74 MOV74 UPD5 INS5 UPD42 UPD42 INS8 INS43 INS43 UPD43 UPD43 UPD42 INS43 INS85 UPD42 INS33 INS51 UPD42 INS25 INS51 INS42 INS42 UPD42 UPD42 INS42 INS42 INS8 INS27 INS8 UPD42 INS8 INS42 MOV8 UPD45 MOV60 MOV25 INS27 INS27 INS21 UPD42 UPD42 INS42 INS51 MOV21 INS42 INS33 INS40 INS40 INS32 INS42 MOV8 INS32 UPD42 INS25 INS21 INS42 INS42 INS45 INS24 UPD42 MOV32 INS42 INS42 INS42 UPD42 UPD42 UPD42 INS27 INS8 INS7 MOV58 MOV27 MOV37 INS8 INS42 INS32 INS21 UPD42 INS42 INS32 UPD40 MOV21 MOV21 INS42 INS42 INS32 UPD42 INS42 INS42 INS3 INS32 INS32 INS42 INS42 INS27 UPD5 INS5 INS42 UPD42 INS42 INS42 INS2 INS42 INS42 INS45 INS45 UPD43 INS43 INS85 UPD42 INS42 INS42 UPD42 INS42 UPD42 DEL40 DEL26 DEL39 DEL42 DEL59 DEL23 DEL39 DEL42 DEL34 DEL59 DEL23 DEL52 DEL42 DEL22 DEL34 DEL42 DEL27 DEL7 DEL21 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL39 DEL34 DEL39 DEL42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL7 DEL8 DEL24 DEL42 DEL43 DEL42 DEL14 DEL42 DEL37 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL27 DEL32 DEL21 DEL41 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL40 DEL14 DEL32 DEL21 DEL8 DEL51 DEL8 DEL31 DEL45 DEL42 DEL45 DEL42 DEL34 DEL27 DEL42 DEL42 DEL27 DEL42 DEL27 DEL36 DEL27 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25 DEL42