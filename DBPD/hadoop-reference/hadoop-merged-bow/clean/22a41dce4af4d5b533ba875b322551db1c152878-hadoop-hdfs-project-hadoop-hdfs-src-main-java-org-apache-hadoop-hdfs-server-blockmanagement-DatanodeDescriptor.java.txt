HDFS-6997: add more tests for data migration and replicaion.

+
+import org.apache.hadoop.hdfs.StorageType;
+import org.apache.hadoop.hdfs.util.EnumCounters;
-  private int currApproxBlocksScheduled = 0;
-  private int prevApproxBlocksScheduled = 0;
+  private EnumCounters<StorageType> currApproxBlocksScheduled
+      = new EnumCounters<StorageType>(StorageType.class);
+  private EnumCounters<StorageType> prevApproxBlocksScheduled
+      = new EnumCounters<StorageType>(StorageType.class);
+   */
+  public long getRemaining(StorageType t) {
+    long remaining = 0;
+    for(DatanodeStorageInfo s : getStorageInfos()) {
+      if (s.getStorageType() == t) {
+        remaining += s.getRemaining();
+      }
+    }
+    return remaining;    
+  }
+
+  /**
+   * @return Approximate number of blocks currently scheduled to be written 
+   * to the given storage type of this datanode.
+   */
+  public int getBlocksScheduled(StorageType t) {
+    return (int)(currApproxBlocksScheduled.get(t)
+        + prevApproxBlocksScheduled.get(t));
+  }
+
+  /**
+   * @return Approximate number of blocks currently scheduled to be written 
-    return currApproxBlocksScheduled + prevApproxBlocksScheduled;
+    return (int)(currApproxBlocksScheduled.sum()
+        + prevApproxBlocksScheduled.sum());
-  void incrementBlocksScheduled() {
-    currApproxBlocksScheduled++;
+  void incrementBlocksScheduled(StorageType t) {
+    currApproxBlocksScheduled.add(t, 1);;
-  void decrementBlocksScheduled() {
-    if (prevApproxBlocksScheduled > 0) {
-      prevApproxBlocksScheduled--;
-    } else if (currApproxBlocksScheduled > 0) {
-      currApproxBlocksScheduled--;
+  void decrementBlocksScheduled(StorageType t) {
+    if (prevApproxBlocksScheduled.get(t) > 0) {
+      prevApproxBlocksScheduled.subtract(t, 1);
+    } else if (currApproxBlocksScheduled.get(t) > 0) {
+      currApproxBlocksScheduled.subtract(t, 1);
-      prevApproxBlocksScheduled = currApproxBlocksScheduled;
-      currApproxBlocksScheduled = 0;
+      prevApproxBlocksScheduled.set(currApproxBlocksScheduled);
+      currApproxBlocksScheduled.reset();

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS74 MOV83 INS74 INS59 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS44 MOV29 INS83 INS39 INS42 INS8 INS44 INS44 INS43 INS43 INS14 INS43 INS43 INS42 INS14 INS65 INS43 INS42 INS60 INS70 INS41 INS65 INS43 INS42 INS41 INS43 INS42 INS20 INS43 INS42 INS42 INS42 INS74 INS57 INS42 INS42 INS74 INS57 INS66 INS42 INS39 INS59 INS44 INS32 INS8 INS42 INS66 INS66 INS42 INS11 INS11 INS42 INS32 INS42 INS43 INS43 INS43 INS43 INS43 INS43 UPD42 MOV42 MOV34 INS43 INS42 INS42 INS25 INS39 INS36 INS39 INS36 INS42 INS42 INS42 INS34 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS8 INS27 INS27 INS42 INS42 INS42 INS32 INS32 INS32 INS32 INS32 INS42 INS21 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS32 INS42 INS42 DEL39 DEL34 DEL39 DEL59 DEL23 DEL42 DEL42 DEL27 DEL42 DEL37 DEL42 DEL42 DEL37 DEL42 DEL42 DEL37 DEL42 DEL42 DEL7 DEL42 DEL34 DEL7