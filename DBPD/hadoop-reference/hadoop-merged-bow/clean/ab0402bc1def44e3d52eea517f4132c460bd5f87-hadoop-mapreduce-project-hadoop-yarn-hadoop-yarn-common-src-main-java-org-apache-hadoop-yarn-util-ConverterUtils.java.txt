Merging trunk to HDFS-1623 branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1177130 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.IOException;
+  public static final String CONTAINER_PREFIX = "container";
+  public static final String APPLICATION_ATTEMPT_PREFIX = "appattempt";
-      RecordFactory recordFactory,
-      Iterator<String> it) {
-    ApplicationId appId =
-        recordFactory.newRecordInstance(ApplicationId.class);
+      Iterator<String> it) throws NumberFormatException {
+    ApplicationId appId = Records.newRecord(ApplicationId.class);
-    ApplicationAttemptId appAttemptId =
-        recordFactory.newRecordInstance(ApplicationAttemptId.class);
+    ApplicationAttemptId appAttemptId = Records
+        .newRecord(ApplicationAttemptId.class);
-  public static ContainerId toContainerId(RecordFactory recordFactory,
-      String containerIdStr) {
+  public static ContainerId toContainerId(String containerIdStr)
+      throws IOException {
-    it.next(); // prefix. TODO: Validate container prefix
-    ApplicationAttemptId appAttemptID = 
-        toApplicationAttemptId(recordFactory, it);
-    ContainerId containerId =
-        recordFactory.newRecordInstance(ContainerId.class);
-    containerId.setApplicationAttemptId(appAttemptID);
-    containerId.setId(Integer.parseInt(it.next()));
-    return containerId;
+    if (!it.next().equals(CONTAINER_PREFIX)) {
+      throw new IOException("Invalid ContainerId prefix: " + containerIdStr);
+    }
+    try {
+      ApplicationAttemptId appAttemptID = toApplicationAttemptId(it);
+      ContainerId containerId = Records.newRecord(ContainerId.class);
+      containerId.setApplicationAttemptId(appAttemptID);
+      containerId.setId(Integer.parseInt(it.next()));
+      return containerId;
+    } catch (NumberFormatException n) {
+      throw new IOException("Invalid ContainerId: " + containerIdStr, n);
+    }
+  }
+
+  public static ApplicationAttemptId toApplicationAttemptId(
+      String applicationAttmeptIdStr) throws IOException {
+    Iterator<String> it = _split(applicationAttmeptIdStr).iterator();
+    if (!it.next().equals(APPLICATION_ATTEMPT_PREFIX)) {
+      throw new IOException("Invalid AppAttemptId prefix: "
+          + applicationAttmeptIdStr);
+    }
+    try {
+      return toApplicationAttemptId(it);
+    } catch (NumberFormatException n) {
+      throw new IOException("Invalid AppAttemptId: "
+          + applicationAttmeptIdStr, n);
+    }

INS26 INS40 INS23 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS43 INS43 INS83 INS83 INS43 INS42 INS44 INS43 INS8 INS42 INS42 INS45 INS42 INS42 INS45 UPD42 MOV42 UPD42 MOV42 INS25 INS54 INS42 INS43 INS42 INS42 INS60 INS25 INS54 INS38 INS8 INS8 INS12 INS42 INS74 INS59 INS38 INS8 INS8 INS12 INS32 INS53 MOV60 MOV60 MOV21 MOV21 MOV41 INS44 INS8 INS43 INS43 INS42 INS32 INS32 INS53 INS41 INS44 INS8 UPD42 UPD42 UPD42 UPD42 MOV32 INS42 INS42 INS14 INS43 INS42 INS53 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS14 INS32 INS43 INS42 INS53 INS43 INS27 INS42 INS14 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS14 INS42 INS45 INS42 UPD42 UPD42 INS43 INS27 INS42 INS42 INS45 INS42 INS43 INS27 INS42 INS42 INS45 INS42 INS42 INS45 INS42 DEL43 DEL42 DEL44 DEL43 DEL42 DEL44 DEL42 DEL21