YARN-6654. RollingLevelDBTimelineStore backwards incompatible after fst upgrade. Contributed by Jonathan Eagles

+import java.util.LinkedHashMap;
+import org.nustaq.serialization.FSTClazzNameRegistry;
+  // Fall back to 2.24 parsing if 2.50 parsing fails
+  private static FSTConfiguration fstConf224 =
+      FSTConfiguration.createDefaultConfiguration();
+  // Static class code for 2.24
+  private static final int LINKED_HASH_MAP_224_CODE = 83;
+    fstConf224.setShareReferences(false);
+    // YARN-6654 unable to find class for code 83 (LinkedHashMap)
+    // The linked hash map was changed between 2.24 and 2.50 so that
+    // the static code for LinkedHashMap (83) was changed to a dynamic
+    // code.
+    FSTClazzNameRegistry registry = fstConf224.getClassRegistry();
+    registry.registerClass(
+        LinkedHashMap.class, LINKED_HASH_MAP_224_CODE, fstConf224);
-   }
+  }
-    public EntityDeletionThread(Configuration conf) {
+    EntityDeletionThread(Configuration conf) {
-          } catch (Exception e) {
-            LOG.warn("Error while decoding "
-                + entityId + ":otherInfo:" + keyStr, e);
+          } catch (Exception ignore) {
+            try {
+              // Fall back to 2.24 parser
+              o = fstConf224.asObject(iterator.peekNext().getValue());
+              entity.addOtherInfo(keyStr, o);
+            } catch (Exception e) {
+              LOG.warn("Error while decoding "
+                  + entityId + ":otherInfo:" + keyStr, e);
+            }
-      } catch (Exception e) {
-        LOG.warn("Error while decoding " + tstype, e);
+      } catch (Exception ignore) {
+        try {
+          // Fall back to 2.24 parser
+          o = fstConf224.asObject(value);
+        } catch (Exception e) {
+          LOG.warn("Error while decoding " + tstype, e);
+        }
-    } catch (Exception e) {
-      LOG.warn("Error while decoding " + name, e);
+    } catch (Exception ignore) {
+      try {
+        // Fall back to 2.24 parser
+        value = fstConf224.asObject(bytes);
+        entity.addPrimaryFilter(name, value);
+      } catch (Exception e) {
+        LOG.warn("Error while decoding " + name, e);
+      }

INS26 INS26 INS40 INS40 INS23 INS23 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS39 INS59 INS42 INS42 INS32 INS42 INS34 INS21 INS60 INS21 INS42 INS42 INS32 INS43 INS59 INS32 INS12 INS42 INS42 INS9 INS42 INS42 INS32 INS42 INS42 INS57 INS42 INS42 INS44 INS8 INS42 INS42 INS43 INS12 INS43 INS42 INS54 INS42 INS44 INS8 INS42 INS8 MOV12 INS43 INS42 INS54 INS21 INS21 INS42 INS8 MOV12 INS7 INS32 INS21 INS42 INS32 INS42 INS42 INS42 INS42 INS12 INS7 INS42 INS42 INS42 INS44 INS8 INS42 INS32 INS43 INS42 INS54 INS42 INS42 INS42 INS42 INS8 MOV12 INS21 INS21 INS7 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 DEL83