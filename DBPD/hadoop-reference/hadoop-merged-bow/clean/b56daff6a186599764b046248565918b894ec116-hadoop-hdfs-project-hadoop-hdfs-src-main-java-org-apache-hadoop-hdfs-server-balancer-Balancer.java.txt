HDFS-8818. Changes the global moveExecutor to per datanode executors and changes MAX_SIZE_TO_MOVE to be configurable.

+import org.apache.hadoop.HadoopIllegalArgumentException;
-  private static final long GB = 1L << 30; //1GB
-  private static final long MAX_SIZE_TO_MOVE = 10*GB;
-
+  private final long maxSizeToMove;
+  static long getLong(Configuration conf, String key, long defaultValue) {
+    final long v = conf.getLong(key, defaultValue);
+    LOG.info(key + " = " + v + " (default=" + defaultValue + ")");
+    if (v <= 0) {
+      throw new HadoopIllegalArgumentException(key + " = " + v  + " <= " + 0);
+    }
+    return v;
+  }
+
+  static int getInt(Configuration conf, String key, int defaultValue) {
+    final int v = conf.getInt(key, defaultValue);
+    LOG.info(key + " = " + v + " (default=" + defaultValue + ")");
+    if (v <= 0) {
+      throw new HadoopIllegalArgumentException(key + " = " + v  + " <= " + 0);
+    }
+    return v;
+  }
+
-    final long movedWinWidth = conf.getLong(
+    final long movedWinWidth = getLong(conf,
-    final int moverThreads = conf.getInt(
+    final int moverThreads = getInt(conf,
-    final int dispatcherThreads = conf.getInt(
+    final int dispatcherThreads = getInt(conf,
-    final int maxConcurrentMovesPerNode = conf.getInt(
+    final int maxConcurrentMovesPerNode = getInt(conf,
+
+    this.maxSizeToMove = getLong(conf,
+        DFSConfigKeys.DFS_BALANCER_MAX_SIZE_TO_MOVE_KEY,
+        DFSConfigKeys.DFS_BALANCER_MAX_SIZE_TO_MOVE_DEFAULT);
-            getRemaining(r, t), utilizationDiff, threshold);
+            getRemaining(r, t), utilizationDiff, threshold, maxSizeToMove);
-      final double utilizationDiff, final double threshold) {
+      final double utilizationDiff, final double threshold, final long max) {
-    return Math.min(MAX_SIZE_TO_MOVE, maxSizeToMove);
+    return Math.min(max, maxSizeToMove);
+    LOG.info("chooseStorageGroups for " + matcher + ": overUtilized => underUtilized");
+    LOG.info("chooseStorageGroups for " + matcher + ": overUtilized => belowAvgUtilized");
+    LOG.info("chooseStorageGroups for " + matcher + ": underUtilized => aboveAvgUtilized");

INS26 INS40 INS23 INS31 INS31 MOV83 INS83 INS39 INS59 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS44 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS60 INS21 INS25 INS41 INS43 INS42 INS43 INS42 INS39 INS42 INS60 INS21 INS25 INS41 INS21 INS83 INS39 INS42 INS21 INS21 INS21 INS42 INS42 INS83 INS39 INS59 INS32 INS27 INS8 INS42 INS42 INS42 INS83 INS39 INS59 INS32 INS27 INS8 INS42 INS7 INS32 INS32 INS32 UPD42 MOV42 INS32 INS42 INS42 INS27 INS42 UPD34 MOV34 INS53 UPD42 MOV42 INS32 INS42 INS42 INS27 INS42 UPD34 MOV34 INS53 INS22 INS32 UPD42 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS14 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS14 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS40 INS40 INS45 INS42 INS45 INS45 INS42 INS45 INS45 INS42 INS45 INS43 INS27 INS43 INS27 INS42 INS42 INS45 INS42 INS45 INS34 INS42 INS42 INS45 INS42 INS45 INS34 INS42 DEL83 DEL83 DEL39 DEL34 DEL27 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL27 DEL59 DEL23 DEL42 DEL42 DEL42 DEL42