YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He

+import org.apache.slider.api.resource.Component;
-import org.apache.slider.providers.ProviderRole;
-import org.apache.slider.providers.ProviderService;
-import org.apache.slider.providers.SliderProviderFactory;
-import org.apache.slider.server.appmaster.actions.ActionStartContainer;
+import org.apache.hadoop.yarn.service.provider.ProviderService;
+import org.apache.hadoop.yarn.service.provider.ProviderFactory;
+import org.apache.hadoop.yarn.service.compinstance.ComponentInstance;
-import org.apache.slider.server.appmaster.state.RoleInstance;
-import org.apache.slider.server.appmaster.state.RoleStatus;
+import java.util.HashMap;
-import java.util.concurrent.TimeUnit;
-import static org.apache.slider.common.SliderKeys.KEY_CONTAINER_LAUNCH_DELAY;
+import static org.apache.hadoop.yarn.service.conf.SliderKeys.KEY_CONTAINER_LAUNCH_DELAY;
-  private final QueueAccess actionQueue;
+  private  QueueAccess actionQueue;
-  private final SliderFileSystem fs;
+  private  SliderFileSystem fs;
-  private Map<String, String> envVars;
+  private Map<String, String> envVars = new HashMap<>();
+  public RoleLaunchService(SliderFileSystem fs) {
+    super(ROLE_LAUNCH_SERVICE);
+    this.fs = fs;
+  }
+
+  }
+
+  public void launchComponent(Application application,
+      ComponentInstance instance, Container container) {
-        new RoleLaunchService.RoleLauncher(assignment, application,
-            credentials);
+        new RoleLaunchService.RoleLauncher(application, instance,
+            container);
-
-    private final ContainerAssignment assignment;
-    public final ProviderRole role;
-    private final Credentials credentials;
+    public ComponentInstance instance;
-    public RoleLauncher(ContainerAssignment assignment,
+    public RoleLauncher(
-        Credentials credentials) {
-      this.assignment = assignment;
-      this.credentials = credentials;
-      this.container = assignment.container;
-      RoleStatus roleStatus = assignment.role;
-      ProviderRole providerRole = roleStatus.getProviderRole();
-      this.role = providerRole;
+        ComponentInstance instance, Container container) {
+      this.container = container;
-
-    }
-
-    @Override
-    public String toString() {
-      return "RoleLauncher{" +
-             "container=" + container.getId() +
-             ", containerRole='" + role.name + '\'' +
-             '}';
+      this.instance = instance;
-            new ContainerLauncher(getConfig(), fs, container, credentials);
-        containerLauncher.setupUGI();
+            new ContainerLauncher(null, fs, container, null);
-        RoleInstance failedInstance = role.failedInstances.poll();
-        RoleInstance instance;
-        if (failedInstance != null) {
-          instance = new RoleInstance(container, failedInstance);
-        } else {
-          instance = new RoleInstance(container, role);
-        }
-        String[] envDescription = containerLauncher.dumpEnvToString();
-        String commandsAsString = containerLauncher.getCommandsAsString();
-        log.info("Launching container {} for component instance = {}",
-            container.getId(), instance.getCompInstanceName());
-        log.info("Starting container with command: {}", commandsAsString);
-        instance.command = commandsAsString;
-        instance.role = role.name;
-        instance.roleId = role.id;
-        instance.environment = envDescription;
-
-        ProviderService provider = SliderProviderFactory.getProviderService(
-            role.component.getArtifact());
+        Component compSpec = instance.getCompSpec();
+        ProviderService provider = ProviderFactory.getProviderService(
+            compSpec.getArtifact());
-            container, role, fs, instance);
+            instance, fs);
-        long delay = role.component.getConfiguration()
-            .getPropertyLong(KEY_CONTAINER_LAUNCH_DELAY, 0);
+        long delay = compSpec.getConfiguration()
+                .getPropertyLong(KEY_CONTAINER_LAUNCH_DELAY, 0);
-        log.info("Container launch delay for {} set to {} seconds", role.name,
-            delay);
-        actionQueue.schedule(
-            new ActionStartContainer("starting " + role.name, container,
-                containerLauncher.completeContainerLaunch(), instance, delay,
-                TimeUnit.SECONDS));
+        if (delay > 0) {
+          Thread.sleep(delay * 1000);
+        }
+        instance.getComponent().getScheduler().getNmClient()
+            .startContainerAsync(container,
+                containerLauncher.completeContainerLaunch());
-        log.error("Exception thrown while trying to start " + role.name
+        log.error("Exception thrown while trying to start " + instance
+            .getCompInstanceName()

MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 INS31 INS31 INS55 INS83 INS42 INS44 INS8 INS8 MOV83 INS39 UPD42 MOV42 MOV44 MOV44 INS44 MOV8 MOV29 INS83 INS42 MOV43 MOV23 MOV23 INS23 INS31 MOV31 INS14 INS43 INS42 INS46 INS21 UPD43 UPD42 UPD43 UPD42 INS43 INS42 INS83 INS43 MOV59 INS83 INS42 MOV44 INS44 INS44 INS8 INS74 UPD42 MOV42 INS42 INS7 UPD42 UPD42 INS42 MOV43 UPD42 MOV42 INS43 INS42 INS43 INS42 MOV21 MOV21 MOV21 INS43 INS22 INS42 UPD42 MOV42 INS42 INS42 INS52 INS42 MOV43 UPD42 UPD42 UPD42 INS42 UPD42 INS25 UPD42 MOV43 UPD43 INS27 INS8 MOV21 UPD42 UPD42 UPD42 INS42 INS34 MOV21 INS32 INS42 INS42 MOV32 MOV43 INS33 INS33 UPD42 UPD42 UPD42 INS32 INS42 UPD42 INS27 INS42 INS42 INS42 UPD42 UPD42 INS27 INS32 INS42 INS45 MOV32 INS45 MOV32 INS45 MOV32 INS42 INS34 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL40 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL40 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL7 DEL21 DEL8 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL40 DEL42 DEL7 DEL21 DEL40 DEL40 DEL7 DEL21 DEL40 DEL40 DEL7 DEL21 DEL40 DEL42 DEL7 DEL21 DEL40 DEL42 DEL42 DEL40 DEL45 DEL40 DEL42 DEL42 DEL43 DEL45 DEL40 DEL27 DEL42 DEL42 DEL42 DEL40 DEL14 DEL45 DEL42 DEL42 DEL45 DEL40 DEL45 DEL42 DEL42 DEL32 DEL45 DEL27 DEL42 DEL32 DEL21 DEL83 DEL42 DEL83 DEL83 DEL43 DEL42 DEL59 DEL23 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL43 DEL42 DEL40 DEL59 DEL60 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL8 DEL31 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL45 DEL45 DEL27 DEL42 DEL42 DEL32 DEL45 DEL40 DEL13 DEL13 DEL27 DEL41 DEL8 DEL31 DEL55