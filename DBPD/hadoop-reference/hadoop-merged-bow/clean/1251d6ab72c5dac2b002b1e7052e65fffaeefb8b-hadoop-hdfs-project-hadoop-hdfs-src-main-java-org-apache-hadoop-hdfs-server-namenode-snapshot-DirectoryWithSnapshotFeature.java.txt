Merge trunk r1595301 to branch

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1595303 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.DataOutput;
+import java.io.IOException;
+import org.apache.hadoop.hdfs.server.namenode.FSImageSerialization;
+import org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotFSImageFormat.ReferenceMap;
+    /** Serialize {@link #created} */
+    private void writeCreated(DataOutput out) throws IOException {
+      final List<INode> created = getList(ListType.CREATED);
+      out.writeInt(created.size());
+      for (INode node : created) {
+        // For INode in created list, we only need to record its local name
+        byte[] name = node.getLocalNameBytes();
+        out.writeShort(name.length);
+        out.write(name);
+      }
+    }
+
+    /** Serialize {@link #deleted} */
+    private void writeDeleted(DataOutput out,
+        ReferenceMap referenceMap) throws IOException {
+      final List<INode> deleted = getList(ListType.DELETED);
+      out.writeInt(deleted.size());
+      for (INode node : deleted) {
+        FSImageSerialization.saveINode2Image(node, out, true, referenceMap);
+      }
+    }
+
+    /** Serialize to out */
+    private void write(DataOutput out, ReferenceMap referenceMap
+        ) throws IOException {
+      writeCreated(out);
+      writeDeleted(out, referenceMap);
+    }
+
+    void write(DataOutput out, ReferenceMap referenceMap) throws IOException {
+      writeSnapshot(out);
+      out.writeInt(childrenSize);
+
+      // Write snapshotINode
+      out.writeBoolean(isSnapshotRoot);
+      if (!isSnapshotRoot) {
+        if (snapshotINode != null) {
+          out.writeBoolean(true);
+          FSImageSerialization.writeINodeDirectoryAttributes(snapshotINode, out);
+        } else {
+          out.writeBoolean(false);
+        }
+      }
+      // Write diff. Node need to write poseriorDiff, since diffs is a list.
+      diff.write(out, referenceMap);
+    }
+
+    @Override

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS39 INS42 INS44 INS44 INS43 INS8 INS65 INS43 INS42 INS42 INS60 INS21 INS70 INS65 INS43 INS42 INS43 INS42 INS42 INS60 INS21 INS70 INS65 INS43 INS42 INS43 INS42 INS42 INS21 INS21 INS42 INS43 INS42 INS43 INS42 INS42 INS21 INS21 INS21 INS25 INS21 INS66 INS65 INS66 INS42 INS83 INS74 INS59 INS32 INS44 INS42 INS8 INS66 INS65 INS66 INS42 INS42 INS83 INS74 INS59 INS32 INS44 INS42 INS8 INS66 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 INS32 INS38 INS8 INS32 INS67 INS43 INS43 INS42 INS32 INS42 INS42 INS32 INS43 INS42 INS60 INS21 INS21 INS67 INS43 INS43 INS42 INS32 INS42 INS42 INS32 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS5 INS59 INS32 INS32 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS27 INS8 INS8 INS39 INS85 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS33 INS21 INS21 INS21 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS9