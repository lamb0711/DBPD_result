HDDS-1262. In OM HA OpenKey call Should happen only leader OM. (#626)


-import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.KeyLocation;
+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos
+    .KeyArgs;
+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos
+    .KeyInfo;
+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos
+    .KeyLocation;
+  public void applyOpenKey(KeyArgs omKeyArgs, KeyInfo keyInfo, long clientID)
+      throws IOException {
+    // Do we need to check again Acl's for apply OpenKey call?
+    if(isAclEnabled) {
+      checkAcls(ResourceType.KEY, StoreType.OZONE, ACLType.READ,
+          omKeyArgs.getVolumeName(), omKeyArgs.getBucketName(),
+          omKeyArgs.getKeyName());
+    }
+    boolean auditSuccess = true;
+    try {
+      keyManager.applyOpenKey(omKeyArgs, keyInfo, clientID);
+    } catch (Exception ex) {
+      metrics.incNumKeyAllocateFails();
+      auditSuccess = false;
+      AUDIT.logWriteFailure(buildAuditMessageForFailure(
+          OMAction.APPLY_ALLOCATE_KEY,
+          (omKeyArgs == null) ? null : toAuditMap(omKeyArgs), ex));
+      throw ex;
+    } finally {
+      if(auditSuccess){
+        AUDIT.logWriteSuccess(buildAuditMessageForSuccess(
+            OMAction.APPLY_ALLOCATE_KEY, (omKeyArgs == null) ? null :
+                toAuditMap(omKeyArgs)));
+      }
+    }
+  }
+
+  private Map<String, String> toAuditMap(KeyArgs omKeyArgs) {
+    Map<String, String> auditMap = new LinkedHashMap<>();
+    auditMap.put(OzoneConsts.VOLUME, omKeyArgs.getVolumeName());
+    auditMap.put(OzoneConsts.BUCKET, omKeyArgs.getBucketName());
+    auditMap.put(OzoneConsts.KEY, omKeyArgs.getKeyName());
+    auditMap.put(OzoneConsts.DATA_SIZE,
+        String.valueOf(omKeyArgs.getDataSize()));
+    auditMap.put(OzoneConsts.REPLICATION_TYPE,
+        omKeyArgs.hasType() ? omKeyArgs.getType().name() : null);
+    auditMap.put(OzoneConsts.REPLICATION_FACTOR,
+        omKeyArgs.hasFactor() ? omKeyArgs.getFactor().name() : null);
+    auditMap.put(OzoneConsts.KEY_LOCATION_INFO,
+        (omKeyArgs.getKeyLocationsList() != null) ?
+            omKeyArgs.getKeyLocationsList().toString() : null);
+    return auditMap;
+  }
+
+  @Override
+
+  @Override
+  public OmMultipartInfo applyInitiateMultipartUpload(OmKeyArgs keyArgs,
+      String multipartUploadID) throws IOException {
+    OmMultipartInfo multipartInfo;
+    metrics.incNumInitiateMultipartUploads();
+    try {
+      multipartInfo = keyManager.applyInitiateMultipartUpload(keyArgs,
+          multipartUploadID);
+      AUDIT.logWriteSuccess(buildAuditMessageForSuccess(
+          OMAction.INITIATE_MULTIPART_UPLOAD, (keyArgs == null) ? null :
+              keyArgs.toAuditMap()));
+    } catch (IOException ex) {
+      AUDIT.logWriteFailure(buildAuditMessageForFailure(
+          OMAction.INITIATE_MULTIPART_UPLOAD,
+          (keyArgs == null) ? null : keyArgs.toAuditMap(), ex));
+      metrics.incNumInitiateMultipartUploadFails();
+      throw ex;
+    }
+    return multipartInfo;
+  }
+

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS83 INS74 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS42 INS25 INS60 INS54 INS43 INS43 INS43 INS43 INS42 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS41 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS21 INS54 INS41 INS42 INS42 INS42 INS8 INS39 INS59 INS8 INS12 INS8 INS42 INS42 INS42 INS42 INS74 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS43 INS59 INS32 INS8 INS12 INS42 INS21 INS42 INS9 INS21 INS44 INS8 INS25 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS40 INS16 INS42 INS42 INS40 INS16 INS42 INS42 INS40 INS16 INS42 INS42 INS42 INS42 INS21 INS21 INS44 INS8 INS32 INS32 INS43 INS42 INS21 INS21 INS21 INS53 INS42 INS8 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS33 INS32 INS32 INS33 INS36 INS32 INS33 INS7 INS32 INS43 INS42 INS21 INS21 INS53 INS42 INS40 INS40 INS40 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS7 INS32 INS42 INS21 INS43 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS27 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS16 INS42 INS42 INS32 INS42 INS42 INS42 INS40 INS16 INS42 INS42 INS42 INS32 INS42 INS42 INS36 INS33 INS32 INS42 INS40 INS16 INS42 INS36 INS33 INS32 INS42 INS40 INS16 INS27 INS42 INS42 INS36 INS33 INS32 INS27 INS42 INS42 INS36 INS33 INS32 INS42 INS33 INS27 INS42 INS42 INS42 INS33 INS27 INS42 INS42 INS42 INS33 INS42 INS33