YARN-7248. NM returns new SCHEDULED container status to older clients. Contributed by Arun Suresh

+import org.apache.hadoop.yarn.api.records.ContainerSubState;
-      return org.apache.hadoop.yarn.api.records.ContainerState.SCHEDULED;
+  // NOTE: Please update the doc in the ContainerSubState class as
+  //       well as the yarn_protos.proto file if this mapping is ever modified.
+  private ContainerSubState getContainerSubState() {
+    switch (stateMachine.getCurrentState()) {
+    case NEW:
+    case LOCALIZING:
+    case SCHEDULED:
+    case REINITIALIZING_AWAITING_KILL:
+    case RELAUNCHING:
+      return ContainerSubState.SCHEDULED;
+    case REINITIALIZING:
+    case PAUSING:
+    case KILLING:
+    case RUNNING:
+      return ContainerSubState.RUNNING;
+    case PAUSED:
+    case RESUMING:
+      return ContainerSubState.PAUSED;
+    case LOCALIZATION_FAILED:
+    case EXITED_WITH_SUCCESS:
+    case EXITED_WITH_FAILURE:
+    case CONTAINER_CLEANEDUP_AFTER_KILL:
+    case CONTAINER_RESOURCES_CLEANINGUP:
+      return ContainerSubState.COMPLETING;
+    case DONE:
+    default:
+      return ContainerSubState.DONE;
+    }
+  }
+
+      status.setContainerSubState(getContainerSubState());

INS26 INS40 INS31 INS83 INS43 INS42 INS8 INS42 INS50 INS32 INS49 INS49 INS49 INS49 INS49 INS41 INS49 INS49 INS49 INS49 INS41 INS49 INS49 INS41 INS49 INS49 INS49 INS49 INS49 INS41 INS49 INS49 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS40 INS21 INS32 INS42 INS42 INS32 INS42 DEL40 DEL41