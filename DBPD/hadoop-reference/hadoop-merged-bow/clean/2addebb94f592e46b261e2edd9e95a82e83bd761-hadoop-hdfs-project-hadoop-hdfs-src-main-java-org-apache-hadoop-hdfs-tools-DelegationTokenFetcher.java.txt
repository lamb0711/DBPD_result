HDFS-13951. HDFS DelegationTokenFetcher can't print non-HDFS tokens in a tokenfile.
Contributed by Steve Loughran.

-import java.io.ByteArrayInputStream;
-import java.io.DataInputStream;
-import org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager;
+import org.apache.hadoop.security.token.TokenIdentifier;
-   * Command-line interface
+   * Command-line interface.
+   * @param args argument list.
+   * @throws Exception on a failure.
+   * @throws org.apache.hadoop.util.ExitUtil.ExitException if the command
+   * failed and exiting was disabled.
-    final Configuration conf = new HdfsConfiguration();
+    main(new HdfsConfiguration(), args);
+  }
+
+  /**
+   * Command line interface with a specific configuration.
+   * Errors in this operation will call {@link ExitUtil#terminate(int)} to
+   * exit the process.
+   * @param conf configuration to create filesystems with.
+   * @param args argument list.
+   * @throws Exception on a failure.
+   * @throws org.apache.hadoop.util.ExitUtil.ExitException if the command
+   * failed and exiting was disabled.
+   */
+  @VisibleForTesting
+  public static void main(Configuration conf, final String[] args)
+      throws Exception {
-      System.exit(0);
+      return;
+      return;
+      return;
-  static String printTokensToString(
+  public static String printTokensToString(
-    DelegationTokenIdentifier id = new DelegationTokenSecretManager(0, 0, 0,
-            0, null).createIdentifier();
-      DataInputStream in = new DataInputStream(new ByteArrayInputStream(token
-              .getIdentifier()));
-      id.readFields(in);
-      String idStr = (verbose? id.toString() : id.toStringStable());
+      TokenIdentifier tokenId = token.decodeIdentifier();
+
+      String idStr;
+      if (tokenId instanceof DelegationTokenIdentifier) {
+        DelegationTokenIdentifier id = (DelegationTokenIdentifier) tokenId;
+        idStr = (verbose? id.toString() : id.toStringStable());
+      } else {
+        idStr = tokenId.toString();
+      }
+  /**
+   * Print usage to the error stream, then
+   * call {@link ExitUtil#terminate(int)} with status code 1.
+   * This will exit or raise an exception if that's been disabled.
+   * @param err stream for the messages.
+   */
-    err.println("  --webservice <url>  Url to contact NN on (starts with " +
-            "http:// or https://)");
+    err.println("  --webservice <url>  URL to contact NN on (starts with " +
+            "http:// or https://), or other filesystem URL");

MOV26 UPD40 INS31 INS29 INS83 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS44 INS83 INS29 INS65 INS65 INS65 INS65 INS83 INS5 INS42 INS42 INS21 INS65 INS65 INS65 INS65 INS42 MOV43 INS42 INS65 INS65 INS66 INS42 INS66 INS42 INS66 INS40 INS66 INS66 INS43 INS85 INS32 UPD66 INS66 INS65 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS40 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS42 INS66 INS42 INS42 MOV14 INS42 INS68 INS41 INS41 INS41 INS60 INS25 INS68 INS42 INS42 INS69 UPD43 MOV43 INS59 INS62 INS8 INS8 INS42 INS42 INS69 UPD45 UPD45 INS39 UPD42 UPD42 INS32 INS42 INS42 INS43 MOV60 INS21 INS21 INS39 MOV42 UPD42 MOV42 INS42 MOV43 INS7 INS7 UPD42 INS11 INS42 MOV36 INS42 INS32 INS43 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL59 DEL60 DEL42 DEL42 DEL34 DEL32 DEL21 DEL42 DEL42 DEL43 DEL34 DEL34 DEL34 DEL34 DEL33 DEL14 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL32 DEL14 DEL14 DEL42 DEL42 DEL42 DEL32 DEL21