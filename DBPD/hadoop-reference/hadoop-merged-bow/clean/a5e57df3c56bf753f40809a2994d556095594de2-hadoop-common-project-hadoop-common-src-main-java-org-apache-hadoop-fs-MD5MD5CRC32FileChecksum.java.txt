HADOOP-14225. Remove xmlenc dependency

-import org.xml.sax.Attributes;
-import org.xml.sax.SAXException;
-import org.znerd.xmlenc.XMLOutputter;
-
-import org.apache.hadoop.fs.MD5MD5CRC32CastagnoliFileChecksum;
-import org.apache.hadoop.fs.MD5MD5CRC32GzipFileChecksum;
-  /** Write that object to xml output. */
-  public static void write(XMLOutputter xml, MD5MD5CRC32FileChecksum that
-      ) throws IOException {
-    xml.startTag(MD5MD5CRC32FileChecksum.class.getName());
-    if (that != null) {
-      xml.attribute("bytesPerCRC", "" + that.bytesPerCRC);
-      xml.attribute("crcPerBlock", "" + that.crcPerBlock);
-      xml.attribute("crcType", ""+ that.getCrcType().name());
-      xml.attribute("md5", "" + that.md5);
-    }
-    xml.endTag();
-  }
-
-  /** Return the object represented in the attributes. */
-  public static MD5MD5CRC32FileChecksum valueOf(Attributes attrs
-      ) throws SAXException {
-    final String bytesPerCRC = attrs.getValue("bytesPerCRC");
-    final String crcPerBlock = attrs.getValue("crcPerBlock");
-    final String md5 = attrs.getValue("md5");
-    String crcType = attrs.getValue("crcType");
-    DataChecksum.Type finalCrcType;
-    if (bytesPerCRC == null || crcPerBlock == null || md5 == null) {
-      return null;
-    }
-
-    try {
-      // old versions don't support crcType.
-      if (crcType == null || crcType.equals("")) {
-        finalCrcType = DataChecksum.Type.CRC32;
-      } else {
-        finalCrcType = DataChecksum.Type.valueOf(crcType);
-      }
-
-      switch (finalCrcType) {
-        case CRC32:
-          return new MD5MD5CRC32GzipFileChecksum(
-              Integer.parseInt(bytesPerCRC),
-              Integer.parseInt(crcPerBlock),
-              new MD5Hash(md5));
-        case CRC32C:
-          return new MD5MD5CRC32CastagnoliFileChecksum(
-              Integer.parseInt(bytesPerCRC),
-              Integer.parseInt(crcPerBlock),
-              new MD5Hash(md5));
-        default:
-          // we should never get here since finalCrcType will
-          // hold a valid type or we should have got an exception.
-          return null;
-      }
-    } catch (Exception e) {
-      throw new SAXException("Invalid attributes: bytesPerCRC=" + bytesPerCRC
-          + ", crcPerBlock=" + crcPerBlock + ", crcType=" + crcType
-          + ", md5=" + md5, e);
-    }
-  }
-

DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL43 DEL57 DEL42 DEL32 DEL32 DEL21 DEL42 DEL33 DEL27 DEL42 DEL42 DEL45 DEL45 DEL40 DEL27 DEL32 DEL21 DEL42 DEL42 DEL45 DEL45 DEL40 DEL27 DEL32 DEL21 DEL42 DEL42 DEL45 DEL45 DEL42 DEL42 DEL32 DEL42 DEL32 DEL27 DEL32 DEL21 DEL42 DEL42 DEL45 DEL45 DEL40 DEL27 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL45 DEL32 DEL59 DEL60 DEL40 DEL43 DEL42 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL33 DEL27 DEL27 DEL42 DEL33 DEL27 DEL27 DEL33 DEL41 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL45 DEL32 DEL27 DEL42 DEL40 DEL7 DEL21 DEL8 DEL42 DEL40 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL49 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL14 DEL14 DEL41 DEL42 DEL49 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL14 DEL14 DEL41 DEL49 DEL33 DEL41 DEL50 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL45 DEL42 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL54 DEL8 DEL31