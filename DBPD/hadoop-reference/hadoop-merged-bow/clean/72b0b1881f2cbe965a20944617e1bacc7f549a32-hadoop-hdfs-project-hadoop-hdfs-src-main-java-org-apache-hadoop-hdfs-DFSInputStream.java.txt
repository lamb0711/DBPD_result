Merge trunk to HDFS-4685.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1552467 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.datanode.BlockMetadataHeader;
-        dfsClient.getDefaultReadCachingStrategy().duplicate();
+        dfsClient.getDefaultReadCachingStrategy();
-    int retriesForLastBlockLength = 3;
+    int retriesForLastBlockLength = dfsClient.getConf().retryTimesForGetLastBlockLength;
-        waitFor(4000);
+        waitFor(dfsClient.getConf().retryIntervalForGetLastBlockLength);
-            buffersize, verifyChecksum, dfsClient.clientName);
+            buffersize, verifyChecksum, dfsClient.clientName, cachingStrategy);
-      block = getBlockAt(block.getStartOffset(), false);
+      CachingStrategy curCachingStrategy;
+      synchronized (this) {
+        block = getBlockAt(block.getStartOffset(), false);
+        curCachingStrategy = cachingStrategy;
+      }
-            dfsClient.clientName);
+            dfsClient.clientName, curCachingStrategy);
+   * @param CachingStrategy  caching strategy to use
-                                       String clientName)
+                                       String clientName,
+                                       CachingStrategy curCachingStrategy)
-      return new BlockReaderLocal(dfsClient.getConf(), file,
-        block, startOffset, len, fis[0], fis[1], chosenNode, verifyChecksum,
-        fileInputStreamCache);
+      return new BlockReaderLocal.Builder(dfsClient.getConf()).
+          setFilename(file).
+          setBlock(block).
+          setStartOffset(startOffset).
+          setStreams(fis).
+          setDatanodeID(chosenNode).
+          setVerifyChecksum(verifyChecksum).
+          setBlockMetadataHeader(BlockMetadataHeader.
+              preadHeader(fis[1].getChannel())).
+          setFileInputStreamCache(fileInputStreamCache).
+          setCachingStrategy(curCachingStrategy).
+          build();
-            allowShortCircuitLocalReads, cachingStrategy);
+            allowShortCircuitLocalReads, curCachingStrategy);
-            allowShortCircuitLocalReads, cachingStrategy);
+            allowShortCircuitLocalReads, curCachingStrategy);
-            cachingStrategy);
+            curCachingStrategy);
-        cachingStrategy);
+        curCachingStrategy);
-    this.cachingStrategy.setReadahead(readahead);
+    this.cachingStrategy =
+        new CachingStrategy.Builder(this.cachingStrategy).
+            setReadahead(readahead).build();
-    this.cachingStrategy.setDropBehind(dropBehind);
+    this.cachingStrategy =
+        new CachingStrategy.Builder(this.cachingStrategy).
+            setDropBehind(dropBehind).build();
-    boolean canSkipChecksums = opts.contains(ReadOption.SKIP_CHECKSUMS);
-    if (canSkipChecksums) {
-      ByteBuffer buffer = tryReadZeroCopy(maxLength);
-      if (buffer != null) {
-        return buffer;
-      }
+    ByteBuffer buffer = tryReadZeroCopy(maxLength, opts);
+    if (buffer != null) {
+      return buffer;
-    ByteBuffer buffer = ByteBufferUtil.
-        fallbackRead(this, bufferPool, maxLength);
+    buffer = ByteBufferUtil.fallbackRead(this, bufferPool, maxLength);
-  private synchronized ByteBuffer tryReadZeroCopy(int maxLength)
-      throws IOException {
+  private synchronized ByteBuffer tryReadZeroCopy(int maxLength,
+      EnumSet<ReadOption> opts) throws IOException {
-        blockReader.getClientMmap(currentLocatedBlock,
-            dfsClient.getMmapManager());
+        blockReader.getClientMmap(opts, dfsClient.getMmapManager());

INS26 INS40 INS44 INS44 INS65 INS43 INS42 MOV21 MOV21 MOV60 MOV25 INS21 INS74 INS42 INS42 INS66 INS42 INS7 INS7 MOV43 INS7 INS43 INS43 MOV32 INS22 INS60 INS51 MOV32 UPD42 MOV22 INS32 MOV22 INS32 INS42 MOV32 INS42 INS42 INS32 INS42 INS43 INS59 INS52 INS8 INS32 INS32 INS42 INS32 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 MOV21 INS21 INS32 INS42 MOV60 MOV41 MOV60 MOV41 INS14 MOV42 MOV42 INS14 MOV42 MOV42 INS7 INS32 INS42 INS42 INS43 INS22 INS43 INS22 INS22 INS42 INS42 INS32 INS42 INS42 INS40 INS52 INS42 INS40 INS52 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS32 UPD42 UPD42 MOV32 UPD42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 MOV2 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 UPD43 MOV43 MOV32 INS40 DEL42 DEL32 DEL34 DEL34 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL34 DEL2 DEL42 DEL42 DEL42 DEL14 DEL32 DEL32 DEL42 DEL43 DEL39 DEL42 DEL42 DEL42 DEL40 DEL32 DEL59 DEL60 DEL42 DEL8 DEL25 DEL42 DEL59 DEL60