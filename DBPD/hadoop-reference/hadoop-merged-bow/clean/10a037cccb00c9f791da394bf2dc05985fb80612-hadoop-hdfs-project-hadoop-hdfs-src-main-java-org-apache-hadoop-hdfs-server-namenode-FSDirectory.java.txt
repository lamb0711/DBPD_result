HDFS-6266. Identify full path for a given INode. Contributed by Jing Zhao.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1589920 13f79535-47bb-0310-9956-ffa450edef68

-   * patch components will be {root, A, B, C}
+   * patch components will be {root, A, B, C}.
+   * Note that this method cannot handle scenarios where the inode is in a
+   * snapshot.
-  
+
+  /**
+   * The same functionality with {@link #getPathComponents(INode)}, but can
+   * handle snapshots.
+   */
+  public static byte[][] getPathComponentsWithSnapshot(INode inode) {
+    List<byte[]> components = new ArrayList<byte[]>();
+    boolean inSnapshot = false;
+    int snapshotId = Snapshot.CURRENT_STATE_ID;
+    do {
+      if (inode instanceof INodeReference.WithCount) {
+        // identify the corresponding WithName or DstReference node
+        inode = ((WithCount) inode).getParentRef(snapshotId);
+      } else { // normal INode and WithName/DstReference
+        if (inode instanceof INodeDirectory
+            && inode.asDirectory().isSnapshottable() && inSnapshot
+            && snapshotId != Snapshot.CURRENT_STATE_ID) {
+          INodeDirectorySnapshottable sdir = (INodeDirectorySnapshottable) inode
+              .asDirectory();
+          Snapshot snapshot = sdir.getSnapshotById(snapshotId);
+          if (snapshot != null) {
+            components.add(0, snapshot.getRoot().getLocalNameBytes());
+            components.add(0, HdfsConstants.DOT_SNAPSHOT_DIR_BYTES);
+            // the snapshot has been found, thus no need to check snapshottable
+            // directory afterwards
+            inSnapshot = false;
+          }
+        }
+        INode parent = inode.getParentReference() != null ? inode
+            .getParentReference() : inode.getParent();
+        if (parent != null && parent instanceof INodeDirectory) {
+          int sid = parent.asDirectory().searchChild(inode);
+          Preconditions.checkState(sid != Snapshot.NO_SNAPSHOT_ID);
+          if (sid != Snapshot.CURRENT_STATE_ID
+              && snapshotId == Snapshot.CURRENT_STATE_ID) {
+            snapshotId = sid;
+            inSnapshot = true;
+          }
+          components.add(0, inode.getLocalNameBytes());
+        } else if (parent == null) { // root
+          components.add(0, inode.getLocalNameBytes());
+        }
+        inode = parent;
+      }
+    } while (inode != null);
+    return components.toArray(new byte[components.size()][]);
+  }
+

INS31 INS29 INS83 INS83 INS5 INS42 INS44 INS8 INS65 INS39 INS85 INS85 INS43 INS42 INS60 INS60 INS60 INS19 INS41 UPD66 INS66 INS66 INS66 INS65 INS66 INS66 INS42 INS74 INS59 INS39 INS59 INS39 INS59 INS8 INS27 INS32 INS68 INS43 INS5 INS42 INS14 INS42 INS9 INS42 INS40 INS25 INS42 INS33 INS42 INS42 INS3 INS42 INS69 INS42 INS39 INS85 INS74 INS62 INS8 INS8 INS5 INS32 INS43 INS43 INS5 INS42 INS43 INS21 INS25 INS60 INS25 INS21 INS39 INS85 INS85 INS42 INS42 INS42 INS42 INS39 INS85 INS40 INS7 INS27 INS8 INS43 INS59 INS27 INS8 INS25 INS7 INS42 INS32 INS62 INS32 INS42 INS27 INS60 INS60 INS25 INS42 INS42 INS16 INS27 INS62 INS60 INS21 INS25 INS21 INS27 INS8 INS42 INS42 INS36 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS40 INS43 INS59 INS43 INS59 INS27 INS8 INS27 INS32 INS32 INS42 INS33 INS42 INS43 INS39 INS59 INS32 INS27 INS8 INS32 INS42 INS33 INS21 INS11 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS21 INS32 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS27 INS27 INS27 INS21 INS21 INS42 INS42 INS34 INS32 INS32 INS43 INS42 INS43 INS32 INS42 INS42 INS42 INS32 INS32 INS7 INS42 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS40 INS42 INS40 INS7 INS7 INS42 INS42 INS42 INS42 INS34 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS32 INS42 INS42 INS34 INS40 INS42 INS9 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS32 INS42 INS42 INS42