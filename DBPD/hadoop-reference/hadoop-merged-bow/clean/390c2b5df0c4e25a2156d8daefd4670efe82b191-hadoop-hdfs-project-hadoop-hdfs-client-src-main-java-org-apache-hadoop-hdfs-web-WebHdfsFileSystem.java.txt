Revert "HDFS-11156. Add new op GETFILEBLOCKLOCATIONS to WebHDFS REST API. Contributed by Weiwei Yang."

This reverts commit 7fcc73fc0d248aae1edbd4e1514c5818f6198928.

 Conflicts:
	hadoop-hdfs-project/hadoop-hdfs/src/site/markdown/WebHDFS.md
	hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/web/TestWebHDFS.java

-    BlockLocation[] locations = null;
-    try {
-      locations = getFileBlockLocations(
-          GetOpParam.Op.GETFILEBLOCKLOCATIONS,
-          p, offset, length);
-    } catch (RemoteException e) {
-      // See the error message from ExceptionHandle
-      if(e.getMessage() != null &&
-          e.getMessage().contains(
-              "Invalid value for webhdfs parameter") &&
-          e.getMessage().contains(
-              GetOpParam.Op.GETFILEBLOCKLOCATIONS.toString())) {
-        // Old webhdfs server doesn't support GETFILEBLOCKLOCATIONS
-        // operation, fall back to query again using old API
-        // GET_BLOCK_LOCATIONS.
-        LOG.info("Invalid webhdfs operation parameter "
-            + GetOpParam.Op.GETFILEBLOCKLOCATIONS + ". Fallback to use "
-            + GetOpParam.Op.GET_BLOCK_LOCATIONS + " instead.");
-        locations = getFileBlockLocations(
-            GetOpParam.Op.GET_BLOCK_LOCATIONS,
-            p, offset, length);
-      }
-    }
-    return locations;
-  }
-  /**
-   * Get file block locations implementation. Provide a operation
-   * parameter to determine how to get block locations from a webhdfs
-   * server. Older server only supports <b>GET_BLOCK_LOCATIONS</b> but
-   * not <b>GETFILEBLOCKLOCATIONS</b>.
-   *
-   * @param path path to the file
-   * @param offset start offset in the given file
-   * @param length of the file to get locations for
-   * @param operation
-   *   Valid operation is either
-   *   {@link org.apache.hadoop.hdfs.web.resources.GetOpParam.Op
-   *   #GET_BLOCK_LOCATIONS} or
-   *   {@link org.apache.hadoop.hdfs.web.resources.GetOpParam.Op
-   *   #GET_BLOCK_LOCATIONS}
-   * @throws IOException
-   *   Http connection error, decoding error or given
-   *   operation is not valid
-   */
-  @VisibleForTesting
-  protected BlockLocation[] getFileBlockLocations(
-      GetOpParam.Op operation, final Path path,
-      final long offset, final long length) throws IOException {
-    return new FsPathResponseRunner<BlockLocation[]>(operation, path,
+    final HttpOpParam.Op op = GetOpParam.Op.GET_BLOCK_LOCATIONS;
+    return new FsPathResponseRunner<BlockLocation[]>(op, p,
-        switch(operation) {
-        case GETFILEBLOCKLOCATIONS:
-          return JsonUtilClient.toBlockLocationArray(json);
-        case GET_BLOCK_LOCATIONS:
-          return DFSUtilClient.locatedBlocks2Locations(
-              JsonUtilClient.toLocatedBlocks(json));
-        default :
-          throw new IOException("Unknown operation " + operation.name());
-        }
+        return DFSUtilClient.locatedBlocks2Locations(
+            JsonUtilClient.toLocatedBlocks(json));

MOV78 UPD83 MOV44 MOV21 MOV21 INS60 INS83 INS43 INS59 INS40 INS42 INS40 UPD42 UPD42 MOV41 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL83 DEL39 DEL42 DEL44 DEL83 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL85 DEL5 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL40 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL33 DEL27 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL27 DEL42 DEL42 DEL32 DEL42 DEL40 DEL42 DEL32 DEL32 DEL27 DEL42 DEL42 DEL45 DEL40 DEL45 DEL40 DEL45 DEL27 DEL32 DEL21 DEL42 DEL42 DEL40 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL12 DEL54 DEL42 DEL41 DEL8 DEL31 DEL66 DEL66 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL40 DEL42 DEL67 DEL65 DEL66 DEL40 DEL42 DEL67 DEL65 DEL65 DEL42 DEL66 DEL66 DEL65 DEL29 DEL42 DEL78 DEL40 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL49 DEL42 DEL42 DEL42 DEL32 DEL41 DEL42 DEL49 DEL49 DEL42 DEL43 DEL45 DEL42 DEL42 DEL32 DEL27 DEL14 DEL53 DEL50