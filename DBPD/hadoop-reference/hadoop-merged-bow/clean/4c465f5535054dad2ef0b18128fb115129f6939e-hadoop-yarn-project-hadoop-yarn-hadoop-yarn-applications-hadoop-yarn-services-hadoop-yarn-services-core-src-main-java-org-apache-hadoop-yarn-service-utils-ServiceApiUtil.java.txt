YARN-8761. Service AM support for decommissioning component instances.
           Contributed by Billie Rinaldi

+import java.text.MessageFormat;
+  public static Path writeAppDefinition(SliderFileSystem fs, Service service)
+      throws IOException {
+    Path appJson = getServiceJsonPath(fs, service.getName());
+    jsonSerDeser.save(fs.getFileSystem(), appJson, service, true);
+    return appJson;
+  }
+
-  private static String parseComponentName(String componentInstanceName)
+  public static String getHostnameSuffix(String serviceName, org.apache
+      .hadoop.conf.Configuration conf) {
+    String domain = conf.get(RegistryConstants.KEY_DNS_DOMAIN);
+    String hostnameSuffix;
+    if (domain == null || domain.isEmpty()) {
+      hostnameSuffix = MessageFormat
+          .format(".{0}.{1}", serviceName, RegistryUtils.currentUser());
+    } else {
+      hostnameSuffix = MessageFormat
+          .format(".{0}.{1}.{2}", serviceName,
+              RegistryUtils.currentUser(), domain);
+    }
+    return hostnameSuffix;
+  }
+
+  public static String parseAndValidateComponentInstanceName(String
+      instanceOrHostname, String serviceName, org.apache.hadoop.conf
+      .Configuration conf) throws IllegalArgumentException {
+    int idx = instanceOrHostname.indexOf('.');
+    String hostnameSuffix = getHostnameSuffix(serviceName, conf);
+    if (idx != -1) {
+      if (!instanceOrHostname.endsWith(hostnameSuffix)) {
+        throw new IllegalArgumentException("Specified hostname " +
+            instanceOrHostname + " does not have the expected format " +
+            "componentInstanceName" +
+            hostnameSuffix);
+      }
+      instanceOrHostname = instanceOrHostname.substring(0, instanceOrHostname
+          .length() - hostnameSuffix.length());
+    }
+    idx = instanceOrHostname.indexOf('.');
+    if (idx != -1) {
+      throw new IllegalArgumentException("Specified hostname " +
+          instanceOrHostname + " does not have the expected format " +
+          "componentInstanceName" +
+          hostnameSuffix);
+    }
+    return instanceOrHostname;
+  }
+
+  public static String parseComponentName(String componentInstanceName)
-    int idx = componentInstanceName.lastIndexOf('-');
+    int idx = componentInstanceName.indexOf('.');
+    if (idx != -1) {
+      componentInstanceName = componentInstanceName.substring(0, idx);
+    }
+    idx = componentInstanceName.lastIndexOf('-');

INS26 INS40 INS31 INS31 INS31 INS83 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS43 INS8 UPD83 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS21 INS41 INS42 INS43 INS42 INS43 INS42 INS60 INS60 INS25 INS41 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS60 INS25 INS21 INS25 INS41 INS25 INS21 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS40 INS43 INS59 INS43 INS59 INS27 INS8 INS8 INS42 INS42 INS42 INS40 INS39 INS59 INS43 INS59 INS27 INS8 INS7 INS27 INS8 INS42 INS27 INS8 INS7 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS32 INS42 INS42 INS27 INS32 INS21 INS21 INS42 INS32 INS42 INS42 INS32 INS42 INS38 INS25 INS21 INS42 INS32 INS42 INS38 INS53 INS32 INS42 INS38 INS21 INS42 MOV32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS40 INS42 INS33 INS42 INS42 INS7 INS7 INS42 INS42 INS13 INS42 INS42 INS42 INS34 INS38 INS8 INS7 INS42 INS42 INS13 INS34 INS14 INS42 INS42 INS13 INS34 INS7 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS53 INS42 INS32 INS43 INS27 INS42 INS32 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS34 INS27 INS42 INS45 INS42 INS45 INS45 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS42 INS43 INS27 INS32 INS32 INS42 INS45 INS42 INS45 INS45 INS42 INS42 INS42 INS42 INS42