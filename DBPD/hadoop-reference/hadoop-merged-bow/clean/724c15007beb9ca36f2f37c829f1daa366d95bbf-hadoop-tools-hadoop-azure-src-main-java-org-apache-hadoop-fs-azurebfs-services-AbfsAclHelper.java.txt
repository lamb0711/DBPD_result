HADOOP-15846. ABFS: fix mask related bugs in setAcl, modifyAclEntries and removeAclEntries.

Contributed by Junhua Gu.

(cherry picked from commit 66715005f9e8f4f25faa352a06d142b75a029f0e)

-  public static Map<String, String> deserializeAclSpec(final String aclSpecString) {
+  public static Map<String, String> deserializeAclSpec(final String aclSpecString) throws AzureBlobFileSystemException {
-    final String[] aclArray = aclSpecString.split(AbfsHttpConstants.COMMA);
-    for (String acl : aclArray) {
-      int idx = acl.lastIndexOf(AbfsHttpConstants.COLON);
-      aclEntries.put(acl.substring(0, idx), acl.substring(idx + 1));
+    final String[] aceArray = aclSpecString.split(AbfsHttpConstants.COMMA);
+    for (String ace : aceArray) {
+      int idx = ace.lastIndexOf(AbfsHttpConstants.COLON);
+      final String key = ace.substring(0, idx);
+      final String val = ace.substring(idx + 1);
+      if (aclEntries.containsKey(key)) {
+        throw new InvalidAclOperationException("Duplicate acl entries are not allowed.");
+      }
+      aclEntries.put(key, val);
+
+    if (removeIndicationSet.contains(AbfsHttpConstants.ACCESS_MASK) && containsNamedAce(aclEntries, false)) {
+      throw new InvalidAclOperationException("Access mask is required when a named access acl is present.");
+    }
+
+
+    if (removeIndicationSet.contains(AbfsHttpConstants.DEFAULT_MASK) && containsNamedAce(aclEntries, true)) {
+      throw new InvalidAclOperationException("Default mask is required when a named default acl is present.");
+    }
+
+  public static void modifyAclEntriesInternal(Map<String, String> aclEntries, Map<String, String> toModifyEntries)
+      throws AzureBlobFileSystemException {
+    boolean namedAccessAclTouched = false;
+    boolean namedDefaultAclTouched = false;
+
+    for (Map.Entry<String, String> toModifyEntry : toModifyEntries.entrySet()) {
+      aclEntries.put(toModifyEntry.getKey(), toModifyEntry.getValue());
+      if (isNamedAce(toModifyEntry.getKey())) {
+        if (isDefaultAce(toModifyEntry.getKey())) {
+          namedDefaultAclTouched = true;
+        } else {
+          namedAccessAclTouched = true;
+        }
+      }
+    }
+
+    if (!toModifyEntries.containsKey(AbfsHttpConstants.ACCESS_MASK) && namedAccessAclTouched) {
+      aclEntries.remove(AbfsHttpConstants.ACCESS_MASK);
+    }
+
+    if (!toModifyEntries.containsKey(AbfsHttpConstants.DEFAULT_MASK) && namedDefaultAclTouched) {
+      aclEntries.remove(AbfsHttpConstants.DEFAULT_MASK);
+    }
+  }
+
+  public static void setAclEntriesInternal(Map<String, String> aclEntries, Map<String, String> getAclEntries)
+      throws AzureBlobFileSystemException {
+    boolean defaultAclTouched = false;
+
+    for (String entryKey : aclEntries.keySet()) {
+      if (isDefaultAce(entryKey)) {
+        defaultAclTouched = true;
+        break;
+      }
+    }
+
+    for (Map.Entry<String, String> ace : getAclEntries.entrySet()) {
+      if (AbfsAclHelper.isDefaultAce(ace.getKey()) && (ace.getKey() != AbfsHttpConstants.DEFAULT_MASK || !defaultAclTouched)
+          && !aclEntries.containsKey(ace.getKey())) {
+        aclEntries.put(ace.getKey(), ace.getValue());
+      }
+    }
+  }
+
-        || entry.equals(AbfsHttpConstants.ACCESS_OTHER))
-        && !isNamedAce(entry)) {
+        || entry.equals(AbfsHttpConstants.ACCESS_OTHER))) {
-    FsAction umask = FsAction.NONE;
+    FsAction mask = FsAction.NONE;
-          umask = umask.or(FsAction.getFsAction(aclEntry.getValue()));
+          mask = mask.or(FsAction.getFsAction(aclEntry.getValue()));
-          umask = umask.or(FsAction.getFsAction(aclEntry.getValue()));
+          mask = mask.or(FsAction.getFsAction(aclEntry.getValue()));
-    aclEntries.put(isDefaultMask ? AbfsHttpConstants.DEFAULT_MASK : AbfsHttpConstants.ACCESS_MASK, umask.SYMBOL);
+    aclEntries.put(isDefaultMask ? AbfsHttpConstants.DEFAULT_MASK : AbfsHttpConstants.ACCESS_MASK, mask.SYMBOL);
+  private static boolean containsNamedAce(Map<String, String> aclEntries, boolean checkDefault) {
+    for (String entryKey : aclEntries.keySet()) {
+      if (isNamedAce(entryKey) && (checkDefault == isDefaultAce(entryKey))) {
+        return true;
+      }
+    }
+    return false;
+  }
+

INS31 INS31 INS31 INS43 INS83 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS83 INS83 INS39 INS42 INS44 INS44 INS43 INS8 MOV8 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS25 INS25 INS74 INS42 INS74 INS42 INS42 INS60 INS60 INS70 INS25 INS25 INS74 INS42 INS74 INS42 INS42 INS60 INS70 INS70 INS60 MOV25 INS70 INS21 INS74 INS42 INS39 INS42 INS70 INS41 UPD42 INS27 INS8 INS27 INS8 INS43 INS43 INS43 INS43 INS43 INS43 INS39 INS59 INS39 INS59 INS44 INS32 INS8 INS27 INS8 INS27 INS8 INS43 INS43 INS43 INS43 INS43 INS43 INS39 INS59 INS44 INS32 INS8 INS44 INS32 INS8 MOV36 MOV43 INS59 MOV44 MOV32 MOV8 INS32 INS43 INS43 INS43 INS44 INS32 INS8 INS9 UPD42 UPD42 INS60 INS60 INS25 INS21 INS32 INS32 INS53 INS32 INS32 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS9 INS74 INS42 INS42 INS42 INS21 INS25 INS38 INS42 INS21 INS38 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS43 INS42 INS42 INS42 INS25 INS74 INS42 INS42 INS42 INS25 INS42 INS40 UPD42 MOV42 UPD42 MOV42 MOV16 INS40 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS25 INS83 INS43 INS59 INS83 INS43 INS59 INS32 INS8 INS32 INS42 INS42 INS40 INS42 INS42 INS9 INS14 INS42 INS42 INS40 INS42 INS42 INS9 INS14 INS43 INS43 INS43 INS32 INS32 INS8 INS32 INS32 INS32 INS32 INS42 INS32 INS8 INS43 INS43 INS43 INS27 INS8 INS42 INS8 INS8 INS42 INS27 INS8 INS42 INS42 INS32 INS42 INS42 MOV32 INS42 INS42 INS42 INS53 INS42 INS42 INS42 INS42 INS43 INS45 INS43 INS45 INS40 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS32 INS25 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS21 INS10 INS40 INS42 INS42 INS32 INS36 INS38 INS21 INS25 INS25 INS32 INS36 INS41 UPD42 UPD42 MOV42 MOV42 MOV34 MOV42 UPD42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS8 INS8 INS7 INS42 INS42 INS32 INS27 INS32 INS32 MOV27 INS8 MOV27 MOV8 INS42 INS42 INS27 INS9 INS43 INS45 INS42 INS32 INS21 INS21 INS42 INS9 INS42 INS42 INS27 INS38 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS21 INS42 INS32 INS42 INS42 INS42 INS7 INS7 INS32 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS9 INS42 INS9 INS42 INS42 INS42 INS32 INS42 INS42 UPD42 INS42 INS42 MOV32 UPD42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL40 DEL59 DEL60 DEL70 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8