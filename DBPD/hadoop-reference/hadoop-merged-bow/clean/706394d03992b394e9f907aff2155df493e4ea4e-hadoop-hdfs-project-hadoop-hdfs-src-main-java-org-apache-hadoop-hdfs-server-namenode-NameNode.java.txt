HDFS-3004. Implement Recovery Mode. Contributed by Colin Patrick McCabe


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1311394 13f79535-47bb-0310-9956-ffa450edef68

+   * <li>{@link StartupOption#RECOVERY RECOVERY} - recover name node
+   * metadata</li>
-      StartupOption.INITIALIZESHAREDEDITS.getName() + "]");
+      StartupOption.INITIALIZESHAREDEDITS.getName() + "] | [" +
+      StartupOption.BOOTSTRAPSTANDBY.getName() + "] | [" + 
+      StartupOption.RECOVER.getName() + " [ " +
+        StartupOption.FORCE.getName() + " ] ]");
+      } else if (StartupOption.RECOVER.getName().equalsIgnoreCase(cmd)) {
+        if (startOpt != StartupOption.REGULAR) {
+          throw new RuntimeException("Can't combine -recover with " +
+              "other startup options.");
+        }
+        startOpt = StartupOption.RECOVER;
+        while (++i < argsLen) {
+          if (args[i].equalsIgnoreCase(
+                StartupOption.FORCE.getName())) {
+            startOpt.setForce(MetaRecoveryContext.FORCE_FIRST_CHOICE);
+          } else {
+            throw new RuntimeException("Error parsing recovery options: " + 
+              "can't understand option \"" + args[i] + "\"");
+          }
+        }
+  private static void doRecovery(StartupOption startOpt, Configuration conf)
+      throws IOException {
+    if (startOpt.getForce() < MetaRecoveryContext.FORCE_ALL) {
+      if (!confirmPrompt("You have selected Metadata Recovery mode.  " +
+          "This mode is intended to recover lost metadata on a corrupt " +
+          "filesystem.  Metadata recovery mode often permanently deletes " +
+          "data from your HDFS filesystem.  Please back up your edit log " +
+          "and fsimage before trying this!\n\n" +
+          "Are you ready to proceed? (Y/N)\n")) {
+        System.err.println("Recovery aborted at user request.\n");
+        return;
+      }
+    }
+    MetaRecoveryContext.LOG.info("starting recovery...");
+    UserGroupInformation.setConfiguration(conf);
+    NameNode.initMetrics(conf, startOpt.toNodeRole());
+    FSNamesystem fsn = null;
+    try {
+      fsn = FSNamesystem.loadFromDisk(conf);
+      fsn.saveNamespace();
+      MetaRecoveryContext.LOG.info("RECOVERY COMPLETE");
+    } catch (IOException e) {
+      MetaRecoveryContext.LOG.info("RECOVERY FAILED: caught exception", e);
+      throw e;
+    } catch (RuntimeException e) {
+      MetaRecoveryContext.LOG.info("RECOVERY FAILED: caught exception", e);
+      throw e;
+    } finally {
+      if (fsn != null)
+        fsn.close();
+    }
+  }
+
+      case RECOVER: {
+        NameNode.doRecovery(startOpt, conf);
+        return null;
+      }

INS31 INS83 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS43 INS42 INS43 INS42 INS42 INS25 INS21 INS21 INS21 INS60 INS54 INS65 INS66 INS66 INS66 INS42 INS42 INS27 INS8 INS32 INS32 INS32 INS43 INS59 INS8 INS12 INS12 INS8 INS8 INS49 INS67 INS66 INS32 INS40 INS25 INS40 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS33 INS21 INS21 INS21 INS44 INS8 INS44 INS8 INS25 INS42 INS21 INS41 INS42 INS42 INS45 INS32 INS45 INS32 INS45 INS32 UPD45 INS42 INS42 INS38 INS8 INS42 INS42 INS7 INS32 INS32 INS43 INS42 INS21 INS53 INS43 INS42 INS21 INS53 INS27 INS21 INS32 INS33 INS40 INS42 INS40 INS42 INS40 INS42 INS32 INS21 INS41 INS42 INS32 INS42 INS42 INS40 INS42 INS45 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS33 INS32 INS42 INS42 INS42 INS42 INS42 INS27 INS32 INS42 INS42 INS42 INS40 INS42 INS45 INS42 INS40 INS42 INS45 INS42 INS42 INS42 INS45 INS45 INS45 INS45 INS45 INS45 INS40 INS42 INS45 INS25 MOV32 MOV8 INS25 INS32 INS8 MOV8 INS32 INS42 INS42 INS25 INS21 INS61 INS40 INS42 INS27 INS8 INS7 INS27 INS8 INS42 INS40 INS53 INS42 INS40 INS38 INS42 INS25 INS14 INS42 INS32 INS8 INS8 INS43 INS27 INS2 INS42 INS32 INS21 INS53 INS42 INS45 INS45 INS42 INS42 INS40 INS42 INS32 INS14 INS42 INS42 INS40 INS43 INS27 INS42 INS27 INS2 INS45 INS45 INS45 INS42 INS42 DEL25