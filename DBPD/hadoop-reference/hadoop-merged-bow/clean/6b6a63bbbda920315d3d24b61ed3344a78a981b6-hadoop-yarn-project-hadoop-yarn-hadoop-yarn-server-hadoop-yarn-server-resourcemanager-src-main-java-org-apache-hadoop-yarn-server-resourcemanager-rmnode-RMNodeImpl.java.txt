Merge commit '456e901a4c5c639267ee87b8e5f1319f256d20c2' (HDFS-6407. Add sorting and pagination in the datanode tab of the NN Web UI. Contributed by Haohui Mai.) into HDFS-7285-merge

+import org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.ContainerAllocationExpirer;
-import org.apache.hadoop.yarn.state.InvalidStateTransitonException;
+import org.apache.hadoop.yarn.state.InvalidStateTransitionException;
+  private final ContainerAllocationExpirer containerAllocationExpirer;
-  private final List<ApplicationId> finishedApplications = new ArrayList<ApplicationId>();
+  private final List<ApplicationId> finishedApplications =
+      new ArrayList<ApplicationId>();
+
+  /* the list of applications that are running on this node */
+  private final List<ApplicationId> runningApplications =
+      new ArrayList<ApplicationId>();
-  
+
-  
+
+     .addTransition(NodeState.RUNNING, NodeState.SHUTDOWN,
+         RMNodeEventType.SHUTDOWN,
+         new DeactivateNodeTransition(NodeState.SHUTDOWN))
+     .addTransition(NodeState.UNHEALTHY, NodeState.SHUTDOWN,
+         RMNodeEventType.SHUTDOWN,
+         new DeactivateNodeTransition(NodeState.SHUTDOWN))
+
+     //Transitions from SHUTDOWN state
+     .addTransition(NodeState.SHUTDOWN, NodeState.SHUTDOWN,
+         RMNodeEventType.RESOURCE_UPDATE,
+         new UpdateNodeResourceWhenUnusableTransition())
+     .addTransition(NodeState.SHUTDOWN, NodeState.SHUTDOWN,
+         RMNodeEventType.FINISHED_CONTAINERS_PULLED_BY_AM,
+         new AddContainersToBeRemovedFromNMTransition())
+
+    this.containerAllocationExpirer = context.getContainerAllocationExpirer();
+  public List<ApplicationId> getRunningApps() {
+    this.readLock.lock();
+    try {
+      return new ArrayList<ApplicationId>(this.runningApplications);
+    } finally {
+      this.readLock.unlock();
+    }
+  }
+
+  @Override
-      } catch (InvalidStateTransitonException e) {
+      } catch (InvalidStateTransitionException e) {
+    case SHUTDOWN:
+      metrics.decrNumShutdownNMs();
+      break;
+    case SHUTDOWN:
+      metrics.incrNumShutdownNMs();
+      break;
+      rmNode.runningApplications.remove(appId);
+    // Add running applications back due to Node add or Node reconnection.
+    rmNode.runningApplications.add(appId);
+          if (!rmNode.getTotalCapability().equals(
+              newNode.getTotalCapability())) {
+            rmNode.totalCapability = newNode.getTotalCapability();
+          }
-            // Only add new node if old state is RUNNING
+            // Only add old node if old state is RUNNING
-                new NodeAddedSchedulerEvent(newNode));
+                new NodeAddedSchedulerEvent(rmNode));
-        if (rmNode.getTotalCapability() != newNode.getTotalCapability()) {
+        if (!rmNode.getTotalCapability().equals(
+            newNode.getTotalCapability())) {
-      rmNode.finishedApplications.add(((
-          RMNodeCleanAppEvent) event).getAppId());
+      ApplicationId appId = ((RMNodeCleanAppEvent) event).getAppId();
+      rmNode.finishedApplications.add(appId);
+      rmNode.runningApplications.remove(appId);
-      if (finishedApplications.contains(containerId.getApplicationAttemptId()
-          .getApplicationId())) {
+
+      ApplicationId containerAppId =
+          containerId.getApplicationAttemptId().getApplicationId();
+
+      if (finishedApplications.contains(containerAppId)) {
+      } else if (!runningApplications.contains(containerAppId)) {
+        if (LOG.isDebugEnabled()) {
+          LOG.debug("Container " + containerId
+              + " is the first container get launched for application "
+              + containerAppId);
+        }
+        runningApplications.add(containerAppId);
+          // Unregister from containerAllocationExpirer.
+          containerAllocationExpirer.unregister(containerId);
+        // Unregister from containerAllocationExpirer.
+        containerAllocationExpirer.unregister(containerId);

INS26 INS40 UPD40 INS23 INS23 INS31 INS83 INS83 INS43 INS59 INS83 INS83 INS74 INS59 INS78 INS83 INS74 INS42 INS8 INS42 INS42 INS43 INS43 INS42 INS14 INS32 INS21 INS42 INS43 INS43 INS21 INS54 INS21 INS42 INS42 INS74 INS32 INS42 INS7 INS42 INS42 INS32 INS8 INS8 INS21 INS10 INS49 INS21 INS10 INS49 INS32 INS60 INS21 INS43 INS43 INS32 INS42 INS40 INS40 INS40 INS14 INS22 INS32 INS22 INS42 INS41 INS21 INS42 INS32 INS42 INS32 INS21 INS40 INS42 INS42 INS43 INS59 INS32 INS60 INS42 INS42 MOV32 INS42 INS40 INS40 INS40 INS14 INS43 INS52 INS42 INS42 INS42 INS52 INS42 INS14 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 MOV32 INS42 INS40 INS42 INS42 INS43 INS59 INS25 UPD42 INS40 INS40 INS40 INS14 INS43 INS42 INS74 INS22 INS22 INS42 INS40 INS42 INS42 INS38 INS42 INS42 MOV32 INS42 INS38 INS8 INS21 INS43 INS40 INS42 INS43 INS43 INS52 INS42 INS52 INS42 UPD43 INS25 INS32 INS32 INS25 INS21 INS32 INS42 INS42 INS42 UPD42 INS38 INS8 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS8 INS32 INS21 INS42 INS42 INS42 INS32 INS21 MOV42 MOV42 MOV42 MOV42 INS42 INS42 INS21 INS42 INS42 INS42 INS32 MOV32 INS42 INS32 INS7 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 MOV32 INS42 INS42 INS27 INS42 INS42 UPD42 INS45 INS42 INS45 INS42 INS32 INS42 MOV32 MOV42 INS40 INS40 INS40 MOV14 UPD40 MOV14 UPD40 UPD40 UPD40 MOV14 UPD40 MOV14 UPD40 UPD40 MOV14 UPD40 UPD40 UPD40 INS14 INS43 INS40 INS42 DEL27