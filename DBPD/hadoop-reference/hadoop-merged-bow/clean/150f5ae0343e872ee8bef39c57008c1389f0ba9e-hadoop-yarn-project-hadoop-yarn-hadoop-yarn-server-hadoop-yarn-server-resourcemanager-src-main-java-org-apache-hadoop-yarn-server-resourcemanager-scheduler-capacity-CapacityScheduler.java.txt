Revert "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)"

This reverts commit 3fe57285635e8058c34aa40a103845b49ca7d6ff.

Conflicts:
	hadoop-yarn-project/CHANGES.txt

+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.ContainerPreemptEvent;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.ContainerPreemptEvent;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.ContainerRescheduledEvent;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.SchedulerEventType;
-      super.completedContainer(
+      completedContainer(
-      super.completedContainer(
+      completedContainer(
-      super.completedContainer(container, completedContainer,
+      completedContainer(container, completedContainer,
-      killReservedContainer(reservedContainer);
+      dropContainerReservation(reservedContainer);
-      super.completedContainer(getRMContainer(containerId), 
+      completedContainer(getRMContainer(containerId), 
-    case KILL_RESERVED_CONTAINER:
+    case DROP_RESERVATION:
-      ContainerPreemptEvent killReservedContainerEvent =
-          (ContainerPreemptEvent) event;
-      RMContainer container = killReservedContainerEvent.getContainer();
-      killReservedContainer(container);
+      ContainerPreemptEvent dropReservationEvent = (ContainerPreemptEvent)event;
+      RMContainer container = dropReservationEvent.getContainer();
+      dropContainerReservation(container);
-    case KILL_PREEMPTED_CONTAINER:
+    case KILL_CONTAINER:
-      killPreemptedContainer(containerToBeKilled);
+      killContainer(containerToBeKilled);
+    }
+    break;
+    case CONTAINER_RESCHEDULED:
+    {
+      ContainerRescheduledEvent containerRescheduledEvent =
+          (ContainerRescheduledEvent) event;
+      RMContainer container = containerRescheduledEvent.getContainer();
+      recoverResourceRequestForContainer(container);
-      super.completedContainer(container,
+      completedContainer(container, 
-      super.completedContainer(reservedContainer,
+      completedContainer(reservedContainer, 
-  protected synchronized void completedContainerInternal(RMContainer rmContainer,
+  protected synchronized void completedContainer(RMContainer rmContainer,
+    if (rmContainer == null) {
+      LOG.info("Container " + containerStatus.getContainerId() +
+          " completed with event " + event);
+      return;
+    }
-  public void killReservedContainer(RMContainer container) {
+  public void dropContainerReservation(RMContainer container) {
-      LOG.debug(SchedulerEventType.KILL_RESERVED_CONTAINER + ":"
-          + container.toString());
+      LOG.debug("DROP_RESERVATION:" + container.toString());
-    // TODO: What happens if this is no longer a reserved container, for e.g if
-    // the reservation became an allocation.
-    super.completedContainer(container,
+    completedContainer(container,
-      LOG.debug(SchedulerEventType.PREEMPT_CONTAINER + ": appAttempt:"
-          + aid.toString() + " container: " + cont.toString());
+      LOG.debug("PREEMPT_CONTAINER: application:" + aid.toString() +
+          " container: " + cont.toString());
-      app.preemptContainer(cont.getContainerId());
+      app.addPreemptContainer(cont.getContainerId());
-  public void killPreemptedContainer(RMContainer cont) {
+  public void killContainer(RMContainer cont) {
-      LOG.debug(SchedulerEventType.KILL_PREEMPTED_CONTAINER + ": container"
-          + cont.toString());
+      LOG.debug("KILL_CONTAINER: container" + cont.toString());
-    super.completedContainer(cont, SchedulerUtils
-      .createPreemptedContainerStatus(cont.getContainerId(),
-        SchedulerUtils.PREEMPTED_CONTAINER), RMContainerEventType.KILL);
+    completedContainer(cont, SchedulerUtils.createPreemptedContainerStatus(
+      cont.getContainerId(), SchedulerUtils.PREEMPTED_CONTAINER),
+      RMContainerEventType.KILL);

MOV26 MOV26 UPD40 UPD40 UPD42 UPD42 UPD42 INS25 INS8 INS10 INS49 INS27 INS8 INS32 INS32 UPD42 UPD42 INS42 INS60 INS60 INS21 INS42 INS33 INS21 INS41 INS42 INS42 MOV32 INS40 INS42 INS42 MOV32 INS40 INS32 INS32 INS32 INS32 INS43 INS59 INS43 INS59 INS32 INS32 INS32 INS32 INS42 INS42 MOV32 INS40 INS42 INS42 MOV32 INS40 INS42 INS42 INS42 INS40 UPD42 INS42 MOV32 MOV32 INS40 UPD42 UPD42 UPD42 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS42 INS42 MOV32 INS40 INS42 INS42 MOV32 INS40 INS42 INS42 INS27 UPD42 UPD42 INS43 INS42 INS42 INS42 INS45 INS32 INS45 INS42 UPD45 UPD45 UPD45 INS42 INS42 INS42 DEL42 DEL42 DEL40 DEL48 DEL42 DEL42 DEL40 DEL48 DEL42 DEL42 DEL42 DEL40 DEL48 DEL42 DEL40 DEL48 DEL42 DEL42 DEL40 DEL48 DEL42 DEL42 DEL40 DEL48 DEL40 DEL42 DEL42 DEL40 DEL48 DEL40 DEL40 DEL42 DEL42 DEL40 DEL48