HDFS-13967. HDFS Router Quota Class Review. Contributed by BELUGA BEHR.

-import java.util.HashMap;
-import java.util.LinkedList;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import org.apache.commons.lang3.StringUtils;
+import com.google.common.collect.ArrayListMultimap;
+import com.google.common.collect.ListMultimap;
+
-    Map<String, List<RemoteLocation>> validLocations = new HashMap<>();
-    for (RemoteLocation loc : locations) {
-      String nsId = loc.getNameserviceId();
-      List<RemoteLocation> dests = validLocations.get(nsId);
-      if (dests == null) {
-        dests = new LinkedList<>();
-        dests.add(loc);
-        validLocations.put(nsId, dests);
-      } else {
-        // Ensure the paths in the same nameservice is different.
-        // Don't include parent-child paths.
-        boolean isChildPath = false;
-        for (RemoteLocation d : dests) {
-          if (loc.getDest().startsWith(d.getDest())) {
-            isChildPath = true;
-            break;
-          }
-        }
+    ListMultimap<String, RemoteLocation> validLocations =
+        ArrayListMultimap.create();
-        if (!isChildPath) {
-          dests.add(loc);
+    for (RemoteLocation loc : locations) {
+      final String nsId = loc.getNameserviceId();
+      final Collection<RemoteLocation> dests = validLocations.get(nsId);
+
+      // Ensure the paths in the same nameservice is different.
+      // Do not include parent-child paths.
+      boolean isChildPath = false;
+
+      for (RemoteLocation d : dests) {
+        if (StringUtils.startsWith(loc.getDest(), d.getDest())) {
+          isChildPath = true;
+          break;
+
+      if (!isChildPath) {
+        validLocations.put(nsId, loc);
+      }
-    List<RemoteLocation> quotaLocs = new LinkedList<>();
-    for (List<RemoteLocation> locs : validLocations.values()) {
-      quotaLocs.addAll(locs);
-    }
-
-    return quotaLocs;
+    return Collections
+        .unmodifiableList(new ArrayList<>(validLocations.values()));
-    List<RemoteLocation> locations = new LinkedList<>();
+    List<RemoteLocation> locations = new ArrayList<>();
-

INS26 INS26 INS26 INS26 UPD40 UPD40 INS40 INS40 INS40 INS40 MOV8 MOV60 INS60 INS70 INS41 INS74 INS59 MOV44 INS42 MOV8 INS32 UPD43 MOV43 MOV43 INS43 INS42 INS32 MOV60 MOV60 UPD42 MOV42 INS42 INS14 UPD42 INS42 UPD42 MOV42 INS42 INS83 INS83 UPD74 INS74 MOV32 UPD74 UPD43 INS43 UPD42 MOV42 UPD43 UPD42 MOV32 INS42 UPD42 INS42 UPD42 INS42 UPD42 DEL42 DEL33 DEL27 DEL42 DEL74 DEL14 DEL7 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL70 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL70 DEL42 DEL41 DEL8