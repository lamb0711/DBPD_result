HADOOP-15339. Support additional key/value propereties in JMX bean registration. Contributed by Elek Marton.

+import java.util.HashMap;
+import java.util.Map;
+import java.util.stream.Collectors;
+import com.google.common.annotations.VisibleForTesting;
+
+import com.google.common.base.Preconditions;
- *  for {link {@link #register(String, String, Object)}
+ *  for {link {@link #register(String, String, Object)}.
-public class MBeans {
+public final class MBeans {
+  private MBeans() {
+  }
+
-   * Where the <serviceName> and <nameName> are the supplied parameters
+   * Where the <serviceName> and <nameName> are the supplied parameters.
+    return register(serviceName, nameName, new HashMap<String, String>(),
+        theMbean);
+  }
+
+  /**
+   * Register the MBean using our standard MBeanName format
+   * "hadoop:service=<serviceName>,name=<nameName>"
+   * Where the <serviceName> and <nameName> are the supplied parameters.
+   *
+   * @param serviceName
+   * @param nameName
+   * @param properties - Key value pairs to define additional JMX ObjectName
+   *                     properties.
+   * @param theMbean    - the MBean to register
+   * @return the named used to register the MBean
+   */
+  static public ObjectName register(String serviceName, String nameName,
+                                    Map<String, String> properties,
+                                    Object theMbean) {
-    ObjectName name = getMBeanName(serviceName, nameName);
+    Preconditions.checkNotNull(properties,
+        "JMX bean properties should not be null for "
+            + "bean registration.");
+    ObjectName name = getMBeanName(serviceName, nameName, properties);
-  static private ObjectName getMBeanName(String serviceName, String nameName) {
+  @VisibleForTesting
+  static ObjectName getMBeanName(String serviceName, String nameName,
+      Map<String, String> additionalParameters) {
+
+    String additionalKeys = additionalParameters.entrySet()
+        .stream()
+        .map(entry -> entry.getKey() + "=" + entry.getValue())
+        .collect(Collectors.joining(","));
+
-        NAME_PREFIX + nameName;
+        NAME_PREFIX + nameName +
+        (additionalKeys.isEmpty() ? "" : "," + additionalKeys);

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS83 INS31 INS31 INS83 INS42 INS8 MOV29 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS8 INS29 INS44 INS78 INS44 INS66 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS41 INS65 INS65 INS65 INS65 INS65 INS65 INS74 INS42 INS21 INS42 INS74 INS42 INS60 UPD66 INS42 INS42 INS42 INS32 INS66 INS66 INS66 INS42 INS42 INS42 INS66 INS66 INS42 INS66 INS66 INS43 INS43 INS43 INS32 INS43 INS43 INS43 MOV43 INS59 INS43 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS32 INS42 INS74 INS45 INS45 INS42 INS32 INS42 INS32 INS36 INS43 INS43 INS43 INS32 INS42 INS86 INS42 INS42 INS45 INS16 INS42 INS42 INS42 INS32 INS42 INS59 INS27 INS32 INS45 INS27 INS42 INS42 INS42 INS32 INS45 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 DEL83