 HDDS-1119. DN get OM certificate from SCM CA for block token validation. Contributed by Ajay Kumar. (#601)


-import org.apache.hadoop.hdds.security.x509.certificate.utils.CertificateCodec;
-import java.security.cert.X509Certificate;
+import static org.apache.hadoop.hdds.security.x509.certificate.utils.CertificateCodec.getX509Certificate;
-          dnCertClient = new DNCertificateClient(new SecurityConfig(conf));
+          dnCertClient = new DNCertificateClient(new SecurityConfig(conf),
+              datanodeDetails.getCertSerialId());
-        datanodeStateMachine = new DatanodeStateMachine(datanodeDetails, conf);
+        if (OzoneSecurityUtil.isSecurityEnabled(conf)) {
+          initializeCertificateClient(conf);
+        }
+        datanodeStateMachine = new DatanodeStateMachine(datanodeDetails, conf,
+            dnCertClient);
-        if (OzoneSecurityUtil.isSecurityEnabled(conf)) {
-          initializeCertificateClient(conf);
-        }
-
-      X509Certificate x509Certificate =
-          CertificateCodec.getX509Certificate(pemEncodedCert);
-      dnCertClient.storeCertificate(x509Certificate);
+      dnCertClient.storeCertificate(pemEncodedCert, true);
+      datanodeDetails.setCertSerialId(getX509Certificate(pemEncodedCert).
+          getSerialNumber().toString());
+      persistDatanodeDetails(datanodeDetails);
+   * Persist DatanodeDetails to file system.
+   * @param dnDetails
+   *
+   * @return DatanodeDetails
+   */
+  private void persistDatanodeDetails(DatanodeDetails dnDetails)
+      throws IOException {
+    String idFilePath = HddsUtils.getDatanodeIdFilePath(conf);
+    if (idFilePath == null || idFilePath.isEmpty()) {
+      LOG.error("A valid file path is needed for config setting {}",
+          ScmConfigKeys.OZONE_SCM_DATANODE_ID);
+      throw new IllegalArgumentException(ScmConfigKeys.OZONE_SCM_DATANODE_ID +
+          " must be defined. See" +
+          " https://wiki.apache.org/hadoop/Ozone#Configuration" +
+          " for details on configuring Ozone.");
+    }
+
+    Preconditions.checkNotNull(idFilePath);
+    File idFile = new File(idFilePath);
+    ContainerUtils.writeDatanodeDetailsTo(dnDetails, idFile);
+  }
+
+  /**

MOV26 UPD40 INS31 INS29 INS83 INS39 INS42 INS44 INS43 INS8 INS65 INS65 INS65 INS43 INS42 INS42 INS60 INS25 INS21 INS60 INS21 INS66 INS42 INS66 INS42 INS43 INS59 INS27 INS8 INS32 INS43 INS59 INS32 INS21 INS21 INS42 INS42 INS32 INS27 INS32 INS21 INS53 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 MOV25 INS32 INS32 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS32 INS14 INS43 INS42 INS42 INS42 INS42 INS9 INS42 UPD42 MOV42 INS32 UPD42 UPD42 INS42 INS42 INS45 INS40 INS43 INS27 INS42 INS32 INS42 INS42 INS40 INS45 INS45 INS45 INS32 INS42 INS42 MOV42 MOV42 INS32 INS42 INS42 DEL40 DEL26 DEL42 DEL43 DEL42 DEL32 DEL59 DEL60 DEL42