YARN-2446. Augmented Timeline service APIs to start taking in domains as a parameter while posting entities and events. Contributed by Zhijie Shen.

+ *     DOMAIN_ID_COLUMN
+ *
+ *   ENTITY_ENTRY_PREFIX + entity type + revstarttime + entity id +
+  private static final byte[] DOMAIN_ID_COLUMN = "d".getBytes();
+      } else if (key[prefixlen] == DOMAIN_ID_COLUMN[0]) {
+        byte[] v = iterator.peekNext().getValue();
+        String domainId = new String(v);
+        entity.setDomainId(domainId);
+    Map<String, Set<Object>> primaryFilters = null;
-      Map<String, Set<Object>> primaryFilters = entity.getPrimaryFilters();
+      primaryFilters = entity.getPrimaryFilters();
+            } else {
+              byte[] domainIdBytes = db.get(createDomainIdKey(
+                  relatedEntityId, relatedEntityType, relatedEntityStartTime));
+              // This is the existing entity
+              String domainId = new String(domainIdBytes);
+              if (!domainId.equals(entity.getDomainId())) {
+                // in this case the entity will be put, but the relation will be
+                // ignored
+                TimelinePutError error = new TimelinePutError();
+                error.setEntityId(entity.getEntityId());
+                error.setEntityType(entity.getEntityType());
+                error.setErrorCode(TimelinePutError.FORBIDDEN_RELATION);
+                response.addError(error);
+                continue;
+              }
+
+      // write domain id entry
+      byte[] key = createDomainIdKey(entity.getEntityId(),
+          entity.getEntityType(), revStartTime);
+      if (entity.getDomainId() == null ||
+          entity.getDomainId().length() == 0) {
+        TimelinePutError error = new TimelinePutError();
+        error.setEntityId(entity.getEntityId());
+        error.setEntityType(entity.getEntityType());
+        error.setErrorCode(TimelinePutError.NO_DOMAIN);
+        response.addError(error);
+        return;
+      } else {
+        writeBatch.put(key, entity.getDomainId().getBytes());
+        writePrimaryFilterEntries(writeBatch, primaryFilters, key,
+            entity.getDomainId().getBytes());
+      }
+          // This is the new entity, the domain should be the same
+        byte[] key = createDomainIdKey(relatedEntity.getId(),
+            relatedEntity.getType(), relatedEntityStartTime);
+        db.put(key, entity.getDomainId().getBytes());
+   * Creates a domain id key, serializing ENTITY_ENTRY_PREFIX +
+   * entity type + revstarttime + entity id + DOMAIN_ID_COLUMN.
+   */
+  private static byte[] createDomainIdKey(String entityId,
+      String entityType, byte[] revStartTime) throws IOException {
+    return KeyBuilder.newInstance().add(ENTITY_ENTRY_PREFIX).add(entityType)
+        .add(revStartTime).add(entityId).add(DOMAIN_ID_COLUMN).getBytes();
+  }
+  /**

INS23 INS31 INS83 INS83 INS83 INS5 INS59 INS29 INS83 INS83 INS5 INS42 INS44 INS44 INS44 INS43 INS8 INS66 INS66 INS39 INS85 INS42 INS32 MOV60 INS65 INS39 INS85 INS43 INS42 INS43 INS42 INS5 INS42 INS42 INS41 INS45 INS42 INS66 INS66 INS42 INS42 INS39 INS85 INS32 INS33 INS21 INS60 INS25 INS32 INS42 INS7 INS5 INS59 INS27 INS8 INS8 INS32 INS42 INS42 INS42 MOV32 INS39 INS85 INS42 INS32 INS27 INS27 INS60 INS21 INS21 INS21 INS21 INS41 INS21 INS21 INS60 INS21 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS32 INS33 INS32 INS34 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS5 INS59 INS32 INS32 INS42 INS42 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS39 INS85 INS42 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS27 INS8 MOV8 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS2 INS2 INS60 INS60 INS21 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS5 INS59 INS43 INS59 INS32 MOV27 MOV8 INS8 INS39 INS85 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS60 INS60 MOV25 INS32 INS42 INS43 INS42 INS5 INS59 INS43 INS59 INS38 INS8 INS42 INS42 INS42 INS39 INS85 INS42 INS32 INS42 INS42 INS14 INS32 INS60 INS21 INS21 INS21 INS21 INS18 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS32 INS43 INS59 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42