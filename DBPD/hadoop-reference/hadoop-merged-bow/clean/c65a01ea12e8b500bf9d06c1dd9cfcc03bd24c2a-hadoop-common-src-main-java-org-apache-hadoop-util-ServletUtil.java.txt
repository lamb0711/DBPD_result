Merge trunk into HDFS-1623 branch.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1158072 13f79535-47bb-0310-9956-ffa450edef68

+import javax.servlet.http.HttpServletRequest;
+import org.apache.commons.httpclient.URIException;
+import org.apache.commons.httpclient.util.URIUtil;
+import com.google.common.base.Preconditions;
+
-}
+
+  /**
+   * Escape and encode a string regarded as within the query component of an URI.
+   * @param value the value to encode
+   * @return encoded query, null if the default charset is not supported
+   */
+  public static String encodeQueryValue(final String value) {
+    try {
+      return URIUtil.encodeWithinQuery(value, "UTF-8");
+    } catch (URIException e) {
+      throw new AssertionError("JVM does not support UTF-8"); // should never happen!
+    }
+  }
+
+  /**
+   * Escape and encode a string regarded as the path component of an URI.
+   * @param path the path component to encode
+   * @return encoded path, null if UTF-8 is not supported
+   */
+  public static String encodePath(final String path) {
+    try {
+      return URIUtil.encodePath(path, "UTF-8");
+    } catch (URIException e) {
+      throw new AssertionError("JVM does not support UTF-8"); // should never happen!
+    }
+  }
+
+  /**
+   * Parse and decode the path component from the given request.
+   * @param request Http request to parse
+   * @param servletName the name of servlet that precedes the path
+   * @return decoded path component, null if UTF-8 is not supported
+   */
+  public static String getDecodedPath(final HttpServletRequest request, String servletName) {
+    try {
+      return URIUtil.decode(getRawPath(request, servletName), "UTF-8");
+    } catch (URIException e) {
+      throw new AssertionError("JVM does not support UTF-8"); // should never happen!
+    }
+  }
+
+  /**
+   * Parse the path component from the given request and return w/o decoding.
+   * @param request Http request to parse
+   * @param servletName the name of servlet that precedes the path
+   * @return path component, null if the default charset is not supported
+   */
+  public static String getRawPath(final HttpServletRequest request, String servletName) {
+    Preconditions.checkArgument(request.getRequestURI().startsWith(servletName+"/"));
+    return request.getRequestURI().substring(servletName.length());
+  }
+}

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS65 INS65 INS65 INS42 INS83 INS43 INS42 INS54 INS65 INS65 INS65 INS42 INS83 INS43 INS42 INS54 INS65 INS65 INS65 INS65 INS42 INS83 INS43 INS42 INS43 INS42 INS54 INS65 INS65 INS65 INS65 INS42 INS83 INS43 INS42 INS43 INS42 INS21 INS41 INS66 INS42 INS66 INS66 INS42 INS8 INS12 INS66 INS42 INS66 INS66 INS42 INS8 INS12 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS8 INS12 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS32 INS32 INS41 INS44 INS8 INS41 INS44 INS8 INS41 INS44 INS8 INS42 INS42 INS32 INS32 INS42 INS32 INS32 INS43 INS42 INS53 INS32 INS43 INS42 INS53 INS32 INS43 INS42 INS53 INS32 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS14 INS42 INS42 INS42 INS45 INS42 INS14 INS42 INS42 INS32 INS45 INS42 INS14 INS42 INS42 INS42 INS45 INS43 INS45 INS43 INS45 INS42 INS42 INS42 INS43 INS45 INS42 INS42 INS42