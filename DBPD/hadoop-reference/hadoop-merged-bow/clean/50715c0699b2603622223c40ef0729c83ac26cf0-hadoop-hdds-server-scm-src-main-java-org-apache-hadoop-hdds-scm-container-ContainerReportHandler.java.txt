HDDS-662. Introduce ContainerReplicaState in StorageContainerManager. Contributed by Nanda kumar.

-import org.apache.hadoop.hdds.scm.container.common.helpers.ContainerInfo;
-import org.apache.hadoop.hdds.scm.exceptions.SCMException;
-
-
-  private ContainerStateManager containerStateManager;
-
-    this.containerStateManager = containerManager.getStateManager();
-          .processContainerReports(datanodeOrigin, containerReport, false);
+          .processContainerReports(datanodeOrigin, containerReport);
-        containerStateManager
-            .removeContainerReplica(containerID, datanodeOrigin);
+        final ContainerReplica replica = ContainerReplica.newBuilder()
+            .setContainerID(containerID)
+            .setDatanodeDetails(datanodeOrigin)
+            .build();
+        containerManager
+            .removeContainerReplica(containerID, replica);
-        containerStateManager.addContainerReplica(containerID, datanodeOrigin);
+        final ContainerReplica replica = ContainerReplica.newBuilder()
+            .setContainerID(containerID)
+            .setDatanodeDetails(datanodeOrigin)
+            .build();
+        containerManager.updateContainerReplica(containerID, replica);
-      EventPublisher publisher)
-      throws SCMException {
-    ContainerInfo container = containerStateManager.getContainer(containerID);
-
-    if (container == null) {
-      //warning unknown container
+      EventPublisher publisher) {
+    try {
+      ContainerInfo container = containerManager.getContainer(containerID);
+      replicateIfNeeded(container, publisher);
+    } catch (ContainerNotFoundException ex) {
-      return;
-    }
-    if (container.isContainerOpen()) {
-      return;
-    ReplicationRequest replicationState =
-        containerStateManager.checkReplicationState(containerID);
-    if (replicationState != null) {
-      if (replicationStatus.isReplicationEnabled()) {
+  }
+
+  private void replicateIfNeeded(ContainerInfo container,
+      EventPublisher publisher) throws ContainerNotFoundException {
+    if (!container.isOpen() && replicationStatus.isReplicationEnabled()) {
+      final int existingReplicas = containerManager
+          .getContainerReplicas(container.containerID()).size();
+      final int expectedReplicas = container.getReplicationFactor().getNumber();
+      if (existingReplicas != expectedReplicas) {
-            replicationState);
-      } else {
-        LOG.warn(
-            "Over/under replicated container but the replication is not "
-                + "(yet) enabled: "
-                + replicationState.toString());
+            new ReplicationRequest(container.getContainerID(),
+                existingReplicas, expectedReplicas));
-

INS31 INS83 INS39 INS42 MOV44 MOV44 INS8 UPD42 INS44 INS44 UPD43 INS54 INS43 INS42 INS43 INS42 UPD42 INS25 INS8 INS12 INS42 INS42 INS27 INS8 INS60 INS21 INS44 MOV8 INS38 MOV32 INS60 MOV60 MOV25 MOV43 INS59 INS32 INS43 INS42 INS32 INS83 INS39 INS59 INS83 INS39 INS60 INS60 INS42 INS32 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS32 UPD42 UPD42 INS42 INS21 INS83 INS43 INS59 INS83 INS43 INS59 INS42 INS42 INS42 INS32 INS42 INS32 UPD42 INS32 INS42 INS42 INS32 UPD42 UPD42 INS42 INS42 INS32 UPD42 UPD42 UPD42 UPD42 MOV42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 MOV42 MOV42 MOV40 INS14 INS32 INS42 INS32 INS42 MOV42 UPD42 MOV42 MOV43 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL42 DEL32 DEL7 DEL21 DEL9 DEL41 DEL33 DEL32 DEL21 DEL8 DEL42 DEL45 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL25 DEL32 DEL41 DEL8 DEL25