HDDS-2161. Create RepeatedKeyInfo structure to be saved in deletedTable

Signed-off-by: Anu Engineer <aengineer@apache.org>

-import org.apache.hadoop.ozone.OmUtils;
+import org.apache.hadoop.ozone.om.helpers.RepeatedOmKeyInfo;
-  private long deleteTimestamp;
-  public OMKeyDeleteResponse(OmKeyInfo omKeyInfo, long deletionTime,
-      OMResponse omResponse) {
+  public OMKeyDeleteResponse(OmKeyInfo omKeyInfo, OMResponse omResponse) {
-    this.deleteTimestamp = deletionTime;
-        // lost. To differentiate between keys with same name in
-        // deletedTable, we add the timestamp to the key name.
-        String deleteKeyName = OmUtils.getDeletedKeyName(
-            ozoneKey, deleteTimestamp);
+        // lost. To avoid this, first check if a key with same name exists.
+        // deletedTable in OM Metadata stores <KeyName, RepeatedOMKeyInfo>.
+        // The RepeatedOmKeyInfo is the structure that allows us to store a
+        // list of OmKeyInfo that can be tied to same key name. For a keyName
+        // if RepeatedOMKeyInfo structure is null, we create a new instance,
+        // if it is not null, then we simply add to the list and store this
+        // instance in deletedTable.
+        RepeatedOmKeyInfo repeatedOmKeyInfo =
+            omMetadataManager.getDeletedTable().get(ozoneKey);
+        if(repeatedOmKeyInfo == null) {
+          repeatedOmKeyInfo = new RepeatedOmKeyInfo(omKeyInfo);
+        } else {
+          repeatedOmKeyInfo.addOmKeyInfo(omKeyInfo);
+        }
-            deleteKeyName, omKeyInfo);
+            ozoneKey, repeatedOmKeyInfo);

MOV26 UPD40 INS25 UPD43 INS27 INS8 INS8 UPD42 UPD42 INS42 INS33 INS21 INS21 UPD42 UPD42 INS32 INS42 INS7 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS14 INS42 INS42 INS42 INS43 INS42 INS42 DEL83 DEL39 DEL42 DEL59 DEL23 DEL39 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42