Merge r1555021 through r1565516 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1565519 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.LocalConfigurationProvider;
+import org.apache.hadoop.yarn.api.protocolrecords.ApplicationsRequestScope;
+import com.google.common.annotations.VisibleForTesting;
+  private boolean useLocalConfigurationProvider;
+    this.useLocalConfigurationProvider =
+        (LocalConfigurationProvider.class.isAssignableFrom(conf.getClass(
+            YarnConfiguration.RM_CONFIGURATION_PROVIDER_CLASS,
+            LocalConfigurationProvider.class)));
+    Set<String> tags = request.getApplicationTags();
+    ApplicationsRequestScope scope = request.getScope();
+
+      // Check if current application falls under the specified scope
+      boolean allowAccess = checkAccess(callerUGI, application.getUser(),
+          ApplicationAccessType.VIEW_APP, application);
+      if (scope == ApplicationsRequestScope.OWN &&
+          !callerUGI.getUserName().equals(application.getUser())) {
+        continue;
+      } else if (scope == ApplicationsRequestScope.VIEWABLE && !allowAccess) {
+        continue;
+      }
+
-      boolean allowAccess = checkAccess(callerUGI, application.getUser(),
-          ApplicationAccessType.VIEW_APP, application);
+      if (tags != null && !tags.isEmpty()) {
+        Set<String> appTags = application.getApplicationTags();
+        if (appTags == null || appTags.isEmpty()) {
+          continue;
+        }
+        boolean match = false;
+        for (String tag : tags) {
+          if (appTags.contains(tag)) {
+            match = true;
+            break;
+          }
+        }
+        if (!match) {
+          continue;
+        }
+      }
+
-    this.server.refreshServiceAcl(configuration, policyProvider);
+    if (this.useLocalConfigurationProvider) {
+      this.server.refreshServiceAcl(configuration, policyProvider);
+    } else {
+      this.server.refreshServiceAclWithConfigration(configuration,
+          policyProvider);
+    }
+
+  @VisibleForTesting
+  public Server getServer() {
+    return this.server;
+  }

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS31 INS83 INS39 INS59 INS8 INS78 INS83 INS43 INS42 INS8 INS42 INS21 INS60 INS60 INS25 INS42 INS42 INS41 INS7 INS74 INS59 INS43 INS59 MOV60 INS22 MOV8 INS8 INS22 INS22 INS36 INS43 INS43 INS42 INS32 INS42 INS42 INS32 INS25 INS25 INS52 INS42 INS21 INS52 INS42 INS52 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS8 INS25 INS27 INS8 INS32 INS57 INS42 INS32 INS27 INS38 INS18 INS27 INS8 INS27 INS38 INS60 INS25 INS60 INS70 INS25 INS22 INS42 INS42 INS42 INS43 INS42 INS42 INS40 INS57 INS42 INS40 INS32 INS27 INS38 INS18 INS42 INS33 INS32 INS74 INS59 INS27 INS8 INS39 INS59 INS44 INS42 INS8 INS38 INS8 INS52 INS42 INS42 INS43 INS32 INS42 INS32 INS42 INS40 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS27 INS32 INS18 INS42 INS9 INS43 INS42 INS25 INS42 INS18 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS32 INS8 INS42 INS42 INS42 INS21 INS10 INS7 INS42 INS9