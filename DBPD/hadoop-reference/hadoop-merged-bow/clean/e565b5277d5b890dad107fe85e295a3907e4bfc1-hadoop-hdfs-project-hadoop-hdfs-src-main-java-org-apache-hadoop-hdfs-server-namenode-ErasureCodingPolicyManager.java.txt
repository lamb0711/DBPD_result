HDFS-12682. ECAdmin -listPolicies will always show SystemErasureCodingPolicies state as DISABLED.

+import org.apache.hadoop.hdfs.protocol.ErasureCodingPolicyInfo;
-  private Map<String, ErasureCodingPolicy> policiesByName;
+  private Map<String, ErasureCodingPolicyInfo> policiesByName;
-  private Map<Byte, ErasureCodingPolicy> policiesByID;
+  private Map<Byte, ErasureCodingPolicyInfo> policiesByID;
-  private ErasureCodingPolicy[] allPolicies;
+  private ErasureCodingPolicyInfo[] allPolicies;
-      policiesByName.put(policy.getName(), policy);
-      policiesByID.put(policy.getId(), policy);
+      final ErasureCodingPolicyInfo info = new ErasureCodingPolicyInfo(policy);
+      policiesByName.put(policy.getName(), info);
+      policiesByID.put(policy.getId(), info);
-    if (!defaultPolicyName.trim().isEmpty()) {
-      ErasureCodingPolicy ecPolicy = policiesByName.get(defaultPolicyName);
-      if (ecPolicy == null) {
+    if (!defaultPolicyName.isEmpty()) {
+      final ErasureCodingPolicyInfo info =
+          policiesByName.get(defaultPolicyName);
+      if (info == null) {
-            .stream().map(ErasureCodingPolicy::getName)
+            .stream().map((pi) -> pi.getPolicy().getName())
-      enabledPoliciesByName.put(ecPolicy.getName(), ecPolicy);
+      info.setState(ErasureCodingPolicyState.ENABLED);
+      enabledPoliciesByName.put(info.getPolicy().getName(), info.getPolicy());
-    allPolicies = policiesByName.values().toArray(new ErasureCodingPolicy[0]);
+    allPolicies =
+        policiesByName.values().toArray(new ErasureCodingPolicyInfo[0]);
-  public ErasureCodingPolicy[] getPolicies() {
+  public ErasureCodingPolicyInfo[] getPolicies() {
-   * Get a policy by policy ID, including system policy and user defined policy.
+   * Get a {@link ErasureCodingPolicy} by policy ID, including system policy
+   * and user defined policy.
+    final ErasureCodingPolicyInfo ecpi = getPolicyInfoByID(id);
+    if (ecpi == null) {
+      return null;
+    }
+    return ecpi.getPolicy();
+  }
+
+  /**
+   * Get a {@link ErasureCodingPolicyInfo} by policy ID, including system policy
+   * and user defined policy.
+   */
+  private ErasureCodingPolicyInfo getPolicyInfoByID(final byte id) {
-   * Get a policy by policy ID, including system policy and user defined policy.
+   * Get a {@link ErasureCodingPolicy} by policy name, including system
+   * policy and user defined policy.
+    final ErasureCodingPolicyInfo ecpi = getPolicyInfoByName(name);
+    if (ecpi == null) {
+      return null;
+    }
+    return ecpi.getPolicy();
+  }
+
+  /**
+   * Get a {@link ErasureCodingPolicyInfo} by policy name, including system
+   * policy and user defined policy.
+   * @return ecPolicy, or null if not found
+   */
+  private ErasureCodingPolicyInfo getPolicyInfoByName(final String name) {
-    // Set policy state into DISABLED when adding into Hadoop.
-    policy.setState(ErasureCodingPolicyState.DISABLED);
-
-    for (ErasureCodingPolicy p : getPolicies()) {
+    for (ErasureCodingPolicyInfo info : getPolicies()) {
+      final ErasureCodingPolicy p = info.getPolicy();
-    policy.setName(assignedNewName);
-    policy.setId(getNextAvailablePolicyID());
-    this.policiesByName.put(policy.getName(), policy);
-    this.policiesByID.put(policy.getId(), policy);
-    allPolicies = policiesByName.values().toArray(new ErasureCodingPolicy[0]);
+    policy = new ErasureCodingPolicy(assignedNewName, policy.getSchema(),
+        policy.getCellSize(), getNextAvailablePolicyID());
+    final ErasureCodingPolicyInfo pi = new ErasureCodingPolicyInfo(policy);
+    this.policiesByName.put(policy.getName(), pi);
+    this.policiesByID.put(policy.getId(), pi);
+    allPolicies =
+        policiesByName.values().toArray(new ErasureCodingPolicyInfo[0]);
-    ErasureCodingPolicy ecPolicy = policiesByName.get(name);
-    if (ecPolicy == null) {
+    final ErasureCodingPolicyInfo info = policiesByName.get(name);
+    if (info == null) {
+    final ErasureCodingPolicy ecPolicy = info.getPolicy();
-    ecPolicy.setState(ErasureCodingPolicyState.REMOVED);
+    info.setState(ErasureCodingPolicyState.REMOVED);
-    ArrayList<ErasureCodingPolicy> removedPolicies =
-        new ArrayList<ErasureCodingPolicy>();
-    for (ErasureCodingPolicy ecPolicy : policiesByName.values()) {
-      if (ecPolicy.isRemoved()) {
+    ArrayList<ErasureCodingPolicy> removedPolicies = new ArrayList<>();
+    for (ErasureCodingPolicyInfo info : policiesByName.values()) {
+      final ErasureCodingPolicy ecPolicy = info.getPolicy();
+      if (info.isRemoved()) {
-    ErasureCodingPolicy ecPolicy = policiesByName.get(name);
-    if (ecPolicy == null) {
+    ErasureCodingPolicyInfo info = policiesByName.get(name);
+    if (info == null) {
-    ecPolicy.setState(ErasureCodingPolicyState.DISABLED);
+    info.setState(ErasureCodingPolicyState.DISABLED);
-    ErasureCodingPolicy ecPolicy = policiesByName.get(name);
-    if (ecPolicy == null) {
+    final ErasureCodingPolicyInfo info = policiesByName.get(name);
+    if (info == null) {
+    final ErasureCodingPolicy ecPolicy = info.getPolicy();
-    ecPolicy.setState(ErasureCodingPolicyState.ENABLED);
+    info.setState(ErasureCodingPolicyState.ENABLED);
-  private void loadPolicy(ErasureCodingPolicy policy) {
+  private void loadPolicy(ErasureCodingPolicyInfo info) {
+    Preconditions.checkNotNull(info);
+    final ErasureCodingPolicy policy = info.getPolicy();
-      policy.setState(ErasureCodingPolicyState.DISABLED);
+      info.setState(ErasureCodingPolicyState.DISABLED);
-    this.policiesByName.put(policy.getName(), policy);
-    this.policiesByID.put(policy.getId(), policy);
-    if (policy.isEnabled()) {
+    this.policiesByName.put(policy.getName(), info);
+    this.policiesByID.put(policy.getId(), info);
+    if (info.isEnabled()) {
-  public synchronized void loadPolicies(List<ErasureCodingPolicy> ecPolicies) {
+  public synchronized void loadPolicies(
+      List<ErasureCodingPolicyInfo> ecPolicies) {
-    for (ErasureCodingPolicy p : ecPolicies) {
+    for (ErasureCodingPolicyInfo p : ecPolicies) {
-    allPolicies = policiesByName.values().toArray(new ErasureCodingPolicy[0]);
+    allPolicies =
+        policiesByName.values().toArray(new ErasureCodingPolicyInfo[0]);

INS26 INS40 INS31 INS31 UPD74 UPD74 UPD5 UPD5 INS8 INS29 INS83 INS43 INS42 INS44 MOV8 INS8 INS29 INS83 INS43 INS42 INS44 MOV8 UPD43 UPD43 UPD43 UPD43 MOV65 INS60 INS25 INS41 INS65 INS42 INS83 INS39 INS42 MOV65 INS60 INS25 INS41 INS65 INS65 INS42 INS83 INS43 INS42 INS21 INS60 INS60 INS25 INS60 MOV60 MOV25 UPD43 UPD42 INS21 INS60 UPD74 UPD42 UPD42 UPD42 UPD42 INS66 INS65 UPD66 INS66 INS83 INS43 INS59 INS27 INS8 INS32 INS66 INS65 INS66 INS66 INS66 INS65 INS66 UPD66 INS83 INS43 INS59 INS27 INS8 INS32 INS66 INS65 INS66 INS66 INS66 INS42 INS7 INS83 INS43 INS59 INS83 INS43 INS59 INS27 INS8 INS83 INS43 INS59 MOV74 INS59 UPD43 MOV8 INS83 UPD43 INS83 UPD42 INS32 INS83 INS43 INS59 UPD43 INS60 INS21 INS42 INS42 INS42 INS32 INS42 INS33 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS41 INS42 INS42 INS42 UPD43 UPD42 INS60 INS42 INS14 INS42 INS42 INS14 UPD42 UPD42 INS42 INS42 INS32 INS42 INS33 INS53 INS42 INS42 INS32 UPD42 INS42 INS14 UPD43 UPD42 INS60 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 UPD42 UPD42 UPD42 UPD43 INS83 INS43 INS59 MOV42 INS83 UPD43 INS32 INS42 INS42 INS33 INS42 INS42 INS33 UPD42 INS83 INS43 INS59 INS43 INS42 INS32 INS32 MOV32 INS43 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS74 UPD42 INS83 INS43 INS59 UPD42 UPD42 INS42 INS42 UPD42 INS42 INS42 INS14 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS40 INS32 UPD5 INS42 INS42 INS32 INS42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 INS42 UPD5 INS43 INS27 MOV43 INS42 INS42 INS32 UPD42 MOV43 UPD42 UPD5 INS43 INS42 INS32 INS42 UPD42 MOV42 UPD43 INS42 INS42 UPD43 INS42 INS45 INS42 INS45 INS42 INS42 MOV42 MOV45 UPD43 INS42 INS42 UPD42 MOV42 UPD42 UPD42 UPD42 INS86 INS59 INS32 INS42 INS32 INS42 INS42 INS42 DEL42 DEL32 DEL42 DEL42 DEL90 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL32 DEL21 DEL32 DEL21 DEL42 DEL43 DEL74 DEL42 DEL14 DEL59 DEL42 DEL33 DEL27 DEL25