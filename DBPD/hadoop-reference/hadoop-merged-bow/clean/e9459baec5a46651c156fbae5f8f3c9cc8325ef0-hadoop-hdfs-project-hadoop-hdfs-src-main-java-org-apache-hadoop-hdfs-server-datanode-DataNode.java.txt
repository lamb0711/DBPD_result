HDFS-5522. Datanode disk error check may be incorrectly skipped. Contributed by Rushabh Shah.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594055 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.util.DiskChecker.DiskOutOfSpaceException;
-import java.nio.channels.ClosedByInterruptException;
-import java.nio.channels.ClosedChannelException;
+  private Thread checkDiskErrorThread = null;
+  protected final int checkDiskErrorInterval = 5*1000;
+  private boolean checkDiskErrorFlag = false;
+  private Object checkDiskErrorMutex = new Object();
+  private long lastDiskErrorCheck;
+    this.lastDiskErrorCheck = 0;
+    // Interrupt the checkDiskErrorThread and terminate it.
+    if(this.checkDiskErrorThread != null) {
+      this.checkDiskErrorThread.interrupt();
+    }
+    
-  /** Check if there is no space in disk 
-   *  @param e that caused this checkDiskError call
-   **/
-  protected void checkDiskError(Exception e ) throws IOException {
-    
-    LOG.warn("checkDiskError: exception: ", e);
-    if (isNetworkRelatedException(e)) {
-      LOG.info("Not checking disk as checkDiskError was called on a network" +
-      		" related exception");	
-      return;
-    }
-    if (e.getMessage() != null &&
-        e.getMessage().startsWith("No space left on device")) {
-      throw new DiskOutOfSpaceException("No space left on device");
-    } else {
-      checkDiskError();
-    }
-  }
-  
-  /**
-   * Check if the provided exception looks like it's from a network error
-   * @param e the exception from a checkDiskError call
-   * @return true if this exception is network related, false otherwise
-   */
-  protected boolean isNetworkRelatedException(Exception e) {
-    if (e instanceof SocketException 
-        || e instanceof SocketTimeoutException
-        || e instanceof ClosedChannelException 
-        || e instanceof ClosedByInterruptException) {
-      return true;
-    }
-    
-    String msg = e.getMessage();
-    
-    return null != msg 
-        && (msg.startsWith("An established connection was aborted")
-            || msg.startsWith("Broken pipe")
-            || msg.startsWith("Connection reset")
-            || msg.contains("java.nio.channels.SocketChannel"));
-  }
-  
-    try {
-      data.checkDataDir();
-    } catch (DiskErrorException de) {
-      handleDiskError(de.getMessage());
+    synchronized(checkDiskErrorMutex) {
+      checkDiskErrorFlag = true;
+      if(checkDiskErrorThread == null) {
+        startCheckDiskErrorThread();
+        checkDiskErrorThread.start();
+        LOG.info("Starting CheckDiskError Thread");
+      }
-          // check if there are any disk problem
-        try{
-          checkDiskError(ie);
-        } catch(IOException e) {
-            LOG.warn("DataNode.checkDiskError failed in run() with: ", e);
-        }
-        
+        // check if there are any disk problem
+        checkDiskError();
-}
+  
+  /**
+   * Starts a new thread which will check for disk error check request 
+   * every 5 sec
+   */
+  private void startCheckDiskErrorThread() {
+    checkDiskErrorThread = new Thread(new Runnable() {
+          @Override
+          public void run() {
+            while(shouldRun) {
+              boolean tempFlag ;
+              synchronized(checkDiskErrorMutex) {
+                tempFlag = checkDiskErrorFlag;
+                checkDiskErrorFlag = false;
+              }
+              if(tempFlag) {
+                try {
+                  data.checkDataDir();
+                } catch (DiskErrorException de) {
+                  handleDiskError(de.getMessage());
+                } catch (Exception e) {
+                  LOG.warn("Unexpected exception occurred while checking disk error  " + e);
+                  checkDiskErrorThread = null;
+                  return;
+                }
+                synchronized(checkDiskErrorMutex) {
+                  lastDiskErrorCheck = System.currentTimeMillis();
+                }
+              }
+              try {
+                Thread.sleep(checkDiskErrorInterval);
+              } catch (InterruptedException e) {
+                LOG.debug("InterruptedException in check disk error thread", e);
+                checkDiskErrorThread = null;
+                return;
+              }
+            }
+          }
+    });
+  }
+  
+  public long getLastDiskErrorCheck() {
+    synchronized(checkDiskErrorMutex) {
+      return lastDiskErrorCheck;
+    }
+  }
+}

MOV31 MOV31 INS23 INS23 INS23 INS23 INS23 INS31 INS83 INS43 INS59 INS83 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS43 INS59 INS83 INS39 INS59 MOV29 INS83 INS39 INS42 INS8 UPD83 UPD39 UPD42 UPD39 INS42 INS8 INS42 INS42 INS33 INS42 INS27 INS42 INS9 UPD42 MOV42 INS42 INS14 INS42 INS21 INS25 INS51 UPD65 INS21 INS51 INS34 INS34 INS43 INS7 INS27 INS8 INS42 INS8 UPD66 INS66 INS7 INS42 INS8 INS42 INS22 INS34 INS22 INS33 INS21 MOV21 MOV25 INS42 INS14 INS41 INS52 INS42 INS52 INS42 INS32 INS7 INS27 INS8 INS43 INS14 INS42 INS22 INS42 INS42 INS9 INS42 MOV33 INS21 INS21 INS21 MOV21 UPD42 MOV42 INS43 INS1 INS52 INS42 INS32 INS32 INS32 UPD42 MOV42 INS31 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS45 INS78 INS83 INS39 INS42 INS8 INS42 INS61 INS42 INS8 INS60 INS51 INS25 INS54 INS39 INS59 INS42 INS8 INS42 MOV8 INS8 INS12 INS42 INS21 INS21 INS51 INS21 INS44 INS8 INS7 INS7 INS12 INS42 INS8 INS32 INS43 INS42 INS21 INS21 INS41 INS42 INS42 INS42 INS9 MOV44 INS8 INS21 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS32 INS7 INS21 INS21 INS41 INS7 UPD42 MOV42 UPD42 MOV42 UPD45 MOV45 INS42 INS42 INS33 INS32 INS7 INS42 INS32 INS42 INS42 INS27 INS42 INS33 INS42 INS42 INS45 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL42 DEL45 DEL45 DEL27 DEL32 DEL42 DEL42 DEL32 DEL27 DEL32 DEL45 DEL32 DEL27 DEL42 DEL43 DEL45 DEL14 DEL53 DEL8 DEL8 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL43 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41 DEL8 DEL25 DEL8 DEL31 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL62 DEL42 DEL43 DEL62 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL43 DEL62 DEL27 DEL9 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL33 DEL42 DEL27 DEL45 DEL32 DEL42 DEL42 DEL45 DEL32 DEL32 DEL42 DEL42 DEL45 DEL32 DEL27 DEL36 DEL27 DEL41 DEL42