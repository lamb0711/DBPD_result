HDFS-2976 corrected the previous wrong commit for this issue.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1298507 13f79535-47bb-0310-9956-ffa450edef68

-   * Should the block access token be refetched on an exception
-   * 
-   * @param ex Exception received
-   * @param targetAddr Target datanode address from where exception was received
-   * @return true if block access token has expired or invalid and it should be
-   *         refetched
-   */
-  private static boolean tokenRefetchNeeded(IOException ex,
-      InetSocketAddress targetAddr) {
-    /*
-     * Get a new access token and retry. Retry is needed in 2 cases. 1) When
-     * both NN and DN re-started while DFSClient holding a cached access token.
-     * 2) In the case that NN fails to update its access key at pre-set interval
-     * (by a wide margin) and subsequently restarts. In this case, DN
-     * re-registers itself with NN and receives a new access key, but DN will
-     * delete the old access key from its memory since it's considered expired
-     * based on the estimated expiration date.
-     */
-    if (ex instanceof InvalidBlockTokenException || ex instanceof InvalidToken) {
-      LOG.info("Access token was invalid when connecting to " + targetAddr
-          + " : " + ex);
-      return true;
-    }
-    return false;
-  }
-  
-  /**
-   * Should the block access token be refetched on an exception
-   * 
-   * @param ex Exception received
-   * @param targetAddr Target datanode address from where exception was received
-   * @return true if block access token has expired or invalid and it should be
-   *         refetched
-   */
-  private static boolean tokenRefetchNeeded(IOException ex,
-      InetSocketAddress targetAddr) {
-    /*
-     * Get a new access token and retry. Retry is needed in 2 cases. 1) When
-     * both NN and DN re-started while DFSClient holding a cached access token.
-     * 2) In the case that NN fails to update its access key at pre-set interval
-     * (by a wide margin) and subsequently restarts. In this case, DN
-     * re-registers itself with NN and receives a new access key, but DN will
-     * delete the old access key from its memory since it's considered expired
-     * based on the estimated expiration date.
-     */
-    if (ex instanceof InvalidBlockTokenException || ex instanceof InvalidToken) {
-      LOG.info("Access token was invalid when connecting to " + targetAddr
-          + " : " + ex);
-      return true;
-    }
-    return false;
-  }
-  
-  /**

DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL43 DEL62 DEL27 DEL42 DEL42 DEL45 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL9 DEL41 DEL8 DEL25 DEL9 DEL41 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL62 DEL42 DEL42 DEL43 DEL62 DEL27 DEL42 DEL42 DEL45 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL9 DEL41 DEL8 DEL25 DEL9 DEL41 DEL8 DEL31