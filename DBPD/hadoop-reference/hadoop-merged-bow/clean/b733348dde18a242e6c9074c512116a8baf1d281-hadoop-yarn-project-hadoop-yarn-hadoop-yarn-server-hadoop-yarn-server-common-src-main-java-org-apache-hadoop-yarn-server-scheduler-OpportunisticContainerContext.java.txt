YARN-7258. Add Node and Rack Hints to Opportunistic Scheduler. (Kartheek Muthyala via asuresh).

-import org.apache.hadoop.yarn.api.records.Container;
+import static org.apache.hadoop.yarn.server.scheduler.OpportunisticContainerAllocator.Allocation;
+import static org.apache.hadoop.yarn.server.scheduler.OpportunisticContainerAllocator.EnrichedResourceRequest;
-  private final Map<String, RemoteNode> nodeMap = new LinkedHashMap<>();
+  private final LinkedHashMap<String, RemoteNode> nodeMap =
+      new LinkedHashMap<>();
-  private final TreeMap<SchedulerRequestKey, Map<Resource, ResourceRequest>>
+  private final TreeMap
+      <SchedulerRequestKey, Map<Resource, EnrichedResourceRequest>>
-  public TreeMap<SchedulerRequestKey, Map<Resource, ResourceRequest>>
+  public TreeMap<SchedulerRequestKey, Map<Resource, EnrichedResourceRequest>>
-      // TODO: Extend for Node/Rack locality. We only handle ANY requests now
-      if (!ResourceRequest.isAnyLocation(request.getResourceName())) {
-        continue;
-      }
-
-      if (request.getNumContainers() == 0) {
-        continue;
-      }
-
-      Map<Resource, ResourceRequest> reqMap =
+      Map<Resource, EnrichedResourceRequest> reqMap =
-      ResourceRequest resourceRequest = reqMap.get(request.getCapability());
-      if (resourceRequest == null) {
-        resourceRequest = request;
-        reqMap.put(request.getCapability(), request);
+      EnrichedResourceRequest eReq = reqMap.get(request.getCapability());
+      if (eReq == null) {
+        eReq = new EnrichedResourceRequest(request);
+        reqMap.put(request.getCapability(), eReq);
+      }
+      // Set numContainers only for ANY request
+      if (ResourceRequest.isAnyLocation(request.getResourceName())) {
+        eReq.getRequest().setResourceName(ResourceRequest.ANY);
+        eReq.getRequest().setNumContainers(request.getNumContainers());
-        resourceRequest.setNumContainers(
-            resourceRequest.getNumContainers() + request.getNumContainers());
+        eReq.addLocation(request.getResourceName(), request.getNumContainers());
-            + resourceRequest.getNumContainers());
+            + ", with location = " + request.getResourceName() + " ) : "
+            + ", numContainers = " + eReq.getRequest().getNumContainers());
-   * @param allocatedContainers Allocated Containers
+   * @param allocations Allocations.
-      List<Container> allocatedContainers) {
-    for (Container c : allocatedContainers) {
+      List<Allocation> allocations) {
+    for (OpportunisticContainerAllocator.Allocation allocation : allocations) {
-          SchedulerRequestKey.extractFrom(c);
-      Map<Resource, ResourceRequest> asks =
+          SchedulerRequestKey.extractFrom(allocation.getContainer());
+      Map<Resource, EnrichedResourceRequest> asks =
-      ResourceRequest rr = asks.get(capability);
-      if (rr != null) {
-        rr.setNumContainers(rr.getNumContainers() - 1);
-        if (rr.getNumContainers() == 0) {
+      EnrichedResourceRequest err = asks.get(capability);
+      if (err != null) {
+        int numContainers = err.getRequest().getNumContainers();
+        numContainers--;
+        err.getRequest().setNumContainers(numContainers);
+        if (numContainers == 0) {
+          if (asks.size() == 0) {
+            outstandingOpReqs.remove(schedulerKey);
+          }
+        } else {
+          if (!ResourceRequest.isAnyLocation(allocation.getResourceName())) {
+            err.removeLocation(allocation.getResourceName());
+          }

MOV26 INS26 UPD40 INS40 UPD74 UPD74 UPD74 UPD43 UPD74 UPD74 UPD74 UPD42 UPD42 UPD43 UPD43 MOV25 UPD42 UPD66 UPD43 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 UPD74 UPD43 MOV32 INS8 INS40 UPD74 UPD43 UPD43 UPD42 UPD42 UPD42 INS21 INS21 INS21 UPD43 UPD42 UPD42 UPD42 INS60 INS21 INS21 INS25 UPD42 INS32 INS32 INS32 INS32 UPD42 INS39 INS59 INS37 INS32 INS27 INS8 INS8 INS42 INS14 UPD42 INS32 INS42 INS40 INS32 INS42 MOV32 INS42 INS42 INS32 MOV32 UPD42 MOV42 INS42 INS42 INS32 INS42 INS32 UPD42 MOV42 INS42 INS42 UPD34 MOV34 MOV21 MOV25 INS25 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS45 INS45 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS38 INS8 INS42 INS42 INS42 INS32 UPD42 MOV42 INS42 INS21 INS32 INS21 INS42 UPD42 MOV42 UPD42 UPD42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 DEL34 DEL27 DEL18 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL38 DEL18 DEL42 DEL32 DEL27 DEL32 DEL21