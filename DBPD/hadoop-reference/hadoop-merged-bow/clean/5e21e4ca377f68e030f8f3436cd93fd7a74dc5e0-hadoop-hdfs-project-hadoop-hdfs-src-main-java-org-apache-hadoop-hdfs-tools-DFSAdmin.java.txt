HDFS-6353. Check and make checkpoint before stopping the NameNode. Contributed by Jing Zhao.

-import java.io.FileNotFoundException;
-    "\t[-saveNamespace]\n" +
+    "\t[-saveNamespace [-beforeShutdown]]\n" +
-   * @exception IOException 
-   * @see org.apache.hadoop.hdfs.protocol.ClientProtocol#saveNamespace()
+   * @see ClientProtocol#saveNamespace(long, long)
-  public int saveNamespace() throws IOException {
-    int exitCode = -1;
+  public int saveNamespace(String[] argv) throws IOException {
+    final DistributedFileSystem dfs = getDFS();
+    final Configuration dfsConf = dfs.getConf();
-    DistributedFileSystem dfs = getDFS();
-    Configuration dfsConf = dfs.getConf();
+    long timeWindow = 0;
+    long txGap = 0;
+    if (argv.length > 1 && "-beforeShutdown".equals(argv[1])) {
+      final long checkpointPeriod = dfsConf.getLong(
+          DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_PERIOD_KEY,
+          DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_PERIOD_DEFAULT);
+      final long checkpointTxnCount = dfsConf.getLong(
+          DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_TXNS_KEY,
+          DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_TXNS_DEFAULT);
+      final int toleratePeriodNum = dfsConf.getInt(
+          DFSConfigKeys.DFS_NAMENODE_MISSING_CHECKPOINT_PERIODS_BEFORE_SHUTDOWN_KEY,
+          DFSConfigKeys.DFS_NAMENODE_MISSING_CHECKPOINT_PERIODS_BEFORE_SHUTDONW_DEFAULT);
+      timeWindow = checkpointPeriod * toleratePeriodNum;
+      txGap = checkpointTxnCount * toleratePeriodNum;
+      System.out.println("Do checkpoint if necessary before stopping " +
+          "namenode. The time window is " + timeWindow + " seconds, and the " +
+          "transaction gap is " + txGap);
+    }
+
-
-        proxy.getProxy().saveNamespace();
-        System.out.println("Save namespace successful for " +
-            proxy.getAddress());
+        boolean saved = proxy.getProxy().saveNamespace(timeWindow, txGap);
+        if (saved) {
+          System.out.println("Save namespace successful for " +
+              proxy.getAddress());
+        } else {
+          System.out.println("No extra checkpoint has been made for "
+              + proxy.getAddress());
+        }
-      dfs.saveNamespace();
-      System.out.println("Save namespace successful");
+      boolean saved = dfs.saveNamespace(timeWindow, txGap);
+      if (saved) {
+        System.out.println("Save namespace successful");
+      } else {
+        System.out.println("No extra checkpoint has been made");
+      }
-    exitCode = 0;
-   
-    return exitCode;
+    return 0;
-    String saveNamespace = "-saveNamespace:\t" +
-    "Save current namespace into storage directories and reset edits log.\n" +
-    "\t\tRequires safe mode.\n";
+    String saveNamespace = "-saveNamespace [-beforeShutdown]:\t" +
+        "Save current namespace into storage directories and reset edits \n" +
+        "\t\t log. Requires safe mode.\n" +
+        "\t\tIf the \"beforeShutdown\" option is given, the NameNode does a \n" +
+        "\t\tcheckpoint if and only if there is no checkpoint done during \n" +
+        "\t\ta time window (a configurable number of checkpoint periods).\n" +
+        "\t\tThis is usually used before shutting down the NameNode to \n" +
+        "\t\tprevent potential fsimage/editlog corruption.\n";
-                         + " [-saveNamespace]");
+          + " [-saveNamespace [-beforeShutdown]]");
-      System.err.println("Usage: hdfs dfsadmin"
-                         + " [-rollEdits]");
+      System.err.println("Usage: hdfs dfsadmin [-rollEdits]");
-      if (argv.length != 1) {
+      if (argv.length != 1 && argv.length != 2) {
-        exitCode = saveNamespace();
+        exitCode = saveNamespace(argv);

INS44 INS5 INS42 INS60 INS60 INS25 INS41 INS43 INS85 INS83 INS83 INS39 INS59 INS39 INS59 INS27 INS8 INS8 INS34 UPD45 INS42 INS69 INS69 INS42 INS42 INS34 INS42 INS34 INS27 INS32 INS60 INS60 MOV60 MOV21 INS21 INS21 INS60 INS25 INS39 INS39 INS40 INS34 INS45 INS42 INS2 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS7 INS32 INS8 INS39 INS59 INS42 MOV8 INS8 UPD45 UPD45 UPD45 INS45 INS45 INS45 INS45 INS45 INS42 INS34 INS42 INS32 INS42 INS32 UPD42 INS32 UPD42 INS27 INS42 INS27 INS40 INS42 INS27 INS60 INS25 INS42 INS32 INS21 INS42 INS42 INS40 INS40 INS42 INS42 INS40 INS40 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS42 INS27 INS42 INS45 INS45 INS42 INS39 INS59 INS42 MOV8 INS8 INS42 INS42 INS42 INS42 INS32 INS45 INS45 INS42 MOV32 INS21 INS40 INS42 INS45 INS42 INS42 INS32 INS27 INS40 INS42 INS27 MOV27 INS27 INS45 INS32 UPD45 INS45 INS40 INS34 INS42 INS42 INS42 DEL40 DEL26 DEL42 DEL66 DEL65 DEL40 DEL34 DEL38 DEL34 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL45 DEL45 DEL27