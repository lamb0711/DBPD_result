HDDS-1384. TestBlockOutputStreamWithFailures is failing

Closes #750

+import java.net.ServerSocket;
+import java.util.concurrent.atomic.AtomicInteger;
+    private static AtomicInteger lastUsedPort =
+        new AtomicInteger(1000);
+
-      configureHddsDatanodes();
-      String scmAddress =  scm.getDatanodeRpcAddress().getHostString() +
+
+      String scmAddress = scm.getDatanodeRpcAddress().getHostString() +
+
+        configureHddsDatanodes(dnConf);
-      conf.set(ScmConfigKeys.OZONE_SCM_CLIENT_ADDRESS_KEY, "127.0.0.1:0");
-      conf.set(ScmConfigKeys.OZONE_SCM_BLOCK_CLIENT_ADDRESS_KEY, "127.0.0.1:0");
-      conf.set(ScmConfigKeys.OZONE_SCM_DATANODE_ADDRESS_KEY, "127.0.0.1:0");
-      conf.set(ScmConfigKeys.OZONE_SCM_HTTP_ADDRESS_KEY, "127.0.0.1:0");
+      conf.set(ScmConfigKeys.OZONE_SCM_CLIENT_ADDRESS_KEY,
+          "127.0.0.1:" + findPort());
+      conf.set(ScmConfigKeys.OZONE_SCM_BLOCK_CLIENT_ADDRESS_KEY,
+          "127.0.0.1:" + findPort());
+      conf.set(ScmConfigKeys.OZONE_SCM_DATANODE_ADDRESS_KEY,
+          "127.0.0.1:" + findPort());
+      conf.set(ScmConfigKeys.OZONE_SCM_HTTP_ADDRESS_KEY,
+          "127.0.0.1:" + findPort());
-      conf.set(OMConfigKeys.OZONE_OM_ADDRESS_KEY, "127.0.0.1:0");
-      conf.set(OMConfigKeys.OZONE_OM_HTTP_ADDRESS_KEY, "127.0.0.1:0");
+      conf.set(OMConfigKeys.OZONE_OM_ADDRESS_KEY, "127.0.0.1:" + findPort());
+      conf.set(OMConfigKeys.OZONE_OM_HTTP_ADDRESS_KEY,
+          "127.0.0.1:" + findPort());
-    private void configureHddsDatanodes() {
-      conf.set(ScmConfigKeys.HDDS_REST_HTTP_ADDRESS_KEY, "0.0.0.0:0");
-      conf.set(HddsConfigKeys.HDDS_DATANODE_HTTP_ADDRESS_KEY, "0.0.0.0:0");
-      conf.set(HDDS_DATANODE_PLUGINS_KEY,
+    /**
+     * Return an available TCP port if available.
+     * <p>
+     * As we have a static counter the port should be unique inside the JVM..
+     */
+    private int findPort() {
+      while (lastUsedPort.get() < 65536) {
+        try {
+          int nextPort = lastUsedPort.incrementAndGet();
+          ServerSocket socket = new ServerSocket(nextPort);
+          socket.close();
+          return nextPort;
+        } catch (IOException ex) {
+          //port is not available, let's try the next one.
+          continue;
+        }
+      }
+      throw new RuntimeException("No available port");
+    }
+
+    private void configureHddsDatanodes(OzoneConfiguration dnConf) {
+      dnConf.set(ScmConfigKeys.HDDS_REST_HTTP_ADDRESS_KEY,
+          "0.0.0.0:" + findPort());
+      dnConf.set(HddsConfigKeys.HDDS_DATANODE_HTTP_ADDRESS_KEY,
+          "0.0.0.0:" + findPort());
+      dnConf.set(HDDS_DATANODE_PLUGINS_KEY,
-      conf.setBoolean(OzoneConfigKeys.DFS_CONTAINER_IPC_RANDOM_PORT,
+      dnConf.setBoolean(OzoneConfigKeys.DFS_CONTAINER_IPC_RANDOM_PORT,
-      conf.setBoolean(OzoneConfigKeys.DFS_CONTAINER_RATIS_IPC_RANDOM_PORT,
+      dnConf.setBoolean(OzoneConfigKeys.DFS_CONTAINER_RATIS_IPC_RANDOM_PORT,

INS26 INS26 INS40 INS40 INS23 INS31 INS83 INS83 INS43 INS59 INS29 INS83 INS39 INS42 INS8 INS44 INS42 INS42 INS14 INS65 INS61 INS53 INS43 INS42 INS43 INS34 INS66 INS66 INS66 INS27 INS8 INS14 INS42 INS42 INS21 INS27 INS27 INS27 INS27 INS27 INS27 INS32 INS34 INS54 INS43 INS45 UPD42 INS27 UPD42 INS27 UPD42 UPD42 UPD42 INS32 INS45 INS32 INS45 INS32 INS45 INS32 INS45 INS32 INS45 INS32 INS45 INS32 INS42 INS42 INS8 INS12 INS42 INS45 INS32 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS60 INS60 INS21 INS41 INS44 INS8 INS42 INS42 INS39 INS59 INS43 INS59 INS32 INS42 INS43 INS42 INS18 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 DEL42 DEL32 DEL21 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45