Merge trunk into HA branch.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1228339 13f79535-47bb-0310-9956-ffa450edef68

+import javax.xml.bind.annotation.XmlSeeAlso;
-import org.apache.hadoop.yarn.api.records.QueueState;
+@XmlSeeAlso({CapacitySchedulerLeafQueueInfo.class})
-  protected String queuePath;
-  @XmlTransient
-  protected Boolean isParent = false;
+  static final float EPSILON = 1e-8f;
-  // bit odd to store this but makes html easier for now
-  protected CSQueue queue;
+  protected String queuePath;
+  protected float absoluteCapacity;
+  protected float absoluteMaxCapacity;
+  protected float utilization;
+  protected int numApplications;
+  protected String usedResources;
-  protected QueueState state;
+  protected String state;
-  CapacitySchedulerQueueInfo(float cap, float used, float max, String name,
-      QueueState state, String path) {
-    this.capacity = cap;
-    this.usedCapacity = used;
-    this.maxCapacity = max;
-    this.queueName = name;
-    this.state = state;
-    this.queuePath = path;
-  }
+  CapacitySchedulerQueueInfo(CSQueue q) {
+    queuePath = q.getQueuePath();
+    capacity = q.getCapacity() * 100;
+    usedCapacity = q.getUsedCapacity() * 100;
-  public Boolean isParent() {
-    return this.isParent;
-  }
+    maxCapacity = q.getMaximumCapacity();
+    if (maxCapacity < EPSILON || maxCapacity > 1f)
+      maxCapacity = 1f;
+    maxCapacity *= 100;
-  public CSQueue getQueue() {
-    return this.queue;
+    absoluteCapacity = cap(q.getAbsoluteCapacity(), 0f, 1f) * 100;
+    absoluteMaxCapacity = cap(q.getAbsoluteMaximumCapacity(), 0f, 1f) * 100;
+    utilization = q.getUtilization() * 100;
+    numApplications = q.getNumApplications();
+    usedResources = q.getUsedResources().toString();
+    queueName = q.getQueueName();
+    state = q.getState().toString();
+  public float getAbsoluteCapacity() {
+    return absoluteCapacity;
+  }
+
+  public float getAbsoluteMaxCapacity() {
+    return absoluteMaxCapacity;
+  }
+
+  public float getUtilization() {
+    return utilization;
+  }
+
+  public int getNumApplications() {
+    return numApplications;
+  }
+
+  public String getUsedResources() {
+    return usedResources;
+  }
+
-    return this.state.toString();
+    return this.state;
+  /**
+   * Limit a value to a specified range.
+   * @param val the value to be capped
+   * @param low the lower bound of the range (inclusive)
+   * @param hi the upper bound of the range (inclusive)
+   * @return the capped value
+   */
+  static float cap(float val, float low, float hi) {
+    return Math.min(Math.max(val, low), hi);
+  }

MOV26 MOV23 MOV23 MOV31 UPD40 INS79 INS23 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS42 INS4 MOV78 INS83 INS83 INS39 INS59 INS39 INS83 INS39 INS59 MOV83 INS39 INS59 INS83 INS39 MOV59 UPD43 INS59 INS83 MOV43 MOV59 INS8 MOV83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 UPD42 MOV42 MOV8 MOV43 UPD42 MOV43 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS57 INS42 INS34 UPD42 INS42 INS42 UPD42 UPD42 INS42 MOV43 UPD42 INS21 INS21 INS21 INS21 INS25 INS21 MOV21 MOV21 MOV21 MOV21 MOV21 MOV21 INS21 INS41 INS41 INS41 INS65 INS65 INS65 INS65 INS65 INS39 INS42 INS39 INS42 INS39 INS42 INS41 INS43 INS7 INS7 INS7 INS7 INS27 INS21 INS7 INS7 INS42 INS42 INS42 INS42 INS42 MOV22 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS32 INS42 INS42 INS32 INS42 INS27 INS42 INS27 INS42 INS32 INS27 INS27 INS7 INS42 INS34 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS34 INS32 INS34 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS34 INS32 INS34 INS32 INS34 INS32 INS34 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS34 INS34 INS42 INS32 INS34 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL78 DEL42 DEL43 DEL23 DEL42 DEL43 DEL9 DEL39 DEL52 DEL42 DEL22 DEL42 DEL52 DEL42 DEL22 DEL42 DEL52 DEL42 DEL22 DEL42 DEL52 DEL42 DEL22 DEL42 DEL52 DEL42 DEL22 DEL42 DEL52 DEL42 DEL22 DEL42 DEL39 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL44 DEL8 DEL42 DEL43 DEL31 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL42 DEL32