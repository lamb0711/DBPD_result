YARN-3446. FairScheduler headroom calculation should exclude nodes in the blacklist. (Zhihai Xu via kasha)

+import java.util.concurrent.atomic.AtomicBoolean;
-
+  private AtomicBoolean userBlacklistChanged = new AtomicBoolean(false);
-   public void updateBlacklist(
+  public void updateBlacklist(
-     updateUserOrAMBlacklist(userBlacklist, blacklistAdditions,
-         blacklistRemovals);
+    if (updateUserOrAMBlacklist(userBlacklist, blacklistAdditions,
+        blacklistRemovals)) {
+      userBlacklistChanged.set(true);
+    }
-  void updateUserOrAMBlacklist(Set<String> blacklist,
+  boolean updateUserOrAMBlacklist(Set<String> blacklist,
+    boolean changed = false;
-        blacklist.addAll(blacklistAdditions);
+        changed = blacklist.addAll(blacklistAdditions);
-        blacklist.removeAll(blacklistRemovals);
+        if (blacklist.removeAll(blacklistRemovals)) {
+          changed = true;
+        }
+    return changed;
+  }
+
+  public boolean getAndResetBlacklistChanged() {
+    return userBlacklistChanged.getAndSet(false);

INS26 INS40 INS23 INS31 INS83 INS43 INS59 UPD39 INS83 INS39 INS42 INS8 INS42 INS42 INS14 INS25 INS60 INS41 INS41 INS43 INS9 MOV32 INS8 INS39 INS59 INS42 INS32 INS42 MOV21 INS42 INS9 INS42 INS42 INS9 INS32 INS42 INS42 INS9 INS25 INS7 MOV32 INS8 INS42 MOV32 MOV21 INS7 INS42 INS9