YARN-5224. Added new web-services /containers/{containerid}/logs & /containers/{containerid}/logs/{filename} and using them in "yarn logs" CLI to get logs of finished containers of a running application. Contributed by Xuan Gong.

+import org.apache.hadoop.yarn.server.nodemanager.webapp.dao.ContainerLogsInfo;
-import org.apache.hadoop.yarn.util.ConverterUtils;
-  
+
+  /**
+   * Returns log file's name as well as current file size for a container.
+   *
+   * @param hsr
+   *    HttpServletRequest
+   * @param containerIdStr
+   *    The container ID
+   * @return
+   *    The log file's name and current file size
+   */
+  @GET
+  @Path("/containers/{containerid}/logs")
+  @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })
+  public ContainerLogsInfo getContainerLogsInfo(@javax.ws.rs.core.Context
+      HttpServletRequest hsr,
+      @PathParam("containerid") String containerIdStr) {
+    ContainerId containerId = null;
+    init();
+    try {
+      containerId = ContainerId.fromString(containerIdStr);
+    } catch (Exception e) {
+      throw new BadRequestException("invalid container id, " + containerIdStr);
+    }
+    try {
+      return new ContainerLogsInfo(this.nmContext, containerId,
+          hsr.getRemoteUser());
+    } catch (YarnException ex) {
+      throw new WebApplicationException(ex);
+    }
+  }
+
+  /**
+   * Returns the contents of a container's log file in plain text.
+   *
+   * Only works for containers that are still in the NodeManager's memory, so
+   * logs are no longer available after the corresponding application is no
+   * longer running.
+   *
+   * @param containerIdStr
+   *    The container ID
+   * @param filename
+   *    The name of the log file
+   * @param format
+   *    The content type
+   * @param size
+   *    the size of the log file
+   * @return
+   *    The contents of the container's log file
+   */
+  @GET
+  @Path("/containers/{containerid}/logs/{filename}")
+  @Produces({ MediaType.TEXT_PLAIN })
+  @Public
+  @Unstable
+  public Response getContainerLogFile(
+      @PathParam("containerid") String containerIdStr,
+      @PathParam("filename") String filename,
+      @QueryParam("format") String format,
+      @QueryParam("size") String size) {
+    return getLogs(containerIdStr, filename, format, size);
+  }
+

MOV26 UPD40 INS31 INS31 INS29 INS78 INS79 INS79 INS83 INS43 INS42 INS44 INS44 INS8 INS29 INS78 INS79 INS79 INS78 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS8 INS65 INS65 INS65 INS65 INS42 INS42 INS45 INS42 INS4 INS42 INS78 INS43 INS42 INS79 INS43 INS42 INS60 INS21 INS54 INS54 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS42 INS45 INS42 INS4 INS42 INS42 INS42 INS79 INS43 INS42 INS79 INS43 INS42 INS79 INS43 INS42 INS79 INS43 INS42 INS41 INS66 INS42 INS66 INS42 INS66 INS66 INS40 INS40 INS40 INS42 INS42 INS45 INS42 INS43 INS59 INS32 INS8 INS12 INS8 INS12 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS40 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS33 INS42 INS21 INS44 INS8 INS41 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS7 INS43 INS42 INS53 INS14 INS43 INS42 INS53 INS42 INS32 INS42 INS14 INS43 INS22 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS43 INS27 INS42 INS52 INS42 INS42 INS42 INS43 INS42 INS42 INS45 INS42 INS42