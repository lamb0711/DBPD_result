YARN-5967. Fix slider core module findbugs warnings. Contributed by Jian He

-
-  public HttpOperationResponse execGet(URL url) throws
-      IOException,
-      AuthenticationException {
-    return execHttpOperation(HttpVerb.GET, url, null, "");
-  }
-
-  public HttpOperationResponse execHttpOperation(HttpVerb verb,
-      URL url,
-      byte[] payload,
-      String contentType)
-      throws IOException, AuthenticationException {
-    HttpURLConnection conn = null;
-    HttpOperationResponse outcome = new HttpOperationResponse();
-    int resultCode;
-    byte[] body = null;
-    log.debug("{} {} spnego={}", verb, url, useSpnego);
-
-    boolean doOutput = verb.hasUploadBody();
-    if (doOutput) {
-      Preconditions.checkArgument(payload !=null,
-          "Null payload on a verb which expects one");
-    }
-    try {
-      conn = openConnection(url);
-      conn.setRequestMethod(verb.getVerb());
-      conn.setDoOutput(doOutput);
-      if (doOutput) {
-        conn.setRequestProperty("Content-Type", contentType);
-      }
-
-      // now do the connection
-      conn.connect();
-      
-      if (doOutput) {
-        OutputStream output = conn.getOutputStream();
-        IOUtils.write(payload, output);
-        output.close();
-      }
-      
-      resultCode = conn.getResponseCode();
-      outcome.lastModified = conn.getLastModified();
-      outcome.contentType = conn.getContentType();
-      outcome.headers = conn.getHeaderFields();
-      InputStream stream = conn.getErrorStream();
-      if (stream == null) {
-        stream = conn.getInputStream();
-      }
-      if (stream != null) {
-        // read into a buffer.
-        body = IOUtils.toByteArray(stream);
-      } else {
-        // no body: 
-        log.debug("No body in response");
-
-      }
-    } catch (SSLException e) {
-      throw e;
-    } catch (IOException e) {
-      throw NetUtils.wrapException(url.toString(),
-          url.getPort(), "localhost", 0, e);
-
-    } catch (AuthenticationException e) {
-      throw new AuthenticationException("From " + url + ": " + e, e);
-
-    } finally {
-      if (conn != null) {
-        conn.disconnect();
-      }
-    }
-    uprateFaults(HttpVerb.GET, url.toString(), resultCode, "", body);
-    outcome.responseCode = resultCode;
-    outcome.data = body;
-    return outcome;
-  }
-
-  /**
-   * Uprate error codes 400 and up into faults; 
-   * 404 is converted to a {@link NotFoundException},
-   * 401 to {@link ForbiddenException}
-   *
-   * @param verb HTTP Verb used
-   * @param url URL as string
-   * @param resultCode response from the request
-   * @param bodyAsString
-   *@param body optional body of the request  @throws IOException if the result was considered a failure
-   */
-  public static void uprateFaults(HttpVerb verb, String url,
-      int resultCode, String bodyAsString, byte[] body)
-      throws IOException {
-
-    if (resultCode < 400) {
-      //success
-      return;
-    }
-    String msg = verb.toString() +" "+ url;
-    if (resultCode == 404) {
-      throw new NotFoundException(msg);
-    }
-    if (resultCode == 401) {
-      throw new ForbiddenException(msg);
-    }
-    // all other error codes
-    
-    // get a string respnse
-    if (bodyAsString == null) {
-      if (body != null && body.length > 0) {
-        bodyAsString = new String(body);
-      } else {
-        bodyAsString = "";
-      }
-    }
-    String message =  msg +
-                     " failed with exit code " + resultCode
-                     + ", body length " + bodyAsString.length()
-                     + ":\n" + bodyAsString;
-    log.error(message);
-    throw new IOException(message);
-  }
-

DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL40 DEL42 DEL33 DEL45 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL85 DEL5 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL39 DEL42 DEL59 DEL60 DEL39 DEL85 DEL5 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL45 DEL42 DEL42 DEL42 DEL32 DEL21 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL33 DEL27 DEL45 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL40 DEL42 DEL42 DEL32 DEL7 DEL21 DEL40 DEL42 DEL42 DEL32 DEL7 DEL21 DEL40 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL42 DEL42 DEL45 DEL32 DEL21 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL45 DEL34 DEL42 DEL32 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL45 DEL42 DEL27 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL54 DEL42 DEL40 DEL42 DEL42 DEL32 DEL42 DEL45 DEL42 DEL32 DEL21 DEL40 DEL42 DEL7 DEL21 DEL40 DEL42 DEL7 DEL21 DEL42 DEL41 DEL8 DEL31 DEL66 DEL66 DEL42 DEL65 DEL66 DEL66 DEL42 DEL65 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL85 DEL5 DEL42 DEL44 DEL42 DEL43 DEL42 DEL34 DEL27 DEL41 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL45 DEL42 DEL27 DEL59 DEL60 DEL42 DEL34 DEL27 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25 DEL42 DEL34 DEL27 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL33 DEL27 DEL40 DEL34 DEL27 DEL27 DEL42 DEL42 DEL43 DEL42 DEL14 DEL7 DEL21 DEL8 DEL42 DEL45 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL45 DEL42 DEL45 DEL42 DEL42 DEL32 DEL45 DEL42 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL31