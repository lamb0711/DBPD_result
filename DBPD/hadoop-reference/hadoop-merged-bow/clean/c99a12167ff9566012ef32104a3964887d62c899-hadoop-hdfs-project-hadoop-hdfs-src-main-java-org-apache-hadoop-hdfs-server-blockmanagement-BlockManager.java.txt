HDFS-14637. Namenode may not replicate blocks to meet the policy after enabling upgradeDomain. Contributed by Stephen O'Donnell.

Reviewed-by: Ayush Saxena <ayushsaxena@apache.org>
Signed-off-by: Wei-Chiu Chuang <weichiu@apache.org>

+  @VisibleForTesting
-      additionalReplRequired = 1; // Needed on a new rack
+      // Violates placement policy. Needed on a new rack or domain etc.
+      BlockPlacementStatus placementStatus = getBlockPlacementStatus(block);
+      additionalReplRequired = placementStatus.getAdditionalReplicasRequired();
-  private boolean isInNewRack(DatanodeDescriptor[] srcs,
-      DatanodeDescriptor target) {
-    LOG.debug("check if target {} increases racks, srcs={}", target,
-        Arrays.asList(srcs));
-    for (DatanodeDescriptor src : srcs) {
-      if (!src.isDecommissionInProgress() &&
-          src.getNetworkLocation().equals(target.getNetworkLocation())) {
-        LOG.debug("the target {} is in the same rack with src {}", target, src);
-        return false;
-      }
-    }
-    return true;
-  }
-
+    BlockPlacementStatus placementStatus = getBlockPlacementStatus(block);
-        (!isPlacementPolicySatisfied(block)) ) {
-      if (!isInNewRack(rw.getSrcNodes(), targets[0].getDatanodeDescriptor())) {
-        // No use continuing, unless a new rack in this case
+        (!placementStatus.isPlacementPolicySatisfied())) {
+      BlockPlacementStatus newPlacementStatus =
+          getBlockPlacementStatus(block, targets);
+      if (!newPlacementStatus.isPlacementPolicySatisfied() &&
+          (newPlacementStatus.getAdditionalReplicasRequired() >=
+              placementStatus.getAdditionalReplicasRequired())) {
+        // If the new targets do not meet the placement policy, or at least
+        // reduce the number of replicas needed, then no use continuing.
+    return getBlockPlacementStatus(storedBlock, null)
+        .isPlacementPolicySatisfied();
+  }
+
+  BlockPlacementStatus getBlockPlacementStatus(BlockInfo storedBlock) {
+    return getBlockPlacementStatus(storedBlock, null);
+  }
+
+  BlockPlacementStatus getBlockPlacementStatus(BlockInfo storedBlock,
+      DatanodeStorageInfo[] additionalStorage) {
+    if (additionalStorage != null) {
+      // additionalNodes, are potential new targets for the block. If there are
+      // any passed, include them when checking the placement policy to see if
+      // the policy is met, when it may not have been met without these nodes.
+      for (DatanodeStorageInfo s : additionalStorage) {
+        liveNodes.add(getDatanodeDescriptorFromStorage(s));
+      }
+    }
-        return true;
+        return new BlockPlacementStatus() {
+          @Override
+          public boolean isPlacementPolicySatisfied() {
+            return true;
+          }
+
+          @Override
+          public String getErrorDescription() {
+            return null;
+          }
+
+          @Override
+          public int getAdditionalReplicasRequired() {
+            return 0;
+          }
+        };
-    return placementPolicy.verifyBlockPlacement(locs, numReplicas)
-        .isPlacementPolicySatisfied();
+    return placementPolicy.verifyBlockPlacement(locs, numReplicas);

INS31 INS31 INS78 MOV39 UPD42 MOV42 MOV44 INS8 INS43 INS42 INS44 INS8 INS43 INS42 INS44 INS42 INS60 INS43 UPD42 INS41 UPD42 MOV42 INS43 INS42 INS41 INS42 INS5 INS42 INS25 INS43 INS59 UPD42 MOV42 INS32 INS42 INS32 INS43 INS85 INS27 INS8 MOV32 INS60 INS42 INS42 INS32 INS60 MOV32 INS42 UPD42 MOV42 UPD42 MOV42 INS33 INS42 INS42 INS33 INS70 INS43 INS59 INS42 INS42 INS43 INS59 INS27 UPD42 UPD42 INS33 INS44 INS42 INS8 INS8 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS38 INS36 INS43 INS42 INS21 INS41 INS42 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS32 INS27 INS42 INS32 INS14 INS42 UPD42 MOV42 INS32 INS32 INS42 INS42 INS32 INS43 INS1 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS31 INS31 INS31 INS78 INS83 INS39 INS42 MOV8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS42 INS42 INS42 INS41 INS42 INS41 INS33 INS34 DEL34 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL27 DEL42 DEL42 DEL45 DEL32 DEL21 DEL9 DEL41 DEL8 DEL25 DEL8 DEL70 DEL9 DEL41 DEL8 DEL31 DEL32 DEL42 DEL34 DEL2 DEL32 DEL32 DEL38 DEL43 DEL85 DEL5 DEL42 DEL39 DEL42 DEL42 DEL32