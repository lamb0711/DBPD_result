HDDS-1234. Iterate the OM DB snapshot and populate the recon container DB. Contributed by Aravindan Vijayan.

+import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.RECON_OM_SNAPSHOT_TASK_INITIAL_DELAY;
+import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.RECON_OM_SNAPSHOT_TASK_INITIAL_DELAY_DEFAULT;
+import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.RECON_OM_SNAPSHOT_TASK_INTERVAL;
+import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.RECON_OM_SNAPSHOT_TASK_INTERVAL_DEFAULT;
+
+import java.util.concurrent.Executors;
+import java.util.concurrent.ScheduledExecutorService;
+import java.util.concurrent.TimeUnit;
+
+import org.apache.hadoop.ozone.recon.spi.ContainerDBServiceProvider;
+import org.apache.hadoop.ozone.recon.spi.OzoneManagerServiceProvider;
+import org.apache.hadoop.ozone.recon.tasks.ContainerKeyMapperTask;
+  private final ScheduledExecutorService scheduler =
+      Executors.newScheduledThreadPool(1);
+  private Injector injector;
-    Injector injector = Guice.createInjector(new ReconControllerModule());
+    injector = Guice.createInjector(new ReconControllerModule());
-
+    scheduleReconTasks();
+  /**
+   * Schedule the tasks that is required by Recon to keep its metadata up to
+   * date.
+   */
+  private void scheduleReconTasks() {
+    OzoneConfiguration configuration = injector.getInstance(
+        OzoneConfiguration.class);
+    ContainerDBServiceProvider containerDBServiceProvider = injector
+        .getInstance(ContainerDBServiceProvider.class);
+    OzoneManagerServiceProvider ozoneManagerServiceProvider = injector
+        .getInstance(OzoneManagerServiceProvider.class);
+
+    // Schedule the task to read OM DB and write the reverse mapping to Recon
+    // container DB.
+    ContainerKeyMapperTask containerKeyMapperTask = new ContainerKeyMapperTask(
+        ozoneManagerServiceProvider, containerDBServiceProvider);
+    long initialDelay = configuration.getTimeDuration(
+        RECON_OM_SNAPSHOT_TASK_INITIAL_DELAY,
+        RECON_OM_SNAPSHOT_TASK_INITIAL_DELAY_DEFAULT,
+        TimeUnit.MILLISECONDS);
+    long interval = configuration.getTimeDuration(
+        RECON_OM_SNAPSHOT_TASK_INTERVAL,
+        RECON_OM_SNAPSHOT_TASK_INTERVAL_DEFAULT,
+        TimeUnit.MILLISECONDS);
+
+    scheduler.scheduleWithFixedDelay(containerKeyMapperTask, initialDelay,
+        interval, TimeUnit.MILLISECONDS);
+  }
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS31 INS83 INS83 INS43 INS59 INS83 MOV43 INS59 INS29 INS83 INS39 INS42 INS8 INS42 INS42 INS32 INS42 INS21 INS21 INS65 INS60 INS60 INS60 INS60 INS60 INS60 INS21 INS42 INS42 INS34 INS7 INS32 INS66 INS66 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS39 INS59 INS39 INS59 INS32 INS42 MOV32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS57 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS40 INS43 INS43 INS43 INS42 INS42 INS42 INS42 DEL42 DEL59 DEL60