Merge r1426019 through r1432788 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1432796 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.fs.FileSystem;
+import org.apache.hadoop.mapreduce.JobContext;
+import org.apache.hadoop.mapreduce.JobStatus.State;
+import org.apache.hadoop.mapreduce.TaskAttemptContext;
+import org.apache.hadoop.mapreduce.v2.app.commit.CommitterEvent;
+import org.apache.hadoop.mapreduce.v2.app.commit.CommitterEventHandler;
-import org.apache.hadoop.mapreduce.v2.app.taskclean.TaskCleaner;
-import org.apache.hadoop.mapreduce.v2.app.taskclean.TaskCleanupEvent;
+import org.apache.hadoop.mapreduce.v2.app.rm.RMHeartbeatHandler;
+    try {
+      //Create the staging directory if it does not exist
+      String user = UserGroupInformation.getCurrentUser().getShortUserName();
+      Path stagingDir = MRApps.getStagingAreaDir(conf, user);
+      FileSystem fs = getFileSystem(conf);
+      fs.mkdirs(stagingDir);
+    } catch (Exception e) {
+      throw new YarnException("Error creating staging dir", e);
+    }
+    
-          BuilderUtils.newResource(1024));
+          BuilderUtils.newResource(1024, 1));
-          BuilderUtils.newResource(10240));
+          BuilderUtils.newResource(10240, 1));
-  protected Job createJob(Configuration conf) {
+  protected Job createJob(Configuration conf, JobStateInternal forcedState, 
+      String diagnostic) {
-            getCommitter(), isNewApiCommitter(),
-            currentUser.getUserName(), getContext());
+            isNewApiCommitter(), currentUser.getUserName(), getContext(),
+            forcedState, diagnostic);
-  protected class MRAppContainerAllocator implements ContainerAllocator {
+  protected class MRAppContainerAllocator
+      implements ContainerAllocator, RMHeartbeatHandler {
+
+    @Override
+    public long getLastHeartbeatTime() {
+      return getContext().getClock().getTime();
+    }
+
+    @Override
+    public void runOnNextHeartbeat(Runnable callback) {
+      callback.run();
+    }
-  protected TaskCleaner createTaskCleaner(AppContext context) {
-    return new TaskCleaner() {
+  protected EventHandler<CommitterEvent> createCommitterEventHandler(
+      AppContext context, final OutputCommitter committer) {
+    // create an output committer with the task methods stubbed out
+    OutputCommitter stubbedCommitter = new OutputCommitter() {
-      public void handle(TaskCleanupEvent event) {
-        //send the cleanup done event
-        getContext().getEventHandler().handle(
-            new TaskAttemptEvent(event.getAttemptID(),
-                TaskAttemptEventType.TA_CLEANUP_DONE));
+      public void setupJob(JobContext jobContext) throws IOException {
+        committer.setupJob(jobContext);
+      }
+      @SuppressWarnings("deprecation")
+      @Override
+      public void cleanupJob(JobContext jobContext) throws IOException {
+        committer.cleanupJob(jobContext);
+      }
+      @Override
+      public void commitJob(JobContext jobContext) throws IOException {
+        committer.commitJob(jobContext);
+      }
+      @Override
+      public void abortJob(JobContext jobContext, State state)
+          throws IOException {
+        committer.abortJob(jobContext, state);
+      }
+      @Override
+      public boolean isRecoverySupported() {
+        return committer.isRecoverySupported();
+      }
+      @Override
+      public void setupTask(TaskAttemptContext taskContext)
+          throws IOException {
+      }
+      @Override
+      public boolean needsTaskCommit(TaskAttemptContext taskContext)
+          throws IOException {
+        return false;
+      }
+      @Override
+      public void commitTask(TaskAttemptContext taskContext)
+          throws IOException {
+      }
+      @Override
+      public void abortTask(TaskAttemptContext taskContext)
+          throws IOException {
+      }
+      @Override
+      public void recoverTask(TaskAttemptContext taskContext)
+          throws IOException {
+
+    return new CommitterEventHandler(context, stubbedCommitter,
+        getRMHeartbeatHandler());
-        OutputCommitter committer, boolean newApiCommitter, String user, 
-        AppContext appContext) {
+        boolean newApiCommitter, String user, AppContext appContext, 
+        JobStateInternal forcedState, String diagnostic) {
-          getCompletedTaskFromPreviousRun(), metrics, committer,
+          getCompletedTaskFromPreviousRun(), metrics,
-          appContext);
+          appContext, forcedState, diagnostic);

MOV26 MOV26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 UPD40 UPD40 INS40 INS40 INS44 INS44 INS43 INS31 INS31 INS74 UPD42 INS44 MOV44 INS54 INS43 INS42 INS43 INS42 INS42 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS43 INS43 INS83 INS43 INS42 INS60 INS41 INS44 INS8 INS12 INS42 INS42 INS42 INS41 INS42 INS43 INS42 INS21 UPD42 MOV42 INS42 INS42 INS43 INS59 INS14 INS43 INS42 INS43 INS42 INS60 INS60 INS60 INS21 INS44 INS8 INS32 INS42 INS32 UPD42 MOV42 INS42 INS14 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS43 INS42 INS53 INS42 INS42 INS32 INS42 INS42 INS42 MOV43 MOV1 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS14 MOV32 MOV32 INS32 INS42 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS45 INS42 INS34 INS34 INS42 MOV78 MOV83 MOV39 INS42 INS44 INS43 INS8 INS79 INS78 INS83 INS39 INS42 MOV44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS42 INS42 INS42 INS43 INS42 INS42 INS21 INS42 INS45 INS42 UPD43 UPD42 INS42 INS21 INS42 INS43 INS42 INS42 INS21 INS42 INS43 INS42 INS43 INS42 INS42 INS21 INS42 INS41 INS42 INS43 INS42 INS42 INS42 INS43 INS42 INS42 INS41 INS42 INS43 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS32 UPD42 INS32 INS42 INS32 INS42 INS42 INS32 INS32 UPD42 MOV42 INS42 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL32 DEL43 DEL42 DEL32 DEL32 DEL42 DEL43 DEL42 DEL42 DEL32 DEL40 DEL14 DEL32 DEL21 DEL8 DEL31 DEL43 DEL14 DEL41 DEL42 DEL42