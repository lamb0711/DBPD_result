YARN-6160. Create an agent-less docker-less provider in the native services framework. Contributed by Billie Rinaldi

-import org.apache.hadoop.yarn.client.api.TimelineClient;
-  private ProviderService providerService;
+  private List<ProviderService> providers = new ArrayList<>();
-    // add the slider XML config
-    ConfigHelper.injectSliderXMLResource();
-    //get our provider
-    SliderProviderFactory factory =
-      SliderProviderFactory.createSliderProviderFactory("docker");
-    providerService = factory.createServerProvider();
-    // init the provider BUT DO NOT START IT YET
-    initAndAddService(providerService);
+    // initialize our providers
+    for (Component component : application.getComponents()) {
+      SliderProviderFactory factory = SliderProviderFactory
+          .createSliderProviderFactory(component.getArtifact());
+      ProviderService providerService = factory.createServerProvider();
+      // init the provider BUT DO NOT START IT YET
+      initAndAddService(providerService);
+      providers.add(providerService);
+    }
-        providerService.setServiceTimelinePublisher(serviceTimelinePublisher);
+        for (ProviderService providerService : providers) {
+          providerService.setServiceTimelinePublisher(serviceTimelinePublisher);
+        }
-              providerService, registryOperations,
+              registryOperations,
-                                          providerService,
-    providerService.setAMState(stateForProviders);
+    for (ProviderService providerService : providers) {
+      providerService.setAMState(stateForProviders);
+    }
-    providerService.bindToYarnRegistry(yarnRegistryOperations);
+    for (ProviderService providerService : providers) {
+      providerService.bindToYarnRegistry(yarnRegistryOperations);
+    }
-    providerService.start();
+    for (ProviderService providerService : providers) {
+      providerService.start();
+    }
+    RoleInstance cinfo = appState.getOwnedContainer(containerId);
+    if (cinfo == null) {
+      LOG_YARN.error("Owned container not found for {}", containerId);
+      return;
+    }
+    ProviderService providerService = SliderProviderFactory
+        .getProviderService(cinfo.providerRole.component.getArtifact());
-      RoleInstance cinfo = appState.getOwnedContainer(containerId);
-      if (cinfo != null) {
-        LOG_YARN.info("Re-requesting status for role {}, {}",
-            cinfo.role, containerId);
-        //trigger another async container status
-        nmClientAsync.getContainerStatusAsync(containerId,
-            cinfo.container.getNodeId());
-      }
+      LOG_YARN.info("Re-requesting status for role {}, {}",
+          cinfo.role, containerId);
+      //trigger another async container status
+      nmClientAsync.getContainerStatusAsync(containerId,
+          cinfo.container.getNodeId());
-
-  public ProviderService getProviderService() {
-    return providerService;
-  }
-

INS74 MOV8 INS43 MOV43 UPD42 INS14 INS70 INS70 INS70 INS70 MOV21 INS60 INS25 INS42 INS74 INS44 INS32 INS8 INS44 INS42 INS8 INS44 INS42 INS8 INS44 INS42 INS8 UPD27 INS8 INS43 INS59 MOV32 MOV8 MOV25 INS43 INS43 INS42 INS42 INS42 MOV60 INS60 MOV21 MOV21 INS43 INS42 MOV21 INS43 INS42 MOV21 INS43 INS42 MOV21 INS21 INS41 INS42 INS42 INS32 MOV54 INS42 INS42 MOV43 INS59 INS32 MOV43 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 MOV32 INS42 INS42 INS42 INS70 INS42 INS42 INS45 INS42 INS40 INS42 INS32 INS44 INS42 INS8 MOV43 INS42 INS42 INS43 INS42 MOV21 INS42 DEL40 DEL26 DEL42 DEL42 DEL32 DEL21 DEL45 DEL42 DEL7 DEL42 DEL42 DEL25 DEL8 DEL83 DEL42 DEL42 DEL41 DEL8 DEL31