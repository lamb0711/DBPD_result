HADOOP-15843. s3guard bucket-info command to not print a stack trace on bucket-not-found.

Contributed by Adam Antal.

+
+  public static final String E_NO_METASTORE_OR_FILESYSTEM
+      = "No metastore or filesystem specified";
+
-    Configuration conf;
-    if (filesystem == null) {
-      conf = getConf();
-    } else {
-      conf = filesystem.getConf();
-    }
+    final boolean hasFileSystem = filesystem != null;
+    final Configuration conf = hasFileSystem ? filesystem.getConf() : getConf();
+      if (!hasFileSystem) {
+        // command didn't declare a metadata store URI or a bucket.
+        // to avoid problems related to picking up a shared table for actions
+        // line init and destroy (HADOOP-15843), this is rejected
+        printHelp(this);
+        throw usageError(E_NO_METASTORE_OR_FILESYSTEM);
+      }
-    if (filesystem == null) {
-      getStore().initialize(conf);
-    } else {
+    if (hasFileSystem) {
+    } else {
+      getStore().initialize(conf);
-  private static void printHelp() {
-    if (command == null) {
+  private static void printHelp(S3GuardTool tool) {
+    if (tool == null) {
-      errorln("Usage: hadoop " + command.getUsage());
+      errorln("Usage: hadoop " + tool.getUsage());
-
+
+  /**
+   * Build the exception to raise on a usage error
+   * @param format string format
+   * @param args optional arguments for the string
+   * @return a new exception to throw
+   */
+  protected static ExitUtil.ExitException usageError(
+      String format, Object...args) {
+    return new ExitUtil.ExitException(E_USAGE, String.format(format, args));
+  }
+
-      printHelp();
-      throw new ExitUtil.ExitException(E_USAGE, "No arguments provided");
+      printHelp(null);
+      throw usageError("No arguments provided");
-      printHelp();
+      printHelp(null);
-      printHelp();
+      printHelp(command);
+    } catch (FileNotFoundException e) {
+      // bucket doesn't exist or similar.
+      // skip the stack trace and choose the return code of 44, "404"
+      errorln(e.toString());
+      LOG.debug("Not found:", e);
+      exit(EXIT_NOT_FOUND, e.toString());

INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS44 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS42 INS42 INS45 INS60 INS60 MOV8 INS43 INS42 INS65 INS65 INS65 INS65 INS40 INS43 INS42 INS43 INS42 INS41 INS83 INS39 INS59 INS83 MOV43 INS59 INS42 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS14 INS12 UPD42 MOV42 INS27 INS42 INS16 INS25 UPD42 MOV43 INS42 INS32 INS44 INS8 MOV42 MOV33 INS42 MOV32 MOV32 INS38 INS8 INS42 INS42 INS42 INS42 INS32 INS33 INS43 INS42 INS21 INS21 INS21 INS42 INS21 INS53 INS33 INS42 INS45 INS42 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS52 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 DEL59 DEL60 DEL27 DEL42 DEL7 DEL21 DEL8 DEL42 DEL7 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL45 DEL14