YARN-1864. Fair Scheduler Dynamic Hierarchical User Queues (Ashwin Shankar via Sandy Ryza)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1593190 13f79535-47bb-0310-9956-ffa450edef68

-    Set<String> queueNamesInAllocFile = new HashSet<String>();
-
+    // configuredQueues is segregated based on whether it is a leaf queue
+    // or a parent queue. This information is used for creating queues
+    // and also for making queue placement decisions(QueuePlacementRule.java).
+    Map<FSQueueType, Set<String>> configuredQueues = 
+        new HashMap<FSQueueType, Set<String>>();
+    for (FSQueueType queueType : FSQueueType.values()) {
+      configuredQueues.put(queueType, new HashSet<String>());
+    }
+   
-      loadQueue(parent, element, minQueueResources, maxQueueResources, queueMaxApps,
-          userMaxApps, queueWeights, queuePolicies, minSharePreemptionTimeouts,
-          queueAcls, queueNamesInAllocFile);
+      loadQueue(parent, element, minQueueResources, maxQueueResources,
+          queueMaxApps, userMaxApps, queueWeights, queuePolicies,
+          minSharePreemptionTimeouts, queueAcls,
+          configuredQueues);
-          queueNamesInAllocFile, conf);
+          configuredQueues, conf);
-          queueNamesInAllocFile);
+          configuredQueues);
-        newPlacementPolicy, queueNamesInAllocFile);
+        newPlacementPolicy, configuredQueues);
-      Map<String, Map<QueueACL, AccessControlList>> queueAcls, Set<String> queueNamesInAllocFile) 
+      Map<String, Map<QueueACL, AccessControlList>> queueAcls, 
+      Map<FSQueueType, Set<String>> configuredQueues) 
-            minSharePreemptionTimeouts,
-            queueAcls, queueNamesInAllocFile);
+            minSharePreemptionTimeouts, queueAcls, configuredQueues);
+        configuredQueues.get(FSQueueType.PARENT).add(queueName);
-      queueNamesInAllocFile.add(queueName);
+      // if a leaf in the alloc file is marked as type='parent'
+      // then store it under 'parent'
+      if ("parent".equals(element.getAttribute("type"))) {
+        configuredQueues.get(FSQueueType.PARENT).add(queueName);
+      } else {
+        configuredQueues.get(FSQueueType.LEAF).add(queueName);
+      }

INS70 INS74 INS42 INS74 INS44 INS32 INS8 MOV43 INS43 INS43 MOV74 INS8 INS43 INS43 MOV74 INS42 INS14 INS43 INS42 INS42 INS42 INS21 INS42 INS42 INS25 INS42 INS42 INS74 INS42 INS32 MOV43 UPD42 INS32 MOV8 INS8 INS43 INS43 INS74 INS42 INS42 INS42 MOV14 UPD42 INS45 INS42 INS32 INS21 INS42 INS42 INS43 INS43 UPD42 UPD42 INS42 INS42 INS45 INS32 INS42 INS42 INS32 INS32 INS42 INS42 UPD42 MOV42 INS42 INS40 INS42 INS42 INS40 INS21 INS32 UPD42 INS32 INS42 INS42 INS42 INS42 INS40 DEL42 DEL42