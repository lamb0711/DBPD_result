YARN-6777. Support for ApplicationMasterService processing chain of interceptors. (asuresh)

+import org.apache.hadoop.yarn.ams.ApplicationMasterServiceContext;
-class DefaultAMSProcessor implements ApplicationMasterServiceProcessor {
+/**
+ * This is the default Application Master Service processor. It has be the
+ * last processor in the @{@link AMSProcessingChain}.
+ */
+final class DefaultAMSProcessor implements ApplicationMasterServiceProcessor {
-  private final RMContext rmContext;
-  private final YarnScheduler scheduler;
+  private RMContext rmContext;
-  DefaultAMSProcessor(RMContext rmContext, YarnScheduler scheduler) {
-    this.rmContext = rmContext;
-    this.scheduler = scheduler;
+  @Override
+  public void init(ApplicationMasterServiceContext amsContext,
+      ApplicationMasterServiceProcessor nextProcessor) {
+    this.rmContext = (RMContext)amsContext;
-  public RegisterApplicationMasterResponse registerApplicationMaster(
+  @Override
+  public void registerApplicationMaster(
-      RegisterApplicationMasterRequest request) throws IOException {
+      RegisterApplicationMasterRequest request,
+      RegisterApplicationMasterResponse response) throws IOException {
-    RegisterApplicationMasterResponse response = recordFactory
-        .newRecordInstance(RegisterApplicationMasterResponse.class);
-    return response;
-  public AllocateResponse allocate(ApplicationAttemptId appAttemptId,
-      AllocateRequest request) throws YarnException {
+  @Override
+  public void allocate(ApplicationAttemptId appAttemptId,
+      AllocateRequest request, AllocateResponse response) throws YarnException {
-    AllocateResponse allocateResponse =
-        recordFactory.newRecordInstance(AllocateResponse.class);
-      allocateResponse.setNMTokens(allocation.getNMTokens());
+      response.setNMTokens(allocation.getNMTokens());
-        allocateResponse, updateErrors);
+        response, updateErrors);
-    handleNodeUpdates(app, allocateResponse);
+    handleNodeUpdates(app, response);
-        allocateResponse, allocation.getContainers());
+        response, allocation.getContainers());
-    allocateResponse.setCompletedContainersStatuses(appAttempt
+    response.setCompletedContainersStatuses(appAttempt
-    allocateResponse.setAvailableResources(allocation.getResourceLimit());
+    response.setAvailableResources(allocation.getResourceLimit());
-    addToContainerUpdates(allocateResponse, allocation,
+    addToContainerUpdates(response, allocation,
-    allocateResponse.setNumClusterNodes(getScheduler().getNumClusterNodes());
+    response.setNumClusterNodes(getScheduler().getNumClusterNodes());
-      allocateResponse.setCollectorAddr(
+      response.setCollectorAddr(
-    allocateResponse
-        .setPreemptionMessage(generatePreemptionMessage(allocation));
+    response.setPreemptionMessage(generatePreemptionMessage(allocation));
-    allocateResponse.setApplicationPriority(app
+    response.setApplicationPriority(app
-    return allocateResponse;
-  public FinishApplicationMasterResponse finishApplicationMaster(
+  @Override
+  public void finishApplicationMaster(
-      FinishApplicationMasterRequest request) {
+      FinishApplicationMasterRequest request,
+      FinishApplicationMasterResponse response) {
-    FinishApplicationMasterResponse response =
-        FinishApplicationMasterResponse.newInstance(
+    response.setIsUnregistered(
-    return response;
-    return scheduler;
+    return rmContext.getScheduler();

INS26 INS40 INS29 INS83 INS42 INS65 INS78 INS83 INS39 INS42 INS78 INS39 INS42 INS44 INS78 INS39 INS42 INS44 INS78 INS39 INS42 INS44 INS66 INS66 INS65 INS66 INS42 INS43 UPD42 UPD43 UPD42 INS42 MOV43 INS42 INS42 MOV43 INS42 INS42 MOV43 INS42 INS21 INS42 INS42 UPD42 MOV32 INS32 INS11 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 MOV43 INS42 UPD42 UPD42 DEL42 DEL83 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL42 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL60 DEL42 DEL41 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL60 DEL42 DEL41 DEL42 DEL43 DEL42 DEL42 DEL59 DEL60 DEL42 DEL41 DEL42