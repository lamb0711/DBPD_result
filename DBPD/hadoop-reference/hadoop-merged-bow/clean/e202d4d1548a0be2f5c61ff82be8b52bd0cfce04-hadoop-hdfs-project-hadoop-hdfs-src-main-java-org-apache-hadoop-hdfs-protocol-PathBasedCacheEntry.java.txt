HDFS-5213. Separate PathBasedCacheEntry and PathBasedCacheDirectiveWithId. Contributed by Colin Patrick McCabe.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1524561 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.commons.lang.builder.EqualsBuilder;
-import org.apache.commons.lang.builder.HashCodeBuilder;
+import org.apache.hadoop.classification.InterfaceAudience;
+import org.apache.hadoop.hdfs.server.namenode.CachePool;
- * An entry in the NameNode's PathBasedCache.
+ * Represents an entry in the PathBasedCache on the NameNode.
+ *
+ * This is an implementation class, not part of the public API.
+@InterfaceAudience.Private
-  private final PathBasedCacheDirective directive;
+  private final String path;
+  private final CachePool pool;
-  public PathBasedCacheEntry(long entryId, PathBasedCacheDirective directive) {
+  public PathBasedCacheEntry(long entryId, String path, CachePool pool) {
-    this.directive = directive;
+    Preconditions.checkNotNull(path);
+    this.path = path;
+    Preconditions.checkNotNull(pool);
+    this.pool = pool;
-  public PathBasedCacheDirective getDirective() {
-    return directive;
+  public String getPath() {
+    return path;
-  @Override
-  public boolean equals(Object o) {
-    try {
-      PathBasedCacheEntry other = (PathBasedCacheEntry)o;
-      return new EqualsBuilder().
-          append(this.entryId, other.entryId).
-          append(this.directive, other.directive).
-          isEquals();
-    } catch (ClassCastException e) {
-      return false;
-    }
-  }
-
-  @Override
-  public int hashCode() {
-    return new HashCodeBuilder().
-        append(entryId).
-        append(directive).
-        hashCode();
+  public CachePool getPool() {
+    return pool;
-        append(", directive:").append(directive.toString()).
-        append(" }");
+      append(", path:").append(path).
+      append(", pool:").append(pool).
+      append(" }");
+
+  public PathBasedCacheDescriptor getDescriptor() {
+    return new PathBasedCacheDescriptor(entryId, path, pool.getName());
+  }

MOV31 UPD40 UPD40 INS78 INS23 INS40 INS83 INS83 INS43 INS59 UPD43 INS44 UPD43 UPD42 INS43 INS42 INS8 INS43 INS42 UPD66 INS66 INS42 INS42 UPD42 UPD42 INS43 INS42 UPD43 UPD42 INS21 INS21 INS21 UPD42 UPD42 MOV42 MOV41 INS42 INS42 UPD42 INS32 INS32 INS7 UPD42 INS42 INS32 INS14 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 INS22 INS42 INS32 INS42 INS45 UPD43 MOV43 INS42 INS42 INS32 UPD42 INS52 INS42 MOV32 INS42 INS42 UPD42 UPD42 MOV42 UPD42 MOV42 UPD45 UPD42 MOV42 UPD45 DEL42 DEL78 DEL42 DEL43 DEL14 DEL42 DEL52 DEL42 DEL22 DEL40 DEL32 DEL42 DEL52 DEL42 DEL22 DEL40 DEL32 DEL42 DEL32 DEL39 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL8 DEL42 DEL43 DEL42 DEL44 DEL9 DEL41 DEL8 DEL12 DEL54 DEL8 DEL42 DEL32 DEL42 DEL78 DEL39 DEL42 DEL14 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32