Revert "HDFS-11094. Send back HAState along with NamespaceInfo during a versionRequest as an optional parameter. Contributed by Eric Badger"

This reverts commit 8c4680852b20ad0e65e77dd123c9ba5bb6f2fa39.

-import org.apache.hadoop.ha.proto.HAServiceProtocolProtos.HAServiceStateProto;
+import org.apache.hadoop.ha.proto.HAServiceProtocolProtos;
-        info.getSoftwareVersion(), info.getCapabilities(),
-        convert(info.getState()));
+        info.getSoftwareVersion(), info.getCapabilities());
-    NamespaceInfoProto.Builder builder = NamespaceInfoProto.newBuilder();
-    builder.setBlockPoolID(info.getBlockPoolID())
+    return NamespaceInfoProto.newBuilder()
+        .setBlockPoolID(info.getBlockPoolID())
-        .setCapabilities(info.getCapabilities());
-    HAServiceState state = info.getState();
-    if(state != null) {
-      builder.setState(convert(info.getState()));
-    }
-    return builder.build();
-  }
-
-  public static HAServiceState convert(HAServiceStateProto s) {
-    if (s == null) {
-      return null;
-    }
-    switch (s) {
-    case INITIALIZING:
-      return HAServiceState.INITIALIZING;
-    case ACTIVE:
-      return HAServiceState.ACTIVE;
-    case STANDBY:
-      return HAServiceState.STANDBY;
-    default:
-      throw new IllegalArgumentException("Unexpected HAServiceStateProto:"
-          + s);
-    }
-  }
-
-  public static HAServiceStateProto convert(HAServiceState s) {
-    if (s == null) {
-      return null;
-    }
-    switch (s) {
-    case INITIALIZING:
-      return HAServiceStateProto.INITIALIZING;
-    case ACTIVE:
-      return HAServiceStateProto.ACTIVE;
-    case STANDBY:
-      return HAServiceStateProto.STANDBY;
-    default:
-      throw new IllegalArgumentException("Unexpected HAServiceState:"
-          + s);
-    }
+        .setCapabilities(info.getCapabilities())
+        .build();
-    if (s == null) {
-      return null;
+    if (s == null) return null;
+    switch (s.getState()) {
+    case ACTIVE:
+      return new NNHAStatusHeartbeat(HAServiceState.ACTIVE, s.getTxid());
+    case STANDBY:
+      return new NNHAStatusHeartbeat(HAServiceState.STANDBY, s.getTxid());
+    default:
+      throw new IllegalArgumentException("Unexpected NNHAStatusHeartbeat.State:" + s.getState());
-    return new NNHAStatusHeartbeat(convert(s.getState()), s.getTxid());
-    if (hb == null) {
-      return null;
-    }
+    if (hb == null) return null;
-        NNHAStatusHeartbeatProto.newBuilder();
-    builder.setState(convert(hb.getState()));
+      NNHAStatusHeartbeatProto.newBuilder();
+    switch (hb.getState()) {
+      case ACTIVE:
+        builder.setState(HAServiceProtocolProtos.HAServiceStateProto.ACTIVE);
+        break;
+      case STANDBY:
+        builder.setState(HAServiceProtocolProtos.HAServiceStateProto.STANDBY);
+        break;
+      default:
+        throw new IllegalArgumentException("Unexpected NNHAStatusHeartbeat.State:" +
+            hb.getState());
+    }

UPD40 INS31 MOV83 MOV83 MOV43 MOV42 MOV44 INS8 MOV25 INS50 INS50 MOV41 INS32 MOV49 INS41 MOV49 MOV41 MOV49 MOV53 MOV41 INS32 MOV49 INS21 INS10 MOV49 INS21 INS10 INS49 INS53 MOV32 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS14 INS43 INS40 INS32 INS40 MOV43 MOV42 MOV42 INS40 UPD42 MOV42 INS42 INS40 MOV43 INS27 INS42 INS42 INS42 UPD45 MOV32 INS45 MOV32 MOV32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL40 DEL43 DEL42 DEL59 DEL60 DEL21 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL8 DEL42 DEL32 DEL42 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL49 DEL40 DEL41 DEL40 DEL41 DEL40 DEL41 DEL49 DEL45 DEL42 DEL27 DEL14 DEL53 DEL50 DEL8 DEL31 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL8 DEL25 DEL42 DEL40 DEL41 DEL40 DEL41 DEL40 DEL41 DEL49 DEL50 DEL8 DEL31 DEL83 DEL83 DEL42 DEL42 DEL33 DEL27 DEL33 DEL41 DEL8 DEL25 DEL8 DEL31 DEL33 DEL41 DEL8 DEL32 DEL32 DEL21