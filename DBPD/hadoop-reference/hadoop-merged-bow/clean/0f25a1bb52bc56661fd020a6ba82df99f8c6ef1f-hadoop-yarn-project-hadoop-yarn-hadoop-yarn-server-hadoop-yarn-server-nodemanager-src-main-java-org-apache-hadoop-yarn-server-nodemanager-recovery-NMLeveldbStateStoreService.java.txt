YARN-3998. Add support in the NodeManager to re-launch containers. Contributed by Jun Gong.

+  private static final String CONTAINER_REMAIN_RETRIES_KEY_SUFFIX =
+      "/remainingRetryAttempts";
+  private static final String CONTAINER_WORK_DIR_KEY_SUFFIX = "/workdir";
+  private static final String CONTAINER_LOG_DIR_KEY_SUFFIX = "/logdir";
+      } else if (suffix.equals(CONTAINER_REMAIN_RETRIES_KEY_SUFFIX)) {
+        rcs.setRemainingRetryAttempts(
+            Integer.parseInt(asString(entry.getValue())));
+      } else if (suffix.equals(CONTAINER_WORK_DIR_KEY_SUFFIX)) {
+        rcs.setWorkDir(asString(entry.getValue()));
+      } else if (suffix.equals(CONTAINER_LOG_DIR_KEY_SUFFIX)) {
+        rcs.setLogDir(asString(entry.getValue()));
+  public void storeContainerRemainingRetryAttempts(ContainerId containerId,
+      int remainingRetryAttempts) throws IOException {
+    String key = CONTAINERS_KEY_PREFIX + containerId.toString()
+        + CONTAINER_REMAIN_RETRIES_KEY_SUFFIX;
+    try {
+      db.put(bytes(key), bytes(Integer.toString(remainingRetryAttempts)));
+    } catch (DBException e) {
+      throw new IOException(e);
+    }
+  }
+
+  @Override
+  public void storeContainerWorkDir(ContainerId containerId,
+      String workDir) throws IOException {
+    String key = CONTAINERS_KEY_PREFIX + containerId.toString()
+        + CONTAINER_WORK_DIR_KEY_SUFFIX;
+    try {
+      db.put(bytes(key), bytes(workDir));
+    } catch (DBException e) {
+      throw new IOException(e);
+    }
+  }
+
+  @Override
+  public void storeContainerLogDir(ContainerId containerId,
+      String logDir) throws IOException {
+    String key = CONTAINERS_KEY_PREFIX + containerId.toString()
+        + CONTAINER_LOG_DIR_KEY_SUFFIX;
+    try {
+      db.put(bytes(key), bytes(logDir));
+    } catch (DBException e) {
+      throw new IOException(e);
+    }
+  }
+
+  @Override

INS23 INS23 INS23 INS31 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS43 INS42 INS39 INS42 INS42 INS60 INS54 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS54 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS54 INS42 INS43 INS59 INS8 INS12 INS42 INS42 INS43 INS59 INS8 INS12 INS42 INS42 INS43 INS59 INS8 INS12 INS42 INS42 INS27 INS21 INS44 INS8 INS42 INS42 INS27 INS21 INS44 INS8 INS42 INS42 INS27 INS21 INS44 INS8 INS42 INS32 INS42 INS32 INS43 INS42 INS53 INS42 INS32 INS42 INS32 INS43 INS42 INS53 INS42 INS32 INS42 INS32 INS43 INS42 INS53 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS14 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS25 INS32 INS8 INS25 INS42 INS42 INS42 INS21 INS32 INS8 INS25 INS32 INS42 INS42 INS42 INS21 INS32 INS8 MOV8 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42