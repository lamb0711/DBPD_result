HDDS-733. Create container if not exist, as part of chunk write.
Contributed by Lokesh Jain.

-    try {
-      long containerID = msg.getContainerID();
+    long containerID = msg.getContainerID();
+    metrics.incContainerOpsMetrics(cmdType);
-      metrics.incContainerOpsMetrics(cmdType);
-      if (cmdType != ContainerProtos.Type.CreateContainer) {
+    if (cmdType != ContainerProtos.Type.CreateContainer) {
+      container = getContainer(containerID);
+
+      if (container == null && (cmdType == ContainerProtos.Type.WriteChunk
+          || cmdType == ContainerProtos.Type.PutSmallFile)) {
+        // If container does not exist, create one for WriteChunk and
+        // PutSmallFile request
+        createContainer(msg);
-        containerType = getContainerType(container);
-      } else {
-        if (!msg.hasCreateContainer()) {
-          return ContainerUtils.malformedRequest(msg);
-        }
-        containerType = msg.getCreateContainer().getContainerType();
-    } catch (StorageContainerException ex) {
-      return ContainerUtils.logAndReturnError(LOG, ex, msg);
+
+      // if container not found return error
+      if (container == null) {
+        StorageContainerException sce = new StorageContainerException(
+            "ContainerID " + containerID + " does not exist",
+            ContainerProtos.Result.CONTAINER_NOT_FOUND);
+        return ContainerUtils.logAndReturnError(LOG, sce, msg);
+      }
+      containerType = getContainerType(container);
+    } else {
+      if (!msg.hasCreateContainer()) {
+        return ContainerUtils.malformedRequest(msg);
+      }
+      containerType = msg.getCreateContainer().getContainerType();
+   * Create a container using the input container request.
+   * @param containerRequest - the container request which requires container
+   *                         to be created.
+   */
+  private void createContainer(ContainerCommandRequestProto containerRequest) {
+    ContainerProtos.CreateContainerRequestProto.Builder createRequest =
+        ContainerProtos.CreateContainerRequestProto.newBuilder();
+    ContainerType containerType =
+        ContainerProtos.ContainerType.KeyValueContainer;
+    createRequest.setContainerType(containerType);
+
+    ContainerCommandRequestProto.Builder requestBuilder =
+        ContainerCommandRequestProto.newBuilder()
+            .setCmdType(ContainerProtos.Type.CreateContainer)
+            .setContainerID(containerRequest.getContainerID())
+            .setCreateContainer(createRequest.build())
+            .setDatanodeUuid(containerRequest.getDatanodeUuid())
+            .setTraceID(containerRequest.getTraceID());
+
+    // TODO: Assuming the container type to be KeyValueContainer for now.
+    // We need to get container type from the containerRequest.
+    Handler handler = getHandler(containerType);
+    handler.handle(requestBuilder.build(), null);
+  }
+
+  /**
-  public Container getContainer(long containerID)
-      throws StorageContainerException {
-    Container container = containerSet.getContainer(containerID);
-    if (container == null) {
-      throw new StorageContainerException(
-          "ContainerID " + containerID + " does not exist",
-          ContainerProtos.Result.CONTAINER_NOT_FOUND);
-    }
-    return container;
+  public Container getContainer(long containerID) {
+    return containerSet.getContainer(containerID);

MOV31 INS31 INS29 UPD83 INS39 UPD42 INS44 MOV78 INS83 MOV43 INS42 MOV44 INS8 MOV60 MOV21 MOV25 INS65 INS65 INS43 INS42 INS60 INS21 INS60 INS60 INS21 INS41 INS8 INS66 INS42 INS66 INS66 UPD42 MOV42 INS43 INS59 UPD43 INS32 INS43 INS59 INS43 INS59 INS32 MOV32 MOV21 INS25 INS25 MOV21 INS40 INS42 INS32 UPD42 UPD42 INS40 INS42 INS42 INS42 INS40 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS33 INS27 MOV8 MOV27 INS8 INS40 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS27 INS36 INS21 INS21 INS60 INS41 INS32 INS42 INS32 INS42 INS42 INS42 INS33 INS27 INS32 INS7 MOV43 INS59 INS32 INS32 INS42 INS32 INS42 INS42 INS27 INS27 INS42 INS42 INS42 INS32 INS42 INS42 MOV14 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS32 INS42 INS40 INS42 INS42 INS42 INS42 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL12 DEL54 DEL53 DEL8 DEL25 DEL42 DEL41