HDFS-5385. Caching RPCs are AtMostOnce, but do not persist client ID and call ID to edit log.  (Chris Nauroth via Colin Patrick McCabe)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1534345 13f79535-47bb-0310-9956-ffa450edef68

+  /**
+   * {@literal @AtMostOnce} for
+   * {@link ClientProtocol#addPathBasedCacheDirective}
+   */
+      readRpcIds(in, logVersion);
+      writeRpcIds(rpcClientId, rpcCallId, out);
+      appendRpcIdsToXml(contentHandler, rpcClientId, rpcCallId);
+      readRpcIdsFromXml(st);
-      builder.append("pool=" + pool + "]");
+      builder.append("pool=" + pool);
+      appendRpcIdsToString(builder, rpcClientId, rpcCallId);
+      builder.append("]");
+  /**
+   * {@literal @AtMostOnce} for
+   * {@link ClientProtocol#removePathBasedCacheDescriptor}
+   */
+      readRpcIds(in, logVersion);
+      writeRpcIds(rpcClientId, rpcCallId, out);
+      appendRpcIdsToXml(contentHandler, rpcClientId, rpcCallId);
+      readRpcIdsFromXml(st);
-      builder.append("id=" + Long.toString(id) + "]");
+      builder.append("id=" + Long.toString(id));
+      appendRpcIdsToString(builder, rpcClientId, rpcCallId);
+      builder.append("]");
+  /** {@literal @AtMostOnce} for {@link ClientProtocol#addCachePool} */
+      readRpcIds(in, logVersion);
+      writeRpcIds(rpcClientId, rpcCallId, out);
-      info .writeXmlTo(contentHandler);
+      info.writeXmlTo(contentHandler);
+      appendRpcIdsToXml(contentHandler, rpcClientId, rpcCallId);
+      readRpcIdsFromXml(st);
-      builder.append("weight=" + Integer.toString(info.getWeight()) + "]");
+      builder.append("weight=" + Integer.toString(info.getWeight()));
+      appendRpcIdsToString(builder, rpcClientId, rpcCallId);
+      builder.append("]");
+  /** {@literal @AtMostOnce} for {@link ClientProtocol#modifyCachePool} */
+      readRpcIds(in, logVersion);
+      writeRpcIds(rpcClientId, rpcCallId, out);
+      appendRpcIdsToXml(contentHandler, rpcClientId, rpcCallId);
+      readRpcIdsFromXml(st);
+      appendRpcIdsToString(builder, rpcClientId, rpcCallId);
+  /** {@literal @AtMostOnce} for {@link ClientProtocol#removeCachePool} */
+      readRpcIds(in, logVersion);
+      writeRpcIds(rpcClientId, rpcCallId, out);
+      appendRpcIdsToXml(contentHandler, rpcClientId, rpcCallId);
+      readRpcIdsFromXml(st);
-      builder.append("poolName=" + poolName + "]");
+      builder.append("poolName=" + poolName);
+      appendRpcIdsToString(builder, rpcClientId, rpcCallId);
+      builder.append("]");

INS29 INS29 INS29 INS29 INS29 INS65 INS65 INS65 INS78 INS43 INS65 MOV78 MOV43 INS65 INS65 INS66 INS65 INS21 INS21 INS21 INS21 INS21 INS21 INS65 INS66 INS65 INS21 INS21 INS21 INS21 INS21 INS21 INS65 INS66 INS65 INS66 INS42 INS42 INS21 INS21 INS21 INS21 INS21 INS21 INS65 INS66 INS65 INS66 MOV42 MOV42 INS21 INS21 INS21 INS21 INS21 INS65 INS66 INS65 INS66 INS21 INS21 INS21 INS21 INS21 INS21 INS66 INS67 INS32 INS32 INS32 INS32 INS32 INS32 INS66 INS67 INS32 INS32 INS32 INS32 INS32 INS32 INS66 INS67 INS32 INS32 INS32 INS32 INS32 INS32 INS66 INS67 INS32 INS32 INS32 INS32 INS32 INS66 INS67 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 DEL45 DEL45 DEL45 DEL45