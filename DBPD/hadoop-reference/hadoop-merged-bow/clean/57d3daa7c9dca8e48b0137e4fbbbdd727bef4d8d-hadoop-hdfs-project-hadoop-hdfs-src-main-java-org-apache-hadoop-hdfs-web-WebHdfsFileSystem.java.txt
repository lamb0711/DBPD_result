Merge from trunk to fs-encryption branch

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1596873 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.EnumSet;
+import org.apache.hadoop.fs.XAttr;
+import org.apache.hadoop.fs.XAttrCodec;
+import org.apache.hadoop.fs.XAttrSetFlag;
+  
+  @Override
+  public void setXAttr(Path p, String name, byte[] value, 
+      EnumSet<XAttrSetFlag> flag) throws IOException {
+    statistics.incrementWriteOps(1);
+    final HttpOpParam.Op op = PutOpParam.Op.SETXATTR;
+    if (value != null) {
+      new FsPathRunner(op, p, new XAttrNameParam(name), new XAttrValueParam(
+          XAttrCodec.encodeValue(value, XAttrCodec.HEX)), 
+          new XAttrSetFlagParam(flag)).run();
+    } else {
+      new FsPathRunner(op, p, new XAttrNameParam(name), 
+          new XAttrSetFlagParam(flag)).run();
+    }
+  }
+  
+  @Override
+  public byte[] getXAttr(Path p, String name) throws IOException {
+    final HttpOpParam.Op op = GetOpParam.Op.GETXATTR;
+    return new FsPathResponseRunner<byte[]>(op, p, new XAttrNameParam(name), 
+        new XAttrEncodingParam(XAttrCodec.HEX)) {
+      @Override
+      byte[] decodeResponse(Map<?, ?> json) throws IOException {
+        XAttr xAttr = JsonUtil.toXAttr(json);
+        return xAttr != null ? xAttr.getValue() : null;
+      }
+    }.run();
+  }
+  
+  @Override
+  public Map<String, byte[]> getXAttrs(Path p) throws IOException {
+    final HttpOpParam.Op op = GetOpParam.Op.GETXATTRS;
+    return new FsPathResponseRunner<Map<String, byte[]>>(op, p, 
+        new XAttrEncodingParam(XAttrCodec.HEX)) {
+      @Override
+      Map<String, byte[]> decodeResponse(Map<?, ?> json) throws IOException {
+        return JsonUtil.toXAttrs(json);
+      }
+    }.run();
+  }
+  
+  @Override
+  public Map<String, byte[]> getXAttrs(Path p, final List<String> names) 
+      throws IOException {
+    final HttpOpParam.Op op = GetOpParam.Op.GETXATTRS;
+    return new FsPathResponseRunner<Map<String, byte[]>>(op, p, 
+        new XAttrEncodingParam(XAttrCodec.HEX)) {
+      @Override
+      Map<String, byte[]> decodeResponse(Map<?, ?> json) throws IOException {
+        return JsonUtil.toXAttrs(json, names);
+      }
+    }.run();
+  }
+  
+  @Override
+  public void removeXAttr(Path p, String name) throws IOException {
+    statistics.incrementWriteOps(1);
+    final HttpOpParam.Op op = PutOpParam.Op.REMOVEXATTR;
+    new FsPathRunner(op, p, new XAttrNameParam(name)).run();
+  }
+  public Path createSnapshot(final Path path, final String snapshotName) 
+      throws IOException {
+    statistics.incrementWriteOps(1);
+    final HttpOpParam.Op op = PutOpParam.Op.CREATESNAPSHOT;
+    Path spath = new FsPathResponseRunner<Path>(op, path,
+        new SnapshotNameParam(snapshotName)) {
+      @Override
+      Path decodeResponse(Map<?,?> json) {
+        return new Path((String) json.get(Path.class.getSimpleName()));
+      }
+    }.run();
+    return spath;
+  }
+
+  @Override
+  public void deleteSnapshot(final Path path, final String snapshotName)
+      throws IOException {
+    statistics.incrementWriteOps(1);
+    final HttpOpParam.Op op = DeleteOpParam.Op.DELETESNAPSHOT;
+    new FsPathRunner(op, path, new SnapshotNameParam(snapshotName)).run();
+  }
+
+  @Override
+  public void renameSnapshot(final Path path, final String snapshotOldName,
+      final String snapshotNewName) throws IOException {
+    statistics.incrementWriteOps(1);
+    final HttpOpParam.Op op = PutOpParam.Op.RENAMESNAPSHOT;
+    new FsPathRunner(op, path, new OldSnapshotNameParam(snapshotOldName),
+        new SnapshotNameParam(snapshotNewName)).run();
+  }
+
+  @Override

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS78 INS83 INS5 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS74 INS42 INS44 INS43 INS8 INS78 INS83 INS74 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS42 INS43 INS42 INS43 INS42 INS5 INS42 INS74 INS42 INS42 INS21 INS60 INS25 INS42 INS39 INS85 INS43 INS42 INS43 INS42 INS42 INS60 INS41 INS42 INS43 INS43 INS5 INS43 INS42 INS42 INS60 INS41 INS42 INS43 INS43 INS5 INS43 INS42 INS83 INS74 INS42 INS42 INS60 INS41 INS42 INS43 INS42 INS43 INS42 INS42 INS21 INS60 INS21 INS42 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS42 INS21 INS60 INS60 INS41 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS42 INS21 INS60 INS21 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS42 INS21 INS60 INS21 INS42 INS42 INS39 INS85 INS43 INS43 INS32 INS83 INS43 INS59 INS27 INS8 INS8 INS42 INS42 INS83 INS43 INS59 INS32 INS42 INS42 INS39 INS85 INS42 INS83 INS43 INS59 INS32 INS42 INS42 INS39 INS85 INS42 INS43 INS43 INS83 INS43 INS59 INS32 INS42 INS42 INS32 INS83 INS43 INS59 INS32 INS42 INS42 INS32 INS83 INS43 INS59 INS43 INS59 INS42 INS42 INS42 INS32 INS83 INS43 INS59 INS32 INS42 INS42 INS42 INS32 INS83 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS34 INS40 INS42 INS40 INS42 INS33 INS21 INS21 INS40 INS42 INS40 INS14 INS42 INS40 INS42 INS40 INS14 INS42 INS42 INS42 INS40 INS42 INS40 INS14 INS42 INS42 INS42 INS34 INS40 INS42 INS40 INS14 INS42 INS42 INS42 INS34 INS40 INS42 INS40 INS42 INS42 INS32 INS42 INS42 INS34 INS40 INS42 INS40 INS14 INS42 INS42 INS42 INS34 INS40 INS42 INS40 INS14 INS42 INS32 INS32 INS74 INS42 INS42 INS14 INS14 INS1 INS74 INS42 INS42 INS14 INS1 INS74 INS42 INS42 INS14 INS1 INS43 INS42 INS42 INS14 INS14 INS42 INS43 INS42 INS42 INS14 INS43 INS42 INS42 INS14 INS14 INS14 INS42 INS14 INS42 INS43 INS5 INS43 INS42 INS43 INS40 INS31 INS43 INS74 INS43 INS40 INS31 INS43 INS74 INS43 INS40 INS31 INS42 INS43 INS42 INS74 INS42 INS42 INS14 INS1 INS42 INS43 INS42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS14 INS14 INS14 INS43 INS42 INS42 INS14 INS14 INS42 INS39 INS85 INS42 INS42 INS78 INS5 INS42 INS44 INS43 INS8 INS42 INS43 INS43 INS5 INS42 INS78 INS74 INS42 INS44 INS43 INS8 INS42 INS43 INS43 INS5 INS42 INS78 INS74 INS42 INS44 INS43 INS8 INS42 INS43 INS43 INS43 INS42 INS31 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS32 INS43 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS39 INS85 INS74 INS42 INS42 INS60 INS41 INS42 INS42 INS39 INS85 INS42 INS43 INS43 INS5 INS74 INS42 INS42 INS41 INS42 INS42 INS39 INS85 INS42 INS43 INS43 INS5 INS74 INS42 INS42 INS41 INS42 INS42 INS42 INS78 INS43 INS42 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS43 INS76 INS76 INS43 INS59 INS16 INS42 INS42 INS39 INS85 INS43 INS76 INS76 INS32 INS42 INS42 INS39 INS85 INS43 INS76 INS76 INS32 INS42 INS42 INS74 INS42 INS41 INS42 INS42 INS42 INS32 INS27 INS32 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS76 INS76 INS14 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS43 INS11 INS42 INS43 INS32 INS42 INS42 INS42 INS32 INS57 INS42 INS43 INS42