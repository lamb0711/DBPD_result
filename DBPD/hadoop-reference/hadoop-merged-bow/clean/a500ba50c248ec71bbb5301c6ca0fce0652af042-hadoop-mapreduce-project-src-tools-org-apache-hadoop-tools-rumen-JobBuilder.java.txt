Merge trunk into HA branch.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1224965 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.mapreduce.jobhistory.JobFinished;
+import org.apache.hadoop.mapreduce.jobhistory.TaskAttemptUnsuccessfulCompletion;
+import org.apache.hadoop.mapreduce.jobhistory.TaskFailed;
-import org.apache.hadoop.tools.rumen.datatypes.JobProperties;
-  private LoggedJob result = new LoggedJob();
+  private ParsedJob result = new ParsedJob();
-  private Map<String, LoggedTask> mapTasks = new HashMap<String, LoggedTask>();
-  private Map<String, LoggedTask> reduceTasks =
-      new HashMap<String, LoggedTask>();
-  private Map<String, LoggedTask> otherTasks =
-      new HashMap<String, LoggedTask>();
+  private Map<String, ParsedTask> mapTasks = new HashMap<String, ParsedTask>();
+  private Map<String, ParsedTask> reduceTasks =
+      new HashMap<String, ParsedTask>();
+  private Map<String, ParsedTask> otherTasks =
+      new HashMap<String, ParsedTask>();
-  private Map<String, LoggedTaskAttempt> attempts =
-      new HashMap<String, LoggedTaskAttempt>();
+  private Map<String, ParsedTaskAttempt> attempts =
+      new HashMap<String, ParsedTaskAttempt>();
-          "JobBuilder.process(HistoryEvent event) called after LoggedJob built");
+          "JobBuilder.process(HistoryEvent event) called after ParsedJob built");
-          "JobBuilder.process(Properties conf) called after LoggedJob built");
+          "JobBuilder.process(Properties conf) called after ParsedJob built");
-    result.setQueue(extract(conf, JobConfPropertyNames.QUEUE_NAMES
-        .getCandidates(), "default"));
+    String queue = extract(conf, JobConfPropertyNames.QUEUE_NAMES
+                           .getCandidates(), null);
+    // set the queue name if existing
+    if (queue != null) {
+      result.setQueue(queue);
+    }
-   * @return Parsed {@link LoggedJob} object.
+   * @return Parsed {@link ParsedJob} object.
-  public LoggedJob build() {
+  public ParsedJob build() {
-    LoggedTask task = getTask(event.getTaskId().toString());
+    ParsedTask task = getTask(event.getTaskId().toString());
-    LoggedTask task =
+    ParsedTask task =
-    LoggedTask task =
+    ParsedTask task =
-    LoggedTask task =
+    ParsedTask task =
+    TaskFailed t = (TaskFailed)(event.getDatum());
+    task.putDiagnosticInfo(t.error.toString());
+    task.putFailedDueToAttemptId(t.failedDueToAttempt.toString());
+    // No counters in TaskFailedEvent
-    LoggedTaskAttempt attempt =
+    ParsedTaskAttempt attempt =
-    ParsedHost parsedHost = getAndRecordParsedHost(event.getHostname());
-
-    if (parsedHost != null) {
-      attempt.setLocation(parsedHost.makeLoggedLocation());
+    attempt.setHostName(event.getHostname(), event.getRackName());
+    ParsedHost pHost = 
+      getAndRecordParsedHost(event.getRackName(), event.getHostname());
+    if (pHost != null) {
+      attempt.setLocation(pHost.makeLoggedLocation());
+    TaskAttemptUnsuccessfulCompletion t =
+        (TaskAttemptUnsuccessfulCompletion) (event.getDatum());
+    attempt.putDiagnosticInfo(t.error.toString());
+    // No counters in TaskAttemptUnsuccessfulCompletionEvent
-    LoggedTaskAttempt attempt =
+    ParsedTaskAttempt attempt =
+    attempt.putTrackerName(event.getTrackerName());
+    attempt.putHttpPort(event.getHttpPort());
+    attempt.putShufflePort(event.getShufflePort());
-    LoggedTaskAttempt attempt =
+    ParsedTaskAttempt attempt =
-    attempt.setLocation(getAndRecordParsedHost(event.getHostname())
-        .makeLoggedLocation());
+    ParsedHost pHost = getAndRecordParsedHost(event.getRackName(), event.getHostname());
+    if (pHost != null) {
+      attempt.setLocation(pHost.makeLoggedLocation());
+    }
-    LoggedTaskAttempt attempt =
+    ParsedTaskAttempt attempt =
+    ParsedHost pHost = 
+      getAndRecordParsedHost(event.getRackName(), event.getHostname());
+    if (pHost != null) {
+      attempt.setLocation(pHost.makeLoggedLocation());
+    }
-    LoggedTaskAttempt attempt =
+    ParsedTaskAttempt attempt =
-    attempt.setHostName(event.getHostname(), event.getRackname());
+    attempt.setHostName(event.getHostname(), event.getRackName());
+    ParsedHost pHost = 
+      getAndRecordParsedHost(event.getRackName(), event.getHostname());
+    if (pHost != null) {
+      attempt.setLocation(pHost.makeLoggedLocation());
+    }
+    
+    // No counters in JobUnsuccessfulCompletionEvent
-    // job queue name is set when conf file is processed.
-    // See JobBuilder.process(Properties) method for details.
+    result.putJobConfPath(event.getJobConfPath());
+    result.putJobAcls(event.getJobAcls());
+
+    // set the queue name if existing
+    String queue = event.getJobQueueName();
+    if (queue != null) {
+      result.setQueue(queue);
+    }
+
+    JobFinished job = (JobFinished)event.getDatum();
+    Map<String, Long> countersMap =
+        JobHistoryUtils.extractCounters(job.totalCounters);
+    result.putTotalCounters(countersMap);
+    countersMap = JobHistoryUtils.extractCounters(job.mapCounters);
+    result.putMapCounters(countersMap);
+    countersMap = JobHistoryUtils.extractCounters(job.reduceCounters);
+    result.putReduceCounters(countersMap);
-  private LoggedTask getTask(String taskIDname) {
-    LoggedTask result = mapTasks.get(taskIDname);
+  private ParsedTask getTask(String taskIDname) {
+    ParsedTask result = mapTasks.get(taskIDname);
-  private LoggedTask getOrMakeTask(TaskType type, String taskIDname,
+  private ParsedTask getOrMakeTask(TaskType type, String taskIDname,
-    Map<String, LoggedTask> taskMap = otherTasks;
+    Map<String, ParsedTask> taskMap = otherTasks;
-    LoggedTask result = taskMap.get(taskIDname);
+    ParsedTask result = taskMap.get(taskIDname);
-      result = new LoggedTask();
+      result = new ParsedTask();
-  private LoggedTaskAttempt getOrMakeTaskAttempt(TaskType type,
+  private ParsedTaskAttempt getOrMakeTaskAttempt(TaskType type,
-    LoggedTask task = getOrMakeTask(type, taskIDName, false);
-    LoggedTaskAttempt result = attempts.get(taskAttemptName);
+    ParsedTask task = getOrMakeTask(type, taskIDName, false);
+    ParsedTaskAttempt result = attempts.get(taskAttemptName);
-      result = new LoggedTaskAttempt();
+      result = new ParsedTaskAttempt();
-    ParsedHost result = ParsedHost.parse(hostName);
+    return getAndRecordParsedHost(null, hostName);
+  }
+  
+  private ParsedHost getAndRecordParsedHost(String rackName, String hostName) {
+    ParsedHost result = null;
+    if (rackName == null) {
+      // for old (pre-23) job history files where hostname was represented as
+      // /rackname/hostname
+      result = ParsedHost.parse(hostName);
+    } else {
+      // for new (post-23) job history files
+      result = new ParsedHost(rackName, hostName);
+    }

MOV26 INS26 INS26 UPD40 INS40 INS40 INS31 UPD43 UPD74 UPD74 UPD74 UPD74 UPD43 UPD43 UPD43 UPD43 INS83 INS43 INS42 INS44 INS8 INS44 UPD42 UPD43 UPD43 UPD43 UPD43 INS60 INS25 UPD42 INS60 INS21 INS21 INS21 INS60 INS21 INS21 INS21 INS21 INS60 INS60 INS25 INS60 INS25 MOV60 INS21 INS60 INS25 INS21 INS21 INS60 INS25 INS60 MOV60 INS21 INS21 INS21 INS21 INS21 UPD42 UPD42 INS60 UPD42 INS42 INS43 INS42 INS41 INS43 INS42 INS25 UPD43 UPD42 UPD74 UPD42 UPD74 UPD42 UPD74 UPD42 UPD74 INS43 INS59 INS27 INS8 UPD43 UPD43 UPD43 UPD43 INS43 INS59 INS32 INS32 UPD43 INS32 INS43 INS59 INS32 UPD43 INS32 INS32 INS32 INS43 INS59 INS43 INS59 INS27 INS8 UPD43 MOV59 INS43 INS59 INS27 INS8 UPD43 INS32 INS43 INS59 INS27 INS8 INS32 INS32 INS43 INS59 INS27 INS8 INS43 INS59 UPD74 INS59 INS32 INS7 INS32 INS7 INS32 UPD43 INS74 MOV59 UPD43 UPD43 UPD43 INS42 INS32 INS42 INS27 INS8 INS8 UPD42 UPD43 UPD43 UPD43 UPD43 INS42 INS42 MOV32 INS42 INS33 MOV21 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS32 UPD42 INS42 INS42 INS32 INS32 UPD42 UPD42 INS42 INS42 INS11 INS42 INS42 INS32 UPD42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 MOV32 INS42 INS33 MOV21 UPD42 MOV42 MOV32 INS42 INS42 INS32 INS42 INS33 INS21 UPD42 INS42 UPD42 MOV42 MOV32 MOV32 INS42 INS42 INS32 INS42 INS33 MOV21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS11 UPD43 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 UPD42 INS43 INS43 INS43 UPD42 UPD42 UPD42 INS42 INS33 INS42 INS33 INS42 INS33 INS21 INS21 UPD42 UPD42 UPD42 UPD42 INS33 INS43 INS36 INS40 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS36 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS32 MOV32 MOV32 INS42 INS32 INS32 INS32 UPD42 UPD42 INS42 MOV32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS32 UPD42 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS42 INS7 INS7 UPD45 UPD45 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 MOV32 MOV32 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 UPD42 MOV42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS14 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD43 UPD43 INS43 INS42 INS42 UPD42 UPD42 INS42 DEL45 DEL42 DEL43 DEL60 DEL42 DEL42 DEL32