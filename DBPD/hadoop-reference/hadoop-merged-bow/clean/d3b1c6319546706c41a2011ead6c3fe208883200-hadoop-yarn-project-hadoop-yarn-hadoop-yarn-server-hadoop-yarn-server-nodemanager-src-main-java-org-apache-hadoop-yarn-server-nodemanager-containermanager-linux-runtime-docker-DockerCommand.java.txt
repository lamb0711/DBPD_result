YARN-6623. Add support to turn off launching privileged containers in the container-executor. (Varun Vasudev via wangda)

Change-Id: I76aec68cbfb42d239279d7245a03290d691e87a4

-import java.util.Arrays;
+import java.util.Collections;
+import java.util.Map;
+import java.util.TreeMap;
-public abstract class DockerCommand  {
+public abstract class DockerCommand {
-  private final List<String> commandWithArguments;
+  private final Map<String, List<String>> commandArguments;
+    String dockerCommandKey = "docker-command";
-    this.commandWithArguments = new ArrayList<>();
-    commandWithArguments.add(command);
+    this.commandArguments = new TreeMap<>();
+    commandArguments.put(dockerCommandKey, new ArrayList<>());
+    commandArguments.get(dockerCommandKey).add(command);
-  /** Returns the docker sub-command string being used
-   * e.g 'run'
+  /**
+   * Returns the docker sub-command string being used
+   * e.g 'run'.
-  /** Add command commandWithArguments - this method is only meant for use by
-   * sub-classes
-   * @param arguments to be added
+  /**
+   * Add command commandWithArguments - this method is only meant for use by
+   * sub-classes.
+   *
+   * @param key   name of the key to be added
+   * @param value value of the key
-  protected final void addCommandArguments(String... arguments) {
-    this.commandWithArguments.addAll(Arrays.asList(arguments));
+  protected final void addCommandArguments(String key, String value) {
+    List<String> list = commandArguments.get(key);
+    if (list != null) {
+      list.add(value);
+      return;
+    }
+    list = new ArrayList<>();
+    list.add(value);
+    this.commandArguments.put(key, list);
-  public String getCommandWithArguments() {
-    return StringUtils.join(" ", commandWithArguments);
+  public Map<String, List<String>> getDockerCommandWithArguments() {
+    return Collections.unmodifiableMap(commandArguments);
-}
+
+  @Override
+  public String toString() {
+    StringBuffer ret = new StringBuffer(this.command);
+    for (Map.Entry<String, List<String>> entry : commandArguments.entrySet()) {
+      ret.append(" ").append(entry.getKey());
+      ret.append("=").append(StringUtils.join(",", entry.getValue()));
+    }
+    return ret.toString();
+  }
+}

MOV26 INS26 INS26 INS40 UPD40 INS40 INS31 INS74 INS44 INS83 INS74 INS42 INS8 INS78 INS43 INS42 INS8 INS43 INS43 MOV74 UPD42 INS60 INS21 INS21 INS65 UPD42 INS43 INS42 INS60 INS25 MOV21 INS21 INS43 MOV43 INS74 INS41 INS42 INS42 INS60 INS70 INS41 INS42 INS42 INS43 INS59 INS7 INS32 UPD66 UPD66 UPD42 UPD66 INS42 INS66 INS42 INS74 INS59 INS27 INS8 INS32 INS42 INS43 INS43 INS32 INS43 INS59 INS44 INS32 INS8 INS32 INS42 INS42 INS45 INS22 INS14 INS42 INS42 INS42 INS14 INS32 INS43 INS43 INS42 INS32 INS42 INS33 INS21 INS41 INS42 INS42 INS42 INS42 UPD42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS74 INS42 INS42 INS42 INS21 INS21 INS42 INS42 INS52 INS42 INS74 INS74 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 UPD42 INS43 INS22 INS43 INS43 INS74 INS32 INS32 INS43 INS43 INS42 INS42 INS42 INS42 INS52 INS42 INS40 INS42 INS43 INS43 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS45 MOV42 MOV42 UPD45 MOV45 INS32 UPD42 MOV42 INS42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL42 DEL32 DEL41 DEL8