YARN-3293. Track and display capacity scheduler health metrics in web
UI. Contributed by Varun Vasudev

+import java.util.HashMap;
+import java.util.Map;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerHealth;
-import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.ResourceInfo;
-import org.apache.hadoop.yarn.server.webapp.AppsBlock;
+import org.apache.hadoop.yarn.util.Times;
-        CapacitySchedulerInfo sinfo = new CapacitySchedulerInfo(root);
+        CapacitySchedulerInfo sinfo = new CapacitySchedulerInfo(root, cs);
+      html._(HealthBlock.class);
+    }
+  }
+
+  public static class HealthBlock extends HtmlBlock {
+
+    final CapacityScheduler cs;
+
+    @Inject
+    HealthBlock(ResourceManager rm) {
+      cs = (CapacityScheduler) rm.getResourceScheduler();
+    }
+
+    @Override
+    public void render(HtmlBlock.Block html) {
+      SchedulerHealth healthInfo = cs.getSchedulerHealth();
+      DIV<Hamlet> div = html.div("#health");
+      div.h4("Aggregate scheduler counts");
+      TBODY<TABLE<DIV<Hamlet>>> tbody =
+          div.table("#lastrun").thead().$class("ui-widget-header").tr().th()
+            .$class("ui-state-default")._("Total Container Allocations(count)")
+            ._().th().$class("ui-state-default")
+            ._("Total Container Releases(count)")._().th()
+            .$class("ui-state-default")
+            ._("Total Fulfilled Reservations(count)")._().th()
+            .$class("ui-state-default")._("Total Container Preemptions(count)")
+            ._()._()._().tbody();
+      tbody
+        .$class("ui-widget-content")
+        .tr()
+        .td(
+          String.valueOf(cs.getRootQueueMetrics()
+            .getAggregateAllocatedContainers()))
+        .td(
+          String.valueOf(cs.getRootQueueMetrics()
+            .getAggegatedReleasedContainers()))
+        .td(healthInfo.getAggregateFulFilledReservationsCount().toString())
+        .td(healthInfo.getAggregatePreemptionCount().toString())._()._()._();
+      div.h4("Last scheduler run");
+      tbody =
+          div.table("#lastrun").thead().$class("ui-widget-header").tr().th()
+            .$class("ui-state-default")._("Time")._().th()
+            .$class("ui-state-default")._("Allocations(count - resources)")._()
+            .th().$class("ui-state-default")._("Reservations(count - resources)")
+            ._().th().$class("ui-state-default")._("Releases(count - resources)")
+            ._()._()._().tbody();
+      tbody
+        .$class("ui-widget-content")
+        .tr()
+        .td(Times.format(healthInfo.getLastSchedulerRunTime()))
+        .td(
+          healthInfo.getAllocationCount().toString() + " - "
+              + healthInfo.getResourcesAllocated().toString())
+        .td(
+          healthInfo.getReservationCount().toString() + " - "
+              + healthInfo.getResourcesReserved().toString())
+        .td(
+          healthInfo.getReleaseCount().toString() + " - "
+              + healthInfo.getResourcesReleased().toString())._()._()._();
+      Map<String, SchedulerHealth.DetailedInformation> info = new HashMap<>();
+      info.put("Allocation", healthInfo.getLastAllocationDetails());
+      info.put("Reservation", healthInfo.getLastReservationDetails());
+      info.put("Release", healthInfo.getLastReleaseDetails());
+      info.put("Preemption", healthInfo.getLastPreemptionDetails());
+
+      for (Map.Entry<String, SchedulerHealth.DetailedInformation> entry : info
+        .entrySet()) {
+        String containerId = "N/A";
+        String nodeId = "N/A";
+        String queue = "N/A";
+        String table = "#" + entry.getKey();
+        div.h4("Last " + entry.getKey());
+        tbody =
+            div.table(table).thead().$class("ui-widget-header").tr().th()
+              .$class("ui-state-default")._("Time")._().th()
+              .$class("ui-state-default")._("Container Id")._().th()
+              .$class("ui-state-default")._("Node Id")._().th()
+              .$class("ui-state-default")._("Queue")._()._()._().tbody();
+        SchedulerHealth.DetailedInformation di = entry.getValue();
+        if (di.getTimestamp() != 0) {
+          containerId = di.getContainerId().toString();
+          nodeId = di.getNodeId().toString();
+          queue = di.getQueue();
+        }
+        tbody.$class("ui-widget-content").tr()
+          .td(Times.format(di.getTimestamp())).td(containerId).td(nodeId)
+          .td(queue)._()._()._();
+      }
+      div._();

MOV26 INS26 INS26 INS40 INS40 UPD40 UPD40 INS55 INS83 INS83 INS42 INS43 INS23 INS31 INS31 INS42 INS83 INS43 INS59 INS78 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS21 INS42 INS42 INS42 INS43 INS42 INS21 INS42 INS43 INS42 INS60 INS60 INS21 INS60 INS21 INS21 INS21 INS21 INS60 INS21 INS21 INS21 INS21 INS70 INS21 INS32 INS42 INS7 INS40 INS43 INS59 INS74 INS59 INS32 INS74 INS59 INS32 INS32 INS7 INS32 INS74 INS59 INS32 INS32 INS32 INS32 INS44 INS32 INS8 INS32 INS42 INS42 INS57 INS42 INS11 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS42 INS42 INS45 INS43 INS74 INS42 INS32 INS32 INS42 INS42 INS42 INS45 INS42 INS32 INS32 INS42 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS45 INS32 INS42 INS42 INS45 INS32 INS42 INS42 INS45 INS32 INS42 INS42 INS45 INS32 INS74 INS42 INS42 INS42 INS60 INS60 INS60 INS60 INS21 INS21 INS60 INS25 INS21 INS42 INS42 MOV43 INS43 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS43 INS74 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS40 INS74 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS7 INS43 INS59 INS27 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS43 INS40 INS42 INS40 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS32 INS40 INS42 INS32 INS32 INS34 INS21 INS21 INS21 INS32 INS42 MOV43 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS27 INS42 INS45 INS32 INS45 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS7 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS32 INS42 INS27 INS32 INS45 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS27 INS32 INS45 INS32 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS32 INS32 INS45 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS32 INS32 INS42 INS45 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS42 INS42 INS42