YARN-3287. Made TimelineClient put methods do as the correct login context. Contributed by Daryn Sharp and Jonathan Eagles.

+import org.apache.hadoop.security.authentication.client.AuthenticationException;
+  private UserGroupInformation authUgi;
+  private String doAsUser;
+    UserGroupInformation ugi = UserGroupInformation.getCurrentUser();
+    UserGroupInformation realUgi = ugi.getRealUser();
+    if (realUgi != null) {
+      authUgi = realUgi;
+      doAsUser = ugi.getShortUserName();
+    } else {
+      authUgi = ugi;
+      doAsUser = null;
+    }
-  private ClientResponse doPosting(Object obj, String path) throws IOException, YarnException {
+  private ClientResponse doPosting(final Object obj, final String path)
+      throws IOException, YarnException {
-      resp = doPostingObject(obj, path);
-    } catch (RuntimeException re) {
-      // runtime exception is expected if the client cannot connect the server
-      String msg =
-          "Failed to get the response from the timeline server.";
-      LOG.error(msg, re);
-      throw re;
+      resp = authUgi.doAs(new PrivilegedExceptionAction<ClientResponse>() {
+        @Override
+        public ClientResponse run() throws Exception {
+          return doPostingObject(obj, path);
+        }
+      });
+    } catch (UndeclaredThrowableException e) {
+        throw new IOException(e.getCause());
+    } catch (InterruptedException ie) {
+      throw new IOException(ie);
-    boolean isProxyAccess =
-        UserGroupInformation.getCurrentUser().getAuthenticationMethod()
-        == UserGroupInformation.AuthenticationMethod.PROXY;
-    final String doAsUser = isProxyAccess ?
-        UserGroupInformation.getCurrentUser().getShortUserName() : null;
-    boolean isProxyAccess =
-        UserGroupInformation.getCurrentUser().getAuthenticationMethod()
-        == UserGroupInformation.AuthenticationMethod.PROXY;
-    final String doAsUser = isProxyAccess ?
-        UserGroupInformation.getCurrentUser().getShortUserName() : null;
-    boolean isProxyAccess =
-        UserGroupInformation.getCurrentUser().getAuthenticationMethod()
-        == UserGroupInformation.AuthenticationMethod.PROXY;
-    final String doAsUser = isProxyAccess ?
-        UserGroupInformation.getCurrentUser().getShortUserName() : null;
-        boolean isProxyAccess =
-            UserGroupInformation.getCurrentUser().getAuthenticationMethod()
-            == UserGroupInformation.AuthenticationMethod.PROXY;
-        UserGroupInformation callerUGI = isProxyAccess ?
-            UserGroupInformation.getCurrentUser().getRealUser()
-            : UserGroupInformation.getCurrentUser();
-        callerUGI.checkTGTAndReloginFromKeytab();
+        authUgi.checkTGTAndReloginFromKeytab();
-          return callerUGI.doAs(action);
+          return authUgi.doAs(action);
-      boolean isProxyAccess =
-          UserGroupInformation.getCurrentUser().getAuthenticationMethod()
-          == UserGroupInformation.AuthenticationMethod.PROXY;
-      UserGroupInformation callerUGI = isProxyAccess ?
-          UserGroupInformation.getCurrentUser().getRealUser()
-          : UserGroupInformation.getCurrentUser();
-      final String doAsUser = isProxyAccess ?
-          UserGroupInformation.getCurrentUser().getShortUserName() : null;
-      callerUGI.checkTGTAndReloginFromKeytab();
+      authUgi.checkTGTAndReloginFromKeytab();
-        return callerUGI.doAs(new PrivilegedExceptionAction<HttpURLConnection>() {
-          @Override
-          public HttpURLConnection run() throws Exception {
-            return new DelegationTokenAuthenticatedURL(
-                authenticator, connConfigurator).openConnection(url, token,
-                doAsUser);
-          }
-        });
+        return new DelegationTokenAuthenticatedURL(
+            authenticator, connConfigurator).openConnection(url, token,
+              doAsUser);
-      } catch (InterruptedException e) {
-        throw new IOException(e);
+      } catch (AuthenticationException ae) {
+        throw new IOException(ae);

INS26 INS40 INS23 INS23 INS83 INS43 INS59 INS83 MOV43 INS59 INS42 INS42 INS42 INS60 INS60 INS25 INS83 INS83 MOV43 MOV78 MOV43 MOV43 INS59 MOV43 INS59 INS27 INS8 INS8 INS8 INS12 INS12 INS42 MOV32 INS42 INS32 INS42 INS33 INS21 INS21 INS21 INS21 INS21 INS44 INS8 INS44 INS8 MOV8 INS42 INS42 INS7 INS7 INS7 INS7 INS7 INS43 INS42 INS53 INS43 INS42 MOV53 UPD42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS33 INS42 INS32 INS42 INS14 INS42 INS14 UPD43 UPD42 INS42 INS42 INS42 INS42 INS14 INS43 INS32 INS43 INS42 UPD42 INS74 INS1 INS42 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV43 INS43 INS31 INS42 MOV78 INS83 INS43 INS42 MOV43 MOV8 UPD42 INS42 UPD42 MOV42 INS41 MOV32 UPD42 DEL42 DEL7 DEL21 DEL42 DEL43 DEL42 DEL44 DEL43 DEL42 DEL45 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL39 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL40 DEL27 DEL59 DEL60 DEL83 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL16 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL40 DEL27 DEL59 DEL60 DEL83 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL16 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL40 DEL27 DEL59 DEL60 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL16 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL40 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL16 DEL59 DEL60 DEL42 DEL43 DEL39 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL40 DEL27 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL16 DEL59 DEL60 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33 DEL16 DEL59 DEL60 DEL42 DEL42 DEL42 DEL43 DEL74 DEL83 DEL42 DEL31 DEL1 DEL14 DEL32 DEL41 DEL8