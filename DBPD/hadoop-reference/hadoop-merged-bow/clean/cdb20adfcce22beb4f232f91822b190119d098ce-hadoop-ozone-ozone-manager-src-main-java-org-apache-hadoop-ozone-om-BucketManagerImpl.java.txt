HDDS-1611. Evaluate ACL on volume bucket key and prefix to authorize access. Contributed by Ajay Kumar. (#973)


+import org.apache.hadoop.ozone.security.acl.RequestContext;
+import org.apache.hadoop.ozone.web.utils.OzoneUtils;
+import static org.apache.hadoop.ozone.om.exceptions.OMException.ResultCodes.INTERNAL_ERROR;
+
+  /**
+   * Check access for given ozoneObject.
+   *
+   * @param ozObject object for which access needs to be checked.
+   * @param context Context object encapsulating all user related information.
+   * @return true if user has access else false.
+   */
+  @Override
+  public boolean checkAccess(OzoneObj ozObject, RequestContext context)
+      throws OMException {
+    Objects.requireNonNull(ozObject);
+    Objects.requireNonNull(context);
+
+    String volume = ozObject.getVolumeName();
+    String bucket = ozObject.getBucketName();
+    metadataManager.getLock().acquireLock(BUCKET_LOCK, volume, bucket);
+    try {
+      String dbBucketKey = metadataManager.getBucketKey(volume, bucket);
+      OmBucketInfo bucketInfo =
+          metadataManager.getBucketTable().get(dbBucketKey);
+      if (bucketInfo == null) {
+        LOG.debug("Bucket:{}/{} does not exist", volume, bucket);
+        throw new OMException("Bucket " + bucket + " is not found",
+            BUCKET_NOT_FOUND);
+      }
+      boolean hasAccess = OzoneUtils.checkAclRights(bucketInfo.getAcls(),
+          context);
+      LOG.debug("user:{} has access rights for bucket:{} :{} ",
+          context.getClientUgi(), ozObject.getBucketName(), hasAccess);
+      return hasAccess;
+    } catch (IOException ex) {
+      if(ex instanceof OMException) {
+        throw (OMException) ex;
+      }
+      LOG.error("CheckAccess operation failed for bucket:{}/{} acl:{}",
+          volume, bucket, ex);
+      throw new OMException("Check access operation failed for " +
+          "bucket:" + bucket, ex, INTERNAL_ERROR);
+    } finally {
+      metadataManager.getLock().releaseLock(BUCKET_LOCK, volume, bucket); 
+    }
+  }

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS29 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS42 INS21 INS21 INS60 INS60 INS21 INS54 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS32 INS32 INS43 INS59 INS43 INS59 INS32 INS8 INS12 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS60 INS60 INS25 INS60 INS21 INS41 INS44 INS8 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS39 INS59 INS32 INS42 INS43 INS42 INS25 INS21 INS53 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS53 INS42 INS32 INS42 INS42 INS45 INS32 INS32 INS42 INS42 INS62 INS8 INS32 INS14 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS53 INS42 INS42 INS45 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS42 INS11 INS42 INS45 INS45 INS42 INS42 INS45 INS42 INS45 INS43 INS42 INS42