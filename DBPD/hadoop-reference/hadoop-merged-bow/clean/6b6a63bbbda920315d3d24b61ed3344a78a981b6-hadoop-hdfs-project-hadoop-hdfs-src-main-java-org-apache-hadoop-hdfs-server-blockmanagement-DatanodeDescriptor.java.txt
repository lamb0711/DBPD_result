Merge commit '456e901a4c5c639267ee87b8e5f1319f256d20c2' (HDFS-6407. Add sorting and pagination in the datanode tab of the NN Web UI. Contributed by Haohui Mai.) into HDFS-7285-merge

-
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
-  public static final Log LOG = LogFactory.getLog(DatanodeDescriptor.class);
+  public static final Logger LOG =
+      LoggerFactory.getLogger(DatanodeDescriptor.class);
-  public final DecommissioningStatus decommissioningStatus = new DecommissioningStatus();
+  public final DecommissioningStatus decommissioningStatus =
+      new DecommissioningStatus();
-      List<E> results = new ArrayList<E>();
+      List<E> results = new ArrayList<>();
-      new HashMap<String, DatanodeStorageInfo>();
+      new HashMap<>();
-      = new EnumCounters<StorageType>(StorageType.class);
+      = new EnumCounters<>(StorageType.class);
-      = new EnumCounters<StorageType>(StorageType.class);
+      = new EnumCounters<>(StorageType.class);
-          LOG.info(storageInfo.getStorageID() + " had lastBlockReportId 0x" +
-              Long.toHexString(storageInfo.getLastBlockReportId()) +
-              ", but curBlockReportId = 0x" +
+          LOG.info("{} had lastBlockReportId 0x{} but curBlockReportId = 0x{}",
+              storageInfo.getStorageID(),
+              Long.toHexString(storageInfo.getLastBlockReportId()),
-            zombies = new LinkedList<DatanodeStorageInfo>();
+            zombies = new LinkedList<>();
-      LOG.info("Number of failed storage changes from "
-          + this.volumeFailures + " to " + volFailures);
+      if (this.volumeFailures != volFailures) {
+        LOG.info("Number of failed storages changes from {} to {}",
+            this.volumeFailures, volFailures);
+      }
-            new HashSet<DatanodeStorageInfo>(storageMap.values());
+            new HashSet<>(storageMap.values());
-      if (LOG.isDebugEnabled()) {
-        LOG.debug("Number of storages reported in heartbeat=" + reports.length
-            + "; Number of storages in storageMap=" + storageMap.size());
-      }
+      LOG.debug("Number of storages reported in heartbeat={};"
+              + " Number of storages in storageMap={}", reports.length,
+          storageMap.size());
-      excessStorages = new HashMap<String, DatanodeStorageInfo>(storageMap);
+      excessStorages = new HashMap<>(storageMap);
-          LOG.info("Removed storage " + storageInfo + " from DataNode" + this);
-        } else if (LOG.isDebugEnabled()) {
+          LOG.info("Removed storage {} from DataNode {}", storageInfo, this);
+        } else {
-          LOG.debug("Deferring removal of stale storage " + storageInfo
-              + " with " + storageInfo.numBlocks() + " blocks");
+          LOG.debug("Deferring removal of stale storage {} with {} blocks",
+              storageInfo, storageInfo.numBlocks());
-        LOG.info(storageInfo + " failed.");
+        LOG.info("{} failed.", storageInfo);
-        LOG.info("Adding new storage ID " + s.getStorageID() +
-                 " for DN " + getXferAddr());
+        LOG.info("Adding new storage ID {} for DN {}", s.getStorageID(),
+            getXferAddr());

MOV26 MOV26 UPD40 UPD40 UPD43 UPD42 UPD42 UPD42 UPD74 UPD74 UPD74 INS25 MOV21 UPD27 MOV27 INS8 UPD74 MOV21 INS40 MOV32 UPD45 UPD45 UPD74 MOV8 INS45 INS22 INS42 INS45 INS42 INS45 MOV32 MOV32 INS52 INS42 UPD74 INS45 MOV32 MOV32 MOV32 INS45 INS42 INS52 INS45 INS42 MOV32 UPD74 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL45 DEL45 DEL27 DEL42 DEL43 DEL45 DEL45 DEL42 DEL43 DEL40 DEL42 DEL42 DEL32 DEL8 DEL25 DEL42 DEL43 DEL42 DEL43 DEL45 DEL42 DEL45 DEL52 DEL27 DEL45 DEL42 DEL45 DEL45 DEL27 DEL42 DEL42 DEL32 DEL25 DEL42 DEL45 DEL27 DEL45 DEL45 DEL27