HADOOP-9642. Configuration to resolve environment variables via ${env.VARIABLE} references (Kengo Seki via aw)

+ * <li>Environment variables in {@link System#getenv()} if a name starts with
+ * "env.", or</li>
- *  &lt;/property&gt;</pre></tt>
+ *  &lt;/property&gt;
- * When <tt>conf.get("tempdir")</tt> is called, then <tt>${<i>basedir</i>}</tt>
+ *  &lt;property&gt;
+ *    &lt;name&gt;otherdir&lt;/name&gt;
+ *    &lt;value&gt;${<i>env.BASE_DIR</i>}/other&lt;/value&gt;
+ *  &lt;/property&gt;
+ *  </pre></tt>
+ *
+ * <p>When <tt>conf.get("tempdir")</tt> is called, then <tt>${<i>basedir</i>}</tt>
- * By default, warnings will be given to any deprecated configuration 
+ * <p>When <tt>conf.get("otherdir")</tt> is called, then <tt>${<i>env.BASE_DIR</i>}</tt>
+ * will be resolved to the value of the <tt>${<i>BASE_DIR</i>}</tt> environment variable.
+ * It supports <tt>${<i>env.NAME:-default</i>}</tt> and <tt>${<i>env.NAME-default</i>}</tt> notations.
+ * The former is resolved to “default” if <tt>${<i>NAME</i>}</tt> environment variable is undefined
+ * or its value is empty.
+ * The latter behaves the same way only if <tt>${<i>NAME</i>}</tt> is undefined.
+ * <p>By default, warnings will be given to any deprecated configuration 
+   *   <li>by the value of the environment variable "var" if defined</li>
-        val = System.getProperty(var);
+        if (var.startsWith("env.") && 4 < var.length()) {
+          String v = var.substring(4);
+          int i = 0;
+          for (; i < v.length(); i++) {
+            char c = v.charAt(i);
+            if (c == ':' && i < v.length() - 1 && v.charAt(i + 1) == '-') {
+              val = getenv(v.substring(0, i));
+              if (val == null || val.length() == 0) {
+                val = v.substring(i + 2);
+              }
+              break;
+            } else if (c == '-') {
+              val = getenv(v.substring(0, i));
+              if (val == null) {
+                val = v.substring(i + 1);
+              }
+              break;
+            }
+          }
+          if (i == v.length()) {
+            val = getenv(v);
+          }
+        } else {
+          val = getProperty(var);
+        }
+  String getenv(String name) {
+    return System.getenv(name);
+  }
+
+  String getProperty(String key) {
+    return System.getProperty(key);
+  }
+

INS31 INS31 INS43 INS42 INS44 INS8 INS43 INS42 INS44 INS8 INS66 INS65 INS66 INS66 UPD66 INS66 INS66 INS66 INS66 INS66 UPD66 INS66 INS66 INS66 INS66 INS66 INS66 UPD66 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS41 INS68 INS66 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS8 INS25 INS27 INS8 INS8 INS32 INS27 INS60 INS60 INS24 INS25 MOV21 INS42 INS42 INS45 INS34 INS32 INS43 INS59 INS39 INS59 INS27 INS37 INS8 INS27 INS8 INS42 INS42 INS42 INS42 INS32 INS42 INS34 INS42 INS32 INS42 INS60 INS25 INS42 INS32 INS21 INS42 INS42 INS34 INS42 INS42 INS39 INS59 INS27 INS8 INS25 INS42 INS42 INS7 INS42 INS32 INS27 INS27 INS21 INS25 INS10 INS27 INS8 INS42 INS32 INS42 INS42 INS42 INS27 INS27 INS32 INS13 INS7 INS27 INS8 INS42 INS13 INS21 INS25 INS10 INS42 INS42 INS42 INS13 INS42 INS27 INS42 INS42 INS27 INS42 INS32 INS27 INS27 INS21 INS7 INS27 INS8 INS32 INS34 INS42 INS34 INS42 INS32 INS42 INS33 INS32 INS34 INS7 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS7 INS42 INS42 INS27 INS42 INS42 INS34 INS42 INS42 INS32 INS42 INS34 INS42 INS42 INS27 INS42 INS34 DEL42 DEL8