HDFS-8081. Split getAdditionalBlock() into two methods. Contributed by Konstantin Shvachko
+    LocatedBlock[] onRetryBlock = new LocatedBlock[1];
+    DatanodeStorageInfo targets[] = getNewBlockTargets(src, fileId,
+        clientName, previous, excludedNodes, favoredNodes, onRetryBlock);
+    if (targets == null) {
+      assert onRetryBlock[0] != null : "Retry block is null";
+      // This is a retry. Just return the last block.
+      return onRetryBlock[0];
+    }
+    LocatedBlock newBlock = storeAllocatedBlock(
+        src, fileId, clientName, previous, targets);
+    return newBlock;
+  }
+
+  /**
+   * Part I of getAdditionalBlock().
+   * Analyze the state of the file under read lock to determine if the client
+   * can add a new block, detect potential retries, lease mismatches,
+   * and minimal replication of the penultimate block.
+   * 
+   * Generate target DataNode locations for the new block,
+   * but do not create the new block yet.
+   */
+  DatanodeStorageInfo[] getNewBlockTargets(String src, long fileId,
+      String clientName, ExtendedBlock previous, Set<Node> excludedNodes,
+      List<String> favoredNodes, LocatedBlock[] onRetryBlock) throws IOException {
-    // Part I. Analyze the state of the file with respect to the input data.
-      LocatedBlock[] onRetryBlock = new LocatedBlock[1];
-        // This is a retry. Just return the last block if having locations.
-        return onRetryBlock[0];
+        // This is a retry. No need to generate new locations.
+        // Use the last block if it has locations.
+        return null;
-    final DatanodeStorageInfo targets[] = getBlockManager().chooseTarget4NewBlock( 
+    return getBlockManager().chooseTarget4NewBlock( 
+  }
-    // Part II.
-    // Allocate a new block, add it to the INode and the BlocksMap. 
+  /**
+   * Part II of getAdditionalBlock().
+   * Should repeat the same analysis of the file state as in Part 1,
+   * but under the write lock.
+   * If the conditions still hold, then allocate a new block with
+   * the new targets, add it to the INode and to the BlocksMap.
+   */
+  LocatedBlock storeAllocatedBlock(String src, long fileId, String clientName,
+      ExtendedBlock previous, DatanodeStorageInfo[] targets) throws IOException {

INS31 INS31 MOV29 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS29 INS5 UPD42 INS44 INS29 MOV43 INS42 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS74 INS42 INS42 MOV60 INS60 INS25 INS60 INS41 INS65 INS43 INS85 INS5 INS42 INS41 INS65 INS43 INS42 INS39 INS42 INS43 INS42 INS43 INS42 INS5 INS42 INS42 MOV60 MOV60 MOV21 MOV21 MOV21 MOV54 MOV21 MOV41 INS42 INS42 INS42 INS43 INS43 INS43 INS43 INS43 INS59 INS27 MOV8 INS43 INS59 INS42 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS43 INS85 MOV32 INS66 INS66 INS66 INS66 INS66 INS42 INS42 INS42 MOV43 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS85 INS32 INS42 INS33 INS6 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS8 INS2 INS33 INS41 INS42 INS34 INS33 DEL83 DEL42 DEL85 DEL59 DEL60