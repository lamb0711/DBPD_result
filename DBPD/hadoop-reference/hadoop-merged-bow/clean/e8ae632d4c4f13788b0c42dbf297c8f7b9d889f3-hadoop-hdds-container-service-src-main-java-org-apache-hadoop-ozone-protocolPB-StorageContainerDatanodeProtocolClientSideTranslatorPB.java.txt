HDDS-2068. Make StorageContainerDatanodeProtocolService message based

Signed-off-by: Anu Engineer <aengineer@apache.org>

+import org.apache.hadoop.hdds.protocol.proto.StorageContainerDatanodeProtocolProtos.SCMDatanodeRequest;
+import org.apache.hadoop.hdds.protocol.proto.StorageContainerDatanodeProtocolProtos.SCMDatanodeRequest.Builder;
+import org.apache.hadoop.hdds.protocol.proto.StorageContainerDatanodeProtocolProtos.SCMDatanodeResponse;
+import org.apache.hadoop.hdds.protocol.proto.StorageContainerDatanodeProtocolProtos.Type;
+import java.util.function.Consumer;
+   * Helper method to wrap the request and send the message.
+   */
+  private SCMDatanodeResponse submitRequest(Type type,
+      Consumer<SCMDatanodeRequest.Builder> builderConsumer) throws IOException {
+    final SCMDatanodeResponse response;
+    try {
+      Builder builder = SCMDatanodeRequest.newBuilder()
+          .setCmdType(type);
+      builderConsumer.accept(builder);
+      SCMDatanodeRequest wrapper = builder.build();
+
+      response = rpcProxy.submitRequest(NULL_RPC_CONTROLLER, wrapper);
+    } catch (ServiceException ex) {
+      throw ProtobufHelper.getRemoteException(ex);
+    }
+    return response;
+  }
+
+  /**
-      unused) throws IOException {
-    SCMVersionRequestProto request =
-        SCMVersionRequestProto.newBuilder().build();
-    final SCMVersionResponseProto response;
-    try {
-      response = rpcProxy.getVersion(NULL_RPC_CONTROLLER, request);
-    } catch (ServiceException ex) {
-      throw ProtobufHelper.getRemoteException(ex);
-    }
-    return response;
+      request) throws IOException {
+    return submitRequest(Type.GetVersion,
+        (builder) -> builder
+            .setGetVersionRequest(SCMVersionRequestProto.newBuilder().build()))
+        .getGetVersionResponse();
-    final SCMHeartbeatResponseProto resp;
-    try {
-      resp = rpcProxy.sendHeartbeat(NULL_RPC_CONTROLLER, heartbeat);
-    } catch (ServiceException e) {
-      throw ProtobufHelper.getRemoteException(e);
-    }
-    return resp;
+    return submitRequest(Type.SendHeartbeat,
+        (builder) -> builder.setSendHeartbeatRequest(heartbeat))
+        .getSendHeartbeatResponse();
-    final SCMRegisteredResponseProto response;
-    try {
-      response = rpcProxy.register(NULL_RPC_CONTROLLER, req.build());
-    } catch (ServiceException e) {
-      throw ProtobufHelper.getRemoteException(e);
-    }
-    return response;
+    return submitRequest(Type.Register,
+        (builder) -> builder.setRegisterRequest(req))
+        .getRegisterResponse();
-

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS29 UPD83 MOV83 INS43 INS42 MOV44 INS44 INS43 INS8 MOV29 MOV78 INS83 MOV43 INS42 INS44 MOV43 INS8 MOV29 MOV78 INS83 MOV43 INS42 MOV44 MOV43 INS8 INS65 INS42 UPD43 UPD42 INS74 INS42 INS42 MOV60 INS54 MOV41 MOV43 UPD42 MOV42 INS41 MOV41 INS41 INS66 UPD42 INS43 INS43 UPD43 INS8 MOV12 INS32 INS32 INS32 INS42 INS40 UPD42 INS60 INS21 MOV60 MOV21 INS32 UPD42 MOV42 INS32 INS42 INS32 INS42 INS43 INS59 INS32 UPD43 INS42 INS40 INS86 INS42 INS40 INS86 INS42 INS40 INS86 INS42 INS42 INS32 INS42 INS42 INS42 UPD42 UPD42 INS32 UPD42 INS59 INS32 INS59 INS32 INS59 INS32 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD42 UPD42 INS42 INS42 UPD42 MOV42 MOV32 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 DEL83 DEL42 DEL42 DEL42 DEL59 DEL60 DEL42 DEL32 DEL7 DEL21 DEL8 DEL54 DEL8 DEL31 DEL83 DEL42 DEL8 DEL42 DEL43 DEL44 DEL42 DEL32 DEL53 DEL8 DEL12 DEL54 DEL8 DEL31 DEL83 DEL42 DEL43 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL53 DEL8 DEL12 DEL54 DEL42 DEL41