HDFS-7449. Add metrics to NFS gateway. Contributed by Brandon Li

+import org.apache.hadoop.metrics2.lib.DefaultMetricsSystem;
+import org.apache.hadoop.net.DNS;
+  static Nfs3Metrics metrics;
+  public static RpcProgramNfs3 createRpcProgramNfs3(NfsConfiguration config,
+      DatagramSocket registrationSocket, boolean allowInsecurePorts)
+      throws IOException {
+    DefaultMetricsSystem.initialize("Nfs3");
+    String displayName = DNS.getDefaultHost("default", "default")
+        + config.getInt(NfsConfigKeys.DFS_NFS_SERVER_PORT_KEY,
+            NfsConfigKeys.DFS_NFS_SERVER_PORT_DEFAULT);
+    metrics = Nfs3Metrics.create(config, displayName);
+    return new RpcProgramNfs3(config, registrationSocket, allowInsecurePorts);
+  }
+  
-  public void startDaemons() {    
+  public void startDaemons() {
+      metrics.getJvmMetrics().setPauseMonitor(pauseMonitor);
+          metrics.incrBytesRead(readCount);
-      writeManager.handleCommit(dfsClient, handle, commitOffset,
-          channel, xid, preOpAttr);
+      writeManager.handleCommit(dfsClient, handle, commitOffset, channel, xid,
+          preOpAttr);
-
+    
+    // Since write and commit could be async, they use their own startTime and
+    // only record success requests.
+    final long startTime = System.nanoTime();
+    
+      metrics.addGetattr(Nfs3Utils.getElapsedTime(startTime));
+      metrics.addSetattr(Nfs3Utils.getElapsedTime(startTime));
+      metrics.addLookup(Nfs3Utils.getElapsedTime(startTime));
+      metrics.addAccess(Nfs3Utils.getElapsedTime(startTime));
+      metrics.addReadlink(Nfs3Utils.getElapsedTime(startTime));
+      metrics.addRead(Nfs3Utils.getElapsedTime(startTime));
+      metrics.addCreate(Nfs3Utils.getElapsedTime(startTime));
+      metrics.addMkdir(Nfs3Utils.getElapsedTime(startTime));
+      metrics.addSymlink(Nfs3Utils.getElapsedTime(startTime));
+      metrics.addMknod(Nfs3Utils.getElapsedTime(startTime));
+      metrics.addRemove(Nfs3Utils.getElapsedTime(startTime));
+      metrics.addRmdir(Nfs3Utils.getElapsedTime(startTime));
+      metrics.addRename(Nfs3Utils.getElapsedTime(startTime));
+      metrics.addLink(Nfs3Utils.getElapsedTime(startTime));
+      metrics.addReaddir(Nfs3Utils.getElapsedTime(startTime));
+      metrics.addReaddirplus(Nfs3Utils.getElapsedTime(startTime));
+      metrics.addFsstat(Nfs3Utils.getElapsedTime(startTime));
+      metrics.addFsinfo(Nfs3Utils.getElapsedTime(startTime));
-      response = pathconf(xdr,info);
+      response = pathconf(xdr, info);
+      metrics.addPathconf(Nfs3Utils.getElapsedTime(startTime));

INS26 INS26 INS40 INS40 INS23 INS31 INS83 INS43 INS59 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS43 INS8 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS42 INS21 INS60 INS21 INS41 INS60 INS42 INS42 INS32 INS43 INS59 INS7 INS14 INS83 INS39 INS59 INS42 INS42 INS45 INS42 INS42 INS27 INS42 INS32 INS43 INS42 INS42 INS42 INS21 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS21 INS42 INS42 INS45 INS45 INS42 INS42 INS40 INS40 INS32 INS42 INS42 INS32 INS21 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS21 INS42 INS42 INS42 INS32 INS21 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42