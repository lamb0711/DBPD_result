Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1170378 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.api.records.ContainerStatus;
-public class ParentQueue implements Queue {
+public class ParentQueue implements CSQueue {
-  private final Queue parent;
+  private final CSQueue parent;
-  private final Set<Queue> childQueues;
-  private final Comparator<Queue> queueComparator;
+  private final Set<CSQueue> childQueues;
+  private final Comparator<CSQueue> queueComparator;
-      String queueName, Comparator<Queue> comparator, Queue parent, Queue old) {
+      String queueName, Comparator<CSQueue> comparator, CSQueue parent, CSQueue old) {
-    this.childQueues = new TreeSet<Queue>(comparator);
+    this.childQueues = new TreeSet<CSQueue>(comparator);
-  void setChildQueues(Collection<Queue> childQueues) {
+  void setChildQueues(Collection<CSQueue> childQueues) {
-    for (Queue queue : childQueues) {
+    for (CSQueue queue : childQueues) {
-  public Queue getParent() {
+  public CSQueue getParent() {
-  public synchronized List<Queue> getChildQueues() {
-    return new ArrayList<Queue>(childQueues);
+  public synchronized List<CSQueue> getChildQueues() {
+    return new ArrayList<CSQueue>(childQueues);
-      for (Queue child : childQueues) {
+      for (CSQueue child : childQueues) {
-    for (Queue child : childQueues) {
+    for (CSQueue child : childQueues) {
-  public synchronized void reinitialize(Queue queue, Resource clusterResource)
+  public synchronized void reinitialize(CSQueue queue, Resource clusterResource)
-    Map<String, Queue> currentChildQueues = getQueues(childQueues);
-    Map<String, Queue> newChildQueues = getQueues(parentQueue.childQueues);
-    for (Map.Entry<String, Queue> e : newChildQueues.entrySet()) {
+    Map<String, CSQueue> currentChildQueues = getQueues(childQueues);
+    Map<String, CSQueue> newChildQueues = getQueues(parentQueue.childQueues);
+    for (Map.Entry<String, CSQueue> e : newChildQueues.entrySet()) {
-      Queue newChildQueue = e.getValue();
+      CSQueue newChildQueue = e.getValue();
-      Queue childQueue = currentChildQueues.get(newChildQueueName);
+      CSQueue childQueue = currentChildQueues.get(newChildQueueName);
-  Map<String, Queue> getQueues(Set<Queue> queues) {
-    Map<String, Queue> queuesMap = new HashMap<String, Queue>();
-    for (Queue queue : queues) {
+  Map<String, CSQueue> getQueues(Set<CSQueue> queues) {
+    Map<String, CSQueue> queuesMap = new HashMap<String, CSQueue>();
+    for (CSQueue queue : queues) {
-    for (Iterator<Queue> iter=childQueues.iterator(); iter.hasNext();) {
-      Queue childQueue = iter.next();
+    for (Iterator<CSQueue> iter=childQueues.iterator(); iter.hasNext();) {
+      CSQueue childQueue = iter.next();
-    for (Queue q : childQueues) {
+    for (CSQueue q : childQueues) {
-      RMContainer rmContainer, RMContainerEventType event) {
+      RMContainer rmContainer, ContainerStatus containerStatus, RMContainerEventType event) {
-            node, rmContainer, event);
+            node, rmContainer, null, event);
-    for (Queue childQueue : childQueues) {
+    for (CSQueue childQueue : childQueues) {

INS26 INS40 UPD43 UPD42 UPD43 UPD74 UPD74 UPD43 UPD74 UPD74 INS44 UPD42 UPD43 UPD43 UPD74 UPD43 UPD43 UPD74 UPD42 UPD43 UPD43 UPD43 UPD74 INS43 INS42 UPD42 UPD42 UPD43 UPD42 UPD42 UPD43 UPD42 UPD42 UPD74 UPD74 UPD42 UPD43 UPD74 INS42 UPD42 UPD42 UPD43 UPD74 UPD43 UPD43 UPD43 UPD74 UPD42 UPD43 UPD43 UPD74 UPD43 UPD43 UPD74 UPD42 UPD43 UPD42 UPD42 UPD42 UPD43 UPD43 UPD43 UPD42 UPD74 UPD42 UPD43 UPD43 UPD42 UPD42 UPD43 UPD42 UPD43 UPD42 UPD42 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 INS33