Merge trunk into HDDS-48

-
+import static java.lang.Math.max;
+
-import org.apache.commons.lang3.builder.EqualsBuilder;
-import org.apache.commons.lang3.builder.HashCodeBuilder;
-import org.apache.hadoop.hdds.scm.container.ContainerID;
-import org.apache.hadoop.hdds.protocol.proto.HddsProtos;
-import org.apache.hadoop.util.Time;
-
+import java.io.Externalizable;
+import java.io.ObjectInput;
+import java.io.ObjectOutput;
-
-import static java.lang.Math.max;
+import org.apache.commons.lang3.builder.EqualsBuilder;
+import org.apache.commons.lang3.builder.HashCodeBuilder;
+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;
+import org.apache.hadoop.hdds.protocol.proto.HddsProtos.ReplicationFactor;
+import org.apache.hadoop.hdds.protocol.proto.HddsProtos.ReplicationType;
+import org.apache.hadoop.hdds.scm.container.ContainerID;
+import org.apache.hadoop.util.Time;
-public class ContainerInfo
-    implements Comparator<ContainerInfo>, Comparable<ContainerInfo> {
+public class ContainerInfo implements Comparator<ContainerInfo>,
+    Comparable<ContainerInfo>, Externalizable {
+  private static final String SERIALIZATION_ERROR_MSG = "Java serialization not"
+      + " supported. Use protobuf instead.";
-  private Pipeline pipeline;
+  private String pipelineName;
+  private ReplicationFactor replicationFactor;
+  private ReplicationType replicationType;
-      Pipeline pipeline,
+      String pipelineName,
-      long deleteTransactionId) {
+      long deleteTransactionId,
+      ReplicationFactor replicationFactor,
+      ReplicationType repType) {
-    this.pipeline = pipeline;
+    this.pipelineName = pipelineName;
+    this.replicationFactor = replicationFactor;
+    this.replicationType = repType;
-    builder.setPipeline(Pipeline.getFromProtoBuf(info.getPipeline()));
-    builder.setAllocatedBytes(info.getAllocatedBytes());
-    builder.setUsedBytes(info.getUsedBytes());
-    builder.setNumberOfKeys(info.getNumberOfKeys());
-    builder.setState(info.getState());
-    builder.setStateEnterTime(info.getStateEnterTime());
-    builder.setOwner(info.getOwner());
-    builder.setContainerID(info.getContainerID());
-    builder.setDeleteTransactionId(info.getDeleteTransactionId());
-    return builder.build();
+    return builder.setPipelineName(info.getPipelineName())
+        .setAllocatedBytes(info.getAllocatedBytes())
+        .setUsedBytes(info.getUsedBytes())
+        .setNumberOfKeys(info.getNumberOfKeys())
+        .setState(info.getState())
+        .setStateEnterTime(info.getStateEnterTime())
+        .setOwner(info.getOwner())
+        .setContainerID(info.getContainerID())
+        .setDeleteTransactionId(info.getDeleteTransactionId())
+        .setReplicationFactor(info.getReplicationFactor())
+        .setReplicationType(info.getReplicationType())
+        .build();
-  public Pipeline getPipeline() {
-    return pipeline;
+  public ReplicationFactor getReplicationFactor() {
+    return replicationFactor;
+  }
+
+  public String getPipelineName() {
+    return pipelineName;
+  public ReplicationType getReplicationType() {
+    return replicationType;
+  }
+
-    builder.setPipeline(getPipeline().getProtobufMessage());
-    builder.setAllocatedBytes(getAllocatedBytes());
-    builder.setUsedBytes(getUsedBytes());
-    builder.setNumberOfKeys(getNumberOfKeys());
-    builder.setState(state);
-    builder.setStateEnterTime(stateEnterTime);
-    builder.setContainerID(getContainerID());
-    builder.setDeleteTransactionId(deleteTransactionId);
-
-    if (getOwner() != null) {
-      builder.setOwner(getOwner());
-    }
-    return builder.build();
+    return builder.setAllocatedBytes(getAllocatedBytes())
+        .setContainerID(getContainerID())
+        .setUsedBytes(getUsedBytes())
+        .setNumberOfKeys(getNumberOfKeys()).setState(getState())
+        .setStateEnterTime(getStateEnterTime()).setContainerID(getContainerID())
+        .setDeleteTransactionId(getDeleteTransactionId())
+        .setPipelineName(getPipelineName())
+        .setReplicationFactor(getReplicationFactor())
+        .setReplicationType(getReplicationType())
+        .setOwner(getOwner())
+        .build();
-        + ", pipeline=" + pipeline
+        + ", pipelineName=" + pipelineName
-        .append(pipeline.getFactor())
-        .append(pipeline.getType())
-        .append(owner)
+        .append(getOwner())
+
+  /**
+   * Throws IOException as default java serialization is not supported. Use
+   * serialization via protobuf instead.
+   *
+   * @param out the stream to write the object to
+   * @throws IOException Includes any I/O exceptions that may occur
+   * @serialData Overriding methods should use this tag to describe
+   * the data layout of this Externalizable object.
+   * List the sequence of element types and, if possible,
+   * relate the element to a public/protected field and/or
+   * method of this Externalizable class.
+   */
+  @Override
+  public void writeExternal(ObjectOutput out) throws IOException {
+    throw new IOException(SERIALIZATION_ERROR_MSG);
+  }
+
+  /**
+   * Throws IOException as default java serialization is not supported. Use
+   * serialization via protobuf instead.
+   *
+   * @param in the stream to read data from in order to restore the object
+   * @throws IOException            if I/O errors occur
+   * @throws ClassNotFoundException If the class for an object being
+   *                                restored cannot be found.
+   */
+  @Override
+  public void readExternal(ObjectInput in)
+      throws IOException, ClassNotFoundException {
+    throw new IOException(SERIALIZATION_ERROR_MSG);
+  }
+
-    private Pipeline pipeline;
+    private String pipelineName;
+    private ReplicationFactor replicationFactor;
+    private ReplicationType replicationType;
+
+    public Builder setReplicationType(
+        ReplicationType replicationType) {
+      this.replicationType = replicationType;
+      return this;
+    }
+
+    public Builder setPipelineName(String pipelineName) {
+      this.pipelineName = pipelineName;
+      return this;
+    }
+
+    public Builder setReplicationFactor(ReplicationFactor repFactor) {
+      this.replicationFactor = repFactor;
+      return this;
+    }
-    public Builder setPipeline(Pipeline containerPipeline) {
-      this.pipeline = containerPipeline;
-      return this;
-    }
-
-      return new
-          ContainerInfo(containerID, state, pipeline, allocated,
-              used, keys, stateEnterTime, owner, deleteTransactionId);
+      return new ContainerInfo(containerID, state, pipelineName, allocated,
+              used, keys, stateEnterTime, owner, deleteTransactionId,
+          replicationFactor, replicationType);

MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS43 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 MOV23 MOV31 INS42 INS83 INS83 INS83 INS43 INS59 UPD43 INS83 INS43 INS59 INS83 INS43 INS59 INS44 INS44 UPD43 UPD42 MOV83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS83 MOV43 INS42 INS8 INS29 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS29 INS78 INS83 INS39 INS42 INS44 INS43 INS43 INS8 INS23 INS23 INS31 INS31 INS42 INS42 INS27 UPD42 UPD42 INS42 INS42 INS42 INS42 UPD43 UPD42 INS43 INS42 INS43 INS42 INS21 INS21 INS41 UPD42 INS42 INS41 INS42 INS41 MOV60 INS41 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS42 INS53 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS42 INS42 INS53 UPD43 INS83 INS43 INS59 INS83 INS43 INS59 INS83 MOV43 INS42 INS44 INS8 INS43 UPD42 INS83 INS43 INS42 INS44 INS8 INS45 INS45 UPD42 INS42 INS42 INS7 INS7 INS32 UPD42 INS42 INS42 INS32 MOV32 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS14 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS14 UPD42 UPD42 INS42 INS42 INS42 INS42 INS43 INS42 INS21 MOV41 INS42 UPD43 UPD42 INS41 INS42 INS43 INS42 INS21 INS41 UPD42 INS22 INS42 INS22 INS42 INS32 MOV42 INS32 MOV42 UPD45 UPD42 UPD42 MOV42 INS43 INS42 INS43 INS42 INS42 INS7 UPD42 INS52 INS42 INS7 INS52 UPD42 INS52 INS42 INS52 INS42 INS32 INS42 INS32 INS32 UPD42 MOV42 MOV32 MOV32 INS42 INS42 INS22 INS42 UPD42 INS22 INS42 UPD42 INS42 INS42 INS32 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 INS32 INS52 INS42 UPD42 INS52 INS42 INS32 UPD42 MOV42 MOV32 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 INS32 INS42 INS32 UPD42 MOV42 MOV32 INS32 INS42 INS32 UPD42 MOV42 INS32 UPD42 MOV42 MOV32 INS32 UPD42 MOV42 INS32 INS42 INS32 UPD42 MOV42 MOV32 INS32 UPD42 MOV42 INS32 UPD42 MOV42 INS32 UPD42 MOV42 MOV32 INS32 UPD42 MOV42 INS32 UPD42 MOV42 INS32 MOV42 MOV32 INS32 MOV42 INS32 UPD42 MOV42 INS32 MOV42 MOV32 INS32 MOV42 MOV32 UPD42 MOV42 INS32 MOV42 MOV32 INS32 MOV42 MOV32 MOV42 UPD42 MOV42 MOV32 MOV32 UPD42 MOV42 MOV32 UPD42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL32 DEL21 DEL42 DEL32 DEL21 DEL42 DEL32 DEL21 DEL32 DEL21 DEL32 DEL21 DEL32 DEL21 DEL32 DEL21 DEL32 DEL21 DEL42 DEL32 DEL41 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL21 DEL32 DEL21 DEL42 DEL32 DEL21 DEL42 DEL32 DEL21 DEL32 DEL21 DEL42 DEL32 DEL21 DEL32 DEL21 DEL33 DEL27 DEL32 DEL21 DEL8 DEL25 DEL32 DEL41 DEL8 DEL31 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32