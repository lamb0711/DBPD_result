HADOOP-16107.  Update ChecksumFileSystem createFile/openFile API to generate checksum.
               Contributed by Steve Loughran

+  /**
+   * Create instance of the standard FSDataOutputStreamBuilder for the
+   * given filesystem and path.
+   * @param fileSystem owner
+   * @param path path to create
+   * @return a builder.
+   */
+  @InterfaceStability.Unstable
+  protected static FSDataOutputStreamBuilder createDataOutputStreamBuilder(
+      @Nonnull final FileSystem fileSystem,
+      @Nonnull final Path path) {
+    return new FileSystemDataOutputStreamBuilder(fileSystem, path);
+  }
+
+  /**
+   * Standard implementation of the FSDataOutputStreamBuilder; invokes
+   * create/createNonRecursive or Append depending upon the options.
+   */
+     * @param fileSystem owner
+     * @param p path to create
-    protected FileSystemDataOutputStreamBuilder(FileSystem fileSystem, Path p) {
+    private FileSystemDataOutputStreamBuilder(FileSystem fileSystem, Path p) {
-    return new FileSystemDataOutputStreamBuilder(this, path)
+    return createDataOutputStreamBuilder(this, path)
-    return new FileSystemDataOutputStreamBuilder(this, path).append();
+    return createDataOutputStreamBuilder(this, path).append();
-    return new FSDataInputStreamBuilder(this, path).getThisBuilder();
+    return createDataInputStreamBuilder(this, path).getThisBuilder();
-    return new FSDataInputStreamBuilder(this, pathHandle)
+    return createDataInputStreamBuilder(this, pathHandle)
+   * Create instance of the standard {@link FSDataInputStreamBuilder} for the
+   * given filesystem and path.
+   * @param fileSystem owner
+   * @param path path to read
+   * @return a builder.
+   */
+  @InterfaceAudience.LimitedPrivate("Filesystems")
+  @InterfaceStability.Unstable
+  protected static FSDataInputStreamBuilder createDataInputStreamBuilder(
+      @Nonnull final FileSystem fileSystem,
+      @Nonnull final Path path) {
+    return new FSDataInputStreamBuilder(fileSystem, path);
+  }
+
+  /**
+   * Create instance of the standard {@link FSDataInputStreamBuilder} for the
+   * given filesystem and path handle.
+   * @param fileSystem owner
+   * @param pathHandle path handle of file to open.
+   * @return a builder.
+   */
+  @InterfaceAudience.LimitedPrivate("Filesystems")
+  @InterfaceStability.Unstable
+  protected static FSDataInputStreamBuilder createDataInputStreamBuilder(
+      @Nonnull final FileSystem fileSystem,
+      @Nonnull final PathHandle pathHandle) {
+    return new FSDataInputStreamBuilder(fileSystem, pathHandle);
+  }
+
+  /**

INS31 INS31 INS31 INS29 INS78 INS83 INS83 INS43 INS42 INS44 INS44 MOV8 INS29 INS8 INS8 INS8 INS29 INS79 INS78 INS83 INS83 INS43 INS42 INS44 INS44 MOV8 INS29 INS79 INS78 INS83 INS83 INS43 INS42 INS44 INS44 MOV8 INS65 INS65 INS65 INS65 INS40 INS42 INS78 INS83 INS43 INS42 INS78 INS83 INS43 INS42 INS65 UPD83 INS41 INS41 INS41 INS65 INS65 INS65 INS65 INS40 INS45 INS40 INS42 INS78 INS83 INS43 INS42 INS78 INS83 INS43 INS42 INS65 INS65 INS65 INS65 INS40 INS45 INS40 INS42 INS78 INS83 INS43 INS42 INS78 INS83 INS43 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS42 MOV14 INS66 INS66 INS65 INS65 INS32 INS32 INS32 INS66 INS65 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS42 MOV14 INS66 INS65 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS42 MOV14 INS42 INS42 INS66 INS42 INS66 INS32 INS42 INS9 INS32 INS32 INS42 INS32 INS42 INS42 INS42 UPD42 INS42 INS42 UPD42 INS32 INS42 INS42 INS52 INS42 INS42 INS52 INS42 INS42 INS52 INS42 INS42 INS52 INS42 DEL52 DEL42 DEL32 DEL42 DEL9 DEL32 DEL42 DEL43 DEL52 DEL42 DEL14 DEL52 DEL42 DEL32 DEL52 DEL42 DEL32