YARN-3367. Replace starting a separate thread for post entity with event loop in TimelineClient (Naganarasimha G R via sjlee)

-import java.util.concurrent.ExecutorService;
-import java.util.concurrent.Executors;
-import java.util.concurrent.TimeUnit;
-import com.google.common.util.concurrent.ThreadFactoryBuilder;
-  // For posting entities in new timeline service in a non-blocking way
-  // TODO replace with event loop in TimelineClient.
-  private ExecutorService threadPool;
-
-
-      if (appMaster.threadPool != null) {
-        appMaster.shutdownAndAwaitTermination();
-      }
-  //TODO remove threadPool after adding non-blocking call in TimelineClient
-  private ExecutorService createThreadPool() {
-    return Executors.newCachedThreadPool(
-        new ThreadFactoryBuilder().setNameFormat("TimelineService #%d")
-        .build());
-  }
-
-  private void shutdownAndAwaitTermination() {
-    threadPool.shutdown();
-    try {
-      // Wait a while for existing tasks to terminate
-      if (!threadPool.awaitTermination(60, TimeUnit.SECONDS)) {
-        threadPool.shutdownNow();
-        if (!threadPool.awaitTermination(60, TimeUnit.SECONDS))
-          LOG.error("ThreadPool did not terminate");
-      }
-    } catch (InterruptedException ie) {
-      threadPool.shutdownNow();
-      // Preserve interrupt status
-      Thread.currentThread().interrupt();
-    }
-  }
-
-      timelineServiceV2 =
-          YarnConfiguration.timelineServiceV2Enabled(conf);
-      if (timelineServiceV2) {
-        threadPool = createThreadPool();
-      }
+      timelineServiceV2 = YarnConfiguration.timelineServiceV2Enabled(conf);
+              LOG.info("Timeline service V2 client is enabled");
+              LOG.info("Timeline service V1 client is enabled");
-  
-  private void publishContainerStartEventOnTimelineServiceV2(
-      final Container container) {
-    Runnable publishWrapper = new Runnable() {
-      public void run() {
-        publishContainerStartEventOnTimelineServiceV2Base(container);
-      }
-    };
-    threadPool.execute(publishWrapper);
-  }
-  private void publishContainerStartEventOnTimelineServiceV2Base(
+  private void publishContainerStartEventOnTimelineServiceV2(
-    Runnable publishWrapper = new Runnable() {
-      public void run() {
-          publishContainerEndEventOnTimelineServiceV2Base(container);
-      }
-    };
-    threadPool.execute(publishWrapper);
-  }
-
-  private void publishContainerEndEventOnTimelineServiceV2Base(
-      final ContainerStatus container) {
-      final DSEvent appEvent) {
-
-    Runnable publishWrapper = new Runnable() {
-      public void run() {
-        publishApplicationAttemptEventOnTimelineServiceV2Base(appEvent);
-      }
-    };
-    threadPool.execute(publishWrapper);
-  }
-
-  private void publishApplicationAttemptEventOnTimelineServiceV2Base(
-          timelineClient.putEntities(entity);
+          timelineClient.putEntitiesAsync(entity);

UPD42 UPD42 UPD42 UPD42 INS21 INS21 INS32 INS32 INS42 INS42 INS45 INS42 INS42 INS45 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL40 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL43 DEL14 DEL42 DEL45 DEL32 DEL42 DEL32 DEL32 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL40 DEL32 DEL38 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL34 DEL40 DEL32 DEL38 DEL42 DEL42 DEL45 DEL32 DEL21 DEL25 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL8 DEL31 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL83 DEL39 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL1 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL1 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL43 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL1 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31