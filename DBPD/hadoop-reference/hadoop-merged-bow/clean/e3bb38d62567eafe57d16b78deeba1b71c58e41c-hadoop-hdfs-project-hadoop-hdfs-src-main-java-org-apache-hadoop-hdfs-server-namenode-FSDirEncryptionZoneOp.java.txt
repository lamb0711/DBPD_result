HDFS-9405. Warmup NameNode EDEK caches in background thread. Contributed by Xiao Chen.

+import java.util.concurrent.ExecutorService;
+
+  /**
+   * Proactively warm up the edek cache. We'll get all the edek key names,
+   * then launch up a separate thread to warm them up.
+   */
+  static void warmUpEdekCache(final ExecutorService executor,
+      final FSDirectory fsd, final int delay, final int interval) {
+    fsd.readLock();
+    try {
+      String[] edeks  = fsd.ezManager.getKeyNames();
+      executor.execute(
+          new EDEKCacheLoader(edeks, fsd.getProvider(), delay, interval));
+    } finally {
+      fsd.readUnlock();
+    }
+  }
+
+  /**
+   * EDEKCacheLoader is being run in a separate thread to loop through all the
+   * EDEKs and warm them up in the KMS cache.
+   */
+  static class EDEKCacheLoader implements Runnable {
+    private final String[] keyNames;
+    private final KeyProviderCryptoExtension kp;
+    private int initialDelay;
+    private int retryInterval;
+
+    EDEKCacheLoader(final String[] names, final KeyProviderCryptoExtension kp,
+        final int delay, final int interval) {
+      this.keyNames = names;
+      this.kp = kp;
+      this.initialDelay = delay;
+      this.retryInterval = interval;
+    }
+
+    @Override
+    public void run() {
+      NameNode.LOG.info("Warming up {} EDEKs... (initialDelay={}, "
+          + "retryInterval={})", keyNames.length, initialDelay, retryInterval);
+      try {
+        Thread.sleep(initialDelay);
+      } catch (InterruptedException ie) {
+        NameNode.LOG.info("EDEKCacheLoader interrupted before warming up.");
+        return;
+      }
+
+      final int logCoolDown = 10000; // periodically print error log (if any)
+      int sinceLastLog = logCoolDown; // always print the first failure
+      boolean success = false;
+      IOException lastSeenIOE = null;
+      while (true) {
+        try {
+          kp.warmUpEncryptedKeys(keyNames);
+          NameNode.LOG
+              .info("Successfully warmed up {} EDEKs.", keyNames.length);
+          success = true;
+          break;
+        } catch (IOException ioe) {
+          lastSeenIOE = ioe;
+          if (sinceLastLog >= logCoolDown) {
+            NameNode.LOG.info("Failed to warm up EDEKs.", ioe);
+            sinceLastLog = 0;
+          } else {
+            NameNode.LOG.debug("Failed to warm up EDEKs.", ioe);
+          }
+        }
+        try {
+          Thread.sleep(retryInterval);
+        } catch (InterruptedException ie) {
+          NameNode.LOG.info("EDEKCacheLoader interrupted during retry.");
+          break;
+        }
+        sinceLastLog += retryInterval;
+      }
+      if (!success) {
+        NameNode.LOG.warn("Unable to warm up EDEKs.");
+        if (lastSeenIOE != null) {
+          NameNode.LOG.warn("Last seen exception:", lastSeenIOE);
+        }
+      }
+    }
+  }

INS26 INS40 INS31 INS55 INS29 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS8 INS29 INS83 INS42 INS43 INS23 INS23 INS23 INS23 INS31 INS31 INS65 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS39 INS42 INS83 INS39 INS42 INS21 INS54 INS65 INS42 INS83 INS83 INS5 INS59 INS83 INS83 INS43 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS42 INS44 INS44 INS44 INS44 INS8 INS78 INS83 INS39 INS42 INS8 INS66 INS66 INS42 INS42 INS32 INS8 INS8 INS66 INS66 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS83 INS5 INS42 INS83 INS43 INS42 INS83 INS39 INS42 INS83 INS39 INS42 INS21 INS21 INS21 INS21 INS42 INS21 INS54 INS60 INS60 INS60 INS60 INS61 INS25 INS42 INS42 INS60 INS21 INS21 INS42 INS43 INS85 INS42 INS7 INS7 INS7 INS7 INS32 INS8 INS12 INS83 INS39 INS59 INS39 INS59 INS39 INS59 INS43 INS59 INS9 INS8 INS38 INS8 INS5 INS59 INS32 INS32 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS40 INS42 INS27 INS40 INS42 INS42 INS21 INS44 INS8 INS42 INS34 INS42 INS42 INS42 INS9 INS42 INS42 INS33 INS54 INS54 INS21 INS42 INS21 INS25 INS43 INS85 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS45 INS45 INS32 INS43 INS42 INS21 INS41 INS8 INS12 INS8 INS12 INS7 INS32 INS27 INS8 INS42 INS40 INS42 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS21 INS21 INS21 INS10 INS44 INS8 INS21 INS44 INS8 INS42 INS42 INS40 INS42 INS45 INS42 INS33 INS21 INS42 INS42 INS42 INS40 INS42 INS45 INS32 INS32 INS7 INS43 INS42 INS21 INS25 INS32 INS43 INS42 INS21 INS10 INS32 INS42 INS42 INS42 INS40 INS42 INS45 INS40 INS42 INS9 INS42 INS7 INS27 INS8 INS8 INS42 INS42 INS42 INS42 INS32 INS40 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS21 INS21 INS21 INS40 INS42 INS45 INS32 INS7 INS32 INS40 INS42 INS45 INS42 INS42 INS34 INS40 INS42 INS45 INS42