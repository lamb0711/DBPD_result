HDFS-4700. Fix the undo section of rename with snapshots.  Contributed by Jing Zhao


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1468632 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.namenode.INodeReference.WithCount;
-    if (srcChildIsReference || isSrcInSnapshot) {
+    int srcRefDstSnapshot = srcChildIsReference ? srcChild.asReference()
+        .getDstSnapshotId() : Snapshot.INVALID_ID;
+    if (isSrcInSnapshot) {
-      withCount = (INodeReference.WithCount)withName.getReferredINode();
+      withCount = (INodeReference.WithCount) withName.getReferredINode();
+    } else if (srcChildIsReference) {
+      // srcChild is reference but srcChild is not in latest snapshot
+      withCount = (WithCount) srcChild.asReference().getReferredINode();
-      // add src to the destination
+      // add src to the destination
+      
+        final INodeDirectory srcParent = srcIIP.getINode(-2).asDirectory();
+        final INode oldSrcChild = srcChild;
-          final INodeDirectoryWithSnapshot srcParent = 
-              (INodeDirectoryWithSnapshot) srcIIP.getINode(-2).asDirectory();
-          srcParent.replaceRemovedChild(srcChild, originalChild);
+        } else {
+          final INodeReference originalRef = new INodeReference.DstReference(
+              srcParent, withCount, srcRefDstSnapshot);
+          withCount.setParentReference(originalRef);
+          srcChild = originalRef;
-        addLastINodeNoQuotaCheck(srcIIP, srcChild);
+        
+        if (isSrcInSnapshot) {
+          ((INodeDirectoryWithSnapshot) srcParent).undoRename4ScrParent(
+              oldSrcChild.asReference(), srcChild, srcIIP.getLatestSnapshot());
+        } else {
+          // srcParent is not an INodeDirectoryWithSnapshot, we only need to add
+          // the srcChild back
+          addLastINodeNoQuotaCheck(srcIIP, srcChild);
+        }
-    if (srcChildIsReference || isSrcInSnapshot) {
+    int srcRefDstSnapshot = srcChildIsReference ? srcChild.asReference()
+        .getDstSnapshotId() : Snapshot.INVALID_ID;
+    if (isSrcInSnapshot) {
-      withCount = (INodeReference.WithCount)withName.getReferredINode();
+      withCount = (INodeReference.WithCount) withName.getReferredINode();
+    } else if (srcChildIsReference) {
+      // srcChild is reference but srcChild is not in latest snapshot
+      withCount = (WithCount) srcChild.asReference().getReferredINode();
-        srcChild = srcIIP.getLastINode();
+        final INodeDirectory srcParent = srcIIP.getINode(-2).asDirectory();
+        final INode oldSrcChild = srcChild;
+        // put it back
-          final INodeDirectoryWithSnapshot srcParent
-              = (INodeDirectoryWithSnapshot)srcIIP.getINode(-2).asDirectory();
-          srcParent.replaceRemovedChild(srcChild, originalChild);
+        } else {
+          final INodeReference originalRef = new INodeReference.DstReference(
+              srcParent, withCount, srcRefDstSnapshot);
+          withCount.setParentReference(originalRef);
+          srcChild = originalRef;
-        addLastINodeNoQuotaCheck(srcIIP, srcChild);
+        
+        if (srcParent instanceof INodeDirectoryWithSnapshot) {
+          ((INodeDirectoryWithSnapshot) srcParent).undoRename4ScrParent(
+              oldSrcChild.asReference(), srcChild, srcIIP.getLatestSnapshot());
+        } else {
+          // srcParent is not an INodeDirectoryWithSnapshot, we only need to add
+          // the srcChild back
+          addLastINodeNoQuotaCheck(srcIIP, srcChild);
+        }
-        addLastINodeNoQuotaCheck(dstIIP, removedDst);
+        if (dstParent instanceof INodeDirectoryWithSnapshot) {
+          ((INodeDirectoryWithSnapshot) dstParent).undoRename4DstParent(
+              removedDst, dstIIP.getLatestSnapshot());
+        } else {
+          addLastINodeNoQuotaCheck(dstIIP, removedDst);
+        }
-          -counts.get(Quota.DISKSPACE));
+          -counts.get(Quota.DISKSPACE), true);

INS26 INS40 INS60 INS60 INS39 INS59 INS42 INS25 MOV8 INS39 INS59 INS42 INS25 MOV8 INS42 INS16 INS42 INS8 MOV8 INS42 INS16 INS42 INS8 MOV8 INS25 INS42 INS32 INS40 INS21 MOV38 INS8 INS42 INS32 INS40 INS21 INS42 INS8 INS42 INS8 INS32 INS42 INS7 MOV60 INS60 INS25 INS25 INS32 INS42 INS7 MOV60 INS60 INS25 INS25 INS25 INS9 INS42 INS42 INS42 INS11 INS43 INS83 INS43 INS59 MOV27 MOV8 MOV25 INS42 INS8 INS8 INS42 INS42 INS42 INS11 INS43 INS83 INS43 INS59 MOV27 MOV8 MOV25 INS62 INS8 INS8 INS62 INS8 MOV8 INS43 INS32 INS42 MOV32 INS42 INS42 INS42 INS8 INS21 MOV21 INS43 INS32 INS42 MOV32 INS42 INS42 INS42 INS8 INS42 MOV43 INS21 INS21 INS42 MOV43 MOV21 MOV21 INS42 INS32 INS42 INS60 INS21 INS21 INS32 INS42 INS32 INS42 INS60 INS21 INS21 INS32 INS32 INS32 INS42 INS42 INS83 INS43 INS59 INS32 INS7 INS36 INS42 INS32 INS42 INS32 INS42 INS42 INS83 INS43 INS59 INS32 INS7 INS36 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS36 INS42 INS42 INS32 MOV42 MOV42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS42 INS11 UPD42 MOV42 UPD42 MOV42 INS43 INS42 INS42 INS42 MOV43 INS42 INS43 INS42 INS42 INS42 MOV43 INS42 INS43 INS42 INS40 INS40 INS42 DEL42 DEL42 DEL27 DEL11 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL25 DEL8 DEL42 DEL42 DEL27 DEL11 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL32 DEL7 DEL42 DEL25 DEL42 DEL25 DEL8