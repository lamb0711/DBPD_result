YARN-6613. Update json validation for new native services providers. Contributed by Billie Rinaldi

+import org.apache.commons.lang.StringUtils;
+import org.apache.hadoop.fs.Path;
+import java.nio.file.Paths;
-   * @param fileSystem file system
+   * @param fs file system
-  public void validateConfigFiles(List<ConfigFile> configFiles, FileSystem
-      fileSystem) throws IOException {
-    for (ConfigFile configFile : configFiles) {
-      validateConfigFile(configFile, fileSystem);
+  public void validateConfigFiles(List<ConfigFile> configFiles,
+      FileSystem fs) throws IOException {
+    Set<String> destFileSet = new HashSet<>();
+
+    for (ConfigFile file : configFiles) {
+      if (file.getType() == null) {
+        throw new IllegalArgumentException("File type is empty");
+      }
+
+      if (file.getType().equals(ConfigFile.TypeEnum.TEMPLATE) && StringUtils
+          .isEmpty(file.getSrcFile())) {
+        throw new IllegalArgumentException(
+            "Src_file is empty for " + ConfigFile.TypeEnum.TEMPLATE);
+
+      }
+      if (!StringUtils.isEmpty(file.getSrcFile())) {
+        Path p = new Path(file.getSrcFile());
+        if (!fs.exists(p)) {
+          throw new IllegalArgumentException(
+              "Src_file does not exist for config file: " + file
+                  .getSrcFile());
+        }
+      }
+
+      if (StringUtils.isEmpty(file.getDestFile())) {
+        throw new IllegalArgumentException("Dest_file is empty.");
+      }
+
+      if (destFileSet.contains(file.getDestFile())) {
+        throw new IllegalArgumentException(
+            "Duplicated ConfigFile exists: " + file.getDestFile());
+      }
+      destFileSet.add(file.getDestFile());
+
+      java.nio.file.Path destPath = Paths.get(file.getDestFile());
+      if (!destPath.isAbsolute() && destPath.getNameCount() > 1) {
+        throw new IllegalArgumentException("Non-absolute dest_file has more " +
+            "than one path element");
+      }
+
+      // provider-specific validation
+      validateConfigFile(file, fs);

INS26 INS26 INS26 INS40 INS40 INS40 UPD42 INS60 UPD42 INS74 INS59 INS43 INS43 INS42 INS14 UPD42 INS25 INS25 INS25 INS25 INS25 INS21 INS60 INS25 INS42 INS42 INS74 INS27 INS8 INS27 INS8 INS38 INS8 INS32 INS8 INS32 INS8 INS32 INS43 INS59 INS27 INS8 INS43 INS32 INS33 INS53 INS32 INS32 INS53 INS32 INS60 INS25 INS42 INS42 INS32 INS53 INS42 INS42 INS32 INS53 INS42 INS42 INS32 INS40 INS42 INS32 INS38 INS27 INS53 UPD42 UPD42 INS42 INS42 INS42 INS14 INS32 INS42 INS40 INS42 INS42 INS32 INS14 INS42 INS42 INS32 INS43 INS59 INS38 INS8 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS34 INS14 INS43 INS45 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS42 INS14 INS32 INS53 INS43 INS45 INS43 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS45 INS40 INS43 INS32 INS42 INS42 INS42 INS14 INS42 INS42 INS45 INS32 INS42 INS45 INS45 INS42 INS42 INS42 INS43 INS27 INS42 INS42 INS42 INS45 INS32 INS42 INS42