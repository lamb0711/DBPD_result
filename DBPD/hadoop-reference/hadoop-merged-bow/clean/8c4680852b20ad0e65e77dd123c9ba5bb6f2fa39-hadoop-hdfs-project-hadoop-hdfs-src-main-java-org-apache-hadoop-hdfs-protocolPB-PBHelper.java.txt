HDFS-11094. Send back HAState along with NamespaceInfo during a versionRequest as an optional parameter. Contributed by Eric Badger

-import org.apache.hadoop.ha.proto.HAServiceProtocolProtos;
+import org.apache.hadoop.ha.proto.HAServiceProtocolProtos.HAServiceStateProto;
-        info.getSoftwareVersion(), info.getCapabilities());
+        info.getSoftwareVersion(), info.getCapabilities(),
+        convert(info.getState()));
-    return NamespaceInfoProto.newBuilder()
-        .setBlockPoolID(info.getBlockPoolID())
+    NamespaceInfoProto.Builder builder = NamespaceInfoProto.newBuilder();
+    builder.setBlockPoolID(info.getBlockPoolID())
-        .setCapabilities(info.getCapabilities())
-        .build();
+        .setCapabilities(info.getCapabilities());
+    HAServiceState state = info.getState();
+    if(state != null) {
+      builder.setState(convert(info.getState()));
+    }
+    return builder.build();
+  }
+
+  public static HAServiceState convert(HAServiceStateProto s) {
+    if (s == null) {
+      return null;
+    }
+    switch (s) {
+    case INITIALIZING:
+      return HAServiceState.INITIALIZING;
+    case ACTIVE:
+      return HAServiceState.ACTIVE;
+    case STANDBY:
+      return HAServiceState.STANDBY;
+    default:
+      throw new IllegalArgumentException("Unexpected HAServiceStateProto:"
+          + s);
+    }
+  }
+
+  public static HAServiceStateProto convert(HAServiceState s) {
+    if (s == null) {
+      return null;
+    }
+    switch (s) {
+    case INITIALIZING:
+      return HAServiceStateProto.INITIALIZING;
+    case ACTIVE:
+      return HAServiceStateProto.ACTIVE;
+    case STANDBY:
+      return HAServiceStateProto.STANDBY;
+    default:
+      throw new IllegalArgumentException("Unexpected HAServiceState:"
+          + s);
+    }
-    if (s == null) return null;
-    switch (s.getState()) {
-    case ACTIVE:
-      return new NNHAStatusHeartbeat(HAServiceState.ACTIVE, s.getTxid());
-    case STANDBY:
-      return new NNHAStatusHeartbeat(HAServiceState.STANDBY, s.getTxid());
-    default:
-      throw new IllegalArgumentException("Unexpected NNHAStatusHeartbeat.State:" + s.getState());
+    if (s == null) {
+      return null;
+    return new NNHAStatusHeartbeat(convert(s.getState()), s.getTxid());
-    if (hb == null) return null;
-    NNHAStatusHeartbeatProto.Builder builder =
-      NNHAStatusHeartbeatProto.newBuilder();
-    switch (hb.getState()) {
-      case ACTIVE:
-        builder.setState(HAServiceProtocolProtos.HAServiceStateProto.ACTIVE);
-        break;
-      case STANDBY:
-        builder.setState(HAServiceProtocolProtos.HAServiceStateProto.STANDBY);
-        break;
-      default:
-        throw new IllegalArgumentException("Unexpected NNHAStatusHeartbeat.State:" +
-            hb.getState());
+    if (hb == null) {
+      return null;
+    NNHAStatusHeartbeatProto.Builder builder =
+        NNHAStatusHeartbeatProto.newBuilder();
+    builder.setState(convert(hb.getState()));

UPD40 INS31 INS31 INS31 MOV83 MOV83 INS43 MOV42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS83 MOV43 INS42 MOV44 INS8 INS60 INS21 INS60 INS25 INS42 INS43 INS42 MOV25 INS50 INS42 INS43 INS42 INS25 INS50 INS25 MOV41 INS21 INS43 INS59 MOV32 INS43 INS59 INS27 INS8 INS42 INS8 INS42 INS49 INS41 MOV49 INS41 MOV49 INS41 INS49 INS53 INS42 INS27 INS8 INS42 MOV49 INS41 MOV49 INS41 MOV49 INS41 INS49 MOV53 INS27 INS8 INS8 MOV32 INS32 INS40 INS42 MOV32 INS42 INS42 INS32 INS42 INS33 INS21 INS42 MOV41 INS42 INS40 INS40 INS40 INS14 INS42 INS33 MOV41 INS42 INS40 INS40 INS40 INS42 INS33 INS41 INS32 INS41 INS32 INS42 INS32 INS42 INS42 INS32 INS33 MOV43 INS27 MOV43 INS33 INS42 MOV32 MOV33 INS42 MOV32 INS42 INS42 INS42 INS42 INS32 INS45 INS42 UPD45 INS42 INS42 INS32 INS42 INS42 INS42 DEL40 DEL42 DEL42 DEL32 DEL42 DEL43 DEL40 DEL42 DEL42 DEL32 DEL14 DEL41 DEL50 DEL8 DEL31 DEL40 DEL42 DEL42 DEL32 DEL21 DEL10 DEL42 DEL42 DEL40 DEL32 DEL21 DEL10 DEL49 DEL45 DEL27 DEL14 DEL53 DEL50