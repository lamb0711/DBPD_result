HDDS-233. Update ozone to latest ratis snapshot build(0.3.0-50588bd-SNAPSHOT). Contributed by Shashikant Banerjee.

+import org.apache.hadoop.io.MultipleIOException;
+import org.apache.ratis.retry.RetryPolicy;
-import org.apache.ratis.protocol.RaftGroupId;
+import org.apache.ratis.util.CheckedBiConsumer;
+import java.util.ArrayList;
+import java.util.Collections;
+    final RetryPolicy retryPolicy = RatisHelper.createRetryPolicy(ozoneConf);
-        SupportedRpcType.valueOfIgnoreCase(rpcType), maxOutstandingRequests);
+        SupportedRpcType.valueOfIgnoreCase(rpcType), maxOutstandingRequests,
+        retryPolicy);
+  private final RetryPolicy retryPolicy;
-      int maxOutStandingChunks) {
+      int maxOutStandingChunks, RetryPolicy retryPolicy) {
+    this.retryPolicy = retryPolicy;
-  public void createPipeline()
-      throws IOException {
-    RaftGroupId groupId = pipeline.getId().getRaftGroupID();
-    RaftGroup group = RatisHelper.newRaftGroup(groupId, pipeline.getMachines());
-    LOG.debug("initializing pipeline:{} with nodes:{}",
-        pipeline.getId(), group.getPeers());
-    reinitialize(pipeline.getMachines(), RatisHelper.emptyRaftGroup(), group);
+  public void createPipeline() throws IOException {
+    final RaftGroup group = RatisHelper.newRaftGroup(pipeline);
+    LOG.debug("creating pipeline:{} with {}", pipeline.getId(), group);
+    callRatisRpc(pipeline.getMachines(),
+        (raftClient, peer) -> raftClient.groupAdd(group, peer.getId()));
-  public void destroyPipeline()
-      throws IOException {
-    RaftGroupId groupId = pipeline.getId().getRaftGroupID();
-    RaftGroup currentGroup =
-        RatisHelper.newRaftGroup(groupId, pipeline.getMachines());
-    LOG.debug("destroying pipeline:{} with nodes:{}",
-        pipeline.getId(), currentGroup.getPeers());
-    reinitialize(pipeline.getMachines(), currentGroup,
-        RatisHelper.emptyRaftGroup());
+  public void destroyPipeline() throws IOException {
+    final RaftGroup group = RatisHelper.newRaftGroup(pipeline);
+    LOG.debug("destroying pipeline:{} with {}", pipeline.getId(), group);
+    callRatisRpc(pipeline.getMachines(), (raftClient, peer) -> raftClient
+        .groupRemove(group.getGroupId(), peer.getId()));
-  private void reinitialize(List<DatanodeDetails> datanodes, RaftGroup oldGroup,
-      RaftGroup newGroup) throws IOException {
+  private void callRatisRpc(List<DatanodeDetails> datanodes,
+      CheckedBiConsumer<RaftClient, RaftPeer, IOException> rpc)
+      throws IOException {
-    IOException exception = null;
-    for (DatanodeDetails d : datanodes) {
-      try {
-        reinitialize(d, oldGroup, newGroup);
+    final List<IOException> exceptions =
+        Collections.synchronizedList(new ArrayList<>());
+    datanodes.parallelStream().forEach(d -> {
+      final RaftPeer p = RatisHelper.toRaftPeer(d);
+      try (RaftClient client = RatisHelper
+          .newRaftClient(rpcType, p, retryPolicy)) {
+        rpc.accept(client, p);
-        if (exception == null) {
-          exception = new IOException(
-              "Failed to reinitialize some of the RaftPeer(s)", ioe);
-        } else {
-          exception.addSuppressed(ioe);
-        }
+        exceptions.add(
+            new IOException("Failed invoke Ratis rpc " + rpc + " for " + d,
+                ioe));
-    }
-    if (exception != null) {
-      throw exception;
-    }
-  }
-
-  /**
-   * Adds a new peers to the Ratis Ring.
-   *
-   * @param datanode - new datanode
-   * @param oldGroup    - previous Raft group
-   * @param newGroup    - new Raft group
-   * @throws IOException - on Failure.
-   */
-  private void reinitialize(DatanodeDetails datanode, RaftGroup oldGroup,
-      RaftGroup newGroup)
-      throws IOException {
-    final RaftPeer p = RatisHelper.toRaftPeer(datanode);
-    try (RaftClient client = oldGroup == RatisHelper.emptyRaftGroup() ?
-        RatisHelper.newRaftClient(rpcType, p) :
-        RatisHelper.newRaftClient(rpcType, p, oldGroup)) {
-      client.reinitialize(newGroup, p.getId());
-    } catch (IOException ioe) {
-      LOG.error("Failed to reinitialize RaftPeer:{} datanode: {}  ",
-          p, datanode, ioe);
-      throw new IOException("Failed to reinitialize RaftPeer " + p
-          + "(datanode=" + datanode + ")", ioe);
+    });
+    if (!exceptions.isEmpty()) {
+      throw MultipleIOException.createIOException(exceptions);
-        RatisHelper.newRaftClient(rpcType, getPipeline()))) {
+        RatisHelper.newRaftClient(rpcType, getPipeline(), retryPolicy))) {

MOV26 INS26 INS26 INS26 INS26 INS40 UPD40 INS40 INS40 INS40 INS23 INS31 INS83 INS83 INS43 INS59 INS44 MOV29 MOV43 MOV29 MOV43 MOV83 MOV39 UPD42 MOV42 MOV44 INS44 MOV43 INS8 INS60 INS42 INS42 INS43 INS42 INS21 INS74 INS42 MOV25 INS60 INS21 INS25 INS83 INS43 INS59 INS42 INS7 INS83 INS83 INS32 INS43 INS43 INS43 MOV43 INS83 INS74 INS59 INS32 INS38 INS8 INS42 INS42 INS32 INS42 INS22 INS42 UPD45 MOV42 INS42 INS86 UPD42 UPD45 UPD42 MOV42 INS42 MOV32 INS86 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS43 MOV43 INS42 INS32 INS32 INS42 INS86 INS32 INS53 INS42 INS42 INS42 INS52 INS42 MOV42 INS59 INS59 INS32 MOV42 INS59 INS59 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS14 INS42 INS42 INS59 INS8 INS42 INS42 INS32 INS42 INS42 INS42 UPD42 MOV42 MOV42 INS32 INS42 INS42 UPD42 MOV42 INS42 INS32 MOV32 INS74 INS42 MOV60 MOV54 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 UPD42 UPD42 INS43 INS42 UPD42 INS32 INS21 MOV42 MOV42 MOV42 MOV42 UPD42 MOV42 UPD42 UPD42 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 MOV42 INS14 MOV43 MOV27 MOV42 UPD45 UPD42 UPD45 UPD42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL16 DEL42 DEL32 DEL45 DEL42 DEL45 DEL42 DEL42 DEL32 DEL21 DEL14 DEL53 DEL43 DEL42 DEL44 DEL43 DEL42 DEL44 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL43 DEL42 DEL44 DEL42 DEL33 DEL27 DEL42 DEL45 DEL42 DEL14 DEL7 DEL21 DEL8 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL12 DEL54 DEL8 DEL70 DEL42 DEL33 DEL27 DEL42 DEL53 DEL8 DEL25 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL8 DEL31