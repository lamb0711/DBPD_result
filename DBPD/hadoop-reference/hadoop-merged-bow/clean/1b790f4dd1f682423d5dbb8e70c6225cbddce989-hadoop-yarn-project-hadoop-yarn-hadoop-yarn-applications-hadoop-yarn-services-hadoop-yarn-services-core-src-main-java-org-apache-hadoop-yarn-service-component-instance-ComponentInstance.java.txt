YARN-9071.  Improved status update for reinitialized containers.
            Contributed by Chandni Singh

+
+      // FROM REINITIALIZED
+      .addTransition(REINITIALIZED, REINITIALIZED, STOP,
+          new StoppedAfterUpgradeTransition())
-      boolean cancelOnSuccess = true;
-      if (compInstance.getCompSpec().getArtifact() != null && compInstance
-          .getCompSpec().getArtifact().getType() == Artifact.TypeEnum.DOCKER) {
-        // A docker container might get a different IP if the container is
-        // relaunched by the NM, so we need to keep checking the status.
-        // This is a temporary fix until the NM provides a callback for
-        // container relaunch (see YARN-8265).
-        cancelOnSuccess = false;
-      }
-      compInstance.containerStatusFuture =
-          compInstance.scheduler.executorService.scheduleAtFixedRate(
-              new ContainerStatusRetriever(compInstance.scheduler,
-                  event.getContainerId(), compInstance, cancelOnSuccess), 0, 1,
-              TimeUnit.SECONDS);
+      compInstance.initializeStatusRetriever(event);
+      instance.initializeStatusRetriever(event);
-      Component.UpgradeStatus status = instance.component.getUpgradeStatus();
-      instance.scheduler.getContainerLaunchService()
-          .reInitCompInstance(instance.scheduler.getApp(), instance,
-              instance.container,
-              instance.component.createLaunchContext(
-                  status.getTargetSpec(),
-                  status.getTargetVersion()));
+      Component.UpgradeStatus upgradeStatus = instance.component.
+          getUpgradeStatus();
+      instance.reInitHelper(upgradeStatus);
+    reInitHelper(cancelStatus);
+  }
+
+  private void reInitHelper(Component.UpgradeStatus upgradeStatus) {
+    cancelContainerStatusRetriever();
+    setContainerStatus(null);
+    scheduler.executorService.submit(() -> cleanupRegistry(container.getId()));
-                cancelStatus.getTargetSpec(),
-                cancelStatus.getTargetVersion()));
+                upgradeStatus.getTargetSpec(),
+                upgradeStatus.getTargetVersion()));
+  }
+
+  private void initializeStatusRetriever(ComponentInstanceEvent event) {
+    boolean cancelOnSuccess = true;
+    if (getCompSpec().getArtifact() != null &&
+        getCompSpec().getArtifact().getType() == Artifact.TypeEnum.DOCKER) {
+      // A docker container might get a different IP if the container is
+      // relaunched by the NM, so we need to keep checking the status.
+      // This is a temporary fix until the NM provides a callback for
+      // container relaunch (see YARN-8265).
+      cancelOnSuccess = false;
+    }
+    containerStatusFuture =
+        scheduler.executorService.scheduleAtFixedRate(
+            new ContainerStatusRetriever(scheduler, event.getContainerId(),
+                this, cancelOnSuccess), 0, 1,
+            TimeUnit.SECONDS);
-    return status;
+    try {
+      readLock.lock();
+      return status;
+    } finally {
+      readLock.unlock();
+    }
+  }
+
+  private void setContainerStatus(ContainerStatus latestStatus) {
+    try {
+      writeLock.lock();
+      this.status = latestStatus;
+    } finally {
+      writeLock.unlock();
+    }
-    this.status = status;
+    setContainerStatus(status);

INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS8 INS83 INS39 INS42 INS44 INS8 INS32 INS21 INS43 INS42 INS21 INS21 INS21 MOV21 INS43 INS42 MOV60 INS25 MOV21 INS54 INS43 INS42 INS54 INS21 MOV32 INS42 INS21 INS21 INS32 INS40 INS32 INS32 INS32 INS42 INS27 MOV8 MOV8 INS8 INS42 INS8 INS8 INS32 UPD42 INS42 INS42 INS42 INS14 INS32 INS32 INS42 INS42 INS42 INS42 INS33 INS40 INS42 INS86 INS27 INS27 INS42 INS21 INS21 INS21 MOV21 INS21 INS42 INS42 INS43 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 UPD42 UPD42 MOV42 UPD42 MOV42 INS32 INS32 INS33 INS32 INS40 UPD40 MOV32 INS32 INS32 INS32 INS32 INS42 INS42 INS32 UPD42 UPD42 INS32 INS42 INS32 INS42 UPD42 INS52 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 DEL32 DEL32 DEL33 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL40 DEL27 DEL27 DEL25 DEL40 DEL42 DEL32 DEL42 DEL40 DEL42 DEL32 DEL40 DEL40 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL40 DEL40