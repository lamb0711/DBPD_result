HDFS-1623. High Availability Framework for HDFS NN. Contributed by Todd Lipcon, Aaron T. Myers, Eli Collins, Uma Maheswara Rao G, Bikas Saha, Suresh Srinivas, Jitendra Nath Pandey, Hari Mankude, Brandon Li, Sanjay Radia, Mingjie Lai, and Gregory Chanan


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1296534 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.io.retry.UnreliableInterface.UnreliableException;
-    IO_EXCEPTION
+    IO_EXCEPTION,
+    REMOTE_EXCEPTION
+  public void setIdentifier(String identifier) {
+    this.identifier = identifier;
+  }
+  
-      switch (exceptionToFailWith) {
-      case STANDBY_EXCEPTION:
-        throw new StandbyException(identifier);
-      case UNRELIABLE_EXCEPTION:
-        throw new UnreliableException(identifier);
-      case IO_EXCEPTION:
-        throw new IOException(identifier);
-      }
+      throwAppropriateException(exceptionToFailWith, identifier);
-      switch (exceptionToFailWith) {
-      case STANDBY_EXCEPTION:
-        throw new StandbyException(identifier);
-      case UNRELIABLE_EXCEPTION:
-        throw new UnreliableException(identifier);
-      case IO_EXCEPTION:
-        throw new IOException(identifier);
-      default:
-        throw new RuntimeException(identifier);
-      }
+      throwAppropriateException(exceptionToFailWith, identifier);
+      return null;
-      switch (exceptionToFailWith) {
-      case STANDBY_EXCEPTION:
-        throw new StandbyException(identifier);
-      case UNRELIABLE_EXCEPTION:
-        throw new UnreliableException(identifier);
-      case IO_EXCEPTION:
-        throw new IOException(identifier);
-      default:
-        throw new RuntimeException(identifier);
-      }
+      throwAppropriateException(exceptionToFailWith, identifier);
+      return null;
-      switch (exceptionToFailWith) {
-      case STANDBY_EXCEPTION:
-        throw new StandbyException(identifier);
-      case UNRELIABLE_EXCEPTION:
-        throw new UnreliableException(identifier);
-      case IO_EXCEPTION:
-        throw new IOException(identifier);
-      default:
-        throw new RuntimeException(identifier);
-      }
+      String message = "expected '" + this.identifier + "' but received '" +
+          identifier + "'";
+      throwAppropriateException(exceptionToFailWith, message);
+      return null;
+    }
+  }
+  
+  @Override
+  public void nonIdempotentVoidFailsIfIdentifierDoesntMatch(String identifier)
+      throws UnreliableException, StandbyException, IOException {
+    if (this.identifier.equals(identifier)) {
+      return;
+    } else {
+      String message = "expected '" + this.identifier + "' but received '" +
+          identifier + "'";
+      throwAppropriateException(exceptionToFailWith, message);
+  private static void throwAppropriateException(TypeOfExceptionToFailWith eType,
+      String message) throws UnreliableException, StandbyException, IOException {
+    switch (eType) {
+    case STANDBY_EXCEPTION:
+      throw new StandbyException(message);
+    case UNRELIABLE_EXCEPTION:
+      throw new UnreliableException(message);
+    case IO_EXCEPTION:
+      throw new IOException(message);
+    case REMOTE_EXCEPTION:
+      throw new RemoteException(IOException.class.getName(), message);
+    default:
+      throw new RuntimeException(message);
+    }
+  }

INS26 INS40 INS31 INS31 INS31 INS31 INS72 MOV83 INS39 INS42 INS44 INS8 MOV78 INS83 MOV43 MOV42 MOV43 MOV43 MOV43 INS8 MOV78 INS83 MOV43 INS42 MOV43 MOV43 MOV43 INS8 INS78 INS83 MOV43 INS42 INS44 MOV43 MOV43 MOV43 INS8 MOV78 INS39 UPD42 MOV44 MOV43 MOV43 MOV43 INS83 UPD83 INS39 INS42 INS44 INS44 MOV43 MOV43 MOV43 MOV8 INS42 INS43 INS42 INS21 INS25 INS25 INS42 INS43 INS42 INS25 INS43 INS42 INS43 INS42 INS42 INS7 MOV27 MOV8 INS8 MOV27 MOV8 INS8 INS42 INS32 MOV8 INS8 MOV32 INS8 INS42 INS42 INS42 INS49 INS53 INS22 INS42 INS21 INS21 INS41 INS21 INS41 INS22 INS42 INS42 INS60 INS21 INS41 INS41 INS60 INS21 INS42 INS14 INS52 INS42 INS32 INS32 INS33 INS32 INS33 INS52 INS42 INS43 INS59 INS32 INS33 INS43 INS59 INS32 UPD42 UPD42 UPD42 INS43 INS32 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS57 INS42 INS45 INS22 INS45 INS42 INS45 INS45 INS22 INS45 INS42 INS45 MOV43 INS52 INS42 INS52 INS42 DEL42 DEL42 DEL49 DEL42 DEL43 DEL42 DEL14 DEL53 DEL42 DEL49 DEL42 DEL43 DEL42 DEL14 DEL53 DEL42 DEL49 DEL42 DEL14 DEL53 DEL50 DEL42 DEL42 DEL49 DEL42 DEL14 DEL53 DEL42 DEL49 DEL42 DEL14 DEL53 DEL42 DEL49 DEL42 DEL14 DEL53 DEL49 DEL43 DEL42 DEL14 DEL53 DEL50 DEL8 DEL25 DEL8 DEL31 DEL42 DEL42 DEL49 DEL42 DEL14 DEL53 DEL42 DEL49 DEL42 DEL14 DEL53 DEL42 DEL49 DEL42 DEL14 DEL53 DEL49 DEL42 DEL43 DEL42 DEL14 DEL53 DEL50 DEL42 DEL42 DEL25 DEL8