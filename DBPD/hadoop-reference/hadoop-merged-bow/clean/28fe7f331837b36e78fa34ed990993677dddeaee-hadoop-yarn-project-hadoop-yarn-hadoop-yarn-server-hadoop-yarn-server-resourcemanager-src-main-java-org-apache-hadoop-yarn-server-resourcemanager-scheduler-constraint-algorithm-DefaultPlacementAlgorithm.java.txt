YARN-7774. Miscellaneous fixes to the PlacementProcessor. (asuresh)

+import java.util.ArrayList;
+  // Number of times to re-attempt placing a single scheduling request.
+  private static final int RE_ATTEMPT_COUNT = 2;
+
+    List<SchedulingRequest> rejectedRequests = new ArrayList<>();
+    int rePlacementCount = RE_ATTEMPT_COUNT;
+    while (rePlacementCount > 0) {
+      doPlacement(requests, resp, allNodes, rejectedRequests);
+      if (rejectedRequests.size() == 0 || rePlacementCount == 1) {
+        break;
+      }
+      requests = new BatchedRequests(requests.getIteratorType(),
+          requests.getApplicationId(), rejectedRequests,
+          requests.getPlacementAttempt());
+      rejectedRequests = new ArrayList<>();
+      rePlacementCount--;
+    }
+
+    resp.getRejectedRequests().addAll(rejectedRequests);
+    collector.collect(resp);
+    // Clean current temp-container tags
+    this.tagsManager.cleanTempContainers(requests.getApplicationId());
+  }
+
+  private void doPlacement(BatchedRequests requests,
+      ConstraintPlacementAlgorithmOutput resp,
+      List<SchedulerNode> allNodes,
+      List<SchedulingRequest> rejectedRequests) {
+    Iterator<SchedulerNode> nIter = allNodes.iterator();
+    SchedulerNode lastSatisfiedNode = null;
+      if (allNodes.isEmpty()) {
+        LOG.warn("No nodes available for placement at the moment !!");
+        break;
+      }
-      Iterator<SchedulerNode> nodeIter = allNodes.iterator();
+      CircularIterator<SchedulerNode> nodeIter =
+          new CircularIterator(lastSatisfiedNode, nIter, allNodes);
-          if (attemptPlacementOnNode(requests.getApplicationId(),
-              schedulingRequest, node)) {
+          String tag = schedulingRequest.getAllocationTags() == null ? "" :
+              schedulingRequest.getAllocationTags().iterator().next();
+          if (!requests.getBlacklist(tag).contains(node.getNodeID()) &&
+              attemptPlacementOnNode(
+                  requests.getApplicationId(), schedulingRequest, node)) {
+            lastSatisfiedNode = node;
-        .forEach(rejReq -> resp.getRejectedRequests().add(rejReq));
-    collector.collect(resp);
-    // Clean current temp-container tags
-    this.tagsManager.cleanTempContainers(requests.getApplicationId());
+        .forEach(rejReq -> rejectedRequests.add(rejReq));

INS26 INS40 INS23 INS31 INS83 INS83 INS83 INS39 INS59 MOV78 INS83 INS39 INS42 MOV44 MOV44 INS8 UPD83 UPD42 INS44 INS44 INS44 INS44 INS42 INS34 MOV60 MOV60 MOV60 INS60 INS60 INS61 INS21 MOV21 MOV21 INS43 INS42 INS43 INS42 INS74 INS42 INS74 INS42 MOV60 INS60 INS74 INS59 INS39 INS59 INS27 INS8 MOV32 INS42 INS42 INS43 INS43 INS43 INS43 INS43 INS59 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS34 INS21 INS25 INS21 INS21 INS21 UPD42 UPD42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 INS33 INS25 INS60 INS42 INS42 INS74 INS32 INS27 INS8 INS7 INS7 INS37 INS32 INS8 INS74 INS59 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS27 INS27 INS10 INS42 INS14 INS42 INS14 INS42 INS42 INS42 INS21 INS10 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS42 INS32 INS34 INS42 INS34 INS43 INS32 INS32 INS42 INS32 INS74 INS32 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS45 INS42 INS60 INS42 INS43 INS59 INS27 INS42 INS42 INS16 INS38 MOV32 INS21 INS27 INS45 INS32 INS32 INS7 INS32 INS33 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42