HDDS-1544. Support default Acls for volume, bucket, keys and prefix. Contributed by Ajay Kumar, Xiaoyu Yao.

Signed-off-by: Anu Engineer <aengineer@apache.org>

+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.OzoneAclInfo.OzoneAclScope;
+import java.util.Collection;
+import java.util.stream.Collectors;
-  private ArrayList<Map<String, BitSet>> aclMaps;
+  private ArrayList<Map<String, BitSet>> accessAclMap;
+  private List<OzoneAclInfo> defaultAclList;
-    aclMaps = new ArrayList<>();
+    accessAclMap = new ArrayList<>();
+    defaultAclList = new ArrayList<>();
-      aclMaps.add(aclType.ordinal(), new HashMap<>());
+      accessAclMap.add(aclType.ordinal(), new HashMap<>());
-  private Map<String, BitSet> getMap(OzoneAclType type) {
-    return aclMaps.get(type.ordinal());
+  private Map<String, BitSet> getAccessAclMap(OzoneAclType type) {
+    return accessAclMap.get(type.ordinal());
-    return getMap(type).get(user);
+    return getAccessAclMap(type).get(user);
+    acls.addAll(getAccessAcls());
+    acls.addAll(defaultAclList.stream().map(a ->
+        OzoneAcl.fromProtobuf(a)).collect(Collectors.toList()));
+    return acls;
+  }
+
+  private Collection<? extends OzoneAcl> getAccessAcls() {
+    List<OzoneAcl> acls = new ArrayList<>();
-      aclMaps.get(type.ordinal()).entrySet().stream().
+      accessAclMap.get(type.ordinal()).entrySet().stream().
-              valueOf(type.name()), entry.getKey(), entry.getValue())));
+              valueOf(type.name()), entry.getKey(), entry.getValue(),
+              OzoneAcl.AclScope.ACCESS)));
+    if (acl.getAclScope().equals(OzoneAcl.AclScope.DEFAULT)) {
+      defaultAclList.add(OzoneAcl.toProtobuf(acl));
+      return;
+    }
+
-    if (!getMap(aclType).containsKey(acl.getName())) {
-      getMap(aclType).put(acl.getName(), acl.getAclBitSet());
+    if (!getAccessAclMap(aclType).containsKey(acl.getName())) {
+      getAccessAclMap(aclType).put(acl.getName(), acl.getAclBitSet());
-      BitSet curRights = (BitSet) getMap(aclType).get(acl.getName()).clone();
+      BitSet curRights = (BitSet) getAccessAclMap(aclType).
+          get(acl.getName()).clone();
-      getMap(aclType).replace(acl.getName(), temp);
+      getAccessAclMap(aclType).replace(acl.getName(), temp);
-      aclMaps.get(type.ordinal()).clear();
+      accessAclMap.get(type.ordinal()).clear();
-
+    if (acl.getAclScope().equals(OzoneAcl.AclScope.DEFAULT)) {
+      defaultAclList.remove(OzoneAcl.toProtobuf(acl));
+      return;
+    }
+
-    if (getMap(aclType).containsKey(acl.getName())) {
-      BitSet aclRights = getMap(aclType).get(acl.getName());
+    if (getAccessAclMap(aclType).containsKey(acl.getName())) {
+      BitSet aclRights = getAccessAclMap(aclType).get(acl.getName());
-        getMap(aclType).remove(acl.getName());
+        getAccessAclMap(aclType).remove(acl.getName());
-    if (!getMap(acl.getType()).containsKey(acl.getName())) {
+    if (acl.getAclScope().equals(OzoneAclInfo.OzoneAclScope.DEFAULT)) {
+      defaultAclList.add(acl);
+      return;
+    }
+
+    if (!getAccessAclMap(acl.getType()).containsKey(acl.getName())) {
-      getMap(acl.getType()).put(acl.getName(), acls);
+      getAccessAclMap(acl.getType()).put(acl.getName(), acls);
-          aclMaps.get(type.ordinal()).entrySet()) {
+          accessAclMap.get(type.ordinal()).entrySet()) {
+            .setAclScope(OzoneAclScope.ACCESS)
+    aclList.addAll(defaultAclList);
+
+  public Collection<? extends OzoneAcl> getAclsByScope(OzoneAclScope scope) {
+    if (scope.equals(OzoneAclScope.DEFAULT)) {
+      return defaultAclList.stream().map(a ->
+          OzoneAcl.fromProtobuf(a)).collect(Collectors.toList());
+    } else {
+      return getAcl();
+    }
+  }
+
+  public List<OzoneAclInfo> getDefaultAclList() {
+    return defaultAclList;
+  }

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS31 INS31 INS31 INS83 INS74 INS59 UPD42 INS83 MOV74 INS42 INS8 UPD83 INS74 UPD42 INS83 INS74 INS42 INS44 INS8 INS83 INS74 INS42 INS8 UPD42 INS43 INS43 INS42 INS21 INS60 INS21 INS21 INS41 INS43 INS76 INS25 INS25 INS25 INS21 INS43 INS76 INS43 INS42 INS25 INS43 INS43 INS41 INS42 INS42 INS7 INS74 INS59 INS32 INS32 INS42 INS42 INS43 INS32 INS8 INS32 INS8 INS32 INS8 INS32 INS42 INS43 INS42 INS32 INS8 INS8 INS42 INS42 INS42 UPD42 INS42 INS14 UPD42 INS43 INS43 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS40 INS21 INS41 INS32 INS42 INS40 INS21 INS41 INS32 INS42 INS40 INS21 INS41 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS41 INS41 INS74 UPD42 INS42 INS42 INS74 INS42 INS32 INS42 INS32 INS42 INS42 INS32 MOV32 MOV43 INS42 INS42 INS32 UPD42 MOV42 MOV43 INS42 INS42 INS32 UPD42 MOV42 MOV32 MOV32 INS32 INS32 INS43 UPD42 INS43 INS32 INS42 INS86 INS42 INS42 INS42 INS42 INS32 UPD42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 UPD42 UPD42 MOV32 UPD42 MOV42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS59 INS32 INS42 INS42 INS42 UPD42 MOV43 UPD42 INS42 INS42 UPD42 INS42 INS42 INS42 UPD42 UPD42 INS32 INS42 INS86 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 INS59 INS32 UPD42 INS40 INS32 UPD42 INS32 INS42 INS42 INS42 INS42 UPD42 INS42 INS42 MOV32 INS42 INS40 DEL42 DEL42