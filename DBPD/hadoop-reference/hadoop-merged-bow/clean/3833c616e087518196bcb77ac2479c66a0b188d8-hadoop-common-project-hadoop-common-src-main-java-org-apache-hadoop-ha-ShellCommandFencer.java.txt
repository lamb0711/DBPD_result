HDFS-15404. ShellCommandFencer should expose info about source. Contributed by Chen Liang.

+import java.util.Arrays;
+  /** Prefix for source parameters added to the environment */
+  private static final String SOURCE_PREFIX = "source_";
+
+  private static final String ARG_DELIMITER = ",";
+
-  public boolean tryFence(HAServiceTarget target, String cmd) {
+  public boolean tryFence(HAServiceTarget target, String args) {
+    String cmd = parseArgs(target.getTransitionTargetHAStatus(), args);
+  private String parseArgs(HAServiceProtocol.HAServiceState state,
+      String cmd) {
+    String[] args = cmd.split(ARG_DELIMITER);
+    if (args.length == 1) {
+      // only one command is given, assuming both src and dst
+      // will execute the same command/script.
+      return args[0];
+    }
+    if (args.length > 2) {
+      throw new IllegalArgumentException("Expecting arguments size of at most "
+          + "two, getting " + Arrays.asList(args));
+    }
+    if (HAServiceProtocol.HAServiceState.ACTIVE.equals(state)) {
+      return args[0];
+    } else if (HAServiceProtocol.HAServiceState.STANDBY.equals(state)) {
+      return args[1];
+    } else {
+      throw new IllegalArgumentException(
+          "Unexpected HA service state:" + state);
+    }
+  }
+
+    String prefix;
+    HAServiceProtocol.HAServiceState targetState =
+        target.getTransitionTargetHAStatus();
+    if (targetState == null ||
+        HAServiceProtocol.HAServiceState.ACTIVE.equals(targetState)) {
+      // null is assumed to be same as ACTIVE, this is to be compatible
+      // with existing tests/use cases where target state is not specified
+      // but assuming it's active.
+      prefix = TARGET_PREFIX;
+    } else if (HAServiceProtocol.HAServiceState.STANDBY.equals(targetState)) {
+      prefix = SOURCE_PREFIX;
+    } else {
+      throw new IllegalArgumentException(
+          "Unexpected HA service state:" + targetState);
+    }
-      String key = TARGET_PREFIX + e.getKey();
+      String key = prefix + e.getKey();

INS26 INS40 INS23 INS23 INS31 INS29 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS44 INS83 INS43 INS42 INS44 MOV44 INS8 INS65 INS42 INS42 INS45 INS42 INS42 INS45 INS43 INS42 INS60 INS42 INS43 INS42 INS60 INS25 INS25 INS25 INS60 INS60 INS25 INS66 INS42 INS43 INS59 INS40 INS5 INS59 INS27 INS8 INS27 INS8 INS32 INS8 INS25 INS43 INS59 INS43 INS59 INS27 INS8 INS25 INS42 INS42 INS32 INS43 INS85 INS42 INS32 INS40 INS34 INS41 INS40 INS34 INS53 INS40 INS42 INS42 INS41 INS32 INS8 INS8 INS42 INS42 INS40 INS42 INS32 INS27 INS32 INS21 INS32 INS8 INS8 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS2 INS14 INS2 INS40 INS42 INS42 INS41 INS53 INS42 INS42 INS42 INS33 INS40 INS42 INS42 INS7 INS40 INS42 INS42 INS21 INS53 INS42 INS42 INS42 INS34 INS43 INS27 INS42 INS34 INS2 INS14 INS42 INS42 INS7 INS14 INS42 INS45 INS45 INS32 INS42 INS34 INS43 INS27 INS42 INS42 INS43 INS27 UPD42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42