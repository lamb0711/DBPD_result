HDFS-8461. Erasure coding: fix priority level of UnderReplicatedBlocks for striped block. Contributed by Walter Su.

- * is implemented in {@link #getPriority(int, int, int)}.
+ * is implemented in {@link #getPriority(BlockInfo, int, int, int)}.
-  private int getPriority(int curReplicas,
+  private int getPriority(BlockInfo block,
+                          int curReplicas,
-    } else if (curReplicas == 0) {
+    }
+    if (block.isStriped()) {
+      BlockInfoStriped sblk = (BlockInfoStriped) block;
+      return getPriorityStriped(curReplicas, decommissionedReplicas,
+          sblk.getRealDataBlockNum(), sblk.getParityBlockNum());
+    } else {
+      return getPriorityContiguous(curReplicas, decommissionedReplicas,
+          expectedReplicas);
+    }
+  }
+
+  private int getPriorityContiguous(int curReplicas, int decommissionedReplicas,
+      int expectedReplicas) {
+    if (curReplicas == 0) {
-      //only on replica -risk of loss
+      // only one replica, highest risk of loss
+  private int getPriorityStriped(int curReplicas, int decommissionedReplicas,
+      short dataBlkNum, short parityBlkNum) {
+    if (curReplicas < dataBlkNum) {
+      // There are some replicas on decommissioned nodes so it's not corrupted
+      if (curReplicas + decommissionedReplicas >= dataBlkNum) {
+        return QUEUE_HIGHEST_PRIORITY;
+      }
+      return QUEUE_WITH_CORRUPT_BLOCKS;
+    } else if (curReplicas == dataBlkNum) {
+      // highest risk of loss, highest priority
+      return QUEUE_HIGHEST_PRIORITY;
+    } else if ((curReplicas - dataBlkNum) * 3 < parityBlkNum + 1) {
+      // can only afford one replica loss
+      // this is considered very under-replicated
+      return QUEUE_VERY_UNDER_REPLICATED;
+    } else {
+      // add to the normal queue for under replicated blocks
+      return QUEUE_UNDER_REPLICATED;
+    }
+  }
+
-    int priLevel = getPriority(curReplicas, decomissionedReplicas,
+    int priLevel = getPriority(block, curReplicas, decomissionedReplicas,
-    int priLevel = getPriority(oldReplicas,
+    int priLevel = getPriority(block, oldReplicas,
-    int curPri = getPriority(curReplicas, decommissionedReplicas, curExpectedReplicas);
-    int oldPri = getPriority(oldReplicas, decommissionedReplicas, oldExpectedReplicas);
+    int curPri = getPriority(block, curReplicas, decommissionedReplicas,
+        curExpectedReplicas);
+    int oldPri = getPriority(block, oldReplicas, decommissionedReplicas,
+        oldExpectedReplicas);

INS31 INS31 MOV29 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS8 UPD42 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS8 INS43 INS42 INS39 INS42 INS39 INS42 INS39 INS42 MOV6 INS25 INS25 MOV25 INS39 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS25 MOV69 INS42 MOV27 MOV8 INS32 INS8 INS8 INS27 INS8 INS25 INS69 INS42 INS42 INS60 INS41 INS41 INS42 INS42 INS25 INS41 INS27 INS8 INS25 INS43 INS43 INS59 INS32 INS32 INS27 INS8 INS42 INS42 INS42 INS41 INS27 INS8 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS27 INS42 INS41 INS42 INS27 INS27 INS41 INS41 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS36 INS34 INS42 INS34 INS42 INS42 INS42 INS27 INS42 INS42 DEL25