YARN-5552. Add Builder methods for common yarn API records. (Tao Jie via wangda)

-
-    final Resource capability;
-    final List<String> nodes;
-    final List<String> racks;
-    final Priority priority;
-    final long allocationRequestId;
-    final boolean relaxLocality;
-    final String nodeLabelsExpression;
-    final ExecutionTypeRequest executionTypeRequest;
+    private Resource capability;
+    private List<String> nodes;
+    private List<String> racks;
+    private Priority priority;
+    private long allocationRequestId;
+    private boolean relaxLocality;
+    private String nodeLabelsExpression;
+    private ExecutionTypeRequest executionTypeRequest;
-      // Validate request
-      Preconditions.checkArgument(capability != null,
-          "The Resource to be requested for each container " +
-              "should not be null ");
-      Preconditions.checkArgument(priority != null,
-          "The priority at which to request containers should not be null ");
-      Preconditions.checkArgument(
-              !(!relaxLocality && (racks == null || racks.length == 0) 
-                  && (nodes == null || nodes.length == 0)),
-              "Can't turn off locality relaxation on a " + 
-              "request with no location constraints");
+      sanityCheck();
+    }
+
+    // Validate request
+    private void sanityCheck() {
+      Preconditions.checkArgument(capability != null,
+          "The Resource to be requested for each container " +
+              "should not be null ");
+      Preconditions.checkArgument(priority != null,
+          "The priority at which to request containers should not be null ");
+      Preconditions.checkArgument(
+              !(!relaxLocality && (racks == null || racks.size() == 0)
+                  && (nodes == null || nodes.size() == 0)),
+              "Can't turn off locality relaxation on a " +
+              "request with no location constraints");
+    private ContainerRequest() {};
+
+
+    public static ContainerRequestBuilder newBuilder() {
+      return new ContainerRequestBuilder();
+    }
+
+    /**
+     * Class to construct instances of {@link ContainerRequest} with specific
+     * options.
+     */
+    public static final class ContainerRequestBuilder {
+      private ContainerRequest containerRequest = new ContainerRequest();
+
+      public ContainerRequestBuilder capability(Resource capability) {
+        containerRequest.capability = capability;
+        return this;
+      }
+
+      public ContainerRequestBuilder nodes(String[] nodes) {
+        containerRequest.nodes =
+            (nodes != null ? ImmutableList.copyOf(nodes): null);
+        return this;
+      }
+
+      public ContainerRequestBuilder racks(String[] racks) {
+        containerRequest.racks =
+            (racks != null ? ImmutableList.copyOf(racks) : null);
+        return this;
+      }
+
+      public ContainerRequestBuilder priority(Priority priority) {
+        containerRequest.priority = priority;
+        return this;
+      }
+
+      public ContainerRequestBuilder allocationRequestId(
+          long allocationRequestId) {
+        containerRequest.allocationRequestId = allocationRequestId;
+        return this;
+      }
+
+      public ContainerRequestBuilder relaxLocality(boolean relaxLocality) {
+        containerRequest.relaxLocality = relaxLocality;
+        return this;
+      }
+
+      public ContainerRequestBuilder nodeLabelsExpression(
+          String nodeLabelsExpression) {
+        containerRequest.nodeLabelsExpression = nodeLabelsExpression;
+        return this;
+      }
+
+      public ContainerRequestBuilder executionTypeRequest(
+          ExecutionTypeRequest executionTypeRequest) {
+        containerRequest.executionTypeRequest = executionTypeRequest;
+        return this;
+      }
+
+      public ContainerRequest build() {
+        containerRequest.sanityCheck();
+        return containerRequest;
+      }
+    }
- 
+

INS83 INS83 INS42 INS31 INS31 INS31 INS55 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 UPD83 MOV21 INS83 INS39 INS42 INS8 INS83 INS42 INS8 INS83 INS83 INS43 INS42 INS8 INS29 MOV83 MOV83 INS83 INS42 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 MOV21 MOV21 INS21 INS42 INS41 INS65 INS83 INS43 INS59 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS8 INS32 INS14 INS66 INS65 INS66 INS66 INS42 INS42 INS14 INS42 INS43 INS42 INS21 INS41 INS42 INS5 INS42 INS21 INS41 INS42 INS5 INS42 INS21 INS41 INS42 INS43 INS42 INS21 INS41 INS42 INS39 INS42 INS21 INS41 INS42 INS39 INS42 INS21 INS41 INS42 INS43 INS42 INS21 INS41 INS42 INS43 INS42 INS21 INS41 INS42 INS21 INS41 UPD42 INS42 INS42 INS38 MOV27 INS43 INS42 INS43 INS42 INS7 INS52 INS43 INS85 INS7 INS52 INS43 INS85 INS7 INS52 INS42 INS7 INS52 INS7 INS52 INS7 INS52 INS42 INS7 INS52 INS42 INS7 INS52 INS32 INS42 INS36 INS42 INS42 INS40 INS42 INS42 INS40 INS36 INS42 INS40 INS36 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS40 INS42 INS42 INS42 INS27 INS16 INS16 MOV38 INS36 INS36 INS27 INS32 INS33 INS27 INS32 INS33 INS27 INS27 INS42 INS33 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 MOV27 INS27 MOV27 INS27 INS32 INS34 INS32 INS34 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL40 DEL34 DEL27 DEL27 DEL36 DEL40 DEL34 DEL27 DEL27 DEL36 DEL27 DEL36 DEL38