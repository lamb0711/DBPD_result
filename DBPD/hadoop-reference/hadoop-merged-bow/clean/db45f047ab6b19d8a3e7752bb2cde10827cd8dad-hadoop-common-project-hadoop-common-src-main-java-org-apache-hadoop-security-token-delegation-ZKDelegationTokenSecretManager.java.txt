HADOOP-11170. ZKDelegationTokenSecretManager fails to renewToken created by a peer. (Arun Suresh and Gregory Chanan via kasha)

-import org.apache.hadoop.security.token.SecretManager;
+import org.apache.zookeeper.data.Stat;
+  private static final String ZK_DTSM_KEYID_ROOT = "ZKDTSMKeyIdRoot";
-  private SharedCount seqCounter;
+  private SharedCount delTokSeqCounter;
+  private SharedCount keyIdSeqCounter;
-  public synchronized void startThreads() throws IOException {
+  public void startThreads() throws IOException {
-      seqCounter = new SharedCount(zkClient, ZK_DTSM_SEQNUM_ROOT, 0);
-      if (seqCounter != null) {
-        seqCounter.start();
+      delTokSeqCounter = new SharedCount(zkClient, ZK_DTSM_SEQNUM_ROOT, 0);
+      if (delTokSeqCounter != null) {
+        delTokSeqCounter.start();
+      keyIdSeqCounter = new SharedCount(zkClient, ZK_DTSM_KEYID_ROOT, 0);
+      if (keyIdSeqCounter != null) {
+        keyIdSeqCounter.start();
+      }
+    } catch (Exception e) {
+      throw new IOException("Could not start KeyId Counter", e);
+    }
+    try {
-  public synchronized void stopThreads() {
+  public void stopThreads() {
-      if (seqCounter != null) {
-        seqCounter.close();
+      if (delTokSeqCounter != null) {
+        delTokSeqCounter.close();
+      }
+      if (keyIdSeqCounter != null) {
+        keyIdSeqCounter.close();
-  protected synchronized int getDelegationTokenSeqNum() {
-    return seqCounter.getCount();
+  protected int getDelegationTokenSeqNum() {
+    return delTokSeqCounter.getCount();
-  protected synchronized int incrementDelegationTokenSeqNum() {
+  protected int incrementDelegationTokenSeqNum() {
-      while (!seqCounter.trySetCount(seqCounter.getCount() + 1)) {
+      while (!delTokSeqCounter.trySetCount(delTokSeqCounter.getCount() + 1)) {
-    return seqCounter.getCount();
+    return delTokSeqCounter.getCount();
-  protected synchronized void setDelegationTokenSeqNum(int seqNum) {
+  protected void setDelegationTokenSeqNum(int seqNum) {
-      seqCounter.setCount(seqNum);
+      delTokSeqCounter.setCount(seqNum);
+  protected int getCurrentKeyId() {
+    return keyIdSeqCounter.getCount();
+  }
+
+  @Override
+  protected int incrementCurrentKeyId() {
+    try {
+      while (!keyIdSeqCounter.trySetCount(keyIdSeqCounter.getCount() + 1)) {
+      }
+    } catch (Exception e) {
+      throw new RuntimeException("Could not increment shared keyId counter !!", e);
+    }
+    return keyIdSeqCounter.getCount();
+  }
+
+  @Override
+    return getTokenInfoFromZK(ident, false);
+  }
+
+  private DelegationTokenInformation getTokenInfoFromZK(TokenIdent ident,
+      boolean quiet) throws IOException {
-      LOG.error("No node in path [" + nodePath + "]");
+      if (!quiet) {
+        LOG.error("No node in path [" + nodePath + "]");
+      }
-        zkClient.delete().forPath(nodeRemovePath);
+        while(zkClient.checkExists().forPath(nodeRemovePath) != null){
+          zkClient.delete().guaranteed().forPath(nodeRemovePath);
+        }
+        addOrUpdateToken(ident, tokenInfo, true);
+      } else {
-      } else {
-        addOrUpdateToken(ident, tokenInfo, true);
-        LOG.debug("Attempted to remove a non-existing znode " + nodeRemovePath);
+        while(zkClient.checkExists().forPath(nodeRemovePath) != null){
+          zkClient.delete().guaranteed().forPath(nodeRemovePath);
+        }
-        zkClient.delete().forPath(nodeRemovePath);
+        LOG.debug("Attempted to remove a non-existing znode " + nodeRemovePath);
-        LOG.debug((isUpdate ? "Storing " : "Updating ")
+        LOG.debug((isUpdate ? "Updating " : "Storing ")

MOV26 UPD40 INS23 INS23 INS31 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 MOV43 INS59 INS43 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS83 INS43 INS42 INS44 INS43 INS8 INS44 INS42 INS42 INS45 INS42 INS42 UPD42 INS54 INS42 INS41 INS42 INS54 INS41 INS42 INS43 INS42 INS42 INS41 INS39 INS42 INS8 INS12 INS32 INS8 INS12 INS32 INS42 INS32 INS21 INS25 INS44 INS8 INS25 UPD42 UPD42 INS42 INS42 INS61 INS44 INS8 INS42 INS42 INS42 INS42 INS9 INS8 MOV8 MOV8 INS7 INS27 INS8 INS43 INS42 INS53 INS27 INS8 INS38 INS8 INS43 INS42 INS53 INS25 INS8 UPD42 UPD42 INS42 INS14 INS42 INS33 INS21 INS42 INS14 INS42 INS33 INS21 UPD42 UPD42 INS32 INS42 INS14 INS38 MOV8 INS61 INS61 INS43 INS42 INS42 INS34 INS32 INS43 INS45 INS42 INS32 UPD42 INS42 INS42 INS27 INS43 INS45 INS42 INS42 INS27 INS8 INS27 MOV8 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS32 INS34 INS42 INS32 INS33 INS21 INS32 INS33 UPD42 INS42 INS42 INS32 INS42 INS42 INS32 MOV32 MOV42 MOV42 INS32 INS42 INS42 INS32 INS42 INS42 UPD42 MOV32 INS42 INS42 INS32 INS42 UPD42 UPD45 UPD45 INS42 INS42 DEL83 DEL83 DEL83 DEL83 DEL83 DEL42 DEL32 DEL21