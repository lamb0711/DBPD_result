MAPREDUCE-3744. Fix the yarn logs command line. Improve error messages for mapred job -logs. (Contributed by Jason Lowe)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1239433 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.FileNotFoundException;
+    int resultCode = 0;
-      dumpAllContainersLogs(appId, appOwner, out);
+      resultCode = dumpAllContainersLogs(appId, appOwner, out);
-      return -1;
+      resultCode = -1;
-                  getConf().get(YarnConfiguration.NM_REMOTE_APP_LOG_DIR_SUFFIX,
-                      YarnConfiguration.DEFAULT_NM_REMOTE_APP_LOG_DIR_SUFFIX)));
-      return dumpAContainerLogs(containerIdStr, reader, out);
+                  LogAggregationUtils.getRemoteNodeLogDirSuffix(getConf())));
+      resultCode = dumpAContainerLogs(containerIdStr, reader, out);
-    return 0;
+    return resultCode;
-  public void dumpAContainersLogs(String appId, String containerId,
+  public int dumpAContainersLogs(String appId, String containerId,
-    AggregatedLogFormat.LogReader reader =
-        new AggregatedLogFormat.LogReader(getConf(),
-            LogAggregationUtils.getRemoteNodeLogFileForApp(remoteRootLogDir,
-                ConverterUtils.toApplicationId(appId), jobOwner,
-                ConverterUtils.toNodeId(nodeId), suffix));
+    Path logPath = LogAggregationUtils.getRemoteNodeLogFileForApp(
+        remoteRootLogDir, ConverterUtils.toApplicationId(appId), jobOwner,
+        ConverterUtils.toNodeId(nodeId), suffix);
+    AggregatedLogFormat.LogReader reader;
+    try {
+      reader = new AggregatedLogFormat.LogReader(getConf(), logPath);
+    } catch (FileNotFoundException fnfe) {
+      System.out.println("Logs not available at " + logPath.toString());
+      System.out.println(
+          "Log aggregation has not completed or is not enabled.");
+      return -1;
+    }
-    dumpAContainerLogs(containerId, reader, out);
+    return dumpAContainerLogs(containerId, reader, out);
-  private void dumpAllContainersLogs(ApplicationId appId, String appOwner,
+  private int dumpAllContainersLogs(ApplicationId appId, String appOwner,
-        getConf().get(YarnConfiguration.NM_REMOTE_APP_LOG_DIR,
-            YarnConfiguration.DEFAULT_NM_REMOTE_APP_LOG_DIR_SUFFIX);
+        LogAggregationUtils.getRemoteNodeLogDirSuffix(getConf());
-    RemoteIterator<FileStatus> nodeFiles =
-        FileContext.getFileContext().listStatus(remoteAppLogDir);
+    RemoteIterator<FileStatus> nodeFiles;
+    try {
+      nodeFiles = FileContext.getFileContext().listStatus(remoteAppLogDir);
+    } catch (FileNotFoundException fnf) {
+      System.out.println("Logs not available at "
+          + remoteAppLogDir.toString());
+      System.out.println(
+          "Log aggregation has not completed or is not enabled.");
+      return -1;
+    }
+    return 0;
-    logDumper.run(args);
+    int exitCode = logDumper.run(args);
+    System.exit(exitCode);

INS26 INS40 UPD39 UPD39 INS60 INS41 INS60 INS54 INS41 INS54 MOV41 INS60 INS39 INS59 INS42 INS43 MOV43 INS59 INS8 INS12 MOV32 INS8 INS12 INS39 INS59 INS32 INS42 INS34 INS42 UPD42 MOV32 INS42 MOV21 INS44 INS8 MOV32 INS21 INS44 INS8 INS42 MOV32 INS42 INS42 INS42 INS7 INS21 INS21 INS7 INS43 INS42 INS21 INS21 MOV41 INS42 UPD42 INS7 INS43 INS42 INS21 INS21 INS41 INS42 MOV32 INS7 INS7 INS42 INS14 INS42 INS32 INS32 INS42 MOV32 INS42 INS32 INS32 INS38 INS42 INS38 INS42 MOV32 MOV43 MOV32 INS42 INS40 INS42 INS27 INS40 INS42 INS45 INS40 INS42 INS27 INS40 INS42 INS45 INS34 INS34 INS45 INS32 INS45 INS32 MOV32 INS42 INS42 INS42 INS42 INS42 UPD42 DEL40 DEL40 DEL41 DEL14 DEL40 DEL40