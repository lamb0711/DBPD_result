HDFS-13045. RBF: Improve error message returned from subcluster. Contributed by Inigo Goiri.

+import java.io.FileNotFoundException;
+import com.google.common.annotations.VisibleForTesting;
-    RemoteLocationContext loc = new RemoteLocation(nsId, "/");
+    RemoteLocationContext loc = new RemoteLocation(nsId, "/", "/");
+        // Localize the exception
+
+        ioe = processException(ioe, loc);
+
-        lastThrownException = (IOException) ioe;
+        lastThrownException =  ioe;
+   * Exception messages might contain local subcluster paths. This method
+   * generates a new exception with the proper message.
+   * @param ioe Original IOException.
+   * @param loc Location we are processing.
+   * @return Exception processed for federation.
+   */
+  private IOException processException(
+      IOException ioe, RemoteLocationContext loc) {
+
+    if (ioe instanceof RemoteException) {
+      RemoteException re = (RemoteException)ioe;
+      String newMsg = processExceptionMsg(
+          re.getMessage(), loc.getDest(), loc.getSrc());
+      RemoteException newException =
+          new RemoteException(re.getClassName(), newMsg);
+      newException.setStackTrace(ioe.getStackTrace());
+      return newException;
+    }
+
+    if (ioe instanceof FileNotFoundException) {
+      String newMsg = processExceptionMsg(
+          ioe.getMessage(), loc.getDest(), loc.getSrc());
+      FileNotFoundException newException = new FileNotFoundException(newMsg);
+      newException.setStackTrace(ioe.getStackTrace());
+      return newException;
+    }
+
+    return ioe;
+  }
+
+  /**
+   * Process a subcluster message and make it federated.
+   * @param msg Original exception message.
+   * @param dst Path in federation.
+   * @param src Path in the subcluster.
+   * @return Message processed for federation.
+   */
+  @VisibleForTesting
+  static String processExceptionMsg(
+      final String msg, final String dst, final String src) {
+    if (dst.equals(src) || !dst.startsWith("/") || !src.startsWith("/")) {
+      return msg;
+    }
+
+    String newMsg = msg.replaceFirst(dst, src);
+    int minLen = Math.min(dst.length(), src.length());
+    for (int i = 0; newMsg.equals(msg) && i < minLen; i++) {
+      // Check if we can replace sub folders
+      String dst1 = dst.substring(0, dst.length() - 1 - i);
+      String src1 = src.substring(0, src.length() - 1 - i);
+      newMsg = msg.replaceFirst(dst1, src1);
+    }
+
+    return newMsg;
+  }
+
+  /**

INS26 INS26 INS40 INS40 INS31 INS31 INS29 INS83 MOV43 INS42 INS44 INS44 INS8 INS29 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS8 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS25 INS25 INS41 INS65 INS65 INS65 INS65 INS65 INS42 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS25 INS60 INS60 INS24 INS41 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS62 INS8 INS62 INS8 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS27 INS8 INS43 INS59 INS39 INS59 INS58 INS27 INS37 INS8 INS42 INS42 INS43 INS60 INS60 INS60 INS21 INS41 INS42 INS43 INS60 INS60 INS21 INS41 INS32 INS38 INS38 INS41 INS42 INS42 INS32 INS42 INS32 INS39 INS59 INS32 INS27 INS42 INS60 INS60 INS21 INS45 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS42 INS42 INS43 INS59 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS34 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS7 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS21 INS43 INS42 INS42 INS32 INS32 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS34 INS27 INS42 INS42 INS34 INS27 INS42 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS34 INS42 INS32 INS34 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL11