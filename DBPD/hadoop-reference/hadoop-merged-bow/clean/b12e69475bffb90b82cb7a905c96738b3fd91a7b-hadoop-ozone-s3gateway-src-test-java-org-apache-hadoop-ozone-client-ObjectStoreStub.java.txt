HDDS-658. Implement s3 bucket list backend call and use it from rest endpoint. Contributed by Bharat Viswanadham.

-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.Iterator;
-import java.util.Map;
+import java.util.*;
+  private Map<String, List<OzoneBucket>> userBuckets = new HashMap<>();
+    String volumeName = "s3" + userName;
-      String volumeName = "s3"+userName;
+
+    if (userBuckets.get(userName) == null) {
+      List<OzoneBucket> ozoneBuckets = new ArrayList<>();
+      ozoneBuckets.add(volumes.get(volumeName).getBucket(s3BucketName));
+      userBuckets.put(userName, ozoneBuckets);
+    } else {
+      userBuckets.get(userName).add(volumes.get(volumeName).getBucket(
+          s3BucketName));
+    }
+  }
+
+  public Iterator<? extends OzoneBucket> listS3Buckets(String userName,
+                                                       String bucketPrefix) {
+    if (userBuckets.get(userName) == null) {
+      return new ArrayList<OzoneBucket>().iterator();
+    } else {
+      return userBuckets.get(userName).parallelStream()
+          .filter(ozoneBucket -> {
+            if (bucketPrefix != null) {
+              return ozoneBucket.getName().startsWith(bucketPrefix);
+            } else {
+              return true;
+            }
+          }).collect(Collectors.toList())
+          .iterator();
+    }
+  }
+
+  public Iterator<? extends OzoneBucket> listS3Buckets(String userName,
+                                                       String bucketPrefix,
+                                                       String prevBucket) {
+
+    if (userBuckets.get(userName) == null) {
+      return new ArrayList<OzoneBucket>().iterator();
+    } else {
+      //Sort buckets lexicographically
+      userBuckets.get(userName).sort(
+          (bucket1, bucket2) -> {
+            int compare = bucket1.getName().compareTo(bucket2.getName());
+            if (compare < 0) {
+              return -1;
+            } else if (compare == 0) {
+              return 0;
+            } else {
+              return 1;
+            }
+          });
+      return userBuckets.get(userName).stream()
+          .filter(ozoneBucket -> {
+            if (prevBucket != null) {
+              return ozoneBucket.getName().compareTo(prevBucket) > 0;
+            } else {
+              return true;
+            }
+          })
+          .filter(ozoneBucket -> {
+            if (bucketPrefix != null) {
+              return ozoneBucket.getName().startsWith(bucketPrefix);
+            } else {
+              return true;
+            }
+          }).collect(Collectors.toList())
+          .iterator();
+    }

UPD40 INS23 INS31 INS31 INS83 INS74 INS59 INS83 INS74 INS42 INS44 INS44 INS8 INS83 INS74 INS42 INS44 INS44 INS44 INS8 INS43 INS43 INS74 INS42 INS14 MOV60 INS25 INS43 INS76 INS43 INS42 INS43 INS42 INS25 INS43 INS76 INS43 INS42 INS43 INS42 INS43 INS42 INS25 INS42 INS42 INS43 INS43 INS74 INS27 INS8 INS8 INS42 INS43 INS42 INS42 INS27 INS8 INS8 INS42 INS43 INS42 INS42 INS42 INS27 INS8 INS8 INS42 INS42 INS43 INS32 INS33 INS60 INS21 INS21 INS21 INS42 INS32 INS33 INS41 INS41 INS42 INS32 INS33 INS41 INS21 INS41 INS42 INS42 INS42 INS42 INS74 INS59 INS32 INS32 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS32 INS32 INS43 INS43 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS14 INS42 INS32 INS42 INS14 INS42 INS32 INS42 INS86 INS32 INS42 INS42 INS42 INS74 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS74 INS32 INS42 INS32 INS74 INS42 INS42 INS42 INS59 INS59 INS8 INS32 INS42 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS32 INS42 INS86 INS42 INS42 INS43 INS43 INS42 INS42 INS60 INS25 INS32 INS42 INS86 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS59 INS8 INS42 INS42 INS39 INS59 INS27 INS8 INS25 INS32 INS42 INS86 INS59 INS8 INS42 INS42 INS42 INS42 INS25 INS42 INS32 INS42 INS34 INS41 INS27 INS8 INS8 INS32 INS42 INS59 INS8 INS42 INS25 INS27 INS8 INS8 INS32 INS42 INS32 INS38 INS42 INS34 INS41 INS41 INS42 INS42 INS42 INS42 INS25 INS27 INS8 INS8 INS42 INS33 INS41 INS41 INS42 INS42 INS42 INS42 INS34 INS34 INS34 INS27 INS8 INS8 INS42 INS33 INS41 INS41 INS32 INS9 INS42 INS33 INS41 INS41 INS32 INS9 INS32 INS42 INS42 INS27 INS9 INS32 INS42 INS42 INS42 INS42 INS32 INS34 INS42 INS42 INS32 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26