HDFS-15117. EC: Add getECTopologyResultForPolicies to DistributedFileSystem. Contributed by Ayush Saxena

+import org.apache.hadoop.hdfs.protocol.ECTopologyVerifierResult;
+   * Verifies if the given policies are supported in the given cluster setup.
+   * If not policy is specified checks for all enabled policies.
+   * @param policyNames name of policies.
+   * @return the result if the given policies are supported in the cluster setup
+   * @throws IOException
+   */
+  public ECTopologyVerifierResult getECTopologyResultForPolicies(
+      String[] policyNames) throws IOException {
+    String operationName = "getECTopologyResultForPolicies";
+    checkSuperuserPrivilege(operationName);
+    checkOperation(OperationCategory.UNCHECKED);
+    ECTopologyVerifierResult result;
+    readLock();
+    try {
+      checkOperation(OperationCategory.UNCHECKED);
+      // If no policy name is specified return the result
+      // for all enabled policies.
+      if (policyNames == null || policyNames.length == 0) {
+        result = getEcTopologyVerifierResultForEnabledPolicies();
+      } else {
+        Collection<ErasureCodingPolicy> policies =
+            new ArrayList<ErasureCodingPolicy>();
+        for (int i = 0; i < policyNames.length; i++) {
+          policies.add(FSDirErasureCodingOp
+              .getErasureCodingPolicyByName(this, policyNames[i]));
+        }
+        int numOfDataNodes =
+            getBlockManager().getDatanodeManager().getNumOfDataNodes();
+        int numOfRacks =
+            getBlockManager().getDatanodeManager().getNetworkTopology()
+                .getNumOfRacks();
+        result = ECTopologyVerifier
+            .getECTopologyVerifierResult(numOfRacks, numOfDataNodes, policies);
+      }
+    } finally {
+      readUnlock();
+    }
+    logAuditEvent(true, operationName, null);
+    return result;
+  }
+
+  /**
-    int numOfDataNodes = getBlockManager().getDatanodeManager()
-        .getNumOfDataNodes();
-    int numOfRacks = getBlockManager().getDatanodeManager()
-        .getNetworkTopology().getNumOfRacks();
-    ErasureCodingPolicy[] enabledEcPolicies =
-        getErasureCodingPolicyManager().getCopyOfEnabledPolicies();
-        ECTopologyVerifier.getECTopologyVerifierResult(
-            numOfRacks, numOfDataNodes, enabledEcPolicies);
+        getEcTopologyVerifierResultForEnabledPolicies();
+  private ECTopologyVerifierResult getEcTopologyVerifierResultForEnabledPolicies() {
+    int numOfDataNodes =
+        getBlockManager().getDatanodeManager().getNumOfDataNodes();
+    int numOfRacks = getBlockManager().getDatanodeManager().getNetworkTopology()
+        .getNumOfRacks();
+    ErasureCodingPolicy[] enabledEcPolicies =
+        getErasureCodingPolicyManager().getCopyOfEnabledPolicies();
+    return ECTopologyVerifier
+        .getECTopologyVerifierResult(numOfRacks, numOfDataNodes,
+            Arrays.asList(enabledEcPolicies));
+  }
+

INS26 INS40 INS31 INS31 INS29 INS83 INS43 INS42 INS44 INS43 INS8 INS83 INS43 INS42 INS8 INS65 INS65 INS65 INS65 INS42 INS5 INS42 INS42 INS60 INS21 INS21 INS60 INS21 INS54 INS21 INS41 INS42 MOV60 MOV60 MOV60 INS41 INS66 INS66 INS42 INS66 INS66 INS42 INS43 INS85 INS43 INS59 INS32 INS32 INS43 INS59 INS32 INS8 INS8 INS32 INS42 INS32 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS21 INS25 INS21 INS42 INS9 INS42 INS33 INS42 INS42 INS42 INS42 INS32 INS32 INS27 INS8 INS8 INS32 UPD42 INS42 INS42 INS42 INS42 INS40 INS27 INS27 INS21 INS60 INS24 INS60 INS60 INS21 INS42 INS42 INS33 INS40 INS34 INS7 INS74 INS59 INS58 INS27 INS37 INS8 INS39 INS59 INS39 INS59 INS7 INS42 INS32 INS43 INS43 INS42 INS14 INS39 INS59 INS42 INS40 INS42 INS21 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS74 INS42 INS34 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS52 INS2 INS42 INS32 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL42