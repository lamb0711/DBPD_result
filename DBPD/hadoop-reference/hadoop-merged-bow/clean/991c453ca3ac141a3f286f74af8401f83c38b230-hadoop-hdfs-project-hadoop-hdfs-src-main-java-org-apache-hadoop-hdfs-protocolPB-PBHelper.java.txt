HDFS-5431. Support cachepool-based limit management in path-based caching. (awang via cmccabe)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1551651 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.fs.CacheFlag;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.CacheFlagProto;
-  public static EnumSetWritable<CreateFlag> convert(int flag) {
+  public static EnumSetWritable<CreateFlag> convertCreateFlag(int flag) {
-  
+
+  public static int convertCacheFlags(EnumSet<CacheFlag> flags) {
+    int value = 0;
+    if (flags.contains(CacheFlag.FORCE)) {
+      value |= CacheFlagProto.FORCE.getNumber();
+    }
+    return value;
+  }
+
+  public static EnumSet<CacheFlag> convertCacheFlags(int flags) {
+    EnumSet<CacheFlag> result = EnumSet.noneOf(CacheFlag.class);
+    if ((flags & CacheFlagProto.FORCE_VALUE) == CacheFlagProto.FORCE_VALUE) {
+      result.add(CacheFlag.FORCE);
+    }
+    return result;
+  }
+
-    if (info.getWeight() != null) {
-      builder.setWeight(info.getWeight());
+    if (info.getLimit() != null) {
+      builder.setLimit(info.getLimit());
-    if (proto.hasWeight()) {
-      info.setWeight(proto.getWeight());
+    if (proto.hasLimit())  {
+      info.setLimit(proto.getLimit());
+    builder.setBytesOverlimit(stats.getBytesOverlimit());
+    builder.setBytesOverlimit(proto.getBytesOverlimit());

INS26 INS26 INS40 INS40 INS31 INS31 UPD42 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS74 INS42 INS44 INS8 INS74 INS42 INS60 INS25 INS41 INS43 INS43 INS39 INS42 INS60 INS25 INS41 INS21 INS21 INS43 INS43 INS39 INS59 INS32 INS8 INS42 INS42 INS42 INS74 INS59 INS27 INS8 INS42 INS32 INS32 INS42 INS42 INS42 INS34 INS42 INS42 INS40 INS21 INS43 INS43 INS42 INS32 INS36 INS40 INS21 UPD42 INS42 INS42 INS32 INS42 INS42 INS32 INS7 INS42 INS42 INS42 INS42 INS57 INS27 INS32 UPD42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS40 INS42 INS42 INS40 UPD42 UPD42 INS40 INS42 INS42 UPD42 UPD42