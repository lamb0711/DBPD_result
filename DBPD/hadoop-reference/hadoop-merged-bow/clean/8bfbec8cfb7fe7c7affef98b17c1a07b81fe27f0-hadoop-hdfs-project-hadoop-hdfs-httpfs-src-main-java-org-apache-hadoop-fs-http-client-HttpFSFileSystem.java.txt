HDFS-6379. HTTPFS - Implement ACLs support. (yoderme via tucu)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1602040 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.fs.permission.AclEntry;
+import org.apache.hadoop.fs.permission.AclStatus;
+  public static final String ACLSPEC_PARAM = "aclspec";
+  public static final String ACLSPEC_DEFAULT = "";
+  public static final String ACL_STATUS_JSON = "AclStatus";
+  public static final String ACL_STICKY_BIT_JSON = "stickyBit";
+  public static final String ACL_ENTRIES_JSON = "entries";
+  public static final String ACL_BIT_JSON = "aclBit";
+
-    INSTRUMENTATION(HTTP_GET),
+    INSTRUMENTATION(HTTP_GET), GETACLSTATUS(HTTP_GET),
+    MODIFYACLENTRIES(HTTP_PUT), REMOVEACLENTRIES(HTTP_PUT),
+    REMOVEDEFAULTACL(HTTP_PUT), REMOVEACL(HTTP_PUT), SETACL(HTTP_PUT),
+  /**
+   * Modify the ACL entries for a file.
+   *
+   * @param path Path to modify
+   * @param aclSpec List<AclEntry> describing modifications
+   * @throws IOException
+   */
+  @Override
+  public void modifyAclEntries(Path path, List<AclEntry> aclSpec)
+          throws IOException {
+    Map<String, String> params = new HashMap<String, String>();
+    params.put(OP_PARAM, Operation.MODIFYACLENTRIES.toString());
+    params.put(ACLSPEC_PARAM, AclEntry.aclSpecToString(aclSpec));
+    HttpURLConnection conn = getConnection(
+            Operation.MODIFYACLENTRIES.getMethod(), params, path, true);
+    HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);
+  }
+
+  /**
+   * Remove the specified ACL entries from a file
+   * @param path Path to modify
+   * @param aclSpec List<AclEntry> describing entries to remove
+   * @throws IOException
+   */
+  @Override
+  public void removeAclEntries(Path path, List<AclEntry> aclSpec)
+          throws IOException {
+    Map<String, String> params = new HashMap<String, String>();
+    params.put(OP_PARAM, Operation.REMOVEACLENTRIES.toString());
+    params.put(ACLSPEC_PARAM, AclEntry.aclSpecToString(aclSpec));
+    HttpURLConnection conn = getConnection(
+            Operation.REMOVEACLENTRIES.getMethod(), params, path, true);
+    HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);
+  }
+
+  /**
+   * Removes the default ACL for the given file
+   * @param path Path from which to remove the default ACL.
+   * @throws IOException
+   */
+  @Override
+  public void removeDefaultAcl(Path path) throws IOException {
+    Map<String, String> params = new HashMap<String, String>();
+    params.put(OP_PARAM, Operation.REMOVEDEFAULTACL.toString());
+    HttpURLConnection conn = getConnection(
+            Operation.REMOVEDEFAULTACL.getMethod(), params, path, true);
+    HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);
+  }
+
+  /**
+   * Remove all ACLs from a file
+   * @param path Path from which to remove all ACLs
+   * @throws IOException
+   */
+  @Override
+  public void removeAcl(Path path) throws IOException {
+    Map<String, String> params = new HashMap<String, String>();
+    params.put(OP_PARAM, Operation.REMOVEACL.toString());
+    HttpURLConnection conn = getConnection(Operation.REMOVEACL.getMethod(),
+            params, path, true);
+    HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);
+  }
+
+  /**
+   * Set the ACLs for the given file
+   * @param path Path to modify
+   * @param aclSpec List<AclEntry> describing modifications, must include
+   *                entries for user, group, and others for compatibility
+   *                with permission bits.
+   * @throws IOException
+   */
+  @Override
+  public void setAcl(Path path, List<AclEntry> aclSpec) throws IOException {
+    Map<String, String> params = new HashMap<String, String>();
+    params.put(OP_PARAM, Operation.SETACL.toString());
+    params.put(ACLSPEC_PARAM, AclEntry.aclSpecToString(aclSpec));
+    HttpURLConnection conn = getConnection(Operation.SETACL.getMethod(),
+                                           params, path, true);
+    HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);
+  }
+
+  /**
+   * Get the ACL information for a given file
+   * @param path Path to acquire ACL info for
+   * @return the ACL information in JSON format
+   * @throws IOException
+   */
+  @Override
+  public AclStatus getAclStatus(Path path) throws IOException {
+    Map<String, String> params = new HashMap<String, String>();
+    params.put(OP_PARAM, Operation.GETACLSTATUS.toString());
+    HttpURLConnection conn = getConnection(Operation.GETACLSTATUS.getMethod(),
+            params, path, true);
+    HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);
+    JSONObject json = (JSONObject) HttpFSUtils.jsonParse(conn);
+    json = (JSONObject) json.get(ACL_STATUS_JSON);
+    return createAclStatus(json);
+  }
+
+  /**
+   * Convert the given JSON object into an AclStatus
+   * @param json Input JSON representing the ACLs
+   * @return Resulting AclStatus
+   */
+  private AclStatus createAclStatus(JSONObject json) {
+    AclStatus.Builder aclStatusBuilder = new AclStatus.Builder()
+            .owner((String) json.get(OWNER_JSON))
+            .group((String) json.get(GROUP_JSON))
+            .stickyBit((Boolean) json.get(ACL_STICKY_BIT_JSON));
+    JSONArray entries = (JSONArray) json.get(ACL_ENTRIES_JSON);
+    for ( Object e : entries ) {
+      aclStatusBuilder.addEntry(AclEntry.parseAclEntry(e.toString(), true));
+    }
+    return aclStatusBuilder.build();
+  }
+

INS26 INS26 INS40 INS40 INS23 INS23 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS72 INS72 INS72 INS72 INS72 INS72 INS29 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS29 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS29 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS29 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS29 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS29 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS29 INS83 INS43 INS42 INS44 INS8 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS74 INS42 INS42 INS60 INS21 INS21 INS60 INS21 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS74 INS42 INS42 INS60 INS21 INS21 INS60 INS21 INS65 INS65 INS65 INS42 INS43 INS42 INS42 INS60 INS21 INS60 INS21 INS65 INS65 INS65 INS42 INS43 INS42 INS42 INS60 INS21 INS60 INS21 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS74 INS42 INS42 INS60 INS21 INS21 INS60 INS21 INS65 INS65 INS65 INS65 INS42 INS42 INS43 INS42 INS42 INS60 INS21 INS60 INS21 INS60 INS21 INS41 INS65 INS65 INS65 INS42 INS43 INS42 INS60 INS60 INS70 INS41 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS43 INS43 INS74 INS59 INS32 INS32 INS43 INS59 INS32 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS43 INS43 INS74 INS59 INS32 INS32 INS43 INS59 INS32 INS66 INS42 INS66 INS42 INS42 INS74 INS59 INS32 INS43 INS59 INS32 INS66 INS42 INS66 INS42 INS42 INS74 INS59 INS32 INS43 INS59 INS32 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS42 INS43 INS43 INS74 INS59 INS32 INS32 INS43 INS59 INS32 INS66 INS42 INS66 INS66 INS42 INS42 INS74 INS59 INS32 INS43 INS59 INS32 INS43 INS59 INS7 INS32 INS66 INS42 INS66 INS66 INS42 INS43 INS59 INS43 INS59 INS44 INS42 INS8 INS32 INS42 INS42 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS40 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS40 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS40 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS11 INS42 INS11 INS42 INS42 INS40 INS42 INS32 INS42 INS42 INS11 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS74 INS40 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS42 INS74 INS40 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS42 INS74 INS40 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS42 INS74 INS40 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS42 INS74 INS40 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS42 INS74 INS40 INS42 INS42 INS32 INS42 INS42 INS9 INS43 INS32 INS43 INS32 INS32 INS42 INS11 INS43 INS32 INS42 INS32 INS43 INS43 INS43 INS40 INS42 INS43 INS43 INS43 INS40 INS42 INS43 INS43 INS43 INS40 INS42 INS43 INS43 INS43 INS40 INS42 INS43 INS43 INS43 INS40 INS42 INS43 INS43 INS43 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS11 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS11 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS9 INS43 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42