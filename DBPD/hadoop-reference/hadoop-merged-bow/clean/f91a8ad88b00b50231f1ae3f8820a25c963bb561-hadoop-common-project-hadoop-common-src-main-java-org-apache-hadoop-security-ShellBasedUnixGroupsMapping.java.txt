HADOOP-17079. Optimize UGI#getGroups by adding UGI#getGroupsSet. (#2085)


-import java.util.LinkedList;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.LinkedHashSet;
+import java.util.Set;
-  private static final List<String> EMPTY_GROUPS = new LinkedList<>();
+  private static final Set<String> EMPTY_GROUPS_SET = Collections.emptySet();
-    return getUnixGroups(userName);
+    return new ArrayList(getUnixGroups(userName));
+  @Override
+  public Set<String> getGroupsSet(String userName) throws IOException {
+    return getUnixGroups(userName);
+  }
+
-  private List<String> getUnixGroups(String user) throws IOException {
+  private Set<String> getUnixGroups(String user) throws IOException {
-    List<String> groups;
+    Set<String> groups;
-        return EMPTY_GROUPS;
+        return EMPTY_GROUPS_SET;
-          return EMPTY_GROUPS;
+          return EMPTY_GROUPS_SET;
-        return EMPTY_GROUPS;
+        return EMPTY_GROUPS_SET;
-
-    // remove duplicated primary group
-    if (!Shell.WINDOWS) {
-      for (int i = 1; i < groups.size(); i++) {
-        if (groups.get(i).equals(groups.get(0))) {
-          groups.remove(i);
-          break;
-        }
-      }
-    }
-
-  private List<String> parsePartialGroupNames(String groupNames,
+  private Set<String> parsePartialGroupNames(String groupNames,
-    List<String> groups = new LinkedList<String>();
+    Set<String> groups = new LinkedHashSet<>();
-   * @return a list of resolved group names
+   * @return a set of resolved group names
-  private List<String> resolvePartialGroupNames(String userName,
+  private Set<String> resolvePartialGroupNames(String userName,
-   * Split group names into a linked list.
+   * Split group names into a set.
-   * @return a linked list of group names
+   * @return a set of group names
-  protected List<String> resolveFullGroupNames(String groupNames) {
+  protected Set<String> resolveFullGroupNames(String groupNames) {
-    List<String> groups = new LinkedList<String>();
+    Set<String> groups = new LinkedHashSet<>();

INS26 INS26 INS26 INS40 INS40 UPD40 INS40 INS23 INS31 MOV83 MOV83 MOV83 UPD74 MOV74 INS59 INS8 INS78 INS83 INS74 INS42 INS44 INS43 MOV8 UPD74 UPD74 UPD74 UPD74 UPD43 UPD42 MOV42 INS32 INS41 INS42 UPD43 MOV43 INS43 INS43 INS42 INS42 UPD43 UPD43 UPD43 UPD43 UPD42 INS42 INS42 INS14 UPD42 INS42 INS42 UPD42 UPD74 UPD42 UPD74 MOV74 UPD66 UPD42 UPD66 UPD66 UPD42 UPD74 MOV74 INS43 INS32 UPD43 UPD43 UPD43 INS42 INS42 INS42 UPD42 UPD42 INS74 UPD42 INS74 INS43 INS43 INS42 INS42 UPD42 UPD42 UPD42 DEL74 DEL14 DEL59 DEL23 DEL40 DEL38 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL34 DEL32 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL10 DEL8 DEL25 DEL8 DEL24 DEL8 DEL25 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL43 DEL42 DEL43 DEL74