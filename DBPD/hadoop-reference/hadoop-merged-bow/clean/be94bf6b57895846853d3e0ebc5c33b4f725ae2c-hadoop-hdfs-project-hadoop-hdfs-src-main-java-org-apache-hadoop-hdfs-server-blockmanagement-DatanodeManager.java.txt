HDFS-3990.  NN's health report has severe performance problems (daryn)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1407333 13f79535-47bb-0310-9956-ffa450edef68

-    final InetAddress iaddr;
-
-    try {
-      iaddr = InetAddress.getByName(node.getIpAddr());
-    } catch (UnknownHostException e) {
-      LOG.warn("Unknown IP: " + node.getIpAddr(), e);
-      return isExcludeList;
-    }
-
-    return // compare ipaddress(:port)
-    (hostsList.contains(iaddr.getHostAddress().toString()))
-        || (hostsList.contains(iaddr.getHostAddress().toString() + ":"
-            + node.getXferPort()))
-        // compare hostname(:port)
-        || (hostsList.contains(iaddr.getHostName()))
-        || (hostsList.contains(iaddr.getHostName() + ":" + node.getXferPort()))
-        || ((node instanceof DatanodeInfo) && hostsList
-            .contains(((DatanodeInfo) node).getHostName()));
+    for (String name : getNodeNamesForHostFiltering(node)) {
+      if (hostsList.contains(name)) {
+        return true;
+      }
+    }
+    return false;
-    String dnAddress = Server.getRemoteAddress();
-    if (dnAddress == null) {
-      // Mostly called inside an RPC.
-      // But if not, use address passed by the data-node.
-      dnAddress = nodeReg.getIpAddr();
+    InetAddress dnAddress = Server.getRemoteIp();
+    if (dnAddress != null) {
+      // Mostly called inside an RPC, update ip and peer hostname
+      String hostname = dnAddress.getHostName();
+      String ip = dnAddress.getHostAddress();
+      if (hostname.equals(ip)) {
+        LOG.warn("Unresolved datanode registration from " + ip);
+        throw new DisallowedDatanodeException(nodeReg);
+      }
+      // update node registration with the ip and hostname from rpc request
+      nodeReg.setIpAddr(ip);
+      nodeReg.setPeerHostName(hostname);
-    // Update the IP to the address of the RPC request that is
-    // registering this datanode.
-    nodeReg.setIpAddr(dnAddress);
-        // Remove any nodes we know about from the map
-        try {
-          InetAddress inet = InetAddress.getByName(dn.getIpAddr());
-          // compare hostname(:port)
-          mustList.remove(inet.getHostName());
-          mustList.remove(inet.getHostName()+":"+dn.getXferPort());
-          // compare ipaddress(:port)
-          mustList.remove(inet.getHostAddress().toString());
-          mustList.remove(inet.getHostAddress().toString()+ ":" +dn.getXferPort());
-        } catch (UnknownHostException e) {
-          mustList.remove(dn.getName());
-          mustList.remove(dn.getIpAddr());
-          LOG.warn(e);
+        for (String name : getNodeNamesForHostFiltering(dn)) {
+          mustList.remove(name);
+  private static List<String> getNodeNamesForHostFiltering(DatanodeID node) {
+    String ip = node.getIpAddr();
+    String regHostName = node.getHostName();
+    int xferPort = node.getXferPort();
+    
+    List<String> names = new ArrayList<String>(); 
+    names.add(ip);
+    names.add(ip + ":" + xferPort);
+    names.add(regHostName);
+    names.add(regHostName + ":" + xferPort);
+
+    String peerHostName = node.getPeerHostName();
+    if (peerHostName != null) {
+      names.add(peerHostName);
+      names.add(peerHostName + ":" + xferPort);
+    }
+    return names;
+  }
+  

INS31 INS31 MOV29 MOV83 MOV83 MOV39 MOV42 MOV44 MOV44 MOV44 INS8 INS83 INS83 INS74 INS42 INS44 INS8 MOV25 INS70 INS41 INS25 INS43 INS43 UPD43 MOV43 UPD42 MOV42 INS60 INS60 INS60 INS60 INS21 INS21 INS21 INS21 INS60 INS25 INS41 INS44 INS32 INS8 INS9 MOV43 UPD27 MOV27 INS8 INS42 INS42 UPD42 INS43 INS59 INS43 INS59 INS39 INS59 INS74 INS59 INS32 INS32 INS32 INS32 INS43 INS59 INS27 INS8 INS42 INS43 INS42 INS42 INS42 INS25 INS42 INS60 INS60 INS25 INS21 MOV21 INS42 INS42 MOV32 INS42 INS42 INS32 INS42 MOV32 INS43 INS43 INS42 INS14 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV27 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV27 INS42 INS42 INS32 INS42 INS33 INS21 INS21 UPD42 MOV42 INS32 INS8 UPD42 INS43 INS59 MOV43 INS59 INS32 INS8 INS32 UPD42 MOV42 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 UPD42 MOV42 UPD42 MOV42 INS41 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS21 INS53 MOV42 UPD42 MOV42 INS42 UPD42 UPD42 INS70 INS43 INS43 UPD42 MOV42 INS42 INS42 INS42 INS42 INS27 INS9 INS42 INS42 INS42 INS42 INS32 INS14 INS44 INS32 INS8 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS27 INS43 INS42 INS43 INS42 UPD42 MOV42 MOV42 MOV21 INS45 INS42 INS42 UPD42 MOV42 UPD42 MOV42 DEL83 DEL43 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL8 DEL44 DEL42 DEL42 DEL45 DEL27 DEL32 DEL21 DEL42 DEL41 DEL8 DEL12 DEL54 DEL42 DEL42 DEL32 DEL32 DEL32 DEL36 DEL32 DEL36 DEL42 DEL32 DEL32 DEL36 DEL32 DEL36 DEL42 DEL42 DEL43 DEL62 DEL36 DEL42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL32 DEL32 DEL27 DEL36 DEL27 DEL41 DEL8 DEL31 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL45 DEL42 DEL32 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL12 DEL54 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32