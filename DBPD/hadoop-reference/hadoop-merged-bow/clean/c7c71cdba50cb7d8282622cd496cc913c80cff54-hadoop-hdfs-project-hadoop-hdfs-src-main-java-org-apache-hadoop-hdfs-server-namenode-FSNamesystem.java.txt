HDFS-7587. Edit log corruption can happen if append fails with a quota violation. Contributed by Jing Zhao.

+    final QuotaCounts delta = verifyQuotaForUCBlock(file, iip);
+
-      if (ret != null) {
-        // update the quota: use the preferred block size for UC block
-        final long diff = file.getPreferredBlockSize() - ret.getBlockSize();
-        dir.updateSpaceConsumed(iip, 0, diff, file.getBlockReplication());
+      if (ret != null && delta != null) {
+        Preconditions.checkState(delta.getStorageSpace() >= 0,
+            "appending to a block with size larger than the preferred block size");
+        dir.writeLock();
+        try {
+          dir.updateCountNoQuotaCheck(iip, iip.length() - 1, delta);
+        } finally {
+          dir.writeUnlock();
+        }
+   * Verify quota when using the preferred block size for UC block. This is
+   * usually used by append and truncate
+   * @throws QuotaExceededException when violating the storage quota
+   * @return expected quota usage update. null means no change or no need to
+   *         update quota usage later
+   */
+  private QuotaCounts verifyQuotaForUCBlock(INodeFile file, INodesInPath iip)
+      throws QuotaExceededException {
+    if (!isImageLoaded() || dir.shouldSkipQuotaChecks()) {
+      // Do not check quota if editlog is still being processed
+      return null;
+    }
+    if (file.getLastBlock() != null) {
+      final QuotaCounts delta = computeQuotaDeltaForUCBlock(file);
+      dir.readLock();
+      try {
+        FSDirectory.verifyQuota(iip, iip.length() - 1, delta, null);
+        return delta;
+      } finally {
+        dir.readUnlock();
+      }
+    }
+    return null;
+  }
+
+  /** Compute quota change for converting a complete block to a UC block */
+  private QuotaCounts computeQuotaDeltaForUCBlock(INodeFile file) {
+    final QuotaCounts delta = new QuotaCounts.Builder().build();
+    final BlockInfoContiguous lastBlock = file.getLastBlock();
+    if (lastBlock != null) {
+      final long diff = file.getPreferredBlockSize() - lastBlock.getNumBytes();
+      final short repl = file.getBlockReplication();
+      delta.addStorageSpace(diff * repl);
+      final BlockStoragePolicy policy = dir.getBlockStoragePolicySuite()
+          .getPolicy(file.getStoragePolicyID());
+      List<StorageType> types = policy.chooseStorageTypes(repl);
+      for (StorageType t : types) {
+        if (t.supportTypeQuota()) {
+          delta.addTypeSpace(t, diff);
+        }
+      }
+    }
+    return delta;
+  }
+
+  /**
-      //    which started appending exactly at a block boundary.
+      //    which started appending exactly at or exceeding the block boundary.
-          lastBlockInFile.getNumBytes() == pendingFile.getPreferredBlockSize() &&
+          lastBlockInFile.getNumBytes() >= pendingFile.getPreferredBlockSize() &&

INS31 INS31 INS29 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS29 INS83 INS43 INS42 INS44 INS8 INS60 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS42 INS25 INS25 INS41 INS65 INS42 INS43 INS42 INS60 INS60 INS25 INS41 INS83 INS43 INS59 INS66 INS66 INS42 INS66 INS66 INS66 INS42 INS42 INS27 INS8 INS27 INS8 INS33 INS66 INS42 INS83 INS43 INS59 INS83 INS43 INS59 INS27 INS8 INS42 INS42 INS42 INS32 INS38 INS32 INS41 INS32 INS33 INS60 INS21 INS54 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 MOV60 INS60 INS21 INS60 INS60 INS70 INS42 INS42 INS42 INS27 INS8 INS32 INS42 INS42 INS33 INS42 INS42 INS83 INS43 INS59 INS32 INS8 INS8 INS14 INS42 INS42 INS42 INS83 INS39 INS59 INS32 INS83 INS43 INS59 INS74 INS59 INS44 INS42 INS8 MOV27 INS27 INS21 INS21 INS54 INS42 INS42 INS42 INS32 INS42 INS42 INS21 INS41 INS21 INS43 INS42 MOV32 INS42 INS42 INS27 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS43 INS42 INS25 INS42 INS33 INS32 INS32 INS8 INS8 INS42 INS42 INS32 INS42 INS32 INS40 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS8 UPD27 INS42 INS42 INS27 INS45 INS42 INS42 MOV21 INS21 INS42 INS42 INS42 INS27 INS42 INS33 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS32 INS34 INS32 INS32 INS34 INS32 INS42 INS42 UPD42 INS27 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS34 INS42 INS42 DEL34 DEL8