HDDS-182:CleanUp Reimplemented classes. Contributed by Hansiha Koneru

+import com.google.common.annotations.VisibleForTesting;
+import org.apache.hadoop.hdds.scm.ScmConfigKeys;
+import java.io.IOException;
+import static org.apache.hadoop.ozone.OzoneConsts.CHUNKS_PATH;
+import static org.apache.hadoop.ozone.OzoneConsts.CONTAINER_DB_TYPE;
+import static org.apache.hadoop.ozone.OzoneConsts.CONTAINER_ID;
+import static org.apache.hadoop.ozone.OzoneConsts.CONTAINER_TYPE;
+import static org.apache.hadoop.ozone.OzoneConsts.LAYOUTVERSION;
+import static org.apache.hadoop.ozone.OzoneConsts.MAX_SIZE_GB;
+import static org.apache.hadoop.ozone.OzoneConsts.METADATA;
+import static org.apache.hadoop.ozone.OzoneConsts.METADATA_PATH;
+import static org.apache.hadoop.ozone.OzoneConsts.STATE;
+
-  public static final Tag YAML_TAG = new Tag("KeyValueContainerData");
+  public static final Tag KEYVALUE_YAML_TAG = new Tag("KeyValueContainerData");
-  private static final List<String> YAML_FIELDS = Lists.newArrayList(
-      "containerType", "containerId", "layOutVersion", "state", "metadata",
-      "metadataPath", "chunksPath", "containerDBType", "maxSizeGB");
+  private static final List<String> YAML_FIELDS =
+      Lists.newArrayList(
+          CONTAINER_TYPE,
+          CONTAINER_ID,
+          LAYOUTVERSION,
+          STATE,
+          METADATA,
+          METADATA_PATH,
+          CHUNKS_PATH,
+          CONTAINER_DB_TYPE,
+          MAX_SIZE_GB);
+
-   *
-   * @return - path
+  @Override
+   * Returns container chunks path.
+   */
+  @Override
+  public String getDataPath() {
+    return chunksPath;
+  }
+
+  /**
-    builder.setContainerID(this.getContainerId());
+    builder.setContainerID(this.getContainerID());
+
+  /**
+   * Constructs a KeyValueContainerData object from ProtoBuf classes.
+   *
+   * @param protoData - ProtoBuf Message
+   * @throws IOException
+   */
+  @VisibleForTesting
+  public static KeyValueContainerData getFromProtoBuf(
+      ContainerProtos.ContainerData protoData) throws IOException {
+    // TODO: Add containerMaxSize to ContainerProtos.ContainerData
+    KeyValueContainerData data = new KeyValueContainerData(
+        protoData.getContainerID(),
+        ScmConfigKeys.OZONE_SCM_CONTAINER_SIZE_DEFAULT);
+    for (int x = 0; x < protoData.getMetadataCount(); x++) {
+      data.addMetadata(protoData.getMetadata(x).getKey(),
+          protoData.getMetadata(x).getValue());
+    }
+
+    if (protoData.hasContainerPath()) {
+      data.setContainerPath(protoData.getContainerPath());
+    }
+
+    if (protoData.hasState()) {
+      data.setState(protoData.getState());
+    }
+
+    if (protoData.hasBytesUsed()) {
+      data.setBytesUsed(protoData.getBytesUsed());
+    }
+
+    if(protoData.hasContainerDBType()) {
+      data.setContainerDBType(protoData.getContainerDBType());
+    }
+
+    return data;
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS78 INS29 INS78 INS83 INS43 INS42 INS8 INS29 INS78 INS83 INS83 INS43 INS42 INS44 INS43 INS8 UPD42 INS42 INS65 INS42 INS42 INS41 INS65 INS65 INS65 INS42 INS42 INS43 INS42 INS42 INS60 INS24 INS25 INS25 INS25 INS25 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS40 INS43 INS59 INS58 INS27 INS37 INS8 INS32 INS8 INS32 INS8 INS32 INS8 INS32 INS8 INS42 INS42 INS42 INS14 INS39 INS59 INS42 INS32 INS42 INS21 INS42 INS42 INS21 INS42 INS42 INS21 INS42 INS42 INS21 INS42 INS42 INS21 UPD42 INS43 INS32 INS40 INS42 INS34 INS42 INS42 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL45 DEL66 DEL65