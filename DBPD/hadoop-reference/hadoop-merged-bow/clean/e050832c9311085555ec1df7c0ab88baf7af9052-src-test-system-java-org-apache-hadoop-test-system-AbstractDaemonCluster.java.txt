HADOOP-6944. [Herriot] Implement a functionality for getting proxy users
definitions like groups and hosts. Contributed by Vinay Thota.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1006356 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Iterator;
+import java.util.Arrays;
+import java.net.URI;
-  private static final  String CONF_HADOOP_MULTI_USER_LIST =
-      "test.system.hdrc.multi-user.list.path";
-   * Get the multi users list.
-   * @return ArrayList - users list as a array list.
-   * @throws IOException - if an I/O error occurs.
+   * Get the proxy user definitions from cluster from configuration.
+   * @return ProxyUserDefinitions - proxy users data like groups and hosts.
+   * @throws Exception - if no proxy users found in config.
-  public ArrayList<String> getHadoopMultiUsersList() throws
-     IOException {
-    String hadoopUserListPath = conf.get(CONF_HADOOP_MULTI_USER_LIST);
-    if (hadoopUserListPath == null || hadoopUserListPath.isEmpty()) {
-      LOG.error("Proxy user list path has not been passed for "
-          + CONF_HADOOP_MULTI_USER_LIST);
-      throw new IllegalArgumentException(
-          "Proxy user list hasn't been provided.");
+  public ProxyUserDefinitions getHadoopProxyUsers() throws
+     Exception {
+    Iterator itr = conf.iterator();
+    ArrayList<String> proxyUsers = new ArrayList<String>();
+    while (itr.hasNext()) {
+      if (itr.next().toString().indexOf("hadoop.proxyuser") >= 0 &&
+          itr.next().toString().indexOf("groups=") >= 0) {
+         proxyUsers.add(itr.next().toString().split("\\.")[2]);
+      }
-    File fileObj = new File(hadoopUserListPath);
-    DataInputStream disObj = new DataInputStream(new FileInputStream(fileObj));
-    ArrayList<String> usersList = new ArrayList<String>();
-    String strLine = null;
-    while((strLine = disObj.readLine()) != null){
-      usersList.add(strLine.substring(0,strLine.indexOf(',')));
+    if (proxyUsers.size() == 0) {
+       LOG.error("No proxy users found in the configuration.");
+       throw new Exception("No proxy users found in the configuration.");
-    return usersList;
+
+    ProxyUserDefinitions pud = new ProxyUserDefinitions() {
+      @Override
+      public boolean writeToFile(URI filePath) throws IOException {
+        throw new UnsupportedOperationException("No such method exists.");
+      };
+    };
+
+    for (String userName : proxyUsers) {
+       List<String> groups = Arrays.asList(conf.get("hadoop.proxyuser." +
+           userName + ".groups").split("//,"));
+       List<String> hosts = Arrays.asList(conf.get("hadoop.proxyuser." +
+           userName + ".hosts").split("//,"));
+       ProxyUserDefinitions.GroupsAndHost definitions =
+           pud.new GroupsAndHost();
+       definitions.setGroups(groups);
+       definitions.setHosts(hosts);
+       pud.addProxyUser(userName, definitions);
+    }
+    return pud;

INS26 INS26 INS26 INS40 INS40 INS40 INS43 INS42 INS43 MOV60 UPD42 MOV42 UPD42 MOV42 INS61 INS25 INS70 UPD66 UPD66 UPD42 UPD66 INS43 INS32 INS8 INS27 MOV8 UPD43 INS44 INS42 INS8 UPD42 INS42 UPD42 UPD42 INS42 INS42 INS25 INS32 INS34 UPD42 UPD42 MOV43 INS42 MOV60 MOV60 INS60 INS21 INS21 INS21 UPD42 UPD27 MOV27 INS8 INS42 INS42 UPD43 INS1 INS74 INS74 INS43 INS59 INS32 INS32 INS32 UPD27 INS27 INS21 INS45 UPD43 UPD45 UPD42 INS31 INS43 MOV43 UPD42 INS32 INS43 MOV43 INS42 INS32 INS40 INS42 INS14 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 INS34 MOV32 INS34 INS32 UPD42 INS78 INS83 INS39 INS42 INS44 MOV43 INS8 UPD42 MOV42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS43 INS32 INS42 INS45 INS32 UPD42 INS45 INS42 INS42 INS2 INS42 INS43 INS42 INS53 INS32 INS42 INS45 INS32 INS42 INS45 INS42 INS32 INS42 INS32 INS42 INS32 INS34 INS42 INS14 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 UPD42 MOV42 INS42 INS32 INS42 INS45 INS43 INS45 INS45 INS42 INS45 INS45 INS42 INS45 INS32 INS42 INS42 INS42 INS42 DEL83 DEL83 DEL83 DEL42 DEL45 DEL59 DEL23 DEL43 DEL43 DEL74 DEL42 DEL42 DEL25 DEL42 DEL33 DEL45 DEL42 DEL27 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL14 DEL14 DEL42 DEL33 DEL42 DEL32 DEL7 DEL36 DEL33 DEL27 DEL34 DEL13 DEL32 DEL32 DEL32 DEL21 DEL8 DEL61