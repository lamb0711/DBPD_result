HDDS-539. Ozone datanode command ignores the invalid options. Contributed by Vinicius Higa Murakami.

-/*
+/**
- *  with the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
+ * with the License.  You may obtain a copy of the License at
+ * <p>
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * <p>
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
-import org.apache.hadoop.hdds.scm.ScmConfigKeys;
+import org.apache.hadoop.hdds.cli.GenericCli;
+import org.apache.hadoop.hdds.cli.HddsVersionProvider;
-import org.apache.hadoop.hdfs.DFSUtil;
+import org.apache.hadoop.hdds.scm.ScmConfigKeys;
-import org.apache.hadoop.ozone.container.common.statemachine
-    .DatanodeStateMachine;
-import org.apache.hadoop.util.GenericOptionsParser;
+import org.apache.hadoop.ozone.container.common.statemachine.DatanodeStateMachine;
+import picocli.CommandLine.Command;
-public class HddsDatanodeService implements ServicePlugin {
+
+@Command(name = "ozone datanode",
+    hidden = true, description = "Start the datanode for ozone",
+    versionProvider = HddsVersionProvider.class,
+    mixinStandardHelpOptions = true)
+public class HddsDatanodeService extends GenericCli implements ServicePlugin {
-
+  @VisibleForTesting
+  public static HddsDatanodeService createHddsDatanodeService(
+      String[] args, Configuration conf) {
+    return createHddsDatanodeService(args, conf, true);
+  }
+
+  /**
+   * Create an Datanode instance based on the supplied command-line arguments.
+   * <p>
+   * This method is intended for unit tests only. It suppresses the
+   * startup/shutdown message and skips registering Unix signal handlers.
+   *
+   * @param args        command line arguments.
+   * @param conf        HDDS configuration
+   * @param printBanner if true, then log a verbose startup message.
+   * @return Datanode instance
+   */
+  private static HddsDatanodeService createHddsDatanodeService(
+      String[] args, Configuration conf, boolean printBanner) {
+    if (args.length == 0 && printBanner) {
+      StringUtils
+          .startupShutdownMessage(HddsDatanodeService.class, args, LOG);
+      return new HddsDatanodeService(conf);
+    } else {
+      new HddsDatanodeService().run(args);
+      return null;
+    }
+  }
+
+  public static void main(String[] args) {
+    try {
+      Configuration conf = new OzoneConfiguration();
+      HddsDatanodeService hddsDatanodeService =
+          createHddsDatanodeService(args, conf, true);
+      if (hddsDatanodeService != null) {
+        hddsDatanodeService.start(null);
+        hddsDatanodeService.join();
+      }
+    } catch (Throwable e) {
+      LOG.error("Exception in HddsDatanodeService.", e);
+      terminate(1, e);
+    }
+  }
+
+    DefaultMetricsSystem.initialize("HddsDatanode");
-          "Specified list of plugins: {}",
+              "Specified list of plugins: {}",
+
-   *
-  public void close() throws IOException {
+  public void close() {
-
-  public static HddsDatanodeService createHddsDatanodeService(
-      Configuration conf) {
-    return new HddsDatanodeService(conf);
-  }
-
-  public static void main(String[] args) {
-    try {
-      if (DFSUtil.parseHelpArgument(
-          args, "Starts HDDS Datanode", System.out, false)) {
-        System.exit(0);
-      }
-      Configuration conf = new OzoneConfiguration();
-      GenericOptionsParser hParser = new GenericOptionsParser(conf, args);
-      if (!hParser.isParseSuccessful()) {
-        GenericOptionsParser.printGenericCommandUsage(System.err);
-        System.exit(1);
-      }
-      StringUtils.startupShutdownMessage(HddsDatanodeService.class, args, LOG);
-      DefaultMetricsSystem.initialize("HddsDatanode");
-      HddsDatanodeService hddsDatanodeService =
-          createHddsDatanodeService(conf);
-      hddsDatanodeService.start(null);
-      hddsDatanodeService.join();
-    } catch (Throwable e) {
-      LOG.error("Exception in HddsDatanodeService.", e);
-      terminate(1, e);
-    }
-  }

MOV26 MOV26 MOV26 INS26 MOV31 MOV31 INS29 UPD40 UPD40 INS40 INS77 INS43 INS31 INS65 INS42 INS80 INS80 INS80 INS80 INS80 INS42 INS78 INS43 INS44 INS44 INS8 INS29 INS83 INS83 MOV43 INS42 INS44 MOV44 INS44 INS8 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS45 INS42 INS9 INS42 INS45 INS42 INS57 INS42 INS9 INS42 INS42 INS5 INS42 INS43 INS42 INS41 INS65 INS65 INS65 INS65 INS65 INS5 INS42 INS39 INS42 INS25 MOV21 INS43 INS43 INS85 INS42 INS32 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS43 INS85 INS27 MOV8 INS8 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS27 INS42 MOV21 INS21 INS41 INS40 INS34 INS32 INS33 MOV43 INS27 INS14 INS42 INS42 UPD42 INS32 INS42 INS33 MOV21 MOV21 INS43 INS42 INS42 INS42 INS9 INS42 DEL42 DEL42 DEL42 DEL45 DEL40 DEL9 DEL32 DEL42 DEL42 DEL34 DEL32 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL14 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43