HDFS-4407. Change INodeDirectoryWithSnapshot.Diff.combinePostDiff(..) to merge-sort like and keep the postDiff parameter unmodified.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1433918 13f79535-47bb-0310-9956-ffa450edef68

-      while (postDiff.created != null && !postDiff.created.isEmpty()) {
-        final INode c = postDiff.created.remove(postDiff.created.size() - 1);
-        final int deletedIndex = search(postDiff.deleted, c);
-        if (deletedIndex < 0) {
-          // case 1
+      final List<INode> postCreated = postDiff.created != null?
+          postDiff.created: Collections.<INode>emptyList();
+      final List<INode> postDeleted = postDiff.deleted != null?
+          postDiff.deleted: Collections.<INode>emptyList();
+      final Iterator<INode> createdIterator = postCreated.iterator();
+      final Iterator<INode> deletedIterator = postDeleted.iterator();
+
+      INode c = createdIterator.hasNext()? createdIterator.next(): null;
+      INode d = deletedIterator.hasNext()? deletedIterator.next(): null;
+
+      for(; c != null || d != null; ) {
+        final int cmp = c == null? 1
+            : d == null? -1
+            : c.compareTo(d.getLocalNameBytes());
+        if (cmp < 0) {
+          // case 1: only in c-list
+          c = createdIterator.hasNext()? createdIterator.next(): null;
+        } else if (cmp > 0) {
+          // case 2: only in d-list
+          Triple<Integer, INode, Integer> triple = delete(d);
+          if (deletedINodeProcesser != null) {
+            deletedINodeProcesser.process(triple.middle);
+          }
+          d = deletedIterator.hasNext()? deletedIterator.next(): null;
-          final INode d = postDiff.deleted.remove(deletedIndex);
-          // case 3
+          // case 3: in both c-list and d-list 
-        }
-      }
-      
-      while (postDiff.deleted != null && !postDiff.deleted.isEmpty()) {
-        // case 2
-        INode node = postDiff.deleted.remove(postDiff.deleted.size() - 1);
-        Triple<Integer, INode, Integer> triple = delete(node);
-        if (deletedINodeProcesser != null) {
-          deletedINodeProcesser.process(triple.middle);
+          c = createdIterator.hasNext()? createdIterator.next(): null;
+          d = deletedIterator.hasNext()? deletedIterator.next(): null;

INS8 INS60 INS60 INS60 INS60 INS60 INS60 INS24 INS83 INS74 INS59 INS83 INS74 INS59 INS83 INS74 INS59 INS83 INS74 INS59 INS43 INS59 MOV43 INS59 INS27 MOV8 INS43 INS43 INS42 INS16 INS43 INS43 INS42 INS16 INS43 MOV43 INS42 INS32 INS43 INS43 INS42 INS32 INS42 INS42 INS16 INS42 INS16 INS27 INS27 INS60 INS25 INS42 INS42 MOV27 INS40 INS32 INS42 INS42 MOV27 INS40 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS33 INS32 INS32 INS33 INS42 INS33 INS42 INS33 MOV83 INS39 INS59 MOV27 MOV8 INS25 INS42 MOV43 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS16 UPD42 INS21 INS27 MOV8 MOV8 INS42 INS27 INS34 INS16 INS7 INS42 INS34 INS21 INS21 INS21 INS42 INS33 INS27 INS38 INS32 INS42 INS16 INS7 INS7 INS7 INS42 INS33 INS34 INS42 INS42 INS32 INS32 INS32 INS33 INS42 INS16 INS42 INS16 INS42 INS16 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 UPD42 INS32 INS32 INS33 INS32 INS32 INS33 INS32 INS32 INS33 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 DEL42 DEL40 DEL40 DEL32 DEL34 DEL27 DEL32 DEL59 DEL60 DEL83 DEL42 DEL40 DEL32 DEL59 DEL60 DEL40 DEL42 DEL32 DEL38 DEL27 DEL40 DEL42 DEL40 DEL42 DEL32 DEL34 DEL27 DEL32 DEL59 DEL60 DEL83 DEL39 DEL42 DEL40 DEL32 DEL59 DEL60 DEL25 DEL8 DEL61 DEL40 DEL42 DEL32 DEL38 DEL27 DEL61