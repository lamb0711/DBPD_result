YARN-7095. Federation: routing getNode/getNodes/getMetrics REST invocations transparently to multiple RMs. (Giovanni Matteo Fumarola via Subru).

+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.ClusterMetricsInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.NodeInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.NodesInfo;
+  @Override
+  public NodeInfo getNode(String nodeId) {
+    if (!isRunning) {
+      throw new RuntimeException("RM is stopped");
+    }
+    NodeInfo node = new NodeInfo();
+    node.setId(nodeId);
+    node.setLastHealthUpdate(Integer.valueOf(getSubClusterId().getId()));
+    return node;
+  }
+
+  @Override
+  public NodesInfo getNodes(String states) {
+    if (!isRunning) {
+      throw new RuntimeException("RM is stopped");
+    }
+    NodeInfo node = new NodeInfo();
+    node.setId("Node " + Integer.valueOf(getSubClusterId().getId()));
+    node.setLastHealthUpdate(Integer.valueOf(getSubClusterId().getId()));
+    NodesInfo nodes = new NodesInfo();
+    nodes.add(node);
+    return nodes;
+  }
+
+  @Override
+  public ClusterMetricsInfo getClusterMetricsInfo() {
+    if (!isRunning) {
+      throw new RuntimeException("RM is stopped");
+    }
+    ClusterMetricsInfo metrics = new ClusterMetricsInfo();
+    metrics.setAppsSubmitted(Integer.valueOf(getSubClusterId().getId()));
+    metrics.setAppsCompleted(Integer.valueOf(getSubClusterId().getId()));
+    metrics.setAppsPending(Integer.valueOf(getSubClusterId().getId()));
+    metrics.setAppsRunning(Integer.valueOf(getSubClusterId().getId()));
+    metrics.setAppsFailed(Integer.valueOf(getSubClusterId().getId()));
+    metrics.setAppsKilled(Integer.valueOf(getSubClusterId().getId()));
+
+    return metrics;
+  }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS31 INS78 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS8 INS42 INS42 INS43 INS42 INS25 INS60 INS21 INS21 INS41 INS42 INS42 INS43 INS42 INS25 INS60 INS21 INS21 INS60 INS21 INS41 INS42 INS42 INS25 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS41 INS42 INS38 INS8 INS43 INS59 INS32 INS32 INS42 INS42 INS38 INS8 INS43 INS59 INS32 INS32 INS43 INS59 INS32 INS42 INS38 INS8 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS53 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS53 INS42 INS42 INS14 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS53 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS14 INS43 INS42 INS42 INS32 INS14 INS43 INS45 INS32 INS42 INS42 INS32 INS43 INS14 INS43 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS45 INS42 INS32 INS42 INS43 INS45 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS43 INS45 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42