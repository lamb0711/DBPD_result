YARN-6363. Extending SLS: Synthetic Load Generator. (Carlo Curino via wangda)

+import java.lang.reflect.UndeclaredThrowableException;
+import org.apache.hadoop.yarn.api.protocolrecords.ReservationSubmissionRequest;
+import org.apache.hadoop.yarn.api.records.ReservationId;
+  private long baselineTimeMS;
+  private ReservationSubmissionRequest reservationRequest;
+
-  public void init(int id, int heartbeatInterval, 
-      List<ContainerSimulator> containerList, ResourceManager rm, SLSRunner se,
-      long traceStartTime, long traceFinishTime, String user, String queue, 
-      boolean isTracked, String oldAppId) {
-    super.init(traceStartTime, traceStartTime + 1000000L * heartbeatInterval,
-            heartbeatInterval);
-    this.user = user;
-    this.rm = rm;
-    this.se = se;
-    this.user = user;
-    this.queue = queue;
-    this.oldAppId = oldAppId;
-    this.isTracked = isTracked;
-    this.traceStartTimeMS = traceStartTime;
-    this.traceFinishTimeMS = traceFinishTime;
+  @SuppressWarnings("checkstyle:parameternumber")
+  public void init(int id, int heartbeatInterval,
+      List<ContainerSimulator> containerList, ResourceManager resourceManager,
+      SLSRunner slsRunnner, long startTime, long finishTime, String simUser,
+      String simQueue, boolean tracked, String oldApp,
+      ReservationSubmissionRequest rr, long baseTimeMS) {
+    super.init(startTime, startTime + 1000000L * heartbeatInterval,
+        heartbeatInterval);
+    this.user = simUser;
+    this.rm = resourceManager;
+    this.se = slsRunnner;
+    this.queue = simQueue;
+    this.oldAppId = oldApp;
+    this.isTracked = tracked;
+    this.baselineTimeMS = baseTimeMS;
+    this.traceStartTimeMS = startTime;
+    this.traceFinishTimeMS = finishTime;
+    this.reservationRequest = rr;
-    simulateStartTimeMS = System.currentTimeMillis() - 
-                          SLSRunner.getRunner().getStartTimeMS();
+    simulateStartTimeMS = System.currentTimeMillis() - baselineTimeMS;
+
+    ReservationId reservationId = null;
+
+    // submit a reservation if one is required, exceptions naturally happen
+    // when the reservation does not fit, catch, log, and move on running job
+    // without reservation.
+    try {
+      reservationId = submitReservationWhenSpecified();
+    } catch (UndeclaredThrowableException y) {
+      LOG.warn("Unable to place reservation: " + y.getMessage());
+    }
-    submitApp();
+    submitApp(reservationId);
+  private ReservationId submitReservationWhenSpecified()
+      throws IOException, InterruptedException {
+    if (reservationRequest != null) {
+      UserGroupInformation ugi = UserGroupInformation.createRemoteUser(user);
+      ugi.doAs(new PrivilegedExceptionAction<Object>() {
+        @Override
+        public Object run() throws YarnException, IOException {
+          rm.getClientRMService().submitReservation(reservationRequest);
+          LOG.info("RESERVATION SUCCESSFULLY SUBMITTED "
+              + reservationRequest.getReservationId());
+          return null;
+
+        }
+      });
+      return reservationRequest.getReservationId();
+    } else {
+      return null;
+    }
+  }
+
-    simulateFinishTimeMS = System.currentTimeMillis() -
-        SLSRunner.getRunner().getStartTimeMS();
+    simulateFinishTimeMS = System.currentTimeMillis() - baselineTimeMS;
-        ((SchedulerWrapper)rm.getResourceScheduler()).getSchedulerMetrics();
+            ((SchedulerWrapper)rm.getResourceScheduler()).getSchedulerMetrics();
-          simulateStartTimeMS, simulateFinishTimeMS);
+              simulateStartTimeMS, simulateFinishTimeMS);
-  private void submitApp()
+  private void submitApp(ReservationId reservationId)
+
+    if(reservationId != null) {
+      appSubContext.setReservationID(reservationId);
+    }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 MOV44 MOV44 INS31 INS83 INS39 INS59 INS83 INS43 INS59 INS79 INS44 INS44 MOV21 MOV21 INS83 INS43 INS42 INS43 INS43 INS8 INS44 INS42 INS42 INS42 INS42 INS45 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS43 INS42 INS39 INS42 INS21 INS60 INS54 INS42 INS42 INS42 INS25 INS43 INS42 INS25 INS42 INS7 INS43 INS59 INS8 INS12 INS27 INS8 INS8 INS42 INS27 INS8 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS22 INS42 UPD42 UPD42 UPD42 INS42 INS42 INS33 INS21 INS44 INS8 INS42 INS42 INS33 INS60 INS21 INS41 INS41 INS42 INS33 INS21 UPD42 INS52 INS42 UPD42 INS42 INS7 INS43 INS42 INS21 INS43 INS59 INS32 INS32 INS33 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS74 INS1 INS45 INS32 INS43 INS43 INS31 INS42 INS42 INS42 INS42 INS78 INS83 INS43 INS42 INS43 INS43 INS8 INS42 INS42 INS42 INS42 INS21 INS21 INS41 INS32 INS32 INS33 INS32 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS45 INS32 INS42 INS42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32