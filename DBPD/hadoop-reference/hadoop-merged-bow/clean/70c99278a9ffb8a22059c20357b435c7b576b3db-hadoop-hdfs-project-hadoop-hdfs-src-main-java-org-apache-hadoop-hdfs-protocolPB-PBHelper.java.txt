HDFS-6780. Batch the encryption zones listing API. (wang)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1615189 13f79535-47bb-0310-9956-ffa450edef68

+import static org.apache.hadoop.hdfs.protocol.proto.EncryptionZonesProtos
+    .EncryptionZoneWithIdProto;
-import org.apache.hadoop.hdfs.protocol.EncryptionZone;
+import org.apache.hadoop.hdfs.protocol.EncryptionZoneWithId;
-import org.apache.hadoop.hdfs.protocol.proto.EncryptionZonesProtos.ListEncryptionZonesResponseProto;
-import org.apache.hadoop.hdfs.protocol.proto.EncryptionZonesProtos.EncryptionZoneProto;
-  
-  public static List<EncryptionZone> convert(ListEncryptionZonesResponseProto a) {
-    final List<EncryptionZoneProto> ezs = a.getPathsAndKeysList();
-    return convertEZ(ezs);
-  }
-
-  public static ListEncryptionZonesResponseProto convertListEZResponse(
-    List<EncryptionZone> ezs) {
-    final ListEncryptionZonesResponseProto.Builder builder =
-      ListEncryptionZonesResponseProto.newBuilder();
-    builder.addAllPathsAndKeys(convertEZProto(ezs));
-    return builder.build();
-  }
-
-  public static List<EncryptionZoneProto> convertEZProto(
-      List<EncryptionZone> ezs) {
-    final ArrayList<EncryptionZoneProto> ret =
-      Lists.newArrayListWithCapacity(ezs.size());
-    for (EncryptionZone a : ezs) {
-      final EncryptionZoneProto.Builder builder =
-        EncryptionZoneProto.newBuilder();
-      builder.setPath(a.getPath());
-      builder.setKeyName(a.getKeyName());
-      ret.add(builder.build());
-    }
-    return ret;
-  }
-
-  public static List<EncryptionZone> convertEZ(
-    List<EncryptionZoneProto> ezs) {
-    final ArrayList<EncryptionZone> ret =
-      Lists.newArrayListWithCapacity(ezs.size());
-    for (EncryptionZoneProto a : ezs) {
-      final EncryptionZone ez =
-        new EncryptionZone(a.getPath(), a.getKeyName());
-      ret.add(ez);
-    }
-    return ret;
-  }
+  public static EncryptionZoneWithIdProto convert(EncryptionZoneWithId zone) {
+    return EncryptionZoneWithIdProto.newBuilder()
+        .setId(zone.getId())
+        .setKeyName(zone.getKeyName())
+        .setPath(zone.getPath()).build();
+  }
+
+  public static EncryptionZoneWithId convert(EncryptionZoneWithIdProto proto) {
+    return new EncryptionZoneWithId(proto.getPath(), proto.getKeyName(),
+        proto.getId());
+  }
+

MOV26 MOV26 MOV31 MOV31 UPD40 UPD40 INS43 UPD42 INS8 INS43 UPD42 INS8 UPD42 MOV42 INS43 UPD42 INS41 UPD42 MOV42 INS43 UPD42 INS41 UPD42 MOV42 INS32 UPD42 MOV42 INS14 INS32 MOV42 INS43 MOV32 MOV32 INS32 INS32 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 INS32 MOV42 MOV32 UPD42 MOV42 UPD42 MOV42 INS32 UPD42 MOV42 MOV32 UPD42 UPD42 MOV42 MOV42 UPD42 UPD42 DEL40 DEL26 DEL83 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL83 DEL40 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL43 DEL43 DEL74 DEL42 DEL43 DEL43 DEL74 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL83 DEL40 DEL43 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL21 DEL42 DEL32 DEL21 DEL32 DEL32 DEL21 DEL8 DEL70 DEL42 DEL41 DEL8 DEL42 DEL43 DEL43 DEL74 DEL42 DEL43 DEL43 DEL74 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL83 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL42 DEL32 DEL21 DEL8 DEL70 DEL42 DEL41 DEL8