YARN-7933. [atsv2 read acls] Add TimelineWriter#writeDomain. (Rohith Sharma K S via Haibo Chen)

+import org.apache.hadoop.yarn.api.records.timelineservice.TimelineDomain;
+  /**
+   * @param req    Servlet request.
+   * @param res    Servlet response.
+   * @param domain timeline domain to be put.
+   * @param appId Application Id to which the domain to be put belong to. If
+   *     appId is not there or it cannot be parsed, HTTP 400 will be sent back.
+   * @return a Response with appropriate HTTP status.
+   */
+  @PUT
+  @Path("/domain")
+  @Consumes({ MediaType.APPLICATION_JSON /* , MediaType.APPLICATION_XML */ })
+  public Response putDomain(
+      @Context HttpServletRequest req,
+      @Context HttpServletResponse res,
+      @QueryParam("appid") String appId,
+      TimelineDomain domain) {
+    init(res);
+    UserGroupInformation callerUgi = getUser(req);
+    if (callerUgi == null) {
+      String msg = "The owner of the posted timeline entities is not set";
+      LOG.error(msg);
+      throw new ForbiddenException(msg);
+    }
+
+    try {
+      ApplicationId appID = parseApplicationId(appId);
+      if (appID == null) {
+        return Response.status(Response.Status.BAD_REQUEST).build();
+      }
+      NodeTimelineCollectorManager collectorManager =
+          (NodeTimelineCollectorManager) context.getAttribute(
+              NodeTimelineCollectorManager.COLLECTOR_MANAGER_ATTR_KEY);
+      TimelineCollector collector = collectorManager.get(appID);
+      if (collector == null) {
+        LOG.error("Application: " + appId + " is not found");
+        throw new NotFoundException(); // different exception?
+      }
+
+      domain.setOwner(callerUgi.getShortUserName());
+      collector.putDomain(domain, callerUgi);
+
+      return Response.ok().build();
+    } catch (Exception e) {
+      LOG.error("Error putting entities", e);
+      throw new WebApplicationException(e,
+          Response.Status.INTERNAL_SERVER_ERROR);
+    }
+  }
+

INS26 INS40 INS31 INS29 INS78 INS79 INS79 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS8 INS65 INS65 INS65 INS65 INS65 INS42 INS42 INS45 INS42 INS4 INS42 INS78 INS43 INS42 INS78 INS43 INS42 INS79 INS43 INS42 INS43 INS42 INS21 INS60 INS25 INS54 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS40 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS43 INS59 INS27 INS8 INS8 INS12 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS60 INS21 INS53 INS60 INS25 INS60 INS60 INS25 INS21 INS21 INS41 INS44 INS8 INS42 INS42 INS43 INS59 INS32 INS14 INS43 INS59 INS27 INS8 INS43 INS59 INS43 INS59 INS27 INS8 INS32 INS32 INS32 INS43 INS42 INS21 INS53 INS42 INS42 INS45 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS32 INS42 INS33 INS41 INS42 INS42 INS11 INS42 INS42 INS32 INS42 INS33 INS21 INS53 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS14 INS42 INS42 INS42 INS32 INS43 INS32 INS42 INS42 INS42 INS32 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS43 INS42 INS40 INS32 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS27 INS43 INS42 INS42 INS42 INS40 INS45 INS42 INS45 INS42