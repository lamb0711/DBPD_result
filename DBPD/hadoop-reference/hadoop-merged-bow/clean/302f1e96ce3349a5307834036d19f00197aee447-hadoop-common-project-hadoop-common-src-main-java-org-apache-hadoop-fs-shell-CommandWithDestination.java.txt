Merge trunk into branch.

Branch will not build after this commit: need to implement new JournalManager
interfaces in QuorumJournalManager in a follow-up.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1371518 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.fs.FileSystem;
+import org.apache.hadoop.fs.FilterFileSystem;
-    target.fs.setWriteChecksum(writeChecksum);
-    PathData tempFile = null;
+    TargetFileSystem targetFs = new TargetFileSystem(target.fs);
-      tempFile = target.createTempFile(target+"._COPYING_");
-      FSDataOutputStream out = target.fs.create(tempFile.path, true);
-      IOUtils.copyBytes(in, out, getConf(), true);
+      PathData tempTarget = target.suffix("._COPYING_");
+      targetFs.setWriteChecksum(writeChecksum);
+      targetFs.writeStreamToFile(in, tempTarget);
+      targetFs.rename(tempTarget, target);
+    } finally {
+      targetFs.close(); // last ditch effort to ensure temp file is removed
+    }
+  }
+
+  // Helper filter filesystem that registers created files as temp files to
+  // be deleted on exit unless successfully renamed
+  private static class TargetFileSystem extends FilterFileSystem {
+    TargetFileSystem(FileSystem fs) {
+      super(fs);
+    }
+
+    void writeStreamToFile(InputStream in, PathData target) throws IOException {
+      FSDataOutputStream out = null;
+      try {
+        out = create(target);
+        IOUtils.copyBytes(in, out, getConf(), true);
+      } finally {
+        IOUtils.closeStream(out); // just in case copyBytes didn't
+      }
+    }
+    
+    // tag created files as temp files
+    FSDataOutputStream create(PathData item) throws IOException {
+      try {
+        return create(item.path, true);
+      } finally { // might have been created but stream was interrupted
+        deleteOnExit(item.path);
+      }
+    }
+
+    void rename(PathData src, PathData target) throws IOException {
-      if (target.exists && !target.fs.delete(target.path, false)) {
+      if (target.exists && !delete(target.path, false)) {
-      if (!tempFile.fs.rename(tempFile.path, target.path)) {
+      if (!rename(src.path, target.path)) {
-        PathIOException e = new PathIOException(tempFile.toString());
+        PathIOException e = new PathIOException(src.toString());
-      tempFile = null;
-    } finally {
-      if (tempFile != null) {
-        tempFile.fs.delete(tempFile.path, false);
-      }
+      // cancel delete on exit if rename is successful
+      cancelDeleteOnExit(src.path);
+    }
+    @Override
+    public void close() {
+      // purge any remaining temp files, but don't close underlying fs
+      processDeleteOnExit();

INS26 INS26 INS40 INS40 INS31 INS55 MOV29 INS83 INS39 INS42 MOV44 MOV44 MOV43 INS8 INS83 INS83 INS42 INS43 INS31 INS31 INS31 MOV31 INS31 MOV25 INS60 INS54 INS42 INS42 INS44 INS8 INS39 INS42 INS44 INS44 INS43 INS8 INS43 INS42 INS44 INS43 INS8 UPD42 INS44 INS44 INS43 MOV8 INS78 INS83 INS39 INS42 INS8 INS43 INS59 INS8 INS8 INS43 INS42 INS46 INS43 INS42 INS43 INS42 INS42 INS60 INS54 INS42 INS43 INS42 INS42 INS54 INS43 INS42 INS43 INS42 INS42 INS21 INS42 INS21 INS42 INS42 INS14 INS60 INS21 INS21 INS21 INS21 INS42 INS42 INS42 INS42 MOV43 INS59 INS8 INS8 INS42 INS8 INS8 INS42 INS42 INS32 INS32 INS43 INS40 MOV43 INS59 INS32 INS32 INS32 INS32 INS42 INS33 INS21 MOV21 INS21 INS41 INS21 UPD42 MOV42 UPD40 MOV40 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS32 INS32 INS32 UPD40 MOV43 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS42 INS42 INS40 INS9 INS42 INS40 INS42 INS42 MOV43 UPD42 DEL83 DEL42 DEL42 DEL42 DEL42 DEL45 DEL27 DEL32 DEL7 DEL21 DEL42 DEL40 DEL9 DEL32 DEL59 DEL60 DEL40 DEL40 DEL42 DEL33 DEL7 DEL21 DEL40 DEL42 DEL42 DEL32 DEL21 DEL42 DEL33 DEL59 DEL60 DEL42 DEL33 DEL27 DEL40 DEL42 DEL40 DEL9 DEL32 DEL21 DEL8 DEL25 DEL8 DEL54 DEL8