YARN-6400. Remove some unneeded code after YARN-6255. Contributed by Jian He

-import org.apache.hadoop.metrics2.lib.DefaultMetricsSystem;
-import org.apache.slider.api.ClusterDescription;
-import static org.apache.hadoop.metrics2.lib.Interns.info;
-
-  /**
-   * This is a template of the cluster status
-   */
-  private ClusterDescription clusterStatusTemplate = new ClusterDescription();
-
-/*
-    return app;
-
-    ClusterDescription cd = getClusterStatus();
-    long now = now();
-    cd.setInfoTime(StatusKeys.INFO_STATUS_TIME_HUMAN,
-                   StatusKeys.INFO_STATUS_TIME_MILLIS,
-                   now);
-
-    MapOperations infoOps = new MapOperations("info", cd.info);
-    infoOps.mergeWithoutOverwrite(applicationInfo);
-    SliderUtils.addBuildInfo(infoOps, "status");
-    cd.statistics = new HashMap<>();
-
-    // build the map of node -> container IDs
-    Map<String, List<String>> instanceMap = createRoleToInstanceMap();
-    cd.instances = instanceMap;
-    
-    //build the map of node -> containers
-    Map<String, Map<String, ClusterNode>> clusterNodes =
-      createRoleToClusterNodeMap();
-    log.info("app state clusterNodes {} ", clusterNodes.toString());
-    cd.status = new HashMap<>();
-    cd.status.put(ClusterDescriptionKeys.KEY_CLUSTER_LIVE, clusterNodes);
-
-    for (RoleStatus role : getRoleStatusMap().values()) {
-      String rolename = role.getName();
-      List<String> instances = instanceMap.get(rolename);
-      int nodeCount = instances != null ? instances.size(): 0;
-      cd.setRoleOpt(rolename, COMPONENT_INSTANCES,
-                    role.getDesired());
-      cd.setRoleOpt(rolename, ROLE_ACTUAL_INSTANCES, nodeCount);
-      cd.setRoleOpt(rolename, ROLE_REQUESTED_INSTANCES, role.getRequested());
-      cd.setRoleOpt(rolename, ROLE_RELEASING_INSTANCES, role.getReleasing());
-      cd.setRoleOpt(rolename, ROLE_FAILED_INSTANCES, role.getFailed());
-      cd.setRoleOpt(rolename, ROLE_FAILED_STARTING_INSTANCES, role.getStartFailed());
-      cd.setRoleOpt(rolename, ROLE_FAILED_RECENTLY_INSTANCES, role.getFailedRecently());
-      cd.setRoleOpt(rolename, ROLE_NODE_FAILED_INSTANCES, role.getNodeFailed());
-      cd.setRoleOpt(rolename, ROLE_PREEMPTED_INSTANCES, role.getPreempted());
-      if (role.isAntiAffinePlacement()) {
-        cd.setRoleOpt(rolename, ROLE_PENDING_AA_INSTANCES, role.getPendingAntiAffineRequests());
-      }
-      Map<String, Integer> stats = role.buildStatistics();
-      cd.statistics.put(rolename, stats);
-    }
-
-    Map<String, Integer> sliderstats = getLiveStatistics();
-    cd.statistics.put(SliderKeys.COMPONENT_AM, sliderstats);
-
-    // liveness
-    cd.liveness = getApplicationLivenessInformation();
-
-    return cd;*/
-    li.activeRequests = (int)stats.requested;

DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL29 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL23 DEL40 DEL39 DEL40 DEL11 DEL7 DEL21