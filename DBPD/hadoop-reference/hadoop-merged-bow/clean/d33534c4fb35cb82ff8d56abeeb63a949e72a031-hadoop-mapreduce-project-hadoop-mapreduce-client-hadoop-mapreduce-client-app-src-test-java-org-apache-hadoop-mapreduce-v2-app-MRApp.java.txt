YARN-748. Moved BuilderUtils from yarn-common to yarn-server-common for eventual retirement. Contributed by Jian He.
MAPREDUCE-5297. Updated MR App since BuilderUtils is no longer public after YARN-748. Contributed by Jian He.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489257 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.io.Text;
+import org.apache.hadoop.security.SecurityUtil;
-import org.apache.hadoop.yarn.api.records.Token;
+import org.apache.hadoop.yarn.api.records.Token;
-import org.apache.hadoop.yarn.util.BuilderUtils;
-        Token containerToken =
-            BuilderUtils.newContainerToken(nodeId, "password".getBytes(),
+        Token containerToken = newContainerToken(nodeId, "password".getBytes(),
+  public static Token newContainerToken(NodeId nodeId,
+      byte[] password, ContainerTokenIdentifier tokenIdentifier) {
+    // RPC layer client expects ip:port as service for tokens
+    InetSocketAddress addr =
+        NetUtils.createSocketAddrForHost(nodeId.getHost(), nodeId.getPort());
+    // NOTE: use SecurityUtil.setTokenService if this becomes a "real" token
+    Token containerToken =
+        Token.newInstance(tokenIdentifier.getBytes(),
+          ContainerTokenIdentifier.KIND.toString(), password, SecurityUtil
+            .buildTokenService(addr).toString());
+    return containerToken;
+  }
+
+
+  public static ContainerId newContainerId(int appId, int appAttemptId,
+      long timestamp, int containerId) {
+    ApplicationId applicationId = ApplicationId.newInstance(timestamp, appId);
+    ApplicationAttemptId applicationAttemptId =
+        ApplicationAttemptId.newInstance(applicationId, appAttemptId);
+    return ContainerId.newInstance(applicationAttemptId, containerId);
+  }
+
+  public static ContainerTokenIdentifier newContainerTokenIdentifier(
+      Token containerToken) throws IOException {
+    org.apache.hadoop.security.token.Token<ContainerTokenIdentifier> token =
+        new org.apache.hadoop.security.token.Token<ContainerTokenIdentifier>(
+            containerToken.getIdentifier()
+                .array(), containerToken.getPassword().array(), new Text(
+                containerToken.getKind()),
+            new Text(containerToken.getService()));
+    return token.decodeIdentifier();
+  }

MOV26 MOV26 INS26 UPD40 INS40 INS31 INS31 INS31 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS43 INS8 INS42 INS43 INS42 INS5 INS42 INS43 INS42 INS60 INS60 INS41 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS39 INS42 INS60 INS60 INS41 INS42 INS43 INS42 INS42 INS60 INS41 INS42 INS39 INS85 INS42 INS43 INS59 INS43 INS59 INS42 INS43 INS59 INS43 INS59 INS32 INS42 INS74 INS59 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS74 INS32 INS32 INS14 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS32 INS42 INS43 INS43 INS32 INS42 INS32 INS42 INS43 INS32 INS43 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42