HDDS-816. Create OM metrics for bucket, volume, keys. Contributed by Bharat Viswanadham.

-  private final DBStore store;
+  private DBStore store;
-  private final Table userTable;
-  private final Table volumeTable;
-  private final Table bucketTable;
-  private final Table keyTable;
-  private final Table deletedTable;
-  private final Table openKeyTable;
-  private final Table s3Table;
+  private Table userTable;
+  private Table volumeTable;
+  private Table bucketTable;
+  private Table keyTable;
+  private Table deletedTable;
+  private Table openKeyTable;
+  private Table s3Table;
-    File metaDir = OmUtils.getOmDbDir(conf);
-
-    this.store = DBStoreBuilder.newBuilder(conf)
-        .setName(OM_DB_NAME)
-        .setPath(Paths.get(metaDir.getPath()))
-        .addTable(USER_TABLE)
-        .addTable(VOLUME_TABLE)
-        .addTable(BUCKET_TABLE)
-        .addTable(KEY_TABLE)
-        .addTable(DELETED_TABLE)
-        .addTable(OPEN_KEY_TABLE)
-        .addTable(S3_TABLE)
-        .build();
-
-    userTable = this.store.getTable(USER_TABLE);
-    checkTableStatus(userTable, USER_TABLE);
-
-    volumeTable = this.store.getTable(VOLUME_TABLE);
-    checkTableStatus(volumeTable, VOLUME_TABLE);
-
-    bucketTable = this.store.getTable(BUCKET_TABLE);
-    checkTableStatus(bucketTable, BUCKET_TABLE);
-
-    keyTable = this.store.getTable(KEY_TABLE);
-    checkTableStatus(keyTable, KEY_TABLE);
-
-    deletedTable = this.store.getTable(DELETED_TABLE);
-    checkTableStatus(deletedTable, DELETED_TABLE);
-
-    openKeyTable = this.store.getTable(OPEN_KEY_TABLE);
-    checkTableStatus(openKeyTable, OPEN_KEY_TABLE);
-
-    s3Table = this.store.getTable(S3_TABLE);
-    checkTableStatus(s3Table, S3_TABLE);
-
+    start(conf);
-  public void start() {
+  public void start(OzoneConfiguration configuration) throws IOException {
+    // We need to create the DB here, as when during restart, stop closes the
+    // db, so we need to create the store object and initialize DB.
+    if (store == null) {
+      File metaDir = OmUtils.getOmDbDir(configuration);
+      this.store = DBStoreBuilder.newBuilder(configuration)
+          .setName(OM_DB_NAME)
+          .setPath(Paths.get(metaDir.getPath()))
+          .addTable(USER_TABLE)
+          .addTable(VOLUME_TABLE)
+          .addTable(BUCKET_TABLE)
+          .addTable(KEY_TABLE)
+          .addTable(DELETED_TABLE)
+          .addTable(OPEN_KEY_TABLE)
+          .addTable(S3_TABLE)
+          .build();
+      userTable = this.store.getTable(USER_TABLE);
+      checkTableStatus(userTable, USER_TABLE);
+
+      volumeTable = this.store.getTable(VOLUME_TABLE);
+      checkTableStatus(volumeTable, VOLUME_TABLE);
+
+      bucketTable = this.store.getTable(BUCKET_TABLE);
+      checkTableStatus(bucketTable, BUCKET_TABLE);
+
+      keyTable = this.store.getTable(KEY_TABLE);
+      checkTableStatus(keyTable, KEY_TABLE);
+
+      deletedTable = this.store.getTable(DELETED_TABLE);
+      checkTableStatus(deletedTable, DELETED_TABLE);
+
+      openKeyTable = this.store.getTable(OPEN_KEY_TABLE);
+      checkTableStatus(openKeyTable, OPEN_KEY_TABLE);
+
+      s3Table = this.store.getTable(S3_TABLE);
+      checkTableStatus(s3Table, S3_TABLE);
+    }
+      store = null;
+
+  @Override
+  public long countRowsInTable(Table table) throws IOException {
+    long count = 0;
+    if (table != null) {
+      try (TableIterator<Table.KeyValue> keyValueTableIterator =
+               table.iterator()) {
+        while (keyValueTableIterator.hasNext()) {
+          keyValueTableIterator.next();
+          count++;
+        }
+      }
+    }
+    return count;
+  }

MOV31 MOV31 INS31 INS83 INS42 MOV44 INS43 INS8 MOV29 INS78 INS39 INS42 INS44 INS8 UPD39 INS42 INS44 INS43 INS8 INS42 MOV21 MOV21 INS21 INS42 INS43 INS42 INS25 INS43 INS42 INS42 INS60 INS25 INS41 INS32 INS42 INS27 MOV8 INS42 INS39 INS59 INS27 INS8 INS42 INS42 INS42 INS42 INS33 INS21 INS42 INS34 INS42 INS33 INS54 INS7 INS58 INS8 INS42 INS33 INS74 INS59 INS61 UPD42 INS43 INS43 INS42 INS32 INS32 INS8 INS42 INS40 INS42 INS42 INS42 INS42 INS21 INS21 INS32 INS37 INS42 INS42 INS42 UPD42 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL83 DEL42 DEL42 DEL8