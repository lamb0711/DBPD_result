YARN-5049. Extend NMStateStore to save queued container information. (Konstantinos Karanasos via asuresh)

+import org.apache.hadoop.yarn.api.records.ContainerLaunchContext;
+import org.apache.hadoop.yarn.server.nodemanager.recovery.NMStateStoreService.RecoveredContainerState;
+import org.apache.hadoop.yarn.server.nodemanager.recovery.NMStateStoreService.RecoveredContainerStatus;
+      this.context.getNMStateStore().storeContainer(containerTokenIdentifier
+          .getContainerID(), request);
+      this.context.getNMStateStore().storeContainerQueued(
+          containerTokenIdentifier.getContainerID());
+
+        this.context.getNMStateStore().storeContainerKilled(containerID);
+  /**
+   * Recover running or queued container.
+   */
+  @Override
+  protected void recoverActiveContainer(
+      ContainerLaunchContext launchContext, ContainerTokenIdentifier token,
+      RecoveredContainerState rcs) throws IOException {
+    if (rcs.getStatus() ==
+        RecoveredContainerStatus.QUEUED && !rcs.getKilled()) {
+      LOG.info(token.getContainerID()
+          + "will be added to the queued containers.");
+
+      AllocatedContainerInfo allocatedContInfo = new AllocatedContainerInfo(
+          token, rcs.getStartRequest(), token.getExecutionType(),
+              token.getResource(), getConfig());
+
+      this.context.getQueuingContext().getQueuedContainers().put(
+          token.getContainerID(), token);
+
+      if (allocatedContInfo.getExecutionType() == ExecutionType.GUARANTEED) {
+        queuedGuaranteedContainers.add(allocatedContInfo);
+        // Kill running opportunistic containers to make space for
+        // guaranteed container.
+        killOpportunisticContainers(allocatedContInfo);
+      } else {
+        queuedOpportunisticContainers.add(allocatedContInfo);
+      }
+    } else {
+      super.recoverActiveContainer(launchContext, token, rcs);
+    }
+  }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS29 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS65 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS25 INS66 INS42 INS42 INS42 INS27 INS8 INS8 INS21 INS21 INS27 INS38 INS21 INS60 INS21 INS25 INS21 INS32 INS32 INS32 INS40 INS32 INS32 INS43 INS59 INS32 INS27 INS8 INS8 INS48 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS14 INS32 INS42 INS32 INS42 INS32 INS40 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS32 INS32 INS45 INS43 INS42 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS52 INS42 INS52 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS22 INS42 INS52 INS42 INS52 INS42