Merging r1543111 through r1543509 from trunk to branch HDFS-2832

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1543510 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+
+import org.apache.hadoop.yarn.api.records.ContainerId;
+import org.apache.hadoop.yarn.api.records.ContainerStatus;
+import org.apache.hadoop.yarn.api.records.impl.pb.ContainerIdPBImpl;
+import org.apache.hadoop.yarn.api.records.impl.pb.ContainerStatusPBImpl;
+import org.apache.hadoop.yarn.proto.YarnProtos.ContainerIdProto;
+import org.apache.hadoop.yarn.proto.YarnProtos.ContainerStatusProto;
-public class RegisterNodeManagerRequestPBImpl extends ProtoBase<RegisterNodeManagerRequestProto> implements RegisterNodeManagerRequest {
+public class RegisterNodeManagerRequestPBImpl extends RegisterNodeManagerRequest {
+  private List<ContainerStatus> containerStatuses = null;
+    if (this.containerStatuses != null) {
+      addContainerStatusesToProto();
+    }
+  public List<ContainerStatus> getContainerStatuses() {
+    initContainerStatuses();
+    return containerStatuses;
+  }
+  
+  private void initContainerStatuses() {
+    if (this.containerStatuses != null) {
+      return;
+    }
+    RegisterNodeManagerRequestProtoOrBuilder p = viaProto ? proto : builder;
+    List<ContainerStatusProto> list = p.getContainerStatusesList();
+    this.containerStatuses = new ArrayList<ContainerStatus>();
+    for (ContainerStatusProto c : list) {
+      this.containerStatuses.add(convertFromProtoFormat(c));
+    }
+  }
+
+  @Override
+  public void setContainerStatuses(List<ContainerStatus> containers) {
+    if (containers == null) {
+      return;
+    }
+    initContainerStatuses();
+    this.containerStatuses.addAll(containers);
+  }
+  
+  private void addContainerStatusesToProto() {
+    maybeInitBuilder();
+    builder.clearContainerStatuses();
+    if (containerStatuses == null) {
+      return;
+    }
+    Iterable<ContainerStatusProto> it = new Iterable<ContainerStatusProto>() {
+      
+      @Override
+      public Iterator<ContainerStatusProto> iterator() {
+        return new Iterator<ContainerStatusProto>() {
+          Iterator<ContainerStatus> iter = containerStatuses.iterator();
+          
+          @Override
+          public boolean hasNext() {
+            return iter.hasNext();
+          }
+          
+          @Override
+          public ContainerStatusProto next() {
+            return convertToProtoFormat(iter.next());  
+          }
+          
+          @Override
+          public void remove() {
+            throw new UnsupportedOperationException();
+          }
+        };
+      }
+    };
+    builder.addAllContainerStatuses(it);
+  }
+  
+  @Override
+  public int hashCode() {
+    return getProto().hashCode();
+  }
+  
+  @Override
+  public boolean equals(Object other) {
+    if (other == null)
+      return false;
+    if (other.getClass().isAssignableFrom(this.getClass())) {
+      return this.getProto().equals(this.getClass().cast(other).getProto());
+    }
+    return false;
+  }
+  
+  @Override
-
-
-}  
+  private ContainerStatusPBImpl convertFromProtoFormat(ContainerStatusProto c) {
+    return new ContainerStatusPBImpl(c);
+  }
+  
+  private ContainerStatusProto convertToProtoFormat(ContainerStatus c) {
+    return ((ContainerStatusPBImpl)c).getProto();
+  }
+}

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS74 INS59 INS78 INS83 INS74 INS42 INS8 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS43 INS43 INS42 INS33 INS25 INS42 INS43 INS43 INS21 INS41 INS25 INS60 INS60 INS21 INS70 INS42 INS74 INS42 INS25 INS21 INS21 INS21 INS21 INS25 INS60 INS21 INS42 INS41 INS42 INS43 INS42 INS25 INS25 INS41 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS41 INS42 INS42 INS27 INS8 INS42 INS42 INS32 INS42 INS27 INS8 INS43 INS59 INS74 INS59 INS7 INS44 INS42 INS8 INS43 INS43 INS27 INS8 INS32 INS32 INS32 INS32 INS27 INS8 INS74 INS59 INS32 INS32 INS42 INS27 INS41 INS32 INS8 INS9 INS42 INS14 INS42 INS32 INS22 INS33 INS21 INS42 INS22 INS33 INS41 INS42 INS42 INS16 INS43 INS43 INS42 INS32 INS22 INS14 INS43 INS42 INS21 INS42 INS42 INS42 INS33 INS41 INS42 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS41 UPD43 MOV43 UPD43 MOV43 INS42 INS14 INS42 INS42 INS42 INS32 INS42 INS42 INS33 INS9 INS32 INS42 INS32 INS41 INS43 INS42 INS36 INS42 INS52 INS42 INS32 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS74 INS42 INS32 INS52 INS42 UPD42 UPD42 INS74 INS1 INS42 INS42 INS42 INS52 INS42 INS32 INS42 INS11 INS42 INS43 INS43 INS22 INS42 INS32 INS43 INS43 INS31 INS32 INS42 INS32 INS43 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS78 INS83 INS74 INS42 INS8 INS52 INS42 INS32 INS42 INS42 INS42 INS43 INS43 INS41 INS32 INS42 INS42 INS42 INS42 INS14 INS52 INS42 INS74 INS1 INS43 INS43 INS23 INS31 INS31 INS31 INS42 INS42 INS74 INS59 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS43 INS43 INS42 INS32 INS42 INS41 INS42 INS42 INS41 INS42 INS53 INS42 INS42 INS42 INS42 INS32 INS32 INS14 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 DEL74