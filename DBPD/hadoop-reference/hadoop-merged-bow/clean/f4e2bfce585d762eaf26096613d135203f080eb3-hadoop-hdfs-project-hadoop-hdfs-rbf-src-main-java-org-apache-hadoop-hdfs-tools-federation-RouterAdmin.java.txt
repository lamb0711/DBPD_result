HDFS-13856. RBF: RouterAdmin should support dfsrouteradmin -refreshRouterArgs command. Contributed by yanghuafeng.

+import java.util.Arrays;
+import java.util.Collection;
+import org.apache.hadoop.fs.CommonConfigurationKeys;
+import org.apache.hadoop.hdfs.DFSConfigKeys;
+import org.apache.hadoop.ipc.ProtobufRpcEngine;
+import org.apache.hadoop.ipc.RefreshResponse;
+import org.apache.hadoop.ipc.protocolPB.GenericRefreshProtocolClientSideTranslatorPB;
+import org.apache.hadoop.ipc.protocolPB.GenericRefreshProtocolPB;
+import org.apache.hadoop.security.UserGroupInformation;
+    } else if (cmd.equals("-refreshRouterArgs")) {
+      return "\t[-refreshRouterArgs <host:ipc_port> <key> [arg1..argn]]";
+    } else if ("-refreshRouterArgs".equals(cmd)) {
+      if (argv.length < 2) {
+        return false;
+      }
+      } else if ("-refreshRouterArgs".equals(cmd)) {
+        exitCode = genericRefresh(argv, i);
+  public int genericRefresh(String[] argv, int i) throws IOException {
+    String hostport = argv[i++];
+    String identifier = argv[i++];
+    String[] args = Arrays.copyOfRange(argv, i, argv.length);
+
+    // Get the current configuration
+    Configuration conf = getConf();
+
+    // for security authorization
+    // server principal for this call
+    // should be NN's one.
+    conf.set(CommonConfigurationKeys.HADOOP_SECURITY_SERVICE_USER_NAME_KEY,
+        conf.get(DFSConfigKeys.DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY, ""));
+
+    // Create the client
+    Class<?> xface = GenericRefreshProtocolPB.class;
+    InetSocketAddress address = NetUtils.createSocketAddr(hostport);
+    UserGroupInformation ugi = UserGroupInformation.getCurrentUser();
+
+    RPC.setProtocolEngine(conf, xface, ProtobufRpcEngine.class);
+    GenericRefreshProtocolPB proxy = (GenericRefreshProtocolPB)RPC.getProxy(
+        xface, RPC.getProtocolVersion(xface), address, ugi, conf,
+        NetUtils.getDefaultSocketFactory(conf), 0);
+
+    Collection<RefreshResponse> responses = null;
+    try (GenericRefreshProtocolClientSideTranslatorPB xlator =
+        new GenericRefreshProtocolClientSideTranslatorPB(proxy)) {
+      // Refresh
+      responses = xlator.refresh(identifier, args);
+
+      int returnCode = 0;
+
+      // Print refresh responses
+      System.out.println("Refresh Responses:\n");
+      for (RefreshResponse response : responses) {
+        System.out.println(response.toString());
+
+        if (returnCode == 0 && response.getReturnCode() != 0) {
+          // This is the first non-zero return code, so we should return this
+          returnCode = response.getReturnCode();
+        } else if (returnCode != 0 && response.getReturnCode() != 0) {
+          // Then now we have multiple non-zero return codes,
+          // so we merge them into -1
+          returnCode = -1;
+        }
+      }
+      return returnCode;
+    } finally {
+      if (responses == null) {
+        System.out.println("Failed to get response.\n");
+        return -1;
+      }
+    }
+  }
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS5 INS42 INS39 INS42 INS42 INS60 INS60 INS60 INS60 INS21 INS60 INS60 INS60 INS21 INS60 INS60 INS54 INS43 INS85 INS43 INS59 INS43 INS59 INS5 INS59 INS43 INS59 INS32 INS74 INS59 INS43 INS59 INS43 INS59 INS32 INS43 INS59 INS74 INS59 INS58 INS8 INS8 INS42 INS42 INS42 INS2 INS42 INS42 INS2 INS43 INS85 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS40 INS32 INS43 INS76 INS42 INS57 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS57 INS42 INS42 INS11 INS43 INS43 INS42 INS33 INS43 INS59 INS21 INS60 INS21 INS70 INS41 INS25 INS42 INS37 INS42 INS37 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS40 INS45 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS32 INS42 INS42 INS42 INS42 INS14 INS7 INS39 INS59 INS32 INS44 INS42 INS8 INS42 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS34 INS43 INS42 INS42 INS32 INS42 INS34 INS40 INS42 INS45 INS43 INS42 INS21 INS25 INS42 INS33 INS21 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS27 INS8 INS25 INS32 INS38 INS40 INS42 INS32 INS27 INS27 INS21 INS27 INS8 INS40 INS42 INS45 INS34 INS25 INS42 INS42 INS42 INS34 INS32 INS34 INS7 INS27 INS27 INS21 INS32 INS8 INS42 INS42 INS42 INS32 INS42 INS34 INS32 INS34 INS7 INS45 INS42 INS42 INS25 INS42 INS42 INS42 INS42 INS42 INS38 INS25 INS27 INS8 INS34 INS32 INS8 INS40 INS34 INS41 INS42 INS42 INS45 INS41 INS9 INS25 INS45 INS32 INS8 MOV8 INS45 INS42 INS42 INS21 INS7 INS42 INS32 INS42 INS42 INS42