YARN-3659. Federation: routing client invocations transparently to multiple RMs. (Giovanni Matteo Fumarola via Subru).

(cherry picked from commit 52daa6d971ae408d121b3737ea8c0575e7e8516d)

+import java.net.ConnectException;
+
+  private int subClusterId;
+  final private AtomicInteger applicationCounter = new AtomicInteger(0);
+
+  // True if the Mock RM is running, false otherwise.
+  // This property allows us to write tests for specific scenario as Yarn RM
+  // down e.g. network issue, failover.
+  private boolean isRunning;
+    this(conf, startContainerIndex, 0, true);
+  }
+
+  public MockResourceManagerFacade(Configuration conf, int startContainerIndex,
+      int subClusterId, boolean isRunning) {
+    this.subClusterId = subClusterId;
+    this.isRunning = isRunning;
+  public void setRunningMode(boolean mode) {
+    this.isRunning = mode;
+  }
+
+  private void validateRunning() throws ConnectException {
+    if (!isRunning) {
+      throw new ConnectException("RM is stopped");
+    }
+  }
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+    validateRunning();
+
+    validateRunning();
+
-    return GetNewApplicationResponse.newInstance(null, null, null);
+
+    validateRunning();
+
+    return GetNewApplicationResponse.newInstance(ApplicationId.newInstance(
+        subClusterId, applicationCounter.incrementAndGet()), null, null);
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+
+
+    validateRunning();
+

INS26 INS40 INS23 INS23 INS23 INS31 INS31 INS31 INS83 INS39 INS59 INS83 INS83 INS43 INS59 INS83 INS39 INS59 INS83 INS42 INS44 INS44 INS8 INS44 INS44 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS43 INS8 INS42 INS42 INS42 INS14 INS42 INS43 INS42 INS39 INS42 INS17 INS39 INS42 INS39 INS42 INS21 INS21 INS39 INS42 INS21 INS42 INS25 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS43 INS34 INS42 INS42 INS42 INS34 INS9 INS7 INS7 INS7 INS38 INS8 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS42 INS53 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS14 INS42 INS42 INS42 INS32 INS43 INS45 INS42 INS42 INS42 DEL33