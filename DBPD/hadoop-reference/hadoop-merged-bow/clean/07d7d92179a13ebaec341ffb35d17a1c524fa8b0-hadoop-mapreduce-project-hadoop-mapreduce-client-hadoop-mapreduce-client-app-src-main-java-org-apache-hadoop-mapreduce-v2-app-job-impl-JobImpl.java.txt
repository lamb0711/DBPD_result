Merge r1462698 through r1464807 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1464815 13f79535-47bb-0310-9956-ffa450edef68

+  private static final InternalRebootTransition
+      INTERNAL_REBOOT_TRANSITION = new InternalRebootTransition();
+          .addTransition(JobStateInternal.NEW, JobStateInternal.REBOOT,
+              JobEventType.JOB_AM_REBOOT,
+              INTERNAL_REBOOT_TRANSITION)
+          .addTransition(JobStateInternal.INITED, JobStateInternal.REBOOT,
+              JobEventType.JOB_AM_REBOOT,
+              INTERNAL_REBOOT_TRANSITION)
+          .addTransition(JobStateInternal.SETUP, JobStateInternal.REBOOT,
+              JobEventType.JOB_AM_REBOOT,
+              INTERNAL_REBOOT_TRANSITION)
+          .addTransition(JobStateInternal.RUNNING, JobStateInternal.REBOOT,
+              JobEventType.JOB_AM_REBOOT,
+              INTERNAL_REBOOT_TRANSITION)
-                  JobEventType.JOB_TASK_ATTEMPT_FETCH_FAILURE))
+                  JobEventType.JOB_TASK_ATTEMPT_FETCH_FAILURE,
+                  JobEventType.JOB_AM_REBOOT))
-          // Ignore-able events
+          .addTransition(JobStateInternal.COMMITTING, JobStateInternal.REBOOT,
+              JobEventType.JOB_AM_REBOOT,
+              INTERNAL_REBOOT_TRANSITION)
+              // Ignore-able events
-                  JobEventType.JOB_TASK_ATTEMPT_FETCH_FAILURE))
+                  JobEventType.JOB_TASK_ATTEMPT_FETCH_FAILURE,
+                  JobEventType.JOB_AM_REBOOT))
-                  JobEventType.JOB_COMMIT_FAILED))
+                  JobEventType.JOB_COMMIT_FAILED,
+                  JobEventType.JOB_AM_REBOOT))
-                  JobEventType.JOB_COMMIT_FAILED))
+                  JobEventType.JOB_COMMIT_FAILED,
+                  JobEventType.JOB_AM_REBOOT))
-                  JobEventType.JOB_ABORT_COMPLETED))
+                  JobEventType.JOB_ABORT_COMPLETED,
+                  JobEventType.JOB_AM_REBOOT))
-                  JobEventType.JOB_ABORT_COMPLETED))
+                  JobEventType.JOB_ABORT_COMPLETED,
+                  JobEventType.JOB_AM_REBOOT))
-                  JobEventType.INTERNAL_ERROR))
+                  JobEventType.INTERNAL_ERROR,
+                  JobEventType.JOB_AM_REBOOT))
+
+          // No transitions from AM_REBOOT state. Ignore all.
+          .addTransition(
+              JobStateInternal.REBOOT,
+              JobStateInternal.REBOOT,
+              EnumSet.of(JobEventType.JOB_INIT,
+                  JobEventType.JOB_KILL,
+                  JobEventType.JOB_TASK_COMPLETED,
+                  JobEventType.JOB_TASK_ATTEMPT_COMPLETED,
+                  JobEventType.JOB_MAP_TASK_RESCHEDULED,
+                  JobEventType.JOB_DIAGNOSTIC_UPDATE,
+                  JobEventType.JOB_UPDATED_NODES,
+                  JobEventType.JOB_TASK_ATTEMPT_FETCH_FAILURE,
+                  JobEventType.JOB_SETUP_COMPLETED,
+                  JobEventType.JOB_SETUP_FAILED,
+                  JobEventType.JOB_COMMIT_COMPLETED,
+                  JobEventType.JOB_COMMIT_FAILED,
+                  JobEventType.JOB_ABORT_COMPLETED,
+                  JobEventType.INTERNAL_ERROR,
+                  JobEventType.JOB_AM_REBOOT))
+          .addTransition(JobStateInternal.REBOOT, JobStateInternal.REBOOT,
+              JobEventType.JOB_COUNTER_UPDATE, COUNTER_UPDATE_TRANSITION)
+
+    case REBOOT:
+      return JobState.ERROR;
+      case REBOOT:
-  private static class InternalErrorTransition implements
+  private static class InternalTerminationTransition implements
+    JobStateInternal terminationState = null;
+    String jobHistoryString = null;
+    public InternalTerminationTransition(JobStateInternal stateInternal,
+        String jobHistoryString) {
+      this.terminationState = stateInternal;
+      //mostly a hack for jbhistoryserver
+      this.jobHistoryString = jobHistoryString;
+    }
+
-              JobStateInternal.ERROR.toString());
+              jobHistoryString);
-      job.finished(JobStateInternal.ERROR);
+      job.finished(terminationState);
+    }
+  }
+
+  private static class InternalErrorTransition extends InternalTerminationTransition {
+    public InternalErrorTransition(){
+      super(JobStateInternal.ERROR, JobStateInternal.ERROR.toString());
+    }
+  }
+
+  private static class InternalRebootTransition extends InternalTerminationTransition  {
+    public InternalRebootTransition(){
+      super(JobStateInternal.REBOOT, JobStateInternal.ERROR.toString());

INS23 INS55 INS55 INS83 INS83 INS83 INS43 INS59 UPD42 INS23 INS23 INS31 INS83 INS83 INS42 INS43 INS31 INS83 INS83 INS42 INS43 INS31 INS42 INS42 INS14 INS32 INS43 INS59 INS43 INS59 INS83 INS42 INS44 INS44 INS8 INS42 INS83 INS42 INS8 INS42 INS83 INS42 INS8 INS43 INS32 INS42 INS41 INS49 INS49 INS42 INS42 INS33 INS42 INS42 INS33 INS43 INS42 INS43 INS42 INS21 INS21 INS46 INS46 INS42 MOV32 INS42 INS40 INS40 INS40 INS42 INS42 INS40 INS42 INS42 INS42 INS7 INS7 MOV43 INS40 MOV32 INS40 INS32 INS42 INS40 INS40 INS32 INS22 INS42 INS22 INS42 INS42 INS40 INS42 UPD42 MOV42 INS42 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS52 INS42 INS52 INS42 MOV43 INS42 INS40 INS40 INS40 INS40 INS40 INS40 INS32 INS42 INS40 MOV32 MOV42 MOV40 INS40 INS40 INS42 INS40 INS32 INS42 MOV32 MOV42 INS40 INS40 INS40 INS42 INS32 INS42 INS40 INS32 INS42 INS40 MOV32 INS40 MOV14 INS32 INS42 MOV40 INS40 INS40 INS42 MOV32 MOV42 INS40 INS40 INS40 INS40 UPD40 UPD40 INS42 UPD40 UPD40 UPD40 UPD42 UPD40 UPD40 MOV14 UPD40 UPD40 MOV14 UPD40 UPD40 MOV14 UPD40 UPD40 INS42 UPD40 UPD40 INS42 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD42 UPD40 UPD40 INS42 UPD40 UPD40 MOV14 UPD40 UPD40 MOV14 UPD40 UPD40 INS42 UPD40 UPD42 UPD40 UPD40 UPD40 UPD40 UPD40 INS42 DEL42 DEL42 DEL42 DEL42 DEL40