HDFS-13453. RBF: getMountPointDates should fetch latest subdir time/date when parent dir is not present but /parent/child dirs are present in mount table. Contributed by Dibyendu Karmakar.

-      MountTableResolver mountTable = (MountTableResolver)subclusterResolver;
-      String srcPath;
-          if (path.equals(Path.SEPARATOR)) {
-            srcPath = Path.SEPARATOR + child;
-          } else {
-            srcPath = path + Path.SEPARATOR + child;
-          }
-          MountTable entry = mountTable.getMountPoint(srcPath);
-          ret.put(child, entry.getDateModified());
+          Long modTime = getModifiedTime(ret, path, child);
+          ret.put(child, modTime);
+   * Get modified time for child. If the child is present in mount table it
+   * will return the modified time. If the child is not present but subdirs of
+   * this child are present then it will return latest modified subdir's time
+   * as modified time of the requested child.
+   * @param ret contains children and modified times.
+   * @param mountTable.
+   * @param path Name of the path to start checking dates from.
+   * @param child child of the requested path.
+   * @return modified time.
+   */
+  private long getModifiedTime(Map<String, Long> ret, String path,
+      String child) {
+    MountTableResolver mountTable = (MountTableResolver)subclusterResolver;
+    String srcPath;
+    if (path.equals(Path.SEPARATOR)) {
+      srcPath = Path.SEPARATOR + child;
+    } else {
+      srcPath = path + Path.SEPARATOR + child;
+    }
+    Long modTime = 0L;
+    try {
+      // Get mount table entry for the srcPath
+      MountTable entry = mountTable.getMountPoint(srcPath);
+      // if srcPath is not in mount table but its subdirs are in mount
+      // table we will display latest modified subdir date/time.
+      if (entry == null) {
+        List<MountTable> entries = mountTable.getMounts(srcPath);
+        for (MountTable eachEntry : entries) {
+          // Get the latest date
+          if (ret.get(child) == null ||
+              ret.get(child) < eachEntry.getDateModified()) {
+            modTime = eachEntry.getDateModified();
+          }
+        }
+      } else {
+        modTime = entry.getDateModified();
+      }
+    } catch (IOException e) {
+      LOG.error("Cannot get mount point", e);
+    }
+    return modTime;
+  }
+
+  /**

INS31 INS29 INS83 INS39 INS42 INS44 INS44 MOV44 INS8 INS65 INS65 INS65 INS65 INS65 INS65 INS74 INS42 INS43 INS42 MOV60 MOV60 MOV25 INS60 INS54 INS41 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS43 INS43 INS43 INS42 INS43 INS59 INS8 INS12 INS42 INS42 INS42 INS42 INS42 INS42 INS34 MOV60 INS25 INS44 INS8 INS27 INS8 INS8 INS43 INS42 INS21 INS42 INS33 INS60 INS70 MOV21 INS42 INS32 INS44 INS74 INS59 INS44 INS42 INS8 INS7 INS42 INS42 INS45 INS42 INS43 INS42 INS60 INS21 INS43 INS43 INS42 INS32 INS43 INS42 INS25 INS42 MOV32 INS42 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS27 INS27 INS21 INS42 INS42 INS42 INS42 INS32 INS33 INS32 INS32 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 DEL42 DEL42 DEL42 DEL32