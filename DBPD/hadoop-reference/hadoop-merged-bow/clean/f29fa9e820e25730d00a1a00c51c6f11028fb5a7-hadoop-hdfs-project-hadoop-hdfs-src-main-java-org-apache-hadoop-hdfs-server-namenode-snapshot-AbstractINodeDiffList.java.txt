HDFS-4499. Fix file/directory/snapshot deletion for file diff.  Contributed by Jing Zhao


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1448504 13f79535-47bb-0310-9956-ffa450edef68

+  
+  /** clear the diff list */
+  void clear() {
+    diffs.clear();
+  }
-   * Delete the snapshot with the given name. The synchronization of the diff
-   * list will be done outside.
-   * 
-   * If the diff to remove is not the first one in the diff list, we need to 
-   * combine the diff with its previous one:
+   * Delete a snapshot. The synchronization of the diff list will be done 
+   * outside. If the diff to remove is not the first one in the diff list, we 
+   * need to combine the diff with its previous one.
+   * @param prior The snapshot taken before the to-be-deleted snapshot
-   * @return The SnapshotDiff containing the deleted snapshot. 
-   *         Null if the snapshot with the given name does not exist. 
+   * @return delta in namespace. 
-  final D deleteSnapshotDiff(final Snapshot snapshot, final N currentINode,
-      final BlocksMapUpdateInfo collectedBlocks) {
+  final int deleteSnapshotDiff(final Snapshot snapshot, Snapshot prior,
+      final N currentINode, final BlocksMapUpdateInfo collectedBlocks) {
-    if (snapshotIndex < 0) {
-      return null;
-    } else {
-      final D removed = diffs.remove(snapshotIndex);
-      if (snapshotIndex == 0) {
-        if (removed.snapshotINode != null) {
-          removed.snapshotINode.clearReferences();
-        }
+    
+    int removedNum = 0;
+    D removed = null;
+    if (snapshotIndex == 0) {
+      if (prior != null) {
+        // set the snapshot to latestBefore
+        diffs.get(snapshotIndex).setSnapshot(prior);
+      } else {
+        removed = diffs.remove(0);
+        removedNum++; // removed a diff
+        removedNum += removed.destroyAndCollectBlocks(currentINode,
+            collectedBlocks);
+      }
+    } else if (snapshotIndex > 0) {
+      final AbstractINodeDiff<N, D> previous = diffs.get(snapshotIndex - 1);
+      if (!previous.getSnapshot().equals(prior)) {
+        diffs.get(snapshotIndex).setSnapshot(prior);
-        final AbstractINodeDiff<N, D> previous = diffs.get(snapshotIndex - 1);
+        removed = diffs.remove(snapshotIndex);
+        removedNum++;
-        previous.combinePosteriorAndCollectBlocks(currentINode, removed,
-            collectedBlocks);
+        removedNum += previous.combinePosteriorAndCollectBlocks(currentINode,
+            removed, collectedBlocks);
+        removed.setPosterior(null);
-      removed.setPosterior(null);
-      return removed;
+    return removedNum;
+  
+  /**
+   * Find the latest snapshot before a given snapshot.
+   * @param anchor The returned snapshot must be taken before this given 
+   *               snapshot.
+   * @return The latest snapshot before the given snapshot.
+   */
+  final Snapshot getPrior(Snapshot anchor) {
+    if (anchor == null) {
+      return getLastSnapshot();
+    }
+    final int i = Collections.binarySearch(diffs, anchor);
+    if (i == -1 || i == 0) {
+      return null;
+    } else {
+      int priorIndex = i > 0 ? i - 1 : -i - 2;
+      return diffs.get(priorIndex).getSnapshot();
+    }
+  }

INS31 INS31 INS29 INS39 INS42 INS8 INS39 INS44 MOV8 INS29 INS83 INS43 INS42 INS44 INS8 INS65 INS21 INS65 INS43 INS42 MOV60 INS60 INS60 INS25 INS65 INS65 INS65 INS42 INS43 INS42 INS25 INS60 INS25 INS66 INS32 UPD66 UPD66 UPD66 INS42 INS66 UPD66 INS42 INS39 INS59 MOV43 MOV59 MOV27 INS8 MOV25 UPD42 INS66 INS42 INS66 INS66 INS66 INS42 INS27 INS8 INS83 INS39 INS59 INS27 MOV8 INS8 INS42 INS42 INS42 INS34 INS33 INS25 UPD27 MOV27 INS42 INS33 INS41 INS42 INS32 INS27 INS27 INS60 INS41 INS27 INS8 INS8 INS42 INS34 INS25 INS32 INS42 INS42 INS42 INS42 INS42 INS38 INS42 INS34 INS39 INS59 INS32 INS42 INS33 INS21 INS21 INS21 MOV21 INS38 INS8 INS8 INS42 INS34 INS42 INS16 INS32 INS42 INS32 INS7 INS37 INS7 INS32 INS21 INS21 INS21 MOV25 MOV21 MOV21 INS21 INS27 INS27 INS27 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS7 INS37 INS7 MOV32 INS42 INS34 INS42 INS34 INS38 INS34 INS42 INS42 INS42 INS42 INS42 INS34 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 MOV32 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 DEL66 DEL66 DEL40 DEL33 DEL40 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL83 DEL42 DEL43 DEL60 DEL42 DEL34 DEL27 DEL25 DEL8