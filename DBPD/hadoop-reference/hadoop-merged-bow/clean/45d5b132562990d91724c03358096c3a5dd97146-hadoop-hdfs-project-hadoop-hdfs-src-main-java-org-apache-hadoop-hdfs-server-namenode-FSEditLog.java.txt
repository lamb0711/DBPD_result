Merge changes from trunk

+  /**
+   * Take this lock when adding journals to or closing the JournalSet. Allows
+   * us to ensure that the JournalSet isn't closed or updated underneath us
+   * in selectInputStreams().
+   */
+  private final Object journalSetLock = new Object();
+
-    journalSet = new JournalSet(minimumRedundantJournals);
+    synchronized(journalSetLock) {
+      journalSet = new JournalSet(minimumRedundantJournals);
-    for (URI u : dirs) {
-      boolean required = FSNamesystem.getRequiredNamespaceEditsDirs(conf)
-          .contains(u);
-      if (u.getScheme().equals(NNStorage.LOCAL_URI_SCHEME)) {
-        StorageDirectory sd = storage.getStorageDirectory(u);
-        if (sd != null) {
-          journalSet.add(new FileJournalManager(conf, sd, storage),
-              required, sharedEditsDirs.contains(u));
+      for (URI u : dirs) {
+        boolean required = FSNamesystem.getRequiredNamespaceEditsDirs(conf)
+            .contains(u);
+        if (u.getScheme().equals(NNStorage.LOCAL_URI_SCHEME)) {
+          StorageDirectory sd = storage.getStorageDirectory(u);
+          if (sd != null) {
+            journalSet.add(new FileJournalManager(conf, sd, storage),
+                required, sharedEditsDirs.contains(u));
+          }
+        } else {
+          journalSet.add(createJournal(u), required,
+              sharedEditsDirs.contains(u));
-      } else {
-        journalSet.add(createJournal(u), required,
-            sharedEditsDirs.contains(u));
-          journalSet.close();
+          synchronized(journalSetLock) {
+            journalSet.close();
+          }
-            IOUtils.cleanup(LOG, journalSet);
+            synchronized(journalSetLock) {
+              IOUtils.cleanup(LOG, journalSet);
+            }
-          IOUtils.cleanup(LOG, journalSet);
+          synchronized(journalSetLock) {
+            IOUtils.cleanup(LOG, journalSet);
+          }
-   * For test use only
-  synchronized long getSyncTxId() {
+  public synchronized long getSyncTxId() {
-    journalSet.add(bjm, false);
+    synchronized(journalSetLock) {
+      journalSet.add(bjm, false);
+    }
-      journalSet.remove(bjm);
+      synchronized(journalSetLock) {
+        journalSet.remove(bjm);
+      }
-  public synchronized Collection<EditLogInputStream> selectInputStreams(
+  public Collection<EditLogInputStream> selectInputStreams(
+
-    selectInputStreams(streams, fromTxId, inProgressOk);
+    synchronized(journalSetLock) {
+      Preconditions.checkState(journalSet.isOpen(), "Cannot call " +
+          "selectInputStreams() on closed FSEditLog");
+      selectInputStreams(streams, fromTxId, inProgressOk);
+    }

INS23 INS29 INS83 INS83 INS43 INS59 INS83 INS65 INS42 INS42 INS14 INS51 INS51 INS51 INS66 INS66 INS66 INS43 INS42 INS8 INS42 INS8 INS42 INS8 INS42 MOV21 MOV70 MOV21 INS51 INS21 MOV21 INS42 INS8 INS32 MOV21 INS42 INS42 INS32 INS27 INS8 INS42 INS42 INS45 INS45 INS51 INS42 MOV8 INS51 INS42 INS8 INS51 MOV21 INS42 INS8 MOV21 DEL66 DEL83