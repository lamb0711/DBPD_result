HDFS-7766. Add a flag to WebHDFS op=CREATE to not respond with a 307 redirect (Ravi Prakash via aw)

+import static io.netty.handler.codec.http.HttpHeaderNames.ACCEPT;
+import static io.netty.handler.codec.http.HttpHeaderNames.ACCESS_CONTROL_ALLOW_HEADERS;
+import static io.netty.handler.codec.http.HttpHeaderNames.ACCESS_CONTROL_MAX_AGE;
+import static io.netty.handler.codec.http.HttpHeaderValues.KEEP_ALIVE;
+import static io.netty.handler.codec.http.HttpMethod.OPTIONS;
-import org.apache.hadoop.fs.ParentNotDirectoryException;
+    } else if(PutOpParam.Op.CREATE.name().equalsIgnoreCase(op)
+        && method == OPTIONS) {
+      allowCORSOnCreate(ctx);
+    resp.headers().set(ACCESS_CONTROL_ALLOW_ORIGIN, "*");
+
+  //Accept preflighted CORS requests
+  private void allowCORSOnCreate(ChannelHandlerContext ctx)
+    throws IOException, URISyntaxException {
+    DefaultHttpResponse response = new DefaultHttpResponse(HTTP_1_1, OK);
+    HttpHeaders headers = response.headers();
+    headers.set(ACCESS_CONTROL_ALLOW_ORIGIN, "*");
+    headers.set(ACCESS_CONTROL_ALLOW_HEADERS, ACCEPT);
+    headers.set(ACCESS_CONTROL_ALLOW_METHODS, PUT);
+    headers.set(ACCESS_CONTROL_MAX_AGE, 1728000);
+    headers.set(CONTENT_LENGTH, 0);
+    headers.set(CONNECTION, KEEP_ALIVE);
+
+    ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);
+  }
+

MOV26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 UPD40 INS31 INS83 INS39 INS42 INS44 INS43 INS43 INS8 INS21 INS43 INS42 INS42 INS42 INS60 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS32 INS42 INS43 INS59 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS45 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS32 INS42 INS40 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS25 INS42 INS27 INS8 MOV8 INS32 INS27 INS21 INS32 INS42 INS42 INS42 INS42 INS32 INS40 INS42 INS42 INS42