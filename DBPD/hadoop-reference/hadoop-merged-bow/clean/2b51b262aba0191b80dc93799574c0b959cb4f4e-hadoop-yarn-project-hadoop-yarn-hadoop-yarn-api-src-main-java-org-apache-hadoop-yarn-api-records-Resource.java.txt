YARN-6892. [YARN-3926] Improve API implementation in Resources and DominantResourceCalculator class. Contributed by Sunil G.

-
-  
+
+   * Get ResourceInformation for a specified resource from a given index.
+   *
+   * @param index
+   *          of the resource
+   * @return the ResourceInformation object for the resource
+   * @throws ResourceNotFoundException
+   *           if the resource can't be found
+   */
+  @Public
+  @Evolving
+  public ResourceInformation getResourceInformation(int index)
+      throws ResourceNotFoundException {
+    ResourceInformation[] resources = getResources();
+    if (index < 0 || index >= resources.length) {
+      throw new ResourceNotFoundException("Unknown resource at index '" + index
+          + "'. Vaid resources are: " + Arrays.toString(resources));
+    }
+    return resources[index];
+  }
+
+  /**
+   * Set the ResourceInformation object for a particular resource.
+   *
+   * @param index
+   *          the resource index for which the ResourceInformation is provided
+   * @param resourceInformation
+   *          ResourceInformation object
+   * @throws ResourceNotFoundException
+   *           if the resource is not found
+   */
+  @Public
+  @Evolving
+  public void setResourceInformation(int index,
+      ResourceInformation resourceInformation)
+      throws ResourceNotFoundException {
+    ResourceInformation[] resources = getResources();
+    if (index < 0 || index >= resources.length) {
+      throw new ResourceNotFoundException("Unknown resource at index '" + index
+          + "'. Valid resources are " + Arrays.toString(resources));
+    }
+    ResourceInformation.copy(resourceInformation, resources[index]);
+  }
+
+  /**
+  /**
+   * Set the value of a resource in the ResourceInformation object. The unit of
+   * the value is assumed to be the one in the ResourceInformation object.
+   *
+   * @param index
+   *          the resource index for which the value is provided.
+   * @param value
+   *          the value to set
+   * @throws ResourceNotFoundException
+   *           if the resource is not found
+   */
+  @Public
+  @Evolving
+  public void setResourceValue(int index, long value)
+      throws ResourceNotFoundException {
+    ResourceInformation[] resources = getResources();
+    if (index < 0 || index >= resources.length) {
+      throw new ResourceNotFoundException("Unknown resource at index '" + index
+          + "'. Valid resources are " + Arrays.toString(resources));
+    }
+    resources[index].setValue(value);
+  }
+

INS31 INS31 INS31 INS29 INS78 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS29 INS78 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS29 INS78 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS42 INS42 INS42 INS39 INS42 INS42 INS60 INS25 INS41 INS65 INS65 INS65 INS65 INS42 INS42 INS39 INS42 INS43 INS42 INS42 INS60 INS25 INS21 INS65 INS65 INS65 INS65 INS42 INS42 INS39 INS42 INS39 INS42 INS42 INS60 INS25 INS21 INS66 INS42 INS66 INS66 INS42 INS66 INS5 INS59 INS27 INS8 INS2 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS5 INS59 INS27 INS8 INS32 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS5 INS59 INS27 INS8 INS32 INS43 INS85 INS42 INS32 INS27 INS27 INS53 INS42 INS42 INS43 INS85 INS42 INS32 INS27 INS27 INS53 INS42 INS42 INS42 INS2 INS43 INS85 INS42 INS32 INS27 INS27 INS53 INS2 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS40 INS14 INS42 INS42 INS42 INS34 INS42 INS40 INS14 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS40 INS14 INS42 INS42 INS43 INS27 INS43 INS27 INS43 INS27 INS42 INS45 INS42 INS45 INS32 INS42 INS45 INS42 INS45 INS32 INS42 INS45 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42