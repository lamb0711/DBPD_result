YARN-9267. General improvements in FpgaResourceHandlerImpl. Contributed by Peter Bacsko.

-import com.google.common.annotations.VisibleForTesting;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
+import static org.apache.hadoop.yarn.api.records.ResourceInformation.FPGA_URI;
+
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+import org.apache.commons.codec.digest.DigestUtils;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-
-import static org.apache.hadoop.yarn.api.records.ResourceInformation.FPGA_URI;
+import com.google.common.annotations.VisibleForTesting;
-
-  static final Logger LOG = LoggerFactory.
-      getLogger(FpgaResourceHandlerImpl.class);
+  private static final Logger LOG =
+      LoggerFactory.getLogger(FpgaResourceHandlerImpl.class);
-  public FpgaResourceAllocator getFpgaAllocator() {
+  FpgaResourceAllocator getFpgaAllocator() {
-    String r= container.getLaunchContext().getEnvironment().
+    return container.getLaunchContext().getEnvironment().
-    return r == null ? "" : r;
+      final String requestedIPID = getRequestedIPID(container);
+      String localizedIPIDHash = null;
+      ipFilePath = vendorPlugin.retrieveIPfilePath(
+          requestedIPID, container.getWorkDir(),
+          container.getResourceSet().getLocalizedResources());
+      if (ipFilePath != null) {
+        try (FileInputStream fis = new FileInputStream(ipFilePath)) {
+          localizedIPIDHash = DigestUtils.sha256Hex(fis);
+        } catch (IOException e) {
+          throw new ResourceHandlerException("Could not calculate SHA-256", e);
+        }
+      }
+
-          container, getRequestedIPID(container));
+          container, localizedIPIDHash);
-            String currentIPID = device.getIPID();
-            if (null != currentIPID &&
-                currentIPID.equalsIgnoreCase(getRequestedIPID(container))) {
-              LOG.info("IP already in device \"" +
-                  allowed.get(i).getAliasDevName() +
-                  "," + majorMinorNumber + "\", skip reprogramming");
+            String currentHash = allowed.get(i).getAocxHash();
+            if (currentHash != null &&
+                currentHash.equalsIgnoreCase(localizedIPIDHash)) {
+              LOG.info("IP already in device \""
+                  + allowed.get(i).getAliasDevName() + "," +
+                  majorMinorNumber + "\", skip reprogramming");
-                  getRequestedIPID(container));
+                  requestedIPID, localizedIPIDHash);

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS26 INS40 INS40 INS40 INS83 MOV43 MOV32 INS60 INS60 INS21 INS25 INS83 MOV43 INS59 INS43 INS59 INS7 INS27 INS8 INS42 MOV32 INS42 INS42 INS33 INS42 INS32 INS42 INS33 INS54 INS42 INS42 INS42 INS32 INS32 INS58 INS8 INS12 UPD42 MOV42 INS42 INS42 INS32 INS42 INS43 INS59 INS21 INS44 INS8 INS42 INS42 INS42 INS42 INS14 INS7 INS43 INS42 INS53 INS43 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS43 INS45 INS42 INS42 UPD42 INS32 INS32 INS42 UPD42 INS33 UPD42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 DEL83 DEL42 DEL59 DEL60 DEL42 DEL33 DEL27 DEL45 DEL42 DEL16 DEL42 DEL32 DEL32 DEL33 DEL32