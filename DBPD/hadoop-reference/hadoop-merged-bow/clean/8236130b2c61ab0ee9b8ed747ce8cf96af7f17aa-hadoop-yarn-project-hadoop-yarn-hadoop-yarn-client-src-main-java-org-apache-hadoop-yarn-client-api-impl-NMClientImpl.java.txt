YARN-6306. NMClient API change for container upgrade. Contributed by Arun Suresh

+import org.apache.hadoop.yarn.api.ContainerManagementProtocol;
+
+import org.apache.hadoop.yarn.api.protocolrecords.ReInitializeContainerRequest;
+  @Override
+  public void reInitializeContainer(ContainerId containerId,
+      ContainerLaunchContext containerLaunchContex, boolean autoCommit)
+      throws YarnException, IOException {
+    ContainerManagementProtocolProxyData proxy = null;
+    StartedContainer container = startedContainers.get(containerId);
+    if (container != null) {
+      synchronized (container) {
+        proxy = cmProxy.getProxy(container.getNodeId().toString(), containerId);
+        try {
+          proxy.getContainerManagementProtocol().reInitializeContainer(
+              ReInitializeContainerRequest.newInstance(
+                  containerId, containerLaunchContex, autoCommit));
+        } finally {
+          if (proxy != null) {
+            cmProxy.mayBeCloseProxy(proxy);
+          }
+        }
+      }
+    } else {
+      throw new YarnException("Unknown container [" + containerId + "]");
+    }
+  }
+
+  @Override
+  public void restartContainer(ContainerId containerId)
+      throws YarnException, IOException {
+    restartCommitOrRollbackContainer(containerId, UpgradeOp.RESTART);
+  }
+
+  @Override
+  public void rollbackLastReInitialization(ContainerId containerId)
+      throws YarnException, IOException {
+    restartCommitOrRollbackContainer(containerId, UpgradeOp.ROLLBACK);
+  }
+
+  @Override
+  public void commitLastReInitialization(ContainerId containerId)
+      throws YarnException, IOException {
+    restartCommitOrRollbackContainer(containerId, UpgradeOp.COMMIT);
+  }
+
+
+  private void restartCommitOrRollbackContainer(ContainerId containerId,
+      UpgradeOp upgradeOp) throws YarnException, IOException {
+    ContainerManagementProtocolProxyData proxy = null;
+    StartedContainer container = startedContainers.get(containerId);
+    if (container != null) {
+      synchronized (container) {
+        proxy = cmProxy.getProxy(container.getNodeId().toString(), containerId);
+        ContainerManagementProtocol cmp =
+            proxy.getContainerManagementProtocol();
+        try {
+          switch (upgradeOp) {
+          case RESTART:
+            cmp.restartContainer(containerId);
+            break;
+          case COMMIT:
+            cmp.commitLastReInitialization(containerId);
+            break;
+          case ROLLBACK:
+            cmp.rollbackLastReInitialization(containerId);
+            break;
+          default:
+            // Should not happen..
+            break;
+          }
+        } finally {
+          if (proxy != null) {
+            cmProxy.mayBeCloseProxy(proxy);
+          }
+        }
+      }
+    } else {
+      throw new YarnException("Unknown container [" + containerId + "]");
+    }
+  }
+
+
+  @Override
+  public NodeId getNodeIdOfStartedContainer(ContainerId containerId) {
+    StartedContainer container = startedContainers.get(containerId);
+    if (container != null) {
+      return container.getNodeId();
+    }
+    return null;
+  }
+

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS31 INS78 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS43 INS8 INS83 INS39 INS42 INS44 INS44 INS43 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS8 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS42 INS42 INS60 INS60 INS25 INS42 INS43 INS42 INS42 INS42 INS21 INS42 INS43 INS42 INS42 INS42 INS21 INS42 INS43 INS42 INS42 INS42 INS21 INS43 INS42 INS43 INS42 INS42 INS42 INS60 INS60 INS25 INS42 INS42 INS43 INS42 INS60 INS25 INS41 INS42 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS8 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS43 INS59 INS43 INS59 INS27 INS8 INS8 INS42 INS43 INS59 INS27 INS8 INS33 INS42 INS42 INS33 INS42 INS42 INS32 INS42 INS33 INS51 INS53 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS33 INS42 INS42 INS32 INS42 INS33 INS51 INS53 INS42 INS42 INS32 INS42 INS33 INS41 INS42 INS42 INS42 INS42 INS8 INS14 INS42 INS42 INS42 INS42 INS8 INS14 INS42 INS42 INS42 INS32 INS21 INS54 INS43 INS27 INS21 INS60 INS54 INS43 INS27 INS42 INS42 INS7 INS8 INS8 INS42 INS45 INS42 INS45 INS7 INS43 INS59 INS8 INS8 INS42 INS45 INS42 INS45 INS42 INS32 INS21 INS25 INS42 INS32 INS42 INS42 INS32 INS50 INS25 INS42 INS42 INS32 INS42 INS32 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS49 INS21 INS10 INS49 INS21 INS10 INS49 INS21 INS10 INS49 INS10 INS27 INS8 INS32 INS42 INS32 INS42 INS32 INS42 INS33 INS21 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42