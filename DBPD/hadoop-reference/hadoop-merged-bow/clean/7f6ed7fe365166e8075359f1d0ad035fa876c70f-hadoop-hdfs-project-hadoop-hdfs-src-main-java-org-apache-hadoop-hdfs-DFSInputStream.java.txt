HDFS-7055. Add tracing to DFSInputStream (cmccabe)

+import org.htrace.Span;
+import org.htrace.Trace;
+import org.htrace.TraceScope;
-
-    return readWithStrategy(byteArrayReader, off, len);
+    TraceScope scope =
+        dfsClient.getPathTraceScope("DFSInputStream#byteArrayRead", src);
+    try {
+      return readWithStrategy(byteArrayReader, off, len);
+    } finally {
+      scope.close();
+    }
-
-    return readWithStrategy(byteBufferReader, 0, buf.remaining());
+    TraceScope scope =
+        dfsClient.getPathTraceScope("DFSInputStream#byteBufferRead", src);
+    try {
+      return readWithStrategy(byteBufferReader, 0, buf.remaining());
+    } finally {
+      scope.close();
+    }
-      final Map<ExtendedBlock, Set<DatanodeInfo>> corruptedBlockMap) {
+      final Map<ExtendedBlock, Set<DatanodeInfo>> corruptedBlockMap,
+      final int hedgedReadId) {
+    final Span parentSpan = Trace.currentSpan();
-        actualGetFromOneDataNode(datanode, block, start, end, buf, offset,
-            corruptedBlockMap);
-        return bb;
+        TraceScope scope =
+            Trace.startSpan("hedgedRead" + hedgedReadId, parentSpan);
+        try {
+          actualGetFromOneDataNode(datanode, block, start, end, buf, offset,
+              corruptedBlockMap);
+          return bb;
+        } finally {
+          scope.close();
+        }
+    int hedgedReadId = 0;
-            chosenNode, block, start, end, bb, corruptedBlockMap);
+            chosenNode, block, start, end, bb, corruptedBlockMap,
+            hedgedReadId++);
-              chosenNode, block, start, end, bb, corruptedBlockMap);
+              chosenNode, block, start, end, bb, corruptedBlockMap,
+              hedgedReadId++);
-    throws IOException {
+      throws IOException {
+    TraceScope scope =
+        dfsClient.getPathTraceScope("DFSInputStream#byteArrayPread", src);
+    try {
+      return pread(position, buffer, offset, length);
+    } finally {
+      scope.close();
+    }
+  }
+
+  private int pread(long position, byte[] buffer, int offset, int length)
+      throws IOException {

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS44 MOV29 MOV78 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS8 UPD83 UPD42 INS60 INS54 INS60 INS54 INS83 INS39 INS42 INS60 INS60 INS39 INS42 INS5 INS42 INS39 INS42 INS39 INS42 INS42 INS60 INS54 INS43 INS59 INS8 INS8 INS43 INS59 INS8 INS8 INS83 INS43 INS59 INS39 INS59 INS39 INS85 INS43 INS59 INS8 INS8 INS42 INS42 INS32 MOV41 INS21 INS42 INS42 INS32 MOV41 INS21 INS42 INS42 INS32 INS42 INS34 INS42 INS42 INS32 INS41 INS21 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS42 INS42 INS45 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS60 INS54 MOV74 INS43 INS59 INS8 INS8 INS42 INS42 INS32 MOV21 MOV41 INS21 INS37 MOV74 INS42 INS42 INS27 INS42 INS32 INS42 INS45 INS42 INS42 INS42 INS37 INS42