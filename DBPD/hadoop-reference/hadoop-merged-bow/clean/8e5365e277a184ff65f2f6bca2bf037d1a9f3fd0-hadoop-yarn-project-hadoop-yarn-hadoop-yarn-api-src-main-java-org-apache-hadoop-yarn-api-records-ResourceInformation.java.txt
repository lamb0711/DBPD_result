YARN-8836. Add tags and attributes in resource definition. Contributed by Weiwei Yang.

+import com.google.common.collect.ImmutableSet;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Set;
+  private Set<String> tags = new HashSet<>();
+  private Map<String, String> attributes = new HashMap<>();
+   * Get the attributes of the resource.
+   * @return resource attributes
+   */
+  public Map<String, String> getAttributes() {
+    return attributes;
+  }
+
+  /**
+   * Set a map of attributes to the resource.
+   * @param attributes resource attributes
+   */
+  public void setAttributes(Map<String, String> attributes) {
+    if (attributes != null) {
+      this.attributes = attributes;
+    }
+  }
+
+  /**
+   * Get resource tags.
+   * @return resource tags
+   */
+  public Set<String> getTags() {
+    return this.tags;
+  }
+
+  /**
+   * Add tags to the resource.
+   * @param tags resource tags
+   */
+  public void setTags(Set<String> tags) {
+    if (tags != null) {
+      this.tags = tags;
+    }
+  }
+
+  /**
+    return ResourceInformation.newInstance(name, units, value, type,
+        minimumAllocation, maximumAllocation,
+        ImmutableSet.of(), ImmutableMap.of());
+  }
+
+  public static ResourceInformation newInstance(String name, String units,
+      long value, ResourceTypes type, long minimumAllocation,
+      long maximumAllocation,
+      Set<String> tags, Map<String, String> attributes) {
+    ret.setTags(tags);
+    ret.setAttributes(attributes);
+    dst.setTags(src.getTags());
+    dst.setAttributes(src.getAttributes());
-        + minimumAllocation + ", maximum allocation: " + maximumAllocation;
+        + minimumAllocation + ", maximum allocation: " + maximumAllocation
+        + ", tags: " + tags + ", attributes " + attributes;
-        || !this.resourceType.equals(r.getResourceType())) {
+        || !this.resourceType.equals(r.getResourceType())
+        || !this.tags.equals(r.getTags())
+        || !this.attributes.equals(r.getAttributes())) {
+    if (tags != null && !tags.isEmpty()) {
+      result = prime * result + tags.hashCode();
+    }
+    if (attributes != null && !attributes.isEmpty()) {
+      result = prime * result + attributes.hashCode();
+    }

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS83 INS74 INS59 INS83 INS74 INS59 INS29 INS83 INS74 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS74 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS8 INS44 INS44 INS43 INS43 INS42 INS14 INS43 INS43 INS43 INS42 INS14 INS65 INS65 INS43 INS43 INS43 INS41 INS65 INS65 INS74 INS42 INS25 INS65 INS65 INS43 INS43 INS41 INS65 INS65 INS74 INS42 INS25 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS41 INS74 INS42 INS74 INS42 INS21 INS21 INS21 INS21 INS25 INS25 INS42 INS42 INS74 INS42 INS42 INS42 INS74 INS66 INS66 INS42 INS42 INS42 INS42 INS66 INS42 INS66 INS43 INS43 INS43 INS27 INS8 INS66 INS66 INS42 INS42 INS22 INS66 INS42 INS66 INS43 INS43 INS27 INS8 INS42 INS42 INS42 INS32 INS43 INS43 INS43 INS43 INS43 INS32 INS32 INS32 INS32 INS27 INS8 INS27 INS8 INS43 INS43 INS42 INS42 INS42 INS42 INS33 INS21 INS52 INS42 INS42 INS42 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS45 INS42 INS45 INS42 INS38 INS38 INS27 INS38 INS21 INS27 INS38 INS21 INS42 INS42 INS7 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS33 INS32 INS7 INS42 INS33 INS32 INS7 INS22 INS42 INS22 INS42 INS22 INS42 INS32 INS22 INS42 INS32 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS27 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS27 INS32 INS27 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42