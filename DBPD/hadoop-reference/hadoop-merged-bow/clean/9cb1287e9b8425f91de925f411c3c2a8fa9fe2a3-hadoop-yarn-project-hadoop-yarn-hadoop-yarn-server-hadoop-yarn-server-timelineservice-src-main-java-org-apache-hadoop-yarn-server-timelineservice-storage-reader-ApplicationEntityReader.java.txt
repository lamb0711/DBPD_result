YARN-4446. Refactor reader API for better extensibility (Varun Saxena via sjlee)

-import java.util.Map;
-import java.util.Set;
-import org.apache.hadoop.yarn.server.timelineservice.reader.filter.TimelineFilterList;
+import org.apache.hadoop.yarn.server.timelineservice.reader.TimelineDataToRetrieve;
+import org.apache.hadoop.yarn.server.timelineservice.reader.TimelineEntityFilters;
+import org.apache.hadoop.yarn.server.timelineservice.reader.TimelineReaderContext;
-import org.apache.hadoop.yarn.server.timelineservice.storage.TimelineReader;
-  public ApplicationEntityReader(String userId, String clusterId,
-      String flowName, Long flowRunId, String appId, String entityType,
-      Long limit, Long createdTimeBegin, Long createdTimeEnd,
-      Map<String, Set<String>> relatesTo, Map<String, Set<String>> isRelatedTo,
-      Map<String, Object> infoFilters, Map<String, String> configFilters,
-      Set<String> metricFilters, Set<String> eventFilters,
-      TimelineFilterList confsToRetrieve, TimelineFilterList metricsToRetrieve,
-      EnumSet<Field> fieldsToRetrieve) {
-    super(userId, clusterId, flowName, flowRunId, appId, entityType, limit,
-        createdTimeBegin, createdTimeEnd, relatesTo, isRelatedTo, infoFilters,
-        configFilters, metricFilters, eventFilters, confsToRetrieve,
-        metricsToRetrieve, fieldsToRetrieve, true);
+  public ApplicationEntityReader(TimelineReaderContext ctxt,
+      TimelineEntityFilters entityFilters, TimelineDataToRetrieve toRetrieve) {
+    super(ctxt, entityFilters, toRetrieve, true);
-  public ApplicationEntityReader(String userId, String clusterId,
-      String flowName, Long flowRunId, String appId, String entityType,
-      String entityId, TimelineFilterList confsToRetrieve,
-      TimelineFilterList metricsToRetrieve, EnumSet<Field> fieldsToRetrieve) {
-    super(userId, clusterId, flowName, flowRunId, appId, entityType, entityId,
-        confsToRetrieve, metricsToRetrieve, fieldsToRetrieve);
+  public ApplicationEntityReader(TimelineReaderContext ctxt,
+      TimelineDataToRetrieve toRetrieve) {
+    super(ctxt, toRetrieve);
+    TimelineDataToRetrieve dataToRetrieve = getDataToRetrieve();
-    if (fieldsToRetrieve.contains(Field.ALL) &&
-        (confsToRetrieve == null ||
-        confsToRetrieve.getFilterList().isEmpty()) &&
-        (metricsToRetrieve == null ||
-        metricsToRetrieve.getFilterList().isEmpty())) {
+    if (dataToRetrieve.getFieldsToRetrieve().contains(Field.ALL) &&
+        (dataToRetrieve.getConfsToRetrieve() == null ||
+        dataToRetrieve.getConfsToRetrieve().getFilterList().isEmpty()) &&
+        (dataToRetrieve.getMetricsToRetrieve() == null ||
+        dataToRetrieve.getMetricsToRetrieve().getFilterList().isEmpty())) {
-    if (!fieldsToRetrieve.contains(Field.EVENTS) &&
-        !fieldsToRetrieve.contains(Field.ALL) && eventFilters == null) {
+    TimelineEntityFilters filters = getFilters();
+    if (!dataToRetrieve.getFieldsToRetrieve().contains(Field.EVENTS) &&
+        !dataToRetrieve.getFieldsToRetrieve().contains(Field.ALL) &&
+        (singleEntityRead || filters.getEventFilters() == null)) {
-    if (!fieldsToRetrieve.contains(Field.INFO) &&
-        !fieldsToRetrieve.contains(Field.ALL) && infoFilters == null) {
+    if (!dataToRetrieve.getFieldsToRetrieve().contains(Field.INFO) &&
+        !dataToRetrieve.getFieldsToRetrieve().contains(Field.ALL) &&
+        (singleEntityRead || filters.getInfoFilters() == null)) {
-    if (!fieldsToRetrieve.contains(Field.IS_RELATED_TO) &&
-        !fieldsToRetrieve.contains(Field.ALL) && isRelatedTo == null) {
+    if (!dataToRetrieve.getFieldsToRetrieve().contains(Field.IS_RELATED_TO) &&
+        !dataToRetrieve.getFieldsToRetrieve().contains(Field.ALL) &&
+        (singleEntityRead || filters.getIsRelatedTo() == null)) {
-    if (!fieldsToRetrieve.contains(Field.RELATES_TO) &&
-        !fieldsToRetrieve.contains(Field.ALL) && relatesTo == null) {
+    if (!dataToRetrieve.getFieldsToRetrieve().contains(Field.RELATES_TO) &&
+        !dataToRetrieve.getFieldsToRetrieve().contains(Field.ALL) &&
+        (singleEntityRead || filters.getRelatesTo() == null)) {
-    if ((fieldsToRetrieve.contains(Field.CONFIGS) || configFilters != null) ||
-        (confsToRetrieve != null &&
-        !confsToRetrieve.getFilterList().isEmpty())) {
+    if ((dataToRetrieve.getFieldsToRetrieve().contains(Field.CONFIGS) ||
+        (!singleEntityRead && filters.getConfigFilters() != null)) ||
+        (dataToRetrieve.getConfsToRetrieve() != null &&
+        !dataToRetrieve.getConfsToRetrieve().getFilterList().isEmpty())) {
-      if (confsToRetrieve != null &&
-          !confsToRetrieve.getFilterList().isEmpty()) {
+      if (dataToRetrieve.getConfsToRetrieve() != null &&
+          !dataToRetrieve.getConfsToRetrieve().getFilterList().isEmpty()) {
-            ApplicationColumnPrefix.CONFIG, confsToRetrieve));
+            ApplicationColumnPrefix.CONFIG,
+            dataToRetrieve.getConfsToRetrieve()));
-    if ((fieldsToRetrieve.contains(Field.METRICS) || metricFilters != null) ||
-        (metricsToRetrieve != null &&
-        !metricsToRetrieve.getFilterList().isEmpty())) {
+    if ((dataToRetrieve.getFieldsToRetrieve().contains(Field.METRICS) ||
+        (!singleEntityRead && filters.getMetricFilters() != null)) ||
+        (dataToRetrieve.getMetricsToRetrieve() != null &&
+        !dataToRetrieve.getMetricsToRetrieve().getFilterList().isEmpty())) {
-      if (metricsToRetrieve != null &&
-          !metricsToRetrieve.getFilterList().isEmpty()) {
+      if (dataToRetrieve.getMetricsToRetrieve() != null &&
+          !dataToRetrieve.getMetricsToRetrieve().getFilterList().isEmpty()) {
-            ApplicationColumnPrefix.METRIC, metricsToRetrieve));
+            ApplicationColumnPrefix.METRIC,
+            dataToRetrieve.getMetricsToRetrieve()));
+    TimelineReaderContext context = getContext();
-        ApplicationRowKey.getRowKey(clusterId, userId, flowName, flowRunId,
-            appId);
+        ApplicationRowKey.getRowKey(context.getClusterId(), context.getUserId(),
+            context.getFlowName(), context.getFlowRunId(), context.getAppId());
-    Preconditions.checkNotNull(clusterId, "clusterId shouldn't be null");
-    Preconditions.checkNotNull(entityType, "entityType shouldn't be null");
+    Preconditions.checkNotNull(getContext().getClusterId(),
+        "clusterId shouldn't be null");
+    Preconditions.checkNotNull(getContext().getEntityType(),
+        "entityType shouldn't be null");
-      Preconditions.checkNotNull(appId, "appId shouldn't be null");
+      Preconditions.checkNotNull(getContext().getAppId(),
+          "appId shouldn't be null");
-      Preconditions.checkNotNull(userId, "userId shouldn't be null");
-      Preconditions.checkNotNull(flowName, "flowName shouldn't be null");
+      Preconditions.checkNotNull(getContext().getUserId(),
+          "userId shouldn't be null");
+      Preconditions.checkNotNull(getContext().getFlowName(),
+          "flowName shouldn't be null");
+    TimelineReaderContext context = getContext();
-      if (flowName == null || flowRunId == null || userId == null) {
-        FlowContext context =
-            lookupFlowContext(clusterId, appId, hbaseConf, conn);
-        flowName = context.flowName;
-        flowRunId = context.flowRunId;
-        userId = context.userId;
+      if (context.getFlowName() == null || context.getFlowRunId() == null ||
+          context.getUserId() == null) {
+        FlowContext flowContext = lookupFlowContext(
+            context.getClusterId(), context.getAppId(), hbaseConf, conn);
+        context.setFlowName(flowContext.flowName);
+        context.setFlowRunId(flowContext.flowRunId);
+        context.setUserId(flowContext.userId);
-    if (fieldsToRetrieve == null) {
-      fieldsToRetrieve = EnumSet.noneOf(Field.class);
-    }
-    if (!fieldsToRetrieve.contains(Field.CONFIGS) &&
-        confsToRetrieve != null && !confsToRetrieve.getFilterList().isEmpty()) {
-      fieldsToRetrieve.add(Field.CONFIGS);
-    }
-    if (!fieldsToRetrieve.contains(Field.METRICS) &&
-        metricsToRetrieve != null &&
-        !metricsToRetrieve.getFilterList().isEmpty()) {
-      fieldsToRetrieve.add(Field.METRICS);
-    }
-    if (!singleEntityRead) {
-      if (limit == null || limit < 0) {
-        limit = TimelineReader.DEFAULT_LIMIT;
-      }
-      if (createdTimeBegin == null) {
-        createdTimeBegin = DEFAULT_BEGIN_TIME;
-      }
-      if (createdTimeEnd == null) {
-        createdTimeEnd = DEFAULT_END_TIME;
-      }
-    }
+    getDataToRetrieve().addFieldsBasedOnConfsAndMetricsToRetrieve();
-    if (flowRunId != null) {
+    TimelineReaderContext context = getContext();
+    if (context.getFlowRunId() != null) {
-          getRowKeyPrefix(clusterId, userId, flowName, flowRunId));
+          getRowKeyPrefix(context.getClusterId(), context.getUserId(),
+              context.getFlowName(), context.getFlowRunId()));
-          getRowKeyPrefix(clusterId, userId, flowName));
+          getRowKeyPrefix(context.getClusterId(), context.getUserId(),
+              context.getFlowName()));
-    newList.addFilter(new PageFilter(limit));
+    newList.addFilter(new PageFilter(getFilters().getLimit()));
+    TimelineEntityFilters filters = getFilters();
-    if (!singleEntityRead && (entity.getCreatedTime() < createdTimeBegin ||
-        entity.getCreatedTime() > createdTimeEnd)) {
+    if (!singleEntityRead &&
+        (entity.getCreatedTime() < filters.getCreatedTimeBegin() ||
+        entity.getCreatedTime() > filters.getCreatedTimeEnd())) {
-
+    EnumSet<Field> fieldsToRetrieve = getDataToRetrieve().getFieldsToRetrieve();
-    boolean checkIsRelatedTo = isRelatedTo != null && isRelatedTo.size() > 0;
+    boolean checkIsRelatedTo =
+        filters != null && filters.getIsRelatedTo() != null &&
+        filters.getIsRelatedTo().size() > 0;
-          entity.getIsRelatedToEntities(), isRelatedTo)) {
+          entity.getIsRelatedToEntities(), filters.getIsRelatedTo())) {
-    boolean checkRelatesTo = relatesTo != null && relatesTo.size() > 0;
+    boolean checkRelatesTo =
+        filters != null && filters.getRelatesTo() != null &&
+        filters.getRelatesTo().size() > 0;
-          entity.getRelatesToEntities(), relatesTo)) {
+          entity.getRelatesToEntities(), filters.getRelatesTo())) {
-    boolean checkInfo = infoFilters != null && infoFilters.size() > 0;
+    boolean checkInfo = filters != null && filters.getInfoFilters() != null &&
+        filters.getInfoFilters().size() > 0;
-          !TimelineStorageUtils.matchFilters(entity.getInfo(), infoFilters)) {
+          !TimelineStorageUtils.matchFilters(
+          entity.getInfo(), filters.getInfoFilters())) {
-    boolean checkConfigs = configFilters != null && configFilters.size() > 0;
+    boolean checkConfigs =
+        filters != null && filters.getConfigFilters() != null &&
+        filters.getConfigFilters().size() > 0;
-          entity.getConfigs(), configFilters)) {
+          entity.getConfigs(), filters.getConfigFilters())) {
-    boolean checkEvents = eventFilters != null && eventFilters.size() > 0;
+    boolean checkEvents =
+        filters != null && filters.getEventFilters() != null &&
+        filters.getEventFilters().size() > 0;
-          entity.getEvents(), eventFilters)) {
+          entity.getEvents(), filters.getEventFilters())) {
-    boolean checkMetrics = metricFilters != null && metricFilters.size() > 0;
+    boolean checkMetrics =
+        filters != null && filters.getMetricFilters() != null &&
+        filters.getMetricFilters().size() > 0;
-          entity.getMetrics(), metricFilters)) {
+          entity.getMetrics(), filters.getMetricFilters())) {

MOV26 MOV26 UPD40 UPD40 UPD40 UPD43 UPD42 UPD43 UPD42 INS43 UPD42 UPD43 UPD42 UPD43 UPD42 INS60 INS60 INS60 INS60 MOV21 INS60 INS60 INS60 UPD42 UPD42 UPD42 MOV42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 MOV74 INS59 INS42 INS42 INS32 INS42 INS42 INS32 INS36 INS36 INS36 INS36 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS32 INS32 UPD42 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS27 INS27 INS27 INS27 INS42 INS32 INS32 INS32 INS32 INS32 INS32 UPD42 MOV42 INS32 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS32 INS42 MOV27 INS32 INS42 INS27 INS27 INS27 INS27 INS27 INS27 INS42 UPD42 MOV42 INS32 INS32 INS42 MOV27 INS32 INS32 INS42 MOV27 INS32 INS32 INS42 MOV27 INS32 INS32 INS42 MOV27 INS36 INS36 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS42 INS32 INS32 INS32 INS32 INS42 UPD27 UPD27 INS42 INS27 MOV27 INS27 MOV27 INS27 MOV27 INS27 MOV27 INS27 MOV27 INS27 MOV27 INS32 INS32 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS32 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS32 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS32 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS32 INS32 INS27 INS32 INS32 INS32 INS27 INS32 INS32 INS32 UPD42 MOV42 INS32 UPD42 MOV42 INS32 UPD42 MOV42 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS32 INS32 INS42 INS33 INS32 INS32 INS42 INS33 INS32 INS32 INS42 INS33 INS32 INS32 INS42 INS33 INS32 INS32 INS42 INS33 INS32 INS32 INS42 INS33 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS38 MOV27 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 MOV38 MOV27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 UPD42 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS40 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS32 INS42 INS42 INS42 UPD42 MOV42 INS32 INS42 INS42 INS42 UPD42 MOV42 INS32 INS42 INS42 INS42 UPD42 MOV42 INS32 INS42 INS42 INS42 UPD42 MOV42 INS32 INS42 INS42 INS42 UPD42 MOV42 INS32 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS32 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 INS42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 DEL40 DEL26 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL40 DEL7 DEL42 DEL40 DEL7 DEL42 DEL40 DEL7 DEL40 DEL42 DEL33 DEL27 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL40 DEL32 DEL38 DEL42 DEL33 DEL27 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL38 DEL27 DEL8 DEL25 DEL42 DEL42 DEL40 DEL32 DEL38 DEL42 DEL33 DEL27 DEL27 DEL42 DEL42 DEL32 DEL42 DEL32 DEL38 DEL27 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL34 DEL27 DEL27 DEL42 DEL40 DEL7 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25 DEL8 DEL25 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42