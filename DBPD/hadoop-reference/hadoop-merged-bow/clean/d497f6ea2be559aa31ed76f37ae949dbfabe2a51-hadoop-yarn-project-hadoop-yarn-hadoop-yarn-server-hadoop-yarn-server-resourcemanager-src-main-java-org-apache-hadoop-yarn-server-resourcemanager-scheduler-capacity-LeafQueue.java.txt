YARN-2498. Respect labels in preemption policy of capacity scheduler for inter-queue preemption. Contributed by Wangda Tan

-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.policy.*;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.policy.FifoOrderingPolicy;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.policy.OrderingPolicy;
-  
+
+
+  // record all ignore partition exclusivityRMContainer, this will be used to do
+  // preemption, key is the partition of the RMContainer allocated on
+  private Map<String, TreeSet<RMContainer>> ignorePartitionExclusivityRMContainers =
+      new HashMap<>();
+            // Get reserved or allocated container from application
+            RMContainer reservedOrAllocatedRMContainer =
+                application.getRMContainer(assignment
+                    .getAssignmentInformation()
+                    .getFirstAllocatedOrReservedContainerId());
-                node.getPartition());
+                node.getPartition(), reservedOrAllocatedRMContainer);
-              container.getResource(), node.getPartition());
+              container.getResource(), node.getPartition(), rmContainer);
-      String nodePartition) {
+      String nodePartition, RMContainer rmContainer) {
+    // handle ignore exclusivity container
+    if (null != rmContainer && rmContainer.getNodeLabelExpression().equals(
+        RMNodeLabelsManager.NO_LABEL)
+        && !nodePartition.equals(RMNodeLabelsManager.NO_LABEL)) {
+      TreeSet<RMContainer> rmContainers = null;
+      if (null == (rmContainers =
+          ignorePartitionExclusivityRMContainers.get(nodePartition))) {
+        rmContainers = new TreeSet<>();
+        ignorePartitionExclusivityRMContainers.put(nodePartition, rmContainers);
+      }
+      rmContainers.add(rmContainer);
+    }
+
-  synchronized void releaseResource(Resource clusterResource, 
-      FiCaSchedulerApp application, Resource resource, String nodePartition) {
+  synchronized void releaseResource(Resource clusterResource,
+      FiCaSchedulerApp application, Resource resource, String nodePartition,
+      RMContainer rmContainer) {
+    // handle ignore exclusivity container
+    if (null != rmContainer && rmContainer.getNodeLabelExpression().equals(
+        RMNodeLabelsManager.NO_LABEL)
+        && !nodePartition.equals(RMNodeLabelsManager.NO_LABEL)) {
+      if (ignorePartitionExclusivityRMContainers.containsKey(nodePartition)) {
+        Set<RMContainer> rmContainers =
+            ignorePartitionExclusivityRMContainers.get(nodePartition);
+        rmContainers.remove(rmContainer);
+        if (rmContainers.isEmpty()) {
+          ignorePartitionExclusivityRMContainers.remove(nodePartition);
+        }
+      }
+    }
+
-          .getResource(), node.getPartition());
+          .getResource(), node.getPartition(), rmContainer);
-          .getResource(), node.getPartition());
+          .getResource(), node.getPartition(), rmContainer);
-          .getResource(), node.getPartition());
+          .getResource(), node.getPartition(), rmContainer);
+  /**
+   * return all ignored partition exclusivity RMContainers in the LeafQueue, this
+   * will be used by preemption policy, and use of return
+   * ignorePartitionExclusivityRMContainer should protected by LeafQueue
+   * synchronized lock
+   */
+  public synchronized Map<String, TreeSet<RMContainer>>
+      getIgnoreExclusivityRMContainers() {
+    return ignorePartitionExclusivityRMContainers;
+  }
+

MOV26 INS26 INS40 UPD40 INS23 INS31 INS83 INS74 INS59 INS44 INS44 INS29 INS83 INS83 INS74 INS42 INS8 INS43 INS43 INS74 INS42 INS14 INS43 INS42 INS25 INS43 INS42 INS25 INS65 INS43 INS43 INS74 INS41 INS42 INS42 INS43 INS43 INS74 INS42 INS27 INS8 INS42 INS27 INS8 INS66 INS66 INS66 INS66 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS43 INS27 INS38 INS60 INS25 INS21 INS27 INS38 INS25 INS21 MOV21 INS42 INS42 INS42 INS27 INS32 INS32 INS74 INS59 INS27 INS8 INS32 INS27 INS32 INS32 INS32 INS8 INS32 INS33 INS42 INS32 INS42 INS40 INS42 INS42 INS40 INS43 INS43 INS42 INS33 INS33 INS36 INS21 INS21 INS42 INS42 INS42 INS33 INS42 INS32 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS42 INS60 INS21 INS25 INS42 INS42 INS42 INS32 INS32 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS32 INS42 INS42 INS74 INS59 INS32 INS32 INS8 INS32 INS42 INS42 INS42 MOV42 MOV42 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS42 INS32 INS60 INS42 INS43 INS42 INS42 INS42 INS43 INS59 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL32 DEL21