YARN-7913. Improve error handling when application recovery fails with exception. Contributed by Wilfred Spiegelenburg

+      // This will re-create the queue on restore, however this could fail if
+      // the config was changed.
-        rejectApplicationWithMessage(applicationId,
-            queueName + " is not a leaf queue");
-        return;
+        if (!isAppRecovering) {
+          rejectApplicationWithMessage(applicationId,
+              queueName + " is not a leaf queue");
+          return;
+        }
+        // app is recovering we do not want to fail the app now as it was there
+        // before we started the recovery. Add it to the recovery queue:
+        // dynamic queue directly under root, no ACL needed (auto clean up)
+        queueName = "root.recovery";
+        queue = queueMgr.getLeafQueue(queueName, true, applicationId);
-      // Enforce ACLs: 2nd check, there could be a time laps between the app
-      // creation in the RMAppManager and getting here. That means we could
-      // have a configuration change (prevent race condition)
-      UserGroupInformation userUgi = UserGroupInformation.createRemoteUser(
-          user);
-
-      if (!queue.hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi) &&
-          !queue.hasAccess(QueueACL.ADMINISTER_QUEUE, userUgi)) {
-        String msg = "User " + user + " does not have permission to submit " +
-            applicationId + " to queue " + queueName;
-        rejectApplicationWithMessage(applicationId, msg);
-        queue.removeAssignedApp(applicationId);
-        return;
+      // Skip ACL check for recovering applications: they have been accepted
+      // in the queue already recovery should not break that.
+      if (!isAppRecovering) {
+        // Enforce ACLs: 2nd check, there could be a time laps between the app
+        // creation in the RMAppManager and getting here. That means we could
+        // have a configuration change (prevent race condition)
+        UserGroupInformation userUgi = UserGroupInformation.createRemoteUser(
+            user);
+        if (!queue.hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi) &&
+            !queue.hasAccess(QueueACL.ADMINISTER_QUEUE, userUgi)) {
+          String msg = "User " + user + " does not have permission to submit "
+              + applicationId + " to queue " + queueName;
+          rejectApplicationWithMessage(applicationId, msg);
+          queue.removeAssignedApp(applicationId);
+          return;
+        }
-      if (rmApp != null && rmApp.getAMResourceRequests() != null) {
+      // when recovering the NMs might not have registered and we could have
+      // no resources in the queue, the app is already running and has thus
+      // passed all these checks, skip them now.
+      if (!isAppRecovering && rmApp != null &&
+          rmApp.getAMResourceRequests() != null) {

INS25 INS25 MOV27 INS8 INS38 INS8 MOV25 INS21 INS21 INS42 MOV60 MOV25 INS27 INS38 INS7 INS7 INS38 MOV27 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS42 INS42 INS9 INS42