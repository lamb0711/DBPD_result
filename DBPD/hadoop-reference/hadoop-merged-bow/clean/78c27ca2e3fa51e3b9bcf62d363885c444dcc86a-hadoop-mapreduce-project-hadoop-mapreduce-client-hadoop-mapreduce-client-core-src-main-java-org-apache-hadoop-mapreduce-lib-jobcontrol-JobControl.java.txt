MAPREDUCE-4371. Check for cyclic dependencies in Jobcontrol job DAG (madhukara phatak via bobby)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1355139 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashMap;
+import java.util.HashSet;
+          if (isCircular(jobsInProgress)) {
+	    throw new IllegalArgumentException(
+		"job control has circular dependency");
+	  }
+
+ /**
+   * Uses topological sorting algorithm for finding circular dependency
+   */
+  private boolean isCircular(final List<ControlledJob> jobList) {
+    boolean cyclePresent = false;
+    HashSet<ControlledJob> SourceSet = new HashSet<ControlledJob>();
+    HashMap<ControlledJob, List<ControlledJob>> processedMap =
+	new HashMap<ControlledJob, List<ControlledJob>>();
+    for (ControlledJob n : jobList) {
+      processedMap.put(n, new ArrayList<ControlledJob>());
+    }
+    for (ControlledJob n : jobList) {
+      if (!hasInComingEdge(n, jobList, processedMap)) {
+	SourceSet.add(n);
+      }
+    }
+    while (!SourceSet.isEmpty()) {
+      ControlledJob controlledJob = SourceSet.iterator().next();
+      SourceSet.remove(controlledJob);
+      if (controlledJob.getDependentJobs() != null) {
+	for (int i = 0; i < controlledJob.getDependentJobs().size(); i++) {
+	  ControlledJob depenControlledJob =
+	      controlledJob.getDependentJobs().get(i);
+	  processedMap.get(controlledJob).add(depenControlledJob);
+	  if (!hasInComingEdge(controlledJob, jobList, processedMap)) {
+	    SourceSet.add(depenControlledJob);
+	  }
+	}
+      }
+    }
+
+    for (ControlledJob controlledJob : jobList) {
+      if (controlledJob.getDependentJobs() != null
+	  && controlledJob.getDependentJobs().size() != processedMap.get(
+	      controlledJob).size()) {
+	cyclePresent = true;
+	LOG.error("Job control has circular dependency for the  job "
+	    + controlledJob.getJobName());
+	break;
+      }
+    }
+    return cyclePresent;
+  }
+
+  private boolean hasInComingEdge(ControlledJob controlledJob,
+      List<ControlledJob> controlledJobList,
+      HashMap<ControlledJob, List<ControlledJob>> processedMap) {
+    boolean hasIncomingEdge = false;
+    for (ControlledJob k : controlledJobList) {
+      if (k != controlledJob && k.getDependentJobs() != null
+	  && !processedMap.get(k).contains(controlledJob)
+	  && k.getDependentJobs().contains(controlledJob)) {
+	hasIncomingEdge = true;
+	break;
+      }
+    }
+    return hasIncomingEdge;
+
+  }

INS26 INS26 INS40 INS40 INS31 INS31 INS29 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS44 INS8 INS65 INS83 INS74 INS42 INS60 INS60 INS60 INS70 INS70 INS61 INS70 INS41 INS43 INS42 INS74 INS42 INS74 INS42 INS60 INS70 INS41 INS66 INS43 INS43 INS39 INS59 INS74 INS59 INS74 INS59 INS44 INS42 INS8 INS44 INS42 INS8 INS38 INS8 INS44 INS42 INS8 INS42 INS42 INS43 INS43 INS43 INS43 INS74 INS39 INS59 INS44 INS42 INS8 INS42 INS42 INS42 INS42 INS9 INS43 INS43 INS42 INS14 INS43 INS43 INS74 INS42 INS14 INS43 INS42 INS21 INS43 INS42 INS25 INS32 INS60 INS21 INS25 INS43 INS42 INS25 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS9 INS43 INS42 INS25 INS42 INS42 INS74 INS42 INS42 INS43 INS43 INS74 INS42 INS32 INS42 INS38 INS8 INS42 INS42 INS43 INS59 INS32 INS27 INS8 INS42 INS27 INS8 INS42 INS42 INS42 INS27 INS8 INS43 INS43 INS42 INS42 INS43 INS43 INS74 INS42 INS42 INS42 INS14 INS32 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS33 INS24 INS27 INS27 INS21 INS21 INS10 INS27 INS32 INS21 INS10 INS42 INS42 INS42 INS42 INS43 INS43 INS74 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS58 INS27 INS37 INS8 INS32 INS33 INS32 INS32 INS7 INS32 INS27 INS38 INS32 INS42 INS42 INS7 INS25 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS39 INS59 INS42 INS32 INS42 INS60 INS21 INS25 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS27 INS27 INS27 INS32 INS42 INS42 INS42 INS9 INS32 INS8 INS42 INS42 INS42 INS34 INS32 INS42 INS43 INS59 INS32 INS38 INS8 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS32 INS33 INS32 INS42 INS42 INS42 INS42 INS53 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS42