MAPREDUCE-3533. Add a channel between RM and AM to get information on nodes. Contributed by Bikas Saha. 


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305230 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collection;
+import org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppNodeUpdateEvent.RMAppNodeUpdateType;
+import org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode;
+import org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNodeState;
+  private final Set<RMNode> updatedNodes = new HashSet<RMNode>();
+    .addTransition(RMAppState.NEW, RMAppState.NEW,
+        RMAppEventType.NODE_UPDATE, new RMAppNodeUpdateTransition())
+    .addTransition(RMAppState.SUBMITTED, RMAppState.SUBMITTED,
+        RMAppEventType.NODE_UPDATE, new RMAppNodeUpdateTransition())
+    .addTransition(RMAppState.ACCEPTED, RMAppState.ACCEPTED,
+        RMAppEventType.NODE_UPDATE, new RMAppNodeUpdateTransition())
+    .addTransition(RMAppState.RUNNING, RMAppState.RUNNING,
+        RMAppEventType.NODE_UPDATE, new RMAppNodeUpdateTransition())
+     // ignorable transitions
+    .addTransition(RMAppState.FINISHED, RMAppState.FINISHED,
+        RMAppEventType.NODE_UPDATE)
+     // ignorable transitions
+    .addTransition(RMAppState.FAILED, RMAppState.FAILED, 
+        RMAppEventType.NODE_UPDATE)
+     // ignorable transitions
+    .addTransition(RMAppState.KILLED, RMAppState.KILLED,
+        RMAppEventType.NODE_UPDATE)
+  @Override
+  public int pullRMNodeUpdates(Collection<RMNode> updatedNodes) {
+    this.writeLock.lock();
+    try {
+      int updatedNodeCount = this.updatedNodes.size();
+      updatedNodes.addAll(this.updatedNodes);
+      this.updatedNodes.clear();
+      return updatedNodeCount;
+    } finally {
+      this.writeLock.unlock();
+    }
+  }
+  
+  private void processNodeUpdate(RMAppNodeUpdateType type, RMNode node) {
+    RMNodeState nodeState = node.getState();
+    updatedNodes.add(node);
+    LOG.debug("Received node update event:" + type + " for node:" + node
+        + " with state:" + nodeState);
+  }
+  private static final class RMAppNodeUpdateTransition extends RMAppTransition {
+    public void transition(RMAppImpl app, RMAppEvent event) {
+      RMAppNodeUpdateEvent nodeUpdateEvent = (RMAppNodeUpdateEvent) event;
+      app.processNodeUpdate(nodeUpdateEvent.getUpdateType(),
+          nodeUpdateEvent.getNode());
+    };
+  }
+  

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS83 INS42 INS23 INS31 INS31 INS55 INS83 INS83 INS74 INS59 INS78 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS83 INS83 INS42 INS43 INS31 INS43 INS43 INS42 INS14 INS32 INS42 INS74 INS42 INS21 INS54 INS43 INS42 INS43 INS42 INS60 INS21 INS21 INS42 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS42 INS74 MOV32 INS42 INS43 INS43 INS32 INS8 INS8 INS42 INS42 INS43 INS59 INS32 INS32 INS43 INS42 INS43 INS42 INS60 INS21 INS43 INS43 UPD42 INS40 INS40 INS40 INS42 INS42 INS22 INS42 INS60 INS21 INS21 INS41 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS32 INS42 INS52 INS42 INS39 INS59 INS32 INS32 INS42 INS32 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS11 INS42 INS42 INS32 INS32 INS32 INS42 INS40 INS40 INS40 INS42 INS32 INS42 INS42 INS22 INS22 INS42 INS22 INS42 INS43 INS42 INS42 INS42 INS42 INS42 MOV32 MOV42 INS40 INS40 INS40 INS22 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 UPD40 UPD40 UPD40 INS52 INS42 INS32 INS42 INS40 MOV32 MOV42 MOV40 INS40 INS40 INS42 UPD40 UPD40 INS14 INS43 INS32 INS42 INS40 INS42 INS32 INS42 INS40 INS40 INS40 MOV32 MOV42 MOV40 INS40 INS40 INS14 UPD40 UPD40 UPD40 MOV14 INS43 UPD40 UPD40 INS42 UPD40 UPD40 MOV14 UPD40 UPD40 INS14 INS43 INS42 INS32 INS42 INS40 MOV14 MOV42 MOV40 INS40 INS40 INS14 INS43 INS42 DEL83 DEL42 DEL42