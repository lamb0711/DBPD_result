HADOOP-14734 add option to tag DDB table(s) created. (Contributed by Gabor Bota and Abe Fine)

+import com.amazonaws.services.dynamodbv2.model.Tag;
+import com.amazonaws.services.dynamodbv2.model.TagResourceRequest;
+  private AmazonDynamoDB amazonDynamoDB;
-  private static DynamoDB createDynamoDB(
+  private DynamoDB createDynamoDB(
-    Preconditions.checkNotNull(conf);
-    final Class<? extends DynamoDBClientFactory> cls = conf.getClass(
-        S3GUARD_DDB_CLIENT_FACTORY_IMPL,
-        S3GUARD_DDB_CLIENT_FACTORY_IMPL_DEFAULT,
-        DynamoDBClientFactory.class);
-    LOG.debug("Creating DynamoDB client {} with S3 region {}", cls, s3Region);
-    final AmazonDynamoDB dynamoDBClient = ReflectionUtils.newInstance(cls, conf)
-        .createDynamoDBClient(s3Region, bucket, credentials);
-    return new DynamoDB(dynamoDBClient);
+    if (amazonDynamoDB == null) {
+      Preconditions.checkNotNull(conf);
+      final Class<? extends DynamoDBClientFactory> cls =
+          conf.getClass(S3GUARD_DDB_CLIENT_FACTORY_IMPL,
+          S3GUARD_DDB_CLIENT_FACTORY_IMPL_DEFAULT, DynamoDBClientFactory.class);
+      LOG.debug("Creating DynamoDB client {} with S3 region {}", cls, s3Region);
+      amazonDynamoDB = ReflectionUtils.newInstance(cls, conf)
+          .createDynamoDBClient(s3Region, bucket, credentials);
+    }
+    return new DynamoDB(amazonDynamoDB);
+  /**
+   *  Add tags from configuration to the existing DynamoDB table.
+   */
+  @Retries.OnceRaw
+  public void tagTable() {
+    List<Tag> tags = new ArrayList<>();
+    Map <String, String> tagProperties =
+        conf.getPropsWithPrefix(S3GUARD_DDB_TABLE_TAG);
+    for (Map.Entry<String, String> tagMapEntry : tagProperties.entrySet()) {
+      Tag tag = new Tag().withKey(tagMapEntry.getKey())
+          .withValue(tagMapEntry.getValue());
+      tags.add(tag);
+    }
+    if (tags.isEmpty()) {
+      return;
+    }
+
+    TagResourceRequest tagResourceRequest = new TagResourceRequest()
+        .withResourceArn(table.getDescription().getTableArn())
+        .withTags(tags);
+    getAmazonDynamoDB().tagResource(tagResourceRequest);
+  }
+
+  @VisibleForTesting
+  public AmazonDynamoDB getAmazonDynamoDB() {
+    return amazonDynamoDB;
+  }
+
+    tagTable();

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS83 MOV43 INS59 INS29 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS42 INS25 INS65 INS40 INS60 INS60 INS70 INS25 INS60 INS21 INS42 INS42 INS41 INS21 INS27 INS8 INS66 INS74 INS59 INS74 INS59 INS44 INS32 INS8 INS32 INS8 INS43 INS59 INS32 INS42 INS32 INS42 INS33 MOV21 MOV60 MOV21 INS21 UPD42 INS43 INS43 INS42 INS14 INS43 INS43 INS43 INS42 INS32 INS74 INS42 INS42 INS42 INS60 INS21 INS42 INS42 INS41 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS7 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS43 INS59 INS32 INS32 INS42 INS42 INS42 INS42 MOV32 INS43 INS40 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS14 INS42 INS32 INS42 INS32 INS42 INS32 INS43 INS32 INS42 INS14 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 DEL83 DEL83 DEL42 DEL59 DEL60