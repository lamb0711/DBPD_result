YARN-6768. Improve performance of yarn api record toString and fromString. Contributed by Jonathan Eagles

-import com.google.common.base.Splitter;
-
-import java.text.NumberFormat;
-import java.util.Iterator;
-import java.util.NoSuchElementException;
-
+import org.apache.hadoop.util.FastNumberFormat;
-  private static final Splitter _SPLITTER = Splitter.on('_').trimResults();
-  private static final String CONTAINER_PREFIX = "container";
+  private static final String CONTAINER_PREFIX = "container_";
-  // TODO: fail the app submission if attempts are more than 10 or something
-  private static final ThreadLocal<NumberFormat> appAttemptIdAndEpochFormat =
-      new ThreadLocal<NumberFormat>() {
-        @Override
-        public NumberFormat initialValue() {
-          NumberFormat fmt = NumberFormat.getInstance();
-          fmt.setGroupingUsed(false);
-          fmt.setMinimumIntegerDigits(2);
-          return fmt;
-        }
-      };
-  // TODO: Why thread local?
-  // ^ NumberFormat instances are not threadsafe
-  private static final ThreadLocal<NumberFormat> containerIdFormat =
-      new ThreadLocal<NumberFormat>() {
-        @Override
-        public NumberFormat initialValue() {
-          NumberFormat fmt = NumberFormat.getInstance();
-          fmt.setGroupingUsed(false);
-          fmt.setMinimumIntegerDigits(6);
-          return fmt;
-        }
-      };
+  private static final int APP_ID_MIN_DIGITS = 4;
+
+  private static final int ATTEMPT_ID_MIN_DIGITS = 2;
+
+  private static final int EPOCH_MIN_DIGITS = 2;
+
+  private static final int CONTAINER_ID_MIN_DIGITS = 6;
-    StringBuilder sb = new StringBuilder();
-    sb.append(CONTAINER_PREFIX + "_");
+    StringBuilder sb = new StringBuilder(64);
+    sb.append(CONTAINER_PREFIX);
-      sb.append(EPOCH_PREFIX)
-          .append(appAttemptIdAndEpochFormat.get().format(epoch)).append("_");;
+      sb.append(EPOCH_PREFIX);
+      FastNumberFormat.format(sb, epoch, EPOCH_MIN_DIGITS);
+      sb.append('_');
-    sb.append(appId.getClusterTimestamp()).append("_");
-    sb.append(ApplicationId.appIdFormat.get().format(appId.getId()))
-        .append("_");
-    sb.append(
-        appAttemptIdAndEpochFormat.get().format(
-            getApplicationAttemptId().getAttemptId())).append("_");
-    sb.append(containerIdFormat.get()
-        .format(CONTAINER_ID_BITMASK & getContainerId()));
+    sb.append(appId.getClusterTimestamp());
+    sb.append('_');
+    FastNumberFormat.format(sb, appId.getId(), APP_ID_MIN_DIGITS);
+    sb.append('_');
+    FastNumberFormat.format(sb, getApplicationAttemptId().getAttemptId(),
+        ATTEMPT_ID_MIN_DIGITS);
+    sb.append('_');
+    FastNumberFormat.format(sb, CONTAINER_ID_BITMASK & getContainerId(),
+        CONTAINER_ID_MIN_DIGITS);
-    Iterator<String> it = _SPLITTER.split(containerIdStr).iterator();
-    if (!it.next().equals(CONTAINER_PREFIX)) {
+    if (!containerIdStr.startsWith(CONTAINER_PREFIX)) {
-      String epochOrClusterTimestampStr = it.next();
+      int pos1 = CONTAINER_PREFIX.length() - 1;
+
-      ApplicationAttemptId appAttemptID = null;
-      if (epochOrClusterTimestampStr.startsWith(EPOCH_PREFIX)) {
-        String epochStr = epochOrClusterTimestampStr;
-        epoch = Integer.parseInt(epochStr.substring(EPOCH_PREFIX.length()));
-        appAttemptID = toApplicationAttemptId(it);
-      } else {
-        String clusterTimestampStr = epochOrClusterTimestampStr;
-        long clusterTimestamp = Long.parseLong(clusterTimestampStr);
-        appAttemptID = toApplicationAttemptId(clusterTimestamp, it);
+      if (containerIdStr.regionMatches(pos1 + 1, EPOCH_PREFIX, 0,
+            EPOCH_PREFIX.length())) {
+        int pos2 = containerIdStr.indexOf('_', pos1 + 1);
+        if (pos2 < 0) {
+          throw new IllegalArgumentException("Invalid ContainerId: "
+              + containerIdStr);
+        }
+        String epochStr = containerIdStr.substring(
+            pos1 + 1 + EPOCH_PREFIX.length(), pos2);
+        epoch = Integer.parseInt(epochStr);
+        // rewind the current position
+        pos1 = pos2;
-      long id = Long.parseLong(it.next());
+      int pos2 = containerIdStr.indexOf('_', pos1 + 1);
+      if (pos2 < 0) {
+        throw new IllegalArgumentException("Invalid ContainerId: "
+            + containerIdStr);
+      }
+      long clusterTimestamp = Long.parseLong(
+        containerIdStr.substring(pos1 + 1, pos2));
+
+      int pos3 = containerIdStr.indexOf('_', pos2 + 1);
+      if (pos3 < 0) {
+        throw new IllegalArgumentException("Invalid ContainerId: "
+            + containerIdStr);
+      }
+      int appId = Integer.parseInt(containerIdStr.substring(pos2 + 1, pos3));
+      ApplicationId applicationId = ApplicationId.newInstance(clusterTimestamp,
+          appId);
+      int pos4 = containerIdStr.indexOf('_', pos3 + 1);
+      if (pos4 < 0) {
+        throw new IllegalArgumentException("Invalid ContainerId: "
+            + containerIdStr);
+      }
+      int attemptId = Integer.parseInt(
+          containerIdStr.substring(pos3 + 1, pos4));
+      ApplicationAttemptId appAttemptId =
+        ApplicationAttemptId.newInstance(applicationId, attemptId);
+      long id = Long.parseLong(containerIdStr.substring(pos4 + 1));
-      ContainerId containerId = ContainerId.newContainerId(appAttemptID, cid);
+      ContainerId containerId = ContainerId.newContainerId(appAttemptId, cid);
-    } catch (NoSuchElementException e) {
-      throw new IllegalArgumentException("Invalid ContainerId: "
-          + containerIdStr, e);
-  private static ApplicationAttemptId toApplicationAttemptId(
-      Iterator<String> it) throws NumberFormatException {
-    return toApplicationAttemptId(Long.parseLong(it.next()), it);
-  }
-
-  private static ApplicationAttemptId toApplicationAttemptId(
-      long clusterTimestamp, Iterator<String> it) throws NumberFormatException {
-    ApplicationId appId = ApplicationId.newInstance(clusterTimestamp,
-        Integer.parseInt(it.next()));
-    ApplicationAttemptId appAttemptId =
-        ApplicationAttemptId.newInstance(appId, Integer.parseInt(it.next()));
-    return appAttemptId;
-  }
-

MOV26 MOV23 UPD40 INS23 INS23 INS31 MOV43 INS39 INS39 MOV83 MOV83 MOV83 INS39 INS59 INS83 INS83 INS83 INS39 INS59 MOV78 MOV78 MOV83 INS83 MOV43 INS42 MOV44 INS8 UPD42 INS45 UPD42 INS34 UPD42 INS34 INS42 INS34 INS42 INS34 INS21 INS21 INS21 INS21 MOV25 INS54 MOV43 MOV32 INS32 INS32 INS32 MOV32 INS32 MOV32 INS8 MOV12 INS42 INS21 INS21 INS21 MOV42 MOV42 INS13 UPD42 MOV42 MOV42 INS42 MOV32 INS42 INS42 MOV42 INS13 UPD42 MOV42 UPD42 MOV42 UPD42 INS42 INS42 INS42 INS13 UPD42 MOV42 UPD42 MOV42 UPD42 INS42 MOV60 MOV60 INS25 MOV60 INS25 MOV60 MOV60 INS25 INS60 INS60 INS60 INS25 MOV60 INS60 INS60 MOV60 INS60 MOV41 MOV43 INS34 MOV32 INS32 INS32 UPD42 MOV42 UPD42 MOV42 INS39 INS32 INS8 UPD39 INS27 INS8 INS39 INS27 INS8 INS39 INS59 MOV43 INS59 INS39 INS59 INS27 MOV8 INS39 MOV43 INS59 INS39 INS59 MOV43 INS59 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS42 MOV42 INS13 UPD42 INS27 UPD42 MOV42 UPD42 MOV42 INS27 UPD42 MOV42 UPD34 MOV34 INS32 MOV60 INS25 INS60 MOV21 MOV21 UPD42 INS42 INS34 INS53 UPD42 UPD42 INS42 INS34 INS53 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS34 UPD42 MOV42 INS32 INS42 INS32 INS42 INS32 INS32 INS34 INS42 INS34 INS42 INS42 INS39 INS27 INS8 MOV43 INS59 UPD42 UPD42 INS13 INS27 INS14 UPD42 UPD42 INS13 INS27 INS14 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS13 INS27 UPD42 UPD42 MOV42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 MOV32 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 INS42 INS34 INS53 INS42 INS32 UPD42 INS42 INS42 INS34 INS43 INS27 UPD42 UPD42 INS27 INS42 INS42 INS34 INS43 INS27 INS42 INS42 INS27 INS42 INS42 INS34 UPD42 UPD42 INS27 UPD42 MOV42 UPD42 UPD42 INS27 MOV42 UPD42 INS13 INS27 INS14 UPD42 MOV42 INS42 INS27 INS42 MOV42 INS42 INS45 INS42 INS42 INS34 UPD42 MOV42 INS45 INS42 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS34 INS43 INS27 INS42 INS34 MOV32 INS42 INS45 INS42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL13 DEL32 DEL42 DEL32 DEL45 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL78 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL9 DEL32 DEL21 DEL42 DEL42 DEL34 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL1 DEL14 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL78 DEL42 DEL43 DEL42 DEL9 DEL32 DEL21 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL31 DEL1 DEL14 DEL59 DEL23 DEL42 DEL45 DEL27 DEL42 DEL32 DEL32 DEL32 DEL45 DEL32 DEL21 DEL20 DEL42 DEL45 DEL32 DEL40 DEL32 DEL32 DEL32 DEL45 DEL32 DEL21 DEL32 DEL42 DEL42 DEL32 DEL42 DEL45 DEL32 DEL32 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL43 DEL32 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL83 DEL83 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL59 DEL60 DEL8 DEL42 DEL43 DEL42 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL8 DEL43 DEL42 DEL44 DEL12 DEL54 DEL8 DEL31 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL32 DEL32 DEL42 DEL32 DEL41 DEL8 DEL31 DEL83 DEL83 DEL42 DEL43 DEL42 DEL39 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL32 DEL32 DEL59 DEL60 DEL42 DEL41 DEL8 DEL31