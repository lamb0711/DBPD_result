YARN-727, MAPREDUCE-5325. ClientRMProtocol.getAllApplications should accept ApplicationType as a parameter. Contributed by Xuan Gong.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1501599 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashSet;
+import java.util.Set;
+import org.apache.commons.cli.Option;
+import com.google.common.annotations.VisibleForTesting;
+
+  private static final String APP_TYPE_CMD = "appTypes";
+
-    opts.addOption(LIST_CMD, false, "Lists all the Applications from RM.");
+    opts.addOption(LIST_CMD, false, "List applications from the RM. " +
+        "Supports optional use of --appTypes to filter applications " +
+        "based on application type.");
+    opts.addOption(HELP_CMD, false, "Displays help for all commands.");
+    Option appTypeOpt = new Option(APP_TYPE_CMD, true,
+        "Works with --list to filter applications based on their type.");
+    appTypeOpt.setValueSeparator(',');
+    appTypeOpt.setArgs(Option.UNLIMITED_VALUES);
+    appTypeOpt.setArgName("Comma-separated list of application types");
+    opts.addOption(appTypeOpt);
+    opts.getOption(KILL_CMD).setArgName("Application ID");
+    opts.getOption(STATUS_CMD).setArgName("Application ID");
-      listAllApplications();
+      Set<String> appTypes = new HashSet<String>();
+      if(cliParser.hasOption(APP_TYPE_CMD)) {
+        String[] types = cliParser.getOptionValues(APP_TYPE_CMD);
+        if (types != null) {
+          for (String type : types) {
+            if (!type.trim().isEmpty()) {
+              appTypes.add(type.trim());
+            }
+          }
+        }
+      }
+      listApplications(appTypes);
+    } else if (cliParser.hasOption(HELP_CMD)) {
+      printUsage(opts);
+      return 0;
-  private void printUsage(Options opts) {
+  @VisibleForTesting
+  void printUsage(Options opts) {
-   * Lists all the applications present in the Resource Manager
+   * Lists the applications matching the given application Types
+   * present in the Resource Manager
+   * @param appTypes
-  private void listAllApplications() throws YarnException, IOException {
+  private void listApplications(Set<String> appTypes)
+      throws YarnException, IOException {
-    List<ApplicationReport> appsReport = client.getApplicationList();
+    List<ApplicationReport> appsReport =
+        client.getApplications(appTypes);

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS83 INS83 INS83 INS43 INS59 INS78 UPD42 INS44 INS42 INS42 INS45 INS21 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS42 INS65 INS74 INS42 INS32 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS32 INS66 UPD66 INS42 INS43 INS43 INS27 INS42 INS42 INS42 INS9 INS45 INS42 INS42 INS14 INS42 INS42 INS13 INS42 INS42 INS40 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS45 INS42 INS42 INS45 INS45 INS45 INS43 INS42 INS9 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS60 INS25 INS25 UPD42 INS42 INS42 INS74 INS59 INS32 INS8 INS32 INS8 MOV8 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS60 INS25 UPD42 INS42 INS42 INS42 INS42 INS21 INS41 INS42 INS42 INS74 INS5 INS59 INS27 INS8 INS32 INS34 INS43 INS43 INS43 INS85 INS42 INS32 INS42 INS33 INS70 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS44 INS42 INS8 INS43 INS42 INS25 INS42 INS38 INS8 INS32 INS21 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 DEL45 DEL83