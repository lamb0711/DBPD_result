YARN-6438. Code can be improved in ContainersMonitorImpl.java
(Contributed by Miklos Szegedi via Daniel Templeton)

-        long cpuUsageTotalCoresByAllContainers = 0;
-            // cpuUsagePercentPerCore should be 300% and
-            // cpuUsageTotalCoresPercentage should be 50%
+            // cpuUsagePercentPerCore should be 300%
-            cpuUsageTotalCoresByAllContainers += cpuUsagePercentPerCore;
-              + ", Total CPU usage= " + cpuUsageTotalCoresByAllContainers
-              + ", Total CPU(% per core) usage"
+              + ", Total CPU usage(% per core)= "
+      // if machine has 6 cores and 3 are used,
+      // cpuUsagePercentPerCore should be 300% and
+      // cpuUsageTotalCoresPercentage should be 50%
-    if (!containersMonitorEnabled) {
-      if (monitoringEvent.getType() == ContainersMonitorEventType
-          .CHANGE_MONITORING_CONTAINER_RESOURCE) {
-        // Nothing to enforce. Update container resource immediately.
-        ChangeMonitoringContainerResourceEvent changeEvent =
-            (ChangeMonitoringContainerResourceEvent) monitoringEvent;
-        changeContainerResource(containerId, changeEvent.getResource());
-      }
-      return;
-    }
-    ProcessTreeInfo processTreeInfo = trackingContainers.get(containerId);
-    if (processTreeInfo == null) {
-      LOG.warn("Failed to track container "
-          + containerId.toString()
-          + ". It may have already completed.");
-      return;
+    if (containersMonitorEnabled) {
+      ProcessTreeInfo processTreeInfo = trackingContainers.get(containerId);
+      if (processTreeInfo == null) {
+        LOG.warn("Failed to track container "
+            + containerId.toString()
+            + ". It may have already completed.");
+        return;
+      }
+      LOG.info("Changing resource-monitoring for " + containerId);
+      updateContainerMetrics(monitoringEvent);
+      long pmemLimit =
+          changeEvent.getResource().getMemorySize() * 1024L * 1024L;
+      long vmemLimit = (long) (pmemLimit * vmemRatio);
+      int cpuVcores = changeEvent.getResource().getVirtualCores();
+      processTreeInfo.setResourceLimit(pmemLimit, vmemLimit, cpuVcores);
-    LOG.info("Changing resource-monitoring for " + containerId);
-    updateContainerMetrics(monitoringEvent);
-    long pmemLimit = changeEvent.getResource().getMemorySize() * 1024L * 1024L;
-    long vmemLimit = (long) (pmemLimit * vmemRatio);
-    int cpuVcores = changeEvent.getResource().getVirtualCores();
-    processTreeInfo.setResourceLimit(pmemLimit, vmemLimit, cpuVcores);
+

INS25 INS42 INS8 MOV60 MOV25 MOV21 MOV21 MOV60 MOV60 MOV60 MOV21 UPD45 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL42 DEL7 DEL21 DEL45 DEL42 DEL42 DEL38 DEL42 DEL42 DEL32 DEL40 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL11 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL25 DEL41 DEL8 DEL25