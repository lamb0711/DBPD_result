HDFS-12235. Ozone: DeleteKey-3: KSM SCM block deletion message and ACK interactions. Contributed by Weiwei Yang and Yuanbo Liu.

+import org.apache.hadoop.ozone.common.DeleteBlockGroupResult;
+import org.apache.hadoop.ozone.common.BlockGroup;
+import org.apache.hadoop.ozone.protocol.proto.ScmBlockLocationProtocolProtos.DeleteScmKeyBlocksRequestProto;
-    .DeleteScmBlocksRequestProto;
-import org.apache.hadoop.ozone.protocol.proto.ScmBlockLocationProtocolProtos
-    .DeleteScmBlocksResponseProto;
-import org.apache.hadoop.ozone.protocol.proto.ScmBlockLocationProtocolProtos
-    .DeleteScmBlockResult;
+    .DeleteScmKeyBlocksResponseProto;
+import org.apache.hadoop.ozone.protocol.proto.ScmBlockLocationProtocolProtos
+    .KeyBlocks;
-import org.apache.hadoop.scm.container.common.helpers.DeleteBlockResult;
+import java.util.stream.Collectors;
-   * @param keys batch of block keys to delete.
+   * @param keyBlocksInfoList batch of block keys to delete.
-  public List<DeleteBlockResult> deleteBlocks(Set<String> keys)
-      throws IOException {
-    Preconditions.checkArgument(keys != null && !keys.isEmpty(),
-        "keys to be deleted cannot be null or empty");
-    DeleteScmBlocksRequestProto request = DeleteScmBlocksRequestProto
-        .newBuilder()
-        .addAllKeys(keys)
-        .build();
-    final DeleteScmBlocksResponseProto resp;
+  public List<DeleteBlockGroupResult> deleteKeyBlocks(
+      List<BlockGroup> keyBlocksInfoList) throws IOException {
+    List<KeyBlocks> keyBlocksProto = keyBlocksInfoList.stream()
+        .map(BlockGroup::getProto).collect(Collectors.toList());
+    DeleteScmKeyBlocksRequestProto request = DeleteScmKeyBlocksRequestProto
+        .newBuilder().addAllKeyBlocks(keyBlocksProto).build();
+
+    final DeleteScmKeyBlocksResponseProto resp;
-      resp = rpcProxy.deleteScmBlocks(NULL_RPC_CONTROLLER, request);
+      resp = rpcProxy.deleteScmKeyBlocks(NULL_RPC_CONTROLLER, request);
-    List<DeleteBlockResult> results = new ArrayList(resp.getResultsCount());
-    for (DeleteScmBlockResult result : resp.getResultsList()) {
-      results.add(new DeleteBlockResult(result.getKey(), result.getResult()));
-    }
+    List<DeleteBlockGroupResult> results =
+        new ArrayList<>(resp.getResultsCount());
+    results.addAll(resp.getResultsList().stream().map(
+        result -> new DeleteBlockGroupResult(result.getObjectKey(),
+            DeleteBlockGroupResult
+                .convertBlockResultProto(result.getBlockResultsList())))
+        .collect(Collectors.toList()));

MOV26 MOV26 MOV26 INS26 INS26 INS40 INS40 UPD40 UPD40 UPD40 UPD40 UPD74 UPD42 UPD43 UPD74 UPD42 INS60 MOV21 UPD42 UPD42 UPD43 UPD43 INS74 INS59 UPD43 UPD43 UPD74 UPD42 UPD42 INS43 INS43 INS42 INS32 UPD42 UPD42 UPD43 UPD42 INS32 INS42 INS42 INS32 INS42 INS32 UPD42 INS74 INS32 INS42 INS32 INS32 INS42 INS90 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 MOV43 INS32 INS42 INS86 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD42 UPD42 MOV32 INS42 INS59 INS14 INS42 UPD43 MOV43 MOV32 INS32 UPD42 UPD42 INS42 INS42 INS32 MOV42 UPD42 MOV42 DEL42 DEL33 DEL27 DEL32 DEL38 DEL27 DEL45 DEL32 DEL21 DEL32 DEL14 DEL42 DEL43 DEL42 DEL44 DEL8 DEL70