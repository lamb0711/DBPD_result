Merge trunk into the HDFS-347 branch.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-347@1467511 13f79535-47bb-0310-9956-ffa450edef68

+  private int globalMaxAppAttempts;
+    globalMaxAppAttempts = conf.getInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,
+        YarnConfiguration.DEFAULT_RM_AM_MAX_ATTEMPTS);
-            submissionContext.getApplicationName(),
-            submissionContext.getUser(), submissionContext.getQueue(),
-            submissionContext, this.scheduler, this.masterService,
-            submitTime);
+              submissionContext.getApplicationName(),
+              submissionContext.getAMContainerSpec().getUser(),
+              submissionContext.getQueue(),
+              submissionContext, this.scheduler, this.masterService,
+              submitTime);
+      boolean shouldRecover = true;
-        store.removeApplication(appState);
+        shouldRecover = false;
+      }
+      int individualMaxAppAttempts = appState.getApplicationSubmissionContext()
+          .getMaxAppAttempts();
+      int maxAppAttempts;
+      if (individualMaxAppAttempts <= 0 ||
+          individualMaxAppAttempts > globalMaxAppAttempts) {
+        maxAppAttempts = globalMaxAppAttempts;
+        LOG.warn("The specific max attempts: " + individualMaxAppAttempts
+            + " for application: " + appState.getAppId()
+            + " is invalid, because it is out of the range [1, "
+            + globalMaxAppAttempts + "]. Use the global max attempts instead.");
+        maxAppAttempts = individualMaxAppAttempts;
+      }
+      if(appState.getAttemptCount() >= maxAppAttempts) {
+        LOG.info("Not recovering application " + appState.getAppId() +
+            " due to recovering attempt is beyond maxAppAttempt limit");
+        shouldRecover = false;
+      }
+
+      if(shouldRecover) {
-                          appState.getSubmitTime());
+                        appState.getSubmitTime());
-                                                          appState.getAppId());
+                                                        appState.getAppId());
+      else {
+        store.removeApplication(appState);
+      }

INS23 INS83 INS39 INS59 INS42 INS21 INS7 INS42 INS32 INS60 INS25 INS60 INS60 INS25 INS25 INS42 INS42 INS40 INS40 INS39 INS59 MOV32 MOV8 INS39 INS59 INS39 INS59 INS27 INS8 INS8 INS27 INS8 INS42 INS8 INS42 INS9 INS21 INS42 INS32 INS42 INS27 INS27 INS21 INS21 INS21 INS32 INS42 INS21 INS21 MOV21 INS7 INS32 INS42 INS42 INS34 INS42 INS42 INS7 INS32 INS7 INS42 INS42 INS32 INS7 INS32 INS42 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS27 INS42 INS9 MOV42 INS42 INS45 INS42 INS45 INS32 INS45 INS42 INS45 INS45 INS32 INS45 INS42 INS42 INS42 INS42