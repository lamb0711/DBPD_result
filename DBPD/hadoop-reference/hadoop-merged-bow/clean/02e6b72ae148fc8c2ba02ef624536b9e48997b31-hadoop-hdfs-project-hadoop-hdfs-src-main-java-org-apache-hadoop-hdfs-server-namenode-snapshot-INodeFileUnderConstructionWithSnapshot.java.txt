HDFS-4481. Change fsimage to support snapshot file diffs.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1446000 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.List;
-
-   * The difference of an {@link INodeFileUnderConstruction} between two snapshots.
+   * Factory for {@link INodeFileUnderConstruction} diff.
-  static class FileUcDiff extends FileDiff {
-    private FileUcDiff(Snapshot snapshot, INodeFile file) {
-      super(snapshot, file);
-    }
+  static class FileUcDiffFactory extends FileDiffFactory {
+    static final FileUcDiffFactory INSTANCE = new FileUcDiffFactory();
-    INodeFileUnderConstruction createSnapshotCopyOfCurrentINode(INodeFile file) {
+    INodeFileUnderConstruction createSnapshotCopy(INodeFile file) {
-  /**
-   * A list of file diffs.
-   */
-  static class FileUcDiffList extends FileDiffList {
-    private FileUcDiffList(INodeFile currentINode, final List<FileDiff> diffs) {
-      super(currentINode, diffs);
-    }
-
-    @Override
-    FileDiff addSnapshotDiff(Snapshot snapshot) {
-      return addLast(new FileUcDiff(snapshot, getCurrentINode()));
-    }
-  }
-
-  private final FileUcDiffList diffs;
+  private final FileDiffList diffs;
+  private boolean isCurrentFileDeleted = false;
-      final DatanodeDescriptor clientNode) {
+      final DatanodeDescriptor clientNode,
+      final FileDiffList diffs) {
-    this.diffs = new FileUcDiffList(this, f instanceof FileWithSnapshot?
-        ((FileWithSnapshot)f).getFileDiffList().asList(): null);
+    this.diffs = diffs != null? diffs: new FileDiffList();
+    this.diffs.setFactory(FileUcDiffFactory.INSTANCE);
-  public INodeFileUnderConstructionWithSnapshot(INodeFileUnderConstruction f) {
-    this(f, f.getClientName(), f.getClientMachine(), f.getClientNode());
+  public INodeFileUnderConstructionWithSnapshot(INodeFileUnderConstruction f,
+      final FileDiffList diffs) {
+    this(f, f.getClientName(), f.getClientMachine(), f.getClientNode(), diffs);
-    final INodeFileWithSnapshot f = new INodeFileWithSnapshot(this);
+    final INodeFileWithSnapshot f = new INodeFileWithSnapshot(this, getDiffs());
-    return getParent() == null;
+    return isCurrentFileDeleted;
-    // if this object is NOT the latest snapshot copy, this object is created
-    // after the latest snapshot, then do NOT record modification.
-    if (this == getParent().getChild(getLocalNameBytes(), latest)) {
-      diffs.saveSelf2Snapshot(latest, null);
+    if (isInLatestSnapshot(latest)) {
+      diffs.saveSelf2Snapshot(latest, this, null);
-  public FileDiffList getFileDiffList() {
+  public FileDiffList getDiffs() {
-      clearReferences();
+      isCurrentFileDeleted = true;
-      if (diffs.deleteSnapshotDiff(snapshot, collectedBlocks) == null) {
+      if (diffs.deleteSnapshotDiff(snapshot, this, collectedBlocks) == null) {

INS23 UPD42 UPD43 INS23 INS83 INS83 MOV43 MOV59 INS39 INS59 INS44 INS44 UPD42 UPD42 INS83 INS83 INS43 INS59 UPD42 INS42 INS9 INS83 INS43 INS42 INS21 INS83 INS43 INS42 UPD66 UPD66 UPD42 MOV42 INS42 INS14 INS42 INS32 INS42 INS42 INS42 INS32 INS43 INS22 INS16 MOV22 INS42 INS40 UPD42 MOV42 MOV42 UPD42 MOV42 INS52 INS42 INS27 INS42 INS14 INS32 INS7 INS42 INS33 INS43 INS42 INS52 INS42 INS9 UPD42 MOV42 INS52 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL44 DEL43 DEL42 DEL44 DEL42 DEL42 DEL46 DEL8 DEL31 DEL66 DEL65 DEL29 DEL83 DEL42 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL46 DEL8 DEL31 DEL42 DEL78 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL32 DEL41 DEL8 DEL31 DEL55 DEL83 DEL42 DEL43 DEL42 DEL43 DEL52 DEL42 DEL42 DEL43 DEL62 DEL43 DEL42 DEL11 DEL36 DEL42 DEL32 DEL42 DEL32 DEL33 DEL16 DEL14 DEL42 DEL32 DEL33 DEL27 DEL52 DEL32 DEL42 DEL42 DEL32 DEL32 DEL27 DEL42 DEL32