HDFS-13183. Addendum: Standby NameNode process getBlocks request to reduce Active load. Contributed by Xiaoqiao He.

-   * If set balancerShouldRequestStandby true, Balancer will getBlocks from
+   * If set requestToStandby true, Balancer will getBlocks from
-  private boolean balancerShouldRequestStandby;
-  private NamenodeProtocol standbyNameNode;
+  private boolean requestToStandby;
+  private String nsId;
+  private Configuration config;
-    this.balancerShouldRequestStandby = conf.getBoolean(
+    this.requestToStandby = conf.getBoolean(
-    this.standbyNameNode = null;
+    this.config = conf;
-    if (nsId != null && HAUtil.isHAEnabled(conf, nsId)) {
-      List<ClientProtocol> namenodes =
-          HAUtil.getProxiesForAllNameNodesInNameservice(conf, nsId);
-      for (ClientProtocol proxy : namenodes) {
-        try {
-          if (proxy.getHAServiceState().equals(
-              HAServiceProtocol.HAServiceState.STANDBY)) {
-            this.standbyNameNode = NameNodeProxies.createNonHAProxy(
-                conf, RPC.getServerAddress(proxy), NamenodeProtocol.class,
-                UserGroupInformation.getCurrentUser(), false).getProxy();
-            break;
-          }
-        } catch (Exception e) {
-          //Ignore the exception while connecting to a namenode.
-          LOG.debug("Error while connecting to namenode", e);
-        }
-      }
-    }
+    this.nsId = nsId;
-    boolean isRequestStandby = true;
+    boolean isRequestStandby = false;
+    NamenodeProtocol nnproxy = null;
-      if (balancerShouldRequestStandby && standbyNameNode != null) {
-        return standbyNameNode.getBlocks(datanode, size, minBlockSize);
+      if (requestToStandby && nsId != null
+          && HAUtil.isHAEnabled(config, nsId)) {
+        List<ClientProtocol> namenodes =
+            HAUtil.getProxiesForAllNameNodesInNameservice(config, nsId);
+        for (ClientProtocol proxy : namenodes) {
+          try {
+            if (proxy.getHAServiceState().equals(
+                HAServiceProtocol.HAServiceState.STANDBY)) {
+              NamenodeProtocol sbn = NameNodeProxies.createNonHAProxy(
+                  config, RPC.getServerAddress(proxy), NamenodeProtocol.class,
+                  UserGroupInformation.getCurrentUser(), false).getProxy();
+              nnproxy = sbn;
+              isRequestStandby = true;
+              break;
+            }
+          } catch (Exception e) {
+            // Ignore the exception while connecting to a namenode.
+            LOG.debug("Error while connecting to namenode", e);
+          }
+        }
+        if (nnproxy == null) {
+          LOG.warn("Request #getBlocks to Standby NameNode but meet exception,"
+              + " will fallback to normal way.");
+          nnproxy = namenode;
+        }
-        isRequestStandby = false;
+        nnproxy = namenode;
-    } catch (Exception e) {
-      LOG.warn("Request #getBlocks to Standby NameNode but meet exception, " +
-          "will fallback to normal way", e);
-      isRequestStandby = false;
+      return nnproxy.getBlocks(datanode, size, minBlockSize);
-    return namenode.getBlocks(datanode, size, minBlockSize);

MOV31 INS23 INS31 INS43 INS83 INS43 INS59 INS83 INS42 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV43 INS8 MOV29 MOV43 INS42 MOV44 MOV44 MOV44 MOV43 INS8 UPD42 INS42 UPD42 UPD42 MOV42 UPD42 MOV42 MOV17 MOV21 INS42 MOV25 INS60 INS60 INS54 UPD66 INS39 INS59 MOV43 INS59 MOV8 MOV8 INS42 INS22 INS42 INS42 INS9 INS42 INS33 INS41 UPD42 UPD42 INS52 INS42 INS27 INS8 INS32 MOV27 INS32 INS25 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS8 INS7 INS42 INS33 INS21 INS21 INS42 INS42 UPD42 INS32 INS7 INS42 INS42 INS27 INS42 INS42 INS45 INS45 INS60 INS21 INS43 INS59 INS7 INS42 INS42 MOV32 INS42 INS42 INS42 INS9 UPD42 DEL33 DEL42 DEL9 DEL42 DEL42 DEL42 DEL42 DEL32 DEL52 DEL42 DEL22 DEL42 DEL83 DEL42 DEL39 DEL9 DEL59 DEL60 DEL42 DEL42 DEL33 DEL27 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL45 DEL27 DEL42 DEL32 DEL21 DEL42 DEL9 DEL7 DEL21 DEL8 DEL12 DEL54 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31