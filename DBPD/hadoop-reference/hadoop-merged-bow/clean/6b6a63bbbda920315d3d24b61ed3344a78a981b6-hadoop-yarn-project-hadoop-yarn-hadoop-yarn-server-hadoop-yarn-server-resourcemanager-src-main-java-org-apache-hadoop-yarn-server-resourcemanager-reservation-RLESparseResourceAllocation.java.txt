Merge commit '456e901a4c5c639267ee87b8e5f1319f256d20c2' (HDFS-6407. Add sorting and pagination in the datanode tab of the NN Web UI. Contributed by Haohui Mai.) into HDFS-7285-merge

-import java.util.List;
-import org.apache.hadoop.yarn.api.records.ReservationRequest;
-import org.apache.hadoop.yarn.util.Records;
- * allocations over time
+ * allocations over time.
-   * 
+   *
-   * @param capacity the resource to be added
+   * @param totCap the resource to be added
-      ReservationRequest capacity) {
-    Resource totCap =
-        Resources.multiply(capacity.getCapability(),
-            (float) capacity.getNumContainers());
+      Resource totCap) {
-   * Add multiple resources for the specified interval
-   * 
-   * @param reservationInterval the interval for which the resource is to be
-   *          added
-   * @param ReservationRequests the resources to be added
-   * @param clusterResource the total resources in the cluster
-   * @return true if addition is successful, false otherwise
-   */
-  public boolean addCompositeInterval(ReservationInterval reservationInterval,
-      List<ReservationRequest> ReservationRequests, Resource clusterResource) {
-    ReservationRequest aggregateReservationRequest =
-        Records.newRecord(ReservationRequest.class);
-    Resource capacity = Resource.newInstance(0, 0);
-    for (ReservationRequest ReservationRequest : ReservationRequests) {
-      Resources.addTo(capacity, Resources.multiply(
-          ReservationRequest.getCapability(),
-          ReservationRequest.getNumContainers()));
-    }
-    aggregateReservationRequest.setNumContainers((int) Math.ceil(Resources
-        .divide(resourceCalculator, clusterResource, capacity, minAlloc)));
-    aggregateReservationRequest.setCapability(minAlloc);
-
-    return addInterval(reservationInterval, aggregateReservationRequest);
-  }
-
-  /**
-   * 
+   *
-   * @param capacity the resource to be removed
+   * @param totCap the resource to be removed
-      ReservationRequest capacity) {
-    Resource totCap =
-        Resources.multiply(capacity.getCapability(),
-            (float) capacity.getNumContainers());
+      Resource totCap) {
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
-   * 
+   *
+  /**
+   * Returns the representation of the current resources allocated over time as
+   * an interval map.
+   *
+   * @return the representation of the current resources allocated over time as
+   *         an interval map.
+   */
+  public Map<ReservationInterval, Resource> toIntervalMap() {
+
+    readLock.lock();
+    try {
+      Map<ReservationInterval, Resource> allocations =
+          new TreeMap<ReservationInterval, Resource>();
+
+      // Empty
+      if (isEmpty()) {
+        return allocations;
+      }
+
+      Map.Entry<Long, Resource> lastEntry = null;
+      for (Map.Entry<Long, Resource> entry : cumulativeCapacity.entrySet()) {
+
+        if (lastEntry != null) {
+          ReservationInterval interval =
+              new ReservationInterval(lastEntry.getKey(), entry.getKey());
+          Resource resource = lastEntry.getValue();
+
+          allocations.put(interval, resource);
+        }
+
+        lastEntry = entry;
+      }
+      return allocations;
+    } finally {
+      readLock.unlock();
+    }
+
+  }
+

MOV31 MOV44 INS74 INS42 INS8 UPD66 MOV43 INS42 UPD42 UPD65 INS43 INS43 MOV43 INS21 INS54 UPD42 UPD42 UPD66 UPD66 UPD66 INS66 INS42 MOV42 INS32 INS8 INS8 INS42 INS42 INS60 INS25 MOV60 INS70 INS41 INS21 INS74 INS59 INS32 INS8 INS74 INS59 MOV44 INS32 INS8 INS42 INS32 UPD43 MOV43 UPD43 MOV43 INS43 INS42 INS14 UPD42 MOV42 INS41 INS43 INS43 INS43 INS42 INS33 INS74 UPD42 INS42 UPD42 MOV42 INS25 INS21 UPD42 MOV42 UPD42 MOV42 UPD42 UPD42 INS42 INS74 INS42 INS40 INS42 INS42 INS43 INS43 INS43 INS27 INS8 INS7 INS43 INS43 INS43 INS40 INS42 UPD42 MOV42 INS42 INS33 INS60 INS60 INS21 INS42 INS42 UPD42 MOV42 INS42 INS42 INS43 INS59 MOV43 INS59 INS32 INS42 INS42 INS14 INS42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS43 INS32 INS32 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL39 DEL42 DEL42 DEL32 DEL11 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL39 DEL42 DEL42 DEL32 DEL11 DEL32 DEL59 DEL60 DEL66 DEL65 DEL42 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL42 DEL42 DEL34 DEL34 DEL32 DEL59 DEL43 DEL39 DEL42 DEL43 DEL42 DEL44 DEL74 DEL42 DEL44 DEL43 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL32 DEL32 DEL21 DEL8 DEL70 DEL42 DEL39 DEL42 DEL42 DEL42 DEL32 DEL32 DEL11 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL32 DEL41 DEL8