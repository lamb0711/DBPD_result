HDDS-887. Add DispatcherContext info to Dispatcher from containerStateMachine. Contributed by Shashikant Banerjee.

+import org.apache.hadoop.ozone.container.common.transport.server.ratis
+    .DispatcherContext;
+import org.apache.hadoop.ozone.container.common.transport.server.ratis
+    .DispatcherContext.WriteChunkStage;
-import static org.apache.hadoop.hdds.protocol.datanode.proto.ContainerProtos
-    .Stage;
-      ContainerCommandRequestProto request, Container container) {
+      ContainerCommandRequestProto request, Container container,
+      DispatcherContext dispatcherContext) {
-      return handlePutBlock(request, kvContainer);
+      return handlePutBlock(request, kvContainer, dispatcherContext);
-      return handleReadChunk(request, kvContainer);
+      return handleReadChunk(request, kvContainer, dispatcherContext);
-      return handleWriteChunk(request, kvContainer);
+      return handleWriteChunk(request, kvContainer, dispatcherContext);
-      return handlePutSmallFile(request, kvContainer);
+      return handlePutSmallFile(request, kvContainer, dispatcherContext);
-      ContainerCommandRequestProto request, KeyValueContainer kvContainer) {
+      ContainerCommandRequestProto request, KeyValueContainer kvContainer,
+      DispatcherContext dispatcherContext) {
+    BlockData blockData;
-      BlockData blockData = BlockData.getFromProtoBuf(
+      blockData = BlockData.getFromProtoBuf(
+      long bcsId =
+          dispatcherContext == null ? 0 : dispatcherContext.getLogIndex();
+      blockData.setBlockCommitSequenceId(bcsId);
-      blockLength = blockManager.putBlock(kvContainer, blockData);
+      blockManager.putBlock(kvContainer, blockData);
-    return BlockUtils.putBlockResponseSuccess(request, blockLength);
+    return BlockUtils.putBlockResponseSuccess(request, blockData);
-      ContainerCommandRequestProto request, KeyValueContainer kvContainer) {
+      ContainerCommandRequestProto request, KeyValueContainer kvContainer,
+      DispatcherContext dispatcherContext) {
-      data = chunkManager.readChunk(kvContainer, blockID, chunkInfo,
-          request.getReadChunk().getReadFromTmpFile());
+      boolean isReadFromTmpFile = dispatcherContext == null ? false :
+          dispatcherContext.isReadFromTmpFile();
+      data = chunkManager
+          .readChunk(kvContainer, blockID, chunkInfo, isReadFromTmpFile);
-      ContainerCommandRequestProto request, KeyValueContainer kvContainer) {
+      ContainerCommandRequestProto request, KeyValueContainer kvContainer,
+      DispatcherContext dispatcherContext) {
-      if (request.getWriteChunk().getStage() == Stage.WRITE_DATA ||
-          request.getWriteChunk().getStage() == Stage.COMBINED) {
+      WriteChunkStage stage =
+          dispatcherContext == null ? WriteChunkStage.COMBINED :
+              dispatcherContext.getStage();
+      if (stage == WriteChunkStage.WRITE_DATA ||
+          stage == WriteChunkStage.COMBINED) {
-      chunkManager.writeChunk(kvContainer, blockID, chunkInfo, data,
-          request.getWriteChunk().getStage());
+      chunkManager.writeChunk(kvContainer, blockID, chunkInfo, data, stage);
-      if (request.getWriteChunk().getStage() == Stage.WRITE_DATA ||
-          request.getWriteChunk().getStage() == Stage.COMBINED) {
+      if (stage == WriteChunkStage.WRITE_DATA||
+          stage == WriteChunkStage.COMBINED) {
-      ContainerCommandRequestProto request, KeyValueContainer kvContainer) {
+      ContainerCommandRequestProto request, KeyValueContainer kvContainer,
+      DispatcherContext dispatcherContext) {
+    BlockData blockData;
-      BlockData blockData = BlockData.getFromProtoBuf(
+      blockData = BlockData.getFromProtoBuf(
+      WriteChunkStage stage =
+          dispatcherContext == null ? WriteChunkStage.COMBINED :
+              dispatcherContext.getStage();
-      chunkManager.writeChunk(
-          kvContainer, blockID, chunkInfo, data, Stage.COMBINED);
+      chunkManager.writeChunk(kvContainer, blockID, chunkInfo, data, stage);
-      // TODO: add bcsId as a part of putSmallFile transaction
+      long bcsId =
+          dispatcherContext == null ? 0 : dispatcherContext.getLogIndex();
+      blockData.setBlockCommitSequenceId(bcsId);
+
-    return SmallFileUtils.getPutFileResponseSuccess(request);
+    return SmallFileUtils.getPutFileResponseSuccess(request, blockData);

MOV26 INS26 INS40 UPD40 INS44 INS44 INS44 INS44 INS44 INS43 INS42 INS43 INS42 INS60 INS43 INS42 INS43 INS42 INS43 INS42 INS60 INS42 INS42 MOV43 INS59 MOV60 INS42 INS42 INS42 MOV43 INS59 MOV60 INS42 INS21 INS21 INS21 UPD42 INS60 INS60 INS42 INS21 INS60 INS21 INS42 INS42 INS42 INS42 INS42 INS7 INS39 INS32 INS32 INS39 INS59 INS43 INS59 INS7 INS43 INS39 INS59 INS32 INS42 MOV32 UPD42 INS16 INS42 INS42 INS42 MOV42 MOV42 MOV42 MOV42 INS42 INS16 INS42 INS42 INS16 UPD42 MOV42 INS42 MOV32 INS42 UPD42 INS16 INS42 INS42 INS16 INS42 INS42 INS42 INS27 INS34 INS32 INS27 INS9 INS32 UPD42 MOV42 INS27 INS40 INS32 INS42 UPD40 INS42 UPD40 INS42 UPD40 INS42 UPD40 INS27 INS40 INS32 INS27 INS34 INS32 INS42 INS33 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS33 INS42 INS42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL40