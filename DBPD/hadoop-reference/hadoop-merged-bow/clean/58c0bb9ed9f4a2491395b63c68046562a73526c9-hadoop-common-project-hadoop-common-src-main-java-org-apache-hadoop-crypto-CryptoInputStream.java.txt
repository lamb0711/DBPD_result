HDFS-6606. Optimize HDFS Encrypted Transport performance. (yliu)

+import java.nio.channels.ReadableByteChannel;
-    CanSetDropBehind, CanSetReadahead, HasEnhancedByteBufferAccess {
+    CanSetDropBehind, CanSetReadahead, HasEnhancedByteBufferAccess, 
+    ReadableByteChannel {
+  private final boolean isByteBufferReadable;
+  private final boolean isReadableByteChannel;
+    isByteBufferReadable = in instanceof ByteBufferReadable;
+    isReadableByteChannel = in instanceof ReadableByteChannel;
-        if (in instanceof ByteBufferReadable) {
+        if (isByteBufferReadable || isReadableByteChannel) {
-            n = ((ByteBufferReadable) in).read(inBuffer);
+            n = isByteBufferReadable ? 
+                ((ByteBufferReadable) in).read(inBuffer) : 
+                  ((ReadableByteChannel) in).read(inBuffer);
-          n = ((ByteBufferReadable) in).read(inBuffer);
+          n = isByteBufferReadable ? ((ByteBufferReadable) in).read(inBuffer) : 
+                ((ReadableByteChannel) in).read(inBuffer);
-    if (in instanceof ByteBufferReadable) {
+    if (isByteBufferReadable || isReadableByteChannel) {
-      final int n = ((ByteBufferReadable) in).read(buf);
+      final int n = isByteBufferReadable ? ((ByteBufferReadable) in).read(buf) : 
+            ((ReadableByteChannel) in).read(buf);
+    } else {
+      int n = 0;
+      if (buf.hasArray()) {
+        n = read(buf.array(), buf.position(), buf.remaining());
+        if (n > 0) {
+          buf.position(buf.position() + n);
+        }
+      } else {
+        byte[] tmp = new byte[buf.remaining()];
+        n = read(tmp);
+        if (n > 0) {
+          buf.put(tmp, 0, n);
+        }
+      }
+      return n;
-
-    throw new UnsupportedOperationException("ByteBuffer read unsupported " +
-        "by input stream.");
+
+  @Override
+  public boolean isOpen() {
+    return !closed;
+  }

INS26 INS40 INS43 INS23 INS23 INS31 INS42 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 MOV8 INS78 INS83 INS39 INS42 INS8 INS42 INS42 INS21 INS21 MOV21 MOV25 MOV60 INS42 INS41 INS7 INS7 MOV27 MOV8 INS8 INS27 INS8 INS38 INS42 MOV62 INS42 INS62 MOV60 MOV25 MOV25 MOV21 MOV21 MOV21 MOV21 MOV21 MOV41 INS42 INS42 INS60 INS25 INS41 INS42 INS42 INS43 MOV27 INS8 INS8 MOV7 MOV7 INS39 INS59 INS32 INS8 INS8 INS42 INS42 INS42 INS25 MOV25 INS25 MOV42 MOV32 INS16 INS42 INS34 INS42 INS42 INS21 INS25 INS60 INS21 INS25 INS27 INS8 MOV8 INS42 MOV8 MOV8 MOV42 MOV42 MOV42 UPD42 UPD42 MOV42 MOV42 MOV42 MOV32 INS42 MOV32 INS32 INS7 INS27 INS8 INS5 INS59 INS7 INS27 INS8 INS42 INS42 INS54 INS21 UPD42 MOV42 INS36 INS42 INS42 INS42 INS32 INS42 INS34 INS21 INS39 INS85 INS42 INS3 INS42 INS32 INS42 INS34 INS21 INS8 MOV12 INS7 INS11 INS42 INS32 INS32 INS32 INS32 INS5 INS32 INS42 INS42 INS32 INS21 MOV21 INS16 INS42 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS39 INS85 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS7 INS42 INS42 MOV32 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS16 INS36 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS11 MOV36 INS42 INS42 INS36 INS42 INS42 INS43 INS42 INS11 INS42 INS43 INS42 INS42 DEL54 DEL8 DEL42 DEL8 DEL25 DEL8 DEL25 DEL8 DEL42 DEL42 DEL43 DEL62 DEL42 DEL43 DEL45 DEL45 DEL27 DEL14 DEL53