Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1173012 13f79535-47bb-0310-9956-ffa450edef68

+import java.text.NumberFormat;
-public interface JobId {
+/**
+ * <p><code>JobId</code> represents the <em>globally unique</em> 
+ * identifier for a MapReduce job.</p>
+ * 
+ * <p>The globally unique nature of the identifier is achieved by using the 
+ * <em>cluster timestamp</em> from the associated ApplicationId. i.e. 
+ * start-time of the <code>ResourceManager</code> along with a monotonically
+ * increasing counter for the jobId.</p>
+ */
+public abstract class JobId implements Comparable<JobId> {
+
+  /**
+   * Get the associated <em>ApplicationId</em> which represents the 
+   * start time of the <code>ResourceManager</code> and is used to generate 
+   * the globally unique <code>JobId</code>.
+   * @return associated <code>ApplicationId</code>
+   */
+  
+  /**
+   * Get the short integer identifier of the <code>JobId</code>
+   * which is unique for all applications started by a particular instance
+   * of the <code>ResourceManager</code>.
+   * @return short integer identifier of the <code>JobId</code>
+   */
-}
+
+  protected static final String JOB = "job";
+  protected static final char SEPARATOR = '_';
+  static final ThreadLocal<NumberFormat> jobIdFormat =
+      new ThreadLocal<NumberFormat>() {
+        @Override
+        public NumberFormat initialValue() {
+          NumberFormat fmt = NumberFormat.getInstance();
+          fmt.setGroupingUsed(false);
+          fmt.setMinimumIntegerDigits(4);
+          return fmt;
+        }
+      };
+
+  @Override
+  public String toString() {
+    StringBuilder builder = new StringBuilder(JOB);
+    builder.append(SEPARATOR);
+    builder.append(getAppId().getClusterTimestamp());
+    builder.append(SEPARATOR);
+    builder.append(jobIdFormat.get().format(getId()));
+    return builder.toString();
+  }
+
+  @Override
+  public int hashCode() {
+    final int prime = 31;
+    int result = 1;
+    result = prime * result + getAppId().hashCode();
+    result = prime * result + getId();
+    return result;
+  }
+
+  @Override
+  public boolean equals(Object obj) {
+    if (this == obj)
+      return true;
+    if (obj == null)
+      return false;
+    if (getClass() != obj.getClass())
+      return false;
+    JobId other = (JobId) obj;
+    if (!this.getAppId().equals(other.getAppId()))
+      return false;
+    if (this.getId() != other.getId())
+      return false;
+    return true;
+  }
+
+  @Override
+  public int compareTo(JobId other) {
+    int appIdComp = this.getAppId().compareTo(other.getAppId());
+    if (appIdComp == 0) {
+      return this.getId() - other.getId();
+    } else {
+      return appIdComp;
+    }
+  }
+}

INS26 INS40 INS29 INS83 INS74 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS65 INS43 INS43 INS29 INS29 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS39 INS59 INS83 INS83 INS74 INS59 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS42 INS65 INS65 INS65 INS65 INS42 INS42 INS45 INS42 INS13 INS43 INS43 INS42 INS14 INS42 INS42 INS60 INS21 INS21 INS21 INS21 INS41 INS42 INS60 INS60 INS21 INS21 INS41 INS42 INS43 INS42 INS25 INS25 INS25 INS60 INS25 INS25 INS41 INS42 INS43 INS42 INS60 INS25 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS42 INS74 INS1 INS43 INS59 INS32 INS32 INS32 INS32 INS32 INS83 INS39 INS59 INS39 INS59 INS7 INS7 INS42 INS42 INS27 INS41 INS27 INS41 INS27 INS41 INS43 INS59 INS38 INS41 INS27 INS41 INS9 INS42 INS39 INS59 INS27 INS8 INS8 INS43 INS43 INS31 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS34 INS42 INS34 INS42 INS27 INS42 INS27 INS52 INS42 INS9 INS42 INS33 INS9 INS32 INS32 INS9 INS42 INS42 INS11 INS32 INS9 INS32 INS32 INS9 INS42 INS32 INS42 INS34 INS41 INS41 INS42 INS42 INS78 INS83 INS43 INS42 INS8 INS43 INS42 INS32 INS42 INS32 INS42 INS32 INS27 INS32 INS27 INS32 INS42 INS42 INS42 INS43 INS42 INS32 INS42 INS32 INS52 INS42 INS42 INS42 INS32 INS42 INS32 INS27 INS42 INS42 INS42 INS60 INS21 INS21 INS41 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS32 INS32 INS43 INS59 INS32 INS32 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS34 INS42 INS42