YARN-5586. Update the Resources class to consider all resource types. Contributed by Varun Vasudev.

+import org.apache.hadoop.yarn.util.UnitsConversionUtil;
+      // this is a fix for getVirtualCores returning an int
+      if (resourceValue > Integer.MAX_VALUE) {
+        tmp.get(ResourceInformation.VCORES.getName())
+            .setValue((long) Integer.MAX_VALUE);
+      }
-    return createResource(res.getMemorySize(), res.getVirtualCores());
+    Resource ret = Resource.newInstance(0, 0);
+    for (Map.Entry<String, ResourceInformation> entry : res.getResources()
+        .entrySet()) {
+      ret.setResourceInformation(entry.getKey(),
+          ResourceInformation.newInstance(entry.getValue()));
+    }
+    return ret;
-    lhs.setMemorySize(lhs.getMemorySize() + rhs.getMemorySize());
-    lhs.setVirtualCores(lhs.getVirtualCores() + rhs.getVirtualCores());
+    for (Map.Entry<String, ResourceInformation> entry : lhs.getResources()
+        .entrySet()) {
+      String name = entry.getKey();
+      try {
+        ResourceInformation rhsValue = rhs.getResourceInformation(name);
+        ResourceInformation lhsValue = entry.getValue();
+        Long convertedRhs = UnitsConversionUtil
+            .convert(rhsValue.getUnits(), lhsValue.getUnits(),
+                rhsValue.getValue());
+        lhs.setResourceValue(name, lhsValue.getValue() + convertedRhs);
+      } catch (YarnException ye) {
+        continue;
+      }
+    }
-    lhs.setMemorySize(lhs.getMemorySize() - rhs.getMemorySize());
-    lhs.setVirtualCores(lhs.getVirtualCores() - rhs.getVirtualCores());
+    for (Map.Entry<String, ResourceInformation> entry : lhs.getResources()
+        .entrySet()) {
+      String name = entry.getKey();
+      try {
+        ResourceInformation rhsValue = rhs.getResourceInformation(name);
+        ResourceInformation lhsValue = entry.getValue();
+        Long convertedRhs = UnitsConversionUtil
+            .convert(rhsValue.getUnits(), lhsValue.getUnits(),
+                rhsValue.getValue());
+        lhs.setResourceValue(name, lhsValue.getValue() - convertedRhs);
+      } catch (YarnException ye) {
+        continue;
+      }
+    }
-    lhs.setMemorySize((long)(lhs.getMemorySize() * by));
-    lhs.setVirtualCores((int)(lhs.getVirtualCores() * by));
+    for (Map.Entry<String, ResourceInformation> entry : lhs.getResources()
+        .entrySet()) {
+      String name = entry.getKey();
+      ResourceInformation lhsValue = entry.getValue();
+      lhs.setResourceValue(name, (long) (lhsValue.getValue() * by));
+    }
-    lhs.setMemorySize(lhs.getMemorySize() + (long)(rhs.getMemorySize() * by));
-    lhs.setVirtualCores(lhs.getVirtualCores()
-        + (int)(rhs.getVirtualCores() * by));
+    for (Map.Entry<String, ResourceInformation> entry : lhs.getResources()
+        .entrySet()) {
+      String name = entry.getKey();
+      try {
+        ResourceInformation rhsValue = rhs.getResourceInformation(name);
+        ResourceInformation lhsValue = entry.getValue();
+        Long convertedRhs = (long) (UnitsConversionUtil
+            .convert(rhsValue.getUnits(), lhsValue.getUnits(),
+                rhsValue.getValue()) * by);
+        lhs.setResourceValue(name, lhsValue.getValue() + convertedRhs);
+      } catch (YarnException ye) {
+        continue;
+      }
+    }
-    out.setMemorySize((long)(lhs.getMemorySize() * by));
-    out.setVirtualCores((int)(lhs.getVirtualCores() * by));
+    for (Map.Entry<String, ResourceInformation> entry : out.getResources()
+        .entrySet()) {
+      String name = entry.getKey();
+      ResourceInformation lhsValue = entry.getValue();
+      out.setResourceValue(name, (long) (lhsValue.getValue() * by));
+    }
-    return smaller.getMemorySize() <= bigger.getMemorySize() &&
-        smaller.getVirtualCores() <= bigger.getVirtualCores();
+    for (Map.Entry<String, ResourceInformation> entry : smaller.getResources()
+        .entrySet()) {
+      String name = entry.getKey();
+      try {
+        ResourceInformation rhsValue = bigger.getResourceInformation(name);
+        ResourceInformation lhsValue = entry.getValue();
+        Long convertedRhs = UnitsConversionUtil
+            .convert(rhsValue.getUnits(), lhsValue.getUnits(),
+                rhsValue.getValue());
+        if(lhsValue.getValue() > convertedRhs) {
+          return false;
+        }
+      } catch (YarnException ye) {
+        return false;
+      }
+    }
+    return true;
-    return createResource(Math.min(lhs.getMemorySize(), rhs.getMemorySize()),
-        Math.min(lhs.getVirtualCores(), rhs.getVirtualCores()));
+    Resource ret = createResource(0);
+    for (Map.Entry<String, ResourceInformation> entry : lhs.getResources()
+        .entrySet()) {
+      String name = entry.getKey();
+      try {
+        ResourceInformation rhsValue = rhs.getResourceInformation(name);
+        ResourceInformation lhsValue = entry.getValue();
+        Long convertedRhs = UnitsConversionUtil
+            .convert(rhsValue.getUnits(), lhsValue.getUnits(),
+                rhsValue.getValue());
+        ResourceInformation outInfo =
+            lhsValue.getValue() < convertedRhs ? lhsValue : rhsValue;
+        ret.setResourceInformation(name, outInfo);
+      } catch (YarnException ye) {
+        continue;
+      }
+    }
+    return ret;
-    return createResource(Math.max(lhs.getMemorySize(), rhs.getMemorySize()),
-        Math.max(lhs.getVirtualCores(), rhs.getVirtualCores()));
+    Resource ret = createResource(0);
+    for (Map.Entry<String, ResourceInformation> entry : lhs.getResources()
+        .entrySet()) {
+      String name = entry.getKey();
+      try {
+        ResourceInformation rhsValue = rhs.getResourceInformation(name);
+        ResourceInformation lhsValue = entry.getValue();
+        Long convertedRhs = UnitsConversionUtil
+            .convert(rhsValue.getUnits(), lhsValue.getUnits(),
+                rhsValue.getValue());
+        ResourceInformation outInfo =
+            lhsValue.getValue() > convertedRhs ? lhsValue : rhsValue;
+        ret.setResourceInformation(name, outInfo);
+      } catch (YarnException ye) {
+        continue;
+      }
+    }
+    return ret;

INS26 INS40 MOV43 MOV44 MOV44 MOV43 MOV44 MOV44 MOV43 MOV44 MOV43 MOV44 MOV44 MOV43 MOV44 MOV44 INS60 INS70 INS41 INS70 MOV41 INS70 MOV41 INS70 MOV41 INS70 MOV41 INS70 INS70 INS41 INS60 INS70 INS41 INS60 INS70 INS41 INS25 INS43 INS59 INS44 INS32 INS8 INS42 INS44 INS32 INS8 INS44 INS32 INS8 INS44 INS32 INS8 INS44 INS32 INS8 INS44 INS32 INS8 INS44 INS32 INS8 INS9 INS43 INS59 INS44 INS32 INS8 INS42 INS43 INS59 INS44 INS32 INS8 INS42 INS27 INS8 INS42 INS42 INS32 INS74 INS42 MOV32 INS42 INS21 INS74 INS42 INS32 INS42 INS60 INS54 INS74 INS42 INS32 INS42 INS60 INS54 INS74 INS42 INS32 INS42 INS60 INS60 MOV21 INS74 INS42 INS32 INS42 INS60 INS54 INS74 INS42 INS32 INS42 INS60 INS60 MOV21 INS74 INS42 INS32 INS42 INS60 INS54 INS42 INS42 INS32 INS74 INS42 MOV32 INS42 INS60 INS54 INS42 INS42 INS32 INS74 INS42 MOV32 INS42 INS60 INS54 INS42 INS40 INS21 INS42 INS42 INS34 INS34 INS43 INS43 INS43 UPD42 INS32 INS43 INS43 INS43 MOV42 INS42 INS43 INS59 INS8 INS12 INS43 INS43 INS43 MOV42 INS42 INS43 INS59 INS8 INS12 INS43 INS43 INS43 MOV42 INS42 INS43 INS59 INS43 INS59 INS43 INS43 INS43 MOV42 INS42 INS43 INS59 INS8 INS12 INS43 INS43 INS43 MOV42 INS42 INS43 INS59 INS43 INS59 INS43 INS43 INS43 MOV42 UPD42 MOV42 INS43 INS59 INS8 INS12 MOV42 INS34 INS43 INS43 INS43 UPD42 INS43 INS59 INS8 INS12 MOV42 INS34 INS43 INS43 INS43 UPD42 INS43 INS59 INS8 INS12 INS32 INS40 INS42 INS42 UPD42 MOV42 INS42 INS32 INS32 INS40 INS42 INS42 INS42 INS42 INS32 INS60 INS60 INS60 MOV21 INS44 INS8 INS40 INS42 INS42 INS42 INS42 INS32 INS60 INS60 INS60 MOV21 INS44 INS8 INS40 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 UPD42 INS42 INS40 INS42 INS42 INS42 INS42 INS32 INS60 INS60 INS60 MOV21 INS44 INS8 INS40 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 UPD42 INS42 INS40 INS42 INS42 INS42 INS42 INS32 INS60 INS60 INS60 INS25 INS44 INS8 INS40 INS42 INS42 INS42 INS42 INS32 INS60 INS60 INS60 INS60 INS21 INS44 INS8 INS40 INS42 INS42 INS42 INS42 INS32 INS60 INS60 INS60 INS60 INS21 INS44 INS8 INS32 INS42 INS11 INS42 INS42 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS42 INS18 UPD42 MOV42 UPD42 MOV42 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS42 INS18 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD39 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS42 INS18 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD39 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS27 INS8 INS43 INS42 INS41 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS43 INS42 INS18 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS43 INS42 INS18 INS42 INS42 INS32 INS39 INS40 INS42 UPD42 MOV42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 UPD42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 UPD42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS11 UPD42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS41 INS42 INS9 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS16 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS16 INS42 INS42 INS42 INS42 INS42 INS40 INS42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 MOV39 MOV36 INS42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS9 MOV42 UPD42 MOV42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS32 MOV32 MOV32 INS27 INS42 INS42 MOV42 UPD42 MOV42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS32 MOV32 MOV32 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 INS32 INS42 INS42 INS42 UPD42 UPD42 UPD42 UPD42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 DEL42 DEL32 DEL32 DEL41 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL27 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL27 DEL32 DEL21 DEL42 DEL39 DEL32 DEL42 DEL27 DEL36 DEL11 DEL32 DEL21 DEL32 DEL39 DEL42 DEL42 DEL32 DEL42 DEL27 DEL36 DEL11 DEL42 DEL32 DEL11 DEL27 DEL32 DEL21 DEL42 DEL39 DEL32 DEL42 DEL27 DEL36 DEL11 DEL32 DEL21 DEL32 DEL32 DEL27 DEL32 DEL32 DEL27 DEL27 DEL41 DEL42 DEL42 DEL32 DEL32 DEL32 DEL32 DEL41 DEL42 DEL42 DEL32 DEL32 DEL32 DEL32 DEL41