Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1196458 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.server.resourcemanager.security.DelegationTokenRenewer;
+import org.apache.hadoop.yarn.server.security.ApplicationACLsManager;
+import org.apache.hadoop.yarn.server.webproxy.AppReportFetcher;
+import org.apache.hadoop.yarn.server.webproxy.WebAppProxy;
+import org.apache.hadoop.yarn.server.webproxy.WebAppProxyServlet;
+import org.apache.hadoop.yarn.server.webproxy.ProxyUriUtils;
+import org.apache.hadoop.yarn.webapp.WebApps.Builder;
-  private YarnConfiguration conf;
+  protected ApplicationACLsManager applicationACLsManager;
-  
+
+  private Configuration conf;
+
+    this.conf = conf;
+
+    DelegationTokenRenewer tokenRenewer = createDelegationTokenRenewer();
+    addService(tokenRenewer);
+    
-        this.containerAllocationExpirer, amLivelinessMonitor);
+        this.containerAllocationExpirer, amLivelinessMonitor, tokenRenewer);
-    // Initialize the config
-    this.conf = new YarnConfiguration(conf);
-      this.scheduler.reinitialize(this.conf,
+      this.scheduler.reinitialize(conf,
+    this.applicationACLsManager = new ApplicationACLsManager(conf);
+
-    adminService = createAdminService();
+    adminService = createAdminService(clientRM, masterService, resourceTracker);
-    return 
-    ReflectionUtils.newInstance(
-        conf.getClass(YarnConfiguration.RM_SCHEDULER, 
-            FifoScheduler.class, ResourceScheduler.class), 
-        this.conf);
+    return ReflectionUtils.newInstance(this.conf.getClass(
+        YarnConfiguration.RM_SCHEDULER, FifoScheduler.class,
+        ResourceScheduler.class), this.conf);
+  
+  protected DelegationTokenRenewer createDelegationTokenRenewer() {
+    return new DelegationTokenRenewer();
+  }
-        this.scheduler, this.masterService, this.conf);
+        this.scheduler, this.masterService, this.applicationACLsManager,
+        this.conf);
+      this.eventProcessor.setName("ResourceManager Event Processor");
-    webApp = WebApps.$for("cluster", masterService).at(
-        conf.get(YarnConfiguration.RM_WEBAPP_ADDRESS,
-        YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS)).
-      start(new RMWebApp(this));
-
+    Builder<ApplicationMasterService> builder = 
+      WebApps.$for("cluster", masterService).at(
+          this.conf.get(YarnConfiguration.RM_WEBAPP_ADDRESS,
+          YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS)); 
+    if(YarnConfiguration.getRMWebAppHostAndPort(conf).
+        equals(YarnConfiguration.getProxyHostAndPort(conf))) {
+      AppReportFetcher fetcher = new AppReportFetcher(conf, getClientRMService());
+      builder.withServlet(ProxyUriUtils.PROXY_SERVLET_NAME, 
+          ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);
+      builder.withAttribute(WebAppProxy.FETCHER_ATTRIBUTE, fetcher);
+    }
+    webApp = builder.start(new RMWebApp(this));
-    SecurityUtil.login(conf, YarnConfiguration.RM_KEYTAB,
+    SecurityUtil.login(this.conf, YarnConfiguration.RM_KEYTAB,
-    return new ClientRMService(this.rmContext, scheduler, this.rmAppManager);
+    return new ClientRMService(this.rmContext, scheduler, this.rmAppManager,
+        this.applicationACLsManager);
-  protected AdminService createAdminService() {
-    return new AdminService(conf, scheduler, rmContext, this.nodesListManager);
+  protected AdminService createAdminService(
+      ClientRMService clientRMService, 
+      ApplicationMasterService applicationMasterService,
+      ResourceTrackerService resourceTrackerService) {
+    return new AdminService(this.conf, scheduler, rmContext,
+        this.nodesListManager, clientRMService, applicationMasterService,
+        resourceTrackerService);
+  @Private
+  public ApplicationACLsManager getApplicationACLsManager() {
+    return this.applicationACLsManager;
+  }
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 MOV23 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS31 INS83 INS43 INS59 UPD43 MOV21 INS83 INS43 INS42 INS8 INS44 INS44 INS44 INS78 INS83 INS43 INS42 INS8 INS42 INS42 UPD42 INS60 INS21 INS21 INS42 INS41 INS60 INS25 INS21 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS41 INS43 INS59 INS32 INS7 INS14 INS21 INS74 INS59 INS32 INS8 INS7 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS32 INS42 INS42 INS22 INS14 INS43 INS22 INS32 INS43 INS43 INS42 INS32 INS32 INS42 INS32 INS60 INS21 INS21 INS42 INS32 MOV22 INS22 INS22 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS43 INS42 INS42 INS42 INS42 INS22 INS42 INS52 INS42 INS22 INS42 INS45 INS42 INS42 MOV32 MOV42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS32 INS42 MOV42 MOV14 INS52 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS52 INS42 INS22 INS42 INS42 INS14 INS42 INS42 INS40 INS40 INS57 INS42 INS42 INS40 INS42 INS52 INS42 INS43 INS42 INS32 INS43 INS42 INS42 INS42 DEL42 DEL43 DEL42 DEL14 DEL42 DEL42 DEL42 DEL32 DEL32 DEL7 DEL21 DEL42 DEL42