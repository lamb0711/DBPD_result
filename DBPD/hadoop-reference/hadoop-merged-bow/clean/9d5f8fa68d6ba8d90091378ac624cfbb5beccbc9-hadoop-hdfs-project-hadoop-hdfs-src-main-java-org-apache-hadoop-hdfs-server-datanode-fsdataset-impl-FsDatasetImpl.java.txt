Merging r1616428 through r1616893 from trunk.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-6584@1616897 13f79535-47bb-0310-9956-ffa450edef68

+  private final Configuration conf;
+    this.conf = conf;
-    final List<FsVolumeImpl> volArray = new ArrayList<FsVolumeImpl>(
-        storage.getNumStorageDirs());
-    for (int idx = 0; idx < storage.getNumStorageDirs(); idx++) {
-      Storage.StorageDirectory sd = storage.getStorageDir(idx);
-      final File dir = sd.getCurrentDir();
-      final StorageType storageType = getStorageTypeFromLocations(dataLocations, sd.getRoot());
-      volArray.add(new FsVolumeImpl(this, sd.getStorageUuid(), dir, conf,
-          storageType));
-      LOG.info("Added volume - " + dir + ", StorageType: " + storageType);
-      storageMap.put(sd.getStorageUuid(),
-          new DatanodeStorage(sd.getStorageUuid(), DatanodeStorage.State.NORMAL, storageType));
-    }
-
-    volumes = new FsVolumeList(volArray, volsFailed, blockChooserImpl);
-    volumes.initializeReplicaMaps(volumeMap);
+    volumes = new FsVolumeList(volsFailed, blockChooserImpl);
+    asyncDiskService = new FsDatasetAsyncDiskService(datanode);
-    File[] roots = new File[storage.getNumStorageDirs()];
-      roots[idx] = storage.getStorageDir(idx).getCurrentDir();
+      addVolume(dataLocations, storage.getStorageDir(idx));
-    asyncDiskService = new FsDatasetAsyncDiskService(datanode, roots);
+
+  private void addVolume(Collection<StorageLocation> dataLocations,
+      Storage.StorageDirectory sd) throws IOException {
+    final File dir = sd.getCurrentDir();
+    final StorageType storageType =
+        getStorageTypeFromLocations(dataLocations, sd.getRoot());
+
+    // If IOException raises from FsVolumeImpl() or getVolumeMap(), there is
+    // nothing needed to be rolled back to make various data structures, e.g.,
+    // storageMap and asyncDiskService, consistent.
+    FsVolumeImpl fsVolume = new FsVolumeImpl(
+        this, sd.getStorageUuid(), dir, this.conf, storageType);
+    fsVolume.getVolumeMap(volumeMap);
+
+    volumes.addVolume(fsVolume);
+    storageMap.put(sd.getStorageUuid(),
+        new DatanodeStorage(sd.getStorageUuid(),
+                            DatanodeStorage.State.NORMAL,
+                            storageType));
+    asyncDiskService.addVolume(sd.getCurrentDir());
+
+    LOG.info("Added volume - " + dir + ", StorageType: " + storageType);
+  }
+
+  /**
+   * Add an array of StorageLocation to FsDataset.
+   *
+   * @pre dataStorage must have these volumes.
+   * @param volumes
+   * @throws IOException
+   */
+  @Override
+  public synchronized void addVolumes(Collection<StorageLocation> volumes)
+      throws IOException {
+    final Collection<StorageLocation> dataLocations =
+        DataNode.getStorageLocations(this.conf);
+    Map<String, Storage.StorageDirectory> allStorageDirs =
+        new HashMap<String, Storage.StorageDirectory>();
+    for (int idx = 0; idx < dataStorage.getNumStorageDirs(); idx++) {
+      Storage.StorageDirectory sd = dataStorage.getStorageDir(idx);
+      allStorageDirs.put(sd.getRoot().getAbsolutePath(), sd);
+    }
+
+    for (StorageLocation vol : volumes) {
+      String key = vol.getFile().getAbsolutePath();
+      if (!allStorageDirs.containsKey(key)) {
+        LOG.warn("Attempt to add an invalid volume: " + vol.getFile());
+      } else {
+        addVolume(dataLocations, allStorageDirs.get(key));
+      }
+    }
+  }
+

INS23 INS31 INS31 INS83 INS83 INS43 INS59 MOV24 INS83 INS39 INS42 INS44 INS44 INS43 MOV8 MOV60 MOV21 INS29 INS78 INS83 INS83 INS39 INS42 INS44 INS43 INS8 INS42 INS42 INS21 INS74 INS42 MOV43 INS42 INS42 INS21 INS21 INS65 INS65 INS65 INS65 INS42 INS74 INS42 INS42 INS60 INS60 INS24 INS70 INS7 MOV58 MOV27 MOV37 INS43 INS43 MOV43 INS32 INS32 INS66 INS66 INS42 INS42 INS43 INS43 INS83 INS74 INS59 INS74 INS59 MOV58 INS27 MOV37 INS8 INS44 INS42 INS8 INS22 INS42 INS42 INS42 UPD42 MOV14 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS43 INS42 INS32 INS43 INS43 INS43 INS42 INS14 INS42 INS32 INS60 INS21 INS43 INS42 INS60 INS25 INS52 INS42 INS32 INS22 INS42 INS42 INS42 INS42 INS42 INS42 INS22 INS42 INS42 INS40 INS74 INS42 INS42 INS43 INS59 INS32 INS42 INS43 INS59 INS38 INS8 INS8 UPD42 MOV42 UPD42 MOV42 MOV32 INS52 INS42 INS52 INS42 INS43 INS43 INS43 INS40 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS32 INS21 INS21 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS32 INS45 INS32 INS42 INS42 INS42 INS42 INS42 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL42 DEL42 DEL32 DEL14 DEL59 DEL60 DEL24 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL27 DEL42 DEL42 DEL2 DEL42 DEL32 DEL42 DEL32 DEL7 DEL42