Revert "Create Version File in Datanode. Contributed by Bharat Viswanadham."

This reverts commit f26d3466d79125123cba00ab81481655d7bfe3c1.

-import com.google.common.base.Preconditions;
-import org.apache.commons.lang.StringUtils;
-import org.apache.hadoop.hdfs.server.datanode.StorageLocation;
-import org.apache.hadoop.ozone.OzoneConsts;
-import org.apache.hadoop.ozone.common.InconsistentStorageStateException;
-import org.apache.hadoop.ozone.common.Storage;
-import org.apache.hadoop.ozone.container.common.DataNodeLayoutVersion;
-import org.apache.hadoop.ozone.container.common.helpers.DatanodeVersionFile;
-import org.apache.hadoop.ozone.container.ozoneimpl.OzoneContainer;
-import org.apache.hadoop.util.Time;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import java.io.File;
-import java.util.List;
-import java.util.Properties;
-  private final OzoneContainer datanodeContainerManager;
-  static final Logger LOG =
-      LoggerFactory.getLogger(VersionEndpointTask.class);
-                             Configuration conf, OzoneContainer container) {
+      Configuration conf) {
-    this.datanodeContainerManager = container;
-    try {
+    try{
-      VersionResponse response = VersionResponse.getFromProtobuf(
-          versionResponse);
-      String scmUuid = response.getValue(OzoneConsts.SCM_ID);
-      Preconditions.checkState(!StringUtils.isBlank(scmUuid),
-          "Invalid SCM UuiD in the response.");
+      rpcEndPoint.setVersion(VersionResponse.getFromProtobuf(versionResponse));
-      rpcEndPoint.setVersion(response);
-      LOG.debug("scmUuid is {}", scmUuid);
-
-      List<StorageLocation> locations = datanodeContainerManager.getLocations();
-
-      for (StorageLocation location : locations) {
-        String path = location.getUri().getPath();
-        File parentPath = new File(path + File.separator + Storage
-            .STORAGE_DIR_HDDS + File.separator + scmUuid + File.separator +
-            Storage.STORAGE_DIR_CURRENT);
-        File versionFile = DatanodeVersionFile.getVersionFile(location,
-            scmUuid);
-        if (!parentPath.exists() && !parentPath.mkdirs()) {
-          LOG.error("Directory doesn't exist and cannot be created. Path: {}",
-              parentPath.toString());
-          rpcEndPoint.setState(EndpointStateMachine.EndPointStates.SHUTDOWN);
-          throw new IllegalArgumentException("Directory doesn't exist and " +
-              "cannot be created. " + parentPath.toString());
-        } else {
-          if (versionFile.exists()) {
-            Properties properties = DatanodeVersionFile.readFrom(versionFile);
-            DatanodeVersionFile.verifyScmUuid(properties.getProperty(
-                OzoneConsts.SCM_ID), scmUuid);
-            DatanodeVersionFile.verifyCreationTime(properties.getProperty(
-                OzoneConsts.CTIME));
-            DatanodeVersionFile.verifyLayOutVersion(properties.getProperty(
-                OzoneConsts.LAYOUTVERSION));
-          } else {
-            DatanodeVersionFile dnVersionFile = new DatanodeVersionFile(scmUuid,
-                Time.now(), DataNodeLayoutVersion.getLatestVersion()
-                .getVersion());
-            dnVersionFile.createVersionFile(versionFile);
-          }
-        }
-      }
-      EndpointStateMachine.EndPointStates nextState = rpcEndPoint.getState().
-          getNextState();
+      EndpointStateMachine.EndPointStates nextState =
+          rpcEndPoint.getState().getNextState();
-    } catch (InconsistentStorageStateException ex) {
-      throw ex;

MOV32 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL23 DEL42 DEL43 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL43 DEL42 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL40 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL38 DEL45 DEL32 DEL21 DEL42 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL40 DEL40 DEL40 DEL42 DEL40 DEL40 DEL27 DEL14 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL38 DEL42 DEL42 DEL32 DEL38 DEL27 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL42 DEL43 DEL45 DEL45 DEL42 DEL42 DEL32 DEL27 DEL14 DEL53 DEL8 DEL42 DEL42 DEL32 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL14 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25 DEL8 DEL70 DEL42 DEL43 DEL42 DEL44 DEL42 DEL53 DEL8 DEL12