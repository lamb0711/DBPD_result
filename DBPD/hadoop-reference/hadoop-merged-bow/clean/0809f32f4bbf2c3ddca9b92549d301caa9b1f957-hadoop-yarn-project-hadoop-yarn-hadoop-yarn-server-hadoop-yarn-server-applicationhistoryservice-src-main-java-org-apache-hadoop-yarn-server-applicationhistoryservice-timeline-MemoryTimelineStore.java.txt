Merge r1569890 through r1571508 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1571509 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.hadoop.yarn.server.applicationhistoryservice.apptimeline;
+package org.apache.hadoop.yarn.server.applicationhistoryservice.timeline;
-import org.apache.hadoop.yarn.api.records.apptimeline.ATSEntities;
-import org.apache.hadoop.yarn.api.records.apptimeline.ATSEntity;
-import org.apache.hadoop.yarn.api.records.apptimeline.ATSEvent;
-import org.apache.hadoop.yarn.api.records.apptimeline.ATSEvents;
-import org.apache.hadoop.yarn.api.records.apptimeline.ATSEvents.ATSEventsOfOneEntity;
-import org.apache.hadoop.yarn.api.records.apptimeline.ATSPutErrors;
-import org.apache.hadoop.yarn.api.records.apptimeline.ATSPutErrors.ATSPutError;
+import org.apache.hadoop.yarn.api.records.timeline.TimelineEntities;
+import org.apache.hadoop.yarn.api.records.timeline.TimelineEntity;
+import org.apache.hadoop.yarn.api.records.timeline.TimelineEvent;
+import org.apache.hadoop.yarn.api.records.timeline.TimelineEvents;
+import org.apache.hadoop.yarn.api.records.timeline.TimelinePutResponse;
+import org.apache.hadoop.yarn.api.records.timeline.TimelineEvents.EventsOfOneEntity;
+import org.apache.hadoop.yarn.api.records.timeline.TimelinePutResponse.TimelinePutError;
- * In-memory implementation of {@link ApplicationTimelineStore}. This
+ * In-memory implementation of {@link TimelineStore}. This
-public class MemoryApplicationTimelineStore
-    extends AbstractService implements ApplicationTimelineStore {
+public class MemoryTimelineStore
+    extends AbstractService implements TimelineStore {
-  private Map<EntityIdentifier, ATSEntity> entities =
-      new HashMap<EntityIdentifier, ATSEntity>();
+  private Map<EntityIdentifier, TimelineEntity> entities =
+      new HashMap<EntityIdentifier, TimelineEntity>();
-  public MemoryApplicationTimelineStore() {
-    super(MemoryApplicationTimelineStore.class.getName());
+  public MemoryTimelineStore() {
+    super(MemoryTimelineStore.class.getName());
-  public ATSEntities getEntities(String entityType, Long limit,
+  public TimelineEntities getEntities(String entityType, Long limit,
-    List<ATSEntity> entitiesSelected = new ArrayList<ATSEntity>();
-    for (ATSEntity entity : new PriorityQueue<ATSEntity>(entities.values())) {
+    List<TimelineEntity> entitiesSelected = new ArrayList<TimelineEntity>();
+    for (TimelineEntity entity : new PriorityQueue<TimelineEntity>(entities.values())) {
-          !matchFilter(entity.getPrimaryFilters(), primaryFilter)) {
+          !matchPrimaryFilter(entity.getPrimaryFilters(), primaryFilter)) {
-    List<ATSEntity> entitiesToReturn = new ArrayList<ATSEntity>();
-    for (ATSEntity entitySelected : entitiesSelected) {
+    List<TimelineEntity> entitiesToReturn = new ArrayList<TimelineEntity>();
+    for (TimelineEntity entitySelected : entitiesSelected) {
-    ATSEntities entitiesWrapper = new ATSEntities();
+    TimelineEntities entitiesWrapper = new TimelineEntities();
-  public ATSEntity getEntity(String entityId, String entityType,
+  public TimelineEntity getEntity(String entityId, String entityType,
-    ATSEntity entity = entities.get(new EntityIdentifier(entityId, entityType));
+    TimelineEntity entity = entities.get(new EntityIdentifier(entityId, entityType));
-  public ATSEvents getEntityTimelines(String entityType,
+  public TimelineEvents getEntityTimelines(String entityType,
-    ATSEvents allEvents = new ATSEvents();
+    TimelineEvents allEvents = new TimelineEvents();
-      ATSEntity entity = entities.get(entityID);
+      TimelineEntity entity = entities.get(entityID);
-      ATSEventsOfOneEntity events = new ATSEventsOfOneEntity();
+      EventsOfOneEntity events = new EventsOfOneEntity();
-      for (ATSEvent event : entity.getEvents()) {
+      for (TimelineEvent event : entity.getEvents()) {
-  public ATSPutErrors put(ATSEntities data) {
-    ATSPutErrors errors = new ATSPutErrors();
-    for (ATSEntity entity : data.getEntities()) {
+  public TimelinePutResponse put(TimelineEntities data) {
+    TimelinePutResponse response = new TimelinePutResponse();
+    for (TimelineEntity entity : data.getEntities()) {
-      ATSEntity existingEntity = entities.get(entityId);
+      TimelineEntity existingEntity = entities.get(entityId);
-        existingEntity = new ATSEntity();
+        existingEntity = new TimelineEntity();
-          ATSPutError error = new ATSPutError();
+          TimelinePutError error = new TimelinePutError();
-          error.setErrorCode(ATSPutError.NO_START_TIME);
-          errors.addError(error);
+          error.setErrorCode(TimelinePutError.NO_START_TIME);
+          response.addError(error);
-      for (Map.Entry<String, List<String>> partRelatedEntities : entity
+      for (Map.Entry<String, Set<String>> partRelatedEntities : entity
-          ATSEntity relatedEntity = entities.get(relatedEntityId);
+          TimelineEntity relatedEntity = entities.get(relatedEntityId);
-            relatedEntity = new ATSEntity();
+            relatedEntity = new TimelineEntity();
-    return errors;
+    return response;
-  private static ATSEntity maskFields(
-      ATSEntity entity, EnumSet<Field> fields) {
+  private static TimelineEntity maskFields(
+      TimelineEntity entity, EnumSet<Field> fields) {
-    ATSEntity entityToReturn = new ATSEntity();
+    TimelineEntity entityToReturn = new TimelineEntity();
+  private static boolean matchPrimaryFilter(Map<String, Set<Object>> tags,
+      NameValuePair filter) {
+    Set<Object> value = tags.get(filter.getName());
+    if (value == null) { // doesn't have the filter
+      return false;
+    } else {
+      return value.contains(filter.getValue());
+    }
+  }
+

UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD42 UPD43 INS31 UPD42 UPD74 UPD42 UPD43 UPD43 UPD43 UPD43 UPD43 INS83 INS83 INS39 INS42 INS44 INS44 INS8 UPD43 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 UPD43 INS74 INS42 INS43 INS42 INS60 INS25 UPD42 UPD42 UPD74 UPD74 UPD74 UPD43 UPD43 UPD43 UPD42 UPD43 UPD42 UPD42 UPD43 INS43 INS43 INS74 INS42 INS74 INS59 INS27 INS8 INS8 UPD43 UPD43 UPD43 UPD74 UPD43 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 INS42 INS42 INS43 INS43 INS43 INS43 INS42 INS32 INS42 INS33 INS41 INS41 UPD42 UPD43 UPD42 UPD74 UPD42 UPD43 UPD42 UPD74 UPD42 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 UPD43 UPD43 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS9 INS32 UPD42 UPD43 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 UPD42 UPD74 UPD42 INS42 INS42 INS42 INS42 INS32 UPD42 UPD42 UPD43 UPD42 UPD74 INS42 INS42 UPD42 UPD42 UPD43 UPD43 UPD43 UPD42 UPD43 UPD42 UPD42 UPD40 UPD42 UPD42 UPD43 UPD42 UPD43 UPD42