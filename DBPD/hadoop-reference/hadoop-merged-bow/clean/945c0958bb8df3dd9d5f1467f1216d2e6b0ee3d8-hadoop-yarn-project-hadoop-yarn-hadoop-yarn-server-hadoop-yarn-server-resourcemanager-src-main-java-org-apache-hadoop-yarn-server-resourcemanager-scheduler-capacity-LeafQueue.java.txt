YARN-6775. CapacityScheduler: Improvements to assignContainers, avoid unnecessary canAssignToUser/Queue calls. (Nathan Roberts via wangda)

Change-Id: I84ccd54200ccbaae23018ef320028e42b4c3509a

+    Map<String, CachedUserLimit> userLimits = new HashMap<>();
+    boolean needAssignToQueueCheck = true;
-      if (!super.canAssignToThisQueue(clusterResource, ps.getPartition(),
-          currentResourceLimits, application.getCurrentReservation(),
-          schedulingMode)) {
-        ActivitiesLogger.APP.recordRejectedAppActivityFromLeafQueue(
-            activitiesManager, node, application, application.getPriority(),
-            ActivityDiagnosticConstant.QUEUE_MAX_CAPACITY_LIMIT);
-        ActivitiesLogger.QUEUE.recordQueueActivity(activitiesManager, node,
-            getParent().getQueueName(), getQueueName(), ActivityState.SKIPPED,
-            ActivityDiagnosticConstant.EMPTY);
-        return CSAssignment.NULL_ASSIGNMENT;
+      Resource appReserved = application.getCurrentReservation();
+      if (needAssignToQueueCheck) {
+        if (!super.canAssignToThisQueue(clusterResource, node.getPartition(),
+            currentResourceLimits, appReserved, schedulingMode)) {
+          ActivitiesLogger.APP.recordRejectedAppActivityFromLeafQueue(
+              activitiesManager, node, application, application.getPriority(),
+              ActivityDiagnosticConstant.QUEUE_MAX_CAPACITY_LIMIT);
+          ActivitiesLogger.QUEUE.recordQueueActivity(activitiesManager, node,
+              getParent().getQueueName(), getQueueName(), ActivityState.SKIPPED,
+              ActivityDiagnosticConstant.EMPTY);
+          return CSAssignment.NULL_ASSIGNMENT;
+        }
+        // If there was no reservation and canAssignToThisQueue returned
+        // true, there is no reason to check further.
+        if (!this.reservationsContinueLooking
+            || appReserved.equals(Resources.none())) {
+          needAssignToQueueCheck = false;
+        }
+      CachedUserLimit cul = userLimits.get(application.getUser());
+      Resource cachedUserLimit = null;
+      if (cul != null) {
+        cachedUserLimit = cul.userLimit;
+      }
-          clusterResource, ps.getPartition(), schedulingMode);
-
+          clusterResource, ps.getPartition(), schedulingMode, cachedUserLimit);
+      if (cul == null) {
+        cul = new CachedUserLimit(userLimit);
+        userLimits.put(application.getUser(), cul);
+      }
-      if (!canAssignToUser(clusterResource, application.getUser(), userLimit,
-          application, ps.getPartition(), currentResourceLimits)) {
+      boolean userAssignable = true;
+      if (!cul.canAssign && Resources.fitsIn(appReserved, cul.reservation)) {
+        userAssignable = false;
+      } else {
+        userAssignable = canAssignToUser(clusterResource, application.getUser(),
+            userLimit, application, node.getPartition(), currentResourceLimits);
+        if (!userAssignable && Resources.fitsIn(cul.reservation, appReserved)) {
+          cul.canAssign = false;
+          cul.reservation = appReserved;
+        }
+      }
+      if (!userAssignable) {
-            allocation.getSchedulingMode());
+            allocation.getSchedulingMode(), null);
-      SchedulingMode schedulingMode) {
+      SchedulingMode schedulingMode, Resource userLimit) {
-    Resource userLimit =
-        getResourceLimitForActiveUsers(application.getUser(), clusterResource,
-            nodePartition, schedulingMode);
-
+    if (userLimit == null) {
+      userLimit = getResourceLimitForActiveUsers(application.getUser(),
+          clusterResource, nodePartition, schedulingMode);
+    }
+        metrics.getUserMetrics(user) == null ? Resources.none() :
-          + queueUser.getUsed() + " headroom=" + headroom + " partition="
+          + queueUser.getUsed() + " partition="
-            SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY);
+            SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY, null);
+
+  static class CachedUserLimit {
+    final Resource userLimit;
+    boolean canAssign = true;
+    Resource reservation = Resources.none();
+
+    CachedUserLimit(Resource userLimit) {
+      this.userLimit = userLimit;
+    }
+  }

INS55 INS44 INS83 INS42 INS23 INS23 INS23 INS31 INS60 INS60 MOV43 INS42 INS25 INS83 INS43 INS59 INS39 INS59 INS43 INS59 INS42 INS44 INS8 INS74 INS59 INS39 INS59 INS27 INS8 INS42 INS42 INS42 INS9 INS42 INS42 INS32 INS43 INS42 INS21 INS43 INS43 INS43 INS42 INS14 INS42 INS9 INS60 INS25 INS60 INS60 INS25 INS25 INS60 INS25 INS42 INS33 INS21 INS16 INS42 INS42 INS42 INS7 INS42 INS42 INS42 INS74 MOV43 INS59 INS42 INS8 INS43 INS59 INS43 INS59 INS27 INS8 INS43 INS27 INS8 INS39 INS59 INS27 INS8 INS8 INS7 INS27 INS32 MOV32 INS22 INS42 INS43 INS42 MOV32 MOV25 INS25 INS42 INS42 INS32 INS42 INS42 INS33 INS42 INS33 INS21 INS42 INS42 INS33 INS21 INS21 INS42 INS9 INS38 INS32 INS21 INS21 INS25 INS42 INS42 MOV32 INS32 INS33 INS42 INS42 INS52 INS42 INS42 INS27 INS8 INS42 INS42 MOV32 INS7 INS42 INS7 INS32 INS40 INS42 INS42 INS42 INS40 INS7 INS7 INS27 INS8 INS42 INS42 INS42 INS38 INS32 INS21 INS42 INS40 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS32 INS38 INS32 INS21 INS21 INS33 INS42 INS22 INS42 INS42 INS32 INS7 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS40 INS42 INS7 INS7 INS33 UPD42 INS52 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS42 INS40 INS9 INS40 INS42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL59 DEL60 DEL45 DEL42