Merge trunk to HDFS-4685.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1549699 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.hdfs.server.namenode.snapshot.INodeFileWithSnapshot;
+import org.apache.hadoop.hdfs.server.namenode.snapshot.FileWithSnapshotFeature;
-
-  /**
-   * If the inode contains a {@link FileUnderConstructionFeature}, return it;
-   * otherwise, return null.
-   */
-  public final FileUnderConstructionFeature getFileUnderConstructionFeature() {
-    for (Feature f = this.headFeature; f != null; f = f.nextFeature) {
-      if (f instanceof FileUnderConstructionFeature) {
-        return (FileUnderConstructionFeature) f;
-      }
-    }
-    return null;
-  }
-
-  /** Is this file under construction? */
-  @Override // BlockCollection
-  public boolean isUnderConstruction() {
-    return getFileUnderConstructionFeature() != null;
+  
+  public INodeFile(INodeFile that, FileDiffList diffs) {
+    this(that);
+    Preconditions.checkArgument(!that.isWithSnapshot());
+    this.addSnapshotFeature(diffs);
+  /**
+   * If the inode contains a {@link FileUnderConstructionFeature}, return it;
+   * otherwise, return null.
+   */
+  public final FileUnderConstructionFeature getFileUnderConstructionFeature() {
+    for (Feature f = this.headFeature; f != null; f = f.nextFeature) {
+      if (f instanceof FileUnderConstructionFeature) {
+        return (FileUnderConstructionFeature) f;
+      }
+    }
+    return null;
+  }
+
+  /** Is this file under construction? */
+  @Override // BlockCollection
+  public boolean isUnderConstruction() {
+    return getFileUnderConstructionFeature() != null;
+  }
+
+  
+  /* Start of Snapshot Feature */
+
+  private FileWithSnapshotFeature addSnapshotFeature(FileDiffList diffs) {
+    FileWithSnapshotFeature sf = new FileWithSnapshotFeature(diffs);
+    this.addFeature(sf);
+    return sf;
+  }
+  
+  /**
+   * If feature list contains a {@link FileWithSnapshotFeature}, return it;
+   * otherwise, return null.
+   */
+  public final FileWithSnapshotFeature getFileWithSnapshotFeature() {
+    for (Feature f = headFeature; f != null; f = f.nextFeature) {
+      if (f instanceof FileWithSnapshotFeature) {
+        return (FileWithSnapshotFeature) f;
+      }
+    }
+    return null;
+  }
+
+  /** Is this file has the snapshot feature? */
+  public final boolean isWithSnapshot() {
+    return getFileWithSnapshotFeature() != null;
+  }
+    
+  @Override
+  public String toDetailString() {
+    FileWithSnapshotFeature sf = this.getFileWithSnapshotFeature();
+    return super.toDetailString() + (sf == null ? "" : sf.getDetailedString()); 
+  }
-    return this;
+    FileWithSnapshotFeature sf = this.getFileWithSnapshotFeature();
+    if (sf != null) {
+      return sf.getSnapshotINode(this, snapshot);
+    } else {
+      return this;
+    }
-      INodeFileWithSnapshot newFile = getParent()
-          .replaceChild4INodeFileWithSnapshot(this, inodeMap)
-          .recordModification(latest, inodeMap);
-      return newFile;
-    } else {
-      return this;
+      // the file is in snapshot, create a snapshot feature if it does not have
+      FileWithSnapshotFeature sf = this.getFileWithSnapshotFeature();
+      if (sf == null) {
+        sf = addSnapshotFeature(null);
+      }
+      // record self in the diff list if necessary
+      if (!shouldRecordInSrcSnapshot(latest)) {
+        sf.getDiffs().saveSelf2Snapshot(latest, this, null);
+      }
+    return this;
+  
+  public FileDiffList getDiffs() {
+    FileWithSnapshotFeature sf = this.getFileWithSnapshotFeature();
+    if (sf != null) {
+      return sf.getDiffs();
+    }
+    return null;
+  }
+  
+  /* End of Snapshot Feature */
-  @Override
+  @Override // INodeFileAttributes
-  @Override
+  @Override // BlockCollection
-    return getFileReplication(null);
+    short max = getFileReplication(null);
+    FileWithSnapshotFeature sf = this.getFileWithSnapshotFeature();
+    if (sf != null) {
+      short maxInSnapshot = sf.getMaxBlockRepInDiffs();
+      if (sf.isCurrentFileDeleted()) {
+        return maxInSnapshot;
+      }
+      max = maxInSnapshot > max ? maxInSnapshot : max;
+    }
+    return max;
+    FileWithSnapshotFeature sf = getFileWithSnapshotFeature();
+    if (sf != null) {
+      return sf.cleanFile(this, snapshot, prior, collectedBlocks,
+          removedINodes, countDiffChange);
+    }
-    if (snapshot == null && prior == null) {   
-      // this only happens when deleting the current file
+    if (snapshot == null && prior == null) {
+      // this only happens when deleting the current file and the file is not
+      // in any snapshot
+      // when deleting the current file and the file is in snapshot, we should
+      // clean the 0-sized block if the file is UC
-    if (this instanceof INodeFileWithSnapshot) {
-      ((INodeFileWithSnapshot) this).getDiffs().clear();
+    FileWithSnapshotFeature sf = getFileWithSnapshotFeature();
+    if (sf != null) {
+      sf.clearDiffs();
-    if (this instanceof INodeFileWithSnapshot) {
-      FileDiffList fileDiffList = ((INodeFileWithSnapshot) this).getDiffs();
+    FileWithSnapshotFeature sf = getFileWithSnapshotFeature();
+    if (sf != null) {
+      FileDiffList fileDiffList = sf.getDiffs();
-    if (this instanceof INodeFileWithSnapshot) {
-      final INodeFileWithSnapshot withSnapshot = (INodeFileWithSnapshot) this;
-      final FileDiffList diffs = withSnapshot.getDiffs();
+    FileWithSnapshotFeature sf = getFileWithSnapshotFeature();
+    if (sf != null) {
+      final FileDiffList diffs = sf.getDiffs();
-      if (n > 0 && withSnapshot.isCurrentFileDeleted()) {
+      if (n > 0 && sf.isCurrentFileDeleted()) {
-      if (withSnapshot.isCurrentFileDeleted()) {
+      if (sf.isCurrentFileDeleted()) {
-    if (this instanceof INodeFileWithSnapshot
-        && ((INodeFileWithSnapshot) this).isCurrentFileDeleted()) {
+    FileWithSnapshotFeature sf = this.getFileWithSnapshotFeature();
+    if (sf != null && sf.isCurrentFileDeleted()) {
-    if (snapshot != null && this instanceof INodeFileWithSnapshot) {
-      final FileDiff d = ((INodeFileWithSnapshot) this).getDiffs().getDiff(
+    FileWithSnapshotFeature sf = this.getFileWithSnapshotFeature();
+    if (snapshot != null && sf != null) {
+      final FileDiff d = sf.getDiffs().getDiff(

MOV31 MOV31 UPD40 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS42 INS44 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS83 INS43 INS42 INS8 INS29 INS83 INS83 INS39 INS42 INS8 MOV78 INS83 INS43 INS42 INS8 INS78 INS8 INS83 INS43 INS42 INS8 INS8 INS43 INS42 INS43 INS42 INS17 INS21 INS21 INS42 INS43 INS42 INS60 INS21 INS41 INS65 INS42 INS24 INS41 INS65 INS41 INS42 INS60 INS41 INS42 INS60 INS25 INS41 INS42 INS60 INS25 INS41 INS60 INS60 INS25 INS41 INS60 INS25 INS60 INS25 INS60 INS60 INS60 INS60 INS42 INS42 INS42 INS32 INS32 INS42 INS43 INS59 INS32 INS42 INS66 INS65 INS66 INS66 INS58 INS27 INS7 INS8 INS33 INS66 INS27 INS43 INS59 INS27 INS43 INS59 INS27 INS8 MOV8 INS52 INS43 INS59 INS27 INS8 INS33 INS39 INS59 INS43 INS59 INS27 INS8 INS42 INS43 INS59 INS27 INS8 INS43 INS59 INS27 MOV8 INS43 INS59 INS27 INS43 INS59 INS27 INS43 INS59 INS43 INS59 INS42 INS42 INS38 INS52 INS42 INS42 INS42 INS42 INS14 INS52 INS42 INS42 INS42 INS43 INS59 INS42 INS33 INS42 INS40 INS25 INS32 INS33 INS42 INS42 INS32 INS48 INS36 INS42 INS42 INS32 INS42 INS33 MOV41 INS60 INS25 INS25 INS42 INS42 INS32 INS42 INS33 INS41 INS42 MOV32 INS42 INS42 INS32 INS42 INS33 INS60 INS25 INS21 INS42 INS42 INS32 INS42 INS33 INS41 UPD42 MOV42 INS42 INS32 INS42 INS33 INS42 INS42 INS32 INS42 INS33 INS42 INS42 INS32 INS42 INS33 INS42 INS42 INS32 INS27 INS42 INS42 INS32 INS27 INS32 INS43 INS42 INS42 INS42 INS42 INS62 INS8 INS42 INS52 INS42 INS42 INS16 INS52 INS42 INS32 UPD43 MOV43 INS59 INS27 INS8 INS38 INS8 INS52 INS42 INS32 INS52 INS42 INS39 INS59 INS32 INS8 INS7 INS42 INS32 INS42 INS42 INS42 INS52 INS42 INS42 INS33 INS42 INS52 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS43 INS41 INS27 INS45 INS32 INS42 INS42 INS52 INS42 UPD42 UPD42 MOV42 INS32 INS42 INS33 INS21 INS32 INS21 INS42 INS42 INS42 INS32 INS42 INS42 MOV41 INS42 INS16 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS42 INS11 INS42 INS33 INS42 INS42 INS52 UPD42 MOV42 INS7 UPD42 MOV42 MOV42 INS32 INS42 INS42 INS42 INS27 INS42 INS42 INS42 UPD42 UPD42 INS43 INS42 INS42 INS32 INS32 INS42 INS42 INS52 INS33 INS42 INS42 INS42 INS42 INS42 INS33 UPD42 MOV42 INS42 DEL52 DEL8 DEL32 DEL42 DEL52 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL41 DEL8 DEL42 DEL43 DEL52 DEL11 DEL36 DEL42 DEL32 DEL52 DEL43 DEL62 DEL25 DEL52 DEL42 DEL43 DEL62 DEL42 DEL43 DEL52 DEL11 DEL36 DEL52 DEL42 DEL43 DEL62 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL52 DEL11 DEL59 DEL60 DEL52 DEL42 DEL43 DEL62 DEL42 DEL43 DEL52 DEL11 DEL36 DEL52 DEL42 DEL43 DEL62 DEL42 DEL43 DEL52 DEL11 DEL36