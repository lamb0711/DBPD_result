YARN-2211. Persist AMRMToken master key in RMStateStore for RM recovery. Contributed by Xuan Gong

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1613515 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.yarn.proto.YarnServerResourceManagerServiceProtos;
+import org.apache.hadoop.yarn.proto.YarnServerResourceManagerRecoveryProtos.AMRMTokenSecretManagerStateProto;
+import org.apache.hadoop.yarn.server.resourcemanager.recovery.records.AMRMTokenSecretManagerState;
-
+import org.apache.hadoop.yarn.server.resourcemanager.recovery.records.impl.pb.AMRMTokenSecretManagerStatePBImpl;
+   * |--- AMRMTOKEN_SECRET_MANAGER_ROOT
+   *        |----- currentMasterKey
+   *        |----- nextMasterKey
+  private String amrmTokenSecretManagerRoot;
+    amrmTokenSecretManagerRoot =
+        getNodePath(zkRootNodePath, AMRMTOKEN_SECRET_MANAGER_ROOT);
+    createRootDir(amrmTokenSecretManagerRoot);
+    // recover AMRMTokenSecretManager
+    loadAMRMTokenSecretManagerState(rmState);
+  private void loadAMRMTokenSecretManagerState(RMState rmState)
+      throws Exception {
+    byte[] data = getDataWithRetries(amrmTokenSecretManagerRoot, true);
+    if (data == null) {
+      LOG.warn("There is no data saved");
+      return;
+    }
+    AMRMTokenSecretManagerStatePBImpl stateData =
+        new AMRMTokenSecretManagerStatePBImpl(
+          AMRMTokenSecretManagerStateProto.parseFrom(data));
+    rmState.amrmTokenSecretManagerState =
+        AMRMTokenSecretManagerState.newInstance(
+          stateData.getCurrentMasterKey(), stateData.getNextMasterKey());
+
+  }
+
+  @Override
+  public synchronized void storeOrUpdateAMRMTokenSecretManagerState(
+      AMRMTokenSecretManagerState amrmTokenSecretManagerState,
+      boolean isUpdate) {
+    AMRMTokenSecretManagerState data =
+        AMRMTokenSecretManagerState.newInstance(amrmTokenSecretManagerState);
+    byte[] stateData = data.getProto().toByteArray();
+    try {
+      setDataWithRetries(amrmTokenSecretManagerRoot, stateData, -1);
+    } catch (Exception ex) {
+      LOG.info("Error storing info for AMRMTokenSecretManager", ex);
+      notifyStoreOperationFailed(ex);
+    }
+  }
+

INS26 INS26 UPD40 INS40 INS40 INS23 INS31 INS31 INS83 INS43 INS59 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS42 INS21 INS21 INS21 INS43 INS42 INS42 INS60 INS25 INS60 INS21 INS42 INS43 INS42 INS39 INS42 INS60 INS60 INS54 INS66 INS66 INS66 INS7 INS32 INS32 INS42 INS5 INS59 INS27 INS8 INS43 INS59 INS7 INS42 INS43 INS59 INS5 INS59 INS8 INS12 INS42 INS32 INS42 INS42 INS42 INS42 INS39 INS85 INS42 INS32 INS42 INS33 INS21 INS41 INS42 INS42 INS14 INS40 INS32 INS42 INS42 INS32 INS39 INS85 INS42 INS32 INS21 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS9 INS32 INS43 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS43 INS42 INS21 INS21 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS38 INS42 INS32 INS32 INS34 INS42 INS42 INS45 INS42 INS42 INS42