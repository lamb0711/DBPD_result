HADOOP-10540. Datanode upgrade in Windows fails with hardlink error. (Contributed by Chris Nauroth and Arpit Agarwal)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1589923 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.InputStreamReader;
+import java.io.StringReader;
+import org.apache.hadoop.io.IOUtils;
+import org.apache.hadoop.util.Shell.ExitCodeException;
+import org.apache.hadoop.util.Shell.ShellCommandExecutor;
-     *            with {@link Runtime.exec()}
+    static String CMD_EXE = "cmd.exe";
-                        "cmd","/q","/c","for", "%f", "in", "("};
+        CMD_EXE, "/q", "/c", "for", "%f", "in", "("};
-                        ")", "do", Shell.WINUTILS, "hardlink", "create", null,
-                        "%f", "1>NUL"};
+        ")", "do", Shell.WINUTILS, "hardlink", "create", null,
+        "%f"};
-                        Shell.WINUTILS, "hardlink",
-                        "stat", null};
+        Shell.WINUTILS, "hardlink", "stat", null};
-      buf[mark - 3] = td;
+      buf[mark - 2] = td;
-      sum += ("cmd.exe /q /c for %f in ( ) do "
-              + Shell.WINUTILS + " hardlink create \\%f %f 1>NUL ").length();
+      sum += (CMD_EXE + " /q /c for %f in ( ) do "
+              + Shell.WINUTILS + " hardlink create \\%f %f").length();
-    Process process = Runtime.getRuntime().exec(hardLinkCommand);
+    ShellCommandExecutor shexec = new ShellCommandExecutor(hardLinkCommand);
-      if (process.waitFor() != 0) {
-        String errMsg = new BufferedReader(new InputStreamReader(
-            process.getInputStream())).readLine();
-        if (errMsg == null)  errMsg = "";
-        String inpMsg = new BufferedReader(new InputStreamReader(
-            process.getErrorStream())).readLine();
-        if (inpMsg == null)  inpMsg = "";
-        throw new IOException(errMsg + inpMsg);
-      }
-    } catch (InterruptedException e) {
-      throw new IOException(e);
-    } finally {
-      process.destroy();
+      shexec.execute();
+    } catch (ExitCodeException e) {
+      throw new IOException("Failed to execute command " +
+          Arrays.toString(hardLinkCommand) +
+          "; command output: \"" + shexec.getOutput() + "\"" +
+          "; WrappedException: \"" + e.getMessage() + "\"");
-    Process process = Runtime.getRuntime().exec(hardLinkCommand, null, 
-        parentDir);
+    ShellCommandExecutor shexec = new ShellCommandExecutor(hardLinkCommand,
+      parentDir, null, 0L);
-      if (process.waitFor() != 0) {
-        String errMsg = new BufferedReader(new InputStreamReader(
-            process.getInputStream())).readLine();
-        if (errMsg == null)  errMsg = "";
-        String inpMsg = new BufferedReader(new InputStreamReader(
-            process.getErrorStream())).readLine();
-        if (inpMsg == null)  inpMsg = "";
-        throw new IOException(errMsg + inpMsg);
-      }
-    } catch (InterruptedException e) {
-      throw new IOException(e);
-    } finally {
-      process.destroy();
+      shexec.execute();
+    } catch (ExitCodeException e) {
+      throw new IOException(shexec.getOutput() + e.getMessage());
-    BufferedReader err = null;
-    Process process = Runtime.getRuntime().exec(cmd);
+    ShellCommandExecutor shexec = new ShellCommandExecutor(cmd);
-      exitValue = process.waitFor();
-      in = new BufferedReader(new InputStreamReader(
-                                  process.getInputStream()));
+      shexec.execute();
+      in = new BufferedReader(new StringReader(shexec.getOutput()));
-      err = new BufferedReader(new InputStreamReader(
-                                   process.getErrorStream()));
-      errMsg = err.readLine();
+      exitValue = shexec.getExitCode();
+    } catch (ExitCodeException e) {
+      inpMsg = shexec.getOutput();
+      errMsg = e.getMessage();
+      exitValue = e.getExitCode();
+      throw createIOException(fileName, inpMsg, errMsg, exitValue, e);
-    } catch (InterruptedException e) {
-      throw createIOException(fileName, inpMsg, errMsg, exitValue, e);
-      process.destroy();
-      if (in != null) in.close();
-      if (err != null) err.close();
+      IOUtils.closeStream(in);

INS26 INS26 INS26 UPD40 INS40 INS40 INS40 INS23 INS83 MOV43 INS59 MOV12 INS42 INS42 INS45 UPD43 INS8 INS12 UPD43 INS8 UPD43 INS42 UPD42 UPD42 INS14 INS21 INS44 INS8 UPD42 UPD42 INS14 INS21 UPD42 UPD42 INS14 INS21 INS43 INS42 INS32 INS43 INS42 INS53 INS43 INS42 INS42 INS33 INS34 INS32 UPD43 INS43 INS42 INS32 UPD43 INS21 INS21 INS21 MOV32 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS14 INS42 INS42 UPD42 MOV42 UPD42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 INS32 UPD42 INS7 INS7 INS7 UPD42 UPD42 INS42 UPD34 MOV43 INS27 MOV43 INS27 MOV43 UPD42 MOV42 UPD42 MOV42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 UPD45 UPD45 INS45 INS32 INS45 INS32 INS45 INS45 INS32 INS45 INS32 INS32 UPD43 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 DEL66 DEL66 DEL65 DEL45 DEL45 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL34 DEL27 DEL42 DEL42 DEL43 DEL42 DEL43 DEL32 DEL14 DEL14 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL45 DEL7 DEL21 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL32 DEL14 DEL14 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL45 DEL7 DEL21 DEL25 DEL42 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL14 DEL53 DEL8 DEL12 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL32 DEL42 DEL42 DEL33 DEL42 DEL32 DEL42 DEL42 DEL32 DEL34 DEL27 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL14 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL45 DEL7 DEL21 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL42 DEL32 DEL14 DEL14 DEL42 DEL32 DEL59 DEL60 DEL42 DEL33 DEL27 DEL42 DEL45 DEL7 DEL21 DEL25 DEL42 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL8 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL32 DEL14 DEL14 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL42 DEL42 DEL32 DEL21 DEL42 DEL33 DEL27 DEL21 DEL25 DEL42 DEL33 DEL27 DEL42 DEL42 DEL32 DEL21 DEL25