HDFS-3510.  Editlog pre-allocation is performed prior to writing edits to avoid partial edits case disk out of space. Contributed by Collin McCabe.
        


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1355189 13f79535-47bb-0310-9956-ffa450edef68

-  public static final int PREALLOCATION_LENGTH = 1024 * 1024;
+  public static final int MIN_PREALLOCATION_LENGTH = 1024 * 1024;
-  static ByteBuffer fill = ByteBuffer.allocateDirect(PREALLOCATION_LENGTH);
+  static ByteBuffer fill = ByteBuffer.allocateDirect(MIN_PREALLOCATION_LENGTH);
-      // remove the last INVALID marker from transaction log.
+      // remove any preallocated padding bytes from the transaction log.
-    doubleBuf.getCurrentBuf().write(FSEditLogOpCodes.OP_INVALID.getOpCode()); // insert eof marker
+    preallocate(); // preallocate file if necessay
-    fc.position(fc.position() - 1); // skip back the end-of-file marker
-    preallocate(); // preallocate file if necessary
-  // allocate a big chunk of data
-    if (position + 4096 >= fc.size()) {
-      if(FSNamesystem.LOG.isDebugEnabled()) {
-        FSNamesystem.LOG.debug("Preallocating Edit log, current size "
-            + fc.size());
-      }
+    long size = fc.size();
+    int bufSize = doubleBuf.getReadyBuf().getLength();
+    long need = bufSize - (size - position);
+    if (need <= 0) {
+      return;
+    }
+    long oldSize = size;
+    long total = 0;
+    long fillCapacity = fill.capacity();
+    while (need > 0) {
-      IOUtils.writeFully(fc, fill, position);
-      if(FSNamesystem.LOG.isDebugEnabled()) {
-        FSNamesystem.LOG.debug("Edit log size is now " + fc.size() +
-            " written " + fill.capacity() + " bytes " + " at offset " + position);
-      }
+      IOUtils.writeFully(fc, fill, size);
+      need -= fillCapacity;
+      size += fillCapacity;
+      total += fillCapacity;
+    }
+    if(FSNamesystem.LOG.isDebugEnabled()) {
+      FSNamesystem.LOG.debug("Preallocated " + total + " bytes at the end of " +
+      		"the edit log (offset " + oldSize + ")");

MOV21 UPD42 INS60 INS60 INS60 INS25 INS60 INS60 INS60 INS61 MOV25 UPD42 INS39 INS59 INS39 INS59 INS39 INS59 INS27 INS8 INS39 INS59 INS39 INS59 INS39 INS59 INS27 INS8 INS42 MOV32 INS42 INS32 INS42 INS27 INS42 INS34 INS41 INS42 INS42 INS42 INS34 INS42 MOV32 INS42 INS34 MOV21 MOV21 INS21 INS21 INS21 INS32 INS42 INS42 INS36 INS7 INS7 INS7 INS42 INS42 INS27 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV42 UPD45 INS42 UPD45 UPD45 UPD42 INS45 DEL42 DEL42 DEL32 DEL42 DEL40 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL34 DEL27 DEL32 DEL21 DEL42 DEL42 DEL32 DEL45 DEL34 DEL27 DEL27 DEL40 DEL42 DEL32 DEL40 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL8 DEL25 DEL8 DEL25