YARN-6923. Metrics for Federation Router. (Giovanni Matteo Fumarola via asuresh)

-import com.google.common.annotations.VisibleForTesting;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.Random;
+import java.util.Set;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import javax.ws.rs.core.Response;
+import javax.ws.rs.core.Response.Status;
+
-import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.*;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.ActivitiesInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.AppActivitiesInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.AppAttemptsInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.AppInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.AppPriority;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.AppQueue;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.AppState;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.AppTimeoutInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.AppTimeoutsInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.ApplicationStatisticsInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.ApplicationSubmissionContextInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.AppsInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.ClusterInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.ClusterMetricsInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.DelegationToken;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.LabelsToNodesInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.NodeInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.NodeLabelsInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.NodeToLabelsEntryList;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.NodeToLabelsInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.NodesInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.ReservationDeleteRequestInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.ReservationSubmissionRequestInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.ReservationUpdateRequestInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.SchedulerTypeInfo;
+import org.apache.hadoop.yarn.server.router.RouterMetrics;
+import org.apache.hadoop.yarn.util.Clock;
+import org.apache.hadoop.yarn.util.MonotonicClock;
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-import javax.ws.rs.core.Response;
-import javax.ws.rs.core.Response.Status;
-import java.io.IOException;
-import java.util.*;
+import com.google.common.annotations.VisibleForTesting;
+  private RouterMetrics routerMetrics;
+  private final Clock clock = new MonotonicClock();
+    routerMetrics = RouterMetrics.getMetrics();
+
+    long startTime = clock.getTime();
+
+      routerMetrics.incrAppsFailedCreated();
+        routerMetrics.incrAppsFailedCreated();
+
+        long stopTime = clock.getTime();
+        routerMetrics.succeededAppsCreated(stopTime - startTime);
+
+    routerMetrics.incrAppsFailedCreated();
+
+    long startTime = clock.getTime();
+
+      routerMetrics.incrAppsFailedSubmitted();
+      routerMetrics.incrAppsFailedSubmitted();
+        routerMetrics.incrAppsFailedSubmitted();
+          routerMetrics.incrAppsFailedSubmitted();
+            routerMetrics.incrAppsFailedSubmitted();
+            routerMetrics.incrAppsFailedSubmitted();
+        routerMetrics.incrAppsFailedSubmitted();
+
+        long stopTime = clock.getTime();
+        routerMetrics.succeededAppsSubmitted(stopTime - startTime);
+
+    routerMetrics.incrAppsFailedSubmitted();
+    long startTime = clock.getTime();
+
+      routerMetrics.incrAppsFailedRetrieved();
+        routerMetrics.incrAppsFailedRetrieved();
+      routerMetrics.incrAppsFailedRetrieved();
-    return getOrCreateInterceptorForSubCluster(subClusterId,
+    AppInfo response = getOrCreateInterceptorForSubCluster(subClusterId,
+
+    long stopTime = clock.getTime();
+    routerMetrics.succeededAppsRetrieved(stopTime - startTime);
+
+    return response;
+    long startTime = clock.getTime();
+
+      routerMetrics.incrAppsFailedKilled();
-    SubClusterId subClusterId =
-        federationFacade.getApplicationHomeSubCluster(applicationId);
+    SubClusterInfo subClusterInfo = null;
+    SubClusterId subClusterId = null;
+    try {
+      subClusterId =
+          federationFacade.getApplicationHomeSubCluster(applicationId);
+      subClusterInfo = federationFacade.getSubCluster(subClusterId);
+    } catch (YarnException e) {
+      routerMetrics.incrAppsFailedKilled();
+      return Response.status(Status.BAD_REQUEST).entity(e.getLocalizedMessage())
+          .build();
+    }
-    SubClusterInfo subClusterInfo =
-        federationFacade.getSubCluster(subClusterId);
-
-    return getOrCreateInterceptorForSubCluster(subClusterId,
+    Response response = getOrCreateInterceptorForSubCluster(subClusterId,
+
+    long stopTime = clock.getTime();
+    routerMetrics.succeededAppsRetrieved(stopTime - startTime);
+
+    return response;

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 INS23 INS23 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS42 INS42 INS42 INS42 INS14 INS21 INS60 INS21 INS60 INS21 INS60 INS54 INS60 INS60 INS21 INS60 MOV54 INS60 INS60 INS60 INS60 INS21 INS43 INS7 INS39 INS59 INS32 INS39 INS59 MOV54 MOV54 INS32 INS39 INS59 INS8 INS12 INS43 INS59 INS39 INS59 INS32 INS42 INS39 INS59 INS43 INS59 INS43 INS59 UPD43 MOV43 INS59 INS39 MOV59 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS21 INS42 INS42 INS42 INS32 INS21 INS44 MOV8 MOV44 MOV8 INS42 INS42 MOV32 INS42 INS32 INS42 INS42 INS27 INS42 INS32 INS8 INS42 INS42 INS33 INS42 INS42 INS33 INS21 UPD42 INS42 MOV32 UPD42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS32 INS21 MOV8 MOV8 INS42 INS42 INS7 INS43 INS42 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS41 INS7 UPD43 INS21 UPD42 UPD42 INS42 INS42 INS32 INS60 INS21 INS42 INS42 INS32 MOV44 INS60 INS21 INS42 INS32 INS42 INS32 INS21 INS32 INS32 INS32 UPD42 INS42 INS32 UPD42 INS32 INS42 INS42 INS21 INS39 INS59 INS32 INS42 INS42 INS21 INS21 INS39 INS59 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 UPD42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS27 INS32 INS32 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS32 INS42 INS42 INS21 INS21 INS32 INS32 INS42 INS42 INS42 INS42 DEL42 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60