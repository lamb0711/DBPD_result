YARN-2404. Removed ApplicationAttemptState and ApplicationState class in RMStateStore. Contributed by Tsuyoshi OZAWA

+import java.io.IOException;
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.io.DataInputByteBuffer;
+import org.apache.hadoop.io.DataOutputBuffer;
+import org.apache.hadoop.io.IOUtils;
+import org.apache.hadoop.security.Credentials;
+  private static Log LOG =
+      LogFactory.getLog(ApplicationAttemptStateDataPBImpl.class);
-  public ByteBuffer getAppAttemptTokens() {
+  public Credentials getAppAttemptTokens() {
-      return appAttemptTokens;
+      return convertCredentialsFromByteBuffer(appAttemptTokens);
-    return appAttemptTokens;
+    return convertCredentialsFromByteBuffer(appAttemptTokens);
-  public void setAppAttemptTokens(ByteBuffer attemptTokens) {
+  public void setAppAttemptTokens(Credentials attemptTokens) {
+      return;
-    this.appAttemptTokens = attemptTokens;
+    this.appAttemptTokens = convertCredentialsToByteBuffer(attemptTokens);
+
+  private static ByteBuffer convertCredentialsToByteBuffer(
+      Credentials credentials) {
+    ByteBuffer appAttemptTokens = null;
+    DataOutputBuffer dob = new DataOutputBuffer();
+    try {
+      if (credentials != null) {
+        credentials.writeTokenStorageToStream(dob);
+        appAttemptTokens = ByteBuffer.wrap(dob.getData(), 0, dob.getLength());
+      }
+      return appAttemptTokens;
+    } catch (IOException e) {
+      LOG.error("Failed to convert Credentials to ByteBuffer.");
+      assert false;
+      return null;
+    } finally {
+      IOUtils.closeStream(dob);
+    }
+  }
+
+  private static Credentials convertCredentialsFromByteBuffer(
+      ByteBuffer appAttemptTokens) {
+    DataInputByteBuffer dibb = new DataInputByteBuffer();
+    try {
+      Credentials credentials = null;
+      if (appAttemptTokens != null) {
+        credentials = new Credentials();
+        appAttemptTokens.rewind();
+        dibb.reset(appAttemptTokens);
+        credentials.readTokenStorageStream(dibb);
+      }
+      return credentials;
+    } catch (IOException e) {
+      LOG.error("Failed to convert Credentials from ByteBuffer.");
+      assert false;
+      return null;
+    } finally {
+      IOUtils.closeStream(dibb);
+    }
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS31 INS83 INS83 INS43 INS59 INS43 INS83 INS83 MOV43 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS42 INS42 INS32 INS42 INS43 INS43 INS42 INS60 INS60 INS54 INS42 INS43 INS42 INS60 INS54 INS42 INS42 INS57 INS32 INS42 INS42 MOV43 INS59 INS43 INS59 INS8 INS12 INS8 INS42 INS43 INS59 INS8 INS12 INS8 INS43 INS41 INS42 INS42 INS41 INS32 INS42 INS33 INS42 INS42 INS14 INS25 MOV41 INS44 INS8 INS21 INS42 INS42 INS14 INS60 INS25 INS41 INS44 INS8 INS21 INS42 INS32 INS42 INS42 INS43 INS27 INS8 INS43 INS42 INS21 INS6 INS41 INS32 INS43 INS43 INS59 INS27 INS8 INS42 INS43 INS42 INS21 INS6 INS41 INS32 INS42 INS42 INS42 INS42 INS33 INS21 INS21 INS42 INS32 INS9 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS33 INS21 INS21 INS21 INS21 INS42 INS32 INS9 INS33 INS42 INS42 INS42 INS32 INS7 INS42 INS42 INS45 INS7 INS32 INS32 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS34 INS32 INS43 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42