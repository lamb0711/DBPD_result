HDDS-366. Update functions impacted by SCM chill mode in StorageContainerLocationProtocol. Contributed by Ajay Kumar.

+import org.apache.hadoop.hdds.protocol.proto.HddsProtos.ScmOps;
+import org.apache.hadoop.hdds.scm.ScmUtils;
+import org.apache.hadoop.hdds.scm.exceptions.SCMException;
+import org.apache.hadoop.hdds.scm.exceptions.SCMException.ResultCodes;
+import org.apache.hadoop.hdds.server.events.EventHandler;
+import org.apache.hadoop.hdds.server.events.EventPublisher;
-    StorageContainerLocationProtocol {
+    StorageContainerLocationProtocol, EventHandler<Boolean> {
+  private ChillModePrecheck chillModePrecheck = new ChillModePrecheck();
+    ScmUtils.preCheck(ScmOps.allocateContainer, chillModePrecheck);
+    if (chillModePrecheck.isInChillMode()) {
+      ContainerInfo contInfo = scm.getScmContainerManager()
+          .getContainer(containerID);
+      if (contInfo.isContainerOpen()) {
+        if (!hasRequiredReplicas(contInfo)) {
+          throw new SCMException("Open container " + containerID + " doesn't"
+              + " have enough replicas to service this operation in "
+              + "Chill mode.", ResultCodes.CHILL_MODE_EXCEPTION);
+        }
+      }
+    }
+  /**
+   * Check if container reported replicas are equal or greater than required
+   * replication factor.
+   */
+  private boolean hasRequiredReplicas(ContainerInfo contInfo) {
+    try{
+      return getScm().getScmContainerManager().getStateManager()
+          .getContainerReplicas(contInfo.containerID())
+          .size() >= contInfo.getReplicationFactor().getNumber();
+    } catch (SCMException ex) {
+      // getContainerReplicas throws exception if no replica's exist for given
+      // container.
+      return false;
+    }
+  }
+
+   * Set chill mode status based on SCMEvents.CHILL_MODE_STATUS event.
+   */
+  @Override
+  public void onMessage(Boolean inChillMOde, EventPublisher publisher) {
+    chillModePrecheck.setInChillMode(inChillMOde);
+  }
+
+  /**
+   * Set chill mode status based on .
+   */
+  public boolean getChillModeStatus() {
+    return chillModePrecheck.isInChillMode();
+  }
+
+
+  /**

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS74 INS23 INS31 INS31 INS31 INS43 INS43 INS83 INS43 INS59 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS29 INS83 INS39 INS42 INS8 INS42 INS42 INS42 INS42 INS14 INS21 INS25 INS65 INS43 INS42 INS54 INS65 INS42 INS43 INS42 INS43 INS42 INS21 INS65 INS41 INS43 INS32 INS32 INS8 INS66 INS66 INS42 INS8 INS12 INS66 INS42 INS42 INS32 INS66 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS60 INS25 INS41 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS8 INS27 INS43 INS42 INS41 INS42 INS42 INS32 INS42 INS42 INS25 INS32 INS32 INS42 INS9 INS32 INS42 INS42 INS38 INS8 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS53 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS14 INS32 INS42 INS42 INS42 INS43 INS27 INS40 INS32 INS42 INS42 INS45 INS42 INS45 INS45 INS45 INS42