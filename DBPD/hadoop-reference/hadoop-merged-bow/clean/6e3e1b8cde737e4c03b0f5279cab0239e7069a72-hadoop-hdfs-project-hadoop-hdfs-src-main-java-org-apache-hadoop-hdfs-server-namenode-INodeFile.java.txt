HDFS-12915. Fix findbugs warning in INodeFile$HeaderFormat.getBlockLayoutRedundancy. (Contributed by Chris Douglas)

-import org.apache.hadoop.fs.permission.PermissionStatus;
+import org.apache.hadoop.fs.permission.PermissionStatus;
+import org.apache.hadoop.hdfs.protocol.BlockType;
-import org.apache.hadoop.hdfs.protocol.BlockType;
+import org.apache.hadoop.util.StringUtils;
+import static org.apache.hadoop.io.erasurecode.ErasureCodeConstants.REPLICATION_POLICY_ID;
-import org.apache.hadoop.io.erasurecode.ErasureCodeConstants;
-import org.apache.hadoop.util.StringUtils;
-    static long getBlockLayoutRedundancy(final BlockType blockType,
-        final Short replication, final Byte erasureCodingPolicyID) {
-      long layoutRedundancy = 0;
-      if (blockType == STRIPED) {
-        Preconditions.checkArgument(replication == null &&
-            erasureCodingPolicyID != null);
-        Preconditions.checkArgument(ErasureCodingPolicyManager.getInstance()
-                .getByID(erasureCodingPolicyID) != null,
-            "Could not find EC policy with ID 0x" + StringUtils
-                .byteToHexString(erasureCodingPolicyID));
+    static long getBlockLayoutRedundancy(BlockType blockType,
+        Short replication, Byte erasureCodingPolicyID) {
+      if (null == erasureCodingPolicyID) {
+        erasureCodingPolicyID = REPLICATION_POLICY_ID;
+      }
+      long layoutRedundancy = 0xFF & erasureCodingPolicyID;
+      switch (blockType) {
+      case STRIPED:
+        if (replication != null) {
+          throw new IllegalArgumentException(
+              "Illegal replication for STRIPED block type");
+        }
+        if (erasureCodingPolicyID == REPLICATION_POLICY_ID) {
+          throw new IllegalArgumentException(
+              "Illegal REPLICATION policy for STRIPED block type");
+        }
+        if (null == ErasureCodingPolicyManager.getInstance()
+            .getByID(erasureCodingPolicyID)) {
+          throw new IllegalArgumentException(String.format(
+                "Could not find EC policy with ID 0x%02x",
+                erasureCodingPolicyID));
+        }
+
+        // valid parameters for STRIPED
-        // Following bitwise OR with signed byte erasureCodingPolicyID is safe
-        // as the PolicyID can never be in negative.
-        layoutRedundancy |= erasureCodingPolicyID;
-      } else {
-        Preconditions.checkArgument(erasureCodingPolicyID == null ||
-                erasureCodingPolicyID ==
-                    ErasureCodeConstants.REPLICATION_POLICY_ID);
-        Preconditions.checkArgument(replication != null && replication >= 0 &&
-            replication <= MAX_REDUNDANCY,
-            "Invalid replication value " + replication);
+        break;
+      case CONTIGUOUS:
+        if (erasureCodingPolicyID != REPLICATION_POLICY_ID) {
+          throw new IllegalArgumentException(String.format(
+              "Illegal EC policy 0x%02x for CONTIGUOUS block type",
+              erasureCodingPolicyID));
+        }
+        if (null == replication ||
+            replication < 0 || replication > MAX_REDUNDANCY) {
+          throw new IllegalArgumentException("Invalid replication value "
+              + replication);
+        }
+
+        // valid parameters for CONTIGUOUS
+        break;
+      default:
+        throw new IllegalArgumentException("Unknown blockType: " + blockType);
-    return ErasureCodeConstants.REPLICATION_POLICY_ID;
+    return REPLICATION_POLICY_ID;

MOV26 MOV26 MOV26 MOV26 UPD40 INS25 INS50 INS42 INS27 INS8 INS42 INS49 INS25 INS25 INS25 MOV21 INS10 INS49 INS25 INS25 MOV21 INS10 INS49 INS53 INS33 INS42 INS21 INS27 INS42 MOV27 INS8 INS27 INS8 UPD27 MOV27 MOV32 INS8 INS42 INS27 INS8 INS27 INS8 INS14 INS7 INS34 INS42 INS53 MOV42 INS42 INS53 INS53 INS42 INS42 INS53 UPD27 MOV27 UPD27 MOV27 INS53 INS43 INS27 INS42 INS42 INS14 INS14 INS14 INS14 INS27 UPD27 INS14 INS42 INS45 INS42 INS43 INS45 INS43 INS45 INS43 INS32 INS43 INS32 INS33 INS42 INS43 MOV27 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS45 MOV42 INS42 INS42 INS42 INS45 INS42 INS42 DEL83 DEL83 DEL83 DEL34 DEL42 DEL42 DEL27 DEL42 DEL42 DEL42 DEL33 DEL27 DEL33 DEL27 DEL27 DEL32 DEL21 DEL42 DEL42 DEL45 DEL32 DEL27 DEL32 DEL21 DEL42 DEL42 DEL7 DEL21 DEL8 DEL42 DEL42 DEL42 DEL33 DEL27 DEL42 DEL40 DEL27 DEL27 DEL32 DEL21 DEL42 DEL42 DEL27 DEL32 DEL21 DEL8 DEL25 DEL40