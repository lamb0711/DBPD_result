Merge remote-tracking branch 'apache/trunk' into HDFS-7285

-import static org.apache.hadoop.hdfs.DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_DEFAULT;
-import static org.apache.hadoop.hdfs.DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_KEY;
+import static org.apache.hadoop.hdfs.client.HdfsClientConfigKeys.DFS_BYTES_PER_CHECKSUM_DEFAULT;
+import static org.apache.hadoop.hdfs.client.HdfsClientConfigKeys.DFS_BYTES_PER_CHECKSUM_KEY;
-import static org.apache.hadoop.hdfs.DFSConfigKeys.DFS_CLIENT_WRITE_PACKET_SIZE_DEFAULT;
-import static org.apache.hadoop.hdfs.DFSConfigKeys.DFS_CLIENT_WRITE_PACKET_SIZE_KEY;
+import static org.apache.hadoop.hdfs.client.HdfsClientConfigKeys.DFS_CLIENT_WRITE_PACKET_SIZE_DEFAULT;
+import static org.apache.hadoop.hdfs.client.HdfsClientConfigKeys.DFS_CLIENT_WRITE_PACKET_SIZE_KEY;
-      final BlockUnderConstructionFeature uc = lastBlock.getUnderConstructionFeature();
+      BlockUnderConstructionFeature uc =
+          lastBlock.getUnderConstructionFeature();
-      long blockRecoveryId =
-          nextGenerationStamp(blockIdManager.isLegacyBlock(lastBlock));
+      long blockRecoveryId = nextGenerationStamp(
+          blockIdManager.isLegacyBlock(lastBlock));
-  public boolean isInSnapshot(BlockCollection bc) {
+  public boolean isInSnapshot(BlockInfo blockUC) {
+    final BlockCollection bc = blockManager.getBlockCollection(blockUC);
+  @Override
+  public BlockCollection getBlockCollection(long id) {
+    INode inode = getFSDirectory().getInode(id);
+    return inode == null ? null : inode.asFile();
+  }
+
-      INodeFile iFile = ((INode)storedBlock.getBlockCollection()).asFile();
+      long bcId = storedBlock.getBlockCollectionId();
+      INodeFile iFile = ((INode)getBlockCollection(bcId)).asFile();
-          BlockInfo blockInfo = getStoredBlock(b);
-          if (blockInfo.getBlockCollection().getStoragePolicyID()
-              == lpPolicy.getId()) {
-            filesToDelete.add(blockInfo.getBlockCollection());
+          BlockInfo blockInfo = blockManager.getStoredBlock(b);
+          BlockCollection bc = getBlockCollection(
+              blockInfo.getBlockCollectionId());
+          if (bc.getStoragePolicyID() == lpPolicy.getId()) {
+            filesToDelete.add(bc);
-    getBlockManager().getDatanodeManager().fetchDatanodes(live, null, true);
+    getBlockManager().getDatanodeManager().fetchDatanodes(live, null, false);
-    getBlockManager().getDatanodeManager().fetchDatanodes(null, dead, true);
+    getBlockManager().getDatanodeManager().fetchDatanodes(null, dead, false);
-    final INodeFile file = ((INode)storedBlock.getBlockCollection()).asFile();
+    long bcId = storedBlock.getBlockCollectionId();
+    final INodeFile file = ((INode)getBlockCollection(bcId)).asFile();
-        final INode inode = (INode)blockManager.getBlockCollection(blk);
+        BlockCollection bc = getBlockCollection(blk.getBlockCollectionId());
+        final INode inode = (INode)bc;
+  /**
+   * Return total number of Sync Operations on FSEditLog.
+   */
+  @Override
+  @Metric({"TotalSyncCount",
+              "Total number of sync operations performed on edit logs"})
+  public long getTotalSyncCount() {
+    return fsImage.editLog.getTotalSyncCount();
+  }
+
+  /**
+   * Return total time spent doing sync operations on FSEditLog.
+   */
+  @Override
+  @Metric({"TotalSyncTimes",
+              "Total time spend in sync operation on various edit logs"})
+  public String getTotalSyncTimes() {
+    JournalSet journalSet = fsImage.editLog.getJournalSet();
+    if (journalSet != null) {
+      return journalSet.getSyncTimes();
+    } else {
+      return "";
+    }
+  }

UPD40 UPD40 UPD40 UPD40 INS31 INS31 INS31 INS78 INS83 INS43 INS42 INS44 INS8 INS29 INS78 INS79 INS83 INS39 INS42 INS8 INS29 INS78 INS79 INS83 INS43 INS42 INS8 INS43 UPD42 INS60 INS42 INS42 INS39 INS42 INS60 INS41 INS21 MOV21 INS60 INS65 INS42 INS42 INS4 INS41 INS65 INS42 INS42 INS4 INS42 INS60 INS25 INS42 INS83 INS43 INS59 INS43 INS59 INS16 INS32 INS39 INS59 INS66 INS45 INS45 INS32 INS66 INS45 INS45 INS43 INS59 INS27 INS8 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS27 INS33 INS32 INS60 MOV32 INS42 INS42 INS33 INS9 INS33 UPD42 UPD9 INS42 INS32 INS40 INS42 INS42 INS42 INS32 INS42 INS33 INS41 INS41 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS33 INS42 INS42 INS39 INS59 INS42 INS42 INS40 INS42 INS32 INS45 INS42 INS42 INS32 INS60 INS42 INS42 INS42 INS42 INS60 INS43 INS59 MOV43 INS59 UPD42 UPD42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 UPD42 UPD42 INS42 INS42 INS32 UPD42 MOV42 INS42 INS42 INS42 INS42 UPD42 MOV42 DEL83 DEL42 DEL32 DEL42 DEL32 DEL33 DEL42 DEL33 DEL42 DEL9 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32