HDFS-7270. Add congestion signaling capability to DataNode write protocol. Contributed by Haohui Mai.

-  
-  private static final Status[] MIRROR_ERROR_STATUS = {Status.SUCCESS, Status.ERROR};
-  
+
-            ackStatus);
+            PipelineAck.combineHeader(datanode.getECN(), ackStatus));
-                    Status.SUCCESS);
+                    PipelineAck.combineHeader(datanode.getECN(),
+                      Status.SUCCESS));
+          Status myStatus = pkt != null ? pkt.ackStatus : Status.SUCCESS;
-              (pkt != null ? pkt.offsetInBlock : 0), 
-              (pkt != null ? pkt.ackStatus : Status.SUCCESS));
+            (pkt != null ? pkt.offsetInBlock : 0),
+            PipelineAck.combineHeader(datanode.getECN(), myStatus));
-     * @param myStatus the local ack status
+     * @param myHeader the local ack header
-        Status myStatus) throws IOException {
+        int myHeader) throws IOException {
-              offsetInBlock, myStatus);
+              offsetInBlock, myHeader);
-     * @param myStatus the local ack status
+     * @param myHeader the local ack header
-        long totalAckTimeNanos, long offsetInBlock, Status myStatus)
+        long totalAckTimeNanos, long offsetInBlock, int myHeader)
-      Status[] replies = null;
+      final int[] replies;
-        replies = new Status[1];
-        replies[0] = myStatus;
+        replies = new int[] { myHeader };
-        replies = MIRROR_ERROR_STATUS;
+        int h = PipelineAck.combineHeader(datanode.getECN(), Status.SUCCESS);
+        int h1 = PipelineAck.combineHeader(datanode.getECN(), Status.ERROR);
+        replies = new int[] {h, h1};
-        replies = new Status[1 + ackLen];
-        replies[0] = myStatus;
-        for (int i = 0; i < ackLen; i++) {
+        replies = new int[ackLen + 1];
+        replies[0] = myHeader;
+        for (int i = 0; i < ackLen; ++i) {
-        // do self-destruct to mark myself bad, instead of making the 
+        // do self-destruct to mark myself bad, instead of making the
-        if (ackLen > 0 && replies[1] == Status.ERROR_CHECKSUM) {
+        if (ackLen > 0 && PipelineAck.getStatusFromHeader(replies[1]) ==
+          Status.ERROR_CHECKSUM) {
-      // sending ERROR_CHECKSUM back. 
+      // sending ERROR_CHECKSUM back.
+      Status myStatus = PipelineAck.getStatusFromHeader(myHeader);
-  
+

INS39 UPD42 INS39 UPD42 INS60 UPD42 UPD66 UPD42 UPD66 INS83 UPD5 MOV43 INS59 INS39 INS42 INS32 INS60 INS60 INS42 INS42 INS42 INS32 INS60 INS39 INS59 INS39 INS59 INS38 INS42 INS42 INS32 MOV42 MOV43 INS59 UPD5 INS4 INS42 INS32 INS42 INS32 INS3 UPD42 INS42 INS42 INS42 INS42 MOV16 INS32 UPD42 INS39 INS42 INS42 INS42 INS32 INS40 INS42 INS42 INS32 INS40 INS5 INS4 UPD5 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS39 INS85 INS42 INS42 INS39 INS42 INS42 INS42 MOV2 INS42 INS42 INS32 INS42 INS42 INS32 MOV40 INS42 INS42 DEL83 DEL83 DEL83 DEL42 DEL43 DEL85 DEL5 DEL42 DEL40 DEL40 DEL4 DEL59 DEL23 DEL36 DEL42 DEL43 DEL42 DEL43 DEL33 DEL42 DEL43 DEL34 DEL42 DEL34 DEL2 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL37