merge from trunk r1602933

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1602947 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.tools.CopyListing.XAttrsNotSupportedException;
+import java.util.Iterator;
+import java.util.Map;
+import java.util.Map.Entry;
+    
+    if (attributes.contains(FileAttribute.XATTR)) {
+      Map<String, byte[]> srcXAttrs = srcFileStatus.getXAttrs();
+      Map<String, byte[]> targetXAttrs = getXAttrs(targetFS, path);
+      if (!srcXAttrs.equals(targetXAttrs)) {
+        Iterator<Entry<String, byte[]>> iter = srcXAttrs.entrySet().iterator();
+        while (iter.hasNext()) {
+          Entry<String, byte[]> entry = iter.next();
+          targetFS.setXAttr(path, entry.getKey(), entry.getValue());
+        }
+      }
+    }
+  
+  /**
+   * Returns a file's all xAttrs.
+   * 
+   * @param fileSystem FileSystem containing the file
+   * @param path file path
+   * @return Map<String, byte[]> containing all xAttrs
+   * @throws IOException if there is an I/O error
+   */
+  public static Map<String, byte[]> getXAttrs(FileSystem fileSystem,
+      Path path) throws IOException {
+    return fileSystem.getXAttrs(path);
+  }
-   * populates the CopyListingFileStatus with the ACLs.
+   * populates the CopyListingFileStatus with the ACLs. If preserving XAttrs,
+   * populates the CopyListingFileStatus with the XAttrs.
+   * @param preserveXAttrs boolean true if preserving XAttrs
-      FileSystem fileSystem, FileStatus fileStatus, boolean preserveAcls)
-      throws IOException {
+      FileSystem fileSystem, FileStatus fileStatus, boolean preserveAcls, 
+      boolean preserveXAttrs) throws IOException {
+    if (preserveXAttrs) {
+      Map<String, byte[]> xAttrs = fileSystem.getXAttrs(fileStatus.getPath());
+      copyListingFileStatus.setXAttrs(xAttrs);
+    }
+  
+  /**
+   * Determines if a file system supports XAttrs by running a getXAttrs request
+   * on the file system root. This method is used before distcp job submission
+   * to fail fast if the user requested preserving XAttrs, but the file system
+   * cannot support XAttrs.
+   * 
+   * @param fs FileSystem to check
+   * @throws XAttrsNotSupportedException if fs does not support XAttrs
+   */
+  public static void checkFileSystemXAttrSupport(FileSystem fs)
+      throws XAttrsNotSupportedException {
+    try {
+      fs.getXAttrs(new Path(Path.SEPARATOR));
+    } catch (Exception e) {
+      throw new XAttrsNotSupportedException("XAttrs not supported for file system: "
+        + fs.getUri());
+    }
+  }

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS31 INS29 INS83 INS83 INS74 INS42 INS44 INS44 INS43 INS8 INS44 INS29 INS83 INS83 INS39 INS42 INS44 INS43 INS8 INS25 INS65 INS65 INS65 INS65 INS65 INS43 INS43 INS5 INS43 INS42 INS43 INS42 INS42 INS41 INS65 INS39 INS42 INS25 INS65 INS65 INS65 INS43 INS42 INS42 INS54 INS32 INS8 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS42 INS39 INS85 INS42 INS42 INS32 INS66 UPD66 INS42 INS66 INS42 INS8 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS8 INS12 INS42 INS42 INS40 INS60 INS60 INS25 INS42 INS42 INS42 INS60 INS21 INS21 INS44 INS8 INS74 INS59 INS74 INS59 INS38 INS8 INS74 INS59 INS32 INS32 INS43 INS42 INS53 INS43 INS43 INS5 INS42 INS32 INS43 INS43 INS5 INS42 INS32 INS32 INS60 INS61 INS43 INS43 INS5 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS14 INS42 INS42 INS39 INS85 INS42 INS42 INS42 INS42 INS39 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS32 INS8 INS42 INS42 INS39 INS85 INS42 INS42 INS32 INS43 INS40 INS43 INS27 INS43 INS74 INS42 INS32 INS42 INS42 INS60 INS21 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS43 INS43 INS5 INS32 INS42 INS74 INS59 INS32 INS42 INS42 INS42 INS42 INS39 INS85 INS42 INS42 INS43 INS43 INS5 INS42 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS39 INS85 INS42 INS42 INS42 INS42 INS42 INS42