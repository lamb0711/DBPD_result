HDDS-793. Support custom key/value annotations on volume/bucket/key. Contributed by Elek, Marton.

+
+import java.util.HashMap;
+import java.util.Objects;
-public final class OmBucketInfo implements Auditable {
+public final class OmBucketInfo extends WithMetadata implements Auditable {
-  private OmBucketInfo(String volumeName, String bucketName,
-                       List<OzoneAcl> acls, boolean isVersionEnabled,
-                       StorageType storageType, long creationTime) {
+  private OmBucketInfo(String volumeName,
+                       String bucketName,
+                       List<OzoneAcl> acls,
+                       boolean isVersionEnabled,
+                       StorageType storageType,
+                       long creationTime,
+                       Map<String, String> metadata) {
+    this.metadata = metadata;
+    private Map<String, String> metadata;
+      this.metadata = new HashMap<>();
+    public Builder addMetadata(String key, String value) {
+      metadata.put(key, value);
+      return this;
+    }
+
+    public Builder addAllMetadata(Map<String, String> additionalMetadata) {
+      metadata.putAll(additionalMetadata);
+      return this;
+    }
+
-          isVersionEnabled, storageType, creationTime);
+          isVersionEnabled, storageType, creationTime, metadata
+      );
+        .addAllMetadata(KeyValueUtil.toProtobuf(metadata))
-        bucketInfo.getCreationTime());
+        bucketInfo.getCreationTime(),
+        KeyValueUtil.getFromProtobuf(bucketInfo.getMetadataList()));
+  }
+
+  @Override
+  public boolean equals(Object o) {
+    if (this == o) {
+      return true;
+    }
+    if (o == null || getClass() != o.getClass()) {
+      return false;
+    }
+    OmBucketInfo that = (OmBucketInfo) o;
+    return creationTime == that.creationTime &&
+        volumeName.equals(that.volumeName) &&
+        bucketName.equals(that.bucketName) &&
+        Objects.equals(acls, that.acls) &&
+        Objects.equals(isVersionEnabled, that.isVersionEnabled) &&
+        storageType == that.storageType &&
+        Objects.equals(metadata, that.metadata);
+  }
+
+  @Override
+  public int hashCode() {
+    return Objects.hash(volumeName, bucketName);

INS26 INS26 INS40 INS40 INS43 INS31 INS31 INS42 INS44 INS23 INS31 INS31 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS8 INS74 INS42 INS21 INS83 INS74 INS59 INS83 INS43 INS42 INS44 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS42 INS43 INS42 INS25 INS25 INS60 INS41 INS42 INS41 INS43 INS43 INS43 INS7 INS43 INS43 INS43 INS42 INS21 INS42 INS43 INS42 INS43 INS42 INS21 INS41 INS42 INS74 INS42 INS21 INS41 INS32 INS42 INS27 INS8 INS27 INS8 INS43 INS59 INS27 INS32 INS42 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS7 INS42 INS42 INS32 INS52 INS43 INS43 INS43 INS32 INS52 MOV32 INS42 INS32 INS52 INS42 INS41 INS27 INS27 INS41 INS42 INS42 INS11 INS27 INS32 INS42 INS42 INS42 INS42 INS52 INS42 INS22 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS9 INS42 INS33 INS32 INS32 INS9 INS43 INS42 INS27 INS27 INS42 INS42 INS42 INS40 INS52 INS42 INS74 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS32 INS42 INS40 INS43 INS27 INS32 INS42 INS42 INS42 INS40 INS42 INS27 INS32 INS42 INS42 INS42 INS40 INS27 INS32 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS40