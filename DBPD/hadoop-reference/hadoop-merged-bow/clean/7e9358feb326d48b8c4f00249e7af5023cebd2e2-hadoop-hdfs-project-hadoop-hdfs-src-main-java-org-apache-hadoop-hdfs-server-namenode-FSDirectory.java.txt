HDFS-3107. Introduce truncate. Contributed by Plamen Jeliazkov.
-  
+
+  /**
+   * FSEditLogLoader implementation.
+   * Unlike FSNamesystem.truncate, this will not schedule block recovery.
+   */
+  void unprotectedTruncate(String src, String clientName, String clientMachine,
+                           long newLength, long mtime)
+      throws UnresolvedLinkException, QuotaExceededException,
+      SnapshotAccessControlException, IOException {
+    INodesInPath iip = getINodesInPath(src, true);
+    BlocksMapUpdateInfo collectedBlocks = new BlocksMapUpdateInfo();
+    boolean onBlockBoundary =
+        unprotectedTruncate(iip, newLength, collectedBlocks, mtime);
+
+    if(! onBlockBoundary) {
+      getFSNamesystem().prepareFileForWrite(src,
+          iip, clientName, clientMachine, false, false);
+    }
+    getFSNamesystem().removeBlocksAndUpdateSafemodeTotal(collectedBlocks);
+  }
+
+  boolean truncate(INodesInPath iip, long newLength,
+                   BlocksMapUpdateInfo collectedBlocks,
+                   long mtime)
+      throws IOException {
+    writeLock();
+    try {
+      return unprotectedTruncate(iip, newLength, collectedBlocks, mtime);
+    } finally {
+      writeUnlock();
+    }
+  }
+
+  /**
+   * Truncate has the following properties:
+   * 1.) Any block deletions occur now.
+   * 2.) INode length is truncated now â€“ clients can only read up to new length.
+   * 3.) INode will be set to UC and lastBlock set to UNDER_RECOVERY.
+   * 4.) NN will trigger DN truncation recovery and waits for DNs to report.
+   * 5.) File is considered UNDER_RECOVERY until truncation recovery completes.
+   * 6.) Soft and hard Lease expiration require truncation recovery to complete.
+   *
+   * @return true if on the block boundary or false if recovery is need
+   */
+  boolean unprotectedTruncate(INodesInPath iip, long newLength,
+                              BlocksMapUpdateInfo collectedBlocks,
+                              long mtime) throws IOException {
+    assert hasWriteLock();
+    INodeFile file = iip.getLastINode().asFile();
+    long oldDiskspace = file.diskspaceConsumed();
+    long remainingLength =
+        file.collectBlocksBeyondMax(newLength, collectedBlocks);
+    file.setModificationTime(mtime);
+    updateCount(iip, 0, file.diskspaceConsumed() - oldDiskspace, true);
+    // If on block boundary, then return
+    long lastBlockDelta = remainingLength - newLength;
+    if(lastBlockDelta == 0)
+      return true;
+    // Set new last block length
+    BlockInfo lastBlock = file.getLastBlock();
+    assert lastBlock.getNumBytes() - lastBlockDelta > 0 : "wrong block size";
+    lastBlock.setNumBytes(lastBlock.getNumBytes() - lastBlockDelta);
+    return false;
+  }
+

INS31 INS31 INS31 INS29 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS43 INS43 INS43 INS43 INS8 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS29 INS39 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS42 INS42 INS42 INS42 INS60 INS60 INS60 INS25 INS21 INS43 INS42 INS39 INS42 INS43 INS42 INS39 INS42 INS42 INS21 INS54 INS65 INS65 INS43 INS42 INS39 INS42 INS43 INS42 INS39 INS42 INS42 INS6 INS60 INS60 INS60 INS21 INS21 INS60 INS25 INS60 INS6 INS21 INS41 INS66 INS66 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS39 INS59 INS38 INS8 INS32 INS42 INS42 INS32 INS8 INS8 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS42 INS32 INS43 INS59 INS39 INS59 INS39 INS59 INS32 INS32 INS39 INS59 INS27 INS41 INS43 INS59 INS27 INS45 INS32 INS9 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS32 INS42 INS21 INS32 INS42 INS42 INS42 INS41 INS21 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS34 INS27 INS9 INS42 INS27 INS42 INS34 INS9 INS42 INS42 INS32 INS27 INS34 INS42 INS42 INS27 INS42 INS42 INS9 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS9 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42