MAPREDUCE-6542. HistoryViewer uses SimpleDateFormat, but SimpleDateFormat is not threadsafe. Contributed by zhangyubiao.

-import java.util.Date;
+import org.apache.commons.lang.time.FastDateFormat;
-   * Formats time in ms and appends difference (finishTime - startTime) 
-   * as returned by formatTimeDiff().
-   * If finish time is 0, empty string is returned, if start time is 0 
-   * then difference is not appended to return value. 
-   * @param finishTime fnish time
-   * @param startTime start time
-   * @return formatted value. 
+   * @param finishTime finish time
+   * @param startTime  start time
+   * @return formatted value.
+   * Formats time in ms and appends difference (finishTime - startTime)
+   * as returned by formatTimeDiff().
+   * If finish time is 0, empty string is returned, if start time is 0
+   * then difference is not appended to return value.
+   * @deprecated Use
+   * {@link StringUtils#getFormattedTimeWithDiff(FastDateFormat, long, long)} or
+   * {@link StringUtils#getFormattedTimeWithDiff(String, long, long)} instead.
-  public static String getFormattedTimeWithDiff(DateFormat dateFormat, 
-                                                long finishTime, long startTime){
+  @Deprecated
+  public static String getFormattedTimeWithDiff(DateFormat dateFormat,
+      long finishTime, long startTime){
+    String formattedFinishTime = dateFormat.format(finishTime);
+    return getFormattedTimeWithDiff(formattedFinishTime, finishTime, startTime);
+  }
+
+  /**
+   * Formats time in ms and appends difference (finishTime - startTime)
+   * as returned by formatTimeDiff().
+   * If finish time is 0, empty string is returned, if start time is 0
+   * then difference is not appended to return value.
+   *
+   * @param dateFormat date format to use
+   * @param finishTime finish time
+   * @param startTime  start time
+   * @return formatted value.
+   */
+  public static String getFormattedTimeWithDiff(FastDateFormat dateFormat,
+      long finishTime, long startTime) {
+    String formattedFinishTime = dateFormat.format(finishTime);
+    return getFormattedTimeWithDiff(formattedFinishTime, finishTime, startTime);
+  }
+  /**
+   * Formats time in ms and appends difference (finishTime - startTime)
+   * as returned by formatTimeDiff().
+   * If finish time is 0, empty string is returned, if start time is 0
+   * then difference is not appended to return value.
+   * @param formattedFinishTime formattedFinishTime to use
+   * @param finishTime finish time
+   * @param startTime start time
+   * @return formatted value.
+   */
+  public static String getFormattedTimeWithDiff(String formattedFinishTime,
+      long finishTime, long startTime){
-      buf.append(dateFormat.format(new Date(finishTime)));
+      buf.append(formattedFinishTime);

MOV26 UPD40 INS31 INS31 INS29 INS78 INS83 INS83 INS43 INS42 MOV44 INS44 INS44 INS8 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS8 INS44 INS65 INS65 INS65 INS65 INS65 INS42 INS42 INS39 INS42 INS39 INS42 INS60 INS41 INS65 MOV65 INS65 INS65 INS65 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS60 INS41 INS65 INS43 INS42 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS65 INS66 INS65 INS66 INS43 INS59 INS32 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS43 INS59 INS32 UPD66 UPD66 UPD66 INS42 INS66 UPD66 UPD66 INS42 INS68 INS68 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS69 INS69 INS69 INS42 INS42 INS69 INS69 INS69 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS39 INS39 INS43 INS39 INS39 INS42 INS42 INS42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL14 DEL32