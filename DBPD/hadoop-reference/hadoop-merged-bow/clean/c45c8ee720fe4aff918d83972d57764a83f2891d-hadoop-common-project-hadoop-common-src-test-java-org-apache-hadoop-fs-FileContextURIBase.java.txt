Complete commit of prior merge.

The previous merge accidentally only committed the hdfs project instead of common and MR
as well.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-347@1463203 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.regex.Pattern;
+import org.apache.hadoop.util.Shell;
+
+  // Matches anything containing <, >, :, ", |, ?, *, or anything that ends with
+  // space or dot.
+  private static final Pattern WIN_INVALID_FILE_NAME_PATTERN = Pattern.compile(
+    "^(.*?[<>\\:\"\\|\\?\\*].*?)|(.*?[ \\.])$");
+
+      if (!isTestableFileNameOnPlatform(f)) {
+        continue;
+      }
+
+      if (!isTestableFileNameOnPlatform(f)) {
+        continue;
+      }
+
+      if (!isTestableFileNameOnPlatform(f)) {
+        continue;
+      }
+
+      if (!isTestableFileNameOnPlatform(d)) {
+        continue;
+      }
+
-    Assert.assertEquals(6, paths.length);
-    for (int i = 0; i < dirs.length; i++) {
+    Assert.assertEquals(testDirs.size(), paths.length);
+    for (int i = 0; i < testDirs.size(); i++) {
-        if (qualifiedPath(dirs[i],fc1).equals(paths[j].getPath())) {
+        if (qualifiedPath(testDirs.get(i).toString(), fc1).equals(
+            paths[j].getPath())) {
+
-      Assert.assertTrue(dirs[i] + " not found", found);
+      Assert.assertTrue(testDirs.get(i) + " not found", found);
-    Assert.assertEquals(6, dirLen);
+    Assert.assertEquals(testDirs.size(), dirLen);
+
+  /**
+   * Returns true if the argument is a file name that is testable on the platform
+   * currently running the test.  This is intended for use by tests so that they
+   * can skip checking file names that aren't supported by the underlying
+   * platform.  The current implementation specifically checks for patterns that
+   * are not valid file names on Windows when the tests are running on Windows.
+   * 
+   * @param fileName String file name to check
+   * @return boolean true if the argument is valid as a file name
+   */
+  private static boolean isTestableFileNameOnPlatform(String fileName) {
+    boolean valid = true;
+
+    if (Shell.WINDOWS) {
+      // Disallow reserved characters: <, >, :, ", |, ?, *.
+      // Disallow trailing space or period.
+      // See http://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx
+      valid = !WIN_INVALID_FILE_NAME_PATTERN.matcher(fileName).matches();
+    }
+
+    return valid;
+  }

INS26 INS26 INS40 INS40 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS32 INS65 INS65 INS65 INS43 INS42 INS60 INS25 INS41 INS42 INS42 INS45 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS39 INS59 INS40 INS8 INS42 INS25 INS25 INS25 INS25 INS32 INS32 INS32 INS42 INS9 INS21 INS38 INS8 INS38 INS8 INS38 INS8 INS38 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS32 INS18 INS32 INS18 INS32 INS18 INS32 INS18 INS42 INS38 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 DEL34 DEL40 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL34