Revert "HADOOP-12897. KerberosAuthenticator.authenticate to include URL on IO failures. Contributed by Ajay Kumar."

This reverts commit 332269de065d0f40eb54ee5e53b765217c24081e.

-import com.google.common.annotations.VisibleForTesting;
-import java.lang.reflect.Constructor;
-      throws IOException, AuthenticationException {
+    throws IOException, AuthenticationException {
-      try {
-        HttpURLConnection conn = token.openConnection(url, connConfigurator);
-        conn.setRequestMethod(AUTH_HTTP_METHOD);
-        conn.connect();
-
-        boolean needFallback = false;
-        if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) {
-          LOG.debug("JDK performed authentication on our behalf.");
-          // If the JDK already did the SPNEGO back-and-forth for
-          // us, just pull out the token.
-          AuthenticatedURL.extractToken(conn, token);
-          if (isTokenKerberos(token)) {
-            return;
-          }
-          needFallback = true;
+      HttpURLConnection conn = token.openConnection(url, connConfigurator);
+      conn.setRequestMethod(AUTH_HTTP_METHOD);
+      conn.connect();
+      
+      boolean needFallback = false;
+      if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) {
+        LOG.debug("JDK performed authentication on our behalf.");
+        // If the JDK already did the SPNEGO back-and-forth for
+        // us, just pull out the token.
+        AuthenticatedURL.extractToken(conn, token);
+        if (isTokenKerberos(token)) {
+          return;
-        if (!needFallback && isNegotiate(conn)) {
-          LOG.debug("Performing our own SPNEGO sequence.");
-          doSpnegoSequence(token);
-        } else {
-          LOG.debug("Using fallback authenticator sequence.");
-          Authenticator auth = getFallBackAuthenticator();
-          // Make sure that the fall back authenticator have the same
-          // ConnectionConfigurator, since the method might be overridden.
-          // Otherwise the fall back authenticator might not have the
-          // information to make the connection (e.g., SSL certificates)
-          auth.setConnectionConfigurator(connConfigurator);
-          auth.authenticate(url, token);
-        }
-      } catch (IOException ex){
-        throw wrapExceptionWithMessage(ex,
-            "Error while authenticating with endpoint: " + url);
-      } catch (AuthenticationException ex){
-        throw wrapExceptionWithMessage(ex,
-            "Error while authenticating with endpoint: " + url);
+        needFallback = true;
-    }
-  }
-
-  @VisibleForTesting
-   static <T extends Exception> T wrapExceptionWithMessage(
-      T exception, String msg) {
-    Class<? extends Throwable> exceptionClass = exception.getClass();
-    try {
-      Constructor<? extends Throwable> ctor = exceptionClass
-          .getConstructor(String.class);
-      Throwable t = ctor.newInstance(msg);
-      return (T) (t.initCause(exception));
-    } catch (Throwable e) {
-      LOG.debug("Unable to wrap exception of type {}, it has "
-          + "no (String) constructor.", exceptionClass, e);
-      return exception;
+      if (!needFallback && isNegotiate(conn)) {
+        LOG.debug("Performing our own SPNEGO sequence.");
+        doSpnegoSequence(token);
+      } else {
+        LOG.debug("Using fallback authenticator sequence.");
+        Authenticator auth = getFallBackAuthenticator();
+        // Make sure that the fall back authenticator have the same
+        // ConnectionConfigurator, since the method might be overridden.
+        // Otherwise the fall back authenticator might not have the information
+        // to make the connection (e.g., SSL certificates)
+        auth.setConnectionConfigurator(connConfigurator);
+        auth.authenticate(url, token);
+      }

MOV8 INS25 MOV38 MOV8 MOV21 MOV21 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL53 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL53 DEL8 DEL12 DEL54 DEL25 DEL8 DEL42 DEL78 DEL83 DEL42 DEL42 DEL43 DEL73 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL76 DEL74 DEL42 DEL42 DEL42 DEL42 DEL43 DEL57 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL36 DEL11 DEL41 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL45 DEL27 DEL42 DEL42 DEL32 DEL21 DEL42 DEL41 DEL8 DEL12 DEL54 DEL8 DEL31