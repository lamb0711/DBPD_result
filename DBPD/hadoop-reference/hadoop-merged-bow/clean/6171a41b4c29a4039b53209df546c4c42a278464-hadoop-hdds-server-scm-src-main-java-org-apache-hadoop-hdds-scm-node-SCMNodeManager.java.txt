HDDS-2199. In SCMNodeManager dnsToUuidMap cannot track multiple DNs on the same host

Closes #1551

+import java.util.LinkedList;
+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
-  private final ConcurrentHashMap<String, String> dnsToUuidMap =
+  private final ConcurrentHashMap<String, Set<String>> dnsToUuidMap =
-      dnsToUuidMap.put(dnsName, datanodeDetails.getUuidString());
+      addEntryTodnsToUuidMap(dnsName, datanodeDetails.getUuidString());
+   * Add an entry to the dnsToUuidMap, which maps hostname / IP to the DNs
+   * running on that host. As each address can have many DNs running on it,
+   * this is a one to many mapping.
+   * @param dnsName String representing the hostname or IP of the node
+   * @param uuid String representing the UUID of the registered node.
+   */
+  @SuppressFBWarnings(value="AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION",
+      justification="The method is synchronized and this is the only place "+
+          "dnsToUuidMap is modified")
+  private synchronized void addEntryTodnsToUuidMap(
+      String dnsName, String uuid) {
+    Set<String> dnList = dnsToUuidMap.get(dnsName);
+    if (dnList == null) {
+      dnList = ConcurrentHashMap.newKeySet();
+      dnsToUuidMap.put(dnsName, dnList);
+    }
+    dnList.add(uuid);
+  }
+
+  /**
-   * Given datanode address(Ipaddress or hostname), returns the DatanodeDetails
-   * for the node.
+   * Given datanode address(Ipaddress or hostname), return a list of
+   * DatanodeDetails for the datanodes registered on that address.
-   * @return the given datanode, or null if not found
+   * @return the given datanode, or empty list if none found
-  public DatanodeDetails getNodeByAddress(String address) {
+  public List<DatanodeDetails> getNodesByAddress(String address) {
+    List<DatanodeDetails> results = new LinkedList<>();
-      return null;
+      return results;
-    String uuid = dnsToUuidMap.get(address);
-    if (uuid != null) {
+    Set<String> uuids = dnsToUuidMap.get(address);
+    if (uuids == null) {
+      LOG.warn("Cannot find node for address {}", address);
+      return results;
+    }
+
+    for (String uuid : uuids) {
-        return nodeStateManager.getNode(temp);
+        results.add(nodeStateManager.getNode(temp));
-    LOG.warn("Cannot find node for address {}", address);
-    return null;
+    return results;

INS26 INS26 INS40 INS40 INS31 UPD74 INS29 INS77 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS74 UPD42 INS74 INS65 INS65 INS65 INS42 INS80 INS80 INS43 INS42 INS43 INS42 INS60 INS25 INS21 INS43 MOV43 INS60 INS70 INS43 MOV43 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS45 INS42 INS27 INS42 INS42 INS74 INS59 INS27 INS8 INS32 UPD66 UPD66 UPD66 INS42 INS74 INS59 INS74 UPD27 INS8 INS44 INS42 MOV8 INS42 INS42 INS45 INS45 INS43 INS43 INS42 INS32 INS42 INS33 INS21 INS21 INS42 INS42 INS42 INS43 INS43 INS42 INS14 INS43 INS43 UPD42 UPD42 MOV21 INS41 MOV43 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS32 INS42 INS42 INS74 INS42 INS42 INS42 INS42 UPD42 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS21 INS42 INS42 INS42 INS32 INS42 INS42 MOV32 DEL42 DEL33 DEL41 DEL33