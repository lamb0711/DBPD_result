HDDS-358. Use DBStore and TableStore for DeleteKeyService. Contributed by Anu Engineer

-                                    String key, long id) {
+      String key, long id) {
-  public List<BlockGroup> getPendingDeletionKeys(final int count)
+  public List<BlockGroup> getPendingDeletionKeys(final int keyCount)
-    // TODO: Fix this later, Not part of this patch.
-    List<Map.Entry<byte[], byte[]>> rangeResult = Collections.emptyList();
-    for (Map.Entry<byte[], byte[]> entry : rangeResult) {
-      OmKeyInfo info =
-          OmKeyInfo.getFromProtobuf(KeyInfo.parseFrom(entry.getValue()));
-      // Get block keys as a list.
-      OmKeyLocationInfoGroup latest = info.getLatestVersionLocations();
-      if (latest == null) {
-        return Collections.emptyList();
+    try (TableIterator<Table.KeyValue> keyIter = getDeletedTable().iterator()) {
+      int currentCount = 0;
+      while (keyIter.hasNext() && currentCount < keyCount) {
+        Table.KeyValue kv = keyIter.next();
+        if (kv != null) {
+          OmKeyInfo info =
+              OmKeyInfo.getFromProtobuf(KeyInfo.parseFrom(kv.getValue()));
+          // Get block keys as a list.
+          OmKeyLocationInfoGroup latest = info.getLatestVersionLocations();
+          if (latest == null) {
+            // This means that we have a key without any blocks.
+            // BUG-BUG: if this happens the key will never be deleted.
+            // TODO: Right thing to do is to remove this key right here.
+            LOG.warn("Found a key without blocks: {}, skipping for now.",
+                DFSUtil.bytes2String(kv.getKey()));
+            continue;
+          }
+          List<BlockID> item = latest.getLocationList().stream()
+              .map(b -> new BlockID(b.getContainerID(), b.getLocalID()))
+              .collect(Collectors.toList());
+          BlockGroup keyBlocks = BlockGroup.newBuilder()
+              .setKeyName(DFSUtil.bytes2String(kv.getKey()))
+              .addAllBlockIDs(item)
+              .build();
+          keyBlocksList.add(keyBlocks);
+          currentCount++;
+        }
-      List<BlockID> item = latest.getLocationList().stream()
-          .map(b -> new BlockID(b.getContainerID(), b.getLocalID()))
-          .collect(Collectors.toList());
-      BlockGroup keyBlocks = BlockGroup.newBuilder()
-          .setKeyName(DFSUtil.bytes2String(entry.getKey()))
-          .addAllBlockIDs(item)
-          .build();
-      keyBlocksList.add(keyBlocks);

INS8 UPD42 MOV60 INS54 MOV41 INS58 INS8 INS74 INS59 INS60 INS61 INS43 INS43 INS42 INS32 INS39 INS59 INS27 MOV8 INS42 INS40 INS32 INS42 INS42 INS34 INS32 INS27 INS25 INS42 INS42 INS42 INS42 INS42 INS43 INS27 MOV8 UPD40 MOV40 UPD42 INS42 INS33 INS21 UPD42 UPD42 INS37 INS21 INS18 INS42 INS32 INS42 INS42 INS45 INS32 UPD42 INS42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 UPD42 DEL42 DEL43 DEL43 DEL39 DEL85 DEL5 DEL39 DEL85 DEL5 DEL74 DEL74 DEL32 DEL41 DEL40 DEL43 DEL39 DEL85 DEL5 DEL39 DEL85 DEL5 DEL74 DEL42 DEL44 DEL42 DEL70