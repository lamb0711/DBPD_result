HDDS-945. Fix generics warnings in delegation token.
Contributed by Ajay Kumar.

-public class OzoneDelegationTokenSecretManager<T extends OzoneTokenIdentifier>
-    extends OzoneSecretManager<T> {
+public class OzoneDelegationTokenSecretManager
+    extends OzoneSecretManager<OzoneTokenIdentifier> {
-  private final Map<T, TokenInfo> currentTokens;
+  private final Map<OzoneTokenIdentifier, TokenInfo> currentTokens;
-  public T createIdentifier() {
-    return (T) T.newInstance();
+  public OzoneTokenIdentifier createIdentifier() {
+    return OzoneTokenIdentifier.newInstance();
-  public T createIdentifier(Text owner, Text renewer, Text realUser) {
-    return (T) T.newInstance(owner, renewer, realUser);
+  public OzoneTokenIdentifier createIdentifier(Text owner, Text renewer,
+      Text realUser) {
+    return OzoneTokenIdentifier.newInstance(owner, renewer, realUser);
-   *                     compatibility
+   * compatibility
-  public Token<T> createToken(Text owner, Text renewer, Text realUser)
+  public Token<OzoneTokenIdentifier> createToken(Text owner, Text renewer,
+      Text realUser)
-    T identifier = createIdentifier(owner, renewer, realUser);
+    OzoneTokenIdentifier identifier = createIdentifier(owner, renewer,
+        realUser);
-    Token<T> token = new Token<>(identifier.getBytes(), password,
+    Token<OzoneTokenIdentifier> token = new Token<>(identifier.getBytes(),
+        password,
-  private void addToTokenStore(T identifier, byte[] password)
+  private void addToTokenStore(OzoneTokenIdentifier identifier, byte[] password)
-  private void updateIdentifierDetails(T identifier) {
+  private void updateIdentifierDetails(OzoneTokenIdentifier identifier) {
-   * @throws InvalidToken           if the token is invalid
+   * @throws InvalidToken if the token is invalid
-  public synchronized long renewToken(Token<T> token, String renewer)
+  public synchronized long renewToken(Token<OzoneTokenIdentifier> token,
+      String renewer)
-    T id = (T) T.readProtoBuf(in);
-    if(LOG.isDebugEnabled()) {
+    OzoneTokenIdentifier id = OzoneTokenIdentifier.readProtoBuf(in);
+    if (LOG.isDebugEnabled()) {
-   * @throws InvalidToken           for invalid token
+   * @throws InvalidToken for invalid token
-  public T cancelToken(Token<T> token, String canceller) throws IOException {
-    T id = (T) T.readProtoBuf(token.getIdentifier());
+  public OzoneTokenIdentifier cancelToken(Token<OzoneTokenIdentifier> token,
+      String canceller) throws IOException {
+    OzoneTokenIdentifier id = OzoneTokenIdentifier.readProtoBuf(
+        token.getIdentifier());
-  public byte[] retrievePassword(T identifier) throws InvalidToken {
+  public byte[] retrievePassword(OzoneTokenIdentifier identifier)
+      throws InvalidToken {
-  public TokenInfo validateToken(T identifier) throws InvalidToken {
+  public TokenInfo validateToken(OzoneTokenIdentifier identifier)
+      throws InvalidToken {
-      throw new InvalidToken("Tampared/Inavalid token.");
+      throw new InvalidToken("Tampered/Invalid token.");
-  private void loadTokenSecretState(OzoneManagerSecretState<T> state)
-      throws IOException {
+  private void loadTokenSecretState(
+      OzoneManagerSecretState<OzoneTokenIdentifier> state) throws IOException {
-    for (Map.Entry<T, Long> entry : state.getTokenState().entrySet()) {
+    for (Map.Entry<OzoneTokenIdentifier, Long> entry :
+        state.getTokenState().entrySet()) {
-      T identifier, long renewDate)
+      OzoneTokenIdentifier identifier, long renewDate)
-  private void removeExpiredToken()  {
+  private void removeExpiredToken() {
-      Iterator<Map.Entry<T,
+      Iterator<Map.Entry<OzoneTokenIdentifier,
-        Map.Entry<T,
+        Map.Entry<OzoneTokenIdentifier,
-            if(LOG.isDebugEnabled()) {
+            if (LOG.isDebugEnabled()) {
+

UPD74 MOV43 UPD74 UPD43 UPD43 UPD74 UPD43 UPD43 UPD42 UPD42 UPD43 UPD43 UPD43 UPD74 UPD42 UPD74 UPD43 UPD43 UPD74 UPD43 UPD42 INS32 INS32 UPD42 UPD43 UPD74 UPD42 UPD42 UPD66 UPD43 UPD43 UPD66 UPD43 UPD43 UPD42 UPD42 UPD43 UPD42 UPD42 MOV42 MOV42 UPD42 MOV42 MOV42 MOV42 MOV42 MOV42 UPD42 UPD43 UPD42 UPD42 INS32 UPD42 UPD42 MOV32 UPD42 UPD74 UPD42 UPD42 MOV42 MOV42 MOV42 UPD42 UPD43 UPD74 UPD45 UPD42 INS74 MOV43 INS43 MOV43 UPD74 MOV74 INS42 UPD43 UPD42 DEL42 DEL73 DEL42 DEL43 DEL42 DEL43 DEL32 DEL11 DEL42 DEL43 DEL32 DEL11 DEL42 DEL43 DEL32 DEL11 DEL42 DEL43 DEL11 DEL42 DEL43 DEL74