HDFS-5076. Add MXBean methods to query NN's transaction information and JournalNode's journal status. Contributed by Jing Zhao.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1514422 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.FileFilter;
+import java.util.HashMap;
+import org.apache.hadoop.metrics2.util.MBeans;
+import org.mortbay.util.ajax.JSON;
-public class JournalNode implements Tool, Configurable {
+public class JournalNode implements Tool, Configurable, JournalNodeMXBean {
+    registerJNMXBean();
+    
+  @Override // JournalNodeMXBean
+  public String getJournalsStatus() {
+    // jid:{Formatted:True/False}
+    Map<String, Map<String, String>> status = 
+        new HashMap<String, Map<String, String>>();
+    synchronized (this) {
+      for (Map.Entry<String, Journal> entry : journalsById.entrySet()) {
+        Map<String, String> jMap = new HashMap<String, String>();
+        jMap.put("Formatted", Boolean.toString(entry.getValue().isFormatted()));
+        status.put(entry.getKey(), jMap);
+      }
+    }
+    
+    // It is possible that some journals have been formatted before, while the 
+    // corresponding journals are not in journalsById yet (because of restarting
+    // JN, e.g.). For simplicity, let's just assume a journal is formatted if
+    // there is a directory for it. We can also call analyzeStorage method for
+    // these directories if necessary.
+    // Also note that we do not need to check localDir here since
+    // validateAndCreateJournalDir has been called before we register the
+    // MXBean.
+    File[] journalDirs = localDir.listFiles(new FileFilter() {
+      @Override
+      public boolean accept(File file) {
+        return file.isDirectory();
+      }
+    });
+    for (File journalDir : journalDirs) {
+      String jid = journalDir.getName();
+      if (!status.containsKey(jid)) {
+        Map<String, String> jMap = new HashMap<String, String>();
+        jMap.put("Formatted", "true");
+        status.put(jid, jMap);
+      }
+    }
+    return JSON.toString(status);
+  }
+  
+  /**
+   * Register JournalNodeMXBean
+   */
+  private void registerJNMXBean() {
+    MBeans.register("JournalNode", "JournalNodeInfo", this);
+  }

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS43 INS31 INS31 INS42 INS78 INS83 INS43 INS42 INS8 INS29 INS83 INS39 INS42 INS8 INS21 INS42 INS42 INS60 INS51 INS60 INS70 INS41 INS65 INS21 INS32 INS74 INS59 INS52 INS8 INS5 INS59 INS44 INS42 INS8 INS32 INS66 INS32 INS42 INS43 INS43 INS74 INS42 INS14 INS70 INS43 INS85 INS42 INS32 INS43 INS42 INS60 INS25 INS42 INS42 INS42 INS42 INS42 INS45 INS45 INS52 INS42 INS42 INS43 INS43 INS43 INS74 INS44 INS32 INS8 INS42 INS42 INS42 INS14 INS42 INS43 INS59 INS38 INS8 INS42 INS42 INS42 INS43 INS43 INS74 INS74 INS42 INS42 INS42 INS60 INS21 INS21 INS43 INS1 INS42 INS42 INS32 INS32 INS60 INS21 INS21 INS42 INS42 INS43 INS43 INS43 INS43 INS43 INS43 INS74 INS59 INS32 INS32 INS42 INS31 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS32 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS45 INS32 INS42 INS42 INS32 INS42 INS78 INS83 INS39 INS42 INS44 INS8 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS42 INS41 INS42 INS42 INS42 INS74 INS43 INS43 INS43 INS32 INS42 INS42 INS32 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42