Merge branch 'trunk' into HDFS-6581

Conflicts:
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/StorageType.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/HdfsFileStatus.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/HdfsLocatedFileStatus.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFileAttributes.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeLayoutVersion.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FSImageFormatPBSnapshot.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/proto/fsimage.proto
	hadoop-hdfs-project/hadoop-hdfs/src/main/proto/hdfs.proto
	hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/DFSTestUtil.java
	hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/MiniDFSCluster.java
	hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFsck.java

-import java.io.DataOutputStream;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.List;
+import java.util.Map;
+import org.apache.hadoop.fs.FSDataOutputStream;
+import org.apache.hadoop.hdfs.DistributedFileSystem;
+import com.google.common.annotations.VisibleForTesting;
+
+  private static boolean write2IdFile = true;
+  
+  /** Create {@link NameNodeConnector} for the given namenodes. */
+  public static List<NameNodeConnector> newNameNodeConnectors(
+      Collection<URI> namenodes, String name, Path idPath, Configuration conf)
+      throws IOException {
+    final List<NameNodeConnector> connectors = new ArrayList<NameNodeConnector>(
+        namenodes.size());
+    for (URI uri : namenodes) {
+      NameNodeConnector nnc = new NameNodeConnector(name, uri, idPath,
+          null, conf);
+      nnc.getKeyManager().startBlockKeyUpdater();
+      connectors.add(nnc);
+    }
+    return connectors;
+  }
+
+  public static List<NameNodeConnector> newNameNodeConnectors(
+      Map<URI, List<Path>> namenodes, String name, Path idPath,
+      Configuration conf) throws IOException {
+    final List<NameNodeConnector> connectors = new ArrayList<NameNodeConnector>(
+        namenodes.size());
+    for (Map.Entry<URI, List<Path>> entry : namenodes.entrySet()) {
+      NameNodeConnector nnc = new NameNodeConnector(name, entry.getKey(),
+          idPath, entry.getValue(), conf);
+      nnc.getKeyManager().startBlockKeyUpdater();
+      connectors.add(nnc);
+    }
+    return connectors;
+  }
+
+  @VisibleForTesting
+  public static void setWrite2IdFile(boolean write2IdFile) {
+    NameNodeConnector.write2IdFile = write2IdFile;
+  }
-  private final FileSystem fs;
+  private final DistributedFileSystem fs;
+  private final List<Path> targetPaths;
-      Configuration conf) throws IOException {
+                           List<Path> targetPaths, Configuration conf)
+      throws IOException {
-    
+    this.targetPaths = targetPaths == null || targetPaths.isEmpty() ? Arrays
+        .asList(new Path("/")) : targetPaths;
+
-    this.fs = FileSystem.get(nameNodeUri, conf);
+    this.fs = (DistributedFileSystem)FileSystem.get(nameNodeUri, conf);
-    // Exit if there is another one running.
-    out = checkAndMarkRunning(); 
+    // if it is for test, we do not create the id file
+    out = checkAndMarkRunning();
+      // Exit if there is another one running.
+  public DistributedFileSystem getDistributedFileSystem() {
+    return fs;
+  }
+
+  /** @return the list of paths to scan/migrate */
+  public List<Path> getTargetPaths() {
+    return targetPaths;
+  }
+
-      final DataOutputStream out = fs.create(idPath);
-      out.writeBytes(InetAddress.getLocalHost().getHostName());
-      out.flush();
+      final FSDataOutputStream out = fs.create(idPath);
+      if (write2IdFile) {
+        out.writeBytes(InetAddress.getLocalHost().getHostName());
+        out.hflush();
+      }

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 INS40 INS23 INS31 INS31 INS31 INS23 INS31 INS31 INS83 INS83 INS39 INS59 INS29 INS83 INS83 INS74 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS83 INS83 INS74 INS42 INS44 INS44 INS44 INS44 INS43 INS8 INS78 INS83 INS83 INS39 INS42 INS44 INS8 UPD43 INS83 INS83 INS74 INS59 INS44 INS83 INS43 INS42 INS8 INS29 INS83 INS74 INS42 INS8 INS42 INS9 INS65 INS43 INS43 INS74 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS70 INS41 INS43 INS43 INS74 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS70 INS41 INS42 INS39 INS42 INS21 UPD42 INS43 INS43 INS42 INS74 INS42 INS21 INS42 INS41 INS65 INS43 INS43 INS41 INS66 INS65 INS66 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS83 INS74 INS59 INS44 INS42 INS8 INS42 INS42 INS42 INS43 INS43 INS74 INS42 INS42 INS42 INS83 INS74 INS59 INS44 INS32 INS8 INS42 INS7 INS42 INS42 INS43 INS43 INS7 INS42 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS14 INS43 INS42 INS60 INS21 INS21 INS42 INS42 INS43 INS43 INS43 INS43 INS42 INS14 INS74 INS42 INS42 INS42 INS60 INS21 INS21 INS40 INS42 INS42 INS42 INS22 INS16 INS11 INS25 INS42 INS42 INS74 INS32 INS42 INS43 INS59 INS32 INS32 INS42 INS42 INS42 INS42 INS74 INS32 INS43 INS43 INS74 INS43 INS59 INS32 INS32 INS52 INS42 INS27 INS32 INS42 INS43 MOV32 UPD43 INS42 INS8 INS43 INS43 INS42 INS42 INS42 INS42 INS14 INS32 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS40 INS42 INS43 INS43 INS42 INS42 INS14 INS32 INS42 INS42 INS42 INS42 INS27 INS32 INS42 INS42 INS14 INS42 UPD42 MOV21 MOV21 INS42 INS42 INS43 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42