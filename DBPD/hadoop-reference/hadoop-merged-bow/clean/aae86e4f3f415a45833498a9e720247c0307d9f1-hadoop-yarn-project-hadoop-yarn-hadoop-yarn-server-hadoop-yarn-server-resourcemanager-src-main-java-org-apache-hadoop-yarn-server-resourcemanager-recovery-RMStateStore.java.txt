merge changes from trunk to HDFS-4949 branch

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1524865 13f79535-47bb-0310-9956-ffa450edef68

+import javax.crypto.SecretKey;
+
+import org.apache.hadoop.service.AbstractService;
-import org.apache.hadoop.yarn.security.client.ClientToAMTokenIdentifier;
-public abstract class RMStateStore {
+public abstract class RMStateStore extends AbstractService {
+
+  public RMStateStore() {
+    super(RMStateStore.class.getName());
+  }
+
-    final Credentials appAttemptTokens;
+    final Credentials appAttemptCredentials;
-        Credentials appAttemptTokens) {
+        Credentials appAttemptCredentials) {
-      this.appAttemptTokens = appAttemptTokens;
+      this.appAttemptCredentials = appAttemptCredentials;
-    public Credentials getAppAttemptTokens() {
-      return appAttemptTokens;
+    public Credentials getAppAttemptCredentials() {
+      return appAttemptCredentials;
-  public void setDispatcher(Dispatcher dispatcher) {
+  public void setRMDispatcher(Dispatcher dispatcher) {
-  public synchronized void init(Configuration conf) throws Exception{    
+  public synchronized void serviceInit(Configuration conf) throws Exception{    
-    dispatcher.start();
-    
+  
+  protected synchronized void serviceStart() throws Exception {
+    dispatcher.start();
+    startInternal();
+  }
-   * The base class is initialized and the event dispatcher is ready to use at
-   * this point
-  
-  public synchronized void close() throws Exception {
+
+  /**
+   * Derived classes start themselves using this method.
+   * The base class is started and the event dispatcher is ready to use at
+   * this point
+   */
+  protected abstract void startInternal() throws Exception;
+
+  public synchronized void serviceStop() throws Exception {
-    Credentials credentials = getTokensFromAppAttempt(appAttempt);
+    Credentials credentials = getCredentialsFromAppAttempt(appAttempt);
-      Credentials credentials = getTokensFromAppAttempt(appAttempt);
+      Credentials credentials = getCredentialsFromAppAttempt(appAttempt);
+
+  public static final Text AM_CLIENT_TOKEN_MASTER_KEY_NAME =
+      new Text("YARN_CLIENT_TOKEN_MASTER_KEY");
-  private Credentials getTokensFromAppAttempt(RMAppAttempt appAttempt) {
+  private Credentials getCredentialsFromAppAttempt(RMAppAttempt appAttempt) {
-    Token<ClientToAMTokenIdentifier> clientToAMToken =
-        appAttempt.getClientToAMToken();
-    if(clientToAMToken != null){
-      credentials.addToken(clientToAMToken.getService(), clientToAMToken);
+    SecretKey clientTokenMasterKey =
+        appAttempt.getClientTokenMasterKey();
+    if(clientTokenMasterKey != null){
+      credentials.addSecretKey(AM_CLIENT_TOKEN_MASTER_KEY_NAME,
+          clientTokenMasterKey.getEncoded());
-          Credentials credentials = attemptState.getAppAttemptTokens();
+          Credentials credentials = attemptState.getAppAttemptCredentials();

MOV26 INS26 INS40 UPD40 INS43 INS31 INS31 INS31 INS23 INS42 INS83 INS42 INS8 UPD42 UPD42 INS83 INS83 INS39 INS42 INS43 INS8 INS29 INS83 INS83 INS39 INS42 MOV44 MOV43 UPD42 INS43 UPD42 INS83 INS83 INS83 INS43 INS59 UPD42 INS46 UPD42 INS42 MOV21 INS21 INS65 INS42 INS42 INS42 INS14 INS32 UPD42 UPD42 INS32 INS66 UPD66 UPD66 INS43 INS45 INS43 INS57 INS42 UPD42 INS42 INS42 UPD42 MOV42 UPD42 UPD42 INS43 UPD42 UPD42 UPD42 INS42 UPD42 UPD42 INS42 UPD42 UPD42 UPD42 UPD42 DEL43 DEL42 DEL43 DEL74 DEL42