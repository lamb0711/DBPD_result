YARN-10319. Record Last N Scheduler Activities from ActivitiesManager

Reviewed by Tao Yang and Adam Antal.

+import org.apache.commons.lang3.tuple.Pair;
+import java.util.concurrent.ConcurrentLinkedDeque;
+import java.util.concurrent.atomic.AtomicInteger;
-  private boolean recordNextAvailableNode = false;
+  private AtomicInteger recordCount = new AtomicInteger(0);
+  private volatile ConcurrentLinkedDeque<Pair<NodeId, List<NodeAllocation>>>
+      lastNActivities;
+    lastNActivities = new ConcurrentLinkedDeque<>();
+
+  public List<ActivitiesInfo> recordAndGetBulkActivitiesInfo(
+      int activitiesCount, RMWSConsts.ActivitiesGroupBy groupBy)
+      throws InterruptedException {
+    recordCount.set(activitiesCount);
+    while (recordCount.get() > 0) {
+      Thread.sleep(1);
+    }
+    Iterator<Pair<NodeId, List<NodeAllocation>>> ite =
+        lastNActivities.iterator();
+    List<ActivitiesInfo> outList = new ArrayList<>();
+    while (ite.hasNext()) {
+      Pair<NodeId, List<NodeAllocation>> pair = ite.next();
+      outList.add(new ActivitiesInfo(pair.getRight(),
+          pair.getLeft().toString(), groupBy));
+    }
+    // reset with new activities
+    lastNActivities = new ConcurrentLinkedDeque<>();
+    return outList;
+  }
+
-      recordNextAvailableNode = true;
+      recordCount.compareAndSet(0, 1);
-    if (recordNextAvailableNode) {
+    if (recordCount.get() > 0) {
-        if (recordNextAvailableNode) {
-          recordNextAvailableNode = false;
+        if (recordCount.get() > 0) {
+          recordCount.getAndDecrement();
+        if (recordCount.get() >= 0) {
+          lastNActivities.add(Pair.of(nodeID, value));
+        }

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS31 INS43 INS83 INS83 INS74 INS59 INS83 INS74 INS42 INS44 INS44 INS43 INS8 INS42 UPD42 INS14 INS43 INS74 INS42 INS21 INS43 INS43 INS39 INS42 INS43 INS42 INS42 INS21 INS61 INS60 INS60 INS61 INS21 INS41 INS43 INS34 INS42 INS43 INS43 INS74 INS7 INS42 INS42 INS40 INS32 INS27 INS8 INS74 INS59 INS74 INS59 INS32 INS8 INS7 INS42 INS27 INS42 INS42 INS42 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS32 INS34 INS21 INS43 INS74 INS42 INS32 INS43 INS43 INS42 INS14 INS42 INS42 INS60 INS21 INS42 INS14 INS32 INS34 INS42 INS42 INS74 INS42 INS42 INS32 INS42 INS43 INS43 INS74 INS42 INS42 INS42 INS42 INS74 INS74 INS59 INS32 INS74 INS32 INS42 INS42 INS43 INS42 INS42 INS34 INS42 INS42 INS43 INS43 INS43 INS43 INS43 INS74 INS42 INS32 INS42 INS42 INS14 INS43 INS42 INS42 INS34 INS34 INS25 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS43 INS32 INS32 INS42 INS42 INS27 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS34 INS32 INS34 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 DEL39 DEL9 DEL42 DEL9 DEL7 DEL42 DEL42 DEL42 DEL9 DEL7