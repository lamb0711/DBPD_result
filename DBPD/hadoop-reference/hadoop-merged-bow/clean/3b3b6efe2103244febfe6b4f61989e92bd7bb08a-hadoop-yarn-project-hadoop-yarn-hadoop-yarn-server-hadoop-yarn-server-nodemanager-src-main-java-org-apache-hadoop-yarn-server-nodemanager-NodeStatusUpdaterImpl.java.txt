YARN-7871. Node attributes reporting from NM to RM. Contributed by Weiwei Yang.

+import org.apache.hadoop.yarn.api.records.NodeAttribute;
+import org.apache.hadoop.yarn.server.nodemanager.nodelabels.NodeAttributesProvider;
-  private final NodeLabelsProvider nodeLabelsProvider;
+  private NMNodeAttributesHandler nodeAttributesHandler;
+  private NodeLabelsProvider nodeLabelsProvider;
+  private NodeAttributesProvider nodeAttributesProvider;
-    this(context, dispatcher, healthChecker, metrics, null);
-  }
-
-  public NodeStatusUpdaterImpl(Context context, Dispatcher dispatcher,
-      NodeHealthCheckerService healthChecker, NodeManagerMetrics metrics,
-      NodeLabelsProvider nodeLabelsProvider) {
-    this.nodeLabelsProvider = nodeLabelsProvider;
+  public void setNodeAttributesProvider(NodeAttributesProvider provider) {
+    this.nodeAttributesProvider = provider;
+  }
+
+  @Override
+  public void setNodeLabelsProvider(NodeLabelsProvider provider) {
+    this.nodeLabelsProvider = provider;
+  }
+
+  @Override
-    nodeLabelsHandler = createNMNodeLabelsHandler(nodeLabelsProvider);
+    nodeLabelsHandler =
+        createNMNodeLabelsHandler(nodeLabelsProvider);
+    nodeAttributesHandler =
+        createNMNodeAttributesHandler(nodeAttributesProvider);
+
+  /**
+   * Returns a handler based on the configured node attributes provider.
+   * returns null if no provider is configured.
+   * @param provider
+   * @return attributes handler
+   */
+  private NMNodeAttributesHandler createNMNodeAttributesHandler(
+      NodeAttributesProvider provider) {
+    return provider == null ? null :
+        new NMDistributedNodeAttributesHandler(nodeAttributesProvider);
+  }
+
+  private interface NMNodeAttributesHandler {
+
+    /**
+     * @return the node attributes of this node manager.
+     */
+    Set<NodeAttribute> getNodeAttributesForHeartbeat();
+  }
+
+  private static class NMDistributedNodeAttributesHandler
+      implements NMNodeAttributesHandler {
+
+    private final NodeAttributesProvider attributesProvider;
+
+    protected NMDistributedNodeAttributesHandler(
+        NodeAttributesProvider provider) {
+      this.attributesProvider = provider;
+    }
+
+    @Override
+    public Set<NodeAttribute> getNodeAttributesForHeartbeat() {
+      return attributesProvider.getDescriptors();
+    }
+  }
+
+
+          Set<NodeAttribute> nodeAttributesForHeartbeat =
+              nodeAttributesHandler == null ? null :
+                  nodeAttributesHandler.getNodeAttributesForHeartbeat();
+                  nodeAttributesForHeartbeat,

INS26 INS26 INS40 INS40 INS23 INS23 INS31 INS31 INS31 INS55 INS55 INS83 INS43 INS59 INS83 INS43 INS59 INS78 MOV83 INS39 UPD42 MOV42 MOV44 INS8 INS78 INS83 INS39 INS42 MOV44 INS8 INS29 INS83 INS43 INS42 MOV44 INS8 INS83 INS42 INS31 INS83 INS83 INS42 INS43 INS23 INS31 INS31 INS42 INS42 INS42 INS42 INS42 UPD43 UPD42 INS21 INS42 UPD42 MOV21 INS21 INS65 INS65 INS65 INS42 UPD43 UPD42 INS41 INS29 INS74 INS42 INS42 INS83 INS83 INS43 INS59 INS83 INS42 MOV44 INS8 INS78 INS83 INS74 INS42 INS8 UPD42 INS7 INS7 INS66 INS66 INS42 INS66 UPD42 INS16 INS65 INS43 INS43 INS42 INS42 UPD43 UPD42 INS21 INS42 INS43 INS43 INS41 INS22 INS42 UPD42 INS42 INS32 INS27 INS33 INS14 INS66 INS42 UPD42 MOV42 UPD42 INS7 INS42 INS42 INS32 INS52 INS42 INS42 INS42 INS42 INS33 INS43 INS42 INS22 INS42 INS42 INS42 INS42 INS52 INS42 INS60 INS74 INS59 INS43 INS43 INS42 INS16 INS42 INS42 INS27 INS33 INS32 INS42 INS42 INS33 INS42 INS42 DEL83 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL33 DEL17 DEL8 DEL31