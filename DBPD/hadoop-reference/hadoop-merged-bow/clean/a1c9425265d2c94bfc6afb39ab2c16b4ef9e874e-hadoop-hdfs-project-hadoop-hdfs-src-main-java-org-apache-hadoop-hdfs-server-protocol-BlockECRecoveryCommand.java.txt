HDFS-8146. Protobuf changes for BlockECRecoveryCommand and its fields for making it ready for transfer to DN (Contributed by Uma Maheswara Rao G)

+
-import org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor.BlockECRecoveryInfo;
+import org.apache.hadoop.fs.StorageType;
+import org.apache.hadoop.hdfs.protocol.DatanodeInfo;
+import org.apache.hadoop.hdfs.protocol.ExtendedBlock;
+import org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo;
+import java.util.Arrays;
+
+  /** Block and targets pair */
+  @InterfaceAudience.Private
+  @InterfaceStability.Evolving
+  public static class BlockECRecoveryInfo {
+    private final ExtendedBlock block;
+    private final DatanodeInfo[] sources;
+    private DatanodeInfo[] targets;
+    private String[] targetStorageIDs;
+    private StorageType[] targetStorageTypes;
+    private final short[] liveBlockIndices;
+
+    public BlockECRecoveryInfo(ExtendedBlock block, DatanodeInfo[] sources,
+        DatanodeStorageInfo[] targetDnStorageInfo, short[] liveBlockIndices) {
+      this.block = block;
+      this.sources = sources;
+      this.targets = DatanodeStorageInfo.toDatanodeInfos(targetDnStorageInfo);
+      this.targetStorageIDs = DatanodeStorageInfo
+          .toStorageIDs(targetDnStorageInfo);
+      this.targetStorageTypes = DatanodeStorageInfo
+          .toStorageTypes(targetDnStorageInfo);
+      this.liveBlockIndices = liveBlockIndices;
+    }
+    
+    public BlockECRecoveryInfo(ExtendedBlock block, DatanodeInfo[] sources,
+        DatanodeInfo[] targets, String[] targetStorageIDs,
+        StorageType[] targetStorageTypes, short[] liveBlockIndices) {
+      this.block = block;
+      this.sources = sources;
+      this.targets = targets;
+      this.targetStorageIDs = targetStorageIDs;
+      this.targetStorageTypes = targetStorageTypes;
+      this.liveBlockIndices = liveBlockIndices;
+    }
+
+    public ExtendedBlock getExtendedBlock() {
+      return block;
+    }
+
+    public DatanodeInfo[] getSourceDnInfos() {
+      return sources;
+    }
+
+    public DatanodeInfo[] getTargetDnInfos() {
+      return targets;
+    }
+
+    public String[] getTargetStorageIDs() {
+      return targetStorageIDs;
+    }
+    
+    public StorageType[] getTargetStorageTypes() {
+      return targetStorageTypes;
+    }
+
+    public short[] getLiveBlockIndices() {
+      return liveBlockIndices;
+    }
+
+    @Override
+    public String toString() {
+      return new StringBuilder().append("BlockECRecoveryInfo(\n  ")
+          .append("Recovering ").append(block).append(" From: ")
+          .append(Arrays.asList(sources)).append(" To: [")
+          .append(Arrays.asList(targets)).append(")\n")
+          .append(" Block Indices: ").append(Arrays.asList(liveBlockIndices))
+          .toString();
+    }
+  }
+
+  public Collection<BlockECRecoveryInfo> getECTasks() {
+    return this.ecTasks;
+  }

INS26 INS26 INS26 INS26 INS40 INS40 INS40 UPD40 INS40 INS55 INS31 INS29 INS78 INS78 INS83 INS83 INS42 INS23 INS23 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS74 INS42 INS8 INS65 INS40 INS40 INS83 INS83 INS43 INS59 INS83 INS83 INS5 INS59 INS83 INS5 INS59 INS83 INS5 INS59 INS83 INS5 INS59 INS83 INS83 INS5 INS59 INS83 INS42 INS44 INS44 INS44 INS44 INS8 INS83 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS5 INS42 INS8 INS83 INS5 INS42 INS8 INS83 INS5 INS42 INS8 INS83 INS5 INS42 INS8 INS83 INS5 INS42 INS8 INS78 INS83 INS43 INS42 INS8 INS43 INS43 INS41 INS66 INS42 INS42 INS43 INS85 INS42 INS43 INS85 INS42 INS43 INS85 INS42 INS43 INS85 INS42 INS39 INS85 INS42 INS43 INS42 INS5 INS42 INS5 INS42 INS5 INS42 INS21 INS21 INS21 INS21 INS21 INS21 INS43 INS42 INS5 INS42 INS5 INS42 INS5 INS42 INS5 INS42 INS5 INS42 INS21 INS21 INS21 INS21 INS21 INS21 INS42 INS41 INS43 INS85 INS41 INS43 INS85 INS41 INS43 INS85 INS41 INS43 INS85 INS41 INS39 INS85 INS41 INS42 INS42 INS41 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS43 INS85 INS39 INS85 INS7 INS7 INS7 INS7 INS7 INS7 INS42 INS43 INS85 INS43 INS85 INS43 INS85 INS43 INS85 INS39 INS85 INS7 INS7 INS7 INS7 INS7 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS52 INS42 INS42 INS42 INS22 INS42 INS22 INS42 INS22 INS32 INS22 INS32 INS22 INS32 INS22 INS42 INS42 INS42 INS42 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS32 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS32 INS42 INS32 INS32 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS32 INS32 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS45 INS14 INS42 INS45 INS43 INS42