HDDS-1076. TestSCMNodeManager crashed the jvm. Contributed by Lokesh Jain.

-import org.apache.ratis.util.TimeDuration;
-import org.apache.ratis.util.TimeoutScheduler;
-  private static TimeoutScheduler timeoutScheduler =
-      TimeoutScheduler.newInstance(1);
-      TimeDuration timeoutDuration = TimeDuration
-          .valueOf(pipelineDestroyTimeoutInMillis, TimeUnit.MILLISECONDS);
-      timeoutScheduler.onTimeout(timeoutDuration,
-          () -> destroyPipeline(pipelineManager, pipeline, ozoneConf), LOG,
-          () -> String.format("Destroy pipeline failed for pipeline:%s with %s",
-              pipeline.getId(), group));
+      RatisPipelineProvider.getScheduler()
+          .schedule(() -> destroyPipeline(pipelineManager, pipeline, ozoneConf),
+              pipelineDestroyTimeoutInMillis, TimeUnit.MILLISECONDS, LOG, String
+                  .format("Destroy pipeline failed for pipeline:%s with %s",
+                      pipeline.getId(), group));
-    TimeDuration timeDuration =
-        TimeDuration.valueOf(intervalInMillis, TimeUnit.MILLISECONDS);
-    timeoutScheduler.onTimeout(timeDuration,
-        () -> fixedIntervalPipelineCreator(pipelineManager, conf,
-            timeDuration), LOG,
-        () -> "FixedIntervalPipelineCreatorJob failed.");
-  }
-
-  private static void fixedIntervalPipelineCreator(
-      PipelineManager pipelineManager, Configuration conf,
-      TimeDuration timeDuration) {
-    timeoutScheduler.onTimeout(timeDuration,
-        () -> fixedIntervalPipelineCreator(pipelineManager, conf,
-            timeDuration), LOG,
-        () -> "FixedIntervalPipelineCreatorJob failed.");
-    triggerPipelineCreation(pipelineManager, conf, 0);
+    RatisPipelineProvider.getScheduler().scheduleWithFixedDelay(() -> {
+      if (!isPipelineCreatorRunning.compareAndSet(false, true)) {
+        return;
+      }
+      createPipelines(pipelineManager, conf);
+    }, intervalInMillis, intervalInMillis, TimeUnit.MILLISECONDS);
-    timeoutScheduler
-        .onTimeout(TimeDuration.valueOf(afterMillis, TimeUnit.MILLISECONDS),
-            () -> createPipelines(pipelineManager, conf), LOG,
-            () -> "PipelineCreation failed.");
+    RatisPipelineProvider.getScheduler()
+        .schedule(() -> createPipelines(pipelineManager, conf), afterMillis,
+            TimeUnit.MILLISECONDS);
-      try {
-        pipelineManager.createPipeline(type, factor);
-      } catch (IOException ioe) {
-        break;
-      } catch (Throwable t) {
-        LOG.error("Error while creating pipelines {}", t);
-        break;
+      while (true) {
+        try {
+          if (RatisPipelineProvider.getScheduler().isClosed()) {
+            break;
+          }
+          pipelineManager.createPipeline(type, factor);
+        } catch (IOException ioe) {
+          break;
+        } catch (Throwable t) {
+          LOG.error("Error while creating pipelines {}", t);
+          break;
+        }

INS21 INS32 INS8 INS32 UPD42 MOV42 INS86 UPD42 MOV42 INS42 INS40 INS32 UPD42 MOV42 MOV42 MOV40 INS61 MOV42 UPD42 MOV42 UPD42 MOV42 INS8 UPD42 MOV42 UPD42 MOV42 INS9 MOV8 INS32 UPD42 UPD42 INS40 MOV32 INS25 INS21 INS42 UPD42 MOV42 INS38 INS8 INS32 INS32 INS41 UPD42 MOV42 MOV42 MOV42 INS25 UPD42 MOV42 UPD42 MOV42 INS9 INS9 INS32 INS8 INS32 INS42 INS10 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL34 DEL32 DEL59 DEL23 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL59 DEL60 DEL86 DEL42 DEL43 DEL42 DEL42 DEL40 DEL32 DEL59 DEL60 DEL42 DEL32 DEL86 DEL45 DEL86 DEL32 DEL21 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL86 DEL42 DEL45 DEL86 DEL32 DEL21 DEL42 DEL42 DEL42 DEL34 DEL32 DEL21 DEL8 DEL31 DEL42 DEL32 DEL42 DEL45 DEL86