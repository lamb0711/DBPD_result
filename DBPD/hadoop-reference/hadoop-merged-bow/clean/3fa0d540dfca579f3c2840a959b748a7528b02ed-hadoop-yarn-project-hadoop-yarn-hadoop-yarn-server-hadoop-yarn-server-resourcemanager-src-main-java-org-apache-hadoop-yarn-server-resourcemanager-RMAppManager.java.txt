YARN-6031. Application recovery has failed when node label feature is turned off during RM recovery. Contributed by Ying Zhang.

+import org.apache.hadoop.yarn.exceptions.InvalidLabelResourceRequestException;
+import org.apache.hadoop.yarn.server.resourcemanager.nodelabels.RMNodeLabelsManager;
+    // If null amReq has been returned, check if it is the case that
+    // application has specified node label expression while node label
+    // has been disabled. Reject the recovery of this application if it
+    // is true and give clear message so that user can react properly.
+    if (!appContext.getUnmanagedAM() &&
+        application.getAMResourceRequest() == null &&
+        !YarnConfiguration.areNodeLabelsEnabled(this.conf)) {
+      // check application submission context and see if am resource request
+      // or application itself contains any node label expression.
+      ResourceRequest amReqFromAppContext =
+          appContext.getAMContainerResourceRequest();
+      String labelExp = (amReqFromAppContext != null) ?
+          amReqFromAppContext.getNodeLabelExpression() : null;
+      if (labelExp == null) {
+        labelExp = appContext.getNodeLabelExpression();
+      }
+      if (labelExp != null &&
+          !labelExp.equals(RMNodeLabelsManager.NO_LABEL)) {
+        String message = "Failed to recover application " + appId
+            + ". NodeLabel is not enabled in cluster, but AM resource request "
+            + "contains a label expression.";
+        LOG.warn(message);
+        application.handle(
+            new RMAppEvent(appId, RMAppEventType.APP_REJECTED, message));
+        return;
+      }
+    }
+
-    ResourceRequest amReq =
-        validateAndCreateResourceRequest(submissionContext, isRecovery);
+    ResourceRequest amReq = null;
+    try {
+      amReq = validateAndCreateResourceRequest(submissionContext, isRecovery);
+    } catch (InvalidLabelResourceRequestException e) {
+      // This can happen if the application had been submitted and run
+      // with Node Label enabled but recover with Node Label disabled.
+      // Thus there might be node label expression in the application's
+      // resource requests. If this is the case, create RmAppImpl with
+      // null amReq and reject the application later with clear error
+      // message. So that the application can still be tracked by RM
+      // after recovery and user can see what's going on and react accordingly.
+      if (isRecovery &&
+          !YarnConfiguration.areNodeLabelsEnabled(this.conf)) {
+        if (LOG.isDebugEnabled()) {
+          LOG.debug("AMResourceRequest is not created for " + applicationId
+              + ". NodeLabel is not enabled in cluster, but AM resource "
+              + "request contains a label expression.");
+        }
+      } else {
+        throw e;
+      }
+    }

INS26 INS26 INS40 INS40 INS25 INS54 INS27 INS8 INS8 INS12 INS27 INS38 INS60 INS60 INS25 INS25 INS33 INS21 INS44 INS8 INS38 INS27 INS32 INS43 INS59 INS43 INS59 INS27 INS8 INS27 INS8 INS7 INS43 INS42 INS25 INS32 INS32 INS33 INS42 INS42 INS22 INS42 INS42 INS32 INS42 INS42 INS16 INS42 INS33 INS21 INS27 INS38 INS60 INS21 INS21 INS41 INS42 MOV32 INS42 INS27 INS8 INS8 INS42 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS36 INS32 INS33 INS7 INS42 INS33 INS32 INS43 INS59 INS32 INS32 INS42 INS38 INS25 INS53 INS27 INS42 INS42 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS14 INS32 INS32 INS8 INS42 INS42 INS33 INS42 INS42 INS45 INS42 INS45 INS45 INS43 INS42 INS40 INS42 INS42 INS42 INS22 INS42 INS42 INS21 INS42 INS52 INS42 INS32 INS42 INS42 INS27 INS45 INS42 INS45 INS45