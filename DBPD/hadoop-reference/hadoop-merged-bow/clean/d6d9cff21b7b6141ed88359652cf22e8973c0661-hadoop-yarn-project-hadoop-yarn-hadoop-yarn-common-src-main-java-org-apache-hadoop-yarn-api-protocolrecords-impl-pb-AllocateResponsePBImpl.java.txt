YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)

+import org.apache.hadoop.yarn.api.records.UpdateContainerError;
+import org.apache.hadoop.yarn.api.records.UpdatedContainer;
+import org.apache.hadoop.yarn.api.records.impl.pb.UpdatedContainerPBImpl;
+import org.apache.hadoop.yarn.proto.YarnServiceProtos;
-  private List<Container> increasedContainers = null;
-  private List<Container> decreasedContainers = null;
+  private List<UpdatedContainer> updatedContainers = null;
+  private List<UpdateContainerError> updateErrors = null;
-    if (this.increasedContainers != null) {
-      builder.clearIncreasedContainers();
-      Iterable<ContainerProto> iterable =
-          getContainerProtoIterable(this.increasedContainers);
-      builder.addAllIncreasedContainers(iterable);
+    if (this.updatedContainers != null) {
+      builder.clearUpdatedContainers();
+      Iterable<YarnServiceProtos.UpdatedContainerProto> iterable =
+          getUpdatedContainerProtoIterable(this.updatedContainers);
+      builder.addAllUpdatedContainers(iterable);
-    if (this.decreasedContainers != null) {
-      builder.clearDecreasedContainers();
-      Iterable<ContainerProto> iterable =
-          getContainerProtoIterable(this.decreasedContainers);
-      builder.addAllDecreasedContainers(iterable);
+    if (this.updateErrors != null) {
+      builder.clearUpdateErrors();
+      Iterable<YarnServiceProtos.UpdateContainerErrorProto> iterable =
+          getUpdateErrorsIterable(this.updateErrors);
+      builder.addAllUpdateErrors(iterable);
+  public synchronized List<UpdateContainerError> getUpdateErrors() {
+    initLocalUpdateErrorsList();
+    return this.updateErrors;
+  }
+
+  @Override
+  public synchronized void setUpdateErrors(
+      List<UpdateContainerError> updateErrors) {
+    if (updateErrors == null) {
+      this.updateErrors.clear();
+      return;
+    }
+    this.updateErrors = new ArrayList<>(
+        updateErrors.size());
+    this.updateErrors.addAll(updateErrors);
+  }
+
+  @Override
-  public synchronized List<Container> getIncreasedContainers() {
-    initLocalIncreasedContainerList();
-    return this.increasedContainers;
+  public synchronized List<UpdatedContainer> getUpdatedContainers() {
+    initLocalUpdatedContainerList();
+    return this.updatedContainers;
-  public synchronized void setIncreasedContainers(
-      final List<Container> containers) {
+  public synchronized void setUpdatedContainers(
+      final List<UpdatedContainer> containers) {
-    initLocalIncreasedContainerList();
-    increasedContainers.addAll(containers);
-  }
-
-  @Override
-  public synchronized List<Container> getDecreasedContainers() {
-    initLocalDecreasedContainerList();
-    return this.decreasedContainers;
-  }
-
-  @Override
-  public synchronized void setDecreasedContainers(
-      final List<Container> containers) {
-    if (containers == null)
-      return;
-    initLocalDecreasedContainerList();
-    decreasedContainers.addAll(containers);
+    initLocalUpdatedContainerList();
+    updatedContainers.addAll(containers);
-  private synchronized void initLocalIncreasedContainerList() {
-    if (this.increasedContainers != null) {
+  private synchronized void initLocalUpdatedContainerList() {
+    if (this.updatedContainers != null) {
-    List<ContainerProto> list = p.getIncreasedContainersList();
-    increasedContainers = new ArrayList<>();
+    List<YarnServiceProtos.UpdatedContainerProto> list =
+        p.getUpdatedContainersList();
+    updatedContainers = new ArrayList<>();
-    for (ContainerProto c : list) {
-      increasedContainers.add(convertFromProtoFormat(c));
-    }
-  }
-
-  private synchronized void initLocalDecreasedContainerList() {
-    if (this.decreasedContainers != null) {
-      return;
-    }
-    AllocateResponseProtoOrBuilder p = viaProto ? proto : builder;
-    List<ContainerProto> list = p.getDecreasedContainersList();
-    decreasedContainers = new ArrayList<>();
-
-    for (ContainerProto c : list) {
-      decreasedContainers.add(convertFromProtoFormat(c));
+    for (YarnServiceProtos.UpdatedContainerProto c : list) {
+      updatedContainers.add(convertFromProtoFormat(c));
+  private synchronized void initLocalUpdateErrorsList() {
+    if (updateErrors != null) {
+      return;
+    }
+    AllocateResponseProtoOrBuilder p = viaProto ? proto : builder;
+    List<YarnServiceProtos.UpdateContainerErrorProto> list =
+        p.getUpdateErrorsList();
+    this.updateErrors = new ArrayList<UpdateContainerError>();
+    for (YarnServiceProtos.UpdateContainerErrorProto t : list) {
+      updateErrors.add(ProtoUtils.convertFromProtoFormat(t));
+    }
+  }
+
+  private synchronized Iterable<YarnServiceProtos.UpdateContainerErrorProto>
+      getUpdateErrorsIterable(
+      final List<UpdateContainerError> updateErrorsList) {
+    maybeInitBuilder();
+    return new Iterable<YarnServiceProtos.UpdateContainerErrorProto>() {
+      @Override
+      public synchronized Iterator<YarnServiceProtos
+          .UpdateContainerErrorProto> iterator() {
+        return new Iterator<YarnServiceProtos.UpdateContainerErrorProto>() {
+
+          private Iterator<UpdateContainerError> iter =
+              updateErrorsList.iterator();
+
+          @Override
+          public synchronized boolean hasNext() {
+            return iter.hasNext();
+          }
+
+          @Override
+          public synchronized YarnServiceProtos.UpdateContainerErrorProto
+              next() {
+            return ProtoUtils.convertToProtoFormat(iter.next());
+          }
+
+          @Override
+          public synchronized void remove() {
+            throw new UnsupportedOperationException();
+          }
+        };
+
+      }
+    };
+  }
+
+  private synchronized Iterable<YarnServiceProtos.UpdatedContainerProto>
+        getUpdatedContainerProtoIterable(
+      final List<UpdatedContainer> newUpdatedContainersList) {
+    maybeInitBuilder();
+    return new Iterable<YarnServiceProtos.UpdatedContainerProto>() {
+      @Override
+      public synchronized Iterator<YarnServiceProtos.UpdatedContainerProto>
+          iterator() {
+        return new Iterator<YarnServiceProtos.UpdatedContainerProto>() {
+
+          private Iterator<UpdatedContainer> iter =
+              newUpdatedContainersList.iterator();
+
+          @Override
+          public synchronized boolean hasNext() {
+            return iter.hasNext();
+          }
+
+          @Override
+          public synchronized YarnServiceProtos.UpdatedContainerProto next() {
+            return convertToProtoFormat(iter.next());
+          }
+
+          @Override
+          public synchronized void remove() {
+            throw new UnsupportedOperationException();
+
+          }
+        };
+
+      }
+    };
+  }
+
+  private synchronized UpdatedContainerPBImpl convertFromProtoFormat(
+      YarnServiceProtos.UpdatedContainerProto p) {
+    return new UpdatedContainerPBImpl(p);
+  }
+
+  private synchronized YarnServiceProtos.UpdatedContainerProto
+      convertToProtoFormat(UpdatedContainer t) {
+    return ((UpdatedContainerPBImpl)t).getProto();
+  }
+

INS26 INS26 INS26 INS26 MOV23 MOV31 MOV31 MOV31 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 UPD74 UPD74 MOV78 UPD74 MOV74 UPD42 MOV78 UPD42 MOV78 UPD74 MOV74 UPD42 MOV78 UPD42 UPD42 UPD42 INS83 INS83 INS74 INS42 INS44 INS8 INS83 INS83 INS74 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 UPD43 UPD42 UPD43 UPD42 UPD43 UPD74 MOV74 UPD42 UPD43 UPD74 MOV74 INS43 INS43 INS83 INS74 INS42 INS21 INS41 INS43 INS43 INS83 INS74 INS42 INS21 INS41 INS42 INS43 INS42 INS41 INS40 INS43 INS42 INS41 UPD42 UPD42 UPD42 UPD43 INS8 INS7 UPD42 UPD43 UPD74 UPD74 INS42 INS40 INS43 INS43 INS32 INS14 INS42 INS40 INS43 INS43 INS32 INS14 INS40 INS14 INS42 INS32 UPD42 UPD42 UPD42 UPD42 INS21 INS41 INS22 INS14 INS22 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42 UPD43 INS42 UPD43 INS22 UPD43 UPD42 INS42 INS42 INS42 INS74 INS1 INS42 INS42 INS42 INS74 INS1 INS43 INS42 INS36 INS42 UPD42 UPD74 UPD42 UPD74 INS32 INS52 INS42 INS74 INS32 INS52 INS42 UPD42 INS40 UPD42 INS40 INS40 UPD42 INS52 INS42 UPD74 INS40 INS43 INS43 INS31 INS43 INS43 INS31 INS42 INS11 UPD42 UPD43 UPD42 UPD42 UPD43 UPD42 INS22 INS42 INS43 UPD42 MOV42 INS42 UPD42 INS43 UPD42 INS42 INS40 INS78 INS83 INS83 INS74 INS42 INS8 INS42 INS40 INS78 INS83 INS83 INS74 INS42 INS8 INS43 INS42 INS40 UPD42 INS40 UPD42 INS52 INS42 INS42 INS42 INS42 UPD42 INS42 INS43 INS43 INS41 INS42 INS43 INS43 INS41 INS42 UPD42 UPD42 INS42 INS40 INS14 INS42 INS40 INS14 INS74 INS1 INS74 INS1 INS43 INS43 INS23 INS31 INS31 INS31 INS43 INS43 INS23 INS31 INS31 INS31 INS42 INS40 INS83 INS74 INS59 INS78 INS83 INS83 INS39 INS42 INS8 INS78 INS83 INS83 INS43 INS42 INS8 INS78 INS83 INS83 INS39 INS42 INS8 INS42 INS40 INS83 INS74 INS59 INS78 INS83 INS83 INS39 INS42 INS8 INS78 INS83 INS83 INS43 INS42 INS8 INS78 INS83 INS83 INS39 INS42 INS8 INS43 INS43 INS42 INS32 INS42 INS41 INS42 INS40 INS41 INS42 INS53 INS43 INS43 INS42 INS32 INS42 INS41 INS42 INS40 INS41 INS42 INS53 INS42 INS42 INS42 INS42 INS32 INS32 INS14 INS42 INS42 INS42 INS42 INS32 INS32 INS14 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL83 DEL41 DEL32 DEL42 DEL42 DEL42 DEL52 DEL42 DEL22 DEL42 DEL42 DEL42