HDFS-6780. Batch the encryption zones listing API. (wang)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1615189 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.HashMap;
-import java.util.Map;
+import java.util.NavigableMap;
+import java.util.TreeMap;
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.hdfs.DFSConfigKeys;
-import org.apache.hadoop.hdfs.protocol.EncryptionZone;
+import org.apache.hadoop.hdfs.protocol.EncryptionZoneWithId;
+import static org.apache.hadoop.fs.BatchedRemoteIterator.BatchedListEntries;
-  private final Map<Long, EncryptionZoneInt> encryptionZones;
+  private final TreeMap<Long, EncryptionZoneInt> encryptionZones;
+  private final int maxListEncryptionZonesResponses;
-  public EncryptionZoneManager(FSDirectory dir) {
+  public EncryptionZoneManager(FSDirectory dir, Configuration conf) {
-    encryptionZones = new HashMap<Long, EncryptionZoneInt>();
+    encryptionZones = new TreeMap<Long, EncryptionZoneInt>();
+    maxListEncryptionZonesResponses = conf.getInt(
+        DFSConfigKeys.DFS_NAMENODE_LIST_ENCRYPTION_ZONES_NUM_RESPONSES,
+        DFSConfigKeys.DFS_NAMENODE_LIST_ENCRYPTION_ZONES_NUM_RESPONSES_DEFAULT
+    );
+    Preconditions.checkArgument(maxListEncryptionZonesResponses >= 0,
+        DFSConfigKeys.DFS_NAMENODE_LIST_ENCRYPTION_ZONES_NUM_RESPONSES + " " +
+            "must be a positive integer."
+    );
-   * Return the current list of encryption zones.
+   * Cursor-based listing of encryption zones.
-  List<EncryptionZone> listEncryptionZones() throws IOException {
+  BatchedListEntries<EncryptionZoneWithId> listEncryptionZones(long prevId)
+      throws IOException {
-    final List<EncryptionZone> ret =
-        Lists.newArrayListWithExpectedSize(encryptionZones.size());
-    for (EncryptionZoneInt ezi : encryptionZones.values()) {
-      ret.add(new EncryptionZone(getFullPathName(ezi), ezi.getKeyName()));
+    NavigableMap<Long, EncryptionZoneInt> tailMap = encryptionZones.tailMap
+        (prevId, false);
+    final int numResponses = Math.min(maxListEncryptionZonesResponses,
+        tailMap.size());
+    final List<EncryptionZoneWithId> zones =
+        Lists.newArrayListWithExpectedSize(numResponses);
+
+    int count = 0;
+    for (EncryptionZoneInt ezi : tailMap.values()) {
+      zones.add(new EncryptionZoneWithId(getFullPathName(ezi),
+          ezi.getKeyName(), ezi.getINodeId()));
+      count++;
+      if (count >= numResponses) {
+        break;
+      }
-    return ret;
+    final boolean hasMore = (numResponses < tailMap.size());
+    return new BatchedListEntries<EncryptionZoneWithId>(zones, hasMore);

MOV26 INS26 INS26 INS26 UPD40 UPD40 INS40 INS40 UPD40 INS40 INS23 UPD74 INS83 INS83 INS39 INS59 INS44 UPD74 INS44 UPD43 INS42 INS43 INS42 INS21 INS21 UPD43 UPD43 INS39 INS42 INS60 INS60 INS60 INS60 UPD42 INS42 INS7 INS32 UPD66 UPD42 UPD42 INS74 INS59 INS39 INS83 UPD74 MOV74 INS59 INS39 INS59 INS83 INS39 INS59 INS14 INS42 INS32 INS42 INS42 INS27 INS27 INS43 INS43 INS43 INS42 INS32 UPD42 UPD43 INS42 INS32 INS42 INS34 UPD42 INS21 INS25 INS42 INS36 INS74 INS42 INS42 UPD74 INS42 INS42 INS40 INS40 INS42 INS34 INS40 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS9 UPD42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS37 INS27 INS8 INS27 INS43 INS43 UPD43 UPD42 UPD42 INS42 INS42 INS42 INS10 INS42 INS32 INS42 INS42 UPD42 UPD43 INS32 INS42 INS42 UPD42 INS42 INS42 DEL42