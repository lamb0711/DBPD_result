HDFS-11164: Mover should avoid unnecessary retries if the block is pinned. Contributed by Rakesh R

+import java.util.Map.Entry;
+import org.apache.hadoop.hdfs.protocol.datatransfer.BlockPinningException;
+    public DatanodeInfo getSource() {
+      return source.getDatanodeInfo();
+    }
+
+        // Check that the failure is due to block pinning errors.
+        if (e instanceof BlockPinningException) {
+          // Pinned block can't be moved. Add this block into failure list.
+          // Later in the next iteration mover will exclude these blocks from
+          // pending moves.
+          target.getDDatanode().addBlockPinningFailures(this);
+          return;
+        }
+
-      DataTransferProtoUtil.checkBlockOpStatus(response, logInfo);
+      DataTransferProtoUtil.checkBlockOpStatus(response, logInfo, true);
+    private Map<Long, Set<DatanodeInfo>> blockPinningFailures = new HashMap<>();
+    void addBlockPinningFailures(PendingMove pendingBlock) {
+      synchronized (blockPinningFailures) {
+        long blockId = pendingBlock.reportedBlock.getBlock().getBlockId();
+        Set<DatanodeInfo> pinnedLocations = blockPinningFailures.get(blockId);
+        if (pinnedLocations == null) {
+          pinnedLocations = new HashSet<>();
+          blockPinningFailures.put(blockId, pinnedLocations);
+        }
+        pinnedLocations.add(pendingBlock.getSource());
+      }
+    }
+
+    Map<Long, Set<DatanodeInfo>> getBlockPinningFailureList() {
+      return blockPinningFailures;
+    }
+
+   * Check any of the block movements are failed due to block pinning errors. If
+   * yes, add the failed blockId and its respective source node location to the
+   * excluded list.
+   */
+  public static void checkForBlockPinningFailures(
+      Map<Long, Set<DatanodeInfo>> excludedPinnedBlocks,
+      Iterable<? extends StorageGroup> targets) {
+    for (StorageGroup t : targets) {
+      Map<Long, Set<DatanodeInfo>> blockPinningFailureList = t.getDDatanode()
+          .getBlockPinningFailureList();
+      Set<Entry<Long, Set<DatanodeInfo>>> entrySet = blockPinningFailureList
+          .entrySet();
+      for (Entry<Long, Set<DatanodeInfo>> entry : entrySet) {
+        Long blockId = entry.getKey();
+        Set<DatanodeInfo> locs = excludedPinnedBlocks.get(blockId);
+        if (locs == null) {
+          // blockId doesn't exists in the excluded list.
+          locs = entry.getValue();
+          excludedPinnedBlocks.put(blockId, locs);
+        } else {
+          // blockId already exists in the excluded list, add the pinned node.
+          locs.addAll(entry.getValue());
+        }
+      }
+    }
+  }
+
+  /**

INS26 INS26 INS40 INS40 INS31 INS31 INS23 INS31 INS31 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS43 INS42 INS8 INS83 INS74 INS59 INS39 INS42 INS44 INS8 INS74 INS42 INS8 INS65 INS74 INS42 INS74 INS42 INS70 INS42 INS41 INS43 INS43 INS74 INS42 INS14 INS43 INS42 INS51 INS43 INS43 INS74 INS41 INS66 INS66 INS66 INS43 INS43 INS74 INS43 INS76 INS44 INS42 INS8 INS32 INS42 INS42 INS43 INS43 INS74 INS42 INS42 INS8 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS43 INS43 INS42 INS43 INS43 INS42 INS60 INS60 INS70 INS42 INS42 INS9 INS42 INS42 INS43 INS60 INS60 INS25 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS74 INS59 INS44 INS42 INS8 INS25 INS42 INS39 INS59 INS74 INS59 INS27 INS8 INS32 INS43 INS43 INS74 INS42 INS32 INS43 INS74 INS42 INS32 INS74 INS42 INS60 INS60 INS25 INS62 INS8 INS42 INS32 INS43 INS43 INS42 INS32 INS42 INS33 INS21 INS21 INS42 INS42 INS32 INS42 INS42 INS43 INS43 INS32 INS42 INS42 INS43 INS43 INS74 INS42 INS42 INS43 INS43 INS74 INS43 INS59 INS74 INS59 INS27 INS8 INS8 INS42 INS43 INS21 INS41 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS43 INS43 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS42 INS33 INS21 INS21 INS21 INS42 INS32 INS40 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS32 INS32 INS32 INS42 INS52 INS74 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42