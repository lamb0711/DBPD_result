YARN-3273. Improve scheduler UI to facilitate scheduling analysis and debugging. Contributed Rohith Sharmaks

-    for (Map.Entry<String, User> entry: users.entrySet()) {
-      usersToReturn.add(new UserInfo(entry.getKey(), Resources.clone(
-        entry.getValue().getUsed()), entry.getValue().getActiveApplications(),
-        entry.getValue().getPendingApplications()));
+    for (Map.Entry<String, User> entry : users.entrySet()) {
+      User user = entry.getValue();
+      usersToReturn.add(new UserInfo(entry.getKey(), Resources.clone(user
+          .getUsed()), user.getActiveApplications(), user
+          .getPendingApplications(), Resources.clone(user
+          .getConsumedAMResources()), Resources.clone(user
+          .getUserResourceLimit())));
-
+    user.setUserResourceLimit(limit);
+    volatile Resource userResourceLimit = Resource.newInstance(0, 0);
+
+    public Resource getUserResourceLimit() {
+      return userResourceLimit;
+    }
+
+    public void setUserResourceLimit(Resource userResourceLimit) {
+      this.userResourceLimit = userResourceLimit;
+    }

INS23 INS31 INS31 INS21 INS83 INS43 INS59 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS32 INS42 INS42 INS32 INS42 INS41 INS43 INS42 INS21 INS60 INS42 INS42 INS42 INS42 INS42 INS34 INS34 INS42 INS42 INS7 INS43 INS59 INS22 INS42 INS42 INS42 MOV32 INS52 INS42 INS32 INS32 INS32 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS42 INS32 INS42 INS42 UPD42 MOV42 INS42 INS42 DEL32 DEL32 DEL32