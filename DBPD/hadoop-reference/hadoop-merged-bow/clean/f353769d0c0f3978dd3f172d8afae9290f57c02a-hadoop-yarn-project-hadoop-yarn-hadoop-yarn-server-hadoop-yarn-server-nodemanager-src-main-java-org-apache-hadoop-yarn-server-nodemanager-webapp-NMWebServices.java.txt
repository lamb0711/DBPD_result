Merging r1518852 through r1519883 from trunk to branch HDFS-2832

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1519885 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.File;
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.io.OutputStream;
+import javax.servlet.http.HttpServletRequest;
+import javax.ws.rs.WebApplicationException;
+import javax.ws.rs.core.Response;
+import javax.ws.rs.core.Response.Status;
+import javax.ws.rs.core.StreamingOutput;
+import org.apache.hadoop.classification.InterfaceAudience.Public;
+import org.apache.hadoop.classification.InterfaceStability.Unstable;
+import org.apache.hadoop.yarn.exceptions.YarnException;
+    HttpServletRequest request;
+  
+  private @javax.ws.rs.core.Context 
-
+  
+  /**
+   * Returns the contents of a container's log file in plain text. 
+   *
+   * Only works for containers that are still in the NodeManager's memory, so
+   * logs are no longer available after the corresponding application is no
+   * longer running.
+   * 
+   * @param containerIdStr
+   *    The container ID
+   * @param filename
+   *    The name of the log file
+   * @return
+   *    The contents of the container's log file
+   */
+  @GET
+  @Path("/containerlogs/{containerid}/{filename}")
+  @Produces({ MediaType.TEXT_PLAIN })
+  @Public
+  @Unstable
+  public Response getLogs(@PathParam("containerid") String containerIdStr,
+      @PathParam("filename") String filename) {
+    ContainerId containerId;
+    try {
+      containerId = ConverterUtils.toContainerId(containerIdStr);
+    } catch (IllegalArgumentException ex) {
+      return Response.status(Status.BAD_REQUEST).build();
+    }
+    
+    File logFile = null;
+    try {
+      logFile = ContainerLogsUtils.getContainerLogFile(
+          containerId, filename, request.getRemoteUser(), nmContext);
+    } catch (NotFoundException ex) {
+      return Response.status(Status.NOT_FOUND).entity(ex.getMessage()).build();
+    } catch (YarnException ex) {
+      return Response.serverError().entity(ex.getMessage()).build();
+    }
+    
+    try {
+      final FileInputStream fis = ContainerLogsUtils.openLogFileForRead(
+          containerIdStr, logFile, nmContext);
+      
+      StreamingOutput stream = new StreamingOutput() {
+        @Override
+        public void write(OutputStream os) throws IOException,
+            WebApplicationException {
+          int bufferSize = 65536;
+          byte[] buf = new byte[bufferSize];
+          int len;
+          while ((len = fis.read(buf, 0, bufferSize)) > 0) {
+            os.write(buf, 0, len);
+          }
+          os.flush();
+        }
+      };
+      
+      return Response.ok(stream).build();
+    } catch (IOException ex) {
+      return Response.serverError().entity(ex.getMessage()).build();
+    }
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS83 INS78 INS43 INS59 INS29 INS78 INS79 INS79 INS78 INS78 INS83 INS43 INS42 INS44 INS44 INS8 INS40 INS42 INS42 INS65 INS65 INS65 INS65 INS42 INS42 INS45 INS42 INS4 INS42 INS42 INS42 INS79 INS43 INS42 INS79 INS43 INS42 INS60 INS54 INS60 INS54 INS54 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS40 INS42 INS45 INS42 INS42 INS45 INS42 INS43 INS59 INS8 INS12 INS43 INS59 INS8 INS12 INS12 INS8 INS12 INS42 INS42 INS21 INS44 INS8 INS42 INS42 INS33 INS21 INS44 INS8 INS44 INS8 INS60 INS60 INS41 INS44 INS8 INS7 INS43 INS42 INS41 INS7 INS43 INS42 INS41 INS43 INS42 INS41 INS83 INS43 INS59 INS43 INS59 INS32 INS43 INS42 INS41 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS1 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS31 INS32 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS78 INS83 INS39 INS42 INS44 INS43 INS43 INS8 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS60 INS60 INS60 INS61 INS21 INS42 INS39 INS59 INS5 INS59 INS39 INS59 INS27 INS8 INS32 INS42 INS34 INS39 INS85 INS42 INS3 INS42 INS36 INS34 INS21 INS42 INS42 INS5 INS42 INS7 INS32 INS39 INS85 INS42 INS32 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS42 INS34 INS42