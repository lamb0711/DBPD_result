Merge r1609845 through r1615019 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-6584@1615020 13f79535-47bb-0310-9956-ffa450edef68

-  private Thread updateThread;
-  private Thread schedulingThread;
+  @VisibleForTesting
+  Thread updateThread;
+
+  @VisibleForTesting
+  Thread schedulingThread;
-   * A runnable which calls {@link FairScheduler#update()} every
+   * Thread which calls {@link FairScheduler#update()} every
-  private class UpdateThread implements Runnable {
+  private class UpdateThread extends Thread {
+
+    @Override
-      while (true) {
+      while (!Thread.currentThread().isInterrupted()) {
+        } catch (InterruptedException ie) {
+          LOG.warn("Update thread interrupted. Exiting.");
+          return;
+   * Thread which attempts scheduling resources continuously,
+   * asynchronous to the node heartbeats.
+   */
+  private class ContinuousSchedulingThread extends Thread {
+
+    @Override
+    public void run() {
+      while (!Thread.currentThread().isInterrupted()) {
+        try {
+          continuousSchedulingAttempt();
+          Thread.sleep(getContinuousSchedulingSleepMs());
+        } catch (InterruptedException e) {
+          LOG.warn("Continuous scheduling thread interrupted. Exiting.", e);
+          return;
+        }
+      }
+    }
+  }
+
+  /**
-  void continuousSchedulingAttempt() {
+  void continuousSchedulingAttempt() throws InterruptedException {
-    updateThread = new Thread(new UpdateThread());
+    updateThread = new UpdateThread();
-      schedulingThread = new Thread(
-          new Runnable() {
-            @Override
-            public void run() {
-              while (!Thread.currentThread().isInterrupted()) {
-                try {
-                  continuousSchedulingAttempt();
-                  Thread.sleep(getContinuousSchedulingSleepMs());
-                } catch (InterruptedException e) {
-                  LOG.error("Continuous scheduling thread interrupted. Exiting. ",
-                      e);
-                  return;
-                }
-              }
-            }
-          }
-      );
-      schedulingThread.setName("ContinuousScheduling");
+      schedulingThread = new ContinuousSchedulingThread();
+      schedulingThread.setName("FairSchedulerContinuousScheduling");

INS55 INS78 INS78 UPD43 INS29 INS83 INS42 MOV43 MOV31 INS43 INS42 INS42 UPD42 INS78 INS65 INS42 UPD66 INS42 INS66 INS66 INS38 MOV14 INS32 INS32 INS42 INS12 INS14 UPD45 INS42 INS42 INS44 INS8 UPD43 MOV43 INS43 INS42 INS21 INS41 UPD42 INS42 INS32 INS42 INS42 INS45 UPD42 UPD45 DEL83 DEL83 DEL9 DEL14 DEL1 DEL14 DEL14