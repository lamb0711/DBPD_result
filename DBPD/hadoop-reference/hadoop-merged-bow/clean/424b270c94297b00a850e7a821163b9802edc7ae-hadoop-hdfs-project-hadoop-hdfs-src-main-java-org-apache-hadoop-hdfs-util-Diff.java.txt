HDFS-4798. Update computeContentSummary() for the reference nodes in snapshots.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1479671 13f79535-47bb-0310-9956-ffa450edef68

-    final List<E> current = new ArrayList<E>(previous);
-    for(E d : dlist) {
-      current.remove(d);
+    // Assumptions:
+    // (A1) All lists are sorted.
+    // (A2) All elements in dlist must be in previous.
+    // (A3) All elements in clist must be not in tmp = previous - dlist.
+    final List<E> tmp = new ArrayList<E>();
+    {
+      // tmp = previous - dlist
+      final Iterator<E> i = previous.iterator();
+      for(E deleted : dlist) {
+        E e = i.next(); //since dlist is non-empty, e must exist by (A2).
+        int cmp = 0;
+        for(; (cmp = e.compareTo(deleted.getKey())) < 0; e = i.next()) {
+          tmp.add(e);
+        }
+        Preconditions.checkState(cmp == 0); // check (A2)
+      }
+      for(; i.hasNext(); ) {
+        tmp.add(i.next());
+      }
-    for(E c : clist) {
-      final int i = search(current, c.getKey());
-      current.add(-i - 1, c);
+
+    final List<E> current = new ArrayList<E>();
+    {
+      // current = tmp + clist
+      final Iterator<E> tmpIterator = tmp.iterator();
+      final Iterator<E> cIterator = clist.iterator();
+
+      E t = tmpIterator.hasNext()? tmpIterator.next(): null;
+      E c = cIterator.hasNext()? cIterator.next(): null;
+      for(; t != null || c != null; ) {
+        final int cmp = c == null? 1
+            : t == null? -1
+            : c.compareTo(t.getKey());
+
+        if (cmp < 0) {
+          current.add(c);
+          c = cIterator.hasNext()? cIterator.next(): null;
+        } else if (cmp > 0) {
+          current.add(t);
+          t = tmpIterator.hasNext()? tmpIterator.next(): null;
+        } else {
+          throw new AssertionError("Violated assumption (A3).");
+        }
+      }

INS8 INS60 INS8 INS60 MOV70 INS24 INS83 INS74 INS59 INS60 INS60 INS60 INS60 INS24 UPD42 INS83 INS74 INS59 MOV44 INS42 INS8 INS32 INS8 INS43 INS43 INS42 INS14 INS83 INS74 INS59 INS83 INS74 INS59 INS43 INS59 INS43 INS59 INS27 INS8 INS43 INS43 INS42 INS32 UPD42 INS60 INS60 INS24 INS21 INS42 INS42 INS21 INS42 INS42 INS74 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS32 INS42 INS42 INS16 INS42 INS42 INS16 INS27 INS27 MOV60 INS25 INS42 INS42 INS42 INS42 MOV43 INS59 INS39 INS59 INS27 INS7 INS8 INS32 INS32 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS33 INS32 INS32 INS33 INS42 INS33 INS42 INS33 INS27 INS8 INS25 INS42 INS32 INS42 INS34 INS36 INS34 INS42 INS32 MOV21 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS16 INS42 INS34 INS21 INS21 INS27 INS8 INS8 INS42 INS42 INS7 INS42 INS42 INS42 INS34 INS42 INS42 INS27 INS34 INS16 INS32 INS7 INS42 UPD34 MOV34 INS21 INS21 INS53 INS42 INS32 UPD42 UPD42 UPD42 INS42 INS33 INS27 INS38 INS32 MOV42 MOV42 INS42 INS42 INS16 INS32 INS7 INS14 INS42 INS42 INS32 INS42 INS33 INS34 MOV42 INS42 INS32 INS32 INS32 INS33 UPD42 MOV42 INS42 INS42 INS42 INS16 INS43 INS45 INS42 INS42 INS42 MOV42 INS42 INS42 INS42 INS42 INS32 INS32 INS33 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL44 DEL42 DEL8 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL38 DEL27 DEL32 DEL21 DEL8 DEL70