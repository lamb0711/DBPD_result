HDFS-13165: [SPS]: Collects successfully moved block details via IBR. Contributed by Rakesh R.

+import org.apache.hadoop.hdfs.server.namenode.sps.StoragePolicySatisfyManager;
-import org.apache.hadoop.hdfs.server.protocol.BlocksStorageMoveAttemptFinished;
-      @Nonnull SlowDiskReports slowDisks,
-      BlocksStorageMoveAttemptFinished storageMovementFinishedBlks)
+      @Nonnull SlowDiskReports slowDisks)
-        slowPeers, slowDisks,
-        storageMovementFinishedBlks);
+        slowPeers, slowDisks);
-    boolean isSPSRunning = namesystem.getBlockManager().getSPSManager()
-        .isInternalSatisfierRunning();
+    StoragePolicySatisfyManager spsMgr =
+        namesystem.getBlockManager().getSPSManager();
+    boolean isInternalSatisfierRunning = (spsMgr != null
+        ? spsMgr.isInternalSatisfierRunning() : false);
-    return isSPSRunning;
+    return isInternalSatisfierRunning;
+    if (namesystem.getBlockManager().getSPSManager() == null) {
+      if (LOG.isDebugEnabled()) {
+        LOG.debug("Satisfier is not running inside namenode, so status "
+            + "can't be returned.");
+      }
+      throw new IOException("Satisfier is not running inside namenode, "
+          + "so status can't be returned.");
+    }
-    // Check that SPS daemon service is running inside namenode
-    if (namesystem.getBlockManager().getSPSManager()
-        .getMode() == StoragePolicySatisfierMode.INTERNAL) {
-      LOG.debug("SPS service is internally enabled and running inside "
-          + "namenode, so external SPS is not allowed to fetch the path Ids");
-      throw new IOException("SPS service is internally enabled and running"
-          + " inside namenode, so external SPS is not allowed to fetch"
-          + " the path Ids");
+    // Check that SPS is enabled externally
+    StoragePolicySatisfyManager spsMgr =
+        namesystem.getBlockManager().getSPSManager();
+    StoragePolicySatisfierMode spsMode = (spsMgr != null ? spsMgr.getMode()
+        : StoragePolicySatisfierMode.NONE);
+    if (spsMode != StoragePolicySatisfierMode.EXTERNAL) {
+      if (LOG.isDebugEnabled()) {
+        LOG.debug("SPS service mode is {}, so external SPS service is "
+            + "not allowed to fetch the path Ids", spsMode);
+      }
+      throw new IOException("SPS service mode is " + spsMode + ", so "
+          + "external SPS service is not allowed to fetch the path Ids");
-    Long pathId = namesystem.getBlockManager().getSPSManager().getNextPathId();
+    Long pathId = spsMgr.getNextPathId();

MOV26 UPD40 INS60 INS25 INS60 INS25 INS60 INS43 INS39 INS59 UPD42 INS27 INS8 INS43 INS43 INS59 INS27 MOV8 MOV43 INS59 INS42 UPD42 MOV32 INS42 INS36 MOV32 INS33 INS25 INS53 INS42 UPD42 MOV32 INS42 INS42 INS36 INS42 UPD40 MOV40 INS25 INS42 INS32 INS16 INS42 INS32 INS8 INS14 INS16 INS32 INS8 INS42 INS42 INS27 INS32 INS9 INS42 INS42 INS21 INS43 INS27 INS27 INS32 INS40 INS42 INS42 MOV21 INS42 INS33 INS42 INS42 INS32 INS42 INS45 INS45 INS42 INS33 UPD42 MOV42 MOV42 UPD45 INS42 UPD45 UPD45 INS42 INS42 INS27 INS42 INS45 INS45 UPD45 UPD45 DEL42 DEL43 DEL42 DEL44 DEL42 DEL39 DEL42 DEL32 DEL32 DEL27 DEL25 DEL42 DEL32