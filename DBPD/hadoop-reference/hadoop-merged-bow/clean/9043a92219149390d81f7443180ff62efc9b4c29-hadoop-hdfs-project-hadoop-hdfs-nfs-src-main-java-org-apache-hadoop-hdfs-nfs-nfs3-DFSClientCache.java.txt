Merge r1535533 through r1535791 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1535792 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.concurrent.TimeUnit;
+import org.apache.hadoop.fs.FSDataInputStream;
+import org.apache.hadoop.hdfs.DFSInputStream;
+import com.google.common.base.Objects;
-   * Cache that maps User id to corresponding DFSClient.
+   * Cache that maps User id to the corresponding DFSClient.
+  /**
+   * Cache that maps <DFSClient, inode path> to the corresponding
+   * FSDataInputStream.
+   */
+  final LoadingCache<DFSInputStreamCaheKey, FSDataInputStream> inputstreamCache;
+
+  /**
+   * Time to live for a DFSClient (in seconds)
+   */
+  final static int DEFAULT_DFS_INPUTSTREAM_CACHE_SIZE = 1024;
+  final static int DEFAULT_DFS_INPUTSTREAM_CACHE_TTL = 10 * 60;
+
+  private static class DFSInputStreamCaheKey {
+    final String userId;
+    final String inodePath;
+
+    private DFSInputStreamCaheKey(String userId, String inodePath) {
+      super();
+      this.userId = userId;
+      this.inodePath = inodePath;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+      if (obj instanceof DFSInputStreamCaheKey) {
+        DFSInputStreamCaheKey k = (DFSInputStreamCaheKey) obj;
+        return userId.equals(k.userId) && inodePath.equals(k.inodePath);
+      }
+      return false;
+    }
+
+    @Override
+    public int hashCode() {
+      return Objects.hashCode(userId, inodePath);
+    }
+  }
+
+
+    this.inputstreamCache = CacheBuilder.newBuilder()
+        .maximumSize(DEFAULT_DFS_INPUTSTREAM_CACHE_SIZE)
+        .expireAfterAccess(DEFAULT_DFS_INPUTSTREAM_CACHE_TTL, TimeUnit.SECONDS)
+        .removalListener(inputStreamRemovalListener())
+        .build(inputStreamLoader());
-  DFSClient get(String userName) {
+  private RemovalListener<DFSInputStreamCaheKey, FSDataInputStream> inputStreamRemovalListener() {
+    return new RemovalListener<DFSClientCache.DFSInputStreamCaheKey, FSDataInputStream>() {
+
+      @Override
+      public void onRemoval(
+          RemovalNotification<DFSInputStreamCaheKey, FSDataInputStream> notification) {
+        try {
+          notification.getValue().close();
+        } catch (IOException e) {
+        }
+      }
+    };
+  }
+
+  private CacheLoader<DFSInputStreamCaheKey, FSDataInputStream> inputStreamLoader() {
+    return new CacheLoader<DFSInputStreamCaheKey, FSDataInputStream>() {
+
+      @Override
+      public FSDataInputStream load(DFSInputStreamCaheKey key) throws Exception {
+        DFSClient client = getDfsClient(key.userId);
+        DFSInputStream dis = client.open(key.inodePath);
+        return new FSDataInputStream(dis);
+      }
+    };
+  }
+
+  DFSClient getDfsClient(String userName) {
+
+  FSDataInputStream getDfsInputStream(String userName, String inodePath) {
+    DFSInputStreamCaheKey k = new DFSInputStreamCaheKey(userName, inodePath);
+    FSDataInputStream s = null;
+    try {
+      s = inputstreamCache.get(k);
+    } catch (ExecutionException e) {
+      LOG.warn("Failed to create DFSInputStream for user:" + userName
+          + " Cause:" + e);
+    }
+    return s;
+  }
+
+  public void invalidateDfsInputStream(String userName, String inodePath) {
+    DFSInputStreamCaheKey k = new DFSInputStreamCaheKey(userName, inodePath);
+    inputstreamCache.invalidate(k);
+  }

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS23 INS23 INS23 INS55 INS31 INS31 INS31 INS31 INS29 INS83 INS74 INS59 INS29 INS83 INS83 INS39 INS59 INS83 INS83 INS39 INS59 INS83 INS83 INS42 INS23 INS23 INS31 INS31 INS31 INS83 INS74 INS42 INS8 INS83 INS74 INS42 INS8 UPD42 INS43 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS65 INS43 INS43 INS43 INS42 INS65 INS42 INS34 INS42 INS27 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS42 INS44 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS8 INS21 INS43 INS43 INS43 INS41 INS43 INS43 INS43 INS41 INS42 INS43 INS42 INS43 INS42 INS60 INS60 INS54 INS41 INS43 INS42 INS43 INS42 INS60 INS21 UPD66 INS66 INS66 INS42 INS42 INS42 INS66 INS34 INS34 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS46 INS21 INS21 INS42 INS43 INS42 INS25 INS41 INS42 INS41 INS7 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS14 INS42 INS42 INS43 INS59 INS43 INS59 INS8 INS12 INS42 INS42 INS42 INS43 INS59 INS32 INS42 INS42 INS7 INS7 INS42 INS62 INS8 INS9 INS32 INS22 INS32 INS74 INS1 INS74 INS1 INS42 INS42 INS14 INS42 INS42 INS33 INS21 INS44 INS8 INS42 INS42 INS14 INS42 INS42 INS42 INS22 INS42 INS22 INS42 INS42 INS43 INS60 INS41 INS42 INS42 INS42 INS42 INS52 INS42 INS32 INS42 INS32 INS43 INS43 INS43 INS31 INS43 INS43 INS43 INS31 INS43 INS42 INS42 INS7 INS43 INS42 INS21 INS43 INS42 INS42 INS52 INS42 INS52 INS42 INS42 INS43 INS59 INS27 INS32 INS42 INS32 INS42 INS42 INS40 INS42 INS78 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS42 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS11 INS32 INS32 INS32 INS42 INS42 INS40 INS42 INS42 INS74 INS42 INS54 INS42 INS42 INS43 INS42 INS42 INS60 INS60 INS41 INS42 INS42 INS42 INS42 INS42 INS27 INS43 INS42 INS42 INS42 INS40 INS42 INS42 INS40 INS32 INS42 INS42 INS43 INS43 INS43 INS8 INS12 INS42 INS43 INS59 INS43 INS59 INS14 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS44 INS8 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS42 INS32 INS43 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS32 INS42 INS42 INS42 INS42