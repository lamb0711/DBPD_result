HDFS-7775. Use consistent naming for NN-internal quota related types and functions. (Contributed bu Xiaoyu Yao)

-            spaceQuota(DirectoryWithQuotaFeature.DEFAULT_SPACE_QUOTA).build());
+            storageSpaceQuota(DirectoryWithQuotaFeature.DEFAULT_STORAGE_SPACE_QUOTA).
+            build());
-  /** Updates namespace and diskspace consumed for all
+  /** Updates namespace, storagespace and typespaces consumed for all
-   * @param dsDelta the delta change of space consumed without replication
+   * @param ssDelta the delta change of storage space consumed without replication
-  void updateSpaceConsumed(INodesInPath iip, long nsDelta, long dsDelta, short replication)
+  void updateSpaceConsumed(INodesInPath iip, long nsDelta, long ssDelta, short replication)
-      updateCount(iip, nsDelta, dsDelta, replication, true);
+      updateCount(iip, nsDelta, ssDelta, replication, true);
-  void updateCount(INodesInPath iip, long nsDelta, long dsDelta, short replication,
+  void updateCount(INodesInPath iip, long nsDelta, long ssDelta, short replication,
-      getStorageTypeDeltas(fileINode.getStoragePolicyID(), dsDelta,
+      getStorageTypeDeltas(fileINode.getStoragePolicyID(), ssDelta,
-      new QuotaCounts.Builder().nameCount(nsDelta).spaceCount(dsDelta * replication).
-          typeCounts(typeSpaceDeltas).build(),
+      new QuotaCounts.Builder().nameSpace(nsDelta).storageSpace(ssDelta * replication).
+          typeSpaces(typeSpaceDeltas).build(),
-  void updateCount(INodesInPath iip, long nsDelta, long dsDelta, short oldRep,
+  void updateCount(INodesInPath iip, long nsDelta, long ssDelta, short oldRep,
-        getStorageTypeDeltas(fileINode.getStoragePolicyID(), dsDelta, oldRep, newRep);
+        getStorageTypeDeltas(fileINode.getStoragePolicyID(), ssDelta, oldRep, newRep);
-        new QuotaCounts.Builder().nameCount(nsDelta).
-            spaceCount(dsDelta * (newRep - oldRep)).
-            typeCounts(typeSpaceDeltas).build(),
+        new QuotaCounts.Builder().nameSpace(nsDelta).
+            storageSpace(ssDelta * (newRep - oldRep)).
+            typeSpaces(typeSpaceDeltas).build(),
-   * namespace and diskspace to a given position.
+   * namespace and storagespace to a given position.
-   * @param deltas needed namespace, diskspace and storage types
+   * @param deltas needed namespace, storagespace and storage types
-    if (deltas.getNameSpace() <= 0 && deltas.getDiskSpace() <= 0
+    if (deltas.getNameSpace() <= 0 && deltas.getStorageSpace() <= 0
-    long oldDiskspaceNoRep = file.diskspaceConsumedNoReplication();
+    long oldDiskspaceNoRep = file.storagespaceConsumedNoReplication();
-    updateCount(iip, 0, file.diskspaceConsumedNoReplication() - oldDiskspaceNoRep,
+    updateCount(iip, 0, file.storagespaceConsumedNoReplication() - oldDiskspaceNoRep,

UPD42 UPD42 UPD42 UPD66 UPD42 UPD66 UPD66 UPD66 UPD42 UPD42 UPD42 UPD42 UPD40 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42