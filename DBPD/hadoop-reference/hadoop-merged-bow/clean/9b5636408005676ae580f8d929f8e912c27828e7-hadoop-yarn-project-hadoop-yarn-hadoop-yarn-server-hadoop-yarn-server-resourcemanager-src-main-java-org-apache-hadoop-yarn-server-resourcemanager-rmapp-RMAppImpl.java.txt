YARN-3039. Implemented the app-level timeline aggregator discovery service. Contributed by Junping Du.

+  private String aggregatorAddr;
+    .addTransition(RMAppState.NEW, RMAppState.NEW,
+        RMAppEventType.AGGREGATOR_UPDATE, new RMAppAggregatorUpdateTransition())
+    .addTransition(RMAppState.NEW_SAVING, RMAppState.NEW_SAVING,
+        RMAppEventType.AGGREGATOR_UPDATE, new RMAppAggregatorUpdateTransition())
+    .addTransition(RMAppState.SUBMITTED, RMAppState.SUBMITTED,
+        RMAppEventType.AGGREGATOR_UPDATE, new RMAppAggregatorUpdateTransition())
+    .addTransition(RMAppState.ACCEPTED, RMAppState.ACCEPTED,
+        RMAppEventType.AGGREGATOR_UPDATE, new RMAppAggregatorUpdateTransition())
+    .addTransition(RMAppState.RUNNING, RMAppState.RUNNING,
+        RMAppEventType.AGGREGATOR_UPDATE, new RMAppAggregatorUpdateTransition())
+    .addTransition(RMAppState.FINAL_SAVING, RMAppState.FINAL_SAVING,
+        RMAppEventType.AGGREGATOR_UPDATE, new RMAppAggregatorUpdateTransition())
+    .addTransition(RMAppState.FINISHING, RMAppState.FINISHING,
+        RMAppEventType.AGGREGATOR_UPDATE, new RMAppAggregatorUpdateTransition())
+    .addTransition(RMAppState.KILLING, RMAppState.KILLING,
+        RMAppEventType.AGGREGATOR_UPDATE, new RMAppAggregatorUpdateTransition())
+  
+  @Override
+  public String getAggregatorAddr() {
+    return this.aggregatorAddr;
+  }
+  
+  @Override
+  public void setAggregatorAddr(String aggregatorAddr) {
+    this.aggregatorAddr = aggregatorAddr;
+  }
+  
+  @Override
+  public void removeAggregatorAddr() {
+    this.aggregatorAddr = null;
+  }
+    //TODO recover aggregator address.
+    //this.aggregatorAddr = appState.getAggregatorAddr();
-
+  private static final class RMAppAggregatorUpdateTransition 
+      extends RMAppTransition {
+  
+    public void transition(RMAppImpl app, RMAppEvent event) {
+      LOG.info("Updating aggregator info for app: " + app.getApplicationId());
+    
+      RMAppAggregatorUpdateEvent appAggregatorUpdateEvent = 
+          (RMAppAggregatorUpdateEvent) event;
+      // Update aggregator address
+      app.setAggregatorAddr(appAggregatorUpdateEvent.getAppAggregatorAddr());
+      
+      // TODO persistent to RMStateStore for recover
+      // Save to RMStateStore
+    };
+  }
+  

INS83 INS42 INS23 INS31 INS31 INS31 INS55 INS83 INS43 INS59 INS78 INS83 INS43 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS8 INS83 INS83 INS83 INS42 INS43 INS31 INS42 INS42 INS42 INS42 INS41 INS42 INS43 INS42 INS21 INS42 INS21 INS42 INS83 INS39 INS42 INS44 INS44 INS8 INS22 INS42 INS7 INS7 INS43 INS42 INS43 INS42 INS21 INS60 INS21 INS52 INS42 INS22 INS42 INS22 INS33 INS42 INS42 INS32 INS43 INS59 INS32 INS52 INS42 INS52 INS42 INS42 INS42 INS27 INS42 INS42 INS11 INS42 INS42 INS32 INS45 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS40 MOV32 MOV42 MOV40 INS40 INS40 INS14 INS43 INS32 INS42 INS40 INS40 INS42 MOV32 MOV42 MOV40 MOV40 INS40 INS14 INS43 INS42 INS32 INS42 INS40 INS40 MOV32 MOV42 MOV40 MOV40 INS40 INS14 INS43 INS42 INS32 INS42 INS40 MOV32 MOV42 MOV40 INS40 INS40 INS14 INS43 INS42 INS32 INS42 INS40 MOV32 MOV42 MOV40 INS40 INS40 MOV14 UPD40 UPD40 INS14 INS43 INS42 INS32 INS42 INS40 MOV32 MOV42 MOV40 INS40 INS40 INS14 INS43 INS42 INS32 INS42 INS40 MOV32 MOV42 MOV40 INS40 INS40 MOV14 UPD40 UPD40 INS14 INS43 INS42 INS32 INS42 INS40 MOV32 MOV42 MOV40 INS40 INS40 MOV14 UPD40 UPD40 INS14 INS43 INS42 DEL83 DEL42