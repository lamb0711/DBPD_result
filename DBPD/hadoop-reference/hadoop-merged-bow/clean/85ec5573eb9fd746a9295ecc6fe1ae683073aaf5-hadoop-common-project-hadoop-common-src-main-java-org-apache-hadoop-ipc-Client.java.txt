HADOOP-12672. RPC timeout should not override IPC ping interval (iwasakims)

+   * @deprecated use {@link #getRpcTimeout(Configuration)} instead
+  @Deprecated
+    int timeout = getRpcTimeout(conf);
+    if (timeout > 0)  {
+      return timeout;
+    }
+
+  /**
+   * The time after which a RPC will timeout.
+   *
+   * @param conf Configuration
+   * @return the timeout period in milliseconds.
+   */
+  public static final int getRpcTimeout(Configuration conf) {
+    int timeout =
+        conf.getInt(CommonConfigurationKeys.IPC_CLIENT_RPC_TIMEOUT_KEY,
+            CommonConfigurationKeys.IPC_CLIENT_RPC_TIMEOUT_DEFAULT);
+    return (timeout < 0) ? 0 : timeout;
+  }
-    private int rpcTimeout;
+    private final int rpcTimeout;
-    private boolean doPing; //do we need to send ping message
-    private int pingInterval; // how often sends ping to the server in msecs
+    private final boolean doPing; //do we need to send ping message
+    private final int pingInterval; // how often sends ping to the server
+    private final int soTimeout; // used by ipc ping and rpc timeout
+      if (rpcTimeout > 0) {
+        // effective rpc timeout is rounded up to multiple of pingInterval
+        // if pingInterval < rpcTimeout.
+        this.soTimeout = (doPing && pingInterval < rpcTimeout) ?
+            pingInterval : rpcTimeout;
+      } else {
+        this.soTimeout = pingInterval;
+      }
-       * is not configured to have a RPC timeout, send a ping.
-       * (if rpcTimeout is not set to be 0, then RPC should timeout.
-       * otherwise, throw the timeout exception.
+       * the RPC is not timed out yet, send a ping.
-      private void handleTimeout(SocketTimeoutException e) throws IOException {
-        if (shouldCloseConnection.get() || !running.get() || rpcTimeout > 0) {
+      private void handleTimeout(SocketTimeoutException e, int waiting)
+          throws IOException {
+        if (shouldCloseConnection.get() || !running.get() ||
+            (0 < rpcTimeout && rpcTimeout <= waiting)) {
+        int waiting = 0;
-            handleTimeout(e);
+            waiting += soTimeout;
+            handleTimeout(e, waiting);
+        int waiting = 0;
-            handleTimeout(e);
+            waiting += soTimeout;
+            handleTimeout(e, waiting);
-          if (rpcTimeout > 0) {
-            pingInterval = rpcTimeout;  // rpcTimeout overwrites pingInterval
-          }
-          this.socket.setSoTimeout(pingInterval);
+          this.socket.setSoTimeout(soTimeout);

INS31 INS78 INS29 INS83 INS83 INS83 INS39 INS42 INS44 INS8 INS23 INS65 INS42 INS60 INS25 INS65 INS65 INS65 INS43 INS42 INS60 INS41 INS83 INS83 INS83 INS83 INS83 INS39 INS59 INS66 INS65 INS66 INS39 INS59 INS27 INS8 INS66 INS42 INS66 INS66 INS42 INS39 INS59 INS16 INS42 INS25 INS44 INS68 INS42 INS32 INS42 INS34 INS41 INS42 INS32 INS36 INS34 INS42 MOV27 INS8 INS8 INS39 INS42 INS60 INS60 INS42 INS69 INS42 INS42 INS42 INS42 INS42 INS40 INS40 INS27 INS21 INS21 INS39 INS59 INS39 INS59 INS43 INS42 INS34 INS7 INS7 INS36 INS42 INS34 INS42 INS34 INS42 INS22 INS16 INS22 INS42 INS27 INS52 INS42 INS36 INS42 INS42 INS52 INS42 UPD27 MOV27 INS27 MOV44 MOV44 INS27 INS34 INS42 INS42 INS21 INS21 UPD42 INS42 INS27 INS7 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL34 DEL42 DEL42 DEL7 DEL21 DEL8 DEL25