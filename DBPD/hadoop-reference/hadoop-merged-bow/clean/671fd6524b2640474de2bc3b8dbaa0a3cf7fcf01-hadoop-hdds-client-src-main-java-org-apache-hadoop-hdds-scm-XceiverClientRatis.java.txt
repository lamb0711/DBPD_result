HDDS-675. Add blocking buffer and use watchApi for flush/close in OzoneClient. Contributed by Shashikant Banerjee.

+import java.util.Collection;
+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.TimeoutException;
-  public void watchForCommit(long index, long timeout) throws Exception {
-    getClient().sendWatchAsync(index, RaftProtos.ReplicationLevel.ALL_COMMITTED)
-        .get(timeout, TimeUnit.MILLISECONDS);
+  @Override
+  public void watchForCommit(long index, long timeout)
+      throws InterruptedException, ExecutionException, TimeoutException {
+    // TODO: Create a new Raft client instance to watch
+    CompletableFuture<RaftClientReply> replyFuture = getClient()
+        .sendWatchAsync(index, RaftProtos.ReplicationLevel.ALL_COMMITTED);
+    try {
+      replyFuture.get(timeout, TimeUnit.MILLISECONDS);
+    } catch (TimeoutException toe) {
+      LOG.warn("3 way commit failed ", toe);
+      getClient()
+          .sendWatchAsync(index, RaftProtos.ReplicationLevel.MAJORITY_COMMITTED)
+          .get(timeout, TimeUnit.MILLISECONDS);
+      LOG.info("Could not commit " + index + " to all the nodes."
+          + "Committed by majority.");
+    }
-  public CompletableFuture<ContainerCommandResponseProto> sendCommandAsync(
+  public XceiverClientAsyncReply sendCommandAsync(
-    return sendRequestAsync(request).whenComplete((reply, e) ->
-          LOG.debug("received reply {} for request: {} exception: {}", request,
-              reply, e))
-        .thenApply(reply -> {
-          try {
-            return ContainerCommandResponseProto.parseFrom(
-                reply.getMessage().getContent());
-          } catch (InvalidProtocolBufferException e) {
-            throw new CompletionException(e);
-          }
-        });
+    XceiverClientAsyncReply asyncReply = new XceiverClientAsyncReply(null);
+    CompletableFuture<RaftClientReply> raftClientReply =
+        sendRequestAsync(request);
+    Collection<XceiverClientAsyncReply.CommitInfo> commitInfos =
+        new ArrayList<>();
+    CompletableFuture<ContainerCommandResponseProto> containerCommandResponse =
+        raftClientReply.whenComplete((reply, e) -> LOG
+            .debug("received reply {} for request: {} exception: {}", request,
+                reply, e))
+            .thenApply(reply -> {
+              try {
+                ContainerCommandResponseProto response =
+                    ContainerCommandResponseProto
+                        .parseFrom(reply.getMessage().getContent());
+                reply.getCommitInfos().forEach(e -> {
+                  XceiverClientAsyncReply.CommitInfo commitInfo =
+                      new XceiverClientAsyncReply.CommitInfo(
+                          e.getServer().getAddress(), e.getCommitIndex());
+                  commitInfos.add(commitInfo);
+                  asyncReply.setCommitInfos(commitInfos);
+                  asyncReply.setLogIndex(reply.getLogIndex());
+                });
+                return response;
+              } catch (InvalidProtocolBufferException e) {
+                throw new CompletionException(e);
+              }
+            });
+    asyncReply.setResponse(containerCommandResponse);
+    return asyncReply;
+

INS26 INS26 INS26 INS40 INS40 INS40 INS78 INS43 UPD43 INS43 INS8 INS43 INS42 INS42 UPD42 INS42 INS60 INS54 INS42 INS60 INS60 INS60 INS60 INS21 INS74 INS59 INS8 INS12 INS43 INS59 INS74 INS59 INS74 INS59 MOV74 INS59 INS32 INS42 INS43 INS43 INS42 MOV32 MOV21 INS44 INS8 INS42 INS42 INS14 INS43 INS43 INS42 MOV32 INS43 INS43 INS42 INS14 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS21 INS21 INS21 INS43 INS33 INS42 INS42 INS42 INS40 INS74 INS42 INS42 INS32 INS32 INS32 INS42 INS43 INS42 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS27 INS42 INS32 INS42 INS42 INS40 INS45 INS42 INS45 INS45 INS42 INS60 INS21 INS43 INS59 INS32 INS42 INS42 INS42 MOV32 INS32 INS42 INS86 INS42 INS42 INS59 INS8 INS42 INS60 INS21 INS21 INS21 INS43 INS59 INS32 INS32 INS32 INS40 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS32 INS32 INS42 INS42 INS40 INS32 INS42 INS42 INS42 INS42 INS42 DEL8