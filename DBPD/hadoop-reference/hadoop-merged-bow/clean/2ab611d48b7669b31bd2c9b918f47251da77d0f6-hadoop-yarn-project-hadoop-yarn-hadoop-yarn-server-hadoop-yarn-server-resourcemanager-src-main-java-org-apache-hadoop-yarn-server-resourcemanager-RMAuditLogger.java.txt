YARN-7225. Add queue and partition info to RM audit log. Contributed by Eric Payne

-                    INCLUDEAPPS, INCLUDECHILDQUEUES, RECURSIVE}
+                    INCLUDEAPPS, INCLUDECHILDQUEUES, RECURSIVE, NODELABEL}
-        containerId, resource, null, Server.getRemoteIp());
+        containerId, resource, null, Server.getRemoteIp(), null, null);
-      InetAddress ip) {
+      InetAddress ip, String queueName, String partition) {
+    if (queueName != null) {
+      add(Keys.QUEUENAME, queueName, b);
+    }
+    if (partition != null) {
+      add(Keys.NODELABEL, partition, b);
+    }
+   * Create a readable and parseable audit log string for a successful event.
+   *
+   * @param user User who made the service request to the ResourceManager
+   * @param operation Operation requested by the user.
+   * @param target The target on which the operation is being performed.
+   * @param appId Application Id in which operation was performed.
+   * @param containerId Container Id in which operation was performed.
+   * @param resource Resource associated with container.
+   * @param queueName Name of queue.
+   * @param partition Name of labeled partition.
+   *
+   * <br><br>
+   * Note that the {@link RMAuditLogger} uses tabs ('\t') as a key-val delimiter
+   * and hence the value fields should not contains tabs ('\t').
+   */
+  public static void logSuccess(String user, String operation, String target,
+      ApplicationId appId, ContainerId containerId, Resource resource,
+      String queueName, String partition) {
+    if (LOG.isInfoEnabled()) {
+      LOG.info(createSuccessLog(user, operation, target, appId, null,
+          containerId, resource, null, Server.getRemoteIp(), queueName,
+          partition));
+    }
+  }
+
+  /**
-  
+
-          null, callerContext, Server.getRemoteIp()));
+          null, callerContext, Server.getRemoteIp(), null, null));
+    }
+  }
+
+  public static void logSuccess(String user, String operation, String target,
+      ApplicationId appId, CallerContext callerContext, String queueName) {
+    if (LOG.isInfoEnabled()) {
+      LOG.info(createSuccessLog(user, operation, target, appId, null, null,
+          null, callerContext, Server.getRemoteIp(), queueName, null));
-          null, null, ip));
+          null, null, ip, null, null));
-      Resource resource, CallerContext callerContext) {
+      Resource resource, CallerContext callerContext, String queueName) {
+    if (queueName != null) {
+      add(Keys.QUEUENAME, queueName, b);
+    }
-        attemptId, containerId, resource, null);
+        attemptId, containerId, resource, null, null);
-  
+
-          appId, null, null, null, callerContext));
+          appId, null, null, null, callerContext, null));
+    }
+  }
+
+  public static void logFailure(String user, String operation, String perm,
+      String target, String description, ApplicationId appId,
+      CallerContext callerContext, String queueName) {
+    if (LOG.isWarnEnabled()) {
+      LOG.warn(createFailureLog(user, operation, perm, target, description,
+          appId, null, null, null, callerContext, queueName));
+  public static void logFailure(String user, String operation, String perm,
+      String target, String description, ApplicationId appId,
+      String queueName) {
+    if (LOG.isWarnEnabled()) {
+      LOG.warn(createFailureLog(user, operation, perm, target, description,
+          appId, null, null, null, null, queueName));
+    }
+  }
+

INS31 INS31 INS31 INS31 INS72 INS44 INS44 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS8 INS83 INS83 INS39 INS42 MOV44 MOV44 INS44 INS44 INS44 INS44 INS8 INS44 MOV44 MOV44 MOV44 MOV44 MOV44 MOV44 INS44 INS44 MOV44 MOV44 MOV44 MOV44 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS8 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS8 INS42 INS43 INS42 INS43 INS42 INS25 INS25 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS25 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS25 INS43 INS42 INS25 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS25 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS25 INS42 INS42 INS27 INS8 INS27 INS8 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS65 INS66 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS8 MOV32 INS42 INS42 INS42 INS42 INS32 INS8 INS32 INS42 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS8 INS33 INS33 INS42 INS33 INS21 INS42 INS33 INS21 INS42 INS21 INS42 INS42 INS21 INS42 INS42 INS42 INS33 INS21 INS33 INS42 INS42 INS21 INS42 INS42 INS21 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS42 INS40 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS40 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS33 MOV32 INS42 INS42 INS32 INS33 INS33 INS42 INS42 INS42 INS42 INS42 INS33 INS33 INS33 INS42 INS32 INS42 INS33 INS33 INS33 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS33 INS33 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS33 INS33 INS33 INS42 INS42 INS42 INS42 INS42