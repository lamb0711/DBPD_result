Merge trunk to HDFS-4685.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1561771 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.common.StorageInfo;
+  
+  QuorumCall<AsyncLogger, Void> doPreUpgrade() {
+    Map<AsyncLogger, ListenableFuture<Void>> calls =
+        Maps.newHashMap();
+    for (AsyncLogger logger : loggers) {
+      ListenableFuture<Void> future =
+          logger.doPreUpgrade();
+      calls.put(logger, future);
+    }
+    return QuorumCall.create(calls);
+  }
+
+  public QuorumCall<AsyncLogger, Void> doUpgrade(StorageInfo sInfo) {
+    Map<AsyncLogger, ListenableFuture<Void>> calls =
+        Maps.newHashMap();
+    for (AsyncLogger logger : loggers) {
+      ListenableFuture<Void> future =
+          logger.doUpgrade(sInfo);
+      calls.put(logger, future);
+    }
+    return QuorumCall.create(calls);
+  }
+
+  public QuorumCall<AsyncLogger, Void> doFinalize() {
+    Map<AsyncLogger, ListenableFuture<Void>> calls =
+        Maps.newHashMap();
+    for (AsyncLogger logger : loggers) {
+      ListenableFuture<Void> future =
+          logger.doFinalize();
+      calls.put(logger, future);
+    }
+    return QuorumCall.create(calls);
+  }
+
+  public QuorumCall<AsyncLogger, Boolean> canRollBack(StorageInfo storage,
+      StorageInfo prevStorage, int targetLayoutVersion) {
+    Map<AsyncLogger, ListenableFuture<Boolean>> calls =
+        Maps.newHashMap();
+    for (AsyncLogger logger : loggers) {
+      ListenableFuture<Boolean> future =
+          logger.canRollBack(storage, prevStorage, targetLayoutVersion);
+      calls.put(logger, future);
+    }
+    return QuorumCall.create(calls);
+  }
+
+  public QuorumCall<AsyncLogger, Void> doRollback() {
+    Map<AsyncLogger, ListenableFuture<Void>> calls =
+        Maps.newHashMap();
+    for (AsyncLogger logger : loggers) {
+      ListenableFuture<Void> future =
+          logger.doRollback();
+      calls.put(logger, future);
+    }
+    return QuorumCall.create(calls);
+  }
+
+  public QuorumCall<AsyncLogger, Long> getJournalCTime() {
+    Map<AsyncLogger, ListenableFuture<Long>> calls =
+        Maps.newHashMap();
+    for (AsyncLogger logger : loggers) {
+      ListenableFuture<Long> future = logger.getJournalCTime();
+      calls.put(logger, future);
+    }
+    return QuorumCall.create(calls);
+  }
+

INS26 INS40 INS31 INS31 INS31 INS31 INS31 INS31 INS74 INS42 INS8 INS83 INS74 INS42 INS44 INS8 INS83 INS74 INS42 INS8 INS83 INS74 INS42 INS44 INS44 INS44 INS8 INS83 INS74 INS42 INS8 INS83 INS74 INS42 INS8 INS43 INS43 INS43 INS60 INS70 INS41 INS43 INS43 INS43 INS43 INS42 INS60 INS70 INS41 INS43 INS43 INS43 INS60 INS70 INS41 INS43 INS43 INS43 INS43 INS42 INS43 INS42 INS39 INS42 INS60 INS70 INS41 INS43 INS43 INS43 INS60 INS70 INS41 INS43 INS43 INS43 INS60 INS70 INS41 INS42 INS42 INS42 INS74 INS59 INS44 INS42 INS8 INS32 INS42 INS42 INS42 INS42 INS74 INS59 INS44 INS42 INS8 INS32 INS42 INS42 INS42 INS74 INS59 INS44 INS42 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS44 INS42 INS8 INS32 INS42 INS42 INS42 INS74 INS59 INS44 INS42 INS8 INS32 INS42 INS42 INS42 INS74 INS59 INS44 INS42 INS8 INS32 INS43 INS43 INS74 INS42 INS32 INS43 INS42 INS60 INS21 INS42 INS42 INS42 INS43 INS43 INS74 INS42 INS32 INS43 INS42 INS60 INS21 INS42 INS42 INS42 INS43 INS43 INS74 INS42 INS32 INS43 INS42 INS60 INS21 INS42 INS42 INS42 INS43 INS43 INS74 INS42 INS32 INS43 INS42 INS60 INS21 INS42 INS42 INS42 INS43 INS43 INS74 INS42 INS32 INS43 INS42 INS60 INS21 INS42 INS42 INS42 INS43 INS43 INS74 INS42 INS32 INS43 INS42 INS60 INS21 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS74 INS59 INS32 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS74 INS59 INS32 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS74 INS59 INS32 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS74 INS59 INS32 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS74 INS59 INS32 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS74 INS59 INS32 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42