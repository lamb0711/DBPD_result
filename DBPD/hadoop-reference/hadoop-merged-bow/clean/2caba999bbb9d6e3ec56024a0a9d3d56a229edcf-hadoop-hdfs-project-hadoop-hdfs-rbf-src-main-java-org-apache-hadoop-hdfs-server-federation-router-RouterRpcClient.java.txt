HDFS-13250. RBF: Router to manage requests across multiple subclusters. Contributed by Inigo Goiri.

+   * Invoke method in all locations and return success if any succeeds.
+   *
+   * @param locations List of remote locations to call concurrently.
+   * @param method The remote method and parameters to invoke.
+   * @return If the call succeeds in any location.
+   * @throws IOException If any of the calls return an exception.
+   */
+  public <T extends RemoteLocationContext, R> boolean invokeAll(
+      final Collection<T> locations, final RemoteMethod method)
+          throws IOException {
+    boolean anyResult = false;
+    Map<T, Boolean> results =
+        invokeConcurrent(locations, method, false, false, Boolean.class);
+    for (Boolean value : results.values()) {
+      boolean result = value.booleanValue();
+      if (result) {
+        anyResult = true;
+      }
+    }
+    return anyResult;
+  }
+
+  /**
+   * Invoke multiple concurrent proxy calls to different clients. Returns an
+   * array of results.
+   *
+   * Re-throws exceptions generated by the remote RPC call as either
+   * RemoteException or IOException.
+   *
+   * @param <T> The type of the remote location.
+   * @param locations List of remote locations to call concurrently.
+   * @param method The remote method and parameters to invoke.
+   * @throws IOException If all the calls throw an exception.
+   */
+  public <T extends RemoteLocationContext, R> void invokeConcurrent(
+      final Collection<T> locations, final RemoteMethod method)
+          throws IOException {
+    invokeConcurrent(locations, method, void.class);
+  }
+
+  /**
+   * Invoke multiple concurrent proxy calls to different clients. Returns an
+   * array of results.
+   *
+   * Re-throws exceptions generated by the remote RPC call as either
+   * RemoteException or IOException.
+   *
+   * @param <T> The type of the remote location.
+   * @param locations List of remote locations to call concurrently.
+   * @param method The remote method and parameters to invoke.
+   * @return Result of invoking the method per subcluster: nsId -> result.
+   * @throws IOException If all the calls throw an exception.
+   */
+  public <T extends RemoteLocationContext, R> Map<T, R> invokeConcurrent(
+      final Collection<T> locations, final RemoteMethod method, Class<R> clazz)
+          throws IOException {
+    return invokeConcurrent(locations, method, false, false, clazz);
+  }
+
+  /**

INS31 INS31 INS31 INS29 INS83 INS73 INS73 INS39 INS42 INS44 INS44 INS43 INS8 INS29 INS83 INS73 INS73 INS39 INS42 INS44 INS44 INS43 INS8 INS29 INS83 INS73 INS73 INS74 INS42 INS44 INS44 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS83 INS74 INS42 INS83 INS43 INS42 INS42 INS60 INS60 INS70 INS41 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS83 INS74 INS42 INS83 INS43 INS42 INS42 INS21 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS43 INS43 INS83 INS74 INS42 INS83 INS43 INS42 INS74 INS42 INS42 INS41 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS43 INS43 INS42 INS39 INS59 INS74 INS59 INS44 INS32 INS8 INS42 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS43 INS43 INS42 INS32 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS43 INS43 INS32 INS42 INS42 INS42 INS9 INS43 INS43 INS43 INS42 INS32 INS43 INS42 INS42 INS42 INS60 INS25 INS42 INS42 INS42 INS42 INS42 INS57 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS9 INS57 INS42 INS39 INS59 INS42 INS8 INS39 INS43 INS42 INS32 INS21 INS42 INS42 INS42 INS7 INS42 INS9