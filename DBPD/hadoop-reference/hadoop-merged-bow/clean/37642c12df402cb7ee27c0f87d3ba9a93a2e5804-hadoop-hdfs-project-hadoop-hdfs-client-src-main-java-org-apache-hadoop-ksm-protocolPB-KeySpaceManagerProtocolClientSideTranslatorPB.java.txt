HDFS-11770. Ozone: KSM: Add setVolumeProperty. Contributed by Mukul Kumar Singh.

+    .KeySpaceManagerProtocolProtos.SetVolumePropertyRequest;
+import org.apache.hadoop.ozone.protocol.proto
+    .KeySpaceManagerProtocolProtos.SetVolumePropertyResponse;
+import org.apache.hadoop.ozone.protocol.proto
+    .KeySpaceManagerProtocolProtos.InfoVolumeRequest;
+import org.apache.hadoop.ozone.protocol.proto
+    .KeySpaceManagerProtocolProtos.InfoVolumeResponse;
+import org.apache.hadoop.ozone.protocol.proto
-      throw new IOException("Volume creation failed error" + resp.getStatus());
+      throw new
+          IOException("Volume creation failed, error:" + resp.getStatus());
-
+    SetVolumePropertyRequest.Builder req =
+        SetVolumePropertyRequest.newBuilder();
+    req.setVolumeName(volume).setOwnerName(owner);
+    final SetVolumePropertyResponse resp;
+    try {
+      resp = rpcProxy.setVolumeProperty(NULL_RPC_CONTROLLER, req.build());
+    } catch (ServiceException e) {
+      throw ProtobufHelper.getRemoteException(e);
+    }
+    if (resp.getStatus() != Status.OK) {
+      throw new
+          IOException("Volume owner change failed, error:" + resp.getStatus());
+    }
-
+    SetVolumePropertyRequest.Builder req =
+        SetVolumePropertyRequest.newBuilder();
+    req.setVolumeName(volume).setQuotaInBytes(quota);
+    final SetVolumePropertyResponse resp;
+    try {
+      resp = rpcProxy.setVolumeProperty(NULL_RPC_CONTROLLER, req.build());
+    } catch (ServiceException e) {
+      throw ProtobufHelper.getRemoteException(e);
+    }
+    if (resp.getStatus() != Status.OK) {
+      throw new
+          IOException("Volume quota change failed, error:" + resp.getStatus());
+    }
-   * @param volume - Volume name.s
+   * @param volume - Volume name.
-    return null;
+    InfoVolumeRequest.Builder req = InfoVolumeRequest.newBuilder();
+    req.setVolumeName(volume);
+    final InfoVolumeResponse resp;
+    try {
+      resp = rpcProxy.infoVolume(NULL_RPC_CONTROLLER, req.build());
+    } catch (ServiceException e) {
+      throw ProtobufHelper.getRemoteException(e);
+    }
+    if (resp.getStatus() != Status.OK) {
+      throw new
+          IOException("Info Volume failed, error:" + resp.getStatus());
+    }
+    return KsmVolumeArgs.getFromProtobuf(resp.getVolumeInfo());
-   * Deletes the an exisiting empty volume.
+   * Deletes an existing empty volume.

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS8 INS8 INS60 INS21 INS60 INS54 INS25 INS60 INS21 INS60 INS54 INS25 INS60 INS21 INS60 INS54 INS25 INS43 INS59 INS32 INS83 INS43 INS59 INS8 INS12 INS27 INS8 INS43 INS59 INS32 INS83 INS43 INS59 INS8 INS12 INS27 INS8 UPD66 INS43 INS59 INS32 INS83 INS43 INS59 INS8 INS12 INS27 INS8 INS32 UPD66 INS40 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS21 INS44 INS8 INS32 INS40 INS53 INS40 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS21 INS44 INS8 INS32 INS40 INS53 INS40 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS21 INS44 INS8 INS32 INS40 INS53 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS7 INS43 INS42 INS53 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS7 INS43 INS42 INS53 INS42 INS42 INS14 INS42 INS42 INS7 INS43 INS42 INS53 INS42 INS42 INS14 INS42 INS42 INS42 INS32 INS42 INS32 INS43 INS27 INS42 INS32 INS42 INS32 INS43 INS27 INS42 INS32 INS42 INS32 INS43 INS27 UPD45 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL8 DEL8 DEL33