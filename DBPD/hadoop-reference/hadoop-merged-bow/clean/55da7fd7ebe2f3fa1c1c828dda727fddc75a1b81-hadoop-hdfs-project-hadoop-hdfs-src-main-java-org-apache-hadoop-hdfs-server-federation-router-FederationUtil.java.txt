HDFS-10687. Federation Membership State Store internal API. Contributed by Jason Kace and Inigo Goiri.

(cherry picked from commit 95cae08849d23cf12c5d280c29f90908e6a90d40)

-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
-  private static final Log LOG = LogFactory.getLog(FederationUtil.class);
+  private static final Logger LOG =
+      LoggerFactory.getLogger(FederationUtil.class);
+   * Create an instance of an interface with a constructor using a context.
+   *
+   * @param conf Configuration for the class names.
+   * @param context Context object to pass to the instance.
+   * @param contextClass Type of the context passed to the constructor.
+   * @param clazz Class of the object to return.
+   * @return New instance of the specified class that implements the desired
+   *         interface and a single parameter constructor containing a
+   *         StateStore reference.
+   */
+  private static <T, R> T newInstance(final Configuration conf,
+      final R context, final Class<R> contextClass, final Class<T> clazz) {
+    try {
+      if (contextClass == null) {
+        // Default constructor if no context
+        Constructor<T> constructor = clazz.getConstructor();
+        return constructor.newInstance();
+      } else {
+        // Constructor with context
+        Constructor<T> constructor = clazz.getConstructor(
+            Configuration.class, contextClass);
+        return constructor.newInstance(conf, context);
+      }
+    } catch (ReflectiveOperationException e) {
+      LOG.error("Could not instantiate: {}", clazz.getSimpleName(), e);
+      return null;
+    }
+  }
+
+  /**
-   * @return ActiveNamenodeResolver
+   * @return New active namenode resolver.
-    return newInstance(conf, stateStore, StateStoreService.class,
+    Class<? extends ActiveNamenodeResolver> clazz = conf.getClass(
+    return newInstance(conf, stateStore, StateStoreService.class, clazz);

MOV26 MOV26 UPD40 UPD40 INS31 UPD43 INS29 INS83 INS83 INS73 INS73 INS43 INS42 INS44 INS44 INS44 INS44 INS8 UPD42 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS42 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS74 INS42 INS83 INS74 INS42 INS54 INS60 INS41 UPD42 UPD42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS66 INS42 INS42 INS43 INS43 INS43 INS43 INS8 INS12 UPD66 INS74 INS59 INS32 INS42 INS42 INS42 INS42 INS25 INS44 INS8 INS43 INS76 INS42 INS32 INS42 INS42 INS42 MOV57 INS42 INS27 INS8 INS8 INS43 INS42 INS21 INS41 INS42 INS43 MOV42 UPD42 MOV42 MOV40 MOV40 MOV57 INS42 INS33 INS60 INS41 INS60 INS41 INS42 INS32 INS33 INS42 INS74 INS59 INS32 INS74 INS59 INS32 INS42 INS42 INS45 INS32 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS57 INS42 INS43 INS42 DEL42 DEL32 DEL41