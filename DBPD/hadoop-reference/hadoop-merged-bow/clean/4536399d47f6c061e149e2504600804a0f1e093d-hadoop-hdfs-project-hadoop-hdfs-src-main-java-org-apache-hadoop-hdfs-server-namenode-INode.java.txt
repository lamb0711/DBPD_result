HDFS-8357. Consolidate parameters of INode.CleanSubtree() into a parameter objects. Contributed by Li Lu.

-   * @param bsps
-   *          block storage policy suite to calculate intended storage type usage
+   * @param reclaimContext
+   *        Record blocks and inodes that need to be reclaimed.
-   *          The id of the snapshot to delete.
-   *          {@link Snapshot#CURRENT_STATE_ID} means to delete the current
-   *          file/directory.
+   *        The id of the snapshot to delete.
+   *        {@link Snapshot#CURRENT_STATE_ID} means to delete the current
+   *        file/directory.
-   *          The id of the latest snapshot before the to-be-deleted snapshot.
-   *          When deleting a current inode, this parameter captures the latest
-   *          snapshot.
-   * @param collectedBlocks
-   *          blocks collected from the descents for further block
-   *          deletion/update will be added to the given map.
-   * @param removedINodes
-   *          INodes collected from the descents for further cleaning up of
-   *          inodeMap
-   * @param removedUCFiles
-   *          INodes whose leases need to be released
+   *        The id of the latest snapshot before the to-be-deleted snapshot.
+   *        When deleting a current inode, this parameter captures the latest
+   *        snapshot.
-      final BlockStoragePolicySuite bsps, final int snapshotId,
-      int priorSnapshotId, BlocksMapUpdateInfo collectedBlocks,
-      List<INode> removedINodes, List<Long> removedUCFiles);
+      ReclaimContext reclaimContext, final int snapshotId, int priorSnapshotId);
-   * @param bsps
-   *          block storage policy suite to calculate intended storage type usage
-   *          This is needed because INodeReference#destroyAndCollectBlocks() needs
-   *          to call INode#cleanSubtree(), which calls INode#computeQuotaUsage().
-   * @param collectedBlocks
-   *          blocks collected from the descents for further block
-   *          deletion/update will be added to this map.
-   * @param removedINodes
-   *          INodes collected from the descents for further cleaning up of
-   *          inodeMap
-   * @param removedUCFiles
-   *          INodes whose leases need to be released
+   *
+   * @param reclaimContext
+   *        Record blocks and inodes that need to be reclaimed.
-  public abstract void destroyAndCollectBlocks(
-      BlockStoragePolicySuite bsps, BlocksMapUpdateInfo collectedBlocks,
-      List<INode> removedINodes, List<Long> removedUCFiles);
+  public abstract void destroyAndCollectBlocks(ReclaimContext reclaimContext);
-  
+
+  /**
+   * Context object to record blocks and inodes that need to be reclaimed
+   */
+  public static class ReclaimContext {
+    protected final BlockStoragePolicySuite bsps;
+    protected final BlocksMapUpdateInfo collectedBlocks;
+    protected final List<INode> removedINodes;
+    protected final List<Long> removedUCFiles;
+    /**
+     * @param bsps
+     *          block storage policy suite to calculate intended storage type
+     *          usage
+     * @param collectedBlocks
+     *          blocks collected from the descents for further block
+     *          deletion/update will be added to the given map.
+     * @param removedINodes
+ *          INodes collected from the descents for further cleaning up of
+     * @param removedUCFiles
+     *      files that the NN need to remove the leases
+     */
+    public ReclaimContext(
+        BlockStoragePolicySuite bsps, BlocksMapUpdateInfo collectedBlocks,
+        List<INode> removedINodes, List<Long> removedUCFiles) {
+      this.bsps = bsps;
+      this.collectedBlocks = collectedBlocks;
+      this.removedINodes = removedINodes;
+      this.removedUCFiles = removedUCFiles;
+    }
+
+    public BlockStoragePolicySuite storagePolicySuite() {
+      return bsps;
+    }
+
+    public BlocksMapUpdateInfo collectedBlocks() {
+      return collectedBlocks;
+    }
+  }
+

MOV44 INS31 INS55 MOV65 INS29 INS83 INS83 INS39 INS42 INS44 INS29 INS83 INS83 INS42 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS43 UPD42 MOV65 MOV65 INS43 INS42 INS65 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS83 INS74 INS59 INS83 INS83 INS74 INS59 INS29 MOV83 INS42 MOV44 MOV44 MOV44 MOV44 INS8 UPD83 MOV83 MOV43 INS42 INS8 INS83 INS43 UPD42 MOV42 INS8 UPD42 UPD66 UPD42 MOV42 UPD42 UPD66 INS42 INS66 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS43 INS43 INS42 MOV65 MOV65 MOV65 MOV65 INS21 INS21 INS21 INS21 INS41 INS42 INS41 INS42 INS42 INS42 INS42 UPD42 UPD66 UPD66 UPD66 INS7 INS7 INS7 INS7 INS42 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 DEL42 DEL66 DEL65 DEL42 DEL66 DEL66 DEL65 DEL43 DEL42 DEL43 DEL74 DEL83 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL66 DEL66 DEL29 DEL39 DEL31 DEL66