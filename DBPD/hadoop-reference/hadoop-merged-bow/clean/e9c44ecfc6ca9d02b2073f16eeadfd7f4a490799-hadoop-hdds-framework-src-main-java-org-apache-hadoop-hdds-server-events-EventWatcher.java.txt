HDDS-269. Refactor IdentifiableEventPayload to use a long ID. Contributed by Ajay Kumar.

-import java.util.UUID;
-  private final LeaseManager<UUID> leaseManager;
+  private final LeaseManager<Long> leaseManager;
-  protected final Map<UUID, TIMEOUT_PAYLOAD> trackedEventsByUUID =
+  protected final Map<Long, TIMEOUT_PAYLOAD> trackedEventsByID =
-  private final Map<UUID, Long> startTrackingTimes = new HashedMap();
+  private final Map<Long, Long> startTrackingTimes = new HashedMap();
-      LeaseManager<UUID> leaseManager) {
+      LeaseManager<Long> leaseManager) {
-      LeaseManager<UUID> leaseManager) {
+      LeaseManager<Long> leaseManager) {
-      UUID uuid = completionPayload.getUUID();
+      long id = completionPayload.getId();
-        handleCompletion(uuid, publisher);
+        handleCompletion(id, publisher);
-        LOG.warn("Completion event without active lease. UUID={}", uuid);
+        LOG.warn("Completion event without active lease. Id={}", id);
-    UUID identifier = payload.getUUID();
+    long identifier = payload.getId();
-    trackedEventsByUUID.put(identifier, payload);
+    trackedEventsByID.put(identifier, payload);
-      Lease<UUID> lease = leaseManager.acquire(identifier);
+      Lease<Long> lease = leaseManager.acquire(identifier);
-  private synchronized void handleCompletion(UUID uuid,
+  private synchronized void handleCompletion(long id,
-    leaseManager.release(uuid);
-    TIMEOUT_PAYLOAD payload = trackedEventsByUUID.remove(uuid);
+    leaseManager.release(id);
+    TIMEOUT_PAYLOAD payload = trackedEventsByID.remove(id);
-    long originalTime = startTrackingTimes.remove(uuid);
+    long originalTime = startTrackingTimes.remove(id);
-      UUID identifier) {
+      long identifier) {
-    TIMEOUT_PAYLOAD payload = trackedEventsByUUID.remove(identifier);
+    TIMEOUT_PAYLOAD payload = trackedEventsByID.remove(identifier);
-    startTrackingTimes.remove(payload.getUUID());
+    startTrackingTimes.remove(payload.getId());
-      leaseManager.release(payload.getUUID());
+      leaseManager.release(payload.getId());
-      LOG.warn("Completion event without active lease. UUID={}",
-          payload.getUUID());
+      LOG.warn("Completion event without active lease. Id={}",
+          payload.getId());
-    trackedEventsByUUID.remove(payload.getUUID());
+    trackedEventsByID.remove(payload.getId());
-    return trackedEventsByUUID.values().stream().filter(predicate)
+    return trackedEventsByID.values().stream().filter(predicate)

UPD74 UPD74 UPD74 UPD43 UPD43 UPD42 UPD43 UPD74 UPD74 INS39 UPD42 INS39 UPD42 UPD42 UPD42 UPD43 UPD43 INS39 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD74 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 INS39 UPD42 UPD42 UPD45 UPD42 UPD42 UPD42 UPD42 UPD42 UPD45 UPD42 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43