HADOOP-14251. Credential provider should handle property key deprecation. Contributed by John Zhuge.

+    private final String getWarningMessage(String key) {
+      return getWarningMessage(key, null);
+    }
+
+     * @param source the property source.
-    private final String getWarningMessage(String key) {
+    private String getWarningMessage(String key, String source) {
-        String deprecatedKeySuffix = " is deprecated. Instead, use ";
-        message.append(deprecatedKeySuffix);
+        if (source != null) {
+          message.append(" in " + source);
+        }
+        message.append(" is deprecated. Instead, use ");
+  private static String getDeprecatedKey(String key) {
+    return deprecationContext.get().getReverseDeprecatedKeyMap().get(key);
+  }
+
+  private static DeprecatedKeyInfo getDeprecatedKeyInfo(String key) {
+    return deprecationContext.get().getDeprecatedKeyMap().get(key);
+  }
+
+  void logDeprecationOnce(String name, String source) {
+    DeprecatedKeyInfo keyInfo = getDeprecatedKeyInfo(name);
+    if (keyInfo != null && !keyInfo.getAndSetAccessed()) {
+      LOG_DEPRECATION.info(keyInfo.getWarningMessage(name, source));
+    }
+  }
+
+   * Get the credential entry by name from a credential provider.
+   *
+   * Handle key deprecation.
+   *
+   * @param provider a credential provider
+   * @param name alias of the credential
+   * @return the credential entry or null if not found
+   */
+  private CredentialEntry getCredentialEntry(CredentialProvider provider,
+                                             String name) throws IOException {
+    CredentialEntry entry = provider.getCredentialEntry(name);
+    if (entry != null) {
+      return entry;
+    }
+
+    // The old name is stored in the credential provider.
+    String oldName = getDeprecatedKey(name);
+    if (oldName != null) {
+      entry = provider.getCredentialEntry(oldName);
+      if (entry != null) {
+        logDeprecationOnce(oldName, provider.toString());
+        return entry;
+      }
+    }
+
+    // The name is deprecated.
+    DeprecatedKeyInfo keyInfo = getDeprecatedKeyInfo(name);
+    if (keyInfo != null && keyInfo.newKeys != null) {
+      for (String newName : keyInfo.newKeys) {
+        entry = provider.getCredentialEntry(newName);
+        if (entry != null) {
+          logDeprecationOnce(name, null);
+          return entry;
+        }
+      }
+    }
+
+    return null;
+  }
+
+  /**
-            CredentialEntry entry = provider.getCredentialEntry(name);
+            CredentialEntry entry = getCredentialEntry(provider, name);

INS31 INS31 INS31 INS31 INS31 INS83 INS83 INS43 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS39 INS42 INS44 INS44 INS8 INS29 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS83 INS83 INS43 INS42 INS44 INS8 INS44 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS41 INS43 INS42 INS43 INS42 INS60 INS25 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS42 MOV60 INS25 INS60 INS25 INS60 INS25 INS41 INS42 INS43 INS42 INS41 INS65 MOV43 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS43 INS59 INS27 INS8 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS27 INS8 INS43 INS59 INS27 INS8 INS43 INS59 INS27 INS8 INS33 INS42 INS32 INS42 INS66 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS27 INS38 INS21 INS42 INS33 INS41 INS42 INS42 INS32 INS42 INS33 INS21 INS25 INS42 INS42 INS32 INS27 INS27 INS70 INS42 INS42 INS33 INS25 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS33 INS32 INS32 INS42 INS42 INS42 INS7 INS27 INS8 INS42 INS42 INS42 INS33 INS40 INS33 INS44 INS40 INS8 INS27 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS33 INS21 INS41 INS43 INS42 INS21 INS25 INS42 INS33 INS21 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS7 INS27 INS8 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS33 INS21 INS41 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS45 INS42 INS42 INS42 INS33 INS60 INS43 INS59 INS42 INS42 INS32 INS42 INS42 INS42 DEL83 DEL42 DEL45 DEL59 DEL60 DEL42