YARN-6394. Support specifying YARN related params in the service REST API. Contributed by Jian He

-import org.apache.hadoop.yarn.api.records.ContainerState;
-import org.apache.hadoop.yarn.service.api.records.Service;
-import org.apache.hadoop.yarn.service.api.records.Component;
-import org.apache.hadoop.yarn.service.api.records.ConfigFile;
-import org.apache.hadoop.yarn.service.api.records.Configuration;
-import org.apache.hadoop.yarn.service.api.records.Container;
-import org.apache.hadoop.yarn.service.api.records.ServiceState;
+import org.apache.hadoop.yarn.service.api.records.*;
+import static org.apache.hadoop.yarn.service.api.records.ContainerState.READY;
+import static org.apache.hadoop.yarn.service.api.records.ContainerState.STOPPED;
-    // publish user conf
-    publishUserConf(service.getConfiguration(), service.getId(),
+    // publish container conf
+    publishContainerConf(service.getConfiguration(), service.getId(),
-      int exitCode, ContainerState state, String diagnostics) {
+      int exitCode, String diagnostics) {
-    entityInfos.put(ServiceTimelineMetricsConstants.STATE, state);
+    entityInfos.put(ServiceTimelineMetricsConstants.STATE, STOPPED);
-  public void componentInstanceUpdated(Container container) {
+  public void componentInstanceIPHostUpdated(Container container) {
-    updateEvent
-        .setId(ServiceTimelineEvent.COMPONENT_INSTANCE_UPDATED.toString());
+    updateEvent.setId(ServiceTimelineEvent.COMPONENT_INSTANCE_IP_HOST_UPDATE
+        .toString());
+  public void componentInstanceBecomeReady(Container container) {
+    TimelineEntity entity = createComponentInstanceEntity(container.getId());
+    Map<String, Object> entityInfo = new HashMap<>();
+    entityInfo.put(ServiceTimelineMetricsConstants.STATE, READY);
+    entity.addInfo(entityInfo);
+    TimelineEvent updateEvent = new TimelineEvent();
+    updateEvent.setId(ServiceTimelineEvent.COMPONENT_INSTANCE_BECOME_READY
+        .toString());
+    updateEvent.setTimestamp(System.currentTimeMillis());
+    entity.addEvent(updateEvent);
+    putEntity(entity);
+  }
+
-      // publish component specific configurations
-      publishUserConf(component.getConfiguration(), component.getName(),
+      // publish container specific configurations
+      publishContainerConf(component.getConfiguration(), component.getName(),
-  private void publishUserConf(Configuration configuration,
+  private void publishContainerConf(Configuration configuration,
-    populateTimelineEntity(configuration.getProperties().entrySet().iterator(),
-        entityId, entityType);
-
-      populateTimelineEntity(configFile.getProps().entrySet().iterator(),
+      populateTimelineEntity(configFile.getProperties().entrySet().iterator(),

MOV26 MOV26 UPD40 UPD40 UPD40 INS31 UPD42 INS83 INS39 INS42 INS44 INS8 UPD42 INS43 INS42 INS60 INS60 INS21 INS21 INS60 INS21 INS21 INS21 INS21 INS42 INS43 INS59 INS74 INS59 INS32 INS32 INS43 INS59 INS32 INS32 INS32 INS32 UPD42 UPD42 INS42 INS42 INS32 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 UPD40 INS42 INS32 INS42 INS42 INS42 INS74 INS43 INS40 INS42 INS42 INS42 INS42 INS42 INS43 INS42 UPD42 INS42 UPD42 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21