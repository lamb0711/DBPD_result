YARN-9562. Add Java changes for the new RuncContainerRuntime. Contributed by Eric Badger

+import org.apache.hadoop.yarn.api.records.LocalResource;
+import java.io.IOException;
+  private RuncContainerRuntime runcContainerRuntime;
+        LinuxContainerRuntimeConstants.RuntimeType.RUNC.name())) {
+      runcContainerRuntime = new RuncContainerRuntime(
+          PrivilegedOperationExecutor.getInstance(conf));
+      runcContainerRuntime.initialize(conf, nmContext);
+    }
+    if (isRuntimeAllowed(
+    } else if (runcContainerRuntime != null &&
+        runcContainerRuntime.isRuntimeRequested(environment)) {
+      runtime = runcContainerRuntime;
+
+
+  @Override
+  public Map<String, LocalResource> getLocalResources(Container container)
+      throws IOException {
+    try {
+      LinuxContainerRuntime runtime = pickContainerRuntime(container);
+      return runtime.getLocalResources(container);
+    } catch (ContainerExecutionException e) {
+      throw new IOException(e);
+    }
+  }
+
+  @Override
+  public void start() {
+    if (isRuntimeAllowed(
+        LinuxContainerRuntimeConstants.RuntimeType.JAVASANDBOX.name())) {
+      javaSandboxLinuxContainerRuntime.start();
+    }
+    if (isRuntimeAllowed(
+        LinuxContainerRuntimeConstants.RuntimeType.DOCKER.name())) {
+      dockerLinuxContainerRuntime.start();
+    }
+    if (isRuntimeAllowed(
+        LinuxContainerRuntimeConstants.RuntimeType.RUNC.name())) {
+      runcContainerRuntime.start();
+    }
+    if (isRuntimeAllowed(
+        LinuxContainerRuntimeConstants.RuntimeType.DEFAULT.name())) {
+      defaultLinuxContainerRuntime.start();
+    }
+
+  }
+
+  @Override
+  public void stop() {
+    if (isRuntimeAllowed(
+        LinuxContainerRuntimeConstants.RuntimeType.JAVASANDBOX.name())) {
+      javaSandboxLinuxContainerRuntime.stop();
+    }
+    if (isRuntimeAllowed(
+        LinuxContainerRuntimeConstants.RuntimeType.DOCKER.name())) {
+      dockerLinuxContainerRuntime.stop();
+    }
+    if (isRuntimeAllowed(
+        LinuxContainerRuntimeConstants.RuntimeType.RUNC.name())) {
+      runcContainerRuntime.stop();
+    }
+    if (isRuntimeAllowed(
+        LinuxContainerRuntimeConstants.RuntimeType.DEFAULT.name())) {
+      defaultLinuxContainerRuntime.stop();
+    }
+
+  }
+

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS31 INS83 INS43 INS59 INS78 INS83 INS74 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS42 INS42 INS25 INS42 INS43 INS43 INS43 INS43 INS42 INS42 INS54 INS42 INS25 INS25 INS25 INS25 INS42 INS25 INS25 INS25 INS25 INS32 INS8 INS42 INS42 INS42 INS42 INS8 INS12 INS32 INS8 INS32 INS8 INS32 INS8 INS32 INS8 INS32 INS8 INS32 INS8 INS32 INS8 INS32 INS8 INS42 INS32 INS21 INS21 INS25 INS60 INS41 INS44 INS8 INS42 INS32 INS21 INS42 INS32 INS21 INS42 INS32 INS21 INS42 INS32 INS21 INS42 INS32 INS21 INS42 INS32 INS21 INS42 INS32 INS21 INS42 INS32 INS21 INS40 INS42 INS7 INS32 INS27 INS8 MOV8 INS43 INS59 INS32 INS43 INS42 INS53 INS40 INS42 INS32 INS40 INS42 INS32 INS40 INS42 INS32 INS40 INS42 INS32 INS40 INS42 INS32 INS40 INS42 INS32 INS40 INS42 INS32 INS40 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS42 INS27 INS32 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS42 INS33 INS42 INS42 INS42 INS7 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42