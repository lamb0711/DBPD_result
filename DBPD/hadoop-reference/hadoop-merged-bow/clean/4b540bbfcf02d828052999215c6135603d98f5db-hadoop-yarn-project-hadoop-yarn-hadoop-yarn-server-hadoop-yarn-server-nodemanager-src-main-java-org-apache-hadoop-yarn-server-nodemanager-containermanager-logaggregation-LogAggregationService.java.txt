YARN-8418. App local logs could leaked if log aggregation fails to initialize for the app. (Bibin A Chundatt via wangda)

Change-Id: I29a23ca4b219b48c92e7975cd44cddb8b0e04104

+import java.util.Set;
+
+import org.apache.hadoop.security.token.SecretManager;
+
+
+  // Holds applications whose aggregation is disable due to invalid Token
+  private final Set<ApplicationId> invalidTokenApps;
+
+    this.invalidTokenApps = ConcurrentHashMap.newKeySet();
-    LogAggregationFileController logAggregationFileController
-        = getLogAggregationFileController(getConfig());
+    LogAggregationFileController logAggregationFileController =
+        getLogAggregationFileController(getConfig());
+
+      // add to disabled aggregators if due to InvalidToken
+      if (e.getCause() instanceof SecretManager.InvalidToken) {
+        invalidTokenApps.add(appId);
+      }
-      appLogAggregators.remove(appId);
-      closeFileSystems(userUgi);
-      throw appDirException;
+
+    if (appDirException != null) {
+      throw appDirException;
+    }
-
-    AppLogAggregator aggregator = this.appLogAggregators.get(appId);
-    if (aggregator == null) {
-      LOG.warn("Log aggregation is not initialized for " + appId
-          + ", did it fail to start?");
-      this.dispatcher.getEventHandler().handle(
-          new ApplicationEvent(appId,
-              ApplicationEventType.APPLICATION_LOG_HANDLING_FAILED));
-      return;
+    try {
+      AppLogAggregator aggregator = this.appLogAggregators.get(appId);
+      if (aggregator == null) {
+        LOG.warn("Log aggregation is not initialized for " + appId
+            + ", did it fail to start?");
+        this.dispatcher.getEventHandler().handle(new ApplicationEvent(appId,
+            ApplicationEventType.APPLICATION_LOG_HANDLING_FAILED));
+        return;
+      }
+      aggregator.finishLogAggregation();
+    } finally {
+      // Remove invalid Token Apps
+      invalidTokenApps.remove(appId);
-    aggregator.finishLogAggregation();
+      case LOG_AGG_TOKEN_UPDATE:
+        checkAndEnableAppAggregators();
+        break;
+  private void checkAndEnableAppAggregators() {
+    for (ApplicationId appId : invalidTokenApps) {
+      try {
+        AppLogAggregator aggregator = appLogAggregators.get(appId);
+        if (aggregator != null) {
+          Credentials credentials =
+              context.getSystemCredentialsForApps().get(appId);
+          if (credentials != null) {
+            // Create the app dir again with
+            LogAggregationFileController logAggregationFileController =
+                getLogAggregationFileController(getConfig());
+            UserGroupInformation userUgi =
+                aggregator.updateCredentials(credentials);
+            logAggregationFileController
+                .createAppDir(userUgi.getShortUserName(), appId, userUgi);
+            aggregator.enableLogAggregation();
+          }
+          invalidTokenApps.remove(appId);
+          LOG.info("LogAggregation enabled for application {}", appId);
+        }
+      } catch (Exception e) {
+        //Ignore exception
+        LOG.warn("Enable aggregators failed {}", appId);
+      }
+    }
+  }
+
+  @Override
+  public Set<ApplicationId> getInvalidTokenApps() {
+    return invalidTokenApps;
+  }
+

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS83 INS83 INS74 INS59 INS8 INS83 INS39 INS42 INS8 INS78 INS83 INS74 INS42 INS8 INS43 INS43 INS42 INS21 INS25 INS54 INS70 INS42 INS43 INS43 INS41 INS42 INS42 INS7 INS27 INS8 MOV8 INS8 INS21 INS10 INS49 INS44 INS42 INS8 INS42 INS42 INS42 INS22 INS32 INS42 INS33 MOV53 INS21 INS42 INS32 INS43 INS42 INS54 INS52 INS42 INS42 INS42 INS25 INS32 INS42 INS42 INS8 INS12 INS62 INS8 INS42 INS42 INS42 INS60 INS25 INS44 INS8 INS32 INS43 MOV21 INS43 INS59 INS27 INS8 INS43 INS42 INS21 UPD42 MOV42 UPD42 MOV42 INS40 INS42 INS42 INS32 INS42 INS33 INS60 INS25 INS21 INS21 INS42 INS32 UPD42 UPD42 INS42 INS42 INS42 INS42 INS43 INS59 INS27 INS8 INS32 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS42 INS33 INS60 INS60 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS32 INS42 INS42 INS43 INS59 INS43 INS59 INS32 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL32 DEL21