YARN-2394. FairScheduler: Configure fairSharePreemptionThreshold per queue. (Wei Yan via kasha)

+import com.google.common.annotations.VisibleForTesting;
-  private long lastTimeAtHalfFairShare;
+  private long lastTimeAtFairShareThreshold;
-    this.lastTimeAtHalfFairShare = scheduler.getClock().getTime();
+    this.lastTimeAtFairShareThreshold = scheduler.getClock().getTime();
-  public void setLastTimeAtMinShare(long lastTimeAtMinShare) {
+  private void setLastTimeAtMinShare(long lastTimeAtMinShare) {
-  public long getLastTimeAtHalfFairShare() {
-    return lastTimeAtHalfFairShare;
+  public long getLastTimeAtFairShareThreshold() {
+    return lastTimeAtFairShareThreshold;
-  public void setLastTimeAtHalfFairShare(long lastTimeAtHalfFairShare) {
-    this.lastTimeAtHalfFairShare = lastTimeAtHalfFairShare;
+  private void setLastTimeAtFairShareThreshold(
+      long lastTimeAtFairShareThreshold) {
+    this.lastTimeAtFairShareThreshold = lastTimeAtFairShareThreshold;
+   * Update the preemption fields for the queue, i.e. the times since last was
+   * at its guaranteed share and over its fair share threshold.
+   */
+  public void updateStarvationStats() {
+    long now = scheduler.getClock().getTime();
+    if (!isStarvedForMinShare()) {
+      setLastTimeAtMinShare(now);
+    }
+    if (!isStarvedForFairShare()) {
+      setLastTimeAtFairShareThreshold(now);
+    }
+  }
+
+  /**
+
+  /**
+   * Is a queue being starved for its min share.
+   */
+  @VisibleForTesting
+  boolean isStarvedForMinShare() {
+    return isStarved(getMinShare());
+  }
+
+  /**
+   * Is a queue being starved for its fair share threshold.
+   */
+  @VisibleForTesting
+  boolean isStarvedForFairShare() {
+    return isStarved(
+        Resources.multiply(getFairShare(), getFairSharePreemptionThreshold()));
+  }
+
+  private boolean isStarved(Resource share) {
+    Resource desiredShare = Resources.min(FairScheduler.getResourceCalculator(),
+        scheduler.getClusterResource(), share, getDemand());
+    return Resources.lessThan(FairScheduler.getResourceCalculator(),
+        scheduler.getClusterResource(), getResourceUsage(), desiredShare);
+  }

INS26 INS40 INS31 INS31 INS31 INS31 UPD83 UPD42 UPD83 UPD42 INS29 INS83 INS39 INS42 INS8 INS29 INS78 INS39 INS42 INS8 INS29 INS78 INS39 INS42 INS8 INS83 INS39 INS42 INS44 INS8 UPD42 UPD42 INS65 INS60 INS25 INS25 INS65 INS42 INS41 INS65 INS42 INS41 INS43 INS42 INS60 INS41 UPD42 INS66 INS66 INS39 INS59 INS38 INS8 INS38 INS8 INS66 INS32 INS66 INS32 INS42 INS43 INS59 INS32 UPD42 INS42 INS32 INS32 INS21 INS32 INS21 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS32 INS42 UPD42 UPD42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42