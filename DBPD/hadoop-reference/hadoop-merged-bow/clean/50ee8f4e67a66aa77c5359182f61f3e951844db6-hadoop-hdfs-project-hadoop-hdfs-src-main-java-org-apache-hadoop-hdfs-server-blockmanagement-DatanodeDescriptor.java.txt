HDFS-7960. The full block report should prune zombie storages even if they're not empty. Contributed by Colin McCabe and Eddy Xu.

+import java.util.BitSet;
+import com.google.common.collect.ImmutableList;
+import org.apache.hadoop.hdfs.server.protocol.BlockReportContext;
-  
+
+  private long curBlockReportId = 0;
+
+  private BitSet curBlockReportRpcsSeen = null;
+
+  public int updateBlockReportContext(BlockReportContext context) {
+    if (curBlockReportId != context.getReportId()) {
+      curBlockReportId = context.getReportId();
+      curBlockReportRpcsSeen = new BitSet(context.getTotalRpcs());
+    }
+    curBlockReportRpcsSeen.set(context.getCurRpc());
+    return curBlockReportRpcsSeen.cardinality();
+  }
+
+  public void clearBlockReportContext() {
+    curBlockReportId = 0;
+    curBlockReportRpcsSeen = null;
+  }
+
+  static final private List<DatanodeStorageInfo> EMPTY_STORAGE_INFO_LIST =
+      ImmutableList.of();
+
+  List<DatanodeStorageInfo> removeZombieStorages() {
+    List<DatanodeStorageInfo> zombies = null;
+    synchronized (storageMap) {
+      Iterator<Map.Entry<String, DatanodeStorageInfo>> iter =
+          storageMap.entrySet().iterator();
+      while (iter.hasNext()) {
+        Map.Entry<String, DatanodeStorageInfo> entry = iter.next();
+        DatanodeStorageInfo storageInfo = entry.getValue();
+        if (storageInfo.getLastBlockReportId() != curBlockReportId) {
+          LOG.info(storageInfo.getStorageID() + " had lastBlockReportId 0x" +
+              Long.toHexString(storageInfo.getLastBlockReportId()) +
+              ", but curBlockReportId = 0x" +
+              Long.toHexString(curBlockReportId));
+          iter.remove();
+          if (zombies == null) {
+            zombies = new LinkedList<DatanodeStorageInfo>();
+          }
+          zombies.add(storageInfo);
+        }
+        storageInfo.setLastBlockReportId(0);
+      }
+    }
+    return zombies == null ? EMPTY_STORAGE_INFO_LIST : zombies;
+  }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS31 INS31 INS23 INS31 INS83 INS39 INS59 INS83 INS43 INS59 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS8 INS83 INS83 INS83 INS74 INS59 INS74 INS42 INS8 INS42 INS34 INS42 INS42 INS33 INS43 INS42 INS25 INS21 INS41 INS21 INS21 INS43 INS43 INS42 INS32 INS43 INS43 INS60 INS51 INS41 INS42 INS27 INS8 INS32 INS32 INS7 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS42 INS8 INS16 INS42 INS32 INS21 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS34 INS42 INS33 INS43 INS43 INS42 INS33 INS60 INS61 INS27 INS42 INS42 INS42 INS42 INS7 INS7 INS42 INS42 INS42 INS42 INS74 INS59 INS32 INS8 INS42 INS33 INS42 INS32 INS42 INS14 INS43 INS74 INS42 INS32 INS42 INS42 INS60 INS60 INS25 INS21 INS42 INS42 INS43 INS32 INS42 INS43 INS43 INS43 INS32 INS42 INS74 INS59 INS43 INS59 INS27 INS8 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS21 INS21 INS25 INS21 INS42 INS42 INS34 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS27 INS8 INS32 INS42 INS42 INS27 INS42 INS42 INS42 INS33 INS21 INS42 INS42 INS42 INS32 INS45 INS32 INS45 INS32 INS7 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS74 INS43 INS43 INS42 INS42