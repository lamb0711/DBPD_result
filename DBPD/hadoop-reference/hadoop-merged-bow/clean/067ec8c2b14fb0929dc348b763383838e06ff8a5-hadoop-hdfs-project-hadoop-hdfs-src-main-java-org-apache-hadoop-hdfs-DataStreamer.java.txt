HDFS-8838. Erasure Coding: Tolerate datanode failures in DFSStripedOutputStream when the data length is small. Contributed by Tsz Wo Nicholas Sze.

-  static class LastExceptionInStreamer {
+  class LastExceptionInStreamer {
-          LOG.trace("Got Exception while checking", new Throwable(thrown));
+          LOG.trace("Got Exception while checking, " + DataStreamer.this,
+              new Throwable(thrown));
+        if (LOG.isDebugEnabled()) {
+          LOG.debug("stage=" + stage + ", " + this);
+        }
-          if(LOG.isDebugEnabled()) {
-            LOG.debug("Allocating new block " + this);
-          }
-          if(LOG.isDebugEnabled()) {
-            LOG.debug("Append to block " + block);
-          }
-          LOG.debug("DataStreamer block " + block +
-              " sending packet " + one);
+          LOG.debug(this + " sending " + one);
-    return callUpdatePipeline(block, newBlock);
+    return callUpdatePipeline(block, newBlock, nodes, storageIDs);
-  ExtendedBlock callUpdatePipeline(ExtendedBlock oldBlock, ExtendedBlock newBlock)
+  ExtendedBlock callUpdatePipeline(ExtendedBlock oldBlock, ExtendedBlock newBlock,
+      DatanodeInfo[] newNodes, String[] newStorageIDs)
-        nodes, storageIDs);
+        newNodes, newStorageIDs);
+  int getNumBlockWriteRetry() {
+    return dfsClient.getConf().getNumBlockWriteRetry();
+  }
+
-    int count = dfsClient.getConf().getNumBlockWriteRetry();
+    int count = getNumBlockWriteRetry();
-      LOG.debug("pipeline = " + Arrays.asList(nodes));
+      LOG.debug("pipeline = " + Arrays.toString(nodes) + ", " + this);
-          LOG.info("Exception in createBlockOutputStream", ie);
+          LOG.info("Exception in createBlockOutputStream " + this, ie);
-  protected LocatedBlock locateFollowingBlock(DatanodeInfo[] excludedNodes)
+  LocatedBlock locateFollowingBlock(DatanodeInfo[] excludedNodes)
+  String[] getStorageIDs() {
+    return storageIDs;
+  }
+
-    return  (block == null? null: block.getLocalBlock())
-        + "@" + Arrays.toString(getNodes());
+    return block == null? "block==null": "" + block.getLocalBlock();

INS31 INS31 INS44 INS44 INS39 INS42 INS8 INS5 INS42 INS8 INS5 INS42 INS5 INS42 INS41 INS43 INS85 INS41 INS43 INS85 INS43 INS85 MOV32 INS42 INS42 MOV16 INS42 INS42 INS42 INS42 UPD42 UPD42 INS32 INS45 INS27 INS42 INS45 MOV32 INS25 MOV32 INS8 INS45 INS52 INS21 UPD42 INS27 INS32 INS45 INS52 INS42 INS42 INS27 INS42 INS45 INS42 INS45 INS52 INS52 UPD45 INS27 INS45 INS52 DEL83 DEL45 DEL42 DEL42 DEL45 DEL52 DEL27 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL8 DEL25 DEL45 DEL42 DEL45 DEL83 DEL33 DEL36 DEL45 DEL42 DEL42 DEL42 DEL32 DEL32 DEL27