HDFS-4465. Optimize datanode ReplicasMap and ReplicaInfo. Contributed by Aaron T. Myers.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1499659 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import com.google.common.annotations.VisibleForTesting;
+
+  
+  
-  private File dir;
+  
+  /**
+   * Base directory containing numerically-identified sub directories and
+   * possibly blocks.
+   */
+  private File baseDir;
+  
+  /**
+   * Ints representing the sub directory path from base dir to the directory
+   * containing this replica.
+   */
+  private int[] subDirs;
+  
+  private static final Map<String, File> internedBaseDirs = new HashMap<String, File>();
-    this.dir = dir;
+    setDirInternal(dir);
-    return dir;
+    if (subDirs == null) {
+      return null;
+    }
+
+    StringBuilder sb = new StringBuilder();
+    for (int i : subDirs) {
+      sb.append(DataStorage.BLOCK_SUBDIR_PREFIX);
+      sb.append(i);
+      sb.append("/");
+    }
+    File ret = new File(baseDir, sb.toString());
+    return ret;
-    this.dir = dir;
+    setDirInternal(dir);
+  }
+
+  private void setDirInternal(File dir) {
+    if (dir == null) {
+      subDirs = null;
+      baseDir = null;
+      return;
+    }
+
+    ReplicaDirInfo replicaDirInfo = parseSubDirs(dir);
+    this.subDirs = replicaDirInfo.subDirs;
+    
+    synchronized (internedBaseDirs) {
+      if (!internedBaseDirs.containsKey(replicaDirInfo.baseDirPath)) {
+        // Create a new String path of this file and make a brand new File object
+        // to guarantee we drop the reference to the underlying char[] storage.
+        File baseDir = new File(new String(replicaDirInfo.baseDirPath));
+        internedBaseDirs.put(replicaDirInfo.baseDirPath, baseDir);
+      }
+      this.baseDir = internedBaseDirs.get(replicaDirInfo.baseDirPath);
+    }
+  }
+  
+  @VisibleForTesting
+  public static class ReplicaDirInfo {
+    @VisibleForTesting
+    public String baseDirPath;
+    
+    @VisibleForTesting
+    public int[] subDirs;
+  }
+  
+  @VisibleForTesting
+  public static ReplicaDirInfo parseSubDirs(File dir) {
+    ReplicaDirInfo ret = new ReplicaDirInfo();
+    
+    File currentDir = dir;
+    List<Integer> subDirList = new ArrayList<Integer>();
+    while (currentDir.getName().startsWith(DataStorage.BLOCK_SUBDIR_PREFIX)) {
+      // Prepend the integer into the list.
+      subDirList.add(0, Integer.parseInt(currentDir.getName().replaceFirst(
+          DataStorage.BLOCK_SUBDIR_PREFIX, "")));
+      currentDir = currentDir.getParentFile();
+    }
+    ret.subDirs = new int[subDirList.size()];
+    for (int i = 0; i < subDirList.size(); i++) {
+      ret.subDirs[i] = subDirList.get(i);
+    }
+    
+    ret.baseDirPath = currentDir.getAbsolutePath();
+    
+    return ret;

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS31 INS55 INS31 INS29 INS83 INS5 INS59 INS83 INS83 INS83 INS74 INS59 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS83 INS42 INS23 INS23 INS78 INS83 INS83 INS43 INS42 INS44 INS8 UPD42 INS65 INS39 INS85 INS42 INS43 INS43 INS43 INS42 INS14 INS25 INS60 INS70 INS60 INS43 INS42 INS25 INS60 INS21 INS51 INS42 INS78 INS83 INS43 INS59 INS78 INS83 INS5 INS59 INS42 INS42 INS43 INS42 INS60 INS60 INS60 INS61 INS21 INS24 INS21 INS41 UPD66 INS66 INS66 INS66 INS42 INS42 INS42 INS74 INS32 INS27 INS8 INS43 INS59 INS44 INS42 INS8 INS43 INS59 UPD42 INS32 INS42 INS27 INS8 INS43 INS59 INS7 INS42 INS8 INS42 INS42 INS42 INS42 INS39 INS85 INS42 INS42 INS43 INS59 INS43 INS59 INS74 INS59 INS32 INS8 INS7 INS58 INS27 INS37 INS8 INS7 INS42 INS43 INS43 INS43 INS42 INS42 INS42 INS33 INS41 INS42 INS42 INS14 INS39 INS42 INS21 INS21 INS21 INS42 INS42 INS14 INS42 INS42 INS42 INS33 INS21 INS21 INS41 INS42 INS42 INS32 INS22 INS40 INS25 INS21 INS42 INS42 INS14 INS42 INS42 INS42 INS43 INS43 INS42 INS14 INS32 INS42 INS40 INS21 INS21 INS40 INS3 INS39 INS59 INS42 INS32 INS42 INS21 INS40 INS32 INS42 INS42 INS42 INS33 INS43 INS32 INS32 INS32 INS43 INS42 INS32 INS7 INS7 INS42 INS42 INS52 INS42 INS38 INS8 INS7 INS43 INS42 INS42 INS74 INS42 INS42 INS32 INS7 INS5 INS32 INS42 INS34 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS33 INS42 INS33 INS32 INS60 INS21 INS22 INS32 INS42 INS43 INS43 INS42 INS42 INS34 INS32 INS42 INS32 INS39 INS85 INS42 INS42 INS2 INS32 INS42 INS42 INS40 INS43 INS59 INS32 INS52 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS40 INS42 INS32 INS42 INS40 INS45 INS43 INS14 INS42 INS42 INS42 INS43 INS40 INS42 DEL52 DEL42 DEL22 DEL42 DEL7 DEL52 DEL42 DEL22 DEL42 DEL7