Merge commit '456e901a4c5c639267ee87b8e5f1319f256d20c2' (HDFS-6407. Add sorting and pagination in the datanode tab of the NN Web UI. Contributed by Haohui Mai.) into HDFS-7285-merge

-import io.netty.channel.ChannelFactory;
+import io.netty.channel.ChannelFactory;
+import org.apache.hadoop.hdfs.server.common.JspHelper;
+import org.apache.hadoop.hdfs.server.datanode.BlockScanner;
+import org.apache.hadoop.http.HttpServer2;
+import org.apache.hadoop.security.authorize.AccessControlList;
+import java.net.URI;
+import static org.apache.hadoop.hdfs.DFSConfigKeys.DFS_ADMIN;
+import static org.apache.hadoop.hdfs.DFSConfigKeys.DFS_DATANODE_HTTP_ADDRESS_KEY;
+  private final HttpServer2 infoServer;
-  public DatanodeHttpServer(final Configuration conf, final InetSocketAddress
-    jettyAddr, final ServerSocketChannel externalHttpChannel)
+  public DatanodeHttpServer(final Configuration conf,
+      final DataNode datanode,
+      final ServerSocketChannel externalHttpChannel)
+
+    Configuration confForInfoServer = new Configuration(conf);
+    confForInfoServer.setInt(HttpServer2.HTTP_MAX_THREADS, 10);
+    HttpServer2.Builder builder = new HttpServer2.Builder()
+        .setName("datanode")
+        .setConf(confForInfoServer)
+        .setACL(new AccessControlList(conf.get(DFS_ADMIN, " ")))
+        .hostName(getHostnameForSpnegoPrincipal(confForInfoServer))
+        .addEndpoint(URI.create("http://localhost:0"))
+        .setFindPort(true);
+
+    this.infoServer = builder.build();
+
+    this.infoServer.setAttribute("datanode", datanode);
+    this.infoServer.setAttribute(JspHelper.CURRENT_CONF, conf);
+    this.infoServer.addServlet(null, "/blockScannerReport",
+                               BlockScanner.Servlet.class);
+
+    this.infoServer.start();
+    final InetSocketAddress jettyAddr = infoServer.getConnectorAddress(0);
+
+    try {
+      infoServer.stop();
+    } catch (Exception e) {
+      throw new IOException(e);
+    }
-}
+
+  private static String getHostnameForSpnegoPrincipal(Configuration conf) {
+    String addr = conf.getTrimmed(DFS_DATANODE_HTTP_ADDRESS_KEY, null);
+    if (addr == null) {
+      addr = conf.getTrimmed(DFS_DATANODE_HTTPS_ADDRESS_KEY,
+                             DFS_DATANODE_HTTPS_ADDRESS_DEFAULT);
+    }
+    InetSocketAddress inetSocker = NetUtils.createSocketAddr(addr);
+    return inetSocker.getHostString();
+  }
+}

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS42 INS44 INS8 INS42 INS42 INS43 INS42 INS60 INS21 INS60 INS21 INS21 INS21 INS21 INS21 INS60 INS54 INS42 INS43 INS42 INS60 INS25 INS60 INS41 INS42 INS43 INS59 INS32 INS43 INS59 INS7 INS32 INS32 INS32 INS32 INS83 MOV43 INS59 INS8 INS12 INS42 INS43 INS59 INS27 INS8 INS43 INS59 INS32 INS42 INS42 INS14 INS42 INS42 INS40 INS34 INS40 INS42 INS32 INS22 INS32 INS22 INS42 INS45 INS42 INS22 INS42 INS40 INS42 INS22 INS42 INS33 INS45 INS57 INS22 INS42 INS42 INS32 INS21 INS44 INS8 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS42 INS43 INS42 INS32 INS42 INS9 INS52 INS42 INS42 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS43 INS52 INS42 INS42 INS42 INS34 INS32 INS43 INS42 INS53 INS42 INS42 INS42 INS33 INS7 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS40 INS42 INS42 INS42 INS14 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS45 INS43 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS32 INS14 INS42 INS45 INS42 INS42 INS42 INS42 INS45 INS43 INS40 DEL42