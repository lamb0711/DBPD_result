HADOOP-2081. Configuration getInt, getLong, and getFloat replace invalid numbers with the default value. Contributed by Harsh J


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1147971 13f79535-47bb-0310-9956-ffa450edef68

-   * If no such property exists, or if the specified value is not a valid
-   * <code>int</code>, then <code>defaultValue</code> is returned.
+   * If no such property exists, the provided default value is returned,
+   * or if the specified value is not a valid <code>int</code>,
+   * then an error is thrown.
+   * @throws NumberFormatException when the value is invalid
-    try {
-      String hexString = getHexDigits(valueString);
-      if (hexString != null) {
-        return Integer.parseInt(hexString, 16);
-      }
-      return Integer.parseInt(valueString);
-    } catch (NumberFormatException e) {
-      return defaultValue;
+    String hexString = getHexDigits(valueString);
+    if (hexString != null) {
+      return Integer.parseInt(hexString, 16);
+    return Integer.parseInt(valueString);
-   * If no such property is specified, or if the specified value is not a valid
-   * <code>long</code>, then <code>defaultValue</code> is returned.
+   * If no such property exists, the provided default value is returned,
+   * or if the specified value is not a valid <code>long</code>,
+   * then an error is thrown.
+   * @throws NumberFormatException when the value is invalid
-    try {
-      String hexString = getHexDigits(valueString);
-      if (hexString != null) {
-        return Long.parseLong(hexString, 16);
-      }
-      return Long.parseLong(valueString);
-    } catch (NumberFormatException e) {
-      return defaultValue;
+    String hexString = getHexDigits(valueString);
+    if (hexString != null) {
+      return Long.parseLong(hexString, 16);
+    return Long.parseLong(valueString);
-   * If no such property is specified, or if the specified value is not a valid
-   * <code>float</code>, then <code>defaultValue</code> is returned.
-   * 
+   * If no such property exists, the provided default value is returned,
+   * or if the specified value is not a valid <code>float</code>,
+   * then an error is thrown.
+   *
+   * @throws NumberFormatException when the value is invalid
-    try {
-      return Float.parseFloat(valueString);
-    } catch (NumberFormatException e) {
-      return defaultValue;
-    }
+    return Float.parseFloat(valueString);

MOV8 MOV8 INS65 MOV60 MOV25 INS65 MOV60 MOV25 INS65 MOV41 UPD66 UPD66 INS66 INS42 INS66 UPD66 UPD66 INS66 INS42 INS66 UPD66 UPD66 INS66 INS42 INS66 DEL42 DEL43 DEL42 DEL44 DEL42 DEL41 DEL8 DEL12 DEL54 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL41 DEL8 DEL12 DEL54 DEL8 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL41 DEL8 DEL12 DEL54