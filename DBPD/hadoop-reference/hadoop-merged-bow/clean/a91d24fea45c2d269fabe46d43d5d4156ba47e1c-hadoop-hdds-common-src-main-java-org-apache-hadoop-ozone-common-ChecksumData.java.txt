HDDS-1496. Support partial chunk reads and checksum verification (#804)


-   * Verify that this ChecksumData matches with the input ChecksumData.
+   * Verify that this ChecksumData from startIndex to endIndex matches with the
+   * provided ChecksumData.
+   * The checksum at startIndex of this ChecksumData will be matched with the
+   * checksum at index 0 of the provided ChecksumData, and checksum at
+   * (startIndex + 1) of this ChecksumData with checksum at index 1 of
+   * provided ChecksumData and so on.
+   * @param startIndex index of the first checksum from this ChecksumData
+   *                   which will be used to compare checksums
-  public boolean verifyChecksumDataMatches(ChecksumData that) throws
-      OzoneChecksumException {
+  public boolean verifyChecksumDataMatches(ChecksumData that, int startIndex)
+      throws OzoneChecksumException {
-    if (this.checksums.size() != that.checksums.size()) {
-      throw new OzoneChecksumException("Original and Computed checksumData's " +
-          "has different number of checksums");
-    }
+    int numChecksums = that.checksums.size();
-    // Verify that checksum matches at each index
-    for (int index = 0; index < this.checksums.size(); index++) {
-      if (!matchChecksumAtIndex(this.checksums.get(index),
-          that.checksums.get(index))) {
-        // checksum mismatch. throw exception.
-        throw new OzoneChecksumException(index);
+    try {
+      // Verify that checksum matches at each index
+      for (int index = 0; index < numChecksums; index++) {
+        if (!matchChecksumAtIndex(this.checksums.get(startIndex + index),
+            that.checksums.get(index))) {
+          // checksum mismatch. throw exception.
+          throw new OzoneChecksumException(index);
+        }
+    } catch (ArrayIndexOutOfBoundsException e) {
+      throw new OzoneChecksumException("Computed checksum has "
+          + numChecksums + " number of checksums. Original checksum has " +
+          (this.checksums.size() - startIndex) + " number of checksums " +
+          "starting from index " + startIndex);

INS44 INS65 INS39 INS42 INS60 INS54 UPD66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS39 INS59 INS8 INS12 INS42 MOV32 MOV24 INS44 INS8 INS43 INS42 MOV53 INS42 INS42 UPD45 INS42 INS45 INS36 UPD45 INS45 INS42 UPD27 MOV27 INS27 INS42 INS42 INS42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL42 DEL8 DEL25