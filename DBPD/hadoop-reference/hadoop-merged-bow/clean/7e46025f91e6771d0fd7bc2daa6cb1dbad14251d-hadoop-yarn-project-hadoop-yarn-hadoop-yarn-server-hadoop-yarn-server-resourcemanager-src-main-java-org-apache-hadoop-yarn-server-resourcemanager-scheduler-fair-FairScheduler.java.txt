Merge r1537584 through r1538407 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1538408 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.api.records.ApplicationResourceUsageReport;
+  private Comparator nodeAvailableResourceComparator =
+          new NodeAvailableResourceComparator(); // Node available resource comparator
-      for (FSSchedulerNode node : nodes.values()) {
-        try {
-          if (Resources.fitsIn(minimumAllocation, node.getAvailableResource())) {
-            attemptScheduling(node);
+      List<NodeId> nodeIdList = new ArrayList<NodeId>(nodes.keySet());
+      Collections.sort(nodeIdList, nodeAvailableResourceComparator);
+
+      // iterate all nodes
+      for (NodeId nodeId : nodeIdList) {
+        if (nodes.containsKey(nodeId)) {
+          FSSchedulerNode node = nodes.get(nodeId);
+          try {
+            if (Resources.fitsIn(minimumAllocation,
+                    node.getAvailableResource())) {
+              attemptScheduling(node);
+            }
+          } catch (Throwable ex) {
+            LOG.warn("Error while attempting scheduling for node " + node +
+                    ": " + ex.toString(), ex);
-        } catch (Throwable ex) {
-          LOG.warn("Error while attempting scheduling for node " + node + ": " +
-                  ex.toString(), ex);
+
+  /** Sort nodes by available resource */
+  private class NodeAvailableResourceComparator implements Comparator<NodeId> {
+
+    @Override
+    public int compare(NodeId n1, NodeId n2) {
+      return RESOURCE_CALCULATOR.compare(clusterCapacity,
+              nodes.get(n2).getAvailableResource(),
+              nodes.get(n1).getAvailableResource());
+    }
+  }
+  @Override
+  public ApplicationResourceUsageReport getAppResourceUsageReport(
+      ApplicationAttemptId appAttemptId) {
+    FSSchedulerApp app = applications.get(appAttemptId);
+    if (app == null) {
+      LOG.error("Request for appInfo of unknown attempt" + appAttemptId);
+      return null;
+    }
+    return app.getResourceUsageReport();
+  }
+  

INS26 INS40 INS23 INS55 INS31 INS83 INS43 INS59 INS29 INS83 INS42 INS74 INS31 INS78 INS83 INS43 INS42 INS44 INS8 INS42 INS42 INS14 INS65 INS43 INS43 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS42 INS43 INS42 INS60 INS25 INS41 INS43 INS66 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS41 INS42 INS43 INS59 INS27 INS8 INS32 INS42 INS60 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS41 INS42 INS42 INS74 INS59 INS32 INS42 INS8 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS32 INS33 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS42 INS43 UPD42 INS25 INS32 INS42 INS32 INS42 INS42 INS42 INS27 INS42 INS42 INS74 INS32 INS42 INS32 MOV8 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS43 INS43 INS42 INS42 MOV42 UPD42 MOV42 INS42 INS60 INS42 INS42 MOV43 INS59 INS42 INS32 INS42 INS42 INS42 DEL32