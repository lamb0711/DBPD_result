Merge r1555021 through r1561510 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1561516 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.Flushable;
+import java.util.concurrent.Executors;
+import java.util.concurrent.ScheduledExecutorService;
+import java.util.concurrent.ThreadFactory;
+import java.util.concurrent.TimeUnit;
+import org.apache.hadoop.util.StringUtils;
+import org.apache.hadoop.util.ShutdownHookManager;
-  
+
+  public static synchronized void syncLogsShutdown(
+    ScheduledExecutorService scheduler) 
+  {
+    // flush standard streams
+    //
+    System.out.flush();
+    System.err.flush();
+
+    if (scheduler != null) {
+      scheduler.shutdownNow();
+    }
+
+    // flush & close all appenders
+    LogManager.shutdown(); 
+  }
+
+  @SuppressWarnings("unchecked")
+  public static synchronized void syncLogs() {
+    // flush standard streams
+    //
+    System.out.flush();
+    System.err.flush();
+
+    // flush flushable appenders
+    //
+    final Logger rootLogger = Logger.getRootLogger();
+    flushAppenders(rootLogger);
+    final Enumeration<Logger> allLoggers = rootLogger.getLoggerRepository().
+      getCurrentLoggers();
+    while (allLoggers.hasMoreElements()) {
+      final Logger l = allLoggers.nextElement();
+      flushAppenders(l);
+    }
+  }
+
+  @SuppressWarnings("unchecked")
+  private static void flushAppenders(Logger l) {
+    final Enumeration<Appender> allAppenders = l.getAllAppenders();
+    while (allAppenders.hasMoreElements()) {
+      final Appender a = allAppenders.nextElement();
+      if (a instanceof Flushable) {
+        try {
+          ((Flushable) a).flush();
+        } catch (IOException ioe) {
+          System.err.println(a + ": Failed to flush!"
+            + StringUtils.stringifyException(ioe));
+        }
+      }
+    }
+  }
+
+  public static ScheduledExecutorService createLogSyncer() {
+    final ScheduledExecutorService scheduler =
+      Executors.newSingleThreadScheduledExecutor(
+        new ThreadFactory() {
+          @Override
+          public Thread newThread(Runnable r) {
+            final Thread t = Executors.defaultThreadFactory().newThread(r);
+            t.setDaemon(true);
+            t.setName("Thread for syncLogs");
+            return t;
+          }
+        });
+    ShutdownHookManager.get().addShutdownHook(new Runnable() {
+        @Override
+        public void run() {
+          TaskLog.syncLogsShutdown(scheduler);
+        }
+      }, 50);
+    scheduler.scheduleWithFixedDelay(
+        new Runnable() {
+          @Override
+          public void run() {
+            TaskLog.syncLogs();
+          }
+        }, 0L, 5L, TimeUnit.SECONDS);
+    return scheduler;
+  }
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS83 INS83 INS83 INS39 INS42 INS44 INS8 INS79 INS83 INS83 INS83 INS39 INS42 INS8 INS79 INS83 INS83 INS39 INS42 INS44 INS8 INS83 INS83 INS43 INS42 INS8 INS43 INS42 INS21 INS21 INS25 INS21 INS42 INS45 INS21 INS21 INS60 INS21 INS60 INS61 INS42 INS45 INS43 INS42 INS60 INS61 INS42 INS60 INS21 INS21 INS41 INS42 INS32 INS32 INS27 INS8 INS32 INS32 INS32 INS83 INS43 INS59 INS32 INS83 INS74 INS59 INS32 INS8 INS42 INS83 INS74 INS59 INS32 INS8 INS83 INS43 INS59 INS32 INS32 INS42 INS40 INS42 INS40 INS42 INS42 INS33 INS21 INS42 INS42 INS40 INS42 INS40 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS60 INS21 INS43 INS43 INS42 INS32 INS42 INS42 INS60 INS25 INS42 INS42 INS32 INS32 INS42 INS14 INS34 INS42 INS42 INS14 INS34 INS34 INS40 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS83 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS83 INS43 INS59 INS62 INS8 INS42 INS42 INS14 INS42 INS42 INS43 INS1 INS43 INS1 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS54 INS43 INS1 INS42 INS31 INS42 INS31 INS42 INS42 INS42 INS42 INS42 INS8 INS12 INS42 INS31 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS8 INS21 INS44 INS8 INS78 INS83 INS43 INS42 INS44 INS8 INS42 INS21 INS42 INS21 INS32 INS43 INS42 INS21 INS42 INS42 INS43 INS42 INS60 INS21 INS21 INS41 INS32 INS32 INS36 INS42 INS42 INS32 INS42 INS83 INS43 INS59 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS11 INS40 INS42 INS27 INS42 INS42 INS32 INS42 INS42 INS9 INS42 INS42 INS45 INS43 INS42 INS42 INS45 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42