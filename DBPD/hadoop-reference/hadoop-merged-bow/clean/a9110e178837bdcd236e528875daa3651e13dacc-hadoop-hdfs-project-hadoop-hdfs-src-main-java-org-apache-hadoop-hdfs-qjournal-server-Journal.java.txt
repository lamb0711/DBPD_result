Merge r1555021 through r1561510 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1561516 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.qjournal.protocol.QJournalProtocolProtos;
+import org.apache.hadoop.hdfs.server.common.StorageInfo;
-class Journal implements Closeable {
+public class Journal implements Closeable {
-  private static final String LAST_PROMISED_FILENAME = "last-promised-epoch";
-  private static final String LAST_WRITER_EPOCH = "last-writer-epoch";
+  public static final String LAST_PROMISED_FILENAME = "last-promised-epoch";
+  public static final String LAST_WRITER_EPOCH = "last-writer-epoch";
-   * @see QJournalProtocol#getEditLogManifest(String, long)
+   * @see QJournalProtocol#getEditLogManifest(String, long, boolean)
-   * @see QJournalProtocol#acceptRecovery(RequestInfo, SegmentStateProto, URL)
+   * @see QJournalProtocol#acceptRecovery(RequestInfo, QJournalProtocolProtos.SegmentStateProto, URL)
+
+  public synchronized void doPreUpgrade() throws IOException {
+    storage.getJournalManager().doPreUpgrade();
+  }
+
+  public synchronized void doUpgrade(StorageInfo sInfo) throws IOException {
+    long oldCTime = storage.getCTime();
+    storage.cTime = sInfo.cTime;
+    int oldLV = storage.getLayoutVersion();
+    storage.layoutVersion = sInfo.layoutVersion;
+    LOG.info("Starting upgrade of edits directory: "
+        + ".\n   old LV = " + oldLV
+        + "; old CTime = " + oldCTime
+        + ".\n   new LV = " + storage.getLayoutVersion()
+        + "; new CTime = " + storage.getCTime());
+    storage.getJournalManager().doUpgrade(storage);
+    storage.createPaxosDir();
+    
+    // Copy over the contents of the epoch data files to the new dir.
+    File currentDir = storage.getSingularStorageDir().getCurrentDir();
+    File previousDir = storage.getSingularStorageDir().getPreviousDir();
+    
+    PersistentLongFile prevLastPromisedEpoch = new PersistentLongFile(
+        new File(previousDir, LAST_PROMISED_FILENAME), 0);
+    PersistentLongFile prevLastWriterEpoch = new PersistentLongFile(
+        new File(previousDir, LAST_WRITER_EPOCH), 0);
+    
+    lastPromisedEpoch = new PersistentLongFile(
+        new File(currentDir, LAST_PROMISED_FILENAME), 0);
+    lastWriterEpoch = new PersistentLongFile(
+        new File(currentDir, LAST_WRITER_EPOCH), 0);
+    
+    lastPromisedEpoch.set(prevLastPromisedEpoch.get());
+    lastWriterEpoch.set(prevLastWriterEpoch.get());
+  }
+
+  public synchronized void doFinalize() throws IOException {
+    LOG.info("Finalizing upgrade for journal " 
+          + storage.getRoot() + "."
+          + (storage.getLayoutVersion()==0 ? "" :
+            "\n   cur LV = " + storage.getLayoutVersion()
+            + "; cur CTime = " + storage.getCTime()));
+    storage.getJournalManager().doFinalize();
+  }
+
+  public Boolean canRollBack(StorageInfo storage, StorageInfo prevStorage,
+      int targetLayoutVersion) throws IOException {
+    return this.storage.getJournalManager().canRollBack(storage, prevStorage,
+        targetLayoutVersion);
+  }
+
+  public void doRollback() throws IOException {
+    storage.getJournalManager().doRollback();
+  }
+
+  public Long getJournalCTime() throws IOException {
+    return storage.getJournalManager().getJournalCTime();
+  }

INS26 INS26 INS40 INS40 INS83 INS31 INS31 INS31 INS31 INS31 INS31 UPD83 UPD83 INS83 INS83 INS39 INS42 INS43 INS8 INS83 INS83 INS39 INS42 INS44 INS43 INS8 INS83 INS83 INS39 INS42 INS43 INS8 INS83 INS43 INS42 INS44 INS44 INS44 INS43 INS8 INS83 INS39 INS42 INS43 INS8 INS83 INS43 INS42 INS43 INS8 INS42 INS21 INS43 INS42 INS42 INS60 INS21 INS60 INS21 INS21 INS21 INS21 INS60 INS60 INS60 INS60 INS21 INS21 INS21 INS21 INS42 INS21 INS21 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS42 INS41 INS42 INS21 INS42 INS42 INS41 INS32 INS42 INS39 INS59 INS7 INS39 INS59 INS7 INS32 INS32 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS7 INS7 INS32 INS32 INS32 INS32 INS42 INS42 INS32 INS32 INS32 INS69 INS32 INS42 INS42 INS32 INS40 INS40 INS42 INS32 INS40 INS40 INS42 INS42 INS27 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS14 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS27 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS39 UPD43 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS45 INS42 INS45 INS32 INS45 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS43 INS14 INS34 INS43 INS14 INS34 INS43 INS14 INS34 INS43 INS14 INS34 INS42 INS42 INS42 INS42 INS45 INS32 INS45 INS36 INS42 INS42 INS22 INS42 INS42 INS42 INS42 INS42 INS40 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS16 INS52 INS42 INS42 INS42 INS42 INS42 INS27 INS45 INS27 INS32 INS34 INS45 INS32 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL42