YARN-8489.  Support "dominant" component concept in YARN service.
            Contributed by Zac Zhou

+import static org.apache.hadoop.yarn.service.conf.YarnServiceConstants
+    .CONTAINER_STATE_REPORT_AS_SERVICE_STATE;
+  public boolean terminateServiceIfNeeded(Component component) {
+    boolean serviceIsTerminated =
+        terminateServiceIfDominantComponentFinished(component) ||
+            terminateServiceIfAllComponentsFinished();
+    return serviceIsTerminated;
+  }
+
+  /**
+   * If the service state component is finished, the service is also terminated.
+   * @param component
+   */
+  private boolean terminateServiceIfDominantComponentFinished(Component
+      component) {
+    boolean shouldTerminate = false;
+    boolean componentIsDominant = component.getComponentSpec()
+        .getConfiguration().getPropertyBool(
+            CONTAINER_STATE_REPORT_AS_SERVICE_STATE, false);
+    if (componentIsDominant) {
+      ComponentRestartPolicy restartPolicy =
+          component.getRestartPolicyHandler();
+      if (restartPolicy.shouldTerminate(component)) {
+        shouldTerminate = true;
+        boolean isSucceeded = restartPolicy.hasCompletedSuccessfully(component);
+        org.apache.hadoop.yarn.service.api.records.ComponentState state
+            = isSucceeded ?
+            org.apache.hadoop.yarn.service.api.records.ComponentState.SUCCEEDED
+            : org.apache.hadoop.yarn.service.api.records.ComponentState.FAILED;
+        LOG.info("{} Component state changed from {} to {}",
+            component.getName(), component.getComponentSpec().getState(),
+            state);
+        component.getComponentSpec().setState(state);
+        LOG.info("Dominate component {} finished, exiting Service Master... " +
+                ", final status=" + (isSucceeded ? "Succeeded" : "Failed"),
+            component.getName());
+        terminateService(isSucceeded);
+      }
+    }
+    return shouldTerminate;
+  }
+
-* Check if all components of the scheduler finished.
-* If all components finished
-*   (which #failed-instances + #suceeded-instances = #total-n-containers)
-* The service will be terminated.
-*/
-  public void terminateServiceIfAllComponentsFinished() {
+   * Check if all components of the scheduler finished.
+   * If all components finished
+   * (which #failed-instances + #suceeded-instances = #total-n-containers)
+   * The service will be terminated.
+  */
+  private boolean terminateServiceIfAllComponentsFinished() {
-          comp.getComponentSpec().setState(org.apache.hadoop
-              .yarn.service.api.records.ComponentState.SUCCEEDED);
-        } else {
-              .yarn.service.api.records.ComponentState.FAILED);
+              .yarn.service.api.records.ComponentState.SUCCEEDED);
+        } else {
+          comp.getComponentSpec().setState(org.apache.hadoop
+              .yarn.service.api.records.ComponentState.FAILED);
-      int exitStatus = EXIT_SUCCESS;
-      if (failedComponents.isEmpty()) {
-        setGracefulStop(FinalApplicationStatus.SUCCEEDED);
-        app.setState(ServiceState.SUCCEEDED);
-      } else {
-        setGracefulStop(FinalApplicationStatus.FAILED);
-        app.setState(ServiceState.FAILED);
-        exitStatus = EXIT_FALSE;
-      }
-
-      getTerminationHandler().terminate(exitStatus);
+      terminateService(failedComponents.isEmpty());
+    return shouldTerminate;
+  }
+
+  private void terminateService(boolean isSucceeded) {
+    int exitStatus = EXIT_SUCCESS;
+    if (isSucceeded) {
+      setGracefulStop(FinalApplicationStatus.SUCCEEDED);
+      app.setState(ServiceState.SUCCEEDED);
+    } else {
+      setGracefulStop(FinalApplicationStatus.FAILED);
+      app.setState(ServiceState.FAILED);
+      exitStatus = EXIT_FALSE;
+    }
+
+    getTerminationHandler().terminate(exitStatus);

INS26 INS40 INS31 INS31 INS31 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 UPD83 UPD39 INS83 INS39 INS42 INS44 INS8 INS43 INS42 INS60 INS41 INS65 INS65 INS43 INS42 INS60 INS60 INS25 INS41 INS41 INS39 INS42 MOV60 MOV25 MOV21 INS42 INS39 INS59 INS42 INS66 INS42 INS42 INS39 INS59 INS39 INS59 INS42 INS8 INS42 INS42 INS42 INS42 INS27 INS42 INS9 INS42 INS32 INS60 INS25 INS21 INS32 INS32 INS32 INS42 INS42 INS9 INS43 INS59 INS32 INS8 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS21 INS60 INS60 INS21 INS21 INS21 INS21 INS42 MOV32 INS42 INS42 INS42 INS42 INS7 INS39 INS59 INS43 INS59 INS32 INS32 INS32 INS32 MOV21 MOV21 INS42 INS9 INS42 INS32 INS40 INS42 INS16 INS42 INS42 INS45 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS27 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS45 INS36 INS42 INS42 INS42 INS42 INS16 INS42 INS45 INS45