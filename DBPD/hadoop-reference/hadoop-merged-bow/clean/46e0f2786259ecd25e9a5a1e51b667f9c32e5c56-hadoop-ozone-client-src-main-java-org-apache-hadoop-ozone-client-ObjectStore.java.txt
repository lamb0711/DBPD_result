HDDS-18. Ozone Shell should use RestClient and RpcClient. Contributed by Lokesh Jain.

-    return new VolumeIterator(volumePrefix);
+    return listVolumes(volumePrefix, null);
-   * Returns Iterator to iterate over the List of volumes owned by a specific
-   * user. The result can be restricted using volume prefix, will return all
-   * volumes if volume prefix is null. If user is null, returns the volume of
-   * current user.
+   * Returns Iterator to iterate over all the volumes after prevVolume in object
+   * store. If prevVolume is null it iterates from the first volume.
+   * The result can be restricted using volume prefix, will return all
+   * volumes if volume prefix is null.
+   *
+   * @param volumePrefix Volume prefix to match
+   * @param prevVolume Volumes will be listed after this volume name
+   * @return {@code Iterator<OzoneVolume>}
+   */
+  public Iterator<OzoneVolume> listVolumes(String volumePrefix,
+      String prevVolume) throws IOException {
+    return new VolumeIterator(null, volumePrefix, prevVolume);
+  }
+
+  /**
+   * Returns Iterator to iterate over the list of volumes after prevVolume owned
+   * by a specific user. The result can be restricted using volume prefix, will
+   * return all volumes if volume prefix is null. If user is not null, returns
+   * the volume of current user.
+   * @param prevVolume Volumes will be listed after this volume name
-  public Iterator<OzoneVolume> listVolumes(String user, String volumePrefix)
+  public Iterator<OzoneVolume> listVolumesByUser(String user,
+      String volumePrefix, String prevVolume)
-    return new VolumeIterator(user, volumePrefix);
+    return new VolumeIterator(user, volumePrefix, prevVolume);
-     * Creates an Iterator to iterate over all volumes in the cluster,
-     * which matches the volume prefix.
-     * @param volPrefix prefix to match
-     */
-    VolumeIterator(String volPrefix) {
-      this(null, volPrefix);
-    }
-
-    /**
-     * Creates an Iterator to iterate over all volumes of the user,
-     * which matches volume prefix.
+     * Creates an Iterator to iterate over all volumes after prevVolume of the user.
+     * If prevVolume is null it iterates from the first volume. The returned volumes
+     * match volume prefix.
-    VolumeIterator(String user, String volPrefix) {
+    VolumeIterator(String user, String volPrefix, String prevVolume) {
-      this.currentIterator = getNextListOfVolumes(null).iterator();
+      this.currentIterator = getNextListOfVolumes(prevVolume).iterator();

INS31 INS29 INS83 INS74 INS42 INS44 INS44 INS43 INS8 UPD42 INS44 INS41 INS65 INS65 INS65 INS65 INS43 INS43 INS43 INS42 INS43 INS42 INS42 INS41 INS65 INS43 INS42 MOV41 INS44 INS32 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS65 INS42 INS42 INS42 INS42 INS14 UPD66 UPD66 UPD66 UPD66 INS42 INS66 INS42 INS43 INS42 INS42 INS42 INS33 INS66 MOV43 INS33 INS42 INS42 INS42 INS42 UPD66 INS66 UPD66 INS42 INS42 DEL42 DEL42 DEL14 DEL41 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL42 DEL42 DEL43 DEL42 DEL44 DEL33 DEL42 DEL17 DEL8 DEL31 DEL33