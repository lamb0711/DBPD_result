HDFS-6123. Do not log stack trace for ReplicaAlreadyExistsException and SocketTimeoutException.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579396 13f79535-47bb-0310-9956-ffa450edef68

+import static org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos.Status.ERROR_ACCESS_TOKEN;
-import static org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos.Status.ERROR_ACCESS_TOKEN;
-import static org.apache.hadoop.util.Time.now;
+import static org.apache.hadoop.util.Time.now;
-import org.apache.hadoop.fs.InvalidRequestException;
+import org.apache.hadoop.hdfs.protocol.datatransfer.DataTransferEncryptor;
-import org.apache.hadoop.hdfs.protocol.datatransfer.DataTransferEncryptor;
-      LOG.error(datanode.getDisplayName() + ":DataXceiver error processing " +
-                ((op == null) ? "unknown" : op.name()) + " operation " +
-                " src: " + remoteAddress +
-                " dest: " + localAddress, t);
+      String s = datanode.getDisplayName() + ":DataXceiver error processing "
+          + ((op == null) ? "unknown" : op.name()) + " operation "
+          + " src: " + remoteAddress + " dst: " + localAddress;
+      if (op == Op.WRITE_BLOCK && t instanceof ReplicaAlreadyExistsException) {
+        // For WRITE_BLOCK, it is okay if the replica already exists since
+        // client and replication may write the same block to the same datanode
+        // at the same time.
+        if (LOG.isTraceEnabled()) {
+          LOG.trace(s, t);
+        } else {
+          LOG.info(s + "; " + t);
+        }
+      } else {
+        LOG.error(s, t);
+      }

MOV26 MOV26 MOV26 INS8 INS60 INS25 INS43 INS59 INS27 INS8 INS8 INS42 INS42 MOV27 INS27 INS62 INS25 MOV21 UPD45 INS42 INS40 INS42 INS43 INS32 INS8 INS8 INS42 INS42 INS42 INS21 INS21 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS45 INS42 DEL40 DEL26 DEL8