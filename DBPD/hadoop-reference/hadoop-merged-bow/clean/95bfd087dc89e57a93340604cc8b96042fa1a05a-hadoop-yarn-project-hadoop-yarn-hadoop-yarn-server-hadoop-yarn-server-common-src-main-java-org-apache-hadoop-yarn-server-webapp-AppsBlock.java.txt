YARN-1809. Synchronize RM and TimeLineServer Web-UIs. Contributed by Zhijie Shen and Xuan Gong

-import java.util.HashSet;
+import java.util.EnumSet;
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.yarn.api.ApplicationBaseProtocol;
+import org.apache.hadoop.yarn.api.protocolrecords.GetApplicationsRequest;
-import org.apache.hadoop.yarn.server.api.ApplicationContext;
-  protected ApplicationContext appContext;
+  private static final Log LOG = LogFactory.getLog(AppsBlock.class);
+  protected ApplicationBaseProtocol appBaseProt;
-  AppsBlock(ApplicationContext appContext, ViewContext ctx) {
+  AppsBlock(ApplicationBaseProtocol appBaseProt, ViewContext ctx) {
-    this.appContext = appContext;
+    this.appBaseProt = appBaseProt;
-    Collection<YarnApplicationState> reqAppStates = null;
+    EnumSet<YarnApplicationState> reqAppStates =
+        EnumSet.noneOf(YarnApplicationState.class);
-      reqAppStates = new HashSet<YarnApplicationState>(appStateStrings.length);
-        reqAppStates.add(YarnApplicationState.valueOf(stateString));
+        reqAppStates.add(YarnApplicationState.valueOf(stateString.trim()));
-    Collection<ApplicationReport> appReports;
+    Collection<ApplicationReport> appReports = null;
+      final GetApplicationsRequest request =
+          GetApplicationsRequest.newInstance(reqAppStates);
-        appReports = appContext.getAllApplications().values();
+        appReports = appBaseProt.getApplications(request).getApplicationList();
-            return appContext.getAllApplications().values();
+            return appBaseProt.getApplications(request).getApplicationList();
-      if (reqAppStates != null
+      // TODO: remove the following condition. It is still here because
+      // the history side implementation of ApplicationBaseProtocol
+      // hasn't filtering capability (YARN-1819).
+      if (!reqAppStates.isEmpty()
-      String percent = String.format("%.1f", app.getProgress() * 100.0F);
+      String percent = String.format("%.1f", app.getProgress());
-        .append(app.getAppState())
+        .append(app.getAppState() == null ? UNAVAILABLE : app.getAppState())
-        .append("'> </div> </div>").append("\",\"<a href='");
+        .append("'> </div> </div>").append("\",\"<a ");
-          app.getTrackingUrl() == null ? "#" : app.getTrackingUrl();
+          app.getTrackingUrl() == null || app.getTrackingUrl() == UNAVAILABLE
+              ? null : app.getTrackingUrl();
-      appsTableData.append(trackingURL).append("'>").append("History")
-        .append("</a>\"],\n");
+      String trackingUI =
+          app.getTrackingUrl() == null || app.getTrackingUrl() == UNAVAILABLE
+              ? "Unassigned"
+              : app.getAppState() == YarnApplicationState.FINISHED
+                  || app.getAppState() == YarnApplicationState.FAILED
+                  || app.getAppState() == YarnApplicationState.KILLED
+                  ? "History" : "ApplicationMaster";
+      appsTableData.append(trackingURL == null ? "#" : "href='" + trackingURL)
+        .append("'>").append(trackingUI).append("</a>\"],\n");

MOV26 INS26 INS26 INS26 UPD40 INS40 INS40 UPD40 INS40 INS23 INS83 INS83 INS83 INS43 INS59 UPD43 INS42 INS42 INS32 UPD42 UPD42 UPD43 UPD42 INS42 INS42 INS57 UPD42 UPD74 MOV74 INS43 UPD42 UPD43 INS32 INS33 INS60 INS60 INS42 UPD42 UPD42 INS42 INS42 INS57 INS83 INS43 INS59 INS43 INS59 MOV43 INS42 INS42 INS32 INS38 UPD45 INS42 INS42 INS16 INS42 INS42 INS42 INS32 MOV32 INS27 INS33 INS27 INS45 INS16 INS42 INS42 INS42 MOV27 INS27 INS27 INS27 INS27 INS45 INS45 INS32 UPD42 INS32 INS42 INS32 INS33 INS32 INS42 INS27 INS27 INS16 MOV42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS27 INS32 INS40 INS27 INS45 INS27 INS32 INS40 INS32 INS40 INS42 INS42 INS42 INS33 INS45 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 UPD42 INS42 INS16 INS27 INS42 MOV32 INS32 INS33 INS42 INS42 DEL42 DEL43 DEL74 DEL33 DEL42 DEL40 DEL14 DEL7 DEL21 DEL42 DEL33 DEL27 DEL34 DEL27 DEL45 DEL42 DEL45