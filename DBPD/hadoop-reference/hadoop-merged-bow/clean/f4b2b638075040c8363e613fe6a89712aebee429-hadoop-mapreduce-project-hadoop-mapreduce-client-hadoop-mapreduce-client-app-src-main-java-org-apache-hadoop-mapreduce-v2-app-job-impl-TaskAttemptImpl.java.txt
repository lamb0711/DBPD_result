Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1170378 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.mapreduce.v2.jobhistory.JHConfig;
+  @SuppressWarnings("rawtypes")
+     .addTransition(TaskAttemptState.ASSIGNED,
+         TaskAttemptState.FAIL_CONTAINER_CLEANUP,
+         TaskAttemptEventType.TA_CONTAINER_COMPLETED,
+         CLEANUP_CONTAINER_TRANSITION)
+      // ^ If RM kills the container due to expiry, preemption etc. 
-  public TaskAttemptImpl(TaskId taskId, int i, EventHandler eventHandler,
+  public TaskAttemptImpl(TaskId taskId, int i, 
+      @SuppressWarnings("rawtypes") EventHandler eventHandler,
+    // Application resources
+    Map<String, LocalResource> localResources = 
+        new HashMap<String, LocalResource>();
+    
+    // Application environment
+    Map<String, String> environment = new HashMap<String, String>();
+    
-        container.setLocalResource(
+        localResources.put(
-      container.setLocalResource(
+      localResources.put(
+      
-      setupDistributedCache(remoteFS, conf, container);
+      setupDistributedCache(remoteFS, conf, localResources, environment);
+      // Set local-resources and environment
+      container.setLocalResources(localResources);
+      container.setEnv(environment);
+      
-      container
-          .setServiceData(
-              ShuffleHandler.MAPREDUCE_SHUFFLE_SERVICEID,
-              ShuffleHandler.serializeServiceData(jobToken));
+      Map<String, ByteBuffer> serviceData = new HashMap<String, ByteBuffer>();
+      serviceData.put(ShuffleHandler.MAPREDUCE_SHUFFLE_SERVICEID,
+          ShuffleHandler.serializeServiceData(jobToken));
+      container.setServiceData(serviceData);
-      MRApps.addToClassPath(container.getAllEnv(), getInitialClasspath());
+      MRApps.addToClassPath(container.getEnv(), getInitialClasspath());
-    container.addAllCommands(MapReduceChildJVM.getVMCommand(
+    container.setCommands(MapReduceChildJVM.getVMCommand(
-    MapReduceChildJVM.setVMEnv(container.getAllEnv(), classPaths,
+    MapReduceChildJVM.setVMEnv(container.getEnv(), classPaths,
-  private void setupDistributedCache(FileSystem remoteFS, Configuration conf, 
-      ContainerLaunchContext container) throws IOException {
+  private void setupDistributedCache(FileSystem remoteFS, 
+      Configuration conf, 
+      Map<String, LocalResource> localResources,
+      Map<String, String> env) 
+  throws IOException {
-    parseDistributedCacheArtifacts(remoteFS, container, LocalResourceType.ARCHIVE, 
+    parseDistributedCacheArtifacts(remoteFS, localResources, env, 
+        LocalResourceType.ARCHIVE, 
-    parseDistributedCacheArtifacts(remoteFS, container, LocalResourceType.FILE, 
+    parseDistributedCacheArtifacts(remoteFS, 
+        localResources, env, 
+        LocalResourceType.FILE, 
-      FileSystem remoteFS, ContainerLaunchContext container, LocalResourceType type,
+      FileSystem remoteFS, 
+      Map<String, LocalResource> localResources,
+      Map<String, String> env,
+      LocalResourceType type,
-        container.setLocalResource(
+        localResources.put(
-            BuilderUtils.newLocalResource(recordFactory,
+            BuilderUtils.newLocalResource(
-          Map<String, String> environment = container.getAllEnv();
-          MRApps.addToClassPath(environment, linkName);
+          MRApps.addToClassPath(env, linkName);
+  @SuppressWarnings("unchecked")
-        LOG.error("Can't handle this event at current state", e);
+        LOG.error("Can't handle this event at current state for "
+            + this.attemptId, e);
-            JHConfig.JOBHISTORY_TASKPROGRESS_NUMBER_SPLITS_KEY,
-            WrappedProgressSplitsBlock.DEFAULT_NUMBER_PROGRESS_SPLITS));
+            MRJobConfig.MR_AM_NUM_PROGRESS_SPLITS,
+            MRJobConfig.DEFAULT_MR_AM_NUM_PROGRESS_SPLITS));
+    @SuppressWarnings("unchecked")
+    @SuppressWarnings("unchecked")
+    @SuppressWarnings("unchecked")
+    @SuppressWarnings("unchecked")
+    @SuppressWarnings("unchecked")
+    @SuppressWarnings("unchecked")
+    @SuppressWarnings("unchecked")
+    @SuppressWarnings("unchecked")
+  @SuppressWarnings({ "unchecked" })
+    @SuppressWarnings("unchecked")
+    @SuppressWarnings("unchecked")
+    @SuppressWarnings("unchecked")
+    @SuppressWarnings("unchecked")

INS79 INS44 INS44 INS79 INS79 INS42 INS45 INS79 INS60 INS60 INS74 INS42 INS74 INS42 INS74 INS42 MOV74 INS42 INS42 INS45 INS79 INS79 INS79 INS79 INS79 INS79 INS79 INS79 INS42 INS4 INS79 INS79 INS79 INS79 INS42 INS45 INS74 INS59 INS74 INS59 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS43 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS43 INS43 INS43 INS42 INS14 INS43 INS43 INS43 INS42 INS14 INS21 INS21 INS60 INS21 UPD42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 UPD42 INS42 UPD42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS74 INS32 INS32 INS74 INS59 INS32 UPD42 INS43 INS43 INS43 INS43 INS43 INS43 UPD42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS42 INS14 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS74 UPD42 UPD42 UPD42 INS43 INS43 INS43 UPD42 UPD42 INS42 INS42 INS42 INS27 UPD42 INS45 INS22 UPD40 UPD40 INS52 INS42 INS32 INS42 INS40 INS40 MOV32 MOV42 MOV40 MOV40 INS40 INS42 UPD40 UPD40 MOV14 UPD40 UPD40 UPD40 INS42 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD42 UPD40 MOV14 UPD40 UPD40 UPD40 INS42 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 MOV14 UPD40 UPD40 INS42 UPD40 UPD40 UPD42 UPD40 MOV14 UPD40 UPD40 UPD40 INS42 UPD40 UPD40 UPD40 UPD40 DEL40 DEL26 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL45