HDFS-2972. Small optimization building incremental block report. Contributed by Todd Lipcon.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1292497 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.LinkedList;
+import java.util.HashMap;
+import java.util.Map;
+import com.google.common.collect.Maps;
-  private final LinkedList<ReceivedDeletedBlockInfo> receivedAndDeletedBlockList 
-    = new LinkedList<ReceivedDeletedBlockInfo>();
+  
+  /**
+   * Between block reports (which happen on the order of once an hour) the
+   * DN reports smaller incremental changes to its block list. This map,
+   * keyed by block ID, contains the pending changes which have yet to be
+   * reported to the NN. Access should be synchronized on this object.
+   */
+  private final Map<Long, ReceivedDeletedBlockInfo> pendingIncrementalBR 
+    = Maps.newHashMap();
+  
-    int currentReceivedRequestsCounter;
-    synchronized (receivedAndDeletedBlockList) {
-      currentReceivedRequestsCounter = pendingReceivedRequests;
-      int numBlocks = receivedAndDeletedBlockList.size();
+    synchronized (pendingIncrementalBR) {
+      int numBlocks = pendingIncrementalBR.size();
-        receivedAndDeletedBlockArray = receivedAndDeletedBlockList
-            .toArray(new ReceivedDeletedBlockInfo[numBlocks]);
+        receivedAndDeletedBlockArray = pendingIncrementalBR
+            .values().toArray(new ReceivedDeletedBlockInfo[numBlocks]);
+      pendingIncrementalBR.clear();
-      bpNamenode.blockReceivedAndDeleted(bpRegistration, bpos.getBlockPoolId(),
-          report);
-      synchronized (receivedAndDeletedBlockList) {
-        for (int i = 0; i < receivedAndDeletedBlockArray.length; i++) {
-          receivedAndDeletedBlockList.remove(receivedAndDeletedBlockArray[i]);
+      boolean success = false;
+      try {
+        bpNamenode.blockReceivedAndDeleted(bpRegistration, bpos.getBlockPoolId(),
+            report);
+        success = true;
+      } finally {
+        synchronized (pendingIncrementalBR) {
+          if (!success) {
+            // If we didn't succeed in sending the report, put all of the
+            // blocks back onto our queue, but only in the case where we didn't
+            // put something newer in the meantime.
+            for (ReceivedDeletedBlockInfo rdbi : receivedAndDeletedBlockArray) {
+              if (!pendingIncrementalBR.containsKey(rdbi.getBlock().getBlockId())) {
+                pendingIncrementalBR.put(rdbi.getBlock().getBlockId(), rdbi);
+              }
+            }
+          }
+          pendingReceivedRequests = pendingIncrementalBR.size();
-        pendingReceivedRequests -= currentReceivedRequestsCounter;
-    synchronized (receivedAndDeletedBlockList) {
-      receivedAndDeletedBlockList.add(bInfo);
+    synchronized (pendingIncrementalBR) {
+      pendingIncrementalBR.put(
+          bInfo.getBlock().getBlockId(), bInfo);
-      receivedAndDeletedBlockList.notifyAll();
+      pendingIncrementalBR.notifyAll();
-    synchronized (receivedAndDeletedBlockList) {
-      receivedAndDeletedBlockList.add(bInfo);
+    synchronized (pendingIncrementalBR) {
+      pendingIncrementalBR.put(
+          bInfo.getBlock().getBlockId(), bInfo);
-    synchronized (receivedAndDeletedBlockList) {
+    synchronized (pendingIncrementalBR) {
-      receivedAndDeletedBlockList.notifyAll();
+      pendingIncrementalBR.notifyAll();
-          receivedAndDeletedBlockList.wait(100);
+          pendingIncrementalBR.wait(100);
-    synchronized (receivedAndDeletedBlockList) {
+    synchronized (pendingIncrementalBR) {
-      receivedAndDeletedBlockList.notifyAll();
+      pendingIncrementalBR.notifyAll();
-          receivedAndDeletedBlockList.wait(100);
+          pendingIncrementalBR.wait(100);
-    synchronized (receivedAndDeletedBlockList) {
+    synchronized (pendingIncrementalBR) {
-      receivedAndDeletedBlockList.notifyAll();
+      pendingIncrementalBR.notifyAll();
-          receivedAndDeletedBlockList.wait(100);
+          pendingIncrementalBR.wait(100);
-        synchronized(receivedAndDeletedBlockList) {
+        synchronized(pendingIncrementalBR) {
-              receivedAndDeletedBlockList.wait(waitTime);
+              pendingIncrementalBR.wait(waitTime);

INS26 INS26 MOV31 INS40 UPD40 INS40 INS29 UPD74 MOV29 MOV78 UPD42 MOV43 MOV78 UPD42 MOV43 MOV78 UPD42 MOV43 INS65 INS43 UPD43 MOV43 UPD42 INS32 INS25 INS66 INS66 INS66 INS66 INS42 UPD42 INS42 INS42 UPD42 MOV27 INS8 UPD42 UPD42 UPD42 UPD42 UPD42 INS21 MOV60 MOV60 INS54 MOV21 MOV21 MOV21 MOV21 INS32 UPD39 INS8 INS8 MOV27 MOV27 MOV27 INS42 INS42 UPD42 INS9 MOV21 INS21 MOV51 INS42 INS42 INS32 UPD42 INS42 INS42 INS32 UPD42 UPD42 UPD42 UPD42 INS7 UPD42 INS32 UPD42 MOV42 INS32 UPD42 MOV42 UPD42 INS42 INS9 INS25 INS42 UPD42 MOV42 INS42 UPD42 MOV42 INS32 INS38 INS8 UPD7 UPD42 MOV42 INS42 INS42 INS70 INS32 UPD42 UPD42 UPD42 INS44 INS42 INS8 INS42 INS42 MOV43 INS42 INS25 INS38 INS8 INS32 MOV21 UPD42 INS42 INS42 INS32 INS32 INS42 INS42 UPD42 INS32 INS42 INS42 INS42 INS32 INS42 UPD42 MOV42 INS42 DEL42 DEL43 DEL74 DEL14 DEL42 DEL42 DEL7 DEL21 DEL42 DEL42 DEL2 DEL39 DEL42 DEL34 DEL59 DEL58 DEL42 DEL40 DEL27 DEL42 DEL37 DEL8 DEL24 DEL42 DEL8 DEL25