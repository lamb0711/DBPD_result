HDFS-2432. Webhdfs: response FORBIDDEN when setReplication on non-files; clear umask before creating a flie; throw IllegalArgumentException if setOwner with both owner and group empty; throw FileNotFoundException if getFileStatus on non-existing files; fix bugs in getBlockLocations; and changed getFileChecksum json response root to "FileChecksum".


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190077 13f79535-47bb-0310-9956-ffa450edef68

-  @SuppressWarnings("unchecked")
-  private static <T> T jsonParse(final InputStream in) throws IOException {
+  private static Map<?, ?> jsonParse(final InputStream in) throws IOException {
-    return (T)JSON.parse(new InputStreamReader(in));
+    return (Map<?, ?>)JSON.parse(new InputStreamReader(in));
-  private static void validateResponse(final HttpOpParam.Op op,
+  private static Map<?, ?> validateResponse(final HttpOpParam.Op op,
-      final Map<String, Object> m;
+      final Map<?, ?> m;
+      if (m.get(RemoteException.class.getSimpleName()) == null) {
+        return m;
+      }
+
+    return null;
-   * @return a JSON object, e.g. Object[], Map<String, Object>, etc.
+   * @return a JSON object, e.g. Object[], Map<?, ?>, etc.
-  private <T> T run(final HttpOpParam.Op op, final Path fspath,
+  private Map<?, ?> run(final HttpOpParam.Op op, final Path fspath,
-    validateResponse(op, conn);
-      return WebHdfsFileSystem.<T>jsonParse(conn.getInputStream());
+      final Map<?, ?> m = validateResponse(op, conn);
+      return m != null? m: jsonParse(conn.getInputStream());
-    final Map<String, Object> json = run(op, f);
+    final Map<?, ?> json = run(op, f);
-    final Map<String, Object> json = run(op, f,
+    final Map<?, ?> json = run(op, f,
-    final Map<String, Object> json = run(op, src,
+    final Map<?, ?> json = run(op, src,
-    final Map<String, Object> json = run(op, p,
-        new ReplicationParam(replication));
+    final Map<?, ?> json = run(op, p, new ReplicationParam(replication));
-    final Map<String, Object> json = run(op, f, new RecursiveParam(recursive));
+    final Map<?, ?> json = run(op, f, new RecursiveParam(recursive));
-      @SuppressWarnings("unchecked")
-      final Map<String, Object> m = (Map<String, Object>)array[i];
+      final Map<?, ?> m = (Map<?, ?>)array[i];
-    final Map<String, Object> m = run(op, null, new RenewerParam(renewer));
+    final Map<?, ?> m = run(op, null, new RenewerParam(renewer));
-    final Map<String, Object> m = run(op, p, new OffsetParam(offset),
+    final Map<?, ?> m = run(op, p, new OffsetParam(offset),
-    final Map<String, Object> m = run(op, p);
+    final Map<?, ?> m = run(op, p);
-    final Map<String, Object> m = run(op, p);
+    final Map<?, ?> m = run(op, p);

INS74 INS74 INS74 INS43 INS76 INS76 INS43 INS76 INS76 INS41 INS43 INS76 INS76 UPD42 MOV42 INS42 INS33 UPD66 UPD42 MOV42 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 UPD74 INS74 INS60 INS25 INS60 INS76 INS76 INS76 INS76 INS76 INS76 INS76 INS76 INS76 INS76 INS76 INS76 INS76 INS76 INS76 INS76 INS76 INS76 INS43 INS76 INS76 MOV83 INS74 MOV59 INS27 INS8 INS83 INS74 INS59 INS16 UPD74 UPD42 MOV42 MOV43 INS76 INS76 INS32 INS33 INS41 INS43 INS76 INS76 INS42 MOV32 INS27 INS42 MOV32 MOV43 INS76 INS76 INS42 INS42 INS32 INS42 INS42 INS42 INS33 UPD74 INS57 INS42 MOV43 INS76 INS76 INS43 UPD42 MOV42 DEL42 DEL45 DEL79 DEL42 DEL73 DEL43 DEL43 DEL39 DEL43 DEL42 DEL43 DEL74 DEL60 DEL42 DEL73 DEL43 DEL21 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL45 DEL79 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43