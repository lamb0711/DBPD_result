YARN-5411. Create a proxy chain for ApplicationClientProtocol in the Router. (Giovanni Matteo Fumarola via Subru).

(cherry picked from commit 4846069061b6baa06da3b524b9e36567dd368388)

+import java.io.IOException;
+import java.util.concurrent.atomic.AtomicBoolean;
+
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.service.CompositeService;
+import org.apache.hadoop.util.ShutdownHookManager;
+import org.apache.hadoop.util.StringUtils;
+import org.apache.hadoop.yarn.YarnUncaughtExceptionHandler;
+import org.apache.hadoop.yarn.conf.YarnConfiguration;
+import org.apache.hadoop.yarn.exceptions.YarnRuntimeException;
+import org.apache.hadoop.yarn.server.router.clientrm.RouterClientRMService;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
-public class Router{
+public class Router extends CompositeService {
+  private static final Logger LOG = LoggerFactory.getLogger(Router.class);
+  private static CompositeServiceShutdownHook routerShutdownHook;
+  private Configuration conf;
+  private AtomicBoolean isStopping = new AtomicBoolean(false);
+  private RouterClientRMService clientRMProxyService;
+
+  /**
+   * Priority of the Router shutdown hook.
+   */
+  public static final int SHUTDOWN_HOOK_PRIORITY = 30;
+
+  public Router() {
+    super(Router.class.getName());
+  }
+
+  protected void doSecureLogin() throws IOException {
+    // TODO YARN-6539 Create SecureLogin inside Router
+  }
+
+  @Override
+  protected void serviceInit(Configuration config) throws Exception {
+    this.conf = config;
+    clientRMProxyService = createClientRMProxyService();
+    addService(clientRMProxyService);
+    super.serviceInit(conf);
+  }
+
+  @Override
+  protected void serviceStart() throws Exception {
+    try {
+      doSecureLogin();
+    } catch (IOException e) {
+      throw new YarnRuntimeException("Failed Router login", e);
+    }
+    super.serviceStart();
+  }
+
+  @Override
+  protected void serviceStop() throws Exception {
+    if (isStopping.getAndSet(true)) {
+      return;
+    }
+    super.serviceStop();
+  }
+
+  protected void shutDown() {
+    new Thread() {
+      @Override
+      public void run() {
+        Router.this.stop();
+      }
+    }.start();
+  }
+
+  protected RouterClientRMService createClientRMProxyService() {
+    return new RouterClientRMService();
+  }
+
+  public static void main(String[] argv) {
+    Configuration conf = new YarnConfiguration();
+    Thread
+        .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());
+    StringUtils.startupShutdownMessage(Router.class, argv, LOG);
+    Router router = new Router();
+    try {
+
+      // Remove the old hook if we are rebooting.
+      if (null != routerShutdownHook) {
+        ShutdownHookManager.get().removeShutdownHook(routerShutdownHook);
+      }
+
+      routerShutdownHook = new CompositeServiceShutdownHook(router);
+      ShutdownHookManager.get().addShutdownHook(routerShutdownHook,
+          SHUTDOWN_HOOK_PRIORITY);
+
+      router.init(conf);
+      router.start();
+    } catch (Throwable t) {
+      LOG.error("Error starting Router", t);
+      System.exit(-1);
+    }
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS43 INS23 INS23 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS42 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS29 INS83 INS83 INS83 INS39 INS59 INS83 INS42 INS8 INS83 INS39 INS42 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS43 INS8 INS78 INS83 INS39 INS42 INS43 INS8 INS83 INS39 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS65 INS42 INS34 INS46 INS42 INS42 INS43 INS42 INS42 INS21 INS21 INS21 INS21 INS42 INS42 INS54 INS21 INS42 INS42 INS25 INS21 INS21 INS42 INS41 INS5 INS42 INS60 INS21 INS21 INS60 INS54 INS42 INS42 INS57 INS43 INS9 INS66 INS32 INS42 INS7 INS7 INS32 INS48 INS8 INS12 INS48 INS32 INS8 INS48 INS32 INS14 INS43 INS85 INS43 INS59 INS32 INS32 INS43 INS59 INS8 INS12 INS43 INS42 INS57 INS42 INS22 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS21 INS44 INS8 INS42 INS42 INS42 INS9 INS41 INS42 INS14 INS42 INS43 INS42 INS42 INS42 INS14 INS42 INS42 INS14 INS42 INS42 INS57 INS42 INS42 INS42 INS42 INS14 INS25 INS21 INS21 INS21 INS21 INS44 INS8 INS42 INS43 INS52 INS42 INS42 INS32 INS43 INS42 INS53 INS43 INS1 INS42 INS43 INS43 INS43 INS43 INS27 INS8 INS7 INS32 INS32 INS32 INS43 INS42 INS21 INS21 INS42 INS42 INS42 INS14 INS42 INS31 INS42 INS42 INS42 INS42 INS33 INS42 INS21 INS42 INS14 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS43 INS45 INS42 INS78 INS83 INS39 INS42 INS8 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS38 INS42 INS42 INS21 INS32 INS42 INS42 INS42 INS34 INS32 INS42 INS42 INS52 INS42 INS42