YARN-1382. Remove unusableRMNodesConcurrentSet (never used) in NodeListManager to get rid of memory leak. Contributed by Rohith Sharma K S.

-import java.util.Collection;
-import java.util.Collections;
-  private Set<RMNode> unusableRMNodesConcurrentSet = Collections
-      .newSetFromMap(new ConcurrentHashMap<RMNode,Boolean>());
-  
-  /**
-   * Provides the currently unusable nodes. Copies it into provided collection.
-   * @param unUsableNodes
-   *          Collection to which the unusable nodes are added
-   * @return number of unusable nodes added
-   */
-  public int getUnusableNodes(Collection<RMNode> unUsableNodes) {
-    unUsableNodes.addAll(unusableRMNodesConcurrentSet);
-    return unusableRMNodesConcurrentSet.size();
-  }
-
-      unusableRMNodesConcurrentSet.add(eventNode);
-      if (unusableRMNodesConcurrentSet.contains(eventNode)) {
-        LOG.debug(eventNode + " reported usable");
-        unusableRMNodesConcurrentSet.remove(eventNode);
-      }
+      LOG.debug(eventNode + " reported usable");

MOV21 DEL40 DEL26 DEL40 DEL26 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL14 DEL32 DEL59 DEL23 DEL66 DEL65 DEL42 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25