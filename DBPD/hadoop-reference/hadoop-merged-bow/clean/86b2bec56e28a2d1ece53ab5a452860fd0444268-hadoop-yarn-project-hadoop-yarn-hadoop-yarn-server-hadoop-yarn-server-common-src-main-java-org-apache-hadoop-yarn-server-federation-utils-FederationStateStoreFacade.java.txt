YARN-6247. Share a single instance of SubClusterResolver instead of instantiating one per AM. (Botong Huang via Subru)

(cherry picked from commit 51aeb2ce0c599176aca9466a939c3ad55df30036)

+import org.apache.hadoop.yarn.server.federation.resolver.SubClusterResolver;
+  private SubClusterResolver subclusterResolver;
+      this.subclusterResolver = createInstance(conf,
+          YarnConfiguration.FEDERATION_CLUSTER_RESOLVER_CLASS,
+          YarnConfiguration.DEFAULT_FEDERATION_CLUSTER_RESOLVER_CLASS,
+          SubClusterResolver.class);
+      this.subclusterResolver.load();
+
+   * Get the singleton instance of SubClusterResolver.
+   *
+   * @return SubClusterResolver instance
+   */
+  public SubClusterResolver getSubClusterResolver() {
+    return this.subclusterResolver;
+  }
+
+  /**
-  @SuppressWarnings("unchecked")
+    return RetryProxy.create(type,
+        createInstance(conf, configuredClassName, defaultValue, type),
+        retryPolicy);
+  }
+
+  /**
+   * Helper method to create instances of Object using the class name specified
+   * in the configuration object.
+   *
+   * @param conf the yarn configuration
+   * @param configuredClassName the configuration provider key
+   * @param defaultValue the default implementation class
+   * @param type the required interface/base class
+   * @param <T> The type of the instance to create
+   * @return the instances created
+   */
+  @SuppressWarnings("unchecked")
+  public static <T> T createInstance(Configuration conf,
+      String configuredClassName, String defaultValue, Class<T> type) {
+
-        return RetryProxy.create(type,
-            (T) ReflectionUtils.newInstance(clusterResolverClass, conf),
-            retryPolicy);
+        return (T) ReflectionUtils.newInstance(clusterResolverClass, conf);
-        throw new YarnRuntimeException(
-            "Class: " + className + " not instance of " + type.getSimpleName());
+        throw new YarnRuntimeException("Class: " + className
+            + " not instance of " + type.getCanonicalName());
-    } catch (Exception e) {
+    } catch (ClassNotFoundException e) {

INS26 INS40 INS23 INS31 INS31 INS83 INS43 INS59 INS29 INS83 INS43 INS42 INS8 MOV29 INS83 INS83 INS73 MOV43 INS42 INS44 INS44 INS44 INS44 MOV44 INS8 INS29 INS43 UPD42 INS42 INS42 INS65 INS65 INS42 INS41 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS41 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS66 INS66 INS22 INS42 INS42 INS42 INS43 INS43 INS32 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS66 INS21 INS21 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS7 INS32 INS42 INS42 INS42 INS42 INS42 UPD43 INS22 INS32 INS22 INS42 UPD42 INS52 INS42 INS42 INS42 INS40 INS40 INS57 INS52 INS42 MOV11 INS43 INS42 UPD42 DEL42 DEL42 DEL42 DEL42 DEL32