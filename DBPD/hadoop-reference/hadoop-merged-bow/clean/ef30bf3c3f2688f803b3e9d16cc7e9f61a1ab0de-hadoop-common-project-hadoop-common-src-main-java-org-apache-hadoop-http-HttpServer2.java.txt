HADOOP-13352. Make X-FRAME-OPTIONS configurable in HttpServer2. Contributed by Anu Engineer.

+  private XFrameOption xFrameOption;
+  private boolean xFrameOptionIsEnabled;
+  private static final String X_FRAME_VALUE = "xFrameOption";
+  private static final String X_FRAME_ENABLED = "X_FRAME_ENABLED";
+
+    private boolean xFrameEnabled;
+    private XFrameOption xFrameOption = XFrameOption.SAMEORIGIN;
+
+    /**
+     * Adds the ability to control X_FRAME_OPTIONS on HttpServer2.
+     * @param xFrameEnabled - True enables X_FRAME_OPTIONS false disables it.
+     * @return Builder.
+     */
+    public Builder configureXFrame(boolean xFrameEnabled) {
+      this.xFrameEnabled = xFrameEnabled;
+      return this;
+    }
+
+    /**
+     * Sets a valid X-Frame-option that can be used by HttpServer2.
+     * @param option - String DENY, SAMEORIGIN or ALLOW-FROM are the only valid
+     *               options. Any other value will throw IllegalArgument
+     *               Exception.
+     * @return  Builder.
+     */
+    public Builder setXFrameOption(String option) {
+      this.xFrameOption = XFrameOption.getEnum(option);
+      return this;
+    }
+
+
+
+    this.xFrameOptionIsEnabled = b.xFrameEnabled;
+    this.xFrameOption = b.xFrameOption;
+
-    addGlobalFilter("safety", QuotingInputFilter.class.getName(), null);
+    Map<String, String> xFrameParams = new HashMap<>();
+    xFrameParams.put(X_FRAME_ENABLED,
+        String.valueOf(this.xFrameOptionIsEnabled));
+    xFrameParams.put(X_FRAME_VALUE,  this.xFrameOption.toString());
+    addGlobalFilter("safety", QuotingInputFilter.class.getName(), xFrameParams);
-    private static final XFrameOption X_FRAME_OPTION = XFrameOption.SAMEORIGIN;
+
-      httpResponse.addHeader("X-FRAME-OPTIONS", X_FRAME_OPTION.toString());
+
+      if(Boolean.valueOf(this.config.getInitParameter(X_FRAME_ENABLED))) {
+        httpResponse.addHeader("X-FRAME-OPTIONS",
+            this.config.getInitParameter(X_FRAME_VALUE));
+      }
+
+    /**
+     * We cannot use valueOf since the AllowFrom enum differs from its value
+     * Allow-From. This is a helper method that does exactly what valueof does,
+     * but allows us to handle the AllowFrom issue gracefully.
+     *
+     * @param value - String must be DENY, SAMEORIGIN or ALLOW-FROM.
+     * @return XFrameOption or throws IllegalException.
+     */
+    private static XFrameOption getEnum(String value) {
+      Preconditions.checkState(value != null && !value.isEmpty());
+      for (XFrameOption xoption : values()) {
+        if (value.equals(xoption.toString())) {
+          return xoption;
+        }
+      }
+      throw new IllegalArgumentException("Unexpected value in xFrameOption.");
+    }

INS23 INS23 INS23 INS23 INS83 INS43 INS59 INS83 INS39 INS59 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS43 INS59 INS23 INS23 INS31 INS31 INS31 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS83 INS39 INS59 INS83 INS43 INS59 INS29 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS44 INS8 INS21 INS21 INS60 INS21 INS21 INS29 INS83 INS83 MOV43 INS42 INS44 INS8 INS42 INS42 INS42 INS40 INS65 INS65 INS65 INS42 INS39 INS42 INS21 INS41 INS65 INS65 INS65 INS42 INS43 INS42 INS21 INS41 INS7 INS7 INS74 INS59 INS32 INS32 INS25 INS65 INS65 INS65 INS43 INS42 INS21 INS70 INS53 INS66 INS42 INS66 INS66 INS7 INS52 INS66 INS42 INS66 INS66 INS66 INS66 INS42 INS7 INS52 INS22 INS40 INS22 INS40 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS8 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS32 INS44 INS32 INS8 INS14 INS22 INS42 INS22 INS32 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS22 INS22 INS42 INS42 INS42 INS32 MOV21 INS42 INS42 INS27 INS43 INS42 INS42 INS25 INS43 INS45 INS52 INS42 INS52 INS42 INS42 INS42 INS42 INS43 INS52 INS42 INS52 INS42 INS22 INS42 INS42 INS27 INS38 INS42 INS32 INS8 INS42 INS42 INS52 INS42 INS42 INS33 INS32 INS42 INS42 INS32 INS41 INS22 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 DEL33 DEL83 DEL83 DEL83 DEL42 DEL40 DEL59 DEL23 DEL42