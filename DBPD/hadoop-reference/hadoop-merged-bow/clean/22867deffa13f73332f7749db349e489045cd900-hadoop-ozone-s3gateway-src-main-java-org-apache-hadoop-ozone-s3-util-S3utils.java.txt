HDDS-791. Support Range header for ozone s3 object download. Contributed by Bharat Viswanadham.

+import org.apache.hadoop.classification.InterfaceAudience;
-import java.nio.charset.StandardCharsets;
+import java.nio.charset.StandardCharsets;
+import java.util.regex.Matcher;
+
+import static org.apache.hadoop.ozone.s3.util.S3Consts
+    .RANGE_HEADER_MATCH_PATTERN;
+@InterfaceAudience.Private
+
+
+  /**
+   * Parse the rangeHeader and set the start and end offset.
+   * @param rangeHeaderVal
+   * @param length
+   *
+   * @return RangeHeader
+   */
+  public static RangeHeader parseRangeHeader(String rangeHeaderVal, long
+      length) {
+    long start = 0;
+    long end = 0;
+    boolean noStart = false;
+    boolean readFull = false;
+    boolean inValidRange = false;
+    RangeHeader rangeHeader;
+    Matcher matcher = RANGE_HEADER_MATCH_PATTERN.matcher(rangeHeaderVal);
+    if (matcher.matches()) {
+      if (!matcher.group("start").equals("")) {
+        start = Integer.parseInt(matcher.group("start"));
+      } else {
+        noStart = true;
+      }
+      if (!matcher.group("end").equals("")) {
+        end = Integer.parseInt(matcher.group("end"));
+      } else {
+        end = length - 1;
+      }
+      if (noStart) {
+        if (end < length) {
+          start = length - end;
+        } else {
+          start = 0;
+        }
+        end = length - 1;
+      } else {
+        if (start >= length)  {
+          readFull = true;
+          if (end >= length) {
+            inValidRange = true;
+          } else {
+            start = 0;
+            end = length - 1;
+          }
+        } else {
+          if (end >= length) {
+            end = length - 1;
+          }
+        }
+      }
+    } else {
+      // Byte specification is not matching or start and endoffset provided
+      // are not matching with regex.
+      start = 0;
+      end = length - 1;
+      readFull = true;
+    }
+    rangeHeader = new RangeHeader(start, end, readFull, inValidRange);
+    return rangeHeader;
+
+  }

INS26 INS26 INS26 INS40 INS40 INS40 INS78 INS31 INS40 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS8 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS39 INS42 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS25 INS21 INS41 INS66 INS42 INS42 INS66 INS42 INS39 INS59 INS39 INS59 INS39 INS59 INS39 INS59 INS39 INS59 INS43 INS59 INS43 INS59 INS32 INS8 INS8 INS7 INS42 INS42 INS34 INS42 INS34 INS42 INS9 INS42 INS9 INS42 INS9 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS25 INS25 INS25 INS21 INS21 INS21 INS42 INS14 INS42 INS42 INS42 INS38 INS8 INS8 INS38 INS8 INS8 INS42 INS8 INS8 INS7 INS7 INS7 INS43 INS42 INS42 INS42 INS42 INS32 INS21 INS21 INS32 INS21 INS21 INS25 INS21 INS25 INS42 INS34 INS42 INS27 INS42 INS9 INS42 INS32 INS42 INS45 INS7 INS7 INS32 INS42 INS45 INS7 INS7 INS27 INS8 INS8 INS7 INS27 INS8 INS8 INS42 INS34 INS42 INS42 INS45 INS42 INS32 INS42 INS9 INS42 INS42 INS45 INS42 INS32 INS42 INS27 INS42 INS42 INS21 INS21 INS42 INS27 INS42 INS42 INS21 INS25 INS25 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS34 INS7 INS7 INS42 INS34 INS7 INS27 INS8 INS8 INS27 INS8 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS27 INS42 INS34 INS42 INS9 INS42 INS42 INS21 INS21 INS21 INS42 INS42 INS21 INS42 INS42 INS7 INS7 INS7 INS7 INS42 INS9 INS42 INS34 INS42 INS27 INS42 INS27 INS42 INS34 INS42 INS34