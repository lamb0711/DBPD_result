YARN-5587. Add support for resource profiles. (vvasudev via asuresh)

+import org.apache.hadoop.yarn.proto.YarnProtos.ResourceProfilesProto;
+import org.apache.hadoop.yarn.proto.YarnProtos.ResourceProfileEntry;
+  private Map<String, Resource> profiles = null;
+    if (profiles != null) {
+      addResourceProfiles();
+    }
+  private void addResourceProfiles() {
+    maybeInitBuilder();
+    builder.clearResourceProfiles();
+    if (profiles == null) {
+      return;
+    }
+    ResourceProfilesProto.Builder profilesBuilder =
+        ResourceProfilesProto.newBuilder();
+    for (Map.Entry<String, Resource> entry : profiles.entrySet()) {
+      ResourceProfileEntry.Builder entryBuilder =
+          ResourceProfileEntry.newBuilder();
+      entryBuilder.setName(entry.getKey());
+      entryBuilder.setResources(convertToProtoFormat(entry.getValue()));
+      profilesBuilder.addResourceProfilesMap(entryBuilder.build());
+    }
+    builder.setResourceProfiles(profilesBuilder.build());
+  }
+
+  private void initResourceProfiles() {
+    if (this.profiles != null) {
+      return;
+    }
+    this.profiles = new HashMap<>();
+    RegisterApplicationMasterResponseProtoOrBuilder p =
+        viaProto ? proto : builder;
+
+    if (p.hasResourceProfiles()) {
+      ResourceProfilesProto profilesProto = p.getResourceProfiles();
+      for (ResourceProfileEntry entry : profilesProto
+          .getResourceProfilesMapList()) {
+        this.profiles
+            .put(entry.getName(), convertFromProtoFormat(entry.getResources()));
+      }
+    }
+  }
+
+  @Override
+  public Map<String, Resource> getResourceProfiles() {
+    initResourceProfiles();
+    return this.profiles;
+  }
+
+  @Override
+  public void setResourceProfiles(Map<String, Resource> profilesMap) {
+    if (profilesMap == null) {
+      return;
+    }
+    initResourceProfiles();
+    this.profiles.clear();
+    this.profiles.putAll(profilesMap);
+  }
+

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS31 INS31 INS83 INS74 INS59 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS8 INS78 INS83 INS74 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS43 INS43 INS43 INS42 INS33 INS25 INS21 INS21 INS25 INS60 INS70 INS21 INS25 INS21 INS60 INS25 INS42 INS43 INS43 INS43 INS21 INS41 INS42 INS74 INS42 INS25 INS21 INS21 INS21 INS42 INS42 INS42 INS27 INS8 INS32 INS32 INS27 INS8 INS43 INS59 INS44 INS32 INS8 INS32 INS27 INS8 INS7 INS43 INS59 INS32 INS8 INS42 INS42 INS42 INS32 INS22 INS43 INS43 INS43 INS27 INS8 INS32 INS32 INS32 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS33 INS41 INS40 INS42 INS32 INS74 INS42 INS42 INS42 INS60 INS21 INS21 INS21 INS42 INS42 INS32 INS22 INS33 INS41 INS22 INS14 INS42 INS42 INS16 INS42 INS42 INS60 INS70 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS33 INS41 INS42 INS22 INS42 INS22 INS42 INS42 INS32 INS42 INS42 INS43 INS43 INS43 INS43 INS59 INS32 INS32 INS32 INS42 INS42 INS52 INS42 INS52 INS42 INS74 INS42 INS42 INS42 INS43 INS59 INS44 INS32 INS8 INS52 INS42 INS52 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS22 INS42 INS32 INS32 INS52 INS42 INS42 INS42 INS42 INS32 INS42 INS42