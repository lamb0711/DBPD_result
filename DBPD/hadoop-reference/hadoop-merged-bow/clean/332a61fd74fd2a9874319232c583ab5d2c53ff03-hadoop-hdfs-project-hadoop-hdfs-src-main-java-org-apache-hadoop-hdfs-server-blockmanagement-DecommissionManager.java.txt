HDFS-10987. Make Decommission less expensive when lot of blocks present. Contributed by Brahma Reddy Battula.

+     * The number of blocks checked after (re)holding lock.
+     */
+    private int numBlocksCheckedPerLock = 0;
+    /**
+      numBlocksCheckedPerLock = 0;
-      while (it.hasNext() && !exceededNumBlocksPerCheck()) {
+      while (it.hasNext() && !exceededNumBlocksPerCheck() && namesystem
+          .isRunning()) {
+        if (insufficientList == null
+            && numBlocksCheckedPerLock >= numBlocksPerCheck) {
+          // During fullscan insufficientlyReplicated will NOT be null, iterator
+          // will be DN's iterator. So should not yield lock, otherwise
+          // ConcurrentModificationException could occur.
+          // Once the fullscan done, iterator will be a copy. So can yield the
+          // lock.
+          // Yielding is required in case of block number is greater than the
+          // configured per-iteration-limit.
+          namesystem.writeUnlock();
+          try {
+            LOG.debug("Yielded lock during decommission check");
+            Thread.sleep(0, 500);
+          } catch (InterruptedException ignored) {
+            return;
+          }
+          // reset
+          numBlocksCheckedPerLock = 0;
+          namesystem.writeLock();
+        }
+        numBlocksCheckedPerLock++;

INS23 INS29 INS83 INS39 INS59 INS65 INS42 INS34 INS21 INS66 INS7 INS42 INS34 INS32 INS25 INS21 INS42 INS42 INS27 INS8 INS37 INS27 INS27 INS21 INS54 INS21 INS21 INS42 INS42 INS33 INS42 INS42 INS32 INS8 INS12 INS7 INS32 INS42 INS42 INS21 INS21 INS44 INS8 INS42 INS34 INS42 INS42 INS32 INS32 INS43 INS42 INS41 INS42 INS42 INS45 INS42 INS42 INS34 INS34 INS42