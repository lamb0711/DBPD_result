HDFS-12882. Support full open(PathHandle) contract in HDFS

+import java.util.Optional;
-  private static final long serialVersionUID = 0xc5308795428L;
+  private static final long serialVersionUID = 0xc53087a5428L;
-  private final long inodeId;
+  private final String path;
+  private final Long mtime;
+  private final Long inodeId;
-  public HdfsPathHandle(HdfsFileStatus hstat) {
-    this(hstat.getFileId());
-  }
-
-  public HdfsPathHandle(long inodeId) {
-    this.inodeId = inodeId;
+  public HdfsPathHandle(String path,
+      Optional<Long> inodeId, Optional<Long> mtime) {
+    this.path = path;
+    this.mtime = mtime.orElse(null);
+    this.inodeId = inodeId.orElse(null);
-    inodeId = p.getInodeId();
+    path = p.getPath();
+    mtime = p.hasMtime()
+        ? p.getMtime()
+        : null;
+    inodeId = p.hasInodeId()
+        ? p.getInodeId()
+        : null;
-  public long getInodeId() {
-    return inodeId;
+  public String getPath() {
+    return path;
+  }
+
+  public void verify(HdfsLocatedFileStatus stat) throws IOException {
+    if (mtime != null && mtime != stat.getModificationTime()) {
+      throw new IOException("Content changed");
+    }
+    if (inodeId != null && inodeId != stat.getFileId()) {
+      throw new IOException("Wrong file");
+    }
-    return HdfsPathHandleProto.newBuilder()
-      .setInodeId(getInodeId())
-      .build()
-      .toByteString()
-      .asReadOnlyByteBuffer();
+    HdfsPathHandleProto.Builder b = HdfsPathHandleProto.newBuilder();
+    b.setPath(path);
+    if (inodeId != null) {
+      b.setInodeId(inodeId);
+    }
+    if (mtime != null) {
+      b.setMtime(mtime);
+    }
+    return b.build().toByteString().asReadOnlyByteBuffer();
-    return getInodeId() == o.getInodeId();
+    return getPath().equals(o.getPath());
-    return Long.hashCode(inodeId);
+    return path.hashCode();
-    sb.append("inodeId : ").append(Long.toString(getInodeId()));
+    sb.append("\"path\" : \"").append(path).append("\"");
+    if (inodeId != null) {
+      sb.append(",\"inodeId\" : ").append(inodeId);
+    }
+    if (mtime != null) {
+      sb.append(",\"mtime\" : ").append(mtime);
+    }

INS26 MOV31 INS40 INS23 INS23 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS83 INS43 MOV59 INS44 INS44 INS43 INS42 UPD39 UPD42 INS44 INS43 UPD34 INS42 INS42 INS42 INS42 INS42 UPD43 UPD42 INS74 INS42 INS74 INS42 INS21 INS21 MOV21 INS21 INS21 INS42 INS41 INS43 INS42 INS42 INS25 INS25 INS60 INS21 INS25 INS25 INS21 INS25 INS25 UPD42 INS43 INS43 INS43 INS43 INS7 INS7 INS7 INS7 INS42 INS42 INS27 INS8 INS27 INS8 INS43 INS59 INS32 INS27 INS8 INS27 INS8 INS32 INS32 INS27 INS8 INS27 INS8 INS42 INS42 INS42 INS42 INS22 INS42 INS22 INS32 INS32 INS42 INS32 INS42 INS16 INS16 INS27 INS27 INS53 INS27 INS27 INS53 INS40 INS42 MOV32 INS42 INS42 INS42 INS42 INS33 INS21 INS42 INS33 INS21 INS32 INS42 INS32 UPD42 INS32 INS42 INS45 INS42 INS33 INS21 INS42 INS33 INS21 INS52 INS42 INS52 INS42 UPD42 MOV42 UPD42 MOV42 INS33 INS42 INS42 INS33 INS42 INS42 INS32 INS32 INS33 INS32 MOV32 INS33 INS42 INS33 INS42 INS32 INS14 INS42 INS33 INS42 INS32 INS14 INS32 INS32 UPD42 MOV42 MOV42 UPD42 MOV42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS45 INS42 INS42 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS45 MOV32 MOV42 UPD42 MOV42 MOV32 INS42 INS42 INS42 INS42 UPD45 INS42 UPD42 INS45 DEL39 DEL42 DEL32 DEL17 DEL42 DEL39 DEL42 DEL44 DEL42 DEL41 DEL42 DEL32 DEL32 DEL32 DEL32 DEL27 DEL42 DEL42 DEL32 DEL32 DEL21