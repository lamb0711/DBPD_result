HDFS-2266.  Add Namesystem and SafeMode interfaces to avoid directly referring to FSNamesystem in BlockManager.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1160493 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.namenode.Namesystem;
-  private final FSNamesystem namesystem;
+  private final Namesystem namesystem;
-        conf, namesystem, datanodeManager.getNetworkTopology());
+        conf, fsn, datanodeManager.getNetworkTopology());
-   * @param fileINode file inode
+   * @return true if the block is changed to committed state.
-  private void commitBlock(INodeFileUnderConstruction fileINode,
-                       BlockInfoUnderConstruction block,
-                       Block commitBlock) throws IOException {
+  private boolean commitBlock(final BlockInfoUnderConstruction block,
+      final Block commitBlock) throws IOException {
-      return;
+      return false;
-
-    namesystem.updateDiskSpaceConsumed(fileINode, commitBlock);
+    return true;
+   * @return true if the last block is changed to committed state.
-  public void commitOrCompleteLastBlock(INodeFileUnderConstruction fileINode, 
+  public boolean commitOrCompleteLastBlock(INodeFileUnderConstruction fileINode, 
-    
-      return; // not committing, this is a block allocation retry
+      return false; // not committing, this is a block allocation retry
-      return; // no blocks in file yet
+      return false; // no blocks in file yet
-      return; // already completed (e.g. by syncBlock)
+      return false; // already completed (e.g. by syncBlock)
-    commitBlock(fileINode, (BlockInfoUnderConstruction)lastBlock, commitBlock);
-
+    final boolean b = commitBlock((BlockInfoUnderConstruction)lastBlock, commitBlock);
+    return b;
-  BlockInfo completeBlock(INodeFile fileINode, int blkIndex)
-  throws IOException {
+  private BlockInfo completeBlock(final INodeFile fileINode,
+      final int blkIndex) throws IOException {
-  BlockInfo completeBlock(INodeFile fileINode, BlockInfo block)
-  throws IOException {
+  private BlockInfo completeBlock(final INodeFile fileINode,
+      final BlockInfo block) throws IOException {
-    long fileLength = fileINode.computeContentSummary().getLength();
-    return createLocatedBlock(ucBlock, fileLength - ucBlock.getNumBytes());
+    final long fileLength = fileINode.computeContentSummary().getLength();
+    final long pos = fileLength - ucBlock.getNumBytes();
+    return createLocatedBlock(ucBlock, pos, AccessMode.WRITE);
-      final long offset, final long length, final int nrBlocksToReturn
-      ) throws IOException {
+      final long offset, final long length, final int nrBlocksToReturn,
+      final AccessMode mode) throws IOException {
-      results.add(createLocatedBlock(blocks[curBlk], curPos));
+      results.add(createLocatedBlock(blocks[curBlk], curPos, mode));
+  private LocatedBlock createLocatedBlock(final BlockInfo blk, final long pos,
+    final BlockTokenSecretManager.AccessMode mode) throws IOException {
+    final LocatedBlock lb = createLocatedBlock(blk, pos);
+    if (mode != null) {
+      setBlockToken(lb, mode);
+    }
+    return lb;
+  }
+
+      final AccessMode mode = needBlockToken? AccessMode.READ: null;
-          blocks, offset, length, Integer.MAX_VALUE);
+          blocks, offset, length, Integer.MAX_VALUE, mode);
-      final LocatedBlock lastlb = createLocatedBlock(last, lastPos);
-
-      if (isBlockTokenEnabled() && needBlockToken) {
-        for(LocatedBlock lb : locatedblocks) {
-          setBlockToken(lb, AccessMode.READ);
-        }
-        setBlockToken(lastlb, AccessMode.READ);
-      }
+      final LocatedBlock lastlb = createLocatedBlock(last, lastPos, mode);

INS26 INS40 INS31 UPD43 MOV65 UPD39 UPD39 INS83 INS83 INS44 INS83 MOV43 INS42 INS44 INS44 INS44 INS43 INS8 UPD42 UPD65 INS83 INS83 INS41 INS65 INS60 INS41 INS83 INS83 INS83 INS83 INS60 INS83 INS43 INS42 INS83 INS43 INS42 INS83 INS39 INS42 INS83 INS43 INS42 INS42 INS60 INS25 INS41 UPD66 INS9 INS66 INS83 INS39 INS59 INS42 INS83 INS83 INS39 INS59 INS42 INS42 INS40 INS83 INS43 INS59 INS27 INS8 INS42 INS9 INS9 INS9 INS9 INS42 MOV32 INS42 MOV27 INS42 INS40 INS42 INS42 INS32 INS42 INS33 INS21 UPD42 INS42 INS42 INS42 INS32 INS60 INS42 INS42 INS42 INS83 INS43 INS59 INS42 INS42 INS42 INS16 INS42 INS40 INS33 INS42 INS42 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL21 DEL42 DEL32 DEL42 DEL27 DEL42 DEL44 DEL42 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL70 DEL42 DEL42 DEL40 DEL32 DEL21 DEL8 DEL25