HDFS-8372. Erasure coding: compute storage type quotas for striped files, to be consistent with HDFS-8327. Contributed by Zhe Zhang.

+import org.apache.hadoop.hdfs.server.blockmanagement.BlockInfoUnderConstruction;
-  BlockInfoContiguousUnderConstruction removeLastBlock(Block oldblock) {
+  BlockInfoUnderConstruction removeLastBlock(Block oldblock) {
-      return null;
+      return sb.removeLastBlock(oldblock);
-      return computeQuotaUsageWithStriped(bsps, counts);
+      return computeQuotaUsageWithStriped(bsp, counts);
-   * Compute quota of striped file
+   * Compute quota of striped file. Note that currently EC files do not support
+   * append/hflush/hsync, thus the file length recorded in snapshots should be
+   * the same with the current file length.
-      BlockStoragePolicySuite bsps, QuotaCounts counts) {
-    return null;
+      BlockStoragePolicy bsp, QuotaCounts counts) {
+    counts.addNameSpace(1);
+    counts.add(storagespaceConsumed(bsp));
+    return counts;
-    QuotaCounts counts = new QuotaCounts.Builder().build();
-      return storagespaceConsumedWithStriped(bsp);
+      return storagespaceConsumedWithStriped();
-  public final QuotaCounts storagespaceConsumedWithStriped(
-      BlockStoragePolicy bsp) {
-    return  null;
+  // TODO: support EC with heterogeneous storage
+  public final QuotaCounts storagespaceConsumedWithStriped() {
+    QuotaCounts counts = new QuotaCounts.Builder().build();
+    BlockInfo[] blockInfos = getBlocks();
+    if (blockInfos == null || blockInfos.length == 0) {
+      return counts;
+    }
+
+    long size;
+    final int last = blockInfos.length - 1;
+    if (blockInfos[last] instanceof BlockInfoStripedUnderConstruction) {
+      BlockInfoStripedUnderConstruction blockInfoStripedUC
+          =(BlockInfoStripedUnderConstruction)blockInfos[last];
+      size = getPreferredBlockSize() * blockInfoStripedUC.getTotalBlockNum();
+    } else {
+      // In case of last block is complete
+      BlockInfoStriped blockInfoStriped = (BlockInfoStriped)blockInfos[last];
+      size = blockInfoStriped.spaceConsumed();
+    }
+    for (int i = 0; i < last; i++) {
+      BlockInfoStriped blockInfoStriped = (BlockInfoStriped)blockInfos[i];
+      size += blockInfoStriped.spaceConsumed();
+    }
+
+    counts.addStorageSpace(size);
+    return  counts;
-      BlockStoragePolicy bsp) {    QuotaCounts counts = new QuotaCounts.Builder().build();
+      BlockStoragePolicy bsp) {
+    QuotaCounts counts = new QuotaCounts.Builder().build();
+   * TODO: properly handle striped blocks (HDFS-7622)

INS26 INS40 UPD43 MOV44 INS8 INS8 UPD42 INS21 INS21 MOV41 MOV60 INS60 INS25 INS60 INS60 INS25 INS24 INS21 INS41 UPD66 INS66 INS66 INS32 INS32 INS42 INS5 INS59 INS27 INS8 INS39 INS59 INS83 INS39 INS59 INS62 INS8 INS8 INS58 INS27 INS37 INS8 INS32 INS42 INS66 INS42 INS42 INS34 INS42 INS42 INS32 INS43 INS85 INS42 INS32 INS27 INS27 MOV41 INS42 INS42 INS27 INS2 INS43 INS60 INS21 INS60 INS21 INS39 INS59 INS42 INS42 INS42 INS60 INS21 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS33 INS40 INS34 INS42 INS40 INS34 INS42 INS42 INS42 INS43 INS59 INS7 INS43 INS59 INS7 INS42 INS34 INS43 INS59 INS7 INS42 INS42 INS42 UPD42 INS42 INS42 INS11 INS42 INS27 INS42 INS42 INS11 INS42 INS32 INS42 INS42 INS11 INS42 INS32 INS43 INS2 INS32 INS32 INS43 INS2 INS42 INS42 INS43 INS2 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL33 DEL42 DEL43 DEL42 DEL44 DEL33 DEL8 DEL42 DEL33 DEL8