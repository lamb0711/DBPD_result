MAPREDUCE-3360. Added information about lost/rebooted/decommissioned nodes on the webapps. Contributed by Bhallamudi Venkata Siva Kamesh and Jason Lowe.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236433 13f79535-47bb-0310-9956-ffa450edef68

+  
+  public static List<RMNode> lostNodes(int racks, int nodesPerRack,
+      Resource perNode) {
+    List<RMNode> list = Lists.newArrayList();
+    for (int i = 0; i < racks; ++i) {
+      for (int j = 0; j < nodesPerRack; ++j) {
+        list.add(lostNodeInfo(i, perNode, RMNodeState.LOST));
+      }
+    }
+    return list;
+  }
-  public static RMNode newNodeInfo(int rack, final Resource perNode) {
+  private static class MockRMNodeImpl implements RMNode {
+    private NodeId nodeId;
+    private String hostName;
+    private String nodeAddr;
+    private String httpAddress;
+    private int cmdPort;
+    private Resource perNode;
+    private String rackName;
+    private NodeHealthStatus nodeHealthStatus;
+    private RMNodeState state;
+
+    public MockRMNodeImpl(NodeId nodeId, String nodeAddr, String httpAddress,
+        Resource perNode, String rackName, NodeHealthStatus nodeHealthStatus,
+        int cmdPort, String hostName, RMNodeState state) {
+      this.nodeId = nodeId;
+      this.nodeAddr = nodeAddr;
+      this.httpAddress = httpAddress;
+      this.perNode = perNode;
+      this.rackName = rackName;
+      this.nodeHealthStatus = nodeHealthStatus;
+      this.cmdPort = cmdPort;
+      this.hostName = hostName;
+      this.state = state;
+    }
+
+    @Override
+    public NodeId getNodeID() {
+      return this.nodeId;
+    }
+
+    @Override
+    public String getHostName() {
+      return this.hostName;
+    }
+
+    @Override
+    public int getCommandPort() {
+      return this.cmdPort;
+    }
+
+    @Override
+    public int getHttpPort() {
+      return 0;
+    }
+
+    @Override
+    public String getNodeAddress() {
+      return this.nodeAddr;
+    }
+
+    @Override
+    public String getHttpAddress() {
+      return this.httpAddress;
+    }
+
+    @Override
+    public NodeHealthStatus getNodeHealthStatus() {
+      return this.nodeHealthStatus;
+    }
+
+    @Override
+    public Resource getTotalCapability() {
+      return this.perNode;
+    }
+
+    @Override
+    public String getRackName() {
+      return this.rackName;
+    }
+
+    @Override
+    public Node getNode() {
+      throw new UnsupportedOperationException("Not supported yet.");
+    }
+
+    @Override
+    public RMNodeState getState() {
+      return this.state;
+    }
+
+    @Override
+    public List<ContainerId> getContainersToCleanUp() {
+      return null;
+    }
+
+    @Override
+    public List<ApplicationId> getAppsToCleanup() {
+      return null;
+    }
+
+    @Override
+    public HeartbeatResponse getLastHeartBeatResponse() {
+      return null;
+    }
+  };
+
+  private static RMNode buildRMNode(int rack, final Resource perNode, RMNodeState state, String httpAddr) {
-    final String httpAddress = "localhost:0";
+    final String httpAddress = httpAddr;
-    final Resource used = newUsedResource(perNode);
-    final Resource avail = newAvailResource(perNode, used);
-    return new RMNode() {
-      @Override
-      public NodeId getNodeID() {
-        return nodeID;
-      }
+    return new MockRMNodeImpl(nodeID, hostName, httpAddress, perNode, rackName,
+        nodeHealthStatus, nid, hostName, state); 
+  }
-      @Override
-      public String getNodeAddress() {
-        return hostName;
-      }
+  public static RMNode lostNodeInfo(int rack, final Resource perNode, RMNodeState state) {
+    return buildRMNode(rack, perNode, state, "N/A");
+  }
-      @Override
-      public String getHttpAddress() {
-        return httpAddress;
-      }
-
-      @Override
-      public Resource getTotalCapability() {
-        return perNode;
-      }
-
-      @Override
-      public String getRackName() {
-        return rackName;
-      }
-
-      @Override
-      public Node getNode() {
-        throw new UnsupportedOperationException("Not supported yet.");
-      }
-
-      @Override
-      public NodeHealthStatus getNodeHealthStatus() {
-        return nodeHealthStatus;
-      }
-
-      @Override
-      public int getCommandPort() {
-        return nid;
-      }
-
-      @Override
-      public int getHttpPort() {
-        // TODO Auto-generated method stub
-        return 0;
-      }
-
-      @Override
-      public String getHostName() {
-        return hostName;
-      }
-
-      @Override
-      public RMNodeState getState() {
-        // TODO Auto-generated method stub
-        return null;
-      }
-
-      @Override
-      public List<ApplicationId> getAppsToCleanup() {
-        // TODO Auto-generated method stub
-        return null;
-      }
-
-      @Override
-      public List<ContainerId> getContainersToCleanUp() {
-        // TODO Auto-generated method stub
-        return null;
-      }
-
-      @Override
-      public HeartbeatResponse getLastHeartBeatResponse() {
-        // TODO Auto-generated method stub
-        return null;
-      }
-    };
+  public static RMNode newNodeInfo(int rack, final Resource perNode) {
+    return buildRMNode(rack, perNode, null, "localhost:0");

INS31 INS55 INS31 INS31 INS31 MOV83 MOV83 INS74 INS42 INS44 INS44 INS44 INS8 INS83 INS83 INS42 MOV43 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS23 INS31 INS31 INS31 INS31 MOV31 INS31 INS31 INS31 INS31 INS31 MOV31 INS31 MOV31 MOV31 MOV31 INS83 UPD83 MOV83 MOV43 UPD42 MOV42 MOV44 MOV44 INS44 INS44 MOV8 MOV83 INS83 INS43 UPD42 MOV42 INS44 INS44 INS44 MOV8 MOV83 INS83 INS43 INS42 INS44 INS44 MOV8 INS43 INS43 INS39 INS42 INS39 INS42 INS43 INS42 INS60 INS24 INS41 INS83 INS43 INS59 INS83 MOV43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS39 INS59 INS83 MOV43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS43 INS59 INS83 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS44 INS8 MOV78 MOV83 MOV43 MOV42 MOV8 MOV78 MOV83 MOV43 UPD42 MOV42 MOV8 MOV78 INS83 INS39 INS42 INS8 MOV78 INS83 MOV43 INS42 INS8 MOV78 MOV83 MOV43 MOV42 MOV8 MOV78 INS83 MOV43 INS42 INS8 MOV78 MOV83 MOV43 MOV42 MOV8 MOV78 MOV83 MOV43 MOV42 MOV8 MOV78 MOV83 MOV43 UPD42 MOV42 MOV8 INS43 INS42 INS43 INS42 MOV60 MOV60 MOV60 MOV60 MOV60 INS60 MOV60 INS42 INS39 INS42 INS83 INS43 INS42 INS43 INS42 INS42 INS39 INS42 INS83 INS43 INS42 INS42 INS42 INS42 INS74 INS59 INS58 INS27 INS38 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS43 INS42 MOV43 INS42 INS43 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS43 INS42 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS41 INS41 INS41 INS42 INS42 INS83 INS43 INS59 INS14 INS42 INS42 INS32 INS42 INS32 INS43 INS43 INS42 INS32 INS39 INS59 INS42 INS42 INS42 INS24 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS22 INS22 INS22 INS22 INS22 INS22 INS22 INS22 INS22 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS33 INS45 INS42 INS42 INS42 INS42 INS42 INS34 INS58 INS27 INS38 INS8 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS22 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS39 INS59 INS42 INS42 INS42 INS21 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS42 INS34 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS40 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL33 DEL42 DEL83 DEL45 DEL59 DEL60 DEL83 DEL42 DEL42 DEL32 DEL59 DEL60 DEL83 DEL42 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL31 DEL31 DEL31 DEL31 DEL31 DEL31 DEL39 DEL31 DEL31 DEL42 DEL31 DEL1 DEL14 DEL41 DEL8 DEL31