HDFS-9730. Storage ID update does not happen when there is a layout change. Contributed by  Tsz Wo Nicholas Sze.

-    if (sd.getStorageUuid() == null) {
-      // Assign a new Storage UUID.
-      sd.setStorageUuid(DatanodeStorage.generateUuid());
-    }
-
+    createStorageID(sd, false);
-      doUpgrade(sd, nsInfo, conf);  // upgrade
+      if (federationSupported) {
+        // If the existing on-disk layout version supports federation,
+        // simply update the properties.
+        upgradeProperties(sd);
+      } else {
+        doUpgradePreFederation(sd, nsInfo, conf);
+      }
-   * Upgrade -- Move current storage into a backup directory,
+   * Upgrade from a pre-federation layout.
+   * Move current storage into a backup directory,
-   * @throws IOException on error
-  void doUpgrade(final StorageDirectory sd, final NamespaceInfo nsInfo,
-      final Configuration conf) throws IOException {
-    // If the existing on-disk layout version supportes federation, simply
-    // update its layout version.
-    if (DataNodeLayoutVersion.supports(
-        LayoutVersion.Feature.FEDERATION, layoutVersion)) {
-      // The VERSION file is already read in. Override the layoutVersion 
-      // field and overwrite the file. The upgrade work is handled by
-      // {@link BlockPoolSliceStorage#doUpgrade}
-      LOG.info("Updating layout version from " + layoutVersion + " to "
-          + HdfsServerConstants.DATANODE_LAYOUT_VERSION + " for storage "
-          + sd.getRoot());
-      layoutVersion = HdfsServerConstants.DATANODE_LAYOUT_VERSION;
-      writeProperties(sd);
-      return;
-    }
-    
+  void doUpgradePreFederation(final StorageDirectory sd,
+      final NamespaceInfo nsInfo, final Configuration conf) throws IOException {
-    layoutVersion = HdfsServerConstants.DATANODE_LAYOUT_VERSION;
-    writeProperties(sd);
+    upgradeProperties(sd);
+  }
+  void upgradeProperties(StorageDirectory sd) throws IOException {
+    LOG.info("Updating layout version from " + layoutVersion
+        + " to " + HdfsServerConstants.DATANODE_LAYOUT_VERSION
+        + " for storage " + sd.getRoot());
+    layoutVersion = HdfsServerConstants.DATANODE_LAYOUT_VERSION;
+    writeProperties(sd);

INS31 UPD42 INS39 INS42 INS44 INS43 MOV8 MOV21 INS25 INS43 INS42 INS42 MOV21 INS32 MOV27 INS8 INS66 UPD66 INS42 UPD42 MOV42 UPD42 MOV42 INS9 MOV25 MOV41 UPD42 INS42 INS8 INS21 INS32 INS42 INS42 UPD42 DEL42 DEL42 DEL32 DEL32 DEL42 DEL42 DEL32 DEL33 DEL27 DEL8 DEL25 DEL42 DEL66 DEL65 DEL42 DEL42 DEL40 DEL42 DEL32 DEL25 DEL42 DEL40 DEL7 DEL21 DEL41