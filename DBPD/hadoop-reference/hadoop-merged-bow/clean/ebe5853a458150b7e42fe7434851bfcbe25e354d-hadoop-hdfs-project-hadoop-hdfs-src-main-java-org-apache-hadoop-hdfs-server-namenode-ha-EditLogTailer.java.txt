HDFS-12978. Fine-grained locking while consuming journal stream. Contributed by Konstantin Shvachko.
-  
+
+  /**
+   * StandbyNode will hold namesystem lock to apply at most this many journal
+   * transactions.
+   * It will then release the lock and re-acquire it to load more transactions.
+   * By default the write lock is held for the entire journal segment.
+   * Fine-grained locking allows read requests to get through.
+   */
+  public static final String  DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_KEY =
+      "dfs.ha.tail-edits.max-txns-per-lock";
+  public static final long DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT =
+      Long.MAX_VALUE;
+
+  /**
+   * Release the namesystem lock after loading this many transactions.
+   * Then re-acquire the lock to load more edits.
+   */
+  private final long maxTxnsPerLock;
+
+    this.maxTxnsPerLock = conf.getLong(
+        DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_KEY,
+        DFS_HA_TAILEDITS_MAX_TXNS_PER_LOCK_DEFAULT);
+
-        editsLoaded = image.loadEdits(streams, namesystem);
+        editsLoaded = image.loadEdits(
+            streams, namesystem, maxTxnsPerLock, null, null);

INS23 INS23 INS23 INS29 INS83 INS83 INS83 INS43 INS59 INS83 INS83 INS83 INS39 INS59 INS29 INS83 INS83 INS39 INS59 INS65 INS42 INS42 INS45 INS42 INS40 INS65 INS42 INS21 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS7 INS22 INS32 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS33