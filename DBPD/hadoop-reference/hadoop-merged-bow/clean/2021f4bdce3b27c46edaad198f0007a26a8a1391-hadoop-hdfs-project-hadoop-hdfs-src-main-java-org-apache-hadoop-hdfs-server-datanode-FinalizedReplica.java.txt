HDFS-11187. Optimize disk access for last partial chunk checksum of Finalized replica. Contributed by Wei-Chiu Chuang.

-import java.io.FileNotFoundException;
-
+  private byte[] lastPartialChunkChecksum;
-   * Constructor
+   * Constructor.
-    super(blockId, len, genStamp, vol, dir);
+    this(blockId, len, genStamp, vol, dir, null);
-  
+
+  /**
+   * Constructor.
+   * @param blockId block id
+   * @param len replica length
+   * @param genStamp replica generation stamp
+   * @param vol volume where replica is located
+   * @param dir directory path where block and meta files are located
+   * @param checksum the last partial chunk checksum
+   */
+  public FinalizedReplica(long blockId, long len, long genStamp,
+      FsVolumeSpi vol, File dir, byte[] checksum) {
+    super(blockId, len, genStamp, vol, dir);
+    this.setLastPartialChunkChecksum(checksum);
+  }
+
+    this(block, vol, dir, null);
+  }
+
+  /**
+   * Constructor
+   * @param block a block
+   * @param vol volume where replica is located
+   * @param dir directory path where block and meta files are located
+   * @param checksum the last partial chunk checksum
+   */
+  public FinalizedReplica(Block block, FsVolumeSpi vol, File dir,
+      byte[] checksum) {
+    this.setLastPartialChunkChecksum(checksum);
+    this.setLastPartialChunkChecksum(from.getLastPartialChunkChecksum());
-  /**
-   * gets the last chunk checksum and the length of the block corresponding
-   * to that checksum.
-   * Note, need to be called with the FsDataset lock acquired. May improve to
-   * lock only the FsVolume in the future.
-   * @throws IOException
-   */
-  public ChunkChecksum getLastChecksumAndDataLen() throws IOException {
-    ChunkChecksum chunkChecksum = null;
-    try {
-      byte[] lastChecksum = getVolume().loadLastPartialChunkChecksum(
-          getBlockFile(), getMetaFile());
-      if (lastChecksum != null) {
-        chunkChecksum =
-            new ChunkChecksum(getVisibleLength(), lastChecksum);
-      }
-    } catch (FileNotFoundException e) {
-      // meta file is lost. Try to continue anyway.
-      DataNode.LOG.warn("meta file " + getMetaFile() +
-          " is missing!");
-    } catch (IOException ioe) {
-      DataNode.LOG.warn("Unable to read checksum from meta file " +
-          getMetaFile(), ioe);
-    }
-    return chunkChecksum;
+  public byte[] getLastPartialChunkChecksum() {
+    return lastPartialChunkChecksum;
+  }
+
+  public void setLastPartialChunkChecksum(byte[] checksum) {
+    lastPartialChunkChecksum = checksum;
+  }
+
+  public void loadLastPartialChunkChecksum()
+      throws IOException {
+    byte[] lastChecksum = getVolume().loadLastPartialChunkChecksum(
+        getBlockFile(), getMetaFile());
+    setLastPartialChunkChecksum(lastChecksum);

INS23 INS31 INS31 INS31 INS31 INS31 INS83 INS5 INS59 MOV29 INS83 INS42 INS44 INS44 INS44 INS44 INS44 INS8 INS29 INS44 INS8 MOV29 MOV83 INS42 INS44 INS44 INS44 INS44 MOV8 INS83 INS5 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 MOV43 MOV8 INS39 INS85 INS42 INS65 INS65 INS65 INS39 INS42 INS39 INS42 INS39 INS42 INS43 INS42 INS43 INS42 INS17 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS5 INS42 INS21 INS17 MOV65 UPD65 MOV65 MOV65 UPD65 INS43 INS42 INS43 INS42 UPD43 MOV43 UPD42 MOV42 INS5 INS42 INS21 INS21 INS39 INS85 INS41 INS5 INS42 MOV21 MOV21 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS39 INS85 INS32 INS42 INS42 INS42 INS33 INS42 UPD66 UPD42 INS66 UPD42 MOV42 UPD42 MOV42 UPD42 INS39 INS85 INS32 INS32 INS42 INS39 INS85 INS7 INS32 INS52 INS42 INS42 INS52 INS42 INS42 INS52 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL66 DEL66 DEL66 DEL40 DEL42 DEL45 DEL42 DEL32 DEL27 DEL42 DEL32 DEL42 DEL42 DEL43 DEL42 DEL32 DEL42 DEL14 DEL7 DEL42 DEL33 DEL27 DEL8 DEL25 DEL43 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL44 DEL40 DEL42 DEL45 DEL42 DEL32 DEL45 DEL27 DEL32 DEL21 DEL8 DEL12 DEL42 DEL43 DEL42 DEL44 DEL8 DEL12 DEL54 DEL42 DEL41 DEL8 DEL31