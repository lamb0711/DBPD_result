HDDS-845. Create a new raftClient instance for every watch request for Ratis. Contributed by Shashikant Banerjee.

-      try {
-        c.close();
-      } catch (IOException e) {
-        throw new IllegalStateException(e);
-      }
+      closeRaftClient(c);
+    }
+  }
+
+  private void closeRaftClient(RaftClient raftClient) {
+    try {
+      raftClient.close();
+    } catch (IOException e) {
+      throw new IllegalStateException(e);
-      throws InterruptedException, ExecutionException, TimeoutException {
-    // TODO: Create a new Raft client instance to watch
-    CompletableFuture<RaftClientReply> replyFuture = getClient()
+      throws InterruptedException, ExecutionException, TimeoutException,
+      IOException {
+    LOG.debug("commit index : {} watch timeout : {}", index, timeout);
+    // create a new RaftClient instance for watch request
+    RaftClient raftClient =
+        RatisHelper.newRaftClient(rpcType, getPipeline(), retryPolicy);
+    CompletableFuture<RaftClientReply> replyFuture = raftClient
-      getClient()
+
+      closeRaftClient(raftClient);
+      // generate a new raft client instance again so that next watch request
+      // does not get blocked for the previous one
+
+      // TODO : need to remove the code to create the new RaftClient instance
+      // here once the watch request bypassing sliding window in Raft Client
+      // gets fixed.
+      raftClient =
+          RatisHelper.newRaftClient(rpcType, getPipeline(), retryPolicy);
+      raftClient
+    } finally {
+      closeRaftClient(raftClient);

INS31 MOV78 INS83 INS39 INS42 MOV8 UPD83 UPD42 INS44 MOV8 INS43 INS43 INS42 INS42 INS21 INS60 INS8 INS42 INS32 INS43 INS59 INS8 INS21 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS32 INS21 INS32 INS42 INS42 INS42 INS32 INS42 UPD42 MOV42 INS21 INS21 INS32 INS42 INS42 UPD42 INS42 INS32 INS7 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 UPD42 MOV42 INS42 DEL32 DEL32