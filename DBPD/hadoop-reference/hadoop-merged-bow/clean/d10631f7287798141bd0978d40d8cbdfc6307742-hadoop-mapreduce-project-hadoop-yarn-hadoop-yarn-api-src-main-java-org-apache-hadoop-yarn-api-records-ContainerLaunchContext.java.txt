Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1166495 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.classification.InterfaceAudience.Private;
+import org.apache.hadoop.classification.InterfaceAudience.Public;
+import org.apache.hadoop.classification.InterfaceStability.Stable;
+import org.apache.hadoop.classification.InterfaceStability.Unstable;
+import org.apache.hadoop.yarn.api.ContainerManager;
+
+/**
+ * <p><code>ContainerLaunchContext</code> represents the all of the information
+ * needed by the <code>NodeManager</code> to launch a container.</p>
+ * 
+ * <p>It includes details such as:
+ *   <ul>
+ *     <li>{@link ContainerId} of the container.</li>
+ *     <li>{@link Resource} allocated to the container.</li>
+ *     <li>User to whom the container is allocated.</li>
+ *     <li>Security tokens (if security is enabled).</li>
+ *     <li>
+ *       {@link LocalResource} necessary for running the container such
+ *       as binaries, jar, shared-objects, side-files etc. 
+ *     </li>
+ *     <li>Optional, application-specific binary service data.</li>
+ *     <li>Environment variables for the launched process.</li>
+ *     <li>Command to launch the container.</li>
+ *   </ul>
+ * </p>
+ * 
+ * @see ContainerManager#startContainer(org.apache.hadoop.yarn.api.protocolrecords.StartContainerRequest)
+ */
+@Public
+@Stable
+  /**
+   * Get <code>ContainerId</code> of container to be launched.
+   * @return <code>ContainerId</code> of container to be launched
+   */
+  @Public
+  @Stable
+
+  /**
+   * Set <code>ContainerId</code> of container to be launched.
+   * @param containerId et <code>ContainerId</code> of container to be launched
+   */
+  @Public
+  @Stable
+  void setContainerId(ContainerId containerId);
+
+  /**
+   * Get the <em>user</em> to whom the container has been allocated.
+   * @return the <em>user</em> to whom the container has been allocated
+   */
+  @Public
+  @Stable
+  
+  /**
+   * Set the <em>user</em> to whom the container has been allocated
+   * @param user <em>user</em> to whom the container has been allocated
+   */
+  @Public
+  @Stable
+  void setUser(String user);
+
+  /**
+   * Get the <code>Resource</code> allocated to the container by the
+   * <code>ResourceManager</code>.
+   * @return <code>Resource</code> allocated to the container by the
+   *         <code>ResourceManager</code>
+   */
+  @Public
+  @Stable
-  
-  Map<String, LocalResource> getAllLocalResources();
-  LocalResource getLocalResource(String key);
-  
-  
+
+  /**
+   * Set the <code>Resource</code> allocated to the container by the
+   * <code>ResourceManager</code>.
+   * @param resource allocated resource
+   */
+  @Public
+  @Stable
+  void setResource(Resource resource);
+
+  /**
+   * Get security tokens (if security is enabled).
+   * @return security tokens (if security is enabled)
+   */
+  @Public
+  @Stable
+
+  /**
+   * Set security tokens (if security is enabled).
+   * @param containerToken security tokens 
+   */
+  @Public
+  @Stable
+  void setContainerTokens(ByteBuffer containerToken);
+
+  /**
+   * Get all <code>LocalResource</code> required by the container.
+   * @return all <code>LocalResource</code> required by the container
+   */
+  @Public
+  @Stable
+  Map<String, LocalResource> getAllLocalResources();
+  @Private
+  @Unstable
+  LocalResource getLocalResource(String key);
+
+  /**
+   * Add all <code>LocalResource</code> required by the container.
+   * @param localResources <code>LocalResource</code> required by the container
+   */
+  @Public
+  @Stable
+  void addAllLocalResources(Map<String, LocalResource> localResources);
+
+  @Private
+  @Unstable
+  void setLocalResource(String key, LocalResource value);
+
+  @Private
+  @Unstable
+  void removeLocalResource(String key);
+
+  @Private
+  @Unstable
+  void clearLocalResources();
+
+  /**
+   * Get application-specific binary service data.
+   * @return application-specific binary service data
+   */
+  @Public
+  @Stable
-  ByteBuffer getServiceData(String key);
+  @Private
+  @Unstable
+  ByteBuffer getServiceData(String key);
+
+  /**
+   * Add add application-specific binary service data.
+   * @param serviceData application-specific binary service data
+   */
+  @Public
+  @Stable
+  void addAllServiceData(Map<String, ByteBuffer> serviceData);
+
+  @Private
+  @Unstable
+  void setServiceData(String key, ByteBuffer value);
+
+  @Private
+  @Unstable
+  void removeServiceData(String key);
+
+  @Private
+  @Unstable
+  void clearServiceData();
+
+  /**
+   * Get <em>environment variables</em> for the launched container.
+   * @return <em>environment variables</em> for the launched container
+   */
+  @Public
+  @Stable
+  
+  @Private
+  @Unstable
+  /**
+   * Add <em>environment variables</em> for the launched container.
+   * @param env <em>environment variables</em> for the launched container
+   */
+  @Public
+  @Stable
+  void addAllEnv(Map<String, String> env);
+
+  @Private
+  @Unstable
+  void setEnv(String key, String value);
+
+  @Private
+  @Unstable
+  void removeEnv(String key);
+
+  @Private
+  @Unstable
+  void clearEnv();
+
+  /**
+   * Get the list of <em>commands</em> for launching the container.
+   * @return the list of <em>commands</em> for launching the container
+   */
+  @Public
+  @Stable
+  
+  @Private
+  @Unstable
+  
+  @Private
+  @Unstable
-  void setContainerId(ContainerId containerId);
-  void setUser(String user);
-  void setResource(Resource resource);
-  
-  void addAllLocalResources(Map<String, LocalResource> localResources);
-  void setLocalResource(String key, LocalResource value);
-  void removeLocalResource(String key);
-  void clearLocalResources();
-  
-  void setContainerTokens(ByteBuffer containerToken);
-  
-  void addAllServiceData(Map<String, ByteBuffer> serviceData);
-  void setServiceData(String key, ByteBuffer value);
-  void removeServiceData(String key);
-  void clearServiceData();
-  
-  void addAllEnv(Map<String, String> env);
-  void setEnv(String key, String value);
-  void removeEnv(String key);
-  void clearEnv();
-  
+  /**
+   * Add the list of <em>commands</em> for launching the container.
+   * @param commands the list of <em>commands</em> for launching the container
+   */
+  @Public
+  @Stable
+  
+  @Private
+  @Unstable
+  
+  @Private
+  @Unstable
+  
+  @Private
+  @Unstable

INS26 INS26 INS26 INS26 INS26 MOV31 MOV31 MOV31 MOV31 MOV31 MOV31 MOV31 MOV31 MOV31 MOV31 MOV31 INS40 INS40 INS40 INS40 INS40 INS29 INS78 INS78 INS31 INS31 INS31 INS65 INS65 INS42 INS42 INS29 INS78 INS78 INS29 INS78 INS78 INS39 UPD42 MOV42 MOV44 INS29 INS78 INS78 MOV43 UPD42 INS29 INS78 INS78 INS39 INS42 MOV44 INS29 INS78 INS78 MOV43 UPD42 INS29 INS78 INS78 UPD42 MOV44 INS29 INS78 INS78 MOV43 INS42 INS29 INS78 INS78 UPD42 MOV44 INS29 INS78 INS78 INS78 INS78 INS29 INS78 INS78 INS78 INS78 INS78 INS78 UPD42 INS78 INS78 INS29 INS78 INS78 INS78 INS78 MOV43 UPD42 INS29 INS78 INS78 INS78 INS78 INS78 INS78 UPD42 INS78 INS78 UPD42 INS29 INS78 INS78 INS78 INS78 MOV43 INS42 MOV44 INS29 INS78 INS78 INS78 INS78 INS78 INS78 INS39 INS42 INS78 INS78 UPD42 INS29 INS78 INS78 INS78 INS78 MOV43 INS42 MOV44 INS78 INS78 UPD39 UPD42 INS29 INS78 INS78 INS78 INS78 INS78 INS78 MOV44 INS78 INS78 INS66 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS68 INS65 INS65 INS42 INS42 INS65 INS65 INS42 INS42 INS65 INS65 INS42 INS42 INS65 INS65 INS42 INS42 INS65 INS65 INS42 INS42 INS65 INS65 INS42 INS42 INS65 INS65 INS42 INS42 INS65 INS65 INS42 INS42 INS65 INS65 INS42 INS42 INS42 INS42 INS65 INS65 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS65 INS65 INS42 INS42 INS42 INS42 INS65 INS65 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS65 INS65 INS42 INS42 INS42 INS42 INS65 INS65 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS65 INS65 INS42 INS42 INS42 INS42 INS42 INS42 INS65 INS65 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS69 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS42 INS66 INS66 INS66 INS66 INS42 INS66 INS43 INS40 DEL42 DEL31 DEL42 DEL31 DEL31 DEL42 DEL39 DEL39 DEL42 DEL39 DEL42