Revert "HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen."

This reverts commit 064c8b25eca9bc825dc07a54d9147d65c9290a03.

-
-import java.util.LinkedList;
-    LinkedList<CopyListingFileStatus> fileCopyListingStatus =
+    CopyListingFileStatus fileCopyListingStatus =
-            preserveAcls, preserveXAttrs, preserveRawXAttrs,
-            options.getBlocksPerChunk());
+            preserveAcls, preserveXAttrs, preserveRawXAttrs);
+
-          LinkedList<CopyListingFileStatus> rootCopyListingStatus =
-              DistCpUtils.toCopyListingFileStatus(sourceFS, rootStatus,
-                  preserveAcls, preserveXAttrs, preserveRawXAttrs,
-                  options.getBlocksPerChunk());
+          CopyListingFileStatus rootCopyListingStatus =
+            DistCpUtils.toCopyListingFileStatus(sourceFS, rootStatus,
+                preserveAcls, preserveXAttrs, preserveRawXAttrs);
-            LinkedList<CopyListingFileStatus> sourceCopyListingStatus =
-                DistCpUtils.toCopyListingFileStatus(sourceFS, sourceStatus,
-                    preserveAcls && sourceStatus.isDirectory(),
-                    preserveXAttrs && sourceStatus.isDirectory(),
-                    preserveRawXAttrs && sourceStatus.isDirectory(),
-                    options.getBlocksPerChunk());
-            for (CopyListingFileStatus fs : sourceCopyListingStatus) {
-              if (randomizeFileListing) {
-                addToFileListing(statusList,
-                    new FileStatusInfo(fs, sourcePathRoot), fileListWriter);
-              } else {
-                writeToFileListing(fileListWriter, fs, sourcePathRoot);
-              }
+            CopyListingFileStatus sourceCopyListingStatus =
+              DistCpUtils.toCopyListingFileStatus(sourceFS, sourceStatus,
+                  preserveAcls && sourceStatus.isDirectory(),
+                  preserveXAttrs && sourceStatus.isDirectory(),
+                  preserveRawXAttrs && sourceStatus.isDirectory());
+            if (randomizeFileListing) {
+              addToFileListing(statusList,
+                  new FileStatusInfo(sourceCopyListingStatus, sourcePathRoot),
+                  fileListWriter);
+            } else {
+              writeToFileListing(fileListWriter, sourceCopyListingStatus,
+                  sourcePathRoot);
+
-            LinkedList<CopyListingFileStatus> childCopyListingStatus =
+            CopyListingFileStatus childCopyListingStatus =
-                preserveRawXattrs && child.isDirectory(),
-                options.getBlocksPerChunk());
-
-            for (CopyListingFileStatus fs : childCopyListingStatus) {
-              if (randomizeFileListing) {
-                addToFileListing(fileStatuses,
-                    new FileStatusInfo(fs, sourcePathRoot), fileListWriter);
-              } else {
-                writeToFileListing(fileListWriter, fs, sourcePathRoot);
-              }
+                preserveRawXattrs && child.isDirectory());
+            if (randomizeFileListing) {
+              addToFileListing(fileStatuses,
+                  new FileStatusInfo(childCopyListingStatus, sourcePathRoot),
+                  fileListWriter);
+            } else {
+              writeToFileListing(fileListWriter, childCopyListingStatus,
+                  sourcePathRoot);
-      LinkedList<CopyListingFileStatus> fileStatus, Path sourcePathRoot,
+      CopyListingFileStatus fileStatus, Path sourcePathRoot,
-    for (CopyListingFileStatus fs : fileStatus) {
-      if (fs.getPath().equals(sourcePathRoot) &&
-          fs.isDirectory() && syncOrOverwrite) {
-        // Skip the root-paths when syncOrOverwrite
-        if (LOG.isDebugEnabled()) {
-          LOG.debug("Skip " + fs.getPath());
-        }
-        return;
-      }
-      writeToFileListing(fileListWriter, fs, sourcePathRoot);
+    if (fileStatus.getPath().equals(sourcePathRoot) && 
+        fileStatus.isDirectory() && syncOrOverwrite) {
+      // Skip the root-paths when syncOrOverwrite
+      if (LOG.isDebugEnabled()) {
+        LOG.debug("Skip " + fileStatus.getPath());
+      }      
+      return;
+    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot);
-      totalBytesToCopy += fileStatus.getSizeToCopy();
+      totalBytesToCopy += fileStatus.getLen();

MOV8 INS8 MOV60 MOV60 MOV60 MOV6 MOV25 MOV60 MOV24 MOV70 INS61 MOV21 INS43 MOV60 MOV25 MOV21 MOV43 MOV32 MOV8 MOV32 MOV42 INS54 UPD42 MOV42 UPD42 MOV8 MOV12 UPD42 MOV60 MOV60 INS70 UPD42 MOV44 MOV32 MOV8 INS21 UPD42 MOV25 INS25 MOV25 INS32 MOV43 MOV32 MOV8 INS42 INS42 MOV45 MOV42 MOV25 MOV60 UPD42 MOV43 MOV43 MOV42 UPD42 UPD42 UPD42 UPD42 UPD42 MOV42 DEL40 DEL26 DEL42 DEL43 DEL74 DEL42 DEL42 DEL32 DEL42 DEL43 DEL43 DEL74 DEL42 DEL42 DEL32 DEL42 DEL43 DEL43 DEL74 DEL42 DEL42 DEL32 DEL42 DEL44 DEL42 DEL8 DEL70 DEL42 DEL43 DEL43 DEL74 DEL42 DEL42 DEL32 DEL42 DEL44 DEL42 DEL70 DEL25 DEL70 DEL54 DEL61 DEL8 DEL42 DEL43 DEL43 DEL74 DEL42 DEL44 DEL42 DEL8 DEL70 DEL8