HDFS-5119. Persist CacheManager state in the edit log. (Contributed by Andrew Wang)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1529238 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.protocol.PathBasedCacheDescriptor;
+import org.apache.hadoop.hdfs.protocol.PathBasedCacheDirective;
+import org.apache.hadoop.hdfs.server.namenode.FSEditLogOp.AddCachePoolOp;
+import org.apache.hadoop.hdfs.server.namenode.FSEditLogOp.AddPathBasedCacheDirectiveOp;
+import org.apache.hadoop.hdfs.server.namenode.FSEditLogOp.ModifyCachePoolOp;
+import org.apache.hadoop.hdfs.server.namenode.FSEditLogOp.RemoveCachePoolOp;
+import org.apache.hadoop.hdfs.server.namenode.FSEditLogOp.RemovePathBasedCacheDescriptorOp;
+import org.apache.jasper.tagplugins.jstl.core.Remove;
+    case OP_ADD_PATH_BASED_CACHE_DIRECTIVE: {
+      AddPathBasedCacheDirectiveOp addOp = (AddPathBasedCacheDirectiveOp) op;
+      PathBasedCacheDirective d = new PathBasedCacheDirective(addOp.path,
+          addOp.pool);
+      PathBasedCacheDescriptor descriptor =
+          fsNamesys.getCacheManager().unprotectedAddDirective(d);
+
+      if (toAddRetryCache) {
+        fsNamesys.addCacheEntryWithPayload(op.rpcClientId, op.rpcCallId,
+            descriptor);
+      }
+      break;
+    }
+    case OP_REMOVE_PATH_BASED_CACHE_DESCRIPTOR: {
+      RemovePathBasedCacheDescriptorOp removeOp =
+          (RemovePathBasedCacheDescriptorOp) op;
+      fsNamesys.getCacheManager().unprotectedRemoveDescriptor(removeOp.id);
+
+      if (toAddRetryCache) {
+        fsNamesys.addCacheEntry(op.rpcClientId, op.rpcCallId);
+      }
+      break;
+    }
+    case OP_ADD_CACHE_POOL: {
+      AddCachePoolOp addOp = (AddCachePoolOp) op;
+      fsNamesys.getCacheManager().unprotectedAddCachePool(addOp.pool);
+
+      if (toAddRetryCache) {
+        fsNamesys.addCacheEntry(op.rpcClientId, op.rpcCallId);
+      }
+      break;
+    }
+    case OP_MODIFY_CACHE_POOL: {
+      ModifyCachePoolOp modifyOp = (ModifyCachePoolOp) op;
+      fsNamesys.getCacheManager().modifyCachePool(modifyOp.info);
+
+      if (toAddRetryCache) {
+        fsNamesys.addCacheEntry(op.rpcClientId, op.rpcCallId);
+      }
+      break;
+    }
+    case OP_REMOVE_CACHE_POOL: {
+      RemoveCachePoolOp removeOp = (RemoveCachePoolOp) op;
+      fsNamesys.getCacheManager().removeCachePool(removeOp.poolName);
+
+      if (toAddRetryCache) {
+        fsNamesys.addCacheEntry(op.rpcClientId, op.rpcCallId);
+      }
+      break;
+    }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS8 INS49 INS8 INS49 INS8 INS49 INS8 INS49 INS8 INS49 INS42 INS60 INS60 INS60 INS25 INS10 INS42 INS60 INS21 INS25 INS10 INS42 INS60 INS21 INS25 INS10 INS42 INS60 INS21 INS25 INS10 INS42 INS60 INS21 INS25 INS10 INS43 INS59 INS43 INS59 INS43 INS59 INS42 INS8 INS43 INS59 INS32 INS42 INS8 INS43 INS59 INS32 INS42 INS8 INS43 INS59 INS32 INS42 INS8 INS43 INS59 INS32 INS42 INS8 INS42 INS42 INS11 INS42 INS42 INS14 INS42 INS42 INS32 INS21 INS42 INS42 INS11 INS32 INS42 INS40 INS21 INS42 INS42 INS11 INS32 INS42 INS40 INS21 INS42 INS42 INS11 INS32 INS42 INS40 INS21 INS42 INS42 INS11 INS32 INS42 INS40 INS21 INS43 INS42 INS43 INS40 INS40 INS32 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS42 INS40 INS40