YARN-9266. General improvements in IntelFpgaOpenclPlugin. Contributed by Peter Bacsko.

-import org.apache.hadoop.fs.Path;
+import org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.fpga.FpgaResourceAllocator.FpgaDevice;
-import java.util.Map;
-  public List<PrivilegedOperation> bootstrap(Configuration configuration) throws ResourceHandlerException {
+  public List<PrivilegedOperation> bootstrap(Configuration configuration)
+      throws ResourceHandlerException {
-      throw new ResourceHandlerException("FPGA plugin initialization failed", null);
+      throw new ResourceHandlerException("FPGA plugin initialization failed");
-    List<FpgaResourceAllocator.FpgaDevice> fpgaDeviceList = FpgaDiscoverer.getInstance().discover();
+    List<FpgaResourceAllocator.FpgaDevice> fpgaDeviceList =
+        FpgaDiscoverer.getInstance().discover();
-    this.cGroupsHandler.initializeCGroupController(CGroupsHandler.CGroupController.DEVICES);
+    this.cGroupsHandler.initializeCGroupController(
+        CGroupsHandler.CGroupController.DEVICES);
-  public List<PrivilegedOperation> preStart(Container container) throws ResourceHandlerException {
+  public List<PrivilegedOperation> preStart(Container container)
+      throws ResourceHandlerException {
-      PrivilegedOperation privilegedOperation = new PrivilegedOperation(PrivilegedOperation.OperationType.FPGA,
+      PrivilegedOperation privilegedOperation =
+          new PrivilegedOperation(PrivilegedOperation.OperationType.FPGA,
-      privilegedOperationExecutor.executePrivilegedOperation(privilegedOperation, true);
+      privilegedOperationExecutor.executePrivilegedOperation(
+          privilegedOperation, true);
-        ipFilePath = vendorPlugin.downloadIP(getRequestedIPID(container), container.getWorkDir(),
+        ipFilePath = vendorPlugin.retrieveIPfilePath(
+            getRequestedIPID(container),
+            container.getWorkDir(),
-        if (ipFilePath.isEmpty()) {
-          LOG.warn("FPGA plugin failed to download IP but continue, please check the value of environment viable: " +
-              REQUEST_FPGA_IP_ID_KEY + " if you want yarn to help");
+        if (ipFilePath == null) {
+          LOG.warn("FPGA plugin failed to downloaded IP, please check the" +
+              " value of environment viable: " + REQUEST_FPGA_IP_ID_KEY +
+              " if you want YARN to program the device");
-            majorMinorNumber = allowed.get(i).getMajor() + ":" + allowed.get(i).getMinor();
-            String currentIPID = allowed.get(i).getIPID();
+            FpgaDevice device = allowed.get(i);
+            majorMinorNumber = device.getMajor() + ":" + device.getMinor();
+            String currentIPID = device.getIPID();
-              LOG.info("IP already in device \"" + allowed.get(i).getAliasDevName() + "," +
-                  majorMinorNumber + "\", skip reprogramming");
+              LOG.info("IP already in device \"" +
+                  allowed.get(i).getAliasDevName() +
+                  "," + majorMinorNumber + "\", skip reprogramming");
-            if (vendorPlugin.configureIP(ipFilePath, majorMinorNumber)) {
+            if (vendorPlugin.configureIP(ipFilePath, device)) {
-      cGroupsHandler.deleteCGroup(CGroupsHandler.CGroupController.DEVICES, containerIdStr);
+      cGroupsHandler.deleteCGroup(CGroupsHandler.CGroupController.DEVICES,
+          containerIdStr);
-  public List<PrivilegedOperation> reacquireContainer(ContainerId containerId) throws ResourceHandlerException {
+  public List<PrivilegedOperation> reacquireContainer(ContainerId containerId)
+      throws ResourceHandlerException {
-  public List<PrivilegedOperation> postComplete(ContainerId containerId) throws ResourceHandlerException {
+  public List<PrivilegedOperation> postComplete(ContainerId containerId)
+      throws ResourceHandlerException {

MOV26 UPD40 INS27 INS42 INS33 UPD42 INS60 INS27 UPD45 INS43 INS59 UPD45 MOV45 INS45 INS42 INS42 MOV32 UPD42 UPD42 MOV42 INS42 UPD42 MOV42 DEL40 DEL26 DEL33 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32