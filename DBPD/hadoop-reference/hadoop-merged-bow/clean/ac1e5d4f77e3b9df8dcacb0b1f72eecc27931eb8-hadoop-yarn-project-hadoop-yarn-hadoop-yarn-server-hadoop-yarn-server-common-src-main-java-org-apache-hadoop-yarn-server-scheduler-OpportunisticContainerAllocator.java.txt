YARN-5938. Refactoring OpportunisticContainerAllocator to use SchedulerRequestKey instead of Priority and other misc fixes (asuresh)

-import org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest;
-import org.apache.hadoop.yarn.api.records.*;
+import org.apache.hadoop.yarn.api.records.ApplicationAttemptId;
+import org.apache.hadoop.yarn.api.records.Container;
+import org.apache.hadoop.yarn.api.records.ContainerId;
+import org.apache.hadoop.yarn.api.records.ExecutionType;
+import org.apache.hadoop.yarn.api.records.NodeId;
+import org.apache.hadoop.yarn.api.records.Resource;
+import org.apache.hadoop.yarn.api.records.ResourceBlacklistRequest;
+import org.apache.hadoop.yarn.api.records.ResourceRequest;
+import org.apache.hadoop.yarn.api.records.Token;
-   * @param request AllocateRequest
+   * @param blackList Resource BlackList Request
+   * @param oppResourceReqs Opportunistic Resource Requests
-  public List<Container> allocateContainers(
-      AllocateRequest request, ApplicationAttemptId applicationAttemptId,
+  public List<Container> allocateContainers(ResourceBlacklistRequest blackList,
+      List<ResourceRequest> oppResourceReqs,
+      ApplicationAttemptId applicationAttemptId,
-    // Update released containers.
-    List<ContainerId> releasedContainers = request.getReleaseList();
-    int numReleasedContainers = releasedContainers.size();
-    if (numReleasedContainers > 0) {
-      LOG.info("AttemptID: " + applicationAttemptId + " released: "
-          + numReleasedContainers);
-      opportContext.getContainersAllocated().removeAll(releasedContainers);
-    }
-    ResourceBlacklistRequest rbr = request.getResourceBlacklistRequest();
-    if (rbr != null) {
-      opportContext.getBlacklist().removeAll(rbr.getBlacklistRemovals());
-      opportContext.getBlacklist().addAll(rbr.getBlacklistAdditions());
+    if (blackList != null) {
+      opportContext.getBlacklist().removeAll(blackList.getBlacklistRemovals());
+      opportContext.getBlacklist().addAll(blackList.getBlacklistAdditions());
-    opportContext.addToOutstandingReqs(request.getAskList());
+    opportContext.addToOutstandingReqs(oppResourceReqs);
-    for (Priority priority :
+    for (SchedulerRequestKey schedulerKey :
-          opportContext, priority, applicationAttemptId, appSubmitter);
+          opportContext, schedulerKey, applicationAttemptId, appSubmitter);
-      OpportunisticContainerContext appContext, Priority priority,
+      OpportunisticContainerContext appContext, SchedulerRequestKey schedKey,
-        appContext.getOutstandingOpReqs().get(priority).values()) {
+        appContext.getOutstandingOpReqs().get(schedKey).values()) {
-      LOG.info("Opportunistic allocation requested for ["
-          + "priority=" + anyAsk.getPriority()
-          + ", num_containers=" + anyAsk.getNumContainers()
-          + ", capability=" + anyAsk.getCapability() + "]"
-          + " allocated = " + containers.get(anyAsk.getCapability()).size());
+      if (!containers.isEmpty()) {
+        LOG.info("Opportunistic allocation requested for ["
+            + "priority=" + anyAsk.getPriority()
+            + ", allocationRequestId=" + anyAsk.getAllocationRequestId()
+            + ", num_containers=" + anyAsk.getNumContainers()
+            + ", capability=" + anyAsk.getCapability() + "]"
+            + " allocated = " + containers.keySet());
+      }
-      LOG.warn("No nodes available for allocating opportunistic containers.");
+      LOG.warn("No nodes available for allocating opportunistic containers. [" +
+          "allNodes=" + allNodes + ", " +
+          "blacklist=" + blacklist + "]");

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 UPD40 INS44 INS65 MOV43 UPD42 UPD74 MOV74 INS42 UPD43 UPD42 UPD42 UPD66 INS42 INS66 UPD43 UPD42 UPD42 UPD42 UPD42 MOV42 UPD43 UPD42 INS25 UPD42 UPD42 INS38 INS8 MOV32 MOV32 INS32 MOV21 INS27 UPD42 UPD42 UPD42 INS42 INS42 INS27 INS42 INS45 INS45 INS42 INS45 INS45 INS45 INS45 INS32 INS32 INS42 INS42 MOV42 UPD42 MOV42 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL34 DEL27 DEL42 DEL42 DEL45 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL42 DEL32 DEL32 DEL42 DEL32 DEL45