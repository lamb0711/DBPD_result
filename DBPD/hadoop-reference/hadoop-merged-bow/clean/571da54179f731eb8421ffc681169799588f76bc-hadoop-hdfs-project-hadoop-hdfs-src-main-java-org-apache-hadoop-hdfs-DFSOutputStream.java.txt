HDFS-4213. Add an API to hsync for updating the last block length at the namenode. Contributed by Jing Zhao


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1415799 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.client.HdfsDataOutputStream.SyncFlag;
-    flushOrSync(false);
+    flushOrSync(false, EnumSet.noneOf(SyncFlag.class));
+  @Override
+  public void hsync() throws IOException {
+    hsync(EnumSet.noneOf(SyncFlag.class));
+  }
+  
+   * 
+   * @param syncFlags
+   *          Indicate the semantic of the sync. Currently used to specify
+   *          whether or not to update the block length in NameNode.
-  @Override
-  public void hsync() throws IOException {
-    flushOrSync(true);
+  public void hsync(EnumSet<SyncFlag> syncFlags) throws IOException {
+    flushOrSync(true, syncFlags);
-  private void flushOrSync(boolean isSync) throws IOException {
+  /**
+   * Flush/Sync buffered data to DataNodes.
+   * 
+   * @param isSync
+   *          Whether or not to require all replicas to flush data to the disk
+   *          device
+   * @param syncFlags
+   *          Indicate extra detailed semantic of the flush/sync. Currently
+   *          mainly used to specify whether or not to update the file length in
+   *          the NameNode
+   * @throws IOException
+   */
+  private void flushOrSync(boolean isSync, EnumSet<SyncFlag> syncFlags)
+      throws IOException {
+      long lastBlockLength = -1L;
+      boolean updateLength = syncFlags.contains(SyncFlag.UPDATE_LENGTH);
-
-      // If any new blocks were allocated since the last flush, 
-      // then persist block locations on namenode. 
-      //
-      if (persistBlocks.getAndSet(false)) {
+      
+      if (updateLength) {
+        synchronized (this) {
+          if (streamer != null && streamer.block != null) {
+            lastBlockLength = streamer.block.getNumBytes();
+          }
+        }
+      }
+      // If 1) any new blocks were allocated since the last flush, or 2) to
+      // update length in NN is requried, then persist block locations on
+      // namenode.
+      if (persistBlocks.getAndSet(false) || updateLength) {
-          dfsClient.namenode.fsync(src, dfsClient.clientName);
+          dfsClient.namenode.fsync(src, dfsClient.clientName, lastBlockLength);

INS26 INS40 INS31 MOV78 INS83 INS39 INS42 INS43 INS8 INS44 INS29 INS44 INS42 INS21 INS65 INS74 INS42 INS65 INS65 INS65 INS65 INS74 INS42 INS32 INS42 INS66 INS66 INS43 INS43 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS66 INS42 INS43 INS43 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS60 INS60 INS25 INS42 INS42 INS57 INS42 INS42 INS57 INS39 INS59 INS39 INS59 INS42 INS8 INS27 INS43 INS43 INS42 INS38 INS42 INS32 INS51 MOV32 INS42 INS42 INS42 INS34 INS42 INS42 INS40 INS52 INS8 INS25 INS27 INS8 INS27 INS27 INS21 INS42 INS42 INS33 INS40 INS33 INS7 INS42 INS32 INS40 INS42