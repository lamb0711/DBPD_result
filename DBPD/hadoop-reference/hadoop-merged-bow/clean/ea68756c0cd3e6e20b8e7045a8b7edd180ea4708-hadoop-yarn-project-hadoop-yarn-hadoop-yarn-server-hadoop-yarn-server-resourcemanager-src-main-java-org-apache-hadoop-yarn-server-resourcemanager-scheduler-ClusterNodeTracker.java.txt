YARN-8373. RM Received RMFatalEvent of type CRITICAL_THREAD_CRASH. Contributed by Wilfred Spiegelenburg.

-import java.util.Collections;
+import java.util.TreeSet;
+   * Nodes can change while being sorted. Using a standard sort will fail
+   * without locking each node, the TreeSet handles this without locks.
-   * Note that the sort is performed without holding a lock. We are sorting
-   * here instead of on the caller to allow for future optimizations (e.g.
-   * sort once every x milliseconds).
+   * @param comparator the comparator to sort the nodes with
+   * @return sorted set of nodes in the form of a TreeSet
-  public List<N> sortedNodeList(Comparator<N> comparator) {
-    List<N> sortedList = null;
+  public TreeSet<N> sortedNodeSet(Comparator<N> comparator) {
+    TreeSet<N> sortedSet = new TreeSet<>(comparator);
-      sortedList = new ArrayList(nodes.values());
+      sortedSet.addAll(nodes.values());
-    Collections.sort(sortedList, comparator);
-    return sortedList;
+    return sortedSet;

MOV26 UPD40 UPD74 UPD42 INS65 INS65 INS65 UPD43 MOV66 INS66 UPD66 MOV66 INS42 UPD66 MOV66 UPD66 MOV66 UPD42 UPD74 UPD42 UPD43 UPD42 INS14 UPD42 INS74 INS42 INS32 INS43 INS42 INS42 MOV32 INS42 DEL65 DEL33 DEL42 DEL42 DEL43 DEL14 DEL7 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21