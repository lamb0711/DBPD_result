HDFS-13405. Ozone: Rename HDSL to HDDS.
Contributed by Ajay Kumar, Elek Marton, Mukul Kumar Singh, Shashikant Banerjee and Anu Engineer.

-package org.apache.hadoop.ozone.scm.block;
+package org.apache.hadoop.hdds.scm.block;
+import org.apache.hadoop.hdds.scm.ScmConfigKeys;
+import org.apache.hadoop.hdds.scm.container.Mapping;
+import org.apache.hadoop.hdds.scm.container.common.helpers.AllocatedBlock;
+import org.apache.hadoop.hdds.scm.container.common.helpers.ContainerInfo;
+import org.apache.hadoop.hdds.scm.container.common.helpers.Pipeline;
+import org.apache.hadoop.hdds.scm.exceptions.SCMException;
+import org.apache.hadoop.hdds.scm.node.NodeManager;
+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;
+import org.apache.hadoop.hdds.protocol.proto.HddsProtos.ReplicationFactor;
+import org.apache.hadoop.hdds.protocol.proto.HddsProtos.ReplicationType;
-import org.apache.hadoop.hdsl.protocol.proto.HdslProtos;
-import org.apache.hadoop.hdsl.protocol.proto.HdslProtos.ReplicationFactor;
-import org.apache.hadoop.hdsl.protocol.proto.HdslProtos.ReplicationType;
-import org.apache.hadoop.ozone.scm.container.Mapping;
-import org.apache.hadoop.ozone.scm.exceptions.SCMException;
-import org.apache.hadoop.ozone.scm.node.NodeManager;
-import org.apache.hadoop.scm.ScmConfigKeys;
-import org.apache.hadoop.scm.container.common.helpers.AllocatedBlock;
-import org.apache.hadoop.scm.container.common.helpers.ContainerInfo;
-import org.apache.hadoop.scm.container.common.helpers.Pipeline;
-
-import static org.apache.hadoop.hdsl.server.ServerUtils.getOzoneMetaDirPath;
+import static org.apache.hadoop.hdds.scm.exceptions.SCMException.ResultCodes
+    .CHILL_MODE_EXCEPTION;
+import static org.apache.hadoop.hdds.scm.exceptions.SCMException.ResultCodes
+    .FAILED_TO_FIND_BLOCK;
+import static org.apache.hadoop.hdds.scm.exceptions.SCMException.ResultCodes
+    .INVALID_BLOCK_SIZE;
+import static org.apache.hadoop.hdds.server.ServerUtils.getOzoneMetaDirPath;
-import static org.apache.hadoop.ozone.scm.exceptions.SCMException.ResultCodes
-    .CHILL_MODE_EXCEPTION;
-import static org.apache.hadoop.ozone.scm.exceptions.SCMException.ResultCodes
-    .FAILED_TO_FIND_BLOCK;
-import static org.apache.hadoop.ozone.scm.exceptions.SCMException.ResultCodes
-    .INVALID_BLOCK_SIZE;
-                  size, owner, type, factor, HdslProtos.LifeCycleState
+                  size, owner, type, factor, HddsProtos.LifeCycleState
-            HdslProtos.LifeCycleEvent.CREATE);
-        return newBlock(containerInfo, HdslProtos.LifeCycleState.ALLOCATED);
+            HddsProtos.LifeCycleEvent.CREATE);
+        return newBlock(containerInfo, HddsProtos.LifeCycleState.ALLOCATED);
-              .getMatchingContainer(size, owner, type, factor, HdslProtos
+              .getMatchingContainer(size, owner, type, factor, HddsProtos
-        return newBlock(containerInfo, HdslProtos.LifeCycleState.OPEN);
+        return newBlock(containerInfo, HddsProtos.LifeCycleState.OPEN);
-                  size, owner, type, factor, HdslProtos.LifeCycleState
+                  size, owner, type, factor, HddsProtos.LifeCycleState
-            HdslProtos.LifeCycleEvent.CREATE);
-        return newBlock(containerInfo, HdslProtos.LifeCycleState.ALLOCATED);
+            HddsProtos.LifeCycleEvent.CREATE);
+        return newBlock(containerInfo, HddsProtos.LifeCycleState.ALLOCATED);
-      ContainerInfo containerInfo, HdslProtos.LifeCycleState state)
+      ContainerInfo containerInfo, HddsProtos.LifeCycleState state)
-    boolean createContainer = (state == HdslProtos.LifeCycleState.ALLOCATED);
+    boolean createContainer = (state == HddsProtos.LifeCycleState.ALLOCATED);
-    // containers.get(HdslProtos.LifeCycleState.OPEN).size();
+    // containers.get(HddsProtos.LifeCycleState.OPEN).size();

MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 MOV26 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD43 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40 UPD40