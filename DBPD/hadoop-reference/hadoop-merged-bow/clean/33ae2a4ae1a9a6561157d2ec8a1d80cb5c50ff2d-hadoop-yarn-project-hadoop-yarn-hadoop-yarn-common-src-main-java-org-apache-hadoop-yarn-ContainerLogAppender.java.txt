YARN-7687. ContainerLogAppender Improvements. Contributed by BELUGA BEHR.

-import java.util.LinkedList;
-import java.util.Queue;
+import java.util.ArrayDeque;
+import java.util.Deque;
- * 
-  implements Flushable
-{
+    implements Flushable {
+
-  //so that log4j can configure it from the configuration(log4j.properties). 
-  private Queue<LoggingEvent> tail = null;
-  private boolean closing = false;
+  private Deque<LoggingEvent> eventBuffer;
+  private boolean closed = false;
-  public void activateOptions() {
-    synchronized (this) {
-      if (maxEvents > 0) {
-        tail = new LinkedList<LoggingEvent>();
-      }
-      setFile(new File(this.containerLogDir, containerLogFile).toString());
-      setAppend(true);
-      super.activateOptions();
+  public synchronized void activateOptions() {
+    if (maxEvents > 0) {
+      this.eventBuffer = new ArrayDeque<>();
+    setFile(new File(this.containerLogDir, containerLogFile).toString());
+    setAppend(true);
+    super.activateOptions();
-  
+
-  public void append(LoggingEvent event) {
-    synchronized (this) {
-      if (closing) { // When closing drop any new/transitive CLA appending
-        return;
+  public synchronized void append(LoggingEvent event) {
+    if (closed) {
+      return;
+    }
+    if (eventBuffer != null) {
+      if (eventBuffer.size() == maxEvents) {
+        eventBuffer.removeFirst();
-      if (tail == null) {
-        super.append(event);
-      } else {
-        if (tail.size() >= maxEvents) {
-          tail.remove();
-        }
-        tail.add(event);
-      }
+      eventBuffer.addLast(event);
+    } else {
+      super.append(event);
-  
+
-    closing = true;
-    if (tail != null) {
-      for (LoggingEvent event : tail) {
-        super.append(event);
+    if (!closed) {
+      closed = true;
+      if (eventBuffer != null) {
+        for (LoggingEvent event : eventBuffer) {
+          super.append(event);
+        }
+        // let garbage collection do its work
+        eventBuffer = null;
+      super.close();
-    super.close();
-  private static final int EVENT_SIZE = 100;
+  private static final long EVENT_SIZE = 100;
+  /**
+   *  Setter so that log4j can configure it from the
+   *  configuration(log4j.properties).
+   */
-    maxEvents = (int) logSize / EVENT_SIZE;
+    maxEvents = (int)(logSize / EVENT_SIZE);

UPD40 UPD40 UPD74 INS83 MOV8 INS83 INS8 INS8 UPD39 INS29 UPD43 UPD42 UPD42 MOV25 MOV25 MOV8 INS25 INS65 UPD42 UPD42 UPD27 INS38 MOV8 INS66 INS66 UPD42 INS42 INS11 UPD27 MOV39 INS36 INS22 UPD42 UPD42 UPD42 UPD42 INS21 INS27 INS52 INS42 UPD74 UPD42 UPD42 INS7 INS42 MOV42 UPD43 UPD42 UPD42 INS42 INS33 UPD42 DEL33 DEL42 DEL42 DEL43 DEL52 DEL51 DEL8 DEL52 DEL8 DEL51 DEL8 DEL42 DEL11 DEL27