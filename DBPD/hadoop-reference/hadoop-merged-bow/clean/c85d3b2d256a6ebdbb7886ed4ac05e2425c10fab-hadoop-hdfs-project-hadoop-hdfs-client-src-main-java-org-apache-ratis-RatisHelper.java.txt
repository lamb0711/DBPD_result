HDFS-12593. Ozone: update Ratis to the latest snapshot. Contributed by Tsz Wo Nicholas Sze.

+import org.apache.ratis.protocol.RaftGroup;
+import org.apache.ratis.protocol.RaftGroupId;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
+import java.util.*;
+    return id.getIpAddr() + "_" + id.getRatisPort();
+  }
+
+  static String toRaftPeerAddressString(DatanodeID id) {
-  static RaftPeer toRaftPeer(String id) {
-    return new RaftPeer(RaftPeerId.valueOf(id), id);
-  }
-
-    return toRaftPeer(toRaftPeerIdString(id));
+    return new RaftPeer(toRaftPeerId(id), toRaftPeerAddressString(id));
-    return pipeline.getMachines().stream()
-        .map(RatisHelper::toRaftPeer)
+    return toRaftPeers(pipeline.getMachines());
+  }
+
+  static <E extends DatanodeID> List<RaftPeer> toRaftPeers(List<E> datanodes) {
+    return datanodes.stream().map(RatisHelper::toRaftPeer)
-  static RaftPeer[] toRaftPeerArray(Pipeline pipeline) {
-    return toRaftPeers(pipeline).toArray(RaftPeer.EMPTY_PEERS);
+  /* TODO: use a dummy id for all groups for the moment.
+   *       It should be changed to a unique id for each group.
+   */
+  RaftGroupId DUMMY_GROUP_ID = RaftGroupId.randomId();
+
+  RaftGroup EMPTY_GROUP = new RaftGroup(DUMMY_GROUP_ID,
+      Collections.emptyList());
+
+  static RaftGroup emptyRaftGroup() {
+    return EMPTY_GROUP;
+  }
+
+  static RaftGroup newRaftGroup(Collection<RaftPeer> peers) {
+    return peers.isEmpty()? emptyRaftGroup()
+        : new RaftGroup(DUMMY_GROUP_ID, peers);
+  }
+
+  static RaftGroup newRaftGroup(Pipeline pipeline) {
+    return newRaftGroup(toRaftPeers(pipeline));
-        toRaftPeers(pipeline));
+        newRaftGroup(pipeline));
-        new ArrayList<>(Arrays.asList(leader)));
+        newRaftGroup(new ArrayList<>(Arrays.asList(leader))));
-      RpcType rpcType, RaftPeerId leader, List<RaftPeer> peers) {
-    LOG.trace("newRaftClient: {}, leader={}, peers={}", rpcType, leader, peers);
+      RpcType rpcType, RaftPeerId leader, RaftGroup group) {
+    LOG.trace("newRaftClient: {}, leader={}, group={}", rpcType, leader, group);
-    final ClientFactory factory = ClientFactory.cast(rpcType.newFactory(
-        properties, null));
+    final ClientFactory factory = ClientFactory.cast(rpcType.newFactory(null));
-        .setServers(peers)
+        .setRaftGroup(group)

MOV26 MOV26 MOV31 UPD40 UPD40 UPD40 INS31 INS23 INS23 INS31 INS31 MOV43 UPD42 UPD42 INS83 MOV74 INS42 MOV44 INS8 INS73 INS44 INS43 INS59 INS43 INS59 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS44 INS8 INS43 UPD42 INS43 INS41 INS42 INS43 INS74 INS42 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS41 INS42 INS74 INS42 INS41 UPD42 MOV42 INS43 INS42 INS42 INS27 INS14 MOV32 MOV32 INS42 INS43 INS43 INS42 INS42 INS43 INS42 INS32 INS42 INS43 MOV43 INS16 MOV32 INS42 INS32 INS45 INS32 MOV43 INS32 INS32 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS32 INS14 UPD42 INS32 UPD45 UPD42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 INS42 UPD42 MOV42 MOV42 INS32 INS42 INS42 INS42 INS43 INS42 INS42 UPD42 INS42 MOV14 INS42 INS42 INS42 UPD42 UPD42 DEL42 DEL32 DEL42 DEL14 DEL32 DEL32 DEL43 DEL85 DEL5 DEL40 DEL42 DEL42