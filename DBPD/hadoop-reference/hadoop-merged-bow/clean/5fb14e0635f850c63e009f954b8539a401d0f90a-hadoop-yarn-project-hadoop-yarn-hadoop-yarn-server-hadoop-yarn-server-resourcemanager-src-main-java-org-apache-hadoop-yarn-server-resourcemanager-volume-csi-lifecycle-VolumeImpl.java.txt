YARN-8953. [CSI] CSI driver adaptor module support in NodeManager. Contributed by Weiwei Yang.

+import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableMap;
-import org.apache.hadoop.yarn.server.resourcemanager.volume.csi.CsiAdaptorClient;
-import org.apache.hadoop.yarn.server.volume.csi.CsiAdaptorClientProtocol;
+import org.apache.hadoop.yarn.api.CsiAdaptorProtocol;
+import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest;
+import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest.VolumeCapability;
+import org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesResponse;
+import org.apache.hadoop.yarn.exceptions.YarnException;
-import org.apache.hadoop.yarn.server.volume.csi.exception.VolumeException;
+import java.io.IOException;
+import static org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest.AccessMode.SINGLE_NODE_READER_ONLY;
+import static org.apache.hadoop.yarn.api.protocolrecords.ValidateVolumeCapabilitiesRequest.VolumeType.FILE_SYSTEM;
+
-  private CsiAdaptorClientProtocol client;
+  private CsiAdaptorProtocol adaptorClient;
-    this.client = new CsiAdaptorClient();
-  public void setClient(CsiAdaptorClientProtocol client) {
-    this.client = client;
+  public void setClient(CsiAdaptorProtocol csiAdaptorClient) {
+    this.adaptorClient = csiAdaptorClient;
-  public CsiAdaptorClientProtocol getClient() {
-    return this.client;
+  @Override
+  public CsiAdaptorProtocol getClient() {
+    return this.adaptorClient;
+  }
+
+  @Override
+  public VolumeMetaData getVolumeMeta() {
+    return this.volumeMeta;
-        volume.getClient().validateVolume();
-        return VolumeState.VALIDATED;
-      } catch (VolumeException e) {
+        // TODO we should parse the capability from volume resource spec
+        VolumeCapability capability = new VolumeCapability(
+            SINGLE_NODE_READER_ONLY, FILE_SYSTEM,
+            ImmutableList.of());
+        ValidateVolumeCapabilitiesRequest request =
+            ValidateVolumeCapabilitiesRequest
+                .newInstance(volume.getVolumeId().getId(),
+                    ImmutableList.of(capability),
+                    ImmutableMap.of());
+        ValidateVolumeCapabilitiesResponse response = volume.getClient()
+            .validateVolumeCapacity(request);
+        return response.isSupported() ? VolumeState.VALIDATED
+            : VolumeState.UNAVAILABLE;
+      } catch (YarnException | IOException e) {
-      try {
-        // this call could cross node, we should keep the message tight
-        volume.getClient().controllerPublishVolume();
-        return VolumeState.NODE_READY;
-      } catch (VolumeException e) {
-        LOG.warn("Got exception while calling the CSI adaptor", e);
-        return volume.getVolumeState();
-      }
+      // this call could cross node, we should keep the message tight
+      return VolumeState.NODE_READY;

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 UPD40 UPD40 INS40 INS40 UPD40 INS40 INS40 INS40 INS31 UPD43 INS78 UPD43 INS78 INS83 INS43 INS42 INS8 UPD42 UPD42 UPD43 UPD42 INS42 UPD42 INS42 INS42 INS41 INS8 UPD42 INS22 MOV41 UPD42 UPD42 INS52 INS42 UPD42 INS60 INS60 INS60 INS43 INS59 INS43 INS59 INS43 INS59 INS16 INS84 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS42 MOV32 INS32 INS40 INS40 INS43 INS43 INS43 INS42 INS42 INS32 INS42 INS42 MOV32 INS32 INS32 UPD42 INS42 INS42 INS42 INS42 UPD42 MOV42 INS42 INS42 INS42 INS32 UPD42 UPD42 MOV42 INS42 INS42 INS42 INS42 MOV42 INS42 DEL52 DEL42 DEL22 DEL42 DEL43 DEL14 DEL7 DEL21 DEL32 DEL21 DEL40 DEL43 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL45 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL41 DEL8 DEL12 DEL54 DEL8