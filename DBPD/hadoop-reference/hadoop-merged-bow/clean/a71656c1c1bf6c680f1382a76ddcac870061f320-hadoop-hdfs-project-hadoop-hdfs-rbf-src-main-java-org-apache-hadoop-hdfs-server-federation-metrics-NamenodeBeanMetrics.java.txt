HDFS-13347. RBF: Cache datanode reports. Contributed by Inigo Goiri.

+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.TimeUnit;
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.hdfs.server.federation.router.RBFConfigKeys;
+import com.google.common.cache.CacheBuilder;
+import com.google.common.cache.CacheLoader;
+import com.google.common.cache.LoadingCache;
+
+  /** Prevent holding the page from loading too long. */
+  private static final String DN_REPORT_TIME_OUT =
+      RBFConfigKeys.FEDERATION_ROUTER_PREFIX + "dn-report.time-out";
+  /** We only wait for 1 second. */
+  private static final long DN_REPORT_TIME_OUT_DEFAULT =
+      TimeUnit.SECONDS.toMillis(1);
+
+  /** Time to cache the DN information. */
+  public static final String DN_REPORT_CACHE_EXPIRE =
+      RBFConfigKeys.FEDERATION_ROUTER_PREFIX + "dn-report.cache-expire";
+  /** We cache the DN information for 10 seconds by default. */
+  public static final long DN_REPORT_CACHE_EXPIRE_DEFAULT =
+      TimeUnit.SECONDS.toMillis(10);
+
+
+  /** Instance of the Router being monitored. */
+  /** Timeout to get the DN report. */
+  private final long dnReportTimeOut;
+  /** DN type -> full DN report in JSON. */
+  private final LoadingCache<DatanodeReportType, String> dnCache;
+
+
+    // Initialize the cache for the DN reports
+    Configuration conf = router.getConfig();
+    this.dnReportTimeOut = conf.getTimeDuration(
+        DN_REPORT_TIME_OUT, DN_REPORT_TIME_OUT_DEFAULT, TimeUnit.MILLISECONDS);
+    long dnCacheExpire = conf.getTimeDuration(
+        DN_REPORT_CACHE_EXPIRE,
+        DN_REPORT_CACHE_EXPIRE_DEFAULT, TimeUnit.MILLISECONDS);
+    this.dnCache = CacheBuilder.newBuilder()
+        .expireAfterWrite(dnCacheExpire, TimeUnit.MILLISECONDS)
+        .build(
+            new CacheLoader<DatanodeReportType, String>() {
+              @Override
+              public String load(DatanodeReportType type) throws Exception {
+                return getNodesImpl(type);
+              }
+            });
-   * Get all the nodes in the federation from a particular type.
-   * TODO this is expensive, we may want to cache it.
+   * Get all the nodes in the federation from a particular type. Getting this
+   * information is expensive and we use a cache.
-  private String getNodes(DatanodeReportType type) {
+  private String getNodes(final DatanodeReportType type) {
+    try {
+      return this.dnCache.get(type);
+    } catch (ExecutionException e) {
+      LOG.error("Cannot get the DN storage report for {}", type, e);
+    }
+    // If we cannot get the report, return empty JSON
+    return "{}";
+  }
+
+  /**
+   * Get all the nodes in the federation from a particular type.
+   * @param type Type of the datanodes to check.
+   * @return JSON with the nodes.
+   */
+  private String getNodesImpl(final DatanodeReportType type) {
-      DatanodeInfo[] datanodes = rpcServer.getDatanodeReport(type);
+      DatanodeInfo[] datanodes =
+          rpcServer.getDatanodeReport(type, false, dnReportTimeOut);

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS23 INS23 INS23 INS23 INS31 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS83 INS39 INS59 INS29 INS83 INS83 INS83 INS43 INS59 INS29 INS83 INS83 INS83 INS39 INS59 INS29 INS29 INS83 INS83 INS39 INS59 INS29 INS83 INS83 INS74 INS59 MOV29 INS83 INS43 INS42 INS44 INS8 INS29 UPD42 INS65 INS42 INS42 INS27 INS65 INS42 INS32 INS65 INS42 INS42 INS27 INS65 INS42 INS32 INS65 INS65 INS42 INS65 INS43 INS43 INS43 INS42 INS60 INS21 INS60 INS21 INS42 INS83 INS43 INS42 INS54 INS41 INS65 INS65 INS65 INS83 INS66 INS40 INS45 INS66 INS40 INS42 INS34 INS66 INS40 INS45 INS66 INS40 INS42 INS34 INS66 INS66 INS66 INS42 INS42 INS42 INS43 INS59 INS7 INS39 INS59 INS7 UPD66 UPD66 INS42 INS8 INS12 INS45 INS66 INS42 INS66 INS66 INS42 INS42 INS32 INS22 INS32 INS42 INS32 INS22 INS32 INS41 INS44 INS8 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS40 INS52 INS42 INS32 INS42 INS14 INS32 INS43 INS42 INS21 INS32 INS42 INS42 INS40 INS74 INS1 INS22 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS43 INS43 INS31 INS52 INS42 INS42 INS42 INS45 INS42 INS42 INS9 INS42 INS42 INS42 INS42 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS42 INS42 INS43 INS42 INS42 INS41 INS42 INS32 INS42 INS42