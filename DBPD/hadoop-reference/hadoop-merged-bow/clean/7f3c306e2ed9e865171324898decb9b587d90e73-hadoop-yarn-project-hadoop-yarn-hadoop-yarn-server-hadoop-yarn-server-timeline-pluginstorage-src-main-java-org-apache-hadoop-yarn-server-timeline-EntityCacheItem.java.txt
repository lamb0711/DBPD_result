YARN-5432. Lock already held by another process while LevelDB cache store creation for dag. Contributed by Li Lu.

-import com.google.common.annotations.VisibleForTesting;
-import org.apache.hadoop.classification.InterfaceAudience;
-import java.util.concurrent.atomic.AtomicInteger;
-  private int refCount = 0;
-  private static AtomicInteger activeStores = new AtomicInteger(0);
-   * @return The number of currently active stores in all CacheItems.
-   */
-  public static int getActiveStores() {
-    return activeStores.get();
-  }
-
-  /**
-          activeStores.getAndIncrement();
-   * Increase the number of references to this cache item by 1.
-   */
-  public synchronized void incrRefs() {
-    refCount++;
-  }
-
-  /**
-   * Unregister a reader. Try to release the cache if the reader to current
-   * cache reaches 0.
-   *
-   * @return true if the cache has been released, otherwise false
-   */
-  public synchronized boolean tryRelease() {
-    refCount--;
-    // Only reclaim the storage if there is no reader.
-    if (refCount > 0) {
-      LOG.debug("{} references left for cached group {}, skipping the release",
-          refCount, groupId);
-      return false;
-    }
-    forceRelease();
-    return true;
-  }
-
-  /**
-    activeStores.getAndDecrement();
-    refCount = 0;
-  @InterfaceAudience.Private
-  @VisibleForTesting
-  synchronized int getRefCount() {
-    return refCount;
-  }
-

DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL83 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL34 DEL14 DEL59 DEL23 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL41 DEL8 DEL31 DEL42 DEL42 DEL32 DEL21 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL37 DEL21 DEL8 DEL31 DEL66 DEL66 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL37 DEL21 DEL42 DEL34 DEL27 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL21 DEL9 DEL41 DEL8 DEL25 DEL42 DEL32 DEL21 DEL9 DEL41 DEL8 DEL31 DEL42 DEL42 DEL32 DEL21 DEL42 DEL34 DEL7 DEL21 DEL40 DEL78 DEL42 DEL78 DEL83 DEL39 DEL42 DEL42 DEL41 DEL8 DEL31