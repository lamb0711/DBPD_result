HDFS-13300. Ozone: Remove DatanodeID dependency from HDSL and Ozone.
Contributed by Nanda kumar.

-import org.apache.hadoop.hdfs.protocol.DatanodeID;
+import org.apache.hadoop.hdsl.protocol.DatanodeDetails;
-  public List<DatanodeID> chooseDatanodes(int nodesRequired, final long
+  public List<DatanodeDetails> chooseDatanodes(int nodesRequired, final long
-    List<DatanodeID> healthyNodes =
+    List<DatanodeDetails> healthyNodes =
-    List<DatanodeID> healthyList = healthyNodes.stream().filter(d ->
+    List<DatanodeDetails> healthyList = healthyNodes.stream().filter(d ->
-   * @param datanodeID DatanodeID
+   * @param datanodeDetails DatanodeDetails
-  private boolean hasEnoughSpace(DatanodeID datanodeID, long sizeRequired) {
-    SCMNodeMetric nodeMetric = nodeManager.getNodeStat(datanodeID);
+  private boolean hasEnoughSpace(DatanodeDetails datanodeDetails,
+                                 long sizeRequired) {
+    SCMNodeMetric nodeMetric = nodeManager.getNodeStat(datanodeDetails);
-  public List<DatanodeID> getResultSet(int nodesRequired, List<DatanodeID>
-      healthyNodes) throws SCMException {
-    List<DatanodeID> results = new LinkedList<>();
+  public List<DatanodeDetails> getResultSet(
+      int nodesRequired, List<DatanodeDetails> healthyNodes)
+      throws SCMException {
+    List<DatanodeDetails> results = new LinkedList<>();
-      DatanodeID nodeId = chooseNode(healthyNodes);
+      DatanodeDetails nodeId = chooseNode(healthyNodes);
-   * @return DatanodeID
+   * @return DatanodeDetails
-  public abstract DatanodeID chooseNode(List<DatanodeID> healthyNodes);
+  public abstract DatanodeDetails chooseNode(
+      List<DatanodeDetails> healthyNodes);

UPD40 UPD74 UPD74 UPD43 UPD43 UPD43 UPD42 UPD43 UPD74 UPD42 UPD74 UPD42 UPD74 UPD74 UPD42 UPD66 UPD42 UPD42 UPD43 UPD74 UPD66 UPD43 UPD43 UPD43 UPD42 UPD43 UPD42 UPD42 UPD42 UPD42 UPD42 UPD43 UPD42