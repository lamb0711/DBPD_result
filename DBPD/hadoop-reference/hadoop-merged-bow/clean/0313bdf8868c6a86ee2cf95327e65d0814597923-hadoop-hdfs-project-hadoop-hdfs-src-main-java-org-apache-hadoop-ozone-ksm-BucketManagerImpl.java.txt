HDFS-11897. Ozone: KSM: Changing log level for client calls in KSM. Contributed by Shashikant Banerjee.

-      if(metadataManager.get(volumeKey) == null) {
-        LOG.error("volume: {} not found ", volumeName);
+      if (metadataManager.get(volumeKey) == null) {
+        LOG.debug("volume: {} not found ", volumeName);
-      if(metadataManager.get(bucketKey) != null) {
-        LOG.error("bucket: {} already exists ", bucketName);
+      if (metadataManager.get(bucketKey) != null) {
+        LOG.debug("bucket: {} already exists ", bucketName);
-      LOG.error("Bucket creation failed for bucket:{} in volume:{}",
-          bucketName, volumeName, ex);
+      if (!(ex instanceof KSMException)) {
+        LOG.error("Bucket creation failed for bucket:{} in volume:{}",
+            bucketName, volumeName, ex);
+      }
-      if(value == null) {
-        LOG.error("bucket: {} not found in volume: {}.",
-            bucketName, volumeName);
+      if (value == null) {
+        LOG.debug("bucket: {} not found in volume: {}.", bucketName,
+            volumeName);
-      LOG.error("Exception while getting bucket info for bucket: {}",
-          bucketName, ex);
+      if (!(ex instanceof KSMException)) {
+        LOG.error("Exception while getting bucket info for bucket: {}",
+            bucketName, ex);
+      }
-        LOG.error("volume: {} not found ", volumeName);
+        LOG.debug("volume: {} not found ", volumeName);
-        LOG.error("bucket: {} not found ", bucketName);
+        LOG.debug("bucket: {} not found ", bucketName);
-      if(storageType != null) {
+      if (storageType != null) {
-      if(versioning != null) {
+      if (versioning != null) {
-        bucketInfoBuilder.setIsVersionEnabled(
-            oldBucketInfo.getIsVersionEnabled());
+        bucketInfoBuilder
+            .setIsVersionEnabled(oldBucketInfo.getIsVersionEnabled());
-      metadataManager.put(bucketKey, bucketInfoBuilder.build()
-          .getProtobuf().toByteArray());
+      metadataManager.put(bucketKey,
+          bucketInfoBuilder.build().getProtobuf().toByteArray());
-      LOG.error("Setting bucket property failed for bucket:{} in volume:{}",
-          bucketName, volumeName, ex);
+      if (!(ex instanceof KSMException)) {
+        LOG.error("Setting bucket property failed for bucket:{} in volume:{}",
+            bucketName, volumeName, ex);
+      }
-      if(metadataManager.get(metadataManager.getVolumeKey(volumeName)) ==
-          null) {
-        LOG.error("volume: {} not found ", volumeName);
+      if (metadataManager.get(metadataManager.getVolumeKey(volumeName))
+          == null) {
+        LOG.debug("volume: {} not found ", volumeName);
-      if(metadataManager.get(bucketKey) == null) {
-        LOG.error("bucket: {} not found ", bucketName);
+      if (metadataManager.get(bucketKey) == null) {
+        LOG.debug("bucket: {} not found ", bucketName);
-      if(!metadataManager.isBucketEmpty(volumeName, bucketName)) {
-        LOG.error("bucket: {} is not empty ", bucketName);
+      if (!metadataManager.isBucketEmpty(volumeName, bucketName)) {
+        LOG.debug("bucket: {} is not empty ", bucketName);
-      LOG.error("Delete bucket failed for bucket:{} in volume:{}",
-          bucketName, volumeName, ex);
+      if (!(ex instanceof KSMException)) {
+        LOG.error("Delete bucket failed for bucket:{} in volume:{}", bucketName,
+            volumeName, ex);
+      }

INS8 INS8 INS8 INS8 INS25 MOV53 INS25 MOV53 INS25 MOV53 INS25 MOV53 INS38 MOV8 INS38 MOV8 INS38 MOV8 INS38 MOV8 INS36 INS36 INS36 INS36 UPD42 UPD42 INS62 UPD42 INS62 UPD42 UPD42 INS62 UPD42 UPD42 UPD42 INS62 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS42