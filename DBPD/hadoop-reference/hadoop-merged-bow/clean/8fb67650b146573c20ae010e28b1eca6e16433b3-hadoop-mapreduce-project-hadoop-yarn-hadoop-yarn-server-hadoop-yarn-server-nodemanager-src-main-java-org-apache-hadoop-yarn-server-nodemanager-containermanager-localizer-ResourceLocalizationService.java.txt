MAPREDUCE-2691. Finish up the cleanup of distributed cache file resources and related tests. Contributed by Siddharth Seth.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1167676 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collection;
+import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.fs.CommonConfigurationKeys;
-import org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.event.ContainerLocalizationEvent;
+import org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.event.ContainerLocalizationCleanupEvent;
+import org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.event.ResourceReleaseEvent;
-    localizerTracker = new LocalizerTracker(conf);
+    localizerTracker = createLocalizerTracker(conf);
+  LocalizerTracker createLocalizerTracker(Configuration conf) {
+    return new LocalizerTracker(conf);
+  }
+
+    Container c;
+    Map<LocalResourceVisibility, Collection<LocalResourceRequest>> rsrcs;
+    LocalResourcesTracker tracker;
-      Container c = rsrcReqs.getContainer();
+      c = rsrcReqs.getContainer();
-      final LocalResourcesTracker tracker;
-      LocalResourceVisibility vis = rsrcReqs.getVisibility();
-      switch (vis) {
-      default:
-      case PUBLIC:
-        tracker = publicRsrc;
-        break;
-      case PRIVATE:
-        tracker = privateRsrc.get(c.getUser());
-        break;
-      case APPLICATION:
-        tracker =
-          appRsrc.get(ConverterUtils.toString(c.getContainerID().getAppId()));
-        break;
-      }
-      // We get separate events one each for all resources of one visibility. So
-      // all the resources in this event are of the same visibility.
-      for (LocalResourceRequest req : rsrcReqs.getRequestedResources()) {
-        tracker.handle(new ResourceRequestEvent(req, vis, ctxt));
+      rsrcs = rsrcReqs.getRequestedResources();
+      for (LocalResourceVisibility vis : rsrcs.keySet()) {
+        tracker = getLocalResourcesTracker(vis, c.getUser(), 
+            c.getContainerID().getAppId());
+        for (LocalResourceRequest req : rsrcs.get(vis)) {
+          tracker.handle(new ResourceRequestEvent(req, vis, ctxt));
+        }
-      Container container =
-        ((ContainerLocalizationEvent)event).getContainer();
+      ContainerLocalizationCleanupEvent rsrcCleanup =
+        (ContainerLocalizationCleanupEvent) event;
+      c = rsrcCleanup.getContainer();
+      rsrcs = rsrcCleanup.getResources();
+      for (LocalResourceVisibility vis : rsrcs.keySet()) {
+        tracker = getLocalResourcesTracker(vis, c.getUser(), 
+            c.getContainerID().getAppId());
+        for (LocalResourceRequest req : rsrcs.get(vis)) {
+          tracker.handle(new ResourceReleaseEvent(req, c.getContainerID()));
+        }
+      }
-      userName = container.getUser();
-      String containerIDStr = container.toString();
+      userName = c.getUser();
+      String containerIDStr = c.toString();
-        ConverterUtils.toString(container.getContainerID().getAppId());
+        ConverterUtils.toString(c.getContainerID().getAppId());
-      dispatcher.getEventHandler().handle(new ContainerEvent(
-            container.getContainerID(),
+      dispatcher.getEventHandler().handle(new ContainerEvent(c.getContainerID(),
+  LocalResourcesTracker getLocalResourcesTracker(
+      LocalResourceVisibility visibility, String user, ApplicationId appId) {
+    switch (visibility) {
+      default:
+      case PUBLIC:
+        return publicRsrc;
+      case PRIVATE:
+        return privateRsrc.get(user);
+      case APPLICATION:
+        return appRsrc.get(ConverterUtils.toString(appId));
+    }
+  }
+
+    @SuppressWarnings("unchecked") // dispatcher not typed
+    @SuppressWarnings("unchecked") // dispatcher not typed
+    @SuppressWarnings("unchecked") // dispatcher not typed

MOV26 INS26 INS26 INS40 UPD40 UPD40 INS40 INS31 INS31 INS43 INS42 INS44 INS8 INS43 INS42 INS44 INS44 INS44 INS8 INS42 INS43 INS42 INS41 INS60 INS60 MOV60 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS50 INS79 INS79 INS79 INS42 MOV14 MOV43 INS59 INS74 INS59 INS21 INS21 INS70 MOV10 MOV10 INS21 INS70 INS21 INS60 MOV21 INS42 INS42 INS42 INS42 INS49 MOV49 INS41 MOV49 INS41 MOV49 INS41 INS42 INS45 INS42 INS45 INS42 INS45 INS32 INS42 INS43 INS43 INS74 INS42 INS7 INS7 INS44 INS32 INS8 UPD43 INS7 INS44 INS32 INS8 INS7 MOV43 INS59 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS43 INS43 INS42 MOV32 INS42 MOV32 MOV43 INS42 UPD42 MOV42 UPD42 MOV42 INS21 MOV70 UPD42 UPD42 INS11 UPD42 INS42 INS32 INS43 INS42 INS42 INS42 INS21 INS70 INS42 INS32 INS42 INS32 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 MOV7 INS32 UPD43 MOV43 MOV42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 INS42 MOV7 INS44 INS32 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 UPD42 UPD42 INS43 INS42 INS42 INS42 INS42 INS21 UPD42 INS42 INS42 MOV32 INS32 INS42 UPD42 INS32 INS42 INS32 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS14 UPD42 MOV42 INS42 UPD42 INS43 INS42 INS32 INS42 INS42 INS42 DEL83 DEL42 DEL59 DEL60 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL49 DEL42 DEL42 DEL7 DEL21 DEL10 DEL21 DEL50 DEL10 DEL10 DEL11 DEL36 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL21