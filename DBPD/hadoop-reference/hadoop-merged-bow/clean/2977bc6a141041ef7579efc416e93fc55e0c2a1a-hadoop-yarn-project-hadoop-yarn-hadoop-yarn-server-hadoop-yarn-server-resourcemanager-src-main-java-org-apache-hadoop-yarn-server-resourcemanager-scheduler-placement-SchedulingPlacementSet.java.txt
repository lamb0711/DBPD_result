YARN-6040. Introduce api independent PendingAsk to replace usage of ResourceRequest within Scheduler classes. (Wangda Tan via asuresh)

+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.PendingAsk;
-   * Get ResourceRequest by given schedulerKey and resourceName
+   * Get pending ask for given resourceName. If there's no such pendingAsk,
+   * returns {@link PendingAsk#ZERO}
+   *
-   * @return ResourceRequest
+   * @return PendingAsk
-  ResourceRequest getResourceRequest(String resourceName);
+  PendingAsk getPendingAsk(String resourceName);
+
+  /**
+   * Get #pending-allocations for given resourceName. If there's no such
+   * pendingAsk, returns 0
+   *
+   * @param resourceName resourceName
+   * @return #pending-allocations
+   */
+  int getOutstandingAsksCount(String resourceName);
-   * @param request Which resource request to allocate
-      NodeType type, SchedulerNode node, ResourceRequest request);
+      NodeType type, SchedulerNode node);
+
+  /**
+   * Returns list of accepted resourceNames.
+   * @return Iterator of accepted resourceNames
+   */
+  Iterator<String> getAcceptedResouceNames();
+
+  /**
+   * Can delay to give locality?
+   * TODO (wangda): This should be moved out of SchedulingPlacementSet
+   * and should belong to specific delay scheduling policy impl.
+   *
+   * @param resourceName resourceName
+   * @return can/cannot
+   */
+  boolean canDelayTo(String resourceName);
+
+  /**
+   * Does this {@link SchedulingPlacementSet} accept resources on nodePartition?
+   *
+   * @param nodePartition nodePartition
+   * @param schedulingMode schedulingMode
+   * @return accepted/not
+   */
+  boolean acceptNodePartition(String nodePartition,
+      SchedulingMode schedulingMode);
+
+  /**
+   * It is possible that one request can accept multiple node partition,
+   * So this method returns primary node partition for pending resource /
+   * headroom calculation.
+   *
+   * @return primary requested node partition
+   */
+  String getPrimaryRequestedNodePartition();
+
+  /**
+   * @return number of unique location asks with #pending greater than 0,
+   * (like /rack1, host1, etc.).
+   *
+   * TODO (wangda): This should be moved out of SchedulingPlacementSet
+   * and should belong to specific delay scheduling policy impl.
+   */
+  int getUniqueLocationAsks();
+
+  /**
+   * Print human-readable requests to LOG debug.
+   */
+  void showRequests();

INS26 INS26 MOV31 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS29 INS43 INS42 MOV44 INS29 INS39 INS42 INS44 INS29 INS74 INS42 INS39 INS42 INS44 INS29 INS39 INS42 INS44 INS44 INS29 INS43 INS42 INS29 INS39 INS42 INS29 INS39 INS42 INS65 MOV65 INS65 INS42 INS65 INS65 INS65 INS43 INS42 INS65 INS65 INS43 INS43 INS65 UPD65 INS43 INS42 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS65 INS65 INS42 INS65 INS65 INS66 INS66 INS65 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS66 INS42 INS42 INS66 INS66 INS66 INS42 UPD66 UPD66 UPD42 MOV42 INS66 INS65 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS66 INS67 INS42 INS42 INS42 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44 DEL43 DEL42