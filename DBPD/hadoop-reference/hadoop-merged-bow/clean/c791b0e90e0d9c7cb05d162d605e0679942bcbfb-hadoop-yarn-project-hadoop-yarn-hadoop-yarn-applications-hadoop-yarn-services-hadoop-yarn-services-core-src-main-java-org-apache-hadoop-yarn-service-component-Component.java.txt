YARN-10219. Fix YARN Native Service Placement Constraints with Node Attributes.

Contributed by Eric Yang.

+import org.apache.hadoop.yarn.api.records.NodeAttributeOpCode;
-            constraint = PlacementConstraints
-                .targetIn(yarnServiceConstraint.getScope().getValue(),
-                    targetExpressions.toArray(new TargetExpression[0]))
-                .build();
+            constraint = getAffinityConstraint(yarnServiceConstraint,
+              targetExpressions);
-            constraint = PlacementConstraints
-                .targetNotIn(yarnServiceConstraint.getScope().getValue(),
-                    targetExpressions.toArray(new TargetExpression[0]))
-                .build();
+            constraint = getAntiAffinityConstraint(yarnServiceConstraint,
+              targetExpressions);
+  private PlacementConstraint getAffinityConstraint(
+      org.apache.hadoop.yarn.service.api.records.PlacementConstraint
+      yarnServiceConstraint, List<TargetExpression> targetExpressions) {
+    PlacementConstraint constraint = null;
+    if (!yarnServiceConstraint.getTargetTags().isEmpty() ||
+        !yarnServiceConstraint.getNodePartitions().isEmpty()) {
+      constraint = PlacementConstraints
+        .targetIn(yarnServiceConstraint.getScope().getValue(),
+            targetExpressions.toArray(new TargetExpression[0]))
+                .build();
+    }
+    if (!yarnServiceConstraint.getNodeAttributes().isEmpty()) {
+      constraint = PlacementConstraints
+        .targetNodeAttribute(yarnServiceConstraint.getScope().getValue(),
+            NodeAttributeOpCode.EQ, targetExpressions.toArray(
+                new TargetExpression[0])).build();
+    }
+    return constraint;
+  }
+
+  private PlacementConstraint getAntiAffinityConstraint(
+      org.apache.hadoop.yarn.service.api.records.PlacementConstraint
+      yarnServiceConstraint, List<TargetExpression> targetExpressions) {
+    PlacementConstraint constraint = null;
+    if (!yarnServiceConstraint.getTargetTags().isEmpty() ||
+        !yarnServiceConstraint.getNodePartitions().isEmpty()) {
+      constraint = PlacementConstraints
+        .targetNotIn(yarnServiceConstraint.getScope().getValue(),
+            targetExpressions.toArray(new TargetExpression[0]))
+                .build();
+    }
+    if (!yarnServiceConstraint.getNodeAttributes().isEmpty()) {
+      constraint = PlacementConstraints
+        .targetNodeAttribute(yarnServiceConstraint.getScope().getValue(),
+            NodeAttributeOpCode.NE, targetExpressions.toArray(
+                new TargetExpression[0])).build();
+    }
+    return constraint;
+  }
+

INS26 INS40 INS31 INS31 INS83 INS43 INS42 INS44 INS44 INS8 INS83 INS43 INS42 INS44 INS44 INS8 INS42 INS43 INS42 INS74 INS42 INS60 INS25 INS25 INS41 INS42 INS43 INS42 INS74 INS42 INS60 INS25 INS25 INS41 INS40 INS43 INS43 INS43 INS59 INS27 INS8 INS38 INS8 INS42 INS40 INS43 INS43 INS43 INS59 INS27 INS8 INS38 INS8 INS42 INS42 INS42 INS42 INS42 INS33 INS38 INS38 MOV21 INS32 INS21 INS42 INS42 INS42 INS42 INS33 INS38 INS38 MOV21 INS32 INS21 INS32 INS32 INS32 INS42 INS7 INS32 INS32 INS32 INS42 INS7 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS40 INS32 INS42 INS42 INS32 INS40 INS32 INS21 INS21 INS32 INS42 INS42 INS42 INS3 INS32 INS42 INS42 INS42 INS3 INS7 INS7 INS42 INS42 INS5 INS34 INS42 INS42 INS5 INS34 INS42 INS32 INS42 INS32 INS43 INS85 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42