Merge r1469042 through r1469643 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1469669 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.yarn.api.records.ContainerToken;
-  private ContainerId containerID;
-  private NodeId containerNodeId;
-  private String containerMgrAddress;
-  private String nodeHttpAddress;
+  @VisibleForTesting
+  public Container container;
-  private ContainerToken containerToken;
-  private Resource assignedCapability;
-      return containerID;
+      return container == null ? null : container.getId();
-      return containerMgrAddress;
+      return container == null ? null : StringInterner.weakIntern(container
+        .getNodeId().toString());
-      return containerNodeId;
+      return container == null ? null : container.getNodeId();
-      return nodeHttpAddress;
+      return container == null ? null : container.getNodeHttpAddress();
-      if (this.containerNodeId != null) {
-        result.setNodeManagerPort(this.containerNodeId.getPort());
+      if (this.container != null) {
+        result.setNodeManagerPort(this.container.getNodeId().getPort());
-    containerID = taInfo.getContainerId();
-    containerNodeId = ConverterUtils.toNodeId(taInfo.getHostname() + ":"
+    ContainerId containerId = taInfo.getContainerId();
+    NodeId containerNodeId = ConverterUtils.toNodeId(taInfo.getHostname() + ":"
-    containerMgrAddress = StringInterner.weakIntern(
-        containerNodeId.toString());
-    nodeHttpAddress = StringInterner.weakIntern(taInfo.getHostname() + ":"
+    String nodeHttpAddress = StringInterner.weakIntern(taInfo.getHostname() + ":"
+    // Resource/Priority/Tokens are only needed while launching the
+    // container on an NM, these are already completed tasks, so setting them to
+    // null
+    container =
+        BuilderUtils.newContainer(containerId, containerNodeId,
+          nodeHttpAddress, null, null, null);
+    NodeId containerNodeId = container.getNodeId();
-            taskAttempt.containerNodeId == null ? "UNKNOWN"
-                : taskAttempt.containerNodeId.getHost(),
-            taskAttempt.containerNodeId == null ? -1 
-                : taskAttempt.containerNodeId.getPort(),    
+            taskAttempt.container == null ? "UNKNOWN"
+                : taskAttempt.container.getNodeId().getHost(),
+            taskAttempt.container == null ? -1 
+                : taskAttempt.container.getNodeId().getPort(),    
-        + "] using containerId: [" + containerID + " on NM: ["
-        + containerMgrAddress + "]");
+        + "] using containerId: [" + container.getId() + " on NM: ["
+        + StringInterner.weakIntern(container.getNodeId().toString()) + "]");
-          launchTime, trackerName, httpPort, shufflePort, containerID,
+          launchTime, trackerName, httpPort, shufflePort, container.getId(),
-      taskAttempt.containerID = cEvent.getContainer().getId();
-      taskAttempt.containerNodeId = cEvent.getContainer().getNodeId();
-      taskAttempt.containerMgrAddress = StringInterner.weakIntern(
-          taskAttempt.containerNodeId.toString());
-      taskAttempt.nodeHttpAddress = StringInterner.weakIntern(
-          cEvent.getContainer().getNodeHttpAddress());
-      taskAttempt.containerToken = cEvent.getContainer().getContainerToken();
-      taskAttempt.assignedCapability = cEvent.getContainer().getResource();
+      Container container = cEvent.getContainer();
+      taskAttempt.container = container;
-      taskAttempt.jvmID = new WrappedJvmID(
-          taskAttempt.remoteTask.getTaskID().getJobID(), 
-          taskAttempt.remoteTask.isMapTask(), taskAttempt.containerID.getId());
+      taskAttempt.jvmID =
+          new WrappedJvmID(taskAttempt.remoteTask.getTaskID().getJobID(),
+            taskAttempt.remoteTask.isMapTask(), taskAttempt.container.getId()
+              .getId());
-      taskAttempt.eventHandler.handle(new ContainerRemoteLaunchEvent(
-          taskAttempt.attemptId, taskAttempt.containerID,
-          taskAttempt.containerMgrAddress, taskAttempt.containerToken,
-          launchContext, taskAttempt.assignedCapability, taskAttempt.remoteTask));
+      taskAttempt.eventHandler
+        .handle(new ContainerRemoteLaunchEvent(taskAttempt.attemptId,
+          launchContext, container, taskAttempt.remoteTask));
-      InetSocketAddress nodeHttpInetAddr =
-          NetUtils.createSocketAddr(taskAttempt.nodeHttpAddress); // TODO:
-                                                                  // Costly?
+      InetSocketAddress nodeHttpInetAddr = // TODO: Costly to create sock-addr?
+          NetUtils.createSocketAddr(taskAttempt.container.getNodeHttpAddress());
+    String containerHostName = this.container == null ? "UNKNOWN"
+         : this.container.getNodeId().getHost();
+    int containerNodePort =
+        this.container == null ? -1 : this.container.getNodeId().getPort();
-         this.containerNodeId == null ? "UNKNOWN"
-             : this.containerNodeId.getHost(),
-         this.containerNodeId == null ? -1 : this.containerNodeId.getPort(),
+         containerHostName,
+         containerNodePort,
-         this.containerNodeId == null ? "UNKNOWN"
-             : this.containerNodeId.getHost(),
-         this.containerNodeId == null ? -1 : this.containerNodeId.getPort(),
+         containerHostName,
+         containerNodePort,
-          taskAttempt.containerID, taskAttempt.containerMgrAddress,
-          taskAttempt.containerToken,
+          taskAttempt.container.getId(), StringInterner
+              .weakIntern(taskAttempt.container.getNodeId().toString()),
+          taskAttempt.container.getContainerToken(),

MOV31 INS23 INS78 UPD83 MOV83 UPD43 MOV43 MOV59 MOV43 UPD42 MOV43 UPD42 INS42 UPD42 UPD42 INS60 INS60 INS60 INS60 INS60 INS60 MOV43 INS59 MOV43 INS59 MOV43 INS59 INS43 INS59 INS60 MOV43 INS59 INS39 INS59 INS42 MOV32 INS42 MOV32 INS42 MOV32 UPD42 INS42 INS42 INS32 INS43 INS59 INS42 INS16 INS42 INS16 INS16 INS16 INS16 INS16 INS42 UPD42 UPD42 MOV42 UPD42 MOV42 INS33 INS33 INS33 INS42 INS42 INS32 INS32 INS32 INS42 INS42 MOV32 UPD40 INS42 INS27 INS45 INS32 INS27 MOV38 INS32 INS27 INS33 INS32 INS27 INS33 INS32 INS27 INS33 INS32 INS27 INS33 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS22 INS33 INS32 INS42 INS22 INS33 INS32 INS42 INS32 INS32 INS32 INS42 INS33 INS42 INS42 INS42 INS33 INS42 INS42 INS32 INS42 INS33 INS42 INS42 INS42 INS33 INS42 INS42 UPD42 UPD40 INS32 UPD40 INS32 INS32 INS42 INS32 INS42 UPD40 MOV40 INS42 INS52 INS42 INS22 INS42 INS52 INS42 INS22 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS40 INS42 INS32 INS42 UPD40 MOV40 INS42 UPD40 MOV40 INS42 INS42 INS42 UPD40 MOV40 MOV42 INS52 INS42 INS52 INS42 INS32 INS42 INS42 INS42 INS32 INS40 INS42 MOV22 INS42 UPD42 DEL40 DEL26 DEL83 DEL42 DEL59 DEL23 DEL42 DEL59 DEL23 DEL83 DEL42 DEL59 DEL23 DEL83 DEL42 DEL59 DEL23 DEL83 DEL23 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL42 DEL42 DEL42 DEL42 DEL42 DEL7 DEL21 DEL42 DEL7 DEL21 DEL32 DEL42 DEL7 DEL21 DEL42 DEL42 DEL42 DEL40 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL40 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL40 DEL42 DEL42 DEL40 DEL42 DEL32 DEL32 DEL7 DEL21 DEL40 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL7 DEL21 DEL42 DEL32 DEL40 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL32 DEL40 DEL40 DEL40 DEL40 DEL52 DEL42 DEL22 DEL33 DEL27 DEL45 DEL52 DEL42 DEL22 DEL42 DEL32 DEL16 DEL52 DEL42 DEL22 DEL33 DEL27 DEL52 DEL42 DEL22 DEL42 DEL32 DEL16 DEL52 DEL42 DEL22 DEL33 DEL27 DEL45 DEL52 DEL42 DEL22 DEL42 DEL32 DEL16 DEL52 DEL42 DEL22 DEL33 DEL27 DEL34 DEL38 DEL52 DEL42 DEL22 DEL42 DEL32 DEL16 DEL40 DEL40 DEL40