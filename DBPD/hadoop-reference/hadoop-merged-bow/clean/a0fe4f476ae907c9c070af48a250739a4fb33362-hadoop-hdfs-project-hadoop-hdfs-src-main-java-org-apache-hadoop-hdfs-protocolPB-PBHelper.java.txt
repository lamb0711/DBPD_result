Merge trunk into HA branch.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1213867 13f79535-47bb-0310-9956-ffa450edef68

+ * 
+ * Note that when converting from an internal type to protobuf type, the
+ * converter never return null for protobuf type. The check for internal type
+ * being null must be done before calling the convert() method.
-        .setSignature(convert(cmd.getSignature())).build();
+        .setSignature(convert(cmd.getSignature()))
+        .setNeedToReturnImage(cmd.needToReturnImage()).build();
-          .setType(NamenodeCommandProto.Type.NamenodeCommand)
+          .setType(NamenodeCommandProto.Type.CheckPointCommand)
-    return NamenodeCommandProto.newBuilder().setAction(cmd.getAction()).build();
+    return NamenodeCommandProto.newBuilder()
+        .setType(NamenodeCommandProto.Type.NamenodeCommand)
+        .setAction(cmd.getAction()).build();
+    if (cmd == null) return null;
-        di.getLocation(), di.getHostName(),
+        di.hasLocation() ? di.getLocation() : null , 
+        di.hasHostName() ? di.getHostName() : null,
-    return DatanodeInfoProto.newBuilder().
+    DatanodeInfoProto.Builder builder = DatanodeInfoProto.newBuilder();
+    if (di.getHostName() != null) {
+      builder.setHostName(di.getHostName());
+    }
+    if (di.getNetworkLocation() != null) {
+      builder.setLocation(di.getNetworkLocation());
+    }
+        
+    return builder.
-     setLocation(di.getNetworkLocation()).
-     setHostName(di.getHostName()).
-    return ReceivedDeletedBlockInfoProto.newBuilder()
-        .setBlock(PBHelper.convert(receivedDeletedBlockInfo.getBlock()))
-        .setDeleteHint(receivedDeletedBlockInfo.getDelHints()).build();
+    ReceivedDeletedBlockInfoProto.Builder builder = 
+        ReceivedDeletedBlockInfoProto.newBuilder();
+    
+    if (receivedDeletedBlockInfo.getDelHints() != null) {
+      builder.setDeleteHint(receivedDeletedBlockInfo.getDelHints());
+    }
+    return builder.setBlock(PBHelper.convert(receivedDeletedBlockInfo.getBlock()))
+        .build();
-        proto.getDeleteHint());
+        proto.hasDeleteHint() ? proto.getDeleteHint() : null);
-    if (lb == null) {
-      return null;
-    }
-        PBHelper.convert(lb.getLastBlock()),
+        lb.hasLastBlock() ? PBHelper.convert(lb.getLastBlock()) : null,
-    return LocatedBlocksProto.newBuilder().
-      setFileLength(lb.getFileLength()).
-      setUnderConstruction(lb.isUnderConstruction()).
-      addAllBlocks(PBHelper.convertLocatedBlock2(lb.getLocatedBlocks())).
-      setLastBlock(PBHelper.convert(lb.getLastLocatedBlock())).setIsLastBlockComplete(lb.isLastBlockComplete()).build();
+    LocatedBlocksProto.Builder builder = 
+        LocatedBlocksProto.newBuilder();
+    if (lb.getLastLocatedBlock() != null) {
+      builder.setLastBlock(PBHelper.convert(lb.getLastLocatedBlock()));
+    }
+    return builder.setFileLength(lb.getFileLength())
+        .setUnderConstruction(lb.isUnderConstruction())
+        .addAllBlocks(PBHelper.convertLocatedBlock2(lb.getLocatedBlocks()))
+        .setIsLastBlockComplete(lb.isLastBlockComplete()).build();
-      setSymlink(ByteString.copyFrom(fs.getSymlinkInBytes())).
-    LocatedBlocks locations = null;
+    
+    if (fs.getSymlink() != null) {
+      builder.setSymlink(ByteString.copyFrom(fs.getSymlinkInBytes()));
+    }
-      builder.setLocations(PBHelper.convert(locations));
+      LocatedBlocks locations = ((HdfsLocatedFileStatus)fs).getBlockLocations();
+      if (locations != null) {
+        builder.setLocations(PBHelper.convert(locations));
+      }

INS66 INS66 INS66 INS25 INS60 INS25 INS25 INS60 INS25 INS60 INS25 INS25 INS25 INS32 INS27 INS41 INS43 INS59 INS27 INS8 INS27 INS8 MOV32 INS43 INS59 INS27 INS8 MOV32 INS43 INS59 INS27 INS8 MOV32 INS27 INS8 MOV62 INS8 MOV32 INS42 INS42 INS33 INS33 INS16 INS16 INS40 INS42 MOV32 INS32 INS33 INS21 INS32 INS33 INS21 UPD42 MOV42 INS40 INS42 MOV32 INS32 INS33 INS21 UPD42 INS16 INS16 INS40 INS42 MOV32 INS32 INS33 INS21 UPD42 MOV42 MOV32 INS32 INS33 INS21 MOV60 MOV25 INS42 INS32 INS32 INS32 MOV32 INS33 INS32 MOV32 INS33 INS42 INS42 INS32 INS42 INS42 INS32 UPD42 MOV32 INS42 INS42 INS32 INS42 INS32 MOV32 INS33 INS32 MOV32 INS33 INS42 INS42 INS32 UPD42 MOV32 UPD42 MOV32 INS42 INS42 INS32 INS27 UPD42 MOV42 INS42 MOV32 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 MOV32 UPD42 MOV32 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 MOV32 INS32 INS42 INS33 UPD42 UPD42 MOV42 MOV42 INS36 INS42 UPD40 UPD42 UPD42 INS42 INS11 UPD42 UPD42 INS43 INS42 UPD42 INS32 UPD42 INS42 UPD42 INS32 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL33 DEL27 DEL33 DEL41 DEL8 DEL25 DEL42 DEL42 DEL32 DEL42 DEL32 DEL33