Merge r1480440 through r1480820 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1480824 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashSet;
+import java.util.Set;
+import org.apache.hadoop.yarn.api.protocolrecords.PreemptionContainer;
+import org.apache.hadoop.yarn.api.protocolrecords.PreemptionContract;
+import org.apache.hadoop.yarn.api.protocolrecords.PreemptionResourceRequest;
+import org.apache.hadoop.yarn.api.protocolrecords.StrictPreemptionContract;
+import org.apache.hadoop.yarn.api.protocolrecords.PreemptionMessage;
-      RegisterApplicationMasterRequest request) throws YarnRemoteException {
+      RegisterApplicationMasterRequest request) throws YarnRemoteException,
+      IOException {
-      FinishApplicationMasterRequest request) throws YarnRemoteException {
+      FinishApplicationMasterRequest request) throws YarnRemoteException,
+      IOException {
-      throws YarnRemoteException {
+      throws YarnRemoteException, IOException {
+   
+      // add preemption to the allocateResponse message (if any)
+      allocateResponse.setPreemptionMessage(generatePreemptionMessage(allocation));
+      
+  
+  private PreemptionMessage generatePreemptionMessage(Allocation allocation){
+    PreemptionMessage pMsg = null;
+    // assemble strict preemption request
+    if (allocation.getStrictContainerPreemptions() != null) {
+       pMsg =
+        recordFactory.newRecordInstance(PreemptionMessage.class);
+      StrictPreemptionContract pStrict =
+          recordFactory.newRecordInstance(StrictPreemptionContract.class);
+      Set<PreemptionContainer> pCont = new HashSet<PreemptionContainer>();
+      for (ContainerId cId : allocation.getStrictContainerPreemptions()) {
+        PreemptionContainer pc =
+            recordFactory.newRecordInstance(PreemptionContainer.class);
+        pc.setId(cId);
+        pCont.add(pc);
+      }
+      pStrict.setContainers(pCont);
+      pMsg.setStrictContract(pStrict);
+    }
+
+    // assemble negotiable preemption request
+    if (allocation.getResourcePreemptions() != null &&
+        allocation.getResourcePreemptions().size() > 0 &&
+        allocation.getContainerPreemptions() != null &&
+        allocation.getContainerPreemptions().size() > 0) {
+      if (pMsg == null) {
+        pMsg =
+            recordFactory.newRecordInstance(PreemptionMessage.class);
+      }
+      PreemptionContract contract =
+          recordFactory.newRecordInstance(PreemptionContract.class);
+      Set<PreemptionContainer> pCont = new HashSet<PreemptionContainer>();
+      for (ContainerId cId : allocation.getContainerPreemptions()) {
+        PreemptionContainer pc =
+            recordFactory.newRecordInstance(PreemptionContainer.class);
+        pc.setId(cId);
+        pCont.add(pc);
+      }
+      List<PreemptionResourceRequest> pRes = new ArrayList<PreemptionResourceRequest>();
+      for (ResourceRequest crr : allocation.getResourcePreemptions()) {
+        PreemptionResourceRequest prr =
+            recordFactory.newRecordInstance(PreemptionResourceRequest.class);
+        prr.setResourceRequest(crr);
+        pRes.add(prr);
+      }
+      contract.setContainers(pCont);
+      contract.setResourceRequest(pRes);
+      pMsg.setContract(contract);
+    }
+    
+    return pMsg;
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS43 INS43 INS43 INS83 INS43 INS42 INS44 INS8 INS42 INS42 INS42 INS42 INS43 INS42 INS60 INS25 INS25 INS41 INS42 INS43 INS59 INS27 INS8 INS27 INS8 INS42 INS21 INS42 INS42 INS33 INS32 INS33 INS21 INS60 INS60 INS70 INS21 INS21 INS27 INS27 INS25 INS60 INS60 INS70 INS60 INS70 INS21 INS21 INS21 INS32 INS42 INS42 INS7 INS43 INS59 INS74 INS59 INS44 INS32 INS8 INS32 INS32 INS27 INS27 INS32 INS34 INS27 INS8 INS43 INS59 INS74 INS59 INS44 INS32 INS8 INS74 INS59 INS44 INS32 INS8 INS32 INS32 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS43 INS43 INS42 INS14 INS43 INS42 INS42 INS42 INS60 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS27 INS32 INS33 INS32 INS42 INS42 INS33 INS21 INS42 INS42 INS32 INS43 INS43 INS42 INS14 INS43 INS42 INS42 INS42 INS60 INS21 INS21 INS43 INS43 INS42 INS14 INS43 INS42 INS42 INS42 INS60 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS57 INS42 INS42 INS57 INS42 INS42 INS74 INS42 INS43 INS59 INS32 INS32 INS32 INS33 INS32 INS34 INS42 INS42 INS42 INS42 INS7 INS42 INS42 INS57 INS42 INS42 INS74 INS42 INS43 INS59 INS32 INS32 INS42 INS42 INS74 INS42 INS43 INS59 INS32 INS32 INS43 INS43 INS43 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS43 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS57 INS42 INS42 INS42 INS42 INS57 INS42 INS42 INS42 INS42 INS42 INS57 INS42 INS42 INS42 INS42 INS57 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS42