Merge r1360400 through r1399945 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1399950 13f79535-47bb-0310-9956-ffa450edef68

+import java.security.PrivilegedExceptionAction;
+import org.apache.hadoop.http.HttpConfig;
+import org.apache.hadoop.security.ssl.SSLFactory;
-  
+
+  private static SSLFactory sslFactory;
+
-    boolean useIp = new Configuration().getBoolean(
+    Configuration conf = new Configuration();
+    boolean useIp = conf.getBoolean(
+    if (HttpConfig.isSecure()) {
+      sslFactory = new SSLFactory(SSLFactory.Mode.CLIENT, conf);
+      try {
+        sslFactory.init();
+      } catch (Exception ex) {
+        throw new RuntimeException(ex);
+      }
+    }
-    if (fqdn == null || fqdn.equals("") || fqdn.equals("0.0.0.0")) {
+    if (fqdn == null || fqdn.isEmpty() || fqdn.equals("0.0.0.0")) {
+  
+  /**
+   * Perform the given action as the daemon's login user. If an
+   * InterruptedException is thrown, it is converted to an IOException.
+   *
+   * @param action the action to perform
+   * @return the result of the action
+   * @throws IOException in the event of error
+   */
+  public static <T> T doAsLoginUser(PrivilegedExceptionAction<T> action)
+      throws IOException {
+    return doAsUser(UserGroupInformation.getLoginUser(), action);
+  }
+
+  /**
+   * Perform the given action as the daemon's current user. If an
+   * InterruptedException is thrown, it is converted to an IOException.
+   *
+   * @param action the action to perform
+   * @return the result of the action
+   * @throws IOException in the event of error
+   */
+  public static <T> T doAsCurrentUser(PrivilegedExceptionAction<T> action)
+      throws IOException {
+    return doAsUser(UserGroupInformation.getCurrentUser(), action);
+  }
+
+  private static <T> T doAsUser(UserGroupInformation ugi,
+      PrivilegedExceptionAction<T> action) throws IOException {
+    try {
+      return ugi.doAs(action);
+    } catch (InterruptedException ie) {
+      throw new IOException(ie);
+    }
+  }
-    if(!UserGroupInformation.isSecurityEnabled()) {
+    if (!HttpConfig.isSecure() && !UserGroupInformation.isSecurityEnabled()) {
-      return new AuthenticatedURL().openConnection(url, token);
+      return new AuthenticatedURL(null, sslFactory).openConnection(url, token);
+    @Override
+    @Override

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS31 INS31 INS31 INS83 INS83 INS43 INS59 INS8 INS29 INS83 INS83 INS73 INS43 INS42 INS44 INS43 INS8 INS29 INS83 INS83 INS73 INS43 INS42 INS44 INS43 INS8 INS83 INS83 INS73 INS43 INS42 INS44 INS44 INS43 INS8 INS42 INS42 MOV60 INS60 MOV21 INS25 INS65 INS65 INS65 INS65 INS42 INS42 INS74 INS42 INS42 INS41 INS65 INS65 INS65 INS65 INS42 INS42 INS74 INS42 INS42 INS41 INS42 INS42 INS43 INS42 INS74 INS42 INS42 INS54 INS78 INS78 INS43 INS39 INS59 INS32 INS8 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS43 INS43 INS32 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS43 INS43 INS32 INS42 INS43 INS43 INS8 INS12 INS27 INS42 INS42 INS42 UPD42 MOV14 INS42 INS32 INS42 INS42 INS21 INS54 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS41 INS44 INS8 INS38 MOV38 INS42 INS42 INS40 INS40 INS7 INS8 INS12 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS53 INS32 INS42 INS14 INS21 INS44 INS8 UPD42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS43 INS40 INS42 INS32 INS43 INS42 INS53 INS43 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS43 INS42 INS42 DEL39 DEL42 DEL40 DEL40 DEL32 DEL8 DEL45