HDFS-3394. Do not use generic in INodeFile.getLastBlock(): the run-time ClassCastException check is useless since generic type information is only available in compile-time.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1341141 13f79535-47bb-0310-9956-ffa450edef68

-  protected long header;
+  private long header;
-  protected BlockInfo blocks[] = null;
+  BlockInfo blocks[] = null;
-  protected INodeFile() {
-    blocks = null;
-    header = 0;
-  }
-
-  protected INodeFile(PermissionStatus permissions, BlockInfo[] blklist,
+  INodeFile(PermissionStatus permissions, BlockInfo[] blklist,
-  protected void setPermission(FsPermission permission) {
+  void setPermission(FsPermission permission) {
-  public boolean isDirectory() {
+  boolean isDirectory() {
-  /**
-   * Get block replication for the file 
-   * @return block replication value
-   */
+  /** @return the replication factor of the file. */
+  @Override
-  public void setReplication(short replication) {
+  void setReplication(short replication) {
-  /**
-   * Get preferred block size for the file
-   * @return preferred block size in bytes
-   */
+  /** @return preferred block size (in bytes) of the file. */
+  @Override
-        return header & ~HEADERMASK;
+    return header & ~HEADERMASK;
-  public void setPreferredBlockSize(long preferredBlkSize)
-  {
+  private void setPreferredBlockSize(long preferredBlkSize) {
-  /**
-   * Get file blocks 
-   * @return file blocks
-   */
+  /** @return the blocks of the file. */
+  @Override
-  /**
-   * Set file block
-   */
+  /** Set the block of the file at the given index. */
+  @Override
-  long diskspaceConsumed(Block[] blkArr) {
+  private long diskspaceConsumed(Block[] blkArr) {
-  /**
-   * Get the last block of the file.
-   * Make sure it has the right type.
-   */
-  public <T extends BlockInfo> T getLastBlock() throws IOException {
-    if (blocks == null || blocks.length == 0)
-      return null;
-    T returnBlock = null;
-    try {
-      @SuppressWarnings("unchecked")  // ClassCastException is caught below
-      T tBlock = (T)blocks[blocks.length - 1];
-      returnBlock = tBlock;
-    } catch(ClassCastException cce) {
-      throw new IOException("Unexpected last block type: " 
-          + blocks[blocks.length - 1].getClass().getSimpleName());
-    }
-    return returnBlock;
+  @Override
+  public BlockInfo getLastBlock() throws IOException {
+    return blocks == null || blocks.length == 0? null: blocks[blocks.length-1];
-  /** @return the number of blocks */ 
+  @Override

UPD83 INS78 INS78 UPD83 INS78 INS78 INS83 INS78 MOV43 INS78 INS42 INS42 INS42 INS42 INS42 INS41 INS42 UPD66 UPD66 UPD66 UPD66 INS16 MOV27 INS33 MOV2 DEL83 DEL83 DEL42 DEL42 DEL33 DEL7 DEL21 DEL42 DEL34 DEL7 DEL21 DEL8 DEL31 DEL83 DEL83 DEL83 DEL66 DEL65 DEL83 DEL66 DEL65 DEL66 DEL65 DEL66 DEL66 DEL65 DEL29 DEL42 DEL73 DEL42 DEL43 DEL33 DEL41 DEL25 DEL42 DEL43 DEL42 DEL33 DEL59 DEL60 DEL42 DEL45 DEL79 DEL42 DEL43 DEL42 DEL42 DEL43 DEL11 DEL59 DEL60 DEL42 DEL42 DEL7 DEL21 DEL8 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL45 DEL42 DEL40 DEL34 DEL27 DEL2 DEL42 DEL32 DEL42 DEL32 DEL27 DEL14 DEL53 DEL8 DEL12 DEL54 DEL42 DEL41 DEL66 DEL65 DEL29