Merge r1426019 through r1432788 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1432796 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.concurrent.atomic.AtomicBoolean;
+import org.apache.hadoop.yarn.event.EventHandler;
-import org.apache.hadoop.yarn.service.ServiceStateChangeListener;
-public class NodeManager extends CompositeService implements
-    ServiceStateChangeListener {
+public class NodeManager extends CompositeService 
+    implements EventHandler<NodeManagerEvent> {
+  private AtomicBoolean isStopping = new AtomicBoolean(false);
+  
-    nodeStatusUpdater.register(this);
+    dispatcher.register(NodeManagerEventType.class, this);
+    if (isStopping.getAndSet(true)) {
+      return;
+    }
+    
-  private void cleanupContainers() {
+  protected void cleanupContainers() {
-  @Override
-  public void stateChanged(Service service) {
-    if (NodeStatusUpdaterImpl.class.getName().equals(service.getName())
-        && STATE.STOPPED.equals(service.getServiceState())) {
-
-      boolean hasToReboot = ((NodeStatusUpdaterImpl) service).hasToRebootNode();
-
-      // Shutdown the Nodemanager when the NodeStatusUpdater is stopped.      
-      stop();
-
-      // Reboot the whole node-manager if NodeStatusUpdater got a reboot command
-      // from the RM.
-      if (hasToReboot) {
-        LOG.info("Rebooting the node manager.");
-        NodeManager nodeManager = createNewNodeManager();
-        nodeManager.initAndStartNodeManager(this.getConfig(), hasToReboot);
-      }
-    }
+  private void reboot() {
+    LOG.info("Rebooting the node manager.");
+    NodeManager nodeManager = createNewNodeManager();
+    nodeManager.initAndStartNodeManager(this.getConfig(), true);
+  @Override
+  public void handle(NodeManagerEvent event) {
+    switch (event.getType()) {
+    case SHUTDOWN:
+      stop();
+      break;
+    case REBOOT:
+      stop();
+      reboot();
+      break;
+    default:
+      LOG.warn("Invalid shutdown event " + event.getType() + ". Ignoring.");
+    }
+  }
+  

MOV26 INS26 MOV31 INS40 UPD40 INS74 INS23 INS31 INS43 INS43 INS83 INS43 INS59 MOV21 UPD83 INS83 INS39 INS42 MOV8 UPD42 UPD42 MOV42 INS42 INS42 INS42 INS14 INS25 UPD43 UPD42 INS50 INS43 INS9 INS32 INS8 UPD42 INS32 INS49 MOV21 INS10 INS49 INS21 INS21 INS10 INS49 INS21 INS42 UPD42 INS57 INS42 INS42 INS9 INS41 INS9 INS42 UPD42 MOV42 INS42 INS42 INS32 INS32 INS32 INS43 UPD42 MOV42 INS42 INS42 INS42 INS27 INS42 INS45 INS32 INS45 INS42 UPD42 MOV42 DEL43 DEL42 DEL42 DEL43 DEL57 DEL32 DEL42 DEL42 DEL42 DEL32 DEL32 DEL40 DEL42 DEL42 DEL32 DEL32 DEL27 DEL39 DEL42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL32 DEL59 DEL60 DEL42 DEL25 DEL8 DEL25