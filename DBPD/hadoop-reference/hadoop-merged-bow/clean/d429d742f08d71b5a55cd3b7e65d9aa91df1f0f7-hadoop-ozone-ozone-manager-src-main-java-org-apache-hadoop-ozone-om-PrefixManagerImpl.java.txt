HDDS-1544. Support default Acls for volume, bucket, keys and prefix. Contributed by Ajay Kumar, Xiaoyu Yao.

Signed-off-by: Anu Engineer <aengineer@apache.org>

+import org.apache.hadoop.ozone.om.helpers.OmBucketInfo;
-      upiBuilder.setName(prefixPath).setAcls(acls);
+      List<OzoneAcl> aclsToBeSet = new ArrayList<>(acls.size());
+      aclsToBeSet.addAll(acls);
+      upiBuilder.setName(prefixPath);
-      prefixInfo = upiBuilder.build();
+
+      // Inherit DEFAULT acls from prefix.
+      boolean prefixParentFound = false;
+      List<OmPrefixInfo> prefixList = getLongestPrefixPathHelper(
+          prefixTree.getLongestPrefix(prefixPath));
+
+      if (prefixList.size() > 0) {
+        // Add all acls from direct parent to key.
+        OmPrefixInfo parentPrefixInfo = prefixList.get(prefixList.size() - 1);
+        if (parentPrefixInfo != null) {
+          aclsToBeSet.addAll(OzoneUtils.getDefaultAcls(
+              parentPrefixInfo.getAcls()));
+          prefixParentFound = true;
+        }
+      }
+
+      // If no parent prefix is found inherit DEFULT acls from bucket.
+      if (!prefixParentFound) {
+        String bucketKey = metadataManager.getBucketKey(obj.getVolumeName(),
+            obj.getBucketName());
+        OmBucketInfo bucketInfo = metadataManager.getBucketTable().
+            get(bucketKey);
+        if (bucketInfo != null) {
+          bucketInfo.getAcls().forEach(a -> {
+            if (a.getAclScope().equals(OzoneAcl.AclScope.DEFAULT)) {
+              aclsToBeSet.add(new OzoneAcl(a.getType(), a.getName(),
+                  a.getAclBitSet(), OzoneAcl.AclScope.ACCESS));
+            }
+          });
+        }
+      }
+
+      prefixInfo = upiBuilder.setAcls(aclsToBeSet).build();
-      return prefixTree.getLongestPrefixPath(prefixPath).stream()
-          .map(c -> c.getValue()).collect(Collectors.toList());
+      return getLongestPrefixPathHelper(prefixPath);
+   * Get longest prefix path assuming caller take prefix lock.
+   * @param prefixPath
+   * @return list of prefix info.
+   */
+  private List<OmPrefixInfo> getLongestPrefixPathHelper(String prefixPath) {
+    return prefixTree.getLongestPrefixPath(prefixPath).stream()
+          .map(c -> c.getValue()).collect(Collectors.toList());
+  }
+
+  /**

INS26 INS40 INS31 INS74 INS29 INS83 MOV74 INS42 INS44 MOV8 INS43 INS43 INS65 INS65 INS65 INS43 INS42 INS42 INS42 INS8 INS66 INS42 INS66 INS42 INS60 INS21 INS60 INS60 INS25 INS25 INS41 INS74 INS59 INS32 MOV32 INS39 INS59 INS74 INS59 INS27 INS8 INS38 INS8 INS32 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS42 INS9 INS43 INS43 INS42 INS32 INS32 INS34 INS60 INS25 INS42 INS60 INS60 INS25 INS42 INS42 INS42 INS42 INS74 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS43 INS59 INS27 INS8 INS43 INS59 INS43 INS59 INS27 INS8 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 MOV42 INS42 INS42 INS42 INS42 INS42 INS27 INS32 INS7 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS32 INS32 INS34 INS42 INS42 INS32 INS42 INS9 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS86 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS59 INS8 INS42 INS42 INS42 INS25 INS32 INS8 INS32 INS42 INS40 INS21 INS42 INS42 INS32 INS42 INS42 INS14 INS43 INS32 INS32 INS32 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL42 DEL32