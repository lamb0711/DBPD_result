Merge trunk into HA branch.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1211749 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Collections;
+import org.apache.commons.lang.StringUtils;
+  
+  private Collection<URI> editsDirs;
+  
+  /**
+   * The edit directories that are shared between primary and secondary.
+   */
+  private Collection<URI> sharedEditsDirs;
-  final private Collection<URI> editsDirs;
-  
-  /**
-   * The edit directories that are shared between primary and secondary.
-   */
-  final private Collection<URI> sharedEditsDirs;
-
+   * 
-  FSEditLog(NNStorage storage) {
-    this(new Configuration(), storage, Collections.<URI>emptyList());
+  FSEditLog(NNStorage storage) throws IOException {
+    Configuration conf = new Configuration();
+    // Make sure the edits dirs are set in the provided configuration object.
+    conf.set(DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY,
+        StringUtils.join(storage.getEditsDirectories(), ","));
+    init(conf, storage, FSNamesystem.getNamespaceEditsDirs(conf));
-   * Constructor for FSEditLog. Add underlying journals are constructed, but 
+   * Constructor for FSEditLog. Underlying journals are constructed, but 
-    this.conf = conf;
+    init(conf, storage, editsDirs);
+  }
+  
+  private void init(Configuration conf, NNStorage storage, Collection<URI> editsDirs) {
+    this.conf = conf;
-    
-    if (editsDirs.isEmpty()) { 
-      // if this is the case, no edit dirs have been explictly configured
-      // image dirs are to be used for edits too
-      try {
-        editsDirs = Lists.newArrayList(storage.getEditsDirectories());
-      } catch (IOException ioe) {
-        // cannot get list from storage, so the empty editsDirs 
-        // will be assigned. an error will be thrown on first use
-        // of the editlog, as no journals will exist
-      }
-      this.editsDirs = editsDirs;
-    } else {
-      this.editsDirs = Lists.newArrayList(editsDirs);
-    }
-    
+     
+    // If this list is empty, an error will be thrown on first use
+    // of the editlog, as no journals will exist
+    this.editsDirs = Lists.newArrayList(editsDirs);
+
-    this.journalSet = new JournalSet();
+    int minimumRedundantJournals = conf.getInt(
+        DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_MINIMUM_KEY,
+        DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_MINIMUM_DEFAULT);
+
+    journalSet = new JournalSet(minimumRedundantJournals);
+      boolean required = FSNamesystem.getRequiredNamespaceEditsDirs(conf)
+          .contains(u);
-          journalSet.add(new FileJournalManager(sd));
+          journalSet.add(new FileJournalManager(sd), required);
-        journalSet.add(createJournal(u));
+        journalSet.add(createJournal(u), required);
-            LOG.fatal("Could not sync any journal to persistent storage. "
+            LOG.fatal("Could not sync enough journals to persistent storage. "
-          LOG.fatal("Could not sync any journal to persistent storage. "
+          LOG.fatal("Could not sync enough journals to persistent storage. "
-    journalSet.add(bjm);
+    journalSet.add(bjm, true);

MOV26 MOV55 MOV23 UPD40 INS31 MOV29 MOV78 INS42 MOV44 MOV43 INS8 MOV29 INS44 INS44 INS44 INS8 INS83 INS39 UPD42 MOV21 INS60 MOV21 INS21 INS43 INS42 INS43 INS42 INS74 INS42 INS21 MOV21 INS60 INS43 INS59 INS32 INS32 UPD66 INS42 INS42 INS43 INS43 INS32 INS39 INS59 INS42 INS42 MOV14 INS42 INS42 INS40 MOV32 INS42 INS42 INS42 INS32 INS42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS32 INS42 INS60 MOV54 INS9 UPD42 UPD42 INS45 INS42 INS42 INS42 INS42 INS42 INS40 INS40 INS42 INS39 INS59 MOV8 INS42 INS32 MOV44 INS8 INS32 INS42 INS42 INS51 INS42 INS42 INS42 INS42 INS54 INS52 MOV8 MOV8 INS12 INS42 MOV44 INS8 INS21 MOV21 INS32 UPD45 INS42 INS42 INS27 MOV14 INS45 INS45 MOV36 DEL83 DEL83 DEL42 DEL7 DEL42 DEL42 DEL43 DEL32 DEL17 DEL8 DEL42 DEL42 DEL32 DEL8 DEL42 DEL44 DEL8 DEL12 DEL54 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL8 DEL8 DEL25 DEL52 DEL42 DEL22 DEL52 DEL42 DEL42 DEL45 DEL45 DEL27 DEL32 DEL21 DEL8 DEL51 DEL8 DEL12 DEL54