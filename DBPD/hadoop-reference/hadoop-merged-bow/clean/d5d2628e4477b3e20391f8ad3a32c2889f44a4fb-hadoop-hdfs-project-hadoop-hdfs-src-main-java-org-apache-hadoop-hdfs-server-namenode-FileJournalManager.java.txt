Merge r1360400 through r1399945 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1399950 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.classification.InterfaceAudience;
+import org.apache.hadoop.hdfs.server.protocol.NamespaceInfo;
+import com.google.common.base.Joiner;
-class FileJournalManager implements JournalManager {
+@InterfaceAudience.Private
+public class FileJournalManager implements JournalManager {
+  public void format(NamespaceInfo ns) throws IOException {
+    // Formatting file journals is done by the StorageDirectory
+    // format code, since they may share their directory with
+    // checkpoints, etc.
+    throw new UnsupportedOperationException();
+  }
+  
+  @Override
+  public boolean hasSomeData() {
+    // Formatting file journals is done by the StorageDirectory
+    // format code, since they may share their directory with
+    // checkpoints, etc.
+    throw new UnsupportedOperationException();
+  }
+
+  @Override
-  List<RemoteEditLog> getRemoteEditLogs(long firstTxId) throws IOException {
+  public List<RemoteEditLog> getRemoteEditLogs(long firstTxId) throws IOException {
+    Collections.sort(ret);
+    
-  static List<EditLogFile> matchEditLogs(File logDir) throws IOException {
+  public static List<EditLogFile> matchEditLogs(File logDir) throws IOException {
-              new EditLogFile(f, startTxId, startTxId, true));
+              new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID, true));
-      boolean inProgressOk) {
-    List<EditLogFile> elfs;
-    try {
-      elfs = matchEditLogs(sd.getCurrentDir());
-    } catch (IOException e) {
-      LOG.error("error listing files in " + this + ". " +
-          "Skipping all edit logs in this directory.", e);
-      return;
-    }
+      boolean inProgressOk) throws IOException {
+    List<EditLogFile> elfs = matchEditLogs(sd.getCurrentDir());
+    addStreamsToCollectionFromFiles(elfs, streams, fromTxId, inProgressOk);
+  }
+  
+  static void addStreamsToCollectionFromFiles(Collection<EditLogFile> elfs,
+      Collection<EditLogInputStream> streams, long fromTxId, boolean inProgressOk) {
-  List<EditLogFile> getLogFiles(long fromTxId) throws IOException {
+  public List<EditLogFile> getLogFiles(long fromTxId) throws IOException {
+  
+  public EditLogFile getLogFile(long startTxId) throws IOException {
+    return getLogFile(sd.getCurrentDir(), startTxId);
+  }
+  
+  public static EditLogFile getLogFile(File dir, long startTxId)
+      throws IOException {
+    List<EditLogFile> files = matchEditLogs(dir);
+    List<EditLogFile> ret = Lists.newLinkedList();
+    for (EditLogFile elf : files) {
+      if (elf.getFirstTxId() == startTxId) {
+        ret.add(elf);
+      }
+    }
+    
+    if (ret.isEmpty()) {
+      // no matches
+      return null;
+    } else if (ret.size() == 1) {
+      return ret.get(0);
+    } else {
+      throw new IllegalStateException("More than one log segment in " + 
+          dir + " starting at txid " + startTxId + ": " +
+          Joiner.on(", ").join(ret));
+    }
+  }
-  static class EditLogFile {
+  @InterfaceAudience.Private
+  public static class EditLogFile {
+      @Override
+      Preconditions.checkArgument(!isInProgress ||
+          lastTxId == HdfsConstants.INVALID_TXID);
+      
-    long getFirstTxId() {
+    public long getFirstTxId() {
-    long getLastTxId() {
+    public long getLastTxId() {
-    void validateLog() throws IOException {
+    public void validateLog() throws IOException {
-    boolean isInProgress() {
+    public boolean isInProgress() {
-    File getFile() {
+    public File getFile() {
-    void moveAsideEmptyFile() throws IOException {
+    public void moveAsideEmptyFile() throws IOException {

INS26 INS26 INS26 INS40 INS40 INS40 INS78 INS83 INS31 INS31 INS31 INS31 INS31 INS40 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS8 INS83 INS83 MOV78 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 UPD83 UPD42 INS44 INS83 INS83 INS43 INS42 INS44 MOV43 INS8 INS83 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS78 INS83 INS42 INS43 INS42 INS42 INS53 INS42 INS53 INS21 INS74 INS42 INS39 INS42 INS39 INS42 INS42 MOV60 MOV21 INS21 INS74 INS42 INS42 INS39 INS42 INS41 INS42 INS43 INS42 INS39 INS42 INS42 INS60 INS60 INS70 INS25 INS40 INS83 INS83 INS83 INS83 INS83 INS83 INS42 INS14 INS14 INS32 INS43 INS43 INS32 INS43 INS43 INS32 INS42 INS74 INS59 INS74 INS59 INS44 INS42 INS8 INS32 INS8 INS25 INS21 INS43 INS43 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS43 INS42 INS32 INS43 INS43 INS42 INS32 INS43 INS42 INS25 INS42 INS42 INS41 INS27 INS8 INS8 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS8 INS33 INS32 INS34 INS41 INS53 INS42 INS42 INS27 INS32 INS42 INS21 INS42 INS42 INS32 INS14 INS78 INS38 INS27 INS42 INS42 INS32 INS42 INS42 INS34 INS43 INS27 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS32 INS32 INS42 INS42 INS42 INS42 INS45 INS40 DEL42 DEL83 DEL42 DEL7 DEL21 DEL8 DEL42 DEL44 DEL42 DEL42 DEL45 DEL52 DEL45 DEL45 DEL27 DEL42 DEL32 DEL21 DEL41 DEL8 DEL12 DEL54