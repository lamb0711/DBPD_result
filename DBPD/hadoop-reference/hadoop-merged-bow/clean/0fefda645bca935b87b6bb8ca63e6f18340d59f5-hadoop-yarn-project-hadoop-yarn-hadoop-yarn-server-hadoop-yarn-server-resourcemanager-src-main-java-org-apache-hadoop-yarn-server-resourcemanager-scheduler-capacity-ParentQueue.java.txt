YARN-3361. CapacityScheduler side changes to support non-exclusive node labels. Contributed by Wangda Tan

-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerUtils;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.AssignmentInformation;
-      FiCaSchedulerNode node, ResourceLimits resourceLimits) {
+      FiCaSchedulerNode node, ResourceLimits resourceLimits,
+      SchedulingMode schedulingMode) {
+    // if our queue cannot access this node, just return
+    if (schedulingMode == SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY
+        && !accessibleToPartition(node.getPartition())) {
+      return NULL_ASSIGNMENT;
+    }
+    
+    // Check if this queue need more resource, simply skip allocation if this
+    // queue doesn't need more resources.
+    if (!super.hasPendingResourceRequest(node.getPartition(),
+        clusterResource, schedulingMode)) {
+      if (LOG.isDebugEnabled()) {
+        LOG.debug("Skip this queue=" + getQueuePath()
+            + ", because it doesn't need more resource, schedulingMode="
+            + schedulingMode.name() + " node-partition=" + node.getPartition());
+      }
+      return NULL_ASSIGNMENT;
+    }
+    
-    Set<String> nodeLabels = node.getLabels();
-    
-    // if our queue cannot access this node, just return
-    if (!SchedulerUtils.checkQueueAccessToNode(accessibleLabels, nodeLabels)) {
-      return assignment;
-    }
-      if (!super.canAssignToThisQueue(clusterResource, nodeLabels, resourceLimits,
-          minimumAllocation, Resources.createResource(getMetrics()
-              .getReservedMB(), getMetrics().getReservedVirtualCores()))) {
+      if (!super.canAssignToThisQueue(clusterResource, node.getPartition(),
+          resourceLimits, minimumAllocation, Resources.createResource(
+              getMetrics().getReservedMB(), getMetrics()
+                  .getReservedVirtualCores()), schedulingMode)) {
-      CSAssignment assignedToChild = 
-          assignContainersToChildQueues(clusterResource, node, resourceLimits);
+      CSAssignment assignedToChild =
+          assignContainersToChildQueues(clusterResource, node, resourceLimits,
+              schedulingMode);
-            nodeLabels);
+            node.getPartition());
-      Resource cluster, FiCaSchedulerNode node, ResourceLimits limits) {
+      Resource cluster, FiCaSchedulerNode node, ResourceLimits limits,
+      SchedulingMode schedulingMode) {
-      
+
-      assignment = childQueue.assignContainers(cluster, node, childLimits);
+      assignment = childQueue.assignContainers(cluster, node, 
+          childLimits, schedulingMode);
-            .getResource(), node.getLabels());
+            .getResource(), node.getPartition());
-          .getResource(), node.getLabels());
+          .getResource(), node.getPartition());
-          .getResource(), node.getLabels());
+          .getResource(), node.getPartition());
-          node.getLabels());
+          node.getPartition());

INS44 MOV60 INS44 INS43 INS42 INS25 INS43 INS42 INS42 INS27 INS8 INS42 INS27 INS38 INS41 INS48 INS25 INS42 INS40 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS8 UPD42 INS42 INS32 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS21 MOV42 UPD42 MOV42 INS32 INS32 INS42 INS42 INS42 UPD42 UPD42 UPD42 INS42 INS42 INS27 INS42 INS42 INS32 INS45 INS32 INS45 INS32 INS45 INS32 INS42 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL42