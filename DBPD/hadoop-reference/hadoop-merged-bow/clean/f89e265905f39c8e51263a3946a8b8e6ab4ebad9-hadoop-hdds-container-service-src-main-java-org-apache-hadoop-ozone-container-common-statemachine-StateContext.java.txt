HDDS-187. Command status publisher for datanode.
Contributed by Ajay Kumar.

+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+import org.apache.hadoop.hdds.protocol.proto.StorageContainerDatanodeProtocolProtos.CommandStatus.Status;
+import org.apache.hadoop.ozone.protocol.commands.CommandStatus;
+import org.apache.hadoop.ozone.protocol.commands.CommandStatus.CommandStatusBuilder;
+  private final Map<Long, CommandStatus> cmdStatusMap;
+    cmdStatusMap = new ConcurrentHashMap<>();
+    this.addCmdStatus(command);
+  /**
+   * Returns the next {@link CommandStatus} or null if it is empty.
+   *
+   * @return {@link CommandStatus} or Null.
+   */
+  public CommandStatus getCmdStatus(Long key) {
+    return cmdStatusMap.get(key);
+  }
+
+  /**
+   * Adds a {@link CommandStatus} to the State Machine.
+   *
+   * @param status - {@link CommandStatus}.
+   */
+  public void addCmdStatus(Long key, CommandStatus status) {
+    cmdStatusMap.put(key, status);
+  }
+
+  /**
+   * Adds a {@link CommandStatus} to the State Machine for given SCMCommand.
+   *
+   * @param cmd - {@link SCMCommand}.
+   */
+  public void addCmdStatus(SCMCommand cmd) {
+    this.addCmdStatus(cmd.getCmdId(),
+        CommandStatusBuilder.newBuilder()
+            .setCmdId(cmd.getCmdId())
+            .setStatus(Status.PENDING)
+            .setType(cmd.getType())
+            .build());
+  }
+
+  /**
+   * Get map holding all {@link CommandStatus} objects.
+   *
+   */
+  public Map<Long, CommandStatus> getCommandStatusMap() {
+    return cmdStatusMap;
+  }
+
+  /**
+   * Remove object from cache in StateContext#cmdStatusMap.
+   *
+   */
+  public void removeCommandStatus(Long cmdId) {
+    cmdStatusMap.remove(cmdId);
+  }
+
+  /**
+   * Updates status of a pending status command.
+   * @param cmdId       command id
+   * @param cmdExecuted SCMCommand
+   * @return true if command status updated successfully else false.
+   */
+  public boolean updateCommandStatus(Long cmdId, boolean cmdExecuted) {
+    if(cmdStatusMap.containsKey(cmdId)) {
+      cmdStatusMap.get(cmdId)
+          .setStatus(cmdExecuted ? Status.EXECUTED : Status.FAILED);
+      return true;
+    }
+    return false;
+  }

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS83 INS74 INS59 INS29 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS74 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS44 INS8 INS43 INS43 INS43 INS42 INS21 INS21 INS65 INS65 INS42 INS43 INS42 INS41 INS65 INS65 INS43 INS42 INS43 INS42 INS21 INS65 INS65 INS43 INS42 INS21 INS65 INS43 INS43 INS43 INS41 INS65 INS43 INS42 INS21 INS65 INS65 INS65 INS65 INS43 INS42 INS39 INS42 INS25 INS41 INS42 INS42 INS42 INS7 INS32 INS66 INS65 INS66 INS66 INS65 INS66 INS42 INS32 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS42 INS42 INS32 INS66 INS65 INS66 INS42 INS66 INS65 INS66 INS42 INS32 INS66 INS65 INS66 INS42 INS42 INS42 INS42 INS66 INS42 INS32 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS32 INS8 INS9 INS42 INS14 INS52 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS52 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS21 INS41 INS74 INS42 INS42 INS32 INS42 INS32 INS9 INS43 INS32 INS42 INS32 INS32 INS42 INS16 INS42 INS32 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS40 INS32 INS42 INS32 INS42 INS42 INS42 INS42