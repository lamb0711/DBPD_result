HDFS-10954. [SPS]: Provide mechanism to send blocks movement result back to NN from coordinator DN. Contributed by Rakesh R

+import java.util.Collections;
+import org.apache.hadoop.hdfs.server.protocol.BlocksStorageMovementResult;
-            extendedBlock, EnumSet.of(BlockTokenIdentifier.AccessMode.WRITE));
+            extendedBlock, EnumSet.of(BlockTokenIdentifier.AccessMode.WRITE),
+            new StorageType[]{targetStorageType}, new String[0]);
-          srcDn.getDatanodeUuid(), srcDn);
+          srcDn.getDatanodeUuid(), srcDn, null);
-  enum BlockMovementStatus {
+  public static enum BlockMovementStatus {
-   * the completed list of block movements and notify the namenode about the
-   * success or failures.
+   * the completed list of block movements and this status(success or failure)
+   * will be send to the namenode via heartbeat.
-    private final List<BlockMovementResult> completedBlocks = new ArrayList<>();
+    private final List<BlocksStorageMovementResult> trackIdVsMovementStatus =
+        new ArrayList<>();
-     * Collect all the block movement results and notify namenode.
+     * Collect all the block movement results. Later this will be send to
+     * namenode via heart beat.
-    void handle(List<BlockMovementResult> results) {
-      completedBlocks.addAll(results);
-      // TODO: notify namenode about the success/failures.
+    void handle(List<BlockMovementResult> resultsPerTrackId) {
+      BlocksStorageMovementResult.Status status =
+          BlocksStorageMovementResult.Status.SUCCESS;
+      long trackId = -1;
+      for (BlockMovementResult blockMovementResult : resultsPerTrackId) {
+        trackId = blockMovementResult.getTrackId();
+        if (blockMovementResult.status ==
+            BlockMovementStatus.DN_BLK_STORAGE_MOVEMENT_FAILURE) {
+          status = BlocksStorageMovementResult.Status.FAILURE;
+          // If any of the block movement is failed, then mark as failure so
+          // that namenode can take a decision to retry the blocks associated to
+          // the given trackId.
+          break;
+        }
+      }
+
+      // Adding to the tracking results list. Later this will be send to
+      // namenode via datanode heartbeat.
+      synchronized (trackIdVsMovementStatus) {
+        trackIdVsMovementStatus.add(
+            new BlocksStorageMovementResult(trackId, status));
+      }
-    @VisibleForTesting
-    List<BlockMovementResult> getCompletedBlocks() {
-      return completedBlocks;
+    /**
+     * @return unmodifiable list of blocks storage movement results.
+     */
+    List<BlocksStorageMovementResult> getBlksMovementResults() {
+      synchronized (trackIdVsMovementStatus) {
+        if (trackIdVsMovementStatus.size() <= 0) {
+          return new ArrayList<>();
+        }
+        List<BlocksStorageMovementResult> results = Collections
+            .unmodifiableList(trackIdVsMovementStatus);
+        return results;
+      }
+    }
+
+    /**
+     * Remove the blocks storage movement results.
+     *
+     * @param results
+     *          set of blocks storage movement results
+     */
+    void remove(BlocksStorageMovementResult[] results) {
+      if (results != null) {
+        synchronized (trackIdVsMovementStatus) {
+          for (BlocksStorageMovementResult blocksMovementResult : results) {
+            trackIdVsMovementStatus.remove(blocksMovementResult);
+          }
+        }
+      }

INS26 INS26 INS40 INS40 INS83 INS83 INS31 UPD74 INS8 INS29 UPD74 UPD42 INS8 INS29 INS39 INS42 INS44 INS8 UPD66 UPD66 UPD43 UPD42 UPD42 INS60 INS60 INS70 INS51 INS65 UPD43 INS51 INS65 INS65 INS5 INS42 INS25 UPD42 UPD66 INS66 INS43 INS59 INS39 INS59 INS44 INS42 INS8 INS42 INS8 INS66 UPD42 INS42 INS8 INS66 INS42 INS66 INS43 INS85 INS27 INS8 INS33 INS40 INS42 INS40 INS42 INS38 INS43 INS42 INS21 INS25 MOV21 INS25 INS60 MOV41 INS42 INS42 INS33 INS51 INS34 INS42 INS7 INS27 INS8 INS27 INS8 INS74 INS59 UPD42 INS42 INS8 INS42 INS32 INS40 INS40 INS21 INS10 UPD42 UPD42 INS14 INS32 INS34 INS41 INS43 INS43 INS42 INS32 INS70 INS3 INS3 INS42 INS42 INS7 INS43 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS44 INS42 INS8 INS5 INS4 INS5 INS34 INS42 INS40 INS42 INS74 INS43 INS42 INS21 INS43 INS85 INS42 INS43 INS85 INS43 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL8 DEL42 DEL78 DEL8