HDFS-4487. Fix snapshot diff report for HDFS-4446.  Contributed by Jing Zhao


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1446385 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.fs.Path;
-          FSImageSerialization.saveINode2Image(node, out);
+          FSImageSerialization.saveINode2Image(node, out, true);
+     * @root The snapshot root of the diff report.
-        INodeDirectoryWithSnapshot parent, boolean fromEarlier) {
-      List<DiffReportEntry> mList = new ArrayList<DiffReportEntry>();
+        INodeDirectorySnapshottable root, INodeDirectoryWithSnapshot parent,
+        boolean fromEarlier) {
+      byte[][] parentPath = parent.getRelativePathNameBytes(root);
+      byte[][] fullPath = new byte[parentPath.length + 1][];
+      System.arraycopy(parentPath, 0, fullPath, 0, parentPath.length);
-          mList.add(new DiffReportEntry(DiffType.MODIFY, parent
-              .getFullPathName() + Path.SEPARATOR + cnode.getLocalName()));
+          fullPath[fullPath.length - 1] = cnode.getLocalNameBytes();
+          if (cnode.isSymlink() && dnode.isSymlink()) {
+            dList.add(new DiffReportEntry(DiffType.MODIFY, fullPath));
+          } else {
+            // must be the case: delete first and then create an inode with the
+            // same name
+            cList.add(new DiffReportEntry(DiffType.CREATE, fullPath));
+            dList.add(new DiffReportEntry(DiffType.DELETE, fullPath));
+          }
+          fullPath[fullPath.length - 1] = cnode.getLocalNameBytes();
-              : DiffType.DELETE, parent.getFullPathName() + Path.SEPARATOR
-              + cnode.getLocalName()));
+              : DiffType.DELETE, fullPath));
+          fullPath[fullPath.length - 1] = dnode.getLocalNameBytes();
-              : DiffType.CREATE, parent.getFullPathName() + Path.SEPARATOR
-              + dnode.getLocalName()));
+              : DiffType.CREATE, fullPath));
+        fullPath[fullPath.length - 1] = deleted.get(d).getLocalNameBytes();
-            : DiffType.CREATE, parent.getFullPathName() + Path.SEPARATOR
-            + deleted.get(d).getLocalName()));
+            : DiffType.CREATE, fullPath));
+        fullPath[fullPath.length - 1] = created.get(c).getLocalNameBytes();
-            : DiffType.DELETE, parent.getFullPathName() + Path.SEPARATOR
-            + created.get(c).getLocalName()));
+            : DiffType.DELETE, fullPath));
-      cList.addAll(dList);
-      cList.addAll(mList);
-      return cList;
+      dList.addAll(cList);
+      return dList;
-    if (fromSnapshot == null
-        || (toSnapshot != null && Snapshot.ID_COMPARATOR.compare(fromSnapshot,
-            toSnapshot) > 0)) {
+    if (Snapshot.ID_COMPARATOR.compare(fromSnapshot, toSnapshot) > 0) {
+    boolean modified = diffs.changedBetweenSnapshots(earlierSnapshot,
+        laterSnapshot);
+    if (!modified) {
+      return false;
+    }
+    
-    if (earlierDiffIndex < 0 && (-earlierDiffIndex - 1) == size) {
-      // if the earlierSnapshot is after the latest SnapshotDiff stored in diffs,
-      // no modification happened after the earlierSnapshot
-      return false;
-    }
-    int laterDiffIndex = size;
-    if (laterSnapshot != null) {
-      laterDiffIndex = Collections.binarySearch(difflist, laterSnapshot);
-      if (laterDiffIndex == -1 || laterDiffIndex == 0) {
-        // if the endSnapshot is the earliest SnapshotDiff stored in
-        // diffs, or before it, no modification happened before the endSnapshot
-        return false;
-      }
-    }
-    
+    int laterDiffIndex = laterSnapshot == null ? size : Collections
+        .binarySearch(difflist, laterSnapshot);
+    

INS44 MOV60 INS60 INS25 INS60 INS65 INS43 INS42 INS60 INS21 INS24 INS24 MOV27 INS39 INS59 INS38 MOV8 MOV39 INS59 INS66 INS42 INS5 INS59 INS5 INS59 INS32 MOV27 INS8 MOV27 MOV37 MOV27 MOV37 INS8 UPD42 INS42 INS32 INS42 MOV42 INS16 INS39 INS85 INS85 INS42 INS32 INS39 INS85 INS85 INS42 INS3 INS42 INS42 UPD42 MOV42 INS34 UPD42 MOV42 INS34 INS40 MOV60 MOV60 INS25 INS21 INS21 MOV21 UPD42 UPD42 INS42 INS42 INS42 INS42 INS27 INS42 MOV32 INS42 INS42 INS42 INS5 INS27 MOV32 INS8 INS25 INS7 INS7 MOV42 MOV33 INS9 INS39 INS85 INS85 INS40 INS34 INS21 INS25 MOV21 MOV21 MOV27 INS8 INS8 INS2 MOV32 UPD42 INS2 MOV32 UPD42 INS14 INS7 INS27 INS8 INS8 INS21 INS21 MOV21 INS21 MOV21 MOV21 INS42 INS27 UPD42 MOV43 MOV16 INS42 INS42 INS27 UPD42 INS43 MOV16 INS42 INS2 INS32 INS32 INS32 INS21 INS21 INS21 INS7 INS32 INS7 INS40 INS34 INS40 INS34 INS42 INS42 INS27 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS2 INS32 UPD42 MOV42 MOV42 INS14 INS2 INS32 UPD40 MOV40 INS34 INS42 INS42 INS14 MOV42 MOV42 INS14 UPD42 MOV42 INS42 INS14 INS42 INS27 MOV42 UPD42 MOV42 MOV43 MOV16 INS42 INS42 INS27 MOV42 UPD42 MOV42 MOV43 INS42 MOV43 INS40 INS42 MOV43 INS40 INS42 MOV43 INS40 INS42 UPD40 MOV40 INS34 UPD40 MOV40 INS34 DEL40 DEL26 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL43 DEL74 DEL14 DEL59 DEL42 DEL42 DEL32 DEL40 DEL27 DEL42 DEL42 DEL40 DEL32 DEL32 DEL27 DEL14 DEL32 DEL21 DEL8 DEL42 DEL32 DEL32 DEL27 DEL14 DEL32 DEL21 DEL8 DEL42 DEL42 DEL32 DEL32 DEL27 DEL14 DEL32 DEL21 DEL8 DEL25 DEL25 DEL8 DEL24 DEL8 DEL24 DEL42 DEL42 DEL32 DEL40 DEL27 DEL42 DEL42 DEL33 DEL27 DEL42 DEL33 DEL27 DEL27 DEL36 DEL27 DEL42 DEL34 DEL27 DEL42 DEL38 DEL34 DEL27 DEL36 DEL42 DEL27 DEL27 DEL9 DEL41 DEL8 DEL25 DEL42 DEL59 DEL60 DEL27 DEL42 DEL7 DEL21 DEL42 DEL34 DEL38 DEL27 DEL42 DEL34 DEL27 DEL27 DEL25 DEL8 DEL25