YARN-8080.  Add restart policy for YARN services.
            Contributed by Suma Shivaprasad

+import org.apache.hadoop.yarn.service.component.ComponentRestartPolicy;
+import org.apache.hadoop.yarn.service.utils.ServiceUtils;
+import java.util.HashSet;
+import java.util.Set;
+import static org.apache.hadoop.yarn.service.exceptions.LauncherExitCodes
+    .EXIT_FALSE;
+import static org.apache.hadoop.yarn.service.exceptions.LauncherExitCodes
+    .EXIT_SUCCESS;
+  private volatile FinalApplicationStatus finalApplicationStatus =
+      FinalApplicationStatus.ENDED;
+
+  // For unit test override since we don't want to terminate UT process.
+  private ServiceUtils.ProcessTerminationHandler
+      terminationHandler = new ServiceUtils.ProcessTerminationHandler();
+
-    super(context.service.getName());
+    super(context.getService().getName());
-  protected void setGracefulStop() {
+  public void setGracefulStop(FinalApplicationStatus applicationStatus) {
+    this.finalApplicationStatus = applicationStatus;
+
+  /*
+* Check if all components of the scheduler finished.
+* If all components finished
+*   (which #failed-instances + #suceeded-instances = #total-n-containers)
+* The service will be terminated.
+*/
+  public synchronized void terminateServiceIfAllComponentsFinished() {
+    boolean shouldTerminate = true;
+
+    // Succeeded comps and failed comps, for logging purposes.
+    Set<String> succeededComponents = new HashSet<>();
+    Set<String> failedComponents = new HashSet<>();
+
+    for (Component comp : getAllComponents().values()) {
+      ComponentRestartPolicy restartPolicy = comp.getRestartPolicyHandler();
+      if (!restartPolicy.shouldTerminate(comp)) {
+        shouldTerminate = false;
+        break;
+      }
+
+      long nFailed = comp.getNumFailedInstances();
+
+      if (nFailed > 0) {
+        failedComponents.add(comp.getName());
+      } else{
+        succeededComponents.add(comp.getName());
+      }
+    }
+
+    if (shouldTerminate) {
+      LOG.info("All component finished, exiting Service Master... "
+          + ", final status=" + (failedComponents.isEmpty() ?
+          "Succeeded" :
+          "Failed"));
+      LOG.info("Succeeded components: [" + org.apache.commons.lang3.StringUtils
+          .join(succeededComponents, ",") + "]");
+      LOG.info("Failed components: [" + org.apache.commons.lang3.StringUtils
+          .join(failedComponents, ",") + "]");
+
+      if (failedComponents.isEmpty()) {
+        setGracefulStop(FinalApplicationStatus.SUCCEEDED);
+        getTerminationHandler().terminate(EXIT_SUCCESS);
+      } else{
+        setGracefulStop(FinalApplicationStatus.FAILED);
+        getTerminationHandler().terminate(EXIT_FALSE);
+      }
+    }
+  }
+
+  public ServiceUtils.ProcessTerminationHandler getTerminationHandler() {
+    return terminationHandler;
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS23 INS23 INS31 INS31 INS83 INS83 INS43 INS59 INS83 INS43 INS59 UPD83 INS44 INS83 INS83 INS39 INS42 INS8 INS83 INS43 INS42 INS8 INS42 INS42 INS40 INS40 INS42 INS14 INS43 INS42 INS21 INS60 INS60 INS60 INS70 INS25 INS40 INS41 INS43 INS42 INS7 INS39 INS59 INS74 INS59 INS74 INS59 INS44 INS32 INS8 INS42 INS8 INS42 INS40 INS32 INS22 INS42 INS42 INS9 INS43 INS43 INS42 INS14 INS43 INS43 INS42 INS14 INS43 INS42 INS32 INS42 INS60 INS25 INS60 INS25 INS21 INS21 INS21 INS25 INS42 INS42 INS52 INS42 INS42 INS42 INS74 INS42 INS42 INS74 INS42 INS42 INS43 INS59 INS38 INS8 INS39 INS59 INS27 INS8 INS8 INS32 INS32 INS32 INS32 INS8 INS8 INS43 INS43 INS42 INS42 INS32 INS32 INS21 INS10 INS42 INS32 INS42 INS34 INS21 INS21 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS21 INS21 INS21 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS42 INS42 INS32 INS32 INS45 INS45 INS36 INS45 INS32 INS45 INS45 INS32 INS45 INS32 INS32 INS32 INS32 INS42 INS9 INS42 INS42 INS32 INS42 INS42 INS32 INS16 INS40 INS42 INS42 INS45 INS40 INS42 INS42 INS45 INS42 INS40 INS32 INS42 INS42 INS42 INS40 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS45 INS45 INS42 INS42 INS42 INS42 DEL40