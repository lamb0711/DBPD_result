HDFS-3412. Fix findbugs warnings in auto-HA branch. Contributed by Todd Lipcon.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1338817 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.HdfsConfiguration;
+import org.apache.hadoop.util.GenericOptionsParser;
-import org.apache.hadoop.util.ToolRunner;
-import com.google.common.base.Preconditions;
-  private NNHAServiceTarget localTarget;
-  private Configuration localNNConf;
+  /* the same as superclass's localTarget, but with the more specfic NN type */
+  private final NNHAServiceTarget localNNTarget;
-        getConf(), proto.getNameserviceId(), proto.getNamenodeId());
+        conf, proto.getNameserviceId(), proto.getNamenodeId());
-      .setNameserviceId(localTarget.getNameServiceId())
-      .setNamenodeId(localTarget.getNameNodeId())
+      .setNameserviceId(localNNTarget.getNameServiceId())
+      .setNamenodeId(localNNTarget.getNameNodeId())
-    int zkfcPort = getZkfcPort(localNNConf);
+    int zkfcPort = getZkfcPort(conf);
-
-  @Override
-  public void setConf(Configuration conf) {
-    localNNConf = DFSHAAdmin.addSecurityConfiguration(conf);
+  
+  public static DFSZKFailoverController create(Configuration conf) {
+    Configuration localNNConf = DFSHAAdmin.addSecurityConfiguration(conf);
-    localTarget = new NNHAServiceTarget(localNNConf, nsId, nnId);
-    
+    NNHAServiceTarget localTarget = new NNHAServiceTarget(
+        localNNConf, nsId, nnId);
+    return new DFSZKFailoverController(localNNConf, localTarget);
+  }
+
+  private DFSZKFailoverController(Configuration conf,
+      NNHAServiceTarget localTarget) {
+    super(conf, localTarget);
+    this.localNNTarget = localTarget;
-    
-    super.setConf(localNNConf);
-        nsId + "." + nnId);
-  }
+        localTarget);
+}
-    localTarget.setZkfcPort(rpcServer.getAddress().getPort());
+    localNNTarget.setZkfcPort(rpcServer.getAddress().getPort());
-  public HAServiceTarget getLocalTarget() {
-    Preconditions.checkState(localTarget != null,
-        "setConf() should have already been called");
-    return localTarget;
-  }
-  
-  @Override
-    InetSocketAddress socAddr = NameNode.getAddress(localNNConf);
-    SecurityUtil.login(getConf(), DFS_NAMENODE_KEYTAB_FILE_KEY,
+    InetSocketAddress socAddr = NameNode.getAddress(conf);
+    SecurityUtil.login(conf, DFS_NAMENODE_KEYTAB_FILE_KEY,
-    return localTarget.getNameServiceId();
+    return localNNTarget.getNameServiceId();
-    System.exit(ToolRunner.run(
-        new DFSZKFailoverController(), args));
+    
+    GenericOptionsParser parser = new GenericOptionsParser(
+        new HdfsConfiguration(), args);
+    DFSZKFailoverController zkfc = DFSZKFailoverController.create(
+        parser.getConfiguration());
+    
+    System.exit(zkfc.run(parser.getRemainingArgs()));

MOV26 MOV26 MOV23 UPD40 UPD40 INS31 INS83 INS83 INS43 INS42 INS83 INS42 INS44 INS44 MOV8 UPD42 INS42 INS60 INS60 INS41 INS43 INS42 INS43 INS42 INS46 INS21 MOV21 INS21 INS60 INS60 MOV43 INS59 INS43 INS59 INS14 INS42 UPD42 MOV42 INS42 INS42 INS7 INS32 INS43 INS59 MOV43 INS59 INS42 MOV32 INS42 INS42 MOV14 INS43 INS42 INS42 INS22 INS42 INS42 INS42 INS27 UPD42 UPD42 MOV42 UPD42 INS42 INS42 INS14 INS42 INS32 INS42 UPD42 INS42 INS52 INS42 INS45 INS42 UPD42 INS43 INS14 INS42 INS42 INS42 INS32 UPD42 INS32 INS42 INS43 INS42 INS42 INS42 UPD42 MOV42 UPD42 INS42 UPD42 DEL83 DEL42 DEL59 DEL23 DEL42 DEL32 DEL42 DEL78 DEL39 DEL42 DEL42 DEL7 DEL21 DEL42 DEL7 DEL21 DEL42 DEL42 DEL48 DEL21 DEL42 DEL42 DEL45 DEL42 DEL45 DEL42 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL33 DEL27 DEL45 DEL32 DEL21 DEL42 DEL41 DEL42 DEL78 DEL83 DEL43 DEL42 DEL31 DEL32 DEL14