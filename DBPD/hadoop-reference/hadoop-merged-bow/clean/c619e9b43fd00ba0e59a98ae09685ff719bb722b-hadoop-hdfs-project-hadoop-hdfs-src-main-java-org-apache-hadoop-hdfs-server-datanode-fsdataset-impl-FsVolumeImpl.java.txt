HDFS-11056. Concurrent append and read operations lead to checksum error. Contributed by Wei-Chiu Chuang.

+import java.io.RandomAccessFile;
+import org.apache.hadoop.hdfs.server.datanode.BlockMetadataHeader;
+import org.apache.hadoop.util.DataChecksum;
+  private byte[] loadLastPartialChunkChecksum(
+      File blockFile, File metaFile) throws IOException {
+    DataChecksum dcs = BlockMetadataHeader.readHeader(metaFile).getChecksum();
+    final int checksumSize = dcs.getChecksumSize();
+    final long onDiskLen = blockFile.length();
+    final int bytesPerChecksum = dcs.getBytesPerChecksum();
+
+    if (onDiskLen % bytesPerChecksum == 0) {
+      // the last chunk is a complete one. No need to preserve its checksum
+      // because it will not be modified.
+      return null;
+    }
+
+    int offsetInChecksum = BlockMetadataHeader.getHeaderSize() +
+        (int)(onDiskLen / bytesPerChecksum * checksumSize);
+    byte[] lastChecksum = new byte[checksumSize];
+    RandomAccessFile raf = new RandomAccessFile(metaFile, "r");
+    raf.seek(offsetInChecksum);
+    raf.read(lastChecksum, 0, checksumSize);
+    return lastChecksum;
+  }
+
+    // load last checksum and datalen
+    LocalReplica localReplica = (LocalReplica)replicaInfo;
+    byte[] lastChunkChecksum = loadLastPartialChunkChecksum(
+        localReplica.getBlockFile(), localReplica.getMetaFile());
+    newReplicaInfo.setLastChecksumAndDataLen(
+        replicaInfo.getNumBytes(), lastChunkChecksum);
+
+
+    // load last checksum and datalen
+    final File destMeta = FsDatasetUtil.getMetaFile(dest,
+        b.getGenerationStamp());
+    byte[] lastChunkChecksum = loadLastPartialChunkChecksum(dest, destMeta);
+    rbw.setLastChecksumAndDataLen(numBytes, lastChunkChecksum);
+    // In theory, this rbw replica needs to reload last chunk checksum,
+    // but it is immediately converted to finalized state within the same lock,
+    // so no need to update it.

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS83 INS5 INS42 INS44 INS44 INS43 INS8 INS39 INS85 INS43 INS42 INS43 INS42 INS42 INS60 INS60 INS60 INS60 INS25 INS60 INS60 INS60 INS21 INS21 INS41 INS60 INS60 INS21 INS60 INS60 INS21 INS42 INS42 INS43 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS27 INS8 INS39 INS59 INS5 INS59 INS43 INS59 INS32 INS32 INS42 INS43 INS59 INS5 INS59 INS32 INS83 INS43 INS59 INS5 INS59 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS27 INS34 INS41 INS42 INS27 INS39 INS85 INS42 INS3 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS11 INS39 INS85 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS39 INS85 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS32 INS11 INS5 INS42 INS43 INS42 INS45 INS43 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS39 INS36 INS39 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS27 INS42 INS42 INS42