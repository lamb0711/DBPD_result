HDFS-2907.  Add a conf property dfs.datanode.fsdataset.factory to make FSDataset in Datanode pluggable.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1292419 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Arrays;
-import org.apache.hadoop.conf.Configurable;
+public class SimulatedFSDataset implements FSDatasetInterface {
+  static class Factory extends FSDatasetInterface.Factory {
+    @Override
+    public FSDatasetInterface createFSDatasetInterface(DataNode datanode,
+        DataStorage storage, Configuration conf) throws IOException {
+      return new SimulatedFSDataset(datanode, storage, conf);
+    }
-public class SimulatedFSDataset  implements FSDatasetInterface, Configurable{
+    @Override
+    public boolean isSimulated() {
+      return true;
+    }
+  }
-  public static final String CONFIG_PROPERTY_SIMULATED =
-      DFSConfigKeys.DFS_DATANODE_SIMULATEDDATASTORAGE_KEY;
+  public static void setFactory(Configuration conf) {
+    conf.set(DFSConfigKeys.DFS_DATANODE_FSDATASET_FACTORY_KEY,
+        Factory.class.getName());
+  }
+  
-      DFSConfigKeys.DFS_DATANODE_SIMULATEDDATASTORAGE_CAPACITY_KEY;
+      "dfs.datanode.simulateddatastorage.capacity";
-  public static final byte DEFAULT_DATABYTE = 9; // 1 terabyte
-  byte simulatedDataByte = DEFAULT_DATABYTE;
-  Configuration conf = null;
+  public static final byte DEFAULT_DATABYTE = 9;
-  static byte[] nullCrcFileData;
-  {
+  static final byte[] nullCrcFileData;
+  static {
-  private Map<String, Map<Block, BInfo>> blockMap = null;
-  private SimulatedStorage storage = null;
-  private String storageId;
+  private final Map<String, Map<Block, BInfo>> blockMap
+      = new HashMap<String, Map<Block,BInfo>>();
+  private final SimulatedStorage storage;
+  private final String storageId;
-  public SimulatedFSDataset(Configuration conf) {
-    setConf(conf);
-  }
-  
-  // Constructor used for constructing the object using reflection
-  @SuppressWarnings("unused")
-  private SimulatedFSDataset() { // real construction when setConf called..
-  }
-  
-  public Configuration getConf() {
-    return conf;
-  }
-
-  public void setConf(Configuration iconf)  {
-    conf = iconf;
-    storageId = conf.get(DFSConfigKeys.DFS_DATANODE_STORAGEID_KEY, "unknownStorageId" +
-                                        new Random().nextInt());
+  public SimulatedFSDataset(DataNode datanode, DataStorage storage,
+      Configuration conf) {
+    if (storage != null) {
+      storage.createStorageID(datanode.getPort());
+      this.storageId = storage.getStorageID();
+    } else {
+      this.storageId = "unknownStorageId" + new Random().nextInt();
+    }
-    storage = new SimulatedStorage(
+    this.storage = new SimulatedStorage(
-    blockMap = new HashMap<String, Map<Block,BInfo>>(); 
+    final List<Block> blocks = new ArrayList<Block>();
-    Block[] blockTable = new Block[map.size()];
-      int count = 0;
-          blockTable[count++] = b.theBlock;
+          blocks.add(b.theBlock);
-      if (count != blockTable.length) {
-        blockTable = Arrays.copyOf(blockTable, count);
-      }
-    } else {
-      blockTable = new Block[0];
-    return new BlockListAsLongs(
-        new ArrayList<Block>(Arrays.asList(blockTable)), null);
+    return new BlockListAsLongs(blocks, null);

MOV31 INS55 INS23 INS23 INS83 INS42 INS43 INS31 MOV31 INS83 INS39 INS42 INS44 INS83 INS83 INS83 MOV43 INS59 INS83 INS83 INS83 INS83 INS83 MOV43 INS59 INS83 UPD42 INS44 MOV44 MOV60 INS40 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS43 INS8 INS78 UPD83 INS39 UPD42 INS43 INS42 INS21 INS42 INS45 MOV14 INS42 UPD43 UPD42 INS43 INS42 INS25 INS42 UPD42 MOV42 INS43 INS42 INS43 INS42 INS43 INS42 INS42 INS41 INS42 INS41 MOV42 INS32 UPD42 INS42 INS27 INS8 INS8 INS83 INS74 INS42 INS42 MOV42 INS14 INS9 INS42 INS42 INS40 INS32 INS42 INS33 MOV21 MOV21 MOV21 INS22 INS43 MOV43 UPD42 MOV14 INS42 INS43 INS42 INS42 INS42 INS57 INS42 INS32 INS52 INS42 UPD42 MOV42 INS42 INS43 INS42 INS42 INS32 INS22 INS32 INS22 MOV27 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS32 INS42 INS42 INS40 DEL40 DEL26 DEL40 DEL26 DEL42 DEL45 DEL79 DEL43 DEL42 DEL42 DEL41 DEL42 DEL43 DEL83 DEL83 DEL83 DEL43 DEL42 DEL40 DEL59 DEL23 DEL83 DEL83 DEL83 DEL42 DEL40 DEL59 DEL23 DEL39 DEL42 DEL42 DEL59 DEL23 DEL43 DEL42 DEL33 DEL59 DEL23 DEL33 DEL83 DEL42 DEL33 DEL59 DEL23 DEL83 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL39 DEL42 DEL42 DEL7 DEL42 DEL42 DEL42 DEL42 DEL40 DEL32 DEL42 DEL43 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL85 DEL5 DEL42 DEL42 DEL32 DEL3 DEL39 DEL42 DEL34 DEL59 DEL60 DEL42 DEL42 DEL37 DEL2 DEL40 DEL7 DEL42 DEL40 DEL27 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL42 DEL43 DEL85 DEL5 DEL34 DEL3 DEL7 DEL21 DEL8