HDDS-1300. Optimize non-recursive ozone filesystem apis. Contributed by Lokesh Jain.

+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;
+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.CreateDirectoryRequest;
-   * @param volumeName volume name.
-   * @param bucketName bucket name.
-   * @param keyName key name.
+   *
+   * @param args
-  public OzoneFileStatus getFileStatus(String volumeName, String bucketName,
-                                String keyName) throws IOException {
-    GetFileStatusRequest req = GetFileStatusRequest
-        .newBuilder()
-        .setVolumeName(volumeName)
-        .setBucketName(bucketName)
-        .setKeyName(keyName)
+  public OzoneFileStatus getFileStatus(OmKeyArgs args) throws IOException {
+    KeyArgs keyArgs = KeyArgs.newBuilder()
+        .setVolumeName(args.getVolumeName())
+        .setBucketName(args.getBucketName())
+        .setKeyName(args.getKeyName())
+    GetFileStatusRequest req =
+        GetFileStatusRequest.newBuilder()
+            .setKeyArgs(keyArgs)
+            .build();
+
+  @Override
+  public void createDirectory(OmKeyArgs args) throws IOException {
+    KeyArgs keyArgs = KeyArgs.newBuilder()
+        .setVolumeName(args.getVolumeName())
+        .setBucketName(args.getBucketName())
+        .setKeyName(args.getKeyName())
+        .build();
+    CreateDirectoryRequest request = CreateDirectoryRequest.newBuilder()
+        .setKeyArgs(keyArgs)
+        .build();
+
+    OMRequest omRequest = createOMRequest(Type.CreateDirectory)
+        .setCreateDirectoryRequest(request)
+        .build();
+
+    handleError(submitRequest(omRequest));
+  }
+
+  @Override
+  public OmKeyInfo lookupFile(OmKeyArgs args)
+      throws IOException {
+    KeyArgs keyArgs = KeyArgs.newBuilder()
+        .setVolumeName(args.getVolumeName())
+        .setBucketName(args.getBucketName())
+        .setKeyName(args.getKeyName())
+        .build();
+    OzoneManagerProtocolProtos.LookupFileRequest lookupFileRequest =
+        OzoneManagerProtocolProtos.LookupFileRequest.newBuilder()
+            .setKeyArgs(keyArgs)
+            .build();
+    OMRequest omRequest = createOMRequest(Type.LookupFile)
+        .setLookupFileRequest(lookupFileRequest)
+        .build();
+    OzoneManagerProtocolProtos.LookupFileResponse resp =
+        handleError(submitRequest(omRequest)).getLookupFileResponse();
+    return OmKeyInfo.getFromProtobuf(resp.getKeyInfo());
+  }
+
+  @Override
+  public OpenKeySession createFile(OmKeyArgs args,
+      boolean overWrite, boolean recursive) throws IOException {
+    KeyArgs keyArgs = KeyArgs.newBuilder()
+        .setVolumeName(args.getVolumeName())
+        .setBucketName(args.getBucketName())
+        .setKeyName(args.getKeyName())
+        .setDataSize(args.getDataSize())
+        .setType(args.getType())
+        .setFactor(args.getFactor())
+        .build();
+    OzoneManagerProtocolProtos.CreateFileRequest createFileRequest =
+        OzoneManagerProtocolProtos.CreateFileRequest.newBuilder()
+            .setKeyArgs(keyArgs)
+            .setIsOverwrite(overWrite)
+            .setIsRecursive(recursive)
+            .build();
+    OMRequest omRequest = createOMRequest(Type.CreateFile)
+        .setCreateFileRequest(createFileRequest)
+        .build();
+    OzoneManagerProtocolProtos.CreateFileResponse resp =
+        handleError(submitRequest(omRequest)).getCreateFileResponse();
+    return new OpenKeySession(resp.getID(),
+        OmKeyInfo.getFromProtobuf(resp.getKeyInfo()), resp.getOpenVersion());
+  }

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS43 INS8 UPD43 UPD42 INS60 INS42 INS43 INS42 INS42 INS60 INS60 INS60 INS21 INS42 INS42 INS43 INS42 INS42 INS60 INS60 INS60 INS60 INS41 INS42 INS42 INS43 INS42 INS39 INS42 INS39 INS42 INS42 INS60 INS60 INS60 INS60 INS41 UPD42 UPD42 INS43 INS59 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS14 INS42 INS42 INS32 MOV32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS40 INS42 INS32 INS42 INS42 INS32 INS40 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS40 INS42 INS32 INS42 INS42 INS32 INS40 INS42 INS32 INS43 INS32 INS32 INS32 INS32 INS42 UPD42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 UPD42 UPD42 INS32 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS40 INS32 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS40 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS40 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS40 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL66 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32