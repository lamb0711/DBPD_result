HDFS-6000. Avoid saving namespace when starting rolling upgrade. Contributed by Jing Zhao.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1571840 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.EnumSet;
-import com.google.common.base.Preconditions;
+import com.google.common.base.Preconditions;
-   * Return the name of the image file.
-   * @return The name of the first image file.
+   * @return The first image file with the given txid and image type.
-  public File getFsImageName(long txid) {
-    StorageDirectory sd = null;
-    for (Iterator<StorageDirectory> it =
-      dirIterator(NameNodeDirType.IMAGE); it.hasNext();) {
-      sd = it.next();
-      File fsImage = getStorageFile(sd, NameNodeFile.IMAGE, txid);
-      if(FileUtil.canRead(sd.getRoot()) && fsImage.exists())
+  public File getFsImageName(long txid, NameNodeFile nnf) {
+    for (Iterator<StorageDirectory> it = dirIterator(NameNodeDirType.IMAGE);
+        it.hasNext();) {
+      StorageDirectory sd = it.next();
+      File fsImage = getStorageFile(sd, nnf, txid);
+      if (FileUtil.canRead(sd.getRoot()) && fsImage.exists()) {
+      }
+  }  
+
+  public File getFsImageName(long txid) {
+    return getFsImageName(txid, NameNodeFile.IMAGE);
-  
+
-  
-  static File getImageFile(StorageDirectory sd, long txid) {
-    return new File(sd.getCurrentDir(),
-        getImageFileName(txid));
+
+  static File getImageFile(StorageDirectory sd, NameNodeFile nnf, long txid) {
+    return new File(sd.getCurrentDir(), getNameNodeFileName(nnf, txid));
-  
+
-   * Return the first readable image file for the given txid, or null
-   * if no such image can be found
+   * Return the first readable image file for the given txid and image type, or
+   * null if no such image can be found
-  File findImageFile(long txid) {
+  File findImageFile(NameNodeFile nnf, long txid) {
-        getImageFileName(txid));
+        getNameNodeFileName(nnf, txid));
-  FSImageStorageInspector readAndInspectDirs(NameNodeFile nnf) throws IOException {
+  FSImageStorageInspector readAndInspectDirs(EnumSet<NameNodeFile> fileTypes)
+      throws IOException {
-      inspector = new FSImageTransactionalStorageInspector(nnf);
+      inspector = new FSImageTransactionalStorageInspector(fileTypes);

MOV26 INS26 INS40 INS31 INS44 INS83 INS43 INS42 MOV44 INS8 INS44 MOV44 INS44 INS44 INS43 INS42 INS42 INS41 INS43 INS42 INS39 INS42 INS74 INS42 UPD66 INS42 INS32 INS42 UPD66 UPD66 INS43 INS43 INS60 INS42 INS42 INS40 INS42 INS42 MOV43 INS59 INS8 UPD42 INS42 UPD42 INS42 INS42 MOV32 MOV41 INS42 UPD42 DEL66 DEL65 DEL42 DEL33 DEL59 DEL60 DEL42 DEL7 DEL21 DEL40