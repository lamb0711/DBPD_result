HADOOP-7429. Add another IOUtils#copyBytes method. Contributed by Eli Collins


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140442 13f79535-47bb-0310-9956-ffa450edef68

+   *
-
-
+
+   *
-   * @param in InputStrem to read from
+   *
+   * @param in InputStream to read from
+
+  /**
+   * Copies count bytes from one stream to another.
+   *
+   * @param in InputStream to read from
+   * @param out OutputStream to write to
+   * @param count number of bytes to copy
+   * @throws IOException if bytes can not be read or written
+   */
+  public static void copyBytes(InputStream in, OutputStream out, long count)
+      throws IOException {
+    byte buf[] = new byte[4096];
+    long bytesRemaining = count;
+    int bytesRead;
+
+    while (bytesRemaining > 0) {
+      int bytesToRead = (int)
+        (bytesRemaining < buf.length ? bytesRemaining : buf.length);
+
+      bytesRead = in.read(buf, 0, bytesToRead);
+      if (bytesRead == -1)
+        break;
+
+      out.write(buf, 0, bytesRead);
+      bytesRemaining -= bytesRead;
+    }
+  }
-  /** Reads len bytes in a loop.
-   * @param in The InputStream to read from
+  /**
+   * Reads len bytes in a loop.
+   *
+   * @param in InputStream to read from
-  public static void readFully( InputStream in, byte buf[],
-      int off, int len ) throws IOException {
+  public static void readFully(InputStream in, byte buf[],
+      int off, int len) throws IOException {
-    while ( toRead > 0 ) {
-      int ret = in.read( buf, off, toRead );
-      if ( ret < 0 ) {
+    while (toRead > 0) {
+      int ret = in.read(buf, off, toRead);
+      if (ret < 0) {
-  /** Similar to readFully(). Skips bytes in a loop.
+  /**
+   * Similar to readFully(). Skips bytes in a loop.
-  public static void skipFully( InputStream in, long len ) throws IOException {
-    while ( len > 0 ) {
-      long ret = in.skip( len );
-      if ( ret < 0 ) {
+  public static void skipFully(InputStream in, long len) throws IOException {
+    while (len > 0) {
+      long ret = in.skip(len);
+      if (ret < 0) {
+   *
-    for(java.io.Closeable c : closeables) {
+    for (java.io.Closeable c : closeables) {
+   *
-  public static void closeStream( java.io.Closeable stream ) {
+  public static void closeStream(java.io.Closeable stream) {
-   * Closes the socket ignoring {@link IOException} 
+   * Closes the socket ignoring {@link IOException}
+   *
-  public static void closeSocket( Socket sock ) {
-    // avoids try { close() } dance
-    if ( sock != null ) {
+  public static void closeSocket(Socket sock) {
+    if (sock != null) {
-       sock.close();
-      } catch ( IOException ignored ) {
+        sock.close();
+      } catch (IOException ignored) {
-  /** /dev/null of OutputStreams.
+  /**
+   * The /dev/null of OutputStreams.

INS31 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS39 INS42 INS42 INS60 INS60 INS60 INS61 UPD66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS39 INS59 INS39 INS59 INS39 INS59 INS27 INS8 UPD66 UPD66 INS42 INS85 INS3 INS42 INS42 INS42 INS42 INS34 INS60 INS21 INS25 INS21 INS21 INS5 INS34 INS39 INS59 INS7 INS27 INS10 INS32 INS7 INS39 INS85 INS42 INS11 INS42 INS32 INS42 INS38 INS42 INS42 INS42 INS34 INS42 INS42 INS42 INS39 INS36 INS42 INS42 INS42 INS34 INS42 INS34 INS16 INS27 INS42 INS40 INS42 INS40 DEL66