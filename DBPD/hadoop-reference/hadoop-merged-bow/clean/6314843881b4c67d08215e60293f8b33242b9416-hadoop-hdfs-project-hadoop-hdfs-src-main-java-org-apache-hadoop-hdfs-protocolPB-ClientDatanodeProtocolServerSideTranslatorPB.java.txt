Merge branch 'HDFS-1312' into trunk

-
+import org.apache.hadoop.hdfs.protocol.proto.ClientDatanodeProtocolProtos.SubmitDiskBalancerPlanRequestProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientDatanodeProtocolProtos.SubmitDiskBalancerPlanResponseProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientDatanodeProtocolProtos.CancelPlanRequestProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientDatanodeProtocolProtos.CancelPlanResponseProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientDatanodeProtocolProtos.QueryPlanStatusRequestProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientDatanodeProtocolProtos.QueryPlanStatusResponseProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientDatanodeProtocolProtos.DiskBalancerSettingRequestProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientDatanodeProtocolProtos.DiskBalancerSettingResponseProto;
+import org.apache.hadoop.hdfs.server.datanode.DiskBalancerWorkStatus;
+
+  /**
+   * Submit a disk balancer plan for execution.
+   * @param controller  - RpcController
+   * @param request   - Request
+   * @return   Response
+   * @throws ServiceException
+   */
+  @Override
+  public SubmitDiskBalancerPlanResponseProto submitDiskBalancerPlan(
+      RpcController controller, SubmitDiskBalancerPlanRequestProto request)
+      throws ServiceException {
+    try {
+      impl.submitDiskBalancerPlan(request.getPlanID(),
+          request.hasPlanVersion() ? request.getPlanVersion() : 1,
+          request.getPlan(),
+          request.hasIgnoreDateCheck() ? request.getIgnoreDateCheck() : false);
+      SubmitDiskBalancerPlanResponseProto response =
+          SubmitDiskBalancerPlanResponseProto.newBuilder()
+              .build();
+      return response;
+    } catch(Exception e) {
+      throw new ServiceException(e);
+    }
+  }
+
+  /**
+   * Cancel an executing plan.
+   * @param controller - RpcController
+   * @param request  - Request
+   * @return Response.
+   * @throws ServiceException
+   */
+  @Override
+  public CancelPlanResponseProto cancelDiskBalancerPlan(
+      RpcController controller, CancelPlanRequestProto request)
+      throws ServiceException {
+    try {
+      impl.cancelDiskBalancePlan(request.getPlanID());
+      return CancelPlanResponseProto.newBuilder().build();
+    } catch (Exception e) {
+      throw new ServiceException(e);
+    }
+  }
+
+  /**
+   * Gets the status of an executing Plan.
+   */
+  @Override
+  public QueryPlanStatusResponseProto queryDiskBalancerPlan(
+      RpcController controller, QueryPlanStatusRequestProto request)
+      throws ServiceException {
+    try {
+      DiskBalancerWorkStatus result = impl.queryDiskBalancerPlan();
+      return QueryPlanStatusResponseProto
+          .newBuilder()
+          .setResult(result.getResult().getIntResult())
+          .setPlanID(result.getPlanID())
+          .setCurrentStatus(result.currentStateString())
+          .build();
+    } catch (Exception e) {
+      throw new ServiceException(e);
+    }
+  }
+
+  /**
+   * Returns a run-time setting from diskbalancer like Bandwidth.
+   */
+  @Override
+  public DiskBalancerSettingResponseProto getDiskBalancerSetting(
+      RpcController controller, DiskBalancerSettingRequestProto request)
+      throws ServiceException {
+    try {
+      String val = impl.getDiskBalancerSetting(request.getKey());
+      return DiskBalancerSettingResponseProto.newBuilder()
+          .setValue(val)
+          .build();
+    } catch (Exception e) {
+      throw new ServiceException(e);
+    }
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS31 INS29 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS29 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS29 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS29 INS78 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS65 INS65 INS65 INS65 INS65 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS54 INS65 INS65 INS65 INS65 INS65 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS54 INS65 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS54 INS65 INS42 INS42 INS43 INS42 INS43 INS42 INS42 INS54 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS8 INS12 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS8 INS12 INS66 INS42 INS42 INS8 INS12 INS66 INS42 INS42 INS8 INS12 INS21 INS60 INS41 INS44 INS8 INS21 INS41 INS44 INS8 INS60 INS41 INS44 INS8 INS60 INS41 INS44 INS8 INS32 INS43 INS59 INS42 INS43 INS42 INS53 INS32 INS32 INS43 INS42 INS53 INS43 INS59 INS32 INS43 INS42 INS53 INS43 INS59 INS32 INS43 INS42 INS53 INS42 INS42 INS32 INS16 INS32 INS16 INS42 INS42 INS32 INS42 INS14 INS42 INS42 INS32 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS32 INS34 INS42 INS42 INS32 INS32 INS9 INS32 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS42 INS42 INS32 INS42 INS32 INS43 INS42 INS42 INS42 INS32 INS32 INS42 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42