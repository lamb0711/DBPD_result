YARN-6232. Update resource usage and preempted resource calculations to take into account all resource types. Contributed by Varun Vasudev.

+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Map;
+import org.apache.hadoop.yarn.api.records.ResourceInformation;
+import org.apache.hadoop.yarn.util.resource.ResourceUtils;
+
+  public static String getResourceSecondsString(Map<String, Long> targetMap) {
+    List<String> strings = new ArrayList<>(targetMap.size());
+    //completed app report in the timeline server doesn't have usage report
+    Long memorySeconds = 0L;
+    Long vcoreSeconds = 0L;
+    if (targetMap.containsKey(ResourceInformation.MEMORY_MB.getName())) {
+      memorySeconds = targetMap.get(ResourceInformation.MEMORY_MB.getName());
+    }
+    if (targetMap.containsKey(ResourceInformation.VCORES.getName())) {
+      vcoreSeconds = targetMap.get(ResourceInformation.VCORES.getName());
+    }
+    strings.add(memorySeconds + " MB-seconds");
+    strings.add(vcoreSeconds + " vcore-seconds");
+    Map<String, ResourceInformation> tmp = ResourceUtils.getResourceTypes();
+    if (targetMap.size() > 2) {
+      for (Map.Entry<String, Long> entry : targetMap.entrySet()) {
+        if (!entry.getKey().equals(ResourceInformation.MEMORY_MB.getName())
+            && !entry.getKey().equals(ResourceInformation.VCORES.getName())) {
+          String units = "";
+          if (tmp.containsKey(entry.getKey())) {
+            units = tmp.get(entry.getKey()).getUnits();
+          }
+          strings.add(entry.getValue() + " " + entry.getKey() + "-" + units
+              + "seconds");
+        }
+      }
+    }
+    return String.join(", ", strings);
+  }

INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS31 INS83 INS83 INS43 INS42 INS44 INS8 INS42 INS74 INS42 INS60 INS60 INS60 INS25 INS25 INS21 INS21 INS60 INS25 INS41 INS43 INS43 INS43 INS74 INS59 INS43 INS59 INS43 INS59 INS32 INS8 INS32 INS8 INS32 INS32 INS74 INS59 INS27 INS8 INS32 INS42 INS42 INS42 INS43 INS43 INS42 INS14 INS42 INS42 INS34 INS42 INS42 INS34 INS42 INS42 INS32 INS21 INS42 INS42 INS32 INS21 INS42 INS42 INS27 INS42 INS42 INS27 INS43 INS43 INS43 INS42 INS32 INS32 INS34 INS70 INS42 INS42 INS45 INS42 INS42 INS42 INS74 INS32 INS40 INS42 INS7 INS40 INS42 INS7 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS44 INS32 INS8 INS43 INS42 INS42 INS42 INS32 INS42 INS32 INS74 INS42 INS42 INS42 INS25 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS43 INS43 INS27 INS8 INS40 INS42 INS40 INS42 INS40 INS42 INS42 INS38 INS38 INS60 INS25 INS21 INS32 INS32 INS43 INS59 INS32 INS8 INS32 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS32 INS21 INS42 INS42 INS27 INS42 INS42 INS40 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS7 INS32 INS45 INS32 INS45 INS42 INS45 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42