Complete commit of prior merge.

The previous merge accidentally only committed the hdfs project instead of common and MR
as well.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-347@1463203 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+import java.util.Arrays;
+import org.apache.hadoop.yarn.conf.YarnConfiguration;
+import org.apache.hadoop.util.Shell;
+  
+  /** 
+   *  Return a command to execute the given command in OS shell.
+   *  On Windows, the passed in groupId can be used to launch
+   *  and associate the given groupId in a process group. On
+   *  non-Windows, groupId is ignored. 
+   */
+  protected static String[] getRunCommand(String command, String groupId,
+                                          Configuration conf) {
+    boolean containerSchedPriorityIsSet = false;
+    int containerSchedPriorityAdjustment = 
+        YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;
+
+    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) != 
+        null) {
+      containerSchedPriorityIsSet = true;
+      containerSchedPriorityAdjustment = conf 
+          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, 
+          YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);
+    }
+  
+    if (Shell.WINDOWS) {
+      return new String[] { Shell.WINUTILS, "task", "create", groupId,
+          "cmd /c " + command };
+    } else {
+      List<String> retCommand = new ArrayList<String>();
+      if (containerSchedPriorityIsSet) {
+        retCommand.addAll(Arrays.asList("nice", "-n",
+            Integer.toString(containerSchedPriorityAdjustment)));
+      }
+      retCommand.addAll(Arrays.asList("bash", "-c", command));
+      return retCommand.toArray(new String[retCommand.size()]);
+    }
+
+  }
+
+  /** Return a command for determining if process with specified pid is alive. */
+  protected static String[] getCheckProcessIsAliveCommand(String pid) {
+    return Shell.WINDOWS ?
+      new String[] { Shell.WINUTILS, "task", "isAlive", pid } :
+      new String[] { "kill", "-0", pid };
+  }
+
+  /** Return a command to send a signal to a given pid */
+  protected static String[] getSignalKillCommand(int code, String pid) {
+    return Shell.WINDOWS ? new String[] { Shell.WINUTILS, "task", "kill", pid } :
+      new String[] { "kill", "-" + code, pid };
+  }
+    if (Shell.WINDOWS) {
+      return true;
+    }

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS31 INS31 INS31 INS29 INS83 INS83 INS5 INS42 INS44 INS44 INS44 INS8 INS29 INS83 INS83 INS5 INS42 INS44 INS8 INS29 INS83 INS83 INS5 INS42 INS44 INS44 INS8 INS65 INS43 INS85 INS43 INS42 INS43 INS42 INS43 INS42 INS60 INS60 INS25 INS25 INS65 INS43 INS85 INS43 INS42 INS41 INS65 INS43 INS85 INS39 INS42 INS43 INS42 INS41 INS25 INS66 INS66 INS66 INS66 INS42 INS42 INS42 INS42 INS39 INS59 INS39 INS59 INS27 INS8 INS40 INS8 INS8 INS66 INS42 INS42 INS16 INS66 INS42 INS42 INS16 INS40 INS8 INS42 INS9 INS42 INS40 INS32 INS33 INS21 INS21 INS41 INS60 INS25 INS21 INS41 INS40 INS3 INS3 INS40 INS3 INS3 INS41 INS42 INS42 INS40 INS7 INS7 INS3 INS74 INS59 INS42 INS8 INS32 INS32 INS5 INS4 INS5 INS4 INS5 INS4 INS5 INS4 INS9 INS42 INS9 INS42 INS32 INS5 INS4 INS43 INS43 INS42 INS14 INS21 INS42 INS42 INS32 INS42 INS42 INS3 INS43 INS85 INS40 INS45 INS45 INS42 INS43 INS85 INS45 INS45 INS42 INS43 INS85 INS40 INS45 INS45 INS42 INS43 INS85 INS45 INS27 INS42 INS42 INS42 INS40 INS40 INS43 INS85 INS40 INS45 INS45 INS42 INS27 INS42 INS42 INS74 INS32 INS42 INS42 INS45 INS45 INS42 INS5 INS32 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS43 INS43 INS42 INS42 INS32 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS45 INS32 INS42 INS42 INS42 INS42