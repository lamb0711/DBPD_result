YARN-4091. Add REST API to retrieve scheduler activity. (Chen Ge and Sunil G via wangda)

-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.ActiveUsersManager;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceLimits;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedContainerChangeRequest;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerUtils;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.*;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.activities.ActivityDiagnosticConstant;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.activities.ActivitiesLogger;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.activities.ActivityState;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.activities.AllocationState;
-  public ParentQueue(CapacitySchedulerContext cs, 
+  public ParentQueue(CapacitySchedulerContext cs,
-    
+
-    
+
-    LOG.info("Initialized parent-queue " + queueName + 
-        " name=" + queueName + 
-        ", fullname=" + getQueuePath()); 
+    LOG.info("Initialized parent-queue " + queueName +
+        " name=" + queueName +
+        ", fullname=" + getQueuePath());
+  private String getParentName() {
+    return getParent() != null ? getParent().getQueueName() : "";
+  }
+
+
+      ActivitiesLogger.QUEUE.recordQueueActivity(activitiesManager, node,
+          getParentName(), getQueueName(), ActivityState.REJECTED,
+          ActivityDiagnosticConstant.NOT_ABLE_TO_ACCESS_PARTITION + node
+              .getPartition());
+      if (rootQueue) {
+        ActivitiesLogger.NODE.finishSkippedNodeAllocation(activitiesManager,
+            node);
+      }
+
+
+      ActivitiesLogger.QUEUE.recordQueueActivity(activitiesManager, node,
+          getParentName(), getQueueName(), ActivityState.SKIPPED,
+          ActivityDiagnosticConstant.QUEUE_DO_NOT_NEED_MORE_RESOURCE);
+      if (rootQueue) {
+        ActivitiesLogger.NODE.finishSkippedNodeAllocation(activitiesManager,
+            node);
+      }
+
+
+        ActivitiesLogger.QUEUE.recordQueueActivity(activitiesManager, node,
+            getParentName(), getQueueName(), ActivityState.SKIPPED,
+            ActivityDiagnosticConstant.QUEUE_MAX_CAPACITY_LIMIT);
+        if (rootQueue) {
+          ActivitiesLogger.NODE.finishSkippedNodeAllocation(activitiesManager,
+              node);
+        }
+
-      
+
+
+        ActivitiesLogger.QUEUE.recordQueueActivity(activitiesManager, node,
+            getParentName(), getQueueName(), ActivityState.ACCEPTED,
+            ActivityDiagnosticConstant.EMPTY);
+
+        if (node.getReservedContainer() == null) {
+          if (rootQueue) {
+            ActivitiesLogger.NODE.finishAllocatedNodeAllocation(
+                activitiesManager, node,
+                assignedToChild.getAssignmentInformation()
+                    .getFirstAllocatedOrReservedContainerId(),
+                AllocationState.ALLOCATED);
+          }
+        } else {
+          if (rootQueue) {
+            ActivitiesLogger.NODE.finishAllocatedNodeAllocation(
+                activitiesManager, node,
+                assignedToChild.getAssignmentInformation()
+                    .getFirstAllocatedOrReservedContainerId(),
+                AllocationState.RESERVED);
+          }
+        }
+
+
+        ActivitiesLogger.QUEUE.recordQueueActivity(activitiesManager, node,
+            getParentName(), getQueueName(), ActivityState.SKIPPED,
+            ActivityDiagnosticConstant.EMPTY);
+        if (rootQueue) {
+          ActivitiesLogger.NODE.finishSkippedNodeAllocation(activitiesManager,
+              node);
+        }
+
-    
+

UPD40 UPD40 UPD40 UPD40 UPD40 INS31 INS83 INS43 INS42 INS8 INS42 INS41 INS16 INS27 INS32 INS45 INS21 INS25 INS21 INS25 INS32 INS33 INS32 INS42 INS32 INS42 INS8 INS32 INS42 INS8 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS32 INS40 INS27 INS21 INS40 INS42 INS42 INS42 INS32 INS32 INS40 INS40 INS21 INS21 INS25 INS21 INS25 INS21 INS25 INS42 INS42 INS40 INS32 INS32 INS42 INS42 INS32 INS32 INS42 INS8 INS32 INS27 INS8 INS8 INS32 INS42 INS8 INS42 INS42 INS40 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS32 INS40 INS40 INS21 INS40 INS42 INS42 INS42 INS32 INS32 INS40 INS40 INS32 INS33 INS25 INS25 INS40 INS42 INS42 INS42 INS32 INS32 INS40 INS40 INS21 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS8 INS42 INS8 INS42 INS42 INS32 INS40 INS42 INS42 INS42 INS21 INS21 INS40 INS42 INS42 INS42 INS32 INS32 INS40 INS42 INS42 INS42 INS32 INS40 INS40 INS42 INS42 INS42 INS32 INS40 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 DEL40 DEL26