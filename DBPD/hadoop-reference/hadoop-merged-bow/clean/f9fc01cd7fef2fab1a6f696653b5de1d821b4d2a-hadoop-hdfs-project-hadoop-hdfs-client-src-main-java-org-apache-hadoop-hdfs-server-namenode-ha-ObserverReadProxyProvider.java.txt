HDFS-13782. ObserverReadProxyProvider should work with IPFailoverProxyProvider. Contributed by Konstantin Shvachko.
+import java.io.Closeable;
-import java.util.Collections;
-import org.apache.hadoop.hdfs.NameNodeProxiesClient;
-
-import com.google.common.annotations.VisibleForTesting;
+import org.apache.hadoop.ipc.RPC;
+import com.google.common.annotations.VisibleForTesting;
+
-    extends ConfiguredFailoverProxyProvider<T> {
+    extends AbstractNNFailoverProxyProvider<T> {
+  private AbstractNNFailoverProxyProvider<T> failoverProxy;
+  /** All NameNdoe proxies */
+  private List<NNProxyInfo<T>> nameNodeProxies =
+      new ArrayList<NNProxyInfo<T>>();
-  private final List<AddressRpcProxyPair<T>> observerProxies =
-      new ArrayList<>();
+  private final List<NNProxyInfo<T>> observerProxies =
+      new ArrayList<NNProxyInfo<T>>();
-  @SuppressWarnings("unchecked")
+  /**
+   * By default ObserverReadProxyProvider uses
+   * {@link ConfiguredFailoverProxyProvider} for failover.
+   */
+    this(conf, uri, xface, factory,
+        new ConfiguredFailoverProxyProvider<T>(conf, uri, xface,factory));
+  }
+
+  public ObserverReadProxyProvider(
+      Configuration conf, URI uri, Class<T> xface, HAProxyFactory<T> factory,
+      AbstractNNFailoverProxyProvider<T> failoverProxy)
+      throws IOException {
-    alignmentContext = new ClientGSIContext();
+    this.failoverProxy = failoverProxy;
+    this.alignmentContext = new ClientGSIContext();
+    // Get all NameNode proxies
+    nameNodeProxies = getProxyAddresses(uri,
+        HdfsClientConfigKeys.DFS_NAMENODE_RPC_ADDRESS_KEY);
-    for (AddressRpcProxyPair<T> ap : this.proxies) {
-      ap.namenode = (T) NameNodeProxiesClient.createProxyWithAlignmentContext(
-          ap.address, conf, ugi, false, getFallbackToSimpleAuth(),
-          alignmentContext);
-      if (isObserverState(ap)) {
-        observerProxies.add(ap);
+    for (NNProxyInfo<T> pi : nameNodeProxies) {
+      createProxyIfNeeded(pi);
+      if (isObserverState(pi)) {
+        observerProxies.add(pi);
+    // TODO: No observers is not an error
+    // Just direct all reads go to the active NameNode
-
-    // Randomize the list to prevent all clients pointing to the same one
-    boolean randomized = conf.getBoolean(
-        HdfsClientConfigKeys.Failover.RANDOM_ORDER,
-        HdfsClientConfigKeys.Failover.RANDOM_ORDER_DEFAULT);
-    if (randomized) {
-      Collections.shuffle(observerProxies);
-    }
-    List<ProxyInfo<T>> observerProxies = new ArrayList<>();
-      AddressRpcProxyPair<T> p = this.observerProxies.get(i);
-      ProxyInfo<T> pInfo = getProxy(p);
-      observerProxies.add(pInfo);
-      combinedInfo.append(pInfo.proxyInfo);
+      combinedInfo.append(observerProxies.get(i).proxyInfo);
+  @Override
+  public void performFailover(T currentProxy) {
+    failoverProxy.performFailover(currentProxy);
+  }
+
-  boolean isObserverState(AddressRpcProxyPair<T> ap) {
+  boolean isObserverState(NNProxyInfo<T> pi) {
-      ap.namenode.reportBadBlocks(new LocatedBlock[0]);
+      pi.proxy.reportBadBlocks(new LocatedBlock[0]);
-      LOG.error("Failed to connect to {}", ap.address, ioe);
+      LOG.error("Failed to connect to {}", pi.getAddress(), ioe);
-      ap.namenode.checkAccess("/", FsAction.READ);
+      pi.proxy.checkAccess("/", FsAction.READ);
-      LOG.error("Failed to connect to {}", ap.address, ioe);
+      LOG.error("Failed to connect to {}", pi.getAddress(), ioe);
-    final List<ProxyInfo<T>> observerProxies;
+    final List<NNProxyInfo<T>> observerProxies;
-    ObserverReadInvocationHandler(List<ProxyInfo<T>> observerProxies) {
+    ObserverReadInvocationHandler(List<NNProxyInfo<T>> observerProxies) {
-      this.activeProxy = ObserverReadProxyProvider.super.getProxy();
+      this.activeProxy = failoverProxy.getProxy();
-          ProxyInfo<T> current = observerProxies.get(currentIndex.get());
+          NNProxyInfo<T> current = observerProxies.get(currentIndex.get());
+
+  @Override
+  public synchronized void close() throws IOException {
+    failoverProxy.close();
+    for (ProxyInfo<T> pi : nameNodeProxies) {
+      if (pi.proxy != null) {
+        if (pi.proxy instanceof Closeable) {
+          ((Closeable)pi.proxy).close();
+        } else {
+          RPC.stopProxy(pi.proxy);
+        }
+      }
+    }
+  }
+
+  @Override
+  public boolean useLogicalURI() {
+    return failoverProxy.useLogicalURI();
+  }

MOV26 MOV26 MOV26 UPD40 UPD40 INS74 INS23 INS23 INS31 INS31 INS31 INS31 INS43 INS43 INS83 UPD74 MOV74 INS59 INS29 INS83 INS74 INS59 UPD74 INS29 INS83 INS42 INS44 INS44 INS44 INS44 INS43 INS8 MOV44 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS83 INS39 INS42 INS43 INS8 INS78 INS83 INS39 INS42 INS8 INS42 INS42 UPD43 INS42 INS65 MOV43 INS74 INS42 INS14 MOV43 INS74 INS65 INS43 INS42 INS43 INS42 INS74 INS42 INS74 INS42 INS42 INS17 UPD74 UPD42 INS21 MOV21 INS70 INS42 MOV43 INS42 INS21 UPD74 UPD42 UPD74 INS42 INS42 INS21 INS70 INS42 INS41 UPD42 INS66 INS43 INS43 INS74 INS43 INS43 UPD74 INS66 INS65 INS66 INS42 INS42 INS43 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS14 UPD43 INS7 INS44 INS42 INS8 INS32 UPD43 MOV27 MOV27 MOV43 UPD74 UPD74 INS32 INS44 INS42 INS8 INS32 INS42 INS42 MOV43 INS74 INS42 INS42 MOV43 INS74 INS42 INS42 INS42 INS42 INS42 MOV74 INS42 INS42 INS42 INS42 UPD42 INS22 INS42 INS22 INS42 INS32 INS74 INS42 INS21 MOV25 INS21 INS42 INS42 INS42 UPD42 UPD43 MOV43 UPD74 INS42 INS42 MOV74 INS42 INS25 INS42 INS42 INS43 INS43 INS43 INS43 MOV52 UPD42 MOV42 INS52 INS42 UPD42 MOV42 UPD42 MOV42 INS40 INS43 MOV43 INS32 INS32 INS32 UPD42 UPD43 INS32 INS27 INS8 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS42 INS22 UPD40 INS32 UPD40 INS32 UPD42 INS42 INS42 INS40 INS33 INS25 INS32 INS42 INS42 INS42 INS42 INS42 INS62 INS8 INS8 UPD42 UPD42 UPD42 INS42 MOV42 MOV42 INS74 INS40 INS43 INS21 INS21 INS43 INS43 INS42 INS32 INS32 INS42 INS42 INS36 INS42 INS42 INS42 INS40 INS11 INS43 INS40 INS42 DEL42 DEL45 DEL79 DEL42 DEL40 DEL42 DEL40 DEL42 DEL9 DEL42 DEL32 DEL42 DEL32 DEL11 DEL42 DEL22 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL70 DEL39 DEL42 DEL40 DEL40 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL74 DEL42 DEL74 DEL14 DEL59 DEL60 DEL42 DEL43 DEL74 DEL42 DEL52 DEL42 DEL22 DEL32 DEL59 DEL60 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL40 DEL32 DEL21 DEL40 DEL40 DEL42 DEL42 DEL48