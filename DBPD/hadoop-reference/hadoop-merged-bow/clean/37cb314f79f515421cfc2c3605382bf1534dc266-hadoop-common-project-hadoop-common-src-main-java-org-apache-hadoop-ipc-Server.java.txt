HADOOP-10407. Fix the javac warnings in org.apache.hadoop.ipc package.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577710 13f79535-47bb-0310-9956-ffa450edef68

+import static org.apache.hadoop.ipc.RpcConstants.AUTHORIZATION_FAILED_CALL_ID;
+import static org.apache.hadoop.ipc.RpcConstants.CONNECTION_CONTEXT_CALL_ID;
+import static org.apache.hadoop.ipc.RpcConstants.CURRENT_VERSION;
+import static org.apache.hadoop.ipc.RpcConstants.HEADER_LEN_AFTER_HRPC_PART;
+import static org.apache.hadoop.ipc.RpcConstants.PING_CALL_ID;
+
-import static org.apache.hadoop.ipc.RpcConstants.*;
-
+  static Class<? extends BlockingQueue<Call>> getQueueClass(
+      String prefix, Configuration conf) {
+    String name = prefix + "." + CommonConfigurationKeys.IPC_CALLQUEUE_IMPL_KEY;
+    Class<?> queueClass = conf.getClass(name, LinkedBlockingQueue.class);
+    return CallQueueManager.convertQueueClass(queueClass, Call.class);
+  }
+
+  private String getQueueClassPrefix() {
+    return CommonConfigurationKeys.IPC_CALLQUEUE_NAMESPACE + "." + port;
+  }
+
-    String prefix = CommonConfigurationKeys.IPC_CALLQUEUE_NAMESPACE + "." +
-      this.port;
-    Class queueClassToUse = conf.getClass(prefix + "." +
-      CommonConfigurationKeys.IPC_CALLQUEUE_IMPL_KEY, LinkedBlockingQueue.class);
-
-    callQueue.swapQueue(queueClassToUse, maxQueueSize, prefix, conf);
+    String prefix = getQueueClassPrefix();
+    callQueue.swapQueue(getQueueClass(prefix, conf), maxQueueSize, prefix, conf);
-          return (RetriableException) cause;
+          return cause;
-          return (StandbyException) cause;
+          return cause;
-      RpcSaslProto saslResponse = null;
+      final RpcSaslProto saslResponse;
+            saslResponse = null;
-          // fallthru to process sasl token
+          saslResponse = processSaslToken(saslMessage);
+          break;
-          if (!saslMessage.hasToken()) {
-            throw new SaslException("Client did not send a token");
-          }
-          byte[] saslToken = saslMessage.getToken().toByteArray();
-          if (LOG.isDebugEnabled()) {
-            LOG.debug("Have read input token of size " + saslToken.length
-                + " for processing by saslServer.evaluateResponse()");
-          }
-          saslToken = saslServer.evaluateResponse(saslToken);
-          saslResponse = buildSaslResponse(
-              saslServer.isComplete() ? SaslState.SUCCESS : SaslState.CHALLENGE,
-              saslToken);
+          saslResponse = processSaslToken(saslMessage);
+    private RpcSaslProto processSaslToken(RpcSaslProto saslMessage)
+        throws SaslException {
+      if (!saslMessage.hasToken()) {
+        throw new SaslException("Client did not send a token");
+      }
+      byte[] saslToken = saslMessage.getToken().toByteArray();
+      if (LOG.isDebugEnabled()) {
+        LOG.debug("Have read input token of size " + saslToken.length
+            + " for processing by saslServer.evaluateResponse()");
+      }
+      saslToken = saslServer.evaluateResponse(saslToken);
+      return buildSaslResponse(
+          saslServer.isComplete() ? SaslState.SUCCESS : SaslState.CHALLENGE,
+          saslToken);
+    }
+
-    String prefix = CommonConfigurationKeys.IPC_CALLQUEUE_NAMESPACE + "." +
-        this.port;
-    Class queueClassToUse = conf.getClass(prefix + "." +
-        CommonConfigurationKeys.IPC_CALLQUEUE_IMPL_KEY, LinkedBlockingQueue.class);
-    this.callQueue = new CallQueueManager<Call>(queueClassToUse, maxQueueSize,
-      prefix, conf);
+    final String prefix = getQueueClassPrefix();
+    this.callQueue = new CallQueueManager<Call>(getQueueClass(prefix, conf),
+        maxQueueSize, prefix, conf);

MOV26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 UPD40 INS31 INS31 INS83 INS74 INS42 INS44 MOV44 INS8 INS83 INS43 INS42 INS8 INS44 INS31 MOV43 INS76 MOV43 INS42 MOV60 INS60 INS41 INS42 INS41 INS43 INS42 INS83 MOV43 INS42 INS44 INS43 MOV8 INS60 INS74 INS43 INS74 INS59 INS32 INS27 INS42 MOV43 INS43 INS42 INS42 INS41 INS83 INS43 MOV59 INS43 INS43 INS42 UPD42 MOV27 MOV43 INS76 INS42 INS32 INS42 INS42 INS42 INS57 INS40 INS45 INS42 INS32 INS32 INS83 INS43 INS8 INS42 MOV32 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 MOV57 INS43 INS42 UPD42 MOV42 INS42 INS42 INS42 INS21 INS10 INS21 INS10 UPD42 INS32 INS42 INS7 INS7 INS42 INS42 INS42 INS21 INS42 INS32 INS42 INS32 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS33 DEL42 DEL42 DEL32 DEL40 DEL45 DEL52 DEL42 DEL22 DEL27 DEL42 DEL43 DEL42 DEL11 DEL42 DEL43 DEL42 DEL11 DEL33 DEL42 DEL7 DEL21 DEL10 DEL42 DEL42 DEL45 DEL40 DEL27 DEL42 DEL43 DEL57 DEL42 DEL40 DEL45 DEL52 DEL42 DEL22 DEL27 DEL59 DEL60 DEL60 DEL42