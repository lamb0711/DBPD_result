YARN-5602. Utils for Federation State and Policy Store. (Giovanni Matteo Fumarola via Subru).

(cherry picked from commit 326a2e6bde1cf266ecc7d3b513cdaac6abcebbe4)

+
+  @Override
+  public boolean equals(Object obj) {
+    if (this == obj) {
+      return true;
+    }
+    if (obj == null) {
+      return false;
+    }
+    if (getClass() != obj.getClass()) {
+      return false;
+    }
+    SubClusterInfo other = (SubClusterInfo) obj;
+    if (!this.getSubClusterId().equals(other.getSubClusterId())) {
+      return false;
+    }
+    if (!this.getAMRMServiceAddress().equals(other.getAMRMServiceAddress())) {
+      return false;
+    }
+    if (!this.getClientRMServiceAddress()
+        .equals(other.getClientRMServiceAddress())) {
+      return false;
+    }
+    if (!this.getRMAdminServiceAddress()
+        .equals(other.getRMAdminServiceAddress())) {
+      return false;
+    }
+    if (!this.getRMWebServiceAddress().equals(other.getRMWebServiceAddress())) {
+      return false;
+    }
+    if (!this.getState().equals(other.getState())) {
+      return false;
+    }
+    return this.getLastStartTime() == other.getLastStartTime();
+    // Capability and HeartBeat fields are not included as they are temporal
+    // (i.e. timestamps), so they change during the lifetime of the same
+    // sub-cluster
+  }
+
+  @Override
+  public int hashCode() {
+    final int prime = 31;
+    int result = 1;
+    result = prime * result
+        + ((getSubClusterId() == null) ? 0 : getSubClusterId().hashCode());
+    result = prime * result + ((getAMRMServiceAddress() == null) ? 0
+        : getAMRMServiceAddress().hashCode());
+    result = prime * result + ((getClientRMServiceAddress() == null) ? 0
+        : getClientRMServiceAddress().hashCode());
+    result = prime * result + ((getRMAdminServiceAddress() == null) ? 0
+        : getRMAdminServiceAddress().hashCode());
+    result = prime * result + ((getRMWebServiceAddress() == null) ? 0
+        : getRMWebServiceAddress().hashCode());
+    result =
+        prime * result + ((getState() == null) ? 0 : getState().hashCode());
+    result = prime * result
+        + (int) (getLastStartTime() ^ (getLastStartTime() >>> 32));
+    return result;
+    // Capability and HeartBeat fields are not included as they are temporal
+    // (i.e. timestamps), so they change during the lifetime of the same
+    // sub-cluster
+  }

INS31 INS31 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS8 INS42 INS43 INS42 INS25 INS25 INS25 INS60 INS25 INS25 INS25 INS25 INS25 INS25 INS41 INS42 INS60 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS41 INS42 INS27 INS8 INS27 INS8 INS27 INS8 INS43 INS59 INS38 INS8 INS38 INS8 INS38 INS8 INS38 INS8 INS38 INS8 INS38 INS8 INS27 INS83 INS39 INS59 INS39 INS59 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS42 INS52 INS42 INS41 INS42 INS33 INS41 INS32 INS32 INS41 INS42 INS42 INS11 INS32 INS41 INS32 INS41 INS32 INS41 INS32 INS41 INS32 INS41 INS32 INS41 INS32 INS32 INS42 INS34 INS42 INS34 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS9 INS9 INS42 INS42 INS42 INS9 INS43 INS42 INS32 INS42 INS32 INS9 INS32 INS42 INS32 INS9 INS32 INS42 INS32 INS9 INS32 INS42 INS32 INS9 INS32 INS42 INS32 INS9 INS32 INS42 INS32 INS9 INS52 INS42 INS42 INS42 INS27 INS36 INS27 INS36 INS27 INS36 INS27 INS36 INS27 INS36 INS27 INS36 INS27 INS11 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS52 INS42 INS42 INS42 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS42 INS39 INS36 INS36 INS34 INS32 INS36 INS34 INS32 INS36 INS34 INS32 INS36 INS34 INS32 INS36 INS34 INS32 INS36 INS34 INS32 INS27 INS27 INS32 INS42 INS27 INS32 INS42 INS27 INS32 INS42 INS27 INS32 INS42 INS27 INS32 INS42 INS27 INS32 INS42 INS32 INS36 INS32 INS33 INS42 INS32 INS33 INS42 INS32 INS33 INS42 INS32 INS33 INS42 INS32 INS33 INS42 INS32 INS33 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS34 INS42