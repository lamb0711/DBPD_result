HDFS-5431. Support cachepool-based limit management in path-based caching. (awang via cmccabe)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1551651 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.EnumSet;
+import org.apache.hadoop.fs.CacheFlag;
+          "[-force] " +
+      listing.addRow("-force",
+          "Skips checking of cache pool resource limits.");
-
+      boolean force = StringUtils.popOption("-force", args);
+      EnumSet<CacheFlag> flags = EnumSet.noneOf(CacheFlag.class);
+      if (force) {
+        flags.add(CacheFlag.FORCE);
+      }
-        long id = dfs.addCacheDirective(directive);
+        long id = dfs.addCacheDirective(directive, flags);
-          " -id <id> [-path <path>] [-replication <replication>] " +
+          " -id <id> [-path <path>] [-force] [-replication <replication>] " +
+      listing.addRow("-force",
+          "Skips checking of cache pool resource limits.");
+      boolean force = StringUtils.popOption("-force", args);
+      EnumSet<CacheFlag> flags = EnumSet.noneOf(CacheFlag.class);
+      if (force) {
+        flags.add(CacheFlag.FORCE);
+      }
-        dfs.modifyCacheDirective(builder.build());
+        dfs.modifyCacheDirective(builder.build(), flags);
-          "[-group <group>] [-mode <mode>] [-weight <weight>]]\n";
+          "[-group <group>] [-mode <mode>] [-limit <limit>]]\n";
-          FsPermission.getCachePoolDefault().toShort()));
-      listing.addRow("<weight>", "Weight of the pool. " +
-          "This is a relative measure of the importance of the pool used " +
-          "during cache resource management. By default, it is set to " +
-          CachePool.DEFAULT_WEIGHT);
+          FsPermission.getCachePoolDefault().toShort()) + ".");
+      listing.addRow("<limit>", "The maximum number of bytes that can be " +
+          "cached by directives in this pool, in aggregate. By default, " +
+          "no limit is set.");
-      String owner = StringUtils.popOptionWithArgument("-owner", args);
-      if (owner == null) {
-        owner = UserGroupInformation.getCurrentUser().getShortUserName();
-      }
-      String group = StringUtils.popOptionWithArgument("-group", args);
-      if (group == null) {
-        group = UserGroupInformation.getCurrentUser().getGroupNames()[0];
-      }
-      String modeString = StringUtils.popOptionWithArgument("-mode", args);
-      int mode;
-      if (modeString == null) {
-        mode = FsPermission.getCachePoolDefault().toShort();
-      } else {
-        mode = Integer.parseInt(modeString, 8);
-      }
-      String weightString = StringUtils.popOptionWithArgument("-weight", args);
-      int weight;
-      if (weightString == null) {
-        weight = CachePool.DEFAULT_WEIGHT;
-      } else {
-        weight = Integer.parseInt(weightString);
-      }
+      CachePoolInfo info = new CachePoolInfo(name);
+
+      String owner = StringUtils.popOptionWithArgument("-owner", args);
+      if (owner != null) {
+        info.setOwnerName(owner);
+      }
+      String group = StringUtils.popOptionWithArgument("-group", args);
+      if (group != null) {
+        info.setGroupName(group);
+      }
+      String modeString = StringUtils.popOptionWithArgument("-mode", args);
+      if (modeString != null) {
+        short mode = Short.parseShort(modeString, 8);
+        info.setMode(new FsPermission(mode));
+      }
+      String limitString = StringUtils.popOptionWithArgument("-limit", args);
+      if (limitString != null) {
+        long limit = Long.parseLong(limitString);
+        info.setLimit(limit);
+      }
-      CachePoolInfo info = new CachePoolInfo(name).
-          setOwnerName(owner).
-          setGroupName(group).
-          setMode(new FsPermission((short)mode)).
-          setWeight(weight);
-          "[-group <group>] [-mode <mode>] [-weight <weight>]]\n";
+          "[-group <group>] [-mode <mode>] [-limit <limit>]]\n";
-      listing.addRow("<weight>", "Weight of the pool.");
+      listing.addRow("<limit>", "Maximum number of bytes that can be cached " +
+          "by this pool.");
-          "See usage of " + AddCachePoolCommand.NAME + " for more details",
+          "See usage of " + AddCachePoolCommand.NAME + " for more details.",
-      String weightString = StringUtils.popOptionWithArgument("-weight", args);
-      Integer weight = (weightString == null) ?
-          null : Integer.parseInt(weightString);
+      String limitString = StringUtils.popOptionWithArgument("-limit", args);
+      Long limit = (limitString == null) ?
+          null : Long.parseLong(limitString);
-      if (weight != null) {
-        info.setWeight(weight);
+      if (limit != null) {
+        info.setLimit(limit);
-      if (weight != null) {
-        System.out.print(prefix + "weight " + weight);
+      if (limit != null) {
+        System.out.print(prefix + "limit " + limit);
-          addField("WEIGHT", Justification.RIGHT);
+          addField("LIMIT", Justification.RIGHT);
+            addField("BYTES_OVERLIMIT", Justification.RIGHT).
-            row.add(
-                info.getWeight() != null ? info.getWeight().toString() : null);
+            Long limit = info.getLimit();
+            String limitString;
+            if (limit != null && limit.equals(CachePool.DEFAULT_LIMIT)) {
+              limitString = "unlimited";
+            } else {
+              limitString = "" + limit;
+            }
+            row.add(limitString);
+              row.add(Long.toString(stats.getBytesOverlimit()));

INS26 INS26 INS40 INS40 MOV60 MOV25 INS21 INS60 INS60 INS25 INS21 INS60 INS60 INS25 INS60 INS25 INS32 INS39 INS59 INS74 INS59 INS42 INS8 INS32 INS39 INS59 INS74 INS59 INS42 INS8 INS43 INS59 UPD27 UPD27 UPD27 UPD27 MOV27 INS8 UPD43 INS45 INS42 INS42 INS45 INS45 INS42 INS32 INS43 INS43 INS42 INS32 INS21 UPD45 INS42 INS42 INS45 INS45 INS42 INS32 INS43 INS43 INS42 INS32 INS21 UPD45 UPD45 INS42 INS42 INS14 INS60 INS21 UPD42 UPD42 INS60 INS21 UPD45 UPD45 INS27 UPD42 UPD42 UPD42 UPD42 UPD42 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS57 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS57 INS32 INS27 INS45 UPD45 UPD45 UPD45 INS43 INS42 INS32 INS32 INS39 INS59 INS32 UPD45 INS39 INS59 INS32 INS45 INS45 UPD45 UPD45 INS32 INS43 INS42 INS42 INS40 INS43 INS42 INS42 INS40 INS42 MOV45 MOV45 MOV45 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 INS42 INS32 INS42 INS42 MOV14 INS42 INS32 INS42 UPD42 MOV42 UPD42 MOV42 UPD45 UPD42 UPD42 UPD42 UPD42 UPD42 MOV32 INS42 INS45 INS40 INS42 INS42 INS42 UPD42 MOV42 UPD42 MOV42 MOV42 MOV34 INS42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 UPD45 UPD42 UPD45 UPD45 INS60 INS60 INS25 INS21 INS43 INS59 INS43 INS59 INS27 INS8 INS8 INS32 INS42 INS42 INS32 INS42 INS42 INS27 INS32 INS21 INS21 INS42 INS42 INS42 INS21 MOV42 UPD42 MOV42 INS42 MOV33 UPD42 MOV42 UPD42 MOV42 INS40 INS7 INS7 INS32 INS42 INS45 INS42 INS27 INS42 INS42 INS32 INS45 INS42 INS42 INS42 INS32 INS42 INS42 DEL40 DEL42 DEL32 DEL32 DEL7 DEL42 DEL32 DEL32 DEL34 DEL2 DEL7 DEL39 DEL42 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL7 DEL21 DEL8 DEL39 DEL42 DEL11 DEL42 DEL32 DEL7 DEL21 DEL39 DEL42 DEL59 DEL60 DEL42 DEL40 DEL7 DEL21 DEL8 DEL42 DEL32 DEL7 DEL21 DEL8 DEL25 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL14 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL42 DEL32 DEL32 DEL59 DEL60 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL42 DEL32 DEL33 DEL16 DEL32 DEL21