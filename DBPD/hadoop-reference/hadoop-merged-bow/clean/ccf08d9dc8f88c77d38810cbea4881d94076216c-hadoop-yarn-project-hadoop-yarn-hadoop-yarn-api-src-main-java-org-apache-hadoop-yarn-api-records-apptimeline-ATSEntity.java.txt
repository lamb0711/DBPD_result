Merge r1555021 through r1565516 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1565519 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Map.Entry;
-public class ATSEntity {
+public class ATSEntity implements Comparable<ATSEntity> {
-  private long startTime;
+  private Long startTime;
-  private Map<String, List<Object>> relatedEntities =
-      new HashMap<String, List<Object>>();
+  private Map<String, List<String>> relatedEntities =
+      new HashMap<String, List<String>>();
-  public long getStartTime() {
+  public Long getStartTime() {
-  public void setStartTime(long startTime) {
+  public void setStartTime(Long startTime) {
-  public Map<String, List<Object>> getRelatedEntities() {
+  public Map<String, List<String>> getRelatedEntities() {
-   * Add a list of entity of the same type to the existing related entity map
+   * Add an entity to the existing related entity map
-   * @param entityIds
-   *          a list of entity Ids
+   * @param entityId
+   *          the entity Id
-  public void addRelatedEntity(String entityType, List<Object> entityIds) {
-    List<Object> thisRelatedEntity = relatedEntities.get(entityType);
-    relatedEntities.put(entityType, entityIds);
+  public void addRelatedEntity(String entityType, String entityId) {
+    List<String> thisRelatedEntity = relatedEntities.get(entityType);
-      relatedEntities.put(entityType, entityIds);
-    } else {
-      thisRelatedEntity.addAll(entityIds);
+      thisRelatedEntity = new ArrayList<String>();
+      relatedEntities.put(entityType, thisRelatedEntity);
+    thisRelatedEntity.add(entityId);
-  public void addRelatedEntities(
-      Map<String, List<Object>> relatedEntities) {
-    for (Map.Entry<String, List<Object>> relatedEntity : relatedEntities
-        .entrySet()) {
-      List<Object> thisRelatedEntity =
+  public void addRelatedEntities(Map<String, List<String>> relatedEntities) {
+    for (Entry<String, List<String>> relatedEntity :
+        relatedEntities.entrySet()) {
+      List<String> thisRelatedEntity =
-      Map<String, List<Object>> relatedEntities) {
+      Map<String, List<String>> relatedEntities) {
+  @Override
+  public int hashCode() {
+    // generated by eclipse
+    final int prime = 31;
+    int result = 1;
+    result = prime * result + ((entityId == null) ? 0 : entityId.hashCode());
+    result =
+        prime * result + ((entityType == null) ? 0 : entityType.hashCode());
+    result = prime * result + ((events == null) ? 0 : events.hashCode());
+    result = prime * result + ((otherInfo == null) ? 0 : otherInfo.hashCode());
+    result =
+        prime * result
+            + ((primaryFilters == null) ? 0 : primaryFilters.hashCode());
+    result =
+        prime * result
+            + ((relatedEntities == null) ? 0 : relatedEntities.hashCode());
+    result = prime * result + ((startTime == null) ? 0 : startTime.hashCode());
+    return result;
+  }
+
+  @Override
+  public boolean equals(Object obj) {
+    // generated by eclipse
+    if (this == obj)
+      return true;
+    if (obj == null)
+      return false;
+    if (getClass() != obj.getClass())
+      return false;
+    ATSEntity other = (ATSEntity) obj;
+    if (entityId == null) {
+      if (other.entityId != null)
+        return false;
+    } else if (!entityId.equals(other.entityId))
+      return false;
+    if (entityType == null) {
+      if (other.entityType != null)
+        return false;
+    } else if (!entityType.equals(other.entityType))
+      return false;
+    if (events == null) {
+      if (other.events != null)
+        return false;
+    } else if (!events.equals(other.events))
+      return false;
+    if (otherInfo == null) {
+      if (other.otherInfo != null)
+        return false;
+    } else if (!otherInfo.equals(other.otherInfo))
+      return false;
+    if (primaryFilters == null) {
+      if (other.primaryFilters != null)
+        return false;
+    } else if (!primaryFilters.equals(other.primaryFilters))
+      return false;
+    if (relatedEntities == null) {
+      if (other.relatedEntities != null)
+        return false;
+    } else if (!relatedEntities.equals(other.relatedEntities))
+      return false;
+    if (startTime == null) {
+      if (other.startTime != null)
+        return false;
+    } else if (!startTime.equals(other.startTime))
+      return false;
+    return true;
+  }
+
+  @Override
+  public int compareTo(ATSEntity other) {
+    int comparison = entityType.compareTo(other.entityType);
+    if (comparison == 0) {
+      long thisStartTime =
+          startTime == null ? Long.MIN_VALUE : startTime;
+      long otherStartTime =
+          other.startTime == null ? Long.MIN_VALUE : other.startTime;
+      if (thisStartTime > otherStartTime) {
+        return -1;
+      } else if (thisStartTime < otherStartTime) {
+        return 1;
+      } else {
+        return entityId.compareTo(other.entityId);
+      }
+    } else {
+      return comparison;
+    }
+  }
+

INS26 INS40 INS74 INS31 INS31 INS31 INS31 INS43 INS43 INS43 UPD74 MOV74 INS43 UPD74 MOV29 MOV83 MOV39 MOV42 MOV44 INS44 INS8 MOV44 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS42 INS42 INS42 MOV43 MOV43 UPD74 INS42 INS43 UPD74 INS43 INS42 MOV60 INS25 INS21 UPD74 UPD42 UPD74 INS42 INS60 INS60 INS21 MOV21 INS21 INS21 INS21 INS21 INS21 INS41 INS42 MOV43 INS42 INS25 INS25 INS25 INS60 INS25 INS25 INS25 INS25 INS25 INS25 INS25 INS41 INS42 INS43 INS42 INS60 INS25 UPD43 UPD74 MOV74 INS42 UPD43 UPD66 UPD42 UPD66 INS42 UPD74 MOV27 INS8 INS32 MOV43 MOV43 UPD74 INS44 UPD74 INS83 INS39 INS59 INS39 INS59 INS7 INS7 INS7 INS7 INS7 INS7 INS7 INS42 INS27 INS41 INS27 INS41 INS27 INS41 INS43 INS59 INS27 INS8 INS25 INS27 INS8 INS25 INS27 INS8 INS25 INS27 INS8 INS25 INS27 INS8 INS25 INS27 INS8 INS25 INS27 INS8 INS25 INS9 INS42 INS39 INS59 INS27 INS8 INS8 UPD42 MOV43 MOV43 UPD74 UPD42 UPD43 INS21 MOV21 INS42 INS42 INS42 MOV43 INS74 INS42 INS43 INS42 INS34 INS42 INS34 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS52 INS42 INS9 INS42 INS33 INS9 INS32 INS32 INS9 INS42 INS42 INS11 INS42 INS33 INS25 INS38 INS41 INS42 INS33 INS25 INS38 INS41 INS42 INS33 INS25 INS38 INS41 INS42 INS33 INS25 INS38 INS41 INS42 INS33 INS25 INS38 INS41 INS42 INS33 INS25 INS38 INS41 INS42 INS33 INS25 INS38 INS41 INS42 INS32 INS42 INS34 INS60 INS60 INS25 INS41 UPD43 UPD42 INS7 INS43 INS43 UPD74 MOV74 UPD74 MOV74 INS42 INS27 INS36 INS27 INS36 INS27 INS36 INS27 INS36 INS27 INS36 INS27 INS36 INS27 INS36 INS42 INS42 INS42 INS43 INS42 INS27 INS41 INS32 INS9 INS27 INS41 INS32 INS9 INS27 INS41 INS32 INS9 INS27 INS41 INS32 INS9 INS27 INS41 INS32 INS9 INS27 INS41 INS32 INS9 INS27 INS41 INS32 INS9 INS42 INS42 INS40 INS39 INS59 INS39 INS59 INS27 INS8 INS25 INS42 UPD42 INS42 INS14 UPD42 INS42 INS42 UPD43 UPD43 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS40 INS33 INS9 INS42 INS42 INS40 INS40 INS33 INS9 INS42 INS42 INS40 INS40 INS33 INS9 INS42 INS42 INS40 INS40 INS33 INS9 INS42 INS42 INS40 INS40 INS33 INS9 INS42 INS42 INS40 INS40 INS33 INS9 INS42 INS42 INS40 INS40 INS33 INS9 INS42 INS42 INS40 INS42 INS16 INS42 INS16 INS42 INS42 INS41 INS27 INS8 INS8 INS74 UPD42 UPD42 INS36 INS34 INS32 INS36 INS34 INS32 INS36 INS34 INS32 INS36 INS34 INS32 INS36 INS34 INS32 INS36 INS34 INS32 INS36 INS34 INS32 INS27 INS40 INS42 INS27 INS40 INS40 INS38 INS42 INS42 INS41 INS41 UPD43 MOV43 UPD43 MOV43 INS27 INS42 INS42 INS27 UPD42 MOV42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS42 INS33 INS40 INS33 INS34 INS34 INS32 UPD42 UPD42 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS33 INS42 INS42 INS40 DEL39 DEL39 DEL39 DEL74 DEL42 DEL44 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31 DEL40 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL42 DEL42 DEL42 DEL32