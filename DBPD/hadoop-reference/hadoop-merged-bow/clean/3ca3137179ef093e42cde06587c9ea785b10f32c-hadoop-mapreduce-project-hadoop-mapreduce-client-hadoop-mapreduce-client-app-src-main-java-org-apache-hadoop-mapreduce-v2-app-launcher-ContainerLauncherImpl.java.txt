YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.
MAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+import java.util.List;
-import org.apache.hadoop.yarn.api.protocolrecords.StartContainerResponse;
-import org.apache.hadoop.yarn.api.protocolrecords.StopContainerRequest;
+import org.apache.hadoop.yarn.api.protocolrecords.StartContainersRequest;
+import org.apache.hadoop.yarn.api.protocolrecords.StartContainersResponse;
+import org.apache.hadoop.yarn.api.protocolrecords.StopContainersRequest;
+import org.apache.hadoop.yarn.api.protocolrecords.StopContainersResponse;
-import org.apache.hadoop.yarn.util.Records;
-        StartContainerRequest startRequest = Records
-          .newRecord(StartContainerRequest.class);
-        startRequest.setContainerLaunchContext(containerLaunchContext);
-        startRequest.setContainerToken(event.getContainerToken());
-        StartContainerResponse response =
-            proxy.getContainerManagementProtocol().startContainer(startRequest);
-
+        StartContainerRequest startRequest =
+            StartContainerRequest.newInstance(containerLaunchContext,
+              event.getContainerToken());
+        List<StartContainerRequest> list = new ArrayList<StartContainerRequest>();
+        list.add(startRequest);
+        StartContainersRequest requestList = StartContainersRequest.newInstance(list);
+        StartContainersResponse response =
+            proxy.getContainerManagementProtocol().startContainers(requestList);
+        if (response.getFailedRequests() != null
+            && response.getFailedRequests().containsKey(containerID)) {
+          throw response.getFailedRequests().get(containerID).deSerialize();
+        }
-          StopContainerRequest stopRequest = Records
-              .newRecord(StopContainerRequest.class);
-          stopRequest.setContainerId(this.containerID);
-          proxy.getContainerManagementProtocol().stopContainer(stopRequest);
-
+          List<ContainerId> ids = new ArrayList<ContainerId>();
+          ids.add(this.containerID);
+          StopContainersRequest request = StopContainersRequest.newInstance(ids);
+          StopContainersResponse response =
+              proxy.getContainerManagementProtocol().stopContainers(request);
+          if (response.getFailedRequests() != null
+              && response.getFailedRequests().containsKey(this.containerID)) {
+            throw response.getFailedRequests().get(this.containerID)
+              .deSerialize();
+          }
-

MOV26 INS26 INS26 INS26 INS40 INS40 INS40 UPD40 UPD40 UPD40 INS60 INS60 INS21 INS25 MOV43 INS59 INS74 INS59 INS32 INS43 UPD43 INS27 INS8 INS42 MOV32 INS43 MOV43 INS42 INS14 INS42 INS42 INS42 INS42 UPD42 UPD42 INS27 INS32 INS53 MOV60 UPD42 INS42 UPD42 INS42 INS74 UPD42 UPD42 INS42 UPD42 UPD42 INS32 INS33 INS32 UPD42 MOV42 UPD42 MOV42 INS32 INS60 INS60 INS25 INS43 INS43 INS42 INS42 INS42 UPD42 MOV42 INS32 INS42 INS74 INS59 UPD43 INS43 INS59 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS43 INS43 INS42 INS14 UPD42 UPD42 UPD42 UPD42 INS42 INS42 MOV32 INS27 INS32 INS53 INS42 INS42 INS42 INS42 INS74 UPD42 UPD42 INS42 UPD42 UPD42 INS32 INS33 INS32 INS42 INS22 INS32 INS43 INS43 INS42 INS42 INS42 INS42 INS52 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS22 INS42 INS42 INS52 INS42 DEL57 DEL32 DEL21 DEL21 DEL42 DEL43 DEL57 DEL21