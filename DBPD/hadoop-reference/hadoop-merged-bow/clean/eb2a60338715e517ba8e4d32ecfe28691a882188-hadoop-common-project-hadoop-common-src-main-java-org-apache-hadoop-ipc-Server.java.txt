HADOOP-9688. Add globally unique Client ID to RPC requests. Contributed by Suresh Srinivas.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1500843 13f79535-47bb-0310-9956-ffa450edef68

+import static org.apache.hadoop.ipc.RpcConstants.CURRENT_VERSION;
-  
-  /**
-   * The first four bytes of Hadoop RPC connections
-   */
-  public static final ByteBuffer HEADER = ByteBuffer.wrap("hrpc".getBytes());
+
-  
-  // 1 : Introduce ping and server does not throw away RPCs
-  // 3 : Introduce the protocol into the RPC connection header
-  // 4 : Introduced SASL security layer
-  // 5 : Introduced use of {@link ArrayPrimitiveWritable$Internal}
-  //     in ObjectWritable to efficiently transmit arrays of primitives
-  // 6 : Made RPC Request header explicit
-  // 7 : Changed Ipc Connection Header to use Protocol buffers
-  // 8 : SASL server always sends a final response
-  // 9 : Changes to protocol for HADOOP-8990
-  public static final byte CURRENT_VERSION = 9;
+  
+  /**
+   * Returns the clientId from the current RPC request
+   */
+  public static byte[] getClientId() {
+    Call call = CurCall.get();
+    return call != null ? call.clientId : RpcConstants.DUMMY_CLIENT_ID;
+  }
+  
+    private final byte[] clientId;
-      this( id,  param,  connection, RPC.RpcKind.RPC_BUILTIN );    
+      this(id, param, connection, RPC.RpcKind.RPC_BUILTIN,
+          RpcConstants.DUMMY_CLIENT_ID);
-    public Call(int id, Writable param, Connection connection, RPC.RpcKind kind) { 
+
+    public Call(int id, Writable param, Connection connection,
+        RPC.RpcKind kind, byte[] clientId) {
+      this.clientId = clientId;
-        
-          if (!HEADER.equals(dataLengthBuffer) || version != CURRENT_VERSION) {
+          
+          if (!RpcConstants.HEADER.equals(dataLengthBuffer)
+              || version != CURRENT_VERSION) {
-          if ((dataLength == Client.PING_CALL_ID) && (!useWrap)) {
+          if ((dataLength == RpcConstants.PING_CALL_ID) && (!useWrap)) {
-          if (unwrappedDataLength == Client.PING_CALL_ID) {
+          if (unwrappedDataLength == RpcConstants.PING_CALL_ID) {
-      Call call = new Call(header.getCallId(), rpcRequest, this, 
-          ProtoUtil.convert(header.getRpcKind()));
+      Call call = new Call(header.getCallId(), rpcRequest, this,
+          ProtoUtil.convert(header.getRpcKind()), header.getClientId()
+              .toByteArray());
-    headerBuilder.setServerIpcVersionNum(Server.CURRENT_VERSION);
+    headerBuilder.setServerIpcVersionNum(CURRENT_VERSION);

INS26 INS40 INS31 INS29 INS83 INS83 INS5 INS42 INS8 INS23 MOV65 INS39 INS85 INS60 INS41 INS83 INS83 INS5 INS59 INS44 UPD66 INS43 INS59 INS16 INS39 INS85 INS42 INS5 INS42 INS21 UPD42 MOV42 UPD42 MOV42 MOV32 INS27 INS40 INS40 INS40 INS39 INS85 INS7 INS42 UPD42 UPD42 MOV42 INS42 INS33 INS22 INS42 INS52 INS42 INS32 INS32 INS42 INS42 INS42 UPD40 INS40 UPD40 DEL29 DEL83 DEL83 DEL83 DEL43 DEL59 DEL23 DEL83 DEL83 DEL83 DEL39 DEL42 DEL34 DEL59 DEL23 DEL42 DEL45 DEL32 DEL42 DEL40