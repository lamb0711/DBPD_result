MAPREDUCE-6494. Permission issue when running archive-logs tool as different users (rkanter)

+  private static final String FORCE_OPTION = "force";
+  @VisibleForTesting
+  boolean force = false;
+    int exitCode = 1;
+
-      checkFilesAndSeedApps(fs, remoteRootLogDir, suffix);
+      if (prepareWorkingDir(fs, workingDir)) {
-      // Prepare working directory
-      if (fs.exists(workingDir)) {
-        fs.delete(workingDir, true);
+        checkFilesAndSeedApps(fs, remoteRootLogDir, suffix);
+
+        filterAppsByAggregatedStatus();
+
+        checkMaxEligible();
+
+        if (eligibleApplications.isEmpty()) {
+          LOG.info("No eligible applications to process");
+          exitCode = 0;
+        } else {
+          StringBuilder sb =
+              new StringBuilder("Will process the following applications:");
+          for (AppInfo app : eligibleApplications) {
+            sb.append("\n\t").append(app.getAppId());
+          }
+          LOG.info(sb.toString());
+
+          File localScript = File.createTempFile("hadoop-archive-logs-", ".sh");
+          generateScript(localScript, workingDir, remoteRootLogDir, suffix);
+
+          exitCode = runDistributedShell(localScript) ? 0 : 1;
+        }
-      fs.mkdirs(workingDir);
-      fs.setPermission(workingDir,
-          new FsPermission(FsAction.ALL, FsAction.NONE, FsAction.NONE));
+        // Cleanup working directory
+        if (fs.exists(workingDir)) {
+          fs.delete(workingDir, true);
+        }
-
-    filterAppsByAggregatedStatus();
-
-    checkMaxEligible();
-
-    if (eligibleApplications.isEmpty()) {
-      LOG.info("No eligible applications to process");
-      System.exit(0);
-    }
-
-    StringBuilder sb =
-        new StringBuilder("Will process the following applications:");
-    for (AppInfo app : eligibleApplications) {
-      sb.append("\n\t").append(app.getAppId());
-    }
-    LOG.info(sb.toString());
-
-    File localScript = File.createTempFile("hadoop-archive-logs-", ".sh");
-    generateScript(localScript, workingDir, remoteRootLogDir, suffix);
-
-    if (runDistributedShell(localScript)) {
-      return 0;
-    }
-    return -1;
+    return exitCode;
+    Option forceOpt = new Option(FORCE_OPTION, false,
+        "Force recreating the working directory if an existing one is found. " +
+            "This should only be used if you know that another instance is " +
+            "not currently running");
+    opts.addOption(forceOpt);
+      if (commandLine.hasOption(FORCE_OPTION)) {
+        force = true;
+      }
+  boolean prepareWorkingDir(FileSystem fs, Path workingDir) throws IOException {
+    if (fs.exists(workingDir)) {
+      if (force) {
+        LOG.info("Existing Working Dir detected: -" + FORCE_OPTION +
+            " specified -> recreating Working Dir");
+        fs.delete(workingDir, true);
+      } else {
+        LOG.info("Existing Working Dir detected: -" + FORCE_OPTION +
+            " not specified -> exiting");
+        return false;
+      }
+    }
+    fs.mkdirs(workingDir);
+    fs.setPermission(workingDir,
+        new FsPermission(FsAction.ALL, FsAction.ALL, FsAction.NONE));
+    return true;
+  }
+
+  @VisibleForTesting

INS23 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS78 INS39 INS59 INS78 INS39 INS42 INS44 INS44 INS43 INS8 INS42 INS42 INS45 INS42 INS42 INS9 INS60 INS54 INS60 INS21 INS42 INS43 INS42 INS43 INS42 INS42 INS25 MOV21 INS21 INS41 INS39 INS59 INS8 MOV8 INS42 INS43 INS59 INS32 INS42 INS42 INS32 INS8 INS32 INS9 INS42 INS34 MOV21 INS25 INS42 INS42 INS14 INS42 INS42 INS42 INS25 INS42 INS42 INS42 INS25 INS42 INS42 INS42 INS14 INS32 INS8 INS43 INS42 INS9 INS27 INS32 INS8 INS42 INS8 INS8 MOV43 INS40 INS40 INS40 INS42 MOV42 MOV42 MOV21 MOV21 MOV21 MOV25 MOV25 INS42 INS45 INS45 INS45 INS42 INS42 INS42 INS21 INS21 INS21 INS21 INS41 MOV32 MOV8 INS7 INS32 INS32 INS32 INS9 MOV60 MOV70 MOV21 MOV60 MOV21 INS21 INS42 INS9 INS42 INS42 INS27 INS42 INS42 INS42 INS9 INS42 INS42 INS27 INS7 INS7 INS45 INS42 INS45 INS45 INS42 INS45 INS42 INS34 INS42 INS16 MOV32 INS34 INS34 DEL42 DEL42 DEL34 DEL32 DEL34 DEL41 DEL42 DEL40 DEL40 DEL40 DEL14 DEL32 DEL21 DEL8 DEL54 DEL25 DEL34 DEL38