Merge branch 'HDFS-12943' into trunk

+import static org.apache.hadoop.ha.HAServiceProtocol.HAServiceState.ACTIVE;
+import static org.apache.hadoop.ha.HAServiceProtocol.HAServiceState.OBSERVER;
+import org.apache.hadoop.ipc.ObserverRetryOnActiveException;
-  private final BlockManager blockManager;
+  private BlockManager blockManager;
-   * Used when this NN is in standby state to read from the shared edit log.
+   * Used when this NN is in standby or observer state to read from the
+   * shared edit log.
-   * Start services required in standby state 
+   * Start services required in standby or observer state
-  void startStandbyServices(final Configuration conf) throws IOException {
-    LOG.info("Starting services required for standby state");
+  void startStandbyServices(final Configuration conf, boolean isObserver)
+      throws IOException {
+    LOG.info("Starting services required for " +
+        (isObserver ? "observer" : "standby") + " state");
-    
-    if (standbyShouldCheckpoint) {
+    if (!isObserver && standbyShouldCheckpoint) {
-    return HAServiceState.STANDBY == haContext.getState().getServiceState();
+    return HAServiceState.STANDBY == haContext.getState().getServiceState() ||
+        HAServiceState.OBSERVER == haContext.getState().getServiceState();
-                haContext.getState().getServiceState() == HAServiceState.ACTIVE) {
+                (haContext.getState().getServiceState() == ACTIVE ||
+                    haContext.getState().getServiceState() == OBSERVER)) {
+      } else if (haEnabled && haContext != null &&
+          haContext.getState().getServiceState() == OBSERVER) {
+        for (LocatedBlock b : res.blocks.getLocatedBlocks()) {
+          if (b.getLocations() == null || b.getLocations().length == 0) {
+            throw new ObserverRetryOnActiveException("Zero blocklocations for "
+                + srcArg);
+          }
+        }
+  @VisibleForTesting
+  public void setBlockManagerForTesting(BlockManager bm) {
+    this.blockManager = bm;
+  }
+

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS44 INS78 INS83 INS39 INS42 INS44 INS8 INS39 INS42 INS42 INS43 INS42 INS21 UPD66 INS66 UPD66 INS27 INS27 INS42 INS7 INS27 INS38 INS42 MOV27 INS27 INS22 INS42 INS45 INS36 INS45 INS42 INS40 INS32 INS25 INS52 INS42 INS16 INS32 INS42 INS27 INS8 INS42 INS45 INS45 INS42 INS42 INS27 INS27 INS70 INS42 INS27 INS32 INS42 INS44 INS32 INS8 INS42 INS33 INS32 INS42 INS43 INS42 INS40 INS42 INS25 INS42 INS42 INS42 INS27 INS8 INS27 INS27 INS53 INS36 INS32 INS33 INS22 INS34 INS14 INS27 INS42 INS42 INS32 INS42 INS43 INS27 MOV27 INS27 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 DEL83 DEL45 DEL42 DEL40