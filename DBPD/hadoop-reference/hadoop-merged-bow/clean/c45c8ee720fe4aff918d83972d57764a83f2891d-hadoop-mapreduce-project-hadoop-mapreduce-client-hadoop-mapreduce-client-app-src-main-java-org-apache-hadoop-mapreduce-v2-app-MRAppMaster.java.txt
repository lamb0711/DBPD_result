Complete commit of prior merge.

The previous merge accidentally only committed the hdfs project instead of common and MR
as well.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-347@1463203 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.mapreduce.security.TokenCache;
+  private final int maxAppAttempts;
-      long appSubmitTime) {
+      long appSubmitTime, int maxAppAttempts) {
-        new SystemClock(), appSubmitTime);
+        new SystemClock(), appSubmitTime, maxAppAttempts);
-      Clock clock, long appSubmitTime) {
+      Clock clock, long appSubmitTime, int maxAppAttempts) {
+    this.maxAppAttempts = maxAppAttempts;
-    
-    //TODO this is a hack, we really need the RM to inform us when we
-    // are the last one.  This would allow us to configure retries on
-    // a per application basis.
-    int numAMRetries = conf.getInt(YarnConfiguration.RM_AM_MAX_RETRIES, 
-        YarnConfiguration.DEFAULT_RM_AM_MAX_RETRIES);
-    isLastAMRetry = appAttemptID.getAttemptId() >= numAMRetries;
-    LOG.info("AM Retries: " + numAMRetries + 
-        " attempt num: " + appAttemptID.getAttemptId() +
+
+    isLastAMRetry = appAttemptID.getAttemptId() >= maxAppAttempts;
+    LOG.info("The specific max attempts: " + maxAppAttempts +
+        " for application: " + appAttemptID.getApplicationId().getId() +
+        ". Attempt num: " + appAttemptID.getAttemptId() +
-    
-    
+
+        LOG.info("Attempt num: " + appAttemptID.getAttemptId() +
+            " is last retry: " + isLastAMRetry +
+            " because the staging dir doesn't exist.");
+        LOG.info("Attempt num: " + appAttemptID.getAttemptId() +
+            " is last retry: " + isLastAMRetry +
+            " because a commit was started.");
+
+      // If a shuffle secret was not provided by the job client then this app
+      // attempt will generate one.  However that disables recovery if there
+      // are reducers as the shuffle secret would be app attempt specific.
+      boolean shuffleKeyValidForRecovery = (numReduceTasks > 0 &&
+          TokenCache.getShuffleSecretKey(fsTokens) != null);
+
-          && appAttemptID.getAttemptId() > 1) {
+          && shuffleKeyValidForRecovery && appAttemptID.getAttemptId() > 1) {
-            + recoverySupportedByCommitter + " ApplicationAttemptID: "
+            + recoverySupportedByCommitter + " shuffleKeyValidForRecovery: "
+            + shuffleKeyValidForRecovery + " ApplicationAttemptID: "
-  
+
+  protected Credentials getCredentials() {
+    return fsTokens;
+  }
+
+  public Boolean isLastAMRetry() {
+    return isLastAMRetry;
+  }
+
+      String maxAppAttempts =
+          System.getenv(ApplicationConstants.MAX_APP_ATTEMPTS_ENV);
+      validateInputParam(maxAppAttempts,
+          ApplicationConstants.MAX_APP_ATTEMPTS_ENV);
-              Integer.parseInt(nodeHttpPortString), appSubmitTime);
+              Integer.parseInt(nodeHttpPortString), appSubmitTime,
+              Integer.parseInt(maxAppAttempts));

INS26 INS40 INS23 INS31 INS31 INS83 INS83 INS39 INS59 INS44 INS44 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS42 INS39 INS42 INS39 INS42 INS21 INS42 INS41 INS42 INS41 INS42 INS7 INS42 INS42 INS22 INS42 INS60 INS60 INS21 INS52 INS42 UPD42 UPD45 UPD42 INS45 INS32 UPD45 MOV32 INS39 INS59 INS43 INS59 INS32 INS32 INS42 INS21 INS42 INS36 INS42 INS42 INS42 INS32 INS42 INS42 INS40 INS42 INS42 INS32 INS21 INS27 INS42 INS42 INS40 INS32 INS42 INS42 INS27 INS32 INS27 INS27 INS42 INS42 INS42 INS45 MOV32 INS45 INS42 INS45 INS42 INS42 INS27 INS42 INS34 INS32 INS33 INS45 INS42 INS32 INS45 INS32 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 DEL39 DEL42 DEL42 DEL42 DEL40 DEL40 DEL32 DEL59 DEL60