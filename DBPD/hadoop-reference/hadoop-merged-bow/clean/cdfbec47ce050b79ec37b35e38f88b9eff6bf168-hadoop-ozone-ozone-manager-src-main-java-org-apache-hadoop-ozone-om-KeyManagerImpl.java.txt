HDDS-930. Multipart Upload: Abort multiupload request. Contributed by Bharat Viswanadham.

+        Preconditions.checkArgument(args.getMultipartUploadPartNumber() > 0,
+            "PartNumber Should be greater than zero");
-      partName = keyName + clientID;
+      partName = metadataManager.getOzoneKey(volumeName, bucketName, keyName)
+          + clientID;
+        // This can occur when user started uploading part by the time commit
+        // of that part happens, in between the user might have requested
+        // abort multipart upload. If we just throw exception, then the data
+        // will not be garbage collected, so move this part to delete table
+        // and throw error
+        // Move this part to delete table.
+        metadataManager.getDeletedTable().put(partName, keyInfo);
+
+  @Override
+  public void abortMultipartUpload(OmKeyArgs omKeyArgs) throws IOException {
+
+    Preconditions.checkNotNull(omKeyArgs);
+    String volumeName = omKeyArgs.getVolumeName();
+    String bucketName = omKeyArgs.getBucketName();
+    String keyName = omKeyArgs.getKeyName();
+    String uploadID = omKeyArgs.getMultipartUploadID();
+    Preconditions.checkNotNull(uploadID, "uploadID cannot be null");
+    metadataManager.getLock().acquireBucketLock(volumeName, bucketName);
+
+    try {
+      String multipartKey = metadataManager.getMultipartKey(volumeName,
+          bucketName, keyName, uploadID);
+      OmMultipartKeyInfo multipartKeyInfo = metadataManager
+          .getMultipartInfoTable().get(multipartKey);
+      OmKeyInfo openKeyInfo = metadataManager.getOpenKeyTable().get(
+          multipartKey);
+
+      // If there is no entry in openKeyTable, then there is no multipart
+      // upload initiated for this key.
+      if (openKeyInfo == null) {
+        LOG.error("Abort Multipart Upload Failed: volume: " + volumeName +
+            "bucket: " + bucketName + "key: " + keyName + "with error no " +
+            "such uploadID:" + uploadID);
+        throw new OMException("Abort Multipart Upload Failed: volume: " +
+            volumeName + "bucket: " + bucketName + "key: " + keyName,
+            ResultCodes.NO_SUCH_MULTIPART_UPLOAD);
+      } else {
+        // Move all the parts to delete table
+        TreeMap<Integer, PartKeyInfo> partKeyInfoMap = multipartKeyInfo
+            .getPartKeyInfoList();
+        DBStore store = metadataManager.getStore();
+        try (BatchOperation batch = store.initBatchOperation()) {
+          for (Map.Entry<Integer, PartKeyInfo> partKeyInfoEntry : partKeyInfoMap
+              .entrySet()) {
+            PartKeyInfo partKeyInfo = partKeyInfoEntry.getValue();
+            OmKeyInfo currentKeyPartInfo = OmKeyInfo.getFromProtobuf(
+                partKeyInfo.getPartKeyInfo());
+            metadataManager.getDeletedTable().putWithBatch(batch,
+                partKeyInfo.getPartName(), currentKeyPartInfo);
+          }
+          // Finally delete the entry from the multipart info table and open
+          // key table
+          metadataManager.getMultipartInfoTable().deleteWithBatch(batch,
+              multipartKey);
+          metadataManager.getOpenKeyTable().deleteWithBatch(batch,
+              multipartKey);
+          store.commitBatchOperation(batch);
+        }
+      }
+    } catch (OMException ex) {
+      throw ex;
+    } catch (IOException ex) {
+      LOG.error("Abort Multipart Upload Failed: volume: " + volumeName +
+          "bucket: " + bucketName + "key: " + keyName, ex);
+      throw new OMException(ex.getMessage(), ResultCodes
+          .COMPLETE_MULTIPART_UPLOAD_FAILED);
+    } finally {
+      metadataManager.getLock().releaseBucketLock(volumeName, bucketName);
+    }
+
+  }
+

INS31 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS42 INS43 INS42 INS42 INS21 INS60 INS60 INS60 INS60 INS21 INS21 INS54 INS42 INS32 INS43 INS59 INS43 INS59 INS43 INS59 INS43 INS59 INS32 INS32 INS8 INS12 INS12 INS8 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS60 INS60 INS60 INS25 INS44 INS8 INS44 INS8 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS43 INS59 INS43 INS59 INS27 INS8 INS8 INS43 INS42 INS53 INS43 INS42 INS21 INS53 INS32 INS21 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS53 INS60 INS60 INS54 INS42 INS42 INS42 INS32 INS14 INS32 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS14 INS74 INS59 INS43 INS59 INS58 INS8 INS42 INS42 INS27 INS42 INS43 INS32 INS40 INS42 INS42 INS42 INS42 INS27 INS45 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS43 INS27 INS40 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS32 INS43 INS59 INS70 INS21 INS21 INS21 INS45 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS32 INS34 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS45 INS42 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS44 INS32 INS8 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS60 INS60 INS21 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS43 INS59 INS43 INS59 INS32 INS42 INS42 INS42 INS42 INS40 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL42