HDDS-1586. Allow Ozone RPC client to read with topology awareness. Contributed by Sammi Chen.

+import org.apache.hadoop.hdds.protocol.datanode.proto.ContainerProtos;
- * A Client for the storageContainer protocol.
+ * A Client for the storageContainer protocol for read object data.
+  private final boolean topologyAwareRead;
+    this.topologyAwareRead = Boolean.parseBoolean(config.get(
+        ScmConfigKeys.DFS_NETWORK_TOPOLOGY_AWARE_READ_ENABLED,
+        ScmConfigKeys.DFS_NETWORK_TOPOLOGY_AWARE_READ_ENABLED_DEFAULT));
-    // leader by default is the 1st datanode in the datanode list of pipleline
-    DatanodeDetails dn = this.pipeline.getFirstNode();
-    // just make a connection to the 1st datanode at the beginning
+    // connect to the closest node, if closest node doesn't exist, delegate to
+    // first node, which is usually the leader in the pipeline.
+    DatanodeDetails dn = this.pipeline.getClosestNode();
+    // just make a connection to the picked datanode at the beginning
-    // leader by default is the 1st datanode in the datanode list of pipleline
-    DatanodeDetails dn = this.pipeline.getFirstNode();
-    // just make a connection to the 1st datanode at the beginning
+    // connect to the closest node, if closest node doesn't exist, delegate to
+    // first node, which is usually the leader in the pipeline.
+    DatanodeDetails dn;
+    dn = this.pipeline.getClosestNode();
+    // just make a connection to the picked datanode at the beginning
-    LOG.debug("Connecting to server Port : " + dn.getIpAddress());
+    LOG.debug("Nodes in pipeline : {}", pipeline.getNodes().toString());
+    LOG.debug("Connecting to server : {}", dn.getIpAddress());
-    for (DatanodeDetails dn : pipeline.getNodes()) {
+    List<DatanodeDetails> datanodeList;
+    if ((request.getCmdType() == ContainerProtos.Type.ReadChunk ||
+        request.getCmdType() == ContainerProtos.Type.GetSmallFile) &&
+        topologyAwareRead) {
+      datanodeList = pipeline.getNodesInOrder();
+    } else {
+      datanodeList = pipeline.getNodes();
+    }
+    for (DatanodeDetails dn : datanodeList) {
+    LOG.debug("Send command {} to datanode {}", request.getCmdType().toString(),
+        dn.getNetworkFullPath());

INS26 INS40 INS23 INS83 INS83 INS39 INS59 UPD66 INS42 INS21 INS21 INS21 INS60 INS25 INS21 INS7 MOV43 MOV43 INS7 INS32 INS74 INS59 INS27 INS8 INS8 INS42 INS32 INS22 INS32 INS32 INS42 MOV32 INS42 INS42 INS45 INS32 INS45 MOV32 INS43 INS43 INS42 INS36 INS42 INS21 INS21 INS42 INS42 INS45 INS32 INS32 INS52 INS42 INS42 INS42 INS32 MOV22 INS42 UPD42 INS32 INS42 INS42 INS42 INS27 INS7 INS7 INS32 INS42 INS42 INS42 INS42 INS42 INS40 INS40 INS42 INS42 INS27 INS27 INS42 INS32 INS42 MOV32 INS42 INS42 INS32 INS40 INS32 INS40 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL32 DEL45 DEL27