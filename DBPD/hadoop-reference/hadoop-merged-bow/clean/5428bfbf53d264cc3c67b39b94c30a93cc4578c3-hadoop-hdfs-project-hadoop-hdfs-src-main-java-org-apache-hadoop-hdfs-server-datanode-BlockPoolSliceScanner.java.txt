HDFS-4465. Optimize datanode ReplicasMap and ReplicaInfo. Contributed by Aaron T. Myers.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1499659 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Map;
+import org.apache.hadoop.hdfs.util.GSet;
+import org.apache.hadoop.hdfs.util.LightWeightGSet;
+import org.apache.hadoop.hdfs.util.LightWeightGSet.LinkedElement;
-  private final Map<Block, BlockScanInfo> blockMap
-      = new HashMap<Block, BlockScanInfo>();
+  private final GSet<Block, BlockScanInfo> blockMap
+      = new LightWeightGSet<Block, BlockScanInfo>(
+          LightWeightGSet.computeCapacity(0.5, "BlockMap"));
-  
-  static class BlockScanInfo {
+
+  // Extend Block because in the DN process there's a 1-to-1 correspondence of
+  // BlockScanInfo to Block instances, so by extending rather than containing
+  // Block, we can save a bit of Object overhead (about 24 bytes per block
+  // replica.)
+  static class BlockScanInfo extends Block
+      implements LightWeightGSet.LinkedElement {
+
-    final Block block;
+    private LinkedElement next;
-      this.block = block;
+      super(block);
-      return block.hashCode();
+      return super.hashCode();
-      return block.equals(((BlockScanInfo)that).block);
+      return super.equals(that);
+
+    @Override
+    public void setNext(LinkedElement next) {
+      this.next = next;
+    }
+
+    @Override
+    public LinkedElement getNext() {
+      return next;
+    }
-    blockMap.put(info.block, info);
+    blockMap.put(info);
-      updateBytesToScan(info.block.getNumBytes(), info.lastScanTime);
+      updateBytesToScan(info.getNumBytes(), info.lastScanTime);
-    blockMap.remove(info.block);
+    blockMap.remove(info);
-      updateBytesToScan(-info.block.getNumBytes(), info.lastScanTime);
+      updateBytesToScan(-info.getNumBytes(), info.lastScanTime);
-      long blockId = blockInfoSet.first().block.getBlockId();
+      long blockId = blockInfoSet.first().getBlockId();
-        block = blockInfoSet.first().block;
+        block = blockInfoSet.first();
-                  updateBytesLeft(-info.block.getNumBytes());
+                  updateBytesLeft(-info.getNumBytes());
-                                    "%-15d %s%n", info.block, 
+                                    "%-15d %s%n", info,

MOV26 INS26 INS26 UPD40 INS40 INS40 MOV23 UPD74 MOV43 INS43 INS31 INS31 UPD43 INS40 UPD83 INS43 INS78 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS43 INS42 INS8 UPD42 UPD74 INS32 INS42 UPD42 INS46 INS42 INS43 INS42 INS21 INS42 INS42 INS41 UPD43 INS42 INS42 INS34 INS45 INS42 INS48 INS48 INS42 INS7 INS42 INS42 UPD42 INS42 INS42 INS42 INS22 INS42 INS52 INS42 INS42 MOV32 INS42 MOV32 INS42 INS42 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL43 DEL42 DEL11 DEL36 DEL42 DEL22 DEL32 DEL40 DEL40 DEL40 DEL40 DEL42 DEL22 DEL42 DEL22 DEL40 DEL40