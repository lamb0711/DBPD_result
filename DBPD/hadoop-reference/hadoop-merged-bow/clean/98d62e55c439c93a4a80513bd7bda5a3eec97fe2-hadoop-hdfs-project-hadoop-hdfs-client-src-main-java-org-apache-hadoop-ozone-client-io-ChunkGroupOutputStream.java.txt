Revert "HDFS-12794. Ozone: Parallelize ChunkOutputSream Writes to container. Contributed by Shashikant Banerjee."

This reverts commit 6ce5ec676164b84a9e2f8dc65b5f2199a141506d.

-import com.google.common.primitives.Ints;
-import org.apache.commons.lang.StringUtils;
-import org.apache.hadoop.ozone.OzoneConsts;
-import static org.apache.hadoop.ozone.OzoneConfigKeys
-    .OZONE_OUTPUT_STREAM_BUFFER_SIZE_DEFAULT;
-
-  private final long streamBufferSize;
-    streamBufferSize = OZONE_OUTPUT_STREAM_BUFFER_SIZE_DEFAULT * OzoneConsts.MB;
-  /**
-   * Chunkoutput stream, making this package visible since this can be
-   * created only via builder.
-   * @param handler  - Open Key state.
-   * @param xceiverClientManager - Communication Manager.
-   * @param scmClient - SCM protocol Client.
-   * @param ksmClient - KSM Protocol client
-   * @param chunkSize - Chunk Size - I/O
-   * @param requestId - Seed for trace ID generation.
-   * @param factor - Replication factor
-   * @param type - Replication Type - RATIS/Standalone etc.
-   * @param maxBufferSize - Maximum stream buffer Size.
-   * @throws IOException - Throws this exception if there is an error.
-   */
-  ChunkGroupOutputStream(
+  public ChunkGroupOutputStream(
-      ReplicationType type, long maxBufferSize) throws IOException {
+      ReplicationType type) throws IOException {
-    this.streamBufferSize = maxBufferSize;
-        chunkSize, subKeyInfo.getLength(), this.streamBufferSize));
+        chunkSize, subKeyInfo.getLength()));
-    private long streamBufferSize;
-    public Builder setStreamBufferSize(long blockSize) {
-      this.streamBufferSize = blockSize;
-      return this;
-    }
-
-      Preconditions.checkNotNull(openHandler);
-      Preconditions.checkNotNull(xceiverManager);
-      Preconditions.checkNotNull(scmClient);
-      Preconditions.checkNotNull(ksmClient);
-      Preconditions.checkState(chunkSize > 0);
-      Preconditions.checkState(StringUtils.isNotEmpty(requestID));
-      Preconditions
-          .checkState(streamBufferSize > 0 && streamBufferSize > chunkSize);
-
-          ksmClient, chunkSize, requestID, factor, type, streamBufferSize);
+          ksmClient, chunkSize, requestID, factor, type);
-    private long streamBufferSize; // Max block size.
-        long length, long streamBufferSize) {
+        long length) {
-      this.streamBufferSize = streamBufferSize;
-      this.streamBufferSize =
-          OZONE_OUTPUT_STREAM_BUFFER_SIZE_DEFAULT * OzoneConsts.MB;
-            requestId, chunkSize, Ints.checkedCast(streamBufferSize));
+            requestId, chunkSize);

INS83 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL40 DEL26 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23 DEL42 DEL42 DEL40 DEL27 DEL7 DEL21 DEL66 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL65 DEL29 DEL39 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL83 DEL39 DEL42 DEL59 DEL23 DEL83 DEL42 DEL43 DEL42 DEL39 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL41 DEL8 DEL31 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL34 DEL27 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL42 DEL42 DEL34 DEL27 DEL42 DEL42 DEL27 DEL27 DEL32 DEL21 DEL42 DEL83 DEL39 DEL42 DEL59 DEL23 DEL39 DEL42 DEL44 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21 DEL52 DEL42 DEL22 DEL42 DEL40 DEL27 DEL7 DEL21 DEL42 DEL42 DEL42 DEL32