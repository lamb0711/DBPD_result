HDFS-13478. RBF: Disabled Nameservice store API. Contributed by Inigo Goiri.

+import java.util.Set;
+import org.apache.hadoop.hdfs.server.federation.store.DisabledNameserviceStore;
+import org.apache.hadoop.hdfs.server.federation.store.protocol.DisableNameserviceRequest;
+import org.apache.hadoop.hdfs.server.federation.store.protocol.DisableNameserviceResponse;
+import org.apache.hadoop.hdfs.server.federation.store.protocol.EnableNameserviceRequest;
+import org.apache.hadoop.hdfs.server.federation.store.protocol.EnableNameserviceResponse;
+import org.apache.hadoop.hdfs.server.federation.store.protocol.GetDisabledNameservicesRequest;
+import org.apache.hadoop.hdfs.server.federation.store.protocol.GetDisabledNameservicesResponse;
-    implements MountTableManager, RouterStateManager {
+    implements MountTableManager, RouterStateManager, NameserviceManager {
+  private DisabledNameserviceStore disabledStore;
+
+  private DisabledNameserviceStore getDisabledNameserviceStore()
+      throws IOException {
+    if (this.disabledStore == null) {
+      this.disabledStore = router.getStateStore().getRegisteredRecordStore(
+          DisabledNameserviceStore.class);
+      if (this.disabledStore == null) {
+        throw new IOException(
+            "Disabled Nameservice state store is not available.");
+      }
+    }
+    return this.disabledStore;
+  }
+
+  @Override
+  public DisableNameserviceResponse disableNameservice(
+      DisableNameserviceRequest request) throws IOException {
+    // TODO check permissions
+    String nsId = request.getNameServiceId();
+    // TODO check that the name service exists
+    boolean success = getDisabledNameserviceStore().disableNameservice(nsId);
+    return DisableNameserviceResponse.newInstance(success);
+  }
+
+  @Override
+  public EnableNameserviceResponse enableNameservice(
+      EnableNameserviceRequest request) throws IOException {
+    // TODO check permissions
+    String nsId = request.getNameServiceId();
+    // TODO check that the name service exists
+    boolean success = getDisabledNameserviceStore().enableNameservice(nsId);
+    return EnableNameserviceResponse.newInstance(success);
+  }
+
+  @Override
+  public GetDisabledNameservicesResponse getDisabledNameservices(
+      GetDisabledNameservicesRequest request) throws IOException {
+    // TODO check permissions
+    Set<String> nsIds = getDisabledNameserviceStore().getDisabledNameservices();
+    return GetDisabledNameservicesResponse.newInstance(nsIds);
+  }
+

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS43 INS23 INS31 INS31 INS31 INS31 INS42 INS83 INS43 INS59 INS83 INS43 INS42 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS78 INS83 INS43 INS42 INS44 INS43 INS8 INS42 INS42 INS42 INS42 INS25 INS41 INS42 INS42 INS43 INS42 INS42 INS60 INS60 INS41 INS42 INS42 INS43 INS42 INS42 INS60 INS60 INS41 INS42 INS42 INS43 INS42 INS42 INS60 INS41 INS27 INS8 INS22 INS42 INS43 INS59 INS39 INS59 INS32 INS42 INS43 INS59 INS39 INS59 INS32 INS42 INS74 INS59 INS32 INS22 INS33 INS21 INS25 INS52 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS52 INS42 INS7 INS27 INS8 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS22 INS32 INS22 INS33 INS53 INS42 INS42 INS42 INS52 INS42 INS32 INS42 INS57 INS52 INS42 INS14 INS42 INS42 INS43 INS43 INS45 INS42 INS42