Merge trunk into HA branch.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208644 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
-import org.apache.hadoop.yarn.conf.YarnConfiguration;
-      List<Path> localDirs) throws IOException, InterruptedException {
+      List<String> localDirs, List<String> logDirs)
+      throws IOException, InterruptedException {
-        new ContainerLocalizer(this.lfs, user, appId, locId,
-            localDirs, RecordFactoryProvider.getRecordFactory(getConf()));
+        new ContainerLocalizer(lfs, user, appId, locId, getPaths(localDirs),
+            RecordFactoryProvider.getRecordFactory(getConf()));
-    createAppLogDirs(appId);
+    createAppLogDirs(appId, logDirs);
-      String userName, String appId, Path containerWorkDir)
-      throws IOException {
+      String userName, String appId, Path containerWorkDir,
+      List<String> localDirs, List<String> logDirs) throws IOException {
-    String[] sLocalDirs = getConf().getStrings(
-        YarnConfiguration.NM_LOCAL_DIRS,
-        YarnConfiguration.DEFAULT_NM_LOCAL_DIRS);
-    for (String sLocalDir : sLocalDirs) {
+    for (String sLocalDir : localDirs) {
-    createContainerLogDirs(appIdStr, containerIdStr);
+    createContainerLogDirs(appIdStr, containerIdStr, logDirs);
-  private Path getFirstApplicationDir(List<Path> localDirs, String user,
+  private Path getFirstApplicationDir(List<String> localDirs, String user,
-    return getApplicationDir(localDirs.get(0), user, appId);
+    return getApplicationDir(new Path(localDirs.get(0)), user, appId);
-  private void createUserLocalDirs(List<Path> localDirs, String user)
+  private void createUserLocalDirs(List<String> localDirs, String user)
-    for (Path localDir : localDirs) {
+    for (String localDir : localDirs) {
-        lfs.mkdir(getUserCacheDir(localDir, user), userperms, true);
+        lfs.mkdir(getUserCacheDir(new Path(localDir), user), userperms, true);
-  private void createUserCacheDirs(List<Path> localDirs, String user)
+  private void createUserCacheDirs(List<String> localDirs, String user)
-    for (Path localDir : localDirs) {
+    for (String localDir : localDirs) {
-      final Path appDir = getAppcacheDir(localDir, user);
+      Path localDirPath = new Path(localDir);
+      final Path appDir = getAppcacheDir(localDirPath, user);
-      final Path distDir = getFileCacheDir(localDir, user);
+      final Path distDir = getFileCacheDir(localDirPath, user);
-  private void createAppDirs(List<Path> localDirs, String user, String appId)
+  private void createAppDirs(List<String> localDirs, String user, String appId)
-    for (Path localDir : localDirs) {
-      Path fullAppDir = getApplicationDir(localDir, user, appId);
+    for (String localDir : localDirs) {
+      Path fullAppDir = getApplicationDir(new Path(localDir), user, appId);
-  private void createAppLogDirs(String appId)
+  private void createAppLogDirs(String appId, List<String> logDirs)
-    String[] rootLogDirs =
-        getConf()
-            .getStrings(YarnConfiguration.NM_LOG_DIRS, YarnConfiguration.DEFAULT_NM_LOG_DIRS);
-    
+
-    for (String rootLogDir : rootLogDirs) {
+    for (String rootLogDir : logDirs) {
-  private void createContainerLogDirs(String appId, String containerId)
-      throws IOException {
-    String[] rootLogDirs =
-        getConf()
-            .getStrings(YarnConfiguration.NM_LOG_DIRS, YarnConfiguration.DEFAULT_NM_LOG_DIRS);
-    
+  private void createContainerLogDirs(String appId, String containerId,
+      List<String> logDirs) throws IOException {
+
-    for (String rootLogDir : rootLogDirs) {
+    for (String rootLogDir : logDirs) {
+
+  /**
+   * @return the list of paths of given local directories
+   */
+  private static List<Path> getPaths(List<String> dirs) {
+    List<Path> paths = new ArrayList<Path>(dirs.size());
+    for (int i = 0; i < dirs.size(); i++) {
+      paths.add(new Path(dirs.get(i)));
+    }
+    return paths;
+  }

MOV26 UPD40 INS31 INS44 INS44 INS44 INS43 INS44 INS44 INS29 INS83 INS83 MOV74 INS42 INS44 INS8 UPD74 INS74 INS42 INS74 INS42 INS74 INS42 INS42 UPD74 UPD74 INS74 INS74 INS74 INS42 INS74 INS42 INS65 INS74 INS42 INS60 INS24 INS41 UPD43 INS43 INS43 INS43 INS43 INS43 INS43 UPD42 UPD43 UPD43 INS43 INS43 INS43 INS43 INS43 INS43 UPD42 INS43 INS43 UPD42 INS66 INS43 INS43 MOV74 INS59 INS58 INS27 INS37 INS8 INS42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 INS14 UPD42 MOV43 INS42 INS42 MOV43 INS60 INS42 INS42 MOV43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS39 INS59 INS42 INS32 INS42 INS21 INS42 INS32 MOV43 MOV32 MOV43 INS59 MOV43 MOV43 INS74 INS32 INS42 INS34 INS42 INS42 INS32 INS42 INS42 INS42 INS14 INS43 INS43 INS42 INS42 INS42 INS42 INS14 INS43 INS42 UPD42 UPD42 INS14 INS42 INS42 INS43 INS32 INS42 MOV43 INS42 INS42 INS42 INS42 INS42 INS14 MOV43 INS42 DEL52 DEL42 DEL22 DEL42 DEL85 DEL5 DEL42 DEL42 DEL32 DEL42 DEL40 DEL40 DEL32 DEL59 DEL60 DEL42 DEL42 DEL85 DEL5 DEL42 DEL42 DEL32 DEL42 DEL40 DEL40 DEL32 DEL59 DEL60 DEL85 DEL5 DEL42 DEL42 DEL32 DEL42 DEL40 DEL40 DEL32 DEL59 DEL60