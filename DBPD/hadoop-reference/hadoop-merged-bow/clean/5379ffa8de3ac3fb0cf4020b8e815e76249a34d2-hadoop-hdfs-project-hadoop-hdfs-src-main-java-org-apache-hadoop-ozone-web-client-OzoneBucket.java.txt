HDFS-12030. Ozone: CLI: support infoKey command. Contributed by Yiqun Lin.

+
+  /**
+   * Get info of the specified key.
+   */
+  public OzoneKey getKeyInfo(String keyName) throws OzoneException {
+    if ((keyName == null) || keyName.isEmpty()) {
+      throw new OzoneRestClientException(
+          "Unable to get key info, key name is null or empty");
+    }
+
+    HttpGet getRequest = null;
+    try (CloseableHttpClient httpClient = OzoneClientUtils.newHttpClient()) {
+      OzoneRestClient client = getVolume().getClient();
+      URIBuilder builder = new URIBuilder(volume.getClient().getEndPointURI());
+      builder
+          .setPath("/" + getVolume().getVolumeName() + "/" + getBucketName()
+              + "/" + keyName)
+          .setParameter(Header.OZONE_LIST_QUERY_TAG,
+              Header.OZONE_LIST_QUERY_KEY)
+          .build();
+
+      getRequest = client.getHttpGet(builder.toString());
+      return executeGetKeyInfo(getRequest, httpClient);
+    } catch (IOException | URISyntaxException e) {
+      throw new OzoneRestClientException(e.getMessage());
+    } finally {
+      OzoneClientUtils.releaseConnection(getRequest);
+    }
+  }
+
+  /**
+   * Execute get Key info.
+   *
+   * @param getRequest - HttpGet
+   * @param httpClient - HttpClient
+   * @return List<OzoneKey>
+   * @throws IOException
+   * @throws OzoneException
+   */
+  private OzoneKey executeGetKeyInfo(HttpGet getRequest,
+      CloseableHttpClient httpClient) throws IOException, OzoneException {
+    HttpEntity entity = null;
+    try {
+      HttpResponse response = httpClient.execute(getRequest);
+      int errorCode = response.getStatusLine().getStatusCode();
+      entity = response.getEntity();
+      if (entity == null) {
+        throw new OzoneRestClientException("Unexpected null in http payload");
+      }
+
+      if (errorCode == HTTP_OK) {
+        OzoneKey key = new OzoneKey(
+            KeyInfo.parse(EntityUtils.toString(entity)));
+        return key;
+      }
+      throw OzoneException.parse(EntityUtils.toString(entity));
+    } finally {
+      if (entity != null) {
+        EntityUtils.consumeQuietly(entity);
+      }
+    }
+  }

INS31 INS31 INS29 INS83 INS43 INS42 INS44 INS43 INS8 INS29 INS83 INS43 INS42 INS44 INS44 INS43 INS43 INS8 INS65 INS42 INS43 INS42 INS42 INS25 INS60 INS54 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS43 INS42 INS42 INS42 INS60 INS54 INS66 INS42 INS27 INS8 INS43 INS59 INS58 INS8 INS12 INS8 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS42 INS43 INS59 INS8 INS8 INS36 INS32 INS53 INS42 INS42 INS33 INS43 INS59 INS60 INS60 INS21 INS21 INS41 INS44 INS8 INS21 INS42 INS42 INS33 INS60 INS60 INS21 INS25 INS25 INS53 INS25 INS27 INS42 INS42 INS14 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS32 INS7 INS32 INS84 INS42 INS53 INS32 INS43 INS59 INS39 INS59 INS7 INS27 INS8 INS27 INS8 INS32 INS27 INS8 INS42 INS33 INS43 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS14 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS43 INS14 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS42 INS33 INS53 INS42 INS42 INS60 INS41 INS42 INS42 INS32 INS42 INS33 INS21 INS42 INS32 INS42 INS43 INS32 INS32 INS42 INS40 INS40 INS42 INS42 INS32 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS14 INS43 INS59 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS45 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS45 INS32 INS45 INS32 INS45 INS42 INS42 INS43 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42