Merging r1536572 from trunk to branch HDFS-2832

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1536889 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.List;
+
+import com.google.common.base.Preconditions;
+import com.google.common.collect.Lists;
+
- * block, whether it is corrupt, security token, etc).
+ * block, whether it is corrupt, a location is cached in memory,
+ * security token, etc).
+  /**
+   * List of cached datanode locations
+   */
+  private DatanodeInfo[] cachedLocs;
+
+  // Used when there are no locations
+  private static final DatanodeInfo[] EMPTY_LOCS = new DatanodeInfo[0];
-    this(b, locs, -1, false); // startOffset is unknown
+    this(b, locs, -1); // startOffset is unknown
-    this(b, locs, null, null, startOffset, corrupt);
+    this(b, locs, null, null, startOffset, corrupt, EMPTY_LOCS);
-        startOffset, corrupt); // startOffset is unknown
+        startOffset, corrupt, EMPTY_LOCS); // startOffset is unknown
-                      boolean corrupt) {
+                      boolean corrupt, DatanodeInfo[] cachedLocs) {
-      this.locs = new DatanodeInfo[0];
+      this.locs = EMPTY_LOCS;
+    Preconditions.checkArgument(cachedLocs != null,
+        "cachedLocs should not be null, use a different constructor");
+    if (cachedLocs.length == 0) {
+      this.cachedLocs = EMPTY_LOCS;
+    } else {
+      this.cachedLocs = cachedLocs;
+    }
+  /**
+   * Add a the location of a cached replica of the block.
+   * 
+   * @param loc of datanode with the cached replica
+   */
+  public void addCachedLoc(DatanodeInfo loc) {
+    List<DatanodeInfo> cachedList = Lists.newArrayList(cachedLocs);
+    if (cachedList.contains(loc)) {
+      return;
+    }
+    // Try to re-use a DatanodeInfo already in loc
+    for (int i=0; i<locs.length; i++) {
+      if (locs[i].equals(loc)) {
+        cachedList.add(locs[i]);
+        cachedLocs = cachedList.toArray(cachedLocs);
+        return;
+      }
+    }
+    // Not present in loc, add it and go
+    cachedList.add(loc);
+    cachedLocs = cachedList.toArray(cachedLocs);
+  }
+
+  /**
+   * @return Datanodes with a cached block replica
+   */
+  public DatanodeInfo[] getCachedLocations() {
+    return cachedLocs;
+  }
+
+

INS26 INS26 INS26 INS40 INS40 INS40 INS23 INS23 INS31 INS31 INS29 INS83 INS5 INS59 INS83 INS83 INS83 INS5 INS59 INS44 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS5 INS42 INS8 INS66 UPD66 INS65 INS43 INS85 INS42 INS43 INS85 INS42 MOV3 INS5 INS42 INS21 INS25 INS65 INS65 INS43 INS42 INS60 INS25 INS24 INS21 INS21 INS65 INS43 INS85 INS41 INS66 INS42 INS42 INS42 INS42 INS43 INS85 INS32 INS27 INS8 INS8 INS66 INS42 INS66 INS42 INS74 INS59 INS32 INS8 INS58 INS27 INS37 INS8 INS32 INS7 INS66 INS42 INS42 INS42 INS42 INS42 INS27 INS45 INS40 INS34 INS21 INS21 INS43 INS43 INS42 INS32 INS42 INS42 INS42 INS41 INS39 INS59 INS42 INS40 INS42 INS25 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS7 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS32 INS8 INS42 INS42 INS42 INS42 INS22 INS42 INS22 INS42 INS2 INS42 INS42 INS21 INS21 INS41 INS52 INS42 INS52 INS42 INS42 INS42 INS32 INS7 INS42 INS42 INS2 INS42 INS32 INS42 INS42 INS42 INS42 INS42 DEL9