YARN-8175. Add support for Node Labels in SLS. Contributed by Abhishek Modi.

-import java.util.HashMap;
+import org.apache.hadoop.yarn.api.records.NodeLabel;
+import org.apache.hadoop.yarn.client.util.YarnClientUtils;
+import org.apache.hadoop.yarn.sls.SLSRunner.NodeDetails;
+  private static final String LABEL_FORMAT_ERR_MSG =
+      "Input format for adding node-labels is not correct, it should be "
+          + "labelName1[(exclusive=true/false)],labelName2[] ..";
+
-  public static Set<String> parseNodesFromRumenTrace(String jobTrace)
-          throws IOException {
-    Set<String> nodeSet = new HashSet<String>();
+  public static Set<NodeDetails> parseNodesFromRumenTrace(
+      String jobTrace) throws IOException {
+    Set<NodeDetails> nodeSet = new HashSet<>();
-          nodeSet.add(taskAttempt.getHostName().getValue());
+          nodeSet.add(new NodeDetails(
+              taskAttempt.getHostName().getValue()));
-          nodeSet.add(taskAttempt.getHostName().getValue());
+          nodeSet.add(new NodeDetails(
+              taskAttempt.getHostName().getValue()));
-  public static Set<String> parseNodesFromSLSTrace(String jobTrace)
-          throws IOException {
-    Set<String> nodeSet = new HashSet<>();
+  public static Set<NodeDetails> parseNodesFromSLSTrace(
+      String jobTrace) throws IOException {
+    Set<NodeDetails> nodeSet = new HashSet<>();
-  private static void addNodes(Set<String> nodeSet, Map jsonEntry) {
+  private static void addNodes(Set<NodeDetails> nodeSet,
+      Map jsonEntry) {
-          nodeSet.add(hostname);
+          nodeSet.add(new NodeDetails(hostname));
+   * sample input: label1(exclusive=true),label2(exclusive=false),label3
-  public static Map<String, Resource> parseNodesFromNodeFile(String nodeFile,
-      Resource nmDefaultResource) throws IOException {
-    Map<String, Resource> nodeResourceMap = new HashMap<>();
+  public static Set<NodeDetails> parseNodesFromNodeFile(
+      String nodeFile, Resource nmDefaultResource) throws IOException {
+    Set<NodeDetails> nodeSet = new HashSet<>();
+          NodeDetails nodeDetails = new NodeDetails(
+              rack + "/" + jsonNode.get("node"));
-          nodeResourceMap.put(rack + "/" + jsonNode.get("node"), nodeResource);
+          nodeDetails.setNodeResource(nodeResource);
+          if (jsonNode.get("labels") != null) {
+            Set<NodeLabel> nodeLabels =  new HashSet<>(
+                YarnClientUtils.buildNodeLabelsFromStr(
+                    jsonNode.get("labels").toString()));
+            nodeDetails.setLabels(nodeLabels);
+          }
+          nodeSet.add(nodeDetails);
-    return nodeResourceMap;
+    return nodeSet;
-  public static Set<? extends String> generateNodes(int numNodes,
+  public static Set<NodeDetails> generateNodes(int numNodes,
-    Set<String> nodeSet = new HashSet<>();
+    Set<NodeDetails> nodeSet = new HashSet<>();
-      nodeSet.add("/rack" + i % numRacks + "/node" + i);
+      nodeSet.add(new NodeDetails(
+          "/rack" + i % numRacks + "/node" + i));

MOV26 INS26 INS26 INS40 UPD40 INS40 INS23 INS83 INS83 INS83 MOV43 INS59 UPD74 MOV74 UPD74 MOV74 UPD74 UPD74 INS42 INS27 UPD43 UPD43 UPD74 UPD43 UPD43 INS43 INS45 INS45 UPD42 UPD74 MOV74 UPD42 UPD74 MOV74 UPD43 INS66 UPD42 UPD42 UPD74 UPD42 UPD42 MOV42 UPD74 INS43 UPD43 UPD42 UPD43 UPD43 UPD42 UPD43 INS42 INS74 UPD42 UPD42 UPD42 UPD74 UPD42 INS43 UPD43 INS14 INS42 UPD42 INS43 MOV27 INS60 INS25 INS21 INS42 INS43 INS59 INS27 INS8 INS32 INS14 INS14 INS14 INS42 INS42 INS14 UPD42 UPD42 INS32 INS33 INS60 INS21 INS42 INS42 INS42 INS43 MOV32 INS43 MOV32 INS43 INS42 INS43 MOV27 INS42 INS42 INS45 INS74 INS59 INS32 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS14 INS42 INS42 INS42 INS42 INS42 UPD74 MOV74 INS32 INS42 INS42 INS32 INS32 INS42 INS42 INS42 INS45 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL43 DEL76