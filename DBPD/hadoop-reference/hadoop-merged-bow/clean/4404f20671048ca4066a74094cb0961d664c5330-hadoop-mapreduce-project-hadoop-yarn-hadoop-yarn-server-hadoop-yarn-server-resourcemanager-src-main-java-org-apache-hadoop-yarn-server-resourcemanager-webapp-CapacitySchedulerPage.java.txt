MAPREDUCE-3326. Added detailed information about queue's to the CapacityScheduler web-ui. Contributed by Jason Lowe. 


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227788 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.CapacitySchedulerLeafQueueInfo;
+import org.apache.hadoop.yarn.webapp.ResponseInfo;
+import org.apache.hadoop.yarn.webapp.view.InfoBlock;
-  static class Parent {
-    CSQueue queue;
+  static class CSQInfo {
+    CapacitySchedulerInfo csinfo;
+    CapacitySchedulerQueueInfo qinfo;
+  }
+
+  static class LeafQueueInfoBlock extends HtmlBlock {
+    final CapacitySchedulerLeafQueueInfo lqinfo;
+
+    @Inject LeafQueueInfoBlock(ViewContext ctx, CSQInfo info) {
+      super(ctx);
+      lqinfo = (CapacitySchedulerLeafQueueInfo) info.qinfo;
+    }
+
+    @Override
+    protected void render(Block html) {
+      ResponseInfo ri = info("\'" + lqinfo.getQueuePath().substring(5) + "\' Queue Status").
+          _("Queue State:", lqinfo.getQueueState()).
+          _("Capacity:", percent(lqinfo.getCapacity() / 100)).
+          _("Max Capacity:", percent(lqinfo.getMaxCapacity() / 100)).
+          _("Used Capacity:", percent(lqinfo.getUsedCapacity() / 100)).
+          _("Absolute Capacity:", percent(lqinfo.getAbsoluteCapacity() / 100)).
+          _("Absolute Max Capacity:", percent(lqinfo.getAbsoluteMaxCapacity() / 100)).
+          _("Utilization:", percent(lqinfo.getUtilization() / 100)).
+          _("Used Resources:", lqinfo.getUsedResources().toString()).
+          _("Num Active Applications:", Integer.toString(lqinfo.getNumActiveApplications())).
+          _("Num Pending Applications:", Integer.toString(lqinfo.getNumPendingApplications())).
+          _("Num Containers:", Integer.toString(lqinfo.getNumContainers())).
+          _("Max Applications:", Integer.toString(lqinfo.getMaxApplications())).
+          _("Max Applications Per User:", Integer.toString(lqinfo.getMaxApplicationsPerUser())).
+          _("Max Active Applications:", Integer.toString(lqinfo.getMaxActiveApplications())).
+          _("Max Active Applications Per User:", Integer.toString(lqinfo.getMaxActiveApplicationsPerUser())).
+          _("User Limit:", Integer.toString(lqinfo.getUserLimit()) + "%").
+          _("User Limit Factor:", String.format("%.1f", lqinfo.getUserLimitFactor()));
+
+      html._(InfoBlock.class);
+
+      // clear the info contents so this queue's info doesn't accumulate into another queue's info
+      ri.clear();
+    }
-    final Parent parent;
-    final CapacitySchedulerInfo sinfo;
+    final CSQInfo csqinfo;
-    @Inject QueueBlock(Parent parent) {
-      this.parent = parent;
-      sinfo = new CapacitySchedulerInfo(parent.queue);
+    @Inject QueueBlock(CSQInfo info) {
+      csqinfo = info;
+      ArrayList<CapacitySchedulerQueueInfo> subQueues =
+          (csqinfo.qinfo == null) ? csqinfo.csinfo.getSubQueues()
+              : csqinfo.qinfo.getSubQueues();
-      for (CapacitySchedulerQueueInfo info : sinfo.getSubQueues()) {
+      for (CapacitySchedulerQueueInfo info : subQueues) {
-        if (info.getQueue() instanceof ParentQueue) {
-          // this could be optimized better
-          parent.queue = info.getQueue();
-          li.
-            _(QueueBlock.class);
+
+        csqinfo.qinfo = info;
+        if (info.getSubQueues() == null) {
+          li.ul("#lq").li()._(LeafQueueInfoBlock.class)._()._();
+        } else {
+          li._(QueueBlock.class);
-    final Parent parent;
+    final CSQInfo csqinfo;
-    @Inject QueuesBlock(ResourceManager rm, Parent parent) {
+    @Inject QueuesBlock(ResourceManager rm, CSQInfo info) {
-      this.parent = parent;
+      csqinfo = info;
-        parent.queue = root;
-        CapacitySchedulerInfo sinfo = new CapacitySchedulerInfo(parent.queue);
+        CapacitySchedulerInfo sinfo = new CapacitySchedulerInfo(root);
+        csqinfo.csinfo = sinfo;
+        csqinfo.qinfo = null;
+
-          "#cs-wrapper .ui-widget-header { padding: 0.2em 0.5em }")._().
+          "#cs-wrapper .ui-widget-header { padding: 0.2em 0.5em }",
+          "table.info tr th {width: 50%}")._(). // to center info table
-          "    data.inst.open_all(); }).",
+          "    data.inst.open_all();",
+          "    data.inst.close_node('#lq', true);",
+          "   }).",
-            "    if (q == 'root') q = '';",
-          "    $('#apps').dataTable().fnFilter(q, 3);",
+          "    if (q == 'root') q = '';",
+          "    else q = '^' + q.substr(q.lastIndexOf('.') + 1) + '$';",
+          "    $('#apps').dataTable().fnFilter(q, 3, true);",

MOV26 INS26 INS26 INS26 INS40 UPD40 INS40 INS40 INS55 UPD42 INS23 INS83 INS42 INS43 INS23 INS31 INS31 MOV43 INS59 UPD43 INS42 INS83 INS43 INS59 MOV78 INS42 INS44 INS44 INS8 INS78 INS83 INS39 INS42 INS44 INS8 UPD43 INS78 UPD43 INS42 UPD42 UPD42 INS42 INS42 INS43 INS42 INS43 INS42 INS46 INS21 INS42 INS43 INS42 INS60 INS21 INS21 UPD42 UPD42 INS42 UPD43 UPD42 INS60 UPD42 UPD42 UPD43 UPD42 INS42 INS42 INS42 INS7 INS42 INS43 INS59 INS32 INS32 UPD42 INS74 INS59 INS42 UPD42 MOV21 INS42 INS11 INS42 INS42 INS32 INS42 INS42 INS57 INS42 INS42 INS42 UPD42 INS43 INS43 INS42 INS16 INS21 INS42 UPD42 INS21 UPD45 INS45 INS45 INS45 UPD45 INS43 INS40 INS32 INS42 INS45 INS32 INS43 INS42 INS42 INS36 INS32 INS32 INS7 INS27 INS8 MOV43 INS7 INS42 INS32 INS42 INS45 INS27 INS42 INS42 INS45 INS32 INS42 INS27 INS40 INS42 INS40 INS42 INS40 INS42 INS32 INS33 INS21 UPD40 UPD42 INS40 INS33 INS32 INS42 INS45 INS32 INS32 INS45 INS42 INS42 INS40 INS33 MOV42 UPD42 MOV42 INS32 MOV43 INS42 INS32 INS42 INS45 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS42 INS32 INS42 INS45 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS45 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS57 INS32 INS42 INS45 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS43 INS32 INS42 INS45 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS45 UPD42 MOV42 INS32 INS42 INS45 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS45 INS32 INS32 INS42 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS27 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS27 INS32 INS34 INS32 INS42 INS45 INS32 INS42 INS27 INS32 INS34 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS27 INS32 INS34 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS27 INS32 INS34 INS42 INS42 INS32 INS42 INS45 INS32 INS42 INS27 INS32 INS34 INS42 INS42 INS42 INS27 INS42 INS42 INS32 INS34 INS42 INS42 INS45 INS32 INS45 INS42 INS42 INS32 INS42 INS34 INS42 INS42 DEL83 DEL42 DEL43 DEL42 DEL59 DEL23 DEL52 DEL42 DEL22 DEL42 DEL40 DEL14 DEL7 DEL21 DEL42 DEL42 DEL32 DEL32 DEL43 DEL62 DEL40 DEL42 DEL42 DEL32 DEL7 DEL21 DEL52 DEL42 DEL22 DEL40