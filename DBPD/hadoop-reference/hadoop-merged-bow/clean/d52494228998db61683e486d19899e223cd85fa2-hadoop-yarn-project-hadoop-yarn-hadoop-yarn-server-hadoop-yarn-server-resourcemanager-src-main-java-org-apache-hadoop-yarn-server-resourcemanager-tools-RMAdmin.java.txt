YARN-53. Added the missing getGroups API to ResourceManager. Contributed by Bo Wang.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1389176 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Arrays;
+      " [-getGroup [username]]" +
-    String help = "-help [cmd]: \tDisplays help for the given command or all commands if none\n" +
-    "\t\tis specified.\n";
-        "-refreshServiceAcl: Reload the service-level authorization policy file\n" +
-        "\t\tResoureceManager will reload the authorization policy file.\n";
+      "-refreshServiceAcl: Reload the service-level authorization policy file\n" +
+      "\t\tResoureceManager will reload the authorization policy file.\n";
+    
+    String getGroups = 
+      "-getGroups [username]: Get the groups which given user belongs to\n";
+
+    String help = "-help [cmd]: \tDisplays help for the given command or all commands if none\n" +
+      "\t\tis specified.\n";
+    } else if ("getGroups".equals(cmd)) {
+      System.out.println(getGroups);
+      System.out.println(getGroups);
+    } else if ("-getGroups".equals(cmd)){
+      System.err.println("Usage: java RMAdmin" + " [-getGroups [username]]");
+      System.err.println("           [-getGroups [username]]");
+  private int getGroups(String[] usernames) throws IOException {
+    // Get groups users belongs to
+    RMAdminProtocol adminProtocol = createAdminProtocol();
+
+    if (usernames.length == 0) {
+      usernames = new String[] { UserGroupInformation.getCurrentUser().getUserName() };
+    }
+    
+    for (String username : usernames) {
+      StringBuilder sb = new StringBuilder();
+      sb.append(username + " :");
+      for (String group : adminProtocol.getGroupsForUser(username)) {
+        sb.append(" ");
+        sb.append(group);
+      }
+      System.out.println(sb);
+    }
+    
+    return 0;
+  }
+  
-
+    
+      } else if ("-getGroups".equals(cmd)) {
+        String[] usernames = Arrays.copyOfRange(args, i, args.length);
+        exitCode = getGroups(usernames);

INS26 INS40 INS31 MOV60 INS83 INS39 INS42 INS44 INS43 INS8 INS60 INS5 INS42 INS42 INS60 INS25 INS70 INS41 INS43 INS59 INS43 INS85 INS43 INS59 INS27 INS8 INS44 INS42 INS8 INS34 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS40 INS34 INS21 INS43 INS42 INS60 INS21 INS70 INS21 INS45 INS42 INS7 INS42 INS43 INS59 INS32 INS44 INS32 INS8 INS32 INS42 INS3 INS42 INS42 INS14 INS42 INS42 INS27 INS43 INS42 INS42 INS42 INS42 INS21 INS21 INS40 INS42 INS42 INS5 INS4 INS43 INS42 INS45 INS42 INS32 INS32 INS25 INS25 INS43 INS85 INS32 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS32 INS8 MOV25 INS32 INS8 MOV8 INS42 INS32 INS42 INS45 INS42 INS42 INS21 INS45 INS42 INS42 INS21 INS21 INS42 INS42 INS25 INS32 INS21 INS32 INS32 INS32 INS8 MOV25 INS40 INS42 INS42 INS32 INS40 INS42 INS27 INS40 INS42 INS45 INS45 INS42 INS42 INS60 INS21 INS40 INS42 INS42 INS45 INS45 INS5 INS59 INS7 INS43 INS85 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS42