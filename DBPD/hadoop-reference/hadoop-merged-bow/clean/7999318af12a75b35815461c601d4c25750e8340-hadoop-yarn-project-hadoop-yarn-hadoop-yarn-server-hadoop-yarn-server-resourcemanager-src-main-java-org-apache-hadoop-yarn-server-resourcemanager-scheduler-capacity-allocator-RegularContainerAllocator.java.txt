YARN-6344. Add parameter for rack locality delay in CapacityScheduler. (kkaranasos)

+  private int getActualRackLocalityDelay() {
+    return Math.min(rmContext.getScheduler().getNumClusterNodes(),
+        application.getCSLeafQueue().getNodeLocalityDelay()
+        + application.getCSLeafQueue().getRackLocalityAdditionalDelay());
+  }
+
+      // If there are no nodes in the cluster, return false.
+      if (rmContext.getScheduler().getNumClusterNodes() == 0) {
+        return false;
+      }
+      // If we have only ANY requests for this schedulerKey, we should not
+      // delay its scheduling.
+      if (application.getResourceRequests(schedulerKey).size() == 1) {
+        return true;
+      }
-      long requiredContainers = application.getOutstandingAsksCount(
-          schedulerKey);
-      float localityWaitFactor =
-          getLocalityWaitFactor(schedulerKey, rmContext.getScheduler()
-              .getNumClusterNodes());
-      // Cap the delay by the number of nodes in the cluster. Under most
-      // conditions this means we will consider each node in the cluster before
-      // accepting an off-switch assignment.
-      return (Math.min(rmContext.getScheduler().getNumClusterNodes(),
-          (requiredContainers * localityWaitFactor)) < missedOpportunities);
+      // If rack locality additional delay parameter is enabled.
+      if (application.getCSLeafQueue().getRackLocalityAdditionalDelay() > -1) {
+        return missedOpportunities > getActualRackLocalityDelay();
+      } else {
+        long requiredContainers =
+            application.getOutstandingAsksCount(schedulerKey);
+        float localityWaitFactor = getLocalityWaitFactor(schedulerKey,
+            rmContext.getScheduler().getNumClusterNodes());
+        // Cap the delay by the number of nodes in the cluster.
+        return (Math.min(rmContext.getScheduler().getNumClusterNodes(),
+            (requiredContainers * localityWaitFactor)) < missedOpportunities);
+      }
-    if (application.getOutstandingAsksCount(schedulerKey, node.getRackName())
-        <= 0) {
+    if (application.getOutstandingAsksCount(schedulerKey,
+        node.getRackName()) <= 0) {

INS31 INS83 INS39 INS42 INS8 INS41 INS32 INS8 INS42 INS42 INS32 INS27 MOV25 INS25 INS25 MOV60 INS25 INS32 INS42 INS32 INS32 INS27 INS8 INS27 INS8 INS27 INS8 MOV8 INS42 INS42 INS32 INS42 INS32 INS42 INS32 INS34 INS41 INS32 INS34 INS41 INS32 INS38 INS41 INS42 INS42 INS42 INS42 INS32 INS42 INS9 INS32 INS42 INS9 INS32 INS42 INS34 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42