HADOOP-15659. Code changes for bug fix and new tests.
Contributed by Da Zhou.

+import org.apache.hadoop.fs.azurebfs.services.AbfsClient;
-    this.primaryUserGroup = userGroupInformation.getPrimaryGroupName();
-      this.createFileSystem();
+      if (!this.fileSystemExists()) {
+        this.createFileSystem();
+      }
+    }
+
+    if (!abfsStore.getAbfsConfiguration().getSkipUserGroupMetadataDuringInitialization()) {
+      this.primaryUserGroup = userGroupInformation.getPrimaryGroupName();
+    } else {
+      //Provide a default group name
+      this.primaryUserGroup = this.user;
-    final String blobLocationHost = this.abfsStore.getAbfsConfiguration().getAzureBlockLocationHost();
+    final String blobLocationHost = abfsStore.getAbfsConfiguration().getAzureBlockLocationHost();
+  @Override
+  protected void finalize() throws Throwable {
+    LOG.debug("finalize() called.");
+    close();
+    super.finalize();
+  }
+
+  private boolean fileSystemExists() throws IOException {
+    LOG.debug(
+            "AzureBlobFileSystem.fileSystemExists uri: {}", uri);
+    try {
+      abfsStore.getFilesystemProperties();
+    } catch (AzureBlobFileSystemException ex) {
+      try {
+        checkException(null, ex);
+        // Because HEAD request won't contain message body,
+        // there is not way to get the storage error code
+        // workaround here is to check its status code.
+      } catch (FileNotFoundException e) {
+        return false;
+      }
+    }
+    return true;
+  }
+
-      this.abfsStore.createFilesystem();
+      abfsStore.createFilesystem();
-      checkException(null, ex, AzureServiceErrorCode.FILE_SYSTEM_ALREADY_EXISTS);
+      checkException(null, ex);
-        throw (IOException)new FileNotFoundException(ere.getMessage())
+        throw (IOException) new FileNotFoundException(ere.getMessage())
-        throw (IOException)new FileAlreadyExistsException(ere.getMessage())
+        throw (IOException) new FileAlreadyExistsException(ere.getMessage())
-    return this.abfsStore;
+    return abfsStore;
+  }
+
+  @VisibleForTesting
+  AbfsClient getAbfsClient() {
+    return abfsStore.getClient();

INS26 INS40 INS31 INS31 INS31 INS78 INS83 INS39 INS42 INS43 INS8 INS83 INS39 INS42 INS43 INS8 INS78 INS43 INS42 INS8 INS25 INS42 INS42 INS21 INS21 INS21 INS42 INS21 INS54 INS41 INS42 INS42 INS41 INS8 INS38 INS8 INS8 INS32 INS32 INS48 INS32 INS8 INS12 INS9 INS42 INS32 INS25 INS32 MOV21 INS21 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS45 INS42 INS21 MOV44 INS8 INS44 INS42 INS42 INS38 MOV8 INS32 INS42 INS7 INS32 INS54 INS43 INS42 INS32 INS42 INS42 INS22 INS22 INS42 INS42 INS42 INS8 INS12 INS42 INS42 INS52 INS42 INS52 INS42 INS52 INS42 INS21 INS44 INS8 INS32 INS43 INS42 INS41 INS42 INS33 INS42 INS42 INS9 DEL52 DEL42 DEL22 DEL52 DEL42 DEL22 DEL40 DEL52 DEL42 DEL22