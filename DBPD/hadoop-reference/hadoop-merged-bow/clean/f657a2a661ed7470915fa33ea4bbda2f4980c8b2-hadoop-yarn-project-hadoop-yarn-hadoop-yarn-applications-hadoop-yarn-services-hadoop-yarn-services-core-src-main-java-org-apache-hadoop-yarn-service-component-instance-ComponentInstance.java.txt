YARN-9056.  Improved YARN service upgrade state logic for readiness check.
            Contributed by Chandni Singh

-          new ContainerBecomeReadyTransition())
+          new ContainerBecomeReadyTransition(false))
-      .addTransition(UPGRADING, EnumSet.of(READY), BECOME_READY,
-          new ReadyAfterUpgradeTransition())
+      .addTransition(UPGRADING, EnumSet.of(REINITIALIZED), START,
+          new StartedAfterUpgradeTransition())
-      .addTransition(CANCEL_UPGRADING, EnumSet.of(CANCEL_UPGRADING, READY),
-          BECOME_READY, new ReadyAfterUpgradeTransition())
+      .addTransition(CANCEL_UPGRADING, EnumSet.of(CANCEL_UPGRADING,
+          REINITIALIZED), START, new StartedAfterUpgradeTransition())
+      .addTransition(REINITIALIZED, CANCEL_UPGRADING, CANCEL_UPGRADE,
+          new CancelledAfterReinitTransition())
+      .addTransition(REINITIALIZED, READY, BECOME_READY,
+           new ContainerBecomeReadyTransition(true))
+    private final boolean isReinitialized;
+
+    ContainerBecomeReadyTransition(boolean isReinitialized) {
+      this.isReinitialized = isReinitialized;
+    }
+
-      compInstance.component.incContainersReady(true);
+      if (!isReinitialized) {
+        compInstance.component.incContainersReady(true);
+      } else {
+        compInstance.component.incContainersReady(false);
+        ComponentEvent checkState = new ComponentEvent(
+            compInstance.component.getName(), ComponentEventType.CHECK_STABLE);
+        compInstance.scheduler.getDispatcher().getEventHandler().handle(
+            checkState);
+      }
-  private static class ReadyAfterUpgradeTransition implements
+  private static class StartedAfterUpgradeTransition implements
-        LOG.info("{} received ready but cancellation pending",
+        LOG.info("{} received started but cancellation pending",
-      instance.setContainerState(ContainerState.READY);
-      instance.component.incContainersReady(false);
+      instance.setContainerState(ContainerState.RUNNING_BUT_UNREADY);
-      ComponentEvent checkState = new ComponentEvent(
-          instance.component.getName(),
-          ComponentEventType.CHECK_STABLE);
-      instance.scheduler.getDispatcher().getEventHandler().handle(checkState);
-      instance.postContainerReady();
-      return ComponentInstanceState.READY;
+      return ComponentInstanceState.REINITIALIZED;
+  private static class CancelledAfterReinitTransition extends BaseTransition {
+    @Override
+    public void transition(ComponentInstance instance,
+        ComponentInstanceEvent event) {
+      if (instance.upgradeInProgress.compareAndSet(false, true)) {
+        instance.cancelUpgrade();
+      } else {
+        LOG.info("{} pending cancellation", event.getContainerId());
+        instance.pendingCancelUpgrade = true;
+      }
+    }
+  }
+

INS83 INS42 INS55 INS23 INS31 UPD42 INS83 INS83 INS42 INS43 INS31 INS32 INS83 INS83 INS39 INS59 INS42 INS44 INS8 INS8 INS42 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS32 INS42 INS42 INS39 INS42 INS21 MOV21 INS25 MOV21 INS42 INS43 INS42 INS43 INS42 INS25 MOV32 INS42 INS42 INS42 INS42 INS14 INS7 INS38 MOV8 INS8 UPD40 INS42 INS42 INS32 INS8 INS8 UPD42 INS42 INS42 INS42 INS14 INS43 INS9 INS22 INS42 INS42 INS21 INS60 INS21 UPD40 INS40 INS42 INS9 INS9 INS21 INS21 INS21 INS43 INS42 INS52 INS42 INS32 MOV43 INS59 INS32 INS32 INS32 INS7 UPD42 INS42 INS40 INS42 INS9 INS42 INS14 INS32 INS42 INS42 UPD45 INS42 INS42 INS42 INS42 INS45 INS32 INS40 INS9 UPD42 UPD43 MOV43 INS32 INS40 INS32 INS42 INS42 INS42 UPD42 UPD42 INS40 INS42 INS40 INS42 UPD42 UPD43 UPD42 INS9 DEL83 DEL42 DEL40 DEL42 DEL9 DEL32 DEL21 DEL42 DEL40 DEL42 DEL32 DEL40 DEL14 DEL59 DEL60 DEL40 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL32 DEL21