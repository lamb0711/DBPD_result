HDDS-791. Support Range header for ozone s3 object download. Contributed by Bharat Viswanadham.

+
+import org.apache.hadoop.ozone.s3.io.S3WrapperInputStream;
+import org.apache.hadoop.ozone.s3.util.RangeHeader;
+import org.apache.hadoop.ozone.s3.util.S3utils;
-import static org.apache.hadoop.ozone.s3.util.S3Consts.COPY_SOURCE_HEADER;
-import static org.apache.hadoop.ozone.s3.util.S3Consts.STORAGE_CLASS_HEADER;
+import static org.apache.hadoop.ozone.s3.util.S3Consts.*;
-
-      OzoneInputStream key = bucket
-          .readKey(keyPath);
+      OzoneKeyDetails keyDetails = bucket.getKey(keyPath);
-      StreamingOutput output = dest -> IOUtils.copy(key, dest);
-      ResponseBuilder responseBuilder = Response.ok(output);
+      long length = keyDetails.getDataSize();
+      LOG.debug("Data length of the key {} is {}", keyPath, length);
+
+      String rangeHeaderVal = headers.getHeaderString(RANGE_HEADER);
+      RangeHeader rangeHeader = null;
+
+      LOG.debug("range Header provided value is {}", rangeHeaderVal);
+
+      if (rangeHeaderVal != null) {
+        rangeHeader = S3utils.parseRangeHeader(rangeHeaderVal,
+            length);
+        LOG.debug("range Header provided value is {}", rangeHeader);
+        if (rangeHeader.isInValidRange()) {
+          OS3Exception exception = S3ErrorTable.newError(S3ErrorTable
+              .INVALID_RANGE, rangeHeaderVal);
+          throw exception;
+        }
+      }
+      ResponseBuilder responseBuilder;
+
+      if (rangeHeaderVal == null || rangeHeader.isReadFull()) {
+        StreamingOutput output = dest -> {
+          try (OzoneInputStream key = bucket.readKey(keyPath)) {
+            IOUtils.copy(key, dest);
+          }
+        };
+        responseBuilder = Response.ok(output);
+
+      } else {
+        LOG.info("range Header provided value is {}", rangeHeader);
+        OzoneInputStream key = bucket.readKey(keyPath);
+
+        long startOffset = rangeHeader.getStartOffset();
+        long endOffset = rangeHeader.getEndOffset();
+        long copyLength;
+        if (startOffset == endOffset) {
+          // if range header is given as bytes=0-0, then we should return 1
+          // byte from start offset
+          copyLength = 1;
+        } else {
+          copyLength = rangeHeader.getEndOffset() - rangeHeader
+              .getStartOffset() + 1;
+        }
+        StreamingOutput output = dest -> {
+          try (S3WrapperInputStream s3WrapperInputStream =
+              new S3WrapperInputStream(
+                  key.getInputStream())) {
+            IOUtils.copyLarge(s3WrapperInputStream, dest, startOffset,
+                copyLength);
+          }
+        };
+        responseBuilder = Response.ok(output);
+
+        String contentRangeVal = RANGE_HEADER_SUPPORTED_UNIT + " " +
+            rangeHeader.getStartOffset() + "-" + rangeHeader.getEndOffset() +
+            "/" + length;
+
+        responseBuilder.header(CONTENT_RANGE_HEADER, contentRangeVal);
+      }
+      responseBuilder.header(ACCEPT_RANGE_HEADER,
+          RANGE_HEADER_SUPPORTED_UNIT);

MOV26 INS26 INS26 INS40 INS40 UPD40 UPD40 INS60 INS60 INS21 INS60 INS60 INS21 INS25 INS25 INS21 INS43 INS59 INS39 INS59 INS32 INS43 INS59 INS43 INS59 INS32 INS27 INS8 INS27 INS8 INS8 INS32 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS33 INS42 INS42 INS45 INS42 INS42 INS33 INS21 INS21 INS25 INS27 INS32 MOV60 INS21 INS21 MOV60 INS60 INS60 INS60 INS25 INS60 INS21 INS60 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS32 INS32 INS8 INS42 INS33 INS42 INS42 INS7 INS32 INS39 INS59 INS39 INS59 INS39 INS59 INS27 INS8 INS8 INS43 INS59 INS7 INS43 INS59 INS32 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS60 INS53 INS42 MOV32 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS21 INS21 INS42 INS42 INS86 INS42 INS32 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS42 INS8 INS42 INS42 INS42 INS42 INS7 INS7 INS59 INS8 INS42 INS42 INS42 INS42 INS45 INS32 INS45 INS32 INS45 INS42 INS42 INS42 INS32 INS54 INS42 INS34 INS42 INS27 INS42 INS54 INS42 INS42 INS42 INS42 INS42 INS42 INS40 INS42 INS58 INS8 INS27 INS34 INS58 INS8 INS43 INS59 INS21 INS32 INS32 INS43 INS59 INS21 INS42 INS42 INS32 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 INS14 INS32 INS42 INS42 INS42 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42