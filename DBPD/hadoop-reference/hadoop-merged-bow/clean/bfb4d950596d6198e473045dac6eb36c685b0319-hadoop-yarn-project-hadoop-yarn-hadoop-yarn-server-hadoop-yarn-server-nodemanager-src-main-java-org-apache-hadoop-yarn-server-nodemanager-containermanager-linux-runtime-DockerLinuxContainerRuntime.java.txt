YARN-5430. Return container's ip and host from NM ContainerStatus call. Contributed by Jian He.

+import org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.docker.DockerInspectCommand;
+
+
+  // ipAndHost[0] contains comma separated list of IPs
+  // ipAndHost[1] contains the hostname.
+  @Override
+  public String[] getIpAndHost(Container container) {
+    String containerId = container.getContainerId().toString();
+    DockerInspectCommand inspectCommand =
+        new DockerInspectCommand(containerId).getIpAndHost();
+    try {
+      String commandFile = dockerClient.writeCommandToTempFile(inspectCommand,
+          containerId);
+      PrivilegedOperation privOp = new PrivilegedOperation(
+          PrivilegedOperation.OperationType.RUN_DOCKER_CMD);
+      privOp.appendArgs(commandFile);
+      String output = privilegedOperationExecutor
+          .executePrivilegedOperation(null, privOp, null,
+              container.getLaunchContext().getEnvironment(), true, false);
+      LOG.info("Docker inspect output for " + containerId + ": " + output);
+      int index = output.lastIndexOf(',');
+      if (index == -1) {
+        LOG.error("Incorrect format for ip and host");
+        return null;
+      }
+      String ips = output.substring(0, index).trim();
+      String host = output.substring(index+1).trim();
+      String[] ipAndHost = new String[2];
+      ipAndHost[0] = ips;
+      ipAndHost[1] = host;
+      return ipAndHost;
+    } catch (ContainerExecutionException e) {
+      LOG.error("Error when writing command to temp file", e);
+    } catch (PrivilegedOperationException e) {
+      LOG.error("Error when executing command.", e);
+    }
+    return null;
+  }

INS26 INS40 INS31 INS78 INS83 INS5 INS42 INS44 INS8 INS42 INS43 INS85 INS43 INS42 INS60 INS60 INS54 INS41 INS42 INS42 INS43 INS59 INS43 INS59 INS8 INS12 INS12 INS33 INS42 INS42 INS32 INS42 INS42 INS32 INS60 INS60 INS21 INS60 INS21 INS60 INS25 INS60 INS60 INS60 INS21 INS21 INS41 INS44 INS8 INS44 INS8 INS32 INS42 INS14 INS42 INS43 INS59 INS43 INS59 INS32 INS43 INS59 INS32 INS39 INS59 INS27 INS8 INS43 INS59 INS43 INS59 INS5 INS59 INS7 INS7 INS42 INS43 INS42 INS21 INS43 INS42 INS21 INS42 INS42 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS27 INS42 INS32 INS42 INS38 INS21 INS41 INS42 INS42 INS32 INS42 INS42 INS32 INS43 INS85 INS42 INS3 INS2 INS42 INS2 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS40 INS42 INS42 INS33 INS42 INS33 INS32 INS9 INS9 INS45 INS42 INS45 INS42 INS42 INS42 INS13 INS34 INS32 INS33 INS32 INS42 INS32 INS42 INS42 INS5 INS34 INS42 INS34 INS42 INS34 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS42 INS42 INS34 INS42 INS42 INS42 INS27 INS43 INS85 INS42 INS42 INS42 INS34 INS42