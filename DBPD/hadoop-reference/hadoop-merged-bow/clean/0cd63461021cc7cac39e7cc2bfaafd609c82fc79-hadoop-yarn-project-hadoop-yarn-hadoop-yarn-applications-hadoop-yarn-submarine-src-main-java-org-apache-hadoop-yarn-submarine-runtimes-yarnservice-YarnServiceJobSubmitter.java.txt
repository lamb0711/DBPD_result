YARN-8769. [Submarine] Allow user to specify customized quicklink(s) when submit Submarine job. Contributed by Wangda Tan.

-import com.google.common.collect.ImmutableMap;
+import org.apache.hadoop.yarn.submarine.client.cli.param.Quicklink;
-import java.io.FileWriter;
+import java.io.FileOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.PrintWriter;
+import java.io.Writer;
+import java.util.List;
+  public static final String TENSORBOARD_QUICKLINK_LABEL = "Tensorboard";
-      FileWriter fw, Component comp) throws IOException {
+      PrintWriter fw, Component comp) throws IOException {
-  private String getUserName() {
+  @VisibleForTesting
+  protected String getUserName() {
-    FileWriter fw = new FileWriter(file);
+    Writer w = new OutputStreamWriter(new FileOutputStream(file), "UTF-8");
+    PrintWriter pw = new PrintWriter(w);
-      fw.append("#!/bin/bash\n");
+      pw.append("#!/bin/bash\n");
-      addHdfsClassPathIfNeeded(parameters, fw, comp);
+      addHdfsClassPathIfNeeded(parameters, pw, comp);
-        fw.append(tbCommand + "\n");
+        pw.append(tbCommand + "\n");
-          fw.append("export TF_CONFIG=\"" + tfConfigEnv + "\"\n");
+          pw.append("export TF_CONFIG=\"" + tfConfigEnv + "\"\n");
-          fw.append(parameters.getWorkerLaunchCmd() + '\n');
+          pw.append(parameters.getWorkerLaunchCmd() + '\n');
-          fw.append(parameters.getPSLaunchCmd() + '\n');
+          pw.append(parameters.getPSLaunchCmd() + '\n');
-      fw.close();
+      pw.close();
+  private void handleQuicklinks(RunJobParameters runJobParameters)
+      throws IOException {
+    List<Quicklink> quicklinks = runJobParameters.getQuicklinks();
+    if (null != quicklinks && !quicklinks.isEmpty()) {
+      for (Quicklink ql : quicklinks) {
+        // Make sure it is a valid instance name
+        String instanceName = ql.getComponentInstanceName();
+        boolean found = false;
+
+        for (Component comp : serviceSpec.getComponents()) {
+          for (int i = 0; i < comp.getNumberOfContainers(); i++) {
+            String possibleInstanceName = comp.getName() + "-" + i;
+            if (possibleInstanceName.equals(instanceName)) {
+              found = true;
+              break;
+            }
+          }
+        }
+
+        if (!found) {
+          throw new IOException(
+              "Couldn't find a component instance = " + instanceName
+                  + " while adding quicklink");
+        }
+
+        String link = ql.getProtocol() + YarnServiceUtils.getDNSName(
+            serviceSpec.getName(), instanceName, getUserName(), getDNSDomain(),
+            ql.getPort());
+        YarnServiceUtils.addQuicklink(serviceSpec, ql.getLabel(), link);
+      }
+    }
+  }
+
-    Service service = new Service();
-    service.setName(parameters.getName());
-    service.setVersion(String.valueOf(System.currentTimeMillis()));
-    service.setArtifact(getDockerArtifact(parameters.getDockerImageName()));
+    serviceSpec = new Service();
+    serviceSpec.setName(parameters.getName());
+    serviceSpec.setVersion(String.valueOf(System.currentTimeMillis()));
+    serviceSpec.setArtifact(getDockerArtifact(parameters.getDockerImageName()));
-    handleServiceEnvs(service, parameters);
+    handleServiceEnvs(serviceSpec, parameters);
-      addWorkerComponents(service, parameters);
+      addWorkerComponents(serviceSpec, parameters);
-      service.addComponent(psComponent);
+      serviceSpec.addComponent(psComponent);
-          parameters.getName(), TaskType.TENSORBOARD.getComponentName(), 0,
-          getUserName(), getDNSDomain(), 6006);
+          parameters.getName(),
+          TaskType.TENSORBOARD.getComponentName() + "-" + 0, getUserName(),
+          getDNSDomain(), 6006);
-      service.addComponent(tbComponent);
-      service.setQuicklinks(ImmutableMap.of("Tensorboard", tensorboardLink));
+      serviceSpec.addComponent(tbComponent);
+
+      YarnServiceUtils.addQuicklink(serviceSpec, TENSORBOARD_QUICKLINK_LABEL,
+          tensorboardLink);
-    return service;
+    // After all components added, handle quicklinks
+    handleQuicklinks(parameters);
+
+    return serviceSpec;
-    Service service = createServiceByParameters(parameters);
+    createServiceByParameters(parameters);
-    ApplicationId appid = serviceClient.actionCreate(service);
+    ApplicationId appid = serviceClient.actionCreate(serviceSpec);
-    this.serviceSpec = service;

MOV26 MOV26 INS26 INS26 INS26 INS26 UPD40 INS40 INS40 INS40 UPD40 INS40 INS23 INS31 INS83 INS83 INS83 INS43 INS59 INS78 UPD83 INS83 INS39 INS42 INS44 INS43 INS8 INS42 INS42 INS45 UPD43 INS42 INS60 INS43 INS42 INS42 INS60 INS25 INS21 INS21 INS21 UPD42 UPD43 INS43 INS59 INS42 INS74 INS59 INS27 INS8 INS7 INS32 UPD42 MOV32 UPD42 UPD42 INS42 INS42 INS14 INS43 INS43 INS42 INS32 INS27 INS38 INS70 INS42 MOV14 UPD42 UPD42 UPD42 UPD42 INS42 INS42 UPD43 INS14 INS45 INS43 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS32 INS44 INS42 INS8 UPD42 UPD42 INS43 MOV42 INS42 UPD42 UPD42 UPD42 INS42 INS42 INS43 INS42 INS60 INS60 INS70 INS25 INS60 INS21 UPD42 UPD42 UPD42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 MOV42 INS42 INS42 INS43 INS59 INS39 INS59 INS44 INS32 INS8 INS38 INS8 INS43 INS59 INS32 UPD42 INS42 INS42 INS32 INS42 INS9 INS43 INS42 INS42 INS42 INS24 INS42 INS53 INS42 INS42 INS27 INS42 INS42 INS42 INS32 INS42 INS27 INS42 INS42 INS42 INS58 INS27 INS37 INS8 INS14 INS32 INS32 INS42 INS42 MOV32 INS45 INS34 UPD42 UPD42 INS39 INS59 INS42 INS32 INS42 INS60 INS25 INS43 INS27 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS32 UPD42 INS42 INS34 INS42 INS42 INS43 INS59 INS32 INS8 INS42 INS45 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS42 INS42 INS42 INS21 INS10 INS32 INS45 INS42 INS7 INS42 INS42 INS42 INS9 DEL42 DEL43 DEL42 DEL59 DEL60 DEL34 DEL45 DEL32 DEL42 DEL43 DEL42 DEL59 DEL60 DEL52 DEL42 DEL22 DEL42 DEL7 DEL21