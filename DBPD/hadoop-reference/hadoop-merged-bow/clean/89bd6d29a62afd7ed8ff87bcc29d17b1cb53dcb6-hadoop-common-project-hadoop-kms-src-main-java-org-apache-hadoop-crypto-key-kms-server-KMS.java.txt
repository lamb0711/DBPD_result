HADOOP-13317. Add logs to KMS server-side to improve supportability. Contributed by Suraj Acharya.

+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+  private static final Logger LOG = LoggerFactory.getLogger(KMS.class);
+
-  
+
+    LOG.trace("Entering createKey Method.");
+    LOG.debug("Creating key with name {}, cipher being used{}, " +
+            "length of key {}, description of key {}", name, cipher,
+             length, description);
+    LOG.trace("Exiting createKey Method.");
+    LOG.trace("Entering deleteKey method.");
-
+    LOG.debug("Deleting key with name {}.", name);
-
+    LOG.trace("Exiting deleteKey method.");
+    LOG.trace("Entering rolloverKey Method.");
+    LOG.debug("Rolling key with name {}.", name);
+    LOG.trace("Exiting rolloverKey Method.");
+    LOG.trace("Entering getKeysMetadata method.");
+    LOG.trace("Exiting getKeysMetadata method.");
+    LOG.trace("Entering getKeyNames method.");
+    LOG.trace("Exiting getKeyNames method.");
+    LOG.trace("Entering getKey method.");
+    LOG.debug("Getting key information for key with name {}.", name);
+    LOG.trace("Exiting getKey method.");
+    LOG.trace("Entering getMetadata method.");
+    LOG.debug("Getting metadata for key with name {}.", name);
+    LOG.trace("Exiting getMetadata method.");
+    LOG.trace("Entering getCurrentVersion method.");
+    LOG.debug("Getting key version for key with name {}.", name);
+    LOG.trace("Exiting getCurrentVersion method.");
+    LOG.trace("Entering getKeyVersion method.");
+    LOG.debug("Getting key with version name {}.", versionName);
+    LOG.trace("Exiting getKeyVersion method.");
+    LOG.trace("Entering generateEncryptedKeys method.");
+    LOG.debug("Generating encrypted key with name {}," +
+            " the edek Operation is {}.", name, edekOp);
+      LOG.debug("edek Operation is Generate.");
+                  LOG.debug("Generated Encrypted key for {} number of keys.",
+                          numKeys);
+        LOG.error("Exception in generateEncryptedKeys:", e);
-      throw new IllegalArgumentException("Wrong " + KMSRESTConstants.EEK_OP +
-          " value, it must be " + KMSRESTConstants.EEK_GENERATE + " or " +
-          KMSRESTConstants.EEK_DECRYPT);
+      StringBuilder error;
+      error = new StringBuilder("IllegalArgumentException Wrong ");
+      error.append(KMSRESTConstants.EEK_OP);
+      error.append(" value, it must be ");
+      error.append(KMSRESTConstants.EEK_GENERATE);
+      error.append(" or ");
+      error.append(KMSRESTConstants.EEK_DECRYPT);
+      LOG.error(error.toString());
+      throw new IllegalArgumentException(error.toString());
+    LOG.trace("Exiting generateEncryptedKeys method.");
+    LOG.trace("Entering decryptEncryptedKey method.");
+    LOG.debug("Decrypting key for {}, the edek Operation is {}.",
+            versionName, eekOp);
-    String encMaterialStr = 
+    String encMaterialStr =
-      throw new IllegalArgumentException("Wrong " + KMSRESTConstants.EEK_OP +
-          " value, it must be " + KMSRESTConstants.EEK_GENERATE + " or " +
-          KMSRESTConstants.EEK_DECRYPT);
+      StringBuilder error;
+      error = new StringBuilder("IllegalArgumentException Wrong ");
+      error.append(KMSRESTConstants.EEK_OP);
+      error.append(" value, it must be ");
+      error.append(KMSRESTConstants.EEK_GENERATE);
+      error.append(" or ");
+      error.append(KMSRESTConstants.EEK_DECRYPT);
+      LOG.error(error.toString());
+      throw new IllegalArgumentException(error.toString());
+    LOG.trace("Exiting decryptEncryptedKey method.");
+    LOG.trace("Entering getKeyVersions method.");
+    LOG.debug("Getting key versions for key {}", name);
+    LOG.trace("Exiting getKeyVersions method.");

INS26 INS26 INS40 INS40 INS23 INS83 INS83 INS83 INS43 INS59 INS42 INS42 INS32 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS42 INS42 INS57 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS43 INS42 INS42 INS45 INS42 INS42 INS27 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS27 INS42 INS42 INS21 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS53 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS60 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS53 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42 INS45 INS45 INS45 INS45 INS32 INS43 INS59 INS7 INS32 INS32 INS32 INS32 INS32 INS32 INS14 INS43 INS59 INS7 INS32 INS32 INS32 INS32 INS32 INS32 INS14 INS42 INS42 INS45 INS42 INS42 INS42 INS14 INS42 INS42 INS40 INS42 INS42 INS45 INS42 INS42 INS40 INS42 INS42 INS45 INS42 INS42 INS40 INS42 INS42 INS32 MOV43 INS32 UPD42 MOV42 INS42 INS42 INS14 INS42 INS42 INS40 INS42 INS42 INS45 INS42 INS42 INS40 INS42 INS42 INS45 INS42 INS42 INS40 INS42 INS42 INS32 MOV43 INS32 INS21 INS43 INS45 INS42 INS42 INS42 INS42 INS42 INS43 INS45 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS45 INS42 INS21 INS32 INS42 INS42 INS45 INS42 DEL45 DEL40 DEL45 DEL40 DEL45 DEL40 DEL27 DEL14 DEL53 DEL45 DEL40 DEL45 DEL40 DEL45 DEL40 DEL27 DEL14 DEL53