YARN-2675. containersKilled metrics is not updated when the container is killed during localization. (Zhihai Xu via kasha)

-  private static final ContainerDoneTransition CONTAINER_DONE_TRANSITION =
-    new ContainerDoneTransition();
-
-        CONTAINER_DONE_TRANSITION)
+        new LocalizationFailedToDoneTransition())
-        CONTAINER_DONE_TRANSITION)
+        new ExitedWithSuccessToDoneTransition())
-            CONTAINER_DONE_TRANSITION)
+            new ExitedWithFailureToDoneTransition())
-            CONTAINER_DONE_TRANSITION)
+            new KillingToDoneTransition())
-            CONTAINER_DONE_TRANSITION)
+            new ContainerCleanedupAfterKillToDoneTransition())
-  @SuppressWarnings("fallthrough")
-  private void finished() {
-    ApplicationId applicationId =
-        containerId.getApplicationAttemptId().getApplicationId();
-    switch (getContainerState()) {
-      case EXITED_WITH_SUCCESS:
-        metrics.endRunningContainer();
-        metrics.completedContainer();
-        NMAuditLogger.logSuccess(user,
-            AuditConstants.FINISH_SUCCESS_CONTAINER, "ContainerImpl",
-            applicationId, containerId);
-        break;
-      case EXITED_WITH_FAILURE:
-        if (wasLaunched) {
-          metrics.endRunningContainer();
-        }
-        // fall through
-      case LOCALIZATION_FAILED:
-        metrics.failedContainer();
-        NMAuditLogger.logFailure(user,
-            AuditConstants.FINISH_FAILED_CONTAINER, "ContainerImpl",
-            "Container failed with state: " + getContainerState(),
-            applicationId, containerId);
-        break;
-      case CONTAINER_CLEANEDUP_AFTER_KILL:
-        if (wasLaunched) {
-          metrics.endRunningContainer();
-        }
-        // fall through
-      case NEW:
-        metrics.killedContainer();
-        NMAuditLogger.logSuccess(user,
-            AuditConstants.FINISH_KILLED_CONTAINER, "ContainerImpl",
-            applicationId,
-            containerId);
-    }
-
-    metrics.releaseContainer(this.resource);
-    sendFinishedEvents();
-  }
-
-        container.finished();
+        container.metrics.killedContainer();
+        NMAuditLogger.logSuccess(container.user,
+            AuditConstants.FINISH_KILLED_CONTAINER, "ContainerImpl",
+            container.containerId.getApplicationAttemptId().getApplicationId(),
+            container.containerId);
+        container.metrics.releaseContainer(container.resource);
+        container.sendFinishedEvents();
-      container.finished();
+      container.metrics.releaseContainer(container.resource);
+      container.sendFinishedEvents();
+      container.metrics.killedContainer();
+      NMAuditLogger.logSuccess(container.user,
+          AuditConstants.FINISH_KILLED_CONTAINER, "ContainerImpl",
+          container.containerId.getApplicationAttemptId().getApplicationId(),
+          container.containerId);
+      super.transition(container, event);
+    }
+  }
+
+  /**
+   * Handle the following transition:
+   * - LOCALIZATION_FAILED -> DONE upon CONTAINER_RESOURCES_CLEANEDUP
+   */
+  static class LocalizationFailedToDoneTransition extends
+      ContainerDoneTransition {
+    @Override
+    public void transition(ContainerImpl container, ContainerEvent event) {
+      container.metrics.failedContainer();
+      NMAuditLogger.logFailure(container.user,
+          AuditConstants.FINISH_FAILED_CONTAINER, "ContainerImpl",
+          "Container failed with state: " + container.getContainerState(),
+          container.containerId.getApplicationAttemptId().getApplicationId(),
+          container.containerId);
+      super.transition(container, event);
+    }
+  }
+
+  /**
+   * Handle the following transition:
+   * - EXITED_WITH_SUCCESS -> DONE upon CONTAINER_RESOURCES_CLEANEDUP
+   */
+  static class ExitedWithSuccessToDoneTransition extends
+      ContainerDoneTransition {
+    @Override
+    public void transition(ContainerImpl container, ContainerEvent event) {
+      container.metrics.endRunningContainer();
+      container.metrics.completedContainer();
+      NMAuditLogger.logSuccess(container.user,
+          AuditConstants.FINISH_SUCCESS_CONTAINER, "ContainerImpl",
+          container.containerId.getApplicationAttemptId().getApplicationId(),
+          container.containerId);
+      super.transition(container, event);
+    }
+  }
+
+  /**
+   * Handle the following transition:
+   * - EXITED_WITH_FAILURE -> DONE upon CONTAINER_RESOURCES_CLEANEDUP
+   */
+  static class ExitedWithFailureToDoneTransition extends
+      ContainerDoneTransition {
+    @Override
+    public void transition(ContainerImpl container, ContainerEvent event) {
+      if (container.wasLaunched) {
+        container.metrics.endRunningContainer();
+      }
+      container.metrics.failedContainer();
+      NMAuditLogger.logFailure(container.user,
+          AuditConstants.FINISH_FAILED_CONTAINER, "ContainerImpl",
+          "Container failed with state: " + container.getContainerState(),
+          container.containerId.getApplicationAttemptId().getApplicationId(),
+          container.containerId);
+      super.transition(container, event);
+    }
+  }
+
+  /**
+   * Handle the following transition:
+   * - KILLING -> DONE upon CONTAINER_RESOURCES_CLEANEDUP
+   */
+  static class KillingToDoneTransition extends
+      ContainerDoneTransition {
+    @Override
+    public void transition(ContainerImpl container, ContainerEvent event) {
+      container.metrics.killedContainer();
+      NMAuditLogger.logSuccess(container.user,
+          AuditConstants.FINISH_KILLED_CONTAINER, "ContainerImpl",
+          container.containerId.getApplicationAttemptId().getApplicationId(),
+          container.containerId);
+      super.transition(container, event);
+    }
+  }
+
+  /**
+   * Handle the following transition:
+   * CONTAINER_CLEANEDUP_AFTER_KILL -> DONE upon CONTAINER_RESOURCES_CLEANEDUP
+   */
+  static class ContainerCleanedupAfterKillToDoneTransition extends
+      ContainerDoneTransition {
+    @Override
+    public void transition(ContainerImpl container, ContainerEvent event) {
+      if (container.wasLaunched) {
+        container.metrics.endRunningContainer();
+      }
+      container.metrics.killedContainer();
+      NMAuditLogger.logSuccess(container.user,
+          AuditConstants.FINISH_KILLED_CONTAINER, "ContainerImpl",
+          container.containerId.getApplicationAttemptId().getApplicationId(),
+          container.containerId);

INS55 INS55 INS55 INS55 INS55 INS29 INS83 INS42 MOV43 INS31 INS29 INS83 INS42 MOV43 INS31 INS29 INS83 INS42 INS43 INS31 INS29 INS83 INS42 INS43 INS31 INS29 INS83 INS42 INS43 INS31 INS65 INS78 UPD83 MOV83 MOV39 UPD42 MOV42 INS44 INS44 INS8 INS65 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS65 INS42 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS65 INS42 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS65 INS42 INS78 INS83 INS39 INS42 INS44 INS44 INS8 INS21 INS21 INS21 INS66 INS66 INS42 INS43 INS42 INS43 INS42 INS21 INS21 INS21 INS66 INS66 INS42 INS43 INS42 INS43 INS42 INS21 INS21 INS21 INS21 INS66 INS66 INS42 INS43 INS42 INS43 INS42 INS25 INS21 INS21 INS21 INS66 INS66 INS42 INS43 INS42 INS43 INS42 INS21 INS21 MOV21 INS66 INS66 INS42 INS43 INS42 INS43 INS42 INS25 INS21 MOV21 INS21 INS32 INS32 INS32 UPD42 MOV42 INS42 INS32 INS32 INS48 INS42 INS42 MOV32 MOV32 MOV32 INS48 INS42 INS42 INS40 MOV8 MOV32 MOV32 INS48 INS42 INS42 MOV32 MOV32 INS48 INS42 INS42 INS40 INS8 INS32 INS48 INS40 INS42 INS40 UPD42 INS40 INS42 INS42 INS42 INS40 INS40 INS45 INS32 INS40 INS40 INS42 INS42 INS42 INS40 INS40 INS45 INS27 INS32 INS40 INS42 INS42 INS42 INS40 INS40 INS40 INS32 INS40 INS42 INS42 INS42 INS40 INS40 INS32 INS40 INS42 INS42 INS42 INS40 INS40 INS32 INS40 INS42 INS42 INS42 INS21 INS40 INS42 INS42 UPD42 INS40 INS40 INS45 INS32 INS40 INS42 INS42 INS42 INS21 INS21 INS21 INS32 INS42 INS45 INS32 INS32 MOV42 INS32 UPD42 MOV42 INS32 UPD42 MOV42 INS32 UPD42 MOV42 INS32 INS32 INS42 INS32 INS32 INS32 INS40 INS42 UPD42 MOV42 UPD42 MOV42 INS40 INS42 INS40 UPD42 MOV42 INS40 INS42 INS40 UPD42 MOV42 INS40 UPD42 MOV42 INS40 INS42 INS40 INS42 INS40 INS42 INS42 INS42 INS40 INS40 INS45 INS32 INS40 INS40 INS42 INS40 UPD42 INS32 INS42 INS14 INS40 INS42 INS43 INS14 INS42 INS43 INS42 INS14 INS43 INS42 INS14 INS43 INS42 INS14 INS43 INS42 DEL83 DEL83 DEL83 DEL42 DEL14 DEL59 DEL23 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL45 DEL79 DEL43 DEL42 DEL32 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL49 DEL21 DEL21 DEL21 DEL10 DEL42 DEL49 DEL42 DEL25 DEL42 DEL49 DEL21 DEL21 DEL10 DEL42 DEL49 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL42 DEL49 DEL21 DEL21 DEL50 DEL8 DEL31 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL52 DEL42 DEL22 DEL32