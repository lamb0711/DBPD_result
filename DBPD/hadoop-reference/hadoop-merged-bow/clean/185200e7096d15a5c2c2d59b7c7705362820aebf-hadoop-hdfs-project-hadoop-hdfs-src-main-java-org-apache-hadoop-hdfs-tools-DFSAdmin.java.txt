HDFS-6876. Archival Storage: support set/get storage policy in DFSAdmin. Contributed by Jing Zhao.

+import java.io.FileNotFoundException;
+import org.apache.hadoop.hdfs.BlockStoragePolicy;
+import org.apache.hadoop.hdfs.protocol.HdfsFileStatus;
-import org.apache.hadoop.ipc.RPC;
-import org.apache.hadoop.ipc.RemoteException;
-import org.apache.hadoop.ipc.ProtobufRpcEngine;
-import org.apache.hadoop.ipc.RefreshCallQueueProtocol;
+import org.apache.hadoop.ipc.ProtobufRpcEngine;
+import org.apache.hadoop.ipc.RPC;
+import org.apache.hadoop.ipc.RefreshCallQueueProtocol;
+import org.apache.hadoop.ipc.RemoteException;
+import org.apache.hadoop.ipc.protocolPB.GenericRefreshProtocolClientSideTranslatorPB;
+import org.apache.hadoop.ipc.protocolPB.GenericRefreshProtocolPB;
-import org.apache.hadoop.ipc.protocolPB.GenericRefreshProtocolClientSideTranslatorPB;
-import org.apache.hadoop.ipc.protocolPB.GenericRefreshProtocolPB;
+  public int setStoragePolicy(String[] argv) throws IOException {
+    DistributedFileSystem dfs = getDFS();
+    dfs.setStoragePolicy(new Path(argv[1]), argv[2]);
+    System.out.println("Set storage policy " + argv[2] + " on " + argv[1]);
+    return 0;
+  }
+
+  public int getStoragePolicy(String[] argv) throws IOException {
+    DistributedFileSystem dfs = getDFS();
+    HdfsFileStatus status = dfs.getClient().getFileInfo(argv[1]);
+    if (status == null) {
+      throw new FileNotFoundException("File/Directory does not exist: "
+          + argv[1]);
+    }
+    byte storagePolicyId = status.getStoragePolicy();
+    BlockStoragePolicy.Suite suite = BlockStoragePolicy
+        .readBlockStorageSuite(getConf());
+    BlockStoragePolicy policy = suite.getPolicy(storagePolicyId);
+    if (policy != null) {
+      System.out.println("The storage policy of " + argv[1] + ":\n" + policy);
+      return 0;
+    } else {
+      throw new IOException("Cannot identify the storage policy for " + argv[1]);
+    }
+  }
+
+      "\t[-setStoragePolicy path policyName\n" +
+      "\t[-getStoragePolicy path\n" +
-    
+
+    String setStoragePolicy = "-setStoragePolicy path policyName\n"
+        + "\tSet the storage policy for a file/directory.\n";
+
+    String getStoragePolicy = "-getStoragePolicy path\n"
+        + "\tGet the storage policy for a file/directory.\n";
+
+    } else if ("setStoragePolicy".equalsIgnoreCase(cmd))  {
+      System.out.println(setStoragePolicy);
+    } else if ("getStoragePolicy".equalsIgnoreCase(cmd))  {
+      System.out.println(getStoragePolicy);
+      System.out.println(setStoragePolicy);
+      System.out.println(getStoragePolicy);
+    } else if ("-setStoragePolicy".equals(cmd)) {
+      System.err.println("Usage: java DFSAdmin"
+          + " [-setStoragePolicy path policyName]");
+    } else if ("-getStoragePolicy".equals(cmd)) {
+      System.err.println("Usage: java DFSAdmin"
+          + " [-getStoragePolicy path]");
+      System.err.println("           [-setStoragePolicy path policyName]");
+      System.err.println("           [-getStoragePolicy path]");
+    } else if ("-setStoragePolicy".equals(cmd)) {
+      if (argv.length != 3) {
+        printUsage(cmd);
+        return exitCode;
+      }
+    } else if ("-getStoragePolicy".equals(cmd)) {
+      if (argv.length != 2) {
+        printUsage(cmd);
+        return exitCode;
+      }
+      } else if ("-setStoragePolicy".equals(cmd)) {
+        exitCode = setStoragePolicy(argv);
+      } else if ("-getStoragePolicy".equals(cmd)) {
+        exitCode = getStoragePolicy(argv);

MOV26 MOV26 MOV26 MOV26 MOV26 INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS31 INS83 INS39 INS42 INS44 INS43 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS5 INS42 INS42 INS60 INS21 INS21 INS41 INS5 INS42 INS42 INS60 INS60 INS25 INS60 INS60 INS60 INS25 INS60 INS60 INS43 INS85 INS43 INS59 INS32 INS32 INS34 INS43 INS85 INS43 INS59 INS43 INS59 INS27 INS8 INS39 INS59 INS43 INS59 INS43 INS59 INS27 INS8 INS8 INS43 INS59 INS43 INS59 INS25 INS42 INS42 INS42 INS32 INS42 INS42 INS14 INS2 INS40 INS42 INS27 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS53 INS42 INS32 INS40 INS42 INS32 INS42 INS42 INS32 INS42 INS33 INS21 INS41 INS53 INS42 INS42 INS27 INS42 INS42 INS27 MOV32 MOV8 INS25 INS42 INS43 INS2 INS42 INS34 INS45 INS2 INS45 INS2 INS42 INS32 INS42 INS2 INS14 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS34 INS14 INS45 INS45 INS45 INS45 INS45 INS45 INS32 INS8 MOV25 INS42 INS42 INS34 INS42 INS34 INS42 INS34 INS42 INS42 INS42 INS34 INS43 INS27 INS42 INS40 INS42 INS27 INS43 INS27 INS45 INS42 INS42 INS21 INS32 INS8 INS42 INS45 INS2 INS45 INS2 INS45 INS42 INS42 INS45 INS2 INS32 INS45 INS42 INS42 INS21 INS42 INS34 INS42 INS34 INS42 INS34 INS40 INS42 INS27 INS32 INS45 INS45 INS40 INS42 INS27 INS45 INS45 INS25 INS32 INS8 INS25 INS45 INS42 INS42 INS25 INS32 INS8 INS27 INS8 INS45 INS42 INS42 INS25 INS40 INS34 INS21 INS41 INS27 INS8 INS25 INS32 INS42 INS40 INS34 INS21 INS41 MOV32 MOV8 INS25 INS42 INS42 INS32 INS42 INS32 INS8 MOV25 INS42 INS42 INS45 INS42 INS42 INS21 INS32 INS8 INS25 INS32 INS45 INS42 INS42 INS21 INS21 INS21 INS32 INS8 INS25 INS40 INS42 INS42 INS32 INS21 INS21 INS32 INS32 INS45 INS42 INS42 INS21 INS32 INS8 MOV25 INS40 INS42 INS42 INS32 INS32 INS40 INS42 INS45 INS40 INS42 INS45 INS7 INS45 INS42 INS42 INS21 INS40 INS42 INS42 INS40 INS42 INS42 INS42 INS32 INS7 INS42 INS42 INS42 INS32 INS42 INS42