Merge r1550130 through r1555020 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1555021 13f79535-47bb-0310-9956-ffa450edef68

-import java.net.InetSocketAddress;
+import org.apache.hadoop.yarn.api.protocolrecords.KillApplicationResponse;
-  protected InetSocketAddress rmAddress;
-  protected long statePollIntervalMillis;
+  protected long submitPollIntervalMillis;
+  private long asyncApiPollIntervalMillis;
-  private static InetSocketAddress getRmAddress(Configuration conf) {
-    return conf.getSocketAddr(YarnConfiguration.RM_ADDRESS,
-      YarnConfiguration.DEFAULT_RM_ADDRESS, YarnConfiguration.DEFAULT_RM_PORT);
-  }
-
+  @SuppressWarnings("deprecation")
-    this.rmAddress = getRmAddress(conf);
-    statePollIntervalMillis = conf.getLong(
+    asyncApiPollIntervalMillis =
+        conf.getLong(YarnConfiguration.YARN_CLIENT_APPLICATION_CLIENT_PROTOCOL_POLL_INTERVAL_MS,
+          YarnConfiguration.DEFAULT_YARN_CLIENT_APPLICATION_CLIENT_PROTOCOL_POLL_INTERVAL_MS);
+    submitPollIntervalMillis = asyncApiPollIntervalMillis;
+    if (conf.get(YarnConfiguration.YARN_CLIENT_APP_SUBMISSION_POLL_INTERVAL_MS)
+        != null) {
+      submitPollIntervalMillis = conf.getLong(
-        YarnConfiguration.DEFAULT_YARN_CLIENT_APP_SUBMISSION_POLL_INTERVAL_MS);
+        YarnConfiguration.DEFAULT_YARN_CLIENT_APPLICATION_CLIENT_PROTOCOL_POLL_INTERVAL_MS);
+    }
-        Thread.sleep(statePollIntervalMillis);
+        Thread.sleep(submitPollIntervalMillis);
-
-    LOG.info("Submitted application " + applicationId + " to ResourceManager"
-        + " at " + rmAddress);
+    LOG.info("Submitted application " + applicationId);
-    LOG.info("Killing application " + applicationId);
-    rmClient.forceKillApplication(request);
+
+    try {
+      int pollCount = 0;
+      while (true) {
+        KillApplicationResponse response =
+            rmClient.forceKillApplication(request);
+        if (response.getIsKillCompleted()) {
+          break;
+        }
+        if (++pollCount % 10 == 0) {
+          LOG.info("Watiting for application " + applicationId
+              + " to be killed.");
+        }
+        Thread.sleep(asyncApiPollIntervalMillis);
+      }
+    } catch (InterruptedException e) {
+      LOG.error("Interrupted while waiting for application " + applicationId
+          + " to be killed.");
+    }
+    LOG.info("Killed application " + applicationId);

MOV26 UPD40 INS31 INS39 UPD83 INS79 MOV78 UPD83 MOV83 INS39 INS42 MOV44 MOV43 INS8 INS8 UPD42 UPD42 INS42 INS45 INS21 INS21 INS25 MOV21 MOV60 MOV21 INS54 INS21 INS7 INS7 INS27 INS8 INS8 INS12 INS32 INS42 INS32 INS42 INS42 INS32 INS33 MOV21 INS60 INS61 INS44 INS8 INS42 INS42 INS27 MOV42 UPD42 MOV42 UPD40 MOV40 UPD40 MOV40 MOV42 INS42 INS40 INS39 INS59 INS9 INS8 INS43 INS42 INS21 INS45 INS42 UPD42 INS42 INS34 INS60 INS25 INS25 MOV21 INS42 INS32 UPD40 INS43 INS59 INS32 INS8 INS27 INS8 INS32 INS42 INS42 INS27 UPD42 INS42 INS42 MOV32 INS42 INS42 INS10 INS27 INS34 MOV21 INS42 INS42 INS42 INS45 INS42 INS45 INS38 INS34 INS42 UPD45 INS45 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42 DEL44 DEL40 DEL32 DEL41 DEL8 DEL31 DEL83 DEL39 DEL42 DEL52 DEL42 DEL22 DEL42 DEL32 DEL7 DEL21 DEL8 DEL31 DEL45 DEL45 DEL42 DEL8