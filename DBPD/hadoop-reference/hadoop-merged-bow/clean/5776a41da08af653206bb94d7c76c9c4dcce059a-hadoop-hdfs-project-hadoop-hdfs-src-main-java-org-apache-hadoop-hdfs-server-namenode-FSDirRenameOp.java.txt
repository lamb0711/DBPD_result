HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.

-import org.apache.hadoop.hdfs.protocol.FSLimitException;
+import static org.apache.hadoop.hdfs.protocol.FSLimitException.MaxDirectoryItemsExceededException;
+import static org.apache.hadoop.hdfs.protocol.FSLimitException.PathComponentTooLongException;
-  static void verifyQuotaForRename(FSDirectory fsd,
-      INode[] src, INode[] dst)
-      throws QuotaExceededException {
+  private static void verifyQuotaForRename(FSDirectory fsd, INodesInPath src,
+      INodesInPath dst) throws QuotaExceededException {
-    while(src[i] == dst[i]) { i++; }
+    while(src.getINode(i) == dst.getINode(i)) { i++; }
-    final Quota.Counts delta = src[src.length - 1].computeQuotaUsage();
+    final Quota.Counts delta = src.getLastINode().computeQuotaUsage();
-    final int dstIndex = dst.length - 1;
-    if (dst[dstIndex] != null) {
-      delta.subtract(dst[dstIndex].computeQuotaUsage());
+    final INode dstINode = dst.getLastINode();
+    if (dstINode != null) {
+      delta.subtract(dstINode.computeQuotaUsage());
-    FSDirectory.verifyQuota(dst, dstIndex, delta.get(Quota.NAMESPACE),
-        delta.get(Quota.DISKSPACE), src[i - 1]);
+    FSDirectory.verifyQuota(dst, dst.length() - 1, delta.get(Quota.NAMESPACE),
+        delta.get(Quota.DISKSPACE), src.getINode(i - 1));
-  static void verifyFsLimitsForRename(FSDirectory fsd,
-      INodesInPath srcIIP,
+  static void verifyFsLimitsForRename(FSDirectory fsd, INodesInPath srcIIP,
-      throws FSLimitException.PathComponentTooLongException,
-          FSLimitException.MaxDirectoryItemsExceededException {
+      throws PathComponentTooLongException, MaxDirectoryItemsExceededException {
-    INode[] dstInodes = dstIIP.getINodes();
-    int pos = dstInodes.length - 1;
-    fsd.verifyMaxComponentLength(dstChildName, dstInodes, pos);
+    final String parentPath = dstIIP.getParentPath();
+    fsd.verifyMaxComponentLength(dstChildName, parentPath);
-      fsd.verifyMaxDirItems(dstInodes, pos);
+      fsd.verifyMaxDirItems(dstIIP.getINode(-2).asDirectory(), parentPath);
-    verifyQuotaForRename(fsd, srcIIP.getINodes(), dstIIP.getINodes());
+    verifyQuotaForRename(fsd, srcIIP, dstIIP);
-      final long removedSrc = fsd.removeLastINode(srcIIP);
+      final long removedSrc = fsd.removeLastINode(tx.srcIIP);
-    if (dstIIP.getINodes().length == 1) {
+    if (dstIIP.length() == 1) {
-    verifyQuotaForRename(fsd, srcIIP.getINodes(), dstIIP.getINodes());
+    verifyQuotaForRename(fsd, srcIIP, dstIIP);
-    final long removedSrc = fsd.removeLastINode(srcIIP);
+    final long removedSrc = fsd.removeLastINode(tx.srcIIP);
-    if (srcIIP.getINodes().length == 1) {
+    if (srcIIP.length() == 1) {
-      this.srcIIP = srcIIP;
-        srcIIP.setLastINode(srcChild);
+        srcIIP = INodesInPath.replace(srcIIP, srcIIP.length() - 1, srcChild);
+      this.srcIIP = srcIIP;

MOV26 INS26 INS40 UPD40 INS83 UPD43 UPD43 INS43 INS43 INS42 INS42 MOV21 UPD42 MOV42 INS42 MOV43 INS83 INS43 INS32 INS32 UPD42 INS32 INS42 INS27 INS32 UPD42 MOV42 UPD42 UPD42 MOV42 MOV42 INS32 MOV42 MOV42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS34 INS42 INS42 MOV27 UPD42 MOV42 UPD42 MOV42 INS40 MOV42 UPD42 MOV42 INS42 INS42 UPD42 MOV42 INS42 INS32 UPD42 INS7 INS42 INS32 INS42 INS40 INS42 INS32 UPD42 MOV42 INS42 INS38 INS42 INS42 MOV42 INS27 MOV42 INS34 INS32 INS34 UPD42 MOV42 INS42 DEL43 DEL85 DEL5 DEL85 DEL5 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL40 DEL34 DEL27 DEL2 DEL39 DEL40 DEL34 DEL27 DEL42 DEL42 DEL2 DEL42 DEL42 DEL2 DEL42 DEL2 DEL40 DEL40 DEL43 DEL85 DEL5 DEL39 DEL42 DEL40 DEL34 DEL27 DEL59 DEL60 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL22 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL22 DEL32