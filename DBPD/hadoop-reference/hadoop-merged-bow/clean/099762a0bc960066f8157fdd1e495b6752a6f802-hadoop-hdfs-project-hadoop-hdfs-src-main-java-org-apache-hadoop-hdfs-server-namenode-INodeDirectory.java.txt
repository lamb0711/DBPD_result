HDFS-4177. Add a snapshot parameter to INodeDirectory.getChildrenList() for selecting particular snapshot children list views.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1408923 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.util.ReadOnlyList;
-  private List<INode> children;
+  private List<INode> children = null;
-    this.children = null;
-    this.children = null;
-    this.children = other.getChildren();
+    this.children = other.children;
-  
-  INode getChild(String name) {
-    return getChildINode(DFSUtil.string2Bytes(name));
+
+  private INode getChild(byte[] name, Snapshot snapshot) {
+    final ReadOnlyList<INode> c = getChildrenList(snapshot);
+    final int i = ReadOnlyList.Util.binarySearch(c, name);
+    return i < 0? null: c.get(i);
-  private INode getChildINode(byte[] name) {
-    if (children == null) {
-      return null;
-    }
-    int low = Collections.binarySearch(children, name);
-    if (low >= 0) {
-      return children.get(low);
-    }
-    return null;
-  }
-
-  /**
-   * @return the INode of the last component in components, or null if the last
-   * component does not exist.
-   */
-  private INode getNode(byte[][] components, boolean resolveLink
+  /** @return the {@link INodesInPath} containing only the last inode. */
+  INodesInPath getINodesInPath(String path, boolean resolveLink
-    INodesInPath inodesInPath = getExistingPathINodes(components, 1,
-        resolveLink);
-    return inodesInPath.inodes[0];
+    return getExistingPathINodes(getPathComponents(path), 1, resolveLink);
-  /**
-   * This is the external interface
-   */
+  /** @return the last inode in the path. */
-    return getNode(getPathComponents(path), resolveLink);
+    return getINodesInPath(path, resolveLink).getINode(0);
-        curNode = parentDir.getChildINode(components[count + 1]);
+        curNode = parentDir.getChild(components[count + 1],
+            existing.getPathSnapshot());
-   * @return an empty list if the children list is null;
-   *         otherwise, return the children list.
-   *         The returned list should not be modified.
+   * @return the current children list if the specified snapshot is null;
+   *         otherwise, return the children list corresponding to the snapshot.
+   *         Note that the returned list is never null.
-  public List<INode> getChildrenList() {
-    return children==null ? EMPTY_LIST : children;
-  }
-  /** @return the children list which is possibly null. */
-  public List<INode> getChildren() {
-    return children;
+  public ReadOnlyList<INode> getChildrenList(final Snapshot snapshot) {
+    //TODO: use snapshot to select children list
+    return children == null ? EMPTY_READ_ONLY_LIST
+        : ReadOnlyList.Util.asReadOnlyList(children);
-     * @return the snapshot associated to the path.
-     * @see #snapshot
+     * For non-snapshot paths, return the latest snapshot found in the path.
+     * For snapshot paths, return null.
-    public Snapshot getSnapshot() {
-      return snapshot;
+    public Snapshot getLatestSnapshot() {
+      return isSnapshot? null: snapshot;
+    }
+    
+    /**
+     * For snapshot paths, return the snapshot specified in the path.
+     * For non-snapshot paths, return null.
+     */
+    public Snapshot getPathSnapshot() {
+      return isSnapshot? snapshot: null;
+    /** @return the i-th inode. */
+    INode getINode(int i) {
+      return inodes[i];
+    }
+    
-        b.append("]");
+        b.append("], length=").append(inodes.length);

INS26 MOV31 INS40 INS31 INS31 INS83 MOV43 MOV42 MOV44 MOV44 INS8 MOV43 UPD42 MOV43 MOV29 MOV83 UPD74 MOV74 MOV42 INS44 MOV8 INS31 INS31 INS33 UPD43 UPD42 INS60 MOV60 INS41 UPD65 INS43 INS42 INS41 UPD43 INS83 INS43 INS42 INS29 INS83 INS43 INS42 INS8 UPD42 INS29 MOV43 INS42 INS44 INS8 UPD42 INS83 INS74 INS59 INS83 INS16 UPD66 INS65 INS66 UPD66 INS42 INS32 UPD66 UPD66 UPD66 UPD42 UPD42 MOV42 INS65 INS42 INS41 UPD65 INS65 INS39 INS42 INS41 INS40 INS43 MOV43 INS42 INS32 UPD42 INS27 INS33 INS32 INS42 UPD42 INS34 INS32 INS42 INS34 UPD42 INS32 INS66 INS66 INS16 UPD66 INS66 INS16 INS66 INS2 INS42 INS42 INS42 INS40 UPD42 UPD42 MOV42 MOV34 UPD42 MOV42 MOV42 UPD42 MOV42 UPD42 MOV42 UPD42 MOV42 MOV42 INS40 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS33 INS42 INS42 INS32 INS32 INS42 INS40 UPD42 INS32 MOV42 MOV42 UPD45 MOV45 INS42 INS42 DEL52 DEL42 DEL22 DEL33 DEL7 DEL21 DEL52 DEL42 DEL22 DEL33 DEL7 DEL21 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL41 DEL8 DEL31 DEL83 DEL42 DEL42 DEL33 DEL27 DEL33 DEL41 DEL8 DEL25 DEL27 DEL32 DEL41 DEL8 DEL25 DEL33 DEL41 DEL8 DEL31 DEL66 DEL83 DEL39 DEL85 DEL85 DEL5 DEL42 DEL42 DEL34 DEL32 DEL59 DEL60 DEL40 DEL34 DEL2 DEL41 DEL42 DEL31 DEL66 DEL65 DEL29 DEL83 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL41 DEL8 DEL31 DEL42 DEL67 DEL65 DEL42 DEL32