HDFS-13536. [PROVIDED Storage] HA for InMemoryAliasMap. Contributed by Virajith Jalaparti.

+import org.apache.hadoop.hdfs.HAUtil;
+import org.apache.hadoop.hdfs.NameNodeProxies;
+import org.apache.hadoop.hdfs.protocol.HdfsConstants;
+import org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider;
+import org.apache.hadoop.hdfs.server.namenode.ha.InMemoryAliasMapFailoverProxyProvider;
-import org.apache.hadoop.ipc.ProtobufRpcEngine;
+import java.io.Closeable;
-import java.net.InetSocketAddress;
+import java.net.URI;
+import java.net.URISyntaxException;
+import java.util.ArrayList;
+import java.util.Collection;
-import static org.apache.hadoop.hdfs.DFSConfigKeys.DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS_DEFAULT;
+import static org.apache.hadoop.hdfs.DFSUtil.addKeySuffixes;
+import static org.apache.hadoop.hdfs.DFSUtil.createUri;
+import static org.apache.hadoop.hdfs.DFSUtilClient.getNameServiceIds;
+import static org.apache.hadoop.hdfs.client.HdfsClientConfigKeys.Failover.PROXY_PROVIDER_KEY_PREFIX;
-    implements InMemoryAliasMapProtocol {
+    implements InMemoryAliasMapProtocol, Closeable {
-  public InMemoryAliasMapProtocolClientSideTranslatorPB(Configuration conf) {
-    String addr = conf.getTrimmed(DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS,
-        DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS_DEFAULT);
-    InetSocketAddress aliasMapAddr = NetUtils.createSocketAddr(addr);
+  public InMemoryAliasMapProtocolClientSideTranslatorPB(
+      AliasMapProtocolPB rpcProxy) {
+    this.rpcProxy = rpcProxy;
+  }
-    RPC.setProtocolEngine(conf, AliasMapProtocolPB.class,
-        ProtobufRpcEngine.class);
-    LOG.info("Connecting to address: " + addr);
-    try {
-      rpcProxy = RPC.getProxy(AliasMapProtocolPB.class,
-          RPC.getProtocolVersion(AliasMapProtocolPB.class), aliasMapAddr, null,
-          conf, NetUtils.getDefaultSocketFactory(conf), 0);
-    } catch (IOException e) {
-      throw new RuntimeException(
-          "Error in connecting to " + addr + " Got: " + e);
+  public static Collection<InMemoryAliasMapProtocol> init(Configuration conf) {
+    Collection<InMemoryAliasMapProtocol> aliasMaps = new ArrayList<>();
+    // Try to connect to all configured nameservices as it is not known which
+    // nameservice supports the AliasMap.
+    for (String nsId : getNameServiceIds(conf)) {
+      try {
+        URI namenodeURI = null;
+        Configuration newConf = new Configuration(conf);
+        if (HAUtil.isHAEnabled(conf, nsId)) {
+          // set the failover-proxy provider if HA is enabled.
+          newConf.setClass(
+              addKeySuffixes(PROXY_PROVIDER_KEY_PREFIX, nsId),
+              InMemoryAliasMapFailoverProxyProvider.class,
+              AbstractNNFailoverProxyProvider.class);
+          namenodeURI = new URI(HdfsConstants.HDFS_URI_SCHEME + "://" + nsId);
+        } else {
+          String key =
+              addKeySuffixes(DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS, nsId);
+          String addr = conf.get(key);
+          if (addr != null) {
+            namenodeURI = createUri(HdfsConstants.HDFS_URI_SCHEME,
+                NetUtils.createSocketAddr(addr));
+          }
+        }
+        if (namenodeURI != null) {
+          aliasMaps.add(NameNodeProxies
+              .createProxy(newConf, namenodeURI, InMemoryAliasMapProtocol.class)
+              .getProxy());
+          LOG.info("Connected to InMemoryAliasMap at {}", namenodeURI);
+        }
+      } catch (IOException | URISyntaxException e) {
+        LOG.warn("Exception in connecting to InMemoryAliasMap for nameservice "
+            + "{}: {}", nsId, e);
+      }
+    // if a separate AliasMap is configured using
+    // DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS, try to connect it.
+    if (conf.get(DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS) != null) {
+      URI uri = createUri("hdfs", NetUtils.createSocketAddr(
+          conf.get(DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS)));
+      try {
+        aliasMaps.add(NameNodeProxies
+            .createProxy(conf, uri, InMemoryAliasMapProtocol.class).getProxy());
+        LOG.info("Connected to InMemoryAliasMap at {}", uri);
+      } catch (IOException e) {
+        LOG.warn("Exception in connecting to InMemoryAliasMap at {}: {}", uri,
+            e);
+      }
+    }
+    return aliasMaps;
-  public void stop() {
-    RPC.stopProxy(rpcProxy);
+  @Override
+  public void close() throws IOException {
+    LOG.info("Stopping rpcProxy in" +
+        "InMemoryAliasMapProtocolClientSideTranslatorPB");
+    if (rpcProxy != null) {
+      RPC.stopProxy(rpcProxy);
+    }

MOV26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 UPD40 INS40 INS40 INS40 INS40 INS40 UPD40 INS40 INS40 INS40 INS40 INS40 INS40 UPD40 INS43 INS31 INS42 INS83 INS42 INS44 INS8 INS83 INS74 INS42 INS78 UPD42 INS43 INS8 MOV43 INS42 INS21 INS43 INS43 INS60 INS70 INS25 INS41 INS42 INS42 INS21 INS25 INS7 INS42 INS42 INS74 INS59 INS44 INS32 INS8 INS27 INS8 INS42 INS32 INS27 MOV8 INS22 INS42 INS43 INS43 UPD42 MOV42 INS14 MOV43 INS42 UPD42 MOV42 UPD42 MOV42 INS54 INS32 INS33 INS60 INS54 INS42 INS42 INS27 INS42 INS33 INS52 INS42 INS42 INS42 INS74 INS8 INS12 INS42 INS42 INS42 INS43 INS59 INS8 MOV12 INS45 INS45 INS43 INS60 MOV60 INS25 INS25 INS44 INS8 INS42 INS42 INS32 INS21 INS21 INS42 INS43 INS59 UPD43 INS32 INS8 INS8 INS27 INS8 INS84 INS42 INS21 UPD42 MOV42 INS45 MOV32 INS32 INS32 INS21 INS42 INS42 INS33 UPD42 UPD42 INS14 INS42 INS42 INS42 INS42 MOV21 MOV21 INS60 INS60 INS25 INS42 INS33 INS21 INS21 INS43 INS43 INS32 UPD42 INS32 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS32 INS43 INS42 INS7 INS43 INS59 INS43 INS59 INS27 INS8 INS32 INS32 INS42 INS42 INS42 INS42 INS27 INS42 INS42 MOV42 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS42 INS42 INS42 UPD42 UPD42 INS32 INS42 INS14 INS42 INS42 INS32 UPD42 MOV42 INS42 INS32 INS42 INS33 INS21 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS45 INS45 INS42 INS42 INS42 INS42 INS57 UPD42 MOV42 INS42 INS42 INS43 UPD43 INS43 INS27 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS42 INS7 MOV32 UPD42 MOV42 INS43 INS42 UPD42 INS42 INS40 UPD45 MOV45 UPD42 MOV42 INS42 INS32 UPD42 UPD42 INS42 INS42 INS42 INS42 INS40 MOV32 UPD43 UPD42 DEL42 DEL42 DEL42 DEL27 DEL32 DEL42 DEL43 DEL45 DEL42 DEL45 DEL42 DEL27 DEL14 DEL53 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL43 DEL57 DEL33 DEL34 DEL32 DEL7 DEL21 DEL8 DEL54