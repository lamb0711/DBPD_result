YARN-6612. Update fair scheduler policies to be aware of resource types. (Contributed by Daniel Templeton via Yufei Gu)

-import org.apache.hadoop.yarn.server.resourcemanager.resource.ResourceType;
-      ResourceType type) {
+      String type) {
-      ResourceType type) {
+      String type) {
-      Resource totalResources, ResourceType type, boolean isSteadyShare) {
+      Resource totalResources, String type, boolean isSteadyShare) {
-    Collection<Schedulable> schedulables = new ArrayList<Schedulable>();
+    Collection<Schedulable> schedulables = new ArrayList<>();
-      long maxShare = getResourceValue(sched.getMaxShare(), type);
+      long maxShare = sched.getMaxShare().getResourceValue(type);
-    long totalResource = Math.max((getResourceValue(totalResources, type) -
+    long totalResource = Math.max((totalResources.getResourceValue(type) -
+      Resource target;
+
-        setResourceValue(computeShare(sched, right, type),
-            ((FSQueue) sched).getSteadyFairShare(), type);
+        target = ((FSQueue) sched).getSteadyFairShare();
-        setResourceValue(
-            computeShare(sched, right, type), sched.getFairShare(), type);
+        target = sched.getFairShare();
+
+      target.setResourceValue(type, (long)computeShare(sched, right, type));
-      Collection<? extends Schedulable> schedulables, ResourceType type) {
+      Collection<? extends Schedulable> schedulables, String type) {
-      ResourceType type) {
-    double share = sched.getWeights().getWeight(type) * w2rRatio;
-    share = Math.max(share, getResourceValue(sched.getMinShare(), type));
-    share = Math.min(share, getResourceValue(sched.getMaxShare(), type));
+      String type) {
+    double share = sched.getWeight() * w2rRatio;
+    share = Math.max(share, sched.getMinShare().getResourceValue(type));
+    share = Math.min(share, sched.getMaxShare().getResourceValue(type));
-      boolean isSteadyShare, ResourceType type) {
+      boolean isSteadyShare, String type) {
-        setResourceValue(fixedShare,
-            isSteadyShare
-                ? ((FSQueue)sched).getSteadyFairShare()
-                : sched.getFairShare(),
-            type);
+        Resource target;
+
+        if (isSteadyShare) {
+          target = ((FSQueue)sched).getSteadyFairShare();
+        } else {
+          target = sched.getFairShare();
+        }
+
+        target.setResourceValue(type, fixedShare);
-      boolean isSteadyShare, ResourceType type) {
+      boolean isSteadyShare, String type) {
-    if (getResourceValue(sched.getMaxShare(), type) <= 0) {
+    if (sched.getMaxShare().getResourceValue(type) <= 0) {
-    if (sched.getWeights().getWeight(type) <= 0) {
-      long minShare = getResourceValue(sched.getMinShare(), type);
+    if (sched.getWeight() <= 0) {
+      long minShare = sched.getMinShare().getResourceValue(type);
-
-  private static long getResourceValue(Resource resource, ResourceType type) {
-    switch (type) {
-    case MEMORY:
-      return resource.getMemorySize();
-    case CPU:
-      return resource.getVirtualCores();
-    default:
-      throw new IllegalArgumentException("Invalid resource");
-    }
-  }
-  
-  private static void setResourceValue(long val, Resource resource, ResourceType type) {
-    switch (type) {
-    case MEMORY:
-      resource.setMemorySize(val);
-      break;
-    case CPU:
-      resource.setVirtualCores((int)val);
-      break;
-    default:
-      throw new IllegalArgumentException("Invalid resource");
-    }
-  }

UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD43 UPD42 UPD42 UPD42 MOV8 UPD42 UPD42 UPD42 UPD42 INS60 INS25 MOV42 UPD74 MOV43 INS59 INS42 MOV8 INS8 MOV42 MOV42 MOV42 MOV42 INS42 INS21 INS42 INS11 MOV42 INS60 INS25 INS21 MOV42 INS7 INS7 INS39 MOV32 MOV43 INS59 INS42 INS8 INS8 INS32 UPD42 UPD42 INS42 MOV32 INS42 MOV32 INS42 MOV21 INS21 INS42 INS42 INS42 INS42 INS7 INS7 INS42 MOV32 INS42 MOV32 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL25 DEL8 DEL42 DEL32 DEL42 DEL42 DEL42 DEL42 DEL16 DEL42 DEL32 DEL42 DEL32 DEL42 DEL83 DEL83 DEL39 DEL42 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL49 DEL42 DEL42 DEL32 DEL41 DEL42 DEL49 DEL42 DEL42 DEL32 DEL41 DEL49 DEL42 DEL43 DEL45 DEL14 DEL53 DEL50 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL39 DEL42 DEL44 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL49 DEL42 DEL42 DEL42 DEL32 DEL21 DEL10 DEL42 DEL49 DEL42 DEL42 DEL39 DEL42 DEL11 DEL32 DEL21 DEL10 DEL49 DEL42 DEL43 DEL45 DEL14 DEL53 DEL50 DEL8 DEL31