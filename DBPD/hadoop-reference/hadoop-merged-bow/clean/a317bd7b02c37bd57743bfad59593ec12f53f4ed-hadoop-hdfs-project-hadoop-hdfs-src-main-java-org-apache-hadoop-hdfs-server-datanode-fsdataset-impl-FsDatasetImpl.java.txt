HDFS-6925. DataNode should attempt to place replicas on transient storage first if lazyPersist flag is received. (Arpit Agarwal)

+import com.google.common.base.Preconditions;
+import com.google.common.collect.TreeMultimap;
+import org.apache.commons.io.FileUtils;
-    FsVolumeImpl fsVolume = new FsVolumeImpl(
+    FsVolumeImpl fsVolume = FsVolumeImplAllocator.createVolume(
-    return getBlockFile(b.getBlockPoolId(), b.getLocalBlock());
+    return getBlockFile(b.getBlockPoolId(), b.getBlockId());
-  File getBlockFile(String bpid, Block b) throws IOException {
-    File f = validateBlockFile(bpid, b);
+  File getBlockFile(String bpid, long blockId) throws IOException {
+    File f = validateBlockFile(bpid, blockId);
-      throw new IOException("Block " + b + " is not valid.");
+      throw new IOException("BlockId " + blockId + " is not valid.");
-      ExtendedBlock b) throws IOException {
-    ReplicaInfo replicaInfo = volumeMap.get(b.getBlockPoolId(), 
+      ExtendedBlock b, boolean allowLazyPersist) throws IOException {
+    ReplicaInfo replicaInfo = volumeMap.get(b.getBlockPoolId(),
-    FsVolumeImpl v = volumes.getNextVolume(storageType, b.getNumBytes());
-    // create a rbw file to hold block in the designated volume
+    FsVolumeImpl v;
+    while (true) {
+      try {
+        if (allowLazyPersist) {
+          // First try to place the block on a transient volume.
+          v = volumes.getNextTransientVolume(b.getNumBytes());
+        } else {
+          v = volumes.getNextVolume(storageType, b.getNumBytes());
+        }
+      } catch (DiskOutOfSpaceException de) {
+        if (allowLazyPersist) {
+          allowLazyPersist = false;
+          continue;
+        }
+        throw de;
+      }
+      break;
+    }
+    // create an rbw file to hold block in the designated volume
-  File validateBlockFile(String bpid, Block b) {
+  File validateBlockFile(String bpid, long blockId) {
-      f = getFile(bpid, b.getBlockId());
+      f = getFile(bpid, blockId);
-      LOG.debug("b=" + b + ", f=" + f);
+      LOG.debug("blockId=" + blockId + ", f=" + f);
+        if (volume.isTransientStorage()) {
+          LOG.warn("Caching not supported on block with id " + blockId +
+              " since the volume is backed by RAM.");
+          return;
+        }

INS26 INS26 INS26 INS40 INS40 INS40 INS44 INS39 INS42 INS39 INS42 INS61 INS39 INS42 MOV43 INS9 INS8 INS32 INS54 INS10 INS42 INS42 INS52 MOV32 INS42 MOV22 INS42 UPD42 UPD42 INS8 INS12 INS25 INS44 INS8 INS25 UPD45 UPD42 INS42 INS8 INS8 INS43 INS42 INS25 INS53 UPD42 MOV42 UPD45 UPD42 INS32 INS8 INS21 INS21 INS42 INS42 INS8 INS42 INS42 INS42 INS21 INS41 INS7 INS7 INS21 INS18 INS32 INS42 INS32 INS42 MOV32 INS7 INS42 INS42 INS27 INS42 INS42 INS32 INS42 INS9 INS45 INS42 INS45 INS42 INS42 DEL42 DEL43 DEL52 DEL42 DEL42 DEL14 DEL42 DEL43 DEL42 DEL42 DEL43 DEL42