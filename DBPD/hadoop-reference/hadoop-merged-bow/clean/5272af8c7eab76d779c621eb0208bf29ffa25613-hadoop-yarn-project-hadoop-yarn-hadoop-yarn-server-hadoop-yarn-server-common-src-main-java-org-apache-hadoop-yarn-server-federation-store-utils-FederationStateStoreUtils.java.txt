YARN-3663. Federation State and Policy Store (DBMS implementation). (Giovanni Matteo Fumarola via curino).

(cherry picked from commit be99c1fe2eb150fabd69902118d65941f82971f6)

+import java.sql.ResultSet;
-import org.apache.hadoop.yarn.server.federation.store.exception.FederationStateStoreErrorCode;
+import com.zaxxer.hikari.HikariDataSource;
+
+  public final static String FEDERATION_STORE_URL = "url";
+
-   * Returns the SQL <code>FederationStateStore</code> connection to the pool.
+   * Returns the SQL <code>FederationStateStore</code> connections to the pool.
+   * @param rs the ResultSet interface used to execute SQL stored procedures
-      Connection conn) throws YarnException {
+      Connection conn, ResultSet rs) throws YarnException {
+
+    if (rs != null) {
+      try {
+        rs.close();
+      } catch (SQLException e) {
+        logAndThrowException(log, "Exception while trying to close ResultSet",
+            e);
+      }
+    }
+  }
+
+  /**
+   * Returns the SQL <code>FederationStateStore</code> connections to the pool.
+   *
+   * @param log the logger interface
+   * @param cstmt the interface used to execute SQL stored procedures
+   * @param conn the SQL connection
+   * @throws YarnException on failure
+   */
+  public static void returnToPool(Logger log, CallableStatement cstmt,
+      Connection conn) throws YarnException {
+    returnToPool(log, cstmt, conn, null);
-   * @param code FederationStateStoreErrorCode of the error
-  public static void logAndThrowStoreException(Logger log,
-      FederationStateStoreErrorCode code, String errMsg) throws YarnException {
-    log.error(errMsg + " " + code.toString());
-    throw new FederationStateStoreException(code);
-  }
-
-  /**
-   * Throws an <code>FederationStateStoreException</code> due to an error in
-   * <code>FederationStateStore</code>.
-   *
-   * @param log the logger interface
-   * @param code FederationStateStoreErrorCode of the error
-   * @throws YarnException on failure
-   */
-  public static void logAndThrowStoreException(Logger log,
-      FederationStateStoreErrorCode code) throws YarnException {
-    log.error(code.toString());
-    throw new FederationStateStoreException(code);
+  public static void logAndThrowStoreException(Logger log, String errMsg)
+      throws YarnException {
+    log.error(errMsg);
+    throw new FederationStateStoreException(errMsg);
-    LOG.error(errMsg);
+    log.error(errMsg);
-      LOG.error(errMsg, t);
+      log.error(errMsg, t);
-      LOG.error(errMsg);
+      log.error(errMsg);
+
+  /**
+   * Sets a specific value for a specific property of
+   * <code>HikariDataSource</code> SQL connections.
+   *
+   * @param dataSource the <code>HikariDataSource</code> connections
+   * @param property the property to set
+   * @param value the value to set
+   */
+  public static void setProperty(HikariDataSource dataSource, String property,
+      String value) {
+    LOG.debug("Setting property {} with value {}", property, value);
+    if (property != null && !property.isEmpty() && value != null) {
+      dataSource.addDataSourceProperty(property, value);
+    }
+  }
+
+  /**
+   * Sets a specific username for <code>HikariDataSource</code> SQL connections.
+   *
+   * @param dataSource the <code>HikariDataSource</code> connections
+   * @param userNameDB the value to set
+   */
+  public static void setUsername(HikariDataSource dataSource,
+      String userNameDB) {
+    if (userNameDB != null) {
+      dataSource.setUsername(userNameDB);
+      LOG.debug("Setting non NULL Username for Store connection");
+    } else {
+      LOG.debug("NULL Username specified for Store connection, so ignoring");
+    }
+  }
+
+  /**
+   * Sets a specific password for <code>HikariDataSource</code> SQL connections.
+   *
+   * @param dataSource the <code>HikariDataSource</code> connections
+   * @param password the value to set
+   */
+  public static void setPassword(HikariDataSource dataSource, String password) {
+    if (password != null) {
+      dataSource.setPassword(password);
+      LOG.debug("Setting non NULL Credentials for Store connection");
+    } else {
+      LOG.debug("NULL Credentials specified for Store connection, so ignoring");
+    }
+  }

MOV26 INS26 MOV31 INS40 UPD40 INS23 INS31 INS31 INS31 INS83 INS83 INS83 INS43 INS59 INS44 INS29 INS83 INS83 INS39 INS42 MOV44 INS44 INS44 MOV43 INS8 UPD42 INS44 INS44 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS29 INS83 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS42 INS45 INS65 INS65 INS43 INS42 INS25 INS65 MOV65 INS65 INS65 MOV65 INS43 INS42 INS43 INS42 INS21 INS65 UPD65 UPD43 UPD42 INS43 INS42 INS43 INS42 INS25 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS25 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS25 UPD66 INS42 INS66 INS42 INS66 INS42 INS27 INS8 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS32 UPD66 UPD66 UPD42 UPD66 INS42 INS66 UPD42 UPD66 UPD42 INS42 INS42 INS27 INS8 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS27 INS8 INS8 INS66 INS42 INS66 INS42 INS66 INS42 INS42 INS27 INS8 INS8 INS42 INS33 INS54 INS42 INS42 INS42 INS42 INS33 INS42 MOV43 UPD42 UPD42 UPD42 UPD42 INS45 UPD42 MOV42 UPD42 MOV42 INS27 INS27 INS21 INS42 INS33 INS21 INS21 INS21 INS42 INS33 INS21 INS21 INS21 INS8 INS12 MOV42 INS27 INS38 INS42 INS33 INS32 INS32 INS32 INS32 INS32 INS32 INS32 INS21 INS44 INS8 UPD42 UPD42 INS42 INS33 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS45 INS32 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS42 DEL42 DEL66 DEL65 DEL42 DEL43 DEL42 DEL44 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL42 DEL14 DEL53