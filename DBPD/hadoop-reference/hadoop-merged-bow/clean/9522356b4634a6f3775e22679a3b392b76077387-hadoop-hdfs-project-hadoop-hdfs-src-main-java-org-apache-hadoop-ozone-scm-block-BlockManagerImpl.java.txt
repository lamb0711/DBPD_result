HDFS-12069. Ozone: Create a general abstraction for metadata store. Contributed by Weiwei Yang.

-import org.apache.hadoop.utils.LevelDBStore;
-import org.iq80.leveldb.DBIterator;
-import org.iq80.leveldb.Options;
-import org.iq80.leveldb.WriteBatch;
+import org.apache.hadoop.utils.BatchOperation;
+import org.apache.hadoop.utils.MetadataStore;
+import org.apache.hadoop.utils.MetadataStoreBuilder;
-  private final LevelDBStore blockStore;
+  private final MetadataStore blockStore;
-  private final LevelDBStore openContainerStore;
+  private final MetadataStore openContainerStore;
-    Options options = new Options();
-    options.cacheSize(this.cacheSize * OzoneConsts.MB);
-    blockStore = new LevelDBStore(blockContainerDbPath, options);
+    blockStore = MetadataStoreBuilder.newBuilder()
+        .setConf(conf)
+        .setDbFile(blockContainerDbPath)
+        .setCacheSize(this.cacheSize * OzoneConsts.MB)
+        .build();
-    openContainerStore = new LevelDBStore(openContainsDbPath, options);
+    openContainerStore = MetadataStoreBuilder.newBuilder()
+        .setConf(conf)
+        .setDbFile(openContainsDbPath)
+        .setCacheSize(this.cacheSize * OzoneConsts.MB)
+        .build();
+
-    try (DBIterator iter = openContainerStore.getIterator()) {
-      for (iter.seekToFirst(); iter.hasNext(); iter.next()) {
+    try {
+      openContainerStore.iterate(null, (key, value) -> {
-          byte[] key = iter.peekNext().getKey();
-          byte[] value = iter.peekNext().getValue();
-        } catch (Exception ex) {
+        } catch (Exception e) {
-      }
+        return true;
+      });
-      try (WriteBatch wb = blockStore.createWriteBatch()) {
-        containerManager.getContainer(
-            DFSUtil.bytes2String(containerBytes));
-        String deletedKeyName = getDeletedKeyName(key);
-        // Add a tombstone for the deleted key
-        wb.put(DFSUtil.string2Bytes(deletedKeyName), containerBytes);
-        // Delete the block key
-        wb.delete(DFSUtil.string2Bytes(key));
-        blockStore.commitWriteBatch(wb);
-        // TODO: Add async tombstone clean thread to send delete command to
-        // datanodes in the pipeline to clean up the blocks from containers.
-        // TODO: Container report handling of the deleted blocks:
-        // Remove tombstone and update open container usage.
-        // We will revisit this when the closed container replication is done.
-      }
+      BatchOperation batch = new BatchOperation();
+      containerManager.getContainer(DFSUtil.bytes2String(containerBytes));
+      String deletedKeyName = getDeletedKeyName(key);
+      // Add a tombstone for the deleted key
+      batch.put(DFSUtil.string2Bytes(deletedKeyName), containerBytes);
+      // Delete the block key
+      batch.delete(DFSUtil.string2Bytes(key));
+      blockStore.writeBatch(batch);
+      // TODO: Add async tombstone clean thread to send delete command to
+      // datanodes in the pipeline to clean up the blocks from containers.
+      // TODO: Container report handling of the deleted blocks:
+      // Remove tombstone and update open container usage.
+      // We will revisit this when the closed container replication is done.
-}
+}

UPD40 UPD40 UPD40 UPD43 UPD43 MOV8 UPD42 UPD42 INS21 MOV25 MOV21 INS7 MOV8 INS42 INS32 INS32 INS21 MOV60 MOV25 INS60 INS32 INS42 INS32 INS42 INS32 INS43 INS59 INS32 INS42 MOV27 INS32 INS42 INS27 UPD42 MOV42 UPD42 MOV42 INS33 INS86 INS42 INS42 INS14 UPD42 UPD42 UPD42 UPD42 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS42 INS32 INS42 INS42 INS22 INS40 INS59 INS59 MOV8 INS43 INS32 UPD42 MOV42 UPD42 MOV42 INS32 INS42 INS42 INS52 INS42 INS42 INS42 INS41 INS42 INS42 INS42 INS42 INS42 INS9 UPD42 DEL40 DEL26 DEL42 DEL43 DEL42 DEL42 DEL43 DEL14 DEL59 DEL60 DEL32 DEL21 DEL42 DEL42 DEL43 DEL42 DEL42 DEL14 DEL7 DEL21 DEL42 DEL43 DEL42 DEL42 DEL14 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL58 DEL39 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL39 DEL85 DEL5 DEL42 DEL42 DEL42 DEL32 DEL42 DEL32 DEL59 DEL60 DEL42 DEL32 DEL42 DEL32 DEL42 DEL42 DEL32 DEL24 DEL42 DEL43 DEL42 DEL32 DEL59 DEL58 DEL54 DEL8