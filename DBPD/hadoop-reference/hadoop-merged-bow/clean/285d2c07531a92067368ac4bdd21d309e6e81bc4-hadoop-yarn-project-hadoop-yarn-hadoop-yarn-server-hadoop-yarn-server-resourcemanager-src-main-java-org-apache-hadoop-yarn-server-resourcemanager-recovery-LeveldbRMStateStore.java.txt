YARN-8449. RM HA for AM web server HTTPS Support. (Contributed by Robert Kanter)

+import java.security.PrivateKey;
+import java.security.cert.X509Certificate;
+  private String getProxyCACertNodeKey() {
+    return PROXY_CA_ROOT + SEPARATOR + PROXY_CA_CERT_NODE;
+  }
+
+  private String getProxyCAPrivateKeyNodeKey() {
+    return PROXY_CA_ROOT + SEPARATOR + PROXY_CA_PRIVATE_KEY_NODE;
+  }
+
+    loadProxyCAManagerState(rmState);
+  private void loadProxyCAManagerState(RMState rmState) throws Exception {
+    byte[] caCertData;
+    byte[] caPrivateKeyData;
+
+    String caCertKey = getProxyCACertNodeKey();
+    String caPrivateKeyKey = getProxyCAPrivateKeyNodeKey();
+
+    try {
+      caCertData = db.get(bytes(caCertKey));
+    } catch (DBException e) {
+      throw new IOException(e);
+    }
+
+    try {
+      caPrivateKeyData = db.get(bytes(caPrivateKeyKey));
+    } catch (DBException e) {
+      throw new IOException(e);
+    }
+
+    if (caCertData == null || caPrivateKeyData == null) {
+      LOG.warn("Couldn't find Proxy CA data");
+      return;
+    }
+
+    rmState.proxyCAState.setCaCert(caCertData);
+    rmState.proxyCAState.setCaPrivateKey(caPrivateKeyData);
+  }
+
+  protected void storeProxyCACertState(
+      X509Certificate caCert, PrivateKey caPrivateKey) throws Exception {
+    byte[] caCertData = caCert.getEncoded();
+    byte[] caPrivateKeyData = caPrivateKey.getEncoded();
+
+    String caCertKey = getProxyCACertNodeKey();
+    String caPrivateKeyKey = getProxyCAPrivateKeyNodeKey();
+
+    try {
+      WriteBatch batch = db.createWriteBatch();
+      try {
+        batch.put(bytes(caCertKey), caCertData);
+        batch.put(bytes(caPrivateKeyKey), caPrivateKeyData);
+        db.write(batch);
+      } finally {
+        batch.close();
+      }
+    } catch (DBException e) {
+      throw new IOException(e);
+    }
+  }
+
+  @Override

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS31 INS83 INS43 INS42 INS8 INS83 INS43 INS42 INS8 INS83 INS39 INS42 INS44 INS43 INS8 INS78 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS42 INS41 INS42 INS41 INS21 INS43 INS42 INS42 INS60 INS60 INS60 INS60 INS54 INS54 INS25 INS21 INS21 INS42 INS43 INS42 INS43 INS42 INS42 INS60 INS60 INS60 INS60 INS54 INS27 INS27 INS32 INS42 INS5 INS59 INS5 INS59 INS43 INS59 INS43 INS59 INS8 INS12 INS8 INS12 INS27 INS8 INS32 INS32 INS42 INS42 INS5 INS59 INS5 INS59 INS43 INS59 INS43 INS59 INS8 INS12 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS39 INS85 INS42 INS39 INS85 INS42 INS42 INS42 INS32 INS42 INS42 INS32 INS21 INS44 INS8 INS21 INS44 INS8 INS27 INS27 INS21 INS41 INS40 INS42 INS42 INS40 INS42 INS42 INS39 INS85 INS42 INS32 INS39 INS85 INS42 INS32 INS42 INS42 INS32 INS42 INS42 INS32 INS60 INS54 INS44 INS8 INS42 INS42 INS7 INS43 INS42 INS53 INS7 INS43 INS42 INS53 INS42 INS33 INS42 INS33 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS8 INS8 INS43 INS42 INS53 INS42 INS32 INS42 INS14 INS42 INS32 INS42 INS14 INS42 INS42 INS45 INS42 INS42 INS32 INS21 INS21 INS21 INS21 INS42 INS14 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS32 INS43 INS42 INS42 INS42 INS32 INS32 INS32 INS32 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42