YARN-4447. Provide a mechanism to represent complex filters and parse them at the REST layer (Varun Saxena via sjlee)

-  private final TimelineCompareOp compareOp;
-  private final String key;
-  private final Object value;
+  private TimelineCompareOp compareOp;
+  private String key;
+  private Object value;
-  private final boolean keyMustExist;
+  private boolean keyMustExist = true;
+
+  public TimelineCompareFilter() {
+  }
+  public void setKey(String keyToBeSet) {
+    key = keyToBeSet;
+  }
+
+  public void setCompareOp(TimelineCompareOp timelineCompareOp,
+      boolean keyExistFlag) {
+    this.compareOp = timelineCompareOp;
+    if (timelineCompareOp == TimelineCompareOp.NOT_EQUAL) {
+      this.keyMustExist = keyExistFlag;
+    }
+  }
+
+  public void setValue(Object val) {
+    value = val;
+  }
+
+  public int hashCode() {
+    final int prime = 31;
+    int result = 1;
+    result = prime * result + ((compareOp == null) ? 0 : compareOp.hashCode());
+    result = prime * result + ((key == null) ? 0 : key.hashCode());
+    result = prime * result + (keyMustExist ? 1231 : 1237);
+    result = prime * result + ((value == null) ? 0 : value.hashCode());
+    return result;
+  }
+
+  @Override
+  public boolean equals(Object obj) {
+    if (this == obj) {
+      return true;
+    }
+    if (obj == null) {
+      return false;
+    }
+    if (getClass() != obj.getClass()) {
+      return false;
+    }
+    TimelineCompareFilter other = (TimelineCompareFilter) obj;
+    if (compareOp != other.compareOp) {
+      return false;
+    }
+    if (key == null) {
+      if (other.key != null) {
+        return false;
+      }
+    } else if (!key.equals(other.key)) {
+      return false;
+    }
+    if (keyMustExist != other.keyMustExist) {
+      return false;
+    }
+    if (value == null) {
+      if (other.value != null) {
+        return false;
+      }
+    } else if (!value.equals(other.value)) {
+      return false;
+    }
+    return true;
+  }
+
+  @Override

INS23 INS31 INS31 INS31 INS31 INS31 INS31 MOV83 INS39 INS59 INS83 INS42 INS8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS39 INS42 INS8 INS78 INS83 INS39 INS42 INS44 INS8 INS42 INS9 INS43 INS42 INS21 INS43 INS42 INS39 INS42 INS21 INS25 INS43 INS42 INS21 INS42 INS60 INS60 INS21 INS21 INS21 INS21 INS41 INS42 INS43 INS42 INS25 INS25 INS25 INS60 INS25 INS25 INS25 INS25 INS41 INS42 INS7 INS42 INS7 INS27 INS8 INS42 INS7 INS83 INS39 INS59 INS39 INS59 INS7 INS7 INS7 INS7 INS42 INS42 INS27 INS8 INS27 INS8 INS27 INS8 INS43 INS59 INS27 INS8 INS27 INS8 INS25 INS27 INS8 INS27 INS8 INS25 INS9 INS42 INS42 INS22 INS42 INS42 INS40 INS21 INS42 INS42 INS42 INS34 INS42 INS34 INS42 INS27 INS42 INS27 INS42 INS27 INS42 INS27 INS52 INS42 INS41 INS42 INS33 INS41 INS32 INS32 INS41 INS42 INS42 INS11 INS42 INS40 INS41 INS42 INS33 INS25 INS38 INS8 INS42 INS40 INS41 INS42 INS33 INS25 INS38 INS8 INS52 INS42 INS7 INS27 INS36 INS27 INS36 INS27 INS36 INS27 INS36 INS9 INS9 INS42 INS42 INS42 INS9 INS43 INS42 INS9 INS27 INS8 INS32 INS41 INS9 INS27 INS8 INS32 INS41 INS22 INS42 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS42 INS16 INS42 INS40 INS33 INS41 INS42 INS42 INS40 INS9 INS40 INS33 INS41 INS42 INS42 INS40 INS9 INS52 INS42 INS36 INS34 INS32 INS36 INS34 INS32 INS42 INS34 INS34 INS36 INS34 INS32 INS9 INS9 INS27 INS42 INS42 INS27 INS42 INS42 INS27 INS42 INS42 INS42 INS33 INS42 INS33 INS42 INS33 DEL83 DEL83 DEL83 DEL83 DEL39 DEL42 DEL59 DEL23