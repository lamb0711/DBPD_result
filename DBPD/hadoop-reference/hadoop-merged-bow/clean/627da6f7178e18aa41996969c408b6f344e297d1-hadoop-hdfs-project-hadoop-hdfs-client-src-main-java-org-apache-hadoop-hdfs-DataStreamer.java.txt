HDFS-8498. Blocks can be committed with wrong size. Contributed by Jing Zhao.

-     * @param e
-     * @throws InvalidEncryptionKeyException
-      new Sender(out)
-          .transferBlock(block, blockToken, dfsClient.clientName, targets,
-              targetStorageTypes);
+      new Sender(out).transferBlock(block.getCurrentBlock(), blockToken,
+          dfsClient.clientName, targets, targetStorageTypes);
+  static class BlockToWrite {
+    private ExtendedBlock currentBlock;
+
+    BlockToWrite(ExtendedBlock block) {
+      setCurrentBlock(block);
+    }
+
+    synchronized ExtendedBlock getCurrentBlock() {
+      return currentBlock == null ? null : new ExtendedBlock(currentBlock);
+    }
+
+    synchronized long getNumBytes() {
+      return currentBlock == null ? 0 : currentBlock.getNumBytes();
+    }
+
+    synchronized void setCurrentBlock(ExtendedBlock block) {
+      currentBlock = (block == null || block.getLocalBlock() == null) ?
+          null : new ExtendedBlock(block);
+    }
+
+    synchronized void setNumBytes(long numBytes) {
+      assert currentBlock != null;
+      currentBlock.setNumBytes(numBytes);
+    }
+
+    synchronized void setGenerationStamp(long generationStamp) {
+      assert currentBlock != null;
+      currentBlock.setGenerationStamp(generationStamp);
+    }
+
+    @Override
+    public synchronized String toString() {
+      return currentBlock == null ? "null" : currentBlock.toString();
+    }
+  }
+
-  protected volatile ExtendedBlock block; // its length is number of bytes acked
+  protected final BlockToWrite block; // its length is number of bytes acked
-    this.block = block;
+    this.block = new BlockToWrite(block);
-          src, stat.getFileId(), block, nodes, storageIDs,
+          src, stat.getFileId(), block.getCurrentBlock(), nodes, storageIDs,
-      block = updatePipeline(newGS);
+      updatePipeline(newGS);
-    return dfsClient.namenode.updateBlockForPipeline(block,
+    return dfsClient.namenode.updateBlockForPipeline(block.getCurrentBlock(),
-  static ExtendedBlock newBlock(ExtendedBlock b, final long newGS) {
-    return new ExtendedBlock(b.getBlockPoolId(), b.getBlockId(),
-        b.getNumBytes(), newGS);
+  void updateBlockGS(final long newGS) {
+    block.setGenerationStamp(newGS);
-  ExtendedBlock updatePipeline(long newGS) throws IOException {
-    final ExtendedBlock newBlock = newBlock(block, newGS);
-    dfsClient.namenode.updatePipeline(dfsClient.clientName, block, newBlock,
-        nodes, storageIDs);
-    return newBlock;
+  private void updatePipeline(long newGS) throws IOException {
+    final ExtendedBlock oldBlock = block.getCurrentBlock();
+    // the new GS has been propagated to all DN, it should be ok to update the
+    // local block state
+    updateBlockGS(newGS);
+    dfsClient.namenode.updatePipeline(dfsClient.clientName, oldBlock,
+        block.getCurrentBlock(), nodes, storageIDs);
-    ExtendedBlock oldBlock = block;
+    final ExtendedBlock oldBlock = block.getCurrentBlock();
-      block = oldBlock;
-      lb = locateFollowingBlock(excluded.length > 0 ? excluded : null);
-      block = lb.getBlock();
+      lb = locateFollowingBlock(
+          excluded.length > 0 ? excluded : null, oldBlock);
+      block.setCurrentBlock(lb.getBlock());
-      //
-      //
-        dfsClient.namenode.abandonBlock(block, stat.getFileId(), src,
-            dfsClient.clientName);
-        block = null;
+        dfsClient.namenode.abandonBlock(block.getCurrentBlock(),
+            stat.getFileId(), src, dfsClient.clientName);
+        block.setCurrentBlock(null);
-        ExtendedBlock blockCopy = new ExtendedBlock(block);
+        ExtendedBlock blockCopy = block.getCurrentBlock();
-  private LocatedBlock locateFollowingBlock(DatanodeInfo[] excludedNodes)
-      throws IOException {
-    return DFSOutputStream.addBlock(excludedNodes, dfsClient, src, block,
+  private LocatedBlock locateFollowingBlock(DatanodeInfo[] excluded,
+      ExtendedBlock oldBlock) throws IOException {
+    return DFSOutputStream.addBlock(excluded, dfsClient, src, oldBlock,
-    return block;
+    return block.getCurrentBlock();
-    return block == null? "block==null": "" + block.getLocalBlock();
+    final ExtendedBlock extendedBlock = block.getCurrentBlock();
+    return extendedBlock == null ?
+        "block==null" : "" + extendedBlock.getLocalBlock();

INS55 INS83 INS42 INS23 INS31 INS31 INS31 INS31 INS31 INS31 INS31 UPD83 INS43 INS39 UPD42 INS83 INS39 INS44 INS8 INS83 MOV43 INS59 INS42 INS44 INS8 INS83 MOV43 INS42 INS8 INS83 INS39 INS42 INS8 INS83 INS39 INS42 INS44 MOV8 INS83 INS39 INS42 INS44 INS8 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS83 INS43 INS42 INS8 INS42 INS21 INS21 UPD42 MOV43 INS42 INS60 INS41 INS42 INS43 INS42 INS21 INS41 INS41 INS43 INS42 INS21 INS39 INS42 INS6 INS21 INS39 INS42 INS6 INS21 INS42 INS42 INS41 INS32 INS32 INS83 MOV43 INS32 INS83 MOV43 INS59 INS16 INS42 INS32 INS16 INS16 INS42 INS7 INS27 INS32 INS27 INS32 INS16 INS14 INS32 UPD42 MOV42 UPD42 MOV42 INS42 UPD42 INS42 INS42 INS42 INS32 INS32 UPD42 UPD42 INS42 INS42 INS42 INS32 INS27 INS45 INS27 INS32 INS42 INS42 INS27 INS33 INS14 INS27 INS34 INS32 INS42 MOV16 INS42 INS33 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS27 INS45 INS32 INS43 INS42 MOV32 MOV42 INS42 UPD42 MOV42 UPD42 MOV42 INS42 INS42 INS32 INS42 INS42 INS42 INS33 INS45 INS32 MOV42 INS42 INS42 INS33 MOV43 INS42 INS42 INS33 INS42 INS42 INS36 INS33 MOV14 INS42 INS33 INS42 INS42 INS42 INS42 INS42 MOV32 INS42 INS42 INS27 INS32 INS42 INS32 MOV27 UPD27 MOV27 MOV42 INS42 INS32 INS42 INS42 INS33 INS32 INS33 MOV42 INS42 INS42 INS42 DEL42 DEL65 DEL42 DEL65 DEL45 DEL45 DEL41 DEL42 DEL42 DEL7 DEL83 DEL42 DEL44 DEL42 DEL42 DEL32 DEL42 DEL32 DEL42 DEL32 DEL42 DEL14 DEL41 DEL42 DEL42 DEL41 DEL42 DEL42 DEL42 DEL7 DEL21 DEL42 DEL7 DEL42 DEL33 DEL7 DEL42