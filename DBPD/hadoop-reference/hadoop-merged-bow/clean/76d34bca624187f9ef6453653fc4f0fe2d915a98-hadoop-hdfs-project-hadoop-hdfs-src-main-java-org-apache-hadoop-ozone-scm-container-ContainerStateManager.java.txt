HDFS-12521. Ozone: SCM should read all Container info into memory when booting up. Contributed by Lokesh Jain.

+import com.google.common.annotations.VisibleForTesting;
+import java.util.List;
+import java.util.Arrays;
-import java.util.concurrent.locks.Lock;
-import java.util.concurrent.locks.ReentrantLock;
+import java.util.concurrent.locks.ReadWriteLock;
+import java.util.concurrent.locks.ReentrantReadWriteLock;
-  private final Lock writeLock;
+  private final ReadWriteLock lock;
-  public ContainerStateManager(Configuration configuration, final long
-      cacheSize) throws IOException {
+  public ContainerStateManager(Configuration configuration,
+      Mapping containerMapping, final long cacheSize) throws IOException {
-    writeLock = new ReentrantLock();
+    lock = new ReentrantReadWriteLock();
-    initializeContainerMaps(containers);
+    initializeContainerMaps();
+    loadExistingContainers(containerMapping);
-  private void initializeContainerMaps(Map containerMaps) {
+  private void initializeContainerMaps() {
-    Preconditions.checkNotNull(containerMaps);
+    Preconditions.checkNotNull(containers);
-            containerMaps.put(key, queue);
+            containers.put(key, queue);
+  /**
+   * Load containers from the container store into the containerMaps.
+   *
+   * @param containerMapping -- Mapping object containing container store.
+   */
+  private void loadExistingContainers(Mapping containerMapping) {
+    try {
+      List<ContainerInfo> containerList =
+          containerMapping.listContainer(null, null, Integer.MAX_VALUE);
+      for (ContainerInfo container : containerList) {
+        ContainerKey key = new ContainerKey(container.getOwner(),
+            container.getPipeline().getType(),
+            container.getPipeline().getFactor(), container.getState());
+        BlockContainerInfo blockContainerInfo =
+            new BlockContainerInfo(container, 0);
+        ((PriorityQueue) containers.get(key)).add(blockContainerInfo);
+      }
+    } catch (IOException e) {
+      if (!e.getMessage().equals("No container exists in current db")) {
+        LOG.info("Could not list the containers", e);
+      }
+    }
+  }
+
-    writeLock.lock();
+    lock.writeLock().lock();
-      writeLock.unlock();
+      lock.writeLock().unlock();
-    writeLock.lock();
+    lock.writeLock().lock();
-      writeLock.unlock();
+      lock.writeLock().unlock();
-    writeLock.lock();
+    lock.writeLock().lock();
-        if (info.getAllocated() < this.containerSize + size) {
+        if (info.getAllocated() + size <= this.containerSize) {
-      writeLock.unlock();
+      lock.writeLock().unlock();
+    }
+    return null;
+  }
+
+  @VisibleForTesting
+  public List<BlockContainerInfo> getMatchingContainers(Owner owner,
+      ReplicationType type, ReplicationFactor factor, LifeCycleState state) {
+    ContainerKey key = new ContainerKey(owner, type, factor, state);
+    lock.readLock().lock();
+    try {
+      return Arrays.asList((BlockContainerInfo[]) containers.get(key)
+          .toArray(new BlockContainerInfo[0]));
+    } catch (Exception e) {
+      LOG.error("Could not get matching containers", e);
+    } finally {
+      lock.readLock().unlock();

INS26 INS26 INS26 INS40 INS40 INS40 UPD40 UPD40 INS31 INS31 UPD43 INS44 INS29 INS83 INS39 INS42 INS44 INS8 INS78 INS83 INS74 INS42 INS44 INS44 INS44 INS44 INS8 UPD42 UPD42 INS43 INS42 INS21 INS65 INS65 INS43 INS42 INS54 INS42 INS43 INS43 INS43 INS42 INS43 INS42 INS43 INS42 INS43 INS42 INS60 INS21 INS54 INS41 INS42 INS32 INS66 INS42 INS66 INS42 INS8 INS12 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS32 INS8 INS12 INS8 INS33 UPD42 INS42 UPD42 UPD42 UPD42 INS60 INS70 INS44 INS8 INS32 INS32 INS32 INS42 INS42 INS14 INS32 INS42 INS41 INS44 INS8 INS21 UPD43 INS74 INS59 INS44 INS42 INS8 INS43 INS42 INS25 INS42 MOV42 INS42 MOV42 INS42 MOV42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS21 INS32 UPD42 INS43 INS43 INS42 INS32 INS43 INS42 INS60 INS60 INS21 INS42 INS38 INS8 INS32 INS32 INS32 INS42 INS42 INS42 INS11 INS42 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS33 INS33 INS40 INS42 INS43 INS59 INS43 INS59 INS32 INS32 INS21 INS42 MOV42 INS42 MOV42 UPD27 MOV27 INS42 MOV42 INS5 INS32 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS14 INS42 INS42 INS14 INS36 INS42 INS42 INS32 INS42 INS45 INS32 INS27 INS43 INS85 INS32 INS42 INS3 INS43 INS32 INS32 INS32 INS32 INS43 INS42 INS34 INS11 INS42 INS42 INS42 INS42 INS45 INS42 MOV32 MOV42 INS42 INS42 INS42 INS42 INS5 INS34 INS42 INS42 INS42 INS32 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS32 INS43 INS85 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 DEL42 DEL43 DEL42 DEL44 DEL27