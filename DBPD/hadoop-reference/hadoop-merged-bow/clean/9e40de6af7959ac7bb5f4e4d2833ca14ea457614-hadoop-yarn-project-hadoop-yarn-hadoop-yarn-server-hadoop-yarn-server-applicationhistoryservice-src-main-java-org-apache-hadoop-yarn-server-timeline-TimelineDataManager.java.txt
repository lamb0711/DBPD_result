YARN-2446. Augmented Timeline service APIs to start taking in domains as a parameter while posting entities and events. Contributed by Zhijie Shen.

+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.service.AbstractService;
+import org.apache.hadoop.yarn.api.records.ApplicationAccessType;
+import com.google.common.annotations.VisibleForTesting;
+
-public class TimelineDataManager {
+public class TimelineDataManager extends AbstractService {
+  @VisibleForTesting
+  public static final String DEFAULT_DOMAIN_ID = "DEFAULT";
+    super(TimelineDataManager.class.getName());
+    timelineACLsManager.setTimelineStore(store);
+  }
+
+  @Override
+  protected void serviceInit(Configuration conf) throws Exception {
+    TimelineDomain domain = store.getDomain("DEFAULT");
+    // it is okay to reuse an existing domain even if it was created by another
+    // user of the timeline server before, because it allows everybody to access.
+    if (domain == null) {
+      // create a default domain, which allows everybody to access and modify
+      // the entities in it.
+      domain = new TimelineDomain();
+      domain.setId(DEFAULT_DOMAIN_ID);
+      domain.setDescription("System Default Domain");
+      domain.setOwner(
+          UserGroupInformation.getCurrentUser().getShortUserName());
+      domain.setReaders("*");
+      domain.setWriters("*");
+      store.put(domain);
+    }
+    super.serviceInit(conf);
-          if (!timelineACLsManager.checkAccess(callerUGI, entity)) {
+          if (!timelineACLsManager.checkAccess(
+              callerUGI, ApplicationAccessType.VIEW_APP, entity)) {
-      if (!timelineACLsManager.checkAccess(callerUGI, entity)) {
+      if (!timelineACLsManager.checkAccess(
+          callerUGI, ApplicationAccessType.VIEW_APP, entity)) {
-          if (!timelineACLsManager.checkAccess(callerUGI, entity)) {
+          if (!timelineACLsManager.checkAccess(
+              callerUGI, ApplicationAccessType.VIEW_APP, entity)) {
+      // if the domain id is not specified, the entity will be put into
+      // the default domain
+      if (entity.getDomainId() == null ||
+          entity.getDomainId().length() == 0) {
+        entity.setDomainId(DEFAULT_DOMAIN_ID);
+      }
+
-        if (existingEntity != null
-            && !timelineACLsManager.checkAccess(callerUGI, existingEntity)) {
-          throw new YarnException("The timeline entity " + entityID
-              + " was not put by " + callerUGI + " before");
+        if (existingEntity != null &&
+            !existingEntity.getDomainId().equals(entity.getDomainId())) {
+          throw new YarnException("The domain of the timeline entity "
+            + entityID + " is not allowed to be changed.");
+        }
+        if (!timelineACLsManager.checkAccess(
+            callerUGI, ApplicationAccessType.MODIFY_APP, entity)) {
+          throw new YarnException(callerUGI
+              + " is not allowed to put the timeline entity " + entityID
+              + " into the domain " + entity.getDomainId() + ".");
+    // If the domain exists already, it is likely to be in the cache.
+    // We need to invalidate it.
+    if (existingDomain != null) {
+      timelineACLsManager.replaceIfExist(domain);
+    }

INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS43 INS23 INS31 INS42 INS78 INS83 INS83 INS83 INS43 INS59 INS78 INS83 INS39 INS42 INS44 INS43 INS8 INS42 INS42 INS42 INS45 INS46 INS21 INS42 INS43 INS42 INS42 INS60 INS25 INS21 INS25 INS32 INS32 INS42 INS43 INS59 INS27 INS8 INS48 INS27 INS8 INS57 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS33 INS21 INS21 INS21 INS21 INS21 INS21 INS21 INS42 INS42 INS25 INS42 INS33 INS21 INS43 INS42 INS42 INS45 INS7 INS32 INS32 INS32 INS32 INS32 INS32 INS27 INS8 INS32 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS45 INS42 INS42 INS42 INS27 INS27 INS21 INS25 INS42 INS42 INS42 INS43 INS32 INS42 INS40 INS32 INS33 INS32 INS34 INS32 INS27 INS8 INS38 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 MOV27 INS38 INS53 MOV32 INS42 INS42 INS32 INS14 INS40 UPD42 INS32 INS42 INS32 MOV43 INS27 INS43 INS40 INS40 INS42 INS42 INS42 INS42 INS45 INS42 INS45 INS42 INS42 UPD45 UPD45 INS32 UPD45 INS42 INS42 DEL38 DEL27 DEL42