Merge trunk into HA branch.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208644 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.NodeHealthCheckerService;
+import org.apache.hadoop.yarn.server.nodemanager.NodeHealthCheckerService;
-import org.apache.hadoop.yarn.service.Service.STATE;
-  public MiniYARNCluster(String testName) {
-    //default number of nodeManagers = 1
-    this(testName, 1);
-  }
+  // Number of nm-local-dirs per nodemanager
+  private int numLocalDirs;
+  // Number of nm-log-dirs per nodemanager
+  private int numLogDirs;
-  public MiniYARNCluster(String testName, int noOfNodeManagers) {
+  /**
+   * @param testName name of the test
+   * @param noOfNodeManagers the number of node managers in the cluster
+   * @param numLocalDirs the number of nm-local-dirs per nodemanager
+   * @param numLogDirs the number of nm-log-dirs per nodemanager
+   */
+  public MiniYARNCluster(String testName, int noOfNodeManagers,
+                         int numLocalDirs, int numLogDirs) {
+
+    this.numLocalDirs = numLocalDirs;
+    this.numLogDirs = numLogDirs;
+    /**
+     * Create local/log directories
+     * @param dirType type of directories i.e. local dirs or log dirs 
+     * @param numDirs number of directories
+     * @return the created directories as a comma delimited String
+     */
+    private String prepareDirs(String dirType, int numDirs) {
+      File []dirs = new File[numDirs];
+      String dirsString = "";
+      for (int i = 0; i < numDirs; i++) {
+        dirs[i]= new File(testWorkDir, MiniYARNCluster.this.getName()
+            + "-" + dirType + "Dir-nm-" + index + "_" + i);
+        dirs[i].mkdir();
+        LOG.info("Created " + dirType + "Dir in " + dirs[i].getAbsolutePath());
+        String delimiter = (i > 0) ? "," : "";
+        dirsString = dirsString.concat(delimiter + dirs[i].getAbsolutePath());
+      }
+      return dirsString;
+    }
+
-        File localDir = new File(testWorkDir, MiniYARNCluster.this.getName()
-            + "-localDir-nm-" + index);
-        localDir.mkdir();
-        LOG.info("Created localDir in " + localDir.getAbsolutePath());
-        getConfig().set(YarnConfiguration.NM_LOCAL_DIRS,
-            localDir.getAbsolutePath());
-        File logDir =
-            new File(testWorkDir, MiniYARNCluster.this.getName()
-                + "-logDir-nm-" + index);
+        // create nm-local-dirs and configure them for the nodemanager
+        String localDirsString = prepareDirs("local", numLocalDirs);
+        getConfig().set(YarnConfiguration.NM_LOCAL_DIRS, localDirsString);
+        // create nm-log-dirs and configure them for the nodemanager
+        String logDirsString = prepareDirs("log", numLogDirs);
+        getConfig().set(YarnConfiguration.NM_LOG_DIRS, logDirsString);
+
-        logDir.mkdir();
-        LOG.info("Created logDir in " + logDir.getAbsolutePath());
-        getConfig().set(YarnConfiguration.NM_LOG_DIRS,
-            logDir.getAbsolutePath());

MOV26 UPD40 INS23 INS23 INS83 INS39 INS59 INS83 INS39 INS59 INS29 INS44 INS44 INS31 INS42 INS42 INS65 INS65 INS65 INS65 INS39 INS42 INS39 INS42 INS21 INS21 INS29 INS83 INS43 INS42 INS44 INS44 INS8 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS7 INS7 INS65 INS65 INS65 INS65 INS42 INS43 INS42 INS39 INS42 INS60 INS60 INS24 INS41 INS22 INS42 INS22 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS5 INS59 INS43 INS59 INS58 INS27 INS37 INS8 INS42 MOV21 INS52 INS42 INS52 INS42 MOV43 INS85 INS42 INS3 INS42 INS42 INS45 INS39 INS59 INS42 INS42 INS42 INS21 INS21 INS21 INS60 INS21 INS60 INS5 INS42 INS42 INS34 INS7 INS32 INS32 INS43 INS59 INS7 UPD43 INS43 INS59 MOV43 INS85 INS2 MOV14 INS2 INS42 INS42 INS42 INS27 INS42 INS42 INS16 INS42 INS32 UPD42 UPD42 INS32 MOV32 UPD42 MOV42 INS42 INS42 INS32 MOV32 UPD42 MOV42 INS42 INS42 MOV43 INS42 INS42 INS45 INS42 INS45 INS32 INS36 INS45 INS45 INS42 INS42 INS27 INS42 INS45 INS42 UPD42 MOV42 INS45 UPD42 MOV42 INS45 INS42 UPD45 INS45 INS42 INS2 INS42 INS27 INS42 INS32 INS42 INS42 INS42 INS34 INS2 INS42 INS42 INS42 DEL40 DEL26 DEL83 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL34 DEL17 DEL8 DEL31 DEL42 DEL42 DEL52 DEL42 DEL32 DEL45 DEL42 DEL27 DEL14 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL45 DEL42 DEL42 DEL32 DEL27 DEL32 DEL21 DEL42 DEL32 DEL42 DEL32 DEL42 DEL59 DEL60 DEL42 DEL42 DEL32 DEL21 DEL42 DEL45 DEL42 DEL32 DEL27 DEL32 DEL21