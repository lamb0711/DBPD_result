HDDS-1705. Recon: Add estimatedTotalCount to the response of containers and containers/{id} endpoints. Contributed by Vivek Ratnavel Subramanian.



+import java.util.HashMap;
-    int omKeyCount = 0;
+    long omKeyCount = 0;
+      // initialize new container DB
+      containerDBServiceProvider.initNewContainerDB(new HashMap<>());
+
-
-        LOG.error("Unexpected exception while updating key data : {} ", e);
+        LOG.error("Unexpected exception while updating key data : {} ",
+            updatedKey, e);
-   * Delete an OM Key from Container DB.
+   * Delete an OM Key from Container DB and update containerID -> no. of keys
+   * count.
+   *
-    Set<ContainerKeyPrefix> keysToDeDeleted = new HashSet<>();
+    Set<ContainerKeyPrefix> keysToBeDeleted = new HashSet<>();
-        keysToDeDeleted.add(keyValue.getKey());
+        keysToBeDeleted.add(keyValue.getKey());
-    for (ContainerKeyPrefix containerKeyPrefix : keysToDeDeleted) {
+    for (ContainerKeyPrefix containerKeyPrefix : keysToBeDeleted) {
+
+      // decrement count and update containerKeyCount.
+      Long containerID = containerKeyPrefix.getContainerId();
+      long keyCount =
+          containerDBServiceProvider.getKeyCountForContainer(containerID);
+      if (keyCount > 0) {
+        containerDBServiceProvider.storeContainerKeyCount(containerID,
+            --keyCount);
+      }
-   * Write an OM key to container DB.
+   * Write an OM key to container DB and update containerID -> no. of keys
+   * count.
+   *
+    long containerCountToIncrement = 0;
-        if (containerDBServiceProvider.getCountForForContainerKeyPrefix(
+        if (containerDBServiceProvider.getCountForContainerKeyPrefix(
+
+          // check if container already exists and
+          // increment the count of containers if it does not exist
+          if (!containerDBServiceProvider.doesContainerExists(containerId)) {
+            containerCountToIncrement++;
+          }
+
+          // update the count of keys for the given containerID
+          long keyCount =
+              containerDBServiceProvider.getKeyCountForContainer(containerId);
+
+          // increment the count and update containerKeyCount.
+          // keyCount will be 0 if containerID is not found. So, there is no
+          // need to initialize keyCount for the first time.
+          containerDBServiceProvider.storeContainerKeyCount(containerId,
+              ++keyCount);
+
+    if (containerCountToIncrement > 0) {
+      containerDBServiceProvider
+          .incrementContainerCountBy(containerCountToIncrement);
+    }

INS26 INS40 INS60 INS25 UPD39 UPD66 INS66 UPD42 INS8 UPD66 INS66 INS39 INS59 INS27 INS8 INS21 UPD42 MOV21 INS60 INS60 INS25 INS42 INS34 INS42 INS34 INS21 INS32 INS43 INS59 INS39 INS59 INS27 INS8 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS42 INS32 INS42 INS34 INS21 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS42 INS42 INS32 INS8 INS43 UPD42 INS42 INS42 INS42 INS38 MOV21 INS25 INS60 INS21 INS42 INS42 INS42 UPD42 INS38 MOV8 INS39 INS59 INS32 INS32 INS21 INS42 INS32 INS42 INS42 INS42 INS38 INS42 INS42 INS42 INS37 INS42 INS42 INS42 INS42 INS42 DEL8