HDDS-1103.Fix rat/findbug/checkstyle errors in ozone/hdds projects.
Contributed by Elek, Marton.

+import java.io.IOException;
+import java.io.OutputStream;
+import java.nio.ByteBuffer;
+import java.util.List;
+
-import org.apache.hadoop.hdds.scm.XceiverClientSpi;
-import java.io.IOException;
-import java.io.OutputStream;
-import java.nio.ByteBuffer;
-import java.util.List;
-
-public class BlockOutputStreamEntry extends OutputStream {
+public final class BlockOutputStreamEntry extends OutputStream {
+  @SuppressWarnings("parameternumber")
-      if (this.outputStream instanceof BlockOutputStream) {
-        this.blockID = ((BlockOutputStream) outputStream).getBlockID();
-      }
+      this.blockID = ((BlockOutputStream) outputStream).getBlockID();
-    if (this.outputStream instanceof BlockOutputStream) {
+    if (outputStream != null) {
-    } else if (outputStream == null) {
-        // For a pre allocated block for which no write has been initiated,
-        // the OutputStream will be null here.
-        // In such cases, the default blockCommitSequenceId will be 0
-        return 0;
-    }
-    throw new IOException("Invalid Output Stream for Key: " + key);
-  }
-
-  long getWrittenDataLength() throws IOException {
-    if (this.outputStream instanceof BlockOutputStream) {
-      BlockOutputStream out = (BlockOutputStream) this.outputStream;
-      return out.getWrittenDataLength();
-    } else if (outputStream == null) {
+    } else {
-    throw new IOException("Invalid Output Stream for Key: " + key);
+  }
+
+  long getWrittenDataLength() throws IOException {
+    if (outputStream != null) {
+      BlockOutputStream out = (BlockOutputStream) this.outputStream;
+      return out.getWrittenDataLength();
+    } else {
+      // For a pre allocated block for which no write has been initiated,
+      // the OutputStream will be null here.
+      // In such cases, the default blockCommitSequenceId will be 0
+      return 0;
+    }
-    if (this.outputStream instanceof BlockOutputStream) {
-      BlockOutputStream out = (BlockOutputStream) this.outputStream;
-      out.cleanup(invalidateClient);
-    }
+    BlockOutputStream out = (BlockOutputStream) this.outputStream;
+    out.cleanup(invalidateClient);
+
-    if (this.outputStream instanceof BlockOutputStream) {
-      BlockOutputStream out = (BlockOutputStream) this.outputStream;
-      out.writeOnRetry(len);
-      this.currentPosition += len;
-    } else {
-      throw new IOException("Invalid Output Stream for Key: " + key);
-    }
+    BlockOutputStream out = (BlockOutputStream) this.outputStream;
+    out.writeOnRetry(len);
+    this.currentPosition += len;
+
-    public Builder setPipeline(Pipeline pipeline) {
-      this.pipeline = pipeline;
+    public Builder setPipeline(Pipeline ppln) {
+      this.pipeline = ppln;
-    public Builder setBufferList(List<ByteBuffer> bufferList) {
-      this.bufferList = bufferList;
+    public Builder setBufferList(List<ByteBuffer> bffrLst) {
+      this.bufferList = bffrLst;

MOV26 MOV26 MOV26 MOV26 INS83 INS79 MOV8 MOV8 MOV8 INS42 INS45 MOV21 MOV21 MOV27 UPD27 MOV27 MOV8 UPD27 MOV27 MOV8 UPD42 UPD42 MOV21 UPD42 UPD42 DEL40 DEL26 DEL52 DEL42 DEL22 DEL42 DEL43 DEL62 DEL25 DEL8 DEL52 DEL42 DEL22 DEL42 DEL43 DEL62 DEL25 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL52 DEL42 DEL22 DEL42 DEL43 DEL62 DEL25 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL52 DEL42 DEL22 DEL42 DEL43 DEL62 DEL25 DEL8 DEL52 DEL42 DEL22 DEL42 DEL43 DEL62 DEL42 DEL43 DEL45 DEL42 DEL27 DEL14 DEL53 DEL8 DEL25 DEL8