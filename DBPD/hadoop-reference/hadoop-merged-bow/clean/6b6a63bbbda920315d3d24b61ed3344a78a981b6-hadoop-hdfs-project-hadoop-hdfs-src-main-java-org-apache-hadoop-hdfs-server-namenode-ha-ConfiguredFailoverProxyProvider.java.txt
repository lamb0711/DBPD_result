Merge commit '456e901a4c5c639267ee87b8e5f1319f256d20c2' (HDFS-6407. Add sorting and pagination in the datanode tab of the NN Web UI. Contributed by Haohui Mai.) into HDFS-7285-merge

+import java.util.concurrent.atomic.AtomicBoolean;
+import com.google.common.annotations.VisibleForTesting;
-  private final Configuration conf;
-  private final List<AddressRpcProxyPair<T>> proxies =
+  interface ProxyFactory<T> {
+    T createProxy(Configuration conf, InetSocketAddress nnAddr, Class<T> xface,
+        UserGroupInformation ugi, boolean withRetries,
+        AtomicBoolean fallbackToSimpleAuth) throws IOException;
+  }
+
+  static class DefaultProxyFactory<T> implements ProxyFactory<T> {
+    @Override
+    public T createProxy(Configuration conf, InetSocketAddress nnAddr,
+        Class<T> xface, UserGroupInformation ugi, boolean withRetries,
+        AtomicBoolean fallbackToSimpleAuth) throws IOException {
+      return NameNodeProxies.createNonHAProxy(conf,
+          nnAddr, xface, ugi, false, fallbackToSimpleAuth).getProxy();
+    }
+  }
+
+  protected final Configuration conf;
+  protected final List<AddressRpcProxyPair<T>> proxies =
-  private final Class<T> xface;
-  
+  protected final Class<T> xface;
+
+  private final ProxyFactory<T> factory;
+    this(conf, uri, xface, new DefaultProxyFactory<T>());
+  }
+
+  @VisibleForTesting
+  ConfiguredFailoverProxyProvider(Configuration conf, URI uri,
+      Class<T> xface, ProxyFactory<T> factory) {
+
-        CommonConfigurationKeysPublic.IPC_CLIENT_CONNECT_MAX_RETRIES_ON_SOCKET_TIMEOUTS_KEY,
-        maxRetriesOnSocketTimeouts);
-    
+            CommonConfigurationKeysPublic
+                    .IPC_CLIENT_CONNECT_MAX_RETRIES_ON_SOCKET_TIMEOUTS_KEY,
+            maxRetriesOnSocketTimeouts);
+
+      this.factory = factory;
-        current.namenode = NameNodeProxies.createNonHAProxy(conf,
-            current.address, xface, ugi, false, fallbackToSimpleAuth).getProxy();
+        current.namenode = factory.createProxy(conf,
+            current.address, xface, ugi, false, fallbackToSimpleAuth);
-  public synchronized void performFailover(T currentProxy) {
+  public  void performFailover(T currentProxy) {
+    incrementProxyIndex();
+  }
+
+  synchronized void incrementProxyIndex() {

INS26 INS26 INS40 INS40 INS55 INS55 INS23 INS31 INS31 INS42 INS73 INS31 INS83 INS42 INS73 INS74 INS31 UPD83 UPD83 UPD83 INS83 INS83 INS74 INS59 INS83 INS42 INS44 INS44 INS44 INS8 INS78 INS44 MOV78 INS83 INS39 INS42 MOV44 INS8 UPD42 INS42 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS42 INS43 INS43 INS78 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS44 INS43 INS8 INS43 INS43 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS17 INS42 INS74 INS42 INS21 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS42 INS43 INS42 INS74 INS42 INS43 INS42 INS39 INS42 INS43 INS42 INS42 INS41 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS14 INS43 INS43 INS32 INS42 INS42 INS43 INS43 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 INS32 INS42 INS42 INS74 INS42 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS43 INS43 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS9 INS42 INS42 INS42 INS22 INS42 INS52 INS42 INS32 UPD42 MOV42 UPD42 MOV42 MOV42 MOV40 MOV42 MOV42 MOV9 MOV42 DEL83 DEL32 DEL42 DEL32 DEL83