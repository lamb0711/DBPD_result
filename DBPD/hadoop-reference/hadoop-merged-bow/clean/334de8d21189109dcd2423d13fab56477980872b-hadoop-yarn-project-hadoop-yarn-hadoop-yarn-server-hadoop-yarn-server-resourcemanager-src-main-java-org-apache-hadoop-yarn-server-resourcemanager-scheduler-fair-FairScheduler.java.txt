 ARN-803. factor out scheduler config validation from the ResourceManager to each scheduler implementation. (tucu)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493160 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.conf.Configurable;
+import org.apache.hadoop.yarn.exceptions.YarnRuntimeException;
-
+  private void validateConf(Configuration conf) {
+    // validate scheduler memory allocation setting
+    int minMem = conf.getInt(
+      YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB,
+      YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_MB);
+    int maxMem = conf.getInt(
+      YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB,
+      YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB);
+
+    if (minMem < 0 || minMem > maxMem) {
+      throw new YarnRuntimeException("Invalid resource scheduler memory"
+        + " allocation configuration"
+        + ", " + YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB
+        + "=" + minMem
+        + ", " + YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB
+        + "=" + maxMem + ", min should equal greater than 0"
+        + ", max should be no smaller than min.");
+    }
+
+    // validate scheduler vcores allocation setting
+    int minVcores = conf.getInt(
+      YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES,
+      YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES);
+    int maxVcores = conf.getInt(
+      YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES,
+      YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES);
+
+    if (minVcores < 0 || minVcores > maxVcores) {
+      throw new YarnRuntimeException("Invalid resource scheduler vcores"
+        + " allocation configuration"
+        + ", " + YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES
+        + "=" + minVcores
+        + ", " + YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES
+        + "=" + maxVcores + ", min should equal greater than 0"
+        + ", max should be no smaller than min.");
+    }
+  }
+
+    validateConf(this.conf);

INS26 INS26 INS40 INS40 INS31 INS83 INS39 INS42 INS44 INS8 INS43 INS42 INS60 INS60 INS25 INS60 INS60 INS25 INS21 INS42 INS39 INS59 INS39 INS59 INS27 INS8 INS39 INS59 INS39 INS59 INS27 INS8 INS32 INS42 INS32 INS42 INS32 INS27 INS27 INS53 INS42 INS32 INS42 INS32 INS27 INS27 INS53 INS42 INS22 INS42 INS42 INS40 INS40 INS42 INS42 INS40 INS40 INS42 INS34 INS42 INS42 INS14 INS42 INS42 INS40 INS40 INS42 INS42 INS40 INS40 INS42 INS34 INS42 INS42 INS14 INS52 INS42 INS43 INS27 INS43 INS27 INS42 INS27 INS40 INS45 INS42 INS45 INS40 INS45 INS42 INS45 INS45 INS42 INS27 INS40 INS45 INS42 INS45 INS40 INS45 INS42 INS45 INS45 INS45 INS45 INS45 INS45 INS45 INS45