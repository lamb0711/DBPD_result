YARN-4280. CapacityScheduler reservations may not prevent indefinite postponement on a busy cluster. Contributed by Kuhu Shukla

-import org.apache.hadoop.yarn.nodelabels.RMNodeLabel;
+        assignment.setSkippedType(assignedToChild.getSkippedType());
-      Resource clusterResource, ResourceLimits parentLimits,
+      Resource clusterResource, Resource parentLimits,
-        parentLimits.getLimit(), queueUsage.getUsed(nodePartition));
+        parentLimits, queueUsage.getUsed(nodePartition));
-    CSAssignment assignment = 
-        new CSAssignment(Resources.createResource(0, 0), NodeType.NODE_LOCAL);
-    
+    CSAssignment assignment = CSAssignment.NULL_ASSIGNMENT;
+
+    Resource parentLimits = limits.getLimit();
-          getResourceLimitsOfChild(childQueue, cluster, limits, node.getPartition());
+          getResourceLimitsOfChild(childQueue, cluster, parentLimits,
+              node.getPartition());
-      assignment = childQueue.assignContainers(cluster, node, 
+      CSAssignment childAssignment = childQueue.assignContainers(cluster, node,
-          " stats: " + childQueue + " --> " + 
-          assignment.getResource() + ", " + assignment.getType());
+            " stats: " + childQueue + " --> " +
+            childAssignment.getResource() + ", " + childAssignment.getType());
-              assignment.getResource(), Resources.none())) {
+              childAssignment.getResource(), Resources.none())) {
+        assignment = childAssignment;
+      } else if (childAssignment.getSkippedType() ==
+          CSAssignment.SkippedType.QUEUE_LIMIT) {
+        if (assignment.getSkippedType() !=
+            CSAssignment.SkippedType.QUEUE_LIMIT) {
+          assignment = childAssignment;
+        }
+        Resource resourceToSubtract = Resources.max(resourceCalculator,
+            cluster, childLimits.getHeadroom(), Resources.none());
+        if(LOG.isDebugEnabled()) {
+          LOG.debug("Decrease parentLimits " + parentLimits +
+              " for " + this.getQueueName() + " by " +
+              resourceToSubtract + " as childQueue=" +
+              childQueue.getQueueName() + " is blocked");
+        }
+        parentLimits = Resources.subtract(parentLimits,
+            resourceToSubtract);
-          clusterResource, resourceLimits, RMNodeLabelsManager.NO_LABEL);
+          clusterResource, resourceLimits.getLimit(),
+          RMNodeLabelsManager.NO_LABEL);

UPD43 INS60 INS60 UPD42 MOV43 INS59 INS43 INS59 MOV42 INS40 UPD42 MOV42 INS42 INS32 INS60 MOV42 UPD42 MOV42 UPD42 MOV42 INS43 INS59 INS25 INS21 INS42 INS42 MOV32 INS21 INS27 INS8 INS32 UPD42 UPD42 INS7 INS32 INS40 INS25 INS60 INS25 INS21 INS32 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS27 INS8 INS43 INS59 INS32 INS8 INS7 MOV42 INS42 INS42 INS42 INS32 INS40 INS21 INS42 INS42 INS32 INS42 INS42 INS21 INS42 INS32 UPD42 UPD42 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS32 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS27 INS45 INS42 INS45 INS32 INS45 INS42 INS45 INS32 INS45 INS52 INS42 INS42 INS42 DEL40 DEL26 DEL42 DEL32 DEL43 DEL34 DEL34 DEL32 DEL40 DEL14 DEL59 DEL60 DEL42 DEL7 DEL21