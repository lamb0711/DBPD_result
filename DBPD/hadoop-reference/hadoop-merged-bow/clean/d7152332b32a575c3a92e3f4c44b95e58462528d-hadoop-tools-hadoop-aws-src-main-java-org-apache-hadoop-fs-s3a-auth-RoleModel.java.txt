HADOOP-14556. S3A to support Delegation Tokens.

Contributed by Steve Loughran.

-import java.util.Arrays;
+import java.util.Collection;
-import static com.google.common.base.Preconditions.checkNotNull;
+import static java.util.Objects.requireNonNull;
+   * @param allow allow or deny
+   * @param scope scope
+   * @param actions actions
+   * @return the formatted json statement
+   */
+  public static Statement statement(boolean allow,
+      String scope,
+      Collection<String> actions) {
+    return new Statement(RoleModel.effect(allow))
+        .addActions(actions)
+        .addResources(scope);
+  }
+
+  /**
+   * Create a statement.
+   * Create a statement.
+   * If {@code isDirectory} is true, a "/" is added to the path.
+   * This is critical when adding wildcard permissions under
+   * a directory, and also needed when locking down dir-as-file
+   * and dir-as-directory-marker access.
+   * @param allow allow or deny
+   * @param path path
+   * @param isDirectory is this a directory?
+   * @param actions action
+   * @return the formatted json statement
+   */
+  public static Statement statement(
+      final boolean allow,
+      final Path path,
+      final boolean isDirectory,
+      final boolean wildcards,
+      final Collection<String> actions) {
+    return new Statement(RoleModel.effect(allow))
+        .addActions(actions)
+        .addResources(resource(path, isDirectory, wildcards));
+  }
+
+  /**
-      checkNotNull(sid, "Sid");
-      checkNotNull(effect, "Effect");
+      requireNonNull(sid, "Sid");
+      requireNonNull(effect, "Effect");
+    public Statement addActions(Collection<String> actions) {
+      action.addAll(actions);
+      return this;
+    }
+
+    /**
+     * Add a list of resources.
+     * @param resources resource list
+     * @return this statement.
+     */
+    public Statement addResources(Collection<String> resources) {
+      resource.addAll(resources);
+      return this;
+    }
+    /**
+     * Empty constructor: initializes the statements to an empty list.
+     */
+    public Policy() {
+      statement = new ArrayList<>();
+    }
+
-      statement = Arrays.asList(statements);
+      statement = new ArrayList<>(statements.length);
+      Collections.addAll(statement, statements);
-      checkNotNull(statement, "Statement");
+      requireNonNull(statement, "Statement");
+    /**
+     * Add the statements of another policy to this one.
+     * @param other other policy.
+     */
+    public void add(Policy other) {
+      add(other.statement);
+    }
+
+    /**
+     * Add a collection of statements.
+     * @param statements statements to add.
+     */
+    public void add(Collection<Statement> statements) {
+      statement.addAll(statements);
+    }
+
+    /**
+     * Add a single statement.
+     * @param stat new statement.
+     */
+    public void add(Statement stat) {
+      statement.add(stat);
+    }

MOV26 UPD40 UPD40 INS31 INS31 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS8 INS29 INS83 INS83 INS43 INS42 INS44 INS44 INS44 INS44 INS44 INS8 INS31 INS31 INS31 INS31 INS31 INS31 INS65 INS65 INS65 INS65 INS65 INS42 INS39 INS42 INS43 INS42 INS74 INS42 INS41 INS65 INS65 INS65 INS65 INS65 INS65 INS42 INS83 INS39 INS42 INS83 INS43 INS42 INS83 INS39 INS42 INS83 INS39 INS42 INS83 INS74 INS42 INS41 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS43 INS42 INS44 INS8 INS29 INS83 INS42 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS29 INS83 INS39 INS42 INS44 INS8 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS43 INS43 INS32 INS66 INS66 INS65 INS66 INS66 INS66 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS43 INS43 INS32 INS42 INS74 INS42 INS21 INS41 INS65 INS65 INS65 INS42 INS74 INS42 INS21 INS41 INS65 INS21 INS21 INS21 INS65 INS65 INS43 INS42 INS21 INS65 INS65 INS74 INS42 INS21 INS65 INS65 INS43 INS42 INS21 INS42 INS42 INS32 INS42 INS42 INS66 INS42 INS42 INS32 INS42 INS32 INS43 INS43 INS32 INS52 INS66 INS42 INS66 INS66 INS43 INS43 INS32 INS52 INS66 INS7 INS7 INS32 INS66 INS42 INS66 INS42 INS32 INS66 INS42 INS66 INS43 INS43 INS32 INS66 INS42 INS66 INS42 INS32 INS14 INS42 INS42 INS14 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 UPD42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS14 MOV42 INS14 UPD42 MOV42 UPD42 MOV42 INS42 MOV42 UPD42 INS42 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS32 INS43 INS32 INS74 INS74 INS40 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS42 INS42 DEL32 DEL7 DEL21