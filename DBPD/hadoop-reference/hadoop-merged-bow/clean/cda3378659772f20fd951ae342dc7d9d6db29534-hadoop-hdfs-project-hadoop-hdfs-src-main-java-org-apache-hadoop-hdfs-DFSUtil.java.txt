HDFS-12486. GetConf to get journalnodeslist. Contributed by Bharat Viswanadham.

+import static org.apache.hadoop.hdfs.DFSConfigKeys.DFS_NAMENODE_SHARED_EDITS_DIR_KEY;
+import java.net.UnknownHostException;
+
+import org.apache.hadoop.hdfs.server.common.Util;
+   * Returns list of Journalnode addresses from the configuration.
+   *
+   * @param conf configuration
+   * @return list of journalnode host names
+   * @throws URISyntaxException
+   * @throws IOException
+   */
+  public static Set<String> getJournalNodeAddresses(
+      Configuration conf) throws URISyntaxException, IOException {
+    Set<String> journalNodeList = new HashSet<>();
+    String journalsUri = "";
+    try {
+      journalsUri = conf.get(DFS_NAMENODE_SHARED_EDITS_DIR_KEY);
+      if (journalsUri == null) {
+        Collection<String> nameserviceIds = DFSUtilClient.
+            getNameServiceIds(conf);
+        for (String nsId : nameserviceIds) {
+          journalsUri = DFSUtilClient.getConfValue(
+              null, nsId, conf, DFS_NAMENODE_SHARED_EDITS_DIR_KEY);
+          if (journalsUri == null) {
+            Collection<String> nnIds = DFSUtilClient.getNameNodeIds(conf, nsId);
+            for (String nnId : nnIds) {
+              String suffix = DFSUtilClient.concatSuffixes(nsId, nnId);
+              journalsUri = DFSUtilClient.getConfValue(
+                  null, suffix, conf, DFS_NAMENODE_SHARED_EDITS_DIR_KEY);
+              if (journalsUri == null ||
+                  !journalsUri.startsWith("qjournal://")) {
+                return journalNodeList;
+              } else {
+                LOG.warn(DFS_NAMENODE_SHARED_EDITS_DIR_KEY +" is to be " +
+                    "configured as nameservice" +
+                    " specific key(append it with nameserviceId), no need" +
+                    " to append it with namenodeId");
+                URI uri = new URI(journalsUri);
+                List<InetSocketAddress> socketAddresses = Util.
+                    getAddressesList(uri);
+                for (InetSocketAddress is : socketAddresses) {
+                  journalNodeList.add(is.getHostName());
+                }
+              }
+            }
+          } else if (!journalsUri.startsWith("qjournal://")) {
+            return journalNodeList;
+          } else {
+            URI uri = new URI(journalsUri);
+            List<InetSocketAddress> socketAddresses = Util.
+                getAddressesList(uri);
+            for (InetSocketAddress is : socketAddresses) {
+              journalNodeList.add(is.getHostName());
+            }
+          }
+        }
+      } else {
+        if (!journalsUri.startsWith("qjournal://")) {
+          return journalNodeList;
+        } else {
+          URI uri = new URI(journalsUri);
+          List<InetSocketAddress> socketAddresses = Util.getAddressesList(uri);
+          for (InetSocketAddress is : socketAddresses) {
+            journalNodeList.add(is.getHostName());
+          }
+        }
+      }
+    } catch(UnknownHostException e) {
+      LOG.error("The conf property " + DFS_NAMENODE_SHARED_EDITS_DIR_KEY
+          + " is not properly set with correct journal node hostnames");
+      throw new UnknownHostException(journalsUri);
+    } catch(URISyntaxException e)  {
+      LOG.error("The conf property " + DFS_NAMENODE_SHARED_EDITS_DIR_KEY
+          + "is not set properly with correct journal node uri");
+      throw new URISyntaxException(journalsUri, "The conf property " +
+          DFS_NAMENODE_SHARED_EDITS_DIR_KEY + "is not" +
+          " properly set with correct journal node uri");
+    }
+
+    return journalNodeList;
+  }
+
+  /**

INS26 INS26 INS26 INS40 INS40 INS40 INS31 INS29 INS83 INS83 INS74 INS42 INS44 INS43 INS43 INS8 INS65 INS65 INS65 INS65 INS65 INS43 INS43 INS43 INS42 INS42 INS42 INS60 INS60 INS54 INS41 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS42 INS42 INS74 INS59 INS43 INS59 INS8 INS12 INS12 INS42 INS43 INS43 INS42 INS14 INS42 INS42 INS45 INS21 INS25 INS44 INS8 INS44 INS8 INS42 INS42 INS74 INS7 INS27 INS8 INS8 INS43 INS42 INS21 INS53 INS43 INS42 INS21 INS53 INS43 INS42 INS32 INS42 INS33 INS60 INS70 INS25 INS42 INS32 INS14 INS42 INS32 INS14 INS42 INS42 INS42 INS42 INS74 INS59 INS44 INS42 INS8 INS38 INS8 INS8 INS42 INS42 INS27 INS43 INS42 INS42 INS42 INS27 INS43 INS42 INS27 INS43 INS43 INS42 INS32 INS43 INS42 INS21 INS25 INS32 INS41 INS60 INS60 INS70 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS42 INS45 INS45 INS42 INS42 INS42 INS42 INS42 INS42 INS7 INS27 INS8 INS25 INS42 INS42 INS45 INS42 INS43 INS59 INS74 INS59 INS44 INS42 INS8 INS42 INS32 INS42 INS33 INS60 INS70 INS38 INS8 INS8 INS42 INS42 INS14 INS43 INS43 INS42 INS32 INS43 INS42 INS21 INS42 INS42 INS33 INS42 INS42 INS42 INS74 INS59 INS44 INS42 INS8 INS32 INS41 INS60 INS60 INS70 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS43 INS42 INS32 INS43 INS42 INS60 INS21 INS25 INS42 INS42 INS45 INS42 INS43 INS59 INS74 INS59 INS44 INS42 INS8 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 INS7 INS27 INS8 INS8 INS42 INS42 INS14 INS43 INS43 INS42 INS32 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS27 INS38 INS41 INS21 INS60 INS60 INS70 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS33 INS32 INS42 INS32 INS43 INS59 INS74 INS59 INS44 INS42 INS8 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS42 INS42 INS27 INS42 INS42 INS14 INS43 INS43 INS42 INS32 INS43 INS42 INS21 INS42 INS42 INS42 INS45 INS45 INS45 INS45 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42