HDDS-1026. Reads should fail over to alternate replica. Contributed by Shashikant Banerjee.

+import java.util.stream.Collectors;
-    return sendCommandWithRetry(request);
+    try {
+      XceiverClientReply reply;
+      reply = sendCommandWithRetry(request, null);
+      ContainerCommandResponseProto responseProto = reply.getResponse().get();
+      return responseProto;
+    } catch (ExecutionException | InterruptedException e) {
+      throw new IOException("Failed to execute command " + request, e);
+    }
-  public ContainerCommandResponseProto sendCommandWithRetry(
-      ContainerCommandRequestProto request) throws IOException {
+  @Override
+  public XceiverClientReply sendCommand(
+      ContainerCommandRequestProto request, List<UUID> excludeDns)
+      throws IOException {
+    Preconditions.checkState(HddsUtils.isReadOnly(request));
+    return sendCommandWithRetry(request, excludeDns);
+  }
+
+  private XceiverClientReply sendCommandWithRetry(
+      ContainerCommandRequestProto request, List<UUID> excludeDns)
+      throws IOException {
-    for (DatanodeDetails dn : dns) {
+    DatanodeDetails datanode = null;
+    List<DatanodeDetails> healthyDns =
+        excludeDns != null ? dns.stream().filter(dnId -> {
+          for (UUID excludeId : excludeDns) {
+            if (dnId.getUuid().equals(excludeId)) {
+              return false;
+            }
+          }
+          return true;
+        }).collect(Collectors.toList()) : dns;
+    for (DatanodeDetails dn : healthyDns) {
+        datanode = dn;
-          throw new SCMSecurityException("Failed to authenticate with " +
-              "GRPC XceiverServer with Ozone block token.");
+          throw new SCMSecurityException("Failed to authenticate with "
+              + "GRPC XceiverServer with Ozone block token.");
-      return responseProto;
+      return new XceiverClientReply(
+          CompletableFuture.completedFuture(responseProto), datanode.getUuid());
-  public XceiverClientAsyncReply sendCommandAsync(
+  public XceiverClientReply sendCommandAsync(
-    XceiverClientAsyncReply asyncReply =
+    XceiverClientReply asyncReply =
-  private XceiverClientAsyncReply sendCommandAsync(
+  private XceiverClientReply sendCommandAsync(
-    return new XceiverClientAsyncReply(replyFuture);
+    return new XceiverClientReply(replyFuture);

INS26 INS40 INS31 MOV78 INS83 MOV43 INS42 MOV44 MOV43 INS8 INS78 INS43 INS44 INS44 INS43 UPD83 INS43 INS44 UPD43 UPD43 INS54 INS42 INS42 INS43 INS42 INS74 INS42 INS42 INS21 INS42 INS74 INS42 INS60 INS60 UPD42 UPD42 INS8 INS12 INS42 INS43 INS43 INS32 INS43 INS43 INS43 INS59 INS74 INS59 UPD42 UPD43 INS60 INS21 INS60 MOV41 INS44 INS8 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS33 INS43 INS43 INS42 INS16 INS41 UPD42 UPD43 INS43 INS59 INS7 MOV43 INS59 INS84 INS42 INS53 INS42 INS42 INS42 INS42 INS42 INS27 INS32 INS42 INS14 UPD42 INS42 INS42 INS42 INS32 INS42 INS32 INS43 INS43 INS14 INS42 INS33 INS32 INS42 INS32 INS21 INS43 INS32 INS32 INS42 INS42 INS33 INS32 INS42 INS42 INS42 INS43 INS27 INS42 INS32 INS42 INS86 INS42 INS42 INS7 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS59 INS8 INS42 INS42 INS42 INS70 INS41 INS44 INS42 INS8 INS9 INS43 INS42 INS25 INS42 INS32 INS8 INS32 INS42 INS42 INS41 INS42 INS42 INS9