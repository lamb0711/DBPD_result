HDFS-8228. Erasure Coding: SequentialBlockGroupIdGenerator#nextValue may cause block id conflicts. Contributed by Jing Zhao.

-import org.apache.hadoop.hdfs.protocol.HdfsConstants;
+import static org.apache.hadoop.hdfs.protocol.HdfsConstants.BLOCK_GROUP_INDEX_MASK;
+import static org.apache.hadoop.hdfs.protocol.HdfsConstants.MAX_BLOCKS_IN_GROUP;
+
+ *
+ * Note that the {@link #nextValue()} methods requires external lock to
+ * guarantee IDs have no conflicts.
-    // Skip to next legitimate block group ID based on the naming protocol
-    while (super.getCurrentValue() % HdfsConstants.MAX_BLOCKS_IN_GROUP > 0) {
-      super.nextValue();
-    }
+    skipTo((getCurrentValue() & ~BLOCK_GROUP_INDEX_MASK) + MAX_BLOCKS_IN_GROUP);
-    while (hasValidBlockInRange(super.getCurrentValue())) {
-      super.skipTo(super.getCurrentValue() +
-          HdfsConstants.MAX_BLOCKS_IN_GROUP);
+    final Block b = new Block(getCurrentValue());
+    while (hasValidBlockInRange(b)) {
+      skipTo(getCurrentValue() + MAX_BLOCKS_IN_GROUP);
+      b.setBlockId(getCurrentValue());
-    if (super.getCurrentValue() >= 0) {
-      BlockManager.LOG.warn("All negative block group IDs are used, " +
-          "growing into positive IDs, " +
-          "which might conflict with non-erasure coded blocks.");
+    if (b.getBlockId() >= 0) {
+      throw new IllegalStateException("All negative block group IDs are used, "
+          + "growing into positive IDs, "
+          + "which might conflict with non-erasure coded blocks.");
-    return super.getCurrentValue();
+    return getCurrentValue();
-   *
-   * @param id The starting ID of the range
+   * @param b A block object whose id is set to the starting point for check
-  private boolean hasValidBlockInRange(long id) {
-    for (int i = 0; i < HdfsConstants.MAX_BLOCKS_IN_GROUP; i++) {
-      Block b = new Block(id + i);
+  private boolean hasValidBlockInRange(Block b) {
+    final long id = b.getBlockId();
+    for (int i = 0; i < MAX_BLOCKS_IN_GROUP; i++) {
+      b.setBlockId(id + i);

MOV26 INS26 INS40 UPD40 INS66 INS65 INS66 INS66 INS21 INS60 MOV43 UPD42 INS60 INS68 INS32 INS83 INS43 INS59 INS32 UPD42 UPD66 INS83 INS39 INS59 INS42 INS42 INS27 INS42 INS42 INS14 INS42 INS21 INS32 INS53 INS42 INS42 INS32 INS42 INS21 INS36 INS42 MOV43 INS32 INS32 INS32 INS42 INS42 INS14 INS42 INS42 INS32 INS27 INS42 INS42 INS27 INS42 INS42 INS32 INS43 MOV27 INS42 INS42 MOV27 INS32 INS38 INS32 INS42 INS42 INS42 INS42 INS42 INS42 DEL42 DEL48 DEL40 DEL27 DEL34 DEL27 DEL42 DEL48 DEL21 DEL8 DEL61 DEL42 DEL48 DEL42 DEL42 DEL48 DEL40 DEL27 DEL48 DEL42 DEL48 DEL40 DEL42 DEL32 DEL21 DEL42 DEL48 DEL39 DEL40 DEL42 DEL14 DEL59 DEL60