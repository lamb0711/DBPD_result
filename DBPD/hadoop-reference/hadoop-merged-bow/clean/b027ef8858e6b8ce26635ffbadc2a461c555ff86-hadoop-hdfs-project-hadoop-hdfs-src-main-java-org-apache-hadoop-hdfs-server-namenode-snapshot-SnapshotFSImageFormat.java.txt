HDFS-6072. Clean up dead code of FSImage. Contributed by Haohui Mai.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1576513 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.hdfs.server.namenode.INodeAttributes;
-import org.apache.hadoop.hdfs.server.namenode.INodeFile;
-import org.apache.hadoop.hdfs.util.ReadOnlyList;
+import org.apache.hadoop.hdfs.server.namenode.FSImageFormat.Loader;
-  /**
-   * Save snapshots and snapshot quota for a snapshottable directory.
-   * @param current The directory that the snapshots belongs to.
-   * @param out The {@link DataOutput} to write.
-   * @throws IOException
-   */
-  public static void saveSnapshots(INodeDirectorySnapshottable current,
-      DataOutput out) throws IOException {
-    // list of snapshots in snapshotsByNames
-    ReadOnlyList<Snapshot> snapshots = current.getSnapshotsByNames();
-    out.writeInt(snapshots.size());
-    for (Snapshot s : snapshots) {
-      // write the snapshot id
-      out.writeInt(s.getId());
-    }
-    // snapshot quota
-    out.writeInt(current.getSnapshotQuota());
-  }
-  
-  /**
-   * Save SnapshotDiff list for an INodeDirectoryWithSnapshot.
-   * @param sNode The directory that the SnapshotDiff list belongs to.
-   * @param out The {@link DataOutput} to write.
-   */
-  private static <N extends INode, A extends INodeAttributes, D extends AbstractINodeDiff<N, A, D>>
-      void saveINodeDiffs(final AbstractINodeDiffList<N, A, D> diffs,
-      final DataOutput out, ReferenceMap referenceMap) throws IOException {
-    // Record the diffs in reversed order, so that we can find the correct
-    // reference for INodes in the created list when loading the FSImage
-    if (diffs == null) {
-      out.writeInt(-1); // no diffs
-    } else {
-      final List<D> list = diffs.asList();
-      final int size = list.size();
-      out.writeInt(size);
-      for (int i = size - 1; i >= 0; i--) {
-        list.get(i).write(out, referenceMap);
-      }
-    }
-  }
-  
-  public static void saveDirectoryDiffList(final INodeDirectory dir,
-      final DataOutput out, final ReferenceMap referenceMap
-      ) throws IOException {
-    saveINodeDiffs(dir.getDiffs(), out, referenceMap);
-  }
-  
-  public static void saveFileDiffList(final INodeFile file,
-      final DataOutput out) throws IOException {
-    saveINodeDiffs(file.getDiffs(), out, null);
-  }
-
-  
+
-   * @param loader The {@link Loader} instance that this loading procedure is 
+   * @param loader The {@link Loader} instance that this loading procedure is
-
-    public void writeINodeReferenceWithCount(
-        INodeReference.WithCount withCount, DataOutput out,
-        boolean writeUnderConstruction) throws IOException {
-      final INode referred = withCount.getReferredINode();
-      final long id = withCount.getId();
-      final boolean firstReferred = !referenceMap.containsKey(id);
-      out.writeBoolean(firstReferred);
-
-      if (firstReferred) {
-        FSImageSerialization.saveINode2Image(referred, out,
-            writeUnderConstruction, this);
-        referenceMap.put(id, withCount);
-      } else {
-        out.writeLong(id);
-      }
-    }

MOV26 UPD40 UPD66 DEL40 DEL26 DEL40 DEL26 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL42 DEL65 DEL66 DEL65 DEL42 DEL65 DEL29 DEL83 DEL83 DEL39 DEL42 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL42 DEL43 DEL42 DEL44 DEL42 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL70 DEL42 DEL42 DEL42 DEL42 DEL32 DEL32 DEL21 DEL8 DEL31 DEL66 DEL65 DEL42 DEL66 DEL65 DEL42 DEL66 DEL42 DEL65 DEL66 DEL65 DEL29 DEL83 DEL83 DEL42 DEL42 DEL43 DEL73 DEL42 DEL42 DEL43 DEL73 DEL42 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL73 DEL39 DEL42 DEL83 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL33 DEL27 DEL42 DEL42 DEL34 DEL38 DEL32 DEL21 DEL8 DEL83 DEL42 DEL43 DEL42 DEL43 DEL74 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL39 DEL42 DEL42 DEL34 DEL27 DEL59 DEL58 DEL42 DEL34 DEL27 DEL42 DEL37 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL24 DEL8 DEL25 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL42 DEL32 DEL21 DEL8 DEL31 DEL83 DEL83 DEL39 DEL42 DEL83 DEL42 DEL43 DEL42 DEL44 DEL83 DEL42 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL42 DEL33 DEL32 DEL21 DEL8 DEL31 DEL83 DEL39 DEL42 DEL40 DEL43 DEL42 DEL44 DEL42 DEL43 DEL42 DEL44 DEL39 DEL42 DEL44 DEL42 DEL43 DEL83 DEL42 DEL43 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL83 DEL39 DEL42 DEL42 DEL42 DEL32 DEL59 DEL60 DEL83 DEL39 DEL42 DEL42 DEL42 DEL42 DEL32 DEL38 DEL59 DEL60 DEL42 DEL42 DEL42 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL42 DEL42 DEL52 DEL32 DEL21 DEL42 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL42 DEL42 DEL42 DEL32 DEL21 DEL8 DEL25 DEL8 DEL31