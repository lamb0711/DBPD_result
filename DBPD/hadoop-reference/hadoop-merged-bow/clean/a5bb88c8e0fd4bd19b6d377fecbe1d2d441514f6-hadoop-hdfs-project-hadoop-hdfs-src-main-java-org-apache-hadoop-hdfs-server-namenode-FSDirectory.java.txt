HDFS-10843. Update space quota when a UC block is completed rather than committed. Contributed by Erik Krogen.
+import org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy;
+import org.apache.hadoop.hdfs.server.blockmanagement.BlockInfoStriped;
+  /**
+   * Update the cached quota space for a block that is being completed.
+   * Must only be called once, as the block is being completed.
+   * @param completeBlk - Completed block for which to update space
+   * @param inodes - INodes in path to file containing completeBlk; if null
+   *                 this will be resolved internally
+   */
+  public void updateSpaceForCompleteBlock(BlockInfo completeBlk,
+      INodesInPath inodes) throws IOException {
+    assert namesystem.hasWriteLock();
+    INodesInPath iip = inodes != null ? inodes :
+        INodesInPath.fromINode(namesystem.getBlockCollection(completeBlk));
+    INodeFile fileINode = iip.getLastINode().asFile();
+    // Adjust disk space consumption if required
+    final long diff;
+    final short replicationFactor;
+    if (fileINode.isStriped()) {
+      final ErasureCodingPolicy ecPolicy =
+          FSDirErasureCodingOp.getErasureCodingPolicy(namesystem, iip);
+      final short numDataUnits = (short) ecPolicy.getNumDataUnits();
+      final short numParityUnits = (short) ecPolicy.getNumParityUnits();
+
+      final long numBlocks = numDataUnits + numParityUnits;
+      final long fullBlockGroupSize =
+          fileINode.getPreferredBlockSize() * numBlocks;
+
+      final BlockInfoStriped striped =
+          new BlockInfoStriped(completeBlk, ecPolicy);
+      final long actualBlockGroupSize = striped.spaceConsumed();
+
+      diff = fullBlockGroupSize - actualBlockGroupSize;
+      replicationFactor = (short) 1;
+    } else {
+      diff = fileINode.getPreferredBlockSize() - completeBlk.getNumBytes();
+      replicationFactor = fileINode.getFileReplication();
+    }
+    if (diff > 0) {
+      try {
+        updateSpaceConsumed(iip, 0, -diff, replicationFactor);
+      } catch (IOException e) {
+        LOG.warn("Unexpected exception while updating disk space.", e);
+      }
+    }
+  }
+

INS26 INS26 INS40 INS40 INS31 INS29 INS83 INS39 INS42 INS44 INS44 INS43 INS8 INS65 INS65 INS65 INS43 INS42 INS43 INS42 INS42 INS6 INS60 INS60 INS60 INS60 INS25 INS25 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS42 INS42 INS32 INS43 INS59 INS43 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS32 INS8 INS8 INS27 INS8 INS42 INS42 INS42 INS42 INS16 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS60 INS60 INS60 INS60 INS60 INS60 INS60 INS21 INS21 INS21 INS21 INS42 INS34 INS54 INS27 INS42 INS32 INS32 INS42 INS83 INS43 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS39 INS59 INS83 INS43 INS59 INS83 INS39 INS59 INS7 INS7 INS7 INS7 INS8 INS12 INS42 INS33 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS11 INS42 INS11 INS42 INS27 INS42 INS27 INS42 INS42 INS14 INS42 INS32 INS42 INS27 INS42 INS11 INS42 INS27 INS42 INS32 INS21 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS39 INS32 INS39 INS32 INS42 INS42 INS32 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS39 INS34 INS32 INS32 INS42 INS42 INS32 INS43 INS42 INS21 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS34 INS38 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS42