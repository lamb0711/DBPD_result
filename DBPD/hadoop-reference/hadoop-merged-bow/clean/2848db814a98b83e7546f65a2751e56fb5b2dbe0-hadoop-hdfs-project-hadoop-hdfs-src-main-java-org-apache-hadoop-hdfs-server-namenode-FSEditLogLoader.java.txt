HDFS-3689. Add support for variable length block. Contributed by Jing Zhao.

+import org.apache.hadoop.hdfs.protocol.LocatedBlock;
-import org.apache.hadoop.hdfs.protocol.LocatedBlock;
+import org.apache.hadoop.hdfs.server.namenode.FSEditLogOp.AppendOp;
+import org.apache.hadoop.hdfs.server.namenode.FSEditLogOp.RemoveXAttrOp;
-import org.apache.hadoop.hdfs.server.namenode.FSEditLogOp.RemoveXAttrOp;
-    
+
-      if (LOG.isDebugEnabled()) {
-        LOG.debug(op.opCode + ": " + path +
+      if (FSNamesystem.LOG.isDebugEnabled()) {
+        FSNamesystem.LOG.debug(op.opCode + ": " + path +
-      // There three cases here:
+      // There are 3 cases here:
-      // 3. OP_ADD to open file for append
+      // 3. OP_ADD to open file for append (old append)
-      } else { // This is OP_ADD on an existing file
+      } else { // This is OP_ADD on an existing file (old append)
-          // Note we do not replace the INodeFile when converting it to
-          // under-construction
-          LocatedBlock lb = fsNamesys.prepareFileForWrite(path, iip,
-              addCloseOp.clientName, addCloseOp.clientMachine, false, false);
-          
-          // add the op into retry cache is necessary
+          LocatedBlock lb = fsNamesys.prepareFileForAppend(path, iip,
+              addCloseOp.clientName, addCloseOp.clientMachine, false, false,
+              false);
+          // add the op into retry cache if necessary
+    case OP_APPEND: {
+      AppendOp appendOp = (AppendOp) op;
+      final String path = renameReservedPathsOnUpgrade(appendOp.path,
+          logVersion);
+      if (FSNamesystem.LOG.isDebugEnabled()) {
+        FSNamesystem.LOG.debug(op.opCode + ": " + path +
+            " clientName " + appendOp.clientName +
+            " clientMachine " + appendOp.clientMachine +
+            " newBlock " + appendOp.newBlock);
+      }
+      INodesInPath iip = fsDir.getINodesInPath4Write(path);
+      INodeFile file = INodeFile.valueOf(iip.getLastINode(), path);
+      if (!file.isUnderConstruction()) {
+        LocatedBlock lb = fsNamesys.prepareFileForAppend(path, iip,
+            appendOp.clientName, appendOp.clientMachine, appendOp.newBlock,
+            false, false);
+        // add the op into retry cache if necessary
+        if (toAddRetryCache) {
+          HdfsFileStatus stat = FSDirStatAndListingOp.createFileStatus(
+              fsNamesys.dir, HdfsFileStatus.EMPTY_NAME, file,
+              BlockStoragePolicySuite.ID_UNSPECIFIED,
+              Snapshot.CURRENT_STATE_ID, false, iip);
+          fsNamesys.addCacheEntryWithPayload(appendOp.rpcClientId,
+              appendOp.rpcCallId, new LastBlockWithStatus(lb, stat));
+        }
+      }
+      break;
+    }
-      FSDirConcatOp.unprotectedConcat(fsDir, trg, srcs, concatDeleteOp.timestamp);
+      INodesInPath targetIIP = fsDir.getINodesInPath4Write(trg);
+      INodeFile[] srcFiles = new INodeFile[srcs.length];
+      for (int i = 0; i < srcs.length; i++) {
+        INodesInPath srcIIP = fsDir.getINodesInPath4Write(srcs[i]);
+        srcFiles[i] = srcIIP.getLastINode().asFile();
+      }
+      FSDirConcatOp.unprotectedConcat(fsDir, targetIIP, srcFiles,
+          concatDeleteOp.timestamp);

MOV26 MOV26 INS26 INS40 INS49 INS8 INS10 INS42 INS60 INS60 INS25 INS60 INS60 INS25 INS10 INS60 INS60 INS24 INS43 INS59 INS83 INS43 INS59 INS32 INS8 INS43 INS59 INS43 INS59 INS38 INS8 INS43 INS59 INS5 INS59 INS58 INS27 INS37 INS8 INS40 INS42 INS42 INS11 INS42 INS42 INS32 INS40 INS42 INS21 INS42 INS42 INS32 INS42 INS42 INS32 INS32 INS60 INS25 INS42 INS42 INS32 INS43 INS85 INS42 INS3 INS39 INS59 INS42 INS40 INS42 INS60 INS21 UPD42 UPD42 INS43 INS42 INS42 INS40 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS43 INS59 INS42 INS8 INS42 INS42 INS42 INS42 INS5 INS40 INS42 INS34 INS43 INS59 INS7 INS40 INS42 INS40 INS42 INS27 INS42 INS42 INS42 INS42 INS32 INS60 INS21 INS43 INS85 INS42 INS42 INS32 INS2 INS32 INS40 INS45 INS42 INS45 INS40 INS45 INS40 INS45 INS40 INS42 INS42 INS42 INS42 INS40 INS40 INS40 INS9 INS9 INS43 INS59 INS32 INS42 INS42 INS42 INS2 INS42 INS42 INS32 INS42 INS42 INS42 INS32 INS42 INS42 INS40 INS40 INS14 INS42 INS42 INS42 INS42 UPD42 INS9 INS42 INS42 INS40 INS40 INS42 INS40 INS40 INS9 INS42 INS43 INS42 INS42 INS42 DEL42 DEL42 DEL10