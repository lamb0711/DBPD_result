HDDS-917. Expose NodeManagerMXBean as a MetricsSource. Contributed by Siddharth Wagle.

+import static org.apache.hadoop.hdds.protocol.proto.HddsProtos.NodeState.DEAD;
+import static org.apache.hadoop.hdds.protocol.proto.HddsProtos.NodeState.DECOMMISSIONED;
+import static org.apache.hadoop.hdds.protocol.proto.HddsProtos.NodeState.DECOMMISSIONING;
+import static org.apache.hadoop.hdds.protocol.proto.HddsProtos.NodeState.HEALTHY;
+import static org.apache.hadoop.hdds.protocol.proto.HddsProtos.NodeState.STALE;
+
+import java.util.Map;
+
+import org.apache.hadoop.metrics2.MetricsCollector;
+import org.apache.hadoop.metrics2.MetricsInfo;
+import org.apache.hadoop.metrics2.MetricsSource;
+import org.apache.hadoop.metrics2.lib.Interns;
+import org.apache.hadoop.metrics2.lib.MetricsRegistry;
-public final class SCMNodeMetrics {
+public final class SCMNodeMetrics implements MetricsSource {
+  private final MetricsRegistry registry;
+  private final NodeManagerMXBean managerMXBean;
+  private final MetricsInfo recordInfo = Interns.info("SCMNodeManager",
+      "SCM NodeManager metrics");
+
-  private SCMNodeMetrics() { }
+  private SCMNodeMetrics(NodeManagerMXBean managerMXBean) {
+    this.managerMXBean = managerMXBean;
+    this.registry = new MetricsRegistry(recordInfo);
+  }
-  public static SCMNodeMetrics create() {
+  public static SCMNodeMetrics create(NodeManagerMXBean managerMXBean) {
-        new SCMNodeMetrics());
+        new SCMNodeMetrics(managerMXBean));
+  /**
+   * Get aggregated counter and gauage metrics.
+   */
+  @Override
+  @SuppressWarnings("SuspiciousMethodCalls")
+  public void getMetrics(MetricsCollector collector, boolean all) {
+    Map<String, Integer> nodeCount = managerMXBean.getNodeCount();
+    Map<String, Long> nodeInfo = managerMXBean.getNodeInfo();
+
+    registry.snapshot(
+        collector.addRecord(registry.info()) // Add annotated ones first
+            .addGauge(Interns.info(
+                "HealthyNodes",
+                "Number of healthy datanodes"),
+                nodeCount.get(HEALTHY.toString()))
+            .addGauge(Interns.info("StaleNodes",
+                "Number of stale datanodes"),
+                nodeCount.get(STALE.toString()))
+            .addGauge(Interns.info("DeadNodes",
+                "Number of dead datanodes"),
+                nodeCount.get(DEAD.toString()))
+            .addGauge(Interns.info("DecommissioningNodes",
+                "Number of decommissioning datanodes"),
+                nodeCount.get(DECOMMISSIONING.toString()))
+            .addGauge(Interns.info("DecommissionedNodes",
+                "Number of decommissioned datanodes"),
+                nodeCount.get(DECOMMISSIONED.toString()))
+            .addGauge(Interns.info("DiskCapacity",
+                "Total disk capacity"),
+                nodeInfo.get("DISKCapacity"))
+            .addGauge(Interns.info("DiskUsed",
+                "Total disk capacity used"),
+                nodeInfo.get("DISKUsed"))
+            .addGauge(Interns.info("DiskRemaining",
+                "Total disk capacity remaining"),
+                nodeInfo.get("DISKRemaining"))
+            .addGauge(Interns.info("SSDCapacity",
+                "Total ssd capacity"),
+                nodeInfo.get("SSDCapacity"))
+            .addGauge(Interns.info("SSDUsed",
+                "Total ssd capacity used"),
+                nodeInfo.get("SSDUsed"))
+            .addGauge(Interns.info("SSDRemaining",
+                "Total disk capacity remaining"),
+                nodeInfo.get("SSDRemaining")),
+        all);
+  }

INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS26 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS40 INS43 INS23 INS23 INS23 INS31 INS42 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS83 INS83 INS43 INS59 INS44 INS44 INS29 INS78 INS79 INS83 INS39 INS42 INS44 INS44 INS8 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS43 INS42 INS21 INS21 INS43 INS42 INS65 INS42 INS42 INS45 INS43 INS42 INS39 INS42 INS60 INS60 INS21 INS42 INS42 INS45 INS45 INS42 INS7 INS7 INS42 INS66 INS42 INS74 INS59 INS74 INS59 INS32 INS22 INS42 INS22 INS14 INS43 INS43 INS43 INS42 INS32 INS43 INS43 INS43 INS42 INS32 INS42 INS42 INS32 INS42 INS52 INS42 INS52 INS42 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS45 INS45 INS42 INS42 INS45 INS32 INS42 INS32 INS32 INS42 INS42 INS45 INS45 INS42 INS42 INS45 INS32 INS42 INS32 INS32 INS42 INS42 INS45 INS45 INS42 INS42 INS45 INS32 INS42 INS32 INS32 INS42 INS42 INS45 INS45 INS42 INS42 INS45 INS32 INS42 INS32 INS32 INS42 INS42 INS45 INS45 INS42 INS42 INS45 INS32 INS42 INS32 INS32 INS42 INS42 INS45 INS45 INS42 INS42 INS45 INS32 INS42 INS32 INS32 INS42 INS42 INS45 INS45 INS42 INS42 INS32 INS32 INS42 INS32 INS32 INS42 INS42 INS45 INS45 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS45 INS45 INS42 INS42 INS32 INS42 INS42 INS32 INS42 INS32 INS32 INS42 INS42 INS45 INS45 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS45 INS45 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS42