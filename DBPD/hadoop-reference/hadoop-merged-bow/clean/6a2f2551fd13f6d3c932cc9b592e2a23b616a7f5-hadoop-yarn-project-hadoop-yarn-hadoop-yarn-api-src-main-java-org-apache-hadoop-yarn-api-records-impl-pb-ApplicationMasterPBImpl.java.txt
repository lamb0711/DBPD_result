YARN-135. Client tokens should be per app-attempt, and should be unregistered on App-finish. Contributed by Vinod Kumar Vavilapalli


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1433570 13f79535-47bb-0310-9956-ffa450edef68

-
+import org.apache.hadoop.security.proto.SecurityProtos.TokenProto;
+import org.apache.hadoop.yarn.api.records.ClientToken;
-
-public class ApplicationMasterPBImpl extends ProtoBase<ApplicationMasterProto> implements ApplicationMaster {
+public class ApplicationMasterPBImpl extends ProtoBase<ApplicationMasterProto>
+    implements ApplicationMaster {
-
+  private ClientToken clientToken = null;
-    if (this.applicationId != null && !((ApplicationIdPBImpl)this.applicationId).getProto().equals(builder.getApplicationId())) {
+    if (this.applicationId != null
+        && !((ApplicationIdPBImpl) this.applicationId).getProto().equals(
+          builder.getApplicationId())) {
-    if (this.applicationStatus != null && !((ApplicationStatusPBImpl)this.applicationStatus).getProto().equals(builder.getStatus())) {
+    if (this.applicationStatus != null
+        && !((ApplicationStatusPBImpl) this.applicationStatus).getProto()
+          .equals(builder.getStatus())) {
+    if (this.clientToken != null
+        && !((ClientTokenPBImpl) this.clientToken).getProto().equals(
+          builder.getClientToken())) {
+      builder.setClientToken(convertToProtoFormat(this.clientToken));
+    }
+
-  public String getClientToken() {
+  public ClientToken getClientToken() {
+    if (this.clientToken != null) {
+      return this.clientToken;
+    }
-    return (p.getClientToken());
+    this.clientToken = convertFromProtoFormat(p.getClientToken());
+    return this.clientToken;
-
+  
-  public void setClientToken(String clientToken) {
+  public void setClientToken(ClientToken clientToken) {
-    if (clientToken == null) {
+    if (clientToken == null) 
-      return;
-    }
-    builder.setClientToken((clientToken));
+    this.clientToken = clientToken;
+  private ClientTokenPBImpl convertFromProtoFormat(TokenProto p) {
+    return new ClientTokenPBImpl(p);
+  }
+
+  private TokenProto convertToProtoFormat(ClientToken t) {
+    return ((ClientTokenPBImpl)t).getProto();
+  }

INS26 INS26 INS40 INS40 INS23 INS31 INS31 INS83 INS43 INS59 UPD43 INS83 INS43 INS42 INS44 INS8 INS83 INS43 INS42 INS44 INS8 INS42 INS42 INS33 INS25 UPD42 INS25 INS21 INS41 UPD43 INS42 INS43 INS42 INS41 INS42 INS43 INS42 INS41 INS27 INS8 INS27 INS8 INS7 INS22 UPD42 MOV21 INS7 INS42 INS14 INS42 INS32 INS27 INS38 INS21 INS22 INS33 MOV41 INS22 INS32 INS52 INS42 INS22 INS42 INS43 INS42 INS36 INS42 INS22 INS33 INS32 INS32 INS52 INS42 INS22 INS52 INS42 INS42 MOV32 INS52 INS42 INS42 INS11 INS52 INS42 INS32 INS42 INS32 INS42 INS42 INS32 INS52 INS42 INS43 INS42 INS36 INS42 INS42 INS42 INS42 INS22 INS42 INS11 INS52 INS42 INS43 INS22 INS42 INS52 INS42 DEL36 DEL41 DEL8 DEL42 DEL42 DEL42 DEL36 DEL32