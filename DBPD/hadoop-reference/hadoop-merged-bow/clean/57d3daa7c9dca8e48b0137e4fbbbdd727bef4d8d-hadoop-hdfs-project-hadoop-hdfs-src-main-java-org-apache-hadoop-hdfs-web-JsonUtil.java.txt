Merge from trunk to fs-encryption branch

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1596873 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.XAttrHelper;
+import com.google.common.collect.Maps;
+
+  
+  public static String toJsonString(final XAttr xAttr, 
+      final XAttrCodec encoding) throws IOException {
+    if (xAttr == null) {
+      return "{}";
+    }
+    final Map<String, Object> m = new TreeMap<String, Object>();
+    m.put("name", XAttrHelper.getPrefixName(xAttr));
+    m.put("value", xAttr.getValue() != null ? 
+        XAttrCodec.encodeValue(xAttr.getValue(), encoding) : null);
+    final Map<String, Map<String, Object>> finalMap =
+        new TreeMap<String, Map<String, Object>>();
+    finalMap.put(XAttr.class.getSimpleName(), m);
+    return JSON.toString(finalMap);
+  }
+  
+  private static Map<String, Object> toJsonMap(final XAttr xAttr,
+      final XAttrCodec encoding) throws IOException {
+    if (xAttr == null) {
+      return null;
+    }
+ 
+    final Map<String, Object> m = new TreeMap<String, Object>();
+    m.put("name", XAttrHelper.getPrefixName(xAttr));
+    m.put("value", xAttr.getValue() != null ? 
+        XAttrCodec.encodeValue(xAttr.getValue(), encoding) : null);
+    return m;
+  }
+  
+  private static Object[] toJsonArray(final List<XAttr> array,
+      final XAttrCodec encoding) throws IOException {
+    if (array == null) {
+      return null;
+    } else if (array.size() == 0) {
+      return EMPTY_OBJECT_ARRAY;
+    } else {
+      final Object[] a = new Object[array.size()];
+      for(int i = 0; i < array.size(); i++) {
+        a[i] = toJsonMap(array.get(i), encoding);
+      }
+      return a;
+    }
+  }
+  
+  public static String toJsonString(final List<XAttr> xAttrs, 
+      final XAttrCodec encoding) throws IOException {
+    final Map<String, Object> finalMap = new TreeMap<String, Object>();
+    finalMap.put("XAttrs", toJsonArray(xAttrs, encoding));
+    return JSON.toString(finalMap);
+  }
+  
+  public static XAttr toXAttr(final Map<?, ?> json) throws IOException {
+    if (json == null) {
+      return null;
+    }
+    
+    Map<?, ?> m = (Map<?, ?>) json.get(XAttr.class.getSimpleName());
+    if (m == null) {
+      return null;
+    }
+    String name = (String) m.get("name");
+    String value = (String) m.get("value");
+    return XAttrHelper.buildXAttr(name, decodeXAttrValue(value));
+  }
+  
+  public static Map<String, byte[]> toXAttrs(final Map<?, ?> json) 
+      throws IOException {
+    if (json == null) {
+      return null;
+    }
+    
+    return toXAttrMap((Object[])json.get("XAttrs"));
+  }
+  
+  public static Map<String, byte[]> toXAttrs(final Map<?, ?> json, 
+      List<String> names) throws IOException {
+    if (json == null || names == null) {
+      return null;
+    }
+    if (names.isEmpty()) {
+      return Maps.newHashMap();
+    }
+    Map<String, byte[]> xAttrs = toXAttrs(json);
+    if (xAttrs == null || xAttrs.isEmpty()) {
+      return xAttrs;
+    }
+    
+    Map<String, byte[]> result = Maps.newHashMap();
+    for (String name : names) {
+      if (xAttrs.containsKey(name)) {
+        result.put(name, xAttrs.get(name));
+      }
+    }
+    return result;
+  }
+  
+  private static Map<String, byte[]> toXAttrMap(final Object[] objects) 
+      throws IOException {
+    if (objects == null) {
+      return null;
+    } else if (objects.length == 0) {
+      return Maps.newHashMap();
+    } else {
+      final Map<String, byte[]> xAttrs = Maps.newHashMap();
+      for(int i = 0; i < objects.length; i++) {
+        Map<?, ?> m = (Map<?, ?>) objects[i];
+        String name = (String) m.get("name");
+        String value = (String) m.get("value");
+        xAttrs.put(name, decodeXAttrValue(value));
+      }
+      return xAttrs;
+    }
+  }
+  
+  private static byte[] decodeXAttrValue(String value) throws IOException {
+    if (value != null) {
+      return XAttrCodec.decodeValue(value);
+    } else {
+      return new byte[0];
+    }
+  }

INS26 INS26 INS40 INS40 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS31 INS83 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS83 INS83 INS74 INS42 INS44 INS44 INS43 INS8 INS83 INS83 INS5 INS42 INS44 INS44 INS43 INS8 INS83 INS83 INS43 INS42 INS44 INS44 INS43 INS8 INS83 INS83 INS43 INS42 INS44 INS43 INS8 INS83 INS83 INS74 INS42 INS44 INS43 INS8 INS83 INS83 INS74 INS42 INS44 INS44 INS43 INS8 INS83 INS83 INS74 INS42 INS44 INS43 INS8 INS83 INS83 INS5 INS42 INS44 INS43 INS8 INS42 INS83 INS43 INS42 INS83 INS43 INS42 INS42 INS25 INS60 INS21 INS21 INS60 INS21 INS41 INS43 INS43 INS43 INS83 INS43 INS42 INS83 INS43 INS42 INS42 INS25 INS60 INS21 INS21 INS41 INS43 INS85 INS83 INS74 INS42 INS83 INS43 INS42 INS42 INS25 INS42 INS83 INS74 INS42 INS83 INS43 INS42 INS42 INS60 INS21 INS41 INS42 INS83 INS74 INS42 INS42 INS25 INS60 INS25 INS60 INS60 INS41 INS43 INS43 INS5 INS83 INS74 INS42 INS42 INS25 INS41 INS43 INS43 INS5 INS83 INS74 INS42 INS74 INS42 INS42 INS25 INS25 INS60 INS25 INS60 INS70 INS41 INS43 INS43 INS5 INS83 INS5 INS42 INS42 INS25 INS39 INS85 INS43 INS42 INS42 INS25 INS42 INS42 INS27 INS8 INS83 INS74 INS59 INS32 INS32 INS83 INS74 INS59 INS32 INS32 INS42 INS42 INS42 INS42 INS42 INS27 INS8 INS83 INS74 INS59 INS32 INS32 INS42 INS42 INS43 INS43 INS42 INS27 INS8 INS25 INS43 INS43 INS42 INS83 INS74 INS59 INS32 INS32 INS43 INS76 INS76 INS27 INS8 INS74 INS59 INS27 INS8 INS43 INS59 INS43 INS59 INS32 INS42 INS42 INS39 INS85 INS43 INS76 INS76 INS27 INS8 INS32 INS42 INS42 INS39 INS85 INS43 INS76 INS76 INS43 INS43 INS27 INS8 INS32 INS8 INS74 INS59 INS27 INS8 INS74 INS59 INS44 INS42 INS8 INS42 INS42 INS42 INS39 INS85 INS43 INS85 INS27 INS8 INS25 INS42 INS27 INS8 INS8 INS42 INS33 INS41 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS45 INS32 INS42 INS42 INS45 INS16 INS43 INS43 INS74 INS42 INS14 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS42 INS33 INS41 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS45 INS32 INS42 INS42 INS45 INS16 INS42 INS42 INS42 INS33 INS41 INS27 INS8 INS8 INS42 INS42 INS43 INS43 INS43 INS42 INS14 INS42 INS42 INS45 INS32 INS42 INS42 INS42 INS42 INS42 INS33 INS41 INS43 INS76 INS76 INS42 INS11 INS42 INS33 INS41 INS42 INS42 INS11 INS42 INS42 INS11 INS42 INS42 INS42 INS32 INS42 INS42 INS33 INS41 INS42 INS11 INS42 INS42 INS42 INS27 INS27 INS41 INS42 INS42 INS41 INS43 INS43 INS5 INS42 INS32 INS27 INS32 INS41 INS43 INS43 INS5 INS42 INS32 INS43 INS42 INS25 INS42 INS42 INS33 INS41 INS27 INS8 INS8 INS42 INS33 INS41 INS41 INS45 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS27 INS32 INS33 INS42 INS42 INS43 INS43 INS43 INS74 INS57 INS42 INS33 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS27 INS32 INS33 INS33 INS32 INS34 INS41 INS60 INS24 INS41 INS42 INS42 INS42 INS74 INS42 INS42 INS42 INS33 INS42 INS74 INS32 INS33 INS43 INS32 INS43 INS32 INS42 INS42 INS33 INS5 INS32 INS42 INS33 INS42 INS33 INS33 INS32 INS42 INS42 INS39 INS85 INS42 INS42 INS42 INS33 INS42 INS42 INS42 INS42 INS42 INS39 INS85 INS42 INS42 INS42 INS32 INS8 INS33 INS40 INS34 INS41 INS60 INS24 INS41 INS32 INS3 INS43 INS43 INS43 INS32 INS33 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS43 INS43 INS74 INS43 INS43 INS43 INS43 INS32 INS33 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS83 INS5 INS59 INS58 INS27 INS37 INS8 INS42 INS43 INS43 INS43 INS43 INS76 INS76 INS42 INS42 INS32 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS43 INS85 INS42 INS42 INS45 INS42 INS42 INS42 INS42 INS42 INS21 INS32 INS83 INS74 INS59 INS58 INS27 INS37 INS8 INS42 INS42 INS42 INS42 INS5 INS34 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS43 INS43 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS85 INS42 INS3 INS39 INS59 INS42 INS32 INS42 INS21 INS42 INS42 INS42 INS42 INS57 INS42 INS42 INS32 INS42 INS42 INS43 INS43 INS5 INS42 INS32 INS39 INS59 INS42 INS40 INS42 INS60 INS60 INS60 INS21 INS39 INS85 INS42 INS42 INS42 INS42 INS5 INS32 INS42 INS34 INS42 INS42 INS7 INS43 INS42 INS42 INS42 INS32 INS42 INS42 INS39 INS85 INS42 INS42 INS42 INS34 INS74 INS59 INS43 INS59 INS43 INS59 INS32 INS43 INS85 INS42 INS42 INS2 INS32 INS42 INS42 INS42 INS42 INS43 INS76 INS76 INS42 INS11 INS42 INS42 INS11 INS42 INS42 INS11 INS42 INS42 INS42 INS32 INS42 INS42 INS42 INS42 INS32 INS42 INS42 INS74 INS2 INS43 INS32 INS43 INS32 INS42 INS42 INS42 INS42 INS42 INS43 INS76 INS76 INS42 INS42 INS42 INS42 INS42 INS45 INS42 INS42 INS42 INS45 INS42