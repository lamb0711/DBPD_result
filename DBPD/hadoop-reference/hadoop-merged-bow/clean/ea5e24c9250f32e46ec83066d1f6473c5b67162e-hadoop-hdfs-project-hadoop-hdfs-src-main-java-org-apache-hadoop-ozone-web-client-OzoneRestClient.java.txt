HDFS-12105. Ozone: listVolumes doesn't work from ozone commandline. Contributed by Yiqun Lin.

-   * @param onBehalfOf - User Name of the user if it is not the caller. for
-   *                   example, an admin wants to list some other users
-   *                   volumes.
-   * @param prefix     - Return only volumes that match this prefix.
-   * @param maxKeys    - Maximum number of results to return, if the result set
-   *                   is smaller than requested size, it means that list is
-   *                   complete.
-   * @param prevKey    - The last key that client got, server will continue
-   *                   returning results from that point.
+   * @param onBehalfOf
+   *  User Name of the user if it is not the caller. for example,
+   *  an admin wants to list some other users volumes.
+   * @param prefix
+   *   Return only volumes that match this prefix.
+   * @param maxKeys
+   *   Maximum number of results to return, if the result set
+   *   is smaller than requested size, it means that list is
+   *   complete.
+   * @param startVolume
+   *   The previous volume name.
-  public List<OzoneVolume> listVolumes(String onBehalfOf, String prefix, int
-      maxKeys, OzoneVolume prevKey) throws OzoneException {
+  public List<OzoneVolume> listVolumes(String onBehalfOf, String prefix,
+      int maxKeys, String startVolume) throws OzoneException {
-      if (prefix != null) {
+      if (!Strings.isNullOrEmpty(prefix)) {
-      if (prevKey != null) {
+      if (!Strings.isNullOrEmpty(startVolume)) {
-            prevKey.getOwnerName() + "/" + prevKey.getVolumeName());
+            startVolume);
+   * List all the volumes owned by the user or Owned by the user specified in
+   * the behalf of string.
+   *
+   * @param onBehalfOf - User Name of the user if it is not the caller. for
+   *                   example, an admin wants to list some other users
+   *                   volumes.
+   * @param prefix     - Return only volumes that match this prefix.
+   * @param maxKeys    - Maximum number of results to return, if the result set
+   *                   is smaller than requested size, it means that list is
+   *                   complete.
+   * @param prevKey    - The last key that client got, server will continue
+   *                   returning results from that point.
+   * @return List of Volumes
+   * @throws OzoneException
+   */
+  public List<OzoneVolume> listVolumes(String onBehalfOf, String prefix,
+      int maxKeys, OzoneVolume prevKey) throws OzoneException {
+    String volumeName = null;
+
+    if (prevKey != null) {
+      volumeName = prevKey.getVolumeName();
+    }
+
+    return listVolumes(onBehalfOf, prefix, maxKeys, volumeName);
+  }
+
+  /**
-    return listVolumes(onBehalfOf, null, 1000, null);
+    return listVolumes(onBehalfOf, null,
+        Integer.parseInt(Header.OZONE_DEFAULT_LIST_SIZE), StringUtils.EMPTY);

INS31 INS29 INS44 MOV29 INS83 INS74 INS42 INS44 INS44 INS44 MOV44 INS43 INS8 INS65 INS65 INS65 INS65 INS65 INS65 INS65 INS43 INS42 INS43 INS43 INS43 INS42 INS43 INS42 INS39 INS42 INS42 INS60 INS25 INS41 INS66 INS66 INS42 INS66 INS66 INS42 INS66 INS42 INS66 INS66 INS66 INS42 INS66 INS66 INS42 INS42 INS42 INS42 INS42 INS42 INS43 INS59 MOV27 INS8 INS32 INS42 INS42 INS33 INS21 INS42 INS42 INS42 INS42 INS42 INS32 INS40 INS38 INS38 INS7 INS42 INS42 INS40 INS32 INS32 INS42 MOV32 INS42 INS42 INS42 INS42 INS42 INS42 UPD42 MOV42 DEL42 DEL33 DEL27 DEL42 DEL32 DEL45 DEL27 DEL34 DEL33