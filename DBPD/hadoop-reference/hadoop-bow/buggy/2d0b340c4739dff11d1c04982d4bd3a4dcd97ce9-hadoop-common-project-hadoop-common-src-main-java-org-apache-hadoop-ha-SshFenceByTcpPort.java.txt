HADOOP-7961. Move HA fencing to common. Contributed by Eli Collins


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1228510 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.hdfs.server.namenode.NameNode;
- * This fencing implementation sshes to the target node and uses <code>fuser</code>
- * to kill the process listening on the NameNode's TCP port. This is
- * more accurate than using "jps" since it doesn't require parsing,
- * and will work even if there are multiple NameNodes running on the
- * same machine.<p>
+ * This fencing implementation sshes to the target node and uses 
+ * <code>fuser</code> to kill the process listening on the service's
+ * TCP port. This is more accurate than using "jps" since it doesn't 
+ * require parsing, and will work even if there are multiple service
+ * processes running on the same machine.<p>
- * <code>sshfence([username@]nnhost[:ssh-port][, target-nn-port])</code>
+ * <code>sshfence([username@]nnhost[:ssh-port], target-port)</code>
- * If no <code>target-nn-port</code> is specified, it is assumed that the
- * target NameNode is listening on the same port as the local NameNode.
- * <p>
-    int targetPort = args.targetPort != null ?
-        args.targetPort : getDefaultNNPort();
-      return doFence(session, targetPort);
+      return doFence(session, args.targetPort);
-  private boolean doFence(Session session, int nnPort) throws JSchException {
+  private boolean doFence(Session session, int port) throws JSchException {
-      LOG.info("Looking for process running on port " + nnPort);
+      LOG.info("Looking for process running on port " + port);
-          "PATH=$PATH:/sbin:/usr/sbin fuser -v -k -n tcp " + nnPort);
+          "PATH=$PATH:/sbin:/usr/sbin fuser -v -k -n tcp " + port);
-            "listening on port " + nnPort);
+            "listening on port " + port);
-            "Indeterminate response from trying to kill NameNode. " +
+            "Indeterminate response from trying to kill service. " +
-  private int getDefaultNNPort() {
-    return NameNode.getAddress(getConf()).getPort();
-  }
-
-    
-    final Integer targetPort;
+    final int targetPort;
-      if (argList.length > 2 || argList.length == 0) {
+      if (argList.length != 2) {
-      if (argList.length > 1) {
-        targetPort = parseConfiggedPort(argList[1]);
-      } else {
-        targetPort = null;
-      }
+      targetPort = parseConfiggedPort(argList[1]);
