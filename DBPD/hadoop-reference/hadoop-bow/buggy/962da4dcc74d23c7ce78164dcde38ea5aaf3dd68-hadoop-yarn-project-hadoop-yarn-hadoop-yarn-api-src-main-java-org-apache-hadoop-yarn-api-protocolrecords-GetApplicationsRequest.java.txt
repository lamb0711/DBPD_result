YARN-1074. Cleaned up YARN CLI application list to only display running applications by default. Contributed by Xuan Gong.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1517196 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.EnumSet;
+import org.apache.hadoop.yarn.api.records.YarnApplicationState;
+  /**
+   * <p>
+   * The request from clients to get a report of Applications matching the
+   * giving application types in the cluster from the
+   * <code>ResourceManager</code>.
+   * </p>
+   *
+   *
+   * @see ApplicationClientProtocol#getApplications(GetApplicationsRequest)
+   */
-  public static GetApplicationsRequest newInstance(
-      Set<String> applicationTypes) {
+  public static GetApplicationsRequest
+      newInstance(Set<String> applicationTypes) {
+   * <p>
+   * The request from clients to get a report of Applications matching the
+   * giving application states in the cluster from the
+   * <code>ResourceManager</code>.
+   * </p>
+   *
+   *
+   * @see ApplicationClientProtocol#getApplications(GetApplicationsRequest)
+   */
+  @Public
+  @Stable
+  public static GetApplicationsRequest newInstance(
+      EnumSet<YarnApplicationState> applicationStates) {
+    GetApplicationsRequest request =
+        Records.newRecord(GetApplicationsRequest.class);
+    request.setApplicationStates(applicationStates);
+    return request;
+  }
+
+  /**
+   * <p>
+   * The request from clients to get a report of Applications matching the
+   * giving and application types and application types in the cluster from the
+   * <code>ResourceManager</code>.
+   * </p>
+   *
+   *
+   * @see ApplicationClientProtocol#getApplications(GetApplicationsRequest)
+   */
+  @Public
+  @Stable
+  public static GetApplicationsRequest newInstance(
+      Set<String> applicationTypes,
+      EnumSet<YarnApplicationState> applicationStates) {
+    GetApplicationsRequest request =
+        Records.newRecord(GetApplicationsRequest.class);
+    request.setApplicationTypes(applicationTypes);
+    request.setApplicationStates(applicationStates);
+    return request;
+  }
+
+  /**
+
+  /**
+   * Get the application states to filter applications on
+   *
+   * @return Set of Application states to filter on
+   */
+  @Public
+  @Stable
+  public abstract EnumSet<YarnApplicationState> getApplicationStates();
+
+  /**
+   * Set the application states to filter applications on
+   *
+   * @param applicationStates
+   * A Set of Application states to filter on.
+   * If not defined, match all running applications
+   */
+  @Private
+  @Unstable
+  public abstract void
+      setApplicationStates(EnumSet<YarnApplicationState> applicationStates);
