HDFS-2941. Add an administrative command to download a copy of the fsimage from the NN. Contributed by Aaron T. Myers.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305447 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.File;
+import org.apache.hadoop.hdfs.HAUtil;
+import org.apache.hadoop.hdfs.server.namenode.TransferFsImage;
+  /**
+   * Download the most recent fsimage from the name node, and save it to a local
+   * file in the given directory.
+   * 
+   * @param argv
+   *          List of of command line parameters.
+   * @param idx
+   *          The index of the command that is being processed.
+   * @return an exit code indicating success or failure.
+   * @throws IOException
+   */
+  public int fetchImage(String[] argv, int idx) throws IOException {
+    String infoServer = DFSUtil.getInfoServer(
+        HAUtil.getAddressOfActive(getDFS()), getConf(), true);
+    TransferFsImage.downloadMostRecentImageToDirectory(infoServer,
+        new File(argv[idx]));
+    return 0;
+  }
+
+      "\t[-fetchImage <local directory>]\n" +
+    String fetchImage = "-fetchImage <local directory>:\n" +
+      "\tDownloads the most recent fsimage from the Name Node and saves it in" +
+      "\tthe specified local directory.\n";
+    
+    } else if ("fetchImage".equals(cmd)) {
+      System.out.println(fetchImage);
+      System.out.println(setBalancerBandwidth);
+      System.out.println(fetchImage);
+    } else if ("-fetchImage".equals(cmd)) {
+      System.err.println("Usage: java DFSAdmin"
+          + " [-fetchImage <local directory>]");
+      System.err.println("           [-fetchImage <local directory>]");
+    } else if ("-fetchImage".equals(cmd)) {
+      if (argv.length != 2) {
+        printUsage(cmd);
+        return exitCode;
+      }
+      } else if ("-fetchImage".equals(cmd)) {
+        exitCode = fetchImage(argv, i);
