MAPREDUCE-6995. Uploader tool for Distributed Cache Deploy documentation (miklos.szegedi@cloudera.com via rkanter)

+import static org.apache.hadoop.fs.FileSystem.FS_DEFAULT_NAME_KEY;
+
+  private Configuration conf = new Configuration();
+  @VisibleForTesting
+  void setConf(Configuration configuration) {
+    conf = configuration;
+  }
+
-      FileSystem fileSystem = targetPath.getFileSystem(new Configuration());
+      FileSystem fileSystem = targetPath.getFileSystem(conf);
-    FileSystem fileSystem = targetPath.getFileSystem(new Configuration());
+    FileSystem fileSystem = targetPath.getFileSystem(conf);
-          location.getOffset(), (key, value) -> value + replicas);
+          location.getOffset(),
+          (key, value) -> value == null ? 0 : value + replicas);
-    FileSystem fileSystem = targetPath.getFileSystem(new Configuration());
+    FileSystem fileSystem = targetPath.getFileSystem(conf);
-        .withDescription("Input class path")
+        .withDescription("Input class path. Defaults to the default classpath.")
-    if (fs == null) {
-      LOG.error("Target file system not specified");
-      printHelp(opts);
-      return false;
-    }
-        "mr-framework.tar.gz#mr-framework");
-    if (path == null) {
+        "/usr/lib/mr-framework.tar.gz#mr-framework");
+    boolean isFullPath =
+        path.startsWith("hdfs://") ||
+        path.startsWith("file://");
+
+    if (fs == null) {
+      fs = conf.get(FS_DEFAULT_NAME_KEY);
+      if (fs == null && !isFullPath) {
+        LOG.error("No filesystem specified in either fs or target.");
+        printHelp(opts);
+        return false;
+      } else {
+        LOG.info(String.format(
+            "Target file system not specified. Using default %s", fs));
+      }
+    }
+    if (path.isEmpty()) {
-    StringBuilder absolutePath = new StringBuilder(fs);
-    absolutePath = absolutePath.append(path.startsWith("/") ? "" : "/");
+    StringBuilder absolutePath = new StringBuilder();
+    if (!isFullPath) {
+      absolutePath.append(fs);
+      absolutePath.append(path.startsWith("/") ? "" : "/");
+    }
