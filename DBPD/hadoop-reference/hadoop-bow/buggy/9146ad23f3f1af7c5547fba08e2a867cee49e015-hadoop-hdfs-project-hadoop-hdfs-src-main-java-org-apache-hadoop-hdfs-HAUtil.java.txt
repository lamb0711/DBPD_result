HDFS-2582. Scope dfs.ha.namenodes config by nameservice. Contributed by Todd Lipcon.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1207738 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Map;
-   * Returns true if HA for namenode is configured.
+   * Returns true if HA for namenode is configured for the given nameservice
+   * @param nsId nameservice, or null if no federated NS is configured
-  public static boolean isHAEnabled(Configuration conf) {
-    Collection<String> collection = DFSUtil.getNameNodeIds(conf);
-    return collection != null && !collection.isEmpty();
+  public static boolean isHAEnabled(Configuration conf, String nsId) {
+    Map<String, Map<String, InetSocketAddress>> addresses =
+      DFSUtil.getHaNnRpcAddresses(conf);
+    if (addresses == null) return false;
+    Map<String, InetSocketAddress> nnMap = addresses.get(nsId);
+    return nnMap != null && nnMap.size() > 1;
-  public static String getNameNodeId(Configuration conf) {
-    String namenodeId = conf.get(DFS_HA_NAMENODE_ID_KEY);
+  public static String getNameNodeId(Configuration conf, String nsId) {
+    String namenodeId = conf.getTrimmed(DFS_HA_NAMENODE_ID_KEY);
-    if (!isHAEnabled(conf)) {
-      return null;
-    }
-    namenodeId = DFSUtil.getSuffixIDs(conf, DFS_NAMENODE_RPC_ADDRESS_KEY,
-        DFSUtil.LOCAL_ADDRESS_MATCHER)[1];
-    if (namenodeId == null) {
+    
+    String suffixes[] = DFSUtil.getSuffixIDs(conf, DFS_NAMENODE_RPC_ADDRESS_KEY,
+        nsId, null, DFSUtil.LOCAL_ADDRESS_MATCHER);
+    if (suffixes == null) {
-    return namenodeId;
+    
+    return suffixes[1];
-    if (!isHAEnabled(conf)) {
-      return null;
-    }
-    
+
