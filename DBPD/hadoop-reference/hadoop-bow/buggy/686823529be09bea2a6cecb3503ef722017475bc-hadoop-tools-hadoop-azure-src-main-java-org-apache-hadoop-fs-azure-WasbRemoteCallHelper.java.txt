HADOOP-13930. Azure: Add Authorization support to WASB. Contributed by Sivaguru Sankaridurg and Dushyanth

-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.InputStreamReader;
-import java.nio.charset.StandardCharsets;
-
+import com.google.common.annotations.VisibleForTesting;
+import org.apache.http.Header;
+import org.apache.http.StatusLine;
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.nio.charset.StandardCharsets;
+
+  @VisibleForTesting
+  public void updateHttpClient(HttpClient client) {
+    this.client = client;
+  }
+
+   * @throws IOException
-      throws WasbRemoteCallException {
+      throws WasbRemoteCallException, IOException {
+      final String APPLICATION_JSON = "application/json";
+      final int MAX_CONTENT_LENGTH = 1024;
+
+      getRequest.setHeader("Accept", APPLICATION_JSON);
+
-      if (response.getStatusLine().getStatusCode() != HttpStatus.SC_OK) {
-        throw new WasbRemoteCallException(
-            response.getStatusLine().toString());
+      StatusLine statusLine = response.getStatusLine();
+      if (statusLine == null || statusLine.getStatusCode() != HttpStatus.SC_OK) {
+        throw new WasbRemoteCallException(getRequest.getURI().toString() + ":" +
+            ((statusLine!=null) ? statusLine.toString() : "NULL")
+        );
+      }
+
+      Header contentTypeHeader = response.getFirstHeader("Content-Type");
+      if (contentTypeHeader == null || contentTypeHeader.getValue() != APPLICATION_JSON) {
+        throw new WasbRemoteCallException(getRequest.getURI().toString() + ":" +
+            "Content-Type mismatch: expected: " + APPLICATION_JSON +
+            ", got " + ((contentTypeHeader!=null) ? contentTypeHeader.getValue() : "NULL")
+        );
+      }
+
+      Header contentLengthHeader = response.getFirstHeader("Content-Length");
+      if (contentLengthHeader == null) {
+        throw new WasbRemoteCallException(getRequest.getURI().toString() + ":" +
+            "Content-Length header missing"
+        );
+      }
+
+      try {
+        if (Integer.parseInt(contentLengthHeader.getValue()) > MAX_CONTENT_LENGTH) {
+          throw new WasbRemoteCallException(getRequest.getURI().toString() + ":" +
+              "Content-Length:" + contentLengthHeader.getValue() +
+              "exceeded max:" + MAX_CONTENT_LENGTH
+          );
+        }
+      }
+      catch (NumberFormatException nfe) {
+        throw new WasbRemoteCallException(getRequest.getURI().toString() + ":" +
+            "Invalid Content-Length value :" + contentLengthHeader.getValue()
+        );
-      throw new WasbRemoteCallException("Encountered ClientProtocolException"
-          + " while making remote call", clientProtocolEx);
+      throw new WasbRemoteCallException(getRequest.getURI().toString() + ":" +
+          "Encountered ClientProtocolException while making remote call", clientProtocolEx);
-      throw new WasbRemoteCallException("Encountered IOException while making"
-          + " remote call", ioEx);
+      throw new WasbRemoteCallException(getRequest.getURI().toString() + ":" +
+          "Encountered IOException while making remote call", ioEx);
