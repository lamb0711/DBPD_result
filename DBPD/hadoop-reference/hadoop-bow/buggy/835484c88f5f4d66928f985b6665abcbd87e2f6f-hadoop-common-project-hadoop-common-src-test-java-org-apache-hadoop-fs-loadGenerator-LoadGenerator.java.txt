HADOOP-10328. loadGenerator exit code is not reliable. Contributed by Haohui Mai.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570304 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Arrays;
+import org.apache.hadoop.io.IOUtils;
-  
+  private final byte[] WRITE_CONTENTS = new byte[4096];
+
+  private static final int ERR_TEST_FAILED = 2;
+
+    Arrays.fill(WRITE_CONTENTS, (byte) 'a');
-    
+    private boolean failed;
+
+        failed = true;
+
+    /** Create a file with a length of <code>fileSize</code>.
+     * The file is filled with 'a'.
+     */
+    private void genFile(Path file, long fileSize) throws IOException {
+      long startTime = Time.now();
+      FSDataOutputStream out = null;
+      try {
+        out = fc.create(file,
+            EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE),
+            CreateOpts.createParent(), CreateOpts.bufferSize(4096),
+            CreateOpts.repFac((short) 3));
+        executionTime[CREATE] += (Time.now() - startTime);
+        totalNumOfOps[CREATE]++;
+
+        long i = fileSize;
+        while (i > 0) {
+          long s = Math.min(fileSize, WRITE_CONTENTS.length);
+          out.write(WRITE_CONTENTS, 0, (int) s);
+          i -= s;
+        }
+
+        startTime = Time.now();
+        executionTime[WRITE_CLOSE] += (Time.now() - startTime);
+        totalNumOfOps[WRITE_CLOSE]++;
+      } finally {
+        IOUtils.cleanup(LOG, out);
+      }
+    }
+
+    boolean failed = false;
+      failed = failed || thread.failed;
+
+    if (failed) {
+      exitCode = -ERR_TEST_FAILED;
+    }
+
-    while((line = br.readLine()) != null) {
+
+    while ((line = br.readLine()) != null) {
-      if(line.startsWith("#") || line.isEmpty()) // skip comments and blanks
+      if (line.startsWith("#") || line.isEmpty()) // skip comments and blanks
-      
+
-      if(a.length != 3) {
-        System.err.println("Line " + lineNum + 
-                           ": Incorrect number of parameters: " + line);
+      if (a.length != 3) {
+        System.err.println("Line " + lineNum
+            + ": Incorrect number of parameters: " + line);
-      
+
-        if(d < 0) { 
-           System.err.println("Line " + lineNum + ": Invalid duration: " + d);
-           return -1;
+        if (d < 0) {
+          System.err.println("Line " + lineNum + ": Invalid duration: " + d);
+          return -1;
-        if(r < 0.0 || r > 1.0 ) {
-           System.err.println("Line " + lineNum + 
-                      ": The read probability must be [0, 1]: " + r);
-           return -1;
-        }
-        
-        double w = Double.parseDouble(a[2]);
-        if(w < 0.0 || w > 1.0) {
-          System.err.println("Line " + lineNum + 
-                       ": The read probability must be [0, 1]: " + r);
+        if (r < 0.0 || r > 1.0) {
+          System.err.println("Line " + lineNum
+              + ": The read probability must be [0, 1]: " + r);
-        
+
+        double w = Double.parseDouble(a[2]);
+        if (w < 0.0 || w > 1.0) {
+          System.err.println("Line " + lineNum
+              + ": The read probability must be [0, 1]: " + r);
+          return -1;
+        }
+
-      } catch( NumberFormatException nfe) {
+      } catch (NumberFormatException nfe) {
+      } finally {
+        IOUtils.cleanup(LOG, br);
-    br.close();
-    fr.close();
-    
-
-  /** Create a file with a length of <code>fileSize</code>.
-   * The file is filled with 'a'.
-   */
-  private void genFile(Path file, long fileSize) throws IOException {
-    long startTime = Time.now();
-    FSDataOutputStream out = fc.create(file,
-        EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE),
-        CreateOpts.createParent(), CreateOpts.bufferSize(4096),
-        CreateOpts.repFac((short) 3));
-    executionTime[CREATE] += (Time.now()-startTime);
-    totalNumOfOps[CREATE]++;
-
-    for (long i=0; i<fileSize; i++) {
-      out.writeByte('a');
-    }
-    startTime = Time.now();
-    out.close();
-    executionTime[WRITE_CLOSE] += (Time.now()-startTime);
-    totalNumOfOps[WRITE_CLOSE]++;
-  }
