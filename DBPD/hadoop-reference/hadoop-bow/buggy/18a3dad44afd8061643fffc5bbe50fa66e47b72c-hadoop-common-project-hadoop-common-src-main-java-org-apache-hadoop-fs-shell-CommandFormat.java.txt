HDFS-7701. Support reporting per storage type quota and usage with hadoop/hdfs shell. (Contributed by Peter Shi)

+  final Map<String, String> optionsWithValue = new HashMap<String, String>();
+  /**
+   * add option with value
+   *
+   * @param option option name
+   */
+  public void addOptionWithValue(String option) {
+    if (options.containsKey(option)) {
+      throw new DuplicatedOptionException(option);
+    }
+    optionsWithValue.put(option, null);
+  }
+
+      } else if (optionsWithValue.containsKey(opt)) {
+        args.remove(pos);
+        if (pos < args.size() && (args.size() > minPar)) {
+          arg = args.get(pos);
+          args.remove(pos);
+        } else {
+          arg = "";
+        }
+        if (!arg.startsWith("-") || arg.equals("-")) {
+          optionsWithValue.put(opt, arg);
+        }
-  
+
+  /**
+   * get the option's value
+   *
+   * @param option option name
+   * @return option value
+   * if option exists, but no value assigned, return ""
+   * if option not exists, return null
+   */
+  public String getOptValue(String option) {
+    return optionsWithValue.get(option);
+  }
+
+
+  /**
+   * Used when a duplicated option is supplied to a command.
+   */
+  public static class DuplicatedOptionException extends IllegalArgumentException {
+    private static final long serialVersionUID = 0L;
+
+    public DuplicatedOptionException(String duplicatedOption) {
+      super("option " + duplicatedOption + " already exsits!");
+    }
+  }
