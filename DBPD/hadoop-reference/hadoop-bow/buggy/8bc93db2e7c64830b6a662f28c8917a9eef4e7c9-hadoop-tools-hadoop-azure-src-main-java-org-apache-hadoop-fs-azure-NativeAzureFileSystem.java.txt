HADOOP-12635. Adding Append API support for WASB. Contributed by Dushyanth.

+import java.io.DataOutputStream;
-import java.util.Iterator;
-import org.apache.commons.lang.exception.ExceptionUtils;
-import org.apache.hadoop.fs.azure.StorageInterface.CloudBlobWrapper;
-import org.apache.hadoop.metrics2.lib.DefaultMetricsSystem;
-import com.microsoft.azure.storage.AccessCondition;
-import com.microsoft.azure.storage.OperationContext;
-import com.microsoft.azure.storage.StorageErrorCode;
-import com.microsoft.azure.storage.blob.CloudBlob;
-import com.microsoft.azure.storage.StorageErrorCodeStrings;
+
-        NativeAzureFileSystem.cleanup(LOG, output);
+        NativeAzureFileSystemHelper.cleanup(LOG, output);
+  /*
+   * Property to enable Append API.
+   */
+  public static final String APPEND_SUPPORT_ENABLE_PROPERTY_NAME = "fs.azure.enable.append.support";
+
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-          if (NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          if (NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-          if (NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          if (NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-            && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-
+  private boolean appendSupportEnabled = false;
-
+    this.appendSupportEnabled = conf.getBoolean(APPEND_SUPPORT_ENABLE_PROPERTY_NAME, false);
-    throw new IOException("Not supported");
+
+    if (!appendSupportEnabled) {
+      throw new UnsupportedOperationException("Append Support not enabled");
+    }
+
+    LOG.debug("Opening file: {} for append", f);
+
+    Path absolutePath = makeAbsolute(f);
+    String key = pathToKey(absolutePath);
+    FileMetadata meta = null;
+    try {
+      meta = store.retrieveMetadata(key);
+    } catch(Exception ex) {
+
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
+
+      if (innerException instanceof StorageException
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
+
+        throw new FileNotFoundException(String.format("%s is not found", key));
+      } else {
+        throw ex;
+      }
+    }
+
+    if (meta == null) {
+      throw new FileNotFoundException(f.toString());
+    }
+
+    if (meta.isDir()) {
+      throw new FileNotFoundException(f.toString()
+          + " is a directory not a file.");
+    }
+
+    if (store.isPageBlobKey(key)) {
+      throw new IOException("Append not supported for Page Blobs");
+    }
+
+    DataOutputStream appendStream = null;
+
+    try {
+      appendStream = store.retrieveAppendStream(key, bufferSize);
+    } catch (Exception ex) {
+
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
+
+      if (innerException instanceof StorageException
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
+        throw new FileNotFoundException(String.format("%s is not found", key));
+      } else {
+        throw ex;
+      }
+    }
+
+    return new FSDataOutputStream(appendStream, statistics);
-        NativeAzureFileSystem.cleanup(LOG, out);
+        NativeAzureFileSystemHelper.cleanup(LOG, out);
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-          && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-          Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+          Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-            if (NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            if (NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-            && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-          Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+          Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-            if (NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            if (NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-            && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-            Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+            Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-                && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+                && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(e);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(e);
-            && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-          && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-          && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-            && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-         Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+         Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-             && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+             && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-          && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-          && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-        if (NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+        if (NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-            && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-          && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-        Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+        Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-            && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+            && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-          && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-      Throwable innerException = NativeAzureFileSystem.checkForAzureStorageException(ex);
+      Throwable innerException = NativeAzureFileSystemHelper.checkForAzureStorageException(ex);
-          && NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {
+          && NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {
-
-  private static void cleanup(Logger log, java.io.Closeable closeable) {
-    if (closeable != null) {
-      try {
-        closeable.close();
-      } catch(IOException e) {
-        if (log != null) {
-          log.debug("Exception in closing {}", closeable, e);
-        }
-      }
-    }
-  }
-
-  /*
-   * Helper method to recursively check if the cause of the exception is
-   * a Azure storage exception.
-   */
-  private static Throwable checkForAzureStorageException(Exception e) {
-
-    Throwable innerException = e.getCause();
-
-    while (innerException != null
-            && !(innerException instanceof StorageException)) {
-      innerException = innerException.getCause();
-    }
-
-    return innerException;
-  }
-
-  /*
-   * Helper method to check if the AzureStorageException is
-   * because backing blob was not found.
-   */
-  private static boolean isFileNotFoundException(StorageException e) {
-
-    String errorCode = ((StorageException) e).getErrorCode();
-    if (errorCode != null
-        && (errorCode.equals(StorageErrorCodeStrings.BLOB_NOT_FOUND)
-            || errorCode.equals(StorageErrorCodeStrings.RESOURCE_NOT_FOUND)
-            || errorCode.equals(StorageErrorCode.BLOB_NOT_FOUND.toString())
-            || errorCode.equals(StorageErrorCode.RESOURCE_NOT_FOUND.toString()))) {
-
-      return true;
-    }
-
-    return false;
-  }
-
