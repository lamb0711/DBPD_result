HADOOP-6510. Adds a way for superusers to impersonate other users in a secure environment. Contributed by Jitendra Nath Pandey.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@907549 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collection;
+import org.apache.hadoop.security.SaslRpcServer.AuthMethod;
+import org.apache.hadoop.security.token.Token;
+import org.apache.hadoop.security.token.TokenIdentifier;
+  private AuthMethod authMethod;
-  public ConnectionHeader(String protocol, UserGroupInformation ugi) {
+  public ConnectionHeader(String protocol, UserGroupInformation ugi, AuthMethod authMethod) {
+    this.authMethod = authMethod;
-      ugi = UserGroupInformation.createRemoteUser(username);
+      boolean realUserNamePresent = in.readBoolean();
+      if (realUserNamePresent) {
+        String realUserName = in.readUTF();
+        UserGroupInformation realUserUgi = UserGroupInformation
+            .createRemoteUser(realUserName);
+        ugi = UserGroupInformation.createProxyUser(username, realUserUgi);
+      } else {
+      	ugi = UserGroupInformation.createRemoteUser(username);
+      }
-      out.writeBoolean(true);
-      out.writeUTF(ugi.getUserName());
+      if (UserGroupInformation.isSecurityEnabled()) {
+        if (authMethod == AuthMethod.KERBEROS) {
+          //Send effective user for Kerberos auth
+          out.writeBoolean(true);
+          out.writeUTF(ugi.getUserName());
+          out.writeBoolean(false);
+        } else {
+          //Don't send user for token auth
+          out.writeBoolean(false);
+        }
+      } else {
+        //Send both effective user and real user for simple auth
+        out.writeBoolean(true);
+        out.writeUTF(ugi.getUserName());
+        if (ugi.getRealUser() != null) {
+          out.writeBoolean(true);
+          out.writeUTF(ugi.getRealUser().getUserName());
+        } else {
+          out.writeBoolean(false);
+        }
+      }
