HDFS-9724. Degraded performance in WebHDFS listing as it does not reuse ObjectMapper. Contributed by Akira Ajisaka.

+  // Reuse ObjectMapper instance for improving performance.
+  // ObjectMapper is thread safe as long as we always configure instance
+  // before use. We don't have a re-entrant call pattern in WebHDFS,
+  // so we just need to worry about thread-safety.
+  private static final ObjectMapper MAPPER = new ObjectMapper();
+
-    ObjectMapper mapper = new ObjectMapper();
-      return mapper.writeValueAsString(m);
+      return MAPPER.writeValueAsString(m);
-    ObjectMapper mapper = new ObjectMapper();
-          toJsonString(FileStatus.class, m) : mapper.writeValueAsString(m);
+          toJsonString(FileStatus.class, m) : MAPPER.writeValueAsString(m);
-    ObjectMapper mapper = new ObjectMapper();
-      return mapper.writeValueAsString(finalMap);
+      return MAPPER.writeValueAsString(finalMap);
-    ObjectMapper mapper = new ObjectMapper();
-    return mapper.writeValueAsString(finalMap);
+    return MAPPER.writeValueAsString(finalMap);
-    ObjectMapper mapper = new ObjectMapper();
-    String ret = mapper.writeValueAsString(names);
+    String ret = MAPPER.writeValueAsString(names);
-    return mapper.writeValueAsString(finalMap);
+    return MAPPER.writeValueAsString(finalMap);
