Revert "HADOOP-14556. S3A to support Delegation Tokens."

This reverts commit d7152332b32a575c3a92e3f4c44b95e58462528d.

-import java.util.Collections;
-import org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException;
- *   <li>On failure, the last "relevant" AmazonClientException raised is
- *   rethrown; exceptions other than 'no credentials' have priority.</li>
+ *   <li>On failure, the last AmazonClientException raised is rethrown.</li>
-   * The name, which is empty by default.
-   * Uses in the code assume if non empty there's a trailing space.
-   */
-  private String name = "";
-
-  /**
-   * Create with an initial list of providers.
-   * @param name name for error messages, may be ""
-   * @param providerArgs provider list.
-   */
-  public AWSCredentialProviderList(final String name,
-      final AWSCredentialsProvider... providerArgs) {
-    setName(name);
-    Collections.addAll(providers, providerArgs);
-  }
-
-  /**
-   * Set the name; adds a ": " if needed.
-   * @param name name to add, or "" for no name.
-   */
-  public void setName(final String name) {
-    if (!name.isEmpty() && !name.endsWith(": ")) {
-      this.name = name + ": ";
-    } else {
-      this.name = name;
-    }
-  }
-
-  /**
-   * Add all providers from another list to this one.
-   * @param other the other list.
-   */
-  public void addAll(AWSCredentialProviderList other) {
-    providers.addAll(other.providers);
-  }
-
-  /**
-      throw new NoAuthWithAWSException(name +
+      throw new NoAuthWithAWSException(
-        Preconditions.checkNotNull(credentials,
-            "Null credentials returned by %s", provider);
-      } catch (NoAwsCredentialsException e) {
-        // don't bother with the stack trace here as it is usually a
-        // minor detail.
-
-        // only update the last exception if it isn't set.
-        // Why so? Stops delegation token issues being lost on the fallback
-        // values.
-        if (lastException == null) {
-          lastException = e;
-        }
-        LOG.debug("No credentials from {}: {}",
-            provider, e.toString());
-    String message =  name +  "No AWS Credentials provided by "
+    String message = "No AWS Credentials provided by "
-    if (lastException instanceof CredentialInitializationException) {
-      throw lastException;
-    } else {
-      throw new NoAuthWithAWSException(message, lastException);
-    }
+    throw new NoAuthWithAWSException(message, lastException);
-      throw new NoAuthWithAWSException(name + NO_AWS_CREDENTIAL_PROVIDERS);
+      throw new NoAuthWithAWSException(NO_AWS_CREDENTIAL_PROVIDERS);
-        name +
-        StringUtils.join(providers, ", ") + ']'
-        + (lastProvider != null ? (" last provider: " + lastProvider) : "");
+        StringUtils.join(providers, ", ") + ']';
-
-  /**
-   * Get the size of this list.
-   * @return the number of providers in the list.
-   */
-  public int size() {
-    return providers.size();
-  }
