HADOOP-6994. Api to get delegation token in AbstractFileSystem. Contributed by jitendra.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1091618 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashSet;
+import org.apache.hadoop.security.token.Token;
+
+  /**
+   * Returns the list of AbstractFileSystems accessed in the path. The list may
+   * contain more than one AbstractFileSystems objects in case of symlinks.
+   * 
+   * @param f
+   *          Path which needs to be resolved
+   * @return List of AbstractFileSystems accessed in the path
+   * @throws IOException
+   */
+  Set<AbstractFileSystem> resolveAbstractFileSystems(final Path f)
+      throws IOException {
+    final Path absF = fixRelativePart(f);
+    final HashSet<AbstractFileSystem> result = new HashSet<AbstractFileSystem>();
+    new FSLinkResolver<Void>() {
+      public Void next(final AbstractFileSystem fs, final Path p)
+          throws IOException, UnresolvedLinkException {
+        result.add(fs);
+        fs.getFileStatus(p);
+        return null;
+      }
+    }.resolve(this, absF);
+    return result;
+  }
+  
+  /**
+   * Get delegation tokens for the file systems accessed for a given
+   * path.
+   * @param p Path for which delegations tokens are requested.
+   * @param renewer the account name that is allowed to renew the token.
+   * @return List of delegation tokens.
+   * @throws IOException
+   */
+  @InterfaceAudience.LimitedPrivate( { "HDFS", "MapReduce" })
+  public List<Token<?>> getDelegationTokens(
+      Path p, String renewer) throws IOException {
+    Set<AbstractFileSystem> afsSet = resolveAbstractFileSystems(p);
+    List<Token<?>> tokenList = 
+        new ArrayList<Token<?>>();
+    for (AbstractFileSystem afs : afsSet) {
+      List<Token<?>> afsTokens = afs.getDelegationTokens(renewer);
+      tokenList.addAll(afsTokens);
+    }
+    return tokenList;
+  }
