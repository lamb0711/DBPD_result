HADOOP-9264. Reverting r1441164 and wait for Jenkins results before committing the patch.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1441166 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.zip.GZIPInputStream;
-import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
-import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
-    if (!untarDir.mkdirs()) {
+    if (!untarDir.mkdirs()) {           
+    StringBuilder untarCommand = new StringBuilder();
-    if(Shell.WINDOWS) {
-      // Tar is not native to Windows. Use simple Java based implementation for 
-      // tests and simple tar archives
-      unTarUsingJava(inFile, untarDir, gzipped);
-    }
-    else {
-      // spawn tar utility to untar archive for full fledged unix behavior such 
-      // as resolving symlinks in tar archives
-      unTarUsingTar(inFile, untarDir, gzipped);
-    }
-  }
-  
-  private static void unTarUsingTar(File inFile, File untarDir,
-      boolean gzipped) throws IOException {
-    StringBuffer untarCommand = new StringBuffer();
-  
-  private static void unTarUsingJava(File inFile, File untarDir,
-      boolean gzipped) throws IOException {
-    InputStream inputStream = null;
-    if (gzipped) {
-      inputStream = new BufferedInputStream(new GZIPInputStream(
-          new FileInputStream(inFile)));
-    } else {
-      inputStream = new BufferedInputStream(new FileInputStream(inFile));
-    }
-    TarArchiveInputStream tis = new TarArchiveInputStream(inputStream);
-
-    for (TarArchiveEntry entry = tis.getNextTarEntry(); entry != null;) {
-      unpackEntries(tis, entry, untarDir);
-      entry = tis.getNextTarEntry();
-    }
-  }
-  
-  private static void unpackEntries(TarArchiveInputStream tis,
-      TarArchiveEntry entry, File outputDir) throws IOException {
-    if (entry.isDirectory()) {
-      File subDir = new File(outputDir, entry.getName());
-      if (!subDir.mkdir() && !subDir.isDirectory()) {
-        throw new IOException("Mkdirs failed to create tar internal dir "
-            + outputDir);
-      }
-
-      for (TarArchiveEntry e : entry.getDirectoryEntries()) {
-        unpackEntries(tis, e, subDir);
-      }
-
-      return;
-    }
-
-    File outputFile = new File(outputDir, entry.getName());
-    if (!outputDir.exists()) {
-      if (!outputDir.mkdirs()) {
-        throw new IOException("Mkdirs failed to create tar internal dir "
-            + outputDir);
-      }
-    }
-
-    int count;
-    byte data[] = new byte[2048];
-    BufferedOutputStream outputStream = new BufferedOutputStream(
-        new FileOutputStream(outputFile));
-
-    while ((count = tis.read(data)) != -1) {
-      outputStream.write(data, 0, count);
-    }
-
-    outputStream.flush();
-    outputStream.close();
-  }
-  
