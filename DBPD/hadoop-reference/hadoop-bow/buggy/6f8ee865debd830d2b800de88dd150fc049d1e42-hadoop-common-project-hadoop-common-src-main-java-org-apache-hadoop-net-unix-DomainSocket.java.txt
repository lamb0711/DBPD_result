HDFS-4388. DomainSocket should throw AsynchronousCloseException when appropriate. Contributed by Colin Patrick McCabe.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-347@1432339 13f79535-47bb-0310-9956-ffa450edef68

+import java.nio.channels.AsynchronousCloseException;
+import java.nio.channels.ClosedChannelException;
+    boolean exc = true;
-      return new DomainSocket(path, accept0(fd));
+      DomainSocket ret = new DomainSocket(path, accept0(fd));
+      exc = false;
+      return ret;
-      fdUnref();
+      fdUnref(exc);
-  private void fdRef() throws SocketException {
+  private void fdRef() throws ClosedChannelException {
-      throw new SocketException("Socket is closed.");
+      throw new ClosedChannelException();
-  private void fdUnref() {
+  private void fdUnref(boolean checkClosed) throws AsynchronousCloseException {
-    assert newCount >= 0;
+    assert (newCount & ~STATUS_CLOSED_MASK) >= 0;
+    if (checkClosed & ((newCount & STATUS_CLOSED_MASK) != 0)) {
+      throw new AsynchronousCloseException();
+    }
+    boolean exc = true;
+      exc = false;
-      fdUnref();
+      fdUnref(exc);
+    int attribute;
+    boolean exc = true;
-      return getAttribute0(fd, type);
+      attribute = getAttribute0(fd, type);
+      exc = false;
+      return attribute;
-      fdUnref();
+      fdUnref(exc);
+    boolean exc = true;
+      exc = false;
-      fdUnref();
+      fdUnref(exc);
+    boolean exc = true;
-      return receiveFileDescriptors0(fd, jfds, jbuf, offset, length);
+      int nBytes = receiveFileDescriptors0(fd, jfds, jbuf, offset, length);
+      exc = false;
+      return nBytes;
-      fdUnref();
+      fdUnref(exc);
-      fdUnref();
+      fdUnref(!success);
+      boolean exc = true;
+        exc = false;
-        fdUnref();
+        fdUnref(exc);
+      boolean exc = true;
-        return DomainSocket.readArray0(DomainSocket.this.fd, b, off, len);
+        int nRead = DomainSocket.readArray0(DomainSocket.this.fd, b, off, len);
+        exc = false;
+        return nRead;
-        fdUnref();
+        fdUnref(exc);
+      boolean exc = true;
-        return DomainSocket.available0(DomainSocket.this.fd);
+        int nAvailable = DomainSocket.available0(DomainSocket.this.fd);
+        exc = false;
+        return nAvailable;
-        fdUnref();
+        fdUnref(exc);
+      boolean exc = true;
+        exc = false;
-        fdUnref();
+        fdUnref(exc);
+        boolean exc = true;
+        exc = false;
-        fdUnref();
+        fdUnref(exc);
+      boolean exc = true;
+        exc = false;
-        fdUnref();
+        fdUnref(exc);
