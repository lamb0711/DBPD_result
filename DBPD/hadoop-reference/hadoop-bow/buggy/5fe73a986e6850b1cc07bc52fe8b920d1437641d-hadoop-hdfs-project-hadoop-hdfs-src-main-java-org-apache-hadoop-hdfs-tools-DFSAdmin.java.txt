HDFS-5752. Add a new DFSAdmin command to query, start and finalize rolling upgrade.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1558299 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.protocol.HdfsConstants.RollingUpgradeAction;
+import org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo;
+import com.google.common.base.Preconditions;
+
-  
+
+  private static class RollingUpgradeCommand {
+    static final String NAME = "rollingUpgrade";
+    static final String USAGE = "-"+NAME+" [<query|start|finalize>]";
+    static final String DESCRIPTION = USAGE + ":\n"
+        + "     query: query current rolling upgrade status.\n"
+        + "     start: start rolling upgrade."
+        + "  finalize: finalize rolling upgrade.";
+
+    /** Check if a command is the rollingUpgrade command
+     * 
+     * @param cmd A string representation of a command starting with "-"
+     * @return true if this is a clrQuota command; false otherwise
+     */
+    static boolean matches(String cmd) {
+      return ("-"+NAME).equals(cmd); 
+    }
+
+    static int run(DistributedFileSystem dfs, String[] argv, int idx) throws IOException {
+      final RollingUpgradeAction action = RollingUpgradeAction.fromString(
+          argv.length >= 2? argv[1]: "");
+      if (action == null) {
+        throw new IllegalArgumentException("Failed to covert \"" + argv[1]
+            +"\" to " + RollingUpgradeAction.class.getSimpleName());
+      }
+
+      System.out.println(action + " rolling upgrade ...");
+
+      final RollingUpgradeInfo info = dfs.rollingUpgrade(action);
+      switch(action){
+      case QUERY:
+        if (info.isStarted()) {
+          System.out.println("Rolling upgrade is in progress:");
+          System.out.println(info);
+        } else {
+          System.out.println("There is no rolling upgrade in progress.");
+        }
+        break;
+      case START:
+        Preconditions.checkState(info.isStarted());
+        System.out.println("Rolling upgrade is started:");
+        System.out.println(info);
+        break;
+      case FINALIZE:
+        Preconditions.checkState(info.isFinalized());
+        System.out.println("Rolling upgrade is finalized:");
+        System.out.println(info);
+        break;
+      }
+      return 0;
+    }
+  }
+
+      "\t[-finalizeUpgrade]\n" +
+      "\t[" + RollingUpgradeCommand.USAGE +"]\n" +
-      "\t[refreshSuperUserGroupsConfiguration]\n" +
+      "\t[-refreshSuperUserGroupsConfiguration]\n" +
+    } else if (RollingUpgradeCommand.matches("-"+cmd)) {
+      System.out.println(RollingUpgradeCommand.DESCRIPTION);
+      System.out.println(RollingUpgradeCommand.DESCRIPTION);
+    } else if (RollingUpgradeCommand.matches(cmd)) {
+      System.err.println("Usage: java DFSAdmin"
+          + " [" + RollingUpgradeCommand.USAGE+"]");
+      System.err.println("           ["+RollingUpgradeCommand.USAGE+"]");
+    } else if (RollingUpgradeCommand.matches(cmd)) {
+      if (argv.length < 1 || argv.length > 2) {
+        printUsage(cmd);
+        return exitCode;
+      }
+      } else if (RollingUpgradeCommand.matches(cmd)) {
+        exitCode = RollingUpgradeCommand.run(getDFS(), argv, i);
