YARN-841. Move Auxiliary service to yarn-api, annotate and document it. Contributed by Vinod Kumar Vavilapalli.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494031 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.yarn.api.records.ApplicationId;
+import org.apache.hadoop.yarn.server.api.ApplicationTerminationContext;
+import org.apache.hadoop.yarn.server.api.AuxiliaryService;
+import org.apache.hadoop.yarn.server.api.ApplicationInitializationContext;
-  protected final Map<String,ByteBuffer> serviceMeta;
+  protected final Map<String,ByteBuffer> serviceMetaData;
-    serviceMeta =
+    serviceMetaData =
-  public Map<String, ByteBuffer> getMeta() {
+  public Map<String, ByteBuffer> getMetaData() {
-        serviceMeta.size());
-    synchronized (serviceMeta) {
-      for (Entry<String, ByteBuffer> entry : serviceMeta.entrySet()) {
+        serviceMetaData.size());
+    synchronized (serviceMetaData) {
+      for (Entry<String, ByteBuffer> entry : serviceMetaData.entrySet()) {
-      ByteBuffer meta = service.getMeta();
+      ByteBuffer meta = service.getMetaData();
-        serviceMeta.put(name, meta);
+        serviceMetaData.put(name, meta);
-        serviceMeta.clear();
+        serviceMetaData.clear();
-      service.initApp(event.getUser(), event.getApplicationID(),
-          event.getServiceData());
+      service.initializeApplication(new ApplicationInitializationContext(event
+        .getUser(), event.getApplicationID(), event.getServiceData()));
-        serv.stopApp(event.getApplicationID());
+        serv.stopApplication(new ApplicationTerminationContext(event
+          .getApplicationID()));
-  public interface AuxiliaryService extends Service {
-    void initApp(String user, ApplicationId appId, ByteBuffer data);
-    void stopApp(ApplicationId appId);
-    /**
-     * Retreive metadata for this service.  This is likely going to be contact
-     * information so that applications can access the service remotely.  Ideally
-     * each service should provide a method to parse out the information to a usable
-     * class.  This will only be called after the services start method has finished.
-     * the result may be cached.
-     * @return metadata for this service that should be made avaiable to applications.
-     */
-    ByteBuffer getMeta();
-  }
-
