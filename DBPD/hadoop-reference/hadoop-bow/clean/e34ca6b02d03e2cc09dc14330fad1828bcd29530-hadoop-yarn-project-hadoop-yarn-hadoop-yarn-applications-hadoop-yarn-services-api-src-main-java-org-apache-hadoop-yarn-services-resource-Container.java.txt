YARN-6173. Add artifact info and privileged container details to the container info in API GET response. Contributed by Gour Saha

+  private Artifact artifact = null;
+  private Boolean privilegedContainer = null;
+  /**
+   * Artifact used for this container.
+   **/
+  public Container artifact(Artifact artifact) {
+    this.artifact = artifact;
+    return this;
+  }
+
+  @ApiModelProperty(example = "null", value = "Artifact used for this container.")
+  @JsonProperty("artifact")
+  public Artifact getArtifact() {
+    return artifact;
+  }
+
+  public void setArtifact(Artifact artifact) {
+    this.artifact = artifact;
+  }
+
+  /**
+   * Container running in privileged mode or not.
+   **/
+  public Container privilegedContainer(Boolean privilegedContainer) {
+    this.privilegedContainer = privilegedContainer;
+    return this;
+  }
+
+  @ApiModelProperty(example = "null", value = "Container running in privileged mode or not.")
+  @JsonProperty("privileged_container")
+  public Boolean getPrivilegedContainer() {
+    return privilegedContainer;
+  }
+
+  public void setPrivilegedContainer(Boolean privilegedContainer) {
+    this.privilegedContainer = privilegedContainer;
+  }
+
-    return Objects.equals(this.id, container.id)
-        && Objects.equals(this.launchTime, container.launchTime)
-        && Objects.equals(this.ip, container.ip)
-        && Objects.equals(this.hostname, container.hostname)
-        && Objects.equals(this.bareHost, container.bareHost)
-        && Objects.equals(this.state, container.state)
-        && Objects.equals(this.componentName, container.componentName)
-        && Objects.equals(this.resource, container.resource);
+    return Objects.equals(this.id, container.id);
-    return Objects.hash(id, launchTime, ip, hostname, bareHost, state,
-        componentName, resource);
+    return Objects.hash(id);
+    sb.append("    artifact: ").append(toIndentedString(artifact)).append("\n");
+    sb.append("    privilegedContainer: ")
+        .append(toIndentedString(privilegedContainer)).append("\n");
