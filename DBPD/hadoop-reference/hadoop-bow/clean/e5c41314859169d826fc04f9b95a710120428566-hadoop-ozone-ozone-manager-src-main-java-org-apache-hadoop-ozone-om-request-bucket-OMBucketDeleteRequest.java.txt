HDDS-1856. Make required changes for Non-HA to use new HA code in OM. (#1174)


+import org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerDoubleBufferHelper;
-      long transactionLogIndex) {
+      long transactionLogIndex,
+      OzoneManagerDoubleBufferHelper ozoneManagerDoubleBufferHelper) {
+    IOException exception = null;
-
+    boolean acquiredLock = false;
+    OMClientResponse omClientResponse = null;
-    } catch (IOException ex) {
-      omMetrics.incNumBucketDeleteFails();
-      LOG.error("Delete bucket failed for bucket:{} in volume:{}", bucketName,
-          volumeName, ex);
-      auditLog(auditLogger, buildAuditMessage(OMAction.DELETE_BUCKET,
-          auditMap, ex, userInfo));
-      return new OMBucketDeleteResponse(volumeName, bucketName,
-          createErrorOMResponse(omResponse, ex));
-    }
-    IOException exception = null;
-    // acquire lock
-    omMetadataManager.getLock().acquireLock(BUCKET_LOCK, volumeName,
-        bucketName);
-    try {
+
+      // acquire lock
+      acquiredLock = omMetadataManager.getLock().acquireLock(BUCKET_LOCK,
+          volumeName, bucketName);
+
+      omResponse.setDeleteBucketResponse(
+          DeleteBucketResponse.newBuilder().build());
+
+      // Add to double buffer.
+      omClientResponse = new OMBucketDeleteResponse(volumeName, bucketName,
+          omResponse.build());
+      omClientResponse = new OMBucketDeleteResponse(volumeName, bucketName,
+          createErrorOMResponse(omResponse, exception));
-      omMetadataManager.getLock().releaseLock(BUCKET_LOCK, volumeName,
-          bucketName);
+      if (omClientResponse != null) {
+        omClientResponse.setFlushFuture(
+            ozoneManagerDoubleBufferHelper.add(omClientResponse,
+                transactionLogIndex));
+      }
+      if (acquiredLock) {
+        omMetadataManager.getLock().releaseLock(BUCKET_LOCK, volumeName,
+            bucketName);
+      }
-      omResponse.setDeleteBucketResponse(
-          DeleteBucketResponse.newBuilder().build());
-      return new OMBucketDeleteResponse(volumeName, bucketName,
-          omResponse.build());
+      return omClientResponse;
-      return new OMBucketDeleteResponse(volumeName, bucketName,
-          createErrorOMResponse(omResponse, exception));
+      return omClientResponse;
