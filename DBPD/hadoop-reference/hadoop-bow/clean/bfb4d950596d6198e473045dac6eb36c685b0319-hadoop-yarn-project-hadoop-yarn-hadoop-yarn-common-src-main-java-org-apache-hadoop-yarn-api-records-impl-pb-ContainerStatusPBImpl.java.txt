YARN-5430. Return container's ip and host from NM ContainerStatus call. Contributed by Jian He.

+import org.apache.hadoop.util.StringUtils;
+import org.apache.hadoop.yarn.proto.YarnProtos;
-import com.google.protobuf.TextFormat;
+import java.util.Arrays;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
-  
-  
+  private static final String HOST = "HOST";
+  private static final String IPS = "IPS";
+  private Map<String, String> containerAttributes = new HashMap<>();
+
+
+    if (containerAttributes != null && !containerAttributes.isEmpty()) {
+      addContainerAttributesToProto();
+    }
+  private void addContainerAttributesToProto() {
+    maybeInitBuilder();
+    builder.clearContainerAttributes();
+    if (containerAttributes == null) {
+      return;
+    }
+    Iterable<YarnProtos.StringStringMapProto> iterable =
+        new Iterable<YarnProtos.StringStringMapProto>() {
+
+          @Override
+          public Iterator<YarnProtos.StringStringMapProto> iterator() {
+            return new Iterator<YarnProtos.StringStringMapProto>() {
+
+              private Iterator<String> keyIter =
+                  containerAttributes.keySet().iterator();
+
+              @Override public void remove() {
+                throw new UnsupportedOperationException();
+              }
+
+              @Override public YarnProtos.StringStringMapProto next() {
+                String key = keyIter.next();
+                String value = containerAttributes.get(key);
+
+                if (value == null) {
+                  value = "";
+                }
+
+                return YarnProtos.StringStringMapProto.newBuilder().setKey(key)
+                    .setValue((value)).build();
+              }
+
+              @Override public boolean hasNext() {
+                return keyIter.hasNext();
+              }
+            };
+          }
+        };
+    builder.addAllContainerAttributes(iterable);
+  }
+
+  private void initContainerAttributes() {
+    ContainerStatusProtoOrBuilder p = viaProto ? proto : builder;
+    List<YarnProtos.StringStringMapProto> list = p.getContainerAttributesList();
+    for (YarnProtos.StringStringMapProto c : list) {
+      if (!containerAttributes.containsKey(c.getKey())) {
+        this.containerAttributes.put(c.getKey(), c.getValue());
+      }
+    }
+  }
+
+  @Override
+  public synchronized List<String> getIPs() {
+    if (!containerAttributes.containsKey(IPS)) {
+      initContainerAttributes();
+    }
+    String ips = containerAttributes.get((IPS));
+    return ips == null ? null :  Arrays.asList(ips.split(","));
+  }
+
+  @Override
+  public synchronized void setIPs(List<String> ips) {
+    maybeInitBuilder();
+    if (ips == null) {
+      containerAttributes.remove(IPS);
+      addContainerAttributesToProto();
+      return;
+    }
+    containerAttributes.put(IPS, StringUtils.join(",", ips));
+  }
+
+  @Override
+  public synchronized String getHost() {
+    if (containerAttributes.get(HOST) == null) {
+      initContainerAttributes();
+    }
+    return containerAttributes.get(HOST);
+  }
+
+  @Override
+  public synchronized void setHost(String host) {
+    maybeInitBuilder();
+    if (host == null) {
+      containerAttributes.remove(HOST);
+      return;
+    }
+    containerAttributes.put(HOST, host);
+  }
+
