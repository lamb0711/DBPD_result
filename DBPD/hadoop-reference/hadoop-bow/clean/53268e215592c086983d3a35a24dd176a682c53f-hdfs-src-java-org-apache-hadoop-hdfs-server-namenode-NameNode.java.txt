HDFS-2073. Add @Override annotation to NameNode. Contributed by Suresh Srinivas.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1136230 13f79535-47bb-0310-9956-ffa450edef68

-  @Override
+  @Override // VersionedProtocol
-  /** {@inheritDoc} */
+  @Override // NamenodeProtocol
-  /*
-   * Active name-node cannot journal.
-   */
+    // Active name-node cannot journal.
-  /////////////////////////////////////////////////////
-  // ClientProtocol
-  /////////////////////////////////////////////////////
-  
+  @Override // ClientProtocol
-  @Override
+  @Override // ClientProtocol
-  @Override
+  @Override // ClientProtocol
-  /** {@inheritDoc} */
+  @Override // ClientProtocol
-  private static String getClientMachine() {
-    String clientMachine = Server.getRemoteAddress();
-    if (clientMachine == null) {
-      clientMachine = "";
-    }
-    return clientMachine;
-  }
-
-  /** {@inheritDoc} */
+  @Override // ClientProtocol
-  /** {@inheritDoc} */
+  @Override // ClientProtocol
-  /** {@inheritDoc} */
+  @Override // ClientProtocol
-  /** {@inheritDoc} */
+  @Override // ClientProtocol
-  /** {@inheritDoc} */
+  @Override // ClientProtocol
-  /** {@inheritDoc} */
+  @Override // ClientProtocol
-  /** {@inheritDoc} */
+  @Override // ClientProtocol
-  @Override
+  @Override // ClientProtocol
-  @Override
+  @Override // ClientProtocol
-  /** {@inheritDoc} */
+  @Override // ClientProtocol
+  @Override
-  /** {@inheritDoc} */
-  @Override
+  @Override // ClientProtocol
-  @Override
+  @Override // ClientProtocol
-  /** {@inheritDoc} */
+  @Override // DatanodeProtocol
+  @Override // ClientProtocol
-  /** {@inheritDoc} */
-  @Override
+  @Override // ClientProtocol
-  /** 
-   * {@inheritDoc}
-   */
+  @Override // ClientProtocol
-  /** {@inheritDoc} */
-  @Override
+  @Override // ClientProtocol
-  /**
-   */
+  @Override // ClientProtocol
-  /** {@inheritDoc} */
+  @Override // ClientProtocol
-   * 
-  /** {@inheritDoc} */
+  @Override // ClientProtocol
-  /**
-   */
+  @Override // ClientProtocol
-  /**
-   */
-  @Override
+  @Override // ClientProtocol
-  /**
-   * Get the file info for a specific file.
-   * @param src The string representation of the path to the file
-   * @return object containing information regarding the file
-   *         or null if file not found
-   */
+  @Override // ClientProtocol
-  /**
-   * Get the file info for a specific file. If the path refers to a 
-   * symlink then the FileStatus of the symlink is returned.
-   * @param src The string representation of the path to the file
-   * @return object containing information regarding the file
-   *         or null if file not found
-   */
+  @Override // ClientProtocol
-  /**
-   */
+  @Override // ClientProtocol
-  @Override
+  @Override // ClientProtocol
-  @Override
+  @Override // ClientProtocol
-  @Override
+  @Override // ClientProtocol
-  /**
-   * Refresh the list of datanodes that the namenode should allow to  
-   * connect.  Re-reads conf by creating new HdfsConfiguration object and 
-   * uses the files list in the configuration to update the list. 
-   */
+  @Override // ClientProtocol
-  /**
-   * Returns the size of the current edit log.
-   */
-  @Deprecated
+  @Deprecated // NamenodeProtocol
-  /**
-   * Roll the edit log.
-   */
+  @Override // NamenodeProtocol
-  /**
-   * Roll the image 
-   */
-  @Deprecated @Override
+  @Deprecated
+  @Override // NamenodeProtocol
+  @Override // ClientProtocol
+  @Override // ClientProtocol
-  /**
-   * Dumps namenode state into specified file
-   */
+  @Override // ClientProtocol
-  /**
-   * {@inheritDoc}
-   */
-  @Override
-  public CorruptFileBlocks
-    listCorruptFileBlocks(String path, String cookie) 
-    throws IOException {
+  @Override // ClientProtocol
+  public CorruptFileBlocks listCorruptFileBlocks(String path, String cookie)
+      throws IOException {
-  /** {@inheritDoc} */
+  @Override // ClientProtocol
-  /** {@inheritDoc} */
+  @Override // ClientProtocol
-  /** {@inheritDoc} */
+  @Override // ClientProtocol
-  @Override
+  @Override // ClientProtocol
-  @Override
-  public void createSymlink(String target, String link, FsPermission dirPerms, 
-                            boolean createParent) 
-      throws IOException {
+  @Override // ClientProtocol
+  public void createSymlink(String target, String link, FsPermission dirPerms,
+      boolean createParent) throws IOException {
-  @Override
+  @Override // ClientProtocol
-  ////////////////////////////////////////////////////////////////
-  // DatanodeProtocol
-  ////////////////////////////////////////////////////////////////
-  /** 
-   */
+  @Override // DatanodeProtocol
-  /**
-   * Data node notify the name node that it is alive 
-   * Return an array of block-oriented commands for the datanode to execute.
-   * This will be either a transfer or a delete operation.
-   */
+  @Override // DatanodeProtocol
-                                       long capacity,
-                                       long dfsUsed,
-                                       long remaining,
-                                       long blockPoolUsed,
-                                       int xmitsInProgress,
-                                       int xceiverCount,
-                                       int failedVolumes) throws IOException {
+      long capacity, long dfsUsed, long remaining, long blockPoolUsed,
+      int xmitsInProgress, int xceiverCount, int failedVolumes)
+      throws IOException {
-  /**
-   * sends block report to the corresponding namenode (for the poolId)
-   * @return DataNodeCommand from the namenode
-   * @throws IOException
-   */
+  @Override // DatanodeProtocol
-                                     String poolId,
-                                     long[] blocks) throws IOException {
+      String poolId, long[] blocks) throws IOException {
-  public void blockReceived(DatanodeRegistration nodeReg, 
-                            String poolId,
-                            Block blocks[],
-                            String delHints[]) throws IOException {
+  @Override // DatanodeProtocol
+  public void blockReceived(DatanodeRegistration nodeReg, String poolId,
+      Block blocks[], String delHints[]) throws IOException {
-  /**
-   * Handle an error report from a datanode.
-   */
+  @Override // DatanodeProtocol
+  @Override // DatanodeProtocol, NamenodeProtocol
+  @Override // DatanodeProtocol
-  @Override
+  @Override // RefreshAuthorizationPolicyProtocol
-  @Override
+  @Override // RefreshAuthorizationPolicyProtocol
-  @Override
+  @Override // RefreshAuthorizationPolicyProtocol
-  @Override
+  @Override // GetUserMappingsProtocol
+  
+  private static String getClientMachine() {
+    String clientMachine = Server.getRemoteAddress();
+    if (clientMachine == null) {
+      clientMachine = "";
+    }
+    return clientMachine;
+  }
