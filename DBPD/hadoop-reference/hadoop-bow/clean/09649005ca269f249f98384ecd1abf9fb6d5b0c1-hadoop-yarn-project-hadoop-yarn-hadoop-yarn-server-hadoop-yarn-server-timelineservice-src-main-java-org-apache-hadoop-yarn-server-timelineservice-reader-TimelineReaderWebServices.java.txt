YARN-4221. Store user in app to flow table (Varun Saxena via sjlee)

-  private static String parseUser(UserGroupInformation callerUGI, String user) {
-    return (callerUGI != null && (user == null || user.isEmpty()) ?
-        callerUGI.getUserName().trim() : parseStr(user));
-  }
-
-          parseUser(callerUGI, userId), parseStr(clusterId), parseStr(flowId),
+          parseStr(userId), parseStr(clusterId), parseStr(flowId),
-          parseUser(callerUGI, userId), parseStr(clusterId), parseStr(flowId),
+          parseStr(userId), parseStr(clusterId), parseStr(flowId),
-   * Return a single flow run for the given cluster, flow id and run id.
+   * Return a single flow run for the given user, flow id and run id.
-  @Path("/flowrun/{flowid}/{flowrunid}/")
+  @Path("/flowrun/{userid}/{flowid}/{flowrunid}/")
+      @PathParam("userid") String userId,
-      @QueryParam("userid") String userId,
-    return getFlowRun(req, res, null, flowId, flowRunId, userId, fields);
+    return getFlowRun(req, res, userId, null, flowId, flowRunId, fields);
-   * Return a single flow run for the given cluster, flow id and run id.
+   * Return a single flow run for the given user, cluster, flow id and run id.
-  @Path("/flowrun/{clusterid}/{flowid}/{flowrunid}/")
+  @Path("/flowrun/{userid}/{clusterid}/{flowid}/{flowrunid}/")
+      @PathParam("userid") String userId,
-      @QueryParam("userid") String userId,
-      entity = timelineReaderManager.getEntity(
-          parseUser(callerUGI, userId), parseStr(clusterId),
-          parseStr(flowId), parseLongStr(flowRunId), null,
+      entity = timelineReaderManager.getEntity(parseStr(userId),
+          parseStr(clusterId), parseStr(flowId), parseLongStr(flowRunId), null,
-   * Return a set of flows runs for the given flow id.
+   * Return a set of flows runs for the given user and flow id.
-  @Path("/flowruns/{flowid}/")
+  @Path("/flowruns/{userid}/{flowid}/")
+      @PathParam("userid") String userId,
-      @QueryParam("userid") String userId,
-    return getFlowRuns(req, res, null, flowId, userId, limit, createdTimeStart,
+    return getFlowRuns(req, res, userId, null, flowId, limit, createdTimeStart,
-   * Return a set of flow runs for the given cluster and flow id.
+   * Return a set of flow runs for the given user, cluster and flow id.
-  @Path("/flowruns/{clusterid}/{flowid}/")
+  @Path("/flowruns/{userid}/{clusterid}/{flowid}/")
+      @PathParam("userid") String userId,
-      @QueryParam("userid") String userId,
-          parseUser(callerUGI, userId), parseStr(clusterId), parseStr(flowId),
-          null, null, TimelineEntityType.YARN_FLOW_RUN.toString(),
-          parseLongStr(limit), parseLongStr(createdTimeStart),
-          parseLongStr(createdTimeEnd), null, null, null, null, null, null,
-          null, null, parseFieldsStr(fields, COMMA_DELIMITER));
+          parseStr(userId), parseStr(clusterId), parseStr(flowId), null, null,
+          TimelineEntityType.YARN_FLOW_RUN.toString(), parseLongStr(limit),
+          parseLongStr(createdTimeStart), parseLongStr(createdTimeEnd), null,
+          null, null, null, null, null, null, null,
+          parseFieldsStr(fields, COMMA_DELIMITER));
-      entity = timelineReaderManager.getEntity(
-          parseUser(callerUGI, userId), parseStr(clusterId),
-          parseStr(flowId), parseLongStr(flowRunId), parseStr(appId),
-          TimelineEntityType.YARN_APPLICATION.toString(), null,
+      entity = timelineReaderManager.getEntity(parseStr(userId),
+          parseStr(clusterId), parseStr(flowId), parseLongStr(flowRunId),
+          parseStr(appId), TimelineEntityType.YARN_APPLICATION.toString(), null,
-   * Return a list of apps for given flow id and flow run id. Cluster ID is not
-   * provided by client so default cluster ID has to be taken. If number of
-   * matching apps are more than the limit, most recent apps till the limit is
-   * reached, will be returned.
+   * Return a list of apps for given user, flow id and flow run id. Cluster ID
+   * is not provided by client so default cluster ID has to be taken. If number
+   * of matching apps are more than the limit, most recent apps till the limit
+   * is reached, will be returned.
-  @Path("/flowrunapps/{flowid}/{flowrunid}/")
+  @Path("/flowrunapps/{userid}/{flowid}/{flowrunid}/")
+      @PathParam("userid") String userId,
-      @QueryParam("userid") String userId,
-   * Return a list of apps for a given cluster id, flow id and flow run id. If
-   * number of matching apps are more than the limit, most recent apps till the
-   * limit is reached, will be returned.
+   * Return a list of apps for a given user, cluster id, flow id and flow run
+   * id. If number of matching apps are more than the limit, most recent apps
+   * till the limit is reached, will be returned.
-  @Path("/flowrunapps/{clusterid}/{flowid}/{flowrunid}/")
+  @Path("/flowrunapps/{userid}/{clusterid}/{flowid}/{flowrunid}/")
+      @PathParam("userid") String userId,
-      @QueryParam("userid") String userId,
-   * Return a list of apps for given flow id. Cluster ID is not provided by
-   * client so default cluster ID has to be taken. If number of matching apps
-   * are more than the limit, most recent apps till the limit is reached, will
-   * be returned.
+   * Return a list of apps for given user and flow id. Cluster ID is not
+   * provided by client so default cluster ID has to be taken. If number of
+   * matching apps are more than the limit, most recent apps till the limit is
+   * reached, will be returned.
-  @Path("/flowapps/{flowid}/")
+  @Path("/flowapps/{userid}/{flowid}/")
+      @PathParam("userid") String userId,
-      @QueryParam("userid") String userId,
-   * Return a list of apps for a given cluster id and flow id. If number of
-   * matching apps are more than the limit, most recent apps till the limit is
-   * reached, will be returned.
+   * Return a list of apps for a given user, cluster id and flow id. If number
+   * of matching apps are more than the limit, most recent apps till the limit
+   * is reached, will be returned.
-  @Path("/flowapps/{clusterid}/{flowid}/")
+  @Path("/flowapps/{userid}/{clusterid}/{flowid}/")
+      @PathParam("userid") String userId,
-      @QueryParam("userid") String userId,
