HDDS-1604. ContainerReader#initializeUsedBytes leaks DB reference. Coâ€¦ (#866)


-import java.io.Closeable;
-import java.util.concurrent.atomic.AtomicBoolean;
-import java.util.concurrent.atomic.AtomicInteger;
-   * Closes a db instance.
-   *
-   * @param containerPath - path of the container db to be closed.
-   * @param db - db instance to close.
-   */
-  private void closeDB(String containerPath, MetadataStore db) {
-    if (db != null) {
-      try {
-        db.close();
-      } catch (Exception e) {
-        LOG.error("Error closing DB. Container: " + containerPath, e);
-      }
-    }
-  }
-
-  /**
-
-
-  /**
-   * Class to implement reference counting over instances handed by Container
-   * Cache.
-   */
-  public class ReferenceCountedDB implements Closeable {
-    private final AtomicInteger referenceCount;
-    private final AtomicBoolean isEvicted;
-    private final MetadataStore store;
-    private final String containerDBPath;
-
-    public ReferenceCountedDB(MetadataStore store, String containerDBPath) {
-      this.referenceCount = new AtomicInteger(0);
-      this.isEvicted = new AtomicBoolean(false);
-      this.store = store;
-      this.containerDBPath = containerDBPath;
-    }
-
-    private void incrementReference() {
-      this.referenceCount.incrementAndGet();
-    }
-
-    private void decrementReference() {
-      this.referenceCount.decrementAndGet();
-      cleanup();
-    }
-
-    private void setEvicted(boolean checkNoReferences) {
-      Preconditions.checkState(!checkNoReferences ||
-              (referenceCount.get() == 0),
-          "checkNoReferences:%b, referencount:%d",
-          checkNoReferences, referenceCount.get());
-      isEvicted.set(true);
-      cleanup();
-    }
-
-    private void cleanup() {
-      if (referenceCount.get() == 0 && isEvicted.get() && store != null) {
-        closeDB(containerDBPath, store);
-      }
-    }
-
-    public MetadataStore getStore() {
-      return store;
-    }
-
-    public void close() {
-      decrementReference();
-    }
-  }
