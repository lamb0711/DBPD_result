YARN-7537 [Atsv2] load hbase configuration from filesystem rather than URL. Contributed by Rohith Sharma

-import java.net.MalformedURLException;
-import java.net.URL;
+import org.apache.hadoop.fs.FSDataInputStream;
+import org.apache.hadoop.fs.FileSystem;
+import org.apache.hadoop.fs.Path;
-   * @throws MalformedURLException if a timeline service HBase configuration URL
-   *           is specified but is a malformed URL.
+   * @throws IOException if a timeline service HBase configuration path
+   *           is specified but unable to read it.
-      throws MalformedURLException {
+      throws IOException {
-    String timelineServiceHBaseConfFileURL =
+    String timelineServiceHBaseConfFilePath =
-    if (timelineServiceHBaseConfFileURL != null
-        && timelineServiceHBaseConfFileURL.length() > 0) {
+    if (timelineServiceHBaseConfFilePath != null
+        && timelineServiceHBaseConfFilePath.length() > 0) {
-          timelineServiceHBaseConfFileURL);
+          timelineServiceHBaseConfFilePath);
-      URL hbaseSiteXML = new URL(timelineServiceHBaseConfFileURL);
-      plainHBaseConf.addResource(hbaseSiteXML);
-      HBaseConfiguration.merge(hbaseConf, plainHBaseConf);
+      FileSystem fs = null;
+      FSDataInputStream in = null;
+      try {
+        Path hbaseConfigPath = new Path(timelineServiceHBaseConfFilePath);
+        fs = FileSystem.newInstance(conf);
+        in = fs.open(hbaseConfigPath);
+        plainHBaseConf.addResource(in);
+        HBaseConfiguration.merge(hbaseConf, plainHBaseConf);
+      } catch (IOException e) {
+        throw e;
+      } finally {
+        if (in != null) {
+          in.close();
+        }
+        if (fs != null) {
+          fs.close();
+        }
+      }
