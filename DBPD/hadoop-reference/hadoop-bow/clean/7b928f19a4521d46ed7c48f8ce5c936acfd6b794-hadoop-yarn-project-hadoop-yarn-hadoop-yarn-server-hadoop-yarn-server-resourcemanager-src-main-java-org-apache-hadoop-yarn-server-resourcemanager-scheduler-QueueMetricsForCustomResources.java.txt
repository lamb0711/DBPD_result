YARN-9322. Store metrics for custom resource types into FSQueueMetrics and query them in FairSchedulerQueueInfo
(Contributed by Szilard Nemeth via Daniel Templeton)

Change-Id: I14c12f1265999d62102f2ec5506d90015efeefe8

-import com.google.common.collect.Maps;
-import org.apache.hadoop.yarn.api.records.ResourceInformation;
-import org.apache.hadoop.yarn.util.resource.ResourceUtils;
-import java.util.function.BiFunction;
-  /**
-   * Class that holds metrics values for custom resources in a map keyed with
-   * the name of the custom resource.
-   * There are different kinds of values like allocated, available and others.
-   */
-  public static class QueueMetricsCustomResource {
-    private final Map<String, Long> values = Maps.newHashMap();
-
-    protected void increase(Resource res) {
-      update(res, Long::sum);
-    }
-
-    void increaseWithMultiplier(Resource res, long multiplier) {
-      update(res, (v1, v2) -> v1 + v2 * multiplier);
-    }
-
-    protected void decrease(Resource res) {
-      update(res, (v1, v2) -> v1 - v2);
-    }
-
-    void decreaseWithMultiplier(Resource res, int containers) {
-      update(res, (v1, v2) -> v1 - v2 * containers);
-    }
-
-    protected void set(Resource res) {
-      update(res, (v1, v2) -> v2);
-    }
-
-    private void update(Resource res, BiFunction<Long, Long, Long> operation) {
-      if (ResourceUtils.getNumberOfKnownResourceTypes() > 2) {
-        ResourceInformation[] resources = res.getResources();
-
-        for (int i = 2; i < resources.length; i++) {
-          ResourceInformation resource = resources[i];
-
-          // Map.merge only applies operation if there is
-          // a value for the key in the map
-          if (!values.containsKey(resource.getName())) {
-            values.put(resource.getName(), 0L);
-          }
-          values.merge(resource.getName(),
-              resource.getValue(), operation);
-        }
-      }
-    }
-
-    public Map<String, Long> getValues() {
-      return values;
-    }
-  }
