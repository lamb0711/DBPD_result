HDDS-1175. Serve read requests directly from RocksDB. (#557)

HDDS-1175. Serve read requests directly from RocksDB.

+import org.apache.hadoop.ozone.OmUtils;
+import org.apache.hadoop.ozone.om.exceptions.NotLeaderException;
+import org.apache.hadoop.ozone.om.ratis.OzoneManagerRatisServer;
+import org.apache.ratis.protocol.RaftPeerId;
+import java.util.Optional;
+
+  private final OzoneManagerRatisServer omRatisServer;
-      OzoneManagerProtocol impl, OzoneManagerRatisClient ratisClient,
-      boolean enableRatis) {
+      OzoneManagerProtocol impl, OzoneManagerRatisServer ratisServer,
+      OzoneManagerRatisClient ratisClient, boolean enableRatis) {
+    this.omRatisServer = ratisServer;
-        return submitRequestToRatis(request);
+        // Check if the request is a read only request
+        if (OmUtils.isReadOnly(request)) {
+          return submitReadRequestToOM(request);
+        } else {
+          return submitRequestToRatis(request);
+        }
+  private OMResponse submitReadRequestToOM(OMRequest request)
+      throws ServiceException {
+    // Check if this OM is the leader.
+    if (omRatisServer.isLeader()) {
+      return handler.handle(request);
+    } else {
+      RaftPeerId raftPeerId = omRatisServer.getRaftPeerId();
+      Optional<RaftPeerId> leaderRaftPeerId = omRatisServer
+          .getCachedLeaderPeerId();
+
+      NotLeaderException notLeaderException;
+      if (leaderRaftPeerId.isPresent()) {
+        notLeaderException = new NotLeaderException(raftPeerId.toString());
+      } else {
+        notLeaderException = new NotLeaderException(
+            raftPeerId.toString(), leaderRaftPeerId.toString());
+      }
+
+      if (LOG.isDebugEnabled()) {
+        LOG.debug(notLeaderException.getMessage());
+      }
+
+      throw new ServiceException(notLeaderException);
+    }
+  }
+
