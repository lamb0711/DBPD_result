HDDS-705. OS3Exception resource name should be the actual resource name.
Contributed by Bharat Viswanadham.

-
+import static org.apache.hadoop.hdds.protocol.datanode.proto.ContainerProtos.Result.UNKNOWN_BCSID;
+import static org.apache.hadoop.hdds.protocol.datanode.proto.ContainerProtos.Result.BCSID_MISMATCH;
+  private long getBlockCommitSequenceId(MetadataStore db)
+      throws IOException {
+    byte[] bscId = db.get(blockCommitSequenceIdKey);
+    return bscId == null ? 0 : Longs.fromByteArray(bscId);
+  }
+
-    byte[] blockCommitSequenceIdValue = db.get(blockCommitSequenceIdKey);
+    long blockCommitSequenceIdValue = getBlockCommitSequenceId(db);
-    if (blockCommitSequenceIdValue != null && blockCommitSequenceId != 0) {
-      if (blockCommitSequenceId <= Longs
-          .fromByteArray(blockCommitSequenceIdValue)) {
+    if (blockCommitSequenceId != 0) {
+      if (blockCommitSequenceId <= blockCommitSequenceIdValue) {
-        LOG.warn("blockCommitSequenceId " + Longs
-            .fromByteArray(blockCommitSequenceIdValue)
+        LOG.warn("blockCommitSequenceId " + blockCommitSequenceIdValue
+   * @param bcsId latest commit Id of the block
-  public BlockData getBlock(Container container, BlockID blockID)
+  @Override
+  public BlockData getBlock(Container container, BlockID blockID, long bcsId)
+
+    long containerBCSId = getBlockCommitSequenceId(db);
+    if (containerBCSId < bcsId) {
+      throw new StorageContainerException(
+          "Unable to find the block with bcsID " + bcsId + " .Container "
+              + container.getContainerData().getContainerID() + " bcsId is "
+              + containerBCSId + ".", UNKNOWN_BCSID);
+    }
+    long id = blockData.getBlockCommitSequenceId();
+    if (id != bcsId) {
+      throw new StorageContainerException(
+          "bcsId " + bcsId + " mismatches with existing block Id "
+              + id + " for block " + blockID + ".", BCSID_MISMATCH);
+    }
