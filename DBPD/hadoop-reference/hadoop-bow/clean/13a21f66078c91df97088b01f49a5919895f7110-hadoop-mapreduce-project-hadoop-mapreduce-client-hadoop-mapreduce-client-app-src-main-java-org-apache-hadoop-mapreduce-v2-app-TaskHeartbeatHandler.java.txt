MAPREDUCE-6190. If a task stucks before its first heartbeat, it never timeouts and the MR job becomes stuck. Contributed by Zhaohui Xin.

+import java.util.concurrent.atomic.AtomicBoolean;
-  
-  private static class ReportTime {
+
+  static class ReportTime {
-    
+    private final AtomicBoolean reported;
+
+      reported = new AtomicBoolean(false);
+
+    public boolean isReported(){
+      return reported.get();
+    }
+  private long taskStuckTimeOut;
+    taskStuckTimeOut = conf.getLong(MRJobConfig.TASK_STUCK_TIMEOUT_MS,
+        MRJobConfig.DEFAULT_TASK_STUCK_TIMEOUT_MS);
+      time.reported.compareAndSet(false, true);
+        // when container in NM not started in a long time,
+        // we think the taskAttempt is stuck
+        boolean taskStuck = (!entry.getValue().isReported()) &&
+            (currentTime >
+                (entry.getValue().getLastProgress() + taskStuckTimeOut));
-        if(taskTimedOut) {
+        if(taskTimedOut || taskStuck) {
-              + " Timed out after " + taskTimeOut / 1000 + " secs"));
+              + " task timeout set: " + taskTimeOut / 1000 + "s,"
+              + " taskTimedOut: " + taskTimedOut + ";"
+              + " task stuck timeout set: " + taskStuckTimeOut / 1000 + "s,"
+              + " taskStuck: " + taskStuck));
+  ConcurrentMap getRunningAttempts(){
+    return runningAttempts;
+  }
+
+  @VisibleForTesting
