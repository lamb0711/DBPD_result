HDFS-10301. Interleaving processing of storages from repeated block reports causes false zombie storage detection, removes valid blocks. Contributed by Vinitha Gankidi.
-      BlockReportContext context, boolean lastStorageInRpc) throws IOException {
+      BlockReportContext context) throws IOException {
-        storageInfo.setLastBlockReportId(context.getReportId());
-        if (lastStorageInRpc) {
-          int rpcsSeen = node.updateBlockReportContext(context);
-          if (rpcsSeen >= context.getTotalRpcs()) {
-            long leaseId = blockReportLeaseManager.removeLease(node);
-            BlockManagerFaultInjector.getInstance().
-                removeBlockReportLease(node, leaseId);
-            List<DatanodeStorageInfo> zombies = node.removeZombieStorages();
-            if (zombies.isEmpty()) {
-              LOG.debug("processReport 0x{}: no zombie storages found.",
-                  Long.toHexString(context.getReportId()));
-            } else {
-              for (DatanodeStorageInfo zombie : zombies) {
-                removeZombieReplicas(context, zombie);
-              }
-            }
-            node.clearBlockReportContext();
-          } else {
-            LOG.debug("processReport 0x{}: {} more RPCs remaining in this " +
-                    "report.", Long.toHexString(context.getReportId()),
-                (context.getTotalRpcs() - rpcsSeen)
-            );
-          }
+        if (context.getTotalRpcs() == context.getCurRpc() + 1) {
+          long leaseId = this.getBlockReportLeaseManager().removeLease(node);
+          BlockManagerFaultInjector.getInstance().
+              removeBlockReportLease(node, leaseId);
+        LOG.debug("Processing RPC with index {} out of total {} RPCs in "
+                + "processReport 0x{}", context.getCurRpc(),
+            context.getTotalRpcs(), Long.toHexString(context.getReportId()));
+  public void removeZombieStorages(DatanodeRegistration nodeReg,
+      BlockReportContext context, Set<String> storageIDsInBlockReport)
+      throws UnregisteredNodeException {
+    namesystem.writeLock();
+    DatanodeDescriptor node = this.getDatanodeManager().getDatanode(nodeReg);
+    if (node != null) {
+      List<DatanodeStorageInfo> zombies =
+          node.removeZombieStorages(storageIDsInBlockReport);
+      if (zombies.isEmpty()) {
+        LOG.debug("processReport 0x{}: no zombie storages found.",
+            Long.toHexString(context.getReportId()));
+      } else {
+        for (DatanodeStorageInfo zombie : zombies) {
+          this.removeZombieReplicas(context, zombie);
+        }
+      }
+    }
+    namesystem.writeUnlock();
+  }
+
