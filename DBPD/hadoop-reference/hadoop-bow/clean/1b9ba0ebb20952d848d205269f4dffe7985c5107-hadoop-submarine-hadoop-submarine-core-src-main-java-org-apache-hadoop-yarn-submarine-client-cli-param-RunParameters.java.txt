SUBMARINE-47. Provide an implementation to parse configuration values from a YAML file for submarine run CLI. Contributed by Szilard Nemeth.

-import org.apache.commons.cli.CommandLine;
-import org.apache.commons.cli.Options;
-  public void updateParametersByParsedCommandline(CommandLine parsedCommandLine,
-      Options options, ClientContext clientContext) throws ParseException,
+  public void updateParameters(ParametersHolder parametersHolder,
+      ClientContext clientContext) throws ParseException,
-    String savedModelPath = parsedCommandLine.getOptionValue(
+    String savedModelPath = parametersHolder.getOptionValue(
-    // Envars
-    List<String> envarsList = new ArrayList<>();
-    String[] envars = parsedCommandLine.getOptionValues(CliConstants.ENV);
-    if (envars != null) {
-      for (String envar : envars) {
-        envarsList.add(envar);
-      }
-    }
-    this.setEnvars(envarsList);
+    List<String> envVars = getEnvVars(parametersHolder);
+    this.setEnvars(envVars);
-    String queue = parsedCommandLine.getOptionValue(
+    String queue = parametersHolder.getOptionValue(
-    String dockerImage = parsedCommandLine.getOptionValue(
+    String dockerImage = parametersHolder.getOptionValue(
-    super.updateParametersByParsedCommandline(parsedCommandLine,
-        options, clientContext);
+    super.updateParameters(parametersHolder, clientContext);
+  }
+
+  private List<String> getEnvVars(ParametersHolder parametersHolder)
+      throws YarnException {
+    List<String> result = new ArrayList<>();
+    List<String> envVarsArray = parametersHolder.getOptionValues(
+        CliConstants.ENV);
+    if (envVarsArray != null) {
+      result.addAll(envVarsArray);
+    }
+    return result;
