YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.
YARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.
MAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68

-  public void init(Configuration conf) {
+  protected void serviceInit(Configuration conf) throws Exception {
-    super.init(conf);
+    super.serviceInit(conf);
-  public void start() {
+  protected void serviceStart() throws Exception {
-    super.start();
+    super.serviceStart();
-  public void stop() {
+  protected void serviceStop() throws Exception {
-    eventDispatcherThread.interrupt();
-    try {
-      eventDispatcherThread.join();
-    } catch (InterruptedException e) {
-      LOG.error("The thread of " + eventDispatcherThread.getName() +
-          " didn't finish normally.", e);
+    if (eventDispatcherThread != null) {
+      eventDispatcherThread.interrupt();
+      try {
+        eventDispatcherThread.join();
+      } catch (InterruptedException e) {
+        LOG.error("The thread of " + eventDispatcherThread.getName() +
+                  " didn't finish normally.", e);
+      }
-    threadPool.shutdownNow();
-    // If NMClientImpl doesn't stop running containers, the states doesn't
-    // need to be cleared.
-    if (!(client instanceof NMClientImpl) ||
-        ((NMClientImpl) client).cleanupRunningContainers.get()) {
-      containers.clear();
+    if (threadPool != null) {
+      threadPool.shutdownNow();
-    client.stop();
-    super.stop();
+    if (client != null) {
+      // If NMClientImpl doesn't stop running containers, the states doesn't
+      // need to be cleared.
+      if (!(client instanceof NMClientImpl) ||
+          ((NMClientImpl) client).cleanupRunningContainers.get()) {
+        if (containers != null) {
+          containers.clear();
+        }
+      }
+      client.stop();
+    }
+    super.serviceStop();
