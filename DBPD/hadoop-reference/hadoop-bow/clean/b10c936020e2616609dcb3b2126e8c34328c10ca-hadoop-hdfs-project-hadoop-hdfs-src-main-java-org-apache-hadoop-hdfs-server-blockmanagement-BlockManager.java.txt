HDFS-10342. BlockManager#createLocatedBlocks should not check corrupt replicas if none are corrupt. Contributed by Kuhu Shukla.

+      final boolean noCorrupt = (numCorruptReplicas == 0);
-        final DatanodeDescriptor d = storage.getDatanodeDescriptor();
-        final boolean replicaCorrupt = corruptReplicas.isReplicaCorrupt(blk, d);
-        if ((isCorrupt || (!replicaCorrupt)) &&
-            storage.getState() != State.FAILED) {
-          machines[j++] = storage;
-          // TODO this can be more efficient
-          if (blockIndices != null) {
-            byte index = ((BlockInfoStriped) blk).getStorageBlockIndex(storage);
-            assert index >= 0;
-            blockIndices[i++] = index;
+        if (storage.getState() != State.FAILED) {
+          if (noCorrupt) {
+            machines[j++] = storage;
+            i = setBlockIndices(blk, blockIndices, i, storage);
+          } else {
+            final DatanodeDescriptor d = storage.getDatanodeDescriptor();
+            final boolean replicaCorrupt = isReplicaCorrupt(blk, d);
+            if (isCorrupt || !replicaCorrupt) {
+              machines[j++] = storage;
+              i = setBlockIndices(blk, blockIndices, i, storage);
+            }
+
+  boolean isReplicaCorrupt(BlockInfo blk, DatanodeDescriptor d) {
+    return corruptReplicas.isReplicaCorrupt(blk, d);
+  }
+
+  private int setBlockIndices(BlockInfo blk, byte[] blockIndices, int i,
+                              DatanodeStorageInfo storage) {
+    // TODO this can be more efficient
+    if (blockIndices != null) {
+      byte index = ((BlockInfoStriped)blk).getStorageBlockIndex(storage);
+      assert index >= 0;
+      blockIndices[i++] = index;
+    }
+    return i;
+  }
