HDDS-726. Ozone Client should update SCM to move the container out of allocation path in case a write transaction fails. Contributed by Shashikant Banerjee.

+import org.apache.hadoop.hdds.protocol.DatanodeDetails;
+import java.util.Collections;
-  // list to hold up all putBlock futures
-  private List<CompletableFuture<ContainerProtos.ContainerCommandResponseProto>>
-      futureList;
+  // future Map to hold up all putBlock futures
+  private ConcurrentHashMap<Long,
+      CompletableFuture<ContainerProtos.ContainerCommandResponseProto>>
+      futureMap;
+  private List<DatanodeDetails> failedServers;
+
-    futureList = new ArrayList<>();
+    futureMap = new ConcurrentHashMap<>();
+    failedServers = Collections.emptyList();
+  public List<DatanodeDetails> getFailedServers() {
+    return failedServers;
+  }
-      futureList.remove(0);
+      futureMap.remove(totalAckDataLength);
-      if (!futureList.isEmpty()) {
+      if (!futureMap.isEmpty()) {
+    long index;
-      long index =
+      XceiverClientReply reply =
+      if (reply == null) {
+        index = 0;
+      } else {
+        List<DatanodeDetails> dnList = reply.getDatanodes();
+        if (!dnList.isEmpty()) {
+          if (failedServers.isEmpty()) {
+            failedServers = new ArrayList<>();
+          }
+          failedServers.addAll(dnList);
+        }
+        index = reply.getLogIndex();
+      }
-          future.completeExceptionally(sce);
-          return e;
+          throw new CompletionException(sce);
-    futureList.add(flushFuture);
+    futureMap.put(flushPos, flushFuture);
-    CompletableFuture<Void> combinedFuture = CompletableFuture
-        .allOf(futureList.toArray(new CompletableFuture[futureList.size()]));
+    CompletableFuture<Void> combinedFuture = CompletableFuture.allOf(
+        futureMap.values().toArray(new CompletableFuture[futureMap.size()]));
-    if (futureList != null) {
-      futureList.clear();
+    if (futureMap != null) {
+      futureMap.clear();
-    futureList = null;
+    futureMap = null;
