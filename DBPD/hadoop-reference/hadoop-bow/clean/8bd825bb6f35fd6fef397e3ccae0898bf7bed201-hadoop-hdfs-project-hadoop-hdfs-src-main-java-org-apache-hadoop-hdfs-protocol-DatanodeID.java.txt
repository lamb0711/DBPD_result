HDFS-3164. Move DatanodeInfo#hostName to DatanodeID. Contributed by Eli Collins


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1307890 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.hdfs.DeprecatedUTF8;
+import org.apache.hadoop.io.Text;
-  public String name;       // hostname:port (data transfer port)
-  public String storageID;  // unique per cluster storageID
-  protected int infoPort;   // info server port
-  public int ipcPort;       // ipc server port
+  protected String name;       // IP:port (data transfer port)
+  protected String hostName;   // hostname
+  protected String storageID;  // unique per cluster storageID
+  protected int infoPort;      // info server port
+  protected int ipcPort;       // IPC server port
-  public DatanodeID(String nodeName) {this(nodeName, "", -1, -1);}
+  public DatanodeID(String nodeName) {this(nodeName, "", "", -1, -1);}
+        from.getHostName(),
-   * @param nodeName (hostname:portNumber) 
+   * @param node IP:port
+   * @param hostName hostname
-  public DatanodeID(String nodeName, String storageID,
-      int infoPort, int ipcPort) {
-    this.name = nodeName;
+  public DatanodeID(String name, String hostName,
+      String storageID, int infoPort, int ipcPort) {
+    this.name = name;
+    this.hostName = hostName;
+  public void setHostName(String hostName) {
+    this.hostName = hostName;
+  }
+
-  
+
+  /**
+   * @return hostname
+   */
+  public String getHostName() {
+    return (hostName == null || hostName.length() == 0) ? getHost() : hostName;
+  }
+
-    DeprecatedUTF8.writeString(out, name);
-    DeprecatedUTF8.writeString(out, storageID);
+    Text.writeString(out, name);
+    Text.writeString(out, hostName);
+    Text.writeString(out, storageID);
-    name = DeprecatedUTF8.readString(in);
-    storageID = DeprecatedUTF8.readString(in);
-    // the infoPort read could be negative, if the port is a large number (more
+    name = Text.readString(in);
+    hostName = Text.readString(in);
+    storageID = Text.readString(in);
+    // The port read could be negative, if the port is a large number (more
