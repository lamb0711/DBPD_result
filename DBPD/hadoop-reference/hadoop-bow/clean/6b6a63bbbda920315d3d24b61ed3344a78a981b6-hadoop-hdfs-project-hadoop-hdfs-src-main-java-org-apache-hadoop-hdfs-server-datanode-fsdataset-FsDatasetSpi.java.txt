Merge commit '456e901a4c5c639267ee87b8e5f1319f256d20c2' (HDFS-6407. Add sorting and pagination in the datanode tab of the NN Web UI. Contributed by Haohui Mai.) into HDFS-7285-merge

-  public static abstract class Factory<D extends FsDatasetSpi<?>> {
+  abstract class Factory<D extends FsDatasetSpi<?>> {
-  public FsVolumeReferences getFsVolumeReferences();
+  FsVolumeReferences getFsVolumeReferences();
-  public void addVolume(
+  void addVolume(
-  public void removeVolumes(Set<File> volumes, boolean clearFailure);
+  void removeVolumes(Set<File> volumes, boolean clearFailure);
-  public DatanodeStorage getStorage(final String storageUuid);
+  DatanodeStorage getStorage(final String storageUuid);
-  public StorageReport[] getStorageReports(String bpid)
+  StorageReport[] getStorageReports(String bpid)
-  public V getVolume(ExtendedBlock b);
+  V getVolume(ExtendedBlock b);
-  public Map<String, Object> getVolumeInfoMap();
+  Map<String, Object> getVolumeInfoMap();
-  public List<FinalizedReplica> getFinalizedBlocks(String bpid);
+  List<FinalizedReplica> getFinalizedBlocks(String bpid);
-  public List<FinalizedReplica> getFinalizedBlocksOnPersistentStorage(String bpid);
+  List<FinalizedReplica> getFinalizedBlocksOnPersistentStorage(String bpid);
-  public void checkAndUpdate(String bpid, long blockId, File diskFile,
+  void checkAndUpdate(String bpid, long blockId, File diskFile,
-  public LengthInputStream getMetaDataInputStream(ExtendedBlock b
+  LengthInputStream getMetaDataInputStream(ExtendedBlock b
-   * Returns the specified block's on-disk length (excluding metadata)
+   * Returns the specified block's on-disk length (excluding metadata).
-  public long getLength(ExtendedBlock b) throws IOException;
+  long getLength(ExtendedBlock b) throws IOException;
-  public Replica getReplica(String bpid, long blockId);
+  Replica getReplica(String bpid, long blockId);
-  public String getReplicaString(String bpid, long blockId);
+  String getReplicaString(String bpid, long blockId);
-  public Block getStoredBlock(String bpid, long blkid) throws IOException;
-  
+  Block getStoredBlock(String bpid, long blkid) throws IOException;
+
-   * Returns an input stream at specified offset of the specified block
+   * Returns an input stream at specified offset of the specified block.
-  public InputStream getBlockInputStream(ExtendedBlock b, long seekOffset)
+  InputStream getBlockInputStream(ExtendedBlock b, long seekOffset)
-   * Returns an input stream at specified offset of the specified block
+   * Returns an input stream at specified offset of the specified block.
-  public ReplicaInputStreams getTmpInputStreams(ExtendedBlock b, long blkoff,
+  ReplicaInputStreams getTmpInputStreams(ExtendedBlock b, long blkoff,
+   * .
-  public ReplicaHandler createTemporary(StorageType storageType,
+  ReplicaHandler createTemporary(StorageType storageType,
-  public ReplicaHandler createRbw(StorageType storageType,
+  ReplicaHandler createRbw(StorageType storageType,
-   * Recovers a RBW replica and returns the meta info of the replica
+   * Recovers a RBW replica and returns the meta info of the replica.
-  public ReplicaHandler recoverRbw(ExtendedBlock b,
+  ReplicaHandler recoverRbw(ExtendedBlock b,
-  public ReplicaInPipelineInterface convertTemporaryToRbw(
+  ReplicaInPipelineInterface convertTemporaryToRbw(
-   * Append to a finalized replica and returns the meta info of the replica
+   * Append to a finalized replica and returns the meta info of the replica.
-  public ReplicaHandler append(ExtendedBlock b, long newGS,
+  ReplicaHandler append(ExtendedBlock b, long newGS,
-   * Recover a failed append to a finalized replica
-   * and returns the meta info of the replica
+   * Recover a failed append to a finalized replica and returns the meta
+   * info of the replica.
-  public ReplicaHandler recoverAppend(
+  ReplicaHandler recoverAppend(
-   * Recover a failed pipeline close
+   * Recover a failed pipeline close.
-  public String recoverClose(ExtendedBlock b, long newGS, long expectedBlockLen
+  String recoverClose(ExtendedBlock b, long newGS, long expectedBlockLen
-  public void finalizeBlock(ExtendedBlock b) throws IOException;
+  void finalizeBlock(ExtendedBlock b) throws IOException;
-  public void unfinalizeBlock(ExtendedBlock b) throws IOException;
+  void unfinalizeBlock(ExtendedBlock b) throws IOException;
-  public Map<DatanodeStorage, BlockListAsLongs> getBlockReports(String bpid);
+  Map<DatanodeStorage, BlockListAsLongs> getBlockReports(String bpid);
-  public List<Long> getCacheReport(String bpid);
+  List<Long> getCacheReport(String bpid);
-  public boolean contains(ExtendedBlock block);
+  boolean contains(ExtendedBlock block);
-  public void checkBlock(ExtendedBlock b, long minLength, ReplicaState state)
+  void checkBlock(ExtendedBlock b, long minLength, ReplicaState state)
-  public boolean isValidBlock(ExtendedBlock b);
+  boolean isValidBlock(ExtendedBlock b);
-  public boolean isValidRbw(ExtendedBlock b);
+  boolean isValidRbw(ExtendedBlock b);
-  public void invalidate(String bpid, Block invalidBlks[]) throws IOException;
+  void invalidate(String bpid, Block invalidBlks[]) throws IOException;
-  public void cache(String bpid, long[] blockIds);
+  void cache(String bpid, long[] blockIds);
-  public void uncache(String bpid, long[] blockIds);
+  void uncache(String bpid, long[] blockIds);
-  public boolean isCached(String bpid, long blockId);
+  boolean isCached(String bpid, long blockId);
-  public Set<File> checkDataDir();
+  Set<File> checkDataDir();
-  public void shutdown();
+  void shutdown();
-  public void adjustCrcChannelPosition(ExtendedBlock b,
+  void adjustCrcChannelPosition(ExtendedBlock b,
-  public boolean hasEnoughResource();
+  boolean hasEnoughResource();
-  public ReplicaRecoveryInfo initReplicaRecovery(RecoveringBlock rBlock
+  ReplicaRecoveryInfo initReplicaRecovery(RecoveringBlock rBlock
-  public String updateReplicaUnderRecovery(ExtendedBlock oldBlock,
+  String updateReplicaUnderRecovery(ExtendedBlock oldBlock,
-  public void addBlockPool(String bpid, Configuration conf) throws IOException;
-  
+  void addBlockPool(String bpid, Configuration conf) throws IOException;
+
-  public void shutdownBlockPool(String bpid) ;
-  
+  void shutdownBlockPool(String bpid) ;
+
-  public void deleteBlockPool(String bpid, boolean force) throws IOException;
-  
+  void deleteBlockPool(String bpid, boolean force) throws IOException;
+
-  public BlockLocalPathInfo getBlockLocalPathInfo(ExtendedBlock b
+  BlockLocalPathInfo getBlockLocalPathInfo(ExtendedBlock b
-  public HdfsBlocksMetadata getHdfsBlocksMetadata(String bpid,
+  HdfsBlocksMetadata getHdfsBlocksMetadata(String bpid,
-  public void enableTrash(String bpid);
+  void enableTrash(String bpid);
-  public void clearTrash(String bpid);
+  void clearTrash(String bpid);
-  public boolean trashEnabled(String bpid);
+  boolean trashEnabled(String bpid);
-  public void setRollingUpgradeMarker(String bpid) throws IOException;
+  void setRollingUpgradeMarker(String bpid) throws IOException;
-  public void clearRollingUpgradeMarker(String bpid) throws IOException;
+  void clearRollingUpgradeMarker(String bpid) throws IOException;
-   * submit a sync_file_range request to AsyncDiskService
+   * submit a sync_file_range request to AsyncDiskService.
-  public void submitBackgroundSyncFileRangeRequest(final ExtendedBlock block,
+  void submitBackgroundSyncFileRangeRequest(final ExtendedBlock block,
-   public void onCompleteLazyPersist(String bpId, long blockId,
+  void onCompleteLazyPersist(String bpId, long blockId,
-   public void onFailLazyPersist(String bpId, long blockId);
+   void onFailLazyPersist(String bpId, long blockId);
-   public ReplicaInfo moveBlockAcrossStorage(final ExtendedBlock block,
+   ReplicaInfo moveBlockAcrossStorage(final ExtendedBlock block,
-  public void setPinning(ExtendedBlock block) throws IOException;
+  void setPinning(ExtendedBlock block) throws IOException;
-  public boolean getPinning(ExtendedBlock block) throws IOException;
-  
+  boolean getPinning(ExtendedBlock block) throws IOException;
+
-  public boolean isDeletingBlock(String bpid, long blockId);
+  boolean isDeletingBlock(String bpid, long blockId);
