YARN-6523. Optimize system credentials sent in node heartbeat responses. Contributed by Manikandan R

-import java.nio.ByteBuffer;
-import com.google.common.collect.Interner;
-import com.google.common.collect.Interners;
-import com.google.protobuf.ByteString;
-
-import org.apache.hadoop.yarn.api.records.impl.pb.ApplicationIdPBImpl;
-  private Map<ApplicationId, ByteBuffer> systemCredentials = null;
-  private static final Interner<ByteString> BYTE_STRING_INTERNER =
-      Interners.newWeakInterner();
-
-    if (this.systemCredentials != null) {
-      addSystemCredentialsToProto();
-    }
-  private void addSystemCredentialsToProto() {
-    maybeInitBuilder();
-    builder.clearSystemCredentialsForApps();
-    for (Map.Entry<ApplicationId, ByteBuffer> entry : systemCredentials.entrySet()) {
-      builder.addSystemCredentialsForApps(SystemCredentialsForAppsProto.newBuilder()
-        .setAppId(convertToProtoFormat(entry.getKey()))
-        .setCredentialsForApp(BYTE_STRING_INTERNER.intern(
-            ProtoUtils.convertToProtoFormat(entry.getValue().duplicate()))));
-    }
-  }
-
-              .setAppId(convertToProtoFormat(entry.getKey()))
+              .setAppId(ProtoUtils.convertToProtoFormat(entry.getKey()))
-      this.applicationsToCleanup.add(convertFromProtoFormat(c));
+      this.applicationsToCleanup.add(ProtoUtils.convertFromProtoFormat(c));
-            return convertToProtoFormat(iter.next());
+            return ProtoUtils.convertToProtoFormat(iter.next());
-  public Map<ApplicationId, ByteBuffer> getSystemCredentialsForApps() {
-    if (this.systemCredentials != null) {
-      return this.systemCredentials;
-    }
-    initSystemCredentials();
-    return systemCredentials;
-  }
-
-  @Override
-  private void initSystemCredentials() {
-    NodeHeartbeatResponseProtoOrBuilder p = viaProto ? proto : builder;
-    List<SystemCredentialsForAppsProto> list = p.getSystemCredentialsForAppsList();
-    this.systemCredentials = new HashMap<ApplicationId, ByteBuffer> ();
-    for (SystemCredentialsForAppsProto c : list) {
-      ApplicationId appId = convertFromProtoFormat(c.getAppId());
-      ByteBuffer byteBuffer = ProtoUtils.convertFromProtoFormat(c.getCredentialsForApp());
-      this.systemCredentials.put(appId, byteBuffer);
-    }
-  }
-
-        ApplicationId appId = convertFromProtoFormat(c.getAppId());
+        ApplicationId appId = ProtoUtils.convertFromProtoFormat(c.getAppId());
-      Map<ApplicationId, ByteBuffer> systemCredentials) {
-    if (systemCredentials == null || systemCredentials.isEmpty()) {
-      return;
-    }
+      Collection<SystemCredentialsForAppsProto> systemCredentialsForAppsProto) {
-    this.systemCredentials = new HashMap<ApplicationId, ByteBuffer>();
-    this.systemCredentials.putAll(systemCredentials);
+    builder.clearSystemCredentialsForApps();
+    if (systemCredentialsForAppsProto != null) {
+      builder.addAllSystemCredentialsForApps(systemCredentialsForAppsProto);
+    }
+  }
+
+  @Override
+  public Collection<SystemCredentialsForAppsProto>
+      getSystemCredentialsForApps() {
+    NodeHeartbeatResponseProtoOrBuilder p = viaProto ? proto : builder;
+    return p.getSystemCredentialsForAppsList();
-  private ApplicationIdPBImpl convertFromProtoFormat(ApplicationIdProto p) {
-    return new ApplicationIdPBImpl(p);
-  }
-
-  private ApplicationIdProto convertToProtoFormat(ApplicationId t) {
-    return ((ApplicationIdPBImpl) t).getProto();
-  }
-
+
+  @Override
+  public void setTokenSequenceNo(long tokenSequenceNo) {
+    maybeInitBuilder();
+    this.builder.setTokenSequenceNo(tokenSequenceNo);
+  }
+
+  @Override
+  public long getTokenSequenceNo() {
+    NodeHeartbeatResponseProtoOrBuilder p =
+        this.viaProto ? this.proto : this.builder;
+    return p.getTokenSequenceNo();
+  }
