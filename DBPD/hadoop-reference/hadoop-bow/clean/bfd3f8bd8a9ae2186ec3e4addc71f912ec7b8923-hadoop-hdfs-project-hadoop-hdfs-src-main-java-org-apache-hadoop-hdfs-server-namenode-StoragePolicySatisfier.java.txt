HDFS-12291: [SPS]: Provide a mechanism to recursively iterate and satisfy storage policy of all the files under the given dir. Contributed by Surendra Singh Lilhore.

-
+  private int spsWorkMultiplier;
+  private long blockCount = 0L;
-        this);
+        this, conf.getInt(
+            DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_QUEUE_LIMIT_KEY,
+            DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_QUEUE_LIMIT_DEFAULT));
+    this.spsWorkMultiplier = DFSUtil.getSPSWorkMultiplier(conf);
-    storageMovementNeeded.start();
+    storageMovementNeeded.init();
-    storageMovementNeeded.stop();
+    storageMovementNeeded.close();
-        // TODO: We can think to make this as configurable later, how frequently
-        // we want to check block movements.
-        Thread.sleep(3000);
+        int numLiveDn = namesystem.getFSDirectory().getBlockManager()
+            .getDatanodeManager().getNumLiveDataNodes();
+        if (storageMovementNeeded.size() == 0
+            || blockCount > (numLiveDn * spsWorkMultiplier)) {
+          Thread.sleep(3000);
+          blockCount = 0L;
+        }
+    int count = 0;
+    for (BlockMovingInfo blkMovingInfo : blockMovingInfos) {
+      count = count + blkMovingInfo.getSources().length;
+    }
+    blockCount = blockCount + count;
-    //For file rootId and trackId is same
+    //For file startId and trackId is same
-    private long rootId;
+    private long startId;
-    public ItemInfo(long rootId, long trackId) {
-      this.rootId = rootId;
+    public ItemInfo(long startId, long trackId) {
+      this.startId = startId;
-     * Return the root of the current track Id.
+     * Return the start inode id of the current track Id.
-    public long getRootId() {
-      return rootId;
+    public long getStartId() {
+      return startId;
-      return (rootId != trackId);
+      return (startId != trackId);
