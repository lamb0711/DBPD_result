YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)

-import org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.DistSchedAllocateRequestProto;
-import org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.DistSchedAllocateRequestProtoOrBuilder;
+import org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.DistributedSchedulingAllocateRequestProto;
+import org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.DistributedSchedulingAllocateRequestProtoOrBuilder;
-import org.apache.hadoop.yarn.server.api.protocolrecords.DistSchedAllocateRequest;
+import org.apache.hadoop.yarn.server.api.protocolrecords.DistributedSchedulingAllocateRequest;
- * Implementation of {@link DistSchedAllocateRequest} for a distributed
- * scheduler to notify about the allocation of containers to the Resource
- * Manager.
+ * Implementation of {@link DistributedSchedulingAllocateRequest}.
-public class DistSchedAllocateRequestPBImpl extends DistSchedAllocateRequest {
-  private DistSchedAllocateRequestProto.Builder builder = null;
+public class DistributedSchedulingAllocateRequestPBImpl
+    extends DistributedSchedulingAllocateRequest {
+  private DistributedSchedulingAllocateRequestProto.Builder builder = null;
-  private DistSchedAllocateRequestProto proto;
+  private DistributedSchedulingAllocateRequestProto proto;
-  public DistSchedAllocateRequestPBImpl() {
-    builder = DistSchedAllocateRequestProto.newBuilder();
+  public DistributedSchedulingAllocateRequestPBImpl() {
+    builder = DistributedSchedulingAllocateRequestProto.newBuilder();
-  public DistSchedAllocateRequestPBImpl(DistSchedAllocateRequestProto proto) {
+  public DistributedSchedulingAllocateRequestPBImpl(
+      DistributedSchedulingAllocateRequestProto proto) {
-    DistSchedAllocateRequestProtoOrBuilder p = viaProto ? proto : builder;
+    DistributedSchedulingAllocateRequestProtoOrBuilder p =
+        viaProto ? proto : builder;
-    DistSchedAllocateRequestProtoOrBuilder p = viaProto ? proto : builder;
+    DistributedSchedulingAllocateRequestProtoOrBuilder p =
+        viaProto ? proto : builder;
-  public DistSchedAllocateRequestProto getProto() {
+  public DistributedSchedulingAllocateRequestProto getProto() {
-      builder = DistSchedAllocateRequestProto.newBuilder(proto);
+      builder = DistributedSchedulingAllocateRequestProto.newBuilder(proto);
