Revert "YARN-7540.  Route YARN service CLI function through YARN Service API. (Contributed by Eric Yang)"

This reverts commit 438c1d333ebc0a3071bb556532ed959a4bd1e6d6.

+import org.apache.hadoop.yarn.service.utils.ServiceApiUtil;
-import java.util.HashMap;
-import static org.apache.hadoop.yarn.service.exceptions.LauncherExitCodes.EXIT_SUCCESS;
-      if(service.getState()==ServiceState.STOPPED) {
-        SERVICE_CLIENT.actionBuild(service);
-      } else {
-        ApplicationId applicationId = SERVICE_CLIENT.actionCreate(service);
-        LOG.info("Successfully created service " + service.getName()
+      ApplicationId applicationId = SERVICE_CLIENT.actionCreate(service);
+      LOG.info("Successfully created service " + service.getName()
-      }
-    if (updateServiceData.getState() == ServiceState.FLEX) {
-      Map<String, String> componentCountStrings = new HashMap<String, String>();
-      for (Component c : updateServiceData.getComponents()) {
-        componentCountStrings.put(c.getName(), c.getNumberOfContainers().toString());
-      }
-      ServiceStatus status = new ServiceStatus();
-      try {
-        int result = SERVICE_CLIENT
-            .actionFlex(appName, componentCountStrings);
-        if (result == EXIT_SUCCESS) {
-          LOG.info("Successfully flex service " + appName);
-          status.setDiagnostics("Service " + appName +
-              " is successfully flexed.");
-          status.setState(ServiceState.ACCEPTED);
-        }
-      } catch (YarnException | IOException e) {
-        String message = "Failed to flex service " + appName;
-        LOG.info(message, e);
-        status.setDiagnostics(message);
-        return Response.status(Status.INTERNAL_SERVER_ERROR)
-            .entity(status).build();
-      }
-    }
