Fixing MR intermediate spills. Contributed by Arun Suresh.

+import java.security.NoSuchAlgorithmException;
+import org.apache.hadoop.mapreduce.CryptoUtils;
+import javax.crypto.KeyGenerator;
+
+  public static final String INTERMEDIATE_DATA_ENCRYPTION_ALGO = "HmacSHA1";
+  private byte[] encryptedSpillKey;
+      if (CryptoUtils.isEncryptedSpillEnabled(conf)) {
+        int keyLen = conf.getInt(
+                MRJobConfig.MR_ENCRYPTED_INTERMEDIATE_DATA_KEY_SIZE_BITS,
+                MRJobConfig
+                        .DEFAULT_MR_ENCRYPTED_INTERMEDIATE_DATA_KEY_SIZE_BITS);
+        KeyGenerator keyGen =
+                KeyGenerator.getInstance(INTERMEDIATE_DATA_ENCRYPTION_ALGO);
+        keyGen.init(keyLen);
+        encryptedSpillKey = keyGen.generateKey().getEncoded();
+      } else {
+        encryptedSpillKey = new byte[] {0};
+      }
+    } catch (NoSuchAlgorithmException e) {
+      throw new YarnRuntimeException(e);
-            getRMHeartbeatHandler(), preemptionPolicy);
+            getRMHeartbeatHandler(), preemptionPolicy, encryptedSpillKey);
+        ((LocalContainerLauncher) this.containerLauncher)
+                .setEncryptedSpillKey(encryptedSpillKey);
