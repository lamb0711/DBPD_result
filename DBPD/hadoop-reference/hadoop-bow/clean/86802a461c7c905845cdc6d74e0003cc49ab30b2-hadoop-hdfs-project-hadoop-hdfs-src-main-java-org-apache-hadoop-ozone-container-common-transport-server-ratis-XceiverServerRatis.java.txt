HDFS-12851. Ozone: Upgrade to latest ratis build. Contributed by Mukul Kumar Singh

+import org.apache.hadoop.scm.ScmConfigKeys;
+import org.apache.ratis.util.SizeInBytes;
-      ContainerDispatcher dispatcher, RpcType rpcType) throws IOException {
+      ContainerDispatcher dispatcher, RpcType rpcType, int maxChunkSize,
+      int raftSegmentSize) throws IOException {
+    RaftProperties serverProperties = newRaftProperties(rpcType, port,
+        storageDir, maxChunkSize, raftSegmentSize);
-        .setProperties(newRaftProperties(rpcType, port, storageDir))
+        .setProperties(serverProperties)
-  static RaftProperties newRaftProperties(
-      RpcType rpc, int port, String storageDir) {
+  private static RaftProperties newRaftProperties(
+      RpcType rpc, int port, String storageDir, int scmChunkSize,
+      int raftSegmentSize) {
+    RaftServerConfigKeys.Log.Appender.setBatchEnabled(properties, true);
+    RaftServerConfigKeys.Log.Appender.setBufferCapacity(properties,
+        SizeInBytes.valueOf(raftSegmentSize));
+    RaftServerConfigKeys.Log.setWriteBufferSize(properties,
+        SizeInBytes.valueOf(scmChunkSize));
+    RaftServerConfigKeys.Log.setPreallocatedSize(properties,
+        SizeInBytes.valueOf(raftSegmentSize));
+    RaftServerConfigKeys.Log.setSegmentSizeMax(properties,
+        SizeInBytes.valueOf(raftSegmentSize));
+
+    //TODO: change these configs to setter after RATIS-154
+    properties.setInt("raft.server.log.segment.cache.num.max", 2);
+    properties.setInt("raft.grpc.message.size.max",
+        scmChunkSize + raftSegmentSize);
+    properties.setInt("raft.server.rpc.timeout.min", 500);
+    properties.setInt("raft.server.rpc.timeout.max", 600);
+    final int raftSegmentSize =
+        ozoneConf.getInt(ScmConfigKeys.OZONE_SCM_RATIS_SEGMENT_SIZE_KEY,
+            ScmConfigKeys.OZONE_SCM_RATIS_SEGMENT_SIZE_DEFAULT);
+    final int maxChunkSize = ScmConfigKeys.OZONE_SCM_CHUNK_MAX_SIZE;
-        dispatcher, rpc);
+        dispatcher, rpc, maxChunkSize, raftSegmentSize);
