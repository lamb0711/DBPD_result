HDFS-9173. Erasure Coding: Lease recovery for striped file. Contributed by Walter Su and Jing Zhao.

Change-Id: I51703a61c9d8454f883028f3f6acb5729fde1b15

+import org.apache.hadoop.hdfs.server.protocol.BlockRecoveryCommand.RecoveringStripedBlock;
+    if (b instanceof RecoveringStripedBlock) {
+      RecoveringStripedBlock sb = (RecoveringStripedBlock) b;
+      builder.setEcPolicy(PBHelperClient.convertErasureCodingPolicy(
+          sb.getErasureCodingPolicy()));
+      builder.addAllBlockIndices(asList(sb.getBlockIndices()));
+    }
+
+    if (b.hasEcPolicy()) {
+      List<Integer> BlockIndicesList = b.getBlockIndicesList();
+      int[] indices = new int[BlockIndicesList.size()];
+      for (int i = 0; i < BlockIndicesList.size(); i++) {
+        indices[i] = BlockIndicesList.get(i).shortValue();
+      }
+      rBlock = new RecoveringStripedBlock(rBlock, indices,
+          PBHelperClient.convertErasureCodingPolicy(b.getEcPolicy()));
+    }
-  private static List<Integer> convertIntArray(short[] liveBlockIndices) {
-    List<Integer> liveBlockIndicesList = new ArrayList<>();
-    for (short s : liveBlockIndices) {
-      liveBlockIndicesList.add((int) s);
+  private static List<Integer> asList(int[] arr) {
+    List<Integer> list = new ArrayList<>(arr.length);
+    for (int s : arr) {
+      list.add(s);
-    return liveBlockIndicesList;
+    return list;
+  }
+
+  private static List<Integer> asList(short[] arr) {
+    List<Integer> list = new ArrayList<>(arr.length);
+    for (int s : arr) {
+      list.add(s);
+    }
+    return list;
-    builder.addAllLiveBlockIndices(convertIntArray(liveBlockIndices));
+    builder.addAllLiveBlockIndices(asList(liveBlockIndices));
