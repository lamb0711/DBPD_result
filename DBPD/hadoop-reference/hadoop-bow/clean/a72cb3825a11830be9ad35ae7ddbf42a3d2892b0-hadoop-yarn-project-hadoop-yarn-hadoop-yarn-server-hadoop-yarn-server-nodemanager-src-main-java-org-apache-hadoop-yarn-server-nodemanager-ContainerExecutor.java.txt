YARN-5383. Fix findbugs and checkstyle issues in ContainerExecutor. (Vrushali C via Varun Saxena)

-      ContainerLaunch.ShellScriptBuilder.create();
+        ContainerLaunch.ShellScriptBuilder.create();
-      for (Map.Entry<String,String> env : environment.entrySet()) {
+      for (Map.Entry<String, String> env : environment.entrySet()) {
-      for (Path path: resources.keySet()) {
-        for (String linkName: resources.get(path)) {
+      for (Map.Entry<Path, List<String>> resourceEntry :
+          resources.entrySet()) {
+        for (String linkName : resourceEntry.getValue()) {
-            File directory = new File(path.toString());
+            File directory = new File(resourceEntry.getKey().toString());
-            sb.symlink(path, new Path(linkName));
+            sb.symlink(resourceEntry.getKey(), new Path(linkName));
-   * @param conf the configuration
+   * @param config the configuration
-      String userName, Path pidFile, Configuration conf) {
-    return getRunCommand(command, groupId, userName, pidFile, conf, null);
+      String userName, Path pidFile, Configuration config) {
+    return getRunCommand(command, groupId, userName, pidFile, config, null);
-   * @param conf the configuration
+   * @param config the configuration
-      String userName, Path pidFile, Configuration conf, Resource resource) {
+      String userName, Path pidFile, Configuration config, Resource resource) {
-          conf, resource);
+          config, resource);
-      return getRunCommandForOther(command, conf);
+      return getRunCommandForOther(command, config);
-   * @param conf the configuration
+   * @param config the configuration
-      String userName, Path pidFile, Configuration conf, Resource resource) {
+      String userName, Path pidFile, Configuration config, Resource resource) {
-      if (conf.getBoolean(
+      if (config.getBoolean(
-          YarnConfiguration.DEFAULT_NM_WINDOWS_CONTAINER_MEMORY_LIMIT_ENABLED)) {
-        memory = (int)resource.getMemorySize();
+          YarnConfiguration.
+            DEFAULT_NM_WINDOWS_CONTAINER_MEMORY_LIMIT_ENABLED)) {
+        memory = (int) resource.getMemorySize();
-      if (conf.getBoolean(
+      if (config.getBoolean(
-        int nodeVCores = NodeManagerHardwareUtils.getVCores(conf);
+        int nodeVCores = NodeManagerHardwareUtils.getVCores(config);
-            NodeManagerHardwareUtils.getNodeCpuPercentage(conf);
+            NodeManagerHardwareUtils.getNodeCpuPercentage(config);
-   * @param conf the configuration
+   * @param config the configuration
-      Configuration conf) {
+      Configuration config) {
-    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !=
+    if (config.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !=
-      containerSchedPriorityAdjustment = conf
+      containerSchedPriorityAdjustment = config
