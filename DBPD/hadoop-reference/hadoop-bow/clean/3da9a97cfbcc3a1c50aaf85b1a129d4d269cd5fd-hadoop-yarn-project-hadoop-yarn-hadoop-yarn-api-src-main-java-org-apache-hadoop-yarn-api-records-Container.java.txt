YARN-1453. [JDK8] Fix Javadoc errors caused by incorrect or illegal tags in doc comments. Contributed by Akira AJISAKA, Andrew Purtell, and Allen Wittenauer.

- * <p><code>Container</code> represents an allocated resource in the cluster.
- * </p>
- * 
- * <p>The <code>ResourceManager</code> is the sole authority to allocate any
- * <code>Container</code> to applications. The allocated <code>Container</code>
+ * {@code Container} represents an allocated resource in the cluster.
+ * <p>
+ * The {@code ResourceManager} is the sole authority to allocate any
+ * {@code Container} to applications. The allocated {@code Container}
- * a specific amount of {@link Resource} allocated.</p>
+ * a specific amount of {@link Resource} allocated.
+ * <p>
+ * It includes details such as:
+ * <ul>
+ *   <li>{@link ContainerId} for the container, which is globally unique.</li>
+ *   <li>
+ *     {@link NodeId} of the node on which it is allocated.
+ *   </li>
+ *   <li>HTTP uri of the node.</li>
+ *   <li>{@link Resource} allocated to the container.</li>
+ *   <li>{@link Priority} at which the container was allocated.</li>
+ *   <li>
+ *     Container {@link Token} of the container, used to securely verify
+ *     authenticity of the allocation.
+ *   </li>
+ * </ul>
- * <p>It includes details such as:
- *   <ul>
- *     <li>{@link ContainerId} for the container, which is globally unique.</li>
- *     <li>
- *       {@link NodeId} of the node on which it is allocated.
- *     </li>
- *     <li>HTTP uri of the node.</li>
- *     <li>{@link Resource} allocated to the container.</li>
- *     <li>{@link Priority} at which the container was allocated.</li>
- *     <li>
- *       Container {@link Token} of the container, used to securely verify
- *       authenticity of the allocation. 
- *     </li>
- *   </ul>
- * </p>
- * 
- * <p>Typically, an <code>ApplicationMaster</code> receives the 
- * <code>Container</code> from the <code>ResourceManager</code> during
- * resource-negotiation and then talks to the <code>NodeManager</code> to 
- * start/stop containers.</p>
+ * Typically, an {@code ApplicationMaster} receives the {@code Container}
+ * from the {@code ResourceManager} during resource-negotiation and then
+ * talks to the {@code NodeManager} to start/stop containers.
