YARN-5611. Provide an API to update lifetime of an application. Contributed by Rohith Sharma K S

+import java.text.ParseException;
+  static final String ISO8601DATEFORMAT = "yyyy-MM-dd'T'HH:mm:ss.SSSZ";
+
+  static final ThreadLocal<SimpleDateFormat> isoFormat =
+      new ThreadLocal<SimpleDateFormat>() {
+        @Override
+        protected SimpleDateFormat initialValue() {
+          return new SimpleDateFormat(ISO8601DATEFORMAT);
+        }
+      };
+
+
+  /**
+   * Given a time stamp returns ISO-8601 formated string in format
+   * "yyyy-MM-dd'T'HH:mm:ss.SSSZ".
+   * @param ts to be formatted in ISO format.
+   * @return ISO 8601 formatted string.
+   */
+  public static String formatISO8601(long ts) {
+    return isoFormat.get().format(new Date(ts));
+  }
+
+  /**
+   * Given ISO formatted string with format "yyyy-MM-dd'T'HH:mm:ss.SSSZ", return
+   * epoch time for local Time zone.
+   * @param isoString in format of "yyyy-MM-dd'T'HH:mm:ss.SSSZ".
+   * @return epoch time for local time zone.
+   * @throws ParseException if given ISO formatted string can not be parsed.
+   */
+  public static long parseISO8601ToLocalTimeInMillis(String isoString)
+      throws ParseException {
+    return isoFormat.get().parse(isoString).getTime();
+  }
