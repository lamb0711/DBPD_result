HDFS-4700. Fix the undo section of rename with snapshots.  Contributed by Jing Zhao


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1468632 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.namenode.INodeReference.WithCount;
-    if (srcChildIsReference || isSrcInSnapshot) {
+    int srcRefDstSnapshot = srcChildIsReference ? srcChild.asReference()
+        .getDstSnapshotId() : Snapshot.INVALID_ID;
+    if (isSrcInSnapshot) {
-      withCount = (INodeReference.WithCount)withName.getReferredINode();
+      withCount = (INodeReference.WithCount) withName.getReferredINode();
+    } else if (srcChildIsReference) {
+      // srcChild is reference but srcChild is not in latest snapshot
+      withCount = (WithCount) srcChild.asReference().getReferredINode();
-      // add src to the destination
+      // add src to the destination
+      
+        final INodeDirectory srcParent = srcIIP.getINode(-2).asDirectory();
+        final INode oldSrcChild = srcChild;
-          final INodeDirectoryWithSnapshot srcParent = 
-              (INodeDirectoryWithSnapshot) srcIIP.getINode(-2).asDirectory();
-          srcParent.replaceRemovedChild(srcChild, originalChild);
+        } else {
+          final INodeReference originalRef = new INodeReference.DstReference(
+              srcParent, withCount, srcRefDstSnapshot);
+          withCount.setParentReference(originalRef);
+          srcChild = originalRef;
-        addLastINodeNoQuotaCheck(srcIIP, srcChild);
+        
+        if (isSrcInSnapshot) {
+          ((INodeDirectoryWithSnapshot) srcParent).undoRename4ScrParent(
+              oldSrcChild.asReference(), srcChild, srcIIP.getLatestSnapshot());
+        } else {
+          // srcParent is not an INodeDirectoryWithSnapshot, we only need to add
+          // the srcChild back
+          addLastINodeNoQuotaCheck(srcIIP, srcChild);
+        }
-    if (srcChildIsReference || isSrcInSnapshot) {
+    int srcRefDstSnapshot = srcChildIsReference ? srcChild.asReference()
+        .getDstSnapshotId() : Snapshot.INVALID_ID;
+    if (isSrcInSnapshot) {
-      withCount = (INodeReference.WithCount)withName.getReferredINode();
+      withCount = (INodeReference.WithCount) withName.getReferredINode();
+    } else if (srcChildIsReference) {
+      // srcChild is reference but srcChild is not in latest snapshot
+      withCount = (WithCount) srcChild.asReference().getReferredINode();
-        srcChild = srcIIP.getLastINode();
+        final INodeDirectory srcParent = srcIIP.getINode(-2).asDirectory();
+        final INode oldSrcChild = srcChild;
+        // put it back
-          final INodeDirectoryWithSnapshot srcParent
-              = (INodeDirectoryWithSnapshot)srcIIP.getINode(-2).asDirectory();
-          srcParent.replaceRemovedChild(srcChild, originalChild);
+        } else {
+          final INodeReference originalRef = new INodeReference.DstReference(
+              srcParent, withCount, srcRefDstSnapshot);
+          withCount.setParentReference(originalRef);
+          srcChild = originalRef;
-        addLastINodeNoQuotaCheck(srcIIP, srcChild);
+        
+        if (srcParent instanceof INodeDirectoryWithSnapshot) {
+          ((INodeDirectoryWithSnapshot) srcParent).undoRename4ScrParent(
+              oldSrcChild.asReference(), srcChild, srcIIP.getLatestSnapshot());
+        } else {
+          // srcParent is not an INodeDirectoryWithSnapshot, we only need to add
+          // the srcChild back
+          addLastINodeNoQuotaCheck(srcIIP, srcChild);
+        }
-        addLastINodeNoQuotaCheck(dstIIP, removedDst);
+        if (dstParent instanceof INodeDirectoryWithSnapshot) {
+          ((INodeDirectoryWithSnapshot) dstParent).undoRename4DstParent(
+              removedDst, dstIIP.getLatestSnapshot());
+        } else {
+          addLastINodeNoQuotaCheck(dstIIP, removedDst);
+        }
-          -counts.get(Quota.DISKSPACE));
+          -counts.get(Quota.DISKSPACE), true);
