HDFS-5430. Support TTL on CacheDirectives. Contributed by Andrew Wang.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1546301 13f79535-47bb-0310-9956-ffa450edef68

+import static com.google.common.base.Preconditions.checkNotNull;
+
+import java.util.Date;
+
+import org.apache.hadoop.hdfs.DFSUtil;
- * Represents an entry in the PathBasedCache on the NameNode.
+ * Namenode class that tracks state related to a cached path.
+  private final long expiryTime;
+
-      short replication) {
+      short replication, long expiryTime) {
+    this.path = checkNotNull(path);
-    this.path = path;
-    Preconditions.checkNotNull(path);
+    this.expiryTime = expiryTime;
-  public CachePool getPool() {
-    return pool;
-  }
-
+  public CachePool getPool() {
+    return pool;
+  }
+
+  /**
+   * @return When this directive expires, in milliseconds since Unix epoch
+   */
+  public long getExpiryTime() {
+    return expiryTime;
+  }
+
+  /**
+   * @return When this directive expires, as an ISO-8601 formatted string.
+   */
+  public String getExpiryTimeString() {
+    return DFSUtil.dateToIso8601String(new Date(expiryTime));
+  }
+
+  /**
+   * Returns a {@link CacheDirectiveInfo} based on this CacheDirective.
+   * <p>
+   * This always sets an absolute expiry time, never a relative TTL.
+   */
+        setExpiration(CacheDirectiveInfo.Expiration.newAbsolute(expiryTime)).
+        setHasExpired(new Date().getTime() > expiryTime).
+      append(", expiryTime: ").append(getExpiryTimeString()).
