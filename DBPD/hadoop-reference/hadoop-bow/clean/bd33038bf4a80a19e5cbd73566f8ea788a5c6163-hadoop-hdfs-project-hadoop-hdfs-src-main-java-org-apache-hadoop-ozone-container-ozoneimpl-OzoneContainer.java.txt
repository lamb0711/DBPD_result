HDFS-12159. Ozone: SCM: Add create replication pipeline RPC. Contributed by Anu Engineer.

+import org.apache.hadoop.hdfs.protocol.DatanodeID;
+
+import org.apache.hadoop.ozone.protocol.proto.OzoneProtos;
+import static org.apache.hadoop.ozone.OzoneConsts.INVALID_PORT;
-  private final XceiverServerSpi server;
+  private final XceiverServerSpi[] server;
-  public OzoneContainer(
-      Configuration ozoneConfig) throws IOException {
+  public OzoneContainer(DatanodeID datanodeID, Configuration ozoneConfig) throws
+      IOException {
-    final boolean useRatis = ozoneConfig.getBoolean(
-        OzoneConfigKeys.DFS_CONTAINER_RATIS_ENABLED_KEY,
-        OzoneConfigKeys.DFS_CONTAINER_RATIS_ENABLED_DEFAULT);
-    server = useRatis?
-        XceiverServerRatis.newXceiverServerRatis(ozoneConfig, dispatcher)
-        : new XceiverServer(this.ozoneConfig, this.dispatcher);
+    server = new XceiverServerSpi[]{
+        new XceiverServer(this.ozoneConfig, this.dispatcher),
+      XceiverServerRatis.newXceiverServerRatis(datanodeID
+          .getDatanodeUuid().toString(), ozoneConfig, dispatcher)
+    };
-    server.start();
+    for (XceiverServerSpi serverinstance : server) {
+      serverinstance.start();
+    }
-    server.stop();
+    for(XceiverServerSpi serverinstance: server) {
+      serverinstance.stop();
+    }
+  private int getPortbyType(OzoneProtos.ReplicationType replicationType) {
+    for (XceiverServerSpi serverinstance : server) {
+      if (serverinstance.getServerType() == replicationType) {
+        return serverinstance.getIPCPort();
+      }
+    }
+    return INVALID_PORT;
+  }
+
-    return server.getIPCPort();
+    return getPortbyType(OzoneProtos.ReplicationType.STAND_ALONE);
+  }
+
+  /**
+   * Returns the Ratis container Server IPC port.
+   *
+   * @return Ratis port.
+   */
+  public int getRatisContainerServerPort() {
+    return getPortbyType(OzoneProtos.ReplicationType.RATIS);
