HADOOP-7171. Support UGI in FileContext API. Contributed by jitendra.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1092832 13f79535-47bb-0310-9956-ffa450edef68

+import java.security.PrivilegedExceptionAction;
+import org.apache.hadoop.security.UserGroupInformation;
+  private final UserGroupInformation ugi;
+    try {
+      ugi = UserGroupInformation.getCurrentUser();
+    } catch (IOException e) {
+      LOG.error("Exception in getCurrentUser: ",e);
+      throw new RuntimeException("Failed to get the current user " +
+      		"while creating a FileContext", e);
+    }
+   * @throws IOExcepton If the file system for <code>absOrFqPath</code> could
+   *         not be instantiated.
-      throws UnsupportedFileSystemException {
+      throws UnsupportedFileSystemException, IOException {
-      return AbstractFileSystem.get(absOrFqPath.toUri(), conf);
+      return getAbstractFileSystem(ugi, absOrFqPath.toUri(), conf);
+  private static AbstractFileSystem getAbstractFileSystem(
+      UserGroupInformation user, final URI uri, final Configuration conf)
+      throws UnsupportedFileSystemException, IOException {
+    try {
+      return user.doAs(new PrivilegedExceptionAction<AbstractFileSystem>() {
+        public AbstractFileSystem run() throws UnsupportedFileSystemException {
+          return AbstractFileSystem.get(uri, conf);
+        }
+      });
+    } catch (InterruptedException ex) {
+      LOG.error(ex);
+      throw new IOException("Failed to get the AbstractFileSystem for path: "
+          + uri, ex);
+    }
+  }
+   * @throws RuntimeException If the file system specified is supported but
+   *         could not be instantiated, or if login fails.
-    return getFileContext(AbstractFileSystem.get(defaultFsUri,  aConf), aConf);
+    UserGroupInformation currentUser = null;
+    AbstractFileSystem defaultAfs = null;
+    try {
+      currentUser = UserGroupInformation.getCurrentUser();
+      defaultAfs = getAbstractFileSystem(currentUser, defaultFsUri, aConf);
+    } catch (UnsupportedFileSystemException ex) {
+      throw ex;
+    } catch (IOException ex) {
+      LOG.error(ex);
+      throw new RuntimeException(ex);
+    }
+    return getFileContext(defaultAfs, aConf);
+   * Gets the ugi in the file-context
+   * @return UserGroupInformation
+   */
+  public UserGroupInformation getUgi() {
+    return ugi;
+  }
+  
+  /**
