HDDS-140. Add DU usage to VolumeInfo.

+import org.apache.hadoop.conf.Configuration;
+import java.io.File;
-import java.util.concurrent.atomic.AtomicLong;
+
+  // Space usage calculator
+  private VolumeUsage usage;
-  private volatile AtomicLong scmUsed = new AtomicLong(0);
+    private final Configuration conf;
-    public Builder(Path rootDir) {
+    public Builder(Path rootDir, Configuration conf) {
+      this.conf = conf;
-    public Builder(String rootDirStr) {
+    public Builder(String rootDirStr, Configuration conf) {
+      this.conf = conf;
-  private VolumeInfo(Builder b) {
+  private VolumeInfo(Builder b) throws IOException {
+    File root = new File(rootDir.toString());
+
+    Boolean succeeded = root.isDirectory() || root.mkdirs();
+
+    if (!succeeded) {
+      LOG.error("Unable to create the volume root dir at : {}", root);
+      throw new IOException("Unable to create the volume root dir at " + root);
+    }
-    LOG.info("Creating Volume : " + rootDir + " of  storage type : " +
+    this.usage = new VolumeUsage(root, b.conf);
+
+    LOG.info("Creating Volume : " + rootDir + " of storage type : " +
-  public void addSpaceUsed(long spaceUsed) {
-    this.scmUsed.getAndAdd(spaceUsed);
+  public long getCapacity() {
+    return configuredCapacity < 0 ? usage.getCapacity() : configuredCapacity;
-  public long getAvailable() {
-    return configuredCapacity - scmUsed.get();
+  public long getAvailable() throws IOException {
+    return usage.getAvailable();
-  public void setState(VolumeState state) {
+  public long getScmUsed() throws IOException {
+    return usage.getScmUsed();
+  }
+
+  void shutdown() {
+    this.state = VolumeState.NON_EXISTENT;
+    shutdownUsageThread();
+  }
+
+  void failVolume() {
+    setState(VolumeState.FAILED);
+    shutdownUsageThread();
+  }
+
+  private void shutdownUsageThread() {
+    if (usage != null) {
+      usage.shutdown();
+    }
+    usage = null;
+  }
+
+  void setState(VolumeState state) {
