HDFS-4317. Change INode and its subclasses to support HDFS-4103.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1422748 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+  public static final Log LOG = LogFactory.getLog(INode.class);
+
+  /** A pair of objects. */
+  public static class Pair<L, R> {
+    public final L left;
+    public final R right;
+
+    public Pair(L left, R right) {
+      this.left = left;
+      this.right = right;
+    }
+  }
+
+  /** A triple of objects. */
+  public static class Triple<L, M, R> extends Pair<L, R> {
+    public final M middle;
+    
+    public Triple(L left, M middle, R right) {
+      super(left, right);
+      this.middle = middle;
+    }
+  }
+   * Create a copy of this inode for snapshot.
+   * 
+   * @return a pair of inodes, where the left inode is the current inode and
+   *         the right inode is the snapshot copy. The current inode usually is
+   *         the same object of this inode. However, in some cases, the inode
+   *         may be replaced with a new inode for maintaining snapshot data.
+   *         Then, the current inode is the new inode.
+   */
+  public abstract Pair<? extends INode, ? extends INode> createSnapshotCopy();
+
+  /**
-  long getNsQuota() {
+  public long getNsQuota() {
-  long getDsQuota() {
+  public long getDsQuota() {
-    return "\"" + getFullPathName() + "\":"
-    + getUserName() + ":" + getGroupName() + ":"
-    + (isDirectory()? "d": "-") + getFsPermission();
+    return name == null? "<name==null>": getFullPathName();
+  }
+
+  @VisibleForTesting
+  public String getObjectString() {
+    final String s = super.toString();
+    return s.substring(s.lastIndexOf(getClass().getSimpleName()));
+  }
+
+  @VisibleForTesting
+  public String toStringWithObjectType() {
+    return toString() + "(" + getObjectString() + ")";
+  }
+
+  @VisibleForTesting
+  public String toDetailString() {
+    return toStringWithObjectType()
+        + ", parent=" + (parent == null? null: parent.toStringWithObjectType());
-  /**
-   * Set last modification time of inode.
-   */
-  public void setModificationTime(long modtime) {
+  /** Update modification time if it is larger than the current value. */
+  public void updateModificationTime(long modtime) {
+  void cloneModificationTime(INode that) {
+    this.modificationTime = that.modificationTime;
+  }
+
-  void setModificationTimeForce(long modtime) {
+  void setModificationTime(long modtime) {
-    final String s = super.toString();
-    out.print(s.substring(s.lastIndexOf(getClass().getSimpleName())));
-    out.println(")");
+    out.print(getObjectString());
+    out.print("), parent=");
+    out.println(parent == null? null: parent.getLocalName());
