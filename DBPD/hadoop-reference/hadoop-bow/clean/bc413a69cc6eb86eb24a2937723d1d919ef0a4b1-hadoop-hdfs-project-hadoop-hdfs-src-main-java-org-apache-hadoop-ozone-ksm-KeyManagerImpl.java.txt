HDFS-12195. Ozone: DeleteKey-1: KSM replies delete key request asynchronously. Contributed by Yuanbo Liu.

-import org.apache.hadoop.ozone.protocol.proto.ScmBlockLocationProtocolProtos.DeleteScmBlockResult.Result;
-import org.apache.hadoop.scm.container.common.helpers.DeleteBlockResult;
+import org.apache.hadoop.utils.BatchOperation;
-import java.util.Collections;
-    KsmKeyInfo keyInfo = lookupKey(args);
-      List<DeleteBlockResult> resultList =
-          scmBlockClient.deleteBlocks(
-              Collections.singleton(keyInfo.getBlockID()));
-      if (resultList.size() != 1) {
-        throw new KSMException("Delete result size from SCM is wrong",
-            ResultCodes.FAILED_KEY_DELETION);
+      byte[] objectKey = metadataManager.getDBKeyForKey(
+          volumeName, bucketName, keyName);
+      byte[] objectValue = metadataManager.get(objectKey);
+      if (objectValue == null) {
+        throw new KSMException("Key not found",
+            KSMException.ResultCodes.FAILED_KEY_NOT_FOUND);
-
-      if (resultList.get(0).getResult() == Result.success) {
-        byte[] objectKey = metadataManager.getDBKeyForKey(
-            volumeName, bucketName, keyName);
-        metadataManager.deleteKey(objectKey);
-      } else {
-        throw new KSMException("Cannot delete key from SCM",
-                ResultCodes.FAILED_KEY_DELETION);
-      }
+      byte[] deletingKey = metadataManager.getDeletedKeyName(objectKey);
+      BatchOperation batch = new BatchOperation();
+      batch.put(deletingKey, objectValue);
+      batch.delete(objectKey);
+      metadataManager.writeBatch(batch);
