HDFS-11926. Ozone: Implement a common helper to return a range of KVs in levelDB. Contributed by  Weiwei Yang.

+import org.apache.hadoop.hdfs.DFSUtil;
-import org.apache.hadoop.ozone.container.common.helpers.FilteredKeys;
-import org.apache.hadoop.ozone.container.common.helpers.FilteredKeys.KeyPrefixFilter;
-import org.apache.hadoop.ozone.container.common.helpers.FilteredKeys.PreKeyFilter;
+import org.apache.hadoop.utils.LevelDBKeyFilters.KeyPrefixFilter;
+import java.util.ArrayList;
+import java.util.Map;
-      Pipeline pipeline, String prefix, String prevKey, int count)
+      Pipeline pipeline, String prefix, String startKey, int count)
-    try (FilteredKeys filteredKeys = new FilteredKeys(db, count)) {
-      filteredKeys.addKeyFilter(new KeyPrefixFilter(prefix));
-      filteredKeys.addKeyFilter(new PreKeyFilter(db, prevKey));
-      return filteredKeys.getFilteredKeys();
+    try {
+      List<KeyData> result = new ArrayList<KeyData>();
+      byte[] startKeyInBytes = startKey == null ? null :
+          DFSUtil.string2Bytes(startKey);
+      KeyPrefixFilter prefixFilter = new KeyPrefixFilter(prefix);
+      List<Map.Entry<byte[], byte[]>> range =
+          db.getRangeKVs(startKeyInBytes, count, prefixFilter);
+      for(Map.Entry<byte[], byte[]> entry : range) {
+        String keyName = KeyUtils.getKeyName(entry.getKey());
+        KeyData value = KeyUtils.getKeyData(entry.getValue());
+        KeyData data = new KeyData(value.getContainerName(), keyName);
+        result.add(data);
+      }
+      return result;
+    } catch (IOException e) {
+      throw new StorageContainerException(e,
+          ContainerProtos.Result.IO_EXCEPTION);
