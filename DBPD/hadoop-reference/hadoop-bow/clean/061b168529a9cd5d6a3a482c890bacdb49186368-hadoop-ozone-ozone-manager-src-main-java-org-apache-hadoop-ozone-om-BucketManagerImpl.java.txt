HDDS-167. Rename KeySpaceManager to OzoneManager. Contributed by Arpit Agarwal.

-package org.apache.hadoop.ozone.ksm;
+package org.apache.hadoop.ozone.om;
-import org.apache.hadoop.ozone.ksm.helpers.KsmBucketArgs;
-import org.apache.hadoop.ozone.ksm.helpers.KsmBucketInfo;
-import org.apache.hadoop.ozone.ksm.exceptions.KSMException;
+import org.apache.hadoop.ozone.om.helpers.OmBucketArgs;
+import org.apache.hadoop.ozone.om.helpers.OmBucketInfo;
+import org.apache.hadoop.ozone.om.exceptions.OMException;
-    .KeySpaceManagerProtocolProtos.BucketInfo;
+    .OzoneManagerProtocolProtos.BucketInfo;
- * KSM bucket manager.
+ * OM bucket manager.
-   * KSMMetadataManager is used for accessing KSM MetadataDB and ReadWriteLock.
+   * OMMetadataManager is used for accessing OM MetadataDB and ReadWriteLock.
-  private final KSMMetadataManager metadataManager;
+  private final OMMetadataManager metadataManager;
-  public BucketManagerImpl(KSMMetadataManager metadataManager){
+  public BucketManagerImpl(OMMetadataManager metadataManager){
-   * @param bucketInfo - KsmBucketInfo.
+   * @param bucketInfo - OmBucketInfo.
-  public void createBucket(KsmBucketInfo bucketInfo) throws IOException {
+  public void createBucket(OmBucketInfo bucketInfo) throws IOException {
-        throw new KSMException("Volume doesn't exist",
-            KSMException.ResultCodes.FAILED_VOLUME_NOT_FOUND);
+        throw new OMException("Volume doesn't exist",
+            OMException.ResultCodes.FAILED_VOLUME_NOT_FOUND);
-        throw new KSMException("Bucket already exist",
-            KSMException.ResultCodes.FAILED_BUCKET_ALREADY_EXISTS);
+        throw new OMException("Bucket already exist",
+            OMException.ResultCodes.FAILED_BUCKET_ALREADY_EXISTS);
-      KsmBucketInfo ksmBucketInfo = KsmBucketInfo.newBuilder()
+      OmBucketInfo omBucketInfo = OmBucketInfo.newBuilder()
-      metadataManager.put(bucketKey, ksmBucketInfo.getProtobuf().toByteArray());
+      metadataManager.put(bucketKey, omBucketInfo.getProtobuf().toByteArray());
-      if (!(ex instanceof KSMException)) {
+      if (!(ex instanceof OMException)) {
-  public KsmBucketInfo getBucketInfo(String volumeName, String bucketName)
+  public OmBucketInfo getBucketInfo(String volumeName, String bucketName)
-        throw new KSMException("Bucket not found",
-            KSMException.ResultCodes.FAILED_BUCKET_NOT_FOUND);
+        throw new OMException("Bucket not found",
+            OMException.ResultCodes.FAILED_BUCKET_NOT_FOUND);
-      return KsmBucketInfo.getFromProtobuf(BucketInfo.parseFrom(value));
+      return OmBucketInfo.getFromProtobuf(BucketInfo.parseFrom(value));
-      if (!(ex instanceof KSMException)) {
+      if (!(ex instanceof OMException)) {
-  public void setBucketProperty(KsmBucketArgs args) throws IOException {
+  public void setBucketProperty(OmBucketArgs args) throws IOException {
-        throw new KSMException("Volume doesn't exist",
-            KSMException.ResultCodes.FAILED_VOLUME_NOT_FOUND);
+        throw new OMException("Volume doesn't exist",
+            OMException.ResultCodes.FAILED_VOLUME_NOT_FOUND);
-        throw new KSMException("Bucket doesn't exist",
-            KSMException.ResultCodes.FAILED_BUCKET_NOT_FOUND);
+        throw new OMException("Bucket doesn't exist",
+            OMException.ResultCodes.FAILED_BUCKET_NOT_FOUND);
-      KsmBucketInfo oldBucketInfo = KsmBucketInfo.getFromProtobuf(
+      OmBucketInfo oldBucketInfo = OmBucketInfo.getFromProtobuf(
-      KsmBucketInfo.Builder bucketInfoBuilder = KsmBucketInfo.newBuilder();
+      OmBucketInfo.Builder bucketInfoBuilder = OmBucketInfo.newBuilder();
-      if (!(ex instanceof KSMException)) {
+      if (!(ex instanceof OMException)) {
-        throw new KSMException("Volume doesn't exist",
-            KSMException.ResultCodes.FAILED_VOLUME_NOT_FOUND);
+        throw new OMException("Volume doesn't exist",
+            OMException.ResultCodes.FAILED_VOLUME_NOT_FOUND);
-        throw new KSMException("Bucket doesn't exist",
-            KSMException.ResultCodes.FAILED_BUCKET_NOT_FOUND);
+        throw new OMException("Bucket doesn't exist",
+            OMException.ResultCodes.FAILED_BUCKET_NOT_FOUND);
-        throw new KSMException("Bucket is not empty",
-            KSMException.ResultCodes.FAILED_BUCKET_NOT_EMPTY);
+        throw new OMException("Bucket is not empty",
+            OMException.ResultCodes.FAILED_BUCKET_NOT_EMPTY);
-      if (!(ex instanceof KSMException)) {
+      if (!(ex instanceof OMException)) {
-  public List<KsmBucketInfo> listBuckets(String volumeName,
-      String startBucket, String bucketPrefix, int maxNumOfBuckets)
+  public List<OmBucketInfo> listBuckets(String volumeName,
+                                        String startBucket, String bucketPrefix, int maxNumOfBuckets)
