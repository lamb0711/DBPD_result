HADOOP-13591. Unit test failure in TestOSSContractGetFileStatus and TestOSSContractRootDir. Contributed by Genmao Yu

+import org.apache.commons.collections.CollectionUtils;
+import org.apache.commons.lang.StringUtils;
-      if (!key.endsWith("/")) {
-        key += "/";
-      }
+          key = AliyunOSSUtils.maybeAddTrailingSlash(key);
-    try {
-      Path pPath = f.getParent();
-      FileStatus pStatus = getFileStatus(pPath);
-      if (pStatus.isFile()) {
-        throw new IOException("Path " + pPath +
-            " is assumed to be a directory!");
-      }
-    } catch (FileNotFoundException fnfe) {
-      // Make sure the parent directory exists
+    String key = pathToKey(f);
+    if (StringUtils.isNotEmpty(key) && !exists(f)) {
+      LOG.debug("Creating new fake directory at {}", f);
-      // Case: dir + "/"
+      // In case of 'dir + "/"'
-      ObjectListing listing = store.listObjects(key, 1, "/", null);
-      if (!listing.getObjectSummaries().isEmpty() ||
-          !listing.getCommonPrefixes().isEmpty()) {
+      ObjectListing listing = store.listObjects(key, 1, null, false);
+      if (CollectionUtils.isNotEmpty(listing.getObjectSummaries()) ||
+          CollectionUtils.isNotEmpty(listing.getCommonPrefixes())) {
-    return !name.isEmpty() && name.endsWith("/") && size == 0L;
+    return StringUtils.isNotEmpty(name) && name.endsWith("/") && size == 0L;
-    if (path.toUri().getScheme() != null && path.toUri().getPath().isEmpty()) {
-      return "";
-    }
-
-      if (!key.endsWith("/")) {
-        key = key + "/";
-      }
-
-      ObjectListing objects = store.listObjects(key, maxKeys, "/", null);
+      ObjectListing objects = store.listObjects(key, maxKeys, null, false);
-          Path keyPath = keyToPath(objectSummary.getKey())
-              .makeQualified(uri, workingDir);
-          if (keyPath.equals(path)) {
+          String objKey = objectSummary.getKey();
+          if (objKey.equals(key + "/")) {
-              LOG.debug("Ignoring: " + keyPath);
+              LOG.debug("Ignoring: " + objKey);
+            Path keyPath = keyToPath(objectSummary.getKey())
+                .makeQualified(uri, workingDir);
-          Path keyPath = keyToPath(prefix).makeQualified(uri, workingDir);
-          if (keyPath.equals(path)) {
+          if (prefix.equals(key + "/")) {
+            if (LOG.isDebugEnabled()) {
+              LOG.debug("Ignoring: " + prefix);
+            }
+            Path keyPath = keyToPath(prefix).makeQualified(uri, workingDir);
-          objects = store.listObjects(key, maxKeys, "/",
-              objects.getNextMarker());
+          String nextMarker = objects.getNextMarker();
+          objects = store.listObjects(key, maxKeys, nextMarker, false);
-    if (!key.endsWith("/")) {
-      dirName += "/";
+    if (StringUtils.isNotEmpty(key)) {
+      if (!key.endsWith("/")) {
+        dirName += "/";
+      }
+      store.storeEmptyFile(dirName);
-    store.storeEmptyFile(dirName);
-  private boolean copyDirectory(Path srcPath, Path dstPath) {
-    String srcKey = pathToKey(srcPath);
-    String dstKey = pathToKey(dstPath);
-
-    if (!srcKey.endsWith("/")) {
-      srcKey = srcKey + "/";
-    }
-    if (!dstKey.endsWith("/")) {
-      dstKey = dstKey + "/";
-    }
+  private boolean copyDirectory(Path srcPath, Path dstPath) throws IOException {
+    String srcKey = AliyunOSSUtils
+        .maybeAddTrailingSlash(pathToKey(srcPath));
+    String dstKey = AliyunOSSUtils
+        .maybeAddTrailingSlash(pathToKey(dstPath));
-    ObjectListing objects = store.listObjects(srcKey, maxKeys, null, null);
+    store.storeEmptyFile(dstKey);
+    ObjectListing objects = store.listObjects(srcKey, maxKeys, null, true);
-        objects = store.listObjects(srcKey, maxKeys, null,
-            objects.getNextMarker());
+        String nextMarker = objects.getNextMarker();
+        objects = store.listObjects(srcKey, maxKeys, nextMarker, true);
