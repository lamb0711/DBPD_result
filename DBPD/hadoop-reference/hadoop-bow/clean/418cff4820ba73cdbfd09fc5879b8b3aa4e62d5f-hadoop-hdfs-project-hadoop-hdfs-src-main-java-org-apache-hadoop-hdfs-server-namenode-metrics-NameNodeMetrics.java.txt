Merge remote-tracking branch 'apache-commit/trunk' into HDDS-48

+import org.apache.hadoop.metrics2.lib.MutableStat;
+  @Metric("Time tailing edit logs in msec")
+  MutableRate editLogTailTime;
+  private final MutableQuantiles[] editLogTailTimeQuantiles;
+  @Metric MutableRate editLogFetchTime;
+  private final MutableQuantiles[] editLogFetchTimeQuantiles;
+  @Metric(value = "Number of edits loaded", valueName = "Count")
+  MutableStat numEditLogLoaded;
+  private final MutableQuantiles[] numEditLogLoadedQuantiles;
+  @Metric("Time between edit log tailing in msec")
+  MutableRate editLogTailInterval;
+  private final MutableQuantiles[] editLogTailIntervalQuantiles;
+
-    
+    editLogTailTimeQuantiles = new MutableQuantiles[len];
+    editLogFetchTimeQuantiles = new MutableQuantiles[len];
+    numEditLogLoadedQuantiles = new MutableQuantiles[len];
+    editLogTailIntervalQuantiles = new MutableQuantiles[len];
+
+      editLogTailTimeQuantiles[i] = registry.newQuantiles(
+          "editLogTailTime" + interval + "s",
+          "Edit log tailing time", "ops", "latency", interval);
+      editLogFetchTimeQuantiles[i] = registry.newQuantiles(
+          "editLogFetchTime" + interval + "s",
+          "Edit log fetch time", "ops", "latency", interval);
+      numEditLogLoadedQuantiles[i] = registry.newQuantiles(
+          "numEditLogLoaded" + interval + "s",
+          "Number of edits loaded", "ops", "count", interval);
+      editLogTailIntervalQuantiles[i] = registry.newQuantiles(
+          "editLogTailInterval" + interval + "s",
+          "Edit log tailing interval", "ops", "latency", interval);
+
+  public void addEditLogTailTime(long elapsed) {
+    editLogTailTime.add(elapsed);
+    for (MutableQuantiles q : editLogTailTimeQuantiles) {
+      q.add(elapsed);
+    }
+  }
+
+  public void addEditLogFetchTime(long elapsed) {
+    editLogFetchTime.add(elapsed);
+    for (MutableQuantiles q : editLogFetchTimeQuantiles) {
+      q.add(elapsed);
+    }
+  }
+
+  public void addNumEditLogLoaded(long loaded) {
+    numEditLogLoaded.add(loaded);
+    for (MutableQuantiles q : numEditLogLoadedQuantiles) {
+      q.add(loaded);
+    }
+  }
+
+  public void addEditLogTailInterval(long elapsed) {
+    editLogTailInterval.add(elapsed);
+    for (MutableQuantiles q : editLogTailIntervalQuantiles) {
+      q.add(elapsed);
+    }
+  }
