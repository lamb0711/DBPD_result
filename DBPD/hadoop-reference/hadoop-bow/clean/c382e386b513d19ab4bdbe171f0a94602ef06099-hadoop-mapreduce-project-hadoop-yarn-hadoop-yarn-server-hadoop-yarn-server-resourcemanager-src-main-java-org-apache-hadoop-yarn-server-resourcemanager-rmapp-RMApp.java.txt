Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1173012 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.api.protocolrecords.FinishApplicationMasterRequest;
+import org.apache.hadoop.yarn.api.records.ApplicationSubmissionContext;
+import org.apache.hadoop.yarn.server.resourcemanager.recovery.ApplicationsStore;
+/**
+ * The read interface to an Application in the ResourceManager. Take a 
+ * look at {@link RMAppImpl} for its implementation. This interface 
+ * exposes methods to access various updates in application status/report.
+ */
+  /**
+   * The application id for this {@link RMApp}.
+   * @return the {@link ApplicationId} for this {@link RMApp}.
+   */
+  /**
+   * The current state of the {@link RMApp}.
+   * @return the current state {@link RMAppState} for this application.
+   */
+  /**
+   * The user who submitted this application.
+   * @return the user who submitted the application.
+   */
+  /**
+   * Progress of application.
+   * @return the progress of the {@link RMApp}.
+   */
+  /**
+   * {@link RMApp} can have multiple application attempts {@link RMAppAttempt}.
+   * This method returns the {@link RMAppAttempt} corresponding to
+   *  {@link ApplicationAttemptId}.
+   * @param appAttemptId the application attempt id
+   * @return  the {@link RMAppAttempt} corresponding to the {@link ApplicationAttemptId}.
+   */
+  /**
+   * Each Application is submitted to a queue decided by {@link 
+   * ApplicationSubmissionContext#setQueue(String)}.
+   * This method returns the queue to which an application was submitted.
+   * @return the queue to which the application was submitted to.
+   */
+  /**
+   * The name of the application as set in {@link 
+   * ApplicationSubmissionContext#setApplicationName(String)}.
+   * @return the name of the application.
+   */
+  /**
+   * {@link RMApp} can have multiple application attempts {@link RMAppAttempt}.
+   * This method returns the current {@link RMAppAttempt}.
+   * @return the current {@link RMAppAttempt} 
+   */
+  /**
+   * To get the status of an application in the RM, this method can be used.
+   * @return the {@link ApplicationReport} detailing the status of the application.
+   */
+  /**
+   * Application level metadata is stored in {@link ApplicationStore} whicn 
+   * can persist the information.
+   * @return the {@link ApplicationStore}  for this {@link RMApp}.
+   */
+  /**
+   * The finish time of the {@link RMApp}
+   * @return the finish time of the application.,
+   */
+  /**
+   * the start time of the application.
+   * @return the start time of the application.
+   */
+  /**
+   * The tracking url for the application master.
+   * @return the tracking url for the application master.
+   */
+  /**
+   * the diagnostics information for the application master.
+   * @return the diagnostics information for the application master.
+   */
+  
+  /**
+   * The final state of the AM when unregistering as in 
+   * {@link FinishApplicationMasterRequest#setFinalState(String)}.
+   * @return the final state of the AM as set in 
+   * {@link FinishApplicationMasterRequest#setFinalState(String)}.
+   */
+  String getAMFinalState();
