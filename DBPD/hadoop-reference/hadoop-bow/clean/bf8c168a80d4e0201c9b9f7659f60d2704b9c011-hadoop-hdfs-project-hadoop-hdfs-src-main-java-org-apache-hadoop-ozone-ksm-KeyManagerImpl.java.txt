HDFS-11781. Ozone: KSM: Add deleteKey. Contributed by Yuanbo Liu.

+import org.apache.hadoop.ozone.ksm.exceptions.KSMException.ResultCodes;
+import org.apache.hadoop.ozone.protocol.proto.ScmBlockLocationProtocolProtos.DeleteScmBlockResult.Result;
+import org.apache.hadoop.scm.container.common.helpers.DeleteBlockResult;
+import java.util.Collections;
+import java.util.List;
+
+  @Override
+  public void deleteKey(KsmKeyArgs args) throws IOException {
+    Preconditions.checkNotNull(args);
+    KsmKeyInfo keyInfo = lookupKey(args);
+
+    metadataManager.writeLock().lock();
+    String volumeName = args.getVolumeName();
+    String bucketName = args.getBucketName();
+    String keyName = args.getKeyName();
+    try {
+      List<DeleteBlockResult> resultList =
+          scmBlockClient.deleteBlocks(
+              Collections.singleton(keyInfo.getBlockID()));
+      if (resultList.size() != 1) {
+        throw new KSMException("Delete result size from SCM is wrong",
+            ResultCodes.FAILED_INTERNAL_ERROR);
+      }
+
+      if (resultList.get(0).getResult() == Result.success) {
+        byte[] objectKey = metadataManager.getDBKeyForKey(
+            volumeName, bucketName, keyName);
+        metadataManager.deleteKey(objectKey);
+      } else {
+        throw new KSMException("Cannot delete key from SCM",
+                ResultCodes.FAILED_INTERNAL_ERROR);
+      }
+    } catch (DBException ex) {
+      LOG.error(String.format("Delete key failed for volume:%s "
+          + "bucket:%s key:%s", volumeName, bucketName, keyName), ex);
+      throw new KSMException(ex.getMessage(), ex,
+          ResultCodes.FAILED_INTERNAL_ERROR);
+    } finally {
+      metadataManager.writeLock().unlock();
+    }
+  }
