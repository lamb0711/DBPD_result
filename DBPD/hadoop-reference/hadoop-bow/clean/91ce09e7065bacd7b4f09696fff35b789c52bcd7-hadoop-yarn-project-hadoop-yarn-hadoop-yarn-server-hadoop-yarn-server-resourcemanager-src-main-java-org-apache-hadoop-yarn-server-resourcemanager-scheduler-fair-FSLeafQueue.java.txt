YARN-9360. Do not expose innards of QueueMetrics object into FSLeafQueue#computeMaxAMResource. Contributed by Peter Bacsko

-import java.util.Map;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.QueueMetricsCustomResource;
-import org.apache.hadoop.yarn.server.resourcemanager.scheduler.QueueMetricsForCustomResources;
+    Resource maxShare = getMaxShare();
+
-                   getMaxShare().getMemorySize()));
+                   maxShare.getMemorySize()));
-          getMaxShare().getVirtualCores()));
+          maxShare.getVirtualCores()));
-    QueueMetricsForCustomResources metricsForCustomResources =
-        scheduler.getRootQueueMetrics().getQueueMetricsForCustomResources();
-
-    if (metricsForCustomResources != null) {
-      QueueMetricsCustomResource availableResources =
-          metricsForCustomResources.getAvailable();
-
-      // We expect all custom resources contained in availableResources,
-      // so we will loop through all of them.
-      for (Map.Entry<String, Long> availableEntry : availableResources
-          .getValues().entrySet()) {
-        String resourceName = availableEntry.getKey();
-
-        // We only update the value if fairshare is 0 for that resource.
-        if (maxResource.getResourceValue(resourceName) == 0) {
-          Long availableValue = availableEntry.getValue();
-          long value = Math.min(availableValue,
-              getMaxShare().getResourceValue(resourceName));
-          maxResource.setResourceValue(resourceName, value);
-        }
-      }
-    }
+    scheduler.getRootQueueMetrics()
+        .fillInValuesFromAvailableResources(maxShare, maxResource);
