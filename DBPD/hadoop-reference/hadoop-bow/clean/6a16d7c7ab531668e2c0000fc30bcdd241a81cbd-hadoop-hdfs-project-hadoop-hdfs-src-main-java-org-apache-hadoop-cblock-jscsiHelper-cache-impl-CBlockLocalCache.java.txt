HDFS-12255. Block Storage: Cblock should generated unique trace ID for the ops. Contributed by Mukul Kumar Singh.

-import org.apache.hadoop.util.Time;
-import java.net.InetAddress;
-import java.net.UnknownHostException;
-import java.util.UUID;
-   * Asyncblock writer updates the cacheDB and writes the blocks async to
+   * AsyncBlock writer updates the cacheDB and writes the blocks async to
-  /**
-   * We create a trace ID to make it easy to debug issues.
-   * A trace ID is in the following format. IPAddress:VolumeName:blockID:second
-   * <p>
-   * This will get written down on the data node if we get any failures, so
-   * with this trace ID we can correlate cBlock failures across machines.
-   */
-  private final String ipAddressString;
-  private final String tracePrefix;
-    this.ipAddressString = getHostIP();
-    this.tracePrefix = ipAddressString + ":" + this.volumeName;
-
-  /**
-   * Tries to get the local host IP Address for creating trace IDs.
-   */
-  private String getHostIP() {
-    String tmp;
-    try {
-      tmp = InetAddress.getLocalHost().toString();
-    } catch (UnknownHostException ex) {
-      tmp = UUID.randomUUID().toString();
-      LOG.error("Unable to read the host address. Using a GUID for " +
-          "hostname:{} ", tmp, ex);
-    }
-    return tmp;
-  }
-
-  /**
-   * Returns a traceID based in Block ID.
-   * The format is HostIP:VolumeName:BlockID:timeStamp, in case of error this
-   * will be logged on the container side.
-   *
-   * @param blockID - Block ID
-   * @return trace ID
-   */
-    // mapping to seconds to make the string smaller.
-    return this.tracePrefix + ":" + blockID + ":"
-        + Time.monotonicNow() / 1000;
+    return flusher.getTraceID(dbPath, blockID);
