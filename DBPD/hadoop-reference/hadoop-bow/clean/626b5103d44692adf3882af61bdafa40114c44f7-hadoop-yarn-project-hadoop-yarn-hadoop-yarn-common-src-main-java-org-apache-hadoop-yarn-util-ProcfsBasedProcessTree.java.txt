YARN-7688. Miscellaneous Improvements To ProcfsBasedProcessTree. Contributed by BELUGA BEHR.

+import java.io.FileFilter;
-import java.io.InputStreamReader;
+import java.io.InputStreamReader;
+import java.util.ArrayDeque;
+import java.util.Collections;
+import java.util.Queue;
+import org.apache.commons.io.filefilter.AndFileFilter;
+import org.apache.commons.io.filefilter.DirectoryFileFilter;
+import org.apache.commons.io.filefilter.RegexFileFilter;
+import org.apache.commons.lang.ArrayUtils;
+import org.apache.commons.lang3.StringUtils;
+      String searchName = StringUtils.trimToNull(name);
-        if (info.name.trim().equalsIgnoreCase(name.trim())) {
+        if (info.name.trim().equalsIgnoreCase(searchName)) {
-      LOG.warn("Failed to get Operating System name. " + se);
+      LOG.warn("Failed to get Operating System name.", se);
-        if (!pID.equals("1")) {
+        if (!"1".equals(pID)) {
-          if (ppid.equals("1")) {
+          if ("1".equals(ppid)) {
-      LinkedList<ProcessInfo> pInfoQueue = new LinkedList<ProcessInfo>();
-      pInfoQueue.addAll(me.getChildren());
+      List<ProcessInfo> children = me.getChildren();
+      Queue<ProcessInfo> pInfoQueue = new ArrayDeque<ProcessInfo>(children);
-      if (LOG.isDebugEnabled()) {
-        // Log.debug the ProcfsBasedProcessTree
-        LOG.debug(this.toString());
-      }
+      LOG.debug(this);
+
-        //Update smaps info
+        // Update smaps info
-    List<String> currentPIDs = new ArrayList<String>();
-    currentPIDs.addAll(processTree.keySet());
-    return currentPIDs;
+    return Collections.unmodifiableList(new ArrayList<>(processTree.keySet()));
-    long total = UNAVAILABLE;
+    long total = 0L;
+    boolean isAvailable = false;
-        if (total == UNAVAILABLE ) {
-          total = 0;
-        }
+        isAvailable = true;
-    return total;
+    return isAvailable ? total : UNAVAILABLE;
-      if ((p != null) ) {
+      if (p != null) {
+        isAvailable = true;
-        isAvailable = true;
-          if (LOG.isDebugEnabled()) {
-            LOG.debug(procMemInfo.toString());
-          }
+          LOG.debug(procMemInfo);
-        incJiffies += p.getDtime();
+        incJiffies += p.getDtime();
-    List<String> processList = new ArrayList<String>();
-    String[] processDirs = (new File(procfsDir)).list();
-    if (processDirs != null) {
-      for (String dir : processDirs) {
-        Matcher m = numberPattern.matcher(dir);
-        if (!m.matches()) {
-          continue;
-        }
-        try {
-          if ((new File(procfsDir, dir)).isDirectory()) {
-            processList.add(dir);
-          }
-        } catch (SecurityException s) {
-          // skip this process
-        }
+    List<String> processList = Collections.emptyList();
+    FileFilter procListFileFilter = new AndFileFilter(
+        DirectoryFileFilter.INSTANCE, new RegexFileFilter(numberPattern));
+
+    File dir = new File(procfsDir);
+    File[] processDirs = dir.listFiles(procListFileFilter);
+
+    if (ArrayUtils.isNotEmpty(processDirs)) {
+      processList = new ArrayList<String>(processDirs.length);
+      for (File processDir : processDirs) {
+        processList.add(processDir.getName());
-      LOG.warn("Error reading the stream " + io);
+      LOG.warn("Error reading the stream", io);
-          LOG.warn("Error closing the stream " + in);
+          LOG.warn("Error closing the stream", i);
-        LOG.warn("Error closing the stream " + fReader);
+        LOG.warn("Error closing the stream", i);
-          if (ret.equals("")) {
+          if (ret.isEmpty()) {
-        LOG.warn("Error reading the stream " + io);
+        LOG.warn("Error reading the stream", io);
-            LOG.warn("Error closing the stream " + in);
+            LOG.warn("Error closing the stream", i);
-          LOG.warn("Error closing the stream " + fReader);
+          LOG.warn("Error closing the stream", i);
-      LOG.error(f.getMessage());
+      LOG.error(f);
-      LOG.error(e.getMessage());
+      LOG.error(e);
-      LOG.error(t.getMessage());
+      LOG.error(t);
-        sb.append(info.toString());
+        sb.append(info);
