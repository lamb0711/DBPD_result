HDFS-2693. Fix synchronization issues around state transition. Contributed by Todd Lipcon.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1221582 13f79535-47bb-0310-9956-ffa450edef68

-  private final FSNamesystem namesystem;
+  protected final FSNamesystem namesystem;
-    nn.checkOperation(OperationCategory.WRITE);
+    // nn.checkOperation(OperationCategory.WRITE);
+    // TODO: I dont think this should be checked - it's just for logging
+    // and dropping backups
-    nn.checkOperation(OperationCategory.CHECKPOINT);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.READ);
-    nn.checkOperation(OperationCategory.READ);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    stateChangeLog.info("*DIR* NameNode.reportBadBlocks");
-    for (int i = 0; i < blocks.length; i++) {
-      ExtendedBlock blk = blocks[i].getBlock();
-      DatanodeInfo[] nodes = blocks[i].getLocations();
-      for (int j = 0; j < nodes.length; j++) {
-        DatanodeInfo dn = nodes[j];
-        namesystem.getBlockManager().findAndMarkBlockAsCorrupt(blk, dn);
-      }
-    }
+    namesystem.reportBadBlocks(blocks);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    if (nn.isStandbyState()) {
-      if (namesystem.isGenStampInFuture(newgenerationstamp)) {
-        LOG.info("Required GS=" + newgenerationstamp
-            + ", Queuing commitBlockSynchronization message");
-        namesystem.getPendingDataNodeMessages().queueMessage(
-            new PendingDataNodeMessages.CommitBlockSynchronizationMessage(
-                block, newgenerationstamp, newlength, closeFile, deleteblock,
-                newtargets, newgenerationstamp));
-        return;
-      }
-    }
-    nn.checkOperation(OperationCategory.READ);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.READ);
-    nn.checkOperation(OperationCategory.READ);
-    nn.checkOperation(OperationCategory.READ);
-    nn.checkOperation(OperationCategory.READ);
+    namesystem.checkOperation(OperationCategory.READ);
-    nn.checkOperation(OperationCategory.READ);
-    nn.checkOperation(OperationCategory.READ);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.WRITE);
-    nn.checkOperation(OperationCategory.READ);
