HDDS-1233. Create an Ozone Manager Service provider for Recon. Contributed by Aravindan Vijayan.

-import static org.apache.hadoop.ozone.recon.ReconConstants.
-    RECON_CONTAINER_DB;
-import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.
-    OZONE_RECON_CONTAINER_DB_CACHE_SIZE_DEFAULT;
-import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.
-    OZONE_RECON_CONTAINER_DB_CACHE_SIZE_MB;
-import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.
-    OZONE_RECON_DB_DIRS;
+import static org.apache.hadoop.ozone.recon.ReconConstants.RECON_CONTAINER_DB;
+import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.OZONE_RECON_CONTAINER_DB_CACHE_SIZE_DEFAULT;
+import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.OZONE_RECON_CONTAINER_DB_CACHE_SIZE_MB;
+import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.OZONE_RECON_CONTAINER_DB_STORE_IMPL;
+import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.OZONE_RECON_CONTAINER_DB_STORE_IMPL_DEFAULT;
+import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.OZONE_RECON_DB_DIR;
+import static org.apache.hadoop.ozone.recon.ReconUtils.getReconDbDir;
-import org.apache.hadoop.hdds.server.ServerUtils;
+import com.google.inject.ProvisionException;
-    File metaDir = ServerUtils.getDirWithFallBackToOzoneMetadata(configuration,
-        OZONE_RECON_DB_DIRS, "Recon");
-    File containerDBPath = new File(metaDir, RECON_CONTAINER_DB);
+    File metaDir = getReconDbDir(configuration, OZONE_RECON_DB_DIR);
+    File containerDBPath = new File(metaDir,
+        RECON_CONTAINER_DB);
+    String dbType = configuration.get(OZONE_RECON_CONTAINER_DB_STORE_IMPL,
+        OZONE_RECON_CONTAINER_DB_STORE_IMPL_DEFAULT);
+    MetadataStore metadataStore = null;
-      return MetadataStoreBuilder.newBuilder()
+      metadataStore = MetadataStoreBuilder.newBuilder()
+          .setDBType(dbType)
-    return null;
+    if (metadataStore == null) {
+      throw new ProvisionException("Unable to provide instance of Metadata " +
+          "store.");
+    }
+    return metadataStore;
