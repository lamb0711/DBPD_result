HDFS-14327. Using FQDN instead of IP to access servers with DNS resolving. Contributed by Fengnan Li.

+import java.util.HashMap;
- * This mock resolver class returns the predefined resolving results.
- * By default it uses a default "test.foo.bar" domain with two IP addresses.
+ * This mock resolver class returns the predefined resolving/reverse lookup
+ * results. By default it uses a default "test.foo.bar" domain with two
+ * IP addresses.
+  public static final String FQDN_1 = "host01.com";
+  public static final String FQDN_2 = "host02.com";
-
+  /** Internal mapping from IP addresses to fqdns. */
+  private Map<InetAddress, String> ptrMap = new HashMap<>();
+      ptrMap.put(nn1Address, FQDN_1);
+      ptrMap.put(nn2Address, FQDN_2);
+  @Override
+  public String getHostnameByIP(InetAddress address) {
+    return ptrMap.containsKey(address) ? ptrMap.get(address) : null;
+  }
+
+  @Override
+  public String[] getAllResolvedHostnameByDomainName(
+      String domainName, boolean useFQDN) throws UnknownHostException {
+    InetAddress[] addresses = getAllByDomainName(domainName);
+    String[] hosts = new String[addresses.length];
+    if (useFQDN) {
+      for (int i = 0; i < hosts.length; i++) {
+        hosts[i] = this.ptrMap.get(addresses[i]);
+      }
+    } else {
+      for (int i = 0; i < hosts.length; i++) {
+        hosts[i] = addresses[i].getHostAddress();
+      }
+    }
+
+    return hosts;
+  }
+
