HDFS-12598. Ozone: Fix 3 node ratis replication in Ozone.  Contributed by Mukul Kumar Singh

+import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.ozone.scm.container.placement.algorithms.ContainerPlacementPolicy;
+import org.apache.hadoop.ozone.scm.container.placement.algorithms
+    .ContainerPlacementPolicy;
+import org.apache.hadoop.scm.XceiverClientRatis;
-import static org.apache.hadoop.ozone.protocol.proto.OzoneProtos.LifeCycleState.ALLOCATED;
-import static org.apache.hadoop.ozone.protocol.proto.OzoneProtos.LifeCycleState.OPEN;
+import static org.apache.hadoop.ozone.protocol.proto.OzoneProtos
+    .LifeCycleState.ALLOCATED;
+import static org.apache.hadoop.ozone.protocol.proto.OzoneProtos
+    .LifeCycleState.OPEN;
+  private final Configuration conf;
-      ContainerPlacementPolicy placementPolicy, long size) {
+      ContainerPlacementPolicy placementPolicy, long size, Configuration conf) {
+    this.conf = conf;
-      OzoneProtos.ReplicationFactor replicationFactor) {
+      OzoneProtos.ReplicationFactor replicationFactor) throws IOException {
-      pipeline = allocateRatisPipeline(newNodes, containerName);
+      pipeline =
+          allocateRatisPipeline(newNodes, containerName, replicationFactor);
+      try (XceiverClientRatis client =
+          XceiverClientRatis.newXceiverClientRatis(pipeline, conf)) {
+        client
+            .createPipeline(pipeline.getPipelineName(), pipeline.getMachines());
+      }
-  Pipeline allocateRatisPipeline(List<DatanodeID> nodes, String containerName) {
+  Pipeline allocateRatisPipeline(List<DatanodeID> nodes, String containerName,
+      OzoneProtos.ReplicationFactor factor) {
+      pipeline.setFactor(factor);
+      Preconditions.checkNotNull(datanode);
+        // once a datanode has been added to a pipeline, exclude it from
+        // further allocations
+        ratisMembers.add(datanode);
