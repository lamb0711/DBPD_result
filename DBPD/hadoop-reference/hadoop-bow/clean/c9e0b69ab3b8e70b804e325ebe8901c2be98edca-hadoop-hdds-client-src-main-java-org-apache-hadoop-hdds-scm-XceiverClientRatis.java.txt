HDDS-233. Update ozone to latest ratis snapshot build(0.3.0-50588bd-SNAPSHOT). Contributed by Shashikant Banerjee.

+import org.apache.hadoop.io.MultipleIOException;
+import org.apache.ratis.retry.RetryPolicy;
-import org.apache.ratis.protocol.RaftGroupId;
+import org.apache.ratis.util.CheckedBiConsumer;
+import java.util.ArrayList;
+import java.util.Collections;
+    final RetryPolicy retryPolicy = RatisHelper.createRetryPolicy(ozoneConf);
-        SupportedRpcType.valueOfIgnoreCase(rpcType), maxOutstandingRequests);
+        SupportedRpcType.valueOfIgnoreCase(rpcType), maxOutstandingRequests,
+        retryPolicy);
+  private final RetryPolicy retryPolicy;
-      int maxOutStandingChunks) {
+      int maxOutStandingChunks, RetryPolicy retryPolicy) {
+    this.retryPolicy = retryPolicy;
-  public void createPipeline()
-      throws IOException {
-    RaftGroupId groupId = pipeline.getId().getRaftGroupID();
-    RaftGroup group = RatisHelper.newRaftGroup(groupId, pipeline.getMachines());
-    LOG.debug("initializing pipeline:{} with nodes:{}",
-        pipeline.getId(), group.getPeers());
-    reinitialize(pipeline.getMachines(), RatisHelper.emptyRaftGroup(), group);
+  public void createPipeline() throws IOException {
+    final RaftGroup group = RatisHelper.newRaftGroup(pipeline);
+    LOG.debug("creating pipeline:{} with {}", pipeline.getId(), group);
+    callRatisRpc(pipeline.getMachines(),
+        (raftClient, peer) -> raftClient.groupAdd(group, peer.getId()));
-  public void destroyPipeline()
-      throws IOException {
-    RaftGroupId groupId = pipeline.getId().getRaftGroupID();
-    RaftGroup currentGroup =
-        RatisHelper.newRaftGroup(groupId, pipeline.getMachines());
-    LOG.debug("destroying pipeline:{} with nodes:{}",
-        pipeline.getId(), currentGroup.getPeers());
-    reinitialize(pipeline.getMachines(), currentGroup,
-        RatisHelper.emptyRaftGroup());
+  public void destroyPipeline() throws IOException {
+    final RaftGroup group = RatisHelper.newRaftGroup(pipeline);
+    LOG.debug("destroying pipeline:{} with {}", pipeline.getId(), group);
+    callRatisRpc(pipeline.getMachines(), (raftClient, peer) -> raftClient
+        .groupRemove(group.getGroupId(), peer.getId()));
-  private void reinitialize(List<DatanodeDetails> datanodes, RaftGroup oldGroup,
-      RaftGroup newGroup) throws IOException {
+  private void callRatisRpc(List<DatanodeDetails> datanodes,
+      CheckedBiConsumer<RaftClient, RaftPeer, IOException> rpc)
+      throws IOException {
-    IOException exception = null;
-    for (DatanodeDetails d : datanodes) {
-      try {
-        reinitialize(d, oldGroup, newGroup);
+    final List<IOException> exceptions =
+        Collections.synchronizedList(new ArrayList<>());
+    datanodes.parallelStream().forEach(d -> {
+      final RaftPeer p = RatisHelper.toRaftPeer(d);
+      try (RaftClient client = RatisHelper
+          .newRaftClient(rpcType, p, retryPolicy)) {
+        rpc.accept(client, p);
-        if (exception == null) {
-          exception = new IOException(
-              "Failed to reinitialize some of the RaftPeer(s)", ioe);
-        } else {
-          exception.addSuppressed(ioe);
-        }
+        exceptions.add(
+            new IOException("Failed invoke Ratis rpc " + rpc + " for " + d,
+                ioe));
-    }
-    if (exception != null) {
-      throw exception;
-    }
-  }
-
-  /**
-   * Adds a new peers to the Ratis Ring.
-   *
-   * @param datanode - new datanode
-   * @param oldGroup    - previous Raft group
-   * @param newGroup    - new Raft group
-   * @throws IOException - on Failure.
-   */
-  private void reinitialize(DatanodeDetails datanode, RaftGroup oldGroup,
-      RaftGroup newGroup)
-      throws IOException {
-    final RaftPeer p = RatisHelper.toRaftPeer(datanode);
-    try (RaftClient client = oldGroup == RatisHelper.emptyRaftGroup() ?
-        RatisHelper.newRaftClient(rpcType, p) :
-        RatisHelper.newRaftClient(rpcType, p, oldGroup)) {
-      client.reinitialize(newGroup, p.getId());
-    } catch (IOException ioe) {
-      LOG.error("Failed to reinitialize RaftPeer:{} datanode: {}  ",
-          p, datanode, ioe);
-      throw new IOException("Failed to reinitialize RaftPeer " + p
-          + "(datanode=" + datanode + ")", ioe);
+    });
+    if (!exceptions.isEmpty()) {
+      throw MultipleIOException.createIOException(exceptions);
-        RatisHelper.newRaftClient(rpcType, getPipeline()))) {
+        RatisHelper.newRaftClient(rpcType, getPipeline(), retryPolicy))) {
