YARN-8013. Support application tags when defining application namespaces for placement constraints. Contributed by Weiwei Yang.

-import org.apache.hadoop.yarn.api.records.AllocationTagNamespaceType;
-   * Try to the namespace of the allocation tags from the given target key.
-   *
-   * @param targetKey
-   * @return allocation tag namespace.
-   * @throws InvalidAllocationTagsQueryException
-   * if fail to parse the target key to a valid namespace.
-   */
-  private static AllocationTagNamespace getAllocationTagNamespace(
-      ApplicationId currentAppId, String targetKey, AllocationTagsManager atm)
-      throws InvalidAllocationTagsQueryException {
-    // Parse to a valid namespace.
-    AllocationTagNamespace namespace = AllocationTagNamespace.parse(targetKey);
-
-    // TODO Complete remove this check once we support app-label.
-    if (AllocationTagNamespaceType.APP_LABEL
-        .equals(namespace.getNamespaceType())) {
-      throw new InvalidAllocationTagsQueryException(
-          namespace.toString() + " is not supported yet!");
-    }
-
-    // Evaluate the namespace according to the given target
-    // before it can be consumed.
-    TargetApplications ta =
-        new TargetApplications(currentAppId, atm.getAllApplicationIds());
-    namespace.evaluate(ta);
-    return namespace;
-  }
-
-  /**
-    // Parse the allocation tag's namespace from the given target key,
-    // then evaluate the namespace and get its scope,
-    // which is represented by one or more application IDs.
-    AllocationTagNamespace namespace = getAllocationTagNamespace(
-          targetApplicationId, te.getTargetKey(), tm);
-    AllocationTags allocationTags = AllocationTags
-        .newAllocationTags(namespace, te.getTargetValues());
+    // Creates AllocationTags that will be further consumed by allocation
+    // tags manager for cardinality check.
+    AllocationTags allocationTags = AllocationTags.createAllocationTags(
+        targetApplicationId, te.getTargetKey(), te.getTargetValues());
