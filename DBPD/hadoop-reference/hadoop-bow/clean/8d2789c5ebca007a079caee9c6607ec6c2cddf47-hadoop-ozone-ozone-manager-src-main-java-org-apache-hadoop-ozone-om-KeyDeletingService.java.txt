HDDS-795. RocksDb specific classes leak from DBStore/Table interfaces. Contributed by  MÃ¡rton Elek.

-import com.google.common.annotations.VisibleForTesting;
+import java.io.IOException;
+import java.util.List;
+import java.util.concurrent.TimeUnit;
+import java.util.concurrent.atomic.AtomicLong;
+
+import org.apache.hadoop.utils.db.BatchOperation;
+import org.apache.hadoop.utils.db.DBStore;
-import org.rocksdb.RocksDBException;
-import org.rocksdb.WriteBatch;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-import java.io.IOException;
-import java.util.List;
-import java.util.concurrent.TimeUnit;
-import java.util.concurrent.atomic.AtomicLong;
-
+import com.google.common.annotations.VisibleForTesting;
+import org.rocksdb.RocksDBException;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+      DBStore store = manager.getMetadataManager().getStore();
+
-      try (WriteBatch writeBatch = new WriteBatch()) {
+      try (BatchOperation writeBatch = store.initBatchOperation()) {
-            writeBatch.delete(deletedTable.getHandle(),
+            deletedTable.deleteWithBatch(writeBatch,
-        manager.getMetadataManager().getStore().write(writeBatch);
+        store.commitBatchOperation(writeBatch);
