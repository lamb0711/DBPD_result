HDDS-167. Rename KeySpaceManager to OzoneManager. Contributed by Arpit Agarwal.

-package org.apache.hadoop.ozone.ksm;
+package org.apache.hadoop.ozone.om;
-import org.apache.hadoop.ozone.ksm.helpers.KsmVolumeArgs;
+import org.apache.hadoop.ozone.om.helpers.OmVolumeArgs;
-import org.apache.hadoop.ozone.ksm.exceptions.KSMException;
+import org.apache.hadoop.ozone.om.exceptions.OMException;
-    .KeySpaceManagerProtocolProtos.OzoneAclInfo;
+    .OzoneManagerProtocolProtos.OzoneAclInfo;
-    .KeySpaceManagerProtocolProtos.VolumeList;
+    .OzoneManagerProtocolProtos.VolumeList;
-    .KeySpaceManagerProtocolProtos.VolumeInfo;
+    .OzoneManagerProtocolProtos.VolumeInfo;
-import static org.apache.hadoop.ozone.ksm.KSMConfigKeys
-    .OZONE_KSM_USER_MAX_VOLUME_DEFAULT;
-import static org.apache.hadoop.ozone.ksm.KSMConfigKeys
-    .OZONE_KSM_USER_MAX_VOLUME;
-import static org.apache.hadoop.ozone.ksm.exceptions
-    .KSMException.ResultCodes;
+import static org.apache.hadoop.ozone.om.OMConfigKeys
+    .OZONE_OM_USER_MAX_VOLUME_DEFAULT;
+import static org.apache.hadoop.ozone.om.OMConfigKeys
+    .OZONE_OM_USER_MAX_VOLUME;
+import static org.apache.hadoop.ozone.om.exceptions.OMException.ResultCodes;
- * KSM volume management code.
+ * OM volume management code.
-  private final KSMMetadataManager metadataManager;
+  private final OMMetadataManager metadataManager;
-  public VolumeManagerImpl(KSMMetadataManager metadataManager,
+  public VolumeManagerImpl(OMMetadataManager metadataManager,
-    this.maxUserVolumeCount = conf.getInt(OZONE_KSM_USER_MAX_VOLUME,
-        OZONE_KSM_USER_MAX_VOLUME_DEFAULT);
+    this.maxUserVolumeCount = conf.getInt(OZONE_OM_USER_MAX_VOLUME,
+        OZONE_OM_USER_MAX_VOLUME_DEFAULT);
-      throw new KSMException(ResultCodes.FAILED_TOO_MANY_USER_VOLUMES);
+      throw new OMException(ResultCodes.FAILED_TOO_MANY_USER_VOLUMES);
-      throw new KSMException(ResultCodes.FAILED_USER_NOT_FOUND);
+      throw new OMException(ResultCodes.FAILED_USER_NOT_FOUND);
-   * @param args - KsmVolumeArgs.
+   * @param args - OmVolumeArgs.
-  public void createVolume(KsmVolumeArgs args) throws IOException {
+  public void createVolume(OmVolumeArgs args) throws IOException {
-        throw new KSMException(ResultCodes.FAILED_VOLUME_ALREADY_EXISTS);
+        throw new OMException(ResultCodes.FAILED_VOLUME_ALREADY_EXISTS);
-      if (!(ex instanceof KSMException)) {
+      if (!(ex instanceof OMException)) {
-        throw  new KSMException(ResultCodes.FAILED_VOLUME_NOT_FOUND);
+        throw  new OMException(ResultCodes.FAILED_VOLUME_NOT_FOUND);
-      KsmVolumeArgs volumeArgs = KsmVolumeArgs.getFromProtobuf(volumeInfo);
+      OmVolumeArgs volumeArgs = OmVolumeArgs.getFromProtobuf(volumeInfo);
-      KsmVolumeArgs newVolumeArgs =
-          KsmVolumeArgs.newBuilder().setVolume(volumeArgs.getVolume())
+      OmVolumeArgs newVolumeArgs =
+          OmVolumeArgs.newBuilder().setVolume(volumeArgs.getVolume())
-      if (!(ex instanceof KSMException)) {
+      if (!(ex instanceof OMException)) {
-        throw new KSMException(ResultCodes.FAILED_VOLUME_NOT_FOUND);
+        throw new OMException(ResultCodes.FAILED_VOLUME_NOT_FOUND);
-      KsmVolumeArgs volumeArgs = KsmVolumeArgs.getFromProtobuf(volumeInfo);
+      OmVolumeArgs volumeArgs = OmVolumeArgs.getFromProtobuf(volumeInfo);
-      KsmVolumeArgs newVolumeArgs =
-          KsmVolumeArgs.newBuilder()
+      OmVolumeArgs newVolumeArgs =
+          OmVolumeArgs.newBuilder()
-      if (!(ex instanceof KSMException)) {
+      if (!(ex instanceof OMException)) {
-  public KsmVolumeArgs getVolumeInfo(String volume) throws IOException {
+  public OmVolumeArgs getVolumeInfo(String volume) throws IOException {
-        throw new KSMException(ResultCodes.FAILED_VOLUME_NOT_FOUND);
+        throw new OMException(ResultCodes.FAILED_VOLUME_NOT_FOUND);
-      KsmVolumeArgs volumeArgs = KsmVolumeArgs.getFromProtobuf(volumeInfo);
+      OmVolumeArgs volumeArgs = OmVolumeArgs.getFromProtobuf(volumeInfo);
-      if (!(ex instanceof KSMException)) {
+      if (!(ex instanceof OMException)) {
-        throw new KSMException(ResultCodes.FAILED_VOLUME_NOT_FOUND);
+        throw new OMException(ResultCodes.FAILED_VOLUME_NOT_FOUND);
-        throw new KSMException(ResultCodes.FAILED_VOLUME_NOT_EMPTY);
+        throw new OMException(ResultCodes.FAILED_VOLUME_NOT_EMPTY);
-      if (!(ex instanceof KSMException)) {
+      if (!(ex instanceof OMException)) {
-        throw  new KSMException(ResultCodes.FAILED_VOLUME_NOT_FOUND);
+        throw  new OMException(ResultCodes.FAILED_VOLUME_NOT_FOUND);
-      KsmVolumeArgs volumeArgs = KsmVolumeArgs.getFromProtobuf(volumeInfo);
+      OmVolumeArgs volumeArgs = OmVolumeArgs.getFromProtobuf(volumeInfo);
-      if (!(ex instanceof KSMException)) {
+      if (!(ex instanceof OMException)) {
-  public List<KsmVolumeArgs> listVolumes(String userName,
-      String prefix, String startKey, int maxKeys) throws IOException {
+  public List<OmVolumeArgs> listVolumes(String userName,
+                                        String prefix, String startKey, int maxKeys) throws IOException {
