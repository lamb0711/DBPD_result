HDFS-6004. Change DFSAdmin for rolling upgrade commands. (Contributed by szetszwo)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1571463 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.PrintStream;
-    static final String USAGE = "-"+NAME+" [<query|start|finalize>]";
+    static final String USAGE = "-"+NAME+" [<query|prepare|finalize>]";
-        + "     query: query current rolling upgrade status.\n"
-        + "     start: start rolling upgrade."
-        + "  finalize: finalize rolling upgrade.";
+        + "     query: query the current rolling upgrade status.\n"
+        + "   prepare: prepare a new rolling upgrade."
+        + "  finalize: finalize the current rolling upgrade.";
+    private static void printMessage(RollingUpgradeInfo info,
+        PrintStream out) {
+      if (info != null && info.isStarted()) {
+        if (!info.createdRollbackImages()) {
+          out.println(
+              "Preparing for upgrade. Data is being saved for rollback."
+              + "\nRun \"dfsadmin -rollingUpgrade query\" to check the status"
+              + "\nfor proceeding with rolling upgrade");
+            out.println(info);
+        } else if (!info.isFinalized()) {
+          out.println("Proceed with rolling upgrade:");
+          out.println(info);
+        } else {
+          out.println("Rolling upgrade is finalized.");
+          out.println(info);
+        }
+      } else {
+        out.println("There is no rolling upgrade in progress.");
+      }
+    }
+
-        if (info != null && info.isStarted()) {
-          System.out.println("Rolling upgrade is in progress:");
-          System.out.println(info);
-        } else {
-          System.out.println("There is no rolling upgrade in progress.");
-        }
-      case START:
+      case PREPARE:
-        System.out.println("Rolling upgrade is started:");
-        System.out.println(info);
-        System.out.println("Rolling upgrade is finalized:");
-        System.out.println(info);
+      printMessage(info, System.out);
-    String shutdownDatanode = "-shutdownDatanode <datanode_host:ipc_port> [upgrade]\n" +
-        "\tShut down the datanode. If an optional argument \"upgrade\" is\n" +
-        "\tpassed, the clients will be advised to wait for the datanode to\n" +
-        "\trestart and the fast start-up mode will be enabled. Clients will\n" +
-        "\ttimeout and ignore the datanode, if the restart does not happen\n" +
-        "\tin time. The fast start-up mode will also be disabled, if restart\n" +
-        "\tis delayed too much.\n";
+    String shutdownDatanode = "-shutdownDatanode <datanode_host:ipc_port> [upgrade]\n"
+        + "\tSubmit a shutdown request for the given datanode. If an optional\n"
+        + "\t\"upgrade\" argument is specified, clients accessing the datanode\n"
+        + "\twill be advised to wait for it to restart and the fast start-up\n"
+        + "\tmode will be enabled. When the restart does not happen in time,\n"
+        + "\tclients will timeout and ignore the datanode. In such case, the\n"
+        + "\tfast start-up mode will also be disabled.\n";
-    String getDatanodeInfo = "-getDatanodeInfo <datanode_host:ipc_port>\n" +
-        "\tCheck the datanode for liveness. If the datanode responds,\n" +
-        "\timore information about the datanode is printed.\n";
+    String getDatanodeInfo = "-getDatanodeInfo <datanode_host:ipc_port>\n"
+        + "\tGet the information about the given datanode. This command can\n"
+        + "\tbe used for checking if a datanode is alive.\n";
-    ClientDatanodeProtocol dnProxy = getDataNodeProxy(argv[i]);
+    final String dn = argv[i];
+    ClientDatanodeProtocol dnProxy = getDataNodeProxy(dn);
-      if ("upgrade".equals(argv[i+1])) {
+      if ("upgrade".equalsIgnoreCase(argv[i+1])) {
+    System.out.println("Submitted a shutdown request to datanode " + dn);
