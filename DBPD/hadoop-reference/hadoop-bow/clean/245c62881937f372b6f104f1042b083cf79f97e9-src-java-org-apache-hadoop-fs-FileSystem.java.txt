HADOOP-1886. Undocumented parameters in FilesSystem. Contributed by Frank Conrad


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134218 13f79535-47bb-0310-9956-ffa450edef68

-   * @param uri
-   * @param conf
-   * @param user
+   * @param uri of the filesystem
+   * @param conf the configuration to use
+   * @param user to perform the get as
-  /** Returns the configured filesystem implementation.*/
+  /**
+   * Returns the configured filesystem implementation.
+   * @param conf the configuration to use
+   */
-   * @param conf the configuration to access
+   * @param conf the configuration to use
-   * @param uri
-   * @param conf
-   * @param user
+   * @param uri of the filesystem
+   * @param conf the configuration to use
+   * @param user to perform the get as
-   * This always returns a new FileSystem object. */
+   * This always returns a new FileSystem object.
+   * @param conf the configuration to use
+   */
-   * @param ugi
+   * @param ugi user group info to close
-  /** Make sure that a path specifies a FileSystem. */
+  /** 
+   * Make sure that a path specifies a FileSystem.
+   * @param path to use
+   */
-  /** Check that a Path belongs to this FileSystem. */
+  /** 
+   * Check that a Path belongs to this FileSystem.
+   * @param path to check
+   */
+   *
+   * @param file FilesStatus to get data from
+   * @param start offset into the given file
+   * @param len length for which to get locations for
-    if ( (start<0) || (len < 0) ) {
+    if (start < 0 || len < 0) {
-    return new BlockLocation[] { new BlockLocation(name, host, 0, file.getLen()) };
+    return new BlockLocation[] {
+      new BlockLocation(name, host, 0, file.getLen()) };
+   *
+   * @param p path of file to get locations for
+   * @param start offset into the given file
+   * @param len length for which to get locations for
-   * Opens an FSDataOutputStream at the indicated Path.
+   * Create an FSDataOutputStream at the indicated Path.
+   * @param f the file to create
-   * Opens an FSDataOutputStream at the indicated Path.
+   * Create an FSDataOutputStream at the indicated Path.
+   * @param f the file to create
+   * @param overwrite if a file with this name already exists, then if true,
+   *   the file will be overwritten, and if false an exception will be thrown.
-    throws IOException {
+      throws IOException {
+   * @param f the file to create
+   * @param progress to report progress
-  public FSDataOutputStream create(Path f, Progressable progress) throws IOException {
+  public FSDataOutputStream create(Path f, Progressable progress) 
+      throws IOException {
-   * Opens an FSDataOutputStream at the indicated Path.
+   * Create an FSDataOutputStream at the indicated Path.
+   * @param f the file to create
+   * @param replication the replication factor
-    throws IOException {
+      throws IOException {
-   * Opens an FSDataOutputStream at the indicated Path with write-progress
+   * Create an FSDataOutputStream at the indicated Path with write-progress
+   * @param f the file to create
+   * @param replication the replication factor
+   * @param progress to report progress
-  public FSDataOutputStream create(Path f, short replication, Progressable progress)
-    throws IOException {
+  public FSDataOutputStream create(Path f, short replication, 
+      Progressable progress) throws IOException {
-   * Opens an FSDataOutputStream at the indicated Path.
-   * @param f the file name to open
+   * Create an FSDataOutputStream at the indicated Path.
+   * @param f the file name to create
-   * Opens an FSDataOutputStream at the indicated Path with write-progress
+   * Create an FSDataOutputStream at the indicated Path with write-progress
-   * @param f the file name to open
+   * @param f the path of the file to open
-   * Opens an FSDataOutputStream at the indicated Path.
+   * Create an FSDataOutputStream at the indicated Path.
-   * Opens an FSDataOutputStream at the indicated Path with write-progress
+   * Create an FSDataOutputStream at the indicated Path with write-progress
-   * Opens an FSDataOutputStream at the indicated Path with write-progress
+   * Create an FSDataOutputStream at the indicated Path with write-progress
+   *
+   * @param f path to use for create
+   * @param src path to be renamed
+   * @param dst new path after rename
+   * @param f path to check
+   * @param f path to check
-  /** Return the {@link ContentSummary} of a given {@link Path}. */
+  /** Return the {@link ContentSummary} of a given {@link Path}.
+  * @param f path to use
+  */
+   * @param f path to create
+   * @param permission to apply to f
+   * @param src path
+   * @param dst path
+   * @param srcs path
+   * @param dst path
+   * @param src path
+   * @param dst path
+   * @param delSrc whether to delete the src
+   * @param src path
+   * @param dst path
+   * @param delSrc whether to delete the src
+   * @param overwrite whether to overwrite an existing file
+   * @param srcs array of paths which are source
+   * @param dst path
+   * @param delSrc whether to delete the src
+   * @param overwrite whether to overwrite an existing file
+   * @param src path
+   * @param dst path
+   * @param src path
+   * @param dst path
+   * @param src path
+   * @param dst path
+   * @param delSrc whether to delete the src
+   * @param src path
+   * @param dst path
+   * @param fsOutputFile path of output file
+   * @param tmpLocalFile path of local tmp file
+   * @param fsOutputFile path of output file
+   * @param tmpLocalFile path to local tmp file
+  /**
+   * Reset all statistics for all file systems
+   */
+  /**
+   * Print all statistics for all file systems
+   */
