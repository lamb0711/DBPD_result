MAPREDUCE-2409. DistributedCache maps files and archives to the same path,
despite semantic incompatibility. Contributed by Siddharth Seth


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1149004 13f79535-47bb-0310-9956-ffa450edef68

-    key = getKey(cache, conf, confFileStamp, getLocalizedCacheOwner(isPublic));
+    key = getKey(cache, conf, confFileStamp, getLocalizedCacheOwner(isPublic),
+        isArchive);
-    Path localizedPath = null;
-          localizedPath = localizeCache(conf, cache, confFileStamp,
+          localizeCache(conf, cache, confFileStamp,
-          localizedPath = checkCacheStatusValidity(conf, cache, confFileStamp,
+          checkCacheStatusValidity(conf, cache, confFileStamp,
-      return localizedPath;
+      return lcacheStatus.localizedLoadPath;
-      String owner) throws IOException {
-    String key = getKey(cache, conf, timeStamp, owner);
+      String owner, boolean isArchive) throws IOException {
+    String key = getKey(cache, conf, timeStamp, owner, isArchive);
-      String owner) throws IOException {
-    String key = getKey(cache, conf, timeStamp, owner);
+      String owner, boolean isArchive) throws IOException {
+    String key = getKey(cache, conf, timeStamp, owner, isArchive);
-  String getKey(URI cache, Configuration conf, long timeStamp, String user)
-      throws IOException {
-    return makeRelative(cache, conf) + String.valueOf(timeStamp) + user;
+  String getKey(URI cache, Configuration conf, long timeStamp, String user,
+      boolean isArchive) throws IOException {
+    return (isArchive ? "a" : "f") + "^" + makeRelative(cache, conf) 
+      + String.valueOf(timeStamp) + user;
-  static long getTimestamp(Configuration conf, URI cache)
-    throws IOException {
+  long getTimestamp(Configuration conf, URI cache) throws IOException {
-  private Path checkCacheStatusValidity(Configuration conf,
+  void checkCacheStatusValidity(Configuration conf,
-    return cacheStatus.localizedLoadPath;
-  private long checkStampSinceJobStarted(Configuration conf, FileSystem fs,
+  long checkStampSinceJobStarted(Configuration conf, FileSystem fs,
