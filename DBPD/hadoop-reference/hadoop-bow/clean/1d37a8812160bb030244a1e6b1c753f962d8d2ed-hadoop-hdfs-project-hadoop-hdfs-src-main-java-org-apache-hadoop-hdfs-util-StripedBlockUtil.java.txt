HDFS-8854. Erasure coding: add ECPolicy to replace schema+cellSize in hadoop-hdfs. Contributed by Walter Su.

-import org.apache.hadoop.io.erasurecode.ECSchema;
+import org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy;
-   * Decode based on the given input buffers and schema.
+   * Decode based on the given input buffers and erasure coding policy.
-  public static AlignedStripe[] divideOneStripe(ECSchema ecSchema,
+  public static AlignedStripe[] divideOneStripe(ErasureCodingPolicy ecPolicy,
-    final int dataBlkNum = ecSchema.getNumDataUnits();
+    final int dataBlkNum = ecPolicy.getNumDataUnits();
-    StripingCell[] cells = getStripingCellsOfByteRange(ecSchema, cellSize,
+    StripingCell[] cells = getStripingCellsOfByteRange(ecPolicy, cellSize,
-    VerticalRange[] ranges = getRangesForInternalBlocks(ecSchema, cellSize,
+    VerticalRange[] ranges = getRangesForInternalBlocks(ecPolicy, cellSize,
-    AlignedStripe[] stripes = mergeRangesForInternalBlocks(ecSchema, ranges);
+    AlignedStripe[] stripes = mergeRangesForInternalBlocks(ecPolicy, ranges);
-   * @param ecSchema The codec schema for the file, which carries the numbers
+   * @param ecPolicy The codec policy for the file, which carries the numbers
-  public static AlignedStripe[] divideByteRangeIntoStripes(ECSchema ecSchema,
+  public static AlignedStripe[] divideByteRangeIntoStripes(ErasureCodingPolicy ecPolicy,
-    final int dataBlkNum = ecSchema.getNumDataUnits();
+    final int dataBlkNum = ecPolicy.getNumDataUnits();
-    StripingCell[] cells = getStripingCellsOfByteRange(ecSchema, cellSize,
+    StripingCell[] cells = getStripingCellsOfByteRange(ecPolicy, cellSize,
-    VerticalRange[] ranges = getRangesForInternalBlocks(ecSchema, cellSize,
+    VerticalRange[] ranges = getRangesForInternalBlocks(ecPolicy, cellSize,
-    AlignedStripe[] stripes = mergeRangesForInternalBlocks(ecSchema, ranges);
+    AlignedStripe[] stripes = mergeRangesForInternalBlocks(ecPolicy, ranges);
-  private static StripingCell[] getStripingCellsOfByteRange(ECSchema ecSchema,
+  private static StripingCell[] getStripingCellsOfByteRange(ErasureCodingPolicy ecPolicy,
-    cells[0] = new StripingCell(ecSchema, firstCellSize, firstCellIdxInBG,
+    cells[0] = new StripingCell(ecPolicy, firstCellSize, firstCellIdxInBG,
-      cells[numCells - 1] = new StripingCell(ecSchema, lastCellSize,
+      cells[numCells - 1] = new StripingCell(ecPolicy, lastCellSize,
-      cells[i] = new StripingCell(ecSchema, cellSize, i + firstCellIdxInBG, 0);
+      cells[i] = new StripingCell(ecPolicy, cellSize, i + firstCellIdxInBG, 0);
-  private static VerticalRange[] getRangesForInternalBlocks(ECSchema ecSchema,
+  private static VerticalRange[] getRangesForInternalBlocks(ErasureCodingPolicy ecPolicy,
-    int dataBlkNum = ecSchema.getNumDataUnits();
-    int parityBlkNum = ecSchema.getNumParityUnits();
+    int dataBlkNum = ecPolicy.getNumDataUnits();
+    int parityBlkNum = ecPolicy.getNumParityUnits();
-      ECSchema ecSchema, VerticalRange[] ranges) {
-    int dataBlkNum = ecSchema.getNumDataUnits();
-    int parityBlkNum = ecSchema.getNumParityUnits();
+      ErasureCodingPolicy ecPolicy, VerticalRange[] ranges) {
+    int dataBlkNum = ecPolicy.getNumDataUnits();
+    int parityBlkNum = ecPolicy.getNumParityUnits();
-    final ECSchema schema;
+    final ErasureCodingPolicy ecPolicy;
-    StripingCell(ECSchema ecSchema, int cellSize, int idxInBlkGroup,
+    StripingCell(ErasureCodingPolicy ecPolicy, int cellSize, int idxInBlkGroup,
-      this.schema = ecSchema;
+      this.ecPolicy = ecPolicy;
-      this.idxInInternalBlk = idxInBlkGroup / ecSchema.getNumDataUnits();
+      this.idxInInternalBlk = idxInBlkGroup / ecPolicy.getNumDataUnits();
-          this.idxInInternalBlk * ecSchema.getNumDataUnits();
+          this.idxInInternalBlk * ecPolicy.getNumDataUnits();
