HDDS-102. SCM CA: SCM CA server signs certificate for approved CSR. Contributed by Anu Engineer.

-import org.apache.hadoop.hdds.security.x509.certificates.utils.CertificateSignRequest;
+import org.bouncycastle.pkcs.PKCS10CertificationRequest;
-   * @throws IOException - on Error.
+   * @throws IOException          - on Error.
-   * @param csr - Certificate Signing Request.
-   * @param approver - An Enum which says what kind of approval process to
-   * follow.
+   * @param csr  - Certificate Signing Request.
+   * @param type - An Enum which says what kind of approval process to follow.
-  Future<X509CertificateHolder> requestCertificate(CertificateSignRequest csr,
-      CertificateApprover approver) throws SCMSecurityException;
+  Future<X509CertificateHolder>
+      requestCertificate(PKCS10CertificationRequest csr, CertificateApprover.ApprovalType type)
+      throws SCMSecurityException;
+
+
+  /**
+   * Request a Certificate based on Certificate Signing Request.
+   *
+   * @param csr - Certificate Signing Request as a PEM encoded String.
+   * @param type - An Enum which says what kind of approval process to follow.
+   * @return A future that will have this certificate when this request is
+   * approved.
+   * @throws SCMSecurityException - on Error.
+   */
+  Future<X509CertificateHolder>
+      requestCertificate(String csr, CertificateApprover.ApprovalType type)
+      throws IOException;
+
+
-      CertificateApprover approver) throws SCMSecurityException;
+      CertificateApprover.ApprovalType approver) throws SCMSecurityException;
-  /**
-   * Approval Types for a certificate request.
-   */
-  enum CertificateApprover {
-    KERBEROS_TRUSTED, /* The Request came from a DN using Kerberos Identity*/
-    MANUAL, /* Wait for a Human being to approve this certificate */
-    TESTING_AUTOMATIC /* For testing purpose, Automatic Approval. */
-  }
