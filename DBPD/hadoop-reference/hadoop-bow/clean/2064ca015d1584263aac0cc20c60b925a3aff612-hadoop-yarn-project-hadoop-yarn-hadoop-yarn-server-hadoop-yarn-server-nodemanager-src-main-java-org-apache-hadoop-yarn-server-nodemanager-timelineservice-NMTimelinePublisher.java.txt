YARN-9349.  Changed logging to use slf4j api.
            Contributed by Prabhu Joseph

-          if (LOG.isDebugEnabled()) {
-            LOG.debug("Failed to publish Container metrics for container " +
-                container.getContainerId(), e);
-          }
+          LOG.debug("Failed to publish Container metrics for container {}",
+              container.getContainerId(), e);
-          if (LOG.isDebugEnabled()) {
-            LOG.debug("Failed to publish Container metrics for container " +
-                container.getContainerId(), e);
-          }
+          LOG.debug("Failed to publish Container metrics for container {}",
+              container.getContainerId(), e);
-        if (LOG.isDebugEnabled()) {
-          LOG.debug("Failed to publish Container metrics for container "
-              + container.getContainerId(), e);
-        }
+        LOG.debug("Failed to publish Container metrics for container {}",
+            container.getContainerId(), e);
-        if (LOG.isDebugEnabled()) {
-          LOG.debug("Failed to publish Container metrics for container "
-              + container.getContainerId(), e);
-        }
+        LOG.debug("Failed to publish Container metrics for container {}",
+            container.getContainerId(), e);
-        LOG.debug("Publishing the entity " + entity + ", JSON-style content: "
-            + TimelineUtils.dumpTimelineRecordtoJSON(entity));
+        LOG.debug("Publishing the entity {} JSON-style content: {}",
+            entity, TimelineUtils.dumpTimelineRecordtoJSON(entity));
-      if (LOG.isDebugEnabled()) {
-        LOG.debug("Error when publishing entity " + entity, e);
-      }
+      LOG.debug("Error when publishing entity {}", entity, e);
-      if (LOG.isDebugEnabled()) {
-        LOG.debug("Error when publishing entity " + entity, e);
-      }
+      LOG.debug("Error when publishing entity {}", entity, e);
-      if (LOG.isDebugEnabled()) {
-        LOG.debug(event.getType() + " is not a desired ApplicationEvent which"
-            + " needs to be published by NMTimelinePublisher");
-      }
+      LOG.debug("{} is not a desired ApplicationEvent which"
+          + " needs to be published by NMTimelinePublisher", event.getType());
-      if (LOG.isDebugEnabled()) {
-        LOG.debug(event.getType()
-            + " is not a desired ContainerEvent which needs to be published by"
-            + " NMTimelinePublisher");
-      }
+      LOG.debug("{} is not a desired ContainerEvent which needs to be "
+            + " published by NMTimelinePublisher", event.getType());
-      if (LOG.isDebugEnabled()) {
-        LOG.debug(event.getType()
-            + " is not a desired LocalizationEvent which needs to be published"
-            + " by NMTimelinePublisher");
-      }
+      LOG.debug("{} is not a desired LocalizationEvent which needs to be"
+            + " published by NMTimelinePublisher", event.getType());
