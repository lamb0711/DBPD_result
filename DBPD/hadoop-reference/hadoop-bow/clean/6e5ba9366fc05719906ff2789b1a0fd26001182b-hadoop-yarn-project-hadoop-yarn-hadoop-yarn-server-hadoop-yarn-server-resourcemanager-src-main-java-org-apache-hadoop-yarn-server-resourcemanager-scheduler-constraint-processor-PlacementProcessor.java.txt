YARN-7839. Modify PlacementAlgorithm to Check node capacity before placing request on node. (Panagiotis Garefalakis via asuresh)

+import org.apache.hadoop.yarn.api.records.Resource;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.constraint.api.SchedulingRequestWithPlacementAttempt;
+      // Normalize the Requests before dispatching
+      schedulingRequests.forEach(req -> {
+        Resource reqResource = req.getResourceSizing().getResources();
+        req.getResourceSizing()
+            .setResources(this.scheduler.getNormalizedResource(reqResource));
+      });
-    List<SchedulingRequest> rejectedRequests =
+    List<SchedulingRequestWithPlacementAttempt> rejectedAlgoRequests =
-    if (rejectedRequests != null && !rejectedRequests.isEmpty()) {
+    if (rejectedAlgoRequests != null && !rejectedAlgoRequests.isEmpty()) {
-          appAttemptId.getApplicationId(), rejectedRequests);
+          appAttemptId.getApplicationId(), rejectedAlgoRequests);
+      rejectedAlgoRequests.stream()
+          .filter(req -> req.getPlacementAttempt() < retryAttempts)
+          .forEach(req -> handleSchedulingResponse(
+              new Response(false, appAttemptId.getApplicationId(),
+                  req.getSchedulingRequest(), req.getPlacementAttempt(),
+                  null)));
-          rejectedRequests.stream()
+          rejectedAlgoRequests.stream()
+              .filter(req -> req.getPlacementAttempt() >= retryAttempts)
-                  RejectionReason.COULD_NOT_PLACE_ON_NODE, sr))
+                  RejectionReason.COULD_NOT_PLACE_ON_NODE,
+                  sr.getSchedulingRequest()))
-    rejectedRequests =
+    List<SchedulingRequest> rejectedRequests =
