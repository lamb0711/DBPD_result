HDFS-6682. Add a metric to expose the timestamp of the oldest under-replicated block. (aajisaka)

+import java.util.Collections;
+import java.util.LinkedHashMap;
+import java.util.Map;
+
+import org.apache.hadoop.util.Time;
+  /** Keep timestamp when a block is put into the queue. */
+  private final Map<BlockInfo, Long> timestampsMap =
+      Collections.synchronizedMap(new LinkedHashMap<BlockInfo, Long>());
-   * Empty the queues.
+   * Empty the queues and timestamps.
+    timestampsMap.clear();
+  /**
+   * Return the smallest timestamp of the under-replicated/corrupt blocks.
+   * If there are no under-replicated or corrupt blocks, return 0.
+   */
+  long getTimeOfTheOldestBlockToBeReplicated() {
+    synchronized (timestampsMap) {
+      if (timestampsMap.isEmpty()) {
+        return 0;
+      }
+      // Since we are using LinkedHashMap, the first value is the smallest.
+      return timestampsMap.entrySet().iterator().next().getValue();
+    }
+  }
+
-
+      timestampsMap.put(block, Time.now());
-        "BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}" +
-            " from priority queue {}", block, priLevel);
+          "BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}" +
+              " from priority queue {}", block, priLevel);
+      timestampsMap.remove(block);
+          timestampsMap.remove(block);
