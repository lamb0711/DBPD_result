YARN-5264. Store all queue-specific information in FSQueue. (Yufei Gu via kasha)

+  protected ResourceWeights weights;
+  protected Resource minShare;
+  protected Resource maxShare;
+  protected int maxRunningApps;
+  protected Resource maxChildQueueResource;
+
+  // maxAMShare is a value between 0 and 1.
+  protected float maxAMShare;
+
-    metrics.setMinShare(getMinShare());
-    metrics.setMaxShare(getMaxShare());
-
-    AllocationConfiguration allocConf = scheduler.getAllocationConfiguration();
-    metrics.setMaxApps(allocConf.getQueueMaxApps(name));
-    metrics.setSchedulingPolicy(allocConf.getSchedulingPolicy(name).getName());
-  
+
+  /**
+   * Initialize a queue by setting its queue-specific properties and its
+   * metrics.
+   * This function is invoked when a new queue is created or reloading the
+   * allocation configuration.
+   */
+  public void init() {
+    AllocationConfiguration allocConf = scheduler.getAllocationConfiguration();
+    allocConf.initFSQueue(this, scheduler);
+  }
+
+  public void setWeights(ResourceWeights weights){
+    this.weights = weights;
+  }
+
-    return scheduler.getAllocationConfiguration().getQueueWeight(getName());
+    return weights;
-  
+
+  public void setMinShare(Resource minShare){
+    this.minShare = minShare;
+  }
+
-    return scheduler.getAllocationConfiguration().getMinResources(getName());
+    return minShare;
-  
+
+  public void setMaxShare(Resource maxShare){
+    this.maxShare = maxShare;
+  }
+
-    return scheduler.getAllocationConfiguration().getMaxResources(getName());
+    return maxShare;
+  }
+
+  public void setMaxChildQueueResource(Resource maxChildShare){
+    this.maxChildQueueResource = maxChildShare;
+  }
+
+  public Resource getMaxChildQueueResource() {
+    return maxChildQueueResource;
+  }
+
+  public void setMaxRunningApps(int maxRunningApps){
+    this.maxRunningApps = maxRunningApps;
+  }
+
+  public int getMaxRunningApps() {
+    return maxRunningApps;
+  }
+
+  public void setMaxAMShare(float maxAMShare){
+    this.maxAMShare = maxAMShare;
-    if (!Resources.fitsIn(getResourceUsage(),
-        scheduler.getAllocationConfiguration().getMaxResources(getName()))
+    if (!Resources.fitsIn(getResourceUsage(), maxShare)
