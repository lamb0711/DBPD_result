Merge remote-tracking branch 'origin/trunk' into HDFS-6584

+import org.apache.hadoop.classification.InterfaceAudience.Private;
-import org.apache.hadoop.util.ExitUtil;
+import org.apache.hadoop.yarn.util.Clock;
+import org.apache.hadoop.yarn.util.SystemClock;
+import com.google.common.annotations.VisibleForTesting;
+
+  private final long attemptFailuresValidityInterval;
+
+  private Clock systemClock;
+
+  private boolean isNumAttemptsBeyondThreshold = false;
+
+    this.systemClock = new SystemClock();
+
-    this.startTime = System.currentTimeMillis();
+    this.startTime = this.systemClock.getTime();
+    this.attemptFailuresValidityInterval =
+        submissionContext.getAttemptFailuresValidityInterval();
+
-    } else if (getNumFailedAppAttempts() >= this.maxAppAttempts) {
+    } else if (this.isNumAttemptsBeyondThreshold) {
-    this.storedFinishTime = System.currentTimeMillis();
+    this.storedFinishTime = this.systemClock.getTime();
-        app.finishTime = System.currentTimeMillis();
+        app.finishTime = app.systemClock.getTime();
+    long endTime = this.systemClock.getTime();
-        completedAttempts++;
+        if (this.attemptFailuresValidityInterval <= 0
+            || (attempt.getFinishTime() > endTime
+                - this.attemptFailuresValidityInterval)) {
+          completedAttempts++;
+        }
+      int numberOfFailure = app.getNumFailedAppAttempts();
-          && app.getNumFailedAppAttempts() < app.maxAppAttempts) {
+          && numberOfFailure < app.maxAppAttempts) {
+        if (numberOfFailure >= app.maxAppAttempts) {
+          app.isNumAttemptsBeyondThreshold = true;
+        }
+
+  @Private
+  @VisibleForTesting
+  public void setSystemClock(Clock clock) {
+    this.systemClock = clock;
+  }
