HDFS-13110: [SPS]: Reduce the number of APIs in NamenodeProtocol used by external satisfier. Contributed by Rakesh R.

+import java.io.FileNotFoundException;
+import org.apache.hadoop.hdfs.protocol.HdfsLocatedFileStatus;
-public class ExternalSPSContext implements Context {
+public class ExternalSPSContext implements Context<String> {
-  private SPSService service;
+  private SPSService<String> service;
-  public ExternalSPSContext(SPSService service, NameNodeConnector nnc) {
+  public ExternalSPSContext(SPSService<String> service, NameNodeConnector nnc) {
-  public boolean isFileExist(long inodeId) {
-    String filePath = null;
+  public boolean isFileExist(String filePath) {
-      filePath = getFilePath(inodeId);
-      LOG.warn("Exception while getting file is for the given path:{} "
-          + "and fileId:{}", filePath, inodeId, e);
+      LOG.warn("Exception while getting file is for the given path:{}",
+          filePath, e);
-  public void removeSPSHint(long inodeId) throws IOException {
-    nnc.getDistributedFileSystem().removeXAttr(new Path(getFilePath(inodeId)),
+  public void removeSPSHint(String inodeId) throws IOException {
+    nnc.getDistributedFileSystem().removeXAttr(new Path(inodeId),
-  public HdfsFileStatus getFileInfo(long inodeID) throws IOException {
-    return nnc.getDistributedFileSystem().getClient()
-        .getLocatedFileInfo(getFilePath(inodeID), false);
+  public HdfsFileStatus getFileInfo(String path) throws IOException {
+    HdfsLocatedFileStatus fileInfo = null;
+    try {
+      fileInfo = nnc.getDistributedFileSystem().getClient()
+          .getLocatedFileInfo(path, false);
+    } catch (FileNotFoundException e) {
+      LOG.debug("Path:{} doesn't exists!", path, e);
+    }
+    return fileInfo;
-  public boolean hasLowRedundancyBlocks(long inodeID) {
-    try {
-      return nnc.getNNProtocolConnection().hasLowRedundancyBlocks(inodeID);
-    } catch (IOException e) {
-      LOG.warn("Failed to check whether fileid:{} has low redundancy blocks.",
-          inodeID, e);
-      return false;
-    }
-  }
-
-  @Override
-  public Long getNextSPSPathId() {
+  public String getNextSPSPath() {
-      return nnc.getNNProtocolConnection().getNextSPSPathId();
+      return nnc.getNNProtocolConnection().getNextSPSPath();
-  public void removeSPSPathId(long pathId) {
+  public void removeSPSPathId(String pathId) {
-
-  @Override
-  public String getFilePath(Long inodeId) {
-    try {
-      return nnc.getNNProtocolConnection().getFilePath(inodeId);
-    } catch (IOException e) {
-      LOG.warn("Exception while getting file path id:{} from Namenode.",
-          inodeId, e);
-      return null;
-    }
-  }
