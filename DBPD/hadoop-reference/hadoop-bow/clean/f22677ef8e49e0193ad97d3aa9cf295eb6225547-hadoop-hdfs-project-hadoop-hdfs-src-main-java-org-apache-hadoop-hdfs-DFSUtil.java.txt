HDFS-3036. Remove unused method DFSUtil#isDefaultNamenodeAddress. Contributed by Aaron T. Myers.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1295961 13f79535-47bb-0310-9956-ffa450edef68

-   * If null is returned, client should try {@link #isDefaultNamenodeAddress}
-   * to check pre-Federated configurations.
+   * 
-      // client should try {@link isDefaultNamenodeAddress} instead
-    // client should try {@link isDefaultNamenodeAddress} instead
-   * Given the InetSocketAddress for any configured communication with a 
-   * namenode, this method determines whether it is the configured
-   * communication channel for the "default" namenode.
-   * It does a reverse lookup on the list of default communication parameters
-   * to see if the given address matches any of them.
-   * Since the process of resolving URIs to Addresses is slightly expensive,
-   * this utility method should not be used in performance-critical routines.
-   * 
-   * @param conf - configuration
-   * @param address - InetSocketAddress for configured communication with NN.
-   *     Configured addresses are typically given as URIs, but we may have to
-   *     compare against a URI typed in by a human, or the server name may be
-   *     aliased, so we compare unambiguous InetSocketAddresses instead of just
-   *     comparing URI substrings.
-   * @param keys - list of configured communication parameters that should
-   *     be checked for matches.  For example, to compare against RPC addresses,
-   *     provide the list DFS_NAMENODE_SERVICE_RPC_ADDRESS_KEY,
-   *     DFS_NAMENODE_RPC_ADDRESS_KEY
-   * @return - boolean confirmation if matched generic parameter
-   */
-  public static boolean isDefaultNamenodeAddress(Configuration conf,
-      InetSocketAddress address, String... keys) {
-    for (String key : keys) {
-      String candidateAddress = conf.get(key);
-      if (candidateAddress != null
-          && address.equals(NetUtils.createSocketAddr(candidateAddress)))
-        return true;
-    }
-    return false;
-  }
-  
-  /**
