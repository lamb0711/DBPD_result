YARN-7275. NM Statestore cleanup for Container updates. (Kartheek Muthyala via asuresh)

-import org.apache.hadoop.yarn.server.nodemanager.executor.ContainerSignalContext;
+import org.apache.hadoop.yarn.server.nodemanager.executor.ContainerReacquisitionContext;
+    dispatcher.getEventHandler().handle(new ContainerEvent(containerId,
+        ContainerEventType.RECOVER_PAUSED_CONTAINER));
-        exec.signalContainer(new ContainerSignalContext.Builder()
-            .setContainer(container)
-            .setUser(container.getUser())
-            .setSignal(ContainerExecutor.Signal.KILL)
-            .build());
+        retCode = exec.reacquireContainer(
+            new ContainerReacquisitionContext.Builder()
+                .setContainer(container)
+                .setUser(container.getUser())
+                .setContainerId(containerId)
+                .build());
-    } catch (InterruptedIOException e) {
+    } catch (InterruptedException | InterruptedIOException e) {
-    LOG.warn("Recovered container exited with a non-zero exit code "
-        + retCode);
-    this.dispatcher.getEventHandler().handle(new ContainerExitEvent(
-        containerId,
-        ContainerEventType.CONTAINER_EXITED_WITH_FAILURE, retCode,
-        "Container exited with a non-zero exit code " + retCode));
+    if (retCode != 0) {
+      LOG.warn("Recovered container exited with a non-zero exit code "
+          + retCode);
+      this.dispatcher.getEventHandler().handle(new ContainerExitEvent(
+          containerId,
+          ContainerEventType.CONTAINER_EXITED_WITH_FAILURE, retCode,
+          "Container exited with a non-zero exit code " + retCode));
+      return retCode;
+    }
-    return retCode;
+    LOG.info("Recovered container " + containerId + " succeeded");
+    dispatcher.getEventHandler().handle(
+        new ContainerEvent(containerId,
+            ContainerEventType.CONTAINER_EXITED_WITH_SUCCESS));
+    return 0;
