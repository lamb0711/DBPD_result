HADOOP-10075. Update jetty dependency to version 9 (rkanter)

-import org.apache.hadoop.crypto.key.kms.KMSRESTConstants;
+import org.apache.hadoop.http.JettyUtils;
-import org.apache.hadoop.security.ssl.SslSelectChannelConnectorSecure;
-import org.mortbay.jetty.Connector;
-import org.mortbay.jetty.Server;
-import org.mortbay.jetty.security.SslSelectChannelConnector;
-import org.mortbay.jetty.webapp.WebAppContext;
+import org.eclipse.jetty.http.HttpVersion;
+import org.eclipse.jetty.server.ConnectionFactory;
+import org.eclipse.jetty.server.HttpConfiguration;
+import org.eclipse.jetty.server.HttpConnectionFactory;
+import org.eclipse.jetty.server.SecureRequestCustomizer;
+import org.eclipse.jetty.server.Server;
+import org.eclipse.jetty.server.ServerConnector;
+import org.eclipse.jetty.server.SslConnectionFactory;
+import org.eclipse.jetty.util.ssl.SslContextFactory;
+import org.eclipse.jetty.webapp.WebAppContext;
-import java.net.InetAddress;
-import java.net.ServerSocket;
-import java.net.URI;
-import java.net.URISyntaxException;
-      Server server = new Server(inPort);
-      if (!ssl) {
-        server.getConnectors()[0].setHost(host);
-      } else {
-        SslSelectChannelConnector c = new SslSelectChannelConnectorSecure();
-        c.setHost(host);
-        c.setNeedClientAuth(false);
-        c.setKeystore(keyStore);
-        c.setKeystoreType("jks");
-        c.setKeyPassword(password);
-        server.setConnectors(new Connector[]{c});
+      Server server = new Server();
+      ServerConnector conn = new ServerConnector(server);
+      HttpConfiguration httpConfig = new HttpConfiguration();
+      httpConfig.setRequestHeaderSize(JettyUtils.HEADER_SIZE);
+      httpConfig.setResponseHeaderSize(JettyUtils.HEADER_SIZE);
+      httpConfig.setSecureScheme("https");
+      httpConfig.addCustomizer(new SecureRequestCustomizer());
+      ConnectionFactory connFactory = new HttpConnectionFactory(httpConfig);
+      conn.addConnectionFactory(connFactory);
+      conn.setHost(host);
+      conn.setPort(inPort);
+      if (ssl) {
+        SslContextFactory sslContextFactory = new SslContextFactory();
+        sslContextFactory.setNeedClientAuth(false);
+        sslContextFactory.setKeyStorePath(keyStore);
+        sslContextFactory.setKeyStoreType("jks");
+        sslContextFactory.setKeyStorePassword(password);
+        conn.addFirstConnectionFactory(
+            new SslConnectionFactory(sslContextFactory,
+            HttpVersion.HTTP_1_1.asString()));
+      server.addConnector(conn);
-    boolean ssl = server.getConnectors()[0].getClass()
-        == SslSelectChannelConnectorSecure.class;
+    boolean ssl = server.getConnectors()[0]
+        .getConnectionFactory(SslConnectionFactory.class) != null;
-          server.getConnectors()[0].getHost() + ":" +
-          server.getConnectors()[0].getLocalPort());
+          ((ServerConnector)server.getConnectors()[0]).getHost() + ":"
+          + ((ServerConnector)server.getConnectors()[0]).getLocalPort());
-    jetty.addHandler(context);
+    jetty.setHandler(context);
