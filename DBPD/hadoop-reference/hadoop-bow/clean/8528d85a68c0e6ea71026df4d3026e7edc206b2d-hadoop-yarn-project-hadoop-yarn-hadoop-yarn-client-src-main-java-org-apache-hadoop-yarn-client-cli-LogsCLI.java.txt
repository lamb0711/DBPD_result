YARN-6099. Improve webservice to list aggregated log files. Contributed by Xuan Gong.

+import org.apache.hadoop.yarn.logaggregation.PerContainerLogFileInfo;
-  private List<PerLogFileInfo> getContainerLogFiles(Configuration conf,
-      String containerIdStr, String nodeHttpAddress) throws IOException {
-    List<PerLogFileInfo> logFileInfos = new ArrayList<>();
+  private List<PerContainerLogFileInfo> getContainerLogFiles(
+      Configuration conf, String containerIdStr, String nodeHttpAddress)
+      throws IOException {
+    List<PerContainerLogFileInfo> logFileInfos = new ArrayList<>();
-          JSONArray array = json.getJSONArray("containerLogInfo");
+          JSONArray array = json.getJSONArray("containerLogsInfo");
-            String fileName = array.getJSONObject(i).getString("fileName");
-            String fileSize = array.getJSONObject(i).getString("fileSize");
-            logFileInfos.add(new PerLogFileInfo(fileName, fileSize));
+            JSONObject log = array.getJSONObject(i);
+            Object ob = log.get("containerLogInfo");
+            if (ob instanceof JSONArray) {
+              JSONArray obArray = (JSONArray)ob;
+              for (int j = 0; j < obArray.length(); j++) {
+                logFileInfos.add(generatePerContainerLogFileInfoFromJSON(
+                    obArray.getJSONObject(j)));
+              }
+            } else if (ob instanceof JSONObject) {
+              logFileInfos.add(generatePerContainerLogFileInfoFromJSON(
+                  (JSONObject)ob));
+            }
+  private PerContainerLogFileInfo generatePerContainerLogFileInfoFromJSON(
+      JSONObject meta) throws JSONException {
+    String fileName = meta.has("fileName") ?
+        meta.getString("fileName") : "N/A";
+    String fileSize = meta.has("fileSize") ?
+        meta.getString("fileSize") : "N/A";
+    String lastModificationTime = meta.has("lastModifiedTime") ?
+        meta.getString("lastModifiedTime") : "N/A";
+    return new PerContainerLogFileInfo(fileName, fileSize,
+        lastModificationTime);
+  }
+
+
-          "LogType", "LogLength");
+          "LogFile", "LogLength", "LastModificationTime");
-      List<PerLogFileInfo> infos = getContainerLogFiles(
+      List<PerContainerLogFileInfo> infos = getContainerLogFiles(
-      for (PerLogFileInfo info : infos) {
+      for (PerContainerLogFileInfo info : infos) {
-            info.getFileName(), info.getFileLength());
+            info.getFileName(), info.getFileSize(),
+            info.getLastModifiedTime());
-  private static class PerLogFileInfo {
-    private String fileName;
-    private String fileLength;
-    public PerLogFileInfo(String fileName, String fileLength) {
-      setFileName(fileName);
-      setFileLength(fileLength);
-    }
-
-    public String getFileName() {
-      return fileName;
-    }
-
-    public void setFileName(String fileName) {
-      this.fileName = fileName;
-    }
-
-    public String getFileLength() {
-      return fileLength;
-    }
-
-    public void setFileLength(String fileLength) {
-      this.fileLength = fileLength;
-    }
-  }
-
-    List<PerLogFileInfo> allLogFileInfos=
+    List<PerContainerLogFileInfo> allLogFileInfos=
-    for (PerLogFileInfo fileInfo : allLogFileInfos) {
+    for (PerContainerLogFileInfo fileInfo : allLogFileInfos) {
