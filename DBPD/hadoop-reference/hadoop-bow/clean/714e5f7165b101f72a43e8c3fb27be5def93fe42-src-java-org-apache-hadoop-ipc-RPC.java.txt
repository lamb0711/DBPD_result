HADOOP-6889. Make RPC to have an option to timeout. Contributed by Hairong Kuang.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@982681 13f79535-47bb-0310-9956-ffa450edef68

-      Class protocol,
+      Class<?> protocol,
-   * @param timeout time in milliseconds before giving up
+   * @param connTimeout time in milliseconds before giving up
-  public static Object waitForProxy(Class protocol, long clientVersion,
+  public static Object waitForProxy(Class<?> protocol, long clientVersion,
-                             long timeout) throws IOException { 
+                             long connTimeout) throws IOException { 
+    return waitForProxy(protocol, clientVersion, addr, conf, 0, connTimeout);
+  }
+    /**
+     * Get a proxy connection to a remote server
+     * @param protocol protocol class
+     * @param clientVersion client version
+     * @param addr remote address
+     * @param conf configuration to use
+     * @param rpcTimeout timeout for each RPC
+     * @param timeout time in milliseconds before giving up
+     * @return the proxy
+     * @throws IOException if the far end through a RemoteException
+     */
+    public static Object waitForProxy(Class<?> protocol, long clientVersion,
+                               InetSocketAddress addr, Configuration conf,
+                               int rpcTimeout,
+                               long timeout) throws IOException { 
-        return getProxy(protocol, clientVersion, addr, conf);
+        return getProxy(protocol, clientVersion, addr, 
+            UserGroupInformation.getCurrentUser(), conf, NetUtils
+            .getDefaultSocketFactory(conf), rpcTimeout);
-  public static Object getProxy(Class protocol, long clientVersion,
+  public static Object getProxy(Class<?> protocol, long clientVersion,
-  public static Object getProxy(Class protocol, long clientVersion,
+  public static Object getProxy(Class<?> protocol, long clientVersion,
-                                SocketFactory factory) throws IOException {    
+                                SocketFactory factory) throws IOException {
+    return getProxy(protocol, clientVersion, addr, ticket, conf, factory, 0);
+  }
+  
+  /**
+   * Construct a client-side proxy that implements the named protocol,
+   * talking to a server at the named address.
+   * 
+   * @param protocol protocol
+   * @param clientVersion client's version
+   * @param addr server address
+   * @param ticket security ticket
+   * @param conf configuration
+   * @param factory socket factory
+   * @param rpcTimeout max time for each rpc; 0 means no timeout
+   * @return the proxy
+   * @throws IOException if any error occurs
+   */
+  public static Object getProxy(Class<?> protocol, long clientVersion,
+                                InetSocketAddress addr,
+                                UserGroupInformation ticket,
+                                Configuration conf,
+                                SocketFactory factory,
+                                int rpcTimeout) throws IOException {    
-    return getProtocolEngine(protocol,conf)
-      .getProxy(protocol, clientVersion, addr, ticket, conf, factory);
+    return getProtocolEngine(protocol,conf).getProxy(protocol,
+        clientVersion, addr, ticket, conf, factory, rpcTimeout);
-  public static Object getProxy(Class protocol, long clientVersion,
+  public static Object getProxy(Class<?> protocol, long clientVersion,
