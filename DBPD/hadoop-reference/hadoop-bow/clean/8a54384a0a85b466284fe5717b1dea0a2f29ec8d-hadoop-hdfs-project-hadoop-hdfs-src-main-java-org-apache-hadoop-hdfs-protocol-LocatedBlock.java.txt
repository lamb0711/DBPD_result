HDFS-7761. cleanup unnecssary code logic in LocatedBlock. (yliu)

-  private final boolean hasStorageIDs;
-  private final boolean hasStorageTypes;
-        storage.setDependentHostNames(di.getDependentHostNames());
-        storage.setLevel(di.getLevel());
-        storage.setParent(di.getParent());
-    this.hasStorageIDs = storageIDs != null;
-    this.hasStorageTypes = storageTypes != null;
-   * {@link org.apache.hadoop.hdfs.protocol.LocatedBlock#invalidateCachedStorageInfo}
-   * to invalidate the cached Storage ID/Type arrays.
+   * {@link org.apache.hadoop.hdfs.protocol.LocatedBlock#updateCachedStorageInfo}
+   * to update the cached Storage ID/Type arrays.
-    if(!hasStorageTypes) {
-      return null;
-    }
-    if(storageTypes != null) {
-      return storageTypes;
-    }
-    storageTypes = new StorageType[locs.length];
-    for(int i = 0; i < locs.length; i++) {
-      storageTypes[i] = locs[i].getStorageType();
-    }
-    if(!hasStorageIDs) {
-      return null;
-    }
-    if(storageIDs != null) {
-      return storageIDs;
-    }
-    storageIDs = new String[locs.length];
-    for(int i = 0; i < locs.length; i++) {
-      storageIDs[i] = locs[i].getStorageID();
-    }
-   * Invalidates the cached StorageID and StorageType information. Must be
+   * Updates the cached StorageID and StorageType information. Must be
-  public void invalidateCachedStorageInfo() {
-    storageIDs = null;
-    storageTypes = null;
+  public void updateCachedStorageInfo() {
+    if (storageIDs != null) {
+      for(int i = 0; i < locs.length; i++) {
+        storageIDs[i] = locs[i].getStorageID();
+      }
+    }
+    if (storageTypes != null) {
+      for(int i = 0; i < locs.length; i++) {
+        storageTypes[i] = locs[i].getStorageType();
+      }
+    }
