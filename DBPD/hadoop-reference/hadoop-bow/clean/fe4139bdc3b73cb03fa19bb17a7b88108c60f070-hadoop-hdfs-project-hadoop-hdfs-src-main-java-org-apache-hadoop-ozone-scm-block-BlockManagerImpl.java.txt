HDFS-11612. Ozone: Cleanup Checkstyle issues. Contributed by Shashikant Banerjee.

-    Map<String, BlockContainerInfo> containersByState = this.containers.get(state);
+    Map<String, BlockContainerInfo> containersByState =
+        this.containers.get(state);
-    for (String containerName: containersByState.keySet()) {
+    for (String containerName : containersByState.keySet()) {
-          LOG.debug("Container {} allocated by block service" +
-              "can't be found in SCM", containerName);
+          LOG.debug("Container {} allocated by block service"
+              + "can't be found in SCM", containerName);
-   }
+  }
-      throw new SCMException("Unsupported block size",
-          INVALID_BLOCK_SIZE);
+      throw new SCMException("Unsupported block size", INVALID_BLOCK_SIZE);
-        candidates = filterContainers(OzoneProtos.LifeCycleState.ALLOCATED,
-            size);
+        candidates =
+            filterContainers(OzoneProtos.LifeCycleState.ALLOCATED, size);
-          throw new SCMException("Fail to find any container to allocate block "
-              + "of size " + size + ".", FAILED_TO_FIND_CONTAINER_WITH_SPACE);
+          throw new SCMException(
+              "Fail to find any container to allocate block " + "of size "
+                  + size + ".", FAILED_TO_FIND_CONTAINER_WITH_SPACE);
-      AllocatedBlock.Builder abb = new AllocatedBlock.Builder()
-          .setKey(blockKey).setPipeline(containerInfo.getPipeline())
+      AllocatedBlock.Builder abb = new AllocatedBlock.Builder().setKey(blockKey)
+          .setPipeline(containerInfo.getPipeline())
-        containerStore.put(DFSUtil.string2Bytes(containerName),
-            DFSUtil.string2Bytes(Long.toString(containerInfoUpdate.getAllocated())));
+        containerStore.put(DFSUtil.string2Bytes(containerName), DFSUtil
+            .string2Bytes(Long.toString(containerInfoUpdate.getAllocated())));
-          OzoneProtos.LifeCycleState newState =
-              containerManager.updateContainerState(containerName,
-              OzoneProtos.LifeCycleEvent.BEGIN_CREATE);
+          OzoneProtos.LifeCycleState newState = containerManager
+              .updateContainerState(containerName,
+                  OzoneProtos.LifeCycleEvent.BEGIN_CREATE);
-        throw new SCMException("Specified block key does not exist. key : " +
-            key, FAILED_TO_FIND_BLOCK);
+        throw new SCMException(
+            "Specified block key does not exist. key : " + key,
+            FAILED_TO_FIND_BLOCK);
-      ContainerInfo containerInfo = containerManager.getContainer(
-          containerName);
+      ContainerInfo containerInfo =
+          containerManager.getContainer(containerName);
-          LOG.debug("Container {} allocated by block service" +
-              "can't be found in SCM", containerName);
-          throw new SCMException("Unable to find container for the block",
-              SCMException.ResultCodes.FAILED_TO_FIND_CONTAINER);
+        LOG.debug(
+            "Container {} allocated by block service" + "can't be found in SCM",
+            containerName);
+        throw new SCMException("Unable to find container for the block",
+            SCMException.ResultCodes.FAILED_TO_FIND_CONTAINER);
