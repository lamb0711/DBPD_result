HDFS-3088. Move FSDatasetInterface inner classes to a package.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1301661 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.Closeable;
-import java.io.FilterInputStream;
-import java.io.OutputStream;
+import org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi;
+import org.apache.hadoop.hdfs.server.datanode.fsdataset.LengthInputStream;
+import org.apache.hadoop.hdfs.server.datanode.fsdataset.ReplicaInputStreams;
+import org.apache.hadoop.hdfs.server.datanode.fsdataset.ReplicaOutputStreams;
-import org.apache.hadoop.io.IOUtils;
-import org.apache.hadoop.util.DataChecksum;
-public interface FSDatasetInterface<V extends FSDatasetInterface.FSVolumeInterface>
+public interface FSDatasetInterface<V extends FsVolumeSpi>
-   * This is an interface for the underlying volume.
-   * @see org.apache.hadoop.hdfs.server.datanode.FSDataset.FSVolume
-   */
-  interface FSVolumeInterface {
-    /** @return a list of block pools. */
-    public String[] getBlockPoolList();
-
-    /** @return the available storage space in bytes. */
-    public long getAvailable() throws IOException;
-
-    /** @return the path to the volume */
-    public String getPath(String bpid) throws IOException;
-
-    /** @return the directory for the finalized blocks in the block pool. */
-    public File getFinalizedDir(String bpid) throws IOException;
-  }
-
-  /**
-      File diskMetaFile, FSVolumeInterface vol);
+      File diskMetaFile, FsVolumeSpi vol);
-   * This class provides the input stream and length of the metadata
-   * of a block
-   *
-   */
-  static class MetaDataInputStream extends FilterInputStream {
-    MetaDataInputStream(InputStream stream, long len) {
-      super(stream);
-      length = len;
-    }
-    private long length;
-    
-    public long getLength() {
-      return length;
-    }
-  }
-  
-  /**
-  public MetaDataInputStream getMetaDataInputStream(ExtendedBlock b
+  public LengthInputStream getMetaDataInputStream(ExtendedBlock b
-  public BlockInputStreams getTmpInputStreams(ExtendedBlock b, long blkoff,
+  public ReplicaInputStreams getTmpInputStreams(ExtendedBlock b, long blkoff,
-      * 
-      * This class contains the output streams for the data and checksum
-      * of a block
-      *
-      */
-     static class BlockWriteStreams {
-      OutputStream dataOut;
-      OutputStream checksumOut;
-      DataChecksum checksum;
-      
-      BlockWriteStreams(OutputStream dOut, OutputStream cOut,
-          DataChecksum checksum) {
-        dataOut = dOut;
-        checksumOut = cOut;
-        this.checksum = checksum;
-      }
-      
-      void close() {
-        IOUtils.closeStream(dataOut);
-        IOUtils.closeStream(checksumOut);
-      }
-      
-      DataChecksum getChecksum() {
-        return checksum;
-      }
-    }
-
-  /**
-   * This class contains the input streams for the data and checksum
-   * of a block
-   */
-  static class BlockInputStreams implements Closeable {
-    final InputStream dataIn;
-    final InputStream checksumIn;
-
-    BlockInputStreams(InputStream dataIn, InputStream checksumIn) {
-      this.dataIn = dataIn;
-      this.checksumIn = checksumIn;
-    }
-
-    @Override
-    public void close() {
-      IOUtils.closeStream(dataIn);
-      IOUtils.closeStream(checksumIn);
-    }
-  }
-    
-  /**
-  public void adjustCrcChannelPosition(ExtendedBlock b, BlockWriteStreams stream, 
+  public void adjustCrcChannelPosition(ExtendedBlock b, ReplicaOutputStreams stream, 
