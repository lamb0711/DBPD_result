YARN-727, MAPREDUCE-5325. ClientRMProtocol.getAllApplications should accept ApplicationType as a parameter. Contributed by Xuan Gong.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1501599 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashSet;
+import java.util.Set;
+import org.apache.commons.cli.Option;
+import com.google.common.annotations.VisibleForTesting;
+
+  private static final String APP_TYPE_CMD = "appTypes";
+
-    opts.addOption(LIST_CMD, false, "Lists all the Applications from RM.");
+    opts.addOption(LIST_CMD, false, "List applications from the RM. " +
+        "Supports optional use of --appTypes to filter applications " +
+        "based on application type.");
+    opts.addOption(HELP_CMD, false, "Displays help for all commands.");
+    Option appTypeOpt = new Option(APP_TYPE_CMD, true,
+        "Works with --list to filter applications based on their type.");
+    appTypeOpt.setValueSeparator(',');
+    appTypeOpt.setArgs(Option.UNLIMITED_VALUES);
+    appTypeOpt.setArgName("Comma-separated list of application types");
+    opts.addOption(appTypeOpt);
+    opts.getOption(KILL_CMD).setArgName("Application ID");
+    opts.getOption(STATUS_CMD).setArgName("Application ID");
-      listAllApplications();
+      Set<String> appTypes = new HashSet<String>();
+      if(cliParser.hasOption(APP_TYPE_CMD)) {
+        String[] types = cliParser.getOptionValues(APP_TYPE_CMD);
+        if (types != null) {
+          for (String type : types) {
+            if (!type.trim().isEmpty()) {
+              appTypes.add(type.trim());
+            }
+          }
+        }
+      }
+      listApplications(appTypes);
+    } else if (cliParser.hasOption(HELP_CMD)) {
+      printUsage(opts);
+      return 0;
-  private void printUsage(Options opts) {
+  @VisibleForTesting
+  void printUsage(Options opts) {
-   * Lists all the applications present in the Resource Manager
+   * Lists the applications matching the given application Types
+   * present in the Resource Manager
+   * @param appTypes
-  private void listAllApplications() throws YarnException, IOException {
+  private void listApplications(Set<String> appTypes)
+      throws YarnException, IOException {
-    List<ApplicationReport> appsReport = client.getApplicationList();
+    List<ApplicationReport> appsReport =
+        client.getApplications(appTypes);
