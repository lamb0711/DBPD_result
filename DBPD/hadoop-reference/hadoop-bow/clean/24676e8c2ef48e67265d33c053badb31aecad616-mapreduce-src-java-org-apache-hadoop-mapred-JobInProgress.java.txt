 MAPREDUCE-901. Efficient framework counters. Contributed by Luke Lu.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1157290 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.mapreduce.counters.LimitExceededException;
+    try {
+      throw new IOException("");
+    } catch (IOException ioe) {
+      LOG.info("getJC", ioe);
+    }
-    for (TaskInProgress tip : tips) {
-      counters.incrAllCounters(tip.getCounters());
+    try {
+      for (TaskInProgress tip : tips) {
+        counters.incrAllCounters(tip.getCounters());
+      }
+    } catch (LimitExceededException e) {
+      // too many user counters/groups, leaving existing counters intact.
+        if (canLaunchJobCleanupTask()) {
+          checkCountersLimitsOrFail();
+        }
+        if (canLaunchJobCleanupTask()) {
+          checkCountersLimitsOrFail();
+        }
+
+  /*
+   * add up the counters and fail the job if it exceeds the limits.
+   * Make sure we do not recalculate the counters after we fail the job.
+   * Currently this is taken care by terminateJob() since it does not
+   * calculate the counters.
+   */
+  private void checkCountersLimitsOrFail() {
+    Counters counters = getCounters();
+    if (counters.limits().violation() != null) {
+      jobtracker.failJob(this);
+    }
+  }
