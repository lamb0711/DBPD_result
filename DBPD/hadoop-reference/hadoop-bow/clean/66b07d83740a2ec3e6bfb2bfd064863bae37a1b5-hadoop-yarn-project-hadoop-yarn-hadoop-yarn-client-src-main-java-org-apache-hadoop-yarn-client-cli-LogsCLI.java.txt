YARN-4966. Improve yarn logs to fetch container logs without specifying nodeId. Contributed by Xuan Gong.

+    boolean appStateKnown = true;
+      appStateKnown = false;
-      if (nodeAddress != null && isApplicationFinished(appState)) {
+      if (nodeAddress != null && (!appStateKnown ||
+          isApplicationFinished(appState))) {
+      String nodeHttpAddress = null;
+      String nodeId = null;
-        String nodeHttpAddress =
+        nodeHttpAddress =
-        String nodeId = report.getAssignedNode().toString();
-        // If the application is not in the final state,
-        // we will provide the NodeHttpAddress and get the container logs
-        // by calling NodeManager webservice.
-        if (!isApplicationFinished(appState)) {
-          if (logFiles == null || logFiles.length == 0) {
-            logFiles = new String[] { "syslog" };
-          }
-          printContainerLogsFromRunningApplication(getConf(), appIdStr,
-            containerIdStr, nodeHttpAddress, nodeId, logFiles, logCliHelper,
-            appOwner);
-        } else {
+        nodeId = report.getAssignedNode().toString();
+      } catch (IOException | YarnException ex) {
+        if (!appStateKnown || isApplicationFinished(appState)) {
-          // If the application is in the final state, we will directly
-          // get the container logs from HDFS.
-          printContainerLogsForFinishedApplication(appIdStr, containerIdStr,
-            nodeId, requestedLogFiles, logCliHelper, appOwner);
+          return printContainerLogsForFinishedApplicationWithoutNodeId(
+              appIdStr, containerIdStr, requestedLogFiles, logCliHelper,
+              appOwner);
+        } else if (!isApplicationFinished(appState)) {
+          System.err.println("Unable to get logs for this container:"
+              + containerIdStr + "for the application:" + appId);
+          System.out.println("The application: " + appId + " is still running, "
+              + "and we can not get Container report for the container: "
+              + containerIdStr +". Please try later or after the application "
+              + "finishes.");
+          return -1;
-        return resultCode;
-      } catch (IOException | YarnException ex) {
-        System.err.println("Unable to get logs for this container:"
-            + containerIdStr + "for the application:" + appId);
-        if (!getConf().getBoolean(YarnConfiguration.APPLICATION_HISTORY_ENABLED,
-          YarnConfiguration.DEFAULT_APPLICATION_HISTORY_ENABLED)) {
-          System.out.println("Please enable the application history service. Or ");
-        }
-        System.out.println("Using "
-            + "yarn logs -applicationId <appId> -containerId <containerId> "
-            + "--nodeAddress <nodeHttpAddress> to get the container logs");
-        return -1;
+      // If the application is not in the final state,
+      // we will provide the NodeHttpAddress and get the container logs
+      // by calling NodeManager webservice.
+      if (!isApplicationFinished(appState)) {
+        if (logFiles == null || logFiles.length == 0) {
+          logFiles = new String[] {"syslog"};
+        }
+        printContainerLogsFromRunningApplication(getConf(), appIdStr,
+            containerIdStr, nodeHttpAddress, nodeId, logFiles, logCliHelper,
+            appOwner);
+      } else {
+        String[] requestedLogFiles = logFiles;
+        if(fetchAllLogFiles(logFiles)) {
+          requestedLogFiles = null;
+        }
+        // If the application is in the final state, we will directly
+        // get the container logs from HDFS.
+        printContainerLogsForFinishedApplication(appIdStr, containerIdStr,
+            nodeId, requestedLogFiles, logCliHelper, appOwner);
+      }
+      return resultCode;
-      appOwner, Arrays.asList(requestedLogFiles));
+        appOwner, Arrays.asList(requestedLogFiles), false);
+  private int printContainerLogsForFinishedApplicationWithoutNodeId(
+      String appId, String containerId, String[] logFiles,
+      LogCLIHelpers logCliHelper, String appOwner) throws IOException {
+    String containerString = "\n\nContainer: " + containerId;
+    System.out.println(containerString);
+    System.out.println(StringUtils.repeat("=", containerString.length()));
+    return logCliHelper.dumpAContainersLogsForALogTypeWithoutNodeId(appId,
+        containerId, appOwner, logFiles != null ?
+        Arrays.asList(logFiles) : null);
+  }
+
