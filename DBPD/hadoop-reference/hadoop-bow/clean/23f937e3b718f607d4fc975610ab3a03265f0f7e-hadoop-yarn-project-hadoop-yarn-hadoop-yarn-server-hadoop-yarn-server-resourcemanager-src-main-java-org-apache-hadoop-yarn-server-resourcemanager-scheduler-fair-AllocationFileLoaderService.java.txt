YARN-2575. Create separate ACLs for Reservation create/update/delete/list ops (Sean Po via asuresh)

+import org.apache.hadoop.yarn.api.records.ReservationACL;
+    Map<String, Map<ReservationACL, AccessControlList>> reservationAcls =
+            new HashMap<String, Map<ReservationACL, AccessControlList>>();
-          fairSharePreemptionThresholds, queueAcls, configuredQueues,
-          reservableQueues, nonPreemptableQueues);
+          fairSharePreemptionThresholds, queueAcls, reservationAcls,
+          configuredQueues, reservableQueues, nonPreemptableQueues);
-        newPlacementPolicy, configuredQueues, globalReservationQueueConfig,
-        reservableQueues, nonPreemptableQueues);
+        reservationAcls, newPlacementPolicy, configuredQueues,
+        globalReservationQueueConfig, reservableQueues, nonPreemptableQueues);
+      Map<String, Map<ReservationACL, AccessControlList>> resAcls,
+    Map<ReservationACL, AccessControlList> racls = new HashMap<>();
+      } else if ("aclAdministerReservations".equals(field.getTagName())) {
+        String text = ((Text)field.getFirstChild()).getData();
+        racls.put(ReservationACL.ADMINISTER_RESERVATIONS,
+                new AccessControlList(text));
+      } else if ("aclListReservations".equals(field.getTagName())) {
+        String text = ((Text)field.getFirstChild()).getData();
+        racls.put(ReservationACL.LIST_RESERVATIONS, new AccessControlList(
+                text));
+      } else if ("aclSubmitReservations".equals(field.getTagName())) {
+        String text = ((Text)field.getFirstChild()).getData();
+        racls.put(ReservationACL.SUBMIT_RESERVATIONS,
+                new AccessControlList(text));
-            queueAcls, configuredQueues, reservableQueues,
+            queueAcls, resAcls, configuredQueues, reservableQueues,
+    resAcls.put(queueName, racls);
