YARN-8680. YARN NM: Implement Iterable Abstraction for LocalResourceTracker state. Contributed by Pradeep Ambati

-import java.util.ArrayList;
-    List<LocalizedResourceProto> localizedResources =
-        new ArrayList<LocalizedResourceProto>();
-    Map<LocalResourceProto, Path> inProgressResources =
-        new HashMap<LocalResourceProto, Path>();
+    final private RecoveryIterator<LocalizedResourceProto>
+        completedResourcesIterator;
+    final private RecoveryIterator<Entry<LocalResourceProto, Path>>
+        startedResourcesIterator;
-    public List<LocalizedResourceProto> getLocalizedResources() {
-      return localizedResources;
+    LocalResourceTrackerState(RecoveryIterator<LocalizedResourceProto> crIt,
+        RecoveryIterator<Entry<LocalResourceProto, Path>> srIt) {
+      this.completedResourcesIterator = crIt;
+      this.startedResourcesIterator = srIt;
-    public Map<LocalResourceProto, Path> getInProgressResources() {
-      return inProgressResources;
+    public RecoveryIterator<LocalizedResourceProto>
+        getCompletedResourcesIterator() {
+      return completedResourcesIterator;
-    public boolean isEmpty() {
-      return localizedResources.isEmpty() && inProgressResources.isEmpty();
+    public RecoveryIterator<Entry<LocalResourceProto, Path>>
+        getStartedResourcesIterator() {
+      return startedResourcesIterator;
-        new LocalResourceTrackerState();
+        new LocalResourceTrackerState(null, null);
-        new LocalResourceTrackerState();
+        new LocalResourceTrackerState(null, null);
