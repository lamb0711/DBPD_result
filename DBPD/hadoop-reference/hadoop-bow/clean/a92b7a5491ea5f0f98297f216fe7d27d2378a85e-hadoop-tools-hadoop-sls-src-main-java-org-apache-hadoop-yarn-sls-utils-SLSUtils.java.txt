YARN-9694. UI always show default-rack for all the nodes while running SLS.

+import java.nio.charset.StandardCharsets;
+import java.nio.file.Files;
+import java.nio.file.Paths;
+import java.nio.file.StandardOpenOption;
+import java.util.ArrayList;
+
+  /**
+   * Generates a node to rack mapping file based on node details.
+   * This file is then being used by TableMapping to resolve rack names.
+   * The format required by TableMapping is a two column text file
+   * where first column specifies node name
+   * and second column specifies rack name.
+   * @param nodeDetails Set of node details.
+   * @param filePath File path where to write table mapping.
+   * @throws IOException
+   */
+  public static void generateNodeTableMapping(Set<NodeDetails> nodeDetails,
+      String filePath) throws IOException {
+    List<String> entries = new ArrayList<>();
+    for (NodeDetails nodeDetail : nodeDetails) {
+      if (nodeDetail.getHostname().contains("/")) {
+        String hostname = nodeDetail.getHostname();
+        int lIndex = hostname.lastIndexOf("/");
+        String node = hostname.substring(lIndex + 1);
+        String rack = hostname.substring(0, lIndex);
+        entries.add(node + " " + rack);
+      }
+    }
+    Files.write(Paths.get(filePath),
+        entries,
+        StandardCharsets.UTF_8,
+        StandardOpenOption.CREATE);
+  }
