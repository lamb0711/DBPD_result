HDFS-5618. NameNode: persist ACLs in fsimage. Contributed by Haohui Mai.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1553221 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.protocol.proto.AclProtos.AclFsImageProto;
+import org.apache.hadoop.hdfs.protocolPB.PBHelper;
+ *
- *     fsPermission: short, PermissionStatus
+ *     fsPermission: short, PermissionStatus,
+ *     AclEntries {
+ *       size: int,
+ *       protobuf encoding of {@link AclFsImageProto}
+ *     }(when {@link Feature#EXTENDED_ACL} is supported),
- *     fsPermission: short, PermissionStatus
- *   } for INodeFile
- * }
+ *     fsPermission: short, PermissionStatus,
+ *     AclEntries {
+ *       size: int,
+ *       protobuf encoding of {@link AclFsImageProto}
+ *     }(when {@link Feature#EXTENDED_ACL} is supported),
+ *   } for INodeFile,
-          return fileDiffs == null ? file : new INodeFile(file, fileDiffs);
-      } else {
-          return fileDiffs == null ? file : new INodeFile(file, fileDiffs);
+
+      AclFeature aclFeature = loadAclFeature(in, imgVersion);
+      if (aclFeature != null) {
+        file.addAclFeature(aclFeature);
+      }
+
+      return fileDiffs == null ? file : new INodeFile(file, fileDiffs);
+
+
+      AclFeature aclFeature = loadAclFeature(in, imgVersion);
+      if (aclFeature != null) {
+        dir.addAclFeature(aclFeature);
+      }
+
+    private AclFeature loadAclFeature(DataInput in, final int imgVersion)
+        throws IOException {
+      AclFeature aclFeature = null;
+      if (LayoutVersion.supports(Feature.EXTENDED_ACL, imgVersion)) {
+        AclFsImageProto p = AclFsImageProto
+            .parseDelimitedFrom((DataInputStream) in);
+        aclFeature = new AclFeature();
+        aclFeature.setEntries(PBHelper.convertAclEntry(p.getEntriesList()));
+      }
+      return aclFeature;
+    }
+
