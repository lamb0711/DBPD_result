YARN-735. Make ApplicationAttemptId, ContainerId and NodeId immutable. Contributed by Jian He.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488439 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.yarn.proto.YarnProtos.ApplicationAttemptIdProtoOrBuilder;
+import com.google.common.base.Preconditions;
+
-  ApplicationAttemptIdProto proto = ApplicationAttemptIdProto
-      .getDefaultInstance();
+  ApplicationAttemptIdProto proto = null;
-  boolean viaProto = false;
-  
-    viaProto = true;
+    this.applicationId = convertFromProtoFormat(proto.getApplicationId());
-  public synchronized ApplicationAttemptIdProto getProto() {
-    mergeLocalToProto();
-    proto = viaProto ? proto : builder.build();
-    viaProto = true;
+  public ApplicationAttemptIdProto getProto() {
-  private synchronized void mergeLocalToBuilder() {
-    if (this.applicationId != null
-        && !((ApplicationIdPBImpl) applicationId).getProto().equals(
-            builder.getApplicationId())) {
-      builder.setApplicationId(convertToProtoFormat(this.applicationId));
-    }
-  }
-
-  private synchronized void mergeLocalToProto() {
-    if (viaProto) 
-      maybeInitBuilder();
-    mergeLocalToBuilder();
-    proto = builder.build();
-    viaProto = true;
-  }
-
-  private synchronized void maybeInitBuilder() {
-    if (viaProto || builder == null) {
-      builder = ApplicationAttemptIdProto.newBuilder(proto);
-    }
-    viaProto = false;
-  }
-    
-  
-  public synchronized int getAttemptId() {
-    ApplicationAttemptIdProtoOrBuilder p = viaProto ? proto : builder;
-    return (p.getAttemptId());
+  public int getAttemptId() {
+    Preconditions.checkNotNull(proto);
+    return proto.getAttemptId();
-  public synchronized void setAttemptId(int attemptId) {
-    maybeInitBuilder();
-    builder.setAttemptId((attemptId));
+  protected void setAttemptId(int attemptId) {
+    Preconditions.checkNotNull(builder);
+    builder.setAttemptId(attemptId);
+
-  public synchronized ApplicationId getApplicationId() {
-    ApplicationAttemptIdProtoOrBuilder p = viaProto ? proto : builder;
-    if (this.applicationId != null) {
-      return this.applicationId;
-    }
-    if (!p.hasApplicationId()) {
-      return null;
-    }
-    this.applicationId = convertFromProtoFormat(p.getApplicationId());
+  public ApplicationId getApplicationId() {
-  public synchronized void setApplicationId(ApplicationId appId) {
-    maybeInitBuilder();
-    if (appId == null) 
-      builder.clearApplicationId();
+  public void setApplicationId(ApplicationId appId) {
+    if (appId != null) {
+      Preconditions.checkNotNull(builder);
+      builder.setApplicationId(convertToProtoFormat(appId));
+    }
+
+  @Override
+  protected void build() {
+    proto = builder.build();
+    builder = null;
+  }
