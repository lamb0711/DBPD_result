YARN-8071. Add ability to specify nodemanager environment variables individually. Contributed by Jim Brennan

-import java.util.ArrayList;
+import java.util.HashSet;
+import java.util.Set;
-   * @param classPathSeparator String that separates the definitions
-   * @return ArrayList of environment variable names
+   * @return Set of environment variable names
-  public static ArrayList<String> getEnvVarsFromInputString(String envString,
-      String classPathSeparator) {
-    ArrayList<String> envList = new ArrayList<>();
+  private static Set<String> getEnvVarsFromInputString(String envString) {
+    Set<String> envSet = new HashSet<>();
-        envList.add(envVar);
+        envSet.add(envVar);
-    return envList;
+    return envSet;
+  }
+
+  /**
+   * Return the list of environment variable names specified in the
+   * given property or default string and those specified individually
+   * with the propname.VARNAME syntax (e.g., mapreduce.map.env.VARNAME=value).
+   * @param propName the name of the property
+   * @param defaultPropValue the default value for propName
+   * @param conf configuration containing properties
+   * @return Set of environment variable names
+   */
+  public static Set<String> getEnvVarsFromInputProperty(
+      String propName, String defaultPropValue, Configuration conf) {
+    String envString = conf.get(propName, defaultPropValue);
+    Set<String> varSet = getEnvVarsFromInputString(envString);
+    Map<String, String> propMap = conf.getPropsWithPrefix(propName + ".");
+    varSet.addAll(propMap.keySet());
+    return varSet;
