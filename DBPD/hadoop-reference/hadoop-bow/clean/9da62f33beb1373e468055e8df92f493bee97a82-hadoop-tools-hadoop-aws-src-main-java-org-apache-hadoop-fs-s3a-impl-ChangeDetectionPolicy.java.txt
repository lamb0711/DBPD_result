Merge branch 'trunk' into HDDS-1535
+import com.amazonaws.services.s3.model.CopyObjectRequest;
+import com.amazonaws.services.s3.model.GetObjectMetadataRequest;
+import com.amazonaws.services.s3.transfer.model.CopyResult;
+import org.apache.hadoop.fs.s3a.S3ObjectAttributes;
-  public static final String CHANGE_DETECTED = "change detected";
+  public static final String CHANGE_DETECTED = "change detected  on client";
+   * Like {{@link #getRevisionId(ObjectMetadata, String)}}, but retrieves the
+   * revision identifier from {@link S3ObjectAttributes}.
+   *
+   * @param s3Attributes the object attributes
+   * @return the revisionId string as interpreted by this policy, or potentially
+   * null if the attribute is unavailable (such as when the policy says to use
+   * versionId but object versioning is not enabled for the bucket).
+   */
+  public abstract String getRevisionId(S3ObjectAttributes s3Attributes);
+
+  /**
+   * Like {{@link #getRevisionId(ObjectMetadata, String)}}, but retrieves the
+   * revision identifier from {@link CopyResult}.
+   *
+   * @param copyResult the copy result
+   * @return the revisionId string as interpreted by this policy, or potentially
+   * null if the attribute is unavailable (such as when the policy says to use
+   * versionId but object versioning is not enabled for the bucket).
+   */
+  public abstract String getRevisionId(CopyResult copyResult);
+
+  /**
+   * Applies the given {@link #getRevisionId(ObjectMetadata, String) revisionId}
+   * as a server-side qualification on the {@code CopyObjectRequest}.
+   *
+   * @param request the request
+   * @param revisionId the revision id
+   */
+  public abstract void applyRevisionConstraint(CopyObjectRequest request,
+      String revisionId);
+
+  /**
+   * Applies the given {@link #getRevisionId(ObjectMetadata, String) revisionId}
+   * as a server-side qualification on the {@code GetObjectMetadataRequest}.
+   *
+   * @param request the request
+   * @param revisionId the revision id
+   */
+  public abstract void applyRevisionConstraint(GetObjectMetadataRequest request,
+      String revisionId);
+
+  /**
+    String positionText = position >= 0 ? (" at " + position) : "";
-            String.format("%s change detected on %s %s at %d. Expected %s got %s",
-                getSource(), operation, uri, position, revisionId,
+            String.format(
+                "%s change detected on %s %s%s. Expected %s got %s",
+                getSource(), operation, uri, positionText, revisionId,
-      // mode == Client (or Server, but really won't be called for Server)
+      // mode == Client or Server; will trigger on version failures
+      // of getObjectMetadata even on server.
-                      + " while reading at position %s."
+                      + " during %s%s."
-              getSource(), position, revisionId, newRevisionId)));
+              getSource(), operation, positionText, revisionId, newRevisionId)));
+    public String getRevisionId(S3ObjectAttributes s3Attributes) {
+      return s3Attributes.getETag();
+    }
+
+    @Override
+    public String getRevisionId(CopyResult copyResult) {
+      return copyResult.getETag();
+    }
+
+    @Override
-      LOG.debug("Restricting request to etag {}", revisionId);
-      request.withMatchingETagConstraint(revisionId);
+      if (revisionId != null) {
+        LOG.debug("Restricting get request to etag {}", revisionId);
+        request.withMatchingETagConstraint(revisionId);
+      }
+    }
+
+    @Override
+    public void applyRevisionConstraint(CopyObjectRequest request,
+        String revisionId) {
+      if (revisionId != null) {
+        LOG.debug("Restricting copy request to etag {}", revisionId);
+        request.withMatchingETagConstraint(revisionId);
+      }
+    }
+
+    @Override
+    public void applyRevisionConstraint(GetObjectMetadataRequest request,
+        String revisionId) {
+      // GetObjectMetadataRequest doesn't support eTag qualification
+    public String getRevisionId(S3ObjectAttributes s3Attributes) {
+      return s3Attributes.getVersionId();
+    }
+
+    @Override
+    public String getRevisionId(CopyResult copyResult) {
+      return copyResult.getVersionId();
+    }
+
+    @Override
-      LOG.debug("Restricting request to version {}", revisionId);
-      request.withVersionId(revisionId);
+      if (revisionId != null) {
+        LOG.debug("Restricting get request to version {}", revisionId);
+        request.withVersionId(revisionId);
+      }
+    }
+
+    @Override
+    public void applyRevisionConstraint(CopyObjectRequest request,
+        String revisionId) {
+      if (revisionId != null) {
+        LOG.debug("Restricting copy request to version {}", revisionId);
+        request.withSourceVersionId(revisionId);
+      }
+    }
+
+    @Override
+    public void applyRevisionConstraint(GetObjectMetadataRequest request,
+        String revisionId) {
+      if (revisionId != null) {
+        LOG.debug("Restricting metadata request to version {}", revisionId);
+        request.withVersionId(revisionId);
+      }
+    public String getRevisionId(final S3ObjectAttributes s3ObjectAttributes) {
+      return null;
+    }
+
+    @Override
+    public String getRevisionId(CopyResult copyResult) {
+      return null;
+    }
+
+    @Override
+    public void applyRevisionConstraint(CopyObjectRequest request,
+        String revisionId) {
+
+    }
+
+    @Override
+    public void applyRevisionConstraint(GetObjectMetadataRequest request,
+        String revisionId) {
+
+    }
+
+    @Override
