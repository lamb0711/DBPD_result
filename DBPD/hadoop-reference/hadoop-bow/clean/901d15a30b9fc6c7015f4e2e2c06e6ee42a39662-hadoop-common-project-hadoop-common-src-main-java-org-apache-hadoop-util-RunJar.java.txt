Revert "YARN-2185. Use pipes when localizing archives. Contributed by Miklos Szegedi"

This reverts commit 1b0f265db1a5bfccf1d870912237ea9618bd9c34.

-import java.util.jar.JarInputStream;
-import org.apache.commons.io.input.TeeInputStream;
-   * @param inputStream the jar stream to unpack
-   * @param toDir the destination directory into which to unpack the jar
-   * @param unpackRegex the pattern to match jar entries against
-   *
-   * @throws IOException if an I/O error has occurred or toDir
-   * cannot be created and does not already exist
-   */
-  public static void unJar(InputStream inputStream, File toDir,
-                           Pattern unpackRegex)
-      throws IOException {
-    try (JarInputStream jar = new JarInputStream(inputStream)) {
-      int numOfFailedLastModifiedSet = 0;
-      for (JarEntry entry = jar.getNextJarEntry();
-           entry != null;
-           entry = jar.getNextJarEntry()) {
-        if (!entry.isDirectory() &&
-            unpackRegex.matcher(entry.getName()).matches()) {
-          File file = new File(toDir, entry.getName());
-          ensureDirectory(file.getParentFile());
-          try (OutputStream out = new FileOutputStream(file)) {
-            IOUtils.copyBytes(jar, out, BUFFER_SIZE);
-          }
-          if (!file.setLastModified(entry.getTime())) {
-            numOfFailedLastModifiedSet++;
-          }
-        }
-      }
-      if (numOfFailedLastModifiedSet > 0) {
-        LOG.warn("Could not set last modfied time for {} file(s)",
-            numOfFailedLastModifiedSet);
-      }
-    }
-  }
-
-  /**
-   * Unpack matching files from a jar. Entries inside the jar that do
-   * not match the given pattern will be skipped. Keep also a copy
-   * of the entire jar in the same directory for backward compatibility.
-   * TODO remove this feature in a new release and do only unJar
-   *
-   * @param inputStream the jar stream to unpack
-   * @param toDir the destination directory into which to unpack the jar
-   * @param unpackRegex the pattern to match jar entries against
-   *
-   * @throws IOException if an I/O error has occurred or toDir
-   * cannot be created and does not already exist
-   */
-  @Deprecated
-  public static void unJarAndSave(InputStream inputStream, File toDir,
-                           String name, Pattern unpackRegex)
-      throws IOException{
-    File file = new File(toDir, name);
-    ensureDirectory(toDir);
-    try (OutputStream jar = new FileOutputStream(file);
-         TeeInputStream teeInputStream = new TeeInputStream(inputStream, jar)) {
-      unJar(teeInputStream, toDir, unpackRegex);
-    }
-  }
-
-  /**
-   * Unpack matching files from a jar. Entries inside the jar that do
-   * not match the given pattern will be skipped.
-   *
