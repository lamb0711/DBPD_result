HDFS-3105.  Add DatanodeStorage information to block recovery.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1302683 13f79535-47bb-0310-9956-ffa450edef68

-  public ExtendedBlock updateReplicaUnderRecovery(ExtendedBlock oldBlock,
-                                          long recoveryId,
-                                          long newLength) throws IOException {
-    ReplicaInfo r = data.updateReplicaUnderRecovery(oldBlock,
+  public String updateReplicaUnderRecovery(final ExtendedBlock oldBlock,
+      final long recoveryId, final long newLength) throws IOException {
+    final String storageID = data.updateReplicaUnderRecovery(oldBlock,
-    return new ExtendedBlock(oldBlock.getBlockPoolId(), r);
+    return storageID;
+    private String storageID;
+
+    void updateReplicaUnderRecovery(String bpid, long recoveryId, long newLength 
+        ) throws IOException {
+      final ExtendedBlock b = new ExtendedBlock(bpid, rInfo);
+      storageID = datanode.updateReplicaUnderRecovery(b, recoveryId, newLength);
+    }
+
+    final String bpid = block.getBlockPoolId();
-          true, true, DatanodeID.EMPTY_ARRAY);
+          true, true, DatanodeID.EMPTY_ARRAY, null);
-    final ExtendedBlock newBlock = new ExtendedBlock(block.getBlockPoolId(), block
-        .getBlockId(), -1, recoveryId);
+    final ExtendedBlock newBlock = new ExtendedBlock(bpid, block.getBlockId(),
+        -1, recoveryId);
-    List<DatanodeID> successList = new ArrayList<DatanodeID>();
+    final List<BlockRecord> successList = new ArrayList<BlockRecord>();
-        ExtendedBlock reply = r.datanode.updateReplicaUnderRecovery(
-            new ExtendedBlock(newBlock.getBlockPoolId(), r.rInfo), recoveryId,
-            newBlock.getNumBytes());
-        assert reply.equals(newBlock) &&
-               reply.getNumBytes() == newBlock.getNumBytes() :
-          "Updated replica must be the same as the new block.";
-        successList.add(r.id);
+        r.updateReplicaUnderRecovery(bpid, recoveryId, newBlock.getNumBytes());
+        successList.add(r);
-    DatanodeID[] nlist = successList.toArray(new DatanodeID[successList.size()]);
+    final DatanodeID[] datanodes = new DatanodeID[successList.size()];
+    final String[] storages = new String[datanodes.length];
+    for(int i = 0; i < datanodes.length; i++) {
+      final BlockRecord r = successList.get(i);
+      datanodes[i] = r.id;
+      storages[i] = r.storageID;
+    }
-        nlist);
+        datanodes, storages);
