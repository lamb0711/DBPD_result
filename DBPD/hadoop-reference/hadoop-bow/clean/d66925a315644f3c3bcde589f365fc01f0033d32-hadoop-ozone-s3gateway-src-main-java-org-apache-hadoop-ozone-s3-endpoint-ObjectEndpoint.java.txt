HDDS-902. MultipartUpload: S3 API for uploading a part file. Contributed by Bharat Viswanadham.

+import javax.ws.rs.DefaultValue;
+import org.apache.hadoop.ozone.om.helpers.OmMultipartCommitUploadPartInfo;
+
+import static org.apache.hadoop.ozone.s3.exception.S3ErrorTable.NO_SUCH_UPLOAD;
+      @QueryParam("partNumber")  int partNumber,
+      @QueryParam("uploadId") @DefaultValue("") String uploadID,
+
+    if (!uploadID.equals("")) {
+      // If uploadID is specified, it is a request for upload part
+      return createMultipartKey(bucketName, keyPath, length,
+          partNumber, uploadID, body);
+    }
+
+  private Response createMultipartKey(String bucket, String key, long length,
+                                      int partNumber, String uploadID,
+                                      InputStream body)
+      throws IOException, OS3Exception {
+    try {
+      OzoneBucket ozoneBucket = getBucket(bucket);
+      OzoneOutputStream ozoneOutputStream = ozoneBucket.createMultipartKey(
+          key, length, partNumber, uploadID);
+      IOUtils.copy(body, ozoneOutputStream);
+      ozoneOutputStream.close();
+      OmMultipartCommitUploadPartInfo omMultipartCommitUploadPartInfo =
+          ozoneOutputStream.getCommitUploadPartInfo();
+      return Response.status(Status.OK).header("ETag",
+          omMultipartCommitUploadPartInfo.getPartName()).build();
+
+    } catch (IOException ex) {
+      if (ex.getMessage().contains("NO_SUCH_MULTIPART_UPLOAD_ERROR")) {
+        OS3Exception os3Exception = S3ErrorTable.newError(NO_SUCH_UPLOAD,
+            uploadID);
+        throw os3Exception;
+      }
+      throw ex;
+    }
+
+  }
+
