HDFS-6926. DN support for saving replicas to persistent storage and evicting in-memory replicas. (Arpit Agarwal)

+import org.apache.commons.io.FileUtils;
+  private final File lazypersistDir;
+    this.lazypersistDir = new File(currentDir, DataStorage.STORAGE_DIR_LAZY_PERSIST);
+    // Delete all checkpointed replicas on startup.
+    // TODO: We can move checkpointed replicas to the finalized dir and delete
+    //       the copy on RAM_DISK. For now we take the simpler approach.
+
+    FileUtil.fullyDelete(lazypersistDir);
+    if (!this.lazypersistDir.exists()) {
+      if (!this.lazypersistDir.mkdirs()) {
+        throw new IOException("Failed to mkdirs " + this.lazypersistDir);
+      }
+    }
+
+  File getLazypersistDir() {
+    return lazypersistDir;
+  }
+
-    
+
+  File lazyPersistReplica(Block b, File f) throws IOException {
+    File blockFile = FsDatasetImpl.copyBlockFiles(b, f, lazypersistDir);
+    File metaFile = FsDatasetUtil.getMetaFile(blockFile, b.getGenerationStamp());
+    dfsUsage.incDfsUsed(b.getNumBytes() + metaFile.length());
+    return blockFile;
+  }
+
+  /**
+   * Move a persisted replica from lazypersist directory to a subdirectory
+   * under finalized.
+   */
+  File activateSavedReplica(Block b, File blockFile) throws IOException {
+    final File blockDir = DatanodeUtil.idToBlockDir(finalizedDir, b.getBlockId());
+    final File metaFile = FsDatasetUtil.getMetaFile(blockFile, b.getGenerationStamp());
+    final File targetBlockFile = new File(blockDir, blockFile.getName());
+    final File targetMetaFile = new File(blockDir, metaFile.getName());
+    FileUtils.moveFile(blockFile, targetBlockFile);
+    FsDatasetImpl.LOG.info("Moved " + blockFile + " to " + targetBlockFile);
+    FileUtils.moveFile(metaFile, targetMetaFile);
+    FsDatasetImpl.LOG.info("Moved " + metaFile + " to " + targetMetaFile);
+    return targetBlockFile;
+  }
+
+
+
