HDFS-1073. Redesign the NameNode's storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.EOFException;
-      -25, -26, -27, -28, -30, -31, -32, -33, -34, -35, -36 };
+      -25, -26, -27, -28, -30, -31, -32, -33, -34, -35, -36, -37, -38};
+   * Visit a transaction ID, if the log version supports it.
+   */
+  private void visitTxId() throws IOException {
+    if (LayoutVersion.supports(Feature.STORED_TXIDS, editsVersion)) {
+      v.visitLong(EditsElement.TRANSACTION_ID);
+    }
+  }
+  
+  /**
-    ; // nothing to do, this op code has no data
+    visitTxId();
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+    
+    visitTxId();
+
+    visitTxId();
+
+    visitTxId();
+    
+    visitTxId();
+
+  /**
+   * Visit OP_BEGIN_LOG_SEGMENT
+   */
+  private void visit_OP_BEGIN_LOG_SEGMENT()
+    throws IOException {
+    visitTxId();
+  }
+  
+  /**
+   * Visit OP_END_LOG_SEGMENT
+   */
+  private void visit_OP_END_LOG_SEGMENT()
+    throws IOException {
+    visitTxId();
+  }
+
+      case OP_END_LOG_SEGMENT: // 23
+        visit_OP_END_LOG_SEGMENT();
+        break;        
+      case OP_START_LOG_SEGMENT: // 24
+        visit_OP_BEGIN_LOG_SEGMENT();
+        break;
-        ByteToken opCodeToken = v.visitByte(EditsElement.OPCODE);
+        ByteToken opCodeToken;
+        try {
+          opCodeToken = v.visitByte(EditsElement.OPCODE);
+        } catch (EOFException eof) {
+          // Getting EOF when reading the opcode is fine --
+          // it's just a finalized edits file
+          // Just fake the OP_INVALID here.
+          opCodeToken = new ByteToken(EditsElement.OPCODE);
+          opCodeToken.fromByte(FSEditLogOpCodes.OP_INVALID.getOpCode());
+          v.visit(opCodeToken);
+        }
