HADOOP-6984. Combine the compress kind and the codec in the same option
for SequenceFiles. (cdouglas via omalley)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1004900 13f79535-47bb-0310-9956-ffa450edef68

-    Writer.CompressionTypeOption compressionOption = 
-      Options.getOption(Writer.CompressionTypeOption.class, opts);
+    Writer.CompressionOption compressionOption = 
+      Options.getOption(Writer.CompressionOption.class, opts);
+      opts = Options.prependOptions(opts, Writer.compression(kind));
-    default:
-    case NONE:
-      return new Writer(conf, kind, opts);
-    case RECORD:
-      return new RecordCompressWriter(conf, kind, opts);
-    case BLOCK:
-      return new BlockCompressWriter(conf, kind, opts);
+      default:
+      case NONE:
+        return new Writer(conf, opts);
+      case RECORD:
+        return new RecordCompressWriter(conf, opts);
+      case BLOCK:
+        return new BlockCompressWriter(conf, opts);
-                        Writer.compressionType(compressionType));
+                        Writer.compression(compressionType));
-                        Writer.compressionType(compressionType),
+                        Writer.compression(compressionType),
-                        Writer.compressionType(compressionType),
-                        Writer.compressionCodec(codec));
+                        Writer.compression(compressionType, codec));
-                        Writer.compressionType(compressionType),
-                        Writer.compressionCodec(codec),
+                        Writer.compression(compressionType, codec),
-                        Writer.compressionType(compressionType),
-                        Writer.compressionCodec(codec),
+                        Writer.compression(compressionType, codec),
-                        Writer.compressionType(compressionType),
-                        Writer.compressionCodec(codec),
+                        Writer.compression(compressionType, codec),
-                        Writer.compressionType(compressionType),
-                        Writer.compressionCodec(codec),
+                        Writer.compression(compressionType, codec),
-                        Writer.compressionType(compressionType),
-                        Writer.compressionCodec(codec));
+                        Writer.compression(compressionType, codec));
-    private static class CompressionTypeOption implements Option {
+    private static class CompressionOption implements Option {
-      CompressionTypeOption(CompressionType value) {
+      private final CompressionCodec codec;
+      CompressionOption(CompressionType value) {
+        this(value, null);
+      }
+      CompressionOption(CompressionType value, CompressionCodec codec) {
+        this.codec = (CompressionType.NONE != value && null == codec)
+          ? new DefaultCodec()
+          : codec;
-    }
-    
-    private static class CompressionCodecOption implements Option {
-      private final CompressionCodec value;
-      CompressionCodecOption(CompressionCodec value) {
-        this.value = value;
-      }
-      CompressionCodec getValue() {
-        return value;
+      CompressionCodec getCodec() {
+        return codec;
-    public static Option compressionType(CompressionType value) {
-      return new CompressionTypeOption(value);
-    }
-    
-    public static Option compressionCodec(CompressionCodec value) {
-      return new CompressionCodecOption(value);
+    public static Option compression(CompressionType value) {
+      return new CompressionOption(value);
+    public static Option compression(CompressionType value,
+        CompressionCodec codec) {
+      return new CompressionOption(value, codec);
+    }
+    
-     * @param compressionType the compression type being used
-           CompressionType compressionType,
-      this.compress = compressionType;
-      CompressionCodecOption compressionCodecOption =
-        Options.getOption(CompressionCodecOption.class, opts);
+      CompressionOption compressionTypeOption =
+        Options.getOption(CompressionOption.class, opts);
-      CompressionCodec codec;
-      if (compressionType == CompressionType.NONE) {
-        codec = null;
-      } else {
-        codec = compressionCodecOption == null ?
-            new DefaultCodec() : compressionCodecOption.getValue();
-      }
+      this.compress = compressionTypeOption.getValue();
+      final CompressionCodec codec = compressionTypeOption.getCodec();
-                         CompressionType compressionType,
-      super(conf, compressionType, options);
+      super(conf, options);
-                        CompressionType compressionType,
-      super(conf, compressionType, options);
+      super(conf, options);
-        Writer writer = createWriter(conf, 
-                                     Writer.stream(out), 
-                                     Writer.keyClass(keyClass), 
-                                     Writer.valueClass(valClass), 
-                                     Writer.compressionType(compressionType), 
-                                     Writer.compressionCodec(codec), 
-                                     Writer.metadata(done ? metadata : 
-                                       new Metadata()));
+        Writer writer = createWriter(conf, Writer.stream(out), 
+            Writer.keyClass(keyClass), Writer.valueClass(valClass),
+            Writer.compression(compressionType, codec),
+            Writer.metadata(done ? metadata : new Metadata()));
-                                   Writer.compressionType(compress), 
-                                   Writer.compressionCodec(codec), 
+                                   Writer.compression(compress, codec), 
