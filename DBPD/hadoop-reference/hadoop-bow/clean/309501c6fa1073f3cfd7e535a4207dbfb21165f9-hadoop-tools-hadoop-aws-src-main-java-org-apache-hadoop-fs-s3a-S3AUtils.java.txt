Revert "HADOOP-16050: s3a SSL connections should use OpenSSL"

This reverts commit b067f8acaa79b1230336900a5c62ba465b2adb28.

Change-Id: I584b050a56c0e6f70b11fa3f7db00d5ac46e7dd8

-import com.amazonaws.thirdparty.apache.http.conn.ssl.SSLConnectionSocketFactory;
-import org.apache.hadoop.security.ssl.OpenSSLSocketFactory;
-import javax.net.ssl.HostnameVerifier;
-   *
-   * @throws IOException if there was an error initializing the protocol
-   *                     settings
-      ClientConfiguration awsConf) throws IOException {
+      ClientConfiguration awsConf) {
-    initProtocolSettings(conf, awsConf);
+    boolean secureConnections = conf.getBoolean(SECURE_CONNECTIONS,
+        DEFAULT_SECURE_CONNECTIONS);
+    awsConf.setProtocol(secureConnections ?  Protocol.HTTPS : Protocol.HTTP);
-   * Initializes the connection protocol settings when connecting to S3 (e.g.
-   * either HTTP or HTTPS). If secure connections are enabled, this method
-   * will load the configured SSL providers.
-   *
-   * @param conf Hadoop configuration
-   * @param awsConf AWS SDK configuration
-   *
-   * @throws IOException if there is an error initializing the configured
-   *                     {@link javax.net.ssl.SSLSocketFactory}
-   */
-  private static void initProtocolSettings(Configuration conf,
-      ClientConfiguration awsConf) throws IOException {
-    boolean secureConnections = conf.getBoolean(SECURE_CONNECTIONS,
-        DEFAULT_SECURE_CONNECTIONS);
-    awsConf.setProtocol(secureConnections ?  Protocol.HTTPS : Protocol.HTTP);
-    if (secureConnections) {
-      OpenSSLSocketFactory.initializeDefaultFactory(
-              conf.getEnum(SSL_CHANNEL_MODE, DEFAULT_SSL_CHANNEL_MODE));
-      awsConf.getApacheHttpClientConfig().setSslSocketFactory(
-            new SSLConnectionSocketFactory(
-                    OpenSSLSocketFactory.getDefaultFactory(),
-                    (HostnameVerifier) null));
-    }
-  }
-
-  /**
