HDFS-11004. Ozone : move Chunk IO and container protocol calls to hdfs-client. Contributed by Chen Liang.

-package org.apache.hadoop.ozone.web.storage;
+package org.apache.hadoop.scm.storage;
-import org.apache.hadoop.ozone.web.exceptions.ErrorTable;
-import org.apache.hadoop.ozone.web.exceptions.OzoneException;
-import org.apache.hadoop.ozone.web.handlers.UserArgs;
- * {@link DistributedStorageHandler}.
+ * .
-final class ContainerProtocolCalls {
+public final class ContainerProtocolCalls {
-   * @param args container protocol call args
-   * @returns container protocol get key response
+   * @param traceID container protocol call args
+   * @return container protocol get key response
-   * @throws OzoneException if the container protocol call failed
-      KeyData containerKeyData, UserArgs args) throws IOException,
-      OzoneException {
+      KeyData containerKeyData, String traceID) throws IOException {
-        .setTraceID(args.getRequestID())
+        .setTraceID(traceID)
-    validateContainerResponse(response, args);
+    validateContainerResponse(response, traceID);
-   * @param args container protocol call args
+   * @param traceID container protocol call args
-   * @throws OzoneException if the container protocol call failed
-      KeyData containerKeyData, UserArgs args) throws IOException,
-      OzoneException {
+      KeyData containerKeyData, String traceID) throws IOException {
-        .setTraceID(args.getRequestID())
+        .setTraceID(traceID)
-    validateContainerResponse(response, args);
+    validateContainerResponse(response, traceID);
-   * @param args container protocol call args
-   * @returns container protocol read chunk response
+   * @param traceID container protocol call args
+   * @return container protocol read chunk response
-   * @throws OzoneException if the container protocol call failed
-      ChunkInfo chunk, String key, UserArgs args)
-      throws IOException, OzoneException {
+      ChunkInfo chunk, String key, String traceID)
+      throws IOException {
-        .setTraceID(args.getRequestID())
+        .setTraceID(traceID)
-    validateContainerResponse(response, args);
+    validateContainerResponse(response, traceID);
-   * @param args container protocol call args
+   * @param traceID container protocol call args
-   * @throws OzoneException if the container protocol call failed
-      String key, ByteString data, UserArgs args)
-      throws IOException, OzoneException {
+      String key, ByteString data, String traceID)
+      throws IOException {
-        .setTraceID(args.getRequestID())
+        .setTraceID(traceID)
-    validateContainerResponse(response, args);
+    validateContainerResponse(response, traceID);
-   * @param args container protocol call args
-   * @throws OzoneException if the container protocol call failed
+   * @param traceID container protocol call args
+   * @throws IOException if the container protocol call failed
-      ContainerCommandResponseProto response, UserArgs args)
-      throws OzoneException {
+      ContainerCommandResponseProto response, String traceID
+  ) throws IOException {
+    // TODO : throw the right type of exception
-      throw ErrorTable.newError(new OzoneException(HTTP_BAD_REQUEST,
-          "badRequest", "Bad container request."), args);
+      throw new IOException(HTTP_BAD_REQUEST +
+          ":Bad container request: " + traceID);
-      throw ErrorTable.newError(new OzoneException(HTTP_INTERNAL_ERROR,
-          "internalServerError", "Unsupported container request."), args);
+      throw new IOException(HTTP_INTERNAL_ERROR +
+          "Unsupported container request: " + traceID);
-      throw ErrorTable.newError(new OzoneException(HTTP_INTERNAL_ERROR,
-          "internalServerError", "Container internal error."), args);
+      throw new IOException(HTTP_INTERNAL_ERROR +
+          "Container internal error:" + traceID);
-      throw ErrorTable.newError(new OzoneException(HTTP_INTERNAL_ERROR,
-          "internalServerError", "Unrecognized container response."), args);
+      throw new IOException(HTTP_INTERNAL_ERROR +
+          "Unrecognized container response:" + traceID);
