HDDS-1674. Make ScmBlockLocationProtocol message type based.

Closes #984

+import org.apache.hadoop.hdds.protocol.proto.ScmBlockLocationProtocolProtos.SCMBlockLocationRequest;
+import org.apache.hadoop.hdds.protocol.proto.ScmBlockLocationProtocolProtos.SCMBlockLocationResponse;
+import org.apache.hadoop.hdds.protocol.proto.ScmBlockLocationProtocolProtos.Type;
+   * Returns a SCMBlockLocationRequest builder with specified type.
+   * @param cmdType type of the request
+   */
+  private SCMBlockLocationRequest.Builder createSCMBlockRequest(Type cmdType) {
+    return SCMBlockLocationRequest.newBuilder()
+        .setCmdType(cmdType)
+        .setTraceID(TracingUtil.exportCurrentSpan());
+  }
+
+  /**
-            .setTraceID(TracingUtil.exportCurrentSpan())
+
+    SCMBlockLocationRequest wrapper = createSCMBlockRequest(
+        Type.AllocateScmBlock)
+        .setAllocateScmBlockRequest(request)
+        .build();
+
+    final SCMBlockLocationResponse wrappedResponse;
-      response = rpcProxy.allocateScmBlock(NULL_RPC_CONTROLLER, request);
+      wrappedResponse = rpcProxy.send(NULL_RPC_CONTROLLER, wrapper);
+      response = wrappedResponse.getAllocateScmBlockResponse();
+    SCMBlockLocationRequest wrapper = createSCMBlockRequest(
+        Type.DeleteScmKeyBlocks)
+        .setDeleteScmKeyBlocksRequest(request)
+        .build();
+
+    final SCMBlockLocationResponse wrappedResponse;
-      resp = rpcProxy.deleteScmKeyBlocks(NULL_RPC_CONTROLLER, request);
+      wrappedResponse = rpcProxy.send(NULL_RPC_CONTROLLER, wrapper);
+      resp = wrappedResponse.getDeleteScmKeyBlocksResponse();
+
+    SCMBlockLocationRequest wrapper = createSCMBlockRequest(
+        Type.GetScmInfo)
+        .setGetScmInfoRequest(request)
+        .build();
+
+    final SCMBlockLocationResponse wrappedResponse;
-      resp = rpcProxy.getScmInfo(NULL_RPC_CONTROLLER, request);
+      wrappedResponse = rpcProxy.send(NULL_RPC_CONTROLLER, wrapper);
+      resp = wrappedResponse.getGetScmInfoResponse();
