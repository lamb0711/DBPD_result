MAPREDUCE-5199. Removing ApplicationTokens file as it is no longer needed. Contributed by Daryn Sharp.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492848 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
-import org.apache.hadoop.fs.FileContext;
+import org.apache.hadoop.security.token.Token;
+import org.apache.hadoop.yarn.security.ApplicationTokenIdentifier;
-  private Credentials fsTokens = new Credentials(); // Filled during init
+  private Credentials jobCredentials = new Credentials(); // Filled during init
-    downloadTokensAndSetupUGI(conf);
+    initJobCredentialsAndUGI(conf);
-    return fsTokens;
+    return jobCredentials;
-            taskAttemptListener, jobTokenSecretManager, fsTokens, clock,
+            taskAttemptListener, jobTokenSecretManager, jobCredentials, clock,
-  protected void downloadTokensAndSetupUGI(Configuration conf) {
+  protected void initJobCredentialsAndUGI(Configuration conf) {
-
-      // Read the file-system tokens from the localized tokens-file.
-      Path jobSubmitDir = 
-          FileContext.getLocalFSFileContext().makeQualified(
-              new Path(new File(MRJobConfig.JOB_SUBMIT_DIR)
-                  .getAbsolutePath()));
-      Path jobTokenFile = 
-          new Path(jobSubmitDir, MRJobConfig.APPLICATION_TOKENS_FILE);
-      fsTokens.addAll(Credentials.readTokenStorageFile(jobTokenFile, conf));
-      LOG.info("jobSubmitDir=" + jobSubmitDir + " jobTokenFile="
-          + jobTokenFile);
-      currentUser.addCredentials(fsTokens); // For use by AppMaster itself.
+      this.jobCredentials = ((JobConf)conf).getCredentials();
-        TokenCache.getShuffleSecretKey(fsTokens) != null);
+        TokenCache.getShuffleSecretKey(jobCredentials) != null);
+    LOG.info("Executing with tokens:");
+    for (Token<?> token : credentials.getAllTokens()) {
+      LOG.info(token);
+    }
+    
+
+    // Now remove the AM->RM token so tasks don't have it
+    Iterator<Token<?>> iter = credentials.getAllTokens().iterator();
+    while (iter.hasNext()) {
+      Token<?> token = iter.next();
+      if (token.getKind().equals(ApplicationTokenIdentifier.KIND_NAME)) {
+        iter.remove();
+      }
+    }
