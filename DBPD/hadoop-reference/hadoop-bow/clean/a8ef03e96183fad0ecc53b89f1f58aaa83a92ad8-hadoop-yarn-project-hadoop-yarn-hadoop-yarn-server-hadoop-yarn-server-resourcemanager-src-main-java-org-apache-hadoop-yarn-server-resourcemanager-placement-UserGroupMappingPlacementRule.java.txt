YARN-9840. Capacity scheduler: add support for Secondary Group rule mapping. Contributed by Manikandan R

+  public static final String SECONDARY_GROUP_MAPPING = "%secondary_group";
+
+  private CapacitySchedulerQueueManager queueManager;
+          } else if (mapping.queue.equals(SECONDARY_GROUP_MAPPING)) {
+            List<String> groupsList = groups.getGroups(user);
+            String secondaryGroup = null;
+            // Traverse all secondary groups (as there could be more than one
+            // and position is not guaranteed) and ensure there is queue with
+            // the same name
+            for (int i = 1; i < groupsList.size(); i++) {
+              if (this.queueManager.getQueue(groupsList.get(i)) != null) {
+                secondaryGroup = groupsList.get(i);
+                break;
+              }
+            }
+            if (secondaryGroup != null) {
+              return getPlacementContext(mapping, secondaryGroup);
+            } else {
+              if (LOG.isDebugEnabled()) {
+                LOG.debug("User {} is not associated with any Secondary "
+                    + "Group. Hence it may use the 'default' queue", user);
+              }
+              return null;
+            }
-    CapacitySchedulerQueueManager queueManager =
-        schedulerContext.getCapacitySchedulerQueueManager();
+    queueManager = schedulerContext.getCapacitySchedulerQueueManager();
-    return !mapping.getQueue().contains(
-        UserGroupMappingPlacementRule.CURRENT_USER_MAPPING) && !mapping
-        .getQueue().contains(
-            UserGroupMappingPlacementRule.PRIMARY_GROUP_MAPPING);
+    return !mapping.getQueue()
+        .contains(UserGroupMappingPlacementRule.CURRENT_USER_MAPPING)
+        && !mapping.getQueue()
+            .contains(UserGroupMappingPlacementRule.PRIMARY_GROUP_MAPPING)
+        && !mapping.getQueue()
+            .contains(UserGroupMappingPlacementRule.SECONDARY_GROUP_MAPPING);
+
+  @VisibleForTesting
+  @Private
+  public void setQueueManager(CapacitySchedulerQueueManager queueManager) {
+    this.queueManager = queueManager;
+  }
