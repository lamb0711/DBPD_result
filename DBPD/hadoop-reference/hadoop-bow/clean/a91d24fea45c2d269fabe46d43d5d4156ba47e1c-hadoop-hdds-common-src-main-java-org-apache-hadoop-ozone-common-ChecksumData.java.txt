HDDS-1496. Support partial chunk reads and checksum verification (#804)


-   * Verify that this ChecksumData matches with the input ChecksumData.
+   * Verify that this ChecksumData from startIndex to endIndex matches with the
+   * provided ChecksumData.
+   * The checksum at startIndex of this ChecksumData will be matched with the
+   * checksum at index 0 of the provided ChecksumData, and checksum at
+   * (startIndex + 1) of this ChecksumData with checksum at index 1 of
+   * provided ChecksumData and so on.
+   * @param startIndex index of the first checksum from this ChecksumData
+   *                   which will be used to compare checksums
-  public boolean verifyChecksumDataMatches(ChecksumData that) throws
-      OzoneChecksumException {
+  public boolean verifyChecksumDataMatches(ChecksumData that, int startIndex)
+      throws OzoneChecksumException {
-    if (this.checksums.size() != that.checksums.size()) {
-      throw new OzoneChecksumException("Original and Computed checksumData's " +
-          "has different number of checksums");
-    }
+    int numChecksums = that.checksums.size();
-    // Verify that checksum matches at each index
-    for (int index = 0; index < this.checksums.size(); index++) {
-      if (!matchChecksumAtIndex(this.checksums.get(index),
-          that.checksums.get(index))) {
-        // checksum mismatch. throw exception.
-        throw new OzoneChecksumException(index);
+    try {
+      // Verify that checksum matches at each index
+      for (int index = 0; index < numChecksums; index++) {
+        if (!matchChecksumAtIndex(this.checksums.get(startIndex + index),
+            that.checksums.get(index))) {
+          // checksum mismatch. throw exception.
+          throw new OzoneChecksumException(index);
+        }
+    } catch (ArrayIndexOutOfBoundsException e) {
+      throw new OzoneChecksumException("Computed checksum has "
+          + numChecksums + " number of checksums. Original checksum has " +
+          (this.checksums.size() - startIndex) + " number of checksums " +
+          "starting from index " + startIndex);
