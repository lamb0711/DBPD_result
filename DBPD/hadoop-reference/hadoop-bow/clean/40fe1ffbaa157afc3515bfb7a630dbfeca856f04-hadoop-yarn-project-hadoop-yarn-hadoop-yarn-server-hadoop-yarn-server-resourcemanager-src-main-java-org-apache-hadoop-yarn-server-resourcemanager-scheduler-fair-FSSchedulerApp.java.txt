Merge r1406415 through r1407703 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1407706 13f79535-47bb-0310-9956-ffa450edef68

-    return this.appSchedulingInfo.getApplicationId();
+    return appSchedulingInfo.getApplicationId();
-    return this.appSchedulingInfo.getApplicationAttemptId();
+    return appSchedulingInfo.getApplicationAttemptId();
-    return this.appSchedulingInfo.getUser();
+    return appSchedulingInfo.getUser();
-    return this.appSchedulingInfo.getResourceRequests(priority);
+    return appSchedulingInfo.getResourceRequests(priority);
-    return this.appSchedulingInfo.getNewContainerId();
+    return appSchedulingInfo.getNewContainerId();
-    return this.appSchedulingInfo.getPriorities();
+    return appSchedulingInfo.getPriorities();
-    return this.appSchedulingInfo.getResourceRequest(priority, nodeAddress);
+    return appSchedulingInfo.getResourceRequest(priority, nodeAddress);
-    return this.appSchedulingInfo.getResource(priority);
+    return appSchedulingInfo.getResource(priority);
-    return this.appSchedulingInfo.isPending();
+    return appSchedulingInfo.isPending();
-    return this.appSchedulingInfo.getQueueName();
+    return appSchedulingInfo.getQueueName();
-    this.appSchedulingInfo.stop(rmAppAttemptFinalState);
+    appSchedulingInfo.stop(rmAppAttemptFinalState);
-      this.rmContext.getDispatcher().getEventHandler()
+      rmContext.getDispatcher().getEventHandler()
-    this.schedulingOpportunities.setCount(priority,
+    schedulingOpportunities.setCount(priority,
-    return this.schedulingOpportunities.count(priority);
+    return schedulingOpportunities.count(priority);
-    this.reReservations.setCount(priority, 0);
+    reReservations.setCount(priority, 0);
-    this.reReservations.add(priority);
+    reReservations.add(priority);
-    return this.reReservations.count(priority);
+    return reReservations.count(priority);
-    this.lastScheduledContainer.put(priority, System.currentTimeMillis());
-    this.schedulingOpportunities.setCount(priority, 0);
+    lastScheduledContainer.put(priority, System.currentTimeMillis());
+    schedulingOpportunities.setCount(priority, 0);
-    if (this.getSchedulingOpportunities(priority) > (numNodes * threshold)) {
+    if (getSchedulingOpportunities(priority) > (numNodes * threshold)) {
-        this.resetSchedulingOpportunities(priority);
+        resetSchedulingOpportunities(priority);
-        this.resetSchedulingOpportunities(priority);
+        resetSchedulingOpportunities(priority);
-    NodeType allowed = this.allowedLocalityLevel.get(priority);
+    NodeType allowed = allowedLocalityLevel.get(priority);
-    RMContainer rmContainer = new RMContainerImpl(container, this
-        .getApplicationAttemptId(), node.getNodeID(), this.rmContext
-        .getDispatcher().getEventHandler(), this.rmContext
+    RMContainer rmContainer = new RMContainerImpl(container, 
+        getApplicationAttemptId(), node.getNodeID(), rmContext
+        .getDispatcher().getEventHandler(), rmContext
