HDDS-1525. Mapreduce failure when using Hadoop 2.7.5

Closes #1065

+import java.util.ArrayList;
+import org.apache.hadoop.fs.FileStatus;
+import org.apache.hadoop.fs.Path;
-  public OzoneFileStatus getFileStatus(String pathKey) throws IOException {
+  public FileStatusAdapter getFileStatus(String key, URI uri,
+      Path qualifiedPath, String userName)
+      throws IOException {
-      return bucket.getFileStatus(pathKey);
+      OzoneFileStatus status = bucket.getFileStatus(key);
+      makeQualified(status, uri, qualifiedPath, userName);
+      return toFileStatusAdapter(status);
+
-            FileNotFoundException(pathKey + ": No such file or directory!");
+            FileNotFoundException(key + ": No such file or directory!");
+  public void makeQualified(FileStatus status, URI uri, Path path,
+      String username) {
+    if (status instanceof OzoneFileStatus) {
+      ((OzoneFileStatus) status)
+          .makeQualified(uri, path,
+              username, username);
+    }
+
+  }
+
-  public List<OzoneFileStatus> listStatus(String keyName, boolean recursive,
-      String startKey, long numEntries) throws IOException {
+  public List<FileStatusAdapter> listStatus(String keyName, boolean recursive,
+      String startKey, long numEntries, URI uri,
+      Path workingDir, String username) throws IOException {
-      return bucket.listStatus(keyName, recursive, startKey, numEntries);
+      List<OzoneFileStatus> statuses = bucket
+          .listStatus(keyName, recursive, startKey, numEntries);
+
+      List<FileStatusAdapter> result = new ArrayList<>();
+      for (OzoneFileStatus status : statuses) {
+        Path qualifiedPath = status.getPath().makeQualified(uri, workingDir);
+        makeQualified(status, uri, qualifiedPath, username);
+        result.add(toFileStatusAdapter(status));
+      }
+      return result;
+
+  private FileStatusAdapter toFileStatusAdapter(OzoneFileStatus status) {
+    return new FileStatusAdapter(
+        status.getLen(),
+        status.getPath(),
+        status.isDirectory(),
+        status.getReplication(),
+        status.getBlockSize(),
+        status.getModificationTime(),
+        status.getAccessTime(),
+        status.getPermission().toShort(),
+        status.getOwner(),
+        status.getGroup(),
+        status.getPath()
+    );
+  }
