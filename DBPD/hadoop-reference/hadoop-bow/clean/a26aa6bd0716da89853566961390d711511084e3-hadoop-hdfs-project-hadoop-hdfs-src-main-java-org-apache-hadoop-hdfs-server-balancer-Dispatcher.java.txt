HDFS-6944. Archival Storage: add retry and termination logic for Mover. Contributed by Jing Zhao.

+import com.google.common.annotations.VisibleForTesting;
+
+    public Collection<G> values() {
+      return map.values();
+    }
+        target.getDDatanode().setHasFailure();
+
+    @Override
+    public synchronized boolean isLocatedOn(StorageGroup loc) {
+      // currently we only check if replicas are located on the same DataNodes
+      // since we do not have the capability to store two replicas in the same
+      // DataNode even though they are on two different storage types
+      for (StorageGroup existing : locations) {
+        if (existing.getDatanodeInfo().equals(loc.getDatanodeInfo())) {
+          return true;
+        }
+      }
+      return false;
+    }
+    private volatile boolean hasFailure = false;
+
+    void setHasFailure() {
+      this.hasFailure = true;
+    }
-    waitForMoveCompletion();
+    waitForMoveCompletion(targets);
-  /** set the sleeping period for block move completion check */
-  static void setBlockMoveWaitTime(long time) {
-    blockMoveWaitTime = time;
-  }
-
-  /** Wait for all block move confirmations. */
-  private void waitForMoveCompletion() {
+  /**
+   * Wait for all block move confirmations.
+   * @return true if there is failed move execution
+   */
+  public static boolean waitForMoveCompletion(
+      Iterable<? extends StorageGroup> targets) {
+    boolean hasFailure = false;
+        } else {
+          hasFailure |= t.getDDatanode().hasFailure;
-        return; //all pending queues are empty
+        return hasFailure; // all pending queues are empty
-   * A block is a good candidate if 
+   * A block is a good candidate if
-   * 
+   *
+  /** set the sleeping period for block move completion check */
+  @VisibleForTesting
+  public static void setBlockMoveWaitTime(long time) {
+    blockMoveWaitTime = time;
+  }
+
-    dispatchExecutor.shutdownNow();
+    if (dispatchExecutor != null) {
+      dispatchExecutor.shutdownNow();
+    }
