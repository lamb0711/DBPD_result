HDDS-972. Add support for configuring multiple OMs. Contributed by Hanisha Koneru.

-import java.util.Objects;
-import java.util.concurrent.atomic.AtomicReference;
-  private final AtomicReference<RaftClient> client = new AtomicReference<>();
+  private RaftClient raftClient;
-    if (!client.compareAndSet(null, OMRatisHelper.newRaftClient(
-        rpcType, omID, raftGroup, retryPolicy, conf))) {
-      throw new IllegalStateException("Client is already connected.");
-    }
+    raftClient = OMRatisHelper.newRaftClient(rpcType, omID, raftGroup,
+        retryPolicy, conf);
-    final RaftClient c = client.getAndSet(null);
-    if (c != null) {
-      closeRaftClient(c);
+    if (raftClient != null) {
+      try {
+        raftClient.close();
+      } catch (IOException e) {
+        throw new IllegalStateException(e);
+      }
-  private void closeRaftClient(RaftClient raftClient) {
-    try {
-      raftClient.close();
-    } catch (IOException e) {
-      throw new IllegalStateException(e);
-    }
-  }
-
-  private RaftClient getClient() {
-    return Objects.requireNonNull(client.get(), "client is null");
-  }
-
-    return isReadOnlyRequest ? getClient().sendReadOnlyAsync(() -> byteString) :
-        getClient().sendAsync(() -> byteString);
+    return isReadOnlyRequest ? raftClient.sendReadOnlyAsync(() -> byteString) :
+        raftClient.sendAsync(() -> byteString);
