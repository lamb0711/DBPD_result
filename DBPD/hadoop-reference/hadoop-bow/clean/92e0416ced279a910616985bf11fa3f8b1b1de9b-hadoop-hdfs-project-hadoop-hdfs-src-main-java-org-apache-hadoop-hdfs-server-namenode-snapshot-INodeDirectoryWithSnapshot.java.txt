HDFS-4727. Update inodeMap after deleting files/directories/snapshots.  Contributed by Jing Zhao


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1470756 13f79535-47bb-0310-9956-ffa450edef68

-        final BlocksMapUpdateInfo collectedBlocks) {
+        final BlocksMapUpdateInfo collectedBlocks,
+        final List<INode> removedINodes) {
-        c.destroyAndCollectBlocks(collectedBlocks);
+        c.destroyAndCollectBlocks(collectedBlocks, removedINodes);
-        final List<INodeReference> refNodes) {
+        final List<INode> removedINodes, final List<INodeReference> refNodes) {
-          d.destroyAndCollectBlocks(collectedBlocks);
+          d.destroyAndCollectBlocks(collectedBlocks, removedINodes);
-        final BlocksMapUpdateInfo collectedBlocks) {
+        final BlocksMapUpdateInfo collectedBlocks,
+        final List<INode> removedINodes) {
-              inode.destroyAndCollectBlocks(collectedBlocks);
+              inode.destroyAndCollectBlocks(collectedBlocks, removedINodes);
-                    collectedBlocks));
+                    collectedBlocks, removedINodes));
-        BlocksMapUpdateInfo collectedBlocks) {
+        BlocksMapUpdateInfo collectedBlocks, final List<INode> removedINodes) {
-      counts.add(diff.destroyDeletedList(collectedBlocks, refNodes));
+      counts.add(diff.destroyDeletedList(collectedBlocks, removedINodes,
+          refNodes));
-          counts.add(ref.cleanSubtree(this.snapshot, null, collectedBlocks));
+          counts.add(ref.cleanSubtree(this.snapshot, null, collectedBlocks,
+              removedINodes));
-      final BlocksMapUpdateInfo collectedBlocks)
+      final BlocksMapUpdateInfo collectedBlocks, final List<INode> removedINodes)
-        counts.add(lastDiff.diff.destroyCreatedList(this, collectedBlocks));
+        counts.add(lastDiff.diff.destroyCreatedList(this, collectedBlocks,
+            removedINodes));
-          collectedBlocks));
+          collectedBlocks, removedINodes));
-            counts.add(cNode.cleanSubtree(snapshot, null, collectedBlocks));
+            counts.add(cNode.cleanSubtree(snapshot, null, collectedBlocks,
+                removedINodes));
-                collectedBlocks));
+                collectedBlocks, removedINodes));
-    counts.add(cleanSubtreeRecursively(snapshot, prior, collectedBlocks));
+    counts.add(cleanSubtreeRecursively(snapshot, prior, collectedBlocks,
+        removedINodes));
-      Snapshot prior, final BlocksMapUpdateInfo collectedBlocks) {
+      Snapshot prior, final BlocksMapUpdateInfo collectedBlocks,
+      final List<INode> removedINodes) {
-            topNode.asFile(), collectedBlocks));
+            topNode.asFile(), collectedBlocks, removedINodes));
-                collectedBlocks));
+                collectedBlocks, removedINodes));
-      final BlocksMapUpdateInfo collectedBlocks) {
+      final BlocksMapUpdateInfo collectedBlocks, 
+      final List<INode> removedINodes) {
-      diff.destroyDiffAndCollectBlocks(this, collectedBlocks);
+      diff.destroyDiffAndCollectBlocks(this, collectedBlocks, removedINodes);
-    super.destroyAndCollectBlocks(collectedBlocks);
+    super.destroyAndCollectBlocks(collectedBlocks, removedINodes);
