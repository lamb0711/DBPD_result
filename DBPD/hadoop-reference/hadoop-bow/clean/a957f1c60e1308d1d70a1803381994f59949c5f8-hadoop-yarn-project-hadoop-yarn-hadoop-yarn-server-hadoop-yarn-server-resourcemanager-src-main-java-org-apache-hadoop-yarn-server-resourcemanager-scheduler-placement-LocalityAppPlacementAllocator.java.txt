YARN-7438. Additional changes to make SchedulingPlacementSet agnostic to ResourceRequest / placement algorithm. Contributed by Wangda Tan

+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ContainerRequest;
-public class LocalityAppPlacementAllocator<N extends SchedulerNode>
+public class LocalityAppPlacementAllocator <N extends SchedulerNode>
-  public ResourceRequestUpdateResult updateResourceRequests(
+  public PendingAskUpdateResult updatePendingAsk(
-      ResourceRequestUpdateResult updateResult = null;
+      PendingAskUpdateResult updateResult = null;
-          updateResult = new ResourceRequestUpdateResult(lastRequest, request);
+          PendingAsk lastPendingAsk =
+              lastRequest == null ? null : new PendingAsk(
+                  lastRequest.getCapability(), lastRequest.getNumContainers());
+          String lastRequestedNodePartition =
+              lastRequest == null ? null : lastRequest.getNodeLabelExpression();
+
+          updateResult = new PendingAskUpdateResult(lastPendingAsk,
+              new PendingAsk(request.getCapability(),
+                  request.getNumContainers()), lastRequestedNodePartition,
+              request.getNodeLabelExpression());
-  public List<ResourceRequest> allocate(SchedulerRequestKey schedulerKey,
+  public ContainerRequest allocate(SchedulerRequestKey schedulerKey,
-      return resourceRequests;
+      return new ContainerRequest(resourceRequests);
-
-  @Override
-  public Iterator<String> getAcceptedResouceNames() {
-    try {
-      readLock.lock();
-      return resourceRequestMap.keySet().iterator();
-    } finally {
-      readLock.unlock();
-    }
-  }
