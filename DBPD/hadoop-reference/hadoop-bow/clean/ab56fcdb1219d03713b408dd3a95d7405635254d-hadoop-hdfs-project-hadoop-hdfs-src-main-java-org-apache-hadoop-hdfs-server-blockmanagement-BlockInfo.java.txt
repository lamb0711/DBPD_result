Merge remote-tracking branch 'apache/trunk' into HDFS-7285

+import java.util.List;
+import org.apache.hadoop.hdfs.server.namenode.NameNode;
+import static org.apache.hadoop.hdfs.server.namenode.INodeId.INVALID_INODE_ID;
+
+
-  private BlockCollection bc;
+  /**
+   * Replication factor.
+   */
+  private short replication;
-  /** For implementing {@link LightWeightGSet.LinkedElement} interface */
+  /**
+   * Block collection ID.
+   */
+  private long bcId;
+
+  /** For implementing {@link LightWeightGSet.LinkedElement} interface. */
-    this.bc = null;
+    this.bcId = INVALID_INODE_ID;
+    this.replication = isStriped() ? 0 : size;
-    this.triplets = new Object[3 * size];
-    this.bc = null;
+    this.triplets = new Object[3*size];
+    this.bcId = INVALID_INODE_ID;
+    this.replication = isStriped() ? 0 : size;
-  public BlockCollection getBlockCollection() {
-    return bc;
+  public short getReplication() {
+    return replication;
-  public void setBlockCollection(BlockCollection bc) {
-    this.bc = bc;
+  public void setReplication(short repl) {
+    this.replication = repl;
+  }
+
+  public long getBlockCollectionId() {
+    return bcId;
+  }
+
+  public void setBlockCollectionId(long id) {
+    this.bcId = id;
+  }
+
+  public boolean isDeleted() {
+    return bcId == INVALID_INODE_ID;
-  public boolean isDeleted() {
-    return (bc == null);
-  }
-
-      uc = new BlockUnderConstructionFeature(this, s, targets, this.isStriped());
+      uc = new BlockUnderConstructionFeature(this, s, targets,
+          this.isStriped());
-    uc.removeStaleReplicas(this);
+    List<ReplicaUnderConstruction> staleReplicas = uc.getStaleReplicas(genStamp);
+    for (ReplicaUnderConstruction r : staleReplicas) {
+      r.getExpectedStorageLocation().removeBlock(this);
+      NameNode.blockStateChangeLog.debug("BLOCK* Removing stale replica "
+          + "from location: {}", r.getExpectedStorageLocation());
+    }
