YARN-735. Make ApplicationAttemptId, ContainerId and NodeId immutable. Contributed by Jian He.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488439 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.yarn.proto.YarnProtos.ContainerIdProtoOrBuilder;
+
+import com.google.common.base.Preconditions;
-  ContainerIdProto proto = ContainerIdProto.getDefaultInstance();
+  ContainerIdProto proto = null;
-  boolean viaProto = false;
-  
-    viaProto = true;
+    this.applicationAttemptId = convertFromProtoFormat(proto.getAppAttemptId());
-  public synchronized ContainerIdProto getProto() {
-    mergeLocalToProto();
-    proto = viaProto ? proto : builder.build();
-    viaProto = true;
+  public ContainerIdProto getProto() {
-  private synchronized void mergeLocalToBuilder() {
-    if (this.applicationAttemptId != null && !
-        ((ApplicationAttemptIdPBImpl)applicationAttemptId).getProto().equals(
-            builder.getAppAttemptId())) {
-      builder.setAppAttemptId(convertToProtoFormat(this.applicationAttemptId));
-    }
-  }
-
-  private synchronized void mergeLocalToProto() {
-    if (viaProto) 
-      maybeInitBuilder();
-    mergeLocalToBuilder();
-    proto = builder.build();
-    viaProto = true;
-  }
-
-  private synchronized void maybeInitBuilder() {
-    if (viaProto || builder == null) {
-      builder = ContainerIdProto.newBuilder(proto);
-    }
-    viaProto = false;
-  }
-    
-  
-  public synchronized int getId() {
-    ContainerIdProtoOrBuilder p = viaProto ? proto : builder;
-    return (p.getId());
+  public int getId() {
+    Preconditions.checkNotNull(proto);
+    return proto.getId();
-  public synchronized void setId(int id) {
-    maybeInitBuilder();
+  protected void setId(int id) {
+    Preconditions.checkNotNull(builder);
-  public synchronized ApplicationAttemptId getApplicationAttemptId() {
-    ContainerIdProtoOrBuilder p = viaProto ? proto : builder;
-    if (this.applicationAttemptId != null) {
-      return this.applicationAttemptId;
-    }
-    if (!p.hasAppAttemptId()) {
-      return null;
-    }
-    this.applicationAttemptId = convertFromProtoFormat(p.getAppAttemptId());
+  public ApplicationAttemptId getApplicationAttemptId() {
-  public synchronized void setApplicationAttemptId(ApplicationAttemptId atId) {
-    maybeInitBuilder();
-    if (atId == null) 
-      builder.clearAppAttemptId();
+  protected void setApplicationAttemptId(ApplicationAttemptId atId) {
+    if (atId != null) {
+      Preconditions.checkNotNull(builder);
+      builder.setAppAttemptId(convertToProtoFormat(atId));
+    }
+
+  @Override
+  protected void build() {
+    proto = builder.build();
+    builder = null;
+  }
