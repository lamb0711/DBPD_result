HDFS-12069. Ozone: Create a general abstraction for metadata store. Contributed by Weiwei Yang.

-import org.iq80.leveldb.DBException;
+import org.apache.hadoop.utils.BatchOperation;
-import java.util.AbstractMap;
-import java.util.Map;
-                                    List<Map.Entry<byte[], byte[]>> putBatch)
-      throws IOException {
+      BatchOperation batchOperation) throws IOException {
-    putBatch.add(batchEntry(dbUserKey, newVolList.toByteArray()));
+    batchOperation.put(dbUserKey, newVolList.toByteArray());
-                                      List<Map.Entry<byte[], byte[]>> putBatch,
-                                      List<byte[]> deleteBatch)
+                                      BatchOperation batchOperation)
-      deleteBatch.add(dbUserKey);
+      batchOperation.delete(dbUserKey);
-      putBatch.add(batchEntry(dbUserKey, newVolList.toByteArray()));
+      batchOperation.put(dbUserKey, newVolList.toByteArray());
-  private Map.Entry<byte[], byte[]> batchEntry(byte[] key, byte[] value) {
-    return new AbstractMap.SimpleEntry<>(key, value);
-  }
-
-    List<Map.Entry<byte[], byte[]>> batch = new LinkedList<>();
+      BatchOperation batch = new BatchOperation();
-      batch.add(batchEntry(dbVolumeKey, newVolumeInfo.toByteArray()));
+      batch.put(dbVolumeKey, newVolumeInfo.toByteArray());
-      metadataManager.batchPut(batch);
+      metadataManager.writeBatch(batch);
-    } catch (IOException | DBException ex) {
+    } catch (IOException ex) {
-    List<Map.Entry<byte[], byte[]>> putBatch = new LinkedList<>();
-    List<byte[]> deleteBatch = new LinkedList<>();
-      delVolumeFromOwnerList(volume, volumeArgs.getOwnerName(),
-          putBatch, deleteBatch);
-      addVolumeToOwnerList(volume, owner, putBatch);
+      BatchOperation batch = new BatchOperation();
+      delVolumeFromOwnerList(volume, volumeArgs.getOwnerName(), batch);
+      addVolumeToOwnerList(volume, owner, batch);
-      putBatch.add(batchEntry(dbVolumeKey, newVolumeInfo.toByteArray()));
+      batch.put(dbVolumeKey, newVolumeInfo.toByteArray());
-      metadataManager.batchPutDelete(putBatch, deleteBatch);
+      metadataManager.writeBatch(batch);
-      List<Map.Entry<byte[], byte[]>> putBatch = new LinkedList<>();
-      List<byte[]> deleteBatch = new LinkedList<>();
+      BatchOperation batch = new BatchOperation();
-      delVolumeFromOwnerList(volume, volumeInfo.getOwnerName(),
-          putBatch, deleteBatch);
-      deleteBatch.add(dbVolumeKey);
-      metadataManager.batchPutDelete(putBatch, deleteBatch);
+      delVolumeFromOwnerList(volume, volumeInfo.getOwnerName(), batch);
+      batch.delete(dbVolumeKey);
+      metadataManager.writeBatch(batch);
