HDFS-11103. Ozone: Cleanup some dependencies. Contributed by Anu Engineer.

-import org.apache.hadoop.hdfs.server.datanode.fsdataset.FsDatasetSpi;
-import org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi;
+import org.apache.hadoop.hdfs.server.datanode.StorageLocation;
-import org.apache.hadoop.scm.container.common.helpers.Pipeline;
-import org.apache.hadoop.ozone.container.common.interfaces.ContainerLocationManager;
+import org.apache.hadoop.ozone.container.common.interfaces
+    .ContainerLocationManager;
+import org.apache.hadoop.scm.container.common.helpers.Pipeline;
+import java.util.LinkedList;
+import static org.apache.hadoop.hdfs.DFSConfigKeys.DFS_DATANODE_DATA_DIR_KEY;
-      Configuration config, List<Path> containerDirs,
-      FsDatasetSpi<? extends FsVolumeSpi> dataset) throws IOException {
-
+      Configuration config, List<StorageLocation> containerDirs)
+      throws IOException {
-      for (Path path : containerDirs) {
-        File directory = path.toFile();
+      for (StorageLocation path : containerDirs) {
+        File directory = path.getFile();
-      this.locationManager = new ContainerLocationManagerImpl(config,
-          containerDirs, dataset);
+
+      List<StorageLocation> dataDirs = new LinkedList<>();
+      for (String dir : config.getStrings(DFS_DATANODE_DATA_DIR_KEY)) {
+        StorageLocation location = StorageLocation.parse(dir);
+        dataDirs.add(location);
+      }
+      this.locationManager =
+          new ContainerLocationManagerImpl(containerDirs, dataDirs);
-      LOG.error("creation of container failed. Name: {} "
-          , containerData.getContainerName());
+      LOG.error("creation of container failed. Name: {} ",
+          containerData.getContainerName());
-    public ContainerStatus(ContainerData containerData, boolean active) {
+    ContainerStatus(ContainerData containerData, boolean active) {
