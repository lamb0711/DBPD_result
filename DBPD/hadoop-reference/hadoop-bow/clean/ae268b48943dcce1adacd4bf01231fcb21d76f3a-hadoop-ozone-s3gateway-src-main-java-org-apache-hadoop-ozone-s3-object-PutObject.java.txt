HDDS-518. Implement PutObject Rest endpoint. Contributed by chencan.

+import javax.ws.rs.DefaultValue;
+import javax.ws.rs.QueryParam;
+import javax.ws.rs.core.Context;
+import javax.ws.rs.core.HttpHeaders;
+import javax.ws.rs.core.Response;
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.hdds.conf.OzoneConfiguration;
+import org.apache.hadoop.hdds.scm.ScmConfigKeys;
+import org.apache.hadoop.ozone.s3.EndpointBase;
-import org.apache.hadoop.ozone.s3.EndpointBase;
+import org.apache.http.HttpStatus;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
-@Path("/{volume}/{bucket}/{path:.+}")
+@Path("/{bucket}/{path:.+}")
+  private static final Logger LOG =
+      LoggerFactory.getLogger(PutObject.class);
+
-  public void put(
-      @PathParam("volume") String volumeName,
+  public Response put(
+      @Context HttpHeaders headers,
+      @DefaultValue("STAND_ALONE" ) @QueryParam("replicationType")
+          ReplicationType replicationType,
+      @DefaultValue("ONE") @QueryParam("replicationFactor")
+          ReplicationFactor replicationFactor,
+      @DefaultValue("32 * 1024 * 1024") @QueryParam("chunkSize")
+          String chunkSize,
-    OzoneBucket bucket = getBucket(volumeName, bucketName);
+    try {
+      Configuration config = new OzoneConfiguration();
+      config.set(ScmConfigKeys.OZONE_SCM_CHUNK_SIZE_KEY, chunkSize);
-    OzoneOutputStream output = bucket
-        .createKey(keyPath, length, ReplicationType.STAND_ALONE,
-            ReplicationFactor.ONE);
+      OzoneBucket bucket = getVolume(getOzoneVolumeName(bucketName))
+          .getBucket(bucketName);
+      OzoneOutputStream output = bucket
+          .createKey(keyPath, length, replicationType, replicationFactor);
-    IOUtils.copy(body, output);
-    output.close();
+      IOUtils.copy(body, output);
+      output.close();
+
+      return Response.ok().status(HttpStatus.SC_OK)
+          .header("Content-Length", length)
+          .build();
+    } catch (IOException ex) {
+      LOG.error("Exception occurred in PutObject", ex);
+      throw ex;
+    }
-}
+}
