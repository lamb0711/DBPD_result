MAPREDUCE-6632. Master.getMasterAddress() should be updated to use YARN-4629 (templedf via rkanter)

-import java.net.InetSocketAddress;
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.apache.hadoop.yarn.conf.HAUtil;
-import org.apache.hadoop.yarn.conf.YarnConfiguration;
+import org.apache.hadoop.yarn.client.util.YarnClientUtils;
-
-  private static final Log LOG = LogFactory.getLog(Master.class);
-
-  public static String getMasterUserName(Configuration conf) {
-    String framework = conf.get(MRConfig.FRAMEWORK_NAME, MRConfig.YARN_FRAMEWORK_NAME);
-    if (framework.equals(MRConfig.CLASSIC_FRAMEWORK_NAME)) {    
-      return conf.get(MRConfig.MASTER_USER_NAME);
-    } 
-    else {
-      return conf.get(YarnConfiguration.RM_PRINCIPAL);
-    }
-  }
-  
-  public static InetSocketAddress getMasterAddress(Configuration conf) {
-    String masterAddress;
-    String framework = conf.get(MRConfig.FRAMEWORK_NAME, MRConfig.YARN_FRAMEWORK_NAME);
-    if (framework.equals(MRConfig.CLASSIC_FRAMEWORK_NAME)) {
-      masterAddress = conf.get(MRConfig.MASTER_ADDRESS, "localhost:8012");
-      return NetUtils.createSocketAddr(masterAddress, 8012, MRConfig.MASTER_ADDRESS);
-    } else if (framework.equals(MRConfig.YARN_FRAMEWORK_NAME) &&
-        HAUtil.isHAEnabled(conf)) {
-      YarnConfiguration yarnConf = new YarnConfiguration(conf);
-      if (yarnConf.get(YarnConfiguration.RM_HA_ID) == null) {
-        String[] rmIds = yarnConf.getStrings(YarnConfiguration.RM_HA_IDS);
-        if (rmIds != null && rmIds.length > 0) {
-          // If RM_HA_ID is not configured, use the first one.
-          // Because any valid RM HA ID should work.
-          yarnConf.set(YarnConfiguration.RM_HA_ID, rmIds[0]);
-        } else {
-          LOG.warn("RM_HA_IDS is not configured when RM HA is enabled");
-        }
-      }
-      return yarnConf.getSocketAddr(
-          YarnConfiguration.RM_ADDRESS,
-          YarnConfiguration.DEFAULT_RM_ADDRESS,
-          YarnConfiguration.DEFAULT_RM_PORT);
-    } else {
-      return conf.getSocketAddr(
-          YarnConfiguration.RM_ADDRESS,
-          YarnConfiguration.DEFAULT_RM_ADDRESS,
-          YarnConfiguration.DEFAULT_RM_PORT);
-    }
+  public static String getMasterAddress(Configuration conf) {
+    String masterAddress = conf.get(MRConfig.MASTER_ADDRESS, "localhost:8012");
+
+    return NetUtils.createSocketAddr(masterAddress, 8012,
+            MRConfig.MASTER_ADDRESS).getHostName();
-  public static String getMasterPrincipal(Configuration conf) 
-  throws IOException {
-    String masterHostname = getMasterAddress(conf).getHostName();
-    // get kerberos principal for use as delegation token renewer
-    return SecurityUtil.getServerPrincipal(getMasterUserName(conf), masterHostname);
+  public static String getMasterPrincipal(Configuration conf)
+      throws IOException {
+    String masterPrincipal;
+    String framework = conf.get(MRConfig.FRAMEWORK_NAME,
+            MRConfig.YARN_FRAMEWORK_NAME);
+
+    if (framework.equals(MRConfig.CLASSIC_FRAMEWORK_NAME)) {
+      String masterAddress = getMasterAddress(conf);
+      // get kerberos principal for use as delegation token renewer
+      masterPrincipal =
+          SecurityUtil.getServerPrincipal(conf.get(MRConfig.MASTER_USER_NAME),
+          masterAddress);
+    } else {
+      masterPrincipal = YarnClientUtils.getRmPrincipal(conf);
+    }
+
+    return masterPrincipal;
-  
