YARN-7984. Improved YARN service stop/destroy and clean up.
           Contributed by Billie Rinaldi

-    } catch (IOException | InterruptedException e) {
+    } catch (Exception e) {
-      final UserGroupInformation ugi) throws IOException,
-      InterruptedException, YarnException, FileNotFoundException {
+      final UserGroupInformation ugi) throws Exception {
-      public Integer run() throws IOException, YarnException,
-          FileNotFoundException {
+      public Integer run() throws Exception {
-        result = sc.actionStop(appName, destroy);
-        if (result == EXIT_SUCCESS) {
-          LOG.info("Successfully stopped service {}", appName);
+        Exception stopException = null;
+        try {
+          result = sc.actionStop(appName, destroy);
+          if (result == EXIT_SUCCESS) {
+            LOG.info("Successfully stopped service {}", appName);
+          }
+        } catch (Exception e) {
+          LOG.info("Got exception stopping service", e);
+          stopException = e;
-          LOG.info("Successfully deleted service {}", appName);
+          if (result == EXIT_SUCCESS) {
+            LOG.info("Successfully deleted service {}", appName);
+          }
+        } else {
+          if (stopException != null) {
+            throw stopException;
+          }
-      serviceStatus.setDiagnostics("Successfully destroyed service " +
-          appName);
+      if (result == EXIT_SUCCESS) {
+        serviceStatus.setDiagnostics("Successfully destroyed service " +
+            appName);
+      } else {
+        if (result == EXIT_NOT_FOUND) {
+          serviceStatus
+              .setDiagnostics("Service " + appName + " doesn't exist");
+          return formatResponse(Status.BAD_REQUEST, serviceStatus);
+        } else {
+          serviceStatus
+              .setDiagnostics("Service " + appName + " error cleaning up " +
+                  "registry");
+          return formatResponse(Status.INTERNAL_SERVER_ERROR, serviceStatus);
+        }
+      }
-    } catch (IOException | InterruptedException e) {
+    } catch (Exception e) {
