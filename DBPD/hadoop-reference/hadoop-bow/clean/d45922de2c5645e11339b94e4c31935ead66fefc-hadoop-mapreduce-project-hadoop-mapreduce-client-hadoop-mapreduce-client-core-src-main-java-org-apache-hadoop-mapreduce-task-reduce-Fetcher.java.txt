svn merge --change -1363454 for reverting MAPREDUCE-4423

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1363935 13f79535-47bb-0310-9956-ffa450edef68

-import com.google.common.annotations.VisibleForTesting;
-
+@SuppressWarnings({"deprecation"})
-  @VisibleForTesting
-  protected HttpURLConnection openConnection(URL url) throws IOException {
-    return (HttpURLConnection)url.openConnection();
-  }
-  
-  protected void copyFromHost(MapHost host) throws IOException {
+  private void copyFromHost(MapHost host) throws IOException {
-    if(LOG.isDebugEnabled()) {
-      LOG.debug("Fetcher " + id + " going to fetch from " + host);
-      for (TaskAttemptID tmp: maps) {
-        LOG.debug(tmp);
-      }
+    LOG.debug("Fetcher " + id + " going to fetch from " + host);
+    for (TaskAttemptID tmp: maps) {
+      LOG.debug(tmp);
-      HttpURLConnection connection = openConnection(url);
+      HttpURLConnection connection = (HttpURLConnection)url.openConnection();
-      // On any error, faildTasks is not null and we exit
-      // after putting back the remaining maps to the 
-      // yet_to_be_fetched list and marking the failed tasks.
-      TaskAttemptID[] failedTasks = null;
-      while (!remaining.isEmpty() && failedTasks == null) {
-        failedTasks = copyMapOutput(host, input, remaining);
-      }
-      
-      if(failedTasks != null) {
-        for(TaskAttemptID left: failedTasks) {
-          scheduler.copyFailed(left, host, true);
-        }
+      // On any error, good becomes false and we exit after putting back
+      // the remaining maps to the yet_to_be_fetched list
+      boolean good = true;
+      while (!remaining.isEmpty() && good) {
+        good = copyMapOutput(host, input, remaining);
-      if (failedTasks == null && !remaining.isEmpty()) {
+      if (good && !remaining.isEmpty()) {
-  }
+      
+   }
-  private TaskAttemptID[] copyMapOutput(MapHost host,
+  private boolean copyMapOutput(MapHost host,
-        //Don't know which one was bad, so consider all of them as bad
-        return remaining.toArray(new TaskAttemptID[remaining.size()]);
+        return false;
-        return new TaskAttemptID[] {mapId};
+        return false;
-        return new TaskAttemptID[] {mapId};
+        return false;
-      return null;
+      return true;
-        if(mapId == null) {
-          return remaining.toArray(new TaskAttemptID[remaining.size()]);
-        } else {
-          return new TaskAttemptID[] {mapId};
-        }
+        return false;
+      scheduler.copyFailed(mapId, host, true);
-      return new TaskAttemptID[] {mapId};
+      return false;
