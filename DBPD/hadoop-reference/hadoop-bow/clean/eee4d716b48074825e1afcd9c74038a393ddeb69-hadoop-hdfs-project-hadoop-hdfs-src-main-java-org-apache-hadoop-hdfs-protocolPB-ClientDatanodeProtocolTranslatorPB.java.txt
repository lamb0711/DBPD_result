HDFS-8895. Remove deprecated BlockStorageLocation APIs.

-import java.util.ArrayList;
-import org.apache.hadoop.hdfs.protocol.HdfsBlocksMetadata;
-import org.apache.hadoop.hdfs.protocol.proto.ClientDatanodeProtocolProtos.GetHdfsBlockLocationsRequestProto;
-import org.apache.hadoop.hdfs.protocol.proto.ClientDatanodeProtocolProtos.GetHdfsBlockLocationsResponseProto;
-import org.apache.hadoop.security.proto.SecurityProtos.TokenProto;
-import com.google.common.primitives.Longs;
-import com.google.protobuf.ByteString;
-  public HdfsBlocksMetadata getHdfsBlocksMetadata(String blockPoolId,
-      long[] blockIds,
-      List<Token<BlockTokenIdentifier>> tokens) throws IOException {
-    List<TokenProto> tokensProtos = 
-        new ArrayList<TokenProto>(tokens.size());
-    for (Token<BlockTokenIdentifier> t : tokens) {
-      tokensProtos.add(PBHelper.convert(t));
-    }
-    // Build the request
-    GetHdfsBlockLocationsRequestProto request = 
-        GetHdfsBlockLocationsRequestProto.newBuilder()
-        .setBlockPoolId(blockPoolId)
-        .addAllBlockIds(Longs.asList(blockIds))
-        .addAllTokens(tokensProtos)
-        .build();
-    // Send the RPC
-    GetHdfsBlockLocationsResponseProto response;
-    try {
-      response = rpcProxy.getHdfsBlockLocations(NULL_CONTROLLER, request);
-    } catch (ServiceException e) {
-      throw ProtobufHelper.getRemoteException(e);
-    }
-    // List of volumes in the response
-    List<ByteString> volumeIdsByteStrings = response.getVolumeIdsList();
-    List<byte[]> volumeIds = new ArrayList<byte[]>(volumeIdsByteStrings.size());
-    for (ByteString bs : volumeIdsByteStrings) {
-      volumeIds.add(bs.toByteArray());
-    }
-    // Array of indexes into the list of volumes, one per block
-    List<Integer> volumeIndexes = response.getVolumeIndexesList();
-    // Parsed HdfsVolumeId values, one per block
-    return new HdfsBlocksMetadata(blockPoolId, blockIds,
-        volumeIds, volumeIndexes);
-  }
-
-  @Override
