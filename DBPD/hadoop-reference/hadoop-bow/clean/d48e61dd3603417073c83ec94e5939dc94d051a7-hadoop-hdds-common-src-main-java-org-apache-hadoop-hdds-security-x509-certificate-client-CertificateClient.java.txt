HDDS-1012. Add Default CertificateClient implementation. Contributed by Ajay Kumar

-   * @param component - String name like DN, OM, SCM etc.
-  PrivateKey getPrivateKey(String component);
+  PrivateKey getPrivateKey();
-   * @param component - String name like DN, OM, SCM etc.
-  PublicKey getPublicKey(String component);
+  PublicKey getPublicKey();
-   * @param component - String name like DN, OM, SCM etc.
+
-  X509Certificate getCertificate(String component);
+  X509Certificate getCertificate();
-   * @param component - name of the component.
-  byte[] signDataStream(InputStream stream, String component)
+  byte[] signDataStream(InputStream stream)
+  byte[] signData(byte[] data) throws CertificateException;
+
-      X509Certificate cert);
+      X509Certificate cert) throws CertificateException;
-      X509Certificate cert);
+      X509Certificate cert) throws CertificateException;
-   * Stores the private key of a specified component.
-   *
-   * @param key - private key
-   * @param component - name of the component.
-   * @throws CertificateException - on Error.
-   */
-  void storePrivateKey(PrivateKey key, String component)
-      throws CertificateException;
-
-  /**
-   * Stores the public key of a specified component.
-   *
-   * @param key - public key
-   * @param component - name of the component.
-   * @throws CertificateException - on Error.
-   */
-  void storePublicKey(PublicKey key, String component)
-      throws CertificateException;
-
-  /**
-   * Stores the Certificate of a specific component.
+   * Stores the Certificate.
-   * @param component - Name of the component.
+
-  void storeCertificate(X509Certificate certificate, String component)
+  void storeCertificate(X509Certificate certificate)
-   * Stores the trusted chain of certificates for a specific component.
+   * Stores the trusted chain of certificates.
-   * @param component - Trust Chain.
-  void storeTrustChain(CertStore certStore,
-      String component) throws CertificateException;
+  void storeTrustChain(CertStore certStore) throws CertificateException;
-   * Stores the trusted chain of certificates for a specific component.
+   * Stores the trusted chain of certificates.
-   * @param component - String component.
+
-  void storeTrustChain(List<X509Certificate> certificates,
-      String component) throws CertificateException;
+  void storeTrustChain(List<X509Certificate> certificates)
+      throws CertificateException;
+
+  /**
+   * Initialize certificate client.
+   *
+   * */
+  InitResponse init() throws CertificateException;
+
+  /**
+   * Represents initialization response of client.
+   * 1. SUCCESS: Means client is initialized successfully and all required
+   *              files are in expected state.
+   * 2. FAILURE: Initialization failed due to some unrecoverable error.
+   * 3. GETCERT: Bootstrap of keypair is successful but certificate is not
+   *             found. Client should request SCM signed certificate.
+   *
+   */
+  enum InitResponse {
+    SUCCESS,
+    FAILURE,
+    GETCERT,
+    RECOVER
+  }
