YARN-3145. Fixed ConcurrentModificationException on CapacityScheduler ParentQueue#getQueueUserAclInfo. Contributed by Tsuyoshi OZAWA

-  void setChildQueues(Collection<CSQueue> childQueues) {
+  synchronized void setChildQueues(Collection<CSQueue> childQueues) {
-    for (Iterator<CSQueue> iter=childQueues.iterator(); iter.hasNext();) {
+    for (Iterator<CSQueue> iter = childQueues.iterator(); iter.hasNext();) {
-      }
-      // Note that this is using an iterator on the childQueues so this can't be
-      // called if already within an iterator for the childQueues. Like  
-      // from assignContainersToChildQueues.
-      if (sortQueues) {
-        // reinsert the updated queue
-        for (Iterator<CSQueue> iter=childQueues.iterator(); iter.hasNext();) {
-          CSQueue csqueue = iter.next();
-          if(csqueue.equals(completedChildQueue))
-          {
-            iter.remove();
-            LOG.info("Re-sorting completed queue: " + csqueue.getQueuePath() + 
-                " stats: " + csqueue);
-            childQueues.add(csqueue);
-            break;
+        // Note that this is using an iterator on the childQueues so this can't
+        // be called if already within an iterator for the childQueues. Like
+        // from assignContainersToChildQueues.
+        if (sortQueues) {
+          // reinsert the updated queue
+          for (Iterator<CSQueue> iter = childQueues.iterator();
+               iter.hasNext();) {
+            CSQueue csqueue = iter.next();
+            if(csqueue.equals(completedChildQueue)) {
+              iter.remove();
+              LOG.info("Re-sorting completed queue: " + csqueue.getQueuePath() +
+                  " stats: " + csqueue);
+              childQueues.add(csqueue);
+              break;
+            }
-      
+
-  public void collectSchedulerApplications(
+  public synchronized void collectSchedulerApplications(
