HDFS-15003. RBF: Make Router support storage type quota. Contributed by Jinglun.

+import org.apache.hadoop.fs.StorageType;
+import org.apache.hadoop.hdfs.protocol.HdfsConstants;
+        long[] typeQuota = new long[StorageType.values().length];
+        Quota.eachByStorageType(
+            t -> typeQuota[t.ordinal()] = oldQuota.getTypeQuota(t));
-          currentQuotaUsage = new RouterQuotaUsage.Builder()
-              .fileAndDirectoryCount(0)
-              .quota(nsQuota)
-              .spaceConsumed(0)
-              .spaceQuota(ssQuota).build();
+          long[] zeroConsume = new long[StorageType.values().length];
+          currentQuotaUsage =
+              new RouterQuotaUsage.Builder().fileAndDirectoryCount(0)
+                  .quota(nsQuota).spaceConsumed(0).spaceQuota(ssQuota)
+                  .typeConsumed(zeroConsume)
+                  .typeQuota(typeQuota).build();
+    for (StorageType t : StorageType.values()) {
+      if (remoteQuota.getTypeQuota(t) != gQuota.getTypeQuota(t)) {
+        this.rpcServer.getQuotaModule()
+            .setQuotaInternal(location.getSrc(), Arrays.asList(location),
+                HdfsConstants.QUOTA_DONT_SET, gQuota.getTypeQuota(t), t);
+        LOG.info("[Fix Quota] src={} dst={} type={} oldQuota={} newQuota={}",
+            location.getSrc(), location, t, remoteQuota.getTypeQuota(t),
+            gQuota.getTypeQuota(t));
+      }
+    }
-    RouterQuotaUsage newQuota = new RouterQuotaUsage.Builder()
+    RouterQuotaUsage.Builder newQuotaBuilder = new RouterQuotaUsage.Builder()
-        .spaceQuota(oldQuota.getSpaceQuota()).build();
-    return newQuota;
+        .spaceQuota(oldQuota.getSpaceQuota());
+    Quota.eachByStorageType(t -> {
+      newQuotaBuilder.typeQuota(t, oldQuota.getTypeQuota(t));
+      newQuotaBuilder.typeConsumed(t, currentQuotaUsage.getTypeConsumed(t));
+    });
+    return newQuotaBuilder.build();
