HDFS-14037. Fix SSLFactory truststore reloader thread leak in URLConnectionFactory.

-import java.security.GeneralSecurityException;
-
-import javax.net.ssl.HostnameVerifier;
-import javax.net.ssl.HttpsURLConnection;
-import javax.net.ssl.SSLSocketFactory;
-import org.apache.hadoop.security.ssl.SSLFactory;
-      conn = newSslConnConfigurator(connectTimeout, readTimeout, conf);
+      conn = new SSLConnectionConfigurator(connectTimeout, readTimeout, conf);
-          = newSslConnConfigurator(connectTimeout, readTimeout, conf);
+          = new SSLConnectionConfigurator(connectTimeout, readTimeout, conf);
-  private static ConnectionConfigurator newSslConnConfigurator(
-      final int connectTimeout, final int readTimeout, Configuration conf)
-      throws IOException, GeneralSecurityException {
-    final SSLFactory factory;
-    final SSLSocketFactory sf;
-    final HostnameVerifier hv;
-
-    factory = new SSLFactory(SSLFactory.Mode.CLIENT, conf);
-    factory.init();
-    sf = factory.createSSLSocketFactory();
-    hv = factory.getHostnameVerifier();
-
-    return new ConnectionConfigurator() {
-      @Override
-      public HttpURLConnection configure(HttpURLConnection conn)
-          throws IOException {
-        if (conn instanceof HttpsURLConnection) {
-          HttpsURLConnection c = (HttpsURLConnection) conn;
-          c.setSSLSocketFactory(sf);
-          c.setHostnameVerifier(hv);
-        }
-        URLConnectionFactory.setTimeouts(conn, connectTimeout, readTimeout);
-        return conn;
-      }
-    };
-  }
-
+
+  public void destroy() {
+    if (connConfigurator instanceof SSLConnectionConfigurator) {
+      ((SSLConnectionConfigurator) connConfigurator).destroy();
+    }
+  }
