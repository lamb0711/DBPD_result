YARN-7275. NM Statestore cleanup for Container updates. (Kartheek Muthyala via asuresh)

+
+import org.apache.hadoop.yarn.api.records.Token;
+import org.apache.hadoop.yarn.security.ContainerTokenIdentifier;
-import org.apache.hadoop.yarn.api.records.Resource;
-import org.apache.hadoop.yarn.api.records.impl.pb.ProtoUtils;
-import org.apache.hadoop.yarn.proto.YarnProtos.ResourceProto;
+import org.apache.hadoop.yarn.proto.YarnSecurityTokenProtos.ContainerTokenIdentifierProto;
-  private static final String CONTAINER_RESOURCE_CHANGED_KEY_SUFFIX =
-      "/resourceChanged";
+  private static final String CONTAINER_UPDATE_TOKEN_SUFFIX =
+      "/updateToken";
-      } else if (suffix.equals(CONTAINER_RESOURCE_CHANGED_KEY_SUFFIX)) {
-        rcs.capability = new ResourcePBImpl(
-            ResourceProto.parseFrom(entry.getValue()));
+      } else if (suffix.equals(CONTAINER_UPDATE_TOKEN_SUFFIX)) {
+        ContainerTokenIdentifierProto tokenIdentifierProto =
+            ContainerTokenIdentifierProto.parseFrom(entry.getValue());
+        Token currentToken = rcs.getStartRequest().getContainerToken();
+        Token updatedToken = Token
+            .newInstance(tokenIdentifierProto.toByteArray(),
+                ContainerTokenIdentifier.KIND.toString(),
+                currentToken.getPassword().array(), currentToken.getService());
+        rcs.startRequest.setContainerToken(updatedToken);
+        rcs.capability = new ResourcePBImpl(tokenIdentifierProto.getResource());
+        rcs.version = tokenIdentifierProto.getVersion();
+  private void removeContainerQueued(ContainerId containerId)
+      throws IOException {
+    if (LOG.isDebugEnabled()) {
+      LOG.debug("removeContainerQueued: containerId=" + containerId);
+    }
+
+    String key = CONTAINERS_KEY_PREFIX + containerId.toString()
+        + CONTAINER_QUEUED_KEY_SUFFIX;
+    try {
+      db.delete(bytes(key));
+    } catch (DBException e) {
+      throw new IOException(e);
+    }
+  }
+
+    // Removing the container if queued for backward compatibility reasons
+    removeContainerQueued(containerId);
-  public void storeContainerResourceChanged(ContainerId containerId,
-      int containerVersion, Resource capability) throws IOException {
+  public void storeContainerUpdateToken(ContainerId containerId,
+      ContainerTokenIdentifier containerTokenIdentifier) throws IOException {
-      LOG.debug("storeContainerResourceChanged: containerId=" + containerId
-          + ", capability=" + capability);
+      LOG.debug("storeContainerUpdateToken: containerId=" + containerId);
-    String keyResChng = CONTAINERS_KEY_PREFIX + containerId.toString()
-        + CONTAINER_RESOURCE_CHANGED_KEY_SUFFIX;
+    String keyUpdateToken = CONTAINERS_KEY_PREFIX + containerId.toString()
+        + CONTAINER_UPDATE_TOKEN_SUFFIX;
+
-        batch.put(bytes(keyResChng),
-            ProtoUtils.convertToProtoFormat(capability).toByteArray());
-        batch.put(bytes(keyVersion), bytes(Integer.toString(containerVersion)));
+        batch.put(bytes(keyUpdateToken),
+            containerTokenIdentifier.getProto().toByteArray());
+        batch.put(bytes(keyVersion),
+            bytes(Integer.toString(containerTokenIdentifier.getVersion())));
+        batch.delete(bytes(keyPrefix + CONTAINER_UPDATE_TOKEN_SUFFIX));
