HDFS-4432. Support INodeFileUnderConstructionWithSnapshot in FSImage saving/loading. Contributed by Jing Zhao.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1439682 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.namenode.snapshot.FileWithSnapshot;
-import org.apache.hadoop.hdfs.server.namenode.snapshot.INodeFileWithSnapshot;
+import org.apache.hadoop.hdfs.server.namenode.snapshot.INodeFileUnderConstructionSnapshot;
+import org.apache.hadoop.hdfs.server.namenode.snapshot.INodeFileUnderConstructionWithSnapshot;
-                            DataInputStream in) throws IOException {
+      DataInputStream in, boolean supportSnapshot) throws IOException {
+    boolean withSnapshot = false;
+    if (supportSnapshot) {
+      withSnapshot = in.readBoolean();
+    }
-    return new INodeFileUnderConstruction(INodeId.GRANDFATHER_INODE_ID,
-                                          name,
-                                          blockReplication, 
-                                          modificationTime,
-                                          preferredBlockSize,
-                                          blocks,
-                                          perm,
-                                          clientName,
-                                          clientMachine,
-                                          null);
+    INodeFileUnderConstruction node = new INodeFileUnderConstruction(
+        INodeId.GRANDFATHER_INODE_ID, name, blockReplication, modificationTime,
+        preferredBlockSize, blocks, perm, clientName, clientMachine, null);
+    return withSnapshot ? new INodeFileUnderConstructionWithSnapshot(node)
+        : node;
+    out.writeBoolean(cons instanceof INodeFileUnderConstructionWithSnapshot);
-   * @param out The {@link DataOutput} where the fields are written
+   * @param out The {@link DataOutputStream} where the fields are written
-  public static void writeINodeFile(INodeFile node, DataOutput out,
+  public static void writeINodeFile(INodeFile node, DataOutputStream out,
-    if (node instanceof INodeFileSnapshot) {
-      out.writeLong(((INodeFileSnapshot) node).computeFileSize(true));
+    if (node instanceof INodeFileSnapshot
+        || node instanceof INodeFileUnderConstructionSnapshot) {
+      out.writeLong(node.computeFileSize(true));
+      if (node instanceof INodeFileUnderConstructionSnapshot) {
+        out.writeBoolean(true);
+        writeString(((INodeFileUnderConstruction) node).getClientName(), out);
+        writeString(((INodeFileUnderConstruction) node).getClientMachine(), out);
+      } else {
+        out.writeBoolean(false);
+      }
-      out.writeBoolean(node instanceof INodeFileWithSnapshot);
+      out.writeBoolean(node instanceof FileWithSnapshot);
-  static void saveINode2Image(INode node, DataOutput out)
+  static void saveINode2Image(INode node, DataOutputStream out)
