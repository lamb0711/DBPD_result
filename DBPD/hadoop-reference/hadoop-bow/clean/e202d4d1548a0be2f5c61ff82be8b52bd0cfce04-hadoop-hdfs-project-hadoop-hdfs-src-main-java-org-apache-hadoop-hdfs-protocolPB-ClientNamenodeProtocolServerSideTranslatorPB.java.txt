HDFS-5213. Separate PathBasedCacheEntry and PathBasedCacheDirectiveWithId. Contributed by Colin Patrick McCabe.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1524561 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.protocol.AddPathBasedCacheDirectiveException.PathAlreadyExistsInPoolError;
-import org.apache.hadoop.hdfs.protocol.PathBasedCacheEntry;
-import org.apache.hadoop.hdfs.protocol.RemovePathBasedCacheEntryException.InvalidIdException;
-import org.apache.hadoop.hdfs.protocol.RemovePathBasedCacheEntryException.NoSuchIdException;
-import org.apache.hadoop.hdfs.protocol.RemovePathBasedCacheEntryException.RemovePermissionDeniedException;
+import org.apache.hadoop.hdfs.protocol.PathBasedCacheDescriptor;
+import org.apache.hadoop.hdfs.protocol.RemovePathBasedCacheDescriptorException.InvalidIdException;
+import org.apache.hadoop.hdfs.protocol.RemovePathBasedCacheDescriptorException.NoSuchIdException;
+import org.apache.hadoop.hdfs.protocol.RemovePathBasedCacheDescriptorException.RemovePermissionDeniedException;
-import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.ListPathBasedCacheEntriesElementProto;
-import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.ListPathBasedCacheEntriesRequestProto;
-import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.ListPathBasedCacheEntriesResponseProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.ListPathBasedCacheDescriptorsElementProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.ListPathBasedCacheDescriptorsRequestProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.ListPathBasedCacheDescriptorsResponseProto;
-import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RemovePathBasedCacheEntriesRequestProto;
-import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RemovePathBasedCacheEntriesResponseProto;
-import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RemovePathBasedCacheEntryErrorProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RemovePathBasedCacheDescriptorsRequestProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RemovePathBasedCacheDescriptorsResponseProto;
+import org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.RemovePathBasedCacheDescriptorErrorProto;
-      List<Fallible<PathBasedCacheEntry>> output = server.addPathBasedCacheDirectives(input);
+      List<Fallible<PathBasedCacheDescriptor>> output = server.addPathBasedCacheDirectives(input);
-          PathBasedCacheEntry entry = output.get(idx).get();
-          builder.addResults(entry.getEntryId());
+          PathBasedCacheDescriptor directive = output.get(idx).get();
+          builder.addResults(directive.getEntryId());
+          } else if (ioe.getCause() instanceof PathAlreadyExistsInPoolError) {
+            builder.addResults(AddPathBasedCacheDirectiveErrorProto.
+                PATH_ALREADY_EXISTS_IN_POOL_ERROR_VALUE);
-  public RemovePathBasedCacheEntriesResponseProto removePathBasedCacheEntries(
-      RpcController controller, RemovePathBasedCacheEntriesRequestProto request)
+  public RemovePathBasedCacheDescriptorsResponseProto removePathBasedCacheDescriptors(
+      RpcController controller, RemovePathBasedCacheDescriptorsRequestProto request)
-         server.removePathBasedCacheEntries(request.getElementsList());
-      RemovePathBasedCacheEntriesResponseProto.Builder builder =
-         RemovePathBasedCacheEntriesResponseProto.newBuilder();
+         server.removePathBasedCacheDescriptors(request.getElementsList());
+      RemovePathBasedCacheDescriptorsResponseProto.Builder builder =
+         RemovePathBasedCacheDescriptorsResponseProto.newBuilder();
-          builder.addResults(RemovePathBasedCacheEntryErrorProto.
+          builder.addResults(RemovePathBasedCacheDescriptorErrorProto.
-          builder.addResults(RemovePathBasedCacheEntryErrorProto.
+          builder.addResults(RemovePathBasedCacheDescriptorErrorProto.
-          builder.addResults(RemovePathBasedCacheEntryErrorProto.
+          builder.addResults(RemovePathBasedCacheDescriptorErrorProto.
-          builder.addResults(RemovePathBasedCacheEntryErrorProto.
+          builder.addResults(RemovePathBasedCacheDescriptorErrorProto.
-  public ListPathBasedCacheEntriesResponseProto listPathBasedCacheEntries(
-      RpcController controller, ListPathBasedCacheEntriesRequestProto request)
+  public ListPathBasedCacheDescriptorsResponseProto listPathBasedCacheDescriptors(
+      RpcController controller, ListPathBasedCacheDescriptorsRequestProto request)
-      RemoteIterator<PathBasedCacheEntry> iter =
-         server.listPathBasedCacheEntries(request.getPrevId(),
+      RemoteIterator<PathBasedCacheDescriptor> iter =
+         server.listPathBasedCacheDescriptors(request.getPrevId(),
-      ListPathBasedCacheEntriesResponseProto.Builder builder =
-          ListPathBasedCacheEntriesResponseProto.newBuilder();
+      ListPathBasedCacheDescriptorsResponseProto.Builder builder =
+          ListPathBasedCacheDescriptorsResponseProto.newBuilder();
-        PathBasedCacheEntry entry = iter.next();
+        PathBasedCacheDescriptor directive = iter.next();
-            ListPathBasedCacheEntriesElementProto.newBuilder().
-              setId(entry.getEntryId()).
-              setPath(entry.getDirective().getPath()).
-              setPool(entry.getDirective().getPool()));
-        prevId = entry.getEntryId();
+            ListPathBasedCacheDescriptorsElementProto.newBuilder().
+              setId(directive.getEntryId()).
+              setPath(directive.getPath()).
+              setPool(directive.getPool()));
+        prevId = directive.getEntryId();
-        iter = server.listPathBasedCacheEntries(prevId, request.getPool(),
-            request.getPath());
+        iter = server.listPathBasedCacheDescriptors(prevId, 
+            request.hasPool() ? request.getPool() : null,
+            request.hasPath() ? request.getPath() : null);
