YARN-7666. Introduce scheduler specific environment variable support in ApplicationSubmissionContext for better scheduling placement configurations. (Sunil G via wangda)

Change-Id: I0fd826490f5160d47d42af2a9ac0bd8ec4e959dc

+import org.apache.hadoop.yarn.proto.YarnProtos.StringStringMapProto;
+  private Map<String, String> schedulingProperties = null;
+    if (this.schedulingProperties != null) {
+      addApplicationSchedulingProperties();
+    }
-}  
+
+  private void addApplicationSchedulingProperties() {
+    maybeInitBuilder();
+    builder.clearApplicationSchedulingProperties();
+    if (this.schedulingProperties == null) {
+      return;
+    }
+    Iterable<? extends StringStringMapProto> values =
+        new Iterable<StringStringMapProto>() {
+
+      @Override
+      public Iterator<StringStringMapProto> iterator() {
+        return new Iterator<StringStringMapProto>() {
+          private Iterator<String> iterator = schedulingProperties.keySet()
+              .iterator();
+
+          @Override
+          public boolean hasNext() {
+            return iterator.hasNext();
+          }
+
+          @Override
+          public StringStringMapProto next() {
+            String key = iterator.next();
+            return StringStringMapProto.newBuilder()
+                .setValue(schedulingProperties.get(key)).setKey(key).build();
+          }
+
+          @Override
+          public void remove() {
+            throw new UnsupportedOperationException();
+          }
+        };
+      }
+    };
+    this.builder.addAllApplicationSchedulingProperties(values);
+  }
+
+  private void initApplicationSchedulingProperties() {
+    if (this.schedulingProperties != null) {
+      return;
+    }
+    ApplicationSubmissionContextProtoOrBuilder p = viaProto ? proto : builder;
+    List<StringStringMapProto> properties = p
+        .getApplicationSchedulingPropertiesList();
+    this.schedulingProperties = new HashMap<String, String>(properties.size());
+    for (StringStringMapProto envProto : properties) {
+      this.schedulingProperties.put(envProto.getKey(), envProto.getValue());
+    }
+  }
+
+  @Override
+  public Map<String, String> getApplicationSchedulingPropertiesMap() {
+    initApplicationSchedulingProperties();
+    return this.schedulingProperties;
+  }
+
+  @Override
+  public void setApplicationSchedulingPropertiesMap(
+      Map<String, String> schedulingPropertyMap) {
+    if (schedulingPropertyMap == null) {
+      return;
+    }
+    initApplicationSchedulingProperties();
+    this.schedulingProperties.clear();
+    this.schedulingProperties.putAll(schedulingPropertyMap);
+  }
+}
