Reverting the previous trunk merge since it added other unintended changes in addition


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1177127 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.apache.hadoop.yarn.api.records.ApplicationReport;
-  private static final Log LOG = LogFactory.getLog(NotRunningJob.class);
-  
-  private final ApplicationReport applicationReport;
-  
-  
-  private ApplicationReport getUnknownApplicationReport() {
-    ApplicationReport unknown = 
-        recordFactory.newRecordInstance(ApplicationReport.class);
-    unknown.setUser("N/A");
-    unknown.setHost("N/A");
-    unknown.setName("N/A");
-    unknown.setQueue("N/A");
-    unknown.setStartTime(0);
-    unknown.setFinishTime(0);
-    unknown.setTrackingUrl("N/A");
-    unknown.setDiagnostics("N/A");
-    LOG.info("getUnknownApplicationReport");
-    return unknown;
-  }
-  
-  NotRunningJob(ApplicationReport applicationReport, JobState jobState) {
-    this.applicationReport = 
-        (applicationReport ==  null) ? 
-            getUnknownApplicationReport() : applicationReport;
+  private final String user;
+
+  NotRunningJob(String username, JobState jobState) {
+    this.user = username;
+    GetJobReportResponse resp = 
+      recordFactory.newRecordInstance(GetJobReportResponse.class);
-    jobReport.setJobState(jobState);
-    jobReport.setUser(applicationReport.getUser());
-    jobReport.setStartTime(applicationReport.getStartTime());
-    jobReport.setDiagnostics(applicationReport.getDiagnostics());
-    jobReport.setJobName(applicationReport.getName());
-    jobReport.setTrackingUrl(applicationReport.getTrackingUrl());
-    jobReport.setFinishTime(applicationReport.getFinishTime());
+    jobReport.setJobState(this.jobState);
-    GetJobReportResponse resp = 
-        recordFactory.newRecordInstance(GetJobReportResponse.class);
+    jobReport.setUser(this.user);
+    // TODO: Add jobName & other job information that is available
