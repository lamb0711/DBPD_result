HDFS-8735. Inotify: All events classes should implement toString() API. Contributed by Surendra Singh Lilhore.

+  @InterfaceAudience.Public
+
+    @Override
+    @InterfaceStability.Unstable
+    public String toString() {
+      return "CloseEvent [path=" + path + ", fileSize=" + fileSize
+          + ", timestamp=" + timestamp + "]";
+    }
+
+  @InterfaceAudience.Public
+
+    @Override
+    @InterfaceStability.Unstable
+    public String toString() {
+      StringBuilder content = new StringBuilder();
+      content.append("CreateEvent [INodeType=" + iNodeType + ", path=" + path
+          + ", ctime=" + ctime + ", replication=" + replication
+          + ", ownerName=" + ownerName + ", groupName=" + groupName
+          + ", perms=" + perms + ", ");
+
+      if (symlinkTarget != null) {
+        content.append("symlinkTarget=" + symlinkTarget + ", ");
+      }
+
+      content.append("overwrite=" + overwrite + ", defaultBlockSize="
+          + defaultBlockSize + "]");
+      return content.toString();
+    }
+
+  @InterfaceAudience.Public
+    @Override
+    @InterfaceStability.Unstable
+    public String toString() {
+      StringBuilder content = new StringBuilder();
+      content.append("MetadataUpdateEvent [path=" + path + ", metadataType="
+          + metadataType);
+      switch (metadataType) {
+      case TIMES:
+        content.append(", mtime=" + mtime + ", atime=" + atime);
+        break;
+      case REPLICATION:
+        content.append(", replication=" + replication);
+        break;
+      case OWNER:
+        content.append(", ownerName=" + ownerName
+            + ", groupName=" + groupName);
+        break;
+      case PERMS:
+        content.append(", perms=" + perms);
+        break;
+      case ACLS:
+        content.append(", acls=" + acls);
+        break;
+      case XATTRS:
+        content.append(", xAttrs=" + xAttrs + ", xAttrsRemoved="
+            + xAttrsRemoved);
+        break;
+      default:
+        break;
+      }
+      content.append(']');
+      return content.toString();
+    }
+  @InterfaceAudience.Public
+
+    @Override
+    @InterfaceStability.Unstable
+    public String toString() {
+      return "RenameEvent [srcPath=" + srcPath + ", dstPath=" + dstPath
+          + ", timestamp=" + timestamp + "]";
+    }
+
+  @InterfaceAudience.Public
+
+    @Override
+    @InterfaceStability.Unstable
+    public String toString() {
+      return "AppendEvent [path=" + path + ", newBlock=" + newBlock + "]";
+    }
+
+  @InterfaceAudience.Public
+
+    @Override
+    @InterfaceStability.Unstable
+    public String toString() {
+      return "UnlinkEvent [path=" + path + ", timestamp=" + timestamp + "]";
+    }
+  @InterfaceAudience.Public
+
+    @Override
+    @InterfaceStability.Unstable
+    public String toString() {
+      return "TruncateEvent [path=" + path + ", fileSize=" + fileSize
+          + ", timestamp=" + timestamp + "]";
+    }
