HDFS-5191. Revisit zero-copy API in FSDataInputStream to make it more intuitive (Contributed by Colin Patrick McCabe)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1526020 13f79535-47bb-0310-9956-ffa450edef68

-  public boolean readZeroCopy(HdfsZeroCopyCursor cursor,
-        LocatedBlock curBlock, long blockPos, int toRead,
-        ClientMmapManager mmapManager) {
+  public ClientMmap getClientMmap(LocatedBlock curBlock,
+      ClientMmapManager mmapManager) {
-        return false;
+        return null;
-          return false;
+          return null;
-        return false;
+        return null;
-        return false;
+        return null;
-    long limit = blockPos + toRead;
-    if (limit > Integer.MAX_VALUE) {
-      /*
-       * In Java, ByteBuffers use a 32-bit length, capacity, offset, etc.
-       * This limits our mmap'ed regions to 2 GB in length.
-       * TODO: we can implement zero-copy for larger blocks by doing multiple
-       * mmaps.
-       */
-      mmapDisabled = true;
-      clientMmap.unref();
-      clientMmap = null;
-      return false;
-    }
-    ByteBuffer mmapBuffer = clientMmap.getMappedByteBuffer().duplicate();
-    mmapBuffer.position((int)blockPos);
-    mmapBuffer.limit((int)limit);
-    cursor.setMmap(clientMmap, mmapBuffer);
-    return true;
+    return clientMmap;
