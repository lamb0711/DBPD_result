HDFS-6708. StorageType should be encoded in the block token. Contributed by Ewan Higgs

+import java.util.Arrays;
+import java.util.Optional;
+import org.apache.hadoop.fs.StorageType;
+  private StorageType[] storageTypes;
-    this(null, null, 0, EnumSet.noneOf(AccessMode.class), false);
+    this(null, null, 0, EnumSet.noneOf(AccessMode.class), null, false);
-      EnumSet<AccessMode> modes, boolean useProto) {
+      EnumSet<AccessMode> modes, StorageType[] storageTypes, boolean useProto) {
+    this.storageTypes = Optional.ofNullable(storageTypes)
+                                .orElse(StorageType.EMPTY_ARRAY);
+  public StorageType[] getStorageTypes(){
+    return storageTypes;
+  }
+
-        + this.getAccessModes() + ")";
+        + this.getAccessModes() + ", storageTypes= "
+        + Arrays.toString(this.getStorageTypes()) + ")";
-          && isEqual(this.modes, that.modes);
+          && isEqual(this.modes, that.modes)
+          && Arrays.equals(this.storageTypes, that.storageTypes);
-        ^ (blockPoolId == null ? 0 : blockPoolId.hashCode());
+        ^ (blockPoolId == null ? 0 : blockPoolId.hashCode())
+        ^ (storageTypes == null ? 0 : Arrays.hashCode(storageTypes));
+
+    length = WritableUtils.readVInt(in);
+    StorageType[] readStorageTypes = new StorageType[length];
+    for (int i = 0; i < length; i++) {
+      readStorageTypes[i] = WritableUtils.readEnum(in, StorageType.class);
+    }
+    storageTypes = readStorageTypes;
+
+    storageTypes = blockTokenSecretProto.getStorageTypesList().stream()
+        .map(PBHelperClient::convertStorageType)
+        .toArray(StorageType[]::new);
+    WritableUtils.writeVInt(out, storageTypes.length);
+    for (StorageType type: storageTypes){
+      WritableUtils.writeEnum(out, type);
+    }
-}
+}
