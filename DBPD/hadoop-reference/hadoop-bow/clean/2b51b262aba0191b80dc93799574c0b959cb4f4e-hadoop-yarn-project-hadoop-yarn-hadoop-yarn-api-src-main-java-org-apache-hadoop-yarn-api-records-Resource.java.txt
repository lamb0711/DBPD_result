YARN-6892. [YARN-3926] Improve API implementation in Resources and DominantResourceCalculator class. Contributed by Sunil G.

-
-  
+
+   * Get ResourceInformation for a specified resource from a given index.
+   *
+   * @param index
+   *          of the resource
+   * @return the ResourceInformation object for the resource
+   * @throws ResourceNotFoundException
+   *           if the resource can't be found
+   */
+  @Public
+  @Evolving
+  public ResourceInformation getResourceInformation(int index)
+      throws ResourceNotFoundException {
+    ResourceInformation[] resources = getResources();
+    if (index < 0 || index >= resources.length) {
+      throw new ResourceNotFoundException("Unknown resource at index '" + index
+          + "'. Vaid resources are: " + Arrays.toString(resources));
+    }
+    return resources[index];
+  }
+
+  /**
+   * Set the ResourceInformation object for a particular resource.
+   *
+   * @param index
+   *          the resource index for which the ResourceInformation is provided
+   * @param resourceInformation
+   *          ResourceInformation object
+   * @throws ResourceNotFoundException
+   *           if the resource is not found
+   */
+  @Public
+  @Evolving
+  public void setResourceInformation(int index,
+      ResourceInformation resourceInformation)
+      throws ResourceNotFoundException {
+    ResourceInformation[] resources = getResources();
+    if (index < 0 || index >= resources.length) {
+      throw new ResourceNotFoundException("Unknown resource at index '" + index
+          + "'. Valid resources are " + Arrays.toString(resources));
+    }
+    ResourceInformation.copy(resourceInformation, resources[index]);
+  }
+
+  /**
+  /**
+   * Set the value of a resource in the ResourceInformation object. The unit of
+   * the value is assumed to be the one in the ResourceInformation object.
+   *
+   * @param index
+   *          the resource index for which the value is provided.
+   * @param value
+   *          the value to set
+   * @throws ResourceNotFoundException
+   *           if the resource is not found
+   */
+  @Public
+  @Evolving
+  public void setResourceValue(int index, long value)
+      throws ResourceNotFoundException {
+    ResourceInformation[] resources = getResources();
+    if (index < 0 || index >= resources.length) {
+      throw new ResourceNotFoundException("Unknown resource at index '" + index
+          + "'. Valid resources are " + Arrays.toString(resources));
+    }
+    resources[index].setValue(value);
+  }
+
