YARN-6716. Native services support for specifying component start order. Contributed by Billie Rinaldi

+import java.util.HashMap;
+import java.util.Map;
-    HTTP("HTTP");
+    HTTP("HTTP"),
+    PORT("PORT");
-  private String uri = null;
+  private Map<String, String> props = new HashMap<String, String>();
-  /**
-   * Fully qualified REST uri endpoint.
-   **/
-  public ReadinessCheck uri(String uri) {
-    this.uri = uri;
+  public ReadinessCheck props(Map<String, String> props) {
+    this.props = props;
-  @ApiModelProperty(example = "null", required = true, value = "Fully qualified REST uri endpoint.")
-  @JsonProperty("uri")
-  public String getUri() {
-    return uri;
+  public ReadinessCheck putPropsItem(String key, String propsItem) {
+    this.props.put(key, propsItem);
+    return this;
-  public void setUri(String uri) {
-    this.uri = uri;
+  /**
+   * A blob of key value pairs that will be used to configure the check.
+   * @return props
+   **/
+  @ApiModelProperty(example = "null", value = "A blob of key value pairs that will be used to configure the check.")
+  public Map<String, String> getProps() {
+    return props;
+  }
+
+  public void setProps(Map<String, String> props) {
+    this.props = props;
-    return Objects.equals(this.type, readinessCheck.type)
-        && Objects.equals(this.uri, readinessCheck.uri)
-        && Objects.equals(this.artifact, readinessCheck.artifact);
+    return Objects.equals(this.type, readinessCheck.type) &&
+        Objects.equals(this.props, readinessCheck.props) &&
+        Objects.equals(this.artifact, readinessCheck.artifact);
-    return Objects.hash(type, uri, artifact);
+    return Objects.hash(type, props, artifact);
+
-    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
+    sb.append("    props: ").append(toIndentedString(props)).append("\n");
