New parameter of CLI for decommissioning node gracefully in RMAdmin CLI. Contributed by Devaraj K

+import org.apache.hadoop.yarn.proto.YarnServerResourceManagerServiceProtos.CheckForDecommissioningNodesRequestProto;
+import org.apache.hadoop.yarn.proto.YarnServerResourceManagerServiceProtos.CheckForDecommissioningNodesResponseProto;
+import org.apache.hadoop.yarn.server.api.protocolrecords.CheckForDecommissioningNodesRequest;
+import org.apache.hadoop.yarn.server.api.protocolrecords.CheckForDecommissioningNodesResponse;
+import org.apache.hadoop.yarn.server.api.protocolrecords.impl.pb.CheckForDecommissioningNodesRequestPBImpl;
+import org.apache.hadoop.yarn.server.api.protocolrecords.impl.pb.CheckForDecommissioningNodesResponsePBImpl;
+
+  @Override
+  public CheckForDecommissioningNodesResponseProto checkForDecommissioningNodes(
+      RpcController controller, CheckForDecommissioningNodesRequestProto proto)
+      throws ServiceException {
+    CheckForDecommissioningNodesRequest request = new CheckForDecommissioningNodesRequestPBImpl(
+        proto);
+    try {
+      CheckForDecommissioningNodesResponse response = real
+          .checkForDecommissioningNodes(request);
+      return ((CheckForDecommissioningNodesResponsePBImpl) response).getProto();
+    } catch (YarnException e) {
+      throw new ServiceException(e);
+    } catch (IOException e) {
+      throw new ServiceException(e);
+    }
+  }
