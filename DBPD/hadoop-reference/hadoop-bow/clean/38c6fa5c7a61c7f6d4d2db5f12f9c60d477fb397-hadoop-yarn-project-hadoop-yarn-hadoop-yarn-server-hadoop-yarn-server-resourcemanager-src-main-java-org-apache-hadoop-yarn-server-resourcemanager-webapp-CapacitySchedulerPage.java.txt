HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.

-import org.apache.hadoop.yarn.webapp.hamlet.Hamlet;
-import org.apache.hadoop.yarn.webapp.hamlet.Hamlet.DIV;
-import org.apache.hadoop.yarn.webapp.hamlet.Hamlet.LI;
-import org.apache.hadoop.yarn.webapp.hamlet.Hamlet.TABLE;
-import org.apache.hadoop.yarn.webapp.hamlet.Hamlet.TBODY;
-import org.apache.hadoop.yarn.webapp.hamlet.Hamlet.UL;
+import org.apache.hadoop.yarn.webapp.hamlet2.Hamlet;
+import org.apache.hadoop.yarn.webapp.hamlet2.Hamlet.DIV;
+import org.apache.hadoop.yarn.webapp.hamlet2.Hamlet.LI;
+import org.apache.hadoop.yarn.webapp.hamlet2.Hamlet.TABLE;
+import org.apache.hadoop.yarn.webapp.hamlet2.Hamlet.TBODY;
+import org.apache.hadoop.yarn.webapp.hamlet2.Hamlet.UL;
-      html._(InfoBlock.class);
+      html.__(InfoBlock.class);
-              ._("Queue State:", lqinfo.getQueueState());
+              .__("Queue State:", lqinfo.getQueueState());
-      html._(InfoBlock.class);
+      html.__(InfoBlock.class);
-              ._("Queue State:", lqinfo.getQueueState());
+              .__("Queue State:", lqinfo.getQueueState());
-      html._(InfoBlock.class);
+      html.__(InfoBlock.class);
-      _("Used Capacity:", percent(capacities.getUsedCapacity() / 100)).
-      _("Configured Capacity:", percent(capacities.getCapacity() / 100)).
-      _("Configured Max Capacity:", percent(capacities.getMaxCapacity() / 100)).
-      _("Absolute Used Capacity:", percent(capacities.getAbsoluteUsedCapacity() / 100)).
-      _("Absolute Configured Capacity:", percent(capacities.getAbsoluteCapacity() / 100)).
-      _("Absolute Configured Max Capacity:", percent(capacities.getAbsoluteMaxCapacity() / 100)).
-      _("Used Resources:", resourceUsages.getUsed().toString()).
-      _("Configured Max Application Master Limit:", StringUtils.format("%.1f",
+          __("Used Capacity:", percent(capacities.getUsedCapacity() / 100)).
+          __("Configured Capacity:", percent(capacities.getCapacity() / 100)).
+          __("Configured Max Capacity:", percent(capacities.getMaxCapacity() / 100)).
+          __("Absolute Used Capacity:", percent(capacities.getAbsoluteUsedCapacity() / 100)).
+          __("Absolute Configured Capacity:", percent(capacities.getAbsoluteCapacity() / 100)).
+          __("Absolute Configured Max Capacity:", percent(capacities.getAbsoluteMaxCapacity() / 100)).
+          __("Used Resources:", resourceUsages.getUsed().toString()).
+          __("Configured Max Application Master Limit:", StringUtils.format("%.1f",
-      _("Max Application Master Resources:",
+          __("Max Application Master Resources:",
-      _("Used Application Master Resources:",
+          __("Used Application Master Resources:",
-      _("Max Application Master Resources Per User:",
+          __("Max Application Master Resources Per User:",
-      _("Num Schedulable Applications:", Integer.toString(lqinfo.getNumActiveApplications())).
-      _("Num Non-Schedulable Applications:", Integer.toString(lqinfo.getNumPendingApplications())).
-      _("Num Containers:", Integer.toString(lqinfo.getNumContainers())).
-      _("Max Applications:", Integer.toString(lqinfo.getMaxApplications())).
-      _("Max Applications Per User:", Integer.toString(lqinfo.getMaxApplicationsPerUser())).
-      _("Configured Minimum User Limit Percent:", Integer.toString(lqinfo.getUserLimit()) + "%").
-      _("Configured User Limit Factor:", lqinfo.getUserLimitFactor()).
-      _("Accessible Node Labels:", StringUtils.join(",", lqinfo.getNodeLabels())).
-      _("Ordering Policy: ", lqinfo.getOrderingPolicyInfo()).
-      _("Preemption:", lqinfo.getPreemptionDisabled() ? "disabled" : "enabled").
-      _("Default Node Label Expression:",
+          __("Num Schedulable Applications:", Integer.toString(lqinfo.getNumActiveApplications())).
+          __("Num Non-Schedulable Applications:", Integer.toString(lqinfo.getNumPendingApplications())).
+          __("Num Containers:", Integer.toString(lqinfo.getNumContainers())).
+          __("Max Applications:", Integer.toString(lqinfo.getMaxApplications())).
+          __("Max Applications Per User:", Integer.toString(lqinfo.getMaxApplicationsPerUser())).
+          __("Configured Minimum User Limit Percent:", Integer.toString(lqinfo.getUserLimit()) + "%").
+          __("Configured User Limit Factor:", lqinfo.getUserLimitFactor()).
+          __("Accessible Node Labels:", StringUtils.join(",", lqinfo.getNodeLabels())).
+          __("Ordering Policy: ", lqinfo.getOrderingPolicyInfo()).
+          __("Preemption:", lqinfo.getPreemptionDisabled() ? "disabled" : "enabled").
+          __("Default Node Label Expression:",
-      _("Default Application Priority:",
+          __("Default Application Priority:",
-              .$class("ui-state-default")._("User Name")._().th()
-              .$class("ui-state-default")._("Max Resource")._().th()
-              .$class("ui-state-default")._("Weight")._().th()
-              .$class("ui-state-default")._("Used Resource")._().th()
-              .$class("ui-state-default")._("Max AM Resource")._().th()
-              .$class("ui-state-default")._("Used AM Resource")._().th()
-              .$class("ui-state-default")._("Schedulable Apps")._().th()
-              .$class("ui-state-default")._("Non-Schedulable Apps")._()._()._()
+              .$class("ui-state-default").__("User Name").__().th()
+              .$class("ui-state-default").__("Max Resource").__().th()
+              .$class("ui-state-default").__("Weight").__().th()
+              .$class("ui-state-default").__("Used Resource").__().th()
+              .$class("ui-state-default").__("Max AM Resource").__().th()
+              .$class("ui-state-default").__("Used AM Resource").__().th()
+              .$class("ui-state-default").__("Schedulable Apps").__().th()
+              .$class("ui-state-default").__("Non-Schedulable Apps").__().__().__()
-            .td(Integer.toString(userInfo.getNumPendingApplications()))._();
+            .td(Integer.toString(userInfo.getNumPendingApplications())).__();
-      html.div().$class("usersinfo").h5("Active Users Info")._();
-      tbody._()._();
+      html.div().$class("usersinfo").h5("Active Users Info").__();
+      tbody.__().__();
-                _('.')._().
+            __('.').__().
-                _('.')._().
-              span(".q", "Queue: "+info.getQueuePath().substring(5))._().
+            __('.').__().
+              span(".q", "Queue: "+info.getQueuePath().substring(5)).__().
-              _(join(percent(used), " used"))._();
+            __(join(percent(used), " used")).__();
-          li.ul("#lq").li()._(LeafQueueInfoBlock.class)._()._();
-          li.ul("#lq").li()._(QueueUsersInfoBlock.class)._()._();
+          li.ul("#lq").li().__(LeafQueueInfoBlock.class).__().__();
+          li.ul("#lq").li().__(QueueUsersInfoBlock.class).__().__();
-          li._(QueueBlock.class);
+          li.__(QueueBlock.class);
-        li._();
+        li.__();
-      ul._();
+      ul.__();
-      html._(MetricsOverviewTable.class);
+      html.__(MetricsOverviewTable.class);
-          .$onclick("confirmAction()").b("Dump scheduler logs")._().select()
-          .$id("time").option().$value("60")._("1 min")._().option()
-          .$value("300")._("5 min")._().option().$value("600")._("10 min")._()
-          ._()._();
+          .$onclick("confirmAction()").b("Dump scheduler logs").__().select()
+          .$id("time").option().$value("60").__("1 min").__().option()
+          .$value("300").__("5 min").__().option().$value("600").__("10 min").__()
+          .__().__();
-        html.script().$type("text/javascript")._(script.toString())._();
+        html.script().$type("text/javascript").__(script.toString()).__();
-            _("Application Queues")._().
+          __("Application Queues").__().
-              span().$style(Q_END)._("100% ")._().
-              span(".q", "default")._()._();
+              span().$style(Q_END).__("100% ").__().
+              span(".q", "default").__().__();
-            span().$style("font-weight: bold")._("Legend:")._().
+            span().$style("font-weight: bold").__("Legend:").__().
-              _("Capacity")._().
+            __("Capacity").__().
-              _("Used")._().
+            __("Used").__().
-              _("Used (over capacity)")._().
+            __("Used (over capacity)").__().
-              _("Max Capacity")._().
+              __("Max Capacity").__().
-            _("Users Requesting Resources")._().
-          _();
+            __("Users Requesting Resources").__().
+          __();
-                  used > 1 ? Q_OVER : Q_UNDER))._(".")._().
-              span(".q", "Queue: root")._().
+                  used > 1 ? Q_OVER : Q_UNDER)).__(".").__().
+              span(".q", "Queue: root").__().
-              _(join(percent(used), " used"))._().
-            _(QueueBlock.class)._();
+              __(join(percent(used), " used")).__().
+              __(QueueBlock.class).__();
-                  used > 1 ? Q_OVER : Q_UNDER))._(".")._().
-              span(".q", partitionUiTag)._().
+                  used > 1 ? Q_OVER : Q_UNDER)).__(".").__().
+              span(".q", partitionUiTag).__().
-              _(join(percent(used), " used"))._()._();
+                __(join(percent(used), " used")).__().__();
-                  used > 1 ? Q_OVER : Q_UNDER))._(".")._().
-              span(".q", "Queue: root")._().
+                  used > 1 ? Q_OVER : Q_UNDER)).__(".").__().
+              span(".q", "Queue: root").__().
-              _(join(percent(used), " used"))._().
-            _(QueueBlock.class)._()._();
+                __(join(percent(used), " used")).__().
+                __(QueueBlock.class).__().__();
-      ul._()._().
+      ul.__().__().
-          _("$('#cs').hide();")._()._().
-      _(RMAppsBlock.class);
-      html._(HealthBlock.class);
+          __("$('#cs').hide();").__().__().
+          __(RMAppsBlock.class);
+      html.__(HealthBlock.class);
-            .$class("ui-state-default")._("Total Container Allocations(count)")
-            ._().th().$class("ui-state-default")
-            ._("Total Container Releases(count)")._().th()
+            .$class("ui-state-default").__("Total Container Allocations(count)")
+            .__().th().$class("ui-state-default")
+            .__("Total Container Releases(count)").__().th()
-            ._("Total Fulfilled Reservations(count)")._().th()
-            .$class("ui-state-default")._("Total Container Preemptions(count)")
-            ._()._()._().tbody();
+            .__("Total Fulfilled Reservations(count)").__().th()
+            .$class("ui-state-default").__("Total Container Preemptions(count)")
+            .__().__().__().tbody();
-        .td(healthInfo.getAggregatePreemptionCount().toString())._()._()._();
+        .td(healthInfo.getAggregatePreemptionCount().toString()).__().__().__();
-            .$class("ui-state-default")._("Time")._().th()
-            .$class("ui-state-default")._("Allocations(count - resources)")._()
-            .th().$class("ui-state-default")._("Reservations(count - resources)")
-            ._().th().$class("ui-state-default")._("Releases(count - resources)")
-            ._()._()._().tbody();
+            .$class("ui-state-default").__("Time").__().th()
+            .$class("ui-state-default").__("Allocations(count - resources)").__()
+            .th().$class("ui-state-default").__("Reservations(count - resources)")
+            .__().th().$class("ui-state-default").__("Releases(count - resources)")
+            .__().__().__().tbody();
-              + healthInfo.getResourcesReleased().toString())._()._()._();
+              + healthInfo.getResourcesReleased().toString()).__().__().__();
-              .$class("ui-state-default")._("Time")._().th()
-              .$class("ui-state-default")._("Container Id")._().th()
-              .$class("ui-state-default")._("Node Id")._().th()
-              .$class("ui-state-default")._("Queue")._()._()._().tbody();
+              .$class("ui-state-default").__("Time").__().th()
+              .$class("ui-state-default").__("Container Id").__().th()
+              .$class("ui-state-default").__("Node Id").__().th()
+              .$class("ui-state-default").__("Queue").__().__().__().tbody();
-          .td(queue)._()._()._();
+          .td(queue).__().__().__();
-      div._();
+      div.__();
-  @Override protected void postHead(Page.HTML<_> html) {
+  @Override protected void postHead(Page.HTML<__> html) {
-        _("#cs { padding: 0.5em 0 1em 0; margin-bottom: 1em; position: relative }",
+        __("#cs { padding: 0.5em 0 1em 0; margin-bottom: 1em; position: relative }",
-          "table.info tr th {width: 50%}")._(). // to center info table
+          "table.info tr th {width: 50%}").__(). // to center info table
-        _("$(function() {",
+        __("$(function() {",
-          "});")._().
-      _(SchedulerPageUtil.QueueBlockUtil.class);
+          "});").__().
+        __(SchedulerPageUtil.QueueBlockUtil.class);
