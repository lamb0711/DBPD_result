HDFS-4487. Fix snapshot diff report for HDFS-4446.  Contributed by Jing Zhao


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1446385 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.fs.Path;
-          FSImageSerialization.saveINode2Image(node, out);
+          FSImageSerialization.saveINode2Image(node, out, true);
+     * @root The snapshot root of the diff report.
-        INodeDirectoryWithSnapshot parent, boolean fromEarlier) {
-      List<DiffReportEntry> mList = new ArrayList<DiffReportEntry>();
+        INodeDirectorySnapshottable root, INodeDirectoryWithSnapshot parent,
+        boolean fromEarlier) {
+      byte[][] parentPath = parent.getRelativePathNameBytes(root);
+      byte[][] fullPath = new byte[parentPath.length + 1][];
+      System.arraycopy(parentPath, 0, fullPath, 0, parentPath.length);
-          mList.add(new DiffReportEntry(DiffType.MODIFY, parent
-              .getFullPathName() + Path.SEPARATOR + cnode.getLocalName()));
+          fullPath[fullPath.length - 1] = cnode.getLocalNameBytes();
+          if (cnode.isSymlink() && dnode.isSymlink()) {
+            dList.add(new DiffReportEntry(DiffType.MODIFY, fullPath));
+          } else {
+            // must be the case: delete first and then create an inode with the
+            // same name
+            cList.add(new DiffReportEntry(DiffType.CREATE, fullPath));
+            dList.add(new DiffReportEntry(DiffType.DELETE, fullPath));
+          }
+          fullPath[fullPath.length - 1] = cnode.getLocalNameBytes();
-              : DiffType.DELETE, parent.getFullPathName() + Path.SEPARATOR
-              + cnode.getLocalName()));
+              : DiffType.DELETE, fullPath));
+          fullPath[fullPath.length - 1] = dnode.getLocalNameBytes();
-              : DiffType.CREATE, parent.getFullPathName() + Path.SEPARATOR
-              + dnode.getLocalName()));
+              : DiffType.CREATE, fullPath));
+        fullPath[fullPath.length - 1] = deleted.get(d).getLocalNameBytes();
-            : DiffType.CREATE, parent.getFullPathName() + Path.SEPARATOR
-            + deleted.get(d).getLocalName()));
+            : DiffType.CREATE, fullPath));
+        fullPath[fullPath.length - 1] = created.get(c).getLocalNameBytes();
-            : DiffType.DELETE, parent.getFullPathName() + Path.SEPARATOR
-            + created.get(c).getLocalName()));
+            : DiffType.DELETE, fullPath));
-      cList.addAll(dList);
-      cList.addAll(mList);
-      return cList;
+      dList.addAll(cList);
+      return dList;
-    if (fromSnapshot == null
-        || (toSnapshot != null && Snapshot.ID_COMPARATOR.compare(fromSnapshot,
-            toSnapshot) > 0)) {
+    if (Snapshot.ID_COMPARATOR.compare(fromSnapshot, toSnapshot) > 0) {
+    boolean modified = diffs.changedBetweenSnapshots(earlierSnapshot,
+        laterSnapshot);
+    if (!modified) {
+      return false;
+    }
+    
-    if (earlierDiffIndex < 0 && (-earlierDiffIndex - 1) == size) {
-      // if the earlierSnapshot is after the latest SnapshotDiff stored in diffs,
-      // no modification happened after the earlierSnapshot
-      return false;
-    }
-    int laterDiffIndex = size;
-    if (laterSnapshot != null) {
-      laterDiffIndex = Collections.binarySearch(difflist, laterSnapshot);
-      if (laterDiffIndex == -1 || laterDiffIndex == 0) {
-        // if the endSnapshot is the earliest SnapshotDiff stored in
-        // diffs, or before it, no modification happened before the endSnapshot
-        return false;
-      }
-    }
-    
+    int laterDiffIndex = laterSnapshot == null ? size : Collections
+        .binarySearch(difflist, laterSnapshot);
+    
