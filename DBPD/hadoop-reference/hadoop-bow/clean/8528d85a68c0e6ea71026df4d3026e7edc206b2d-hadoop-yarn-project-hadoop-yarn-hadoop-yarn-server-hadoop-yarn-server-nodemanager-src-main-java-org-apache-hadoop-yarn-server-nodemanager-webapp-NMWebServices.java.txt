YARN-6099. Improve webservice to list aggregated log files. Contributed by Xuan Gong.

+import java.util.ArrayList;
+import java.util.List;
+import javax.ws.rs.core.GenericEntity;
+import org.apache.hadoop.yarn.logaggregation.ContainerLogMeta;
+import org.apache.hadoop.yarn.logaggregation.ContainerLogType;
+import org.apache.hadoop.yarn.logaggregation.LogToolUtils;
-import org.apache.hadoop.yarn.server.nodemanager.webapp.dao.ContainerLogsInfo;
+import org.apache.hadoop.yarn.server.nodemanager.webapp.dao.NMContainerLogsInfo;
+import org.apache.hadoop.yarn.server.webapp.dao.ContainerLogsInfo;
+   * @param res
+   *    HttpServletResponse
-  public ContainerLogsInfo getContainerLogsInfo(@javax.ws.rs.core.Context
-      HttpServletRequest hsr,
+  public Response getContainerLogsInfo(
+      @javax.ws.rs.core.Context HttpServletRequest hsr,
+      @javax.ws.rs.core.Context HttpServletResponse res,
-    } catch (Exception e) {
+    } catch (IllegalArgumentException ex) {
+
-      return new ContainerLogsInfo(this.nmContext, containerId,
-          hsr.getRemoteUser());
-    } catch (YarnException ex) {
+      List<ContainerLogsInfo> containersLogsInfo = new ArrayList<>();
+      containersLogsInfo.add(new NMContainerLogsInfo(
+          this.nmContext, containerId,
+          hsr.getRemoteUser(), ContainerLogType.LOCAL));
+      // check whether we have aggregated logs in RemoteFS. If exists, show the
+      // the log meta for the aggregated logs as well.
+      ApplicationId appId = containerId.getApplicationAttemptId()
+          .getApplicationId();
+      Application app = this.nmContext.getApplications().get(appId);
+      String appOwner = app == null ? null : app.getUser();
+      try {
+        List<ContainerLogMeta> containerLogMeta = LogToolUtils
+            .getContainerLogMetaFromRemoteFS(this.nmContext.getConf(),
+                appId, containerIdStr,
+                this.nmContext.getNodeId().toString(), appOwner);
+        if (!containerLogMeta.isEmpty()) {
+          for (ContainerLogMeta logMeta : containerLogMeta) {
+            containersLogsInfo.add(new ContainerLogsInfo(logMeta,
+                ContainerLogType.AGGREGATED));
+          }
+        }
+      } catch (IOException ex) {
+        // Something wrong with we tries to access the remote fs for the logs.
+        // Skip it and do nothing
+      }
+      GenericEntity<List<ContainerLogsInfo>> meta = new GenericEntity<List<
+          ContainerLogsInfo>>(containersLogsInfo){};
+      ResponseBuilder resp = Response.ok(meta);
+      // Sending the X-Content-Type-Options response header with the value
+      // nosniff will prevent Internet Explorer from MIME-sniffing a response
+      // away from the declared content-type.
+      resp.header("X-Content-Type-Options", "nosniff");
+      return resp.build();
+    } catch (Exception ex) {
