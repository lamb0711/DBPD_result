HDFS-11058. Implement 'hadoop fs -df' command for ViewFileSystem. Contributed by Manoj Govindassamy.

-import com.google.common.annotations.VisibleForTesting;
+import org.apache.hadoop.fs.FsStatus;
-  static public class MountPoint {
-    /**
-     *  The source of the mount.
-     */
-    private Path src;
+  /**
+   * MountPoint representation built from the configuration.
+   */
+  public static class MountPoint {
-     * One or more targets of the mount.
-     * Multiple targets imply MergeMount.
+     * The mounted on path location.
-    private URI[] targets;
+    private final Path mountedOnPath;
-    MountPoint(Path srcPath, URI[] targetURIs) {
-      src = srcPath;
-      targets = targetURIs;
+    /**
+     * Array of target FileSystem URIs.
+     */
+    private final URI[] targetFileSystemURIs;
+
+    MountPoint(Path srcPath, URI[] targetFs) {
+      mountedOnPath = srcPath;
+      targetFileSystemURIs = targetFs;
-    @VisibleForTesting
-    Path getSrc() {
-      return src;
+    public Path getMountedOnPath() {
+      return mountedOnPath;
-    @VisibleForTesting
-    URI[] getTargets() {
-      return targets;
+    public URI[] getTargetFileSystemURIs() {
+      return targetFileSystemURIs;
-  
+
-  private String getUriPath(final Path p) {
+  String getUriPath(final Path p) {
-      result[i] = new MountPoint(new Path(mountPoints.get(i).src), 
-                              mountPoints.get(i).target.targetDirLinkList);
+      result[i] = new MountPoint(new Path(mountPoints.get(i).src),
+          mountPoints.get(i).target.targetDirLinkList);
+  @Override
+  public FsStatus getStatus() throws IOException {
+    return getStatus(null);
+  }
+
+  @Override
+  public FsStatus getStatus(Path p) throws IOException {
+    if (p == null) {
+      p = InodeTree.SlashPath;
+    }
+    InodeTree.ResolveResult<FileSystem> res = fsState.resolve(
+        getUriPath(p), true);
+    return res.targetFileSystem.getStatus(p);
+  }
+
