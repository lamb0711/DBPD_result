HADOOP-13873. log DNS addresses on s3a initialization.

Contributed by Mukund Thakur.

If you set the log org.apache.hadoop.fs.s3a.impl.NetworkBinding
to DEBUG, then when the S3A bucket probe is made -the DNS address
of the S3 endpoint is calculated and printed.

This is useful to see if a large set of processes are all using
the same IP address from the pool of load balancers to which AWS
directs clients when an AWS S3 endpoint is resolved.

This can have implications for performance: if all clients
access the same load balancer performance may be suboptimal.

Note: if bucket probes are disabled, fs.s3a.bucket.probe = 0,
the DNS logging does not take place.

Change-Id: I21b3ac429dc0b543f03e357fdeb94c2d2a328dd8

+import java.net.URI;
+import java.net.URISyntaxException;
+import org.apache.hadoop.net.NetUtils;
+import static org.apache.hadoop.fs.s3a.Constants.DEFAULT_ENDPOINT;
+import static org.apache.hadoop.fs.s3a.Constants.ENDPOINT;
+
+  /**
+   * Log the dns address associated with s3 endpoint. If endpoint is
+   * not set in the configuration, the {@code Constants#DEFAULT_ENDPOINT}
+   * will be used.
+   * @param conf input configuration.
+   */
+  public static void logDnsLookup(Configuration conf) {
+    String endPoint = conf.getTrimmed(ENDPOINT, DEFAULT_ENDPOINT);
+    String hostName = endPoint;
+    if (!endPoint.isEmpty() && LOG.isDebugEnabled()) {
+      // Updating the hostname if there is a scheme present.
+      if (endPoint.contains("://")) {
+        try {
+          URI uri = new URI(endPoint);
+          hostName = uri.getHost();
+        } catch (URISyntaxException e) {
+          LOG.debug("Got URISyntaxException, ignoring");
+        }
+      }
+      LOG.debug("Bucket endpoint : {}, Hostname : {}, DNSAddress : {}",
+              endPoint,
+              hostName,
+              NetUtils.normalizeHostName(hostName));
+    }
+  }
