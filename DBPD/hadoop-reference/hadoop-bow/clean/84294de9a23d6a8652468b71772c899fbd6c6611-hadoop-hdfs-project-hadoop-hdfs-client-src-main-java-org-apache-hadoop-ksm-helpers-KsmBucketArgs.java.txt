HDFS-11778. Ozone: KSM: add getBucketInfo. Contributed by Nandakumar Vadivelu.

-import java.util.LinkedList;
-import org.apache.hadoop.fs.StorageType;
-import org.apache.hadoop.hdfs.protocolPB.PBHelperClient;
+import com.google.common.base.Preconditions;
+import org.apache.hadoop.hdfs.protocol.proto
+    .HdfsProtos.StorageTypeProto;
-    .KeySpaceManagerProtocolProtos.BucketInfo;
+    .KeySpaceManagerProtocolProtos.BucketArgs;
-import com.google.common.base.Preconditions;
-
-  private boolean isVersionEnabled;
+  private Boolean isVersionEnabled;
-  private StorageType storageType;
+  private StorageTypeProto storageType;
-      boolean isVersionEnabled, StorageType storageType) {
+      boolean isVersionEnabled, StorageTypeProto storageType) {
-   * @return List<OzoneAcl>
+   * @return List<OzoneAclInfo>
-   * @return List<OzoneAcl>
+   * @return List<OzoneAclInfo>
-  public StorageType getStorageType() {
+  public StorageTypeProto getStorageType() {
-    private boolean isVersionEnabled;
-    private StorageType storageType;
-
-    Builder() {
-      addAcls = new LinkedList<>();
-      removeAcls = new LinkedList<>();
-    }
+    private Boolean isVersionEnabled;
+    private StorageTypeProto storageType;
-    public Builder addAddAcl(OzoneAclInfo acl) {
-      this.addAcls.add(acl);
+    public Builder setAddAcls(List<OzoneAclInfo> acls) {
+      this.addAcls = acls;
-    public Builder addRemoveAcl(OzoneAclInfo acl) {
-      this.removeAcls.add(acl);
+    public Builder setRemoveAcls(List<OzoneAclInfo> acls) {
+      this.removeAcls = acls;
-    public Builder setIsVersionEnabled(boolean versionFlag) {
+    public Builder setIsVersionEnabled(Boolean versionFlag) {
-    public Builder setStorageType(StorageType storage) {
+    public Builder setStorageType(StorageTypeProto storage) {
-      Preconditions.checkNotNull(isVersionEnabled);
-      return new KsmBucketArgs(volumeName, bucketName, addAcls, removeAcls,
-          isVersionEnabled, storageType);
+      return new KsmBucketArgs(volumeName, bucketName, addAcls,
+          removeAcls, isVersionEnabled, storageType);
-   * Creates BucketInfo protobuf from KsmBucketArgs.
+   * Creates BucketArgs protobuf from KsmBucketArgs.
-  public BucketInfo getProtobuf() {
-    return BucketInfo.newBuilder()
-        .setVolumeName(volumeName)
-        .setBucketName(bucketName)
-        .addAllAddAcls(addAcls)
-        .addAllRemoveAcls(removeAcls)
-        .setIsVersionEnabled(isVersionEnabled)
-        .setStorageType(PBHelperClient.convertStorageType(storageType))
-        .build();
+  public BucketArgs getProtobuf() {
+    BucketArgs.Builder builder = BucketArgs.newBuilder();
+    builder.setVolumeName(volumeName)
+        .setBucketName(bucketName);
+    if(addAcls != null && !addAcls.isEmpty()) {
+      builder.addAllAddAcls(addAcls);
+    }
+    if(removeAcls != null && !removeAcls.isEmpty()) {
+      builder.addAllRemoveAcls(removeAcls);
+    }
+    if(isVersionEnabled != null) {
+      builder.setIsVersionEnabled(isVersionEnabled);
+    }
+    if(storageType != null) {
+      builder.setStorageType(storageType);
+    }
+    return builder.build();
-   * @param bucketInfo
+   * @param bucketArgs
-  public static KsmBucketArgs getFromProtobuf(BucketInfo bucketInfo) {
-    return new KsmBucketArgs(
-        bucketInfo.getVolumeName(),
-        bucketInfo.getBucketName(),
-        bucketInfo.getAddAclsList(),
-        bucketInfo.getRemoveAclsList(),
-        bucketInfo.getIsVersionEnabled(),
-        PBHelperClient.convertStorageType(
-            bucketInfo.getStorageType()));
+  public static KsmBucketArgs getFromProtobuf(BucketArgs bucketArgs) {
+    return new KsmBucketArgs(bucketArgs.getVolumeName(),
+        bucketArgs.getBucketName(),
+        bucketArgs.getAddAclsList(),
+        bucketArgs.getRemoveAclsList(),
+        bucketArgs.getIsVersionEnabled(),
+        bucketArgs.getStorageType());
