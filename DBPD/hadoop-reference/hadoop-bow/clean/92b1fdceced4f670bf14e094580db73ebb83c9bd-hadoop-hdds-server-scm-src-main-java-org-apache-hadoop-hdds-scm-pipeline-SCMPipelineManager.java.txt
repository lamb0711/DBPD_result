HDDS-1070. Adding Node and Pipeline related metrics in SCM.
Contributed by Nandakumar.

+import org.apache.hadoop.metrics2.util.MBeans;
+import javax.management.ObjectName;
+import java.util.HashMap;
+  private final SCMPipelineMetrics metrics;
+  // Pipeline Manager MXBean
+  private ObjectName pmInfoBean;
+    this.metrics = SCMPipelineMetrics.create();
+    this.pmInfoBean = MBeans.register("SCMPipelineManager",
+        "SCMPipelineManagerInfo", this);
-      Pipeline pipeline =  pipelineFactory.create(type, factor);
+      Pipeline pipeline = pipelineFactory.create(type, factor);
+      metrics.incNumPipelineCreated();
+    } catch (IOException ex) {
+      metrics.incNumPipelineCreationFailed();
+      throw ex;
+    // We don't update the metrics for SimplePipelines.
+      metrics.incNumPipelineDestroyed();
+    } catch (IOException ex) {
+      metrics.incNumPipelineDestroyFailed();
+      throw ex;
+  public Map<String, Integer> getPipelineInfo() {
+    final Map<String, Integer> pipelineInfo = new HashMap<>();
+    for (Pipeline.PipelineState state : Pipeline.PipelineState.values()) {
+      pipelineInfo.put(state.toString(), 0);
+    }
+    stateManager.getPipelines().forEach(pipeline ->
+        pipelineInfo.computeIfPresent(
+            pipeline.getPipelineState().toString(), (k, v) -> v + 1));
+    return pipelineInfo;
+  }
+
+  @Override
+    if(pmInfoBean != null) {
+      MBeans.unregister(this.pmInfoBean);
+      pmInfoBean = null;
+    }
+    if(metrics != null) {
+      metrics.unRegister();
+    }
