HADOOP-10809. hadoop-azure: page blob support. Contributed by Dexter Bradshaw, Mostafa Elhemali, Eric Hanson, and Mike Liddell.

+    private final boolean isPageBlob;
+    
-        int contentLength) {
+        int contentLength, boolean isPageBlob) {
+      this.isPageBlob = isPageBlob;
+
+    public boolean isPageBlob() {
+      return isPageBlob;
+    }
-        list.add(new ListBlobEntry(entry.getKey(),
-            includeMetadata ? new HashMap<String, String>(
-                entry.getValue().metadata) : null,
-            entry.getValue().content.length));
+        list.add(new ListBlobEntry(
+            entry.getKey(),
+            includeMetadata ?
+                new HashMap<String, String>(entry.getValue().metadata) :
+                  null,
+            entry.getValue().content.length,
+            entry.getValue().isPageBlob));
-      HashMap<String, String> metadata) {
-    blobs
-        .put(key, new Entry(value, (HashMap<String, String>) metadata.clone()));
+      HashMap<String, String> metadata, boolean isPageBlob,
+      long length) {
+    blobs.put(key, new Entry(value, (HashMap<String, String>)metadata.clone(),
+        isPageBlob, length));
-  public OutputStream upload(final String key,
+  @SuppressWarnings("unchecked")
+  public synchronized void setMetadata(String key,
+      HashMap<String, String> metadata) {
+    blobs.get(key).metadata = (HashMap<String, String>) metadata.clone();
+  }
+
+  public OutputStream uploadBlockBlob(final String key,
-    setContent(key, new byte[0], metadata);
+    setContent(key, new byte[0], metadata, false, 0);
-      public void flush() throws IOException {
+      public void flush()
+          throws IOException {
-        setContent(key, toByteArray(), metadata);
+        byte[] tempBytes = toByteArray();
+        setContent(key, tempBytes, metadata, false, tempBytes.length);
+      }
+      @Override
+      public void close()
+          throws IOException {
+        super.close();
+        byte[] tempBytes = toByteArray();
+        setContent(key, tempBytes, metadata, false, tempBytes.length);
+      }
+    };
+  }
+
+  public OutputStream uploadPageBlob(final String key,
+      final HashMap<String, String> metadata,
+      final long length) {
+    setContent(key, new byte[0], metadata, true, length);
+    return new ByteArrayOutputStream() {
+      @Override
+      public void flush()
+          throws IOException {
+        super.flush();
+        setContent(key, toByteArray(), metadata, true, length);
+    private boolean isPageBlob;
+    @SuppressWarnings("unused") // TODO: use it
+    private long length;
-    public Entry(byte[] content, HashMap<String, String> metadata) {
+    public Entry(byte[] content, HashMap<String, String> metadata,
+        boolean isPageBlob, long length) {
+      this.isPageBlob = isPageBlob;
+      this.length = length;
