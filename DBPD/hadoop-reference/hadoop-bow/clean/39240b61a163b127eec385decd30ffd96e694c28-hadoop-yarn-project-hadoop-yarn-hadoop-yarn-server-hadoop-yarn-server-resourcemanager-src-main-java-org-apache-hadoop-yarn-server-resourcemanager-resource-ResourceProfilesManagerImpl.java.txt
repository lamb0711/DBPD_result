YARN-7043. Cleanup ResourceProfileManager. (wangda)

Change-Id: I463356f37bf1f6a3f1fc3c594c79916e8c0ab913

+import org.apache.hadoop.yarn.exceptions.YARNFeatureNotEnabledException;
+import org.apache.hadoop.yarn.exceptions.YarnException;
+  private boolean profileEnabled = false;
+  private static final String FEATURE_NOT_ENABLED_MSG =
+      "Resource profile is not enabled, please "
+          + "enable resource profile feature before using its functions."
+          + " (by setting " + YarnConfiguration.RM_RESOURCE_PROFILES_ENABLED
+          + " to true)";
-    boolean profilesEnabled =
+    profileEnabled =
-    if (!profilesEnabled) {
+    if (!profileEnabled) {
-        if (!profileInfo.containsKey(MEMORY) || !profileInfo.containsKey(VCORES)) {
+        if (!profileInfo.containsKey(MEMORY)
+            || !profileInfo.containsKey(VCORES)) {
-        LOG.info("Added profile '" + profileName + "' with resources " + resource);
+        LOG.info(
+            "Added profile '" + profileName + "' with resources: " + resource);
-    LOG.info("Loaded profiles " + profiles.keySet());
+    LOG.info("Loaded profiles: " + profiles.keySet());
-  @Override
-  public Resource getProfile(String profile) {
-    return Resources.clone(profiles.get(profile));
+  private void checkAndThrowExceptionWhenFeatureDisabled()
+      throws YARNFeatureNotEnabledException {
+    if (!profileEnabled) {
+      throw new YARNFeatureNotEnabledException(FEATURE_NOT_ENABLED_MSG);
+    }
-  public Map<String, Resource> getResourceProfiles() {
+  public Resource getProfile(String profile) throws YarnException{
+    checkAndThrowExceptionWhenFeatureDisabled();
+
+    if (profile == null) {
+      throw new YarnException("Profile name cannot be null");
+    }
+
+    Resource profileRes = profiles.get(profile);
+    if (profileRes == null) {
+      throw new YarnException(
+          "Resource profile '" + profile + "' not found");
+    }
+    return Resources.clone(profileRes);
+  }
+
+  @Override
+  public Map<String, Resource> getResourceProfiles()
+      throws YARNFeatureNotEnabledException {
+    checkAndThrowExceptionWhenFeatureDisabled();
-  public Resource getDefaultProfile() {
+  public Resource getDefaultProfile() throws YarnException {
-  public Resource getMinimumProfile() {
+  public Resource getMinimumProfile() throws YarnException {
-  public Resource getMaximumProfile() {
+  public Resource getMaximumProfile() throws YarnException {
-
-  public List<ResourceTypeInfo> getAllResourceTypeInfo() {
-    try {
-      readLock.lock();
-      return Collections.unmodifiableList(resourceTypeInfo);
-    } finally {
-      readLock.unlock();
-    }
-  }
