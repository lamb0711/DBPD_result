YARN-8842. Expose metrics for custom resource types in QueueMetrics. (Contributed by Szilard Nemeth)

-import static org.apache.hadoop.yarn.server.resourcemanager.scheduler
-    .ResourceMetricsChecker.ResourceMetricsKey.AGGREGATE_CONTAINERS_ALLOCATED;
-import static org.apache.hadoop.yarn.server.resourcemanager.scheduler
-    .ResourceMetricsChecker.ResourceMetricsKey.AGGREGATE_CONTAINERS_RELEASED;
-import static org.apache.hadoop.yarn.server.resourcemanager.scheduler
-    .ResourceMetricsChecker.ResourceMetricsKey.ALLOCATED_CONTAINERS;
-import static org.apache.hadoop.yarn.server.resourcemanager.scheduler
-    .ResourceMetricsChecker.ResourceMetricsKey.ALLOCATED_MB;
-import static org.apache.hadoop.yarn.server.resourcemanager.scheduler
-    .ResourceMetricsChecker.ResourceMetricsKey.ALLOCATED_V_CORES;
-import static org.apache.hadoop.yarn.server.resourcemanager.scheduler
-    .ResourceMetricsChecker.ResourceMetricsKey.AVAILABLE_MB;
-import static org.apache.hadoop.yarn.server.resourcemanager.scheduler
-    .ResourceMetricsChecker.ResourceMetricsKey.AVAILABLE_V_CORES;
-import static org.apache.hadoop.yarn.server.resourcemanager.scheduler
-    .ResourceMetricsChecker.ResourceMetricsKey.PENDING_CONTAINERS;
+import static org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceMetricsChecker.ResourceMetricType.COUNTER_LONG;
+import static org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceMetricsChecker.ResourceMetricType.GAUGE_INT;
+import static org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceMetricsChecker.ResourceMetricType.GAUGE_LONG;
+import static org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceMetricsChecker.ResourceMetricsKey.AGGREGATE_CONTAINERS_ALLOCATED;
+import static org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceMetricsChecker.ResourceMetricsKey.AGGREGATE_CONTAINERS_RELEASED;
+import static org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceMetricsChecker.ResourceMetricsKey.ALLOCATED_CONTAINERS;
+import static org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceMetricsChecker.ResourceMetricsKey.ALLOCATED_MB;
+import static org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceMetricsChecker.ResourceMetricsKey.ALLOCATED_V_CORES;
+import static org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceMetricsChecker.ResourceMetricsKey.AVAILABLE_MB;
+import static org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceMetricsChecker.ResourceMetricsKey.AVAILABLE_V_CORES;
+import static org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceMetricsChecker.ResourceMetricsKey.PENDING_CONTAINERS;
-import static org.apache.hadoop.yarn.server.resourcemanager.scheduler
-    .ResourceMetricsChecker.ResourceMetricsKey.RESERVED_CONTAINERS;
-import static org.apache.hadoop.yarn.server.resourcemanager.scheduler
-    .ResourceMetricsChecker.ResourceMetricsKey.RESERVED_MB;
+import static org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceMetricsChecker.ResourceMetricsKey.RESERVED_CONTAINERS;
+import static org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceMetricsChecker.ResourceMetricsKey.RESERVED_MB;
+  enum ResourceMetricType {
+    GAUGE_INT, GAUGE_LONG, COUNTER_INT, COUNTER_LONG
+  }
+
-    ALLOCATED_MB("AllocatedMB"),
-    ALLOCATED_V_CORES("AllocatedVCores"),
-    ALLOCATED_CONTAINERS("AllocatedContainers"),
-    AGGREGATE_CONTAINERS_ALLOCATED("AggregateContainersAllocated"),
-    AGGREGATE_CONTAINERS_RELEASED("AggregateContainersReleased"),
-    AVAILABLE_MB("AvailableMB"),
-    AVAILABLE_V_CORES("AvailableVCores"),
-    PENDING_MB("PendingMB"),
-    PENDING_V_CORES("PendingVCores"),
-    PENDING_CONTAINERS("PendingContainers"),
-    RESERVED_MB("ReservedMB"),
-    RESERVED_V_CORES("ReservedVCores"),
-    RESERVED_CONTAINERS("ReservedContainers");
+    ALLOCATED_MB("AllocatedMB", GAUGE_LONG),
+    ALLOCATED_V_CORES("AllocatedVCores", GAUGE_INT),
+    ALLOCATED_CONTAINERS("AllocatedContainers", GAUGE_INT),
+    AGGREGATE_CONTAINERS_ALLOCATED("AggregateContainersAllocated",
+        COUNTER_LONG),
+    AGGREGATE_CONTAINERS_RELEASED("AggregateContainersReleased",
+        COUNTER_LONG),
+    AVAILABLE_MB("AvailableMB", GAUGE_LONG),
+    AVAILABLE_V_CORES("AvailableVCores", GAUGE_INT),
+    PENDING_MB("PendingMB", GAUGE_LONG),
+    PENDING_V_CORES("PendingVCores", GAUGE_INT),
+    PENDING_CONTAINERS("PendingContainers", GAUGE_INT),
+    RESERVED_MB("ReservedMB", GAUGE_LONG),
+    RESERVED_V_CORES("ReservedVCores", GAUGE_INT),
+    RESERVED_CONTAINERS("ReservedContainers", GAUGE_INT),
+    AGGREGATE_VCORE_SECONDS_PREEMPTED(
+        "AggregateVcoreSecondsPreempted", COUNTER_LONG),
+    AGGREGATE_MEMORY_MB_SECONDS_PREEMPTED(
+        "AggregateMemoryMBSecondsPreempted", COUNTER_LONG);
+    private ResourceMetricType type;
-    ResourceMetricsKey(String value) {
+    ResourceMetricsKey(String value, ResourceMetricType type) {
+      this.type = type;
+
+    public ResourceMetricType getType() {
+      return type;
+    }
+    ensureTypeIsCorrect(key, GAUGE_LONG);
+    ensureTypeIsCorrect(key, GAUGE_INT);
+    ensureTypeIsCorrect(key, COUNTER_LONG);
+  private void ensureTypeIsCorrect(ResourceMetricsKey
+      key, ResourceMetricType actualType) {
+    if (key.type != actualType) {
+      throw new IllegalStateException("Metrics type should be " + key.type
+          + " instead of " + actualType + " for metrics: " + key.value);
+    }
+  }
+
