HDDS-1605. Implement AuditLogging for OM HA Bucket write requests. (#867)


+import java.util.LinkedHashMap;
+import java.util.Map;
+import org.apache.hadoop.ozone.OzoneConsts;
+import org.apache.hadoop.ozone.audit.AuditAction;
+import org.apache.hadoop.ozone.audit.AuditEventStatus;
+import org.apache.hadoop.ozone.audit.AuditLogger;
+import org.apache.hadoop.ozone.audit.AuditMessage;
-public abstract class OMClientRequest {
+public abstract class OMClientRequest implements RequestAuditor {
+  /**
+   * Log the auditMessage.
+   * @param auditLogger
+   * @param auditMessage
+   */
+  protected void auditLog(AuditLogger auditLogger, AuditMessage auditMessage) {
+    auditLogger.logWrite(auditMessage);
+  }
+
+  @Override
+  public AuditMessage buildAuditMessage(AuditAction op,
+      Map< String, String > auditMap, Throwable throwable,
+      OzoneManagerProtocolProtos.UserInfo userInfo) {
+    return new AuditMessage.Builder()
+        .setUser(userInfo != null ? userInfo.getUserName() : null)
+        .atIp(userInfo != null ? userInfo.getRemoteAddress() : null)
+        .forOperation(op.getAction())
+        .withParams(auditMap)
+        .withResult(throwable != null ? AuditEventStatus.FAILURE.toString() :
+            AuditEventStatus.SUCCESS.toString())
+        .withException(throwable)
+        .build();
+  }
+
+  @Override
+  public Map<String, String> buildVolumeAuditMap(String volume) {
+    Map<String, String> auditMap = new LinkedHashMap<>();
+    auditMap.put(OzoneConsts.VOLUME, volume);
+    return auditMap;
+  }
