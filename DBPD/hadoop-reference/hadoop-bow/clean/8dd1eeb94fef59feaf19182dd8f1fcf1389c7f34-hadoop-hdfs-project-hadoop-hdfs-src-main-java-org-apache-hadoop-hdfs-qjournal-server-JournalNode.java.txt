HDFS-12553. Add nameServiceId to QJournalProtocol. Contributed by Bharat Viswanadham

-  synchronized Journal getOrCreateJournal(String jid, StartupOption startOpt)
+  synchronized Journal getOrCreateJournal(String jid,
+                                          String nameServiceId,
+                                          StartupOption startOpt)
-        startSyncer(journal, jid);
+        startSyncer(journal, jid, nameServiceId);
+    } else if (journalSyncersById.get(jid) != null &&
+        !journalSyncersById.get(jid).isJournalSyncerStarted() &&
+        !journalsById.get(jid).getTriedJournalSyncerStartedwithnsId() &&
+        nameServiceId != null) {
+      startSyncer(journal, jid, nameServiceId);
+
-  private void startSyncer(Journal journal, String jid) {
-    JournalNodeSyncer jSyncer = new JournalNodeSyncer(this, journal, jid, conf);
-    journalSyncersById.put(jid, jSyncer);
-    jSyncer.start();
+  @VisibleForTesting
+  public boolean getJournalSyncerStatus(String jid) {
+    if (journalSyncersById.get(jid) != null) {
+      return journalSyncersById.get(jid).isJournalSyncerStarted();
+    } else {
+      return false;
+    }
+  }
+
+  private void startSyncer(Journal journal, String jid, String nameServiceId) {
+    JournalNodeSyncer jSyncer = journalSyncersById.get(jid);
+    if (jSyncer == null) {
+      jSyncer = new JournalNodeSyncer(this, journal, jid, conf, nameServiceId);
+      journalSyncersById.put(jid, jSyncer);
+    }
+    jSyncer.start(nameServiceId);
-    return getOrCreateJournal(jid, StartupOption.REGULAR);
+    return getOrCreateJournal(jid, null, StartupOption.REGULAR);
+  }
+
+  public Journal getOrCreateJournal(String jid,
+                                    String nameServiceId)
+      throws IOException {
+    return getOrCreateJournal(jid, nameServiceId, StartupOption.REGULAR);
-  public void doFinalize(String journalId) throws IOException {
-    getOrCreateJournal(journalId).doFinalize();
+  public void doFinalize(String journalId,
+                         String nameServiceId)
+      throws IOException {
+    getOrCreateJournal(journalId, nameServiceId).doFinalize();
-      StorageInfo prevStorage, int targetLayoutVersion) throws IOException {
-    return getOrCreateJournal(journalId, StartupOption.ROLLBACK).canRollBack(
+      StorageInfo prevStorage, int targetLayoutVersion,
+      String nameServiceId) throws IOException {
+    return getOrCreateJournal(journalId,
+        nameServiceId, StartupOption.ROLLBACK).canRollBack(
-  public void doRollback(String journalId) throws IOException {
-    getOrCreateJournal(journalId, StartupOption.ROLLBACK).doRollback();
+  public void doRollback(String journalId,
+                         String nameServiceId) throws IOException {
+    getOrCreateJournal(journalId,
+        nameServiceId, StartupOption.ROLLBACK).doRollback();
-  public void discardSegments(String journalId, long startTxId)
+  public void discardSegments(String journalId, long startTxId,
+                              String nameServiceId)
-    getOrCreateJournal(journalId).discardSegments(startTxId);
+    getOrCreateJournal(journalId, nameServiceId).discardSegments(startTxId);
-  public Long getJournalCTime(String journalId) throws IOException {
-    return getOrCreateJournal(journalId).getJournalCTime();
+  public Long getJournalCTime(String journalId,
+                              String nameServiceId) throws IOException {
+    return getOrCreateJournal(journalId, nameServiceId).getJournalCTime();
+
+  @VisibleForTesting
+  public Journal getJournal(String  jid) {
+    return journalsById.get(jid);
+  }
+
