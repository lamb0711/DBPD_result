HDFS-14333. Datanode fails to start if any disk has errors during Namenode registration. Contributed by Stephen O'Donnell.

Signed-off-by: Wei-Chiu Chuang <weichiu@apache.org>

+import java.util.concurrent.ConcurrentHashMap;
-    final List<IOException> exceptions = Collections.synchronizedList(
-        new ArrayList<IOException>());
+    final Map<FsVolumeSpi, IOException> unhealthyDataDirs =
+        new ConcurrentHashMap<FsVolumeSpi, IOException>();
-            exceptions.add(ioe);
+            unhealthyDataDirs.put(v, ioe);
-    if (!exceptions.isEmpty()) {
-      throw exceptions.get(0);
-    }
+    if (!unhealthyDataDirs.isEmpty()) {
+      throw new AddBlockPoolException(unhealthyDataDirs);
+    }
-    
-    final List<IOException> exceptions = Collections.synchronizedList(
-        new ArrayList<IOException>());
+    final Map<FsVolumeSpi, IOException> unhealthyDataDirs =
+        new ConcurrentHashMap<FsVolumeSpi, IOException>();
-            exceptions.add(ioe);
+            unhealthyDataDirs.put(v, ioe);
-    if (!exceptions.isEmpty()) {
-      throw exceptions.get(0);
-    }
-    
+    if (!unhealthyDataDirs.isEmpty()) {
+      throw new AddBlockPoolException(unhealthyDataDirs);
+    }
-  
+
