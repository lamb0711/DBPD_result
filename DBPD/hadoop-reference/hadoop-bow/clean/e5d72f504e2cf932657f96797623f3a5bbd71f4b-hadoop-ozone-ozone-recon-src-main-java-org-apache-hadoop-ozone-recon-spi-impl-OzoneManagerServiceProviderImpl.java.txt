HDDS-1234. Iterate the OM DB snapshot and populate the recon container DB. Contributed by Aravindan Vijayan.

-import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.RECON_OM_SNAPSHOT_TASK_INITIAL_DELAY;
-import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.RECON_OM_SNAPSHOT_TASK_INITIAL_DELAY_DEFAULT;
-import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.RECON_OM_SNAPSHOT_TASK_INTERVAL;
-import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.RECON_OM_SNAPSHOT_TASK_INTERVAL_DEFAULT;
-import java.util.concurrent.Executors;
-import java.util.concurrent.ScheduledExecutorService;
-  private ScheduledExecutorService executorService;
-    executorService = Executors.newSingleThreadScheduledExecutor();
-  public void start() throws IOException {
+  public void init() throws IOException {
+    updateReconOmDBWithNewSnapshot();
+  }
-    //Schedule a task to periodically obtain the DB snapshot from OM and
+  @Override
+  public void updateReconOmDBWithNewSnapshot() throws IOException {
+    //Obtain the current DB snapshot from OM and
-    long initialDelay = configuration.getTimeDuration(
-        RECON_OM_SNAPSHOT_TASK_INITIAL_DELAY,
-        RECON_OM_SNAPSHOT_TASK_INITIAL_DELAY_DEFAULT,
-        TimeUnit.MILLISECONDS);
-    long interval = configuration.getTimeDuration(
-        RECON_OM_SNAPSHOT_TASK_INTERVAL,
-        RECON_OM_SNAPSHOT_TASK_INTERVAL_DEFAULT,
-        TimeUnit.MILLISECONDS);
-
-    LOG.info("Starting thread to get OM DB Snapshot.");
-    executorService.scheduleAtFixedRate(() -> {
-      DBCheckpoint dbSnapshot = getOzoneManagerDBSnapshot();
-      if (dbSnapshot != null && dbSnapshot.getCheckpointLocation() != null) {
-        try {
-          omMetadataManager.updateOmDB(dbSnapshot.getCheckpointLocation()
-              .toFile());
-        } catch (IOException e) {
-          LOG.error("Unable to refresh Recon OM DB Snapshot. ", e);
-        }
-      } else {
-        LOG.error("Null snapshot got from OM, {}",
-            dbSnapshot.getCheckpointLocation());
+    DBCheckpoint dbSnapshot = getOzoneManagerDBSnapshot();
+    if (dbSnapshot != null && dbSnapshot.getCheckpointLocation() != null) {
+      try {
+        omMetadataManager.updateOmDB(dbSnapshot.getCheckpointLocation()
+            .toFile());
+      } catch (IOException e) {
+        LOG.error("Unable to refresh Recon OM DB Snapshot. ", e);
-    }, initialDelay, interval, TimeUnit.MILLISECONDS);
+    } else {
+      LOG.error("Null snapshot location got from OM.");
+    }
