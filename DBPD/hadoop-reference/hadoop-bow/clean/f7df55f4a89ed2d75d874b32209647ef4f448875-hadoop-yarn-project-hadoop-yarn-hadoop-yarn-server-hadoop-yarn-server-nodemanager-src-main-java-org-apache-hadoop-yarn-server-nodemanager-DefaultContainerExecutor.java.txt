YARN-9602. Use logger format in Container Executor. Contributed by Abhishek Modi.

-    LOG.info("Copying from " + nmPrivateContainerTokensPath
-        + " to " + tokenDst);
+    LOG.info("Copying from {} to {}", nmPrivateContainerTokensPath, tokenDst);
-    LOG.info("Localizer CWD set to " + appStorageDir + " = " 
-        + localizerFc.getWorkingDirectory());
+    LOG.info("Localizer CWD set to {} = {}", appStorageDir,
+        localizerFc.getWorkingDirectory());
-      LOG.info("Container " + containerIdStr
-          + " pid file not set. Returning terminated error");
+      LOG.info("Container {} pid file not set. Returning terminated error",
+          containerIdStr);
-        LOG.info("Container " + containerIdStr +
-            " was marked as inactive. Returning terminated error");
+        LOG.info("Container {} was marked as inactive. "
+            + "Returning terminated error", containerIdStr);
-      LOG.warn("Exit code from container " + containerId + " is : " + exitCode);
+      LOG.warn("Exit code from container {} is : {}", containerId, exitCode);
-        LOG.warn("Exception from container-launch with container ID: "
-            + containerId + " and exit code: " + exitCode , e);
+        LOG.warn("Exception from container-launch with container ID: {}"
+            + " and exit code: {}", containerId, exitCode, e);
-      LOG.info("launchContainer: " + Arrays.toString(command));
-      return new ShellCommandExecutor(
-          command,
-          workDir,
-          environment,
-          0L,
-          false);
+    LOG.info("launchContainer: {}", Arrays.toString(command));
+    return new ShellCommandExecutor(
+        command,
+        workDir,
+        environment,
+        0L,
+        false);
-      LOG.info("Deleting absolute path : " + subDir);
+      LOG.info("Deleting absolute path : {}", subDir);
-        LOG.warn("delete returned false for path: [" + subDir + "]");
+        LOG.warn("delete returned false for path: [{}]", subDir);
-      LOG.info("Deleting path : " + del);
+      LOG.info("Deleting path : {}", del);
-          LOG.warn("delete returned false for path: [" + del + "]");
+          LOG.warn("delete returned false for path: [{}]", del);
-        LOG.warn("Unable to get Free Space for " + curBase.toString(), e);
+        LOG.warn("Unable to get Free Space for {}", curBase, e);
-        LOG.warn("Unable to create the user directory : " + localDir, e);
+        LOG.warn("Unable to create the user directory : {}", localDir, e);
-    LOG.info("Initializing user " + user);
+    LOG.info("Initializing user {}", user);
-        LOG.warn("Unable to create app cache directory : " + appDir, e);
+        LOG.warn("Unable to create app cache directory : {}", appDir, e);
-        LOG.warn("Unable to create file cache directory : " + distDir, e);
+        LOG.warn("Unable to create file cache directory : {}", distDir, e);
-        LOG.warn("Unable to create app directory " + fullAppDir.toString(), e);
+        LOG.warn("Unable to create app directory {}",
+            fullAppDir, e);
-        LOG.warn("Unable to create the app-log directory : " + appLogDir, e);
+        LOG.warn("Unable to create the app-log directory : {}", appLogDir, e);
-        LOG.warn("Unable to create the container-log directory : "
-            + appLogDir, e);
+        LOG.warn("Unable to create the container-log directory : {}",
+            appLogDir, e);
