HDFS-15217 Add more information to longest write/read lock held log


+import java.util.function.Supplier;
+
+
+
+
+  public void readUnlock(String opName,
+      Supplier<String> lockReportInfoSupplier) {
+    this.fsLock.readUnlock(opName, lockReportInfoSupplier);
+  }
+
+
+
+
+  public void writeUnlock(String opName,
+      Supplier<String> lockReportInfoSupplier) {
+    this.fsLock.writeUnlock(opName, lockReportInfoSupplier);
+  }
+
-      readUnlock(operationName);
+      readUnlock(operationName, getLockReportInfoSupplier(null));
-        readUnlock(operationName);
+        readUnlock(operationName, getLockReportInfoSupplier(null));
-    FileStatus auditStat;
+    FileStatus auditStat = null;
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, null, auditStat));
-    FileStatus auditStat;
+    FileStatus auditStat = null;
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, null, auditStat));
-        readUnlock(operationName);
+        readUnlock(operationName, getLockReportInfoSupplier(srcArg));
-          writeUnlock(operationName);
+          writeUnlock(operationName, getLockReportInfoSupplier(srcArg));
+    String srcsStr = Arrays.toString(srcs);
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(srcsStr, target, stat));
-      logAuditEvent(false, operationName, Arrays.toString(srcs),
-          target, stat);
+      logAuditEvent(false, operationName, srcsStr, target, stat);
-    logAuditEvent(true, operationName, Arrays.toString(srcs), target, stat);
+    logAuditEvent(true, operationName, srcsStr, target, stat);
-    FileStatus auditStat;
+    FileStatus auditStat = null;
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, null, auditStat));
-    final FSDirTruncateOp.TruncateResult r;
+    FSDirTruncateOp.TruncateResult r = null;
-        writeUnlock(operationName);
+        FileStatus status = r != null ? r.getFileStatus() : null;
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, null, status));
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(link, target, auditStat));
-        writeUnlock(operationName);
+        writeUnlock(operationName, getLockReportInfoSupplier(src));
-    FileStatus auditStat;
+    FileStatus auditStat = null;
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, null, auditStat));
-    FileStatus auditStat;
+    FileStatus auditStat = null;
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, null, auditStat));
-    FileStatus auditStat;
+    FileStatus auditStat = null;
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, null, auditStat));
-      writeUnlock("create");
+      writeUnlock("create", getLockReportInfoSupplier(src, null, stat));
-        writeUnlock(operationName);
+        writeUnlock(operationName, getLockReportInfoSupplier(srcArg));
-        writeUnlock(operationName);
+        FileStatus status = ret != null ? ret.auditStat : null;
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, dst, status));
-        writeUnlock(operationName);
+        FileStatus status = res != null ? res.auditStat : null;
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, dst, status));
-        writeUnlock(operationName);
+        writeUnlock(operationName, getLockReportInfoSupplier(src));
-        readUnlock(operationName);
+        readUnlock(operationName, getLockReportInfoSupplier(src));
-        readUnlock(operationName);
+        readUnlock(operationName, getLockReportInfoSupplier(src));
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, null, auditStat));
-        readUnlock(operationName);
+        readUnlock(operationName, getLockReportInfoSupplier(src));
-        readUnlock(operationName);
+        readUnlock(operationName, getLockReportInfoSupplier(src));
-        writeUnlock(operationName);
+        writeUnlock(operationName, getLockReportInfoSupplier(src));
-        readUnlock(operationName);
+        readUnlock(operationName, getLockReportInfoSupplier(src));
-      readUnlock(operationName);
+      readUnlock(operationName,
+          getLockReportInfoSupplier(Arrays.toString(srcs)));
-      readUnlock(operationName);
+      readUnlock(operationName, getLockReportInfoSupplier(null));
-      readUnlock(operationName);
+      readUnlock(operationName, getLockReportInfoSupplier(null));
-      readUnlock(operationName);
+      readUnlock(operationName, getLockReportInfoSupplier(null));
-      writeUnlock(operationName);
+      writeUnlock(operationName, getLockReportInfoSupplier(null));
-      writeUnlock(operationName);
+      writeUnlock(operationName, getLockReportInfoSupplier(null));
-      writeUnlock("enterSafeMode");
+      writeUnlock("enterSafeMode", getLockReportInfoSupplier(null));
-      writeUnlock("leaveSafeMode");
+      writeUnlock("leaveSafeMode", getLockReportInfoSupplier(null));
-      writeUnlock(operationName);
+      writeUnlock(operationName, getLockReportInfoSupplier(null));
-    final String tokenId;
+    String tokenId = null;
-      writeUnlock(operationName);
+      writeUnlock(operationName, getLockReportInfoSupplier(tokenId));
-    String tokenId;
+    String tokenId = null;
-        writeUnlock(operationName);
+        writeUnlock(operationName, getLockReportInfoSupplier(tokenId));
-    String tokenId;
+    String tokenId = null;
-        writeUnlock(operationName);
+        writeUnlock(operationName, getLockReportInfoSupplier(tokenId));
-      writeUnlock(operationName);
+      writeUnlock(operationName, getLockReportInfoSupplier(path));
-      writeUnlock(operationName);
+      writeUnlock(operationName, getLockReportInfoSupplier(path));
-        writeUnlock(operationName);
+        writeUnlock(operationName, getLockReportInfoSupplier(snapshotRoot));
-        writeUnlock(operationName);
+        writeUnlock(operationName, getLockReportInfoSupplier(oldSnapshotRoot,
+            newSnapshotRoot));
-        readUnlock(operationName);
+        readUnlock(operationName, getLockReportInfoSupplier(null));
-        readUnlock(operationName);
+        readUnlock(operationName, getLockReportInfoSupplier(fromSnapshotRoot,
+            toSnapshotRoot));
-        readUnlock(operationName);
+        readUnlock(operationName, getLockReportInfoSupplier(fromSnapshotRoot,
+            toSnapshotRoot));
-        writeUnlock(operationName);
+        writeUnlock(operationName, getLockReportInfoSupplier(rootPath));
-      readUnlock(operationName);
+      readUnlock(operationName, getLockReportInfoSupplier(null));
-      writeUnlock(operationName);
+      writeUnlock(operationName, getLockReportInfoSupplier(null));
-      writeUnlock(operationName);
+      writeUnlock(operationName, getLockReportInfoSupplier(null));
-        writeUnlock(operationName);
+        effectiveDirectiveStr = effectiveDirective != null ?
+            effectiveDirective.toString() : null;
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(effectiveDirectiveStr));
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(idStr, directive.toString()));
-        writeUnlock(operationName);
+        writeUnlock(operationName, getLockReportInfoSupplier(idStr));
-        readUnlock(operationName);
+        readUnlock(operationName,
+            getLockReportInfoSupplier(filter.toString()));
-        writeUnlock(operationName);
+        writeUnlock(operationName, getLockReportInfoSupplier(poolInfoStr));
-        writeUnlock(operationName);
+        writeUnlock(operationName, getLockReportInfoSupplier(poolNameStr,
+            req == null ? null : req.toString()));
-        writeUnlock(operationName);
+        writeUnlock(operationName, getLockReportInfoSupplier(poolNameStr));
-        readUnlock(operationName);
+        readUnlock(operationName, getLockReportInfoSupplier(null));
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, null, auditStat));
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, null, auditStat));
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, null, auditStat));
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, null, auditStat));
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, null, auditStat));
-        readUnlock(operationName);
+        readUnlock(operationName, getLockReportInfoSupplier(src));
-    final FileStatus resultingStat;
+    FileStatus resultingStat = null;
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, null, resultingStat));
-        readUnlock(operationName);
+        readUnlock(operationName,
+            getLockReportInfoSupplier(srcArg, null, resultingStat));
-      readUnlock(operationName);
+      readUnlock(operationName, getLockReportInfoSupplier(null));
-      readUnlock(operationName);
+      readUnlock(operationName, getLockReportInfoSupplier(null));
-      writeUnlock();
+      writeUnlock(action + "reencryption", getLockReportInfoSupplier(zone));
-      writeUnlock(operationName);
+      writeUnlock(operationName,
+          getLockReportInfoSupplier(srcArg, null, resultingStat));
-      writeUnlock(operationName);
+      writeUnlock(operationName,
+          getLockReportInfoSupplier(addECPolicyNames.toString()));
-      writeUnlock(operationName);
+      writeUnlock(operationName, getLockReportInfoSupplier(ecPolicyName));
-        writeUnlock(operationName);
+        writeUnlock(operationName, getLockReportInfoSupplier(ecPolicyName));
-        writeUnlock(operationName);
+        writeUnlock(operationName, getLockReportInfoSupplier(ecPolicyName));
-      writeUnlock(operationName);
+      writeUnlock(operationName,
+          getLockReportInfoSupplier(srcArg, null, resultingStat));
-      readUnlock();
+      readUnlock(operationName, getLockReportInfoSupplier(null));
-   * Get the erasure coding policy information for specified path
+   * Get the erasure coding policy information for specified path.
-      readUnlock(operationName);
+      readUnlock(operationName, getLockReportInfoSupplier(src));
-      readUnlock(operationName);
+      readUnlock(operationName, getLockReportInfoSupplier(null));
-      readUnlock(operationName);
+      readUnlock(operationName, getLockReportInfoSupplier(null));
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, null, auditStat));
-        readUnlock(operationName);
+        readUnlock(operationName, getLockReportInfoSupplier(src));
-        readUnlock(operationName);
+        readUnlock(operationName, getLockReportInfoSupplier(src));
-        writeUnlock(operationName);
+        writeUnlock(operationName,
+            getLockReportInfoSupplier(src, null, auditStat));
-        readUnlock(operationName);
+        readUnlock(operationName, getLockReportInfoSupplier(src));
+  private Supplier<String> getLockReportInfoSupplier(String src) {
+    return getLockReportInfoSupplier(src, null);
+  }
+
+  private Supplier<String> getLockReportInfoSupplier(String src, String dst) {
+    return getLockReportInfoSupplier(src, dst, (FileStatus) null);
+  }
+
+  private Supplier<String> getLockReportInfoSupplier(String src, String dst,
+      HdfsFileStatus stat) {
+    FileStatus status = null;
+    if (stat != null) {
+      Path symlink = stat.isSymlink()
+          ? new Path(DFSUtilClient.bytes2String(stat.getSymlinkInBytes()))
+          : null;
+      Path path = new Path(src);
+      status = new FileStatus(stat.getLen(), stat.isDirectory(),
+        stat.getReplication(), stat.getBlockSize(),
+        stat.getModificationTime(),
+        stat.getAccessTime(), stat.getPermission(), stat.getOwner(),
+        stat.getGroup(), symlink, path);
+    }
+    return getLockReportInfoSupplier(src, dst, status);
+  }
+
+  private Supplier<String> getLockReportInfoSupplier(String src, String dst,
+      FileStatus status) {
+    return () -> {
+      UserGroupInformation ugi = Server.getRemoteUser();
+      String userName = ugi != null ? ugi.toString() : null;
+      InetAddress addr = Server.getRemoteIp();
+      StringBuilder sb = new StringBuilder();
+      String s = escapeJava(src);
+      String d = escapeJava(dst);
+      sb.append("ugi=").append(userName).append(",")
+          .append("ip=").append(addr).append(",")
+          .append("src=").append(s).append(",")
+          .append("dst=").append(d).append(",");
+      if (null == status) {
+        sb.append("perm=null");
+      } else {
+        sb.append("perm=")
+            .append(status.getOwner()).append(":")
+            .append(status.getGroup()).append(":")
+            .append(status.getPermission());
+      }
+      return sb.toString();
+    };
+  }
+
