HDFS-12506. Ozone: ListBucket is too slow. Contributed by Weiwei Yang.

-import org.apache.hadoop.ozone.ksm.helpers.*;
+import org.apache.hadoop.ozone.ksm.helpers.KsmKeyInfo;
+import org.apache.hadoop.ozone.ksm.helpers.KsmBucketInfo;
+import org.apache.hadoop.ozone.ksm.helpers.KsmVolumeArgs;
+import org.apache.hadoop.ozone.ksm.helpers.KsmKeyLocationInfo;
-    String keyStr = getBucketKeyPrefix(volume, bucket);
-    keyStr = Strings.isNullOrEmpty(key) ? keyStr + OzoneConsts.KSM_KEY_PREFIX
-        : keyStr + OzoneConsts.KSM_KEY_PREFIX + key;
-    return keyStr;
+    String keyVB = OzoneConsts.KSM_KEY_PREFIX + volume
+        + OzoneConsts.KSM_KEY_PREFIX + bucket
+        + OzoneConsts.KSM_KEY_PREFIX;
+    return Strings.isNullOrEmpty(key) ? keyVB : keyVB + key;
-    String keyKeyString = OzoneConsts.KSM_VOLUME_PREFIX + volume
-        + OzoneConsts.KSM_BUCKET_PREFIX + bucket + OzoneConsts.KSM_KEY_PREFIX
+    String keyKeyString = OzoneConsts.KSM_KEY_PREFIX + volume
+        + OzoneConsts.KSM_KEY_PREFIX + bucket + OzoneConsts.KSM_KEY_PREFIX
-    String dbVolumeRootName = OzoneConsts.KSM_VOLUME_PREFIX + volume;
+    String dbVolumeRootName = OzoneConsts.KSM_VOLUME_PREFIX + volume
+        + OzoneConsts.KSM_BUCKET_PREFIX;
-    // Seek to the root of the volume and look for the next key
-        store.peekAround(1, dbVolumeRootKey);
+        store.peekAround(0, dbVolumeRootKey);
-      String firstBucketKey = DFSUtil.bytes2String(volumeRoot.getKey());
-      return !firstBucketKey.startsWith(dbVolumeRootName
-          + OzoneConsts.KSM_BUCKET_PREFIX);
+      return !DFSUtil.bytes2String(volumeRoot.getKey())
+          .startsWith(dbVolumeRootName);
-    String keyRootName = OzoneConsts.KSM_VOLUME_PREFIX + volume
-        + OzoneConsts.KSM_BUCKET_PREFIX + bucket;
+    String keyRootName = OzoneConsts.KSM_KEY_PREFIX + volume
+        + OzoneConsts.KSM_KEY_PREFIX + bucket + OzoneConsts.KSM_KEY_PREFIX;
-    ImmutablePair<byte[], byte[]> firstKey = store.peekAround(1, keyRoot);
+    ImmutablePair<byte[], byte[]> firstKey = store.peekAround(0, keyRoot);
-          .startsWith(keyRootName + OzoneConsts.KSM_KEY_PREFIX);
+          .startsWith(keyRootName);
-    // A bucket must start with /volume/bucket_prefix
-    // and exclude keys /volume/bucket_xxx/key_xxx
+    // A bucket starts with /#volume/#bucket_prefix
-        return bucket.startsWith(bucketNamePrefix) &&
-            !bucket.replaceFirst(bucketNamePrefix, "")
-                .contains(OzoneConsts.KSM_KEY_PREFIX);
+        return bucket.startsWith(bucketNamePrefix);
-      //Since we are excluding start key from the result,
+      // Since we are excluding start key from the result,
-      rangeResult = store.getRangeKVs(
+      rangeResult = store.getSequentialRangeKVs(
-      rangeResult = store.getRangeKVs(null, maxNumOfBuckets, filter);
+      rangeResult = store.getSequentialRangeKVs(null, maxNumOfBuckets, filter);
