YARN-6394. Support specifying YARN related params in the service REST API. Contributed by Jian He

-   * Config Type.  XML, JSON, YAML, TEMPLATE, ENV and HADOOP_XML are supported.
+   * Config Type.  XML, JSON, YAML, TEMPLATE and HADOOP_XML are supported.
-        "TEMPLATE"), ENV("ENV"), HADOOP_XML("HADOOP_XML"),;
+        "TEMPLATE"), HADOOP_XML("HADOOP_XML"),;
-  private Map<String, String> props = new HashMap<>();
+  private Map<String, String> properties = new HashMap<>();
-    if (this.getProps() != null && !this.getProps().isEmpty()) {
-      copy.getProps().putAll(this.getProps());
+    if (this.getProperties() != null && !this.getProperties().isEmpty()) {
+      copy.getProperties().putAll(this.getProperties());
-  public ConfigFile props(Map<String, String> props) {
-    this.props = props;
+  public ConfigFile properties(Map<String, String> properties) {
+    this.properties = properties;
-  @JsonProperty("props")
-  public Map<String, String> getProps() {
-    return props;
+  @JsonProperty("properties")
+  public Map<String, String> getProperties() {
+    return properties;
-  public void setProps(Map<String, String> props) {
-    this.props = props;
+  public void setProperties(Map<String, String> properties) {
+    this.properties = properties;
-    String value = props.get(name.trim());
+    String value = properties.get(name.trim());
-    return Boolean.valueOf(props.get(name.trim()));
+    return Boolean.valueOf(properties.get(name.trim()));
-    return Objects.hash(type, destFile, srcFile, props);
+    return Objects.hash(type, destFile, srcFile, properties);
-    sb.append("    props: ").append(toIndentedString(props)).append("\n");
+    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
