YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.

+
-            String leafQueueName) throws IOException {
+            String leafQueuePath) throws IOException {
-          "mapping contains invalid or non-leaf queue [" + leafQueueName
+          "mapping contains invalid or non-leaf queue [" + leafQueuePath
-      throw new IOException("mapping contains leaf queue [" + leafQueueName
+      throw new IOException("mapping contains leaf queue [" + leafQueuePath
-    } else if (!parentQueue.getQueueName().equals(parentQueueName)) {
+    } else if (!parentQueue.getQueueShortName().equals(parentQueueName)
+        && !parentQueue.getQueuePath().equals(parentQueueName)) {
-          "mapping contains invalid or non-leaf queue [" + leafQueueName
+          "mapping contains invalid or non-leaf queue [" + leafQueuePath
-              .getQueueName() + "]");
+              .getQueueShortName() + "]");
-          queuePath.getLeafQueue());
+          queuePath.getFullPath());
-          queuePath.getLeafQueue(), queuePath.getParentQueue());
+          queuePath.getFullPath(), queuePath.getParentQueue());
-          "mapping contains invalid or non-leaf queue : " + mapping.getQueue());
+          "mapping contains invalid or non-leaf queue : " +
+          mapping.getFullPath());
-            "mapping contains invalid or non-leaf queue " + mapping.getQueue());
+            "mapping contains invalid or non-leaf queue " +
+            mapping.getFullPath());
-  public static QueuePath extractQueuePath(String queueName)
-      throws IOException {
-    int parentQueueNameEndIndex = queueName.lastIndexOf(DOT);
+  public static QueuePath extractQueuePath(String queuePath) {
+    int parentQueueNameEndIndex = queuePath.lastIndexOf(DOT);
-      final String parentQueue = queueName.substring(0, parentQueueNameEndIndex)
+      final String parentQueue = queuePath.substring(0, parentQueueNameEndIndex)
-      final String leafQueue = queueName.substring(parentQueueNameEndIndex + 1)
+      final String leafQueue = queuePath.substring(parentQueueNameEndIndex + 1)
-    return new QueuePath(queueName);
+    return new QueuePath(queuePath);
-      QueueMappingEntity mapping) {
-    return getPlacementContext(mapping, mapping.getQueue());
+      QueueMappingEntity mapping, CapacitySchedulerQueueManager queueManager)
+      throws IOException {
+    return getPlacementContext(mapping, mapping.getQueue(), queueManager);
-      QueueMappingEntity mapping, String leafQueueName) {
+      QueueMappingEntity mapping, String leafQueueName,
+      CapacitySchedulerQueueManager queueManager) throws IOException {
+
+    //leafQueue name no longer identifies a queue uniquely checking ambiguity
+    if (!mapping.hasParentQueue() && queueManager.isAmbiguous(leafQueueName)) {
+      throw new IOException("mapping contains ambiguous leaf queue reference " +
+          leafQueueName);
+    }
+
