YARN-2162. Add ability in Fair Scheduler to optionally configure maxResources in terms of percentage. (Yufei Gu)

-  protected Resource maxShare;
+  private ConfigurableResource maxShare;
-  protected Resource maxChildQueueResource;
+  private ConfigurableResource maxChildQueueResource;
-  public void reinit(boolean recursive) {
+  public final void reinit(boolean recursive) {
-  public void setMaxShare(Resource maxShare){
+  public void setMaxShare(ConfigurableResource maxShare){
+  @Override
+  public Resource getMaxShare() {
+    Resource maxResource = maxShare.getResource(scheduler.getClusterResource());
+
+    // Max resource should be greater than or equal to min resource
+    Resource result = Resources.componentwiseMax(maxResource, minShare);
+
+    if (!Resources.equals(maxResource, result)) {
+      LOG.warn(String.format("Queue %s has max resources %s less than "
+          + "min resources %s", getName(), maxResource, minShare));
+    }
+    return result;
+  }
+
-  @Override
-  public Resource getMaxShare() {
-    return maxShare;
-  }
-
-  public void setMaxChildQueueResource(Resource maxChildShare){
+  public void setMaxChildQueueResource(ConfigurableResource maxChildShare){
-  public Resource getMaxChildQueueResource() {
+  public ConfigurableResource getMaxChildQueueResource() {
-    } else if (!Resources.fitsIn(getResourceUsage(), maxShare)) {
+    } else if (!Resources.fitsIn(getResourceUsage(), getMaxShare())) {
