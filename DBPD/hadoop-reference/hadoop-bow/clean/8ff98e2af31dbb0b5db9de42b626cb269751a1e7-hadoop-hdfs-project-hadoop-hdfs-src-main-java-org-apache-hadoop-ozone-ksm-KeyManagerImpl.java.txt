HDFS-12000. Ozone: Container : Add key versioning support-1. Contributed by Chen Liang.

+import org.apache.hadoop.ozone.ksm.helpers.KsmKeyLocationInfoGroup;
+import java.util.Collections;
-          .setIndex(keyInfo.getKeyLocationList().size())
-      keyInfo.appendKeyLocation(info);
+      // current version not committed, so new blocks coming now are added to
+      // the same version
+      keyInfo.appendNewBlocks(Collections.singletonList(info));
-      int idx = 0;
-            .setIndex(idx++)
-      long currentTime = Time.now();
-      KsmKeyInfo keyInfo = new KsmKeyInfo.Builder()
-          .setVolumeName(args.getVolumeName())
-          .setBucketName(args.getBucketName())
-          .setKeyName(args.getKeyName())
-          .setKsmKeyLocationInfos(locations)
-          .setCreationTime(currentTime)
-          .setModificationTime(currentTime)
-          .setDataSize(size)
-          .build();
+      byte[] keyKey = metadataManager.getDBKeyBytes(
+          volumeName, bucketName, keyName);
+      byte[] value = metadataManager.get(keyKey);
+      KsmKeyInfo keyInfo;
+      long openVersion;
+      if (value != null) {
+        // the key already exist, the new blocks will be added as new version
+        keyInfo = KsmKeyInfo.getFromProtobuf(KeyInfo.parseFrom(value));
+        // when locations.size = 0, the new version will have identical blocks
+        // as its previous version
+        openVersion = keyInfo.addNewVersion(locations);
+        keyInfo.setDataSize(size + keyInfo.getDataSize());
+      } else {
+        // the key does not exist, create a new object, the new blocks are the
+        // version 0
+        long currentTime = Time.now();
+        keyInfo = new KsmKeyInfo.Builder()
+            .setVolumeName(args.getVolumeName())
+            .setBucketName(args.getBucketName())
+            .setKeyName(args.getKeyName())
+            .setKsmKeyLocationInfos(Collections.singletonList(
+                new KsmKeyLocationInfoGroup(0, locations)))
+            .setCreationTime(currentTime)
+            .setModificationTime(currentTime)
+            .setDataSize(size)
+            .build();
+        openVersion = 0;
+      }
-      return new OpenKeySession(id, keyInfo);
+      return new OpenKeySession(id, keyInfo, openVersion);
