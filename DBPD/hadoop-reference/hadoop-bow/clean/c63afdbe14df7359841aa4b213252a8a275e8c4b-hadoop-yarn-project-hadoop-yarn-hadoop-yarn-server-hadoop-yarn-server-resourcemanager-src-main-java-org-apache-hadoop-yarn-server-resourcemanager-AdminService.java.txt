YARN-4883. Make consistent operation name in AdminService. Contributed by Kai Sasaki.

-  private final RecordFactory recordFactory = 
+  private final RecordFactory recordFactory =
-    String argName = "refreshQueues";
+    final String operation = "refreshQueues";
-    UserGroupInformation user = checkAcls(argName);
+    UserGroupInformation user = checkAcls(operation);
-    checkRMStatus(user.getShortUserName(), argName, msg);
+    checkRMStatus(user.getShortUserName(), operation, msg);
-      RMAuditLogger.logSuccess(user.getShortUserName(), argName,
+      RMAuditLogger.logSuccess(user.getShortUserName(), operation,
-      throw logAndWrapException(ioe, user.getShortUserName(), argName, msg);
+      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);
-    String argName = "refreshNodes";
+    final String operation = "refreshNodes";
-    checkRMStatus(user.getShortUserName(), argName, msg);
+    checkRMStatus(user.getShortUserName(), operation, msg);
-      RMAuditLogger.logSuccess(user.getShortUserName(), argName,
+      RMAuditLogger.logSuccess(user.getShortUserName(), operation,
-      throw logAndWrapException(ioe, user.getShortUserName(), argName, msg);
+      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);
-    String argName = "refreshSuperUserGroupsConfiguration";
-    UserGroupInformation user = checkAcls(argName);
+    final String operation = "refreshSuperUserGroupsConfiguration";
+    UserGroupInformation user = checkAcls(operation);
-    checkRMStatus(user.getShortUserName(), argName, "refresh super-user-groups.");
+    checkRMStatus(user.getShortUserName(), operation,
+            "refresh super-user-groups.");
-        argName, "AdminService");
-    
+        operation, "AdminService");
+
-    String argName = "refreshUserToGroupsMappings";
-    UserGroupInformation user = checkAcls(argName);
+    final String operation = "refreshUserToGroupsMappings";
+    UserGroupInformation user = checkAcls(operation);
-    checkRMStatus(user.getShortUserName(), argName, "refresh user-groups.");
+    checkRMStatus(user.getShortUserName(), operation, "refresh user-groups.");
-    RMAuditLogger.logSuccess(user.getShortUserName(), argName, "AdminService");
+    RMAuditLogger.logSuccess(user.getShortUserName(), operation,
+            "AdminService");
-    String argName = "refreshAdminAcls";
-    UserGroupInformation user = checkAcls(argName);
+    final String operation = "refreshAdminAcls";
+    UserGroupInformation user = checkAcls(operation);
-      checkRMStatus(user.getShortUserName(), argName, "refresh Admin ACLs.");
+      checkRMStatus(user.getShortUserName(), operation, "refresh Admin ACLs.");
-    RMAuditLogger.logSuccess(user.getShortUserName(), argName,
+    RMAuditLogger.logSuccess(user.getShortUserName(), operation,
-             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, 
+             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,
-          new IOException("Service Authorization (" + 
-              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + 
+          new IOException("Service Authorization (" +
+              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION +
-    String argName = "refreshServiceAcls";
-    UserGroupInformation user = checkAcls(argName);
+    final String operation = "refreshServiceAcls";
+    UserGroupInformation user = checkAcls(operation);
-    checkRMStatus(user.getShortUserName(), argName, "refresh Service ACLs.");
+    checkRMStatus(user.getShortUserName(), operation, "refresh Service ACLs.");
-    RMAuditLogger.logSuccess(user.getShortUserName(), argName, "AdminService");
+    RMAuditLogger.logSuccess(user.getShortUserName(), operation,
+            "AdminService");
-    String argName = "updateNodeResource";
-    UserGroupInformation user = checkAcls(argName);
-    
-    checkRMStatus(user.getShortUserName(), argName, "update node resource.");
-    
+    final String operation = "updateNodeResource";
+    UserGroupInformation user = checkAcls(operation);
+
+    checkRMStatus(user.getShortUserName(), operation, "update node resource.");
+
-    // verify nodes are all valid first. 
+    // verify nodes are all valid first.
-    
+
-      
+
-      RMAuditLogger.logSuccess(user.getShortUserName(), argName,
+      RMAuditLogger.logSuccess(user.getShortUserName(), operation,
-    UpdateNodeResourceResponse response = 
+    UpdateNodeResourceResponse response =
-    String argName = "refreshNodesResources";
-    UserGroupInformation user = checkAcls(argName);
+    final String operation = "refreshNodesResources";
+    UserGroupInformation user = checkAcls(operation);
-    checkRMStatus(user.getShortUserName(), argName, msg);
+    checkRMStatus(user.getShortUserName(), operation, msg);
-      RMAuditLogger.logSuccess(user.getShortUserName(), argName,
+      RMAuditLogger.logSuccess(user.getShortUserName(), operation,
-      throw logAndWrapException(ioe, user.getShortUserName(), argName, msg);
+      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);
-    String argName = "addToClusterNodeLabels";
+    final String operation = "addToClusterNodeLabels";
-    UserGroupInformation user = checkAcls(argName);
+    UserGroupInformation user = checkAcls(operation);
-    checkRMStatus(user.getShortUserName(), argName, msg);
+    checkRMStatus(user.getShortUserName(), operation, msg);
-          .logSuccess(user.getShortUserName(), argName, "AdminService");
+          .logSuccess(user.getShortUserName(), operation, "AdminService");
-      throw logAndWrapException(ioe, user.getShortUserName(), argName, msg);
+      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);
-    String operation = "removeFromClusterNodeLabels";
+    final String operation = "removeFromClusterNodeLabels";
-    String operation = "replaceLabelsOnNode";
+    final String operation = "replaceLabelsOnNode";
-    String argName = "checkForDecommissioningNodes";
+    final String operation = "checkForDecommissioningNodes";
-    checkRMStatus(user.getShortUserName(), argName, msg);
+    checkRMStatus(user.getShortUserName(), operation, msg);
-    RMAuditLogger.logSuccess(user.getShortUserName(), argName, "AdminService");
+    RMAuditLogger.logSuccess(user.getShortUserName(), operation,
+            "AdminService");
-    String argName = "refreshClusterMaxPriority";
-    String msg = "refresh cluster max priority";
-    UserGroupInformation user = checkAcls(argName);
+    final String operation = "refreshClusterMaxPriority";
+    final String msg = "refresh cluster max priority";
+    UserGroupInformation user = checkAcls(operation);
-    checkRMStatus(user.getShortUserName(), argName, msg);
+    checkRMStatus(user.getShortUserName(), operation, msg);
-          .logSuccess(user.getShortUserName(), argName, "AdminService");
+          .logSuccess(user.getShortUserName(), operation, "AdminService");
-      throw logAndWrapException(e, user.getShortUserName(), argName, msg);
+      throw logAndWrapException(e, user.getShortUserName(), operation, msg);
