YARN-9213. RM Web UI v1 does not show custom resource allocations for containers page. Contributed by Szilard Nemeth.

-import static org.apache.hadoop.yarn.util.StringHelper.join;
-import static org.apache.hadoop.yarn.webapp.YarnWebParams.CONTAINER_ID;
-
-import java.io.IOException;
-import java.security.PrivilegedExceptionAction;
-
+import com.google.common.annotations.VisibleForTesting;
+import com.google.inject.Inject;
+import org.apache.hadoop.yarn.api.records.ResourceInformation;
-
-import com.google.inject.Inject;
+import java.io.IOException;
+import java.security.PrivilegedExceptionAction;
+import java.util.Map;
+
+import static org.apache.hadoop.yarn.util.StringHelper.join;
+import static org.apache.hadoop.yarn.webapp.YarnWebParams.CONTAINER_ID;
+
-        "Resource:",
-        container.getAllocatedMB() + " Memory, "
-            + container.getAllocatedVCores() + " VCores")
+        "Resource:", getResources(container))
+  /**
+   * Creates a string representation of allocated resources to a container.
+   * Memory, followed with VCores are always the first two resources of
+   * the resulted string, followed with any custom resources, if any is present.
+   */
+  @VisibleForTesting
+  String getResources(ContainerInfo container) {
+    Map<String, Long> allocatedResources = container.getAllocatedResources();
+
+    StringBuilder sb = new StringBuilder();
+    sb.append(getResourceAsString(ResourceInformation.MEMORY_URI,
+        allocatedResources.get(ResourceInformation.MEMORY_URI))).append(", ");
+    sb.append(getResourceAsString(ResourceInformation.VCORES_URI,
+        allocatedResources.get(ResourceInformation.VCORES_URI)));
+
+    if (container.hasCustomResources()) {
+      container.getAllocatedResources().forEach((key, value) -> {
+        if (!key.equals(ResourceInformation.MEMORY_URI) &&
+            !key.equals(ResourceInformation.VCORES_URI)) {
+          sb.append(", ");
+          sb.append(getResourceAsString(key, value));
+        }
+      });
+    }
+
+    return sb.toString();
+  }
+
+  private String getResourceAsString(String resourceName, long value) {
+    final String translatedResourceName;
+    switch (resourceName) {
+    case ResourceInformation.MEMORY_URI:
+      translatedResourceName = "Memory";
+      break;
+    case ResourceInformation.VCORES_URI:
+      translatedResourceName = "VCores";
+      break;
+    default:
+      translatedResourceName = resourceName;
+      break;
+    }
+    return String.valueOf(value) + " " + translatedResourceName;
+  }
+
