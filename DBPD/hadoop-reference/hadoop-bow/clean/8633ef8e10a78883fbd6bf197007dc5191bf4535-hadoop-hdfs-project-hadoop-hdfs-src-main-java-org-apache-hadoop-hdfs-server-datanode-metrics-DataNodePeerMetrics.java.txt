HADOOP-14503. Make RollingAverages a mutable metric. Contributed by Hanisha Koneru.

-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.hdfs.DFSConfigKeys;
-import org.apache.hadoop.metrics2.lib.RollingAverages;
+import org.apache.hadoop.metrics2.lib.MutableRollingAverages;
-import java.util.concurrent.TimeUnit;
-  private final RollingAverages sendPacketDownstreamRollingAvgerages;
+  private final MutableRollingAverages sendPacketDownstreamRollingAverages;
-  public DataNodePeerMetrics(
-      final String name,
-      final long windowSizeMs,
-      final int numWindows) {
+  public DataNodePeerMetrics(final String name) {
-    sendPacketDownstreamRollingAvgerages = new RollingAverages(
-        windowSizeMs, numWindows);
+    sendPacketDownstreamRollingAverages = new MutableRollingAverages("Time");
-  public static DataNodePeerMetrics create(Configuration conf, String dnName) {
+  public static DataNodePeerMetrics create(String dnName) {
-    final long windowSizeMs = conf.getTimeDuration(
-            DFSConfigKeys.DFS_METRICS_ROLLING_AVERAGES_WINDOW_LENGTH_KEY,
-            DFSConfigKeys.DFS_METRICS_ROLLING_AVERAGES_WINDOW_LENGTH_DEFAULT,
-            TimeUnit.MILLISECONDS);
-    final int numWindows = conf.getInt(
-        DFSConfigKeys.DFS_METRICS_ROLLING_AVERAGE_NUM_WINDOWS_KEY,
-        DFSConfigKeys.DFS_METRICS_ROLLING_AVERAGE_NUM_WINDOWS_DEFAULT);
-
-    return new DataNodePeerMetrics(
-        name,
-        windowSizeMs,
-        numWindows);
+    return new DataNodePeerMetrics(name);
-    sendPacketDownstreamRollingAvgerages.add(peerAddr, elapsedMs);
+    sendPacketDownstreamRollingAverages.add(peerAddr, elapsedMs);
-    sendPacketDownstreamRollingAvgerages.snapshot(builder, true);
+    sendPacketDownstreamRollingAverages.snapshot(builder, true);
-    sendPacketDownstreamRollingAvgerages.collectThreadLocalStates();
+    sendPacketDownstreamRollingAverages.collectThreadLocalStates();
-        sendPacketDownstreamRollingAvgerages.getStats(
+        sendPacketDownstreamRollingAverages.getStats(
+
+  public MutableRollingAverages getSendPacketDownstreamRollingAverages() {
+    return sendPacketDownstreamRollingAverages;
+  }
