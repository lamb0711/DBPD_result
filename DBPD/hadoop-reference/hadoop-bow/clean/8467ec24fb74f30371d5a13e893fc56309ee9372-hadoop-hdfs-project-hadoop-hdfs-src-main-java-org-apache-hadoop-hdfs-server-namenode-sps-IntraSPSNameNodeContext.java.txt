HDFS-13110: [SPS]: Reduce the number of APIs in NamenodeProtocol used by external satisfier. Contributed by Rakesh R.

-public class IntraSPSNameNodeContext implements Context {
+public class IntraSPSNameNodeContext implements Context<Long> {
-  private SPSService service;
+  private SPSService<Long> service;
-      BlockManager blockManager, SPSService service) {
+      BlockManager blockManager, SPSService<Long> service) {
+  /**
+   * @return object containing information regarding the file or null if file
+   *         not found.
+   */
-  public HdfsFileStatus getFileInfo(long inodeID) throws IOException {
+  public HdfsFileStatus getFileInfo(Long inodeID) throws IOException {
-    HdfsFileStatus fileInfo = null;
-    try {
-      fileInfo = namesystem.getFileInfo(filePath, true, true);
-    } catch (IOException e) {
-      LOG.debug("File path:{} doesn't exists!", filePath);
-    }
-    return fileInfo;
+    return namesystem.getFileInfo(filePath, true, true);
-  public boolean hasLowRedundancyBlocks(long inodeId) {
-    return blockManager.hasLowRedundancyBlocks(inodeId);
-  }
-
-  @Override
-  public boolean isFileExist(long inodeId) {
+  public boolean isFileExist(Long inodeId) {
-  public void removeSPSHint(long inodeId) throws IOException {
+  public void removeSPSHint(Long inodeId) throws IOException {
-  public Long getNextSPSPathId() {
+  public Long getNextSPSPath() {
-  public void removeSPSPathId(long trackId) {
+  public void removeSPSPathId(Long trackId) {
-
-  @Override
-  public String getFilePath(Long inodeId) {
-    return namesystem.getFilePath(inodeId);
-  }
-
