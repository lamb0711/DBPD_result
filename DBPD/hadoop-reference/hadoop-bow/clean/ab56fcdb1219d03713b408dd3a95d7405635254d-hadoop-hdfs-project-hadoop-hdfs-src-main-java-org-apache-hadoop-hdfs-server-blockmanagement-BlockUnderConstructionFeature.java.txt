Merge remote-tracking branch 'apache/trunk' into HDFS-7285

+import java.util.ArrayList;
+import java.util.List;
+
-      "BlockUnderConstructionFeature cannot be in COMPLETE state";
+        "BlockUnderConstructionFeature cannot be in COMPLETE state";
-  void removeStaleReplicas(BlockInfo block) {
-    final long genStamp = block.getGenerationStamp();
+  List<ReplicaUnderConstruction> getStaleReplicas(long genStamp) {
+    List<ReplicaUnderConstruction> staleReplicas = new ArrayList<>();
-          r.getExpectedStorageLocation().removeBlock(block);
-          NameNode.blockStateChangeLog.debug("BLOCK* Removing stale replica "
-              + "from location: {}", r.getExpectedStorageLocation());
+          staleReplicas.add(r);
+    return staleReplicas;
-          " BlockUnderConstructionFeature.initLeaseRecovery:" +
+          " BlockUnderConstructionFeature.initializeBlockRecovery:" +
-        allLiveReplicasTriedAsPrimary = (allLiveReplicasTriedAsPrimary &&
-            replica.getChosenAsPrimary());
+        allLiveReplicasTriedAsPrimary = allLiveReplicasTriedAsPrimary
+            && replica.getChosenAsPrimary();
-    for(int i = 0; i < replicas.length; i++) {
+    for (int i = 0; i < replicas.length; i++) {
-      NameNode.blockStateChangeLog.info(
+      NameNode.blockStateChangeLog.debug(
-      replicas[0] = new ReplicaUnderConstruction(reportedBlock, storage, rState);
+      replicas[0] = new ReplicaUnderConstruction(reportedBlock, storage,
+          rState);
-        DatanodeStorageInfo expected = replicas[i].getExpectedStorageLocation();
+        DatanodeStorageInfo expected =
+            replicas[i].getExpectedStorageLocation();
-          replicas[i].setBlockId(reportedBlock.getBlockId());
