YARN-748. Moved BuilderUtils from yarn-common to yarn-server-common for eventual retirement. Contributed by Jian He.
MAPREDUCE-5297. Updated MR App since BuilderUtils is no longer public after YARN-748. Contributed by Jian He.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489257 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.util.Records;
-public interface AllocateResponse {
+public abstract class AllocateResponse {
+
+  public static AllocateResponse newInstance(int responseId,
+      List<ContainerStatus> completedContainers,
+      List<Container> allocatedContainers, List<NodeReport> updatedNodes,
+      Resource availResources, boolean reboot, int numClusterNodes,
+      PreemptionMessage preempt) {
+    AllocateResponse response = Records.newRecord(AllocateResponse.class);
+    response.setNumClusterNodes(numClusterNodes);
+    response.setResponseId(responseId);
+    response.setCompletedContainersStatuses(completedContainers);
+    response.setAllocatedContainers(allocatedContainers);
+    response.setUpdatedNodes(updatedNodes);
+    response.setAvailableResources(availResources);
+    response.setReboot(reboot);
+    response.setPreemptionMessage(preempt);
+    return response;
+  }
+
-  public boolean getReboot();
+  public abstract boolean getReboot();
-  public void setReboot(boolean reboot);
+  public abstract void setReboot(boolean reboot);
-  public int getResponseId();
+  public abstract int getResponseId();
-  public void setResponseId(int responseId);
+  public abstract void setResponseId(int responseId);
-  public List<Container> getAllocatedContainers();
+  public abstract List<Container> getAllocatedContainers();
-  public void setAllocatedContainers(List<Container> containers);
+  public abstract void setAllocatedContainers(List<Container> containers);
-  public Resource getAvailableResources();
+  public abstract Resource getAvailableResources();
-  public void setAvailableResources(Resource limit);
+  public abstract void setAvailableResources(Resource limit);
-  public List<ContainerStatus> getCompletedContainersStatuses();
+  public abstract List<ContainerStatus> getCompletedContainersStatuses();
-  public void setCompletedContainersStatuses(List<ContainerStatus> containers);
+  public abstract void setCompletedContainersStatuses(List<ContainerStatus> containers);
-  public List<NodeReport> getUpdatedNodes();
+  public abstract  List<NodeReport> getUpdatedNodes();
-  public void setUpdatedNodes(final List<NodeReport> updatedNodes);
+  public abstract void setUpdatedNodes(final List<NodeReport> updatedNodes);
-  public int getNumClusterNodes();
+  public abstract int getNumClusterNodes();
-  public void setNumClusterNodes(int numNodes);
+  public abstract void setNumClusterNodes(int numNodes);
-  public PreemptionMessage getPreemptionMessage();
+  public abstract PreemptionMessage getPreemptionMessage();
-  public void setPreemptionMessage(PreemptionMessage request);
+  public abstract void setPreemptionMessage(PreemptionMessage request);
-  public void setNMTokens(List<Token> nmTokens);
+  public abstract void setNMTokens(List<Token> nmTokens);
-  public List<Token> getNMTokens();
+  public abstract List<Token> getNMTokens();
