HDFS-6606. Optimize HDFS Encrypted Transport performance. (yliu)

+import java.util.List;
+import org.apache.hadoop.crypto.CipherOption;
+import com.google.common.collect.Lists;
-      performSaslStep1(out, in, sasl);
-
-      // step 2 (server-side only)
+      // step 2 (server-side only)
+      List<CipherOption> cipherOptions = Lists.newArrayList();
+      remoteResponse = readSaslMessageAndNegotiationCipherOptions(
+          in, cipherOptions);
+      localResponse = sasl.evaluateChallengeOrResponse(remoteResponse);
+
-      return sasl.createStreamPair(out, in);
+      CipherOption cipherOption = null;
+      if (sasl.isNegotiatedQopPrivacy()) {
+        // Negotiate a cipher option
+        cipherOption = negotiateCipherOption(dnConf.getConf(), cipherOptions);
+        if (cipherOption != null) {
+          if (LOG.isDebugEnabled()) {
+            LOG.debug("Server using cipher suite " + 
+                cipherOption.getCipherSuite().getName());
+          }
+        }
+      }
+
+      // If negotiated cipher option is not null, wrap it before sending.
+      sendSaslMessageAndNegotiatedCipherOption(out, localResponse, 
+          wrap(cipherOption, sasl));
+
+      // If negotiated cipher option is not null, we will use it to create 
+      // stream pair.
+      return cipherOption != null ? createStreamPair(
+          dnConf.getConf(), cipherOption, underlyingOut, underlyingIn, true) : 
+            sasl.createStreamPair(out, in);
