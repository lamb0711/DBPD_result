HDFS-11108. Ozone: use containers with the state machine. Contributed by Anu Engineer

+import org.apache.hadoop.ozone.container.ozoneimpl.OzoneContainer;
-  private final long taskWaitTime;
+  private final OzoneContainer container;
-   * Constructs a container state machine.
+   * Constructs a a datanode state machine.
-  public DatanodeStateMachine(Configuration conf) {
+  public DatanodeStateMachine(Configuration conf) throws IOException {
-            .setNameFormat("Container State Machine Thread - %d").build());
+            .setNameFormat("Datanode State Machine Thread - %d").build());
-    taskWaitTime = this.conf.getLong(OzoneConfigKeys.OZONE_CONTAINER_TASK_WAIT,
-        OzoneConfigKeys.OZONE_CONTAINER_TASK_WAIT_DEFAULT);
+    container = new OzoneContainer(conf);
+    container.start();
-        context.execute(executorService, taskWaitTime, TimeUnit.SECONDS);
+        context.execute(executorService, heartbeatFrequency,
+            TimeUnit.MILLISECONDS);
+
+    if(container != null) {
+      container.stop();
+    }
-     * @param value
+     * @param value  Enum Value
+
+  public static DatanodeStateMachine initStateMachine(Configuration conf)
+      throws IOException {
+    DatanodeStateMachine stateMachine = new DatanodeStateMachine(conf);
+    Runnable startStateMachineTask = () -> {
+      try {
+        stateMachine.start();
+      } catch (Exception ex) {
+        LOG.error("Unable to start the DatanodeState Machine", ex);
+      }
+    };
+    Thread thread =  new ThreadFactoryBuilder()
+        .setDaemon(true)
+        .setNameFormat("Datanode State Machine Thread - %d")
+        .build().newThread(startStateMachineTask);
+    thread.start();
+    return stateMachine;
+  }
