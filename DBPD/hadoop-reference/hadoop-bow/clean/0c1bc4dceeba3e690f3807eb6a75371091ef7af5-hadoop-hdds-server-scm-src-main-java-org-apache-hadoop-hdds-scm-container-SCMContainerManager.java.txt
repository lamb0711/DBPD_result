HDDS-981. Block allocation should involve pipeline selection and then container selection.
Contributed by Lokesh Jain.

-import org.apache.hadoop.conf.StorageUnit;
+import org.apache.hadoop.hdds.scm.pipeline.Pipeline;
-import static org.apache.hadoop.hdds.scm.ScmConfigKeys
-    .OZONE_SCM_CONTAINER_SIZE_DEFAULT;
-import static org.apache.hadoop.hdds.scm.ScmConfigKeys
-    .OZONE_SCM_CONTAINER_SIZE;
-import static org.apache.hadoop.hdds.scm.exceptions.SCMException.ResultCodes
-    .FAILED_TO_CHANGE_CONTAINER_STATE;
-  private final EventPublisher eventPublisher;
-  private final long size;
-    this.size = (long) conf.getStorageSize(OZONE_SCM_CONTAINER_SIZE,
-        OZONE_SCM_CONTAINER_SIZE_DEFAULT, StorageUnit.BYTES);
-    this.eventPublisher = eventPublisher;
+      ContainerInfo container = containerStateManager.getContainer(containerID);
-      if (!updatedContainer.isOpen()) {
-        pipelineManager.removeContainerFromPipeline(
-            updatedContainer.getPipelineID(), containerID);
+      if (updatedContainer.getState() != LifeCycleState.OPEN
+          && container.getState() == LifeCycleState.OPEN) {
+        pipelineManager
+            .removeContainerFromPipeline(updatedContainer.getPipelineID(),
+                containerID);
-   * @param owner - Owner of the container - A specific nameservice.
-   * @param type - Replication Type {StandAlone, Ratis}
-   * @param factor - Replication Factor {ONE, THREE}
-   * @param state - State of the Container-- {Open, Allocated etc.}
+   * @param owner        - Owner of the container - A specific nameservice.
+   * @param pipeline     - Pipeline to which the container should belong.
-  public ContainerInfo getMatchingContainer(
-      final long sizeRequired, String owner, ReplicationType type,
-      ReplicationFactor factor, LifeCycleState state) throws IOException {
-    return containerStateManager.getMatchingContainer(
-        sizeRequired, owner, type, factor, state);
+  public ContainerInfo getMatchingContainer(final long sizeRequired,
+      String owner, Pipeline pipeline) {
+    try {
+      //TODO: #CLUTIL See if lock is required here
+      return containerStateManager
+          .getMatchingContainer(sizeRequired, owner, pipelineManager,
+              pipeline);
+    } catch (Exception e) {
+      LOG.warn("Container allocation failed for pipeline={} requiredSize={} {}",
+          pipeline, sizeRequired, e);
+      return null;
+    }
