YARN-9497. Support grouping by diagnostics for query results of scheduler and app activities. Contributed by Tao Yang.

+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.activities.ActivitiesUtils;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.RMWSConsts;
-import java.util.ArrayList;
+import java.util.stream.Collectors;
+  // Used for groups of activities
+  private String count;
+  private List<String> nodeIds;
+
-  ActivityNodeInfo(ActivityNode node) {
+  public ActivityNodeInfo(ActivityState groupAllocationState,
+      String groupDiagnostic, List<String> groupNodeIds) {
+    this.allocationState = groupAllocationState.name();
+    this.diagnostic = groupDiagnostic;
+    this.count = String.valueOf(groupNodeIds.size());
+    this.nodeIds = groupNodeIds;
+  }
+
+  ActivityNodeInfo(ActivityNode node,
+      RMWSConsts.ActivitiesGroupBy groupBy) {
-    this.children = new ArrayList<>();
-
-    for (ActivityNode child : node.getChildren()) {
-      ActivityNodeInfo containerInfo = new ActivityNodeInfo(child);
-      this.children.add(containerInfo);
+    // only consider grouping for request type
+    if (node.isRequestType()) {
+      this.children = ActivitiesUtils
+          .getRequestActivityNodeInfos(node.getChildren(), groupBy);
+    } else {
+      this.children = node.getChildren().stream()
+          .map(e -> new ActivityNodeInfo(e, groupBy))
+          .collect(Collectors.toList());
-    if (node.getType()) {
+    if (node.isAppType()) {
+  public void setNodeIds(List<String> nodeIds) {
+    this.nodeIds = nodeIds;
+  }
+
+
+  public String getCount() {
+    return count;
+  }
+
+  public List<String> getNodeIds() {
+    return nodeIds;
+  }
+
+  public List<ActivityNodeInfo> getChildren() {
+    return children;
+  }
