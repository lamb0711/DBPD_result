YARN-8160.  Support upgrade of service that use docker containers.
            Contributed by Chandni Singh

+import java.util.concurrent.locks.Lock;
+import java.util.concurrent.locks.ReentrantLock;
+  private final Lock containerExecLock = new ReentrantLock();
+
-      return exec.launchContainer(ctx);
+      containerExecLock.lock();
+      try {
+        return exec.launchContainer(ctx);
+      } finally {
+        containerExecLock.unlock();
+      }
-      return exec.relaunchContainer(ctx);
+      containerExecLock.lock();
+      try {
+        return exec.relaunchContainer(ctx);
+      } finally {
+        containerExecLock.unlock();
+      }
-
-    // Reap the container
-    boolean result = exec.reapContainer(
-        new ContainerReapContext.Builder()
-            .setContainer(container)
-            .setUser(container.getUser())
-            .build());
-    if (!result) {
-      throw new IOException("Reap container failed for container "
-          + containerIdStr);
+    containerExecLock.lock();
+    try {
+      // Reap the container
+      boolean result = exec.reapContainer(
+          new ContainerReapContext.Builder()
+              .setContainer(container)
+              .setUser(container.getUser())
+              .build());
+      if (!result) {
+        throw new IOException("Reap container failed for container "
+            + containerIdStr);
+      }
+      cleanupContainerFiles(getContainerWorkDir());
+    } finally {
+      containerExecLock.unlock();
-    cleanupContainerFiles(getContainerWorkDir());
