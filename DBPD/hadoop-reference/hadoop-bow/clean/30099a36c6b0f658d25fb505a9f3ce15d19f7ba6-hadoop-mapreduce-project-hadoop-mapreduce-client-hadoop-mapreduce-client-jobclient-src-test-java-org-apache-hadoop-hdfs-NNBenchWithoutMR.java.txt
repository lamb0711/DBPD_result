MAPREDUCE-5248. Let NNBenchWithoutMR specify the replication factor for its test. Contributed by Erik Paulson

+  private static short replicationFactorPerFile = 1; // default is 1
-                  (short)1, bytesPerBlock);
+                  (short)replicationFactorPerFile, bytesPerBlock);
-      "  -operation <one of createWrite, openRead, rename, or delete> " +
-      "  -baseDir <base output/input DFS path> " +
-      "  -startTime <time to start, given in seconds from the epoch> " +
-      "  -numFiles <number of files to create> " +
-      "  -blocksPerFile <number of blocks to create per file> " +
-      "  [-bytesPerBlock <number of bytes to write to each block, default is 1>] " +
-      "  [-bytesPerChecksum <value for io.bytes.per.checksum>]" +
-      "Note: bytesPerBlock MUST be a multiple of bytesPerChecksum";
+      "  -operation <one of createWrite, openRead, rename, or delete>\n " +
+      "  -baseDir <base output/input DFS path>\n " +
+      "  -startTime <time to start, given in seconds from the epoch>\n" +
+      "  -numFiles <number of files to create>\n " +
+      "  -replicationFactorPerFile <Replication factor for the files, default is 1>\n" +
+      "  -blocksPerFile <number of blocks to create per file>\n" +
+      "  [-bytesPerBlock <number of bytes to write to each block, default is 1>]\n" +
+      "  [-bytesPerChecksum <value for io.bytes.per.checksum>]\n" +
+      "Note: bytesPerBlock MUST be a multiple of bytesPerChecksum\n";
+      } else if (args[i].equals("-replicationFactorPerFile")) {
+        replicationFactorPerFile = Short.parseShort(args[++i]);
+    System.out.println("   replicationFactorPerFile: " + replicationFactorPerFile);
