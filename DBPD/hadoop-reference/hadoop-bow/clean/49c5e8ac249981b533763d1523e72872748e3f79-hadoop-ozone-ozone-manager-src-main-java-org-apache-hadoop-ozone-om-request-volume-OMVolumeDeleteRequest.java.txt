HDDS-1672. Improve locking in OzoneManager. (#1016)



-
+import static org.apache.hadoop.ozone.om.lock.OzoneManagerLock.Resource.VOLUME_LOCK;
+import static org.apache.hadoop.ozone.om.lock.OzoneManagerLock.Resource.USER_LOCK;
-
-    omMetadataManager.getLock().acquireVolumeLock(volume);
-    try {
-      owner = getVolumeInfo(omMetadataManager, volume).getOwnerName();
-    } catch (IOException ex) {
-      LOG.error("Volume deletion failed for volume:{}", volume, ex);
-      omMetrics.incNumVolumeDeleteFails();
-      auditLog(auditLogger, buildAuditMessage(OMAction.DELETE_VOLUME,
-          buildVolumeAuditMap(volume), ex, userInfo));
-      return new OMVolumeDeleteResponse(null, null, null,
-          createErrorOMResponse(omResponse, ex));
-    } finally {
-      omMetadataManager.getLock().releaseVolumeLock(volume);
-    }
-
-    // Release and reacquire lock for now it will not be a problem for now, as
-    // applyTransaction serializes the operation's.
-    // TODO: Revisit this logic once HDDS-1672 checks in.
-
-    // We cannot acquire user lock holding volume lock, so released volume
-    // lock, and acquiring user and volume lock.
-
-    omMetadataManager.getLock().acquireUserLock(owner);
-    omMetadataManager.getLock().acquireVolumeLock(volume);
-
-    String dbUserKey = omMetadataManager.getUserKey(owner);
-    String dbVolumeKey = omMetadataManager.getVolumeKey(volume);
-
+    boolean acquiredUserLock = false;
+
+    omMetadataManager.getLock().acquireLock(VOLUME_LOCK, volume);
+      owner = getVolumeInfo(omMetadataManager, volume).getOwnerName();
+      acquiredUserLock = omMetadataManager.getLock().acquireLock(USER_LOCK,
+          owner);
+
+      String dbUserKey = omMetadataManager.getUserKey(owner);
+      String dbVolumeKey = omMetadataManager.getVolumeKey(volume);
+
-
-      omMetadataManager.getLock().releaseVolumeLock(volume);
-      omMetadataManager.getLock().releaseUserLock(owner);
+      if (acquiredUserLock) {
+        omMetadataManager.getLock().releaseLock(USER_LOCK, owner);
+      }
+      omMetadataManager.getLock().releaseLock(VOLUME_LOCK, volume);
