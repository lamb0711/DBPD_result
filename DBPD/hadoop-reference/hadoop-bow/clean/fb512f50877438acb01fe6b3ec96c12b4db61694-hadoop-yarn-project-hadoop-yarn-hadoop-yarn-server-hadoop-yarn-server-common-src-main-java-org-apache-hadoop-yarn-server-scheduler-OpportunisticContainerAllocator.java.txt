YARN-9697. Efficient allocation of Opportunistic containers. Contributed by Abhishek Modi.

-import com.google.common.annotations.VisibleForTesting;
-import java.util.Set;
-  static class Allocation {
+  /**
+   * This class encapsulates container and resourceName for an allocation.
+   */
+  public static class Allocation {
-    Allocation(Container container, String resourceName) {
+    /**
+     * Creates an instance of Allocation.
+     * @param container allocated container.
+     * @param resourceName location where it got allocated.
+     */
+    public Allocation(Container container, String resourceName) {
-    Container getContainer() {
+    /**
+     * Get container of the allocation.
+     * @return container of the allocation.
+     */
+    public Container getContainer() {
-    String getResourceName() {
+    /**
+     * Get resource name of the allocation.
+     * @return resource name of the allocation.
+     */
+    public String getResourceName() {
-    public Set<String> getNodeLocations() {
-      return nodeLocations.keySet();
+    public Map<String, AtomicInteger> getNodeMap() {
+      return nodeLocations;
-    public Set<String> getRackLocations() {
-      return rackLocations.keySet();
+    public Map<String, AtomicInteger> getRackMap() {
+      return rackLocations;
-  @VisibleForTesting
-  void setMaxAllocationsPerAMHeartbeat(int maxAllocationsPerAMHeartbeat) {
+  public void setMaxAllocationsPerAMHeartbeat(
+      int maxAllocationsPerAMHeartbeat) {
