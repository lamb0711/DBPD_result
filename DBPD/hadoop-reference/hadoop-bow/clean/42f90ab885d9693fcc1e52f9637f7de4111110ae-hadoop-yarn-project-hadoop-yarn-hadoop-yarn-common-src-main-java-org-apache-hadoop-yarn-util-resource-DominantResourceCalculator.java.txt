YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.

-      if ((lhs.getMemory() < rhs.getMemory() && lhs.getVirtualCores() > rhs
+      if ((lhs.getMemorySize() < rhs.getMemorySize() && lhs.getVirtualCores() > rhs
-          || (lhs.getMemory() > rhs.getMemory() && lhs.getVirtualCores() < rhs
+          || (lhs.getMemorySize() > rhs.getMemorySize() && lhs.getVirtualCores() < rhs
-      } else if (lhs.getMemory() > rhs.getMemory()
+      } else if (lhs.getMemorySize() > rhs.getMemorySize()
-      } else if (lhs.getMemory() < rhs.getMemory()
+      } else if (lhs.getMemorySize() < rhs.getMemorySize()
-            (float)resource.getMemory() / clusterResource.getMemory(), 
+            (float)resource.getMemorySize() / clusterResource.getMemorySize(),
-              (float)resource.getMemory() / clusterResource.getMemory(), 
+              (float)resource.getMemorySize() / clusterResource.getMemorySize(),
-  public int computeAvailableContainers(Resource available, Resource required) {
+  public long computeAvailableContainers(Resource available, Resource required) {
-        available.getMemory() / required.getMemory(), 
+        available.getMemorySize() / required.getMemorySize(),
-    if (r.getMemory() == 0.0f || r.getVirtualCores() == 0.0f) {
+    if (r.getMemorySize() == 0.0f || r.getVirtualCores() == 0.0f) {
-        (float)a.getMemory()/b.getMemory(), 
+        (float)a.getMemorySize()/b.getMemorySize(),
-  public Resource divideAndCeil(Resource numerator, int denominator) {
+  public Resource divideAndCeil(Resource numerator, long denominator) {
-        divideAndCeil(numerator.getMemory(), denominator),
+        divideAndCeil(numerator.getMemorySize(), denominator),
-    int normalizedMemory = Math.min(
+    long normalizedMemory = Math.min(
-        Math.max(r.getMemory(), minimumResource.getMemory()),
-        stepFactor.getMemory()),
-      maximumResource.getMemory());
-    int normalizedCores = Math.min(
+        Math.max(r.getMemorySize(), minimumResource.getMemorySize()),
+        stepFactor.getMemorySize()),
+      maximumResource.getMemorySize());
+    long normalizedCores = Math.min(
-        roundUp(r.getMemory(), stepFactor.getMemory()), 
+        roundUp(r.getMemorySize(), stepFactor.getMemorySize()),
-        roundDown(r.getMemory(), stepFactor.getMemory()),
+        roundDown(r.getMemorySize(), stepFactor.getMemorySize()),
-            (int)Math.ceil(r.getMemory() * by), stepFactor.getMemory()),
+            (int)Math.ceil(r.getMemorySize() * by), stepFactor.getMemorySize()),
-            (int)(r.getMemory() * by), 
-            stepFactor.getMemory()
+            (int)(r.getMemorySize() * by),
+            stepFactor.getMemorySize()
-    return smaller.getMemory() <= bigger.getMemory()
+    return smaller.getMemorySize() <= bigger.getMemorySize()
