YARN-4438. Implement RM leader election with curator. Contributed by Jian He

+  private boolean curatorEnabled;
+      curatorEnabled = conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR,
+          YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED);
-      if (autoFailoverEnabled) {
+      if (autoFailoverEnabled && !curatorEnabled) {
+
-          "", "RMHAProtocolService",
+          "", "RM",
-        "RMHAProtocolService");
+        "RM");
-          "transitionToStandby", "RMHAProtocolService");
+          "transitionToStandby", "RM");
-          "", "RMHAProtocolService",
+          "", "RM",
-    HAServiceState haState = rmContext.getHAServiceState();
-    HAServiceStatus ret = new HAServiceStatus(haState);
-    if (isRMActive() || haState == HAServiceProtocol.HAServiceState.STANDBY) {
-      ret.setReadyToBecomeActive();
+    if (curatorEnabled) {
+      HAServiceStatus state;
+      if (rmContext.getLeaderElectorService().hasLeaderShip()) {
+        state = new HAServiceStatus(HAServiceState.ACTIVE);
+      } else {
+        state = new HAServiceStatus(HAServiceState.STANDBY);
+      }
+      // set empty string to avoid NPE at
+      // HAServiceProtocolServerSideTranslatorPB#getServiceStatus
+      state.setNotReadyToBecomeActive("");
+      return state;
-      ret.setNotReadyToBecomeActive("State is " + haState);
+      HAServiceState haState = rmContext.getHAServiceState();
+      HAServiceStatus ret = new HAServiceStatus(haState);
+      if (isRMActive() || haState == HAServiceProtocol.HAServiceState.STANDBY) {
+        ret.setReadyToBecomeActive();
+      } else {
+        ret.setNotReadyToBecomeActive("State is " + haState);
+      }
+      return ret;
-    return ret;
-  } 
+  }
-    return this.embeddedElector.getHAZookeeperConnectionState();
+    if (curatorEnabled) {
+      return "Connected to zookeeper : " + rmContext
+          .getLeaderElectorService().getCuratorClient().getZookeeperClient()
+          .isConnected();
+    } else {
+      return this.embeddedElector.getHAZookeeperConnectionState();
+    }
