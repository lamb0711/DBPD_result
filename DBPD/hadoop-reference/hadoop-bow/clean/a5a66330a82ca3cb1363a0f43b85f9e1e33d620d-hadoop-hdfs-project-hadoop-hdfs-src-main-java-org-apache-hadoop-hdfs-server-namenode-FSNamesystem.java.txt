Merge r1455389 through r1457712 from trunk.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1457716 13f79535-47bb-0310-9956-ffa450edef68

+import static org.apache.hadoop.hdfs.DFSConfigKeys.DFS_NAMENODE_ACCESSTIME_PRECISION_DEFAULT;
-      this.accessTimePrecision = conf.getLong(DFS_NAMENODE_ACCESSTIME_PRECISION_KEY, 0);
+      this.accessTimePrecision = conf.getLong(DFS_NAMENODE_ACCESSTIME_PRECISION_KEY,
+          DFS_NAMENODE_ACCESSTIME_PRECISION_DEFAULT);
+    checkOperation(OperationCategory.UNCHECKED);
+      checkOperation(OperationCategory.UNCHECKED);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
-      if (attempt == 0) { // first attempt is with readlock
+      boolean isReadOp = (attempt == 0);
+      if (isReadOp) { // first attempt is with readlock
+        checkOperation(OperationCategory.READ);
+        checkOperation(OperationCategory.WRITE);
-        checkOperation(OperationCategory.READ);
+        if (isReadOp) {
+          checkOperation(OperationCategory.READ);
+        } else {
+          checkOperation(OperationCategory.WRITE);
+        }
-            if (attempt == 0) {
+            if (isReadOp) {
-        if (attempt == 0) {
+        if (isReadOp) {
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.READ);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.READ);
+      checkOperation(OperationCategory.READ);
+    checkOperation(OperationCategory.WRITE);
+      checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.READ);
-      checkOperation(OperationCategory.WRITE);
+      checkOperation(OperationCategory.READ);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.READ);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.READ);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.READ);
-      ) throws AccessControlException {
+      ) throws AccessControlException, StandbyException {
+    checkOperation(OperationCategory.UNCHECKED);
+      checkOperation(OperationCategory.UNCHECKED);
+    checkOperation(OperationCategory.UNCHECKED);
+      checkOperation(OperationCategory.UNCHECKED);
-  boolean restoreFailedStorage(String arg) throws AccessControlException {
+  boolean restoreFailedStorage(String arg) throws AccessControlException,
+      StandbyException {
+    checkOperation(OperationCategory.UNCHECKED);
+      checkOperation(OperationCategory.UNCHECKED);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.JOURNAL);
+    checkOperation(OperationCategory.CHECKPOINT);
+    checkOperation(OperationCategory.CHECKPOINT);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
+      checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.READ);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
+    checkOperation(OperationCategory.WRITE);
