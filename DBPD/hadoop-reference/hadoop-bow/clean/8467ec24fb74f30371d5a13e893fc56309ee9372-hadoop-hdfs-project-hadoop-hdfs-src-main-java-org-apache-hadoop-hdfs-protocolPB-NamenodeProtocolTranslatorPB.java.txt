HDFS-13110: [SPS]: Reduce the number of APIs in NamenodeProtocol used by external satisfier. Contributed by Rakesh R.

-import org.apache.hadoop.hdfs.protocol.proto.NamenodeProtocolProtos.GetFilePathRequestProto;
-import org.apache.hadoop.hdfs.protocol.proto.NamenodeProtocolProtos.GetNextSPSPathIdRequestProto;
-import org.apache.hadoop.hdfs.protocol.proto.NamenodeProtocolProtos.GetNextSPSPathIdResponseProto;
+import org.apache.hadoop.hdfs.protocol.proto.NamenodeProtocolProtos.GetNextSPSPathRequestProto;
+import org.apache.hadoop.hdfs.protocol.proto.NamenodeProtocolProtos.GetNextSPSPathResponseProto;
-import org.apache.hadoop.hdfs.protocol.proto.NamenodeProtocolProtos.HasLowRedundancyBlocksRequestProto;
-  public Long getNextSPSPathId() throws IOException {
-    GetNextSPSPathIdRequestProto req =
-        GetNextSPSPathIdRequestProto.newBuilder().build();
+  public String getNextSPSPath() throws IOException {
+    GetNextSPSPathRequestProto req =
+        GetNextSPSPathRequestProto.newBuilder().build();
-      GetNextSPSPathIdResponseProto nextSPSPathId =
-          rpcProxy.getNextSPSPathId(NULL_CONTROLLER, req);
-      return nextSPSPathId.hasFileId() ? nextSPSPathId.getFileId() : null;
-    } catch (ServiceException e) {
-      throw ProtobufHelper.getRemoteException(e);
-    }
-  }
-
-  @Override
-  public String getFilePath(Long inodeId) throws IOException {
-    GetFilePathRequestProto req =
-        GetFilePathRequestProto.newBuilder().setFileId(inodeId).build();
-    try {
-      return rpcProxy.getFilePath(NULL_CONTROLLER, req).getSrcPath();
+      GetNextSPSPathResponseProto nextSPSPath =
+          rpcProxy.getNextSPSPath(NULL_CONTROLLER, req);
+      return nextSPSPath.hasSpsPath() ? nextSPSPath.getSpsPath() : null;
-
-  @Override
-  public boolean hasLowRedundancyBlocks(long inodeId) throws IOException {
-    HasLowRedundancyBlocksRequestProto req = HasLowRedundancyBlocksRequestProto
-        .newBuilder().setInodeId(inodeId).build();
-    try {
-      return rpcProxy.hasLowRedundancyBlocks(NULL_CONTROLLER, req)
-          .getHasLowRedundancyBlocks();
-    } catch (ServiceException e) {
-      throw ProtobufHelper.getRemoteException(e);
-    }
-  }
-
