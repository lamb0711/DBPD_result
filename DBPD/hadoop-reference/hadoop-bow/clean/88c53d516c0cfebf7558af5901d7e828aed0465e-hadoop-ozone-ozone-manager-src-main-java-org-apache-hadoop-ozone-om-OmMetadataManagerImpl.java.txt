HDDS-1620. Implement Volume Write Requests to use Cache and DoubleBuffer. (#884)


+import java.util.Iterator;
+import java.util.Map;
+import org.apache.hadoop.utils.db.TypedTable;
+import org.apache.hadoop.utils.db.cache.CacheKey;
+import org.apache.hadoop.utils.db.cache.CacheValue;
+      // First check in bucket table cache.
+    Iterator<Map.Entry<CacheKey<String>, CacheValue<OmBucketInfo>>> iterator =
+        ((TypedTable< String, OmBucketInfo>) bucketTable).cacheIterator();
+    while (iterator.hasNext()) {
+      Map.Entry< CacheKey< String >, CacheValue< OmBucketInfo > > entry =
+          iterator.next();
+      String key = entry.getKey().getCacheKey();
+      OmBucketInfo omBucketInfo = entry.getValue().getCacheValue();
+      // Making sure that entry is not for delete bucket request.
+      if (key.startsWith(volumePrefix) && omBucketInfo != null) {
+        return false;
+      }
+    }
+
-      if (kv != null && kv.getKey().startsWith(volumePrefix)) {
+      // During iteration from DB, check in mean time if this bucket is not
+      // marked for delete.
+      if (kv != null && kv.getKey().startsWith(volumePrefix) &&
+          bucketTable.get(kv.getKey()) != null) {
+    //TODO: When Key ops are converted in to HA model, use cache also to
+    // determine bucket is empty or not.
