HDFS-9244. Support nested encryption zones.

Change-Id: I43a13035a8b27956e90967ee82058efb647c3415

+import java.io.FileNotFoundException;
-   * Must be called while holding the manager lock.
+   * Called while holding the FSDirectory lock.
+   * Looks up the nearest ancestor EncryptionZoneInt that contains the given
+   * path (excluding itself).
+   * Returns null if path is not within an EZ, or the path is the root dir '/'
+   * <p/>
+   * Called while holding the FSDirectory lock.
+   */
+  private EncryptionZoneInt getParentEncryptionZoneForPath(INodesInPath iip) {
+    assert dir.hasReadLock();
+    Preconditions.checkNotNull(iip);
+    INodesInPath parentIIP = iip.getParentINodesInPath();
+    return parentIIP == null ? null : getEncryptionZoneForPath(parentIIP);
+  }
+
+  /**
-   * destination because of differing encryption zones.
+   * destination because of differing parent encryption zones.
-    final EncryptionZoneInt srcEZI = getEncryptionZoneForPath(srcIIP);
-    final EncryptionZoneInt dstEZI = getEncryptionZoneForPath(dstIIP);
-    final boolean srcInEZ = (srcEZI != null);
-    final boolean dstInEZ = (dstEZI != null);
-    if (srcInEZ) {
-      if (!dstInEZ) {
-        if (srcEZI.getINodeId() == srcIIP.getLastINode().getId()) {
-          // src is ez root and dest is not in an ez. Allow the rename.
-          return;
-        }
-        throw new IOException(
-            src + " can't be moved from an encryption zone.");
-      }
-    } else {
-      if (dstInEZ) {
-        throw new IOException(
-            src + " can't be moved into an encryption zone.");
-      }
+    final EncryptionZoneInt srcParentEZI =
+        getParentEncryptionZoneForPath(srcIIP);
+    final EncryptionZoneInt dstParentEZI =
+        getParentEncryptionZoneForPath(dstIIP);
+    final boolean srcInEZ = (srcParentEZI != null);
+    final boolean dstInEZ = (dstParentEZI != null);
+    if (srcInEZ && !dstInEZ) {
+      throw new IOException(
+          src + " can't be moved from an encryption zone.");
+    } else if (dstInEZ && !srcInEZ) {
+      throw new IOException(
+          src + " can't be moved into an encryption zone.");
-      if (srcEZI != dstEZI) {
-        final String srcEZPath = getFullPathName(srcEZI);
-        final String dstEZPath = getFullPathName(dstEZI);
+      if (srcParentEZI != dstParentEZI) {
+        final String srcEZPath = getFullPathName(srcParentEZI);
+        final String dstEZPath = getFullPathName(dstParentEZI);
+
+    // Check if src is a valid path for new EZ creation
+    if (srcIIP == null || srcIIP.getLastINode() == null) {
+      throw new FileNotFoundException("cannot find " + src);
+    }
-    if (srcIIP != null &&
-        srcIIP.getLastINode() != null &&
-        !srcIIP.getLastINode().isDirectory()) {
+    INode srcINode = srcIIP.getLastINode();
+    if (!srcINode.isDirectory()) {
-    EncryptionZoneInt ezi = getEncryptionZoneForPath(srcIIP);
-    if (ezi != null) {
-      throw new IOException("Directory " + src + " is already in an " +
-          "encryption zone. (" + getFullPathName(ezi) + ")");
+
+    if (encryptionZones.get(srcINode.getId()) != null) {
+      throw new IOException("Directory " + src + " is already an encryption " +
+          "zone.");
