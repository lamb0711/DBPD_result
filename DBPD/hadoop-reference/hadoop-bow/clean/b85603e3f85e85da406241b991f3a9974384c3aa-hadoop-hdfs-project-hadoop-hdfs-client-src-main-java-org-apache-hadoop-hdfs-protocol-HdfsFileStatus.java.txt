HDFS-12681. Fold HdfsLocatedFileStatus into HdfsFileStatus.

+import org.apache.hadoop.fs.LocatedFileStatus;
-/** Interface that represents the over the wire information for a file.
+/**
+ * HDFS metadata for an entity in the filesystem.
-public class HdfsFileStatus extends FileStatus {
+public final class HdfsFileStatus extends LocatedFileStatus {
+  // BlockLocations[] is the user-facing type
+  private transient LocatedBlocks hdfsloc;
+
-  /**
-   * Set of features potentially active on an instance.
-   */
+  /** Set of features potentially active on an instance. */
-  protected HdfsFileStatus(long length, boolean isdir, int replication,
+  private HdfsFileStatus(long length, boolean isdir, int replication,
-                         byte storagePolicy, ErasureCodingPolicy ecPolicy) {
+                         byte storagePolicy, ErasureCodingPolicy ecPolicy,
+                         LocatedBlocks hdfsloc) {
-        flags.contains(Flags.HAS_EC));
+        flags.contains(Flags.HAS_EC), null);
+    this.hdfsloc = hdfsloc;
-  public final boolean isEmptyLocalName() {
+  public boolean isEmptyLocalName() {
-  public final String getLocalName() {
+  public String getLocalName() {
-  public final byte[] getLocalNameInBytes() {
+  public byte[] getLocalNameInBytes() {
-  public final String getFullName(final String parent) {
+  public String getFullName(String parent) {
-  public final Path getFullPath(final Path parent) {
+  public Path getFullPath(Path parent) {
-  public final byte[] getSymlinkInBytes() {
+  public byte[] getSymlinkInBytes() {
-  public final long getFileId() {
+  public long getFileId() {
-  public final FileEncryptionInfo getFileEncryptionInfo() {
+  public FileEncryptionInfo getFileEncryptionInfo() {
-  public final int getChildrenNum() {
+  public int getChildrenNum() {
-  public final byte getStoragePolicy() {
+  public byte getStoragePolicy() {
+  public LocatedBlocks getLocatedBlocks() {
+    return hdfsloc;
+  }
+
-  public final FileStatus makeQualified(URI defaultUri, Path parent) {
+  public FileStatus makeQualified(URI defaultUri, Path parent) {
+  }
+  /**
+   * This function is used to transform the underlying HDFS LocatedBlocks to
+   * BlockLocations. This method must be invoked before
+   * {@link #getBlockLocations()}.
+   *
+   * The returned BlockLocation will have different formats for replicated
+   * and erasure coded file.
+   * Please refer to
+   * {@link org.apache.hadoop.fs.FileSystem#getFileBlockLocations
+   * (FileStatus, long, long)}
+   * for examples.
+   */
+  public LocatedFileStatus makeQualifiedLocated(URI defaultUri,
+                                                      Path path) {
+    makeQualified(defaultUri, path);
+    setBlockLocations(
+        DFSUtilClient.locatedBlocks2Locations(getLocatedBlocks()));
+    return this;
+    private LocatedBlocks locations        = null;
+     * Set the block locations for this entity (default = null).
+     * @param locations HDFS locations
+     *                  (see {@link #makeQualifiedLocated(URI, Path)})
+     * @return This Builder instance
+     */
+    public Builder locations(LocatedBlocks locations) {
+      this.locations = locations;
+      return this;
+    }
+
+    /**
-          childrenNum, feInfo, storagePolicy, ecPolicy);
+          childrenNum, feInfo, storagePolicy, ecPolicy, locations);
