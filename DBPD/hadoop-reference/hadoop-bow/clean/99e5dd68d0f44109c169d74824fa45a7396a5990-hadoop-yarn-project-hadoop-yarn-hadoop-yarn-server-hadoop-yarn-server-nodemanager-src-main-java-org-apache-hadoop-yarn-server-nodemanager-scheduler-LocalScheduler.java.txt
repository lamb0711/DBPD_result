YARN-5171. Extend DistributedSchedulerProtocol to notify RM of containers allocated by the Node. (Inigo Goiri via asuresh)

+import org.apache.hadoop.yarn.factories.RecordFactory;
+import org.apache.hadoop.yarn.factory.providers.RecordFactoryProvider;
+import org.apache.hadoop.yarn.server.api.protocolrecords.DistSchedAllocateRequest;
+  private final static RecordFactory RECORD_FACTORY =
+      RecordFactoryProvider.getRecordFactory(null);
+
-    return allocateForDistributedScheduling(request).getAllocateResponse();
+    DistSchedAllocateRequest distRequest =
+        RECORD_FACTORY.newRecordInstance(DistSchedAllocateRequest.class);
+    distRequest.setAllocateRequest(request);
+    return allocateForDistributedScheduling(distRequest).getAllocateResponse();
-  registerApplicationMasterForDistributedScheduling
-      (RegisterApplicationMasterRequest request) throws YarnException,
-      IOException {
+      registerApplicationMasterForDistributedScheduling(
+          RegisterApplicationMasterRequest request)
+              throws YarnException, IOException {
-  public DistSchedAllocateResponse allocateForDistributedScheduling
-      (AllocateRequest request) throws YarnException, IOException {
+  public DistSchedAllocateResponse allocateForDistributedScheduling(
+      DistSchedAllocateRequest request) throws YarnException, IOException {
-    PartitionedResourceRequests partitionedAsks = partitionAskList(request
-        .getAskList());
+    PartitionedResourceRequests partitionedAsks = partitionAskList(
+        request.getAllocateRequest().getAskList());
-    List<ContainerId> releasedContainers = request.getReleaseList();
+    List<ContainerId> releasedContainers =
+        request.getAllocateRequest().getReleaseList();
-    ResourceBlacklistRequest rbr = request.getResourceBlacklistRequest();
+    ResourceBlacklistRequest rbr =
+        request.getAllocateRequest().getResourceBlacklistRequest();
+    request.setAllocatedContainers(allocatedContainers);
-    request.setAskList(partitionedAsks.getGuaranteed());
+    request.getAllocateRequest().setAskList(partitionedAsks.getGuaranteed());
