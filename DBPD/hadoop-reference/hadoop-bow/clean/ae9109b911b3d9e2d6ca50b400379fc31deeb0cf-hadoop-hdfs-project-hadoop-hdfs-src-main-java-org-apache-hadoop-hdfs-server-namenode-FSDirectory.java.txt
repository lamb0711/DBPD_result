HDFS-6328. Clean up dead code in FSDirectory. Contributed by Haohui Mai.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1593755 13f79535-47bb-0310-9956-ffa450edef68

-          } catch (InterruptedException ie) {
+          } catch (InterruptedException ignored) {
-        final INodeReference.DstReference ref = new INodeReference.DstReference(
+        toDst = new INodeReference.DstReference(
-        toDst = ref;
-          final INode originalChild = withCount.getReferredINode();
-          srcChild = originalChild;
+          srcChild = withCount.getReferredINode();
-          final INodeReference originalRef = new INodeReference.DstReference(
+          srcChild = new INodeReference.DstReference(
-          srcChild = originalRef;
-    String error = null;
+    final String error;
-        final INodeReference.DstReference ref = new INodeReference.DstReference(
+        toDst = new INodeReference.DstReference(
-        toDst = ref;
-          final INode originalChild = withCount.getReferredINode();
-          srcChild = originalChild;
+          srcChild = withCount.getReferredINode();
-          final INodeReference originalRef = new INodeReference.DstReference(
+          srcChild = new INodeReference.DstReference(
-          srcChild = originalRef;
-  boolean exists(String src) throws UnresolvedLinkException {
-    src = normalizePath(src);
-    readLock();
-    try {
-      INode inode = getNode(src, false);
-      if (inode == null) {
-         return false;
-      }
-      return !inode.isFile() || inode.asFile().getBlocks() != null;
-    } finally {
-      readUnlock();
-    }
-  }
-  
-        src.endsWith(HdfsConstants.SEPARATOR_DOT_SNAPSHOT_DIR), 
+        src.endsWith(HdfsConstants.SEPARATOR_DOT_SNAPSHOT_DIR),
-        src.endsWith(HdfsConstants.SEPARATOR_DOT_SNAPSHOT_DIR), 
+        src.endsWith(HdfsConstants.SEPARATOR_DOT_SNAPSHOT_DIR),
-  /**
-   * Get the blocks associated with the file.
-   */
-  Block[] getFileBlocks(String src) throws UnresolvedLinkException {
-    waitForReady();
-    readLock();
-    try {
-      final INode i = getNode(src, false);
-      return i != null && i.isFile()? i.asFile().getBlocks(): null;
-    } finally {
-      readUnlock();
-    }
-  }
-
-
-  
+
-      if (srcs.startsWith("/") && !srcs.endsWith("/")
-          && getINode4Write(srcs, false) == null) {
-        return true;
-      } else {
-        return false;
-      }
+      return srcs.startsWith("/") && !srcs.endsWith("/")
+              && getINode4Write(srcs, false) == null;
-        pathbuilder.append(Path.SEPARATOR + names[i]);
+        pathbuilder.append(Path.SEPARATOR).append(names[i]);
-    for(; src[i] == dst[i]; i++);
+    while(src[i] == dst[i]) { i++; }
-    boolean added = false;
+    boolean added;
-      final boolean isUc = inSnapshot ? false : fileNode.isUnderConstruction();
+      final boolean isUc = !inSnapshot && fileNode.isUnderConstruction();
-    long id = 0;
+    final long id;
