YARN-1314. Fixed DistributedShell to not fail with multiple arguments for a shell command separated by spaces. Contributed by Xuan Gong.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1545486 13f79535-47bb-0310-9956-ffa450edef68

+  private final String shellArgsPath = "shellArgs";
-    opts.addOption("shell_args", true, "Command line args for the shell script");
-    File customerLog4jFile = new File(log4jPath);
-    if (customerLog4jFile.exists()) {
+    if (fileExist(log4jPath)) {
-        Log4jPropertyHelper.updateLog4jConfiguration(ApplicationMaster.class, log4jPath);
+        Log4jPropertyHelper.updateLog4jConfiguration(ApplicationMaster.class,
+            log4jPath);
-    File shellCommandFile = new File(shellCommandPath);
-    if (!shellCommandFile.exists()) {
+    if (!fileExist(shellCommandPath)) {
-    FileInputStream fs = null;
-    DataInputStream ds = null;
-    try {
-      ds = new DataInputStream(new FileInputStream(shellCommandFile));
-      shellCommand = ds.readUTF();
-    } finally {
-      org.apache.commons.io.IOUtils.closeQuietly(ds);
-      org.apache.commons.io.IOUtils.closeQuietly(fs);
+    shellCommand = readContent(shellCommandPath);
+
+    if (fileExist(shellArgsPath)) {
+      shellArgs = readContent(shellArgsPath);
-    if (cliParser.hasOption("shell_args")) {
-      shellArgs = cliParser.getOptionValue("shell_args");
-    }
+
+  private boolean fileExist(String filePath) {
+    return new File(filePath).exists();
+  }
+
+  private String readContent(String filePath) throws IOException {
+    DataInputStream ds = null;
+    try {
+      ds = new DataInputStream(new FileInputStream(filePath));
+      return ds.readUTF();
+    } finally {
+      org.apache.commons.io.IOUtils.closeQuietly(ds);
+    }
+  }
