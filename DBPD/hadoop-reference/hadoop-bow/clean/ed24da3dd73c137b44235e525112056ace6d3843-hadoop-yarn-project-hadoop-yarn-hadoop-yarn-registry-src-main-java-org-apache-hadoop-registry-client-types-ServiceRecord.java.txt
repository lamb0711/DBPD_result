YARN-6413. FileSystem based Yarn Registry implementation. (Ellen Hui via Subru).

+  @Override
+  public int hashCode() {
+    // Generated by eclipse
+    final int prime = 31;
+    int result = 1;
+    result =
+        prime * result + ((attributes == null) ? 0 : attributes.hashCode());
+    result =
+        prime * result + ((description == null) ? 0 : description.hashCode());
+    result = prime * result + ((external == null) ? 0 : external.hashCode());
+    result = prime * result + ((internal == null) ? 0 : internal.hashCode());
+    result = prime * result + ((type == null) ? 0 : type.hashCode());
+    return result;
+  }
+
+  @Override
+  public boolean equals(Object obj) {
+    if (this == obj) {
+      return true;
+    }
+    if (obj == null) {
+      return false;
+    }
+    if (getClass() != obj.getClass()) {
+      return false;
+    }
+    ServiceRecord other = (ServiceRecord) obj;
+    if (attributes == null) {
+      if (other.attributes != null) {
+        return false;
+      }
+    } else if (!attributes.equals(other.attributes)) {
+      return false;
+    }
+    if (description == null) {
+      if (other.description != null) {
+        return false;
+      }
+    } else if (!description.equals(other.description)) {
+      return false;
+    }
+    if (external == null) {
+      if (other.external != null) {
+        return false;
+      }
+    } else if (!external.equals(other.external)) {
+      return false;
+    }
+    if (internal == null) {
+      if (other.internal != null) {
+        return false;
+      }
+    } else if (!internal.equals(other.internal)) {
+      return false;
+    }
+    if (type == null) {
+      if (other.type != null) {
+        return false;
+      }
+    } else if (!type.equals(other.type)) {
+      return false;
+    }
+    return true;
+  }
