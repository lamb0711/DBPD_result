HDFS-14795. Add Throttler for writing block. Contributed by Lisheng Sun.

+import static org.apache.hadoop.hdfs.protocol.datatransfer.BlockConstructionStage.PIPELINE_SETUP_APPEND_RECOVERY;
+import static org.apache.hadoop.hdfs.protocol.datatransfer.BlockConstructionStage.PIPELINE_SETUP_CREATE;
+import static org.apache.hadoop.hdfs.protocol.datatransfer.BlockConstructionStage.PIPELINE_SETUP_STREAMING_RECOVERY;
-    /** Throttle to block replication when data transfers. */
-    private DataTransferThrottler transferThrottler;
+    /** Throttle to block replication when data transfers or writes. */
+    private DataTransferThrottler throttler;
-      // 1. the stage is PIPELINE_SETUP_CREATEï¼Œthat is moving blocks, set
-      // throttler.
-      // 2. the stage is PIPELINE_SETUP_APPEND_RECOVERY or
-      // PIPELINE_SETUP_STREAMING_RECOVERY,
-      // that is writing and recovering pipeline, don't set throttle.
-      if (stage == BlockConstructionStage.PIPELINE_SETUP_CREATE
-          && clientname.isEmpty()) {
-        this.transferThrottler = xserver.getTransferThrottler();
+      if (isTransfer(stage, clientname)) {
+        this.throttler = xserver.getTransferThrottler();
+      } else if(isWrite(stage)) {
+        this.throttler = xserver.getWriteThrottler();
-        blockSender.sendBlock(out, unbufOut, transferThrottler);
+        blockSender.sendBlock(out, unbufOut, throttler);
+
+  /**
+   * Construct DataTransfer in {@link DataNode#transferBlock}, the
+   * BlockConstructionStage is PIPELINE_SETUP_CREATE and clientName is "".
+   */
+  private static boolean isTransfer(BlockConstructionStage stage,
+      String clientName) {
+    if (stage == PIPELINE_SETUP_CREATE && clientName.isEmpty()) {
+      return true;
+    }
+    return false;
+  }
+
+  /**
+   * Construct DataTransfer in
+   * {@link DataNode#transferReplicaForPipelineRecovery}.
+   *
+   * When recover pipeline, BlockConstructionStage is
+   * PIPELINE_SETUP_APPEND_RECOVERY,
+   * PIPELINE_SETUP_STREAMING_RECOVERY,PIPELINE_CLOSE_RECOVERY. If
+   * BlockConstructionStage is PIPELINE_CLOSE_RECOVERY, don't need transfer
+   * replica. So BlockConstructionStage is PIPELINE_SETUP_APPEND_RECOVERY,
+   * PIPELINE_SETUP_STREAMING_RECOVERY.
+   */
+  private static boolean isWrite(BlockConstructionStage stage) {
+    return (stage == PIPELINE_SETUP_STREAMING_RECOVERY
+        || stage == PIPELINE_SETUP_APPEND_RECOVERY);
+  }
