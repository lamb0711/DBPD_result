MAPREDUCE-4427. Added an 'unmanaged' mode for AMs so as to ease development of new applications. Contributed by Bikas Saha.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1361813 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.api.records.ApplicationAttemptId;
+import org.apache.hadoop.yarn.proto.YarnProtos.ApplicationAttemptIdProto;
+  ApplicationAttemptId currentApplicationAttemptId;
+  
+  @Override
+  public ApplicationAttemptId getCurrentApplicationAttemptId() {
+    if (this.currentApplicationAttemptId != null) {
+      return this.currentApplicationAttemptId;
+    }
+
+    ApplicationReportProtoOrBuilder p = viaProto ? proto : builder;
+    if (!p.hasCurrentApplicationAttemptId()) {
+      return null;
+    }
+    this.currentApplicationAttemptId = convertFromProtoFormat(p.getCurrentApplicationAttemptId());
+    return this.currentApplicationAttemptId;
+  }
+  public void setCurrentApplicationAttemptId(ApplicationAttemptId applicationAttemptId) {
+    maybeInitBuilder();
+    if (applicationId == null)
+      builder.clearStatus();
+    this.currentApplicationAttemptId = applicationAttemptId;
+  }
+
+  @Override
+    if (this.currentApplicationAttemptId != null
+        && !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(
+            builder.getCurrentApplicationAttemptId())) {
+      builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));
+    }
+  
+  private ApplicationAttemptIdProto convertToProtoFormat(ApplicationAttemptId t) {
+    return ((ApplicationAttemptIdPBImpl) t).getProto();
+  }
+  
+  private ApplicationAttemptIdPBImpl convertFromProtoFormat(
+      ApplicationAttemptIdProto applicationAttemptId) {
+    return new ApplicationAttemptIdPBImpl(applicationAttemptId);
+  }
