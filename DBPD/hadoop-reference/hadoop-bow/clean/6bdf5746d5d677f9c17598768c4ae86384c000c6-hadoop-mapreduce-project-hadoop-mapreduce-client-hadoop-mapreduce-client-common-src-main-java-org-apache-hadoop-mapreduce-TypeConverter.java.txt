MAPREDUCE-2716. MRReliabilityTest job fails because of missing job-file. Contributed by Jeffrey Naisbitt.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1164805 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.mapreduce.v2.util.MRApps;
-    String user = null,  jobName = null;
-        jobPriority, user, jobName, jobFile, trackingUrl);
+        jobPriority, jobreport.getUser(), jobreport.getJobName(),
+        jobFile, trackingUrl);
-  public static JobStatus fromYarn(ApplicationReport application) {
+  public static JobStatus fromYarn(ApplicationReport application,
+      String jobFile) {
-
-    JobStatus jobStatus = 
+    JobStatus jobStatus =
-          TypeConverter.fromYarn(application.getApplicationId()), 
-          0.0f, 0.0f, 0.0f, 0.0f, 
-          TypeConverter.fromYarn(application.getState()), 
-          org.apache.hadoop.mapreduce.JobPriority.NORMAL, 
-          application.getUser(), application.getName(), 
-          application.getQueue(), "", trackingUrl
-      ); 
+          TypeConverter.fromYarn(application.getApplicationId()),
+          0.0f, 0.0f, 0.0f, 0.0f,
+          TypeConverter.fromYarn(application.getState()),
+          org.apache.hadoop.mapreduce.JobPriority.NORMAL,
+          application.getUser(), application.getName(),
+          application.getQueue(), jobFile, trackingUrl
+      );
-  public static JobStatus[] fromYarnApps(List<ApplicationReport> applications) {
+  public static JobStatus[] fromYarnApps(List<ApplicationReport> applications,
+      Configuration conf) {
-      jobStatuses.add(TypeConverter.fromYarn(application));
+      // each applicationReport has its own jobFile
+      org.apache.hadoop.mapreduce.JobID jobId = 
+          TypeConverter.fromYarn(application.getApplicationId());
+      jobStatuses.add(TypeConverter.fromYarn(application,
+          MRApps.getJobFile(conf, application.getUser(), jobId)));
-      queueInfo) {
+      queueInfo, Configuration conf) {
-        TypeConverter.fromYarnApps(queueInfo.getApplications()));
+        TypeConverter.fromYarnApps(queueInfo.getApplications(), conf));
-      List<org.apache.hadoop.yarn.api.records.QueueInfo> queues) {
+      List<org.apache.hadoop.yarn.api.records.QueueInfo> queues,
+      Configuration conf) {
-      queueInfos.add(TypeConverter.fromYarn(queue));
+      queueInfos.add(TypeConverter.fromYarn(queue, conf));
