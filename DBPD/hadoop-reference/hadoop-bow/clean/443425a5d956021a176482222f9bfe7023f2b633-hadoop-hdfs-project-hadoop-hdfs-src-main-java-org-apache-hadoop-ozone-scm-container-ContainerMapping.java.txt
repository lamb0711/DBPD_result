HDFS-12522. Ozone: Remove the Priority Queues used in the Container State Manager. Contributed by Anu Engineer.

-/**
+/*
-import org.apache.hadoop.ozone.protocol.proto
-    .StorageContainerDatanodeProtocolProtos.ContainerReportsRequestProto;
+import org.apache.hadoop.ozone.protocol.proto.StorageContainerDatanodeProtocolProtos.ContainerReportsRequestProto;
-import static org.apache.hadoop.ozone.scm.exceptions.SCMException.ResultCodes.FAILED_TO_CHANGE_CONTAINER_STATE;
+import static org.apache.hadoop.ozone.scm.exceptions.SCMException.ResultCodes
+    .FAILED_TO_CHANGE_CONTAINER_STATE;
-   *     containers.
+   * containers.
-   *     passed to LevelDB and this memory is allocated in Native code space.
-   *     CacheSize is specified
-   *     in MB.
-   * @throws IOException
+   * passed to LevelDB and this memory is allocated in Native code space.
+   * CacheSize is specified
+   * in MB.
+   * @throws IOException on Failure.
-      cacheSizeMB)
-      throws IOException {
+      cacheSizeMB) throws IOException {
-        new ContainerStateManager(conf, this, this.cacheSize * OzoneConsts.MB);
+        new ContainerStateManager(conf, this);
-  /** {@inheritDoc} */
+  /**
+   * {@inheritDoc}
+   */
-      containerInfo =
-          ContainerInfo.fromProtobuf(OzoneProtos.SCMContainerInfo.PARSER
-              .parseFrom(containerBytes));
+
+      OzoneProtos.SCMContainerInfo temp = OzoneProtos.SCMContainerInfo.PARSER
+          .parseFrom(containerBytes);
+      containerInfo = ContainerInfo.fromProtobuf(temp);
-  /** {@inheritDoc} */
+  /**
+   * {@inheritDoc}
+   */
-   * @param owner
+   * @param owner - The string name of the Service that owns this container.
-    ContainerInfo containerInfo = null;
+
+    ContainerInfo containerInfo;
-              pipelineSelector, type, replicationFactor, containerName, owner);
+              pipelineSelector, type, replicationFactor, containerName,
+              owner);
-   * to delete the
-   *     specified key.
+   *                     to delete the
+   *                     specified key.
-  /** {@inheritDoc} Used by client to update container state on SCM. */
+  /**
+   * {@inheritDoc} Used by client to update container state on SCM.
+   */
-  /** + * Returns the container State Manager. + * + * @return
-   * ContainerStateManager + */
+  /**
+   * Returns the container State Manager.
+   * @return ContainerStateManager
+   */
+          builder.setContainerID(oldInfo.getContainerID());
-                      "update container state, current container state: {}." +
-                      "in state {}", containerInfo.getContainerName(), state);
+                  "update container state, current container state: {}.",
+                  containerInfo.getContainerName(), state);
-              "container database.");
+              "container database.", datanodeID,
+              containerInfo.getContainerName());
-
-   * <p>
-   *
-   * @throws IOException
+   * @throws IOException  on failure.
-              "in container store, a deleted container?",
+                  "in container store, a deleted container?",
