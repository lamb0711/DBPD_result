YARN-7323. Data structure update in service REST API. Contributed by Jian He

-import org.apache.hadoop.yarn.service.api.records.Service;
+import org.apache.hadoop.yarn.service.api.records.Service;
-import org.apache.hadoop.yarn.service.conf.YarnServiceConstants;
+import org.apache.hadoop.yarn.service.conf.YarnServiceConstants;
+import org.apache.hadoop.yarn.service.containerlaunch.ClasspathConstructor;
+import org.apache.hadoop.yarn.service.containerlaunch.JavaCommandLineBuilder;
+import org.apache.hadoop.yarn.service.exceptions.BadClusterStateException;
+import org.apache.hadoop.yarn.service.exceptions.BadConfigException;
+import org.apache.hadoop.yarn.service.exceptions.SliderException;
+import org.apache.hadoop.yarn.service.exceptions.UsageException;
+import org.apache.hadoop.yarn.service.utils.ZookeeperUtils;
-import org.apache.hadoop.yarn.service.exceptions.BadClusterStateException;
-import org.apache.hadoop.yarn.service.exceptions.BadConfigException;
-import org.apache.hadoop.yarn.service.exceptions.SliderException;
-import org.apache.hadoop.yarn.service.exceptions.UsageException;
-import org.apache.hadoop.yarn.service.containerlaunch.ClasspathConstructor;
-import org.apache.hadoop.yarn.service.containerlaunch.JavaCommandLineBuilder;
-import org.apache.hadoop.yarn.service.utils.ZookeeperUtils;
-      String yarnHome = System
-          .getenv(ApplicationConstants.Environment.HADOOP_YARN_HOME.key());
-      args.file = new File(MessageFormat
-          .format("{0}/share/hadoop/yarn/yarn-service-examples/{1}/{2}.json",
-              yarnHome, args.example, args.example));
+      args.file = findExampleService(args);
+  private File findExampleService(ActionCreateArgs args) throws YarnException {
+    String yarnHome = System
+        .getenv(ApplicationConstants.Environment.HADOOP_YARN_HOME.key());
+    // First look for the standard location.
+    File file = new File(MessageFormat
+        .format("{0}/share/hadoop/yarn/yarn-service-examples/{1}/{2}.json",
+            yarnHome, args.example, args.example));
+    if (file.exists()) {
+      return file;
+    }
+    // Then look for secondary location.
+    file = new File(MessageFormat
+        .format("{0}/yarn-service-examples/{1}/{2}.json", yarnHome,
+            args.example, args.example));
+    if (file.exists()) {
+      return file;
+    }
+    throw new YarnException(
+        "Example service " + args.example + " does not exist!");
+  }
+
