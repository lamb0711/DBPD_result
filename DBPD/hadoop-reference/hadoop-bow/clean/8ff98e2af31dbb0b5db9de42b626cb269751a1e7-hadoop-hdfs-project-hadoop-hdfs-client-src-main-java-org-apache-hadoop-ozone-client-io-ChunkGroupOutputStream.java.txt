HDFS-12000. Ozone: Container : Add key versioning support-1. Contributed by Chen Liang.

+import org.apache.hadoop.ozone.ksm.helpers.KsmKeyLocationInfoGroup;
+import java.util.List;
+  @VisibleForTesting
+  public List<ChunkOutputStreamEntry> getStreamEntries() {
+    return streamEntries;
+  }
+
-        info.getKeyLocationList().size());
+        info.getKeyLocationVersions().size());
+  }
+
+  /**
+   * When a key is opened, it is possible that there are some blocks already
+   * allocated to it for this open session. In this case, to make use of these
+   * blocks, we need to add these blocks to stream entries. But, a key's version
+   * also includes blocks from previous versions, we need to avoid adding these
+   * old blocks to stream entries, because these old blocks should not be picked
+   * for write. To do this, the following method checks that, only those
+   * blocks created in this particular open version are added to stream entries.
+   *
+   * @param version the set of blocks that are pre-allocated.
+   * @param openVersion the version corresponding to the pre-allocation.
+   * @throws IOException
+   */
+  public void addPreallocateBlocks(KsmKeyLocationInfoGroup version,
+      long openVersion) throws IOException {
-    int idx = 0;
-    for (KsmKeyLocationInfo subKeyInfo : info.getKeyLocationList()) {
-      subKeyInfo.setIndex(idx++);
-      checkKeyLocationInfo(subKeyInfo);
+    // only the blocks allocated in this open session (block createVersion
+    // equals to open session version)
+    for (KsmKeyLocationInfo subKeyInfo : version.getLocationList()) {
+      if (subKeyInfo.getCreateVersion() == openVersion) {
+        checkKeyLocationInfo(subKeyInfo);
+      }
-    subKeyInfo.setIndex(index);
