HDFS-12060. Ozone: OzoneClient: Add list calls in RpcClient. Contributed by Nandakumar.

-import java.util.Iterator;
-   * Returns the List of Volumes owned by current user.
+   * Lists all volumes in the cluster that matches the volumePrefix,
+   * size of the returned list depends on maxListResult. If volume prefix
+   * is null, returns all the volumes. The caller has to make multiple calls
+   * to read all volumes.
+   *
-   * @return {@link OzoneVolume} Iterator
+   * @param prevVolume Starting point of the list, this volume is excluded
+   * @param maxListResult Max number of volumes to return.
+   * @return {@code List<OzoneVolume>}
-  Iterator<OzoneVolume> listVolumes(String volumePrefix)
+  List<OzoneVolume> listVolumes(String volumePrefix, String prevVolume,
+                                int maxListResult)
-   * Returns the List of Volumes owned by the specific user.
-   * @param volumePrefix Volume prefix to match
+   * Lists all volumes in the cluster that are owned by the specified
+   * user and matches the volumePrefix, size of the returned list depends on
+   * maxListResult. If the user is null, return volumes owned by current user.
+   * If volume prefix is null, returns all the volumes. The caller has to make
+   * multiple calls to read all volumes.
+   *
-   * @return  {@link OzoneVolume} Iterator
+   * @param volumePrefix Volume prefix to match
+   * @param prevVolume Starting point of the list, this volume is excluded
+   * @param maxListResult Max number of volumes to return.
+   * @return {@code List<OzoneVolume>}
-  Iterator<OzoneVolume> listVolumes(String volumePrefix, String user)
+  List<OzoneVolume> listVolumes(String user, String volumePrefix,
+                                    String prevVolume, int maxListResult)
-   * Returns the List of Buckets in the Volume.
+   * Returns the List of Buckets in the Volume that matches the bucketPrefix,
+   * size of the returned list depends on maxListResult. The caller has to make
+   * multiple calls to read all volumes.
-   * @return {@link OzoneBucket} Iterator
+   * @param prevBucket Starting point of the list, this bucket is excluded
+   * @param maxListResult Max number of buckets to return.
+   * @return {@code List<OzoneBucket>}
-  Iterator<OzoneBucket> listBuckets(String volumeName, String bucketPrefix)
+  List<OzoneBucket> listBuckets(String volumeName, String bucketPrefix,
+                                String prevBucket, int maxListResult)
-   * Returns list of {@link OzoneKey} in {Volume/Bucket}.
+   * Returns list of Keys in {Volume/Bucket} that matches the keyPrefix,
+   * size of the returned list depends on maxListResult. The caller has
+   * to make multiple calls to read all keys.
-   * @return {@link OzoneKey} Iterator
+   * @param keyPrefix Bucket prefix to match
+   * @param prevKey Starting point of the list, this key is excluded
+   * @param maxListResult Max number of buckets to return.
+   * @return {@code List<OzoneKey>}
-  Iterator<OzoneKey> listKeys(String volumeName, String bucketName,
-                          String keyPrefix)
+  List<OzoneKey> listKeys(String volumeName, String bucketName,
+                          String keyPrefix, String prevKey, int maxListResult)
