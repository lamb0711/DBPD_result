HDFS-9461. DiskBalancer: Add Report Command. Contributed by Xiaobing Zhou.

+import org.apache.hadoop.hdfs.server.diskbalancer.command.ReportCommand;
+import java.io.PrintStream;
+   * The report command prints out a disk fragmentation report about the data
+   * cluster. By default it prints the DEFAULT_TOP machines names with high
+   * nodeDataDensity {DiskBalancerDataNode#getNodeDataDensity} values. This
+   * means that these are the nodes that deviates from the ideal data
+   * distribution.
+   */
+  public static final String REPORT = "report";
+  /**
+   * specify top number of nodes to be processed.
+   */
+  public static final String TOP = "top";
+  /**
+   * specify default top number of nodes to be processed.
+   */
+  public static final int DEFAULT_TOP = 100;
+  /**
+    return run(args, System.out);
+  }
+
+  /**
+   * Execute the command with the given arguments.
+   *
+   * @param args command specific arguments.
+   * @param out the output stream used for printing
+   * @return exit code.
+   * @throws Exception
+   */
+  public int run(String[] args, final PrintStream out) throws Exception {
-    return dispatch(cmd, opts);
+    return dispatch(cmd, opts, out);
+    addReportCommands(opts);
+   * Adds report command options.
+   * @param opt Options
+   */
+  private void addReportCommands(Options opt) {
+    Option report = new Option(REPORT, false,
+        "Report volume information of DataNode(s)"
+            + " benefiting from running DiskBalancer. "
+            + "-report [top -X] | [-node {DataNodeID | IP | Hostname}].");
+    opt.addOption(report);
+
+    Option top = new Option(TOP, true,
+        "specify the top number of nodes to be processed.");
+    opt.addOption(top);
+
+    Option node = new Option(NODE, true,
+        "Name of the datanode in the format of DataNodeID, IP or hostname.");
+    opt.addOption(node);
+  }
+
+  /**
+   * @param opts options of command line
+   * @param out the output stream used for printing
-  private int dispatch(CommandLine cmd, Options opts)
+  private int dispatch(CommandLine cmd, Options opts, final PrintStream out)
+      if (cmd.hasOption(DiskBalancer.REPORT)) {
+        currentCommand = new ReportCommand(getConf(), out);
+      }
+
