HDDS-1068. Improve the error propagation for ozone sh.
Contributed by Elek, Marton.

+import org.apache.hadoop.ozone.om.exceptions.OMException;
+import org.apache.hadoop.ozone.om.exceptions.OMException.ResultCodes;
-    } catch (IOException ex) {
-      if (ex.getMessage().contains("NOT_FOUND")) {
-        OS3Exception os3Exception = S3ErrorTable.newError(S3ErrorTable
+    } catch (OMException ex) {
+      if (ex.getResult() == ResultCodes.KEY_NOT_FOUND) {
+        throw S3ErrorTable.newError(S3ErrorTable
-        throw os3Exception;
-    } catch (IOException ex) {
-      LOG.error("Exception occurred in HeadObject", ex);
-      if (ex.getMessage().contains("KEY_NOT_FOUND")) {
+    } catch (OMException ex) {
+      if (ex.getResult() == ResultCodes.KEY_NOT_FOUND) {
-    } catch (IOException ex) {
-      if (ex.getMessage().contains("NO_SUCH_MULTIPART_UPLOAD")) {
+    } catch (OMException ex) {
+      if (ex.getResult() == ResultCodes.NO_SUCH_MULTIPART_UPLOAD_ERROR) {
+  @SuppressWarnings("emptyblock")
-    } catch (IOException ex) {
-      if (ex.getMessage().contains("BUCKET_NOT_FOUND")) {
+    } catch (OMException ex) {
+      if (ex.getResult() == ResultCodes.BUCKET_NOT_FOUND) {
-      } else if (!ex.getMessage().contains("NOT_FOUND")) {
+      } else if (ex.getResult() == ResultCodes.KEY_NOT_FOUND) {
+        //NOT_FOUND is not a problem, AWS doesn't throw exception for missing
+        // keys. Just return 204
+      } else {
-      //NOT_FOUND is not a problem, AWS doesn't throw exception for missing
-      // keys. Just return 204.
+
-    } catch (IOException ex) {
+    } catch (OMException ex) {
-      if (ex.getMessage().contains("MISMATCH_MULTIPART_LIST")) {
+      if (ex.getResult() == ResultCodes.MISMATCH_MULTIPART_LIST) {
-      } else if (ex.getMessage().contains("MISSING_UPLOAD_PARTS")) {
+      } else if (ex.getResult() == ResultCodes.MISSING_UPLOAD_PARTS) {
-      } else if (ex.getMessage().contains("NO_SUCH_MULTIPART_UPLOAD_ERROR")) {
+      } else if (ex.getResult() == ResultCodes.NO_SUCH_MULTIPART_UPLOAD_ERROR) {
-      } else if (ex.getMessage().contains("ENTITY_TOO_SMALL")) {
+      } else if (ex.getResult() == ResultCodes.ENTITY_TOO_SMALL) {
-    } catch (IOException ex) {
-      if (ex.getMessage().contains("NO_SUCH_MULTIPART_UPLOAD_ERROR")) {
-        OS3Exception os3Exception = S3ErrorTable.newError(NO_SUCH_UPLOAD,
+    } catch (OMException ex) {
+      if (ex.getResult() == ResultCodes.NO_SUCH_MULTIPART_UPLOAD_ERROR) {
+        throw S3ErrorTable.newError(NO_SUCH_UPLOAD,
-        throw os3Exception;
-    } catch (IOException ex) {
-      if (ex.getMessage().contains("NO_SUCH_MULTIPART_UPLOAD_ERROR")) {
-        OS3Exception os3Exception = S3ErrorTable.newError(NO_SUCH_UPLOAD,
+    } catch (OMException ex) {
+      if (ex.getResult() == ResultCodes.NO_SUCH_MULTIPART_UPLOAD_ERROR) {
+        throw S3ErrorTable.newError(NO_SUCH_UPLOAD,
-        throw os3Exception;
-    } catch (IOException ex) {
-      if (ex.getMessage().contains("KEY_NOT_FOUND")) {
+    } catch (OMException ex) {
+      if (ex.getResult() == ResultCodes.KEY_NOT_FOUND) {
+      } else if (ex.getResult() == ResultCodes.BUCKET_NOT_FOUND) {
+        throw S3ErrorTable.newError(S3ErrorTable.NO_SUCH_BUCKET, sourceBucket);
-      LOG.error("Exception occurred in PutObject", ex);
