HDDS-2233 - Remove ByteStringHelper and refactor the code to the place where it used (#1596)


+import java.util.function.Function;
-import org.apache.hadoop.hdds.scm.ByteStringHelper;
+import org.apache.hadoop.hdds.scm.ByteStringConversion;
+  private final Function<ByteBuffer, ByteString> byteBufferToByteString;
-    boolean isUnsafeByteOperationsEnabled = conf.getBoolean(
-        OzoneConfigKeys.OZONE_UNSAFEBYTEOPERATIONS_ENABLED,
-        OzoneConfigKeys.OZONE_UNSAFEBYTEOPERATIONS_ENABLED_DEFAULT);
-    ByteStringHelper.init(isUnsafeByteOperationsEnabled);
+    byteBufferToByteString =
+        ByteStringConversion.createByteBufferConversion(conf);
-    // The operation will likely fail/timeout in that happens.
+    // The operation will likely fail/timeout if that happens.
-    byte[] data;
+    ByteBuffer data;
-      metrics.incContainerBytesStats(Type.ReadChunk, data.length);
+      metrics.incContainerBytesStats(Type.ReadChunk, chunkInfo.getLen());
-    return ChunkUtils.getReadChunkResponse(request, data, chunkInfo);
+    Preconditions.checkNotNull(data, "Chunk data is null");
+
+    ContainerProtos.ReadChunkResponseProto.Builder response =
+        ContainerProtos.ReadChunkResponseProto.newBuilder();
+    response.setChunkData(chunkInfo.getProtoBufMessage());
+    response.setData(byteBufferToByteString.apply(data));
+    response.setBlockID(request.getReadChunk().getBlockID());
+
+    ContainerCommandResponseProto.Builder builder =
+        ContainerUtils.getSuccessResponseBuilder(request);
+    builder.setReadChunk(response);
+    return builder.build();
-        byte[] data = chunkManager.readChunk(kvContainer, blockID,
+        ByteBuffer data = chunkManager.readChunk(kvContainer, blockID,
-        ByteString current = ByteString.copyFrom(data);
+        ByteString current = byteBufferToByteString.apply(data);
