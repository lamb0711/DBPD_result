HDFS-13405. Ozone: Rename HDSL to HDDS.
Contributed by Ajay Kumar, Elek Marton, Mukul Kumar Singh, Shashikant Banerjee and Anu Engineer.

-package org.apache.hadoop.ozone.scm.container;
+package org.apache.hadoop.hdds.scm.container;
+import org.apache.hadoop.hdds.scm.ScmConfigKeys;
+import org.apache.hadoop.hdds.scm.container.closer.ContainerCloser;
+import org.apache.hadoop.hdds.scm.container.common.helpers.ContainerInfo;
+import org.apache.hadoop.hdds.scm.container.replication.ContainerSupervisor;
+import org.apache.hadoop.hdds.scm.exceptions.SCMException;
+import org.apache.hadoop.hdds.scm.node.NodeManager;
+import org.apache.hadoop.hdds.scm.pipelines.PipelineSelector;
+import org.apache.hadoop.hdds.protocol.proto.HddsProtos;
+import org.apache.hadoop.hdds.protocol.proto.HddsProtos.ReplicationFactor;
+import org.apache.hadoop.hdds.protocol.proto.HddsProtos.ReplicationType;
+import org.apache.hadoop.hdds.protocol.proto
+    .StorageContainerDatanodeProtocolProtos;
+import org.apache.hadoop.hdds.protocol.proto
+    .StorageContainerDatanodeProtocolProtos.ContainerReportsRequestProto;
-import org.apache.hadoop.hdsl.protocol.proto.HdslProtos;
-import org.apache.hadoop.hdsl.protocol.proto.HdslProtos.ReplicationFactor;
-import org.apache.hadoop.hdsl.protocol.proto.HdslProtos.ReplicationType;
-import org.apache.hadoop.hdsl.protocol.proto
-    .StorageContainerDatanodeProtocolProtos;
-import org.apache.hadoop.hdsl.protocol.proto
-    .StorageContainerDatanodeProtocolProtos.ContainerReportsRequestProto;
-import org.apache.hadoop.ozone.scm.container.closer.ContainerCloser;
-import org.apache.hadoop.ozone.scm.container.replication.ContainerSupervisor;
-import org.apache.hadoop.ozone.scm.exceptions.SCMException;
-import org.apache.hadoop.ozone.scm.node.NodeManager;
-import org.apache.hadoop.ozone.scm.pipelines.PipelineSelector;
-import org.apache.hadoop.scm.ScmConfigKeys;
-import org.apache.hadoop.scm.container.common.helpers.ContainerInfo;
-
-import static org.apache.hadoop.hdsl.server.ServerUtils.getOzoneMetaDirPath;
-import static org.apache.hadoop.ozone.OzoneConsts.SCM_CONTAINER_DB;
-import static org.apache.hadoop.ozone.scm.exceptions.SCMException.ResultCodes
-    .FAILED_TO_CHANGE_CONTAINER_STATE;
-import static org.apache.hadoop.scm.ScmConfigKeys
+import static org.apache.hadoop.hdds.scm.ScmConfigKeys
-import static org.apache.hadoop.scm.ScmConfigKeys.OZONE_SCM_CONTAINER_SIZE_GB;
+import static org.apache.hadoop.hdds.scm.ScmConfigKeys
+    .OZONE_SCM_CONTAINER_SIZE_GB;
+import static org.apache.hadoop.hdds.scm.exceptions.SCMException.ResultCodes
+    .FAILED_TO_CHANGE_CONTAINER_STATE;
+import static org.apache.hadoop.hdds.server.ServerUtils.getOzoneMetaDirPath;
+import static org.apache.hadoop.ozone.OzoneConsts.SCM_CONTAINER_DB;
-      HdslProtos.SCMContainerInfo temp = HdslProtos.SCMContainerInfo.PARSER
+      HddsProtos.SCMContainerInfo temp = HddsProtos.SCMContainerInfo.PARSER
-                HdslProtos.SCMContainerInfo.PARSER.parseFrom(
+                HddsProtos.SCMContainerInfo.PARSER.parseFrom(
-  public HdslProtos.LifeCycleState updateContainerState(
-      String containerName, HdslProtos.LifeCycleEvent event) throws
+  public HddsProtos.LifeCycleState updateContainerState(
+      String containerName, HddsProtos.LifeCycleEvent event) throws
-          ContainerInfo.fromProtobuf(HdslProtos.SCMContainerInfo.PARSER
+          ContainerInfo.fromProtobuf(HddsProtos.SCMContainerInfo.PARSER
-              HdslProtos.LifeCycleEvent.TIMEOUT);
+              HddsProtos.LifeCycleEvent.TIMEOUT);
-          HdslProtos.SCMContainerInfo knownState =
-              HdslProtos.SCMContainerInfo.PARSER.parseFrom(containerBytes);
+          HddsProtos.SCMContainerInfo knownState =
+              HddsProtos.SCMContainerInfo.PARSER.parseFrom(containerBytes);
-          HdslProtos.SCMContainerInfo newState =
+          HddsProtos.SCMContainerInfo newState =
-  private HdslProtos.SCMContainerInfo reconcileState(
+  private HddsProtos.SCMContainerInfo reconcileState(
-      HdslProtos.SCMContainerInfo knownState) {
-    HdslProtos.SCMContainerInfo.Builder builder =
-        HdslProtos.SCMContainerInfo.newBuilder();
+      HddsProtos.SCMContainerInfo knownState) {
+    HddsProtos.SCMContainerInfo.Builder builder =
+        HddsProtos.SCMContainerInfo.newBuilder();
-  private boolean closeContainerIfNeeded(HdslProtos.SCMContainerInfo newState)
+  private boolean closeContainerIfNeeded(HddsProtos.SCMContainerInfo newState)
-        HdslProtos.LifeCycleState state = updateContainerState(
+        HddsProtos.LifeCycleState state = updateContainerState(
-            HdslProtos.LifeCycleEvent.FINALIZE);
-        if (state != HdslProtos.LifeCycleState.CLOSING) {
+            HddsProtos.LifeCycleEvent.FINALIZE);
+        if (state != HddsProtos.LifeCycleState.CLOSING) {
-    return info.getState() == HdslProtos.LifeCycleState.OPEN;
+    return info.getState() == HddsProtos.LifeCycleState.OPEN;
-    return info.getState() == HdslProtos.LifeCycleState.CLOSED;
+    return info.getState() == HddsProtos.LifeCycleState.CLOSED;
-          HdslProtos.SCMContainerInfo oldInfoProto =
-              HdslProtos.SCMContainerInfo.PARSER.parseFrom(containerBytes);
+          HddsProtos.SCMContainerInfo oldInfoProto =
+              HddsProtos.SCMContainerInfo.PARSER.parseFrom(containerBytes);
