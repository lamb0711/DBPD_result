HDFS-4352. Encapsulate arguments to BlockReaderFactory in a class. Contributed by Colin Patrick McCabe.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1428729 13f79535-47bb-0310-9956-ffa450edef68

-  protected RemoteBlockReader2(String file, String bpid, long blockId,
-      ReadableByteChannel in, DataChecksum checksum, boolean verifyChecksum,
-      long startOffset, long firstChunkOffset, long bytesToRead, Socket dnSock,
-      IOStreamPair ioStreams) {
+  protected RemoteBlockReader2(BlockReaderFactory.Params params, 
+      DataChecksum checksum, long firstChunkOffset, ReadableByteChannel in) {
-    this.dnSock = dnSock;
-    this.ioStreams = ioStreams;
+    this.dnSock = params.getSocket();
+    this.ioStreams = params.getIoStreamPair();
-    this.verifyChecksum = verifyChecksum;
-    this.startOffset = Math.max( startOffset, 0 );
-    this.filename = file;
+    this.verifyChecksum = params.getVerifyChecksum();
+    this.startOffset = Math.max( params.getStartOffset(), 0 );
+    this.filename = params.getFile();
-    this.bytesNeededToFinish = bytesToRead + (startOffset - firstChunkOffset);
+    this.bytesNeededToFinish = params.getLen() + (startOffset - firstChunkOffset);
-  public static BlockReader newBlockReader(Socket sock, String file,
-                                     ExtendedBlock block,
-                                     Token<BlockTokenIdentifier> blockToken,
-                                     long startOffset, long len,
-                                     int bufferSize, boolean verifyChecksum,
-                                     String clientName,
-                                     DataEncryptionKey encryptionKey,
-                                     IOStreamPair ioStreams)
+  public static BlockReader newBlockReader(BlockReaderFactory.Params params)
-    
+    IOStreamPair ioStreams = params.getIoStreamPair();
-    new Sender(out).readBlock(block, blockToken, clientName, startOffset, len);
+    new Sender(out).readBlock(params.getBlock(), params.getBlockToken(), 
+        params.getClientName(), params.getStartOffset(), params.getLen());
-    checkSuccess(status, sock, block, file);
+    checkSuccess(status, params.getSocket(), params.getBlock(),
+        params.getFile());
-    if ( firstChunkOffset < 0 || firstChunkOffset > startOffset ||
-        firstChunkOffset <= (startOffset - checksum.getBytesPerChecksum())) {
+    if ( firstChunkOffset < 0 || firstChunkOffset > params.getStartOffset() ||
+        firstChunkOffset <= (params.getStartOffset() - checksum.getBytesPerChecksum())) {
-                            firstChunkOffset + ") startOffset is " +
-                            startOffset + " for file " + file);
+                    firstChunkOffset + ") startOffset is " +
+                    params.getStartOffset() + " for file " + params.getFile());
-    return new RemoteBlockReader2(file, block.getBlockPoolId(), block.getBlockId(),
-        ch, checksum, verifyChecksum, startOffset, firstChunkOffset, len, sock,
-        ioStreams);
+    return new RemoteBlockReader2(params, checksum, firstChunkOffset, ch);
