YARN-4899. Queue metrics of SLS capacity scheduler only activated after app submit to the queue. (Jonathan Hung via wangda)

+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSQueue;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue;
+  private static final String QUEUE_COUNTER_PREFIX = "counter.queue.";
+  private void initQueueMetrics(CSQueue queue) {
+    if (queue instanceof LeafQueue) {
+      SortedMap<String, Counter> counterMap = metrics.getCounters();
+      String queueName = queue.getQueueName();
+      String[] names = new String[]{
+          QUEUE_COUNTER_PREFIX + queueName + ".pending.memory",
+          QUEUE_COUNTER_PREFIX + queueName + ".pending.cores",
+          QUEUE_COUNTER_PREFIX + queueName + ".allocated.memory",
+          QUEUE_COUNTER_PREFIX + queueName + ".allocated.cores" };
+
+      for (int i = names.length - 1; i >= 0; i--) {
+        if (!counterMap.containsKey(names[i])) {
+          metrics.counter(names[i]);
+          counterMap = metrics.getCounters();
+        }
+      }
+
+      queueLock.lock();
+      try {
+        if (!schedulerMetrics.isTracked(queueName)) {
+          schedulerMetrics.trackQueue(queueName);
+        }
+      } finally {
+        queueLock.unlock();
+      }
+
+      return;
+    }
+
+    for (CSQueue child : queue.getChildQueues()) {
+      initQueueMetrics(child);
+    }
+  }
+
+  @Override
+  public void serviceInit(Configuration configuration) throws Exception {
+    super.serviceInit(configuration);
+
+    initQueueMetrics(getRootQueue());
+  }
+
