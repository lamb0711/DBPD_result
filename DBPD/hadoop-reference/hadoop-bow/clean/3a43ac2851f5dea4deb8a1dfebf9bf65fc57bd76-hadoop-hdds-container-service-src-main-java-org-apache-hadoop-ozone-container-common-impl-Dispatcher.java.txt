HDDS-1. Remove SCM Block DB. Contributed by Xiaoyu Yao.

+import org.apache.hadoop.hdds.client.BlockID;
-          msg.getCreateContainer().getContainerData().getName(),
+          msg.getCreateContainer().getContainerData().getContainerID(),
-          msg.getCreateContainer().getContainerData().getName(),
+          msg.getCreateContainer().getContainerData().getContainerID(),
-          msg.getCreateContainer().getContainerData().getName(),
+          msg.getCreateContainer().getContainerData().getContainerID(),
-
-    Pipeline pipeline = Pipeline.getFromProtoBuf(
-        msg.getUpdateContainer().getPipeline());
-    String containerName = msg.getUpdateContainer()
-        .getContainerData().getName();
+    long containerID = msg.getUpdateContainer()
+        .getContainerData().getContainerID();
-    this.containerManager.updateContainer(
-        pipeline, containerName, data, forceUpdate);
+    this.containerManager.updateContainer(containerID,
+        data, forceUpdate);
-    String name = msg.getReadContainer().getName();
-    ContainerData container = this.containerManager.readContainer(name);
+    long containerID = msg.getReadContainer().getContainerID();
+    ContainerData container = this.containerManager.
+        readContainer(containerID);
-    Pipeline pipeline = Pipeline.getFromProtoBuf(
-        msg.getDeleteContainer().getPipeline());
-    Preconditions.checkNotNull(pipeline);
-    String name = msg.getDeleteContainer().getName();
+    long containerID = msg.getDeleteContainer().getContainerID();
-    this.containerManager.deleteContainer(pipeline, name, forceDelete);
+    this.containerManager.deleteContainer(containerID, forceDelete);
-    this.containerManager.createContainer(pipeline, cData);
+    this.containerManager.createContainer(cData);
-      Pipeline pipeline = Pipeline.getFromProtoBuf(msg.getCloseContainer()
-          .getPipeline());
-      Preconditions.checkNotNull(pipeline, "Pipeline cannot be null");
-      if (!this.containerManager.isOpen(pipeline.getContainerName())) {
+      long containerID = msg.getCloseContainer().getContainerID();
+      if (!this.containerManager.isOpen(containerID)) {
-      this.containerManager.closeContainer(pipeline.getContainerName());
+      this.containerManager.closeContainer(containerID);
-    String keyName = msg.getWriteChunk().getKeyName();
-    Pipeline pipeline = Pipeline.getFromProtoBuf(
-        msg.getWriteChunk().getPipeline());
-    Preconditions.checkNotNull(pipeline);
-    if (!this.containerManager.isOpen(pipeline.getContainerName())) {
+    BlockID blockID = BlockID.getFromProtobuf(
+        msg.getWriteChunk().getBlockID());
+    if (!this.containerManager.isOpen(blockID.getContainerID())) {
-        .writeChunk(pipeline, keyName, chunkInfo,
+        .writeChunk(blockID, chunkInfo,
-
-    String keyName = msg.getReadChunk().getKeyName();
-    Pipeline pipeline = Pipeline.getFromProtoBuf(
-        msg.getReadChunk().getPipeline());
-    Preconditions.checkNotNull(pipeline);
-
+    BlockID blockID = BlockID.getFromProtobuf(
+        msg.getReadChunk().getBlockID());
-    byte[] data = this.containerManager.getChunkManager().readChunk(pipeline,
-        keyName, chunkInfo);
+    byte[] data = this.containerManager.getChunkManager().
+        readChunk(blockID, chunkInfo);
-    String keyName = msg.getDeleteChunk().getKeyName();
-    Pipeline pipeline = Pipeline.getFromProtoBuf(
-        msg.getDeleteChunk().getPipeline());
-    Preconditions.checkNotNull(pipeline);
-    if (!this.containerManager.isOpen(pipeline.getContainerName())) {
+    BlockID blockID = BlockID.getFromProtobuf(msg.getDeleteChunk()
+        .getBlockID());
+    long containerID = blockID.getContainerID();
+    if (!this.containerManager.isOpen(containerID)) {
-    this.containerManager.getChunkManager().deleteChunk(pipeline, keyName,
+    this.containerManager.getChunkManager().deleteChunk(blockID,
-    Pipeline pipeline = Pipeline.getFromProtoBuf(msg.getPutKey().getPipeline());
-    Preconditions.checkNotNull(pipeline);
-    if (!this.containerManager.isOpen(pipeline.getContainerName())) {
+    BlockID blockID = BlockID.getFromProtobuf(
+        msg.getPutKey().getKeyData().getBlockID());
+    long containerID = blockID.getContainerID();
+    if (!this.containerManager.isOpen(containerID)) {
-    this.containerManager.getKeyManager().putKey(pipeline, keyData);
+    this.containerManager.getKeyManager().putKey(keyData);
-    Pipeline pipeline =
-        Pipeline.getFromProtoBuf(msg.getDeleteKey().getPipeline());
-    Preconditions.checkNotNull(pipeline);
-    if (!this.containerManager.isOpen(pipeline.getContainerName())) {
+    BlockID blockID = BlockID.getFromProtobuf(msg.getDeleteKey()
+        .getBlockID());
+    Preconditions.checkNotNull(blockID);
+    long containerID = blockID.getContainerID();
+    if (!this.containerManager.isOpen(containerID)) {
-    String keyName = msg.getDeleteKey().getName();
-    Preconditions.checkNotNull(keyName);
-    Preconditions.checkState(!keyName.isEmpty());
-    this.containerManager.getKeyManager().deleteKey(pipeline, keyName);
+    this.containerManager.getKeyManager().deleteKey(blockID);
-      Pipeline pipeline =
-          Pipeline.getFromProtoBuf(msg.getPutSmallFile()
-              .getKey().getPipeline());
+      BlockID blockID = BlockID.getFromProtobuf(msg.
+          getPutSmallFile().getKey().getKeyData().getBlockID());
+      long containerID = blockID.getContainerID();
-      Preconditions.checkNotNull(pipeline);
-      if (!this.containerManager.isOpen(pipeline.getContainerName())) {
+      if (!this.containerManager.isOpen(containerID)) {
-      this.containerManager.getChunkManager().writeChunk(pipeline, keyData
-          .getKeyName(), chunkInfo, data, ContainerProtos.Stage.COMBINED);
+      this.containerManager.getChunkManager().writeChunk(blockID,
+          chunkInfo, data, ContainerProtos.Stage.COMBINED);
-      this.containerManager.getKeyManager().putKey(pipeline, keyData);
+      this.containerManager.getKeyManager().putKey(keyData);
-      Pipeline pipeline =
-          Pipeline.getFromProtoBuf(msg.getGetSmallFile()
-              .getKey().getPipeline());
-
-      Preconditions.checkNotNull(pipeline);
-                .readChunk(
-                    pipeline, keyData.getKeyName(), ChunkInfo.getFromProtoBuf(
-                        chunk)));
+                .readChunk(keyData.getBlockID(),
+                    ChunkInfo.getFromProtoBuf(chunk)));
