YARN-10085. FS-CS converter: remove mixed ordering policy check. Contributed by Peter Bacsko

+import java.util.List;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue;
-import org.apache.hadoop.yarn.util.resource.DominantResourceCalculator;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.policies.DominantResourceFairnessPolicy;
+  private boolean drfUsed = false;
-    
+
+    drfUsed = isDrfUsed(fs);
+
-    siteConverter.convertSiteProperties(conf, yarnSiteConfig);
+    siteConverter.convertSiteProperties(conf, yarnSiteConfig, drfUsed);
+        .withDrfUsed(drfUsed)
-
-    // Validate ordering policy
-    if (queueConverter.isDrfPolicyUsedOnQueueLevel()) {
-      if (queueConverter.isFifoOrFairSharePolicyUsed()) {
-        throw new ConversionException(
-            "DRF ordering policy cannot be used together with fifo/fair");
-      } else {
-        capacitySchedulerConfig.set(
-            CapacitySchedulerConfiguration.RESOURCE_CALCULATOR_CLASS,
-            DominantResourceCalculator.class.getCanonicalName());
-      }
-    }
+  private boolean isDrfUsed(FairScheduler fs) {
+    FSQueue rootQueue = fs.getQueueManager().getRootQueue();
+    AllocationConfiguration allocConf = fs.getAllocationConfiguration();
+
+    String defaultPolicy = allocConf.getDefaultSchedulingPolicy().getName();
+
+    if (DominantResourceFairnessPolicy.NAME.equals(defaultPolicy)) {
+      return true;
+    } else {
+      return isDrfUsedOnQueueLevel(rootQueue);
+    }
+  }
+
+  private boolean isDrfUsedOnQueueLevel(FSQueue queue) {
+    String policy = queue.getPolicy().getName();
+    boolean usesDrf = DominantResourceFairnessPolicy.NAME.equals(policy);
+
+    if (usesDrf) {
+      return true;
+    } else {
+      List<FSQueue> children = queue.getChildQueues();
+
+      if (children != null) {
+        for (FSQueue child : children) {
+          usesDrf |= isDrfUsedOnQueueLevel(child);
+        }
+      }
+
+      return usesDrf;
+    }
+  }
+
+
+  @VisibleForTesting
+  Configuration getYarnSiteConfig() {
+    return yarnSiteConfig;
+  }
