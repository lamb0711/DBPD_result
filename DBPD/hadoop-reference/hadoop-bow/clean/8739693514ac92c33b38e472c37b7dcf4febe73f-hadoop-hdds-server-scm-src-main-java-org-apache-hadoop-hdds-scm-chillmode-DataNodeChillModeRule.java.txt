HDDS-1217. Refactor ChillMode rules and chillmode manager. (#558)



+import org.apache.hadoop.hdds.scm.events.SCMEvents;
-import com.google.common.annotations.VisibleForTesting;
-import org.apache.hadoop.hdds.server.events.EventHandler;
-import org.apache.hadoop.hdds.server.events.EventPublisher;
+import org.apache.hadoop.hdds.server.events.EventQueue;
+import org.apache.hadoop.hdds.server.events.TypedEvent;
-public class DataNodeChillModeRule implements
-    ChillModeExitRule<NodeRegistrationContainerReport>,
-    EventHandler<NodeRegistrationContainerReport> {
+public class DataNodeChillModeRule extends
+    ChillModeExitRule<NodeRegistrationContainerReport>{
-  private final SCMChillModeManager chillModeManager;
-
-  public DataNodeChillModeRule(Configuration conf,
+  public DataNodeChillModeRule(String ruleName, EventQueue eventQueue,
+      Configuration conf,
+    super(manager, ruleName, eventQueue);
-    chillModeManager = manager;
-  public boolean validate() {
+  protected TypedEvent<NodeRegistrationContainerReport> getEventType() {
+    return SCMEvents.NODE_REGISTRATION_CONT_REPORT;
+  }
+
+  @Override
+  protected boolean validate() {
-  @VisibleForTesting
-  public double getRegisteredDataNodes() {
-    return registeredDns;
-  }
-
-  public void process(NodeRegistrationContainerReport reportsProto) {
+  protected void process(NodeRegistrationContainerReport reportsProto) {
-  }
-
-  @Override
-  public void onMessage(NodeRegistrationContainerReport
-      nodeRegistrationContainerReport, EventPublisher publisher) {
-    // TODO: when we have remove handlers, we can remove getInChillmode check
-
-    if (chillModeManager.getInChillMode()) {
-      if (validate()) {
-        return;
-      }
-
-      process(nodeRegistrationContainerReport);
-
-      if (chillModeManager.getInChillMode()) {
-        SCMChillModeManager.getLogger().info(
-            "SCM in chill mode. {} DataNodes registered, {} required.",
-            registeredDns, requiredDns);
-      }
-
-      if (validate()) {
-        chillModeManager.validateChillModeExitRules(publisher);
-      }
+    if (scmInChillMode()) {
+      SCMChillModeManager.getLogger().info(
+          "SCM in chill mode. {} DataNodes registered, {} required.",
+          registeredDns, requiredDns);
+
-  public void cleanup() {
+  protected void cleanup() {
