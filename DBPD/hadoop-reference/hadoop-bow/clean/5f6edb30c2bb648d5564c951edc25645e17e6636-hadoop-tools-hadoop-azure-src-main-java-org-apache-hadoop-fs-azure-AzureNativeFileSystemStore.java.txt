HADOOP-12350. WASB Logging: Improve WASB Logging around deletes, reads and writes. Contributed by Dushyanth.

-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
-  public static final Log LOG = LogFactory
-      .getLog(AzureNativeFileSystemStore.class);
+  public static final Logger LOG = LoggerFactory.getLogger(AzureNativeFileSystemStore.class);
-    LOG.debug("Page blob directories:  " + setToString(pageBlobDirs));
+    LOG.debug("Page blob directories:  {}", setToString(pageBlobDirs));
-    LOG.debug("Atomic rename directories:  " + setToString(atomicRenameDirs));
+    LOG.debug("Atomic rename directories: {} ", setToString(atomicRenameDirs));
-    if (LOG.isDebugEnabled()) {
-      LOG.debug(String
-          .format(
-              "AzureNativeFileSystemStore init. Settings=%d,%b,%d,{%d,%d,%d,%d},{%b,%f,%f}",
-              concurrentWrites, tolerateOobAppends,
-              ((storageConnectionTimeout > 0) ? storageConnectionTimeout
-                  : STORAGE_CONNECTION_TIMEOUT_DEFAULT), minBackoff,
-              deltaBackoff, maxBackoff, maxRetries, selfThrottlingEnabled,
-              selfThrottlingReadFactor, selfThrottlingWriteFactor));
-    }
+    LOG.debug(
+        "AzureNativeFileSystemStore init. Settings={},{},{},{{},{},{},{}},{{},{},{}}",
+        concurrentWrites, tolerateOobAppends,
+        ((storageConnectionTimeout > 0) ? storageConnectionTimeout
+          : STORAGE_CONNECTION_TIMEOUT_DEFAULT), minBackoff,
+        deltaBackoff, maxBackoff, maxRetries, selfThrottlingEnabled,
+        selfThrottlingReadFactor, selfThrottlingWriteFactor);
-        LOG.info(String.format(
-                   "URI syntax error creating URI for %s", dir));
+        LOG.info("URI syntax error creating URI for {}", dir);
-    if (LOG.isDebugEnabled()) {
-      LOG.debug("Retrieving metadata for " + key);
-    }
+    LOG.debug("Retrieving metadata for {}", key);
-        if (LOG.isDebugEnabled()) {
-          LOG.debug("Found " + key
-              + " as an explicit blob. Checking if it's a file or folder.");
-        }
+        LOG.debug("Found {} as an explicit blob. Checking if it's a file or folder.", key);
-          if (LOG.isDebugEnabled()) {
-            LOG.debug(key + " is a folder blob.");
-          }
+          LOG.debug("{} is a folder blob.", key);
-          if (LOG.isDebugEnabled()) {
-            LOG.debug(key + " is a normal blob.");
-          }
+
+          LOG.debug("{} is a normal blob.", key);
-          LOG.debug("Found blob as a directory-using this file under it to infer its properties "
-              + blobItem.getUri());
+          LOG.debug("Found blob as a directory-using this file under it to infer its properties {}",
+              blobItem.getUri());
+      LOG.error("Encountered Storage Exception for delete on Blob: {}, Exception Details: {} Error Code: {}",
+          blob.getUri(), e.getMessage(), e.getErrorCode());
-        if (LOG.isDebugEnabled()) {
-          LOG.debug("Swallowing delete exception on retry: " + e.getMessage());
-        }
+        LOG.debug("Swallowing delete exception on retry: {}", e.getMessage());
-    if (LOG.isDebugEnabled()) {
-      LOG.debug("Moving " + srcKey + " to " + dstKey);
-    }
+    LOG.debug("Moving {} to {}", srcKey, dstKey);
-    LOG.debug("acquiring lease on " + key);
+    LOG.debug("acquiring lease on {}", key);
