HDFS-3605. Block mistakenly marked corrupt during edit log catchup phase of failover. Contributed by Todd Lipcon and Brahma Reddy Battula.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1363175 13f79535-47bb-0310-9956-ffa450edef68

+  /**
+   * When running inside a Standby node, the node may receive block reports
+   * from datanodes before receiving the corresponding namespace edits from
+   * the active NameNode. Thus, it will postpone them for later processing,
+   * instead of marking the blocks as corrupt.
+   */
+  private boolean shouldPostponeBlocksFromFuture = false;
+
+
+  public void setPostponeBlocksFromFuture(boolean postpone) {
+    this.shouldPostponeBlocksFromFuture  = postpone;
+  }
+
+
-    boolean isStandby = namesystem.isInStandbyState();
-    
-      if (isStandby &&
+      if (shouldPostponeBlocksFromFuture &&
-        if (namesystem.isInStandbyState()) {
+        if (shouldPostponeBlocksFromFuture) {
-    if (namesystem.isInStandbyState() &&
+    if (shouldPostponeBlocksFromFuture &&
-      if (namesystem.isInStandbyState()) {
+      if (shouldPostponeBlocksFromFuture) {
-    assert namesystem.isInStandbyState();
+    assert shouldPostponeBlocksFromFuture;
-    assert !namesystem.isInStandbyState() :
-      "processAllPendingDNMessages() should be called after exiting " +
-      "standby state!";
+    assert !shouldPostponeBlocksFromFuture :
+      "processAllPendingDNMessages() should be called after disabling " +
+      "block postponement.";
