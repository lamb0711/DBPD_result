YARN-3240. Implement client API to put generic entities. Contributed by Zhijie Shen

(cherry picked from commit 4487da249f448d5c67b712cd0aa723e764eed77d)

-import javax.ws.rs.Consumes;
-import javax.ws.rs.GET;
-import javax.ws.rs.POST;
-import javax.ws.rs.Path;
-import javax.ws.rs.Produces;
-import javax.ws.rs.WebApplicationException;
+import javax.ws.rs.*;
-import org.apache.hadoop.yarn.api.records.timeline.TimelineEntities;
-import org.apache.hadoop.yarn.api.records.timeline.TimelinePutResponse;
+import org.apache.hadoop.yarn.api.records.ApplicationId;
+import org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntities;
+import org.apache.hadoop.yarn.util.ConverterUtils;
+import java.net.URI;
+
-  @POST
+  @PUT
+  @Path("/entities")
-  public TimelinePutResponse postEntities(
+  public Response putEntities(
+      @QueryParam("async") String async,
+      @QueryParam("appid") String appId,
+    boolean isAsync = async != null && async.trim().equalsIgnoreCase("true");
+
-      AppLevelAggregatorService service = getAggregatorService(req);
+      appId = parseApplicationId(appId);
+      if (appId == null) {
+        return Response.status(Response.Status.BAD_REQUEST).build();
+      }
+      AppLevelAggregatorService service = serviceManager.getService(appId);
-      return service.postEntities(entities, callerUgi);
+      service.postEntities(entities, callerUgi);
+      return Response.ok().build();
-  private AppLevelAggregatorService
-      getAggregatorService(HttpServletRequest req) {
-    String appIdString = getApplicationId(req);
-    return serviceManager.getService(appIdString);
-  }
-
-  private String getApplicationId(HttpServletRequest req) {
-    // TODO the application id from the request
-    // (most likely from the URI)
-    return null;
+  private String parseApplicationId(String appId) {
+    // Make sure the appId is not null and is valid
+    ApplicationId appID;
+    try {
+      if (appId != null) {
+        return ConverterUtils.toApplicationId(appId.trim()).toString();
+      } else {
+        return null;
+      }
+    } catch (Exception e) {
+      return null;
+    }
