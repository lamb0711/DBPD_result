HDFS-5473. Consistent naming of user-visible caching classes and methods (cmccabe)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1544252 13f79535-47bb-0310-9956-ffa450edef68

-public class PathBasedCacheDirective {
+public class CacheDirectiveInfo {
-   * A builder for creating new PathBasedCacheDirective instances.
+   * A builder for creating new CacheDirectiveInfo instances.
-    private Long bytesNeeded;
-    private Long bytesCached;
-    private Long filesAffected;
-     * Builds a new PathBasedCacheDirective populated with the set properties.
+     * Builds a new CacheDirectiveInfo populated with the set properties.
-     * @return New PathBasedCacheDirective.
+     * @return New CacheDirectiveInfo.
-    public PathBasedCacheDirective build() {
-      return new PathBasedCacheDirective(id, path, replication, pool,
-                    bytesNeeded, bytesCached, filesAffected);
+    public CacheDirectiveInfo build() {
+      return new CacheDirectiveInfo(id, path, replication, pool);
-     * given PathBasedCacheDirective.
+     * given CacheDirectiveInfo.
-    public Builder(PathBasedCacheDirective directive) {
+    public Builder(CacheDirectiveInfo directive) {
-      this.bytesNeeded = directive.bytesNeeded;
-      this.bytesCached = directive.bytesCached;
-      this.filesAffected = directive.filesAffected;
-     * Sets the bytes needed by this directive.
-     * 
-     * @param bytesNeeded The bytes needed.
-     * @return This builder, for call chaining.
-     */
-    public Builder setBytesNeeded(Long bytesNeeded) {
-      this.bytesNeeded = bytesNeeded;
-      return this;
-    }
-
-    /**
-     * Sets the bytes cached by this directive.
-     * 
-     * @param bytesCached The bytes cached.
-     * @return This builder, for call chaining.
-     */
-    public Builder setBytesCached(Long bytesCached) {
-      this.bytesCached = bytesCached;
-      return this;
-    }
-
-    /**
-     * Sets the files affected by this directive.
-     * 
-     * @param filesAffected The files affected.
-     * @return This builder, for call chaining.
-     */
-    public Builder setFilesAffected(Long filesAffected) {
-      this.filesAffected = filesAffected;
-      return this;
-    }
-    
-    /**
-  private final Long bytesNeeded;
-  private final Long bytesCached;
-  private final Long filesAffected;
-  PathBasedCacheDirective(Long id, Path path, Short replication, String pool,
-      Long bytesNeeded, Long bytesCached, Long filesAffected) {
+  CacheDirectiveInfo(Long id, Path path, Short replication, String pool) {
-    this.bytesNeeded = bytesNeeded;
-    this.bytesCached = bytesCached;
-    this.filesAffected = filesAffected;
-  /**
-   * @return The bytes needed.
-   */
-  public Long getBytesNeeded() {
-    return bytesNeeded;
-  }
-
-  /**
-   * @return The bytes cached.
-   */
-  public Long getBytesCached() {
-    return bytesCached;
-  }
-
-  /**
-   * @return The files affected.
-   */
-  public Long getFilesAffected() {
-    return filesAffected;
-  }
-
-    PathBasedCacheDirective other = (PathBasedCacheDirective)o;
+    CacheDirectiveInfo other = (CacheDirectiveInfo)o;
-    if (bytesNeeded != null) {
-      builder.append(prefix).append("bytesNeeded: ").append(bytesNeeded);
-      prefix = ",";
-    }
-    if (bytesCached != null) {
-      builder.append(prefix).append("bytesCached: ").append(bytesCached);
-      prefix = ",";
-    }
-    if (filesAffected != null) {
-      builder.append(prefix).append("filesAffected: ").append(filesAffected);
-      prefix = ",";
-    }
