YARN-6789. Add Client API to get all supported resource types from RM. (Sunil G via wangda)

Change-Id: I366d8db6f6700acd087db5acb7a1be7e41b2b68d

+import org.apache.hadoop.yarn.api.records.ResourceTypeInfo;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.List;
+import java.util.concurrent.locks.ReentrantReadWriteLock;
+  private List<ResourceTypeInfo> resourceTypeInfo =
+      new ArrayList<ResourceTypeInfo>();
+  protected final ReentrantReadWriteLock.ReadLock readLock;
+  protected final ReentrantReadWriteLock.WriteLock writeLock;
+
-  @Override
+  public ResourceProfilesManagerImpl() {
+    ReentrantReadWriteLock lock = new ReentrantReadWriteLock();
+    readLock = lock.readLock();
+    writeLock = lock.writeLock();
+  }
+
+
+    // Load resource types, this should be done even if resource profile is
+    // disabled, since we have mandatory resource types like vcores/memory.
+    loadResourceTypes();
+  }
+
+  private void loadResourceTypes() {
+    // Add all resource types
+    try {
+      writeLock.lock();
+      Collection<ResourceInformation> resourcesInfo = ResourceUtils
+          .getResourceTypes().values();
+      for (ResourceInformation resourceInfo : resourcesInfo) {
+        resourceTypeInfo
+            .add(ResourceTypeInfo.newInstance(resourceInfo.getName(),
+                resourceInfo.getUnits(), resourceInfo.getResourceType()));
+      }
+    } finally {
+      writeLock.unlock();
+    }
+
+  public List<ResourceTypeInfo> getAllResourceTypeInfo() {
+    try {
+      readLock.lock();
+      return Collections.unmodifiableList(resourceTypeInfo);
+    } finally {
+      readLock.unlock();
+    }
+  }
