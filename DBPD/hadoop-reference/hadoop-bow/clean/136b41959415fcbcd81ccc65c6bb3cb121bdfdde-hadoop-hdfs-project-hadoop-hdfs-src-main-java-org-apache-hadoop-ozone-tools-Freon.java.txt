HDFS-13149. Ozone: Rename Corona to Freon. Contributed by Anu Engineer.

- * Corona - A tool to populate ozone with data for testing.<br>
+ * Freon - A tool to populate ozone with data for testing.<br>
-public final class Corona extends Configured implements Tool {
+public final class Freon extends Configured implements Tool {
-  enum CoronaOps {
+  enum FreonOps {
-      LoggerFactory.getLogger(Corona.class);
+      LoggerFactory.getLogger(Freon.class);
-  Corona(Configuration conf) throws IOException {
+  Freon(Configuration conf) throws IOException {
-    for (CoronaOps ops : CoronaOps.values()) {
+    for (FreonOps ops : FreonOps.values()) {
-    int res = ToolRunner.run(conf, new Corona(conf), args);
+    int res = ToolRunner.run(conf, new Freon(conf), args);
-        "Corona run.");
+        "Freon run.");
-        + "specifies the mode in which Corona should run.");
+        + "specifies the mode in which Freon should run.");
-   * Prints stats of {@link Corona} run to the PrintStream.
+   * Prints stats of {@link Freon} run to the PrintStream.
-          new String[CoronaOps.values().length][QUANTILES + 1];
-      String[] deviations = new String[CoronaOps.values().length];
-      String[] means = new String[CoronaOps.values().length];
-      for (CoronaOps ops : CoronaOps.values()) {
+          new String[FreonOps.values().length][QUANTILES + 1];
+      String[] deviations = new String[FreonOps.values().length];
+      String[] means = new String[FreonOps.values().length];
+      for (FreonOps ops : FreonOps.values()) {
-      CoronaJobInfo jobInfo = new CoronaJobInfo().setExecTime(execTime)
+      FreonJobInfo jobInfo = new FreonJobInfo().setExecTime(execTime)
-          .setMeanVolumeCreateTime(means[CoronaOps.VOLUME_CREATE.ordinal()])
+          .setMeanVolumeCreateTime(means[FreonOps.VOLUME_CREATE.ordinal()])
-              deviations[CoronaOps.VOLUME_CREATE.ordinal()])
+              deviations[FreonOps.VOLUME_CREATE.ordinal()])
-              quantileTime[CoronaOps.VOLUME_CREATE.ordinal()])
-          .setMeanBucketCreateTime(means[CoronaOps.BUCKET_CREATE.ordinal()])
+              quantileTime[FreonOps.VOLUME_CREATE.ordinal()])
+          .setMeanBucketCreateTime(means[FreonOps.BUCKET_CREATE.ordinal()])
-              deviations[CoronaOps.BUCKET_CREATE.ordinal()])
+              deviations[FreonOps.BUCKET_CREATE.ordinal()])
-              quantileTime[CoronaOps.BUCKET_CREATE.ordinal()])
-          .setMeanKeyCreateTime(means[CoronaOps.KEY_CREATE.ordinal()])
-          .setDeviationKeyCreateTime(deviations[CoronaOps.KEY_CREATE.ordinal()])
+              quantileTime[FreonOps.BUCKET_CREATE.ordinal()])
+          .setMeanKeyCreateTime(means[FreonOps.KEY_CREATE.ordinal()])
+          .setDeviationKeyCreateTime(deviations[FreonOps.KEY_CREATE.ordinal()])
-              quantileTime[CoronaOps.KEY_CREATE.ordinal()])
-          .setMeanKeyWriteTime(means[CoronaOps.KEY_WRITE.ordinal()])
-          .setDeviationKeyWriteTime(deviations[CoronaOps.KEY_WRITE.ordinal()])
+              quantileTime[FreonOps.KEY_CREATE.ordinal()])
+          .setMeanKeyWriteTime(means[FreonOps.KEY_WRITE.ordinal()])
+          .setDeviationKeyWriteTime(deviations[FreonOps.KEY_WRITE.ordinal()])
-              quantileTime[CoronaOps.KEY_WRITE.ordinal()]);
+              quantileTime[FreonOps.KEY_WRITE.ordinal()]);
-        histograms.get(CoronaOps.VOLUME_CREATE.ordinal())
+        histograms.get(FreonOps.VOLUME_CREATE.ordinal())
-          histograms.get(CoronaOps.BUCKET_CREATE.ordinal())
+          histograms.get(FreonOps.BUCKET_CREATE.ordinal())
-              histograms.get(CoronaOps.KEY_CREATE.ordinal())
+              histograms.get(FreonOps.KEY_CREATE.ordinal())
-              histograms.get(CoronaOps.KEY_WRITE.ordinal())
+              histograms.get(FreonOps.KEY_WRITE.ordinal())
-  private final class CoronaJobInfo {
+  private final class FreonJobInfo {
-    private CoronaJobInfo() {
+    private FreonJobInfo() {
-      this.numOfVolumes = Corona.this.numOfVolumes;
-      this.numOfBuckets = Corona.this.numOfBuckets;
-      this.numOfKeys = Corona.this.numOfKeys;
-      this.numOfThreads = Corona.this.numOfThreads;
-      this.keySize = Corona.this.keySize;
-      this.mode = Corona.this.mode;
-      this.jobStartTime = Time.formatTime(Corona.this.jobStartTime);
-      this.replicationFactor = Corona.this.factor.name();
-      this.replicationType = Corona.this.type.name();
+      this.numOfVolumes = Freon.this.numOfVolumes;
+      this.numOfBuckets = Freon.this.numOfBuckets;
+      this.numOfKeys = Freon.this.numOfKeys;
+      this.numOfThreads = Freon.this.numOfThreads;
+      this.keySize = Freon.this.keySize;
+      this.mode = Freon.this.mode;
+      this.jobStartTime = Time.formatTime(Freon.this.jobStartTime);
+      this.replicationFactor = Freon.this.factor.name();
+      this.replicationType = Freon.this.type.name();
-              .toSeconds(Corona.this.keyWriteTime.get() / threadPoolSize));
+              .toSeconds(Freon.this.keyWriteTime.get() / threadPoolSize));
-    public CoronaJobInfo setGitBaseRevision(String gitBaseRevisionVal) {
+    public FreonJobInfo setGitBaseRevision(String gitBaseRevisionVal) {
-    public CoronaJobInfo setExecTime(String execTimeVal) {
+    public FreonJobInfo setExecTime(String execTimeVal) {
-    public CoronaJobInfo setMeanKeyWriteTime(String deviationKeyWriteTimeVal) {
+    public FreonJobInfo setMeanKeyWriteTime(String deviationKeyWriteTimeVal) {
-    public CoronaJobInfo setDeviationKeyWriteTime(
+    public FreonJobInfo setDeviationKeyWriteTime(
-    public CoronaJobInfo setTenQuantileKeyWriteTime(
+    public FreonJobInfo setTenQuantileKeyWriteTime(
-    public CoronaJobInfo setMeanKeyCreateTime(String deviationKeyWriteTimeVal) {
+    public FreonJobInfo setMeanKeyCreateTime(String deviationKeyWriteTimeVal) {
-    public CoronaJobInfo setDeviationKeyCreateTime(
+    public FreonJobInfo setDeviationKeyCreateTime(
-    public CoronaJobInfo setTenQuantileKeyCreateTime(
+    public FreonJobInfo setTenQuantileKeyCreateTime(
-    public CoronaJobInfo setMeanBucketCreateTime(
+    public FreonJobInfo setMeanBucketCreateTime(
-    public CoronaJobInfo setDeviationBucketCreateTime(
+    public FreonJobInfo setDeviationBucketCreateTime(
-    public CoronaJobInfo setTenQuantileBucketCreateTime(
+    public FreonJobInfo setTenQuantileBucketCreateTime(
-    public CoronaJobInfo setMeanVolumeCreateTime(
+    public FreonJobInfo setMeanVolumeCreateTime(
-    public CoronaJobInfo setDeviationVolumeCreateTime(
+    public FreonJobInfo setDeviationVolumeCreateTime(
-    public CoronaJobInfo setTenQuantileVolumeCreateTime(
+    public FreonJobInfo setTenQuantileVolumeCreateTime(
