YARN-3022. Expose Container resource information from NodeManager for monitoring (adhoot via ranter)

+import org.apache.hadoop.metrics2.lib.MutableGaugeInt;
+  public static final String PMEM_LIMIT_METRIC_NAME = "pMemLimit";
+  public static final String VMEM_LIMIT_METRIC_NAME = "vMemLimit";
+  public static final String VCORE_LIMIT_METRIC_NAME = "vCoreLimit";
+  public static final String PMEM_USAGE_METRIC_NAME = "pMemUsage";
+
+  @Metric
+  public MutableGaugeInt pMemLimitMbs;
+
+  @Metric
+  public MutableGaugeInt vMemLimitMbs;
+
+  @Metric
+  public MutableGaugeInt cpuVcores;
+
-      info("ContainerUsage", "Resource usage by container");
+      info("ContainerResource", "Resource limit and usage by container");
+
+  public static final MetricsInfo PROCESSID_INFO =
+      info("ContainerPid", "Container Process Id");
-        "pMem", "Physical memory stats", "Usage", "MBs", true);
+        PMEM_USAGE_METRIC_NAME, "Physical memory stats", "Usage", "MBs", true);
+    this.pMemLimitMbs = registry.newGauge(
+        PMEM_LIMIT_METRIC_NAME, "Physical memory limit in MBs", 0);
+    this.vMemLimitMbs = registry.newGauge(
+        VMEM_LIMIT_METRIC_NAME, "Virtual memory limit in MBs", 0);
+    this.cpuVcores = registry.newGauge(
+        VCORE_LIMIT_METRIC_NAME, "CPU limit in number of vcores", 0);
-  public static ContainerMetrics forContainer(ContainerId containerId) {
-    return forContainer(containerId, -1L);
-  }
-
+  public void recordProcessId(String processId) {
+    registry.tag(PROCESSID_INFO, processId);
+  }
+
+  public void recordResourceLimit(int vmemLimit, int pmemLimit, int cpuVcores) {
+    this.vMemLimitMbs.set(vmemLimit);
+    this.pMemLimitMbs.set(pmemLimit);
+    this.cpuVcores.set(cpuVcores);
+  }
+
