HDDS-748. Use strongly typed metadata Table implementation. Contributed by Elek Marton.

-public interface Table extends AutoCloseable {
+public interface Table<KEY, VALUE> extends AutoCloseable {
-  void put(byte[] key, byte[] value) throws IOException;
+  void put(KEY key, VALUE value) throws IOException;
-  void putWithBatch(BatchOperation batch, byte[] key, byte[] value)
+  void putWithBatch(BatchOperation batch, KEY key, VALUE value)
-  byte[] get(byte[] key) throws IOException;
+  VALUE get(KEY key) throws IOException;
-  void delete(byte[] key) throws IOException;
+  void delete(KEY key) throws IOException;
-  void deleteWithBatch(BatchOperation batch, byte[] key) throws IOException;
+  void deleteWithBatch(BatchOperation batch, KEY key) throws IOException;
-  TableIterator<KeyValue> iterator();
+  TableIterator<KEY, ? extends KeyValue<KEY, VALUE>> iterator();
-  class KeyValue {
+  interface KeyValue<KEY, VALUE> {
-    private final byte[] key;
-    private final byte[] value;
+    KEY getKey();
-    /**
-     * KeyValue Constructor, used to represent a key and value of a db entry.
-     *
-     * @param key - Key Bytes
-     * @param value - Value bytes
-     */
-    private KeyValue(byte[] key, byte[] value) {
-      this.key = key;
-      this.value = value;
-    }
-
-    /**
-     * Create a KeyValue pair.
-     *
-     * @param key - Key Bytes
-     * @param value - Value bytes
-     * @return KeyValue object.
-     */
-    public static KeyValue create(byte[] key, byte[] value) {
-      return new KeyValue(key, value);
-    }
-
-    /**
-     * Return key.
-     *
-     * @return byte[]
-     */
-    public byte[] getKey() {
-      byte[] result = new byte[key.length];
-      System.arraycopy(key, 0, result, 0, key.length);
-      return result;
-    }
-
-    /**
-     * Return value.
-     *
-     * @return byte[]
-     */
-    public byte[] getValue() {
-      byte[] result = new byte[value.length];
-      System.arraycopy(value, 0, result, 0, value.length);
-      return result;
-    }
+    VALUE getValue();
