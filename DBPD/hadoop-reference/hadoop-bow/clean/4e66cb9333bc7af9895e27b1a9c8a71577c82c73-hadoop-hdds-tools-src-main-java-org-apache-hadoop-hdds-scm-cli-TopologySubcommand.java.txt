HDDS-1653. Add option to "ozone scmcli printTopology" to order the output acccording to topology layer. Contributed by Xiaoyu Yao.  (#1067)

* HDDS-1653. Add option to "ozone scmcli printTopology" to order the output acccording to topology layer. Contributed by Xiaoyu Yao.

* use ip/hostname instead of network name for -o output and add smoke test

+import org.apache.hadoop.hdds.protocol.DatanodeDetails;
+
+import java.util.Collection;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.TreeSet;
+  @CommandLine.Option(names = {"-o", "--order"},
+      description = "Print Topology ordered by network location")
+  private boolean order;
+
-          // format "hostname/ipAddress    networkLocation"
-          nodes.forEach(node -> {
-            System.out.print(node.getNodeID().getHostName() + "/" +
-                node.getNodeID().getIpAddress());
-            System.out.println("    " +
-                (node.getNodeID().getNetworkLocation() != null ?
-                    node.getNodeID().getNetworkLocation() : "NA"));
-          });
+          if (order) {
+            printOrderedByLocation(nodes);
+          } else {
+            printNodesWithLocation(nodes);
+          }
+
+  // Format
+  // Location: rack1
+  //  ipAddress(hostName)
+  private void printOrderedByLocation(List<HddsProtos.Node> nodes) {
+    HashMap<String, TreeSet<DatanodeDetails>> tree =
+        new HashMap<>();
+    for (HddsProtos.Node node : nodes) {
+      String location = node.getNodeID().getNetworkLocation();
+      if (location != null && !tree.containsKey(location)) {
+        tree.put(location, new TreeSet<>());
+      }
+      tree.get(location).add(DatanodeDetails.getFromProtoBuf(node.getNodeID()));
+    }
+    ArrayList<String> locations = new ArrayList<>(tree.keySet());
+    Collections.sort(locations);
+
+    locations.forEach(location -> {
+      System.out.println("Location: " + location);
+      tree.get(location).forEach(node -> {
+        System.out.println(" " + node.getIpAddress() + "(" + node.getHostName()
+            + ")");
+      });
+    });
+  }
+
+
+  // Format "ipAddress(hostName)    networkLocation"
+  private void printNodesWithLocation(Collection<HddsProtos.Node> nodes) {
+    nodes.forEach(node -> {
+      System.out.print(" " + node.getNodeID().getIpAddress() + "(" +
+          node.getNodeID().getHostName() + ")");
+      System.out.println("    " +
+          (node.getNodeID().getNetworkLocation() != null ?
+              node.getNodeID().getNetworkLocation() : "NA"));
+    });
+  }
