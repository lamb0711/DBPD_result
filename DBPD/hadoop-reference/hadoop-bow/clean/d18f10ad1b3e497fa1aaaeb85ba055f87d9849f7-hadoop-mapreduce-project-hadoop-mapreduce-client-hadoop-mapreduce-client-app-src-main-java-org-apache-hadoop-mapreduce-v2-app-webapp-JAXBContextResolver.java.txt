MAPREDUCE-6284. Add Task Attempt State API to MapReduce Application Master REST API. Contributed by Ryu Kobayashi.

-import java.util.Set;
-import java.util.HashSet;
-import java.util.Arrays;
+import java.util.HashMap;
+import java.util.Map;
+import org.apache.hadoop.mapreduce.v2.app.webapp.dao.JobTaskAttemptState;
-  private JAXBContext context;
-  private final Set<Class> types;
+  private final Map<Class, JAXBContext> typesContextMap;
+  // these dao classes need root unwrapping
+  private final Class[] rootUnwrappedTypes = {JobTaskAttemptState.class};
+
-    this.types = new HashSet<Class>(Arrays.asList(cTypes));
-    this.context = new JSONJAXBContext(JSONConfiguration.natural().
-        rootUnwrapping(false).build(), cTypes);
+    JAXBContext context;
+    JAXBContext unWrappedRootContext;
+
+    this.typesContextMap = new HashMap<Class, JAXBContext>();
+    context =
+        new JSONJAXBContext(JSONConfiguration.natural().rootUnwrapping(false)
+            .build(), cTypes);
+    unWrappedRootContext =
+        new JSONJAXBContext(JSONConfiguration.natural().rootUnwrapping(true)
+            .build(), rootUnwrappedTypes);
+    for (Class type : cTypes) {
+      typesContextMap.put(type, context);
+    }
+    for (Class type : rootUnwrappedTypes) {
+      typesContextMap.put(type, unWrappedRootContext);
+    }
-    return (types.contains(objectType)) ? context : null;
+    return typesContextMap.get(objectType);
