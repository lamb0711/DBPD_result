HDDS-1105 : Add mechanism in Recon to obtain DB snapshot 'delta' updates from Ozone Manager (#1259)


-import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.RECON_OM_SNAPSHOT_TASK_INITIAL_DELAY;
-import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.RECON_OM_SNAPSHOT_TASK_INITIAL_DELAY_DEFAULT;
-import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.RECON_OM_SNAPSHOT_TASK_INTERVAL;
-import static org.apache.hadoop.ozone.recon.ReconServerConfigKeys.RECON_OM_SNAPSHOT_TASK_INTERVAL_DEFAULT;
-
-import java.io.IOException;
-import java.util.concurrent.TimeUnit;
-import org.apache.hadoop.ozone.recon.spi.ContainerDBServiceProvider;
-import org.apache.hadoop.ozone.recon.tasks.ContainerKeyMapperTask;
-import org.apache.hadoop.ozone.recon.tasks.FileSizeCountTask;
-import org.jooq.Configuration;
-        ReconControllerModule(), new ReconRestServletModule() {
+        ReconControllerModule(),
+        new ReconRestServletModule() {
-        });
+        },
+        new ReconTaskBindingModule());
+
+      httpServer = injector.getInstance(ReconHttpServer.class);
+      LOG.info("Starting Recon server");
+      httpServer.start();
+
+      //Start Ozone Manager Service that pulls data from OM.
+      OzoneManagerServiceProvider ozoneManagerServiceProvider = injector
+          .getInstance(OzoneManagerServiceProvider.class);
+      ozoneManagerServiceProvider.start();
+      stop();
-    httpServer = injector.getInstance(ReconHttpServer.class);
-    LOG.info("Starting Recon server");
-    httpServer.start();
-    scheduleReconTasks();
-  /**
-   * Schedule the tasks that is required by Recon to keep its metadata up to
-   * date.
-   */
-  private void scheduleReconTasks() {
-    OzoneConfiguration configuration = injector.getInstance(
-        OzoneConfiguration.class);
-    ContainerDBServiceProvider containerDBServiceProvider = injector
-        .getInstance(ContainerDBServiceProvider.class);
-    OzoneManagerServiceProvider ozoneManagerServiceProvider = injector
-        .getInstance(OzoneManagerServiceProvider.class);
-    Configuration sqlConfiguration = injector.getInstance(Configuration.class);
-    long initialDelay = configuration.getTimeDuration(
-        RECON_OM_SNAPSHOT_TASK_INITIAL_DELAY,
-        RECON_OM_SNAPSHOT_TASK_INITIAL_DELAY_DEFAULT,
-        TimeUnit.MILLISECONDS);
-    long interval = configuration.getTimeDuration(
-        RECON_OM_SNAPSHOT_TASK_INTERVAL,
-        RECON_OM_SNAPSHOT_TASK_INTERVAL_DEFAULT,
-        TimeUnit.MILLISECONDS);
-
-
-    scheduler.scheduleWithFixedDelay(() -> {
-      try {
-        ozoneManagerServiceProvider.updateReconOmDBWithNewSnapshot();
-        // Schedule the task to read OM DB and write the reverse mapping to
-        // Recon container DB.
-        ContainerKeyMapperTask containerKeyMapperTask =
-            new ContainerKeyMapperTask(containerDBServiceProvider,
-                ozoneManagerServiceProvider.getOMMetadataManagerInstance());
-        containerKeyMapperTask.reprocess(
-            ozoneManagerServiceProvider.getOMMetadataManagerInstance());
-        FileSizeCountTask fileSizeCountTask = new
-            FileSizeCountTask(
-                ozoneManagerServiceProvider.getOMMetadataManagerInstance(),
-            sqlConfiguration);
-        fileSizeCountTask.reprocess(
-            ozoneManagerServiceProvider.getOMMetadataManagerInstance());
-
-      } catch (IOException e) {
-        LOG.error("Unable to get OM " +
-            "Snapshot", e);
-      }
-    }, initialDelay, interval, TimeUnit.MILLISECONDS);
-  }
-
