YARN-9267. General improvements in FpgaResourceHandlerImpl. Contributed by Peter Bacsko.

-import com.google.common.annotations.VisibleForTesting;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
+import static org.apache.hadoop.yarn.api.records.ResourceInformation.FPGA_URI;
+
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+import org.apache.commons.codec.digest.DigestUtils;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-
-import static org.apache.hadoop.yarn.api.records.ResourceInformation.FPGA_URI;
+import com.google.common.annotations.VisibleForTesting;
-
-  static final Logger LOG = LoggerFactory.
-      getLogger(FpgaResourceHandlerImpl.class);
+  private static final Logger LOG =
+      LoggerFactory.getLogger(FpgaResourceHandlerImpl.class);
-  public FpgaResourceAllocator getFpgaAllocator() {
+  FpgaResourceAllocator getFpgaAllocator() {
-    String r= container.getLaunchContext().getEnvironment().
+    return container.getLaunchContext().getEnvironment().
-    return r == null ? "" : r;
+      final String requestedIPID = getRequestedIPID(container);
+      String localizedIPIDHash = null;
+      ipFilePath = vendorPlugin.retrieveIPfilePath(
+          requestedIPID, container.getWorkDir(),
+          container.getResourceSet().getLocalizedResources());
+      if (ipFilePath != null) {
+        try (FileInputStream fis = new FileInputStream(ipFilePath)) {
+          localizedIPIDHash = DigestUtils.sha256Hex(fis);
+        } catch (IOException e) {
+          throw new ResourceHandlerException("Could not calculate SHA-256", e);
+        }
+      }
+
-          container, getRequestedIPID(container));
+          container, localizedIPIDHash);
-            String currentIPID = device.getIPID();
-            if (null != currentIPID &&
-                currentIPID.equalsIgnoreCase(getRequestedIPID(container))) {
-              LOG.info("IP already in device \"" +
-                  allowed.get(i).getAliasDevName() +
-                  "," + majorMinorNumber + "\", skip reprogramming");
+            String currentHash = allowed.get(i).getAocxHash();
+            if (currentHash != null &&
+                currentHash.equalsIgnoreCase(localizedIPIDHash)) {
+              LOG.info("IP already in device \""
+                  + allowed.get(i).getAliasDevName() + "," +
+                  majorMinorNumber + "\", skip reprogramming");
-                  getRequestedIPID(container));
+                  requestedIPID, localizedIPIDHash);
