HDDS-1076. TestSCMNodeManager crashed the jvm. Contributed by Lokesh Jain.

-import org.apache.ratis.util.TimeDuration;
-import org.apache.ratis.util.TimeoutScheduler;
-  private static TimeoutScheduler timeoutScheduler =
-      TimeoutScheduler.newInstance(1);
-      TimeDuration timeoutDuration = TimeDuration
-          .valueOf(pipelineDestroyTimeoutInMillis, TimeUnit.MILLISECONDS);
-      timeoutScheduler.onTimeout(timeoutDuration,
-          () -> destroyPipeline(pipelineManager, pipeline, ozoneConf), LOG,
-          () -> String.format("Destroy pipeline failed for pipeline:%s with %s",
-              pipeline.getId(), group));
+      RatisPipelineProvider.getScheduler()
+          .schedule(() -> destroyPipeline(pipelineManager, pipeline, ozoneConf),
+              pipelineDestroyTimeoutInMillis, TimeUnit.MILLISECONDS, LOG, String
+                  .format("Destroy pipeline failed for pipeline:%s with %s",
+                      pipeline.getId(), group));
-    TimeDuration timeDuration =
-        TimeDuration.valueOf(intervalInMillis, TimeUnit.MILLISECONDS);
-    timeoutScheduler.onTimeout(timeDuration,
-        () -> fixedIntervalPipelineCreator(pipelineManager, conf,
-            timeDuration), LOG,
-        () -> "FixedIntervalPipelineCreatorJob failed.");
-  }
-
-  private static void fixedIntervalPipelineCreator(
-      PipelineManager pipelineManager, Configuration conf,
-      TimeDuration timeDuration) {
-    timeoutScheduler.onTimeout(timeDuration,
-        () -> fixedIntervalPipelineCreator(pipelineManager, conf,
-            timeDuration), LOG,
-        () -> "FixedIntervalPipelineCreatorJob failed.");
-    triggerPipelineCreation(pipelineManager, conf, 0);
+    RatisPipelineProvider.getScheduler().scheduleWithFixedDelay(() -> {
+      if (!isPipelineCreatorRunning.compareAndSet(false, true)) {
+        return;
+      }
+      createPipelines(pipelineManager, conf);
+    }, intervalInMillis, intervalInMillis, TimeUnit.MILLISECONDS);
-    timeoutScheduler
-        .onTimeout(TimeDuration.valueOf(afterMillis, TimeUnit.MILLISECONDS),
-            () -> createPipelines(pipelineManager, conf), LOG,
-            () -> "PipelineCreation failed.");
+    RatisPipelineProvider.getScheduler()
+        .schedule(() -> createPipelines(pipelineManager, conf), afterMillis,
+            TimeUnit.MILLISECONDS);
-      try {
-        pipelineManager.createPipeline(type, factor);
-      } catch (IOException ioe) {
-        break;
-      } catch (Throwable t) {
-        LOG.error("Error while creating pipelines {}", t);
-        break;
+      while (true) {
+        try {
+          if (RatisPipelineProvider.getScheduler().isClosed()) {
+            break;
+          }
+          pipelineManager.createPipeline(type, factor);
+        } catch (IOException ioe) {
+          break;
+        } catch (Throwable t) {
+          LOG.error("Error while creating pipelines {}", t);
+          break;
+        }
