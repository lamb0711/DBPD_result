HDFS-14710. RBF: Improve some RPC performance by using previous block. Contributed by xuzq.

-      return (HdfsFileStatus) rpcClient.invokeSingle(createLocation, method);
+      return rpcClient.invokeSingle(createLocation, method,
+          HdfsFileStatus.class);
-   * @param e Exception that was triggered.
+   * @param ioe Exception that was triggered.
-    final List<RemoteLocation> locations =
-        rpcServer.getLocationsForPath(src, true);
+
+    if (previous != null) {
+      return rpcClient.invokeSingle(previous, method, LocatedBlock.class);
+    }
+
+    final List<RemoteLocation> locations =
+        rpcServer.getLocationsForPath(src, true);
-    final List<RemoteLocation> locations =
-        rpcServer.getLocationsForPath(src, false);
+
+    if (blk != null) {
+      return rpcClient.invokeSingle(blk, method, LocatedBlock.class);
+    }
+
+    final List<RemoteLocation> locations =
+        rpcServer.getLocationsForPath(src, false);
-    final List<RemoteLocation> locations =
-        rpcServer.getLocationsForPath(src, true);
+
+    if (last != null) {
+      return rpcClient.invokeSingle(last, method, Boolean.class);
+    }
+
+    final List<RemoteLocation> locations =
+        rpcServer.getLocationsForPath(src, true);
-    return (LocatedBlock) rpcClient.invokeSingle(block, method);
+    return rpcClient.invokeSingle(block, method, LocatedBlock.class);
-    rpcClient.invokeSingle(targetDestination, method);
+    rpcClient.invokeSingle(targetDestination, method, Void.class);
-      return (boolean) rpcClient.invokeSingle(firstLocation, method);
+      return rpcClient.invokeSingle(firstLocation, method, Boolean.class);
