HDFS-11667. Block Storage:Handling flushing of incomplete block id buffers during shutdown. Contributed by Mukul Kumar Singh.

+  public void start() throws IOException {
+    File logDir = new File(parentCache.getDbPath().toString());
+    if (!logDir.exists() && !logDir.mkdirs()) {
+      LOG.error("Unable to create the log directory, Critical error cannot " +
+          "continue. Log Dir : {}", logDir);
+      throw new IllegalStateException("Cache Directory create failed, Cannot " +
+          "continue. Log Dir: {}" + logDir);
+    }
+  }
+
+      if (blockIDBuffer.remaining() <= (Long.SIZE / Byte.SIZE)) {
+        writeBlockBufferToFile(blockIDBuffer);
+      }
+      parentCache.getTargetMetrics().incNumDirtyLogBlockUpdated();
+      blockIDBuffer.putLong(block.getBlockID());
-    if (blockIDBuffer.remaining() <= (Long.SIZE / Byte.SIZE)) {
-      long startTime = Time.monotonicNow();
-      blockIDBuffer.flip();
-      writeBlockBufferToFile(blockIDBuffer);
-      blockIDBuffer.clear();
-      long endTime = Time.monotonicNow();
-      if (parentCache.isTraceEnabled()) {
-        parentCache.getTracer().info(
-            "Task=DirtyBlockLogWrite,Time={}", endTime - startTime);
-      }
-      parentCache.getTargetMetrics().incNumBlockBufferFlush();
-      parentCache.getTargetMetrics()
-          .updateBlockBufferFlushLatency(endTime - startTime);
-    }
-    blockIDBuffer.putLong(block.getBlockID());
-   * @param blockID - ByteBuffer
+   * @param blockBuffer - ByteBuffer
-  private void writeBlockBufferToFile(ByteBuffer blockID)
+  private synchronized void writeBlockBufferToFile(ByteBuffer blockBuffer)
+    long startTime = Time.monotonicNow();
+    int bytesWritten = 0;
+
+    // If there is nothing written to blockId buffer,
+    // then skip flushing of blockId buffer
+    if (blockBuffer.position() == 0) {
+      return;
+    }
+
+    blockBuffer.flip();
-    File logDir = new File(parentCache.getDbPath().toString());
-    if (!logDir.exists() && !logDir.mkdirs()) {
-      LOG.error("Unable to create the log directory, Critical error cannot " +
-          "continue. Log Dir : {}", logDir);
-      throw new IllegalStateException("Cache Directory create failed, Cannot " +
-          "continue. Log Dir: {}" + logDir);
-    }
-    try (FileChannel channel = new FileOutputStream(log, append).getChannel()) {
-      channel.write(blockID);
+    try {
+      FileChannel channel = new FileOutputStream(log, append).getChannel();
+      bytesWritten = channel.write(blockBuffer);
+    } catch (Exception ex) {
+      LOG.error("Unable to sync the Block map to disk -- This might cause a " +
+          "data loss or corruption", ex);
+      parentCache.getTargetMetrics().incNumFailedDirtyBlockFlushes();
+      throw ex;
+    } finally {
+      blockBuffer.clear();
-    blockID.clear();
+
+    blockIDBuffer.clear();
+    long endTime = Time.monotonicNow();
+    if (parentCache.isTraceEnabled()) {
+      parentCache.getTracer().info(
+          "Task=DirtyBlockLogWrite,Time={} bytesWritten={}",
+          endTime - startTime, bytesWritten);
+    }
+
+    parentCache.getTargetMetrics().incNumBytesDirtyLogWritten(bytesWritten);
+    parentCache.getTargetMetrics().incNumBlockBufferFlush();
+    parentCache.getTargetMetrics()
+        .updateBlockBufferFlushLatency(endTime - startTime);
+    LOG.debug("Block buffer writer bytesWritten:{} Time:{}",
+        bytesWritten, endTime - startTime);
