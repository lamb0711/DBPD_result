HDFS-4446. Support file snapshots with diff lists.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1443825 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.hdfs.server.namenode.snapshot.INodeFileSnapshot;
-import org.apache.hadoop.hdfs.server.namenode.snapshot.INodeFileUnderConstructionSnapshot;
-import com.google.common.base.Preconditions;
-  
-  /**
-   * Create a copy of this inode for snapshot.
-   * 
-   * @return a pair of inodes, where the left inode is the current inode and
-   *         the right inode is the snapshot copy. The current inode usually is
-   *         the same object of this inode. However, in some cases, the inode
-   *         may be replaced with a new inode for maintaining snapshot data.
-   *         Then, the current inode is the new inode.
-   */
-  public Pair<? extends INode, ? extends INode> createSnapshotCopy() {
-    throw new UnsupportedOperationException(getClass().getSimpleName()
-        + " does not support createSnapshotCopy().");
-  }
-  INode recordModification(final Snapshot latest) {
-    Preconditions.checkState(!isDirectory(),
-        "this is an INodeDirectory, this=%s", this);
-    return parent.saveChild2Snapshot(this, latest);
-  }
+  abstract INode recordModification(final Snapshot latest);
-   * @return the number of deleted files in the subtree.
+   * @return the number of deleted inodes in the subtree.
-    return name == null? "<name==null>": getFullPathName();
+    return getLocalName();
-  
+
+  /** Clear references to other objects. */
+  public void clearReferences() {
+    setParent(null);
+  }
+
-  public long getModificationTime() {
+  public final long getModificationTime() {
-  public void updateModificationTime(long mtime, Snapshot latest) {
+  public final INode updateModificationTime(long mtime, Snapshot latest) {
-    if (mtime > modificationTime) {
-      setModificationTime(mtime, latest);
+    if (mtime <= modificationTime) {
+      return this;
+    return setModificationTime(mtime, latest);
-  public INode setModificationTime(long modtime, Snapshot latest) {
+  public final INode setModificationTime(long modtime, Snapshot latest) {
-          : (withSnapshot ? INodeDirectoryWithSnapshot.newInstance(dir, null)
+          : (withSnapshot ? new INodeDirectoryWithSnapshot(dir)
-    if (computeFileSize >= 0) {
-      return underConstruction ? new INodeFileUnderConstructionSnapshot(
-          fileNode, computeFileSize, clientName, clientMachine)
-          : new INodeFileSnapshot(fileNode, computeFileSize); 
-    } else {
-      return withLink ? new INodeFileWithSnapshot(fileNode) : fileNode;
-    }
+//    TODO: fix image for file diff.
+//    if (computeFileSize >= 0) {
+//      return underConstruction ? new INodeFileUnderConstructionSnapshot(
+//          fileNode, computeFileSize, clientName, clientMachine)
+//          : new INodeFileWithSnapshot(fileNode, computeFileSize); 
+//    } else {
+      return withLink ? new INodeFileWithSnapshot(fileNode, null) : fileNode;
+//    }
