HDFS-5053. NameNode should invoke DataNode APIs to coordinate caching. (Andrew Wang)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1523145 13f79535-47bb-0310-9956-ffa450edef68

+  private final CacheReplicationManager cacheReplicationManager;
-      this.cacheManager= new CacheManager(dir, conf);
+      this.cacheManager = new CacheManager(this, dir, conf);
+      this.cacheReplicationManager = new CacheReplicationManager(this,
+          blockManager, blockManager.getDatanodeManager(), this, conf);
+      cacheReplicationManager.activate();
+      if (cacheReplicationManager != null) cacheReplicationManager.close();
-        
+
+        cacheReplicationManager.clearQueues();
+
+  boolean setCacheReplicationInt(String src, final short replication)
+      throws IOException {
+    final boolean isFile;
+    FSPermissionChecker pc = getPermissionChecker();
+    checkOperation(OperationCategory.WRITE);
+    byte[][] pathComponents = FSDirectory.getPathComponentsForReservedPath(src);
+    writeLock();
+    try {
+      checkOperation(OperationCategory.WRITE);
+      if (isInSafeMode()) {
+        throw new SafeModeException("Cannot set replication for " + src, safeMode);
+      }
+      src = FSDirectory.resolvePath(src, pathComponents, dir);
+      if (isPermissionEnabled) {
+        checkPathAccess(pc, src, FsAction.WRITE);
+      }
+
+      final short[] blockRepls = new short[2]; // 0: old, 1: new
+      final Block[] blocks = dir.setCacheReplication(src, replication,
+          blockRepls);
+      isFile = (blocks != null);
+      if (isFile) {
+        cacheReplicationManager.setCacheReplication(blockRepls[0],
+            blockRepls[1], src, blocks);
+      }
+    } finally {
+      writeUnlock();
+    }
+
+    getEditLog().logSync();
+    if (isFile) {
+      logAuditEvent(true, "setReplication", src);
+    }
+    return isFile;
+  }
+
+  /** @return the cache manager. */
+  public CacheManager getCacheManager() {
+    return cacheManager;
+  }
+  /** @return the cache replication manager. */
+  public CacheReplicationManager getCacheReplicationManager() {
+    return cacheReplicationManager;
+  }
-  public CacheManager getCacheManager() {
-    return cacheManager;
-  }
-
