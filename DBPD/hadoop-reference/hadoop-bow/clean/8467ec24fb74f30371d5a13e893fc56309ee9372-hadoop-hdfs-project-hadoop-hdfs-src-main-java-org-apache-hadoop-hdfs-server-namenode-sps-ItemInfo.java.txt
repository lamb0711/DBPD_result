HDFS-13110: [SPS]: Reduce the number of APIs in NamenodeProtocol used by external satisfier. Contributed by Rakesh R.

- * ItemInfo is a file info object for which need to satisfy the policy.
+ * ItemInfo is a file info object for which need to satisfy the policy. For
+ * internal satisfier service, it uses inode id which is Long datatype. For the
+ * external satisfier service, it uses the full string representation of the
+ * path.
-public class ItemInfo {
-  private long startId;
-  private long fileId;
+public class ItemInfo<T> {
+  private T startPath;
+  private T file;
-  public ItemInfo(long startId, long fileId) {
-    this.startId = startId;
-    this.fileId = fileId;
+  public ItemInfo(T startPath, T file) {
+    this.startPath = startPath;
+    this.file = file;
-  public ItemInfo(final long startId, final long fileId, final int retryCount) {
-    this.startId = startId;
-    this.fileId = fileId;
+  public ItemInfo(final T startPath, final T file, final int retryCount) {
+    this.startPath = startPath;
+    this.file = file;
-   * Return the start inode id of the current track Id. This indicates that SPS
-   * was invoked on this inode id.
+   * Returns the start path of the current file. This indicates that SPS
+   * was invoked on this path.
-  public long getStartId() {
-    return startId;
+  public T getStartPath() {
+    return startPath;
-   * Return the File inode Id for which needs to satisfy the policy.
+   * Returns the file for which needs to satisfy the policy.
-  public long getFileId() {
-    return fileId;
+  public T getFile() {
+    return file;
-    return (startId != fileId);
+    return !startPath.equals(file);
