MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.hadoop.yarn.server.resourcemanager.scheduler;
+package org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica;
+import org.apache.hadoop.classification.InterfaceStability.Unstable;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.ActiveUsersManager;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.AppSchedulingInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.Queue;
+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplication;
-public class SchedulerApp {
+@Private
+@Unstable
+public class FiCaSchedulerApp extends SchedulerApplication {
-  private static final Log LOG = LogFactory.getLog(SchedulerApp.class);
+  private static final Log LOG = LogFactory.getLog(FiCaSchedulerApp.class);
-  public SchedulerApp(ApplicationAttemptId applicationAttemptId, 
+  public FiCaSchedulerApp(ApplicationAttemptId applicationAttemptId, 
+  @Override
+  @Override
+  @Override
-  synchronized public RMContainer allocate(NodeType type, SchedulerNode node,
+  synchronized public RMContainer allocate(NodeType type, FiCaSchedulerNode node,
-  public synchronized RMContainer reserve(SchedulerNode node, Priority priority,
+  public synchronized RMContainer reserve(FiCaSchedulerNode node, Priority priority,
-  public synchronized void unreserve(SchedulerNode node, Priority priority) {
+  public synchronized void unreserve(FiCaSchedulerNode node, Priority priority) {
-  public synchronized boolean isReserved(SchedulerNode node, Priority priority) {
+  public synchronized boolean isReserved(FiCaSchedulerNode node, Priority priority) {
+  @Override
