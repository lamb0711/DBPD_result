HDDS-1684. OM should create Ratis related dirs only if ratis is enabled (#965)



+
+    // This is a temporary check. Once fully implemented, all OM state change
+    // should go through Ratis - be it standalone (for non-HA) or replicated
+    // (for HA).
+    isRatisEnabled = configuration.getBoolean(
+        OMConfigKeys.OZONE_OM_RATIS_ENABLE_KEY,
+        OMConfigKeys.OZONE_OM_RATIS_ENABLE_DEFAULT);
-    if (peerNodes != null && !peerNodes.isEmpty()) {
-      this.omSnapshotProvider = new OzoneManagerSnapshotProvider(configuration,
-          omRatisSnapshotDir, peerNodes);
+    if (isRatisEnabled) {
+      // Create Ratis storage dir
+      String omRatisDirectory = OmUtils.getOMRatisDirectory(configuration);
+      if (omRatisDirectory == null || omRatisDirectory.isEmpty()) {
+        throw new IllegalArgumentException(HddsConfigKeys.OZONE_METADATA_DIRS +
+            " must be defined.");
+      }
+      OmUtils.createOMDir(omRatisDirectory);
+
+      // Create Ratis snapshot dir
+      omRatisSnapshotDir = OmUtils.createOMDir(
+          OmUtils.getOMRatisSnapshotDirectory(configuration));
+
+      if (peerNodes != null && !peerNodes.isEmpty()) {
+        this.omSnapshotProvider = new OzoneManagerSnapshotProvider(
+            configuration, omRatisSnapshotDir, peerNodes);
+      }
-    // Create Ratis storage dir
-    String omRatisDirectory = OmUtils.getOMRatisDirectory(configuration);
-    if (omRatisDirectory == null || omRatisDirectory.isEmpty()) {
-      throw new IllegalArgumentException(HddsConfigKeys.OZONE_METADATA_DIRS +
-          " must be defined.");
-    }
-    OmUtils.createOMDir(omRatisDirectory);
-
-    // Create Ratis snapshot dir
-    omRatisSnapshotDir = OmUtils.createOMDir(
-        OmUtils.getOMRatisSnapshotDirectory(configuration));
-
-    // This is a temporary check. Once fully implemented, all OM state change
-    // should go through Ratis - be it standalone (for non-HA) or replicated
-    // (for HA).
-    isRatisEnabled = configuration.getBoolean(
-        OMConfigKeys.OZONE_OM_RATIS_ENABLE_KEY,
-        OMConfigKeys.OZONE_OM_RATIS_ENABLE_DEFAULT);
-    // This is a temporary check. Once fully implemented, all OM state change
-    // should go through Ratis - be it standalone (for non-HA) or replicated
-    // (for HA).
-    isRatisEnabled = configuration.getBoolean(
-      OMConfigKeys.OZONE_OM_RATIS_ENABLE_KEY,
-      OMConfigKeys.OZONE_OM_RATIS_ENABLE_DEFAULT);
