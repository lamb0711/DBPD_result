HDFS-14817. [Dynamometer] Fix start script options parsing which incorrectly interpret options starting with h as a help argument. Contributed by Soya Miyoshi.

-    CommandLineParser parser = new GnuParser();
-    if (parser.parse(
-        new Options().addOption("h", "help", false, "Shows this message."),
-        args, true).hasOption("h")) {
+    List<String> list = Arrays.asList(args);
+    if (list.contains("-h") || list.contains("--help")) {
-    CommandLine cliParser = parser.parse(opts, args);
+    CommandLineParser parser = new GnuParser();
+    CommandLine commandLine = parser.parse(opts, args);
-    Path fsImageDir = new Path(cliParser.getOptionValue(FS_IMAGE_DIR_ARG, ""));
+    Path fsImageDir = new Path(commandLine.getOptionValue(FS_IMAGE_DIR_ARG,
+        ""));
-    if (cliParser.hasOption(NAMENODE_SERVICERPC_ADDR_ARG)) {
+    if (commandLine.hasOption(NAMENODE_SERVICERPC_ADDR_ARG)) {
-          cliParser.getOptionValue(NAMENODE_SERVICERPC_ADDR_ARG);
+          commandLine.getOptionValue(NAMENODE_SERVICERPC_ADDR_ARG);
-    this.appName = cliParser.getOptionValue(APPNAME_ARG, APPNAME_DEFAULT);
-    this.amQueue = cliParser.getOptionValue(QUEUE_ARG, QUEUE_DEFAULT);
-    this.amMemory = Integer.parseInt(cliParser
+    this.appName = commandLine.getOptionValue(APPNAME_ARG, APPNAME_DEFAULT);
+    this.amQueue = commandLine.getOptionValue(QUEUE_ARG, QUEUE_DEFAULT);
+    this.amMemory = Integer.parseInt(commandLine
-        cliParser.getOptionValue(MASTER_VCORES_ARG, MASTER_VCORES_DEFAULT));
-    this.confPath = cliParser.getOptionValue(CONF_PATH_ARG);
-    this.blockListPath = cliParser.getOptionValue(BLOCK_LIST_PATH_ARG);
-    if (cliParser.hasOption(HADOOP_BINARY_PATH_ARG)) {
-      this.hadoopBinary = cliParser.getOptionValue(HADOOP_BINARY_PATH_ARG);
+        commandLine.getOptionValue(MASTER_VCORES_ARG, MASTER_VCORES_DEFAULT));
+    this.confPath = commandLine.getOptionValue(CONF_PATH_ARG);
+    this.blockListPath = commandLine.getOptionValue(BLOCK_LIST_PATH_ARG);
+    if (commandLine.hasOption(HADOOP_BINARY_PATH_ARG)) {
+      this.hadoopBinary = commandLine.getOptionValue(HADOOP_BINARY_PATH_ARG);
-          cliParser.getOptionValue(HADOOP_VERSION_ARG), getConf(), LOG)
+          commandLine.getOptionValue(HADOOP_VERSION_ARG), getConf(), LOG)
-    this.amOptions = AMOptions.initFromParser(cliParser);
+    this.amOptions = AMOptions.initFromParser(commandLine);
-        .parseInt(cliParser.getOptionValue(TIMEOUT_ARG, TIMEOUT_DEFAULT));
-    this.tokenFileLocation = cliParser.getOptionValue(TOKEN_FILE_LOCATION_ARG);
+        .parseInt(commandLine.getOptionValue(TIMEOUT_ARG, TIMEOUT_DEFAULT));
+    this.tokenFileLocation = commandLine.
+        getOptionValue(TOKEN_FILE_LOCATION_ARG);
-    if (cliParser.hasOption(WORKLOAD_REPLAY_ENABLE_ARG)) {
-      if (!cliParser.hasOption(WORKLOAD_INPUT_PATH_ARG)
-          || !cliParser.hasOption(WORKLOAD_START_DELAY_ARG)) {
+    if (commandLine.hasOption(WORKLOAD_REPLAY_ENABLE_ARG)) {
+      if (!commandLine.hasOption(WORKLOAD_INPUT_PATH_ARG)
+          || !commandLine.hasOption(WORKLOAD_START_DELAY_ARG)) {
-      workloadInputPath = cliParser.getOptionValue(WORKLOAD_INPUT_PATH_ARG);
+      workloadInputPath = commandLine.getOptionValue(WORKLOAD_INPUT_PATH_ARG);
-          .parseInt(cliParser.getOptionValue(WORKLOAD_THREADS_PER_MAPPER_ARG,
+          .parseInt(commandLine.getOptionValue(WORKLOAD_THREADS_PER_MAPPER_ARG,
-      workloadRateFactor = Double.parseDouble(cliParser.getOptionValue(
+      workloadRateFactor = Double.parseDouble(commandLine.getOptionValue(
-      if (cliParser.getOptionValues(WORKLOAD_CONFIG_ARG) != null) {
-        for (String opt : cliParser.getOptionValues(WORKLOAD_CONFIG_ARG)) {
+      if (commandLine.getOptionValues(WORKLOAD_CONFIG_ARG) != null) {
+        for (String opt : commandLine.getOptionValues(WORKLOAD_CONFIG_ARG)) {
-      String delayString = cliParser.getOptionValue(WORKLOAD_START_DELAY_ARG,
+      String delayString = commandLine.getOptionValue(WORKLOAD_START_DELAY_ARG,
