HDFS-12387. Ozone: Support Ratis as a first class replication mechanism. Contributed by Anu Engineer.

-  private String containerName;
-  private String leaderID;
-  private Map<String, DatanodeID> datanodes;
-  /**
-   * Allows you to maintain private data on pipelines.
-   * This is not serialized via protobuf, just allows us to maintain some
-   * private data.
-   */
-  private byte[] data;
-
-  @JsonFilter(PIPELINE_INFO)
-  class MixIn {
-  }
-
+  private String containerName;
+  private String leaderID;
+  private Map<String, DatanodeID> datanodes;
+  private OzoneProtos.LifeCycleState lifeCycleState;
+  private OzoneProtos.ReplicationType type;
+  private OzoneProtos.ReplicationFactor factor;
+  private String pipelineName;
+  /**
+   * Allows you to maintain private data on pipelines. This is not serialized
+   * via protobuf, just allows us to maintain some private data.
+   */
+  private byte[] data;
+    newPipeline.setLifeCycleState(pipeline.getState());
+    newPipeline.setType(pipeline.getType());
+    newPipeline.setFactor(pipeline.getFactor());
+    if (pipeline.hasPipelineName()) {
+      newPipeline.setPipelineName(pipeline.getPipelineName());
+    }
+  public OzoneProtos.ReplicationFactor getFactor() {
+    return factor;
+  }
+
+  public void setFactor(OzoneProtos.ReplicationFactor factor) {
+    this.factor = factor;
+  }
+
+    if (this.getLifeCycleState() != null) {
+      builder.setState(this.getLifeCycleState());
+    }
+    if (this.getType() != null) {
+      builder.setType(this.getType());
+    }
+
+    if (this.getFactor() != null) {
+      builder.setFactor(this.getFactor());
+    }
-   * Set private data on pipeline.
-   * @param data -- private data.
-   */
-  public void setData(byte[] data) {
-    if (data != null) {
-      this.data = Arrays.copyOf(data, data.length);
-    }
-  }
-
-  /**
+  /**
+   * Set private data on pipeline.
+   *
+   * @param data -- private data.
+   */
+  public void setData(byte[] data) {
+    if (data != null) {
+      this.data = Arrays.copyOf(data, data.length);
+    }
+  }
+
+  /**
+   * Gets the State of the pipeline.
+   *
+   * @return - LifeCycleStates.
+   */
+  public OzoneProtos.LifeCycleState getLifeCycleState() {
+    return lifeCycleState;
+  }
+
+  /**
+   * Sets the lifecycleState.
+   *
+   * @param lifeCycleStates - Enum
+   */
+  public void setLifeCycleState(OzoneProtos.LifeCycleState lifeCycleStates) {
+    this.lifeCycleState = lifeCycleStates;
+  }
+
+  /**
+   * Gets the pipeline Name.
+   *
+   * @return - Name of the pipeline
+   */
+  public String getPipelineName() {
+    return pipelineName;
+  }
+
+  /**
+   * Sets the pipeline name.
+   *
+   * @param pipelineName - Sets the name.
+   */
+  public void setPipelineName(String pipelineName) {
+    this.pipelineName = pipelineName;
+  }
+
+  /**
+   * Returns the type.
+   *
+   * @return type - Standalone, Ratis, Chained.
+   */
+  public OzoneProtos.ReplicationType getType() {
+    return type;
+  }
+
+  /**
+   * Sets the type of this pipeline.
+   *
+   * @param type - Standalone, Ratis, Chained.
+   */
+  public void setType(OzoneProtos.ReplicationType type) {
+    this.type = type;
+  }
+
-        .forEach(id -> b.append(id.endsWith(leaderID)? "*" + id : id));
+        .forEach(id -> b.append(id.endsWith(leaderID) ? "*" + id : id));
+    b.append(" name:").append(getPipelineName());
+    if (getType() != null) {
+      b.append(" type:").append(getType().toString());
+    }
+    if (getLifeCycleState() != null) {
+      b.append(" State:").append(getLifeCycleState().toString());
+    }
+
+  @JsonFilter(PIPELINE_INFO)
+  class MixIn {
+  }
