HADOOP-12696. Add tests for S3FileSystem Contract. Contributed by Matt Paduano

+import org.apache.hadoop.fs.ParentNotDirectoryException;
-  
+
-    this.uri = URI.create(uri.getScheme() + "://" + uri.getAuthority());    
+    this.uri = URI.create(uri.getScheme() + "://" + uri.getAuthority());
-  }  
+  }
-    
+
-    
+
-    
+
-    
+
-    for (Path p : paths) {
-      result &= mkdir(p);
+    for (int i = 0; i < paths.size(); i++) {
+      Path p = paths.get(i);
+      try {
+        result &= mkdir(p);
+      } catch(FileAlreadyExistsException e) {
+        if (i + 1 < paths.size()) {
+          throw new ParentNotDirectoryException(e.getMessage());
+        }
+        throw e;
+      }
-  
+
-      throw new IOException(String.format(
+      throw new FileAlreadyExistsException(String.format(
+    String message = String.format("No such file: '%s'", path.toString());
-      throw new IOException("No such file.");
+      throw new FileNotFoundException(message + " does not exist");
-      throw new IOException("Path " + path + " is a directory.");
+      throw new FileNotFoundException(message + " is a directory");
-      if (overwrite) {
+      if (overwrite && !inode.isDirectory()) {
-        throw new FileAlreadyExistsException("File already exists: " + file);
+        String message = String.format("File already exists: '%s'", file);
+        if (inode.isDirectory()) {
+          message = message + " is a directory";
+        }
+        throw new FileAlreadyExistsException(message);
-      }      
+      }
-      return false; 
+      return false;
-     FileStatus[] contents = null; 
+     FileStatus[] contents = null;
-       throw new IOException("Directory " + path.toString() 
+       throw new IOException("Directory " + path.toString()
-  
+
-   * FileStatus for S3 file systems. 
+   * FileStatus for S3 file systems.
-  
+
