HDDS-1207. Refactor Container Report Processing logic and plugin new Replication Manager. (#662)



-import org.apache.hadoop.hdds.scm.container.replication.
-    ReplicationActivityStatus;
+import org.apache.hadoop.hdds.scm.container.ReplicationManager;
-  private final ReplicationActivityStatus replicationActivityStatus;
+  private final ReplicationManager replicationManager;
-   * @param replicationStatus
+   * @param replicationManager
-      ReplicationActivityStatus replicationStatus) {
+      ReplicationManager replicationManager) {
-    Objects.requireNonNull(replicationStatus, "ReplicationActivityStatus " +
+    Objects.requireNonNull(replicationManager, "ReplicationManager " +
-    scmClientProtocolServer = clientProtocolServer;
-    scmBlockManager = blockManager;
-    replicationActivityStatus = replicationStatus;
+    this.scmClientProtocolServer = clientProtocolServer;
+    this.scmBlockManager = blockManager;
+    this.replicationManager = replicationManager;
-    boolean chillModeEnabled = configuration.getBoolean(
+    final boolean chillModeEnabled = configuration.getBoolean(
-    isInChillMode.set(chillModeStatus.getChillModeStatus());
-
-    replicationActivityStatus.fireReplicationStart(isInChillMode.get(),
-        waitTime);
-    scmClientProtocolServer.setChillModeStatus(isInChillMode.get());
-    scmBlockManager.setChillModeStatus(isInChillMode.get());
-
+    try {
+      isInChillMode.set(chillModeStatus.getChillModeStatus());
+      scmClientProtocolServer.setChillModeStatus(isInChillMode.get());
+      scmBlockManager.setChillModeStatus(isInChillMode.get());
+      Thread.sleep(waitTime);
+    } catch (InterruptedException e) {
+      Thread.currentThread().interrupt();
+    } finally {
+      replicationManager.start();
+    }
