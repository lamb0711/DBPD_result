YARN-9313. Support asynchronized scheduling mode and multi-node lookup mechanism for scheduler activities. Contributed by Tao Yang.

-      String type = "app";
-      if (node == null || activitiesManager == null) {
+      NodeId nodeId = getRecordingNodeId(activitiesManager, node);
+      if (nodeId == null) {
-      if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {
-        recordActivity(activitiesManager, node, application.getQueueName(),
+      if (activitiesManager.shouldRecordThisNode(nodeId)) {
+        recordActivity(activitiesManager, nodeId, application.getQueueName(),
-            ActivityState.REJECTED, diagnostic, type);
+            ActivityState.REJECTED, diagnostic, "app");
-      if (node == null || activitiesManager == null) {
+      NodeId nodeId = getRecordingNodeId(activitiesManager, node);
+      if (nodeId == null) {
-      if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {
+      if (activitiesManager.shouldRecordThisNode(nodeId)) {
-        activitiesManager.addSchedulingActivityForNode(node,
+        activitiesManager.addSchedulingActivityForNode(nodeId,
-        activitiesManager.addSchedulingActivityForNode(node,
+        activitiesManager.addSchedulingActivityForNode(nodeId,
-      if (node == null || activitiesManager == null) {
+      NodeId nodeId = getRecordingNodeId(activitiesManager, node);
+      if (nodeId == null) {
-      if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {
+      if (activitiesManager.shouldRecordThisNode(nodeId)) {
-        activitiesManager.addSchedulingActivityForNode(node,
+        activitiesManager.addSchedulingActivityForNode(nodeId,
-        activitiesManager.addSchedulingActivityForNode(node,
+        activitiesManager.addSchedulingActivityForNode(nodeId,
-      if (node == null || activitiesManager == null) {
+      NodeId nodeId = getRecordingNodeId(activitiesManager, node);
+      if (nodeId == null) {
-          .startAppAllocationRecording(node.getNodeID(), currentTime,
+          .startAppAllocationRecording(nodeId, currentTime,
-      if (node == null || activitiesManager == null) {
+      NodeId nodeId = getRecordingNodeId(activitiesManager, node);
+      if (nodeId == null) {
-      if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {
-        recordActivity(activitiesManager, node, parentQueueName, queueName,
+      if (activitiesManager.shouldRecordThisNode(nodeId)) {
+        recordActivity(activitiesManager, nodeId, parentQueueName, queueName,
-      if (node == null || activitiesManager == null) {
+      NodeId nodeId = getRecordingNodeId(activitiesManager, node);
+      if (nodeId == null) {
-      if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {
-        activitiesManager.updateAllocationFinalState(node.getNodeID(),
+      if (activitiesManager.shouldRecordThisNode(nodeId)) {
+        activitiesManager.updateAllocationFinalState(nodeId,
-      SchedulerNode node, String parentName, String childName,
+      NodeId nodeId, String parentName, String childName,
-
-    activitiesManager.addSchedulingActivityForNode(node, parentName,
+    activitiesManager.addSchedulingActivityForNode(nodeId, parentName,
+  }
+  private static NodeId getRecordingNodeId(ActivitiesManager activitiesManager,
+      SchedulerNode node) {
+    return activitiesManager == null ? null :
+        activitiesManager.getRecordingNodeId(node);
