HDFS-12593. Ozone: update Ratis to the latest snapshot. Contributed by Tsz Wo Nicholas Sze.

+import org.apache.ratis.protocol.RaftGroup;
+import org.apache.ratis.protocol.RaftGroupId;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
+import java.util.*;
+    return id.getIpAddr() + "_" + id.getRatisPort();
+  }
+
+  static String toRaftPeerAddressString(DatanodeID id) {
-  static RaftPeer toRaftPeer(String id) {
-    return new RaftPeer(RaftPeerId.valueOf(id), id);
-  }
-
-    return toRaftPeer(toRaftPeerIdString(id));
+    return new RaftPeer(toRaftPeerId(id), toRaftPeerAddressString(id));
-    return pipeline.getMachines().stream()
-        .map(RatisHelper::toRaftPeer)
+    return toRaftPeers(pipeline.getMachines());
+  }
+
+  static <E extends DatanodeID> List<RaftPeer> toRaftPeers(List<E> datanodes) {
+    return datanodes.stream().map(RatisHelper::toRaftPeer)
-  static RaftPeer[] toRaftPeerArray(Pipeline pipeline) {
-    return toRaftPeers(pipeline).toArray(RaftPeer.EMPTY_PEERS);
+  /* TODO: use a dummy id for all groups for the moment.
+   *       It should be changed to a unique id for each group.
+   */
+  RaftGroupId DUMMY_GROUP_ID = RaftGroupId.randomId();
+
+  RaftGroup EMPTY_GROUP = new RaftGroup(DUMMY_GROUP_ID,
+      Collections.emptyList());
+
+  static RaftGroup emptyRaftGroup() {
+    return EMPTY_GROUP;
+  }
+
+  static RaftGroup newRaftGroup(Collection<RaftPeer> peers) {
+    return peers.isEmpty()? emptyRaftGroup()
+        : new RaftGroup(DUMMY_GROUP_ID, peers);
+  }
+
+  static RaftGroup newRaftGroup(Pipeline pipeline) {
+    return newRaftGroup(toRaftPeers(pipeline));
-        toRaftPeers(pipeline));
+        newRaftGroup(pipeline));
-        new ArrayList<>(Arrays.asList(leader)));
+        newRaftGroup(new ArrayList<>(Arrays.asList(leader))));
-      RpcType rpcType, RaftPeerId leader, List<RaftPeer> peers) {
-    LOG.trace("newRaftClient: {}, leader={}, peers={}", rpcType, leader, peers);
+      RpcType rpcType, RaftPeerId leader, RaftGroup group) {
+    LOG.trace("newRaftClient: {}, leader={}, group={}", rpcType, leader, group);
-    final ClientFactory factory = ClientFactory.cast(rpcType.newFactory(
-        properties, null));
+    final ClientFactory factory = ClientFactory.cast(rpcType.newFactory(null));
-        .setServers(peers)
+        .setRaftGroup(group)
