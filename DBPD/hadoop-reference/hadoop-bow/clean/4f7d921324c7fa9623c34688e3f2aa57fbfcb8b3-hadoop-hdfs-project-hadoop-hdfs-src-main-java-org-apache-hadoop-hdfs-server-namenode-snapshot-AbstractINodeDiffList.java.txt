HDFS-4446. Support file snapshots with diff lists.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1443825 13f79535-47bb-0310-9956-ffa450edef68

+  AbstractINodeDiffList(final List<D> diffs) {
+    if (diffs != null) {
+      this.diffs.addAll(diffs);
+    }
+  }
+
-  abstract D addSnapshotDiff(Snapshot snapshot, N inode, boolean isSnapshotCreation); 
+  abstract D addSnapshotDiff(Snapshot snapshot); 
-      if (snapshotIndex > 0) {
+      if (snapshotIndex == 0) {
+        if (removed.snapshotINode != null) {
+          removed.snapshotINode.clearReferences();
+        }
+      } else {
-          // TODO: add a new testcase for this
+        } else if (removed.snapshotINode != null) {
+          removed.snapshotINode.clearReferences();
-        previous.combinePosteriorAndCollectBlocks(removed, collectedBlocks);
+        previous.combinePosteriorAndCollectBlocks(getCurrentINode(), removed, collectedBlocks);
-  final D append(D diff) {
-    final AbstractINodeDiff<N, D> last = getLast();
+  final D addLast(D diff) {
+    final D last = getLast();
-  /** Insert the diff to the beginning of the list. */
-  final void insert(D diff) {
+  /** Add the diff to the beginning of the list. */
+  final void addFirst(D diff) {
+    final D first = diffs.isEmpty()? null: diffs.get(0);
+    diff.setPosterior(first);
-  
+
-  
+
+  N getSnapshotINode(Snapshot snapshot) {
+    final D diff = getDiff(snapshot);
+    return diff == null? null: diff.getSnapshotINode();
+  }
+
-        : addSnapshotDiff(latest, getCurrentINode(), false);
+        : addSnapshotDiff(latest);
+  }
+
+  /** Save the snapshot copy to the latest snapshot. */
+  void saveSelf2Snapshot(Snapshot latest, N snapshotCopy) {
+    if (latest != null) {
+      checkAndAddLatestSnapshotDiff(latest).checkAndInitINode(
+          getCurrentINode(), snapshotCopy);
+    }
-    return "diffs=" + diffs;
+    return getClass().getSimpleName() + ": " + diffs;
