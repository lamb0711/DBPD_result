HDDS-991. Fix failures in TestSecureOzoneCluster. Contributed by Ajay Kumar.

-import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos;
+import org.apache.hadoop.ozone.om.exceptions.OMException;
+import static org.apache.hadoop.ozone.om.exceptions.OMException.*;
+import static org.apache.hadoop.ozone.om.exceptions.OMException.ResultCodes.TOKEN_ERROR_OTHER;
+import static org.apache.hadoop.ozone.om.exceptions.OMException.ResultCodes.UNKNOWN;
+import static org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.Status.OK;
+import static org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.Status.ACCESS_DENIED;
+
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() == Status.ACCESS_DENIED) {
+    if (resp.getStatus() == ACCESS_DENIED) {
-    } else if (resp.getStatus() == Status.OK) {
+    } else if (resp.getStatus() == OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() == Status.OK) {
+    if (resp.getStatus() == OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() == Status.OK) {
+    if (resp.getStatus() == OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (resp.getStatus() == Status.OK) {
+    if (resp.getStatus() == OK) {
-    if(resp.getStatus() != Status.OK) {
+    if(resp.getStatus() != OK) {
-    if(resp.getStatus() != Status.OK) {
+    if(resp.getStatus() != OK) {
-    if(resp.getStatus() != Status.OK) {
+    if(resp.getStatus() != OK) {
-    if (resp.getStatus() == Status.OK) {
+    if (resp.getStatus() == OK) {
-    if(resp.getStatus() != Status.OK) {
+    if(resp.getStatus() != OK) {
-    if (resp.getStatus() != Status.OK) {
+    if (resp.getStatus() != OK) {
-    if (response.getStatus() != Status.OK) {
+    if (response.getStatus() != OK) {
-    if (response.getStatus() != Status.OK) {
+    if (response.getStatus() != OK) {
-    if (response.getStatus() != Status.OK) {
+    if (response.getStatus() != OK) {
-    if (resp.getStatus() == Status.OK) {
+    if (resp.getStatus() == OK) {
-   * @throws IOException
+   * @throws OMException
-      throws IOException {
+      throws OMException {
-    final GetDelegationTokenResponseProto resp = submitRequest(omRequest)
-        .getGetDelegationTokenResponse();
-    if (resp.getStatus() == Status.OK) {
-       return resp.getResponse().hasToken() ?
-          OMPBHelper.convertToDelegationToken(resp.getResponse().getToken())
-           : null;
-    }  else {
-      throw new IOException("Get Delegation Token failed, error : " + resp
-          .getStatus());
+    final GetDelegationTokenResponseProto resp;
+    try {
+      resp = submitRequest(omRequest).getGetDelegationTokenResponse();
+
+      if (resp.getStatus() == OK) {
+        return resp.getResponse().hasToken() ?
+            OMPBHelper.convertToDelegationToken(resp.getResponse().getToken())
+            : null;
+      }
+      throw new OMException("Get delegation token failed with response:"
+          + resp.getStatus(), toResultStatus(resp.getStatus()));
+    } catch (IOException e) {
+      if(e instanceof OMException) {
+        throw (OMException)e;
+      }
+      throw new OMException("Get delegation token failed.", e,
+          TOKEN_ERROR_OTHER);
-   * @throws IOException
-      throws IOException {
+      throws OMException {
-    final RenewDelegationTokenResponseProto resp = submitRequest(omRequest)
-        .getRenewDelegationTokenResponse();
-    if (resp.getStatus() == Status.OK) {
-      return resp.getResponse().getNewExpiryTime();
-    }  else {
-      throw new IOException("Renew Delegation Token failed, error : " + resp
-          .getStatus());
+    final RenewDelegationTokenResponseProto resp;
+    try {
+      resp = submitRequest(omRequest)
+          .getRenewDelegationTokenResponse();
+      if (resp.getStatus() == OK) {
+        return resp.getResponse().getNewExpiryTime();
+      }
+      throw new OMException("Renew delegation token failed with response:"
+          + resp.getStatus(), toResultStatus(resp.getStatus()));
+    } catch (IOException e) {
+      if(e instanceof OMException) {
+        throw (OMException)e;
+      }
+      throw new OMException("Renew delegation token failed.", e,
+          TOKEN_ERROR_OTHER);
-   * @throws IOException
-      throws IOException {
+      throws OMException {
-    final CancelDelegationTokenResponseProto resp = submitRequest(omRequest)
-        .getCancelDelegationTokenResponse();
-    if (resp.getStatus() != Status.OK) {
-      throw new IOException("Cancel Delegation Token failed, error : " + resp
-          .getStatus());
+    final CancelDelegationTokenResponseProto resp;
+    try {
+      resp = submitRequest(omRequest).getCancelDelegationTokenResponse();
+      if (resp.getStatus() == OK) {
+        return;
+      }
+      throw new OMException("Cancel delegation token failed with response:"
+          + resp.getStatus(), toResultStatus(resp.getStatus()));
+    } catch (IOException e) {
+      if(e instanceof OMException) {
+        throw (OMException)e;
+      }
+      throw new OMException("Cancel delegation token failed.", e,
+          TOKEN_ERROR_OTHER);
+    }
+  }
+
+  /**
+   * Converts proto status to OMException result code.
+   *
+   * @param status Proto status received from rpc call.
+   */
+  public ResultCodes toResultStatus(Status status) {
+    switch (status) {
+    case INVALID_AUTH_METHOD:
+      return ResultCodes.INVALID_AUTH_METHOD;
+    case INVALID_TOKEN:
+      return ResultCodes.INVALID_TOKEN;
+    case TOKEN_EXPIRED:
+      return ResultCodes.TOKEN_EXPIRED;
+    case TOKEN_ERROR_OTHER:
+      return TOKEN_ERROR_OTHER;
+    default:
+      return UNKNOWN;
