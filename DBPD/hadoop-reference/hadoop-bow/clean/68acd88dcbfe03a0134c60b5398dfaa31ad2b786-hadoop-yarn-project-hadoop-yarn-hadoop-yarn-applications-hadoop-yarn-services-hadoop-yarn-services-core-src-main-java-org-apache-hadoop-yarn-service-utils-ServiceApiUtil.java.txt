YARN-7323. Data structure update in service REST API. Contributed by Jian He

-    // If the service has no components do top-level checks
+    // If the service has no components, throw error
-      // If artifact is of type SERVICE, read other service components
-      if (service.getArtifact() != null && service.getArtifact()
-          .getType() == Artifact.TypeEnum.SERVICE) {
-        if (StringUtils.isEmpty(service.getArtifact().getId())) {
-          throw new IllegalArgumentException(
-              RestApiErrorMessages.ERROR_ARTIFACT_ID_INVALID);
-        }
-        Service otherService = loadService(fs,
-            service.getArtifact().getId());
-        service.setComponents(otherService.getComponents());
-        service.setArtifact(null);
-        SliderUtils.mergeMapsIgnoreDuplicateKeys(service.getQuicklinks(),
-            otherService.getQuicklinks());
-      } else {
-        // Since it is a simple service with no components, create a default
-        // component
-        Component comp = createDefaultComponent(service);
-        validateComponent(comp, fs.getFileSystem(), conf);
-        service.getComponents().add(comp);
-        if (service.getLifetime() == null) {
-          service.setLifetime(RestApiConstants.DEFAULT_UNLIMITED_LIFETIME);
-        }
-        return;
-      }
+      throw new IllegalArgumentException(
+          "No component specified for " + service.getName());
-    // TODO allow name collisions? see AppState#roles
-    // TODO or add prefix to external component names?
-    Long globalNumberOfContainers = service.getNumberOfContainers();
-    String globalLaunchCommand = service.getLaunchCommand();
-      // fill in global container count
-      if (comp.getNumberOfContainers() == null) {
-        comp.setNumberOfContainers(globalNumberOfContainers);
-      }
-      // fill in global launch command
-      if (comp.getLaunchCommand() == null) {
-        comp.setLaunchCommand(globalLaunchCommand);
-      }
-  public static boolean hasComponent(Service service) {
+  private static boolean hasComponent(Service service) {
-  public static Component createDefaultComponent(Service service) {
-    Component comp = new Component();
-    comp.setName(RestApiConstants.DEFAULT_COMPONENT_NAME);
-    comp.setArtifact(service.getArtifact());
-    comp.setResource(service.getResource());
-    comp.setNumberOfContainers(service.getNumberOfContainers());
-    comp.setLaunchCommand(service.getLaunchCommand());
-    comp.setConfiguration(service.getConfiguration());
-    return comp;
-  }
-
