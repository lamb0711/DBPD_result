HADOOP-15481. Emit FairCallQueue stats as metrics. Contributed by Christopher Gregorian.

+import org.apache.hadoop.metrics2.MetricsCollector;
+import org.apache.hadoop.metrics2.MetricsRecordBuilder;
+import org.apache.hadoop.metrics2.MetricsSource;
+import org.apache.hadoop.metrics2.lib.DefaultMetricsSystem;
+import org.apache.hadoop.metrics2.lib.Interns;
-  implements BlockingQueue<E> {
+    implements BlockingQueue<E> {
-  private static final class MetricsProxy implements FairCallQueueMXBean {
+  private static final class MetricsProxy implements FairCallQueueMXBean,
+      MetricsSource {
+    private String namespace;
+
+      this.namespace = namespace;
+      final String name = namespace + ".FairCallQueue";
+      DefaultMetricsSystem.instance().register(name, name, this);
+
+    @Override
+    public void getMetrics(MetricsCollector collector, boolean all) {
+      MetricsRecordBuilder rb = collector.addRecord("FairCallQueue")
+          .setContext("rpc")
+          .tag(Interns.info("namespace", "Namespace"), namespace);
+
+      final int[] currentQueueSizes = getQueueSizes();
+      final long[] currentOverflowedCalls = getOverflowedCalls();
+
+      for (int i = 0; i < currentQueueSizes.length; i++) {
+        rb.addGauge(Interns.info("FairCallQueueSize_p" + i, "FCQ Queue Size"),
+            currentQueueSizes[i]);
+        rb.addCounter(Interns.info("FairCallQueueOverflowedCalls_p" + i,
+            "FCQ Overflowed Calls"), currentOverflowedCalls[i]);
+      }
+    }
