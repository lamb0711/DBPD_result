YARN-4571. Make app id/name available to the yarn authorizer provider for better auditing. (Jian He via wangda)

-import java.io.IOException;
-import java.nio.ByteBuffer;
-import java.util.LinkedList;
-import java.util.Map;
-
+import com.google.common.annotations.VisibleForTesting;
+import org.apache.hadoop.yarn.security.AccessRequest;
+import org.apache.hadoop.yarn.security.YarnAuthorizationProvider;
-import com.google.common.annotations.VisibleForTesting;
+import java.io.IOException;
+import java.nio.ByteBuffer;
+import java.util.LinkedList;
+import java.util.Map;
-  private boolean isAclEnabled = false;
+  private YarnAuthorizationProvider authorizer;
+
-    this.isAclEnabled = conf.getBoolean(YarnConfiguration.YARN_ACL_ENABLE,
-        YarnConfiguration.DEFAULT_YARN_ACL_ENABLE);
+    this.authorizer = YarnAuthorizationProvider.getInstance(conf);
-    if (!isRecovery && isAclEnabled && scheduler instanceof CapacityScheduler &&
-        !scheduler.checkAccess(userUgi, QueueACL.SUBMIT_APPLICATIONS,
-            submissionContext.getQueue()) &&
-        !scheduler.checkAccess(userUgi, QueueACL.ADMINISTER_QUEUE,
-            submissionContext.getQueue())) {
+    if (!isRecovery && YarnConfiguration.isAclEnabled(conf)
+        && scheduler instanceof CapacityScheduler &&
+        !authorizer.checkPermission(new AccessRequest(
+            ((CapacityScheduler) scheduler)
+                .getQueue(submissionContext.getQueue()).getPrivilegedEntity(),
+            userUgi, SchedulerUtils.toAccessType(QueueACL.SUBMIT_APPLICATIONS),
+            submissionContext.getApplicationId().toString(),
+            submissionContext.getApplicationName())) &&
+        !authorizer.checkPermission(new AccessRequest(
+            ((CapacityScheduler) scheduler)
+                .getQueue(submissionContext.getQueue()).getPrivilegedEntity(),
+            userUgi, SchedulerUtils.toAccessType(QueueACL.ADMINISTER_QUEUE),
+            submissionContext.getApplicationId().toString(),
+            submissionContext.getApplicationName()))) {
