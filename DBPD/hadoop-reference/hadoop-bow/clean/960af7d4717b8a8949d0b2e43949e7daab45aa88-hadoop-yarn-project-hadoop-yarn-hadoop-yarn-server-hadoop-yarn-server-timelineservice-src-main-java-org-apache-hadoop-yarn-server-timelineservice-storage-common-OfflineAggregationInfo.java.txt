YARN-4409. Fix javadoc and checkstyle issues in timelineservice code (Varun Saxena via sjlee)

-   * Default flow level aggregation table name
+   * Default flow level aggregation table name.
-   * Default user level aggregation table name
+   * Default user level aggregation table name.
-  private static final String[] FLOW_AGGREGATION_PK_LIST =
-      { "user", "cluster", "flow_name" };
-  private static final String[] USER_AGGREGATION_PK_LIST = { "user", "cluster"};
+  private static final String[] FLOW_AGGREGATION_PK_LIST = {
+      "user", "cluster", "flow_name"
+  };
+  private static final String[] USER_AGGREGATION_PK_LIST = {
+      "user", "cluster"
+  };
-          FLOW_AGGREGATION_PK_LIST, new PrimaryKeyStringSetter() {
-        @Override
-        public int setValues(PreparedStatement ps,
-            TimelineCollectorContext context, String[] extraInfo, int startPos)
-            throws SQLException {
-          int idx = startPos;
-          ps.setString(idx++, context.getUserId());
-          ps.setString(idx++, context.getClusterId());
-          ps.setString(idx++, context.getFlowName());
-          return idx;
-        }
-      });
+          FLOW_AGGREGATION_PK_LIST,
+          new PrimaryKeyStringSetter() {
+          @Override
+          public int setValues(PreparedStatement ps,
+              TimelineCollectorContext context, String[] extraInfo,
+              int startPos) throws SQLException {
+            int idx = startPos;
+            ps.setString(idx++, context.getUserId());
+            ps.setString(idx++, context.getClusterId());
+            ps.setString(idx++, context.getFlowName());
+            return idx;
+          }
+        });
-          USER_AGGREGATION_PK_LIST, new PrimaryKeyStringSetter() {
-        @Override
-        public int setValues(PreparedStatement ps,
-            TimelineCollectorContext context, String[] extraInfo, int startPos)
-            throws SQLException {
-          int idx = startPos;
-          ps.setString(idx++, context.getUserId());
-          ps.setString(idx++, context.getClusterId());
-          return idx;
-        }
-      });
+          USER_AGGREGATION_PK_LIST,
+          new PrimaryKeyStringSetter() {
+          @Override
+          public int setValues(PreparedStatement ps,
+              TimelineCollectorContext context, String[] extraInfo,
+              int startPos) throws SQLException {
+            int idx = startPos;
+            ps.setString(idx++, context.getUserId());
+            ps.setString(idx++, context.getClusterId());
+            return idx;
+          }
+        });
