HDDS-324. Use pipeline name as Ratis groupID to allow datanode to report pipeline info. Contributed by Mukul Kumar Singh.

-import org.apache.hadoop.hdds.protocol.datanode.proto.ContainerProtos;
+import org.apache.hadoop.hdds.protocol.datanode.proto.ContainerProtos
+    .ContainerCommandRequestProto;
+import org.apache.hadoop.hdds.scm.container.common.helpers.PipelineID;
-import org.apache.ratis.protocol.*;
+import org.apache.ratis.protocol.RaftClientRequest;
+import org.apache.ratis.protocol.Message;
+import org.apache.ratis.protocol.RaftClientReply;
+import org.apache.ratis.protocol.ClientId;
+import org.apache.ratis.protocol.NotLeaderException;
+import org.apache.ratis.protocol.StateMachineException;
-import org.apache.ratis.shaded.proto.RaftProtos;
+import org.apache.ratis.shaded.proto.RaftProtos.ReplicationLevel;
+  private ClientId clientId = ClientId.randomId();
-      ContainerProtos.ContainerCommandRequestProto request) throws IOException {
-    ClientId clientId = ClientId.randomId();
+      ContainerCommandRequestProto request, HddsProtos.PipelineID pipelineID)
+      throws IOException {
+    // ReplicationLevel.ALL ensures the transactions corresponding to
+    // the request here are applied on all the raft servers.
-        new RaftClientRequest(clientId, server.getId(),
-            RatisHelper.emptyRaftGroup().getGroupId(), nextCallId(), 0,
-            Message.valueOf(request.toByteString()), RaftClientRequest
-            // ReplicationLevel.ALL ensures the transactions corresponding to
-            // the request here are applied on all the raft servers.
-            .writeRequestType(RaftProtos.ReplicationLevel.ALL));
+        createRaftClientRequest(request, pipelineID,
+            RaftClientRequest.writeRequestType(ReplicationLevel.ALL));
+
+  private RaftClientRequest createRaftClientRequest(
+      ContainerCommandRequestProto request, HddsProtos.PipelineID pipelineID,
+      RaftClientRequest.Type type) {
+    return new RaftClientRequest(clientId, server.getId(),
+        PipelineID.getFromProtobuf(pipelineID).getRaftGroupID(),
+        nextCallId(),0, Message.valueOf(request.toByteString()), type);
+  }
