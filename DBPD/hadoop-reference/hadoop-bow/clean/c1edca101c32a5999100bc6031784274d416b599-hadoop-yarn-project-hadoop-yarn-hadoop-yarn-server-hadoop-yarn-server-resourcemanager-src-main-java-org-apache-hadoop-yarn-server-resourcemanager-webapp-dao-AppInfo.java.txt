YARN-6280. Introduce deselect query param to skip ResourceRequest from getApp/getApps REST API. Contributed by Lantao Jin.

+import org.apache.hadoop.yarn.server.resourcemanager.webapp.DeSelectFields;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.DeSelectFields.DeSelectType;
-  @SuppressWarnings({ "rawtypes", "unchecked" })
+    this(rm, app, hasAccess, schemePrefix, new DeSelectFields());
+  }
+
+  @SuppressWarnings({ "rawtypes", "unchecked" })
+  public AppInfo(ResourceManager rm, RMApp app, Boolean hasAccess,
+      String schemePrefix, DeSelectFields deSelects) {
-          List<ResourceRequest> resourceRequestsRaw = rm.getRMContext()
-              .getScheduler()
-              .getPendingResourceRequestsForAttempt(attempt.getAppAttemptId());
+          /* When the deSelects parameter contains "resourceRequests",
+             it skips returning massive ResourceRequest objects and vice versa.
+             Default behavior is no skipping. (YARN-6280)
+          */
+          if (!deSelects.contains(DeSelectType.RESOURCE_REQUESTS)) {
+            List<ResourceRequest> resourceRequestsRaw = rm.getRMContext()
+                .getScheduler().getPendingResourceRequestsForAttempt(
+                    attempt.getAppAttemptId());
-          if (resourceRequestsRaw != null) {
-            for (ResourceRequest req : resourceRequestsRaw) {
-              resourceRequests.add(new ResourceRequestInfo(req));
+            if (resourceRequestsRaw != null) {
+              for (ResourceRequest req : resourceRequestsRaw) {
+                resourceRequests.add(new ResourceRequestInfo(req));
+              }
