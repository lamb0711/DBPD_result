HDDS-18. Ozone Shell should use RestClient and RpcClient. Contributed by Lokesh Jain.

-import org.apache.hadoop.ozone.web.client.OzoneRestClientException;
+import org.apache.hadoop.hdds.conf.OzoneConfiguration;
+import org.apache.hadoop.io.IOUtils;
+import org.apache.hadoop.ozone.client.OzoneBucket;
+import org.apache.hadoop.ozone.client.OzoneVolume;
+import org.apache.hadoop.ozone.client.io.OzoneInputStream;
+import org.apache.hadoop.ozone.client.OzoneClientException;
+import java.io.FileOutputStream;
+import static org.apache.hadoop.hdds.scm.ScmConfigKeys
+    .OZONE_SCM_CHUNK_SIZE_DEFAULT;
+import static org.apache.hadoop.hdds.scm.ScmConfigKeys
+    .OZONE_SCM_CHUNK_SIZE_KEY;
+
-  private String userName;
-      throw new OzoneRestClientException("Incorrect call : getKey is missing");
+      throw new OzoneClientException("Incorrect call : getKey is missing");
-      throw new OzoneRestClientException(
+      throw new OzoneClientException(
-    if (cmd.hasOption(Shell.USER)) {
-      userName = cmd.getOptionValue(Shell.USER);
-    } else {
-      userName = System.getProperty("user.name");
-    }
-
-
-      throw new OzoneRestClientException(
+      throw new OzoneClientException(
-      throw new OzoneRestClientException(fileName +
+      throw new OzoneClientException(fileName +
-    client.setEndPointURI(ozoneURI);
-    client.setUserAuth(userName);
-
-    client.getKey(volumeName, bucketName, keyName, dataFilePath);
+    OzoneVolume vol = client.getObjectStore().getVolume(volumeName);
+    OzoneBucket bucket = vol.getBucket(bucketName);
+    OzoneInputStream keyInputStream = bucket.readKey(keyName);
+    if (dataFilePath != null) {
+      FileOutputStream outputStream = new FileOutputStream(dataFile);
+      IOUtils.copyBytes(keyInputStream, outputStream, new OzoneConfiguration()
+          .getInt(OZONE_SCM_CHUNK_SIZE_KEY, OZONE_SCM_CHUNK_SIZE_DEFAULT));
+      outputStream.close();
+    } else {
+      throw new OzoneClientException(
+          "Can not access the file \"" + fileName + "\"");
+    }
+      stream.close();
