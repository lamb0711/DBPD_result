HADOOP-15339. Support additional key/value propereties in JMX bean registration. Contributed by Elek Marton.

+import java.util.HashMap;
+import java.util.Map;
+import java.util.stream.Collectors;
+import com.google.common.annotations.VisibleForTesting;
+
+import com.google.common.base.Preconditions;
- *  for {link {@link #register(String, String, Object)}
+ *  for {link {@link #register(String, String, Object)}.
-public class MBeans {
+public final class MBeans {
+  private MBeans() {
+  }
+
-   * Where the <serviceName> and <nameName> are the supplied parameters
+   * Where the <serviceName> and <nameName> are the supplied parameters.
+    return register(serviceName, nameName, new HashMap<String, String>(),
+        theMbean);
+  }
+
+  /**
+   * Register the MBean using our standard MBeanName format
+   * "hadoop:service=<serviceName>,name=<nameName>"
+   * Where the <serviceName> and <nameName> are the supplied parameters.
+   *
+   * @param serviceName
+   * @param nameName
+   * @param properties - Key value pairs to define additional JMX ObjectName
+   *                     properties.
+   * @param theMbean    - the MBean to register
+   * @return the named used to register the MBean
+   */
+  static public ObjectName register(String serviceName, String nameName,
+                                    Map<String, String> properties,
+                                    Object theMbean) {
-    ObjectName name = getMBeanName(serviceName, nameName);
+    Preconditions.checkNotNull(properties,
+        "JMX bean properties should not be null for "
+            + "bean registration.");
+    ObjectName name = getMBeanName(serviceName, nameName, properties);
-  static private ObjectName getMBeanName(String serviceName, String nameName) {
+  @VisibleForTesting
+  static ObjectName getMBeanName(String serviceName, String nameName,
+      Map<String, String> additionalParameters) {
+
+    String additionalKeys = additionalParameters.entrySet()
+        .stream()
+        .map(entry -> entry.getKey() + "=" + entry.getValue())
+        .collect(Collectors.joining(","));
+
-        NAME_PREFIX + nameName;
+        NAME_PREFIX + nameName +
+        (additionalKeys.isEmpty() ? "" : "," + additionalKeys);
