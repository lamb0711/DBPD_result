HDFS-11137. Ozone: SCM: Add negative tests cases for datanodeStatemachine. Contributed by Weiwei Yang.

-import com.google.common.base.Optional;
+import com.google.common.base.Strings;
-import org.apache.hadoop.net.NetUtils;
-import org.apache.hadoop.ozone.OzoneConfigKeys;
+import java.util.Collection;
-    String[] addresses = conf.getStrings(OzoneConfigKeys.OZONE_SCM_NAMES);
-    final Optional<Integer> defaultPort =  Optional.of(OzoneConfigKeys
-        .OZONE_SCM_DEFAULT_PORT);
-
-    if (addresses == null || addresses.length <= 0) {
-      LOG.error("SCM addresses need to be a set of valid DNS names " +
-          "or IP addresses. Null or empty address list found. Aborting " +
-          "containers.");
+    Collection<InetSocketAddress> addresses = null;
+    try {
+      addresses = OzoneClientUtils.getSCMAddresses(conf);
+    } catch (IllegalArgumentException e) {
+      if(!Strings.isNullOrEmpty(e.getMessage())) {
+        LOG.error("Failed to get SCM addresses: " + e.getMessage());
+      }
-    for (String address : addresses) {
-      Optional<String> hostname = OzoneClientUtils.getHostName(address);
-      if (!hostname.isPresent()) {
-        LOG.error("Invalid hostname for SCM.");
-        return DatanodeStateMachine.DatanodeStates.SHUTDOWN;
+
+    if (addresses == null || addresses.isEmpty()) {
+      LOG.error("Null or empty SCM address list found.");
+      return DatanodeStateMachine.DatanodeStates.SHUTDOWN;
+    } else {
+      for (InetSocketAddress addr : addresses) {
+        connectionManager.addSCMServer(addr);
-      Optional<Integer> port = OzoneClientUtils.getHostPort(address);
-      InetSocketAddress addr = NetUtils.createSocketAddr(hostname.get(),
-          port.or(defaultPort.get()));
-      connectionManager.addSCMServer(addr);
