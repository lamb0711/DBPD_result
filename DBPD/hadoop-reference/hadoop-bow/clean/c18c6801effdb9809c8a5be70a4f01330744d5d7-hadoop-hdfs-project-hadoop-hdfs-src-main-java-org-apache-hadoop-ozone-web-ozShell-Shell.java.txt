HDFS-10202. ozone : Add key commands to CLI. Contributed by Anu Engineer.

+import org.apache.commons.cli.ParseException;
+import org.apache.hadoop.ozone.web.ozShell.bucket.UpdateBucketHandler;
+import org.apache.hadoop.ozone.web.ozShell.keys.DeleteKeyHandler;
+import org.apache.hadoop.ozone.web.ozShell.keys.GetKeyHandler;
+import org.apache.hadoop.ozone.web.ozShell.keys.InfoKeyHandler;
+import org.apache.hadoop.ozone.web.ozShell.keys.ListKeyHandler;
+import org.apache.hadoop.ozone.web.ozShell.keys.PutKeyHandler;
+  // TODO : Support versioning and StorageType for buckets
+
+  //Object related command line arguments
+  public static final String PUT_KEY = "putKey";
+  public static final String GET_KEY = "getKey";
+  public static final String INFO_KEY = "infoKey";
+  public static final String DELETE_KEY = "deleteKey";
+  public static final String LIST_KEY = "listKey";
+  public static final String FILE = "file";
+    addKeyCommands(opts);
-    BasicParser parser = new BasicParser();
-    return parser.parse(opts, argv);
+    try {
+      BasicParser parser = new BasicParser();
+      return parser.parse(opts, argv);
+    } catch (ParseException ex) {
+      System.out.printf(ex.getMessage());
+    }
+
+    return null;
-        "creates a bucket in a given volume.\n" +
-            "\t For example : hdfs oz " +
-            "-createBucket " +
-            "<volumeName/bucketName>");
+        "creates a bucket in a given volume." +
+        "For example: hdfs oz -createBucket <bucketURI>");
-        new Option(LIST_BUCKET, true, "Lists the buckets in a volume.");
+        new Option(LIST_BUCKET, true, "lists the buckets in a volume.");
+    Option updateBucket =
+        new Option(UPDATE_BUCKET, true, "allows changing bucket attributes.\n" +
+            " For example: hdfs oz -updateBucket <bucketURI> " +
+            "-addAcl user:frodo:rw");
+    opts.addOption(updateBucket);
+
+    Option addAcl =
+        new Option(ADD_ACLS, true, "allows user to add acls to a bucket.");
+    opts.addOption(addAcl);
+
+    Option removeAcl =
+        new Option(REMOVE_ACLS, true, "allows user to remove acls from a " +
+            "bucket.");
+    opts.addOption(removeAcl);
+
+  }
+
+  /**
+   * All key commands.
+   *
+   * @param opts - options
+   */
+  private void addKeyCommands(Options opts) {
+    Option putKey =
+        new Option(PUT_KEY, true, "creates or overwrites an existing key");
+    opts.addOption(putKey);
+
+    Option deleteKey =
+        new Option(DELETE_KEY, true, "deletes an existing key");
+    opts.addOption(deleteKey);
+
+    Option infoKey =
+        new Option(INFO_KEY, true, "returns information about an existing key");
+    opts.addOption(infoKey);
+
+    Option listKey =
+        new Option(LIST_KEY, true, "list all keys in a given bucket");
+    opts.addOption(listKey);
+
+    Option getKey =
+        new Option(GET_KEY, true, "Gets a specific key from ozone server.");
+    opts.addOption(getKey);
+
+    Option fileArgument =
+        new Option(FILE, true, "Data file path");
+    opts.addOption(fileArgument);
+
+      if(cmd.hasOption(Shell.UPDATE_BUCKET)){
+        handler = new UpdateBucketHandler();
+      }
+
+      //Key Functions
+
+      if(cmd.hasOption(Shell.PUT_KEY)) {
+        handler = new PutKeyHandler();
+      }
+
+      if(cmd.hasOption(Shell.DELETE_KEY)) {
+        handler = new DeleteKeyHandler();
+      }
+
+      if(cmd.hasOption(Shell.INFO_KEY)) {
+        handler = new InfoKeyHandler();
+      }
+
+      if(cmd.hasOption(Shell.LIST_KEY)) {
+        handler = new ListKeyHandler();
+      }
+
+      if(cmd.hasOption(Shell.GET_KEY)) {
+        handler = new GetKeyHandler();
+      }
