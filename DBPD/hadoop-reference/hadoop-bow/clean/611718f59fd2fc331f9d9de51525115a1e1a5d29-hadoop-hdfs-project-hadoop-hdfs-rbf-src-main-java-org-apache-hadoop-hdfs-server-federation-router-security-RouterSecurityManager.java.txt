HDFS-14670: RBF: Create secret manager instance using FederationUtil#newInstance.


-import org.apache.hadoop.hdfs.server.federation.router.RBFConfigKeys;
+import org.apache.hadoop.hdfs.server.federation.router.FederationUtil;
-import java.lang.reflect.Constructor;
-      this.dtSecretManager = newSecretManager(conf);
+      this.dtSecretManager = FederationUtil.newSecretManager(conf);
-  /**
-   * Creates an instance of a SecretManager from the configuration.
-   *
-   * @param conf Configuration that defines the secret manager class.
-   * @return New secret manager.
-   */
-  public static AbstractDelegationTokenSecretManager<DelegationTokenIdentifier>
-      newSecretManager(Configuration conf) {
-    Class<? extends AbstractDelegationTokenSecretManager> clazz =
-        conf.getClass(
-        RBFConfigKeys.DFS_ROUTER_DELEGATION_TOKEN_DRIVER_CLASS,
-        RBFConfigKeys.DFS_ROUTER_DELEGATION_TOKEN_DRIVER_CLASS_DEFAULT,
-        AbstractDelegationTokenSecretManager.class);
-    AbstractDelegationTokenSecretManager secretManager;
-    try {
-      Constructor constructor = clazz.getConstructor(Configuration.class);
-      secretManager = (AbstractDelegationTokenSecretManager)
-          constructor.newInstance(conf);
-      LOG.info("Delegation token secret manager object instantiated");
-    } catch (ReflectiveOperationException e) {
-      LOG.error("Could not instantiate: {}", clazz.getSimpleName(),
-          e.getCause());
-      return null;
-    } catch (RuntimeException e) {
-      LOG.error("RuntimeException to instantiate: {}",
-          clazz.getSimpleName(), e);
-      return null;
-    }
-    return secretManager;
-  }
-
