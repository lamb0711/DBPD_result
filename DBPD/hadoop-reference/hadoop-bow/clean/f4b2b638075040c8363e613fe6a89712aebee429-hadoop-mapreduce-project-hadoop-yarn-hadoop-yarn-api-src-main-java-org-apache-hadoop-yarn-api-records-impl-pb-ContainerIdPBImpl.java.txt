Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1170378 13f79535-47bb-0310-9956-ffa450edef68

-
-import java.text.NumberFormat;
-
-import org.apache.hadoop.yarn.api.records.ApplicationId;
-import org.apache.hadoop.yarn.api.records.ProtoBase;
-import org.apache.hadoop.yarn.proto.YarnProtos.ApplicationIdProto;
-public class ContainerIdPBImpl extends ProtoBase<ContainerIdProto> implements ContainerId {
+public class ContainerIdPBImpl extends ContainerId {
-  private ApplicationId applicationId = null;
-  private ApplicationAttemptId appAttemptId = null;
-  protected static final NumberFormat idFormat = NumberFormat.getInstance();
-  static {
-    idFormat.setGroupingUsed(false);
-    idFormat.setMinimumIntegerDigits(4);
-  }
-  
-  protected static final NumberFormat counterFormat = NumberFormat.getInstance();
-  static {
-    counterFormat.setGroupingUsed(false);
-    counterFormat.setMinimumIntegerDigits(6);
-  }
-  
-  // TODO: Why thread local?
-  // ^ NumberFormat instances are not threadsafe
-  private static final ThreadLocal<NumberFormat> appIdFormat = new ThreadLocal<NumberFormat>() {
-    @Override
-    public NumberFormat initialValue() {
-      NumberFormat fmt = NumberFormat.getInstance();
-      fmt.setGroupingUsed(false);
-      fmt.setMinimumIntegerDigits(4);
-      return fmt;
-    }
-  };
+  private ApplicationAttemptId applicationAttemptId = null;
-  // TODO: fail the app submission if attempts are more than 10 or something
-  private static final ThreadLocal<NumberFormat> appAttemptIdFormat = new ThreadLocal<NumberFormat>() {
-    @Override
-    public NumberFormat initialValue() {
-      NumberFormat fmt = NumberFormat.getInstance();
-      fmt.setGroupingUsed(false);
-      fmt.setMinimumIntegerDigits(2);
-      return fmt;
-    }
-  };
-  // TODO: Why thread local?
-  // ^ NumberFormat instances are not threadsafe
-  private static final ThreadLocal<NumberFormat> containerIdFormat = new ThreadLocal<NumberFormat>() {
-    @Override
-    public NumberFormat initialValue() {
-      NumberFormat fmt = NumberFormat.getInstance();
-      fmt.setGroupingUsed(false);
-      fmt.setMinimumIntegerDigits(6);
-      return fmt;
-    }
-  };
-    
-  public ContainerIdProto getProto() {
+  public synchronized ContainerIdProto getProto() {
-  private void mergeLocalToBuilder() {
-    if (this.applicationId != null && !((ApplicationIdPBImpl)applicationId).getProto().equals(builder.getAppId())) {
-      builder.setAppId(convertToProtoFormat(this.applicationId));
-    }
-    if (this.appAttemptId != null && !((ApplicationAttemptIdPBImpl)appAttemptId).getProto().equals(builder.getAppAttemptId())) {
-      builder.setAppAttemptId(convertToProtoFormat(this.appAttemptId));
+  private synchronized void mergeLocalToBuilder() {
+    if (this.applicationAttemptId != null && !
+        ((ApplicationAttemptIdPBImpl)applicationAttemptId).getProto().equals(
+            builder.getAppAttemptId())) {
+      builder.setAppAttemptId(convertToProtoFormat(this.applicationAttemptId));
-  private void mergeLocalToProto() {
+  private synchronized void mergeLocalToProto() {
-  private void maybeInitBuilder() {
+  private synchronized void maybeInitBuilder() {
-  public int getId() {
+  public synchronized int getId() {
-  public void setId(int id) {
+  public synchronized void setId(int id) {
-  @Override
-  public ApplicationId getAppId() {
-    ContainerIdProtoOrBuilder p = viaProto ? proto : builder;
-    if (this.applicationId != null) {
-      return this.applicationId;
-    }
-    if (!p.hasAppId()) {
-      return null;
-    }
-    this.applicationId = convertFromProtoFormat(p.getAppId());
-    return this.applicationId;
-  }
+
-  public ApplicationAttemptId getAppAttemptId() {
+  public synchronized ApplicationAttemptId getApplicationAttemptId() {
-    if (this.appAttemptId != null) {
-      return this.appAttemptId;
+    if (this.applicationAttemptId != null) {
+      return this.applicationAttemptId;
-    this.appAttemptId = convertFromProtoFormat(p.getAppAttemptId());
-    return this.appAttemptId;
+    this.applicationAttemptId = convertFromProtoFormat(p.getAppAttemptId());
+    return this.applicationAttemptId;
-  public void setAppId(ApplicationId appId) {
-    maybeInitBuilder();
-    if (appId == null) 
-      builder.clearAppId();
-    this.applicationId = appId;
-  }
-
-  @Override
-  public void setAppAttemptId(ApplicationAttemptId atId) {
+  public synchronized void setApplicationAttemptId(ApplicationAttemptId atId) {
-    this.appAttemptId = atId;
+    this.applicationAttemptId = atId;
-  private ApplicationAttemptIdPBImpl convertFromProtoFormat(ApplicationAttemptIdProto p) {
+  private ApplicationAttemptIdPBImpl convertFromProtoFormat(
+      ApplicationAttemptIdProto p) {
-  private ApplicationAttemptIdProto convertToProtoFormat(ApplicationAttemptId t) {
+  private ApplicationAttemptIdProto convertToProtoFormat(
+      ApplicationAttemptId t) {
-
-  private ApplicationIdPBImpl convertFromProtoFormat(ApplicationIdProto p) {
-    return new ApplicationIdPBImpl(p);
-  }
-
-  private ApplicationIdProto convertToProtoFormat(ApplicationId t) {
-    return ((ApplicationIdPBImpl)t).getProto();
-  }
-
-  @Override
-  public int hashCode() {
-    return getProto().hashCode();
-  }
-
-  @Override
-  public boolean equals(Object other) {
-    if (other == null) {
-      return false;
-    }
-    if (other.getClass().isAssignableFrom(this.getClass())) {
-      return this.getProto().equals(this.getClass().cast(other).getProto());
-    }
-    return false;
-  }
-
-  @Override
-  public int compareTo(ContainerId other) {
-    if (this.getAppAttemptId().compareTo(other.getAppAttemptId()) == 0) {
-      return this.getId() - other.getId();
-    } else {
-      return this.getAppAttemptId().compareTo(other.getAppAttemptId());
-    }
-    
-  }
-  
-  @Override
-  public String toString() {
-    StringBuilder sb = new StringBuilder();
-    ApplicationId appId = getAppId();
-    sb.append("container_").append(appId.getClusterTimestamp()).append("_");
-    sb.append(appIdFormat.get().format(appId.getId())).append("_");
-    sb.append(appAttemptIdFormat.get().format(getAppAttemptId().
-        getAttemptId())).append("_");
-    sb.append(containerIdFormat.get().format(getId()));
-    return sb.toString();
-  }
