HDDS-1708. Add container scrubber metrics.
Contributed by Hrishikesh Gadre.

+import org.apache.hadoop.conf.Configuration;
+  private final ContainerMetadataScrubberMetrics metrics;
-  public ContainerMetadataScanner(ContainerController controller,
+  public ContainerMetadataScanner(Configuration conf,
+                                  ContainerController controller,
+    this.metrics = ContainerMetadataScrubberMetrics.create(conf);
-      scrub();
-      long interval = TimeUnit.NANOSECONDS.toMillis(System.nanoTime()-start);
+      runIteration();
+      if(!stopping) {
+        metrics.resetNumUnhealthyContainers();
+        metrics.resetNumContainersScanned();
+      }
+    }
+  }
+
+  @VisibleForTesting
+  public void runIteration() {
+    long start = System.nanoTime();
+    Iterator<Container> containerIt = controller.getContainers();
+    while (!stopping && containerIt.hasNext()) {
+      Container container = containerIt.next();
+      try {
+        scrub(container);
+      } catch (IOException e) {
+        LOG.info("Unexpected error while scrubbing container {}",
+            container.getContainerData().getContainerID());
+      } finally {
+        metrics.incNumContainersScanned();
+      }
+    }
+    long interval = System.nanoTime()-start;
+    if (!stopping) {
+      metrics.incNumScanIterations();
+      LOG.info("Completed an iteration of container metadata scrubber in" +
+              " {} minutes." +
+              " Number of  iterations (since the data-node restart) : {}" +
+              ", Number of containers scanned in this iteration : {}" +
+              ", Number of unhealthy containers found in this iteration : {}",
+          TimeUnit.NANOSECONDS.toMinutes(interval),
+          metrics.getNumScanIterations(),
+          metrics.getNumContainersScanned(),
+          metrics.getNumUnHealthyContainers());
-      if (!stopping && interval < metadataScanInterval) {
+      if (interval < metadataScanInterval) {
-  private void scrub() {
-    Iterator<Container> containerIt = controller.getContainers();
-    long count = 0;
-
-    while (!stopping && containerIt.hasNext()) {
-      Container container = containerIt.next();
-      try {
-        scrub(container);
-      } catch (IOException e) {
-        LOG.info("Unexpected error while scrubbing container {}",
-            container.getContainerData().getContainerID());
-      }
-      count++;
-    }
-
-    LOG.debug("iterator ran integrity checks on {} containers", count);
-  }
-
+      metrics.incNumUnHealthyContainers();
+  @VisibleForTesting
+  public ContainerMetadataScrubberMetrics getMetrics() {
+    return metrics;
+  }
+
