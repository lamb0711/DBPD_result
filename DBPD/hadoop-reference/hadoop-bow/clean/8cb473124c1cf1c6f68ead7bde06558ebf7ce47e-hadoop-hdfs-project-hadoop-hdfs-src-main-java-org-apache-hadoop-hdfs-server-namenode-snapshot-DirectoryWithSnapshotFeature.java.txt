HDFS-6651. Deletion failure can leak inodes permanently. Contributed by Jing Zhao.

-    private final boolean replace(final ListType type,
+    private boolean replace(final ListType type,
-    private final boolean removeChild(ListType type, final INode child) {
+    private boolean removeChild(ListType type, final INode child) {
-        inode.cleanSubtree(snapshot, prior, collectedBlocks, removedINodes,
-            true);
+        inode.cleanSubtree(snapshot, prior, collectedBlocks, removedINodes);
-      inode.cleanSubtree(snapshot, prior, collectedBlocks, removedINodes, true);
+      inode.cleanSubtree(snapshot, prior, collectedBlocks, removedINodes);
-              removedINodes, true);
+              removedINodes);
-      final List<INode> removedINodes, final boolean countDiffChange)
-      throws QuotaExceededException {
+      final List<INode> removedINodes) {
-          wn.cleanSubtree(post, prior, collectedBlocks, removedINodes,
-              countDiffChange);
+          wn.cleanSubtree(post, prior, collectedBlocks, removedINodes);
-            collectedBlocks, removedINodes, countDiffChange));
+            collectedBlocks, removedINodes));
-      int latestSnapshotId) throws QuotaExceededException {
+      int latestSnapshotId) {
-      final INode child, final int latestSnapshotId, final INode snapshotCopy)
-      throws QuotaExceededException {
+      final INode child, final int latestSnapshotId, final INode snapshotCopy) {
-    counts.add(Quota.NAMESPACE, diffs.asList().size());
-      final List<INode> removedINodes, final boolean countDiffChange)
-      throws QuotaExceededException {
+      final List<INode> removedINodes) {
-          collectedBlocks, removedINodes, priorDeleted, countDiffChange));
+          collectedBlocks, removedINodes, priorDeleted));
-          currentINode, collectedBlocks, removedINodes, countDiffChange));
+          currentINode, collectedBlocks, removedINodes));
-          collectedBlocks, removedINodes, priorDeleted, countDiffChange));
+          collectedBlocks, removedINodes, priorDeleted));
-                    collectedBlocks, removedINodes, countDiffChange));
+                    collectedBlocks, removedINodes));
-                  collectedBlocks, removedINodes, countDiffChange));
+                  collectedBlocks, removedINodes));
