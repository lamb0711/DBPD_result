HDFS-4352. Encapsulate arguments to BlockReaderFactory in a class. Contributed by Colin Patrick McCabe.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1428729 13f79535-47bb-0310-9956-ffa450edef68

-  public static RemoteBlockReader newBlockReader(Socket sock, String file,
-      ExtendedBlock block, Token<BlockTokenIdentifier> blockToken, 
-      long startOffset, long len, int bufferSize) throws IOException {
-    return newBlockReader(sock, file, block, blockToken, startOffset,
-        len, bufferSize, true, "");
-  }
-
-  public static RemoteBlockReader newBlockReader( Socket sock, String file,
-                                     ExtendedBlock block, 
-                                     Token<BlockTokenIdentifier> blockToken,
-                                     long startOffset, long len,
-                                     int bufferSize, boolean verifyChecksum,
-                                     String clientName)
-                                     throws IOException {
+  public static RemoteBlockReader newBlockReader(BlockReaderFactory.Params params)
+        throws IOException {
+    Socket sock = params.getSocket();
-    new Sender(out).readBlock(block, blockToken, clientName, startOffset, len);
-    
+    new Sender(out).readBlock(params.getBlock(), params.getBlockToken(), 
+        params.getClientName(), params.getStartOffset(), params.getLen());
+
-
-                                bufferSize));
-    
+            params.getBufferSize()));
+
-    RemoteBlockReader2.checkSuccess(status, sock, block, file);
+    RemoteBlockReader2.checkSuccess(status, sock, params.getBlock(),
+        params.getFile());
-    if ( firstChunkOffset < 0 || firstChunkOffset > startOffset ||
-        firstChunkOffset <= (startOffset - checksum.getBytesPerChecksum())) {
+    if ( firstChunkOffset < 0 || firstChunkOffset > params.getStartOffset() ||
+        firstChunkOffset <= (params.getStartOffset() - checksum.getBytesPerChecksum())) {
-                            startOffset + " for file " + file);
+                            params.getStartOffset() + " for file " + params.getFile());
-    return new RemoteBlockReader(file, block.getBlockPoolId(), block.getBlockId(),
-        in, checksum, verifyChecksum, startOffset, firstChunkOffset, len, sock);
+    return new RemoteBlockReader(params.getFile(), params.getBlock().getBlockPoolId(), 
+        params.getBlock().getBlockId(), in, checksum, params.getVerifyChecksum(),
+        params.getStartOffset(), firstChunkOffset, params.getLen(), sock);
