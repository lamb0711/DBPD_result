commit correct version of HDFS-5121

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1520090 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.IOException;
+import org.apache.hadoop.hdfs.protocol.CachePoolInfo;
-   * Check if this CachePool can be accessed.
+   * Whether a cache pool can be accessed by the current context
-   * @param pc
-   *          Permission checker object with user name and groups.
-   * @param write
-   *          True if we care about write access; false otherwise.
-   * @return
-   *          True only if the cache pool is accessible.
+   * @param pool CachePool being accessed
+   * @param access type of action being performed on the cache pool
+   * @return if the pool can be accessed
-  private boolean checkPermission(String userName, 
-      String groupName, int mode, int mask) {
-    if ((mode & mask) != 0) {
+  public boolean checkPermission(CachePool pool, FsAction access) {
+    CachePoolInfo info = pool.getInfo();
+    FsPermission mode = info.getMode();
+    if (isSuperUser()) {
-    if (((mode & (mask << 6)) != 0) 
-        && (getUser().equals(userName))) {
+    if (user.equals(info.getOwnerName())
+        && mode.getUserAction().implies(access)) {
-    if (((mode & (mask << 6)) != 0) 
-        && (containsGroup(groupName))) {
+    if (groups.contains(info.getGroupName())
+        && mode.getGroupAction().implies(access)) {
+      return true;
+    }
+    if (mode.getOtherAction().implies(access)) {
-
-  public boolean checkWritePermission(String userName,
-      String groupName, int mode) {
-    return checkPermission(userName, groupName, mode, 02);
-  }
-
-  public boolean checkReadPermission(String userName,
-      String groupName, int mode) {
-    return checkPermission(userName, groupName, mode, 04);
-  }
