YARN-8925. Updating distributed node attributes only when necessary. Contributed by Tao Yang.

+import org.apache.hadoop.yarn.api.records.NodeAttribute;
+import org.apache.hadoop.yarn.api.records.impl.pb.NodeAttributePBImpl;
+import org.apache.hadoop.yarn.proto.YarnProtos.NodeAttributeProto;
+import org.apache.hadoop.yarn.proto.YarnServerCommonServiceProtos.NodeAttributesProto;
+  private Set<NodeAttribute> attributes = null;
+    if (this.attributes != null) {
+      builder.clearNodeAttributes();
+      NodeAttributesProto.Builder attributesBuilder =
+          NodeAttributesProto.newBuilder();
+      for (NodeAttribute attribute : attributes) {
+        attributesBuilder.addNodeAttributes(convertToProtoFormat(attribute));
+      }
+      builder.setNodeAttributes(attributesBuilder.build());
+    }
+  @Override
+  public synchronized Set<NodeAttribute> getNodeAttributes() {
+    initNodeAttributes();
+    return this.attributes;
+  }
+
+  @Override
+  public synchronized void setNodeAttributes(
+      Set<NodeAttribute> nodeAttributes) {
+    maybeInitBuilder();
+    builder.clearNodeAttributes();
+    this.attributes = nodeAttributes;
+  }
+
+  private synchronized void initNodeAttributes() {
+    if (this.attributes != null) {
+      return;
+    }
+    RegisterNodeManagerRequestProtoOrBuilder p = viaProto ? proto : builder;
+    if (!p.hasNodeAttributes()) {
+      attributes=null;
+      return;
+    }
+    NodeAttributesProto nodeAttributes = p.getNodeAttributes();
+    attributes = new HashSet<>();
+    for(NodeAttributeProto nap : nodeAttributes.getNodeAttributesList()) {
+      attributes.add(convertFromProtoFormat(nap));
+    }
+  }
+
+  private static NodeAttributePBImpl convertFromProtoFormat(
+      NodeAttributeProto p) {
+    return new NodeAttributePBImpl(p);
+  }
+
+  private static NodeAttributeProto convertToProtoFormat(NodeAttribute t) {
+    return ((NodeAttributePBImpl)t).getProto();
+  }
+
