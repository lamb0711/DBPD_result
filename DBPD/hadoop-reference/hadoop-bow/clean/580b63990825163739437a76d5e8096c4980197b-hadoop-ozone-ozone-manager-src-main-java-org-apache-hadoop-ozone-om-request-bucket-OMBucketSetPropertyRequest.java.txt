HDDS-1600. Add userName and IPAddress as part of OMRequest. (#857)



-import org.apache.hadoop.ozone.om.request.OMClientRequest;
+
+import org.apache.hadoop.ozone.security.acl.IAccessAuthorizer;
+import org.apache.hadoop.ozone.security.acl.OzoneObj;
+import org.apache.hadoop.ozone.om.request.OMClientRequest;
+
-
-import org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils;
+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos
+    .SetBucketPropertyResponse;
-  @Override
-  public OMRequest preExecute(OzoneManager ozoneManager) throws IOException {
-    return getOmRequest();
-  }
-    // acquire lock
-    omMetadataManager.getLock().acquireBucketLock(volumeName, bucketName);
+      // check Acl
+      if (ozoneManager.getAclsEnabled()) {
+        checkAcls(ozoneManager, OzoneObj.ResourceType.BUCKET,
+            OzoneObj.StoreType.OZONE, IAccessAuthorizer.ACLType.WRITE,
+            volumeName, bucketName, null);
+      }
+    } catch (IOException ex) {
+      if (omMetrics != null) {
+        omMetrics.incNumBucketUpdateFails();
+      }
+      LOG.error("Setting bucket property failed for bucket:{} in volume:{}",
+          bucketName, volumeName, ex);
+      return new OMBucketSetPropertyResponse(omBucketInfo,
+          createErrorOMResponse(omResponse, ex));
+    }
+
+    // acquire lock
+    omMetadataManager.getLock().acquireBucketLock(volumeName, bucketName);
+
+    try {
+
-      // TODO: check acls.
+      // return response.
+      omResponse.setSetBucketPropertyResponse(
+          SetBucketPropertyResponse.newBuilder().build());
+      return new OMBucketSetPropertyResponse(omBucketInfo, omResponse.build());
+
-      omResponse.setSuccess(false).setMessage(ex.getMessage())
-          .setStatus(OzoneManagerRatisUtils.exceptionToResponseStatus(ex));
+      return new OMBucketSetPropertyResponse(omBucketInfo,
+          createErrorOMResponse(omResponse, ex));
-    return new OMBucketSetPropertyResponse(omBucketInfo, omResponse.build());
