HDDS-795. RocksDb specific classes leak from DBStore/Table interfaces. Contributed by  MÃ¡rton Elek.

-import org.apache.hadoop.classification.InterfaceStability;
-import org.rocksdb.ColumnFamilyHandle;
-import org.rocksdb.WriteBatch;
-
+import org.apache.hadoop.classification.InterfaceStability;
+
+   * Puts a key-value pair into the store as part of a bath operation.
+   *
+   * @param batch the batch operation
+   * @param key metadata key
+   * @param value metadata value
+   */
+  void putWithBatch(BatchOperation batch, byte[] key, byte[] value)
+      throws IOException;
+
+  /**
-   * Return the Column Family handle. TODO: This leaks an RockDB abstraction
-   * into Ozone code, cleanup later.
+   * Deletes a key from the metadata store as part of a batch operation.
-   * @return ColumnFamilyHandle
+   * @param batch the batch operation
+   * @param key metadata key
+   * @throws IOException on Failure
-  ColumnFamilyHandle getHandle();
-
-  /**
-   * A batch of PUT, DELETE operations handled as a single atomic write.
-   *
-   * @throws IOException write fails
-   */
-  void writeBatch(WriteBatch operation) throws IOException;
+  void deleteWithBatch(BatchOperation batch, byte[] key) throws IOException;
