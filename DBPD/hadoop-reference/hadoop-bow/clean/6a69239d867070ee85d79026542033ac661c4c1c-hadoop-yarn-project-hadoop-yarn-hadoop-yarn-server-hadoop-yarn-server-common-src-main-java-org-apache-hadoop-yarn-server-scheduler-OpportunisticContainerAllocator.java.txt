YARN-8163. Add support for Node Labels in opportunistic scheduling. Contributed by Abhishek Modi.

+import org.apache.commons.lang.StringUtils;
+    LinkedList<RemoteNode> retList = new LinkedList<>();
+    String partition = getRequestPartition(enrichedRR);
-      return allNodes.values();
+      for (RemoteNode remoteNode : allNodes.values()) {
+        if (StringUtils.equals(partition, getRemoteNodePartition(remoteNode))) {
+          retList.add(remoteNode);
+        }
+      }
+      return retList;
-      LinkedList<RemoteNode> retList = new LinkedList<>();
+
+    String partition = getRequestPartition(enrichedRR);
-      if (enrichedRR.getRackLocations().contains(rNode.getRackName())) {
+      if (StringUtils.equals(partition, getRemoteNodePartition(rNode)) &&
+          enrichedRR.getRackLocations().contains(rNode.getRackName())) {
+    String partition = getRequestPartition(enrichedRR);
-      if (remoteNode != null) {
+      if (remoteNode != null &&
+          StringUtils.equals(partition, getRemoteNodePartition(remoteNode))) {
-            null, CommonNodeLabelsManager.NO_LABEL, ContainerType.TASK,
+            null, getRemoteNodePartition(node), ContainerType.TASK,
+
+  private String getRequestPartition(EnrichedResourceRequest enrichedRR) {
+    String partition = enrichedRR.getRequest().getNodeLabelExpression();
+    if (partition == null) {
+      partition = CommonNodeLabelsManager.NO_LABEL;
+    }
+    return partition;
+  }
+
+  private String getRemoteNodePartition(RemoteNode node) {
+    String partition = node.getNodePartition();
+    if (partition == null) {
+      partition = CommonNodeLabelsManager.NO_LABEL;
+    }
+    return partition;
+  }
