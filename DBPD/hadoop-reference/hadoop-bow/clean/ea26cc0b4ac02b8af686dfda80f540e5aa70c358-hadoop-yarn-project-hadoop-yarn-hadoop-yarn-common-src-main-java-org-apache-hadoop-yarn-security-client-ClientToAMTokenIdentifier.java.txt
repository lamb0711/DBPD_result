YARN-2615. Changed ClientToAMTokenIdentifier/RM(Timeline)DelegationTokenIdentifier to use protobuf as payload. Contributed by Junping Du

+import java.io.DataInputStream;
-import org.apache.hadoop.classification.InterfaceAudience;
-import org.apache.hadoop.security.token.Token;
-import org.apache.hadoop.yarn.api.records.ApplicationId;
+import org.apache.hadoop.yarn.api.records.impl.pb.ApplicationAttemptIdPBImpl;
+import org.apache.hadoop.yarn.proto.YarnSecurityTokenProtos.ClientToAMTokenIdentifierProto;
+
+import com.google.protobuf.TextFormat;
+
-  private ApplicationAttemptId applicationAttemptId;
-  private Text clientName = new Text();
+  private ClientToAMTokenIdentifierProto proto;
-    this();
-    this.applicationAttemptId = id;
-    this.clientName = new Text(client);
+    ClientToAMTokenIdentifierProto.Builder builder = 
+        ClientToAMTokenIdentifierProto.newBuilder();
+    if (id != null) {
+      builder.setAppAttemptId(((ApplicationAttemptIdPBImpl)id).getProto());
+    }
+    if (client != null) {
+      builder.setClientName(client);
+    }
+    proto = builder.build();
-    return this.applicationAttemptId;
+    if (!proto.hasAppAttemptId()) {
+      return null;
+    }
+    return new ApplicationAttemptIdPBImpl(proto.getAppAttemptId());
-    return this.clientName.toString();
+    return proto.getClientName();
+  public ClientToAMTokenIdentifierProto getProto() {
+    return proto;
+  }
+  
-    out.writeLong(this.applicationAttemptId.getApplicationId()
-      .getClusterTimestamp());
-    out.writeInt(this.applicationAttemptId.getApplicationId().getId());
-    out.writeInt(this.applicationAttemptId.getAttemptId());
-    this.clientName.write(out);
+    out.write(proto.toByteArray());
-    this.applicationAttemptId =
-        ApplicationAttemptId.newInstance(
-          ApplicationId.newInstance(in.readLong(), in.readInt()), in.readInt());
-    this.clientName.readFields(in);
+    proto = ClientToAMTokenIdentifierProto.parseFrom((DataInputStream)in);
-    if (this.clientName == null) {
+    String clientName = getClientName();
+    if (clientName == null) {
-    return UserGroupInformation.createRemoteUser(this.clientName.toString());
+    return UserGroupInformation.createRemoteUser(clientName);
+  }
+  
+  @Override
+  public int hashCode() {
+    return getProto().hashCode();
-  @InterfaceAudience.Private
-  public static class Renewer extends Token.TrivialRenewer {
-    @Override
-    protected Text getKind() {
-      return KIND_NAME;
+  @Override
+  public boolean equals(Object other) {
+    if (other == null)
+      return false;
+    if (other.getClass().isAssignableFrom(this.getClass())) {
+      return this.getProto().equals(this.getClass().cast(other).getProto());
+    return false;
+  }
+
+  @Override
+  public String toString() {
+    return TextFormat.shortDebugString(getProto());
