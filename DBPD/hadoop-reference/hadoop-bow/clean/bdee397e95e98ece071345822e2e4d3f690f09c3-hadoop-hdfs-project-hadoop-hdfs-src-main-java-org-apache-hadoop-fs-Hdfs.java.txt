HADOOP-6392. Wire crypto streams for encrypted files in DFSClient. (clamb and yliu)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1600582 13f79535-47bb-0310-9956-ffa450edef68

-
+import org.apache.hadoop.crypto.CryptoCodec;
+import org.apache.hadoop.crypto.CryptoOutputStream;
+import org.apache.hadoop.crypto.CryptoInputStream;
+import org.apache.hadoop.hdfs.DFSInputStream;
+import org.apache.hadoop.hdfs.DFSOutputStream;
+import com.google.common.base.Preconditions;
+
+  final CryptoCodec factory;
+    this.factory = CryptoCodec.getInstance(conf);
-    return new HdfsDataOutputStream(dfs.primitiveCreate(getUriPath(f),
-        absolutePermission, createFlag, createParent, replication, blockSize,
-        progress, bufferSize, checksumOpt), getStatistics());
+
+    final DFSOutputStream dfsos = dfs.primitiveCreate(getUriPath(f),
+      absolutePermission, createFlag, createParent, replication, blockSize,
+      progress, bufferSize, checksumOpt);
+    final byte[] key = dfsos.getKey();
+    final byte[] iv = dfsos.getIv();
+    Preconditions.checkState(!(key == null ^ iv == null),
+      "Only one of the Key and IV were found.");
+    if (false && key != null) {
+
+      /*
+       * The Key and IV were found. Wrap up the output stream with an encryption
+       * wrapper.
+       */
+      final CryptoOutputStream cbos =
+        new CryptoOutputStream(dfsos, factory, key, iv);
+      return new HdfsDataOutputStream(cbos, getStatistics());
+    } else {
+      /* No key/IV present so no encryption. */
+      return new HdfsDataOutputStream(dfsos, getStatistics());
+    }
-    return new DFSClient.DFSDataInputStream(dfs.open(getUriPath(f),
-        bufferSize, verifyChecksum));
+    final DFSInputStream dfsis = dfs.open(getUriPath(f),
+      bufferSize, verifyChecksum);
+    final byte[] key = dfsis.getKey();
+    final byte[] iv = dfsis.getIv();
+    Preconditions.checkState(!(key == null ^ iv == null),
+      "Only one of the Key and IV were found.");
+    if (false && key != null) {
+
+      /*
+       * The Key and IV were found. Wrap up the input stream with an encryption
+       * wrapper.
+       */
+      final CryptoInputStream cbis =
+        new CryptoInputStream(dfsis, factory, key, iv);
+      return new HdfsDataInputStream(cbis);
+    } else {
+      /* No key/IV pair so no encryption. */
+      return new HdfsDataInputStream(dfsis);
+    }
