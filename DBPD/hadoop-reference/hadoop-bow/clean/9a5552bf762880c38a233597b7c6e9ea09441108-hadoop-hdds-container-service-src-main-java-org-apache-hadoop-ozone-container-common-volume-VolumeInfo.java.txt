HDDS-156. Implement HDDSVolume to manage volume state

-package org.apache.hadoop.ozone.container.common.impl;
+package org.apache.hadoop.ozone.container.common.volume;
+import com.google.common.annotations.VisibleForTesting;
-import org.apache.hadoop.fs.Path;
+import org.apache.hadoop.fs.GetSpaceUsed;
-  private final Path rootDir;
+  private final String rootDir;
-  private VolumeState state;
+  /**
+   * Builder for VolumeInfo.
+   */
-    private final Path rootDir;
+    private final String rootDir;
-    private VolumeState state;
-    public Builder(Path rootDir, Configuration conf) {
-      this.rootDir = rootDir;
-      this.conf = conf;
+    public Builder(String root, Configuration config) {
+      this.rootDir = root;
+      this.conf = config;
-    public Builder(String rootDirStr, Configuration conf) {
-      this.rootDir = new Path(rootDirStr);
-      this.conf = conf;
-    }
-
-    public Builder storageType(StorageType storageType) {
-      this.storageType = storageType;
+    public Builder storageType(StorageType st) {
+      this.storageType = st;
-    public Builder volumeState(VolumeState state) {
-      this.state = state;
-      return this;
-    }
-
-    public Builder configuredCapacity(long configuredCapacity) {
-      this.configuredCapacity = configuredCapacity;
+    public Builder configuredCapacity(long capacity) {
+      this.configuredCapacity = capacity;
-    File root = new File(rootDir.toString());
+    File root = new File(this.rootDir);
-    this.state = (b.state != null ? b.state : VolumeState.NOT_FORMATTED);
-
-
-    LOG.info("Creating Volume : " + rootDir + " of storage type : " +
-        storageType + " and capacity : " + configuredCapacity);
-  void shutdown() {
-    this.state = VolumeState.NON_EXISTENT;
-    shutdownUsageThread();
-  }
-
-  void failVolume() {
-    setState(VolumeState.FAILED);
-    shutdownUsageThread();
-  }
-
-  private void shutdownUsageThread() {
+  protected void shutdownUsageThread() {
-  void setState(VolumeState state) {
-    this.state = state;
-  }
-
-  public boolean isFailed() {
-    return (state == VolumeState.FAILED);
-  }
-
-  public Path getRootDir() {
+  public String getRootDir() {
-  public enum VolumeState {
-    NORMAL,
-    FAILED,
-    NON_EXISTENT,
-    NOT_FORMATTED,
+  /**
+   * Only for testing. Do not use otherwise.
+   */
+  @VisibleForTesting
+  public void setScmUsageForTesting(GetSpaceUsed scmUsageForTest) {
+    usage.setScmUsageForTesting(scmUsageForTest);
