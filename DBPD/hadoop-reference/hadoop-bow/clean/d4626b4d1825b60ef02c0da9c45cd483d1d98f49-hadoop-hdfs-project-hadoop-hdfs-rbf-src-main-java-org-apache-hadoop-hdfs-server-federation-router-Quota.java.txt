HDFS-13967. HDFS Router Quota Class Review. Contributed by BELUGA BEHR.

-import java.util.HashMap;
-import java.util.LinkedList;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import org.apache.commons.lang3.StringUtils;
+import com.google.common.collect.ArrayListMultimap;
+import com.google.common.collect.ListMultimap;
+
-    Map<String, List<RemoteLocation>> validLocations = new HashMap<>();
-    for (RemoteLocation loc : locations) {
-      String nsId = loc.getNameserviceId();
-      List<RemoteLocation> dests = validLocations.get(nsId);
-      if (dests == null) {
-        dests = new LinkedList<>();
-        dests.add(loc);
-        validLocations.put(nsId, dests);
-      } else {
-        // Ensure the paths in the same nameservice is different.
-        // Don't include parent-child paths.
-        boolean isChildPath = false;
-        for (RemoteLocation d : dests) {
-          if (loc.getDest().startsWith(d.getDest())) {
-            isChildPath = true;
-            break;
-          }
-        }
+    ListMultimap<String, RemoteLocation> validLocations =
+        ArrayListMultimap.create();
-        if (!isChildPath) {
-          dests.add(loc);
+    for (RemoteLocation loc : locations) {
+      final String nsId = loc.getNameserviceId();
+      final Collection<RemoteLocation> dests = validLocations.get(nsId);
+
+      // Ensure the paths in the same nameservice is different.
+      // Do not include parent-child paths.
+      boolean isChildPath = false;
+
+      for (RemoteLocation d : dests) {
+        if (StringUtils.startsWith(loc.getDest(), d.getDest())) {
+          isChildPath = true;
+          break;
+
+      if (!isChildPath) {
+        validLocations.put(nsId, loc);
+      }
-    List<RemoteLocation> quotaLocs = new LinkedList<>();
-    for (List<RemoteLocation> locs : validLocations.values()) {
-      quotaLocs.addAll(locs);
-    }
-
-    return quotaLocs;
+    return Collections
+        .unmodifiableList(new ArrayList<>(validLocations.values()));
-    List<RemoteLocation> locations = new LinkedList<>();
+    List<RemoteLocation> locations = new ArrayList<>();
-
