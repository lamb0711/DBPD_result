HDFS-13024. Ozone: ContainerStateMachine should synchronize operations between createContainer and writeChunk. Contributed by Mukul Kumar Singh.

-import org.apache.hadoop.scm.ScmConfigKeys;
+import java.util.concurrent.ArrayBlockingQueue;
+import java.util.concurrent.ThreadPoolExecutor;
+import java.util.concurrent.TimeUnit;
+  private ThreadPoolExecutor writeChunkExecutor;
+    final int raftSegmentPreallocatedSize = conf.getInt(
+        OzoneConfigKeys.DFS_CONTAINER_RATIS_SEGMENT_PREALLOCATED_SIZE_KEY,
+        OzoneConfigKeys.DFS_CONTAINER_RATIS_SEGMENT_PREALLOCATED_SIZE_DEFAULT);
-        storageDir, maxChunkSize, raftSegmentSize);
+        storageDir, maxChunkSize, raftSegmentSize, raftSegmentPreallocatedSize);
+    writeChunkExecutor =
+        new ThreadPoolExecutor(numWriteChunkThreads, numWriteChunkThreads,
+            100, TimeUnit.SECONDS,
+            new ArrayBlockingQueue<>(1024),
+            new ThreadPoolExecutor.CallerRunsPolicy());
+    ContainerStateMachine stateMachine =
+        new ContainerStateMachine(dispatcher, writeChunkExecutor);
-        .setStateMachine(new ContainerStateMachine(dispatcher,
-            numWriteChunkThreads))
+        .setStateMachine(stateMachine)
-      int raftSegmentSize) {
+      int raftSegmentSize, int raftSegmentPreallocatedSize) {
-        SizeInBytes.valueOf(raftSegmentSize));
+        SizeInBytes.valueOf(raftSegmentPreallocatedSize));
-        SizeInBytes.valueOf(raftSegmentSize));
+        SizeInBytes.valueOf(raftSegmentPreallocatedSize));
-        scmChunkSize + raftSegmentSize);
-    properties.setInt("raft.server.rpc.timeout.min", 500);
-    properties.setInt("raft.server.rpc.timeout.max", 600);
+        scmChunkSize + raftSegmentPreallocatedSize);
+    properties.setInt("raft.server.rpc.timeout.min", 800);
+    properties.setInt("raft.server.rpc.timeout.max", 1000);
+    writeChunkExecutor.prestartAllCoreThreads();
+      writeChunkExecutor.shutdown();
