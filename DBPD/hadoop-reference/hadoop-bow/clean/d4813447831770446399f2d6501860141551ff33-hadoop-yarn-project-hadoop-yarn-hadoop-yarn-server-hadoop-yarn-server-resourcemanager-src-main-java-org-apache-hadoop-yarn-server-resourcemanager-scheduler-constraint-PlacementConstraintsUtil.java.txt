YARN-7822. Constraint satisfaction checker support for composite OR and AND constraints. (Weiwei Yang via asuresh)

+import org.apache.hadoop.yarn.api.resource.PlacementConstraint.And;
+import org.apache.hadoop.yarn.api.resource.PlacementConstraint.Or;
+  /**
+   * Returns true if all child constraints are satisfied.
+   * @param appId application id
+   * @param constraint Or constraint
+   * @param node node
+   * @param atm allocation tags manager
+   * @return true if all child constraints are satisfied, false otherwise
+   * @throws InvalidAllocationTagsQueryException
+   */
+  private static boolean canSatisfyAndConstraint(ApplicationId appId,
+      And constraint, SchedulerNode node, AllocationTagsManager atm)
+      throws InvalidAllocationTagsQueryException {
+    // Iterate over the constraints tree, if found any child constraint
+    // isn't satisfied, return false.
+    for (AbstractConstraint child : constraint.getChildren()) {
+      if(!canSatisfyConstraints(appId, child.build(), node, atm)) {
+        return false;
+      }
+    }
+    return true;
+  }
+
+  /**
+   * Returns true as long as any of child constraint is satisfied.
+   * @param appId application id
+   * @param constraint Or constraint
+   * @param node node
+   * @param atm allocation tags manager
+   * @return true if any child constraint is satisfied, false otherwise
+   * @throws InvalidAllocationTagsQueryException
+   */
+  private static boolean canSatisfyOrConstraint(ApplicationId appId,
+      Or constraint, SchedulerNode node, AllocationTagsManager atm)
+      throws InvalidAllocationTagsQueryException {
+    for (AbstractConstraint child : constraint.getChildren()) {
+      if (canSatisfyConstraints(appId, child.build(), node, atm)) {
+        return true;
+      }
+    }
+    return false;
+  }
+
+    } else if (sConstraintExpr instanceof And) {
+      And and = (And) sConstraintExpr;
+      return canSatisfyAndConstraint(appId, and, node, atm);
+    } else if (sConstraintExpr instanceof Or) {
+      Or or = (Or) sConstraintExpr;
+      return canSatisfyOrConstraint(appId, or, node, atm);
-          "Unsupported type of constraint.");
+          "Unsupported type of constraint: "
+              + sConstraintExpr.getClass().getSimpleName());
