YARN-8013. Support application tags when defining application namespaces for placement constraints. Contributed by Weiwei Yang.

+import com.google.common.base.Strings;
+import com.google.common.collect.ImmutableSet;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Map;
- * {@link AllocationTagNamespace#evaluate(TargetApplications)} to evaluate
+ * {@link TargetApplicationsNamespace#evaluate(TargetApplications)} to evaluate
-  private Set<ApplicationId> allAppIds;
+  private Map<ApplicationId, Set<String>> allApps;
-    this.allAppIds = allApplicationIds;
+    allApps = new HashMap<>();
+    if (allApplicationIds != null) {
+      allApplicationIds.forEach(appId ->
+          allApps.put(appId, ImmutableSet.of()));
+    }
+  }
+
+  public TargetApplications(ApplicationId currentApplicationId,
+      Map<ApplicationId, Set<String>> allApplicationIds) {
+    this.currentAppId = currentApplicationId;
+    this.allApps = allApplicationIds;
+  public Set<ApplicationId> getAllApplicationIds() {
+    return this.allApps == null ?
+        ImmutableSet.of() : allApps.keySet();
+  }
+
-    return allAppIds == null ? null : allAppIds.stream().filter(appId ->
-        !appId.equals(getCurrentApplicationId()))
+    if (getAllApplicationIds() == null
+        || getAllApplicationIds().isEmpty()) {
+      return ImmutableSet.of();
+    }
+    return getAllApplicationIds()
+        .stream()
+        .filter(appId -> !appId.equals(getCurrentApplicationId()))
+
+  public Set<ApplicationId> getApplicationIdsByTag(String applicationTag) {
+    Set<ApplicationId> result = new HashSet<>();
+    if (Strings.isNullOrEmpty(applicationTag)
+        || this.allApps == null) {
+      return result;
+    }
+
+    for (Map.Entry<ApplicationId, Set<String>> app
+        : this.allApps.entrySet()) {
+      if (app.getValue() != null
+          && app.getValue().contains(applicationTag)) {
+        result.add(app.getKey());
+      }
+    }
+
+    return result;
+  }
