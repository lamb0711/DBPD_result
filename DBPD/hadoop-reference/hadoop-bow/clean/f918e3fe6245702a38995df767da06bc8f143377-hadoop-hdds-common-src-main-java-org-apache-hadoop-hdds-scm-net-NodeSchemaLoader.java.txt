HDDS-1669. SCM startup is failing if network-topology-default.xml is part of a jar

Closes #946

-import java.net.URISyntaxException;
-import java.net.URL;
+import java.io.InputStream;
-      if (!schemaFile.exists()) {
+
+      if (schemaFile.exists()) {
+        LOG.info("Load network topology schema file " +
+            schemaFile.getAbsolutePath());
+        try (FileInputStream inputStream = new FileInputStream(schemaFile)) {
+          return loadSchemaFromStream(schemaFilePath, inputStream);
+        }
+      } else {
-          URL url = classloader.getResource(schemaFilePath);
-          if (url != null) {
-            schemaFile = new File(url.toURI());
+          try (InputStream stream = classloader
+              .getResourceAsStream(schemaFilePath)) {
+            if (stream != null) {
+              LOG.info("Loading file from " + classloader
+                  .getResources(schemaFilePath));
+              return loadSchemaFromStream(schemaFilePath, stream);
+            }
+
-      if (!schemaFile.exists()) {
-        String msg = "Network topology layer schema file " +
-            schemaFilePath + "[" + schemaFile.getAbsolutePath() +
-            "] is not found.";
-        LOG.warn(msg);
-        throw new FileNotFoundException(msg);
-      }
+      String msg = "Network topology layer schema file " +
+          schemaFilePath + "[" + schemaFile.getAbsolutePath() +
+          "] is not found.";
+      LOG.warn(msg);
+      throw new FileNotFoundException(msg);
-      LOG.info("Load network topology schema file " +
-          schemaFile.getCanonicalPath());
-      if (FilenameUtils.getExtension(schemaFilePath).toLowerCase()
-          .compareTo("yaml") == 0) {
-        return loadSchemaFromYaml(schemaFile);
-      } else {
-        return loadSchema(schemaFile);
-      }
-    } catch (ParserConfigurationException | IOException | SAXException |
-        URISyntaxException e) {
+    } catch (ParserConfigurationException | IOException | SAXException e) {
-          + " schema file: " + schemaFilePath + " , error:" + e.getMessage());
+          + " schema file: " + schemaFilePath + " , error:" + e.getMessage(),
+          e);
+    }
+  }
+
+  private NodeSchemaLoadResult loadSchemaFromStream(String schemaFilePath,
+      InputStream stream)
+      throws ParserConfigurationException, SAXException, IOException {
+    if (FilenameUtils.getExtension(schemaFilePath).toLowerCase()
+        .compareTo("yaml") == 0) {
+      return loadSchemaFromYaml(stream);
+    } else {
+      return loadSchema(stream);
-   * @param schemaFile schema file
+   * @param inputStream schema file as an inputStream
-  private NodeSchemaLoadResult loadSchema(File schemaFile) throws
+  private NodeSchemaLoadResult loadSchema(InputStream inputStream) throws
-    LOG.info("Loading network topology layer schema file " + schemaFile);
+    LOG.info("Loading network topology layer schema file");
-    Document doc = builder.parse(schemaFile);
+    Document doc = builder.parse(inputStream);
-   * @param schemaFile schema file
+   * @param schemaFile as inputStream
-  private NodeSchemaLoadResult loadSchemaFromYaml(File schemaFile) {
+  private NodeSchemaLoadResult loadSchemaFromYaml(InputStream schemaFile) {
-      try (FileInputStream fileInputStream = new FileInputStream(schemaFile)) {
-        nodeTree = yaml.loadAs(fileInputStream, NodeSchema.class);
-      }
+      nodeTree = yaml.loadAs(schemaFile, NodeSchema.class);
+
-                + " schema file: " + schemaFile.getAbsolutePath());
+            + " schema file.");
-                  + " schema file: " + schemaFile.getAbsolutePath());
+              + " schema file.");
-                  + " schema file: " + schemaFile.getAbsolutePath());
+              + " schema file.");
-    } catch (RuntimeException e) {
-      throw  e;
-              + " schema file: " + schemaFile.getAbsolutePath() + " , error:"
-              + e.getMessage());
+          + " schema file: " + schemaFile + " , error:"
+          + e.getMessage(), e);
