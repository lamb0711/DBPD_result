Reverting the previous merge r1416603 which committed some extra changes

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1416712 13f79535-47bb-0310-9956-ffa450edef68

-      file.setModificationTime(now);
+      file.setModificationTimeForce(now);
-        srcInodes[srcInodes.length-2].updateModificationTime(timestamp);
-        dstInodes[dstInodes.length-2].updateModificationTime(timestamp);
-        // update moved leases with new filename
-        getFSNamesystem().unprotectedChangeLease(src, dst);        
+        srcInodes[srcInodes.length-2].setModificationTime(timestamp);
+        dstInodes[dstInodes.length-2].setModificationTime(timestamp);
-        srcInodes[srcInodes.length - 2].updateModificationTime(timestamp);
-        dstInodes[dstInodes.length - 2].updateModificationTime(timestamp);
-        // update moved lease with new filename
-        getFSNamesystem().unprotectedChangeLease(src, dst);
+        srcInodes[srcInodes.length - 2].setModificationTime(timestamp);
+        dstInodes[dstInodes.length - 2].setModificationTime(timestamp);
-      trgParent.removeChild(nodeToRemove, trgINodesInPath.getLatestSnapshot());
+      trgParent.removeChild(nodeToRemove);
-    trgInode.setModificationTime(timestamp);
-    trgParent.updateModificationTime(timestamp);
+    trgInode.setModificationTimeForce(timestamp);
+    trgParent.setModificationTime(timestamp);
-    inodes[inodes.length - 2].updateModificationTime(mtime);
+    inodes[inodes.length - 2].setModificationTime(mtime);
-  private void replaceINodeUnsynced(String path, INode oldnode, INode newnode,
-      Snapshot latestSnapshot) throws IOException {    
+  private void replaceINodeUnsynced(String path, INode oldnode, INode newnode
+      ) throws IOException {    
-    if (!oldnode.removeNode(latestSnapshot)) {
+    if (!oldnode.removeNode()) {
-      INodeDirectory newnode, Snapshot latestSnapshot) throws IOException {    
+      INodeDirectory newnode) throws IOException {    
-      replaceINodeUnsynced(path, oldnode, newnode, latestSnapshot);
+      replaceINodeUnsynced(path, oldnode, newnode);
-  public void replaceNode(String path, INodeFile oldnode, INodeFile newnode,
-      Snapshot latestSnapshot) throws IOException {
+  public void replaceNode(String path, INodeFile oldnode, INodeFile newnode
+      ) throws IOException {    
-      replaceINodeUnsynced(path, oldnode, newnode, latestSnapshot);
+      replaceINodeUnsynced(path, oldnode, newnode);
-      final INodesInPath inodesInPath = rootDir.getINodesInPath(srcs, resolveLink);
-      final INode i = inodesInPath.getINode(0);
-      return i == null? null: createFileStatus(HdfsFileStatus.EMPTY_NAME, i);
+      INode targetNode = rootDir.getNode(srcs, resolveLink);
+      if (targetNode == null) {
+        return null;
+      }
+      else {
+        return createFileStatus(HdfsFileStatus.EMPTY_NAME, targetNode);
+      }
-    return getINodesInPath(src).getINode(0);
-  }
-
-  /**
-   * Get {@link INode} associated with the file / directory.
-   */
-  public INodesInPath getINodesInPath(String src) throws UnresolvedLinkException {
-      return rootDir.getINodesInPath(src, true);
+      return rootDir.getNode(src, true);
-    final boolean added = ((INodeDirectory)inodes[pos-1]).addChild(child, true,
-        inodesInPath.getLatestSnapshot());
+    final boolean added = ((INodeDirectory)inodes[pos-1]).addChild(child, true);
-    INode removedNode = ((INodeDirectory)inodes[pos-1]).removeChild(inodes[pos],
-        inodesInPath.getLatestSnapshot());
+    INode removedNode = ((INodeDirectory)inodes[pos-1]).removeChild(inodes[pos]);
-    final INodesInPath inodesInPath = rootDir.getMutableINodesInPath(srcs, true);
-    final INode[] inodes = inodesInPath.getINodes();
+    final INode[] inodes = rootDir.getMutableINodesInPath(srcs, true)
+        .getINodes();
-          parent.replaceChild(newNode, inodesInPath.getLatestSnapshot());
+          parent.replaceChild(newNode);
-        parent.replaceChild(newNode, inodesInPath.getLatestSnapshot());
+        parent.replaceChild(newNode);
-      inode.setModificationTime(mtime);
+      inode.setModificationTimeForce(mtime);
