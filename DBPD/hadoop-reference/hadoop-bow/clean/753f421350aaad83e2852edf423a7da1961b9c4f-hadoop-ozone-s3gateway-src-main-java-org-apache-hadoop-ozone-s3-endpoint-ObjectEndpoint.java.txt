HDDS-820. Use more strict data format for the Last-Modified headers of s3 gateway. Contributed by Elek, Marton.

-import java.time.format.DateTimeFormatter;
-
-import com.google.common.annotations.VisibleForTesting;
-import org.apache.commons.io.IOUtils;
-
+import org.apache.hadoop.ozone.s3.util.RFC1123Util;
+
+import com.google.common.annotations.VisibleForTesting;
+import static javax.ws.rs.core.HttpHeaders.LAST_MODIFIED;
+import org.apache.commons.io.IOUtils;
+import static org.apache.hadoop.ozone.s3.util.S3Consts.ACCEPT_RANGE_HEADER;
+import static org.apache.hadoop.ozone.s3.util.S3Consts.CONTENT_RANGE_HEADER;
+import static org.apache.hadoop.ozone.s3.util.S3Consts.COPY_SOURCE_HEADER;
+import static org.apache.hadoop.ozone.s3.util.S3Consts.RANGE_HEADER;
+import static org.apache.hadoop.ozone.s3.util.S3Consts.RANGE_HEADER_SUPPORTED_UNIT;
+import static org.apache.hadoop.ozone.s3.util.S3Consts.STORAGE_CLASS_HEADER;
-import static org.apache.hadoop.ozone.s3.util.S3Consts.*;
-
-
+      addLastModifiedDate(responseBuilder, keyDetails);
+  private void addLastModifiedDate(
+      ResponseBuilder responseBuilder, OzoneKeyDetails key) {
+
+    ZonedDateTime lastModificationTime =
+        Instant.ofEpochMilli(key.getModificationTime())
+            .atZone(ZoneId.of("GMT"));
+
+    responseBuilder
+        .header(LAST_MODIFIED,
+            RFC1123Util.FORMAT.format(lastModificationTime));
+  }
+
-    ZonedDateTime lastModificationTime =
-        Instant.ofEpochMilli(key.getModificationTime())
-            .atZone(ZoneId.of("GMT"));
-
-    return Response.ok().status(HttpStatus.SC_OK)
-        .header("Last-Modified",
-            DateTimeFormatter.RFC_1123_DATE_TIME.format(lastModificationTime))
+    ResponseBuilder response = Response.ok().status(HttpStatus.SC_OK)
-        .header("Content-Type", "binary/octet-stream")
+        .header("Content-Type", "binary/octet-stream");
+    addLastModifiedDate(response, key);
+    return response
