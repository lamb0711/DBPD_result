YARN-3087. Made the REST server of per-node aggregator work alone in NM daemon. Conntributed by Li Lu.

(cherry picked from commit 41a08ad404d4278fe598d6c222b2ae0e84bae0df)

+import java.net.URI;
+import java.util.HashMap;
-import com.google.inject.Inject;
+import org.apache.hadoop.http.lib.StaticUserWebFilter;
-import org.apache.hadoop.yarn.webapp.*;
+import org.apache.hadoop.yarn.webapp.GenericExceptionHandler;
+import org.apache.hadoop.yarn.webapp.YarnJacksonJaxbJsonProvider;
+import org.apache.hadoop.http.HttpServer2;
+import static org.apache.hadoop.fs.CommonConfigurationKeys.DEFAULT_HADOOP_HTTP_STATIC_USER;
+import static org.apache.hadoop.fs.CommonConfigurationKeys.HADOOP_HTTP_STATIC_USER;
+
+  static final String AGGREGATOR_COLLECTION_ATTR_KEY = "aggregator.collection";
-  private WebApp webApp;
+  private HttpServer2 timelineRestServer;
-    if (webApp != null) {
-      webApp.stop();
+    if (timelineRestServer != null) {
+      timelineRestServer.stop();
-      webApp =
-          WebApps
-            .$for("timeline", null, null, "ws")
-            .with(conf).at(bindAddress).start(
-                new TimelineServiceWebApp());
+      Configuration confForInfoServer = new Configuration(conf);
+      confForInfoServer.setInt(HttpServer2.HTTP_MAX_THREADS, 10);
+      HttpServer2.Builder builder = new HttpServer2.Builder()
+          .setName("timeline")
+          .setConf(conf)
+          .addEndpoint(URI.create("http://" + bindAddress));
+      timelineRestServer = builder.build();
+      // TODO: replace this by an authentification filter in future.
+      HashMap<String, String> options = new HashMap<String, String>();
+      String username = conf.get(HADOOP_HTTP_STATIC_USER,
+          DEFAULT_HADOOP_HTTP_STATIC_USER);
+      options.put(HADOOP_HTTP_STATIC_USER, username);
+      HttpServer2.defineFilter(timelineRestServer.getWebAppContext(),
+          "static_user_filter_timeline",
+          StaticUserWebFilter.StaticUserFilter.class.getName(),
+          options, new String[] {"/*"});
+
+      timelineRestServer.addJerseyResourcePackage(
+          PerNodeAggregatorWebService.class.getPackage().getName() + ";"
+              + GenericExceptionHandler.class.getPackage().getName() + ";"
+              + YarnJacksonJaxbJsonProvider.class.getPackage().getName(),
+          "/*");
+      timelineRestServer.setAttribute(AGGREGATOR_COLLECTION_ATTR_KEY,
+          AppLevelServiceManager.getInstance());
+      timelineRestServer.start();
-  private static class TimelineServiceWebApp
-      extends WebApp implements YarnWebParams {
-    @Override
-    public void setup() {
-      bind(YarnJacksonJaxbJsonProvider.class);
-      bind(GenericExceptionHandler.class);
-      bind(PerNodeAggregatorWebService.class);
-      // bind to the global singleton
-      bind(AppLevelServiceManager.class).
-          toProvider(AppLevelServiceManagerProvider.class);
-    }
-  }
-
