HADOOP-16354.  Enable AuthFilter as default for WebHDFS.
               Contributed by Prabhu Joseph

-import java.util.HashMap;
-import java.util.Iterator;
-import java.util.Map.Entry;
-import org.apache.hadoop.hdfs.web.AuthFilter;
-import org.apache.hadoop.security.SecurityUtil;
-import org.apache.hadoop.security.UserGroupInformation;
-  
-  private static Map<String, String> getAuthFilterParams(Configuration conf,
-      String hostname, String httpKeytab) throws IOException {
-    Map<String, String> params = new HashMap<String, String>();
-    // Select configs beginning with 'dfs.web.authentication.'
-    Iterator<Map.Entry<String, String>> iterator = conf.iterator();
-    while (iterator.hasNext()) {
-      Entry<String, String> kvPair = iterator.next();
-      if (kvPair.getKey().startsWith(AuthFilter.CONF_PREFIX)) {
-        params.put(kvPair.getKey(), kvPair.getValue());
-      }
-    }
-    String principalInConf = conf
-        .get(DFSConfigKeys.DFS_WEB_AUTHENTICATION_KERBEROS_PRINCIPAL_KEY);
-    if (principalInConf != null && !principalInConf.isEmpty()) {
-      params
-          .put(
-              DFSConfigKeys.DFS_WEB_AUTHENTICATION_KERBEROS_PRINCIPAL_KEY,
-              SecurityUtil.getServerPrincipal(principalInConf, hostname));
-    } else if (UserGroupInformation.isSecurityEnabled()) {
-      HttpServer2.LOG.error(
-          "WebHDFS and security are enabled, but configuration property '" +
-          DFSConfigKeys.DFS_WEB_AUTHENTICATION_KERBEROS_PRINCIPAL_KEY +
-          "' is not set.");
-    }
-    if (httpKeytab != null && !httpKeytab.isEmpty()) {
-      params.put(
-          DFSConfigKeys.DFS_WEB_AUTHENTICATION_KERBEROS_KEYTAB_KEY,
-          httpKeytab);
-    } else if (UserGroupInformation.isSecurityEnabled()) {
-      HttpServer2.LOG.error(
-          "WebHDFS and security are enabled, but configuration property '" +
-          DFSConfigKeys.DFS_WEB_AUTHENTICATION_KERBEROS_KEYTAB_KEY +
-          "' is not set.");
-    }
-    String anonymousAllowed = conf
-      .get(DFSConfigKeys.DFS_WEB_AUTHENTICATION_SIMPLE_ANONYMOUS_ALLOWED);
-    if (anonymousAllowed != null && !anonymousAllowed.isEmpty()) {
-    params.put(
-        DFSConfigKeys.DFS_WEB_AUTHENTICATION_SIMPLE_ANONYMOUS_ALLOWED,
-        anonymousAllowed);
-    }
-    return params;
-  }
