Revert "HDFS-12681. Fold HdfsLocatedFileStatus into HdfsFileStatus."

This reverts commit b85603e3f85e85da406241b991f3a9974384c3aa.

-import org.apache.hadoop.fs.LocatedFileStatus;
-/**
- * HDFS metadata for an entity in the filesystem.
+/** Interface that represents the over the wire information for a file.
-public final class HdfsFileStatus extends LocatedFileStatus {
+public class HdfsFileStatus extends FileStatus {
-  // BlockLocations[] is the user-facing type
-  private transient LocatedBlocks hdfsloc;
-
-  /** Set of features potentially active on an instance. */
+  /**
+   * Set of features potentially active on an instance.
+   */
-  private HdfsFileStatus(long length, boolean isdir, int replication,
+  protected HdfsFileStatus(long length, boolean isdir, int replication,
-                         byte storagePolicy, ErasureCodingPolicy ecPolicy,
-                         LocatedBlocks hdfsloc) {
+                         byte storagePolicy, ErasureCodingPolicy ecPolicy) {
-        flags.contains(Flags.HAS_EC), null);
+        flags.contains(Flags.HAS_EC));
-    this.hdfsloc = hdfsloc;
-  public boolean isEmptyLocalName() {
+  public final boolean isEmptyLocalName() {
-  public String getLocalName() {
+  public final String getLocalName() {
-  public byte[] getLocalNameInBytes() {
+  public final byte[] getLocalNameInBytes() {
-  public String getFullName(String parent) {
+  public final String getFullName(final String parent) {
-  public Path getFullPath(Path parent) {
+  public final Path getFullPath(final Path parent) {
-  public byte[] getSymlinkInBytes() {
+  public final byte[] getSymlinkInBytes() {
-  public long getFileId() {
+  public final long getFileId() {
-  public FileEncryptionInfo getFileEncryptionInfo() {
+  public final FileEncryptionInfo getFileEncryptionInfo() {
-  public int getChildrenNum() {
+  public final int getChildrenNum() {
-  public byte getStoragePolicy() {
+  public final byte getStoragePolicy() {
-  public LocatedBlocks getLocatedBlocks() {
-    return hdfsloc;
-  }
-
-  public FileStatus makeQualified(URI defaultUri, Path parent) {
+  public final FileStatus makeQualified(URI defaultUri, Path parent) {
-  }
-  /**
-   * This function is used to transform the underlying HDFS LocatedBlocks to
-   * BlockLocations. This method must be invoked before
-   * {@link #getBlockLocations()}.
-   *
-   * The returned BlockLocation will have different formats for replicated
-   * and erasure coded file.
-   * Please refer to
-   * {@link org.apache.hadoop.fs.FileSystem#getFileBlockLocations
-   * (FileStatus, long, long)}
-   * for examples.
-   */
-  public LocatedFileStatus makeQualifiedLocated(URI defaultUri,
-                                                      Path path) {
-    makeQualified(defaultUri, path);
-    setBlockLocations(
-        DFSUtilClient.locatedBlocks2Locations(getLocatedBlocks()));
-    return this;
-    private LocatedBlocks locations        = null;
-     * Set the block locations for this entity (default = null).
-     * @param locations HDFS locations
-     *                  (see {@link #makeQualifiedLocated(URI, Path)})
-     * @return This Builder instance
-     */
-    public Builder locations(LocatedBlocks locations) {
-      this.locations = locations;
-      return this;
-    }
-
-    /**
-          childrenNum, feInfo, storagePolicy, ecPolicy, locations);
+          childrenNum, feInfo, storagePolicy, ecPolicy);
