HDDS-1605. Implement AuditLogging for OM HA Bucket write requests. (#867)


+import org.apache.hadoop.ozone.audit.AuditLogger;
+import org.apache.hadoop.ozone.audit.OMAction;
+    AuditLogger auditLogger = ozoneManager.getAuditLogger();
+    OzoneManagerProtocolProtos.UserInfo userInfo = getOmRequest().getUserInfo();
+
+      auditLog(auditLogger, buildAuditMessage(OMAction.CREATE_BUCKET,
+              omBucketInfo.toAuditMap(), ex, userInfo));
+    IOException exception = null;
-      LOG.debug("created bucket: {} in volume: {}", bucketName, volumeName);
-      omMetrics.incNumBuckets();
-
-      // return response.
-      omResponse.setCreateBucketResponse(
-          CreateBucketResponse.newBuilder().build());
-      return new OMBucketCreateResponse(omBucketInfo, omResponse.build());
-      omMetrics.incNumBucketCreateFails();
-      LOG.error("Bucket creation failed for bucket:{} in volume:{}",
-          bucketName, volumeName, ex);
-      return new OMBucketCreateResponse(omBucketInfo,
-          createErrorOMResponse(omResponse, ex));
+      exception = ex;
+
+    // Performing audit logging outside of the lock.
+    auditLog(auditLogger, buildAuditMessage(OMAction.CREATE_BUCKET,
+        omBucketInfo.toAuditMap(), exception, userInfo));
+
+    // return response.
+    if (exception == null) {
+      LOG.debug("created bucket: {} in volume: {}", bucketName, volumeName);
+      omMetrics.incNumBuckets();
+      omResponse.setCreateBucketResponse(
+          CreateBucketResponse.newBuilder().build());
+      return new OMBucketCreateResponse(omBucketInfo, omResponse.build());
+    } else {
+      omMetrics.incNumBucketCreateFails();
+      LOG.error("Bucket creation failed for bucket:{} in volume:{}",
+          bucketName, volumeName, exception);
+      return new OMBucketCreateResponse(omBucketInfo,
+          createErrorOMResponse(omResponse, exception));
+    }
