HDFS-13713. Add specification of Multipart Upload API to FS specification, with contract tests.

Contributed by Ewan Higgs and Steve Loughran.

+import java.util.Comparator;
+import java.util.Map;
-    if (!(fs instanceof S3AFileSystem)) {
-      throw new IllegalArgumentException(
-          "S3A MultipartUploads must use S3AFileSystem");
-    }
+    Preconditions.checkArgument(fs instanceof S3AFileSystem,
+        "Wrong filesystem: expected S3A but got %s", fs);
+    checkPutArguments(filePath, inputStream, partNumber, uploadId,
+        lengthInBytes);
-      List<Pair<Integer, PartHandle>> handles, UploadHandle uploadId)
+      Map<Integer, PartHandle> handleMap,
+      UploadHandle uploadId)
-    if (handles.isEmpty()) {
-      throw new IOException("Empty upload");
-    }
+    checkPartHandles(handleMap);
+    List<Map.Entry<Integer, PartHandle>> handles =
+        new ArrayList<>(handleMap.entrySet());
+    handles.sort(Comparator.comparingInt(Map.Entry::getKey));
-    for (Pair<Integer, PartHandle> handle : handles) {
-      byte[] payload = handle.getRight().toByteArray();
+    for (Map.Entry<Integer, PartHandle> handle : handles) {
+      byte[] payload = handle.getValue().toByteArray();
-      eTags.add(new PartETag(handle.getLeft(), result.getRight()));
+      eTags.add(new PartETag(handle.getKey(), result.getRight()));
-    Preconditions.checkArgument(len > 0,
+    Preconditions.checkArgument(len >= 0,
+  @VisibleForTesting
-      if (len <= 0) {
+      if (len < 0) {
