HDFS-15355. Make the default block storage policy ID configurable. Contributed by Yang Yun.

+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.hdfs.DFSConfigKeys;
+    return createDefaultSuite(null);
+  }
+
+  @VisibleForTesting
+  public static BlockStoragePolicySuite createDefaultSuite(
+      final Configuration conf) {
-    final byte lazyPersistId = HdfsConstants.MEMORY_STORAGE_POLICY_ID;
+    final byte lazyPersistId =
+        HdfsConstants.StoragePolicy.LAZY_PERSIST.value();
-        HdfsConstants.MEMORY_STORAGE_POLICY_NAME,
+        HdfsConstants.StoragePolicy.LAZY_PERSIST.name(),
-    final byte allssdId = HdfsConstants.ALLSSD_STORAGE_POLICY_ID;
+    final byte allssdId = HdfsConstants.StoragePolicy.ALL_SSD.value();
-        HdfsConstants.ALLSSD_STORAGE_POLICY_NAME,
+        HdfsConstants.StoragePolicy.ALL_SSD.name(),
-    final byte onessdId = HdfsConstants.ONESSD_STORAGE_POLICY_ID;
+    final byte onessdId = HdfsConstants.StoragePolicy.ONE_SSD.value();
-        HdfsConstants.ONESSD_STORAGE_POLICY_NAME,
+        HdfsConstants.StoragePolicy.ONE_SSD.name(),
-    final byte hotId = HdfsConstants.HOT_STORAGE_POLICY_ID;
+    final byte hotId = HdfsConstants.StoragePolicy.HOT.value();
-        HdfsConstants.HOT_STORAGE_POLICY_NAME,
+        HdfsConstants.StoragePolicy.HOT.name(),
-    final byte warmId = HdfsConstants.WARM_STORAGE_POLICY_ID;
+    final byte warmId = HdfsConstants.StoragePolicy.WARM.value();
-        HdfsConstants.WARM_STORAGE_POLICY_NAME,
+        HdfsConstants.StoragePolicy.WARM.name(),
-    final byte coldId = HdfsConstants.COLD_STORAGE_POLICY_ID;
+    final byte coldId = HdfsConstants.StoragePolicy.COLD.value();
-        HdfsConstants.COLD_STORAGE_POLICY_NAME,
+        HdfsConstants.StoragePolicy.COLD.name(),
-    final byte providedId = HdfsConstants.PROVIDED_STORAGE_POLICY_ID;
+    final byte providedId = HdfsConstants.StoragePolicy.PROVIDED.value();
-      HdfsConstants.PROVIDED_STORAGE_POLICY_NAME,
+      HdfsConstants.StoragePolicy.PROVIDED.name(),
-    return new BlockStoragePolicySuite(hotId, policies);
+
+    return new BlockStoragePolicySuite(getDefaultPolicyID(conf, policies),
+        policies);
+  }
+
+  private static byte getDefaultPolicyID(
+      final Configuration conf, final BlockStoragePolicy[] policies) {
+    if (conf != null) {
+      HdfsConstants.StoragePolicy defaultPolicy = conf.getEnum(
+          DFSConfigKeys.DFS_STORAGE_DEFAULT_POLICY,
+          DFSConfigKeys.DFS_STORAGE_DEFAULT_POLICY_DEFAULT);
+      for (BlockStoragePolicy policy : policies) {
+        if (policy != null &&
+            policy.getName().equalsIgnoreCase(defaultPolicy.name())) {
+          return policy.getId();
+        }
+      }
+    }
+    return DFSConfigKeys.DFS_STORAGE_DEFAULT_POLICY_DEFAULT.value();
