HADOOP-7172. SecureIO should not check owner on non-secure clusters that have no native support. Contributed by Todd Lipcon


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1095958 13f79535-47bb-0310-9956-ffa450edef68

-   * constraints.
+   * constraints if security is enabled.
+   *
+   * Note that this function provides no additional checks if Hadoop
+   * security is disabled, since doing the checks would be too expensive
+   * when native libraries are not available.
+   *
-   * @throws IOException if an IO Error occurred, or the user/group does not 
-   * match
+   * @throws IOException if an IO Error occurred, or security is enabled and
+   * the user/group does not match
-    if (skipSecurity) {
-      // Subject to race conditions but this is the best we can do
-      FileStatus status =
-        rawFilesystem.getFileStatus(new Path(f.getAbsolutePath()));
-      checkStat(f, status.getOwner(), status.getGroup(),
-          expectedOwner, expectedGroup);
+    if (!UserGroupInformation.isSecurityEnabled()) {
+    return forceSecureOpenForRead(f, expectedOwner, expectedGroup);
+  }
+
+  /**
+   * Same as openForRead() except that it will run even if security is off.
+   * This is used by unit tests.
+   */
+  static FileInputStream forceSecureOpenForRead(File f, String expectedOwner,
+      String expectedGroup) throws IOException {
