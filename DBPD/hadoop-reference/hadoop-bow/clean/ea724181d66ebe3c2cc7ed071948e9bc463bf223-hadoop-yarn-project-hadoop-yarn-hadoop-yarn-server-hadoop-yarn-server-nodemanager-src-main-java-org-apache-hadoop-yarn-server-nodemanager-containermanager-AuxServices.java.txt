YARN-9132. Added file permission check for auxiliary services manifest file.
           Contributed by Billie Rinaldi

+import org.apache.hadoop.security.authorize.AccessControlList;
+  private boolean checkManifestPermissions(FileStatus status) throws
+      IOException {
+    if ((status.getPermission().toShort() & 0022) != 0) {
+      LOG.error("Manifest file and parents must not be writable by group or " +
+          "others. The current Permission of " + status.getPath() + " is " +
+          status.getPermission());
+      return false;
+    }
+    Path parent = status.getPath().getParent();
+    if (parent == null) {
+      return true;
+    }
+    return checkManifestPermissions(manifestFS.getFileStatus(parent));
+  }
+
+  private boolean checkManifestOwnerAndPermissions(FileStatus status) throws
+      IOException {
+    AccessControlList yarnAdminAcl = new AccessControlList(getConfig().get(
+        YarnConfiguration.YARN_ADMIN_ACL,
+        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));
+    if (!yarnAdminAcl.isUserAllowed(
+        UserGroupInformation.createRemoteUser(status.getOwner()))) {
+      LOG.error("Manifest must be owned by YARN admin: " + manifest);
+      return false;
+    }
+
+    return checkManifestPermissions(status);
+  }
+
-      LOG.info("Manifest file " + manifest + " doesn't exist");
+      LOG.warn("Manifest file " + manifest + " doesn't exist");
-      LOG.info("Manifest file " + manifest + " doesn't exist");
+      LOG.warn("Manifest file " + manifest + " doesn't exist");
+      return null;
+    }
+    if (!status.isFile()) {
+      LOG.warn("Manifest file " + manifest + " is not a file");
+    }
+    if (!checkManifestOwnerAndPermissions(status)) {
+      if (manifestFS != null) {
+        manifestFS.close();
+      }
