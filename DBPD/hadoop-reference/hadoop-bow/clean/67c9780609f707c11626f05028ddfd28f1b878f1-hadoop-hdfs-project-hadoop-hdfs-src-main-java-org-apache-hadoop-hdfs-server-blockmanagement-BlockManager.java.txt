HDFS-9498. Move code that tracks blocks with future generation stamps to BlockManagerSafeMode. (Contributed by Mingliang Liu)

-import org.apache.hadoop.hdfs.server.common.HdfsServerConstants;
-  /** Keeps track of how many bytes are in Future Generation blocks. */
-  private AtomicLong numberOfBytesInFutureBlocks;
-
-  /** Reports if Name node was started with Rollback option. */
-  private boolean inRollBack = false;
-
-    this.numberOfBytesInFutureBlocks = new AtomicLong();
-    this.inRollBack = isInRollBackMode(NameNode.getStartupOption(conf));
-  public void leaveSafeMode(boolean force) {
-    bmSafeMode.leaveSafeMode(force);
+  public boolean leaveSafeMode(boolean force) {
+    return bmSafeMode.leaveSafeMode(force);
+  public long getBytesInFuture() {
+    return bmSafeMode.getBytesInFuture();
+  }
+
-        if (namesystem.isInStartupSafeMode()
-            && !shouldPostponeBlocksFromFuture
-            && !inRollBack
-            && namesystem.isGenStampInFuture(iblk)) {
-          numberOfBytesInFutureBlocks.addAndGet(iblk.getBytesOnDisk());
-        }
+        bmSafeMode.checkBlocksWithFutureGS(iblk);
-  /**
-   * Returns the number of bytes that reside in blocks with Generation Stamps
-   * greater than generation stamp known to Namenode.
-   *
-   * @return Bytes in future
-   */
-  public long getBytesInFuture() {
-    return numberOfBytesInFutureBlocks.get();
-  }
-
-  /**
-   * Clears the bytes in future counter.
-   */
-  public void clearBytesInFuture() {
-    numberOfBytesInFutureBlocks.set(0);
-  }
-
-  /**
-   * Returns true if Namenode was started with a RollBack option.
-   *
-   * @param option - StartupOption
-   * @return boolean
-   */
-  private boolean isInRollBackMode(HdfsServerConstants.StartupOption option) {
-    if (option == HdfsServerConstants.StartupOption.ROLLBACK) {
-      return true;
-    }
-    if ((option == HdfsServerConstants.StartupOption.ROLLINGUPGRADE) &&
-        (option.getRollingUpgradeStartupOption() ==
-            HdfsServerConstants.RollingUpgradeStartupOption.ROLLBACK)) {
-      return true;
-    }
-    return false;
+  boolean getShouldPostponeBlocksFromFuture() {
+    return shouldPostponeBlocksFromFuture;
