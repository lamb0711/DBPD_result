YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.

-import java.util.Map;
-         final RMContext rmContext) throws IOException {
+          final RMContext rmContext) throws IOException {
-  public static void validateQueueHierarchy(Map<String, CSQueue> queues,
-         Map<String, CSQueue> newQueues, CapacitySchedulerConfiguration newConf)
-         throws IOException {
+  public static void validateQueueHierarchy(
+      CSQueueStore queues,
+      CSQueueStore newQueues,
+      CapacitySchedulerConfiguration newConf) throws IOException {
-    for (Map.Entry<String, CSQueue> e : queues.entrySet()) {
-      if (!(AbstractAutoCreatedLeafQueue.class.isAssignableFrom(e.getValue()
-              .getClass()))) {
-        String queueName = e.getKey();
-        CSQueue oldQueue = e.getValue();
-        CSQueue newQueue = newQueues.get(queueName);
+    for (CSQueue oldQueue : queues.getQueues()) {
+      if (!(AbstractAutoCreatedLeafQueue.class.isAssignableFrom(
+          oldQueue.getClass()))) {
+        String queuePath = oldQueue.getQueuePath();
+        CSQueue newQueue = newQueues.get(queuePath);
-                  newQueueState == QueueState.STOPPED) {
-            LOG.info("Deleting Queue " + queueName + ", as it is not"
-                    + " present in the modified capacity configuration xml");
-          } else{
+              newQueueState == QueueState.STOPPED) {
+            LOG.info("Deleting Queue " + queuePath + ", as it is not"
+                + " present in the modified capacity configuration xml");
+          } else {
-                    + " deleted from the capacity scheduler configuration, "
-                    + "as the queue is not yet in stopped state. "
-                    + "Current State : " + oldQueue.getState());
+              + " deleted from the capacity scheduler configuration, as the"
+              + " queue is not yet in stopped state. Current State : "
+              + oldQueue.getState());
-                  queueName + " is moved from:" + oldQueue.getQueuePath()
-                          + " to:" + newQueue.getQueuePath()
-                          + " after refresh, which is not allowed.");
+            queuePath + " is moved from:" + oldQueue.getQueuePath() + " to:"
+              + newQueue.getQueuePath()
+              + " after refresh, which is not allowed.");
-                && !(oldQueue instanceof ManagedParentQueue)
-                && newQueue instanceof ManagedParentQueue) {
+            && !(oldQueue instanceof ManagedParentQueue)
+            && newQueue instanceof ManagedParentQueue) {
-                  "Can not convert parent queue: " + oldQueue.getQueuePath()
-                          + " to auto create enabled parent queue since "
-                          + "it could have other pre-configured queues which is"
-                          + " not supported");
+            "Can not convert parent queue: " + oldQueue.getQueuePath()
+                + " to auto create enabled parent queue since "
+                + "it could have other pre-configured queues which is not "
+                + "supported");
-                && !(newQueue instanceof ManagedParentQueue)) {
+            && !(newQueue instanceof ManagedParentQueue)) {
-                  "Cannot convert auto create enabled parent queue: " + oldQueue
-                          .getQueuePath() + " to leaf queue. Please check "
-                          + " parent queue's configuration "
-                          + CapacitySchedulerConfiguration
-                          .AUTO_CREATE_CHILD_QUEUE_ENABLED
-                          + " is set to true");
+            "Cannot convert auto create enabled parent queue: "
+              + oldQueue.getQueuePath() + " to leaf queue. Please check "
+              + " parent queue's configuration "
+              + CapacitySchedulerConfiguration
+              .AUTO_CREATE_CHILD_QUEUE_ENABLED
+              + " is set to true");
-                    + " to parent queue.");
+                + " to parent queue.");
-                    "Can not convert the leaf queue: " + oldQueue.getQueuePath()
-                            + " to parent queue since "
-                            + "it is not yet in stopped state. Current State : "
-                            + oldQueue.getState());
+              "Can not convert the leaf queue: " + oldQueue.getQueuePath()
+                + " to parent queue since "
+                + "it is not yet in stopped state. Current State : "
+                + oldQueue.getState());
-                && newQueue instanceof LeafQueue) {
+            && newQueue instanceof LeafQueue) {
-                  + " to leaf queue.");
+              + " to leaf queue.");
