YARN-711. Copied BuilderUtil methods in individual API records as BuilderUtils is going to be dismantled. Contributed by Jian He.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485888 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.util.Records;
-public interface ApplicationSubmissionContext {
+public abstract class ApplicationSubmissionContext {
+
+  @Public
+  @Stable
+  public static ApplicationSubmissionContext newInstance(
+      ApplicationId applicationId, String applicationName, String queue,
+      Priority priority, ContainerLaunchContext amContainer,
+      boolean isUnmanagedAM, boolean cancelTokensWhenComplete,
+      int maxAppAttempts, Resource resource, String applicationType) {
+    ApplicationSubmissionContext context =
+        Records.newRecord(ApplicationSubmissionContext.class);
+    context.setApplicationId(applicationId);
+    context.setApplicationName(applicationName);
+    context.setQueue(queue);
+    context.setPriority(priority);
+    context.setAMContainerSpec(amContainer);
+    context.setUnmanagedAM(isUnmanagedAM);
+    context.setCancelTokensWhenComplete(cancelTokensWhenComplete);
+    context.setMaxAppAttempts(maxAppAttempts);
+    context.setResource(resource);
+    context.setApplicationType(applicationType);
+    return context;
+  }
+
+  @Public
+  @Stable
+  public static ApplicationSubmissionContext newInstance(
+      ApplicationId applicationId, String applicationName, String queue,
+      Priority priority, ContainerLaunchContext amContainer,
+      boolean isUnmanagedAM, boolean cancelTokensWhenComplete,
+      int maxAppAttempts, Resource resource) {
+    return newInstance(applicationId, applicationName, queue, priority,
+      amContainer, isUnmanagedAM, cancelTokensWhenComplete, maxAppAttempts,
+      resource, null);
+  }
+
-  public ApplicationId getApplicationId();
+  public abstract ApplicationId getApplicationId();
-  public void setApplicationId(ApplicationId applicationId);
+  public abstract void setApplicationId(ApplicationId applicationId);
-  public String getApplicationName();
+  public abstract String getApplicationName();
-  public void setApplicationName(String applicationName);
+  public abstract void setApplicationName(String applicationName);
-  public String getQueue();
+  public abstract String getQueue();
-  public void setQueue(String queue);
+  public abstract void setQueue(String queue);
-  public Priority getPriority();
+  public abstract Priority getPriority();
-  public void setPriority(Priority priority);
+  public abstract void setPriority(Priority priority);
-  public ContainerLaunchContext getAMContainerSpec();
+  public abstract ContainerLaunchContext getAMContainerSpec();
-  public void setAMContainerSpec(ContainerLaunchContext amContainer);
+  public abstract void setAMContainerSpec(ContainerLaunchContext amContainer);
-  public boolean getUnmanagedAM();
+  public abstract boolean getUnmanagedAM();
-  public void setUnmanagedAM(boolean value);
+  public abstract void setUnmanagedAM(boolean value);
-  public boolean getCancelTokensWhenComplete();
+  public abstract boolean getCancelTokensWhenComplete();
-  public void setCancelTokensWhenComplete(boolean cancel);
+  public abstract void setCancelTokensWhenComplete(boolean cancel);
-  public int getMaxAppAttempts();
+  public abstract int getMaxAppAttempts();
-  public void setMaxAppAttempts(int maxAppAttempts);
+  public abstract void setMaxAppAttempts(int maxAppAttempts);
-  public Resource getResource();
+  public abstract Resource getResource();
-  public void setResource(Resource resource);
+  public abstract void setResource(Resource resource);
-  public String getApplicationType();
+  public abstract String getApplicationType();
-  public void setApplicationType(String applicationType);
+  public abstract void setApplicationType(String applicationType);
