HDFS-11968. ViewFS: StoragePolicies commands fail with HDFS federation. Contributed by Mukul Kumar Singh.

+import org.apache.hadoop.fs.FileSystem;
+import org.apache.hadoop.fs.BlockStoragePolicySpi;
+import org.apache.hadoop.fs.FileStatus;
-import org.apache.hadoop.hdfs.DistributedFileSystem;
+import java.io.FileNotFoundException;
-      final DistributedFileSystem dfs = AdminHelper.getDFS(conf);
+      final FileSystem fs = FileSystem.get(conf);
-        Collection<BlockStoragePolicy> policies = dfs.getAllStoragePolicies();
+        Collection<? extends BlockStoragePolicySpi> policies =
+            fs.getAllStoragePolicies();
-        for (BlockStoragePolicy policy : policies) {
+        for (BlockStoragePolicySpi policy : policies) {
-      final DistributedFileSystem dfs = AdminHelper.getDFS(p.toUri(), conf);
+      final FileSystem fs = FileSystem.get(conf);
-        HdfsFileStatus status = dfs.getClient().getFileInfo(
-            Path.getPathWithoutSchemeAndAuthority(p).toString());
-        if (status == null) {
+        FileStatus status;
+        try {
+          status = fs.getFileStatus(p);
+        } catch (FileNotFoundException e) {
-        byte storagePolicyId = status.getStoragePolicy();
-        if (storagePolicyId == HdfsConstants.BLOCK_STORAGE_POLICY_ID_UNSPECIFIED) {
-          System.out.println("The storage policy of " + path + " is unspecified");
-          return 0;
-        }
-        Collection<BlockStoragePolicy> policies = dfs.getAllStoragePolicies();
-        for (BlockStoragePolicy policy : policies) {
-          if (policy.getId() == storagePolicyId) {
-            System.out.println("The storage policy of " + path + ":\n" + policy);
+
+        if (status instanceof HdfsFileStatus) {
+          byte storagePolicyId = ((HdfsFileStatus)status).getStoragePolicy();
+          if (storagePolicyId ==
+              HdfsConstants.BLOCK_STORAGE_POLICY_ID_UNSPECIFIED) {
+            System.out.println("The storage policy of " + path
+                + " is unspecified");
+          Collection<? extends BlockStoragePolicySpi> policies =
+              fs.getAllStoragePolicies();
+          for (BlockStoragePolicySpi policy : policies) {
+            if (policy instanceof BlockStoragePolicy) {
+              if (((BlockStoragePolicy)policy).getId() == storagePolicyId) {
+                System.out.println("The storage policy of " + path
+                    + ":\n" + policy);
+                return 0;
+              }
+            }
+          }
+        System.err.println(getName() + " is not supported for filesystem "
+            + fs.getScheme() + " on path " + path);
+        return 2;
-      System.err.println("Cannot identify the storage policy for " + path);
-      return 2;
-      final DistributedFileSystem dfs = AdminHelper.getDFS(p.toUri(), conf);
+      final FileSystem fs = FileSystem.get(conf);
-        dfs.setStoragePolicy(p, policyName);
+        fs.setStoragePolicy(p, policyName);
-      final DistributedFileSystem dfs = AdminHelper.getDFS(p.toUri(), conf);
+      final FileSystem fs = FileSystem.get(conf);
-        dfs.unsetStoragePolicy(p);
+        fs.unsetStoragePolicy(p);
