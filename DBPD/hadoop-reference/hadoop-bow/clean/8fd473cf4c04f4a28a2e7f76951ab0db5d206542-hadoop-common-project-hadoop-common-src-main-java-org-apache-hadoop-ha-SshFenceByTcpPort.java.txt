HADOOP-8191. SshFenceByTcpPort uses netcat incorrectly. Contributed by Todd Lipcon.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1303148 13f79535-47bb-0310-9956-ffa450edef68

-      // Use a dummy service when checking the arguments defined
-      // in the configuration are parseable.
-      new Args(new InetSocketAddress("localhost", 8020), argStr);
+      new Args(argStr);
-    Args args = new Args(serviceAddr, argsStr);
-
+    Args args = new Args(argsStr);
+    String host = serviceAddr.getHostName();
+    
-      session = createSession(args);
+      session = createSession(serviceAddr.getHostName(), args);
-    LOG.info("Connecting to " + args.host + "...");
+    LOG.info("Connecting to " + host + "...");
-      LOG.warn("Unable to connect to " + args.host
+      LOG.warn("Unable to connect to " + host
-    LOG.info("Connected to " + args.host);
+    LOG.info("Connected to " + host);
-      return doFence(session, args.targetPort);
+      return doFence(session, serviceAddr);
-  private Session createSession(Args args) throws JSchException {
+  private Session createSession(String host, Args args) throws JSchException {
-    Session session = jsch.getSession(args.user, args.host, args.sshPort);
+    Session session = jsch.getSession(args.user, host, args.sshPort);
-  private boolean doFence(Session session, int port) throws JSchException {
+  private boolean doFence(Session session, InetSocketAddress serviceAddr)
+      throws JSchException {
+    int port = serviceAddr.getPort();
-        rc = execCommand(session, "nc -z localhost 8020");
+        rc = execCommand(session, "nc -z " + serviceAddr.getHostName() +
+            " " + serviceAddr.getPort());
-    String host;
-    int targetPort;
-    public Args(InetSocketAddress serviceAddr, String arg) 
+    public Args(String arg) 
-      host = serviceAddr.getHostName();
-      targetPort = serviceAddr.getPort();
