HDFS-4563. Update namespace/diskspace usage after deleting snapshots.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1455396 13f79535-47bb-0310-9956-ffa450edef68

-  private void incrDeletedFileCount(int count) {
+  private void incrDeletedFileCount(long count) {
-        int filesDeleted = -1;
+        long filesDeleted = -1;
-          filesDeleted = rmdst.cleanSubtree(null,
-              dstIIP.getLatestSnapshot(), collectedBlocks);
+          filesDeleted = rmdst.cleanSubtree(null, dstIIP.getLatestSnapshot(),
+              collectedBlocks).get(Quota.NAMESPACE);
-      NSQuotaExceededException, SnapshotAccessControlException {
+      QuotaExceededException, SnapshotAccessControlException {
-      NSQuotaExceededException, SnapshotAccessControlException {
+      QuotaExceededException, SnapshotAccessControlException {
-      NSQuotaExceededException, SnapshotAccessControlException {
+      QuotaExceededException, SnapshotAccessControlException {
-      NSQuotaExceededException, SnapshotAccessControlException {
+      QuotaExceededException, SnapshotAccessControlException {
-      throws UnresolvedLinkException, NSQuotaExceededException,
+      throws UnresolvedLinkException, QuotaExceededException,
-      throws UnresolvedLinkException, NSQuotaExceededException,
+      throws UnresolvedLinkException, QuotaExceededException,
-    final int filesRemoved;
+    final long filesRemoved;
-      NSQuotaExceededException, SnapshotAccessControlException {
+      QuotaExceededException, SnapshotAccessControlException {
-    final int filesRemoved = deleteAllowed(inodesInPath, src)?
+    final long filesRemoved = deleteAllowed(inodesInPath, src)?
-  int unprotectedDelete(INodesInPath iip, BlocksMapUpdateInfo collectedBlocks,
-      long mtime) throws NSQuotaExceededException {
+  long unprotectedDelete(INodesInPath iip, BlocksMapUpdateInfo collectedBlocks,
+      long mtime) throws QuotaExceededException {
-    final int inodesRemoved = targetNode.cleanSubtree(null, latestSnapshot,
-        collectedBlocks);
+    final long inodesRemoved = targetNode.cleanSubtree(null, latestSnapshot,
+        collectedBlocks).get(Quota.NAMESPACE);
-        node.addSpaceConsumed(nsDelta, dsDelta);
+        node.addSpaceConsumed2Cache(nsDelta, dsDelta);
-      throws NSQuotaExceededException {
+      throws QuotaExceededException {
-      if (dirNode instanceof INodeDirectoryWithQuota) { 
+      if (dirNode instanceof INodeDirectoryWithQuota) {
+        INodeDirectoryWithQuota quotaNode = (INodeDirectoryWithQuota) dirNode;
+        Quota.Counts counts = null;
+        if (!quotaNode.isQuotaSet()) {
+          // dirNode must be an INodeDirectoryWithSnapshot whose quota has not
+          // been set yet
+          counts = quotaNode.computeQuotaUsage();
+        }
-        ((INodeDirectoryWithQuota)dirNode).setQuota(nsQuota, dsQuota);
-        if (!dirNode.isQuotaSet() && latest == null) {
+        quotaNode.setQuota(nsQuota, dsQuota);
+        if (quotaNode.isQuotaSet() && counts != null) {
+          quotaNode.setSpaceConsumed(counts.get(Quota.NAMESPACE),
+              counts.get(Quota.DISKSPACE));
+        } else if (!quotaNode.isQuotaSet() && latest == null) {
-          return dirNode.replaceSelf4INodeDirectory();
+          return quotaNode.replaceSelf4INodeDirectory();
-      Snapshot latest) throws NSQuotaExceededException {
+      Snapshot latest) throws QuotaExceededException {
-      throws UnresolvedLinkException, NSQuotaExceededException {
+      throws UnresolvedLinkException, QuotaExceededException {
-      long atime, boolean force, Snapshot latest)
-          throws NSQuotaExceededException {
+      long atime, boolean force, Snapshot latest) throws QuotaExceededException {
