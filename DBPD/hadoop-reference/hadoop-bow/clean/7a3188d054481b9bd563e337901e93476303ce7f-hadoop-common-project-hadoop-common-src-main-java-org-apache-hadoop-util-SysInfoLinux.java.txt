HADOOP-16282. Avoid FileStream to improve performance. Contributed by Ayush Saxena.

-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
+import java.nio.file.Files;
+import java.nio.file.Paths;
-          new FileInputStream(procfsMemFile), Charset.forName("UTF-8"));
+          Files.newInputStream(Paths.get(procfsMemFile)),
+          Charset.forName("UTF-8"));
-    } catch (FileNotFoundException f) {
+    } catch (IOException f) {
-      fReader = new InputStreamReader(
-          new FileInputStream(procfsCpuFile), Charset.forName("UTF-8"));
+      fReader =
+          new InputStreamReader(Files.newInputStream(Paths.get(procfsCpuFile)),
+              Charset.forName("UTF-8"));
-    } catch (FileNotFoundException f) {
+    } catch (IOException f) {
-          new FileInputStream(procfsStatFile), Charset.forName("UTF-8"));
+          Files.newInputStream(Paths.get(procfsStatFile)),
+          Charset.forName("UTF-8"));
-    } catch (FileNotFoundException f) {
+    } catch (IOException f) {
-          new FileInputStream(procfsNetFile), Charset.forName("UTF-8"));
+          Files.newInputStream(Paths.get(procfsNetFile)),
+          Charset.forName("UTF-8"));
-    } catch (FileNotFoundException f) {
+    } catch (IOException f) {
-            new FileInputStream(procfsDisksFile), Charset.forName("UTF-8")));
-    } catch (FileNotFoundException f) {
+          Files.newInputStream(Paths.get(procfsDisksFile)),
+          Charset.forName("UTF-8")));
+    } catch (IOException f) {
-            new FileInputStream(procfsDiskSectorFile),
+          Files.newInputStream(Paths.get(procfsDiskSectorFile)),
-    } catch (FileNotFoundException f) {
+    } catch (IOException f) {
