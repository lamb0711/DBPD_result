YARN-3293. Track and display capacity scheduler health metrics in web
UI. Contributed by Varun Vasudev

+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.AssignmentInformation;
-import org.apache.hadoop.yarn.util.resource.Resources;
+
-  
+  private boolean fulfilledReservation;
+  private final AssignmentInformation assignmentInformation;
+
+    this(resource, type, null, null, false, false);
+  }
+
+  public CSAssignment(FiCaSchedulerApp application,
+      RMContainer excessReservation) {
+    this(excessReservation.getContainer().getResource(), NodeType.NODE_LOCAL,
+      excessReservation, application, false, false);
+  }
+
+  public CSAssignment(boolean skipped) {
+    this(Resource.newInstance(0, 0), NodeType.NODE_LOCAL, null, null, skipped,
+      false);
+  }
+
+  public CSAssignment(Resource resource, NodeType type,
+      RMContainer excessReservation, FiCaSchedulerApp application,
+      boolean skipped, boolean fulfilledReservation) {
-    this.application = null;
-    this.excessReservation = null;
-    this.skipped = false;
-  }
-  
-  public CSAssignment(FiCaSchedulerApp application, RMContainer excessReservation) {
-    this.resource = excessReservation.getContainer().getResource();
-    this.type = NodeType.NODE_LOCAL;
-    this.application = application;
-    this.skipped = false;
-  }
-  
-  public CSAssignment(boolean skipped) {
-    this.resource = Resources.createResource(0, 0);
-    this.type = NodeType.NODE_LOCAL;
-    this.application = null;
-    this.excessReservation = null;
+    this.application = application;
+    this.fulfilledReservation = fulfilledReservation;
+    this.assignmentInformation = new AssignmentInformation();
-    return resource.getMemory() + ":" + type;
+    String ret = "resource:" + resource.toString();
+    ret += "; type:" + type;
+    ret += "; excessReservation:" + excessReservation;
+    ret +=
+        "; applicationid:"
+            + (application != null ? application.getApplicationId().toString()
+                : "null");
+    ret += "; skipped:" + skipped;
+    ret += "; fulfilled reservation:" + fulfilledReservation;
+    ret +=
+        "; allocations(count/resource):"
+            + assignmentInformation.getNumAllocations() + "/"
+            + assignmentInformation.getAllocated().toString();
+    ret +=
+        "; reservations(count/resource):"
+            + assignmentInformation.getNumReservations() + "/"
+            + assignmentInformation.getReserved().toString();
+    return ret;
+  }
+  
+  public void setFulfilledReservation(boolean fulfilledReservation) {
+    this.fulfilledReservation = fulfilledReservation;
+  }
+
+  public boolean isFulfilledReservation() {
+    return this.fulfilledReservation;
+  }
+  
+  public AssignmentInformation getAssignmentInformation() {
+    return this.assignmentInformation;
