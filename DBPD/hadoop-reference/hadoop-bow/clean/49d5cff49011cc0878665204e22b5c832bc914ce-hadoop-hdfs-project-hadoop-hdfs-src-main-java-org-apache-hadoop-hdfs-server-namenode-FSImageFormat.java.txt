HDFS-8559. Erasure Coding: fix non-protobuf fsimage for striped blocks. (Jing Zhao via yliu)

-          if (NameNodeLayoutVersion.supports(
-              NameNodeLayoutVersion.Feature.ERASURE_CODING, imgVersion)) {
-            final long maxStripedBlockId = in.readLong();
-            namesystem.getBlockIdManager().setLastAllocatedStripedBlockId(
-                maxStripedBlockId);
-          }
-    final boolean isStriped = NameNodeLayoutVersion.supports(
-            NameNodeLayoutVersion.Feature.ERASURE_CODING, imgVersion)
-            && (in.readBoolean());
-    // TODO: ECSchema can be restored from persisted file (HDFS-7859).
-    final ECSchema schema = isStriped ?
-        ErasureCodingSchemaManager.getSystemDefaultSchema() : null;
-      Block[] blocks;
-      if (isStriped) {
-        blocks = new Block[numBlocks];
-        for (int j = 0; j < numBlocks; j++) {
-          blocks[j] = new BlockInfoStriped(new Block(), schema);
-          blocks[j].readFields(in);
-        }
-      } else {
-        blocks = new BlockInfoContiguous[numBlocks];
-        for (int j = 0; j < numBlocks; j++) {
-          blocks[j] = new BlockInfoContiguous(replication);
-          blocks[j].readFields(in);
-        }
+      Block[] blocks = new BlockInfoContiguous[numBlocks];
+      for (int j = 0; j < numBlocks; j++) {
+        blocks[j] = new BlockInfoContiguous(replication);
+        blocks[j].readFields(in);
-              if (isStriped){
-                BlockInfoStriped lastStripedBlk = (BlockInfoStriped) lastBlk;
-                blocks[blocks.length - 1]
-                        = new BlockInfoStripedUnderConstruction(lastBlk,
-                                lastStripedBlk.getSchema());
-              } else {
-                blocks[blocks.length - 1]
-                        = new BlockInfoContiguousUnderConstruction(lastBlk,
-                                replication);
-              }
+              blocks[blocks.length - 1] =
+                  new BlockInfoContiguousUnderConstruction(lastBlk, replication);
-      INodeFile file;
-      if (isStriped) {
-        file = new INodeFile(inodeId, localName, permissions, modificationTime,
-            atime, new BlockInfoContiguous[0], (short) 0, blockSize);
-        file.addStripedBlocksFeature();
-        for (Block block : blocks) {
-          file.getStripedBlocksFeature().addBlock((BlockInfoStriped) block);
-        }
-      } else {
-        file = new INodeFile(inodeId, localName, permissions,
-            modificationTime, atime, (BlockInfoContiguous[]) blocks,
-            replication, blockSize);
-      }
+      INodeFile file = new INodeFile(inodeId, localName, permissions,
+          modificationTime, atime, (BlockInfoContiguous[]) blocks,
+          replication, blockSize);
-        out.writeLong(sourceNamesystem.getBlockIdManager().getLastAllocatedStripedBlockId());
