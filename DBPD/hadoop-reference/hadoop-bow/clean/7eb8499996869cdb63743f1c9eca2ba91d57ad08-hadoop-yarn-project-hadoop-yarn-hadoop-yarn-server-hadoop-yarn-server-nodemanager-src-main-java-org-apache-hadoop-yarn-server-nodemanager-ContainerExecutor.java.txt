YARN-7226. Whitelisted variables do not support delayed variable expansion. Contributed by Jason Lowe

-import java.util.HashSet;
-import java.util.Set;
+  private String[] whitelistVars;
+    if (conf != null) {
+      whitelistVars = conf.get(YarnConfiguration.NM_ENV_WHITELIST,
+          YarnConfiguration.DEFAULT_NM_ENV_WHITELIST).split(",");
+    }
+    updateEnvForWhitelistVars(environment);
+
-    Set<String> whitelist = new HashSet<>();
-
-    String[] nmWhiteList = conf.get(YarnConfiguration.NM_ENV_WHITELIST,
-        YarnConfiguration.DEFAULT_NM_ENV_WHITELIST).split(",");
-    for (String param : nmWhiteList) {
-      whitelist.add(param);
-    }
-        if (!whitelist.contains(env.getKey())) {
-          sb.env(env.getKey(), env.getValue());
-        } else {
-          sb.whitelistedEnv(env.getKey(), env.getValue());
-        }
+        sb.env(env.getKey(), env.getValue());
+   * Propagate variables from the nodemanager's environment into the
+   * container's environment if unspecified by the container.
+   * @param env the environment to update
+   * @see org.apache.hadoop.yarn.conf.YarnConfiguration#NM_ENV_WHITELIST
+   */
+  protected void updateEnvForWhitelistVars(Map<String, String> env) {
+    for(String var : whitelistVars) {
+      if (!env.containsKey(var)) {
+        String val = getNMEnvVar(var);
+        if (val != null) {
+          env.put(var, val);
+        }
+      }
+    }
+  }
+
+  @VisibleForTesting
+  protected String getNMEnvVar(String varname) {
+    return System.getenv(varname);
+  }
+
+  /**
