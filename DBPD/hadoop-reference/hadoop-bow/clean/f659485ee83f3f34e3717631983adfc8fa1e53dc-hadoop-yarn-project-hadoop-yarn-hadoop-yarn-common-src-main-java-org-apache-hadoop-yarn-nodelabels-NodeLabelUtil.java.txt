YARN-8925. Updating distributed node attributes only when necessary. Contributed by Tao Yang.

+import java.util.Objects;
+  private static final Pattern ATTRIBUTE_NAME_PATTERN =
+      Pattern.compile("^[0-9a-zA-Z][0-9a-zA-Z-_]*");
+  public static void checkAndThrowAttributeName(String attributeName)
+      throws IOException {
+    if (attributeName == null || attributeName.isEmpty()
+        || attributeName.length() > MAX_LABEL_LENGTH) {
+      throw new IOException(
+          "attribute name added is empty or exceeds " + MAX_LABEL_LENGTH
+              + " character(s)");
+    }
+    attributeName = attributeName.trim();
+
+    boolean match = ATTRIBUTE_NAME_PATTERN.matcher(attributeName).matches();
+
+    if (!match) {
+      throw new IOException("attribute name should only contains "
+          + "{0-9, a-z, A-Z, -, _} and should not started with {-,_}"
+          + ", now it is= " + attributeName);
+    }
+  }
+
-        checkAndThrowLabelName(attributeKey.getAttributeName());
+        checkAndThrowAttributeName(attributeKey.getAttributeName());
+        // Verify attribute value format.
+        checkAndThrowAttributeValue(nodeAttribute.getAttributeValue());
+
+  /**
+   * Are these two input node attributes the same.
+   * @return true if they are the same
+   */
+  public static boolean isNodeAttributesEquals(
+      Set<NodeAttribute> leftNodeAttributes,
+      Set<NodeAttribute> rightNodeAttributes) {
+    if (leftNodeAttributes == null && rightNodeAttributes == null) {
+      return true;
+    } else if (leftNodeAttributes == null || rightNodeAttributes == null
+        || leftNodeAttributes.size() != rightNodeAttributes.size()) {
+      return false;
+    }
+    return leftNodeAttributes.stream()
+        .allMatch(e -> isNodeAttributeIncludes(rightNodeAttributes, e));
+  }
+
+  private static boolean isNodeAttributeIncludes(
+      Set<NodeAttribute> nodeAttributes, NodeAttribute checkNodeAttribute) {
+    return nodeAttributes.stream().anyMatch(
+        e -> e.equals(checkNodeAttribute) && Objects
+            .equals(e.getAttributeValue(),
+                checkNodeAttribute.getAttributeValue()));
+  }
