HDDS-1620. Implement Volume Write Requests to use Cache and DoubleBuffer. (#884)


-import org.apache.hadoop.ozone.om.exceptions.OMException;
-    OMRequest newOmRequest = null;
-    try {
-      switch (omRequest.getCmdType()) {
-      case CreateVolume:
-      case SetVolumeProperty:
-      case DeleteVolume:
-        newOmRequest = handler.handleStartTransaction(omRequest);
-        break;
-      case AllocateBlock:
-        return handleAllocateBlock(raftClientRequest, omRequest);
-      case CreateKey:
-        return handleCreateKeyRequest(raftClientRequest, omRequest);
-      case InitiateMultiPartUpload:
-        return handleInitiateMultipartUpload(raftClientRequest, omRequest);
-      default:
-        return TransactionContext.newBuilder()
-            .setClientRequest(raftClientRequest)
-            .setStateMachine(this)
-            .setServerRole(RaftProtos.RaftPeerRole.LEADER)
-            .setLogData(raftClientRequest.getMessage().getContent())
-            .build();
-      }
-    } catch (IOException ex) {
-      TransactionContext transactionContext = TransactionContext.newBuilder()
+    switch (omRequest.getCmdType()) {
+    case AllocateBlock:
+      return handleAllocateBlock(raftClientRequest, omRequest);
+    case CreateKey:
+      return handleCreateKeyRequest(raftClientRequest, omRequest);
+    case InitiateMultiPartUpload:
+      return handleInitiateMultipartUpload(raftClientRequest, omRequest);
+    default:
+      return TransactionContext.newBuilder()
+          .setLogData(raftClientRequest.getMessage().getContent())
-      if (ex instanceof OMException) {
-        IOException ioException =
-            new IOException(ex.getMessage() + STATUS_CODE +
-                ((OMException) ex).getResult());
-        transactionContext.setException(ioException);
-      } else {
-        transactionContext.setException(ex);
-      }
-      LOG.error("Exception in startTransaction for cmdType " +
-          omRequest.getCmdType(), ex);
-      return transactionContext;
-    TransactionContext transactionContext = TransactionContext.newBuilder()
-        .setClientRequest(raftClientRequest)
-        .setStateMachine(this)
-        .setServerRole(RaftProtos.RaftPeerRole.LEADER)
-        .setLogData(OMRatisHelper.convertRequestToByteString(newOmRequest))
-        .build();
-    return transactionContext;
