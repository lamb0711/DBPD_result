YARN-4766. NM should not aggregate logs older than the retention policy (haibochen via rkanter)

+
+    /**
+     * The retention context to determine if log files are older than
+     * the retention policy configured.
+     */
+    private final LogRetentionContext logRetentionContext;
+    /**
+     * The set of log files that are older than retention policy that will
+     * not be uploaded but ready for deletion.
+     */
+    private final Set<File> obseleteRetentionLogFiles = new HashSet<File>();
+
-      this(rootLogDirs, containerId, user, null, new HashSet<String>(), true);
+      this(rootLogDirs, containerId, user, null, new HashSet<String>(),
+          null, true);
-        Set<String> alreadyUploadedLogFiles, boolean appFinished) {
+        Set<String> alreadyUploadedLogFiles,
+        LogRetentionContext retentionContext, boolean appFinished) {
+      this.logRetentionContext = retentionContext;
-    private Set<File> getPendingLogFilesToUploadForThisContainer() {
+    @VisibleForTesting
+    public Set<File> getPendingLogFilesToUploadForThisContainer() {
+      // if log files are older than retention policy, do not upload them.
+      // but schedule them for deletion.
+      if(logRetentionContext != null && !logRetentionContext.shouldRetainLog()){
+        obseleteRetentionLogFiles.addAll(candidates);
+        candidates.clear();
+        return candidates;
+      }
+
+
+    public Set<Path> getObseleteRetentionLogFiles() {
+      Set<Path> path = new HashSet<Path>();
+      for(File file: this.obseleteRetentionLogFiles) {
+        path.add(new Path(file.getAbsolutePath()));
+      }
+      return path;
+    }
+
+   * A context for log retention to determine if files are older than
+   * the retention policy configured in YarnConfiguration.
+   */
+  public static class LogRetentionContext {
+    /**
+     * The time used with logRetentionMillis, to determine ages of
+     * log files and if files need to be uploaded.
+     */
+    private final long logInitedTimeMillis;
+    /**
+     * The numbers of milli seconds since a log file is created to determine
+     * if we should upload it. -1 if disabled.
+     * see YarnConfiguration.LOG_AGGREGATION_RETAIN_SECONDS for details.
+     */
+    private final long logRetentionMillis;
+
+    public LogRetentionContext(long logInitedTimeMillis, long
+        logRetentionMillis) {
+      this.logInitedTimeMillis = logInitedTimeMillis;
+      this.logRetentionMillis = logRetentionMillis;
+    }
+
+    public boolean isDisabled() {
+      return logInitedTimeMillis < 0 || logRetentionMillis < 0;
+    }
+
+    public boolean shouldRetainLog() {
+      return isDisabled() ||
+          System.currentTimeMillis() - logInitedTimeMillis < logRetentionMillis;
+    }
+  }
+
+  /**
