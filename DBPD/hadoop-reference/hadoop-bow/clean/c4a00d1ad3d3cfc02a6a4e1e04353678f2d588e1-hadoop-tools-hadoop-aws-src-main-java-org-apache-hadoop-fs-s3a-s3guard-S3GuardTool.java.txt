HADOOP-15843. s3guard bucket-info command to not print a stack trace on bucket-not-found.

Contributed by Adam Antal.

+
+  public static final String E_NO_METASTORE_OR_FILESYSTEM
+      = "No metastore or filesystem specified";
+
-    Configuration conf;
-    if (filesystem == null) {
-      conf = getConf();
-    } else {
-      conf = filesystem.getConf();
-    }
+    final boolean hasFileSystem = filesystem != null;
+    final Configuration conf = hasFileSystem ? filesystem.getConf() : getConf();
+      if (!hasFileSystem) {
+        // command didn't declare a metadata store URI or a bucket.
+        // to avoid problems related to picking up a shared table for actions
+        // line init and destroy (HADOOP-15843), this is rejected
+        printHelp(this);
+        throw usageError(E_NO_METASTORE_OR_FILESYSTEM);
+      }
-    if (filesystem == null) {
-      getStore().initialize(conf);
-    } else {
+    if (hasFileSystem) {
+    } else {
+      getStore().initialize(conf);
-  private static void printHelp() {
-    if (command == null) {
+  private static void printHelp(S3GuardTool tool) {
+    if (tool == null) {
-      errorln("Usage: hadoop " + command.getUsage());
+      errorln("Usage: hadoop " + tool.getUsage());
-
+
+  /**
+   * Build the exception to raise on a usage error
+   * @param format string format
+   * @param args optional arguments for the string
+   * @return a new exception to throw
+   */
+  protected static ExitUtil.ExitException usageError(
+      String format, Object...args) {
+    return new ExitUtil.ExitException(E_USAGE, String.format(format, args));
+  }
+
-      printHelp();
-      throw new ExitUtil.ExitException(E_USAGE, "No arguments provided");
+      printHelp(null);
+      throw usageError("No arguments provided");
-      printHelp();
+      printHelp(null);
-      printHelp();
+      printHelp(command);
+    } catch (FileNotFoundException e) {
+      // bucket doesn't exist or similar.
+      // skip the stack trace and choose the return code of 44, "404"
+      errorln(e.toString());
+      LOG.debug("Not found:", e);
+      exit(EXIT_NOT_FOUND, e.toString());
