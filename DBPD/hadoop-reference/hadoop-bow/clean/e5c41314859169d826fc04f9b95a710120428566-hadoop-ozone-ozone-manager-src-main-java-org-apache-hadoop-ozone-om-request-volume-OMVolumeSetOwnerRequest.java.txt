HDDS-1856. Make required changes for Non-HA to use new HA code in OM. (#1174)


+import org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerDoubleBufferHelper;
-      long transactionLogIndex) {
+      long transactionLogIndex,
+      OzoneManagerDoubleBufferHelper ozoneManagerDoubleBufferHelper) {
+
+    boolean acquiredUserLocks = false;
+    boolean acquiredVolumeLock = false;
+    IOException exception = null;
+    OMMetadataManager omMetadataManager = ozoneManager.getMetadataManager();
+    String oldOwner = null;
+    OMClientResponse omClientResponse = null;
-    } catch (IOException ex) {
-      LOG.error("Changing volume ownership failed for user:{} volume:{}",
-          newOwner, volume);
-      omMetrics.incNumVolumeUpdateFails();
-      auditLog(auditLogger, buildAuditMessage(OMAction.SET_OWNER, auditMap,
-          ex, userInfo));
-      return new OMVolumeSetOwnerResponse(null, null, null, null,
-          createErrorOMResponse(omResponse, ex));
-    }
-    long maxUserVolumeCount = ozoneManager.getMaxUserVolumeCount();
-    OMMetadataManager omMetadataManager = ozoneManager.getMetadataManager();
-    String dbVolumeKey = omMetadataManager.getVolumeKey(volume);
-    String oldOwner = null;
-    OzoneManagerProtocolProtos.VolumeList oldOwnerVolumeList = null;
-    OzoneManagerProtocolProtos.VolumeList newOwnerVolumeList = null;
-    OmVolumeArgs omVolumeArgs = null;
-    IOException exception = null;
-    boolean acquiredUserLocks = false;
+      long maxUserVolumeCount = ozoneManager.getMaxUserVolumeCount();
-    omMetadataManager.getLock().acquireLock(VOLUME_LOCK, volume);
-    try {
+      String dbVolumeKey = omMetadataManager.getVolumeKey(volume);
+
+      OzoneManagerProtocolProtos.VolumeList oldOwnerVolumeList = null;
+      OzoneManagerProtocolProtos.VolumeList newOwnerVolumeList = null;
+      OmVolumeArgs omVolumeArgs = null;
+
+
+
+      acquiredVolumeLock = omMetadataManager.getLock().acquireLock(VOLUME_LOCK,
+          volume);
+
+      omResponse.setSetVolumePropertyResponse(
+          SetVolumePropertyResponse.newBuilder().build());
+      omClientResponse = new OMVolumeSetOwnerResponse(oldOwner,
+          oldOwnerVolumeList, newOwnerVolumeList, omVolumeArgs,
+          omResponse.build());
+
+      omClientResponse = new OMVolumeSetOwnerResponse(null, null, null, null,
+          createErrorOMResponse(omResponse, exception));
+      if (omClientResponse != null) {
+        omClientResponse.setFlushFuture(
+            ozoneManagerDoubleBufferHelper.add(omClientResponse,
+                transactionLogIndex));
+      }
-      omMetadataManager.getLock().acquireLock(VOLUME_LOCK, volume);
+      if (acquiredVolumeLock) {
+        omMetadataManager.getLock().acquireLock(VOLUME_LOCK, volume);
+      }
-      omResponse.setSetVolumePropertyResponse(
-          SetVolumePropertyResponse.newBuilder().build());
-      return new OMVolumeSetOwnerResponse(oldOwner, oldOwnerVolumeList,
-          newOwnerVolumeList, omVolumeArgs, omResponse.build());
-      return new OMVolumeSetOwnerResponse(null, null, null, null,
-          createErrorOMResponse(omResponse, exception));
+    return omClientResponse;
+
