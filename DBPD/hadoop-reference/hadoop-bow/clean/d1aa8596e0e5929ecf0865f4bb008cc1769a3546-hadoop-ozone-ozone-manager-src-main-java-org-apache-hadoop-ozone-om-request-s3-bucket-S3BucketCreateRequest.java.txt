HDDS-1975. Implement default acls for bucket/volume/key for OM HA code. (#1315)


+import java.util.List;
+import org.apache.hadoop.ozone.OzoneAcl;
+import org.apache.hadoop.security.UserGroupInformation;
-import org.apache.hadoop.ozone.security.acl.IAccessAuthorizer;
-import org.apache.hadoop.ozone.security.acl.OzoneObj;
-      // check Acl
-      if (ozoneManager.getAclsEnabled()) {
-        checkAcls(ozoneManager, OzoneObj.ResourceType.BUCKET,
-            OzoneObj.StoreType.S3, IAccessAuthorizer.ACLType.CREATE, null,
-            s3BucketName, null);
-      }
+      // TODO to support S3 ACL later.
-          s3BucketName,
+          s3BucketName, userName,
-      String volumeName, String s3BucketName, long creationTime,
-      long transactionLogIndex) throws IOException {
+      String volumeName, String s3BucketName, String userName,
+      long creationTime, long transactionLogIndex) throws IOException {
-        omBucketInfo = createOmBucketInfo(volumeName, s3BucketName,
+        omBucketInfo = createOmBucketInfo(volumeName, s3BucketName, userName,
-      long creationTime) {
-    return OmVolumeArgs.newBuilder()
+      long creationTime) throws IOException {
+    OmVolumeArgs.Builder builder = OmVolumeArgs.newBuilder()
-        .setCreationTime(creationTime).build();
+        .setCreationTime(creationTime);
+
+    // Set default acls.
+    for (OzoneAcl acl : getDefaultAcls(userName)) {
+      builder.addOzoneAcls(OzoneAcl.toProtobuf(acl));
+    }
+
+    return builder.build();
-      String s3BucketName, long creationTime) {
+      String s3BucketName, String userName, long creationTime) {
-    return OmBucketInfo.newBuilder().setVolumeName(volumeName)
-        .setBucketName(s3BucketName).setIsVersionEnabled(Boolean.FALSE)
-        .setStorageType(StorageType.DEFAULT).setCreationTime(creationTime)
-        .build();
+    OmBucketInfo.Builder builder =
+        OmBucketInfo.newBuilder().setVolumeName(volumeName)
+            .setBucketName(s3BucketName).setIsVersionEnabled(Boolean.FALSE)
+            .setStorageType(StorageType.DEFAULT).setCreationTime(creationTime);
+
+    // Set default acls.
+    builder.setAcls(getDefaultAcls(userName));
+
+    return builder.build();
+
+  /**
+   * Get default acls.
+   * */
+  private List<OzoneAcl> getDefaultAcls(String userName) {
+    UserGroupInformation ugi = createUGI();
+    return OzoneAcl.parseAcls("user:" + (ugi == null ? userName :
+        ugi.getUserName()) + ":a,user:" + S3_ADMIN_NAME + ":a");
+  }
