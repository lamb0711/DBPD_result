HDFS-5096. Automatically cache new data added to a cached path (contributed by Colin Patrick McCabe)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1532924 13f79535-47bb-0310-9956-ffa450edef68

-  private final CacheReplicationManager cacheReplicationManager;
-      this.cacheManager = new CacheManager(this, dir, conf);
-      this.cacheReplicationManager = new CacheReplicationManager(this,
-          blockManager, blockManager.getDatanodeManager(), this, conf);
+      writeLock();
+      try {
+        this.cacheManager = new CacheManager(this, conf, blockManager);
+      } finally {
+        writeUnlock();
+      }
-      cacheReplicationManager.activate();
-      if (cacheReplicationManager != null) cacheReplicationManager.close();
+      cacheManager.deactivate();
-        cacheReplicationManager.clearQueues();
-
+      cacheManager.activate();
+      blockManager.getDatanodeManager().setSendCachingCommands(true);
+      cacheManager.deactivate();
+      blockManager.getDatanodeManager().setSendCachingCommands(false);
-      // Set caching information for the block list
-      for (LocatedBlock lb: blocks.getLocatedBlocks()) {
-        cacheReplicationManager.setCachedLocations(lb);
-      }
-        return blockManager.createLocatedBlocks(inode.getBlocks(), fileSize,
+        LocatedBlocks blocks =
+          blockManager.createLocatedBlocks(inode.getBlocks(), fileSize,
+        // Set caching information for the located blocks.
+        for (LocatedBlock lb: blocks.getLocatedBlocks()) {
+          cacheManager.setCachedLocations(lb);
+        }
+        return blocks;
-  boolean setCacheReplicationInt(String src, final short replication)
-      throws IOException {
-    final boolean isFile;
-    FSPermissionChecker pc = getPermissionChecker();
-    checkOperation(OperationCategory.WRITE);
-    byte[][] pathComponents = FSDirectory.getPathComponentsForReservedPath(src);
-    writeLock();
-    try {
-      checkOperation(OperationCategory.WRITE);
-      if (isInSafeMode()) {
-        throw new SafeModeException("Cannot set replication for " + src, safeMode);
-      }
-      src = FSDirectory.resolvePath(src, pathComponents, dir);
-      if (isPermissionEnabled) {
-        checkPathAccess(pc, src, FsAction.WRITE);
-      }
-
-      final short[] blockRepls = new short[2]; // 0: old, 1: new
-      final Block[] blocks = dir.setCacheReplication(src, replication,
-          blockRepls);
-      isFile = (blocks != null);
-      if (isFile) {
-        cacheReplicationManager.setCacheReplication(blockRepls[0],
-            blockRepls[1], src, blocks);
-      }
-    } finally {
-      writeUnlock();
-    }
-
-    getEditLog().logSync();
-    if (isFile) {
-      logAuditEvent(true, "setCacheReplication", src);
-    }
-    return isFile;
-  }
-
-  /** @return the cache replication manager. */
-  public CacheReplicationManager getCacheReplicationManager() {
-    return cacheReplicationManager;
-  }
