HDFS-12450. Fixing TestNamenodeHeartbeat and support non-HA. Contributed by Inigo Goiri.

(cherry picked from commit 928d1e87f9dbe64f89b858ccc1780723f3af58e7)

-    super(NamenodeHeartbeatService.class.getSimpleName() + " " + nsId + " " +
-        nnId);
+    super(NamenodeHeartbeatService.class.getSimpleName() +
+        (nsId == null ? "" : " " + nsId) +
+        (nnId == null ? "" : " " + nnId));
+    String nnDesc = nameserviceId;
+      nnDesc += "-" + namenodeId;
-    LOG.info("{}-{} RPC address: {}",
-        nameserviceId, namenodeId, rpcAddress);
+    LOG.info("{} RPC address: {}", nnDesc, rpcAddress);
-      LOG.error("Cannot locate RPC service address for NN {}-{}, " +
-          "using RPC address {}", nameserviceId, namenodeId, this.rpcAddress);
+      LOG.error("Cannot locate RPC service address for NN {}, " +
+          "using RPC address {}", nnDesc, this.rpcAddress);
-    LOG.info("{}-{} Service RPC address: {}",
-        nameserviceId, namenodeId, serviceAddress);
+    LOG.info("{} Service RPC address: {}", nnDesc, serviceAddress);
-    LOG.info("{}-{} Lifeline RPC address: {}",
-        nameserviceId, namenodeId, lifelineAddress);
+    LOG.info("{} Lifeline RPC address: {}", nnDesc, lifelineAddress);
-    LOG.info("{}-{} Web address: {}", nameserviceId, namenodeId, webAddress);
+    LOG.info("{} Web address: {}", nnDesc, webAddress);
-    if (nsId != null && nnId != null) {
+    if (nsId != null || nnId != null) {
-        if (rpcAddresses.containsKey(nnId)) {
-          InetSocketAddress sockAddr = rpcAddresses.get(nnId);
+        InetSocketAddress sockAddr = null;
+        if (nnId != null) {
+          sockAddr = rpcAddresses.get(nnId);
+        } else if (rpcAddresses.size() == 1) {
+          // Get the only namenode in the namespace
+          sockAddr = rpcAddresses.values().iterator().next();
+        }
+        if (sockAddr != null) {
-          ret = addr.getHostAddress() + ":" + sockAddr.getPort();
+          ret = addr.getHostName() + ":" + sockAddr.getPort();
-          // Failed to fetch HA status, ignoring failure
-          LOG.error("Cannot fetch HA status for {}: {}",
-              getNamenodeDesc(), e.getMessage(), e);
+          if (e.getMessage().startsWith("HA for namenode is not enabled")) {
+            LOG.error("HA for {} is not enabled", getNamenodeDesc());
+            localTarget = null;
+          } else {
+            // Failed to fetch HA status, ignoring failure
+            LOG.error("Cannot fetch HA status for {}: {}",
+                getNamenodeDesc(), e.getMessage(), e);
+          }
