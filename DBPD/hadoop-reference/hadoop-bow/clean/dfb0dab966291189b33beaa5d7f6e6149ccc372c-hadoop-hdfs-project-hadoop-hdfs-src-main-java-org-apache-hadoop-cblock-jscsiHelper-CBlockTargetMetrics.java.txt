HDFS-11694. Block Storage: Add Support for 2 BlockIDBuffers and also for periodic flush of BlockIDBuffer. Contributed by Mukul Kumar Singh

+  @Metric private MutableCounterLong numDirectBlockWrites;
-  @Metric private MutableCounterLong numDirectBlockWrites;
-  @Metric private MutableCounterLong numBlockBufferFlush;
-  @Metric private MutableCounterLong numDirtyLogBlockUpdated;
+  @Metric private MutableCounterLong numBlockBufferFlushCompleted;
+  @Metric private MutableCounterLong numBlockBufferFlushTriggered;
+  @Metric private MutableCounterLong numBlockBufferUpdates;
-  @Metric private MutableCounterLong numFailedDirtyBlockFlushes;
+  @Metric private MutableCounterLong numIllegalDirtyLogFiles;
+  @Metric private MutableCounterLong numFailedDirtyLogFileDeletes;
+  @Metric private MutableCounterLong numFailedBlockBufferFlushes;
+  @Metric private MutableCounterLong numInterruptedBufferWaits;
-  public void incNumBlockBufferFlush() {
-    numBlockBufferFlush.incr();
+  public void incNumBlockBufferFlushCompleted() {
+    numBlockBufferFlushCompleted.incr();
+  }
+
+  public void incNumBlockBufferFlushTriggered() {
+    numBlockBufferFlushTriggered.incr();
-  public void incNumDirtyLogBlockUpdated() {
-    numDirtyLogBlockUpdated.incr();
+  public void incNumBlockBufferUpdates() {
+    numBlockBufferUpdates.incr();
-  public void incNumFailedDirtyBlockFlushes() {
-    numFailedDirtyBlockFlushes.incr();
+  public void incNumFailedBlockBufferFlushes() {
+    numFailedBlockBufferFlushes.incr();
+  }
+
+  public void incNumInterruptedBufferWaits() {
+    numInterruptedBufferWaits.incr();
+  }
+
+  public void incNumIllegalDirtyLogFiles() {
+    numIllegalDirtyLogFiles.incr();
+  }
+
+  public void incNumFailedDirtyLogFileDeletes() {
+    numFailedDirtyLogFileDeletes.incr();
-  public long getNumBlockBufferFlush() {
-    return numBlockBufferFlush.value();
+  public long getNumBlockBufferFlushCompleted() {
+    return numBlockBufferFlushCompleted.value();
+  }
+
+  @VisibleForTesting
+  public long getNumBlockBufferFlushTriggered() {
+    return numBlockBufferFlushTriggered.value();
-  public long getNumDirtyLogBlockUpdated() {
-    return numDirtyLogBlockUpdated.value();
+  public long getNumBlockBufferUpdates() {
+    return numBlockBufferUpdates.value();
-  public long getNumFailedDirtyBlockFlushes() {
-    return numFailedDirtyBlockFlushes.value();
+  public long getNumFailedBlockBufferFlushes() {
+    return numFailedBlockBufferFlushes.value();
+  }
+
+  @VisibleForTesting
+  public long getNumInterruptedBufferWaits() {
+    return numInterruptedBufferWaits.value();
+  }
+
+  @VisibleForTesting
+  public long getNumIllegalDirtyLogFiles() {
+    return numIllegalDirtyLogFiles.value();
+  }
+
+  @VisibleForTesting
+  public long getNumFailedDirtyLogFileDeletes() {
+    return numFailedDirtyLogFileDeletes.value();
