HDFS-9180. Update excluded DataNodes in DFSStripedOutputStream based on failures in data streamers. Contributed by Jing Zhao.

-  private BlockConstructionStage stage;  // block construction stage
+  private volatile BlockConstructionStage stage;  // block construction stage
-          LOG.debug("Allocating new block");
+          LOG.debug("Allocating new block: " + this);
-      LOG.debug("Waiting for ack for: {}", seqno);
+      LOG.debug("{} waiting for ack for: {}", this, seqno);
+    LOG.debug("start process datanode/external error, {}", this);
-    // check number of datanodes
+    // Check number of datanodes. Note that if there is no healthy datanode,
+    // this must be internal error because we mark external error in striped
+    // outputstream only when all the streamers are in the DATA_STREAMING stage
-          + src + "\" - Aborting...";
+          + src + "\" - Aborting..." + this;
-  private int getNumBlockWriteRetry() {
-    return dfsClient.getConf().getNumBlockWriteRetry();
+  DatanodeInfo[] getExcludedNodes() {
+    return excludedNodes.getAllPresent(excludedNodes.asMap().keySet())
+            .keySet().toArray(new DatanodeInfo[0]);
-      DatanodeInfo[] excluded =
-          excludedNodes.getAllPresent(excludedNodes.asMap().keySet())
-              .keySet()
-              .toArray(new DatanodeInfo[0]);
+      DatanodeInfo[] excluded = getExcludedNodes();
