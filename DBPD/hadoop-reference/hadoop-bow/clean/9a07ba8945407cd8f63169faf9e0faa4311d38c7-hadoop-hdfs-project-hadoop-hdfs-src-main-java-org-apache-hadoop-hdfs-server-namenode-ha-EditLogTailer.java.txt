HDFS-2709. Appropriately handle error conditions in EditLogTailer. Contributed by Aaron T. Myers.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1228390 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.namenode.EditLogInputException;
-  private final FSEditLog editLog;
+  private FSEditLog editLog;
-  private volatile Throwable lastError = null;
+  private volatile Runtime runtime = Runtime.getRuntime();
-  public Throwable getLastError() {
-    return lastError;
+  FSEditLog getEditLog() {
+    return editLog;
+  }
+  
+  @VisibleForTesting
+  void setEditLog(FSEditLog editLog) {
+    this.editLog = editLog;
+  }
+  
+  @VisibleForTesting
+  synchronized void setRuntime(Runtime runtime) {
+    this.runtime = runtime;
-      Collection<EditLogInputStream> streams = editLog
-          .selectInputStreams(lastTxnId + 1, 0, false);
+      Collection<EditLogInputStream> streams;
+      try {
+        streams = editLog.selectInputStreams(lastTxnId + 1, 0, false);
+      } catch (IOException ioe) {
+        // This is acceptable. If we try to tail edits in the middle of an edits
+        // log roll, i.e. the last one has been finalized but the new inprogress
+        // edits file hasn't been started yet.
+        LOG.warn("Edits tailer failed to find any streams. Will try again " +
+            "later.", ioe);
+        return;
+      }
-      long editsLoaded = image.loadEdits(streams, namesystem);
+      // Once we have streams to load, errors encountered are legitimate cause
+      // for concern, so we don't catch them here. Simple errors reading from
+      // disk are ignored.
+      long editsLoaded = 0;
+      try {
+        editsLoaded = image.loadEdits(streams, namesystem);
+      } catch (EditLogInputException elie) {
+        LOG.warn("Error while reading edits from disk. Will try again.", elie);
+        editsLoaded = elie.getNumEditsLoaded();
+      }
-          try {
-            doTailEdits();
-          } catch (IOException e) {
-            if (e.getCause() instanceof RuntimeException) {
-              throw (RuntimeException)e.getCause();
-            } else if (e.getCause() instanceof Error) {
-              throw (Error)e.getCause();
-            }
-                
-            // Will try again
-            LOG.info("Got error, will try again.", e);
-          }
+          doTailEdits();
+        } catch (InterruptedException ie) {
+          // interrupter should have already set shouldRun to false
+          continue;
-          // TODO(HA): What should we do in this case? Shutdown the standby NN?
-          LOG.error("Edit log tailer received throwable", t);
-          lastError = t;
+          LOG.error("Error encountered while tailing edits. Shutting down " +
+              "standby NN.", t);
+          runtime.exit(1);
