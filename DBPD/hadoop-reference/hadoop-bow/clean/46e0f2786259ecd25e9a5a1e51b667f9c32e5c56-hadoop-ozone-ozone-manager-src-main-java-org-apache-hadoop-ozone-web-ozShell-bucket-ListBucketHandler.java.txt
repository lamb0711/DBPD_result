HDDS-18. Ozone Shell should use RestClient and RpcClient. Contributed by Lokesh Jain.

-import org.apache.hadoop.ozone.web.client.OzoneBucket;
-import org.apache.hadoop.ozone.web.client.OzoneRestClientException;
-import org.apache.hadoop.ozone.web.client.OzoneVolume;
+import org.apache.hadoop.ozone.client.OzoneBucket;
+import org.apache.hadoop.ozone.client.OzoneClientUtils;
+import org.apache.hadoop.ozone.client.OzoneVolume;
+import org.apache.hadoop.ozone.client.rest.response.BucketInfo;
+import org.apache.hadoop.ozone.client.OzoneClientException;
-import org.apache.hadoop.ozone.web.response.BucketInfo;
+import java.util.ArrayList;
+import java.util.Iterator;
-import java.util.stream.Collectors;
-  private String rootName;
-      throw new OzoneRestClientException(
+      throw new OzoneClientException(
-      throw new OzoneRestClientException("volume is required in listBucket");
+      throw new OzoneClientException("volume is required in listBucket");
-
-    if (cmd.hasOption(Shell.RUNAS)) {
-      rootName = "hdfs";
-    } else {
-      rootName = System.getProperty("user.name");
-    }
-
-
-    client.setEndPointURI(ozoneURI);
-    client.setUserAuth(rootName);
-
-    String length = null;
+    int maxBuckets = Integer.MAX_VALUE;
-      length = cmd.getOptionValue(Shell.LIST_LENGTH);
+      String length = cmd.getOptionValue(Shell.LIST_LENGTH);
+      maxBuckets = Integer.parseInt(length);
-    OzoneVolume vol = client.getVolume(volumeName);
-    List<OzoneBucket> bucketList = vol.listBuckets(length, startBucket, prefix);
+    OzoneVolume vol = client.getObjectStore().getVolume(volumeName);
+    Iterator<OzoneBucket> bucketIterator = vol.listBuckets(prefix, startBucket);
+    List<BucketInfo> bucketList = new ArrayList<>();
+    while (maxBuckets > 0 && bucketIterator.hasNext()) {
+      BucketInfo bucketInfo = OzoneClientUtils.asBucketInfo(bucketIterator.next());
+      bucketList.add(bucketInfo);
+      maxBuckets -= 1;
+    }
-    List<BucketInfo> jsonData = bucketList.stream()
-        .map(OzoneBucket::getBucketInfo).collect(Collectors.toList());
+    if (cmd.hasOption(Shell.VERBOSE)) {
+      System.out.printf("Found : %d buckets for volume : %s ",
+          bucketList.size(), volumeName);
+    }
-        JsonUtils.toJsonString(jsonData)));
+        JsonUtils.toJsonString(bucketList)));
