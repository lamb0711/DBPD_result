HDFS-5052. Add cacheRequest/uncacheRequest support to NameNode.  (Contributed by Colin Patrick McCabe.)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1516669 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.List;
+import org.apache.hadoop.fs.RemoteIterator;
+import org.apache.hadoop.util.Fallible;
+
+  /**
+   * Add some path cache directives to the CacheManager.
+   *
+   * @param directives
+   *          A list of all the path cache directives we want to add.
+   * @return
+   *          An list where each element is either a path cache entry that was
+   *          added, or an IOException exception describing why the directive
+   *          could not be added.
+   */
+  @AtMostOnce
+  public List<Fallible<PathCacheEntry>>
+    addPathCacheDirectives(List<PathCacheDirective> directives)
+      throws IOException;
+
+  /**
+   * Remove some path cache entries from the CacheManager.
+   *
+   * @param ids
+   *          A list of all the IDs we want to remove from the CacheManager.
+   * @return
+   *          An list where each element is either an ID that was removed,
+   *          or an IOException exception describing why the ID could not be
+   *          removed.
+   */
+  @AtMostOnce
+  public List<Fallible<Long>> removePathCacheEntries(List<Long> ids)
+      throws IOException;
+
+  /**
+   * List cached paths on the server.
+   *
+   * @param prevId
+   *          The previous ID that we listed, or 0 if this is the first call
+   *          to listPathCacheEntries.
+   * @param pool
+   *          The pool ID to list.  If this is the empty string, all pool ids
+   *          will be listed.
+   * @param maxRepliesPerRequest
+   *          The maximum number of replies to make in each request.
+   * @return
+   *          A RemoteIterator from which you can get PathCacheEntry objects.
+   *          Requests will be made as needed.
+   */
+  @Idempotent
+  public RemoteIterator<PathCacheEntry> listPathCacheEntries(long prevId,
+      String pool, int maxRepliesPerRequest) throws IOException;
