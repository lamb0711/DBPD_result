SUBMARINE-54. Add test coverage for YarnServiceJobSubmitter and make it ready for extension for PyTorch. Contributed by Szilard Nemeth.

-import org.apache.hadoop.yarn.service.api.records.Service;
-import org.apache.hadoop.yarn.submarine.common.Envs;
-import org.apache.hadoop.yarn.submarine.common.conf.SubmarineLogs;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import java.util.HashMap;
-import java.util.Map;
-public class YarnServiceUtils {
-  private static final Logger LOG =
-      LoggerFactory.getLogger(YarnServiceUtils.class);
+/**
+ * This class contains some static helper methods to query DNS data
+ * based on the provided parameters.
+ */
+public final class YarnServiceUtils {
+  private YarnServiceUtils() {
+  }
-  public static AppAdminClient createServiceClient(
+  static AppAdminClient createServiceClient(
-    AppAdminClient serviceClient = AppAdminClient.createAppAdminClient(
-        DEFAULT_TYPE, yarnConfiguration);
-    return serviceClient;
+    return AppAdminClient.createAppAdminClient(DEFAULT_TYPE, yarnConfiguration);
-  private static String getDNSNameCommonSuffix(String serviceName,
+  public static String getDNSNameCommonSuffix(String serviceName,
-  public static String getTFConfigEnv(String curCommponentName, int nWorkers,
-      int nPs, String serviceName, String userName, String domain) {
-    String commonEndpointSuffix = getDNSNameCommonSuffix(serviceName, userName,
-        domain, 8000);
-
-    String json = "{\\\"cluster\\\":{";
-
-    String master = getComponentArrayJson("master", 1, commonEndpointSuffix)
-        + ",";
-    String worker = getComponentArrayJson("worker", nWorkers - 1,
-        commonEndpointSuffix) + ",";
-    String ps = getComponentArrayJson("ps", nPs, commonEndpointSuffix) + "},";
-
-    StringBuilder sb = new StringBuilder();
-    sb.append("\\\"task\\\":{");
-    sb.append(" \\\"type\\\":\\\"");
-    sb.append(curCommponentName);
-    sb.append("\\\",");
-    sb.append(" \\\"index\\\":");
-    sb.append('$');
-    sb.append(Envs.TASK_INDEX_ENV + "},");
-    String task = sb.toString();
-    String environment = "\\\"environment\\\":\\\"cloud\\\"}";
-
-    sb = new StringBuilder();
-    sb.append(json);
-    sb.append(master);
-    sb.append(worker);
-    sb.append(ps);
-    sb.append(task);
-    sb.append(environment);
-    return sb.toString();
-  }
-
-  public static void addQuicklink(Service serviceSpec, String label,
-      String link) {
-    Map<String, String> quicklinks = serviceSpec.getQuicklinks();
-    if (null == quicklinks) {
-      quicklinks = new HashMap<>();
-      serviceSpec.setQuicklinks(quicklinks);
-    }
-
-    if (SubmarineLogs.isVerbose()) {
-      LOG.info("Added quicklink, " + label + "=" + link);
-    }
-
-    quicklinks.put(label, link);
-  }
-
-  private static String getComponentArrayJson(String componentName, int count,
-      String endpointSuffix) {
-    String component = "\\\"" + componentName + "\\\":";
-    StringBuilder array = new StringBuilder();
-    array.append("[");
-    for (int i = 0; i < count; i++) {
-      array.append("\\\"");
-      array.append(componentName);
-      array.append("-");
-      array.append(i);
-      array.append(endpointSuffix);
-      array.append("\\\"");
-      if (i != count - 1) {
-        array.append(",");
-      }
-    }
-    array.append("]");
-    return component + array.toString();
-  }
