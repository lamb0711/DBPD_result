HDFS-9110. Use Files.walkFileTree in NNUpgradeUtil#doPreUpgrade for better efficiency. Contributed by Charlie Helin.

-import java.io.FilenameFilter;
+import java.nio.file.FileVisitOption;
+import java.nio.file.FileVisitResult;
-import java.util.List;
+import java.nio.file.Path;
+import java.nio.file.SimpleFileVisitor;
+import java.nio.file.attribute.BasicFileAttributes;
+import java.util.Collections;
-import org.apache.hadoop.io.IOUtils;
-    final File curDir = sd.getCurrentDir();
-    final File tmpDir = sd.getPreviousTmp();
-    List<String> fileNameList = IOUtils.listDirectory(tmpDir, new FilenameFilter() {
-      @Override
-      public boolean accept(File dir, String name) {
-        return dir.equals(tmpDir)
-            && name.startsWith(NNStorage.NameNodeFile.EDITS.getName());
-      }
-    });
+    final Path curDir = sd.getCurrentDir().toPath();
+    final Path tmpDir = sd.getPreviousTmp().toPath();
-    for (String s : fileNameList) {
-      File prevFile = new File(tmpDir, s);
-      File newFile = new File(curDir, prevFile.getName());
-      Files.createLink(newFile.toPath(), prevFile.toPath());
-    }
+    Files.walkFileTree(tmpDir,
+      /* do not follow links */ Collections.<FileVisitOption>emptySet(),
+        1, new SimpleFileVisitor<Path>() {
+
+          @Override
+          public FileVisitResult visitFile(Path file, BasicFileAttributes attrs)
+              throws IOException {
+
+            String name = file.getFileName().toString();
+
+            if (Files.isRegularFile(file)
+                && name.startsWith(NNStorage.NameNodeFile.EDITS.getName())) {
+
+              Path newFile = curDir.resolve(name);
+              Files.createLink(newFile, file);
+            }
+
+            return super.visitFile(file, attrs);
+          }
+        }
+    );
