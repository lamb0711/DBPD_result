HDFS-3888. Clean up BlockPlacementPolicyDefault.  Contributed by Jing Zhao


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1380939 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-  private static final Log LOG =
-    LogFactory.getLog(BlockPlacementPolicyDefault.class.getName());
-
-
-                                                excludedNodes, blocksize, maxNodesPerRack, results);
+                                                excludedNodes, blocksize, 
+                                                maxNodesPerRack, results);
-                               long blockSize, int maxTargetPerLoc,
+                               long blockSize, int maxTargetPerRack,
-    return isGoodTarget(node, blockSize, maxTargetPerLoc,
+    return isGoodTarget(node, blockSize, maxTargetPerRack,
-    
+  
+  /**
+   * Determine if a node is a good target. 
+   * 
+   * @param node The target node
+   * @param blockSize Size of block
+   * @param maxTargetPerRack Maximum number of targets per rack. The value of 
+   *                       this parameter depends on the number of racks in 
+   *                       the cluster and total number of replicas for a block
+   * @param considerLoad whether or not to consider load of the target node
+   * @param results A list containing currently chosen nodes. Used to check if 
+   *                too many nodes has been chosen in the target rack. 
+   * @return Return true if <i>node</i> has enough space, 
+   *         does not have too much load, 
+   *         and the rack does not have too many nodes.
+   */
-                               long blockSize, int maxTargetPerLoc,
+                               long blockSize, int maxTargetPerRack,
-    if (counter>maxTargetPerLoc) {
+    if (counter>maxTargetPerRack) {
