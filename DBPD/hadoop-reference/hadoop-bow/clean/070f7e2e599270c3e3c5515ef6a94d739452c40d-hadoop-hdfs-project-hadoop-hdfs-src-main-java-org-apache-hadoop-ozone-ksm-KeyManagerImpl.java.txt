HDFS-11920. Ozone : add key partition. Contributed by Chen Liang.

+import org.apache.hadoop.ksm.helpers.KsmKeyLocationInfo;
+import org.apache.hadoop.ozone.OzoneConfiguration;
+import java.util.ArrayList;
+import static org.apache.hadoop.ozone.OzoneConfigKeys.OZONE_SCM_BLOCK_SIZE_DEFAULT;
+import static org.apache.hadoop.ozone.OzoneConfigKeys.OZONE_SCM_BLOCK_SIZE_KEY;
+
+  private final long scmBlockSize;
-      MetadataManager metadataManager) {
+      MetadataManager metadataManager, OzoneConfiguration conf) {
+    this.scmBlockSize = conf.getLong(OZONE_SCM_BLOCK_SIZE_KEY,
+        OZONE_SCM_BLOCK_SIZE_DEFAULT);
-      AllocatedBlock allocatedBlock =
-          scmBlockClient.allocateBlock(Math.max(args.getDataSize(), 1));
+      long targetSize = args.getDataSize();
+      List<KsmKeyLocationInfo> subKeyInfos = new ArrayList<>();
+      int idx = 0;
+      long offset = 0;
+
+      // in case targetSize == 0, subKeyInfos will be an empty list
+      while (targetSize > 0) {
+        long allocateSize = Math.min(targetSize, scmBlockSize);
+        AllocatedBlock allocatedBlock =
+            scmBlockClient.allocateBlock(allocateSize);
+        KsmKeyLocationInfo subKeyInfo = new KsmKeyLocationInfo.Builder()
+            .setContainerName(allocatedBlock.getPipeline().getContainerName())
+            .setBlockID(allocatedBlock.getKey())
+            .setShouldCreateContainer(allocatedBlock.getCreateContainer())
+            .setIndex(idx)
+            .setLength(allocateSize)
+            .setOffset(offset)
+            .build();
+        idx += 1;
+        offset += allocateSize;
+        targetSize -= allocateSize;
+        subKeyInfos.add(subKeyInfo);
+      }
+
-          .setBlockID(allocatedBlock.getKey())
-          .setContainerName(allocatedBlock.getPipeline().getContainerName())
-          .setShouldCreateContainer(allocatedBlock.getCreateContainer())
+          .setKsmKeyLocationInfos(subKeyInfos)
