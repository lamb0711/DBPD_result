Revert "YARN=5181. ClusterNodeTracker: add method to get list of nodes matching a specific resourceName. (kasha via asuresh)"

This reverts commit e905a42a2c6c88210b5c2120d7daf0bb3739cd1d.

-import com.google.common.base.Preconditions;
-import org.apache.hadoop.yarn.api.records.ResourceRequest;
-  private Map<String, N> nodeNameToNodeMap = new HashMap<>();
-  private Map<String, List<N>> nodesPerRack = new HashMap<>();
+  private Map<String, Integer> nodesPerRack = new HashMap<>();
-      nodeNameToNodeMap.put(node.getNodeName(), node);
-      List<N> nodesList = nodesPerRack.get(rackName);
-      if (nodesList == null) {
-        nodesList = new ArrayList<>();
-        nodesPerRack.put(rackName, nodesList);
+      Integer numNodes = nodesPerRack.get(rackName);
+      if (numNodes == null) {
+        numNodes = 0;
-      nodesList.add(node);
+      nodesPerRack.put(rackName, ++numNodes);
-      List<N> nodesList = nodesPerRack.get(rName);
-      return nodesList == null ? 0 : nodesList.size();
+      Integer nodeCount = nodesPerRack.get(rName);
+      return nodeCount == null ? 0 : nodeCount;
-      nodeNameToNodeMap.remove(node.getNodeName());
-      List<N> nodesList = nodesPerRack.get(rackName);
-      if (nodesList == null) {
-        LOG.error("Attempting to remove node from an empty rack " + rackName);
+      Integer numNodes = nodesPerRack.get(rackName);
+      if (numNodes > 0) {
+        nodesPerRack.put(rackName, --numNodes);
-        nodesList.remove(node);
-        if (nodesList.isEmpty()) {
-          nodesPerRack.remove(rackName);
-        }
+        LOG.error("Attempting to remove node from an empty rack " + rackName);
-
-  /**
-   * Convenience method to return list of nodes corresponding to resourceName
-   * passed in the {@link ResourceRequest}.
-   *
-   * @param resourceName Host/rack name of the resource, or
-   * {@link ResourceRequest#ANY}
-   * @return list of nodes that match the resourceName
-   */
-  public List<N> getNodesByResourceName(final String resourceName) {
-    Preconditions.checkArgument(
-        resourceName != null && !resourceName.isEmpty());
-    List<N> retNodes = new ArrayList<>();
-    if (ResourceRequest.ANY.equals(resourceName)) {
-      return getAllNodes();
-    } else if (nodeNameToNodeMap.containsKey(resourceName)) {
-      retNodes.add(nodeNameToNodeMap.get(resourceName));
-    } else if (nodesPerRack.containsKey(resourceName)) {
-      return nodesPerRack.get(resourceName);
-    } else {
-      LOG.info(
-          "Could not find a node matching given resourceName " + resourceName);
-    }
-    return retNodes;
-  }
