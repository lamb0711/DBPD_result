HADOOP-15541. [s3a] Shouldn't try to drain stream before aborting
connection in case of timeout.

+import java.net.SocketTimeoutException;
-  private synchronized void reopen(String reason, long targetPos, long length)
-      throws IOException {
+  private synchronized void reopen(String reason, long targetPos, long length,
+          boolean forceAbort) throws IOException {
-      closeStream("reopen(" + reason + ")", contentRangeFinish, false);
+      closeStream("reopen(" + reason + ")", contentRangeFinish, forceAbort);
-            reopen("read from new offset", targetPos, len);
+            reopen("read from new offset", targetPos, len, false);
+          } catch (SocketTimeoutException e) {
+            onReadFailure(e, 1, true);
+            b = wrappedStream.read();
-            onReadFailure(e, 1);
+            onReadFailure(e, 1, false);
-  private void onReadFailure(IOException ioe, int length) throws IOException {
+  private void onReadFailure(IOException ioe, int length, boolean forceAbort)
+          throws IOException {
-    reopen("failure recovery", pos, length);
+    reopen("failure recovery", pos, length, forceAbort);
+          } catch (SocketTimeoutException e) {
+            onReadFailure(e, len, true);
+            bytes = wrappedStream.read(buf, off, len);
-            onReadFailure(e, len);
+            onReadFailure(e, len, false);
