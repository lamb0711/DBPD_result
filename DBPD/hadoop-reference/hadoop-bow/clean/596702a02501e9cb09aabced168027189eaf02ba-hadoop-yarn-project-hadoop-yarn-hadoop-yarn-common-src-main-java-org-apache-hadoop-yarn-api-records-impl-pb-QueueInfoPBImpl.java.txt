YARN-2544. Added admin-API objects for using node-labels. Contributed by Wangda Tan.

+import java.util.HashSet;
+import java.util.Set;
+  Set<String> accessibleNodeLabels;
+    if (this.accessibleNodeLabels != null) {
+      builder.clearAccessibleNodeLabels();
+      builder.addAllAccessibleNodeLabels(this.accessibleNodeLabels);
+    }
+  
+  @Override
+  public void setAccessibleNodeLabels(Set<String> nodeLabels) {
+    maybeInitBuilder();
+    builder.clearAccessibleNodeLabels();
+    this.accessibleNodeLabels = nodeLabels;
+  }
+  
+  private void initNodeLabels() {
+    if (this.accessibleNodeLabels != null) {
+      return;
+    }
+    QueueInfoProtoOrBuilder p = viaProto ? proto : builder;
+    this.accessibleNodeLabels = new HashSet<String>();
+    this.accessibleNodeLabels.addAll(p.getAccessibleNodeLabelsList());
+  }
+  @Override
+  public Set<String> getAccessibleNodeLabels() {
+    initNodeLabels();
+    return this.accessibleNodeLabels;
+  }
+
+  @Override
+  public String getDefaultNodeLabelExpression() {
+    QueueInfoProtoOrBuilder p = viaProto ? proto : builder;
+    return (p.hasDefaultNodeLabelExpression()) ? p
+        .getDefaultNodeLabelExpression() : null;
+  }
+
+  @Override
+  public void setDefaultNodeLabelExpression(String defaultNodeLabelExpression) {
+    maybeInitBuilder();
+    if (defaultNodeLabelExpression == null) {
+      builder.clearDefaultNodeLabelExpression();
+      return;
+    }
+    builder.setDefaultNodeLabelExpression(defaultNodeLabelExpression);
+  }
