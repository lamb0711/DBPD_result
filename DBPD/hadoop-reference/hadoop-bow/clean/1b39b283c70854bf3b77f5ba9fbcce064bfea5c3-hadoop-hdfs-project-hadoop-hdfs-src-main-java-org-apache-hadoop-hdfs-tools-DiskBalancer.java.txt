HDFS-9546: DiskBalancer: Add Execute command. Contributed by Anu Engineer.

+import org.apache.hadoop.hdfs.server.diskbalancer.command.ExecuteCommand;
-   * Construct a DiskBalancer.
-   *
-   * @param conf
-   */
-  public DiskBalancer(Configuration conf) {
-    super(conf);
-  }
-
-  /**
-
-
-
-
-
-
-
-   * Node name or IP against which Disk Balancer is being run.
+   * Executes a given plan file on the target datanode.
+   */
+  public static final String EXECUTE = "execute";
+  /**
+   * Name or address of the node to execute against.
-
-
+  public static final int PLAN_VERSION = 1;
-
-
+   * Construct a DiskBalancer.
+   *
+   * @param conf
+   */
+  public DiskBalancer(Configuration conf) {
+    super(conf);
+  }
+
+  /**
-    addCommands(opts);
+    addPlanCommands(opts);
-   * Adds commands that we handle to opts.
+   * Adds commands for plan command.
-   * @param opt - Optins
+   * @param opt - Options
-  private void addCommands(Options opt) {
+  private void addPlanCommands(Options opt) {
-    Option plan = new Option(PLAN, false, "write plan to the default file");
+    Option plan = new Option(PLAN, true , "create a plan for the given node. " +
+        "e.g -plan <nodename> | <nodeIP> | <nodeUUID>");
-    Option node = new Option(NODE, true, "Node Name or IP");
-    opt.addOption(node);
-
+  }
+  /**
+   * Adds execute command options.
+   * @param opt Options
+   */
+  private void addExecuteCommands(Options opt) {
+    Option execute = new Option(EXECUTE, true , "Takes a plan file and " +
+        "submits it for execution to the datanode. e.g -execute <planfile>");
+    opt.addOption(execute);
+
-      } else {
+      }
+
+      if(cmd.hasOption(DiskBalancer.EXECUTE)) {
+        currentCommand = new ExecuteCommand(getConf());
+      }
+
+      if(currentCommand == null) {
-
-
