HDDS-1956. Aged IO Thread exits on first read

Signed-off-by: Anu Engineer <aengineer@apache.org>

+import java.util.Optional;
-  static final Logger LOG =
+  private static final Logger LOG =
-        readData(bucket, keyName);
+        readData(bucket, keyName, index);
-    String keyName = threadName + keyNameDelimiter + keyIndex;
+    String keyName = getKeyName(keyIndex, threadName);
+    LOG.trace("LOADGEN: Writing key {}", keyName);
+      LOG.trace("LOADGEN: Written key {}", keyName);
-  private void readData(OzoneBucket bucket, String keyName) throws Exception {
-    int index = Integer.valueOf(keyName.split(keyNameDelimiter)[1]);
-
+  private void readData(OzoneBucket bucket, String keyName, int index)
+      throws Exception {
+    LOG.trace("LOADGEN: Reading key {}", keyName);
+      LOG.trace("LOADGEN: Read key {}", keyName);
+    LOG.trace("LOADGEN: Deleting key {}", keyName);
+      LOG.trace("LOADGEN: Deleted key {}", keyName);
-  private String getKeyToRead() {
+  private Optional<Integer> randomKeyToRead() {
-    return currentIndex != 0 ?
-        String.valueOf(RandomUtils.nextInt(0, currentIndex)): null;
+    return currentIndex != 0
+      ? Optional.of(RandomUtils.nextInt(0, currentIndex))
+      : Optional.empty();
-          keyName = writeData(agedFileWrittenIndex.incrementAndGet(),
+          keyName = writeData(agedFileWrittenIndex.getAndIncrement(),
-          keyName = getKeyToRead();
-          if (keyName != null) {
-            readData(agedLoadBucket, keyName);
+          Optional<Integer> index = randomKeyToRead();
+          if (index.isPresent()) {
+            keyName = getKeyName(index.get(), threadName);
+            readData(agedLoadBucket, keyName, index.get());
+
+  private static String getKeyName(int keyIndex, String threadName) {
+    return threadName + keyNameDelimiter + keyIndex;
+  }
