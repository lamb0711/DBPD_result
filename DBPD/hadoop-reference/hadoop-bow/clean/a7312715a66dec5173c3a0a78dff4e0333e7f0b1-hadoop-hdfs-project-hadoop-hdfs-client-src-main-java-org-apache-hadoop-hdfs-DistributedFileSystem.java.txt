HDFS-10996. Ability to specify per-file EC policy at create time. Contributed by SammiChen.

+import javax.annotation.Nonnull;
+
-   * of null means no favored nodes for this create
+   * of null means no favored nodes for this create.
+   * Another addition is ecPolicyName. A non-null ecPolicyName specifies an
+   * explicit erasure coding policy for this file, overriding the inherited
+   * policy. A null ecPolicyName means the file will inherit its EC policy from
+   * an ancestor (the default).
-      final FsPermission permission, EnumSet<CreateFlag> flag,
+      final FsPermission permission, final EnumSet<CreateFlag> flag,
-      final InetSocketAddress[] favoredNodes) throws IOException {
+      final InetSocketAddress[] favoredNodes, final String ecPolicyName)
+      throws IOException {
-            checksumOpt, favoredNodes);
+            checksumOpt, favoredNodes, ecPolicyName);
-              blockSize, progress, checksumOpt, favoredNodes);
+              blockSize, progress, checksumOpt, favoredNodes, ecPolicyName);
+    private String ecPolicyName = null;
-        final InetSocketAddress[] nodes) {
+        @Nonnull final InetSocketAddress[] nodes) {
+    protected String getEcPolicyName() {
+      return ecPolicyName;
+    }
+
+    public HdfsDataOutputStreamBuilder setEcPolicyName(
+        @Nonnull final String policyName) {
+      Preconditions.checkNotNull(policyName);
+      ecPolicyName = policyName;
+      return this;
+    }
+
-          getProgress(), getChecksumOpt(), getFavoredNodes());
+          getProgress(), getChecksumOpt(), getFavoredNodes(),
+          getEcPolicyName());
