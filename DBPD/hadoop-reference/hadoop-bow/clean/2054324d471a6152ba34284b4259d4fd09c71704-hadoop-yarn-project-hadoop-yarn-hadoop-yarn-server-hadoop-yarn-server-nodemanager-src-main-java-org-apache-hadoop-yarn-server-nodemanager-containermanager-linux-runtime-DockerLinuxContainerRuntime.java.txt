Revert "YARN-6804. [YARN core changes] Allow custom hostname for docker containers in native services. Contributed by Billie Rinaldi"

This reverts commit 4a771d9010de0867ac901bead075383ddf1f30dc.

-import org.apache.hadoop.registry.client.binding.RegistryPathUtils;
- *     {@code YARN_CONTAINER_RUNTIME_DOCKER_CONTAINER_HOSTNAME} sets the
- *     hostname to be used by the Docker container. If not specified, a
- *     hostname will be derived from the container ID.
- *   </li>
- *   <li>
-  public static final String HOSTNAME_PATTERN =
-      "^[a-zA-Z0-9][a-zA-Z0-9_.-]+$";
-  private static final Pattern hostnamePattern = Pattern.compile(
-      HOSTNAME_PATTERN);
-  @InterfaceAudience.Private
-  public static final String ENV_DOCKER_CONTAINER_HOSTNAME =
-      "YARN_CONTAINER_RUNTIME_DOCKER_CONTAINER_HOSTNAME";
-  @InterfaceAudience.Private
-      LOG.info("cGroupsHandler is null - cgroups not in use.");
+      if (LOG.isInfoEnabled()) {
+        LOG.info("cGroupsHandler is null - cgroups not in use.");
+      }
-  public static void validateHostname(String hostname) throws
-      ContainerExecutionException {
-    if (hostname != null && !hostname.isEmpty()) {
-      if (!hostnamePattern.matcher(hostname).matches()) {
-        throw new ContainerExecutionException("Hostname '" + hostname
-            + "' doesn't match docker hostname pattern");
-      }
-    }
-  }
-
-  /** Set a DNS friendly hostname. */
-  private void setHostname(DockerRunCommand runCommand, String
-      containerIdStr, String name)
-      throws ContainerExecutionException {
-    if (name == null || name.isEmpty()) {
-      name = RegistryPathUtils.encodeYarnID(containerIdStr);
-      validateHostname(name);
-    }
-
-    LOG.info("setting hostname in container to: " + name);
-    runCommand.setHostname(name);
-  }
-
-    LOG.info("Privileged container requested for : " + container
-        .getContainerId().toString());
+    if (LOG.isInfoEnabled()) {
+      LOG.info("Privileged container requested for : " + container
+          .getContainerId().toString());
+    }
-    LOG.info("All checks pass. Launching privileged container for : "
-        + container.getContainerId().toString());
+    if (LOG.isInfoEnabled()) {
+      LOG.info("All checks pass. Launching privileged container for : "
+          + container.getContainerId().toString());
+    }
-    String hostname = environment.get(ENV_DOCKER_CONTAINER_HOSTNAME);
-    validateHostname(hostname);
-
-        .setNetworkType(network);
-    setHostname(runCommand, containerIdStr, hostname);
-    runCommand.setCapabilities(capabilities)
+        .setNetworkType(network)
+        .setCapabilities(capabilities)
-
+
-      LOG.info("command override disabled");
+      if (LOG.isInfoEnabled()) {
+        LOG.info("command override disabled");
+      }
