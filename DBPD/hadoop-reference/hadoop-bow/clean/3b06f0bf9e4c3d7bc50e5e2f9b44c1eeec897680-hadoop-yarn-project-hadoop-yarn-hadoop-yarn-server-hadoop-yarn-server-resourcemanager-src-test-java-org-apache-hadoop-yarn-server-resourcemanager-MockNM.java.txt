YARN-9819. Make TestOpportunisticContainerAllocatorAMService more resilient. Contribued by Abhishek Modi

+import org.apache.hadoop.yarn.server.api.records.OpportunisticContainersStatus;
+  /**
+   * Sends the heartbeat of the node.
+   * @param isHealthy whether node is healthy.
+   * @param resId response id.
+   * @return response of the heartbeat.
+   * @throws Exception
+   */
+  /**
+   * Sends the heartbeat of the node.
+   * @param updatedStats containers with updated status.
+   * @param isHealthy whether node is healthy.
+   * @return response of the heartbeat.
+   * @throws Exception
+   */
+  /**
+   * Sends the heartbeat of the node.
+   * @param oppContainersStatus opportunistic containers status.
+   * @param isHealthy whether node is healthy.
+   * @return response of the heartbeat.
+   * @throws Exception
+   */
+  public NodeHeartbeatResponse nodeHeartbeat(
+      OpportunisticContainersStatus oppContainersStatus, boolean isHealthy)
+      throws Exception {
+    return nodeHeartbeat(Collections.emptyList(),
+        Collections.emptyList(), isHealthy, responseId, oppContainersStatus);
+  }
+
+  /**
+   * Sends the heartbeat of the node.
+   * @param updatedStats containers with updated status.
+   * @param increasedConts containers whose resource has been increased.
+   * @param isHealthy whether node is healthy.
+   * @param resId response id.
+   * @return response of the heartbeat.
+   * @throws Exception
+   */
+  public NodeHeartbeatResponse nodeHeartbeat(
+      List<ContainerStatus> updatedStats, List<Container> increasedConts,
+      boolean isHealthy, int resId) throws Exception {
+    return nodeHeartbeat(updatedStats, increasedConts,
+        isHealthy, resId, null);
+  }
+
+  /**
+   * Sends the heartbeat of the node.
+   * @param updatedStats containers with updated status.
+   * @param increasedConts containers whose resource has been increased.
+   * @param isHealthy whether node is healthy.
+   * @param resId response id.
+   * @param oppContainersStatus opportunistic containers status.
+   * @return response of the heartbeat.
+   * @throws Exception
+   */
-      List<Container> increasedConts, boolean isHealthy, int resId)
-          throws Exception {
+      List<Container> increasedConts, boolean isHealthy, int resId,
+      OpportunisticContainersStatus oppContainersStatus) throws Exception {
+    status.setOpportunisticContainersStatus(oppContainersStatus);
