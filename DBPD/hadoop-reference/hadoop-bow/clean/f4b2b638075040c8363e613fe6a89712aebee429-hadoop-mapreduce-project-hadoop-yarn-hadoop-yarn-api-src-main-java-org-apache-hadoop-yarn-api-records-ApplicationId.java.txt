Merge trunk into HA branch


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1170378 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.classification.InterfaceAudience.Private;
+import org.apache.hadoop.classification.InterfaceAudience.Public;
+import org.apache.hadoop.classification.InterfaceStability.Stable;
+import org.apache.hadoop.classification.InterfaceStability.Unstable;
-
-public interface ApplicationId extends Comparable<ApplicationId> {
+/**
+ * <p><code>ApplicationId</code> represents the <em>globally unique</em> 
+ * identifier for an application.</p>
+ * 
+ * <p>The globally unique nature of the identifier is achieved by using the 
+ * <em>cluster timestamp</em> i.e. start-time of the 
+ * <code>ResourceManager</code> along with a monotonically increasing counter
+ * for the application.</p>
+ */
+@Public
+@Stable
+public abstract class ApplicationId implements Comparable<ApplicationId> {
+  
+  /**
+   * Get the short integer identifier of the <code>ApplicationId</code>
+   * which is unique for all applications started by a particular instance
+   * of the <code>ResourceManager</code>.
+   * @return short integer identifier of the <code>ApplicationId</code>
+   */
+  @Public
+  @Stable
+  
+  @Private
+  @Unstable
+  public abstract void setId(int id);
+  
+  /**
+   * Get the <em>start time</em> of the <code>ResourceManager</code> which is 
+   * used to generate globally unique <code>ApplicationId</code>.
+   * @return <em>start time</em> of the <code>ResourceManager</code>
+   */
-  public abstract void setId(int id);
+  @Private
+  @Unstable
+  
+  @Override
+  public int compareTo(ApplicationId other) {
+    if (this.getClusterTimestamp() - other.getClusterTimestamp() == 0) {
+      return this.getId() - other.getId();
+    } else {
+      return this.getClusterTimestamp() > other.getClusterTimestamp() ? 1 : 
+        this.getClusterTimestamp() < other.getClusterTimestamp() ? -1 : 0;
+    }
+  }
+
+  @Override
+  public String toString() {
+    return "application_" + this.getClusterTimestamp() + "_" + this.getId();
+  }
+  
+  @Override
+  public int hashCode() {
+    // Generated by eclipse.
+    final int prime = 31;
+    int result = 1;
+    long clusterTimestamp = getClusterTimestamp();
+    result = prime * result
+        + (int) (clusterTimestamp ^ (clusterTimestamp >>> 32));
+    result = prime * result + getId();
+    return result;
+  }
+
+  @Override
+  public boolean equals(Object other) {
+    if (other == null) return false;
+    if (other.getClass().isAssignableFrom(this.getClass())) {
+      ApplicationId otherAppId = (ApplicationId)other;
+      if (this.getClusterTimestamp() == otherAppId.getClusterTimestamp() &&
+          this.getId() == otherAppId.getId()) {
+        return true;
+      }
+    }
+    return false;
+  }
