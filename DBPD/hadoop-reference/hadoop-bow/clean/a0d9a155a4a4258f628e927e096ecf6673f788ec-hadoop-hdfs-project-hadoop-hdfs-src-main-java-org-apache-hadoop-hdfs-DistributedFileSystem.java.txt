HDFS-5236. Change PathBasedCacheDirective APIs to be a single value rather than batch. (Contributed by Andrew Wang)

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1525183 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.hadoop.util.Fallible;
-   * Add some PathBasedCache directives.
+   * Add a new PathBasedCacheDirective.
-   * @param directives A list of PathBasedCache directives to be added.
-   * @return A Fallible list, where each element is either a successfully addded
-   *         PathBasedCache entry, or an IOException describing why the directive
-   *         could not be added.
+   * @param directive A PathBasedCacheDirectives to add
+   * @return PathBasedCacheDescriptor associated with the added directive
+   * @throws IOException if the directive could not be added
-  public List<Fallible<PathBasedCacheDescriptor>>
-      addPathBasedCacheDirective(List<PathBasedCacheDirective> directives)
-          throws IOException {
-    return dfs.namenode.addPathBasedCacheDirectives(directives);
+  public PathBasedCacheDescriptor addPathBasedCacheDirective(
+      PathBasedCacheDirective directive) throws IOException {
+    return dfs.addPathBasedCacheDirective(directive);
-   * Remove some PathBasedCache entries.
+   * Remove a PathBasedCacheDescriptor.
-   * @param ids A list of all the entry IDs to be removed.
-   * @return A Fallible list where each element is either a successfully removed
-   *         ID, or an IOException describing why the ID could not be removed.
+   * @param descriptor PathBasedCacheDescriptor to remove
+   * @throws IOException if the descriptor could not be removed
-  public List<Fallible<Long>>
-      removePathBasedCacheDescriptors(List<Long> ids) throws IOException {
-    return dfs.namenode.removePathBasedCacheDescriptors(ids);
+  public void removePathBasedCacheDescriptor(PathBasedCacheDescriptor descriptor)
+      throws IOException {
+    dfs.removePathBasedCacheDescriptor(descriptor);
-    return dfs.namenode.listPathBasedCacheDescriptors(0, pool, path);
+    return dfs.listPathBasedCacheDescriptors(pool, path);
-   * @param req
+   * @param info
-    dfs.namenode.addCachePool(info);
+    CachePoolInfo.validate(info);
+    dfs.addCachePool(info);
-   * @param req
+   * @param info
-    dfs.namenode.modifyCachePool(info);
+    CachePoolInfo.validate(info);
+    dfs.modifyCachePool(info);
-   * @param cachePoolName
+   * @param poolName
-  public void removeCachePool(String name) throws IOException {
-    dfs.namenode.removeCachePool(name);
+  public void removeCachePool(String poolName) throws IOException {
+    CachePoolInfo.validateName(poolName);
+    dfs.removeCachePool(poolName);
-    return dfs.namenode.listCachePools("");
+    return dfs.listCachePools();
