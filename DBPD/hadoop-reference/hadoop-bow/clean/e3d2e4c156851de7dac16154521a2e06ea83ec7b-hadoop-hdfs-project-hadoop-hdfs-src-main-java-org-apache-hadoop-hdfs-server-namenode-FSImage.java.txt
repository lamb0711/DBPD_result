HDFS-6000. Avoid saving namespace when starting rolling upgrade. Contributed by Jing Zhao.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1571840 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.FileNotFoundException;
+import java.util.EnumSet;
-   * @return true if there is rollback fsimage (for rolling upgrade) for the
-   * given txid in storage.
+   * @return true if there is rollback fsimage (for rolling upgrade) in NameNode
+   * directory.
-  boolean hasRollbackFSImage(long txid) {
-    for (StorageDirectory sd : storage.dirIterable(NameNodeDirType.IMAGE)) {
-      final File rollbackImageFile = NNStorage.getStorageFile(sd,
-          NameNodeFile.IMAGE_ROLLBACK, txid);
-      if (rollbackImageFile.exists()) {
-        return true;
-      }
+  public boolean hasRollbackFSImage() throws IOException {
+    final FSImageStorageInspector inspector = new FSImageTransactionalStorageInspector(
+        EnumSet.of(NameNodeFile.IMAGE_ROLLBACK));
+    storage.inspectStorageDirs(inspector);
+    try {
+      List<FSImageFile> images = inspector.getLatestImages();
+      return images != null && !images.isEmpty();
+    } catch (FileNotFoundException e) {
+      return false;
-    return false;
-    final NameNodeFile nnf = rollingRollback ? NameNodeFile.IMAGE_ROLLBACK
-        : NameNodeFile.IMAGE;
-    final FSImageStorageInspector inspector = storage.readAndInspectDirs(nnf);
+    final EnumSet<NameNodeFile> nnfs;
+    if (rollingRollback) {
+      // if it is rollback of rolling upgrade, only load from the rollback image
+      nnfs = EnumSet.of(NameNodeFile.IMAGE_ROLLBACK);
+    } else {
+      // otherwise we can load from both IMAGE and IMAGE_ROLLBACK
+      nnfs = EnumSet.of(NameNodeFile.IMAGE, NameNodeFile.IMAGE_ROLLBACK);
+    }
+    final FSImageStorageInspector inspector = storage.readAndInspectDirs(nnfs);
+      if (StartupOption.isRollingUpgradeDowngrade(startOpt)) {
+        // purge rollback image if it is downgrade
+        archivalManager.purgeCheckpoints(NameNodeFile.IMAGE_ROLLBACK);
+      }
-   * @param canceler 
+   * @param canceler
-  public synchronized void saveNamespace(FSNamesystem source,
-      NameNodeFile nnf, Canceler canceler) throws IOException {
+  public synchronized void saveNamespace(FSNamesystem source, NameNodeFile nnf,
+      Canceler canceler) throws IOException {
-  public synchronized void saveDigestAndRenameCheckpointImage(
+  public synchronized void saveDigestAndRenameCheckpointImage(NameNodeFile nnf,
-      File imageFile = NNStorage.getImageFile(sd, txid);
+      File imageFile = NNStorage.getImageFile(sd, nnf, txid);
-    renameCheckpoint(txid, NameNodeFile.IMAGE_NEW, NameNodeFile.IMAGE, false);
+    renameCheckpoint(txid, NameNodeFile.IMAGE_NEW, nnf, false);
