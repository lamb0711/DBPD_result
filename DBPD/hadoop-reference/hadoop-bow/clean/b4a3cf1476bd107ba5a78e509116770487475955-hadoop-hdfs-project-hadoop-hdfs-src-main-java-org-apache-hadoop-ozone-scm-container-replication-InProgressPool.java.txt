HDFS-13070. Ozone: SCM: Support for container replica reconciliation - 1. Contributed by Nanda kumar.

-import org.apache.hadoop.ozone.protocol.proto.StorageContainerDatanodeProtocolProtos.ContainerInfo;
-import org.apache.hadoop.ozone.protocol.proto.StorageContainerDatanodeProtocolProtos.ContainerReportsRequestProto;
-import org.apache.hadoop.ozone.scm.node.CommandQueue;
+import org.apache.hadoop.ozone.protocol.proto
+    .StorageContainerDatanodeProtocolProtos.ContainerInfo;
+import org.apache.hadoop.ozone.protocol.proto
+    .StorageContainerDatanodeProtocolProtos.ContainerReportsRequestProto;
-import static com.google.common.util.concurrent.Uninterruptibles.sleepUninterruptibly;
-import static org.apache.hadoop.ozone.protocol.proto.OzoneProtos.NodeState.HEALTHY;
-import static org.apache.hadoop.ozone.protocol.proto.OzoneProtos.NodeState.STALE;
-import static org.apache.hadoop.ozone.protocol.proto.OzoneProtos.NodeState.UNKNOWN;
+import static com.google.common.util.concurrent.Uninterruptibles
+    .sleepUninterruptibly;
+import static org.apache.hadoop.ozone.protocol.proto.OzoneProtos
+    .NodeState.HEALTHY;
+import static org.apache.hadoop.ozone.protocol.proto.OzoneProtos
+    .NodeState.STALE;
+import static org.apache.hadoop.ozone.protocol.proto.OzoneProtos
+    .NodeState.UNKNOWN;
+
-  private final CommandQueue commandQueue;
-   * @param commandQueue - Command queue
-      CommandQueue commandQueue, ExecutorService executorService) {
+                 ExecutorService executorService) {
-    Preconditions.checkNotNull(commandQueue);
-    this.commandQueue = commandQueue;
-        commandQueue.addCommand(id, cmd);
+        nodeManager.addDatanodeCommand(id, cmd);
-    executorService.submit(processContainerReport(containerReport));
+    if (status == ProgressStatus.InProgress) {
+      executorService.submit(processContainerReport(containerReport));
+    } else {
+      LOG.debug("Cannot handle container report when the pool is in {} status.",
+          status);
+    }
+  public void finalizeReconciliation() {
+    status = ProgressStatus.Done;
+    //TODO: Add finalizing logic. This is where actual reconciliation happens.
+  }
+
