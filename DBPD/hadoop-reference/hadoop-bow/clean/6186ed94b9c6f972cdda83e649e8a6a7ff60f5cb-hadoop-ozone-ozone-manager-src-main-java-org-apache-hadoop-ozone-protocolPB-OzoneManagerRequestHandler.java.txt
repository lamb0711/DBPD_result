HDDS-1300. Optimize non-recursive ozone filesystem apis. Contributed by Lokesh Jain.

+import org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos.CreateDirectoryRequest;
+      case CreateDirectory:
+        createDirectory(request.getCreateDirectoryRequest());
+        break;
+      case CreateFile:
+        OzoneManagerProtocolProtos.CreateFileResponse createFileResponse =
+            createFile(request.getCreateFileRequest());
+        responseBuilder.setCreateFileResponse(createFileResponse);
+        break;
+      case LookupFile:
+        OzoneManagerProtocolProtos.LookupFileResponse lookupFileResponse =
+            lookupFile(request.getLookupFileRequest());
+        responseBuilder.setLookupFileResponse(lookupFileResponse);
+        break;
-    GetFileStatusResponse.Builder rb = GetFileStatusResponse.newBuilder();
+    KeyArgs keyArgs = request.getKeyArgs();
+    OmKeyArgs omKeyArgs = new OmKeyArgs.Builder()
+        .setVolumeName(keyArgs.getVolumeName())
+        .setBucketName(keyArgs.getBucketName())
+        .setKeyName(keyArgs.getKeyName())
+        .build();
-    rb.setStatus(impl.getFileStatus(request.getVolumeName(),
-        request.getBucketName(), request.getKeyName()).getProtobuf());
+    GetFileStatusResponse.Builder rb = GetFileStatusResponse.newBuilder();
+    rb.setStatus(impl.getFileStatus(omKeyArgs).getProtobuf());
+
+  private void createDirectory(CreateDirectoryRequest request)
+      throws IOException {
+    KeyArgs keyArgs = request.getKeyArgs();
+    OmKeyArgs omKeyArgs = new OmKeyArgs.Builder()
+        .setVolumeName(keyArgs.getVolumeName())
+        .setBucketName(keyArgs.getBucketName())
+        .setKeyName(keyArgs.getKeyName())
+        .build();
+    impl.createDirectory(omKeyArgs);
+  }
+
+  private OzoneManagerProtocolProtos.CreateFileResponse createFile(
+      OzoneManagerProtocolProtos.CreateFileRequest request) throws IOException {
+    KeyArgs keyArgs = request.getKeyArgs();
+    OmKeyArgs omKeyArgs = new OmKeyArgs.Builder()
+        .setVolumeName(keyArgs.getVolumeName())
+        .setBucketName(keyArgs.getBucketName())
+        .setKeyName(keyArgs.getKeyName())
+        .setDataSize(keyArgs.getDataSize())
+        .setType(keyArgs.getType())
+        .setFactor(keyArgs.getFactor())
+        .build();
+    OpenKeySession keySession =
+        impl.createFile(omKeyArgs, request.getIsOverwrite(),
+            request.getIsRecursive());
+    return OzoneManagerProtocolProtos.CreateFileResponse.newBuilder()
+        .setKeyInfo(keySession.getKeyInfo().getProtobuf())
+        .setID(keySession.getId())
+        .setOpenVersion(keySession.getOpenVersion())
+        .build();
+  }
+
+  private OzoneManagerProtocolProtos.LookupFileResponse lookupFile(
+      OzoneManagerProtocolProtos.LookupFileRequest request)
+      throws IOException {
+    KeyArgs keyArgs = request.getKeyArgs();
+    OmKeyArgs omKeyArgs = new OmKeyArgs.Builder()
+        .setVolumeName(keyArgs.getVolumeName())
+        .setBucketName(keyArgs.getBucketName())
+        .setKeyName(keyArgs.getKeyName())
+        .build();
+    return OzoneManagerProtocolProtos.LookupFileResponse.newBuilder()
+        .setKeyInfo(impl.lookupFile(omKeyArgs).getProtobuf())
+        .build();
+  }
