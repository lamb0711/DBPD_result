HDFS-4361. When listing snapshottable directories, only return those where the user has permission to take snapshots.  Contributed by Jing Zhao


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1441202 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.namenode.INode;
-   * @return All the current snapshottable directories
+   * List all the snapshottable directories that are owned by the current user.
+   * @param userName Current user name.
+   * @return Snapshottable directories that are owned by the current user,
+   *         represented as an array of {@link SnapshottableDirectoryStatus}. If
+   *         {@code userName} is null, return all the snapshottable dirs.
-  public SnapshottableDirectoryStatus[] getSnapshottableDirListing() {
+  public SnapshottableDirectoryStatus[] getSnapshottableDirListing(
+      String userName) {
-    SnapshottableDirectoryStatus[] status = 
-        new SnapshottableDirectoryStatus[snapshottables.size()];
-    for (int i = 0; i < snapshottables.size(); i++) {
-      INodeDirectorySnapshottable dir = snapshottables.get(i);
-      status[i] = new SnapshottableDirectoryStatus(dir.getModificationTime(),
-          dir.getAccessTime(), dir.getFsPermission(), dir.getUserName(),
-          dir.getGroupName(), dir.getLocalNameBytes(), dir.getNumSnapshots(),
-          dir.getSnapshotQuota(), dir.getParent() == null ? new byte[0]
-              : DFSUtil.string2Bytes(dir.getParent().getFullPathName()));
+    List<SnapshottableDirectoryStatus> statusList = 
+        new ArrayList<SnapshottableDirectoryStatus>();
+    for (INodeDirectorySnapshottable dir : snapshottables) {
+      if (userName == null || userName.equals(dir.getUserName())) {
+        SnapshottableDirectoryStatus status = new SnapshottableDirectoryStatus(
+            dir.getModificationTime(), dir.getAccessTime(),
+            dir.getFsPermission(), dir.getUserName(), dir.getGroupName(),
+            dir.getLocalNameBytes(), dir.getNumSnapshots(),
+            dir.getSnapshotQuota(), dir.getParent() == null ? INode.EMPTY_BYTES
+                : DFSUtil.string2Bytes(dir.getParent().getFullPathName()));
+        statusList.add(status);
+      }
-    return status;
+    return statusList.toArray(new SnapshottableDirectoryStatus[statusList
+        .size()]);
