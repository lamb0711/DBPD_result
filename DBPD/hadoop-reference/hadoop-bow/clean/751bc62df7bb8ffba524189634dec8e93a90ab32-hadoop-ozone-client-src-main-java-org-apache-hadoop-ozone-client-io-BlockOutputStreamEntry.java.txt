Merge branch 'HDDS-4' into trunk

+import org.apache.hadoop.hdds.scm.pipeline.Pipeline;
-  private final XceiverClientSpi xceiverClient;
+  private final Pipeline pipeline;
-      XceiverClientSpi xceiverClient, String requestId, int chunkSize,
+      Pipeline pipeline, String requestId, int chunkSize,
-    this.xceiverClient = xceiverClient;
+    this.pipeline = pipeline;
-  /**
-   * For testing purpose, taking a some random created stream instance.
-   *
-   * @param outputStream a existing writable output stream
-   * @param length the length of data to write to the stream
-   */
-  BlockOutputStreamEntry(OutputStream outputStream, long length,
-                         Checksum checksum) {
-    this.outputStream = outputStream;
-    this.blockID = null;
-    this.key = null;
-    this.xceiverClientManager = null;
-    this.xceiverClient = null;
-    this.requestId = null;
-    this.chunkSize = -1;
-    this.token = null;
-    this.length = length;
-    this.currentPosition = 0;
-    streamBufferFlushSize = 0;
-    streamBufferMaxSize = 0;
-    bufferList = null;
-    watchTimeout = 0;
-    this.checksum = checksum;
-  }
-
+  /**
+   * BlockOutputStream is initialized in this function. This makes sure that
+   * xceiverClient initialization is not done during preallocation and only
+   * done when data is written.
+   * @throws IOException if xceiverClient initialization fails
+   */
-              xceiverClient, requestId, chunkSize, streamBufferFlushSize,
+              pipeline, requestId, chunkSize, streamBufferFlushSize,
+
-  void cleanup() throws IOException{
+  void cleanup(boolean invalidateClient) throws IOException {
-      out.cleanup();
+      out.cleanup(invalidateClient);
-    private XceiverClientSpi xceiverClient;
+    private Pipeline pipeline;
-    public Builder setXceiverClient(XceiverClientSpi client) {
-      this.xceiverClient = client;
+    public Builder setPipeline(Pipeline pipeline) {
+      this.pipeline = pipeline;
-          xceiverClientManager, xceiverClient, requestId, chunkSize,
+          xceiverClientManager, pipeline, requestId, chunkSize,
-  public XceiverClientSpi getXceiverClient() {
-    return xceiverClient;
+  public Pipeline getPipeline() {
+    return pipeline;
