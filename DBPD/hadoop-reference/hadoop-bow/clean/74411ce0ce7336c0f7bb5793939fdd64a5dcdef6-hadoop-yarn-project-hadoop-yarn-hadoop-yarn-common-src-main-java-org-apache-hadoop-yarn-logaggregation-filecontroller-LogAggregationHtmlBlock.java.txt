YARN-7417. Remove duplicated code from IndexedFileAggregatedLogsBlock
           and TFileAggregatedLogsBlock.
           Contributed by Zian Chen

+
+import java.io.IOException;
+import java.io.InputStream;
+import java.nio.charset.Charset;
+import org.apache.hadoop.yarn.webapp.hamlet2.Hamlet;
+  protected long[] checkParseRange(Block html, long startIndex,
+      long endIndex, long startTime, long endTime, long logLength, String logType) {
+    long start = startIndex < 0
+        ? logLength + startIndex : startIndex;
+    start = start < 0 ? 0 : start;
+    start = start > logLength ? logLength : start;
+    long end = endIndex < 0
+        ? logLength + endIndex : endIndex;
+    end = end < 0 ? 0 : end;
+    end = end > logLength ? logLength : end;
+    end = end < start ? start : end;
+
+    long toRead = end - start;
+    if (toRead < logLength) {
+      html.p().__("Showing " + toRead + " bytes of " + logLength
+          + " total. Click ").a(url("logs", $(NM_NODENAME), $(CONTAINER_ID),
+          $(ENTITY_STRING), $(APP_OWNER),
+          logType, "?start=0&start.time=" + startTime
+              + "&end.time=" + endTime), "here").
+          __(" for the full log.").__();
+    }
+    return new long[]{start, end};
+  }
+
+  protected void processContainerLog(Block html, long[] range, InputStream in,
+      int bufferSize, byte[] cbuf) throws IOException {
+    long totalSkipped = 0;
+    long start = range[0];
+    long toRead = range[1] - range[0];
+    while (totalSkipped < start) {
+      long ret = in.skip(start - totalSkipped);
+      if (ret == 0) {
+        //Read one byte
+        int nextByte = in.read();
+        // Check if we have reached EOF
+        if (nextByte == -1) {
+          throw new IOException("Premature EOF from container log");
+        }
+        ret = 1;
+      }
+      totalSkipped += ret;
+    }
+
+    int len = 0;
+    int currentToRead = toRead > bufferSize ? bufferSize : (int) toRead;
+    Hamlet.PRE<Hamlet> pre = html.pre();
+
+    while (toRead > 0 && (len = in.read(cbuf, 0, currentToRead)) > 0) {
+      pre.__(new String(cbuf, 0, len, Charset.forName("UTF-8")));
+      toRead = toRead - len;
+      currentToRead = toRead > bufferSize ? bufferSize : (int) toRead;
+    }
+
+    pre.__();
+  }
+
