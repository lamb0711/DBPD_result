MAPREDUCE-7095. Race conditions in closing FadvisedChunkedFile. (Miklos Szegedi via Haibo Chen)

+import com.google.common.annotations.VisibleForTesting;
+  private final Object closeLock = new Object();
-  private ReadaheadRequest readaheadRequest;
+  private volatile ReadaheadRequest readaheadRequest;
+  @VisibleForTesting
+  FileDescriptor getFd() {
+    return fd;
+  }
+
-    if (manageOsCache && readaheadPool != null) {
-      readaheadRequest = readaheadPool
-          .readaheadStream(identifier, fd, getCurrentOffset(), readaheadLength,
-              getEndOffset(), readaheadRequest);
+    synchronized (closeLock) {
+      if (fd.valid()) {
+        if (manageOsCache && readaheadPool != null) {
+          readaheadRequest = readaheadPool
+              .readaheadStream(
+                  identifier, fd, getCurrentOffset(), readaheadLength,
+                  getEndOffset(), readaheadRequest);
+        }
+        return super.nextChunk();
+      } else {
+        return null;
+      }
-    return super.nextChunk();
-    if (readaheadRequest != null) {
-      readaheadRequest.cancel();
-    }
-    if (manageOsCache && getEndOffset() - getStartOffset() > 0) {
-      try {
-        NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(identifier,
-            fd,
-            getStartOffset(), getEndOffset() - getStartOffset(),
-            POSIX_FADV_DONTNEED);
-      } catch (Throwable t) {
-        LOG.warn("Failed to manage OS cache for " + identifier, t);
+    synchronized (closeLock) {
+      if (readaheadRequest != null) {
+        readaheadRequest.cancel();
+        readaheadRequest = null;
+      if (fd.valid() &&
+          manageOsCache && getEndOffset() - getStartOffset() > 0) {
+        try {
+          NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(
+              identifier,
+              fd,
+              getStartOffset(), getEndOffset() - getStartOffset(),
+              POSIX_FADV_DONTNEED);
+        } catch (Throwable t) {
+          LOG.warn("Failed to manage OS cache for " + identifier +
+              " fd " + fd.toString(), t);
+        }
+      }
+      // fd becomes invalid upon closing
+      super.close();
-    super.close();
