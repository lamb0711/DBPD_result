Revert "HADOOP-14556. S3A to support Delegation Tokens."

This reverts commit d7152332b32a575c3a92e3f4c44b95e58462528d.

- *
- * There's two enum values for the two client encryption mechanisms the AWS
- * S3 SDK supports, even though these are not currently supported in S3A.
- * This is to aid supporting CSE in some form in future, fundamental
- * issues about file length of encrypted data notwithstanding.
- *
-  NONE("", false),
-  SSE_S3("AES256", true),
-  SSE_KMS("SSE-KMS", true),
-  SSE_C("SSE-C", true),
-  CSE_KMS("CSE-KMS", false),
-  CSE_CUSTOM("CSE-CUSTOM", false);
+  SSE_S3("AES256"),
+  SSE_KMS("SSE-KMS"),
+  SSE_C("SSE-C"),
+  NONE("");
-      = "Unknown encryption algorithm ";
+      = "Unknown Server Side Encryption algorithm ";
-  private boolean serverSide;
-  S3AEncryptionMethods(String method, final boolean serverSide) {
+  S3AEncryptionMethods(String method) {
-    this.serverSide = serverSide;
-  /**
-   * Flag to indicate this is a server-side encryption option.
-   * @return true if this is server side.
-   */
-  public boolean isServerSide() {
-    return serverSide;
-  }
-    for (S3AEncryptionMethods v : values()) {
-      if (v.getMethod().equals(name)) {
-        return v;
-      }
+    switch(name) {
+    case "AES256":
+      return SSE_S3;
+    case "SSE-KMS":
+      return SSE_KMS;
+    case "SSE-C":
+      return SSE_C;
+    default:
+      throw new IOException(UNKNOWN_ALGORITHM + name);
-    throw new IOException(UNKNOWN_ALGORITHM + name);
