HDDS-1561: Mark OPEN containers as QUASI_CLOSED as part of Ratis groupRemove (#1401)



-      if (container.getContainerState() ==
-          ContainerProtos.ContainerDataProto.State.CLOSED) {
-        // Closing a container is an idempotent operation.
-        return;
-      }
-
-      // Move the container to CLOSING state
+      // move the container to CLOSING if in OPEN state
-      // If the container is part of open pipeline, close it via write channel
-      if (ozoneContainer.getWriteChannel()
-          .isExist(closeCommand.getPipelineID())) {
-        if (closeCommand.getForce()) {
-          LOG.warn("Cannot force close a container when the container is" +
-              " part of an active pipeline.");
-          return;
+      switch (container.getContainerState()) {
+      case OPEN:
+      case CLOSING:
+        // If the container is part of open pipeline, close it via write channel
+        if (ozoneContainer.getWriteChannel()
+            .isExist(closeCommand.getPipelineID())) {
+          ContainerCommandRequestProto request =
+              getContainerCommandRequestProto(datanodeDetails,
+                  closeCommand.getContainerID());
+          ozoneContainer.getWriteChannel()
+              .submitRequest(request, closeCommand.getPipelineID());
+        } else {
+          // Container should not exist in CLOSING state without a pipeline
+          controller.markContainerUnhealthy(containerId);
-        ContainerCommandRequestProto request =
-            getContainerCommandRequestProto(datanodeDetails,
-                closeCommand.getContainerID());
-        ozoneContainer.getWriteChannel().submitRequest(
-            request, closeCommand.getPipelineID());
-        return;
-      }
-      // If we reach here, there is no active pipeline for this container.
-      if (!closeCommand.getForce()) {
-        // QUASI_CLOSE the container.
-        controller.quasiCloseContainer(containerId);
-      } else {
-        // SCM told us to force close the container.
-        controller.closeContainer(containerId);
+        break;
+      case QUASI_CLOSED:
+        if (closeCommand.getForce()) {
+          controller.closeContainer(containerId);
+          break;
+        }
+      case CLOSED:
+        break;
+      case UNHEALTHY:
+      case INVALID:
+        LOG.debug("Cannot close the container #{}, the container is"
+            + " in {} state.", containerId, container.getContainerState());
+      default:
+        break;
