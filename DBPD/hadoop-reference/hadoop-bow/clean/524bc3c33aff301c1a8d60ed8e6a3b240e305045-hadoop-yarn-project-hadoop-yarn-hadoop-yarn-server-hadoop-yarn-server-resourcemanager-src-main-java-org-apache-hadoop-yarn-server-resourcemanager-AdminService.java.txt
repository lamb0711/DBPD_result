YARN-998. Keep NM resource updated through dynamic resource config for RM/NM restart. Contributed by Junping Du

-      DynamicResourceConfiguration newconf;
+      DynamicResourceConfiguration newConf;
-      InputStream DRInputStream =
-        this.rmContext.getConfigurationProvider()
-        .getConfigurationInputStream(configuration,
-          YarnConfiguration.DR_CONFIGURATION_FILE);
-      if (DRInputStream != null) {
-        configuration.addResource(DRInputStream);
-        newconf = new DynamicResourceConfiguration(configuration, false);
+      InputStream drInputStream =
+          this.rmContext.getConfigurationProvider().getConfigurationInputStream(
+              configuration, YarnConfiguration.DR_CONFIGURATION_FILE);
+
+      if (drInputStream != null) {
+        newConf = new DynamicResourceConfiguration(configuration,
+            drInputStream);
-        newconf = new DynamicResourceConfiguration(configuration, true);
+        newConf = new DynamicResourceConfiguration(configuration);
-      if (newconf.getNodes() == null || newconf.getNodes().length == 0) {
-        RMAuditLogger.logSuccess(user.getShortUserName(), argName,
-            "AdminService");
-        return response;
-      } else {
+      if (newConf.getNodes() != null && newConf.getNodes().length != 0) {
-          newconf.getNodeResourceMap();
-
+            newConf.getNodeResourceMap();
-          UpdateNodeResourceRequest.newInstance(nodeResourceMap);
+            UpdateNodeResourceRequest.newInstance(nodeResourceMap);
-        RMAuditLogger.logSuccess(user.getShortUserName(), argName,
-          "AdminService");
-        return response;
+      // refresh dynamic resource in ResourceTrackerService
+      this.rmContext.getResourceTrackerService().
+          updateDynamicResourceConfiguration(newConf);
+      RMAuditLogger.logSuccess(user.getShortUserName(), argName,
+              "AdminService");
+      return response;
