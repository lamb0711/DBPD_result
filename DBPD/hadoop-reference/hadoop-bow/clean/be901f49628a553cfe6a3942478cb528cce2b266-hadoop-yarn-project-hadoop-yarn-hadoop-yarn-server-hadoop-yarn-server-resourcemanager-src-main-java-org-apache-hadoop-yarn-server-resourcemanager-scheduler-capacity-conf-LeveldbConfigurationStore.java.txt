YARN-9873. Mutation API Config Change need to update Version Number. Contributed by Prabhu Joseph

+  private static final String CONF_VERSION_NAME = "conf-version-store";
+  private static final String CONF_VERSION_KEY = "conf-version";
+  private DB versiondb;
-    fs.delete(getStorageDir(), true);
+    fs.delete(getStorageDir(DB_NAME), true);
-    Path storeRoot = createStorageDir();
+    Path storeRoot = createStorageDir(DB_NAME);
+    Path confVersion = createStorageDir(CONF_VERSION_NAME);
+    Options confOptions = new Options();
+    confOptions.createIfMissing(false);
+    LOG.info("Using conf version at " + confVersion);
+    File confVersionFile = new File(confVersion.toString());
+    try {
+      versiondb = JniDBFactory.factory.open(confVersionFile, confOptions);
+    } catch (NativeDB.DBException e) {
+      if (e.isNotFound() || e.getMessage().contains(" does not exist ")) {
+        LOG.info("Creating conf version at " + confVersionFile);
+        confOptions.createIfMissing(true);
+        try {
+          versiondb = JniDBFactory.factory.open(confVersionFile, confOptions);
+          versiondb.put(bytes(CONF_VERSION_KEY), bytes(String.valueOf(0)));
+        } catch (DBException dbErr) {
+          throw new IOException(dbErr.getMessage(), dbErr);
+        }
+      } else {
+        throw e;
+      }
+    }
+
+
+          long configVersion = getConfigVersion() + 1L;
+          versiondb.put(bytes(CONF_VERSION_KEY),
+              bytes(String.valueOf(configVersion)));
-  private Path createStorageDir() throws IOException {
-    Path root = getStorageDir();
+  private Path createStorageDir(String storageName) throws IOException {
+    Path root = getStorageDir(storageName);
-  private Path getStorageDir() throws IOException {
+  private Path getStorageDir(String storageName) throws IOException {
-    return new Path(storePath, DB_NAME);
+    return new Path(storePath, storageName);
+    if (versiondb != null) {
+      versiondb.close();
+    }
+      long configVersion = getConfigVersion() + 1L;
+      versiondb.put(bytes(CONF_VERSION_KEY),
+          bytes(String.valueOf(configVersion)));
+  public long getConfigVersion() {
+    String version = new String(versiondb.get(bytes(CONF_VERSION_KEY)),
+        StandardCharsets.UTF_8);
+    return Long.parseLong(version);
+  }
+
+  @Override
