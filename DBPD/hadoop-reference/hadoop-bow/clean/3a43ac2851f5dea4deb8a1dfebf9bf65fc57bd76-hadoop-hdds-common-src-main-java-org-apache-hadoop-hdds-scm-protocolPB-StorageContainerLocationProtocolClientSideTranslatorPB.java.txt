HDDS-1. Remove SCM Block DB. Contributed by Xiaoyu Yao.

-import com.google.common.base.Strings;
-   * @param containerName - Name
-  public Pipeline allocateContainer(HddsProtos.ReplicationType type,
-      HddsProtos.ReplicationFactor factor, String
-      containerName, String owner) throws IOException {
+  public ContainerInfo allocateContainer(HddsProtos.ReplicationType type,
+      HddsProtos.ReplicationFactor factor, String owner) throws IOException {
-    Preconditions.checkNotNull(containerName, "Container Name cannot be Null");
-    Preconditions.checkState(!containerName.isEmpty(), "Container name cannot" +
-        " be empty");
-        .setContainerName(containerName)
-    return Pipeline.getFromProtoBuf(response.getPipeline());
+    return ContainerInfo.fromProtobuf(response.getContainerInfo());
-  public Pipeline getContainer(String containerName) throws IOException {
-    Preconditions.checkNotNull(containerName,
-        "Container Name cannot be Null");
-    Preconditions.checkState(!containerName.isEmpty(),
-        "Container name cannot be empty");
+  public ContainerInfo getContainer(long containerID) throws IOException {
+    Preconditions.checkState(containerID >= 0,
+        "Container ID cannot be negative");
-        .setContainerName(containerName)
+        .setContainerID(containerID)
-      return Pipeline.getFromProtoBuf(response.getPipeline());
+      return ContainerInfo.fromProtobuf(response.getContainerInfo());
-  public List<ContainerInfo> listContainer(String startName, String prefixName,
-      int count) throws IOException {
+  public List<ContainerInfo> listContainer(long startContainerID, int count)
+      throws IOException {
+    Preconditions.checkState(startContainerID >= 0,
+        "Container ID cannot be negative.");
+    Preconditions.checkState(count > 0,
+        "Container count must be greater than 0.");
-    if (prefixName != null) {
-      builder.setPrefixName(prefixName);
-    }
-    if (startName != null) {
-      builder.setStartName(startName);
-    }
+    builder.setStartContainerID(startContainerID);
-   * @param containerName
+   * @param containerID
-  public void deleteContainer(String containerName)
+  public void deleteContainer(long containerID)
-    Preconditions.checkState(!Strings.isNullOrEmpty(containerName),
-        "Container name cannot be null or empty");
+    Preconditions.checkState(containerID >= 0,
+        "Container ID cannot be negative");
-        .setContainerName(containerName)
+        .setContainerID(containerID)
-   * @param name object name
+   * @param id object id
-      ObjectStageChangeRequestProto.Type type, String name,
+      ObjectStageChangeRequestProto.Type type, long id,
-    Preconditions.checkState(!Strings.isNullOrEmpty(name),
-        "Object name cannot be null or empty");
+    Preconditions.checkState(id >= 0,
+        "Object id cannot be negative.");
-            .setName(name)
+            .setId(id)
