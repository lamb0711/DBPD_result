Revert "HADOOP-16050: s3a SSL connections should use OpenSSL"

This reverts commit b067f8acaa79b1230336900a5c62ba465b2adb28.

Change-Id: I584b050a56c0e6f70b11fa3f7db00d5ac46e7dd8

-package org.apache.hadoop.security.ssl;
+package org.apache.hadoop.fs.azurebfs.utils;
-public final class OpenSSLSocketFactory extends SSLSocketFactory {
+public final class SSLSocketFactoryEx extends SSLSocketFactory {
-   * back to Default_JSSE.
+   * back to Default_JSSE
-  private static OpenSSLSocketFactory instance = null;
+  private static SSLSocketFactoryEx instance = null;
-      OpenSSLSocketFactory.class);
+      SSLSocketFactoryEx.class);
-      instance = new OpenSSLSocketFactory(preferredMode);
+      instance = new SSLSocketFactoryEx(preferredMode);
-  public static OpenSSLSocketFactory getDefaultFactory() {
+  public static SSLSocketFactoryEx getDefaultFactory() {
-  private OpenSSLSocketFactory(SSLChannelMode preferredChannelMode)
+  private SSLSocketFactoryEx(SSLChannelMode preferredChannelMode)
-    case Default:
-      try {
-        java.util.logging.Logger logger = java.util.logging.Logger.getLogger(
-                SSL.class.getName());
-        logger.setLevel(Level.WARNING);
+      case Default:
+        try {
+          java.util.logging.Logger logger = java.util.logging.Logger.getLogger(SSL.class.getName());
+          logger.setLevel(Level.WARNING);
+          ctx = SSLContext.getInstance("openssl.TLS");
+          ctx.init(null, null, null);
+          // Strong reference needs to be kept to logger until initialization of SSLContext finished (see HADOOP-16174):
+          logger.setLevel(Level.INFO);
+          channelMode = SSLChannelMode.OpenSSL;
+        } catch (NoSuchAlgorithmException e) {
+          LOG.warn("Failed to load OpenSSL. Falling back to the JSSE default.");
+          ctx = SSLContext.getDefault();
+          channelMode = SSLChannelMode.Default_JSSE;
+        }
+        break;
+      case OpenSSL:
-        // Strong reference needs to be kept to logger until initialization of
-        // SSLContext finished (see HADOOP-16174):
-        logger.setLevel(Level.INFO);
-      } catch (NoSuchAlgorithmException e) {
-        LOG.warn("Failed to load OpenSSL. Falling back to the JSSE default.");
+        break;
+      case Default_JSSE:
-      }
-      break;
-    case OpenSSL:
-      ctx = SSLContext.getInstance("openssl.TLS");
-      ctx.init(null, null, null);
-      channelMode = SSLChannelMode.OpenSSL;
-      break;
-    case Default_JSSE:
-      ctx = SSLContext.getDefault();
-      channelMode = SSLChannelMode.Default_JSSE;
-      break;
-    default:
-      throw new AssertionError("Unknown channel mode: "
-          + preferredChannelMode);
+        break;
+      default:
+        throw new AssertionError("Unknown channel mode: "
+            + preferredChannelMode);
