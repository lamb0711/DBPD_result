HDFS-12869. Ozone: Service Discovery: RPC endpoint in KSM for getServiceList. Contributed by Nanda kumar.

+import com.google.common.base.Preconditions;
+import org.apache.hadoop.ozone.ksm.helpers.ServiceInfo;
+import org.apache.hadoop.ozone.protocol.proto.KeySpaceManagerProtocolProtos
+    .ServicePort;
+import org.apache.hadoop.ozone.protocol.proto.OzoneProtos;
+import java.util.ArrayList;
+  private final OzoneConfiguration configuration;
+  private final ScmBlockLocationProtocol scmBlockClient;
+    Preconditions.checkNotNull(conf);
+    configuration = conf;
-    ScmBlockLocationProtocol scmBlockClient = getScmBlockClient(conf);
+    scmBlockClient = getScmBlockClient(configuration);
-    RPC.setProtocolEngine(conf, KeySpaceManagerProtocolPB.class,
+    RPC.setProtocolEngine(configuration, KeySpaceManagerProtocolPB.class,
-        getKsmAddress(conf);
-    ksmRpcServer = startRpcServer(conf, ksmNodeRpcAddr,
+        getKsmAddress(configuration);
+    ksmRpcServer = startRpcServer(configuration, ksmNodeRpcAddr,
-    ksmRpcAddress = OzoneClientUtils.updateRPCListenAddress(conf,
+    ksmRpcAddress = OzoneClientUtils.updateRPCListenAddress(configuration,
-    metadataManager = new KSMMetadataManagerImpl(conf);
-    volumeManager = new VolumeManagerImpl(metadataManager, conf);
+    metadataManager = new KSMMetadataManagerImpl(configuration);
+    volumeManager = new VolumeManagerImpl(metadataManager, configuration);
-    keyManager = new KeyManagerImpl(
-        getScmBlockClient(conf), metadataManager, conf);
-    httpServer = new KeySpaceManagerHttpServer(conf);
+    keyManager = new KeyManagerImpl(scmBlockClient, metadataManager,
+        configuration);
+    httpServer = new KeySpaceManagerHttpServer(configuration);
-   * @param conf
-   * @return
+   * @return {@link ScmBlockLocationProtocol}
-  public ScmInfo getScmInfo(OzoneConfiguration conf) throws IOException {
-    return getScmBlockClient(conf).getScmInfo();
+  public ScmInfo getScmInfo() throws IOException {
+    return scmBlockClient.getScmInfo();
+
+  @Override
+  public List<ServiceInfo> getServiceList() throws IOException {
+    // When we implement multi-home this call has to be handled properly.
+    List<ServiceInfo> services = new ArrayList<>();
+    ServiceInfo.Builder ksmServiceInfoBuilder = ServiceInfo.newBuilder()
+        .setNodeType(OzoneProtos.NodeType.KSM)
+        .setHostname(ksmRpcAddress.getHostName())
+        .addServicePort(ServicePort.newBuilder()
+                .setType(ServicePort.Type.RPC)
+                .setValue(ksmRpcAddress.getPort())
+            .build());
+    if (httpServer.getHttpAddress() != null) {
+      ksmServiceInfoBuilder.addServicePort(ServicePort.newBuilder()
+          .setType(ServicePort.Type.HTTP)
+          .setValue(httpServer.getHttpAddress().getPort())
+          .build());
+    }
+    if (httpServer.getHttpsAddress() != null) {
+      ksmServiceInfoBuilder.addServicePort(ServicePort.newBuilder()
+          .setType(ServicePort.Type.HTTPS)
+          .setValue(httpServer.getHttpsAddress().getPort())
+          .build());
+    }
+
+    // For client we have to return SCM with container protocol port,
+    // not block protocol.
+    InetSocketAddress scmAddr = OzoneClientUtils.getScmAddressForClients(
+        configuration);
+    ServiceInfo.Builder scmServiceInfoBuilder = ServiceInfo.newBuilder()
+        .setNodeType(OzoneProtos.NodeType.SCM)
+        .setHostname(scmAddr.getHostName())
+        .addServicePort(ServicePort.newBuilder()
+            .setType(ServicePort.Type.RPC)
+            .setValue(scmAddr.getPort()).build());
+
+    // TODO: REST servers (datanode) details to be added later.
+
+    services.add(ksmServiceInfoBuilder.build());
+    services.add(scmServiceInfoBuilder.build());
+    metrics.incNumGetServiceLists();
+    // For now there is no exception that can can happen in this call,
+    // so failure metrics is not handled. In future if there is any need to
+    // handle exception in this method, we need to incorporate
+    // metrics.incNumGetServiceListFails()
+    return services;
+  }
