HDDS-2266. Avoid evaluation of LOG.trace and LOG.debug statement in the read/write path. (#1633)



-    LOG.debug("Connecting to OM Ratis Server GroupId:{} OM:{}",
-        raftGroup.getGroupId().getUuid().toString(), omNodeID);
+    if (LOG.isDebugEnabled()) {
+      LOG.debug("Connecting to OM Ratis Server GroupId:{} OM:{}",
+          raftGroup.getGroupId().getUuid().toString(), omNodeID);
+    }
-      LOG.debug("Parsing error message for error code " +
-          errorCode);
+      LOG.debug("Parsing error message for error code {}", errorCode);
-    return raftClientReply.whenComplete((reply, e) -> LOG.debug(
-        "received reply {} for request: cmdType={} traceID={} " +
-            "exception: {}", reply, request.getCmdType(),
-        request.getTraceID(), e))
-        .thenApply(reply -> {
-          try {
-            Preconditions.checkNotNull(reply);
-            if (!reply.isSuccess()) {
-              RaftException exception = reply.getException();
-              Preconditions.checkNotNull(exception, "Raft reply failure " +
-                  "but no exception propagated.");
-              throw new CompletionException(exception);
-            }
-            return OMRatisHelper.getOMResponseFromRaftClientReply(reply);
+    return raftClientReply.whenComplete((reply, e) -> {
+      if (LOG.isDebugEnabled()) {
+        LOG.debug("received reply {} for request: cmdType={} traceID={} " +
+                "exception: {}", reply, request.getCmdType(),
+            request.getTraceID(), e);
+      }
+    }).thenApply(reply -> {
+      try {
+        Preconditions.checkNotNull(reply);
+        if (!reply.isSuccess()) {
+          RaftException exception = reply.getException();
+          Preconditions.checkNotNull(exception, "Raft reply failure " +
+              "but no exception propagated.");
+          throw new CompletionException(exception);
+        }
+        return OMRatisHelper.getOMResponseFromRaftClientReply(reply);
-          } catch (InvalidProtocolBufferException e) {
-            throw new CompletionException(e);
-          }
-        });
+      } catch (InvalidProtocolBufferException e) {
+        throw new CompletionException(e);
+      }
+    });
-    LOG.debug("sendOMRequestAsync {} {}", isReadOnlyRequest, request);
+    if (LOG.isDebugEnabled()) {
+      LOG.debug("sendOMRequestAsync {} {}", isReadOnlyRequest, request);
+    }
