HDFS-11196. Ozone: Improve logging and error handling in the container layer. Contributed by Anu Engineer.

+import org.apache.hadoop.scm.container.common.helpers.StorageContainerException;
+import static org.apache.hadoop.hdfs.ozone.protocol.proto.ContainerProtos
+    .Result.INVALID_ARGUMENT;
+import static org.apache.hadoop.hdfs.ozone.protocol.proto.ContainerProtos
+    .Result.UNABLE_TO_FIND_DATA_DIR;
+  private ContainerUtils() {
+    //never constructed.
+  }
+
-   * @param msg           Request
+   * @param msg Request
-                           ContainerData containerData) {
+      ContainerData containerData) {
-   * @param msg     - Protobuf message.
-   * @param result  - result
+   * @param msg - Protobuf message.
+   * @param result - result
-                       ContainerProtos.Result result, String message) {
+      ContainerProtos.Result result, String message) {
+   * Logs the error and returns a response to the caller.
+   *
+   * @param log - Logger
+   * @param ex - Exception
+   * @param msg - Request Object
+   * @return Response
+   */
+  public static ContainerProtos.ContainerCommandResponseProto logAndReturnError(
+      Logger log, StorageContainerException ex,
+      ContainerProtos.ContainerCommandRequestProto msg) {
+    log.info("Trace ID: {} : Message: {} : Result: {}", msg.getTraceID(),
+        ex.getMessage(), ex.getResult().getValueDescriptor().getName());
+    return getContainerResponse(msg, ex.getResult(), ex.getMessage()).build();
+  }
+
+  /**
+   * Logs the error and returns a response to the caller.
+   *
+   * @param log - Logger
+   * @param ex - Exception
+   * @param msg - Request Object
+   * @return Response
+   */
+  public static ContainerProtos.ContainerCommandResponseProto logAndReturnError(
+      Logger log, RuntimeException ex,
+      ContainerProtos.ContainerCommandRequestProto msg) {
+    log.info("Trace ID: {} : Message: {} ", msg.getTraceID(), ex.getMessage());
+    return getContainerResponse(msg, INVALID_ARGUMENT, ex.getMessage()).build();
+  }
+
+  /**
-
-   * @param metadataFile  - metadata File to verify
+   * @param metadataFile - metadata File to verify
-   * @param location      - Path
+   * @param location - Path
-                                     Path location) {
+      Path location) {
-   * @param containerData  - Data
+   *
+   * @param containerData - Data
-                                      Path location) {
+      Path location) {
+   *
+   *
+   * @throws StorageContainerException
-  public static Path getDataDirectory(ContainerData cData) throws IOException {
+  public static Path getDataDirectory(ContainerData cData)
+      throws StorageContainerException {
-    path = path.getParent();
-    if(path == null) {
-      throw new IOException("Unable to get Data directory. null path found");
+    Path parentPath = path.getParent();
+    if (parentPath == null) {
+      throw new StorageContainerException("Unable to get Data directory."
+          + path, UNABLE_TO_FIND_DATA_DIR);
-    return path.resolve(OzoneConsts.CONTAINER_DATA_PATH);
+    return parentPath.resolve(OzoneConsts.CONTAINER_DATA_PATH);
-
-
-  private ContainerUtils() {
-    //never constructed.
-  }
