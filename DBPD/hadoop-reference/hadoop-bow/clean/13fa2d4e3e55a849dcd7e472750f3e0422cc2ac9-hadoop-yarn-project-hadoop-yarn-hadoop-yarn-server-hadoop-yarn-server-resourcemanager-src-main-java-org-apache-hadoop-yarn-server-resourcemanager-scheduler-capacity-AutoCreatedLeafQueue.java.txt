YARN-7394. Merge code paths for Reservation/Plan queues and Auto Created queues. (Suma Shivaprasad via wangda)

- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
+ * <p>
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * <p>
-import java.io.IOException;
-
-import org.apache.hadoop.yarn.server.resourcemanager.reservation.ReservationSystem;
+import java.io.IOException;
+
- * This represents a dynamic {@link LeafQueue} managed by the
- * {@link ReservationSystem}
- *
+ * Leaf queues which are auto created by an underkying implementation of
+ * AbstractManagedParentQueue. Eg: PlanQueue for reservations or
+ * ManagedParentQueue for auto created dynamic queues
-public class ReservationQueue extends LeafQueue {
+public class AutoCreatedLeafQueue extends LeafQueue {
-      .getLogger(ReservationQueue.class);
+      .getLogger(AutoCreatedLeafQueue.class);
-  private PlanQueue parent;
+  private AbstractManagedParentQueue parent;
-  public ReservationQueue(CapacitySchedulerContext cs, String queueName,
-      PlanQueue parent) throws IOException {
+  public AutoCreatedLeafQueue(CapacitySchedulerContext cs, String queueName,
+      AbstractManagedParentQueue parent) throws IOException {
-    // the following parameters are common to all reservation in the plan
-    updateQuotas(parent.getUserLimitForReservation(),
+
+    updateApplicationAndUserLimits(parent.getUserLimitForAutoCreatedQueues(),
-        parent.getMaxApplicationsForReservations(),
-        parent.getMaxApplicationsPerUserForReservation());
+        parent.getMaxApplicationsForAutoCreatedQueues(),
+        parent.getMaxApplicationsPerUserForAutoCreatedQueues());
+
-      // Sanity check
-      if (!(newlyParsedQueue instanceof ReservationQueue) || !newlyParsedQueue
-          .getQueuePath().equals(getQueuePath())) {
-        throw new IOException(
-            "Trying to reinitialize " + getQueuePath() + " from "
-                + newlyParsedQueue.getQueuePath());
-      }
+
+      validate(newlyParsedQueue);
+
-      updateQuotas(parent.getUserLimitForReservation(),
+      updateApplicationAndUserLimits(parent.getUserLimitForAutoCreatedQueues(),
-          parent.getMaxApplicationsForReservations(),
-          parent.getMaxApplicationsPerUserForReservation());
+          parent.getMaxApplicationsForAutoCreatedQueues(),
+          parent.getMaxApplicationsPerUserForAutoCreatedQueues());
+
-   * absoluteCapacity
-   * 
+   * absoluteCapacity.
+   *
-   *          maxCapacity, etc..)
+   *                    maxCapacity)
-      // note: we currently set maxCapacity to capacity
-      // this might be revised later
-  private void updateQuotas(int userLimit, float userLimitFactor,
-      int maxAppsForReservation, int maxAppsPerUserForReservation) {
-    setUserLimit(userLimit);
-    setUserLimitFactor(userLimitFactor);
-    setMaxApplications(maxAppsForReservation);
-    maxApplicationsPerUser = maxAppsPerUserForReservation;
+  private void validate(final CSQueue newlyParsedQueue) throws IOException {
+    if (!(newlyParsedQueue instanceof AutoCreatedLeafQueue) || !newlyParsedQueue
+        .getQueuePath().equals(getQueuePath())) {
+      throw new IOException(
+          "Error trying to reinitialize " + getQueuePath() + " from "
+              + newlyParsedQueue.getQueuePath());
+    }
+
+
+  private void updateApplicationAndUserLimits(int userLimit,
+      float userLimitFactor,
+      int maxAppsForAutoCreatedQueues,
+      int maxAppsPerUserForAutoCreatedQueues) {
+    setUserLimit(userLimit);
+    setUserLimitFactor(userLimitFactor);
+    setMaxApplications(maxAppsForAutoCreatedQueues);
+    setMaxApplicationsPerUser(maxAppsPerUserForAutoCreatedQueues);
+  }
