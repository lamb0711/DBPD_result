YARN-9602. Use logger format in Container Executor. Contributed by Abhishek Modi.

-      LOG.warn(YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS +
-          ": impersonation without authentication enabled");
+      LOG.warn("{}: impersonation without authentication enabled",
+          YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS);
-      LOG.warn("Exit code from container executor initialization is : "
-          + exitCode, e);
+      LOG.warn("Exit code from container executor initialization is : {}",
+          exitCode, e);
-      LOG.warn("Exit code from container " + locId + " startLocalizer is : "
-          + exitCode, e);
+      LOG.warn("Exit code from container {} startLocalizer is : {}",
+          locId, exitCode, e);
-              LOG.warn("PrivilegedOperation type unsupported in launch: "
-                  + op.getOperationType());
+              LOG.warn("PrivilegedOperation type unsupported in launch: {}",
+                  op.getOperationType());
-    LOG.warn("Exit code from container " + containerId + " is : " + exitCode);
+    LOG.warn("Exit code from container {} is : {}", containerId, exitCode);
-      LOG.warn("Exception from container-launch with container ID: "
-          + containerId + " and exit code: " + exitCode, e);
+      LOG.warn("Exception from container-launch with container ID: {} "
+          + "and exit code: {}", containerId, exitCode, e);
-              "containerId: " + containerId + " Exception: " + e);
+              "containerId: {} Exception: ", containerId, e);
-      LOG.warn("Error in signalling container " + pid + " with " + signal
-          + "; exit = " + retCode, e);
+      LOG.warn("Error in signalling container {} with {}; exit = {}",
+          pid, signal, retCode, e);
-      LOG.warn("Error in reaping container "
-          + container.getContainerId().toString() + " exit = " + retCode, e);
+      LOG.warn("Error in reaping container {} exit = {}",
+          container.getContainerId(), retCode, e);
-      LOG.warn("Error in executing container interactive shell"
-          + ctx + " exit = " + retCode, e);
+      LOG.warn("Error in executing container interactive shell {} exit = {}",
+          ctx, retCode, e);
-      LOG.info("Deleting absolute path : " + dir);
+      LOG.info("Deleting absolute path : {}", dir);
-        LOG.info("Deleting path : " + del);
+        LOG.info("Deleting path : {}", del);
-      LOG.error("DeleteAsUser for " + StringUtils.join(" ", pathsToDelete)
-          + " returned with exit code: " + exitCode, e);
+      LOG.error("DeleteAsUser for {} returned with exit code: {}",
+          StringUtils.join(" ", pathsToDelete), exitCode, e);
-      LOG.error("ListAsUser for " + dir + " returned with exit code: "
-          + e.getExitCode(), e);
+      LOG.error("ListAsUser for {} returned with exit code: {}",
+          dir, e.getExitCode(), e);
-        LOG.info("Removing Docker container : " + containerId);
+        LOG.info("Removing Docker container : {}", containerId);
-      LOG.warn("Unable to remove docker container: " + containerId);
+      LOG.warn("Unable to remove docker container: {}", containerId);
-        LOG.warn("Unable to delete " + sysFSPath.toString());
+        LOG.warn("Unable to delete {}", sysFSPath);
