HDDS-233. Update ozone to latest ratis snapshot build(0.3.0-50588bd-SNAPSHOT). Contributed by Shashikant Banerjee.

+import org.apache.hadoop.conf.Configuration;
+import org.apache.ratis.retry.RetryPolicies;
+import org.apache.ratis.retry.RetryPolicy;
+import org.apache.ratis.util.TimeDuration;
+import java.util.concurrent.TimeUnit;
-    return newRaftGroup(toRaftPeers(pipeline));
+    return new RaftGroup(pipeline.getId().getRaftGroupID(),
+        toRaftPeers(pipeline));
-  static RaftClient newRaftClient(RpcType rpcType, Pipeline pipeline) {
+  static RaftClient newRaftClient(RpcType rpcType, Pipeline pipeline,
+      RetryPolicy retryPolicy) {
-        newRaftGroup(pipeline.getId().getRaftGroupID(),
-            pipeline.getMachines()));
-  }
-
-  static RaftClient newRaftClient(RpcType rpcType, RaftPeer leader) {
-    return newRaftClient(rpcType, leader.getId(),
-        newRaftGroup(new ArrayList<>(Arrays.asList(leader))));
+        newRaftGroup(pipeline.getId().getRaftGroupID(), pipeline.getMachines()),
+        retryPolicy);
-      RaftGroup group) {
-    return newRaftClient(rpcType, leader.getId(), group);
+      RetryPolicy retryPolicy) {
+    return newRaftClient(rpcType, leader.getId(),
+        newRaftGroup(new ArrayList<>(Arrays.asList(leader))), retryPolicy);
-  static RaftClient newRaftClient(
-      RpcType rpcType, RaftPeerId leader, RaftGroup group) {
+  static RaftClient newRaftClient(RpcType rpcType, RaftPeer leader,
+      RaftGroup group, RetryPolicy retryPolicy) {
+    return newRaftClient(rpcType, leader.getId(), group, retryPolicy);
+  }
+
+  static RaftClient newRaftClient(RpcType rpcType, RaftPeerId leader,
+      RaftGroup group, RetryPolicy retryPolicy) {
+
+        .setRetryPolicy(retryPolicy)
+
+  static RetryPolicy createRetryPolicy(Configuration conf) {
+    int maxRetryCount =
+        conf.getInt(OzoneConfigKeys.OZONE_CLIENT_MAX_RETRIES, OzoneConfigKeys.
+            OZONE_CLIENT_MAX_RETRIES_DEFAULT);
+    long retryInterval = conf.getTimeDuration(OzoneConfigKeys.
+            OZONE_CLIENT_RETRY_INTERVAL, OzoneConfigKeys.
+            OZONE_CLIENT_RETRY_INTERVAL_DEFAULT,
+        TimeUnit.MILLISECONDS.MILLISECONDS);
+    TimeDuration sleepDuration =
+        TimeDuration.valueOf(retryInterval, TimeUnit.MILLISECONDS);
+    RetryPolicy retryPolicy = RetryPolicies
+        .retryUpToMaximumCountWithFixedSleep(maxRetryCount, sleepDuration);
+    return retryPolicy;
+  }
