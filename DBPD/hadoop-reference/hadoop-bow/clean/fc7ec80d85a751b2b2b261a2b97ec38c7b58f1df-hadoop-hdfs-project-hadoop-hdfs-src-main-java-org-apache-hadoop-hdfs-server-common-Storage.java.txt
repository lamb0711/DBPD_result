Merge branch 'HDFS-9806' into trunk

+import org.apache.hadoop.fs.StorageType;
-      list.add(new File(it.next().getCurrentDir(), fileName));
+      File currentDir = it.next().getCurrentDir();
+      if (currentDir != null) {
+        list.add(new File(currentDir, fileName));
+      }
-      this(new File(location.getBpURI(bpid, STORAGE_DIR_CURRENT)), dirType,
+      this(getBlockPoolCurrentDir(bpid, location), dirType,
+    private static File getBlockPoolCurrentDir(String bpid,
+        StorageLocation location) {
+      if (location == null ||
+          location.getStorageType() == StorageType.PROVIDED) {
+        return null;
+      } else {
+        return new File(location.getBpURI(bpid, STORAGE_DIR_CURRENT));
+      }
+    }
+
-      if (location == null) {
+      if (location == null ||
+          location.getStorageType() == StorageType.PROVIDED) {
+      if (curDir == null) {
+        // if the directory is null, there is nothing to do.
+        return;
+      }
+      if (root == null) {
+        return null;
+      }
+      if (root == null) {
+        return null;
+      }
+      if (root == null) {
+        return null;
+      }
+      if (root == null) {
+        return null;
+      }
+      if (root == null) {
+        return null;
+      }
+      if (root == null) {
+        return null;
+      }
+      if (root == null) {
+        return null;
+      }
+      if (root == null) {
+        return null;
+      }
+      if (root == null) {
+        return null;
+      }
-      if(!currentDir.exists()) {
+      if(currentDir == null || !currentDir.exists()) {
+
+      if (location != null &&
+          location.getStorageType() == StorageType.PROVIDED) {
+        // currently we assume that PROVIDED storages are always NORMAL
+        return StorageState.NORMAL;
+      }
+
+      if (curDir == null || root == null) {
+        // at this point, we do not support recovery on PROVIDED storages
+        return;
+      }
-      return "Storage Directory " + this.root;
+      return "Storage Directory root= " + this.root +
+          "; location= " + this.location;
+    if (to == null) {
+      return;
+    }
