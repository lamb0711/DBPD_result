YARN-4206. Add Application timeouts in Application report and CLI. Contributed by Rohith Sharma K S.

+import java.util.Collections;
+import org.apache.hadoop.yarn.api.protocolrecords.UpdateApplicationTimeoutsRequest;
+import org.apache.hadoop.yarn.api.records.ApplicationTimeout;
+import org.apache.hadoop.yarn.api.records.ApplicationTimeoutType;
-import org.apache.hadoop.yarn.util.ConverterUtils;
+  public static final String UPDATE_LIFETIME = "updateLifetime";
+      opts.addOption(UPDATE_LIFETIME, true,
+          "update timeout of an application from NOW. ApplicationId can be"
+              + " passed using 'appId' option. Timeout value is in seconds.");
+      opts.getOption(UPDATE_LIFETIME).setArgName("Timeout");
+    } else if (cliParser.hasOption(UPDATE_LIFETIME)) {
+      if (!cliParser.hasOption(APP_ID)) {
+        printUsage(title, opts);
+        return exitCode;
+      }
+
+      long timeoutInSec =
+          Long.parseLong(cliParser.getOptionValue(UPDATE_LIFETIME));
+
+      updateApplicationTimeout(cliParser.getOptionValue(APP_ID),
+          ApplicationTimeoutType.LIFETIME, timeoutInSec);
+  private void updateApplicationTimeout(String applicationId,
+      ApplicationTimeoutType timeoutType, long timeoutInSec)
+      throws YarnException, IOException {
+    ApplicationId appId = ApplicationId.fromString(applicationId);
+    String newTimeout =
+        Times.formatISO8601(System.currentTimeMillis() + timeoutInSec * 1000);
+    sysout.println("Updating timeout for given timeoutType: "
+        + timeoutType.toString() + " of an application " + applicationId);
+    UpdateApplicationTimeoutsRequest request = UpdateApplicationTimeoutsRequest
+        .newInstance(appId, Collections.singletonMap(timeoutType, newTimeout));
+    client.updateApplicationTimeouts(request);
+    sysout.println(
+        "Successfully updated " + timeoutType.toString() + " of an application "
+            + applicationId + ". New expiry time is " + newTimeout);
+  }
+
-      appReportStr.print(appReport.getAmNodeLabelExpression());
+      appReportStr.println(appReport.getAmNodeLabelExpression());
+      for (ApplicationTimeout timeout : appReport.getApplicationTimeouts()) {
+        appReportStr.print("\tTimeoutType : " + timeout.getTimeoutType());
+        appReportStr.print("\tExpiryTime : " + timeout.getExpiryTime());
+        appReportStr.println(
+            "\tRemainingTime : " + timeout.getRemainingTime() + "seconds");
+      }
