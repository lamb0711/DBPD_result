HDFS-4534. Add INodeReference in order to support rename with snapshots.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1458164 13f79535-47bb-0310-9956-ffa450edef68

-public class INodeDirectory extends INode {
+public class INodeDirectory extends INodeWithAdditionalFields {
-  private int searchChildrenForExistingINode(final INode inode) {
-    Preconditions.checkNotNull(children);
-    final byte[] name = inode.getLocalNameBytes();
-    final int i = searchChildren(name);
-    if (i < 0) {
-      throw new AssertionError("Child not found: name="
-          + DFSUtil.bytes2String(name));
-    }
-    return i;
-  }
-
-    Preconditions.checkNotNull(children);
-    final INodeDirectory parent = getParent();
-    Preconditions.checkArgument(parent != null, "parent is null, this=%s", this);
-    parent.replaceChild(this, newDir);
+    final INodeReference ref = getParentReference();
+    if (ref != null) {
+      ref.setReferredINode(newDir);
+    } else {
+      final INodeDirectory parent = getParent();
+      Preconditions.checkArgument(parent != null, "parent is null, this=%s", this);
+      parent.replaceChild(this, newDir);
+    }
+    clear();
+  /** Replace the given child with a new child. */
-    final int i = searchChildrenForExistingINode(newChild);
-    final INode removed = children.set(i, newChild);
-    Preconditions.checkState(removed == oldChild);
-    oldChild.clearReferences();
+    final int i = searchChildren(newChild.getLocalNameBytes());
+    Preconditions.checkState(i >= 0);
+    Preconditions.checkState(oldChild == children.get(i));
+    
+    if (oldChild.isReference()) {
+      final INode withCount = oldChild.asReference().getReferredINode();
+      withCount.asReference().setReferredINode(newChild);
+    } else {
+      final INode removed = children.set(i, newChild);
+      Preconditions.checkState(removed == oldChild);
+    }
+  }
+
+  INodeReference.WithCount replaceChild4Reference(INode oldChild) {
+    Preconditions.checkArgument(!oldChild.isReference());
+    final INodeReference.WithCount withCount
+        = new INodeReference.WithCount(oldChild);
+    final INodeReference ref = new INodeReference(withCount);
+    withCount.incrementReferenceCount();
+    replaceChild(oldChild, ref);
+    return withCount;
+    oldChild.clear();
-  public void clearReferences() {
-    super.clearReferences();
+  public void clear() {
+    super.clear();
-    clearReferences();
+    clear();
-      inodes[i] = inode;
+      inodes[i >= 0? i: inodes.length + i] = inode;
