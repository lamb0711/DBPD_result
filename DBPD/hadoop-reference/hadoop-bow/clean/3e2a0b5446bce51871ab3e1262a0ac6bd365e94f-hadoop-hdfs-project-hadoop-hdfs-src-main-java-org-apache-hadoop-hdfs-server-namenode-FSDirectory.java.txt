HDFS-6969. Archival Storage: INode#getStoragePolicyID should always return the latest storage policy. Contributed by Jing Zhao.

+  private byte getStoragePolicyID(byte inodePolicy, byte parentPolicy) {
+    return inodePolicy != BlockStoragePolicy.ID_UNSPECIFIED ? inodePolicy :
+        parentPolicy;
+  }
+
-      final INodesInPath inodesInPath = getINodesInPath(srcs, true);
+      final INodesInPath inodesInPath = getLastINodeInPath(srcs);
-      final INode[] inodes = inodesInPath.getINodes();
-      final INode targetNode = inodes[inodes.length - 1];
-      byte parentStoragePolicy = isSuperUser ? getStoragePolicy(inodes,
-          snapshot) : BlockStoragePolicy.ID_UNSPECIFIED;
+      final INode targetNode = inodesInPath.getLastINode();
+      byte parentStoragePolicy = isSuperUser ?
+          targetNode.getStoragePolicyID() : BlockStoragePolicy.ID_UNSPECIFIED;
-        byte curPolicy = cur.getStoragePolicyID(snapshot);
+        byte curPolicy = isSuperUser ? cur.getLocalStoragePolicyID() :
+            BlockStoragePolicy.ID_UNSPECIFIED;
-            curPolicy != BlockStoragePolicy.ID_UNSPECIFIED ?
-                curPolicy : parentStoragePolicy,
-            snapshot, isRawPath);
+            getStoragePolicyID(curPolicy, parentStoragePolicy), snapshot,
+            isRawPath);
-  private byte getStoragePolicy(INode[] inodes, int snapshotId) {
-    for (int i = inodes.length - 1; i >= 0; i--) {
-      byte policy = inodes[i].getStoragePolicyID(snapshotId);
-      if (policy != BlockStoragePolicy.ID_UNSPECIFIED) {
-        return policy;
-      }
-    }
-    return BlockStoragePolicy.ID_UNSPECIFIED;
-  }  
-
