HADOOP-12385. Include nested stack trace in SaslRpcClient.getServerToken() (stevel)

+import java.util.Locale;
+  // This log is public as it is referenced in tests
-  
+
-  
-  
+
-    if (LOG.isDebugEnabled()) {
+    if (LOG.isDebugEnabled() && selectedAuthType != null) {
-  
-  }  
-  
+  }
+
-          return null; // tokens aren't supported or user doesn't have one
+          LOG.debug("tokens aren't supported for this protocol" +
+              " or user doesn't have one");
+          return null;
-          return null; // client isn't using kerberos
+          LOG.debug("client isn't using kerberos");
+          return null;
-          return null; // protocol doesn't use kerberos
+          LOG.debug("protocol doesn't use kerberos");
+          return null;
-    
+
-  
+
-   * @return Token<?> for server, or null if no token available
+   * @return Token for server, or null if no token available
-    LOG.debug("Get token info proto:"+protocol+" info:"+tokenInfo);
+    LOG.debug("Get token info proto:" + protocol + " info:" + tokenInfo);
-    } catch (InstantiationException e) {
-      throw new IOException(e.toString());
-    } catch (IllegalAccessException e) {
-      throw new IOException(e.toString());
+    } catch (InstantiationException | IllegalAccessException e) {
+      throw new IOException(e.toString(), e);
-  
+
-    LOG.debug("Get kerberos info proto:"+protocol+" info:"+krbInfo);
+    LOG.debug("Get kerberos info proto:" + protocol + " info:" + krbInfo);
-  
-    
+
-    
+
-  
+
-  
+
-  
+
-    return qop != null && !"auth".equalsIgnoreCase(qop);
+    return qop != null && !"auth".toLowerCase(Locale.ENGLISH).equals(qop);
-  
+
-   * @param in - InputStream used to make the connection
-   * @return InputStream that may be using SASL unwrap
+   * @param out - OutputStream used to make the connection
+   * @return OutputStream that may be using wrapping
-    
+
-    
+
-    
+
-      
+
-      
+
-  
+
