HDFS-6940. Refactoring to allow ConsensusNode implementation.
Contributed by Konstantin Shvachko.
-  private void loadFSImage(StartupOption startOpt) throws IOException {
+  protected void loadFSImage(StartupOption startOpt) throws IOException {
-  private void startSecretManager() {
+  protected void startSecretManager() {
-  private void startSecretManagerIfNecessary() {
+  protected void startSecretManagerIfNecessary() {
-  private boolean shouldUseDelegationTokens() {
+  protected boolean shouldUseDelegationTokens() {
+  protected
+  protected
-  private INodeFile checkLease(String src, String holder, INode inode,
-                               long fileId)
+  protected INodeFile checkLease(String src, String holder, INode inode,
+                                 long fileId)
-  private void commitOrCompleteLastBlock(final INodeFile fileINode,
+  protected void commitOrCompleteLastBlock(final INodeFile fileINode,
+  protected
-  private void persistBlocks(String path, INodeFile file,
-                             boolean logRetryCache) {
+  protected void persistBlocks(String path, INodeFile file,
+                               boolean logRetryCache) {
-  private void persistNewBlock(String path, INodeFile file) {
+  protected void persistNewBlock(String path, INodeFile file) {
-  private boolean isAllowedDelegationTokenOp() throws IOException {
+  protected boolean isAllowedDelegationTokenOp() throws IOException {
-      Map<String, Object> innerinfo = ImmutableMap.<String, Object>builder()
+      info.put(node.getHostName(), getLiveNodeInfo(node));
+    }
+    return JSON.toString(info);
+  }
+
+  protected Map<String, Object> getLiveNodeInfo(DatanodeDescriptor node) {
+    return ImmutableMap.<String, Object>builder()
-
-      info.put(node.getHostName(), innerinfo);
-    }
-    return JSON.toString(info);
-
-  @VisibleForTesting
-  public SafeModeInfo getSafeModeInfoForTests() {
-    return safeMode;
-  }
+  public SafeModeInfo getSafeModeInfo() {
+    return safeMode;
+  }
+
