YARN-6892. [YARN-3926] Improve API implementation in Resources and DominantResourceCalculator class. Contributed by Sunil G.

-    for (ResourceInformation entry : lhs.getResources()) {
-      String name = entry.getName();
+    int maxLength = ResourceUtils.getResourceTypesArray().length;
+    for (int i = 0; i < maxLength; i++) {
-        ResourceInformation rhsValue = rhs.getResourceInformation(name);
-        ResourceInformation lhsValue = entry;
+        ResourceInformation rhsValue = rhs.getResourceInformation(i);
+        ResourceInformation lhsValue = lhs.getResourceInformation(i);
-        lhs.setResourceValue(name, lhsValue.getValue() + convertedRhs);
+        lhs.setResourceValue(i, lhsValue.getValue() + convertedRhs);
-    for (ResourceInformation entry : lhs.getResources()) {
-      String name = entry.getName();
+    int maxLength = ResourceUtils.getResourceTypesArray().length;
+    for (int i = 0; i < maxLength; i++) {
-        ResourceInformation rhsValue = rhs.getResourceInformation(name);
-        ResourceInformation lhsValue = entry;
+        ResourceInformation rhsValue = rhs.getResourceInformation(i);
+        ResourceInformation lhsValue = lhs.getResourceInformation(i);
-        lhs.setResourceValue(name, lhsValue.getValue() - convertedRhs);
+        lhs.setResourceValue(i, lhsValue.getValue() - convertedRhs);
-    for (ResourceInformation entry : lhs.getResources()) {
-      String name = entry.getName();
-      ResourceInformation lhsValue = entry;
-      lhs.setResourceValue(name, (long) (lhsValue.getValue() * by));
+    int maxLength = ResourceUtils.getResourceTypesArray().length;
+    for (int i = 0; i < maxLength; i++) {
+      try {
+        ResourceInformation lhsValue = lhs.getResourceInformation(i);
+        lhs.setResourceValue(i, (long) (lhsValue.getValue() * by));
+      } catch (ResourceNotFoundException ye) {
+        LOG.warn("Resource is missing:" + ye.getMessage());
+        continue;
+      }
-    for (ResourceInformation entry : lhs.getResources()) {
-      String name = entry.getName();
+    int maxLength = ResourceUtils.getResourceTypesArray().length;
+    for (int i = 0; i < maxLength; i++) {
-        ResourceInformation rhsValue = rhs.getResourceInformation(name);
-        ResourceInformation lhsValue = entry;
+        ResourceInformation rhsValue = rhs.getResourceInformation(i);
+        ResourceInformation lhsValue = lhs.getResourceInformation(i);
-        lhs.setResourceValue(name, lhsValue.getValue() + convertedRhs);
+        lhs.setResourceValue(i, lhsValue.getValue() + convertedRhs);
-    for (ResourceInformation entry : out.getResources()) {
-      String name = entry.getName();
-      ResourceInformation lhsValue = entry;
-      out.setResourceValue(name, (long) (lhsValue.getValue() * by));
+    int maxLength = ResourceUtils.getResourceTypesArray().length;
+    for (int i = 0; i < maxLength; i++) {
+      try {
+        ResourceInformation lhsValue = lhs.getResourceInformation(i);
+        out.setResourceValue(i, (long) (lhsValue.getValue() * by));
+      } catch (ResourceNotFoundException ye) {
+        LOG.warn("Resource is missing:" + ye.getMessage());
+        continue;
+      }
-    for (ResourceInformation entry : smaller.getResources()) {
-      String name = entry.getName();
+    int maxLength = ResourceUtils.getResourceTypesArray().length;
+    for (int i = 0; i < maxLength; i++) {
-        ResourceInformation rhsValue = bigger.getResourceInformation(name);
-        ResourceInformation lhsValue = entry;
+        ResourceInformation rhsValue = bigger.getResourceInformation(i);
+        ResourceInformation lhsValue = smaller.getResourceInformation(i);
-        if(lhsValue.getValue() > convertedRhs) {
+        if (lhsValue.getValue() > convertedRhs) {
-        return false;
+        continue;
-    for (ResourceInformation entry : lhs.getResources()) {
-      String name = entry.getName();
+    int maxLength = ResourceUtils.getResourceTypesArray().length;
+    for (int i = 0; i < maxLength; i++) {
-        ResourceInformation rhsValue = rhs.getResourceInformation(name);
-        ResourceInformation lhsValue = entry;
+        ResourceInformation rhsValue = rhs.getResourceInformation(i);
+        ResourceInformation lhsValue = lhs.getResourceInformation(i);
-        ResourceInformation outInfo =
-            lhsValue.getValue() < convertedRhs ? lhsValue : rhsValue;
-        ret.setResourceInformation(name, outInfo);
+        ResourceInformation outInfo = lhsValue.getValue() < convertedRhs
+            ? lhsValue
+            : rhsValue;
+        ret.setResourceInformation(i, outInfo);
-    for (ResourceInformation entry : lhs.getResources()) {
-      String name = entry.getName();
+    int maxLength = ResourceUtils.getResourceTypesArray().length;
+    for (int i = 0; i < maxLength; i++) {
-        ResourceInformation rhsValue = rhs.getResourceInformation(name);
-        ResourceInformation lhsValue = entry;
+        ResourceInformation rhsValue = rhs.getResourceInformation(i);
+        ResourceInformation lhsValue = lhs.getResourceInformation(i);
-        ResourceInformation outInfo =
-            lhsValue.getValue() > convertedRhs ? lhsValue : rhsValue;
-        ret.setResourceInformation(name, outInfo);
+        ResourceInformation outInfo = lhsValue.getValue() > convertedRhs
+            ? lhsValue
+            : rhsValue;
+        ret.setResourceInformation(i, outInfo);
