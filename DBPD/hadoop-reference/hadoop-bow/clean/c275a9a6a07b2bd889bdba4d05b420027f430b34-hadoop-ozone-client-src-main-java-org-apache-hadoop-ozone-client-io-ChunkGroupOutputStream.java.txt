Merge trunk into HDDS-48

-import org.apache.hadoop.ozone.ksm.helpers.KsmKeyLocationInfoGroup;
+import org.apache.hadoop.hdds.scm.container.common.helpers.ContainerWithPipeline;
+import org.apache.hadoop.ozone.om.helpers.OmKeyLocationInfoGroup;
-import org.apache.hadoop.ozone.ksm.helpers.KsmKeyArgs;
-import org.apache.hadoop.ozone.ksm.helpers.KsmKeyInfo;
-import org.apache.hadoop.ozone.ksm.helpers.KsmKeyLocationInfo;
-import org.apache.hadoop.ozone.ksm.helpers.OpenKeySession;
-import org.apache.hadoop.ozone.ksm.protocolPB.KeySpaceManagerProtocolClientSideTranslatorPB;
+import org.apache.hadoop.ozone.om.helpers.OmKeyArgs;
+import org.apache.hadoop.ozone.om.helpers.OmKeyInfo;
+import org.apache.hadoop.ozone.om.helpers.OmKeyLocationInfo;
+import org.apache.hadoop.ozone.om.helpers.OpenKeySession;
+import org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB;
-  private final KeySpaceManagerProtocolClientSideTranslatorPB ksmClient;
+  private final OzoneManagerProtocolClientSideTranslatorPB omClient;
-  private final KsmKeyArgs keyArgs;
+  private final OmKeyArgs keyArgs;
-    ksmClient = null;
+    omClient = null;
-      KeySpaceManagerProtocolClientSideTranslatorPB ksmClient,
+      OzoneManagerProtocolClientSideTranslatorPB omClient,
-    this.ksmClient = ksmClient;
+    this.omClient = omClient;
-    KsmKeyInfo info = handler.getKeyInfo();
-    this.keyArgs = new KsmKeyArgs.Builder()
+    OmKeyInfo info = handler.getKeyInfo();
+    this.keyArgs = new OmKeyArgs.Builder()
-  public void addPreallocateBlocks(KsmKeyLocationInfoGroup version,
+  public void addPreallocateBlocks(OmKeyLocationInfoGroup version,
-    for (KsmKeyLocationInfo subKeyInfo : version.getLocationList()) {
+    for (OmKeyLocationInfo subKeyInfo : version.getLocationList()) {
-  private void checkKeyLocationInfo(KsmKeyLocationInfo subKeyInfo)
+  private void checkKeyLocationInfo(OmKeyLocationInfo subKeyInfo)
-    ContainerInfo container = scmClient.getContainer(
-        subKeyInfo.getContainerID());
+    ContainerWithPipeline containerWithPipeline = scmClient
+        .getContainerWithPipeline(subKeyInfo.getContainerID());
+    ContainerInfo container = containerWithPipeline.getContainerInfo();
+
-        xceiverClientManager.acquireClient(container.getPipeline(),
+        xceiverClientManager.acquireClient(containerWithPipeline.getPipeline(),
-      Preconditions.checkNotNull(ksmClient);
+      Preconditions.checkNotNull(omClient);
-        Preconditions.checkNotNull(ksmClient);
+        Preconditions.checkNotNull(omClient);
-   * Contact KSM to get a new block. Set the new block with the index (e.g.
+   * Contact OM to get a new block. Set the new block with the index (e.g.
-    KsmKeyLocationInfo subKeyInfo = ksmClient.allocateBlock(keyArgs, openID);
+    OmKeyLocationInfo subKeyInfo = omClient.allocateBlock(keyArgs, openID);
-   * Commit the key to KSM, this will add the blocks as the new key blocks.
+   * Commit the key to OM, this will add the blocks as the new key blocks.
-      ksmClient.commitKey(keyArgs, openID);
+      omClient.commitKey(keyArgs, openID);
-    private KeySpaceManagerProtocolClientSideTranslatorPB ksmClient;
+    private OzoneManagerProtocolClientSideTranslatorPB omClient;
-    public Builder setKsmClient(
-        KeySpaceManagerProtocolClientSideTranslatorPB client) {
-      this.ksmClient = client;
+    public Builder setOmClient(
+        OzoneManagerProtocolClientSideTranslatorPB client) {
+      this.omClient = client;
-          ksmClient, chunkSize, requestID, factor, type);
+          omClient, chunkSize, requestID, factor, type);
