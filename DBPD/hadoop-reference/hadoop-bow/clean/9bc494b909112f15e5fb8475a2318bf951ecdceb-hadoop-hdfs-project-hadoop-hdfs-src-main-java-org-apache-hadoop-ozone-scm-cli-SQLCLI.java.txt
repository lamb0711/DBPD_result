HDFS-11802. Ozone : add DEBUG CLI support for open container db file. Contributed by Chen Liang

+import static org.apache.hadoop.ozone.OzoneConsts.OPEN_CONTAINERS_DB;
+  // for openContainer.db
+  private static final String CREATE_OPEN_CONTAINER =
+      "CREATE TABLE openContainer (" +
+          "containerName TEXT PRIMARY KEY NOT NULL, " +
+          "containerUsed INTEGER NOT NULL)";
+  private static final String INSERT_OPEN_CONTAINER =
+      "INSERT INTO openContainer (containerName, containerUsed) " +
+          "VALUES (\"%s\", \"%s\")";
+    } else if (dbName.toString().equals(OPEN_CONTAINERS_DB)) {
+      LOG.info("Converting open container DB");
+      convertOpenContainerDB(dbPath, outPath);
-         Connection conn = connectDB(outPath.toString())) {
+         Connection conn = connectDB(outPath.toString());
+         DBIterator iter = dbStore.getIterator()) {
-      DBIterator iter = dbStore.getIterator();
-         Connection conn = connectDB(outPath.toString())) {
+         Connection conn = connectDB(outPath.toString());
+         DBIterator iter = dbStore.getIterator()) {
-      DBIterator iter = dbStore.getIterator();
-         Connection conn = connectDB(outPath.toString())) {
+         Connection conn = connectDB(outPath.toString());
+         DBIterator iter = dbStore.getIterator()) {
-      DBIterator iter = dbStore.getIterator();
+  /**
+   * Convert openContainer.db to sqlite db file. This is rather simple db,
+   * the schema has only one table:
+   *
+   * openContainer
+   * -------------------------------
+   * containerName* | containerUsed
+   * -------------------------------
+   *
+   * @param dbPath path to container db.
+   * @param outPath path to output sqlite
+   * @throws IOException throws exception.
+   */
+  private void convertOpenContainerDB(Path dbPath, Path outPath)
+      throws Exception {
+    LOG.info("Create table for open container db.");
+    File dbFile = dbPath.toFile();
+    org.iq80.leveldb.Options dbOptions = new org.iq80.leveldb.Options();
+    try (LevelDBStore dbStore = new LevelDBStore(dbFile, dbOptions);
+        Connection conn = connectDB(outPath.toString());
+        DBIterator iter = dbStore.getIterator()) {
+      executeSQL(conn, CREATE_OPEN_CONTAINER);
+
+      iter.seekToFirst();
+      while (iter.hasNext()) {
+        Map.Entry<byte[], byte[]> entry = iter.next();
+        String containerName = DFSUtil.bytes2String(entry.getKey());
+        Long containerUsed = Long.parseLong(
+            DFSUtil.bytes2String(entry.getValue()));
+        String insertOpenContainer = String.format(
+            INSERT_OPEN_CONTAINER, containerName, containerUsed);
+        executeSQL(conn, insertOpenContainer);
+      }
+    }
+  }
+
