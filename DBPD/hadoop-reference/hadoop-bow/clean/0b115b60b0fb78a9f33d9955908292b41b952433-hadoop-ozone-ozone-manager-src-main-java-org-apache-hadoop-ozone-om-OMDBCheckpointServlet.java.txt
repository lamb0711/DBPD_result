HDDS-1371. OMSnapshotProvider to download DB checkpoint from leader OM. (#703)


+import static org.apache.hadoop.ozone.OzoneConsts.OM_RATIS_SNAPSHOT_BEFORE_DB_CHECKPOINT;
+import static org.apache.hadoop.ozone.OzoneConsts.OM_RATIS_SNAPSHOT_INDEX;
+  private transient OzoneManager om;
-    OzoneManager om = (OzoneManager) getServletContext()
+    om = (OzoneManager) getServletContext()
+      boolean takeRatisSnapshot = false;
+      String snapshotBeforeCheckpointParam =
+          request.getParameter(OM_RATIS_SNAPSHOT_BEFORE_DB_CHECKPOINT);
+      if (StringUtils.isNotEmpty(snapshotBeforeCheckpointParam)) {
+        takeRatisSnapshot = Boolean.valueOf(snapshotBeforeCheckpointParam);
+      }
+
+      long ratisSnapshotIndex;
+      if (takeRatisSnapshot) {
+        // If OM follower is downloading the checkpoint, we should save a
+        // ratis snapshot first. This step also included flushing the OM DB.
+        // Hence, we can set flush to false.
+        flush = false;
+        ratisSnapshotIndex = om.saveRatisSnapshot();
+      } else {
+        ratisSnapshotIndex = om.loadRatisSnapshotIndex();
+      }
+
+      // Ratis snapshot index used when downloading DB checkpoint to OM follower
+      response.setHeader(OM_RATIS_SNAPSHOT_INDEX,
+          String.valueOf(ratisSnapshotIndex));
