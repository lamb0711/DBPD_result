YARN-7317. Fix overallocation resulted from ceiling in LocalityMulticastAMRMProxyPolicy. (contributed by Botong Huang via curino)

-import java.util.Random;
+import org.apache.hadoop.yarn.server.federation.policies.exceptions.FederationPolicyException;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-  private static final Logger LOG =
-      LoggerFactory.getLogger(WeightedRandomRouterPolicy.class);
-  private Random rand = new Random(System.currentTimeMillis());
-
-    float totActiveWeight = 0;
+    ArrayList<Float> weightList = new ArrayList<>();
+    ArrayList<SubClusterId> scIdList = new ArrayList<>();
-        totActiveWeight += entry.getValue();
+        weightList.add(entry.getValue());
+        scIdList.add(entry.getKey().toId());
-    float lookupValue = rand.nextFloat() * totActiveWeight;
-    for (SubClusterId id : activeSubclusters.keySet()) {
-      if (blacklist != null && blacklist.contains(id)) {
-        continue;
-      }
-      SubClusterIdInfo idInfo = new SubClusterIdInfo(id);
-      if (weights.containsKey(idInfo)) {
-        lookupValue -= weights.get(idInfo);
-      }
-      if (lookupValue <= 0) {
-        return id;
-      }
+    int pickedIndex = FederationPolicyUtils.getWeightedRandom(weightList);
+    if (pickedIndex == -1) {
+      throw new FederationPolicyException(
+          "No positive weight found on active subclusters");
-    // should never happen
-    return null;
+    return scIdList.get(pickedIndex);
