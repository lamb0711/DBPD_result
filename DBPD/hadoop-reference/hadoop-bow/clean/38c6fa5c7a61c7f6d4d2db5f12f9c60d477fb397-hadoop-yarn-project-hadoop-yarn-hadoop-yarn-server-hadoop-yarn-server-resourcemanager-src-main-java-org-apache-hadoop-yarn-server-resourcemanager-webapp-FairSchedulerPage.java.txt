HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.

-import org.apache.hadoop.yarn.webapp.hamlet.Hamlet;
-import org.apache.hadoop.yarn.webapp.hamlet.Hamlet.DIV;
-import org.apache.hadoop.yarn.webapp.hamlet.Hamlet.LI;
-import org.apache.hadoop.yarn.webapp.hamlet.Hamlet.UL;
+import org.apache.hadoop.yarn.webapp.hamlet2.Hamlet;
+import org.apache.hadoop.yarn.webapp.hamlet2.Hamlet.DIV;
+import org.apache.hadoop.yarn.webapp.hamlet2.Hamlet.LI;
+import org.apache.hadoop.yarn.webapp.hamlet2.Hamlet.UL;
-          _("Used Resources:", qinfo.getUsedResources().toString()).
-          _("Demand Resources:", qinfo.getDemandResources().toString()).
-          _("Num Active Applications:", qinfo.getNumActiveApplications()).
-          _("Num Pending Applications:", qinfo.getNumPendingApplications()).
-          _("Min Resources:", qinfo.getMinResources().toString()).
-          _("Max Resources:", qinfo.getMaxResources().toString()).
-          _("Reserved Resources:", qinfo.getReservedResources().toString());
+          __("Used Resources:", qinfo.getUsedResources().toString()).
+          __("Demand Resources:", qinfo.getDemandResources().toString()).
+          __("Num Active Applications:", qinfo.getNumActiveApplications()).
+          __("Num Pending Applications:", qinfo.getNumPendingApplications()).
+          __("Min Resources:", qinfo.getMinResources().toString()).
+          __("Max Resources:", qinfo.getMaxResources().toString()).
+          __("Reserved Resources:", qinfo.getReservedResources().toString());
-          ri._("Max Running Applications:", qinfo.getMaxApplications());
+        ri.__("Max Running Applications:", qinfo.getMaxApplications());
-      ri._(STEADY_FAIR_SHARE + ":", qinfo.getSteadyFairShare().toString());
-      ri._(INSTANTANEOUS_FAIR_SHARE + ":", qinfo.getFairShare().toString());
-      ri._("Preemptable:", qinfo.isPreemptable());
-      html._(InfoBlock.class);
+      ri.__(STEADY_FAIR_SHARE + ":", qinfo.getSteadyFairShare().toString());
+      ri.__(INSTANTANEOUS_FAIR_SHARE + ":", qinfo.getFairShare().toString());
+      ri.__("Preemptable:", qinfo.isPreemptable());
+      html.__(InfoBlock.class);
-          _("Used Resources:", qinfo.getUsedResources().toString()).
-          _("Min Resources:", qinfo.getMinResources().toString()).
-          _("Max Resources:", qinfo.getMaxResources().toString()).
-          _("Reserved Resources:", qinfo.getReservedResources().toString());
+          __("Used Resources:", qinfo.getUsedResources().toString()).
+          __("Min Resources:", qinfo.getMinResources().toString()).
+          __("Max Resources:", qinfo.getMaxResources().toString()).
+          __("Reserved Resources:", qinfo.getReservedResources().toString());
-          ri._("Max Running Applications:", qinfo.getMaxApplications());
+        ri.__("Max Running Applications:", qinfo.getMaxApplications());
-      ri._(STEADY_FAIR_SHARE + ":", qinfo.getSteadyFairShare().toString());
-      ri._(INSTANTANEOUS_FAIR_SHARE + ":", qinfo.getFairShare().toString());
-      html._(InfoBlock.class);
+      ri.__(STEADY_FAIR_SHARE + ":", qinfo.getSteadyFairShare().toString());
+      ri.__(INSTANTANEOUS_FAIR_SHARE + ":", qinfo.getFairShare().toString());
+      html.__(InfoBlock.class);
-                _('.')._().
+            __('.').__().
-                _('.')._().
+            __('.').__().
-                _('.')._().
-              span(".q", info.getQueueName())._().
+            __('.').__().
+              span(".q", info.getQueueName()).__().
-              _(join(percent(used), " used"))._();
+            __(join(percent(used), " used")).__();
-          li.ul("#lq").li()._(LeafQueueBlock.class)._()._();
+          li.ul("#lq").li().__(LeafQueueBlock.class).__().__();
-          li.ul("#lq").li()._(ParentQueueBlock.class)._()._();
-          li._(QueueBlock.class);
+          li.ul("#lq").li().__(ParentQueueBlock.class).__().__();
+          li.__(QueueBlock.class);
-        li._();
+        li.__();
-      ul._();
+      ul.__();
-      html._(MetricsOverviewTable.class);
+      html.__(MetricsOverviewTable.class);
-            _("Application Queues")._().
+          __("Application Queues").__().
-              span().$style(Q_END)._("100% ")._().
-              span(".q", "default")._()._();
+              span().$style(Q_END).__("100% ").__().
+              span(".q", "default").__().__();
-            span().$style("font-weight: bold")._("Legend:")._().
+            span().$style("font-weight: bold").__("Legend:").__().
-              _(STEADY_FAIR_SHARE)._().
+            __(STEADY_FAIR_SHARE).__().
-              _(INSTANTANEOUS_FAIR_SHARE)._().
+            __(INSTANTANEOUS_FAIR_SHARE).__().
-              _("Used")._().
+            __("Used").__().
-              _("Used (over fair share)")._().
+            __("Used (over fair share)").__().
-              _("Max Capacity")._().
-        _().
+            __("Max Capacity").__().
+            __().
-                  used > 1 ? Q_OVER : Q_UNDER))._(".")._().
-              span(".q", "root")._().
+                  used > 1 ? Q_OVER : Q_UNDER)).__(".").__().
+              span(".q", "root").__().
-              _(join(percent(used), " used"))._().
-            _(QueueBlock.class)._();
+            __(join(percent(used), " used")).__().
+            __(QueueBlock.class).__();
-      ul._()._().
+      ul.__().__().
-          _("$('#cs').hide();")._()._().
-      _(FairSchedulerAppsBlock.class);
+          __("$('#cs').hide();").__().__().
+          __(FairSchedulerAppsBlock.class);
-  @Override protected void postHead(Page.HTML<_> html) {
+  @Override protected void postHead(Page.HTML<__> html) {
-        _("#cs { padding: 0.5em 0 1em 0; margin-bottom: 1em; position: relative }",
+        __("#cs { padding: 0.5em 0 1em 0; margin-bottom: 1em; position: relative }",
-          "table.info tr th {width: 50%}")._(). // to center info table
+          "table.info tr th {width: 50%}").__(). // to center info table
-        _("$(function() {",
+        __("$(function() {",
-          "});")._().
-        _(SchedulerPageUtil.QueueBlockUtil.class);
+          "});").__().
+        __(SchedulerPageUtil.QueueBlockUtil.class);
