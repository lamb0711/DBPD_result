HDFS-13110: [SPS]: Reduce the number of APIs in NamenodeProtocol used by external satisfier. Contributed by Rakesh R.

-  public String getFilePath(Long inodeId) throws IOException {
+  public String getNextSPSPath() throws IOException {
-    String operationName = "getFilePath";
-    namesystem.checkSuperuserPrivilege(operationName);
-    if (nn.isStandbyState()) {
-      throw new StandbyException("Not supported by Standby Namenode.");
-    }
-    return namesystem.getFilePath(inodeId);
-  }
-
-  @Override
-  public Long getNextSPSPathId() throws IOException {
-    checkNNStartup();
-    String operationName = "getNextSPSPathId";
+    String operationName = "getNextSPSPath";
-    return namesystem.getBlockManager().getSPSManager().getNextPathId();
+    Long pathId = namesystem.getBlockManager().getSPSManager().getNextPathId();
+    if (pathId == null) {
+      return null;
+    }
+    return namesystem.getFilePath(pathId);
-
-  @Override
-  public boolean hasLowRedundancyBlocks(long inodeId) throws IOException {
-    checkNNStartup();
-    String operationName = "hasLowRedundancyBlocks";
-    namesystem.checkSuperuserPrivilege(operationName);
-    if (nn.isStandbyState()) {
-      throw new StandbyException("Not supported by Standby Namenode.");
-    }
-    return namesystem.getBlockManager().hasLowRedundancyBlocks(inodeId);
-  }
