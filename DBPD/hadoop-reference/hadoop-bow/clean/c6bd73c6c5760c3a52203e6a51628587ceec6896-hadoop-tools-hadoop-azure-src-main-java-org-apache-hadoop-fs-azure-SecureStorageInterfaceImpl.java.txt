HADOOP-14547. [WASB] the configured retry policy is not used for all storage operations.
Contributed by Thomas.

+  private RetryPolicyFactory retryPolicy;
+  private int timeoutIntervalInMs;
+    timeoutIntervalInMs = timeoutInMs;
+    retryPolicy = retryPolicyFactory;
-      return new SASCloudBlobContainerWrapperImpl(storageAccount,
-          new CloudBlobContainer(sasKeyGenerator.getContainerSASUri(
-              storageAccount, name)), sasKeyGenerator);
+      CloudBlobContainer container = new CloudBlobContainer(sasKeyGenerator.getContainerSASUri(
+          storageAccount, name));
+      if (retryPolicy != null) {
+        container.getServiceClient().getDefaultRequestOptions().setRetryPolicyFactory(retryPolicy);
+      }
+      if (timeoutIntervalInMs > 0) {
+        container.getServiceClient().getDefaultRequestOptions().setTimeoutIntervalInMs(timeoutIntervalInMs);
+      }
+      return new SASCloudBlobContainerWrapperImpl(storageAccount, container, sasKeyGenerator);
+        CloudBlockBlob blob = new CloudBlockBlob(sasKeyGenerator.getRelativeBlobSASUri(
+                storageAccount, getName(), relativePath));
+        blob.getServiceClient().setDefaultRequestOptions(
+                container.getServiceClient().getDefaultRequestOptions());
-            new CloudBlockBlob(sasKeyGenerator.getRelativeBlobSASUri(
-                storageAccount, getName(), relativePath)));
+                blob);
+        CloudPageBlob blob = new CloudPageBlob(sasKeyGenerator.getRelativeBlobSASUri(
+                storageAccount, getName(), relativePath));
+        blob.getServiceClient().setDefaultRequestOptions(
+                container.getServiceClient().getDefaultRequestOptions());
-            new CloudPageBlob(sasKeyGenerator.getRelativeBlobSASUri(
-                storageAccount, getName(), relativePath)));
+                blob);
