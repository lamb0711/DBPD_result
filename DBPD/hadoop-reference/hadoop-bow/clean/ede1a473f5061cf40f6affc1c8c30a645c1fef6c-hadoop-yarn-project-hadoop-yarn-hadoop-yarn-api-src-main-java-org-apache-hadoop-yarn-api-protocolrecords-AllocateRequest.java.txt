YARN-5552. Add Builder methods for common yarn API records. (Tao Jie via wangda)

-    return newInstance(responseID, appProgress, resourceAsk,
-        containersToBeReleased, resourceBlacklistRequest, null);
+    return AllocateRequest.newBuilder().responseId(responseID)
+        .progress(appProgress).askList(resourceAsk)
+        .releaseList(containersToBeReleased)
+        .resourceBlacklistRequest(resourceBlacklistRequest).build();
-    AllocateRequest allocateRequest = Records.newRecord(AllocateRequest.class);
-    allocateRequest.setResponseId(responseID);
-    allocateRequest.setProgress(appProgress);
-    allocateRequest.setAskList(resourceAsk);
-    allocateRequest.setReleaseList(containersToBeReleased);
-    allocateRequest.setResourceBlacklistRequest(resourceBlacklistRequest);
-    allocateRequest.setUpdateRequests(updateRequests);
-    return allocateRequest;
+    return AllocateRequest.newBuilder().responseId(responseID)
+        .progress(appProgress).askList(resourceAsk)
+        .releaseList(containersToBeReleased)
+        .resourceBlacklistRequest(resourceBlacklistRequest)
+        .updateRequests(updateRequests)
+        .build();
-}
+
+  @Public
+  @Unstable
+  public static AllocateRequestBuilder newBuilder() {
+    return new AllocateRequestBuilder();
+  }
+
+  /**
+   * Class to construct instances of {@link AllocateRequest} with specific
+   * options.
+   */
+  @Public
+  @Stable
+  public static final class AllocateRequestBuilder {
+    private AllocateRequest allocateRequest =
+        Records.newRecord(AllocateRequest.class);
+
+    private AllocateRequestBuilder() {
+    }
+
+    /**
+     * Set the <code>responseId</code> of the request.
+     * @see AllocateRequest#setResponseId(int)
+     * @param responseId <code>responseId</code> of the request
+     * @return {@link AllocateRequestBuilder}
+     */
+    @Public
+    @Stable
+    public AllocateRequestBuilder responseId(int responseId) {
+      allocateRequest.setResponseId(responseId);
+      return this;
+    }
+
+    /**
+     * Set the <code>progress</code> of the request.
+     * @see AllocateRequest#setProgress(float)
+     * @param progress <code>progress</code> of the request
+     * @return {@link AllocateRequestBuilder}
+     */
+    @Public
+    @Stable
+    public AllocateRequestBuilder progress(float progress) {
+      allocateRequest.setProgress(progress);
+      return this;
+    }
+
+    /**
+     * Set the <code>askList</code> of the request.
+     * @see AllocateRequest#setAskList(List)
+     * @param askList <code>askList</code> of the request
+     * @return {@link AllocateRequestBuilder}
+     */
+    @Public
+    @Stable
+    public AllocateRequestBuilder askList(List<ResourceRequest> askList) {
+      allocateRequest.setAskList(askList);
+      return this;
+    }
+
+    /**
+     * Set the <code>releaseList</code> of the request.
+     * @see AllocateRequest#setReleaseList(List)
+     * @param releaseList <code>releaseList</code> of the request
+     * @return {@link AllocateRequestBuilder}
+     */
+    @Public
+    @Stable
+    public AllocateRequestBuilder releaseList(List<ContainerId> releaseList) {
+      allocateRequest.setReleaseList(releaseList);
+      return this;
+    }
+
+    /**
+     * Set the <code>resourceBlacklistRequest</code> of the request.
+     * @see AllocateRequest#setResourceBlacklistRequest(
+     * ResourceBlacklistRequest)
+     * @param resourceBlacklistRequest
+     *     <code>resourceBlacklistRequest</code> of the request
+     * @return {@link AllocateRequestBuilder}
+     */
+    @Public
+    @Stable
+    public AllocateRequestBuilder resourceBlacklistRequest(
+        ResourceBlacklistRequest resourceBlacklistRequest) {
+      allocateRequest.setResourceBlacklistRequest(resourceBlacklistRequest);
+      return this;
+    }
+
+    /**
+     * Set the <code>updateRequests</code> of the request.
+     * @see AllocateRequest#setUpdateRequests(List)
+     * @param updateRequests <code>updateRequests</code> of the request
+     * @return {@link AllocateRequestBuilder}
+     */
+    @Public
+    @Unstable
+    public AllocateRequestBuilder updateRequests(
+        List<UpdateContainerRequest> updateRequests) {
+      allocateRequest.setUpdateRequests(updateRequests);
+      return this;
+    }
+
+    /**
+     * Return generated {@link AllocateRequest} object.
+     * @return {@link AllocateRequest}
+     */
+    @Public
+    @Stable
+    public AllocateRequest build() {
+      return allocateRequest;
+    }
+  }
+}
