HDDS-102. SCM CA: SCM CA server signs certificate for approved CSR. Contributed by Anu Engineer.

+import org.bouncycastle.openssl.jcajce.JcaPEMWriter;
+import org.bouncycastle.util.io.pem.PemObject;
+import org.bouncycastle.util.io.pem.PemReader;
+import java.io.StringReader;
+import java.io.StringWriter;
-      KeyPair keyPair, SecurityConfig config, Extensions extensions) {
+                                 KeyPair keyPair, SecurityConfig config, Extensions extensions) {
+  public static String getEncodedString(PKCS10CertificationRequest request)
+      throws IOException {
+    PemObject pemObject =
+        new PemObject("CERTIFICATE REQUEST", request.getEncoded());
+    StringWriter str = new StringWriter();
+    try(JcaPEMWriter pemWriter = new JcaPEMWriter(str)) {
+      pemWriter.writeObject(pemObject);
+    }
+    return str.toString();
+  }
+
+
+  /**
+   * Gets a CertificateRequest Object from PEM encoded CSR.
+   *
+   * @param csr - PEM Encoded Certificate Request String.
+   * @return PKCS10CertificationRequest
+   * @throws IOException - On Error.
+   */
+  public static PKCS10CertificationRequest getCertificationRequest(String csr)
+      throws IOException {
+    try (PemReader reader = new PemReader(new StringReader(csr))) {
+      PemObject pemObject = reader.readPemObject();
+      if(pemObject.getContent() == null) {
+        throw new SCMSecurityException("Invalid Certificate signing request");
+      }
+      return new PKCS10CertificationRequest(pemObject.getContent());
+    }
+  }
-    public CertificateSignRequest.Builder addRfc822Name(String name) {
-      Preconditions.checkNotNull(name, "Rfc822Name cannot be null");
-      this.addAltName(GeneralName.rfc822Name, name);
-      return this;
-    }
-
-            true, new DEROctetString(new GeneralNames(
+            false, new DEROctetString(new GeneralNames(
-      extensions.add(getBasicExtension());
+      if(ca) {
+        extensions.add(getBasicExtension());
+      }
