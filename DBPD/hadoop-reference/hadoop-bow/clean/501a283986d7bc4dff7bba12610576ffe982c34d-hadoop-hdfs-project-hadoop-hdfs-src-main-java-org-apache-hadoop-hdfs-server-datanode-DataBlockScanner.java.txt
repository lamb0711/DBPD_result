HDFS-3056.  Add a new interface RollingLogs for DataBlockScanner logging.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1299139 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
-import java.util.Iterator;
-          // Find nextBpId by finding the last modified current log file, if any
-          long lastScanTime = -1;
-          Iterator<String> bpidIterator = blockPoolScannerMap.keySet()
-              .iterator();
-          while (bpidIterator.hasNext()) {
-            String bpid = bpidIterator.next();
-            for (FSDatasetInterface.FSVolumeInterface vol : dataset.getVolumes()) {
-              try {
-                File currFile = BlockPoolSliceScanner.getCurrentFile(vol, bpid);
-                if (currFile.exists()) {
-                  long lastModified = currFile.lastModified();
-                  if (lastScanTime < lastModified) {
-                    lastScanTime = lastModified;
-                    nextBpId = bpid;
-                  }
-                }
-              } catch (IOException e) {
-                LOG.warn("Received exception: ", e);
+          // Find nextBpId by the minimum of the last scan time
+          long lastScanTime = 0;
+          for (String bpid : blockPoolScannerMap.keySet()) {
+            final long t = getBPScanner(bpid).getLastScanTime();
+            if (t != 0L) {
+              if (bpid == null || t < lastScanTime) {
+                lastScanTime =  t;
+                nextBpId = bpid;
-            if ("".equals(currentBpId)) {
+            nextBpId = blockPoolScannerMap.higherKey(currentBpId);
+            if (nextBpId == null) {
-            } else {
-              nextBpId = blockPoolScannerMap.higherKey(currentBpId);
-              if (nextBpId == null) {
-                nextBpId = blockPoolScannerMap.firstKey();
-              }
-  public synchronized boolean isInitialized(String bpid) {
-    BlockPoolSliceScanner bpScanner = getBPScanner(bpid);
-    if (bpScanner != null) {
-      return bpScanner.isInitialized();
-    }
-    return false;
+  boolean isInitialized(String bpid) {
+    return getBPScanner(bpid) != null;
-    BlockPoolSliceScanner bpScanner = new BlockPoolSliceScanner(datanode, dataset,
-        conf, blockPoolId);
-    try {
-      bpScanner.init();
-    } catch (IOException ex) {
-      LOG.warn("Failed to initialized block scanner for pool id="+blockPoolId);
-      return;
-    }
+    BlockPoolSliceScanner bpScanner = new BlockPoolSliceScanner(blockPoolId,
+        datanode, dataset, conf);
