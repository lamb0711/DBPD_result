HDFS-11846. Ozone: Fix Http connection leaks in ozone clients. Contributed by Weiwei Yang.

+import org.apache.hadoop.io.IOUtils;
+import org.apache.hadoop.ozone.OzoneClientUtils;
-import org.apache.http.impl.client.HttpClients;
-    try {
-      OzoneClient client = getVolume().getClient();
-
-      CloseableHttpClient httpClient = HttpClients.createDefault();
-
+    HttpPut putRequest = null;
+    InputStream is = null;
+    try (CloseableHttpClient httpClient = OzoneClientUtils.newHttpClient()) {
-      HttpPut putRequest =
-          getVolume().getClient().getHttpPut(builder.toString());
+      putRequest = getVolume().getClient().getHttpPut(builder.toString());
-      InputStream is = new ByteArrayInputStream(data.getBytes(ENCODING));
+      is = new ByteArrayInputStream(data.getBytes(ENCODING));
-
+    } finally {
+      IOUtils.closeStream(is);
+      OzoneClientUtils.releaseConnection(putRequest);
-    try {
-      OzoneClient client = getVolume().getClient();
-
-      CloseableHttpClient httpClient = HttpClients.createDefault();
+    HttpPut putRequest = null;
+    FileInputStream fis = null;
+    try (CloseableHttpClient httpClient = OzoneClientUtils.newHttpClient()) {
-      HttpPut putRequest =
-          getVolume().getClient().getHttpPut(builder.toString());
+      putRequest = getVolume().getClient().getHttpPut(builder.toString());
-      FileInputStream fis = new FileInputStream(file);
+      fis = new FileInputStream(file);
-      fis.close();
+    } finally {
+      IOUtils.closeStream(fis);
+      OzoneClientUtils.releaseConnection(putRequest);
-
-    try {
-      OzoneClient client = getVolume().getClient();
-
-      CloseableHttpClient httpClient = HttpClients.createDefault();
-      FileOutputStream outPutFile = new FileOutputStream(downloadTo.toFile());
+    FileOutputStream outPutFile = null;
+    HttpGet getRequest = null;
+    try (CloseableHttpClient httpClient = OzoneClientUtils.newHttpClient()) {
+      outPutFile = new FileOutputStream(downloadTo.toFile());
-      HttpGet getRequest =
-          getVolume().getClient().getHttpGet(builder.toString());
+      getRequest = getVolume().getClient().getHttpGet(builder.toString());
-      outPutFile.close();
+    } finally {
+      IOUtils.closeStream(outPutFile);
+      OzoneClientUtils.releaseConnection(getRequest);
-    try {
-      OzoneClient client = getVolume().getClient();
-      ByteArrayOutputStream outPutStream = new ByteArrayOutputStream();
+    HttpGet getRequest = null;
+    ByteArrayOutputStream outPutStream = null;
+    try (CloseableHttpClient httpClient = OzoneClientUtils.newHttpClient()) {
+      outPutStream = new ByteArrayOutputStream();
-      CloseableHttpClient httpClient = HttpClients.createDefault();
-      HttpGet getRequest =
-          getVolume().getClient().getHttpGet(builder.toString());
+      getRequest = getVolume().getClient().getHttpGet(builder.toString());
+    } finally {
+      IOUtils.closeStream(outPutStream);
+      OzoneClientUtils.releaseConnection(getRequest);
-    try {
-      OzoneClient client = getVolume().getClient();
-      CloseableHttpClient httpClient = HttpClients.createDefault();
-
+    HttpDelete deleteRequest = null;
+    try (CloseableHttpClient httpClient = OzoneClientUtils.newHttpClient()) {
-      HttpDelete deleteRequest =
-          getVolume().getClient().getHttpDelete(builder.toString());
+      deleteRequest = getVolume()
+          .getClient().getHttpDelete(builder.toString());
+    } finally {
+      OzoneClientUtils.releaseConnection(deleteRequest);
-    try {
+    HttpGet getRequest = null;
+    try (CloseableHttpClient httpClient = OzoneClientUtils.newHttpClient()) {
-      CloseableHttpClient httpClient = HttpClients.createDefault();
-      HttpGet getRequest = client.getHttpGet(builder.toString());
+      getRequest = client.getHttpGet(builder.toString());
+    } finally {
+      OzoneClientUtils.releaseConnection(getRequest);
