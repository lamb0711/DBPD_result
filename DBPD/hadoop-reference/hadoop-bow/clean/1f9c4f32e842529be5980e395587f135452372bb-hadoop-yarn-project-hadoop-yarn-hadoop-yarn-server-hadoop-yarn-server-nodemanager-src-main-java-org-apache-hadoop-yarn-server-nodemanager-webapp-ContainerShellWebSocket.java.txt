YARN-8776. Implement Container Exec feature in LinuxContainerExecutor. Contributed by Eric Yang

+import org.apache.hadoop.yarn.api.records.ContainerId;
+import org.apache.hadoop.yarn.server.nodemanager.Context;
-import org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor;
+import org.apache.hadoop.yarn.server.nodemanager.containermanager.container.Container;
+  private static Context nmContext;
-  private final ContainerExecutor exec = new LinuxContainerExecutor();
-
+  private final ContainerExecutor exec;
+  public ContainerShellWebSocket() {
+    exec = nmContext.getContainerExecutor();
+  }
+
+  public static void init(Context nm) {
+    ContainerShellWebSocket.nmContext = nm;
+  }
+
-    LOG.info("Message received: " + message);
-        int ni = message.length();
-        if (ni > 0) {
-          pair.out.write(message.getBytes(Charset.forName("UTF-8")));
-          pair.out.flush();
+        if (!message.equals("1{}")) {
+          // Send keystroke to process input
+          byte[] payload;
+          payload = message.getBytes(Charset.forName("UTF-8"));
+          if (payload != null) {
+            pair.out.write(payload);
+            pair.out.flush();
+          }
+        // Render process output
-    } catch (Exception e) {
-      LOG.error("Failed to parse WebSocket message from Client", e);
+    } catch (IOException e) {
+      onClose(session, 1001, "Shutdown");
+      Container container = nmContext.getContainers().get(ContainerId
+          .fromString(cId));
-          .setContainer(cId)
+          .setContainer(container)
-    LOG.info(session.getRemoteAddress().getHostString() + " closed!");
+    try {
+      LOG.info(session.getRemoteAddress().getHostString() + " closed!");
+      pair.in.close();
+      pair.out.close();
+    } catch (IOException e) {
+    } finally {
+      session.close();
+    }
-}
+}
