HDDS-1. Remove SCM Block DB. Contributed by Xiaoyu Yao.

-import org.apache.hadoop.hdds.scm.container.common.helpers.Pipeline;
-   * @param pipeline      -- Nodes which make up this container.
-  void createContainer(Pipeline pipeline, ContainerData containerData)
+  void createContainer(ContainerData containerData)
-   * @param pipeline      - nodes that make this container.
-   * @param containerName - name of the container.
+   * @param containerID - ID of the container.
-  void deleteContainer(Pipeline pipeline, String containerName,
+  void deleteContainer(long containerID,
-   * @param pipeline container nodes
-   * @param containerName name of the container
+   * @param containerID ID of the container
-  void updateContainer(Pipeline pipeline, String containerName,
-      ContainerData data, boolean forceUpdate) throws StorageContainerException;
+  void updateContainer(long containerID, ContainerData data,
+      boolean forceUpdate) throws StorageContainerException;
-   * @param prefix - Return only values matching this prefix
-   * @param count   - how many to return
-   * @param prevKey - Previous key - Server returns results from this point.
-   * @param data    - Actual containerData
+   * @param startContainerID -  Return containers with ID >= startContainerID.
+   * @param count - how many to return
+   * @param data - Actual containerData
-  void listContainer(String prefix, long count, String prevKey,
-                     List<ContainerData> data)
-      throws StorageContainerException;
+  void listContainer(long startContainerID, long count,
+      List<ContainerData> data) throws StorageContainerException;
-   * @param containerName - Name of the container
+   * @param containerID - ID of the container.
-  ContainerData readContainer(String containerName)
+  ContainerData readContainer(long containerID)
-   * @param containerName - Name of the container.
+   * @param containerID - ID of the container.
-  void closeContainer(String containerName)
+  void closeContainer(long containerID)
-   * @param containerName - Name of the container.
+   * @param containerID - ID of the container.
-  boolean isOpen(String containerName) throws StorageContainerException;
+  boolean isOpen(long containerID) throws StorageContainerException;
-  void incrPendingDeletionBlocks(int numBlocks, String containerId);
+  void incrPendingDeletionBlocks(int numBlocks, long containerId);
-  void decrPendingDeletionBlocks(int numBlocks, String containerId);
+  void decrPendingDeletionBlocks(int numBlocks, long containerId);
-   * @param containerName - Name of the container.
+   * @param containerId - ID of the container.
-  void incrReadCount(String containerName);
+  void incrReadCount(long containerId);
-   * @param containerName - Name of the container.
+   * @param containerId - ID of the container.
-  void incrReadBytes(String containerName, long readBytes);
+  void incrReadBytes(long containerId, long readBytes);
-   * @param containerName - Name of the container.
+   * @param containerId - ID of the container.
-  void incrWriteCount(String containerName);
+  void incrWriteCount(long containerId);
-   * @param containerName - Name of the container.
+   * @param containerId - ID of the container.
-  void incrWriteBytes(String containerName, long writeBytes);
+  void incrWriteBytes(long containerId, long writeBytes);
-   * @param containerName - Name of the container.
+   * @param containerId - ID of the container.
-  long incrBytesUsed(String containerName, long used);
+  long incrBytesUsed(long containerId, long used);
-   * @param containerName - Name of the container.
+   * @param containerId - ID of the container.
-  long decrBytesUsed(String containerName, long used);
+  long decrBytesUsed(long containerId, long used);
-   * @param containerName - Name of the container.
+   * @param containerId - ID of the container.
-  long getBytesUsed(String containerName);
+  long getBytesUsed(long containerId);
-   * @param containerName - Name of the container.
+   * @param containerId - ID of the container.
-  long getNumKeys(String containerName);
+  long getNumKeys(long containerId);
