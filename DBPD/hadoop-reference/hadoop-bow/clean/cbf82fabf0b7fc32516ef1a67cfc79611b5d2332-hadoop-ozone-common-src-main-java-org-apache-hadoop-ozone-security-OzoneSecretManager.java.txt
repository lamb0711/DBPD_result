HDDS-1061. DelegationToken: Add certificate serial id to Ozone Delegation Token Identifier. Contributed by Ajay Kumar.

+import org.apache.hadoop.hdds.security.x509.certificate.client.CertificateClient;
+  private CertificateClient certClient;
-   * Default implementation for Ozone. Verifies if hash in token is legit.
-   * */
-  @Override
-  public byte[] retrievePassword(T identifier) throws InvalidToken {
-    byte[] password = createPassword(identifier);
-    // TODO: Revisit this when key/certificate rotation is implemented.
-    // i.e Try all valid keys instead of current key only.
-    if (!verifySignature(identifier, password)) {
-      throw new InvalidToken("Tampared/Inavalid token.");
-    }
-    return password;
-  }
-
-  /**
-  /**
-   * Validates if given hash is valid.
-   *
-   * @param identifier
-   * @param password
-   */
-  public boolean verifySignature(T identifier, byte[] password) {
-    try {
-      Signature rsaSignature =
-          Signature.getInstance(getDefaultSignatureAlgorithm());
-      rsaSignature.initVerify(currentKey.getPublicKey());
-      rsaSignature.update(identifier.getBytes());
-      return rsaSignature.verify(password);
-    } catch (NoSuchAlgorithmException | SignatureException |
-        InvalidKeyException e) {
-      return false;
-    }
-  }
-
-   * @param keyPair
+   * @param client
-  public synchronized void start(KeyPair keyPair) throws IOException {
+  public synchronized void start(CertificateClient client)
+      throws IOException {
-    updateCurrentKey(keyPair);
+    this.certClient = client;
+    updateCurrentKey(new KeyPair(certClient.getPublicKey(),
+        certClient.getPrivateKey()));
+
+  public CertificateClient getCertClient() {
+    return certClient;
+  }
