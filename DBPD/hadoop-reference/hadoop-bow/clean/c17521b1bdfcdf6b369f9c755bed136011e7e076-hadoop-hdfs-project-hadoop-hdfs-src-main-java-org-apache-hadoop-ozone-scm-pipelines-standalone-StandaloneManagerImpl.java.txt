HDFS-12387. Ozone: Support Ratis as a first class replication mechanism. Contributed by Anu Engineer.

-import com.google.common.base.Preconditions;
+import org.apache.hadoop.ozone.scm.pipelines.PipelineSelector;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import java.util.UUID;
+  private static final Logger LOG =
+      LoggerFactory.getLogger(StandaloneManagerImpl.class);
-  /**
-   * Translates a list of nodes, ordered such that the first is the leader, into
-   * a corresponding {@link Pipeline} object.
-   *
-   * @param nodes - list of datanodes on which we will allocate the container.
-   * The first of the list will be the leader node.
-   * @param containerName container name
-   * @return pipeline corresponding to nodes
-   */
-  private static Pipeline newPipelineFromNodes(final List<DatanodeID> nodes,
-      final String containerName) {
-    Preconditions.checkNotNull(nodes);
-    Preconditions.checkArgument(nodes.size() > 0);
-    String leaderId = nodes.get(0).getDatanodeUuid();
-    Pipeline pipeline = new Pipeline(leaderId);
-    for (DatanodeID node : nodes) {
-      pipeline.addMember(node);
-    }
-
-    // The default state of a pipeline is operational, so not setting
-    // explicit state here.
-
-    pipeline.setContainerName(containerName);
-    return pipeline;
-  }
-    return newPipelineFromNodes(datanodes, containerName);
+    Pipeline pipeline = PipelineSelector.newPipelineFromNodes(datanodes);
+    String pipelineName = "SA-" + UUID.randomUUID().toString().substring(3);
+    pipeline.setContainerName(containerName);
+    pipeline.setPipelineName(pipelineName);
+    LOG.info("Creating new standalone pipeline: {}", pipeline.toString());
+    return pipeline;
