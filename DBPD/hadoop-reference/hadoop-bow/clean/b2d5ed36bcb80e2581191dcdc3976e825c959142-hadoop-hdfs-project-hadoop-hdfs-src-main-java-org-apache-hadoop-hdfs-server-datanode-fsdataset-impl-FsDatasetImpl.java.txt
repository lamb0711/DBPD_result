HDFS-7100. Make eviction scheme pluggable. (Arpit Agarwal)

-import java.util.Collections;
+import static org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.RamDiskReplicaTracker.RamDiskReplica;
-    File blockfile = getFile(bpid, blkid);
+    File blockfile = getFile(bpid, blkid, false);
-  final LazyWriteReplicaTracker lazyWriteReplicaTracker;
+  final RamDiskReplicaTracker ramDiskReplicaTracker;
-    lazyWriteReplicaTracker = new LazyWriteReplicaTracker(this);
+    ramDiskReplicaTracker = RamDiskReplicaTracker.getInstance(conf, this);
-    fsVolume.getVolumeMap(tempVolumeMap, lazyWriteReplicaTracker);
+    fsVolume.getVolumeMap(tempVolumeMap, ramDiskReplicaTracker);
-        fsVolume.getVolumeMap(bpid, tempVolumeMap, lazyWriteReplicaTracker);
+        fsVolume.getVolumeMap(bpid, tempVolumeMap, ramDiskReplicaTracker);
+   *
+   * @param touch if true then update the last access timestamp of the
+   *              block. Currently used for blocks on transient storage.
-  private File getBlockFileNoExistsCheck(ExtendedBlock b)
+  private File getBlockFileNoExistsCheck(ExtendedBlock b,
+                                         boolean touch)
-      f = getFile(b.getBlockPoolId(), b.getLocalBlock().getBlockId());
+      f = getFile(b.getBlockPoolId(), b.getLocalBlock().getBlockId(), touch);
-    File blockFile = getBlockFileNoExistsCheck(b);
+    File blockFile = getBlockFileNoExistsCheck(b, true);
-        lazyWriteReplicaTracker.addReplica(bpid, replicaInfo.getBlockId(), v);
+        ramDiskReplicaTracker.addReplica(bpid, replicaInfo.getBlockId(), v);
-        lazyWriteReplicaTracker.discardReplica(b.getBlockPoolId(), b.getBlockId(), true);
+        ramDiskReplicaTracker.discardReplica(b.getBlockPoolId(), b.getBlockId(), true);
-      f = getFile(bpid, blockId);
+      f = getFile(bpid, blockId, false);
-        lazyWriteReplicaTracker.discardReplica(bpid, invalidBlks[i].getBlockId(), true);
+        ramDiskReplicaTracker.discardReplica(bpid, invalidBlks[i].getBlockId(), true);
-    return getFile(block.getBlockPoolId(), blockId) != null;
+    return getFile(block.getBlockPoolId(), blockId, false) != null;
-  File getFile(final String bpid, final long blockId) {
+  File getFile(final String bpid, final long blockId, boolean touch) {
+      if (touch && info.getVolume().isTransientStorage()) {
+        ramDiskReplicaTracker.touch(bpid, blockId);
+      }
-            lazyWriteReplicaTracker.discardReplica(bpid, blockId, true);
+            ramDiskReplicaTracker.discardReplica(bpid, blockId, true);
-        if (blockScanner != null) {
-          blockScanner.addBlock(new ExtendedBlock(bpid, diskBlockInfo));
-        }
-        if (vol.isTransientStorage()) {
-          lazyWriteReplicaTracker.addReplica(bpid, blockId, (FsVolumeImpl) vol);
+        if (!vol.isTransientStorage()) {
+          if (blockScanner != null) {
+            blockScanner.addBlock(new ExtendedBlock(bpid, diskBlockInfo));
+          }
+        } else {
+          ramDiskReplicaTracker.addReplica(bpid, blockId, (FsVolumeImpl) vol);
-    volumes.getAllVolumesMap(bpid, volumeMap, lazyWriteReplicaTracker);
+    volumes.getAllVolumesMap(bpid, volumeMap, ramDiskReplicaTracker);
-        lazyWriteReplicaTracker.recordStartLazyPersist(bpid, blockId, targetVolume);
+        ramDiskReplicaTracker.recordStartLazyPersist(bpid, blockId, targetVolume);
-        lazyWriteReplicaTracker.recordEndLazyPersist(bpid, blockId, savedFiles);
+        ramDiskReplicaTracker.recordEndLazyPersist(bpid, blockId, savedFiles);
-      LazyWriteReplicaTracker.ReplicaState replicaState = null;
+      RamDiskReplica block = null;
-        replicaState = lazyWriteReplicaTracker.dequeueNextReplicaToPersist();
-        if (replicaState != null) {
-          moveReplicaToNewVolume(replicaState.bpid, replicaState.blockId);
+        block = ramDiskReplicaTracker.dequeueNextReplicaToPersist();
+        if (block != null) {
+          moveReplicaToNewVolume(block.getBlockPoolId(), block.getBlockId());
-        LOG.warn("Exception saving replica " + replicaState, ioe);
+        LOG.warn("Exception saving replica " + block, ioe);
-        if (!succeeded && replicaState != null) {
-          LOG.warn("Failed to save replica " + replicaState + ". re-enqueueing it.");
-          lazyWriteReplicaTracker.reenqueueReplicaNotPersisted(replicaState);
+        if (!succeeded && block != null) {
+          LOG.warn("Failed to save replica " + block + ". re-enqueueing it.");
+          ramDiskReplicaTracker.reenqueueReplicaNotPersisted(block);
-        LazyWriteReplicaTracker.ReplicaState replicaState =
-            lazyWriteReplicaTracker.getNextCandidateForEviction();
+        RamDiskReplica replicaState = ramDiskReplicaTracker.getNextCandidateForEviction();
+        final String bpid = replicaState.getBlockPoolId();
-          replicaInfo = getReplicaInfo(replicaState.bpid, replicaState.blockId);
+          replicaInfo = getReplicaInfo(replicaState.getBlockPoolId(), replicaState.getBlockId());
-          lazyWriteReplicaTracker.discardReplica(replicaState, false);
+          ramDiskReplicaTracker.discardReplica(replicaState, false);
-              replicaState.lazyPersistVolume.getBlockPoolSlice(replicaState.bpid);
+              replicaState.getLazyPersistVolume().getBlockPoolSlice(bpid);
-              replicaInfo, replicaState.savedBlockFile);
+              replicaInfo, replicaState.getSavedMetaFile(),
+              replicaState.getSavedBlockFile());
-                                   replicaState.lazyPersistVolume,
+                                   replicaState.getLazyPersistVolume(),
-          volumeMap.add(replicaState.bpid, newReplicaInfo);
+          volumeMap.add(bpid, newReplicaInfo);
-            new ExtendedBlock(replicaState.bpid, newReplicaInfo);
+            new ExtendedBlock(bpid, newReplicaInfo);
-          ((FsVolumeImpl) replicaInfo.getVolume()).decDfsUsed(replicaState.bpid, blockFileUsed);
+          ((FsVolumeImpl) replicaInfo.getVolume()).decDfsUsed(bpid, blockFileUsed);
-            ((FsVolumeImpl) replicaInfo.getVolume()).decDfsUsed(replicaState.bpid, metaFileUsed);
+            ((FsVolumeImpl) replicaInfo.getVolume()).decDfsUsed(bpid, metaFileUsed);
-          if (numSuccessiveFailures >= lazyWriteReplicaTracker.numReplicasNotPersisted()) {
+          if (numSuccessiveFailures >= ramDiskReplicaTracker.numReplicasNotPersisted()) {
