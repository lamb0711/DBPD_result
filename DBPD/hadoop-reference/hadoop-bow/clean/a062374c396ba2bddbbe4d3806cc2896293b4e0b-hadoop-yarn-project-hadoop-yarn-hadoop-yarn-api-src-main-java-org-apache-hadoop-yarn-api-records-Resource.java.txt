YARN-6679. Reduce Resource instance overhead via non-PBImpl
(Contributed by Daryn Sharp via Daniel Templeton)

-import org.apache.hadoop.yarn.util.Records;
+  private static class SimpleResource extends Resource {
+    private long memory;
+    private long vcores;
+    SimpleResource(long memory, long vcores) {
+      this.memory = memory;
+      this.vcores = vcores;
+    }
+    @Override
+    public int getMemory() {
+      return (int)memory;
+    }
+    @Override
+    public void setMemory(int memory) {
+      this.memory = memory;
+    }
+    @Override
+    public long getMemorySize() {
+      return memory;
+    }
+    @Override
+    public void setMemorySize(long memory) {
+      this.memory = memory;
+    }
+    @Override
+    public int getVirtualCores() {
+      return (int)vcores;
+    }
+    @Override
+    public void setVirtualCores(int vcores) {
+      this.vcores = vcores;
+    }
+  }
+
-    Resource resource = Records.newRecord(Resource.class);
-    resource.setMemorySize(memory);
-    resource.setVirtualCores(vCores);
-    return resource;
+    return new SimpleResource(memory, vCores);
-    Resource resource = Records.newRecord(Resource.class);
-    resource.setMemorySize(memory);
-    resource.setVirtualCores(vCores);
-    return resource;
+    return new SimpleResource(memory, vCores);
+  public int compareTo(Resource other) {
+    long diff = this.getMemorySize() - other.getMemorySize();
+    if (diff == 0) {
+      diff = this.getVirtualCores() - other.getVirtualCores();
+    }
+    return diff == 0 ? 0 : (diff > 0 ? 1 : -1);
+  }
+
+  @Override
