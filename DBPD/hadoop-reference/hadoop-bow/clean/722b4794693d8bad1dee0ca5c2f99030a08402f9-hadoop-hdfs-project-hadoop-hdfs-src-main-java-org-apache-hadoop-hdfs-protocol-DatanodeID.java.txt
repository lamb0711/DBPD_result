HDFS-7434. DatanodeID hashCode should not be mutable. Contributed by Daryn Sharp.

-  private int hashCode = -1;
-  private String datanodeUuid = null;
+  private final String datanodeUuid;
+    this(from.getDatanodeUuid(), from);
+  }
+
+  @VisibleForTesting
+  public DatanodeID(String datanodeUuid, DatanodeID from) {
-        from.getDatanodeUuid(),
+        datanodeUuid,
-    this.ipAddr = ipAddr;
+    setIpAndXferPort(ipAddr, xferPort);
-    this.xferPort = xferPort;
-    updateXferAddrAndInvalidateHashCode();
+    //updated during registration, preserve former xferPort
+    setIpAndXferPort(ipAddr, xferPort);
+  }
+
+  private void setIpAndXferPort(String ipAddr, int xferPort) {
+    // build xferAddr string to reduce cost of frequent use
-    updateXferAddrAndInvalidateHashCode();
+    this.xferPort = xferPort;
+    this.xferAddr = ipAddr + ":" + xferPort;
-  @VisibleForTesting
-  public void setDatanodeUuidForTesting(String datanodeUuid) {
-    this.datanodeUuid = datanodeUuid;
-    updateXferAddrAndInvalidateHashCode();
-  }
-
-    if (hashCode == -1) {
-      int newHashCode = xferAddr.hashCode() ^ datanodeUuid.hashCode();
-      hashCode = newHashCode & Integer.MAX_VALUE;
-    }
-    return hashCode;
+    return datanodeUuid.hashCode();
-    ipAddr = nodeReg.getIpAddr();
+    setIpAndXferPort(nodeReg.getIpAddr(), nodeReg.getXferPort());
-    xferPort = nodeReg.getXferPort();
-    updateXferAddrAndInvalidateHashCode();
-
-  // NOTE: mutable hash codes are dangerous, however this class chooses to
-  // use them.  this method must be called when a value mutates that is used
-  // to compute the hash, equality, or comparison of instances.
-  private void updateXferAddrAndInvalidateHashCode() {
-    xferAddr = ipAddr + ":" + xferPort;
-    // can't compute new hash yet because uuid might still null...
-    hashCode = -1;
-  }
