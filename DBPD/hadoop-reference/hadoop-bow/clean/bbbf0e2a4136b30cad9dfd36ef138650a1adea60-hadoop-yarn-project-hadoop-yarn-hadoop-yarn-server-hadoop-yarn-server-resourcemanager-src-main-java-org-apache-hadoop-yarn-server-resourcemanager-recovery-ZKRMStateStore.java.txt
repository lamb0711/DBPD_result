HADOOP-14741. Refactor curator based ZooKeeper communication into common library. (Íñigo Goiri via Subru).

+import org.apache.hadoop.util.curator.ZKCuratorManager;
-import org.apache.hadoop.yarn.server.resourcemanager.RMZKUtils;
-  @VisibleForTesting
-  protected CuratorFramework curatorFramework;
+  /** Manager for the ZooKeeper connection. */
+  private ZKCuratorManager zkManager;
-    zkAcl = RMZKUtils.getZKAcls(conf);
+    zkAcl = ZKCuratorManager.getZKAcls(conf);
-
-    curatorFramework = resourceManager.getCurator();
-
-    if (curatorFramework == null) {
-      curatorFramework = resourceManager.createAndStartCurator(conf);
+    zkManager = resourceManager.getZKManager();
+    if (zkManager == null) {
+      zkManager = resourceManager.createAndStartZKManager(conf);
+    CuratorFramework curatorFramework = zkManager.getCurator();
+      CuratorFramework curatorFramework = zkManager.getCurator();
+      CuratorFramework curatorFramework = zkManager.getCurator();
-    return curatorFramework.getData().forPath(path);
+    return zkManager.getData(path);
-    return curatorFramework.getACL().forPath(path);
+    return zkManager.getACL(path);
-    return curatorFramework.getChildren().forPath(path);
+    return zkManager.getChildren(path);
-    return curatorFramework.checkExists().forPath(path) != null;
+    return zkManager.exists(path);
-    if (!exists(path)) {
-      curatorFramework.create()
-          .withMode(CreateMode.PERSISTENT).withACL(zkAcl)
-          .forPath(path, null);
-    }
+    zkManager.create(path, zkAcl);
-    if (exists(path)) {
-      curatorFramework.delete().deletingChildrenIfNeeded().forPath(path);
-    }
+    zkManager.delete(path);
+      CuratorFramework curatorFramework = zkManager.getCurator();
