YARN-10197. FS-CS converter: fix emitted ordering policy string and max-am-resource percent value. Contributed by Peter Bacsko

-import java.util.HashSet;
-import java.util.Set;
+  public static final float QUEUE_MAX_AM_SHARE_DISABLED = -1.0f;
-  private final Set<String> leafQueueNames;
+  private static final String FAIR_POLICY = "fair";
+  private static final String FIFO_POLICY = "fifo";
+
-    this.leafQueueNames = new HashSet<>();
-    if (queue instanceof FSLeafQueue) {
-      String shortName = getQueueShortName(queueName);
-      if (!leafQueueNames.add(shortName)) {
-        String msg = String.format("Leaf queues must be unique, "
-                + "%s is defined at least twice", shortName);
-        conversionOptions.handleConversionError(msg);
-      }
-    }
-
-        && queueMaxAmShare != -1.0f) {
-      capacitySchedulerConfig.set(PREFIX + queueName +
-          ".maximum-am-resource-percent", String.valueOf(queueMaxAmShare));
+        && queueMaxAmShare != QUEUE_MAX_AM_SHARE_DISABLED) {
+      capacitySchedulerConfig.setFloat(PREFIX + queueName +
+          ".maximum-am-resource-percent", queueMaxAmShare);
-    if (queueMaxAmShare == -1.0f) {
-      capacitySchedulerConfig.set(PREFIX + queueName +
-          ".maximum-am-resource-percent", "1.0");
+    if (queueMaxAmShare == QUEUE_MAX_AM_SHARE_DISABLED
+        && queueMaxAmShare != queueMaxAMShareDefault) {
+      capacitySchedulerConfig.setFloat(PREFIX + queueName +
+          ".maximum-am-resource-percent", 1.0f);
-            + ".ordering-policy", FairSharePolicy.NAME);
+            + ".ordering-policy", FAIR_POLICY);
-            + ".ordering-policy", FairSharePolicy.NAME);
+            + ".ordering-policy", FAIR_POLICY);
-            + ".ordering-policy", FifoPolicy.NAME);
+            + ".ordering-policy", FIFO_POLICY);
