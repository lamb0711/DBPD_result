YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)

-import org.apache.hadoop.yarn.api.protocolrecords.impl.pb
-    .AllocateResponsePBImpl;
+import org.apache.hadoop.yarn.api.protocolrecords.impl.pb.AllocateResponsePBImpl;
-import org.apache.hadoop.yarn.proto.YarnServiceProtos;
-import org.apache.hadoop.yarn.server.api.protocolrecords
-    .DistSchedAllocateResponse;
-
+import org.apache.hadoop.yarn.server.api.protocolrecords.DistributedSchedulingAllocateResponse;
-public class DistSchedAllocateResponsePBImpl extends DistSchedAllocateResponse {
+/**
+ * Implementation of {@link DistributedSchedulingAllocateResponse}.
+ */
+public class DistributedSchedulingAllocateResponsePBImpl extends
+    DistributedSchedulingAllocateResponse {
-  YarnServerCommonServiceProtos.DistSchedAllocateResponseProto proto =
-      YarnServerCommonServiceProtos.DistSchedAllocateResponseProto.getDefaultInstance();
-  YarnServerCommonServiceProtos.DistSchedAllocateResponseProto.Builder builder = null;
+  YarnServerCommonServiceProtos.DistributedSchedulingAllocateResponseProto
+      proto = YarnServerCommonServiceProtos.
+          DistributedSchedulingAllocateResponseProto.getDefaultInstance();
+  YarnServerCommonServiceProtos.DistributedSchedulingAllocateResponseProto.
+      Builder builder = null;
-  public DistSchedAllocateResponsePBImpl() {
-    builder = YarnServerCommonServiceProtos.DistSchedAllocateResponseProto.newBuilder();
+  public DistributedSchedulingAllocateResponsePBImpl() {
+    builder = YarnServerCommonServiceProtos.
+        DistributedSchedulingAllocateResponseProto.newBuilder();
-  public DistSchedAllocateResponsePBImpl(YarnServerCommonServiceProtos.DistSchedAllocateResponseProto proto) {
+  public DistributedSchedulingAllocateResponsePBImpl(
+      YarnServerCommonServiceProtos.
+      DistributedSchedulingAllocateResponseProto proto) {
-  public YarnServerCommonServiceProtos.DistSchedAllocateResponseProto getProto() {
+  public YarnServerCommonServiceProtos.
+      DistributedSchedulingAllocateResponseProto getProto() {
-      builder = YarnServerCommonServiceProtos.DistSchedAllocateResponseProto.newBuilder(proto);
+      builder = YarnServerCommonServiceProtos.
+          DistributedSchedulingAllocateResponseProto.newBuilder(proto);
-      Iterable<YarnProtos.NodeIdProto> iterable =
-          getNodeIdProtoIterable(this.nodesForScheduling);
+      Iterable<YarnProtos.NodeIdProto> iterable = getNodeIdProtoIterable(
+          this.nodesForScheduling);
-          ((AllocateResponsePBImpl)this.allocateResponse).getProto());
+          ((AllocateResponsePBImpl) this.allocateResponse).getProto());
+
-    if(allocateResponse == null) {
+    if (allocateResponse == null) {
-    YarnServerCommonServiceProtos.DistSchedAllocateResponseProtoOrBuilder p =
-        viaProto ? proto : builder;
+    YarnServerCommonServiceProtos.
+        DistributedSchedulingAllocateResponseProtoOrBuilder p =
+            viaProto ? proto : builder;
-    this.allocateResponse =
-        new AllocateResponsePBImpl(p.getAllocateResponse());
+    this.allocateResponse = new AllocateResponsePBImpl(p.getAllocateResponse());
-    YarnServerCommonServiceProtos.DistSchedAllocateResponseProtoOrBuilder p =
-        viaProto ? proto : builder;
+    YarnServerCommonServiceProtos.
+        DistributedSchedulingAllocateResponseProtoOrBuilder p =
+            viaProto ? proto : builder;
+
