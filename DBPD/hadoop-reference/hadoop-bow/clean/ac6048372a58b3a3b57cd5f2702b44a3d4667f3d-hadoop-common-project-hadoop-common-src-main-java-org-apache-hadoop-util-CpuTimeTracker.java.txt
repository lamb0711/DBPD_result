HADOOP-12180. Move ResourceCalculatorPlugin from YARN to Common. (Chris Douglas via kasha)

-package org.apache.hadoop.yarn.util;
+package org.apache.hadoop.util;
+/**
+ * Utility for sampling and computing CPU usage.
+ */
-  public static final int UNAVAILABLE =
-      ResourceCalculatorProcessTree.UNAVAILABLE;
-  final long MINIMUM_UPDATE_INTERVAL;
+  public static final int UNAVAILABLE = -1;
+  private final long minimumTimeInterval;
-  BigInteger cumulativeCpuTime = BigInteger.ZERO;
+  private BigInteger cumulativeCpuTime = BigInteger.ZERO;
-  BigInteger lastCumulativeCpuTime = BigInteger.ZERO;
+  private BigInteger lastCumulativeCpuTime = BigInteger.ZERO;
-  long sampleTime;
-  long lastSampleTime;
-  float cpuUsage;
-  BigInteger jiffyLengthInMillis;
+  private long sampleTime;
+  private long lastSampleTime;
+  private float cpuUsage;
+  private BigInteger jiffyLengthInMillis;
-    MINIMUM_UPDATE_INTERVAL =  10 * jiffyLengthInMillis;
+    minimumTimeInterval =  10 * jiffyLengthInMillis;
-   * {@link CpuTimeTracker#MINIMUM_UPDATE_INTERVAL} apart
+   * {@link CpuTimeTracker#minimumTimeInterval} apart
-    if (sampleTime > lastSampleTime + MINIMUM_UPDATE_INTERVAL) {
+    if (sampleTime > lastSampleTime + minimumTimeInterval) {
-  public void updateElapsedJiffies(BigInteger elapedJiffies, long sampleTime) {
-    this.cumulativeCpuTime = elapedJiffies.multiply(jiffyLengthInMillis);
-    this.sampleTime = sampleTime;
+  /**
+   * Obtain the cumulative CPU time since the system is on.
+   * @return cumulative CPU time in milliseconds
+   */
+  public long getCumulativeCpuTime() {
+    return cumulativeCpuTime.longValue();
+  }
+
+  /**
+   * Apply delta to accumulators.
+   * @param elapsedJiffies updated jiffies
+   * @param newTime new sample time
+   */
+  public void updateElapsedJiffies(BigInteger elapsedJiffies, long newTime) {
+    cumulativeCpuTime = elapsedJiffies.multiply(jiffyLengthInMillis);
+    sampleTime = newTime;
-}
+}
