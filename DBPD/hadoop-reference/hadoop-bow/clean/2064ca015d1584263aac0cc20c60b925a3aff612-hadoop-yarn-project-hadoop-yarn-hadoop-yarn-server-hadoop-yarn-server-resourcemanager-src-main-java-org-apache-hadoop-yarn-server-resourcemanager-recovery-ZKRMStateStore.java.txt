YARN-9349.  Changed logging to use slf4j api.
            Contributed by Prabhu Joseph

-    LOG.debug(builder.toString());
+    LOG.debug("{}", builder);
-      if (LOG.isDebugEnabled()) {
-        LOG.debug("Loading plan from znode: " + planName);
-      }
+      LOG.debug("Loading plan from znode: {}", planName);
-        if (LOG.isDebugEnabled()) {
-          LOG.debug("Loading reservation from znode: " + reservationNodePath);
-        }
+        LOG.debug("Loading reservation from znode: {}", reservationNodePath);
-          if (LOG.isDebugEnabled()) {
-            LOG.debug("Loaded delegation key: keyId=" + key.getKeyId()
-                + ", expirationDate=" + key.getExpiryDate());
-          }
+          LOG.debug("Loaded delegation key: keyId={}, expirationDate={}",
+              key.getKeyId(), key.getExpiryDate());
+
-          LOG.debug("Unknown child node with name " + childNodeName + " under" +
-              tokenRoot);
+          LOG.debug("Unknown child node with name {} under {}",
+              childNodeName, tokenRoot);
-        if (LOG.isDebugEnabled()) {
-          LOG.debug("Loaded RMDelegationTokenIdentifier: " + identifier
-              + " renewDate=" + renewDate);
-        }
+        LOG.debug("Loaded RMDelegationTokenIdentifier: {} renewDate={}",
+            identifier, renewDate);
-    if (LOG.isDebugEnabled()) {
-      LOG.debug("Loading application from znode: " + appNodePath);
-    }
+    LOG.debug("Loading application from znode: {}", appNodePath);
-          LOG.debug("Unknown child node with name " + childNodeName + " under" +
+          LOG.debug("Unknown child node with name {} under {}", childNodeName,
-        if (LOG.isDebugEnabled()) {
-          LOG.debug("Unable to remove parent node " + parentZnode +
-              " as it does not exist.");
-        }
+        LOG.debug("Unable to remove parent node {} as it does not exist.",
+            parentZnode);
-          if (LOG.isDebugEnabled()) {
-            LOG.debug("No leaf znode exists. Removing parent node " +
-                parentZnode);
-          }
+          LOG.debug("No leaf znode exists. Removing parent node {}",
+              parentZnode);
-          if (LOG.isDebugEnabled()) {
-            LOG.debug("Unable to remove app parent node " + parentZnode +
-                " as it has children.");
-          }
+          LOG.debug("Unable to remove app parent node {} as it has children.",
+              parentZnode);
-    if (LOG.isDebugEnabled()) {
-      LOG.debug("Storing info for app: " + appId + " at: " + nodeCreatePath);
-    }
+    LOG.debug("Storing info for app: {} at: {}", appId, nodeCreatePath);
-      if (LOG.isDebugEnabled()) {
-        LOG.debug("Application state data size for " + appId + " is "
-            + appStateData.length);
-      }
+      LOG.debug("Application state data size for {} is {}",
+          appId, appStateData.length);
+
-    if (LOG.isDebugEnabled()) {
-      LOG.debug("Storing final state info for app: " + appId + " at: "
-          + nodeUpdatePath);
-    }
+    LOG.debug("Storing final state info for app: {} at: {}", appId,
+        nodeUpdatePath);
-      if (LOG.isDebugEnabled()) {
-        LOG.debug("Path " + nodeUpdatePath + " for " + appId + " didn't " +
-            "exist. Creating a new znode to update the application state.");
-      }
+      LOG.debug("Path {} for {} didn't exist. Creating a new znode to update"
+          + " the application state.", nodeUpdatePath, appId);
-    if (LOG.isDebugEnabled()) {
-      LOG.debug(operation + " info for attempt: " + appAttemptId + " at: "
-          + path);
-    }
+    LOG.debug("{} info for attempt: {} at: {}", operation, appAttemptId, path);
+
-        if (LOG.isDebugEnabled()) {
-          LOG.debug("Path " + path + " for " + appAttemptId + " didn't exist." +
-              " Created a new znode to update the application attempt state.");
-        }
+        LOG.debug("Path {} for {} didn't exist. Created a new znode to update"
+            + " the application attempt state.", path, appAttemptId);
+
-      if (LOG.isDebugEnabled()) {
-        LOG.debug("Removing info for app: " + removeAppId + " at: " +
-            appIdRemovePath + " and its attempts.");
-      }
+      LOG.debug("Removing info for app: {} at: {} and its attempts.",
+          removeAppId, appIdRemovePath);
+
-    if (LOG.isDebugEnabled()) {
-      LOG.debug("Storing " + DELEGATION_TOKEN_PREFIX
-          + rmDTIdentifier.getSequenceNumber());
-    }
+    LOG.debug("Storing {}{}", DELEGATION_TOKEN_PREFIX,
+        rmDTIdentifier.getSequenceNumber());
-      if (LOG.isDebugEnabled()) {
-        LOG.debug("Storing " + dtSequenceNumberPath + ". SequenceNumber: "
-            + rmDTIdentifier.getSequenceNumber());
-      }
+      LOG.debug("Storing {}. SequenceNumber: {}", dtSequenceNumberPath,
+          rmDTIdentifier.getSequenceNumber());
-    if (LOG.isDebugEnabled()) {
-      LOG.debug("Removing RMDelegationToken_"
-          + rmDTIdentifier.getSequenceNumber());
-    }
+    LOG.debug("Removing RMDelegationToken_{}",
+        rmDTIdentifier.getSequenceNumber());
-      if (LOG.isDebugEnabled()) {
-        LOG.debug("Updating " + DELEGATION_TOKEN_PREFIX
-            + rmDTIdentifier.getSequenceNumber());
-      }
+      LOG.debug("Updating {}{}", DELEGATION_TOKEN_PREFIX,
+          rmDTIdentifier.getSequenceNumber());
+
-    if (LOG.isDebugEnabled()) {
-      LOG.debug("Storing RMDelegationKey_" + delegationKey.getKeyId());
-    }
+    LOG.debug("Storing RMDelegationKey_{}", delegationKey.getKeyId());
-    if (LOG.isDebugEnabled()) {
-      LOG.debug("Removing RMDelegationKey_" + delegationKey.getKeyId());
-    }
+    LOG.debug("Removing RMDelegationKey_{}", delegationKey.getKeyId());
-    if (LOG.isDebugEnabled()) {
-      LOG.debug("Removing reservationallocation " + reservationIdName
-          + " for" + " plan " + planName);
-    }
+    LOG.debug("Removing reservationallocation {} for plan {}",
+        reservationIdName, planName);
-      if (LOG.isDebugEnabled()) {
-        LOG.debug("Creating plan node: " + planName + " at: " + planCreatePath);
-      }
+      LOG.debug("Creating plan node: {} at: {}", planName, planCreatePath);
-      if (LOG.isDebugEnabled()) {
-        LOG.debug("Updating reservation: " + reservationIdName + " in plan:"
-            + planName + " at: " + reservationPath);
-      }
+      LOG.debug("Updating reservation: {} in plan:{} at: {}",
+          reservationIdName, planName, reservationPath);
-      if (LOG.isDebugEnabled()) {
-        LOG.debug("Storing reservation: " + reservationIdName + " in plan:"
-            + planName + " at: " + reservationPath);
-      }
+      LOG.debug("Storing reservation: {} in plan:{} at: {}",
+          reservationIdName, planName, reservationPath);
-        if (LOG.isDebugEnabled()) {
-          LOG.debug("Unable to create app parent node " + rootNodePath +
-              " as it already exists.");
-        }
+        LOG.debug("Unable to create app parent node {} as it already exists.",
+            rootNodePath);
