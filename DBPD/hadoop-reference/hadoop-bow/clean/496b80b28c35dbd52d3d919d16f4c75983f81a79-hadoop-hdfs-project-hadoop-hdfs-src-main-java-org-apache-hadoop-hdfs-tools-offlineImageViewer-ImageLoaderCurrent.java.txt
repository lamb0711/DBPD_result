HDFS-4850. Fix OfflineImageViewer to work on fsimages with empty files or snapshots. Contributed by Jing Zhao.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1490080 13f79535-47bb-0310-9956-ffa450edef68

-        v.visit(ImageElement.NUM_SNAPSHOTS_TOTAL, in.readInt());
+        int numSnapshots = in.readInt();
+        v.visit(ImageElement.NUM_SNAPSHOTS_TOTAL, numSnapshots);
+        for (int i = 0; i < numSnapshots; i++) {
+          processSnapshot(in, v);
+        }
-    // directory or symlink, no blocks to process    
-    if(numBlocks == -1 || numBlocks == -2) { 
+    // directory or symlink or reference node, no blocks to process    
+    if(numBlocks < 0) { 
-        // process root of snapshot
-        v.visitEnclosingElement(ImageElement.SNAPSHOT_ROOT);
-        processINode(in, v, true, rootName, false);
-        v.leaveEnclosingElement();
+  private void processSnapshot(DataInputStream in, ImageVisitor v)
+      throws IOException {
+    v.visitEnclosingElement(ImageElement.SNAPSHOT);
+    v.visit(ImageElement.SNAPSHOT_ID, in.readInt());
+    // process root of snapshot
+    v.visitEnclosingElement(ImageElement.SNAPSHOT_ROOT);
+    processINode(in, v, true, "", false);
+    v.leaveEnclosingElement();
+    v.leaveEnclosingElement();
+  }
+  
-    String snapshot = FSImageSerialization.readString(in);
-    v.visit(ImageElement.SNAPSHOT_DIFF_SNAPSHOTROOT, snapshot);
+    int snapshotId = in.readInt();
+    v.visit(ImageElement.SNAPSHOT_DIFF_SNAPSHOTID, snapshotId);
-    if (numBlocks > 0) { // File
+    if (numBlocks >= 0) { // File
+      processPermission(in, v);
+      processPermission(in, v);
-    processPermission(in, v);
-      String snapshot = FSImageSerialization.readString(in);
-      v.visit(ImageElement.SNAPSHOT_DIFF_SNAPSHOTROOT, snapshot);
-      v.visit(ImageElement.SNAPSHOT_FILE_SIZE, in.readLong());
-      if (in.readBoolean()) {
-        v.visitEnclosingElement(ImageElement.SNAPSHOT_DIFF_SNAPSHOTINODE);
-        processINode(in, v, true, currentINodeName, true);
-        v.leaveEnclosingElement();
+      for (int i = 0; i < size; i++) {
+        processFileDiff(in, v, currentINodeName);
+  private void processFileDiff(DataInputStream in, ImageVisitor v,
+      String currentINodeName) throws IOException {
+    int snapshotId = in.readInt();
+    v.visitEnclosingElement(ImageElement.SNAPSHOT_FILE_DIFF,
+        ImageElement.SNAPSHOT_DIFF_SNAPSHOTID, snapshotId);
+    v.visit(ImageElement.SNAPSHOT_FILE_SIZE, in.readLong());
+    if (in.readBoolean()) {
+      v.visitEnclosingElement(ImageElement.SNAPSHOT_DIFF_SNAPSHOTINODE);
+      processINode(in, v, true, currentINodeName, true);
+      v.leaveEnclosingElement();
+    }
+    v.leaveEnclosingElement();
+  }
+  
