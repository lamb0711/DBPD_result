HDFS-13110: [SPS]: Reduce the number of APIs in NamenodeProtocol used by external satisfier. Contributed by Rakesh R.

- * An interface for the communication between NameNode and SPS module.
+ * An interface for the communication between SPS and Namenode module.
+ *
+ * @param <T>
+ *          is identifier of inode or full path name of inode. Internal sps will
+ *          use the file inodeId for the block movement. External sps will use
+ *          file string path representation for the block movement.
-public interface Context {
+public interface Context<T> {
-   * Returns true if the give Inode exists in the Namespace.
+   * Returns true if the give file exists in the Namespace.
-   * @param inodeId
-   *          - Inode ID
-   * @return true if Inode exists, false otherwise.
+   * @param filePath
+   *          - file info
+   * @return true if the given file exists, false otherwise.
-  boolean isFileExist(long inodeId);
+  boolean isFileExist(T filePath);
-   * @param inodeId
-   *          - Inode ID
+   * @param spsPath
+   *          - user invoked satisfier path
-  void removeSPSHint(long inodeId) throws IOException;
+  void removeSPSHint(T spsPath) throws IOException;
-   * @param inodeID
-   *          inode identifier
+   * @param file
+   *          file path
-  HdfsFileStatus getFileInfo(long inodeID) throws IOException;
+  HdfsFileStatus getFileInfo(T file) throws IOException;
-   * Returns true if the given inode file has low redundancy blocks.
-   *
-   * @param inodeID
-   *          inode identifier
-   * @return true if block collection has low redundancy blocks
-   */
-  boolean hasLowRedundancyBlocks(long inodeID);
-
-  /**
-   * @return next SPS path id to process.
+   * @return next SPS path info to process.
-  Long getNextSPSPathId();
+  T getNextSPSPath();
-  void removeSPSPathId(long pathId);
+  void removeSPSPathId(T pathId);
-
-  /**
-   * Gets the file path for a given inode id.
-   *
-   * @param inodeId
-   *          - path inode id.
-   */
-  String getFilePath(Long inodeId);
-
