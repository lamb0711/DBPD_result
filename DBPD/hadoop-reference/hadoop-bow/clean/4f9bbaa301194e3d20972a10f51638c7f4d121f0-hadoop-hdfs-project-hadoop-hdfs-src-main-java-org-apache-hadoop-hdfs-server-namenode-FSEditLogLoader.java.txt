HDFS-5889. When starting rolling upgrade, create a fs image for rollback so that the standby namenode can create checkpoints during upgrade.  Contributed by szetszwo & jing9


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1567861 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.hdfs.server.namenode.FSEditLogOp.RollingUpgradeOp;
-import org.apache.hadoop.hdfs.server.namenode.FSEditLogOp.UpgradeMarkerOp;
-import org.apache.hadoop.hdfs.server.namenode.FSEditLogOp.UpgradeMarkerOp.UpgradeMarkerException;
+import org.apache.hadoop.hdfs.server.namenode.NNStorage.NameNodeFile;
-          } catch (UpgradeMarkerException e) {
+          } catch (RollingUpgradeOp.RollbackException e) {
-        } catch (UpgradeMarkerException e) {
-          LOG.info("Stopped at upgrade marker");
+        } catch (RollingUpgradeOp.RollbackException e) {
+          LOG.info("Stopped at OP_START_ROLLING_UPGRADE for rollback.");
-    case OP_UPGRADE_MARKER: {
+    case OP_ROLLING_UPGRADE_START: {
+      boolean started = false;
-          throw new UpgradeMarkerException();
+          throw new RollingUpgradeOp.RollbackException();
-          if (totalEdits > 1) {
-            // save namespace if this is not the second edit transaction
-            // (the first must be OP_START_LOG_SEGMENT)
-            fsNamesys.getFSImage().saveNamespace(fsNamesys);
-          }
-          //rolling upgrade is already started, set info
-          final UpgradeMarkerOp upgradeOp = (UpgradeMarkerOp)op; 
-          fsNamesys.setRollingUpgradeInfo(upgradeOp.getStartTime());
-          break;
+          started = true;
+       
+      if (started || fsNamesys.isInStandbyState()) {
+        if (totalEdits > 1) {
+          // save namespace if this is not the second edit transaction
+          // (the first must be OP_START_LOG_SEGMENT)
+          fsNamesys.getFSImage().saveNamespace(fsNamesys,
+              NameNodeFile.IMAGE_ROLLBACK, null);
+        }
+        //rolling upgrade is already started, set info
+        final RollingUpgradeOp upgradeOp = (RollingUpgradeOp)op; 
+        fsNamesys.setRollingUpgradeInfo(upgradeOp.getTime());
+        break;
+      }
+
-          "Unexpected upgrade marker in edit log: op=" + op);
+          "Unexpected OP_ROLLING_UPGRADE_START in edit log: op=" + op);
+    }
+    case OP_ROLLING_UPGRADE_FINALIZE: {
+      if (!fsNamesys.isRollingUpgrade()) {
+        throw new RollingUpgradeException(
+            "Unexpected OP_ROLLING_UPGRADE_FINALIZE "
+            + " since there is no rolling upgrade in progress.");
+      }
+      fsNamesys.getFSImage().purgeCheckpoints(NameNodeFile.IMAGE_ROLLBACK);
+      break;
