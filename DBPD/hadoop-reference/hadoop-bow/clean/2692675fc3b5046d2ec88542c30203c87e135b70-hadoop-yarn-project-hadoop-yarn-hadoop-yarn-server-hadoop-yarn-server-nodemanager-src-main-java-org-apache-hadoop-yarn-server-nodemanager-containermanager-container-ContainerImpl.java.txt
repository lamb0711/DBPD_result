YARN-684. ContainerManager.startContainer should use ContainerTokenIdentifier instead of the entire Container. Contributed by Vinod Kumar Vavilapalli.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488085 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.yarn.api.records.ApplicationId;
+import org.apache.hadoop.yarn.api.records.Resource;
-  private final org.apache.hadoop.yarn.api.records.Container container;
+  private final ContainerTokenIdentifier containerTokenIdentifier;
+  private final ContainerId containerId;
+  private final Resource resource;
-      ContainerLaunchContext launchContext,
-      org.apache.hadoop.yarn.api.records.Container container,
-      Credentials creds, NodeManagerMetrics metrics,
-      ContainerTokenIdentifier identifier) throws IOException {
+      ContainerLaunchContext launchContext, Credentials creds,
+      NodeManagerMetrics metrics,
+      ContainerTokenIdentifier containerTokenIdentifier) throws IOException {
-    this.container = container;
+    this.containerTokenIdentifier = containerTokenIdentifier;
+    this.containerId = containerTokenIdentifier.getContainerID();
+    this.resource = containerTokenIdentifier.getResource();
-    user = identifier.getApplicationSubmitter();
+    user = containerTokenIdentifier.getApplicationSubmitter();
-      return BuilderUtils.newContainerStatus(this.container.getId(),
+      return BuilderUtils.newContainerStatus(this.containerId,
-  public org.apache.hadoop.yarn.api.records.Container getContainer() {
+  public ContainerId getContainerId() {
+    return this.containerId;
+  }
+
+  @Override
+  public Resource getResource() {
+    return this.resource;
+  }
+
+  @Override
+  public ContainerTokenIdentifier getContainerTokenIdentifier() {
-      return this.container;
+      return this.containerTokenIdentifier;
-    ContainerId containerID = this.container.getId();
+    ApplicationId applicationId =
+        containerId.getApplicationAttemptId().getApplicationId();
-            containerID.getApplicationAttemptId()
-                .getApplicationId(), containerID);
+            applicationId, containerId);
-            containerID.getApplicationAttemptId()
-                .getApplicationId(), containerID);
+            applicationId, containerId);
-            containerID.getApplicationAttemptId().getApplicationId(),
-            containerID);
+            applicationId,
+            containerId);
-    metrics.releaseContainer(this.container.getResource());
+    metrics.releaseContainer(this.resource);
-    eventHandler.handle(new ApplicationContainerFinishedEvent(containerID));
+    eventHandler.handle(new ApplicationContainerFinishedEvent(containerId));
-    eventHandler.handle(new ContainerStopMonitoringEvent(containerID));
+    eventHandler.handle(new ContainerStopMonitoringEvent(containerId));
-        containerID, exitCode));
+      containerId, exitCode));
-                  container.user, container.container.getId()
+                  container.user, container.containerId
-                 " for container " + container.container.getId());
+                 " for container " + container.containerId);
-          container.container.getResource().getMemory() * 1024 * 1024L;
+          container.getResource().getMemory() * 1024 * 1024L;
-          new ContainerStartMonitoringEvent(container.container.getId(),
+          new ContainerStartMonitoringEvent(container.containerId,
-                 " for container " + container.container.getId());
+                 " for container " + container.containerId);
-      return ConverterUtils.toString(container.getId());
+      return ConverterUtils.toString(this.containerId);
