YARN-4304. AM max resource configuration per partition to be displayed/updated correctly in UI and in various partition related metrics. (Sunil G via wangda)

-import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.PartitionResourceUsageInfo;
+import org.apache.hadoop.yarn.server.resourcemanager.webapp.dao.PartitionResourcesInfo;
+import org.apache.hadoop.yarn.util.resource.Resources;
-      PartitionResourceUsageInfo resourceUsages =
+      PartitionResourcesInfo resourceUsages =
+
+      // Get UserInfo from first user to calculate AM Resource Limit per user.
+      ResourceInfo userAMResourceLimit = null;
+      ArrayList<UserInfo> usersList = lqinfo.getUsers().getUsersList();
+      if (usersList.isEmpty()) {
+        // If no users are present, consider AM Limit for that queue.
+        userAMResourceLimit = resourceUsages.getAMLimit();
+      } else {
+        userAMResourceLimit = usersList.get(0)
+            .getResourceUsageInfo().getPartitionResourceUsageInfo(label)
+            .getAMLimit();
+      }
+      ResourceInfo amUsed = (resourceUsages.getAmUsed() == null)
+          ? new ResourceInfo(Resources.none())
+          : resourceUsages.getAmUsed();
-      _("Used Resources:", resourceUsages.getUsed().toString());
+      _("Used Resources:", resourceUsages.getUsed().toString()).
+      _("Configured Max Application Master Limit:", StringUtils.format("%.1f",
+          capacities.getMaxAMLimitPercentage())).
+      _("Max Application Master Resources:",
+          resourceUsages.getAMLimit().toString()).
+      _("Used Application Master Resources:",
+          amUsed.toString()).
+      _("Max Application Master Resources Per User:",
+          userAMResourceLimit.toString());
-      _("Max Application Master Resources:", lqinfo.getAMResourceLimit().toString()).
-      _("Used Application Master Resources:", lqinfo.getUsedAMResource().toString()).
-      _("Max Application Master Resources Per User:", lqinfo.getUserAMResourceLimit().toString()).
+        PartitionResourcesInfo resourceUsages = lqinfo
+            .getResources()
+            .getPartitionResourceUsageInfo((nodeLabel == null) ? "" : nodeLabel);
+        ResourceInfo amUsed = (resourceUsages.getAmUsed() == null)
+            ? new ResourceInfo(Resources.none())
+            : resourceUsages.getAmUsed();
-            .td(lqinfo.getUserAMResourceLimit().toString())
-            .td(userInfo.getAMResourcesUsed().toString())
+            .td(resourceUsages.getAMLimit().toString())
+            .td(amUsed.toString())
