YARN-5587. Add support for resource profiles. (vvasudev via asuresh)

-import org.apache.hadoop.yarn.api.records.Resource;
+import org.apache.hadoop.yarn.api.records.ProfileCapability;
-import org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl.ResourceReverseMemoryThenCpuComparator;
+import org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl.ProfileCapabilityComparator;
-  static ResourceReverseMemoryThenCpuComparator resourceComparator =
-      new ResourceReverseMemoryThenCpuComparator();
+  private ProfileCapabilityComparator resourceComparator;
-    private Iterator<Map<String, Map<ExecutionType, TreeMap<Resource,
+    private Iterator<Map<String, Map<ExecutionType, TreeMap<ProfileCapability,
-    private Iterator<Map<ExecutionType, TreeMap<Resource,
+    private Iterator<Map<ExecutionType, TreeMap<ProfileCapability,
-    private Iterator<TreeMap<Resource, ResourceRequestInfo>> iCapMap;
+    private Iterator<TreeMap<ProfileCapability, ResourceRequestInfo>> iCapMap;
-        Map<ExecutionType, TreeMap<Resource, ResourceRequestInfo>>>>
+        Map<ExecutionType, TreeMap<ProfileCapability, ResourceRequestInfo>>>>
-            new LinkedList<Map<ExecutionType, TreeMap<Resource,
+            new LinkedList<Map<ExecutionType, TreeMap<ProfileCapability,
-            new LinkedList<TreeMap<Resource, ResourceRequestInfo>>()
+            new LinkedList<TreeMap<ProfileCapability, ResourceRequestInfo>>()
-  private Map<Priority, Map<String, Map<ExecutionType, TreeMap<Resource,
+  private Map<Priority, Map<String, Map<ExecutionType, TreeMap<ProfileCapability,
-      ExecutionType execType, Resource capability) {
-    TreeMap<Resource, ResourceRequestInfo> capabilityMap =
+      ExecutionType execType, ProfileCapability capability) {
+    TreeMap<ProfileCapability, ResourceRequestInfo> capabilityMap =
+  @SuppressWarnings("unchecked")
-      Resource capability, ResourceRequestInfo resReqInfo) {
-    Map<String, Map<ExecutionType, TreeMap<Resource,
+      ProfileCapability capability, ResourceRequestInfo resReqInfo) {
+    Map<String, Map<ExecutionType, TreeMap<ProfileCapability,
-    Map<ExecutionType, TreeMap<Resource, ResourceRequestInfo>> execTypeMap =
-        locationMap.get(resourceName);
+    Map<ExecutionType, TreeMap<ProfileCapability, ResourceRequestInfo>>
+        execTypeMap = locationMap.get(resourceName);
-    TreeMap<Resource, ResourceRequestInfo> capabilityMap =
+    TreeMap<ProfileCapability, ResourceRequestInfo> capabilityMap =
+      // this can happen if the user doesn't register with the RM before
+      // calling addResourceRequest
+      if (resourceComparator == null) {
+        resourceComparator = new ProfileCapabilityComparator(new HashMap<>());
+      }
-      ExecutionType execType, Resource capability) {
+      ExecutionType execType, ProfileCapability capability) {
-    Map<String, Map<ExecutionType, TreeMap<Resource,
+    Map<String, Map<ExecutionType, TreeMap<ProfileCapability,
-    Map<ExecutionType, TreeMap<Resource, ResourceRequestInfo>>
+    Map<ExecutionType, TreeMap<ProfileCapability, ResourceRequestInfo>>
-    TreeMap<Resource, ResourceRequestInfo> capabilityMap =
+    TreeMap<ProfileCapability, ResourceRequestInfo> capabilityMap =
-  Map<String, Map<ExecutionType, TreeMap<Resource,
+  Map<String, Map<ExecutionType, TreeMap<ProfileCapability,
-  Map<ExecutionType, TreeMap<Resource, ResourceRequestInfo>>
+  Map<ExecutionType, TreeMap<ProfileCapability, ResourceRequestInfo>>
-    Map<String, Map<ExecutionType, TreeMap<Resource,
+    Map<String, Map<ExecutionType, TreeMap<ProfileCapability,
-  TreeMap<Resource, ResourceRequestInfo> getCapabilityMap(Priority
+  TreeMap<ProfileCapability, ResourceRequestInfo> getCapabilityMap(Priority
-    Map<ExecutionType, TreeMap<Resource, ResourceRequestInfo>>
+    Map<ExecutionType, TreeMap<ProfileCapability, ResourceRequestInfo>>
-        TreeMap<Resource, ResourceRequestInfo> capabilityMap =
+        TreeMap<ProfileCapability, ResourceRequestInfo> capabilityMap =
-      Resource capability) {
+      ProfileCapability capability) {
-    TreeMap<Resource, ResourceRequestInfo> capabilityMap =
+    TreeMap<ProfileCapability, ResourceRequestInfo> capabilityMap =
-      Resource capability, T req, boolean relaxLocality,
+      ProfileCapability capability, T req, boolean relaxLocality,
-    ResourceRequestInfo resourceRequestInfo = get(priority, resourceName,
-        execTypeReq.getExecutionType(), capability);
+    ResourceRequestInfo resourceRequestInfo =
+        get(priority, resourceName, execTypeReq.getExecutionType(), capability);
-              capability, relaxLocality);
+              capability.getProfileCapabilityOverride(), relaxLocality,
+              capability.getProfileName());
+    if (LOG.isDebugEnabled()) {
+      LOG.debug("Adding request to ask " + resourceRequestInfo.remoteRequest);
+    }
-      ExecutionTypeRequest execTypeReq, Resource capability, T req) {
+      ExecutionTypeRequest execTypeReq, ProfileCapability capability, T req) {
+  @SuppressWarnings("unchecked")
+  public void setResourceComparator(ProfileCapabilityComparator comparator) {
+    ProfileCapabilityComparator old = this.resourceComparator;
+    this.resourceComparator = comparator;
+    if (old != null) {
+      // we've already set a resource comparator - re-create the maps with the
+      // new one. this is needed in case someone adds container requests before
+      // registering with the RM. In such a case, the comparator won't have
+      // the resource profiles map. After registration, the map is available
+      // so re-create the capabilities maps
+
+      for (Map.Entry<Priority, Map<String, Map<ExecutionType,
+          TreeMap<ProfileCapability, ResourceRequestInfo>>>>
+          priEntry : remoteRequestsTable.entrySet()) {
+        for (Map.Entry<String, Map<ExecutionType, TreeMap<ProfileCapability,
+            ResourceRequestInfo>>> nameEntry : priEntry.getValue().entrySet()) {
+          for (Map.Entry<ExecutionType, TreeMap<ProfileCapability,
+              ResourceRequestInfo>> execEntry : nameEntry
+              .getValue().entrySet()) {
+            Map<ProfileCapability, ResourceRequestInfo> capabilityMap =
+                execEntry.getValue();
+            TreeMap<ProfileCapability, ResourceRequestInfo> newCapabiltyMap =
+                new TreeMap<>(resourceComparator);
+            newCapabiltyMap.putAll(capabilityMap);
+            execEntry.setValue(newCapabiltyMap);
+          }
+        }
+      }
+    }
+  }
