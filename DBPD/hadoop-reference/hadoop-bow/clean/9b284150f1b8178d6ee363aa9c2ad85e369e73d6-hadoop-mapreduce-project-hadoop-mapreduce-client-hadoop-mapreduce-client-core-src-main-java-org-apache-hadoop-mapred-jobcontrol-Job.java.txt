MAPREDUCE-5233. Add methods that are changed or removed from JobControl.Job when compared to 1.x. This breaks 0.23.x users of one API in Job. Contributed by Mayank Bansal.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485491 13f79535-47bb-0310-9956-ffa450edef68

-   * @return the mapred ID of this job as assigned by the 
-   * mapred framework.
+   * @return the mapred ID of this job as assigned by the mapred framework.
-    org.apache.hadoop.mapreduce.JobID temp = super.getMapredJobID();
-    if(temp == null) {
+    org.apache.hadoop.mapreduce.JobID temp = super.getMapredJobId();
+    if (temp == null) {
+   * This is a no-op function, Its a behavior change from 1.x We no more can
+   * change the state from job
+   * 
+   * @param state
+   *          the new state for this job.
+   */
+  @Deprecated
+  protected synchronized void setState(int state) {
+    // No-Op, we dont want to change the sate
+  }
+  
+  /**
+   * Add a job to this jobs' dependency list. 
+   * Dependent jobs can only be added while a Job 
+   * is waiting to run, not during or afterwards.
+   * 
+   * @param dependingJob Job that this Job depends on.
+   * @return <tt>true</tt> if the Job was added.
+   */
+  public synchronized boolean addDependingJob(Job dependingJob) {
+    return super.addDependingJob(dependingJob);
+  }
+  
+  /**
+  /**
+   * @return the mapred ID of this job as assigned by the mapred framework.
+   */
+  public synchronized String getMapredJobID() {
+    if (super.getMapredJobId() != null) {
+      return super.getMapredJobId().toString();
+    }
+    return null;
+  }
+
+  /**
+   * This is no-op method for backward compatibility. It's a behavior change
+   * from 1.x, we can not change job ids from job.
+   * 
+   * @param mapredJobID
+   *          the mapred job ID for this job.
+   */
+  @Deprecated
+  public synchronized void setMapredJobID(String mapredJobID) {
+    setAssignedJobID(JobID.forName(mapredJobID));
+  }
