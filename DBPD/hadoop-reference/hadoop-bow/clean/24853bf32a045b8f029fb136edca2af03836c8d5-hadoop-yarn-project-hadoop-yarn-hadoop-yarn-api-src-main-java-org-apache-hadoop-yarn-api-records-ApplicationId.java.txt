YARN-6768. Improve performance of yarn api record toString and fromString. Contributed by Jonathan Eagles

-import java.text.NumberFormat;
-import java.util.Iterator;
-import java.util.NoSuchElementException;
-
+import org.apache.hadoop.util.FastNumberFormat;
-import com.google.common.base.Splitter;
-
-  private static Splitter _spliter = Splitter.on('_').trimResults();
+  private static final String APPLICATION_ID_PREFIX = appIdStrPrefix + '_';
+
-  static final ThreadLocal<NumberFormat> appIdFormat =
-    new ThreadLocal<NumberFormat>() {
-      @Override
-      public NumberFormat initialValue() {
-        NumberFormat fmt = NumberFormat.getInstance();
-        fmt.setGroupingUsed(false);
-        fmt.setMinimumIntegerDigits(4);
-        return fmt;
-      }
-    };
+  private static final int APP_ID_MIN_DIGITS = 4;
-    return appIdStrPrefix + "_" + this.getClusterTimestamp() + "_" + appIdFormat
-        .get().format(getId());
-  }
-  
-  private static ApplicationId toApplicationId(
-      Iterator<String> it) throws NumberFormatException {
-    ApplicationId appId = ApplicationId.newInstance(Long.parseLong(it.next()),
-        Integer.parseInt(it.next()));
-    return appId;
+    StringBuilder sb = new StringBuilder(64);
+    sb.append(APPLICATION_ID_PREFIX);
+    sb.append(getClusterTimestamp());
+    sb.append('_');
+    FastNumberFormat.format(sb, getId(), APP_ID_MIN_DIGITS);
+    return sb.toString();
-    Iterator<String> it = _spliter.split((appIdStr)).iterator();
-    if (!it.next().equals(appIdStrPrefix)) {
+    if (!appIdStr.startsWith(APPLICATION_ID_PREFIX)) {
-      return toApplicationId(it);
+      int pos1 = APPLICATION_ID_PREFIX.length() - 1;
+      int pos2 = appIdStr.indexOf('_', pos1 + 1);
+      if (pos2 < 0) {
+        throw new IllegalArgumentException("Invalid ApplicationId: "
+            + appIdStr);
+      }
+      long rmId = Long.parseLong(appIdStr.substring(pos1 + 1, pos2));
+      int appId = Integer.parseInt(appIdStr.substring(pos2 + 1));
+      ApplicationId applicationId = ApplicationId.newInstance(rmId, appId);
+      return applicationId;
-    } catch (NoSuchElementException e) {
-      throw new IllegalArgumentException("Invalid ApplicationId: "
-          + appIdStr, e);
-
