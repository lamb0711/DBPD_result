YARN-9038. [CSI] Add ability to publish/unpublish volumes on node managers. Contributed by Weiwei Yang.

-import org.apache.hadoop.service.AbstractService;
+import org.apache.hadoop.yarn.api.protocolrecords.NodePublishVolumeRequest;
+import org.apache.hadoop.yarn.api.protocolrecords.NodePublishVolumeResponse;
+import org.apache.hadoop.yarn.api.protocolrecords.NodeUnpublishVolumeRequest;
+import org.apache.hadoop.yarn.api.protocolrecords.NodeUnpublishVolumeResponse;
-import org.apache.hadoop.yarn.csi.utils.ConfigUtils;
+import org.apache.hadoop.yarn.server.api.ApplicationInitializationContext;
+import org.apache.hadoop.yarn.server.api.ApplicationTerminationContext;
+import org.apache.hadoop.yarn.server.api.AuxiliaryService;
+import org.apache.hadoop.yarn.util.csi.CsiConfigUtils;
+import java.nio.ByteBuffer;
-public class CsiAdaptorProtocolService extends AbstractService
+public class CsiAdaptorProtocolService extends AuxiliaryService
+  public CsiAdaptorProtocolService() {
+    super(CsiAdaptorProtocolService.class.getName());
+    // TODO read this from configuration
+    this.csiDriverName =  "ch.ctrox.csi.s3-driver";
+  }
+
-    adaptorServiceAddress = ConfigUtils
+
+    String driverEndpoint = CsiConfigUtils
+        .getCsiDriverEndpoint(csiDriverName, conf);
+    this.csiClient = new CsiClientImpl(driverEndpoint);
+    adaptorServiceAddress = CsiConfigUtils
+
+  @Override
+  public NodePublishVolumeResponse nodePublishVolume(
+      NodePublishVolumeRequest request) throws YarnException, IOException {
+    if (LOG.isDebugEnabled()) {
+      LOG.debug("Received nodePublishVolume call, request: {}",
+          request.toString());
+    }
+    Csi.NodePublishVolumeRequest req = ProtoTranslatorFactory
+        .getTranslator(NodePublishVolumeRequest.class,
+            Csi.NodePublishVolumeRequest.class).convertTo(request);
+    if (LOG.isDebugEnabled()) {
+      LOG.debug("Translate to CSI proto message: {}", req.toString());
+    }
+    csiClient.nodePublishVolume(req);
+    return NodePublishVolumeResponse.newInstance();
+  }
+
+  @Override
+  public NodeUnpublishVolumeResponse nodeUnpublishVolume(
+      NodeUnpublishVolumeRequest request) throws YarnException, IOException {
+    if (LOG.isDebugEnabled()) {
+      LOG.debug("Received nodeUnpublishVolume call, request: {}",
+          request.toString());
+    }
+    Csi.NodeUnpublishVolumeRequest req = ProtoTranslatorFactory
+        .getTranslator(NodeUnpublishVolumeRequest.class,
+            Csi.NodeUnpublishVolumeRequest.class).convertTo(request);
+    if (LOG.isDebugEnabled()) {
+      LOG.debug("Translate to CSI proto message: {}", req.toString());
+    }
+    csiClient.nodeUnpublishVolume(req);
+    return NodeUnpublishVolumeResponse.newInstance();
+  }
+
+  @Override
+  public void initializeApplication(
+      ApplicationInitializationContext initAppContext) {
+    // do nothing
+  }
+
+  @Override
+  public void stopApplication(
+      ApplicationTerminationContext stopAppContext) {
+    // do nothing
+  }
+
+  @Override
+  public ByteBuffer getMetaData() {
+    return ByteBuffer.allocate(0);
+  }
