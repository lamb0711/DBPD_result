HDDS-190. Improve shell error message for unrecognized option.
Contributed by Elek, Marton.

-import org.apache.commons.cli.CommandLine;
-import org.apache.hadoop.ozone.client.OzoneBucket;
-import org.apache.hadoop.ozone.client.OzoneClientUtils;
-import org.apache.hadoop.ozone.client.OzoneVolume;
-import org.apache.hadoop.ozone.client.rest.response.BucketInfo;
-import org.apache.hadoop.ozone.client.OzoneClientException;
-import org.apache.hadoop.ozone.client.rest.OzoneException;
-import org.apache.hadoop.ozone.web.ozShell.Handler;
-import org.apache.hadoop.ozone.web.ozShell.Shell;
-import org.apache.hadoop.ozone.web.utils.JsonUtils;
-import org.apache.hadoop.ozone.web.utils.OzoneUtils;
-
-import java.io.IOException;
-import java.net.URISyntaxException;
+import org.apache.hadoop.ozone.client.OzoneBucket;
+import org.apache.hadoop.ozone.client.OzoneClientException;
+import org.apache.hadoop.ozone.client.OzoneClientUtils;
+import org.apache.hadoop.ozone.client.OzoneVolume;
+import org.apache.hadoop.ozone.client.rest.response.BucketInfo;
+import org.apache.hadoop.ozone.web.ozShell.Handler;
+import org.apache.hadoop.ozone.web.ozShell.Shell;
+import org.apache.hadoop.ozone.web.utils.JsonUtils;
+
+import picocli.CommandLine.Command;
+import picocli.CommandLine.Help.Visibility;
+import picocli.CommandLine.Option;
+import picocli.CommandLine.Parameters;
+
+@Command(name = "-listBucket",
+    description = "lists the buckets in a volume.")
-  private String volumeName;
+  @Parameters(arity = "1..1", description = Shell.OZONE_VOLUME_URI_DESCRIPTION)
+  private String uri;
+
+  @Option(names = {"--length", "-length", "-l"},
+      description = "Limit of the max results",
+      defaultValue = "100",
+      showDefaultValue = Visibility.ALWAYS)
+  private int maxBuckets;
+
+  @Option(names = {"--start", "-start", "-s"},
+      description = "The first bucket to start the listing")
+  private String startBucket;
+
+  @Option(names = {"--prefix", "-prefix", "-p"},
+      description = "Prefix to filter the buckets")
+  private String prefix;
-   *
-   * @param cmd - CommandLine
-   *
-   * @throws IOException
-   * @throws OzoneException
-   * @throws URISyntaxException
-  protected void execute(CommandLine cmd)
-      throws IOException, OzoneException, URISyntaxException {
-    if (!cmd.hasOption(Shell.LIST_BUCKET)) {
-      throw new OzoneClientException(
-          "Incorrect call : listBucket is missing");
-    }
+  public Void call() throws Exception {
-    String ozoneURIString = cmd.getOptionValue(Shell.LIST_BUCKET);
-    URI ozoneURI = verifyURI(ozoneURIString);
+    URI ozoneURI = verifyURI(uri);
-    volumeName = path.getName(0).toString();
+    if (maxBuckets < 1) {
+      throw new IllegalArgumentException(
+          "the length should be a positive number");
+    }
-    if (cmd.hasOption(Shell.VERBOSE)) {
+    String volumeName = path.getName(0).toString();
+
+    if (isVerbose()) {
-    int maxBuckets = Integer.MAX_VALUE;
-    if (cmd.hasOption(Shell.LIST_LENGTH)) {
-      String length = cmd.getOptionValue(Shell.LIST_LENGTH);
-      OzoneUtils.verifyMaxKeyLength(length);
-      maxBuckets = Integer.parseInt(length);
-    }
-
-    String startBucket = null;
-    if (cmd.hasOption(Shell.START)) {
-      startBucket = cmd.getOptionValue(Shell.START);
-    }
-
-    String prefix = null;
-    if (cmd.hasOption(Shell.PREFIX)) {
-      prefix = cmd.getOptionValue(Shell.PREFIX);
-    }
-      BucketInfo bucketInfo = OzoneClientUtils.asBucketInfo(bucketIterator.next());
+      BucketInfo bucketInfo =
+          OzoneClientUtils.asBucketInfo(bucketIterator.next());
-    if (cmd.hasOption(Shell.VERBOSE)) {
+    if (isVerbose()) {
+    return null;
