YARN-791. Changed RM APIs and web-services related to nodes to ensure that both are consistent with each other. Contributed by Sandy Ryza.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1500994 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.EnumSet;
+import java.util.Iterator;
+import java.util.List;
+import org.apache.hadoop.yarn.api.records.NodeState;
+import org.apache.hadoop.yarn.proto.YarnProtos.NodeStateProto;
+import org.apache.hadoop.yarn.proto.YarnServiceProtos.GetClusterNodesRequestProtoOrBuilder;
+import org.apache.hadoop.yarn.api.records.impl.pb.ProtoUtils;
+  private EnumSet<NodeState> states = null;
+  
+    mergeLocalToProto();
+  
+  @Override
+  public EnumSet<NodeState> getNodeStates() {
+    initNodeStates();
+    return this.states;
+  }
+  
+  @Override
+  public void setNodeStates(final EnumSet<NodeState> states) {
+    initNodeStates();
+    this.states.clear();
+    if (states == null) {
+      return;
+    }
+    this.states.addAll(states);
+  }
+  
+  private void mergeLocalToProto() {
+    if (viaProto) {
+      maybeInitBuilder();
+    }
+    mergeLocalToBuilder();
+    proto = builder.build();
+    viaProto = true;
+  }
+  private void maybeInitBuilder() {
+    if (viaProto || builder == null) {
+      builder = GetClusterNodesRequestProto.newBuilder(proto);
+    }
+    viaProto = false;
+  }
+  
+  private void mergeLocalToBuilder() {
+    if (this.states != null) {
+      maybeInitBuilder();
+      builder.clearNodeStates();
+      Iterable<NodeStateProto> iterable = new Iterable<NodeStateProto>() {
+        @Override
+        public Iterator<NodeStateProto> iterator() {
+          return new Iterator<NodeStateProto>() {
+
+            Iterator<NodeState> iter = states.iterator();
+
+            @Override
+            public boolean hasNext() {
+              return iter.hasNext();
+            }
+
+            @Override
+            public NodeStateProto next() {
+              return ProtoUtils.convertToProtoFormat(iter.next());
+            }
+
+            @Override
+            public void remove() {
+              throw new UnsupportedOperationException();
+
+            }
+          };
+
+        }
+      };
+      builder.addAllNodeStates(iterable);
+    }
+  }
+  
+  private void initNodeStates() {
+    if (this.states != null) {
+      return;
+    }
+    GetClusterNodesRequestProtoOrBuilder p = viaProto ? proto : builder;
+    List<NodeStateProto> list = p.getNodeStatesList();
+    this.states = EnumSet.noneOf(NodeState.class);
+
+    for (NodeStateProto c : list) {
+      this.states.add(ProtoUtils.convertFromProtoFormat(c));
+    }
+  }
+  
