YARN-6545. Followup fix for YARN-6405. Contributed by Jian He

-import org.apache.slider.api.OptionKeys;
-import java.net.URI;
-      Map<String, String> tokensForSubstitution, RoleInstance roleInstance)
-      throws IOException {
+      Map<String, String> tokensForSubstitution, RoleInstance roleInstance,
+      StateAccessForProviders appState) throws IOException {
-                tokensForSubstitution, configFile, remoteFile, roleInstance);
+                tokensForSubstitution, configFile, remoteFile, appState);
-                tokensForSubstitution, configFile, remoteFile, roleInstance);
+                tokensForSubstitution, configFile, remoteFile, appState);
-      Path remoteFile, RoleInstance roleInstance) throws IOException {
+      Path remoteFile, StateAccessForProviders appState) throws IOException {
-      conf = (Map<String, String>) roleInstance.providerRole.
-          appState.configFileCache.get(configFile);
+      conf = (Map<String, String>) appState.getConfigFileCache()
+          .get(configFile);
-      Path remoteFile, RoleInstance roleInstance) {
+      Path remoteFile, StateAccessForProviders appState) {
-      content = (String) roleInstance.providerRole.appState.configFileCache
-          .get(configFile);
+      content = (String) appState.getConfigFileCache().get(configFile);
-    substituteStrWithTokens(content, tokensForSubstitution);
+    content = substituteStrWithTokens(content, tokensForSubstitution);
-   * Get initial token map to be substituted into config values.
-   * @param appConf app configurations
-   * @param clusterName app name
+   * Get initial component token map to be substituted into config values.
+   * @param roleInstance role instance
-  public Map<String, String> getStandardTokenMap(Configuration appConf,
-      RoleInstance roleInstance, String clusterName) {
-
+  public Map<String, String> initCompTokensForSubstitute(
+      RoleInstance roleInstance) {
-
-    String nnuri = appConf.getProperty("fs.defaultFS");
-    if (nnuri != null && !nnuri.isEmpty()) {
-      tokens.put("${NN_URI}", nnuri);
-      tokens.put("${NN_HOST}", URI.create(nnuri).getHost());
-    }
-    tokens.put("${ZK_HOST}", appConf.getProperty(OptionKeys.ZOOKEEPER_HOSTS));
-    tokens.put("${DEFAULT_ZK_PATH}", appConf.getProperty(OptionKeys.ZOOKEEPER_PATH));
-    tokens.put(SERVICE_NAME_LC, clusterName.toLowerCase());
-    tokens.put(SERVICE_NAME, clusterName);
