MAPREDUCE-3104. Implemented Application-acls. (vinodkv)


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186748 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.security.UserGroupInformation;
+import org.apache.hadoop.yarn.api.records.ApplicationId;
+import org.apache.hadoop.yarn.api.records.ApplicationAccessType;
+import org.apache.hadoop.yarn.server.nodemanager.containermanager.application.Application;
+import org.apache.hadoop.yarn.server.security.ApplicationACLsManager;
+    private final ApplicationACLsManager aclsManager;
-    public ContainersLogsBlock(Configuration conf, Context context) {
+    public ContainersLogsBlock(Configuration conf, Context context,
+        ApplicationACLsManager aclsManager) {
+      this.aclsManager = aclsManager;
+      ApplicationId applicationId = containerId.getApplicationAttemptId()
+          .getApplicationId();
+      Application application = this.nmContext.getApplications().get(
+          applicationId);
-      if (container == null) {
+      if (application == null || container == null) {
-      } else if (EnumSet.of(ContainerState.NEW, ContainerState.LOCALIZING,
+        return;
+      }
+
+      if (EnumSet.of(ContainerState.NEW, ContainerState.LOCALIZING,
-      } else if (EnumSet.of(ContainerState.RUNNING,
+        return;
+      }
+
+      if (EnumSet.of(ContainerState.RUNNING,
+        // Check for the authorization.
+        String remoteUser = request().getRemoteUser();
+        UserGroupInformation callerUGI = null;
+        if (remoteUser != null) {
+          callerUGI = UserGroupInformation.createRemoteUser(remoteUser);
+        }
+        if (callerUGI != null && !this.aclsManager.checkAccess(callerUGI,
+            ApplicationAccessType.VIEW_APP, application.getUser(),
+                applicationId)) {
+          div.h1(
+              "You (User " + remoteUser
+                  + ") are not authorized to view the logs for application "
+                  + applicationId)._();
+          return;
+        }
+
-                            containerId.getApplicationAttemptId().getApplicationId())
+                            applicationId)
-      String[] logDirs =
-          conf.getStrings(YarnConfiguration.NM_LOG_DIRS, YarnConfiguration.DEFAULT_NM_LOG_DIRS);
+      String[] logDirs = conf.getStrings(YarnConfiguration.NM_LOG_DIRS,
+          YarnConfiguration.DEFAULT_NM_LOG_DIRS);
