Merge trunk into HA branch.


git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208644 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.hadoop;
+package org.apache.hadoop.yarn.server.nodemanager;
-import org.apache.hadoop.yarn.api.records.NodeHealthStatus;
- * The class which provides functionality of checking the health of the node and
- * reporting back to the service for which the health checker has been asked to
- * report.
+ * The class which provides functionality of checking the health of the node
+ * using the configured node health script and reporting back to the service
+ * for which the health checker has been asked to report.
-public class NodeHealthCheckerService extends AbstractService {
+public class NodeHealthScriptRunner extends AbstractService {
-  private static Log LOG = LogFactory.getLog(NodeHealthCheckerService.class);
+  private static Log LOG = LogFactory.getLog(NodeHealthScriptRunner.class);
-  
-  public NodeHealthCheckerService() {
-    super(NodeHealthCheckerService.class.getName());
+  public NodeHealthScriptRunner() {
+    super(NodeHealthScriptRunner.class.getName());
-  public NodeHealthCheckerService(Configuration conf) {
-    this();
-    init(conf);
-  }
-
-  private boolean isHealthy() {
+  public boolean isHealthy() {
-   * Sets if the node is healhty or not.
+   * Sets if the node is healhty or not considering disks' health also.
-  private String getHealthReport() {
+  public String getHealthReport() {
-   * Sets the health report from the node health script.
-   * 
+   * Sets the health report from the node health script. Also set the disks'
+   * health info obtained from DiskHealthCheckerService.
+   *
-  private long getLastReportedTime() {
+  public long getLastReportedTime() {
-  
+
-   * Method to populate the fields for the {@link NodeHealthStatus}
-   * 
-   * @param healthStatus
+   * Used only by tests to access the timer task directly
+   * @return the timer task
-  public synchronized void setHealthStatus(NodeHealthStatus healthStatus) {
-    healthStatus.setIsNodeHealthy(this.isHealthy());
-    healthStatus.setHealthReport(this.getHealthReport());
-    healthStatus.setLastHealthReportTime(this.getLastReportedTime());
-  }
-  
-  /**
-   * Test method to directly access the timer which node 
-   * health checker would use.
-   * 
-   *
-   * @return Timer task
-   */
-  //XXX:Not to be used directly.
-  TimerTask getTimer() {
+  TimerTask getTimerTask() {
