HDFS-8496. Calling stopWriter() with FSDatasetImpl lock held may block other threads (cmccabe)

+import java.util.concurrent.atomic.AtomicReference;
-  private Thread writer;
+  private AtomicReference<Thread> writer = new AtomicReference<Thread>();
-    this.writer = writer;
+    this.writer.set(writer);
-    this.writer = from.writer;
+    this.writer.set(from.writer.get());
-  /**
-   * Set the thread that is writing to this replica
-   * @param writer a thread writing to this replica
-   */
-  public void setWriter(Thread writer) {
-    this.writer = writer;
-  }
-  
-    if (writer != null && writer != Thread.currentThread() 
-        && writer.isAlive()) {
-      this.writer.interrupt();
+    Thread thread = writer.get();
+    if (thread != null && thread != Thread.currentThread() 
+        && thread.isAlive()) {
+      thread.interrupt();
+   * Attempt to set the writer to a new value.
+   */
+  public boolean attemptToSetWriter(Thread prevWriter, Thread newWriter) {
+    return writer.compareAndSet(prevWriter, newWriter);
+  }
+
+  /**
-    if (writer != null && writer != Thread.currentThread() && writer.isAlive()) {
-      writer.interrupt();
+    while (true) {
+      Thread thread = writer.get();
+      if ((thread == null) || (thread == Thread.currentThread()) ||
+          (!thread.isAlive())) {
+        if (writer.compareAndSet(thread, null) == true) {
+          return; // Done
+        }
+        // The writer changed.  Go back to the start of the loop and attempt to
+        // stop the new writer.
+        continue;
+      }
+      thread.interrupt();
-        writer.join(xceiverStopTimeout);
-        if (writer.isAlive()) {
-          final String msg = "Join on writer thread " + writer + " timed out";
-          DataNode.LOG.warn(msg + "\n" + StringUtils.getStackTrace(writer));
+        thread.join(xceiverStopTimeout);
+        if (thread.isAlive()) {
+          // Our thread join timed out.
+          final String msg = "Join on writer thread " + thread + " timed out";
+          DataNode.LOG.warn(msg + "\n" + StringUtils.getStackTrace(thread));
-  
+
