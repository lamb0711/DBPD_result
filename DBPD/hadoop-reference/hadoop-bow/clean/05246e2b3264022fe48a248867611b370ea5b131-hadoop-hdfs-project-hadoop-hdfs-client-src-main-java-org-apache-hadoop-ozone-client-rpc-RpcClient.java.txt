HDFS-12060. Ozone: OzoneClient: Add list calls in RpcClient. Contributed by Nandakumar.

-import java.util.Iterator;
+  private final Configuration conf;
-
-
+    this.conf = conf;
-
-    return new OzoneVolume(volume.getVolume(), volume.getAdminName(),
-        volume.getOwnerName(), volume.getQuotaInBytes(),
+    return new OzoneVolume(
+        conf,
+        this,
+        volume.getVolume(),
+        volume.getAdminName(),
+        volume.getOwnerName(),
+        volume.getQuotaInBytes(),
-        map(KSMPBHelper::convertOzoneAcl).collect(Collectors.toList()));
+            map(KSMPBHelper::convertOzoneAcl).collect(Collectors.toList()));
-  public Iterator<OzoneVolume> listVolumes(String volumePrefix)
+  public List<OzoneVolume> listVolumes(String volumePrefix, String prevVolume,
+                                       int maxListResult)
-    throw new UnsupportedOperationException("Not yet implemented.");
+    List<KsmVolumeArgs> volumes = keySpaceManagerClient.listAllVolumes(
+        volumePrefix, prevVolume, maxListResult);
+
+    return volumes.stream().map(volume -> new OzoneVolume(
+        conf,
+        this,
+        volume.getVolume(),
+        volume.getAdminName(),
+        volume.getOwnerName(),
+        volume.getQuotaInBytes(),
+        volume.getAclMap().ozoneAclGetProtobuf().stream().
+            map(KSMPBHelper::convertOzoneAcl).collect(Collectors.toList())))
+        .collect(Collectors.toList());
-  public Iterator<OzoneVolume> listVolumes(String volumePrefix, String user)
+  public List<OzoneVolume> listVolumes(String user, String volumePrefix,
+                                       String prevVolume, int maxListResult)
-    throw new UnsupportedOperationException("Not yet implemented.");
+    List<KsmVolumeArgs> volumes = keySpaceManagerClient.listVolumeByUser(
+        user, volumePrefix, prevVolume, maxListResult);
+
+    return volumes.stream().map(volume -> new OzoneVolume(
+        conf,
+        this,
+        volume.getVolume(),
+        volume.getAdminName(),
+        volume.getOwnerName(),
+        volume.getQuotaInBytes(),
+        volume.getAclMap().ozoneAclGetProtobuf().stream().
+            map(KSMPBHelper::convertOzoneAcl).collect(Collectors.toList())))
+        .collect(Collectors.toList());
-    return new OzoneBucket(bucketArgs.getVolumeName(),
-                           bucketArgs.getBucketName(),
-                           bucketArgs.getAcls(),
-                           bucketArgs.getStorageType(),
-                           bucketArgs.getIsVersionEnabled());
+    return new OzoneBucket(
+        conf,
+        this,
+        bucketArgs.getVolumeName(),
+        bucketArgs.getBucketName(),
+        bucketArgs.getAcls(),
+        bucketArgs.getStorageType(),
+        bucketArgs.getIsVersionEnabled());
-  public Iterator<OzoneBucket> listBuckets(
-      String volumeName, String bucketPrefix) throws IOException {
-    throw new UnsupportedOperationException("Not yet implemented.");
+  public List<OzoneBucket> listBuckets(String volumeName, String bucketPrefix,
+                                       String prevBucket, int maxListResult)
+      throws IOException {
+    List<KsmBucketInfo> buckets = keySpaceManagerClient.listBuckets(
+        volumeName, prevBucket, bucketPrefix, maxListResult);
+
+    return buckets.stream().map(bucket -> new OzoneBucket(
+        conf,
+        this,
+        bucket.getVolumeName(),
+        bucket.getBucketName(),
+        bucket.getAcls(),
+        bucket.getStorageType(),
+        bucket.getIsVersionEnabled()))
+        .collect(Collectors.toList());
-  public Iterator<OzoneKey> listKeys(
-      String volumeName, String bucketName, String keyPrefix)
+  public List<OzoneKey> listKeys(String volumeName, String bucketName,
+                                 String keyPrefix, String prevKey,
+                                 int maxListResult)
-    throw new UnsupportedOperationException("Not yet implemented.");
+    List<KsmKeyInfo> keys = keySpaceManagerClient.listKeys(
+        volumeName, bucketName, prevKey, keyPrefix, maxListResult);
+
+    return keys.stream().map(key -> new OzoneKey(
+        key.getVolumeName(),
+        key.getBucketName(),
+        key.getKeyName(),
+        key.getDataSize()))
+        .collect(Collectors.toList());
