merge from trunk r1602933

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1602947 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Iterator;
+import java.util.Map;
+import java.util.Map.Entry;
+import com.google.common.collect.Maps;
+  private static final int NO_XATTRS = -1;
+  private Map<String, byte[]> xAttrs;
+  
+  /**
+   * Returns all xAttrs.
+   * 
+   * @return Map<String, byte[]> containing all xAttrs
+   */
+  public Map<String, byte[]> getXAttrs() {
+    return xAttrs;
+  }
+  
+  /**
+   * Sets optional xAttrs.
+   * 
+   * @param xAttrs Map<String, byte[]> containing all xAttrs
+   */
+  public void setXAttrs(Map<String, byte[]> xAttrs) {
+    this.xAttrs = xAttrs;
+  }
+    
+    if (xAttrs != null) {
+      out.writeInt(xAttrs.size());
+      Iterator<Entry<String, byte[]>> iter = xAttrs.entrySet().iterator();
+      while (iter.hasNext()) {
+        Entry<String, byte[]> entry = iter.next();
+        WritableUtils.writeString(out, entry.getKey());
+        final byte[] value = entry.getValue();
+        if (value != null) {
+          out.writeInt(value.length);
+          if (value.length > 0) {
+            out.write(value);
+          }
+        } else {
+          out.writeInt(-1);
+        }
+      }
+    } else {
+      out.writeInt(NO_XATTRS);
+    }
+    
+    int xAttrsSize = in.readInt();
+    if (xAttrsSize != NO_XATTRS) {
+      xAttrs = Maps.newHashMap();
+      for (int i = 0; i < xAttrsSize; ++i) {
+        final String name = WritableUtils.readString(in);
+        final int valueLen = in.readInt();
+        byte[] value = null;
+        if (valueLen > -1) {
+          value = new byte[valueLen];
+          if (valueLen > 0) {
+            in.readFully(value);
+          }
+        }
+        xAttrs.put(name, value);
+      }
+    } else {
+      xAttrs = null;
+    }
-    return Objects.equal(aclEntries, other.aclEntries);
+    return Objects.equal(aclEntries, other.aclEntries) &&
+        Objects.equal(xAttrs, other.xAttrs);
-    return Objects.hashCode(super.hashCode(), aclEntries);
+    return Objects.hashCode(super.hashCode(), aclEntries, xAttrs);
+    sb.append(", xAttrs = " + xAttrs);
