HDFS-5914. Incorporate ACLs with the changes from HDFS-5698. Contributed by Haohui Mai.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1566991 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.hadoop.fs.permission.AclEntry;
+import org.apache.hadoop.hdfs.protocol.proto.AclProtos.AclEntryProto;
+import org.apache.hadoop.hdfs.protocol.proto.AclProtos.AclFeatureProto;
+import org.apache.hadoop.hdfs.protocolPB.PBHelper;
+import org.apache.hadoop.hdfs.server.namenode.FsImageProto.ExtendedAclSection;
+import com.google.common.collect.ImmutableList;
+    private ImmutableList<AclEntry>[] extendedAclTable;
+
+    public ImmutableList<AclEntry>[] getExtendedAclTable() {
+      return extendedAclTable;
+    }
-    private final DeduplicationMap<String> stringMap = DeduplicationMap.newMap();
+
+    private final DeduplicationMap<String> stringMap = DeduplicationMap
+        .newMap();
+    private final DeduplicationMap<ImmutableList<AclEntryProto>> extendedAclMap = DeduplicationMap
+        .newMap();
+
+    public DeduplicationMap<ImmutableList<AclEntryProto>> getExtendedAclMap() {
+      return extendedAclMap;
+    }
+        case EXTENDED_ACL:
+          loadExtendedAclSection(in);
+          break;
+    @SuppressWarnings("unchecked")
+    private void loadExtendedAclSection(InputStream in) throws IOException {
+      ExtendedAclSection s = ExtendedAclSection.parseDelimitedFrom(in);
+      ctx.extendedAclTable = new ImmutableList[s.getNumEntry() + 1];
+      for (int i = 0; i < s.getNumEntry(); ++i) {
+        ExtendedAclSection.Entry e = ExtendedAclSection.Entry
+            .parseDelimitedFrom(in);
+        ctx.extendedAclTable[e.getId()] = ImmutableList.copyOf(PBHelper
+            .convertAclEntry(e.getAcl().getEntriesList()));
+      }
+    }
+
+      saveExtendedAclSection(b);
+
+    private void saveExtendedAclSection(FileSummary.Builder summary)
+        throws IOException {
+      OutputStream out = sectionOutputStream;
+      ExtendedAclSection.Builder b = ExtendedAclSection.newBuilder()
+          .setNumEntry(saverContext.extendedAclMap.size());
+      b.build().writeDelimitedTo(out);
+      for (Entry<ImmutableList<AclEntryProto>, Integer> e : saverContext.extendedAclMap
+          .entrySet()) {
+        ExtendedAclSection.Entry.Builder eb = ExtendedAclSection.Entry
+            .newBuilder().setId(e.getValue())
+            .setAcl(AclFeatureProto.newBuilder().addAllEntries(e.getKey()));
+        eb.build().writeDelimitedTo(out);
+      }
+      commitSection(summary, SectionName.EXTENDED_ACL);
+    }
+    EXTENDED_ACL("EXTENDED_ACL"),
