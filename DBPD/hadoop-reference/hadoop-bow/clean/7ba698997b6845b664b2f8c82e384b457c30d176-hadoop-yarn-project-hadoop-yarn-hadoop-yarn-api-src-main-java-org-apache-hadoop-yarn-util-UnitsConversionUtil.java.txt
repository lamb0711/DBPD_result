YARN-4829. Add support for binary units in Resource class.(vvasudev via asuresh)

-      {"p", "n", "u", "m", "", "k", "M", "G", "T", "P"};
+      { "p", "n", "u", "m", "", "k", "M", "G", "T", "P", "Ki", "Mi", "Gi", "Ti",
+          "Pi" };
+  private static final Converter KILO_BINARY = new Converter(1024L, 1L);
+  private static final Converter MEGA_BINARY = new Converter(1024L * 1024L, 1L);
+  private static final Converter GIGA_BINARY =
+      new Converter(1024L * 1024L * 1024L, 1L);
+  private static final Converter TERA_BINARY =
+      new Converter(1024L * 1024L * 1024L * 1024L, 1L);
+  private static final Converter PETA_BINARY =
+      new Converter(1024L * 1024L * 1024L * 1024L * 1024L, 1L);
+
+    case "Ki":
+      return KILO_BINARY;
+    case "Mi":
+      return MEGA_BINARY;
+    case "Gi":
+      return GIGA_BINARY;
+    case "Ti":
+      return TERA_BINARY;
+    case "Pi":
+      return PETA_BINARY;
-    Long tmp;
+    if (fromUnit.equals(toUnit)) {
+      return fromValue;
+    }
+    Long numeratorMultiplierLimit = Long.MAX_VALUE / numerator;
-      if (!toUnit.equals(fromUnit)) {
-        tmp = Long.MAX_VALUE / numerator;
-        if (tmp < fromValue) {
-          throw new IllegalArgumentException(overflowMsg);
-        }
+      if (numeratorMultiplierLimit < fromValue) {
+        throw new IllegalArgumentException(overflowMsg);
-    tmp = numerator / denominator;
-    if (!toUnit.equals(fromUnit)) {
-      if ((Long.MAX_VALUE / tmp) < fromValue) {
-        throw new IllegalArgumentException(overflowMsg);
-      }
+    if (numeratorMultiplierLimit > fromValue) {
+      return (numerator * fromValue) / denominator;
+    }
+    Long tmp = numerator / denominator;
+    if ((Long.MAX_VALUE / tmp) < fromValue) {
+      throw new IllegalArgumentException(overflowMsg);
