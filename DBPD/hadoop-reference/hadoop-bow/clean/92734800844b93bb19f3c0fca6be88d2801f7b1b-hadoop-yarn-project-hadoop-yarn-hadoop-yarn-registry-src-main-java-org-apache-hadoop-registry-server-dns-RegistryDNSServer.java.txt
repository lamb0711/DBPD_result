YARN-7198. Add jsvc support for RegistryDNS. Contributed by Billie Rinaldi

-import org.apache.commons.cli.BasicParser;
-import org.apache.commons.cli.CommandLine;
-import org.apache.commons.cli.CommandLineParser;
-import org.apache.commons.cli.Options;
-import org.apache.commons.cli.ParseException;
+   * @param registryDNS the registry DNS instance.
-  public RegistryDNSServer(String name) {
+  public RegistryDNSServer(String name, final RegistryDNS registryDNS) {
+    this.registryDNS = registryDNS;
-    // probably need to populate with existing apps?
-    registryDNS = (RegistryDNS) DNSOperationsFactory.createInstance(conf);
+    if (registryDNS == null) {
+      registryDNS = (RegistryDNS) DNSOperationsFactory.createInstance(conf);
+    }
-   * @param args command line args.
+   * @param conf configuration
+   * @param rdns registry dns instance
-  static RegistryDNSServer launchDNSServer(String[] args) {
+  static RegistryDNSServer launchDNSServer(Configuration conf,
+      RegistryDNS rdns) {
-    StringUtils.startupShutdownMessage(RegistryDNSServer.class, args,
-                                       LOG);
-      dnsServer = new RegistryDNSServer("RegistryDNSServer");
+      dnsServer = new RegistryDNSServer("RegistryDNSServer", rdns);
-      YarnConfiguration conf = new YarnConfiguration();
-      processCommandLine(args, conf);
-      new GenericOptionsParser(conf, args);
-   * Process input command line arguments.
-   * @param args the command line argument array.
-   * @param conf  the configuration.
-   */
-  private static void processCommandLine(String[] args,
-                                         YarnConfiguration conf) {
-    Options options = new Options();
-    options.addOption("p", "port", true,
-                      "the server listening port (override)");
-
-    CommandLineParser parser = new BasicParser();
-    try {
-      CommandLine cmd = parser.parse(options, args);
-      if (cmd.hasOption("p")) {
-        conf.set(RegistryConstants.KEY_DNS_PORT, cmd.getOptionValue("p"));
-      }
-    } catch (ParseException e) {
-      LOG.error("Error parsing the command line options", e);
-    }
-  }
-
-  /**
+   * @throws IOException if command line options can't be parsed
-  public static void main(String[] args) {
-    launchDNSServer(args);
+  public static void main(String[] args) throws IOException {
+    StringUtils.startupShutdownMessage(RegistryDNSServer.class, args, LOG);
+    YarnConfiguration conf = new YarnConfiguration();
+    new GenericOptionsParser(conf, args);
+    launchDNSServer(conf, null);
