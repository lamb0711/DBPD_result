YARN-8867. Added resource localization status to YARN service status call.
           Contributed by Chandni Singh

+import org.apache.hadoop.yarn.api.records.LocalizationState;
+import org.apache.hadoop.yarn.api.records.LocalizationStatus;
-  private Set<LocalResourceRequest> resourcesFailedToBeLocalized =
-      new HashSet<>();
+  private final List<LocalizationStatus> resourcesFailedToBeLocalized =
+      new ArrayList<>();
-  public void resourceLocalizationFailed(LocalResourceRequest request) {
+  public void resourceLocalizationFailed(LocalResourceRequest request,
+      String diagnostics) {
-    pendingResources.remove(request);
-    resourcesFailedToBeLocalized.add(request);
+    Set<String> keys = pendingResources.remove(request);
+    if (keys != null) {
+      synchronized (resourcesFailedToBeLocalized) {
+        keys.forEach(key ->
+            resourcesFailedToBeLocalized.add(LocalizationStatus.newInstance(key,
+                LocalizationState.FAILED, diagnostics)));
+      }
+    }
+
+  /**
+   * Get all the localization statuses.
+   * @return the localization statuses.
+   */
+  public List<LocalizationStatus> getLocalizationStatuses() {
+    List<LocalizationStatus> statuses = new ArrayList<>();
+    localizedResources.forEach((key, path) -> {
+      LocalizationStatus status = LocalizationStatus.newInstance(key,
+          LocalizationState.COMPLETED);
+      statuses.add(status);
+    });
+
+    pendingResources.forEach((lrReq, keys) ->
+        keys.forEach(key -> {
+          LocalizationStatus status = LocalizationStatus.newInstance(key,
+              LocalizationState.PENDING);
+          statuses.add(status);
+        }));
+
+    synchronized (resourcesFailedToBeLocalized) {
+      statuses.addAll(resourcesFailedToBeLocalized);
+    }
+    return statuses;
+  }
+
