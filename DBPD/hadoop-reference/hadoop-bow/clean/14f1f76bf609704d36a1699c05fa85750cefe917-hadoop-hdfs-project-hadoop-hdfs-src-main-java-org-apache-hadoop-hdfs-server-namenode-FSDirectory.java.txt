HDFS-5614. NameNode: implement handling of ACLs in combination with snapshots. Contributed by Chris Nauroth.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1563304 13f79535-47bb-0310-9956-ffa450edef68

+    if (getINode4DotSnapshot(src) != null) {
+      return new HdfsFileStatus(0, true, 0, 0, 0, 0, null, null, null, null,
+          HdfsFileStatus.EMPTY_NAME, -1L, 0);
+    }
+    return null;
+  }
+
+  private INode getINode4DotSnapshot(String src) throws UnresolvedLinkException {
-      return new HdfsFileStatus(0, true, 0, 0, 0, 0, null, null, null, null,
-          HdfsFileStatus.EMPTY_NAME, -1L, 0);
+      return node;
-    INodeWithAdditionalFields inode = resolveINodeWithAdditionalFields(src, iip);
+    INode inode = resolveLastINode(src, iip);
-    List<AclEntry> existingAcl = AclStorage.readINodeLogicalAcl(inode,
-      snapshotId);
+    List<AclEntry> existingAcl = AclStorage.readINodeLogicalAcl(inode);
-    INodeWithAdditionalFields inode = resolveINodeWithAdditionalFields(src, iip);
+    INode inode = resolveLastINode(src, iip);
-    List<AclEntry> existingAcl = AclStorage.readINodeLogicalAcl(inode,
-      snapshotId);
+    List<AclEntry> existingAcl = AclStorage.readINodeLogicalAcl(inode);
-    INodeWithAdditionalFields inode = resolveINodeWithAdditionalFields(src, iip);
+    INode inode = resolveLastINode(src, iip);
-    List<AclEntry> existingAcl = AclStorage.readINodeLogicalAcl(inode,
-      snapshotId);
+    List<AclEntry> existingAcl = AclStorage.readINodeLogicalAcl(inode);
-    INodeWithAdditionalFields inode = resolveINodeWithAdditionalFields(src, iip);
+    INode inode = resolveLastINode(src, iip);
-    INodeWithAdditionalFields inode = resolveINodeWithAdditionalFields(src, iip);
+    INode inode = resolveLastINode(src, iip);
-    List<AclEntry> existingAcl = AclStorage.readINodeLogicalAcl(inode,
-      snapshotId);
+    List<AclEntry> existingAcl = AclStorage.readINodeLogicalAcl(inode);
+    String srcs = normalizePath(src);
-      INodesInPath iip = rootDir.getINodesInPath4Write(normalizePath(src), true);
-      final INodeWithAdditionalFields inode = resolveINodeWithAdditionalFields(
-        src, iip);
-      int snapshotId = iip.getLatestSnapshotId();
+      // There is no real inode for the path ending in ".snapshot", so return a
+      // non-null, unpopulated AclStatus.  This is similar to getFileInfo.
+      if (srcs.endsWith(HdfsConstants.SEPARATOR_DOT_SNAPSHOT_DIR) &&
+          getINode4DotSnapshot(srcs) != null) {
+        return new AclStatus.Builder().owner("").group("").build();
+      }
+      INodesInPath iip = rootDir.getLastINodeInPath(srcs, true);
+      INode inode = resolveLastINode(src, iip);
+      int snapshotId = iip.getPathSnapshotId();
-  private static INodeWithAdditionalFields resolveINodeWithAdditionalFields(
-      String src, INodesInPath iip) throws FileNotFoundException {
+  private static INode resolveLastINode(String src, INodesInPath iip)
+      throws FileNotFoundException {
-    if (!(inode instanceof INodeWithAdditionalFields))
+    if (inode == null)
-    return (INodeWithAdditionalFields)inode;
+    return inode;
