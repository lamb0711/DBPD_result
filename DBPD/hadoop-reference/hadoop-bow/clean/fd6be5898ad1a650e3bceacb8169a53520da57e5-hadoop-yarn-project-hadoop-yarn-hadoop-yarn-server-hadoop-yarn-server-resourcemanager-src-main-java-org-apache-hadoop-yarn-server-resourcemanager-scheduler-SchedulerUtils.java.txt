YARN-8468. Enable the use of queue based maximum container allocation limit and implement it in FairScheduler. Contributed by Antal BÃ¡lint Steinbach.

-  
-  public static final String LOST_CONTAINER = 
+
+  public static final String LOST_CONTAINER =
-  
-  public static final String PREEMPTED_CONTAINER = 
+
+  public static final String PREEMPTED_CONTAINER =
-  
-  public static final String COMPLETED_APPLICATION = 
+
+  public static final String COMPLETED_APPLICATION =
-  
+
-  
+
-    return createAbnormalContainerStatus(containerId, 
+    return createAbnormalContainerStatus(containerId,
-    return createAbnormalContainerStatus(containerId, 
+    return createAbnormalContainerStatus(containerId,
-   * 
+   *
-    ContainerStatus containerStatus = 
+    ContainerStatus containerStatus =
-    if ( labelExp != null) {
+    if (labelExp != null) {
-      Resource maximumResource, String queueName, YarnScheduler scheduler,
-      boolean isRecovery, RMContext rmContext)
-      throws InvalidResourceRequestException {
-    normalizeAndValidateRequest(resReq, maximumResource, queueName, scheduler,
-        isRecovery, rmContext, null);
-  }
-
-
-  private static void normalizeAndValidateRequest(ResourceRequest resReq,
-          Resource maximumResource, String queueName, YarnScheduler scheduler,
-          boolean isRecovery, RMContext rmContext, QueueInfo queueInfo)
+      Resource maximumAllocation, String queueName, YarnScheduler scheduler,
+      boolean isRecovery, RMContext rmContext, QueueInfo queueInfo)
-      validateResourceRequest(resReq, maximumResource, queueInfo, rmContext);
+      validateResourceRequest(resReq, maximumAllocation, queueInfo, rmContext);
-  public static void normalizeAndvalidateRequest(ResourceRequest resReq,
-      Resource maximumResource, String queueName, YarnScheduler scheduler,
-      RMContext rmContext) throws InvalidResourceRequestException {
-    normalizeAndvalidateRequest(resReq, maximumResource, queueName, scheduler,
-        rmContext, null);
-  }
-
-  public static void normalizeAndvalidateRequest(ResourceRequest resReq,
-      Resource maximumResource, String queueName, YarnScheduler scheduler,
+  public static void normalizeAndValidateRequest(ResourceRequest resReq,
+      Resource maximumAllocation, String queueName, YarnScheduler scheduler,
-    normalizeAndValidateRequest(resReq, maximumResource, queueName, scheduler,
+    normalizeAndValidateRequest(resReq, maximumAllocation, queueName, scheduler,
-   * 
+   *
-      Resource maximumResource, QueueInfo queueInfo, RMContext rmContext)
+      Resource maximumAllocation, QueueInfo queueInfo, RMContext rmContext)
-        maximumResource);
+        maximumAllocation);
-          return false; 
+          return false;
