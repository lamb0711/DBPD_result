- [JCR-84] WebDAV LocatorFactoryImpl$Locator.getHref() constructs root resource URLs incorrectly
- adapting for jcr-locking support
- adding nodetype reports

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@159607 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.property.DefaultDavProperty;
+import org.apache.jackrabbit.webdav.property.DavProperty;
+import org.jdom.Element;
+
+import javax.jcr.NamespaceRegistry;
+import javax.jcr.RepositoryException;
+
+    public void setProperty(DavProperty property) throws DavException {
+	if (ItemResourceConstants.JCR_NAMESPACES.equals(property.getName())) {
+	    // todo: register and unregister namespaces
+	} else {
+	    super.setProperty(property);
+	}
+    }
+
+    //--------------------------------------------------------------------------
+    protected void initProperties() {
+	super.initProperties();
+	try {
+	    // init workspace specific properties
+	    NamespaceRegistry nsReg = getRepositorySession().getWorkspace().getNamespaceRegistry();
+	    String[] prefixes = nsReg.getPrefixes();
+	    Element[] nsElems = new Element[prefixes.length];
+	    for (int i = 0; i < prefixes.length; i++) {
+		Element elem = new Element(XML_NAMESPACE, NAMESPACE);
+		elem.addContent(new Element(XML_NSPREFIX).setText(prefixes[i]));
+		elem.addContent(new Element(XML_NSURI)).setText(nsReg.getURI(prefixes[i]));
+		nsElems[i] = elem;
+	    }
+	    properties.add(new DefaultDavProperty(ItemResourceConstants.JCR_NAMESPACES, nsElems, false));
+	} catch (RepositoryException e) {
+	    log.error("Failed to access NamespaceRegistry from the session/workspace: " + e.getMessage());
+	}
+    }
