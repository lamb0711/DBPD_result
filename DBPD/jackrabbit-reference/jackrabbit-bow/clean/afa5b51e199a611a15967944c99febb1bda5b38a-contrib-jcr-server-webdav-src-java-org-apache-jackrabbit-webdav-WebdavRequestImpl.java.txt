[JCR-000] Adjusting to spec 0.16.4 changes
[JCR-107] Typos in jcr-server io package javadocs
[JCR-104] Contrib/Jcr-Server: Improve package structure


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@161660 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.header.IfHeader;
+import org.apache.jackrabbit.webdav.header.CodedUrlHeader;
-	return DepthHeader.parse(httpRequest.getHeader(HEADER_DEPTH), defaultValue).getDepth();
+	return DepthHeader.parse(httpRequest, defaultValue).getDepth();
-	return getCodedURLHeader(HEADER_LOCK_TOKEN);
+        return CodedUrlHeader.parse(httpRequest, HEADER_LOCK_TOKEN).getCodedUrl();
-
-    /**
-     * Retrieve the header with the given header name and parse the CodedURL
-     * value included.
-     *
-     * @param headerName
-     * @return token present in the CodedURL header or <code>null</code> if
-     * the header is not present.
-     */
-    private String getCodedURLHeader(String headerName) {
-        String headerValue = null;
-	String header = httpRequest.getHeader(headerName);
-	if (header != null) {
-	    int p1 = header.indexOf('<');
-	    if (p1<0) {
-		throw new IllegalArgumentException("Invalid CodedURL header value:"+header);
-	    }
-	    int p2 = header.indexOf('>', p1);
-	    if (p2<0) {
-		throw new IllegalArgumentException("Invalid CodedURL header value:"+header);
-	    }
-	    headerValue = header.substring(p1+1, p2);
-	}
-	return headerValue;
-    }
-     *
-     * @return
-        return getCodedURLHeader(TransactionConstants.HEADER_TRANSACTIONID);
+        return CodedUrlHeader.parse(httpRequest, TransactionConstants.HEADER_TRANSACTIONID).getCodedUrl();
-     *
-     * @return
-     *
-     * @return
-        return getCodedURLHeader(ObservationConstants.HEADER_SUBSCRIPTIONID);
+        return CodedUrlHeader.parse(httpRequest, ObservationConstants.HEADER_SUBSCRIPTIONID).getCodedUrl();
-     *
-     * @return
-     *
-     * @return
-     *
-     * @return
-     *
