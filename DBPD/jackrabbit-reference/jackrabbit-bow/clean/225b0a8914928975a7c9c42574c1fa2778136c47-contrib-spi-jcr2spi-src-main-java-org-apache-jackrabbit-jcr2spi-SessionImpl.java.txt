work in progress

- HierarchyManager: changes methods to take ItemState instead of ItemId
- HierarchyManager: remove log-utility methods (saveGetJCRPath)
- HierarchyManager: remove CachingHierachyManager. not used
- ItemManager: changes methods to take ItemState instead of ItemId
- ItemStateValidator: remove utility methods not related to validation
- new class LogUtil that provides static saveGetJCRPath methods previously
  present on HierarchyManager, ItemStateValidator
- NodeState: add method 'getPropertyEntries()'
- create interface ChildPropertyEntry
- let PropertyReference implement ChildPropertyEntry

TODO: query/NodeIteratorImpl needs to be fixed. 


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@429652 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.jcr2spi.state.ItemState;
+import org.apache.jackrabbit.jcr2spi.state.NoSuchItemStateException;
+import org.apache.jackrabbit.jcr2spi.state.ItemStateException;
-        itemManager = createItemManager(itemStateManager, getHierarchyManager());
+        itemManager = createItemManager(getHierarchyManager());
-        return (Node) itemManager.getItem(workspace.getRootNodeId());
+        try {
+            ItemState state = getItemStateManager().getItemState(workspace.getRootNodeId());
+            return (Node) itemManager.getItem(state);
+        } catch (NoSuchItemStateException e) {
+            throw new ItemNotFoundException();
+        } catch (ItemStateException e) {
+            String msg = "Failed to retrieve root node.";
+            log.error(msg, e);
+            throw new RepositoryException(msg, e);
+        }
-            return (NodeImpl) getItemManager().getItem(id);
+            ItemState state = getItemStateManager().getItemState(id);
+            return (NodeImpl) getItemManager().getItem(state);
+        } catch (NoSuchItemStateException e) {
+            throw new ItemNotFoundException(id.toString());
+        } catch (ItemStateException e) {
+            String msg = "failed to retrieve item state of item " + id;
+            log.error(msg, e);
+            throw new RepositoryException(msg, e);
-        Operation op = Move.create(srcPath, destPath, validator);
+        Operation op = Move.create(srcPath, destPath, getHierarchyManager(), getNamespaceResolver());
-            ItemId id = getHierarchyManager().getItemId(targetPath);
-            isGranted = getAccessManager().isGranted(id, actionsArr);
+            ItemState itemState = getHierarchyManager().getItemState(targetPath);
+            isGranted = getAccessManager().isGranted(itemState.getId(), actionsArr);
-                    ItemId id = getHierarchyManager().getItemId(parentPath);
+                    ItemId id = getHierarchyManager().getItemState(parentPath).getId();
-    protected ItemManager createItemManager(ItemStateManager itemStateMgr, HierarchyManager hierarchyMgr) {
-        return new ItemManagerImpl(itemStateMgr, hierarchyMgr, this);
+    protected ItemManager createItemManager(HierarchyManager hierarchyMgr) {
+        return new ItemManagerImpl(hierarchyMgr, this);
