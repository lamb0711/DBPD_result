JCR-2509 : Reduce number of compiler warning by adding @Override and generics where appropriate [step 2: jackrabbit-jcr-server]

in addition:
- minor improvements in comments, typos
- use foreach loops where possible
- remove redundant Tika imports in server/io package
- remove redundant casts
- add missing index increment in SubscriptionManagerImpl.SubscriptionMap

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@915339 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.property.PropEntry;
-    public DavProperty getProperty(DavPropertyName name) {
+    public DavProperty<?> getProperty(DavPropertyName name) {
-    public void setProperty(DavProperty property) throws DavException {
+    public void setProperty(DavProperty<?> property) throws DavException {
-    public MultiStatusResponse alterProperties(List changeList) throws DavException {
+    public MultiStatusResponse alterProperties(List<? extends PropEntry> changeList) throws DavException {
-        List locks = new ArrayList();
+        List<ActiveLock> locks = new ArrayList<ActiveLock>();
-        return (ActiveLock[]) locks.toArray(new ActiveLock[locks.size()]);
+        return locks.toArray(new ActiveLock[locks.size()]);
-        DavProperty prop = getProperty(hrefPropertyName);
+        DavProperty<?> prop = getProperty(hrefPropertyName);
-        List hrefs = ((HrefProperty)prop).getHrefs();
+        List<String> hrefs = ((HrefProperty)prop).getHrefs();
-        Iterator hrefIter = hrefs.iterator();
+        Iterator<String> hrefIter = hrefs.iterator();
-            refResources[i] = getResourceFromHref((String)hrefIter.next());
+            refResources[i] = getResourceFromHref(hrefIter.next());
-            properties.add(new DefaultDavProperty(DavPropertyName.DISPLAYNAME, getDisplayName()));
+            properties.add(new DefaultDavProperty<String>(DavPropertyName.DISPLAYNAME, getDisplayName()));
-            properties.add(new DefaultDavProperty(DavPropertyName.ISCOLLECTION, "1"));
+            properties.add(new DefaultDavProperty<String>(DavPropertyName.ISCOLLECTION, "1"));
-            properties.add(new DefaultDavProperty(DavPropertyName.ISCOLLECTION, "0"));
+            properties.add(new DefaultDavProperty<String>(DavPropertyName.ISCOLLECTION, "0"));
-        properties.add(new DefaultDavProperty(DavPropertyName.GETLASTMODIFIED, lastModified));
+        properties.add(new DefaultDavProperty<String>(DavPropertyName.GETLASTMODIFIED, lastModified));
-        properties.add(new DefaultDavProperty(DavPropertyName.CREATIONDATE, HttpDateFormat.creationDateFormat().format(new Date(0))));
+        properties.add(new DefaultDavProperty<String>(DavPropertyName.CREATIONDATE, HttpDateFormat.creationDateFormat().format(new Date(0))));
-        // an empty lockdiscovery will be returned in the response.
+        // an empty xlockdiscovery will be returned in the response.
-        properties.add(new DefaultDavProperty(DeltaVConstants.CREATOR_DISPLAYNAME, null, true));
-        properties.add(new DefaultDavProperty(DeltaVConstants.COMMENT, null, true));
+        properties.add(new DefaultDavProperty<String>(DeltaVConstants.CREATOR_DISPLAYNAME, null, true));
+        properties.add(new DefaultDavProperty<String>(DeltaVConstants.COMMENT, null, true));
-        properties.add(new DefaultDavProperty(ItemResourceConstants.JCR_WORKSPACE_NAME,
+        properties.add(new DefaultDavProperty<String>(ItemResourceConstants.JCR_WORKSPACE_NAME,
-}
+}
