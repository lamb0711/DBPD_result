JCR-1104 : JSR 283 support
JCR-1171 : Contribute Pluggable Permission and User Management to Jackrabbit

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@638834 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.security.authorization.Permission;
-import org.apache.jackrabbit.core.state.ItemStateListener;
-                // transient item is not 'new', therefore it has to be 'modified'
-
+                /* transient item is not 'new', therefore it has to be 'modified'
+                   detect the effective set of modification:
+                   - child additions -> add_node perm on the child
+                   - property additions, modifications or removals -> set_property permission
+                   note: removed items are checked later on.
+                */
-                ItemId id = itemState.getId();
-                if (!accessMgr.isGranted(id, AccessManager.WRITE)) {
-                    String msg = itemMgr.safeGetJCRPath(id)
-                            + ": not allowed to modify item";
+                Path path = stateMgr.getHierarchyMgr().getPath(itemState.getId());
+                boolean isGranted = true;
+                if (itemState.isNode()) {
+                    // modified node state -> check possible modifications
+                    NodeState nState = (NodeState) itemState;
+                    for (Iterator it = nState.getAddedChildNodeEntries().iterator();
+                         it.hasNext() && isGranted;) {
+                        Name nodeName = ((NodeState.ChildNodeEntry) it.next()).getName();
+                        isGranted = accessMgr.isGranted(path, nodeName, Permission.ADD_NODE);
+                    }
+                    for (Iterator it = nState.getAddedPropertyNames().iterator();
+                         it.hasNext() && isGranted;) {
+                        Name propName = (Name) it.next();
+                        isGranted = accessMgr.isGranted(path, propName, Permission.SET_PROPERTY);
+                    }
+                } else {
+                    isGranted = accessMgr.isGranted(path, Permission.SET_PROPERTY);
+                }
+
+                if (!isGranted) {
+                    String msg = itemMgr.safeGetJCRPath(path) + ": not allowed to modify item";
-            ItemId id = itemState.getId();
+            Path path = stateMgr.getAtticAwareHierarchyMgr().getPath(itemState.getId());
-            if (!accessMgr.isGranted(id, AccessManager.REMOVE)) {
-                String msg = itemMgr.safeGetJCRPath(id)
+            int permission = (itemState.isNode()) ? Permission.REMOVE_NODE : Permission.REMOVE_PROPERTY;
+            if (!accessMgr.isGranted(path, permission)) {
+                String msg = itemMgr.safeGetJCRPath(path)
