JCR-1169 Distribution of commons classes (adjust jackrabbit-core)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@590014 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.QName;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.name.NameConstants;
-    private QName nodeTypeName;
+    private Name nodeTypeName;
-        isReferenceable = state.hasPropertyName(QName.JCR_UUID);
+        isReferenceable = state.hasPropertyName(NameConstants.JCR_UUID);
-        state.addPropertyName(QName.JCR_PRIMARYTYPE);
+        state.addPropertyName(NameConstants.JCR_PRIMARYTYPE);
-            state.addPropertyName(QName.JCR_MIXINTYPES);
+            state.addPropertyName(NameConstants.JCR_MIXINTYPES);
-            state.addPropertyName(QName.JCR_UUID);
+            state.addPropertyName(NameConstants.JCR_UUID);
-    public PropertyState createPropertyState(PersistenceManager pMgr, QName name) {
+    public PropertyState createPropertyState(PersistenceManager pMgr, Name name) {
-    public QName getNodeTypeName() {
+    public Name getNodeTypeName() {
-    public void setNodeTypeName(QName nodeTypeName) {
+    public void setNodeTypeName(Name nodeTypeName) {
-    public void addChildNodeEntry(QName name, NodeId id) {
+    public void addChildNodeEntry(Name name, NodeId id) {
-    public boolean hasProperty(QName name) {
+    public boolean hasProperty(Name name) {
-                || name.equals(QName.JCR_PRIMARYTYPE)
-                || (isReferenceable && name.equals(QName.JCR_UUID))
-                || (mixinTypeNames.size()>0 && name.equals(QName.JCR_MIXINTYPES));
+                || name.equals(NameConstants.JCR_PRIMARYTYPE)
+                || (isReferenceable && name.equals(NameConstants.JCR_UUID))
+                || (mixinTypeNames.size()>0 && name.equals(NameConstants.JCR_MIXINTYPES));
-    public PropertyEntry getPropertyEntry(QName name) {
+    public PropertyEntry getPropertyEntry(Name name) {
-            QName name = (QName) iter.next();
+            Name name = (Name) iter.next();
-    public void removeProperty(QName name) {
+    public void removeProperty(Name name) {
-        private final QName name;
+        private final Name name;
-        public ChildNodeEntry(QName name, NodeId id) {
+        public ChildNodeEntry(Name name, NodeId id) {
-        public QName getName() {
+        public Name getName() {
-        public QName getName() {
+        public Name getName() {
