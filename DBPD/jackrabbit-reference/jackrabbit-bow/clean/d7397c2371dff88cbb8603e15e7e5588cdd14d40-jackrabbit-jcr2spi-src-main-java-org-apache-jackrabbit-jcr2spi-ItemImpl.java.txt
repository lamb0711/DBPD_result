JCR-1819 : Add specific deep loading of Nodes and Properties
JCR-1843 : wrong status change upon conflicting removal (CacheBehaviour.OBSERVATION)
JCR-1293 : ReorderReferenceableSNSTest failure
JCR-1811 : ExportSysViewTest#testExportSysView_handler_session_saveBinary_occasionally failing


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@709211 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.jcr2spi.state.ItemState;
-import org.apache.jackrabbit.jcr2spi.state.ItemStateValidator;
-import org.apache.jackrabbit.jcr2spi.state.ItemStateLifeCycleListener;
-import org.apache.jackrabbit.jcr2spi.state.Status;
-import org.apache.jackrabbit.jcr2spi.state.NodeState;
-import org.apache.jackrabbit.jcr2spi.operation.Remove;
-import org.apache.jackrabbit.jcr2spi.operation.Operation;
-import org.apache.jackrabbit.jcr2spi.util.LogUtil;
-import org.apache.jackrabbit.spi.Path;
+import org.apache.jackrabbit.jcr2spi.operation.Operation;
+import org.apache.jackrabbit.jcr2spi.operation.Remove;
+import org.apache.jackrabbit.jcr2spi.state.ItemState;
+import org.apache.jackrabbit.jcr2spi.state.ItemStateLifeCycleListener;
+import org.apache.jackrabbit.jcr2spi.state.ItemStateValidator;
+import org.apache.jackrabbit.jcr2spi.state.NodeState;
+import org.apache.jackrabbit.jcr2spi.state.Status;
+import org.apache.jackrabbit.jcr2spi.util.LogUtil;
-import org.slf4j.LoggerFactory;
+import org.apache.jackrabbit.spi.Path;
+import org.slf4j.LoggerFactory;
-import javax.jcr.lock.LockException;
-import javax.jcr.version.VersionException;
-import javax.jcr.nodetype.ConstraintViolationException;
-import javax.jcr.RepositoryException;
-import javax.jcr.ItemNotFoundException;
-import javax.jcr.Item;
-import javax.jcr.ItemVisitor;
+import javax.jcr.Item;
+import javax.jcr.ItemNotFoundException;
+import javax.jcr.ItemVisitor;
+import javax.jcr.Node;
+import javax.jcr.PathNotFoundException;
-import javax.jcr.UnsupportedRepositoryOperationException;
-import javax.jcr.PathNotFoundException;
-import javax.jcr.Node;
+import javax.jcr.RepositoryException;
-
-import java.util.Map;
+import javax.jcr.UnsupportedRepositoryOperationException;
+import javax.jcr.lock.LockException;
+import javax.jcr.nodetype.ConstraintViolationException;
+import javax.jcr.version.VersionException;
+import java.util.Map;
-    // protected fields for VersionImpl and VersionHistoryImpl
-    protected ItemManager itemMgr;
+    /**
+     * The session that created this item.
+     */
-    public ItemImpl(ItemManager itemManager, SessionImpl session, ItemState state,
+    public ItemImpl(SessionImpl session, ItemState state,
-
-        this.itemMgr = itemManager;
-            return itemMgr.getItem(ancestorPath);
+            if (relDegree == 0) {
+                return this;
+            } else {
+                return getItemManager().getNode(ancestorPath);
+            }
-        return (Node) itemMgr.getItem(parentEntry);
+        return (Node) getItemManager().getItem(parentEntry);
+             * - Status#STALE_DESTROYED : external modifications while transient changes pending
+             * - Status#EXISTING_REMOVED : transient removal
+            case Status.STALE_DESTROYED:
+            case Status.EXISTING_REMOVED:
-             * - Status#EXISTING_REMOVED : transient removal
-             * - Status#STALE_DESTROYED : permanent removal. item will never get back to life
-            case Status.EXISTING_REMOVED:
-                notifyDestroyed();
-                break;
-            case Status.STALE_DESTROYED:
+     * Returns the ItemManager associated with this item's Session.
+     *
+     * @return ItemManager
+     */
+    protected ItemManager getItemManager() {
+        return session.getItemManager();
+    }
+
+    /**
