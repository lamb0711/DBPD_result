JCR-2155 SQL2 parser: identifiers should be case sensitive

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@785580 13f79535-47bb-0310-9956-ffa450edef68

+        if (currentToken.length() > 0) {
+            throw getSyntaxError("<end>");
+        }
-            if ("ISSAMENODE".equals(name)) {
+            if ("ISSAMENODE".equalsIgnoreCase(name)) {
-            } else if ("ISCHILDNODE".equals(name)) {
+            } else if ("ISCHILDNODE".equalsIgnoreCase(name)) {
-            } else if ("ISDESCENDANTNODE".equals(name)) {
+            } else if ("ISDESCENDANTNODE".equalsIgnoreCase(name)) {
-        if ("CONTAINS".equals(functionName)) {
+        if ("CONTAINS".equalsIgnoreCase(functionName)) {
-        } else if ("ISSAMENODE".equals(functionName)) {
+        } else if ("ISSAMENODE".equalsIgnoreCase(functionName)) {
-        } else if ("ISCHILDNODE".equals(functionName)) {
+        } else if ("ISCHILDNODE".equalsIgnoreCase(functionName)) {
-        } else if ("ISDESCENDANTNODE".equals(functionName)) {
+        } else if ("ISDESCENDANTNODE".equalsIgnoreCase(functionName)) {
-        if ("LENGTH".equals(functionName)) {
+        if ("LENGTH".equalsIgnoreCase(functionName)) {
-        } else if ("NAME".equals(functionName)) {
+        } else if ("NAME".equalsIgnoreCase(functionName)) {
-        } else if ("LOCALNAME".equals(functionName)) {
+        } else if ("LOCALNAME".equalsIgnoreCase(functionName)) {
-        } else if ("SCORE".equals(functionName)) {
+        } else if ("SCORE".equalsIgnoreCase(functionName)) {
-        } else if ("LOWER".equals(functionName)) {
+        } else if ("LOWER".equalsIgnoreCase(functionName)) {
-        } else if ("UPPER".equals(functionName)) {
+        } else if ("UPPER".equalsIgnoreCase(functionName)) {
+            if (readIf(":")) {
+                name = name + ":" + readName();
+            }
-    
+
-        boolean result = token.equals(currentToken) && !currentTokenQuoted;
+        boolean result = token.equalsIgnoreCase(currentToken) && !currentTokenQuoted;
-        if (!expected.equals(currentToken) || currentTokenQuoted) {
+        if (!expected.equalsIgnoreCase(currentToken) || currentTokenQuoted) {
-        boolean changed = false;
-                    command[i] = (char) (c - ('a' - 'A'));
-                    changed = true;
-                        char u = Character.toUpperCase(c);
-                        if (u != c) {
-                            command[i] = u;
-                            changed = true;
-                        }
-        if (changed) {
-            statement = new String(command);
-        }
-                    if (c == 'E') {
+                    if (c == 'E' || c == 'e') {
-                    currentValue = valueFactory.createValue((long) number);
+                    currentValue = valueFactory.createValue(number);
-    
+
-        if (chars[i] == 'E') {
+        if (chars[i] == 'E' || chars[i] == 'e') {
-        
+
-        String query = statement.substring(0, index) + ">*<" + statement.substring(index).trim();
+        String query = statement.substring(0, index) + "(*)" + statement.substring(index).trim();
-    
+
-     * 
+     *
