JCR-689: Minimize calls to PersistenceManager
- Remove obsolete call to ItemStateManager in EventStateCollection
- Introduce ItemManager.getItem(ItemState) with a check for status and skip access right check for NEW items
- Removed calls to ItemManager.getItem(ItemId) where not really necessary and all required information is present on given ItemState.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@518986 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.nodetype.NodeTypeManagerImpl;
-import org.apache.jackrabbit.name.NameException;
-import org.apache.jackrabbit.name.NoPrefixDeclaredException;
-import org.apache.jackrabbit.name.PathFormat;
+        NodeTypeManagerImpl ntMgr = session.getNodeTypeManager();
+        ItemValidator validator = new ItemValidator(ntMgr.getNodeTypeRegistry(),
+                session.getHierarchyManager(), session);
-                NodeImpl node = (NodeImpl) itemMgr.getItem(id);
-                NodeDefinition def = node.getDefinition();
+                NodeDefinition def = ntMgr.getNodeDefinition(nodeState.getDefinitionId());
-                NodeTypeImpl pnt = (NodeTypeImpl) node.getPrimaryNodeType();
+                NodeTypeImpl pnt = ntMgr.getNodeType(nodeState.getNodeTypeName());
-                EffectiveNodeType ent = node.getEffectiveNodeType();
+                EffectiveNodeType ent = validator.getEffectiveNodeType(nodeState);
-                            String msg = node.safeGetJCRPath()
+                            String msg = itemMgr.safeGetJCRPath(id)
-                        String msg = node.safeGetJCRPath()
+                        String msg = itemMgr.safeGetJCRPath(id)
-                        String msg = node.safeGetJCRPath()
+                        String msg = itemMgr.safeGetJCRPath(id)
-                PropertyImpl prop = (PropertyImpl) itemMgr.getItem(propId);
-                        (PropertyDefinitionImpl) prop.getDefinition();
+                        ntMgr.getPropertyDefinition(propState.getDefinitionId());
-                            String msg = prop.safeGetJCRPath() + ": " + e.getMessage();
+                            String msg = itemMgr.safeGetJCRPath(propId) + ": " + e.getMessage();
-                                        constraintViolationMsg = prop.safeGetJCRPath()
+                                        constraintViolationMsg = itemMgr.safeGetJCRPath(propId)
-                                    String msg = prop.safeGetJCRPath()
+                                    String msg = itemMgr.safeGetJCRPath(propId)
-            ItemImpl item = itemMgr.getItem(itemState.getId());
+            ItemImpl item = itemMgr.getItem(itemState);
+        NodeTypeManagerImpl ntMgr = session.getNodeTypeManager();
+        ItemValidator validator = new ItemValidator(ntMgr.getNodeTypeRegistry(),
+                session.getHierarchyManager(), session);
-                NodeImpl node = (NodeImpl) itemMgr.getItem(itemState.getId());
-                if (node.isNodeType(QName.MIX_VERSIONABLE)) {
-                    if (!node.hasProperty(QName.JCR_VERSIONHISTORY)) {
+                NodeState nodeState = (NodeState) itemState;
+                EffectiveNodeType nt = validator.getEffectiveNodeType(nodeState);
+                if (nt.includesNodeType(QName.MIX_VERSIONABLE)) {
+                    if (!nodeState.hasPropertyName(QName.JCR_VERSIONHISTORY)) {
+                        NodeImpl node = (NodeImpl) itemMgr.getItem(itemState.getId());
-                        NodeState nodeState = (NodeState) itemState;
