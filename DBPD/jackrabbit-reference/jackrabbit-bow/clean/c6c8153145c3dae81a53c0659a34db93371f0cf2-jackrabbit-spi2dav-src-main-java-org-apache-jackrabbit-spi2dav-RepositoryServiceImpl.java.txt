JCR-3554: RepositoryService.getReferences needs to deal with absolute paths in hrefs

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1462153 13f79535-47bb-0310-9956-ffa450edef68

+import java.net.URISyntaxException;
+    /**
+     * Resolve the given URI against a base URI (usually the request URI of an HTTP request)
+     */
+    private static String resolve(String baseUri, String relUri) throws RepositoryException {
+        try {
+            java.net.URI base = new java.net.URI(baseUri);
+            java.net.URI rel = new java.net.URI(relUri);
+            return base.resolve(rel).toString();
+        }
+        catch (URISyntaxException ex) {
+            throw new RepositoryException(ex);
+        }
+    }
+
-        String href = response.getHref();
-        if (href.endsWith("/") && !requestURI.endsWith("/")) {
-            href = href.substring(0, href.length() - 1);
+        try {
+            String href = resolve(requestURI, response.getHref());
+            if (href.endsWith("/") && !requestURI.endsWith("/")) {
+                href = href.substring(0, href.length() - 1);
+            }
+            return requestURI.equals(href);
+        } catch (RepositoryException e) {
+            return false;
-        return requestURI.equals(href);
-    private NodeId getParentId(DavPropertySet propSet, SessionInfo sessionInfo)
+    private NodeId getParentId(String baseUri, DavPropertySet propSet, SessionInfo sessionInfo)
-                parentId = uriResolver.getNodeId(parentHref, sessionInfo);
+                parentId = uriResolver.getNodeId(resolve(baseUri, parentHref), sessionInfo);
-            NodeId parentId = getParentId(propSet, sessionInfo);
+            NodeId parentId = getParentId(uri, propSet, sessionInfo);
-            NodeInfoImpl nInfo = buildNodeInfo(nodeResponse, parentId, propSet, sessionInfo, resolver);
+            NodeInfoImpl nInfo = buildNodeInfo(uri, nodeResponse, parentId, propSet, sessionInfo, resolver);
-    private NodeInfoImpl buildNodeInfo(MultiStatusResponse nodeResponse,
+    private NodeInfoImpl buildNodeInfo(String baseUri, MultiStatusResponse nodeResponse,
-        NodeId id = uriResolver.buildNodeId(parentId, nodeResponse, sessionInfo.getWorkspaceName(), getNamePathResolver(sessionInfo));
+        NodeId id = uriResolver.buildNodeId(parentId, baseUri, nodeResponse, sessionInfo.getWorkspaceName(), getNamePathResolver(sessionInfo));
-        if (weakReferences) {
-            nameSet.add(JcrRemotingConstants.JCR_WEAK_REFERENCES_LN, ItemResourceConstants.NAMESPACE);
-        } else {
-            nameSet.add(JcrRemotingConstants.JCR_REFERENCES_LN, ItemResourceConstants.NAMESPACE);
-        }
-
+        String refType = weakReferences ? JcrRemotingConstants.JCR_WEAK_REFERENCES_LN : JcrRemotingConstants.JCR_REFERENCES_LN;
+        nameSet.add(refType, ItemResourceConstants.NAMESPACE);
+ 
-                    DavProperty<?> p;
-                    if (weakReferences) {
-                        p = props.get(JcrRemotingConstants.JCR_WEAK_REFERENCES_LN, ItemResourceConstants.NAMESPACE);
-                    } else {
-                        p = props.get(JcrRemotingConstants.JCR_REFERENCES_LN, ItemResourceConstants.NAMESPACE);
-                    }
+                    DavProperty<?> p = props.get(refType, ItemResourceConstants.NAMESPACE);
-                            PropertyId propId = uriResolver.getPropertyId(propHref, sessionInfo);
+                            PropertyId propId = uriResolver.getPropertyId(resolve(uri, propHref), sessionInfo);
-                NodeId parentId = getParentId(ps, sessionInfo);
+                NodeId parentId = getParentId(uri, ps, sessionInfo);
