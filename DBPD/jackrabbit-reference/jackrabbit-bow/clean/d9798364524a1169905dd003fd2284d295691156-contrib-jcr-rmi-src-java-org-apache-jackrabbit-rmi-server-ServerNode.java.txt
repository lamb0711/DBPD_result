Cleaned up code by removing too fine-grained exception declarations.
The rationale for this is that internally the JCR-RMI layer only cares about
the RepositoryException/RemoteException difference.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@155801 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.AccessDeniedException;
-import javax.jcr.InvalidItemStateException;
-import javax.jcr.ItemExistsException;
-import javax.jcr.ItemNotFoundException;
-import javax.jcr.MergeException;
-import javax.jcr.NoSuchWorkspaceException;
-import javax.jcr.PathNotFoundException;
-import javax.jcr.UnsupportedRepositoryOperationException;
-import javax.jcr.ValueFormatException;
-import javax.jcr.lock.LockException;
-import javax.jcr.nodetype.ConstraintViolationException;
-import javax.jcr.nodetype.NoSuchNodeTypeException;
-import javax.jcr.version.VersionException;
-    public RemoteNode addNode(String path) throws ItemExistsException,
-            PathNotFoundException, ConstraintViolationException,
-            RepositoryException, RemoteException {
+    public RemoteNode addNode(String path)
+            throws RepositoryException, RemoteException {
-    public RemoteNode addNode(String path, String type) throws
-            ItemExistsException, PathNotFoundException,
-            NoSuchNodeTypeException, ConstraintViolationException,
-            RepositoryException, RemoteException {
+    public RemoteNode addNode(String path, String type)
+            throws RepositoryException, RemoteException {
-    public RemoteProperty getProperty(String path) throws PathNotFoundException,
-            RepositoryException, RemoteException {
+    public RemoteProperty getProperty(String path)
+            throws RepositoryException, RemoteException {
-    public RemoteProperty[] getProperties() throws RepositoryException,
-            RemoteException {
+    public RemoteProperty[] getProperties()
+            throws RepositoryException, RemoteException {
-    public RemoteItem getPrimaryItem() throws ItemNotFoundException,
-            RepositoryException, RemoteException {
+    public RemoteItem getPrimaryItem()
+            throws RepositoryException, RemoteException {
-    public RemoteProperty[] getReferences() throws RepositoryException,
-            RemoteException {
+    public RemoteProperty[] getReferences()
+            throws RepositoryException, RemoteException {
-    public String getUUID() throws UnsupportedRepositoryOperationException,
-            RepositoryException, RemoteException {
+    public String getUUID() throws RepositoryException, RemoteException {
-    public boolean hasProperty(String path) throws RepositoryException,
-            RemoteException {
+    public boolean hasProperty(String path)
+            throws RepositoryException, RemoteException {
-    public RemoteNodeType[] getMixinNodeTypes() throws RepositoryException,
-            RemoteException {
+    public RemoteNodeType[] getMixinNodeTypes()
+            throws RepositoryException, RemoteException {
-    public RemoteNodeType getPrimaryNodeType() throws RepositoryException,
-            RemoteException {
+    public RemoteNodeType getPrimaryNodeType()
+            throws RepositoryException, RemoteException {
-    public boolean isNodeType(String type) throws RepositoryException,
-            RemoteException {
+    public boolean isNodeType(String type)
+            throws RepositoryException, RemoteException {
-    public RemoteNode[] getNodes(String pattern) throws RepositoryException,
-            RemoteException {
+    public RemoteNode[] getNodes(String pattern)
+            throws RepositoryException, RemoteException {
-    public RemoteNode getNode(String path) throws PathNotFoundException,
-            RepositoryException, RemoteException {
+    public RemoteNode getNode(String path)
+            throws RepositoryException, RemoteException {
-    public boolean hasNode(String path) throws RepositoryException,
-            RemoteException {
+    public boolean hasNode(String path)
+            throws RepositoryException, RemoteException {
-            throws ValueFormatException, RepositoryException, RemoteException {
+            throws RepositoryException, RemoteException {
-    public void addMixin(String name) throws NoSuchNodeTypeException,
-            ConstraintViolationException, RepositoryException, RemoteException {
+    public void addMixin(String name)
+            throws RepositoryException, RemoteException {
-    public boolean canAddMixin(String name) throws RepositoryException,
-            RemoteException {
+    public boolean canAddMixin(String name)
+            throws RepositoryException, RemoteException {
-    public void removeMixin(String name) throws NoSuchNodeTypeException,
-            ConstraintViolationException, RepositoryException, RemoteException {
+    public void removeMixin(String name)
+            throws RepositoryException, RemoteException {
-            throws UnsupportedRepositoryOperationException,
-            ConstraintViolationException, ItemNotFoundException,
-            RepositoryException, RemoteException {
+            throws RepositoryException, RemoteException {
-            throws ValueFormatException, RepositoryException, RemoteException {
+            throws RepositoryException, RemoteException {
-    public RemoteNodeDef getDefinition() throws RepositoryException,
-            RemoteException {
+    public RemoteNodeDef getDefinition()
+            throws RepositoryException, RemoteException {
-    public void checkout() throws UnsupportedRepositoryOperationException,
-            RepositoryException, RemoteException {
+    public void checkout() throws RepositoryException, RemoteException {
-            throws ItemNotFoundException, NoSuchWorkspaceException,
-            AccessDeniedException, RepositoryException, RemoteException {
+            throws RepositoryException, RemoteException {
-            throws UnsupportedRepositoryOperationException,
-            NoSuchWorkspaceException, AccessDeniedException, MergeException,
-            RepositoryException, RemoteException {
+            throws RepositoryException, RemoteException {
-            throws VersionException, ItemExistsException,
-            UnsupportedRepositoryOperationException, LockException,
-            InvalidItemStateException, RepositoryException, RemoteException {
+            throws RepositoryException, RemoteException {
-            throws VersionException, ItemExistsException,
-            UnsupportedRepositoryOperationException, LockException,
-            InvalidItemStateException, RepositoryException, RemoteException {
+            throws RepositoryException, RemoteException {
-    public void update(String workspace) throws NoSuchWorkspaceException,
-            AccessDeniedException, RepositoryException, RemoteException {
+    public void update(String workspace)
+            throws RepositoryException, RemoteException {
-    public boolean isCheckedOut() throws
-            UnsupportedRepositoryOperationException, RepositoryException,
-            RemoteException {
+    public boolean isCheckedOut() throws RepositoryException, RemoteException {
-            throws ValueFormatException, VersionException, LockException,
-            RepositoryException, RemoteException {
+            throws RepositoryException, RemoteException {
-    public void unlock() throws UnsupportedRepositoryOperationException,
-            LockException, AccessDeniedException, RepositoryException,
-            RemoteException {
+    public void unlock() throws RepositoryException, RemoteException {
-    public RemoteLock getLock() throws UnsupportedRepositoryOperationException,
-            LockException, AccessDeniedException, RepositoryException,
-            RemoteException {
+    public RemoteLock getLock() throws RepositoryException, RemoteException {
-            throws UnsupportedRepositoryOperationException, LockException,
-            AccessDeniedException, RepositoryException, RemoteException {
+            throws RepositoryException, RemoteException {
+
