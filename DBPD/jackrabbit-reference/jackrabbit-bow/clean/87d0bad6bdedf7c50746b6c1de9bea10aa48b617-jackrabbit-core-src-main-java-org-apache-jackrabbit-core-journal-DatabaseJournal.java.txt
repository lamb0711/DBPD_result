JCR-1836: Persistence: support property databaseType

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@722463 13f79535-47bb-0310-9956-ffa450edef68

- * <li><code>schema</code>: the schema to be used; if not specified, this is the
- * second field inside the JDBC connection url, delimeted by colons</li>
+ * <li><code>databaseType</code>: the database type to be used; if not specified, this is the
+ * second field inside the JDBC connection url, delimited by colons</li>
-     * Schema name, bean property.
+     * Database type, bean property.
-    private String schema;
+    private String databaseType;
-     * schema. Should be overridden by subclasses that use a different way to
+     * database type. Should be overridden by subclasses that use a different way to
-        if (schema == null) {
+        if (databaseType == null) {
-                schema = getSchemaFromURL(url);
+                databaseType = getDatabaseTypeFromURL(url);
-                String msg = "Unable to derive schema from URL: " + e.getMessage();
+                String msg = "Unable to derive database type from URL: " + e.getMessage();
-     * Derive a schema from a JDBC connection URL. This simply treats the given URL
+     * Derive a database type from a JDBC connection URL. This simply treats the given URL
-     * @return schema
+     * @return the database type
-    private static String getSchemaFromURL(String url) throws IllegalArgumentException {
+    private static String getDatabaseTypeFromURL(String url) throws IllegalArgumentException {
-            InputStream in = DatabaseJournal.class.getResourceAsStream(schema + ".ddl");
+            InputStream in = DatabaseJournal.class.getResourceAsStream(databaseType + ".ddl");
-                String msg = "No schema-specific DDL found: '" + schema + ".ddl"
+                String msg = "No database-specific DDL found: '" + databaseType + ".ddl"
-            InputStream in = DatabaseJournal.class.getResourceAsStream(schema + ".ddl");
+            InputStream in = DatabaseJournal.class.getResourceAsStream(databaseType + ".ddl");
-                String msg = "No schema-specific DDL found: '" + schema + ".ddl" +
+                String msg = "No database-specific DDL found: '" + databaseType + ".ddl" +
+    /**
+     * Get the database type.
+     * 
+     * @return the database type
+     */
+    public String getDatabaseType() {
+        return databaseType;
+    }
+
+    /**
+     * Get the database type.
+     * @deprecated
+     * This method is deprecated; {@link getDatabaseType} should be used instead.
+     * 
+     * @return the database type
+     */
-        return schema;
+        return databaseType;
-    public void setSchema(String schema) {
-        this.schema = schema;
+    /**
+     * Set the database type.
+     * 
+     * @param databaseType the database type
+     */
+    public void setDatabaseType(String databaseType) {
+        this.databaseType = databaseType;
+    }
+
+    /**
+     * Set the database type.
+    * @deprecated
+    * This method is deprecated; {@link getDatabaseType} should be used instead.
+     * 
+     * @param databaseType the database type
+     */
+    public void setSchema(String databaseType) {
+        this.databaseType = databaseType;
