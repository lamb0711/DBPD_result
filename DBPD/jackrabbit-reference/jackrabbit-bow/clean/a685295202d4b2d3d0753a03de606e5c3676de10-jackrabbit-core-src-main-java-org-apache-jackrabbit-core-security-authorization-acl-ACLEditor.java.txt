security: work in progress

- change ACEditor to take jcr path
- extract common, abstract policy entry impl
- add more tests
- add JackrabbitAccessControlManager for policy editing
- various minor changes, fixes, improvements

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@644215 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.NodeId;
-import javax.jcr.ItemNotFoundException;
+import javax.jcr.PathNotFoundException;
+import javax.jcr.AccessDeniedException;
-    private final SessionImpl session;
+    protected final SessionImpl session;
-     * @see AccessControlEditor#getPolicyTemplate(NodeId)
+     * @see AccessControlEditor#getPolicyTemplate(String)
+     * @param nodePath
-    public PolicyTemplate getPolicyTemplate(NodeId id) throws AccessControlException, ItemNotFoundException, RepositoryException {
-        checkProtectsNode(id);
+    public PolicyTemplate getPolicyTemplate(String nodePath) throws AccessControlException, PathNotFoundException, RepositoryException {
+        checkProtectsNode(nodePath);
-        NodeImpl aclNode = getAclNode(id);
+        NodeImpl aclNode = getAclNode(nodePath);
-     * @see AccessControlEditor#editPolicyTemplate(NodeId)
+     * @see AccessControlEditor#editPolicyTemplate(String)
+     * @param nodePath
-    public PolicyTemplate editPolicyTemplate(NodeId id) throws AccessControlException, ItemNotFoundException, RepositoryException {
-        checkProtectsNode(id);
+    public PolicyTemplate editPolicyTemplate(String nodePath) throws AccessControlException, PathNotFoundException, RepositoryException {
+        checkProtectsNode(nodePath);
-        NodeImpl aclNode = getAclNode(id);
+        NodeImpl aclNode = getAclNode(nodePath);
-            tmpl = new ACLTemplate();
+            tmpl = new ACLTemplate(nodePath);
-     * @see AccessControlEditor#setPolicyTemplate(NodeId, PolicyTemplate)
+     * @see AccessControlEditor#editPolicyTemplate(Principal)
-    public void setPolicyTemplate(NodeId id, PolicyTemplate template) throws RepositoryException {
-        checkProtectsNode(id);
+    public PolicyTemplate editPolicyTemplate(Principal principal) throws AccessDeniedException, AccessControlException, RepositoryException {
+        throw new AccessControlException("Unable to edit policy for principal " + principal.getName());
+    }
-        NodeImpl aclNode = getAclNode(id);
+    /**
+     * @see AccessControlEditor#setPolicyTemplate(String,PolicyTemplate)
+     */
+    public void setPolicyTemplate(String nodePath, PolicyTemplate template) throws RepositoryException {
+        checkProtectsNode(nodePath);
+
+        NodeImpl aclNode = getAclNode(nodePath);
-        aclNode = createAclNode(id);
+        aclNode = createAclNode(nodePath);
-     * @see AccessControlEditor#removePolicyTemplate(NodeId)
+     * @see AccessControlEditor#removePolicyTemplate(String)
-    public PolicyTemplate removePolicyTemplate(NodeId id) throws AccessControlException, RepositoryException {
-        checkProtectsNode(id);
+    public PolicyTemplate removePolicyTemplate(String nodePath) throws AccessControlException, RepositoryException {
+        checkProtectsNode(nodePath);
-        NodeImpl aclNode = getAclNode(id);
+        NodeImpl aclNode = getAclNode(nodePath);
-     * @see AccessControlEditor#getAccessControlEntries(NodeId)
+     * @see AccessControlEditor#getAccessControlEntries(String)
-    public AccessControlEntry[] getAccessControlEntries(NodeId id) throws AccessControlException, ItemNotFoundException, RepositoryException {
-        PolicyTemplate pt = getPolicyTemplate(id);
+    public AccessControlEntry[] getAccessControlEntries(String nodePath) throws AccessControlException, PathNotFoundException, RepositoryException {
+        PolicyTemplate pt = getPolicyTemplate(nodePath);
-     * @see AccessControlEditor#addAccessControlEntry(NodeId,Principal,Privilege[])
+     * @see AccessControlEditor#addAccessControlEntry(String,Principal,Privilege[])
-    public AccessControlEntry addAccessControlEntry(NodeId id, Principal principal, Privilege[] privileges) throws AccessControlException, ItemNotFoundException, RepositoryException {
+    public AccessControlEntry addAccessControlEntry(String nodePath, Principal principal, Privilege[] privileges) throws AccessControlException, PathNotFoundException, RepositoryException {
-        ACLTemplate pt = (ACLTemplate) editPolicyTemplate(id);
+        ACLTemplate pt = (ACLTemplate) editPolicyTemplate(nodePath);
-        setPolicyTemplate(id, pt);
+        setPolicyTemplate(nodePath, pt);
-     * @see AccessControlEditor#removeAccessControlEntry(NodeId,AccessControlEntry)
+     * @see AccessControlEditor#removeAccessControlEntry(String,AccessControlEntry)
-    public boolean removeAccessControlEntry(NodeId id, AccessControlEntry entry) throws AccessControlException, ItemNotFoundException, RepositoryException {
+    public boolean removeAccessControlEntry(String nodePath, AccessControlEntry entry) throws AccessControlException, PathNotFoundException, RepositoryException {
-        PolicyTemplate pt = editPolicyTemplate(id);
+        PolicyTemplate pt = editPolicyTemplate(nodePath);
-            setPolicyTemplate(id, pt);
+            setPolicyTemplate(nodePath, pt);
-     * @param id
+     * @param nodePath
-    private void checkProtectsNode(NodeId id) throws RepositoryException {
-        NodeImpl node = session.getNodeById(id);
+    private void checkProtectsNode(String nodePath) throws RepositoryException {
+        NodeImpl node = getNode(nodePath);
-            throw new AccessControlException("Node " + id + " defines ACL or ACE itself.");
+            throw new AccessControlException("Node " + nodePath + " defines ACL or ACE itself.");
+     *
+     * @param path
+     * @return
+     * @throws PathNotFoundException
+     * @throws RepositoryException
+     */
+    private NodeImpl getNode(String path) throws PathNotFoundException, RepositoryException {
+        return (NodeImpl) session.getNode(path);
+    }
+
+    /**
-     * @param id
+     * @param nodePath
-     * @throws ItemNotFoundException
+     * @throws PathNotFoundException
-    private NodeImpl getAclNode(NodeId id) throws ItemNotFoundException, RepositoryException {
+    private NodeImpl getAclNode(String nodePath) throws PathNotFoundException, RepositoryException {
-        NodeImpl protectedNode = session.getNodeById(id);
+        NodeImpl protectedNode = getNode(nodePath);
-     * @param id
+     * @param nodePath
-    private NodeImpl createAclNode(NodeId id) throws RepositoryException {
-        NodeImpl protectedNode = session.getNodeById(id);
+    private NodeImpl createAclNode(String nodePath) throws RepositoryException {
+        NodeImpl protectedNode = getNode(nodePath);
