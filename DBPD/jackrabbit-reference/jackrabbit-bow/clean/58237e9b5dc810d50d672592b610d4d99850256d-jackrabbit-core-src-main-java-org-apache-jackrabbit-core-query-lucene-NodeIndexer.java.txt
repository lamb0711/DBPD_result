JCR-2917: Indexing configuration ignored when indexing length

Patch by Alex Parvulescu

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1089053 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Date;
-
-
+        addValueProperty(doc, value, name, fieldName);
+    }
+
+    /**
+     * Adds a property related value to the lucene Document. <br>
+     *
+     * Like <code>length</code> for indexed fields.
+     *
+     * @param doc
+     *            the document.
+     * @param value
+     *            the internal jackrabbit value.
+     * @param name
+     *            the name of the property.
+     */
+    protected void addValueProperty(Document doc, InternalValue value,
+            Name name, String fieldName) throws RepositoryException {
+
+        // skip this method if field is not indexed
+        if (!isIndexed(name)) {
+            return;
+        }
-    protected void addCalendarValue(Document doc, String fieldName, Object internalValue) {
-        Calendar value = (Calendar) internalValue;
-        long millis = value.getTimeInMillis();
+    protected void addCalendarValue(Document doc, String fieldName, Calendar internalValue) {
-            doc.add(createFieldWithoutNorms(fieldName, DateField.timeToString(millis),
+            doc.add(createFieldWithoutNorms(fieldName,
+                    DateField.timeToString(internalValue.getTimeInMillis()),
-                    new Date(value.getTimeInMillis()));
+                    internalValue);
-    protected void addDoubleValue(Document doc, String fieldName, Object internalValue) {
-        double doubleVal = (Double) internalValue;
-        doc.add(createFieldWithoutNorms(fieldName, DoubleField.doubleToString(doubleVal),
+    protected void addDoubleValue(Document doc, String fieldName, double internalValue) {
+        doc.add(createFieldWithoutNorms(fieldName, DoubleField.doubleToString(internalValue),
-    protected void addLongValue(Document doc, String fieldName, Object internalValue) {
-        long longVal = (Long) internalValue;
-        doc.add(createFieldWithoutNorms(fieldName, LongField.longToString(longVal),
+    protected void addLongValue(Document doc, String fieldName, long internalValue) {
+        doc.add(createFieldWithoutNorms(fieldName, LongField.longToString(internalValue),
-    protected void addDecimalValue(Document doc, String fieldName, Object internalValue) {
-        BigDecimal decVal = (BigDecimal) internalValue;
-        doc.add(createFieldWithoutNorms(fieldName, DecimalField.decimalToString(decVal),
+    protected void addDecimalValue(Document doc, String fieldName, BigDecimal internalValue) {
+        doc.add(createFieldWithoutNorms(fieldName, DecimalField.decimalToString(internalValue),
-    protected void addReferenceValue(Document doc, String fieldName, Object internalValue, boolean weak) {
+    protected void addReferenceValue(Document doc, String fieldName, NodeId internalValue, boolean weak) {
-    protected void addPathValue(Document doc, String fieldName, Object internalValue) {
-        Path path = (Path) internalValue;
-        String pathString = path.toString();
+    protected void addPathValue(Document doc, String fieldName, Path internalValue) {
+        String pathString = internalValue.toString();
-            pathString = resolver.getJCRPath(path);
+            pathString = resolver.getJCRPath(internalValue);
-    protected void addURIValue(Document doc, String fieldName, Object internalValue) {
-        URI uri = (URI) internalValue;
-        doc.add(createFieldWithoutNorms(fieldName, uri.toString(),
+    protected void addURIValue(Document doc, String fieldName, URI internalValue) {
+        doc.add(createFieldWithoutNorms(fieldName, internalValue.toString(),
-    protected void addStringValue(Document doc, String fieldName, Object internalValue) {
+    protected void addStringValue(Document doc, String fieldName, String internalValue) {
-                                  Object internalValue, boolean tokenized) {
+                                  String internalValue, boolean tokenized) {
-                                  Object internalValue, boolean tokenized,
+                                  String internalValue, boolean tokenized,
-                                  Object internalValue, boolean tokenized,
+                                  String internalValue, boolean tokenized,
-        String stringValue = (String) internalValue;
-        doc.add(createFieldWithoutNorms(fieldName, stringValue,
+        doc.add(createFieldWithoutNorms(fieldName, internalValue,
-            if (stringValue.length() == 0) {
+            if (internalValue.length() == 0) {
-            Field f = new Field(fieldName, true, stringValue, Field.Store.NO,
+            Field f = new Field(fieldName, true, internalValue, Field.Store.NO,
-                f = createFulltextField(stringValue, store, supportHighlighting);
+                f = createFulltextField(internalValue, store, supportHighlighting);
-    protected void addNameValue(Document doc, String fieldName, Object internalValue) {
+    protected void addNameValue(Document doc, String fieldName, Name internalValue) {
-            Name qualiName = (Name) internalValue;
-            String normValue = mappings.getPrefix(qualiName.getNamespaceURI())
-                    + ":" + qualiName.getLocalName();
+            String normValue = mappings.getPrefix(internalValue.getNamespaceURI())
+                    + ":" + internalValue.getLocalName();
