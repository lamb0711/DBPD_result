JCR-890: concurrent read-only access to a session

Add SessionItemOperation for the itemExists(), getItem(), and remove() methods in Session.

Allow return values from SessionOperations (using generics to avoid type casts).

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@981771 13f79535-47bb-0310-9956-ffa450edef68

-     *
-     * @param name
-     * @param value
-     * @return
-     * @throws ValueFormatException
-     * @throws VersionException
-     * @throws LockException
-     * @throws ConstraintViolationException
-     * @throws RepositoryException
-            throws ValueFormatException, VersionException, LockException,
-            ConstraintViolationException, RepositoryException {
-        SetPropertyOperation operation =
-            new SetPropertyOperation(name, value, false);
-        sessionContext.getSessionState().perform(operation);
-        return operation.getProperty();
+            throws RepositoryException {
+        return sessionContext.getSessionState().perform(
+                new SetPropertyOperation(name, value, false));
-        SetPropertyOperation operation =
-            new SetPropertyOperation(session.getQName(name), value, true);
-        sessionContext.getSessionState().perform(operation);
-        return operation.getProperty();
+        return sessionContext.getSessionState().perform(
+                new SetPropertyOperation(session.getQName(name), value, true));
-        SetPropertyOperation operation =
-            new SetPropertyOperation(session.getQName(name), value, false);
-        sessionContext.getSessionState().perform(operation);
-        return operation.getProperty();
+        return sessionContext.getSessionState().perform(
+                new SetPropertyOperation(session.getQName(name), value, false));
-    private class SetPropertyOperation implements SessionOperation {
+    private class SetPropertyOperation implements SessionOperation<PropertyImpl> {
-        private volatile PropertyImpl property = null;
-
-         * @return the <code>Property</code> object set, or <code>null</code> if
-         *         this method was used to remove a property (by setting its value
-         *         to <code>null</code>).
-         */
-        public PropertyImpl getProperty() {
-            return property;
-        }
-
-        /**
+         * @return the <code>Property</code> object set,
+         *         or <code>null</code> if this operation was used to remove
+         *         a property (by setting its value to <code>null</code>)
-        public void perform(SessionContext context) throws RepositoryException {
+        public PropertyImpl perform(SessionContext context)
+                throws RepositoryException {
-            property =
+            PropertyImpl property =
+            return property;
