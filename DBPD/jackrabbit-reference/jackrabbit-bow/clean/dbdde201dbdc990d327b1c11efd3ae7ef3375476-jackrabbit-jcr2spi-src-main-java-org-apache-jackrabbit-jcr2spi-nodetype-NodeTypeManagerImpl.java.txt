JCR-2087: parametrize generic types

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@816601 13f79535-47bb-0310-9956-ffa450edef68

-    private final Map ntCache;
+    private final Map<Name, NodeTypeImpl> ntCache;
-    private final Map pdCache;
+    private final Map<QPropertyDefinition, PropertyDefinition> pdCache;
-    private final Map ndCache;
+    private final Map<QNodeDefinition, NodeDefinition> ndCache;
-            NodeTypeImpl nt = (NodeTypeImpl) ntCache.get(name);
+            NodeTypeImpl nt = ntCache.get(name);
-            NodeDefinition ndi = (NodeDefinition) ndCache.get(def);
+            NodeDefinition ndi = ndCache.get(def);
-            PropertyDefinition pdi = (PropertyDefinition) pdCache.get(def);
+            PropertyDefinition pdi = pdCache.get(def);
-                Iterator iter = pdCache.values().iterator();
+                Iterator<PropertyDefinition> iter = pdCache.values().iterator();
-                    PropertyDefinition pd = (PropertyDefinition) iter.next();
+                    PropertyDefinition pd = iter.next();
-                Iterator iter = ndCache.values().iterator();
+                Iterator<NodeDefinition> iter = ndCache.values().iterator();
-                    NodeDefinition nd = (NodeDefinition) iter.next();
+                    NodeDefinition nd = iter.next();
-                Iterator iter = pdCache.values().iterator();
+                Iterator<PropertyDefinition> iter = pdCache.values().iterator();
-                    PropertyDefinition pd = (PropertyDefinition) iter.next();
+                    PropertyDefinition pd = iter.next();
-                Iterator iter = ndCache.values().iterator();
+                Iterator<NodeDefinition> iter = ndCache.values().iterator();
-                    NodeDefinition nd = (NodeDefinition) iter.next();
+                    NodeDefinition nd = iter.next();
-        ArrayList list = new ArrayList(ntNames.length);
+        ArrayList<NodeType> list = new ArrayList<NodeType>(ntNames.length);
-        ArrayList list = new ArrayList(ntNames.length);
+        ArrayList<NodeType> list = new ArrayList<NodeType>(ntNames.length);
-        ArrayList list = new ArrayList(ntNames.length);
+        ArrayList<NodeType> list = new ArrayList<NodeType>(ntNames.length);
-        HashSet ntNames = new HashSet();
+        HashSet<Name> ntNames = new HashSet<Name>();
