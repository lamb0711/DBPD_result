JCR-1593 JSR 283: Simple versioning
JCR-2058 JSR 283: VersionManager and new versioning methods


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@765556 13f79535-47bb-0310-9956-ffa450edef68

-            boolean versionable = ent.includesNodeType(NameConstants.MIX_VERSIONABLE);
+            boolean versionable = ent.includesNodeType(NameConstants.MIX_SIMPLE_VERSIONABLE);
+            boolean fullVersionable = ent.includesNodeType(NameConstants.MIX_VERSIONABLE);
-                    if (propName.equals(NameConstants.JCR_VERSIONHISTORY)) {
-                        // jcr:versionHistory
-                        VersionHistoryInfo history =
+                    if (fullVersionable) {
+                        if (propName.equals(NameConstants.JCR_VERSIONHISTORY)) {
+                            // jcr:versionHistory
+                            VersionHistoryInfo history =
+                                manager.getVersionHistory(session, newState);
+                            InternalValue value = InternalValue.create(
+                                    history.getVersionHistoryId().getUUID());
+                            newChildState.setValues(new InternalValue[] { value });
+                        } else if (propName.equals(NameConstants.JCR_BASEVERSION)
+                                || propName.equals(NameConstants.JCR_PREDECESSORS)) {
+                            // jcr:baseVersion or jcr:predecessors
+                            VersionHistoryInfo history =
+                                manager.getVersionHistory(session, newState);
+                            InternalValue value = InternalValue.create(
+                                    history.getRootVersionId().getUUID());
+                            newChildState.setValues(new InternalValue[] { value });
+                        } else if (propName.equals(NameConstants.JCR_ISCHECKEDOUT)) {
+                            // jcr:isCheckedOut
+                            newChildState.setValues(new InternalValue[]{InternalValue.create(true)});
+                        }
+                    } else {
+                        // for simple versionable, we just initialize the
+                        // version history when we see the jcr:isCheckedOut
+                        if (propName.equals(NameConstants.JCR_ISCHECKEDOUT)) {
+                            // jcr:isCheckedOut
+                            newChildState.setValues(new InternalValue[]{InternalValue.create(true)});
-                        InternalValue value = InternalValue.create(
-                                history.getVersionHistoryId().getUUID());
-                        newChildState.setValues(new InternalValue[] { value });
-                    } else if (propName.equals(NameConstants.JCR_BASEVERSION)
-                            || propName.equals(NameConstants.JCR_PREDECESSORS)) {
-                        // jcr:baseVersion or jcr:predecessors
-                        VersionHistoryInfo history =
-                            manager.getVersionHistory(session, newState);
-                        InternalValue value = InternalValue.create(
-                                history.getRootVersionId().getUUID());
-                        newChildState.setValues(new InternalValue[] { value });
-                    } else if (propName.equals(NameConstants.JCR_ISCHECKEDOUT)) {
-                        // jcr:isCheckedOut
-                        newChildState.setValues(new InternalValue[]{InternalValue.create(true)});
+                        }
