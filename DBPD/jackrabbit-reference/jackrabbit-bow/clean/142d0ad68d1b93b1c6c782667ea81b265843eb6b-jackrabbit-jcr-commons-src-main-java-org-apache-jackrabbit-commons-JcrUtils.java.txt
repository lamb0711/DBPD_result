JCR-2439: More utility methods in JcrUtils

Add simple getOrAddNode() methods

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@890818 13f79535-47bb-0310-9956-ffa450edef68

+     * Returns the named child of the given node, creating the child if
+     * it does not already exist. If the child node gets added, then its
+     * type will be determined by the child node definitions associated
+     * with the parent node. The caller is expected to take care of saving
+     * or discarding any transient changes.
+     *
+     * @see Node#getNode(String)
+     * @see Node#addNode(String)
+     * @param parent parent node
+     * @param name name of the child node
+     * @return child node
+     * @throws RepositoryException if the child node can not be
+     *                             accessed or created
+     */
+    public static Node getOrAddNode(Node parent, String name)
+            throws RepositoryException {
+        if (parent.hasNode(name)) {
+            return parent.getNode(name);
+        } else {
+            return parent.addNode(name);
+        }
+    }
+
+    /**
+     * Returns the named child of the given node, creating the child if
+     * it does not already exist. If the child node gets added, then it
+     * is created with the given node type. The caller is expected to take
+     * care of saving or discarding any transient changes.
+     *
+     * @see Node#getNode(String)
+     * @see Node#addNode(String)
+     * @param parent parent node
+     * @param name name of the child node
+     * @param type the node type to use for the child node in case
+     *             it needs to be created, ignored otherwise
+     * @return child node
+     * @throws RepositoryException if the child node can not be
+     *                             accessed or created
+     */
+    public static Node getOrAddNode(Node parent, String name, String type)
+            throws RepositoryException {
+        if (parent.hasNode(name)) {
+            return parent.getNode(name);
+        } else {
+            return parent.addNode(name, type);
+        }
+    }
+
+    /**
