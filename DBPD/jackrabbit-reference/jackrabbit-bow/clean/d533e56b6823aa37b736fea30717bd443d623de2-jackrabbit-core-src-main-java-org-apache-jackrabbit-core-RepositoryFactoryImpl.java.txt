JCR-2569: Implement jcr-jackrabbit://... repository URIs

Pass repository parameters from RepositoryFactoryImpl to RepositoryConfigurationParser

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@923653 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.IOException;
+import java.util.Properties;
+import org.apache.jackrabbit.core.config.RepositoryConfigurationParser;
-                return getOrCreateRepository(null, null);
+                return getOrCreateRepository(null, null, parameters);
-                return getOrCreateRepository(conf, home);
+                return getOrCreateRepository(conf, home, parameters);
-                        return getOrCreateRepository(conf, home);
+                        return getOrCreateRepository(conf, home, parameters);
-    private JackrabbitRepository getOrCreateRepository(String conf,
-                                                       String home)
+    private JackrabbitRepository getOrCreateRepository(
+            String conf, String home, Map<?, ?> parameters)
-            TransientRepository tr;
-            if (home == null) {
-                tr = new TransientRepository();
-                // also remember this instance as the default repository
-                REPOSITORY_INSTANCES.put(null, tr);
-            } else {
-                tr = new TransientRepository(conf, home);
+            // Prepare the repository properties
+            Properties properties = new Properties(System.getProperties());
+            for (Map.Entry<?, ?> entry : parameters.entrySet()) {
+                Object key = entry.getKey();
+                if (key != null) {
+                    Object value = entry.getValue();
+                    if (value != null) {
+                        properties.setProperty(
+                                key.toString(), value.toString());
+                    } else {
+                        properties.remove(key.toString());
+                    }
+                }
-            REPOSITORY_INSTANCES.put(tr.getHomeDir(), tr);
-            ownRepositories.add(tr);
-            repo = tr;
+
+            properties.put(
+                    RepositoryConfigurationParser.REPOSITORY_CONF_VARIABLE,
+                    conf);
+            properties.put(
+                    RepositoryConfigurationParser.REPOSITORY_HOME_VARIABLE,
+                    home);
+
+            try {
+                TransientRepository tr;
+                if (home == null) {
+                    tr = new TransientRepository(properties);
+                    // also remember this instance as the default repository
+                    REPOSITORY_INSTANCES.put(null, tr);
+                } else {
+                    tr = new TransientRepository(properties);
+                }
+                REPOSITORY_INSTANCES.put(tr.getHomeDir(), tr);
+                ownRepositories.add(tr);
+                repo = tr;
+            } catch (IOException e) {
+                throw new RepositoryException(
+                        "Failed to install repository configuration", e);
+            }
