Extended helper and stub classes to support multiple instantiation. stub now also supports configuration on the api level.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@125509 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Map;
+import java.util.HashMap;
+     * Repository stub reference.
+     */
+    private RepositoryStub repoStub;
+
+    /**
+     * Overlay configuration.
+     */
+    private Map configuration = new HashMap();
+
+    /**
+     * Creates a repository helper with configuration from
+     * <code>repositoryStubImpl.properties</code> file.
+     */
+    public RepositoryHelper() {
+    }
+
+    /**
+     * Creates a repository helper with additional configuration parameters.
+     *
+     * @param config configuration which overlays the values from the property
+     *   file.
+     */
+    public RepositoryHelper(Map config) {
+        configuration.putAll(config);
+    }
+
+    /**
-            RepositoryStub repStub = RepositoryStub.getInstance();
-            return repStub.getRepository();
+            if (repoStub == null) {
+                repoStub = RepositoryStub.getInstance(configuration);
+            }
+            return repoStub.getRepository();
-        try {
-            RepositoryStub repStub = RepositoryStub.getInstance();
-            return repStub.getRepository().login(repStub.getSuperuserCredentials(), workspaceName);
-        } catch (RepositoryStubException e) {
-            throw new RepositoryException("Failed to login to Repository.", e);
-        }
+        return getRepository().login(repoStub.getSuperuserCredentials(), workspaceName);
-        try {
-            RepositoryStub repStub = RepositoryStub.getInstance();
-            return repStub.getRepository().login(repStub.getReadWriteCredentials(), workspaceName);
-        } catch (RepositoryStubException e) {
-            throw new RepositoryException("Failed to login to Repository.", e);
-        }
+        return getRepository().login(repoStub.getReadWriteCredentials(), workspaceName);
-        try {
-            RepositoryStub repStub = RepositoryStub.getInstance();
-            return repStub.getRepository().login(repStub.getReadOnlyCredentials(), workspaceName);
-        } catch (RepositoryStubException e) {
-            throw new RepositoryException("Failed to login to Repository.", e);
-        }
+        return getRepository().login(repoStub.getReadOnlyCredentials(), workspaceName);
-        try {
-            return RepositoryStub.getInstance().getProperty(name);
-        } catch (RepositoryStubException e) {
-            throw new RepositoryException("Failed to obtain Repository instance.", e);
-        }
+        // force assignment of repoStub
+        getRepository();
+        return repoStub.getProperty(name);
