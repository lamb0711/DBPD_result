JCR-309: Added the JackrabbitNodeTypeManager extension interface and a simple implementation in NodeTypeManagerImpl.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@378211 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.api.JackrabbitNodeTypeManager;
+import org.apache.jackrabbit.core.nodetype.xml.NodeTypeReader;
+import org.xml.sax.InputSource;
+import org.xml.sax.SAXException;
-import javax.jcr.nodetype.NodeTypeManager;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.Arrays;
+import java.util.HashSet;
+import java.util.Set;
-public class NodeTypeManagerImpl implements NodeTypeManager, Dumpable,
-        NodeTypeRegistryListener {
+public class NodeTypeManagerImpl implements JackrabbitNodeTypeManager,
+        Dumpable, NodeTypeRegistryListener {
+    //--------------------------------------------< JackrabbitNodeTypeManager >
+
+    /**
+     * Registers the node types defined in the given XML stream. This is a
+     * trivial implementation that just invokes the existing
+     * {@link NodeTypeReader} and {@link NodeTypeRegistry} methods and
+     * heuristically creates the returned node type array.
+     *
+     * {@inheritDoc}
+     */
+    public NodeType[] registerNodeTypes(InputSource in)
+            throws SAXException, RepositoryException {
+        try {
+            NodeTypeDef[] defs = NodeTypeReader.read(in.getByteStream());
+            ntReg.registerNodeTypes(Arrays.asList(defs));
+
+            Set types = new HashSet();
+            for (int i = 0; i < defs.length; i++) {
+                try {
+                    types.add(getNodeType(defs[i].getName()));
+                } catch (NoSuchNodeTypeException e) {
+                    // ignore
+                }
+            }
+            return (NodeType[]) types.toArray(new NodeType[types.size()]);
+        } catch (InvalidNodeTypeDefException e) {
+            throw new RepositoryException("Invalid node type definition", e);
+        } catch (IOException e) {
+            throw new SAXException("Error reading node type stream", e);
+        }
+    }
+
+    private static final String APPLICATION_XML = "application/xml";
+
+    /** {@inheritDoc} */
+    public NodeType[] registerNodeTypes(InputStream in, String contentType)
+            throws IOException, RepositoryException {
+        if (contentType.equalsIgnoreCase(JackrabbitNodeTypeManager.TEXT_XML)
+            || contentType.equalsIgnoreCase(APPLICATION_XML)) {
+            try {
+                return registerNodeTypes(new InputSource(in));
+            } catch (SAXException e) {
+                throw new IOException(e.getMessage());
+            }
+        } else {
+            throw new UnsupportedOperationException(
+                    "Unsupported content type: " + contentType);
+        }
+    }
+
