JCR-1064: Optimize queries that check for the existence of a property

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@578711 13f79535-47bb-0310-9956-ffa450edef68

+     * Indicates the index format version which is relevant to a <b>query</b>. This
+     * value may be different from what {@link MultiIndex#getIndexFormatVersion()}
+     * returns because queries may be executed on two physical indexes with
+     * different formats. Index format versions are considered backward
+     * compatible. That is, the lower version of the two physical indexes is
+     * used for querying.
+     */
+    private IndexFormatVersion indexFormatVersion;
+
+    /**
-        log.info("Index initialized: " + path);
+        log.info("Index initialized: {} Version: {}",
+                new Object[]{path, index.getIndexFormatVersion()});
-                    doc = createDocument(state, getNamespaceMappings());
+                    doc = createDocument(state, getNamespaceMappings(),
+                            index.getIndexFormatVersion());
-                        return createDocument(state, getNamespaceMappings());
+                        return createDocument(state, getNamespaceMappings(),
+                                index.getIndexFormatVersion());
+     * Returns the index format version that this search index is able to
+     * support when a query is executed on this index.
+     *
+     * @return the index format version for this search index.
+     */
+    public IndexFormatVersion getIndexFormatVersion() {
+        if (indexFormatVersion == null) {
+            if (getContext().getParentHandler() instanceof SearchIndex) {
+                SearchIndex parent = (SearchIndex) getContext().getParentHandler();
+                if (parent.getIndexFormatVersion().getVersion()
+                        < index.getIndexFormatVersion().getVersion()) {
+                    indexFormatVersion = parent.getIndexFormatVersion();
+                } else {
+                    indexFormatVersion = index.getIndexFormatVersion();
+                }
+            } else {
+                indexFormatVersion = index.getIndexFormatVersion();
+            }
+        }
+        return indexFormatVersion;
+    }
+
+    /**
-     * @param node       the node state to index.
-     * @param nsMappings the namespace mappings of the search index.
+     * @param node               the node state to index.
+     * @param nsMappings         the namespace mappings of the search index.
+     * @param indexFormatVersion the index format version that should be used to
+     *                           index the passed node state.
-                                      NamespaceMappings nsMappings)
+                                      NamespaceMappings nsMappings,
+                                      IndexFormatVersion indexFormatVersion)
+        indexer.setIndexFormatVersion(indexFormatVersion);
-                                getNamespaceMappings());
+                                getNamespaceMappings(),
+                                index.getIndexFormatVersion());
