JCR-2044: Pass resultFetchSize/limit hint to SortedLuceneQueryHits

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@759889 13f79535-47bb-0310-9956-ffa450edef68

+import org.slf4j.LoggerFactory;
+import org.slf4j.Logger;
+     * The Logger instance for this class.
+     */
+    private static final Logger log = LoggerFactory.getLogger(SortedLuceneQueryHits.class);
+
+    /**
+     * The upper limit for the initial fetch size.
+     */
+    private static final int MAX_FETCH_SIZE = 32 * 1024;
+
+    /**
+     * The lower limit for the initial fetch size.
+     */
+    private static final int MIN_FETCH_SIZE = 32;
+
+    /**
-    private int numHits = 50;
+    private int numHits;
-     * @param reader the IndexReader in use.
-     * @param searcher the index searcher.
-     * @param query the query to execute.
-     * @param sort the sort criteria.
+     * @param reader          the IndexReader in use.
+     * @param searcher        the index searcher.
+     * @param query           the query to execute.
+     * @param sort            the sort criteria.
+     * @param resultFetchHint a hint on how many results should be fetched.
-                                 Sort sort) throws IOException {
+                                 Sort sort,
+                                 long resultFetchHint) throws IOException {
+        this.numHits = (int) Math.min(
+                Math.max(resultFetchHint, MIN_FETCH_SIZE),
+                MAX_FETCH_SIZE);
-            // refill
+            // refill at least numHits or twice hitIndex
+            this.numHits = Math.max(this.numHits, hitIndex * 2);
-    private int getHits() throws IOException {
-        // double hits
-        numHits *= 2;
+    private void getHits() throws IOException {
-        int num = 0;
-            num++;
-        return num;
+        log.debug("getHits() {}/{}", new Integer(scoreNodes.size()), new Integer(numHits));
+        // double hits for next round
+        numHits *= 2;
