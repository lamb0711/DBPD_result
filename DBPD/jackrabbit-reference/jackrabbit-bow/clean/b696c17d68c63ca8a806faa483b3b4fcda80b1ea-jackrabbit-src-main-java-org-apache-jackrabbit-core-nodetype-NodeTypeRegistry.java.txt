JCR-290: NodeTypeRegistry.registerNodeType(NodeTypeDef) does not verify that the referenced namespaces are registered

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@369843 13f79535-47bb-0310-9956-ffa450edef68

-    /**
-     * The empty name used as the name of the declaring node type of the
-     * root node definion.
-     * TODO: Is it proper to use an invalid QName for this.
-     */
-    private static final QName EMPTY_NAME = new QName("", "");
-
-        // FIXME need a fake declaring node type
-        def.setDeclaringNodeType(EMPTY_NAME);
+        // FIXME need a fake declaring node type:
+        // rep:root is not quite correct but better than a non-existing node type 
+        def.setDeclaringNodeType(QName.REP_ROOT);
+    /**
+     * Utility method for verifying that the namespace of a <code>QName</code>
+     * is registered; a <code>null</code> argument is silently ignored.
+     * @param name name whose namespace is to be checked
+     * @throws RepositoryException if the namespace of the given name is not
+     *                             registered or if an unspecified error occured
+     */
+    private void checkNamespace(QName name) throws RepositoryException {
+        if (name != null) {
+            // make sure namespace uri denotes a registered namespace
+            nsReg.getPrefix(name.getNamespaceURI());
+        }
+    }
+
+        checkNamespace(name);
+                checkNamespace(supertypes[i]);
-         * as it's impossible to register an node type definition which
+         * as it's impossible to register a node type definition which
+        checkNamespace(ntd.getPrimaryItemName());
+
+            checkNamespace(pd.getName());
+            checkNamespace(cnd.getName());
+            checkNamespace(dpt);
+                    checkNamespace(rpt);
-     * aggregate (an aggregation multiple complex node types with deep
+     * aggregate (e.g. an aggregation of multiple complex node types with deep
