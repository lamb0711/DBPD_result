JCR-334: Use the DOM3 implementation registry instead of a direct reference to the Xerces XMLSchemaLoader class, to avoid using the old Xerces 2.4.0 implementation that Maven 1.0.2 incorrectly puts in the class path.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@383794 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.xerces.impl.xs.XMLSchemaLoader;
+import org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry;
+import org.apache.xerces.xs.XSImplementation;
+import org.apache.xerces.xs.XSLoader;
+
-        XMLSchemaLoader loader = new XMLSchemaLoader();
-        String uri = file.toURI().toString();
-        XSModel xsModel = loader.loadURI(uri);
+        try {
+            // Find an XMLSchema loader instance
+            DOMImplementationRegistry registry =
+                DOMImplementationRegistry.newInstance();
+            XSImplementation implementation = (XSImplementation)
+                registry.getDOMImplementation("XS-Loader");
+            XSLoader loader = implementation.createXSLoader(null);
-        // Convert top level complex type definitions to node types
-        XSNamedMap map = xsModel.getComponents(XSConstants.TYPE_DEFINITION);
-        for (int i = 0; i < map.getLength(); i++) {
-            XSTypeDefinition tDef = (XSTypeDefinition) map.item(i);
-            checkAndConvert(tDef, null, null);
-        }
-        // Convert local (anonymous) complex type defs found in top level element declarations
-        map = xsModel.getComponents(XSConstants.ELEMENT_DECLARATION);
-        for (int i = 0; i < map.getLength(); i++) {
-            XSElementDeclaration eDec = (XSElementDeclaration) map.item(i);
-            XSTypeDefinition tDef = eDec.getTypeDefinition();
-            checkAndConvert(tDef, eDec.getNamespace(), eDec.getName());
+            // Load the XML Schema
+            String uri = file.toURI().toString();
+            XSModel xsModel = loader.loadURI(uri);
+
+            // Convert top level complex type definitions to node types
+            XSNamedMap map = xsModel.getComponents(XSConstants.TYPE_DEFINITION);
+            for (int i = 0; i < map.getLength(); i++) {
+                XSTypeDefinition tDef = (XSTypeDefinition) map.item(i);
+                checkAndConvert(tDef, null, null);
+            }
+            //  Convert local (anonymous) complex type defs found in top level element declarations
+            map = xsModel.getComponents(XSConstants.ELEMENT_DECLARATION);
+            for (int i = 0; i < map.getLength(); i++) {
+                XSElementDeclaration eDec = (XSElementDeclaration) map.item(i);
+                XSTypeDefinition tDef = eDec.getTypeDefinition();
+                checkAndConvert(tDef, eDec.getNamespace(), eDec.getName());
+            }
+        } catch (ClassNotFoundException e) {
+            throw new SchemaConversionException("XSLoader not found", e);
+        } catch (InstantiationException e) {
+            throw new SchemaConversionException("XSLoader instantiation error", e);
+        } catch (IllegalAccessException e) {
+            throw new SchemaConversionException("XSLoader access error", e);
