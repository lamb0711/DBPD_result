JCR-1401 Removing-nodes with unexpected nodetype


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@682481 13f79535-47bb-0310-9956-ffa450edef68

-    /* IMPORTANT NOTE: for webDAV compliancy the default nodetype of the content
+    /* IMPORTANT NOTE: for webDAV compliance the default nodetype of the content
-     * @param ioManager
+     * @param ioManager the I/O manager
-                if (contentNode.isNodeType(getContentNodeType())) {
+                if (contentNode.isNodeType(getContentNodeType()) ||
+                        !forceCompatibleContentNodes()) {
+     * Defines if content nodes should be replace if they don't have the
+     * node type given by {@link #getCollectionNodeType()}.
+     *
+     * @return <code>true</code> if content nodes should be replaced.
+     */
+    protected boolean forceCompatibleContentNodes() {
+        return false;
+    }
+
+    /**
-     * @return true if the export root is a node. If the specified boolean paramter
+     * @return true if the export root is a node. If the specified boolean parameter
-     * @param context
-     * @param isCollection
+     * @param context the export context
+     * @param isCollection <code>true</code> if collection
-     * and spools its value to the output stream fo the export context.<br>
+     * and spools its value to the output stream of the export context.<br>
-     * @param context
-     * @param isCollection
-     * @param contentNode
-     * @throws IOException
+     * @param context export context
+     * @param isCollection <code>true</code> if collection
+     * @param contentNode the content node
+     * @throws IOException if an I/O error occurs
-     * @param context
-     * @param isCollection
-     * @param contentNode
+     * @param context the export context
+     * @param isCollection <code>true</code> if collection
+     * @param contentNode the content node
-     * @param context
-     * @param isCollection
+     * @param context the export context
+     * @param isCollection <code>true</code> if collection
-     * @throws RepositoryException
+     * @throws RepositoryException if an error during repository access occurs.
-            // export the properties common with normal IO handling
+            // export the properties common with normal I/O handling
-     * @param jcrName
-     * @param session
+     * @param jcrName name of the jcr property
+     * @param session session
+     * @throws RepositoryException if an error during repository access occurs.
-     * @param propName
+     * @param propName name of the dav property
+     * @param session repository session
-     * @throws RepositoryException
+     * @throws RepositoryException if an error during repository access occurs.
-     * @param property
-     * @throws RepositoryException
+     * @param property dav property
+     * @param contentNode the content node
+     * @throws RepositoryException if an error during repository access occurs.
-     * @param propertyName
-     * @throws RepositoryException
+     * @param propertyName dav property name
+     * @param contentNode the content node
+     * @throws RepositoryException if an error during repository access occurs.
-    private void removeJcrProperty(DavPropertyName propertyName, Node contentNode) throws RepositoryException {
+    private void removeJcrProperty(DavPropertyName propertyName, Node contentNode)
+            throws RepositoryException {
-            // deliberately not rethrowing as IOException.
+            // deliberately not re-throwing as IOException.
