JCR-258 - remove JDOM dependency from jcr-server contribution
JCR-295 - usage of Cache-Control header 
JCR-297 - log output while parsing xml
minor consistency issues and improvements

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368683 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.log4j.Logger;
-import org.apache.jackrabbit.webdav.*;
+import org.apache.jackrabbit.webdav.DavException;
+import org.apache.jackrabbit.webdav.DavResource;
+import org.apache.jackrabbit.webdav.DavResourceIterator;
+import org.apache.jackrabbit.webdav.DavServletResponse;
+import org.apache.jackrabbit.webdav.MultiStatus;
+import org.apache.jackrabbit.webdav.MultiStatusResponse;
+import org.apache.jackrabbit.webdav.property.AbstractDavProperty;
-import org.apache.jackrabbit.webdav.property.AbstractDavProperty;
-import org.jdom.Element;
-import org.jdom.Attribute;
-import org.jdom.Namespace;
-import org.jdom.Document;
+import org.apache.jackrabbit.webdav.xml.DomUtil;
+import org.apache.jackrabbit.webdav.xml.Namespace;
+import org.apache.jackrabbit.webdav.xml.ElementIterator;
+import org.apache.log4j.Logger;
+import org.w3c.dom.Document;
+import org.w3c.dom.Element;
-import java.util.*;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Iterator;
-    private List properties;
+    private Iterator propertyElements;
+     * Always returns <code>true</code>.
+     *
+     * @return true
+     * @see org.apache.jackrabbit.webdav.version.report.Report#isMultiStatusReport()
+     */
+    public boolean isMultiStatusReport() {
+        return true;
+    }
+
+    /**
+     * @see Report#init(org.apache.jackrabbit.webdav.version.DeltaVResource, ReportInfo)
+     */
+    public void init(DeltaVResource resource, ReportInfo info) throws DavException {
+        setResource(resource);
+        setInfo(info);
+    }
+
+    /**
-     * @throws IllegalArgumentException if the specified resource is <code>null</code>
-     * @see Report#setResource(org.apache.jackrabbit.webdav.version.DeltaVResource)
+     * @throws DavException if the specified resource is <code>null</code>
-    public void setResource(DeltaVResource resource) throws IllegalArgumentException {
+    private void setResource(DeltaVResource resource) throws DavException {
-            throw new IllegalArgumentException("The resource specified must not be null.");
+            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "The resource specified must not be null.");
-     * @throws IllegalArgumentException if the given <code>ReportInfo</code>
+     * @throws DavException if the given <code>ReportInfo</code>
-     * @see Report#setInfo(ReportInfo)
-    public void setInfo(ReportInfo info) throws IllegalArgumentException {
-        if (info == null || !XML_EXPAND_PROPERTY.equals(info.getReportElement().getName())) {
-            throw new IllegalArgumentException("DAV:expand-property element expected.");
+    private void setInfo(ReportInfo info) throws DavException {
+        if (!getType().isRequestedReportType(info)) {
+            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "DAV:expand-property element expected.");
-        properties = info.getReportElement().getChildren(XML_PROPERTY, NAMESPACE);
+        propertyElements = info.getContentElements(XML_PROPERTY, NAMESPACE).iterator();
-     * @throws DavException
-     * @see Report#toXml()
+     * @see org.apache.jackrabbit.webdav.xml.XmlSerializable#toXml(Document)
+     * @param document
-    public Document toXml() throws DavException {
+    public Element toXml(Document document) {
+        return getMultiStatus().toXml(document);
+    }
+
+    /**
+     * Retrieve the multistatus object that is returned in response to the
+     * expand-property report request.
+     *
+     * @return
+     * @throws NullPointerException if info and resource have not been set.
+     */
+    private MultiStatus getMultiStatus() {
-            throw new DavException(DavServletResponse.SC_INTERNAL_SERVER_ERROR, "Error while running DAV:version-tree report");
+            throw new NullPointerException("Error while running DAV:version-tree report");
-        buildMultiStatus(resource, info.getDepth(), ms);
-        return ms.toXml();
+        addResponses(resource, info.getDepth(), ms);
+        return ms;
-     * @throws DavException
-     * @see #getResponse(DavResource, List)
+     * @see #getResponse(DavResource, Iterator)
-    private void buildMultiStatus(DavResource res, int depth, MultiStatus ms)
-            throws DavException {
-        MultiStatusResponse response = getResponse(res, properties);
+    private void addResponses(DavResource res, int depth, MultiStatus ms) {
+        MultiStatusResponse response = getResponse(res, propertyElements);
-                buildMultiStatus(it.nextResource(), depth-1, ms);
+                addResponses(it.nextResource(), depth-1, ms);
-     * @param propertyList
+     * @param propertyElements
-    private MultiStatusResponse getResponse(DavResource res, List propertyList) {
-        MultiStatusResponse resp = new MultiStatusResponse(res.getHref());
-        Iterator propIter = propertyList.iterator();
-        while (propIter.hasNext()) {
-            Element propertyElem = (Element) propIter.next();
-            Attribute nameAttr = propertyElem.getAttribute(ATTR_NAME);
-            if (nameAttr == null) {
+    private MultiStatusResponse getResponse(DavResource res, Iterator propertyElements) {
+        MultiStatusResponse resp = new MultiStatusResponse(res.getHref(), null);
+        while (propertyElements.hasNext()) {
+            Element propertyElem = (Element)propertyElements.next();
+            // retrieve the localName present in the "name" attribute
+            String nameAttr = propertyElem.getAttribute(ATTR_NAME);
+            if (nameAttr == null || "".equals(nameAttr)) {
-            Attribute namespaceAttr = propertyElem.getAttribute(ATTR_NAMESPACE);
+            // retrieve the namespace present in the "namespace" attribute
+            // NOTE: if this attribute is missing the DAV: namespace represents the default.
+            String namespaceAttr = propertyElem.getAttribute(ATTR_NAMESPACE);
+            Namespace namespace = (namespaceAttr != null) ? Namespace.getNamespace(namespaceAttr) : NAMESPACE;
-            String name = nameAttr.getValue();
-            Namespace namespace = (namespaceAttr != null) ? Namespace.getNamespace(namespaceAttr.getValue()) : NAMESPACE;
-
-            DavPropertyName propName = DavPropertyName.create(name, namespace);
+            DavPropertyName propName = DavPropertyName.create(nameAttr, namespace);
-                    resp.add(new ExpandProperty((DeltaVResource)res, (HrefProperty)p, propertyElem.getChildren(XML_PROPERTY, NAMESPACE)));
+                    ElementIterator it = DomUtil.getChildren(propertyElem, XML_PROPERTY, NAMESPACE);
+                    resp.add(new ExpandProperty((DeltaVResource)res, (HrefProperty)p, it));
-         * @param propertyList
+         * @param elementIter
-        private ExpandProperty(DeltaVResource deltaVResource, HrefProperty hrefProperty, List propertyList) {
+        private ExpandProperty(DeltaVResource deltaVResource, HrefProperty hrefProperty, ElementIterator elementIter) {
-                    MultiStatusResponse resp = getResponse(refResource[i], propertyList);
-                    valueList.add(resp.toXml());
+                    MultiStatusResponse resp = getResponse(refResource[i], elementIter);
+                    valueList.add(resp);
-         * Returns
+         * Returns a List of {@link MultiStatusResponse} objects.
+         *
