JCR-2763: Drop the Dumpable interface

Make SessionContext.toString() more detailed while SessionImpl.toString() returns a more trimmed-down session name.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1005019 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.concurrent.atomic.AtomicLong;
-
-import org.apache.jackrabbit.util.Text;
-     * Session counter. Used to generate unique internal session names.
-     */
-    private static AtomicLong counter = new AtomicLong();
-
-    /**
-     * Creates a unique internal session name for a session with the
-     * given user.
-     *
-     * @param userId session user, or <code>null</code>
-     * @return session name
-     */
-    private static String createSessionName(String userId) {
-        long count = counter.incrementAndGet();
-        if (userId != null) {
-            String user = Text.escapeIllegalJcrChars(userId);
-            return "session-" + user + "-" + count;
-        } else {
-            return "session-" + count;
-        }
-    }
-
-    /**
-     * Unique internal name of this session. Returned by the
-     * {@link #toString()} method for use in logging and debugging.
-     */
-    private final String sessionName;
-
-    /**
-        this.sessionName = createSessionName(session.getUserID());
-     * Returns the unique internal name of this session. The returned name
-     * is especially useful for debugging and logging purposes.
+     * Dumps the session internals to a string.
-     * @see #sessionName
-     * @return session name
+     * @return string representation of session internals
-        return sessionName;
+        return session + ":\n" + itemManager + "\n" + itemStateManager;
