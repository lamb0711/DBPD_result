workaround for problem (jdk issue) reported by timur: 
Limit of 65535 bytes per String value?

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@154150 13f79535-47bb-0310-9956-ffa450edef68

+    /** encoding used for serializing String values */
+    private static final String ENCODING = "UTF-8";
+
-                    blobVal = null;
+                    blobVal = null; // gc hint
-                out.writeUTF(val.toString());   // value
+                /**
+                 * because writeUTF(String) has a size limit of 65k,
+                 * we're using write(byte[]) instead
+                 */
+                //out.writeUTF(val.toString());   // value
+                byte[] bytes = val.toString().getBytes(ENCODING);
+                out.writeInt(bytes.length); // lenght of byte[]
+                out.write(bytes);   // byte[]
-            s = in.readUTF();   // value
+                s = in.readUTF();   // value (i.e. blobId)
+                /**
+                 * because writeUTF(String) has a size limit of 65k,
+                 * Strings are serialized as <length><byte[]>
+                 */
+                //s = in.readUTF();   // value
+                int len = in.readInt(); // lenght of byte[]
+                byte[] bytes = new byte[len];
+                in.read(bytes); // byte[]
+                s = new String(bytes, ENCODING);
-            int read = 0;
+            int read;
