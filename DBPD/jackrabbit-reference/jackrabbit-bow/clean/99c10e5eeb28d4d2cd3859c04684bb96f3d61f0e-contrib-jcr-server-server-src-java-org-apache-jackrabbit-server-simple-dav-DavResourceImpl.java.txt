- comitting latest changes from angela
- adding configuration for authorization header behaviour

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@159798 13f79535-47bb-0310-9956-ffa450edef68

-    public DavResourceImpl(DavResourceLocator locator, DavResourceFactory factory, DavSession session) {
+    public DavResourceImpl(DavResourceLocator locator, DavResourceFactory factory,
+                           DavSession session)
+        throws RepositoryException {
-            } catch (RepositoryException e) {
+            } catch (PathNotFoundException e) {
+     * Adds a new non-collection member to this resource.
+     *
-        } catch (ItemExistsException e) {
-            // according to RFC 2518: MKCOL only possible on non-existing/deleted resource
-            throw new JcrDavException(e, DavServletResponse.SC_METHOD_NOT_ALLOWED);
+     *
+     *
+     * Creates a new collection as member of this resource.
+     *
+        } catch (ItemExistsException e) {
+            throw new DavException(DavServletResponse.SC_METHOD_NOT_ALLOWED);
-        return a lockdiscovery with the lock-info and the default scope and type */
-        ActiveLock lock = getLock(lockInfo.getType(), lockInfo.getScope());
+           return a lockdiscovery with the lock-info and the default scope and type */
+        ActiveLock lock = getLock(Type.WRITE, Scope.EXCLUSIVE);
-        } else if (lock.isLockedByToken(lockToken)) {
-            if (lock instanceof JcrActiveLock) {
-                try {
-                    // refresh JCR lock and return the original lock object.
-                    node.getLock().refresh();
-                } catch (RepositoryException e) {
-                    throw new JcrDavException(e);
-                }
-            } else {
-                lock = lockManager.refreshLock(lockInfo, lockToken, this);
+        }
+        
+        if (lock instanceof JcrActiveLock) {
+            try {
+                // refresh JCR lock and return the original lock object.
+                node.getLock().refresh();
+            } catch (RepositoryException e) {
+                throw new JcrDavException(e);
-            throw new DavException(DavServletResponse.SC_LOCKED);
+            lock = lockManager.refreshLock(lockInfo, lockToken, this);
