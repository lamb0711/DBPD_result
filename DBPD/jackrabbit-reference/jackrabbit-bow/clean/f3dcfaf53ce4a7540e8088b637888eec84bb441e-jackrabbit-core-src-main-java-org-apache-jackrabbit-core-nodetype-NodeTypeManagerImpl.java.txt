JCR-1169 Distribution of commons classes (adjust jackrabbit-core)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@590014 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.NameException;
-import org.apache.jackrabbit.name.NamespaceResolver;
-import org.apache.jackrabbit.name.QName;
-import org.apache.jackrabbit.name.NameFormat;
-import org.apache.jackrabbit.name.UnknownPrefixException;
+import org.apache.jackrabbit.conversion.NameException;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.conversion.NamePathResolver;
-import org.apache.jackrabbit.util.name.NamespaceMapping;
+import org.apache.jackrabbit.namespace.NamespaceMapping;
+import org.apache.jackrabbit.namespace.NamespaceResolver;
+import javax.jcr.NamespaceException;
-     * The namespace resolver used to translate qualified names to JCR names.
+     * The namespace resolver
+     * The resolver used to translate qualified names to JCR names.
+     */
+    private final NamePathResolver resolver;
+
+    /**
-     * @param nsResolver namespace resolver
+     * @param resolver
-            NamespaceResolver nsResolver, DataStore store) {
+            NamespaceResolver nsResolver, NamePathResolver resolver, DataStore store) {
+        this.resolver = resolver;
-                nsResolver);
+                resolver);
-                    ndi = new NodeDefinitionImpl(nd, this, nsResolver);
+                    ndi = new NodeDefinitionImpl(nd, this, resolver);
-                    pdi = new PropertyDefinitionImpl(pd, this, nsResolver);
+                    pdi = new PropertyDefinitionImpl(pd, this, resolver);
-    public NodeTypeImpl getNodeType(QName name) throws NoSuchNodeTypeException {
+    public NodeTypeImpl getNodeType(Name name) throws NoSuchNodeTypeException {
-                nt = new NodeTypeImpl(ent, def, this, nsResolver, store);
+                nt = new NodeTypeImpl(ent, def, this, resolver, store);
-    public void nodeTypeRegistered(QName ntName) {
+    public void nodeTypeRegistered(Name ntName) {
-    public void nodeTypeReRegistered(QName ntName) {
+    public void nodeTypeReRegistered(Name ntName) {
-    public void nodeTypeUnregistered(QName ntName) {
+    public void nodeTypeUnregistered(Name ntName) {
-        QName[] ntNames = ntReg.getRegisteredNodeTypes();
+        Name[] ntNames = ntReg.getRegisteredNodeTypes();
-        QName[] ntNames = ntReg.getRegisteredNodeTypes();
+        Name[] ntNames = ntReg.getRegisteredNodeTypes();
-        QName[] ntNames = ntReg.getRegisteredNodeTypes();
+        Name[] ntNames = ntReg.getRegisteredNodeTypes();
-            return getNodeType(NameFormat.parse(nodeTypeName, nsResolver));
+            return getNodeType(resolver.getQName(nodeTypeName));
+        } catch (NamespaceException e) {
+            throw new NoSuchNodeTypeException(nodeTypeName, e);
-            QName qname = NameFormat.parse(name, nsResolver);
+            Name qname = resolver.getQName(name);
-        } catch (UnknownPrefixException e) {
+        } catch (NamespaceException e) {
