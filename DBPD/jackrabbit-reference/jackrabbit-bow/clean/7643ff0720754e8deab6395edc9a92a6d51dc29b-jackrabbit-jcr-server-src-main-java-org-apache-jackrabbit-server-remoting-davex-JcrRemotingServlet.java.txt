JCR-3029: JcrRemotingServlet should interpolate system properties in the home init-param

Use the standard java.io.tmpdir location for temporary files when no explicit configuration is present.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1155403 13f79535-47bb-0310-9956-ffa450edef68

+import javax.servlet.ServletConfig;
-        // setup home directory
-        String paramHome = getServletConfig().getInitParameter(INIT_PARAM_HOME);
-        if (paramHome == null) {
-            log.debug("missing init-param " + INIT_PARAM_HOME + ". using default: 'jackrabbit'");
-            paramHome = "jackrabbit";
-        }
-        File home;
-        try {
-            home = new File(paramHome).getCanonicalFile();
-        } catch (IOException e) {
-            throw new ServletException(INIT_PARAM_HOME + " invalid." + e.toString());
-        }
-        home.mkdirs();
+        // Determine the configured location for temporary files used when
+        // processing file uploads. Since JCR-3029 the default is the
+        // standard java.io.tmpdir location, but the presence of explicit
+        // configuration parameters restores the original behavior.
+        File tmp = null;
+        ServletConfig config = getServletConfig();
+        String paramHome = config.getInitParameter(INIT_PARAM_HOME);
+        String paramTemp = config.getInitParameter(INIT_PARAM_TMP_DIRECTORY);
+        if (paramHome != null || paramTemp != null) {
+            if (paramHome == null) {
+                log.debug("Missing init-param " + INIT_PARAM_HOME
+                        + ". Using default: 'jackrabbit'");
+                paramHome = "jackrabbit";
+            } else if (paramTemp == null) {
+                log.debug("Missing init-param " + INIT_PARAM_TMP_DIRECTORY
+                        + ". Using default: 'tmp'");
+                paramTemp = "tmp";
+            }
-        String tmp = getServletConfig().getInitParameter(INIT_PARAM_TMP_DIRECTORY);
-        if (tmp == null) {
-            log.debug("No " + INIT_PARAM_TMP_DIRECTORY + " specified. using 'tmp'");
-            tmp = "tmp";
+            tmp = new File(paramHome, paramTemp);
+            try {
+                tmp = tmp.getCanonicalFile();
+                tmp.mkdirs();
+                log.debug("  temp-directory = " + tmp.getPath());
+            } catch (IOException e) {
+                log.warn("Invalid temporary directory " + tmp.getPath()
+                        + ", using system default instead", e);
+                tmp = null;
+            }
-        File tmpDirectory = new File(home, tmp);
-        tmpDirectory.mkdirs();
-        log.debug("  temp-directory = " + tmpDirectory.getPath());
-        getServletContext().setAttribute(ATTR_TMP_DIRECTORY, tmpDirectory);
+        getServletContext().setAttribute(ATTR_TMP_DIRECTORY, tmp);
