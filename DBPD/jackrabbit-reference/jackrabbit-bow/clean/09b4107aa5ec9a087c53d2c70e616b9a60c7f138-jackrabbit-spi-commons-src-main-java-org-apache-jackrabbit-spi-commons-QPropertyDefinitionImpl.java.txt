JCR-2105: JSR 283 NodeType Management (work in progress)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@772929 13f79535-47bb-0310-9956-ffa450edef68

+     * The 'multiple' flag
+     */
+    private final Name[] availableQueryOperators;
+
+    /**
+     * The 'fullTextSearcheable' flag
+     */
+    private final boolean fullTextSearcheable;
+
+    /**
+     * The 'queryOrderable' flag
+     */
+    private final boolean queryOrderable;
+
+    /**
-                propDef.getRequiredType(), propDef.getValueConstraints());
+                propDef.getRequiredType(), propDef.getValueConstraints(),
+                propDef.getAvailableQueryOperators(),
+                propDef.isFullTextSearcheable(),
+                propDef.isQueryOrderable());
+     * @deprecated Use {@link #QPropertyDefinitionImpl(Name, Name,
+                                   boolean, boolean, int, boolean, QValue[], boolean,
+                                   int, String[], Name[], boolean, boolean)} instead.
+        this(name, declaringNodeType, isAutoCreated, isMandatory,
+                onParentVersion, isProtected, defaultValues, isMultiple,
+                requiredType, valueConstraints, null, false, false);
+    }
+
+    /**
+     * Creates a new serializable qualified property definition.
+     *
+     * @param name              the name of the child item.
+     * @param declaringNodeType the delaring node type
+     * @param isAutoCreated     if this item is auto created.
+     * @param isMandatory       if this is a mandatory item.
+     * @param onParentVersion   the on parent version behaviour.
+     * @param isProtected       if this item is protected.
+     * @param defaultValues     the default values or <code>null</code> if there
+     *                          are none.
+     * @param isMultiple        if this property is multi-valued.
+     * @param requiredType      the required type for this property.
+     * @param valueConstraints  the value constraints for this property. If none
+     *                          exist an empty array must be passed.
+     * @param availableQueryOperators
+     * @param isFullTextSearcheable
+     * @param isQueryOrderable
+     * @throws NullPointerException if <code>valueConstraints</code> is
+     *                              <code>null</code>.
+     * @since JCR 2.0
+     */
+    public QPropertyDefinitionImpl(Name name, Name declaringNodeType,
+                                   boolean isAutoCreated, boolean isMandatory,
+                                   int onParentVersion, boolean isProtected,
+                                   QValue[] defaultValues, boolean isMultiple,
+                                   int requiredType, String[] valueConstraints,
+                                   Name[] availableQueryOperators,
+                                   boolean isFullTextSearcheable,
+                                   boolean isQueryOrderable) {
+        this.availableQueryOperators = availableQueryOperators;
+        this.fullTextSearcheable = isFullTextSearcheable;
+        this.queryOrderable = isQueryOrderable;
+     */
+    public Name[] getAvailableQueryOperators() {
+        return availableQueryOperators;
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public boolean isFullTextSearcheable() {
+        return fullTextSearcheable;
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public boolean isQueryOrderable() {
+        return queryOrderable;
+    }
+
+    /**
+     * {@inheritDoc}
