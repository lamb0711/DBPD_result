work in progress

- missing escaping of item name when building uri.
- let RS parse the eventdiscovery. don't pass sessioninfo and resolvers
  to the various event related classes.
- removing of id/uri-cache entries must remove the corresponding
  entry in the other cache as well.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@472821 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.webdav.xml.ElementIterator;
-import org.apache.jackrabbit.webdav.xml.DomUtil;
-import org.apache.jackrabbit.webdav.observation.ObservationConstants;
-import org.apache.jackrabbit.webdav.DavException;
-import org.apache.jackrabbit.spi.SessionInfo;
-import org.w3c.dom.Element;
-import javax.jcr.RepositoryException;
+import java.util.Collection;
+import java.util.Iterator;
-    private final SessionInfo sessionInfo;
-    private final URIResolver uriResolver;
-    private ElementIterator eventElementIterator;
+    private Iterator eventIterator;
-    public EventIteratorImpl(Element eventBundleElement, URIResolver uriResolver, SessionInfo sessionInfo) {
-
-        this.sessionInfo = sessionInfo;
-        this.uriResolver = uriResolver;
-        this.eventElementIterator = DomUtil.getChildren(eventBundleElement, ObservationConstants.XML_EVENT, ObservationConstants.NAMESPACE);
+    public EventIteratorImpl(Collection events) {
+        this.eventIterator = events.iterator();
-        if (eventElementIterator != null) {
-            while (next == null && eventElementIterator.hasNext()) {
-                Element evElem = eventElementIterator.nextElement();
-                try {
-                    next = new EventImpl(evElem, uriResolver, sessionInfo);
-                } catch (RepositoryException e) {
-                    log.error("Unexpected error while creating event.", e);
-                } catch (DavException e) {
-                    log.error("Unexpected error while creating event.", e);
+        if (eventIterator != null) {
+            while (next == null && eventIterator.hasNext()) {
+                Object o = eventIterator.next();
+                if (o instanceof Event) {
+                    next = (Event)o;
