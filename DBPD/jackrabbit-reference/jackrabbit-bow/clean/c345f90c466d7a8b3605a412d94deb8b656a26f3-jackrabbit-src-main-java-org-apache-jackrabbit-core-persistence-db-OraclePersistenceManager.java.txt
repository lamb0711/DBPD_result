JCR-645

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@478892 13f79535-47bb-0310-9956-ffa450edef68

-        PreparedStatement stmt = (update) ? nodeStateUpdate : nodeStateInsert;
+        String sql = (update) ? nodeStateUpdateSQL : nodeStateInsertSQL;
-            // not have to additionally synchronize on the preparedStatement
-
+            // not have to additionally synchronize on the sql statement
-            stmt.setBlob(1, blob);
-            stmt.setString(2, state.getId().toString());
-            stmt.executeUpdate();
+            executeStmt(sql, new Object[]{blob, state.getNodeId().toString()});
-            resetStatement(stmt);
-                } catch (Exception e1) {
+                } catch (Exception ignore) {
-        PreparedStatement stmt = (update) ? propertyStateUpdate : propertyStateInsert;
+        String sql = (update) ? propertyStateUpdateSQL : propertyStateInsertSQL;
-            // not have to additionally synchronize on the preparedStatement
-
+            // not have to additionally synchronize on the sql statement
-            stmt.setBlob(1, blob);
-            stmt.setString(2, state.getId().toString());
-            stmt.executeUpdate();
+            executeStmt(sql, new Object[]{blob, state.getPropertyId().toString()});
-            resetStatement(stmt);
-                } catch (Exception e1) {
+                } catch (Exception ignore) {
-        PreparedStatement stmt = (update) ? nodeReferenceUpdate : nodeReferenceInsert;
+        String sql = (update) ? nodeReferenceUpdateSQL : nodeReferenceInsertSQL;
-            // not have to additionally synchronize on the preparedStatement
-
+            // not have to additionally synchronize on the sql statement
-            stmt.setBlob(1, blob);
-            stmt.setString(2, refs.getId().toString());
-            stmt.executeUpdate();
+            executeStmt(sql, new Object[]{blob, refs.getId().toString()});
-            resetStatement(stmt);
-                } catch (Exception e1) {
+                } catch (Exception ignore) {
-            PreparedStatement stmt = blobSelectExist;
+            Statement stmt = executeStmt(blobSelectExistSQL, new Object[]{blobId});
+            ResultSet rs = stmt.getResultSet();
+            // a BLOB exists if the result has at least one entry
+            boolean exists = rs.next();
+            closeResultSet(rs);
+
-                stmt.setString(1, blobId);
-                stmt.execute();
-                ResultSet rs = stmt.getResultSet();
-                // a BLOB exists if the result has at least one entry
-                boolean exists = rs.next();
-                resetStatement(stmt);
-                closeResultSet(rs);
-
-                stmt = (exists) ? blobUpdate : blobInsert;
-
+                String sql = (exists) ? blobUpdateSQL : blobInsertSQL;
-                stmt.setBlob(1, blob);
-                stmt.setString(2, blobId);
-                stmt.executeUpdate();
+                executeStmt(sql, new Object[]{blob, blobId});
-                resetStatement(stmt);
-                    } catch (Exception e1) {
+                    } catch (Exception ignore) {
