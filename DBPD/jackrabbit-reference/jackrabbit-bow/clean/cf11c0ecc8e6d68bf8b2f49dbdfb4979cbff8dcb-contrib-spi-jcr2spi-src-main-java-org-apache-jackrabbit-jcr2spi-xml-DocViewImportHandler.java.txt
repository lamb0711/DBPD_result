work in progress

- minor improvement and some sync



git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@497068 13f79535-47bb-0310-9956-ffa450edef68

+                if (atts.getURI(i).equals(QName.NS_XMLNS_URI)) {
+                    // skip namespace declarations reported as attributes
+                    // see http://issues.apache.org/jira/browse/JCR-620#action_12448164
+                    continue;
+                }
-                // value(s)
+                // attribute value
-                Importer.TextValue[] propValues;
-
-                // always assume single-valued property for the time being
-                // until a way of properly serializing/detecting multi-valued
-                // properties on re-import is found (see JCR-325);
-                // see also DocViewSAXEventGenerator#leavingProperties(Node, int)
-                // TODO: proper multi-value serialization support
-                propValues = new Importer.TextValue[1];
-                propValues[0] = new StringValue(attrValue);
-
-                    if (propValues.length > 0) {
-                        mixinTypes = new QName[propValues.length];
-                        for (int j = 0; j < propValues.length; j++) {
-                            String val = ((StringValue) propValues[j]).retrieve();
-                            try {
-                                mixinTypes[j] = NameFormat.parse(val, nsContext);
-                            } catch (NameException ne) {
-                                throw new SAXException("illegal jcr:mixinTypes value: "
-                                        + val, ne);
-                            }
-                        }
-                    }
+                    mixinTypes = parseNames(attrValue);
+                    // always assume single-valued property for the time being
+                    // until a way of properly serializing/detecting multi-valued
+                    // properties on re-import is found (see JCR-325);
+                    // see also DocViewSAXEventGenerator#leavingProperties(Node, int)
+                    // TODO: proper multi-value serialization support
+                    Importer.TextValue[] propValues = new Importer.TextValue[1];
+                    propValues[0] = new StringValue(attrValue);
+     * Parses the given string as a list of JCR names. Any whitespace sequence
+     * is supported as a names separator instead of just a single space to
+     * be more liberal in what we accept. The current namespace context is
+     * used to convert the prefixed name strings to QNames.
+     *
+     * @param value string value
+     * @return the parsed names
+     * @throws SAXException if an invalid name was encountered
+     */
+    private QName[] parseNames(String value) throws SAXException {
+        String[] names = value.split("\\p{Space}+");
+        QName[] qnames = new QName[names.length];
+        for (int i = 0; i < names.length; i++) {
+            try {
+                qnames[i] = NameFormat.parse(names[i], nsContext);
+            } catch (NameException ne) {
+                throw new SAXException("Invalid name: " + names[i], ne);
+            }
+        }
+        return qnames;
+    }
+
+    /**
