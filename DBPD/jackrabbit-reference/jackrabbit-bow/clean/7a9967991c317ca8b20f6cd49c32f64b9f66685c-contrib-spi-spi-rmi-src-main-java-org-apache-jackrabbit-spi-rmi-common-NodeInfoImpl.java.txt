minor improvements:
- make usage of commons IdFactory
- add static create methods

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@552863 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.ItemId;
+import java.io.Serializable;
+     * Creates a new serializable <code>NodeInfo</code> for the given
+     * <code>NodeInfo</code>.
+     *
+     * @param nodeInfo
+     */
+    public static NodeInfo createSerializableNodeInfo(NodeInfo nodeInfo, final SerializableIdFactory idFactory) {
+        if (nodeInfo instanceof Serializable) {
+            return nodeInfo;
+        } else {
+            PropertyId[] refs = nodeInfo.getReferences();
+            PropertyId[] serRefs = new PropertyId[refs.length];
+            for (int i = 0; i < serRefs.length; i++) {
+                serRefs[i] = idFactory.createSerializablePropertyId(refs[i]);
+            }
+            NodeId parentId = null;
+            if (nodeInfo.getParentId() != null) {
+                parentId = idFactory.createSerializableNodeId(nodeInfo.getParentId());
+            }
+            return new NodeInfoImpl(parentId, nodeInfo.getQName(),
+                    nodeInfo.getPath(),
+                    idFactory.createSerializableNodeId(nodeInfo.getId()),
+                    nodeInfo.getIndex(), nodeInfo.getNodetype(),
+                    nodeInfo.getMixins(), serRefs,
+                    new IteratorHelper(nodeInfo.getPropertyIds()) {
+                        public ItemId nextId() {
+                            return idFactory.createSerializablePropertyId(
+                                    (PropertyId) super.nextId());
+                        }
+                    });
+        }
+    }
+
+    /**
-    public NodeInfoImpl(NodeId parentId, QName name, Path path, NodeId id,
-                        int index, QName primaryTypeName, QName[] mixinNames,
-                        PropertyId[] references, IdIterator propertyIds) {
+    private NodeInfoImpl(NodeId parentId, QName name, Path path, NodeId id,
+                         int index, QName primaryTypeName, QName[] mixinNames,
+                         PropertyId[] references, IdIterator propertyIds) {
