JCR-1200: add QValueFactory.computeAutoValues(), use it in jcr2spi SessionItemStateManager and spi-commons QValueFactoryImpl.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@590762 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.uuid.UUID;
-import java.util.Calendar;
-            if (NameConstants.MIX_REFERENCEABLE.equals(declaringNT) && NameConstants.JCR_UUID.equals(name)) {
-                // mix:referenceable node type defines jcr:uuid
-                genValues = getQValues(parent.getUniqueID(), qValueFactory);
-            } else if (NameConstants.NT_BASE.equals(declaringNT)) {
-                // nt:base node type
-                if (NameConstants.JCR_PRIMARYTYPE.equals(name)) {
-                    // jcr:primaryType property
-                    genValues = new QValue[]{qValueFactory.create(parent.getNodeTypeName())};
-                } else if (NameConstants.JCR_MIXINTYPES.equals(name)) {
-                    // jcr:mixinTypes property
-                    Name[] mixins = parent.getMixinTypeNames();
-                    genValues = getQValues(mixins, qValueFactory);
-                }
-            } else if (NameConstants.NT_HIERARCHYNODE.equals(declaringNT) && NameConstants.JCR_CREATED.equals(name)) {
-                // nt:hierarchyNode node type defines jcr:created property
-                genValues = new QValue[]{qValueFactory.create(Calendar.getInstance())};
-            } else if (NameConstants.NT_RESOURCE.equals(declaringNT) && NameConstants.JCR_LASTMODIFIED.equals(name)) {
-                // nt:resource node type defines jcr:lastModified property
-                genValues = new QValue[]{qValueFactory.create(Calendar.getInstance())};
-            } else if (NameConstants.NT_VERSION.equals(declaringNT) && NameConstants.JCR_CREATED.equals(name)) {
-                // nt:version node type defines jcr:created property
-                genValues = new QValue[]{qValueFactory.create(Calendar.getInstance())};
-            } else {
-                // TODO: TOBEFIXED. other nodetype -> build some default value
-                log.warn("Missing implementation. Nodetype " + def.getDeclaringNodeType() + " defines autocreated property " + def.getName() + " without default value.");
+
+            if (NameConstants.NT_BASE.equals(declaringNT) && NameConstants.JCR_PRIMARYTYPE.equals(name)) {
+                // jcr:primaryType property
+                genValues = new QValue[]{qValueFactory.create(parent.getNodeTypeName())};
+            } else if (NameConstants.NT_BASE.equals(declaringNT) && NameConstants.JCR_MIXINTYPES.equals(name)) {
+                // jcr:mixinTypes property
+                Name[] mixins = parent.getMixinTypeNames();
+                genValues = getQValues(mixins, qValueFactory);
+            }
+            else {
+                // ask the SPI implementation for advice
+                genValues = qValueFactory.computeAutoValues(def);
-        if (uniqueID == null) {
-            uniqueID = UUID.randomUUID().toString();
-        }
