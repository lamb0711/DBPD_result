JCR-1878: Use Apache Tika for text extraction

Use POI through Tika to avoid the Java 5 compilation errors.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@762823 13f79535-47bb-0310-9956-ffa450edef68

-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-import org.apache.poi.hwpf.extractor.WordExtractor;
-
-import java.io.Reader;
-import java.io.InputStream;
-import java.io.IOException;
-import java.io.StringReader;
-
-public class MsWordTextExtractor extends AbstractTextExtractor {
+public class MsWordTextExtractor extends DefaultTextExtractor {
-    /**
-     * Logger instance.
-     */
-    private static final Logger logger =
-        LoggerFactory.getLogger(MsWordTextExtractor.class);
+    private static String[] TYPES = new String[] {
+        "application/vnd.ms-word",
+        "application/msword"
+    };
-    /**
-     * Force loading of dependent class.
-     */
-    static {
-        WordExtractor.class.getName();
-    }
-
-    /**
-     * Creates a new <code>MsWordTextExtractor</code> instance.
-     */
-    public MsWordTextExtractor() {
-        super(new String[]{"application/vnd.ms-word", "application/msword"});
-    }
-
-    //-------------------------------------------------------< TextExtractor >
-
-    /**
-     * {@inheritDoc}
-     * Returns an empty reader if an error occured extracting text from
-     * the word document.
-     */
-    public Reader extractText(InputStream stream,
-                              String type,
-                              String encoding) throws IOException {
-        try {
-            return new StringReader(new WordExtractor(stream).getText());
-        } catch (Exception e) {
-            logger.warn("Failed to extract Word text content", e);
-            return new StringReader("");
-        } finally {
-            stream.close();
-        }
+    public String[] getContentTypes() {
+        return TYPES;
