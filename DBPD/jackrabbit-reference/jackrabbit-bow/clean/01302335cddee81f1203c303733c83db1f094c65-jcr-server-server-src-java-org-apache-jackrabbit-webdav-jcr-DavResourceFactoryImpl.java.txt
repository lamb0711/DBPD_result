JCR-417 (preparation):
- add AbstractLocatorFactory
- add separate loc-factory to simple project => reducing dependency
  to 'jcr' package.

JCR-544
- add separate workspace resource representing the jcr workspace
- move Workspace.restore call to workspace resource.
- consequently RootItemCollection not used any more

minor improvements
- root, workspace resource must not support 'observation' -> moving
  constant to item-resources
- get rid of 'setModificationTime'



git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@448257 13f79535-47bb-0310-9956-ffa450edef68

+            // root
+        } else if (locator.getResourcePath().equals(locator.getWorkspacePath())) {
+            // workspace resource
+            resource = new WorkspaceResourceImpl(locator, session, this);
+            // resource corresponds to a repository item
-                log.error("Failed to build resource from item '"+ locator.getResourcePath() + "'");
+                log.error("Failed to build resource from item '"+ locator.getRepositoryPath() + "'");
-        ((TransactionResource)resource).init(txMgr, ((TransactionDavServletRequest)request).getTransactionId());
-        ((ObservationResource)resource).init(subsMgr);
+        if (request instanceof TransactionDavServletRequest && resource instanceof TransactionResource) {
+            ((TransactionResource)resource).init(txMgr, ((TransactionDavServletRequest)request).getTransactionId());
+        }
+        if (resource instanceof ObservationResource) {
+            ((ObservationResource)resource).init(subsMgr);
+        }
+
-        try {
-            resource = createResourceForItem(locator, sessionImpl);
-        } catch (RepositoryException e) {
-            log.info("Creating resource for non-existing repository item ...");
-            if (locator.isRootLocation()) {
-                resource =  new RootCollection(locator, sessionImpl, this);
-            } else {
+        if (locator.isRootLocation()) {
+            resource =  new RootCollection(locator, sessionImpl, this);
+        } else if (locator.getResourcePath().equals(locator.getWorkspacePath())) {
+            resource = new WorkspaceResourceImpl(locator, sessionImpl, this);
+        } else {
+            try {
+                resource = createResourceForItem(locator, sessionImpl);
+            } catch (RepositoryException e) {
+                log.debug("Creating resource for non-existing repository item: " + locator.getRepositoryPath());
-        ((ObservationResource)resource).init(subsMgr);
+        if (resource instanceof ObservationResource) {
+            ((ObservationResource)resource).init(subsMgr);
+        }
-            } else if (ItemResourceConstants.ROOT_ITEM_PATH.equals(item.getPath())) {
-                resource =  new RootItemCollection(locator, sessionImpl, this, item);
-            }  else{
+            } else{
