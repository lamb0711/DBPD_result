JCR-2144 InternalValue refactoring

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@784013 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.commons.value.ValueFactoryQImpl;
-import javax.jcr.Session;
-import javax.jcr.ValueFactory;
-                            
+
-    /**
-     * @param resolver
-     * @return
-     * @throws RepositoryException
-     * @deprecated
-     */
-    public Value toJCRValue(NamePathResolver resolver)
-            throws RepositoryException {
-        ValueFactory vf;
-        if (resolver instanceof Session) {
-            vf = ((Session) resolver).getValueFactory();
-        } else {
-            vf = new ValueFactoryImpl(resolver, null);
-        }
-
-        if (vf instanceof ValueFactoryQImpl) {
-            return ((ValueFactoryQImpl) vf).createValue(this);
-        } else {
-            switch (type) {
-                case PropertyType.BINARY:
-                    return vf.createValue((BLOBFileValue) val);
-                case PropertyType.BOOLEAN:
-                    return vf.createValue((Boolean) val);
-                case PropertyType.DATE:
-                    return vf.createValue((Calendar) val);
-                case PropertyType.DOUBLE:
-                    return vf.createValue((Double) val);
-                case PropertyType.LONG:
-                    return vf.createValue(((Long) val).longValue());
-                case PropertyType.DECIMAL:
-                    return vf.createValue((BigDecimal) val);
-                case PropertyType.REFERENCE:
-                    return vf.createValue(val.toString(), PropertyType.REFERENCE);
-                case PropertyType.WEAKREFERENCE:
-                    return vf.createValue(val.toString(), PropertyType.WEAKREFERENCE);
-                case PropertyType.URI:
-                    return vf.createValue(val.toString(),  PropertyType.URI);
-                case PropertyType.PATH:
-                    return vf.createValue(resolver.getJCRPath((Path) val), PropertyType.PATH);
-                case PropertyType.NAME:
-                    return vf.createValue(resolver.getJCRName((Name) val), PropertyType.NAME);
-                case PropertyType.STRING:
-                    return vf.createValue((String) val);
-                default:
-                    throw new RepositoryException("illegal internal value type");
-            }
-        }
-    }
