JCR-2108: JSR 283 Observation   (work in progress)

- initial draft for simple 283 observation extensions
- TODO: eventjournal, iterator.getDate ....
- TODO: jcr-server still ignores 283 extensions

- in addition: removed tmp-dependency in spi2jcr/pom.xml

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@781054 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.QValue;
+import org.apache.jackrabbit.spi.QValueFactory;
+import javax.jcr.PropertyType;
+import java.util.HashMap;
+import java.util.Map;
-            | javax.jcr.observation.Event.PROPERTY_REMOVED;
+            | javax.jcr.observation.Event.PROPERTY_REMOVED
+            | javax.jcr.observation.Event.NODE_MOVED
+            | javax.jcr.observation.Event.PERSIST;
+    private final QValueFactory qValueFactory;
+
+     * @param qValueFactory
+                      QValueFactory qValueFactory,
+        this.qValueFactory = qValueFactory;
+                int type = e.getType();
+
-                ItemId itemId = null;
+                String identifier = e.getIdentifier();
+                ItemId itemId;
-                switch (e.getType()) {
-                    case Event.NODE_ADDED:
+                if (identifier != null) {
+                    itemId = idFactory.fromJcrIdentifier(e.getIdentifier());
+                    try {
-                    case Event.NODE_REMOVED:
-                        itemId = idFactory.createNodeId((String) null, p);
-                        break;
-                    case Event.PROPERTY_ADDED:
-                    case Event.PROPERTY_CHANGED:
-                        node = session.getItem(e.getPath()).getParent();
-                    case Event.PROPERTY_REMOVED:
-                        itemId = idFactory.createPropertyId(parentId,
-                                p.getNameElement().getName());
-                        break;
+                    } catch (RepositoryException re) {
+                        // ignore. TODO improve
+                    }
+                } else {
+                    switch (type) {
+                        case Event.NODE_ADDED:
+                        case Event.NODE_MOVED:
+                            node = session.getItem(e.getPath()).getParent();
+                        case Event.NODE_REMOVED:
+                            itemId = idFactory.createNodeId((String) null, p);
+                            break;
+                        case Event.PROPERTY_ADDED:
+                        case Event.PROPERTY_CHANGED:
+                            node = session.getItem(e.getPath()).getParent();
+                        case Event.PROPERTY_REMOVED:
+                            itemId = idFactory.createPropertyId(parentId,
+                                    p.getNameElement().getName());
+                            break;
+                        case Event.PERSIST:
+                        default:
+                            itemId = null;
+                    }
+
+                Map<Name, QValue> info = new HashMap();
+                Map jcrInfo = e.getInfo();
+                for (Iterator it = jcrInfo.keySet().iterator(); it.hasNext();) {
+                    String key = it.next().toString();
+                    Name name = resolver.getQName(key);
+                    // TODO: review again. how to determine value type?
+                    QValue v = qValueFactory.create(jcrInfo.get(key).toString(), PropertyType.STRING);
+                    info.put(name, v);
+
+                }
-                        nodeTypeName, mixinTypes, e.getUserID());
+                        nodeTypeName, mixinTypes, e.getUserID(), e.getUserData(), e.getDate(), info);
