JCR-2085: test case (TCK) maintenance for JCR 2.0
- move ValueFactory field to AbstractJCRTest
- more QOM tests
- use RepositoryException instead of IOException in constraints

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@784760 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.IOException;
-
-import org.apache.jackrabbit.core.query.lucene.Util;
-     * @throws IOException if an error occurs while reading.
+     * @throws RepositoryException if an error occurs while reading.
-                                          EvaluationContext context)
-            throws IOException {
+                                                EvaluationContext context)
+            throws RepositoryException {
-            throw Util.createIOException(e);
+            throw new RepositoryException(e);
-     * @throws IOException if an error occurs while reading.
+     * @throws RepositoryException if an error occurs while reading.
-            throws IOException {
+            throws RepositoryException {
-        } catch (RepositoryException e) {
-            throw Util.createIOException(e);
-            throws IOException {
+            throws RepositoryException {
-            try {
-                if (prop.getDefinition().isMultiple()) {
-                    return prop.getValues();
-                } else {
-                    return new Value[]{prop.getValue()};
-                }
-            } catch (RepositoryException e) {
-                throw Util.createIOException(e);
+            if (prop.getDefinition().isMultiple()) {
+                return prop.getValues();
+            } else {
+                return new Value[]{prop.getValue()};
