JCR-1593 JSR 283: Simple versioning
JCR-2058 JSR 283: VersionManager and new versioning methods


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@765556 13f79535-47bb-0310-9956-ffa450edef68

-     * @param session
+     * @param session workspace session
-     * @param node
-     * @return
-     * @throws RepositoryException
+     * @param node node to checkin
+     * @return the newly created version
+     * @throws RepositoryException if an error occurs
-     * @param history
-     * @param versionName
-     * @throws RepositoryException
+     * @param history version history to remove the version from
+     * @param versionName name of the version
+     * @throws RepositoryException if an error occurs
-     * @param history
-     * @param version
-     * @param label
-     * @param move
-     * @return
-     * @throws RepositoryException
+     * @param history version history
+     * @param version name of the version
+     * @param label new label
+     * @param move if <code>true</code> label will be moved
+     * @return the version that had the label or <code>null</code>
+     * @throws RepositoryException if an error occurs
-     * @param id
+     * @param id id of the version history
-     * @throws RepositoryException
+     * @throws RepositoryException if an error occurs
+     * Returns the version history for the versionable node with the given id.
+     *
+     * @param id id of the node to retrieve the version history for
+     * @return the version history
+     * @throws RepositoryException if an error occurs or the history does not exit
+     */
+    InternalVersionHistory getVersionHistoryOfNode(NodeId id)
+            throws RepositoryException;
+
+    /**
-     * @param id
+     * @param id id of the version to retrieve
-     * @throws RepositoryException
+     * @throws RepositoryException if an error occurs
+     * Returns the head version of the node with the given id. this is always
+     * the last of all versions. this only works correctly for liner version
+     * graphs (i.e. simple versioning)
+     *
+     * @param id id of the node to retrieve the version for
+     * @return the version.
+     * @throws RepositoryException if an error occurs
+     */
+    InternalVersion getHeadVersionOfNode(NodeId id) throws RepositoryException;
+
+    /**
