work in progress

- ChangeLog: add target (item to be saved)
- TransientItemStateManager: changing itemstate from new to existing => needs to connect to overlayed state
- TransientISFactory move out of TransientISM
- RepositoryServiceImpl: simplify execution of wsp-operations
- Initial draft for observation
- WorkspaceManager: seperate notification of events resulting from transient modifications.
- WorkspaceManager: don't report events from wsp-operations as external mods.
- IteratorHelper; add EMPTY constant
- Event: add constant for ALL events

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@451313 13f79535-47bb-0310-9956-ffa450edef68

-public class WorkspaceItemStateManager
-        extends CachingItemStateManager
-        implements InternalEventListener {
+public class WorkspaceItemStateManager extends CachingItemStateManager
+    implements InternalEventListener {
-     * accordingly.
+     * accordingly. Note that this performed for both local and non-local changes,
+     * since workspace operations are reported as local changes as well and
+     * might have invoked changes (autocreated items etc.).
+     *
-        // if events origin from local changes then
-        // cache does not need invalidation
-        if (isLocal) {
-            return;
-        }
-
+        if (eventList.isEmpty()) {
+            return;
+        }
+
+    public void onEvent(EventIterator events, ChangeLog changeLog) {
+        if (changeLog == null) {
+            throw new IllegalArgumentException("ChangeLog must not be null.");
+        }
+        // now we need to apply the transient changes in changeLog to
+        // the ItemStates in the workspace layer
+        changeLog.push();
+        changeLog.persisted();
+    }
