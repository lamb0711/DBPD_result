- fixing latest locking issues
- fixing version items refresh

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@157083 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.Constants;
-public class VersionManagerImpl implements VersionManager {
+public class VersionManagerImpl implements VersionManager, Constants, InternalVersionItemListener {
-        try {
-            virtProvider.getItemState(new NodeId(VERSION_STORAGE_NODE_UUID)).discard();
-        } catch (ItemStateException e) {
-            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
-        }
+        history.addListener(this);
+        onVersionStorageChanged();
-        return vMgr.getVersionHistory(id);
+        InternalVersionHistory hist = vMgr.getVersionHistory(id);
+        if (hist != null) {
+            hist.addListener(this);
+        }
+        return hist;
-        return vMgr.getVersion(id);
+        InternalVersion vers = vMgr.getVersion(id);
+        if (vers != null) {
+            vers.addListener(this);
+        }
+        return vers;
-        return vMgr.getItemByExternal(id);
+        InternalVersionItem item = vMgr.getItemByExternal(id);
+        if (item != null) {
+            item.addListener(this);
+        }
+        return item;
-        try {
-            virtProvider.getItemState(new NodeId(version.getVersionHistory().getId())).discard();
-        } catch (ItemStateException e) {
-            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
-        }
+        version.addListener(this);
+
+    /**
+     * {@inheritDoc}
+     */
+    public void itemModifed(InternalVersionItem item) {
+        try {
+            virtProvider.getItemState(new NodeId(item.getId())).discard();
+        } catch (ItemStateException e) {
+            log.error("Error while refreshing virtual item.", e);
+        }
+    }
+
+    /**
+     * Flushes the virtual node state information of the version storage
+     */
+    public void onVersionStorageChanged() {
+        try {
+            virtProvider.getItemState(new NodeId(VERSION_STORAGE_NODE_UUID)).discard();
+        } catch (ItemStateException e) {
+            log.error("Error while refreshing virtual version storage.", e);
+        }
+    }
