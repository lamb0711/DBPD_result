JCR-1188 WebDAV: Allow for Extensions of MimeResolver in the Configuration.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@588236 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.server.io.MimeResolver;
+import java.util.Properties;
+    private MimeResolver mimeResolver;
-     * &lt;!ELEMENT config (iomanager, propertymanager, (collection | noncollection)?, filter?) &gt;
+     * &lt;!ELEMENT config (iomanager, propertymanager, (collection | noncollection)?, filter?, mimetypeproperties?) &gt;
+     * &lt;!ELEMENT mimetypeproperties (mimemapping*, defaultmimetype) &gt;
+     * &lt;!ELEMENT mimemapping &gt;
+     *    &lt;!ATTLIST mimemapping
+     *      extension  CDATA #REQUIRED
+     *      mimetype  CDATA #REQUIRED
+     *    &gt;
+     * &lt;!ELEMENT defaultmimetype (CDATA) &gt;
+            // iomanager config entry
+            // propertymanager config entry
+            // collection/non-collection config entry
+            // filter config entry
+
+            // optional mimetype properties
+            Properties properties = new Properties();
+            String defaultMimetype = null;
+            el = DomUtil.getChildElement(config, "mimetypeproperties", null);
+            if (el != null) {
+                defaultMimetype = DomUtil.getChildText(el, "defaultmimetype", null);
+                ElementIterator it = DomUtil.getChildren(el, "mimemapping", null);
+                while (it.hasNext()) {
+                    Element mimeMapping = it.nextElement();
+                    String extension = DomUtil.getAttribute(mimeMapping, "extension", null);
+                    String mimetype = DomUtil.getAttribute(mimeMapping, "mimetype", null);
+                    properties.put(extension, mimetype);
+                }
+            }
+            mimeResolver = new MimeResolver(properties, defaultMimetype);
+
+    /**
+     *
+     * @return
+     */
+    public MimeResolver getMimeResolver() {
+        return mimeResolver;
+    }
