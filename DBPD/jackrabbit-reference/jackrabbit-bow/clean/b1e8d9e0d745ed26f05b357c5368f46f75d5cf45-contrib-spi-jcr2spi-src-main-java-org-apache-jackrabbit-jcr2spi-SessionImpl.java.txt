work in progress

- replace ItemImpl by Item in ItemManager interface and adjust
  usages.
- change all setters on ItemState and derived classes from public to
  package private
- NodeState: use collection return value instead of set/list whereever possible
- WorkspaceManager: put ItemStateFactory to a separate class and
  remove unused inner class NodeReferenceImpl 
- add methods to NodeState/PropertyState that avoids return a null
  QItemDefinition and remove corresponding methods from NodeTypeManagerImpl
- remove ItemDefinitionManager.
- VersionHistoryImpl: add safety check if cne for root version really exists
- Fix ImporterImpl: ItemState.getDefinition() may return 'null' value.
  use method instead, that sets the definition if it is still missing.
- javadoc and code formatting


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@430031 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.jcr2spi.nodetype.ItemDefinitionManager;
+import org.apache.jackrabbit.jcr2spi.nodetype.NodeTypeRegistry;
+import org.apache.jackrabbit.name.NameFormat;
+import org.apache.jackrabbit.name.NoPrefixDeclaredException;
-        NodeImpl node = getNodeById(getIdFactory().createNodeId(uuid));
-        if (node.isNodeType(QName.MIX_REFERENCEABLE)) {
+        Node node = getNodeById(getIdFactory().createNodeId(uuid));
+        if (node instanceof NodeImpl && ((NodeImpl)node).isNodeType(QName.MIX_REFERENCEABLE)) {
+            // fall back
+            try {
+                String mixReferenceable = NameFormat.format(QName.MIX_REFERENCEABLE, getNamespaceResolver());
+                if (node.isNodeType(mixReferenceable)) {
+                    return node;
+                }
+            } catch (NoPrefixDeclaredException e) {
+                // should not occur.
+                throw new RepositoryException(e);
+            }
-    private NodeImpl getNodeById(NodeId id) throws ItemNotFoundException, RepositoryException {
+    private Node getNodeById(NodeId id) throws ItemNotFoundException, RepositoryException {
-            return (NodeImpl) getItemManager().getItem(state);
+            Item item = getItemManager().getItem(state);
+            if (item.isNode()) {
+                return (Node) item;
+            } else {
+                log.error("NodeId '" + id + " does not point to a Node");
+                throw new ItemNotFoundException(id.toString());
+            }
-    public ItemDefinitionManager getItemDefinitionManager() {
-        return ntManager;
+    public NodeTypeRegistry getNodeTypeRegistry() {
+        return workspace.getNodeTypeRegistry();
