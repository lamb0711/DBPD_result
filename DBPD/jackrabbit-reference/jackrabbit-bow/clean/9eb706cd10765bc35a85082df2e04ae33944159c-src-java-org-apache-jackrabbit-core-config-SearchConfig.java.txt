Refactoring step 1 (JCR-53)
 - Moved common configuration fields to a new BeanConfig base class
 - Moved XML parsing to static factory methods

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@156047 13f79535-47bb-0310-9956-ffa450edef68

-import org.jdom.Element;
-import org.apache.jackrabbit.core.fs.FileSystem;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Properties;
-import java.util.Map;
-import java.util.HashMap;
-import java.util.Collections;
-import java.util.List;
-import java.util.Iterator;
+
+import org.apache.jackrabbit.core.fs.FileSystem;
+import org.jdom.Element;
-public class SearchConfig {
+public class SearchConfig extends BeanConfig {
-    /** Parameters for configuring the search index. */
-    private Map params = new HashMap();
-
-    /**
-     * The FQN of the class implementing the
-     * {@link org.apache.jackrabbit.core.search.QueryHandler} interface.
-     */
-    private final String handlerClassName;
-
-    SearchConfig(Element config, Map vars) throws RepositoryException {
+    static SearchConfig parse(Element config, Map vars) throws RepositoryException {
-        this.fs = AbstractConfig.createFileSystem(fsElement, vars);
+        FileSystem fs = AbstractConfig.createFileSystem(fsElement, vars);
+        Properties params = new Properties();
-        // seal
-        params = Collections.unmodifiableMap(params);
-        handlerClassName = config.getAttributeValue(AbstractConfig.CLASS_ATTRIB, 
+        String handlerClassName = config.getAttributeValue(AbstractConfig.CLASS_ATTRIB,
+
+        return new SearchConfig(fs, handlerClassName, params);
-    /**
-     * Returns configuration parameters. Each entry in the map represents
-     * a name value pair. Where both name and values are <code>String</code>s.
-     * @return Map of config parameters.
-     */
-    public Map getParameters() {
-        return params;
+    public SearchConfig(FileSystem fs, String className, Properties properties) {
+        super(className, properties);
+        this.fs = fs;
-        return handlerClassName;
+        return getClassName();
