 JCR-1588: JSR 283: Access Control

- move common acl code to abstract base class
- let group principals have deny entries again 
- add more tests


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@801594 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.security.authorization.AbstractACLTemplate;
-import java.security.acl.Group;
-class ACLTemplate implements JackrabbitAccessControlList {
+class ACLTemplate extends AbstractACLTemplate {
-     * Path of the node this ACL template has been created for.
-     */
-    private final String path;
-
-    /**
-     * The value factory
-     */
-    private final ValueFactory valueFactory;
-
-    /**
-        this.path = path;
+        super(path, valueFactory);
+
-        this.valueFactory = valueFactory;
+        super((aclNode != null) ? aclNode.getParent().getPath() : null, (aclNode != null) ? aclNode.getSession().getValueFactory() : null);
-        path = aclNode.getParent().getPath();
-        valueFactory = sImpl.getValueFactory();
+    //------------------------------------------------< AbstractACLTemplate >---
-     *
-     * @param principal
-     * @param privileges
-     * @param isAllow
-     * @throws AccessControlException
+     * @see AbstractACLTemplate#checkValidEntry(java.security.Principal, javax.jcr.security.Privilege[], boolean, java.util.Map) 
-    private void checkValidEntry(Principal principal, Privilege[] privileges, boolean isAllow) throws AccessControlException {
+    protected void checkValidEntry(Principal principal, Privilege[] privileges,
+                                 boolean isAllow, Map<String, Value> restrictions)
+            throws AccessControlException {
+        if (restrictions != null && !restrictions.isEmpty()) {
+            throw new AccessControlException("This AccessControlList does not allow for additional restrictions.");
+        }
+
-        // additional validation: a group may not have 'denied' permissions
-        if (!isAllow && principal instanceof Group) {
-            throw new AccessControlException("For group principals permissions can only be added but not denied.");
-        }
-     * @see javax.jcr.security.AccessControlList#addAccessControlEntry(Principal, Privilege[])
-     */
-    public boolean addAccessControlEntry(Principal principal, Privilege[] privileges)
-            throws AccessControlException, RepositoryException {
-        return addEntry(principal, privileges, true, Collections.EMPTY_MAP);
-    }
-
-    /**
-    //-----------------------------------------------------< JackrabbitAccessControlList >---
-    /**
-     * @see org.apache.jackrabbit.api.security.JackrabbitAccessControlList#getPath()
-     */
-    public String getPath() {
-        return path;
-    }
-
+    //----------------------------------------< JackrabbitAccessControlList >---
-     * @see org.apache.jackrabbit.api.security.JackrabbitAccessControlList#addEntry(Principal, Privilege[], boolean)
-     */
-    public boolean addEntry(Principal principal, Privilege[] privileges, boolean isAllow)
-            throws AccessControlException, RepositoryException {
-        return addEntry(principal, privileges, isAllow, null);
-    }
-
-    /**
-        if (restrictions != null && !restrictions.isEmpty()) {
-            throw new AccessControlException("This AccessControlList does not allow for additional restrictions.");
-        }
-
-        checkValidEntry(principal, privileges, isAllow);
+        checkValidEntry(principal, privileges, isAllow, restrictions);
