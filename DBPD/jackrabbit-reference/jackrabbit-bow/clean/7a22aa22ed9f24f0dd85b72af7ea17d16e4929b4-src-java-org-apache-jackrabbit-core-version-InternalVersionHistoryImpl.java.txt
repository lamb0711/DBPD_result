Removed o.a.j.Constants and moved all name constants to o.a.j.name.QName in order to simplify package dependencies. Also added two new constants: QName.EMPTY and QName.WILDCARD.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@293034 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.Constants;
-        implements InternalVersionHistory, Constants {
+        implements InternalVersionHistory {
-        versionableId = (String) node.getPropertyValue(JCR_VERSIONABLEUUID).internalValue();
+        versionableId = (String) node.getPropertyValue(QName.JCR_VERSIONABLEUUID).internalValue();
-            if (child.getName().equals(JCR_VERSIONLABELS)) {
+            if (child.getName().equals(QName.JCR_VERSIONLABELS)) {
-        Value[] preds = src.getProperty(JCR_PREDECESSORS).getValues();
+        Value[] preds = src.getProperty(QName.JCR_PREDECESSORS).getValues();
-        NodeStateEx vNode = node.addNode(name, NT_VERSION, versionId, true);
+        NodeStateEx vNode = node.addNode(name, QName.NT_VERSION, versionId, true);
-        vNode.setPropertyValue(JCR_CREATED, InternalValue.create(Calendar.getInstance()));
-        vNode.setPropertyValues(JCR_PREDECESSORS, PropertyType.REFERENCE, predecessors);
+        vNode.setPropertyValue(QName.JCR_CREATED, InternalValue.create(Calendar.getInstance()));
+        vNode.setPropertyValues(QName.JCR_PREDECESSORS, PropertyType.REFERENCE, predecessors);
-        vNode.setPropertyValues(JCR_SUCCESSORS, PropertyType.REFERENCE, InternalValue.EMPTY_ARRAY);
+        vNode.setPropertyValues(QName.JCR_SUCCESSORS, PropertyType.REFERENCE, InternalValue.EMPTY_ARRAY);
-        InternalFrozenNodeImpl.checkin(vNode, JCR_FROZENNODE, src);
+        InternalFrozenNodeImpl.checkin(vNode, QName.JCR_FROZENNODE, src);
-        NodeStateEx pNode = parent.addNode(name, NT_VERSIONHISTORY, historyId, true);
+        NodeStateEx pNode = parent.addNode(name, QName.NT_VERSIONHISTORY, historyId, true);
-        pNode.setPropertyValue(JCR_VERSIONABLEUUID, InternalValue.create(nodeState.getUUID()));
+        pNode.setPropertyValue(QName.JCR_VERSIONABLEUUID, InternalValue.create(nodeState.getUUID()));
-        NodeStateEx lNode = pNode.addNode(JCR_VERSIONLABELS, NT_VERSIONLABELS, null, false);
+        NodeStateEx lNode = pNode.addNode(QName.JCR_VERSIONLABELS, QName.NT_VERSIONLABELS, null, false);
-        NodeStateEx vNode = pNode.addNode(JCR_ROOTVERSION, NT_VERSION, versionId, true);
+        NodeStateEx vNode = pNode.addNode(QName.JCR_ROOTVERSION, QName.NT_VERSION, versionId, true);
-        vNode.setPropertyValue(JCR_CREATED, InternalValue.create(Calendar.getInstance()));
-        vNode.setPropertyValues(JCR_PREDECESSORS, PropertyType.REFERENCE, InternalValue.EMPTY_ARRAY);
-        vNode.setPropertyValues(JCR_SUCCESSORS, PropertyType.REFERENCE, InternalValue.EMPTY_ARRAY);
+        vNode.setPropertyValue(QName.JCR_CREATED, InternalValue.create(Calendar.getInstance()));
+        vNode.setPropertyValues(QName.JCR_PREDECESSORS, PropertyType.REFERENCE, InternalValue.EMPTY_ARRAY);
+        vNode.setPropertyValues(QName.JCR_SUCCESSORS, PropertyType.REFERENCE, InternalValue.EMPTY_ARRAY);
-        NodeStateEx node = vNode.addNode(JCR_FROZENNODE, NT_FROZENNODE, null, true);
+        NodeStateEx node = vNode.addNode(QName.JCR_FROZENNODE, QName.NT_FROZENNODE, null, true);
-        node.setPropertyValue(JCR_FROZENUUID, InternalValue.create(nodeState.getUUID()));
-        node.setPropertyValue(JCR_FROZENPRIMARYTYPE,
+        node.setPropertyValue(QName.JCR_FROZENUUID, InternalValue.create(nodeState.getUUID()));
+        node.setPropertyValue(QName.JCR_FROZENPRIMARYTYPE,
-            node.setPropertyValues(JCR_FROZENMIXINTYPES, PropertyType.NAME, ivalues);
+            node.setPropertyValues(QName.JCR_FROZENMIXINTYPES, PropertyType.NAME, ivalues);
