JCR-1181: Use the new iterator adapters instead of IteratorHelper

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@603822 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.util.IteratorHelper;
+import org.apache.jackrabbit.commons.iterator.RangeIteratorAdapter;
+import org.apache.jackrabbit.commons.iterator.RangeIteratorDecorator;
-import javax.jcr.query.RowIterator;
-import java.util.Iterator;
-        final String[] columnJcrNames;
-        final RowIterator rows;
-            columnJcrNames = result.getColumnNames();
-            rows = result.getRows();
-        } catch (RepositoryException e) {
-            return IteratorHelper.EMPTY;
-        }
-        return new IteratorHelper(new Iterator() {
-            public void remove() {
-                rows.remove();
-            }
-
-            public boolean hasNext() {
-                return rows.hasNext();
-            }
-
-            public Object next() {
-                try {
-                    Row row = rows.nextRow();
-                    return new QueryResultRowImpl(row, columnJcrNames, scoreName,
-                            pathName, idFactory, resolver, qValueFactory);
-                } catch (RepositoryException e) {
-                    log.warn("Exception when creating QueryResultRowImpl: " +
-                            e.getMessage(), e);
-                    throw new NoSuchElementException();
+            final String[] columnJcrNames = result.getColumnNames();
+            return new RangeIteratorDecorator(result.getRows()) {
+                public Object next() {
+                    try {
+                        return new QueryResultRowImpl(
+                                (Row) super.next(), columnJcrNames, scoreName,
+                                pathName, idFactory, resolver, qValueFactory);
+                    } catch (RepositoryException e) {
+                        log.warn("Exception when creating QueryResultRowImpl: " +
+                                e.getMessage(), e);
+                        throw new NoSuchElementException();
+                    }
-            }
-        });
+            };
+        } catch (RepositoryException e) {
+            return RangeIteratorAdapter.EMPTY;
+        }
