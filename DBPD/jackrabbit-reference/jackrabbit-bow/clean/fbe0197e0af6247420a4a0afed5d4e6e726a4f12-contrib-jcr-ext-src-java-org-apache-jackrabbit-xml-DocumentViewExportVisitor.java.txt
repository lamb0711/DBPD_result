JCR-EXT: Minor documentation and code style updates.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@169200 13f79535-47bb-0310-9956-ffa450edef68

- * Session.exportDocView(String, ContentHandler, boolean, boolean)
+ * Session.exportDocumentView(String, ContentHandler, boolean, boolean)
- *     public void exportDocView(String absPath, ContentHandler handler,
- *             boolean skipBinary, boolean noRecurse) throws
- *             InvalidSerializedDataException, PathNotFoundException,
- *             SAXException, RepositoryException {
+ *     public void exportDocumentView(
+ *             String absPath, ContentHandler handler,
+ *             boolean skipBinary, boolean noRecurse)
+ *             throws PathNotFoundException, SAXException, RepositoryException {
- * Session.exportDocView(String, OutputStream, boolean, boolean)
+ * Session.exportDocumentView(String, OutputStream, boolean, boolean)
- *     public void exportDocView(String absPath, OutputStream output,
- *             boolean skipBinary, boolean noRecurse) throws
- *             InvalidSerializedDataException, PathNotFoundException,
- *             IOException, RepositoryException {
+ *     public void exportDocumentView(
+ *             String absPath, OutputStream output,
+ *             boolean skipBinary, boolean noRecurse)
+ *             throws PathNotFoundException, IOException, RepositoryException {
- *             exportDocView(absPath, serializer.asContentHandler(),
+ *             exportDocView(
+ *                     absPath, serializer.asContentHandler(),
- *         } catch (SAXException ex) {
- *             throw new IOException(ex.getMessage());
+ *         } catch (SAXException e) {
+ *             throw new IOException(e.getMessage());
- * @author Jukka Zitting
- * @see Session#exportDocView(String, ContentHandler, boolean, boolean)
- * @see Session#exportDocView(String, java.io.OutputStream, boolean, boolean)
+ * @see Session#exportDocumentView(String, ContentHandler, boolean, boolean)
+ * @see Session#exportDocumentView(String, java.io.OutputStream, boolean, boolean)
-    private ContentHandler handler;
+    private final ContentHandler handler;
-    private boolean skipBinary;
+    private final boolean skipBinary;
-    private boolean noRecurse;
+    private final boolean noRecurse;
-     * {@inheritDoc}
+     *
+     * @param property ignored property
+     * @see ItemVisitor#visit(Property)
-    public void visit(Property property) throws RepositoryException {
+    public void visit(Property property) {
+     * @see ItemVisitor#visit(Node)
+     * @see #includeProperty(Property)
+     * @see #includeNode(Node)
-        } catch (SAXException ex) {
-            throw new RepositoryException(ex);
+        } catch (SAXException e) {
+            throw new RepositoryException(e);
-        return Name.parseJCRName(item.getSession(), name);
+        return Name.fromJCRName(item.getSession(), name);
