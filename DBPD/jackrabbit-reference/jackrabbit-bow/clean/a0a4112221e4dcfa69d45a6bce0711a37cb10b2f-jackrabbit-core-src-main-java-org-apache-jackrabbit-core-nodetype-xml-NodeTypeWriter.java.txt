JCR-1591: JSR 283: NodeType Management (WIP...)
JCR-2091: Searchability settings in PropertyDefinition (WIP...)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@774832 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.commons.query.qom.Operator;
+import javax.jcr.query.qom.QueryObjectModelConstants;
+import java.util.List;
+import java.util.Arrays;
+                Constants.ISQUERYABLE_ATTRIBUTE, def.isQueryable());
+        builder.setAttribute(
+                Constants.ISABSTRACT_ATTRIBUTE, def.isAbstract());
+        builder.setAttribute(
+                Constants.ISFULLTEXTSEARCHABLE_ATTRIBUTE, def.isFullTextSearchable());
+        builder.setAttribute(
+                Constants.ISQUERYORDERABLE_ATTRIBUTE, def.isQueryOrderable());
+        // TODO do properly...
+        String[] qops = def.getAvailableQueryOperators();
+        if (qops != null && qops.length > 0) {
+            List ops = Arrays.asList(qops);
+            List defaultOps = Arrays.asList(Operator.getAllQueryOperators());
+            if (!ops.containsAll(defaultOps)) {
+                StringBuffer sb = new StringBuffer();
+                for (int i = 0; i < qops.length; i++) {
+                    if (i > 0) {
+                        sb.append(' ');
+                    }
+                    if (qops[i].equals(QueryObjectModelConstants.JCR_OPERATOR_EQUAL_TO)) {
+                        sb.append(Constants.EQ_ENTITY);
+                    } else if (qops[i].equals(QueryObjectModelConstants.JCR_OPERATOR_NOT_EQUAL_TO)) {
+                        sb.append(Constants.NE_ENTITY);
+                    } else if (qops[i].equals(QueryObjectModelConstants.JCR_OPERATOR_GREATER_THAN)) {
+                        sb.append(Constants.GT_ENTITY);
+                    } else if (qops[i].equals(QueryObjectModelConstants.JCR_OPERATOR_GREATER_THAN_OR_EQUAL_TO)) {
+                        sb.append(Constants.GE_ENTITY);
+                    } else if (qops[i].equals(QueryObjectModelConstants.JCR_OPERATOR_LESS_THAN)) {
+                        sb.append(Constants.LT_ENTITY);
+                    } else if (qops[i].equals(QueryObjectModelConstants.JCR_OPERATOR_LESS_THAN_OR_EQUAL_TO)) {
+                        sb.append(Constants.LE_ENTITY);
+                    } else if (qops[i].equals(QueryObjectModelConstants.JCR_OPERATOR_LIKE)) {
+                        sb.append(Constants.LIKE_ENTITY);
+                    }
+                }
+                builder.setAttribute(
+                        Constants.AVAILABLEQUERYOPERATORS_ATTRIBUTE, sb.toString());
+            }
+        }
+
+        builder.setAttribute(
