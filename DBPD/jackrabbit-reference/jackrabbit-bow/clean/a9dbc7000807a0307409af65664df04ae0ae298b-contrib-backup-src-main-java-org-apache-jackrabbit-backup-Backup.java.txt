JCR-442: Committed patch-060808-backup.txt from Nicolas.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@429606 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.FileNotFoundException;
-    RepositoryImpl repo;
-    BackupConfig conf;
-    Session session;
+    private RepositoryImpl repo;
+    private BackupConfig conf;
+    private Session session;;
+    private SimpleCredentials credentials;
-     *
+     * @param login
+     * @param password
-     * @param name Name of the resource to backup. Unique. Useful?
-     * @throws RepositoryException 
-     * @throws LoginException 
+     * @throws RepositoryException
+     * @throws LoginException
-    //TODO Useful?
-    public Backup(RepositoryImpl repo, BackupConfig conf) throws LoginException, RepositoryException {
+    public Backup(RepositoryImpl repo, BackupConfig conf, String login, String password) 
+                                                throws LoginException, RepositoryException {
-        this.session = this.repo.login(
-                new SimpleCredentials(this.conf.getLogin(), this.conf.getPassword().toCharArray()));
-        
+        this.credentials =  new SimpleCredentials(login, password.toCharArray());
+        this.session = this.repo.login(this.credentials);
+    }
+
+    /**
+     * Used only by BackupManager. No attributes are initialized.
+     */
+    protected Backup() {
-    public Backup() {
-        
+    /**
+     * This constructor is used explicitly for restore operations
+     * 
+     * @param login
+     * @param password
+     */
+    protected Backup(String login, String password) {
+        this.credentials =  new SimpleCredentials(login, password.toCharArray());
-    
-    public void init(RepositoryImpl repo, BackupConfig conf) throws LoginException, RepositoryException {
+    /**
+     * Used by BackupManager with the empty constructor.
+     *
+     * @param repo
+     * @param conf
+     * @param login
+     * @param password
+     * @throws LoginException
+     * @throws RepositoryException
+     */
+
+    protected void init(RepositoryImpl repo, BackupConfig conf, String login, String password) throws LoginException, RepositoryException {
-        this.session = this.repo.login(
-                new SimpleCredentials(this.conf.getLogin(), this.conf.getPassword().toCharArray()));
+        this.credentials =  new SimpleCredentials(login, password.toCharArray());
+        this.session = this.repo.login(this.credentials);
-      
+
+    protected void setRepo(RepositoryImpl repo) {
+        this.repo = repo;
+    }
+
-     * 
+     *
-     * 
-     *  
-     * 
+     *
-     * Send it to out      
+     * Send it to out
+   /**
+    * Backup the resource designated by this class to h from the current repository
+    * @param h
+    * @throws FileNotFoundException
+    * @throws RepositoryException
+    * @throws IOException
+    *
+    */
-    public abstract void restore(BackupIOHandler h);
-    public Session getSession() {
+    /**
+     * Restore the resource designated by this class from h to the current repository
+     * @param h
+     * @throws FileNotFoundException
+     * @throws RepositoryException
+     * @throws IOException
+     */
+    public abstract void restore(BackupIOHandler h) throws FileNotFoundException, RepositoryException, IOException;
+
+    protected Session getSession() {
-    //TODO call sesssion.logout or useless?
-    
+    protected BackupConfig getConf() {
+        return conf;
+    }
+    protected void setConf(BackupConfig conf2) {
+        this.conf = conf2;
+    }
+
+    protected SimpleCredentials getCredentials() {
+        return credentials;
+    }
+
+    protected void setCredentials(SimpleCredentials cred) {
+        this.credentials = cred;
+    }
+
+    public void finalize() {
+        this.session.logout();
+    }
