[JCR-000] Adjusting to spec 0.16.4 changes
[JCR-107] Typos in jcr-server io package javadocs
[JCR-104] Contrib/Jcr-Server: Improve package structure


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@161660 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.List;
-public class MultiStatus {
+public class MultiStatus implements DavConstants {
+    private String responseDescription;
-	addResourceProperties(resource, propNameSet, DavConstants.PROPFIND_BY_PROPERTY, depth);
+	addResourceProperties(resource, propNameSet, PROPFIND_BY_PROPERTY, depth);
+     * Returns the multistatus responses present as array.
+     *
+     * @return array of all {@link MultiStatusResponse responses} present in this
+     * multistatus.
+     */
+    public MultiStatusResponse[] getResponses() {
+	return (MultiStatusResponse[]) responses.toArray(new MultiStatusResponse[responses.size()]);
+    }
+
+    /**
+     * Set the response description.
+     *
+     * @param responseDescription
+     */
+    public void setResponseDescription(String responseDescription) {
+        this.responseDescription = responseDescription;
+    }
+
+    /**
+     * Returns the response description.
+     *
+     * @return responseDescription
+     */
+    public String getResponseDescription() {
+	return responseDescription;
+    }
+
+    /**
-	Element multistatus = new Element(DavConstants.XML_MULTISTATUS, DavConstants.NAMESPACE);
+	Element multistatus = new Element(XML_MULTISTATUS, NAMESPACE);
+        if (responseDescription != null) {
+            multistatus.addContent(new Element(XML_RESPONSEDESCRIPTION, NAMESPACE).setText(responseDescription));
+        }
+
+    /**
+     * Build a <code>MultiStatus</code> from the specified xml document.
+     *
+     * @param multistatusDocument
+     * @return new <code>MultiStatus</code> instance.
+     * @throws IllegalArgumentException if the given document is <code>null</code>
+     * or does not provide the required element.
+     */
+    public static MultiStatus createFromXml(Document multistatusDocument) {
+        if (multistatusDocument == null) {
+	    throw new IllegalArgumentException("Cannot create a MultiStatus object from a null xml document.");
+	}
+
+	Element msElem = multistatusDocument.getRootElement();
+	if (!(XML_MULTISTATUS.equals(msElem.getName()) && NAMESPACE.equals(msElem.getNamespace()))) {
+	    throw new IllegalArgumentException("DAV:multistatus element expected.");
+	}
+
+        MultiStatus multistatus = new MultiStatus();
+
+	List respList = msElem.getChildren(XML_RESPONSE, NAMESPACE);
+	Iterator it = respList.iterator();
+	while (it.hasNext()) {
+            MultiStatusResponse response = MultiStatusResponse.createFromXml((Element)it.next());
+            multistatus.addResponse(response);
+	}
+
+	// optional response description on the multistatus element
+	multistatus.setResponseDescription(msElem.getChildText(XML_RESPONSEDESCRIPTION, NAMESPACE));
+        return multistatus;
+    }
