work in progress

- simplify (not yet tested). index is available from position in the linkNode-list


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@482702 13f79535-47bb-0310-9956-ffa450edef68

-            // has same name sibling
-            for (Iterator it = ((List) listOrLinkNode).iterator(); it.hasNext();) {
-                LinkedEntries.LinkNode n = (LinkedEntries.LinkNode) it.next();
-                ChildNodeEntry cne = n.getChildNodeEntry();
-                if (cne.getIndex() == index) {
-                    return n;
-                }
+            // has same name sibling -> check if list size matches
+            int listIndex = index - 1;
+            List lnList = (List) listOrLinkNode;
+            if (listIndex < lnList.size()) {
+                return (LinkedEntries.LinkNode) lnList.get(listIndex);
-        } else {
-            // single child node with this name
-            ChildNodeEntry cne = ((LinkedEntries.LinkNode) listOrLinkNode).getChildNodeEntry();
-            if (cne.getIndex() == index) {
-                return (LinkedEntries.LinkNode) listOrLinkNode;
-            }
+        } else if (index == Path.INDEX_DEFAULT) {
+            // single child node with this name -> matches is requested index
+            // equals to the default index.
+            return (LinkedEntries.LinkNode) listOrLinkNode;
