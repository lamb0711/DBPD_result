JCR-415: Enhance indexing of binary content
- Remove workaround with TextExtractorReader. Binary content is now indexed (text extracted) when really needed.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@489112 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.RepositoryException;
-     * Overwrites the default implementation by adding the document to a pending
-     * list and commits the pending list if needed.
+     * Overwrites the default implementation by adding the node indexer to a
+     * pending list and commits the pending list if needed.
-     * @param doc the document to add to the index.
+     * @param nodeIndexer the node indexer of the node to add.
-    void addDocument(Document doc) throws IOException {
-        Document old = (Document) pending.put(doc.get(FieldNames.UUID), doc);
-        if (old != null) {
-            disposeDocument(old);
-        }
+    void addNode(NodeIndexer nodeIndexer) throws IOException {
+        pending.put(nodeIndexer.getNodeId().getUUID().toString(), nodeIndexer);
-        Document doc = (Document) pending.remove(idTerm.text());
+        NodeIndexer indexer = (NodeIndexer) pending.remove(idTerm.text());
-        if (doc != null) {
-            disposeDocument(doc);
+        if (indexer != null) {
-            Document doc = (Document) it.next();
-            super.addDocument(doc);
+            NodeIndexer indexer = (NodeIndexer) it.next();
+            super.addNode(indexer);
-
-    /**
-     * Disposes the document <code>old</code>. Closes any potentially open
-     * readers held by the document.
-     *
-     * @param old the document to dispose.
-     */
-    private void disposeDocument(Document old) {
-        for (Enumeration e = old.fields(); e.hasMoreElements();) {
-            Field f = (Field) e.nextElement();
-            if (f.readerValue() != null) {
-                try {
-                    f.readerValue().close();
-                } catch (IOException ex) {
-                    log.warn("Exception while disposing index document: " + ex);
-                }
-            }
-        }
-    }
