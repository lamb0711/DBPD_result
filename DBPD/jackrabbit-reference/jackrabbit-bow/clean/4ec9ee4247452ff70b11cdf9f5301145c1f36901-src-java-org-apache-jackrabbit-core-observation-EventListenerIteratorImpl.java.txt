- removed @author and @version (i.e. $Revision & $Id) tags
- removed tab characters from java source code

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47648 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
-import java.util.ArrayList;
- * @author Marcel Reutegger
- * @version $Revision: 1.5 $, $Date: 2004/08/25 16:44:50 $
-	if (session == null) {
-	    throw new NullPointerException("session");
-	}
-	if (sConsumers == null) {
-	    throw new NullPointerException("consumers");
-	}
-	if (aConsumers == null) {
-	    throw new NullPointerException("consumers");
-	}
-	this.session = session;
-	Collection allConsumers = new ArrayList(sConsumers);
-	allConsumers.addAll(aConsumers);
-	this.consumers = allConsumers.iterator();
-	fetchNext();
+        if (session == null) {
+            throw new NullPointerException("session");
+        }
+        if (sConsumers == null) {
+            throw new NullPointerException("consumers");
+        }
+        if (aConsumers == null) {
+            throw new NullPointerException("consumers");
+        }
+        this.session = session;
+        Collection allConsumers = new ArrayList(sConsumers);
+        allConsumers.addAll(aConsumers);
+        this.consumers = allConsumers.iterator();
+        fetchNext();
-	if (next == null) {
-	    throw new NoSuchElementException();
-	}
-	EventListener l = next;
-	fetchNext();
-	pos++;
-	return l;
+        if (next == null) {
+            throw new NoSuchElementException();
+        }
+        EventListener l = next;
+        fetchNext();
+        pos++;
+        return l;
-	while (skipNum-- > 0) {
-	    next();
-	}
+        while (skipNum-- > 0) {
+            next();
+        }
-	return -1;
+        return -1;
-	return pos;
+        return pos;
-	throw new UnsupportedOperationException("EventListenerIterator.remove()");
+        throw new UnsupportedOperationException("EventListenerIterator.remove()");
-	return (next != null);
+        return (next != null);
-	return nextEventListener();
+        return nextEventListener();
-	EventConsumer consumer;
-	next = null;
-	while (next == null && consumers.hasNext()) {
-	    consumer = (EventConsumer) consumers.next();
-	    // only return EventConsumers that belong to our session
-	    if (consumer.getSession().equals(session)) {
-		next = consumer.getEventListener();
-	    }
+        EventConsumer consumer;
+        next = null;
+        while (next == null && consumers.hasNext()) {
+            consumer = (EventConsumer) consumers.next();
+            // only return EventConsumers that belong to our session
+            if (consumer.getSession().equals(session)) {
+                next = consumer.getEventListener();
+            }
-	}
+        }
