JCR-2715: Improved join query performance

Minor fixes and improvements

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1023853 13f79535-47bb-0310-9956-ffa450edef68

+import static javax.jcr.query.qom.QueryObjectModelConstants.JCR_OPERATOR_GREATER_THAN;
+import static javax.jcr.query.qom.QueryObjectModelConstants.JCR_OPERATOR_LESS_THAN;
+import static javax.jcr.query.qom.QueryObjectModelConstants.JCR_OPERATOR_LESS_THAN_OR_EQUAL_TO;
+import static javax.jcr.query.qom.QueryObjectModelConstants.JCR_OPERATOR_LIKE;
+import static javax.jcr.query.qom.QueryObjectModelConstants.JCR_OPERATOR_NOT_EQUAL_TO;
+import javax.jcr.query.qom.BindVariableValue;
+import javax.jcr.query.qom.DescendantNode;
+import javax.jcr.query.qom.FullTextSearch;
+import javax.jcr.query.qom.LowerCase;
+import javax.jcr.query.qom.PropertyExistence;
+import javax.jcr.query.qom.UpperCase;
+            } else if (c.getOperator().equals(JCR_OPERATOR_GREATER_THAN)) {
+                return left + " > " + right;
+            } else if (c.getOperator().equals(JCR_OPERATOR_LESS_THAN)) {
+                return left + " < " + right;
+            } else if (c.getOperator().equals(JCR_OPERATOR_LESS_THAN_OR_EQUAL_TO)) {
+                return left + " <= " + right;
+            } else if (c.getOperator().equals(JCR_OPERATOR_LIKE)) {
+                return left + " LIKE " + right;
+            } else if (c.getOperator().equals(JCR_OPERATOR_NOT_EQUAL_TO)) {
+                return left + " <> " + right;
+        } else if (constraint instanceof DescendantNode) {
+            DescendantNode dn = (DescendantNode) constraint;
+            return "jcr:path LIKE '" + dn.getAncestorPath() + "/%'";
+        } else if (constraint instanceof PropertyExistence) {
+            PropertyExistence pe = (PropertyExistence) constraint;
+            return pe.getPropertyName() + " IS NOT NULL";
+        } else if (constraint instanceof FullTextSearch) {
+            FullTextSearch fts = (FullTextSearch) constraint;
+            String expr = toSqlOperand(fts.getFullTextSearchExpression());
+            return "CONTAINS(" + fts.getPropertyName() + ", " + expr + ")";
-        } else if (operand instanceof Literal) {
-            Literal literal = (Literal) operand;
-            Value value = literal.getLiteralValue();
+        } else if (operand instanceof LowerCase) {
+            LowerCase lc = (LowerCase) operand; 
+            return "LOWER(" + toSqlOperand(lc.getOperand()) + ")";
+        } else if (operand instanceof UpperCase) {
+            UpperCase uc = (UpperCase) operand; 
+            return "UPPER(" + toSqlOperand(uc.getOperand()) + ")";
+        } else if ((operand instanceof Literal)
+                || (operand instanceof BindVariableValue)) {
+            Value value = evaluator.getValue(operand, null);
