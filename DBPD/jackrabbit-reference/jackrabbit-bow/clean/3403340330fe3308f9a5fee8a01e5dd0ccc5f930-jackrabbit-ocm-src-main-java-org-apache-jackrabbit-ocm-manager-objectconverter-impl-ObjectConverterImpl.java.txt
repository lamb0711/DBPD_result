Applying patch for JCR-1624 provided by Stephane Landelle

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@661049 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.ocm.exception.IncorrectPersistentClassException;
-import org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableCollection;
-import org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableObjectsUtil;
+import org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableObjectsUtil;
-
-				bean = proxyManager.createBeanProxy(session, this, beanClass, beanConverter.getPath(session, beanDescriptor, node));
+				if (beanDescriptor.getJcrType() != null && !"".equals(beanDescriptor.getJcrType())) {
+					// If a mapped jcrType has been set, use it as proxy parent class instead of the bean property type.
+					// This way, we can handle proxies when bean property type is an interface.
+					try {
+						String className = mapper.getClassDescriptorByNodeType(beanDescriptor.getJcrType()).getClassName();
+						if (log.isDebugEnabled()) {
+							log.debug("a mapped jcrType has been specified, switching from <" + beanClass + "> to <" + ReflectionUtils.forName(className));
+						}
+						beanClass = ReflectionUtils.forName(className);
+					
+					} catch (IncorrectPersistentClassException e) {
+						if (log.isDebugEnabled()) {
+							log.debug(beanDescriptor.getClassDescriptor().getJcrType() + " is not mapped");
+						}
+					}					
+				}
+
+				bean = proxyManager.createBeanProxy(beanConverter, beanConverter.getPath(session, beanDescriptor, node), session, node, beanDescriptor,  mapper.getClassDescriptorByClass(beanClass), beanClass, bean);
