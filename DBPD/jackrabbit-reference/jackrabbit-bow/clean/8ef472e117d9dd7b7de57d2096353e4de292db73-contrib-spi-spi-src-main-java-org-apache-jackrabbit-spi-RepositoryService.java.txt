work in progress

- some javadoc with Observation features
- add return-value to lock-method

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@478578 13f79535-47bb-0310-9956-ffa450edef68

+     * @return returns the <code>LockInfo</code> associated with this lock.
-    public void lock(SessionInfo sessionInfo, NodeId nodeId, boolean deep, boolean sessionScoped) throws UnsupportedRepositoryOperationException, LockException, AccessDeniedException, InvalidItemStateException, RepositoryException;
+    public LockInfo lock(SessionInfo sessionInfo, NodeId nodeId, boolean deep, boolean sessionScoped) throws UnsupportedRepositoryOperationException, LockException, AccessDeniedException, InvalidItemStateException, RepositoryException;
-     *         result of "fail" in the course of this operation.
+     * result of "fail" in the course of this operation.
-     * Creates an event filter based on the parameters available in {@link
-     * javax.jcr.observation.ObservationManager#addEventListener}.
+     * Creates an event filter. If the repository supportes observation, the
+     * filter created is based on the parameters available in {@link
+     * javax.jcr.observation.ObservationManager#addEventListener}.<p/>
+     * Note, that an SPI implementation may support observation even if
+     * the corresponding {@link javax.jcr.Repository#OPTION_OBSERVATION_SUPPORTED repository descriptor}
+     * does not return 'true'.
-     * @param eventTypes   A combination of one or more event type constants
-     *                     encoded as a bitmask.
-     * @param absPath      an absolute path.
-     * @param isDeep       a <code>boolean</code>.
-     * @param uuid         array of UUIDs.
-     * @param nodeTypeName array of node type names.
-     * @param noLocal      a <code>boolean</code>.
+     * @param eventTypes A combination of one or more event type constants
+     * encoded as a bitmask.
+     * @param absPath An absolute path.
+     * @param isDeep A <code>boolean</code>.
+     * @param uuid Array of UUIDs.
+     * @param nodeTypeName Array of node type names.
+     * @param noLocal A <code>boolean</code>.
-     * @throws UnsupportedRepositoryOperationException
-     *          if this implementation does not support observation.
+     * @throws UnsupportedRepositoryOperationException if this SPI implementation
+     * does not allow to create event filters.
-    public EventFilter createEventFilter(int eventTypes,
-                                         Path absPath,
-                                         boolean isDeep,
-                                         String[] uuid,
-                                         QName[] nodeTypeName,
-                                         boolean noLocal)
+    public EventFilter createEventFilter(int eventTypes, Path absPath,
+                                         boolean isDeep, String[] uuid,
+                                         QName[] nodeTypeName, boolean noLocal)
-     * server.
+     * server.<p/>
+     * Note, that an SPI implementation may support observation even if
+     * the corresponding {@link javax.jcr.Repository#OPTION_OBSERVATION_SUPPORTED repository descriptor}
+     * does not return 'true'.
-     * @throws UnsupportedRepositoryOperationException
-     *                              if this implementation does not support
-     *                              observation.
+     * @throws UnsupportedRepositoryOperationException If this SPI implementation
+     * does not support observation.
-     *                              waiting for events within the specified
-     *                              <code>timeout</code>.
+     * waiting for events within the specified <code>timeout</code>.
-    public EventBundle[] getEvents(SessionInfo sessionInfo,
-                                   long timeout,
+    public EventBundle[] getEvents(SessionInfo sessionInfo, long timeout,
