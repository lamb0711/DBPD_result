re-implementing Workspace methods clone, copy, importXML [work in progress...]
plus various minor fixes and cosmetical changes



git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@158927 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.util.uuid.UUID;
+import org.apache.jackrabbit.core.util.uuid.UUID;
+import org.apache.jackrabbit.core.xml.WorkspaceImporter;
+import org.apache.jackrabbit.core.xml.Importer;
-                    findApplicableDefinition(nodeName, nodeTypeName, parentState);
+                    findApplicableNodeDefinition(nodeName, nodeTypeName,
+                            parentState);
-        HashSet set = new HashSet((state).getMixinTypeNames());
+        HashSet set = new HashSet(state.getMixinTypeNames());
-     * Helper method that finds the applicable definition for the
-     * a child node with the given name and node type in the parent node's
-     * node type and mixin types.
+     * Helper method that finds the applicable definition for a child node with
+     * the given name and node type in the parent node's node type and
+     * mixin types.
-    public ChildNodeDef findApplicableDefinition(QName name,
-                                                 QName nodeTypeName,
-                                                 NodeState parentState)
+    public ChildNodeDef findApplicableNodeDefinition(QName name,
+                                                     QName nodeTypeName,
+                                                     NodeState parentState)
+     * Helper method that finds the applicable definition for a property with
+     * the given name, type and multiValued characteristic in the parent node's
+     * node type and mixin types.
+     *
+     * @param name
+     * @param type
+     * @param multiValued
+     * @param parentState
+     * @return a <code>PropDef</code>
+     * @throws ConstraintViolationException if no applicable property definition
+     *                                      could be found
+     * @throws RepositoryException          if another error occurs
+     */
+    public PropDef findApplicablePropertyDefinition(QName name,
+                                                    int type,
+                                                    boolean multiValued,
+                                                    NodeState parentState)
+            throws RepositoryException, ConstraintViolationException {
+        EffectiveNodeType entParent = getEffectiveNodeType(parentState);
+        return entParent.getApplicablePropertyDef(name, type, multiValued);
+    }
+
+    /**
+     * todo duplicate code in WorkspaceImporter; consolidate in WorkspaceOperations class
-                    findApplicableDefinition(destName.getName(),
+                    findApplicableNodeDefinition(destName.getName(),
-            ChildNodeDef newTargetDef = findApplicableDefinition(destName.getName(), targetState.getNodeTypeName(), destParentState);
+            ChildNodeDef newTargetDef =
+                    findApplicableNodeDefinition(destName.getName(),
+                            targetState.getNodeTypeName(), destParentState);
-        Importer importer = new WorkspaceImporter(parentState, this, uuidBehavior);
+        Importer importer = new WorkspaceImporter(parentState, this,
+                rep.getNodeTypeRegistry(), uuidBehavior);
