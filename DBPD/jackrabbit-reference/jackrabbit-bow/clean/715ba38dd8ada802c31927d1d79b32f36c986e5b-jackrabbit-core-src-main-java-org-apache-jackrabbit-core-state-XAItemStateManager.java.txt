JCR-2206: Replace NodeReferencesId with NodeId

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@793243 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.id.NodeReferencesId;
-    public NodeReferences getNodeReferences(NodeReferencesId id)
+    public NodeReferences getNodeReferences(NodeId id)
-    public boolean hasNodeReferences(NodeReferencesId id) {
+    public boolean hasNodeReferences(NodeId id) {
-    private NodeReferences getReferences(NodeReferencesId id)
+    private NodeReferences getReferences(NodeId id)
-            NodeId target = id.getTargetId();
-                    if (values[i].getNodeId().equals(target)) {
+                    if (values[i].getNodeId().equals(id)) {
-                    if (values[i].getNodeId().equals(target)) {
+                    if (values[i].getNodeId().equals(id)) {
-                            if (values[i].getNodeId().equals(target)) {
+                            if (values[i].getNodeId().equals(id)) {
-                        if (values[i].getNodeId().equals(target)) {
+                        if (values[i].getNodeId().equals(id)) {
-                                new NodeReferencesId(vals[i].getNodeId()));
+                                vals[i].getNodeId());
-                                new NodeReferencesId(vals[i].getNodeId()));
+                                vals[i].getNodeId());
-                                new NodeReferencesId(vals[i].getNodeId()));
+                                vals[i].getNodeId());
-                                new NodeReferencesId(vals[i].getNodeId()));
+                                vals[i].getNodeId());
-     * @param refsId node references id
+     * @param targetId target node id
-            ChangeLog references, PropertyId sourceId, NodeReferencesId refsId)
+            ChangeLog references, PropertyId sourceId, NodeId targetId)
-        NodeReferences refs = references.get(refsId);
+        NodeReferences refs = references.getReferencesTo(targetId);
-            refs = virtualProvider.getNodeReferences(refsId);
+            refs = virtualProvider.getNodeReferences(targetId);
-        if (refs == null && virtualProvider.hasItemState(refsId.getTargetId())) {
-            refs = new NodeReferences(refsId);
+        if (refs == null && virtualProvider.hasItemState(targetId)) {
+            refs = new NodeReferences(targetId);
-     * @param refsId node references id
+     * @param targetId target node id
-            ChangeLog references, PropertyId sourceId, NodeReferencesId refsId)
+            ChangeLog references, PropertyId sourceId, NodeId targetId)
-        NodeReferences refs = references.get(refsId);
+        NodeReferences refs = references.getReferencesTo(targetId);
-            refs = virtualProvider.getNodeReferences(refsId);
+            refs = virtualProvider.getNodeReferences(targetId);
-        if (refs == null && virtualProvider.hasItemState(refsId.getTargetId())) {
-            refs = new NodeReferences(refsId);
+        if (refs == null && virtualProvider.hasItemState(targetId)) {
+            refs = new NodeReferences(targetId);
