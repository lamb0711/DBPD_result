JCR-2509 : Reduce number of compiler warning by adding @Override and generics where appropriate [step 2: jackrabbit-jcr-server]

in addition:
- minor improvements in comments, typos
- use foreach loops where possible
- remove redundant Tika imports in server/io package
- remove redundant casts
- add missing index increment in SubscriptionManagerImpl.SubscriptionMap

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@915339 13f79535-47bb-0310-9956-ffa450edef68

-    private final Map transactionListenerById = new HashMap();
+    private final Map<String, List<TransactionListener>> transactionListenerById = new HashMap<String, List<TransactionListener>>();
-            // ajust references to this subscription
+            // adjust references to this subscription
-            subs = (SubscriptionImpl) subscriptions.get(subscriptionId);
+            subs = subscriptions.get(subscriptionId);
-        List transactionListeners = new ArrayList();
-        for (Iterator it = subscriptions.iterator(); it.hasNext(); ) {
-            SubscriptionImpl sub = (SubscriptionImpl) it.next();
+        List<TransactionListener> transactionListeners = new ArrayList<TransactionListener>();
+        for (Iterator<SubscriptionImpl> it = subscriptions.iterator(); it.hasNext(); ) {
+            SubscriptionImpl sub = it.next();
-        List transactionListeners = (List) transactionListenerById.remove(lockToken);
+        List<TransactionListener> transactionListeners = transactionListenerById.remove(lockToken);
-            for (Iterator it = transactionListeners.iterator(); it.hasNext(); ) {
-                TransactionListener txListener = (TransactionListener) it.next();
+            for (TransactionListener txListener : transactionListeners) {
-        private HashMap subscriptions = new HashMap();
-        private HashMap ids = new HashMap();
+        private HashMap<String, SubscriptionImpl> subscriptions = new HashMap<String, SubscriptionImpl>();
+        private HashMap<DavResourceLocator, Set<String>> ids = new HashMap<DavResourceLocator, Set<String>>();
-        private Subscription get(String subscriptionId) {
-            return (Subscription) subscriptions.get(subscriptionId);
+        private SubscriptionImpl get(String subscriptionId) {
+            return subscriptions.get(subscriptionId);
-        private Iterator iterator() {
+        private Iterator<SubscriptionImpl> iterator() {
-            Set idSet;
+            Set<String> idSet;
-                idSet = (Set) ids.get(key);
+                idSet = ids.get(key);
-                idSet = new HashSet();
+                idSet = new HashSet<String>();
-            SubscriptionImpl sub = (SubscriptionImpl) subscriptions.remove(subscriptionId);
-            ((Set)ids.get(sub.getLocator())).remove(subscriptionId);
+            SubscriptionImpl sub = subscriptions.remove(subscriptionId);
+            ids.get(sub.getLocator()).remove(subscriptionId);
-            Set idSet = (Set) ids.get(locator);
+            Set<String> idSet = ids.get(locator);
-                Iterator idIterator = idSet.iterator();
-                while (idIterator.hasNext()) {
-                    SubscriptionImpl s = (SubscriptionImpl) subscriptions.get(idIterator.next());
+                for (String id : idSet) {
+                    SubscriptionImpl s = subscriptions.get(id);
+                    i++;
