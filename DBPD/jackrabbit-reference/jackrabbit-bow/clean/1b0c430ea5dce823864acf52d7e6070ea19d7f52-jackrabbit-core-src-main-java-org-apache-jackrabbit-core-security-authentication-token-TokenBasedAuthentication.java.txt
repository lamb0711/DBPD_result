JCR-2971 : Revert subsequent token-node updates (tentatively introduced)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1104256 13f79535-47bb-0310-9956-ffa450edef68

-            // collect those attributes present on the credentials that
-            // are missing or different in the token node.
-            Map<String, String> newAttributes = new HashMap<String,String>(attrNames.size());
-            for (String attrName : tokenCredentials.getAttributeNames()) {
-                String attrValue = tokenCredentials.getAttribute(attrName);
-                if (!isMandatoryAttribute(attrName) &&
-                        (!info.containsKey(attrName) || !info.get(attrName).equals(attrValue))) {
-                    newAttributes.put(attrName, attrValue);
-                }
-            }
-            // update token node if required: optionally resetting the
-            // expiration and the set of informative properties
-            updateTokenNode(expiry, loginTime, newAttributes);
+            // update token node if required: optionally resetting the expiration
+            updateTokenNode(expiry, loginTime);
-     * <li>Update the token node to reflect the set of new/changed informative
-     * attributes provided by the credentials.</li>
-     * @param newAttributes
-    private void updateTokenNode(long tokenExpiry, long loginTime, Map<String,String> newAttributes) {
-        Node tokenNode = null;
+    private void updateTokenNode(long tokenExpiry, long loginTime) {
+        Node tokenNode;
-            // a) expiry...
+            // expiry...
-            // b) handle informative attributes...
-            if (!newAttributes.isEmpty()) {
-                if (tokenNode == null) {
-                    tokenNode = getTokenNode();
-                    s = tokenNode.getSession();
-                }
-                for (String attrName : newAttributes.keySet()) {
-                    tokenNode.setProperty(attrName, newAttributes.get(attrName));
-                    log.info("Updating token node with informative attribute '" + attrName + "'");
-                }
-            }
-
