JCR-1979: Deadlock on concurrent read & transactional write operations

We can also move the other (than getReferences) virtual provider accesses outside the workspace lock. This obsoletes the remaining parts of the "Use the JCR versioning API instead of the /jcr:system/jcr:versionStorage tree to access version information" recommendation.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@744911 13f79535-47bb-0310-9956-ffa450edef68

+        // check the virtual root ids (needed for overlay)
+        for (int i = 0; i < virtualProviders.length; i++) {
+            if (virtualProviders[i].isVirtualRoot(id)) {
+                return virtualProviders[i].getItemState(id);
+            }
+        }
-
-            // check the virtual root ids (needed for overlay)
-            for (int i = 0; i < virtualProviders.length; i++) {
-                if (virtualProviders[i].isVirtualRoot(id)) {
-                    return virtualProviders[i].getItemState(id);
-                }
-            }
-            // check if there is a virtual state for the specified item
-            for (int i = 0; i < virtualProviders.length; i++) {
-                if (virtualProviders[i].hasItemState(id)) {
-                    return virtualProviders[i].getItemState(id);
-                }
-            }
+
+        // check if there is a virtual state for the specified item
+        for (int i = 0; i < virtualProviders.length; i++) {
+            if (virtualProviders[i].hasItemState(id)) {
+                return virtualProviders[i].getItemState(id);
+            }
+        }
+
+        // check the virtual root ids (needed for overlay)
+        for (int i = 0; i < virtualProviders.length; i++) {
+            if (virtualProviders[i].isVirtualRoot(id)) {
+                return true;
+            }
+        }
-            // check the virtual root ids (needed for overlay)
-            for (int i = 0; i < virtualProviders.length; i++) {
-                if (virtualProviders[i].isVirtualRoot(id)) {
-                    return true;
-                }
-            }
-            // otherwise check virtual ones
-            for (int i = 0; i < virtualProviders.length; i++) {
-                if (virtualProviders[i].hasItemState(id)) {
-                    return true;
-                }
-            }
+
+        // otherwise check virtual ones
+        for (int i = 0; i < virtualProviders.length; i++) {
+            if (virtualProviders[i].hasItemState(id)) {
+                return true;
+            }
+        }
+
