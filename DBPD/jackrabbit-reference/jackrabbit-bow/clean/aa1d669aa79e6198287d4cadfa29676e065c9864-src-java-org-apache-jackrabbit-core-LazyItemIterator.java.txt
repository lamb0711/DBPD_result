changing javadoc pattern for implementation of interface methods
from  @see ... style to {@inheritDoc}

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@156325 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.*;
-import java.util.List;
-import java.util.NoSuchElementException;
+import org.apache.log4j.Logger;
+
+import javax.jcr.Node;
+import javax.jcr.NodeIterator;
+import javax.jcr.Property;
+import javax.jcr.PropertyIterator;
+import javax.jcr.RepositoryException;
+import java.util.List;
+import java.util.NoSuchElementException;
+    private static Logger log = Logger.getLogger(LazyItemIterator.class);
+
-     * @param itemMgr item manager
-     * @param idList  list of item id's
+     * @param itemMgr        item manager
+     * @param idList         list of item id's
+     * @param skipInexistent if <code>true</code> the id's of those items
+     *                       that appear to be non-existent will be filtered
+     *                       out silently; otherwise such entries will cause
+     *                       a <code>NoSuchElementException</code> on
+     *                       <code>{@link #next()}</code> .
-    public LazyItemIterator(ItemManager itemMgr, List idList, boolean skipInexistent) {
+    public LazyItemIterator(ItemManager itemMgr, List idList,
+                            boolean skipInexistent) {
-            // check all items first
+            // check existence of all items first
-    //-------------------------------------------------------< NodeIterator >---
+    //---------------------------------------------------------< NodeIterator >
-    //---------------------------------------------------< PropertyIterator >---
+    //-----------------------------------------------------< PropertyIterator >
-    //-----------------------------------------------------------< Iterator >---
+    //-------------------------------------------------------------< Iterator >
+        ItemId id = (ItemId) idList.get(pos++);
-            return itemMgr.getItem((ItemId) idList.get(pos++));
+            return itemMgr.getItem(id);
+            log.debug("failed to fetch item " + id, e);
-     * @throws UnsupportedOperationException allways, since not implemented
+     * @throws UnsupportedOperationException always since not implemented
