JCR-265: Bug with textfilters and classloaders

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@330282 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.query.TextFilterService;
+import org.apache.jackrabbit.core.query.TextFilter;
+import java.util.List;
+import java.util.Collections;
+     * List of text filters in use.
+     */
+    protected final List textFilters;
+
+    /**
+     * @param textFilters   List of {@link org.apache.jackrabbit.core.query.TextFilter}s.
-                          NamespaceMappings mappings) {
+                          NamespaceMappings mappings,
+                          List textFilters) {
+        this.textFilters = textFilters;
+     * @param textFilters   list of text filters to use for indexing binary
+     *                      properties.
-                                          NamespaceMappings mappings)
+                                          NamespaceMappings mappings,
+                                          List textFilters)
-        NodeIndexer indexer = new NodeIndexer(node, stateProvider, mappings);
+        NodeIndexer indexer = new NodeIndexer(node, stateProvider, mappings, textFilters);
-     * {@link TextFilterService}add a {@link FieldNames#FULLTEXT} field
-     * .
+     * the {@link #textFilters}.
-                Map fields = TextFilterService.extractText(dataProp,
-                        mimeTypeProp.getValues()[0].internalValue().toString(),
-                        encoding);
+                String mimeType = mimeTypeProp.getValues()[0].internalValue().toString();
+                Map fields = Collections.EMPTY_MAP;
+                for (Iterator it = textFilters.iterator(); it.hasNext(); ) {
+                    TextFilter filter = (TextFilter) it.next();
+                    // use the first filter that can handle the mimeType
+                    if (filter.canFilter(mimeType)) {
+                        fields = filter.doFilter(dataProp, encoding);
+                        break;
+                    }
+                }
+
