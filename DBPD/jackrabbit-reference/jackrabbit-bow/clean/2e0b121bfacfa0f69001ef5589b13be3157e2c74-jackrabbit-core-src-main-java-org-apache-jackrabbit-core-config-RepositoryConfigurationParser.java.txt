JCR-1765: Config: make all elements in the security configuration optional

Added a simple workaround that just uses SimpleSecurityManager as the default if an explicit security manager configuration is not present. This makes my backwards compatibility test cases in sandbox work.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@704165 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.security.simple.SimpleSecurityManager;
-     * Parses the security manager configuration.
+     * Parses the security manager configuration. Returns default
+     * configuration based on the {@link SimpleSecurityManager} class if
+     * a security manager is not explicitly configured.
+     * @see <a href="https://issues.apache.org/jira/browse/JCR-1765">JCR-1765</a>
-
-        BeanConfig bc = parseBeanConfig(security, SECURITY_MANAGER_ELEMENT);
-
-        Element smElement = getElement(security, SECURITY_MANAGER_ELEMENT);
-        String wspAttr = getAttribute(smElement, WSP_NAME_ATTRIBUTE, null);
-
+        BeanConfig bc = new BeanConfig(
+                SimpleSecurityManager.class.getName(), new Properties());
+        String wspAttr = "security";
-        Element element = getElement(smElement, WORKSPACE_ACCESS_ELEMENT, false);
+
+        Element element = getElement(security, SECURITY_MANAGER_ELEMENT, false);
-            wac = parseBeanConfig(smElement, WORKSPACE_ACCESS_ELEMENT);
+            bc = parseBeanConfig(security, SECURITY_MANAGER_ELEMENT);
+
+            wspAttr = getAttribute(element, WSP_NAME_ATTRIBUTE, null);
+
+            if (getElement(element, WORKSPACE_ACCESS_ELEMENT, false) != null) {
+                wac = parseBeanConfig(element, WORKSPACE_ACCESS_ELEMENT);
+            }
+
