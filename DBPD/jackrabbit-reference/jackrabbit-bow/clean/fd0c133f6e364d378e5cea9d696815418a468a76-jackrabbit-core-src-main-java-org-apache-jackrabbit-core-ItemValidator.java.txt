JCR-890: concurrent read-only access to a session

Leverage SessionContext in more places.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@957229 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.security.AccessManager;
+import org.apache.jackrabbit.core.session.SessionContext;
+     * Component context of the associated session.
+     */
+    protected final SessionContext sessionContext;
+
+    /**
-    protected final AccessManager accessMgr;
-
-    protected final ItemManager itemMgr;
-
-     * @param ntReg      node type registry
-     * @param hierMgr    hierarchy manager
-     * @param session    session
+     * @param sessionContext component context of this session
-    public ItemValidator(NodeTypeRegistry ntReg,
-                         HierarchyManager hierMgr,
-                         SessionImpl session) throws RepositoryException {
-        this(ntReg, hierMgr, session, session.getLockManager(),
-                session.getAccessManager(), session.getRetentionRegistry(),
-                session.getItemManager());
-    }
-
-    /**
-     * Creates a new <code>ItemValidator</code> instance.
-     *
-     * @param ntReg      node type registry
-     * @param hierMgr    hierarchy manager
-     * @param resolver   resolver
-     * @param lockMgr    lockMgr
-     * @param accessMgr  accessMgr
-     * @param retentionReg
-     * @param itemMgr    the item manager
-     */
-    public ItemValidator(NodeTypeRegistry ntReg,
-                         HierarchyManager hierMgr,
-                         PathResolver resolver,
-                         LockManager lockMgr,
-                         AccessManager accessMgr,
-                         RetentionRegistry retentionReg,
-                         ItemManager itemMgr) {
-        this.ntReg = ntReg;
-        this.hierMgr = hierMgr;
-        this.resolver = resolver;
-        this.lockMgr = lockMgr;
-        this.accessMgr = accessMgr;
-        this.retentionReg = retentionReg;
-        this.itemMgr = itemMgr;
+    public ItemValidator(SessionContext sessionContext) throws RepositoryException {
+        this.sessionContext = sessionContext;
+        this.ntReg = sessionContext.getRepositoryContext().getNodeTypeRegistry();
+        this.hierMgr = sessionContext.getHierarchyManager();
+        this.resolver = sessionContext.getSessionImpl();
+        this.lockMgr = sessionContext.getSessionImpl().getLockManager();
+        this.retentionReg = sessionContext.getSessionImpl().getRetentionRegistry();
-        QNodeDefinition def = itemMgr.getDefinition(nodeState).unwrap();
+        QNodeDefinition def =
+            sessionContext.getItemManager().getDefinition(nodeState).unwrap();
-        QPropertyDefinition def = itemMgr.getDefinition(propState).unwrap();
+        QPropertyDefinition def =
+            sessionContext.getItemManager().getDefinition(propState).unwrap();
-            accessMgr.checkPermission(path, permissions);
+            sessionContext.getAccessManager().checkPermission(path, permissions);
-            if (!accessMgr.isGranted(path, permissions)) {
+            if (!sessionContext.getAccessManager().isGranted(path, permissions)) {
