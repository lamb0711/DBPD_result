JCR-2861 Internal Timeout Handling in the TransactionContext is not XA Spec. conform

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1066794 13f79535-47bb-0310-9956-ffa450edef68

+     * Indicates if this {@link TransactionContext} has timed out internally
+     */
+    private boolean timedOut = false;
+
+    /**
+     * @param onePhaseOptimized if true this prepare comes from a onePhase optimized Transaction.
+     * 			Internal Timeout-Task will be started.
-    public synchronized void prepare() throws XAException {
+    public synchronized void prepare(boolean onePhaseOptimized) throws XAException {
-        // start rollback task in case the commit is never issued
-        timer.schedule(this, timeout * 1000, Integer.MAX_VALUE);
+        if (onePhaseOptimized) {
+            // start rollback task in case the commit is never issued
+            timer.schedule(this, timeout * 1000, Integer.MAX_VALUE);
+        }
+     * @param true if the commit comes from a onePhase optimized Transaction.
-    public synchronized void commit() throws XAException {
+    public synchronized void commit(boolean onePhase) throws XAException {
-            throw new XAException(XAException.XA_RBTIMEOUT);
+        	if (onePhase && timedOut) {
+        		throw new XAException(XAException.XA_RBTIMEOUT);
+        	} else {
+        		throw new XAException(XAException.XA_HEURRB);
+        	}
+        boolean heuristicCommit = false;
+                    heuristicCommit = true;
-        // cancel the rollback task
-        cancel();
+        if (onePhase) {
+        	// cancel the rollback task only in onePhase Transactions
+        	cancel();
+        }
-            XAException e = new XAException(XAException.XA_RBOTHER);
-            e.initCause(txe);
-            throw e;
+        	XAException e = null;
+        	if (heuristicCommit) {
+        		e = new XAException(XAException.XA_HEURMIX);
+        	} else {
+        		e = new XAException(XAException.XA_HEURRB);
+        	}
+    		e.initCause(txe);
+    		throw e;
-            throw new XAException(XAException.XA_RBTIMEOUT);
+            throw new XAException(XAException.XA_RBOTHER);
+                timedOut = true;
