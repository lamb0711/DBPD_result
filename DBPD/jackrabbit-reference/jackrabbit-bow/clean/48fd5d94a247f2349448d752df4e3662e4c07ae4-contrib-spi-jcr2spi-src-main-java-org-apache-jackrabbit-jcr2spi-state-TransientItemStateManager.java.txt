work in progress

- removeVersion missing
- LockManager/VersionManager: should not rely on observation (todo added)
- Add Operation.persisted() (Impl. still missing) in analogy to ChangeLog.persisted.
- ItemImpl.refresh behaves according to CacheBehaviour flag.
- NodeState: fix classcastexception when accessing state from propertiesInAttic
- ItemState: rename 'refresh()' to 'reload()
- ItemState: move code common to PropertyState and NodeState to ItemState
- ItemState: rename 'reset' to 'merge'
- add common interface ChildItemEntry
- SessionItemStateManager: avoid traversing twice during 'undo'

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@477095 13f79535-47bb-0310-9956-ffa450edef68

-     * Removes the <code>operation</code> from the list of operations.
-     * @param operation the Operation to remove.
-     * @return <code>true</code> if the operation was removed.
-     */
-    boolean removeOperation(Operation operation) {
-        return changeLog.removeOperation(operation);
-    }
-
-    /**
-     * Disposes a collection of {@link org.apache.jackrabbit.jcr2spi.operation.Operation}s.
+     * Remove the states and operations listed in the changeLog from the
+     * internal changeLog.
-     * @param operations the operations.
+     * @param subChangeLog
-    void disposeOperations(Iterator operations) {
-        while (operations.hasNext()) {
-            changeLog.removeOperation((Operation) operations.next());
-        }
+    void dispose(ChangeLog subChangeLog) {
+        changeLog.removeAll(subChangeLog);
-        if (!Status.isValidStatusChange(previousStatus, state.getStatus(), false)) {
-            log.error("ItemState has invalid status: " + state.getStatus());
-            return;
-        }
-
