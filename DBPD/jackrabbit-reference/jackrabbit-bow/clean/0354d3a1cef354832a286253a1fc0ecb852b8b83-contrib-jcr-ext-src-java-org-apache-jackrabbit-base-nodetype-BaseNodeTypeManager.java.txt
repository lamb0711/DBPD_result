JCR-EXT: Various improvements and documentation for the JCR base classes.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@328807 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.LinkedList;
+import java.util.List;
-    /** Protected constructor. This class is only useful when extended. */
-    protected BaseNodeTypeManager() {
-    }
-
-    /** Not implemented. {@inheritDoc} */
+    /**
+     * Returns an empty node type iterator. Subclasses should override this
+     * method to return the available node types.
+     *
+     * @return empty node type iterator
+     * @see NodeTypeManager#getAllNodeTypes()
+     */
-        throw new UnsupportedRepositoryOperationException();
+        return new ArrayNodeTypeIterator(new NodeType[0]);
-     * Implemented by calling <code>getAllNodeTypes()</code> and iterating
-     * through the returned node types to find the named node type.
-     * {@inheritDoc}
+     * Iterates through the node types returned by the
+     * {@link #getAllNodeTypes() getAllNodeTypes()} method and returns the
+     * node type with the given name. If a matching node type is not found,
+     * then a {@link NoSuchNodeTypeException} is thrown. Subclasses may
+     * want to override this method for better performance.
+     *
+     * @param node type name
+     * @return named node type
+     * @see NodeTypeManager#getNodeType(String)
-    public NodeType getNodeType(String nodeTypeName)
-            throws NoSuchNodeTypeException, RepositoryException {
+    public NodeType getNodeType(String nodeTypeName) throws RepositoryException {
-     * Implemented by calling <code>getAllNodeTypes()</code> and iterating
-     * through the returned node types to select all primary node types.
-     * {@inheritDoc}
+     * Iterates through the node types returned by the
+     * {@link #getAllNodeTypes() getAllNodeTypes()} method and returns an
+     * {@link ArrayNodeTypeIterator} containing all the primary node types.
+     * Subclasses may want to override this method for better performance.
+     *
+     * @return primary node types
+     * @see NodeTypeManager#getPrimaryNodeTypes()
-        Vector primaryTypes = new Vector();
+        List primaryTypes = new LinkedList();
-     * Implemented by calling <code>getAllNodeTypes()</code> and iterating
-     * through the returned node types to select all mixin node types.
-     * {@inheritDoc}
+     * Iterates through the node types returned by the
+     * {@link #getAllNodeTypes() getAllNodeTypes()} method and returns an
+     * {@link ArrayNodeTypeIterator} containing all the mixin node types.
+     * Subclasses may want to override this method for better performance.
+     *
+     * @return mixin node types
+     * @see NodeTypeManager#getMixinNodeTypes()
-        Vector mixinTypes = new Vector();
+        List mixinTypes = new LinkedList();
-            if (!type.isMixin()) {
+            if (type.isMixin()) {
