applying patch from angela, fixing:

[JCR-122] cannot PUT changes to a resource in the simple webdav server
[JCR-123] Webdav: Error when accessing Simple-Server
[JCR-126] Jcr-Server Module: Remove Dependency from Jackrabbit-Core


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@180346 13f79535-47bb-0310-9956-ffa450edef68

- * Copyright 2005 The Apache Software Foundation.
+ * Copyright 2004-2005 The Apache Software Foundation or its licensors,
+ *                     as applicable.
-package org.apache.jackrabbit.webdav.util;
+package org.apache.jackrabbit.util;
-import java.io.ByteArrayOutputStream;
-import java.math.BigDecimal;
-import java.security.NoSuchAlgorithmException;
+import java.io.ByteArrayOutputStream;
-import java.text.ParseException;
-import java.text.SimpleDateFormat;
+import java.security.NoSuchAlgorithmException;
+import java.text.SimpleDateFormat;
+import java.text.ParseException;
+import java.math.BigDecimal;
-            source = new StringBuffer(path == null ? "" : path);
+            source = new StringBuffer(path);
-            source = new StringBuffer(path == null ? "" : path);
+            source = new StringBuffer(path);
-     * @throws ParseException if the date string cannot be parsed accordinung
+     * @throws java.text.ParseException if the date string cannot be parsed accordinung
-}
+
+    /**
+     * Replaces all occurences of <code>oldString</code> in <code>text</code>
+     * with <code>newString</code>.
+     *
+     * @param text
+     * @param oldString old substring to be replaced with <code>newString</code>
+     * @param newString new substring to replace occurences of <code>oldString</code>
+     * @return a string
+     */
+    public static String replace(String text, String oldString, String newString) {
+        if (text == null || oldString == null || newString == null) {
+            throw new IllegalArgumentException("null argument");
+        }
+        int pos = text.indexOf(oldString);
+        if (pos == -1) {
+            return text;
+        }
+        int lastPos = 0;
+        StringBuffer sb = new StringBuffer(text.length());
+        while (pos != -1) {
+            sb.append(text.substring(lastPos, pos));
+            sb.append(newString);
+            lastPos = pos + oldString.length();
+            pos = text.indexOf(oldString, lastPos);
+        }
+        if (lastPos < text.length()) {
+            sb.append(text.substring(lastPos));
+        }
+        return sb.toString();
+    }
+}
