minor improvement

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1156078 13f79535-47bb-0310-9956-ffa450edef68

-                log.warn("Resource configuration: mandatory 'config' element is missing.");
+                log.warn("Mandatory 'config' element is missing.");
-                            log.warn("Resource configuration: the handler is not a valid IOHandler.");
+                            log.warn("Not a valid IOHandler : " + getClassName(iohEl));
-                    log.warn("Resource configuration: 'iomanager' does not define a valid IOManager.");
+                    log.warn("'iomanager' element does not define a valid IOManager.");
-                log.warn("Resource configuration: 'iomanager' element is missing.");
+                log.warn("'iomanager' element is missing.");
-                            log.warn("Resource configuration: the handler is not a valid PropertyHandler.");
+                            log.warn("Not a valid PropertyHandler : " + getClassName(iohEl));
-                    log.warn("Resource configuration: 'propertymanager' does not define a valid PropertyManager.");
+                    log.warn("'propertymanager' element does not define a valid PropertyManager.");
-                log.debug("Resource configuration: 'propertymanager' element is missing.");
+                log.debug("'propertymanager' element is missing.");
-                log.debug("Resource configuration: no 'filter' element specified.");
+                log.debug("No 'filter' element specified.");
-    private Object buildClassFromConfig(Element parent) {
-        Object instance = null;
-        Element classElem = DomUtil.getChildElement(parent, "class", null);
-        if (classElem != null) {
-            // contains a 'class' child node
-            try {
-                String className = DomUtil.getAttribute(classElem, "name", null);
-                if (className != null) {
-                    Class<?> c = Class.forName(className);
-                    instance = c.newInstance();
-                } else {
-                    log.error("Invalid configuration: missing 'class' element");
-                }
-            } catch (Exception e) {
-                log.error("Error while create class instance: " + e.getMessage());
-            }
-        }
-        return instance;
-    }
-
-    private String[] parseNodeTypesEntry(Element parent) {
+    private static String[] parseNodeTypesEntry(Element parent) {
+    
+    private static Object buildClassFromConfig(Element parent) {
+        Object instance = null;
+        Element classElem = DomUtil.getChildElement(parent, "class", null);
+        if (classElem != null) {
+            // contains a 'class' child node
+            try {
+                String className = DomUtil.getAttribute(classElem, "name", null);
+                if (className != null) {
+                    Class<?> c = Class.forName(className);
+                    instance = c.newInstance();
+                } else {
+                    log.error("Invalid configuration: missing 'class' element");
+                }
+            } catch (Exception e) {
+                log.error("Error while create class instance: " + e.getMessage());
+            }
+        }
+        return instance;
+    }
+
+    private static String getClassName(Element parent) {
+        String className = null;
+        Element classElem = DomUtil.getChildElement(parent, "class", null);
+        if (classElem != null) {
+            className = DomUtil.getAttribute(classElem, "name", null);
+        }
+        return (className == null) ? "" : className;
+    }
-            log.debug("ResourceConfig: missing io-manager > building DefaultIOManager ");
+            log.debug("Missing io-manager > building DefaultIOManager ");
-            log.debug("ResourceConfig: missing property-manager > building default.");
+            log.debug("Missing property-manager > building default.");
-            log.debug("ResourceConfig: missing resource filter > building DefaultItemFilter ");
+            log.debug("Missing resource filter > building DefaultItemFilter ");
