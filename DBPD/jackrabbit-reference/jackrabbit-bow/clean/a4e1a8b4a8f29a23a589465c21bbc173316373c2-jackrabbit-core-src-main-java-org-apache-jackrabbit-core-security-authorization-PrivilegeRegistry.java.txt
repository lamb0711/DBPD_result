JCR-2887 - Split PrivilegeRegistry in a per-session manager instance and a repository level registry  (WIP)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1181645 13f79535-47bb-0310-9956-ffa450edef68

-        PrivilegeBits bts = PrivilegeBits.getInstance();
-        for (PrivilegeDefinition d : definitions) {
-            if (d instanceof Definition) {
-                bts.add(((Definition) d).bits);
-            }
+        switch (definitions.length) {
+            case 0:
+                return PrivilegeBits.EMPTY;
+
+            case 1:
+                if (definitions[0] instanceof Definition) {
+                    return ((Definition) definitions[0]).bits;
+                } else {
+                    return PrivilegeBits.EMPTY;
+                }
+
+            default:
+                PrivilegeBits bts = PrivilegeBits.getInstance();
+                for (PrivilegeDefinition d : definitions) {
+                    if (d instanceof Definition) {
+                        bts.add(((Definition) d).bits);
+                    }
+                }
+                return bts;
-        return bts;
+    }
+
+    /**
+     * Return the privilege bits for the specified privilege names.
+     *
+     * @param privilegeNames
+     * @return privilege bits.
+     */
+    PrivilegeBits getBits(Name... privilegeNames) {
+        switch (privilegeNames.length) {
+            case 0:
+                return PrivilegeBits.EMPTY;
+
+            case 1:
+                return getBits(privilegeNames[0]);
+
+            default:
+                PrivilegeBits bts = PrivilegeBits.getInstance();
+                for (Name privName : privilegeNames) {
+                    bts.add(getBits(privName));
+                }
+                return bts;
+        }
+    }
+
+    /**
+     * Return the privilege bits for the specified privilege name.
+     *
+     * @param privilegeName
+     * @return privilege bits.
+     */
+    PrivilegeBits getBits(Name privilegeName) {
+        Definition def = registeredPrivileges.get(privilegeName);
+        return (def == null) ? PrivilegeBits.EMPTY : def.bits;
-            Definition newAll = new Definition(NameConstants.JCR_ALL, false, allAggrNames, allbits.unmodifiable(), false);
+            Definition newAll = new Definition(NameConstants.JCR_ALL, false, allAggrNames, allbits, false);
-                this.bits = bits;
+                this.bits = bits.unmodifiable();
