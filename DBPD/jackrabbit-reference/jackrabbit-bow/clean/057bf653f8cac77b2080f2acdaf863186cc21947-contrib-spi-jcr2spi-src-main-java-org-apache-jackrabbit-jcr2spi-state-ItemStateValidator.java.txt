work in progress

- remove NodeState.getPropertyId and replace by getPropertyState
- use ChildNodeEntry.getNodeState
- consequently remove utility methods getNodeState, getPropertyState on
  ItemStateValidator, that converted ItemStateExceptions to RepositoryExc.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@429269 13f79535-47bb-0310-9956-ffa450edef68

-            PropertyId pId = parentState.getPropertyId(propertyName);
-            if (!mgrProvider.getAccessManager().isGranted(pId, new String[] {AccessManager.SET_PROPERTY_ACTION})) {
+            Path relPath = Path.create(propertyName, Path.INDEX_UNDEFINED);
+            if (!mgrProvider.getAccessManager().isGranted(parentState.getNodeId(), relPath, new String[] {AccessManager.SET_PROPERTY_ACTION})) {
-            PropertyId errorId = parentState.getPropertyId(propertyName);
+            PropertyId errorId = null;
+            try {
+                errorId = parentState.getPropertyState(propertyName).getPropertyId();
+            } catch (ItemStateException e) {
+                // should not occur. existance has been asserted before
+                throw new RepositoryException(e);
+            }
-            ChildNodeEntry entry = parentState.getChildNodeEntry(nodeName, 1);
-            NodeState conflictingState = getNodeState(entry.getId());
+            try {
+                ChildNodeEntry entry = parentState.getChildNodeEntry(nodeName, 1);
+                NodeState conflictingState = entry.getNodeState();
+                QNodeDefinition conflictDef = conflictingState.getDefinition();
+                QNodeDefinition newDef = getApplicableNodeDefinition(nodeName, nodeTypeName, parentState);
-            QNodeDefinition conflictDef = conflictingState.getDefinition();
-            QNodeDefinition newDef = getApplicableNodeDefinition(nodeName, nodeTypeName, parentState);
-
-            // check same-name sibling setting of both target and existing node
-            if (!(conflictDef.allowsSameNameSiblings() && newDef.allowsSameNameSiblings())) {
-                throw new ItemExistsException("Cannot add child node '"
-                    + nodeName.getLocalName() + "' to "
-                    + safeGetJCRPath(parentState.getNodeId())
-                    + ": colliding with same-named existing node.");
+                // check same-name sibling setting of both target and existing node
+                if (!(conflictDef.allowsSameNameSiblings() && newDef.allowsSameNameSiblings())) {
+                    throw new ItemExistsException("Cannot add child node '"
+                        + nodeName.getLocalName() + "' to "
+                        + safeGetJCRPath(parentState.getNodeId())
+                        + ": colliding with same-named existing node.");
+                }
+            } catch (ItemStateException e) {
+                // should not occur, since existence has been asserted before
+                throw new RepositoryException(e);
-     * Retrieves the state of the node at the given path.
-     * <p/>
-     * Note that access rights are <b><i>not</i></b> enforced!
-     *
-     * @param nodePath
-     * @return
-     * @throws PathNotFoundException
-     * @throws RepositoryException
-     */
-    public NodeState getNodeState(Path nodePath) throws PathNotFoundException, RepositoryException {
-        try {
-            ItemId id = mgrProvider.getHierarchyManager().getItemId(nodePath);
-            if (!id.denotesNode()) {
-                throw new PathNotFoundException(safeGetJCRPath(nodePath));
-            }
-            return getNodeState((NodeId) id);
-        } catch (ItemNotFoundException infe) {
-            throw new PathNotFoundException(safeGetJCRPath(nodePath));
-        }
-    }
-
-    /**
-
-    public PropertyState getPropertyState(NodeId parentId, QName propertyName) throws ItemNotFoundException, RepositoryException {
-        NodeState nState = getNodeState(parentId);
-        return getPropertyState(nState.getPropertyId(propertyName));
-    }
-
-    public PropertyState getPropertyState(PropertyId id) throws ItemNotFoundException, RepositoryException {
-        try {
-            return (PropertyState) mgrProvider.getItemStateManager().getItemState(id);
-        } catch (NoSuchItemStateException nsise) {
-            throw new ItemNotFoundException(safeGetJCRPath(id));
-        } catch (ItemStateException ise) {
-            String msg = "internal error: failed to retrieve state of " + safeGetJCRPath(id);
-            log.debug(msg);
-            throw new RepositoryException(msg, ise);
-        }
-    }
