JCR-2624: Reduce memory usage of ParentAxisScorer

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@941752 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.lucene.search.Query;
-import org.apache.lucene.search.Scorer;
-import org.apache.lucene.search.Weight;
-import org.apache.lucene.search.Searcher;
-import org.apache.lucene.search.Explanation;
-import org.apache.lucene.search.Similarity;
-import org.apache.lucene.search.HitCollector;
-import org.apache.lucene.index.IndexReader;
-import org.apache.jackrabbit.spi.Name;
-import org.apache.jackrabbit.core.query.lucene.hits.ScorerHits;
-import org.apache.jackrabbit.core.query.lucene.hits.Hits;
-
-import java.util.Map;
+import java.util.Map;
+import org.apache.jackrabbit.core.query.lucene.hits.Hits;
+import org.apache.jackrabbit.core.query.lucene.hits.ScorerHits;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.lucene.index.IndexReader;
+import org.apache.lucene.search.Explanation;
+import org.apache.lucene.search.HitCollector;
+import org.apache.lucene.search.Query;
+import org.apache.lucene.search.Scorer;
+import org.apache.lucene.search.Searcher;
+import org.apache.lucene.search.Similarity;
+import org.apache.lucene.search.Weight;
+
-     * Default score is 1.0f.
-     */
-    private static final Float DEFAULT_SCORE = 1.0f;
-
-    /**
-         * query. To save memory only scores that are not equal to 1.0f are put
-         * to this map.
+         * query. To save memory only scores that are not equal to the score
+         * value of the first match are put to this map.
+         * The score of the first match.
+         */
+        private Float firstScore;
+
+        /**
-                score = DEFAULT_SCORE;
+                score = firstScore;
-                                if (score != DEFAULT_SCORE) {
-                                    scores.put(docs[0], score);
+                                if (firstScore == null) {
+                                    firstScore = score;
+                                } else if (firstScore != score) {
+                                    scores.put(doc, score);
-                                    if (score != DEFAULT_SCORE) {
-                                        scores.put(docNum, score);
+                                    if (firstScore == null) {
+                                        firstScore = score;
+                                    } else if (firstScore != score) {
+                                        scores.put(doc, score);
