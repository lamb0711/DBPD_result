fixing/changing xml representation of node type definitions

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47157 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.log4j.Logger;
+import org.apache.jackrabbit.jcr.core.InternalValue;
-import org.apache.jackrabbit.jcr.core.InternalValue;
+import org.apache.log4j.Logger;
-	    ValueConstraint constraint = pd.getValueConstraint();
-	    if (constraint != null && pd.getDefaultValues() != null) {
-		// check that default values satisfy value constraint
-		InternalValue[] vals = pd.getDefaultValues();
-		for (int j = 0; j < vals.length; j++) {
-		    try {
-			constraint.check(vals[j]);
-		    } catch (ConstraintViolationException cve) {
-			String msg = "default value of property " + (pd.getName() == null ? "[null]" : pd.getName().toString()) + " does not satisfy value constraint " + constraint.getDefinition();
-			log.error(msg, cve);
-			throw new InvalidNodeTypeDefException(msg, cve);
+	    ValueConstraint[] constraints = pd.getValueConstraints();
+	    InternalValue[] defVals = pd.getDefaultValues();
+	    if (constraints != null && constraints.length != 0
+		    && defVals != null && defVals.length != 0) {
+		// check that default values satisfy value constraints
+		for (int j = 0; j < constraints.length; j++) {
+		    for (int k = 0; k < defVals.length; k++) {
+			try {
+			    constraints[j].check(defVals[k]);
+			} catch (ConstraintViolationException cve) {
+			    String msg = "default value of property "
+				    + (pd.getName() == null ? "[null]" : pd.getName().toString())
+				    + " does not satisfy value constraint "
+				    + constraints[j].getDefinition();
+			    log.error(msg, cve);
+			    throw new InvalidNodeTypeDefException(msg, cve);
+			}
-     *
-		ps.println("\t\tValueConstraint\t" + ((pd[i].getValueConstraint() == null) ? "null" : pd[i].getValueConstraint().getDefinition()));
+		ValueConstraint[] vca = pd[i].getValueConstraints();
+		StringBuffer constraints = new StringBuffer();
+		if (vca == null) {
+		    constraints.append("<null>");
+		} else {
+		    for (int n = 0; n < vca.length; n++) {
+			if (constraints.length() > 0) {
+			    constraints.append(", ");
+			}
+			constraints.append(vca[n].getDefinition());
+		    }
+		}
+		ps.println("\t\tValueConstraints\t" + constraints.toString());
