JCR-1066: Exclude system index for queries that restrict the result set to nodetypes not availble in the "jcr:system" subtree

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@570095 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.query.QueryNodeFactory;
-    protected static final QueryRootNode ALL_NODES = new QueryRootNode();
-
-    static {
-        PathQueryNode pathNode = new PathQueryNode(ALL_NODES);
-        pathNode.addPathStep(new LocationStepQueryNode(pathNode, null, true));
-        pathNode.setAbsolute(true);
-        ALL_NODES.setLocationNode(pathNode);
-    }
+    protected final QueryRootNode allNodesQueryNode;
+     * @param factory   the query node factory.
-                     String language) throws InvalidQueryException {
+                     String language,
+                     QueryNodeFactory factory) throws InvalidQueryException {
-        // build query tree
-        this.root = QueryParser.parse(statement, language, session.getNamespaceResolver());
+        // build query tree using the passed factory
+        this.root = QueryParser.parse(statement, language,
+                session.getNamespaceResolver(), factory);
+
+        allNodesQueryNode = factory.createQueryRootNode();
+        PathQueryNode pathNode = factory.createPathQueryNode(allNodesQueryNode);
+        LocationStepQueryNode lsNode = factory.createLocationStepQueryNode(pathNode);
+        lsNode.setNameTest(null);
+        lsNode.setIncludeDescendants(true);
+        pathNode.addPathStep(lsNode);
+        pathNode.setAbsolute(true);
+        allNodesQueryNode.setLocationNode(pathNode);
+        
-        if (ALL_NODES.equals(root)) {
+        if (allNodesQueryNode.equals(root)) {
