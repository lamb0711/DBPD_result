JCR-996 Name and Path interfaces in SPI
JCR-1169 Distribution of commons classes


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@586065 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.Path;
-import org.apache.jackrabbit.name.PathFormat;
-import org.apache.jackrabbit.name.NoPrefixDeclaredException;
-import org.apache.jackrabbit.name.NamespaceResolver;
-import org.apache.jackrabbit.name.QName;
-import org.apache.jackrabbit.name.NameFormat;
+import org.apache.jackrabbit.spi.Path;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.conversion.NameResolver;
+import org.apache.jackrabbit.conversion.PathResolver;
+import javax.jcr.NamespaceException;
-     * @param nsResolver
+     * @param pathResolver
-    public static String safeGetJCRPath(Path qPath, NamespaceResolver nsResolver) {
+    public static String safeGetJCRPath(Path qPath, PathResolver pathResolver) {
-            return PathFormat.format(qPath, nsResolver);
-        } catch (NoPrefixDeclaredException npde) {
+            return pathResolver.getJCRPath(qPath);
+        } catch (NamespaceException e) {
-     * @param nsResolver
+     * @param pathResolver
-    public static String safeGetJCRPath(ItemState itemState, NamespaceResolver nsResolver) {
+    public static String safeGetJCRPath(ItemState itemState, PathResolver pathResolver) {
-            return safeGetJCRPath(itemState.getHierarchyEntry().getPath(), nsResolver);
+            return safeGetJCRPath(itemState.getHierarchyEntry().getPath(), pathResolver);
-     * Failsafe conversion of a <code>QName</code> to a JCR name for use in
+     * Failsafe conversion of a <code>Name</code> to a JCR name for use in
-     * @param nsResolver
-     * @return JCR name or String representation of the given <code>QName</code>
+     * @param nameResolver
+     * @return JCR name or String representation of the given <code>Name</code>
-    public static String saveGetJCRName(QName qName, NamespaceResolver nsResolver) {
+    public static String saveGetJCRName(Name qName, NameResolver nameResolver) {
-            return NameFormat.format(qName, nsResolver);
-        } catch (NoPrefixDeclaredException e) {
+            return nameResolver.getJCRName(qName);
+        } catch (NamespaceException e) {
