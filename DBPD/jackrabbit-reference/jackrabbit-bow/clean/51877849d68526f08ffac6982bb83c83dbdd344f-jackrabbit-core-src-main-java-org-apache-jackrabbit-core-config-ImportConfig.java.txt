JCR-1438: Replace Config classes with factories

Reintroduced change from revision 826653:

Use generics in BeanConfig.newInstance() to avoid the need of class casts.

Use the standard java.beans classes instead of BeanMap for the configured bean properties. This allows better control over value types.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@829798 13f79535-47bb-0310-9956-ffa450edef68

-        List<ProtectedNodeImporter> pnis = new ArrayList();
+        List<ProtectedNodeImporter> pnis =
+            new ArrayList<ProtectedNodeImporter>();
-                Object o = bc.newInstance();
-                if (o instanceof ProtectedNodeImporter) {
-                    pnis.add((ProtectedNodeImporter) o);
-                } else {
-                    log.warn("Invalid configuration entry: " + bc.getClassName() +" does not implement ProtectedNodeImporter.");                    
-                }
+                pnis.add(bc.newInstance(ProtectedNodeImporter.class));
-        List<ProtectedPropertyImporter> ppis = new ArrayList();
+        List<ProtectedPropertyImporter> ppis =
+            new ArrayList<ProtectedPropertyImporter>();
-                Object o = bc.newInstance();
-                if (o instanceof ProtectedPropertyImporter) {
-                    ppis.add((ProtectedPropertyImporter) o);
-                } else {
-                    log.warn("Invalid configuration entry: " + bc.getClassName() +" does not implement ProtectedPropertyImporter.");
-                }
+                ppis.add(bc.newInstance(ProtectedPropertyImporter.class));
