JCR-189: QueryHandler should use lucene Input-/OutputStream implementations

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@233174 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.fs.FileSystemException;
-import org.apache.jackrabbit.core.fs.FileSystemResource;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
-    private final FileSystemResource storage;
+    private final File storage;
-    public NamespaceMappings(FileSystemResource file) throws IOException {
+    public NamespaceMappings(File file) throws IOException {
-        try {
-            if (storage.exists()) {
-                InputStream in = storage.getInputStream();
-                try {
-                    Properties props = new Properties();
-                    log.debug("loading namespace mappings...");
-                    props.load(in);
+        if (storage.exists()) {
+            InputStream in = new FileInputStream(storage);
+            try {
+                Properties props = new Properties();
+                log.debug("loading namespace mappings...");
+                props.load(in);
-                    // read mappings from properties
-                    Iterator iter = props.keySet().iterator();
-                    while (iter.hasNext()) {
-                        String prefix = (String) iter.next();
-                        String uri = props.getProperty(prefix);
-                        log.debug(prefix + " -> " + uri);
-                        prefixToURI.put(prefix, uri);
-                        uriToPrefix.put(uri, prefix);
-                    }
-                    prefixCount = props.size();
-                    log.debug("namespace mappings loaded.");
-                } finally {
-                    in.close();
+                // read mappings from properties
+                Iterator iter = props.keySet().iterator();
+                while (iter.hasNext()) {
+                    String prefix = (String) iter.next();
+                    String uri = props.getProperty(prefix);
+                    log.debug(prefix + " -> " + uri);
+                    prefixToURI.put(prefix, uri);
+                    uriToPrefix.put(uri, prefix);
+                prefixCount = props.size();
+                log.debug("namespace mappings loaded.");
+            } finally {
+                in.close();
-        } catch (FileSystemException e) {
-            throw new IOException(e.getMessage());
-        OutputStream out = null;
+        OutputStream out = new FileOutputStream(storage);
-            storage.makeParentDirs();
-            out = new BufferedOutputStream(storage.getOutputStream());
+            out = new BufferedOutputStream(out);
-        } catch (FileSystemException e) {
-            throw new IOException(e.getMessage());
