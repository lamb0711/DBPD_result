JCR-890: concurrent read-only access to a session

Use an explicit lock instead of Java synchronization to be able to log warnings about concurrent session use.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@956898 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.concurrent.locks.Lock;
+import java.util.concurrent.locks.ReentrantLock;
+
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+     * Logger instance.
+     */
+    private static final Logger log =
+        LoggerFactory.getLogger(ActiveSessionState.class);
+
+    /**
+     * The lock used to guarantee synchronized execution of repository
+     * operations. An explicit lock is used instead of normal Java
+     * synchronization in order to be able to log attempts to concurrently
+     * use a session. TODO: Check if this is a performance issue!
+     */
+    private final Lock lock = new ReentrantLock();
+
+    /**
-    public synchronized void perform(SessionOperation operation)
-            throws RepositoryException {
-        operation.perform();
+    public void perform(SessionOperation operation) throws RepositoryException {
+        if (!lock.tryLock()) {
+            log.warn("Attempt to concurrently access a single session");
+            lock.lock();
+        }
+        try {
+            operation.perform();
+        } finally {
+            lock.unlock();
+        }
