- LazyItemIterator is created with either ChildItemReferences or ItemStates but did not handle ChildItemReferences.
- Temporarily use NodeId(null, "/") as root node id.
- TransientItemStateManager throws exception when root node state is created.
- Incorrect check for path part in UUIDReference.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@432559 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.jcr2spi.state.ChildItemReference;
+import org.apache.jackrabbit.jcr2spi.state.ItemStateException;
-            ItemState state = (ItemState) stateList.get(pos);
+            // TODO: make sure only ItemStates or ChildItemReferences are used, not both!
+            // TODO: check constructors of LazyItemIterator
+            Object refOrState = stateList.get(pos);
+                ItemState state;
+                if (refOrState instanceof ChildItemReference) {
+                    state = ((ChildItemReference) refOrState).resolve();
+                } else {
+                    state = (ItemState) refOrState;
+                }
-                log.debug("ignoring nonexistent item " + state);
+                log.debug("ignoring nonexistent item " + refOrState);
-                log.error("failed to fetch item " + state + ", skipping...", e);
+                log.error("failed to fetch item " + refOrState + ", skipping...", e);
+                // remove invalid id
+                stateList.remove(pos);
+                // try next
+            } catch (ItemStateException e) {
+                log.debug("ignoring nonexistent item " + refOrState);
