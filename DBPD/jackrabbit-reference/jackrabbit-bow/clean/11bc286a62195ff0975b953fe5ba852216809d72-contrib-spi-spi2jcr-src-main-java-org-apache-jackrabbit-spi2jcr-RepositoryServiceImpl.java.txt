PathNotFoundException when removing same-name-siblings in the same batch starting from lower index

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@540982 13f79535-47bb-0310-9956-ffa450edef68

+        /* If this batch needs to remove multiple same-name-siblings starting
+           from lower index, the index of the following siblings must be reset
+           in order to avoid PathNotFoundException.
+         */
+        private final Set removedNodeIds = new HashSet();
-                            getNode((NodeId) itemId, sInfo).remove();
+                            NodeId nodeId = calcRemoveNodeId(itemId);
+                            getNode(nodeId, sInfo).remove();
+        private NodeId calcRemoveNodeId(ItemId itemId) {
+            NodeId nodeId = (NodeId) itemId;
+            try {
+                Path p = itemId.getPath();
+                if (p != null) {
+                    removedNodeIds.add(itemId);
+                    int index = p.getNameElement().getNormalizedIndex();
+                    if (index > Path.INDEX_DEFAULT && !removedNodeIds.isEmpty()) {
+                        Path.PathElement[] elems = p.getElements();
+                        Path.PathBuilder pb = new Path.PathBuilder();
+                        for (int i = 0; i <= elems.length - 2; i++) {
+                            pb.addLast(elems[i]);
+                        }
+                        pb.addLast(p.getNameElement().getName(), index - 1);
+                        NodeId prevSibling = idFactory.createNodeId(itemId.getUniqueID(), pb.getPath());
+                        if (removedNodeIds.contains(prevSibling)) {
+                            nodeId = prevSibling;
+                        }
+                    }
+                }
+            } catch (MalformedPathException e) {
+                // ignore
+            }
+            return nodeId;
+        }
+
