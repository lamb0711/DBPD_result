JCR-1204: Redesign SPI observation

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@592356 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.Subscription;
+import org.apache.jackrabbit.spi.EventFilter;
+import org.apache.jackrabbit.spi.IdFactory;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Collection;
+import java.util.Collections;
+     * The subscriptions that are currently in place for this session info.
+     */
+    private List subscriptions = Collections.EMPTY_LIST;
+
+    /**
+     * Monitor object for subscription changes.
+     */
+    private Object subscriptionChange = new Object();
+
+    /**
+    Collection getSubscriptions() {
+        synchronized (subscriptionChange) {
+            return subscriptions;
+        }
+    }
+
+    /**
+     * Creates a subscriptions for this session info.
+     *
+     * @param idFactory the id factory.
+     * @param filters the initial list of filters.
+     * @return a subscription.
+     * @throws RepositoryException
+     */
+    Subscription createSubscription(IdFactory idFactory, EventFilter[] filters)
+            throws RepositoryException {
+        synchronized (subscriptionChange) {
+            List tmp = new ArrayList(subscriptions);
+            EventSubscription s = new EventSubscription(idFactory, this, filters);
+            tmp.add(s);
+            subscriptions = Collections.unmodifiableList(tmp);
+            return s;
+        }
+    }
+
+    /**
+     * Removes the subscription from this session info is it exists.
+     *
+     * @param subscription the subscription to remove.
+     */
+    void removeSubscription(Subscription subscription) {
+        synchronized (subscriptionChange) {
+            List tmp = new ArrayList(subscriptions);
+            tmp.remove(subscription);
+            subscriptions = Collections.unmodifiableList(tmp);
+        }
+    }
+
