JCR-2744: Avoid element arrays in PathImpl

Use new path construction mechanisms in PathBuilder and PathFactoryImpl

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@995787 13f79535-47bb-0310-9956-ffa450edef68

-    protected Path createPath(Path parent, Element element)
-            throws RepositoryException {
-        if (element.denotesCurrent()) {
-            return new CurrentPath(parent);
+    public final Path resolve(Element element) {
+        if (element.denotesName()) {
+            return new NamePath(this, element);
-            return new ParentPath(parent);
-        } else if (element.denotesName()) {
-            return new NamePath(parent, element);
+            if (isAbsolute() && getDepth() == 0) {
+                throw new IllegalArgumentException(
+                        "An absolute paths with negative depth is not allowed");
+            }
+            return new ParentPath(this);
+        } else if (element.denotesCurrent()) {
+            return new CurrentPath(this);
+        } else if (element.denotesRoot()) {
+            return RootPath.INSTANCE;
+        } else if (element.denotesIdentifier()) {
+            return new IdentifierPath(element);
-            throw new RepositoryException("Unknown path element: " + element);
+            throw new IllegalArgumentException(
+                    "Unknown path element type: " + element);
-    public final Path resolve(Path relative) throws RepositoryException {
+    public final Path resolve(Path relative) {
-            Element element = relative.getNameElement();
+            Path path = this;
-                Path parent = relative.subPath(0, n - 1);
-                return createPath(resolve(parent), element);
-            } else {
-                return createPath(this, element);
+                path = resolve(relative.subPath(0, n - 1));
+            return path.resolve(relative.getNameElement());
-                    path = createPath(path, b[bi++]);
+                    path = path.resolve(b[bi++]);
