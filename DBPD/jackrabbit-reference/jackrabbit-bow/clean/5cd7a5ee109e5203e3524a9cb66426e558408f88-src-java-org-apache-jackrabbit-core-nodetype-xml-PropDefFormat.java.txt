Use object arrays internally for better type safety (JCR-54)
 - suggested by Angela Schreiber

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@158757 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Collection;
-import java.util.Iterator;
-        Collection constraints = getGrandChildContents(
+        String[] constraints = getGrandChildContents(
-            Iterator iterator = constraints.iterator();
-            while (iterator.hasNext()) {
-                String constraint = (String) iterator.next();
+            for (int i = 0; i < constraints.length; i++) {
-                            type, constraint, getNamespaceResolver()));
+                            type, constraints[i], getNamespaceResolver()));
-                            "Invalid value constraint " + constraint, e);
+                            "Invalid value constraint " + constraints[i], e);
-        Collection defaults = getGrandChildContents(
+        String[] defaults = getGrandChildContents(
-            Iterator iterator = defaults.iterator();
-            while (iterator.hasNext()) {
-                String value = (String) iterator.next();
-                vector.add(InternalValue.valueOf(value, type));
+            for (int i = 0; i < defaults.length; i++) {
+                vector.add(InternalValue.valueOf(defaults[i], type));
