JCR-2087: parametrize generic types

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@816597 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Iterator;
-    private final TreeSet sortedKeys;
+    private final TreeSet<Key> sortedKeys;
-    private final HashMap aggregates;
+    private final HashMap<Key, EffectiveNodeType> aggregates;
-        sortedKeys = new TreeSet();
-        aggregates = new HashMap();
+        sortedKeys = new TreeSet<Key>();
+        aggregates = new HashMap<Key, EffectiveNodeType>();
-        Iterator iter = sortedKeys.iterator();
-        while (iter.hasNext()) {
-            Key k = (Key) iter.next();
+        for (Key k : sortedKeys) {
-        ArrayList keys = new ArrayList(aggregates.keySet());
-        for (Iterator keysIter = keys.iterator(); keysIter.hasNext();) {
-            Key k = (Key) keysIter.next();
+        ArrayList<Key> keys = new ArrayList<Key>(aggregates.keySet());
+        for (Key k : keys) {
-        return (EffectiveNodeType) aggregates.get(key);
+        return aggregates.get(key);
-        EffectiveNodeType removed = (EffectiveNodeType) aggregates.remove(key);
+        EffectiveNodeType removed = aggregates.remove(key);
-        Iterator iter = sortedKeys.iterator();
-        while (iter.hasNext()) {
-            Key k = (Key) iter.next();
+        for (Key k : sortedKeys) {
-         * @param numBits the number of bits that are '1' in the given bis
+         * @param numBits the number of bits that are '1' in the given bits
-         * <code>fromIndex</code> inclusieve.
+         * <code>fromIndex</code> inclusive.
-         * This compares 1. the cardinailty (number of set bits) and 2. the
-         * nummeric value of the bitsets in descending order.
+         * This compares 1. the cardinality (number of set bits) and 2. the
+         * numeric value of the bitsets in descending order.
