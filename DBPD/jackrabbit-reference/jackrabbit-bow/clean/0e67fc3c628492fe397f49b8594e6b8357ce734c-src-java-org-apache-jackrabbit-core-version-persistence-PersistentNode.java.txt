fixed issue JCR-36: NodeTypeRegistry.reregister unregisters dependent types
http://issues.apache.org/jira/browse/JCR-36




git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@123983 13f79535-47bb-0310-9956-ffa450edef68

-            return ntReg.buildEffectiveNodeType((QName[]) set.toArray(new QName[set.size()]));
+            return ntReg.getEffectiveNodeType((QName[]) set.toArray(new QName[set.size()]));
-            try {
-                NodeTypeRegistry ntReg = ntMgr.getNodeTypeRegistry();
-                EffectiveNodeType ent = ntReg.buildEffectiveNodeType(new QName[]{NodeTypeRegistry.NT_UNSTRUCTURED});
-                ChildNodeDef cnd = ent.getApplicableChildNodeDef(name, nodeTypeName);
-                def = ntMgr.getNodeDef(new NodeDefId(cnd));
-            } catch (NodeTypeConflictException e) {
-                String msg = "no definition found in parent node's node type for new node";
-                throw new ConstraintViolationException(msg, re);
-            }
+            NodeTypeRegistry ntReg = ntMgr.getNodeTypeRegistry();
+            EffectiveNodeType ent = ntReg.getEffectiveNodeType(NodeTypeRegistry.NT_UNSTRUCTURED);
+            ChildNodeDef cnd = ent.getApplicableChildNodeDef(name, nodeTypeName);
+            def = ntMgr.getNodeDef(new NodeDefId(cnd));
