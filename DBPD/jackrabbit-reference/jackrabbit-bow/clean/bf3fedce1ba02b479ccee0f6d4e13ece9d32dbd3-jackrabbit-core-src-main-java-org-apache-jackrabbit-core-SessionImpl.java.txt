JCR-1181: Use common base classes in core

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@599177 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.IOException;
-import java.io.InputStream;
-import java.io.OutputStream;
-import javax.jcr.InvalidSerializedDataException;
-import javax.xml.parsers.ParserConfigurationException;
-import javax.xml.transform.OutputKeys;
-import javax.xml.transform.TransformerException;
-import javax.xml.transform.sax.SAXTransformerFactory;
-import javax.xml.transform.sax.TransformerHandler;
-import javax.xml.transform.stream.StreamResult;
-import org.apache.jackrabbit.core.xml.SAXParserProvider;
+import org.apache.jackrabbit.commons.AbstractSession;
-public class SessionImpl implements Session, NamePathResolver, Dumpable {
+public class SessionImpl extends AbstractSession
+        implements NamePathResolver, Dumpable {
-    public void importXML(String parentAbsPath, InputStream in,
-                          int uuidBehavior)
-            throws IOException, PathNotFoundException, ItemExistsException,
-            ConstraintViolationException, VersionException,
-            InvalidSerializedDataException, LockException, RepositoryException {
-        // check sanity of this session
-        sanityCheck();
-
-        ImportHandler handler = (ImportHandler)
-                getImportContentHandler(parentAbsPath, uuidBehavior);
-        try {
-            SAXParserProvider.getParser().parse(new InputSource(in), handler);
-        } catch (SAXException se) {
-            // check for wrapped repository exception
-            Exception e = se.getException();
-            if (e != null && e instanceof RepositoryException) {
-                throw (RepositoryException) e;
-            } else {
-                String msg = "failed to parse XML stream";
-                log.debug(msg);
-                throw new InvalidSerializedDataException(msg, se);
-            }
-        } catch (ParserConfigurationException e) {
-            throw new RepositoryException("SAX parser configuration error", e);
-        }
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public void exportDocumentView(String absPath, OutputStream out,
-                                   boolean skipBinary, boolean noRecurse)
-            throws IOException, PathNotFoundException, RepositoryException {
-
-        SAXTransformerFactory stf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();
-
-        try {
-            TransformerHandler th = stf.newTransformerHandler();
-            th.getTransformer().setOutputProperty(OutputKeys.METHOD, "xml");
-            th.getTransformer().setOutputProperty(OutputKeys.ENCODING, "UTF-8");
-            th.getTransformer().setOutputProperty(OutputKeys.INDENT, "no");
-            th.setResult(new StreamResult(out));
-
-            exportDocumentView(absPath, th, skipBinary, noRecurse);
-        } catch (TransformerException te) {
-            throw new RepositoryException(te);
-        } catch (SAXException se) {
-            throw new RepositoryException(se);
-        }
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public void exportSystemView(String absPath, OutputStream out,
-                                 boolean skipBinary, boolean noRecurse)
-            throws IOException, PathNotFoundException, RepositoryException {
-
-        SAXTransformerFactory stf = (SAXTransformerFactory) SAXTransformerFactory.newInstance();
-        try {
-            TransformerHandler th = stf.newTransformerHandler();
-            th.getTransformer().setOutputProperty(OutputKeys.METHOD, "xml");
-            th.getTransformer().setOutputProperty(OutputKeys.ENCODING, "UTF-8");
-            th.getTransformer().setOutputProperty(OutputKeys.INDENT, "no");
-            th.setResult(new StreamResult(out));
-
-            exportSystemView(absPath, th, skipBinary, noRecurse);
-        } catch (TransformerException te) {
-            throw new RepositoryException(te);
-        } catch (SAXException se) {
-            throw new RepositoryException(se);
-        }
-    }
-
-    /**
-     * {@inheritDoc}
-     */
