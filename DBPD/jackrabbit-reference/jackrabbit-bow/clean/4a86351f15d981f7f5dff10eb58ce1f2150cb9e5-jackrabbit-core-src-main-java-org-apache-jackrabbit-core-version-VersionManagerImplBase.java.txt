JCR-2140: Baselines & Configurations


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@797094 13f79535-47bb-0310-9956-ffa450edef68

-                Set<NodeId> baseVersions = null;
-                    baseVersions = collectBaseVersions(state);
+                    // collect the base versions and the the rep:versions property of the configuration
+                    Set<NodeId> baseVersions = collectBaseVersions(state);
+                    InternalValue[] vs = new InternalValue[baseVersions.size()];
+                    int i=0;
+                    for (NodeId id: baseVersions) {
+                        vs[i++] = InternalValue.create(id);
+                    }
+                    state.setPropertyValues(NameConstants.REP_VERSIONS, PropertyType.REFERENCE, vs);
+                    state.store();
-                InternalVersion v = vMgr.checkin(session, state, baseVersions);
+                InternalVersion v = vMgr.checkin(session, state);
-            throw new ItemNotFoundException("Configuration root node for " + safeGetJCRPath(config) + " not found.");
+            String msg = "Configuration root node for " + safeGetJCRPath(config) + " not found.";
+            log.error(msg);
+            throw new ItemNotFoundException(msg);
-        baseVersions.add(root.getPropertyValue(NameConstants.JCR_BASEVERSION).getNodeId());
-        for (NodeStateEx child: root.getChildNodes()) {
-            if (child.getEffectiveNodeType().includesNodeType(NameConstants.MIX_VERSIONABLE)) {
-                if (child.hasProperty(NameConstants.JCR_CONFIGURATION)) {
-                    // don't traverse into child nodes that have a jcr:configuration
-                    // property as they belong to a different configuration.
-                    continue;
-                }
-                baseVersions.add(child.getPropertyValue(NameConstants.JCR_BASEVERSION).getNodeId());
+        if (!baseVersions.isEmpty()) {
+            // base version of configuration root already recorded
+            if (root.hasProperty(NameConstants.JCR_CONFIGURATION)
+                    && root.getEffectiveNodeType().includesNodeType(NameConstants.MIX_VERSIONABLE)) {
+                // don't traverse into child nodes that have a jcr:configuration
+                // property as they belong to a different configuration.
+                return;
+        }
+        InternalVersion baseVersion = getBaseVersion(root);
+        if (baseVersion.isRootVersion()) {
+            String msg = "Unable to checkin configuration as it has unversioned child node: " + safeGetJCRPath(root);
+            log.error(msg);
+            throw new UnsupportedRepositoryOperationException(msg);
+        }
+        baseVersions.add(baseVersion.getId());
+
+        for (NodeStateEx child: root.getChildNodes()) {
-            log.debug(msg);
+            log.error(msg);
-            throw new RepositoryException("Unable to start edit operation.", e);
+            String msg = "Unable to start edit operation.";
+            throw new RepositoryException(msg, e);
