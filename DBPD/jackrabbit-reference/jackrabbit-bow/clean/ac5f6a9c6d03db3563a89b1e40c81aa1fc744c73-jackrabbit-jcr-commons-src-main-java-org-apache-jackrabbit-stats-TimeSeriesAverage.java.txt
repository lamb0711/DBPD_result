JCR-3860: Properly expose missing values in TimeSeries implementations
Add encoding for default value so clients get a chance to identify them. Default is 0 for backward compatibility.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1706408 13f79535-47bb-0310-9956-ffa450edef68

+    /** The value used to encode missing values */
+    private final long missingValue;
+
+    /**
+     * Same as {@link #TimeSeriesAverage(TimeSeries, TimeSeries, long)} passing 0 for the 3rd argument.
+     * @param value         {@code TimeSeries} of values
+     * @param counter       {@code TimeSeries} of counts
+     */
+        this(value, counter, 0);
+    }
+
+    /**
+     * @param value         {@code TimeSeries} of values
+     * @param counter       {@code TimeSeries} of counts
+     * @param missingValue  The value used to encode missing values
+     */
+    public TimeSeriesAverage(TimeSeries value, TimeSeries counter, long missingValue) {
+        this.missingValue = missingValue;
+    @Override
+    public long getMissingValue() {
+        return missingValue;
+    }
+
+    @Override
+    @Override
+    @Override
+    @Override
-     * @param a array
-     * @param b array
+     * @param v array
+     * @param c array
-    private long[] divide(long[] a, long[] b) {
-        long[] c = new long[a.length];
-        for (int i = 0; i < a.length; i++) {
-            if (b[i] != 0) {
-                c[i] = a[i] / b[i];
+    private long[] divide(long[] v, long[] c) {
+        long[] avg = new long[v.length];
+        for (int i = 0; i < v.length; i++) {
+            if (c[i] == 0 || v[i] == value.getMissingValue() || c[i] == counter.getMissingValue()) {
+                avg[i] = missingValue;
-                c[i] = 0;
+                avg[i] = v[i] / c[i];
-        return c;
+        return avg;
