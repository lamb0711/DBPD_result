[JCR-175] Contrib JCR-Server: enable PROPPATCH for simple-davresource
[JCR-174] Contrib JCR-Server: improve handing of strong etags

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@230679 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.jcr.version.report.ExportViewReport;
+import org.apache.jackrabbit.webdav.jcr.version.report.LocateCorrespondingNodeReport;
+        internalSetProperty(property);
+        complete();
+    }
+
+    /**
+     * Internal method used to set or add the given property
+     *
+     * @param property
+     * @throws DavException
+     * @see #setProperty(DavProperty)
+     * @see #alterProperties(DavPropertySet, DavPropertyNameSet)
+     */
+    private void internalSetProperty(DavProperty property) throws DavException {
-                complete();
-
+        internalRemoveProperty(propertyName);
+        complete();
+    }
+
+    /**
+     * Internal method used to remove the property with the given name.
+     *
+     * @param propertyName
+     * @throws DavException
+     * @see #removeProperty(DavPropertyName)
+     * @see #alterProperties(DavPropertySet, DavPropertyNameSet)
+     */
+    private void internalRemoveProperty(DavPropertyName propertyName) throws DavException {
-                complete();
-
+     *
+     * @param setProperties
+     * @param removePropertyNames
+     * @throws DavException
+     * @todo undo incomplete modifications...
+     */
+    public void alterProperties(DavPropertySet setProperties,
+                                DavPropertyNameSet removePropertyNames)
+        throws DavException {
+        DavPropertyIterator setIter = setProperties.iterator();
+        while (setIter.hasNext()) {
+            DavProperty prop = setIter.nextProperty();
+            internalSetProperty(prop);
+        }
+        Iterator remNameIter = removePropertyNames.iterator();
+        while (remNameIter.hasNext()) {
+            DavPropertyName propName = (DavPropertyName) remNameIter.next();
+            internalRemoveProperty(propName);
+        }
+        // save all changes together
+        complete();
+    }
+
+    /**
+     * Defines the additional reports supported by this resource (reports
+     * specific for resources representing a repository {@link Node node}):
+     * <ul>
+     * <li>{@link ExportViewReport export view report}</li>
+     * <li>{@link LocateCorrespondingNodeReport locate corresponding node report}</li>
+     * </ul>
+     * 
+     * @see org.apache.jackrabbit.webdav.version.report.SupportedReportSetProperty
+     */
+    protected void initSupportedReports() {
+        super.initSupportedReports();
+        if (exists()) {
+            supportedReports.addReportType(ExportViewReport.EXPORTVIEW_REPORT);
+            supportedReports.addReportType(LocateCorrespondingNodeReport.LOCATE_CORRESPONDING_NODE_REPORT);
+        }
+    }
+
+    /**
-                pHref[i] = this.getLocatorFromResourcePath(values[i].getPath()).getHref(true);
+                pHref[i] = getLocatorFromResourcePath(values[i].getPath()).getHref(true);
