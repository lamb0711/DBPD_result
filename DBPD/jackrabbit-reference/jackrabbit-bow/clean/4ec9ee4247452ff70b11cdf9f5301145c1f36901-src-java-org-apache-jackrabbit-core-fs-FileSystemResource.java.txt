- removed @author and @version (i.e. $Revision & $Id) tags
- removed tab characters from java source code

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47648 13f79535-47bb-0310-9956-ffa450edef68

- *
- * @author Stefan Guggisberg
- * @version $Revision: 1.9 $, $Date: 2004/08/25 16:44:52 $
-	if (fs == null) {
-	    throw new IllegalArgumentException("invalid file system argument");
-	}
-	this.fs = fs;
+        if (fs == null) {
+            throw new IllegalArgumentException("invalid file system argument");
+        }
+        this.fs = fs;
-	if (path == null) {
-	    throw new IllegalArgumentException("invalid path argument");
-	}
-	this.path = path;
+        if (path == null) {
+            throw new IllegalArgumentException("invalid path argument");
+        }
+        this.path = path;
-	return fs;
+        return fs;
-	return path;
+        return path;
-	return FileSystemPathUtil.getParentDir(path);
+        return FileSystemPathUtil.getParentDir(path);
-	return FileSystemPathUtil.getName(path);
+        return FileSystemPathUtil.getName(path);
-	String parentDir = getParentDir();
-	if (!fs.exists(parentDir)) {
-	    fs.createFolder(parentDir);
-	}
+        String parentDir = getParentDir();
+        if (!fs.exists(parentDir)) {
+            fs.createFolder(parentDir);
+        }
-	fs.deleteFile(path);
+        fs.deleteFile(path);
-	return fs.exists(path);
+        return fs.exists(path);
-	return fs.getInputStream(path);
+        return fs.getInputStream(path);
-	InputStream in = fs.getInputStream(path);
-	try {
-	    byte[] buffer = new byte[8192];
-	    int read = 0;
-	    while ((read = in.read(buffer)) > 0) {
-		out.write(buffer, 0, read);
-	    }
-	} finally {
-	    try {
-		in.close();
-	    } catch (IOException ioe) {
-	    }
-	}
+        InputStream in = fs.getInputStream(path);
+        try {
+            byte[] buffer = new byte[8192];
+            int read = 0;
+            while ((read = in.read(buffer)) > 0) {
+                out.write(buffer, 0, read);
+            }
+        } finally {
+            try {
+                in.close();
+            } catch (IOException ioe) {
+            }
+        }
-	return fs.getOutputStream(path);
+        return fs.getOutputStream(path);
-	return fs.lastModified(path);
+        return fs.lastModified(path);
-	return fs.length(path);
+        return fs.length(path);
-	fs.touch(path);
+        fs.touch(path);
-	fs.move(path, destPath);
+        fs.move(path, destPath);
-	return getPath();
+        return getPath();
-	if (this == obj) {
-	    return true;
-	}
-	if (obj instanceof FileSystemResource) {
-	    FileSystemResource other = (FileSystemResource) obj;
-	    return (path == null ? other.path == null : path.equals(other.path))
-		    && (fs == null ? other.fs == null : fs.equals(other.fs));
-	}
-	return false;
+        if (this == obj) {
+            return true;
+        }
+        if (obj instanceof FileSystemResource) {
+            FileSystemResource other = (FileSystemResource) obj;
+            return (path == null ? other.path == null : path.equals(other.path))
+                    && (fs == null ? other.fs == null : fs.equals(other.fs));
+        }
+        return false;
