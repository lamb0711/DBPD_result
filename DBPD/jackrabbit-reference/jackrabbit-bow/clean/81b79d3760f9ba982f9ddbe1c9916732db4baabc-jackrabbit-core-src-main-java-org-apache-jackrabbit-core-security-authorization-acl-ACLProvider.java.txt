 JCR-1588: JSR 283: Access Control

- minor improvement, javadoc, java 5, tests


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@792160 13f79535-47bb-0310-9956-ffa450edef68

-    public CompiledPermissions compilePermissions(Set principals) throws RepositoryException {
+    public CompiledPermissions compilePermissions(Set<Principal> principals) throws RepositoryException {
-    public boolean canAccessRoot(Set principals) throws RepositoryException {
+    public boolean canAccessRoot(Set<Principal> principals) throws RepositoryException {
-        private AclPermissions(Set principals) throws RepositoryException {
+        private AclPermissions(Set<Principal> principals) throws RepositoryException {
-        private AclPermissions(Set principals, boolean listenToEvents) throws RepositoryException {
+        private AclPermissions(Set<Principal> principals, boolean listenToEvents) throws RepositoryException {
-            for (Iterator it = principals.iterator(); it.hasNext();) {
-                principalNames.add(((Principal) it.next()).getName());
+            for (Principal princ : principals) {
+                principalNames.add(princ.getName());
+         * @return true if read is allowed everywhere.
-        private boolean isReadAllowed(Collection principalnames) {
+        private boolean isReadAllowed(Collection<String> principalnames) {
-            while (entries.hasNext() && allows != privAll) {
+            while (entries.hasNext()) {
+    //--------------------------------------------------------------------------
+    /**
+     * Inner class used to collect ACEs for a given set of principals throughout
+     * the node hierarchy.
+     */
