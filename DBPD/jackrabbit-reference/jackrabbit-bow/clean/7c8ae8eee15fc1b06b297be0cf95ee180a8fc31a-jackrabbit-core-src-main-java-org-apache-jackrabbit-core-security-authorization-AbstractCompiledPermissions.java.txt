JCR-1588: 283 Access Control

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@689499 13f79535-47bb-0310-9956-ffa450edef68

-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-    private static Logger log = LoggerFactory.getLogger(AbstractCompiledPermissions.class);
-
-     * @return
+     * @return the <code>Result</code> for the give <code>absPath</code>.
-    protected Result getResult(Path absPath) throws RepositoryException {
+    public Result getResult(Path absPath) throws RepositoryException {
+    /**
+     *
+     */
+    public static class Result {
-    protected class Result {
+        public static final Result EMPTY = new Result(Permission.NONE, Permission.NONE, PrivilegeRegistry.NO_PRIVILEGE, PrivilegeRegistry.NO_PRIVILEGE);
-        private final int permissions;
-        private final int privileges;
+        private final int allows;
+        private final int denies;
+        private final int allowPrivileges;
+        private final int denyPrivileges;
-        public Result(int permissions, int privileges) {
-            this.permissions = permissions;
-            this.privileges = privileges;
+        private final int hashCode;
+
+        public Result(int allows, int denies, int allowPrivileges, int denyPrivileges) {
+            this.allows = allows;
+            this.denies = denies;
+            this.allowPrivileges = allowPrivileges;
+            this.denyPrivileges = denyPrivileges;
+
+            int h = 17;
+            h = 37 * h + allows;
+            h = 37 * h + denies;
+            h = 37 * h + allowPrivileges;
+            h = 37 * h + denyPrivileges;
+            hashCode = h;
-            return (this.permissions | ~permissions) == -1;
+            return (this.allows | ~permissions) == -1;
-            return privileges;
+            return allowPrivileges;
+        }
+
+        public Result combine(Result other) {
+            int cAllows =  allows | Permission.diff(other.allows, denies);
+            int cDenies = denies | Permission.diff(other.denies, allows);
+            int cAPrivs = allowPrivileges | Permission.diff(other.allowPrivileges, denyPrivileges);
+            int cDPrivs = denyPrivileges | Permission.diff(other.denyPrivileges, allowPrivileges);
+            return new Result(cAllows, cDenies, cAPrivs, cDPrivs);
+        }
+
+        /**
+         * @see Object#hashCode()
+         */
+        public int hashCode() {
+            return hashCode;
+        }
+
+        /**
+         * @see Object#equals(Object)
+         */
+        public boolean equals(Object object) {
+            if (object == this) {
+                return true;
+            }
+            if (object instanceof Result) {
+                Result other = (Result) object;
+                return allows == other.allows &&
+                       denies == other.denies &&
+                       allowPrivileges == other.allowPrivileges &&
+                       denyPrivileges == other.denyPrivileges;
+            }
+            return false;
