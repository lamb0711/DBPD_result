JCR-890: concurrent read-only access to a session

Make NodeTypeManager a part of SessionContext.

Remove the session member variable from ItemImpl

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@985244 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.Session;
-                session.getNodeTypeManager().getPropertyDefinition(def);
+                sessionContext.getNodeTypeManager().getPropertyDefinition(def);
-                String str = ValueFormat.getJCRString(value, session);
+                String str = ValueFormat.getJCRString(value, sessionContext);
-                    ValueFormat.getJCRValue(InternalValue.create(name), session, session.getValueFactory()),
-                    reqType, session.getValueFactory());
+                    ValueFormat.getJCRValue(InternalValue.create(name), sessionContext, getSession().getValueFactory()),
+                    reqType, getSession().getValueFactory());
-                    targetValue, session, sessionContext.getDataStore());
+                    targetValue, sessionContext, sessionContext.getDataStore());
-                                ValueFormat.getJCRValue(InternalValue.create(name), session, session.getValueFactory()),
-                                reqType, session.getValueFactory());
+                                ValueFormat.getJCRValue(InternalValue.create(name), sessionContext, getSession().getValueFactory()),
+                                reqType, getSession().getValueFactory());
-                                targetValue, session,
+                                targetValue, sessionContext,
-            values[i] = ValueFormat.getJCRValue(internals[i], session, session.getValueFactory());
+            values[i] = ValueFormat.getJCRValue(internals[i], sessionContext, getSession().getValueFactory());
-            return ValueFormat.getJCRValue(internalGetValue(), session, session.getValueFactory());
+            return ValueFormat.getJCRValue(internalGetValue(), sessionContext, getSession().getValueFactory());
+        Session session = getSession();
-                Path p = session.getQPath(path);
+                Path p = sessionContext.getQPath(path);
-                    p = session.getQPath(pathValue.getString());
+                    p = sessionContext.getQPath(pathValue.getString());
-        Value pathValue = ValueHelper.convert(value, PATH, session.getValueFactory());
+        Value pathValue = ValueHelper.convert(value, PATH, getSession().getValueFactory());
-            Path p = session.getQPath(path);
+            Path p = sessionContext.getQPath(path);
-            return (absolute) ? session.getProperty(path) : getParent().getProperty(path);
+            return (absolute) ? getSession().getProperty(path) : getParent().getProperty(path);
-                setValue(session.getValueFactory().createValue(value));
+                setValue(getSession().getValueFactory().createValue(value));
-                    value, reqType, session.getValueFactory());
+                    value, reqType, getSession().getValueFactory());
-                    targetVal, session, sessionContext.getDataStore());
+                    targetVal, sessionContext, sessionContext.getDataStore());
-                    value, session, sessionContext.getDataStore());
+                    value, sessionContext, sessionContext.getDataStore());
-                                value, reqType, session.getValueFactory());
+                                value, reqType, getSession().getValueFactory());
-                            value, session, sessionContext.getDataStore());
+                            value, sessionContext, sessionContext.getDataStore());
-        return session.getJCRName(((PropertyId) id).getName());
+        return sessionContext.getJCRName(((PropertyId) id).getName());
