JCR-1591: JSR 283: NodeType Management

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@657073 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.api.jsr283.nodetype.NodeDefinitionTemplate;
-import org.apache.jackrabbit.api.jsr283.nodetype.NodeTypeDefinition;
+import org.apache.jackrabbit.api.jsr283.nodetype.NodeTypeDefinition;
+import org.apache.jackrabbit.api.jsr283.nodetype.NodeDefinitionTemplate;
-        nodeDefinitionTemplates = TypedList.decorate(
-                new ArrayList(), NodeDefinitionTemplate.class);
-        propertyDefinitionTemplates = TypedList.decorate(
-                new ArrayList(), PropertyDefinitionTemplate.class);
-        for (int i = 0; i < nodeDefs.length; i++) {
-            nodeDefinitionTemplates.add(new NodeDefinitionTemplateImpl(nodeDefs[i]));
+        if (nodeDefs != null) {
+            List list = getNodeDefinitionTemplates();
+            for (int i = 0; i < nodeDefs.length; i++) {
+                list.add(new NodeDefinitionTemplateImpl(nodeDefs[i]));
+            }
-        for (int i = 0; i < propDefs.length; i++) {
-            propertyDefinitionTemplates.add(new PropertyDefinitionTemplateImpl(propDefs[i]));
+        if (propDefs != null) {
+            List list = getPropertyDefinitionTemplates();
+            for (int i = 0; i < propDefs.length; i++) {
+                list.add(new PropertyDefinitionTemplateImpl(propDefs[i]));
+            }
+        if (propertyDefinitionTemplates == null) {
+            propertyDefinitionTemplates = TypedList.decorate(
+                    new ArrayList(), PropertyDefinitionTemplate.class);
+        }
+        if (nodeDefinitionTemplates == null) {
+            nodeDefinitionTemplates = TypedList.decorate(
+                    new ArrayList(), NodeDefinitionTemplate.class);
+        }
-        return (PropertyDefinition[]) propertyDefinitionTemplates.toArray(
-                new PropertyDefinition[propertyDefinitionTemplates.size()]);
+        if (propertyDefinitionTemplates == null) {
+            return null;
+        } else {
+            return (PropertyDefinition[]) propertyDefinitionTemplates.toArray(
+                    new PropertyDefinition[propertyDefinitionTemplates.size()]);
+        }
-        return (NodeDefinition[]) nodeDefinitionTemplates.toArray(
-                new NodeDefinition[nodeDefinitionTemplates.size()]);
+        if (nodeDefinitionTemplates == null) {
+            return null;
+        } else {
+            return (NodeDefinition[]) nodeDefinitionTemplates.toArray(
+                    new NodeDefinition[nodeDefinitionTemplates.size()]);
+        }
