JCR-2587: Coarser granularity of node type unregistration notifications

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@927945 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.id.NodeId;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.List;
+
+import javax.jcr.NodeIterator;
+import javax.jcr.PropertyIterator;
+import javax.jcr.RepositoryException;
+
+import org.apache.jackrabbit.core.id.NodeId;
+import org.apache.jackrabbit.spi.commons.conversion.MalformedPathException;
-import org.apache.jackrabbit.spi.commons.conversion.MalformedPathException;
-import javax.jcr.NodeIterator;
-import javax.jcr.PropertyIterator;
-import javax.jcr.RepositoryException;
-import java.util.ArrayList;
-import java.util.List;
-
-        nodeTypeUnregistered(ntName);
+        nodeTypesUnregistered(Collections.singleton(ntName));
-    public void nodeTypeUnregistered(Name ntName) {
+    public void nodeTypesUnregistered(Collection<Name> names) {
-                NodeImpl root = (NodeImpl) systemSession.getItemManager().getItem(rootNodeId);
-                NodeImpl child = root.getNode(ntName);
-                List events = new ArrayList();
-                recursiveRemove(events, root, child);
+                List<EventState> events = new ArrayList<EventState>();
+
+                NodeImpl root = (NodeImpl)
+                    systemSession.getItemManager().getItem(rootNodeId);
+                for (Name name : names) {
+                    NodeImpl child = root.getNode(name);
+                    recursiveRemove(events, root, child);
+                }
+
-                virtProvider.onNodeTypeRemoved(ntName);
+                virtProvider.onNodeTypesRemoved(names);
-            log.error("Unable to index removed nodetype: " + e.toString());
+            log.error("Unable to index removed nodetypes: " + names, e);
-    private void recursiveAdd(List events, NodeImpl parent, NodeImpl node)
+    private void recursiveAdd(
+            List<EventState> events, NodeImpl parent, NodeImpl node)
-    private void recursiveRemove(List events, NodeImpl parent, NodeImpl node)
+    private void recursiveRemove(
+            List<EventState> events, NodeImpl parent, NodeImpl node)
