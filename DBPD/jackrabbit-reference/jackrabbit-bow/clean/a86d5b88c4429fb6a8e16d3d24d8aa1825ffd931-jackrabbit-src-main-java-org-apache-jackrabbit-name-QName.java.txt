- improve Path and QName classes
- improve PathElement handling 
- add convenience methods to NameFormat


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@424258 13f79535-47bb-0310-9956-ffa450edef68

-        // internalize both namespaceURI and localName to improve performance
-        // of QName comparisons
+        // internalize only namespaceURI to improve performance of QName
+        // comparisons. Please note that we do not internalize the localname
+        // since this could blow perm space for big repositories.
-        this.localName = localName.intern();
+        this.localName = localName;
+    /**
+     * Returns a new instance of this class with the same namespace URI and
+     * local name as has been deserialized.
+     * <p>
+     * If just sing plain serialization, the strings are just created but not
+     * internalized.
+     */
+    private Object readResolve() {
+        return new QName(namespaceURI, localName);
+    }
+
-            // localName & namespaceURI are internalized,
-            // we only have to compare their references
-            return localName == other.localName
-                    && namespaceURI == other.namespaceURI;
+            // namespaceURI is internalized, we only have to compare their
+            // references
+            return namespaceURI == other.namespaceURI
+                    && localName.equals(other.localName);
-    public int compareTo(Object o) throws ClassCastException {
+    public int compareTo(Object o) {
+        if (this == o) {
+            return 0;
+        }
-        int result = namespaceURI.compareTo(other.namespaceURI);
-        return (result != 0) ? result : localName.compareTo(other.localName);
+        // == comparison ok, because of .intern() strings
+        if (namespaceURI == other.namespaceURI) {
+            return localName.compareTo(other.localName);
+        } else {
+            return namespaceURI.compareTo(other.namespaceURI);
+        }
