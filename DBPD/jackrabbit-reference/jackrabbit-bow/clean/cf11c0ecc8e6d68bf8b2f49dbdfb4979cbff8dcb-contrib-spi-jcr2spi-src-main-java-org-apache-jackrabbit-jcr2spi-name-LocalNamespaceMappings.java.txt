work in progress

- minor improvement and some sync



git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@497068 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.name.NameCache;
-    implements NamespaceListener {
+    implements NamespaceListener, NameCache {
+    //-------------------------------------------------------------< NameCache >
+
+    /**
+     * {@inheritDoc}
+     */
+    public QName retrieveName(String jcrName) {
+        if (prefixToURI.size() == 0) {
+            return nsReg.retrieveName(jcrName);
+        }
+        return null;
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public String retrieveName(QName name) {
+        if (prefixToURI.size() == 0
+                || !uriToPrefix.containsKey(name.getNamespaceURI())) {
+            return nsReg.retrieveName(name);
+        }
+        return null;
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public void cacheName(String jcrName, QName name) {
+        if (prefixToURI.size() == 0
+                || !uriToPrefix.containsKey(name.getNamespaceURI())) {
+            nsReg.cacheName(jcrName, name);
+        }
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public void evictAllNames() {
+        nsReg.evictAllNames();
+    }
+
+     * This method gets called when an existing namespace is removed
+     * in the global NamespaceRegistry. Overridden in order to check
+     * for/resolve collision of new global prefix with existing local prefix.
