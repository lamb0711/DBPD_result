div

- get rid of rootId stored with ISM, HierarchyManagers etc.
- remove corresponding method with WorkspaceManager and WorkspaceImpl

jcr2spi/state/ItemState

- move parent field from Node/PropertyState to ItemState
- move idFactory field from NodeState to ItemState
- let PropertyState build its id instead of calling parentstate method.
- minor reordering of status related methods
- remove modCount and its usage

jcr2spi/state/ItemStateManager

- add method getRootNode()

jcr2spi/security/AccessManager

- replace ItemId by ItemState

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@431352 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.IdFactory;
-     * The parent state
-     */
-    private NodeState parent;
-
-    /**
-    public PropertyState(PropertyState overlayedState, NodeState parent, int initialStatus,
-                         boolean isTransient) {
-        super(overlayedState, initialStatus, isTransient);
+    protected PropertyState(PropertyState overlayedState, NodeState parent, int initialStatus,
+                         boolean isTransient, IdFactory idFactory) {
+        super(overlayedState, parent, initialStatus, isTransient, idFactory);
-        this.parent = parent;
-    public PropertyState(QName name, NodeState parent, int initialStatus, boolean isTransient) {
-        super(initialStatus, isTransient);
+    protected PropertyState(QName name, NodeState parent, int initialStatus,
+                            boolean isTransient, IdFactory idFactory) {
+        super(parent, initialStatus, isTransient, idFactory);
-        this.parent = parent;
-    //----------------------< public READ methods and package private WRITE >---
+    //--------------------< public READ methods and package private Setters >---
-     * Determines if this item state represents a node.
+     * Always returns false.
-
+    
-     * 
+     *
-        return parent.getPropertyId(name);
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public NodeState getParent() {
-        return parent;
+        return idFactory.createPropertyId(parent.getNodeId(), getQName());
+                if (parentState == null) {
+                    String msg = "Internal error: cannot determine definition for orphaned state.";
+                    log.debug(msg);
+                    throw new RepositoryException(msg);
+                }
