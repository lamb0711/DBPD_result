JCR-952: Support lower and upper case functions in "order by" clause

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1051916 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.StringReader;
-import java.util.ArrayList;
-import java.util.Calendar;
-import java.util.List;
-import java.util.Map;
-
-import javax.jcr.NamespaceException;
-import javax.jcr.RepositoryException;
-import javax.jcr.query.InvalidQueryException;
-
+import javax.jcr.NamespaceException;
+import javax.jcr.RepositoryException;
+import javax.jcr.query.InvalidQueryException;
+import java.io.StringReader;
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.List;
+import java.util.Map;
+
-                    createOrderSpec(node, (OrderQueryNode) queryNode);
+                    setOrderSpecPath(node, (OrderQueryNode) queryNode);
+            case JJTORDERSPEC:
+                OrderQueryNode orderQueryNode = (OrderQueryNode) queryNode;
+                orderQueryNode.newOrderSpec();
+                node.childrenAccept(this, queryNode);
+                if (!orderQueryNode.isValid()) {
+                    exceptions.add(new InvalidQueryException("Invalid order specification. (Missing @?)"));
+                }
+                break;
-                    OrderQueryNode.OrderSpec[] specs = ((OrderQueryNode) queryNode).getOrderSpecs();
-                    specs[specs.length - 1].setAscending(false);
+                    ((OrderQueryNode) queryNode).setAscending(false);
-                    createOrderSpec(node, (OrderQueryNode) queryNode);
+                    setOrderSpecPath(node, (OrderQueryNode) queryNode);
+                    } else if (queryNode.getType() == QueryNode.TYPE_ORDER) {
+                        ((OrderQueryNode) queryNode).setFunction(FN_LOWER_CASE.getLocalName());
+                        node.childrenAccept(this, queryNode);
+                    } else if (queryNode.getType() == QueryNode.TYPE_ORDER) {
+                        ((OrderQueryNode) queryNode).setFunction(FN_UPPER_CASE.getLocalName());
+                        node.childrenAccept(this, queryNode);
-    private OrderQueryNode.OrderSpec createOrderSpec(SimpleNode node,
-                                                     OrderQueryNode queryNode) {
+    private void setOrderSpecPath(SimpleNode node, OrderQueryNode queryNode) {
-        OrderQueryNode.OrderSpec spec = null;
-            spec = new OrderQueryNode.OrderSpec(path, true);
-            queryNode.addOrderSpec(spec);
+            queryNode.setPath(path);
-        return spec;
