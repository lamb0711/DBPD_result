JCR-890: concurrent read-only access to a session

Turn Node.addNode() into a SessionOperation

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@982504 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.session.AddNodeOperation;
-     * <p/>
+     * <p>
+    // FIXME: This method should not be public
-    public synchronized Node addNodeWithUuid(
+    public Node addNodeWithUuid(
-        // check state of this instance
-        sanityCheck();
-
-        // Get the canonical path of the new node
-        Path path;
-        try {
-            path = PathFactoryImpl.getInstance().create(
-                    getPrimaryPath(), session.getQPath(relPath), true);
-        } catch (NameException e) {
-            throw new RepositoryException(
-                    "Failed to resolve path " + relPath
-                    + " relative to " + this, e);
-        }
-
-        // Get the last path element and check that it's a simple name
-        Path.Element last = path.getNameElement();
-        if (!last.denotesName() || last.getIndex() != 0) {
-            throw new RepositoryException(
-                    "Invalid last path element for adding node "
-                    + relPath + " relative to " + this);
-        }
-
-        // Get the parent node instance
-        NodeImpl parentNode;
-        Path parentPath = path.getAncestor(1);
-        try {
-            parentNode = itemMgr.getNode(parentPath);
-        } catch (PathNotFoundException e) {
-            if (itemMgr.propertyExists(parentPath)) {
-                throw new ConstraintViolationException(
-                        "Unable to add a child node to property "
-                        + session.getJCRPath(parentPath));
-            }
-            throw e;
-        } catch (AccessDeniedException ade) {
-            throw new PathNotFoundException(
-                    "Failed to resolve path " + relPath + " relative to " + this);
-        }
-
-        // Resolve node type name (if any)
-        Name typeName = null;
-        if (nodeTypeName != null) {
-            typeName = session.getQName(nodeTypeName);
-        }
-
-        // Check that the given UUID (if any) does not already exist
-        NodeId id = null;
-        if (uuid != null) {
-            id = new NodeId(uuid);
-            if (itemMgr.itemExists(id)) {
-                throw new ItemExistsException(
-                        "A node with this UUID already exists: " + uuid);
-            }
-        }
-
-        return parentNode.addNode(last.getName(), typeName, id);
+        return perform(new AddNodeOperation(this, relPath, nodeTypeName, uuid));
