JCR-2762: Optimize bundle serialization

Avoid the extra byte in front of all node identifiers by using variable-length counts before the child node list and the shared set.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1022908 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.List;
+import java.util.Set;
+import org.apache.jackrabbit.core.persistence.util.NodePropBundle.ChildNodeEntry;
-        for (NodePropBundle.ChildNodeEntry entry : bundle.getChildNodeEntries()) {
-            writeNodeId(entry.getId());  // uuid
-            writeName(entry.getName());   // name
-        }
-        writeNodeId(null);
+        writeChildNodeEntries(bundle);
-        for (NodeId nodeId: bundle.getSharedSet()) {
-            writeNodeId(nodeId);
-        }
-        writeNodeId(null);
+        writeSharedSet(bundle);
+    private void writeChildNodeEntries(NodePropBundle bundle)
+            throws IOException {
+        List<ChildNodeEntry> chilren = bundle.getChildNodeEntries();
+        writeVarInt(chilren.size());
+        for (ChildNodeEntry child : chilren) {
+            writeNodeId(child.getId());   // uuid
+            writeName(child.getName());   // name
+        }
+    }
+
+    private void writeSharedSet(NodePropBundle bundle) throws IOException {
+        Set<NodeId> sharedSet = bundle.getSharedSet();
+        writeVarInt(sharedSet.size());
+        for (NodeId nodeId: sharedSet) {
+            writeNodeId(nodeId);
+        }
+    }
+
-            out.writeBoolean(false);
-        } else {
-            out.writeBoolean(true);
-            out.writeLong(id.getMostSignificantBits());
-            out.writeLong(id.getLeastSignificantBits());
+            id = BundleBinding.NULL_NODE_ID;
+        out.writeLong(id.getMostSignificantBits());
+        out.writeLong(id.getLeastSignificantBits());
