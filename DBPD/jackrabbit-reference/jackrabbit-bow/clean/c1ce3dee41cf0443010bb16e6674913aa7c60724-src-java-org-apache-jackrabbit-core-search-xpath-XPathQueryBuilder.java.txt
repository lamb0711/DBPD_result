- Root node does not get indexed when never modified.
- Some minor other fixes related to XPath parsing.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@153759 13f79535-47bb-0310-9956-ffa450edef68

-     * @param resolver  the namespace resolver to use.
+     * @param resolver the namespace resolver to use.
-     * @param resolver  the namespace resolver to use.
+     * @param resolver the namespace resolver to use.
-     * @param root     the root of the query node tree.
+     * @param root the root of the query node tree.
-     *                               into a String representation due to restrictions in XPath.
+     *   into a String representation due to restrictions in XPath.
-     *             <code>XPathVisitor</code>.
+     *  <code>XPathVisitor</code>.
-     *         <code>data</code>.
+     *  <code>data</code>.
+                } else if (data instanceof LocationStepQueryNode) {
+                    if (node.getId() == JJTINTEGERLITERAL) {
+                        int index = Integer.parseInt(node.getValue());
+                        ((LocationStepQueryNode) data).setIndex(index);
+                } else {
+                        exceptions.add(new InvalidQueryException("LocationStep only allows integer literal as position index"));
+                    }
-                        && ((SimpleNode) node.jjtGetChild(0)).getId() == JJTDESCENDING) {
+                        && ((SimpleNode) node.jjtGetChild(0)) .getId() == JJTDESCENDING) {
-     * @param node   the current node in the xpath syntax tree.
+     * @param node the current node in the xpath syntax tree.
-     * @param node      the current node in the xpath syntax tree.
+     * @param node the current node in the xpath syntax tree.
-     *                  <code>RelationQueryNode</code>.
+     *   <code>RelationQueryNode</code>.
-     * @param node      a comparison expression node.
+     * @param node a comparison expression node.
-        if (rqn.getProperty().equals(Constants.JCR_PRIMARYTYPE)) {
+        if (Constants.JCR_PRIMARYTYPE.equals(rqn.getProperty())) {
-     * @param node      must be of type string, decimal, double or integer; otherwise
-     *                  an InvalidQueryException is added to {@link #exceptions}.
+     * @param node must be of type string, decimal, double or integer; otherwise
+     *   an InvalidQueryException is added to {@link #exceptions}.
-     * @param node      the function node from the xpath tree.
+     * @param node the function node from the xpath tree.
+                            if (value.charAt(0) == '"') {
+                                value = value.replaceAll("\"\"", "\"");
+                            } else {
+                                value = value.replaceAll("''", "'");
+                            }
