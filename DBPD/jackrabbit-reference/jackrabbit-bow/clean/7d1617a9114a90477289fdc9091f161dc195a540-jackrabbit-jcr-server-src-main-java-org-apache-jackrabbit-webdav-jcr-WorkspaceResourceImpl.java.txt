JCR-3830 : Allow for privilege discovery in jcr-server

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1640531 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.jcr.security.JcrUserPrivilegesProperty;
+import org.apache.jackrabbit.webdav.jcr.security.JcrSupportedPrivilegesProperty;
+import org.apache.jackrabbit.webdav.jcr.security.SecurityUtils;
+import org.apache.jackrabbit.webdav.security.SecurityConstants;
-        if (prop == null && ItemResourceConstants.JCR_NODETYPES_CND.equals(name)) {
-            StringWriter writer = new StringWriter();
+        if (prop == null) {
+            StringWriter writer = null;
-                Session s = getRepositorySession();
+                if (ItemResourceConstants.JCR_NODETYPES_CND.equals(name)) {
+                    writer = new StringWriter();
+                    Session s = getRepositorySession();
-                CompactNodeTypeDefWriter cndWriter = new CompactNodeTypeDefWriter(writer, s, true);
-                NodeTypeIterator ntIterator = s.getWorkspace().getNodeTypeManager().getAllNodeTypes();
-                while (ntIterator.hasNext()) {
-                    cndWriter.write(ntIterator.nextNodeType());
+                    CompactNodeTypeDefWriter cndWriter = new CompactNodeTypeDefWriter(writer, s, true);
+                    NodeTypeIterator ntIterator = s.getWorkspace().getNodeTypeManager().getAllNodeTypes();
+                    while (ntIterator.hasNext()) {
+                        cndWriter.write(ntIterator.nextNodeType());
+                    }
+                    cndWriter.close();
+                    /*
+                    NOTE: avoid having JCR_NODETYPES_CND exposed upon allprop
+                          PROPFIND request since it needs to be calculated.
+                          nevertheless, this property can be altered using
+                          PROPPATCH, which is not consistent with the specification
+                    */
+                    prop = new DefaultDavProperty<String>(ItemResourceConstants.JCR_NODETYPES_CND, writer.toString(), true);
+
+                } else if (SecurityConstants.SUPPORTED_PRIVILEGE_SET.equals(name)) {
+                    prop = new JcrSupportedPrivilegesProperty(getRepositorySession(), null).asDavProperty();
+                } else if (SecurityConstants.CURRENT_USER_PRIVILEGE_SET.equals(name)) {
+                    prop = new JcrUserPrivilegesProperty(getRepositorySession(), null).asDavProperty();
-                cndWriter.close();
-                /*
-                NOTE: avoid having JCR_NODETYPES_CND exposed upon allprop
-                      PROPFIND request since it needs to be calculated.
-                      nevertheless, this property can be altered using
-                      PROPPATCH, which is not consistent with the specification
-                 */
-                return new DefaultDavProperty<String>(ItemResourceConstants.JCR_NODETYPES_CND, writer.toString(), true);
-                return null;
-                return null;
-                try {
-                    writer.close();
-                } catch (IOException e) {
-                    log.error(e.getMessage());
+                if (writer != null) {
+                    try {
+                        writer.close();
+                    } catch (IOException e) {
+                        log.error(e.getMessage());
+                    }
+        if (SecurityUtils.supportsAccessControl(getRepositorySession())) {
+            names.add(SecurityConstants.SUPPORTED_PRIVILEGE_SET);
+            names.add(SecurityConstants.CURRENT_USER_PRIVILEGE_SET);
+        }
