- Remove status from ItemImpl and use status in ItemState
- Fixed ItemImpl.isSame(). ItemState always has an overlayed state.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@433630 13f79535-47bb-0310-9956-ffa450edef68

-    protected static final int STATUS_NORMAL = 0;
-    protected static final int STATUS_MODIFIED = 1;
-    protected static final int STATUS_DESTROYED = 2;
-    protected static final int STATUS_INVALIDATED = 3;
-
-    private int status;
-        status = STATUS_NORMAL;
-        // short-cut: read-only implementations always return false.
-        if (!isSupportedOption(Repository.LEVEL_2_SUPPORTED)) {
-            return false;
-        }
-        return state.isTransient() && state.getOverlayedState() == null;
+        return state.getStatus() == ItemState.STATUS_NEW;
-        // short-cut: read-only implementations always return false.
-        if (!isSupportedOption(Repository.LEVEL_2_SUPPORTED)) {
-            return false;
-        }
-        return state.isTransient() && state.getOverlayedState() != null;
+        return state.getStatus() == ItemState.STATUS_EXISTING_MODIFIED;
+            if (this.state == other.state) {
+                return true;
+            }
-                // TODO: TO_BE_FIXED check if this is sufficient check (SPI-id)
-                ItemId thisId = (state.hasOverlayedState()) ? state.getOverlayedState().getId() : state.getId();
-                ItemId otherId = (other.getItemState().hasOverlayedState()) ? other.getItemState().getOverlayedState().getId() : other.getItemState().getId();
+                ItemId thisId = state.getOverlayedState().getId();
+                ItemId otherId = other.state.getOverlayedState().getId();
-        status = STATUS_NORMAL;
-        // set state of this instance to 'destroyed'
-        status = STATUS_DESTROYED;
-        status = STATUS_MODIFIED;
-                    // now set state of this instance to 'destroyed'
-                    status = STATUS_DESTROYED;
-                    // now set state of this instance to 'destroyed'
-                    status = STATUS_DESTROYED;
-        // now render this instance 'invalid'
-        status = STATUS_INVALIDATED;
-        switch (status) {
-            case STATUS_NORMAL:
-            case STATUS_MODIFIED:
-                return;
-
-            case STATUS_DESTROYED:
-            case STATUS_INVALIDATED:
-                throw new InvalidItemStateException("Item '" + getPath() + "' doesn't exist anymore");
+        if (state == null || !state.isValid()) {
+            throw new InvalidItemStateException("Item '" + getPath() + "' doesn't exist anymore");
