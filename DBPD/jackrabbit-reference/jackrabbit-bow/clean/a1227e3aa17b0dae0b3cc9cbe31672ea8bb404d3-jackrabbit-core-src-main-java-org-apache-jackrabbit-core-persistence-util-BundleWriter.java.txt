JCR-3684 BundleWriter: Unexpected error while writing NAME value (don't swallow the root cause)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1532775 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.commons.io.IOExceptionWithCause;
-                                    throw new IOException(msg);
+                                    throw new IOExceptionWithCause(msg, e);
-                        throw new IOException(msg);
+                        throw new IOExceptionWithCause(msg, e);
-                        // should never occur
-                        throw new IOException("Unexpected error while writing DOUBLE value.");
+                        throw convertToIOException(type, e);
-                        // should never occur
-                        throw new IOException("Unexpected error while writing DECIMAL value.");
+                        throw convertToIOException(type, e);
-                        // should never occur
-                        throw new IOException("Unexpected error while writing LONG value.");
+                        throw convertToIOException(type, e);
-                        // should never occur
-                        throw new IOException("Unexpected error while writing BOOLEAN value.");
+                        throw convertToIOException(type, e);
-                        // should never occur
-                        throw new IOException("Unexpected error while writing NAME value.");
+                        throw convertToIOException(type, e);
-                        // should never occur
-                        throw new IOException("Unexpected error while writing DATE value.");
+                        throw convertToIOException(type, e);
+    
+    private static IOException convertToIOException(int propertyType, Exception e) {
+        String typeName = PropertyType.nameFromValue(propertyType);
+        String message = "Unexpected error for property type "+ typeName +" value.";
+        log.error(message, e);
+        return new IOExceptionWithCause(message, e);
+    }
-            throw new IOException(msg);
+            throw new IOExceptionWithCause(msg, e);
