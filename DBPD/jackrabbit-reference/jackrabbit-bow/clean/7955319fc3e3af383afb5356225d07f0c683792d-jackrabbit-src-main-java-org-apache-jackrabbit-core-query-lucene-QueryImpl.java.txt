JCR-651: Improve performance for queries with large result sets

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@480138 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.NodeId;
-import org.apache.jackrabbit.core.security.AccessManager;
-import java.io.IOException;
-import java.util.Collections;
-
-        List ids;
-        List scores;
-        AccessManager accessMgr = session.getAccessManager();
-
-        // execute it
-        QueryHits result = null;
-        try {
-            result = index.executeQuery(this, query, orderProperties, ascSpecs);
-            ids = new ArrayList(result.length());
-            scores = new ArrayList(result.length());
-
-            for (int i = 0; i < result.length(); i++) {
-                NodeId id = NodeId.valueOf(result.doc(i).get(FieldNames.UUID));
-                // check access
-                if (accessMgr.isGranted(id, AccessManager.READ)) {
-                    ids.add(id);
-                    scores.add(new Float(result.score(i)));
-                }
-            }
-        } catch (IOException e) {
-            log.error("Exception while executing query: ", e);
-            ids = Collections.EMPTY_LIST;
-            scores = Collections.EMPTY_LIST;
-        } finally {
-            if (result != null) {
-                try {
-                    result.close();
-                } catch (IOException e) {
-                    log.warn("Unable to close query result: " + e);
-                }
-            }
-        }
-
-        // return QueryResult
-        return new QueryResultImpl(itemMgr,
-                (NodeId[]) ids.toArray(new NodeId[ids.size()]),
-                (Float[]) scores.toArray(new Float[scores.size()]),
-                getSelectProperties(),
-                session.getNamespaceResolver(),
-                orderNode == null && documentOrder);
+        return new QueryResultImpl(index, itemMgr, session.getNamespaceResolver(),
+                session.getAccessManager(), this, query, getSelectProperties(),
+                orderProperties, ascSpecs, documentOrder);
