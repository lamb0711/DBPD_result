JCR-1747: org.apache.jackrabbit.core.query.lucene.SearchIndex with in-memory lucene index

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@718218 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileOutputStream;
+import org.apache.lucene.store.Directory;
+import org.apache.jackrabbit.core.query.lucene.directory.IndexInputStream;
+import org.apache.jackrabbit.core.query.lucene.directory.IndexOutputStream;
+
+     * @throws IOException if an error occurs while reading from the directory.
-    boolean exists(File dir) {
-        return new File(dir, name).exists();
+    boolean exists(Directory dir) throws IOException {
+        return dir.fileExists(name);
-    void read(File dir) throws IOException {
-        InputStream in = new FileInputStream(new File(dir, name));
+    void read(Directory dir) throws IOException {
+        InputStream in = new IndexInputStream(dir.openInput(name));
-    void write(File dir) throws IOException {
+    void write(Directory dir) throws IOException {
-        File nu = new File(dir, name + ".new");
-        OutputStream out = new FileOutputStream(nu);
+        OutputStream out = new IndexOutputStream(dir.createOutput(name + ".new"));
-        File old = new File(dir, name);
-        if (old.exists() && !old.delete()) {
-            throw new IOException("Unable to delete file: " + old.getAbsolutePath());
+        if (dir.fileExists(name)) {
+            dir.deleteFile(name);
-        if (!nu.renameTo(old)) {
-            throw new IOException("Unable to rename file: " + nu.getAbsolutePath());
-        }
+        dir.renameFile(name + ".new", name);
