reworked transaction support, contributed by dominique

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@151380 13f79535-47bb-0310-9956-ffa450edef68

-                NodeId id = NodeId.valueOf(s);
+                NodeReferencesId id = (NodeReferencesId) NodeReferencesId.valueOf(s);
-                NodeId id = (NodeId) iterKeys.next();
+                NodeReferencesId id = (NodeReferencesId) iterKeys.next();
-    public synchronized NodeState load(String uuid)
+    public synchronized NodeState load(NodeId id)
-        NodeId id = new NodeId(uuid);
-
-            NodeState state = createNew(uuid, null, null);
+            NodeState state = createNew(id);
-    public synchronized PropertyState load(QName name, String parentUUID)
+    public synchronized PropertyState load(PropertyId id)
-        PropertyId id = new PropertyId(parentUUID, name);
-
-            PropertyState state = createNew(name, parentUUID);
+            PropertyState state = createNew(id);
-    public synchronized NodeReferences load(NodeId targetId)
+    public synchronized NodeReferences load(NodeReferencesId id)
-        byte[] data = (byte[]) refsStore.get(targetId);
+        byte[] data = (byte[]) refsStore.get(id);
-            throw new NoSuchItemStateException(targetId.toString());
+            throw new NoSuchItemStateException(id.getUUID());
-            NodeReferences refs = new NodeReferences(targetId);
+            NodeReferences refs = new NodeReferences(id);
-            String msg = "failed to load references: " + targetId;
+            String msg = "failed to load references: " + id.getUUID();
-     * @see PersistenceManager#exists(ItemId id)
+     * @see PersistenceManager#exists(PropertyId id)
-    public boolean exists(ItemId id) throws ItemStateException {
+    public boolean exists(PropertyId id) throws ItemStateException {
-
-     * @see PersistenceManager#referencesExist(NodeId targetId)
+     * @see PersistenceManager#exists(PropertyId id)
-    public boolean referencesExist(NodeId targetId) throws ItemStateException {
+    public boolean exists(NodeId id) throws ItemStateException {
+        return stateStore.containsKey(id);
+    }
-        return refsStore.containsKey(targetId);
+    /**
+     * @see PersistenceManager#exists(NodeReferencesId targetId)
+     */
+    public boolean exists(NodeReferencesId id) throws ItemStateException {
+        if (!initialized) {
+            throw new IllegalStateException("not initialized");
+        }
+        return refsStore.containsKey(id);
