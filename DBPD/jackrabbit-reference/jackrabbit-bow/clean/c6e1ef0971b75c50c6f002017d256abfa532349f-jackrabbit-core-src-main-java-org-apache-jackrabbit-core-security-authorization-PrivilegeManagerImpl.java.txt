JCR-2887 : Split PrivilegeRegistry in a per-session manager instance and a repository level registry [work in progress]

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1092723 13f79535-47bb-0310-9956-ffa450edef68

-     * names can be resolved to registered custom privileges and if there exists
+     * names can be resolved to registered privileges and if there exists
-     * Returns <code>true</code> if the specified privilege is a custom
-     * privilege that has been
-     * {@link #registerPrivilege(String, boolean, String[]) registered} before.
-     *
-     * @param privilege
-     * @return <code>true</code> if the specified privilege is a custom
-     * privilege; <code>false</code> otherwise.
-     * @throws AccessControlException If the specified privilege is
-     * <code>null</code> or unknown to this manager.
-     */
-    public boolean isCustomPrivilege(Privilege privilege) throws AccessControlException {
-        if (privilege instanceof PrivilegeImpl) {
-            return ((PrivilegeImpl) privilege).definition.isCustom();
-        } else {
-            throw new AccessControlException("Invalid privilege instance.");
-        }
-    }
-
-    /**
-     * @return The bits of the built-in privileges contained in the specified
+     * @return The bits of the privileges contained in the specified
-    public int getBits(Privilege... privileges) throws AccessControlException {
+    public PrivilegeBits getBits(Privilege... privileges) throws AccessControlException {
-        PrivilegeRegistry.Definition[] defs = new PrivilegeRegistry.Definition[privileges.length];
-        for (int i = 0; i < privileges.length; i++) {
-            Privilege priv = privileges[i];
+        PrivilegeBits bits = PrivilegeBits.getInstance();
+        for (Privilege priv : privileges) {
-                defs[i] = ((PrivilegeImpl) priv).definition;
+                bits.add(((PrivilegeImpl) priv).definition.getBits());
-        return registry.getBits(defs);
+        return bits;
-    public Set<Privilege> getPrivileges(int bits) {
+    public Set<Privilege> getPrivileges(PrivilegeBits bits) {
