- ImportHandler & specialized friends now rely on default SAX2 Namespace support
- Doc/SysViewImportHandler are now processing ignorableWhitespace events

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@160189 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.IllegalNameException;
-import org.apache.jackrabbit.core.UnknownPrefixException;
+import java.io.IOException;
-            QName nodeName;
-            if (namespaceURI != null && !"".equals(namespaceURI)) {
-                nodeName = new QName(namespaceURI, localName);
-            } else {
-                try {
-                    nodeName = QName.fromJCRName(qName, nsContext);
-                } catch (IllegalNameException ine) {
-                    throw new SAXException("illegal node name: " + qName, ine);
-                } catch (UnknownPrefixException upe) {
-                    throw new SAXException("illegal node name: " + qName, upe);
-                }
-            }
+            QName nodeName = new QName(namespaceURI, localName);
-                QName propName;
-                if (atts.getURI(i) != null && !"".equals(atts.getURI(i))) {
-                    propName = new QName(atts.getURI(i), atts.getLocalName(i));
-                } else {
-                    try {
-                        propName = QName.fromJCRName(atts.getQName(i), nsContext);
-                    } catch (IllegalNameException ine) {
-                        throw new SAXException("illegal property name: "
-                                + atts.getQName(i), ine);
-                    } catch (UnknownPrefixException upe) {
-                        throw new SAXException("illegal property name: "
-                                + atts.getQName(i), upe);
-                    }
-                }
+                QName propName = new QName(atts.getURI(i), atts.getLocalName(i));
+    public void ignorableWhitespace(char ch[], int start, int length)
+            throws SAXException {
+        /**
+         * buffer data reported by the ignorableWhitespace event;
+         * will be processed in endElement and startElement method
+         */
+        if (textHandler == null) {
+            textHandler = new StringBufferValue();
+        }
+        textHandler.append(ch, start, length);
+    }
+
+    /**
+     * {@inheritDoc}
+     */
