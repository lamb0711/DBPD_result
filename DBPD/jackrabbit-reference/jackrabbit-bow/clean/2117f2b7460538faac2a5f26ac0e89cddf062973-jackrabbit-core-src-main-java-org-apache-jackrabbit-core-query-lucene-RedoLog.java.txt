JCR-2216: Append-only index updates

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@801253 13f79535-47bb-0310-9956-ffa450edef68

-    private static final String REDO_LOG = "redo.log";
+    static final String REDO_LOG = "redo.log";
+
+    /**
+     * Prefix of the redo log files.
+     */
+    static final String REDO_LOG_PREFIX = "redo_";
+
+    /**
+     * The .log extension.
+     */
+    static final String DOT_LOG = ".log";
+     * The name of the log file.
+     */
+    private final String fileName;
+
+    /**
+     * @param fileName the name of the redo log file.
-    RedoLog(Directory dir) throws IOException {
+    private RedoLog(Directory dir, String fileName) throws IOException {
+        this.fileName = fileName;
+     * Creates a new <code>RedoLog</code> instance, which stores its log in the
+     * given directory.
+     *
+     * @param dir        the directory where the redo log file is located.
+     * @param generation the redo log generation number.
+     * @return the redo log.
+     * @throws IOException if the redo log cannot be created.
+     */
+    static RedoLog create(Directory dir, long generation) throws IOException {
+        String fileName;
+        if (generation == 0) {
+            fileName = RedoLog.REDO_LOG;
+        } else {
+            fileName = RedoLog.REDO_LOG_PREFIX + Long.toString(
+                    generation, Character.MAX_RADIX) + RedoLog.DOT_LOG;
+        }
+        return new RedoLog(dir, fileName);
+    }
+
+    /**
-    List getActions() throws IOException {
-        final List actions = new ArrayList();
+    List<MultiIndex.Action> getActions() throws IOException {
+        final List<MultiIndex.Action> actions = new ArrayList<MultiIndex.Action>();
-        dir.deleteFile(REDO_LOG);
+        dir.deleteFile(fileName);
+     * Closes this redo log.
+     *
+     * @throws IOException if an error occurs while flushing pending writes.
+     */
+    void close() throws IOException {
+        if (out != null) {
+            out.close();
+            out = null;
+        }
+    }
+
+    /**
-            OutputStream os = new IndexOutputStream(dir.createOutput(REDO_LOG));
+            OutputStream os = new IndexOutputStream(dir.createOutput(fileName));
-        if (!dir.fileExists(REDO_LOG)) {
+        if (!dir.fileExists(fileName)) {
-        InputStream in = new IndexInputStream(dir.openInput(REDO_LOG));
+        InputStream in = new IndexInputStream(dir.openInput(fileName));
