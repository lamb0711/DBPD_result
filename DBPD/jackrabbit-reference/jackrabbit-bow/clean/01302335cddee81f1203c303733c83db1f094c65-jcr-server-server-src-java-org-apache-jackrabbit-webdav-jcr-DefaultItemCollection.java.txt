JCR-417 (preparation):
- add AbstractLocatorFactory
- add separate loc-factory to simple project => reducing dependency
  to 'jcr' package.

JCR-544
- add separate workspace resource representing the jcr workspace
- move Workspace.restore call to workspace resource.
- consequently RootItemCollection not used any more

minor improvements
- root, workspace resource must not support 'observation' -> moving
  constant to item-resources
- get rid of 'setModificationTime'



git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@448257 13f79535-47bb-0310-9956-ffa450edef68

-        StringBuffer sb = new StringBuffer(super.getComplianceClass());
-        sb.append(", ").append(OrderingResource.COMPLIANCE_CLASS);
-        return sb.toString();
+        String cc = super.getComplianceClass();
+        if (isOrderable()) {
+            StringBuffer sb = new StringBuffer(cc);
+            sb.append(", ").append(OrderingResource.COMPLIANCE_CLASS);
+            return sb.toString();
+        } else {
+            return cc;
+        }
+    }
+
+    public long getModificationTime() {
+        // retrieve mod-time from jcr:lastmodified property if existing
+        if (exists()) {
+            try {
+                if (((Node)item).hasProperty(JcrConstants.JCR_LASTMODIFIED)) {
+                    return ((Node)item).getProperty(JcrConstants.JCR_LASTMODIFIED).getLong();
+                }
+            } catch (RepositoryException e) {
+                log.warn("Error while accessing jcr:lastModified property");
+            }
+        }
+        // fallback: return 'now'
+        return new Date().getTime();
-        StringBuffer sb = new StringBuffer(super.getSupportedMethods());
-        // Ordering
+        String ms = super.getSupportedMethods();
-           sb.append(", ").append(OrderingResource.METHODS);
+            StringBuffer sb = new StringBuffer(ms);
+            // Ordering
+            if (isOrderable()) {
+                sb.append(", ").append(OrderingResource.METHODS);
+            }
+            return sb.toString();
+        } else {
+            return ms;
-        return sb.toString();
-            // overwrite the default modificationtime if possible
-            try {
-                if (n.hasProperty(JcrConstants.JCR_LASTMODIFIED)) {
-                    setModificationTime(n.getProperty(JcrConstants.JCR_LASTMODIFIED).getLong());
-                }
-            } catch (RepositoryException e) {
-                log.warn("Error while accessing jcr:lastModified property");
-            }
