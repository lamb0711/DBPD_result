work in progress

- simplify mixin-validation
- throw exception if mixin to be added is not valid.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@453118 13f79535-47bb-0310-9956-ffa450edef68

-        QName[] mixinQNames = new QName[] {getQName(mixinName)};
+        QName mixinQName = getQName(mixinName);
-            isValidMixin(mixinQNames);
+            if (!isValidMixin(mixinQName)) {
+                throw new ConstraintViolationException("Cannot add '" + mixinName + "' mixin type.");
+            }
-        QName[] allMixins = new QName[currentMixins.length + mixinQNames.length];
+        QName[] allMixins = new QName[currentMixins.length + 1];
-        for (int i = 0; i < mixinQNames.length; i++) {
-            allMixins[currentMixins.length + i] = mixinQNames[i];
-        }
+        allMixins[currentMixins.length] = mixinQName;
-            return isValidMixin(new QName[] {getQName(mixinName)});
-        } catch (RepositoryException e) {
+            return isValidMixin(getQName(mixinName));
+        } catch (NoSuchNodeTypeException e) {
-    private boolean isValidMixin(QName[] mixinNames) throws RepositoryException, NodeTypeConflictException {
+    private boolean isValidMixin(QName mixinName) throws NoSuchNodeTypeException, NodeTypeConflictException {
-        for (int i = 0; i < mixinNames.length; i++) {
-            QName mixinName = mixinNames[i];
-            NodeType mixin = ntMgr.getNodeType(mixinName);
-            if (!mixin.isMixin()) {
-                log.error(mixin.getName() + ": not a mixin node type");
-                return false;
-            }
-            NodeTypeImpl primaryType = ntMgr.getNodeType(primaryTypeName);
-            if (primaryType.isNodeType(mixinName)) {
-                log.error(mixin.getName() + ": already contained in primary node type");
-                return false;
-            }
-            // check if adding new mixin conflicts with existing nodetypes
-            if (entExisting.includesNodeType(mixinName)) {
-                log.error(mixin.getName() + ": already contained in mixin types");
-                return false;
-            }
+        NodeType mixin = ntMgr.getNodeType(mixinName);
+        if (!mixin.isMixin()) {
+            log.error(mixin.getName() + ": not a mixin node type");
+            return false;
+        }
+        NodeTypeImpl primaryType = ntMgr.getNodeType(primaryTypeName);
+        if (primaryType.isNodeType(mixinName)) {
+            log.error(mixin.getName() + ": already contained in primary node type");
+            return false;
+        }
+        // check if adding new mixin conflicts with existing nodetypes
+        if (entExisting.includesNodeType(mixinName)) {
+            log.error(mixin.getName() + ": already contained in mixin types");
+            return false;
-        QName[] resultingNts = new QName[existingNts.length + mixinNames.length];
+        QName[] resultingNts = new QName[existingNts.length + 1];
-        System.arraycopy(mixinNames, 0, resultingNts, existingNts.length, mixinNames.length);
+        resultingNts[existingNts.length] = mixinName;
