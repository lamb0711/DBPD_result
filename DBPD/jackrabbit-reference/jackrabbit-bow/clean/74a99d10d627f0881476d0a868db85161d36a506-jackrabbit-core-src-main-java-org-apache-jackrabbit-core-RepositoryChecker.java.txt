JCR-3298: RepositoryChecker - apply changes in smaller chunks, augment logging information

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1327926 13f79535-47bb-0310-9956-ffa450edef68

-    public RepositoryChecker(
-            PersistenceManager workspace,
+    // maximum size of changelog when running in "fixImmediately" mode
+    private final static long CHUNKSIZE = 256;
+
+    // number of nodes affected by pending changes
+    private long dirtyNodes = 0;
+
+    // total nodes checked, with problems
+    private long totalNodes = 0;
+    private long brokenNodes = 0;
+
+    // start time
+    private long startTime;
+
+    public RepositoryChecker(PersistenceManager workspace,
-    public void check(NodeId id, boolean recurse)
+    public void check(NodeId id, boolean recurse, boolean fixImmediately)
+
+        log.info("Starting RepositoryChecker");
+
+        startTime = System.currentTimeMillis();
+
+        internalCheck(id, recurse, fixImmediately);
+
+        if (fixImmediately) {
+            internalFix(true);
+        }
+
+        log.info("RepositoryChecker finished; checked " + totalNodes
+                + " nodes in " + (System.currentTimeMillis() - startTime)
+                + "ms, problems found: " + brokenNodes);
+    }
+
+    private void internalCheck(NodeId id, boolean recurse,
+            boolean fixImmediately) throws RepositoryException {
+            totalNodes += 1;
+
+            if (fixImmediately && dirtyNodes > CHUNKSIZE) {
+                internalFix(false);
+            }
+
-                        check(child.getId(), recurse);
+                        internalCheck(child.getId(), recurse, fixImmediately);
-    private void fix(PersistenceManager pm, ChangeLog changes, String store)
-            throws RepositoryException {
+    private void fix(PersistenceManager pm, ChangeLog changes, String store,
+            boolean verbose) throws RepositoryException {
-            log.warn("Fixing " + store + " inconsistencies");
+            if (log.isWarnEnabled()) {
+                log.warn("Fixing " + store + " inconsistencies: "
+                        + changes.toString());
+            }
+                changes.reset();
-                String message = "Failed to fix " + store + " inconsistencies (aborting)";
+                String message = "Failed to fix " + store
+                        + " inconsistencies (aborting)";
-            log.info("No " + store + "  inconsistencies found");
+            if (verbose) {
+                log.info("No " + store + " inconsistencies found");
+            }
-        fix(workspace, workspaceChanges, "workspace");
+        internalFix(true);
+    }
+
+    private void internalFix(boolean verbose) throws RepositoryException {
+        fix(workspace, workspaceChanges, "workspace", verbose);
-                "versioning workspace");
+                "versioning workspace", verbose);
+        dirtyNodes = 0;
+
+        dirtyNodes += 1;
+        brokenNodes += 1;
+
