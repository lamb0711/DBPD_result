- Removed JCRQL implementation
- Added proper QName support to search
- redesigned parsing and formating of queries (better separation of abstract query tree and concrete syntax)
- Some improvements in SQL: colon is now supported in identifier without having to use double quotes, LIKE now supports escaping

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@125778 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Iterator;
-
-    /**
-     * Returns a string representation of this query node including its sub-nodes.
-     * The returned string is formatted in JCRQL syntax.
-     *
-     * @return a string representation of this query node including its sub-nodes.
-     */
-    public String toJCRQLString() {
-        StringBuffer sb = new StringBuffer();
-        boolean bracket = false;
-        if (getParent() instanceof LocationStepQueryNode
-                || getParent() instanceof AndQueryNode
-                || getParent() instanceof NotQueryNode) {
-            bracket = true;
-        }
-        if (bracket) {
-            sb.append("(");
-        }
-        String or = "";
-        for (Iterator it = operands.iterator(); it.hasNext();) {
-            sb.append(or);
-            sb.append(((QueryNode) it.next()).toJCRQLString());
-            or = " OR ";
-        }
-        if (bracket) {
-            sb.append(")");
-        }
-        return sb.toString();
-    }
-
-    /**
-     * Returns a string representation of this query node including its sub-nodes.
-     * The returned string is formatted in JCR SQL syntax.
-     *
-     * @return a string representation of this query node including its sub-nodes.
-     */
-    public String toJCRSQLString() {
-        StringBuffer sb = new StringBuffer();
-        boolean bracket = false;
-        if (getParent() instanceof LocationStepQueryNode 
-                || getParent() instanceof AndQueryNode
-                || getParent() instanceof NotQueryNode) {
-            bracket = true;
-        }
-        if (bracket) {
-            sb.append("(");
-        }
-        String or = "";
-        for (Iterator it = operands.iterator(); it.hasNext();) {
-            sb.append(or);
-            sb.append(((QueryNode) it.next()).toJCRSQLString());
-            or = " OR ";
-        }
-        if (bracket) {
-            sb.append(")");
-        }
-        return sb.toString();
-    }
-
-    /**
-     * Returns a string representation of this query node including its sub-nodes.
-     * The returned string is formatted in XPath syntax.
-     *
-     * @return a string representation of this query node including its sub-nodes.
-     */
-    public String toXPathString() {
-        StringBuffer sb = new StringBuffer();
-        boolean bracket = false;
-        if (getParent() instanceof AndQueryNode) {
-            bracket = true;
-        }
-        if (bracket) {
-            sb.append("(");
-        }
-        String or = "";
-        for (Iterator it = operands.iterator(); it.hasNext();) {
-            sb.append(or);
-            sb.append(((QueryNode) it.next()).toXPathString());
-            or = " or ";
-        }
-        if (bracket) {
-            sb.append(")");
-        }
-        return sb.toString();
-    }
