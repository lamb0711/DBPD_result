JCR-1590 JSR 283: Locking

- getSecondsRemaining is negative if lock is expired or released
- getLockToken always returns null if lock is sessionscoped

JCR-2004 Update SPI locking to match JCR 2.0

- extend spi/LockInfo.java
- add JCR 2.0 variant of RepositoryService#lock that takes timeoutHint and ownerHint
- adjust jcr2spi
- adjust spi implementation(s)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@753244 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.api.jsr283.version.VersionManager;
-        implements JackrabbitWorkspace, EventStateCollectionFactory {
+        implements JackrabbitWorkspace, org.apache.jackrabbit.api.jsr283.Workspace,
+        EventStateCollectionFactory {
-    // TODO: rename to 'getLockManager'.
-    // TODO  in order not to break compatilibiy with the 1.x releases
-    // TODO  the 283 method has been tmp. renamed since it conflicts with an
-    // TODO  existing public method, exposing the internal lock manager.
-    public org.apache.jackrabbit.api.jsr283.lock.LockManager get283LockManager() throws UnsupportedRepositoryOperationException, RepositoryException {
+    public org.apache.jackrabbit.api.jsr283.lock.LockManager getLockManager() throws UnsupportedRepositoryOperationException, RepositoryException {
+    /**
+     * @see org.apache.jackrabbit.api.jsr283.Workspace#getVersionManager()
+     */
+    public VersionManager getVersionManager() throws UnsupportedRepositoryOperationException, RepositoryException {
+        throw new UnsupportedRepositoryOperationException("not yet implemented");
+    }
+
+
-    public synchronized LockManager getLockManager() throws RepositoryException {
+    public synchronized org.apache.jackrabbit.core.lock.LockManager getInternalLockManager() throws RepositoryException {
-            NodeId id = ops.move(srcPath, destPath);
+            ops.move(srcPath, destPath);
