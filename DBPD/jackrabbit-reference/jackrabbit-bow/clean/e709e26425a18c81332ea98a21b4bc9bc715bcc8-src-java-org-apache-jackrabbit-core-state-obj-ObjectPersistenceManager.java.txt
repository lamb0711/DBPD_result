Jira issue JCR-14: {XML|Object}PersistenceManager.destroy(*) may fail 

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@55854 13f79535-47bb-0310-9956-ffa450edef68

-        res.delete();
-        // prune empty folders
-        String parentDir = FileSystemPathUtil.getParentDir(blobId);
-        while (!parentDir.equals(FileSystem.SEPARATOR)
-                && !blobFS.hasChildren(parentDir)) {
-            blobFS.deleteFolder(parentDir);
-            parentDir = FileSystemPathUtil.getParentDir(parentDir);
-        }
+        // delete resource and prune empty parent folders
+        res.delete(true);
+        if (initialized) {
+            throw new IllegalStateException("already initialized");
+        }
+
-            return;
+            throw new IllegalStateException("not initialized");
+            blobFS = null;
-        String uuid = state.getUUID();
-        String nodeFilePath = buildNodeFilePath(uuid);
+        String nodeFilePath = buildNodeFilePath(state.getUUID());
-                throw new NoSuchItemStateException(uuid);
+                throw new NoSuchItemStateException(state.getId().toString());
-            String msg = "failed to read node state: " + uuid;
+            String msg = "failed to read node state: " + state.getId();
-                String msg = "failed to read node state: " + uuid;
+                String msg = "failed to read node state: " + state.getId();
-            String msg = "failed to read node state: " + uuid;
+            String msg = "failed to read node state: " + state.getId();
-        String parentUUID = state.getParentUUID();
-        QName propName = state.getName();
-        String propFilePath = buildPropFilePath(parentUUID, propName);
+        String propFilePath = buildPropFilePath(state.getParentUUID(), state.getName());
-                throw new NoSuchItemStateException(parentUUID + "/" + propName);
+                throw new NoSuchItemStateException(state.getId().toString());
-            String msg = "failed to read property state: " + parentUUID + "/" + propName;
+            String msg = "failed to read property state: " + state.getId();
-            String msg = "failed to read property state: " + parentUUID + "/" + propName;
+            String msg = "failed to read property state: " + state.getId();
-            nodeFile.delete();
-            // prune empty folders
-            String parentDir = FileSystemPathUtil.getParentDir(nodeFilePath);
-            while (!parentDir.equals(FileSystem.SEPARATOR)
-                    && !itemStateFS.hasChildren(parentDir)) {
-                itemStateFS.deleteFolder(parentDir);
-                parentDir = FileSystemPathUtil.getParentDir(parentDir);
+            if (nodeFile.exists()) {
+                // delete resource and prune empty parent folders
+                nodeFile.delete(true);
-                        blobVal.delete();
+                        // delete blob file and prune empty parent folders
+                        blobVal.delete(true);
-            propFile.delete();
-            // prune empty folders
-            String parentDir = FileSystemPathUtil.getParentDir(propFilePath);
-            while (!parentDir.equals(FileSystem.SEPARATOR)
-                    && !itemStateFS.hasChildren(parentDir)) {
-                itemStateFS.deleteFolder(parentDir);
-                parentDir = FileSystemPathUtil.getParentDir(parentDir);
+            if (propFile.exists()) {
+                // delete resource and prune empty parent folders
+                propFile.delete(true);
-        String uuid = refs.getTargetId().getUUID();
-        String refsFilePath = buildNodeReferencesFilePath(uuid);
+        String refsFilePath = buildNodeReferencesFilePath(refs.getTargetId().getUUID());
-                throw new NoSuchItemStateException(uuid);
+                throw new NoSuchItemStateException(refs.getTargetId().toString());
-            String msg = "failed to load references: " + uuid;
+            String msg = "failed to load references: " + refs.getTargetId();
-            String msg = "failed to load references: " + uuid;
+            String msg = "failed to load references: " + refs.getTargetId();
-            refsFile.delete();
-            // prune empty folders
-            String parentDir = FileSystemPathUtil.getParentDir(refsFilePath);
-            while (!parentDir.equals(FileSystem.SEPARATOR)
-                    && !itemStateFS.hasChildren(parentDir)) {
-                itemStateFS.deleteFolder(parentDir);
-                parentDir = FileSystemPathUtil.getParentDir(parentDir);
+            if (refsFile.exists()) {
+                // delete resource and prune empty parent folders
+                refsFile.delete(true);
