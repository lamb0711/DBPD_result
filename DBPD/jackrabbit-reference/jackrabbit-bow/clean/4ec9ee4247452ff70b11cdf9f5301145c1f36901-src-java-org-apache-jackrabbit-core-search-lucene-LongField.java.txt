- removed @author and @version (i.e. $Revision & $Id) tags
- removed tab characters from java source code

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47648 13f79535-47bb-0310-9956-ffa450edef68

- * @author Marcel Reutegger
- * @version $Revision:  $, $Date:  $
-	    = Long.toString(Long.MAX_VALUE, Character.MAX_RADIX).length() + 1;
+            = Long.toString(Long.MAX_VALUE, Character.MAX_RADIX).length() + 1;
-	StringBuffer sb = new StringBuffer(STRING_LONG_LEN);
-	if (value < 0) {
-	    // shift value
-	    value += Long.MAX_VALUE;
-	    value++;
-	    // after shift
-	    // Long.MIN_VALUE -> 0
-	    // 1 -> Long.MAX_VALUE
+        StringBuffer sb = new StringBuffer(STRING_LONG_LEN);
+        if (value < 0) {
+            // shift value
+            value += Long.MAX_VALUE;
+            value++;
+            // after shift
+            // Long.MIN_VALUE -> 0
+            // 1 -> Long.MAX_VALUE
-	    // convert into string
-	    String s = Long.toString(value, Character.MAX_RADIX);
-	    // pad with leading zeros
-	    while ((sb.length() + s.length()) < STRING_LONG_LEN) {
-		sb.append('0');
-	    }
-	    sb.append(s);
-	} else {
-	    // convert into string
-	    String s = Long.toString(value, Character.MAX_RADIX);
-	    // mark as positive
-	    sb.append('1');
-	    // fill in zeros if needed
-	    while ((sb.length() + s.length()) < STRING_LONG_LEN) {
-		sb.append('0');
-	    }
-	    sb.append(s);
-	}
-	return sb.toString();
+            // convert into string
+            String s = Long.toString(value, Character.MAX_RADIX);
+            // pad with leading zeros
+            while ((sb.length() + s.length()) < STRING_LONG_LEN) {
+                sb.append('0');
+            }
+            sb.append(s);
+        } else {
+            // convert into string
+            String s = Long.toString(value, Character.MAX_RADIX);
+            // mark as positive
+            sb.append('1');
+            // fill in zeros if needed
+            while ((sb.length() + s.length()) < STRING_LONG_LEN) {
+                sb.append('0');
+            }
+            sb.append(s);
+        }
+        return sb.toString();
-	if (value.charAt(0) == '1') {
-	    // positive
-	    return Long.parseLong(value.substring(1), Character.MAX_RADIX);
-	} if (value.charAt(0) == '0') {
-	    // negative
-	    long longValue = Long.parseLong(value, Character.MAX_RADIX);
-	    // reverse shift
-	    longValue -= Long.MAX_VALUE;
-	    return --longValue;
-	} else {
-	    throw new IllegalArgumentException(value);
-	}
+        if (value.charAt(0) == '1') {
+            // positive
+            return Long.parseLong(value.substring(1), Character.MAX_RADIX);
+        }
+        if (value.charAt(0) == '0') {
+            // negative
+            long longValue = Long.parseLong(value, Character.MAX_RADIX);
+            // reverse shift
+            longValue -= Long.MAX_VALUE;
+            return --longValue;
+        } else {
+            throw new IllegalArgumentException(value);
+        }
