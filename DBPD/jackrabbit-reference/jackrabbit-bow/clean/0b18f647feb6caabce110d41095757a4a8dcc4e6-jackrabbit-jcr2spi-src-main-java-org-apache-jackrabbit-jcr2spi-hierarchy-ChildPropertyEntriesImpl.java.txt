JCR-2087: parametrize generic types

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@816695 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Iterator;
-    private final Map properties;
+    private final Map<Name, Reference<PropertyEntry>> properties;
-        properties = new HashMap();
+        this.properties = new HashMap<Name, Reference<PropertyEntry>>();
-        Object ref = properties.get(propertyName);
+        Reference<PropertyEntry> ref = properties.get(propertyName);
-        PropertyEntry entry = (PropertyEntry) ((Reference) ref).get();
+        PropertyEntry entry = ref.get();
-    public Collection getPropertyEntries() {
+    public Collection<PropertyEntry> getPropertyEntries() {
-            Set entries = new HashSet(properties.size());
-            for (Iterator it = properties.keySet().iterator(); it.hasNext();) {
-                Name propName = (Name) it.next();
+            Set<PropertyEntry> entries = new HashSet<PropertyEntry>(properties.size());
+            for (Name propName : properties.keySet()) {
-    public Collection getPropertyNames() {
+    public Collection<Name> getPropertyNames() {
-            Reference ref = new SoftReference(propertyEntry);
+            Reference<PropertyEntry> ref = new SoftReference<PropertyEntry>(propertyEntry);
-    public void addAll(Collection propertyEntries) {
-        for (Iterator it = propertyEntries.iterator(); it.hasNext();) {
-            Object pe = it.next();
-            if (pe instanceof PropertyEntry) {
-                add((PropertyEntry) pe);
-            }
+    public void addAll(Collection<PropertyEntry> propertyEntries) {
+        for (PropertyEntry pe : propertyEntries) {
+            add(pe);
