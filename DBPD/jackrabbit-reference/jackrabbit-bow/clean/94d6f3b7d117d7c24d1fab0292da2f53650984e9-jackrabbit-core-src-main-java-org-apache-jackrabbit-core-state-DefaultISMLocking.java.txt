JCR-2890: Deadlock in acl.EntryCollector / ItemManager

Make it possible to switch from writer to reader preference in
the DefaultISMLocking class. This makes it possible to work around
this specific issue, though there may be consequences to write performance
during heavy concurrent read loads. Note that the FineGrainedISMLocking
strategy prefers readers.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1087304 13f79535-47bb-0310-9956-ffa450edef68

+     * Flag for determining whether this locking strategy should give
+     * preference to writers or not. If writers are preferred (which
+     * is the default setting), then all readers will get blocked whenever
+     * there's a writer waiting for the lock.
+     */
+    private boolean writerPreference = true;
+
+    /**
+     * Returns the writer preference status of this locking strategy.
+     *
+     * @return writer preference
+     */
+    public boolean isWriterPreference() {
+        return writerPreference;
+    }
+
+    /**
+     * Sets the writer preference status of this locking strategy.
+     *
+     * @param preference writer preference
+     */
+    public void setWriterPreference(boolean preference) {
+        this.writerPreference = preference;
+    }
+
+    /**
-                : writersWaiting > 0) {
+                : (writerPreference && writersWaiting > 0)) {
