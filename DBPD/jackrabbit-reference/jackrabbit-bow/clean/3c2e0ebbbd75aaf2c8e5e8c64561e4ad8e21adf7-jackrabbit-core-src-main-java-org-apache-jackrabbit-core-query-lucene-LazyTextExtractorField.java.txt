JCR-3296 Indexing ignored file types creates some garbage

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1327116 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.tika.sax.BodyContentHandler;
+import org.apache.tika.sax.WriteOutContentHandler;
-import org.xml.sax.SAXException;
-import org.xml.sax.helpers.DefaultHandler;
-     * The exception used to forcibly terminate the extraction process
-     * when the maximum field length is reached.
-     */
-    private static final SAXException STOP =
-        new SAXException("max field length reached");
-
-    /**
-        executor.execute(
-                new ParsingTask(parser, value, metadata, maxFieldLength));
+        executor.execute(new ParsingTask(parser, value, metadata,
+                maxFieldLength) {
+            public void setExtractedText(String value) {
+                LazyTextExtractorField.this.setExtractedText(value);
+            }
+        });
-    private class ParsingTask extends DefaultHandler implements LowPriorityTask {
+    abstract static class ParsingTask extends BodyContentHandler implements LowPriorityTask {
-        private final int maxFieldLength;
+        private final WriteOutContentHandler writeOutContentHandler;
-        private final StringBuilder builder = new StringBuilder();
+        public ParsingTask(Parser parser, InternalValue value,
+                Metadata metadata, int maxFieldLength) {
+            this(new WriteOutContentHandler(maxFieldLength), parser, value,
+                    metadata);
+        }
-        public ParsingTask(
-                Parser parser, InternalValue value, Metadata metadata,
-                int maxFieldLength) {
+        private ParsingTask(WriteOutContentHandler writeOutContentHandler,
+                Parser parser, InternalValue value, Metadata metadata) {
+            super(writeOutContentHandler);
+            this.writeOutContentHandler = writeOutContentHandler;
-            this.maxFieldLength = maxFieldLength;
-                if (t != STOP) {
+                if (!writeOutContentHandler.isWriteLimitReached(t)) {
-                    builder.replace(0, builder.length(), "TextExtractionError");
+                    setExtractedText("TextExtractionError");
+                    return;
-            setExtractedText(builder.toString());
+            setExtractedText(writeOutContentHandler.toString());
-        @Override
-        public void characters(char[] ch, int start, int length)
-                throws SAXException {
-            builder.append(
-                    ch, start,
-                    Math.min(length, maxFieldLength - builder.length()));
-            if (builder.length() >= maxFieldLength) {
-                throw STOP;
-            }
-        }
-
-        @Override
-        public void ignorableWhitespace(char[] ch, int start, int length)
-                throws SAXException {
-            characters(ch, start, length);
-        }
-
+        protected abstract void setExtractedText(String value);
-
