JCR-2156: Usage of "qualified name" in JavaDoc and Comments

- spi-commons/nodetype/constraints package (omitted yesterday in order to avoid conflicts)

JCR-2153: Introduce QValueConstraint and change return type of QPropertyDefinition.getValueConstraints()

- introduce constants for the wildcards
- fixing creation of PathConstraint from /*
- fixing testcases (still used to previous internal form for path constraint)
- minor improvement to constraint tests in general



git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@786019 13f79535-47bb-0310-9956-ffa450edef68

- * <code>NodeTypeDefinitionFactory</code> can be used to convert the qualified
- * node type definitions to JCR {@link NodeTypeDefinition}s.
+ * <code>NodeTypeDefinitionFactory</code> can be used to convert the internal
+ * SPI node type definitions to JCR {@link NodeTypeDefinition}s.
-     * @param session repository session
-     * @throws RepositoryException if an error occurs
+     * @param session repository session.
+     * @throws RepositoryException if an error occurs.
-     * Create a new node type definitions from a qualified ones.
+     * Create a list of {@link NodeTypeDefinition JCR node type definitions}
+     * from a collection of {@link QNodeTypeDefinition}.
-     * @param defs the qualified node type definitions
-     * @return the JCR node type definitions
-     * @throws RepositoryException if an error occurs
+     * @param defs the SPI node type definitions.
+     * @return the JCR node type definitions.
+     * @throws RepositoryException if an error occurs.
-     * Create a new node type definition from a qualified one.
+     * Create a new JCR node type definition from the given
+     * <code>QNodeTypeDefinition</code>.
-     * @param qNtd the qualified node type definition
-     * @return the JCR node type definition
-     * @throws RepositoryException if an error occurs
+     * @param qNtd A SPI node type definition.
+     * @return the corresponding JCR node type definition.
+     * @throws RepositoryException if an error occurs.
-     * Create a new node definition from a qualified one.
+     * Create a new JCR node definition from the given <code>QNodeDefinition</code>.
-     * @param qNd the qualified node definition
-     * @return the JCR node definition
-     * @throws RepositoryException if an error occurs
+     * @param qNd A node definition.
+     * @return The corresponding JCR node definition.
+     * @throws RepositoryException if an error occurs.
-     * Create a new property definition from a qualified one.
+     * Create a new JCR property definition from the given <code>QPropertyDefinition</code>.
-     * @param qPd the qualified propert definition
-     * @return the JCR property definition
-     * @throws RepositoryException if an error occurs
+     * @param qPd A SPI property definition.
+     * @return the corresponding JCR property definition.
+     * @throws RepositoryException if an error occurs.
