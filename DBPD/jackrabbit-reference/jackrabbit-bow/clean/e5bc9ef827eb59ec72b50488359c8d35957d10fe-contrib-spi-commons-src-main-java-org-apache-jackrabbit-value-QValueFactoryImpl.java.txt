JCR-1072:  SPI-commons: QValueTest.testDateValueEquality2 fails due to changes made with JCR-1018

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@568172 13f79535-47bb-0310-9956-ffa450edef68

-                return new QValueImpl(ISO8601.parse(value));
+                return new DateQValue(value);
-        return new QValueImpl((Calendar) value.clone());
+        return new DateQValue((Calendar) value.clone());
+        private QValueImpl(Object value, int type) {
+            val = value;
+            this.type = type;
+        }
+
-        private QValueImpl(Calendar value) {
-            val = value;
-            type = PropertyType.DATE;
-        }
-
-            if (type == PropertyType.DATE) {
-                return ISO8601.format((Calendar) val);
-            } else {
-                return val.toString();
-            }
+            return val.toString();
-                return val.equals(other.val) && type == other.type;
+                return type == other.type && val.equals(other.val);
-
-        //---------------------------------------------------< Serializable >---
-
+    //--------------------------------------------------------< Inner Class >---
+    /**
+     * Extension for values of type {@link PropertyType#DATE}.
+     */
+    private static class DateQValue extends QValueImpl {
+
+        private final String formattedStr;
+
+        private DateQValue(String value) {
+            super(ISO8601.parse(value), PropertyType.DATE);
+            formattedStr = value;
+        }
+
+        private DateQValue(Calendar value) {
+            super(value, PropertyType.DATE);
+            formattedStr = ISO8601.format(value);
+        }
+
+        /**
+         * @return The formatted String of the internal Calendar value.
+         * @throws RepositoryException
+         * @see QValue#getString()
+         * @see ISO8601#format(Calendar) 
+         */
+        public String getString() throws RepositoryException {
+            return formattedStr;
+        }
+
+        /**
+         * @param obj
+         * @return true if the given Object is a <code>DateQValue</code> with an
+         * equal String representation.
+         * @see Object#equals(Object)
+         */
+        public boolean equals(Object obj) {
+            if (this == obj) {
+                return true;
+            }
+            if (obj instanceof DateQValue) {
+                DateQValue other = (DateQValue) obj;
+                return formattedStr.equals(other.formattedStr);
+            }
+            return false;
+        }
+
+        /**
+         * @return the hashCode of the formatted String of the Calender value.
+         * @see Object#hashCode()
+         */
+        public int hashCode() {
+            return formattedStr.hashCode();
+        }
+    }
