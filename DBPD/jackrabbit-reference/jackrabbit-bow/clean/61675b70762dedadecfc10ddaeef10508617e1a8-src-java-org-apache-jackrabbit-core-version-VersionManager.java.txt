removing author tags

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@111505 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.state.*;
-import org.apache.jackrabbit.core.util.uuid.UUID;
-import org.apache.jackrabbit.core.virtual.*;
+import org.apache.jackrabbit.core.state.ItemStateProvider;
+import org.apache.jackrabbit.core.state.NoSuchItemStateException;
+import org.apache.jackrabbit.core.state.NodeState;
+import org.apache.jackrabbit.core.util.uuid.UUID;
+import org.apache.jackrabbit.core.virtual.DefaultItemStateProvider;
+import org.apache.jackrabbit.core.virtual.VirtualItemStateProvider;
+import org.apache.jackrabbit.core.virtual.VirtualNodeState;
-import javax.jcr.RepositoryException;
+import javax.jcr.RepositoryException;
-import javax.jcr.version.VersionHistory;
-import java.util.*;
+import javax.jcr.version.VersionHistory;
+import java.util.Iterator;
- *
- * @author tripod
- * @version $Revision:$, $Date:$
-    public static final QName PROPNAME_VERSION_LABELS= new QName(NamespaceRegistryImpl.NS_JCR_URI, "versionLabels");
+    public static final QName PROPNAME_VERSION_LABELS = new QName(NamespaceRegistryImpl.NS_JCR_URI, "versionLabels");
+     *
-        if (virtProvider==null) {
+        if (virtProvider == null) {
+     *
+     *
+     *
-        for (int i=0; i<pred.length; i++) {
+        for (int i = 0; i < pred.length; i++) {
+     *
+     *
+     *
+     *
+     *
-        for (int i=0; i<preds.length; i++) {
+        for (int i = 0; i < preds.length; i++) {
-        InternalVersion[] succ= version.getSuccessors();
+        InternalVersion[] succ = version.getSuccessors();
-        for (int i=0; i<succ.length; i++) {
+        for (int i = 0; i < succ.length; i++) {
-    private void mapFrozenProperties(VirtualNodeState  node, InternalFrozenNode fNode)
+    private void mapFrozenProperties(VirtualNodeState node, InternalFrozenNode fNode)
-            for (int i=0; i<props.length; i++) {
+            for (int i = 0; i < props.length; i++) {
-            for (int i=0; i<freezes.length; i++) {
+            for (int i = 0; i < freezes.length; i++) {
+     *
-            for (int i=0; i<props.length; i++) {
+            for (int i = 0; i < props.length; i++) {
-            for (int i=0; i<freezes.length; i++) {
+            for (int i = 0; i < freezes.length; i++) {
