JCR-1920: Upgrade from 1.4.5 to 1.5 creates exception for LDAP authentication 

Disable validation of bean properties for LoginModule, AccessControlProvider, and SearchIndex configuration elements where the parameters are used not only as bean properties.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@731934 13f79535-47bb-0310-9956-ffa450edef68

+     * Flag to validate the configured bean property names against
+     * the configured bean class. By default this is <code>true</code>
+     * to prevent incorrect property names. However, in some cases this
+     * validation should not be performed as client classes may access
+     * the configuration parameters directly through the
+     * {@link #getParameters()} method.
+     *
+     * @see <a href="https://issues.apache.org/jira/browse/JCR-1920">JCR-1920</a>
+     */
+    private boolean validate = true;
+
+    /**
+     * Allows subclasses to control whether the configured bean property
+     * names should be validated.
+     *
+     * @param validate flag to validate the configured property names
+     */
+    protected void setValidate(boolean validate) {
+        this.validate = validate;
+    }
+
+    /**
+            // Instantiate the object using the default constructor
+
+            // Set all configured bean properties
-            Iterator it = properties.keySet().iterator();
-            while (it.hasNext()) {
-                String key = (String) it.next();
-                if (!map.containsKey(key) && properties.getProperty(key) != null) {
-                    String msg = object.getClass().getName() + " does not support '" + key;
-                    log.error(msg);
-                    throw new ConfigurationException(msg);
+
+            if (validate) {
+                // Check that no invalid property names were configured
+                Iterator it = properties.keySet().iterator();
+                while (it.hasNext()) {
+                    String key = (String) it.next();
+                    if (!map.containsKey(key) && properties.getProperty(key) != null) {
+                        String msg =
+                            "Configured class " + object.getClass().getName()
+                            + " does not contain the property " + key
+                            + ". Please fix the repository configuration.";
+                        log.error(msg);
+                        throw new ConfigurationException(msg);
+                    }
+
