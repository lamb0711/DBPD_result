JCR-388: add support for RFC 3253 to the simple server

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@559335 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.server.io.AbstractExportContext;
+import org.apache.jackrabbit.server.io.DefaultIOListener;
+import org.apache.jackrabbit.server.io.IOListener;
-import org.apache.jackrabbit.server.io.PropertyManager;
-import org.apache.jackrabbit.server.io.PropertyImportContext;
-import org.apache.jackrabbit.server.io.IOListener;
-import org.apache.jackrabbit.server.io.AbstractExportContext;
-import org.apache.jackrabbit.server.io.DefaultIOListener;
+import org.apache.jackrabbit.server.io.PropertyImportContext;
+import org.apache.jackrabbit.server.io.PropertyManager;
-import org.apache.jackrabbit.webdav.DavConstants;
-import org.apache.jackrabbit.webdav.observation.ObservationConstants;
+import org.apache.jackrabbit.webdav.property.DavPropertyNameIterator;
-import org.apache.jackrabbit.webdav.property.DavPropertyNameIterator;
+
+import java.util.Collections;
-import java.util.HashMap;
-import java.util.Collections;
-    private static final HashMap reservedNamespaces = new HashMap();
-
-    static {
-        reservedNamespaces.put(DavConstants.NAMESPACE.getPrefix(), DavConstants.NAMESPACE.getURI());
-        reservedNamespaces.put(ObservationConstants.NAMESPACE.getPrefix(), ObservationConstants.NAMESPACE.getURI());
-    }
-
-    private DavPropertySet properties = new DavPropertySet();
-    private boolean inited = false;
+    protected DavPropertySet properties = new DavPropertySet();
+    protected boolean propsInitialized = false;
+     * @deprecated
+     * Create a new {@link DavResource}.
+     *
+     * @param locator
+     * @param factory
+     * @param session
+     * @param config
+     * @param isCollection
+     * @throws DavException
+     */
+    public DavResourceImpl(DavResourceLocator locator, DavResourceFactory factory,
+                           DavSession session, ResourceConfig config,
+                           boolean isCollection) throws DavException {
+        this(locator, factory, session, config, null);
+        this.isCollection = isCollection;
+    }
+    
+    /**
+     * Create a new {@link DavResource}.
+     *
+     * @param locator
+     * @param factory
+     * @param session
+     * @param config
+     * @param node
+     * @throws DavException
+     */
+    public DavResourceImpl(DavResourceLocator locator, DavResourceFactory factory,
+                           DavSession session, ResourceConfig config, Node node) throws DavException {
+        if (locator == null || session == null || config == null) {
+            throw new IllegalArgumentException();
+        }
+        JcrDavSession.checkImplementation(session);
+        this.session = (JcrDavSession)session;
+        this.factory = factory;
+        this.locator = locator;
+        this.filter = config.getItemFilter();
+        this.ioManager = config.getIOManager();
+        this.propManager = config.getPropertyManager();
+
+        if (locator.getResourcePath() != null) {
+            if (node != null) {
+                this.node = node;
+                // define what is a collection in webdav
+                isCollection = config.isCollectionResource(node);
+            }
+        } else {
+            throw new DavException(DavServletResponse.SC_NOT_FOUND);
+        }
+    }
+
+    /**
+     * @deprecated Use the constructor taking a boolean flag instead.
-        if (!exists() || inited) {
+        if (!exists() || propsInitialized) {
-        inited = true;
+        propsInitialized = true;
-        // don't allow creation of nodes, that would be filtered out
-        if (isFilteredResource(member)) {
-            log.debug("Avoid creation of filtered resource: " + member.getDisplayName());
-            throw new DavException(DavServletResponse.SC_FORBIDDEN);
-        }
+            // don't allow creation of nodes if this resource represents a protected
+            // item or if the new resource would be filtered out
+            if (isFilteredResource(member) || node.getDefinition().isProtected()) {
+                log.debug("Forbidden to add member: " + member.getDisplayName());
+                throw new DavException(DavServletResponse.SC_FORBIDDEN);
+            }
+
