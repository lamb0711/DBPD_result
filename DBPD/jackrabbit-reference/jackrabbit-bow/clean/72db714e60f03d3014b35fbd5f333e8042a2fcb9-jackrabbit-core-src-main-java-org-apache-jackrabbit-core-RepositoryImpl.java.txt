JCR-2640: Internal repository context

Use the RepositoryContext to track the JackrabbitSecurityManager instance.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@948866 13f79535-47bb-0310-9956-ffa450edef68

+            // Initialise the security manager;
+            context.setSecurityManager(createSecurityManager());
+            
-     * Returns the {@link org.apache.jackrabbit.core.security.JackrabbitSecurityManager SecurityManager}
+     * Creates the {@link org.apache.jackrabbit.core.security.JackrabbitSecurityManager SecurityManager}
-    protected synchronized JackrabbitSecurityManager getSecurityManager()
+    private synchronized JackrabbitSecurityManager createSecurityManager()
-
-        if (securityMgr == null) {
-            SecurityManagerConfig smc = getConfig().getSecurityConfig().getSecurityManagerConfig();
-            String workspaceName = getConfig().getDefaultWorkspaceName();
-            if (smc != null && smc.getWorkspaceName() != null) {
-                workspaceName = smc.getWorkspaceName();
-            }
-            SystemSession securitySession = getSystemSession(workspaceName);
-            // mark system session as 'active' for that the system workspace does
-            // not get disposed by workspace-janitor
-            onSessionCreated(securitySession);
-
-            if (smc == null) {
-                log.debug("No configuration entry for SecurityManager. Using org.apache.jackrabbit.core.security.simple.SimpleSecurityManager");
-                securityMgr = new SimpleSecurityManager();
-            } else {
-                securityMgr = smc.newInstance(JackrabbitSecurityManager.class);
-            }
-
-            securityMgr.init(this, securitySession);
-            log.info("SecurityManager = " + securityMgr.getClass());
+        SecurityManagerConfig smc =
+            getConfig().getSecurityConfig().getSecurityManagerConfig();
+        String workspaceName = getConfig().getDefaultWorkspaceName();
+        if (smc != null && smc.getWorkspaceName() != null) {
+            workspaceName = smc.getWorkspaceName();
+        SystemSession securitySession = getSystemSession(workspaceName);
+        // mark system session as 'active' for that the system workspace does
+        // not get disposed by workspace-janitor
+        onSessionCreated(securitySession);
+
+        if (smc == null) {
+            log.debug("No configuration entry for SecurityManager. Using org.apache.jackrabbit.core.security.simple.SimpleSecurityManager");
+            securityMgr = new SimpleSecurityManager();
+        } else {
+            securityMgr = smc.newInstance(JackrabbitSecurityManager.class);
+        }
+
+        securityMgr.init(this, securitySession);
+        log.info("SecurityManager = " + securityMgr.getClass());
+
-            AuthContext authCtx = getSecurityManager().getAuthContext(null, subject, workspaceName);
+            AuthContext authCtx = context.getSecurityManager().getAuthContext(
+                    null, subject, workspaceName);
-            AuthContext authCtx = getSecurityManager().getAuthContext(credentials, new Subject(), workspaceName);
+            AuthContext authCtx = context.getSecurityManager().getAuthContext(
+                    credentials, new Subject(), workspaceName);
