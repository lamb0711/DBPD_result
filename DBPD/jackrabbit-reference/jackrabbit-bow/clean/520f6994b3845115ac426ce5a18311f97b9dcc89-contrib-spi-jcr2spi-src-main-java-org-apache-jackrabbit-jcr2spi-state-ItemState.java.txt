work in progress.

- nodestates must always be connected to their cne upon creation
  TODO: add some sort of caching to avoid traffic overhead
- add TODO for refresh, that currently doesn't work properly
- ItemState.refresh only takes changelog and returns the ids of the
  processed states. cleanup of events is left to caller.
- move of NodeStates does not work
- PathResolver: force start to be an NodeState
- all MODIFIED status for SessionStates as well in order to make sure
  that listeners are informed about external changes even if the 
  state is EXISTING.

next TODO: make sure, that public getChildNodeEntry/ies and hasChildNodeEntry check for validity of the connected NodeState. don't return entries, where the nodestate is (transiently) removed or stale.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@472818 13f79535-47bb-0310-9956-ffa450edef68

+                        setStatus(Status.MODIFIED);
-     * @param events
+     * @return a Set of <code>ItemId</code>s in order to allow the caller to
+     * remove those events that have already been processed.
-    abstract void refresh(Collection events, ChangeLog changeLog) throws IllegalStateException;
+    abstract Set refresh(ChangeLog changeLog) throws IllegalStateException;
-
-    //--------------------------------------------------------------------------
-    /**
-     *
-     * @param events
-     * @param processedState
-     */
-    static void removeEvent(Collection events, ItemState processedState) {
-        for (Iterator it = events.iterator(); it.hasNext();) {
-            if (((Event)it.next()).getItemId().equals(processedState.getId())) {
-                it.remove();
-                break;
-            }
-        }
-    }
