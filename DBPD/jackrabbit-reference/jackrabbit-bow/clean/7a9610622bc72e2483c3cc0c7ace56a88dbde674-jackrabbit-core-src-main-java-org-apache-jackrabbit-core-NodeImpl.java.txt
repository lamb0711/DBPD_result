JCR-1232: Merge UUID to NodeId

Replace more uses of UUID with NodeId. Most notably:

  * Reference InternalValues now contain NodeIds instead of UUIDs
  * Item state serializers use NodeIds instead of UUIDs
  * Frozen ids in versioning are now NodeIds instead of UUIDs
  * Dropped Session.internalGetUUID() in favor of Session.getNodeId()
  * Dropped Session.getNodeByUUID(UUID) in favor of Session.getNodeById(NodeId)

None of these changes has functional effects, expect reducing the amount of extra NodeId objects that need to be instantiated when switching between representations.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@792485 13f79535-47bb-0310-9956-ffa450edef68

-     * Returns the (internal) uuid of this node.
-     *
-     * @return the uuid of this node
-     */
-    public UUID internalGetUUID() {
-        return ((NodeId) id).getUUID();
-    }
-
-    /**
-     * @param uuid         uuid of the new node or <code>null</code> if a new
-     *                     uuid should be assigned
+     * @param id           id of the new node or <code>null</code> if a new
+     *                     id should be assigned
-                                         UUID uuid)
+                                         NodeId id)
-        return internalAddChildNode(nodeName, nt, uuid == null ? null : new NodeId(uuid));
+        return internalAddChildNode(nodeName, nt, id);
-        NodeImpl node = addNode(nodeName, nodeTypeName, id.getUUID());
+        NodeImpl node = addNode(nodeName, nodeTypeName, id);
-        return internalGetUUID().toString();
+        return getNodeId().toString();
-                internalSetProperty(NameConstants.JCR_BASEVERSION, InternalValue.create(new UUID(v.getUUID())));
+                internalSetProperty(
+                        NameConstants.JCR_BASEVERSION,
+                        InternalValue.create(new NodeId(v.getUUID())));
-                                InternalValue.create(new UUID(baseVersion.getUUID()))
+                                InternalValue.create(new NodeId(baseVersion.getUUID()))
-                            InternalValue.create(activity.getNodeId().getUUID()));
+                            InternalValue.create(activity.getNodeId()));
-                node = (NodeImpl) session.getNodeByUUID(fn.getFrozenUUID());
+                node = (NodeImpl) session.getNodeById(fn.getFrozenId());
-                        node = (NodeImpl) session.getNodeByUUID(fn.getFrozenUUID());
+                        node = (NodeImpl) session.getNodeById(fn.getFrozenId());
-                    v[i] = InternalValue.create(UUID.fromString(vals[i].getString()));
+                    v[i] = InternalValue.create(new NodeId(vals[i].getString()));
-                v[vals.length] = InternalValue.create(UUID.fromString(version.getUUID()));
+                v[vals.length] = InternalValue.create(new NodeId(version.getUUID()));
-                vals[i++] = InternalValue.create(UUID.fromString(uuid));
+                vals[i++] = InternalValue.create(new NodeId(uuid));
-        // get frozen uuid
-        UUID uuid = frozen.getFrozenUUID();
+        // get frozen id
+        NodeId id = frozen.getFrozenId();
-        NodeImpl node = internalAddChildNode(name, nt, new NodeId(uuid));
+        NodeImpl node = internalAddChildNode(name, nt, id);
-        // get frozen uuid
-        UUID uuid = frozen.getFrozenUUID();
+        // get frozen id
+        NodeId id = frozen.getFrozenId();
-        NodeImpl node = internalAddNode(relPath, nt, new NodeId(uuid));
+        NodeImpl node = internalAddNode(relPath, nt, id);
-            UUID uuid = ((NodeId) version.getId()).getUUID();
-            internalSetProperty(NameConstants.JCR_BASEVERSION, InternalValue.create(uuid));
+            internalSetProperty(
+                    NameConstants.JCR_BASEVERSION,
+                    InternalValue.create((NodeId) version.getId()));
-            UUID uuid = freeze.getFrozenUUID();
-            if (!internalGetUUID().equals(uuid)) {
+            if (!getNodeId().equals(freeze.getFrozenId())) {
-                UUID vhUUID = n.hasProperty(NameConstants.JCR_VERSIONHISTORY)
-                        ? new UUID(n.getProperty(NameConstants.JCR_VERSIONHISTORY).getString())
+                NodeId vhId = n.hasProperty(NameConstants.JCR_VERSIONHISTORY)
+                        ? new NodeId(n.getProperty(NameConstants.JCR_VERSIONHISTORY).getString())
-                if (vhUUID == null || !freeze.hasFrozenHistory(vhUUID)) {
+                if (vhId == null || !freeze.hasFrozenHistory(vhId)) {
-                if (f.getFrozenUUID() != null) {
+                if (f.getFrozenId() != null) {
-                        NodeImpl existing = (NodeImpl) session.getNodeByUUID(f.getFrozenUUID());
+                        NodeImpl existing = (NodeImpl) session.getNodeById(f.getFrozenId());
