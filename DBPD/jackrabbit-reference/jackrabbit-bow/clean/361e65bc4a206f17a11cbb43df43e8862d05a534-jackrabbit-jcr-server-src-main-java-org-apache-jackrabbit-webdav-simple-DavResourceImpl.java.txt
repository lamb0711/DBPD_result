JCR-2133: Remove deprecated classes in jackrabbit-webdav and the corresponding impls in jcr-server


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@782936 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.uuid.UUID;
+import org.apache.jackrabbit.uuid.UUID;
-import org.apache.jackrabbit.webdav.bind.ParentSet;
+import org.apache.jackrabbit.webdav.bind.ParentSet;
-import org.apache.jackrabbit.webdav.property.DavPropertyIterator;
-import org.apache.jackrabbit.webdav.property.DavPropertyNameIterator;
-import org.apache.jackrabbit.webdav.property.DavPropertyNameSet;
+import java.util.HashSet;
-import java.util.HashSet;
-     * @deprecated
-     */
-    public DavResourceImpl(DavResourceLocator locator, DavResourceFactory factory,
-                           DavSession session, ResourceConfig config) throws DavException {
-        JcrDavSession.checkImplementation(session);
-        this.session = (JcrDavSession)session;
-        this.factory = factory;
-        this.locator = locator;
-        this.config = config;
-
-        if (locator != null && locator.getRepositoryPath() != null) {
-            try {
-                Item item = getJcrSession().getItem(locator.getRepositoryPath());
-                if (item != null && item.isNode()) {
-                    node = (Node) item;
-                    // define what is a collection in webdav
-                    isCollection = config.isCollectionResource(node);
-                    initRfc4122Uri();
-                }
-            } catch (PathNotFoundException e) {
-                // ignore: exists field evaluates to false
-            } catch (RepositoryException e) {
-                // some other error
-                throw new JcrDavException(e);
-            }
-        } else {
-            throw new DavException(DavServletResponse.SC_NOT_FOUND);
-        }
-    }
-
-    /**
-     * Create a new {@link DavResource}.
-     *
-     * @param locator
-     * @param factory
-     * @param session
-     * Package protected method that allows to define whether this resource
-     * represents a collection or not.
-     *
-     * @param isCollection
-     * @deprecated Use the constructor taking a boolean flag instead.
-     */
-    void setIsCollection(boolean isCollection) {
-        this.isCollection = isCollection;
-    }
-
-    /**
-    /**
-     * @see DavResource#alterProperties(DavPropertySet, DavPropertyNameSet)
-     */
-    public MultiStatusResponse alterProperties(DavPropertySet setProperties,
-                                               DavPropertyNameSet removePropertyNames)
-            throws DavException {
-        List changeList = new ArrayList();
-        if (removePropertyNames != null) {
-            DavPropertyNameIterator it = removePropertyNames.iterator();
-            while (it.hasNext()) {
-                changeList.add(it.next());
-            }
-        }
-        if (setProperties != null) {
-            DavPropertyIterator it = setProperties.iterator();
-            while (it.hasNext()) {
-                changeList.add(it.next());
-            }
-        }
-        return alterProperties(changeList);
-    }
-
