[JCR-175] Contrib JCR-Server: enable PROPPATCH for simple-davresource
[JCR-174] Contrib JCR-Server: improve handing of strong etags

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@230679 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.simple.ResourceFilterConfig;
+import org.apache.jackrabbit.webdav.simple.ResourceFilter;
+import org.apache.jackrabbit.webdav.simple.DefaultResourceFilter;
+import java.net.MalformedURLException;
-    public static final String CTX_ATTR_RESOURCE_PATH_PREFIX = "jcr.webdav.resourcepath";
+    /**
+     * Name of the init parameter that specify a separate configuration used
+     * for filtering the resources displayed.
+     */
+    public static final String INIT_PARAM_RESOURCE_FILTER = "resource-filter";
+
+    /**
+     * Servlet context attribute used to store the path prefix instead of
+     * having a static field with this servlet. The latter causes problems
+     * when running multiple
+     */
+    public static final String CTX_ATTR_RESOURCE_PATH_PREFIX = "jackrabbit.webdav.simple.resourcepath";
+     * The resource filter
+     */
+    private ResourceFilter resourceFilter;
+
+    /**
+
+        String filterParam = getInitParameter(INIT_PARAM_RESOURCE_FILTER);
+        if (filterParam != null) {
+            try {
+                ResourceFilterConfig config = new ResourceFilterConfig();
+                setResourceFilter(config.parse(getServletContext().getResource(filterParam)));
+            } catch (MalformedURLException e) {
+                log.debug("Unable to build resource filter provider.");
+            }
+        }
-            resourceFactory = new ResourceFactoryImpl(getLockManager());
+            resourceFactory = new ResourceFactoryImpl(getLockManager(), getResourceFilter());
+     * Returns the resource filter to be applied
+     *
+     * @return
+     */
+    public ResourceFilter getResourceFilter() {
+        // fallback if no config present or invalid: an empty resource filter
+        if (resourceFilter == null) {
+            resourceFilter = new DefaultResourceFilter();
+        }
+        return resourceFilter;
+    }
+
+    /**
+     * Set the resource filter
+     *
+     * @param resourceFilter
+     */
+    public void setResourceFilter(ResourceFilter resourceFilter) {
+        this.resourceFilter = resourceFilter;
+    }
+
+    /**
