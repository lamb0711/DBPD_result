JCR-2887 : Split PrivilegeRegistry in a per-session manager instance and a repository level registry [work in progress]

- clustering support
- move definition & def-reader/writer to spi-commons

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1095338 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.commons.privilege.PrivilegeDefinition;
-        NodeTypeEventListener, NamespaceEventListener, UpdateEventListener {
+        NodeTypeEventListener, NamespaceEventListener, PrivilegeEventListener, UpdateEventListener {
+    //---------------------------------------------< PrivilegeEventListener >---
+    /**
+     * {@inheritDoc}
+     */
+    public void externalRegisteredPrivileges(Collection<PrivilegeDefinition> definitions) throws RepositoryException {
+        clusterEvents.add(new PrivilegeEvent(definitions));
+    }
+
+    /**
+     * privilege event auxiliary class.
+     */
+    public static class PrivilegeEvent {
+
+        /**
+         * Collection of node type definitions or node type names.
+         */
+        private Collection<PrivilegeDefinition> definitions;
+
+        /**
+         * Create a new instance of this class.
+         *
+         * @param definitions
+         */
+        public PrivilegeEvent(Collection<PrivilegeDefinition> definitions) {
+            this.definitions = definitions;
+        }
+
+        /**
+         * Return the definitions.
+         *
+         * @return definitions
+         */
+        public Collection<PrivilegeDefinition> getDefinitions() {
+            return definitions;
+        }
+
+        /**
+         * {@inheritDoc}
+         */
+        public int hashCode() {
+            return definitions.hashCode();
+        }
+
+        /**
+         * {@inheritDoc}
+         */
+        public boolean equals(Object obj) {
+            if (obj instanceof PrivilegeEvent) {
+                PrivilegeEvent other = (PrivilegeEvent) obj;
+                return SimpleEventListener.equals(definitions, other.definitions);
+            }
+            return false;
+        }
+    }
+
