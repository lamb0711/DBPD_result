work in progress

- remove 'add' and 'set' methods on NodeState/PropertyState, that were
  used for initialization and did not mark the state modified. this
  was confusing, since similar methods called 'markmodified'.
  replaced by an 'init' method.
- SessionISM: fix options for addMixin (should not check for protected)
- move validation of PropertyState from ItemStateValidator to state.
- add TODO: TransientISM must clean up operations upon status changes.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@453120 13f79535-47bb-0310-9956-ffa450edef68

+    void init(QName[] mixinTypeNames, Collection childEntries, Collection propertyNames, NodeReferences references) {
+        if (mixinTypeNames != null) {
+            this.mixinTypeNames = mixinTypeNames;
+        }
+        // re-create property references
+        propertiesInAttic.clear();
+        properties.clear(); // TODO: any more cleanup work to do? try some kind of merging?
+        Iterator it = propertyNames.iterator();
+        while (it.hasNext()) {
+            QName propName = (QName) it.next();
+            properties.put(propName, new PropertyReference(this, propName, isf, idFactory));
+        }
+        // re-create child node entries
+        childNodeEntries.removeAll(); // TODO: any mre cleanup work to do? try some kind of merging?
+        it = childEntries.iterator();
+        while (it.hasNext()) {
+            ChildNodeEntry cne = (ChildNodeEntry) it.next();
+            childNodeEntries.add(cne.getName(), cne.getUUID());
+        }
+        // set the node references
+        this.references = references;
+    }
+
-            mixinTypeNames = nodeState.mixinTypeNames;
-            // re-create property references
-            propertiesInAttic.clear();
-            properties.clear(); // TODO: any more cleanup work to do? try some kind of merging?
-            Iterator it = nodeState.getPropertyNames().iterator();
-            while (it.hasNext()) {
-                addPropertyName((QName) it.next());
-            }
-            // re-create child node entries
-            childNodeEntries.removeAll(); // TODO: any mre cleanup work to do? try some kind of merging?
-            it = nodeState.getChildNodeEntries().iterator();
-            while (it.hasNext()) {
-                ChildNodeEntry cne = (ChildNodeEntry) it.next();
-                childNodeEntries.add(cne.getName(), cne.getUUID());
-            }
+
+            init(nodeState.getMixinTypeNames(), nodeState.getChildNodeEntries(), nodeState.getPropertyNames(), nodeState.getNodeReferences());
+        markModified();
-     * @see #addChildNodeEntry
-     * @see #addChildNodeEntry
-     * @see #addChildNodeEntry
-     * Adds a new <code>ChildNodeEntry</code>.
-     *
-     * @param nodeName <code>QName</code> object specifying the name of the new
-     *                 entry.
-     * @param uuid     the uuid the new entry is refering to or
-     *                 <code>null</code> if the child node state cannot be
-     *                 identified with a uuid.
-     * @return the newly added <code>ChildNodeEntry</code>
-     */
-    synchronized ChildNodeEntry addChildNodeEntry(QName nodeName,
-                                                  String uuid) {
-        return childNodeEntries.add(nodeName, uuid);
-    }
-
-    /**
-     * Adds a property name entry. This method will not create a property!
-     *
-     * @param propName <code>QName</code> object specifying the property name
-     */
-    synchronized void addPropertyName(QName propName) {
-        properties.put(propName, new PropertyReference(this, propName, isf, idFactory));
-    }
-
-    /**
