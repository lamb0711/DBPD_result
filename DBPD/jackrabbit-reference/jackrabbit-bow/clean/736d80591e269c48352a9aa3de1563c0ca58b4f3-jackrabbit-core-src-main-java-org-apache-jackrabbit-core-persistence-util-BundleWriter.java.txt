JCR-3447: InternalValueFactory should use the DataStore whenever available

Further simplify code by making the Internal/QValue fields immutable (final)
and replacing the store() method with a simpler isInDataStore() checker.
This is OK since all (large) binary InternalValues should now already
be in the data store.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1400935 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.data.DataStore;
-                        DataStore dataStore = binding.dataStore;
-                        if (dataStore != null) {
-                            int maxMemorySize = dataStore.getMinRecordLength() - 1;
-                            if (size < maxMemorySize) {
-                                writeSmallBinary(val, state, i);
-                            } else {
-                                out.writeInt(BundleBinding.BINARY_IN_DATA_STORE);
-                                val.store(dataStore);
-                                writeString(val.toString());
-                            }
-                            break;
-                        }
-                        // special handling required for binary value:
-                        // spool binary value to file in blob store
-                        if (size < 0) {
+                        if (val.isInDataStore()) {
+                            out.writeInt(BundleBinding.BINARY_IN_DATA_STORE);
+                            writeString(val.toString());
+                        } else if (binding.dataStore != null) {
+                            writeSmallBinary(val, state, i);
+                        } else if (size < 0) {
+                            // special handling required for binary value:
+                            // spool binary value to file in blob store
