JCR-2887 : Split PrivilegeRegistry in a per-session manager instance and a repository level registry [work in progress]

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1082239 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.security.Privilege;
+import java.util.Collections;
+import java.util.Set;
-     * if the given <code>absPath</code> denotes an existing <code>Node</code>,
-     * otherwise it returns zero.
+     * if the given <code>absPath</code>.
-     * @return the granted privileges at <code>absPath</code> or zero if
-     * the path does not denote an existing <code>Node</code>.
+     * @return the granted privileges at <code>absPath</code>.
+     * @deprecated Use {@link #getPrivilegeSet(Path)} instead.
+     * Returns <code>true</code> if the given privileges are granted at the
+     * specified <code>absPath</code>.
+     *
+     * @param absPath
+     * @param privileges
+     * @return <code>true</code> if the given privileges are granted at the
+     * specified <code>absPath</code>.
+     * @throws RepositoryException
+     */
+    boolean hasPrivileges(Path absPath, Privilege[] privileges) throws RepositoryException;
+
+    /**
+     * Returns the <code>Privilege</code>s granted by the underlying policy
+     * at the given <code>absPath</code>.
+     *
+     * @param absPath Absolute path to a <code>Node</code>.
+     * @return the granted privileges at <code>absPath</code>.
+     * @throws RepositoryException if an error occurs
+     */
+    Set<Privilege> getPrivilegeSet(Path absPath) throws RepositoryException;
+
+    /**
+
+        public boolean hasPrivileges(Path absPath, Privilege[] privileges) throws RepositoryException {
+            return false;
+        }
+        public Set<Privilege> getPrivilegeSet(Path absPath) throws RepositoryException {
+            return Collections.emptySet();
+        }
+
