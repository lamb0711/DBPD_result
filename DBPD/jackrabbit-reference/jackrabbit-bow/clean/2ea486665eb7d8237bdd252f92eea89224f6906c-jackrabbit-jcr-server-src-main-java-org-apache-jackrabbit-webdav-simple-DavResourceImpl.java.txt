unused imports, javadoc, minor improvements

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@732740 13f79535-47bb-0310-9956-ffa450edef68

-                    this.initRfc4122Uri();
+                    initRfc4122Uri();
-                this.initRfc4122Uri();
+                initRfc4122Uri();
-                    this.rfc4122Uri = "urn:uuid:" + uuid;
+                    rfc4122Uri = "urn:uuid:" + uuid;
-        Set parentElements = this.getParentElements();
+        Set parentElements = getParentElements();
-            if (!this.node.isNodeType(MIX_SHAREABLE)) {
-                if (!this.node.canAddMixin(MIX_SHAREABLE)) {
+            if (!node.isNodeType(MIX_SHAREABLE)) {
+                if (!node.canAddMixin(MIX_SHAREABLE)) {
-                this.node.addMixin(MIX_SHAREABLE);
-                this.node.save();
+                node.addMixin(MIX_SHAREABLE);
+                node.save();
-            Workspace workspace = this.session.getRepositorySession().getWorkspace();
-            workspace.clone(workspace.getName(), this.node.getPath(), newBinding.getLocator().getRepositoryPath(), false);
+            Workspace workspace = session.getRepositorySession().getWorkspace();
+            workspace.clone(workspace.getName(), node.getPath(), newBinding.getLocator().getRepositoryPath(), false);
-            if (!this.node.isNodeType(MIX_REFERENCEABLE)) {
-                throw new DavException(this.node.canAddMixin(MIX_REFERENCEABLE)?
+            if (!node.isNodeType(MIX_REFERENCEABLE)) {
+                throw new DavException(node.canAddMixin(MIX_REFERENCEABLE)?
-            if (this.node.getDepth() > 0) {
+            if (node.getDepth() > 0) {
-                if (!(this.node instanceof org.apache.jackrabbit.api.jsr283.Node)) {
-                    DavResourceLocator loc = this.locator.getFactory().createResourceLocator(
-                            this.locator.getPrefix(), this.locator.getWorkspacePath(), this.node.getParent().getPath(), false);
-                    return Collections.singleton(new ParentElement(loc.getHref(true), this.node.getName()));
+                if (!(node instanceof org.apache.jackrabbit.api.jsr283.Node)) {
+                    DavResourceLocator loc = locator.getFactory().createResourceLocator(
+                            locator.getPrefix(), locator.getWorkspacePath(), node.getParent().getPath(), false);
+                    return Collections.singleton(new ParentElement(loc.getHref(true), node.getName()));
-                NodeIterator sharedSetIterator = ((org.apache.jackrabbit.api.jsr283.Node) this.node).getSharedSet();
+                NodeIterator sharedSetIterator = ((org.apache.jackrabbit.api.jsr283.Node) node).getSharedSet();
-                    DavResourceLocator loc = this.locator.getFactory().createResourceLocator(
-                            this.locator.getPrefix(), this.locator.getWorkspacePath(), sharednode.getParent().getPath(), false);
+                    DavResourceLocator loc = locator.getFactory().createResourceLocator(
+                            locator.getPrefix(), locator.getWorkspacePath(), sharednode.getParent().getPath(), false);
-     * @return
+     * @return a new <code>ImportContext</code>
-     * @return
+     * @return a new <code>ExportContext</code>
-     * @return
+     * @return a new <code>PropertyExportContext</code>
