JCR-1213: UUIDDocId cache does not work properly because of weakReferences in combination with new instance for combined indexreader

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@601342 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.uuid.UUID;
+import java.util.HashMap;
+     * Map of {@link OffsetReader}s, identified by creation tick.
+     */
+    private final Map readersByCreationTick = new HashMap();
+
+    /**
+            readersByCreationTick.put(
+                    Long.valueOf(subReaders[i].getCreationTick()), offsetReader);
-    //------------------------< internal >--------------------------------------
+    /**
+     * {@inheritDoc}
+     */
+    public ForeignSegmentDocId createDocId(UUID uuid) throws IOException {
+        Term id = new Term(FieldNames.UUID, uuid.toString());
+        int doc;
+        long tick;
+        for (int i = 0; i < subReaders.length; i++) {
+            TermDocs docs = subReaders[i].termDocs(id);
+            try {
+                if (docs.next()) {
+                    doc = docs.doc();
+                    tick = subReaders[i].getCreationTick();
+                    return new ForeignSegmentDocId(doc, tick);
+                }
+            } finally {
+                docs.close();
+            }
+        }
+        return null;
+    }
+     * {@inheritDoc}
+     */
+    public int getDocumentNumber(ForeignSegmentDocId docId) {
+        OffsetReader r = (OffsetReader) readersByCreationTick.get(
+                new Long(docId.getCreationTick()));
+        if (r != null && !r.reader.isDeleted(docId.getDocNumber())) {
+            return r.offset + docId.getDocNumber();
+        }
+        return -1;
+    }
+    
+    /**
