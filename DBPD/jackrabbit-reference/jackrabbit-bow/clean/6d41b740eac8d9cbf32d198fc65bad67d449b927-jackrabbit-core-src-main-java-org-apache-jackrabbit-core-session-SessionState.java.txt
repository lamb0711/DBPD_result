JCR-2749: Closing a session twice shouldn't write a warning in the log

Make duplicate session closing log warnings again.
Also made other log messages more detailed.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@997518 13f79535-47bb-0310-9956-ffa450edef68

-     * Performs the given operation within a synchronized block.
+     * Performs the given operation within a synchronized block. Special care
+     * is made to detect attempts to access the session concurrently and to
+     * log detailed warnings in such cases.
-                    log.warn("Attempt to perform {} while another thread"
-                            + " is concurrently modifying the session."
-                            + " Blocking until the other thread is finished"
-                            + " using this session.", operation);
-                } else {
-                    log.debug("Attempt to perform {} while another thread"
-                            + " is concurrently accessing the session."
-                            + " Blocking until the other thread is finished"
-                            + " using this session.", operation);
+                    Exception trace = new Exception(
+                            "Stack trace of concurrent access to " + context);
+                    log.warn("Attempt to perform " + operation
+                            + " while another thread is concurrently writing"
+                            + " to " + context + ". Blocking until the other"
+                            + " thread is finished using this session. Please"
+                            + " review your code to avoid concurrent use of"
+                            + " a session.", trace);
+                } else if (log.isDebugEnabled()) {
+                    Exception trace = new Exception(
+                            "Stack trace of concurrent access to " + context);
+                    log.debug("Attempt to perform " + operation + " while"
+                            + " another thread is concurrently reading from "
+                            + context + ". Blocking until the other thread"
+                            + " is finished using this session. Please"
+                            + " review your code to avoid concurrent use of"
+                            + " a session.", trace);
-     * Closes this session.
+     * Closes this session.  Special care is made to detect attempts to
+     * access the session concurrently or to close it more than once, and to
+     * log detailed warnings in such cases.
-                log.warn("Attempt to close a session while another thread is"
-                        + " concurrently accessing the session. Blocking until"
-                        + " the other thread is finished using this session.");
+                Exception trace = new Exception(
+                        "Stack trace of concurrent access to " + context);
+                log.warn("Attempt to close " + context + " while another"
+                        + " thread is concurrently accessing this session."
+                        + " Blocking until the other thread is finished"
+                        + " using this session. Please review your code"
+                        + " to avoid concurrent use of a session.", trace);
-                            "Stack trace of where " + context + " was closed");
+                            "Stack trace of  where " + context
+                            + " was originally closed");
-                    log.debug("This session has already been closed. See the"
-                            + " exception for a trace of where the "
+                    Exception trace = new Exception(
+                            "Stack trace of the duplicate attempt to close "
+                            + context);
+                    log.warn("Attempt to close " + context + " after it has"
+                            + " already been closed. Please review your code"
+                            + " for proper session management.", trace);
+                    log.warn(context + " has already been closed. See the"
+                            + " attached exception for a trace of where this"
-                    log.debug("And additionally at", 
-                            new Exception("Stack trace of where " + context + " was also closed"));
