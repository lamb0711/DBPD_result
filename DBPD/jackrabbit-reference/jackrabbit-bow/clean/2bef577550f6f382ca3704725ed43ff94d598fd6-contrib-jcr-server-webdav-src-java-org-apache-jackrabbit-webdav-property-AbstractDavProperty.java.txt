JCR-258 - remove JDOM dependency from jcr-server contribution
JCR-295 - usage of Cache-Control header 
JCR-297 - log output while parsing xml
minor consistency issues and improvements

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368683 13f79535-47bb-0310-9956-ffa450edef68

-import org.jdom.Element;
+import org.apache.jackrabbit.webdav.xml.XmlSerializable;
+import org.apache.jackrabbit.webdav.xml.DomUtil;
+import org.w3c.dom.Element;
+import org.w3c.dom.Node;
+import org.w3c.dom.Document;
-import java.util.Arrays;
-import java.util.List;
+import java.util.Iterator;
+import java.util.Collection;
-     * new DavProperty("displayname", "WebDAV Directory").toXml()
+     * new DavProperty("displayname", "WebDAV Directory").toXml
-     * new DavProperty("resourcetype", new Element("collection")).toXml()
+     * new DavProperty("resourcetype", new Element("collection")).toXml
-     * new DavProperty("custom-property", customVals, customNamespace).toXml()
+     * new DavProperty("custom-property", customVals, customNamespace).toXml
-     * @see DavProperty#toXml()
+     * @see org.apache.jackrabbit.webdav.xml.XmlSerializable#toXml(Document)
+     * @param document
-    public Element toXml() {
-	Element elem = getName().toXml();
+    public Element toXml(Document document) {
+	Element elem = getName().toXml(document);
+        // todo: improve....
-	    if (value instanceof Element) {
-		elem.addContent((Element) value);
-	    } else if (value instanceof Element[]) {
-                elem.addContent(Arrays.asList((Element[])value));
-            } else if (value instanceof List) {
-                elem.addContent((List)value);
+	    if (value instanceof XmlSerializable) {
+                elem.appendChild(((XmlSerializable)value).toXml(document));
+            } else if (value instanceof Node) {
+                Node n = document.importNode((Node)value, true);
+		elem.appendChild(n);
+	    } else if (value instanceof Node[]) {
+                for (int i = 0; i < ((Node[])value).length; i++) {
+                    Node n = document.importNode(((Node[])value)[i], true);
+                    elem.appendChild(n);
+                }
+            } else if (value instanceof Collection) {
+                Iterator it = ((Collection)value).iterator();
+                while (it.hasNext()) {
+                    Object entry = it.next();
+                    if (entry instanceof XmlSerializable) {
+                        elem.appendChild(((XmlSerializable)entry).toXml(document));
+                    } else if (entry instanceof Node) {
+                        Node n = document.importNode((Node)entry, true);
+                        elem.appendChild(n);
+                    } else {
+                        DomUtil.setText(elem, entry.toString());
+                    }
+                }
-                elem.setText(value.toString());
+                DomUtil.setText(elem, value.toString());
