JCR-651: Improve performance for queries with large result sets

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@480138 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.NodeId;
-    /** The node ids of the nodes in the result set */
-    protected final NodeId[] ids;
-
-    /** The score values for the nodes in the result set */
-    protected final Float[] scores;
+    /** The node ids of the nodes in the result set with their score value */
+    protected final ScoreNode[] scoreNodes;
-     * @param ids the IDs of the result nodes.
-     * @param scores the corresponding score values for each result node.
+     * @param scoreNodes the node ids of the matching nodes.
-                     NodeId[] ids,
-                     Float[] scores) {
+                     ScoreNode[] scoreNodes) {
-        this.ids = ids;
-        this.scores = scores;
+        this.scoreNodes = scoreNodes;
-        if ((pos + skipNum) > ids.length) {
+        if ((pos + skipNum) > scoreNodes.length) {
-        return ids.length - invalid;
+        return scoreNodes.length - invalid;
-        return scores[pos].floatValue();
+        return scoreNodes[pos].getScore();
-        while (next == null && (pos + 1) < ids.length) {
+        while (next == null && (pos + 1) < scoreNodes.length) {
-                next = (NodeImpl) itemMgr.getItem(ids[pos + 1]);
+                next = (NodeImpl) itemMgr.getItem(scoreNodes[pos + 1].getNodeId());
-                        + ids[pos + 1] + ": " + e.toString());
+                        + scoreNodes[pos + 1].getNodeId() + ": " + e.toString());
