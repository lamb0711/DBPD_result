JCR-1878: Use Apache Tika for text extraction

Drop the deprecated TextFilter classes

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@778621 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.Iterator;
-import org.apache.jackrabbit.core.query.TextFilter;
- *     Parses the configured {@link TextExtractor} and {@link TextFilter}
- *     class names and instantiates the configured classes.
+ *     Parses the configured {@link TextExtractor} class names and
+ *     instantiates the configured classes.
-    private final Set types = new HashSet();
+    private final Set<String> types = new HashSet<String>();
-     * Composite extractor used to for all text extration tasks. Contains
+     * Composite extractor used to for all text extraction tasks. Contains
-     * Configured {@link TextFilter} instances. Used for backwards
-     * compatibility with existing configuration files and {@link TextFilter}
-     * implementations.
-     */
-    private final Collection filters = new ArrayList();
-
-    /**
-                } else if (object instanceof TextFilter) {
-                    filters.add(object);
-        if (!types.contains(type)) {
-            Iterator iterator = filters.iterator();
-            while (iterator.hasNext()) {
-                TextFilter filter = (TextFilter) iterator.next();
-                if (filter.canFilter(type)) {
-                    types.add(type);
-                    extractor.addTextExtractor(
-                            new TextFilterExtractor(type, filter));
-                    break;
-                }
-            }
-        }
