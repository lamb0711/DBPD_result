work in progress

- ChildNodeEntry.getIndex() not required within ChildNodeEntries.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@483015 13f79535-47bb-0310-9956-ffa450edef68

-            ChildNodeEntry cne = (ChildNodeEntry) it.next();
-            add(cne.getName(), cne.getUUID(), cne.getIndex());
+            ChildNodeEntry baseCne = (ChildNodeEntry) it.next();
+            ChildNodeEntry cne = ChildNodeReference.create(nodeState, baseCne.getName(), baseCne.getUUID(), nodeState.isf, nodeState.idFactory);
+            add(cne);
+     * Returns true, if this ChildNodeEntries contains a entry that matches
+     * the given name and either index or uuid:<br>
+     * If <code>uuid</code> is not <code>null</code> the given index is
+     * ignored since it is not required to identify a child node entry.
+     * Otherwise the given index is used.
+        if (uuid == null) {
+            return contains(name, index);
+        } else {
+            return contains(name, uuid);
+        }
+    }
+
+    /**
+     *
+     * @param name
+     * @param index
+     * @return
+     */
+    private boolean contains(QName name, int index) {
+        if (!nameMap.containsKey(name) || index < Path.INDEX_DEFAULT) {
+            // no matching child node entry
+            return false;
+        }
+        Object o = nameMap.get(name);
+        if (o instanceof List) {
+            // SNS
+            int listIndex = index - 1;
+            return listIndex < ((List) o).size();
+        } else {
+            // single child node with this name -> matches only if request
+            // index equals the default-index
+            return index == Path.INDEX_DEFAULT;
+        }
+    }
+
+    /**
+     *
+     * @param name
+     * @param uuid
+     * @return
+     */
+    private boolean contains(QName name, String uuid) {
+        if (uuid == null) {
+            throw new IllegalArgumentException();
+        }
-                if (uuid == null) {
-                    if (cne.getIndex() == index) {
-                        return true;
-                    }
-                } else if (uuid.equals(cne.getUUID())) {
+                if (uuid.equals(cne.getUUID())) {
-            // no matching entry found
-            return false;
-            if (uuid == null) {
-                return cne.getUUID() == null;
-            } else {
-                return uuid.equals(cne.getUUID());
-            }
+            return uuid.equals(cne.getUUID());
+        // no matching entry found
+        return false;
