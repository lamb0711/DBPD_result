JCR-1438: Replace Config classes with factories 

Replaced FileSystemConfig with FileSystemFactory.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@688207 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.fs.FileSystemFactory;
+import javax.jcr.RepositoryException;
-public class RepositoryConfig {
+public class RepositoryConfig implements FileSystemFactory {
-     * Repository file system configuration.
+     * Repository file system factory.
-    private final FileSystemConfig fsc;
+    private final FileSystemFactory fsf;
-     * @param fsc file system configuration
+     * @param fsf file system factory
-    public RepositoryConfig(String home, SecurityConfig sec, FileSystemConfig fsc,
+    public RepositoryConfig(
+            String home, SecurityConfig sec, FileSystemFactory fsf,
-        this.fsc = fsc;
+        this.fsf = fsf;
-            // a configuration directoy had been specified; search for
+            // a configuration directory had been specified; search for
-            FileSystem fs = fsc.createFileSystem();
-                if (!fs.exists(workspaceConfigDirectory)) {
-                    fs.createFolder(workspaceConfigDirectory);
-                } else {
-                    String[] dirNames = fs.listFolders(workspaceConfigDirectory);
-                    for (int i = 0; i < dirNames.length; i++) {
-                        String configDir = workspaceConfigDirectory
-                                + FileSystem.SEPARATOR + dirNames[i];
-                        WorkspaceConfig wc = loadWorkspaceConfig(fs, configDir);
-                        if (wc != null) {
-                            addWorkspaceConfig(wc);
+                FileSystem fs = fsf.getFileSystem();
+                try {
+                    if (!fs.exists(workspaceConfigDirectory)) {
+                        fs.createFolder(workspaceConfigDirectory);
+                    } else {
+                        String[] dirNames = fs.listFolders(workspaceConfigDirectory);
+                        for (int i = 0; i < dirNames.length; i++) {
+                            String configDir = workspaceConfigDirectory
+                            + FileSystem.SEPARATOR + dirNames[i];
+                            WorkspaceConfig wc = loadWorkspaceConfig(fs, configDir);
+                            if (wc != null) {
+                                addWorkspaceConfig(wc);
+                            }
-                    }
+                    }
+                } finally {
+                    fs.close();
-            } catch (FileSystemException e) {
+            } catch (Exception e) {
-            } finally {
-                try {
-                    fs.close();
-                } catch (FileSystemException ignore) {
-                }
-            virtualFS = fsc.createFileSystem();
+            try {
+                virtualFS = fsf.getFileSystem();
+            } catch (RepositoryException e) {
+                throw new ConfigurationException("File system configuration error", e);
+            }
-     * Returns the repository file system configuration.
+     * Creates and returns the configured repository file system.
-     * @return file system configuration
+     * @return the configured {@link FileSystem}
+     * @throws RepositoryException if the file system can not be created
-    public FileSystemConfig getFileSystemConfig() {
-        return fsc;
+    public FileSystem getFileSystem() throws RepositoryException {
+        return fsf.getFileSystem();
