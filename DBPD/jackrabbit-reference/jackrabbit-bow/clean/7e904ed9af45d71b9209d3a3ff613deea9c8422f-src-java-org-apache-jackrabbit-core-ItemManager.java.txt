oops, fix introduced new bug, reverting to previous state

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@105832 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.ArrayList;
-import java.util.Iterator;
-import java.util.Map;
+import java.util.*;
- * <li>respecting access rights of associated <code>Session</code> in all methods.
+ * <li>checking access rights of associated <code>Session</code> in all methods.
-     * Checks if the item with the given path exists.
-     *
-     * @param path path to the item to be checked
-     * @return true if the specified item exists
+     * @param path
+     * @return
-/*
-            // item exists but the session has not been granted read access
-            return false;
-        } catch (RepositoryException re) {
-            return false;
-        }
-*/
-        try {
-            // check sanity of session
-            session.sanityCheck();
-
-            ItemId id = hierMgr.resolvePath(path);
-
-            // check if state exists for the given item
-            if (!itemStateProvider.hasItemState(id)) {
-                return false;
-            }
-
-            // check privileges
-            if (!session.getAccessManager().isGranted(id, AccessManager.READ)) {
-                // clear cache
-                if (isCached(id)) {
-                    evictItem(id);
-                }
-                // item exists but the session has not been granted read access
-                return false;
-            }
-        } catch (PathNotFoundException pnfe) {
-            return false;
-        } catch (ItemNotFoundException infe) {
-            return false;
-     * Checks if the item with the given id exists.
+     * Checks if the item with the given id exists
-     * @param id id of the item to be checked
-     * @return true if the specified item exists
+     * @param id
+     * @return
-/*
-            // item exists but the session has not been granted read access
-            return false;
-        } catch (RepositoryException re) {
-            return false;
-        }
-*/
-        try {
-            // check sanity of session
-            session.sanityCheck();
-
-            // check if state exists for the given item
-            if (!itemStateProvider.hasItemState(id)) {
-                return false;
-            }
-
-            // check privileges
-            if (!session.getAccessManager().isGranted(id, AccessManager.READ)) {
-                // clear cache
-                if (isCached(id)) {
-                    evictItem(id);
-                }
-                // item exists but the session has not been granted read access
-                return false;
-            }
-        } catch (ItemNotFoundException infe) {
-            return false;
