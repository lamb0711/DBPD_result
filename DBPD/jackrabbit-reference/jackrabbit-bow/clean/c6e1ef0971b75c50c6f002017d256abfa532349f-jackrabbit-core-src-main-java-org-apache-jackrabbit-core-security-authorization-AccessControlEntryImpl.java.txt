JCR-2887 : Split PrivilegeRegistry in a per-session manager instance and a repository level registry [work in progress]

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1092723 13f79535-47bb-0310-9956-ffa450edef68

-    private final int privilegeBits;
+    private final PrivilegeBits privilegeBits;
-     * Calculated set of non-aggregate custom privileges (see also privilegeBits
-     * above for the built-in privileges) used upon ac evaluation.
-     */
-    private Set<Privilege> customPrivs;
-
-    /**
-    public int getPrivilegeBits() {
+    public PrivilegeBits getPrivilegeBits() {
-     * @return A collection of all non-aggregate custom privileges defined by
-     * this entry including those contained in the aggregated custom privileges.
-     */
-    public Set<Privilege> getCustomPrivileges() {
-        if (customPrivs == null) {
-            customPrivs = new HashSet<Privilege>();
-            for (Privilege p : privileges) {
-                try {
-                    if (getPrivilegeManager().isCustomPrivilege(p)) {
-                        if (p.isAggregate()) {
-                            for (Privilege aggr : p.getAggregatePrivileges()) {
-                                if (!aggr.isAggregate()) {
-                                    customPrivs.add(p);
-                                }
-                            }
-                        } else {
-                            customPrivs.add(p);
-
-                        }
-                    }
-                } catch (AccessControlException e) {
-                    // ignore.
-                }
-            }
-        }
-        return customPrivs;
-    }
-
-    /**
-                   privilegeBits == other.privilegeBits &&
+                   privilegeBits.equals(other.privilegeBits) &&
-                   restrictions.equals(other.restrictions) &&
-                   equalCustomPrivileges(other);
+                   restrictions.equals(other.restrictions);
-
-    private boolean equalCustomPrivileges(AccessControlEntryImpl other) {
-        Set<Privilege> a1 = getCustomPrivileges();
-        Set<Privilege> a2 = other.getCustomPrivileges();
-        return a1.size() == a2.size() && a1.containsAll(a2);
-    }
