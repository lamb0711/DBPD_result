Prevent needless log information to be written due to isExpired() call in case the property of the resource has been removed

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@514656 13f79535-47bb-0310-9956-ffa450edef68

+    
+    /**
+     * Flag indicating that this resource has already been checked for expiry
+     * and whether it is actually expired.
+     * 
+     * @see #isExpired()
+     */
+    private boolean expired;
+        return getSafePath();
+    }
+    
+    /**
+     * Returns the path of the property containing the resource by appending
+     * the {@link #getName() name} to the path of the class path entry to which
+     * this resource belongs. This path need not necessairily be the same as
+     * the {@link #getProperty() path of the property} but will always succeed
+     * as there is no repository access involved.
+     */
+    protected String getSafePath() {
-            log.debug("getInputStream() returned " + in);
+            log.debug("getInputStream() returned {}", in);
-            log.debug("getContentLength() returned " + String.valueOf(length));
+            log.debug("getContentLength() returned {}", new Integer(length));
-        try {
+        if (!expired) {
-                currentPropTime = Util.getLastModificationTime(prop);
+                try {
+                    currentPropTime = Util.getLastModificationTime(prop);
+                } catch (RepositoryException re) {
+                    // cannot get last modif time from property, use current time
+                    log.debug("expireResource: Cannot get current version for "
+                        + toString() + ", will expire", re);
+                    currentPropTime = System.currentTimeMillis();
+                }
-
+    
-
+    
-            boolean exp = currentPropTime > loadTime;
-            if (exp && log.isDebugEnabled()) {
-                log.debug("expireResource: Resource created " +
-                    new Date(loadTime) + " superceded by version created " +
-                    new Date(currentPropTime));
+            expired = currentPropTime > loadTime;
+            if (expired && log.isDebugEnabled()) {
+                log.debug(
+                    "expireResource: Resource created {} superceded by version created {}",
+                    new Date(loadTime), new Date(currentPropTime));
-
-            // return the result of checking
-            return exp;
-        } catch (RepositoryException re) {
-            log.debug("expireResource: Cannot get current version for " +
-                toString() + ", will expire: " + re);
-            return true;
+        
+        return expired;
-        buf.append(getPath());
+        buf.append(getSafePath());
