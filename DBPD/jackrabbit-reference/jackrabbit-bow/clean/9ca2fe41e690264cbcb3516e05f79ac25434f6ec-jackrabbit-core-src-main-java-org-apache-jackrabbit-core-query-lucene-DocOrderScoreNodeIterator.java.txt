JCR-2087: Upgrade to Java 5 as the base platform

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@801565 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.id.NodeId;
-    private final List scoreNodes;
+    private final List<ScoreNode[]> scoreNodes;
-                             List scoreNodes,
-                             int selectorIndex) {
+                              List<ScoreNode[]> scoreNodes,
+                              int selectorIndex) {
-        ScoreNode[][] nodes = (ScoreNode[][]) scoreNodes.toArray(new ScoreNode[scoreNodes.size()][]);
+        ScoreNode[][] nodes = scoreNodes.toArray(new ScoreNode[scoreNodes.size()][]);
-        final List invalidIDs = new ArrayList(2);
+        final List<NodeId> invalidIDs = new ArrayList<NodeId>(2);
-                List tmp = new ArrayList();
-                for (int i = 0; i < nodes.length; i++) {
-                    if (!invalidIDs.contains(nodes[i][selectorIndex].getNodeId())) {
-                        tmp.add(nodes[i]);
+                List<ScoreNode[]> tmp = new ArrayList<ScoreNode[]>();
+                for (ScoreNode[] node : nodes) {
+                    if (!invalidIDs.contains(node[selectorIndex].getNodeId())) {
+                        tmp.add(node);
-                nodes = (ScoreNode[][]) tmp.toArray(new ScoreNode[tmp.size()][]);
+                nodes = tmp.toArray(new ScoreNode[tmp.size()][]);
-                Arrays.sort(nodes, new Comparator() {
-                    public int compare(Object o1, Object o2) {
-                        ScoreNode n1 = ((ScoreNode[]) o1)[selectorIndex];
-                        ScoreNode n2 = ((ScoreNode[]) o2)[selectorIndex];
+                Arrays.sort(nodes, new Comparator<ScoreNode[]>() {
+                    public int compare(ScoreNode[] o1, ScoreNode[] o2) {
+                        ScoreNode n1 = o1[selectorIndex];
+                        ScoreNode n2 = o2[selectorIndex];
