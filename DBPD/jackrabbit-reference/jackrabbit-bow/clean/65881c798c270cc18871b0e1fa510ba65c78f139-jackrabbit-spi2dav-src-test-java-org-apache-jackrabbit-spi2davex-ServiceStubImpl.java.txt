JCR-1877: put spi2dav(ex) sandbox project into a common release cycle

- testing

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@757862 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.RepositoryServiceStub;
-import javax.jcr.SimpleCredentials;
-public class ServiceStubImpl extends RepositoryServiceStub {
+public class ServiceStubImpl extends org.apache.jackrabbit.spi2dav.ServiceStubImpl {
-    public static final String PROP_REPOSITORY_URI = "org.apache.jackrabbit.spi.spi2davex.uri";
-    public static final String PROP_DEFAULT_DEPTH = "org.apache.jackrabbit.spi.spi2davex.defaultDepth";
-    public static final String PROP_WSP_NAME = "org.apache.jackrabbit.spi.spi2davex.workspacename";
+    public static final String PROP_DEFAULT_DEPTH = "org.apache.jackrabbit.spi2davex.defaultDepth";
-    /**
-     * Workaround for SPI issue JCR-1851
-     * 
-     * @param propName Configuration property name.
-     * @return Configured property value.
-     */
-    public String getProperty(String propName) {
-        String prop = super.getProperty(propName);
-        if (prop == null && propName.equals("workspacename")) {
-            prop = super.getProperty(PROP_WSP_NAME);
-        }
-        return prop;
-    }
-
-                    return Integer.parseInt(depthStr);
+                    if (depthStr != null) {
+                        try {
+                            return Integer.parseInt(depthStr);
+                        } catch (Exception e) {
+                            // ignore
+                        }
+                    }
+                    return 4;
-
-    public Credentials getAdminCredentials() {
-        if (adminCredentials == null) {
-            adminCredentials = new SimpleCredentials(getProperty(RepositoryServiceStub.PROP_PREFIX + "." + RepositoryServiceStub.PROP_ADMIN_NAME),
-                    getProperty(RepositoryServiceStub.PROP_PREFIX + "." + RepositoryServiceStub.PROP_ADMIN_PWD).toCharArray());
-        }
-        return adminCredentials;
-    }
-
-    public Credentials getReadOnlyCredentials() {
-        if (readOnlyCredentials == null) {
-            readOnlyCredentials = new SimpleCredentials(getProperty(RepositoryServiceStub.PROP_PREFIX + "." + RepositoryServiceStub.PROP_READONLY_NAME),
-                getProperty(RepositoryServiceStub.PROP_PREFIX + "." + RepositoryServiceStub.PROP_READONLY_PWD).toCharArray());
-        }
-        return readOnlyCredentials;
-    }
