JCR-2453 - Break the spi2dav dependency to jcr-server

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1002639 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.commons.webdav.QueryUtil;
-import javax.jcr.ValueFormatException;
-    public static final DavPropertyName SEARCH_RESULT_PROPERTY = DavPropertyName.create("search-result-property", ItemResourceConstants.NAMESPACE);
-    private static final String COLUMN = "column";
+    private static final DavPropertyName SEARCH_RESULT_PROPERTY = DavPropertyName.create(JCR_QUERY_RESULT_LN, ItemResourceConstants.NAMESPACE);
-        Object propValue = property.getValue();
-        if (propValue instanceof List) {
-            for (Object o : ((List<?>) propValue)) {
-                if (o instanceof Element) {
-                    parseColumnElement((Element) o, colList, selList, valList, valueFactory);
-                }
-            }
-        } else if (propValue instanceof Element) {
-            parseColumnElement((Element)property.getValue(), colList, selList, valList, valueFactory);
-        } else {
-            throw new IllegalArgumentException("SearchResultProperty requires a list of 'dcr:column' xml elements.");
-        }
+
+        QueryUtil.parseResultPropertyValue(property.getValue(), colList, selList, valList, valueFactory);
-    private void parseColumnElement(Element columnElement,
-                                    List<String> columnNames,
-                                    List<String> selectorNames,
-                                    List<Value> values,
-                                    ValueFactory valueFactory)
-        throws ValueFormatException, RepositoryException {
-        if (!DomUtil.matches(columnElement, COLUMN, ItemResourceConstants.NAMESPACE)) {
-            log.debug("dcr:column element expected within search result.");
-            return;
-        }
-        columnNames.add(DomUtil.getChildText(columnElement, JCR_NAME.getName(), JCR_NAME.getNamespace()));
-        selectorNames.add(DomUtil.getChildText(columnElement, JCR_SELECTOR_NAME.getName(), JCR_SELECTOR_NAME.getNamespace()));
-
-        Value jcrValue;
-        Element valueElement = DomUtil.getChildElement(columnElement, JCR_VALUE.getName(), JCR_VALUE.getNamespace());
-        if (valueElement != null) {
-            String typeStr = DomUtil.getAttribute(valueElement, ATTR_VALUE_TYPE, ItemResourceConstants.NAMESPACE);
-            jcrValue = ValueHelper.deserialize(DomUtil.getText(valueElement),
-                    PropertyType.valueFromName(typeStr), true, valueFactory);
-        } else {
-            jcrValue = null;
-        }
-        values.add(jcrValue);
-    }
-
-            Element columnEl = DomUtil.addChildElement(elem, COLUMN, ItemResourceConstants.NAMESPACE);
+            Element columnEl = DomUtil.addChildElement(elem, XML_QUERY_RESULT_COLUMN, ItemResourceConstants.NAMESPACE);
