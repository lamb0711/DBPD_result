JCR-2836: Unclosed threads in Jackrabbit

Remove the use of ThreadLocal variables in PerQueryCache to avoid leaking memory in container environments.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1055117 13f79535-47bb-0310-9956-ffa450edef68

- * <code>PerQueryCache</code> implements a hash map on a per thread basis for
- * the purpose of caching results while a query is executed. When the query
- * finished the cache can be disposed by calling:
- * <code>PerQueryCache.getInstance().dispose()</code>.
+ * A cache of arbitrarily typed values used during the execution of a
+ * single query.
-     * Private constructor.
-     */
-    private PerQueryCache() {
-    }
-
-    /**
-     * The per thread cache instance.
-     */
-    private static final ThreadLocal<PerQueryCache> CACHE = new ThreadLocal<PerQueryCache>();
-
-    /**
-     * @return <code>PerQueryCache</code> for the current thread.
-     */
-    static PerQueryCache getInstance() {
-        PerQueryCache cache = CACHE.get();
-        if (cache == null) {
-            cache = new PerQueryCache();
-            CACHE.set(cache);
-        }
-        return cache;
-    }
-
-    /**
-    Object get(Class type, Object key) {
+    Object get(Class<?> type, Object key) {
-    Object put(Class type, Object key, Object value) {
+    Object put(Class<?> type, Object key, Object value) {
-     * Disposes the <code>PerQueryCache</code> for the current thread.
-     */
-    void dispose() {
-        CACHE.set(null);
-    }
-
-    /**
-        private final Class type;
+        private final Class<?> type;
-        private Key(Class type, Object key) {
+        private Key(Class<?> type, Object key) {
