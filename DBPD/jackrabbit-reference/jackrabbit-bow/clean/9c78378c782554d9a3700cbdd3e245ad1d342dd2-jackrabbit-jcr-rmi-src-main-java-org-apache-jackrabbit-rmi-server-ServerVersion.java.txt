JCR-3206 JSR-283 support for RMI / Implementation of the missing versioning parts

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1377571 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.rmi.remote.RemoteNode;
-//  This is only available after 0.16.2
-//    /** {@inheritDoc} */
-//    public RemoteVersionHistory getContainingHistory() throws RepositoryException {
-//        try {
-//            return getFactory().getRemoteVersionHistory(version.getContainingHistory());
-//        } catch (RepositoryException ex) {
-//            throw getRepositoryException(ex);
-//        }
-//    }
+    /** {@inheritDoc} */
+    public RemoteVersionHistory getContainingHistory() throws RepositoryException, RemoteException {
+        try {
+            return getFactory().getRemoteVersionHistory(version.getContainingHistory());
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
+    }
+    public RemoteVersion getLinearSuccessor() throws RepositoryException,
+    		RemoteException {
+        try {
+            Version linearSuccessor = version.getLinearSuccessor();
+            if (linearSuccessor == null) {
+                return null;
+            } else {
+                return getFactory().getRemoteVersion(linearSuccessor);
+            }
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
+    }
+    
+    /** {@inheritDoc} */
+    public RemoteVersion getLinearPredecessor() throws RepositoryException,
+    		RemoteException {
+        try {
+            Version linearPredecessor = version.getLinearPredecessor();
+            if (linearPredecessor == null) {
+                return null;
+            } else {
+                return getFactory().getRemoteVersion(linearPredecessor);
+            }
+        } catch (RepositoryException ex) {
+            throw getRepositoryException(ex);
+        }
+    }
+    
+    /** {@inheritDoc} */
-    public RemoteVersionHistory getContainingHistory() throws RepositoryException, RemoteException {
+    public RemoteNode getFrozenNode() throws RepositoryException,
+    		RemoteException {
-            return getFactory().getRemoteVersionHistory(version.getContainingHistory());
+            return getFactory().getRemoteNode(version.getFrozenNode());
