JCR-1745: Mark pending nodes in IndexingQueue directly in index

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@697873 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.lucene.index.Term;
+import org.apache.lucene.index.TermDocs;
+     * @throws IOException if an error occurs while reading from the index.
-    void initialize(MultiIndex index) {
+    void initialize(MultiIndex index) throws IOException {
+        // check index for nodes that need to be reindexed
+        CachingMultiIndexReader reader = index.getIndexReader();
+        try {
+            TermDocs tDocs = reader.termDocs(
+                    new Term(FieldNames.REINDEXING_REQUIRED, ""));
+            try {
+                while (tDocs.next()) {
+                    queueStore.addUUID(reader.document(tDocs.doc(),
+                            FieldSelectors.UUID).get(FieldNames.UUID));
+                }
+            } finally {
+                tDocs.close();
+            }
+        } finally {
+            reader.release();
+        }
+                log.debug("added node {}. New size of indexing queue: {}",
+                        uuid, new Integer(pendingDocuments.size()));
-                try {
-                    queueStore.removeUUID(uuids[i]);
-                } catch (IOException ex) {
-                    log.warn("Unable to remove node {} from indexing queue",
-                            uuids[i], ex);
-                }
+                queueStore.removeUUID(uuids[i]);
-     * @throws IOException if an error occurs removing the document from the
-     *                     queue.
-    public synchronized Document removeDocument(String uuid) throws IOException {
+    public synchronized Document removeDocument(String uuid) {
-     * @throws IOException an error occurs while adding the document to this
-     *                     queue.
-    public synchronized Document addDocument(Document doc) throws IOException {
+    public synchronized Document addDocument(Document doc) {
-     *
-     * @throws IOException if an error occurs while closing this queue.
-    public synchronized void close() throws IOException {
+    public synchronized void close() {
-     * Commits any pending changes to this queue store to disk.
-     *
-     * @throws IOException if an error occurs while writing pending changes to
-     *                     disk.
-     */
-    public synchronized void commit() throws IOException {
-        checkInitialized();
-        queueStore.commit();
-    }
-
-    /**
+
+    //----------------------------< testing only >------------------------------
+
+    /**
+     * <b>This method is for testing only!</b>
+     *
+     * @return the number of the currently pending documents.
+     */
+    synchronized int getNumPendingDocuments() {
+        return pendingDocuments.size();
+    }
