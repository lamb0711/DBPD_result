JCR-2528: spi2dav: ItemInfoCache causes failure of (Workspace)RestoreTest#testRestoreWithUUIDConflict and variants 

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@919107 13f79535-47bb-0310-9956-ffa450edef68

-            // Get item info from cache and use it if up to date
-            long generation = entry.getGeneration();
-            if (isUpToDate(cached, generation)) {
+            if (isUpToDate(cached, entry)) {
-                info = first(infos, cache, generation);
+                info = first(infos, cache, entry.getGeneration());
-                if (isOutdated(cached, generation)) {
+                if (isOutdated(cached, entry)) {
-            if (isUpToDate(cached, entry.getGeneration())) {
+            if (isUpToDate(cached, entry)) {
-                // Now we can check wheter the item info from the cache is up to date
-                long generation = entry.getGeneration();
-                if (isOutdated(cached, generation)) {
+                if (isOutdated(cached, entry)) {
-                    cache.put(info, generation);
+                    cache.put(info, entry.getGeneration());
-        if (isUpToDate(cached, parentEntry.getGeneration())) {
+        if (isUpToDate(cached, parentEntry)) {
+     * @throws RepositoryException
-    private static boolean isUpToDate(Entry<?> cacheEntry, long generation) {
-        return cacheEntry != null && cacheEntry.generation >= generation;
+    private static boolean isUpToDate(Entry<?> cacheEntry, HierarchyEntry entry) throws RepositoryException {
+        return cacheEntry != null &&
+            cacheEntry.generation >= entry.getGeneration() &&
+            isMatchingPath(cacheEntry.info, entry);
+     * @throws RepositoryException
-    private static boolean isOutdated(Entry<?> cacheEntry, long generation) {
-        return cacheEntry != null && cacheEntry.generation < generation;
+    private static boolean isOutdated(Entry<?> cacheEntry, HierarchyEntry entry) throws RepositoryException {
+        return cacheEntry != null &&
+            (cacheEntry.generation < entry.getGeneration() ||
+            !isMatchingPath(cacheEntry.info, entry));
+    }
+
+    private static boolean isMatchingPath(ItemInfo info, HierarchyEntry entry) throws RepositoryException {
+        Path infoPath = info.getPath();
+        Path wspPath = entry.getWorkspacePath();
+        return infoPath.equals(wspPath);
-        Path infoPath = info.getPath();
-        Path wspPath = entry.getWorkspacePath();
-        if (!infoPath.equals(wspPath)) {
+        if (!isMatchingPath(info, entry)) {
-            throw new ItemNotFoundException("HierarchyEntry " + infoPath + " does not match ItemInfo " + wspPath);
+            throw new ItemNotFoundException("HierarchyEntry " + entry.getWorkspacePath() + " does not match ItemInfo " + info.getPath());
