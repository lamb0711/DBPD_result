JCR-1775: Transaction-safe versioning

All calls to VersionManager's getVersionHistory and createVersionHistory followed this pattern:

    VersionHistory vh = manager.getVersionHistory(...);
    if (vh == null) {
        vh = manager.createVersionHistory(...);
    }

Simplified things by making getVersionHistory() automatically create the version history if it doesn't already exist. This simplifies the client code to:

    VersionHistory vh = manager.getVersionHistory(...);


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@702425 13f79535-47bb-0310-9956-ffa450edef68

-     * Returns the version history associated with the given node.
-     *
-     * @param session 
-     * @param node the node whose version history's id is to be returned.
-     * @return the version history associated with the given node
-     *         or <code>null</code> if that node doesn't have a version history.
-     * @throws RepositoryException if an error occurs
+     * {@inheritDoc}
+        NodeId id = null;
+
-                NodeId id =
-                    parent.getState().getChildNodeEntry(name, 1).getId();
-                return (VersionHistory) ((SessionImpl) session).getNodeById(id);
-            } else {
-                return null;
+                id = parent.getState().getChildNodeEntry(name, 1).getId();
+
+        if (id == null) {
+            id = createVersionHistory(session, node);
+        }
+
+        return (VersionHistory) ((SessionImpl) session).getNodeById(id);
+
+    /**
+     * Creates a new version history. This action is needed either when creating
+     * a new 'mix:versionable' node or when adding the 'mix:versionable' mixin
+     * to a node.
+     *
+     * @param node
+     * @return identifier of the new version history node
+     * @throws RepositoryException
+     * @see #getVersionHistory(Session, NodeState)
+     */
+    protected abstract NodeId createVersionHistory(
+            Session session, NodeState node) throws RepositoryException;
+
