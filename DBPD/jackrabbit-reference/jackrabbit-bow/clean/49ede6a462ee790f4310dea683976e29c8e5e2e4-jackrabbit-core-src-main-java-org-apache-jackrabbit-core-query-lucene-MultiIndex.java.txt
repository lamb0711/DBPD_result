JCR-1820: Ensure queries are not blocked during large updates

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@706649 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.commons.collections.iterators.EmptyIterator;
+import java.util.Collections;
-     * @param remove Iterator of <code>UUID</code>s that identify documents to
+     * @param remove collection of <code>UUID</code>s that identify documents to
-     * @param add    Iterator of <code>Document</code>s to add. Calls to
-     *               <code>next()</code> on this iterator may return
-     *               <code>null</code>, to indicate that a node could not be
-     *               indexed successfully.
+     * @param add    collection of <code>Document</code>s to add. Some of the
+     *               elements in this collection may be <code>null</code>, to
+     *               indicate that a node could not be indexed successfully.
-    synchronized void update(Iterator remove, Iterator add) throws IOException {
+    synchronized void update(Collection remove, Collection add) throws IOException {
+        // make sure a reader is available during long updates
+        if (add.size() > handler.getBufferSize()) {
+            getIndexReader().release();
+        }
+
-            while (remove.hasNext()) {
-                executeAndLog(new DeleteNode(transactionId, (UUID) remove.next()));
+            for (Iterator it = remove.iterator(); it.hasNext(); ) {
+                executeAndLog(new DeleteNode(transactionId, (UUID) it.next()));
-            while (add.hasNext()) {
-                Document doc = (Document) add.next();
+            for (Iterator it = add.iterator(); it.hasNext(); ) {
+                Document doc = (Document) it.next();
-        List add = Arrays.asList(new Document[]{doc});
-        update(EmptyIterator.INSTANCE, add.iterator());
+        update(Collections.EMPTY_LIST, Arrays.asList(new Document[]{doc}));
-        List remove = Arrays.asList(new UUID[]{uuid});
-        update(remove.iterator(), EmptyIterator.INSTANCE);
+        update(Arrays.asList(new UUID[]{uuid}), Collections.EMPTY_LIST);
-                update(finished.keySet().iterator(),
-                        finished.values().iterator());
+                update(finished.keySet(), finished.values());
