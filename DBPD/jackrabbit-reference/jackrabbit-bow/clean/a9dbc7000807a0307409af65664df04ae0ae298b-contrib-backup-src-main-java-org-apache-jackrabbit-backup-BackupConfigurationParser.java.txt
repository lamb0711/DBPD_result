JCR-442: Committed patch-060808-backup.txt from Nicolas.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@429606 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.config.PersistenceManagerConfig;
-import org.apache.jackrabbit.core.config.RepositoryConfigurationParser;
- * @author ntoper
+ * BackupConfigurationParser. Used to parse the Backup configuration XML file.
+ * Please look at the documentation for the format: http://wiki.apache.org/jackrabbit/BackupTool
-    
+    //TODO Add parse to get the name if a specific wsp has to be backupped/restored.
+    //TODO Add UUID choice
+
+
-    
- 
+
-     * Parses backup? configuration. Backup configuration uses the
-     * following format:
-     * <p>
-     * TODO comment. See wiki for format
+     * Parses backup/restore configuration file.
+     *
+     * Please look at the documentation for the format: http://wiki.apache.org/jackrabbit/BackupTool
+     *
-     * @param myFile 
-     * @param repoConfFile 
+     * @param myFile path and name of the XML configuration file (TODO delete XML argument and build it with myFile)
+     * @param repoConfFile: path and name of the repository configuration file 
-     * @throws IllegalAccessException 
-     * @throws InstantiationException 
-     * @throws ClassNotFoundException 
-     * @throws IOException 
+     * @throws IllegalAccessException
+     * @throws InstantiationException
+     * @throws ClassNotFoundException
+     * @throws IOException
-    public BackupConfig parseBackupConfig(InputSource xml, String myFile, String repoConfFile, String login, String password)
+    public BackupConfig parseBackupConfig(InputSource xml, String myFile, String repoConfFile)
-     //TODO refactor dependency between this method and BackupConfig
+
-    
+
-        
-        //Persistence Manager
-        PersistenceManagerConfig pmc = this.parsePersistenceManagerConfig(root);
-        
-        //Management of resources tag   
+
+        //Management of resources tag
-        Collection allResources = this.parseResourcesConfig(resources);     
-          
-        return new BackupConfig(pmc, path, allResources, myFile, repoConfFile, login, password);
+        Collection allResources = this.parseResourcesConfig(resources);
+
+        return new BackupConfig(path, allResources, myFile, repoConfFile);
-    
+
-     * TODO: to put in ConfigurationParser?
-     * 
-     * @param required indicates if the child element is required
-     * @return named children elements, or <code>null</code> if not found 
+     * @return named children elements, or <code>null</code> if not found
-    protected List getElements(Element parent, String name)  {
+    private List getElements(Element parent, String name)  {
-                
+
-        if (selected.size() == 0){    
+        if (selected.size() == 0){
-        else
-        {
+        else {
-    
-    
-    /*
-     * For now only support of all workspace backup. I think it is actually simpler to manage on the end-user side. Be careful the objects aren't usable yet
-     * 
+
+    /**
+     * For now only support of all workspace backup. I think it is actually simpler to manage on the end-user side.
+     * Be careful the objects aren't properly initialized yet. You need to call init (in BackupManager).
+     *
+     * @root root Element of the XML
+     * @throws ConfigurationException
+     * @throws ClassNotFoundException
+     * @throws InstantiationException
+     * @throws IllegalAccessException
+     * @return Collection of all resources to backup found in the file
-    private Collection parseResourcesConfig(Element root) throws ConfigurationException, ClassNotFoundException, InstantiationException, IllegalAccessException  {
+    private Collection parseResourcesConfig(Element root) 
+        throws ConfigurationException, ClassNotFoundException, InstantiationException, IllegalAccessException  {
-         *      get class and instantiate 
-         *      addResource to BackupManager
+         *      get class and instantiate
-        
+
-            String savingClass = resource.getAttribute(SAVING_CLASS);   
+            String savingClass = resource.getAttribute(SAVING_CLASS);
+
+            //Check we are not backupping/restoring a resource already backuped by BackupManager
+            if (savingClass.equals("org.apache.jackrabbit.backup.RepositoryBackup")  ||
+                        savingClass.equals("org.apache.jackrabbit.backup.BackupConfigBackup")) {
+                throw new IllegalAccessException();
+            }
+
-            objects.addElement( (Backup) c.newInstance());        
+            objects.addElement( (Backup) c.newInstance());
-         
-    }
-    
-    /**
-     * Parses the PersistenceManager config.
-     *
-     * @param parent parent of the <code>PersistenceManager</code> element
-     * @return persistence manager configuration
-     * @throws ConfigurationException if the configuration is broken
-     */
-    protected PersistenceManagerConfig parsePersistenceManagerConfig(
-            Element parent) throws ConfigurationException {
-        return new PersistenceManagerConfig(
-                parseBeanConfig(parent, RepositoryConfigurationParser.PERSISTENCE_MANAGER_ELEMENT));
