JCR-3144 : JSR 283 Workspace Management

add support for 

- Workspace.createWorkspace(String)
- Workspace.deleteWorkspace(String)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1200363 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.util.Text;
+import javax.jcr.Workspace;
+    //--------------------------------------------------------< DavResource >---
-        StringBuffer sb = new StringBuffer(DavResource.METHODS);
+        StringBuilder sb = new StringBuilder(DavResource.METHODS);
+     * @see org.apache.jackrabbit.webdav.DavResource#getModificationTime()
+     * @see DavResource#spool(org.apache.jackrabbit.webdav.io.OutputContext)
-            StringBuffer sb = new StringBuffer();
+            StringBuilder sb = new StringBuilder();
-     * Throws exception: 403 Forbidden.
+     * Calls {@link Workspace#deleteWorkspace(String)} for the workspace with
+     * the name as indicated by the specified member.
+     *
-        throw new DavException(DavServletResponse.SC_FORBIDDEN);
+        Workspace wsp = getRepositorySession().getWorkspace();
+        String name = Text.getName(member.getResourcePath());
+        try {
+            wsp.deleteWorkspace(name);
+        } catch (RepositoryException e) {
+            throw new JcrDavException(e);
+        }
+    }
+
+    //-----------------------------------------------------< DeltaVResource >---
+    /**
+     * @see DeltaVResource#addWorkspace(org.apache.jackrabbit.webdav.DavResource)
+     */
+    @Override
+    public void addWorkspace(DavResource workspace) throws DavException {
+        Workspace wsp = getRepositorySession().getWorkspace();
+        String name = workspace.getDisplayName();
+        try {
+            wsp.createWorkspace(name);
+        } catch (RepositoryException e) {
+            throw new JcrDavException(e);
+        }
