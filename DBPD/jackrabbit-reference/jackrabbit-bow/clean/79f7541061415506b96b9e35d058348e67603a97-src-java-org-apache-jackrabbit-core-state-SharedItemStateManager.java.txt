Added ItemStateManager#hasNodeReferences()
Added check for targets of modified node references in XAResource#prepare
Removed duplicated checkLock() in NodeImpl#addMixin


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@164071 13f79535-47bb-0310-9956-ffa450edef68

-        // create new one
-        return new NodeReferences(id);
+
+        // throw
+        throw new NoSuchItemStateException(id.toString());
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public boolean hasNodeReferences(NodeReferencesId id) {
+
+        // check persistence manager
+        try {
+            if (persistMgr.exists(id)) {
+                return true;
+            }
+        } catch (ItemStateException e) {
+            // ignore
+        }
+        // check virtual providers
+        for (int i = 0; i < virtualProviders.length; i++) {
+            if (virtualProviders[i].hasNodeReferences(id)) {
+                return true;
+            }
+        }
+        return false;
+     * Check targets of modified node references exist.
+     * @param log change log
+     * @throws ItemStateException if some target was not found
+     */
+    protected void checkTargetsExist(ChangeLog log) throws ItemStateException {
+        Iterator iter = log.modifiedRefs();
+        while (iter.hasNext()) {
+            NodeReferences refs = (NodeReferences) iter.next();
+            NodeId id = new NodeId(refs.getUUID());
+
+            for (int i = 0; i < virtualProviders.length; i++) {
+                VirtualItemStateProvider provider = virtualProviders[i];
+                if (provider.hasItemState(id)) {
+                    refs = null;
+                    break;
+                }
+            }
+            if (refs != null && refs.hasReferences()) {
+                if (!log.has(id) && !hasItemState(id)) {
+                    String msg = "Target node " + id
+                            + " of REFERENCE property does not exist";
+                    throw new ItemStateException(msg);
+                }
+            }
+        }
+    }
+
+    /**
-                    try {
-                        if (local.get(id) == null && !hasItemState(id)) {
-                            throw new NoSuchItemStateException();
-                        }
-                    } catch (NoSuchItemStateException e) {
+                    if (!local.has(id) && !hasItemState(id)) {
