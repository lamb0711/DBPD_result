JCR-2625: spi2davex: reduce memory footprint of Node/PropertyInfoImpl

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@945164 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.ArrayList;
-import java.util.List;
-    private final boolean isMultiValued;
+    private final boolean multiValued;
-    private List<QValue> values = new ArrayList<QValue>();
+    private QValue[] values = QValue.EMPTY_ARRAY;
-                            QValue singleValue) throws RepositoryException {
+                            QValue value) throws RepositoryException {
-        isMultiValued = false;
-        values.add(singleValue);
+        multiValued = false;
+        values = new QValue[]{value};
-    public PropertyInfoImpl(PropertyId id, Path path, int propertyType) throws RepositoryException {
+    public PropertyInfoImpl(PropertyId id, Path path, int propertyType, QValue[] values) throws RepositoryException {
-        isMultiValued = true;
+        this.values = values;
+        multiValued = true;
-        return isMultiValued;
+        return multiValued;
-        return values.toArray(new QValue[values.size()]);
+        return values;
-    int numberOfValues() {
-        return values.size();
-    }
-
-    void addValue(QValue value) throws RepositoryException {
-        if (values == null) {
-            values = new ArrayList<QValue>();
-        } else if (!isMultiValued && !values.isEmpty()) {
-            throw new RepositoryException("Attempt to add multiple values to a single valued PropertyInfo");
-        }
-        values.add(value);
-    }
-
-    void setType(int propertyType) {
-        this.propertyType = propertyType;
-    }
-
-        if (values.size() == 0 && propertyType == PropertyType.UNDEFINED) {
-            throw new RepositoryException("Incomplete PropertyInfo: missing type of multivalued property.");
+        if (propertyType == PropertyType.UNDEFINED) {
+            throw new RepositoryException("Incomplete PropertyInfo: missing type of property.");
