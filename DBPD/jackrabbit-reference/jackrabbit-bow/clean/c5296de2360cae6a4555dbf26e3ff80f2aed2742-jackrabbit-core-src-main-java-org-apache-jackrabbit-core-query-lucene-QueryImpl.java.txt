JCR-1104: JSR 283 support
- multiple selectors (work in progress)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@633843 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.commons.name.NameFactoryImpl;
-import org.apache.jackrabbit.spi.commons.query.PathQueryNode;
-     * Represents a query that selects all nodes. E.g. in XPath: //*
+     * The default selector name 's'.
-    protected final QueryRootNode allNodesQueryNode;
+    public static final Name DEFAULT_SELECTOR_NAME = NameFactoryImpl.getInstance().create("", "s");
-        allNodesQueryNode = createMatchAllNodesQuery(factory);
-    //----------------------------< internal >----------------------------------
-
-     * Creates an abstract query tree that matches all nodes. XPath example:
-     * //element(*, nt:base)
-     *
-     * @param factory the query node factory.
-     * @return the abstract query tree.
+     * {@inheritDoc}
-    private static QueryRootNode createMatchAllNodesQuery(
-            QueryNodeFactory factory) {
-        QueryRootNode allNodesQueryNode = factory.createQueryRootNode();
-        PathQueryNode pathNode = factory.createPathQueryNode(allNodesQueryNode);
-        LocationStepQueryNode lsNode = factory.createLocationStepQueryNode(pathNode);
-        lsNode.setNameTest(null);
-        lsNode.setIncludeDescendants(true);
-        pathNode.addPathStep(lsNode);
-        pathNode.setAbsolute(true);
-        allNodesQueryNode.setLocationNode(pathNode);
-        return allNodesQueryNode;
+    public Name[] getSelectorNames() {
+        return new Name[]{DEFAULT_SELECTOR_NAME};
