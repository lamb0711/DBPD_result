JCR-249, JCR-253

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@331281 13f79535-47bb-0310-9956-ffa450edef68

+    /** initial param name for the rmi host */
+    public final static String INIT_PARAM_RMI_HOST = "rmi-host";
+
+    /** initial param name for the rmi uri */
+    public final static String INIT_PARAM_RMI_URI = "rmi-uri";
+
-    /** the rmi uri, in the form of  '//:${rmi-port}/${repository-name}' */
+    /** the rmi uri, in the form of  '//${rmi-host}:${rmi-port}/${repository-name}' */
+        String rmiHost = getServletConfig().getInitParameter(INIT_PARAM_RMI_HOST);
+        rmiURI = getServletConfig().getInitParameter(INIT_PARAM_RMI_URI);
+        if (rmiPortStr == null && rmiHost == null && rmiURI == null) {
+            return;
+        }
+        int rmiPort = Registry.REGISTRY_PORT;
-	    int rmiPort = 0;
-		log.warn("Invalid port in rmi-port param: " + e);
+                log.warn("Invalid port in rmi-port param: " + e + ". using default port.");
+            }
-	    if (rmiPort == 0) {
-		rmiPort = Registry.REGISTRY_PORT;
+        if (rmiHost == null) {
+            rmiHost = "";
-		Class clazz = Class.forName("org.apache.jackrabbit.j2ee.RMIRemoteFactoryDelegater");
+            Class clazz = Class.forName(getRemoteFactoryDelegaterClass());
-		rmiURI = "//:" + rmiPort + "/" + repositoryName;
+            if (rmiURI == null) {
+                rmiURI = "//" + rmiHost + ":" + rmiPort + "/" + repositoryName;
+            }
+
+    /**
+     * Return the fully qualified name of the class providing the remote
+     * repository. The class whose name is returned must implement the
+     * {@link RemoteFactoryDelegater} interface.
+     */
+    protected String getRemoteFactoryDelegaterClass() {
+        return "org.apache.jackrabbit.j2ee.RMIRemoteFactoryDelegater";
