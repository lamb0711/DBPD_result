JCR-3718 Inconsistent Principal Validation between API and Import behavior

- make principal check based on ACLProvider configuration
- adding new ACLProvider configuration parameter: "allow-unknown-principals", default: "false"
- make missing-principal bypass in AccessControlImporter based on configuration
- adding new AccessControlImporter configuration parameter: "importBehavior", default: "bestEffort"


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1560783 13f79535-47bb-0310-9956-ffa450edef68

+     * controls if unknown principals can be used in access control entries.
+     */
+    private final boolean allowUnknownPrincipals;
+
+    /**
-                NamePathResolver resolver) throws NamespaceException {
+                NamePathResolver resolver, boolean allowUnknownPrincipals) throws NamespaceException {
+        this.allowUnknownPrincipals = allowUnknownPrincipals;
-    ACLTemplate(NodeImpl aclNode, String path) throws RepositoryException {
+    ACLTemplate(NodeImpl aclNode, String path, boolean allowUnknownPrincipals) throws RepositoryException {
+        this.allowUnknownPrincipals = allowUnknownPrincipals;
-            throw new AccessControlException("Principal " + principal.getName() + " does not exist.");
+            if (!allowUnknownPrincipals) {
+                throw new AccessControlException("Principal " + principal.getName() + " does not exist.");
+            }
+            log.debug("Consider fallback principal as valid: {}", principal.getName());
