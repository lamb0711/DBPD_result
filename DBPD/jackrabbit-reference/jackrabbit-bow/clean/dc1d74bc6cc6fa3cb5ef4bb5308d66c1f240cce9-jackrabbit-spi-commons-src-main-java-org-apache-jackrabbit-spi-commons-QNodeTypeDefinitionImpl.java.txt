JCR-1543: add QNodeTypeDefinition.getSupportedMixins(), use it for JCR2SPI's Node.canAddMixin.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@649548 13f79535-47bb-0310-9956-ffa450edef68

+     * The names of the supported mixins on this node type (or <code>null</code>)
+     */
+    private final Name[] supportedMixins;
+
+    /**
+     * @deprecated use {@link #QNodeTypeDefinitionImpl(Name, Name[], Name[], boolean, boolean, Name, QPropertyDefinition[], QNodeDefinition[])}
+        this.supportedMixins = null;
+        this.isMixin = isMixin;
+        this.hasOrderableChildNodes = hasOrderableChildNodes;
+        this.primaryItemName = primaryItemName;
+        this.propertyDefs = getSerializablePropertyDefs(declaredPropDefs);
+        this.childNodeDefs = getSerializableNodeDefs(declaredNodeDefs);
+    }
+
+    /**
+     * Creates a new serializable qualified node type definition.
+     *
+     * @param name                   the name of the node type
+     * @param supertypes             the names of the supertypes
+     * @param supportedMixins        the names of supported mixins (or <code>null</code>)
+     * @param isMixin                if this is a mixin node type
+     * @param hasOrderableChildNodes if this node type has orderable child
+     *                               nodes.
+     * @param primaryItemName        the name of the primary item, or
+     *                               <code>null</code>.
+     * @param declaredPropDefs       the declared property definitions.
+     * @param declaredNodeDefs       the declared child node definitions.
+     */
+    public QNodeTypeDefinitionImpl(Name name,
+                                   Name[] supertypes,
+                                   Name[] supportedMixins,
+                                   boolean isMixin,
+                                   boolean hasOrderableChildNodes,
+                                   Name primaryItemName,
+                                   QPropertyDefinition[] declaredPropDefs,
+                                   QNodeDefinition[] declaredNodeDefs) {
+        this.name = name;
+        this.supertypes = supertypes;
+        this.supportedMixins = supportedMixins;
-
+    
+    public Name[] getSupportedMixinTypes() {
+        if (supportedMixins == null) {
+            return null;
+        }
+        else {
+            Name[] mixins = new Name[supportedMixins.length];
+            System.arraycopy(supportedMixins, 0, mixins, 0, supportedMixins.length);
+            return mixins;
+        }
+    }
+    
