JCR-2113 : JSR 283 Access Control Management (patch provided by alfusainey jallow, commit with minor modifications and some TODOs (in particular testing).

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1646435 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.jcr2spi.hierarchy.NodeEntry;
+import org.apache.jackrabbit.jcr2spi.hierarchy.PropertyEntry;
+import org.apache.jackrabbit.jcr2spi.operation.SetTree;
+import org.apache.jackrabbit.jcr2spi.state.PropertyState;
+import org.apache.jackrabbit.spi.Tree;
+import org.apache.jackrabbit.spi.commons.name.NameConstants;
+         * @see OperationVisitor#visit(org.apache.jackrabbit.jcr2spi.operation.SetTree)
+         */
+        public void visit(SetTree operation) throws RepositoryException {
+            NodeState treeState = operation.getTreeState();
+            Tree tree = service.createTree(sessionInfo, batch, treeState.getName(), treeState.getNodeTypeName(), treeState.getUniqueID());
+            populateTree(tree, treeState.getNodeEntry());
+            batch.setTree(operation.getParentId(), tree);
+        }
+
+        private void populateTree(Tree tree, NodeEntry nodeEntry) throws RepositoryException {
+            Iterator<PropertyEntry> pEntries = nodeEntry.getPropertyEntries();
+            while (pEntries.hasNext()) {
+                PropertyState ps = pEntries.next().getPropertyState();
+                if (!NameConstants.JCR_PRIMARYTYPE.equals(ps.getName()) && !NameConstants.JCR_UUID.equals(ps.getName())) {
+                    if (ps.isMultiValued()) {
+                        tree.addProperty(ps.getName(), ps.getType(), ps.getValues());
+                    } else {
+                        tree.addProperty(ps.getName(), ps.getType(), ps.getValue());
+                    }
+                }
+            }
+
+            Iterator<NodeEntry> nEntries = nodeEntry.getNodeEntries();
+            while (nEntries.hasNext()) {
+                NodeEntry child = nEntries.next();
+                NodeState childState = child.getNodeState();
+                Tree childTree = tree.addChild(childState.getName(), childState.getNodeTypeName(), childState.getUniqueID());
+                populateTree(childTree, child);
+            }
+        }
+
+        /**
