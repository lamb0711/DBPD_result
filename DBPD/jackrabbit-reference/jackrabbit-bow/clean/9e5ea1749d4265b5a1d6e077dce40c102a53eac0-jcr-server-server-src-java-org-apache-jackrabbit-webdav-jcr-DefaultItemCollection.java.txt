JCR-337 - Remove jcr dependency from dav-library
JCR-343 - Report#init limits the Report interface to DeltaV compliant resources
JCR-340 - ValuesProperty missing property type information
JCR-342 - DavResource#getDavSession() missing
JCR-344 - DeltaVResource lists MKWORKSPACE in the method constant.
JCR-345 - DavException does not allow to specify an exception cause

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@385540 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.webdav.DavSession;
-    protected DefaultItemCollection(DavResourceLocator locator, DavSession session,
+    protected DefaultItemCollection(DavResourceLocator locator,
+                                    JcrDavSession session,
-        initProperties();
+            initProperties();
-            String itemPath = getLocator().getJcrPath();
-            String memberName = getItemName(resource.getLocator().getJcrPath());
+            String itemPath = getLocator().getRepositoryPath();
+            String memberName = getItemName(resource.getLocator().getRepositoryPath());
-	if (exists()) {
-	    try {
+        if (exists()) {
+            try {
-		NodeIterator it = n.getNodes();
-		while (it.hasNext()) {
+                NodeIterator it = n.getNodes();
+                while (it.hasNext()) {
-		    memberList.add(createResourceFromLocator(loc));
-		}
+                    memberList.add(createResourceFromLocator(loc));
+                }
-	    } catch (RepositoryException e) {
-		// ignore
+            } catch (RepositoryException e) {
+                // ignore
-	    } catch (DavException e) {
+            } catch (DavException e) {
-	}
-	return new DavResourceIteratorImpl(memberList);
+        }
+        return new DavResourceIteratorImpl(memberList);
-            String itemPath = member.getLocator().getJcrPath();
+            String itemPath = member.getLocator().getRepositoryPath();
-     * 
+     *
-                getSession().getRepositorySession().exportSystemView(item.getPath(), out, false, true);
+                getRepositorySession().exportSystemView(item.getPath(), out, false, true);
-		if (n.hasProperty(JcrConstants.JCR_LASTMODIFIED)) {
+                if (n.hasProperty(JcrConstants.JCR_LASTMODIFIED)) {
-		}
-	    } catch (RepositoryException e) {
-		log.warn("Error while accessing jcr:lastModified property");
-	    }
+                }
+            } catch (RepositoryException e) {
+                log.warn("Error while accessing jcr:lastModified property");
+            }
-                            DavConstants.creationDateFormat.format(new Date(creationTime))));
+                        DavConstants.creationDateFormat.format(new Date(creationTime))));
-	    try {
+            try {
-}
+}
