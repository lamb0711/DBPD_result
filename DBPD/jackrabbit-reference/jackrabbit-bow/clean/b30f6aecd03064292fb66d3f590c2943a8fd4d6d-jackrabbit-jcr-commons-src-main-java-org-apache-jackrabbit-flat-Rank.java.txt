JCR-2698: Consolidate type safe wrappers for commons-collection classes

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@982181 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.commons.collections.iterators.ArrayIterator;
-import org.apache.commons.collections.iterators.EmptyIterator;
+import static org.apache.jackrabbit.commons.iterator.Iterators.arrayIterator;
+import static org.apache.jackrabbit.commons.iterator.Iterators.empty;
-    @SuppressWarnings("unchecked")
-        Object array = Array.newInstance(componentType, values.size());
-        this.values = values.toArray((T[]) array);
+        this.values = toArray(values, componentType);
-    @SuppressWarnings("unchecked")
-            this.values = (T[]) Array.newInstance(componentType, count);
+            this.values = createArray(count, componentType);
-            Object array = Array.newInstance(componentType, l.size());
-            this.values = l.toArray((T[]) array);
+            this.values = toArray(l, componentType);
-    @SuppressWarnings("unchecked")
-    private static <T> Iterator<T> arrayIterator(T[] values, int from, int to) {
-        return new ArrayIterator(values, from, to);
+    // -----------------------------------------------------< utility >---
+
+    private static <S> S[] toArray(Collection<S> collection, Class<S> componentType) {
+        return collection.toArray(createArray(collection.size(), componentType));
-    private Iterator<T> empty() {
-        return EmptyIterator.INSTANCE;
+    private static <S> S[] createArray(int size, Class<S> componentType) {
+        return (S[]) Array.newInstance(componentType, size);
