JCR-699: No need for path formatting when checking for excluded events.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@498034 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.NoPrefixDeclaredException;
+import org.apache.jackrabbit.name.MalformedPathException;
-import org.apache.jackrabbit.name.PathFormat;
+    /**
+     * Checks if the given event should be excluded based on the
+     * {@link #excludePath} setting.
+     *
+     * @param event observation event
+     * @return <code>true</code> if the event should be excluded,
+     *         <code>false</code> otherwise
+     */
+    private boolean isExcluded(EventImpl event) {
+        try {
+            return excludePath != null
+                && excludePath.isAncestorOf(event.getQPath());
+        } catch (MalformedPathException ex) {
+            log.error("Error filtering events.", ex);
+            return false;
+        } catch (RepositoryException ex) {
+            log.error("Error filtering events.", ex);
+            return false;
+        }
+
+    }
+
-        String exclude = "";
-        if (excludePath != null) {
-            try {
-                exclude = PathFormat.format(excludePath, nsReg);
-            } catch (NoPrefixDeclaredException e) {
-                log.error("Error filtering events.", e);
-            }
-        }
-
-            try {
-                if (excludePath != null && e.getPath().startsWith(exclude)) {
-                    continue;
+            if (!isExcluded(e)) {
+                long type = e.getType();
+                if (type == Event.NODE_ADDED) {
+                    addedNodes.put(e.getChildId(), e);
+                } else if (type == Event.NODE_REMOVED) {
+                    removedNodes.add(e.getChildId());
+                } else {
+                    propEvents.add(e);
-            } catch (RepositoryException ex) {
-                log.error("Error filtering events.", ex);
-            }
-            long type = e.getType();
-            if (type == Event.NODE_ADDED) {
-                addedNodes.put(e.getChildId(), e);
-            } else if (type == Event.NODE_REMOVED) {
-                removedNodes.add(e.getChildId());
-            } else {
-                propEvents.add(e);
