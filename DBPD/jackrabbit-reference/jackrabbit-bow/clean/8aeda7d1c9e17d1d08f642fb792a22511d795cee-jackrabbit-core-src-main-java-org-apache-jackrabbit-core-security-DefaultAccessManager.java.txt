JCR-2887 : Split PrivilegeRegistry in a per-session manager instance and a repository level registry [work in progress]
JCR-2774 : Access control for repository level API operations


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1177668 13f79535-47bb-0310-9956-ffa450edef68

+     * @see AccessManager#checkRepositoryPermission(int)
+     */
+    public void checkRepositoryPermission(int permissions) throws AccessDeniedException, RepositoryException {
+        checkInitialized();
+        if (!compiledPermissions.grants(null, permissions)) {
+            throw new AccessDeniedException("Access denied.");
+        }
+    }
+
+    /**
-            Path p = resolver.getQPath(absPath);
+            Path p = getPath(absPath);
-        Set<Privilege> privs = compiledPermissions.getPrivilegeSet(resolver.getQPath(absPath));
+        Set<Privilege> privs = compiledPermissions.getPrivilegeSet(getPath(absPath));
-            Path p = resolver.getQPath(absPath);
+            Path p = getPath(absPath);
-            Set<Privilege> privs = perms.getPrivilegeSet(resolver.getQPath(absPath));
+            Set<Privilege> privs = perms.getPrivilegeSet(getPath(absPath));
-        Path p = resolver.getQPath(absPath);
-        if (!p.isAbsolute()) {
-            throw new RepositoryException("Absolute path expected.");
-        }
-        if (hierMgr.resolveNodePath(p) == null) {
-            throw new PathNotFoundException("No such node " + absPath);
+        Path p = getPath(absPath);
+        if (p != null) {
+            if (!p.isAbsolute()) {
+                throw new RepositoryException("Absolute path expected.");
+            }
+            if (hierMgr.resolveNodePath(p) == null) {
+                throw new PathNotFoundException("No such node " + absPath);
+            }
-        Path p = resolver.getQPath(absPath);
+        Path p = getPath(absPath);
-        return resolver.getQPath(absPath);
+        return (absPath == null) ? null : resolver.getQPath(absPath);
