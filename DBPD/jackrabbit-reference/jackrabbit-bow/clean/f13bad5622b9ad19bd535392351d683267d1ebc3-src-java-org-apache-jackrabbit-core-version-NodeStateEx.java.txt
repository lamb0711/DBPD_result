more NodeState optimizations: 
- changed get/setPropertyNames from List to Set since the spec does not
  mandate that properties have to maintain order


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@202166 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Set;
+import java.util.Iterator;
-        List list = nodeState.getPropertyNames();
-        PropertyState[] props = new PropertyState[list.size()];
-        for (int i = 0; i < list.size(); i++) {
-            QName propName = (QName) list.get(i);
+        Set set = nodeState.getPropertyNames();
+        PropertyState[] props = new PropertyState[set.size()];
+        int i = 0;
+        for (Iterator iter = set.iterator(); iter.hasNext();) {
+            QName propName = (QName) iter.next();
-            props[i] = (PropertyState) stateMgr.getItemState(propId);
+            props[i++] = (PropertyState) stateMgr.getItemState(propId);
-            List props = state.getPropertyNames();
-            for (int i = 0; i < props.size(); i++) {
-                QName propName = (QName) props.get(i);
+            Set props = state.getPropertyNames();
+            for (Iterator iter = props.iterator(); iter.hasNext();) {
+                QName propName = (QName) iter.next();
-            List props = state.getPropertyNames();
-            for (int i = 0; i < props.size(); i++) {
-                QName propName = (QName) props.get(i);
+            Set props = state.getPropertyNames();
+            for (Iterator iter = props.iterator(); iter.hasNext();) {
+                QName propName = (QName) iter.next();
