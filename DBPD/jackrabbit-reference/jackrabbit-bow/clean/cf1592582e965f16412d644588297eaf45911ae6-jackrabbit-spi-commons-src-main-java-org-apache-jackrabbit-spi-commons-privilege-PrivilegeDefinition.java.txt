JCR-2887 : Split PrivilegeRegistry in a per-session manager instance and a repository level registry [work in progress]

- clustering support
- move definition & def-reader/writer to spi-commons

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1095338 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.jackrabbit.commons.privilege;
+package org.apache.jackrabbit.spi.commons.privilege;
-import java.util.Arrays;
+import org.apache.jackrabbit.spi.Name;
+
+import java.util.Collections;
+import java.util.Set;
-    private final String name;
+    private final Name name;
-    private final String[] declaredAggregateNames;
+    private final Set<Name> declaredAggregateNames;
-    public PrivilegeDefinition(String name, boolean isAbstract, String[] declaredAggregateNames) {
+    public PrivilegeDefinition(Name name, boolean isAbstract, Set<Name> declaredAggregateNames) {
-        this.declaredAggregateNames = declaredAggregateNames == null ? new String[0] : declaredAggregateNames;
+        this.declaredAggregateNames = declaredAggregateNames == null ? Collections.<Name>emptySet() : Collections.unmodifiableSet(declaredAggregateNames);
-    public String getName() {
+    public Name getName() {
-    public String[] getDeclaredAggregateNames() {
+    public Set<Name> getDeclaredAggregateNames() {
-        if (!Arrays.equals(declaredAggregateNames, that.declaredAggregateNames)) return false;
+        return declaredAggregateNames.equals(that.declaredAggregateNames);
-        return true;
-        result = 31 * result + (declaredAggregateNames != null ? Arrays.hashCode(declaredAggregateNames) : 0);
+        result = 31 * result + (declaredAggregateNames != null ? declaredAggregateNames.hashCode() : 0);
