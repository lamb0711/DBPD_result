minor improvement: remove unused instance fields
minor improvement: let TransientISFactory listen to states created by the WorkspaceItemStateFactory
JCR-1004 SPI: Add RepositoryService.getQNodeTypeDefinition 
         >> modify to RepositoryService.getQNodeTypeDefinitions(QName)
         >> adjust SPI implementations
         >> change NodeTypeRegistry to load definitions upon demand.



git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@555209 13f79535-47bb-0310-9956-ffa450edef68

-    public QNodeTypeDefinition[] getQNodeTypeDefinitions(RemoteSessionInfo sessionInfo)
+    public RemoteIterator getQNodeTypeDefinitions(RemoteSessionInfo sessionInfo)
-        List nts = new ArrayList();
-        while (it.hasNext()) {
-            QNodeTypeDefinition nt = (QNodeTypeDefinition) it.next();
-            if (nt instanceof Serializable) {
-                nts.add(nt);
-            } else {
-                nts.add(new QNodeTypeDefinitionImpl(nt));
-            }
-        }
-        return (QNodeTypeDefinition[]) nts.toArray(new QNodeTypeDefinition[nts.size()]);
+        return getQNodeTypeDefinitionIterator(it);
-    public QNodeTypeDefinition getQNodeTypeDefinition(RemoteSessionInfo sessionInfo, QName ntName)
+    public RemoteIterator getQNodeTypeDefinitions(RemoteSessionInfo sessionInfo,
+                                                 QName[] ntNames)
-        QNodeTypeDefinition ntDef = service.getQNodeTypeDefinition(getSessionInfo(sessionInfo), ntName);
-        if (ntDef instanceof Serializable) {
-            return ntDef;
-        } else {
-            return new QNodeTypeDefinitionImpl(ntDef);
-        }
+        Iterator it = service.getQNodeTypeDefinitions(getSessionInfo(sessionInfo), ntNames);
+        return getQNodeTypeDefinitionIterator(it);
-    //---------------------------< internal >-----------------------------------
+    //---------------------------< internal >-----------------------------------
+
+    /**
+     *
+     * @param it
+     * @return
+     * @throws RemoteException
+     */
+    private RemoteIterator getQNodeTypeDefinitionIterator(Iterator it) throws RemoteException {
+        List nts = new ArrayList();
+        while (it.hasNext()) {
+            QNodeTypeDefinition nt = (QNodeTypeDefinition) it.next();
+            if (nt instanceof Serializable) {
+                nts.add(nt);
+            } else {
+                nts.add(new QNodeTypeDefinitionImpl(nt));
+            }
+        }
+        return new ServerIterator(nts.iterator(), DEFAULT_BUFFER_SIZE);
+    }
