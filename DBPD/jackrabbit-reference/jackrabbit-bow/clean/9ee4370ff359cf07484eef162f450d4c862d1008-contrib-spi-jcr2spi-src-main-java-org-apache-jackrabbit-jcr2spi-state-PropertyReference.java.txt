SPI
- replace ChildNodeEntryImpl with new implementations
- CachingItemStateManager now uses ItemStateFactory
- WorkspaceManager implements ItemStateFactory
- Retrieving an ItemState now forces loading all ancestors by design
- NodeState does not maintain indexes of child node entries anymore. They are calculated on demand.
- ItemStateFactory methods do not require parent NodeState anymore. The parent NodeState is retrieved using an ItemStateManager. Which in turn may lead to recursive retrieval of ancestors if necessary.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@426536 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.IdFactory;
+import org.apache.jackrabbit.spi.PropertyId;
+     * IdFactory to create an ItemId based on the parent NodeId
+     */
+    private final IdFactory idFactory;
+
+    /**
-    public PropertyReference(NodeState parent, QName name) {
+    public PropertyReference(NodeState parent, QName name, IdFactory idFactory) {
+        this.idFactory = idFactory;
-     * @see ChildItemReference#doResolve(ItemStateFactory)
+     * @see ChildItemReference#doResolve(ItemStateFactory, ItemStateManager)
-    protected ItemState doResolve(ItemStateFactory isf)
+    protected ItemState doResolve(ItemStateFactory isf, ItemStateManager ism)
-        return isf.createPropertyState(parent, name);
+        PropertyId id = idFactory.createPropertyId(parent.getNodeId(), name);
+        return isf.createPropertyState(id, ism);
