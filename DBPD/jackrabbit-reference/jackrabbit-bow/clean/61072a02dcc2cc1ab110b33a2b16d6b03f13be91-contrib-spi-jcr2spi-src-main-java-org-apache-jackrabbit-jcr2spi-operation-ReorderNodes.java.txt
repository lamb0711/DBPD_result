- Replace NodeState.getChildNodeEntry(NodeId) with NodeState.getChildNodeEntry(NodeState)
- Replace NodeState.reorderChildNodeEntries(NodeId, NodeId) with NodeState.reorderChildNodeEntries(NodeState, NodeState)
- ReorderNodes operation now works with NodeStates instead of NodeIds.
- Simplify NodeImpl.getQName()

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@431904 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.NodeId;
+import org.apache.jackrabbit.jcr2spi.state.ItemStateException;
+import org.apache.jackrabbit.jcr2spi.state.NoSuchItemStateException;
-    private final NodeId insertId;
-    private final NodeId beforeId;
+    private final NodeState insert;
+    private final NodeState before;
-    private ReorderNodes(NodeState parentState, NodeId insertId, NodeId beforeId) {
+    private ReorderNodes(NodeState parentState, NodeState insert, NodeState before) {
-        this.insertId = insertId;
-        this.beforeId = beforeId;
+        this.insert = insert;
+        this.before = before;
+        addAffectedItemState(insert);
+        if (before != null) {
+            addAffectedItemState(before);
+        }
-    public NodeId getInsertNodeId() {
-        return insertId;
+    public NodeState getInsertNode() {
+        return insert;
-    public NodeId getBeforeNodeId() {
-        return beforeId;
+    public NodeState getBeforeNode() {
+        return before;
-                                   Path.PathElement beforeName) {
-        NodeId insertId = parentState.getChildNodeEntry(srcName.getName(), srcName.getNormalizedIndex()).getId();
-        NodeId beforeId = (beforeName == null) ? null : parentState.getChildNodeEntry(beforeName.getName(), beforeName.getNormalizedIndex()).getId();
-        Operation op = new ReorderNodes(parentState, insertId, beforeId);
+                                   Path.PathElement beforeName) throws NoSuchItemStateException, ItemStateException {
+        NodeState insert = parentState.getChildNodeEntry(srcName.getName(), srcName.getNormalizedIndex()).getNodeState();
+        NodeState before = (beforeName == null) ? null : parentState.getChildNodeEntry(beforeName.getName(), beforeName.getNormalizedIndex()).getNodeState();
+        Operation op = new ReorderNodes(parentState, insert, before);
