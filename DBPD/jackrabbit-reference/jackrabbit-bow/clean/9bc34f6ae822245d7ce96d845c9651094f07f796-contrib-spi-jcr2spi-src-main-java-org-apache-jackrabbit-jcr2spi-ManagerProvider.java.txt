- new interface EffectiveNodeTypeProvider
- new interface ItemDefinitionProvider
- limit access to NodeTypeRegistry and simplify the NodeTypeRegistry
  interface.
- avoid duplicate code dealing with logic of EffectiveNodeType
  and retrieval of QItemDefinitions.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@520408 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.jcr2spi.nodetype.ItemDefinitionProvider;
+import org.apache.jackrabbit.jcr2spi.nodetype.EffectiveNodeTypeProvider;
+import org.apache.jackrabbit.spi.QValueFactory;
+
+import javax.jcr.ValueFactory;
+import javax.jcr.RepositoryException;
+    /**
+     * Returns the <code>AccessManager</code> associated with this
+     * <code>ManagerProvider</code>.
+     *
+     * @return the <code>AccessManager</code> associated with this
+     * <code>ManagerProvider</code>
+     */
+    /**
+     * Returns the <code>VersionManager</code> associated with this
+     * <code>ManagerProvider</code>.
+     *
+     * @return the <code>VersionManager</code> associated with this
+     * <code>ManagerProvider</code>
+     */
+
+    public ItemDefinitionProvider getItemDefinitionProvider();
+
+    public EffectiveNodeTypeProvider getEffectiveNodeTypeProvider();
+
+    /**
+     * Same as {@link Session#getValueFactory()} but omits the check, if this repository
+     * is really level 2 compliant. Therefore, this method may be used for
+     * internal functionality only, that require creation and conversion of
+     * JCR values.
+     *
+     * @return
+     * @throws RepositoryException
+     */
+    public ValueFactory getJcrValueFactory() throws RepositoryException;
+
+    public QValueFactory getQValueFactory() throws RepositoryException;
