JCR-890: concurrent read-only access to a session

Turn Item.save() into a managed operation.

Introduce SessionContext to avoid having to pass a yet another reference around.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@956912 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.session.SessionContext;
+import org.apache.jackrabbit.core.session.SessionOperation;
-     * <code>Session</code> through which this <code>Item</code> was acquired
+     * The component context of the session to which this item is associated.
+     */
+    protected final SessionContext sessionContext;
+
+    /**
+     * The session to which this item is associated.
-     * @param session   the <code>Session</code> through which this <code>Item</code> is acquired
+     * @param sessionContext the component context of the associated session
-    ItemImpl(ItemManager itemMgr, SessionImpl session, ItemData data) {
-        this.session = session;
-        stateMgr = session.getItemStateManager();
+    ItemImpl(ItemManager itemMgr, SessionContext sessionContext, ItemData data) {
+        this.sessionContext = sessionContext;
+        this.session = sessionContext.getSessionImpl();
+        this.stateMgr = session.getItemStateManager();
+    protected void perform(SessionOperation operation)
+            throws RepositoryException {
+        sessionContext.getSessionState().perform(operation);
+    }
+
-        session.sanityCheck();
+        perform(new SessionOperation("sanity check"));
-    public void save()
-            throws AccessDeniedException, ItemExistsException,
-            ConstraintViolationException, InvalidItemStateException,
-            ReferentialIntegrityException, VersionException, LockException,
-            NoSuchNodeTypeException, RepositoryException {
+    public void save() throws RepositoryException {
-        // synchronize on this session
-        synchronized (session) {
+        perform(new SaveOperation());
+    }
+
+    private class SaveOperation extends SessionOperation {
+
+        public SaveOperation() {
+            super("item save");
+        }
+
+        @Override
+        public void perform() throws RepositoryException {
