JCR-890: concurrent read-only access to a session

Simplify use of SessionOperations. Turn Session.refresh() into a managed operation.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@956901 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.session.SanityCheck;
-        state.perform(SanityCheck.INSTANCE);
+        state.perform(new SessionOperation("sanity check"));
-    public void save()
-            throws AccessDeniedException, ItemExistsException,
-            ConstraintViolationException, InvalidItemStateException,
-            VersionException, LockException, NoSuchNodeTypeException,
-            RepositoryException {
-        state.perform(new SessionOperation() {
+    public void save() throws RepositoryException {
+        state.perform(new SessionOperation("save") {
+            @Override
-    public void refresh(boolean keepChanges) throws RepositoryException {
-        // check sanity of this session
-        sanityCheck();
+    public void refresh(final boolean keepChanges) throws RepositoryException {
+        state.perform(new SessionOperation("refresh") {
+            @Override
+            public void perform() throws RepositoryException {
+                // JCR-1753: Ensure that we are up to date with cluster changes
+                ClusterNode cluster = repositoryContext.getClusterNode();
+                if (cluster != null && clusterSyncOnRefresh()) {
+                    try {
+                        cluster.sync();
+                    } catch (ClusterException e) {
+                        throw new RepositoryException(
+                                "Unable to synchronize with the cluster", e);
+                    }
+                }
-        // JCR-1753: Ensure that we are up to date with cluster changes
-        ClusterNode cluster = repositoryContext.getClusterNode();
-        if (cluster != null && clusterSyncOnRefresh()) {
-            try {
-                cluster.sync();
-            } catch (ClusterException e) {
-                throw new RepositoryException(
-                        "Unable to synchronize with the cluster", e);
+                if (!keepChanges) {
+                    itemStateMgr.disposeAllTransientItemStates();
+                } else {
+                    // FIXME should reset Item#status field to STATUS_NORMAL
+                    // of all non-transient instances; maybe also
+                    // have to reset stale ItemState instances
+                }
-        }
-
-        if (!keepChanges) {
-            itemStateMgr.disposeAllTransientItemStates();
-        } else {
-            /** todo FIXME should reset Item#status field to STATUS_NORMAL
-             * of all non-transient instances; maybe also
-             * have to reset stale ItemState instances */
-        }
+        });
