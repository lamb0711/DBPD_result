JCR-2087: Upgrade to Java 5 as the base platform

Generify PathMap (as preparation for work on LockManagerImpl).

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@803119 13f79535-47bb-0310-9956-ffa450edef68

-    private final PathMap lockMap = new PathMap();
+    private final PathMap<AbstractLockInfo> lockMap =
+        new PathMap<AbstractLockInfo>();
-        lockMap.traverse(new PathMap.ElementVisitor() {
-            public void elementVisited(PathMap.Element element) {
-                AbstractLockInfo info = (AbstractLockInfo) element.get();
+        lockMap.traverse(new PathMap.ElementVisitor<AbstractLockInfo>() {
+            public void elementVisited(PathMap.Element<AbstractLockInfo> element) {
+                AbstractLockInfo info = element.get();
-            PathMap.Element element = lockMap.map(path, false);
+            PathMap.Element<AbstractLockInfo> element = lockMap.map(path, false);
-            LockInfo other = (LockInfo) element.get();
+            LockInfo other = element.get();
-            PathMap.Element element = lockMap.map(getPath(session, node.getId()), true);
+            PathMap.Element<AbstractLockInfo> element =
+                lockMap.map(getPath(session, node.getId()), true);
-            AbstractLockInfo info = (AbstractLockInfo) element.get();
+            AbstractLockInfo info = element.get();
-        final ArrayList<LockInfo> infos = new ArrayList<LockInfo>();
-        lockMap.traverse(new PathMap.ElementVisitor() {
-            public void elementVisited(PathMap.Element element) {
-                LockInfo info = (LockInfo) element.get();
+        final ArrayList<AbstractLockInfo> infos = new ArrayList<AbstractLockInfo>();
+        lockMap.traverse(new PathMap.ElementVisitor<AbstractLockInfo>() {
+            public void elementVisited(PathMap.Element<AbstractLockInfo> element) {
+                AbstractLockInfo info = element.get();
-            PathMap.Element element = lockMap.map(path, false);
-            AbstractLockInfo info = (AbstractLockInfo) element.get();
+            PathMap.Element<AbstractLockInfo> element = lockMap.map(path, false);
+            AbstractLockInfo info = element.get();
-            PathMap.Element element = lockMap.map(path, false);
-            AbstractLockInfo info = (AbstractLockInfo) element.get();
+            PathMap.Element<AbstractLockInfo> element = lockMap.map(path, false);
+            AbstractLockInfo info = element.get();
-            PathMap.Element element = lockMap.map(getPath(session, node.getId()), true);
+            PathMap.Element<AbstractLockInfo> element = lockMap.map(getPath(session, node.getId()), true);
-            PathMap.Element element = lockMap.map(path, false);
-            AbstractLockInfo info = (AbstractLockInfo) element.get();
+            PathMap.Element<AbstractLockInfo> element = lockMap.map(path, false);
+            AbstractLockInfo info = element.get();
-        PathMap.Element element = lockMap.map(path, false);
-        LockInfo info = (LockInfo) element.get();
+        PathMap.Element<AbstractLockInfo> element = lockMap.map(path, false);
+        LockInfo info = element.get();
-        PathMap.Element element = lockMap.map(getPath((SessionImpl) session,
-                node.getId()), true);
+        PathMap.Element<AbstractLockInfo> element =
+            lockMap.map(getPath((SessionImpl) session, node.getId()), true);
-        AbstractLockInfo info = (AbstractLockInfo) element.get();
+        AbstractLockInfo info = element.get();
-            PathMap.Element element = lockMap.map(node.getPrimaryPath(), true);
+            PathMap.Element<AbstractLockInfo> element =
+                lockMap.map(node.getPrimaryPath(), true);
-                AbstractLockInfo info = (AbstractLockInfo) element.get();
+                AbstractLockInfo info = element.get();
-            PathMap.Element element = lockMap.map(node.getPrimaryPath(), true);
+            PathMap.Element<AbstractLockInfo> element =
+                lockMap.map(node.getPrimaryPath(), true);
-                AbstractLockInfo info = (AbstractLockInfo) element.get();
+                AbstractLockInfo info = element.get();
-         * Return the event type. May be {@link Event#NODE_ADDED},
-         * {@link Event#NODE_REMOVED} or a combination of both.\
-         *
-         * @return event type
-         */
-        public int getType() {
-            return type;
-        }
-
-        /**
-        Iterator iter = consolidateEvents(events);
+        Iterator<HierarchyEvent> iter = consolidateEvents(events);
-            HierarchyEvent event = (HierarchyEvent) iter.next();
+            HierarchyEvent event = iter.next();
-    private Iterator consolidateEvents(EventIterator events) {
+    private Iterator<HierarchyEvent> consolidateEvents(EventIterator events) {
-    private void refresh(PathMap.Element element) {
+    private void refresh(PathMap.Element<AbstractLockInfo> element) {
-        element.traverse(new PathMap.ElementVisitor() {
-            public void elementVisited(PathMap.Element element) {
-                AbstractLockInfo info = (AbstractLockInfo) element.get();
-                infos.add(info);
+        element.traverse(new PathMap.ElementVisitor<AbstractLockInfo>() {
+            public void elementVisited(PathMap.Element<AbstractLockInfo> element) {
+                infos.add(element.get());
-            PathMap.Element parent = lockMap.map(path.getAncestor(1), true);
+            PathMap.Element<AbstractLockInfo> parent =
+                lockMap.map(path.getAncestor(1), true);
-            PathMap.Element parent = lockMap.map(oldPath.getAncestor(1), true);
+            PathMap.Element<AbstractLockInfo> parent =
+                lockMap.map(oldPath.getAncestor(1), true);
-            PathMap.Element parent = lockMap.map(path.getAncestor(1), true);
+            PathMap.Element<AbstractLockInfo> parent =
+                lockMap.map(path.getAncestor(1), true);
-            PathMap.Element element = lockMap.map(path, true);
+            PathMap.Element<AbstractLockInfo> element = lockMap.map(path, true);
-            AbstractLockInfo info = (AbstractLockInfo) element.get();
+            AbstractLockInfo info = element.get();
-        lockMap.traverse(new PathMap.ElementVisitor() {
-            public void elementVisited(PathMap.Element element) {
+        lockMap.traverse(new PathMap.ElementVisitor<AbstractLockInfo>() {
+            public void elementVisited(PathMap.Element<AbstractLockInfo> element) {
