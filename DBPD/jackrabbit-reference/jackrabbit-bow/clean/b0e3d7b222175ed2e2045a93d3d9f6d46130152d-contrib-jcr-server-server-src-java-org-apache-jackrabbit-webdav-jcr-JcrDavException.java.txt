JCR-193, JCR-216, JCR-203, JCR 184 + various minor fixes

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@293331 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashMap;
+    // mapping of Jcr exceptions to error codes.
+    private static HashMap codeMap = new HashMap();
+    static {
+        codeMap.put(AccessDeniedException.class, new Integer(DavServletResponse.SC_FORBIDDEN));
+        codeMap.put(ConstraintViolationException.class, new Integer(DavServletResponse.SC_CONFLICT));
+        codeMap.put(InvalidItemStateException.class, new Integer(DavServletResponse.SC_CONFLICT));
+        codeMap.put(InvalidSerializedDataException.class, new Integer(DavServletResponse.SC_BAD_REQUEST));
+        codeMap.put(InvalidQueryException.class, new Integer(DavServletResponse.SC_BAD_REQUEST));
+        codeMap.put(ItemExistsException.class, new Integer(DavServletResponse.SC_CONFLICT));
+        codeMap.put(ItemNotFoundException.class, new Integer(DavServletResponse.SC_FORBIDDEN));
+        codeMap.put(LockException.class, new Integer(DavServletResponse.SC_LOCKED));
+        codeMap.put(MergeException.class, new Integer(DavServletResponse.SC_CONFLICT));
+        codeMap.put(NamespaceException.class, new Integer(DavServletResponse.SC_CONFLICT));
+        codeMap.put(NoSuchNodeTypeException.class, new Integer(DavServletResponse.SC_CONFLICT));
+        codeMap.put(NoSuchWorkspaceException.class, new Integer(DavServletResponse.SC_CONFLICT));
+        codeMap.put(PathNotFoundException.class, new Integer(DavServletResponse.SC_CONFLICT));
+        codeMap.put(ReferentialIntegrityException.class, new Integer(DavServletResponse.SC_CONFLICT));
+        codeMap.put(RepositoryException.class, new Integer(DavServletResponse.SC_FORBIDDEN));
+        codeMap.put(LoginException.class, new Integer(DavServletResponse.SC_UNAUTHORIZED));
+        codeMap.put(UnsupportedRepositoryOperationException.class, new Integer(DavServletResponse.SC_NOT_IMPLEMENTED));
+        codeMap.put(ValueFormatException.class, new Integer(DavServletResponse.SC_CONFLICT));
+        codeMap.put(VersionException.class, new Integer(DavServletResponse.SC_CONFLICT));
+    }
+
-    public JcrDavException(AccessDeniedException e) {
-        this(e, DavServletResponse.SC_FORBIDDEN);
-    }
-
-    public JcrDavException(ConstraintViolationException e) {
-        this(e, DavServletResponse.SC_CONFLICT);
-    }
-
-    public JcrDavException(InvalidItemStateException e) {
-        this(e, DavServletResponse.SC_CONFLICT);
-    }
-
-    public JcrDavException(InvalidSerializedDataException e) {
-        this(e, DavServletResponse.SC_BAD_REQUEST);
-    }
-
-    public JcrDavException(InvalidQueryException e) {
-        this(e, DavServletResponse.SC_BAD_REQUEST);
-    }
-
-    public JcrDavException(ItemExistsException e) {
-        this(e, DavServletResponse.SC_CONFLICT);
-    }
-
-    public JcrDavException(ItemNotFoundException e) {
-        this(e, DavServletResponse.SC_FORBIDDEN);
-    }
-
-    public JcrDavException(LockException e) {
-        this(e, DavServletResponse.SC_LOCKED);
-    }
-
-    public JcrDavException(MergeException e) {
-        this(e, DavServletResponse.SC_CONFLICT);
-    }
-
-    public JcrDavException(NamespaceException e) {
-        this(e, DavServletResponse.SC_CONFLICT);
-    }
-
-    public JcrDavException(NoSuchNodeTypeException e) {
-        this(e, DavServletResponse.SC_CONFLICT);
-    }
-
-    public JcrDavException(NoSuchWorkspaceException e) {
-        this(e, DavServletResponse.SC_CONFLICT);
-    }
-
-    public JcrDavException(PathNotFoundException e) {
-        this(e, DavServletResponse.SC_CONFLICT);
-    }
-
-    public JcrDavException(ReferentialIntegrityException e) {
-        this(e, DavServletResponse.SC_CONFLICT);
-    }
-
-        this(e, DavServletResponse.SC_FORBIDDEN);
-    }
-
-    public JcrDavException(LoginException e) {
-        this(e, DavServletResponse.SC_UNAUTHORIZED);
-    }
-
-    public JcrDavException(UnsupportedRepositoryOperationException e) {
-        this(e, DavServletResponse.SC_NOT_IMPLEMENTED);
-    }
-
-    public JcrDavException(ValueFormatException e) {
-        this(e, DavServletResponse.SC_CONFLICT);
-    }
-
-    public JcrDavException(VersionException e) {
-        this(e, DavServletResponse.SC_CONFLICT);
+        this(e, ((Integer)codeMap.get(e.getClass())).intValue());
