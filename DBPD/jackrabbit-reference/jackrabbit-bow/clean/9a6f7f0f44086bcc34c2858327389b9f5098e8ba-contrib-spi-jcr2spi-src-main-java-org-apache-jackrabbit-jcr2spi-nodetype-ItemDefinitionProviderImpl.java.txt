JCR-1023: Only load item definition when required

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@555275 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.NodeInfo;
-import org.apache.jackrabbit.spi.PropertyInfo;
-import org.apache.jackrabbit.jcr2spi.hierarchy.NodeEntry;
-import org.apache.jackrabbit.jcr2spi.state.Status;
-    public QNodeDefinition getQNodeDefinition(NodeEntry nodeEntry, NodeInfo nodeInfo) {
-        QNodeDefinition definition = null;
-        NodeEntry parent = nodeEntry.getParent();
-        if (parent == null) {
-            // special case for root state
-            definition = getRootNodeDefinition();
-        } else if (parent.isAvailable() && parent.getStatus() == Status.EXISTING) {
-            // try to retrieve definition if the parent is available
-            try {
-                NodeState parentState = parent.getNodeState();
-                EffectiveNodeType ent = entProvider.getEffectiveNodeType(parentState);
-                EffectiveNodeType entTarget = getEffectiveNodeType(nodeInfo.getNodetype());
-                definition = getQNodeDefinition(ent, entTarget, nodeInfo.getQName());
-            } catch (RepositoryException e) {
-                // should not get here
-                log.warn("Internal error", e.getMessage());
-            }
-        }
-        return definition;
-    }
-
-    /**
-     * @inheritDoc
-     */
-    public QPropertyDefinition getQPropertyDefinition(PropertyEntry propertyEntry, PropertyInfo propInfo) {
-        QPropertyDefinition definition = null;
-        NodeEntry parent = propertyEntry.getParent();
-        if (parent.isAvailable() && parent.getStatus() == Status.EXISTING) {
-            try {
-                NodeState parentState = parent.getNodeState();
-                EffectiveNodeType ent = entProvider.getEffectiveNodeType(parentState.getNodeTypeNames());
-                QPropertyDefinition defs[] = getQPropertyDefinitions(ent, propInfo.getQName(), propInfo.getType(), propInfo.isMultiValued());
-                if (defs.length == 1) {
-                    definition = defs[0];
-                } else {
-                    definition = service.getPropertyDefinition(sessionInfo, propertyEntry.getId());
-                }
-            } catch (RepositoryException e) {
-                // should not get here
-                log.warn("Internal error", e.getMessage());
-            } catch (NodeTypeConflictException e) {
-                // should not get here
-                log.warn("Internal error", e.getMessage());
-            }
-        }
-        return definition;
-    }
-
-    /**
-     * @inheritDoc
-     */
+     * @param entTarget
-     * @param nodeTypeName
-     * @throws NoSuchNodeTypeException
