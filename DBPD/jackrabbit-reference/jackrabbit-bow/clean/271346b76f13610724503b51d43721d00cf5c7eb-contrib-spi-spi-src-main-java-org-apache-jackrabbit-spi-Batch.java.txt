javadoc

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@555314 13f79535-47bb-0310-9956-ffa450edef68

- * <code>Batch</code>...
+ * <code>Batch</code> defines a set of modifications that must be executed and
+ * persisted at once. If any of the modifications added to the batch fails, none
+ * of the other changes must be persisted, thus leaving the persistent layer
+ * unaffected by the given batch. The <code>Batch</code> object is obtained by calling
+ * {@link RepositoryService#createBatch(ItemId, SessionInfo)}. The modifications
+ * collected in a Batch are persisted upon a sucessful call to
+ * {@link RepositoryService#submit(Batch)}.
-     * @param parentId
-     * @param nodeName Name of the node to be created
-     * @param nodetypeName
+     * Add a new node to the persistent layer.
+     *
+     * @param parentId NodeId identifying the parent node.
+     * @param nodeName Name of the node to be created.
+     * @param nodetypeName Primary node type name of the node to be created.
+     * Add a new property to the persistent layer.
-     * @param parentId
-     * @param propertyName Name of the property to be created
-     * @param value
+     * @param parentId NodeId identifying the parent node.
+     * @param propertyName Name of the property to be created.
+     * @param value The qualified value of the property to be created.
-     * @param parentId
-     * @param propertyName Name of the property to be created
-     * @param values
+     * Add a new multi-valued property to the persistent layer.
+     *
+     * @param parentId NodeId identifying the parent node.
+     * @param propertyName Name of the property to be created.
+     * @param values The qualified values of the property to be created.
+     * Modify the value of an existing property.
-     * @param propertyId
-     * @param value
+     * @param propertyId PropertyId identifying the property to be modified.
+     * @param value The new value.
-     * @param propertyId
-     * @param values
+     * Modify the value of an existing, multi-valued property.
+     *
+     * @param propertyId PropertyId identifying the property to be modified.
+     * @param values The new values.
-     * @param itemId
+     * Remove an existing item.
+     *
+     * @param itemId ItemId identifying the item to be removed.
-     * @param parentId
-     * @param srcNodeId
-     * @param beforeNodeId
+     * Modify the order of the child nodes identified by the given
+     * <code>NodeId</code>s.
+     *
+     * @param parentId NodeId identifying the parent node.
+     * @param srcNodeId NodeId identifying the node to be reordered.
+     * @param beforeNodeId NodeId identifying the child node, before which the
+     * source node must be placed.
-     * @param nodeId
-     * @param mixinNodeTypeIds
+     * Modify the set of mixin node types present on the node identified by the
+     * given id.
+     *
+     * @param nodeId NodeId identifying the node to be modified.
+     * @param mixinNodeTypeIds The new set of mixin types. Compared to the
+     * previous values this may result in both adding and/or removing mixin types.
+     * @see javax.jcr.Node#removeMixin(String)
-     * @param srcNodeId
-     * @param destParentNodeId
-     * @param destName
+     * Move the node identified by the given <code>srcNodeId</code> to the
+     * new parent identified by <code>destParentNodeId</code> and change its
+     * name to <code>destName</code>.
+     *
+     * @param srcNodeId NodeId identifying the node to be moved.
+     * @param destParentNodeId NodeId identifying the new parent.
+     * @param destName The new name of the moved node.
