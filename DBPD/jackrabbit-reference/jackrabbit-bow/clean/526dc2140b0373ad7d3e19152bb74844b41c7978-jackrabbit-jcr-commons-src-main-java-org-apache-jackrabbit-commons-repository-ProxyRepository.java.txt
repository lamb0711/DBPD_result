JCR-2360: JcrUtils.getRepository(...) for simple repository access

Extend ProxyRepository with JcrUtils.getRepository() support. Keep backwards-compatibility.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@900763 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashMap;
+import java.util.Map;
+
+import javax.jcr.Repository;
+import org.apache.jackrabbit.commons.JcrUtils;
+     * Repository access parameters. Used if an explicit repository
+     * factory has not been configured.
+     */
+    private final Map<String, String> parameters =
+        new HashMap<String, String>();
+
+    /**
+     * Creates a proxy for the repository (or repositories) accessible
+     * using the given repository parameters.
+     *
+     * @param parameters repository parameters
+     */
+    public ProxyRepository(Map<String, String> parameters) {
+        this.factory = null;
+        this.parameters.putAll(parameters);
+    }
+
+    /**
+     * Creates a proxy for the repository accessible using the given
+     * repository URI.
+     *
+     * @param uri repository URI
+     */
+    public ProxyRepository(String uri) {
+        this.factory = null;
+        this.parameters.put(JcrUtils.REPOSITORY_URI, uri);
+    }
+
+    /**
+     * Returns the proxied repository. Subclasses can override this
+     * method to implement custom repository access mechanisms.
+     *
+     * @return repository
+     * @throws RepositoryException if the repository can not be accessed
+     */
+    protected Repository getRepository() throws RepositoryException {
+        if (factory != null) {
+            return factory.getRepository();
+        } else {
+            return JcrUtils.getRepository(parameters);
+        }
+    }
+
+    /**
-            return factory.getRepository().getDescriptorKeys();
+            return getRepository().getDescriptorKeys();
-            return factory.getRepository().isSingleValueDescriptor(key);
+            return getRepository().isSingleValueDescriptor(key);
-            return factory.getRepository().getDescriptor(key);
+            return getRepository().getDescriptor(key);
-            return factory.getRepository().getDescriptorValue(key);
+            return getRepository().getDescriptorValue(key);
-            return factory.getRepository().getDescriptorValues(key);
+            return getRepository().getDescriptorValues(key);
-        return factory.getRepository().login(credentials, workspace);
+        return getRepository().login(credentials, workspace);
