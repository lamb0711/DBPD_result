JCR-2509 : Reduce number of compiler warning by adding @Override and generics where appropriate [step 2: jackrabbit-jcr-server]

in addition:
- minor improvements in comments, typos
- use foreach loops where possible
- remove redundant Tika imports in server/io package
- remove redundant casts
- add missing index increment in SubscriptionManagerImpl.SubscriptionMap

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@915339 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.property.PropEntry;
-import java.util.Iterator;
-import java.util.ArrayList;
+import java.util.Collections;
-        List l = new ArrayList();
-            l.add(createResourceFromLocator(loc));
+            List<DavResource> list = Collections.singletonList(createResourceFromLocator(loc));
+            return new DavResourceIteratorImpl(list);
+            return DavResourceIteratorImpl.EMPTY;
-        }
-        return new DavResourceIteratorImpl(l);
+            return DavResourceIteratorImpl.EMPTY;
+        }       
-    public void setProperty(DavProperty property) throws DavException {
+    @Override
+    public void setProperty(DavProperty<?> property) throws DavException {
-                Map changes = new HashMap(nsp.getNamespaces());
+                Map<String, String> changes = new HashMap<String, String>(nsp.getNamespaces());
-                String[] registeredPrefixes = nsReg.getPrefixes();
-                for (int i = 0; i < registeredPrefixes.length; i++) {
-                    String prfx = registeredPrefixes[i];
-                    if (!changes.containsKey(prfx)) {
+                for (String prefix : nsReg.getPrefixes()) {
+                    if (!changes.containsKey(prefix)) {
-                        nsReg.unregisterNamespace(prfx);
-                    } else if (changes.get(prfx).equals(nsReg.getURI(prfx))) {
+                        nsReg.unregisterNamespace(prefix);
+                    } else if (changes.get(prefix).equals(nsReg.getURI(prefix))) {
-                        changes.remove(prfx);
+                        changes.remove(prefix);
-                Iterator prefixIt = changes.keySet().iterator();
-                while (prefixIt.hasNext()) {
-                    String prefix = (String)prefixIt.next();
-                    String uri = (String)changes.get(prefix);
+                for (String prefix : changes.keySet()) {
+                    String uri = changes.get(prefix);
-     * @see DefaultItemCollection#alterProperties(org.apache.jackrabbit.webdav.property.DavPropertySet, org.apache.jackrabbit.webdav.property.DavPropertyNameSet)
+     * @see DefaultItemCollection#alterProperties(List)
-    public MultiStatusResponse alterProperties(List changeList) throws DavException {
+    @Override
+    public MultiStatusResponse alterProperties(List<? extends PropEntry> changeList) throws DavException {
-           Object propEntry = changeList.get(0);
+           PropEntry propEntry = changeList.get(0);
-                && ItemResourceConstants.JCR_NAMESPACES.equals(((DavProperty)propEntry).getName())) {
-                DavProperty namespaceProp = (DavProperty) propEntry;
+                && ItemResourceConstants.JCR_NAMESPACES.equals(((DavProperty<?>)propEntry).getName())) {
+                DavProperty<?> namespaceProp = (DavProperty<?>) propEntry;
-            // changelist contains more than the jcr:namespaces property
+            // change list contains more than the jcr:namespaces property
+    @Override
+    @Override
+    @Override
+    @Override
-            DavProperty namespacesProp = new NamespacesProperty(nsReg);
+            DavProperty<?> namespacesProp = new NamespacesProperty(nsReg);
-}
+}
