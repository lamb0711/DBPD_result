following some of the recommendations reported by "maven checkstyle"

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47099 13f79535-47bb-0310-9956-ffa450edef68

-    // jcr:mergeFailed 
+    // jcr:mergeFailed
-    abstract protected ItemState getOrCreateTransientItemState() throws RepositoryException;
+    protected abstract ItemState getOrCreateTransientItemState() throws RepositoryException;
-    abstract protected void makePersistent() throws RepositoryException;
+    protected abstract void makePersistent() throws RepositoryException;
-		    if (nodeState.getStatus() == ItemState.STATUS_NEW &&
-			    !(nt.getQName().equals(ntReq.getQName())
+		    if (nodeState.getStatus() == ItemState.STATUS_NEW
+			    && !(nt.getQName().equals(ntReq.getQName())
-    
+
-			    String msg = itemMgr.safeGetJCRPath(propState.getId()) + ": target node of REFERENCE property does not exist";
+			    String msg = itemMgr.safeGetJCRPath(propState.getId())
+				    + ": target node of REFERENCE property does not exist";
-				    String msg = itemMgr.safeGetJCRPath(propState.getId()) + ": target node of REFERENCE property is a new node and must therefore either be saved first or be within the scope of the current save operation.";
+				    String msg = itemMgr.safeGetJCRPath(propState.getId())
+					    + ": target node of REFERENCE property is a new node and must therefore either be saved first or be within the scope of the current save operation.";
-				String msg = itemMgr.safeGetJCRPath(propState.getId()) + ": failed to verify existence of target node";
+				String msg = itemMgr.safeGetJCRPath(propState.getId())
+					+ ": failed to verify existence of target node";
-		String msg = nodeState.getId() + ": the node cannot be removed because it is being referenced.";
+		String msg = nodeState.getId()
+			+ ": the node cannot be removed because it is being referenced.";
