JCR-2836: Unclosed threads in Jackrabbit

Remove the use of ThreadLocal variables in PerQueryCache to avoid leaking memory in container environments.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1055117 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Map;
+import java.util.WeakHashMap;
+
-    /**
-     * The key in the per-query-cache that identifies the read count.
-     */
-    private static final Object READ_COUNT = new Object();
+    private static final Map<Thread, Long> counts =
+        new WeakHashMap<Thread, Long>();
-    public static long getReads() {
-        Long value = (Long) PerQueryCache.getInstance().get(IOCounters.class,  READ_COUNT);
-        if (value == null) {
-            value = 0L;
-        }
-        return value;
+    public static synchronized long getReads() {
+        Long count = counts.get(Thread.currentThread());
+        return count != null ? count : 0;
-    public static void incrRead() {
-        PerQueryCache cache = PerQueryCache.getInstance();
-        Long value = (Long) cache.get(IOCounters.class,  READ_COUNT);
-        if (value == null) {
-            value = 0L;
-        }
-        cache.put(IOCounters.class, READ_COUNT, value + 1);
+    public static synchronized void incrRead() {
+        counts.put(Thread.currentThread(), getReads() + 1);
