fixed bug that occured when setting a property but the property had already been created

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@105831 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.*;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.Map;
- * <li>checking access rights of associated <code>Session</code> in all methods.
+ * <li>respecting access rights of associated <code>Session</code> in all methods.
-     * @param path
-     * @return
+     * Checks if the item with the given path exists.
+     *
+     * @param path path to the item to be checked
+     * @return true if the specified item exists
+/*
+            // item exists but the session has not been granted read access
+            return false;
+        } catch (RepositoryException re) {
+            return false;
+        }
+*/
+        try {
+            // check sanity of session
+            session.sanityCheck();
+
+            ItemId id = hierMgr.resolvePath(path);
+
+            // check if state exists for the given item
+            if (!itemStateProvider.hasItemState(id)) {
+                return false;
+            }
+
+            // check privileges
+            if (!session.getAccessManager().isGranted(id, AccessManager.READ)) {
+                // clear cache
+                if (isCached(id)) {
+                    evictItem(id);
+                }
+                // item exists but the session has not been granted read access
+                return false;
+            }
+        } catch (PathNotFoundException pnfe) {
+            return false;
+        } catch (ItemNotFoundException infe) {
+            return false;
-     * Checks if the item with the given id exists
+     * Checks if the item with the given id exists.
-     * @param id
-     * @return
+     * @param id id of the item to be checked
+     * @return true if the specified item exists
+/*
+            // item exists but the session has not been granted read access
+            return false;
+        } catch (RepositoryException re) {
+            return false;
+        }
+*/
+        try {
+            // check sanity of session
+            session.sanityCheck();
+
+            // check if state exists for the given item
+            if (!itemStateProvider.hasItemState(id)) {
+                return false;
+            }
+
+            // check privileges
+            if (!session.getAccessManager().isGranted(id, AccessManager.READ)) {
+                // clear cache
+                if (isCached(id)) {
+                    evictItem(id);
+                }
+                // item exists but the session has not been granted read access
+                return false;
+            }
+        } catch (ItemNotFoundException infe) {
+            return false;
