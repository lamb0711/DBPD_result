- removed @author and @version (i.e. $Revision & $Id) tags
- removed tab characters from java source code

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47648 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.log4j.Logger;
+import org.apache.log4j.Logger;
- *
- * @author Stefan Guggisberg
- * @version $Revision: 1.1 $, $Date: 2004/09/09 15:23:43 $
-	this.itemDef = itemDef;
-	this.ntMgr = ntMgr;
-	this.nsResolver = nsResolver;
+        this.itemDef = itemDef;
+        this.ntMgr = ntMgr;
+        this.nsResolver = nsResolver;
-	return itemDef.getName();
+        return itemDef.getName();
-	try {
-	    return ntMgr.getNodeType(itemDef.getDeclaringNodeType());
-	} catch (NoSuchNodeTypeException e) {
-	    // should never get here
-	    log.error("declaring node type does not exist", e);
-	    return null;
-	}
+        try {
+            return ntMgr.getNodeType(itemDef.getDeclaringNodeType());
+        } catch (NoSuchNodeTypeException e) {
+            // should never get here
+            log.error("declaring node type does not exist", e);
+            return null;
+        }
-	if (itemDef.definesResidual()) {
-	    return ANY_NAME;
-	} else {
-	    try {
-		return itemDef.getName().toJCRName(nsResolver);
-	    } catch (NoPrefixDeclaredException npde) {
-		// should never get here
-		log.error("encountered unregistered namespace in property name", npde);
-		// not correct, but an acceptable fallback
-		return itemDef.getName().toString();
-	    }
-	}
+        if (itemDef.definesResidual()) {
+            return ANY_NAME;
+        } else {
+            try {
+                return itemDef.getName().toJCRName(nsResolver);
+            } catch (NoPrefixDeclaredException npde) {
+                // should never get here
+                log.error("encountered unregistered namespace in property name", npde);
+                // not correct, but an acceptable fallback
+                return itemDef.getName().toString();
+            }
+        }
-	return itemDef.getOnParentVersion();
+        return itemDef.getOnParentVersion();
-	return itemDef.isAutoCreate();
+        return itemDef.isAutoCreate();
-	return itemDef.isMandatory();
+        return itemDef.isMandatory();
-	return itemDef.isPrimaryItem();
+        return itemDef.isPrimaryItem();
-	return itemDef.isProtected();
+        return itemDef.isProtected();
