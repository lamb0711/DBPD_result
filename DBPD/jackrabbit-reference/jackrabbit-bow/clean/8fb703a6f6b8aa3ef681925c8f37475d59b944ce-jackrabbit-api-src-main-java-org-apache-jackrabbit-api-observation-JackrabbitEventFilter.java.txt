JCR-3797: Add path exclusion to JackrabbitEventFilter

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1618137 13f79535-47bb-0310-9956-ffa450edef68

- * <code>absPath</code>, <code>absPaths</code> <code>isDeep</code>:
- * Only events whose associated parent node is at one of the paths in
- * <code>absPath</code> or <code>absPaths</code> (or within its subgraph,
- * if <code>isDeep</code> is <code>true</code>) will be received. It is
- * permissible to register a listener for a path where no node currently exists.
+ * <code>absPath</code>, <code>absPaths</code>, <code>excludedPaths</code>,
+ * <code>isDeep</code>: Only events whose associated parent node is at one
+ * of the paths in <code>absPath</code> or <code>absPaths</code> (or within
+ * its subgraph, if <code>isDeep</code> is <code>true</code>) will be received
+ * except if the associated parent node is at one of the paths in
+ * <code>excludedPaths</code> or its subgraph.
+ * It is permissible to register a listener for a path where no node currently
+ * exists.
+    private String[] excludedPaths = new String[]{};
+     * Sets the <code>excludedPaths</code> parameter of the filter.
+     * If left unset, this parameter defaults to an empty array.
+     *
+     * @param excludedPaths an absolute path <code>String</code> array.
+     * @return This EventFilter object with the <code>excludedPaths</code> parameter set.
+     */
+    public JackrabbitEventFilter setExcludedPaths(String... excludedPaths) {
+        this.excludedPaths = copyOf(excludedPaths, excludedPaths.length);
+        return this;
+    }
+
+    /**
+     * Returns the <code>excludedPaths</code> parameter of the filter.
+     *
+     * @return a <code>String</code> array.
+     */
+    public String[] getExcludedPaths() {
+        return copyOf(excludedPaths, excludedPaths.length);
+    }
+
+    /**
