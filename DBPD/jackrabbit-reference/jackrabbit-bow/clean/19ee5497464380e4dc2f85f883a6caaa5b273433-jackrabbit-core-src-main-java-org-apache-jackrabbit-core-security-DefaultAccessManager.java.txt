JCR-2887 : Split PrivilegeRegistry in a per-session manager instance and a repository level registry [work in progress]

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1082239 13f79535-47bb-0310-9956-ffa450edef68

-            int privs = ((PrivilegeManagerImpl) privilegeManager).getBits(privileges);
-            return (compiledPermissions.getPrivileges(p) | ~privs) == -1;
+            return compiledPermissions.hasPrivileges(p, privileges);
-        int bits = compiledPermissions.getPrivileges(resolver.getQPath(absPath));
-        return (bits == PrivilegeRegistry.NO_PRIVILEGE) ?
-                new Privilege[0] :
-                ((PrivilegeManagerImpl) privilegeManager).getPrivileges(bits);
+        Set<Privilege> privs = compiledPermissions.getPrivilegeSet(resolver.getQPath(absPath));
+        return privs.toArray(new Privilege[privs.size()]);
-            int privs = ((PrivilegeManagerImpl) privilegeManager).getBits(privileges);
-                return (perms.getPrivileges(p) | ~privs) == -1;
+                return perms.hasPrivileges(p, privileges);
-            int bits = perms.getPrivileges(resolver.getQPath(absPath));
-            return (bits == PrivilegeRegistry.NO_PRIVILEGE) ?
-                    new Privilege[0] :
-                    ((PrivilegeManagerImpl) privilegeManager).getPrivileges(bits);
+            Set<Privilege> privs = perms.getPrivilegeSet(resolver.getQPath(absPath));
+            return privs.toArray(new Privilege[privs.size()]);
