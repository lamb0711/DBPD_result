JCR-309: Added CND support in NodeTypeManagerImpl.registerNodeTypes().

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@384042 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.nodetype.compact.CompactNodeTypeDefReader;
+import org.apache.jackrabbit.core.nodetype.compact.ParseException;
+import java.io.InputStreamReader;
+import java.util.List;
-     * Registers the node types defined in the given XML stream. This is a
-     * trivial implementation that just invokes the existing
+     * Internal helper method for registering a list of node type definitions.
+     * Returns an array containing the registered node types. 
+     */
+    private NodeType[] registerNodeTypes(List defs)
+            throws InvalidNodeTypeDefException, RepositoryException {
+        ntReg.registerNodeTypes(defs);
+
+        Set types = new HashSet();
+        Iterator iterator = defs.iterator();
+        while (iterator.hasNext()) {
+            try {
+                NodeTypeDef def = (NodeTypeDef) iterator.next();
+                types.add(getNodeType(def.getName()));
+            } catch (NoSuchNodeTypeException e) {
+                // ignore
+            }
+        }
+        return (NodeType[]) types.toArray(new NodeType[types.size()]);
+    }
+
+    /**
+     * Registers the node types defined in the given XML stream.  This
+     * is a trivial implementation that just invokes the existing
-            ntReg.registerNodeTypes(Arrays.asList(defs));
-
-            Set types = new HashSet();
-            for (int i = 0; i < defs.length; i++) {
-                try {
-                    types.add(getNodeType(defs[i].getName()));
-                } catch (NoSuchNodeTypeException e) {
-                    // ignore
-                }
-            }
-            return (NodeType[]) types.toArray(new NodeType[types.size()]);
+            return registerNodeTypes(Arrays.asList(defs));
-        if (contentType.equalsIgnoreCase(JackrabbitNodeTypeManager.TEXT_XML)
-            || contentType.equalsIgnoreCase(APPLICATION_XML)) {
-            try {
+        try {
+            if (contentType.equalsIgnoreCase(JackrabbitNodeTypeManager.TEXT_XML)
+                    || contentType.equalsIgnoreCase(APPLICATION_XML)) {
-            } catch (SAXException e) {
-                throw new IOException(e.getMessage());
+            } else if (contentType.equalsIgnoreCase(
+                    JackrabbitNodeTypeManager.TEXT_X_JCR_CND)) {
+                CompactNodeTypeDefReader reader = new CompactNodeTypeDefReader(
+                        new InputStreamReader(in), "cnd input stream");
+                return registerNodeTypes(reader.getNodeTypeDefs());
+            } else {
+                throw new UnsupportedOperationException(
+                        "Unsupported content type: " + contentType);
-        } else {
-            throw new UnsupportedOperationException(
-                    "Unsupported content type: " + contentType);
+        } catch (InvalidNodeTypeDefException e) {
+            throw new RepositoryException("Invalid node type definition", e);
+        } catch (SAXException e) {
+            throw new IOException(e.getMessage());
+        } catch (ParseException e) {
+            throw new IOException(e.getMessage());
