- Introduce getUUID() on ChildNodeEntry
- replace ChildNodeEntries.add(QName, NodeId) with ChildNodeEntries.add(QName, String)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@431889 13f79535-47bb-0310-9956-ffa450edef68

-                childNodeEntries.add(cne.getName(), cne.getId());
+                childNodeEntries.add(cne.getName(), cne.getUUID());
-     * @param nodeName <code>QName</code> object specifying the name of the new entry.
-     * @param id the id the new entry is refering to.
+     * @param nodeName <code>QName</code> object specifying the name of the new
+     *                 entry.
+     * @param uuid     the uuid the new entry is refering to or
+     *                 <code>null</code> if the child node state cannot be
+     *                 identified with a uuid.
-    synchronized ChildNodeEntry addChildNodeEntry(QName nodeName, NodeId id) {
-        ChildNodeEntry entry = childNodeEntries.add(nodeName, id);
+    synchronized ChildNodeEntry addChildNodeEntry(QName nodeName,
+                                                  String uuid) {
+        ChildNodeEntry entry = childNodeEntries.add(nodeName, uuid);
-    /**
-            childNodeEntries.add(cne.getName(), cne.getId());
+            childNodeEntries.add(cne.getName(), cne.getUUID());
-                ChildNodeEntry newEntry = childNodeEntries.add(name, oldEntry.getId());
+                ChildNodeEntry newEntry = childNodeEntries.add(name, childState.getUUID());
-                newParent.addChildNodeEntry(newName, childId);
+                newParent.addChildNodeEntry(newName, childState.getUUID());
-        ChildNodeEntry add(QName nodeName, NodeId id) {
+        ChildNodeEntry add(QName nodeName, String uuid) {
-            ChildNodeEntry entry = createChildNodeEntry(nodeName, id);
+            ChildNodeEntry entry = createChildNodeEntry(nodeName, uuid);
-            entries.put(id, entry);
+            entries.put(idFactory.createNodeId(uuid), entry);
-                add(entry.getName(), entry.getId());
+                add(entry.getName(), entry.getUUID());
-         * <code>nodeName</code>, <code>id</code> and <code>index</code>.
+         * <code>nodeName</code> and an optional <code>uuid</code>.
-         * @param id the id of the child node.
-         * @return
+         * @param uuid     the UUID of the child node. If <code>null</code> the
+         *                 child node cannot be identified with a UUID.
+         * @return the created child node entry.
-        private ChildNodeEntry createChildNodeEntry(QName nodeName, NodeId id) {
-            if (id.getRelativePath() != null) {
-                return new PathElementReference(NodeState.this, nodeName, isf, idFactory);
+        private ChildNodeEntry createChildNodeEntry(QName nodeName, String uuid) {
+            if (uuid == null) {
+                return new PathElementReference(NodeState.this, nodeName,
+                        isf, idFactory);
-                return new UUIDReference(NodeState.this, id, isf, nodeName);
+                return new UUIDReference(NodeState.this,
+                        idFactory.createNodeId(uuid), isf, nodeName);
