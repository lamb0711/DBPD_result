JCR-2753: Deadlock in DefaultISMLocking

Move the thread identifier computations to TransactionContext from where they can be better reused.

Note that it's not necessarily possible to "upgrade" an ISMLocking read lock.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1036336 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Arrays;
+import static org.apache.jackrabbit.core.TransactionContext.getCurrentThreadId;
+import static org.apache.jackrabbit.core.TransactionContext.isSameThreadId;
-import javax.transaction.xa.Xid;
-
-import org.apache.jackrabbit.core.TransactionContext;
+        Object currentId = getCurrentThreadId();
-                ? (writerCount > 0 && !isSameId(writerId, getCurrentId()))
+                ? (writerCount > 0 && !isSameThreadId(writerId, currentId))
-        Object currentId = getCurrentId();
+        Object currentId = getCurrentThreadId();
-                    ? !isSameId(writerId, currentId) : readerCount > 0) {
+                    ? !isSameThreadId(writerId, currentId) : readerCount > 0) {
-    /**
-     * Returns the current thread identifier. The identifier is either the
-     * current thread instance or the global transaction identifier when
-     * running under a transaction.
-     *
-     * @return current thread identifier
-     */
-    private Object getCurrentId() {
-        Xid xid = TransactionContext.getCurrentXid();
-        if (xid != null) {
-            return xid.getGlobalTransactionId();
-        } else {
-            return Thread.currentThread();
-        }
-    }
-
-    /**
-     * Compares the given thread identifiers for equality.
-     */
-    private boolean isSameId(Object a, Object b) {
-        if (a == b) {
-            return true;
-        } else if (a instanceof byte[] && b instanceof byte[]) {
-            return Arrays.equals((byte[]) a, (byte[]) b);
-        } else {
-            return false;
-        }
-    }
-
