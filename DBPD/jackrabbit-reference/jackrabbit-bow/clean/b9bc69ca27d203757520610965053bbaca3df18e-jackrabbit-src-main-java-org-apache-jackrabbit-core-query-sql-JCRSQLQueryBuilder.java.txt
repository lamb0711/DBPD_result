JCR-638: Support lower-/upper-case functions

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@475677 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.query.PropertyFunctionQueryNode;
+
+                public Object visit(ASTLowerFunction node, Object data) {
+                    getIdentifier(node);
+                    return data;
+                }
+
+                public Object visit(ASTUpperFunction node, Object data) {
+                    getIdentifier(node);
+                    return data;
+                }
+
+                private void getIdentifier(SimpleNode node) {
+                    if (node.jjtGetNumChildren() > 0) {
+                        Node n = node.jjtGetChild(0);
+                        if (n instanceof ASTIdentifier) {
+                            ASTIdentifier identifier = (ASTIdentifier) n;
+                            if (tmp[0] == null) {
+                                tmp[0] = identifier.getName();
+                            } else if (tmp[1] == null) {
+                                tmp[1] = identifier.getName();
+                            }
+                        }
+                    }
+                }
+                node.childrenAccept(this, rel);
+                node.childrenAccept(this, rel);
+                node.childrenAccept(this, predicateNode);
+                node.childrenAccept(this, predicateNode);
+                    node.childrenAccept(this, rel);
-        // do nothing, should never be called actually
+        // do nothing
-        // do nothing, should never be called actually
+        // do nothing
+    public Object visit(ASTLowerFunction node, Object data) {
+        RelationQueryNode parent = (RelationQueryNode) data;
+        if (parent.getValueType() != QueryConstants.TYPE_STRING) {
+            String msg = "LOWER() function is only supported for String literal";
+            throw new IllegalArgumentException(msg);
+        }
+        parent.addOperand(new PropertyFunctionQueryNode(parent, PropertyFunctionQueryNode.LOWER_CASE));
+        return parent;
+    }
+
+    public Object visit(ASTUpperFunction node, Object data) {
+        RelationQueryNode parent = (RelationQueryNode) data;
+        if (parent.getValueType() != QueryConstants.TYPE_STRING) {
+            String msg = "UPPER() function is only supported for String literal";
+            throw new IllegalArgumentException(msg);
+        }
+        parent.addOperand(new PropertyFunctionQueryNode(parent, PropertyFunctionQueryNode.UPPER_CASE));
+        return parent;
+    }
+
