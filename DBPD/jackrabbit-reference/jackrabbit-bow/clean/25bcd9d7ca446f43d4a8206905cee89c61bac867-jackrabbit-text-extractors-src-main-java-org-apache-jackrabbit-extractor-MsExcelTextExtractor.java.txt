JCR-1534: Use POIExtractor wherever possible

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@647128 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.poi.hssf.usermodel.HSSFWorkbook;
-import org.apache.poi.hssf.usermodel.HSSFSheet;
-import org.apache.poi.hssf.usermodel.HSSFRow;
-import org.apache.poi.hssf.usermodel.HSSFCell;
+import org.apache.poi.hssf.extractor.ExcelExtractor;
-import java.io.CharArrayWriter;
-import java.io.CharArrayReader;
-import java.util.Iterator;
-        CharArrayWriter writer = new CharArrayWriter();
-            HSSFWorkbook workbook = new HSSFWorkbook(fs);
-
-            for (int i = 0; i < workbook.getNumberOfSheets(); i++) {
-                HSSFSheet sheet = workbook.getSheetAt(i);
-
-                Iterator rows = sheet.rowIterator();
-                while (rows.hasNext()) {
-                    HSSFRow row = (HSSFRow) rows.next();
-
-                    Iterator cells = row.cellIterator();
-                    while (cells.hasNext()) {
-                        HSSFCell cell = (HSSFCell) cells.next();
-                        switch (cell.getCellType()) {
-                        case HSSFCell.CELL_TYPE_NUMERIC:
-                            String num = Double.toString(cell.getNumericCellValue()).trim();
-                            if (num.length() > 0) {
-                                writer.write(num + " ");
-                            }
-                            break;
-                        case HSSFCell.CELL_TYPE_STRING:
-                            String text = cell.getStringCellValue().trim();
-                            if (text.length() > 0) {
-                                writer.write(text + " ");
-                            }
-                            break;
-                        }
-                    }
-                }
-            }
-
-            return new CharArrayReader(writer.toCharArray());
+            return new StringReader(new ExcelExtractor(fs).getText());
