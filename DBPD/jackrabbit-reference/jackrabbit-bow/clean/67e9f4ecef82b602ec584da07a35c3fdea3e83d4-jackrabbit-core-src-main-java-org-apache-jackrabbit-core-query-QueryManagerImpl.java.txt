JCR-2076: JSR 283: QOM and SQL2
- QueryObjectModelBuilder for SQL2 parser
- support for SQL2 in jackrabbit-core

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@785594 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Collections;
-import org.apache.jackrabbit.spi.commons.query.QueryTreeBuilderRegistry;
-     * Defines all supported query languages
-     */
-    private static final String[] SUPPORTED_QUERIES = QueryTreeBuilderRegistry.getSupportedLanguages();
-
-    /**
-     * List of all supported query languages
-     */
-    private static final List SUPPORTED_QUERIES_LIST
-            = Collections.unmodifiableList(Arrays.asList(SUPPORTED_QUERIES));
-
-    /**
+     * The query factory which is responsible to create query instances base
+     * on the passed query language.
+     */
+    private final QueryFactory queryFactory;
+
+    /**
-     * @param session
-     * @param itemMgr
-     * @param searchMgr
+     * @param session   the session for this query manager.
+     * @param itemMgr   the item manager of the session.
+     * @param searchMgr the search manager of this workspace.
+     * @throws RepositoryException if an error occurs while initializing the
+     *                             query manager.
-    public QueryManagerImpl(
-            final SessionImpl session,
-            final ItemManager itemMgr,
-            final SearchManager searchMgr)
+    public QueryManagerImpl(final SessionImpl session,
+                            final ItemManager itemMgr,
+                            final SearchManager searchMgr)
+        this.queryFactory = new CompoundQueryFactory(Arrays.asList(
+                new QOMQueryFactory(qomFactory, session.getValueFactory()),
+                new AQTQueryFactory() {
+                    public Query createQuery(String statement, String language)
+                            throws InvalidQueryException, RepositoryException {
+                        return searchMgr.createQuery(session, itemMgr, statement, language);
+                    }
+                }));
-        return searchMgr.createQuery(session, itemMgr, statement, language);
+        return queryFactory.createQuery(statement, language);
+        // TODO: support SQL2 and QOM
-        return (String[]) SUPPORTED_QUERIES_LIST.toArray(new String[SUPPORTED_QUERIES.length]);
+        List<String> languages = queryFactory.getSupportedLanguages();
+        return languages.toArray(new String[languages.size()]);
