JCR-3005: Make it possible to get multiple nodes in one call via davex

Collect all results to a Map before serializing the JSON result inside the JsonWriter class

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1179541 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.Repository;
+import java.util.HashMap;
+import java.util.Map;
-    private boolean getSingle(Session session, String path, DavResourceLocator locator, PrintWriter webdavWriter, boolean isFirst, boolean withPath) throws IOException, RepositoryException {
-        try {
-            Item item = session.getItem(path);
-            JsonWriter writer = new JsonWriter(webdavWriter);
-            if (item.isNode()) {
-                if (!isFirst) {
-                    webdavWriter.write(',');
-                }
-                if (withPath) {
-                    webdavWriter.write("\"" + path + "\":");
-                }
-                int depth = ((WrappingLocator) locator).getDepth();
-                if (depth < BatchReadConfig.DEPTH_INFINITE) {
-                    depth = getDepth((Node) item);
-                }
-                writer.write((Node) item, depth);
-
-                return true;
-            } else {
-                return false;
-            }
-        } catch (PathNotFoundException ex) {
-            return false;
-        } 
-    }
-
-    
-            Session session, String[] getArgs, DavResourceLocator locator,
+            Session session, String[] paths, DavResourceLocator locator,
-        webdavResponse.setContentType("text/plain;charset=utf-8");
-        webdavResponse.setStatus(DavServletResponse.SC_OK);
-        PrintWriter webdavWriter = webdavResponse.getWriter();
-        Boolean isFirst = true;
-        webdavWriter.write("{\"nodes\": {");
-        String path = locator.getRepositoryPath();
-        if (getSingle(session, path, locator, webdavWriter, isFirst, true)) {
-            isFirst = false;
-        }
-
-        for (String getArg : getArgs) {
+        // Collect all requested nodes
+        Map<String, Node> nodes = new HashMap<String, Node>();
+        Node node = session.getNode(locator.getRepositoryPath());
+        nodes.put(node.getPath(), node);
+        for (String path : paths) {
-                if (!getArg.equals(path) && getSingle(session, getArg, locator, webdavWriter, isFirst, true)) {
-                    isFirst = false;
-                }
-            } catch (RepositoryException ex) {
-
+                nodes.put(path, session.getNode(path));
+            } catch (PathNotFoundException ignore) {
+                // skip a missing node
-        webdavWriter.write("}}");
+
+        int depth = ((WrappingLocator) locator).getDepth();
+        if (depth < BatchReadConfig.DEPTH_INFINITE) {
+            depth = getDepth(node);
+        }
+
+        webdavResponse.setContentType("text/plain;charset=utf-8");
+        webdavResponse.setStatus(DavServletResponse.SC_OK);
+        new JsonWriter(webdavResponse.getWriter()).write(nodes, depth);
