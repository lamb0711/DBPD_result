WORK-IN-PROGRESS = missing deltaV features

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@448256 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.DavCompliance;
+import org.apache.jackrabbit.webdav.version.ActivityResource;
+            case DavMethods.DAV_MKACTIVITY:
+                doMkActivity(request, response, resource);
+                break;
+            case DavMethods.DAV_BASELINE_CONTROL:
+                doBaselineControl(request, response, resource);
+                break;
+     * The MKACTIVITY method
+     *
+     * @param request
+     * @param response
+     * @param resource
+     * @throws DavException
+     * @throws IOException
+     */
+    protected void doMkActivity(WebdavRequest request, WebdavResponse response,
+                                DavResource resource) throws DavException, IOException {
+        if (resource.exists()) {
+            log.warn("Unable to create activity: A resource already exists at the request-URL " + request.getRequestURL());
+            response.sendError(DavServletResponse.SC_FORBIDDEN);
+            return;
+        }
+
+        DavResource parentResource = resource.getCollection();
+        if (parentResource == null || !parentResource.exists() || !parentResource.isCollection()) {
+            // parent does not exist or is not a collection
+            response.sendError(DavServletResponse.SC_CONFLICT);
+            return;
+        }
+        // TODO: improve. see http://issues.apache.org/jira/browse/JCR-394
+        if (parentResource.getComplianceClass().indexOf(DavCompliance.ACTIVITY) < 0) {
+            response.sendError(DavServletResponse.SC_METHOD_NOT_ALLOWED);
+            return;
+        }
+
+        if (!(resource instanceof ActivityResource)) {
+            log.error("Unable to create activity: ActivityResource expected");
+            response.sendError(DavServletResponse.SC_INTERNAL_SERVER_ERROR);
+            return;
+        }
+
+        // try to add the new activity resource
+        parentResource.addMember(resource, getInputContext(request, request.getInputStream()));
+
+        // Note: mandatory cache control header has already been set upon response creation.
+        response.setStatus(DavServletResponse.SC_CREATED);
+    }
+
+    /**
+     * The BASELINECONTROL method
+     *
+     * @param request
+     * @param response
+     * @param resource
+     * @throws DavException
+     * @throws IOException
+     */
+    protected void doBaselineControl(WebdavRequest request, WebdavResponse response,
+                                     DavResource resource)
+        throws DavException, IOException {
+
+        if (!resource.exists()) {
+            log.warn("Unable to add baseline control. Resource does not exist " + resource.getHref());
+            response.sendError(DavServletResponse.SC_NOT_FOUND);
+            return;
+        }
+        // TODO: improve. see http://issues.apache.org/jira/browse/JCR-394
+        if (!(resource instanceof VersionControlledResource) || !resource.isCollection()) {
+            log.warn("BaselineControl is not supported by resource " + resource.getHref());
+            response.sendError(DavServletResponse.SC_METHOD_NOT_ALLOWED);
+            return;
+        }
+
+        // TODO : missing method on VersionControlledResource
+        throw new DavException(DavServletResponse.SC_NOT_IMPLEMENTED);
+        /*
+        ((VersionControlledResource) resource).addBaselineControl(request.getRequestDocument());
+        // Note: mandatory cache control header has already been set upon response creation.
+        response.setStatus(DavServletResponse.SC_OK);
+        */
+    }
+
+    /**
