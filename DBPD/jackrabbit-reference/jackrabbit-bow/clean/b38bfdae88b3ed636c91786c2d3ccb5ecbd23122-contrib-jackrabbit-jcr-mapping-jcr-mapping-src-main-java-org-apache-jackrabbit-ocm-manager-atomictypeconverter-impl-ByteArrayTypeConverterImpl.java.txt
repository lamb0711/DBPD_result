review the implementation. Use inputstream instead of String

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@575089 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+
-		String value = new String((byte[]) propValue);
-		return valueFactory.createValue(value);
+		  InputStream ins = new ByteArrayInputStream((byte[]) propValue);
+		  return valueFactory.createValue(ins);
-			return value.getString().getBytes();
+			return inputStreamToBytes(value.getStream());
-		catch (RepositoryException e)
+		catch (Exception e)
-			throw new IncorrectAtomicTypeException("Impossible to convert the value : " + value.toString() , e);
+			throw new IncorrectAtomicTypeException("Impossible to convert a binary value." , e);
-		return  "'" + object.toString() + "'";
+		throw new IncorrectAtomicTypeException("Binary cannot be used in queries");
+	
+	private byte[] inputStreamToBytes(InputStream in) throws IOException {
+
+		ByteArrayOutputStream out = new ByteArrayOutputStream(1024);
+		byte[] buffer = new byte[1024];
+		int len;
+
+		while((len = in.read(buffer)) >= 0)
+		out.write(buffer, 0, len);
+
+		in.close();
+		out.close();
+		return out.toByteArray();
+		}
