JCR-1181: Use local constants instead of the deprecated (see JCR-1169) QName class

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@587120 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.QName;
-
+    /**
+     * The JCR namespace URI.
+     */
+    private static final String JCR = "http://www.jcp.org/jcr/1.0";
+
+    /**
+     * The JCR mix namespace URI.
+     */
+    private static final String MIX = "http://www.jcp.org/jcr/mix/1.0";
+
-            Property property = getProperty(getName(QName.JCR_MIXINTYPES));
+            Property property = getProperty(getName(JCR, "mixinTypes"));
-        Property property = getProperty(getName(QName.JCR_PRIMARYTYPE));
+        Property property = getProperty(getName(JCR, "primaryType"));
-        if (isNodeType(getName(QName.MIX_REFERENCEABLE))) {
-            return getProperty(getName(QName.JCR_UUID)).getString();
+        if (isNodeType(getName(MIX, "referenceable"))) {
+            return getProperty(getName(JCR, "uuid")).getString();
-        if (isNodeType(getName(QName.MIX_VERSIONABLE))) {
+        if (isNodeType(getName(MIX, "versionable"))) {
-            return getProperty(getName(QName.JCR_ISCHECKEDOUT)).getBoolean();
+            return getProperty(getName(JCR, "isCheckedOut")).getBoolean();
-     * Returns the prefixed JCR name for the given {@link QName} using the
-     * current namespace mappings. The given name is assumed <em>not</em>
-     * to be in the default namespace, i.e. there will always be a non-empty
-     * prefix for the name.
+     * Returns the prefixed JCR name for the namespace URI and local name
+     * using the current namespace mappings.
-     * @param name namespaced name
+     * @param uri namespace URI
+     * @param name namespace-local name
-    private String getName(QName name) throws RepositoryException {
-        assert name.getNamespaceURI().length() > 0;
-        String prefix = getSession().getNamespacePrefix(name.getNamespaceURI());
-        return prefix + ":" + name.getLocalName();
+    private String getName(String uri, String name) throws RepositoryException {
+        String prefix = getSession().getNamespacePrefix(uri);
+        if (prefix.length() > 0) {
+            return prefix + ":" + name;
+        } else {
+            return name;
+        }
