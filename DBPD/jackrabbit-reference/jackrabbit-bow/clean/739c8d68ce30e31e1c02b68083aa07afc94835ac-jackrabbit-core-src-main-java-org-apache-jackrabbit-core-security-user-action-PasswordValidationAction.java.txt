JCR-3405 : Improvements to user management implementation 

- password utility
- configurable password hashing: algorithm, number of iterations
- improve handling of plaintxt passwords starting with {algorithm}

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1370420 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.security.authentication.CryptedSimpleCredentials;
+import org.apache.jackrabbit.core.security.user.PasswordUtility;
-        validatePassword(password);
+        validatePassword(password, false); // don't force validation of hashed passwords.
-        validatePassword(newPassword);
+        validatePassword(newPassword, true); // force validation of all passwords
+     * @param forceMatch If true the specified password is always validated;
+     * otherwise only if it is a plain text password.
-    private void validatePassword(String password) throws RepositoryException {
-        if (password != null && isPlainText(password)) {
+    private void validatePassword(String password, boolean forceMatch) throws RepositoryException {
+        if (password != null && (forceMatch || PasswordUtility.isPlainTextPassword(password))) {
-
-    private static boolean isPlainText(String password) {
-        try {
-            return !CryptedSimpleCredentials.buildPasswordHash(password).equals(password);
-        } catch (RepositoryException e) {
-            // failed to build hash from pw -> proceed with the validation.
-            return true;
-        }
-    }
