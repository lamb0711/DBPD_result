JCR-2087: parametrize generic types

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@816246 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Iterator;
+import java.util.List;
-    private final Stack stack = new Stack();
+    private final Stack<ImportState> stack = new Stack<ImportState>();
-    private ArrayList currentPropValues = new ArrayList();
+    private List<Importer.TextValue> currentPropValues = new ArrayList<Importer.TextValue>();
-            mixins = (Name[]) state.mixinNames.toArray(new Name[state.mixinNames.size()]);
+            mixins = state.mixinNames.toArray(new Name[state.mixinNames.size()]);
-                for (Iterator iter = state.props.iterator(); iter.hasNext();) {
-                    Importer.PropInfo pi = (Importer.PropInfo) iter.next();
+                for (Importer.PropInfo pi : state.props) {
-                ImportState current = (ImportState) stack.peek();
+                ImportState current = stack.peek();
-        ImportState state = (ImportState) stack.peek();
+        ImportState state = stack.peek();
-                    state.mixinNames = new ArrayList(currentPropValues.size());
+                    state.mixinNames = new ArrayList<Name>(currentPropValues.size());
-                Importer.TextValue[] values = (Importer.TextValue[]) currentPropValues.toArray(new Importer.TextValue[currentPropValues.size()]);
+                Importer.TextValue[] values = currentPropValues.toArray(new Importer.TextValue[currentPropValues.size()]);
-        ArrayList mixinNames;
+        List<Name> mixinNames;
-        ArrayList props = new ArrayList();
+        List<Importer.PropInfo> props = new ArrayList<Importer.PropInfo>();
