JCR-863: Use FileLock for locking instead of empty file

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@587450 13f79535-47bb-0310-9956-ffa450edef68

-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-import org.apache.lucene.index.IndexWriter;
+import org.apache.lucene.store.FSDirectory;
+import org.apache.lucene.store.NativeFSLockFactory;
-    /** The logger instance for this class */
-    private static final Logger log = LoggerFactory.getLogger(PersistentIndex.class);
-
-    /** Name of the write lock file */
-    private static final String WRITE_LOCK = IndexWriter.WRITE_LOCK_NAME;
-
-    /** Name of the commit lock file */
-    private static final String COMMIT_LOCK = "commit.lock";
-
-    /** Set to <code>true</code> if this index encountered locks on startup */
-    private boolean lockEncountered = false;
-
-     * @param create if <code>true</code> an existing index is deleted.
-    PersistentIndex(String name, File indexDir, boolean create,
+    PersistentIndex(String name, File indexDir,
-        super(analyzer, FSDirectory.getDirectory(indexDir, create),
+        super(analyzer, FSDirectory.getDirectory(indexDir, new NativeFSLockFactory(indexDir)),
-
-        // check if index is locked, probably from an unclean repository
-        // shutdown
-        File writeLock = new File(indexDir, WRITE_LOCK);
-        if (writeLock.exists()) {
-            lockEncountered = true;
-            log.warn("Removing write lock on search index.");
-            if (!writeLock.delete()) {
-                log.error("Unable to remove write lock on search index.");
-            }
-        }
-        File commitLock = new File(indexDir, COMMIT_LOCK);
-        if (commitLock.exists()) {
-            lockEncountered = true;
-            log.warn("Removing commit lock on search index.");
-            if (!commitLock.delete()) {
-                log.error("Unable to remove write lock on search index.");
-            }
-        }
-     * Returns <code>true</code> if this index encountered a lock on the file
-     * system during startup. This indicates a unclean shutdown.
-     *
-     * @return <code>true</code> if this index encountered a lock on startup;
-     *         <code>false</code> otherwise.
-     */
-    boolean getLockEncountered() {
-        return lockEncountered;
-    }
-
-    /**
