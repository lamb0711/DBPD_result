JCR-890: concurrent read-only access to a session

Make SessionContext an argument of SessionOperation.perform(). The ultimate goal is to be able to have the SessionOperation classes be the only place where the SessionContext can be accessed.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@962485 13f79535-47bb-0310-9956-ffa450edef68

- * An operation that is performed on a JCR session. Used by the
- * {@link SessionState} interface to implement generic controls like
- * synchronization and liveness checks on all session operation.
+ * Session operation. Used by the {@link SessionState} class to implement
+ * generic controls like synchronization and liveness checks on all session
+ * operation.
-public abstract class SessionOperation {
-
-    private final String name;
-
-    protected final SessionContext context;
+public interface SessionOperation {
-     * Creates a new session operation.
+     * Performs the session operation.
-     * @param name operation name
-     * @param context component context of the session
-     */
-    protected SessionOperation(String name, SessionContext context) {
-        this.name = name;
-        this.context = context;
-    }
-
-    /**
-     * Performs this operation. The default implementation does nothing;
-     * subclasses should override this method to implement custom operations.
-     *
+     * @param context component context of this session
-    public abstract void perform() throws RepositoryException;
-
-    /**
-     * Returns the name of this operation.
-     *
-     * @return operation name
-     */
-    public String toString() {
-        return name;
-    }
+    void perform(SessionContext context) throws RepositoryException;
