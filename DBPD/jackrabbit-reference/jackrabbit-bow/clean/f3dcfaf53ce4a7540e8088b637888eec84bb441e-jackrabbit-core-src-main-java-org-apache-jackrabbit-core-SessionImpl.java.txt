JCR-1169 Distribution of commons classes (adjust jackrabbit-core)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@590014 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.NameException;
-import org.apache.jackrabbit.name.NamePathResolver;
-import org.apache.jackrabbit.name.NamespaceResolver;
-import org.apache.jackrabbit.name.Path;
-import org.apache.jackrabbit.name.QName;
+import org.apache.jackrabbit.conversion.NameException;
+import org.apache.jackrabbit.conversion.NamePathResolver;
+import org.apache.jackrabbit.conversion.DefaultNamePathResolver;
+import org.apache.jackrabbit.conversion.IllegalNameException;
+import org.apache.jackrabbit.conversion.MalformedPathException;
+import org.apache.jackrabbit.namespace.NamespaceResolver;
+import org.apache.jackrabbit.spi.Path;
+import org.apache.jackrabbit.spi.Name;
+     * Name and Path resolver
+     */
+    protected final NamePathResolver namePathResolver;
+
+    /**
-        ntMgr = new NodeTypeManagerImpl(rep.getNodeTypeRegistry(), rep.getNamespaceRegistry(), getNamespaceResolver(), rep.getDataStore());
+        namePathResolver = new DefaultNamePathResolver(nsMappings, true);
+        ntMgr = new NodeTypeManagerImpl(rep.getNodeTypeRegistry(), rep.getNamespaceRegistry(), getNamespaceResolver(), getNamePathResolver(), rep.getDataStore());
+     * Returns the <code>NamePathResolver</code> of this session.
+     *
+     * @return the <code>NamePathResolver</code> of this session
+     */
+    public NamePathResolver getNamePathResolver() {
+        return namePathResolver;
+    }
+
+    /**
-        if (node.isNodeType(QName.MIX_REFERENCEABLE)) {
+        if (node.isNodeType(Name.MIX_REFERENCEABLE)) {
-    public String getJCRName(QName name) throws NamespaceException {
-        return nsMappings.getNameResolver().getJCRName(name);
+    public String getJCRName(Name name) throws NamespaceException {
+        return namePathResolver.getJCRName(name);
-    public QName getQName(String name) throws NameException, NamespaceException {
-        return nsMappings.getNameResolver().getQName(name);
+    public Name getQName(String name) throws IllegalNameException, NamespaceException {
+        return namePathResolver.getQName(name);
-        return nsMappings.getPathResolver().getJCRPath(path);
+        return namePathResolver.getJCRPath(path);
-    public Path getQPath(String path) throws NameException, NamespaceException {
-        return nsMappings.getPathResolver().getQPath(path);
+    public Path getQPath(String path) throws MalformedPathException, IllegalNameException, NamespaceException {
+        return namePathResolver.getQPath(path);
-        Path.PathElement srcName;
+        Path.Element srcName;
-        Path.PathElement destName;
+        Path.Element destName;
