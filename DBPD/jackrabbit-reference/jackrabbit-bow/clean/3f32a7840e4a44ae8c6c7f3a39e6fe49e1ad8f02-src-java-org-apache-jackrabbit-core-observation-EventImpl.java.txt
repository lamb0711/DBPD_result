Initial checkin of QueryManager with support for JCRQL (search implementation is not complete, some features are missing: searching for distinct same name sibling, sorting not yet implemented, indexing contains potential for optimizing)

Changed observation to support SynchronousEventListeners. The search registers itself as synchronous event listener. Also changed access checking on events sent out, because checking access on removed nodes need to be performed before they actually get removed.

Extended config.xml, which allows now to specify an index location for the QueryManager.

Added jar files needed for search.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47399 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.ItemManager;
-import org.apache.jackrabbit.core.NodeId;
-final class EventImpl implements Event {
+public final class EventImpl implements Event {
-    private final ItemManager itemMgr;
+    //private final ItemManager itemMgr;
-    EventImpl(SessionImpl session, ItemManager itemMgr, EventState eventState) {
+    EventImpl(SessionImpl session, /*ItemManager itemMgr, */ EventState eventState) {
-	this.itemMgr = itemMgr;
+	//this.itemMgr = itemMgr;
-	return itemMgr.getItem(new NodeId(eventState.getParentUUID())).getPath();
+	try {
+	    return eventState.getParentPath().toJCRPath(session.getNamespaceResolver()); //itemMgr.getItem(new NodeId(eventState.getParentUUID())).getPath();
+	} catch (NoPrefixDeclaredException e) {
+	    String msg = "internal error: encountered unregistered namespace in path";
+	    log.error(msg, e);
+	    throw new RepositoryException(msg, e);
+	}
-	} catch (NoPrefixDeclaredException npde) {
+	} catch (NoPrefixDeclaredException e) {
-	    log.error(msg, npde);
-	    throw new RepositoryException(msg, npde);
+	    log.error(msg, e);
+	    throw new RepositoryException(msg, e);
+     * Returns the uuid of the parent node.
+     *
+     * @return the uuid of the parent node.
+     */
+    public String getParentUUID() {
+	return eventState.getParentUUID();
+    }
+
+    /**
+     * Returns the UUID of a child node operation.
+     * If this <code>Event</code> was generated for a property
+     * operation this method returns <code>null</code>.
+     * @return the UUID of a child node operation.
+     */
+    public String getChildUUID() {
+	return eventState.getChildUUID();
+    }
+
+    /**
