JCR-2762: Optimize bundle serialization

Since practically all of the names in the standard JCR namespaces are already included in BundleNames, we can use the namespace index field more efficiently to avoid duplicate serialization of most custom namespace URIs.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1022486 13f79535-47bb-0310-9956-ffa450edef68

+     * The default namespace and the first six other namespaces used in this
+     * bundle. Used by the {@link #writeName(Name)} method to keep track of
+     * already seen namespaces.
+     */
+    private final String[] namespaces =
+        // NOTE: The length of this array must be seven
+        { Name.NS_DEFAULT_URI, null, null, null, null, null, null };
+
+    /**
+        assert namespaces.length == 7;
-     * The three-bit namespace index identifies either a known namespace
-     * in the {@link BundleNames} class (values 0 - 6) or an explicit
-     * namespace URI string that is written using
-     * {@link DataOutputStream#writeUTF(String)} right after this byte
-     * (value 7).
+     * The three-bit namespace index identifies the namespace of the name.
+     * The serializer keeps track of the default namespace (value 0) and at
+     * most six other other namespaces (values 1-6), in the order they appear
+     * in the bundle. When one of these six custom namespaces first appears
+     * in the bundle, then the namespace URI is written using
+     * {@link DataOutputStream#writeUTF(String)} right after this byte.
+     * Later uses of such a namespace simply refers back to the already read
+     * namespace URI string. Any other namespaces are identified with value 7
+     * and always written to the bundle after this byte.
-            int ns = BundleNames.namespaceToIndex(uri) & 0x07;
+            int ns = 0;
+            while (ns < namespaces.length
+                    && namespaces[ns] != null
+                    && !namespaces[ns].equals(uri)) {
+                ns++;
+            }
-            if (ns == 0x07) {
+            if (ns == namespaces.length || namespaces[ns] == null) {
+                if (ns < namespaces.length) {
+                    namespaces[ns] = uri;
+                }
