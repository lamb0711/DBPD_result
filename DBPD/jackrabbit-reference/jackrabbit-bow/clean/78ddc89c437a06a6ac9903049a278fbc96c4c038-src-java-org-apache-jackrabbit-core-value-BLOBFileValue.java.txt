- cleaned up persistence manager code in core
- improved space efficiency of simple serialization format as
  used by ObjectPersistenceManager, InMemPersistenceManager
  and SimpleDbPersistenceManager
- added configuration option to SimpleDbPersistenceManager
  whether BLOBs should be stored externally in the file system
  (default) or if they should be stored inline in the db
- prepared persistence managers for coming data model change 
  (new ItemState#modCount field)

see http://thread.gmane.org/gmane.comp.apache.jackrabbit.devel/4137

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@329224 13f79535-47bb-0310-9956-ffa450edef68

+                    // @todo FIXME see http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4513817http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4513817
-     * {@inheritDoc}
-     */
-    public boolean equals(Object obj) {
-        if (this == obj) {
-            return true;
-        }
-        if (obj instanceof BLOBFileValue) {
-            BLOBFileValue other = (BLOBFileValue) obj;
-            return ((file == null ? other.file == null : file.equals(other.file))
-                    && (fsResource == null ? other.fsResource == null : fsResource.equals(other.fsResource))
-                    && Arrays.equals(buffer, other.buffer));
-        }
-        return false;
-    }
-
-    /**
-     * Returns zero to satisfy the Object equals/hashCode contract.
-     * This class is mutable and not meant to be used as a hash key.
-     *
-     * @return always zero
-     * @see Object#hashCode()
-     */
-    public int hashCode() {
-        return 0;
-    }
-
-    /**
+    /**
+     * {@inheritDoc}
+     */
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if (obj instanceof BLOBFileValue) {
+            BLOBFileValue other = (BLOBFileValue) obj;
+            return ((file == null ? other.file == null : file.equals(other.file))
+                    && (fsResource == null ? other.fsResource == null : fsResource.equals(other.fsResource))
+                    && Arrays.equals(buffer, other.buffer));
+        }
+        return false;
+    }
+
+    /**
+     * Returns zero to satisfy the Object equals/hashCode contract.
+     * This class is mutable and not meant to be used as a hash key.
+     *
+     * @return always zero
+     * @see Object#hashCode()
+     */
+    public int hashCode() {
+        return 0;
+    }
+
