fixing document view xml import:
merge adjacent character chunks reported by ContentHandler.characters()
into one jcr:xmltext/jcr:xmlcharacters property

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@55211 13f79535-47bb-0310-9956-ffa450edef68

+    // buffer used to merge adjacent character data
+    private StringBuffer text;
+
+        text = new StringBuffer();
+    }
+
+    /**
+     * Stores character data encountered in <code>{@link #characters(char[], int, int)}</code>
+     * as <code>jcr:xmlcharacters</code> property of <code>jcr:xmltext</code>
+     * child node.
+     * @param parent
+     * @param text
+     * @throws SAXException
+     */
+    protected void addTextNode(NodeImpl parent, String text) throws SAXException {
+        if (text.length() > 0) {
+            try {
+                NodeImpl txtNode = (NodeImpl) parent.addNode(DocViewSAXEventGenerator.NODENAME_XMLTEXT);
+                StringValue val = new StringValue(text.toString());
+                txtNode.setProperty(DocViewSAXEventGenerator.PROPNAME_XMLCHARACTERS, val);
+            } catch (RepositoryException re) {
+                throw new SAXException(re);
+            }
+        }
+        if (text.length() > 0) {
+            // there is character data that needs to be added to the current node
+            addTextNode((NodeImpl) parents.peek(), text.toString());
+            // reset buffer
+            text.setLength(0);
+        }
+
-         * character data in document view:
-         * store as jcr:xmlcharacters property of jcr:xmltext node
-         * (need to store as node in order to maintain ordering)
-         *
-         * todo merge contiguous character data into one jcr:xmltext node
+         * buffer character data; will be processed
+         * in endElement and startElement method
-        try {
-            NodeImpl currentParent = (NodeImpl) parents.peek();
-            NodeImpl txtNode = (NodeImpl) currentParent.addNode(DocViewSAXEventGenerator.NODENAME_XMLTEXT);
-            StringValue val = new StringValue(new String(ch, start, length));
-            txtNode.setProperty(DocViewSAXEventGenerator.PROPNAME_XMLCHARACTERS, val);
-        } catch (RepositoryException re) {
-            throw new SAXException(re);
-        }
+        text.append(ch, start, length);
+        if (text.length() > 0) {
+            // there is character data that needs to be added to the current node
+            addTextNode((NodeImpl) parents.peek(), text.toString());
+            // reset buffer
+            text.setLength(0);
+        }
