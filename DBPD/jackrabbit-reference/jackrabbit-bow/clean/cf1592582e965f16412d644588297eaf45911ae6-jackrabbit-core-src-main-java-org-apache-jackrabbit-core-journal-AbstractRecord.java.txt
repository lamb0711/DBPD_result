JCR-2887 : Split PrivilegeRegistry in a per-session manager instance and a repository level registry [work in progress]

- clustering support
- move definition & def-reader/writer to spi-commons

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1095338 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.io.OutputStreamWriter;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Map;
+import java.util.Set;
+import org.apache.jackrabbit.spi.commons.privilege.PrivilegeDefinition;
+import org.apache.jackrabbit.spi.commons.privilege.PrivilegeDefinitionReader;
+import org.apache.jackrabbit.spi.commons.privilege.PrivilegeDefinitionWriter;
+import org.apache.jackrabbit.spi.commons.privilege.PrivilegeHandler;
+    public void writePrivilegeDef(PrivilegeDefinition privilegeDefinition) throws JournalException {
+        try {
+            Map<String, String> nsMapping = new HashMap<String, String>();
+            String uri = privilegeDefinition.getName().getNamespaceURI();
+            nsMapping.put(nsResolver.getPrefix(uri), uri);
+            for (Name n : privilegeDefinition.getDeclaredAggregateNames()) {
+                nsMapping.put(nsResolver.getPrefix(n.getNamespaceURI()), n.getNamespaceURI());
+            }
+
+            StringWriter sw = new StringWriter();
+            PrivilegeDefinitionWriter writer = new PrivilegeDefinitionWriter("text/xml");
+            writer.writeDefinitions(sw, new PrivilegeDefinition[] {privilegeDefinition}, nsMapping);
+            sw.close();
+
+            writeString(sw.toString());
+
+        } catch (IOException e) {
+            String msg = "I/O error while writing privilege definition.";
+            throw new JournalException(msg, e);
+        } catch (NamespaceException e) {
+            String msg = "NamespaceException error while writing privilege definition.";
+            throw new JournalException(msg, e);
+        }
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+     * {@inheritDoc}
+     */
+    public PrivilegeDefinition readPrivilegeDef() throws JournalException {
+        try {
+            StringReader sr = new StringReader(readString());
+            PrivilegeDefinitionReader reader = new PrivilegeDefinitionReader(sr, "text/xml");
+            PrivilegeDefinition[] defs = reader.getPrivilegeDefinitions();
+
+            if (defs.length != 1) {
+                throw new JournalException("Expected one privilege definition: got " + defs.length);
+            }
+            return defs[0];
+
+        } catch (org.apache.jackrabbit.spi.commons.privilege.ParseException e) {
+            String msg = "Parse error while reading privilege definition.";
+            throw new JournalException(msg, e);
+        }
+    }
+
+    /**
