DavMethodBase:
- separate RequestEntity impl. for xml documents 
- missing close on response stream
- preprocessing the multistatus caused getResponseDocument to return null.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@451315 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.commons.httpclient.methods.StringRequestEntity;
-import org.apache.xml.serialize.OutputFormat;
-import org.apache.xml.serialize.XMLSerializer;
-import java.io.ByteArrayOutputStream;
+    private Document responseDocument;
-        InputStream in = getResponseBodyAsStream();
-        if (in == null) {
-            return null;
-        }
-        try {
-            DocumentBuilder docBuilder = BUILDER_FACTORY.newDocumentBuilder();
-            Document document = docBuilder.parse(in);
-            return document;
-        } catch (ParserConfigurationException e) {
-            throw new IOException(e.getMessage());
-        } catch (SAXException e) {
-            throw new IOException(e.getMessage());
-        }
+        if (responseDocument != null) {
+            // response has already been read
+            return responseDocument;
+        } else {
+            // read response and try to build a xml document
+            InputStream in = getResponseBodyAsStream();
+            if (in == null) {
+                return null;
+            }
+            try {
+                DocumentBuilder docBuilder = BUILDER_FACTORY.newDocumentBuilder();
+                responseDocument = docBuilder.parse(in);
+                return responseDocument;
+            } catch (ParserConfigurationException e) {
+                throw new IOException(e.getMessage());
+            } catch (SAXException e) {
+                throw new IOException(e.getMessage());
+            } finally {
+                in.close();
+            }
+        }     
-        ByteArrayOutputStream out = new ByteArrayOutputStream();
-        OutputFormat format = new OutputFormat("xml", "UTF-8", false);
-        XMLSerializer serializer = new XMLSerializer(out, format);
-        serializer.setNamespaces(true);
-        serializer.asDOMSerializer().serialize(requestBody);
-        setRequestEntity(new StringRequestEntity(out.toString(), "text/xml", "UTF-8"));
+        setRequestEntity(new XmlRequestEntity(requestBody));
