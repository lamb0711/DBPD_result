fixing indention

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@385460 13f79535-47bb-0310-9956-ffa450edef68

-	log.info("RepositoryAccessServlet initializing...");
+        log.info("RepositoryAccessServlet initializing...");
-	log.info("RepositoryAccessServlet initialized.");
+        log.info("RepositoryAccessServlet initialized.");
-	// retrieve JNDI Context environment
-	try {
-	    Properties env = new Properties();
-	    Enumeration names = getServletConfig().getInitParameterNames();
-	    while (names.hasMoreElements()) {
-		String name = (String) names.nextElement();
-		if (name.startsWith("java.naming.")) {
+        // retrieve JNDI Context environment
+        try {
+            Properties env = new Properties();
+            Enumeration names = getServletConfig().getInitParameterNames();
+            while (names.hasMoreElements()) {
+                String name = (String) names.nextElement();
+                if (name.startsWith("java.naming.")) {
-		}
-	    }
-	    return new InitialContext(env);
-	} catch (NamingException e) {
-	    log.error("Create initial context: " + e.toString());
-	    return null;
-	}
+                }
+            }
+            return new InitialContext(env);
+        } catch (NamingException e) {
+            log.error("Create initial context: " + e.toString());
+            return null;
+        }
-	// setup repository name
-	return getServletConfig().getInitParameter(INIT_PARAM_RMI_URI);
+        // setup repository name
+        return getServletConfig().getInitParameter(INIT_PARAM_RMI_URI);
-	    throws RemoteException, MalformedURLException, NotBoundException;
+            throws RemoteException, MalformedURLException, NotBoundException;
-	    throws MalformedURLException, NotBoundException, RemoteException {
-	System.setProperty("java.rmi.server.useCodebaseOnly", "true");
-	return new ClientRepositoryFactory().getRepository(uri);
-   }
+            throws MalformedURLException, NotBoundException, RemoteException {
+        System.setProperty("java.rmi.server.useCodebaseOnly", "true");
+        return new ClientRepositoryFactory().getRepository(uri);
+    }
