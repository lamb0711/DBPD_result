JCR-442: Committed patch-060808-backup.txt from Nicolas.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@429606 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.BufferedInputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.util.zip.ZipException;
+import org.apache.jackrabbit.core.nodetype.InvalidNodeTypeDefException;
+import org.apache.jackrabbit.core.nodetype.xml.NodeTypeReader;
+import org.apache.jackrabbit.name.IllegalNameException;
+import org.apache.jackrabbit.name.UnknownPrefixException;
-    public NodeTypeBackup(RepositoryImpl repo, BackupConfig conf) throws LoginException, RepositoryException {
-        super(repo, conf);
-     }
-    
+    public NodeTypeBackup(RepositoryImpl repo, BackupConfig conf, String login, String password) throws LoginException, RepositoryException {
+        super(repo, conf, login, password);
+    }
+
-     }
-
+    }
-        //Can we assume the default wsp always exist?
-        
+
-        h.write("NodeType", out);     
+        h.write("NodeType", out);
-    
-    
+
-     * @throws NoSuchNodeTypeException 
+     * @throws NoSuchNodeTypeException
-    QName[] qn = ntreg.getRegisteredNodeTypes();
-    NodeTypeDef[] ntd = new NodeTypeDef[qn.length];
-    
-    for (int i=0; i < qn.length; i++) {
-        ntd[i] = ntreg.getNodeTypeDef(qn[i]);
+        QName[] qn = ntreg.getRegisteredNodeTypes();
+        NodeTypeDef[] ntd = new NodeTypeDef[qn.length];
+
+        for (int i=0; i < qn.length; i++) {
+            ntd[i] = ntreg.getNodeTypeDef(qn[i]);
+        }
+
+        return ntd;
-    return ntd;
-    }
-   
-    public void restore(BackupIOHandler h) {
-        // TODO Auto-generated method stub
+    public void restore(BackupIOHandler h) throws ZipException, IOException, RepositoryException {
+        File f = new File(this.getConf().getWorkFolder() + "Node.xml");
+        try {
+            h.read("NodeType", f);
+            FileInputStream is = new FileInputStream(f);
+            NodeTypeReader r = new NodeTypeReader(is);
+            NodeTypeDef[] ntds = r.getNodeTypeDefs();
+
+            Session s = this.getSession();
+            Workspace wsp = s.getWorkspace();
+
+            NodeTypeManagerImpl ntm = (NodeTypeManagerImpl) wsp.getNodeTypeManager();
+            NodeTypeRegistry ntreg = ntm.getNodeTypeRegistry();
+
+            for (int i = 0; i < ntds.length; i++) {
+                if (!ntreg.isRegistered(ntds[i].getName())) {
+                    ntreg.registerNodeType(ntds[i]);
+                }
+            }
+            NamespaceRegistry ns = wsp.getNamespaceRegistry();
+
+        } catch (IllegalNameException e) {
+            new RepositoryException();
+        } catch (UnknownPrefixException e) {
+            new RepositoryException();
+        } catch (InvalidNodeTypeDefException e) {
+            new RepositoryException();
+        }
+        finally {
+            f.delete();
+        }
-
