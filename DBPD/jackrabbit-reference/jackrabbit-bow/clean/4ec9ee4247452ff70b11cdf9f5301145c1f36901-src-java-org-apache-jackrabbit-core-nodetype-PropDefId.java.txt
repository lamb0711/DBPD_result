- removed @author and @version (i.e. $Revision & $Id) tags
- removed tab characters from java source code

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47648 13f79535-47bb-0310-9956-ffa450edef68

- *
- * @author Stefan Guggisberg
- * @version $Revision: 1.2 $
-	if (def == null) {
-	    throw new IllegalArgumentException("PropDef argument can not be null");
-	}
-	// build key (format: <declaringNodeType>/<name>/<requiredType>/<multiple>)
-	StringBuffer sb = new StringBuffer();
+        if (def == null) {
+            throw new IllegalArgumentException("PropDef argument can not be null");
+        }
+        // build key (format: <declaringNodeType>/<name>/<requiredType>/<multiple>)
+        StringBuffer sb = new StringBuffer();
-	sb.append(def.getDeclaringNodeType().toString());
-	sb.append('/');
-	if (def.definesResidual()) {
-	    sb.append('*');
-	} else {
-	    sb.append(def.getName().toString());
-	}
-	sb.append('/');
-	sb.append(def.getRequiredType());
-	sb.append('/');
-	sb.append(def.isMultiple() ? 1 : 0);
+        sb.append(def.getDeclaringNodeType().toString());
+        sb.append('/');
+        if (def.definesResidual()) {
+            sb.append('*');
+        } else {
+            sb.append(def.getName().toString());
+        }
+        sb.append('/');
+        sb.append(def.getRequiredType());
+        sb.append('/');
+        sb.append(def.isMultiple() ? 1 : 0);
-	id = sb.toString().hashCode();
+        id = sb.toString().hashCode();
-	this.id = id;
+        this.id = id;
-	if (s == null) {
-	    throw new IllegalArgumentException("invalid PropDefId literal");
-	}
-	return new PropDefId(Integer.parseInt(s));
+        if (s == null) {
+            throw new IllegalArgumentException("invalid PropDefId literal");
+        }
+        return new PropDefId(Integer.parseInt(s));
-	if (this == obj) {
-	    return true;
-	}
-	if (obj instanceof PropDefId) {
-	    PropDefId other = (PropDefId) obj;
-	    return id == other.id;
-	}
-	return false;
+        if (this == obj) {
+            return true;
+        }
+        if (obj instanceof PropDefId) {
+            PropDefId other = (PropDefId) obj;
+            return id == other.id;
+        }
+        return false;
-	return Integer.toString(id);
+        return Integer.toString(id);
-	return id;
+        return id;
