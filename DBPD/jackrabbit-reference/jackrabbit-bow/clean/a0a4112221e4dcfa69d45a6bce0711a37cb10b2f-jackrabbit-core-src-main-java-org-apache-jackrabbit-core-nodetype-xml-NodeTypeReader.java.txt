JCR-1591: JSR 283: NodeType Management (WIP...)
JCR-2091: Searchability settings in PropertyDefinition (WIP...)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@774832 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.query.qom.QueryObjectModelConstants;
+        type.setAbstract(Boolean.valueOf(
+                walker.getAttribute(Constants.ISABSTRACT_ATTRIBUTE))
+                .booleanValue());
+        type.setQueryable(Boolean.valueOf(
+                walker.getAttribute(Constants.ISQUERYABLE_ATTRIBUTE))
+                .booleanValue());
+        def.setFullTextSearchable(Boolean.valueOf(
+                walker.getAttribute(Constants.ISFULLTEXTSEARCHABLE_ATTRIBUTE))
+                .booleanValue());
+        def.setQueryOrderable(Boolean.valueOf(
+                walker.getAttribute(Constants.ISQUERYORDERABLE_ATTRIBUTE))
+                .booleanValue());
+        String s = walker.getAttribute(Constants.AVAILABLEQUERYOPERATORS_ATTRIBUTE);
+        if (s != null && s.length() > 0) {
+            String[] ops = s.split(" ");
+            List queryOps = new ArrayList();
+            for (int i = 0; i < ops.length; i++) {
+                String op = ops[i].trim();
+                if (op.equals(Constants.EQ_ENTITY)) {
+                    queryOps.add(QueryObjectModelConstants.JCR_OPERATOR_EQUAL_TO);
+                } else if (op.equals(Constants.NE_ENTITY)) {
+                    queryOps.add(QueryObjectModelConstants.JCR_OPERATOR_NOT_EQUAL_TO);
+                } else if (op.equals(Constants.LT_ENTITY)) {
+                    queryOps.add(QueryObjectModelConstants.JCR_OPERATOR_LESS_THAN);
+                } else if (op.equals(Constants.LE_ENTITY)) {
+                    queryOps.add(QueryObjectModelConstants.JCR_OPERATOR_LESS_THAN_OR_EQUAL_TO);
+                } else if (op.equals(Constants.GT_ENTITY)) {
+                    queryOps.add(QueryObjectModelConstants.JCR_OPERATOR_GREATER_THAN);
+                } else if (op.equals(Constants.GE_ENTITY)) {
+                    queryOps.add(QueryObjectModelConstants.JCR_OPERATOR_GREATER_THAN_OR_EQUAL_TO);
+                } else if (op.equals(Constants.LIKE_ENTITY)) {
+                    queryOps.add(QueryObjectModelConstants.JCR_OPERATOR_LIKE);
+                } else {
+                    throw new InvalidNodeTypeDefException("'" + op + "' is not a valid query operator");
+                }
+            }
+            def.setAvailableQueryOperators((String[]) queryOps.toArray(new String[queryOps.size()]));
+
+        }
