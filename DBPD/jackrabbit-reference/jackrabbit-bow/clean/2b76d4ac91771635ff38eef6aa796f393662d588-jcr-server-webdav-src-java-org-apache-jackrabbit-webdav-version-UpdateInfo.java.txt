minor improvement, javadoc

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@397819 13f79535-47bb-0310-9956-ffa450edef68

- * ANY value: A sequence of elements with at most one DAV:version element and at
- * most one DAV:prop element.
+ * ANY value: A sequence of elements with at most one DAV:label-name or
+ * DAV:version element (but not both).
+ * In addition at one DAV:prop element can be present.
+ *
+ * &lt;!ELEMENT label-name (#PCDATA)&gt; PCDATA value: string
- * &lt;!ELEMENT update ( (version+ | label-name | workspace ) , (prop)?, (removeExisting)? ) &gt;
- * &lt;!ELEMENT version (href) &gt;
+ * &lt;!ELEMENT update ( (version | label-name | workspace ) , (prop)?, (removeExisting)? ) &gt;
+ * &lt;!ELEMENT version (href+) &gt;
-    private final Element updateElement;
-    private final DavPropertyNameSet propertyNameSet;
-    private String[] versionHref;
-    private String[] labelName;
-    private String workspaceHref;
+    public static final int UPDATE_BY_VERSION = 0;
+    public static final int UPDATE_BY_LABEL = 1;
+    public static final int UPDATE_BY_WORKSPACE = 2;
+
+    private Element updateElement;
+    private DavPropertyNameSet propertyNameSet = new DavPropertyNameSet();
+
+    private String[] source;
+    private int type;
+
+    public UpdateInfo(String[] updateSource, int updateType, DavPropertyNameSet propertyNameSet) {
+        if (updateSource == null || updateSource.length == 0) {
+            throw new IllegalArgumentException("Version href array must not be null and have a minimal length of 1.");
+        }
+        if (updateType < UPDATE_BY_VERSION || updateType > UPDATE_BY_WORKSPACE) {
+            throw new IllegalArgumentException("Illegal type of UpdateInfo.");
+        }
+        this.type = updateType;
+        this.source = (updateType == UPDATE_BY_VERSION) ? updateSource : new String[] {updateSource[0]};
+        if (propertyNameSet != null) {
+            this.propertyNameSet = propertyNameSet;
+        }
+    }
-            versionHref = (String[])hrefList.toArray(new String[hrefList.size()]);
+            source = (String[])hrefList.toArray(new String[hrefList.size()]);
-        if (!done) {
-            it = DomUtil.getChildren(updateElement, XML_LABEL_NAME, NAMESPACE);
-            while (it.hasNext()) {
-                List labelList = new ArrayList();
-                Element el = it.nextElement();
-                labelList.add(DomUtil.getText(el));
-                labelName = (String[])labelList.toArray(new String[labelList.size()]);
-                done = true;
-            }
+        if (!done && DomUtil.hasChildElement(updateElement, XML_LABEL_NAME, NAMESPACE)) {
+            source = new String[] {DomUtil.getChildText(updateElement, XML_LABEL_NAME, NAMESPACE)};
+            done = true;
-                workspaceHref = DomUtil.getChildTextTrim(wspElem, DavConstants.XML_HREF, DavConstants.NAMESPACE);
+                source = new String[] {DomUtil.getChildTextTrim(wspElem, DavConstants.XML_HREF, DavConstants.NAMESPACE)};
-       return versionHref;
+       return (type == UPDATE_BY_VERSION) ? source : null;
-       return labelName;
+       return (type == UPDATE_BY_LABEL) ? source : null;
-       return workspaceHref;
+       return (type == UPDATE_BY_WORKSPACE) ? source[0] : null;
-        Element elem = (Element)document.importNode(updateElement, true);
+        Element elem;
+        if (updateElement != null) {
+            elem = (Element)document.importNode(updateElement, true);
+        } else {
+            elem = DomUtil.createElement(document, XML_UPDATE, NAMESPACE);
+            switch (type) {
+                case UPDATE_BY_VERSION:
+                    Element vE = DomUtil.addChildElement(elem, XML_VERSION, NAMESPACE);
+                    for (int i = 0; i < source.length; i++) {
+                        vE.appendChild(DomUtil.hrefToXml(source[i], document));
+                    }
+                    break;
+                case UPDATE_BY_LABEL:
+                    DomUtil.addChildElement(elem, XML_LABEL_NAME, NAMESPACE, source[0]);
+                    break;
+                case UPDATE_BY_WORKSPACE:
+                    DomUtil.addChildElement(elem, XML_WORKSPACE, NAMESPACE, source[0]);
+                // no default.
+            }
+        }
-
