JCR-3052 - spi2dav: avoid reusing the same document in repositoryserviceimpl

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1157175 13f79535-47bb-0310-9956-ffa450edef68

-    private final Document domFactory;
-            domFactory = DomUtil.createDocument();
-        } catch (ParserConfigurationException e) {
-            throw new RepositoryException(e);
-        }
-
-        try {
-            uriResolver = new URIResolverImpl(repositoryUri, this, domFactory);
+            uriResolver = new URIResolverImpl(repositoryUri, this, DomUtil.createDocument());
+        } catch (ParserConfigurationException e) {
+            throw new RepositoryException(e);
-            reportInfo.setContentElement(DomUtil.hrefToXml(uri, domFactory));
+            reportInfo.setContentElement(DomUtil.hrefToXml(uri, DomUtil.createDocument()));
+        } catch (ParserConfigurationException e) {
+            throw new RepositoryException(e);
-                LockDiscovery ld = LockDiscovery.createFromXml(p.toXml(domFactory));
+                LockDiscovery ld = LockDiscovery.createFromXml(p.toXml(DomUtil.createDocument()));
+        } catch (ParserConfigurationException e) {
+            throw new RepositoryException(e);
-                Element uElem = UpdateInfo.createUpdateElement(updateSource, updateType, domFactory);
+                Element uElem = UpdateInfo.createUpdateElement(updateSource, updateType, DomUtil.createDocument());
+        } catch (ParserConfigurationException e) {
+            throw new RepositoryException(e);
+            Document doc = DomUtil.createDocument();
-            Element mElem = MergeInfo.createMergeElement(new String[] {wspHref}, !bestEffort, false, domFactory);
+            Element mElem = MergeInfo.createMergeElement(new String[] {wspHref}, !bestEffort, false, doc);
-                mElem.appendChild(DomUtil.depthToXml(false, domFactory));
+                mElem.appendChild(DomUtil.depthToXml(false, doc));
+        } catch (ParserConfigurationException e) {
+            throw new RepositoryException(e);
-                Element discEl = disc.toXml(domFactory);
+                Element discEl = disc.toXml(DomUtil.createDocument());
+        } catch (ParserConfigurationException e) {
+            throw new RepositoryException(e);
-    public Iterator<QNodeTypeDefinition> getQNodeTypeDefinitions(SessionInfo sessionInfo) throws RepositoryException {
-        ReportInfo info = new ReportInfo(JcrRemotingConstants.REPORT_NODETYPES, ItemResourceConstants.NAMESPACE);
-        info.setContentElement(DomUtil.createElement(domFactory, NodeTypeConstants.XML_REPORT_ALLNODETYPES, ItemResourceConstants.NAMESPACE));
-
+    public Iterator<QNodeTypeDefinition> getQNodeTypeDefinitions(SessionInfo sessionInfo) throws RepositoryException {       
+            ReportInfo info = new ReportInfo(JcrRemotingConstants.REPORT_NODETYPES, ItemResourceConstants.NAMESPACE);
+            info.setContentElement(DomUtil.createElement(DomUtil.createDocument(), NodeTypeConstants.XML_REPORT_ALLNODETYPES, ItemResourceConstants.NAMESPACE));
+
+        } catch (ParserConfigurationException e) {
+            throw new RepositoryException(e);
