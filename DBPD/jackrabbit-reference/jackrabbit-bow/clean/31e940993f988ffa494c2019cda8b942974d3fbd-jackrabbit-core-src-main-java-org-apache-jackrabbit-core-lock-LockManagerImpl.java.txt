JCR-1590: JSR 283: Locking

- move lock token handling from Session to LockManager.java
- add more tests
- adjust tests in jcr2spi 

TODO:
- sessionscoped locks still expose the lock token
- fixing that needs some more adjustments in jcr2spi and the spi
- timeout handling

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@736658 13f79535-47bb-0310-9956-ffa450edef68

+    static SessionLockManager getSessionLockManager(SessionImpl session) throws RepositoryException {
+        WorkspaceImpl wsp = (WorkspaceImpl) session.getWorkspace();
+        return (SessionLockManager) wsp.get283LockManager();
+    }
+
-            // TODO: TOBEFIXED for 2.0
-            // TODO  only tokens of open-scoped locks must be added to the session.
-            // if (!info.isSessionScoped()) {
-                session.addLockToken(info.lockToken.toString(), false);
-            //}
+            if (!info.isSessionScoped()) {
+                getSessionLockManager(session).lockTokenAdded(info.lockToken.toString());
+            }
-    void internalUnlock(NodeImpl node)
+    boolean internalUnlock(NodeImpl node)
-            session.removeLockToken(info.getLockToken(session), false);
-
+            getSessionLockManager(session).lockTokenRemoved(info.getLockToken(session));
+            
+            return true;
-    public void unlock(NodeImpl node)
-            throws LockException, RepositoryException {
-
+    public void unlock(NodeImpl node) throws LockException, RepositoryException {
-    public void lockTokenAdded(SessionImpl session, String lt) {
+    public void lockTokenAdded(SessionImpl session, String lt) throws LockException, RepositoryException {
-                        log.warn("Adding lock token has no effect: "
-                                + "lock already held by other session.");
+                        String msg = "Cannot add lock token: lock already held by other session.";
+                        log.warn(msg);
+                        throw new LockException(msg);
+            // inform SessionLockManager
+            getSessionLockManager(session).lockTokenAdded(lt);
-            log.warn("Bad lock token: " + e.getMessage());
-        } catch (RepositoryException e) {
-            log.warn("Unable to set lock holder: " + e.getMessage());
-            log.debug("Root cause: ", e);
+            String msg = "Bad lock token: " + e.getMessage();
+            log.warn(msg);
+            throw new LockException(msg);
-    public void lockTokenRemoved(SessionImpl session, String lt) {
+    public void lockTokenRemoved(SessionImpl session, String lt) throws LockException, RepositoryException {
-                        log.warn("Removing lock token has no effect: "
-                                + "lock held by other session.");
+                        String msg = "Cannot remove lock token: lock held by other session.";
+                        log.warn(msg);
+                        throw new LockException(msg);
+            // inform SessionLockManager
+            getSessionLockManager(session).lockTokenRemoved(lt);
-            log.warn("Bad lock token: " + e.getMessage());
-        } catch (RepositoryException e) {
-            log.warn("Unable to reset lock holder: " + e.getMessage());
-            log.debug("Root cause: ", e);
+            String msg = "Bad lock token: " + e.getMessage();
+            log.warn(msg);
+            throw new LockException(msg);
