JCR-2327 java.util.UUID.fromString() too slow

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@884574 13f79535-47bb-0310-9956-ffa450edef68

-    public NodeId(String uuid) throws IllegalArgumentException {
-        this(fromString(uuid));
+    public NodeId(String uuidString) throws IllegalArgumentException {
+        // e.g. f81d4fae-7dec-11d0-a765-00a0c91e6bf6
+        //      012345678901234567890123456789012345
+        if (uuidString.length() != UUID_FORMATTED_LENGTH) {
+            throw new IllegalArgumentException(uuidString);
+        }
+        long m = 0, x = 0;
+        for (int i = 0; i < UUID_FORMATTED_LENGTH; i++) {
+            int c = uuidString.charAt(i);
+            switch (i) {
+            case 18:
+                m = x;
+                x = 0;
+                // fall through
+            case 8:
+            case 13:
+            case 23:
+                if (c != '-') {
+                    throw new IllegalArgumentException(uuidString);
+                }
+                break;
+            default:
+                if (c >= '0' && c <= '9') {
+                    x = (x << 4) | (c - '0');
+                } else if (c >= 'a' && c <= 'f') {
+                    x = (x << 4) | (c - 'a' + 0xa);
+                } else if (c >= 'A' && c <= 'F') {
+                    x = (x << 4) | (c - 'A' + 0xa);
+                } else {
+                    throw new IllegalArgumentException(uuidString);
+                }
+            }
+        }
+        this.msb = m;
+        this.lsb = x;
-    //------------------------------------------------------------< internal >
-
-    /**
-     * Constructs a UUID from a UUID formatted String.
-     *
-     * @param uuidString the String representing a UUID to construct this UUID
-     * @return the UUID created from the given string.
-     * @throws IllegalArgumentException String must be a properly formatted UUID
-     *                                  string
-     */
-    private static UUID fromString(String uuidString)
-            throws IllegalArgumentException {
-        // e.g. f81d4fae-7dec-11d0-a765-00a0c91e6bf6
-        //      012345678901234567890123456789012345
-        int len = uuidString.length();
-        if (len != UUID_FORMATTED_LENGTH) {
-            throw new IllegalArgumentException();
-        }
-        long[] words = new long[2];
-        int b = 0;
-        for (int i = 0; i < UUID_FORMATTED_LENGTH; i++) {
-            int c = uuidString.charAt(i) | 0x20; // to lowercase (will lose some error checking)
-            if (i == 8 || i == 13 || i == 23) {
-                if (c != '-') {
-                    throw new IllegalArgumentException(String.valueOf(i));
-                }
-            } else if (i == 18) {
-                if (c != '-') {
-                    throw new IllegalArgumentException(String.valueOf(i));
-                }
-                b = 1;
-            } else {
-                byte h = (byte) (c & 0x0f);
-                if (c >= 'a' && c <= 'f') {
-                    h += 9;
-                } else if (c < '0' || c > '9') {
-                    throw new IllegalArgumentException();
-                }
-                words[b] = words[b] << 4 | h;
-            }
-        }
-        return new UUID(words[0], words[1]);
-    }
