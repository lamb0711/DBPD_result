- Use ItemStateLifeCycleListener instead of ItemStateListener in ItemImpl.
- Remove usage of ItemState.dispose() and the method itself.
- Remove method ItemStateListener.stateDiscarded() and all implementations of that method.
- Remove unused methods in ChangeLog: disconnect() and undo()
- Remove ItemState.discard() and related methods
- Rename ItemState.copy() to ItemState.copyFrom()
- Remove ItemState.STATUS_UNDEFINED. An ItemState always has a defined status!
- Rename TransientItemStateManager.disposeAllItemStates() to simply dispose().
- Introduce method ItemState.refresh() which is called instead of discard(). (Not yet implemented!)
- Clarify useage of WorkspaceManager.onEventReceived()

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@433998 13f79535-47bb-0310-9956-ffa450edef68

-     * Disposes all transient item states in the cache and in the attic.
+     * Disposes this transient item state manager. Clears all references to
+     * transiently modified item states.
-    public void disposeAllItemStates() {
-        IteratorChain it = new IteratorChain();
-        it.addIterator(changeLog.modifiedStates());
-        it.addIterator(changeLog.addedStates());
-        it.addIterator(changeLog.deletedStates());
-        while (it.hasNext()) {
-            ItemState state = (ItemState) it.next();
-            state.discard();
-            state.onDisposed();
-        }
+    public void dispose() {
-     * @see ItemStateListener#stateDiscarded(ItemState)
-     */
-    public void stateDiscarded(ItemState discarded) {
-        // TODO: remove from modified (and deleted?) set of change log
-    }
-
-    /**
-     * @inheritDoc
-            case ItemState.STATUS_UNDEFINED:
-                // should never happen
-                log.warn("ItemState changed status to 'undefined'");
-                break;
