work in progress

- SPI: replace String/Stream for values by QValue interface
- SPI: add factory for QValue
  > adjust commons and add implementation
  > adjust usages of former QValue object with jcr2spi, spi2dav
- RepositoryService.getChildInfos returns Iterator instead of Collection
- spi2dav: add implementation for new query interfaces

- TODO: 
  improve conversion of jcr-value to q-value and vice-versa




git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@497885 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.value.QValue;
-import javax.jcr.PropertyType;
-import java.io.IOException;
-import java.util.Collection;
-            Collection childInfos = service.getChildInfos(sessionInfo, nodeState.getNodeId());
-            for (Iterator it = childInfos.iterator(); it.hasNext();) {
-                ChildInfo ci = (ChildInfo) it.next();
+            Iterator childInfos = service.getChildInfos(sessionInfo, nodeState.getNodeId());
+            while (childInfos.hasNext()) {
+                ChildInfo ci = (ChildInfo) childInfos.next();
-
-            QValue[] qValues;
-            if (info.getType() == PropertyType.BINARY) {
-                qValues = QValue.create(info.getValuesAsStream(), PropertyType.BINARY);
-            } else {
-                String[] str = info.getValues();
-                qValues = QValue.create(str, info.getType());
-            }
-
-            state.init(info.getType(), qValues);
+            state.init(info.getType(), info.getValues());
-        } catch (IOException e) {
-            throw new ItemStateException(e.getMessage(), e);
