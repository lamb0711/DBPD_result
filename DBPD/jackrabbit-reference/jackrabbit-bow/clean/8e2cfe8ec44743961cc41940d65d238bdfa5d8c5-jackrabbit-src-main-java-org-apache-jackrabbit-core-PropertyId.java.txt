- clean up of some hashCode stuff

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@378546 13f79535-47bb-0310-9956-ffa450edef68

+    /** the precalculated hash code */
+    private final int hashCode;
+
+
+        int h= 17;
+        h = 37 * h + parentId.hashCode();
+        h = 37 * h + propName.hashCode();
+        this.hashCode = h;
-    //-------------------------------------------< java.lang.Object overrides >
+    //-----------------------------------------< java.lang.Object overrides >---
-     * Compares property identifiers for equality.
-     *
-     * @param obj other object
-     * @return <code>true</code> if the given object is a property identifier
-     *         instance that identifies the same property as this identifier,
-     *         <code>false</code> otherwise
-     * @see Object#equals(Object)
+     * {@inheritDoc}
-     * Returns a string representation of this property identifier.
+     * {@inheritDoc}
-     * @return property identifier string
-     * @see Object#toString()
+     * Returns the same as <code>this.getParentId() + "/" + this.getName()</code>
-     * Returns the hash code of this property identifier. The hash code
-     * is computed from the parent node UUID and the property name. The
-     * hash code is memorized for performance.
+     * {@inheritDoc}
-     * @return hash code
-     * @see Object#hashCode()
+     * Returns the hash code of this property identifier. The hash code
+     * is computed from the parent node id and the property name.
-        // PropertyId is immutable, we can store the computed hash code value
-        int h = hash;
-        if (h == 0) {
-            h = 17;
-            h = 37 * h + parentId.hashCode();
-            h = 37 * h + propName.hashCode();
-            hash = h;
-        }
-        return h;
+        return hashCode;
