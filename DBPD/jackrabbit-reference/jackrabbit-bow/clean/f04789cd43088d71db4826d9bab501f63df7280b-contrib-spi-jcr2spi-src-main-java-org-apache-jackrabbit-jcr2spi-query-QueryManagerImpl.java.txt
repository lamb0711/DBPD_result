work in progress

jcr2spi
- HierarchyManager: fixing methods with ItemId param
- HierarchyManagerImpl(s): removing unused methods
- ItemManagerImpl: replacing NodeId as cacheKey
- ItemImpl: remove ISM field

jcr2spi/xml
- ImporterImpl renamed to SessionImporter (used for s-import only)
- xml import: Use UUID String instead of creating NodeIds
- ReferenceChangeTracker: remove usage of spi NodeId

jcr2spi/state
- SessionItemStateManager: ValueFactory not needed since QPropertyDefinition returns qualified values.

jcr2spi/util
- LogUtil: add 'saveGetJCRName' utility method

jcr2spi/locking
- locking: LockManager to use NodeState instead of NodeId
- locking: removing locktoken from Session checks if Session is lock holder

jcr2spi/query
- NodeIteratorImpl: fix commented code, that allows to retrieve
  search results from IdIterator returned from QueryInfo
- minor reformatting, javadoc

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@430791 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.jcr2spi.SessionImpl;
+import org.apache.jackrabbit.jcr2spi.state.ItemStateManager;
+import javax.jcr.Session;
-    private final SessionImpl session;
+    private final Session session;
-     * The namespace resolver for this query manager.
+     * The namespace nsResolver for this query manager.
-    private final NamespaceResolver resolver;
+    private final NamespaceResolver nsResolver;
+     * The <code>ItemStateManager</code> of for item retrieval in search results
+     */
+    private final ItemStateManager itemStateManager;
+
+    /**
-     * <code>session</code>
+     * <code>Session</code>.
-     * @param resolver
+     * @param nsResolver
+     * @param itemStateManager
-    public QueryManagerImpl(SessionImpl session,
-                            NamespaceResolver resolver,
+    public QueryManagerImpl(Session session,
+                            NamespaceResolver nsResolver,
+                            ItemStateManager itemStateManager,
-        this.resolver = resolver;
+        this.nsResolver = nsResolver;
+        this.itemStateManager = itemStateManager;
-     * {@inheritDoc}
+     * @see QueryManager#createQuery(String, String)
-        sanityCheck();
-        QueryImpl query = new QueryImpl();
-        query.init(session, resolver, itemMgr, wspManager, statement, language);
+        checkIsAlive();
+        QueryImpl query = new QueryImpl(session, nsResolver, itemMgr, itemStateManager, wspManager, statement, language);
-     * {@inheritDoc}
+     * @see QueryManager#getQuery(Node)
-        sanityCheck();
-        QueryImpl query = new QueryImpl();
-        query.init(session, resolver, itemMgr, wspManager, node);
+        checkIsAlive();
+        QueryImpl query = new QueryImpl(session, nsResolver, itemMgr, itemStateManager, wspManager, node);
-     * {@inheritDoc}
+     * @see QueryManager#getSupportedQueryLanguages()
+    //------------------------------------------------------------< private >---
-    private void sanityCheck() throws RepositoryException {
+    private void checkIsAlive() throws RepositoryException {
