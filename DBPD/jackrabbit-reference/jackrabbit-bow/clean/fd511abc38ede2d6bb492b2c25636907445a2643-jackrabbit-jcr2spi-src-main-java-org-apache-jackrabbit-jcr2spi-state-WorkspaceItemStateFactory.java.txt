JCR-3054: Deprecate RepositoryService.getPropertyInfo method

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1159182 13f79535-47bb-0310-9956-ffa450edef68

-            NodeInfo info;
+            ItemInfo info;
-                if (info == null) {
+                if (info == null || !info.denotesNode()) {
-            return createNodeState(info, entry);
+            return createNodeState((NodeInfo) info, entry);
-            NodeInfo info;
+            ItemInfo info;
-                if (info == null) {
+                if (info == null || !info.denotesNode()) {
-                return createNodeState(info, (NodeEntry) entry);
+                return createNodeState((NodeInfo) info, (NodeEntry) entry);
-            PropertyInfo info;
+            ItemInfo info;
-                info = service.getPropertyInfo(sessionInfo, propertyId);
-                cache.put(info, entry.getGeneration());
+                Iterator<? extends ItemInfo> infos = service.getItemInfos(sessionInfo, propertyId);
+                info = first(infos, cache, entry.getGeneration());
+                if (info == null || info.denotesNode()) {
+                    throw new ItemNotFoundException("PropertyId: " + propertyId);
+                }
-            return createPropertyState(info, entry);
+            return createPropertyState((PropertyInfo) info, entry);
+            Iterator<? extends ItemInfo> infos = null;
-            PropertyInfo info;
+            ItemInfo info;
-                info = service.getPropertyInfo(sessionInfo, propertyId);
+                infos = service.getItemInfos(sessionInfo, propertyId);
+                info = first(infos, null, 0);
+                if (info == null || info.denotesNode()) {
+                    throw new ItemNotFoundException("PropertyId: " + propertyId);
+                }
-
+                long generation = entry.getGeneration();
-                    info = service.getPropertyInfo(sessionInfo, propertyId);
-                    cache.put(info, entry.getGeneration());
+                    infos = service.getItemInfos(sessionInfo, propertyId);
+                    info = first(infos, cache, generation);
+                } else if (infos != null) {
+                    // Otherwise put the whole batch retrieved from the service earlier into the cache
+                    cache.put(info, generation);
+                    first(infos, cache, generation);
-                return createPropertyState(info, (PropertyEntry) entry);
+                return createPropertyState((PropertyInfo) info, (PropertyEntry) entry);
-     * Returns the first item in the iterator if it exists and denotes a node.
-     * Otherwise returns <code>null</code>. If <code>cache</code> is not
-     * <code>null</code>, caches all items by the given <code>generation</code>.
-     * @param generation
+     * Returns the first item in the iterator if it exists. Otherwise returns <code>null</code>.
+     * If <code>cache</code> is not <code>null</code>, caches all items by the given
+     * <code>generation</code>.
-    private static NodeInfo first(Iterator<? extends ItemInfo> infos, ItemInfoCache cache, long generation) {
+    private static ItemInfo first(Iterator<? extends ItemInfo> infos, ItemInfoCache cache, long generation) {
-
-            if (!first.denotesNode()) {
-                first = null;
-            }
-        return (NodeInfo) first;
+        return first;
