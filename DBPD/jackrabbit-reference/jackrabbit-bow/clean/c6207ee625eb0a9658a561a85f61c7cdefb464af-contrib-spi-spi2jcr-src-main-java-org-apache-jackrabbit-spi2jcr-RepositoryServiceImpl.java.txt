- spi-rmi: throw InterruptedException in ServerRepositoryService if session is not live anymore
- jcr2spi: remove unused parameters in methods of WorkspaceManager

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@554573 13f79535-47bb-0310-9956-ffa450edef68

-        subscriptions.remove(sessionInfo);
-        getSessionInfoImpl(sessionInfo).getSession().logout();
+        synchronized (sessionInfo) {
+            subscriptions.remove(sessionInfo);
+            getSessionInfoImpl(sessionInfo).getSession().logout();
+        }
-        SessionInfoImpl sInfo = getSessionInfoImpl(sessionInfo);
-        if (!subscriptions.containsKey(sInfo)) {
-            EventSubscription subscr = new EventSubscription(idFactory, sInfo);
-            ObservationManager obsMgr = sInfo.getSession().getWorkspace().getObservationManager();
-            obsMgr.addEventListener(subscr, EventSubscription.ALL_EVENTS,
-                    "/", true, null, null, true);
-            subscriptions.put(sInfo, subscr);
-        }
+        getSubscription(sessionInfo);
-        EventSubscription subscr = (EventSubscription) subscriptions.get(sessionInfo);
-        if (subscr != null) {
-            return subscr.getEventBundles(filters, timeout);
-        } else {
-            // sleep for at most one second, then return
-            Thread.sleep(Math.min(timeout, 1000));
-            return new EventBundle[0];
-        }
+        return getSubscription(sessionInfo).getEventBundles(filters, timeout);
+    private EventSubscription getSubscription(SessionInfo sessionInfo)
+            throws RepositoryException {
+        SessionInfoImpl sInfo = getSessionInfoImpl(sessionInfo);
+        EventSubscription subscr;
+        synchronized (sInfo) {
+            subscr = (EventSubscription) subscriptions.get(sInfo);
+            if (subscr == null) {
+                subscr = new EventSubscription(idFactory, sInfo);
+                if (sInfo.getSession().isLive()) {
+                    ObservationManager obsMgr = sInfo.getSession().getWorkspace().getObservationManager();
+                    obsMgr.addEventListener(subscr, EventSubscription.ALL_EVENTS,
+                            "/", true, null, null, true);
+                }
+                subscriptions.put(sInfo, subscr);
+            }
+        }
+        return subscr;
+    }
+
