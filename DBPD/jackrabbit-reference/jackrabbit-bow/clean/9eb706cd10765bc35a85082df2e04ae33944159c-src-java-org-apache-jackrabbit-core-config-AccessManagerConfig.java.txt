Refactoring step 1 (JCR-53)
 - Moved common configuration fields to a new BeanConfig base class
 - Moved XML parsing to static factory methods

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@156047 13f79535-47bb-0310-9956-ffa450edef68

-import org.jdom.Element;
-
-import java.util.Collections;
-import java.util.HashMap;
+import java.util.Properties;
+
+import org.jdom.Element;
-public class AccessManagerConfig {
+public class AccessManagerConfig extends BeanConfig {
-     * FQN of class implementing the <code>AccessManager</code> interface
-     */
-    private final String className;
-
-    /**
-     * Parameters for configuring the persistence manager.
-     */
-    private final Map params;
-
-    /**
-    AccessManagerConfig(Element config, Map vars) {
+    static AccessManagerConfig parse(Element config, Map vars) {
-        className = config.getAttributeValue(CLASS_ATTRIB);
+        String className = config.getAttributeValue(CLASS_ATTRIB);
-        Map params = new HashMap();
+        Properties params = new Properties();
-        this.params = Collections.unmodifiableMap(params);
+        
+        return new AccessManagerConfig(className, params);
-
-    /**
-     * Returns configuration parameters. Each entry in the map represents
-     * a name/value pair where both name and value are <code>String</code>s.
-     *
-     * @return Map of configuration parameters.
-     */
-    public Map getParameters() {
-        return params;
-    }
-
-    /**
-     * Returns the FQN of a class implementing the <code>PersistenceManager</code> interface
-     *
-     * @return FQN of persistence manager class
-     */
-    public String getClassName() {
-        return className;
+    
+    public AccessManagerConfig(String className, Properties properties) {
+        super(className, properties);
