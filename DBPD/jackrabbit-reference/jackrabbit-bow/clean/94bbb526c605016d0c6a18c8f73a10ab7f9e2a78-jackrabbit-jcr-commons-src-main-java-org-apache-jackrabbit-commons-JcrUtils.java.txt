JCR-2555: Improved reusability of the JCA package

Move the handling of repository URI query parameters to getRepository(Map) so it'll work for all clients

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@924333 13f79535-47bb-0310-9956-ffa450edef68

+        // Use the query part of a repository URI as additional parameters
+        String uri = parameters.get(JcrUtils.REPOSITORY_URI);
+        if (uri != null) {
+            Map<String, String> copy = new HashMap<String, String>(parameters);
+            try {
+                URI u = new URI(uri);
+                String query = u.getRawQuery();
+                if (query != null) {
+                    for (String entry : query.split("&")) {
+                        int i = entry.indexOf('=');
+                        if (i != -1) {
+                            copy.put(
+                                    decode(entry.substring(0, i), "UTF-8"),
+                                    decode(entry.substring(i + 1), "UTF-8"));
+                        } else {
+                            copy.put(
+                                    decode(entry, "UTF-8"),
+                                    Boolean.TRUE.toString());
+                        }
+                    }
+                    copy.put(
+                            JcrUtils.REPOSITORY_URI,
+                            new URI(u.getScheme(), u.getRawAuthority(),
+                                    u.getRawPath(), null, u.getRawFragment()
+                                    ).toASCIIString());
+                    parameters = copy;
+                }
+            } catch (URISyntaxException e) {
+                throw new RepositoryException(e);
+            } catch (UnsupportedEncodingException e) {
+                throw new RepositoryException(e);
+            }
+        }
+
-        try {
-            Map<String, String> parameters = new HashMap<String, String>();
-            URI u = new URI(uri);
-            String query = u.getRawQuery();
-            if (query != null) {
-                for (String entry : query.split("&")) {
-                    int i = entry.indexOf('=');
-                    if (i != -1) {
-                        parameters.put(
-                                decode(entry.substring(0, i), "UTF-8"),
-                                decode(entry.substring(i + 1), "UTF-8"));
-                    } else {
-                        parameters.put(
-                                decode(entry, "UTF-8"),
-                                Boolean.TRUE.toString());
-                    }
-                }
-                parameters.put(
-                        JcrUtils.REPOSITORY_URI,
-                        new URI(u.getScheme(), u.getRawAuthority(),
-                                u.getRawPath(), null, u.getRawFragment()
-                                ).toASCIIString());
-            } else {
-                parameters.put(JcrUtils.REPOSITORY_URI, uri);
-            }
-            return getRepository(parameters);
-        } catch (UnsupportedEncodingException e) {
-            throw new RepositoryException("Unable to decode URI: " + uri, e);
-        } catch (URISyntaxException e) {
-            throw new RepositoryException("Invalid repository URI: " + uri, e);
-        }
+        Map<String, String> parameters = new HashMap<String, String>();
+        parameters.put(JcrUtils.REPOSITORY_URI, uri);
+        return getRepository(parameters);
