- removed @author and @version (i.e. $Revision & $Id) tags
- removed tab characters from java source code

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47648 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.QName;
+import org.apache.jackrabbit.core.QName;
- *
- * @author Stefan Guggisberg
- * @version $Revision: 1.1 $, $Date: 2004/09/09 15:23:43 $
-	    new QName(NamespaceRegistryImpl.NS_DEFAULT_URI, "*");
+            new QName(NamespaceRegistryImpl.NS_DEFAULT_URI, "*");
-	// delegate to superclass which does a shallow copy;
-	// but since all fields are either primitives or immutables
-	// this is sufficient
-	return super.clone();
+        // delegate to superclass which does a shallow copy;
+        // but since all fields are either primitives or immutables
+        // this is sufficient
+        return super.clone();
-	if (this == obj) {
-	    return true;
-	}
-	if (obj instanceof ChildItemDef) {
-	    ChildItemDef other = (ChildItemDef) obj;
-	    return (declaringNodeType == null ? other.declaringNodeType == null : declaringNodeType.equals(other.declaringNodeType))
-		    && (name == null ? other.name == null : name.equals(other.name))
-		    && autoCreate == other.autoCreate
-		    && onParentVersion == other.onParentVersion
-		    && writeProtected == other.writeProtected
-		    && mandatory == other.mandatory
-		    && primaryItem == other.primaryItem;
-	}
-	return false;
+        if (this == obj) {
+            return true;
+        }
+        if (obj instanceof ChildItemDef) {
+            ChildItemDef other = (ChildItemDef) obj;
+            return (declaringNodeType == null ? other.declaringNodeType == null : declaringNodeType.equals(other.declaringNodeType))
+                    && (name == null ? other.name == null : name.equals(other.name))
+                    && autoCreate == other.autoCreate
+                    && onParentVersion == other.onParentVersion
+                    && writeProtected == other.writeProtected
+                    && mandatory == other.mandatory
+                    && primaryItem == other.primaryItem;
+        }
+        return false;
-	this.declaringNodeType = declaringNodeType;
+        this.declaringNodeType = declaringNodeType;
-	this.name = name;
+        this.name = name;
-	this.autoCreate = autoCreate;
+        this.autoCreate = autoCreate;
-	this.onParentVersion = onParentVersion;
+        this.onParentVersion = onParentVersion;
-	this.writeProtected = writeProtected;
+        this.writeProtected = writeProtected;
-	this.mandatory = mandatory;
+        this.mandatory = mandatory;
-	this.primaryItem = primaryItem;
+        this.primaryItem = primaryItem;
-	return declaringNodeType;
+        return declaringNodeType;
-	return name;
+        return name;
-	return autoCreate;
+        return autoCreate;
-	return onParentVersion;
+        return onParentVersion;
-	return writeProtected;
+        return writeProtected;
-	return mandatory;
+        return mandatory;
-	return primaryItem;
+        return primaryItem;
-	return name.equals(ANY_NAME);
+        return name.equals(ANY_NAME);
