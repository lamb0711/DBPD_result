Remove shared properties and child node entries. Does not work anymore with new design.

TODO: To optimize transient performance lightweight proxy item states should be created in transient space, which delegate access to overlayed state.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@429634 13f79535-47bb-0310-9956-ffa450edef68

-     * Set to <code>true</code> if {@link #childNodeEntries} are shared between
-     * different <code>NodeState</code> instance.
-     */
-    private boolean sharedChildNodeEntries = false;
-
-    /**
-     * Set to <code>true</code> if {@link #properties} is shared between
-     * different <code>NodeState</code> instances.
-     */
-    private boolean sharedPropertyNames = false;
-
-    /**
-            parent = nodeState.parent;
+            parent = nodeState.parent; // TODO: parent from wrong ism layer
-            properties = nodeState.properties;
-            sharedPropertyNames = true;
-            nodeState.sharedPropertyNames = true;
-            childNodeEntries = nodeState.childNodeEntries;
-            sharedChildNodeEntries = true;
-            nodeState.sharedChildNodeEntries = true;
+            // re-create property references
+            properties.clear(); // TODO: any more cleanup work to do? try some kind of merging?
+            for (Iterator it = nodeState.getPropertyNames().iterator(); it.hasNext(); ) {
+                addPropertyName((QName) it.next());
+            }
+            // re-create child node entries
+            childNodeEntries.clear(); // TODO: any mre cleanup work to do? try some kind of merging?
+            for (Iterator it = nodeState.getChildNodeEntries().iterator(); it.hasNext(); ) {
+                ChildNodeEntry cne = (ChildNodeEntry) it.next();
+                childNodeEntries.add(cne.getName(), cne.getId());
+            }
-        if (sharedChildNodeEntries) {
-            childNodeEntries = (ChildNodeEntries) childNodeEntries.clone();
-            sharedChildNodeEntries = false;
-        }
-        if (sharedChildNodeEntries) {
-            childNodeEntries = (ChildNodeEntries) childNodeEntries.clone();
-            sharedChildNodeEntries = false;
-        }
-        if (sharedChildNodeEntries) {
-            childNodeEntries = (ChildNodeEntries) childNodeEntries.clone();
-            sharedChildNodeEntries = false;
-        }
-        if (sharedChildNodeEntries) {
-            childNodeEntries = (ChildNodeEntries) childNodeEntries.clone();
-            sharedChildNodeEntries = false;
-        }
-        if (sharedChildNodeEntries) {
-            childNodeEntries = (ChildNodeEntries) childNodeEntries.clone();
-            sharedChildNodeEntries = false;
-        }
-        if (nodeEntries instanceof ChildNodeEntries) {
-            // optimization
-            ChildNodeEntries entries = (ChildNodeEntries) nodeEntries;
-            childNodeEntries = (ChildNodeEntries) entries.clone();
-            sharedChildNodeEntries = false;
-        } else {
-            if (sharedChildNodeEntries) {
-                childNodeEntries = new ChildNodeEntries();
-                sharedChildNodeEntries = false;
-            } else {
-                childNodeEntries.removeAll();
-            }
-            childNodeEntries.addAll(nodeEntries);
-
+        // re-create child node entries
+        childNodeEntries.clear(); // TODO: any mre cleanup work to do? try some kind of merging?
+        for (Iterator it = nodeEntries.iterator(); it.hasNext(); ) {
+            ChildNodeEntry cne = (ChildNodeEntry) it.next();
+            childNodeEntries.add(cne.getName(), cne.getId());
-        if (sharedPropertyNames) {
-            properties = (HashMap) properties.clone();
-            sharedPropertyNames = false;
-        }
-        if (sharedPropertyNames) {
-            properties = (HashMap) properties.clone();
-            sharedPropertyNames = false;
-        }
-        if (sharedPropertyNames) {
-            properties = new HashMap();
-            sharedPropertyNames = false;
-        } else {
-            properties.clear();
-        }
+        properties.clear();
