[JCR-317] replace UUID strings by UUID classes in NodeId, etc..

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@378221 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.ByteArrayInputStream;
-import java.io.ByteArrayOutputStream;
-import java.util.ArrayList;
-import java.util.Iterator;
-import java.util.List;
-import javax.jcr.PropertyType;
-
-import org.apache.jackrabbit.core.value.BLOBFileValue;
-import org.apache.jackrabbit.core.value.InternalValue;
-import org.apache.jackrabbit.core.NodeId;
-import org.apache.jackrabbit.core.PropertyId;
-import org.apache.jackrabbit.name.QName;
-import org.apache.jackrabbit.core.state.AbstractPersistenceManager;
-import org.apache.jackrabbit.core.state.ItemState;
-import org.apache.jackrabbit.core.state.ItemStateException;
-import org.apache.jackrabbit.core.state.NoSuchItemStateException;
-import org.apache.jackrabbit.core.state.NodeReferences;
-import org.apache.jackrabbit.core.state.NodeReferencesId;
-import org.apache.jackrabbit.core.state.NodeState;
-import org.apache.jackrabbit.core.state.PMContext;
-import org.apache.jackrabbit.core.state.PropertyState;
-import org.apache.jackrabbit.core.state.orm.ORMBlobValue;
-import org.apache.jackrabbit.core.state.orm.ORMNodeReference;
-import org.apache.jackrabbit.core.state.orm.ORMPropertyState;
-import org.apache.log4j.Logger;
-import org.apache.jackrabbit.core.state.PersistenceManager;
-import org.apache.ojb.broker.PersistenceBroker;
+import org.apache.jackrabbit.core.NodeId;
+import org.apache.jackrabbit.core.PropertyId;
-import org.apache.ojb.broker.PersistenceBrokerFactory;
-import org.apache.ojb.broker.PersistenceBrokerException;
+import org.apache.jackrabbit.core.state.ItemState;
+import org.apache.jackrabbit.core.state.ItemStateException;
+import org.apache.jackrabbit.core.state.NoSuchItemStateException;
+import org.apache.jackrabbit.core.state.NodeReferences;
+import org.apache.jackrabbit.core.state.NodeReferencesId;
+import org.apache.jackrabbit.core.state.NodeState;
+import org.apache.jackrabbit.core.state.PMContext;
+import org.apache.jackrabbit.core.state.PersistenceManager;
+import org.apache.jackrabbit.core.state.PropertyState;
+import org.apache.jackrabbit.core.state.orm.ORMBlobValue;
+import org.apache.jackrabbit.core.state.orm.ORMNodeReference;
+import org.apache.jackrabbit.core.state.orm.ORMPropertyState;
+import org.apache.jackrabbit.core.value.BLOBFileValue;
+import org.apache.jackrabbit.core.value.InternalValue;
+import org.apache.jackrabbit.name.QName;
+import org.apache.log4j.Logger;
+
+import javax.jcr.PropertyType;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
-                    new Object[] {propId.getParentUUID(),
+                    new Object[] {propId.getParentId().getUUID().toString(),
-                        new Object[] {propId.getParentUUID(),
+                        new Object[] {propId.getParentId().getUUID().toString(),
-                refs.addReference(new PropertyId(curNodeReference.
-                                                 getPropertyParentUUID(),
-                                                 QName.
-                                                 valueOf(curNodeReference.
-                    getPropertyName())));
+                PropertyId id = new PropertyId(
+                        NodeId.valueOf(curNodeReference.getPropertyParentUUID()),
+                        QName.valueOf(curNodeReference.getPropertyName()));
+                refs.addReference(id);
-                new Object[] {propId.getParentUUID(),
+                new Object[] {propId.getParentId().getUUID().toString(),
-                                   new Object[] {state.getParentUUID(),
+                                   new Object[] {state.getParentId().getUUID().toString(),
-                            ormBlobValue.setParentUUID(state.getParentUUID());
+                            ormBlobValue.setParentUUID(state.getParentId().getUUID().toString());
-                    getTargetId().toString(), curPropertyId.getParentUUID(),
+                    getTargetId().toString(), curPropertyId.getParentId().getUUID().toString(),
-        log.debug("Deleting node " + state.getUUID());
+        log.debug("Deleting node " + state.getId().toString());
-                                       new Object[] {state.getParentUUID(),
+                                       new Object[] {state.getParentId().getUUID().toString(),
-        return new NodeState(id.getUUID(), null, null, NodeState.STATUS_NEW,
-                false);
+        return new NodeState(id, null, null, NodeState.STATUS_NEW, false);
-        return new PropertyState(id.getName(), id.getParentUUID(),
-                PropertyState.STATUS_NEW, false);
+        return new PropertyState(id, PropertyState.STATUS_NEW, false);
