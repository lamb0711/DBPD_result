JCR-3858 NodeIterator.getSize(): compatibility with Jackrabbit 2.5

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1667317 13f79535-47bb-0310-9956-ffa450edef68

+    
+    private final boolean sizeEstimate;
+        this.sizeEstimate = index.getSizeEstimate();
-        // quick check
-        // if numResults is set, all relevant results have been fetched
-        if (numResults != -1) {
-            return;
+        if (!sizeEstimate) {
+            // quick check
+            // if numResults is set, all relevant results have been fetched
+            if (numResults != -1) {
+                return;
+            }
-                collectScoreNodes(result, offsetNodes, offset);
+                if (sizeEstimate) {
+                    collectScoreNodes(result, new ArrayList<ScoreNode[]>(), offset);                    
+                } else {
+                    collectScoreNodes(result, offsetNodes, offset);
+                }
-            // update numResults if all results have been fetched 
-            // if resultNodes.getSize() is strictly smaller than maxResultSize, it means that all results have been fetched
-            int resultSize = resultNodes.size();
-            if (resultSize < maxResultSize) {
-                if (resultNodes.isEmpty()) {
-                    // if there's no result nodes, the actual totalResults if smaller or equals than the offset
-                    totalResults = offsetNodes.size();
-                    numResults = 0;
+            if (sizeEstimate) {
+                // update numResults
+                numResults = result.getSize();                
+            } else {
+                // update numResults if all results have been fetched 
+                // if resultNodes.getSize() is strictly smaller than maxResultSize, it means that all results have been fetched
+                int resultSize = resultNodes.size();
+                if (resultSize < maxResultSize) {
+                    if (resultNodes.isEmpty()) {
+                        // if there's no result nodes, the actual totalResults if smaller or equals than the offset
+                        totalResults = offsetNodes.size();
+                        numResults = 0;
+                    }
+                    else {
+                        totalResults = resultSize + (int) offset;
+                        numResults = resultSize;
+                    }
-                else {
-                    totalResults = resultSize + (int) offset;
-                    numResults = resultSize;
+                else if (resultSize == limit) {
+                    // if there's "limit" results, we can't know the total size (which may be greater), but the result size is the limit
+                    numResults = (int) limit;
-            else if (resultSize == limit) {
-                // if there's "limit" results, we can't know the total size (which may be greater), but the result size is the limit
-                numResults = (int) limit;
-            }
+     * If the "sizeEstimate" options is enabled:
+     * Keep in mind that this number may get smaller if nodes are found in
+     * the result set which the current session has no permission to access.
+     * This might be a security problem.
-        return totalResults;
+        if (sizeEstimate) {
+            if (numResults == -1) {
+                return -1;
+            } else {
+                return numResults - invalid;
+            }
+        } else {
+            return totalResults;
+        }
+         * <p/>
+         * If the "sizeEstimate" options is enabled:
+         * This value may shrink when the query result encounters non-existing
+         * nodes or the session does not have access to a node.
-            return numResults;
+            if (sizeEstimate) {
+                int total = getTotalSize();
+                if (total == -1) {
+                    return -1;
+                }
+                long size = offset > total ? 0 : total - offset;
+                if (limit >= 0 && size > limit) {
+                    return limit;
+                } else {
+                    return size;
+                }                
+            } else {
+                return numResults;
+            }
-                    // if numResults is set, all relevant results have been fetched
-                    if (numResults != -1) {
-                        break;
+                    if (sizeEstimate) {
+                        // this check is only possible if we have numResults
+                        if (numResults != -1 && (nextPos + invalid) >= numResults) {
+                            break;
+                        }
+                    } else {
+                        // if numResults is set, all relevant results have been fetched
+                        if (numResults != -1) {
+                            break;
+                        }
