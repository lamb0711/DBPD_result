JCR-2087: Upgrade to Java 5 as the base platform

Generify AbstractSession

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@771692 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Iterator;
+import java.util.HashSet;
+import java.util.Set;
-import javax.jcr.NamespaceRegistry;
-import org.apache.jackrabbit.commons.xml.SerializingContentHandler;
-    private final Map namespaces = new HashMap();
+    private final Map<String, String> namespaces =
+        new HashMap<String, String>();
-        Iterator iterator = namespaces.entrySet().iterator();
-        while (iterator.hasNext()) {
-            Map.Entry entry = (Map.Entry) iterator.next();
+        for (Map.Entry<String, String> entry : namespaces.entrySet()) {
-                return (String) entry.getKey();
+                return entry.getKey();
-        String uri = (String) namespaces.get(prefix);
+        String uri = namespaces.get(prefix);
-        NamespaceRegistry registry = getWorkspace().getNamespaceRegistry();
-        String[] uris = registry.getURIs();
-        for (int i = 0; i < uris.length; i++) {
-            getNamespacePrefix(uris[i]);
+        for (String uri : getWorkspace().getNamespaceRegistry().getURIs()) {
+            getNamespacePrefix(uri);
-        return (String[])
-            namespaces.keySet().toArray(new String[namespaces.size()]);
+        return namespaces.keySet().toArray(new String[namespaces.size()]);
-        String previous = (String) namespaces.get(prefix);
+        String previous = namespaces.get(prefix);
+        // Remove existing mapping for the given prefix
-        Iterator iterator = namespaces.entrySet().iterator();
-        while (iterator.hasNext()) {
-            Map.Entry entry = (Map.Entry) iterator.next();
+
+        // Remove existing mapping(s) for the given URI
+        Set<String> prefixes = new HashSet<String>();
+        for (Map.Entry<String, String> entry : namespaces.entrySet()) {
-                iterator.remove();
+                prefixes.add(entry.getKey());
+        namespaces.keySet().removeAll(prefixes);
+        // Add the new mapping
