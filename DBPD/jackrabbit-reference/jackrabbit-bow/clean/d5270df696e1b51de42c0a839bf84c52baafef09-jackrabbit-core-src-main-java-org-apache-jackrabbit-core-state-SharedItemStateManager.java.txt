JCR-2272: Errors during concurrent session import of nodes with same UUIDs

Use a sentinel EventUpdateChannel to avoid having to do null checks all the time

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/branches/JCR-2272@1173578 13f79535-47bb-0310-9956-ffa450edef68

-     * Update event channel.
+     * Update event channel. By default this is a dummy channel that simply
+     * ignores all events (so we don't need to check for null all the time),
+     * but in clustered environments the
+     * {@link #setEventChannel(UpdateEventChannel)} method should be called
+     * during initialization to connect this SISM instance with the cluster.
-    private UpdateEventChannel eventChannel;
+    private UpdateEventChannel eventChannel = new DummyUpdateEventChannel();
-            /* let listener know about change */
-            if (eventChannel != null) {
-                eventChannel.updateCreated(this);
-            }
+            // let listener know about change
+            eventChannel.updateCreated(this);
-                if (writeLock == null && eventChannel != null) {
+                if (writeLock == null) {
-                /* let listener know about change */
-                if (eventChannel != null) {
-                    eventChannel.updatePrepared(this);
-                }
+                // let listener know about change
+                eventChannel.updatePrepared(this);
-                /* let listener know about finished operation */
-                if (eventChannel != null) {
-                    String path = events.getSession().getUserID() + "@" + events.getCommonPath();
-                    eventChannel.updateCommitted(this, path);
-                }
+                // let listener know about finished operation
+                String path = events.getSession().getUserID() + "@" + events.getCommonPath();
+                eventChannel.updateCommitted(this, path);
-                /* let listener know about canceled operation */
-                if (eventChannel != null) {
-                    eventChannel.updateCancelled(this);
-                }
+                // let listener know about canceled operation
+                eventChannel.updateCancelled(this);
