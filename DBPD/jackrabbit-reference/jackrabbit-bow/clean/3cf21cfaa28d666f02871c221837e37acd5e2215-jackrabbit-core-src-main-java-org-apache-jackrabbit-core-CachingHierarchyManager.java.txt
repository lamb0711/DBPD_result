JCR-1167: Paths not correct after reordering children


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@583151 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashMap;
-                PathMap.Element element = entry.getElement();
-                Iterator iter = element.getChildren();
+                PathMap.Element parent = entry.getElement();
+                HashMap newChildrenOrder = new HashMap();
+                boolean orderChanged = false;
+
+                Iterator iter = parent.getChildren();
-                    if (!cne.getName().equals(child.getName()) ||
-                            cne.getIndex() != child.getNormalizedIndex()) {
-                        /* Child still exists but at a different position */
-                        element.move(child.getPathElement(),
-                                Path.PathElement.create(cne.getName(), cne.getIndex()));
-                        continue;
+
+                    /**
+                     * Put all children into map of new children order - regardless
+                     * whether their position changed or not - as we might need
+                     * to reorder them later on.
+                     */
+                    Path.PathElement newNameIndex = Path.PathElement.create(
+                            cne.getName(), cne.getIndex());
+                    newChildrenOrder.put(newNameIndex, child);
+
+                    if (!newNameIndex.equals(child.getPathElement())) {
+                        orderChanged = true;
-                    /* At this point the child's position is still valid */
+                }
+
+                if (orderChanged) {
+                    /* If at least one child changed its position, reorder */
+                    parent.setChildren(newChildrenOrder);
