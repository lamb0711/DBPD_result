work in progress

- resolve some TODOs
- replace // JR DIFF comments
- remove unused/unimplemented validation methods from NodeTypeRegistry, that should
  be implemented on serverside
- Validation of NodeTypeDefinition: check if autocreated props defined default-value
  is not required on the client-side.
- LockManagerImpl: be prepared for observation not being supported by spi.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@479569 13f79535-47bb-0310-9956-ffa450edef68

-     * @param checkAutoCreatePropHasDefault flag used to disable checking that auto-created properties
-     * have a default value; this check has to be disabled while validating
-     * built-in node types because there are properties defined in built-in
-     * node types which are auto-created but don't have a fixed default value
-     * that can be exposed in a property definition because it is
-     * system-generated (e.g. jcr:primaryType in nt:base).
-     * // TODO FIXME
-    public Map validateNodeTypeDefs(Collection ntDefs, Map validatedDefs, boolean checkAutoCreatePropHasDefault) throws InvalidNodeTypeDefException, RepositoryException {
+    public Map validateNodeTypeDefs(Collection ntDefs, Map validatedDefs)
+        throws InvalidNodeTypeDefException, RepositoryException {
-                // DIFF JR: cannot compared to 'registered' nodetypes since registr. is performed later on
+                /* Note: don't compared to 'registered' nodetypes since registr. is performed later on */
-                    EffectiveNodeType ent = validateNodeTypeDef(ntd, validDefs, checkAutoCreatePropHasDefault);
+                    EffectiveNodeType ent = validateNodeTypeDef(ntd, validDefs);
-     * @param checkAutoCreatePropHasDefault flag used to disable checking that auto-created properties
-     * have a default value; this check has to be disabled while validating
-     * built-in node types because there are properties defined in built-in
-     * node types which are auto-created but don't have a fixed default value
-     * that can be exposed in a property definition because it is
-     * system-generated (e.g. jcr:primaryType in nt:base).
-     * // TODO FIXME
-    public EffectiveNodeTypeImpl validateNodeTypeDef(QNodeTypeDefinition ntDef, Map validatedDefs, boolean checkAutoCreatePropHasDefault)
+    public EffectiveNodeTypeImpl validateNodeTypeDef(QNodeTypeDefinition ntDef, Map validatedDefs)
-                // DIFF JR: compare to given nt-name set and not to registered nodetypes
+                /* compare to given nt-name set and not to registered nodetypes */
-                    String msg = "[" + name + "] invalid supertype: "
-                            + supertypes[i];
+                    String msg = "[" + name + "] invalid supertype: " + supertypes[i];
-                // DIFF JR: use extra method that does not compare to registered nts
-            /**
-             * check default values:
+            /* check default values:
+             * Note: default internal values are built from the required type,
+             * thus check for match with pd.getRequiredType is redundant.
-            // DIFF JACKRABBIT: default internal values are built from the
-            // required type, thus check for match with pd.getRequiredType is redundant
-            if (defVals == null || defVals.length == 0) {
-                // no default values specified
-                if (checkAutoCreatePropHasDefault) {
-                    // auto-created properties must have a default value
-                    if (pd.isAutoCreated()) {
-                        String msg = "[" + name + "#" + pd.getQName() + "] auto-created property must have a default value";
-                        log.debug(msg);
-                        throw new InvalidNodeTypeDefException(msg);
-                    }
-                }
-            }
-            // check that default values satisfy value constraints
+            /* check that default values satisfy value constraints.
+             * Note however, that no check is performed if autocreated property-
+             * definitions define a default value. JSR170 does not require this.
+             */
-            /**
-             * ReferenceConstraint:
+            /* ReferenceConstraint:
-                        // DIFF JR: compare to given ntd map and not registered nts only
+                        /* compare to given ntd map and not registered nts only */
-            /**
-             * sanity check:
-             * make sure declaring node type matches name of node type definition
-             */
+            /* make sure declaring node type matches name of node type definition */
