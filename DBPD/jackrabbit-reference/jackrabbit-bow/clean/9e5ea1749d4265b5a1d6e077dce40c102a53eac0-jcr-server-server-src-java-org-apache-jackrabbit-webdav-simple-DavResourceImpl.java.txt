JCR-337 - Remove jcr dependency from dav-library
JCR-343 - Report#init limits the Report interface to DeltaV compliant resources
JCR-340 - ValuesProperty missing property type information
JCR-342 - DavResource#getDavSession() missing
JCR-344 - DeltaVResource lists MKWORKSPACE in the method constant.
JCR-345 - DavException does not allow to specify an exception cause

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@385540 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.jcr.JcrDavSession;
-    private DavSession session;
+    private JcrDavSession session;
-                           DavSession session, ResourceConfig config) throws RepositoryException, DavException {
-        this.session = session;
+                           DavSession session, ResourceConfig config) throws DavException {
+        JcrDavSession.checkImplementation(session);
+        this.session = (JcrDavSession)session;
-                Item item = session.getRepositorySession().getItem(locator.getJcrPath());
+                Item item = getJcrSession().getItem(locator.getRepositoryPath());
+            } catch (RepositoryException e) {
+                // some other error
+                throw new JcrDavException(e);
-            String memberName = Text.getName(member.getLocator().getJcrPath());
+            String memberName = Text.getName(member.getLocator().getRepositoryPath());
-        try {
-            // make sure, non-jcr locks are removed.
-            if (!isJsrLockable()) {
-                ActiveLock lock = getLock(Type.WRITE, Scope.EXCLUSIVE);
-                if (lock != null) {
-                    lockManager.releaseLock(lock.getToken(), member);
-                }
-            }
-            ActiveLock lock = getLock(Type.WRITE, Scope.EXCLUSIVE);
-            if (lock != null && lockManager.hasLock(lock.getToken(), member)) {
-                lockManager.releaseLock(lock.getToken(), member);
-            }
-            String itemPath = member.getLocator().getJcrPath();
-            Item memItem = session.getRepositorySession().getItem(itemPath);
+        try {
+            String itemPath = member.getLocator().getRepositoryPath();
+            Item memItem = getJcrSession().getItem(itemPath);
-            session.getRepositorySession().save();
+            getJcrSession().save();
+
+            // make sure, non-jcr locks are removed, once the removal is completed
+            try {
+                if (!isJsrLockable()) {
+                    ActiveLock lock = getLock(Type.WRITE, Scope.EXCLUSIVE);
+                    if (lock != null) {
+                        lockManager.releaseLock(lock.getToken(), member);
+                    }
+                }
+            } catch (DavException e) {
+                // since check for 'locked' exception has been performed before
+                // ignore any error here
+            }
-            String destItemPath = destination.getLocator().getJcrPath();
-            session.getRepositorySession().getWorkspace().move(locator.getJcrPath(), destItemPath);
+            String destItemPath = destination.getLocator().getRepositoryPath();
+            getJcrSession().getWorkspace().move(locator.getRepositoryPath(), destItemPath);
-            String destItemPath = destination.getLocator().getJcrPath();
-            session.getRepositorySession().getWorkspace().copy(locator.getJcrPath(), destItemPath);
+            String destItemPath = destination.getLocator().getRepositoryPath();
+            getJcrSession().getWorkspace().copy(locator.getRepositoryPath(), destItemPath);
+     * @see org.apache.jackrabbit.webdav.DavResource#getSession()
+     */
+    public DavSession getSession() {
+        return session;
+    }
+
+    /**
-            Session s = session.getRepositorySession();
+            Session s = getJcrSession();
+    private Session getJcrSession() {
+        return session.getRepositorySession();
+    }
+
-        return filter != null && filter.isFilteredItem(resource.getDisplayName(), session.getRepositorySession());
+        return filter != null && filter.isFilteredItem(resource.getDisplayName(), getJcrSession());
