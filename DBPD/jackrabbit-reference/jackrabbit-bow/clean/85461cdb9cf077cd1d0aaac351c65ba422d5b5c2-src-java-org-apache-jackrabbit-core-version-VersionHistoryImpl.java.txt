- fixing verisoning issues

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@151336 13f79535-47bb-0310-9956-ffa450edef68

-        return new String[0];  // @todo implement VersionHistory#getVersionLabels()
+        return history.getVersionLabels();
-        return new String[0];  // @todo implement VersionHistory#getVersionLabels(Version)
+        checkOwnVersion(version);
+        return ((VersionImpl) version).getInternalVersion().getLabels();
-        return false;  // @todo implement VersionHistory#hasVersionLabel(String)
+        return history.getVersionByLabel(label)!=null;
-        return false;  // @todo implement VersionHistory#hasVersionLabel(Version, String)
+        checkOwnVersion(version);
+        return ((VersionImpl) version).getInternalVersion().hasLabel(label);
-     * @see VersionHistory#removeVersionLabel(String)
+     * @see VersionHistory#removeVersion(String)
-    public void removeVersion(String label)
+    public void removeVersion(String versionName)
-        // @todo implement VersionHistory#removeVersionLabel(String)
+        try {
+            history.removeVersion(QName.fromJCRName(versionName, session.getNamespaceResolver()));
+        } catch (IllegalNameException e) {
+            throw new VersionException("Unable to remove version.", e);
+        } catch (UnknownPrefixException e) {
+            throw new VersionException("Unable to remove version.", e);
+        }
-        //history.getRootVersion().getFrozenNode().getFrozenUUID();
+
+    /**
+     * Checks if the given version belongs to this history
+     * @param version
+     * @throws VersionException
+     * @throws RepositoryException
+     */
+    private void checkOwnVersion(Version version)
+            throws VersionException, RepositoryException {
+        if (!version.getParent().isSame(this)) {
+            throw new VersionException("Specified version not contained in this history.");
+        }
+    }
