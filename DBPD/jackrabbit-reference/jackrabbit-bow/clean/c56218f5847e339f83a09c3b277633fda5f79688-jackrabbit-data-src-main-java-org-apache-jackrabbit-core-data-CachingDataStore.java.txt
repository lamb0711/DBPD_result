JCR-3873 CachingDataStore not safe against crashes, corrupted uploads file will prevent system startup

Fix is to reset AsyncUploadCache and reload all local files to S3. 
Test case TestCachingFDS#testAsyncUploadCacheCorruption added. 


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1677956 13f79535-47bb-0310-9956-ffa450edef68

-
-            asyncWriteCache = new AsyncUploadCache();
-            asyncWriteCache.init(homeDir, path, asyncUploadLimit);
-
+            boolean asyncWriteCacheInitStatus = true;
+            try {
+                asyncWriteCache = new AsyncUploadCache();
+                asyncWriteCache.init(homeDir, path, asyncUploadLimit);
+            } catch (Exception e) {
+                LOG.warn("Failed to initialize asyncWriteCache", e);
+                asyncWriteCacheInitStatus = false;
+            }
-            if (markerFileName != null) {
+            if (markerFileName != null && !"".equals(markerFileName.trim())) {
+                    if (!asyncWriteCacheInitStatus) {
+                        LOG.info("Initialization of asyncWriteCache failed. "
+                            + "Re-loading all files from local cache");
+                        uploadFilesFromCache();
+                        asyncWriteCache.reset();
+                    }
+            } else {
+                throw new DataStoreException("Failed to intialized DataStore."
+                    + " MarkerFileName is null or empty. ");
-                LOG.debug("getRecord: [{}]  retrieved from asyncUploadmap",
+                LOG.trace("getRecord: [{}]  retrieved from asyncUploadmap",
-                LOG.debug("getRecord: [{}]  retrieved using getLength",
+                LOG.trace("getRecord: [{}]  retrieved using getLength",
-                LOG.debug(
+                LOG.trace(
-                LOG.debug(
+                LOG.trace(
-            LOG.debug(
+            LOG.trace(
-            LOG.debug(
+            LOG.trace(
-            LOG.debug(" identifier [{}] length fetched from recLengthCache",
+            LOG.trace(" identifier [{}] length fetched from recLengthCache",
-            LOG.debug(" identifier [{}] length fetched from local cache",
+            LOG.trace(" identifier [{}] length fetched from local cache",
+                    long startTime = System.currentTimeMillis();
-                        // getStream to cache file
-                        LOG.debug("Async download [{}] started.", identifier);
+                        LOG.trace("Async download [{}] started.", identifier);
-                        LOG.debug("Async download [{}] completed.", identifier);
+                        LOG.debug("Async download [{}] completed in [{}] ms.",
+                            identifier,
+                            (System.currentTimeMillis() - startTime));
