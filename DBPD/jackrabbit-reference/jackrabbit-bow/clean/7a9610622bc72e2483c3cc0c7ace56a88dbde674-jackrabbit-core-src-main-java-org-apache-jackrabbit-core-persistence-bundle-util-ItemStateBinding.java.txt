JCR-1232: Merge UUID to NodeId

Replace more uses of UUID with NodeId. Most notably:

  * Reference InternalValues now contain NodeIds instead of UUIDs
  * Item state serializers use NodeIds instead of UUIDs
  * Frozen ids in versioning are now NodeIds instead of UUIDs
  * Dropped Session.internalGetUUID() in favor of Session.getNodeId()
  * Dropped Session.getNodeByUUID(UUID) in favor of Session.getNodeById(NodeId)

None of these changes has functional effects, expect reducing the amount of extra NodeId objects that need to be instantiated when switching between representations.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@792485 13f79535-47bb-0310-9956-ffa450edef68

-     * Deserializes a UUID
+     * Deserializes a node identifier
-     * @return the uuid
+     * @return the node id
-    public UUID readUUID(DataInputStream in) throws IOException {
+    public NodeId readNodeId(DataInputStream in) throws IOException {
-            return new UUID(bytes);
+            return new NodeId(new UUID(bytes));
-     * Serializes a UUID
+     * Serializes a node identifier
-     * @param uuid the uuid
+     * @param uuid the node id
-    public void writeUUID(DataOutputStream out, String uuid) throws IOException {
-        if (uuid == null) {
+    public void writeNodeId(DataOutputStream out, String id) throws IOException {
+        if (id == null) {
-            out.write(UUID.fromString(uuid).getRawBytes());
+            out.write(UUID.fromString(id).getRawBytes());
-     * Serializes a UUID
-     * @param out the output stream
-     * @param uuid the uuid
-     * @throws IOException in an I/O error occurs.
-     */
-    public void writeUUID(DataOutputStream out, UUID uuid) throws IOException {
-        if (uuid == null) {
-            out.writeBoolean(false);
-        } else {
-            out.writeBoolean(true);
-            out.write(uuid.getRawBytes());
-        }
-    }
-
-    /**
-        UUID uuid = readUUID(in);
+        NodeId id = readNodeId(in);
-        return new PropertyId(new NodeId(uuid), name);
+        return new PropertyId(id, name);
+
