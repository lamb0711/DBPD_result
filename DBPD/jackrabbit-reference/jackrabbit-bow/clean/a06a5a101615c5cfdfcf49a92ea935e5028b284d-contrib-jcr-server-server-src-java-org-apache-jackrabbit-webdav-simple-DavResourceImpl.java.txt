- changed default jcr-webdav namespace prefix
- updated javadoc
- added namespace-prefix-collision resolver to simple/DavResourceImpl.java


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@230783 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.transaction.TransactionConstants;
+import org.apache.jackrabbit.webdav.observation.ObservationConstants;
+    private static final HashMap reservedNamespaces = new HashMap();
+    static {
+        reservedNamespaces.put(DavConstants.NAMESPACE.getPrefix(), DavConstants.NAMESPACE.getURI());
+        reservedNamespaces.put(ObservationConstants.NAMESPACE.getPrefix(), ObservationConstants.NAMESPACE.getURI());
+        reservedNamespaces.put(TransactionConstants.NAMESPACE.getPrefix(), TransactionConstants.NAMESPACE.getURI());
+    }
+
-                    String prefix = Text.getNamespacePrefix(pName);
-                    String uri = node.getSession().getNamespaceURI(prefix);
-                    Namespace namespace = Namespace.getNamespace(prefix, uri);
-                    DavPropertyName name = DavPropertyName.create(Text.getLocalName(pName), namespace);
+                    DavPropertyName name = getDavName(pName, node.getSession());
+     * Builds a webdav property name from the given jcrName. In case the jcrName
+     * contains a namespace prefix that would conflict with any of the predefined
+     * webdav namespaces a new prefix is assigned.
+     *
+     * @param jcrName
+     * @return namespace
+     */
+    private DavPropertyName getDavName(String jcrName, Session session) throws RepositoryException {
+        String prefix = Text.getNamespacePrefix(jcrName);
+        String uri = session.getNamespaceURI(prefix);
+        // check for conflicts with reserved webdav-namespaces
+        if (reservedNamespaces.containsKey(prefix) && !reservedNamespaces.get(prefix).equals(uri)) {
+            prefix = prefix + "0";
+        }
+        Namespace namespace = Namespace.getNamespace(prefix, uri);
+        DavPropertyName name = DavPropertyName.create(Text.getLocalName(jcrName), namespace);
+        return name;
+    }
+
+    /**
-
+    /**
+     *
+     * @param property
+     * @throws RepositoryException
+     */
+    /**
+     *
+     * @param propertyName
+     * @throws RepositoryException
+     */
