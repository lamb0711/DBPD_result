JCR-1663: REFERENCE properties produce duplicate strings in memory

Use cached flyweight Name instances to avoid many copies of the same names taking up too much memory. Passes all tests and reportedly decreases memory usage.

Since my proposed patch: Added improvements suggested by Thomas (thanks!) and moved the cache functionality to a separate class to increase separation of concerns.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@678719 13f79535-47bb-0310-9956-ffa450edef68

+    /**
+     * Cache of flyweight name instances.
+     *
+     * @see https://issues.apache.org/jira/browse/JCR-1663
+     */
+    private final HashCache cache = new HashCache();
+
-        return new NameImpl(namespaceURI, localName);
+        return (Name) cache.get(new NameImpl(namespaceURI, localName));
-        } else {
-            return new NameImpl(nameString.substring(1, i), nameString.substring(i + 1));
+        return (Name) cache.get(new NameImpl(
+                nameString.substring(1, i), nameString.substring(i + 1)));
