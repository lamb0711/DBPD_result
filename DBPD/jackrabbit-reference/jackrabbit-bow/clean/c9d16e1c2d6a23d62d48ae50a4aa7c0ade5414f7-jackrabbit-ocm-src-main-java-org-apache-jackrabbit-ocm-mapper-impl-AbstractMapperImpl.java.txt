Patch for JCR-1759 (Simplify the usage of OCM annotations)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@699627 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashSet;
+import java.util.Set;
+import org.apache.jackrabbit.ocm.mapper.model.ImplementDescriptor;
-
+    
+    /**
+     * This method check class descriptor references (ancestor & implemented interfaces) : 
+     * For each classdescriptor found, this method will check if the ancestor class and the implemented 
+     * interfaces are also persistent or not. 
+     * 
+     * @param errors
+     * @return
+     */
-
+            
+            // Check if the ancestor is a persistent class
-                    errors.add("Cannot find mapping for class "
+                	// Just a debug info because we can have a non persisted ancestor class
+                	log.debug("Cannot find mapping for class "
+                	
+                	// This is not necessary to keep a non persisted ancestor class
+                	cd.setExtend(null);
+
-            	       log.debug("Class " +cd.getClassName() +  " extends " + cd.getExtend());
+            	    log.debug("Class " +cd.getClassName() +  " extends " + cd.getExtend());
-            Collection interfaces = cd.getImplements();
+            // Check if the implemented interfaces are persistent classes
+            Set interfaces = cd.getImplements();
+            Set mappedInterfaces  = new HashSet();
+            
-            	    	          String interfaceName= (String) iterator.next();
+            	    	  String interfaceName= (String) iterator.next();
-                              errors.add("Cannot find mapping for interface "
+                        	  // Just a debug info because we can have a non persisted interface reference 
+                        	  log.debug("Cannot find mapping for interface "
+                        	  
-                      	       log.debug("Class " +cd.getClassName() +  " implements " + interfaceName);
-                              //cd.setSuperClassDescriptor(interfaceClassDescriptor);
+                      	      log.debug("Class " +cd.getClassName() +  " implements " + interfaceName);
+                      	      mappedInterfaces.add(interfaceName);
+            	      
+            	      cd.setImplements(mappedInterfaces); 
