JCR-1308: Unnecessary null check in EffectiveNodeType.getApplicableChildNodeDef()

Applied improvement suggested by Ed Burnette.

Also simplified the control flow statements a bit without introducing functional changes.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@691324 13f79535-47bb-0310-9956-ffa450edef68

-        if (defs != null) {
-            for (int i = 0; i < defs.length; i++) {
-                ItemDef def = defs[i];
-                if (def.definesNode()) {
-                    NodeDef nd = (NodeDef) def;
-                    // node definition with that name exists
-                    if (entTarget != null && nd.getRequiredPrimaryTypes() != null) {
-                        // check 'required primary types' constraint
-                        if (!entTarget.includesNodeTypes(nd.getRequiredPrimaryTypes())) {
-                            continue;
-                        }
+        for (int i = 0; i < defs.length; i++) {
+            if (defs[i].definesNode()) {
+                NodeDef nd = (NodeDef) defs[i];
+                Name[] types = nd.getRequiredPrimaryTypes();
+                // node definition with that name exists
+                if (entTarget != null && types != null) {
+                    // check 'required primary types' constraint
+                    if (entTarget.includesNodeTypes(types)) {
-                    } else {
-                        if (nd.getDefaultPrimaryType() != null) {
-                            // found node definition with default node type
-                            return nd;
-                        }
+                } else if (nd.getDefaultPrimaryType() != null) {
+                    // found node definition with default node type
+                    return nd;
