JCR-258 - remove JDOM dependency from jcr-server contribution
JCR-295 - usage of Cache-Control header 
JCR-297 - log output while parsing xml
minor consistency issues and improvements

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368683 13f79535-47bb-0310-9956-ffa450edef68

-import org.jdom.Element;
+import org.w3c.dom.Element;
+import org.w3c.dom.Document;
-     * Creates a JDOM  <code>&lt;lockdiscovery&gt;</code> element in order to respond to a LOCK
-     * request or to the lockdiscovery property of a PROPFIND request.<br>
-     * NOTE: if the {@link #activeLocks} list is empty an empty lockdiscovery
-     * property is created ( <code>&lt;lockdiscovery/&gt;</code>)
-     * @return A JDOM element of the &lt;active> lock tag.
-     */
-    public Element toXml() {
-        Element lockdiscovery = getName().toXml();
-        Iterator it = activeLocks.iterator();
-        while (it.hasNext()) {
-            ActiveLock lock = (ActiveLock) it.next();
-            lockdiscovery.addContent(lock.toXml());
-	}
-	return lockdiscovery;
-    }
-
-    /**
+
+    /**
+     * Creates a JDOM  <code>&lt;lockdiscovery&gt;</code> element in order to respond to a LOCK
+     * request or to the lockdiscovery property of a PROPFIND request.<br>
+     * NOTE: if the {@link #activeLocks} list is empty an empty lockdiscovery
+     * property is created ( <code>&lt;lockdiscovery/&gt;</code>)
+     * @return A JDOM element of the &lt;active> lock tag.
+     * @param document
+     */
+    public Element toXml(Document document) {
+        Element lockdiscovery = getName().toXml(document);
+        Iterator it = activeLocks.iterator();
+        while (it.hasNext()) {
+            ActiveLock lock = (ActiveLock) it.next();
+            lockdiscovery.appendChild(lock.toXml(document));
+	}
+	return lockdiscovery;
+    }
+
