jcr-commands 
 - naming and packaging reviewed
 - now commands only read parameters from the context because commands shouldn't have a state of their own but use only the context.
 - i18n reorganized in one single resources file
 - batch mode added
 - cover most of jcr operations (versioning, locking, etc.)
 - commands simplified. Most commands don't have default values.
 - logging added

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@294914 13f79535-47bb-0310-9956-ffa450edef68

-package org.apache.jackrabbit.chain.cli;
+package org.apache.jackrabbit.command.cli;
-import java.util.MissingResourceException;
+import org.apache.jackrabbit.command.CommandHelper;
-    protected ResourceBundle bundle = ResourceBundle.getBundle(this.getClass()
-        .getPackage().getName()
-            + ".resources");
+    protected static ResourceBundle bundle = CommandHelper.getBundle();
-     * @return Returns the localized description.
+     * @return Returns the localized description. 
-        String str = null;
-            try
-            {
-                str = bundle.getString(this.name);
-            } catch (MissingResourceException e)
-            {
-                str = this.name;
-            }
+            return bundle.getString("cmd." + this.name);
-            try
-            {
-                str = bundle.getString(this.description);
-            } catch (MissingResourceException e)
-            {
-                str = this.description;
-            }
+            return bundle.getString(this.description);
-        return str;
-     * Add an argument
+     * Adds an argument.
-                "there's an argument in the position");
+                "there's an argument in the position in command " + this.name);
+        }
+        // Put default values description and arg name i18n keys
+        if (arg.getArgName() == null)
+        {
+            arg.setArgName("cmd." + this.getName() + "." + arg.getName());
+        }
+        if (arg.getDescription() == null)
+        {
+            arg.setDescription("cmd." + this.getName() + "." + arg.getName()
+                    + ".desc");
+        // Put default values description and arg name i18n keys
+        if (opt.getArgName() == null)
+        {
+            opt.setArgName("cmd." + this.getName() + "." + opt.getName());
+        }
+        if (opt.getDescription() == null)
+        {
+            opt.setDescription("cmd." + this.getName() + "." + opt.getName()
+                    + ".desc");
+        }
+        // Put default values description and arg name i18n keys
+        if (flag.getDescription() == null)
+        {
+            flag.setDescription("cmd." + this.getName() + "." + flag.getName()
+                    + ".desc");
+        }
+
+    /**
+     * @inheritDoc
+     */
+    public String toString()
+    {
+        return "CommandLine-" + this.getName() + "(" + impl + ")";
+    }
