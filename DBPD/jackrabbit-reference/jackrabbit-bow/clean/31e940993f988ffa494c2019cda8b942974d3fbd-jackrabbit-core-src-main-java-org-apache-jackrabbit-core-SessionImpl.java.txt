JCR-1590: JSR 283: Locking

- move lock token handling from Session to LockManager.java
- add more tests
- adjust tests in jcr2spi 

TODO:
- sessionscoped locks still expose the lock token
- fixing that needs some more adjustments in jcr2spi and the spi
- timeout handling

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@736658 13f79535-47bb-0310-9956-ffa450edef68

-     * Lock tokens
-     */
-    protected final Set lockTokens = new HashSet();
-
-    /**
-        addLockToken(lt, true);
-    }
-
-    /**
-     * Internal implementation of {@link #addLockToken(String)}. Additionally
-     * takes a parameter indicating whether the lock manager needs to be
-     * informed.
-     */
-    public void addLockToken(String lt, boolean notify) {
-        synchronized (lockTokens) {
-            if (lockTokens.add(lt) && notify) {
-                try {
-                    getLockManager().lockTokenAdded(this, lt);
-                } catch (RepositoryException e) {
-                    log.error("Lock manager not available.", e);
-                }
-            }
+        try {
+            wsp.get283LockManager().addLockToken(lt);
+        } catch (RepositoryException e) {
+            log.debug("Error while adding lock token.");
-        synchronized (lockTokens) {
-            String[] result = new String[lockTokens.size()];
-            lockTokens.toArray(result);
-            return result;
+        try {
+            return wsp.get283LockManager().getLockTokens();
+        } catch (RepositoryException e) {
+            log.debug("Error while accessing lock tokens.");
+            return new String[0];
-        removeLockToken(lt, true);
-    }
-
-    /**
-     * Internal implementation of {@link #removeLockToken(String)}. Additionally
-     * takes a parameter indicating whether the lock manager needs to be
-     * informed.
-     */
-    public void removeLockToken(String lt, boolean notify) {
-        synchronized (lockTokens) {
-            if (lockTokens.remove(lt) && notify) {
-                try {
-                    getLockManager().lockTokenRemoved(this, lt);
-                } catch (RepositoryException e) {
-                    log.error("Lock manager not available.", e);
-                }
-            }
+        try {
+            wsp.get283LockManager().removeLockToken(lt);
+        } catch (RepositoryException e) {
+            log.debug("Error while removing lock token.");
