Optimization: ignore notifications for states that are not in the cache
   (which btw caused a lot of warnings in the logs, too)


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@475276 13f79535-47bb-0310-9956-ffa450edef68

-        try {
-            Path path = Path.create(getPath(state.getNodeId()), name, index, true);
-            insert(path, id);
-        } catch (PathNotFoundException e) {
-            log.warn("Unable to get path of node " + state.getNodeId()
-                    + ", event ignored.");
-        } catch (MalformedPathException e) {
-            log.warn("Unable to create path of " + id, e);
-        } catch (ItemNotFoundException e) {
-            log.warn("Unable to get path of " + state.getNodeId(), e);
-        } catch (RepositoryException e) {
-            log.warn("Unable to get path of " + state.getNodeId(), e);
+        // Optimization: ignore notifications for nodes that are not in the cache
+        synchronized (cacheMonitor) {
+            if (idCache.containsKey(state.getNodeId())) {
+                try {
+                    Path path = Path.create(getPath(state.getNodeId()), name, index, true);
+                    insert(path, id);
+                } catch (PathNotFoundException e) {
+                    log.warn("Unable to get path of node " + state.getNodeId()
+                            + ", event ignored.");
+                } catch (MalformedPathException e) {
+                    log.warn("Unable to create path of " + id, e);
+                } catch (ItemNotFoundException e) {
+                    log.warn("Unable to find item " + state.getNodeId(), e);
+                } catch (RepositoryException e) {
+                    log.warn("Unable to get path of " + state.getNodeId(), e);
+                }
+            }
-        try {
-            Path path = Path.create(getPath(state.getNodeId()), name, index, true);
-            remove(path, id);
-        } catch (PathNotFoundException e) {
-            log.warn("Unable to get path of node " + state.getNodeId()
-                    + ", event ignored.");
-        } catch (MalformedPathException e) {
-            log.warn("Unable to create path of " + id, e);
-        } catch (ItemNotFoundException e) {
-            log.warn("Unable to get path of " + state.getNodeId(), e);
-        } catch (RepositoryException e) {
-            log.warn("Unable to get path of " + state.getNodeId(), e);
+        // Optimization: ignore notifications for nodes that are not in the cache
+        synchronized (cacheMonitor) {
+            if (idCache.containsKey(state.getNodeId())) {
+                try {
+                    Path path = Path.create(getPath(state.getNodeId()), name, index, true);
+                    remove(path, id);
+                } catch (PathNotFoundException e) {
+                    log.warn("Unable to get path of node " + state.getNodeId()
+                            + ", event ignored.");
+                } catch (MalformedPathException e) {
+                    log.warn("Unable to create path of " + id, e);
+                } catch (ItemNotFoundException e) {
+                    log.warn("Unable to get path of " + state.getNodeId(), e);
+                } catch (RepositoryException e) {
+                    log.warn("Unable to get path of " + state.getNodeId(), e);
+                }
+            }
