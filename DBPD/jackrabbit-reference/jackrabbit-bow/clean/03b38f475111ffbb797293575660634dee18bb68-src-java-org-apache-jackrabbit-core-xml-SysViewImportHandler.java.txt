- fixed resolving of references (JCR-33)

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@111990 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.nodetype.NodeTypeRegistry;
-import java.util.ArrayList;
-import java.util.Stack;
+import java.util.*;
+    /** list of all reference properties that need to be adjusted */
+    private LinkedList references = new LinkedList();
+
+    /** list of all mix:referenceable */
+    private HashMap referees = new HashMap();
+
+			} catch (ValueFormatException vfe) {
+                            // try setting value array
+                            current.node.setProperty(currentPropName, vals);
+                    // check if reference for later resolution
+                    if (currentPropType==PropertyType.REFERENCE) {
+                        references.add(current.node.getProperty(currentPropName));
+                    }
-                return;
+
-                return;
-	    }
-	}
-	state.node = (NodeImpl) state.parent.addNode(state.nodeName, state.primaryType);
-	if (state.mixinTypes != null) {
-	    for (int i = 0; i < state.mixinTypes.size(); i++) {
-		NodeTypeImpl mixin = session.getNodeTypeManager().getNodeType((QName) state.mixinTypes.get(i));
-		state.node.addMixin(mixin.getName());
-	}
+	} else {
+            state.node = (NodeImpl) state.parent.addNode(state.nodeName, state.primaryType);
+            if (state.mixinTypes != null) {
+                for (int i = 0; i < state.mixinTypes.size(); i++) {
+                    NodeTypeImpl mixin = session.getNodeTypeManager().getNodeType((QName) state.mixinTypes.get(i));
+                    state.node.addMixin(mixin.getName());
+                }
+            }
+        }
+
+        // check for mix:referenceable
+        if (state.node.isNodeType(NodeTypeRegistry.MIX_REFERENCEABLE)) {
+            log.info("adding refereee: ori=" + state.uuid + " new=" + state.node.getUUID());
+            referees.put(state.uuid, state.node.getUUID());
+        }
+    public void endDocument() throws SAXException {
+        try {
+            // adjust all reference properties
+            Iterator iter = references.iterator();
+            while (iter.hasNext()) {
+                Property prop = (Property) iter.next();
+                if (prop.getDefinition().isMultiple()) {
+                    Value[] values = prop.getValues();
+                    Value[] newVals = new Value[values.length];
+                    for (int i=0; i<values.length; i++) {
+                        Value val = values[i];
+                        if (val.getType()==PropertyType.REFERENCE) {
+                            String original = val.getString();
+                            String adjusted = (String) referees.get(original);
+                            if (adjusted==null) {
+                                log.error("Reference " + original + " of property can not be adjusted! " + prop.getPath());
+                                newVals[i] = val;
+                            } else {
+                                newVals[i] = new ReferenceValue(session.getNodeByUUID(adjusted));
+                            }
+                        } else {
+                            newVals[i] = val;
+                        }
+                    }
+                    prop.setValue(newVals);
+                } else {
+                    Value val = prop.getValue();
+                    if (val.getType()==PropertyType.REFERENCE) {
+                        String original = val.getString();
+                        String adjusted = (String) referees.get(original);
+                        if (adjusted==null) {
+                            log.error("Reference " + original + " of property can not be adjusted! " + prop.getPath());
+                        } else {
+                            prop.setValue(session.getNodeByUUID(adjusted));
+                        }
+                    }
+                }
+            }
+        } catch (RepositoryException e) {
+            log.error("Error while adjusting reference proerties: " + e.toString());
+        }
+    }
+
+
