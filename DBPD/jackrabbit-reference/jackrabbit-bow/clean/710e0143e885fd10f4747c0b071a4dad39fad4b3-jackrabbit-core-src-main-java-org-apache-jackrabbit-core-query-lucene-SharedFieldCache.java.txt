JCR-800: Child Axis support in order by clause

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@744889 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.List;
-import java.util.ArrayList;
-         * All the term values, in natural order.
-         */
-        public final String[] lookup;
-
-        /**
-        public StringIndex(String[] terms, String[] lookup, int setValues) {
+        public StringIndex(String[] terms, int setValues) {
-            this.lookup = lookup;
-     * @param includeLookup if <code>true</code> provides term lookup in StringIndex.
-                                                 SortComparator comparator,
-                                                 boolean includeLookup)
+                                                 SortComparator comparator)
-            List mterms = null;
-            if (includeLookup) {
-                mterms = new ArrayList();
-            }
-                // documents without a term will have a term number = 0
-                // thus will be at the top, this needs to be in sync with
-                // the implementation of FieldDocSortedHitQueue
-                if (includeLookup) {
-                    mterms.add(null); // for documents with term number 0
-                }
+                char[] tmp = new char[16];
-                        // store term text
-                        if (includeLookup) {
-                            mterms.add(term.text().substring(prefix.length()));
+                        // make sure term is compacted
+                        String text = term.text();
+                        int len = text.length() - prefix.length();
+                        if (tmp.length < len) {
+                            // grow tmp
+                            tmp = new char[len];
+                        text.getChars(prefix.length(), text.length(), tmp, 0);
+                        String value = new String(tmp, 0, len);
-                            retArray[termDocs.doc()] = term.text().substring(prefix.length());
+                            retArray[termDocs.doc()] = value;
-            String[] lookup = null;
-            if (includeLookup) {
-                lookup = (String[]) mterms.toArray(new String[mterms.size()]);
-            }
-            SharedFieldCache.StringIndex value = new SharedFieldCache.StringIndex(retArray, lookup, setValues);
+            SharedFieldCache.StringIndex value = new SharedFieldCache.StringIndex(retArray, setValues);
