JCR-1438: Replace Config classes with factories 

Replaced ISMLockingConfig with ISMLockingFactory.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@732728 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.state.DefaultISMLocking;
+import org.apache.jackrabbit.core.state.ISMLocking;
+import org.apache.jackrabbit.core.state.ISMLockingFactory;
-        ISMLockingConfig ismLockingConfig = tmpParser.parseISMLockingConfig(root);
+        ISMLockingFactory ismLockingFactory =
+            tmpParser.getISMLockingFactory(root);
-        return new WorkspaceConfig(home, name, clustered, fsf, pmc, sc, ismLockingConfig, workspaceSecurityConfig);
+        return new WorkspaceConfig(
+                home, name, clustered, fsf, pmc, sc,
+                ismLockingFactory, workspaceSecurityConfig);
-     * Parses ism locking configuration. ism locking configuration  uses the
+     * Returns an ISM locking factory that creates {@link ISMLocking} instances
+     * based on the given configuration. ISM locking configuration uses the
-     * <p/>
+     * <p>
-     * <p/>
-     * The ism locking is an optional part of the  workspace configuration. If
-     * the ism locking element is not found, then this method returns
-     * <code>null</code>.
+     * <p>
+     * ISM locking is an optional part of the  workspace configuration. If
+     * the ISM locking element is not found, then the returned factory will
+     * create instances of the {@link DefaultISMLocking} class.
-     * @return search configuration, or <code>null</code>
-     * @throws ConfigurationException if the configuration is broken
+     * @return ISM locking factory
-    protected ISMLockingConfig parseISMLockingConfig(Element parent)
-            throws ConfigurationException {
-        NodeList children = parent.getChildNodes();
-        for (int i = 0; i < children.getLength(); i++) {
-            Node child = children.item(i);
-            if (child.getNodeType() == Node.ELEMENT_NODE
-                    && ISM_LOCKING_ELEMENT.equals(child.getNodeName())) {
-                Element element = (Element) child;
-
-                // ism locking implementation class
-                String className = getAttribute(element, CLASS_ATTRIBUTE);
-
-                // ism locking parameters
-                Properties parameters = parseParameters(element);
-
-                return new ISMLockingConfig(className, parameters);
+    protected ISMLockingFactory getISMLockingFactory(final Element parent) {
+        return new ISMLockingFactory() {
+            public ISMLocking getISMLocking() throws RepositoryException {
+                Element element = getElement(parent, ISM_LOCKING_ELEMENT, false);
+                if (element != null) {
+                    BeanConfig config = parseBeanConfig(element);
+                    try {
+                        return (ISMLocking) config.newInstance();
+                    } catch (ClassCastException e) {
+                        throw new RepositoryException(
+                                "Invalid ISMLocking class: "
+                                + config.getClassName(), e);
+                    }
+                } else {
+                    return new DefaultISMLocking();
+                }
-        }
-        return null;
+        };
-        ISMLockingConfig ismLockingConfig = parseISMLockingConfig(element);
+        ISMLockingFactory ismLockingFactory =
+            getISMLockingFactory(element);
-        return new VersioningConfig(home, fsf, pmc, ismLockingConfig);
+        return new VersioningConfig(home, fsf, pmc, ismLockingFactory);
