JCR-1001 SPI: prefer 'Iterator' instead of specialized subclasses

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@553409 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.QNodeTypeDefinitionIterator;
-import org.apache.jackrabbit.spi.IdIterator;
-    public IdIterator merge(SessionInfo sessionInfo, NodeId nodeId, String srcWorkspaceName, boolean bestEffort) throws NoSuchWorkspaceException, AccessDeniedException, MergeException, LockException, InvalidItemStateException, RepositoryException {
+    public Iterator merge(SessionInfo sessionInfo, NodeId nodeId, String srcWorkspaceName, boolean bestEffort) throws NoSuchWorkspaceException, AccessDeniedException, MergeException, LockException, InvalidItemStateException, RepositoryException {
-            // TODO: need to evaluate response and return merge failed node ids
-            return new IteratorHelper(Collections.EMPTY_LIST);
+
+            MultiStatusResponse[] resps = method.getResponseBodyAsMultiStatus().getResponses();
+            List failedIds = new ArrayList(resps.length);
+            for (int i = 0; i < resps.length; i++) {
+                String href = resps[i].getHref();
+                failedIds.add(uriResolver.getNodeId(href, sessionInfo));
+            }
+            return failedIds.iterator();
-    public QNodeTypeDefinitionIterator getNodeTypeDefinitions(SessionInfo sessionInfo) throws RepositoryException {
+    public Iterator getNodeTypeDefinitions(SessionInfo sessionInfo) throws RepositoryException {
-            return new IteratorHelper(ntDefs);
+            return ntDefs.iterator();
