core.state: 
replaced abstract ItemStateCache with interface of same name and added ItemStateMap, ItemStateReferenceMap, ItemStateReferenceCache & LRUItemStateCache which provide cleaner semantics and improved memory usage behaviour

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@227042 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.commons.collections.map.ReferenceMap;
+import org.apache.jackrabbit.core.state.ItemStateReferenceMap;
-import java.util.Map;
-    private Map nodes = new ReferenceMap(ReferenceMap.HARD, ReferenceMap.SOFT);
+    private ItemStateReferenceMap nodes = new ItemStateReferenceMap();
-            if (nodes.containsKey(id)) {
+            if (nodes.contains(id)) {
-            if (nodes.containsKey(id)) {
+            if (nodes.contains(id)) {
-            nodes.put(state.getId(), state);
+            nodes.put(state);
-     * removes the nodes state from the cache
+     * removes the node state from the cache
-    protected NodeState evict(NodeId id) {
-        return (NodeState) nodes.remove(id);
+    protected void evict(NodeId id) {
+        nodes.remove(id);
