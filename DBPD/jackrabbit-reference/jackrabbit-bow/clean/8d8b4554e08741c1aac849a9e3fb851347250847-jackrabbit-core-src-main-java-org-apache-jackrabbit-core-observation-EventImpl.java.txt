JCR-699: No need for path formatting when checking for excluded events.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@498034 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.NoPrefixDeclaredException;
-import org.apache.jackrabbit.name.PathFormat;
+    //---------------------------------------------------------------< Event >
+
-        try {
-            Path p;
-            if (eventState.getChildRelPath().getIndex() > 0) {
-                p = Path.create(eventState.getParentPath(), eventState.getChildRelPath().getName(),
-                        eventState.getChildRelPath().getIndex(), false);
-            } else {
-                p = Path.create(eventState.getParentPath(), eventState.getChildRelPath().getName(), false);
-            }
-            return session.getJCRPath(p);
-        } catch (MalformedPathException e) {
-            String msg = "internal error: malformed path for event";
-            log.debug(msg);
-            throw new RepositoryException(msg, e);
-        }
+        return session.getJCRPath(getQPath());
+    //-----------------------------------------------------------< EventImpl >
+
+    /**
+     * Returns the qualified path of this event.
+     *
+     * @return qualified path
+     * @throws RepositoryException if the path can't be constructed
+     */
+    public Path getQPath() throws RepositoryException {
+        try {
+            Path parent = eventState.getParentPath();
+            Path.PathElement child = eventState.getChildRelPath();
+            int index = child.getIndex();
+            if (index > 0) {
+                return Path.create(parent, child.getName(), index, false);
+            } else {
+                return Path.create(parent, child.getName(), false);
+            }
+        } catch (MalformedPathException e) {
+            String msg = "internal error: malformed path for event";
+            log.debug(msg);
+            throw new RepositoryException(msg, e);
+        }
+    }
+
