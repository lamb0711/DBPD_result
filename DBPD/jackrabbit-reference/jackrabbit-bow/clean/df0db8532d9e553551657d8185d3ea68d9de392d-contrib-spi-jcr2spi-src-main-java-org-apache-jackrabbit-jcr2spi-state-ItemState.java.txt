- Introduce ChildPropertyEntry.isAvailable()
- Add ItemState.collectTransientStates() which traverses the ItemState hierarchy and collects the transiently modified ItemStates.
- Change various methods of NodeState to return only valid Property- and Node-States.
- Change SessionItemStateManager.getChangeLog() to use new method ItemState.collectTransientStates() and remove unused methods.
- Prepare removal of ZombieHierarchyManager :)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@433248 13f79535-47bb-0310-9956-ffa450edef68

+     * Checks if this <code>ItemState</code> is transiently modified or new and
+     * adds itself to the <code>Set</code> of <code>transientStates</code> if
+     * that is the case. It this <code>ItemState</code> has children it will
+     * call the method {@link #collectTransientStates(java.util.Set)} on those
+     * <code>ItemState</code>s.
+     *
+     * @param transientStates the <code>Set</code> of transient <code>ItemState</code>,
+     *                        collected while the <code>ItemState</code>
+     *                        hierarchy is traversed.
+     */
+    public abstract void collectTransientStates(Set transientStates);
+
+    /**
