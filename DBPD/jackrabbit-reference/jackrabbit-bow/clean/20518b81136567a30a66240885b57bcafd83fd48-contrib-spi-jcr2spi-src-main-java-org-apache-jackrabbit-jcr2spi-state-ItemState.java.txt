- work in progress: implement invalidate and refresh on ItemState.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@474207 13f79535-47bb-0310-9956-ffa450edef68

-    public int getStatus() {
+    public final int getStatus() {
+     * Refreshes this item state recursively according to {@link
+     * javax.jcr.Item#refresh(boolean) Item.refresh(true)}. That is, changes
+     * are kept and updated to reflect the current persistent state of this
+     * item.
+     * todo throw exception in case of error?
+     */
+    public abstract void refresh();
+
+    /**
+     * Invalidates this item state recursively. In contrast to {@link #refresh}
+     * this method only sets the status of this item state to {@link
+     * Status#INVALIDATED} and does not acutally update it with the persistent
+     * state in the repository.
+     */
+    public abstract void invalidate();
+
+    /**
-                    if (status == Status.EXISTING) {
+                    if (status == Status.EXISTING || status == Status.INVALIDATED) {
+                case Status.INVALIDATED:
+                    // invalidate session state as well
+                    setStatus(Status.INVALIDATED);
+                    break;
-     * @throws IllegalStateException if this state is a 'workspace' state.
+     * @throws IllegalStateException if this state is a 'session' state.
+
