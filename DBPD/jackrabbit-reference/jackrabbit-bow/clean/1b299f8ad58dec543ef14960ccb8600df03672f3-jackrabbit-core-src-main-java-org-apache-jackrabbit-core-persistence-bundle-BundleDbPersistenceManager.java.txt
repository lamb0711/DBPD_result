JCR-940: make reconnect work, but throw a RepositoryException if the driver could not be loaded

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@578043 13f79535-47bb-0310-9956-ffa450edef68

-     * @throws SQLException if an SQL erro occurs.
+     * @throws SQLException if a database error occurs.
+     * @throws RepositoryException if a repository exception occurs.
-    protected boolean checkTablesExist() throws SQLException {
+    protected boolean checkTablesExist() throws SQLException, RepositoryException {
-        Connection con = null;
-        try {
-            boolean tryAgain = true;
-            do {
-                try {
-                    con = connectionManager.getConnection();
-                    connectionManager.setAutoReconnect(false);
-                    con.setAutoCommit(false);
-                    super.store(changeLog);
-                    con.commit();
-                    con.setAutoCommit(true);
-                } catch (SQLException e) {
-                    if (tryAgain) {
-                        tryAgain = false;
-                        continue;
-                    }
-                    throw e;
-                }
-            } while(false);
-        } catch (Throwable th) {
+        int trials = 2;
+        Throwable lastException  = null;
+        do {
+            trials--;
+            Connection con = null;
-                if (con != null) {
-                    con.rollback();
+                con = connectionManager.getConnection();
+                connectionManager.setAutoReconnect(false);
+                con.setAutoCommit(false);
+                super.store(changeLog);
+                con.commit();
+                con.setAutoCommit(true);
+                return;
+            } catch (Throwable th) {
+                lastException = th;
+                try {
+                    if (con != null) {
+                        con.rollback();
+                    }
+                } catch (SQLException e) {
+                    logException("rollback failed", e);
-            } catch (SQLException e) {
-                logException("rollback failed", e);
+                if (th instanceof SQLException || th.getCause() instanceof SQLException) {
+                    connectionManager.close();
+                }
+            } finally {
+                connectionManager.setAutoReconnect(true);
-            if (th instanceof SQLException || th.getCause() instanceof SQLException) {
-                connectionManager.close();
-            }
-            throw new ItemStateException(th.getMessage());
-        } finally {
-            connectionManager.setAutoReconnect(true);
-        }
+        } while(blockOnConnectionLoss || trials > 0);
+        throw new ItemStateException(lastException.getMessage());
-            throws ItemStateException {
+            throws ItemStateException, RepositoryException {
