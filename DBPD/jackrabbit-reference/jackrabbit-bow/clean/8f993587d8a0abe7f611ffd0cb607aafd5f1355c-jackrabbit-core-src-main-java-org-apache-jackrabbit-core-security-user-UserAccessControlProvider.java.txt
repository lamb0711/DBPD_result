JCR-2710 : Add support for large number of users in a group [fix UserAccessControlProvider]

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@986263 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.Value;
+import org.apache.jackrabbit.core.nodetype.NodeTypeImpl;
+    private boolean membersInProperty;
+
+            membersInProperty = (!(uMgr instanceof UserManagerImpl)) || ((UserManagerImpl) uMgr).getGroupMembershipSplitSize() <= 0;
+
-
-        private boolean isUserAdmin;
-        private boolean isGroupAdmin;
+        private Set<Principal> principals;
-            isUserAdmin = containsGroup(principals, userAdminGroup);
-            isGroupAdmin = containsGroup(principals, groupAdminGroup);
-
+            this.principals = principals;
+            
+                boolean isUserAdmin = containsGroup(principals, userAdminGroup);
+                boolean isGroupAdmin = containsGroup(principals, groupAdminGroup);
+                    int type = ev.getType();
-                        // recalculate the is...Admin flags
-                        Node userNode = session.getNode(userNodePath);
-                        String nodePath = Text.getRelativeParent(evPath, 1);
-                        if (userAdminGroupPath.equals(nodePath)) {
-                            isUserAdmin = false;
-                            if (ev.getType() != Event.PROPERTY_REMOVED) {
-                                Value[] vs = session.getProperty(evPath).getValues();
-                                for (int i = 0; i < vs.length && !isUserAdmin; i++) {
-                                    isUserAdmin = userNode.getIdentifier().equals(vs[i].getString());
-                                }
-                            }
-                        } else if (groupAdminGroupPath.equals(nodePath)) {
-                            isGroupAdmin = false;
-                            if (ev.getType() != Event.PROPERTY_REMOVED) {
-                                Value[] vs = session.getProperty(evPath).getValues();
-                                for (int i = 0; i < vs.length && !isGroupAdmin; i++) {
-                                    isGroupAdmin = userNode.getIdentifier().equals(vs[i].getString());
-                                }
-                            }
-                        }
-                    }
+                    } else if (!membersInProperty) {
+                        /* the affected property is not rep:Members and members are
+                           stored in a tree structure (user manager configuration.
+                           test if the parent node is of type rep:Members in order
+                           to determine if any membership modification occurred.*/
+                        Node parent = session.getNodeByIdentifier(ev.getIdentifier());
+                        if (UserConstants.NT_REP_MEMBERS.equals(((NodeTypeImpl) parent.getPrimaryNodeType()).getQName())) {
+                            clearCache();
+                        }
+
+                    } // else: not interested.
-                    log.error("Internal error ", e.getMessage());
+                    log.warn("Internal error ", e.getMessage());
+                    clearCache();
