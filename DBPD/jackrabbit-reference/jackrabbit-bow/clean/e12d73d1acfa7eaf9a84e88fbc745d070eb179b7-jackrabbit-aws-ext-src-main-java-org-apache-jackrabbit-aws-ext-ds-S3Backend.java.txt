JCR-3852: [jackrabbit-aws-ext] Refactor code to open S3 service & consolidate testcases
Patch from Shashank Gupta

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1665148 13f79535-47bb-0310-9956-ffa450edef68

-    /**
-     * The default value AWS bucket region.
-     */
-    private static final String DEFAULT_AWS_BUCKET_REGION = "us-standard";
-
-    /**
-     * constants to define endpoint to various AWS region
-     */
-    private static final String AWSDOTCOM = "amazonaws.com";
-
-    private static final String S3 = "s3";
-
-    private static final String DOT = ".";
-
-    private static final String DASH = "-";
-    
-            String endpoint = null;
-            if (DEFAULT_AWS_BUCKET_REGION.equals(region)) {
+            if (Utils.DEFAULT_AWS_BUCKET_REGION.equals(region)) {
-                endpoint = S3 + DOT + AWSDOTCOM;
-                endpoint = "s3-eu-west-1" + DOT + AWSDOTCOM;
-                endpoint = S3 + DASH + region + DOT + AWSDOTCOM;
-            String propEndPoint = prop.getProperty(S3Constants.S3_END_POINT);
-            if ((propEndPoint != null) & !"".equals(propEndPoint)) {
-                endpoint = propEndPoint;
-            }
-            /*
-             * setting endpoint to remove latency of redirection. If endpoint is
-             * not set, invocation first goes us standard region, which
-             * redirects it to correct location.
-             */
-            s3service.setEndpoint(endpoint);
-            LOG.info("S3 service endpoint [{}] ", endpoint);
-           
+            } else {
+                LOG.info("Using bucket [{}] in [{}] ", bucket, region);
-                    ? true
+                    ? false
+            LOG.info("Rename keys [{}]", renameKeyBool);
-        return key.substring(0, 4) + DASH + key.substring(4);
+        return key.substring(0, 4) + Utils.DASH + key.substring(4);
-        return key.substring(0, 4) + DASH + key.substring(4);
+        return key.substring(0, 4) + Utils.DASH + key.substring(4);
-        if (!key.contains(DASH)) {
+        if (!key.contains(Utils.DASH)) {
