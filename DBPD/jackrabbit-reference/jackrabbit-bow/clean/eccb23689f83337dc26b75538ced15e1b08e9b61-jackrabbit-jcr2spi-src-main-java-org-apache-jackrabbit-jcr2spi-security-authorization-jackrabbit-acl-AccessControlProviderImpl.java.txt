JCR-2113 : JSR 283 Access Control Management (improve privilege discovery as discussed during f2f meeting with alfusainey and david, january 21)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1653976 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.Name;
-    private Map<String, Privilege> privileges = new HashMap<String, Privilege>();
+    private Map<Name, Privilege> privileges = new HashMap<Name, Privilege>();
-        Privilege priv = privileges.get(privilegeName);
-
+        Name name = resolver.getQName(privilegeName);
+        Privilege priv = getPrivilegeFromName(sessionInfo, resolver, name);
-            readPrivilegesFromService(sessionInfo, resolver);
-            if (privileges.containsKey(privilegeName)) {
-                priv = privileges.get(privilegeName);
-            } else {
-                throw new AccessControlException("Unknown privilege " + privilegeName);
-            }
+            throw new AccessControlException("Unknown privilege " + privilegeName);
+        } else {
+            return priv;
-        return priv;
-        PrivilegeDefinition[] defs = service.getPrivileges(sessionInfo, id);
-        Set<Privilege> privileges = new HashSet<Privilege>(defs.length);
-        for (PrivilegeDefinition def : defs) {
-            Privilege p = new PrivilegeImpl(def, defs, npResolver);
-            privileges.add(p);
+        Name[] privNames = service.getPrivilegeNames(sessionInfo, id);
+        Set<Privilege> pvs = new HashSet<Privilege>(privNames.length);
+        for (Name name : privNames) {
+            Privilege priv = getPrivilegeFromName(sessionInfo, npResolver, name);
+            if (priv != null) {
+                pvs.add(priv);
+            }
-        return privileges;        
+        return pvs;
+
-            privileges.put(resolver.getJCRName(d.getName()), new PrivilegeImpl(d, defs, resolver));
+            privileges.put(d.getName(), new PrivilegeImpl(d, defs, resolver));
+
+    private Privilege getPrivilegeFromName(SessionInfo sessionInfo, NamePathResolver resolver, Name privilegeName) throws RepositoryException {
+        Privilege priv = privileges.get(privilegeName);
+        if (priv == null) {
+            readPrivilegesFromService(sessionInfo, resolver);
+            if (privileges.containsKey(privilegeName)) {
+                priv = privileges.get(privilegeName);
+            }
+        }
+        return priv;
+    }
