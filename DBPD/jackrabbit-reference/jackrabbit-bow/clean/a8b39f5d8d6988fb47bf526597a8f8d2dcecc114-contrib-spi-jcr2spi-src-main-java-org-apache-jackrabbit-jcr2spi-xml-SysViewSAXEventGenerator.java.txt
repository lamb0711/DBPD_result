JCR-674: add base64 encoding for non-binary properties that do non-XML characters (checking for now: control characters other than TAB, NL, CR); note this only affects export, import still needs to be done.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@533070 13f79535-47bb-0310-9956-ffa450edef68

+import org.xml.sax.Attributes;
+    private static final String NS_XMLSCHEMA_INSTANCE_URI = "http://www.w3.org/2001/XMLSchema-instance";
+    private static final String NS_XMLSCHEMA_INSTANCE_PREFIX = "xsi";
+    private static final String NS_XMLSCHEMA_URI = "http://www.w3.org/2001/XMLSchema";
+    private static final String NS_XMLSCHEMA_PREFIX = "xs";
+
+    private static final Attributes ATTRS_EMPTY = new AttributesImpl();
+    private static final Attributes ATTRS_BINARY_ENCODED_VALUE;
+    static {
+        AttributesImpl attrs = new AttributesImpl();
+        attrs.addAttribute(QName.NS_XMLNS_URI, NS_XMLSCHEMA_INSTANCE_PREFIX, "xmlns:" + NS_XMLSCHEMA_INSTANCE_PREFIX, CDATA_TYPE, NS_XMLSCHEMA_INSTANCE_URI);
+        attrs.addAttribute(QName.NS_XMLNS_URI, NS_XMLSCHEMA_PREFIX, "xmlns:" + NS_XMLSCHEMA_PREFIX, CDATA_TYPE, NS_XMLSCHEMA_URI);
+        attrs.addAttribute(NS_XMLSCHEMA_INSTANCE_URI, "type", NS_XMLSCHEMA_INSTANCE_PREFIX + ":type", "CDATA", NS_XMLSCHEMA_PREFIX + ":base64Binary");
+        ATTRS_BINARY_ENCODED_VALUE = attrs;
+    }
+
+                Attributes attributes = ATTRS_EMPTY;
+                boolean mustSendBinary = false;
+
+                if (val.getType() != PropertyType.BINARY) {
+                    String ser = val.getString();
+                    for (int ci = 0; ci < ser.length() && mustSendBinary == false; ci++) {
+                        char c = ser.charAt(ci);
+                        if (c >= 0 && c < 32 && c != '\r' && c != '\n' && c != '\t') {
+                            mustSendBinary = true;
+                        }
+                    }
+
+                    if (mustSendBinary) {
+                        contentHandler.startPrefixMapping(NS_XMLSCHEMA_INSTANCE_PREFIX, NS_XMLSCHEMA_INSTANCE_URI);
+                        contentHandler.startPrefixMapping(NS_XMLSCHEMA_PREFIX, NS_XMLSCHEMA_URI);
+                        attributes = ATTRS_BINARY_ENCODED_VALUE;
+                    }
+                }
+
-                        PREFIXED_VALUE_ELEMENT, new AttributesImpl());
+                        PREFIXED_VALUE_ELEMENT, attributes);
-                    ValueHelper.serialize(val, false, writer);
+                    ValueHelper.serialize(val, false, mustSendBinary, writer);
+
+                if (mustSendBinary) {
+                    contentHandler.endPrefixMapping(NS_XMLSCHEMA_INSTANCE_PREFIX);
+                    contentHandler.endPrefixMapping(NS_XMLSCHEMA_PREFIX);
+                }
