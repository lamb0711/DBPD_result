work in progress

- missing escaping of item name when building uri.
- let RS parse the eventdiscovery. don't pass sessioninfo and resolvers
  to the various event related classes.
- removing of id/uri-cache entries must remove the corresponding
  entry in the other cache as well.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@472821 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.SessionInfo;
-import org.apache.jackrabbit.webdav.xml.DomUtil;
-import org.w3c.dom.Element;
+
+import java.util.Collection;
-    static final EventBundle EMPTY = new EventBundleImpl(null, null, null) {
-        public EventIterator getEvents() {
-            return IteratorHelper.EMPTY;
-        }
-    };
+    static final EventBundle EMPTY = new EventBundleImpl();
-    private final Element eventBundleElement;
-
-    private final URIResolver uriResolver;
-
-    private final SessionInfo sessionInfo;
-
+    private final Collection events;
+    private EventBundleImpl() {
+        events = null;
+        isLocal = false;
+    }
-     * @param eventBundleElement
-     * @param uriResolver
-     * @param sessionInfo
+     * @param events
+     * @param isLocal
-    EventBundleImpl(Element eventBundleElement,
-                    URIResolver uriResolver,
-                    SessionInfo sessionInfo) {
-        this.eventBundleElement = eventBundleElement;
-        this.uriResolver = uriResolver;
-        this.sessionInfo = sessionInfo;
-        String value = null;
-        if (eventBundleElement != null) {
-            value = DomUtil.getAttribute(eventBundleElement,
-                        XML_EVENT_IS_LOCAL, NAMESPACE);
-        }
-        this.isLocal = (value != null) ? Boolean.valueOf(value).booleanValue() : false;
+    EventBundleImpl(Collection events, boolean isLocal) {
+        this.events = events;
+        this.isLocal = isLocal;
-        return new EventIteratorImpl(eventBundleElement, uriResolver, sessionInfo);
+        if (events == null || events.isEmpty()) {
+            return IteratorHelper.EMPTY;
+        } else {
+            return new EventIteratorImpl(events);
+        }
