work in progress

- index if unresolved cne was always 1
- add NodeState.getIndex() and simplify Node.getIndex() and ItemState.getPath()

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@470475 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.ItemNotFoundException;
+     * Returns the index of this node state.
+     *
+     * @return the index.
+     */
+    public int getIndex() throws ItemNotFoundException {
+        if (parent == null) {
+            // the root state may never have siblings
+            return Path.INDEX_DEFAULT;
+        }
+
+        if (getDefinition().allowsSameNameSiblings()) {
+            ChildNodeEntry entry = getParent().getChildNodeEntry(this);
+            if (entry == null) {
+                String msg = "Unable to retrieve index for: " + this;
+                throw new ItemNotFoundException(msg);
+            }
+            return entry.getIndex();
+        } else {
+            return Path.INDEX_DEFAULT;
+        }
+    }
+
+    /**
-    public synchronized ChildNodeEntry getChildNodeEntry(NodeState nodeState) {
+    private synchronized ChildNodeEntry getChildNodeEntry(NodeState nodeState) {
-     * @param name the name of the child node.
-    public int getChildNodeIndex(QName name, ChildNodeEntry cne) {
-        List sns = childNodeEntries.get(name);
+    public int getChildNodeIndex(ChildNodeEntry cne) {
+        List sns = childNodeEntries.get(cne.getName());
-            ChildNodeEntry e = (ChildNodeEntry) it.next();
-            if (e == cne) {
+            ChildNodeEntry entry = (ChildNodeEntry) it.next();
+            if (entry == cne) {
-            // skip removed entries
-            try {
-                if (e.isAvailable() && e.getNodeState().isValid()) {
-                    index++;
+            // skip entries that belong to removed or invalidated states.
+            // NOTE, that in this case the nodestate must be available from the cne.
+            if (entry.isAvailable()) {
+                try {
+                    if (entry.getNodeState().isValid()) {
+                        index++;
+                    }
+                } catch (ItemStateException e) {
+                    // probably removed or stale
-            } catch (ItemStateException ex) {
-                // probably removed or stale
+            } else {
+                // cne has not been resolved yet -> increase counter.
+                index++;
