JCR-2087 Upgrade to Java 5 as the base platform

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@771817 13f79535-47bb-0310-9956-ffa450edef68

-    private ArrayList expected;
+    private ArrayList<String> expected;
-    private HashMap bindVariables;
+    private HashMap<String, BindVariableValue> bindVariables;
-    private ArrayList selectors;
+    private ArrayList<Selector> selectors;
-        selectors = new ArrayList();
-        expected = new ArrayList();
-        bindVariables = new HashMap();
+        selectors = new ArrayList<Selector>();
+        expected = new ArrayList<String>();
+        bindVariables = new HashMap<String, BindVariableValue>();
-        ArrayList list = parseColumns();
+        ArrayList<ColumnOrWildcard> list = parseColumns();
-            BindVariableValue var = (BindVariableValue) bindVariables.get(name);
+            BindVariableValue var = bindVariables.get(name);
-        ArrayList orderList = new ArrayList();
+        ArrayList<Ordering> orderList = new ArrayList<Ordering>();
-    private ArrayList parseColumns() throws RepositoryException {
-        ArrayList list = new ArrayList();
+    private ArrayList<ColumnOrWildcard> parseColumns() throws RepositoryException {
+        ArrayList<ColumnOrWildcard> list = new ArrayList<ColumnOrWildcard>();
-    private Column[] resolveColumns(ArrayList list) throws RepositoryException {
-        ArrayList columns = new ArrayList();
-        for (int i = 0; i < list.size(); i++) {
-            ColumnOrWildcard c = (ColumnOrWildcard) list.get(i);
+    private Column[] resolveColumns(ArrayList<ColumnOrWildcard> list) throws RepositoryException {
+        ArrayList<Column> columns = new ArrayList<Column>();
+        for (ColumnOrWildcard c : list) {
-                for (int j = 0; j < selectors.size(); j++) {
-                    Selector selector = (Selector) selectors.get(j);
+                for (Selector selector : selectors) {
-            StringBuffer buff = new StringBuffer();
-            for (int i = 0; i < expected.size(); i++) {
-                if (i > 0) {
+            StringBuilder buff = new StringBuilder();
+            for (String exp : expected) {
+                if (buff.length() > 0) {
-                buff.append(expected.get(i));
+                buff.append(exp);
