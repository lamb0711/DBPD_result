- add methods for observation to client
- minor improvements to observation impl in jcr-server
- fix client LockMethod and adjust LockDiscovery accordingly
- fix client MergeMethod adjust corresponding Info object accordingly
- improve UpdateInfo
- use CodedURLHeader instaed of building locktoken header manually

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@421206 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.xml.DomUtil;
+import org.apache.jackrabbit.webdav.xml.ElementIterator;
+import org.apache.jackrabbit.webdav.xml.XmlSerializable;
+import org.apache.jackrabbit.webdav.DavConstants;
+import java.util.List;
+import java.util.ArrayList;
+
+    //-----------------------------------------------------< static Factory >---
+    public static SubscriptionDiscovery createFromXml(Element sDiscoveryElement) {
+        if (!DomUtil.matches(sDiscoveryElement, ObservationConstants.SUBSCRIPTIONDISCOVERY.getName(), ObservationConstants.SUBSCRIPTIONDISCOVERY.getNamespace())) {
+            throw new IllegalArgumentException("'subscriptiondiscovery' element expected.");
+        }
+
+        List subscriptions = new ArrayList();
+        ElementIterator it = DomUtil.getChildren(sDiscoveryElement, ObservationConstants.XML_SUBSCRIPTION, ObservationConstants.NAMESPACE);
+        while (it.hasNext()) {
+            final Element sb = it.nextElement();
+            // anonymous inner class: Subscription interface
+            Subscription s = new Subscription() {
+                /**
+                 * @see Subscription#getSubscriptionId()
+                 */
+                public String getSubscriptionId() {
+                    Element ltEl = DomUtil.getChildElement(sb, ObservationConstants.XML_SUBSCRIPTIONID, ObservationConstants.NAMESPACE);
+                    if (ltEl != null) {
+                        return DomUtil.getChildText(sb, DavConstants.XML_HREF, DavConstants.NAMESPACE);
+                    }
+                    return null;
+                }
+                /**
+                 * @see XmlSerializable#toXml(Document)
+                 */
+                public Element toXml(Document document) {
+                    return (Element) document.importNode(sb, true);
+                }
+            };
+            subscriptions.add(s);
+        }
+
+        return new SubscriptionDiscovery((Subscription[]) subscriptions.toArray(new Subscription[subscriptions.size()]));
+    }
