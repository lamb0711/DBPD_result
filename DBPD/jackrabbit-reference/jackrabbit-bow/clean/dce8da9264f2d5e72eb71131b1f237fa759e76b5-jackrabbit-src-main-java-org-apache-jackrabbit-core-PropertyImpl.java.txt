- decouple InternalValue from ValueHelper
- some javadoc improvements

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@419916 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.value.ValueHelper;
-            internalValue =
-                    InternalValue.create(InternalValue.create(name).toJCRValue(session.getNamespaceResolver()),
-                            reqType, session.getNamespaceResolver());
+            Value targetValue = ValueHelper.convert(
+                    InternalValue.create(name).toJCRValue(session.getNamespaceResolver()),
+                    reqType);
+            internalValue = InternalValue.create(targetValue, session.getNamespaceResolver());
-                        internalValue =
-                                InternalValue.create(InternalValue.create(name).toJCRValue(session.getNamespaceResolver()),
-                                        reqType, session.getNamespaceResolver());
+                        Value targetValue = ValueHelper.convert(
+                                InternalValue.create(name).toJCRValue(session.getNamespaceResolver()),
+                                reqType);
+                        internalValue = InternalValue.create(targetValue, session.getNamespaceResolver());
-            value = InternalValue.create(new DateValue(date), reqType, session.getNamespaceResolver());
+            Value targetVal = ValueHelper.convert(new DateValue(date), reqType);
+            value = InternalValue.create(targetVal, session.getNamespaceResolver());
-            value = InternalValue.create(new DoubleValue(number), reqType, session.getNamespaceResolver());
+            Value targetVal = ValueHelper.convert(new DoubleValue(number), reqType);
+            value = InternalValue.create(targetVal, session.getNamespaceResolver());
-                value = InternalValue.create(new BLOBFileValue(stream), reqType, session.getNamespaceResolver());
+                Value targetVal = ValueHelper.convert(new BLOBFileValue(stream), reqType);
+                value = InternalValue.create(targetVal, session.getNamespaceResolver());
-            internalValue = InternalValue.create(string, reqType, session.getNamespaceResolver());
+            Value targetValue = ValueHelper.convert(string, reqType);
+            internalValue = InternalValue.create(targetValue, session.getNamespaceResolver());
-                        internalValue = InternalValue.create(string, reqType, session.getNamespaceResolver());
+                        Value targetValue = ValueHelper.convert(string, reqType);
+                        internalValue = InternalValue.create(targetValue, session.getNamespaceResolver());
-            value = InternalValue.create(new BooleanValue(b), reqType, session.getNamespaceResolver());
+            Value targetVal = ValueHelper.convert(new BooleanValue(b), reqType);
+            value = InternalValue.create(targetVal, session.getNamespaceResolver());
-            value = InternalValue.create(new LongValue(number), reqType, session.getNamespaceResolver());
+            Value targetVal = ValueHelper.convert(new LongValue(number), reqType);
+            value = InternalValue.create(targetVal, session.getNamespaceResolver());
-            internalValue = InternalValue.create(value, reqType, session.getNamespaceResolver());
+            Value targetVal = ValueHelper.convert(value, reqType);
+            internalValue = InternalValue.create(targetVal, session.getNamespaceResolver());
-                    if (reqType != PropertyType.UNDEFINED
-                            && reqType != value.getType()) {
+                    if (reqType != value.getType()) {
-                        internalValue = InternalValue.create(value, reqType, session.getNamespaceResolver());
+                        Value targetVal = ValueHelper.convert(value, reqType);
+                        internalValue = InternalValue.create(targetVal, session.getNamespaceResolver());
