JCR-1799 updating events swallowed (CacheBehavior.OBSERVATION)   	
JCR-1783 incomplete changelog when combining move with removal of new destination parent

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@704361 13f79535-47bb-0310-9956-ffa450edef68

-import org.slf4j.LoggerFactory;
+import org.slf4j.LoggerFactory;
-import javax.jcr.nodetype.ConstraintViolationException;
-import javax.jcr.nodetype.NoSuchNodeTypeException;
+import javax.jcr.AccessDeniedException;
-import javax.jcr.AccessDeniedException;
-import javax.jcr.version.VersionException;
+import javax.jcr.nodetype.ConstraintViolationException;
+import javax.jcr.nodetype.NoSuchNodeTypeException;
+import javax.jcr.version.VersionException;
+import java.util.ArrayList;
+import java.util.List;
-    private AddNode(NodeState parentState, Name nodeName, Name nodeTypeName, String uuid) {
+    private List addedStates = new ArrayList();
+
+    private AddNode(NodeState parentState, Name nodeName, Name nodeTypeName, String uuid)
+            throws RepositoryException {
+        assert status == STATUS_PENDING;
-    public void persisted() {
-        throw new UnsupportedOperationException("persisted() not implemented for transient modification.");
+    public void persisted() throws RepositoryException {
+        assert status == STATUS_PENDING;
+        status = STATUS_PERSISTED;
+        parentState.getHierarchyEntry().complete(this);
+
+    /**
+     * @see Operation#undo()
+     */
+    public void undo() throws RepositoryException {
+        assert status == STATUS_PENDING;
+        status = STATUS_UNDO;
+        parentState.getHierarchyEntry().complete(this);
+    }
+
-    //------------------------------------------------------------< Factory >---
+    public void addedState(List newStates) {
+        addedStates.addAll(newStates);
+    }
+    public List getAddedStates() {
+        return addedStates;
+    }
+
+    //------------------------------------------------------------< Factory >---
+    /**
+     *
+     * @param parentState
+     * @param nodeName
+     * @param nodeTypeName
+     * @param uuid
+     * @return
+     */
-                                   Name nodeTypeName, String uuid) {
+                                   Name nodeTypeName, String uuid) throws RepositoryException {
+        // make sure the parent hierarchy entry has its child entries loaded
+        // in order to be able to detect conflicts.
+        assertChildNodeEntries(parentState);
+        
