Patch apply for JCR-866

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@537659 13f79535-47bb-0310-9956-ffa450edef68

-            String elementClassName = collectionDescriptor.getElementClassName();
-            Class elementClass = ReflectionUtils.forName(elementClassName);
-            AtomicTypeConverter atomicTypeConverter = (AtomicTypeConverter) atomicTypeConverters.get(elementClass);
+            AtomicTypeConverter atomicTypeConverter = getAtomicTypeConverter(collectionDescriptor);
+        AtomicTypeConverter atomicTypeConverter = getAtomicTypeConverter(collectionDescriptor);
+
-                        AtomicTypeConverter atomicTypeConverter = (AtomicTypeConverter) atomicTypeConverters.get(value.getClass());
-                    AtomicTypeConverter atomicTypeConverter = (AtomicTypeConverter) atomicTypeConverters.get(value.getClass());
+    
+    /**
+     * Returns the AtomicTypeConverter for the element class of the described
+     * collection. If no such converter can be found a PersistenceException
+     * is thrown.
+     * 
+     * @param collectionDescriptor The descriptor of the collection for whose
+     *      elements an AtomicTypeConverter is requested.
+     *      
+     * @return The AtomicTypeConverter for the elements of the collection
+     * 
+     * @throws PersistenceException if no such type converter is registered
+     */
+    private AtomicTypeConverter getAtomicTypeConverter(CollectionDescriptor collectionDescriptor) {
+        String elementClassName = collectionDescriptor.getElementClassName();
+        Class elementClass = ReflectionUtils.forName(elementClassName);
+        AtomicTypeConverter atc = (AtomicTypeConverter) atomicTypeConverters.get(elementClass);
+        if (atc != null) {
+            return atc;
+        }
+        
+        throw new PersistenceException(
+            "Cannot get AtomicTypeConverter for element class "
+                + elementClassName + " of class "
+                + collectionDescriptor.getClassDescriptor().getClassName());
+    }
