ValuesProperty:
- bug while deserializing from xml (retrieve txt of prop-value instead of individual value-elements)
- add assertion for non-null values
- add ValueHelper.serialize in order to be consistent with parsing
  from xml.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@397936 13f79535-47bb-0310-9956-ffa450edef68

-                    if (isValueElement(propValue)) {
+                    if (isValueElement(el)) {
-                String value = DomUtil.getText(elems[i]);
-                String typeStr = DomUtil.getAttribute(elems[i], ATTR_VALUE_TYPE, ItemResourceConstants.NAMESPACE);
-                int type = (typeStr == null) ? defaultType : PropertyType.valueFromName(typeStr);
-                jcrValues[i] = ValueHelper.deserialize(value, type, false);
+                jcrValues[i] = getJcrValue(elems[i], defaultType);
+     *
+     * @param valueElement
+     * @param defaultType
+     * @return
+     * @throws ValueFormatException
+     * @throws RepositoryException
+     */
+    private static Value getJcrValue(Element valueElement, int defaultType) throws ValueFormatException, RepositoryException {
+        if (valueElement == null) {
+            return null;
+        }
+        // make sure the value is never 'null'
+        String value = DomUtil.getText(valueElement, "");
+        String typeStr = DomUtil.getAttribute(valueElement, ATTR_VALUE_TYPE, ItemResourceConstants.NAMESPACE);
+        int type = (typeStr == null) ? defaultType : PropertyType.valueFromName(typeStr);
+        // deserialize value ->> see #toXml where values are serialized
+        return ValueHelper.deserialize(value, type, true);
+    }
+
+    /**
-                Element xmlValue = DomUtil.createElement(document, XML_VALUE, ItemResourceConstants.NAMESPACE, v.getString());
+                String serializedValue = ValueHelper.serialize(v, true);
+                Element xmlValue = DomUtil.createElement(document, XML_VALUE, ItemResourceConstants.NAMESPACE, serializedValue);
