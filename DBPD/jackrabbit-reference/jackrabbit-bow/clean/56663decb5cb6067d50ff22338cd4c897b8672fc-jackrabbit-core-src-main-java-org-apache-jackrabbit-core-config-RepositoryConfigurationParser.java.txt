JCR-1438: Replace Config classes with factories

Revert previous change (r826653) to avoid conflicts with uncommitted changes from Angela.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@826668 13f79535-47bb-0310-9956-ffa450edef68

-                            config.newInstance(QueryHandler.class);
+                            (QueryHandler) config.newInstance();
-                    return parseBeanConfig(element).newInstance(ISMLocking.class);
+                    BeanConfig config = parseBeanConfig(element);
+                    try {
+                        return (ISMLocking) config.newInstance();
+                    } catch (ClassCastException e) {
+                        throw new RepositoryException(
+                                "Invalid ISMLocking class: "
+                                + config.getClassName(), e);
+                    }
-                Journal journal = config.newInstance(Journal.class);
-                if (journal instanceof AbstractJournal) {
-                    ((AbstractJournal) journal).setRepositoryHome(home);
-                }
-                try {
-                    journal.init(id, resolver);
-                } catch (JournalException e) {
-                    // TODO: Should JournalException extend RepositoryException?
+                Object object = config.newInstance();
+                if (object instanceof Journal) {
+                    Journal journal = (Journal) object;
+                    if (journal instanceof AbstractJournal) {
+                        ((AbstractJournal) journal).setRepositoryHome(home);
+                    }
+                    try {
+                        journal.init(id, resolver);
+                    } catch (JournalException e) {
+                        // TODO: Should JournalException extend RepositoryException?
+                        throw new RepositoryException(
+                                "Journal initialization failed: " + journal, e);
+                    }
+                    return journal;
+                } else {
-                            "Journal initialization failed: " + journal, e);
+                            "Invalid Journal implementation class: "
+                            + config.getClassName());
-                return journal;
-                        DataStore store = bc.newInstance(DataStore.class);
+                        DataStore store = (DataStore) bc.newInstance();
+                RepositoryLockMechanism lock = null;
-                        return bc.newInstance(RepositoryLockMechanism.class);
+                        lock = (RepositoryLockMechanism) bc.newInstance();
+                        break;
-                return new RepositoryLock();
+                if (lock == null) {
+                    lock = new RepositoryLock();
+                }
+                return lock;
-                    FileSystem fs = config.newInstance(FileSystem.class);
+                    FileSystem fs = (FileSystem) config.newInstance();
+                } catch (ClassCastException e) {
+                    throw new RepositoryException(
+                            "Invalid file system implementation class: "
+                            + config.getClassName(), e);
