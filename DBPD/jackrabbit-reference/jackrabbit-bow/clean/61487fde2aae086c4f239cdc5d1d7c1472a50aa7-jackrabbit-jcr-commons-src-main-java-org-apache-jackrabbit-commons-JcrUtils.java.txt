JCR-2120: java.lang.Iterable support for RangeIterators

Added methods for getting Iterables out of query results.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@776654 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.query.QueryResult;
+import javax.jcr.query.Row;
+    /**
+     * Returns the nodes in the given query result as an {@link Iterable}
+     * for use in a Java 5 for-each loop. The return value encapsulates
+     * the {@link QueryResult#getNodes()} method call. Potential
+     * {@link RepositoryException}s are converted to {@link RuntimeException}s.
+     *
+     * @param result query result
+     * @return nodes in the query result
+     */
+    public static Iterable<Node> getNodes(final QueryResult result) {
+        return new Iterable<Node>() {
+            @SuppressWarnings("unchecked")
+            public Iterator<Node> iterator() {
+                try {
+                    return result.getNodes();
+                } catch (RepositoryException e) {
+                    throw new RuntimeException(
+                            "Unable to access nodes in " + result, e);
+                }
+            }
+        };
+    }
+
+    /**
+     * Returns the rows in the given query result as an {@link Iterable}
+     * for use in a Java 5 for-each loop. The return value encapsulates
+     * the {@link QueryResult#getRows()} method call. Potential
+     * {@link RepositoryException}s are converted to {@link RuntimeException}s.
+     *
+     * @param result query result
+     * @return rows in the query result
+     */
+    public static Iterable<Row> getRows(final QueryResult result) {
+        return new Iterable<Row>() {
+            @SuppressWarnings("unchecked")
+            public Iterator<Row> iterator() {
+                try {
+                    return result.getRows();
+                } catch (RepositoryException e) {
+                    throw new RuntimeException(
+                            "Unable to access rows in " + result, e);
+                }
+            }
+        };
+    }
+
