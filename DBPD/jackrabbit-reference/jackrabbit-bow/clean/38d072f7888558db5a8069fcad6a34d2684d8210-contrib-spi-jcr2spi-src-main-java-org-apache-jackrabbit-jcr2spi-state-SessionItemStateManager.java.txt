work in progress

- Restore: pass NodeState(s) and Path instead of NodeId(s)
- LockManager: make sure lockmanager only remembers workspace states
- LockManager: make sure operations are executed using workspace states
- LockManager: improve isLocked/getLock/checkIsLocked and respect locks that
have been accessed before.
- VersionManager: make sure operations are executed using workspace states
- VersionManager: add checkIsCheckedOut
- VersionManager: force manager to have a WorkspaceManager
- NodeReferences:
  > make interface package protected
  > clarify method naming
  > add implementation to WorkspaceItemStateFactory
  > add NodeReferences field to NodeState
  > TO_IMPROVE: references are currently always retrieve from the SPI.
- ItemStateManager + NodeReferences
  > rename interfaces methods
  > change method signature to take NodeState instead of NodeId
  > 'getReferences' returns the property states directly

- remove some JR DIFFs. 

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@432234 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.NodeId;
+import java.util.Collection;
-     * @see ItemStateManager#getNodeReferences(NodeId)
+     * Since node references cannot be managed within the transient space,
+     * this call is delegated to the workspace itemstate manager.
+     *
+     * @see ItemStateManager#getReferingStates(NodeState)
+     * @param nodeState
-    public NodeReferences getNodeReferences(NodeId id)
-            throws NoSuchItemStateException, ItemStateException {
-
-        return workspaceItemStateMgr.getNodeReferences(id);
+    public Collection getReferingStates(NodeState nodeState) throws ItemStateException {
+        return workspaceItemStateMgr.getReferingStates(nodeState);
-     * @see ItemStateManager#hasNodeReferences(NodeId)
+     * Since node references cannot be managed within the transient space,
+     * this call is delegated to the workspace itemstate manager.
+     * 
+     * @see ItemStateManager#hasReferingStates(NodeState)
+     * @param nodeState
-    public boolean hasNodeReferences(NodeId id) {
-        return workspaceItemStateMgr.hasNodeReferences(id);
+    public boolean hasReferingStates(NodeState nodeState) {
+        return workspaceItemStateMgr.hasReferingStates(nodeState);
