JCR-1590: JSR 283 Locking (work in progress)

- add extended/new interfaces to api
- add comment and dummy methods to existing LockImpl


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@711841 13f79535-47bb-0310-9956-ffa450edef68

-class LockImpl implements Lock {
+class LockImpl implements org.apache.jackrabbit.api.jsr283.lock.Lock {
+        // TODO:  TOBEFIXED for 2.0
+        // TODO   - respect ownerInfo supplied by the client -> see LockManager#lock
+        // TODO: TOBEFIXED for 2.0
+        // TODO  - token must not be exposed for session-scoped locks (-> adjust tests and derived projects first)
+        // TODO  - openScoped tokens *may* be exposed even if session is not lock holder
+        /*
+        if (info.isSessionScoped()) {
+            return null;
+        }
+        */
+        // TODO: TOBEFIXED for 2.0
+        // TODO  - add refresh if timeout is supported -> see #getSecondsRemaining
+
-     * Returns <code>true</code> if the current session is the owner of this
-     * lock, either because it is session-scoped and bound to this session or
-     * open-scoped and this session currently holds the token for this lock.
-     * Returns <code>false</code> otherwise.
+     * Always returns {@link Long#MAX_VALUE}.
-     * @return a <code>boolean</code>.
-     * @since JCR 2.0
+     * @return Always returns {@link Long#MAX_VALUE}.
+     * @see org.apache.jackrabbit.api.jsr283.lock.Lock#getSecondsRemaining()
+     */
+    public long getSecondsRemaining() {
+        // TODO: TOBEFIXED for 2.0
+        // TODO  - add support for timeout specified by the API user -> LockManager#lock
+        return Long.MAX_VALUE;
+    }
+
+    /**
+     * @see org.apache.jackrabbit.api.jsr283.lock.Lock#isLockOwningSession()
