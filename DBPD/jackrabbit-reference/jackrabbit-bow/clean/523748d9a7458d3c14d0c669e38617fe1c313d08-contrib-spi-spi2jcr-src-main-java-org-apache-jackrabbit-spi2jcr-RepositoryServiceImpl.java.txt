minor improvement: remove unused instance fields
minor improvement: let TransientISFactory listen to states created by the WorkspaceItemStateFactory
JCR-1004 SPI: Add RepositoryService.getQNodeTypeDefinition 
         >> modify to RepositoryService.getQNodeTypeDefinitions(QName)
         >> adjust SPI implementations
         >> change NodeTypeRegistry to load definitions upon demand.



git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@555209 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.QNodeTypeDefinition;
-    public QNodeTypeDefinition getQNodeTypeDefinition(SessionInfo sessionInfo, QName nodetypeName) throws RepositoryException {
+    public Iterator getQNodeTypeDefinitions(SessionInfo sessionInfo, QName[] nodetypeNames) throws RepositoryException {
-        try {
-            String ntName = NameFormat.format(nodetypeName, sInfo.getNamespaceResolver());
-            NodeType nt = ntMgr.getNodeType(ntName);
-            return new QNodeTypeDefinitionImpl(nt, sInfo.getNamespaceResolver(), getQValueFactory());
-        } catch (NameException e) {
-            throw new RepositoryException(e);
+        List defs = new ArrayList();
+        for (int i = 0; i < nodetypeNames.length; i++) {
+            try {
+                String ntName = NameFormat.format(nodetypeNames[i], sInfo.getNamespaceResolver());
+                NodeType nt = ntMgr.getNodeType(ntName);
+                defs.add(new QNodeTypeDefinitionImpl(nt, sInfo.getNamespaceResolver(), getQValueFactory()));
+
+                // in addition pack all supertypes into the return value
+                NodeType[] supertypes = nt.getSupertypes();
+                for (int st = 0; st < supertypes.length; st++) {
+                    defs.add(new QNodeTypeDefinitionImpl(supertypes[i], sInfo.getNamespaceResolver(), getQValueFactory()));
+                }
+            } catch (NameException e) {
+                throw new RepositoryException(e);
+            }
+        return defs.iterator();
