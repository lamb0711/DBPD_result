JCR-2887 - Split PrivilegeRegistry in a per-session manager instance and a repository level registry  (WIP)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1181645 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.value.InternalValue;
+import org.apache.jackrabbit.spi.Name;
-                Value[] privValues = aceNode.getProperty(P_PRIVILEGES).getValues();
-                Privilege[] privs = new Privilege[privValues.length];
+                InternalValue[] privValues = aceNode.getProperty(P_PRIVILEGES).internalGetValues();
+                Name[] privNames = new Name[privValues.length];
-                    privs[i] = acMgr.privilegeFromName(privValues[i].getString());
+                    privNames[i] = privValues[i].getName();
-                Entry ace = createEntry(
-                        princ,
-                        privs,
+                Entry ace = new Entry(princ, privilegeMgr.getBits(privNames),
-                        Set<Privilege> mergedPrivs = privilegeMgr.getPrivileges(mergedBits);
-                        entry = createEntry(entry, mergedPrivs.toArray(new Privilege[mergedPrivs.size()]), entry.isAllow());
+                        entry = new Entry(entry, mergedBits, entry.isAllow());
-                    Set<Privilege> result = privilegeMgr.getPrivileges(diff);
-                    Entry tmpl = createEntry(entry,
-                            result.toArray(new Privilege[result.size()]),
-                            !entry.isAllow());
+                    Entry tmpl = new Entry(entry, diff, !entry.isAllow());
+        private Entry(Principal principal, PrivilegeBits privilegeBits, boolean allow, Map<String,Value> restrictions)
+                throws RepositoryException {
+            super(principal, privilegeBits, allow, restrictions);
+            pattern = calculatePattern();
+        }
+
+        private Entry(Entry base, PrivilegeBits newPrivilegeBits, boolean isAllow) throws RepositoryException {
+            super(base, newPrivilegeBits, isAllow);
+            pattern = calculatePattern();
+        }
+
