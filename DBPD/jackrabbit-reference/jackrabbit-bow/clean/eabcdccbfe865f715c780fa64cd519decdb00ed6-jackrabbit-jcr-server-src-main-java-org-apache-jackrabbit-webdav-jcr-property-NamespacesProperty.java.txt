JCR-2509 : Reduce number of compiler warning by adding @Override and generics where appropriate [step 2: jackrabbit-jcr-server]

in addition:
- minor improvements in comments, typos
- use foreach loops where possible
- remove redundant Tika imports in server/io package
- remove redundant casts
- add missing index increment in SubscriptionManagerImpl.SubscriptionMap

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@915339 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Iterator;
-public class NamespacesProperty extends AbstractDavProperty implements ItemResourceConstants {
+public class NamespacesProperty extends AbstractDavProperty<Map<String, String>> implements ItemResourceConstants {
-    private final Map value = new HashMap();
+    private final Map<String, String> value = new HashMap<String, String>();
-            String[] prefixes = nsReg.getPrefixes();
-            for (int i = 0; i < prefixes.length; i++) {
-                value.put(prefixes[i], nsReg.getURI(prefixes[i]));
+            for (String prefix : nsReg.getPrefixes()) {
+                value.put(prefix, nsReg.getURI(prefix));
-    public NamespacesProperty(Map namespaces) {
+    public NamespacesProperty(Map<String, String> namespaces) {
-    public NamespacesProperty(DavProperty property) throws DavException {
+    public NamespacesProperty(DavProperty<?> property) throws DavException {
-        Iterator it = ((List)v).iterator();
-        while (it.hasNext()) {
-            Object listEntry = it.next();
+        for (Object listEntry : (List<?>) v) {
-    public Map getNamespaces() {
+    public Map<String, String> getNamespaces() {
-    public Object getValue() {
+    public Map<String, String> getValue() {
+    @Override
-        Iterator prefixes = value.keySet().iterator();
-        while (prefixes.hasNext()) {
-            String prefix = (String) prefixes.next();
-            String uri = (String) value.get(prefix);
+        for (String prefix : value.keySet()) {
+            String uri = value.get(prefix);
-}
+}
