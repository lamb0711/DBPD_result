JCR-EXT: 0.16.4.1 upgrades and documentation improvements
	* DecoratorFactory.java: Added more javadocs
	* SessionDecorator.java: Upgraded to 0.16.4.1

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@169282 13f79535-47bb-0310-9956-ffa450edef68

- * Factory interface for creating decorator instances.
- * 
- * @author Jukka Zitting
+ * Factory interface for creating decorator instances. The decorator
+ * classes create new decorator instances using a factory to make it
+ * easier to customize the behaviour of a decorator layer. 
-     * Creates a {@link Repository Repository} decorator.
+     * Creates a repository decorator.
-     * Creates a {@link Session Session} decorator. 
-     *  
-     * @param repository the repository decorator 
-     * @param session the underlying session instance
+     * Creates a session decorator. The created session decorator will
+     * return the given repository (decorator) instance from the
+     * {@link Session#getRepository() getRepository()} method to avoid
+     * breaking the decorator layer.
+     * <p>
+     * The following example code illustrates how this method should be
+     * used to implement the repository login methods.
+     * <pre>
+     *     DecoratorFactory factory = ...; // The decorator factory
+     *     Session session = ...;          // The underlying session instance
+     *     return factory.getSessionDecorator(this, session);
+     * </pre>
+     *
+     * @param repository the repository (decorator) instance used to create
+     *                   the session decorator
+     * @param session    the underlying session instance
-    
+
+    /**
+     * Creates a workspace decorator.
+     *
+     * @param session   the session (decorator) instance used to create the
+     *                  workspace decorator
+     * @param workspace the underlying workspace instance
+     * @return workspace decorator
+     */
+    /**
+     * Creates a node decorator.
+     *
+     * @param session the session (decorator) instance used to create the
+     *                node decorator
+     * @param node    the underlying node instance
+     * @return node decorator
+     */
+    /**
+     * Creates a property decorator.
+     *
+     * @param session  the session (decorator) instance used to create the
+     *                 property decorator
+     * @param property the underlying property instance
+     * @return property decorator
+     */
+    /**
+     * Creates an item decorator.
+     *
+     * @param session the session (decorator) instance used to create the
+     *                item decorator
+     * @param item    the underlying item instance
+     * @return item decorator
+     */
