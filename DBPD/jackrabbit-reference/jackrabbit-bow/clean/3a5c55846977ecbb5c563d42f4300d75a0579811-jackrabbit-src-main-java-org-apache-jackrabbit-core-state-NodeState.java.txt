- Use custom collection implementation for item state listeners.
reduces memory consumption caused by those collections to about 1/3.
Performance of common operations on the WeakIdentityCollection scale linearly and outperforms the previously used ReferenceMap until it contains aprox. 100 listeners. Most item states only contain few listeners.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@378539 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.commons.collections.map.ReferenceMap;
+import org.apache.jackrabbit.util.WeakIdentityCollection;
+import org.apache.log4j.Logger;
+    private static Logger log = Logger.getLogger(NodeState.class);
+
-    private final transient ReferenceMap listeners =
-            new ReferenceMap(ReferenceMap.WEAK, ReferenceMap.WEAK);
+    private final transient Collection listeners = new WeakIdentityCollection(3);
-                if (!listeners.containsKey(listener)) {
-                    listeners.put(listener, listener);
+                if (listeners.contains(listener)) {
+                    log.debug("listener already registered: " + listener);
+                    // no need to add to call ItemState.addListener()
+                    return;
+                } else {
+                    listeners.add(listener);
-            MapIterator iter = listeners.mapIterator();
+            Iterator iter = listeners.iterator();
-            MapIterator iter = listeners.mapIterator();
+            Iterator iter = listeners.iterator();
-            MapIterator iter = listeners.mapIterator();
+            Iterator iter = listeners.iterator();
