JCR-2113 : WIP (Contribution by Alfusainey Jallow)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1640892 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+import java.util.List;
+
+import org.apache.jackrabbit.webdav.DavException;
+import org.apache.jackrabbit.webdav.DavServletResponse;
+import org.apache.jackrabbit.webdav.xml.ElementIterator;
+
+    public Privilege getPrivilege() {
+        return privilege;
+    }
+    
+    public boolean isAbstract() {
+        return isAbstract;
+    }
+    
+    public SupportedPrivilege[] getSupportedPrivileges() {
+        return supportedPrivileges;
+    }
+    
+    /**
+     * Factory method to create/retrieve a <code>SupportedPrivilege</code> from the given
+     * DAV:privilege element.
+     *
+     * @param privilege
+     * @return
+     */
+    static SupportedPrivilege getSupportedPrivilege(Element supportedPrivilege) throws DavException {
+        if (!DomUtil.matches(supportedPrivilege, XML_SUPPORTED_PRIVILEGE, SecurityConstants.NAMESPACE)) {
+            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "DAV:supported-privilege element expected.");
+        }
+        boolean isAbstract = false;
+        Privilege privilege = null;
+        String description = null;
+        String descriptionLanguage = null;
+        List<SupportedPrivilege> sp = new ArrayList<SupportedPrivilege>();
+
+        ElementIterator children = DomUtil.getChildren(supportedPrivilege);
+        while (children.hasNext()) {
+            Element child = children.next();
+            if (child.getLocalName().equals(XML_ABSTRACT)) {
+                isAbstract = true;
+            } else if (child.getLocalName().equals(Privilege.XML_PRIVILEGE)) {
+                privilege = Privilege.getPrivilege(child);
+            } else if (child.getLocalName().equals(XML_DESCRIPTION)) {
+                description = child.getLocalName();
+                if (child.hasAttribute(descriptionLanguage)) {
+                    descriptionLanguage = child.getAttribute(descriptionLanguage);
+                }
+            } else if (child.getLocalName().equals(XML_SUPPORTED_PRIVILEGE)) {
+                sp.add(getSupportedPrivilege(child));
+            }
+        }
+        return new SupportedPrivilege(privilege, description,
+                                     descriptionLanguage, isAbstract,
+                                     sp.toArray(new SupportedPrivilege[sp.size()]));
+    }
