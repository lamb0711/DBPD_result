JCR-2025: Optimize concurrent queries

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@756432 13f79535-47bb-0310-9956-ffa450edef68

-                    return new TermQuery(new Term(FieldNames.PROPERTY_LENGTHS, namedLength));
+                    return new JackrabbitTermQuery(new Term(FieldNames.PROPERTY_LENGTHS, namedLength));
-                    b.add(new TermQuery(new Term(FieldNames.PROPERTY_LENGTHS, namedLength)),
+                    b.add(new JackrabbitTermQuery(new Term(FieldNames.PROPERTY_LENGTHS, namedLength)),
-                    return new TermQuery(new Term(FieldNames.LOCAL_NAME, value));
+                    return new JackrabbitTermQuery(new Term(FieldNames.LOCAL_NAME, value));
-                    b.add(new TermQuery(new Term(FieldNames.LOCAL_NAME, value)),
+                    b.add(new JackrabbitTermQuery(new Term(FieldNames.LOCAL_NAME, value)),
-                    return new TermQuery(new Term(FieldNames.PROPERTIES, text));
+                    return new JackrabbitTermQuery(new Term(FieldNames.PROPERTIES, text));
-                    b.add(new TermQuery(new Term(FieldNames.PROPERTIES, text)),
+                    b.add(new JackrabbitTermQuery(new Term(FieldNames.PROPERTIES, text)),
-            q = new TermQuery((Term) terms.get(0));
+            q = new JackrabbitTermQuery((Term) terms.get(0));
-                b.add(new TermQuery((Term) it.next()), BooleanClause.Occur.SHOULD);
+                b.add(new JackrabbitTermQuery((Term) it.next()), BooleanClause.Occur.SHOULD);
-            return transformTermQuery(new TermQuery(ctq.getTerm()), toUpperCase);
+            return transformTermQuery(new JackrabbitTermQuery(ctq.getTerm()), toUpperCase);
