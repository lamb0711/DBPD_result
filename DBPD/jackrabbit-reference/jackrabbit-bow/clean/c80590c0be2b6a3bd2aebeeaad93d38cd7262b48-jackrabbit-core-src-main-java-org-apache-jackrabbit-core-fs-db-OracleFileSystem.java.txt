JCR-3030: Permit using different tablespaces for tables and indexes with Oracle

Patch by Edouard Hue

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1179984 13f79535-47bb-0310-9956-ffa450edef68

+import javax.sql.DataSource;
+
-import javax.sql.DataSource;
-
- * <li><code>tableSpace</code>: the tablespace to use</li>
+ * <li><code>tablespace</code>: the tablespace to use for tables (also used for indexes if <code>indexTablespace</code> is omitted)</li>
+ * <li><code>indexTablespace</code>: the tablespace to use for indexes</li>
- *       &lt;param name="tableSpace" value="default"/&gt;
+ *       &lt;param name="tablespace" value="user"/&gt;
+ *       &lt;param name="indexTablespace" value="user"/&gt;
+    /**
+     * The default tablespace clause used when {@link #tablespace} or {@link #indexTablespace}
+     * are not specified.
+     */
+    protected static final String DEFAULT_TABLESPACE_CLAUSE = "";
+    
+    /**
+     * Name of the replacement variable in the DDL for {@link #tablespace}.
+     */
+    protected static final String TABLESPACE_VARIABLE = "${tablespace}";
+    
+    /**
+     * Name of the replacement variable in the DDL for {@link #indexTablespace}.
+     */
+    protected static final String INDEX_TABLESPACE_VARIABLE = "${indexTablespace}";
-    /** the Oracle table space to use */
-    protected String tableSpace = "";
+    /** The Oracle tablespace to use for tables */
+    protected String tablespace;
+    /** The Oracle tablespace to use for indexes */
+    protected String indexTablespace;
+    
+        tablespace = DEFAULT_TABLESPACE_CLAUSE;
+        indexTablespace = DEFAULT_TABLESPACE_CLAUSE;
-     * Returns the configured Oracle table space.
-     * @return the configured Oracle table space.
+     * Returns the configured Oracle tablespace for tables.
+     * @return the configured Oracle tablespace for tables.
-    public String getTableSpace() {
-        return tableSpace;
+    public String getTablespace() {
+        return tablespace;
-     * Sets the Oracle table space.
-     * @param tableSpace the Oracle table space.
+     * Sets the Oracle tablespace for tables.
+     * @param tablespaceName the Oracle tablespace for tables.
-    public void setTableSpace(String tableSpace) {
-        if (tableSpace != null && tableSpace.trim().length() > 0) {
-            this.tableSpace = "tablespace " + tableSpace.trim();
+    public void setTablespace(String tablespaceName) {
+        this.tablespace = this.buildTablespaceClause(tablespaceName);
+    }
+    
+    /**
+     * Returns the configured Oracle tablespace for indexes.
+     * @return the configured Oracle tablespace for indexes.
+     */
+    public String getIndexTablespace() {
+        return indexTablespace;
+    }
+    
+    /**
+     * Sets the Oracle tablespace for indexes.
+     * @param tablespace the Oracle tablespace for indexes.
+     */
+    public void setIndexTablespace(String tablespaceName) {
+        this.indexTablespace = this.buildTablespaceClause(tablespaceName);
+    }
+    
+    /**
+     * Constructs the <code>tablespace &lt;tbs name&gt;</code> clause from
+     * the supplied tablespace name. If the name is empty, {@link #DEFAULT_TABLESPACE_CLAUSE}
+     * is returned instead.
+     * 
+     * @param tablespaceName A tablespace name
+     * @return A tablespace clause using the supplied name or
+     * <code>{@value #DEFAULT_TABLESPACE_CLAUSE}</code> if the name is empty
+     */
+    private String buildTablespaceClause(String tablespaceName) {
+        if (tablespaceName == null || tablespaceName.trim().length() == 0) {
+            return DEFAULT_TABLESPACE_CLAUSE;
-            this.tableSpace = "";
+            return "tablespace " + tablespaceName.trim();
-        return super.createCheckSchemaOperation().addVariableReplacement(
-            CheckSchemaOperation.TABLE_SPACE_VARIABLE, tableSpace);
+        if (DEFAULT_TABLESPACE_CLAUSE.equals(indexTablespace) && !DEFAULT_TABLESPACE_CLAUSE.equals(tablespace)) {
+            // tablespace was set but not indexTablespace : use the same for both
+            indexTablespace = tablespace;
+        }
+        return super.createCheckSchemaOperation()
+            .addVariableReplacement(TABLESPACE_VARIABLE, tablespace)
+            .addVariableReplacement(INDEX_TABLESPACE_VARIABLE, indexTablespace);
