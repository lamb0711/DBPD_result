JCR-2272: Errors during concurrent session import of nodes with same UUIDs

Avoid the check for an existing id in NodeImpl.makePersistent().
Also fix a problem with cases where a node with a specific UUID
is both removed and added within the same transient space.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/branches/JCR-2272@1174017 13f79535-47bb-0310-9956-ffa450edef68

-        if (nonRandomId && sharedStateMgr.hasItemState(id)) {
+        if (nonRandomId && !changeLog.deleted(id)
+                && sharedStateMgr.hasItemState(id)) {
+     * Returns the local node state below the given transient one. If given
+     * a fresh new node state, then a new local state is created and added
+     * to the change log.
+     *
+     * @param transientState transient state
+     * @return local node state
+     * @throws RepositoryException if the local state could not be created
+     */
+    public NodeState getOrCreateLocalState(NodeState transientState)
+            throws RepositoryException {
+        NodeState localState = (NodeState) transientState.getOverlayedState();
+        if (localState == null) {
+            // The transient node state is new, create a new local state
+            localState = new NodeState(
+                    transientState.getNodeId(),
+                    transientState.getNodeTypeName(),
+                    transientState.getParentId(),
+                    ItemState.STATUS_NEW,
+                    false);
+            changeLog.added(localState);
+            localState.setContainer(this);
+            try {
+                transientState.connect(localState);
+            } catch (ItemStateException e) {
+                // should never happen
+                throw new RepositoryException(e);
+            }
+        }
+        return localState;
+    }
+
+    /**
