JCR-1668 After RepositoryImpl instance has been created and shut down, some classes cannot be unloaded

* Stops the TransientFileFactory reaper thread and the DatabaseJournal janitor thread on shutdown.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@796955 13f79535-47bb-0310-9956-ffa450edef68

-    private ReferenceQueue phantomRefQueue = new ReferenceQueue();
+    private final ReferenceQueue<File> phantomRefQueue = new ReferenceQueue<File>();
-    private Collection trackedRefs = Collections.synchronizedList(new ArrayList());
+    private final Collection<MoribundFileReference> trackedRefs =
+        Collections.synchronizedList(new ArrayList<MoribundFileReference>());
-    private final Thread reaper;
+    private final ReaperThread reaper;
-            for (Iterator it = trackedRefs.iterator(); it.hasNext();) {
-                MoribundFileReference fileRef = (MoribundFileReference) it.next();
-                fileRef.delete();
+            for (Iterator<MoribundFileReference> it = trackedRefs.iterator(); it.hasNext();) {
+                it.next().delete();
+            shutdownHook = null;
+        reaper.stopWorking();
+        private volatile boolean stopping = false;
+
-            while (true) {
+            while (!stopping) {
+                } catch (InterruptedException e) {
+                    if (stopping) {
+                        break;
+                    }
+
+        /**
+         * Stops the reaper thread.
+         */
+        public void stopWorking() {
+            stopping = true;
+            interrupt();
+        }
-    private class MoribundFileReference extends PhantomReference {
+    private class MoribundFileReference extends PhantomReference<File> {
-        private String path;
+        private final String path;
-        MoribundFileReference(File file, ReferenceQueue queue) {
+        MoribundFileReference(File file, ReferenceQueue<File> queue) {
