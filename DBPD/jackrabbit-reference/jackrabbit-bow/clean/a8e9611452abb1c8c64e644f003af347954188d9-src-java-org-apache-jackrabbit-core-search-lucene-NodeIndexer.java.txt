- Removed interface EventDispatcher. not used anymore.
- Adapted implementation of path handling in search to use regular term queries instead of a filter -> scales better.
- Changed notion of TEST_ROOT in test classes to also include the root slash.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@51875 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.InternalValue;
-import org.apache.jackrabbit.core.Path;
-import org.apache.jackrabbit.core.PropertyId;
-import org.apache.jackrabbit.core.QName;
-import org.apache.jackrabbit.core.state.*;
+import org.apache.jackrabbit.core.state.NodeState;
+import org.apache.jackrabbit.core.state.ItemStateProvider;
+import org.apache.jackrabbit.core.state.PropertyState;
+import org.apache.jackrabbit.core.state.NoSuchItemStateException;
+import org.apache.jackrabbit.core.state.ItemStateException;
+import org.apache.jackrabbit.core.PropertyId;
+import org.apache.jackrabbit.core.InternalValue;
+import org.apache.jackrabbit.core.QName;
+import org.apache.jackrabbit.core.Path;
+import org.apache.jackrabbit.core.NoPrefixDeclaredException;
-import javax.jcr.NamespaceException;
-import java.util.Calendar;
-import java.util.Iterator;
+import javax.jcr.NamespaceException;
+import javax.jcr.PathNotFoundException;
+import java.util.Iterator;
+import java.util.Calendar;
+ *
-    private final String path;
+    private final Path path;
-                        String path,
+                        Path path,
-                                          String path,
+                                          Path path,
-        // Path
-        doc.add(new Field(FieldNames.PATH, path, true, true, false));
+        try {
+            // Path
+            doc.add(new Field(FieldNames.PATH, path.toJCRPath(mappings), true, true, false));
+            Path p = null;
+            if (path.denotesRoot()) {
+                p = path;
+            } else {
+                p = path.getAncestor(1);
+            }
+            // Ancestors
+            while (!p.denotesRoot()) {
+                doc.add(new Field(FieldNames.ANCESTORS, p.toJCRPath(mappings),
+                        false, true, false));
+                p = p.getAncestor(1);
+            }
+            // Label
+            doc.add(new Field(FieldNames.LABEL, path.getNameElement().toJCRName(mappings),
+                    false, true, false));
+            // hierarchy level
+            doc.add(new Field(FieldNames.LEVEL, String.valueOf(path.getAncestorCount()),
+                    false, true, false));
+        } catch (NoPrefixDeclaredException e) {
+            // will never happen, because this.mappings will dynamically add
+            // unknown uri<->prefix mappings
+        } catch (PathNotFoundException e) {
+            // will never happen because we check for root
+        }
