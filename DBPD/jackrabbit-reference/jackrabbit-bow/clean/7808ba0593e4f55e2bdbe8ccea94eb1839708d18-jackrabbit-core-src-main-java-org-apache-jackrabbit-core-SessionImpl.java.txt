JCR-2886 : Add SessionImpl#isAdminOrSystem

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1072095 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.api.security.user.Authorizable;
+import org.apache.jackrabbit.api.security.user.User;
+import org.apache.jackrabbit.core.security.SystemPrincipal;
+import org.apache.jackrabbit.core.security.principal.AdminPrincipal;
+     * Returns <code>true</code> if the subject contains a
+     * <code>SystemPrincipal</code>; <code>false</code> otherwise.
+     *
+     * @return <code>true</code> if this is an system session.
+     */
+    public boolean isSystem() {
+        // NOTE: for backwards compatibility evaluate subject for containing SystemPrincipal
+        // TODO: Q: shouldn't 'isSystem' rather be covered by instances of SystemSession only?
+        return (subject != null && !subject.getPrincipals(SystemPrincipal.class).isEmpty());
+    }
+    
+    /**
+     * Returns <code>true</code> if this session has been created for the
+     * administrator. <code>False</code> otherwise.
+     *
+     * @return <code>true</code> if this is an admin session.
+     */
+    public boolean isAdmin() {
+        // NOTE: don't replace by getUserManager()
+        if (userManager != null) {
+            try {
+                Authorizable a = userManager.getAuthorizable(userId);
+                if (a != null && !a.isGroup()) {
+                    return ((User) a).isAdmin();
+                }
+            } catch (RepositoryException e) {
+                // no user management -> use fallback
+            }
+
+        }
+        // fallback: user manager not yet initialized or user mgt not supported
+        // -> check for AdminPrincipal being present in the subject.
+        return (subject != null && !subject.getPrincipals(AdminPrincipal.class).isEmpty());
+    }
+
+    /**
