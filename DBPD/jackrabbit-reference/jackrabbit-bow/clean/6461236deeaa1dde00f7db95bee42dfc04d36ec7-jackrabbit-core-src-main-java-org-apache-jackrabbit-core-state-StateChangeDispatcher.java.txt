JCR-2087 Upgrade to Java 5 as the base platform

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@785540 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Iterator;
-    private final Collection listeners = new CopyOnWriteArrayList();
+    private final Collection<WeakReference<ItemStateListener>> listeners = new CopyOnWriteArrayList();
-    private final transient Collection nsListeners = new CopyOnWriteArrayList();
+    private final transient Collection<WeakReference<NodeStateListener>> nsListeners = new CopyOnWriteArrayList();
-        listeners.add(new WeakReference(listener));
+        listeners.add(new WeakReference<ItemStateListener>(listener));
-            assert getReference(nsListeners, listener) == null;
-            nsListeners.add(new WeakReference(listener));
+            NodeStateListener nsListener = (NodeStateListener) listener;
+            assert getReference(nsListeners, nsListener) == null;
+            nsListeners.add(new WeakReference<NodeStateListener>(nsListener));
-    
-    private Reference getReference(Collection coll, ItemStateListener listener) {
-        Iterator iter = coll.iterator();
-        while (iter.hasNext()) {
-            Reference ref = (Reference) iter.next();
+
+    private <T> Reference<T> getReference(Collection< ? extends Reference<T>> coll, ItemStateListener listener) {
+        for (Reference<T> ref : coll) {
-        Iterator iter = listeners.iterator();
-        while (iter.hasNext()) {
-            Reference ref = (Reference) iter.next();
-            ItemStateListener l = (ItemStateListener) ref.get();
+        for (Reference<ItemStateListener> ref : listeners) {
+            ItemStateListener l = ref.get();
-        Iterator iter = listeners.iterator();
-        while (iter.hasNext()) {
-            Reference ref = (Reference) iter.next();
-            ItemStateListener l = (ItemStateListener) ref.get();
+        for (Reference<ItemStateListener> ref : listeners) {
+            ItemStateListener l = ref.get();
-        Iterator iter = listeners.iterator();
-        while (iter.hasNext()) {
-            Reference ref = (Reference) iter.next();
-            ItemStateListener l = (ItemStateListener) ref.get();
+        for (Reference<ItemStateListener> ref : listeners) {
+            ItemStateListener l = ref.get();
-            }            
+            }
-        Iterator iter = listeners.iterator();
-        while (iter.hasNext()) {
-            Reference ref = (Reference) iter.next();
-            ItemStateListener l = (ItemStateListener) ref.get();
+        for (Reference<ItemStateListener> ref : listeners) {
+            ItemStateListener l = ref.get();
-            }               
+            }
-        Iterator iter = nsListeners.iterator();
-        while (iter.hasNext()) {
-            Reference ref = (Reference) iter.next();
-            NodeStateListener n = (NodeStateListener) ref.get();
+        for (Reference<NodeStateListener> ref : nsListeners) {
+            NodeStateListener n = ref.get();
-            }                 
+            }
-        Iterator iter = nsListeners.iterator();
-        while (iter.hasNext()) {
-            Reference ref = (Reference) iter.next();
-            NodeStateListener n = (NodeStateListener) ref.get();
+        for (Reference<NodeStateListener> ref : nsListeners) {
+            NodeStateListener n = ref.get();
-            }              
+            }
-        Iterator iter = nsListeners.iterator();
-        while (iter.hasNext()) {
-            Reference ref = (Reference) iter.next();
-            NodeStateListener n = (NodeStateListener) ref.get();
+        for (Reference<NodeStateListener> ref : nsListeners) {
+            NodeStateListener n = ref.get();
-            }               
+            }
-        Iterator iter = nsListeners.iterator();
-        while (iter.hasNext()) {
-            Reference ref = (Reference) iter.next();
-            NodeStateListener n = (NodeStateListener) ref.get();
+        for (Reference<NodeStateListener> ref : nsListeners) {
+            NodeStateListener n = ref.get();
-            }               
+            }
