JCR-3026 - apply modified patch (original author: chad davis)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1151110 13f79535-47bb-0310-9956-ffa450edef68

-    public RepositoryService createRepositoryService(Map<?, ?> parameters) throws RepositoryException {
-        String uri;
+    /**
+     * Optional configuration parameter: It's value defines the
+     * maximumConnectionsPerHost value on the HttpClient configuration and 
+     * must be an int greater than zero.
+     */
+    public static final String PARAM_MAX_CONNECTIONS = "org.apache.jackrabbit.spi2davex.MaxConnections";
+    public RepositoryService createRepositoryService(Map<?, ?> parameters) throws RepositoryException {
+        // retrieve the repository uri
+        String uri;
-        }
-        else {
-            uri = parameters.get(PARAM_REPOSITORY_URI) == null
-                    ? null
-                    : parameters.get(PARAM_REPOSITORY_URI).toString();
+        } else {
+            Object repoUri = parameters.get(PARAM_REPOSITORY_URI);
+            uri = (repoUri == null) ? null : repoUri.toString();
+        // load other optional configuration parameters
+        int itemInfoCacheSize = ItemInfoCacheImpl.DEFAULT_CACHE_SIZE;
+        int maximumHttpConnections = 0;
+
+            // batchRead config
-        }
-        int itemInfoCacheSize = ItemInfoCacheImpl.DEFAULT_CACHE_SIZE;
-        Object param = parameters.get(PARAM_ITEMINFO_CACHE_SIZE);
-        if (param != null) {
-            try {
-                itemInfoCacheSize = Integer.parseInt(param.toString());
+            // itemCache size config
+            param = parameters.get(PARAM_ITEMINFO_CACHE_SIZE);
+            if (param != null) {
+                try {
+                    itemInfoCacheSize = Integer.parseInt(param.toString());
+                } catch (NumberFormatException e) {
+                    // ignore, use default
+                }
-            catch (NumberFormatException e) {
-                // ignore, use default
+
+            // max connections config
+            param = parameters.get(PARAM_MAX_CONNECTIONS);
+            if (param != null) {
+                try {
+                    maximumHttpConnections = Integer.parseInt(param.toString());
+                } catch ( NumberFormatException e ) {
+                    // using default
+                }
-        return new RepositoryServiceImpl(uri, null, brc, itemInfoCacheSize);
+        if (maximumHttpConnections > 0) {
+            return new RepositoryServiceImpl(uri, null, brc, itemInfoCacheSize, maximumHttpConnections);
+        } else {
+            return new RepositoryServiceImpl(uri, null, brc, itemInfoCacheSize);
+        }
