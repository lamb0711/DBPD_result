JCR-4118: RepositoryChecker creates invalid node names

create valid names / do sanity check in test case

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1786325 13f79535-47bb-0310-9956-ffa450edef68

-
-import junit.framework.TestCase;
+import javax.jcr.nodetype.ConstraintViolationException;
+import junit.framework.TestCase;
+
-
-
+            s.getWorkspace().getVersionManager().checkout(test.getPath());
+            s.getWorkspace().getVersionManager().checkin(test.getPath());
+            
+            validateDisconnectedVHR(oldVHR);            
+
+            validateDisconnectedVHR(oldVHR);            
+    
+    // JCR-4118: check that the old VHR can be retrieved
+    private void validateDisconnectedVHR(Node oldVHR) throws RepositoryException {
+        Session s = oldVHR.getSession();
+        Node old = s.getNode(oldVHR.getPath());
+        assertNotNull("disconnected VHR should be accessible", old);
+
+        assertEquals("nt:versionHistory", old.getPrimaryNodeType().getName());
+        NodeIterator ni = old.getNodes();
+        while (ni.hasNext()) {
+            Node n = ni.nextNode();
+            String type = n.getPrimaryNodeType().getName();
+            assertTrue("node type of VHR child nodes should be nt:version or nt:versionLabels",
+                    "nt:version".equals(type) || "nt:versionLabels".equals(type));
+        }
+
+        try {
+            old.remove();
+            s.save();
+            fail("removal of node using remove() should throw because it's in the versioning workspace");
+        } catch (ConstraintViolationException expected) {
+        }
+    }
