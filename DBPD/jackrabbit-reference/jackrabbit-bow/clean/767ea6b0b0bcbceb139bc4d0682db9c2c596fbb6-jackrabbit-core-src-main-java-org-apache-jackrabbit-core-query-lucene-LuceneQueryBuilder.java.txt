JCR-1674: Provide means for exception handling for QueryNodeVisitor implementations

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@677226 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Calendar;
+import java.util.Iterator;
+import java.util.List;
+
+import javax.jcr.NamespaceException;
+import javax.jcr.PropertyType;
+import javax.jcr.RepositoryException;
+import javax.jcr.nodetype.NodeType;
+import javax.jcr.nodetype.NodeTypeIterator;
+import javax.jcr.nodetype.NodeTypeManager;
+import javax.jcr.query.InvalidQueryException;
+
+import org.apache.jackrabbit.core.RepositoryImpl;
-import org.apache.jackrabbit.core.RepositoryImpl;
-import org.apache.lucene.search.BooleanClause.Occur;
+import org.apache.lucene.search.BooleanClause.Occur;
-import javax.jcr.NamespaceException;
-import javax.jcr.PropertyType;
-import javax.jcr.RepositoryException;
-import javax.jcr.nodetype.NodeType;
-import javax.jcr.nodetype.NodeTypeIterator;
-import javax.jcr.nodetype.NodeTypeManager;
-import javax.jcr.query.InvalidQueryException;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Calendar;
-import java.util.Iterator;
-import java.util.List;
-
-    private QueryRootNode root;
+    private final QueryRootNode root;
-    private SessionImpl session;
+    private final SessionImpl session;
-    private ItemStateManager sharedItemMgr;
+    private final ItemStateManager sharedItemMgr;
-    private HierarchyManager hmgr;
+    private final HierarchyManager hmgr;
-    private NamespaceMappings nsMappings;
+    private final NamespaceMappings nsMappings;
-    private NamePathResolver resolver;
+    private final NamePathResolver resolver;
-    private Analyzer analyzer;
+    private final Analyzer analyzer;
-    private PropertyTypeRegistry propRegistry;
+    private final PropertyTypeRegistry propRegistry;
-    private SynonymProvider synonymProvider;
+    private final SynonymProvider synonymProvider;
-    private IndexFormatVersion indexFormatVersion;
+    private final IndexFormatVersion indexFormatVersion;
-    private List exceptions = new ArrayList();
+    private final List exceptions = new ArrayList();
+     * @throws RepositoryException
-    private Query createLuceneQuery() {
+    private Query createLuceneQuery() throws RepositoryException {
-    public Object visit(QueryRootNode node, Object data) {
+    public Object visit(QueryRootNode node, Object data) throws RepositoryException {
-    public Object visit(OrQueryNode node, Object data) {
+    public Object visit(OrQueryNode node, Object data) throws RepositoryException {
-    public Object visit(AndQueryNode node, Object data) {
+    public Object visit(AndQueryNode node, Object data) throws RepositoryException {
-    public Object visit(NotQueryNode node, Object data) {
+    public Object visit(NotQueryNode node, Object data) throws RepositoryException {
-    public Object visit(PathQueryNode node, Object data) {
+    public Object visit(PathQueryNode node, Object data) throws RepositoryException {
-    public Object visit(LocationStepQueryNode node, Object data) {
+    public Object visit(LocationStepQueryNode node, Object data) throws RepositoryException {
-    public Object visit(DerefQueryNode node, Object data) {
+    public Object visit(DerefQueryNode node, Object data) throws RepositoryException {
-    public Object visit(RelationQueryNode node, Object data) {
+    public Object visit(RelationQueryNode node, Object data) throws RepositoryException {
