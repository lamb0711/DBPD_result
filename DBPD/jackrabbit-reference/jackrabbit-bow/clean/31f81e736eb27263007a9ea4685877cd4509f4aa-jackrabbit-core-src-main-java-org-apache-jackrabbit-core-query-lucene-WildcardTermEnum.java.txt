JCR-2076: JSR 283: Joins

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@768954 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.regex.Pattern;
-        this.pattern = createRegexp(pattern.substring(idx)).matcher(input);
+        this.pattern = Util.createRegexp(pattern.substring(idx)).matcher(input);
-     * Creates a regexp from <code>likePattern</code>.
-     *
-     * @param likePattern the pattern.
-     * @return the regular expression <code>Pattern</code>.
-     */
-    private Pattern createRegexp(String likePattern) {
-        // - escape all non alphabetic characters
-        // - escape constructs like \<alphabetic char> into \\<alphabetic char>
-        // - replace non escaped _ % into . and .*
-        StringBuffer regexp = new StringBuffer();
-        boolean escaped = false;
-        for (int i = 0; i < likePattern.length(); i++) {
-            if (likePattern.charAt(i) == '\\') {
-                if (escaped) {
-                    regexp.append("\\\\");
-                    escaped = false;
-                } else {
-                    escaped = true;
-                }
-            } else {
-                if (Character.isLetterOrDigit(likePattern.charAt(i))) {
-                    if (escaped) {
-                        regexp.append("\\\\").append(likePattern.charAt(i));
-                        escaped = false;
-                    } else {
-                        regexp.append(likePattern.charAt(i));
-                    }
-                } else {
-                    if (escaped) {
-                        regexp.append('\\').append(likePattern.charAt(i));
-                        escaped = false;
-                    } else {
-                        switch (likePattern.charAt(i)) {
-                            case '_':
-                                regexp.append('.');
-                                break;
-                            case '%':
-                                regexp.append(".*");
-                                break;
-                            default:
-                                regexp.append('\\').append(likePattern.charAt(i));
-                        }
-                    }
-                }
-            }
-        }
-        return Pattern.compile(regexp.toString(), Pattern.DOTALL);
-    }
-
-    /**
