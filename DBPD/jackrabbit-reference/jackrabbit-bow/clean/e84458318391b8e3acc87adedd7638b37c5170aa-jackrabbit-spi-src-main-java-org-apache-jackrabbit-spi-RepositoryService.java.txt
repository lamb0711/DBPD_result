JCR-1590 JSR 283: Locking

- getSecondsRemaining is negative if lock is expired or released
- getLockToken always returns null if lock is sessionscoped

JCR-2004 Update SPI locking to match JCR 2.0

- extend spi/LockInfo.java
- add JCR 2.0 variant of RepositoryService#lock that takes timeoutHint and ownerHint
- adjust jcr2spi
- adjust spi implementation(s)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@753244 13f79535-47bb-0310-9956-ffa450edef68

+     * Create a lock on the <code>Node</code> identified by the given id.
+     *
+     * @param sessionInfo
+     * @param nodeId
+     * @param deep
+     * @param sessionScoped
+     * @param timeoutHint long indicating the desired lock timeout in seconds.
+     * The implementation is free to ignore the hint.
+     * @param ownerHint String indicating the desired lockOwner info. The
+     * implementation is free to ignore the hint.
+     * @return The <code>LockInfo</code> associated with the new lock
+     * that has been created.
+     * @throws javax.jcr.UnsupportedRepositoryOperationException If this SPI
+     * implementation does not support locking at all.
+     * @throws javax.jcr.lock.LockException If the Node identified by the given
+     * id cannot be locked due to an existing lock or due to missing mixin type.
+     * @throws javax.jcr.AccessDeniedException
+     * @throws javax.jcr.RepositoryException If another error occurs.
+     * @see javax.jcr.lock.LockManager#lock(String, boolean, boolean, long, String)
+     * @since JCR 2.0
+     */
+    public LockInfo lock(SessionInfo sessionInfo, NodeId nodeId, boolean deep, boolean sessionScoped, long timeoutHint, String ownerHint) throws UnsupportedRepositoryOperationException, LockException, AccessDeniedException, RepositoryException;
+
+    /**
