JCR-2887 - Split PrivilegeRegistry in a per-session manager instance and a repository level registry  (WIP)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1181645 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.security.authorization.PrivilegeBits;
+import org.apache.jackrabbit.core.value.InternalValue;
-                    Value[] pValues = aceNode.getProperty(P_PRIVILEGES).getValues();
-                    Privilege[] privileges = new Privilege[pValues.length];
+                    InternalValue[] pValues = aceNode.getProperty(P_PRIVILEGES).internalGetValues();
+                    Name[] privilegeNames = new Name[pValues.length];
-                        privileges[i] = acMgr.privilegeFromName(pValues[i].getString());
+                        privilegeNames[i] = pValues[i].getName();
-                    AccessControlEntry entry = createEntry(principal, privileges, isAllow, restrictions);
+                    AccessControlEntry entry = new Entry(principal, privilegeMgr.getBits(privilegeNames), isAllow, restrictions);
+        private Entry(Principal principal, PrivilegeBits privilegeBits, boolean allow,
+                      Map<String, Value> restrictions)
+                throws AccessControlException, RepositoryException {
+            super(principal, privilegeBits, allow, restrictions);
+
+            Map<Name, Value> rstr = getRestrictions();
+            nodePath = rstr.get(P_NODE_PATH).getString();
+            Value glob = rstr.get(P_GLOB);
+            if (glob != null) {
+                pattern = GlobPattern.create(nodePath, glob.getString());
+            } else {
+                pattern = GlobPattern.create(nodePath);
+            }
+        }
+
