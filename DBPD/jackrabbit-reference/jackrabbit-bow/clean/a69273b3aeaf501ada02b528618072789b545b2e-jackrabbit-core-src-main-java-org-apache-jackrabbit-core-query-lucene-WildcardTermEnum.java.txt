JCR-1408: Invalid query results when using jcr:like with a case transform function and a pattern not starting with a wildcard

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@630140 13f79535-47bb-0310-9956-ffa450edef68

-        while (idx < pattern.length()
-                && Character.isLetterOrDigit(pattern.charAt(idx))) {
-            idx++;
-        }
-        if (propName == null) {
-            prefix = pattern.substring(0, idx);
+        if (transform == TRANSFORM_NONE) {
+            // optimize the term comparison by removing the prefix from the pattern
+            // and therefore use a more precise range scan
+            while (idx < pattern.length()
+                    && Character.isLetterOrDigit(pattern.charAt(idx))) {
+                idx++;
+            }
+
+            if (propName == null) {
+                prefix = pattern.substring(0, idx);
+            } else {
+                prefix = FieldNames.createNamedValue(propName, pattern.substring(0, idx));
+            }
-            prefix = FieldNames.createNamedValue(propName, pattern.substring(0, idx));
+            prefix = FieldNames.createNamedValue(propName, "");
-                    String prefix = FieldNames.createNamedValue(propName, patternPrefix);
-                    // initialize with prefix as dummy value
-                    OffsetCharSequence input = new OffsetCharSequence(prefix.length(), prefix, transform);
-                    Matcher matcher = createRegexp(pattern.substring(idx)).matcher(input);
-
-                    // do range scans with patter matcher
-                    Iterator it = rangeScans.iterator();
-                    while (it.hasNext()) {
+                    // do range scans with pattern matcher
+                    for (Iterator it = rangeScans.iterator(); it.hasNext(); ) {
-                                if (matcher.reset().matches()) {
+                                if (WildcardTermEnum.this.pattern.reset().matches()) {
