JCR-623 - Clustering
+ Add close() method to journal
+ Release locks
+ Simplify RecordProcessor callback


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@489377 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.observation.Event;
+import javax.jcr.Session;
+
+     * Last used session for event sources.
+     */
+    private Session lastSession;
+
+    /**
-                throw new JournalException(msg);
+                throw new JournalException(msg, e);
-                    processor.process(type, parentId, parentPath, childId,
-                            childRelPath, ntName, mixins, userId);
+                    processor.process(createEventState(type, parentId, parentPath, childId,
+                            childRelPath, ntName, mixins, userId));
+     * {@inheritDoc}
+     */
+    public void close() {}
+
+    /**
+     * Create an event state.
+     *
+     * @param type event type
+     * @param parentId parent id
+     * @param parentPath parent path
+     * @param childId child id
+     * @param childRelPath child relative path
+     * @param ntName ndoe type name
+     * @param userId user id
+     * @return event
+     */
+    protected EventState createEventState(int type, NodeId parentId, Path parentPath,
+                                          NodeId childId, Path.PathElement childRelPath,
+                                          QName ntName, Set mixins, String userId) {
+        switch (type) {
+            case Event.NODE_ADDED:
+                return EventState.childNodeAdded(parentId, parentPath, childId, childRelPath,
+                        ntName, mixins, getOrCreateSession(userId));
+            case Event.NODE_REMOVED:
+                return EventState.childNodeRemoved(parentId, parentPath, childId, childRelPath,
+                        ntName, mixins, getOrCreateSession(userId));
+            case Event.PROPERTY_ADDED:
+                return EventState.propertyAdded(parentId, parentPath, childRelPath,
+                        ntName, mixins, getOrCreateSession(userId));
+            case Event.PROPERTY_CHANGED:
+                return EventState.propertyChanged(parentId, parentPath, childRelPath,
+                        ntName, mixins, getOrCreateSession(userId));
+            case Event.PROPERTY_REMOVED:
+                return EventState.propertyRemoved(parentId, parentPath, childRelPath,
+                        ntName, mixins, getOrCreateSession(userId));
+            default:
+                String msg = "Unexpected event type: " + type;
+                throw new IllegalArgumentException(msg);
+        }
+    }
+
+
+    /**
+     * Return a session matching a certain user id.
+     *
+     * @param userId user id
+     * @return session
+     */
+    protected Session getOrCreateSession(String userId) {
+        if (lastSession == null || !lastSession.getUserID().equals(userId)) {
+            lastSession = new ClusterSession(userId);
+        }
+        return lastSession;
+    }
+
+    /**
