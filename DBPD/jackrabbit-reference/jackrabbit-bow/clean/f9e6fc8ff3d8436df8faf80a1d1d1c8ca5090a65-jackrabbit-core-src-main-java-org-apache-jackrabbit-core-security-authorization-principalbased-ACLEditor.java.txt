JCR-2621 -  principalbased ACL editing fails if principalName differs from the authorizableID

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@941358 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.api.security.principal.PrincipalManager;
+import org.apache.jackrabbit.api.security.user.Authorizable;
+import org.apache.jackrabbit.api.security.user.UserManager;
- * <code>CombinedEditor</code>...
+ * <code>ACLEditor</code>...
-    private Principal getPrincipal(String pathToACNode) throws RepositoryException {
-        String name = getPrincipalName(pathToACNode);
-        PrincipalManager pMgr = session.getPrincipalManager();
-        return pMgr.getPrincipal(name);
+    /**
+     * Returns the principal for the given path or null.
+     *
+     * @param pathToACNode
+     * @return
+     * @throws RepositoryException
+     */
+    private Principal getPrincipal(final String pathToACNode) throws RepositoryException {
+        final String id = getPathName(pathToACNode);
+        UserManager uMgr = session.getUserManager();
+        Authorizable authorizable = uMgr.getAuthorizable(id);
+        if (authorizable == null) {
+            // human readable id in node name is different from the hashed id
+            // use workaround to retrieve the principal
+            if (pathToACNode.startsWith(acRootPath)) {
+                final String principalPath = pathToACNode.substring(acRootPath.length());
+                if (principalPath.indexOf('/', 1) > 0) {
+                    // safe to build an item based principal
+                    authorizable = uMgr.getAuthorizable(new ItemBasedPrincipal() {
+                        public String getPath() throws RepositoryException {
+                            return principalPath;
+                        }
+                        public String getName() {
+                            return Text.getName(principalPath);
+                        }
+                    });
+                } else {
+                    // principal name was just appended to the acRootPath prefix
+                    // see getPathToAcNode above -> try to retrieve principal by name.
+                    return session.getPrincipalManager().getPrincipal(Text.getName(principalPath));
+                }
+            } // else: path doesn't start with acRootPath -> return null.
+        }
+
+        return (authorizable == null) ? null : authorizable.getPrincipal();
-    private static String getPrincipalName(String pathToACNode) {
+    private static String getPathName(String pathToACNode) {
-            String principalName = getPrincipalName(acNode.getPath());
+            String principalName = getPathName(acNode.getPath());
