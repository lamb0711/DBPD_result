JCR-189: QueryHandler should use lucene Input-/OutputStream implementations

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@233174 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.fs.FileSystem;
-import org.apache.jackrabbit.core.fs.FileSystemException;
+import org.apache.lucene.store.FSDirectory;
+import java.io.File;
-    /** The underlying filesystem to store the index */
-    private final FileSystem fs;
-
-     * <code>fs</code>.
+     * <code>indexDir</code>.
-     * @param fs the underlying file system.
+     * @param indexDir the directory to store the index.
-     * @throws FileSystemException if an error occurs while opening / creating
+     * @throws IOException if an error occurs while opening / creating
-    PersistentIndex(String name, FileSystem fs, boolean create, Analyzer analyzer)
-            throws FileSystemException, IOException {
-        super(analyzer, FileSystemDirectory.getDirectory(fs, create));
+    PersistentIndex(String name, File indexDir, boolean create, Analyzer analyzer)
+            throws IOException {
+        super(analyzer, FSDirectory.getDirectory(indexDir, create));
-        this.fs = fs;
-        if (fs.exists(WRITE_LOCK)) {
+        File writeLock = new File(indexDir, WRITE_LOCK);
+        if (writeLock.exists()) {
-            try {
-                fs.deleteFile(WRITE_LOCK);
-            } catch (FileSystemException e) {
+            if (!writeLock.delete()) {
-        if (fs.exists(COMMIT_LOCK)) {
+        File commitLock = new File(indexDir, COMMIT_LOCK);
+        if (commitLock.exists()) {
-            try {
-                fs.deleteFile(COMMIT_LOCK);
-            } catch (FileSystemException e) {
+            if (!commitLock.delete()) {
-     * Returns the underlying directory.
-     * @return the directory.
-     * @throws IOException if an error occurs.
-     */
-    Directory getDirectory() throws IOException {
-        return FileSystemDirectory.getDirectory(fs, false);
-    }
-
-    /**
