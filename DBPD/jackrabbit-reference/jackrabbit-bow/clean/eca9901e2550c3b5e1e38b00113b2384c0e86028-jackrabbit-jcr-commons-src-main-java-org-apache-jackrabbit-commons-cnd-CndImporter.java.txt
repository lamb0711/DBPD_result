JCR-3430: CNDImporter should handle implied nt:base

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1387929 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.HashMap;
+import java.util.Map;
+import javax.jcr.nodetype.ConstraintViolationException;
+import javax.jcr.nodetype.NodeTypeDefinition;
+import static org.apache.jackrabbit.JcrConstants.NT_BASE;
+
-            List<NodeTypeTemplate> ntts = cndReader.getNodeTypeDefinitions();
-
-            NodeTypeIterator registered;
-            if (reregisterExisting) {
-                registered = nodeTypeManager.registerNodeTypes(ntts.toArray(new NodeTypeTemplate[ntts.size()]), true);
-            } else {
-                List<NodeTypeTemplate> toRegister = new ArrayList<NodeTypeTemplate>(ntts.size());
-                for (NodeTypeTemplate ntt : ntts) {
-                    if (!nodeTypeManager.hasNodeType(ntt.getName())) {
-                        toRegister.add(ntt);
-                    }
-                }
-
-                registered = nodeTypeManager.registerNodeTypes(toRegister.toArray(new NodeTypeTemplate[toRegister.size()]), true);
+            Map<String, NodeTypeTemplate> templates = new HashMap<String, NodeTypeTemplate>();
+            for (NodeTypeTemplate template : cndReader.getNodeTypeDefinitions()) {
+                templates.put(template.getName(), template);
+            List<NodeTypeTemplate> toRegister = new ArrayList<NodeTypeTemplate>(templates.size());
+            for (NodeTypeTemplate ntt : templates.values()) {
+                if (reregisterExisting || !nodeTypeManager.hasNodeType(ntt.getName())) {
+                    ensureNtBase(ntt, templates, nodeTypeManager);
+                    toRegister.add(ntt);
+                }
+            }
+            NodeTypeIterator registered = nodeTypeManager.registerNodeTypes(
+                    toRegister.toArray(new NodeTypeTemplate[toRegister.size()]), true);
+    private static void ensureNtBase(NodeTypeTemplate ntt, Map<String, NodeTypeTemplate> templates,
+            NodeTypeManager nodeTypeManager) throws RepositoryException {
+        if (!ntt.isMixin() && !NT_BASE.equals(ntt.getName())) {
+            String[] supertypes = ntt.getDeclaredSupertypeNames();
+            if (supertypes.length == 0) {
+                ntt.setDeclaredSuperTypeNames(new String[] {NT_BASE});
+            } else {
+                // Check whether we need to add the implicit "nt:base" supertype
+                boolean needsNtBase = true;
+                for (String name : supertypes) {
+                    NodeTypeDefinition std = templates.get(name);
+                    if (std == null) {
+                        std = nodeTypeManager.getNodeType(name);
+                    }
+                    if (std != null && !std.isMixin()) {
+                        needsNtBase = false;
+                    }
+                }
+                if (needsNtBase) {
+                    String[] withNtBase = new String[supertypes.length + 1];
+                    withNtBase[0] = NT_BASE;
+                    System.arraycopy(supertypes, 0, withNtBase, 1, supertypes.length);
+                    ntt.setDeclaredSuperTypeNames(withNtBase);
+                }
+            }
+        }
+    }
+
