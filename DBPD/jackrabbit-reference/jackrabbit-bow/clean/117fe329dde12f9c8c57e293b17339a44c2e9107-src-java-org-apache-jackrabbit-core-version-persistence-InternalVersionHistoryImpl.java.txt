- adding correct mix:versionable handle for workspaceimporter

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@165408 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.state.NodeState;
+import java.util.Set;
-        InternalFrozenNodeImpl.checkin(vNode, JCR_FROZENNODE, src, InternalFrozenNodeImpl.MODE_VERSION);
+        InternalFrozenNodeImpl.checkin(vNode, JCR_FROZENNODE, src);
-                                                       String historyId, QName name, NodeImpl src)
+                                                       String historyId, QName name, NodeState nodeState)
-        pNode.setPropertyValue(NativePVM.PROPNAME_VERSIONABLE_ID, InternalValue.create(src.internalGetUUID()));
+        pNode.setPropertyValue(NativePVM.PROPNAME_VERSIONABLE_ID, InternalValue.create(nodeState.getUUID()));
-        InternalFrozenNodeImpl.checkin(vNode, JCR_FROZENNODE, src, InternalFrozenNodeImpl.MODE_INIT);
+        PersistentNode node = vNode.addNode(JCR_FROZENNODE, NativePVM.NT_REP_FROZEN, null);
+
+        // initialize the internal properties
+        node.setPropertyValue(JCR_FROZENUUID, InternalValue.create(nodeState.getUUID()));
+        node.setPropertyValue(JCR_FROZENPRIMARYTYPE,
+                InternalValue.create(nodeState.getNodeTypeName()));
+
+        Set mixins = nodeState.getMixinTypeNames();
+        if (mixins.size()>0) {
+            InternalValue[] ivalues = new InternalValue[mixins.size()];
+            Iterator iter=mixins.iterator();
+            for (int i = 0; i < mixins.size(); i++) {
+                ivalues[i] = InternalValue.create((QName) iter.next());
+            }
+            node.setPropertyValues(JCR_FROZENMIXINTYPES, PropertyType.NAME, ivalues);
+        }
