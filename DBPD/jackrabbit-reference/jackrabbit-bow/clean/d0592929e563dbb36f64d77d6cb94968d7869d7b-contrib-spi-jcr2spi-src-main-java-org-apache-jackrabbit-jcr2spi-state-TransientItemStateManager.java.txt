- Implement SessionItemStateManager.getRootState()
- Use ItemState from TransientItemStateManager and check status in methods SessionItemStateManager.getItemState() and SessionItemStateManager.hasItemState()
- Rename some methods in TransientItemStateManager to clarify their use.
- Remove unused metho TransientItemStateManager.moveItemStateToAttic().

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@432523 13f79535-47bb-0310-9956-ffa450edef68

-     * @return the number of entries
+     * @return <code>true</code> if this transient ISM has pending changes.
-    public int getEntriesCount() {
-        return changeLog.addedStates.size() + changeLog.modifiedStates.size();
+    public boolean hasPendingChanges() {
+        return !changeLog.isEmpty();
-     * @return <code>true</code> if there are any entries in attic.
+     * @return <code>true</code> if there are any deleted item states.
-    public boolean hasEntriesInAttic() {
-        return changeLog.deletedStates.size() > 0;
+    public boolean hasDeletedItemStates() {
+        return !changeLog.deletedStates.isEmpty();
-     * @return an iterator over all entries
+     * @return an iterator over all modified or added item states.
-    public Iterator getEntries() {
+    public Iterator getModifiedOrAddedItemStates() {
-     * @return an iterator over all entries in attic
+     * @return an iterator over all deleted item states.
-    public Iterator getEntriesInAttic() {
+    public Iterator getDeletedItemStates() {
-     * A state has been deleted. If the state is not a new state
-     * (not in the collection of added ones), then remove
-     * it from the modified states collection.
-     * The state is added to the deleted states collection in any case.
-     *
-     * @param state state that has been deleted
-     */
-    public void moveItemStateToAttic(ItemState state) {
-        if (changeLog.addedStates.remove(state)) {
-            changeLog.modifiedStates.remove(state);
-        }
-        changeLog.deleted(state);
-    }
-
-    /**
