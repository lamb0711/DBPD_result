security: work in progress

- change ACEditor to take jcr path
- extract common, abstract policy entry impl
- add more tests
- add JackrabbitAccessControlManager for policy editing
- various minor changes, fixes, improvements

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@644215 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.SessionImpl;
+import org.apache.jackrabbit.spi.commons.conversion.NamePathResolver;
+import javax.jcr.observation.ObservationManager;
+import java.util.Map;
-    protected boolean initialized;
+    /**
+     * Returns the system session this provider has been created for.
+     */
+    protected SessionImpl session;
+    protected ObservationManager observationMgr;
+    protected NamePathResolver resolver;
+
+    private boolean initialized;
+     * Tests if the given <code>systemSession</code> is a SessionImpl and
+     * retrieves the observation manager. The it sets the internal 'initialized'
+     * field to true.
+     *
+     * @throws RepositoryException If the specified session is not a
+     * <code>SessionImpl</code> or if retrieving the observation manager fails.
+     * @see AccessControlProvider#init(Session, Map)
+     */
+    public void init(Session systemSession, Map options) throws RepositoryException {
+        if (initialized) {
+            throw new IllegalStateException("already initialized");
+        }
+        if (!(systemSession instanceof SessionImpl)) {
+            throw new RepositoryException("SessionImpl (system session) expected.");
+        }
+        session = (SessionImpl) systemSession;
+        observationMgr = systemSession.getWorkspace().getObservationManager();
+        resolver = (SessionImpl) systemSession;
+
+        initialized = true;
+    }
+
+    /**
