JCR-2511: Value#getBinary() and #getStream() return internal representation for type PATH and NAME

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@918915 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.IOException;
-        return qvalue.getBinary();
+        // JCR-2511 Value#getBinary() and #getStream() return internal representation for type PATH and NAME
+        if (getType() == PropertyType.NAME || getType() == PropertyType.PATH) {
+            // qualified name/path value needs to be resolved,
+            // delegate conversion to getString() method
+            try {
+                final byte[] value = getString().getBytes("UTF-8");
+                return new Binary() {
+                    public int read(byte[] b, long position) {
+                        if (position >= value.length) {
+                            return -1;
+                        } else {
+                            int p = (int) position;
+                            int n = Math.min(b.length, value.length - p);
+                            System.arraycopy(value, p, b, 0, n);
+                            return n;
+                        }
+                    }
+                    public InputStream getStream() {
+                        return new ByteArrayInputStream(value);
+                    }
+                    public long getSize() {
+                        return value.length;
+                    }
+                    public void dispose() {
+                    }
+                };
+            } catch (UnsupportedEncodingException ex) {
+                throw new RepositoryException("UTF-8 is not supported", ex);
+            }
+        } else {
+            return qvalue.getBinary();
+        }
-                // needs namespace mapping
+                // qualified name/path value needs to be resolved
-                    String l_s = getType() == PropertyType.NAME
-                      ? resolver.getJCRName(qvalue.getName())
-                      : resolver.getJCRPath(qvalue.getPath());
-                    stream = new ByteArrayInputStream(l_s.getBytes("UTF-8"));
+                    stream = new ByteArrayInputStream(getString().getBytes("UTF-8"));
-                    throw new RepositoryException(ex);
+                    throw new RepositoryException("UTF-8 is not supported", ex);
-            // needs formatting
+            // qualified name value needs to be resolved
-            // needs formatting
+            // qualified path value needs to be resolved
