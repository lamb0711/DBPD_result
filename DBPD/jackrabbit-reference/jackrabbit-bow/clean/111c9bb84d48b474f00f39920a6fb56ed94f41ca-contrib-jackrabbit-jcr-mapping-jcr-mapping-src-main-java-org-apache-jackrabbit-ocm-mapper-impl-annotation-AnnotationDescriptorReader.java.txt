- Bug fixes in the annotation mapper impl.
- Use similar unit tests and the same test content model for the annotation support. 
- Reorganise the unit units and rename some classes

This work is still in progress. 

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@580157 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.ocm.mapper.impl.annotation.Bean;
-import org.apache.jackrabbit.ocm.mapper.impl.annotation.Collection;
-import org.apache.jackrabbit.ocm.mapper.impl.annotation.Field;
-import org.apache.jackrabbit.ocm.mapper.impl.annotation.Node;
-import org.apache.jackrabbit.ocm.reflection.ReflectionUtils;
-	List<String> annotatedClassNames;
-    public AnnotationDescriptorReader(List<String> annotatedClassNames)
+	List<Class> annotatedClassNames;
+    public AnnotationDescriptorReader(List<Class> annotatedClassNames)
-		for (String className : annotatedClassNames) {
-			Class clazz = ReflectionUtils.forName(className);
+		for (Class clazz : annotatedClassNames) {
+			
-		descriptor.setJcrSuperTypes(annotationNode.jcrSuperTypes());		
-		descriptor.setJcrMixinTypes(annotationNode.jcrMixinTypes());
-		descriptor.setExtend(annotationNode.extend());		
+		if (annotationNode.jcrSuperTypes() != null && ! annotationNode.jcrSuperTypes().equals(""))
+		{
+		     descriptor.setJcrSuperTypes(annotationNode.jcrSuperTypes());
+		}
+		
+		if (annotationNode.jcrMixinTypes() != null && ! annotationNode.jcrMixinTypes().equals(""))
+		{		
+		     descriptor.setJcrMixinTypes(annotationNode.jcrMixinTypes());
+		}
+		
+		if (annotationNode.extend() != null && ! annotationNode.extend().equals(""))
+		{
+		     descriptor.setExtend(annotationNode.extend());
+		}
+		
-				// It is not possible to set a null value into a annotation attribute.
-				// If the converter == Object.class, it shoudl be considered as null
+				// It is not possible to set a null value into an annotation attribute.
+				// If the converter == Object.class, it should be considered as null
-				fieldDescriptor.setJcrDefaultValue(jcrProperty.jcrDefaultValue());			
-				fieldDescriptor.setJcrValueConstraints(jcrProperty.jcrDefaultValue());
-				fieldDescriptor.setJcrType(jcrProperty.jcrType());
+				
+				// It is not possible to set a null value into an annotation attribute.
+				// If the jcrDefaultValue value is an empty string => it should be considered as null
+				if ((jcrProperty.jcrDefaultValue() != null) && (!jcrProperty.jcrDefaultValue().equals("")))
+				{
+				     fieldDescriptor.setJcrDefaultValue(jcrProperty.jcrDefaultValue());
+				}
+				
+				// It is not possible to set a null value into an annotation attribute.
+				// If the jcrValueConstraints value is an empty string => it should be considered as null
+				if ((jcrProperty.jcrValueConstraints() != null) && (!jcrProperty.jcrValueConstraints().equals("")))
+				{	
+				     fieldDescriptor.setJcrValueConstraints(jcrProperty.jcrValueConstraints());
+				}
+				
+				// It is not possible to set a null value into an annotation attribute.
+				// If the jcrProperty value is an empty string => it should be considered as null
+				if ((jcrProperty.jcrType() != null) && (!jcrProperty.jcrType().equals("")))
+				{
+				    fieldDescriptor.setJcrType(jcrProperty.jcrType());
+				}
