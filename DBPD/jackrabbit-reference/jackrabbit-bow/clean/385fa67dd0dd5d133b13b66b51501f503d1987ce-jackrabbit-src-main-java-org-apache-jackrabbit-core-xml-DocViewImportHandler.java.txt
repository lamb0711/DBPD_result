JCR-325: multi-value serialization in document view export is not spec-compliant; for the time being just skip multi-valued properties on document view export which is legal according to "6.4.2.5 Multi-value Properties"

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@384850 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.util.Text;
-     * See also {@link DocViewSAXEventGenerator#leaving(javax.jcr.Node, int)}
+     * See also {@link DocViewSAXEventGenerator#leavingProperties(javax.jcr.Node, int)}
-                if (attrValue.startsWith("\n")) {
-                    // assume multi-valued property:
-                    // a leading line-feed (a valid whitespace NMTOKENS delimiter)
-                    // is interpreted as a hint that this attribute value is of
-                    // type NMTOKENS.
-                    // see DocViewSAXEventGenerator#leaving(Node, int)
-                    attrValue = attrValue.substring(1);
-                    String[] strings = Text.explode(attrValue, ' ', true);
-                    propValues = new Importer.TextValue[strings.length];
-                    for (int j = 0; j < strings.length; j++) {
-                        // decode encoded blanks in value
-                        strings[j] = Text.replace(strings[j], "_x0020_", " ");
-                        propValues[j] = new StringValue(strings[j]);
-                    }
-                } else {
-                    // assume single-valued property
-                    propValues = new Importer.TextValue[1];
-                    propValues[0] = new StringValue(attrValue);
-                }
+                // always assume single-valued property for the time being
+                // until a way of properly serializing/detecting multi-valued
+                // properties on re-import is found (see JCR-325);
+                // see also DocViewSAXEventGenerator#leavingProperties(Node, int)
+                // todo proper multi-value serialization support
+                propValues = new Importer.TextValue[1];
+                propValues[0] = new StringValue(attrValue);
