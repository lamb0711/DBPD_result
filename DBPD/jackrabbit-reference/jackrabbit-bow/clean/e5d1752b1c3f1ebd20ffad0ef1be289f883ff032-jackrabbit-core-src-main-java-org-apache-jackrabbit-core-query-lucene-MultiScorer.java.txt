JCR-2415: Update Lucene to 3.0
- Merge all from JCR-2415-lucene-3.0 at 1064038 (reintegration)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1064058 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.lucene.search.Explanation;
-    private int current = 0;
+    private int currentScorer;
-     * Indicates if there are more documents.
+     * The next document id to be returned
-    private boolean hasNext = true;
+    private int currentDoc = -1;
-    /**
-     * {@inheritDoc}
-     */
-    public boolean next() throws IOException {
-        while (hasNext) {
-            if (scorers[current].next()) {
-                return true;
-            } else if (++current < scorers.length) {
+    @Override
+    public int nextDoc() throws IOException {
+        while (currentDoc != NO_MORE_DOCS) {
+            if (scorers[currentScorer].nextDoc() != NO_MORE_DOCS) {
+                currentDoc = scorers[currentScorer].docID() + starts[currentScorer];
+                return currentDoc;
+            } else if (++currentScorer < scorers.length) {
-                hasNext = false;
+                currentDoc = NO_MORE_DOCS;
-        return hasNext;
+
+        return currentDoc;
-    /**
-     * {@inheritDoc}
-     */
-    public int doc() {
-        return scorers[current].doc() + starts[current];
+    @Override
+    public int docID() {
+        return currentDoc;
-    /**
-     * {@inheritDoc}
-     */
+    @Override
-        return scorers[current].score();
+        return scorers[currentScorer].score();
-    /**
-     * {@inheritDoc}
-     */
-    public boolean skipTo(int target) throws IOException {
-        current = scorerIndex(target);
-        if (scorers[current].skipTo(target - starts[current])) {
-            return true;
+    @Override
+    public int advance(int target) throws IOException {
+        if (currentDoc == NO_MORE_DOCS) {
+            return currentDoc;
+        }
+
+        currentScorer = scorerIndex(target);
+        if (scorers[currentScorer].advance(target - starts[currentScorer]) != NO_MORE_DOCS) {
+            currentDoc = scorers[currentScorer].docID() + starts[currentScorer];
+            return currentDoc;
-            if (++current < scorers.length) {
+            if (++currentScorer < scorers.length) {
-                return next();
+                currentDoc = nextDoc();
+                return currentDoc;
-                hasNext = false;
-                return hasNext;
+                currentDoc = NO_MORE_DOCS;
+                return currentDoc;
-    /**
-     * {@inheritDoc}
-     */
-    public Explanation explain(int doc) throws IOException {
-        int scorerIndex = scorerIndex(doc);
-        return scorers[scorerIndex].explain(doc - starts[scorerIndex]);
-    }
-
