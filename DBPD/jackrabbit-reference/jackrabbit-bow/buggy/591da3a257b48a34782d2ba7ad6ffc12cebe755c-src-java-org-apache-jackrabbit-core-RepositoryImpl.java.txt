adding Locking support contributed by Dominique Pfister

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@156949 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.lock.LockManager;
+import org.apache.jackrabbit.core.lock.LockManagerImpl;
+    /**
+     * Name of the lock file, relative to the workspace home directory
+     */
+    private static final String LOCKS_FILE = "locks";
+
+    /**
+     * Returns the {@link LockManager} for the workspace with name
+     * <code>workspaceName</code>
+     * @param workspaceName workspace name
+     * @return <code>LockManager</code> for the workspace
+     * @throws NoSuchWorkspaceException if such a workspace does not exist
+     * @throws RepositoryException if some other error occurs
+     */
+    LockManager getLockManager(String workspaceName) throws
+            NoSuchWorkspaceException, RepositoryException {
+
+        if (disposed) {
+            throw new IllegalStateException("repository instance has been shut down");
+        }
+
+        WorkspaceInfo wspInfo = (WorkspaceInfo) wspInfos.get(workspaceName);
+        if (wspInfo == null) {
+            throw new NoSuchWorkspaceException(workspaceName);
+        }
+        return wspInfo.getLockManager();
+    }
+
+         * Lock manager
+         */
+        private LockManagerImpl lockMgr;
+
+        /**
+         * Returns the lock manager for this workspace
+         *
+         * @return the lock manager for this workspace
+         * @throws RepositoryException if the lock manager could not be created
+         */
+        synchronized LockManager getLockManager() throws RepositoryException {
+            if (lockMgr == null) {
+                lockMgr = new LockManagerImpl(getSystemSession(),
+                        new File(config.getHomeDir(), LOCKS_FILE));
+            }
+            return lockMgr;
+        }
+
+        /**
+            if (lockMgr != null) {
+                lockMgr.close();
+            }
+
