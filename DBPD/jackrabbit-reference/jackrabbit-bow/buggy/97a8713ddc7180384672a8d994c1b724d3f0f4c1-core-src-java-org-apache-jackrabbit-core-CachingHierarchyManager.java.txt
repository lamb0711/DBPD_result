Fixed JCR-155 and JCR-207


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@279325 13f79535-47bb-0310-9956-ffa450edef68

-                cache(state, parentPath);
+                cache((NodeState) state, parentPath);
-                cache(state, builder.getPath());
+                cache((NodeState) state, builder.getPath());
+        stateModified((NodeState) modified);
+    }
+
+    /**
+     * Evict moved or renamed items from the cache.
+     */
+    private void stateModified(NodeState modified) {
+        synchronized (cacheMonitor) {
+            LRUEntry entry = (LRUEntry) idCache.get(modified.getId());
+            if (entry == null) {
+                // Item not cached, ignore
+                return;
+            }
+
+            PathMap.Element element = entry.getElement();
+
+            Iterator iter = element.getChildren();
+            while (iter.hasNext()) {
+                PathMap.Element child = (PathMap.Element) iter.next();
+                NodeState.ChildNodeEntry cne = modified.getChildNodeEntry(
+                        child.getName(), child.getIndex() + 1);
+                if (cne == null) {
+                    // Item does not exist, remove
+                    child.remove();
+                    evict(child);
+                    return;
+                }
+
+                LRUEntry childEntry = (LRUEntry) child.get();
+                if (childEntry != null && !cne.getUUID().equals(childEntry.getUUID())) {
+                    // Different child item, remove
+                    child.remove();
+                    evict(child);
+                }
+            }
+        }
-     * @param state item state, may be <code>null</code>
+     * @param state node state
-    private void cache(ItemState state, Path path) {
-        ItemId id = state.getId();
+    private void cache(NodeState state, Path path) {
+        NodeId id = (NodeId) state.getId();
-         * Item id
+         * Node id
-        private final ItemId id;
+        private final NodeId id;
-         * @param id item id
+         * @param id node id
-        public LRUEntry(ItemId id, PathMap.Element element) {
+        public LRUEntry(NodeId id, PathMap.Element element) {
-         * Return item ID
+         * Return node ID
-         * @return item ID
+         * @return node ID
-        public ItemId getId() {
+        public NodeId getId() {
+         * Return node UUID.
+         *
+         * @return node UUID
+         */
+        public String getUUID() {
+            return id.getUUID();
+        }
+
+        /**
