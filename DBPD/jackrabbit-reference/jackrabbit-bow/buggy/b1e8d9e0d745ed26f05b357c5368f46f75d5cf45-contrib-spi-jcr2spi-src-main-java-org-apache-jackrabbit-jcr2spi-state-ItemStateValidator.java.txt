work in progress

- replace ItemImpl by Item in ItemManager interface and adjust
  usages.
- change all setters on ItemState and derived classes from public to
  package private
- NodeState: use collection return value instead of set/list whereever possible
- WorkspaceManager: put ItemStateFactory to a separate class and
  remove unused inner class NodeReferenceImpl 
- add methods to NodeState/PropertyState that avoids return a null
  QItemDefinition and remove corresponding methods from NodeTypeManagerImpl
- remove ItemDefinitionManager.
- VersionHistoryImpl: add safety check if cne for root version really exists
- Fix ImporterImpl: ItemState.getDefinition() may return 'null' value.
  use method instead, that sets the definition if it is still missing.
- javadoc and code formatting


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@430031 13f79535-47bb-0310-9956-ffa450edef68

-        QNodeDefinition def = nodeState.getDefinition();
+        QNodeDefinition def = nodeState.getDefinition(ntReg);
-        checkWriteProperty(propState.getParent(), propState.getQName(), propState.getDefinition(), options);
+        QPropertyDefinition def = propState.getDefinition(ntReg);
+        checkWriteProperty(propState.getParent(), propState.getQName(), def, options);
-    private void checkProtection(ItemState itemState) throws ConstraintViolationException {
+    private void checkProtection(ItemState itemState)
+        throws ConstraintViolationException, RepositoryException {
-            def = ((NodeState)itemState).getDefinition();
+            def = ((NodeState)itemState).getDefinition(ntReg);
-            def = ((PropertyState)itemState).getDefinition();
+            def = ((PropertyState)itemState).getDefinition(ntReg);
-    private void checkRemoveConstraints(ItemState itemState) throws ConstraintViolationException {
+    private void checkRemoveConstraints(ItemState itemState)
+        throws ConstraintViolationException, RepositoryException {
-            definition = ((NodeState)itemState).getDefinition();
+            definition = ((NodeState)itemState).getDefinition(ntReg);
-            definition = ((PropertyState)itemState).getDefinition();
+            definition = ((PropertyState)itemState).getDefinition(ntReg);
-                ChildNodeEntry entry = parentState.getChildNodeEntry(nodeName, 1);
-                NodeState conflictingState = entry.getNodeState();
-                QNodeDefinition conflictDef = conflictingState.getDefinition();
+                ChildNodeEntry cne = parentState.getChildNodeEntry(nodeName, Path.INDEX_DEFAULT);
+                // cne must not be null, since existence has been checked before
+                NodeState conflictingState = cne.getNodeState();
+                QNodeDefinition conflictDef = conflictingState.getDefinition(ntReg);
