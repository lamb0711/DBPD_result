JCR-2313 - Improvements to user management (2) [work in progress] 
-> see issue for details

JCR-2333 - ItemImpl#validateTransientItems: Incomplete validation of mandatory child item
-> patch2

JCR-2195 - Provide possibility to import protected items using Session/Workspace import functionality
-> deal with reference properties
-> make import handlers configurable
-> add userimporter

JCR-171 - Make the extraction of Session UserIDs from Subjects configurable
-> extend SecurityManagerConfig and retrieve uid from principal name if configured
     class is present in the subject

JCR-2351 - Make Authorizable.setProperty more noisy in case of failure

JCR-2331 - Configurable DefaultPolicy replacing Initialization within the ACProvider
-> initial steps. remove code that relies on the default-init
-> add TODOs

JCR-2291 - Issues with compiled permissions of ACL provider
-> remove code searching for DENY-read entries in case of default initialization of ac entries

and here and there minor improvement, usage of generics etc....

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@828791 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.config.ImportConfig;
-    private final NodeTypeRegistry ntReg;
+        this(parentPath, wsp, ntReg, uuidBehavior, null);
+    }
+
+    /**
+     * Creates a new <code>WorkspaceImporter</code> instance.
+     *
+     * @param parentPath   target path where to add the imported subtree
+     * @param wsp the workspace to operate on
+     * @param ntReg the node type registry
+     * @param uuidBehavior flag that governs how incoming UUIDs are handled
+     * @param config import configuration.
+     * @throws PathNotFoundException        if no node exists at
+     *                                      <code>parentPath</code> or if the
+     *                                      current session is not granted read
+     *                                      access.
+     * @throws ConstraintViolationException if the node at
+     *                                      <code>parentPath</code> is protected
+     * @throws VersionException             if the node at
+     *                                      <code>parentPath</code> is not
+     *                                      checked-out
+     * @throws LockException                if a lock prevents the addition of
+     *                                      the subtree
+     * @throws RepositoryException          if another error occurs
+     */
+    public WorkspaceImporter(Path parentPath,
+                             WorkspaceImpl wsp,
+                             NodeTypeRegistry ntReg,
+                             int uuidBehavior,
+                             ImportConfig config)
+            throws PathNotFoundException, ConstraintViolationException,
+            VersionException, LockException, RepositoryException {
-        this.ntReg = ntReg;
+
+        // TODO: TOBEFIXED importer doesn't yet pass protected items to the configured importers.
+        // for the time being throw exception if an importer is configured that
+        // is expected to work with workspace import.
+        if (config != null) {
+            List<ProtectedNodeImporter> ln = config.getProtectedNodeImporters();
+            for (ProtectedNodeImporter pni : ln) {
+                if (pni.init(session, session, true, uuidBehavior, refTracker)) {
+                    throw new UnsupportedOperationException("Workspace-Import of protected nodes: Not yet implement. ");
+                }
+            }
+            List<ProtectedPropertyImporter> lp = config.getProtectedPropertyImporters();
+            for (ProtectedPropertyImporter ppi : lp) {
+                if (ppi.init(session, session, true, uuidBehavior, refTracker)) {
+                    throw new UnsupportedOperationException("Workspace-Import of protected properties: Not yet implement. ");
+                }
+            }
+        }
-            Iterator iter = refTracker.getProcessedReferences();
+            Iterator<Object> iter = refTracker.getProcessedReferences();
