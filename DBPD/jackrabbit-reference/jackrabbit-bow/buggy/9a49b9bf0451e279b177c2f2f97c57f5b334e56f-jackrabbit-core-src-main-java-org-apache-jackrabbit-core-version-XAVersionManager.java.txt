JCR-962: Deadlocks in ConcurrentVersioningWithTransactionsTest

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@551877 13f79535-47bb-0310-9956-ffa450edef68

-        vMgr.acquireWriteLock();
-        vMgr.getSharedStateMgr().setNoLockHack(true);
-        vmgrLocked = true;
-        vMgr.getSharedStateMgr().setNoLockHack(false);
-
-        vMgr.releaseWriteLock();
-        vmgrLocked = false;
-        if (vmgrLocked) {
-            vMgr.getSharedStateMgr().setNoLockHack(false);
-            vMgr.releaseWriteLock();
-            vmgrLocked = false;
-        }
+    /**
+     * Returns an {@link InternalXAResource} that acquires a write lock on the
+     * version manager in {@link InternalXAResource#prepare(TransactionContext)}
+     * if there are any version related items involved in this transaction.
+     *
+     * @return an internal XA resource.
+     */
+    public InternalXAResource getXAResourceBegin() {
+        return new InternalXAResource() {
+            public void associate(TransactionContext tx) {
+            }
+
+            public void beforeOperation(TransactionContext tx) {
+            }
+
+            public void prepare(TransactionContext tx) {
+                Map vItems = (Map) tx.getAttribute(ITEMS_ATTRIBUTE_NAME);
+                if (!vItems.isEmpty()) {
+                    vMgr.acquireWriteLock();
+                    vMgr.getSharedStateMgr().setNoLockHack(true);
+                    vmgrLocked = true;
+                }
+            }
+
+            public void commit(TransactionContext tx) {
+            }
+
+            public void rollback(TransactionContext tx) {
+            }
+
+            public void afterOperation(TransactionContext tx) {
+            }
+        };
+    }
+
+    /**
+     * Returns an {@link InternalXAResource} that releases the write lock on the
+     * version manager in {@link InternalXAResource#commit(TransactionContext)}
+     * or {@link InternalXAResource#rollback(TransactionContext)}.
+     *
+     * @return an internal XA resource.
+     */
+    public InternalXAResource getXAResourceEnd() {
+        return new InternalXAResource() {
+            public void associate(TransactionContext tx) {
+            }
+
+            public void beforeOperation(TransactionContext tx) {
+            }
+
+            public void prepare(TransactionContext tx) {
+            }
+
+            public void commit(TransactionContext tx) {
+                internalReleaseWriteLock();
+            }
+
+            public void rollback(TransactionContext tx) {
+                internalReleaseWriteLock();
+            }
+
+            public void afterOperation(TransactionContext tx) {
+            }
+
+            private void internalReleaseWriteLock() {
+                if (vmgrLocked) {
+                    vMgr.getSharedStateMgr().setNoLockHack(false);
+                    vMgr.releaseWriteLock();
+                    vmgrLocked = false;
+                }
+            }
+        };
+    }
+
