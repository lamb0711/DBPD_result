Implement 'order by' syntax for XPath and SQL. Actual ordering on the query result is not yet done.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@126598 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.List;
-import java.util.ArrayList;
-        // list of QNames
-        final List identifiers = new ArrayList();
+        OrderQueryNode order = new OrderQueryNode(root);
+        root.setOrderNode(order);
+        node.childrenAccept(this, order);
+        return root;
+    }
-        // collect identifiers
+    public Object visit(ASTOrderSpec node, Object data) {
+        OrderQueryNode order = (OrderQueryNode) data;
+
+        final QName[] identifier = new QName[1];
+
+        // collect identifier
-                identifiers.add(node.getName());
+                identifier[0] = node.getName();
-        }, root);
+        }, data);
-        QName[] props = (QName[]) identifiers.toArray(new QName[identifiers.size()]);
-        boolean[] orders = new boolean[props.length];
-        root.setOrderNode(new OrderQueryNode(root, props, orders));
-        return root;
+        OrderQueryNode.OrderSpec spec = new OrderQueryNode.OrderSpec(identifier[0], true);
+        order.addOrderSpec(spec);
+
+        node.childrenAccept(this, spec);
+
+        return data;
+    }
+
+    public Object visit(ASTAscendingOrderSpec node, Object data) {
+        // do nothing ascending is default anyway
+        return data;
+    }
+
+    public Object visit(ASTDescendingOrderSpec node, Object data) {
+        OrderQueryNode.OrderSpec spec = (OrderQueryNode.OrderSpec) data;
+        spec.setAscending(false);
+        return data;
