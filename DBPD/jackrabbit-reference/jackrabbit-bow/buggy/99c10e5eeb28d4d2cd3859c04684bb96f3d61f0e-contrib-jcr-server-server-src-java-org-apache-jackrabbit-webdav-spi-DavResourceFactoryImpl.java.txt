- comitting latest changes from angela
- adding configuration for authorization header behaviour

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@159798 13f79535-47bb-0310-9956-ffa450edef68

-        DavResource resource = null;
+        DavResource resource;
-        }
-
-        if (resource == null) {
+        } else {
-            } catch (RepositoryException e) {
-                // create the default resources if no such item exists
-                // MKCOL request forces a collection-resource even if there already
-                // exists a repository-property with the given path. the MKCOL will
-                // in that particular case fail with a 405 (method not allowed).
-                if (DavMethods.getMethodCode(request.getMethod()) == DavMethods.DAV_MKCOL) {
-                    resource = new VersionControlledItemCollection(locator, session, this);
-                } else {
-                    resource = new DefaultItemResource(locator, session, this);
-                }
-            }
-
-            // if the created resource is version-controlled and the request
-            // contains a Label header, the corresponding Version must be used
-            // instead.
-            if (request instanceof DeltaVServletRequest && isVersionControlled(resource)) {
-                String labelHeader = ((DeltaVServletRequest)request).getLabel();
-                if (labelHeader != null && DavMethods.isMethodAffectedByLabel(request.getMethod())) {
-                    try {
+                /* if the created resource is version-controlled and the request
+                contains a Label header, the corresponding Version must be used
+                instead.*/
+                if (request instanceof DeltaVServletRequest && isVersionControlled(resource)) {
+                    String labelHeader = ((DeltaVServletRequest)request).getLabel();
+                    if (labelHeader != null && DavMethods.isMethodAffectedByLabel(request.getMethod())) {
-                        resource =  new VersionItemCollection(vloc, session, this);
-                    } catch (RepositoryException e) {
-                        log.error("Failed to build version resource from "+locator.getHref(true)+" and label "+labelHeader);
-                        throw new JcrDavException(e);
+                        resource =  new VersionItemCollection(vloc, session, this, v);
+            } catch (PathNotFoundException e) {
+                /* item does not exist yet: create the default resources
+                Note: MKCOL request forces a collection-resource even if there already
+                exists a repository-property with the given path. the MKCOL will
+                in that particular case fail with a 405 (method not allowed).*/
+                if (DavMethods.getMethodCode(request.getMethod()) == DavMethods.DAV_MKCOL) {
+                    resource = new VersionControlledItemCollection(locator, session, this, null);
+                } else {
+                    resource = new DefaultItemResource(locator, session, this, null);
+                }
+            } catch (RepositoryException e) {
+                log.error("Failed to build resource from item '"+ locator.getResourcePath() + "'");
+                throw new JcrDavException(e);
-
-		resource = new VersionControlledItemCollection(locator, session, this);
+		resource = new VersionControlledItemCollection(locator, session, this, null);
+        // todo: currently transactionId is set manually after creation > to be improved.
-
-                resource = new VersionItemCollection(locator, session, this);
+                resource = new VersionItemCollection(locator, session, this, item);
-                resource = new VersionHistoryItemCollection(locator, session, this);
+                resource = new VersionHistoryItemCollection(locator, session, this, item);
-                resource =  new RootItemCollection(locator, session, this);
+                resource =  new RootItemCollection(locator, session, this, item);
-                resource = new VersionControlledItemCollection(locator, session, this);
+                resource = new VersionControlledItemCollection(locator, session, this, item);
-            resource = new DefaultItemResource(locator, session, this);
+            resource = new DefaultItemResource(locator, session, this, item);
