- Cleaned up code according to coding style checked by checkstyle.
- Added checkstyle-suppressions.xml to exclude generated classes

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47489 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.*;
+import org.apache.jackrabbit.core.QName;
+import org.apache.jackrabbit.core.NamespaceRegistryImpl;
+import org.apache.jackrabbit.core.SessionImpl;
+import org.apache.jackrabbit.core.ItemManager;
+import org.apache.jackrabbit.core.Path;
+import org.apache.jackrabbit.core.NoPrefixDeclaredException;
+import org.apache.jackrabbit.core.MalformedPathException;
+import org.apache.jackrabbit.core.NamespaceResolver;
-import javax.jcr.*;
+import javax.jcr.nodetype.NodeTypeManager;
+import javax.jcr.ItemNotFoundException;
+import javax.jcr.RepositoryException;
+import javax.jcr.Node;
+import javax.jcr.ItemExistsException;
+import javax.jcr.PathNotFoundException;
-    
+
-	this.root = QueryParser.parse(statement, language/*, session.getNamespaceResolver()*/);
+	this.root = QueryParser.parse(statement, language);
-    
+
-		NodeType ntQuery = session.getWorkspace().getNodeTypeManager().getNodeType(NodeTypeRegistry.NT_QUERY.toJCRName(session.getNamespaceResolver()));
-		if (query.getPrimaryNodeType().equals(ntQuery));
+		NodeTypeManager ntMgr = session.getWorkspace().getNodeTypeManager();
+		NodeType ntQuery = ntMgr.getNodeType(NodeTypeRegistry.NT_QUERY.toJCRName(
+			session.getNamespaceResolver()));
+		if (!query.getPrimaryNodeType().equals(ntQuery)) {
+		    throw new InvalidQueryException("node is not of type nt:query");
+		}
-	    QueryRootNode root = QueryParser.parse(statement, language/*, session.getNamespaceResolver()*/);
+	    QueryRootNode root = QueryParser.parse(statement, language);
-	    // set 
+	    // set properties
