- moved virtual nodestate providers down to shared states (part of solving JCR-45)

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@156034 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.virtual.VirtualItemStateProvider;
-     * Virtual item state providers
+     * State manager for the transient items
-    private VirtualItemStateProvider[] virtualProviders = new VirtualItemStateProvider[0];
+
+    /**
+     * Hierarchy manager
+     */
-     * Adds a new virtual item state provider
-     *
-     * @param prov
-     */
-    public synchronized void addVirtualItemStateProvider(VirtualItemStateProvider prov) {
-        VirtualItemStateProvider[] provs = new VirtualItemStateProvider[virtualProviders.length + 1];
-        System.arraycopy(virtualProviders, 0, provs, 0, virtualProviders.length);
-        provs[virtualProviders.length] = prov;
-        virtualProviders = provs;
-    }
-
-    /**
-        // check the virtual root ids (needed for overlay)
-        for (int i = 0; i < virtualProviders.length; i++) {
-            if (virtualProviders[i].isVirtualRoot(id)) {
-                return virtualProviders[i].getItemState(id);
-            }
-        }
-
-        // check if there is a virtual state for the specified item
-        for (int i = 0; i < virtualProviders.length; i++) {
-            if (virtualProviders[i].hasItemState(id)) {
-                return virtualProviders[i].getItemState(id);
-            }
-        }
-
-
-        // check the virtual root ids (needed for overlay)
-        for (int i = 0; i < virtualProviders.length; i++) {
-            if (virtualProviders[i].isVirtualRoot(id)) {
-                return true;
-            }
-        }
-
-
-        if (persistentStateMgr.hasItemState(id)) {
-            return true;
-        }
-
-        // check if there is a virtual state for the specified item
-        for (int i = 0; i < virtualProviders.length; i++) {
-            if (virtualProviders[i].hasItemState(id)) {
-                return true;
-            }
-        }
-
-        return false;
+        return persistentStateMgr.hasItemState(id);
