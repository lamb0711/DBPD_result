fixed: move, reorder (work in progress)
fixed: locktoken transfer
fixed: recursive transient removal of invalidated tree fails (restoreTests)
improve: simplify usage of workspace operations
fixed: store original itemId with transient operations in order to properly reflect the changelog upon batch creation
fixed: workspace import doesn't invalidate
fixed: session import uuid handling




git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@513279 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.QValue;
-    public void resolveMergeConflict(NodeState nodeState, NodeState versionState, boolean done) throws RepositoryException {
+    public void resolveMergeConflict(NodeState nodeState, NodeState versionState,
+                                     boolean done) throws RepositoryException {
-        NodeState wspVState = getWorkspaceState(versionState);
-        Operation op = ResolveMergeConflict.create(wspState, wspVState, done);
-        workspaceManager.execute(op);
+        NodeId vId = getWorkspaceState(versionState).getNodeId();
+        try {
+            PropertyState mergeFailedState = wspState.getPropertyState(QName.JCR_MERGEFAILED);
+            QValue[] vs = mergeFailedState.getValues();
+
+            NodeId[] mergeFailedIds = new NodeId[vs.length - 1];
+            for (int i = 0, j = 0; i < vs.length; i++) {
+                NodeId id = workspaceManager.getIdFactory().createNodeId(vs[i].getString());
+                if (!id.equals(vId)) {
+                    mergeFailedIds[j] = id;
+                    j++;
+                }
+                // else: the version id is being solved by this call and not
+                // part of 'jcr:mergefailed' any more
+            }
+
+            PropertyState predecessorState = wspState.getPropertyState(QName.JCR_PREDECESSORS);
+            vs = predecessorState.getValues();
+
+            int noOfPredecessors = (done) ? vs.length + 1 : vs.length;
+            NodeId[] predecessorIds = new NodeId[noOfPredecessors];
+
+            int i = 0;
+            while (i < vs.length) {
+                predecessorIds[i] = workspaceManager.getIdFactory().createNodeId(vs[i].getString());
+                i++;
+            }
+            if (done) {
+                predecessorIds[i] = vId;
+            }
+            Operation op = ResolveMergeConflict.create(wspState, mergeFailedIds, predecessorIds, done);
+            workspaceManager.execute(op);
+
+        } catch (ItemStateException e) {
+            throw new RepositoryException(e);
+        }
