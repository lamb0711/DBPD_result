JCR-3064 - modified patch originally posted by alex parvulescu, omitting some calls to SystemSession.getNode during ac-evaluation

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1181648 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.security.AccessControlEntry;
-import java.util.List;
-    private final Map<NodeId, CacheEntry> cache;
+    private final Map<NodeId, Entries> cache;
-    protected List<AccessControlEntry> getEntries(NodeImpl node) throws RepositoryException {
-        List<AccessControlEntry> entries;
+    protected Entries getEntries(NodeImpl node) throws RepositoryException {
+        Entries entries;
-            CacheEntry ce = cache.get(nodeId);
-            if (ce != null) {
-                entries = ce.entries;
-            } else {
+            entries = cache.get(nodeId);
+            if (entries == null) {
-    protected List<AccessControlEntry> getEntries(NodeId nodeId) throws RepositoryException {
-        List<AccessControlEntry> entries;
+    protected Entries getEntries(NodeId nodeId) throws RepositoryException {
+        Entries entries;
-            CacheEntry ce = cache.get(nodeId);
-            if (ce != null) {
-                entries = ce.entries;
-            } else {
+            entries = cache.get(nodeId);
+            if (entries == null) {
-    private List<AccessControlEntry> updateCache(NodeImpl node) throws RepositoryException {
-        List<AccessControlEntry> entries = super.getEntries(node);
+    private Entries updateCache(NodeImpl node) throws RepositoryException {
+        Entries entries = super.getEntries(node);
-            // build a new cacheEntry and add it to the cache
-            CacheEntry ce = new CacheEntry(entries, nextId);
-            cache.put(node.getNodeId(), ce);
+            // adjust the 'nextId' to point to the next access controlled
+            // ancestor node instead of the parent and remember the entries.
+            entries.setNextId(nextId);
+            cache.put(node.getNodeId(), entries);
-            log.debug("Update cache for node with ID {0}: {1}", node, ce);
+            log.debug("Update cache for node with ID {0}: {1}", node, entries);
-     * Returns the id of the next access-controlled ancestor if the specified
-     * is contained in the cache. Otherwise the method of the super-class is called.
-     *
-     * @param nodeId The id of the node.
-     * @return the id of the next access-controlled ancestor if the specified
-     * is contained in the cache; otherwise the id of the parent.
-     * @throws RepositoryException
-     * @see EntryCollector#getParentId(org.apache.jackrabbit.core.id.NodeId)
-     */
-    @Override
-    protected NodeId getParentId(NodeId nodeId) throws RepositoryException {
-        synchronized (monitor) {
-            CacheEntry ce = cache.get(nodeId);
-            if (ce != null) {
-                return ce.nextAcNodeId;
-            } else {
-                // no cache entry
-                return super.getParentId(nodeId);
-            }
-        }
-    }
-
-    /**
+    @SuppressWarnings("unchecked")
-                    CacheEntry ce = cache.remove(nodeId);
+                    Entries ce = cache.remove(nodeId);
-                        NodeId nextId = ce.nextAcNodeId;
-                        for (CacheEntry entry : cache.values()) {
-                            if (nodeId.equals(entry.nextAcNodeId)) {
-                                entry.nextAcNodeId = nextId;
+                        NodeId nextId = ce.getNextId();
+                        for (Entries entry : cache.values()) {
+                            if (nodeId.equals(entry.getNextId())) {
+                                entry.setNextId(nextId);
-
-    //--------------------------------------------------------------------------
-    /**
-     *
-     */
-    private static class CacheEntry {
-
-        private final List<AccessControlEntry> entries;
-        private NodeId nextAcNodeId;
-
-        private CacheEntry(List<AccessControlEntry> entries, NodeId nextAcNodeId) {
-            this.entries = entries;
-            this.nextAcNodeId = nextAcNodeId;
-        }
-
-        @Override
-        public String toString() {
-            StringBuilder sb = new StringBuilder();
-            sb.append("size = ").append(entries.size()).append(", ");
-            sb.append("nextAcNodeId = ").append(nextAcNodeId);
-            return sb.toString();
-        }
-    }
