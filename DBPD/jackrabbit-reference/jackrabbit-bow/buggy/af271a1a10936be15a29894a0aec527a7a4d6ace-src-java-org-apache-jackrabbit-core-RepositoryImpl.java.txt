JAAS support 

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@155344 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.security.CredentialsCallbackHandler;
-import javax.jcr.*;
+import javax.jcr.Credentials;
+import javax.jcr.LoginException;
+import javax.jcr.NamespaceRegistry;
+import javax.jcr.NoSuchWorkspaceException;
+import javax.jcr.Repository;
+import javax.jcr.RepositoryException;
+import javax.jcr.Session;
-import java.io.*;
-import java.util.*;
+import javax.security.auth.login.LoginContext;
+import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStream;
+import java.io.OutputStreamWriter;
+import java.util.Arrays;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.Map;
+import java.util.Properties;
-    private static final String ANONYMOUS_USER = "anonymous";
-
-    private static final Credentials ANONYMOUS_CREDENTIALS =
-            new SimpleCredentials(ANONYMOUS_USER, new char[0]);
-
+    // name of jaas config entry
+    public static final String JAAS_CONFIG_APPNAME = "Jackrabbit";
+
-        if (credentials == null) {
-            // anonymous login
-            SessionImpl ses = new XASessionImpl(this, ANONYMOUS_CREDENTIALS, wspInfo.getConfig());
-            activeSessions.put(ses, ses);
-            return ses;
-        } else if (credentials instanceof SimpleCredentials) {
-            // username/password credentials
-            // @todo implement authentication/authorization
-            Session ses = new XASessionImpl(this, credentials, wspInfo.getConfig());
-            activeSessions.put(ses, ses);
-            return ses;
-        } else {
-            String msg = "login failed: incompatible credentials";
-            log.debug(msg);
-            throw new RepositoryException(msg);
+
+        CredentialsCallbackHandler cbHandler =
+                new CredentialsCallbackHandler(credentials);
+        LoginContext lc;
+        try {
+            lc = new LoginContext(JAAS_CONFIG_APPNAME, cbHandler);
+            lc.login();
+        } catch (javax.security.auth.login.LoginException le) {
+            throw new LoginException(le.getMessage());
+
+        Session ses = new XASessionImpl(this, lc, wspInfo.getConfig());
+        activeSessions.put(ses, ses);
+        return ses;
-                systemSession = new SystemSession(RepositoryImpl.this, config);
+                systemSession = SystemSession.create(RepositoryImpl.this, config);
