- fixed Serializable support of ItemId, ItemState and derived classes
- new internal utility interface util.Dumpable providing diagnostic
  output
- added Dumpable support to several internal components
- extracted ItemStateStore interface from ItemStateMap concrete class


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@230483 13f79535-47bb-0310-9956-ffa450edef68

+        //---------------------------------------------< Serializable support >
+        private void writeObject(ObjectOutputStream out) throws IOException {
+            // important: fields must be written in same order as they are
+            // read in readObject(ObjectInputStream)
+            out.writeInt(size()); // count
+            for (Iterator iter = iterator(); iter.hasNext();) {
+                NodeState.ChildNodeEntry entry =
+                        (NodeState.ChildNodeEntry) iter.next();
+                //out.writeObject(entry.getName());   // name
+                out.writeUTF(entry.getName().toString());   // name
+                out.writeUTF(entry.getUUID());  // uuid
+            }
+        }
+
+        private void readObject(ObjectInputStream in)
+                throws IOException, ClassNotFoundException {
+            entries = new LinkedMap();
+            nameMap = new HashMap();
+            // important: fields must be read in same order as they are
+            // written in writeObject(ObjectOutputStream)
+            int count = in.readInt();   // count
+            for (int i = 0; i < count; i++) {
+                //QName name = (QName) in.readObject();    // name
+                QName name = QName.valueOf(in.readUTF());    // name
+                String s = in.readUTF();   // uuid
+                add(name, s);
+            }
+        }
+
-            final Map entries;
+                final Map entries;
