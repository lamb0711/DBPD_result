reworked transaction support, contributed by dominique

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@151380 13f79535-47bb-0310-9956-ffa450edef68

-    private final ItemStateManager stateMgr;
+    private final UpdatableItemStateManager stateMgr;
-    protected PersistentNode(ItemStateManager stateMgr,
+    protected PersistentNode(UpdatableItemStateManager stateMgr,
-    protected void setPropertyValue(UpdateOperation upd, QName name, InternalValue value)
+    protected void setPropertyValue(QName name, InternalValue value)
-        setPropertyValues(upd, name, value.getType(), new InternalValue[]{value}, false);
+        setPropertyValues(name, value.getType(), new InternalValue[]{value}, false);
-    protected void setPropertyValues(UpdateOperation upd, QName name, int type, InternalValue[] values)
+    protected void setPropertyValues(QName name, int type, InternalValue[] values)
-        setPropertyValues(upd, name, type, values, true);
+        setPropertyValues(name, type, values, true);
-    protected void setPropertyValues(UpdateOperation upd, QName name, int type, InternalValue[] values, boolean multiple)
+    protected void setPropertyValues(QName name, int type, InternalValue[] values, boolean multiple)
-        PropertyState prop = getOrCreatePropertyState(upd, name, type, multiple);
+        PropertyState prop = getOrCreatePropertyState(name, type, multiple);
-    private PropertyState getOrCreatePropertyState(UpdateOperation upd, QName name, int type, boolean multiValued)
+    private PropertyState getOrCreatePropertyState(QName name, int type, boolean multiValued)
-            PropertyState propState = upd.createNew(name, nodeState.getUUID());
+            PropertyState propState = stateMgr.createNew(name, nodeState.getUUID());
-    protected boolean removeNode(UpdateOperation upd, QName name) throws RepositoryException {
-        return removeNode(upd, name, 1);
+    protected boolean removeNode(QName name) throws RepositoryException {
+        return removeNode(name, 1);
-    protected boolean removeNode(UpdateOperation upd, QName name, int index) throws RepositoryException {
+    protected boolean removeNode(QName name, int index) throws RepositoryException {
-                upd.destroy(state);
+                stateMgr.destroy(state);
-    protected PersistentNode addNode(UpdateOperation upd, QName nodeName, QName nodeTypeName)
+    protected PersistentNode addNode(QName nodeName, QName nodeTypeName)
-        return createChildNode(upd, nodeName, nodeTypeName, null);
+
+        return createChildNode(nodeName, nodeTypeName, null);
-    private PersistentNode createChildNode(UpdateOperation upd, QName name, QName nodeTypeName, String uuid) {
-
+    private PersistentNode createChildNode(QName name, QName nodeTypeName, String uuid) {
-        NodeState state = upd.createNew(uuid, nodeTypeName, parentUUID);
+        NodeState state = stateMgr.createNew(uuid, nodeTypeName, parentUUID);
-    protected void store(UpdateOperation upd) throws RepositoryException {
+    protected void store() throws RepositoryException {
-            store(upd, nodeState);
+            store(nodeState);
-     * @param update update operation
-    private void store(UpdateOperation update, NodeState state)
+    private void store(NodeState state)
-                    update.store(pstate);
+                    stateMgr.store(pstate);
-                store(update, nstate);
+                store(nstate);
-            update.store(state);
+            stateMgr.store(state);
-    protected void copyFrom(UpdateOperation upd, PropertyImpl prop) throws RepositoryException {
+    protected void copyFrom(PropertyImpl prop) throws RepositoryException {
-            setPropertyValues(upd, prop.getQName(), type, values);
+            setPropertyValues(prop.getQName(), type, values);
-            setPropertyValue(upd, prop.getQName(), prop.internalGetValue());
+            setPropertyValue(prop.getQName(), prop.internalGetValue());
