JCR-1592 - JSR 283: Activities


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@784261 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.ArrayList;
+import java.util.ArrayList;
-    private HashSet labelCache = null;
+    private HashSet<Name> labelCache = null;
-        for (int i = 0; i < preds.length; i++) {
-            InternalVersion pred = preds[i];
+        for (InternalVersion pred : preds) {
-        for (int i = 0; i < succ.length; i++) {
-            ((InternalVersionImpl) succ[i]).internalDetachPredecessor(this, true);
+        for (InternalVersion aSucc : succ) {
+            ((InternalVersionImpl) aSucc).internalDetachPredecessor(this, true);
-        for (int i = 0; i < preds.length; i++) {
-            ((InternalVersionImpl) preds[i]).internalDetachSuccessor(this, true);
+        for (InternalVersion pred : preds) {
+            ((InternalVersionImpl) pred).internalDetachSuccessor(this, true);
-        for (int i = 0; i < preds.length; i++) {
-            ((InternalVersionImpl) preds[i]).internalAddSuccessor(this, true);
+        for (InternalVersion pred : preds) {
+            ((InternalVersionImpl) pred).internalAddSuccessor(this, true);
-        List l = new ArrayList(Arrays.asList(getSuccessors()));
+        List<InternalVersion> l = new ArrayList<InternalVersion>(Arrays.asList(getSuccessors()));
-        List l = new ArrayList(Arrays.asList(getPredecessors()));
+        List<InternalVersion> l = new ArrayList<InternalVersion>(Arrays.asList(getPredecessors()));
-        List l = new ArrayList(Arrays.asList(getSuccessors()));
+        List<InternalVersion> l = new ArrayList<InternalVersion>(Arrays.asList(getSuccessors()));
-            labelCache = new HashSet();
+            labelCache = new HashSet<Name>();
-            return (Name[]) labelCache.toArray(new Name[labelCache.size()]);
+            return labelCache.toArray(new Name[labelCache.size()]);
-            for (int i = 0; i < values.length; i++) {
-                NodeId vId = new NodeId(values[i].getUUID());
+            for (InternalValue value : values) {
+                NodeId vId = new NodeId(value.getUUID());
+
+    /**
+     * Returns the activity of this version or <code>null</code> if not defined
+     * @return the activity or <code>null</code>
+     * @throws RepositoryException if an error occurs
+     */
+    public InternalActivityImpl getActivity() throws RepositoryException {
+        if (node.hasProperty(NameConstants.JCR_ACTIVITY)) {
+            NodeId actId = new NodeId(node.getPropertyValue(NameConstants.JCR_ACTIVITY).getUUID());
+            return (InternalActivityImpl) vMgr.getItem(actId);
+        } else {
+            return null;
+        }
+    }
