JCR-926: new configuration parameter, bugfixes, and improved test coverage

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@574543 13f79535-47bb-0310-9956-ffa450edef68

-     * Byte arrays smaller or equal this size are always kept in memory
+     * Temporary binary values smaller or equal this size are kept in memory
-    private static final int MIN_BLOB_FILE_SIZE = Integer.parseInt(System.getProperty("org.jackrabbit.minBlobFileSize", "100"));
+    private static final int MIN_BLOB_FILE_SIZE = 1024;
-    private final Object val;
+    private Object val;
-        if (USE_DATA_STORE) {
-            return new InternalValue(BLOBInTempFile.getInstance(value, false));
-        }                
+        assert !USE_DATA_STORE;
-        byte[] buffer = new byte[MIN_BLOB_FILE_SIZE];
-        int pos = 0, len = MIN_BLOB_FILE_SIZE;
-        while (pos < MIN_BLOB_FILE_SIZE) {
+        int maxMemorySize;
+        if (store != null) {
+            maxMemorySize = store.getMinRecordLength() - 1;
+        } else {
+            maxMemorySize = MIN_BLOB_FILE_SIZE;
+        }
+        maxMemorySize = Math.max(0, maxMemorySize);
+        byte[] buffer = new byte[maxMemorySize];
+        int pos = 0, len = maxMemorySize;
+        while (pos < maxMemorySize) {
-        if (pos < MIN_BLOB_FILE_SIZE) {
+        if (pos < maxMemorySize) {
+    public void store(DataStore dataStore) throws RepositoryException, IOException {
+        assert USE_DATA_STORE;
+        assert dataStore != null;
+        assert type == PropertyType.BINARY;
+        BLOBFileValue v = (BLOBFileValue) val;
+        if (v instanceof BLOBInDataStore) {
+            // already in the data store, OK
+            return;
+        } else if (v instanceof BLOBInMemory) {
+            if (v.getLength() < dataStore.getMinRecordLength()) {
+                // in memory and does not make sense to store, OK
+                return;
+            }
+        }
+        // store the temp file to the data store, or (theoretically) load it in memory
+        val = getBLOBFileValue(dataStore, v.getStream());
+    }
+
