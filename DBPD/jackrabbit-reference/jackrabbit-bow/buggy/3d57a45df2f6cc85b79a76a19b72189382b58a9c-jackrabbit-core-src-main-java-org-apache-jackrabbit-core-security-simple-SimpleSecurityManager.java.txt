 JCR-1588: JSR 283: Access Control

- minor improvement to SimpleSecurityManager
   -> respect workspace access manager config and use SimpleWorkspaceAccessManager as default
   -> explicitely ignore ac-provider config but allow subclasses to overwrite

- add SimpleWorkspaceAccessManager that allows access to every workspace


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@799284 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.config.SecurityManagerConfig;
+import org.apache.jackrabbit.core.security.authorization.WorkspaceAccessManager;
+import org.apache.jackrabbit.core.security.authorization.AccessControlProvider;
+     * The workspace access manager
+     */
+    private WorkspaceAccessManager workspaceAccessManager;
+
+    /**
+    /**
+     * Always returns <code>null</code>. AccessControlProvider configuration
+     * is ignored with this security manager. Subclasses may overwrite this
+     * lazy behavior that originates from the <code>SimpleAccessManager</code>.
+     *
+     * @param systemSession The system session used to init the security manager.
+     * @param workspaceName The name of the workspace for which the provider
+     * should be retrieved.
+     * @return Always returns <code>null</code>.
+     */
+    protected AccessControlProvider getAccessControlProvider(Session systemSession, String workspaceName) {
+        return null;
+    }
+
+        SecurityManagerConfig smc = config.getSecurityManagerConfig();
+        if (smc != null && smc.getWorkspaceAccessConfig() != null) {
+            workspaceAccessManager = (WorkspaceAccessManager) smc.getWorkspaceAccessConfig().newInstance();
+        } else {
+            // fallback -> the default simple implementation
+            log.debug("No WorkspaceAccessManager configured; using default.");
+            workspaceAccessManager = new SimpleWorkspaceAccessManager();
+        }
+        workspaceAccessManager.init(systemSession);
+
+            String wspName = session.getWorkspace().getName();
+            AccessControlProvider acP = getAccessControlProvider(systemSession, wspName);
+
-            accessMgr.init(amContext);
+            accessMgr.init(amContext, acP, workspaceAccessManager);
