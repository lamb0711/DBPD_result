- removed @author and @version (i.e. $Revision & $Id) tags
- removed tab characters from java source code

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47648 13f79535-47bb-0310-9956-ffa450edef68

- *
- * @author Stefan Guggisberg
- * @version $Revision: 1.2 $, $Date: 2004/09/06 14:28:05 $
-     *  <code>ReferenceManager</code>
+     * <code>ReferenceManager</code>
-	this.persistMgr = persistMgr;
-	// setup cache with soft references to <code>NodeReferences</code> objects
-	refsCache = new ReferenceMap(ReferenceMap.HARD, ReferenceMap.SOFT);
+        this.persistMgr = persistMgr;
+        // setup cache with soft references to <code>NodeReferences</code> objects
+        refsCache = new ReferenceMap(ReferenceMap.HARD, ReferenceMap.SOFT);
-     *
-	if (refsCache.containsKey(targetId)) {
-	    return (NodeReferences) refsCache.get(targetId);
-	}
-	NodeReferences refs;
-	try {
-	    // load persisted references
-	    refs = persistMgr.loadNodeReferences(targetId.getUUID());
-	} catch (NoSuchItemStateException nsise) {
-	    // does not exist, create new
-	    refs = persistMgr.createNodeReferencesInstance(targetId.getUUID());
-	} catch (ItemStateException ise) {
-	    String msg = "error while loading references";
-	    log.error(msg, ise);
-	    throw new RepositoryException(msg, ise);
-	}
-	// put it in cache
-	refsCache.put(targetId, refs);
-	return refs;
+        if (refsCache.containsKey(targetId)) {
+            return (NodeReferences) refsCache.get(targetId);
+        }
+        NodeReferences refs;
+        try {
+            // load persisted references
+            refs = persistMgr.loadNodeReferences(targetId.getUUID());
+        } catch (NoSuchItemStateException nsise) {
+            // does not exist, create new
+            refs = persistMgr.createNodeReferencesInstance(targetId.getUUID());
+        } catch (ItemStateException ise) {
+            String msg = "error while loading references";
+            log.error(msg, ise);
+            throw new RepositoryException(msg, ise);
+        }
+        // put it in cache
+        refsCache.put(targetId, refs);
+        return refs;
-     *
-	if (!refs.hasReferences()) {
-	    remove(refs);
-	    return;
-	}
-	if (!refsCache.containsKey(refs.getTargetId())) {
-	    // not yet in cache, put it in cache
-	    refsCache.put(refs.getTargetId(), refs);
-	}
-	try {
-	    // store references
-	    persistMgr.store(refs);
-	} catch (ItemStateException ise) {
-	    String msg = "error while storing references";
-	    log.error(msg, ise);
-	    throw new RepositoryException(msg, ise);
-	}
+        if (!refs.hasReferences()) {
+            remove(refs);
+            return;
+        }
+        if (!refsCache.containsKey(refs.getTargetId())) {
+            // not yet in cache, put it in cache
+            refsCache.put(refs.getTargetId(), refs);
+        }
+        try {
+            // store references
+            persistMgr.store(refs);
+        } catch (ItemStateException ise) {
+            String msg = "error while storing references";
+            log.error(msg, ise);
+            throw new RepositoryException(msg, ise);
+        }
-     *
-	try {
-	    // destroy persisted references
-	    persistMgr.destroy(refs);
-	} catch (ItemStateException ise) {
-	    String msg = "error while destroying references";
-	    log.error(msg, ise);
-	    throw new RepositoryException(msg, ise);
-	}
+        try {
+            // destroy persisted references
+            persistMgr.destroy(refs);
+        } catch (ItemStateException ise) {
+            String msg = "error while destroying references";
+            log.error(msg, ise);
+            throw new RepositoryException(msg, ise);
+        }
-	// remove from cache
-	refsCache.remove(refs.getTargetId());
+        // remove from cache
+        refsCache.remove(refs.getTargetId());
