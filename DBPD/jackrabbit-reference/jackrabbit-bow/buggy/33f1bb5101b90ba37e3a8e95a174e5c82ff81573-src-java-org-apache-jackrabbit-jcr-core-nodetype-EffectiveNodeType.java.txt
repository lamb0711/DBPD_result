differentiated handling of single vs. multi-valued properties:
multi-valued property can only be set with value array and vice versa


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@46941 13f79535-47bb-0310-9956-ffa450edef68

+     * @param multiValued
-    public PropDef getApplicablePropertyDef(QName name, int type)
+    public PropDef getApplicablePropertyDef(QName name, int type, boolean multiValued)
-		    // found match
-		    return pd;
+		    // match multiValued flag
+		    if (multiValued == pd.isMultiple()) {
+			// found match
+			return pd;
+		    }
-		    // found match
-		    return pd;
+		    // match multiValued flag
+		    if (multiValued == pd.isMultiple()) {
+			// found match
+			return pd;
+		    }
-		    // conflict
-		    String msg = "An item definition in node type '" + def.getDeclaringNodeType() + "' conflicts with node type '" + existing.getDeclaringNodeType() + "': ambiguos residual item definition";
-		    log.error(msg);
-		    throw new NodeTypeConflictException(msg);
+		    if (!def.definesNode()) {
+			// property definition
+			PropDef pd = (PropDef) def;
+			PropDef epd = (PropDef) existing;
+			// compare type & multiValued flag
+			if (pd.getRequiredType() == epd.getRequiredType() &&
+				pd.isMultiple() == epd.isMultiple()) {
+			    // conflict
+			    String msg = "A property definition in node type '" + def.getDeclaringNodeType() + "' conflicts with node type '" + existing.getDeclaringNodeType() + "': ambiguos residual property definition";
+			    log.error(msg);
+			    throw new NodeTypeConflictException(msg);
+			}
+		    } else {
+			// child node definition
+			// conflict
+			String msg = "A child node definition in node type '" + def.getDeclaringNodeType() + "' conflicts with node type '" + existing.getDeclaringNodeType() + "': ambiguos residual child node definition";
+			log.error(msg);
+			throw new NodeTypeConflictException(msg);
+		    }
-	    // @todo check for ambiguous definitions & other conflicts
+	    // @todo do further checks for ambiguous definitions & other conflicts
