JCR-933: RepositoryImpl.acquireRepositoryLock() fails to detect that the file lock is already held by the current process

committing jukka's patch

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@541651 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.util.RepositoryLock;
-import java.io.RandomAccessFile;
-import java.nio.channels.FileChannel;
-import java.nio.channels.FileLock;
-import java.nio.channels.OverlappingFileLockException;
-     * repository home lock
-     */
-    private static final String REPOSITORY_LOCK = ".lock";
-
-    /**
-    private FileLock repLock;
+    private RepositoryLock repLock;
-        acquireRepositoryLock();
+        // Acquire a lock on the repository home
+        repLock = new RepositoryLock(repConfig.getHomeDir());
+        repLock.acquire();
-     * Lock the repository home.
-     *
-     * @throws RepositoryException if the repository lock can not be acquired
-     */
-    protected void acquireRepositoryLock() throws RepositoryException {
-        File home = new File(this.repConfig.getHomeDir());
-        File lock = new File(home, REPOSITORY_LOCK);
-
-        if (lock.exists()) {
-            log.warn("Existing lock file at " + lock.getAbsolutePath()
-                    + " detected. Repository was not shut down properly.");
-        } else {
-            try {
-                lock.createNewFile();
-            } catch (IOException e) {
-                throw new RepositoryException(
-                    "Unable to create lock file at " + lock.getAbsolutePath(), e);
-            }
-        }
-        try {
-            repLock = new RandomAccessFile(lock, "rw").getChannel().tryLock();
-        } catch (IOException e) {
-            throw new RepositoryException(
-                "Unable to lock file at " + lock.getAbsolutePath(), e);
-        } catch (OverlappingFileLockException e) {
-            throw new RepositoryException(
-                    "The repository home at " + home.getAbsolutePath()
-                    + " appears to be in use since the file at "
-                    + lock.getAbsolutePath() + " is already locked by the current process.");
-        }
-        if (repLock == null) {
-            throw new RepositoryException(
-                    "The repository home at " + home.getAbsolutePath()
-                    + " appears to be in use since the file at "
-                    + lock.getAbsolutePath() + " is locked by another process.");
-        }
-    }
-
-    /**
-     * Release repository lock
-     */
-    protected void releaseRepositoryLock() {
-        if (repLock != null) {
-            try {
-                FileChannel channel = repLock.channel();
-                repLock.release();
-                channel.close();
-            } catch (IOException e) {
-                // ignore
-            }
-        }
-        repLock = null;
-
-        File home = new File(this.repConfig.getHomeDir());
-        File lock = new File(home, REPOSITORY_LOCK);
-        if (!lock.delete()) {
-            log.error("Unable to release repository lock");
-        }
-    }
-
-    /**
-        releaseRepositoryLock();
+        repLock.release();
