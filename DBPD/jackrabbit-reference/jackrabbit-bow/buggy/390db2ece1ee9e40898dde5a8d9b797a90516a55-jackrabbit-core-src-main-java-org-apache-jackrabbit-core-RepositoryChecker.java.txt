JCR-3101: when checking version histories also check each individual version

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1180922 13f79535-47bb-0310-9956-ffa450edef68

+import static org.apache.jackrabbit.spi.commons.name.NameConstants.JCR_ROOTVERSION;
+import org.apache.jackrabbit.core.version.InconsistentVersioningState;
+import org.apache.jackrabbit.core.version.InternalVersion;
+import org.apache.jackrabbit.core.version.InternalVersionHistory;
-            log.debug("Checking version history of node {}", node.getNodeId());
+            String message = null;
+            NodeId nid = node.getNodeId();
+
-                versionManager.getVersionHistoryOfNode(node.getNodeId());
+                log.debug("Checking version history of node {}", nid);
+
+                message = "Removing references to a missing version history of node " + nid;
+                InternalVersionHistory vh = versionManager.getVersionHistoryOfNode(nid);
+
+                // additional checks, see JCR-3101
+                String intro = "Removing references to an inconsistent version history of node "
+                    + nid;
+
+                message = intro + " (getting the version names failed)";
+                Name[] versionNames = vh.getVersionNames();
+                boolean seenRoot = false;
+
+                for (Name versionName : versionNames) {
+                    seenRoot |= JCR_ROOTVERSION.equals(versionName);
+
+                    log.debug("Checking version history of node {}, version {}", nid, versionName);
+
+                    message = intro + " (getting version " + versionName + "  failed)";
+                    InternalVersion v = vh.getVersion(versionName);
+
+                    message = intro + "(frozen node of root version " + v.getId() + " missing)";
+                    if (null == v.getFrozenNode()) {
+                        throw new InconsistentVersioningState("frozen node of "
+                                + v.getId() + " is missing.");
+                    }
+                }
+
+                if (!seenRoot) {
+                    message = intro + " (root version is missing)";
+                    throw new InconsistentVersioningState("root version of " + nid +" is missing.");
+                }
-                log.info("Removing references to a missing version history", e);
+                log.info(message, e);
