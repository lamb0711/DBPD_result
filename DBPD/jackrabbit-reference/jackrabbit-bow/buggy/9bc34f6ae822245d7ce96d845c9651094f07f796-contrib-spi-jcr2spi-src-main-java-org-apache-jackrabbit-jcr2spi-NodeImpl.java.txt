- new interface EffectiveNodeTypeProvider
- new interface ItemDefinitionProvider
- limit access to NodeTypeRegistry and simplify the NodeTypeRegistry
  interface.
- avoid duplicate code dealing with logic of EffectiveNodeType
  and retrieval of QItemDefinitions.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@520408 13f79535-47bb-0310-9956-ffa450edef68

-                entRemaining = session.getValidator().getEffectiveNodeType(allRemaining);
+                entRemaining = session.getEffectiveNodeTypeProvider().getEffectiveNodeType(allRemaining);
-            EffectiveNodeType effnt = session.getValidator().getEffectiveNodeType(getNodeState().getNodeTypeNames());
+            EffectiveNodeType effnt = session.getEffectiveNodeTypeProvider().getEffectiveNodeType(getNodeState().getNodeTypeNames());
-        QNodeDefinition definition = session.getValidator().getApplicableNodeDefinition(nodeName, nodeTypeName, getNodeState());
+        QNodeDefinition definition = session.getItemDefinitionProvider().getQNodeDefinition(getNodeState(), nodeName, nodeTypeName);
-        EffectiveNodeType entExisting = session.getValidator().getEffectiveNodeType(existingNts);
+        EffectiveNodeType entExisting = session.getEffectiveNodeTypeProvider().getEffectiveNodeType(existingNts);
-        session.getValidator().getEffectiveNodeType(resultingNts);
+        session.getEffectiveNodeTypeProvider().getEffectiveNodeType(resultingNts);
-        ItemStateValidator validator = session.getValidator();
-        return validator.getApplicablePropertyDefinition(propertyName, type, multiValued, getNodeState());
+        return session.getItemDefinitionProvider().getQPropertyDefinition(getNodeState(), propertyName, type, multiValued);
