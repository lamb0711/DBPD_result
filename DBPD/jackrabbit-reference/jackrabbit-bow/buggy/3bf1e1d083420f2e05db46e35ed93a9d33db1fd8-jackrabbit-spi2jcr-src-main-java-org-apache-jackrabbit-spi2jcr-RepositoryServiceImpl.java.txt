JCR-2113 : JSR 283 Access Control Management (patch provided by alfusainey jallow, commit with minor modifications and some TODOs (in particular testing).

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1646435 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.Tree;
+    @Override
+    public PrivilegeDefinition[] getPrivileges(SessionInfo sessionInfo, NodeId nodeId) throws RepositoryException {
+        SessionInfoImpl sInfo = getSessionInfoImpl(sessionInfo);
+        String path = (nodeId == null) ? null : pathForId(nodeId, sInfo);
+        NamePathResolver npResolver = sInfo.getNamePathResolver();
+        
+        Privilege[] privs = sInfo.getSession().getAccessControlManager().getPrivileges(path);
+        List<PrivilegeDefinition> pDefs = new ArrayList<PrivilegeDefinition>(privs.length);
+        for (Privilege priv : privs) {
+            Name privName = npResolver.getQName(priv.getName());
+            Set<Name> aggrNames = null;
+            if (priv.isAggregate()) {
+                aggrNames = new HashSet<Name>();
+                for (Privilege dap : priv.getDeclaredAggregatePrivileges()) {
+                    aggrNames.add(npResolver.getQName(dap.getName()));
+                }
+            }
+            PrivilegeDefinition def = new PrivilegeDefinitionImpl(privName, priv.isAbstract(), aggrNames);
+            pDefs.add(def);
+        }
+        return pDefs.toArray(new PrivilegeDefinition[pDefs.size()]);
+    }
+    
+    @Override
+    public Tree createTree(SessionInfo sessionInfo, Batch batch, Name nodeName, Name primaryTypeName, String uniqueId) throws RepositoryException {
+        return new XmlTree(nodeName, primaryTypeName, uniqueId, getSessionInfoImpl(sessionInfo).getNamePathResolver());
+    }
+
+        //----------------------------------------------------------< Batch >---
+        @Override
+        @Override
+        @Override
+        @Override
+        @Override
+        @Override
+        @Override
+        @Override
+        @Override
+        @Override
+        @Override
+        public void setTree(final NodeId parentId, Tree tree) throws RepositoryException {
+            if (!(tree instanceof XmlTree)) {
+                throw new RepositoryException("Unknown Tree implementation: " + tree.getClass().getName());
+            }
+
+            final XmlTree xmlTree = (XmlTree) tree;
+            executeGuarded(new Callable() {
+                public Object run() throws RepositoryException {
+                    Session s = sInfo.getSession();
+                    Node parent = getParent(parentId, sInfo);
+                    String xml = xmlTree.toXML();;
+                    InputStream in = new ByteArrayInputStream(xml.getBytes());
+                    try {
+                        s.importXML(parent.getPath(), in, ImportUUIDBehavior.IMPORT_UUID_COLLISION_THROW);
+                    } catch (IOException e) {
+                        throw new RepositoryException(e.getMessage(), e);
+                    } finally {
+                        try {
+                            in.close();
+                        } catch (IOException e) {
+                            throw new RepositoryException(e.getMessage(), e);
+                        }
+                    }
+                    return null;
+                }
+            });
+        }
+
+        //----------------------------------------------------------------------
