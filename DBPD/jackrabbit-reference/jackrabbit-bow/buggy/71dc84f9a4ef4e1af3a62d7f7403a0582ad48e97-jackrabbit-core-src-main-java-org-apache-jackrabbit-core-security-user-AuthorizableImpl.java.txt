javadoc

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@752060 13f79535-47bb-0310-9956-ffa450edef68

-     * @throws RepositoryException
+     * @throws IllegalArgumentException if the given node isn't of node type
+     * {@link #NT_REP_AUTHORIZABLE}.
+     * @throws RepositoryException If an error occurs.
-     * @param name
-     * @param value
+     * @param name The property name.
+     * @param value The property value.
+     * @throws RepositoryException If the specified name defines a property
+     * that needs to be modified by this user API or setting the corresponding
+     * JCR property fails.
-     * @param name
-     * @param values
+     * @param name The property name.
+     * @param values The property values.
+     * @throws RepositoryException If the specified name defines a property
+     * that needs to be modified by this user API or setting the corresponding
+     * JCR property fails.
-    NodeImpl getNode() throws RepositoryException {
+    NodeImpl getNode() {
-     * @param prop
+     * @param prop Property to be tested.
-     * @throws RepositoryException
+     * @throws RepositoryException If the property definition cannot be retrieved.
-     * @param propertyName
-     * @return
-     * @throws RepositoryException
+     * @param propertyName Name of the property.
+     * @return true if the property with the given name represents a protected
+     * user/group property that needs to be changed through the API.
+     * @throws RepositoryException If the specified name is not valid.
-        if (P_PRINCIPAL_NAME.equals(pName) || P_USERID.equals(pName)
+        return P_PRINCIPAL_NAME.equals(pName) || P_USERID.equals(pName)
-                || P_IMPERSONATORS.equals(pName) || P_PASSWORD.equals(pName)) {
-            return true;
-        } else {
-            return false;
-        }
+                || P_IMPERSONATORS.equals(pName) || P_PASSWORD.equals(pName);
-     * @param propertyName
-     * @throws RepositoryException
+     * @param propertyName Name of the property.
+     * @throws ConstraintViolationException If the property is protected according
+     * to {@link #isProtectedProperty(String)}.
+     * @throws RepositoryException If another error occurs.
-    private void checkProtectedProperty(String propertyName) throws RepositoryException {
+    private void checkProtectedProperty(String propertyName) throws ConstraintViolationException, RepositoryException {
-         * @return
+         * @return The path of the underlying node.
