JCR-595 Refactoring of the Persistence Managers (+changing some eol-styles)


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@467925 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.PropertyId;
-
-import java.io.InputStream;
-
- * <code>BLOBStore</code> represents an abstract store for binary property
- * values (BLOBs).
- *
- * @see ResourceBasedBLOBStore
+ * Legacy interface kept for backward compatibility reasons.
+ * @deprecated use {@link org.apache.jackrabbit.core.persistence.util.BLOBStore}
+ *             instead.
-public interface BLOBStore {
-    /**
-     * Creates a unique identifier for the BLOB data associated with the given
-     * property id and value subscript.
-     *
-     * @param id    id of the property associated with the BLOB data
-     * @param index subscript of the value holding the BLOB data
-     * @return a string identifying the BLOB data
-     */
-    String createId(PropertyId id, int index);
+public interface BLOBStore
+        extends org.apache.jackrabbit.core.persistence.util.BLOBStore {
-    /**
-     * Stores the BLOB data and returns a unique identifier.
-     *
-     * @param blobId identifier of the BLOB data as returned by
-     *               {@link #createId(PropertyId, int)}
-     * @param in     stream containing the BLOB data
-     * @param size   size of the BLOB data
-     * @throws Exception if an error occured
-     */
-    void put(String blobId, InputStream in, long size) throws Exception;
-
-    /**
-     * Retrieves the BLOB data with the specified id as a binary stream.
-     *
-     * @param blobId identifier of the BLOB data as returned by
-     *               {@link #createId(PropertyId, int)}
-     * @return an input stream that delivers the BLOB data
-     * @throws Exception if an error occured
-     */
-    InputStream get(String blobId) throws Exception;
-
-    /**
-     * Removes the BLOB data with the specified id.
-     *
-     * @param blobId identifier of the BLOB data as returned by
-     *               {@link #createId(PropertyId, int)}
-     * @return <code>true</code> if BLOB data with the given id exists and has
-     *         been successfully removed, <code>false</code> if there's no BLOB
-     *         data with the given id.
-     * @throws Exception if an error occured
-     */
-    boolean remove(String blobId) throws Exception;
-}
+}
