JCR-2509 : Reduce number of compiler warning by adding @Override and generics where appropriate [step 1: jackrabbit-webdav]

in addition:
- fix indention
- minor improvements in comments
- use foreach loops where possible
- introduce PropEntry marker interface as common base for DavProperty and DavPropertyName
- add o.a.j.webdav.lock.Type.hashCode

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@915333 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Iterator;
+    @Override
-        DavProperty acl = resource.getProperty(SecurityConstants.ACL);
+        DavProperty<?> acl = resource.getProperty(SecurityConstants.ACL);
-        Map principalMap = new HashMap();
-        Iterator aceIt = ((List)((AclProperty)acl).getValue()).iterator();
-        while (aceIt.hasNext()) {
-            AclProperty.Ace ace = (AclProperty.Ace) aceIt.next();
+        Map<String, MultiStatusResponse> respMap = new HashMap<String, MultiStatusResponse>();
+        List<AclProperty.Ace> list = (List<AclProperty.Ace>) ((AclProperty)acl).getValue();
+        for (AclProperty.Ace ace : list) {
-            if (href == null && principalMap.containsKey(href)) {
+            if (href == null && respMap.containsKey(href)) {
-            principalMap.put(href, new MultiStatusResponse(principalResource, info.getPropertyNameSet()));
+            respMap.put(href, new MultiStatusResponse(principalResource, info.getPropertyNameSet()));
-        this.responses = (MultiStatusResponse[]) principalMap.values().toArray(new MultiStatusResponse[principalMap.size()]);
+        this.responses = respMap.values().toArray(new MultiStatusResponse[respMap.size()]);
