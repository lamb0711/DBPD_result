JCR-1007: Move common implementations of SPI interfaces to spi-commons module

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@553507 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.ChildInfo;
-import org.apache.jackrabbit.name.QName;
-import org.apache.jackrabbit.name.NameException;
+import org.apache.jackrabbit.name.IllegalNameException;
+import org.apache.jackrabbit.name.UnknownPrefixException;
-class ChildInfoImpl implements ChildInfo {
-
-    /**
-     * The name of this child info.
-     */
-    private final QName name;
-
-    /**
-     * The unique id for this child info or <code>null</code> if it does not
-     * have a unique id.
-     */
-    private final String uniqueId;
-
-    /**
-     * 1-based index of this child info.
-     */
-    private final int index;
+class ChildInfoImpl extends org.apache.jackrabbit.spi.commons.ChildInfoImpl {
-     * @throws RepositoryException if an error occurs while reading from
-     *                             <code>node</code>.
+     * @throws RepositoryException    if an error occurs while reading from
+     *                                <code>node</code>.
+     * @throws IllegalNameException   if the <code>node</code> name is illegal.
+     * @throws UnknownPrefixException if the name of the <code>node</code>
+     *                                contains a prefix not known to
+     *                                <code>nsResolver</code>.
-    public ChildInfoImpl(Node node, NamespaceResolver nsResolver) throws RepositoryException {
-        try {
-            this.name = NameFormat.parse(node.getName(), nsResolver);
-        } catch (NameException e) {
-            throw new RepositoryException(e.getMessage(), e);
-        }
+    public ChildInfoImpl(Node node, NamespaceResolver nsResolver)
+            throws RepositoryException, IllegalNameException, UnknownPrefixException {
+        super(NameFormat.parse(node.getName(), nsResolver),
+                getUniqueId(node), node.getIndex());
+    }
+
+    /**
+     * @param node the JCR node.
+     * @return the unique id for the <code>node</code> or <code>null</code> if
+     *         the node does not have a unique id.
+     * @throws RepositoryException if an error occurs while reading the unique
+     *                             id.
+     */
+    private static String getUniqueId(Node node) throws RepositoryException {
-        this.uniqueId = uuid;
-        this.index = node.getIndex();
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public QName getName() {
-        return name;
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public String getUniqueID() {
-        return uniqueId;
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    public int getIndex() {
-        return index;
+        return uuid;
