JCR-193, JCR-216, JCR-203, JCR 184 + various minor fixes

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@293331 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.util.Text;
+import javax.jcr.Item;
-     * @param setProperties
-     * @param removePropertyNames
-     * @throws DavException
-    public void alterProperties(DavPropertySet setProperties,
+    public MultiStatusResponse alterProperties(DavPropertySet setProperties,
-                String[] hrefs = new String[] { getLocatorFromResourcePath(ItemResourceConstants.VERSIONSTORAGE_PATH).getHref(true)};
+                String[] hrefs = new String[] {
+                    getLocatorFromItemPath(ItemResourceConstants.VERSIONSTORAGE_PATH).getHref(true)
+                };
-        if (href.startsWith(prefix)) {
-            href = href.substring(prefix.length());
-        }
-            if (getRepositorySession().itemExists(loc.getResourcePath())) {
+            if (getRepositorySession().itemExists(loc.getJcrPath())) {
-     * Build a <code>DavResourceLocator</code> from the given resource path.
+     * Build a <code>DavResourceLocator</code> from the given itemPath path.
-     * @param resourcePath
+     * @param itemPath
-    protected DavResourceLocator getLocatorFromResourcePath(String resourcePath) {
-        DavResourceLocator loc = locator.getFactory().createResourceLocator(locator.getPrefix(), locator.getWorkspacePath(), resourcePath);
+    protected DavResourceLocator getLocatorFromItemPath(String itemPath) {
+        DavResourceLocator loc = locator.getFactory().createResourceLocator(locator.getPrefix(), locator.getWorkspacePath(), itemPath, false);
-     * Retrieve the name/label of a repository item from the given href by
-     * splitting of the part after the last slash. If the removeIndex
-     * flag is set to true, any trailing index (e.g. '[1]') will be removed.
+     * Build a new {@link DavResourceLocator} from the given repository item.
-     * @param resourceHref
-     * @param removeIndex
-     * @return the name of the item
+     * @param repositoryItem
+     * @return a new locator for the specified item.
+     * @see #getLocatorFromItemPath(String)
-    protected static String getResourceName(String resourceHref, boolean removeIndex) {
-        if (resourceHref == null) {
-            return resourceHref;
-        }
-
-        // cut the extension
-        int pos = resourceHref.lastIndexOf('.');
-        if (pos > 0) {
-            resourceHref = resourceHref.substring(pos+1);
-        } else if (resourceHref.endsWith("/")) {
-            resourceHref = resourceHref.substring(0, resourceHref.length()-1);
-        }
-
-        // retrieve the last part of the path
-        String name = Text.getName(resourceHref);
-        // remove index
-        if (removeIndex) {
-            if (name.endsWith("]")) {
-                name = name.substring(0, name.lastIndexOf('['));
+    protected DavResourceLocator getLocatorFromItem(Item repositoryItem) {
+        String itemPath = null;
+        try {
+            if (repositoryItem != null) {
+                itemPath = repositoryItem.getPath();
+        } catch (RepositoryException e) {
+            // ignore: should not occur
+            log.warn(e.getMessage());
-        return name;
+        return getLocatorFromItemPath(itemPath);
