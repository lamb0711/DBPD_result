Last commit for issue JCR-930 (rename the PersistenceManager into ObjectContentManager).
It compiles, the unit tests are running. 
Tommorow, I will make the latest code review before closing the issue


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@548496 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.ocm.exception.PersistenceException;
+import org.apache.jackrabbit.ocm.exception.ObjectContentManagerException;
-public class PersistenceManagerImpl implements ObjectContentManager {
+public class ObjectContentManagerImpl implements ObjectContentManager {
-    private final static Log log = LogFactory.getLog(PersistenceManagerImpl.class);
+    private final static Log log = LogFactory.getLog(ObjectContentManagerImpl.class);
-     * Creates a new <code>PersistenceManager</code> that uses the passed in
+     * Creates a new <code>ObjectContentManager</code> that uses the passed in
-    public PersistenceManagerImpl(Mapper mapper,
+    public ObjectContentManagerImpl(Mapper mapper,
-     * Creates a new <code>PersistenceManager</code> based on a JCR session and some xml mapping files. 
+     * Creates a new <code>ObjectContentManager</code> based on a JCR session and some xml mapping files. 
-    public PersistenceManagerImpl(Session session,String[] xmlMappingFiles ) 
+    public ObjectContentManagerImpl(Session session,String[] xmlMappingFiles ) 
-                    "Impossible to instantiate the persistence manager", e);
+                    "Impossible to instantiate the object content manager", e);
-    public PersistenceManagerImpl(Mapper mapper,
+    public ObjectContentManagerImpl(Mapper mapper,
-     * Sets the <code>Mapper</code> used by this persistence manager.
+     * Sets the <code>Mapper</code> used by this object content manager.
-     * Sets the <code>ObjectConverter</code> that is used internally by this persistence manager.
+     * Sets the <code>ObjectConverter</code> that is used internally by this object content manager.
-     * Sets the <code>QueryManager</code> used by the persistence manager.
+     * Sets the <code>QueryManager</code> used by the object content manager.
-     * @throws PersistenceException if the object cannot be retrieved from the path
+     * @throws ObjectContentManagerException if the object cannot be retrieved from the path
-     * @throws PersistenceException if the object cannot be retrieved from the path
+     * @throws ObjectContentManagerException if the object cannot be retrieved from the path
-     * @throws PersistenceException if the object cannot be retrieved from the path
+     * @throws ObjectContentManagerException if the object cannot be retrieved from the path
-                        throw new PersistenceException("Path already exists and it is not supporting the same name sibling : "
+                        throw new ObjectContentManagerException("Path already exists and it is not supporting the same name sibling : "
-                    throw new PersistenceException("Path already exists and it is a property : "
+                    throw new ObjectContentManagerException("Path already exists and it is a property : "
-                throw new PersistenceException("Path is not existing : " + path);
+                throw new ObjectContentManagerException("Path is not existing : " + path);
-                throw new PersistenceException("Path does not exist : " + path);
+                throw new ObjectContentManagerException("Path does not exist : " + path);
-                    throw new PersistenceException("Cannot remove node at path " 
+                    throw new ObjectContentManagerException("Cannot remove node at path " 
-                throw new PersistenceException("Impossible to get the object - the query returns more than one object");
+                throw new ObjectContentManagerException("Impossible to get the object - the query returns more than one object");
-            throw new PersistenceException("Cannot retrieve an object from a property path " + path);
+            throw new ObjectContentManagerException("Cannot retrieve an object from a property path " + path);
-            throw new PersistenceException("Cannot retrieve an object at path " + path, pnfe);
+            throw new ObjectContentManagerException("Cannot retrieve an object at path " + path, pnfe);
-            throw new PersistenceException("Cannot checking modified object at path " + path, iise);
+            throw new ObjectContentManagerException("Cannot checking modified object at path " + path, iise);
-            throw new PersistenceException("Cannot retrieve an object from a property path " + path);
+            throw new ObjectContentManagerException("Cannot retrieve an object from a property path " + path);
-            throw new PersistenceException("Cannot retrieve an object at path " + path, pnfe);
+            throw new ObjectContentManagerException("Cannot retrieve an object at path " + path, pnfe);
-            throw new PersistenceException("Cannot retrieve an object from a property path " + path);
+            throw new ObjectContentManagerException("Cannot retrieve an object from a property path " + path);
-            throw new PersistenceException("Cannot retrieve an object at path " + path, pnfe);
+            throw new ObjectContentManagerException("Cannot retrieve an object at path " + path, pnfe);
-            throw new PersistenceException("Cannot retrieve an object from a property path " + path);
+            throw new ObjectContentManagerException("Cannot retrieve an object from a property path " + path);
-            throw new PersistenceException("Cannot retrieve an object at path " + path, pnfe);
+            throw new ObjectContentManagerException("Cannot retrieve an object at path " + path, pnfe);
-            throw new PersistenceException("Cannot retrieve an object from a property path " + path);
+            throw new ObjectContentManagerException("Cannot retrieve an object from a property path " + path);
-            throw new PersistenceException("Cannot retrieve an object at path " + path, pnfe);
+            throw new ObjectContentManagerException("Cannot retrieve an object at path " + path, pnfe);
-            throw new PersistenceException("Cannot retrieve an object from a property path " + path);
+            throw new ObjectContentManagerException("Cannot retrieve an object from a property path " + path);
-            throw new PersistenceException("Cannot retrieve an object at path " + path, pnfe);
+            throw new ObjectContentManagerException("Cannot retrieve an object at path " + path, pnfe);
-            throw new PersistenceException("Cannot retrieve an object from a property path " + path);
+            throw new ObjectContentManagerException("Cannot retrieve an object from a property path " + path);
-            throw new PersistenceException("Cannot retrieve an object at path " + path, pnfe);
+            throw new ObjectContentManagerException("Cannot retrieve an object at path " + path, pnfe);
-            throw new PersistenceException("Cannot retrieve an object from a property path " + path);
+            throw new ObjectContentManagerException("Cannot retrieve an object from a property path " + path);
-            throw new PersistenceException("Cannot retrieve an object at path " + path, pnfe);
+            throw new ObjectContentManagerException("Cannot retrieve an object at path " + path, pnfe);
-            throw new PersistenceException("Cannot retrieve an object from a property path " + path);
+            throw new ObjectContentManagerException("Cannot retrieve an object from a property path " + path);
-            throw new PersistenceException("Cannot retrieve an object at path " + path, pnfe);
+            throw new ObjectContentManagerException("Cannot retrieve an object at path " + path, pnfe);
-            throw new PersistenceException("No object stored on path: " + absPath);
+            throw new ObjectContentManagerException("No object stored on path: " + absPath);
-            throw new PersistenceException("No object stored on path: " + absPath
+            throw new ObjectContentManagerException("No object stored on path: " + absPath
-            throw new PersistenceException(
+            throw new ObjectContentManagerException(
-            throw new PersistenceException(
+            throw new ObjectContentManagerException(
-            throw new PersistenceException(
+            throw new ObjectContentManagerException(
-            throw new PersistenceException(
+            throw new ObjectContentManagerException(
-            throw new PersistenceException("Cannot refresh current session ", e);
+            throw new ObjectContentManagerException("Cannot refresh current session ", e);
-            throw new PersistenceException(
+            throw new ObjectContentManagerException(
-            throw new PersistenceException(
+            throw new ObjectContentManagerException(
-            throw new PersistenceException(
+            throw new ObjectContentManagerException(
-            throw new PersistenceException(
+            throw new ObjectContentManagerException(
-            throw new PersistenceException(
+            throw new ObjectContentManagerException(
-            throw new PersistenceException(
+            throw new ObjectContentManagerException(
-            throw new PersistenceException(
+            throw new ObjectContentManagerException(
-            throw new PersistenceException(
+            throw new ObjectContentManagerException(
-            throw new PersistenceException(
+            throw new ObjectContentManagerException(
-            throw new PersistenceException(
+            throw new ObjectContentManagerException(
-            throw new PersistenceException(
+            throw new ObjectContentManagerException(
-            throw new PersistenceException(
+            throw new ObjectContentManagerException(
