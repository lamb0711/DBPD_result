JCR-2946 - Improve implementation of DavResource#getProperty(DavPropertyName)
JCR-2948 - Add possibility to PROPFIND the JCR_NODETYPES_CND_LN property

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1155296 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.jcr.property.JcrDavPropertyNameSet;
+    protected DavPropertyNameSet names;
+     * @param factory
-        return getProperties().getPropertyNames();
+        initPropertyNames();
+        return names.getContent().toArray(new DavPropertyName[names.getContentSize()]);
-        return getProperties().get(name);
+        DavProperty prop = getProperties().get(name);
+        if (prop == null) {
+            if (DeltaVConstants.SUPPORTED_METHOD_SET.equals(name)) {
+                prop = new SupportedMethodSetProperty(getSupportedMethods().split(",\\s"));
+            } else if (DeltaVConstants.SUPPORTED_REPORT_SET.equals(name)) {
+                prop = supportedReports;
+            } else if (DeltaVConstants.CREATOR_DISPLAYNAME.equals(name)) {
+                // DAV:creator-displayname default value : not available
+                prop = new DefaultDavProperty<String>(DeltaVConstants.CREATOR_DISPLAYNAME, getCreatorDisplayName(), true);
+            } else if (DeltaVConstants.COMMENT.equals(name)) {
+                // DAV:comment not value available from jcr
+                prop = new DefaultDavProperty<String>(DeltaVConstants.COMMENT, null, true);
+            } else if (DeltaVConstants.WORKSPACE.equals(name)) {
+                // 'workspace' property as defined by RFC 3253
+                String workspaceHref = getWorkspaceHref();
+                if (workspaceHref != null) {
+                    prop = new HrefProperty(DeltaVConstants.WORKSPACE, workspaceHref, true);
+                }
+            }
+        }
+
+        // TODO: required supported-live-property-set  
+        return prop;
-            throw new DavException(DavServletResponse.SC_UNPROCESSABLE_ENTITY, "Unkown report "+ reportInfo.getReportName() +"requested.");
+            throw new DavException(DavServletResponse.SC_UNPROCESSABLE_ENTITY, "Unknown report "+ reportInfo.getReportName() +"requested.");
+     * Property names common to all resources.
+     */
+    protected void initPropertyNames() {
+        names = new DavPropertyNameSet(JcrDavPropertyNameSet.BASE_SET);
+    }
+
+    /**
-        properties.add(new DefaultDavProperty<String>(DavPropertyName.CREATIONDATE, HttpDateFormat.creationDateFormat().format(new Date(0))));
+        properties.add(new DefaultDavProperty<String>(DavPropertyName.CREATIONDATE, getCreationDate()));
-        properties.add(new SupportedMethodSetProperty(getSupportedMethods().split(",\\s")));
-
-        // DeltaV properties
-        properties.add(supportedReports);
-        // DAV:creator-displayname default value : not available
-        properties.add(new DefaultDavProperty<String>(DeltaVConstants.CREATOR_DISPLAYNAME, null, true));
-        // DAV:comment not value available from jcr
-        properties.add(new DefaultDavProperty<String>(DeltaVConstants.COMMENT, null, true));
-
-        // 'workspace' property as defined by RFC 3253
-        String workspaceHref = getWorkspaceHref();
-        if (workspaceHref != null) {
-            properties.add(new HrefProperty(DeltaVConstants.WORKSPACE, workspaceHref, true));
-        }
-
-        // TODO: required supported-live-property-set
+     * @throws org.apache.jackrabbit.webdav.DavException
+    /**
+     * Returns the display name of the creator which is used for the protected
+     * {@link DeltaVConstants#CREATOR_DISPLAYNAME} property.
+     *
+     * @return always <code>null</code>; subclasses may provide a regular value.
+     */
+    protected String getCreatorDisplayName() {
+        return null;
+    }
+
+    /**
+     * Returns the creation date which is used for the
+     * {@link DavPropertyName#CREATIONDATE} property.
+     *
+     * @return a dummy date; subclasses may provide a reasonable value.
+     */
+    protected String getCreationDate() {
+        return HttpDateFormat.creationDateFormat().format(new Date(0));
+    }
+
