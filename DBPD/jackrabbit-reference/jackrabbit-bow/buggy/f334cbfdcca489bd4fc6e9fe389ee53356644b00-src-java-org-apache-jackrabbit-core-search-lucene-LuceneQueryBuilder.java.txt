Implemented proper support for IS [NOT] NULL queries.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@126276 13f79535-47bb-0310-9956-ffa450edef68

+ * Implements a query builder that takes an abstract query tree and creates
+ * a lucene {@link org.apache.lucene.search.Query} tree that can be executed
+ * on an index.
+ * todo introduce a node type hierarchy for efficient translation of NodeTypeQueryNode
+    /** Logger for this class */
+    /** QName for jcr:primaryType */
+    /** Root node of the abstract query tree */
+    /** Session of the user executing this query */
+    /** Namespace mappings to internal prefixes */
+    /** The analyzer instance to use for contains function query parsing */
+    /** Exceptions thrown during tree translation */
+    /**
+     * Creates a new <code>LuceneQueryBuilder</code> instance.
+     * @param root the root node of the abstract query tree.
+     * @param session of the user executing this query.
+     * @param nsMappings namespace resolver for internal prefixes.
+     * @param analyzer for parsing the query statement of the contains function.
+     */
+    /**
+     * Creates a lucene {@link org.apache.lucene.search.Query} tree from an
+     * abstract query tree.
+     * @param root the root node of the abstract query tree.
+     * @param session of the user executing the query.
+     * @param nsMappings namespace resolver for internal prefixes.
+     * @param analyzer for parsing the query statement of the contains function.
+     * @return the lucene query tree.
+     * @throws RepositoryException if an error occurs during the translation.
+     */
-            throw new RepositoryException("Exception parsing query: " + msg.toString());
+            throw new RepositoryException("Exception building query: " + msg.toString());
+    /**
+     * Starts the tree traversal and returns the lucene
+     * {@link org.apache.lucene.search.Query}.
+     * @return the lucene <code>Query</code>.
+     */
+    //---------------------< QueryNodeVisitor interface >-----------------------
+
-        String stringValue;
+        String stringValue = null;
+            case 0:
+                // not set: either IS NULL or IS NOT NULL
+                break;
+        String primaryTypeField = "";
+            primaryTypeField = primaryType.toJCRName(nsMappings);
+            case Constants.OPERATION_NULL:
+                notQuery = new BooleanQuery();
+                notQuery.add(new MatchAllQuery(primaryTypeField), false, false);
+                notQuery.add(new MatchAllQuery(field), false, true);
+                query = notQuery;
+                break;
+            case Constants.OPERATION_NOT_NULL:
+                query = new MatchAllQuery(field);
+                break;
