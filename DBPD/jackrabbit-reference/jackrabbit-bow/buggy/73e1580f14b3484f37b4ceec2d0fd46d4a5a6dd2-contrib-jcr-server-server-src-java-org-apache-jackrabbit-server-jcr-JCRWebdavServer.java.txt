applying patch from angela, fixing:

[JCR-122] cannot PUT changes to a resource in the simple webdav server
[JCR-123] Webdav: Error when accessing Simple-Server
[JCR-126] Jcr-Server Module: Remove Dependency from Jackrabbit-Core


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@180346 13f79535-47bb-0310-9956-ffa450edef68

- * Copyright 2005 The Apache Software Foundation.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
+* Copyright 2005 The Apache Software Foundation.
+*
+* Licensed under the Apache License, Version 2.0 (the "License");
+* you may not use this file except in compliance with the License.
+* You may obtain a copy of the License at
+*
+*      http://www.apache.org/licenses/LICENSE-2.0
+*
+* Unless required by applicable law or agreed to in writing, software
+* distributed under the License is distributed on an "AS IS" BASIS,
+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+* See the License for the specific language governing permissions and
+* limitations under the License.
+*/
-import org.apache.jackrabbit.client.RepositoryAccessServlet;
+import org.apache.jackrabbit.server.SessionProvider;
+import javax.servlet.http.HttpServletResponse;
+    /** the provider for the credentials */
+    private final SessionProvider sessionProvider;
+
-    public JCRWebdavServer(Repository repository) {
-	this.repository = repository;
+    public JCRWebdavServer(Repository repository, SessionProvider sessionProvider) {
+        this.repository = repository;
+        this.sessionProvider = sessionProvider;
-     * @see DavSessionProvider#acquireSession(org.apache.jackrabbit.webdav.WebdavRequest)
+     * @see DavSessionProvider#attachSession(org.apache.jackrabbit.webdav.WebdavRequest)
-    public void acquireSession(WebdavRequest request)
-            throws DavException {
+    public boolean attachSession(WebdavRequest request)
+        throws DavException {
-	request.setDavSession(session);
+        request.setDavSession(session);
+        return true;
-	DavSession session = request.getDavSession();
-	if (session != null) {
-	    session.removeReference(request);
-	}
-	// remove the session from the request
-	request.setDavSession(null);
+        DavSession session = request.getDavSession();
+        if (session != null) {
+            session.removeReference(request);
+        }
+        // remove the session from the request
+        request.setDavSession(null);
-	/** the underlaying jcr session */
+        /** the underlaying jcr session */
-		Credentials creds = RepositoryAccessServlet.getCredentialsFromHeader(request.getHeader(DavConstants.HEADER_AUTHORIZATION));
-                session = repository.login(creds, workspaceName);
+                session = sessionProvider.getSession(request, repository, workspaceName);
-		throw new DavException(DavServletResponse.SC_INTERNAL_SERVER_ERROR, e.getMessage());
-	    }
+                throw new DavException(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
+            }
-	/**
-	 * @see DavSession#addLockToken(String)
-	 */
-	public void addLockToken(String token) {
-	    session.addLockToken(token);
-	}
+        /**
+         * @see DavSession#addLockToken(String)
+         */
+        public void addLockToken(String token) {
+            session.addLockToken(token);
+        }
-	/**
-	 * @see DavSession#getLockTokens()
-	 */
-	public String[] getLockTokens() {
-	    return session.getLockTokens();
-	}
+        /**
+         * @see DavSession#getLockTokens()
+         */
+        public String[] getLockTokens() {
+            return session.getLockTokens();
+        }
-	/**
-	 * @see DavSession#removeLockToken(String)
-	 */
-	public void removeLockToken(String token) {
-	    session.removeLockToken(token);
-	}
+        /**
+         * @see DavSession#removeLockToken(String)
+         */
+        public void removeLockToken(String token) {
+            session.removeLockToken(token);
+        }
-                throws DavException {
+            throws DavException {
