JCR-325: Applied the xml-refactoring.patch that puts the PropInfo instances in charge of applying the imported property values to content nodes.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@387961 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.QName;
-import org.apache.jackrabbit.core.NodeId;
-import java.io.IOException;
-import java.io.Reader;
-     * @param nsContext prefix mappings of current context
-    void startNode(NodeInfo nodeInfo, List propInfos, NamespaceResolver nsContext)
+    void startNode(NodeInfo nodeInfo, List propInfos)
-    //--------------------------------------------------------< inner classes >
-    static class NodeInfo {
-        private QName name;
-        private QName nodeTypeName;
-        private QName[] mixinNames;
-        private NodeId id;
-
-        public NodeInfo() {
-        }
-
-        public NodeInfo(QName name, QName nodeTypeName, QName[] mixinNames,
-                        NodeId id) {
-            this.name = name;
-            this.nodeTypeName = nodeTypeName;
-            this.mixinNames = mixinNames;
-            this.id = id;
-        }
-
-        public void setName(QName name) {
-            this.name = name;
-        }
-
-        public QName getName() {
-            return name;
-        }
-
-        public void setNodeTypeName(QName nodeTypeName) {
-            this.nodeTypeName = nodeTypeName;
-        }
-
-        public QName getNodeTypeName() {
-            return nodeTypeName;
-        }
-
-        public void setMixinNames(QName[] mixinNames) {
-            this.mixinNames = mixinNames;
-        }
-
-        public QName[] getMixinNames() {
-            return mixinNames;
-        }
-
-        public void setId(NodeId id) {
-            this.id = id;
-        }
-
-        public NodeId getId() {
-            return id;
-        }
-    }
-
-    static class PropInfo {
-        private QName name;
-        private int type;
-        private TextValue[] values;
-
-        public PropInfo() {
-        }
-
-        public PropInfo(QName name, int type, TextValue[] values) {
-            this.name = name;
-            this.type = type;
-            this.values = values;
-        }
-
-        public void setName(QName name) {
-            this.name = name;
-        }
-
-        public QName getName() {
-            return name;
-        }
-
-        public void setType(int type) {
-            this.type = type;
-        }
-
-        public int getType() {
-            return type;
-        }
-
-        public void setValues(TextValue[] values) {
-            this.values = values;
-        }
-
-        public TextValue[] getValues() {
-            return values;
-        }
-    }
-
-    /**
-     * <code>TextValue</code> represents a serialized property value read
-     * from a System or Document View XML document.
-     */
-    interface TextValue {
-        /**
-         * Returns the length of the serialized value.
-         *
-         * @return the length of the serialized value
-         * @throws IOException if an I/O error occurs
-         */
-        long length() throws IOException;
-
-        /**
-         * Retrieves the serialized value.
-         *
-         * @return the serialized value
-         * @throws IOException if an I/O error occurs
-         */
-        String retrieve() throws IOException;
-
-        /**
-         * Returns a <code>Reader</code> for reading the serialized value.
-         *
-         * @return a <code>Reader</code> for reading the serialized value.
-         * @throws IOException if an I/O error occurs
-         */
-        Reader reader() throws IOException;
-    }
