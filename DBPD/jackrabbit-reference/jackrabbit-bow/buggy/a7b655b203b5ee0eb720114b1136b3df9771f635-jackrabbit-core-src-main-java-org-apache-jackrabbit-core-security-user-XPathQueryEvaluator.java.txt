JCR-2800: Implement search facility for users and groups
added condition for matching user/principal name
work in progress

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1034419 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.test.api.util.Text;
+    public void visit(XPathQueryBuilder.NodeCondition condition) throws RepositoryException {
+        String repPrincipal = session.getJCRName(UserConstants.P_PRINCIPAL_NAME);
+
+        xPath.append('(')
+             .append("jcr:like(")
+             .append(repPrincipal)
+             .append(",'")
+             .append(condition.getPattern())
+             .append("')")
+             .append(" or ")
+             .append("jcr:like(fn:name(.),'")
+             .append(escape(condition.getPattern()))
+             .append("')")
+             .append(')');
+    }
+
+    /**
+     * Escape <code>string</code> for matching in jcr escaped node names
+     * @param string  string to escape
+     * @return  escaped string
+     */
+    public static String escape(String string) {
+        StringBuilder result = new StringBuilder();
+
+        int k = 0;
+        int j;
+        do {
+            j = string.indexOf('%', k); // split on %
+            if (j < 0) {
+                // jcr escape trail
+                result.append(Text.escapeIllegalJcrChars(string.substring(k)));
+            }
+            else if (j > 0 && string.charAt(j - 1) == '\\') {
+                // literal occurrence of % -> jcr escape
+                result.append(Text.escapeIllegalJcrChars(string.substring(k, j) + '%'));
+            }
+            else {
+                // wildcard occurrence of % -> jcr escape all but %
+                result.append(Text.escapeIllegalJcrChars(string.substring(k, j))).append('%');
+            }
+
+            k = j + 1;
+        } while (j >= 0);
+
+        return result.toString();
+    }
+
