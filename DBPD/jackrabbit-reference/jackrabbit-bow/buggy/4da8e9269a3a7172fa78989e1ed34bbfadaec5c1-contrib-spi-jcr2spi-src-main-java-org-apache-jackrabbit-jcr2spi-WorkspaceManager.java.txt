work in progress

- operations: rename getAffectedIds to getAffectedStates
- operations: return ItemState params instead of ids whereever possible and
  let OperationVisitor deal with all kind of issues arising with SPI ids.
- AddNode/AddProperty operations: don't list state to be created as affected. Not required since operations are collected upon refresh/save, in which case a 'new' item can never be the starting point.
- transient move: let parent NodeState handle the move/renaming of child states
- transient reorder: let parent NodeState handle the reorder logic
- NodeState: remove unused methods and mark setParent private
- NodeImpl: protected getNodeId() no more used by subclasses in version package.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@431887 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.PropertyId;
+        // TODO: review retrival of ItemIds for transient modifications 
-            batch.addNode(operation.getParentId(), operation.getNodeName(), operation.getNodeTypeName(), operation.getUuid());
+            NodeId parentId = operation.getParentState().getNodeId();
+            batch.addNode(parentId, operation.getNodeName(), operation.getNodeTypeName(), operation.getUuid());
-            org.apache.jackrabbit.spi.NodeId parentId = operation.getParentId();
+            NodeId parentId = operation.getParentState().getNodeId();
-            events = service.clone(sessionInfo, operation.getWorkspaceName(), operation.getNodeId(), operation.getDestinationParentId(), operation.getDestinationName(), operation.isRemoveExisting());
+            NodeId nId = operation.getNodeState().getNodeId();
+            NodeId destParentId = operation.getDestinationParentState().getNodeId();
+            events = service.clone(sessionInfo, operation.getWorkspaceName(), nId, destParentId, operation.getDestinationName(), operation.isRemoveExisting());
-            events = service.copy(sessionInfo, operation.getWorkspaceName(), operation.getNodeId(), operation.getDestinationParentId(), operation.getDestinationName());
+            NodeId nId = operation.getNodeState().getNodeId();
+            NodeId destParentId = operation.getDestinationParentState().getNodeId();
+            events = service.copy(sessionInfo, operation.getWorkspaceName(), nId, destParentId, operation.getDestinationName());
+            NodeId moveId = operation.getNodeState().getNodeId();
+            NodeId destParentId = operation.getDestinationParentState().getNodeId();
-                events = service.move(sessionInfo, operation.getNodeId(), operation.getDestinationParentId(), operation.getDestinationName());
+                events = service.move(sessionInfo, moveId, destParentId, operation.getDestinationName());
-                batch.move(operation.getNodeId(), operation.getDestinationParentId(), operation.getDestinationName());
+                batch.move(moveId, destParentId, operation.getDestinationName());
-            events = service.update(sessionInfo, operation.getNodeId(), operation.getSourceWorkspaceName());
+            NodeId nId = operation.getNodeState().getNodeId();
+            events = service.update(sessionInfo, nId, operation.getSourceWorkspaceName());
-            batch.remove(operation.getRemoveId());
+            ItemId id = operation.getRemoveState().getId();
+            batch.remove(id);
-            batch.setMixins(operation.getNodeId(), operation.getMixinNames());
+            batch.setMixins(operation.getNodeState().getNodeId(), operation.getMixinNames());
-            org.apache.jackrabbit.spi.PropertyId id = operation.getPropertyId();
+            PropertyId id = operation.getPropertyState().getPropertyId();
-            batch.reorderNodes(operation.getParentId(), operation.getInsertNodeId(), operation.getBeforeNodeId());
+            NodeId parentId = operation.getParentState().getNodeId();
+            NodeId insertId = operation.getInsertNodeId();
+            NodeId beforeId = operation.getBeforeNodeId();
+            batch.reorderNodes(parentId, insertId, beforeId);
-            events = service.checkout(sessionInfo, operation.getNodeId());
+            events = service.checkout(sessionInfo, operation.getNodeState().getNodeId());
-            events = service.checkin(sessionInfo, operation.getNodeId());
+            events = service.checkin(sessionInfo, operation.getNodeState().getNodeId());
-            events = service.merge(sessionInfo, operation.getNodeId(), operation.getSourceWorkspaceName(), operation.bestEffort());
+            NodeId nId = operation.getNodeState().getNodeId();
+            events = service.merge(sessionInfo, nId, operation.getSourceWorkspaceName(), operation.bestEffort());
-                NodeId nId = operation.getNodeId();
-                NodeId vId = operation.getVersionId();
+                NodeId nId = operation.getNodeState().getNodeId();
+                NodeId vId = operation.getVersionState().getNodeId();
-            events = service.lock(sessionInfo, operation.getNodeId(), operation.isDeep());
+            NodeId nId = operation.getNodeState().getNodeId();
+            events = service.lock(sessionInfo, nId, operation.isDeep());
-            events = service.refreshLock(sessionInfo, operation.getNodeId());
+            NodeId nId = operation.getNodeState().getNodeId();
+            events = service.refreshLock(sessionInfo, nId);
-            events = service.unlock(sessionInfo, operation.getNodeId());
+            NodeId nId = operation.getNodeState().getNodeId();
+            events = service.unlock(sessionInfo, nId);
-            events = service.addVersionLabel(sessionInfo, operation.getVersionHistoryId(), operation.getVersionId(), operation.getLabel(), operation.moveLabel());
+            NodeId vhId = operation.getVersionHistoryState().getNodeId();
+            NodeId vId = operation.getVersionState().getNodeId();
+            events = service.addVersionLabel(sessionInfo, vhId, vId, operation.getLabel(), operation.moveLabel());
-            events = service.removeVersionLabel(sessionInfo, operation.getVersionHistoryId(), operation.getVersionId(), operation.getLabel());
+            NodeId vhId = operation.getVersionHistoryState().getNodeId();
+            NodeId vId = operation.getVersionState().getNodeId();
+            events = service.removeVersionLabel(sessionInfo, vhId, vId, operation.getLabel());
