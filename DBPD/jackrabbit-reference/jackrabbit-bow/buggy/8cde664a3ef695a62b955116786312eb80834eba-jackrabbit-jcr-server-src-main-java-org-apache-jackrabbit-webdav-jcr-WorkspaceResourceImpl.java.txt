JCR-2946 - Improve implementation of DavResource#getProperty(DavPropertyName)
JCR-2948 - Add possibility to PROPFIND the JCR_NODETYPES_CND_LN property

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1155296 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.commons.cnd.CompactNodeTypeDefWriter;
+import org.apache.jackrabbit.webdav.jcr.property.JcrDavPropertyNameSet;
+import org.apache.jackrabbit.webdav.property.DavPropertyName;
+import org.apache.jackrabbit.webdav.property.DefaultDavProperty;
+import javax.jcr.nodetype.NodeTypeIterator;
+import java.io.StringWriter;
+    @Override
+    public DavProperty<?> getProperty(DavPropertyName name) {
+        DavProperty prop = super.getProperty(name);
+        if (prop == null && ItemResourceConstants.JCR_NODETYPES_CND.equals(name)) {
+            StringWriter writer = new StringWriter();
+            try {
+                Session s = getRepositorySession();
+
+                CompactNodeTypeDefWriter cndWriter = new CompactNodeTypeDefWriter(writer, s, true);
+                NodeTypeIterator ntIterator = s.getWorkspace().getNodeTypeManager().getAllNodeTypes();
+                while (ntIterator.hasNext()) {
+                    cndWriter.write(ntIterator.nextNodeType());
+                }
+                cndWriter.close();
+                /*
+                NOTE: avoid having JCR_NODETYPES_CND exposed upon allprop
+                      PROPFIND request since it needs to be calculated.
+                      nevertheless, this property can be altered using
+                      PROPPATCH, which is not consistent with the specification
+                 */
+                return new DefaultDavProperty<String>(ItemResourceConstants.JCR_NODETYPES_CND, writer.toString(), true);
+            } catch (RepositoryException e) {
+                log.error("Failed to access NodeTypeManager: " + e.getMessage());
+                return null;
+            } catch (IOException e) {
+                log.error("Failed to write compact node definition: " + e.getMessage());
+                return null;
+            } finally {
+                try {
+                    writer.close();
+                } catch (IOException e) {
+                    log.error(e.getMessage());
+                }
+            }
+        }
+
+        // TODO: required property DAV:workspace-checkout-set (computed)
+
+        return prop;
+    }
+
-                // TODO: for simplicity it's currently it's either registration or unregistration as nt-modifications are immediately persisted.
+                // TODO: for simplicity it's currently either registration or unregistration as nt-modifications are immediately persisted.
-                DavProperty<?> namespaceProp = (DavProperty<?>) propEntry;
-                setProperty(namespaceProp);
+                setProperty((DavProperty<?>) propEntry);
+    protected void initPropertyNames() {
+        super.initPropertyNames();
+        names.addAll(JcrDavPropertyNameSet.WORKSPACE_SET);
+    }
+
+    @Override
-
-        // TODO: required property DAV:workspace-checkout-set (computed)
-        // TODO: create node type cnd property only if explicitly requested (see JCR-2946 and patch at JCR-2454) 
