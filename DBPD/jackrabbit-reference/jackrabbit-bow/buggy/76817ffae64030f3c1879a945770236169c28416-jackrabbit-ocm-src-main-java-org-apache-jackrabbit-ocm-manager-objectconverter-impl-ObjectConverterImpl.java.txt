Fix for JCR-1325 and review support for Collection & Map. 
The mapping definition can be simplified with parameterized collections and maps. In this case the ElementClass setting is not necessary.


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@650283 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.ocm.manager.collectionconverter.impl.ManageableCollectionImpl;
+import org.apache.jackrabbit.ocm.manager.collectionconverter.impl.ManageableMapImpl;
-			objects = (ManageableCollection) proxyManager.createCollectionProxy(session, collectionConverter, parentNode,
+			Object proxy = proxyManager.createCollectionProxy(session, collectionConverter, parentNode,
-
-		} else {
+			ReflectionUtils.setNestedProperty(object, collectionDescriptor.getFieldName(), proxy);
+		}
+		else
+		{
+			if (objects==null)
+			{
+			  ReflectionUtils.setNestedProperty(object, collectionDescriptor.getFieldName(), null);
+			}
+			else
+			{
+				// TODO: find another for managing custom ManageableObjects classes
+			    if ( ! objects.getClass().equals(ManageableCollectionImpl.class) &&
+			    	 ! objects.getClass().equals(ManageableMapImpl.class))
+			    {
+			    	ReflectionUtils.setNestedProperty(object, collectionDescriptor.getFieldName(), objects);
+			    }
+			    else
+			    {
+				    ReflectionUtils.setNestedProperty(object, collectionDescriptor.getFieldName(), objects.getObjects());
+			    }
+			}
+
-		ReflectionUtils.setNestedProperty(object, collectionDescriptor.getFieldName(), objects);
+
