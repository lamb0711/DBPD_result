JCR-442: Committed Nicolas' latest contrib/backup changes (patch-backup-060728.txt) with some modifications.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@426435 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.IOException;
+import java.io.ObjectOutputStream;
+import java.util.Properties;
+
+import javax.jcr.LoginException;
+import javax.jcr.RepositoryException;
+
+
+import org.apache.jackrabbit.core.NodeId;
+import org.apache.jackrabbit.core.NodeImpl;
+ 
+     * @throws RepositoryException 
+     * @throws LoginException 
-    public RepositoryBackup(RepositoryImpl repo, BackupConfig conf) {
+    public RepositoryBackup(RepositoryImpl repo, BackupConfig conf) throws LoginException, RepositoryException {
-        // TODO Auto-generated constructor stub
-
-    /**
-     * 
-     */
+    
-        // TODO Auto-generated constructor stub
-
-    public void backup(BackupIOHandler h) {
-        // TODO Auto-generated method stub
+    /**
+     * Backup the repository config file
+     * 
+     * TODO Backup properties? Metadata store? Other ressources?
+     * @throws IOException 
+     * @throws RepositoryException 
+     * 
+     * 
+     */
+    public void backup(BackupIOHandler h) throws IOException, RepositoryException {
+        File file = this.conf.getRepoConfFile();
+
+        //Backup repository.xml
+        h.write("repository_xml", file);
+        
+        //Properties
+        Properties p = new Properties();
+        String[] keys = repo.getDescriptorKeys();
+        for (int i = 0; i < keys.length; i++) {
+            p.setProperty(keys[i], repo.getDescriptor(keys[i]));
+        }
+        ByteArrayOutputStream bos = new ByteArrayOutputStream();
+        p.store(bos,"");
+        h.write("repository_properties", bos);
+        
+        // Root node ID
+        NodeImpl nod = (NodeImpl) this.getSession().getRootNode();
+        NodeId n = nod.getNodeId();
+        
+        //We persist the string as a serialized object to avoid compatibility issue
+        String s = n.toString();
+        ByteArrayOutputStream fos = new ByteArrayOutputStream();
+        ObjectOutputStream oos = new ObjectOutputStream(fos);
+        oos.writeObject(s);       
+        h.write("repository_rootNode", fos);
