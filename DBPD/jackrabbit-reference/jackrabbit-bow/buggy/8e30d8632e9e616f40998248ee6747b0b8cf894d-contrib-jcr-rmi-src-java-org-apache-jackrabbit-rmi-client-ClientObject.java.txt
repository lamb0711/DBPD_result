JCR-94: Versioning support for JCR-RMI, contributed by Felix Meschberger.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@159670 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.version.Version;
+import javax.jcr.version.VersionIterator;
+import org.apache.jackrabbit.rmi.iterator.ArrayVersionIterator;
+import org.apache.jackrabbit.rmi.remote.RemoteVersion;
+import org.apache.jackrabbit.rmi.remote.RemoteVersionHistory;
+     * <p>
+     * If the remote item is a {@link RemoteNode}, this method delegates
+     * to {@link #getNode(Session, RemoteNode)}.
-            return factory.getNode(session, (RemoteNode) remote);
+            return getNode(session, (RemoteNode) remote);
+     * Utility method to create a local adapter for a remote node.
+     * This method introspects the remote reference to determine
+     * whether to instantiate a {@link Node Node},
+     * a {@link javax.jcr.version.VersionHistory VersionHistory}, or a
+     *  {@link Version Version} adapter using
+     * the local adapter factory.
+     *
+     * @param session current session
+     * @param remote remote node
+     * @return local node, version, or version history adapter
+     */
+    protected Node getNode(Session session, RemoteNode remote) {
+        if (remote instanceof RemoteVersion) {
+            return factory.getVersion(session, (RemoteVersion) remote);
+        } else if (remote instanceof RemoteVersionHistory) {
+            return factory.getVersionHistory(session, (RemoteVersionHistory) remote);
+        } else {
+            return factory.getNode(session, (RemoteNode) remote);
+        }
+    }
+
+    /**
-                nodes[i] = factory.getNode(session, remotes[i]);
+                nodes[i] = getNode(session, remotes[i]);
+     * Utility method for creating a version array for an array
+     * of remote versions. The versions in the returned array
+     * are created using the local adapter factory.
+     * <p>
+     * A <code>null</code> input is treated as an empty array.
+     *
+     * @param session current session
+     * @param remotes remote versions
+     * @return local version array
+     */
+    protected Version[] getVersionArray(
+            Session session, RemoteVersion[] remotes) {
+        if (remotes != null) {
+            Version[] versions = new Version[remotes.length];
+            for (int i = 0; i < remotes.length; i++) {
+                versions[i] = factory.getVersion(session, remotes[i]);
+            }
+            return versions;
+        } else {
+            return new Version[0]; // for safety
+        }
+    }
+
+    /**
+     * Utility method for creating a version iterator for an array
+     * of remote versions. The versions in the returned iterator
+     * are created using the local adapter factory.
+     * <p>
+     * A <code>null</code> input is treated as an empty array.
+     *
+     * @param session current session
+     * @param remotes remote versions
+     * @return local version iterator
+     */
+    protected VersionIterator getVersionIterator(
+            Session session, RemoteVersion[] remotes) {
+        return new ArrayVersionIterator(getVersionArray(session, remotes));
+    }
+
+    /**
