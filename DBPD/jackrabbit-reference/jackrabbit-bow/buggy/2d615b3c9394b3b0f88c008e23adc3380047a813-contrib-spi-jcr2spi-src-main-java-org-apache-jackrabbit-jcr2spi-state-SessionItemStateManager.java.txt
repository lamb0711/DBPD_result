work in progress

- NodeInfo does not load information about child-node-entries
  -> add separate SPI call
  -> add initial draft ChildInfo interface
  -> ChildNodeEntries are not built upon creation of the NodeState
  -> ItemStateFactory: add method to retrieve ChildNodeEntries

- respect CacheBehaviour while persisting transient modifications

- LockInfo.getNodeId() -> not used so far -> remove

- SessionItemStateManager: getHierarchyManager() only used by SessionImpl -> moved

- Improve TODO comments
- Javadoc


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@482657 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.jcr2spi.HierarchyManager;
-import org.apache.jackrabbit.jcr2spi.HierarchyManagerImpl;
-import org.apache.jackrabbit.jcr2spi.util.LogUtil;
-import org.apache.jackrabbit.name.NamespaceResolver;
-    private final HierarchyManager hierMgr;
-    private final NamespaceResolver nsResolver;
+    //private final HierarchyManager hierMgr;
+    //private final NamespaceResolver nsResolver;
-     * @param nsResolver
-                                   ItemStateValidator validator,
-                                   NamespaceResolver nsResolver) {
+                                   ItemStateValidator validator) {
-        this.nsResolver = nsResolver;
-
-        // create hierarchy manager
-        hierMgr = new HierarchyManagerImpl(this, nsResolver);
-    /**
-     *
-     * @return
-     */
-    public HierarchyManager getHierarchyManager() {
-        return hierMgr;
-    }
-
-
-                // TODO improve
-                int options = ItemStateValidator.CHECK_LOCK //| ItemStateValidator.CHECK_COLLISION
-                    | ItemStateValidator.CHECK_VERSIONING | ItemStateValidator.CHECK_CONSTRAINTS;
+                int options = ItemStateValidator.CHECK_LOCK |
+                    ItemStateValidator.CHECK_VERSIONING |
+                    ItemStateValidator.CHECK_CONSTRAINTS;
-            String msg = "Cannot save an item with status NEW (" +LogUtil.safeGetJCRPath(itemState, nsResolver)+ ").";
+            String msg = "Cannot save an item with status NEW (" +itemState+ ").";
-            String msg =  "Attempt to save an item, that has been externally modified (" +LogUtil.safeGetJCRPath(itemState, nsResolver)+ ").";
+            String msg =  "Attempt to save an item, that has been externally modified (" +itemState+ ").";
-        // TODO: improve. definition has already retrieve within the checkAddNode...
-        // TODO improve
-        int options = ItemStateValidator.CHECK_LOCK //| ItemStateValidator.CHECK_COLLISION
-            | ItemStateValidator.CHECK_VERSIONING | ItemStateValidator.CHECK_CONSTRAINTS;
+        int options = ItemStateValidator.CHECK_LOCK
+            | ItemStateValidator.CHECK_VERSIONING
+            | ItemStateValidator.CHECK_CONSTRAINTS;
-        // TODO: improve...
-                // TODO: undo state modifications
+                // TODO: TOBEFIXED undo state modifications
-        /**
-         * todo: need to come up with some callback mechanism for applying system generated values
-         * (e.g. using a NodeTypeInstanceHandler interface)
-         */
-        } else {
-            // some predefined nodetypes declare auto-created properties without
-            // default values
+        } else if (def.isAutoCreated()) {
+            // handle known predefined nodetypes that declare auto-created
+            // properties without default values
+            } else {
+                // TODO: TOBEFIXED. other nodetype -> build some default value
+                log.warn("Missing implementation. Nodetype " + def.getDeclaringNodeType() + " defines autocreated property " + def.getQName() + " without default value.");
-            // TODO: defaults???
