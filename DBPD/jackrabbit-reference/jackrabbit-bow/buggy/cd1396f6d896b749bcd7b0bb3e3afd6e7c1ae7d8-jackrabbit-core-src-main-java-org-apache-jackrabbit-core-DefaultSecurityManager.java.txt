JCR-2199 - Improvements to user management
- Allow subclasses of UserManagerImpl/UserImpl for custom implementations


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@792467 13f79535-47bb-0310-9956-ffa450edef68

-    private String adminId;
+    protected String adminId;
-    private final Map<String, AccessControlProvider> acProviders = new HashMap();
+    private final Map<String, AccessControlProvider> acProviders = new HashMap<String, AccessControlProvider>();
-        systemUserManager = new UserManagerImpl(securitySession, adminId);
+        systemUserManager = createUserManager(securitySession);
+     * Creates a {@link UserManagerImpl} for the given session. May be overridden
+     * to return a custom implementation.
+     *
+     * @param session session
+     * @return user manager
+     * @throws RepositoryException if an error occurs
+     */
+    protected UserManagerImpl createUserManager(SessionImpl session)
+            throws RepositoryException {
+
+        return new UserManagerImpl(session, adminId);
+    }
+
+    /**
-                    uMgr = new UserManagerImpl(sImpl, adminId);
+                    uMgr = createUserManager(sImpl);
-                    uMgr = new UserManagerImpl(s, adminId);
+                    uMgr = createUserManager(s);
-        Iterator creds = subject.getPublicCredentials(SimpleCredentials.class).iterator();
+        Iterator<SimpleCredentials> creds = subject.getPublicCredentials(
+                SimpleCredentials.class).iterator();
-            SimpleCredentials sc = (SimpleCredentials) creds.next();
+            SimpleCredentials sc = creds.next();
-            for (Iterator it = subject.getPrincipals().iterator(); it.hasNext();) {
+            for (Iterator<Principal> it = subject.getPrincipals().iterator(); it.hasNext();) {
-            
+
