JCR-1588: 283 Access Control

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@689499 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Set;
+    private User user;
+    /**
+     * Resolves the userID from the given credentials and obtains the
+     * principal from the User object associated with the given userID.
+     * If the the userID cannot be resolved to a User or if obtaining the
+     * principal fail, <code>null</code> is returned.
+     *
+     * @param credentials
+     * @return a user principal or <code>null</code>.
+     * @see AbstractLoginModule#getPrincipal(Credentials)
+     */
+    protected Principal getPrincipal(Credentials credentials) {
+        Principal principal = null;
+        String userId = getUserID(credentials);
+        try {
+            Authorizable authrz = userManager.getAuthorizable(userId);
+            if (authrz != null && !authrz.isGroup()) {
+                user = (User) authrz;
+                principal = user.getPrincipal();
+            }
+        } catch (RepositoryException e) {
+            // should not get here
+            log.warn("Error while retrieving principal.", e.getMessage());
+        }
+        return principal;
+    }
+
+    /**
+     * @see AbstractLoginModule#getAuthentication(Principal, Credentials)
+     */
-        Authorizable authrz = userManager.getAuthorizable(principal);
-        if (authrz == null || authrz.isGroup()) {
-            return null;
+        if (user != null) {
+            Authentication authentication = new SimpleCredentialsAuthentication(user);
+            if (authentication.canHandle(creds)) {
+                return authentication;
+            }
-        Authentication authentication = new SimpleCredentialsAuthentication((User) authrz);
-        if (authentication.canHandle(creds)) {
-            return authentication;
-        } else {
-            return null;
-        }
+        // no valid user or authencation could not handle the given creds.
+        return null;
