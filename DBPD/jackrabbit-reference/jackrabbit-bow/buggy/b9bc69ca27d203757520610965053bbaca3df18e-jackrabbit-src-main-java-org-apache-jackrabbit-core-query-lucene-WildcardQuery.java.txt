JCR-638: Support lower-/upper-case functions

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@475677 13f79535-47bb-0310-9956-ffa450edef68

-public class WildcardQuery extends Query {
+public class WildcardQuery extends Query implements TransformConstants {
+     * How property values are tranformed before they are matched using the
+     * provided pattern.
+     */
+    private final int transform;
+
+    /**
-     * @param field the name of the field to search.
-     * @param propName name of the property to search.
-     * @param pattern the wildcard pattern.
+     * @param field     the name of the field to search.
+     * @param propName  name of the property to search.
+     * @param pattern   the wildcard pattern.
+     * @param transform how property values are transformed before they are
+     *                  matched using the <code>pattern</code>.
-    public WildcardQuery(String field, String propName, String pattern) {
+    public WildcardQuery(String field, String propName, String pattern, int transform) {
+        this.transform = transform;
+    }
+
+    /**
+     * Creates a new <code>WildcardQuery</code>.
+     *
+     * @param field    the name of the field to search.
+     * @param propName name of the property to search.
+     * @param pattern  the wildcard pattern.
+     */
+    public WildcardQuery(String field, String propName, String pattern) {
+        this(field, propName, pattern, TRANSFORM_NONE);
-                return new WildcardTermEnum(reader, field, propName, pattern);
+                return new WildcardTermEnum(reader, field, propName, pattern, transform);
-            this.cacheKey = field + '\uFFFF' + propName + '\uFFFF' + pattern;
+            this.cacheKey = field + '\uFFFF' + propName + '\uFFFF' + transform +'\uFFFF' + pattern;
-            TermEnum terms = new WildcardTermEnum(reader, field, propName, pattern);
+            TermEnum terms = new WildcardTermEnum(reader, field, propName, pattern, transform);
