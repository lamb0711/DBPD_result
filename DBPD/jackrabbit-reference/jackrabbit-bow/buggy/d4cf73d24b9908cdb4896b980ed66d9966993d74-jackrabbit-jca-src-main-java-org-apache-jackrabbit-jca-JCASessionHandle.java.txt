JCR-2578: Deprecate XASession

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@933554 13f79535-47bb-0310-9956-ffa450edef68

+import javax.transaction.xa.XAException;
+import javax.transaction.xa.Xid;
-import org.apache.jackrabbit.api.XASession;
-public final class JCASessionHandle implements XASession {
+public final class JCASessionHandle implements Session, XAResource {
-    private XASession getSession() {
+    private Session getSession() {
-    //---------------------------------------------------------< XASession >--
+    //--------------------------------------------------------< XAResource >--
-    /**
-     * Returns the XAResource associated with this session.
-     *
-     * @return XA resource
-     */
-    public XAResource getXAResource() {
-        return getSession().getXAResource();
+    private XAResource getXAResource() throws XAException {
+        Session session = getSession();
+        if (session instanceof XAResource) {
+            return (XAResource) session;
+        } else {
+            throw new XAException(
+                    "XA transactions are not supported with " + session);
+        }
+    }
+
+    public void start(Xid xid, int flags) throws XAException {
+        getXAResource().start(xid, flags);
+    }
+
+    public void end(Xid xid, int flags) throws XAException {
+        getXAResource().end(xid, flags);
+    }
+
+    public int prepare(Xid xid) throws XAException {
+        return getXAResource().prepare(xid);
+    }
+
+    public void rollback(Xid xid) throws XAException {
+        getXAResource().rollback(xid);
+    }
+
+    public void commit(Xid xid, boolean onePhase) throws XAException {
+        getXAResource().commit(xid, onePhase);
+    }
+
+    public void forget(Xid xid) throws XAException {
+        getXAResource().forget(xid);
+    }
+
+    public Xid[] recover(int flag) throws XAException {
+        return getXAResource().recover(flag);
+    }
+
+    public boolean isSameRM(XAResource xares) throws XAException {
+        if (xares instanceof JCASessionHandle) {
+            xares = ((JCASessionHandle) xares).getXAResource();
+        }
+        return getXAResource().isSameRM(xares);
+    }
+
+    public int getTransactionTimeout() throws XAException {
+        return getXAResource().getTransactionTimeout();
+    }
+
+    public boolean setTransactionTimeout(int seconds) throws XAException {
+        return getXAResource().setTransactionTimeout(seconds);
