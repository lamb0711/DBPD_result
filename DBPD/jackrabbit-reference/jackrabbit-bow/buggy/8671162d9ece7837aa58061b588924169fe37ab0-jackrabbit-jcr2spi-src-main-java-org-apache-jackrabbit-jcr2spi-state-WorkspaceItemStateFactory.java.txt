JCR-1886 : Unprocessed ItemInfos call to RepositoryService#getItemInfos
JCR-1891 : Use Soft refs for hierarchy

in addition:
= some javadoc fixes
= change ItemLifeCycleListener to be informed about update of items instead of invalidation
= change ItemCache impl to touch updated items or add them to the cache.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@722470 13f79535-47bb-0310-9956-ffa450edef68

-        if (itemInfos.hasNext()) {
-            NodeInfo first = (NodeInfo) itemInfos.next();
+        if (infos.hasNext()) {
+            NodeInfo first = (NodeInfo) infos.next();
-        while (itemInfos.hasNext()) {
-            ItemInfo info = (ItemInfo) itemInfos.next();
+        while (infos.hasNext()) {
+            ItemInfo info = (ItemInfo) infos.next();
-        if (Status.isTransient(entry.getStatus()) || Status.isStale(entry.getStatus())) {
+        int previousStatus = entry.getStatus();
+        if (Status.isTransient(previousStatus) || Status.isStale(previousStatus)) {
-        if (nState == tmp) {
+        if (previousStatus == Status._UNDEFINED_) {
+        } else {
+            notifyUpdated(nState, previousStatus);
-        if (Status.isTransient(entry.getStatus()) || Status.isStale(entry.getStatus())) {
+        int previousStatus = entry.getStatus();
+        if (Status.isTransient(previousStatus) || Status.isStale(previousStatus)) {
-        if (pState == tmp) {
+        if (previousStatus == Status._UNDEFINED_) {
+        }  else {
+            notifyUpdated(pState, previousStatus);
-        if (infos != null && !parentEntry.hasNodeEntry(name, index)) {
+        if (infos != null) {
-                return prefetchQueue.remove(0);
+                Object next = prefetchQueue.remove(0);
+                if (next instanceof NodeInfo) {
+                    nodeInfos.remove(((NodeInfo) next).getId());
+                }
+                return next;
-         * has not been read yet or does not provide child infos.
+         * has not been read yet, has already been processed (childInfo is up
+         * to date) or does not provide child infos.
