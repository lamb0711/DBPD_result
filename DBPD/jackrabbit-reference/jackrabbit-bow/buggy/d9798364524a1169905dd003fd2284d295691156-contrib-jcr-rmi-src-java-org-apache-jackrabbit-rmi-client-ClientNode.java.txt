Cleaned up code by removing too fine-grained exception declarations.
The rationale for this is that internally the JCR-RMI layer only cares about
the RepositoryException/RemoteException difference.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@155801 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.AccessDeniedException;
-import javax.jcr.InvalidItemStateException;
-import javax.jcr.ItemExistsException;
-import javax.jcr.ItemNotFoundException;
-import javax.jcr.MergeException;
-import javax.jcr.NoSuchWorkspaceException;
-import javax.jcr.PathNotFoundException;
-import javax.jcr.UnsupportedRepositoryOperationException;
-import javax.jcr.ValueFormatException;
-import javax.jcr.lock.LockException;
-import javax.jcr.nodetype.ConstraintViolationException;
-import javax.jcr.nodetype.NoSuchNodeTypeException;
-import javax.jcr.version.VersionException;
-    public ClientNode(Session session, RemoteNode remote,
-            LocalAdapterFactory factory) {
+    public ClientNode(
+            Session session, RemoteNode remote, LocalAdapterFactory factory) {
-    public Node addNode(String path) throws ItemExistsException,
-            PathNotFoundException, ConstraintViolationException,
-            RepositoryException {
+    public Node addNode(String path) throws RepositoryException {
-    public Node addNode(String path, String type) throws ItemExistsException,
-            PathNotFoundException, NoSuchNodeTypeException,
-            ConstraintViolationException, RepositoryException {
+    public Node addNode(String path, String type) throws RepositoryException {
-    public void orderBefore(String src, String dst) throws
-            UnsupportedRepositoryOperationException,
-            ConstraintViolationException, ItemNotFoundException,
-            RepositoryException {
+    public void orderBefore(String src, String dst) throws RepositoryException {
-            throws ValueFormatException, RepositoryException {
+            throws RepositoryException {
-            throws ValueFormatException, RepositoryException {
+            throws RepositoryException {
-            throws ValueFormatException, RepositoryException {
+            throws RepositoryException {
-            throws ValueFormatException, RepositoryException {
+            throws RepositoryException {
-            throws ValueFormatException, RepositoryException {
+            throws RepositoryException {
-            throws ValueFormatException, RepositoryException {
+            throws RepositoryException {
-            throws ValueFormatException, RepositoryException {
+            throws RepositoryException {
-            throws ValueFormatException, RepositoryException {
+            throws RepositoryException {
-            throws ValueFormatException, RepositoryException {
+            throws RepositoryException {
-            throws ValueFormatException, RepositoryException {
+            throws RepositoryException {
-    public Node getNode(String path) throws PathNotFoundException,
-            RepositoryException {
+    public Node getNode(String path) throws RepositoryException {
-    public Property getProperty(String path) throws PathNotFoundException,
-            RepositoryException {
+    public Property getProperty(String path) throws RepositoryException {
-    public PropertyIterator getProperties(String pattern) throws
-            RepositoryException {
+    public PropertyIterator getProperties(String pattern)
+            throws RepositoryException {
-    public Item getPrimaryItem() throws ItemNotFoundException,
-            RepositoryException {
+    public Item getPrimaryItem() throws RepositoryException {
-    public String getUUID() throws UnsupportedRepositoryOperationException,
-            RepositoryException {
+    public String getUUID() throws RepositoryException {
-    public void addMixin(String name) throws NoSuchNodeTypeException,
-            ConstraintViolationException, RepositoryException {
+    public void addMixin(String name) throws RepositoryException {
-    public void removeMixin(String name) throws NoSuchNodeTypeException,
-            ConstraintViolationException, RepositoryException {
+    public void removeMixin(String name) throws RepositoryException {
-    public Version checkin() throws VersionException,
-            UnsupportedRepositoryOperationException, RepositoryException {
+    public Version checkin() throws RepositoryException {
-    public void checkout() throws UnsupportedRepositoryOperationException,
-            RepositoryException {
+    public void checkout() throws RepositoryException {
-    public void update(String workspace) throws NoSuchWorkspaceException,
-            AccessDeniedException, RepositoryException {
+    public void update(String workspace) throws RepositoryException {
-    public void merge(String workspace, boolean bestEffort) throws
-            UnsupportedRepositoryOperationException, NoSuchWorkspaceException,
-            AccessDeniedException, MergeException, RepositoryException {
+    public void merge(String workspace, boolean bestEffort)
+            throws RepositoryException {
-    public void cancelMerge(Version version) throws VersionException,
-            InvalidItemStateException, UnsupportedRepositoryOperationException,
-            RepositoryException {
+    public void cancelMerge(Version version) throws RepositoryException {
-    public void doneMerge(Version version) throws VersionException,
-            InvalidItemStateException, UnsupportedRepositoryOperationException,
-            RepositoryException {
+    public void doneMerge(Version version) throws RepositoryException {
-    public String getCorrespondingNodePath(String workspace) throws
-            ItemNotFoundException, NoSuchWorkspaceException,
-            AccessDeniedException, RepositoryException {
+    public String getCorrespondingNodePath(String workspace)
+            throws RepositoryException {
-    public void restore(String version, boolean removeExisting) throws
-            VersionException, ItemExistsException,
-            UnsupportedRepositoryOperationException, LockException,
-            InvalidItemStateException, RepositoryException {
+    public void restore(String version, boolean removeExisting)
+            throws RepositoryException {
-    public void restore(Version version, boolean removeExisting) throws
-            VersionException, ItemExistsException,
-            UnsupportedRepositoryOperationException, LockException,
-            RepositoryException {
+    public void restore(Version version, boolean removeExisting)
+            throws RepositoryException {
-            throws PathNotFoundException, ItemExistsException,
-            VersionException, ConstraintViolationException,
-            UnsupportedRepositoryOperationException, LockException,
-            InvalidItemStateException, RepositoryException {
+            throws RepositoryException {
-    public void restoreByLabel(String label, boolean removeExisting) throws
-            VersionException, ItemExistsException,
-            UnsupportedRepositoryOperationException, LockException,
-            InvalidItemStateException, RepositoryException {
+    public void restoreByLabel(String label, boolean removeExisting)
+            throws RepositoryException {
-            throws ValueFormatException, VersionException, LockException,
-            RepositoryException {
+            throws RepositoryException {
-            throws ValueFormatException, VersionException, LockException,
-            RepositoryException {
+            throws RepositoryException {
-    public boolean isCheckedOut() throws
-            UnsupportedRepositoryOperationException, RepositoryException {
+    public boolean isCheckedOut() throws RepositoryException {
-    public VersionHistory getVersionHistory()
-            throws UnsupportedRepositoryOperationException, RepositoryException {
+    public VersionHistory getVersionHistory() throws RepositoryException {
-    public Version getBaseVersion()
-            throws UnsupportedRepositoryOperationException, RepositoryException {
+    public Version getBaseVersion() throws RepositoryException {
-            throws UnsupportedRepositoryOperationException, LockException,
-            AccessDeniedException, RepositoryException {
+            throws RepositoryException {
-    public Lock getLock() throws UnsupportedRepositoryOperationException,
-            LockException, AccessDeniedException, RepositoryException {
+    public Lock getLock() throws RepositoryException {
-    public void unlock() throws UnsupportedRepositoryOperationException,
-            LockException, AccessDeniedException, RepositoryException {
+    public void unlock() throws RepositoryException {
