JCR-2064 Add new JSR283 features to CND reader/writer
JCR-2153 Introduce QValueConstraint and change return type of QPropertyDefinition.getValueConstraints()
JCR-2158 Consolidate CND related classes from SPI and Core


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@785777 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.QValueConstraint;
-public class QPropertyDefinitionImpl
-        extends QItemDefinitionImpl
+public class QPropertyDefinitionImpl extends QItemDefinitionImpl
-    private final String[] valueConstraints;
+    private final QValueConstraint[] valueConstraints;
-     * The 'multiple' flag
+     * The available query operators
-    private final Name[] availableQueryOperators;
+    private final String[] availableQueryOperators;
-     * @throws NullPointerException if <code>valueConstraints</code> is
-     *                              <code>null</code>.
-     * @deprecated Use {@link #QPropertyDefinitionImpl(Name, Name,
-                                   boolean, boolean, int, boolean, QValue[], boolean,
-                                   int, String[], Name[], boolean, boolean)} instead.
-     */
-    public QPropertyDefinitionImpl(Name name, Name declaringNodeType,
-                                   boolean isAutoCreated, boolean isMandatory,
-                                   int onParentVersion, boolean isProtected,
-                                   QValue[] defaultValues, boolean isMultiple,
-                                   int requiredType, String[] valueConstraints) {
-        this(name, declaringNodeType, isAutoCreated, isMandatory,
-                onParentVersion, isProtected, defaultValues, isMultiple,
-                requiredType, valueConstraints, null, false, false);
-    }
-
-    /**
-     * Creates a new serializable property definition.
-     *
-     * @param name              the name of the child item.
-     * @param declaringNodeType the delaring node type
-     * @param isAutoCreated     if this item is auto created.
-     * @param isMandatory       if this is a mandatory item.
-     * @param onParentVersion   the on parent version behaviour.
-     * @param isProtected       if this item is protected.
-     * @param defaultValues     the default values or <code>null</code> if there
-     *                          are none.
-     * @param isMultiple        if this property is multi-valued.
-     * @param requiredType      the required type for this property.
-     * @param valueConstraints  the value constraints for this property. If none
-     *                          exist an empty array must be passed.
-     * @param availableQueryOperators
-     * @param isFullTextSearchable
-     * @param isQueryOrderable
+     * @param availableQueryOperators the available query operators
+     * @param isFullTextSearchable if this is fulltext searchable
+     * @param isQueryOrderable   if this is queryable
-                                   int requiredType, String[] valueConstraints,
-                                   Name[] availableQueryOperators,
+                                   int requiredType,
+                                   QValueConstraint[] valueConstraints,
+                                   String[] availableQueryOperators,
-    public String[] getValueConstraints() {
+    public QValueConstraint[] getValueConstraints() {
-    public Name[] getAvailableQueryOperators() {
+    public String[] getAvailableQueryOperators() {
-     * @return
+     * @return the hashcode
-            Set<Name> s = new HashSet<Name>();
-            Name[] names = getAvailableQueryOperators();
-            for (int i = 0; i < names.length; i++) {
-                s.add(names[i]);
-            }
+            Set<String> s = new HashSet<String>();
+            String[] names = getAvailableQueryOperators();
+            s.addAll(Arrays.asList(names));
