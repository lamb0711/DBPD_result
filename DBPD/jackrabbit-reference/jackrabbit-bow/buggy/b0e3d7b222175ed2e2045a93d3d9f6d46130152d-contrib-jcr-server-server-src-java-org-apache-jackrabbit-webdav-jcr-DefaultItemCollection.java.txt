JCR-193, JCR-216, JCR-203, JCR 184 + various minor fixes

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@293331 13f79535-47bb-0310-9956-ffa450edef68

-     * @todo undo incomplete modifications...
+            Node n = (Node)item;
-                Node n = (Node)item;
-     * @todo undo incomplete modifications...
+     * Loops over the given <code>Set</code>s and alters the properties accordingly.
+     * Changes are persisted at the end according to the rules defined with
+     * the {@link #complete()} method.<p>
+     * Please note: since there is only a single property ({@link #JCR_MIXINNODETYPES}
+     * that can be set or removed with PROPPATCH, this method either succeeds
+     * or throws an exception, even if this violates RFC 2518. Thus no property
+     * specific multistatus will be created in case of an error.
+     * @return
-     * @todo undo incomplete modifications...
+     * @see DavResource#alterProperties(org.apache.jackrabbit.webdav.property.DavPropertySet, org.apache.jackrabbit.webdav.property.DavPropertyNameSet)
-    public void alterProperties(DavPropertySet setProperties,
+    public MultiStatusResponse alterProperties(DavPropertySet setProperties,
+            // use the internal set method in order to prevent premature 'save'
+            // use the internal set method in order to prevent premature 'save'
-        // save all changes together
+        // TODO: missing undo of successful set/remove if subsequent operation fails
+        // NOTE, that this is relevant with transactions only.
+
+        // success: save all changes together if no error occured
+        return new MultiStatusResponse(getHref(), DavServletResponse.SC_OK);
+            String itemPath = getLocator().getJcrPath();
-                    n.addNode(resource.getDisplayName());
+                    n.addNode(getItemName(itemPath));
-                        getRepositorySession().getWorkspace().importXML(getResourcePath(), in, ImportUUIDBehavior.IMPORT_UUID_CREATE_NEW);
+                        getRepositorySession().getWorkspace().importXML(itemPath, in, ImportUUIDBehavior.IMPORT_UUID_CREATE_NEW);
-                        getRepositorySession().importXML(getResourcePath(), in, ImportUUIDBehavior.IMPORT_UUID_CREATE_NEW);
+                        getRepositorySession().importXML(itemPath, in, ImportUUIDBehavior.IMPORT_UUID_CREATE_NEW);
-                    n.setProperty(getResourceName(resource.getResourcePath(), true), in);
+                    n.setProperty(getItemName(itemPath), in);
-            if (!exists() || !session.itemExists(member.getResourcePath())) {
+            String itemPath = member.getLocator().getJcrPath();
+            if (!exists() || !session.itemExists(itemPath)) {
-            session.getItem(member.getResourcePath()).remove();
+            getRepositorySession().getItem(itemPath).remove();
-                String srcRelPath = getResourceName(n.getPath() + instructions[i].getMemberHandle(), false);
+                String srcRelPath = Text.getName(instructions[i].getMemberHandle());
-
+                // preform the reordering
-        String destRelPath = null;
+        String destPath = null;
-            while (childNodes.hasNext()) {
+            if (childNodes.hasNext()) {
-                destRelPath = firstChild.getPath();
+                destPath = firstChild.getPath();
-            if (destRelPath == null) {
+            if (destPath == null) {
-            String afterRelPath = getResourceName(position.getSegment(), false);
+            String afterRelPath = Text.getName(position.getSegment());
-            while (childNodes.hasNext() && destRelPath == null) {
+            // jcr only knows order-before > retrieve the node that follows the
+            // one incidated by the 'afterRelPath'.
+            while (childNodes.hasNext() && destPath == null) {
-                    destRelPath = childPath;
+                    destPath = childPath;
-            destRelPath = position.getSegment();
+            destPath = position.getSegment();
-        if (destRelPath != null) {
-            destRelPath = getResourceName(destRelPath, false);
-        }
-
-        return destRelPath;
+        return (destPath != null) ? Text.getName(destPath) : destPath;
-                properties.add(new DefaultDavProperty(JCR_INDEX, new Integer(n.getIndex())));
-		addHrefProperty(JCR_REFERENCES, n.getReferences(), false);
+                properties.add(new DefaultDavProperty(JCR_INDEX, new Integer(n.getIndex()), true));
+                addHrefProperty(JCR_REFERENCES, n.getReferences(), true);
-                    properties.add(new DefaultDavProperty(JCR_UUID, n.getUUID()));
+                    properties.add(new DefaultDavProperty(JCR_UUID, n.getUUID(), true));
-                addHrefProperty(JCR_PRIMARYITEM, new Item[] {primaryItem}, false);
+                addHrefProperty(JCR_PRIMARYITEM, new Item[] {primaryItem}, true);
-        try {
-            String[] pHref = new String[values.length];
-            for (int i = 0; i < values.length; i++) {
-                pHref[i] = getLocatorFromResourcePath(values[i].getPath()).getHref(true);
-            }
-            properties.add(new HrefProperty(name, pHref, isProtected));
-        } catch (RepositoryException e) {
-            e.getMessage();
+        String[] pHref = new String[values.length];
+        for (int i = 0; i < values.length; i++) {
+            pHref[i] = getLocatorFromItem(values[i]).getHref(true);
+        properties.add(new HrefProperty(name, pHref, isProtected));
