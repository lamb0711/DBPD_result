(JCR-70) Expose registered node types below /jcr:system/jcr:nodeTypes

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@157939 13f79535-47bb-0310-9956-ffa450edef68

-    //--------------------------------------------------< item name constants >
+    //----------------------------------------< general item name constants >---
+
-    /** jcr:root (dummy name for root node used in XML serialization) */
-    public static final QName JCR_ROOT = new QName(NS_JCR_URI, "root");
-
-    /** jcr:xmltext */
-    public static final QName JCR_XMLTEXT = new QName(NS_JCR_URI, "xmltext");
-
-    /** jcr:xmlcharacters */
-    public static final QName JCR_XMLCHARACTERS = new QName(NS_JCR_URI, "xmlcharacters");
+    /** jcr:nodeTypes */
+    public static final QName JCR_NODETYPES = new QName(NS_JCR_URI, "nodeTypes");
-    /** jcr:mergeFailed */
-    public static final QName JCR_MERGEFAILED = new QName(NS_JCR_URI, "mergeFailed");
+    //------------------------------------< xml related item name constants >---
+
+    /** jcr:root (dummy name for root node used in XML serialization) */
+    public static final QName JCR_ROOT = new QName(NS_JCR_URI, "root");
+
+    /** jcr:xmltext */
+    public static final QName JCR_XMLTEXT = new QName(NS_JCR_URI, "xmltext");
+
+    /** jcr:xmlcharacters */
+    public static final QName JCR_XMLCHARACTERS = new QName(NS_JCR_URI, "xmlcharacters");
+
+    //----------------------------------------< locking item name constants >---
-    /**
-     * root path for version storage
-     */
+    //-------------------------------------< versioning item name constants >---
+
+    /** jcr:versionStorage */
-    /**
-     * the name of the frozen node
-     */
+
+    /** jcr:mergeFailed */
+    public static final QName JCR_MERGEFAILED = new QName(NS_JCR_URI, "mergeFailed");
+
+    /** jcr:frozenNode */
-    /**
-     * name of the 'jcr:frozenUuid' property
-     */
+
+    /** jcr:frozenUuid */
-    /**
-     * name of the 'jcr:frozenPrimaryType' property
-     */
+
+    /** jcr:frozenPrimaryType */
-    /**
-     * name of the 'jcr:frozenMixinTypes' property
-     */
+
+    /** jcr:frozenMixinTypes  */
-    /**
-     * name of the 'jcr:predecessors' property
-     */
+
+    /** jcr:predecessors */
-    /**
-     * name of the 'jcr:versionLabels' property
-     */
+
+    /** jcr:versionLabels */
-    /**
-     * name of the 'jcr:successors' property
-     */
+
+    /** jcr:successors */
-    /**
-     * name of the 'jcr:isCheckedOut' property
-     */
+
+    /** jcr:isCheckedOut */
-    /**
-     * name of the 'jcr:versionHistory' property
-     */
+
+    /** jcr:versionHistory */
-    /**
-     * name of the 'jcr:baseVersion' property
-     */
+
+    /** jcr:baseVersion */
-    /**
-     * name of the 'jcr:child' property
-     */
+
+    /** jcr:child */
-    /**
-     * the name of the 'jcr:rootVersion' node
-     */
+
+    /** jcr:rootVersion */
-    //---------------------------------------------< node type name constants >
+    //---------------------------------------< nodetype item name constants >---
+
+    /** jcr:nodeTypeName */
+    public static final QName JCR_NODETYPENAME = new QName(NamespaceRegistryImpl.NS_JCR_URI, "nodeTypeName");
+
+    /** jcr:hasOrderableChildNodes */
+    public static final QName JCR_HASORDERABLECHILDNODES = new QName(NamespaceRegistryImpl.NS_JCR_URI, "hasOrderableChildNodes");
+
+    /** jcr:isMixin */
+    public static final QName JCR_ISMIXIN = new QName(NamespaceRegistryImpl.NS_JCR_URI, "isMixin");
+
+    /** jcr:supertypes */
+    public static final QName JCR_SUPERTYPES = new QName(NamespaceRegistryImpl.NS_JCR_URI, "supertypes");
+
+    /** jcr:propertyDef */
+    public static final QName JCR_PROPERTYDEF = new QName(NamespaceRegistryImpl.NS_JCR_URI, "propertyDef");
+
+    /** jcr:name */
+    public static final QName JCR_NAME = new QName(NamespaceRegistryImpl.NS_JCR_URI, "name");
+
+    /** jcr:mandatory */
+    public static final QName JCR_MANDATORY = new QName(NamespaceRegistryImpl.NS_JCR_URI, "mandatory");
+
+    /** jcr:protected */
+    public static final QName JCR_PROTECTED = new QName(NamespaceRegistryImpl.NS_JCR_URI, "protected");
+
+    /** jcr:requiredType */
+    public static final QName JCR_REQUIREDTYPE = new QName(NamespaceRegistryImpl.NS_JCR_URI, "requiredType");
+
+    /** jcr:onParentVersion */
+    public static final QName JCR_ONPARENTVERSION = new QName(NamespaceRegistryImpl.NS_JCR_URI, "onParentVersion");
+
+    /** jcr:primaryItemName */
+    public static final QName JCR_PRIMARYITEMNAME = new QName(NamespaceRegistryImpl.NS_JCR_URI, "primaryItemName");
+
+    /** jcr:multiple */
+    public static final QName JCR_MULTIPLE = new QName(NamespaceRegistryImpl.NS_JCR_URI, "multiple");
+
+    /** jcr:valueConstraints */
+    public static final QName JCR_VALUECONSTRAINTS = new QName(NamespaceRegistryImpl.NS_JCR_URI, "valueConstraints");
+
+    /** jcr:defaultValues */
+    public static final QName JCR_DEFAULTVALUES = new QName(NamespaceRegistryImpl.NS_JCR_URI, "defaultValues");
+
+    /** jcr:autoCreate */
+    public static final QName JCR_AUTOCREATE = new QName(NamespaceRegistryImpl.NS_JCR_URI, "autoCreate");
+
+    /** jcr:childNodeDef */
+    public static final QName JCR_CHILDNODEDEF = new QName(NamespaceRegistryImpl.NS_JCR_URI, "childNodeDef");
+
+    /** jcr:sameNameSibs */
+    public static final QName JCR_SAMENAMESIBS = new QName(NamespaceRegistryImpl.NS_JCR_URI, "sameNameSibs");
+
+    /** jcr:defaultPrimaryType */
+    public static final QName JCR_DEFAULTPRIMARYTYPE = new QName(NamespaceRegistryImpl.NS_JCR_URI, "defaultPrimaryType");
+
+    /** jcr:requiredPrimaryTypes */
+    public static final QName JCR_REQUIREDPRIMARYTYPES = new QName(NamespaceRegistryImpl.NS_JCR_URI, "requiredPrimaryTypes");
+
+    //-------------------------------------------< node type name constants >---
+
+    /** rep:versionStorage */
+    public static final QName REP_NODETYPES = new QName(NS_REP_URI, "nodeTypes");
+
+
+    /** nt:nodeType */
+    public static final QName NT_NODETYPE= new QName(NS_NT_URI, "nodeType");
+
+    /** nt:propertyDef */
+    public static final QName NT_PROPERTYDEF = new QName(NS_NT_URI, "propertyDef");
+
+    /** nt:childNodeDef */
+    public static final QName NT_CHILDNODEDEF = new QName(NS_NT_URI, "childNodeDef");
