JCR-3349 The BatchMode of the ConnectionHelper doesn't work in XA Environment

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1352791 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Map;
+import javax.transaction.xa.Xid;
+import org.apache.jackrabbit.core.TransactionContext;
-    
+    private Map<String, Connection> xaBatchConnectionMap = Collections.synchronizedMap(new HashMap<String, Connection>());
+
-    protected boolean inBatchMode()
-    {
-      return batchConnectionTl.get() != null;
+    protected boolean inBatchMode() {
+    	return getTransactionAwareBatchConnection() != null;
-    /**
+	/**
-            batchConnectionTl.set(batchConnection);
+            setTransactionAwareBatchConnection(batchConnection);
-            batchConnectionTl.remove();
+            removeTransactionAwareBatchConnection();
-    /**
+	/**
-                batchConnectionTl.get().commit();
+            	getTransactionAwareBatchConnection().commit();
-                batchConnectionTl.get().rollback();
+            	getTransactionAwareBatchConnection().rollback();
-            DbUtility.close(batchConnectionTl.get(), null, null);
-            batchConnectionTl.set(null);
+            DbUtility.close(getTransactionAwareBatchConnection(), null, null);
+            removeTransactionAwareBatchConnection();
-            return batchConnectionTl.get();
+            return getTransactionAwareBatchConnection();
+     * Returns the Batch Connection. In XA Environment it is stored
+     * in a Cache-Map based on the current Xid. In Non-XA Environment a ThreadLocal is used.
+     * 
+     * @return Connection
+     */
+    private Connection getTransactionAwareBatchConnection() {
+    	Xid currentXid = TransactionContext.getCurrentXid();
+    	if (currentXid != null) {
+           	return xaBatchConnectionMap.get(xidtoString(currentXid.getGlobalTransactionId()));
+    	} else {
+    		return batchConnectionTl.get();
+    	}
+	}
+
+    /**
+     * Setter for the Batch Connection. In XA Environment it will be stored
+     * in a Cache-Map based on the current Xid. In Non-XA Environment a ThreadLocal is used.
+     * 
+     * @param batchConnection
+     */
+	private void setTransactionAwareBatchConnection(Connection batchConnection) {
+    	Xid currentXid = TransactionContext.getCurrentXid();
+    	if (currentXid != null) {
+       		xaBatchConnectionMap.put(xidtoString(currentXid.getGlobalTransactionId()), batchConnection);
+    	} else {
+    		batchConnectionTl.set(batchConnection);
+    	}
+	}
+
+    /**
+     * Removes the Batch Connection. In XA Environment it will be stored
+     * in a Cache-Map based on the current Xid. In Non-XA Environment a ThreadLocal is used.
+     */
+	private void removeTransactionAwareBatchConnection() {
+    	Xid currentXid = TransactionContext.getCurrentXid();
+    	if (currentXid != null) {
+       		xaBatchConnectionMap.remove(xidtoString(currentXid.getGlobalTransactionId()));
+    	} else {
+    		batchConnectionTl.remove();
+    	}
+	}
+	
+    /**
+     * Creates a comparable String from the given GlobalTransactionId byte[]
+     * 
+     * @param gtrid
+     * @return String
+     */
+    private String xidtoString(byte[] gtrid) {
+        int hexVal;
+        StringBuffer sb = new StringBuffer(512);
+        sb.append(" gtrid(" + gtrid.length + ")={0x");
+        for (int i=0; i<gtrid.length; i++) {
+           hexVal = gtrid[i]&0xFF;
+           if ( hexVal < 0x10 )
+              sb.append("0" + Integer.toHexString(gtrid[i]&0xFF));
+           else
+              sb.append(Integer.toHexString(gtrid[i]&0xFF));
+           }
+        sb.append("}");
+        return sb.toString();
+    }
+
+	/**
