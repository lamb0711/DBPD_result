JCR-3754 [jackrabbit-aws-ext] Add retry logic to S3 asynchronous failed upload

Applying patch from Shashank.
-- Using parameterized logging stmts. No logic changes

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1585460 13f79535-47bb-0310-9956-ffa450edef68

-            if (LOG.isInfoEnabled()) {
-                LOG.info("Async write limit [" + asyncUploadLimit
-                    + "] reached. File [" + fileName
-                    + "]  not added to async write cache.");
-            }
-            if (LOG.isDebugEnabled()) {
-                LOG.debug("current set =" + asyncUploadMap.keySet());
-            }
+            LOG.info(
+                "Async write limit [{}]  reached. File [{}] not added to async write cache.",
+                asyncUploadLimit, fileName);
+            LOG.debug("AsyncUploadCache size=[{}] and entries =[{}]",
+                asyncUploadMap.size(), asyncUploadMap.keySet());
-            if (LOG.isDebugEnabled()) {
-                LOG.debug("added file [" + fileName
-                    + "] to asyncUploadMap upoad took ["
-                    + ((System.currentTimeMillis() - startTime) / 1000)
-                    + "] sec");
-                LOG.debug("current set =" + asyncUploadMap.keySet());
-            }
+            LOG.debug("added file [{}] to asyncUploadMap upoad took [{}] sec",
+                fileName, ((System.currentTimeMillis() - startTime) / 1000));
+            LOG.debug("AsyncUploadCache size=[{}] and entries =[{}]",
+                asyncUploadMap.size(), asyncUploadMap.keySet());
-            if (LOG.isDebugEnabled()) {
-                LOG.debug("removed file [" + fileName
-                    + "] from asyncUploadMap took ["
-                    + ((System.currentTimeMillis() - startTime) / 1000)
-                    + "] sec");
-                LOG.debug("current set =" + asyncUploadMap.keySet());
-            }
+            LOG.debug("removed file [{}] from asyncUploadMap took [{}] sec",
+                fileName, ((System.currentTimeMillis() - startTime) / 1000));
+            LOG.debug("AsyncUploadCache size=[{}] and entries =[{}]",
+                asyncUploadMap.size(), asyncUploadMap.keySet());
-            if (LOG.isDebugEnabled()) {
-                LOG.debug("cannot remove file [" + fileName
-                    + "] from pending upoad took ["
-                    + ((System.currentTimeMillis() - startTime) / 1000)
-                    + "] sec. File not found");
-                LOG.debug("current set =" + asyncUploadMap.keySet());
-            }
+            LOG.debug("cannot removed file [{}] from asyncUploadMap took [{}] sec. File not found.",
+                fileName, ((System.currentTimeMillis() - startTime) / 1000));
+            LOG.debug("AsyncUploadCache size=[{}] and entries =[{}]",
+                asyncUploadMap.size(), asyncUploadMap.keySet());
-        LOG.info("deleteOlderThan min =" + min);
+        LOG.info("deleteOlderThan min [{}]", min);
-            LOG.info("deleteOlderThan set =" + deleteSet);
+            LOG.debug("deleteOlderThan set [{}]", deleteSet);
-        LOG.info("AsynWriteCache:homeDir [" + homeDir + "], path [" + path
-            + "], asyncUploadLimit [" + asyncUploadLimit + "].");
+        LOG.info(
+            "AsynWriteCache:homeDir=[{}], path=[{}], asyncUploadLimit=[{}].",
+            new Object[] { homeDir, path, asyncUploadLimit });
