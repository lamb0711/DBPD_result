work in progress

- SPI: replace String/Stream for values by QValue interface
- SPI: add factory for QValue
  > adjust commons and add implementation
  > adjust usages of former QValue object with jcr2spi, spi2dav
- RepositoryService.getChildInfos returns Iterator instead of Collection
- spi2dav: add implementation for new query interfaces

- TODO: 
  improve conversion of jcr-value to q-value and vice-versa




git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@497885 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.value.QValue;
+import org.apache.jackrabbit.spi.QValue;
+import org.apache.jackrabbit.spi.QValueFactory;
+    /**
+     * ValueFactory used to convert JCR values to qualified ones in order to
+     * determine value constraints within the NodeType interface.
+     */
+    private final QValueFactory qValueFactory;
-                 ValueFactory valueFactory) {
+                 ValueFactory valueFactory, QValueFactory qValueFactory) {
+        this.qValueFactory = qValueFactory;
-            int targetType;
+            Value v;
-                targetType = def.getRequiredType();
+                v =  ValueHelper.convert(value, def.getRequiredType(), valueFactory);
-                targetType = value.getType();
+                v = value;
-            // create QValue from Value and perform
-            // type conversion as necessary
-            Value v = ValueHelper.convert(value, targetType, valueFactory);
-            QValue qValue = ValueFormat.getQValue(v, nsResolver);
+            // create QValue from Value
+            QValue qValue = ValueFormat.getQValue(v, nsResolver, qValueFactory);
-                    QValue qValue = ValueFormat.getQValue(v, nsResolver);
+                    QValue qValue = ValueFormat.getQValue(v, nsResolver, qValueFactory);
