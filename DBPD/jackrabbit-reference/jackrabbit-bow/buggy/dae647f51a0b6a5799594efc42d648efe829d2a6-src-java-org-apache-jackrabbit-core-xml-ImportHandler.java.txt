- ImportHandler & specialized friends now rely on default SAX2 Namespace support
- Doc/SysViewImportHandler are now processing ignorableWhitespace events

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@160189 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.BaseException;
-import org.apache.jackrabbit.core.QName;
- * data in System View XML or Document View XML. Processing of the XML is handled
- * by specialized <code>ContentHandler</code>s (i.e. <code>SysViewImportHandler</code>
- * and <code>DocViewImportHandler</code>).
+ * data in System View XML or Document View XML. Processing of the XML is
+ * handled by specialized <code>ContentHandler</code>s
+ * (i.e. <code>SysViewImportHandler</code> and <code>DocViewImportHandler</code>).
+ * <p/>
+ * <b>Important Note:</b>
+ * <p/>
+ * These SAX Event Handlers expect that Namespace URI's and local names are
+ * reported in the <code>start/endElement</code> events and that
+ * <code>start/endPrefixMapping</code> events are reported
+ * (i.e. default SAX2 Namespace processing).
-            String nsURI;
-            if (namespaceURI != null && !"".equals(namespaceURI)) {
-                nsURI = namespaceURI;
-            } else {
-                try {
-                    nsURI = QName.fromJCRName(qName, nsResolver).getNamespaceURI();
-                } catch (BaseException e) {
-                    // should never happen...
-                    String msg = "internal error: failed to parse/resolve element name "
-                            + qName;
-                    log.debug(msg);
-                    throw new SAXException(msg, e);
-                }
-            }
-            systemViewXML = Constants.NS_SV_URI.equals(nsURI);
+            systemViewXML = Constants.NS_SV_URI.equals(namespaceURI);
