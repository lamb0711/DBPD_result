JCR-2272: Errors during concurrent session import of nodes with same UUIDs

Move node id generation into the createNew() method, and add a check for existing nodes when an existing node id is being used

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/branches/JCR-2272@1174016 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.id.NodeIdFactory;
-    private final UpdatableItemStateManager stateMgr;
+    private final LocalItemStateManager stateMgr;
-    public NodeState createNew(NodeId id, Name nodeTypeName,
-                               NodeId parentId)
-            throws IllegalStateException {
+    public NodeState createNew(
+            NodeId id, Name nodeTypeName, NodeId parentId)
+            throws RepositoryException {
-     * Customized variant of {@link #createNew(NodeId, Name, NodeId)} that
-     * connects the newly created persistent state with the transient state.
-     */
-    public NodeState createNew(NodeState transientState)
-            throws ItemStateException {
-        NodeState persistentState = createNew(transientState.getNodeId(),
-                transientState.getNodeTypeName(),
-                transientState.getParentId());
-        transientState.connect(persistentState);
-        return persistentState;
-    }
-
-    /**
-     * @throws ItemStateException
+     * @throws RepositoryException
-            throws ItemStateException {
-
+            throws RepositoryException {
-            if (transientStore.containsKey(id)) {
-                String msg = "there's already a node state instance with id " + id;
-                log.debug(msg);
-                throw new ItemStateException(msg);
+            if (id == null) {
+                id = stateMgr.getNodeIdFactory().newNodeId();
+            } else if (initialStatus == ItemState.STATUS_NEW
+                    && hasItemState(id)) {
+                throw new InvalidItemStateException(
+                        "Node " + id + " already exists");
+            } else if (transientStore.containsKey(id)) {
+                throw new RepositoryException(
+                        "There is already a transient state for node " + id);
-            NodeState state = new NodeState(id, nodeTypeName, parentId,
-                    initialStatus, true);
+            NodeState state = new NodeState(
+                    id, nodeTypeName, parentId, initialStatus, true);
-    public NodeIdFactory getNodeIdFactory() {
-        return stateMgr.getNodeIdFactory();
-    }
-
