JCR-2050: Optimize refresh operations

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@771280 13f79535-47bb-0310-9956-ffa450edef68

-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-import org.apache.jackrabbit.spi.PathFactory;
+import org.apache.jackrabbit.spi.PathFactory;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+     * Strategy used for item state invalidation (refresh)
+     */
+    private final InvalidationStrategy invalidationStrategy;
+
+    /**
+
+        // todo: make this configurable if necessary
+        // this.invalidationStrategy = new NodeEntryImpl.EagerInvalidation();
+        this.invalidationStrategy = new NodeEntryImpl.LazyInvalidation();
+    /**
+     * @return  the strategy used for item state invalidation (refresh)
+     */
+    public InvalidationStrategy getInvalidationStrategy() {
+        return invalidationStrategy;
+    }
+
-    
-    //--------------------------------------------------------------------------
+
+    //--------------------------------------------------< NodeEntryListener >---
-}
+
+    // ----------------------------------------------< InvalidationStrategy >---
+    /**
+     * Strategy for invalidating item states
+     */
+    public interface InvalidationStrategy {
+
+        /**
+         * Invalidate underlying {@link org.apache.jackrabbit.jcr2spi.state.ItemState} of this
+         * <code>entry</code>. Implementors may choose to delay the actual call to
+         * {@link org.apache.jackrabbit.jcr2spi.state.ItemState#invalidate()} for this
+         * <code>entry</code> and for any of its child entries. They need to ensure however that
+         * {@link #applyPending(NodeEntry)} properly invalidates the respective state when called.
+         *
+         * @param entry The <code>NodeEntry</code> to invalidate.
+         * @param recursive Invalidate state of child entries if <code>true</code>.
+         */
+        public void invalidate(NodeEntry entry, boolean recursive);
+
+        /**
+         * Apply any pending {@link org.apache.jackrabbit.jcr2spi.state.ItemState#invalidate()
+         * invalidation} of the underyling {@link org.apache.jackrabbit.jcr2spi.state.ItemState} of
+         * this <code>entry</code>.
+         *
+         * @param entry The affected <code>NodeEntry</code>.
+         */
+        public void applyPending(NodeEntry entry);
+    }
+}
