[JCR-317] replace UUID strings by UUID classes in NodeId, etc..

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@378221 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.nodetype.ItemDef;
-    private final String parentId;
+    private final NodeId parentId;
-    public VirtualNodeTypeStateProvider(NodeTypeRegistry ntReg, String rootNodeId, String parentId) {
-        super(ntReg, new NodeId(rootNodeId));
+    public VirtualNodeTypeStateProvider(NodeTypeRegistry ntReg,
+                                        NodeId rootNodeId, NodeId parentId) {
+        super(ntReg, rootNodeId);
-        VirtualNodeState root = new VirtualNodeState(this, parentId, rootNodeId.getUUID(), QName.REP_NODETYPES, null);
+        VirtualNodeState root = new VirtualNodeState(this, parentId, rootNodeId, QName.REP_NODETYPES, null);
-            root.addChildNodeEntry(ntNames[i], ntState.getUUID());
+            root.addChildNodeEntry(ntNames[i], ntState.getNodeId());
-            root.addChildNodeEntry(ntName, ntState.getUUID());
+            root.addChildNodeEntry(ntName, ntState.getNodeId());
-    private VirtualNodeState createNodeTypeState(VirtualNodeState parent, NodeTypeDef ntDef) throws RepositoryException {
-        String uuid = calculateStableUUID(ntDef.getName().toString());
-        VirtualNodeState ntState = createNodeState(parent, ntDef.getName(), uuid, QName.NT_NODETYPE);
+    private VirtualNodeState createNodeTypeState(VirtualNodeState parent,
+                                                 NodeTypeDef ntDef)
+            throws RepositoryException {
+        NodeId id = new NodeId(calculateStableUUID(ntDef.getName().toString()));
+        VirtualNodeState ntState = createNodeState(parent, ntDef.getName(), id, QName.NT_NODETYPE);
-            ntState.addChildNodeEntry(QName.JCR_PROPERTYDEFINITION, pdState.getUUID());
+            ntState.addChildNodeEntry(QName.JCR_PROPERTYDEFINITION, pdState.getNodeId());
-            ntState.addChildNodeEntry(QName.JCR_CHILDNODEDEFINITION, cnState.getUUID());
+            ntState.addChildNodeEntry(QName.JCR_CHILDNODEDEFINITION, cnState.getNodeId());
-        String uuid = calculateStableUUID(ntDef.getName().toString() + "/" + QName.JCR_PROPERTYDEFINITION.toString() + "/" + n);
-        VirtualNodeState pState = createNodeState(parent, QName.JCR_PROPERTYDEFINITION, uuid, QName.NT_PROPERTYDEFINITION);
+        NodeId id = new NodeId(calculateStableUUID(
+                ntDef.getName().toString() + "/" + QName.JCR_PROPERTYDEFINITION.toString() + "/" + n));
+        VirtualNodeState pState = createNodeState(parent, QName.JCR_PROPERTYDEFINITION, id, QName.NT_PROPERTYDEFINITION);
-        String uuid = calculateStableUUID(ntDef.getName().toString() + "/" + QName.JCR_CHILDNODEDEFINITION.toString() + "/" + n);
-        VirtualNodeState pState = createNodeState(parent, QName.JCR_CHILDNODEDEFINITION, uuid, QName.NT_CHILDNODEDEFINITION);
+        NodeId id = new NodeId(calculateStableUUID(
+                ntDef.getName().toString() + "/" + QName.JCR_CHILDNODEDEFINITION.toString() + "/" + n));
+        VirtualNodeState pState = createNodeState(parent, QName.JCR_CHILDNODEDEFINITION, id, QName.NT_CHILDNODEDEFINITION);
-    private static String calculateStableUUID(String name) throws RepositoryException {
+    private static UUID calculateStableUUID(String name) throws RepositoryException {
-            return new UUID(digest).toString();
+            return new UUID(digest);
-     */ 
+     */
