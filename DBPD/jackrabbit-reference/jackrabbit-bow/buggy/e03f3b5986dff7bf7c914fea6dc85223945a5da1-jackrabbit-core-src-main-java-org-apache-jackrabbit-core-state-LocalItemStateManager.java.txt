Revert: JCR-2699: Improve read/write concurrency  It's better to allow the occasional cache overwrite than to block concurrent threads. The locking in SessionState and SISM already prevent concurrent read/write operations that could possibly lead to inconsistencies.

=> the log warnings "overwriting cached entry" do indicate that, at any given time, 
there might be multiple ItemState instances in the 'shared' layer representing the same 
item. there's a risk of data loss/inconsistency since all but one instance are stale copies.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1036117 13f79535-47bb-0310-9956-ffa450edef68

-        // check cache
-        state = cache.retrieve(id);
-        if (state == null) {
-            // regular behaviour
-            if (id.denotesNode()) {
-                state = getNodeState((NodeId) id);
-            } else {
-                state = getPropertyState((PropertyId) id);
+        // check cache. synchronized to ensure an entry is not created twice.
+        synchronized (this) {
+            state = cache.retrieve(id);
+            if (state == null) {
+                // regular behaviour
+                if (id.denotesNode()) {
+                    state = getNodeState((NodeId) id);
+                } else {
+                    state = getPropertyState((PropertyId) id);
+                }
+            return state;
-        return state;
