Implemented support for value comparison and general comparison using multi valued properties.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@126294 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.NoPrefixDeclaredException;
-            QName identifier = ((ASTIdentifier) node.children[0]).getName();
+            final QName[] tmp = new QName[1];
+            node.childrenAccept(new DefaultParserVisitor() {
+                public Object visit(ASTIdentifier node, Object data) {
+                    // only assign first identifier
+                    tmp[0] = (tmp[0] == null) ? node.getName() : tmp[0];
+                    return data;
+                }
+            }, data);
+            QName identifier = tmp[0];
+
-                        identifier, Constants.OPERATION_GE, (ASTLiteral) node.children[1]);
+                        identifier, Constants.OPERATION_GE_VALUE, (ASTLiteral) node.children[1]);
-                        identifier, Constants.OPERATION_LE, (ASTLiteral) node.children[2]);
+                        identifier, Constants.OPERATION_LE_VALUE, (ASTLiteral) node.children[2]);
-            } else if (type == Constants.OPERATION_EQ) {
+            } else if (type == Constants.OPERATION_EQ_VALUE) {
-            } else if (type == Constants.OPERATION_GE
-                    || type == Constants.OPERATION_GT
-                    || type == Constants.OPERATION_LE
-                    || type == Constants.OPERATION_LT
-                    || type == Constants.OPERATION_NE) {
+            } else if (type == Constants.OPERATION_GE_VALUE
+                    || type == Constants.OPERATION_GT_VALUE
+                    || type == Constants.OPERATION_LE_VALUE
+                    || type == Constants.OPERATION_LT_VALUE
+                    || type == Constants.OPERATION_NE_VALUE) {
+            } else if (type == Constants.OPERATION_EQ_GENERAL
+                    || type == Constants.OPERATION_NE_GENERAL) {
+                predicateNode = createRelationQueryNode(parent,
+                        identifier, type, (ASTLiteral) node.children[0]);
-                            identifier, Constants.OPERATION_EQ, (ASTLiteral) node.children[i]);
+                            identifier, Constants.OPERATION_EQ_VALUE, (ASTLiteral) node.children[i]);
