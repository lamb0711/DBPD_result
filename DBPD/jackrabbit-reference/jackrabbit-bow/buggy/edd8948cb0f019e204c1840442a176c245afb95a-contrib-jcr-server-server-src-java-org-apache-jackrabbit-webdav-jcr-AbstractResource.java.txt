JCR-249, JCR-253

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@331281 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.server.io.IOUtil;
+import org.apache.jackrabbit.webdav.io.OutputContext;
+import java.io.OutputStream;
+import java.io.IOException;
-    private long modificationTime = DavResource.UNDEFINED_MODIFICATIONTIME;
+    private long modificationTime = new Date().getTime();
-     * Returns the path of the underlaying repository item or the item to
+     * Returns the path of the underlying repository item or the item to
-     * @return path of the underlaying repository item.
+     * @return path of the underlying repository item.
-     * @see org.apache.jackrabbit.webdav.DavResource#getStream()
-    public InputStream getStream() {
+    InputStream getStream() {
+     * @see DavResource#spool(OutputContext)
+     */
+    public void spool(OutputContext outputContext) throws IOException {
+        if (!initedProps) {
+            initProperties();
+        }
+
+        // export properties
+        outputContext.setModificationTime(getModificationTime());
+        DavProperty etag = getProperty(DavPropertyName.GETETAG);
+        if (etag != null) {
+            outputContext.setETag(String.valueOf(etag.getValue()));
+        }
+        DavProperty contentType = getProperty(DavPropertyName.GETCONTENTTYPE);
+        if (contentType != null) {
+            outputContext.setContentType(String.valueOf(contentType.getValue()));
+        }
+        DavProperty contentLength = getProperty(DavPropertyName.GETCONTENTLENGTH);
+        if (contentLength != null) {
+            try {
+                long length = Long.parseLong(contentLength.getValue() + "");
+                if (length > 0) {
+                    outputContext.setContentLength(length);
+                }
+            } catch (NumberFormatException e) {
+                log.error("Could not build content length from property value '" + contentLength.getValue() + "'");
+            }
+        }
+        DavProperty contentLanguage = getProperty(DavPropertyName.GETCONTENTLANGUAGE);
+        if (contentLanguage != null) {
+            outputContext.setContentLanguage(contentLanguage.getValue().toString());
+        }
+
+        // spool content
+        InputStream in = getStream();
+        OutputStream out = outputContext.getOutputStream();
+        if (in != null && out != null) {
+            try {
+                IOUtil.spool(in, out);
+            } finally {
+                // also close stream if not sending content
+                try {
+                    in.close();
+                } catch (IOException e) {
+                    // ignore
+                }
+            }
+        }
+    }
+
+    /**
