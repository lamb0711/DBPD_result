JCR-1553 - ClusterNode not properly shutdown when repository has shutdown


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@708206 13f79535-47bb-0310-9956-ffa450edef68

+import EDU.oswego.cs.dl.util.concurrent.Latch;
+     * Default stop delay.
+     */
+    private static final long DEFAULT_STOP_DELAY = 5000;
+
+    /**
+     * Stop delay, in milliseconds.
+     */
+    private long stopDelay;
+
+    /**
+     * Synchronization thread.
+     */
+    private Thread syncThread;
+
+    /**
+     * Latch used to communicate a stop request to the synchronization thread.
+     */
+    private final Latch stopLatch = new Latch();
+
+    /**
+     * Set the stop delay, i.e. number of millseconds to wait for the
+     * synchronization thread to stop.
+     *
+     * @param stopDelay stop delay in milliseconds
+     */
+    public void setStopDelay(long stopDelay) {
+        this.stopDelay = stopDelay;
+    }
+
+    /**
+     * Return the stop delay.
+     *
+     * @return stop delay
+     * @see #setStopDelay(long)
+     */
+    public long getStopDelay() {
+        return stopDelay;
+    }
+
+    /**
+            syncThread = t;
-            synchronized (this) {
-                try {
-                    wait(syncDelay);
-                } catch (InterruptedException e) {}
-
-                if (status == STOPPED) {
-                    return;
+            try {
+                if (stopLatch.attempt(syncDelay)) {
+                    break;
+            } catch (InterruptedException e) {
+                String msg = "Interrupted while waiting for stop latch.";
+                log.warn(msg);
+            stopLatch.release();
+
+            // Give synchronization thread some time to finish properly before
+            // closing down the journal (see JCR-1553)
+            if (syncThread != null) {
+                try {
+                    syncThread.join(stopDelay);
+                } catch (InterruptedException e) {
+                    String msg = "Interrupted while joining synchronization thread.";
+                    log.warn(msg);
+                }
+            }
-            notifyAll();
