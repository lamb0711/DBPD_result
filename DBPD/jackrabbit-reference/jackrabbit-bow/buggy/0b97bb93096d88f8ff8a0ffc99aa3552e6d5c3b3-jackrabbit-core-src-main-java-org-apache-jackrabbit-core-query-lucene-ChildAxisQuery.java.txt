JCR-2087: Upgrade to Java 5 as the base platform

Some more Java 5 cleanups.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@794743 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Iterator;
-                        private List docIds = new ArrayList();
+                        private List<Integer> docIds = new ArrayList<Integer>();
-                                docIds.add(new Integer(doc));
+                                docIds.add(doc);
-                                    for (Iterator it = docIds.iterator(); it.hasNext(); ) {
-                                        calc[0].collectContextHit(((Integer) it.next()).intValue());
+                                    for (int docId : docIds) {
+                                        calc[0].collectContextHit(docId);
+                        List<ChildNodeEntry> childNodes = state.getChildNodeEntries();
-                            List childNodes = state.getChildNodeEntries();
-                                    || !((ChildNodeEntry) childNodes.get(childNodes.size() - 1))
-                                        .getId().equals(id)) {
+                                    || !(childNodes.get(childNodes.size() - 1)).getId().equals(id)) {
-                            List childNodes = state.getChildNodeEntries();
-                                    || !((ChildNodeEntry) childNodes.get(position - 1)).getId().equals(id)) {
+                                    || !(childNodes.get(position - 1)).getId().equals(id)) {
-                                List childNodes = state.getChildNodeEntries(name);
+                                List<ChildNodeEntry> childNodes = state.getChildNodeEntries(name);
-                                        || !((ChildNodeEntry) childNodes.get(childNodes.size() - 1))
-                                            .getId().equals(id)) {
+                                        || !(childNodes.get(childNodes.size() - 1)).getId().equals(id)) {
-            Map uuids = new HashMap();
+            Map<Integer, String> uuids = new HashMap<Integer, String>();
-                uuids.put(new Integer(i), uuid);
+                uuids.put(i, uuid);
-            for (Iterator it = uuids.values().iterator(); it.hasNext(); ) {
-                String uuid = (String) it.next();
+            for (String uuid : uuids.values()) {
-                    log.debug("got NodeState with id {} in {} ms.", id, new Long(time));
-                    Iterator entries;
+                    log.debug("got NodeState with id {} in {} ms.", id, time);
+                    List<ChildNodeEntry> entries;
-                        entries = state.getChildNodeEntries(nameTest).iterator();
+                        entries = state.getChildNodeEntries(nameTest);
-                        entries = state.getChildNodeEntries().iterator();
+                        entries = state.getChildNodeEntries();
-                    while (entries.hasNext()) {
-                        NodeId childId = ((ChildNodeEntry) entries.next()).getId();
+                    for (ChildNodeEntry entry : entries) {
+                        NodeId childId = entry.getId();
-        private final Set docIds = new HashSet();
+        private final Set<Integer> docIds = new HashSet<Integer>();
-            docIds.add(new Integer(doc));
+            docIds.add(doc);
-                    if (docIds.contains(new Integer(docs[0]))) {
+                    if (docIds.contains(docs[0])) {
-                        if (docIds.contains(new Integer(docs[i]))) {
+                        if (docIds.contains(docs[i])) {
-            log.debug("Filtered hits in {} ms.", new Long(time));
+            log.debug("Filtered hits in {} ms.", time);
