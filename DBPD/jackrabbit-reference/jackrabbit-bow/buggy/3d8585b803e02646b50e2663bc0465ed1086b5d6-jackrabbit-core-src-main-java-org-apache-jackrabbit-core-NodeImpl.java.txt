JCR-2272: Errors during concurrent session import of nodes with same UUIDs

Move node id generation into the createNew() method, and add a check for existing nodes when an existing node id is being used

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/branches/JCR-2272@1174016 13f79535-47bb-0310-9956-ffa450edef68

-        NodeState nodeState;
-        try {
-            if (id == null) {
-                id = sessionContext.getNodeIdFactory().newNodeId();
-            }
-            nodeState =
-                    stateMgr.createTransientNodeState(id, nodeType.getQName(),
-                            getNodeId(), ItemState.STATUS_NEW);
-        } catch (ItemStateException ise) {
-            String msg = "failed to add child node " + name + " to " + this;
-            log.debug(msg);
-            throw new RepositoryException(msg, ise);
-        }
+        NodeState nodeState = stateMgr.createTransientNodeState(
+                id, nodeType.getQName(), getNodeId(), ItemState.STATUS_NEW);
-    protected void makePersistent() throws InvalidItemStateException {
+    protected void makePersistent() throws RepositoryException {
-                localState = stateMgr.createNew(transientState);
+                localState = stateMgr.createNew(
+                        transientState.getNodeId(),
+                        transientState.getNodeTypeName(),
+                        transientState.getParentId());
+                transientState.connect(localState);
-                throw new InvalidItemStateException(e);
+                throw new RepositoryException(e);
-                try {
-                    thisState = stateMgr.createTransientNodeState(
-                            (NodeId) transientState.getId(),
-                            transientState.getNodeTypeName(),
-                            transientState.getParentId(),
-                            NodeState.STATUS_NEW);
-                    data.setState(thisState);
-                } catch (ItemStateException e) {
-                    throw new RepositoryException(e);
-                }
+                thisState = stateMgr.createTransientNodeState(
+                        (NodeId) transientState.getId(),
+                        transientState.getNodeTypeName(),
+                        transientState.getParentId(),
+                        NodeState.STATUS_NEW);
+                data.setState(thisState);
