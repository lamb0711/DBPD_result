JCR-1363: Migrate to Lucene 2.3

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@696653 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.lucene.index.SerialMergeScheduler;
+import org.apache.lucene.index.LogDocMergePolicy;
+     * Flag that indicates whether there was an index present in the directory
+     * when this AbstractIndex was created.
+     */
+    private boolean isExisting;
+
+    /**
+        this.isExisting = IndexReader.indexExists(directory);
-        if (!IndexReader.indexExists(directory)) {
+        if (!isExisting) {
+     * Returns <code>true</code> if this index was openend on a directory with
+     * an existing index in it; <code>false</code> otherwise.
+     *
+     * @return <code>true</code> if there was an index present when this index
+     *          was created; <code>false</code> otherwise.
+     */
+    boolean isExisting() {
+        return isExisting;
+    }
+
+    /**
-                readOnlyReader.incrementRefCount();
+                readOnlyReader.acquire();
-                    readOnlyReader.incrementRefCount();
+                    readOnlyReader.acquire();
-                    readOnlyReader.close();
+                    readOnlyReader.release();
-        readOnlyReader.incrementRefCount();
+        readOnlyReader.acquire();
+            indexWriter.setRAMBufferSizeMB(IndexWriter.DISABLE_AUTO_FLUSH);
+            indexWriter.setMergeScheduler(new SerialMergeScheduler());
+            indexWriter.setMergePolicy(new LogDocMergePolicy());
-            indexReader.commitDeleted();
+            indexReader.flush();
+        releaseWriterAndReaders();
+        if (directory != null) {
+            try {
+                directory.close();
+            } catch (IOException e) {
+                directory = null;
+            }
+        }
+    }
+
+    /**
+     * Releases all potentially held index writer and readers.
+     */
+    protected void releaseWriterAndReaders() {
-                readOnlyReader.close();
+                readOnlyReader.release();
+            readOnlyReader = null;
-                sharedReader.close();
+                sharedReader.release();
-        }
-        if (directory != null) {
-            try {
-                directory.close();
-            } catch (IOException e) {
-                directory = null;
-            }
+            sharedReader = null;
-            readOnlyReader.close();
+            readOnlyReader.release();
-            sharedReader.close();
+            sharedReader.release();
