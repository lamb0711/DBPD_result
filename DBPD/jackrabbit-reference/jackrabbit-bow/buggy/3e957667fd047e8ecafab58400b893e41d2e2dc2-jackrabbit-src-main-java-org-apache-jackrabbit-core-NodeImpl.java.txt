Make versioning transactional
- Added specialized XAVersion and XAVersionHistory objects that refresh their internal state when needed
- Defined new observation interface in order to have VersionManagerImpl use standard event dispatching
  instead of writing its own
- Added test cases verifying isolation of versioning operations in transactions


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368026 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.version.InternalVersion;
-import org.apache.jackrabbit.core.version.VersionHistoryImpl;
-import org.apache.jackrabbit.core.version.VersionImpl;
+import org.apache.jackrabbit.core.version.AbstractVersion;
-                InternalFrozenNode fn = ((VersionImpl) version).getFrozenNode();
+                InternalFrozenNode fn = ((AbstractVersion) version).getFrozenNode();
-                node = addNode(relPath, ((VersionImpl) version).getFrozenNode());
+                node = addNode(relPath, ((AbstractVersion) version).getFrozenNode());
-        InternalVersion v = ((VersionImpl) getBaseVersion()).getInternalVersion();
-        InternalVersion vp = ((VersionImpl) srcNode.getBaseVersion()).getInternalVersion();
+        AbstractVersion v = (AbstractVersion) getBaseVersion();
+        AbstractVersion vp = (AbstractVersion) srcNode.getBaseVersion();
-        } else if (v.equals(vp) || v.isMoreRecent(vp)) {
+        } else if (v.isSame(vp) || v.isMoreRecent(vp)) {
-            internalRestore(((VersionImpl) version).getInternalVersion(), vsel, removeExisting);
+            internalRestore((AbstractVersion) version, vsel, removeExisting);
-    protected InternalVersion[] internalRestore(InternalVersion version, VersionSelector vsel,
-                                                boolean removeExisting)
+    protected Version[] internalRestore(AbstractVersion version, VersionSelector vsel,
+                                        boolean removeExisting)
-        internalSetProperty(QName.JCR_BASEVERSION, InternalValue.create(new UUID(version.getId())));
+        UUID uuid = new UUID(((NodeId) version.getId()).getUUID());
+        internalSetProperty(QName.JCR_BASEVERSION, InternalValue.create(uuid));
-        return (InternalVersion[]) restored.toArray(new InternalVersion[restored.size()]);
+        return (Version[]) restored.toArray(new Version[restored.size()]);
-                VersionHistoryImpl history = (VersionHistoryImpl) session.getNodeByUUID(f.getVersionHistoryId());
+                VersionHistory history = (VersionHistory) session.getNodeByUUID(f.getVersionHistoryId());
-                    InternalVersion v = ((VersionImpl) vsel.select(history)).getInternalVersion();
+                    AbstractVersion v = (AbstractVersion) vsel.select(history);
