JCR-3440: Add a special case for cluster startup. This prevents the cluster node taking the global cluster lock on all syncs

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1405767 13f79535-47bb-0310-9956-ffa450edef68

+    
-    public void sync() throws JournalException {
+    public void sync(boolean startup) throws JournalException {
-                    internalSync();
+                    internalSync(startup);
-                internalSync();
+                internalSync(startup);
+            // startup sync already done, don't do it again
+            startup = false;
-    private void internalSync() throws JournalException {
+    private void internalSync(boolean startup) throws JournalException {
-            doSync(getMinimalRevision());
+            doSync(getMinimalRevision(), startup);
+
+    protected void doSync(long startRevision, boolean startup) throws JournalException {
+        // by default ignore startup parameter for backwards compatibility
+        // only needed for persistence backend that need special treatment on startup.
+        doSync(startRevision);
+    }
+    
+     * 
-                        try {
-                            consumer.consume(record);
-                        } catch (IllegalStateException e) {
-                            log.error("Could not synchronize to revision: " + record.getRevision() + " due illegal state of RecordConsumer.");
-                            return;
-                        }
+                        consumer.consume(record);
+        } catch (IllegalStateException e) {
+            log.error("Could not synchronize to revision: " + (stopRevision + 1) + " due illegal state of RecordConsumer.");
-            log.info("Synchronized to revision: " + stopRevision);
+            log.info("Synchronized from revision " + startRevision + " to revision: " + stopRevision);
