- adapted versioning again to spec 0.15
- added VirtualItemStateManager for reflecting virtual content


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@55615 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.virtual.VirtualItemStateProvider;
+    private VirtualItemStateProvider[] virtualProviders = new VirtualItemStateProvider[0];
+    /**
+     * Adds a new virtual item state provider
+     * @param prov
+     */
+    public synchronized void addVirtualItemStateProvider(VirtualItemStateProvider prov) {
+        VirtualItemStateProvider[] provs = new VirtualItemStateProvider[virtualProviders.length+1];
+        System.arraycopy(virtualProviders, 0, provs, 0, virtualProviders.length);
+        provs[virtualProviders.length] = prov;
+        virtualProviders = provs;
+    }
+
+        // check if there is a virtual state for the specified item
+        for (int i=0; i<virtualProviders.length; i++) {
+            if (virtualProviders[i].hasItemState(id)) {
+                return virtualProviders[i].getItemState(id);
+            }
+        }
+
-        try {
-            // check if there's transient state for the specified item
+
+        // check if there's transient state for the specified item
+        if (transientStateMgr.hasItemState(id)) {
-        } catch (NoSuchItemStateException nsise) {
-            // check if there's persistent state for the specified item
+        }
+
+        // check if there's persistent state for the specified item
+        if (persistentStateMgr.hasItemState(id)) {
+
+        throw new NoSuchItemStateException(id.toString());
-        try {
-            getItemState(id);
-            return true;
-        } catch (ItemStateException ise) {
-            return false;
+        return transientStateMgr.hasItemStateInAttic(id)
+                || transientStateMgr.hasItemState(id)
+                || persistentStateMgr.hasItemState(id)
+                || hasVirtualItemState(id);
+    }
+
+    /**
+     * Checks if there is a virtual item state
+     * @param id
+     * @return
+     */
+    private boolean hasVirtualItemState(ItemId id) {
+        for (int i=0; i<virtualProviders.length; i++) {
+            if (virtualProviders[i].hasItemState(id)) {
+                return true;
+            }
+        return false;
-        try {
-            getItemStateInAttic(id);
-            return true;
-        } catch (ItemStateException ise) {
-            return false;
-        }
+        return transientStateMgr.hasItemStateInAttic(id);
