JCR-2503: inconsistent session and persistent state after ReferentialIntegrityException

Patch by Stephan Huttenhuis

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@944258 13f79535-47bb-0310-9956-ffa450edef68

-        NodeState thisState = (NodeState) getOrCreateTransientItemState();
-        if (transientState.getStatus() == ItemState.STATUS_NEW
-                && thisState.getStatus() != ItemState.STATUS_NEW) {
-            thisState.setStatus(ItemState.STATUS_NEW);
-            stateMgr.disconnectTransientItemState(thisState);
+        NodeState thisState = null;
+
+        if (!isTransient()) {
+            thisState = (NodeState) getOrCreateTransientItemState();
+            if (transientState.getStatus() == ItemState.STATUS_NEW
+                    && thisState.getStatus() != ItemState.STATUS_NEW) {
+                thisState.setStatus(ItemState.STATUS_NEW);
+                stateMgr.disconnectTransientItemState(thisState);
+            }
+            thisState.setParentId(transientState.getParentId());
+            thisState.setNodeTypeName(transientState.getNodeTypeName());
+        } else {
+            // JCR-2503: Re-create transient state in the state manager,
+            // because it was removed
+            synchronized (data) {
+                try {
+                    thisState = stateMgr.createTransientNodeState(
+                            (NodeId) transientState.getId(),
+                            transientState.getNodeTypeName(),
+                            transientState.getParentId(),
+                            NodeState.STATUS_NEW);
+                    data.setState(thisState);
+                } catch (ItemStateException e) {
+                    throw new RepositoryException(e);
+                }
+            }
+
-        thisState.setParentId(transientState.getParentId());
-        thisState.setNodeTypeName(transientState.getNodeTypeName());
