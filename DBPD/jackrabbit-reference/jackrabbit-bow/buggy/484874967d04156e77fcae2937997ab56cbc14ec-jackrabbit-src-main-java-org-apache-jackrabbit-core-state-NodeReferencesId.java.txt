JCR-329: NodeReferencesId.equals() is not symmetric
plus some cleanups/consolidations (mostly cosmetical) of recent changes

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@382075 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.Serializable;
+
-public class NodeReferencesId extends NodeId {
+public class NodeReferencesId implements Serializable {
+
+    /** Serialization UID of this class. */
+    static final long serialVersionUID = -3819311769214730025L;
-     * Create a new instance of this class. Takes a UUID as parameter.
+     * The id of the target node.
+     */
+    private final NodeId targetId;
+
+    /**
+     * Creates a new instance of this class. Takes a UUID as parameter.
+     * @throws IllegalArgumentException if <code>uuid</code> is <code>null</code>.
-        super(uuid);
+        targetId = new NodeId(uuid);
-     * Create a new instance of this class. Takes a id as parameter.
+     * Creates a new instance of this class. Takes an id as parameter.
+     * @throws IllegalArgumentException if <code>id</code> is <code>null</code>.
-        super(id == null ? null : id.getUUID());
+        if (id == null) {
+            throw new IllegalArgumentException("id must not be null");
+        }
+        targetId = id;
+    }
+
+    /**
+     * Returns the id of the target node.
+     *
+     * @return the id of the target node.
+     */
+    public NodeId getTargetId() {
+        return targetId;
-    public static NodeId valueOf(String s) throws IllegalArgumentException {
+    public static NodeReferencesId valueOf(String s) throws IllegalArgumentException {
+    /**
+     * Returns the same as <code>this.getTargetId().toString()</code>.
+     *
+     * @return the same as <code>this.getTargetId().toString()</code>.
+     */
+    public String toString() {
+        return targetId.toString();
+    }
+
+    /**
+     * Returns the same as <code>this.getTargetId().hashCode()</code>.
+     *
+     * @return the same as <code>this.getTargetId().hashCode()</code>.
+     */
+    public int hashCode() {
+        return targetId.hashCode();
+    }
+
+    /**
+     * @inheritDoc
+     */
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if (obj instanceof NodeReferencesId) {
+            return targetId.getUUID().equals(((NodeReferencesId) obj).targetId.getUUID());
+        }
+        return false;
+    }
