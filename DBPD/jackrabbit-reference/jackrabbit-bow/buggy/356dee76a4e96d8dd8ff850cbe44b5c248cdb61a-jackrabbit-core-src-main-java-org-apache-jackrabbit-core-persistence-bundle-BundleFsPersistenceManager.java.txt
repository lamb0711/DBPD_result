JCR-1233: Create org.apache.jackrabbit.core.id

Move the Id classes to org.apache.jackrabbit.core.id and update all references accordingly (simple changes to import statements).

While at it, I also replaced the NodeIdIterator class with the equivalent Java 5 Iterator<NodeId> and Iterable<NodeId> constructs.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@792437 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.NodeId;
-import org.apache.jackrabbit.core.NodeIdIterator;
-import org.apache.jackrabbit.core.PropertyId;
+import org.apache.jackrabbit.core.id.NodeId;
+import org.apache.jackrabbit.core.id.PropertyId;
-import org.apache.jackrabbit.core.state.NodeReferencesId;
+import org.apache.jackrabbit.core.id.NodeReferencesId;
-import java.util.NoSuchElementException;
-    public NodeIdIterator getAllNodeIds(NodeId bigger, int maxCount)
+    public Iterable<NodeId> getAllNodeIds(NodeId bigger, int maxCount)
-            return new FileNodeIdIterator(list);
+            return list;
-    /**
-     * Iterator over all node ids in this persistence manager.
-     */
-    private static class FileNodeIdIterator implements NodeIdIterator {
-
-        private final ArrayList<NodeId> list;
-        private int pos;
-
-        FileNodeIdIterator(ArrayList<NodeId> list) {
-            this.list = list;
-        }
-
-        public NodeId nextNodeId() throws NoSuchElementException {
-            if (pos < list.size()) {
-                return (NodeId) list.get(pos++);
-            }
-            throw new NoSuchElementException();
-        }
-
-        public boolean hasNext() {
-            return pos < list.size();
-        }
-
-        public Object next() {
-            return nextNodeId();
-        }
-
-        public void remove() {
-            throw new UnsupportedOperationException();
-        }
-
-    }
-
