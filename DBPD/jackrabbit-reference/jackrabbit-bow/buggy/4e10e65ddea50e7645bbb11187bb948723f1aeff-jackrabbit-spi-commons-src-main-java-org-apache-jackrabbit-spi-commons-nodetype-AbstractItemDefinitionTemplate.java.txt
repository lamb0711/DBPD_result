JCR-2192: Handling of expanded-form jcr names by node type *Template classes

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@797410 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.spi.commons.conversion.NamePathResolver;
+import org.apache.jackrabbit.spi.commons.name.NameConstants;
+import org.apache.jackrabbit.spi.Name;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+import javax.jcr.nodetype.ConstraintViolationException;
+import javax.jcr.RepositoryException;
+import javax.jcr.NamespaceException;
+import javax.jcr.version.OnParentVersionAction;
-    private String name;
+    private static final Logger log = LoggerFactory.getLogger(AbstractItemDefinitionTemplate.class);
+
+    private Name name;
-    private int opv;
+    private int opv = OnParentVersionAction.COPY;
+    protected final NamePathResolver resolver;
+
+     *
+     * @param resolver
-    AbstractItemDefinitionTemplate() {
+    AbstractItemDefinitionTemplate(NamePathResolver resolver) {
+        this.resolver = resolver;
+     * @param resolver
+     * @throws javax.jcr.nodetype.ConstraintViolationException
-    AbstractItemDefinitionTemplate(ItemDefinition def) {
-        name = def.getName();
+    AbstractItemDefinitionTemplate(ItemDefinition def, NamePathResolver resolver) throws ConstraintViolationException {
+        this.resolver = resolver;
+
+        if (def instanceof ItemDefinitionImpl) {
+            name = ((ItemDefinitionImpl) def).itemDef.getName();
+        } else {
+            setName(def.getName());
+        }
+     * @throws ConstraintViolationException
-    public void setName(String name) {
-        this.name = name;
+    public void setName(String name) throws ConstraintViolationException {
+        if (ItemDefinitionImpl.ANY_NAME.equals(name)) {
+            // handle the * special case that isn't a valid JCR name but a valid
+            // name for a ItemDefinition (residual).
+            this.name = NameConstants.ANY_NAME;
+        } else {
+            try {
+                this.name = resolver.getQName(name);
+            } catch (RepositoryException e) {
+                throw new ConstraintViolationException(e);
+            }
+        }
+     * @throws IllegalArgumentException If the given <code>opv</code> flag isn't valid.
+        // validate the given opv-action
+        OnParentVersionAction.nameFromValue(opv);
-        return name;
+        if (name == null) {
+            return null;
+        } else {
+            try {
+                return resolver.getJCRName(name);
+            } catch (NamespaceException e) {
+                // should never get here
+                log.error("encountered unregistered namespace in item definition name", e);
+                return name.toString();
+            }
+        }
-
