Add LoginModule configuration in repository.xml. This allows the use of Jackrabbit in environments where JAAS is not set up.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@162072 13f79535-47bb-0310-9956-ffa450edef68

+import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStream;
+import java.io.OutputStreamWriter;
+import java.security.AccessControlContext;
+import java.security.AccessController;
+import java.util.Arrays;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.Properties;
+
+import javax.jcr.AccessDeniedException;
+import javax.jcr.Credentials;
+import javax.jcr.LoginException;
+import javax.jcr.NamespaceRegistry;
+import javax.jcr.NoSuchWorkspaceException;
+import javax.jcr.Repository;
+import javax.jcr.RepositoryException;
+import javax.jcr.Session;
+import javax.jcr.observation.Event;
+import javax.jcr.observation.EventIterator;
+import javax.jcr.observation.EventListener;
+import javax.security.auth.Subject;
+
+import org.apache.jackrabbit.core.config.LoginModuleConfig;
-import org.apache.jackrabbit.core.security.CredentialsCallbackHandler;
+import org.apache.jackrabbit.core.security.AuthContext;
-import javax.jcr.AccessDeniedException;
-import javax.jcr.Credentials;
-import javax.jcr.LoginException;
-import javax.jcr.NamespaceRegistry;
-import javax.jcr.NoSuchWorkspaceException;
-import javax.jcr.Repository;
-import javax.jcr.RepositoryException;
-import javax.jcr.Session;
-import javax.jcr.observation.Event;
-import javax.jcr.observation.EventIterator;
-import javax.jcr.observation.EventListener;
-import javax.security.auth.Subject;
-import javax.security.auth.login.LoginContext;
-import java.io.File;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.io.OutputStream;
-import java.io.OutputStreamWriter;
-import java.security.AccessControlContext;
-import java.security.AccessController;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.Iterator;
-import java.util.Properties;
-
-    SessionImpl createSession(LoginContext loginContext,
+    SessionImpl createSession(AuthContext loginContext,
-        // login through JAAS login context
-        CredentialsCallbackHandler cbHandler =
-                new CredentialsCallbackHandler(credentials);
-        LoginContext lc;
+        // login either using JAAS or our own LoginModule
+        AuthContext authCtx;
-            lc = new LoginContext(repConfig.getAppName(), cbHandler);
-            lc.login();
+            LoginModuleConfig lmc = this.repConfig.getLoginModuleConfig();
+            if (lmc == null) {
+                authCtx = new AuthContext.JAAS(repConfig.getAppName(), credentials);
+            } else {
+                authCtx = new AuthContext.Local(lmc, credentials);
+            }
+            authCtx.login();
-            return createSession(lc, workspaceName);
+            return createSession(authCtx, workspaceName);
-    protected SessionImpl createSessionInstance(LoginContext loginContext,
+    protected SessionImpl createSessionInstance(AuthContext loginContext,
