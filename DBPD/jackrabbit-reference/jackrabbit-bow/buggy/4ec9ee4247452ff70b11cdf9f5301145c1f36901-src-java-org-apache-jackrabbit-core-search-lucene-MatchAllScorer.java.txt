- removed @author and @version (i.e. $Revision & $Id) tags
- removed tab characters from java source code

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47648 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.lucene.index.TermEnum;
-import org.apache.lucene.search.Scorer;
-import org.apache.lucene.search.Weight;
-import org.apache.lucene.search.Explanation;
-import org.apache.lucene.search.Similarity;
-import org.apache.lucene.search.HitCollector;
+import org.apache.lucene.index.TermEnum;
+import org.apache.lucene.search.*;
- *
- * @author Marcel Reutegger
- * @version $Revision: 1.2 $, $Date: 2004/06/15 13:52:13 $
-    /** current doc number */
+    /**
+     * current doc number
+     */
-    /** IndexReader giving access to index */
+    /**
+     * IndexReader giving access to index
+     */
-    /** Weight associated with this Scorer */
+    /**
+     * Weight associated with this Scorer
+     */
-    /** The field to match */
+    /**
+     * The field to match
+     */
-    /** BitSet filtering documents without content is specified field */
+    /**
+     * BitSet filtering documents without content is specified field
+     */
-    /** Explanation object. the same for all docs */
+    /**
+     * Explanation object. the same for all docs
+     */
-     * @param field the field name to match.
+     * @param field  the field name to match.
-     *   e.g. while reading from the search index.
+     *                     e.g. while reading from the search index.
-	    throws IOException {
+            throws IOException {
-            = new Explanation(Similarity.getDefault().idf(reader.maxDoc(),
-                    reader.maxDoc()),
-                    "matchAll");
+                = new Explanation(Similarity.getDefault().idf(reader.maxDoc(),
+                        reader.maxDoc()),
+                        "matchAll");
-     * @param hc the <code>HitCollector</code> from the underlying
-     *   lucene query.
+     * @param hc     the <code>HitCollector</code> from the underlying
+     *               lucene query.
-		// check docFilter
-		if (docFilter.get(docNo)) {
-		    hc.collect(docNo, score);
-		}
+                // check docFilter
+                if (docFilter.get(docNo)) {
+                    hc.collect(docNo, score);
+                }
-     *    the search index.
+     *                     the search index.
-	// we match all terms
-	TermEnum terms = null;
-	try {
-	    terms = reader.terms(new Term(field, ""));
-	    while (terms.term() != null && terms.term().field() == field) {
-		TermDocs termDocs = null;
-		try {
-		    termDocs = reader.termDocs(terms.term());
-		    while (termDocs.next()) {
-			docFilter.set(termDocs.doc());
-		    }
-		} finally {
-		    if (termDocs != null) {
-			termDocs.close();
-		    }
-		}
-		terms.next();
-	    }
-	} finally {
-	    if (terms != null) {
-		terms.close();
-	    }
-	}
+        // we match all terms
+        TermEnum terms = null;
+        try {
+            terms = reader.terms(new Term(field, ""));
+            while (terms.term() != null && terms.term().field() == field) {
+                TermDocs termDocs = null;
+                try {
+                    termDocs = reader.termDocs(terms.term());
+                    while (termDocs.next()) {
+                        docFilter.set(termDocs.doc());
+                    }
+                } finally {
+                    if (termDocs != null) {
+                        termDocs.close();
+                    }
+                }
+                terms.next();
+            }
+        } finally {
+            if (terms != null) {
+                terms.close();
+            }
+        }
