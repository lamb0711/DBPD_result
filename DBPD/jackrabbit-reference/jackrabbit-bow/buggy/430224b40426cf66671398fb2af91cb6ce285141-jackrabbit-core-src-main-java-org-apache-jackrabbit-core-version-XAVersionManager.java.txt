JCR-2058 JSR 283: VersionManager and new versioning methods
- added jcr:copiedFrom property to version history


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@778802 13f79535-47bb-0310-9956-ffa450edef68

-    private Map xaItems;
+    private Map<NodeId, InternalVersionItem> xaItems;
+     *
+     * @param vMgr the underlying version manager
+     * @param ntReg node type registry
+     * @param session the session
+     * @param cacheFactory cache factory
+     * @throws RepositoryException if a an error occurs
-    protected VersionHistoryInfo createVersionHistory(Session session, NodeState node)
+    protected VersionHistoryInfo createVersionHistory(Session session,
+                                                      NodeState node,
+                                                      NodeId copiedFrom)
-            NodeStateEx state = createVersionHistory(node);
+            NodeStateEx state = createVersionHistory(node, copiedFrom);
-        return vMgr.createVersionHistory(session, node);
+        return vMgr.createVersionHistory(session, node, copiedFrom);
-            item = (InternalVersionItem) xaItems.get(id);
+            item = xaItems.get(id);
-            for (int i = 0; i < vs.length; i++) {
-                xaItems.put(vs[i].getId(), vs[i]);
+            for (InternalVersion v1 : vs) {
+                xaItems.put(v1.getId(), v1);
-            for (int i = 0; i < vs.length; i++) {
-                xaItems.put(vs[i].getId(), vs[i]);
+            for (InternalVersion v1 : vs) {
+                xaItems.put(v1.getId(), v1);
+    @SuppressWarnings("unchecked")
-        Map xaItems = null;
+        Map<NodeId, InternalVersionItem> xaItems = null;
-            xaItems = (Map) tx.getAttribute(ITEMS_ATTRIBUTE_NAME);
+            xaItems = (Map<NodeId, InternalVersionItem>) tx.getAttribute(ITEMS_ATTRIBUTE_NAME);
-                xaItems = new HashMap();
+                xaItems = new HashMap<NodeId, InternalVersionItem>();
+     * @return <code>true</code> if the version manager is in a transaction
+     * @param history source
+     * @return the new copy
+     * @throws RepositoryException if an error occurs
+     * @param item the item to check
+     * @return <code>true</code> if in a different env
