JCR-2933: SQL2 Left Outer Join

Patch by Alex Parvulescu

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1092683 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.query.qom.Or;
+import javax.jcr.query.qom.Join;
-    private final List<Constraint> leftConstraints = new ArrayList<Constraint>();
+    private final Join source;
-    private final List<Constraint> rightConstraints = new ArrayList<Constraint>();
+    private final List<Constraint> leftConstraints;
+
+    private final List<Constraint> rightConstraints;
-    private final List<ConstraintSplitInfo> innerConstraints = new ArrayList<ConstraintSplitInfo>();
+    private ConstraintSplitInfo leftInnerConstraints = null;
-    public ConstraintSplitInfo(QueryObjectModelFactory factory) {
-        this.factory = factory;
-        this.isMultiple = false;
+    private ConstraintSplitInfo rightInnerConstraints = null;
+
+    public ConstraintSplitInfo(QueryObjectModelFactory factory, Join source) {
+        this(factory, source, new ArrayList<Constraint>(),
+                new ArrayList<Constraint>());
-    private ConstraintSplitInfo(QueryObjectModelFactory factory,
+    private ConstraintSplitInfo(QueryObjectModelFactory factory, Join source,
+        this.source = source;
-        this.leftConstraints.addAll(leftConstraints);
-        this.rightConstraints.addAll(rightConstraints);
+        this.leftConstraints = leftConstraints;
+        this.rightConstraints = rightConstraints;
-            for (ConstraintSplitInfo csi : innerConstraints) {
-                csi.addLeftConstraint(c);
-            }
+            leftInnerConstraints.addLeftConstraint(c);
+            leftInnerConstraints.addRightConstraint(c);
-            for (ConstraintSplitInfo csi : innerConstraints) {
-                csi.addRightConstraint(c);
-            }
+            rightInnerConstraints.addLeftConstraint(c);
+            rightInnerConstraints.addRightConstraint(c);
-    public void split(Or or) {
+    public void splitOr() {
+
-            for (ConstraintSplitInfo csi : innerConstraints) {
-                csi.split(or);
-            }
+            // this should never happen
+        ConstraintSplitInfo csi1 = new ConstraintSplitInfo(factory, source,
+                new ArrayList<Constraint>(leftConstraints),
+                new ArrayList<Constraint>(rightConstraints));
+        this.leftInnerConstraints = csi1;
-        ConstraintSplitInfo csi1 = new ConstraintSplitInfo(factory,
-                leftConstraints, rightConstraints);
-        csi1.addLeftConstraint(or.getConstraint1());
-        this.innerConstraints.add(csi1);
+        ConstraintSplitInfo csi2 = new ConstraintSplitInfo(factory, source,
+                new ArrayList<Constraint>(leftConstraints),
+                new ArrayList<Constraint>(rightConstraints));
+        this.rightInnerConstraints = csi2;
-        ConstraintSplitInfo csi2 = new ConstraintSplitInfo(factory,
-                leftConstraints, rightConstraints);
-        csi2.addLeftConstraint(or.getConstraint2());
-        this.innerConstraints.add(csi2);
-
-        // would null be better?
-    public List<ConstraintSplitInfo> getInnerConstraints() {
-        return innerConstraints;
+    public ConstraintSplitInfo getLeftInnerConstraints() {
+        return leftInnerConstraints;
+    }
+
+    public ConstraintSplitInfo getRightInnerConstraints() {
+        return rightInnerConstraints;
+    }
+
+    public Join getSource() {
+        return source;
+
+    @Override
+    public String toString() {
+        if (isMultiple) {
+            return "ConstraintSplitInfo [multiple=" + ", leftInnerConstraints="
+                    + leftInnerConstraints + ", rightInnerConstraints="
+                    + rightInnerConstraints + "]";
+        }
+        return "ConstraintSplitInfo [single" + ", leftConstraints="
+                + leftConstraints + ", rightConstraints=" + rightConstraints
+                + "]";
+    }
+
