porting jackrabbit to v0.16.2 of jsr170 spec 
(work in progress...)

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@148894 13f79535-47bb-0310-9956-ffa450edef68

-    private static final String SPEC_VERSION = "0.15";
+    private static final String SPEC_VERSION = "0.16.2";
-    private static final String REP_VERSION = "0.15";
+    private static final String REP_VERSION = "0.16.2";
-     * Returns the names of all workspaces of this repository.
+     * Returns the names of <i>all</i> workspaces in this repository.
-     * @return the names of all workspaces of this repository.
-     * @see SessionImpl#getWorkspaceNames
+     * @return the names of all workspaces in this repository.
+     * @see javax.jcr.Workspace#getAccessibleWorkspaceNames()
-                repProps.setProperty(SPEC_VERSION_PROPERTY, SPEC_VERSION);
-                repProps.setProperty(SPEC_NAME_PROPERTY, SPEC_NAME);
-                repProps.setProperty(REP_VENDOR_PROPERTY, REP_VENDOR);
-                repProps.setProperty(REP_VENDOR_URL_PROPERTY, REP_VENDOR_URL);
-                repProps.setProperty(REP_NAME_PROPERTY, REP_NAME);
-                repProps.setProperty(REP_VERSION_PROPERTY, REP_VERSION);
+                repProps.setProperty(SPEC_VERSION_DESC, SPEC_VERSION);
+                repProps.setProperty(SPEC_NAME_DESC, SPEC_NAME);
+                repProps.setProperty(REP_VENDOR_DESC, REP_VENDOR);
+                repProps.setProperty(REP_VENDOR_URL_DESC, REP_VENDOR_URL);
+                repProps.setProperty(REP_NAME_DESC, REP_NAME);
+                repProps.setProperty(REP_VERSION_DESC, REP_VERSION);
+
+                // @todo check repository descriptor values with current state of implementation
+                repProps.setProperty(LEVEL_1_SUPPORTED, "true");
+                repProps.setProperty(LEVEL_2_SUPPORTED, "true");
+                repProps.setProperty(OPTION_TRANSACTIONS_SUPPORTED, "true");
+                repProps.setProperty(OPTION_VERSIONING_SUPPORTED, "true");
+                repProps.setProperty(OPTION_OBSERVATION_SUPPORTED, "true");
+                repProps.setProperty(OPTION_LOCKING_SUPPORTED, "true");
+                repProps.setProperty(OPTION_QUERY_SQL_SUPPORTED, "true");
+                repProps.setProperty(QUERY_XPATH_POS_INDEX, "true");
+                repProps.setProperty(QUERY_XPATH_DOC_ORDER, "true");
+                repProps.setProperty(QUERY_JCRPATH, "true");
+                repProps.setProperty(QUERY_JCRSCORE, "true");
-     * @return
-     */
-    public Properties getProperties() {
-        // check state
-        if (disposed) {
-            throw new IllegalStateException("repository instance has been shut down");
-        }
-
-        return (Properties) repProps.clone();
-    }
-
-    /**
-     * @param key
-     * @return
-     */
-    public String getProperty(String key) {
-        // check state
-        if (disposed) {
-            throw new IllegalStateException("repository instance has been shut down");
-        }
-
-        return repProps.getProperty(key);
-    }
-
-    /**
-    public static PersistenceManager createPersistenceManager(File homeDir, 
+    private static PersistenceManager createPersistenceManager(File homeDir, 
+    /**
+     * @see Repository#login()
+     */
+    public Session login() throws LoginException, RepositoryException {
+        return login(null, null);
+    }
+
+    /**
+     * @see Repository#login(Credentials)
+     */
+    public Session login(Credentials credentials)
+            throws LoginException, RepositoryException {
+        return login(credentials, null);
+    }
+
+    /**
+     * @see Repository#getDescriptor(String)
+     */
+    public String getDescriptor(String key) {
+        return repProps.getProperty(key);
+    }
+
+    /**
+     * @see Repository#getDescriptorKeys()
+     */
+    public String[] getDescriptorKeys() {
+        return (String[]) repProps.keySet().toArray(new String[repProps.keySet().size()]);
+    }
+
