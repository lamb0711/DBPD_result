[JCR-175] Contrib JCR-Server: enable PROPPATCH for simple-davresource
[JCR-174] Contrib JCR-Server: improve handing of strong etags

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@230679 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.webdav.property.DefaultDavProperty;
-import org.apache.jackrabbit.webdav.property.DavProperty;
+import org.apache.jackrabbit.webdav.property.*;
+import java.util.*;
+    /**
+     * Allows to alter the registered namespaces ({@link #JCR_NAMESPACES}) and
+     * forwards any other property to the super class.
+     *
+     * @param property
+     * @throws DavException
+     * @see VersionControlledItemCollection#setProperty(org.apache.jackrabbit.webdav.property.DavProperty)
+     */
-        if (ItemResourceConstants.JCR_NAMESPACES.equals(property.getName())) {
-            // todo: register and unregister namespaces
+        if (JCR_NAMESPACES.equals(property.getName())) {
+            Object v = property.getValue();
+            if (v instanceof List) {
+                Map changeMap = new HashMap();
+                // retrieve list of prefix/uri pairs that build the new values of
+                // the ns-registry
+                Iterator it = ((List)v).iterator();
+                while (it.hasNext()) {
+                    Object listEntry = it.next();
+                    if (listEntry instanceof Element) {
+                        Element e = (Element)listEntry;
+                        if (XML_NAMESPACE.equals(e.getName())) {
+                            String prefix = e.getChildText(XML_PREFIX, NAMESPACE);
+                            String uri = e.getChildText(XML_URI, NAMESPACE);
+                            changeMap.put(prefix, uri);
+                        }
+                    }
+                }
+                try {
+                    NamespaceRegistry nsReg = getRepositorySession().getWorkspace().getNamespaceRegistry();
+                    String[] registeredPrefixes = nsReg.getPrefixes();
+                    for (int i = 0; i < registeredPrefixes.length; i++) {
+                        String prfx = registeredPrefixes[i];
+                        if (!changeMap.containsKey(prfx)) {
+                            // prefix not present amongst the new values any more > unregister
+                            nsReg.unregisterNamespace(prfx);
+                        } else if (changeMap.get(prfx).equals(nsReg.getURI(prfx))) {
+                            // present with same uri-value >> no action required
+                            changeMap.remove(prfx);
+                        }
+                    }
+
+                    // try to register any prefix/uri pair that has a changed uri or
+                    // it has not been present before.
+                    Iterator prefixIt = changeMap.keySet().iterator();
+                    while (prefixIt.hasNext()) {
+                        String prefix = (String)prefixIt.next();
+                        String uri = (String)changeMap.get(prefix);
+                        nsReg.registerNamespace(prefix, uri);
+                    }
+                } catch (RepositoryException e) {
+                    throw new JcrDavException(e);
+                }
+            } else {
+                log.warn("Unexpected structure of jcr:namespace property.");
+                throw new DavException(DavServletResponse.SC_INTERNAL_SERVER_ERROR);
+            }
+    /**
+     * @see #setProperty(DavProperty)
+     * @see DavResource#alterProperties(org.apache.jackrabbit.webdav.property.DavPropertySet, org.apache.jackrabbit.webdav.property.DavPropertyNameSet)
+     */
+    public void alterProperties(DavPropertySet setProperties, DavPropertyNameSet removePropertyNames) throws DavException {
+        if (setProperties.contains(JCR_NAMESPACES)) {
+            setProperty(setProperties.remove(JCR_NAMESPACES));
+        }
+        // let super-class handle the rest of the properties
+        super.alterProperties(setProperties, removePropertyNames);
+    }
+
-                elem.addContent(new Element(XML_PREFIX).setText(prefixes[i]));
-                elem.addContent(new Element(XML_URI)).setText(nsReg.getURI(prefixes[i]));
+                elem.addContent(new Element(XML_PREFIX, NAMESPACE).setText(prefixes[i]));
+                elem.addContent(new Element(XML_URI, NAMESPACE)).setText(nsReg.getURI(prefixes[i]));
-            properties.add(new DefaultDavProperty(ItemResourceConstants.JCR_NAMESPACES, nsElems, false));
+            properties.add(new DefaultDavProperty(JCR_NAMESPACES, nsElems, false));
