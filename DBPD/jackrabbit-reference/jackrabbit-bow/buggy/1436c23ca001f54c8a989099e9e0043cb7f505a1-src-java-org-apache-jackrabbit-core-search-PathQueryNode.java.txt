- Removed JCRQL implementation
- Added proper QName support to search
- redesigned parsing and formating of queries (better separation of abstract query tree and concrete syntax)
- Some improvements in SQL: colon is now supported in identifier without having to use double quotes, LIKE now supports escaping

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@125778 13f79535-47bb-0310-9956-ffa450edef68

-    /**
-     * Returns a JCRQL representation for this query node.
-     *
-     * @return a JCRQL representation for this query node.
-     */
-    public String toJCRQLString() {
-        StringBuffer sb = new StringBuffer("LOCATION \"");
-        LocationStepQueryNode[] steps = getPathSteps();
-        for (int i = 0; i < steps.length; i++) {
-            if (steps[i].getNameTest() == null
-                    || steps[i].getNameTest().length() > 0) {
-                sb.append('/');
-            }
-            sb.append(steps[i].toJCRQLString());
-        }
-        sb.append('"');
-        return sb.toString();
-    }
-
-
-    /**
-     * Returns a JCR SQL representation for this query node.
-     *
-     * @return a JCR SQL representation for this query node.
-     */
-    public String toJCRSQLString() {
-        // FIXME implement namespace awareness
-        StringBuffer sb = new StringBuffer("\"jcr:path\"='");
-        LocationStepQueryNode[] steps = getPathSteps();
-        for (int i = 0; i < steps.length; i++) {
-            if (steps[i].getNameTest() == null
-                    || steps[i].getNameTest().length() > 0) {
-                sb.append('/');
-            }
-            sb.append(steps[i].toJCRSQLString());
-        }
-        sb.append('\'');
-        return sb.toString();
-    }
-
-    /**
-     * Returns an XPath representation for this query node.
-     *
-     * @return an XPath representation for this query node.
-     */
-    public String toXPathString() {
-        StringBuffer sb = new StringBuffer();
-        LocationStepQueryNode[] steps = getPathSteps();
-        for (int i = 0; i < steps.length; i++) {
-            if (steps[i].getNameTest() == null
-                    || steps[i].getNameTest().length() > 0) {
-                sb.append('/');
-            }
-            sb.append(steps[i].toXPathString());
-        }
-        return sb.toString();
-    }
