AccessManager implementation configurable in repository.xml

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@155930 13f79535-47bb-0310-9956-ffa450edef68

-    protected final Subject subject;
+    protected Subject subject;
-    protected final HierarchyManager hierMgr;
+    protected HierarchyManager hierMgr;
-    protected final boolean system;
-    protected final boolean anonymous;
+    private boolean initialized;
+
+    protected boolean system;
+    protected boolean anonymous;
-     * Constructor
-     *
-     * @param subject
-     * @param hierMgr
+     * Empty constructor
-    public SimpleAccessManager(Subject subject, HierarchyManager hierMgr) {
-        this.subject = subject;
-        this.hierMgr = hierMgr;
-        anonymous = !subject.getPrincipals(AnonymousPrincipal.class).isEmpty();
-        system = !subject.getPrincipals(SystemPrincipal.class).isEmpty();
+    public SimpleAccessManager() {
+        initialized = false;
+        anonymous = false;
+        system = false;
+     * @see AccessManager#init(AMContext)
+     */
+    public void init(AMContext context) throws Exception {
+        if (initialized) {
+            throw new IllegalStateException("already initialized");
+        }
+
+        subject = context.getSubject();
+        hierMgr = context.getHierarchyManager();
+        anonymous = !subject.getPrincipals(AnonymousPrincipal.class).isEmpty();
+        system = !subject.getPrincipals(SystemPrincipal.class).isEmpty();
+
+        initialized = true;
+    }
+
+    /**
+     * @see AccessManager#close
+     */
+    public synchronized void close() throws Exception {
+        if (!initialized) {
+            throw new IllegalStateException("not initialized");
+        }
+
+        initialized = false;
+    }
+
+    /**
+        if (!initialized) {
+            throw new IllegalStateException("not initialized");
+        }
+
-            // anonymous is always denied WRITE premission
-            if ((permissions & WRITE) == WRITE) {
+            // anonymous is always denied WRITE & REMOVE premissions
+            if ((permissions & WRITE) == WRITE ||
+                    (permissions & REMOVE) == REMOVE) {
+        if (!initialized) {
+            throw new IllegalStateException("not initialized");
+        }
+
-            // anonymous is always denied WRITE premission
-            if ((permissions & WRITE) == WRITE) {
+            // anonymous is always denied WRITE & REMOVE premissions
+            if ((permissions & WRITE) == WRITE ||
+                    (permissions & REMOVE) == REMOVE) {
