JCR-2598: Saving concurrent sessions executing random operations causes a corrupt JCR

Patch by Stephan Huttenhuis

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@955229 13f79535-47bb-0310-9956-ffa450edef68

-    protected void removeChildNode(Name nodeName, int index)
-            throws RepositoryException {
+    protected void removeChildNode(NodeId childId) throws RepositoryException {
-        if (index == 0) {
-            index = 1;
-        }
-                thisState.getChildNodeEntry(nodeName, index);
+                thisState.getChildNodeEntry(childId);
-            String msg = "failed to remove child " + nodeName + " of " + this;
+            String msg = "failed to remove child " + childId + " of " + this;
-        NodeId childId = entry.getId();
-        if (!thisState.removeChildNodeEntry(nodeName, index)) {
-            String msg = "failed to remove child " + nodeName + " of " + this;
+        if (!thisState.removeChildNodeEntry(childId)) {
+            String msg = "failed to remove child " + childId + " of " + this;
-                thisState.removeChildNodeEntry(entry.getName(), entry.getIndex());
+                thisState.removeChildNodeEntry(childId);
-                    removeChildNode(entry.getName(), entry.getIndex());
+                    removeChildNode(entry.getId());
-                    removeChildNode(entry.getName(), entry.getIndex());
+                    removeChildNode(entry.getId());
-                            removeChildNode(entry.getName(), entry.getIndex());
+                            removeChildNode(entry.getId());
-                        removeChildNode(entry.getName(), entry.getIndex());
+                        removeChildNode(entry.getId());
