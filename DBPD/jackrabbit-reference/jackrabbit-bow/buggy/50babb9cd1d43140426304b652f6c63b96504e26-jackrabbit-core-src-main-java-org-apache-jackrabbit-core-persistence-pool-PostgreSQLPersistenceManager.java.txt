JCR-2821: Consistency check/fix doesn't work with PSQL persistence manager

Unify bundle loading to automatically choose .getBlob().getBinaryStream() or .getBinaryStream() depending on the type of the result set.
Move bundle size tracking inside BundleReader.

Fix based on a patch by Omid Milani

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1039408 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.InputStream;
-import java.sql.ResultSet;
-import org.apache.jackrabbit.core.id.NodeId;
-import org.apache.jackrabbit.core.persistence.util.NodePropBundle;
-import org.apache.jackrabbit.core.state.ItemStateException;
-import org.apache.jackrabbit.core.util.TrackingInputStream;
-import org.apache.jackrabbit.core.util.db.DbUtility;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-     * Logger instance.
-     */
-    private static Logger log =
-        LoggerFactory.getLogger(PostgreSQLPersistenceManager.class);
-
-    /**
-    /**
-     * PostgreSQL needs slightly different handling of the binary value that is received:
-     * rs.getBinaryStream vs rs.getBlob in the super class.
-     * 
-     * {@inheritDoc}
-     */
-    @Override
-    protected NodePropBundle loadBundle(NodeId id) throws ItemStateException {
-        ResultSet rs = null;
-        try {
-            rs = conHelper.exec(bundleSelectSQL, getKey(id), false, 0);
-            if (rs.next()) {
-                InputStream input = rs.getBinaryStream(1);
-                try {
-                    TrackingInputStream cin = new TrackingInputStream(input);
-                    NodePropBundle bundle = binding.readBundle(cin, id);
-                    bundle.setSize(cin.getPosition());
-                    return bundle;
-                } finally {
-                    input.close();
-                }
-            } else {
-                return null;
-            }
-        } catch (Exception e) {
-            String msg = "failed to read bundle: " + id + ": " + e;
-            log.error(msg);
-            throw new ItemStateException(msg, e);
-        } finally {
-           DbUtility.close(rs);
-        }
-    }
