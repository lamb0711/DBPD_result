JCR-258 - remove JDOM dependency from jcr-server contribution
JCR-295 - usage of Cache-Control header 
JCR-297 - log output while parsing xml
minor consistency issues and improvements

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368683 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.webdav.*;
-import org.apache.jackrabbit.webdav.version.*;
-import org.jdom.Document;
+import org.apache.jackrabbit.webdav.version.DeltaVConstants;
+import org.apache.jackrabbit.webdav.version.DeltaVResource;
+import org.apache.jackrabbit.webdav.version.VersionControlledResource;
+import org.apache.jackrabbit.webdav.version.VersionResource;
+import org.apache.jackrabbit.webdav.DavException;
+import org.apache.jackrabbit.webdav.DavServletResponse;
+import org.apache.jackrabbit.webdav.MultiStatus;
+import org.apache.jackrabbit.webdav.DavResource;
+import org.apache.jackrabbit.webdav.DavResourceIterator;
+import org.w3c.dom.Element;
+import org.w3c.dom.Document;
+    /**
+     * Returns {@link ReportType#VERSION_TREE}
+     *
+     * @return {@link ReportType#VERSION_TREE}
+     * @see Report#getType()
+     */
+     * Always returns <code>true</code>.
+     *
+     * @return true
+     * @see org.apache.jackrabbit.webdav.version.report.Report#isMultiStatusReport()
+     */
+    public boolean isMultiStatusReport() {
+        return true;
+    }
+
+    /**
+     * Validates the specified resource and info objects.
+     *
+     * @param resource
+     * @param info
+     * @throws org.apache.jackrabbit.webdav.DavException
+     * @see Report#init(org.apache.jackrabbit.webdav.version.DeltaVResource, ReportInfo)
+     */
+    public void init(DeltaVResource resource, ReportInfo info) throws DavException {
+        setResource(resource);
+        setInfo(info);
+    }
+
+    /**
-     * @throws IllegalArgumentException if the given resource is neither
-     * {@link VersionControlledResource} nor {@link VersionResource}.
-     * @see Report#setResource(org.apache.jackrabbit.webdav.version.DeltaVResource)
+     * @throws DavException if the given resource is neither
+     * {@link org.apache.jackrabbit.webdav.version.VersionControlledResource} nor {@link org.apache.jackrabbit.webdav.version.VersionResource}.
-    public void setResource(DeltaVResource resource) throws IllegalArgumentException {
-        if (resource instanceof VersionControlledResource || resource instanceof VersionResource) {
+    private void setResource(DeltaVResource resource) throws DavException {
+        if (resource != null && (resource instanceof VersionControlledResource || resource instanceof VersionResource)) {
-            throw new IllegalArgumentException("DAV:version-tree report can only be created for version-controlled resources and version resources.");
+            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "DAV:version-tree report can only be created for version-controlled resources and version resources.");
-     * @throws IllegalArgumentException if the given <code>ReportInfo</code>
+     * @throws DavException if the given <code>ReportInfo</code>
-     * @see Report#setInfo(ReportInfo)
-    public void setInfo(ReportInfo info) throws IllegalArgumentException {
-        if (info == null || !XML_VERSION_TREE.equals(info.getReportElement().getName())) {
-            throw new IllegalArgumentException("DAV:version-tree element expected.");
+    private void setInfo(ReportInfo info) throws DavException {
+        if (!getType().isRequestedReportType(info)) {
+            throw new DavException(DavServletResponse.SC_BAD_REQUEST, "DAV:version-tree element expected.");
-     * @throws DavException if the resource or the info field are <code>null</code>
-     * or if any other error occurs.
-     * @see Report#toXml()
+     * @see org.apache.jackrabbit.webdav.xml.XmlSerializable#toXml(Document)
+     * @param document
-    public Document toXml() throws DavException {
+    public Element toXml(Document document) {
+        return getMultiStatus().toXml(document);
+    }
+
+    /**
+     * Retrieve the <code>MultiStatus</code> that is returned in response to a locate-by-history
+     * report request.
+     *
+     * @return
+     * @throws NullPointerException if info or resource is <code>null</code>.
+     */
+    private MultiStatus getMultiStatus() {
-            throw new DavException(DavServletResponse.SC_INTERNAL_SERVER_ERROR, "Error while running DAV:version-tree report");
+            throw new NullPointerException("Error while running DAV:version-tree report");
-        return ms.toXml();
+        return ms;
-     * @throws DavException
-                               int depth, MultiStatus ms) throws DavException {
+                               int depth, MultiStatus ms) {
+        try {
+            }
+        } catch (DavException e) {
+            log.error(e);
