work in progress

- SPI: replace String/Stream for values by QValue interface
- SPI: add factory for QValue
  > adjust commons and add implementation
  > adjust usages of former QValue object with jcr2spi, spi2dav
- RepositoryService.getChildInfos returns Iterator instead of Collection
- spi2dav: add implementation for new query interfaces

- TODO: 
  improve conversion of jcr-value to q-value and vice-versa




git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@497885 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.value.QValue;
+import org.apache.jackrabbit.spi.QValue;
-import javax.jcr.PropertyType;
-                QValue[] values = operation.getValues();
-                if (type == PropertyType.BINARY) {
-                    InputStream[] ins = new InputStream[values.length];
-                    for (int i = 0; i < values.length; i++) {
-                        ins[i] = values[i].getStream();
-                    }
-                    batch.addProperty(parentId, propertyName, ins, type);
-                } else {
-                    String[] strs = new String[values.length];
-                    for (int i = 0; i < values.length; i++) {
-                        strs[i] = values[i].getString();
-                    }
-                    batch.addProperty(parentId, propertyName, strs, type);
-                }
+                batch.addProperty(parentId, propertyName, operation.getValues());
-                if (type == PropertyType.BINARY) {
-                    batch.addProperty(parentId, propertyName, value.getStream(), type);
-                } else {
-                    batch.addProperty(parentId, propertyName, value.getString(), type);
-                }
+                batch.addProperty(parentId, propertyName, value);
-            int type = operation.getPropertyType();
-                QValue[] values = operation.getValues();
-                if (type == PropertyType.BINARY) {
-                    InputStream[] ins = new InputStream[values.length];
-                    for (int i = 0; i < values.length; i++) {
-                        ins[i] = values[i].getStream();
-                    }
-                    batch.setValue(id, ins, type);
-                } else {
-                    String[] strs = new String[values.length];
-                    for (int i = 0; i < values.length; i++) {
-                        strs[i] = values[i].getString();
-                    }
-                    batch.setValue(id, strs, type);
-                }
+                batch.setValue(id, operation.getValues());
-                QValue value = operation.getValues()[0];
-                if (operation.getPropertyType() == PropertyType.BINARY) {
-                    batch.setValue(id, value.getStream(), type);
-                } else {
-                    batch.setValue(id, value.getString(), type);
-                }
+                batch.setValue(id, operation.getValues()[0]);
