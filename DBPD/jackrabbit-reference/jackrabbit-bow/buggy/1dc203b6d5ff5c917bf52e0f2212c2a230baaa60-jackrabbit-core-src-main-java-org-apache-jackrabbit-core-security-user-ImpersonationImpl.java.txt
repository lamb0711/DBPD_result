minor improvement: 
- replace test for AdminPrincipal
- remove SystemPrincipal usage

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1076596 13f79535-47bb-0310-9956-ffa450edef68

+import java.security.acl.Group;
-import org.apache.jackrabbit.core.security.SystemPrincipal;
-import org.apache.jackrabbit.core.security.principal.AdminPrincipal;
-        if (principal instanceof AdminPrincipal || principal instanceof SystemPrincipal) {
-            log.warn("Admin and System principal are already granted impersonation.");
-            return false;
-        }
-
-            log.warn("Cannot grant impersonation to a principal that is a Group " +
-                      "or an unknown Authorizable.");
+            log.warn("Cannot grant impersonation to a principal that is a Group or an unknown Authorizable.");
+            return false;
+        }
+
+        // make sure the given principal doesn't refer to the admin user.
+        if (user.userManager.isAdminId(auth.getID())) {
+            log.warn("Admin principal is already granted impersonation.");
-        if (principal instanceof AdminPrincipal || principal instanceof SystemPrincipal) {
-            log.warn("Admin and System principal are always granted impersonation.");
-            return false;
-        }
-
-        //shortcut admin/system -> always allowed
-        if (!subject.getPrincipals(AdminPrincipal.class).isEmpty()
-                || !subject.getPrincipals(SystemPrincipal.class).isEmpty()) {
-            return true;
-        }
-        boolean allows = false;
-        try {
-            Set<String> impersonators = getImpersonatorNames();
-            allows = impersonators.removeAll(principalNames);
-        } catch (RepositoryException e) {
-            // should never get here
-            log.debug(e.getMessage());
+        boolean allows;
+        Set<String> impersonators = getImpersonatorNames();
+        allows = impersonators.removeAll(principalNames);
+
+        if (!allows) {
+            // check if subject belongs to administrator user
+            for (Principal p : subject.getPrincipals()) {
+                if (p instanceof Group) {
+                    continue;
+                }
+                Authorizable a = userManager.getAuthorizable(p);
+                if (user.equals(a)) {
+                    allows = false;
+                    break;
+                } else if (a != null && userManager.isAdminId(a.getID())) {
+                    allows = true;
+                    break;
+                }
+            }
