JCR-2058 JSR 283: VersionManager and new versioning methods
- added jcr:copiedFrom property to version history


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@778802 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Map;
-    private HashMap labelCache = new HashMap();
+    private Map<Name, Name> labelCache = new HashMap<Name, Name>();
-    private LinkedHashMap/*<Name, NodeId>*/ nameCache = new LinkedHashMap/*<Name, NodeId>*/();
+    private Map<Name, NodeId> nameCache = new LinkedHashMap<Name, NodeId>();
-    private HashMap/*<NodeId, InternalVersion>*/ versionCache = new HashMap/*<NodeId, InternalVersion>*/();
+    private Map<NodeId, InternalVersion> versionCache = new HashMap<NodeId, InternalVersion>();
-    private HashMap/*<NodeId, InternalVersion>*/ tempVersionCache = new HashMap/*<NodeId, InternalVersion>*/();
+    private Map<NodeId, InternalVersion> tempVersionCache = new HashMap<NodeId, InternalVersion>();
-            for (int i = 0; i < labels.length; i++) {
-                PropertyState pState = labels[i];
+            for (PropertyState pState : labels) {
-        for (int i = 0; i < children.length; i++) {
-            ChildNodeEntry child = children[i];
+        for (ChildNodeEntry child : children) {
-            Iterator iter = nameCache.keySet().iterator();
-            while (iter.hasNext()) {
-                Name versionName = (Name) iter.next();
+            for (Name versionName : nameCache.keySet()) {
-        Iterator iter = tempVersionCache.values().iterator();
-        while (iter.hasNext()) {
-            InternalVersionImpl v = (InternalVersionImpl) iter.next();
+        for (Object o : tempVersionCache.values()) {
+            InternalVersionImpl v = (InternalVersionImpl) o;
-            Iterator iter = labelCache.keySet().iterator();
-            while (iter.hasNext()) {
-                Name labelName = (Name) iter.next();
-                Name versionName = (Name) labelCache.get(labelName);
+            for (Name labelName: labelCache.keySet()) {
+                Name versionName = labelCache.get(labelName);
-        NodeId versionId = (NodeId) nameCache.get(versionName);
+        NodeId versionId = nameCache.get(versionName);
-        InternalVersion v = (InternalVersion) versionCache.get(versionId);
+        InternalVersion v = versionCache.get(versionId);
-        InternalVersion v = (InternalVersion) versionCache.get(id);
+        InternalVersion v = versionCache.get(id);
-            Iterator iter = nameCache.keySet().iterator();
-            while (iter.hasNext()) {
-                Name versionName = (Name) iter.next();
+            for (Name versionName : nameCache.keySet()) {
-        Name versionName = (Name) labelCache.get(label);
+        Name versionName = labelCache.get(label);
-        NodeId id = (NodeId) nameCache.get(versionName);
-        InternalVersion v = (InternalVersion) versionCache.get(id);
+        NodeId id = nameCache.get(versionName);
+        InternalVersion v = versionCache.get(id);
-        return (Name[]) nameCache.keySet().toArray(new Name[nameCache.size()]);
+        return nameCache.keySet().toArray(new Name[nameCache.size()]);
-        return (Name[]) labelCache.keySet().toArray(new Name[labelCache.size()]);
+        return labelCache.keySet().toArray(new Name[labelCache.size()]);
-        for (int i = 0; i < labels.length; i++) {
-            v.internalRemoveLabel(labels[i]);
-            labelNode.removeProperty(labels[i]);
+        for (Name label : labels) {
+            v.internalRemoveLabel(label);
+            labelNode.removeProperty(label);
-        for (int i = 0; i < labels.length; i++) {
-            labelCache.remove(labels[i]);
+        for (Name label : labels) {
+            labelCache.remove(label);
-        Name prevName = (Name) labelCache.get(label);
+        Name prevName = labelCache.get(label);
+     * @param copiedFrom the id of the base version
-            NodeState nodeState) throws RepositoryException {
+            NodeState nodeState, NodeId copiedFrom) throws RepositoryException {
+        // initialize the 'jcr:copiedFrom' property
+        if (copiedFrom != null) {
+            pNode.setPropertyValue(NameConstants.JCR_COPIEDFROM, InternalValue.create(copiedFrom.getUUID(), true));
+        }
+        
