improve memory consumption of the current hierarchy implementation

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@542571 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.jcr2spi.hierarchy.HierarchyEntry;
-import org.apache.jackrabbit.name.Path;
-    private final NodeEntry hierarchyEntry;
-
-        super(initialStatus, isWorkspaceState, isf, definitionProvider);
-        this.hierarchyEntry = entry;
+        super(initialStatus, isWorkspaceState, entry, isf, definitionProvider);
-            hierarchyEntry = overlayedState.hierarchyEntry;
-     * @see ItemState#getHierarchyEntry()
-     */
-    public HierarchyEntry getHierarchyEntry() {
-        return hierarchyEntry;
-    }
-
-    /**
-     * !! Used by NodeEntryImpl and NodeState only
+     * Used by NodeEntryImpl and NodeState only
-     * and index or <code>null</code> if there's no matching, valid entry.
+     * and index. Throws <code>ItemNotFoundException</code> if there's no
+     * matching, valid entry.
-        NodeEntry child = getNodeEntry().getNodeEntry(nodeName, index);
-        if (child != null) {
-            return child.getNodeState();
+        NodeEntry ne = getNodeEntry().getNodeEntry(nodeName, index, true);
+        if (ne != null) {
+            return ne.getNodeState();
-            // TODO: correct?
+            // does not exist (any more) or is a property
-     * Utility method that returns the property state with the given name.
+     * Utility method that returns the property state with the given name or
+     * throws an <code>ItemNotFoundException</code> if no matching, valid
+     * property could be found.
-     * @see NodeEntry#getPropertyEntry(QName)
+     * @see NodeEntry#getPropertyEntry(QName, boolean)
-        HierarchyEntry child = getNodeEntry().getDeepEntry(Path.create(propertyName, Path.INDEX_UNDEFINED));
-        if (child != null && !child.denotesNode()) {
-            return ((PropertyEntry) child).getPropertyState();
+        PropertyEntry pe = getNodeEntry().getPropertyEntry(propertyName, true);
+        if (pe != null) {
+            return pe.getPropertyState();
