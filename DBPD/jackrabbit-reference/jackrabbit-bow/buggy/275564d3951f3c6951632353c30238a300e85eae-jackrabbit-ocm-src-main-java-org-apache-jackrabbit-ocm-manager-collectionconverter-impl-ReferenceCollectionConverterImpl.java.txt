- working on JCR-1339 : better support for Map. It is important to define an ID field in the class used for the Map elements. This ID will be used as a key in the map. 
- Rename ManagedHashMap into ManageableHashMap in ordrer to follow the same naming convention.
- Now, it is not necessary to define the ElementClassName if the Collection or the Map are parametrized like List<MyClass>

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@646938 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableCollectionUtil;
+import org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableObjectsUtil;
+import org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableObjects;
-                                      ManageableCollection collection) throws RepositoryException {
-        addUuidProperties(session, parentNode, collectionDescriptor, collection);
+                                      ManageableObjects objects) throws RepositoryException {
+        addUuidProperties(session, parentNode, collectionDescriptor, objects);
-                                 ManageableCollection collection) throws RepositoryException {
+                                 ManageableObjects objects) throws RepositoryException {
-        if (collection == null) {
+        if (objects == null) {
-        addUuidProperties(session, parentNode, collectionDescriptor, collection);    }
+        addUuidProperties(session, parentNode, collectionDescriptor, objects);
+    }
-    protected ManageableCollection doGetCollection(Session session,
+    protected ManageableObjects doGetCollection(Session session,
-            ManageableCollection collection = ManageableCollectionUtil.getManageableCollection(collectionFieldClass);
+            ManageableObjects objects = ManageableObjectsUtil.getManageableObjects(collectionFieldClass);
-                collection.addObject(values[i].getString());
+            	if (objects instanceof ManageableCollection)
+                    ((ManageableCollection)objects).addObject(values[i].getString());
+            	else
+            		throw new ObjectContentManagerException(
+            				"Unsupported data type in ReferenceCollectionConverter : " + objects.getClass().getName());
-            return collection;
+            return objects;
-	private void addUuidProperties(Session session, Node parentNode, CollectionDescriptor collectionDescriptor, ManageableCollection collection) throws UnsupportedRepositoryOperationException, RepositoryException, VersionException, LockException, ConstraintViolationException {
+	private void addUuidProperties(Session session, Node parentNode,
+			             CollectionDescriptor collectionDescriptor, ManageableObjects objects)
+	                     throws UnsupportedRepositoryOperationException, RepositoryException, VersionException, LockException, ConstraintViolationException {
-            if (collection == null) {
+            if (objects == null) {
-            Value[] values = new Value[collection.getSize()];
+            Value[] values = new Value[objects.getSize()];
-            Iterator collectionIterator = collection.getIterator();
-            for (int i = 0; i < collection.getSize(); i++) {
+            Iterator collectionIterator = objects.getIterator();
+            for (int i = 0; i < objects.getSize(); i++) {
