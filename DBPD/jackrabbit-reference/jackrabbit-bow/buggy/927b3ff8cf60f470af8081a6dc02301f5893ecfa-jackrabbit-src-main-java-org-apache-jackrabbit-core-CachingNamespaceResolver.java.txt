JCR-476: Remove recently added getJCRPath()/getQPath() from NamespaceResolver


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@424218 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.QName;
-import org.apache.jackrabbit.name.IllegalNameException;
-import org.apache.jackrabbit.name.UnknownPrefixException;
-import org.apache.jackrabbit.name.NoPrefixDeclaredException;
-import org.apache.jackrabbit.name.NamespaceResolver;
-import org.apache.jackrabbit.name.NamespaceListener;
-import org.apache.jackrabbit.name.AbstractNamespaceResolver;
-import org.apache.jackrabbit.name.Path;
-import org.apache.jackrabbit.name.MalformedPathException;
-import org.apache.jackrabbit.name.PathFormat;
-import org.apache.jackrabbit.name.NameFormat;
+import org.apache.jackrabbit.name.AbstractNamespaceResolver;
+import org.apache.jackrabbit.name.IllegalNameException;
+import org.apache.jackrabbit.name.NameFormat;
+import org.apache.jackrabbit.name.NamespaceListener;
+import org.apache.jackrabbit.name.NamespaceResolver;
+import org.apache.jackrabbit.name.NoPrefixDeclaredException;
+import org.apache.jackrabbit.name.QName;
+import org.apache.jackrabbit.name.NameCache;
+import org.apache.jackrabbit.name.UnknownPrefixException;
-        implements NamespaceResolver, NamespaceListener {
+        implements NamespaceResolver, NamespaceListener, NameCache {
-     * @inheritDoc
+     * @deprecated use {@link NameFormat#parse(String, NamespaceResolver)}
-        QName qName = (QName) jcrNameToQName.get(name);
-        if (qName == null) {
-            qName = NameFormat.parse(name, this);
-            jcrNameToQName.put(name, qName);
-        }
-        return qName;
+        return NameFormat.parse(name, this);
-     * @inheritDoc
+     * @deprecated use {@link NameFormat#format(QName, NamespaceResolver)}
-        String jcrName = (String) qnameToJCRName.get(name);
-        if (jcrName == null) {
-            jcrName = NameFormat.format(name, this);
-            qnameToJCRName.put(name, jcrName);
-        }
-        return jcrName;
-    }
-
-    /**
-     * @inheritDoc
-     * As currently paths are not cached, the call is delegated to
-     * {@link PathFormat#parse(String, NamespaceResolver)}.
-     */
-    public Path getQPath(String jcrPath) throws MalformedPathException {
-        return PathFormat.parse(jcrPath, this);
-    }
-
-    /**
-     * @inheritDoc
-     * As currently paths are not cached, the call is delegated to
-     * {@link PathFormat#format(Path, NamespaceResolver)}.
-     */
-    public String getJCRPath(Path qPath) throws NoPrefixDeclaredException {
-        return PathFormat.format(qPath, this);
+        return NameFormat.format(name, this);
+    //------------------------------------------------------------< QNameCache >
+
+    /**
+     * @inheritDoc
+     */
+    public synchronized QName retrieveName(String jcrName) {
+        return (QName) jcrNameToQName.get(jcrName);
+    }
+
+    /**
+     * @inheritDoc
+     */
+    public synchronized String retrieveName(QName name) {
+        return (String) qnameToJCRName.get(name);
+    }
+
+    /**
+     * @inheritDoc
+     */
+    public synchronized void cacheName(String jcrName, QName name) {
+        qnameToJCRName.put(name, jcrName);
+        jcrNameToQName.put(jcrName, name);
+    }
+
+    /**
+     * @inheritDoc
+     */
+    public synchronized void evictAllNames() {
+        qnameToJCRName.clear();
+        jcrNameToQName.clear();
+    }
+
+
-        qnameToJCRName.clear();
-        jcrNameToQName.clear();
+        evictAllNames();
-        qnameToJCRName.clear();
-        jcrNameToQName.clear();
+        evictAllNames();
