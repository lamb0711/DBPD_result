JCR-1588: 283 Access Control

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@689499 13f79535-47bb-0310-9956-ffa450edef68

+    private static final int STATE_URI_START = 4;
+    private static final int STATE_URI = 5;
-     * Parses the <code>jcrName</code> and returns a new <code>Name</code>.
+     * Parses the <code>jcrName</code> (either qualified or expanded) and
+     * returns a new <code>Name</code>.
-     * @param jcrName the name to be parsed
+     * @param jcrName the name to be parsed. The jcrName may either in the
+     * qualified or in the expanded form.
+        String uri = null;
+                } else if (state == STATE_URI) {
+                    // ignore -> validation of uri later on.
-            } else if (Character.isWhitespace(c) || c == '/' || c == '[' || c == ']' || c == '*' || c == '\'' || c == '\"') {
+            } else if (Character.isWhitespace(c) || c == '[' || c == ']' || c == '*' || c == '\'' || c == '\"') {
+            } else if (c == '/') {
+                if (state == STATE_URI_START) {
+                    state = STATE_URI;
+                } else if (state != STATE_URI) {
+                    throw new IllegalNameException("'" + c + "' not allowed in name");
+                }
+                trailingSpaces = false;
+            } else if (c == '{') {
+                if (state == STATE_PREFIX_START) {
+                    state = STATE_URI_START;
+                } else if (state == STATE_URI_START || state == STATE_URI) {
+                    // second '{' in the uri-part -> no valid expanded jcr-name.
+                    // therefore reset the nameStart and change state.
+                    state = STATE_NAME;
+                    nameStart = 0;
+                } else if (state == STATE_NAME_START) {
+                    state = STATE_NAME;
+                    nameStart = i;
+                }
+                trailingSpaces = false;
+            } else if (c == '}') {
+                if (state == STATE_URI_START || state == STATE_URI) {
+                    String tmp = jcrName.substring(1, i);
+                    try {
+                        // make sure the uri is a known namespace uri
+                        // TODO: since namespace registration does not validate
+                        //       the URI format validation is omitted here
+                        resolver.getPrefix(tmp);
+                        uri = tmp;
+                        state = STATE_NAME_START;
+                    } catch (NamespaceException e) {
+                        // unknown uri -> apparently a localname starting with {
+                        // -> make sure there are no invalid characters
+                        if (tmp.indexOf(':') == -1 && tmp.indexOf('/') == -1) {
+                            state = STATE_NAME;
+                            nameStart = 0;
+                        } else {
+                            throw new IllegalNameException("Unknown uri " + tmp + ". But ':' and '/' are not allowed in a local name.");
+                        }
+                    }
+                } else if (state == STATE_PREFIX_START) {
+                    state = STATE_PREFIX; // prefix start -> validation later on will fail.
+                } else if (state == STATE_NAME_START) {
+                    state = STATE_NAME;
+                    nameStart = i;
+                }
+                trailingSpaces = false;
+                } else if (state == STATE_URI_START) {
+                    state = STATE_URI;
+        // take care of qualified jcrNames starting with '{' that are not having
+        // a terminating '}' -> make sure there are no illegal characters present.
+        if (state == STATE_URI && (jcrName.indexOf(':') > -1 || jcrName.indexOf('/') > -1)) {
+            throw new IllegalNameException("Local name may not contain ':' nor '/'");
+        }
+
-        String uri = resolver.getURI(prefix);
-        return factory.create(uri, nameStart == 0 ? jcrName : jcrName.substring(nameStart, len));
+        if (uri == null) {
+            uri = resolver.getURI(prefix);
+        }
+
+        String localName = (nameStart == 0 ? jcrName : jcrName.substring(nameStart, len));
+        return factory.create(uri, localName);
