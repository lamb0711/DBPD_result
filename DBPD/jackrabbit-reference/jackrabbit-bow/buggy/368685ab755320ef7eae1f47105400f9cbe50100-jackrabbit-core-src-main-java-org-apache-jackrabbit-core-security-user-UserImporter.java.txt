- JCR-2517 : UserImporter should use User.changePassword
- fixing bug in UserImport#processReferences



git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@915906 13f79535-47bb-0310-9956-ffa450edef68

- * <li>The rep:password property is expected to contain the crypted password
- * value as stored in the content upon calling {@link UserManager#createUser}
- * and exposed upon {@link javax.jcr.Property#getString()}
- * or {@link javax.jcr.Session#exportSystemView}</li>
-                // expectation: pw must already be crypted.
-                userManager.setProtectedProperty(parent, UserConstants.P_PASSWORD, v);
+                ((User) a).changePassword(v.getString());
-            List<Object> processed = new ArrayList();
+            List<Object> processed = new ArrayList<Object>();
-                    Map<String, Authorizable> toRemove = new HashMap();
-                    for (Iterator<Authorizable> aIt = gr.getDeclaredMembers(); it.hasNext();) {
-                        Authorizable dm = aIt.next();
+                    Map<String, Authorizable> toRemove = new HashMap<String, Authorizable>();
+                    for (Iterator<Authorizable> declMembers = gr.getDeclaredMembers(); declMembers.hasNext();) {
+                        Authorizable dm = declMembers.next();
-                    List<Authorizable> toAdd = new ArrayList();
-                    List<Value> nonExisting = new ArrayList();
+                    List<Authorizable> toAdd = new ArrayList<Authorizable>();
+                    List<Value> nonExisting = new ArrayList<Value>();
-                        List<Value> memberValues = new ArrayList();
+                        List<Value> memberValues = new ArrayList<Value>();
-                    Map<String, Principal> toRemove = new HashMap();
+                    Map<String, Principal> toRemove = new HashMap<String, Principal>();
-                    List<Principal> toAdd = new ArrayList();
+                    List<Principal> toAdd = new ArrayList<Principal>();
