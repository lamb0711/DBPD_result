JCR-1104 - JSR 283 support
- shareble nodes (work in progress)
- import/export


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@644638 13f79535-47bb-0310-9956-ffa450edef68

-    
+
-     * Parent id, if this is a shareable node, <code>null</code> otherwise.
+     * Primary parent id, if this is a shareable node, <code>null</code> otherwise.
-    private NodeId parentId;
+    private NodeId primaryParentId;
+        if (isShareable()) {
+            this.primaryParentId = state.getParentId();
+        }
-    protected NodeImpl(NodeImpl sharedSibling, NodeId parentId) {
-        super(sharedSibling.itemMgr, sharedSibling.session, 
-                sharedSibling.id, sharedSibling.state, null);
-        
+    protected NodeImpl(NodeImpl sharedSibling, NodeId parentId,
+                       ItemLifeCycleListener[] listeners) {
+
+        super(sharedSibling.itemMgr, sharedSibling.session,
+                sharedSibling.id, sharedSibling.state, listeners);
+
-        this.parentId = parentId;
+        this.primaryParentId = parentId;
-    
+
-        NodeImpl childNode = (NodeImpl) itemMgr.getItem(childId);
+        NodeImpl childNode = itemMgr.getNode(childId, getNodeId());
-                
+
-        
+
-                NodeImpl childNode = (NodeImpl) itemMgr.getItem(childId);
+                //NodeImpl childNode = (NodeImpl) itemMgr.getItem(childId);
+                NodeImpl childNode = itemMgr.getNode(childId, getNodeId());
-        itemMgr.getItem(id).setRemoved();
+        setRemoved();
-        
+
+            // if node has become shareable, set its primary parent id
+            if (primaryParentId == null) {
+                primaryParentId = state.getParentId();
+            }
-            return (NodeImpl) itemMgr.getItem(cne.getId());
+            return itemMgr.getNode(cne.getId(), getNodeId());
-        
+
-        NodeId parentId = this.parentId;
+        NodeId parentId = this.primaryParentId;
-            return (Node) itemMgr.getItem(id);
+            if (((NodeState) state).hasChildNodeEntry(id)) {
+                return itemMgr.getNode(id, getNodeId());
+            }
+            return (NodeImpl) itemMgr.getItem(id);
-    
+
-    
+
-     *  
+     *
-        
+
-        
+
-    public void removeSharedSet() throws VersionException, LockException, 
+    public void removeSharedSet() throws VersionException, LockException,
-        
+
-    public void removeShare() throws VersionException, LockException, 
+    public void removeShare() throws VersionException, LockException,
-        
+
-        // Standard remove() will remove just this node 
+        // Standard remove() will remove just this node
-    
+
-     * 
+     *
-       return ((NodeState) state).isShareable(); 
+       return ((NodeState) state).isShareable();
-    
+
-     * Helper method, returning the parent id this shareable node is attached
-     * to.
-     * 
+     * Helper method, returning the parent id this node is attached to. If this
+     * node is shareable, it returns the primary parent id (which remains
+     * fixed). Otherwise returns the underlying state's parent id.
+     *
-    public NodeId getParentId() {
-        if (parentId != null) {
-            return parentId;
+    protected NodeId getParentId() {
+        if (primaryParentId != null) {
+            return primaryParentId;
+     * Helper method, returning a flag indicating whether this node has
+     * the given shared parent.
+     *
+     * @param parentId parent id
+     * @return <code>true</code> if the node has the given shared parent;
+     *         <code>false</code> otherwise.
+     */
+    protected boolean hasSharedParent(NodeId parentId) {
+        return ((NodeState) state).containsShare(parentId);
+    }
+
+
+    /**
-     * 
+     *
-     * 
+     *
-        
+
-    
+
