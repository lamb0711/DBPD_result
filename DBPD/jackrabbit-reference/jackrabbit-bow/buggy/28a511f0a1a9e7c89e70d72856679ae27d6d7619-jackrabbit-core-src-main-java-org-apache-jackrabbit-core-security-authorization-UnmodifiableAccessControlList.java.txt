JCR-2573 - Performance of AC Evaluation [work in progress]

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@950440 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Arrays;
+    private int hashCode = 0;
+
-    public UnmodifiableAccessControlList(List<AccessControlEntry> accessControlEntries) {
+    public UnmodifiableAccessControlList(List<? extends AccessControlEntry> accessControlEntries) {
+        this(accessControlEntries, null, Collections.<String, Integer>emptyMap());
+    }
+
+    /**
+     * Construct a new <code>UnmodifiableAccessControlList</code>
+     *
+     * @param accessControlEntries
+     * @param path
+     * @param restrictions
+     */
+    public UnmodifiableAccessControlList(List<? extends AccessControlEntry> accessControlEntries, String path, Map<String, Integer>restrictions) {
-        path = null;
-        restrictions = Collections.emptyMap();
+        this.path = path;
+        this.restrictions = restrictions;
+    //----------------------------------------< JackrabbitAccessControlList >---
+    /**
+     * @see org.apache.jackrabbit.api.security.JackrabbitAccessControlList#getRestrictionNames()
+     */
+    /**
+     * @see org.apache.jackrabbit.api.security.JackrabbitAccessControlList#getRestrictionType(String)
+     */
+    /**
+     * @see org.apache.jackrabbit.api.security.JackrabbitAccessControlList#isEmpty()
+     */
+    /**
+     * @see org.apache.jackrabbit.api.security.JackrabbitAccessControlList#size()
+     */
+    /**
+     * @see org.apache.jackrabbit.api.security.JackrabbitAccessControlList#addEntry(Principal, Privilege[], boolean)
+     */
+    /**
+     * @see org.apache.jackrabbit.api.security.JackrabbitAccessControlList#addEntry(Principal, Privilege[], boolean, Map)
+     */
+    /**
+     * @see org.apache.jackrabbit.api.security.JackrabbitAccessControlList#orderBefore(AccessControlEntry, AccessControlEntry)
+     */
+    /**
+     * @see org.apache.jackrabbit.api.security.JackrabbitAccessControlList#getPath()
+     */
+
+    //-------------------------------------------------------------< Object >---
+    /**
+     * @see Object#hashCode()
+     */
+    @Override
+    public int hashCode() {
+        if (hashCode == 0) {
+            int result = 17;
+            result = 37 * result + (path != null ? path.hashCode() : 0);
+            for (AccessControlEntry entry : accessControlEntries) {
+                result = 37 * result + entry.hashCode();
+            }
+            for (String restrictionName : restrictions.keySet()) {
+                result = 37 * (restrictionName + "." + restrictions.get(restrictionName)).hashCode();
+            }
+            hashCode = result;
+        }
+        return hashCode;
+    }
+
+    /**
+     * @see Object#equals(Object)
+     */
+    @Override
+    public boolean equals(Object obj) {
+        if (obj == this) {
+            return true;
+        }
+
+        if (obj instanceof UnmodifiableAccessControlList) {
+            UnmodifiableAccessControlList acl = (UnmodifiableAccessControlList) obj;
+            return ((path == null) ? acl.path == null : path.equals(acl.path)) &&
+                    Arrays.equals(accessControlEntries, acl.accessControlEntries) &&
+                    restrictions.equals(acl.restrictions);
+        }
+        return false;
+    }
