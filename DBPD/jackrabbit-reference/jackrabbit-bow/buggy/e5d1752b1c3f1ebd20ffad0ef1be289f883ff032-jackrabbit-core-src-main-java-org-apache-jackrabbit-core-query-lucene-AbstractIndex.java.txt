JCR-2415: Update Lucene to 3.0
- Merge all from JCR-2415-lucene-3.0 at 1064038 (reintegration)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1064058 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.IOException;
-import java.io.OutputStream;
-import java.io.PrintStream;
-import java.io.StringReader;
-import java.util.ArrayList;
-import java.util.BitSet;
-import java.util.Collections;
-import java.util.List;
-import java.util.concurrent.CountDownLatch;
-
+import java.io.IOException;
+import java.io.OutputStream;
+import java.io.PrintStream;
+import java.io.StringReader;
+import java.util.ArrayList;
+import java.util.BitSet;
+import java.util.Collections;
+import java.util.List;
+import java.util.concurrent.CountDownLatch;
+
-            IndexReader reader;
-            if (idp != null) {
-                reader = IndexReader.open(getDirectory(), idp);
-            } else {
-                reader = IndexReader.open(getDirectory());
-            }
-            reader.setTermInfosIndexDivisor(termInfosIndexDivisor);
+            IndexReader reader = IndexReader.open(getDirectory(), idp, false, termInfosIndexDivisor);
-            IndexReader reader = IndexReader.open(getDirectory(), true);
-            reader.setTermInfosIndexDivisor(termInfosIndexDivisor);
+            IndexReader reader = IndexReader.open(getDirectory(), null, true, termInfosIndexDivisor);
-            for (Fieldable f : (List<Fieldable>) doc.getFields()) {
+            for (Fieldable f : doc.getFields()) {
-                Field.Store stored = getStoreParameter(f);
+                Field.Store stored = f.isStored() ? Field.Store.YES : Field.Store.NO;
-                    field = new Field(f.name(), f.binaryValue(), stored);
+                    field = new Field(f.name(), f.getBinaryValue(), stored);
-     * Returns the store parameter set on <code>f</code>.
-     *
-     * @param f a lucene field.
-     * @return the store parameter on <code>f</code>.
-     */
-    private Field.Store getStoreParameter(Fieldable f) {
-        if (f.isCompressed()) {
-            return Field.Store.COMPRESS;
-        } else if (f.isStored()) {
-            return Field.Store.YES;
-        } else {
-            return Field.Store.NO;
-        }
-    }
-
-    /**
