JCR-1104: JSR 283 support (work in progress)
- length query

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@645417 13f79535-47bb-0310-9956-ffa450edef68

+
+        // add length
+        if (indexFormatVersion.getVersion() >= IndexFormatVersion.V3.getVersion()) {
+            addLength(doc, fieldName, value);
+        }
-        doc.add(createFieldWithoutNorms(fieldName, internalValue.toString(), false));
+        doc.add(createFieldWithoutNorms(fieldName, internalValue.toString(),
+                PropertyType.BOOLEAN));
-     * @param store         <code>true</code> if the value should be stored,
-     *                      <code>false</code> otherwise
+     * @param propertyType  the property type.
-            String internalValue, boolean store) {
-        Field field = new Field(FieldNames.PROPERTIES,
-                FieldNames.createNamedValue(fieldName, internalValue),
-                store ? Field.Store.YES : Field.Store.NO, Field.Index.NO_NORMS,
-                Field.TermVector.NO);
-        return field;
+                                            String internalValue,
+                                            int propertyType) {
+        if (indexFormatVersion.getVersion()
+                >= IndexFormatVersion.V3.getVersion()) {
+            Field field = new Field(FieldNames.PROPERTIES,
+                    new SingletonTokenStream(
+                            FieldNames.createNamedValue(fieldName, internalValue),
+                            propertyType)
+                    );
+            field.setOmitNorms(true);
+            return field;
+        } else {
+            Field field = new Field(FieldNames.PROPERTIES,
+                    FieldNames.createNamedValue(fieldName, internalValue),
+                    Field.Store.NO, Field.Index.NO_NORMS,
+                    Field.TermVector.NO);
+            return field;
+        }
-        doc.add(createFieldWithoutNorms(fieldName, DateField.timeToString(millis), false));
+        doc.add(createFieldWithoutNorms(fieldName, DateField.timeToString(millis),
+                PropertyType.DATE));
-        doc.add(createFieldWithoutNorms(fieldName, DoubleField.doubleToString(doubleVal), false));
+        doc.add(createFieldWithoutNorms(fieldName, DoubleField.doubleToString(doubleVal),
+                PropertyType.DOUBLE));
-        doc.add(createFieldWithoutNorms(fieldName, LongField.longToString(longVal), false));
+        doc.add(createFieldWithoutNorms(fieldName, LongField.longToString(longVal),
+                PropertyType.LONG));
-        doc.add(createFieldWithoutNorms(fieldName, uuid, true));
+        doc.add(createFieldWithoutNorms(fieldName, uuid,
+                PropertyType.REFERENCE));
+        doc.add(new Field(FieldNames.PROPERTIES,
+                FieldNames.createNamedValue(fieldName, uuid),
+                Field.Store.YES, Field.Index.NO, Field.TermVector.NO));
-        doc.add(createFieldWithoutNorms(fieldName, pathString, false));
+        doc.add(createFieldWithoutNorms(fieldName, pathString,
+                PropertyType.PATH));
-        doc.add(createFieldWithoutNorms(fieldName, stringValue, false));
+        doc.add(createFieldWithoutNorms(fieldName, stringValue,
+                PropertyType.STRING));
-            doc.add(createFieldWithoutNorms(fieldName, normValue, false));
+            doc.add(createFieldWithoutNorms(fieldName, normValue,
+                    PropertyType.NAME));
+
+    /**
+     * Adds a {@link FieldNames#PROPERTY_LENGTHS} field to <code>document</code>
+     * with a named length value.
+     *
+     * @param doc          the lucene document.
+     * @param propertyName the property name.
+     * @param value        the internal value.
+     */
+    protected void addLength(Document doc,
+                             String propertyName,
+                             InternalValue value) {
+        long length;
+        if (value.getType() == PropertyType.BINARY) {
+            length = value.getBLOBFileValue().getLength();
+        } else if (value.getType() == PropertyType.NAME
+                || value.getType() == PropertyType.PATH) {
+            // TODO https://jsr-283.dev.java.net/issues/show_bug.cgi?id=464
+            return;
+        } else {
+            length = value.toString().length();
+        }
+        doc.add(new Field(FieldNames.PROPERTY_LENGTHS,
+                FieldNames.createNamedLength(propertyName, length),
+                Field.Store.NO, Field.Index.NO_NORMS));
+    }
