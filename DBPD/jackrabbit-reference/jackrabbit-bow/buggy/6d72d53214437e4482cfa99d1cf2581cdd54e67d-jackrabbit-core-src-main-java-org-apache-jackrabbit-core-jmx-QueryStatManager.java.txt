JCR-3154 Stats for Queries continued

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1205199 13f79535-47bb-0310-9956-ffa450edef68

-import java.util.Arrays;
-import java.util.Collections;
-import java.util.Comparator;
-
-import org.apache.jackrabbit.core.stats.QueryStatDtoComparator;
-    private final static Comparator<QueryStatDto> comparatorRev = Collections
-            .reverseOrder(new QueryStatDtoComparator());
-
-    public int getQueueSize() {
+    public int getSlowQueriesQueueSize() {
-    public void setQueueSize(int size) {
+    public void setSlowQueriesQueueSize(int size) {
-    public void clearQueue() {
+    public void clearSlowQueriesQueue() {
-    public QueryStatDto[] getTopQueries() {
-        QueryStatDto[] top = this.queryStat.getSlowQueries();
-        Arrays.sort(top, comparatorRev);
-        for (int i = 0; i < top.length; i++) {
-            top[i].setPosition(i + 1);
-        }
-        return top;
+    public int getPopularQueriesQueueSize() {
+        return queryStat.getPopularQueriesQueueSize();
-    public TabularData getQueries() {
+    public void setPopularQueriesQueueSize(int size) {
+        queryStat.setPopularQueriesQueueSize(size);
+    }
+
+    public void clearPopularQueriesQueue() {
+        queryStat.clearPopularQueriesQueue();
+    }
+
+    public TabularData getSlowQueries() {
+        return asTabularData(queryStat.getSlowQueries());
+    }
+
+    public TabularData getPopularQueries() {
+        return asTabularData(queryStat.getPopularQueries());
+    }
+
+    private TabularData asTabularData(QueryStatDto[] data) {
-            for (QueryStatDto q : getTopQueries()) {
+            for (QueryStatDto q : data) {
-                "language", "statement", "creationTime" };
+                "occurrenceCount", "language", "statement", "creationTime" };
-                "language", "statement", "creationTime" };
+                "occurrenceCount", "language", "statement", "creationTime" };
-                SimpleType.LONG, SimpleType.STRING, SimpleType.STRING,
-                SimpleType.STRING };
+                SimpleType.LONG, SimpleType.INTEGER, SimpleType.STRING,
+                SimpleType.STRING, SimpleType.STRING };
-                    q.getLanguage(), q.getStatement(), q.getCreationTime() };
+                    q.getOccurrenceCount(), q.getLanguage(), q.getStatement(),
+                    q.getCreationTime() };
+
