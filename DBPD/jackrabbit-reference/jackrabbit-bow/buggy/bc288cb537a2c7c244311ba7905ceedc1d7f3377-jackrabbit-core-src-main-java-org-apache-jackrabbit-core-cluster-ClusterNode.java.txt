JCR-1734 - Generated cluster node id should be persisted

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@695821 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.uuid.UUID;
+
+
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileReader;
+import java.io.FileWriter;
+import java.io.IOException;
+    /** Cluster node id file. */
+    private static final String CLUSTER_NODE_ID_FILE = "cluster_node.id";
+
-            
+
-     * 
+     *
-     * @param id configured id, <code>null</code> to take random id
+     * @param id configured id, <code>null</code> to generate a unique id
-    private String getClusterNodeId(String id) {
+    private String getClusterNodeId(String id) throws ClusterException {
-                id = toHexString((short) (Math.random() * (Short.MAX_VALUE - Short.MIN_VALUE)));
+                try {
+                    id = getClusterNodeIdFromFile();
+                } catch (IOException e) {
+                    throw new ClusterException(e.getMessage(), e.getCause());
+                }
+     * Return a cluster node from a file, creating it if necessary.
+     *
+     * @return stored or generated cluster id
+     * @throws IOException if an I/O error occurs
+     */
+    protected String getClusterNodeIdFromFile() throws IOException {
+        String filename = clusterContext.getRepositoryHome() + File.separator + CLUSTER_NODE_ID_FILE;
+        File f = new File(filename);
+
+        if (f.exists() && f.canRead()) {
+            BufferedReader reader = null;
+
+            try {
+                reader = new BufferedReader(new FileReader(f));
+                return reader.readLine();
+            } finally {
+                if (reader != null) {
+                    reader.close();
+                }
+            }
+        }
+
+        FileWriter writer = null;
+        String id = UUID.randomUUID().toString();
+
+        try {
+            writer = new FileWriter(f);
+            writer.write(id);
+        } finally {
+            if (writer != null) {
+                writer.close();
+            }
+        }
+        return id;
+
+    }
+
+    /**
