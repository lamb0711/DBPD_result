fixed concurrency issue reported by walter raboch:
http://www.mail-archive.com/jackrabbit-dev@incubator.apache.org/msg02127.html

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@233511 13f79535-47bb-0310-9956-ffa450edef68

+    private static long LAST_MOD_COUNT = 1;
+
-    protected long lastModified;
-
+    private transient long modCount;
-            Collections.synchronizedMap(new ReferenceMap(ReferenceMap.WEAK, ReferenceMap.WEAK));
+            Collections.synchronizedMap(
+                    new ReferenceMap(ReferenceMap.WEAK, ReferenceMap.WEAK));
-        // @todo use modification count instead of ms (not precise enough)
-        lastModified = System.currentTimeMillis();
+        modCount = 0;
-     * @param initialStatus  the initial status of the new <code>ItemState</code> instance
+     * @param initialStatus the initial status of the new <code>ItemState</code> instance
-        lastModified = state.getLastModified();
+     * Returns the modification count.
+     * @return the modification count.
+     */
+    long getModCount() {
+        return modCount;
+    }
+
+    /**
+     * Updates the modification count.
+     */
+    synchronized void touch() {
+        modCount = LAST_MOD_COUNT++;
+    }
+
+    /**
+            // sync modification count
+            modCount = overlayedState.getModCount();
-     * Called by <code>TransientItemStateManager</code> when this item state
-     * is disposed.
+     * Determines whether this item state has become stale.
+     * @return true if this item state has become stale, false otherwise.
+     */
+    boolean isStale() {
+        return overlayedState != null && modCount != overlayedState.getModCount();
+    }
+
+    /**
+     * Called by <code>TransientItemStateManager</code> and
+     * <code>LocalItemStateManager</code> when this item state has been disposed.
-     * Returns the timestamp when this item state was last modified.
-     *
-     * @return the timestamp when this item state was last modified.
-     */
-    public long getLastModified() {
-        return lastModified;
-    }
-
-    /**
+        pull();
-        if (isTransient || status != STATUS_EXISTING) {
+        if (isTransient) {
-        if (isTransient || status != STATUS_EXISTING) {
+        if (isTransient) {
