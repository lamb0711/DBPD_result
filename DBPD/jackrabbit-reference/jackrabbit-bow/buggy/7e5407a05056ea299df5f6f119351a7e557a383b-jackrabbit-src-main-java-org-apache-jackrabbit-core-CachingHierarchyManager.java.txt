[JCR-317] replace UUID strings by UUID classes in NodeId, etc..

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@378221 13f79535-47bb-0310-9956-ffa450edef68

-     * @param rootNodeUUID root node UUID
+     * @param rootNodeId   root node id
-    public CachingHierarchyManager(String rootNodeUUID,
+    public CachingHierarchyManager(NodeId rootNodeId,
-        super(rootNodeUUID, provider, nsResolver);
+        super(rootNodeId, provider, nsResolver);
-            LRUEntry entry = (LRUEntry) idCache.get(modified.getId());
+            LRUEntry entry = (LRUEntry) idCache.get(modified.getNodeId());
-                if (childEntry != null && !cne.getUUID().equals(childEntry.getUUID())) {
+                if (childEntry != null && !cne.getId().equals(childEntry.getId())) {
-    public void nodeAdded(NodeState state, QName name, int index, String uuid) {
+    public void nodeAdded(NodeState state, QName name, int index, NodeId id) {
-            Path path = Path.create(getPath(state.getId()), name, index, true);
-            insert(path, new NodeId(uuid));
+            Path path = Path.create(getPath(state.getNodeId()), name, index, true);
+            insert(path, id);
-            log.warn("Unable to get path of node " + state.getId() +
+            log.warn("Unable to get path of node " + state.getNodeId() +
-            log.warn("Unable to create path of " + uuid, e);
+            log.warn("Unable to create path of " + id, e);
-            log.warn("Unable to get path of " + state.getId(), e);
+            log.warn("Unable to get path of " + state.getNodeId(), e);
-            log.warn("Unable to get path of " + state.getId(), e);
+            log.warn("Unable to get path of " + state.getNodeId(), e);
-                    ((NodeState) state.getOverlayedState()).getChildNodeEntry(now.getUUID());
+                    ((NodeState) state.getOverlayedState()).getChildNodeEntry(now.getId());
-            nodeAdded(state, now.getName(), now.getIndex(), now.getUUID());
-            nodeRemoved(state, old.getName(), old.getIndex(), old.getUUID());
+            nodeAdded(state, now.getName(), now.getIndex(), now.getId());
+            nodeRemoved(state, old.getName(), old.getIndex(), old.getId());
-    public void nodeRemoved(NodeState state, QName name, int index, String uuid) {
+    public void nodeRemoved(NodeState state, QName name, int index, NodeId id) {
-            Path path = Path.create(getPath(state.getId()), name, index, true);
-            remove(path, new NodeId(uuid));
+            Path path = Path.create(getPath(state.getNodeId()), name, index, true);
+            remove(path, id);
-            log.warn("Unable to get path of node " + state.getId() +
+            log.warn("Unable to get path of node " + state.getNodeId() +
-            log.warn("Unable to create path of " + uuid, e);
+            log.warn("Unable to create path of " + id, e);
-            log.warn("Unable to get path of " + state.getId(), e);
+            log.warn("Unable to get path of " + state.getNodeId(), e);
-            log.warn("Unable to get path of " + state.getId(), e);
+            log.warn("Unable to get path of " + state.getNodeId(), e);
-        NodeId id = (NodeId) state.getId();
+        NodeId id = state.getNodeId();
-         * Return node UUID.
-         *
-         * @return node UUID
-         */
-        public String getUUID() {
-            return id.getUUID();
-        }
-
-        /**
