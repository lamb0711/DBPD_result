JCR-2715: Improved join query performance

Improved row handling

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1023787 13f79535-47bb-0310-9956-ffa450edef68

-        final double[] scores = new double[] { 1.0 };
-
-//        Iterator<Node> nodes =
-//            TreeTraverser.nodeIterator(session.getRootNode());
+        final String selectorName = selector.getSelectorName();
-                try {
-                    Value[] values = new Value[columnNames.length];
-                    Row row = new SimpleRow(
-                            columnNames, values, selectorNames,
-                            new Node[] { (Node) super.next() }, scores);
-                    for (int i = 0; i < values.length; i++) {
-                        values[i] = combine(evaluator.getValues(
-                                columnMap.get(columnNames[i]), row));
-                    }
-                    return row;
-                } catch (RepositoryException e) {
-                    throw new RuntimeException(e);
-                }
+                Node node = (Node) super.next();
+                return new SelectorRow(
+                        columnMap, evaluator, selectorName, node, 1.0);
-//        RangeIterator filtered = new FilteredRangeIterator(
-//                rows, getPredicate(selector, constraint));
-    private Value combine(Value[] values) throws RepositoryException {
-        if (values.length == 1) {
-            return values[0];
-        } else {
-            StringBuilder builder = new StringBuilder();
-            for (int i = 0; i < values.length; i++) {
-                if (i > 0) {
-                    builder.append('\n');
-                }
-                builder.append(values[i].getString());
-            }
-            return valueFactory.createValue(builder.toString());
-        }
-    }
-
