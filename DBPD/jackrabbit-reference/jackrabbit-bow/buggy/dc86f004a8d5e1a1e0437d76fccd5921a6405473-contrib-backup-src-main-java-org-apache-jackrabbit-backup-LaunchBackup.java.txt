JCR-442: Committed Nicolas' latest contrib/backup changes (patch-backup-060728.txt) with some modifications.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@426435 13f79535-47bb-0310-9956-ffa450edef68

-import java.io.FileReader;
+import javax.jcr.LoginException;
-import org.xml.sax.InputSource;
-	static BackupIOHandler h; 
-	RepositoryImpl repo;
+    static BackupIOHandler h; 
+    RepositoryImpl repo;
-    ManagerBackup backup;
+    BackupManager backup;
-     * LaunchBackup --zip myzip.zip --size 2 --conf backup.xml backup repository.xml repository/
-     * LaunchBackup --zip ./myzip.zip --size 2 --conf backup.xml restore repository.xml repository/
+     * LaunchBackup --zip myzip.zip --size 2 --conf backup.xml --login nico --password mlypass backup repository.xml repository/
+     * LaunchBackup --zip ./myzip.zip --size 2 --conf backup.xml --login nico --password  restore repository.xml repository/
-     * @throws SizeException 
-    public static void main(String[] args) throws RepositoryException, AccessDeniedException, IOException, ClassNotFoundException, InstantiationException, IllegalAccessException, SizeException {
+    public static void main(String[] args) throws RepositoryException, AccessDeniedException, IOException, ClassNotFoundException, InstantiationException, IllegalAccessException {
-    	String zipFile = null;
+        String zipFile = null;
+        String login = null;
+        String password = null;
-    	for (int i = 0; i < args.length; i++) {
-    		
+        for (int i = 0; i < args.length; i++) {
+            
-            	zipFile = args[i + 1];
-            	//We put it here because later we might offer other possibilities than only zip
-            	h = new ZipFileBackupIOHandler(zipFile);
+                zipFile = args[i + 1];
+                //We put it here because later we might offer other possibilities than only zip
+                LaunchBackup.h = new ZipFileBackupIOHandler(zipFile);
-            
-            if (args[i].equals("--size") && (h != null)){
-            	
-            	Integer max = (new Integer(args[i+ 1]));
-                h.setMaxFileSize(max.intValue());        	
-            }
-            
-
-            	
-            	confFile = args[i + 1];
-            	
+                
+                confFile = args[i + 1];
+                
-			if (args[i].equals("backup") && isRestore == false ){
-            	isBackup = true;
-            	repoConfFile = args[i + 1];
-            	home = args[i + 2];
-            	
+            if (args[i].equals("--login")){
+                
+                login = args[i + 1];
+                
+            }
+            
+            if (args[i].equals("--password")){
+                
+                password = args[i + 1];
+                
+            }
+            
+            if (args[i].equals("backup") && isRestore == false ){
+                isBackup = true;
+                repoConfFile = args[i + 1];
+                home = args[i + 2];
+                
-            	isRestore = true;
-            	repoConfFile = args[i + 1];
-            	home = args[i + 2];
+                isRestore = true;
+                repoConfFile = args[i + 1];
+                home = args[i + 2];
-		   		
-    	LaunchBackup launch = null;
-		
-    	//We need to shutdown properly the repository whatever happens
-		try {	
-	    	//Launch backup
-	    	if (isBackup) {
-                launch = new LaunchBackup(repoConfFile, home, confFile); 
+        
+        //Check if login and password are provided otherwise weird thing will happen
+        if (login == null || password == null) {
+            throw new LoginException();
+        }
+                   
+        LaunchBackup launch = null;
+        
+        //We need to shutdown properly the repository whatever happens
+        try {    
+            //Launch backup
+            if (isBackup) {
+                launch = new LaunchBackup(repoConfFile, home, confFile, login, password); 
-	    	}  	
-	    	//Launch restore
-	    	else if (isRestore) {
-	    	        launch = new LaunchBackup();
-	    			launch.restore(h);
-	    	}
-	    	//Launch nothing (if nothing specified
-	    	else {
-	    		usage();
-	    	}
-		}
-		finally
-		{
-			if (launch !=null)
-			    launch.shutdown();
-		}
+            }      
+            //Launch restore
+            else if (isRestore) {
+                    launch = new LaunchBackup();
+                    launch.restore(h);
+            }
+            //Launch nothing (if nothing specified
+            else {
+                usage();
+            }
+        }
+        finally
+        {
+            if (launch !=null)
+                launch.shutdown();
+        }
-	/**
+    /**
-     * @throws SizeException 
-    public LaunchBackup(String repoConfFile, String home, String backupConfFile) throws RepositoryException, ClassNotFoundException, InstantiationException, IllegalAccessException, SizeException, IOException {
-    	//Launch first the repository
-		this.repoConf = RepositoryConfig.create(repoConfFile, home);
-		this.repo = RepositoryImpl.create(this.repoConf);
+    public LaunchBackup(String repoConfFile, String home, String backupConfFile, String login, String password) throws RepositoryException, ClassNotFoundException, InstantiationException, IllegalAccessException, IOException {
+        //Launch first the repository
+        this.repoConf = RepositoryConfig.create(repoConfFile, home);
+        this.repo = RepositoryImpl.create(this.repoConf);
-		//Create the backupConfig object
-       
-		FileReader fr = new FileReader(backupConfFile);
-		InputSource xml = new InputSource(fr);
-		this.conf = BackupConfig.create(xml);
-		this.backup =  ManagerBackup.create(this.repo, this.conf);
+        //Create the backupConfig object
+        this.conf = BackupConfig.create(backupConfFile, repoConfFile, login, password);
+        this.backup =  BackupManager.create(this.repo, this.conf);
+        
-		this.repo.shutdown();		
-	}
+        this.repo.shutdown();        
+    }
