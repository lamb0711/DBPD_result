- resolving TODOs (retrieve group by ID)
- improved NodeResolver (replacing SessionImpl by Session/NamePathResolver pair)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@641898 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.SessionImpl;
+import org.apache.jackrabbit.spi.commons.conversion.NamePathResolver;
+import javax.jcr.Session;
-    TraversingNodeResolver(SessionImpl session) throws RepositoryException {
-        super(session);
+    TraversingNodeResolver(Session session, NamePathResolver resolver) throws RepositoryException {
+        super(session, resolver);
+    public Node findNode(Name nodeName, Name ntName) throws RepositoryException {
+        Node root = (Node) getSession().getItem(getSearchRoot(ntName));
+        return collectNode(nodeName, ntName, root.getNodes());
+    }
+
+    /**
+     * @inheritDoc
+     */
+
+    private Node collectNode(Name nodeName, Name ntName, NodeIterator nodes) {
+        while (nodes.hasNext()) {
+            NodeImpl node = (NodeImpl) nodes.nextNode();
+            try {
+                if (node.isNodeType(ntName) && nodeName.equals(node.getQName())) {
+                    return node;
+                }
+                if (node.hasNodes()) {
+                    return collectNode(nodeName, ntName, node.getNodes());
+                }
+            } catch (RepositoryException e) {
+                log.warn("Internal error while accessing node", e);
+            }
+        }
+        log.debug("Could not find a node matching name '" + nodeName + " and nodetype " + ntName);
+        return null;
+    }
+
-                log.warn("failed to access Node at " + e);
+                log.warn("Internal error while accessing node", e);
