JCR-2201: Implement QueryResult.getSelectorNames()

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@793507 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.query.Query;
-import javax.jcr.query.qom.QueryObjectModel;
-import javax.jcr.query.qom.Source;
-import javax.jcr.query.qom.Join;
-import javax.jcr.query.qom.Selector;
-import java.util.ArrayList;
+import java.util.Arrays;
-     * @param query         the JCR query.
-    public QueryInfoImpl(Query query,
-                         QueryResult result,
+    public QueryInfoImpl(QueryResult result,
-        this.selectorNames = getSelectorNames(query, result, resolver);
+        this.selectorNames = getSelectorNames(result, resolver);
-    private static Name[] getSelectorNames(Query query,
-                                           QueryResult result,
+    /**
+     * {@inheritDoc}
+     */
+    public Name[] getSelectorNames() {
+        Name[] names = new Name[selectorNames.length];
+        System.arraycopy(selectorNames, 0, names, 0, selectorNames.length);
+        return names;
+    }
+
+    private static Name[] getSelectorNames(QueryResult result,
-        List<String> sn = new ArrayList<String>();
-        if (query instanceof QueryObjectModel) {
-            QueryObjectModel qom = (QueryObjectModel) query;
-            collectSelectorNames(qom.getSource(), sn);
-        } else {
-            // TODO
-            // sn.addAll(Arrays.asList(result.getSelectorNames()));
-        }
+        List<String> sn = Arrays.asList(result.getSelectorNames());
-
-    private static void collectSelectorNames(Source source, List<String> sn) {
-        if (source instanceof Join) {
-            collectSelectorNames((Join) source, sn);
-        } else {
-            collectSelectorNames((Selector) source, sn);
-        }
-    }
-
-    private static void collectSelectorNames(Join join, List<String> sn) {
-        collectSelectorNames(join.getLeft(), sn);
-        collectSelectorNames(join.getRight(), sn);
-    }
-
-    private static void collectSelectorNames(Selector s, List<String> sn) {
-        sn.add(s.getSelectorName());
-    }
