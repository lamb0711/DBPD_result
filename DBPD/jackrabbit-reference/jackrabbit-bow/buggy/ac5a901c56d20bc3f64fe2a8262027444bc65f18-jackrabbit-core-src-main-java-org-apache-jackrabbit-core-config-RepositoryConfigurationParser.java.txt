JCR-1438: Replace Config classes with factories

Replace SearchConfig with a QueryHandlerFactory.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@816678 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.query.QueryHandler;
+import org.apache.jackrabbit.core.query.QueryHandlerContext;
+import org.apache.jackrabbit.core.query.QueryHandlerFactory;
-        // Optional search configuration
-        SearchConfig sc = parseSearchConfig(root);
+        // Query handler implementation
+        QueryHandlerFactory qhf = getQueryHandlerFactory(root);
-                maxIdleTime, template, vc, sc, cc, dsf, rlf, this);
+                maxIdleTime, template, vc, qhf, cc, dsf, rlf, this);
-        // Search implementation (optional)
-        SearchConfig sc = tmpParser.parseSearchConfig(root);
+        // Query handler implementation
+        QueryHandlerFactory qhf = tmpParser.getQueryHandlerFactory(root);
-                home, name, clustered, fsf, pmc, sc,
+                home, name, clustered, fsf, pmc, qhf,
-     * @return search configuration, or <code>null</code>
-     * @throws ConfigurationException if the configuration is broken
+     * @return query handler factory
-    protected SearchConfig parseSearchConfig(Element parent)
-            throws ConfigurationException {
+    protected QueryHandlerFactory getQueryHandlerFactory(final Element parent) {
-            Node child = children.item(i);
+            final Node child = children.item(i);
-                Element element = (Element) child;
+                return new QueryHandlerFactory() {
+                    public QueryHandler getQueryHandler(QueryHandlerContext context)
+                            throws RepositoryException {
+                        Element element = (Element) child;
-                // Search implementation class
-                String className = getAttribute(
-                        element, CLASS_ATTRIBUTE, DEFAULT_QUERY_HANDLER);
+                        // Optional file system implementation
+                        FileSystem fs = null;
+                        if (getElement(element, FILE_SYSTEM_ELEMENT, false) != null) {
+                            fs = getFileSystemFactory(
+                                    element, FILE_SYSTEM_ELEMENT).getFileSystem();
+                        }
-                // Search parameters
-                Properties parameters = parseParameters(element);
+                        // Search implementation class
+                        String className = getAttribute(
+                                element, CLASS_ATTRIBUTE, DEFAULT_QUERY_HANDLER);
+                        BeanConfig config = new BeanConfig(
+                                className, parseParameters(element));
-                // Optional file system implementation
-                FileSystemFactory fsf = null;
-                if (getElement(element, FILE_SYSTEM_ELEMENT, false) != null) {
-                    fsf = getFileSystemFactory(element, FILE_SYSTEM_ELEMENT);
-                }
-
-                return new SearchConfig(className, parameters, fsf);
+                        QueryHandler handler =
+                            (QueryHandler) config.newInstance();
+                        try {
+                            handler.init(fs, context);
+                            return handler;
+                        } catch (IOException e) {
+                            throw new RepositoryException(
+                                    "Unable to initialize query handler: " + handler, e);
+                        }
+                    }
+                };
