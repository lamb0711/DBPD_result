JCR-2087 Upgrade to Java 5 as the base platform

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@785540 13f79535-47bb-0310-9956-ffa450edef68

-    private final List events = new ArrayList();
+    private final List<EventState> events = new ArrayList<EventState>();
-        for (Iterator it = changes.modifiedStates(); it.hasNext();) {
-            ItemState state = (ItemState) it.next();
+        for (Iterator<ItemState> it = changes.modifiedStates(); it.hasNext();) {
+            ItemState state = it.next();
-                        
+
-                        Set mixins = oldParent.getMixinTypeNames();
+                        Set<Name> mixins = oldParent.getMixinTypeNames();
-                            for (Iterator removedNodes = parent.getRemovedChildNodeEntries().iterator(); removedNodes.hasNext();) {
-                                ChildNodeEntry child = (ChildNodeEntry) removedNodes.next();
+                            for (ChildNodeEntry child : parent.getRemovedChildNodeEntries()) {
-                                Set mixins = parent.getMixinTypeNames();
+                                Set<Name> mixins = parent.getMixinTypeNames();
-                List reordered = n.getReorderedChildNodeEntries();
+                List<ChildNodeEntry> reordered = n.getReorderedChildNodeEntries();
-                Set mixins = n.getMixinTypeNames();
+                Set<Name> mixins = n.getMixinTypeNames();
-                    for (Iterator ro = reordered.iterator(); ro.hasNext();) {
-                        ChildNodeEntry child = (ChildNodeEntry) ro.next();
+                    for (ChildNodeEntry child : reordered) {
-                        List cne = n.getChildNodeEntries();
+                        List<ChildNodeEntry> cne = n.getChildNodeEntries();
-                            beforeElem = getPathElement((ChildNodeEntry) cne.get(idx));
+                            beforeElem = getPathElement(cne.get(idx));
-                Set mixins = parent.getMixinTypeNames();
+                Set<Name> mixins = parent.getMixinTypeNames();
-        for (Iterator it = changes.deletedStates(); it.hasNext();) {
-            ItemState state = (ItemState) it.next();
+        for (Iterator<ItemState> it = changes.deletedStates(); it.hasNext();) {
+            ItemState state = it.next();
-                Set mixins = parent.getMixinTypeNames();
+                Set<Name> mixins = parent.getMixinTypeNames();
-                    Set mixins = n.getMixinTypeNames();
+                    Set<Name> mixins = n.getMixinTypeNames();
-        for (Iterator it = changes.addedStates(); it.hasNext();) {
-            ItemState state = (ItemState) it.next();
+        for (Iterator<ItemState> it = changes.addedStates(); it.hasNext();) {
+            ItemState state = it.next();
-                Set mixins = parent.getMixinTypeNames();
+                Set<Name> mixins = parent.getMixinTypeNames();
-                Set mixins = n.getMixinTypeNames();
+                Set<Name> mixins = n.getMixinTypeNames();
-    public void addAll(Collection c) {
+    public void addAll(Collection<EventState> c) {
-    Iterator iterator() {
+    Iterator<EventState> iterator() {
-    public List getEvents() {
+    public List<EventState> getEvents() {
-            for (Iterator added = n.getAddedShares().iterator(); added.hasNext(); ) {
-                NodeId parentId = (NodeId) added.next();
+            for (NodeId parentId : n.getAddedShares()) {
-            for (Iterator removed = n.getRemovedShares().iterator(); removed.hasNext(); ) {
-                NodeId parentId = (NodeId) removed.next();
+            for (NodeId parentId : n.getRemovedShares()) {
-     * Get the longest common path of all event state paths. 
-     * 
+     * Get the longest common path of all event state paths.
+     *
-                EventState state = (EventState) events.get(i);
+                EventState state = events.get(i);
