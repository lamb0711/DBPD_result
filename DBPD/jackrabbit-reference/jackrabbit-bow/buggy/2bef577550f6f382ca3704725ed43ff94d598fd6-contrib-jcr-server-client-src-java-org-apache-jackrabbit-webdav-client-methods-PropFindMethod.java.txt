JCR-258 - remove JDOM dependency from jcr-server contribution
JCR-295 - usage of Cache-Control header 
JCR-297 - log output while parsing xml
minor consistency issues and improvements

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368683 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.webdav.DavConstants;
+import org.apache.jackrabbit.webdav.xml.DomUtil;
-import org.jdom.Element;
-import org.jdom.Document;
+import org.apache.xml.serialize.XMLSerializer;
+import org.apache.xml.serialize.OutputFormat;
+import org.w3c.dom.Document;
+import org.w3c.dom.Element;
+
+import javax.xml.parsers.ParserConfigurationException;
+import java.io.IOException;
+import java.io.ByteArrayOutputStream;
-    public PropFindMethod(String uri) {
+    public PropFindMethod(String uri) throws IOException {
-    public PropFindMethod(String uri, DavPropertyNameSet propNameSet, int depth) {
+    public PropFindMethod(String uri, DavPropertyNameSet propNameSet, int depth)
+        throws IOException {
-    public PropFindMethod(String uri, int propfindType, int depth) {
+    public PropFindMethod(String uri, int propfindType, int depth)
+        throws IOException {
-    private PropFindMethod(String uri, int propfindType, DavPropertyNameSet propNameSet, int depth) {
+    private PropFindMethod(String uri, int propfindType, DavPropertyNameSet propNameSet,
+                           int depth) throws IOException {
-        setRequestHeader("Content-Type","text/xml; charset=UTF-8");
+
+        setRequestHeader(DavConstants.HEADER_CONTENT_TYPE, "text/xml; charset=UTF-8");
-        Element propfind = new Element(XML_PROPFIND, NAMESPACE);
+        try {
+            // create the document and attach the root element
+            Document document = BUILDER_FACTORY.newDocumentBuilder().newDocument();
+            Element propfind = DomUtil.createElement(document, XML_PROPFIND, NAMESPACE);
+            document.appendChild(propfind);
+
+            // fill the propfind element
-                propfind.addContent(new Element(XML_ALLPROP, NAMESPACE));
+                    propfind.appendChild(DomUtil.createElement(document, XML_ALLPROP, NAMESPACE));
-                propfind.addContent(new Element(XML_PROPNAME, NAMESPACE));
+                    propfind.appendChild(DomUtil.createElement(document, XML_PROPNAME, NAMESPACE));
-                    propfind.addContent(new Element(XML_PROP, NAMESPACE));
+                        propfind.appendChild(DomUtil.createElement(document, XML_PROP, NAMESPACE));
-                    propfind.addContent(propNameSet.toXml());
+                        propfind.appendChild(propNameSet.toXml(document));
-        Document propfindBody = new Document(propfind);
-        setRequestBody(propfindBody);
+
+            // set the request body
+            ByteArrayOutputStream out = new ByteArrayOutputStream();
+            OutputFormat format = new OutputFormat("xml", "UTF-8", true);
+            XMLSerializer serializer = new XMLSerializer(out, format);
+            serializer.asDOMSerializer().serialize(document);
+            setRequestBody(out.toString());
+
+        } catch (ParserConfigurationException e) {
+            throw new IOException(e.getMessage());
+        }
+    /**
+     * @see org.apache.commons.httpclient.HttpMethod#getName()
+     */
