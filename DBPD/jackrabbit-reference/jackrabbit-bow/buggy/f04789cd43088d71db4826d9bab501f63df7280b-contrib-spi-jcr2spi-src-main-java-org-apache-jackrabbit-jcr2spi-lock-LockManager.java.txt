work in progress

jcr2spi
- HierarchyManager: fixing methods with ItemId param
- HierarchyManagerImpl(s): removing unused methods
- ItemManagerImpl: replacing NodeId as cacheKey
- ItemImpl: remove ISM field

jcr2spi/xml
- ImporterImpl renamed to SessionImporter (used for s-import only)
- xml import: Use UUID String instead of creating NodeIds
- ReferenceChangeTracker: remove usage of spi NodeId

jcr2spi/state
- SessionItemStateManager: ValueFactory not needed since QPropertyDefinition returns qualified values.

jcr2spi/util
- LogUtil: add 'saveGetJCRName' utility method

jcr2spi/locking
- locking: LockManager to use NodeState instead of NodeId
- locking: removing locktoken from Session checks if Session is lock holder

jcr2spi/query
- NodeIteratorImpl: fix commented code, that allows to retrieve
  search results from IdIterator returned from QueryInfo
- minor reformatting, javadoc

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@430791 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.Node;
-import org.apache.jackrabbit.spi.NodeId;
+import org.apache.jackrabbit.jcr2spi.state.NodeState;
+
-
-    // TODO Review usage of NodeId
-
+    
-     * @param nodeId node id.
-     * @param node
+     * @param nodeState
-    // TODO review params
-    Lock lock(NodeId nodeId, Node node, boolean isDeep, boolean isSessionScoped)
+    Lock lock(NodeState nodeState, boolean isDeep, boolean isSessionScoped)
-     * @param nodeId
+     * @param nodeState
-    Lock getLock(NodeId nodeId) throws LockException, RepositoryException;
+    Lock getLock(NodeState nodeState) throws LockException, RepositoryException;
-     * @param nodeId
+     * @param nodeState
-    void unlock(NodeId nodeId) throws LockException, RepositoryException;
+    void unlock(NodeState nodeState) throws LockException, RepositoryException;
-     * @param nodeId
+     * @param nodeState
-    boolean isLocked(NodeId nodeId) throws RepositoryException;
+    boolean isLocked(NodeState nodeState) throws RepositoryException;
-     * @param nodeId to check
+     * @param nodeState
-    void checkLock(NodeId nodeId) throws LockException, RepositoryException;
+    void checkLock(NodeState nodeState) throws LockException, RepositoryException;
