- adapting Node.isCheckedOut() behaviour to spec 0.16 (--> no exception if non-versionable)

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@124087 13f79535-47bb-0310-9956-ffa450edef68

-        // check if versioning allows write
-        if (!safeIsCheckedOut()) {
+        // check if versioning allows write (only cheep call)
+        if (!isCheckedOut(false)) {
-        // check if versioning allows write
-        if (!safeIsCheckedOut()) {
+        // check if versioning allows write (only cheep call)
+        if (!isCheckedOut(false)) {
-        // check if versioning allows write
-        if (!safeIsCheckedOut()) {
+        // check if versioning allows write (only cheep call)
+        if (!isCheckedOut(false)) {
-        if (!safeIsCheckedOut()) {
+        if (!isCheckedOut(true)) {
-        if (!safeIsCheckedOut()) {
+        if (!isCheckedOut(true)) {
-        if (!safeIsCheckedOut()) {
+        if (!isCheckedOut(true)) {
+     * Same as {@link javax.jcr.Node#isCheckedOut()} but if <code>inherit</code>
+     * is <code>true</code>, a non-versionable node will return the checked out
+     * state of its parent.
+     *
+     * @param inherit
+     *
-    public boolean isCheckedOut()
-            throws UnsupportedRepositoryOperationException, RepositoryException {
-        checkVersionable();
-        return getProperty(VersionManager.PROPNAME_IS_CHECKED_OUT).getBoolean();
+    public boolean isCheckedOut(boolean inherit) throws RepositoryException {
+        // search nearest ancestor that is versionable
+        NodeImpl node = this;
+        while (!node.hasProperty(VersionManager.PROPNAME_IS_CHECKED_OUT)) {
+            if (node.isRepositoryRoot() || !inherit) {
+                return true;
+            }
+            node = (NodeImpl) node.getParent();
+        }
+        return node.getProperty(VersionManager.PROPNAME_IS_CHECKED_OUT).getBoolean();
-     * Same as {@link #isCheckedOut()} but without UnsupportedException.
+     * @see Node#isCheckedOut()
-    public boolean safeIsCheckedOut() throws RepositoryException {
-        // what if this node is not versionable but has OPV==Copy?
-        // do we need to search ancestors for a verionable node?
-        return hasProperty(VersionManager.PROPNAME_IS_CHECKED_OUT)
-                ? getProperty(VersionManager.PROPNAME_IS_CHECKED_OUT).getBoolean()
-                : true;
+    public boolean isCheckedOut() throws RepositoryException {
+        return isCheckedOut(false);
