JCR-2064 Add new JSR283 features to CND reader/writer
JCR-2153 Introduce QValueConstraint and change return type of QPropertyDefinition.getValueConstraints()
JCR-2158 Consolidate CND related classes from SPI and Core


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@785777 13f79535-47bb-0310-9956-ffa450edef68

- * Lexer
+ * Lexer of the CND definition.
+    public static final String[] QUERY = new String[]{"query", "q"};
-    public static final String[] COPY = new String[]{"copy", "Copy", "COPY"};
-    public static final String[] VERSION = new String[]{"version", "Version", "VERSION"};
-    public static final String[] INITIALIZE = new String[]{"initialize", "Initialize", "INITIALIZE"};
-    public static final String[] COMPUTE = new String[]{"compute", "Compute", "COMPUTE"};
-    public static final String[] IGNORE = new String[]{"ignore", "Ignore", "IGNORE"};
-    public static final String[] ABORT = new String[]{"abort", "Abort", "ABORT"};
+    public static final String[] COPY = new String[]{"COPY"};
+    public static final String[] VERSION = new String[]{"VERSION"};
+    public static final String[] INITIALIZE = new String[]{"INITIALIZE"};
+    public static final String[] COMPUTE = new String[]{"COMPUTE"};
+    public static final String[] IGNORE = new String[]{"IGNORE"};
+    public static final String[] ABORT = new String[]{"ABORT"};
-    public static final String[] STRING = {"string", "String", "STRING"};
-    public static final String[] BINARY = {"binary", "Binary", "BINARY"};
-    public static final String[] LONG = {"long", "Long", "LONG"};
-    public static final String[] DOUBLE = {"double", "Double", "DOUBLE"};
-    public static final String[] BOOLEAN = {"boolean", "Boolean", "BOOLEAN"};
-    public static final String[] DATE = {"date", "Date", "DATE"};
-    public static final String[] NAME = {"name", "Name", "NAME"};
-    public static final String[] PATH = {"path", "Path", "PATH"};
-    public static final String[] REFERENCE = {"reference", "Reference", "REFERENCE"};
-    public static final String[] WEAKREFERENCE = {"weakreference", "WeakReference", "WEAKREFERENCE"};
-    public static final String[] URI = {"uri", "Uri", "URI"};
-    public static final String[] DECIMAL = {"decimal", "Decimal", "DECIMAL"};
+    public static final String[] STRING = {"STRING"};
+    public static final String[] BINARY = {"BINARY"};
+    public static final String[] LONG = {"LONG"};
+    public static final String[] DOUBLE = {"DOUBLE"};
+    public static final String[] BOOLEAN = {"BOOLEAN"};
+    public static final String[] DATE = {"DATE"};
+    public static final String[] NAME = {"NAME"};
+    public static final String[] PATH = {"PATH"};
+    public static final String[] REFERENCE = {"REFERENCE"};
+    public static final String[] WEAKREFERENCE = {"WEAKREFERENCE"};
+    public static final String[] URI = {"URI"};
+    public static final String[] DECIMAL = {"DECIMAL"};
-    public static final String[] UNDEFINED = new String[]{"undefined", "Undefined", "UNDEFINED", "*"};
+    public static final String[] UNDEFINED = new String[]{"UNDEFINED", "*"};
-     * Constructor
-     * @param r
+     * Creates an unitialized lexer on top of the given reader.
+     * @param r the reader
+     * @param systemId informational systemid of the given stream
-     * @return
-     * @throws ParseException
+     * @return the next token
+     * @throws ParseException if an error during parsing occurs
+    /**
+     * Creates a failure exception including the current line number and systemid.
+     * @param message message
+     * @throws ParseException the created exception
+     */
+    /**
+     * Creates a failure exception including the current line number and systemid.
+     * @param message message
+     * @param e root cause
+     * @throws ParseException the created exception
+     */
+    /**
+     * Creates a failure exception including the current line number and systemid.
+     * @param e root cause
+     * @throws ParseException the created exception
+     */
