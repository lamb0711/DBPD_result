JCR-3535: backout incorrect/incomplete change 1459743

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1460703 13f79535-47bb-0310-9956-ffa450edef68

-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-import java.net.URISyntaxException;
-    private static Logger log = LoggerFactory.getLogger(URIResolverImpl.class);
-
-    /**
-     * @see <a href="https://issues.apache.org/jira/browse/JCR-3305">JCR-3305</a>: limit cache size
-     */
-    private static final int CACHESIZE = 10000;
-
-    private final Map<String, IdPathCache> idPathCaches = new HashMap<String, IdPathCache>();
+    private final Map<String, IdURICache> idURICaches = new HashMap<String, IdURICache>();
-    private IdPathCache getCache(String workspaceName) {
-        IdPathCache cache = idPathCaches.get(workspaceName);
-        if (cache != null) {
-            return cache;
+    private IdURICache getCache(String workspaceName) {
+        if (idURICaches.containsKey(workspaceName)) {
+            return idURICaches.get(workspaceName);
-            IdPathCache emptyCache = new IdPathCache(CACHESIZE);
-            idPathCaches.put(workspaceName, emptyCache);
-            return emptyCache;
+            IdURICache c = new IdURICache(getWorkspaceUri(workspaceName));
+            idURICaches.put(workspaceName, c);
+            return c;
-        IdPathCache cache = getCache(workspaceName);
+        IdURICache cache = getCache(workspaceName);
-            return getUri(cache.getPath(itemId));
+            return cache.getUri(itemId);
-                    uriBuffer.append(getUri(cache.getPath(uuidId)));
+                    uriBuffer.append(cache.getUri(uuidId));
-                            cache.add(getPath(ms.getResponses()[0].getHref()), uuidId);
+                            cache.add(ms.getResponses()[0].getHref(), uuidId);
-                cache.add(getPath(itemUri), itemId);
+                cache.add(itemUri, itemId);
-        IdPathCache cache = getCache(workspaceName);
+        IdURICache cache = getCache(workspaceName);
-        cache.add(getPath(response.getHref()), nodeId);
+        cache.add(response.getHref(), nodeId);
-        IdPathCache cache = getCache(workspaceName);
-        String path = getPath(response.getHref());
-        if (cache.containsPath(path)) {
-            ItemId id = cache.getItemId(path);
+        IdURICache cache = getCache(workspaceName);
+        if (cache.containsUri(response.getHref())) {
+            ItemId id = cache.getItemId(response.getHref());
-            cache.add(getPath(response.getHref()), propertyId);
+            cache.add(response.getHref(), propertyId);
+    void clearCacheEntries(ItemId itemId, SessionInfo sessionInfo) {
+        IdURICache cache = getCache(sessionInfo.getWorkspaceName());
+        if (cache.containsItemId(itemId)) {
+            cache.remove(itemId);
+        }
+    }
+
-        IdPathCache cache = getCache(sessionInfo.getWorkspaceName());
+        IdURICache cache = getCache(sessionInfo.getWorkspaceName());
-        IdPathCache cache = getCache(sessionInfo.getWorkspaceName());
-        String path = getPath(uri);
-        if (cache.containsPath(path)) {
+        IdURICache cache = getCache(sessionInfo.getWorkspaceName());
+        if (cache.containsUri(uri)) {
-            ItemId id = cache.getItemId(path);
+            ItemId id = cache.getItemId(uri);
-    /**
-     * @param uri the uri to be parsed
-     * @return the path (trailing slash removed) extracted from the given uri or <code>null</code> if the uri could not
-     *         be parsed.
-     */
-    private String getPath(String uri) {
-        try {
-            String path = new java.net.URI(uri).getPath();
-            if (path.endsWith("/") && ! "/".equals(path)) {
-                return path.substring(0, path.length() - 1);
-            }
-            return path;
-        } catch (URISyntaxException e) {
-            log.warn("Failed to parse the URI = {}", uri);
-        }
-        return null;
-    }
-
-    private String getUri(String path) {
-        String baseUri = getRepositoryUri();
-        if (baseUri.endsWith("/")) {
-            return baseUri.substring(0, baseUri.length() - 1) + Text.escapePath(path);
-        }
-        return baseUri + Text.escapePath(path);
-    }
-
-        IdPathCache cache = getCache(sessionInfo.getWorkspaceName());
-        String path = getPath(uri);
-        if (cache.containsPath(path)) {
-            ItemId id = cache.getItemId(path);
+        IdURICache cache = getCache(sessionInfo.getWorkspaceName());
+        if (cache.containsUri(uri)) {
+            ItemId id = cache.getItemId(uri);
-            cache.add(getPath(uri), propertyId);
+            cache.add(uri, propertyId);
