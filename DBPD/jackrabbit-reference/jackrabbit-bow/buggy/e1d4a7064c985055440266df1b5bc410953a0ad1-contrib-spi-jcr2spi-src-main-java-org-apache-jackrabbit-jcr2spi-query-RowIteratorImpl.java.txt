JCR-996 Name and Path interfaces in SPI
JCR-1169 Distribution of commons classes


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@586065 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.IllegalNameException;
-import org.apache.jackrabbit.name.NameFormat;
-import org.apache.jackrabbit.name.NamespaceResolver;
-import org.apache.jackrabbit.name.QName;
-import org.apache.jackrabbit.name.UnknownPrefixException;
-import org.apache.jackrabbit.value.ValueFormat;
+import org.apache.jackrabbit.conversion.NamePathResolver;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.value.ValueFormat;
-    private final QName[] columnNames;
+    private final Name[] columnNames;
-     * The <code>NamespaceResolver</code> of the user <code>Session</code>.
+     * The <code>NamePathResolver</code> of the user <code>Session</code>.
-    private final NamespaceResolver nsResolver;
+    private final org.apache.jackrabbit.conversion.NamePathResolver resolver;
-     * @param resolver  <code>NamespaceResolver</code> of the user
+     * @param nameResolver  <code>NameResolver</code> of the user
-    RowIteratorImpl(QueryInfo queryInfo, NamespaceResolver resolver, ValueFactory vFactory) {
+    RowIteratorImpl(QueryInfo queryInfo, NamePathResolver resolver, ValueFactory vFactory) {
-        this.nsResolver = resolver;
+        this.resolver = resolver;
-         * Map of select property <code>QName</code>s. Key: QName, Value:
+         * Map of select property <code>Name</code>s. Key: Name, Value:
-                                qVals[i], nsResolver, vFactory);
+                                qVals[i], resolver, vFactory);
-                QName prop = NameFormat.parse(propertyName, nsResolver);
+                Name prop = resolver.getQName(propertyName);
-            } catch (IllegalNameException e) {
-                throw new RepositoryException(e.getMessage(), e);
-            } catch (UnknownPrefixException e) {
+            } catch (org.apache.jackrabbit.conversion.NameException e) {
