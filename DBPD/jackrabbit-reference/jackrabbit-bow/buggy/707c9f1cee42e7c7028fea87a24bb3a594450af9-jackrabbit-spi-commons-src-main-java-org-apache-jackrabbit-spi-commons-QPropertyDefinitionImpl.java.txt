JCR-2490: jackrabbit wrongly think nodetype is changed on nodetype re-registration

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@988151 13f79535-47bb-0310-9956-ffa450edef68

-     * if the given object is a property defintion and has the same attributes
+     * if the given object is a property definition and has the same attributes
+
-                    && Arrays.equals(valueConstraints, other.getValueConstraints())
-                    && Arrays.equals(defaultValues, other.getDefaultValues())
-                    && Arrays.equals(availableQueryOperators, other.getAvailableQueryOperators());
+                    && (valueConstraints == null || other.getValueConstraints() == null) ? (valueConstraints == other.getValueConstraints())
+                        : new HashSet(Arrays.asList(valueConstraints)).equals(new HashSet(Arrays.asList(other.getValueConstraints())))
+                    && (defaultValues == null || other.getDefaultValues() == null) ? (defaultValues == other.getDefaultValues())
+                        : new HashSet(Arrays.asList(defaultValues)).equals(new HashSet(Arrays.asList(other.getDefaultValues())))
+                    && new HashSet(Arrays.asList(availableQueryOperators)).equals(new HashSet(Arrays.asList(other.getAvailableQueryOperators())));
-     * Overwrites {@link QItemDefinitionImpl#hashCode()}.
+     * Overrides {@link QItemDefinitionImpl#hashCode()}.
-     * @return the hashcode
+     * @return the hash code
-            // build hashCode (format: <declaringNodeType>/<name>/<requiredType>/<multiple>)
-            StringBuffer sb = new StringBuffer();
-
-            sb.append(getDeclaringNodeType().toString());
-            sb.append('/');
-            if (definesResidual()) {
-                sb.append('*');
-            } else {
-                sb.append(getName().toString());
-            }
-            sb.append('/');
-            sb.append(requiredType);
-            sb.append('/');
-            sb.append(multiple ? 1 : 0);
-            sb.append('/');
-            sb.append(fullTextSearchable ? 1 : 0);
-            sb.append('/');
-            sb.append(queryOrderable ? 1 : 0);
-            sb.append('/');
-            Set<String> s = new HashSet<String>();
-            String[] names = getAvailableQueryOperators();
-            s.addAll(Arrays.asList(names));
-            sb.append(s.toString());
-
-            hashCode = sb.toString().hashCode();
+            int h = super.hashCode();
+            h = 37 * h + requiredType;
+            h = 37 * h + (multiple ? 11 : 43);
+            h = 37 * h + (queryOrderable ? 11 : 43);
+            h = 37 * h + (fullTextSearchable ? 11 : 43);
+            h = 37 * h + ((valueConstraints != null) ? new HashSet(Arrays.asList(valueConstraints)).hashCode() : 0);
+            h = 37 * h + ((defaultValues != null) ? new HashSet(Arrays.asList(defaultValues)).hashCode() : 0);
+            h = 37 * h + new HashSet(Arrays.asList(availableQueryOperators)).hashCode();
+            hashCode = h;
-     * Convers JCR {@link Value}s to {@link QValue}s.
+     * Converts JCR {@link Value}s to {@link QValue}s.
-        QValue[] defaultValues = null;
-            defaultValues = new QValue[values.length];
+            QValue[] defaultValues = new QValue[values.length];
+            return defaultValues;
+        }  else {
+            return null;
-        return defaultValues;
