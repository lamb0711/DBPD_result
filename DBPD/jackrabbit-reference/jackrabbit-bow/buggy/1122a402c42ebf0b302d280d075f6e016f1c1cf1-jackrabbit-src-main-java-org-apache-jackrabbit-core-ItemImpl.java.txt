JCR-288: inconsistent session state after Item/Session.save() throwing ReferentialIntegrityException

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@355510 13f79535-47bb-0310-9956-ffa450edef68

+    private void restoreTransientItems(Iterator iter)
+            throws RepositoryException {
+
+        // walk through list of transient states and reapply transient changes
+        while (iter.hasNext()) {
+            ItemState itemState = (ItemState) iter.next();
+            ItemImpl item = itemMgr.getItem(itemState.getId());
+            if (!item.isTransient()) {
+                // reapply transient changes (i.e. undo effect of item.makePersistent())
+                if (item.isNode()) {
+                    NodeImpl node = (NodeImpl) item;
+                    node.restoreTransient((NodeState) itemState);
+                } else {
+                    PropertyImpl prop = (PropertyImpl) item;
+                    prop.restoreTransient((PropertyState) itemState);
+                }
+            }
+        }
+    }
+
+
+                    // JCR-288: if an exception has been thrown during
+                    // update() the transient changes have already been
+                    // applied by persistTransientItems() and we need to
+                    // restore transient state, i.e. undo the effect of
+                    // persistTransientItems()
+                    restoreTransientItems(dirty.iterator());
