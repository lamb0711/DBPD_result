Implemented support for value comparison and general comparison using multi valued properties.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@126294 13f79535-47bb-0310-9956-ffa450edef68

+import javax.jcr.NamespaceException;
+        String mvpField = "";
+            StringBuffer tmp = new StringBuffer();
+            tmp.append(nsMappings.getPrefix(node.getProperty().getNamespaceURI()));
+            tmp.append(':').append(FieldNames.MVP_PREFIX);
+            tmp.append(node.getProperty().getLocalName());
+            mvpField = tmp.toString();
+        } catch (NamespaceException e) {
+            // should never happen
+            exceptions.add(e);
-            case Constants.OPERATION_EQ:	// =
+            case Constants.OPERATION_EQ_VALUE:      // =
-            case Constants.OPERATION_GE:	// >=
+            case Constants.OPERATION_EQ_GENERAL:    // =
+                // search in single and multi valued properties
+                BooleanQuery or = new BooleanQuery();
+                or.add(new TermQuery(new Term(field, stringValue)), false, false);
+                or.add(new TermQuery(new Term(mvpField, stringValue)), false, false);
+                query = or;
+                break;
+            case Constants.OPERATION_GE_VALUE:      // >=
-            case Constants.OPERATION_GT:	// >
+            case Constants.OPERATION_GT_VALUE:      // >
-            case Constants.OPERATION_LE:	// <=
+            case Constants.OPERATION_LE_VALUE:      // <=
-            case Constants.OPERATION_LIKE:	// LIKE
+            case Constants.OPERATION_LIKE:          // LIKE
-            case Constants.OPERATION_LT:	// <
+            case Constants.OPERATION_LT_VALUE:      // <
-            case Constants.OPERATION_NE:	// !=
+            case Constants.OPERATION_NE_VALUE:      // !=
+            case Constants.OPERATION_NE_GENERAL:    // !=
+                // search in single and multi valued properties
+                notQuery = new BooleanQuery();
+                notQuery.add(new MatchAllQuery(field), false, false);
+                notQuery.add(new MatchAllQuery(mvpField), false, false);
+                notQuery.add(new TermQuery(new Term(field, stringValue)), false, true);
+                notQuery.add(new TermQuery(new Term(mvpField, stringValue)), false, true);
+                query = notQuery;
+                break;
