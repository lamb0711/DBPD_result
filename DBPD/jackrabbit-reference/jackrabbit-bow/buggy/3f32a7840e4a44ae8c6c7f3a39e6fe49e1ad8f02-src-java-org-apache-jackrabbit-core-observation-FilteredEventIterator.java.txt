Initial checkin of QueryManager with support for JCRQL (search implementation is not complete, some features are missing: searching for distinct same name sibling, sorting not yet implemented, indexing contains potential for optimizing)

Changed observation to support SynchronousEventListeners. The search registers itself as synchronous event listener. Also changed access checking on events sent out, because checking access on removed nodes need to be performed before they actually get removed.

Extended config.xml, which allows now to specify an index location for the QueryManager.

Added jar files needed for search.

git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@47399 13f79535-47bb-0310-9956-ffa450edef68

+import java.util.Set;
+    private final Set denied;
+
-     * @param c      an unmodifiable Collection of
-     *               {@link javax.jcr.observation.Event}s.
-     * @param filter only event that pass the filter will be
-     *               dispatched to the event listener.
+     * @param c      an unmodifiable Collection of {@link javax.jcr.observation.Event}s.
+     * @param filter only event that pass the filter will be dispatched to the
+     *               event listener.
+     * @param denied <code>Set</code> of denied <code>EventState</code>s
+     *               rejected by the <code>AccessManager</code>. If
+     *               <code>null</code> no <code>EventState</code> is denied.
-    public FilteredEventIterator(EventStateCollection c, EventFilter filter) {
+    public FilteredEventIterator(EventStateCollection c,
+				 EventFilter filter,
+				 Set denied) {
+	this.denied = denied;
-	    try {
-		next = filter.blocks(state) ? null : new EventImpl(filter.getSession(),
-			filter.getItemManager(),
-			state);
-	    } catch (RepositoryException e) {
-		log.error("Exception while applying filter.", e);
+	    // check denied set
+	    if (denied == null || !denied.contains(state)) {
+		try {
+		    next = filter.blocks(state) ? null : new EventImpl(filter.getSession(),
+			    /* filter.getItemManager(), */
+			    state);
+		} catch (RepositoryException e) {
+		    log.error("Exception while applying filter.", e);
+		}
