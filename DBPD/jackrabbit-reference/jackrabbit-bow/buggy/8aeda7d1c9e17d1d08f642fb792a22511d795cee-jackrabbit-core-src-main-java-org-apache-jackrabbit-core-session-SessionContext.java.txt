JCR-2887 : Split PrivilegeRegistry in a per-session manager instance and a repository level registry [work in progress]
JCR-2774 : Access control for repository level API operations


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1177668 13f79535-47bb-0310-9956-ffa450edef68

-import javax.jcr.NamespaceException;
-import javax.jcr.RepositoryException;
-import javax.jcr.ValueFactory;
-
+import org.apache.jackrabbit.core.security.authorization.Permission;
+import javax.jcr.AccessDeniedException;
+import javax.jcr.NamespaceException;
+import javax.jcr.NamespaceRegistry;
+import javax.jcr.RepositoryException;
+import javax.jcr.UnsupportedRepositoryOperationException;
+import javax.jcr.ValueFactory;
+
+     * The namespace registry exposed for this session context that includes
+     * permission checks.
+     */
+    private final NamespaceRegistry nsRegistry;
+
+    /**
+        this.nsRegistry = new PermissionAwareNamespaceRegistry();
+   /**
+     * Returns a namespace registry instance which asserts that the editing
+     * session is allowed to modify the namespace registry.
+     *
+     * @return
+     */
+    public NamespaceRegistry getNamespaceRegistry() {
+        return nsRegistry;
+    }
+
+    //--------------------------------------------------------------------------
+    /**
+     * Permission aware namespace registry implementation that makes sure that
+     * modifications of the namespace registry are only allowed if the editing
+     * session has the corresponding permissions.
+     */
+    private class PermissionAwareNamespaceRegistry implements NamespaceRegistry {
+
+        private final NamespaceRegistry nsRegistry = repositoryContext.getNamespaceRegistry();        
+
+        public void registerNamespace(String prefix, String uri) throws NamespaceException, UnsupportedRepositoryOperationException, AccessDeniedException, RepositoryException {
+            session.getAccessManager().checkRepositoryPermission(Permission.NAMESPACE_MNGMT);
+            nsRegistry.registerNamespace(prefix, uri);
+        }
+
+        public void unregisterNamespace(String prefix) throws NamespaceException, UnsupportedRepositoryOperationException, AccessDeniedException, RepositoryException {
+            session.getAccessManager().checkRepositoryPermission(Permission.NAMESPACE_MNGMT);
+            nsRegistry.unregisterNamespace(prefix);
+        }
+
+        public String[] getPrefixes() throws RepositoryException {
+            return nsRegistry.getPrefixes();
+        }
+
+        public String[] getURIs() throws RepositoryException {
+            return nsRegistry.getURIs();
+        }
+
+        public String getURI(String prefix) throws NamespaceException, RepositoryException {
+            return nsRegistry.getURI(prefix);
+        }
+
+        public String getPrefix(String uri) throws NamespaceException, RepositoryException {
+            return nsRegistry.getPrefix(uri);
+        }
+    }
+
