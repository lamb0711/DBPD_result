re-implementing Workspace.importXML [work in progress...]




git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@159394 13f79535-47bb-0310-9956-ffa450edef68

+                    ChildNodeDef def =
+                            wsp.findApplicableNodeDefinition(nodeName, ntName, parent);
+                    if (def.isProtected()) {
+                        // skip protected node
+                        parents.push(null); // push null onto stack for skipped node
+                        log.debug("skipping protected node " + nodeName);
+                        return;
+                    }
+
+                PropDef def = null;
-                    PropDef propDef = ntReg.getPropDef(existing.getDefinitionId());
-                    if (propDef.isProtected()) {
+                    def = ntReg.getPropDef(existing.getDefinitionId());
+                    if (def.isProtected()) {
-                    if (propDef.isAutoCreate() && (existing.getType() == type
+                    if (def.isAutoCreate() && (existing.getType() == type
-                            && propDef.isMultiple() == existing.isMultiValued()) {
+                            && def.isMultiple() == existing.isMultiValued()) {
+                    // find applicable definition
+
+                    // multi- or single-valued property?
+                    if (vals.length == 1) {
+                        // could be single- or multi-valued (n == 1)
+                        try {
+                            // try single-valued
+                            def = wsp.findApplicablePropertyDefinition(propName,
+                                    type, false, parent);
+                        } catch (ConstraintViolationException cve) {
+                            // try multi-valued
+                            def = wsp.findApplicablePropertyDefinition(propName,
+                                    type, true, parent);
+                        }
+                    } else {
+                        // can only be multi-valued (n == 0 || n > 1)
+                        def = wsp.findApplicablePropertyDefinition(propName,
+                                type, true, parent);
+                    }
+
+                    if (def.isProtected()) {
+                        // skip protected property
+                        log.debug("skipping protected property " + propName);
+                        continue;
+                    }
+
-                    prop = createProperty(node, propName, type, vals.length);
+                    prop = createProperty(node, propName, type, def);
-                PropDef propDef = ntReg.getPropDef(prop.getDefinitionId());
-
-                if ((vals.length == 0 || vals.length > 1) && !propDef.isMultiple()) {
+                if ((vals.length == 0 || vals.length > 1) && !def.isMultiple()) {
-                if (propDef.getRequiredType() != PropertyType.UNDEFINED
-                        && propDef.getRequiredType() != type) {
+                if (def.getRequiredType() != PropertyType.UNDEFINED
+                        && def.getRequiredType() != type) {
-                                        propDef.getRequiredType());
+                                        def.getRequiredType());
