JCR-2864: Use out-of-process text extraction

Add a forkJavaCommand configuration option that enables forked parsing.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1091439 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.tika.exception.TikaException;
+import org.apache.tika.fork.ForkParser;
+import org.apache.tika.metadata.Metadata;
+import org.apache.tika.parser.ParseContext;
+import org.xml.sax.ContentHandler;
+     * Java command used to fork external parser processes,
+     * or <code>null</code> (the default) for in-process text extraction.
+     */
+    private String forkJavaCommand = null;
+
+    /**
+     * Returns the java command used to fork external parser processes,
+     * or <code>null</code> (the default) for in-process text extraction.
+     *
+     * @return fork java command
+     */
+    public String getForkJavaCommand() {
+        return forkJavaCommand;
+    }
+
+    /**
+     * Sets the java command used to fork external parser processes.
+     *
+     * @param command fork java command,
+     *                or <code>null</code> for in-process extraction
+     */
+    public void setForkJavaCommand(String command) {
+        this.forkJavaCommand = command;
+    }
+
+    /**
-            parser = new AutoDetectParser(config);
+            if (forkJavaCommand == null) {
+                parser = new AutoDetectParser(config);
+            } else {
+                ForkParser forkParser = new ForkParser(
+                        SearchIndex.class.getClassLoader(),
+                        new AutoDetectParser(config));
+                forkParser.setJavaCommand(forkJavaCommand);
+                forkParser.setPoolSize(extractorPoolSize);
+                parser = forkParser;
+            }
