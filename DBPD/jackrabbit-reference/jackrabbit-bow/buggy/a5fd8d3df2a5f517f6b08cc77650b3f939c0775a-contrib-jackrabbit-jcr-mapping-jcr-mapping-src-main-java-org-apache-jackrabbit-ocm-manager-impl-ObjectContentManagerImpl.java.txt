* Remove fieldType. this attribute is not used in the object mapping. 
* Review one constructor in ObjectContentManagerImpl.

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@563252 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.ocm.lock.Lock;
-import org.apache.jackrabbit.ocm.lock.Lock;
-     * <code>Mapper</code>, <code>QueryManager</code> and a default 
-     * <code>ObjectConverter</code>
+     * <code>Mapper</code>, and a <code>Session</code>
-     * @param queryManager the query manager to used
-    public ObjectContentManagerImpl(Mapper mapper,
-                                  QueryManager queryManager,
-                                  Session session) {
-        this.mapper = mapper;
-        this.session = session;
-        this.requestObjectCache = new RequestObjectCacheImpl();        
-        this.objectConverter = new ObjectConverterImpl(mapper, new DefaultAtomicTypeConverterProvider(), new ProxyManagerImpl(), requestObjectCache);
-        this.queryManager = queryManager;
-        
-        RepositoryUtil.setupSession(session);
+    public ObjectContentManagerImpl(Session session, Mapper mapper) {
+        try 
+        {
+			this.session = session;
+			this.mapper = mapper;
+			// Use default setting for the following dependencies
+			DefaultAtomicTypeConverterProvider converterProvider = new DefaultAtomicTypeConverterProvider();
+			Map atomicTypeConverters = converterProvider.getAtomicTypeConverters();
+			this.queryManager = new QueryManagerImpl(mapper, atomicTypeConverters, session.getValueFactory());
+			this.requestObjectCache = new RequestObjectCacheImpl();        
+			this.objectConverter = new ObjectConverterImpl(mapper, converterProvider, new ProxyManagerImpl(), requestObjectCache);
+			
+			RepositoryUtil.setupSession(session);
+		} 
+        catch (RepositoryException e) 
+        {
+            throw new org.apache.jackrabbit.ocm.exception.RepositoryException(
+                    "Impossible to instantiate the object content manager", e);
+
+		}
