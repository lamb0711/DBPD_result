JCR-1593 JSR 283: Simple versioning
JCR-2058 JSR 283: VersionManager and new versioning methods


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@765556 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.api.jsr283.version.Version;
+import org.apache.jackrabbit.api.jsr283.version.VersionHistory;
+import javax.jcr.Node;
-import javax.jcr.version.Version;
-import javax.jcr.version.VersionHistory;
-    public Version[] getSuccessors() throws RepositoryException {
+    public javax.jcr.version.Version[] getSuccessors() throws RepositoryException {
-    public Version[] getPredecessors() throws RepositoryException {
+    public javax.jcr.version.Version[] getPredecessors() throws RepositoryException {
-    public VersionHistory getContainingHistory() throws RepositoryException {
+    public Version getLinearSuccessor() throws RepositoryException {
+        // get base version. this can certainly be optimized
+        InternalVersionHistory vh = ((VersionHistoryImpl) getContainingHistory())
+                .getInternalVersionHistory();
+        NodeId id = new NodeId(vh.getVersionableUUID());
+        Node vn = session.getNodeById(id);
+        InternalVersion base = ((VersionImpl) vn.getBaseVersion()).getInternalVersion();
+
+        InternalVersion suc = getInternalVersion().getLinearSuccessor(base);
+        return (Version) session.getNodeById(suc.getId());
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public javax.jcr.version.Version getLinearPredecessor() throws RepositoryException {
+        InternalVersion pred = getInternalVersion().getLinearPredecessor();
+        return (Version) session.getNodeById(pred.getId());
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public javax.jcr.version.VersionHistory getContainingHistory() throws RepositoryException {
-     * @return
-     * @throws javax.jcr.RepositoryException
+     * @return the internal frozen node
+     * @throws javax.jcr.RepositoryException if an error occurs
-    public InternalFrozenNode getFrozenNode() throws RepositoryException {
+    public InternalFrozenNode getInternalFrozenNode() throws RepositoryException {
+    public Node getFrozenNode() throws RepositoryException {
+        return session.getNodeById(getInternalVersion().getFrozenNodeId());
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+     * @throws RepositoryException if a repository error occurs
+     * @throws RepositoryException if a repository error occurs
