JCR-1334 Deadlock due different Thread access in same Transaction

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@734400 13f79535-47bb-0310-9956-ffa450edef68

+import org.apache.jackrabbit.core.TransactionContext;
+import javax.transaction.xa.Xid;
+
-    /**
-     * Lock to path map.
-     */
-    private final ReentrantLock lockMapLock = new ReentrantLock();
+    private final ReentrantLock lockMapLock = new ReentrantLock(){
+        
+        private Xid activeXid;
+        
+        public void acquire() throws InterruptedException {
+            if (Thread.interrupted()) throw new InterruptedException();
+            Thread caller = Thread.currentThread();
+            synchronized(this) {
+                boolean allow = TransactionContext.isCurrentXid(activeXid, caller == owner_);
+                if (allow) {
+                    ++holds_;
+                } else {
+                    try {  
+                        while (owner_ != null) 
+                            wait(); 
+                        owner_ = caller;
+                        activeXid = (Xid) TransactionContext.getCurrentXid();
+                        holds_ = 1;
+                    } catch (InterruptedException ex) {
+                        notify();
+                        throw ex;
+                    }
+                }
+            }
+        }
+        
+        public synchronized void release()  {
+            boolean allow = TransactionContext.isCurrentXid(activeXid, Thread.currentThread() == owner_);
+            if (!allow)
+                throw new Error("Illegal Lock usage"); 
+
+            if (--holds_ == 0) {
+                owner_ = null;
+                activeXid = null;
+                notify(); 
+            }
+        }       
+    };
