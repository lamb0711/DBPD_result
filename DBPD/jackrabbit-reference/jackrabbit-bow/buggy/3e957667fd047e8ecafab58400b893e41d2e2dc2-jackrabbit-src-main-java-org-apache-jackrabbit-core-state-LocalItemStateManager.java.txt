Make versioning transactional
- Added specialized XAVersion and XAVersionHistory objects that refresh their internal state when needed
- Defined new observation interface in order to have VersionManagerImpl use standard event dispatching
  instead of writing its own
- Added test cases verifying isolation of versioning operations in transactions


git-svn-id: https://svn.apache.org/repos/asf/incubator/jackrabbit/trunk@368026 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.core.WorkspaceImpl;
-import org.apache.jackrabbit.core.observation.ObservationManagerImpl;
+import org.apache.jackrabbit.core.observation.EventStateCollectionFactory;
-import javax.jcr.RepositoryException;
-     * Local WorkspaceImpl instance.
+     * Event state collection factory.
-    protected final WorkspaceImpl wspImpl;
+    protected final EventStateCollectionFactory factory;
-     * todo LocalItemStateManager without a wspImpl will not generate observation events!
-     *
-     * @param wspImpl        the workspace instance where this item state manager
-     *                       belongs to, or <code>null</code> if this item state manager is not
-     *                       associated with a workspace. This is the case for the version item state
-     *                       manager. Version item states are not associated with a specific workspace
-     *                       instance.
+     * @param factory event state collection factory
-                                 WorkspaceImpl wspImpl) {
+                                 EventStateCollectionFactory factory) {
-        this.wspImpl = wspImpl;
+        this.factory = factory;
-            throws ReferentialIntegrityException, StaleItemStateException,
-            ItemStateException {
+            throws ReferentialIntegrityException, StaleItemStateException, ItemStateException {
-        ObservationManagerImpl obsMgr = null;
-
-        try {
-            if (wspImpl != null) {
-                obsMgr = (ObservationManagerImpl) wspImpl.getObservationManager();
-            }
-        } catch (RepositoryException e) {
-            // should never get here
-            String msg = "ObservationManager unavailable";
-            log.error(msg);
-            throw new ItemStateException(msg, e);
-        }
-
-        sharedStateMgr.store(changeLog, obsMgr);
+        sharedStateMgr.update(changeLog, factory);
