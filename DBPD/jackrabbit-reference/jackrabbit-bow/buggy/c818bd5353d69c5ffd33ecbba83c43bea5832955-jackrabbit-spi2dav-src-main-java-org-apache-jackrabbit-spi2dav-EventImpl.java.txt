JCR-2108: JSR 283 Observation   (work in progress)

- adjust spi2dav


git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@781296 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.spi.Path;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.spi.NameFactory;
-import org.apache.jackrabbit.webdav.xml.DomUtil;
+import org.apache.jackrabbit.spi.Path;
+import org.apache.jackrabbit.spi.QValue;
+import org.apache.jackrabbit.spi.QValueFactory;
+import org.apache.jackrabbit.spi.commons.conversion.NamePathResolver;
+import org.apache.jackrabbit.spi.commons.name.NameFactoryImpl;
+import org.apache.jackrabbit.spi.commons.value.ValueFormat;
+import org.apache.jackrabbit.webdav.xml.DomUtil;
+import org.apache.jackrabbit.webdav.xml.ElementIterator;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import javax.jcr.PropertyType;
+import javax.jcr.RepositoryException;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Map;
+
+    private static Logger log = LoggerFactory.getLogger(EventImpl.class);
+
+    private static final NameFactory N_FACTORY = NameFactoryImpl.getInstance();
+
-                     Element eventElement) {
+                     Element eventElement, NamePathResolver resolver, QValueFactory qvFactory) {
-                DomUtil.getChildTextTrim(eventElement, XML_EVENTUSERID, NAMESPACE));
-        // TODO: extend jcr-server to deliver jsr 283 event information
+                DomUtil.getChildTextTrim(eventElement, XML_EVENTUSERID, NAMESPACE),
+                DomUtil.getChildTextTrim(eventElement, XML_EVENTUSERDATA, NAMESPACE),
+                Long.parseLong(DomUtil.getChildTextTrim(eventElement, XML_EVENTDATE, NAMESPACE)),
+                getEventInfo(DomUtil.getChildElement(eventElement, XML_EVENTINFO, NAMESPACE), resolver, qvFactory));
+
+    private static Map<Name, QValue> getEventInfo(Element infoElement,
+                                                  NamePathResolver resolver,
+                                                  QValueFactory qvFactory) {
+        if (infoElement == null) {
+            return Collections.EMPTY_MAP;
+        }
+
+        Map<Name, QValue> info = new HashMap();
+        ElementIterator it = DomUtil.getChildren(infoElement);
+        while (it.hasNext()) {
+            Element el = it.nextElement();
+            String uri = el.getNamespaceURI();
+            String localName = el.getLocalName();
+            String value = DomUtil.getTextTrim(el);
+            try {
+                Name n = N_FACTORY.create(uri, localName);
+                QValue qv = null;
+                if (value != null) {
+                    qv = ValueFormat.getQValue(value, PropertyType.PATH, resolver, qvFactory);
+                }
+                info.put(n, qv);
+            } catch (RepositoryException e) {
+                log.error("Internal Error: ", e.getMessage());
+            }
+        }
+        return info;
+    }
