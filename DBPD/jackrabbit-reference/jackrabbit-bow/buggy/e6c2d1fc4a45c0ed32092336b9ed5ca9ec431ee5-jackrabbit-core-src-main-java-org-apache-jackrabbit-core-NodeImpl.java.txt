JCR-890: concurrent read-only access to a session

Make NodeTypeManager a part of SessionContext.

Remove the session member variable from ItemImpl

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@985244 13f79535-47bb-0310-9956-ffa450edef68

-        NodeTypeRegistry ntReg = session.getNodeTypeManager().getNodeTypeRegistry();
+        NodeTypeRegistry ntReg = sessionContext.getNodeTypeRegistry();
-            return session.getQPath(relPath);
+            return sessionContext.getQPath(relPath);
-            String msg = "failed to resolve path " + relPath + " relative to " + this;
-            log.debug(msg);
-            throw new RepositoryException(msg, e);
+            throw new RepositoryException(
+                    "Failed to resolve path " + relPath
+                    + " relative to " + this, e);
-                    session.getQName(name), type,
+                    sessionContext.getQName(name), type,
-            InternalValue[] genValues = session.getNodeTypeInstanceHandler()
-                    .computeSystemGeneratedPropertyValues(data.getNodeState(), propDef);
+            InternalValue[] genValues =
+                sessionContext.getSessionImpl().getNodeTypeInstanceHandler()
+                .computeSystemGeneratedPropertyValues(data.getNodeState(), propDef);
-                session.getNodeTypeManager().getNodeDefinition(def);
+            sessionContext.getNodeTypeManager().getNodeDefinition(def);
-            NodeTypeRegistry registry =
-                session.getNodeTypeManager().getNodeTypeRegistry();
-            return registry.getEffectiveNodeType(
+            return sessionContext.getNodeTypeRegistry().getEffectiveNodeType(
-        NodeTypeManagerImpl ntMgr = session.getNodeTypeManager();
+        NodeTypeManagerImpl ntMgr = sessionContext.getNodeTypeManager();
-                nodeName, nodeTypeName, ntMgr.getNodeTypeRegistry());
+                nodeName, nodeTypeName, sessionContext.getNodeTypeRegistry());
-        return session.getNodeTypeManager().getPropertyDefinition(pd);
+        return sessionContext.getNodeTypeManager().getPropertyDefinition(pd);
-            NodeTypeRegistry registry =
-                session.getNodeTypeManager().getNodeTypeRegistry();
+            NodeTypeRegistry registry = sessionContext.getNodeTypeRegistry();
-            nt = session.getNodeTypeManager().getNodeType(nodeTypeName);
+            nt = sessionContext.getNodeTypeManager().getNodeType(nodeTypeName);
-                        + session.getJCRName(nodeTypeName));
+                        + sessionContext.getJCRName(nodeTypeName));
-                        + session.getJCRName(nodeTypeName));
+                        + sessionContext.getJCRName(nodeTypeName));
-                    + session.getJCRName(nodeName) + " found in " + this, e);
+                    + sessionContext.getJCRName(nodeName) + " found in " + this, e);
-                name = session.getJCRPath(new PathBuilder(path).getPath());
+                name = sessionContext.getJCRPath(new PathBuilder(path).getPath());
-                name = session.getJCRPath(new PathBuilder(path).getPath());
+                name = sessionContext.getJCRPath(new PathBuilder(path).getPath());
-            String msg = "Not allowed to reorder child node " + session.getJCRPath(childPath) + ".";
+            String msg = "Not allowed to reorder child node " + sessionContext.getJCRPath(childPath) + ".";
-            Path p = session.getQPath(srcName);
+            Path p = sessionContext.getQPath(srcName);
-                Path p = session.getQPath(destName);
+                Path p = sessionContext.getQPath(destName);
-        return setProperty(session.getQName(name), converted, type, true);
+        return setProperty(sessionContext.getQName(name), converted, type, true);
-                new SetPropertyOperation(session.getQName(name), value, true));
+                new SetPropertyOperation(sessionContext.getQName(name), value, true));
-                new SetPropertyOperation(session.getQName(name), value, false));
+                new SetPropertyOperation(sessionContext.getQName(name), value, false));
-            return isNodeType(session.getQName(nodeTypeName));
+            return isNodeType(sessionContext.getQName(nodeTypeName));
-        return session.getNodeTypeManager().getNodeType(
+        return sessionContext.getNodeTypeManager().getNodeType(
-            nta[i++] = session.getNodeTypeManager().getNodeType(iter.next());
+            nta[i++] = sessionContext.getNodeTypeManager().getNodeType(iter.next());
-            addMixin(session.getQName(mixinName));
+            addMixin(sessionContext.getQName(mixinName));
-            removeMixin(session.getQName(mixinName));
+            removeMixin(sessionContext.getQName(mixinName));
-        Name ntName = session.getQName(mixinName);
-        NodeTypeManagerImpl ntMgr = session.getNodeTypeManager();
+        Name ntName = sessionContext.getQName(mixinName);
+        NodeTypeManagerImpl ntMgr = sessionContext.getNodeTypeManager();
-            RepositoryImpl rep = (RepositoryImpl) session.getRepository();
-            srcSession = rep.createSession(session.getSubject(), workspaceName);
+            RepositoryImpl rep = (RepositoryImpl) getSession().getRepository();
+            srcSession = rep.createSession(
+                    sessionContext.getSessionImpl().getSubject(), workspaceName);
-                relPath = session.getJCRPath(p);
+                relPath = sessionContext.getJCRPath(p);
-        return session.getWorkspaceImpl().getVersionManagerImpl();
+        return sessionContext.getSessionImpl().getWorkspaceImpl().getVersionManagerImpl();
-        LockManager lockMgr = session.getWorkspace().getLockManager();
+        LockManager lockMgr = getSession().getWorkspace().getLockManager();
-        LockManager lockMgr = session.getWorkspace().getLockManager();
+        LockManager lockMgr = getSession().getWorkspace().getLockManager();
-        LockManager lockMgr = session.getWorkspace().getLockManager();
+        LockManager lockMgr = getSession().getWorkspace().getLockManager();
-        LockManager lockMgr = session.getWorkspace().getLockManager();
+        LockManager lockMgr = getSession().getWorkspace().getLockManager();
-        LockManager lockMgr = session.getWorkspace().getLockManager();
+        LockManager lockMgr = getSession().getWorkspace().getLockManager();
-        session.getLockManager().checkLock(this);
+        sessionContext.getSessionImpl().getLockManager().checkLock(this);
-                        qName = session.getQName(name);
+                        qName = sessionContext.getQName(name);
-        QueryManagerImpl qm = (QueryManagerImpl) session.getWorkspace().getQueryManager();
+        QueryManagerImpl qm = (QueryManagerImpl) getSession().getWorkspace().getQueryManager();
-            Query q = session.getWorkspace().getQueryManager().createQuery(
+            Query q = getSession().getWorkspace().getQueryManager().createQuery(
-        Name ntName = session.getQName(nodeTypeName);
+        Name ntName = sessionContext.getQName(nodeTypeName);
-        NodeTypeManagerImpl ntMgr = session.getNodeTypeManager();
+        NodeTypeManagerImpl ntMgr = sessionContext.getNodeTypeManager();
-                                                session.getValueFactory());
+                                                getSession().getValueFactory());
-                                                session.getValueFactory());
+                                                getSession().getValueFactory());
-            v = session.getValueFactory().createValue(value);
+            v = getSession().getValueFactory().createValue(value);
-            v = session.getValueFactory().createValue(value);
+            v = getSession().getValueFactory().createValue(value);
-            qName = session.getQName(newName);
+            qName = sessionContext.getQName(newName);
