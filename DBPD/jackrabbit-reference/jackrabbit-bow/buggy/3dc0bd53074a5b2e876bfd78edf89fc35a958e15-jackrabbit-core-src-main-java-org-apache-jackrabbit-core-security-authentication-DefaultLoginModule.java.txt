JCR-2851 - Authentication Mechanism Based on Login Token
JCR-2894 - AbstractLoginModule#logout() : credentials will not be clared as Subject.getPublicCredentials(Class) isn't backed by the subject internal set

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1071241 13f79535-47bb-0310-9956-ffa450edef68

-     * The login token extracted from TokenCredentials or null in case of
-     * another credentials.
+     * The TokenCredentials or null in case of another credentials.
-    private String loginToken;
+    private TokenCredentials tokenCredentials;
-        if (success && !disableTokenAuth && TokenBasedAuthentication.doCreateToken(credentials)) {
-            Session s = null;
-            try {
-                /*
-                use a different session instance to create the token
-                node in order to prevent concurrent modifications with
-                the shared system session.
-                */
-                s = session.createSession(session.getWorkspace().getName());
-                Credentials tc = TokenBasedAuthentication.createToken(user, credentials, tokenExpiration, s);
-                if (tc != null) {
-                    subject.getPublicCredentials().add(tc);
+        if (success && !disableTokenAuth) {
+            if (TokenBasedAuthentication.doCreateToken(credentials)) {
+                Session s = null;
+                try {
+                    /*
+                    use a different session instance to create the token
+                    node in order to prevent concurrent modifications with
+                    the shared system session.
+                    */
+                    s = session.createSession(session.getWorkspace().getName());
+                    Credentials tc = TokenBasedAuthentication.createToken(user, credentials, tokenExpiration, s);
+                    if (tc != null) {
+                        subject.getPublicCredentials().add(tc);
+                    }
+                } catch (RepositoryException e) {
+                    LoginException le = new LoginException("Failed to commit: " + e.getMessage());
+                    le.initCause(e);
+                    throw le;
+                } finally {
+                    if (s != null) {
+                        s.logout();
+                    }
-            } catch (RepositoryException e) {
-                LoginException le = new LoginException("Failed to commit: " + e.getMessage());
-                le.initCause(e);
-                throw le;
-            } finally {
-                if (s != null) {
-                    s.logout();
-                }
+            } else if (tokenCredentials != null) {
+                subject.getPublicCredentials().add(tokenCredentials);
-            loginToken = ((TokenCredentials) credentials).getToken();
+            tokenCredentials = ((TokenCredentials) credentials);
-                Node n = session.getNodeByIdentifier(loginToken);
+                Node n = session.getNodeByIdentifier(tokenCredentials.getToken());
-        if (!disableTokenAuth && loginToken != null) {
-            Authentication authentication = new TokenBasedAuthentication(loginToken, tokenExpiration, session);
+        if (!disableTokenAuth && tokenCredentials != null) {
+            Authentication authentication = new TokenBasedAuthentication(tokenCredentials.getToken(), tokenExpiration, session);
