- working on JCR-1339 : better support for Map. It is important to define an ID field in the class used for the Map elements. This ID will be used as a key in the map. 
- Rename ManagedHashMap into ManageableHashMap in ordrer to follow the same naming convention.
- Now, it is not necessary to define the ElementClassName if the Collection or the Map are parametrized like List<MyClass>

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@646938 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableCollectionUtil;
+import org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableObjectsUtil;
+import org.apache.jackrabbit.ocm.manager.collectionconverter.ManageableObjects;
-		
+
-			
+
-			// if it is not possible to add the CLASS_NAME_PROPERTY due to strong constraints in the 
+			// if it is not possible to add the CLASS_NAME_PROPERTY due to strong constraints in the
-		
+
-			retrieveCollectionFields(session, classDescriptor, node, object, false);			
-			
+			retrieveCollectionFields(session, classDescriptor, node, object, false);
+
-		ManageableCollection collection = null;
+		ManageableObjects objects = null;
-			collection = (ManageableCollection) proxyManager.createCollectionProxy(session, collectionConverter, parentNode,
+			objects = (ManageableCollection) proxyManager.createCollectionProxy(session, collectionConverter, parentNode,
-			collection = collectionConverter.getCollection(session, parentNode, collectionDescriptor, collectionFieldClass);
+			objects = collectionConverter.getCollection(session, parentNode, collectionDescriptor, collectionFieldClass);
-		ReflectionUtils.setNestedProperty(object, collectionDescriptor.getFieldName(), collection);
+		ReflectionUtils.setNestedProperty(object, collectionDescriptor.getFieldName(), objects);
-			ManageableCollection manageableCollection = ManageableCollectionUtil.getManageableCollection(collection);
+			ManageableObjects manageableCollection = ManageableObjectsUtil.getManageableObjects(collection);
-			ManageableCollection manageableCollection = ManageableCollectionUtil.getManageableCollection(collection);
+			ManageableObjects manageableCollection = ManageableObjectsUtil.getManageableObjects(collection);
