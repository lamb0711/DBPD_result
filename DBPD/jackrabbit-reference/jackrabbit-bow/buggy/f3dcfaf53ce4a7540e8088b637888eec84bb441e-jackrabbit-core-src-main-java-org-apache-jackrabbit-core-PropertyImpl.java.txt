JCR-1169 Distribution of commons classes (adjust jackrabbit-core)

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@590014 13f79535-47bb-0310-9956-ffa450edef68

-import org.apache.jackrabbit.name.Path;
-import org.apache.jackrabbit.name.QName;
+import org.apache.jackrabbit.spi.Path;
+import org.apache.jackrabbit.spi.Name;
+import org.apache.jackrabbit.name.NameConstants;
-                QName name = value.getQName();
+                Name name = value.getQName();
-     * this method takes a <code>QName</code> instead of a <code>String</code>
+     * this method takes a <code>Name</code> instead of a <code>String</code>
-    public void setValue(QName name)
+    public void setValue(Name name)
-                    InternalValue.create(name).toJCRValue(session.getNamespaceResolver()),
+                    InternalValue.create(name).toJCRValue(session.getNamePathResolver()),
-            internalValue = InternalValue.create(targetValue, session.getNamespaceResolver(), rep.getDataStore());
+            internalValue = InternalValue.create(targetValue, session.getNamePathResolver(), rep.getDataStore());
-     * this method takes an array of <code>QName</code> instead of
+     * this method takes an array of <code>Name</code> instead of
-    public void setValue(QName[] names)
+    public void setValue(Name[] names)
-                QName name = names[i];
+                Name name = names[i];
-                                InternalValue.create(name).toJCRValue(session.getNamespaceResolver()),
+                                InternalValue.create(name).toJCRValue(session.getNamePathResolver()),
-                        internalValue = InternalValue.create(targetValue, session.getNamespaceResolver(), rep.getDataStore());
+                        internalValue = InternalValue.create(targetValue, session.getNamePathResolver(), rep.getDataStore());
-    public QName getQName() {
+    public Name getQName() {
-            values[i] = internalValues[i].toJCRValue(session.getNamespaceResolver());
+            values[i] = internalValues[i].toJCRValue(session.getNamePathResolver());
-            return val.toJCRValue(session.getNamespaceResolver());
+            return val.toJCRValue(session.getNamePathResolver());
-        return val.toJCRValue(session.getNamespaceResolver()).getLong();
+        return val.toJCRValue(session.getNamePathResolver()).getLong();
-        return val.toJCRValue(session.getNamespaceResolver()).getDouble();
+        return val.toJCRValue(session.getNamePathResolver()).getDouble();
-        return val.toJCRValue(session.getNamespaceResolver()).getDate();
+        return val.toJCRValue(session.getNamePathResolver()).getDate();
-        return val.toJCRValue(session.getNamespaceResolver()).getBoolean();
+        return val.toJCRValue(session.getNamePathResolver()).getBoolean();
-            value = InternalValue.create(targetVal, session.getNamespaceResolver(), rep.getDataStore());
+            value = InternalValue.create(targetVal, session.getNamePathResolver(), rep.getDataStore());
-            value = InternalValue.create(targetVal, session.getNamespaceResolver(), rep.getDataStore());
+            value = InternalValue.create(targetVal, session.getNamePathResolver(), rep.getDataStore());
-                Value jcrValue = value.toJCRValue(session.getNamespaceResolver());
+                Value jcrValue = value.toJCRValue(session.getNamePathResolver());
-                value = InternalValue.create(targetVal, session.getNamespaceResolver(), rep.getDataStore());
+                value = InternalValue.create(targetVal, session.getNamePathResolver(), rep.getDataStore());
-            internalValue = InternalValue.create(targetValue, session.getNamespaceResolver(), rep.getDataStore());
+            internalValue = InternalValue.create(targetValue, session.getNamePathResolver(), rep.getDataStore());
-                        internalValue = InternalValue.create(targetValue, session.getNamespaceResolver(), rep.getDataStore());
+                        internalValue = InternalValue.create(targetValue, session.getNamePathResolver(), rep.getDataStore());
-            value = InternalValue.create(targetVal, session.getNamespaceResolver(), rep.getDataStore());
+            value = InternalValue.create(targetVal, session.getNamePathResolver(), rep.getDataStore());
-                if (targetNode.isNodeType(QName.MIX_REFERENCEABLE)) {
+                if (targetNode.isNodeType(NameConstants.MIX_REFERENCEABLE)) {
-            value = InternalValue.create(targetVal, session.getNamespaceResolver(), rep.getDataStore());
+            value = InternalValue.create(targetVal, session.getNamePathResolver(), rep.getDataStore());
-            internalValue = InternalValue.create(targetVal, session.getNamespaceResolver(), rep.getDataStore());
+            internalValue = InternalValue.create(targetVal, session.getNamePathResolver(), rep.getDataStore());
-            internalValue = InternalValue.create(value, session.getNamespaceResolver(), rep.getDataStore());
+            internalValue = InternalValue.create(value, session.getNamePathResolver(), rep.getDataStore());
-                        internalValue = InternalValue.create(targetVal, session.getNamespaceResolver(), rep.getDataStore());
+                        internalValue = InternalValue.create(targetVal, session.getNamePathResolver(), rep.getDataStore());
-                        internalValue = InternalValue.create(value, session.getNamespaceResolver(), rep.getDataStore());
+                        internalValue = InternalValue.create(value, session.getNamePathResolver(), rep.getDataStore());
